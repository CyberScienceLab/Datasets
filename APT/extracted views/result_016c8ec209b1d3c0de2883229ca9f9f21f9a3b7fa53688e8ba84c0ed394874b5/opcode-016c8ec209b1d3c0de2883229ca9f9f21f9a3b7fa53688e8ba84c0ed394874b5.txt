mov adc add inc outsl outsl insb gs outsb add or add mov insb jae add jb lea sub add push outsl (bad) testl pop dec outsb je addr16 and rcrb xor add jns insb daa push outsl jb add jns incl imul add or push je sub movsb inc or cmp popa into push cld add (bad) add xor push les add and sti incl push dec bound arpl push sbb jle roll sub (bad) dec ss or arpl add pop sti jmp fs add clc jmp adc xchg mov int3 push mov faddp ficom cs out sbb push add insb sbb push pop pop pop inc jo xchg insb pop adc sar mov pop jmp lfs jb mov test jb jb movsb mov jb cwtl xchg nop mov jb mov jb je les jb insb push jb fcom pusha pop jb jb in call jb push push dec push add mov (bad) push call sub je movzwl daa fucomp xor ret (bad) dec inc inc daa daa daa daa cmp xor (bad) in and sub mov add push ljmp add test jne xor pop enter (bad) (bad) jg mov mov ret lea mov mov mov inc cmp jne mov fucomp sti push mov mov push nop mov add scas mov mov xchg mov (bad) in mov mov mov or adc (bad) mov aaa push mov push or pushl mov push push mov mov mov mov neg (bad) pop pusha add rcrl mov imul incb push or ret and add inc mov or mov jg add jmp add push jne aaa sub mov cmp jne (bad) mov cmp loopne aaa pop pop pop push fbstp je sti mov xchg cmp jb mov add call ja addr16 sbb sub outsl fwait push jne ret jmp pop mov add pop sub fimul repnz sub jbe sbb es push sub mov lock aam or jmp sbb scas sbb sti jne pop adc es mov cmp dec add mov test and add push push (bad) aas inc push jg mov mov test je mov mov push add add outsb mov push mov data16 dec imul push lahf push pop icebp mov or dec pushf cmpl in loope or mov in mov roll or pop xor lret and call sub mov mov push in es ja mov add lods std xor cmp je jae or lea cmp or sbb xlat push or mov les mov mov cmpsl mov cmpl subl mov popf cmpsb pusha sbb pop push adc jg jne hlt outsl mov mov and loope jb sbb loop mov mov sub or lds mov fistl mov sti and mov cmp or or dec xchg adc sti push push mov pop dec jmp cmpsl movsl loopne sbb mov push inc daa push jb inc add sbb cmp add nop out sub or mov and add sbb xlat nop movsb loopne sbb inc addl mov dec (bad) (bad) fsub outsb ja clc mov (bad) aas pop mov (bad) out (bad) repnz (bad) xor idivb cli xlat ja inc xlat mov push (bad) in je mov and xor cmc fnsave push (bad) pop add fst mov jne sub cmp pop movsl and push mov push xchg insl pop mov add cmpsl out cli jl add mov add or jle xchg push mov sub push stos call scas xor lea mov jne sub pop add sbbl lea test mov jmp imul jne pop push xchg xchg cmp punpckhbw sub inc popf insl nop popa js mov ret shll stc mov stc lock add clc insl clc out adcb jae mov out rorl sbb xchg mov push test je and ret addr16 add mov or adc or lock ja jmp pop sbb (bad) add sbb in ss push loopne xchg pushl mov push cmp add jl and mov leave outsb adc push cli fnsave and cmpl jnp into fldt jle hlt inc cmp in mov adc add rcrb pop pop ds pop pop push adc sub push fstpl jl mov mov outsb test test shlb nop sbb lods add in adc jo out gs add add push push dec xor outsl push test bound jmp mov sbb sbb fistpl push cmp ja or cmp pop jg adc test jns add sar jle addl cwtl mov jmp sub mov sub mov pop adc sti inc inc push pop add or mov cmp das jne or sbb add sbb cmp jl movl in xor sahf es or or add mov mov and add sub test cld jmp aas aaa mov adc insl cmc hlt (bad) or push or push rolb and dec repnz or ret decb popl push fidiv loope or jp push add cmpsb (bad) sub cmc adc ret aas or add or or je mov sub cmp cmp popa sub (bad) or mov ljmp add or fsubs (bad) mov adc inc or andl mov scas pop movsb or movb aad add ljmp mov push lea jo or sub cld jg clc sub sub cmp jge adc or out ds or lea and or mov sub lds pop sti xchg test add adc (bad) xor jp or push sub add iret mov mov mov add sub jo (bad) imul test mov repz adc adc mov mov sbb cmp inc adc cmp add sub cmp or in or mov mov scas add inc adc or movb adc mov or adc mov xchg sbb cmp lea movsl stos loopne call lods test mov cltd or pop adc sbb fsubs int3 sub add mov or fs (bad) push and sub cmpl bound subl push mov and sbb leave aam loopne in cmp mov sbb add enter pusha pop pop inc stc lcall rol pusha or lods fimul mov mov add lcall (bad) jne jmp inc mov mov adc sbb mov pop movd lods push insb pop cmp jg pop mov pop je pop jmp mov rcrl in dec sbb add pusha test pop jle (bad) cmp mov sub cmpl adc ret pop cmp inc add xor jae loope sub xor orl pop mov and leave jmp inc add jne js mov or pop rcl adc test xor movsb pusha or je push scas push int3 sti clc stos jle inc cld jbe cld add adc test mov mov xchg push in cli add or sti mov mov mov daa jg push movsb pop or movb cmp or (bad) jne push or jns mov jmp mov jge xor pop sub or push jecxz lcall inc jae and jmp mov sub jg sub fdiv push (bad) mov add cmpsb xor leave mov adc arpl add pop popa jne pop push push sbb mov sub jne out push pop cmp (bad) jo xor mov pop lock test jne ret jne decl in mov sub mov test loope push or (bad) into andl or je pop xor cmp push jl nopl ret mov cmp loopne,pt sub in add jle sbb test pusha lds mov test je sbb mov inc cli (bad) or orl jmp mov cmpl clc push add subl or adc cltd jae and cmp add push dec xor jg add out loope cmpsl (bad) mov (bad) jge adc lds (bad) mov (bad) lock mov or orl stos jno (bad) into testb adc mov cli add punpcklbw jae sub rorb testb cmpsb test pop jbe add test push pop and cmpb ja push mov pop addr16 and iret adc dec addr16 lcall inc (bad) mov insl lcall mov icebp test sub popa dec add lods inc cmp sbb cmp dec and mov rorb xchg or add lret cmp mov cmp hlt mov fdivs cmpxchg inc rolb jmp (bad) mov cmc adc push int3 test sbb flds pop adc add ss dec in inc mov cwtl and or fcmovnbe sub test add inc adc lret xchg dec sbb (bad) adc cmpsl call or sarb adc negb stos xor add (bad) repz je rcrl jg or sbb enter sub in pop or add push jmp mov subl bound mov repz push mov xor mov push lock mov ret rol xchg subl add inc sbb pop mov sbb inc or das decb out mov mov mov or cmp add sbb fdivr vandnps cmp ja mov mov hlt (bad) iret pop inc pop fdivrl and adc push loope sub call xor inc cmp fadds rclb ljmp jp mov mov inc or je pop jle cmp pushl cld ret sub inc fdivrl sarl (bad) mov inc rep jmp mov sbb in leave jmp mov jmp mov cmp xchg pop adc fcomps mov cmp divl int3 outsb outsl ret dec js rep xchg add xor lea xor std xor (bad) ds inc cmp jb cmp ja sub ret nop mov aas add loop sub fstps pop push loopne jo sub fist fwait pop pop pop in or fldenv fwait orw or jo js (bad) fldcw pop inc in sub add ror adc xchg clc mov data16 jb mov repnz sub push fdivl inc fsubr sbb outsl mov cmp and mov add shrb sti (bad) pusha out mov sbb test (bad) mov jl mov cmp mov fcos lcall xlat adc jne call mov test adc and sbb sahf jmp cmp mov mov js (bad) jbe pop mov xor mov inc add jb cmp ja mov mov jmp mov inc inc add ret mov sub jbe mov pop pop jge push leave mov inc xchg mov sahf rcr lret mov inc and lret imul and add push shr je mov pop cmp jne dec mov pop add mov bound or loop push adc push ja add and sbb push cmp jne push adc add js mov adc add jne add adc pop cmp cmp jne shr lods adc add push mov shr or mov cmp (bad) in and sbb out mov cmp jne dec xor cmpsb jns dec and pusha dec rcrb pushf mov jecxz aaa pop sub int loopne data16 enter pop or stos adc pop test outsb daa push push insb sub mov pop cmc or push inc cmp je mov or je or je mov js pop pop je xor dec mov dec inc mov or (bad) mov and ja cmp ja lea push add push incl dec je sarb jmp inc mov js pop sub lcall lds pushf mov (bad) into pop xchg (bad) add push adc push lock ja add scas leave pushf add aad (bad) aaa adc mov xlat mov sbb sbb mov jbe sub mov dec jne pop decb cmp pop repz mov outsb sbb sub ss dec je adc lea std ja pop lea fldt and add pushf (bad) pcmpeqb test push notb lods fsubl inc aas das jmp pop xchg jge mov xchg push xchg xor xor call fstp fldt inc mov pusha fldz mov jl in inc jg aas mov jl leave inc cli or or ret (bad) in lahf and adc mov xchg vpcomud and inc mov sti lock mov lock sbb sub test scas xor out sub pop jecxz add leave sbb xor cs jbe imul cmp mov fwait (bad) stc add (bad) mov bound cmpb xlat fadds out nop lods outsb xor xchg push or push push int3 aad (bad) dec sbb rorl mov push pop test enter mov inc push (bad) (bad) (bad) jg hlt daa (bad) lret into pop inc test xchg clc js aas sbbl pop (bad) mov addr16 (bad) (bad) incl inc xchg and cld gs sahf mov sub inc aad iret decl (bad) (bad) fistpl js inc mov stos mov cmp or mov pop out sub (bad) (bad) jmp imul (bad) divl jl xor cmp call mov (bad) (bad) jg sti jmp stos push inc mov push sbb sarb repnz test nop (bad) (bad) (bad) incl daa movsb lahf nop inc pop stos clc scas adc (bad) inc pop pushf mov pop pushf mov fs aam imul loope (bad) (bad) (bad) (bad) jp iret inc bound ds push cmpsb scas mov pop or addl dec in xchg cmp xor in cmp sahf xchg pop cmpsb lock mov popa (bad) (bad) lcall mov and addr16 repz mov subb and cmp lock aad bound xor jmp lcall mov sbb add and rolb add mov dec dec xor cmpsl int and mov lea push push lods mov sub mov dec dec xor push push mov xor cmp movl data16 add rcr pause mov sub sub xchg out mov (bad) pushw mov pop aas or (bad) fbld mov adc inc push push inc push inc pop inc outsl jb ret jmp fs inc gs jo imul push dec popa jae push popa insb jne cmp jecxz in (bad) mov cmc (bad) ljmp scas lock xlat mov xor mov inc stos sbb ja jle or push mov or dec cld jne dec mov xor mov out jne stos repnz mov ss push mov fsubrl addr16 in add and or push rcrb je mov int3 or rcr test or movups fs mov test hlt icebp fsts xor pop mov loopne pop xor call (bad) mov jl mov xor rcr add push shr dec rep pop jmp sub hlt add pop fadd add sbb in cmp je pop mov pop test or dec push mov mov push sbb mov or lods (bad) mov mov rorb js fsubr mov inc xchg cmp push pop push cmc (bad) jb (bad) add jmp rorb jbe nop add add ret in das (bad) mov (bad) sub clc pop movsb xor out adc (bad) mov and xchg xor add mov push ljmp call lea sbb mov fbld in cmp (bad) push ja mov scas stos mov call add mov icebp in stos or xor xor jb cmp fmull or aaa or or push inc pop popa sbb inc fcoml mov add es and aaa test mov mov cmp je mov leave jne mov cmpsb xchg jmp lret sbb test sqrtps scas je pop in test call sbb pop add sub mov pop cs xchg les pop add xor pop ljmp mov mov xor das mov insb sarb cs orb fdivl inc pop push aam or data16 rolb pop das cld test ljmp lock (bad) mull xor decl xchg std out scas mov je movb dec push cmp sbb add dec jne (bad) hlt lcall push jmp add sbb jecxz push mov dec cmp fistp pop sahf enter shr mov mov lcall xor call jb push pop add mov jl ljmp cmpb hlt xor push adc mov mov (bad) sbb add and or scas sbbl mov cmc hlt hlt or mov push mov fsts xor push push clc (bad) xchg test jg scas stos mov jo call sub incb sbb add (bad) (bad) in push call xor aaa mov push pusha push push fwait xchg pop iret cs lret and scas cmpsl insl addb inc xlat pop push in (bad) ljmp mov cmpb je or subl inc jmp add (bad) mov sbb jecxz sbb (bad) adc or pop fdivrl adc fnsave (bad) aam call add jne fidivr aaa jge mov dec adc outsb adc pushf mov jne mov test (bad) pop ret lods adc out inc inc cmpl cmpl je dec and js dec sub sub add pop push pop sbb stos aaa jbe xchg pop cmc enter adc adcl push lea xorl je orl aad pop or adc push sub push push cmp sub or test mov imul loopne mov add mov (bad) fstpl jmp xlat mov dec adc dec mov inc or push loope inc outsl je dec or inc sub mov or pusha adc push or mov lea mov add push pop mov out sub repnz orb lock fdivrs dec fdivs xchg mov lock lcall lods push aaa call pushw push dec jne cmp push fisubr adc inc decl out daa mov nop mov inc xor inc daa adc pop lods add cmp inc mov pop adc cwtl dec sub pusha sub jbe pop (bad) cmpsl pop out montmul cmpsb movl or test jg (bad) xchg push jp mov push push push push push jo or mov mov es mov cmp jno sub sbb mov inc or push add (bad) or pusha adc fild rorb sahf sub lea mov jb lods pop mov int3 jmp ret xor mov xlat mov add idivl add je cmp in jl je sub and jmp add jno (bad) aas sub jb je jmp cmp sub xchg mov inc adc sub (bad) sti (bad) (bad) cmp mov jmp mov jmp mov jmp mov jmp push sbb into jo (bad) (bad) jmp mov jmp mov jmp mov jmp mov aam cmpsl ss or pop cmp pusha push dec inc mov jecxz jnp ja lea (bad) je push outsl lcall cmp cmp test mov sbb add out cmp inc sti and inc fadds pop add sbb push adc loope and ret loope inc or push or adc xor cmp cmpsb add or mov cmp je cmp jne and (bad) mov dec aas stc add cmp adc mov dec mov inc fiadd call and mov pop jecxz adc js inc lods icebp shrl or pop (bad) push lods daa clc mov mov mov jl ljmp (bad) sbb gs mov movl sbb out or mov movd mov clc test add repnz ss cmp sbb sahf push add add dec nop adc dec jne pop pop pop inc pop sbb jmp dec clc xor add mov xchg or mov clc nop mov add jg fcomps xor or and mov es divb test mov mov push fisttpl jbe sbb jl jecxz lahf xor sbb inc fistp push movsl pop sbb ja add mov mov push or cmpsb movsl (bad) mov dec test sbb mov loopne mov cmpl insb jle mov stos jmp push mov sti add and add cmp xor push add adc adc xchg cmp addl pop cld or mov cmpl je cmpl mov inc rorb and pop mov call and dec and iret sub or add or mov sub clc sbb fwait inc adc sbb pop in inc adc cmp or push insl pusha popa sbb and jbe scas adc rorl cmp jne cmp adc loop mov mov lock ret pop addr16 lods push outsl ret mov pusha push enter inc aaa mov das imul adc imul mov pusha adc aas test pop ds (bad) or aaa into hlt add rcrb faddp mov mov inc inc and in mov mov push or push mov fisubl xor or sbb cmp (bad) mov clc dec jl lock push lea and es pop push stc push int3 adc movl or fisubl dec push push mov and inc jg inc inc xor or adc sbb mov mov notl xchg jle iret jle aas pop icebp and add loopne push adc add adc bound movl jne jg cmp sbb das stc mov call or mov cmp lock cmp cmp sbb mov icebp add sbb jb lahf add fwait pop cmp cld jmp pop lods push jp jmp lea cmp push mov add (bad) adc pop mov sbb and fistpl mov cmp xor sbb dec and cmp sbb pop push mov mov push add shl and or add add into pop fsubrl sub call pop sub jmp in popf pop sub and pop pop or fcmovu imul push addr16 in add fnstenv mov inc xchg loopne pusha jo push inc repnz lds pop add pop pop xor loopne cld outsl push je pop cld addb fnstcw or push (bad) fcmovnb xchg aas add inc cld ret push aas fimul test (bad) fcomip mov lret mov push cld add cmp pop sahf mov mov mov adc mov sub (bad) jmp cmp adc or scas das nop sub add (bad) mov rorl add (bad) je sti popf call mov lds push sbb xchg dec mov loope lret psubusb or sub xchg adc or outsl xchg hlt cmp add or mov xor iret fs dec jne mov lock and jge and aaa add dec jmp cmp push jle pushf sbb rorl out into pop dec jne mov or add scas adc xchg pop lea jmp xchg jg jl popl sub (bad) imul mov xchg pop dec ja pop dec and inc mov add or lock and and mov shr aam scas pop lods or das add test dec push ret add cmpsb je lahf cmp (bad) loope xchg cs mov push out pop adc dec inc xor mov das xor getsec cli inc or sub dec jl test (bad) sbb fidivrl sub into sbb adc stos aam push in adc shr in push mov inc jmp and int3 aaa scas (bad) xor lret or sub jge mov ret push (bad) mov jle inc sub add lea inc dec shl loope push push cli mov jmp push lahf cltd mov push mov out (bad) dec jge cmp adc imul add gs rcr pop cmp mov mov lea lock pop addb lock insb jmp pushf negb mov push insb dec js mov inc jb xor adc loopne cmp pop fdivl mov mov pop push push and cmp and sbb push loopne mov loopne sbb mov mov push and (bad) mov sub scas push mov (bad) arpl cli pop cmp (bad) adc pop inc ret lock push push (bad) lock inc nop/reserved rorb into js add mov in push sub inc clc in cmpsl push cmp call shrb mov pop in jle add jmp leave jae inc pop jl push mov mov sub cmp ret ss (bad) fnstsw push push dec push das int3 stos pop orb lock mov and shrl add ss das add jl add add (bad) inc mov add bnd je mov and stc fcmovbe adc scas add pushaw and fs push cvtps2pd or adc clc sub aaa mov xor inc cld pop dec cmp nop pushf lcall maskmovq mull clc push lods add add or dec or or je jle cltd xor mov pop stos add mov notb leave xchg dec dec ss jg mov dec xor pop loopne je mov adc pop test pop mov aaa cmp lcall das sahf mov xchg insl punpcklwd or or subb decl and or je cmp into cmp je mov jo or mov mov clc jmp adc or adc jmp xchg aad push or adc push adc cmp pop jmp cmp mov sub dec jns jmp sbb and out (bad) imul mov call pusha aad mov jns adc ds pop or cwtl jbe pop fisubr mov cmp or pop mov lret cmp rol dec daa ja ss outsb es adc or repz jb or jne inc mov sub daa fcompl and jmp ret xor fstl mov scas xchg adc sub nop adc ja (bad) pop dec inc add cld sbb clc push xor adc sarl add add xor push mov cmp mov imul pop cmp pop imul jo pusha push pop pop or bound shll dec mov add movb and aas cmp pop insb lea mov sbbb repnz rolb push fwait ret inc dec cwtl or pop jmp mov mov push mov jns xor mov cwtl lea in ds fadd idiv dec jne cmp add add cvtpi2ps adc paddsw popa inc push mov imul adc pop xor in rorb out sub fcomi sub jmp cmpsl std adc ret test les cmp cmp or ja sti add add inc ljmp mov icebp mov jo add je dec test cmp call jae lret adc popa adc add (bad) shr mov scas addl jmp mov arpl sbbl jmp mov test add pop adc add dec pop pop ret xchg cmp sub xor pop popf xor adc or or sub jl (bad) fistpll mov mov sub inc jmp cmp jo fldt jne mov inc and sub push test decb sbb xor idivb add sub inc jae (bad) popa mov add ljmp jb scas cmc push dec out jp clc and int in xor sbb aaa mov out add or jb jmp jl andl out pushl jmp jg mov cltd (bad) jo xor push adc movsb mov (bad) add adc or inc push mov adc push inc xor ljmp mov je out xor (bad) push popa scas (bad) add ficoml cmp jae sub dec out mov cmp or adc mov cs jg lret pusha lock push xor clc loopne jmp sub mov jmp mov std pop setb jmp setl cmp je dec add inc insb rorb stos roll or add push test dec xchg mov xlat push mov sbbb loope out loopne mov mov pop add in or cmp pop mov and ss lods mov xor lock test inc add movb push call pop popa adc dec mulb jbe insl call cmpb call pop sbb cmp jne mov cmp jge xor sbb loopne sbb scas xchg add mov sub add sbb mov dec mov pop decl stos mov mov cmpsl add lret in jge xlat sahf or or xor xchg dec in push xchg pop and stos je dec push dec add fldl les add aam cmp adc test add push cmpl jle cwtl or xchg dec and jo and inc fimull cltd or fisttpl test enter mov adc lds cmp add inc andl cmpsl lock push xchg adc cmpsl pushf jmp fisubr lock mull outsl inc insb dec (bad) cmp mov cmp jle repnz jge or mov (bad) jo inc inc or dec push clc add inc push adc pop sub pop addr16 inc lods xorb push push hlt xor into xor jge add xchg mov adc sbb push ret pusha xchg orps ret (bad) mov or inc into cmp roll popf mov xchg mov call popf rdpmc pop lock jne shl and xchg push adcl fistpl dec sub out sbb fiaddl jl push push push mov jge lret clc xlat pop pop pop cli sbb cmpsb (bad) in sbb inc call mov pop jne add dec (bad) rclb aas test add dec test jo jne push or test test les push insl ret xchg scas cltd mov add or ret mov xchg mov loopne mov scas aad adc pop ror jecxz jmp sub jmp into cmp jne (bad) nop mov test js sbb push sbb mov push fimul push out and pop test jl jp rcl sbb jnp lods sub movsb inc ret cmp cmp out ja js pop jne push ds loope inc add or mov into and push (bad) ljmp xor insb jnp iret (bad) movsl jno shr dec (bad) sub add inc cmp push divb sbb push lods imul out and xlat dec mov loop mov jbe sti outsb inc cmp test sub dec push je sbb mov cmp inc adc lcall pop ret imul (bad) incl gs xor cs insb pop inc gs outsl outsb addr16 popa je dec popa insl gs mov mov (bad) data16 leave pop sbb frstor js inc out and mov int3 push and add cmp addl sahf adc stc push sub inc lea mov movsl subl (bad) popf sar fdivrs iret int pusha cmpsl pusha cmp push repnz cwtl test cmpsl add sbb stos and and popf push lods repz pop outsb add cmpb lock jge es enter mov in xor scas push add cmp stos pop cmp jne adc sarb orb js (bad) sub sbb add add lods mov add les xor cmc add (bad) mov jle data16 popa jb pop lods data16 mov jae aaa jl jbe xchg inc cltd inc jo sbb add nop daa dec cmpsl add in add mov loope sti mov adc jbe mov sbb loopne add ja lds jl imul add aaa dec in sbb icebp mov mov dec xor (bad) fcos fisubr adc cmpsl cli mov cwtl loopne ss scas cmp and sub sbb mov dec or xchg sub mov (bad) mov mov xor or (bad) int3 pop les inc jecxz stos movsb sbb lock cmp cmp mov jmp mov jg mov cmp jne inc cmpsb jp cmp ret cmp les add mov mov sub and push ret and or (bad) cmp dec push inc rcrl je sbb inc popa ss push push mov inc fmull mov pop sbb xor mov pop ret sbb inc sbb adc xchg shrl adc adc and into push js inc mov adc dec and cmp es xchg or dec js inc (bad) jns pop les mov ret push xlat mov mov mov pop fs (bad) pop cmc (bad) mov (bad) call inc hlt movzwl inc cmp ja mov inc jmp cmp lret lea cmp ja fcmovb jmp or sar imul mov adc sbb and lret mov test and and popf (bad) dec pusha rolb js mov add mov add dec movb shll mov dec (bad) aas jnp jbe pop add cmp lea push sbb lock push inc or cmp inc add outsb dec loop push jnp (bad) mov inc xor das xor fdiv sub inc test je fucomip and or sbb loope and je cmp adc mov mov sti orb mov pop out cwtl and or jg cmp mov pop lea dec dec cld mov inc inc push adc inc lcall cmp or jmp out cmp inc inc inc mov adc jne ret xor les cli xorb sbb bound fisttpll (bad) jb inc mov (bad) out scas add pop (bad) stc lret mov cs je adc orb inc lea pop cltd std adc ficomp xor inc push and mov aas xor pop pop test fmull movsl ror jmp adc in stc lcall popf pusha mov xchg mov dec jo pushf pop add fadds sub and pop inc xor pop (bad) and dec mov add pop pop add cmp mov push dec dec lock mov adc add cld aaa cmc mov cmpl add pop popf (bad) leave mov adc adc jg test enter cmp cltd or add xor push out pop ds lock add pop lea push push push fnsave lock adc lods mov and pushf add mov mov pop nop bound nop sbb daa stos pop icebp pop adc mov and mov inc xchg mov in aam mul jbe mov subl add (bad) or add xor nop add or push dec adc test bnd popf (bad) and adc adc inc jns xchg adc cmp add add in sub xchg call sub clc add les pop jmp imul call jp ja ja mov divb aad mov clc shrb hlt push push dec mov mov pusha loope cmpl lcall inc inc xlat jge or jmp push mov sub mov pusha mov test jne je sti jle adc jns push xchg mov icebp and add mov je sti fcmovnb mov outsb jnp cmp pop arpl mov fnstcw sub lods or rorb cmp jge in out dec mov pop mov push dec push mov iret rclb xor mov andl pop pop jl push out rorb push push inc add add jns mov dec push or sub jb xor jo xlat mov (bad) add cs in inc fisttpl jg or push gs mov or jb imul es imul inc push mov arpl inc gs jne je dec outsl je in fucomip out imul mov gs outsl inc arpl or adc ret or jb (bad) (bad) jnp xor xor (bad) outsl insl bound outsl js imul pop cld outsl ja nop hlt cmp andps outsb dec inc xor (bad) mov dec add adc jns mov dec mov cmp cmp cmp cmp sub and cmp cmp sbb adc cmp cmp or add mov add mov pushf pushf lock call pushf loopne fcom pushf pushf pushf pushf ror enter pushf pushf sarb mov test pushf pushf pushf pushf mov pushf pushf pushf nop mov pushf cmpb pushf pushf pushf jo push pushf pusha pop pop push pushf pushf pushf pushf push dec dec inc pushf pushf pushf pushf inc cmp xor pushf pushf pushf xor and pushf pushf pushf and pop mov push push test jl je daa daa daa daa insb push daa daa pop pop push push daa daa daa daa dec dec inc inc daa daa daa daa cmp xor daa daa daa daa sub and daa daa daa daa sbb adc daa daa daa daa or add xchg xchg xchg daa cld mov xchg xchg lock call xchg loopne fcom xchg xchg xchg xchg ror enter xchg xchg sarb mov test xchg xchg xchg xchg mov xchg xchg xchg nop mov xchg cmpb xchg xchg xchg jo push xchg pusha inc cmpsl inc xor leave leave leave sub xor leave leave leave sub cmp leave leave leave sbb or leave leave leave or cld cmpsb in in clc hlt lock in in call in in aam int3 in in enter in in mov in in movsb mov in xchg nop mov in in test in je insb in in push in in push push dec in in dec inc inc cmp in in xor sub in in and sbb in in adc or in in add cld movsl outsb adc clc hlt movsl mov pushf pushf fmull call leave leave test aam leave leave leave leave int3 enter leave leave leave mov leave leave leave lods test mov pushf cwtl xchg nop leave leave leave leave mov leave leave jl je leave leave leave leave insb push leave leave pop pop push push leave leave leave leave dec dec inc inc leave leave leave leave cmp xor leave leave leave leave sub and leave leave leave leave sbb adc leave leave leave leave or add in fs movsb clc hlt lock in in call in fnop aam in in int3 enter in in mov in lods test mov pushf cwtl xchg nop add clc out movzwl shl or repnz dec mov nop cmc popf popf mov js cwtl mov mov (bad) or xor mov scas push mov movswl add inc and (bad) fcompl pop pop mov or clc xlat stos adc push sub das push dec rcr jo dec mov mov dec cs aaa lock adc cmp repz and fs mov das push push sub pop test pop pop mov in mov scas cmpsl mov cmpsb aam stos and and scas push scas bnd jb inc push jge push mov sbb sbb ret xor push lods ss fs cltd out cmp repnz inc pop pushf hlt lock or add push mov dec popa gs aam aaa add dec push push dec inc inc dec add outsl scas std in or pop push and dec push inc push dec imul adc push rorb pop sub ja sti fstl dec pop dec dec dec inc push das addr16 outsb je outsb enter je and movsb gs push sub jb test psllw jb jb repz cmc divb jb idiv stc cli jb jb sti cld std (bad) jb jb jmp loope jb jb jecxz in jb jb out jmp jb in in out jb jb out rcl (bad) jb jb rcl aad jb jb xlat fcomp fidivl jb fcmovnu fstp jb jb ffreep rol jb jb (bad) (bad) jb jb enter jb jb int3 int jb jb iret mov mov jb jb mov mov jb jb mov jb mov jb jb mov jb mov jb jb test stos dec repnz jae das cmp pop xchg addb cwtl out pop fsubrs add daa stos push inc inc add sub aaa push mov movsb xchg or arpl je outsl outsb mov add fisttpll push push adc sbb insb in and in aaa call dec jb dec sub push inc dec gs jo nop xchg pushf pop mov mov fsubs inc dec jne dec dec gs outsl jb xchg add insl sti std dec xlat or outsb mov xor scas dec push int ds loopne pusha pop adc xchg (bad) mov mov jae enter xlat in mov adc jl mov outsl mov xchg or imul nop pushf scas push lods inc cs jle popa outsb sbbl hlt outsb add pop or dec jbe mov repnz outsl ja push jbe sub mov inc sti rcl nop test test inc add add data16 pusha xchg push jo add ds mov xor inc fisubl scas pop xor popa jo shl xchg pusha mov in push outsb fs or ds xchg or movsbl sub inc fs sub aas or ja jbe loopne inc popa jae (bad) mov sub inc xchg sbb orl sbb shrb sub xchg adc sub dec loopne jae adc sbbl or xchg push jb insb add aam aam pop add arpl or dec jbe xor daa mov ret adc fbstp inc inc popa mov (bad) mov orb in pop (bad) in in push mov mov and mov lcall mov mov mov mov sbb xchg fmull mov or adc pop and lock push push jl les (bad) popa decw add (bad) insb jle add aaa xor push bound or mov out inc cmp add xchg sub inc fist les adc jb popa outsl (bad) cld add jne int3 add int3 shr fld aam ret inc shr test nop fstpl mov mov cmp sbb out xor jnp sbb lock hlt (bad) push loopne sbb mov outsb inc mov fildl roll and dec subl push mov insb adc ret arpl cmp fmuls jg xchg pop cmp shr div leave pop push add (bad) das std pop es push lret mov mov imul hlt add pusha xor or xchg stos (bad) xlat dec rclb mov pinsrw notl add or fisttpl inc push call out mov ja popa mov adc cwtl (bad) scas imul and fdivrl outsb or mov xchg add inc push int3 aaa bound hlt inc mov push inc inc dec cmp jg iret add inc pop add scas mov incl sarl jbe mov adc cmpsb je movzbl push push incl cmpsl mov or mov dec loop ljmp rcr std inc jne inc inc ds mov pop add cwtl jle rcrb mov (bad) (bad) out and sti je cs ret add in out pop push aam sbb inc push and outsl jne push xchg lcall or xor test or adc in insb mov clc addr16 arpl and or cmc sub sbb jb cmp jbe outsl add mov lods lock rcrb push push adc icebp push dec dec mov add xchg mov pushl and jl cmpb jbe adc test fcmovnbe ds and clc push sub aas (bad) lret inc clc jno pop or fsubl in nop pop test mov mov jnp insb (bad) add adc pop mov mov ret or je ljmp jge add jg lea push cmpb cwtl push ficompl inc jmp daa and push decl sbb ret cmpsl aaa inc bt or inc and in dec xor in loope jne enter rcl jb,pt xor lcall aas sub pop ds outsb adc sub pop or push lock cmp xor (bad) xor push mov or cmp int3 add add or jmp (bad) mov xchg push xchg in rolb orb lock mov (bad) (bad) jb sub je (bad) jae cmp jl inc mov ljmp adc or incb jmp jae inc dec jne mov jmp sarb xchg jae mov inc ljmp mov (bad) div dec daa jne and cmp jb push pop mov in (bad) (bad) jg pop pop sub sub jbe add mov sub jmp add dec jne push fcompp call out in adc leave push outsb cltd cmp mov add (bad) mov movsb fidiv mov repz jecxz mov pop mov negl subl gs jae (bad) int3 sub dec inc loop mov arpl xor or outsb dec sub and adc in mov jnp mov andl push and fistp ret add fnstcw sub add rorl (bad) fdivr mov pop mov xor add push sub rcrl mov ffree or (bad) ffree ffree ffree pop aad aam add adc aad shll push or jge pushf movsb movsb and cmp rcrb push push mov imul out xchg andl pop add lock mov lea and or scas mov addl insl cmp push (bad) out adc add scas mov repnz mov push mov aas cmp xor inc mov scas jmp dec aas sub inc sbb push insb sar cmp mov mov xchg pop mov loopne xor fldl (bad) pop or jo or mov mov jp aaa movb in andb jl inc xchg mov adc or add mov dec rolb mov push pop mov lock mov insl lock std and add xchg add ss push (bad) push inc ljmp jne pop addr16 xchg (bad) int3 and add xchg push pusha dec ret nop sbb out out and mov fsubs or add out test notb loop aaa jmp and cmp mov mov jnp sub jg cmp out cmp ja mov and loope push inc ja sbb jnp clc or push sub js add dec mov mov movl push inc dec xchg (bad) xor push in inc lods fld orb pusha xchg jp inc pop push sarl int3 mov push pop (bad) aaa push or out imull dec pop xor js add and cs mov sahf push add js cmpsl stos jae das andps (bad) ds or and jns push data16 and xchg mov cmp je pop add jle jo cmp sahf out rcll xor push (bad) hlt mov cmp and sub sbb scas js inc mov xchg inc sbb sbb daa and xor ja jl cmp lock je lock (bad) mov ret mov icebp fst or call pushl sbb roll jne dec inc jg mov cmp cli pushf ror sub jmp js and test mov mov inc das pop cmp (bad) mov (bad) outsl push sbb dec jge fsts push jg (bad) jmp cmpsl mov nop cs or push (bad) lock cld push push addb adc call sub rolb ficoml hlt clc cld push jnp pop xor mov scas inc call test call inc xchg mov xchg and test lock ret nop add or inc mov mov aam cmp inc jmp mov sbbl sbb jl jle or dec not mov orb clc cmp movsl into sbb xchg daa movsb pop pop ret int3 jns stos fdivs mov add lret pop lret (bad) xlat or arpl (bad) pop (bad) shrl adc lcall jmp out icebp aas repnz (bad) aas xor xor repz mov mov (bad) fldcw je dec scas icebp lea icebp pop cmp cli xor jge and fisttpl addb or and flds mov test add out data16 jne scas hlt inc inc cmp cmp out jb insb aas divb inc dec je mov mov pop sub jbe sbb pop sub pop push inc (bad) lods mov mov push add lds in jo test je inc mov inc pop or out mov xchg dec push inc aad sbb mov and and ja pop adc cli test and pop jbe mov iret hlt xlat cmpsl push mov les push or movb les add and and mov fiadd sub or cmp je dec jmp adc pop sub sbb xchg push pop push (bad) lock (bad) push (bad) outsb add inc fidivrl hlt mov mov dec or jne fisubr mov loopne subl mov decb neg push testb (bad) cmp jne cs and lods jmp sub mov inc sbb lret mov fdivs jle push je movsb pop mov cmpb scas mov xchg or lret ror movsb xchg pop fnop fstpt mov rep sbb daa pop sti push (bad) or jge pop pop mov sbb xor cmp ja imul enter mov add and in dec (bad) adcl addl mov or bnd jmp sbb je xchg ret and mov sub add cmp pop jne push or lea mov lcall mov popl mov cmp nop imul mov das pop jl cmpsl ss mov orl xor xorb sub (bad) xor adc cmp mov fsubrl or fild test hlt xchg jae xchg pushw or mov push lcall push pop outsb adc in imul dec std movntq and cmp jne mov ret sbb add mov cmp mov aad in or jmp xor inc inc subb mov cmp jnp je add jne aas and xchg jno push cld call pop js mov push mov ja enter mov fdivl or push into scas jmp jecxz push fldl sub stc cwtl pop ds jo add mov lahf jno jmp mov outsb mov outsl pop sub mov or je mov inc je rcr out mov dec je dec jl mov mov clc xchg ret mov fdiv and jb inc fdivrl outsb cmp pop mov in (bad) push loopne mov inc iret dec (bad) sub outsl pusha fwait mov xchg ret xor and cs int3 lahf lea xchg push or in daa jbe xor test dec clc mov push jl mov scas cld jge lock or jg fnstenv jge into cwtl fimull jg pop insb (bad) push push mov add cwtl lcall and sbb sbb (bad) clc dec cld lea test cmp fnop xchg incb mov ret jmp add insl mov dec jne or jnp adc lea cmp iret push lea repnz xchg pop out push xor dec insb loopne stos or orb jge mov neg jmp or enter xchg and push jmp mov fs jg pop insb mov inc dec pusha in or jg dec mov stos cmp jne pop pop rorl dec call dec sub shlb in lcall xor in cs mov repnz mov pop inc aam mov arpl add inc add mov jno pop jle mov cs aaa aam daa mov (bad) mov pop call jge movzwl sub jp jae mov addl cmp sub jnp mov dec sub fcompl push mov or or mov add lea jl fstpl sbb call dec fdivrp dec test pushf sbb int3 iret cli aaa dec ss dec dec inc dec inc dec lods or outsl and dec xchg jge add ret std lock xor aam adc jg cmp jl xchg dec stos push je mov sti imul in stos neg sbb stos jmp inc inc mov loop xadd les stos pop pop inc clc dec pop (bad) popa jne add push mov and mov inc decb jbe sub incb insl sub add leave mov mov mov rcl dec inc call adc mov mov sub or or repz inc cmp test jne sbb add stos cmpsl popf add (bad) push sti push loope testl dec je inc jne pop mov ret mov bswap xchg repnz or repnz inc cld cmp out adc pushf fwait cltd xchg iret mov fistpll inc je push push cmp (bad) fmuls popf add xchg movsl int add inc loop push mov test add inc add and mov cmp sub sub sub xor outsb sub sbb and out mov sub or iret mov xor sub xor fld1 dec popf mov adc adc dec add and test pop xchg mov and jne testw test lcall fdiv movsl inc add movb sbb xor je,pn imul mov inc shl inc fabs ljmp mov frndint rcr scas push or fstps mov testb je fidivl fistpll lea mov inc sub nop shr and push ret add jmp shrb add jns or sti idiv fistpl daa cmpb jb movb js decb mov cmp jmp data16 pusha xor jmp mov cmp inc xor push or shr mov add xchg jge cmc test xor adc cmpsb sarl je into add orb add jmp adc jl mov push inc sub mov loopne jae dec add sti or in insl or mov (bad) mov fidivl ret inc xor fwait mov push xlat pop loopne sub pushf and jne dec sub adc jge cmp and ljmp add enter addb divl pop jmp pop or inc cmp cmpsl aaa pusha inc add push jns lret f2xm1 fwait push js call out cmpsb xchg mov cmp lods or (bad) add xchg xor (bad) lock pusha jne inc sbb dec and fistpll les inc enter add jg jne mov adc rcrb pop cmp add loopne adc aas sbb fstpt or test or test insl inc jo add add and mov sub add jae fimull pop (bad) fiaddl jmp aaa mov idiv daa push sbb es push inc imul inc testl hlt nop jb aaa add jge push sub lret rorl push mov stos dec sub dec inc sbb adc fistp dec push jb mov in mov (bad) ss lock mov cmp aam fldt fstpl fwait sub push fldcw insb pop mov cmp mov inc mov fldl inc jl cmp xchg adc adc mov popa (bad) mov xor push adc adc (bad) push add mov or jbe jae or cmp inc stc inc mov jae push data16 jmp (bad) add shlb mov ret cmp (bad) rcr fildl xor fstpl fwait loopne aad mov test mov lret movsb dec outsl movsl inc test jne add sbb sti and mov xor dec (bad) mov cltd push lock or lret loopne cmp addr16 ret and mulb inc or enter push inc jmp loopne into and fldcw in sub call add (bad) icebp or dec or or or std (bad) les outsl movsb jg add lea incb jnp mov jb daa ja and mov add jb or jb sti insb cli mov cmp ja adc push mov add inc dec jne sub dec mov and ljmp icebp insl lcall add sub ds ds add mov lock ret or adc popa vpaddw addl call (bad) or dec in test jg jl (bad) movsl rclb pop sub rorb add mov or inc decb push jo out out stc mov add jl addl mov and dec lock mov xchg xor add decw (bad) imul cmp imul fcoms mov mov mov mov pop pusha xchg scas stos shl cmp sub mov mov sub aas daa xor dec aam pusha mov nop cmp jb push inc jmp jmp nopl adc fidiv mov cltd (bad) sbb sbb and or clc jge addb addr16 xchg inc icebp xchg jo mov (bad) push mov adc mov add cltd cld sbb pop inc aaa stos fiaddl cmpsb mov out cwtl xchg and sahf or aaa push aaa add mov (bad) adc mov pop repz sbb push jb pusha in cltd push movsl add (bad) push mov add xchg pop arpl xchg rcrb sbb clc enter adc js mov mov mov sti cmp je lock add test inc hlt out push cmpb jne (bad) push pop mov jo add lea mov out fisttpl push lock repnz nop adc inc in add fistl rorb xor push jge lahf lret in call (bad) rclb cmp scas pop (bad) lea lcallw scas xchg lahf xchg jmp xor sahf xchg addr16 out out repnz out out add mov push mov in ret (bad) mov cmp stos mov jecxz fiaddl push fcoms mov mov arpl and mov je or xchg add out sbb mov cmp push sub adc dec ret push add adc inc dec adc xchg fiadd sbb fdivl push mov adc ret nop arpl xchg std in repnz cmpsl addr16 iret in inc and daa cmp mov bswap mov xchg xor loope jecxz push inc cmpb jne push xorl dec ret pop jb fcoml jmp sub add cvtps2pd nop fadds adc or jmp fnstcw push pop mov jle fsubrl pop incl stos and dec push jecxz add xchg mov icebp mov mov sub mov (bad) push out or cmp lods repnz cmp mov inc pusha (bad) pop mov or cmp jne mov xor jo mov cmp xchg adcb cmp test or or or or or or or push (bad) jl adc add or add repnz stc cmp imul mov lret lds out out add push test push pushf pop or call or mov test and in insb inc pop std inc mov push in adc lea scas nop out stc and fdivrs cmp (bad) dec or sbb xor sub hlt inc sub mov movb or sub leave mov xchg dec je add jmp out aad call mov mov stc xchg mov cld sahf xchg and mov mov mov pop lods mov mov dec jne xor xchg (bad) lock addb dec jg je int (bad) jnp and add push jmp or mov pop or je jmp cmpb dec mov jo mov test dec sub adc hlt roll jne rolb jmp cmp xor mov fs or jne mov ljmp add lock and push call xorl sub pusha or sub inc bound call fs add and mov stos loope pop push and cmpsb push stos les sbb xchg add cmp push icebp sbb addl daa cltd nop lret mov add add ja and xor jae inc mov inc jmp and add cs mov cmc xchg lea sbb push add cld (bad) jb fwait sti out subl jmp (bad) mov jmp adc scas call lods into jge fs cmp push cs add mov push imul rolb jmp sbb push test fucomi add out mov xor dec inc mov pop lods push jl mov (bad) mov cmpl fidivrl cli int3 xor inc mov in pop insl into pusha fcomp push pusha movsl incb jmp inc dec das push dec xchg mov push adc and (bad) fldt adc push pop inc test adc outsb lea mov xchg adc mov popa cmpsl or clc inc sbb cwtl fs lcall rolb pop cmp test cli and pop daa push xchg clc je shll push sbb cltd aam in sbb jmp mov cmp jo pop push movsb fsts ljmp (bad) adc fbstp add sub jae jnp int rclb jl sbb scas arpl ret addb mov mov call xor mov inc adc or cmpl mov nop inc daa push mov test sub inc loop fdivrs add mov jae test clc test dec pop pusha xchg push ds xor mov jl loop mov (bad) cmp jne incl sub inc js aad mov push sub and sub je dec je sub (bad) mov je jmp mov jmp push push push faddp outsb and jbe push inc mov jle fadd or es pop ret mov add or cmp lock xor jg jl popa aaa jno pop pop notl push pop mov bound or in sbb inc sub jmp loopne cmp incl bound loopne loopne or jne xchg inc decl mov jne cmp cwtl aam arpl mov jmp ret add sahf fucomip sti pop cli stc imul add cmpl jle adc pop sbb fldt cld gs xchg psubusb loopne (bad) icebp push push jmp scas and movsl mov inc out test add add pop xchg mov lock popf lcall jmp sub iret ds loopne popf pop add dec push sarb jbe andl lcall sbb sub mov or xchg insb scas pop outsl lods cwtl clc stos test jo mov cmc fistpl sub enter add repnz in pop jmp fwait push bound mov ret push mov and in call fldl push fucomip ss out pushf sbb hlt sbb js cltd nop jmp mov pop push movsb out fwait cmp jmp addb mov ja (bad) jno cs data16 xchg imul (bad) lock add ss jg cmp jle and fs jne mov add add (bad) or ds xor loopne or cmpb xchg mov xor clc mov pop mov and jmp out jle or frstor jne sarl add jne imul imul fsubrl fisubr pusha cmp fcomps adc test pslld dec mov push jb sbb mov or jno aaa (bad) add dec pop out rorb stos repnz fildl dec fimul scas fstpl mov or (bad) jmp push pushf lea jb int3 add or mov xchg add pop notb (bad) ss xchg inc inc add and cltd xor outsb sti push xchg lret iret je addl orl inc push enter add sbb daa mov subl enterw int (bad) ja or ret pop add addb daa js cmp push add pop sub or push or je ret mov sbb icebp imul repnz dec movsb es cli xcrypt-cfb cmpsl es xchg into inc fwait xchg add test jp xchg cmp (bad) lea pop pop addr16 fcoms or add sub add mull clc mov add sbb mov push cmp ret jne loop outsl xor daa fnstsw sbb outsb addr16 jb sbb fwait jmp sbb cmp sbb lahf jne cmp add pop push das sbb push jnp mov outsb lcall push add sub jb or adc or xchg imul sti xchg addr16 mov mov lea xchg push ljmp das dec lods das adcl mov and das subl push orl test popa pop call loop adc leave movsl mov imul add push mov nop mov leave daa fsubrl push add loopne aas sub imull insl gs push push sti pop shlb mov lea dec lret sti sub mov pop sbb nop inc xor lock push movl ljmp sti or xchg and pop add pop push xchg push pop and xor call fnstcw loope dec call ret es call aaa sbb aas fcmovu je test jmp push push aas pop xchg arpl push jl je addb pop xchg cmp insl push sbbb and adc jne adc test fldenv adc cmp adcl push fildl pop sbb and pop out cmp pop and in inc imul add add or or insb sub mov jbe cmpl add rol and pop sbb pop xchg pop mov outsl jb aaa or add mov sbb pusha dec ss and mov xor repz icebp adc pop vpsllq or daa dec xor test (bad) inc add ss ja sub push or mov jmp mov sub push (bad) incb sbb je scas ret mov push and loope add jle fnop add cmpsb cmpsb push cmp mov push pop loop cmc mov mov clc fistpll lods add jg test mov or loopne push cli inc rorl dec mov popa lahf add jle cmp add les add push mov dec xor jmp push dec push push jns insb jmp in or cmp in jle cs add pop mov pop push add mov out add add sub and movb mov push mov jle sti mov rclb scas or and sbb jne dec out iret pop mov icebp test dec cmp and or aaa fbstp cmp sub cmpsb dec mov xor add rolb mov stos loope outsb pusha aad cld mov lods movsb mov push fsubs xor fwait outsb les ljmp push add pop std sarb dec les push ds and pop js xchg out and pop sbb lods or fucompp mov push xor mov mov cmp mov repnz sahf stc push lea js lods add pop cwtl xor fildl cs adc mov mov dec addr16 jle js loopne push sub hlt push loope adc nop inc push or inc mov or pop idivl mov lahf xor xor jmp push or xchg adc lds cwtl bound aam (bad) out ss pop and cs fisttpl roll sub rclb push bound pop dec or adcl sbbl add mov push sbb pop adc mov cli test cmp hlt clc pop bound fwait das cmpb addl push push or dec aad or and and (bad) xor mov sti push jg mov xor and jne sbb mov dec repnz jae enter jp mov (bad) mov add cmp or pop mov push jo in decl push sbb cld dec cmc ret push push sar lret adc ljmp and xchg ljmp xchg cwtl and add inc or rcrl jmp aam int adc hlt pop or jb lods and out sbb adc or push add int3 mov (bad) call jne or outsl cmpsl mov hlt clc push in push loopne push mov repnz dec loopne cwtl jp int mov (bad) mov es ret lock (bad) mov mov and dec jo ja lods push (bad) shl adc (bad) add ret movsb into mov imul cmp push pushf cld and cmp je jmp xor inc xor sub jmp and add lcall add push cmpsb imul mov daa lods inc push mov addr16 cs adc or mov fwait mov adc cld cmpl inc cmpsb cwtl insb sub aas and je or sub arpl adc test ja cmp and and fs sub lea add pop mov or and mov jae sub push enter nop rcrb lods aam ja sbb xor pop cmp sarb pop sub cwtl mov mov pop test add cwtl mov jo int3 jb sub adc fs es mov cld fldt ret ljmp adcl jae jae cmp fmull adc in jae mov mov cmp lock inc je shl jo call and outsb rorb or addl dec shll or scas nop xchg int in jae ljmp mov sbb stos insb stos dec test mov fidivrl and mov mov imul jnp adc push inc pop test test sti mov mov ja and aas in mov or lods fsubp movsb sbb adc push adc inc aaa xorl dec xor cs cmp daa adc push in daa push insb lcall (bad) push push rcr les jl out adc enter jo push cmp sub jle sarb sbb adc ja or adc adcb mov jl cmpxchg8b test jne cmp add leave pop mov bnd sub ret adc adc (bad) jne cmp pop sbb jae fdivrl movsb jae xchg aad mov fisubr andb xor and pushf out dec cli pop dec xor or dec imul mov jnp movsl in add stc ret lret pop push dec cld add push cmp sbb pusha rclb add dec or (bad) dec jmp negb movsb dec adcb or and sarb mov sub and jns dec or mov movb sub add xchg add mov and in std aam test add xor cmp cmp lock lcall inc lock adc std adc jmp (bad) imul mov scas test stos das adc jl mov and arpl fildl inc inc inc jge rorb push or and inc sub dec loopne jae pop dec imulb jge fucom daa push jl jne sbb cmp or push sub dec addr16 (bad) mov xor dec repz pop xchg cmp fildll push dec cli pop rolb cmp div test push jg dec jg xchg or or or and fwait (bad) nop push inc mov mov xchg mov jge pop mov std inc push push sub ret sub (bad) push daa jg sub (bad) fcomps jb popf add jo add dec test pushf push ret adc inc cs push xor ret push ja push loope out pop stos adc inc push jmp inc das gs dec cmp lret nop addr16 adc outsb inc stos mov add jne mov pop sub mov subl cli mov mov sub inc xchg xorl insl push sub mov jg pop inc cmp jl dec push cmp sbb jmp adc xchg or cli push in fwait (bad) fisubr and jge or mov lods jo push ret (bad) xor adc push scas and dec jl js jge jb js (bad) aas and adc test push cmp and mov or adc push add push push nop imul dec clc sub aaa sbbb add dec adc fld sub jbe pop insb loop lret (bad) pop mov inc movsl insl daa test inc daa mov hlt (bad) cltd aad and sbb add out xor jmp mov adc inc inc (bad) jne arpl mov hlt aam sbb enter adc and ret cld insl mov bound enter inc sub jge or scas lock push mov fwait (bad) jg cmp inc aaa push mov sub jb inc mov lret adc stos (bad) sbb lret jne dec cwtl test je or mov jmp or pop jne inc or (bad) mov pop pop or push cmp jecxz push push dec pop je or inc add lods repz adc xor dec data16 enter mov mov pop call arpl mov or add xchg push out jne adc add xor or sub xlat fucomp loopne mov dec sbb outsb adc dec repnz mov mov out or inc inc cmp test sub ret sub inc push jo mov imul in cs rorl test jmp into pop mov sub sub push push arpl jecxz xor out in lock mov jne push and cwtl mov add js inc movsb xchg lcall xor mov outsb test xchg inc rcl push lea sub push inc call sbb fdivrl (bad) and sub (bad) pop mov push sbbb pop jb enter das mov movsl mov xchg fwait pop es mov mov sub pop int3 and imul xchg fcomp mov push fld push imul dec repnz sub and int3 mov or out enter shlb imul insl xchg add and aas ret in daa add enter into ret clc mov adc push push hlt mov mov xor inc movsb lock push mov mov aas sarb and hlt insl das fs lock in add scas insl add fs mov pop adc jb insl pop test mov inc push mov mov adc int3 pop inc loopne in cmp ss gs mov sub sbb adc aaa mov mov adc out in mov aam inc cld in push lret test jnp adc stos fcomps clc mov jo xchg add fiaddl mov sub fistp mov sbb add add sbb testb mov cmc adc daa sbb or adc pop sub jo cmpsl and sbbb sub outsb outsb xor pop or or mov subl push jo sub or inc js sti xchg lock inc adc xor dec ret xchg push dec js (bad) sbb and (bad) (bad) mov mov push or mov outsl sbb inc cmp jne mov and and mov cmc test jle aaa and push fildll mov mov inc jmp pop push test mov movb out fidivr jecxz or jmp fsubr sahf cmp ljmp je das cli sbb mov mov inc or fs inc jo (bad) mov mov push inc jecxz daa mov int3 mov xor (bad) sbb lret leave pop subl and and inc or test adc js mov movsb fsubrl pop pop pusha (bad) aas mov outsl mov imul movl imul xchg xor fsubs inc pop adc sbb data16 aam push sbb mov xchg (bad) dec dec lods enter shr lret or pop mov rcll and sti sub push lock push adc mov mov aaa jo clc adc in pop clc mov or loop jnp ja je push shll jne inc stc shlb ja roll xchg ret mov lea mov jmp daa mov dec sbb ljmp das add in inc in aam orb mov inc icebp jg xchg sub lds xchg ret incl xor inc test inc icebp and sbb jnp mov insl shr sarl push lret pop lock inc aas lock sub loope scas add cmp cmp inc cmp enter jno or aad add or mov (bad) mov push lock mov mov (bad) dec or dec out jg inc xor int enter or pop rorb stos jmp inc adc pop sub (bad) (bad) jp xor sbb adc inc inc cmp sub xor dec push and xor push aam and (bad) mov mov rorb mov (bad) push jne cmp mov cld mov xlat dec (bad) lds aaa inc movd pop shlb ljmp je int3 jecxz cmp rclb out sarl (bad) outsb pop int3 (bad) jmp jmp cmp je push mov pop je lret fwait insl pusha mov cld jb xchg mov in push adc push adc fdivrl sahf ja out les push (bad) mov jns repz lods push mov fucom jns pushf xchg push mov mov mov cs out iret insb mov push test mov mov dec and jle sarb cmp sahf xor inc test les mov ds outsb in into jl sbb cwtl test repnz cmp mov adc push pop xchg fmul xor dec add inc add movsb cmp mov clc sbb outsb daa adc hlt push aam lock mov hlt call negb or fmulp mov pop lock andb out shrb out int3 cs enter jns cld les mov daa mov loopne jns mov mov lods das out sahf fwait out test movsb mov out mov pushf mov enter nop mov pushf mov mov xor mov pusha test and nop notl dec add or icebp loop mov pop jp push outsl sub mov les xchg jno xchg adc int inc insb lea and notl jge sub nop add fcoms test or enter nop mov aam (bad) ss mov inc cmovs sub mov sub jg inc mov fs cmpb sbb lea mov pop or xor mov inc mov jno js jo insb test fs cmpl push je mov pop data16 bound cmc or push jp jae leave adc dec add or movsb add lcall gs adc stc jne (bad) sbb adc mov out inc pop sarl xlat xor fistl jns (bad) nop sub adcl sub orl nop mov movsb sti rcr xchg push clc jecxz repz lcall (bad) incb in and sbb xchg lret mov je mov std sar adc xchg or or adc mov mov mov add xor jecxz dec add nop pop and lods cwtl rolb es adc and leave pop jle xchg mov inc lea jbe out adc in daa fisubr pop (bad) pusha pop pop push cmpsb test pushf (bad) mov or push lods scas sbb shlb jge adc lea push mov sahf int lahf and mov cwtl cltd fs dec movsb mov jb test mov fs dec mov mov xchg dec sarb mov cltd fs loopne cltd fs enter movsb jb movsb lock sbb jb aam or fdivrs fistpl faddl loopne cmp dec in fmull mov pop in dec fstl dec repnz jo dec hlt sbb sbb pop cmc xor ficoml mov daa dec add outsl je fs bound vmread dec adc outsl fs outsb dec jb pop outsl jb (bad) (bad) cld pop inc insl jo inc jb insl push je pop push and enter dec insb mov push and cmp mov inc jae pop cmpl aaa sbb out loope inc dec repnz xchg mov clc ss sbb js ja adc ja jmp sbb fisub pop add adc (bad) (bad) push loopne in jo jmp jae fstpt add push push push mov xlat decb add push fmull adc sub jnp out dec inc push test push insb sub xchg and push int3 push adc dec ficomp cmp inc cmp add mov (bad) fldt jae xor adc fcomps and push inc mov adcl and in xchg (bad) xchg adc inc test adc mov (bad) pop in sbb ds inc sti mov addr16 rol testl fidivrl xchg dec jbe and ds cmp adc sbbl and dec add mov and in dec aaa lock lock rolb gs pop out or ds popa scas inc nop adc dec insl jo (bad) lods inc cs mov xor iret mov sub and jmp popl outsb divb pop mov lods int (bad) mov pop (bad) sbb mov push arpl in (bad) ds test loop mov insb insb jg xchg (bad) in add rclb inc inc mov std cld rorl jbe dec jecxz xchg jne loop call in and call add jmp in adc or das lods xor es mov call das es inc test stos add xchg or call add or fild inc stos shlb stos fild jmp adc les sub adc shll lods ss or aam cmpb movsb in ljmp jno out aad or fadds jg jecxz add dec je sbb cli imul sbb cltd std sti adc scas fcompl or aas dec je sbb (bad) leave adc int imul mov std add add test mov mov and fcompl lret hlt test pop stos hlt mov outsl hlt dec fsub lock xchg iret lock in mov xchg iret in or call imul jb in adc jae sahf arpl loopne cli es imul push and scas (bad) int3 or ljmp mov adc int xchg movb jp fsubr shrb stos and loopne or out sub add mov fcmovu xor mov or push push push xor mov adc jne inc imul pop jmp adc adc incl mov call mov or es or leave fisttpl cltd adc xor js sub mov nop (bad) jne mov mov in adc sbbl and in lahf loopne data16 aas mov roll mov add adc lods stos and xchg adc lahf ret sub jge xchg std int3 adc incl outsl xor or pushf (bad) xchg jne push pop flds xchg shrl pop jmp js das inc dec mov lahf mov pop in pop mov call das test pushf or inc add int3 fsubl push add pop loopne data16 xorl dec outsl mov test fs pop les adc push xchg clc jnp fnop jmp and mov lock popf or jl inc xor lea (bad) (bad) push call or lea push jno into xor mov test aaa cmp sub inc sub inc pop dec inc in mov xor mov jp sbb iret jae,pt pop sbb imul fimul (bad) sub in outsb xor ja pop in inc cmp fsts cmp mov cld inc push bound rcl (bad) or movsb xor push aas cmpb add push dec (bad) add mov inc sub or sub sahf adc repnz (bad) movsb fstps out xor inc sbb test or enter jne sub aas adc je test mov dec hlt (bad) leave loopne test mov cmp jae cmp inc pop aaa jmp add inc out sbb in loopne,pn nop or xchg in loopne rorb adc mov sub mov cmp adc pop or adc xor loopne dec mov sbb call outsl inc xchg push ret outsl cmp call mov jmp push fcmovnu dec adc (bad) jecxz push xor fiaddl add call decl push jns xchg dec adc jns pop jmp push or push add hlt and mov cmpsb bnd xor inc dec inc ret adc inc and enter jmp (bad) mov mov or sub or pop addr16 repz pop jne push sub cmpsb insl jecxz add or or add xor or jl movsb daa das lock getsec enter hlt (bad) xor push cwtl pop ds push iret sub out rorl fs sub sub or mov xor sbb dec adc inc (bad) aam sbb hlt pop aaa and fs xchg notb sbbb popa ret std hlt xchg xchg dec mov aad cmc xchg adcb sub (bad) jne mov jb clc loopne xorl lahf ret push mov lds xor fmul xchg xor xor xor pop push push data16 and pop or jecxz pop mov sub jne jecxz jmp (bad) lds in push xor fs popa add sub sbb es aaa push jecxz lahf in sbb or fbstp mov cmp jne dec xchg dec cli xor push (bad) cmpl fnop sub dec call pop add les xchg int jns (bad) mulb testl out sahf (bad) pushf mov ljmp cmp pcmpeqw pop or and pop or (bad) cmpb or adc ror dec pop dec sti xchg or nop pop fnop cmp or out lock and sub dec push add mov fstps fwait xor and adc (bad) cmp and fistpll jb daa sbb fs or aas in sti mov inc enter mov out inc es push jmp and cmp lret ret and icebp rclb cmc jl hlt jmp lea mov adc mov roll dec push icebp or data16 and or iret arpl sbb cwtl push or push stc movsb movsl jmp dec rcrl sub xor fildl or loop push sti (bad) std jg sub xor xor hlt lods or sbb pusha or mov push data16 sbb cmc pop stc sti inc cmp add and ja push mov xchg inc mov add cmpsb adc mov (bad) (bad) add inc jo add (bad) pop cmpsb shr in and lock lcall push dec lret out decl mov jp sub add outsl dec rcrb mov xor push sbb or shll mov loope cmpsl sub insl (bad) mov arpl jns xchg sarl roll (bad) iret repz or sbb pop andl dec mov es cmp ret rolb loope pop stos pop push ret mov push dec sbb aas cmpsb test mov xchg int3 rcrl lock clc leave mov hlt pop cmp pop mov test frstor push push (bad) rolb fistpll insl sbb push xor adc daa mov pop aaa and mov and pop call inc cwtl je dec je jmp outsl mov mov test push push ret icebp repnz mov test sahf cmp pop notl or push sbb mov xchg sub out cltd mov lret faddl ljmp mov (bad) mov fldcw cmp sub inc ret stos add mov test mov pop jmp sbb mov adc push push adc mov aaa or bound add ljmp or scas dec sbb jnp addr16 adc sub (bad) (bad) push mov mov in jg (bad) iret addr16 jb mov or add stos mov rcll jge xorb or pop pop repnz mov incl and orb fadds daa pop jb jne adc add leave nop pop enter push je test push dec iret and add push dec loope sub jp scas and adc fbstp addb inc sub add fisttpll push add cmp sub dec imul cmp hlt lock push jp mov mov pop mov jno test lds in cmp (bad) (bad) aas orps add fisub ja out add or jb sahf negl jb cmp cmp jns imul pop mov dec mov push and or push call pop lcall lods sbb adc out sahf xlat sbb and inc dec nop sub push add sbbl imul adc fs enter addb and mov or adc ret (bad) sbb push push or sahf add out pop sbb add pop xor lret pop aaa test imulb stc xor aaa sbb mov jne cmp inc or and xor push in push inc add push add and or or (bad) clc in (bad) dec lret sbb xchg pop jmp test xchg push pusha ss jmp dec call hlt mov fnsave add xor or sbb add (bad) mov dec xor fsub hlt clc test and scas add cltd sbb call adc and add loope call insl rorl in sbb adc xlat (bad) add add (bad) sbb pop xchg xlat pop push nop inc lret inc add out sahf stos shl clc push push and fcomip cmp push hlt push pop pop imul jl popl mov mov clc lock dec jns,pn adc push adc in push cmp or and inc es sub sbb push lea mov shl push sub fmuls xchg js daa jp sub or nop dec xchg jl jge push and test push pop xor jl xor jno xchg mov mov or mov cld in sti ficom xor dec or push (bad) repz mov jb lcall add mov pop insl mov xchg das bound or pop mov mov inc sub push movsl jmp and xor and icebp test pop in add inc out sub loope sbb fsts rcrb dec lret orb fild add sbb es dec jne or orb je test cmp sbb test ss (bad) loope add lock pop jg dec aaa mov add nop or sbb mulb dec and mov mov jp aaa fs pop out xor inc mov out out adc jo sub pop inc cmp into mov add and or mull push sbb or popf push push sbb or xchg es jns xlat jp andl sahf shl cld adc cltd dec mov cmp jp pop xor dec pop gs fs inc or mov pusha iret mov sbb inc unpcklps add push push inc testl jo mov mov pop jb push incl add insb (bad) add rclb aad cli sbb sbb pop cwtl push or pop pop arpl pop push or inc call out into pop cmp dec pop jb lret fwait idivb mov inc (bad) push sbb repz imul cli push inc and es (bad) push mov sbb dec and sub fildll pop vpunpckldq adc insl cmp jne adcb xor (bad) pop dec sbb inc mov jne and mov add icebp sub jmp cmp or sbb xor leave add or clc push add cwtl icebp cmp inc dec call mov mov pop enter add add pop adc test sbb cmp pop (bad) add aaa int3 negb or mov fstl and arpl mov clc jne add and pop pop push push and add add adc jns (bad) push xchg mov into fidivrl adc lods mov and cltd cmp repz jne test arpl je and xchg add inc loopne mov jo and fldl mov loopne fsubl lods lahf (bad) push inc movswl fidivrl fildl sub xchg push mov sbbb in cld rorb sti popa fildll inc dec das fsubrs jmp aaa call xor imul mov pusha out pop rorb push mov out fstps popa push outsl push jge lahf xchg ja jns movl cmp daa out add push sub sbb scas loope sbb and fsts lods js sbb dec mov cmc inc inc fisubrl in icebp sub test jg mov mov test push push insl inc icebp sbb adc lods loop and pop imul les xor cmp adcb in mov push fwait dec es push cmp repz push adc aas dec (bad) repz jbe pop daa jb mov cmp fwait scas lds cli add fstp aas xchg fildll mov push imul mov hlt fildl add add mov outsl add lret fwait pop xchg add in cld aam movsb dec inc pop inc in adc loopne xchg and jo (bad) xchg and push and adc lcall popl int3 ss xchg dec sbb and loopne cmp shufps xor fildl pop pop rorb add inc push loopne cwtl or in dec push push int3 dec data16 adc inc bound push movzbl test push adc mov lock mov xchg cltd pop or jns (bad) adc mov addl sbb and jns out push inc out (bad) push fnstsw shrl test ret sbb mov pop inc cmpsl pop mov mov (bad) xchg cwtl nop addr16 add sbb mov addr16 mov push dec pop xor push xor push addr16 loopne or xchg lods and daa or pop mov pop mov mov pushf sbb mov push mov mov cmpsb sub pop or lods or sbb and adc aaa cmp aaa sub es xchg or or fwait pop cmp js mov pop sbb pusha adc add sbb das mov popa mov push nop and lea repnz imul fildll and xor push push push add cmp sub inc jb jne (bad) ds jge xor adc xor push mov in incb push dec jb ds jae xchg cmpsb mov xchg out imul out jns sub inc gs iret cltd push sbb or in or fmuls leave mov je fistpl sarb in rcrb out add push pop or mov insb sbbl adc mov add add add xchg repz inc iret pop or in pop pusha inc pushf jle out vpunpcklbw pop inc pop pop insl fwait idivb jge mov negl into jmp or test push inc and jae push (bad) lods pop mov jnp xchg pop fcmovb cmp dec mov lods movsl movsb mov cmp mov pop pusha mov fwait pushf or xor add inc bound inc jl in aam push dec mov data16 or mov outsl dec push in mov inc xchg les and push mov mov add push dec je and ret insb ss gs clc outsl or xor mov inc lock outsb int3 movsb ficompl movsb hlt add aaa cmp and pop xor fimul (bad) out (bad) and lds push mov mov dec inc inc lock dec (bad) mov sub loopne push mov imul fs xchg pop je push xchg and xchg test mov adc sub aaa repnz xor cmp dec and in or lds push popa xchg dec loopne sbb inc setae adc xor (bad) push shlb add (bad) or cwtl out lret bound pushf andl xchg jl adc in in nop (bad) xchg in psubq inc mov adc cmp roll sbb cmpsl stc cmp mov clc out insl lahf es and rol jns js mov and nop stc pushf sbb mov sub jl nop scas ficom xchg inc mov test xor xor clc push pop mov mov fucomi push mov xor fnop fiaddl jb pushl add pop cmp xor dec push cmp shr loop dec mov into push or or xchg in nop jbe jl fsubl adc xor nop or fsubs dec cwtl aam aaa aam in (bad) shlb sbb ror call inc lcall test sti int in insb jo insb xchg push loopne es mov sar cmpsb cmp shrb mov mov es jnp sbb movsl push ret add and bound inc jae repz imul push lret jo out sbb xchg mov lods orb in daa (bad) mov cmp push addr16 shrb cmp popf or and dec enter popf movsb mov aad mov sbb inc (bad) and jo (bad) xchg jno jmp nop pop mov aaa nop dec mov and sub or cld adc mov inc mov ret or inc mov and movsb push or and cwtl or pop mov icebp mov in and inc and jmp dec push push sub mov push mov jb mov pop sub inc fistpll in sbb sub and (bad) sub push jb test sub push in push adc xor sub push adc imul or out mov adc arpl mov test push lret xchg cmp push (bad) das xor out cmp push inc outsb mov (bad) in sub sti jne sahf notb pop (bad) repz push js xchg scas int and mov push aaa push es xor xchg xor ret ret lcall cmp ret cmp in es nop nop in loopne add add dec add aaa (bad) fdivs cmpsb or mov aam ret test xor dec pop add cmpsb add enter add les (bad) add outsl dec or sbb jnp pop add dec das pop rcll push idivb iret cli sbb cs sahf imul daa lods leave in fcomip push out push and rorb push rclb jbe aaa aaa mov mov cmp mov mov jne test aaa or cmp pusha sub aaa test cwtl xor movsb aaa movsb xchg je and jno or jno mov aaa cwtl jno imul xor outsl cmp jo aaa dec mov leave jno nop ja mov test sbb mov cld sbb dec add test and xchg add es repnz test sbb nop (bad) int3 loopne mov nop pop inc fnop loopne es add push inc or push nop gs lock in jge adc nop cmp shlb adc push sbb fdivr or bound ror adc or or push ss cltd push cld inc insl int3 jmp cmc or cmp mov xchg sbb jne or xor add sbb inc add inc stos out dec iret fisttpll lret ret push mov xchg push stos sbb pop lea sub leave and outsb inc insl or enter inc add and or add add push push xchg push shrb outsl (bad) cmp sbb ret mov pop jmp movw es lahf dec aad cmpsl lea add lahf xlat mov sub ds adc pop aas jg cs sub mov mov add push adc scas (bad) sub test push dec bound cwtl or push and push push mov daa or add nop outsb jp xchg dec sub inc dec xchg and test fwait into pop mov imul daa xchg and dec or (bad) nop bound lahf push sbb lahf pop sub push pop mov dec fwait cli (bad) push (bad) or xchg hlt test adc adc mov lret dec or leavew aam fadd inc or push (bad) xor bound push jns push cmp pop cmpsl xor (bad) fistpll iret ja dec mov mov or sub mov dec lea cmp add or mov pop push push mov mov xchg push je dec je cli mov add (bad) mov adc mov jle or and jne sbb aad dec adc sbb cmpb cmp mov cmp jnp or (bad) jns sti cmp popa jle inc pop js dec sti add xor mull pop adc sub sbb inc jnp push inc fstl (bad) or sub mov cltd (bad) mov rcrb adc adc inc out cmp inc out xchg test xor cltd pop and outsl mov fldl pop or sbb jbe mov dec fildll add fcompp test (bad) xlat fisub and xor cmp mov rcl out mov jnp je sbb fmull aaa aad push push je test add inc dec fsubr scas popf or jle and test xor pop add sar jg sbbl shrl adc cmp ja or imul repz out cmc cmp rol iret sbb mov btsl jae loopne int inc and pop hlt (bad) jnp and lret push pop (bad) xor shrb dec add adc lock fistl sub sbb push jmp inc vmptrld cli (bad) sbb movsb xlat roll decb test xor jecxz add add adc mov mov jmp add nop push or movsb pop push data16 insb add and cpuid sahf adc adc mov cmpsb test adc insb pop mov inc dec cmp adc je add pop sbb mov enter in aaa add xchg ret int3 push out scas scas cmp jnp fdivrs es add sub mov adc xor sbb int3 mov add mov adc imul xlat dec add xor push test sbbl cmp or add fmul sbb ret ret adc addb cs ficom add add push rclb sti repnz jo xchg lret in or jb add je sub loopne mov stos mov in sti andl push sbb pushf jae gs or push mov push insl lret mov imul mov mov enter ja cmp stos inc and mov inc inc push push push xor call les or or enter add or insb jmp cltd xor push and bound pop outsb fwait adc incl mov nop jbe jb sub sub fs mov mov or inc insl jo jns pop xorb add mov push insl popa and daa adc xchg das xchg insb gs (bad) (bad) pop inc outsl jne xchg jb outsb arpl adc cmpsb jne add pusha fadds insb push addr16 inc add cltd pop orl (bad) pop imul lock (bad) push outsb imul inc arpl dec rol aas and inc iret push mov mov xchg test sub pusha and andl testl fdiv add jo pop gs push pop pop cmp data16 or cltd or xlat (bad) call xor sahf out mov mov push cld mov jno popa imul cmp cld mov sub out xor mov jo pop add push ret mov das xchg fld or je pop outsl imul push xor icebp dec test fimul or and inc inc stc push cld les in push xor repnz popl jns sub add and push push dec fbld push jmp jo cmp divb sar jle adc movsl or and cwtl and dec push jb lahf lock inc icebp add sbb xor dec movsb sub daa mov xchg rclb add dec push out fsts xchg adcb mov xchg insb mov mov lcall fisttpl mov push push ret sbb daa bound mov (bad) fmuls or mov cmp cmp addr16 ret outsb pushf and inc jmp sarb lret js xor inc push jp test jecxz push adc jmp sbb pop into cmp fild insb hlt pop divl cmp push icebp cmp add xlat dec (bad) je es adc ds xchg dec in inc clc xchg scas test (bad) pop out iret adc push ljmp add inc fmuls xor xor (bad) (bad) sub mov movsb sub push or adc ret mov mov outsb imul push jmp scas inc xchg es mov mov adc cmpsb cwtl adc push add sbb nop (bad) and inc mov imul pop sbb jle sbb push dec dec cltd add mov lods add daa mov test jae hlt frstor test or jg incl xor cmp adc pop js and pop jbe add lret clc in (bad) sarb jle aam inc inc ret xchg sbb cmp in mov setg inc mov mov dec je in push fnstenv sbb in loope inc dec jbe es lock orl daa push inc inc jo adc pop ljmp jmp inc xor jp call (bad) cmp or mov loopne mov pop enter call (bad) adc sbb add dec jne mov jb xchg lock or dec and test xor mov add xlat lahf incl add add aas shr dec or loopne mov rolb adc ror xchg loopne inc insl add into cmpsb jecxz fldt subl repz outsl jnp mov or mov in test mov sbb or mov sbb mov test cmp mov push jle lods sub shl push push sub add pushf pushf pushf fmull scas scas nop xchg pushf pushf pushf pushf xchg xchg xchg xchg pushf pushf pushf pushf xchg xchg cwtl cltd pushf pushf pushf pushf lcall pushf sahf lahf addb addl xchg sahf mov mov mov ficom aaa mov fsubrl bound and pop mov lock push mov push add test js jmp mov or adc xor call adc sbb test jne mov jmp cs dec xor cmp jle inc movsl rolb xlat inc je sbb mov add faddl cmp mov pop push xlat sub push add mov (bad) test mov pop inc gs push or push push or add loopne fbld sbb mov call jl or fs mov int3 cmp je mov dec and add adc add and jmp fsubrl enter fbstp loop mov insb sbb adc (bad) test out jne inc pop xchg push sbb mov sub sti imul or stos mov push dec inc push or sbb pop sbb lcall or bndstx (bad) jge or add ss cmpsl push mov mov or add aas pop je out mov (bad) in add decb ja add test adc sbb or or movsb push add add jae es or movsbl dec xor or pop (bad) jle add sbb xor repz into adc ds pop in push (bad) (bad) (bad) jnp adc add cmpb ja jb add xchg out testb call (bad) out mov into xorl mov int sub lea adc ss add call push call or mov mov idiv jmp dec or lods cmp lcall (bad) mov addr16 and pop xor les faddl or cmp inc adc jmp add clc jle mov call push dec inc inc sub xchg xlat out loopne ljmp push icebp test push popa and ja lahf sbb mov or or adc subb das popf outsb or or mov outsb hlt stos inc push call add loopw add or lret icebp dec pop pop (bad) xlat mov in adc lcall enter lcall fadds ret addr16 cmp (bad) xchg cmc popl ljmp movsb das mov aam adc xchg cmp andb xor iret inc jo cltd lods pop add xor dec sbb mov sbbl inc and jl mov test fdivrl cmp cmpsb (bad) dec mov test iret repz out stc fldt cwtl mov test dec adc aam loopne repnz lods sub or cmp or mov (bad) and pop lret add lret pop adc or jge jecxz xchg adc (bad) aaa or iret jae push jno pushf mov push add mov fsubr pop sub in ret push inc push fistpll pop (bad) sarb xor sub out add loopne lock cmp jmp (bad) inc shll sub mov add jmp or jg or jecxz scas ja sub pop push mov add jp js jno pushl jge lret xor add call js in aam mov mov aaa insl cmp dec test jae jne sarb pop adc pop jecxz adc dec or dec aad mov jbe fnstcw sti fxch ja ficom sbb push dec adc nop or inc fwait or push call cmp sbb mov push pop iret popf clc jae ficom pop mov or test test jb or cmpsl addr16 ja in jae adc (bad) mov add push inc insb imul cmp dec mov imull xor add inc pop dec gs and mov imul push fldl (bad) gs inc insb popa push jae js or adc imul fmulp lret fs outsl test nopl addr16 adc dec outsl sbb test (bad) shrl cmp outsb insb jns mov cmp sbb inc sarl mov pop ss push mov inc je insb sti in cmp mov cmpsl or dec imul lock stc xchg test or or xchg test pop push add dec or js add xor jo out aaa dec in or cs dec ret mov jmp jns ljmp sub cmpsl outsb xchg inc jne xor (bad) or add jbe dec or push add gs inc popf mov sahf xor push add mov pop ds repz adcl insl outsl mov daa pop leave nop nop call (bad) out adc and lock push repnz inc push or jmp data16 ds insb sarl mov scas jl,pt sub daa or cld sub xchg cld pop push mov out or lods nop push push scas and ds pop mov mov scas lods sbb inc and inc sub cs sbb nop or ds or mov sarl out mov cs mov into dec imul scas mov (bad) int3 jae adc add pusha pop push inc jnp loopne imul mov je xor mov insl jo push mov jb aas sahf xor lds dec sets jb or mov das pop and add jb mov mov push xor out sbb inc shrb call (bad) lock aad aas and push orl iret mov pop scas push inc inc call lds mov pop push pushf cmpsl sub fcmove pop test mov add js fstpt xchg test add in inc loop decl adc pop popl test (bad) pusha adc adc ud2 ret inc pusha or fimul adc sti push add mov mov dec aaa mov cwtl mov pop add dec (bad) fildll inc aaa and dec pop shr xor and imul fucom pop xor cmp mov loopne inc pop inc test pusha push outsb pop stos mov push addr16 cmp movsb push test jns icebp add andps hlt test xor mov loope pop jbe pop sub inc imul rcrl hlt or pop out pop xor lock sbb mov sti es push mov push mov test call mov push fistp rolb sbb (bad) cld (bad) sti mov mov or lea pop and rorb or adc dec pop cmpsl hlt cld sbb dec and lods pop sbb xor inc or inc or adc incl xor pop pop jle mov inc push (bad) cmovns sbb popa jo push add pushf jae push rclb sahf out testb fisubrl outsb dec or pop je scas sub rolb push adc (bad) and nop xchg mulb bswap and push rcrb pop fwait in pushf sub sti mov js movsb (bad) pop pop add pop shrb xchg push fsubrs clc xor mov xchg test add aas cmp imul and scas pop sbb sbb imull test les or aas cwtl pop pop daa xchg bswap mov pop je insb popf ds cmp adc push dec dec push mov pop les xor ret divl aam pop jo push dec jb dec mov lahf pop lods mov lock clc mov push dec cmp into pushf jle mov mov imul pop and pop mov ja pusha jg add lock xlat leave data16 imul pop movsb cmp push jl push push pop xor cs sahf pop sbb (bad) pushf push pop add mov inc leave mov push dec mov cmpsl cld daa or or inc dec ficoml in fisttpl popa push pusha add mov mov out inc cmp sub mov xchg xlat decl incl mov mov add idivl adc xor movsb dec stos negl sub inc divl jae push (bad) repz xor add push leave sbb push mov (bad) repz jg or enter or adc enter sbb sbbb and rcl xor inc xchg in in inc arpl lcall cmp out leave xlat in add adc adc clts sbb pop mov jnp adc push or sahf and inc outsl mov cmp sbb mov inc push mov iret cmpsl movsb or neg push and scas out cmp daa jmp xchg into add or fs push push pop lret rclb (bad) mov gs mov rcrl mov scas pop push lahf (bad) push test pop sbb cmp daa mov (bad) lahf jbe inc fdivl mov push pusha mov xlat sbbb mov lds push ljmp cmp outsl pop inc js in add cmp inc ds add imul fmuls fsubl data16 (bad) xorl mov and jo add mov inc inc mov xchg xchg jno cmpsb jecxz adc outsl mov sbb fsubs or inc fsubrs movsb adc movsb cmp inc aam iret repz mov or push fnstcw cmp sti add pop sbb xor (bad) int dec (bad) inc push in push add cmp aas lods sbb push out (bad) fmull pusha push xchg sub lea xlat dec out inc pushf out mov mov ljmp fidivr scas jbe push inc push push (bad) fsub mov icebp (bad) fist add (bad) stc (bad) clc push push push push push push xor stos sahf icebp push (bad) fdivrl out outsl lcall adc fucom jns fdivr in stos push in pop fcomps dec lds and or dec sbb and add xchg xor inc (bad) push mov nop jge add and or pop add test push popa lea imul out mov push push enter out add fnop aam pop inc push arpl mov cmp mov aam faddl push mov jb lock (bad) insb cmpsl loopne inc inc icebp call or cmp pushl adc pop push aaa pop sub adc or pop push sbb push dec fs xor jb mov popf and sub sbb push push push inc inc push dec mov rclb gs cmp inc mov enter pushl add (bad) mov pushl adc add ds int3 insb in push inc or add jb jne (bad) push scas ds ret cmp jae mov jne or insl xor xchg imul jo in push je jg mov dec cmp and (bad) rcr xlat bound fsubs pop je out xchg pop inc or mov mov or mov scas loope or pop or adc stc add pop sub xor daa test (bad) fcomp es imul jmp sbb adc rorb xchg (bad) add jg mov stc lahf popa jge (bad) fdivs rclb adc and pop or and or lods or sbb pop jl les lcall mov xlat leave loop jmp or mov or notl or mov add and into (bad) xor clc mov xchg cmc test inc pop adc adc xchg push jne outsl push loope and pop sbb push fadds pop mov cwtl mov jl jb or push inc or (bad) lds rolb (bad) mov cmp jne pop add dec jp hlt push dec mov xchg outsb jecxz mov mov enter push js mov (bad) into mov movb rol push xchg mov sti mov loope mov sbb test ljmp outsb in push cltd popa insl loopne popf out cmp and and pop xor repnz test fsubrs push mov cwtl div movl dec imul adcb add xor imul imul imul mov loop and xor push sbb in pushl ljmp mov mov mov push push fisubrl ficoml lea push mov ds cmp push pop mov fcmovbe cmp inc adc shll push scas cmp push lea push dec subl mov jl inc push cmpsb xor in (bad) mov lea test xor mov and push in sbb rcr nop sub xchg mov js js nop dec popf ss inc xchg push and cwtl dec mov dec pop xor pop jno adc xor mov pop xlat add inc hlt mov call ss (bad) sarl push lcall add xchg pop or jl dec sbb cmp pop push rorl rclb xlat xor push push mov jl inc push call fwait xor xor xorb inc pop sbb lock jae sub cmp push xor mov (bad) jecxz (bad) (bad) out aaa icebp dec call rcrb lahf and pcmpgtw push adc push xchg sbbl aaa pop push lret out rcr mov mov aad jge (bad) in int loopne dec and (bad) mov outsl push sarb les pop xor call insl mov inc add dec aad inc ja lret aas hlt xchg lret push into or or add add xchg je ret mov mov adc out xor push enter call add rolb pop xor addb inc mov jno dec dec jae sbb mov mov adc cs inc xlat mov adc mov pushf icebp jo cltd mov inc stos pop jne sub cmc or pop mov lret pop inc and cmpl inc push add adc pusha ret pop jbe repnz sti xchg jne pop push push cwtl hlt orl test sub pusha push ja jne sahf inc pop jnp lahf xor jno enter push inc cmp jbe pusha nop xlat je add push jae outsl xor sbb jp in dec cmp jns jmp jmp cmp inc push mov cmp push shll xorb ss (bad) mov test mov ja lds and popa fs (bad) pusha sbb push inc push lds pop xor add sub sub push jae les dec add dec rcrl or or or add int3 ja rorb mov and pop xchg insb stos fnstsw cmp jb push leave bnd scas push hlt add bsf js cmc add add or add cmp sti and cmpsb loopne sbb ret add and lea sub dec add push jo push pop dec cld mov jmp jmp aad ret add mov in inc lret sbbl lock inc push cmp jne sbb call sbb or sub scas call xlat add cwtl pop adc fldl loopne push mov in and pop dec mov ja xor cmp inc cmp xlat cmpb lahf pop shl and inc aas mov subl sub mov rcrl or cmp push jno jecxz outsl or push mov les adc cltd aam adcb (bad) xor xor pushf dec je xchg push fnstenv xchg xor cwtl or (bad) mov or adc insl add test dec nop sahf mov jl aas add mov sarl sub cmp mov out lcall add xor add xor outsl js leave mov push or mov leave rolb insl and inc or leave dec (bad) cld xor xor cmp into je mov jo je ss rorb int3 push sbb fdivrs push inc lods or les inc or dec in add sbb fldl ret add fnsave add adc adc adc fs arpl shlb sbb jecxz mov push push mov inc lock lret sbb ljmp (bad) or cmp call mull inc xor adc or das jae jae jg lock ret inc adc cmp incl adc push int3 or leave push add mov or adc das punpckhdq add (bad) jmp fisubrl rolb jp sbb inc decl sub and jge mov rcll mov lea or mov mov icebp push push inc sbb shrl inc jp push mov loop or aaa pop sbb jb inc mov (bad) push jle mov mov test in pop pop leave outsl jle outsb inc dec add imul inc int sbb inc sahf add flds ljmp jmp inc mov lock pxor jmp xlat add mov aad mov jmp inc cmp jge idivb ret adc jne sbb leave es jb mov pop stc std jle push xor jae push push loop adc or push and jecxz mov cmp je scas sbb mov popf jecxz fistl and or (bad) dec (bad) sub xchg lahf movsl add add cmp push mov test inc mov movsb push pusha inc in sbb popa movsl (bad) or shlb enter movb fabs sub cmp sbb sub loop dec lods syscall xlat pop sbb repnz lock insb adc mov xchg inc push addl push in push call mov jg dec movsb dec dec inc pop lar push and adc or fimul inc and adc outsb inc and in popa jne setns cmp enter add mov aaa add or cmpsb fwait (bad) dec fwait in dec jo mov mov fs cmpb das push enter inc jne test jmp dec add add or pop fstpt dec or repnz (bad) jnp dec popa adc push dec adc sbb aaa scas fcoms or sbb in pop cmpsl hlt and push xor push push or jo outsb ljmp push (bad) popf add lcall clc dec jmp hlt cmp dec cltd aad movsl cmp sar mov shl sbb sbb subl shl cmp je pop (bad) in mov fcomps adc mov mov aam push es push (bad) lds mov enter mov out aad push clc rclb pop add addb push add movd (bad) mov or je stos adc btr cmp jl popf jle inc adc jmp ret push jae add bt sbb adc loop inc inc (bad) sbb push js add lds adc je sbb cmpsb mov pop ja and lcall push cmpsl add aad ret adc sbb sti (bad) jmp inc cmp jne inc decl jne les mov push arpl and sub adc ret dec je movsb adc test loope rorl jne adc jecxz mov fstpl test or imul outsb inc sbb (bad) icebp pop call es add sub jns dec lock inc pop outsb imul es xlat push mov lret sub enter xchg ret mov ret test xor add cmpb inc cmpsb pushl js in mov xor or outsb pop iret mov aaa mov pop loopne mov and add add mov sbb inc mov mov lods xlat xor cmpsl xlat aas or mov pop pop popf rol push inc add inc dec fs push xchg and sbb lret fsubrs inc testb je gs push sbb scas adc sub daa push push adc ja popa dec popa movsb call sub xchg (bad) sbb push mov ja push pop adc sub inc lock mov sub xor push test (bad) ffreep shrl js push (bad) fbstp add pop cmpl add and out or (bad) jo cltd sbb xchg inc lret sub xchg xlat pop hlt sub cmp jmp test and in in std sbb loopne mov sbb adc mov mov lock divb jnp js leave xorb in inc sub in add adc pop and loop mov and lock jne sbbb jle mov int and (bad) in add js pop push fdivs outsb pop mov into lock cmpsb jbe outsl test pop or push loope (bad) mov test or cwtl out adcl or outsl cmp test dec sti jnp mov (bad) fucom and les ficomp repnz sbb aam test xor std movb dec ss lods pop mov sub test mov fadds nop mov cli pop xlat and js sarl add orl loopne adc scas and lahf rorl aam movsb lahf inc lods pusha je ret mov cmpsl mov mov jle es nop dec nopl pop jmp or jg movlps dec hlt jp stc jbe out bound xchg push int3 mov push xchg icebp fcoms lahf fwait xor or jo aaa or ja fbstp in mov add inc ds push push daa lods aas jl mov pop add (bad) push add inc clc pop mov or mov rorb lahf std or test iret push adc add addr16 cmpsb sub loopne push sbb decb test in xor loopne add add cmc dec movsl pusha outsl (bad) push (bad) mov lods sbb nop sub lea xorl cmp pop jb aaa inc call mov sub pusha ja and pop cmp dec cld loope notl dec jne jecxz mov and inc out jmp xchg iret pushf aam mov clc movsl pop pop ss sbb xor pop xchg in aad push adc decl sub sbb sbb adc lret xor jmp pop iret pop push adc mov fcoms dec icebp sbb or jnp inc (bad) loope addr16 mov aas pop call sub jb dec je jmp jb popf push fmul pop ret adc rolb cmc sbb add aaa inc jns fldcw cmp lahf data16 mov mov (bad) mov mov fistpll outsb stos sbb jmp xchg cmpsl lods cmp (bad) rcl inc and lods sbb out mov xor dec ja xor cs and dec add xchg sub xor inc loope in jmp mov mov stos (bad) (bad) xor pushf mov and push nop jmp cmpsl loope je add shll arpl (bad) jb xor arpl push xchg out xchg pop push push pop xchg js add in (bad) gs mov out test pop xor es add fistp mov sbb xlat dec daa daa (bad) dec clc rol mov repz adc jecxz lahf add popa add xchg and sbb clc sub test int push sbb mov pop push test jnp aaa loopne fldpi inc data16 daa mov mov sbb jmp cmpsl and adc out daa pop xchg cmp xor pop cmp cmp xor lock cld sbb jmp pop xor or dec jge shl inc aaa xor in movsl das add popa out jb and push add (bad) or xlat and jno insb test adc notl pandn lock nop aaa or mov dec sbb sub or mov xchg enter dec fnstenv sub int pop in (bad) sbb clc mov bsr nop daa inc lock outsb xchg cli mov xchg adcb jge lea xor adc test leave dec dec xchg mov enter lods or int pop and pop xchg (bad) xor xchg outsb out mov imul mov mov fcoml inc cltd xor jb and (bad) clc xchg popa mov sub iret rclb inc adc fdivl pop dec orb lods out push jmp xchg shrb nop loopne das xchg jno jecxz jnp (bad) fneni(8087 cs es dec xchg mov inc outsb or xor into lcall add push pop pop push add push fs mov stc lret fist in fwait pop call bound je adc lea pop mov in in mov mov xchg loopne add xchg push mov dec enter rcll pop sub clc icebp test pop fnsave hlt sbb or fdivl lret xchg (bad) add mov and xchg shlb or mov and ret sub in dec inc imul mov sbb into ja and mov test movsb rorl pushf add mov mov mov jecxz adc push test push adc push mov cmpsl cmp stos push cs or pop insl and xor or aad and cmpsl les sahf and push lret pusha in divps xor jo pop cwtl test sbb aas and dec push pop cwtl pop daa ret adcb add dec mov nop cmpsl push (bad) lock adc rcl outsb push push pop push test jl sub jmp add loop or inc fistp jne add sub in cltd clc bound add fs lods in jns cltd mov jae fdivs gs popf loope adc dec sahf rcll pop lock popf cmp mov sub and mov dec ja lods int3 (bad) push ficompl add add xor cmpsb dec pop faddp jle leave mov scas mov pop imull push out xor repnz js lcall dec fwait gs xchg mov enter fwait mov sbb pop xchg js je insl adc push pop das or xchg out lret addr16 sbb (bad) sub sarl ficom mov dec and std mov sbb cwtl pushf sarb in push lods or dec inc jmp fcom mov adc add add lret sub mov xchg and cmpb jne rcll add int pushf mov pushf leave cmp mov popf les clc leave push bound in dec sbb arpl mov and add pop es inc add add add cmp pop mov aas les cmp jne testb orb sarb xor sbb (bad) push xor add movaps jg push faddl adc std aaa cmp push adc sub lret out ret cmp iret or mov adc dec xchg shrb xchg mov inc sbb enter or mov jmp int3 add jecxz xchg movsb iret or into faddl bound in xor data16 andl pusha push aaa popf xchg out sub sbb outsb or mov lret mov rcll or sub xchg jmp pusha mull pop lea cmp fistpl adc or inc fidivl int movl subb iret iret (bad) xchg rorb (bad) je cmovno test pop cld lock dec rorb mov mov and xchg popa les lock inc daa clc push mov (bad) dec ret push cmp aas mov or testb shr sub ret (bad) fs add or dec test lret scas or add repz rorl mov adc sub cmpsl out sahf inc fisttpll (bad) mov push insb push adc aas aam sub add dec push sbb pop lret leave sub (bad) mov mov roll push scas pusha inc mov push mov or (bad) test add add in xchg jle cs sbb xor dec lock or orb nop and mov push fdivp inc add jl (bad) insb sbb mov rcll dec rclb xchg cwtl loop jl and test cmp pop add inc hlt shr out cmpsl inc shll inc insb or and les xchg dec (bad) jg cmp (bad) jl and add divb mov or or movsl movsl (bad) jge sbb jle mov and xchg pop nop pusha hlt jl or dec sub push pop add jb mov sbb adc or sbb enter or push dec and shll inc pusha in clc lret or sub dec mov rclb inc push jge or jle or addb dec out push add arpl adc shrb push sti je aaa add js lods xchg cmc rolb fisub (bad) pushl inc mov scas insl add insl repnz call insl fnstcw pusha jb mov xchg (bad) dec cld push test lahf movsb cmpl cmpl xorb not pop pop adc and and popf or jle mov jne xlat add add stos ss add (bad) adc (bad) mov jg subb in inc dec stos cmpsl push out rcl cmp jnp jbe mov push add hlt aam leave add std fidivrl sbb xchg test (bad) sahf mov cmp dec in bound xor mov pop in movsb push daa jl push push push xor xor mov sub lea push rorb es ret jle or mov adc or add (bad) repz (bad) xor int xchg fsubrl adc jb cmp add jbe push or addr16 aaa repnz data16 or fucomp sbb jl cmp pop fistl or add add push push push mov dec xchg fsubp repnz sub push mov jo aas mov sbb in testl cmpsl movsb mov add gs movsl pusha inc mov rclb mov mov mov and pusha push call arpl sub cmc (bad) sqrtps push push sbb push nop popa pop mov scas test in faddl cmp xchg dec out mov cltd and push mov push pop sbbb dec inc push add movsb push xchg mov sbb mov cwtl mov sbb faddl dec sbb stc and out inc loope cmp mov imul sbb test sbb xchg jge,pt pusha dec jns jns add fs jnp jmp mov in cmp inc lcall das in adc rorl jge fs push imul sub in cmp mov pop cmp xor fdivrl dec mov add sbb call or xchg or mov test pop jae sub ficom adc dec les into pushf icebp or inc fisubrl or rol out int orl je dec or adc push or push rcrb int3 outsl (bad) or orl jns js (bad) fwait sbb (bad) jne rorl or lock mov movsl sarb add push push fdivr mov dec or fmull mov ja fwait dec mov int3 cmp jge xchg sbb or loope mov lahf cmpl lock push enter or inc adc or inc and push jl xchg cmp je sbb jp jne pop mov pop push adc movsb sbb mov andl add xor mov in mov mov test cmp scas bound or cmp xor push (bad) pop sub jnp jle or (bad) test and mov ljmp push sub (bad) dec adc inc xor mov adcb mov mov scas into mov lods or enter in push xor mov adc and push lea push xchg pop rcll out ds dec mov xor adc or out pop push loopne xchg sbb pop jg outsb inc pop shr adc pop (bad) pop test lods mov outsb insb add inc ret mulb sbb jmp daa das rorb xor push mov dec sbb xchg scas div or cmp push daa mov pop jae pop ja jecxz mov pushl push push jb jo imul mov scas out dec scas test shr mov out cmpsl popa mov sbb mov js movsb inc cmp dec push or adc or movsb mov loope xchg sbb ja fmulp mov jne,pn fs mov sub mov lea lret xchg test push inc sbb ret dec pushf push cwtl mov dec lds rclb shl push inc mov sub pop test faddl movsb stos mov pop add push aaa push (bad) rcr inc jp ret fsubrl push adc stos ficom in stos dec mov add scas mov pop mov inc jo adc or jmp mov jp ror ljmp (bad) or fdivr adc mov cmp xchg mull pop jbe sub mov ja mov pusha sbb xor dec mov push push jno lahf int jnp ja cmc push and jl inc movsl testb pop push dec cmp loop cld xchg sbb jge adcb out sub imul dec clc xor loop cmpb xor mov iret cmpsl divl cmp lea aam ds push (bad) xchg mov cmp sub pop adc xor popa sbb mov sub jnp bound mov (bad) jg inc lods jmp aaa push pop inc cmp jl nop add popa or shrl push lahf cwtl mov jno iret andw adc flds ret or sbb mov gs mov adc inc lods ffreep cmpl cs inc test fstps stc fbstp mov adc je aas or fnop inc pop in and jo mov fstl pop fidivr (bad) mov out pop rolb push add imul push mov dec sub add enter xlat outsb mov pop push or lret outsl xchg test mov add ret movsb jo pop mov xchg xchg add add mov sbb mull push cmp add cmpsb hlt ja sbbl orl test daa mov sbb das outsl test loope ret in cmp jle adc jae xchg faddp cld ret mov xor lock push loopne adc push inc adc push fisubrl icebp cmpsl arpl fisubr push jb out dec jnp pusha mov adc ds lahf push dec add push pop out and jae inc js adc xchg popa mov (bad) dec mov sti fmuls pushf xor push je hlt aaa aad add test cmp push cmp test movsb cmc div aaa aam arpl lods movsl xor cmpsl aam pop movsb push inc lret adc sbb pop pop inc andb push cmpsl stc mov mov rcl dec leave lcall (bad) and sbb and jnp movsl dec jnp and movsb cmp andb pop movsb push dec unpckhps rorb pop (bad) pop enter cmp push insl getsec in add push push or jne add nop xchg out loope pop mov lds pop cmpsl rolb repnz inc in jae xor gs in outsb inc or icebp jl mov div pop add mov pushf in (bad) xor repz mov xor (bad) sbb mov popa mov arpl in inc js inc xor fwait push dec addl xor dec clc cmp leave xor dec cmp movsl inc movsb leave loope push (bad) dec pop mov test jp clc cmp xchg outsl test mov adc dec add jne or je cmp xlat es dec jne and ja cmp sbb jp jge enter call rolb xlat gs adc mov xor mov jbe (bad) mov push xchg pop mov jmp pushl dec jne ds fwait ja nop hlt cmp sub mov je popa je dec jge fs add mov gs add mov out mov cli xchg cmpsb add xchg pop out ja push jecxz movsb xchg inc shlb dec ss mov das xorb ja mov inc push mov cmp push (bad) inc loopne sub loop cltd fcmove adc dec mov sub push (bad) cwtl dec test (bad) pop push pusha sbbb sub lods xchg sbb adc shrl loopne xor adc js lcall sbb fcoms dec cltd dec jle push mov pop and fs or test cmp pop icebp jecxz,pn in dec or inc add faddl jae push sbb mov lcall mov in mov shll mov mov mov leave mov repnz inc mov (bad) (bad) rcrl leave test les imul (bad) outsl adc and and adc mov cmp das fmull fcomi in cmp shll je mov inc push mov (bad) pusha push xchg push inc (bad) pop cmp push add (bad) cld (bad) cmpsl adc cs xchg mov jle pop jnp pop add jge decl int3 nop cmp inc sbb or pushf fs xor testl and aaa int3 ret rorl mov nop mov lock add dec sub inc call sbb mov inc cmp mov hlt lods nop pop test fxch inc xchg popf xchg loopne cmp jnp cmp cwtl int test pop repnz cli mov lods jno add in xchg fs lock int mov ret in xchg jo imul cmp in dec jno pop mov mov outsl iret jae stc sub mov dec sbb adc pusha add or pop dec sub push iret inc or test add sub mov das mov push and in addr16 js adc in inc jo mov mov push xchg (bad) in enter xor sbb and cli pop pop in shl xchg or jne in adc aas mov enter (bad) xchg or xor xchg jb pop ficoml pop or inc sub lahf (bad) repnz daa fadds push jp sbb addl in (bad) and sti inc mov mov pop or cmc sub fcoml sbb leave dec mov ret insb addr16 push divb (bad) (bad) mov je sbb rcrb lods adc mov cmp addr16 stc rclb adc pop pop push mov mov pop popf xor xchg pop jne scas and mov add subb in adc inc cs fwait add jae in adc pusha sbb push je dec dec rcr fisttp inc in push xlat loopne fnsave sub xor mov xchg sbb cmp push imul nop aaa pop adcl cmc pop rcrl setp sub fsubs cmp lcall outsb xchg xchg cld adc pop (bad) sbb sarb xor test hlt sbb lods dec xchg xor xchg push mov and xchg cmp mov pop loope mov out or setno pop inc push sbb and (bad) iret sub rcrb repnz xor ret imul js and enter or scas fs inc in cltd fnop clc ss js hlt clc sub lahf push add jbe popf jne and cmp push icebp and sub inc cmp (bad) fistl xchg (bad) cmp lahf out or sbb add dec cs mov adc mov pop xchg jbe into mov fs aas adc dec sbb faddl xchg cmpsl mov mov orl mov jns les sub mov repnz repz pushf stos incb inc inc add mov lcall idivl mov sub int3 xchg sbb and adc nop fadd daa jns xchg mov xchg movl nop clc sub addr16 mov ss test sbb add movsbl out lahf dec xor mov sub sub dec cmpsl daa cmp mov in insl addps xchg es out movsl adc test sti pop push aas mov adc lock jne mov and testb mov pop ret push fsubrl cmp xchg pop lea sbbl cmp inc jb lock jne adc mov iret into fsubl mov in xchg or call add inc pop ljmp or and stos clc (bad) cli shlb dec aad and jmp lret mov daa and xchg jae stc in enter repnz mov pop (bad) and dec popa mov clc cmp pop lods mov hlt (bad) cltd scas inc (bad) out or cmpb xor inc mov rorb lahf mov imul cwtl nop jle pop push xchg std test mov mov mov (bad) or xchg jle adc pop mov sub (bad) mov shl mov add and iret mov xchg sahf lcall mov jo je scas loope cltd lds mov lgs dec xor cmpb cmp push push fstpt pop sbb jno repz or push inc enter push test mov (bad) call rorb imul stos cmpsl and les mov push sub in and repz cmp fldl and push lret push lock pop lret add inc sbb sbb or sbb mov add xchg lret jne mov lock addl mov daa inc clc jge dec or pop mov rorb mov les add call or push dec sbb loopne fwait int sbb cmc call imull sub clc jnp lock lods xor mov test subl and in xor jl out mov mov int3 mov jb int3 inc daa cmp inc sbbl dec mov pusha ds ret jns pop sbb (bad) call insl or cmc xor xor lcall xchg cmp das mov rorl pusha and cmp imul imul arpl xor cli sub (bad) jbe or jmp xchg or outsl mov xor pop cmc movsb inc push sbb jnp mulb mov sbb mov pusha mov gs adc cmp addr16 mov loop aaa cmpsb jbe popf sub push fild jo fistl aas in ret lea jmp mov test jae inc pop dec xlat (bad) dec test cmp or jmp inc push jge mov imul (bad) ja test repz and mov and dec sbb xlat rcl add fadds or das xchg inc imul xchg mov rolb push inc add (bad) aam jno lods cld ja loopne sub add push sub mov cmp dec sti push mov fdivl mov (bad) or sub lar shl ja dec repz movsb aam sbb clc add (bad) fs cmp test sbb jle adc and je or call xor in pop rorb pop imul lods inc dec pop lds add xor push daa mov das xchg adc inc lahf add mov test cmp xor inc mov orl sahf pop inc jnp jl fcoms dec je push xlat or jecxz xchg pop ret shrl adc inc inc jecxz test mov (bad) inc dec or mov jmp (bad) xor stos inc xchg addl sarb mov mov fsubrp mov test inc test xor dec cmp and pop xchg sub jmp adc push rclb inc cmpsb loopne stos ret jmp lds orl inc inc ljmp inc outsl rcr aad cmp mov test mov sbb dec aaa sub mov std (bad) xor adc pop jne jne adc mov adc clc inc sbb push call push push adc mov cld sbb cld mov push sbb hlt xchg (bad) insl push jb cmp add jmp nop inc pop pop push jg sbb pop jecxz jae push les sub out shll pop and (bad) mov out push push mov (bad) roll add dec addl dec xchg mov adc les rorl jno or ja adc nop mov inc aam sbb inc ret call push sahf lret ret cld add push add ja adc and push je cmpsl mov jge shrb and scas shll xchg mov adc andl (bad) cwtl loope leave adc mov or (bad) (bad) jno pop xchg cmp xchg dec aaa aad iret jnp inc jns nop push pushf push scas rcl sti outsb repnz pop hlt push add iret rep pop sbb and inc push addl repz insl jmp sbb outsl dec pop pop mov and add xor dec ret (bad) mov pop les xchg jmp das (bad) je pop push adc mov sbb mov xchg or sbb or push sub popa xchg (bad) pop mov (bad) or cld xor (bad) insb push push ja hlt mov jl imulb ljmp pop and arpl mov ret push mov rorl loopne add test inc adc cmp movsl lock push negl sub sbb mov adc inc (bad) shrl mov inc push and inc push push pop sub sbb jge push call cmp jge outsb loop xchg test jg fcoms dec inc pop push xor dec clc lret aam xlat dec rorb rclb clc clc inc push sbb pop add inc call jmp in (bad) mov sub test (bad) scas mov cmpsb sbb dec and sbb rorb push add test je shrl ret jb mov jmp cmpsl fwait pusha vcmpsd jle,pn outsb add push sub aam or test ficompl jmp xlat call fiaddl (bad) jp (bad) mov pop cmp cld pop adc push test cmp inc bound not push dec movsl xchg inc push xor adcl sbb dec cld repz mov sbb rcrl imul dec enter clc lea test cmp cltd or xor pop inc movsb fwait clc mov mov inc faddl xchg xchg lea push aaa push out (bad) hlt dec jl push dec lret cmp stc jo sbb dec call inc das mov (bad) jg adc (bad) inc pop sub aas sbb add inc ljmp add xlat pop fucomp shlb in in and sahf push (bad) repz push lock das ja mov xchg pushf pop cs mov repz mov (bad) out ret jne je adc mov fnstenv int3 fcom movsbl jl and mov add in pop cmp lock mov push and mov sbb sub insl jg dec pop mov adc pop jmp ds insb daa pop fnop jmp push mov call cmp dec add mov movsb sub ret mov pop and lods xchg mov add add lcall sub or dec scas pop sbb sub or add add dec pop pop xor mov cmpsb hlt pop cwtl mov rcll fwait call mov ret mov psubsb add jle jl or sbb js push cmp int iret adc or movsb jl pop sarb sbb and add add add fildl add or jae fnsave dec je and mov cmpsl add mov xchg push adc dec lods lods (bad) dec xorl push (bad) xor push aaa or (bad) pop xor jmp cmpsb icebp inc jb movsl inc sub or lock pop adc push push cltd jge cmp je adc mov or sbb addr16 dec mov mov sub push push pop push movsl mov (bad) jo xchg add push pop dec cmp in test ret nop pop cwtl sub fsubr adc je sbb outsl cld popa leave dec dec ja cwtl gs std adc (bad) sti iret pusha jmp pop loopne sub jnp xchg (bad) ds xor push push push cmp and or adc fistpll ljmp rolb inc mov xchg sbb int or jl fucom scas sbb push push (bad) cmc insb sub stc aaa jo xchg (bad) test mov stc in fs xchg push cmpsl mov das enter imul lock loope cmp imul test push aaa cmpsl mov loope enter shrb dec roll mov jb pop (bad) jo add es pop push or dec sub jp mov fldenv (bad) sbb addr16 test pop sbb loop imulb movnti or push xor jl sub loopne,pt inc ret dec enter push xor lock jl enter enter and cmpsl pop (bad) imul das (bad) lock or cmpb sbb sub mov sbb and sbb loopne adcb test xlat push lods dec xchg gs add adc mov sub sahf jecxz cmp addb pop ret or mov mov or inc movsl pushf jnp lds mov push push adc dec loop or add scas rcrb sbb xor and pop pop inc jge aad aaa cmp or mov outsl mov sbb inc dec mov adc shrl nop or sub mov jmp mov cmp mov sbb cmpl shll add sbbb add pop data16 adc outsl aad mov jl popf mov add std in out add aas add sbb dec mov xor jp out add call test and call int3 push sub cmp or in lods aam mov xor cmp je test adc mov xchg jmp inc sbb inc cld inc sti mov pop shrb aas mov shlb sbb mov pop int3 mov imul (bad) pop clc sbb ret xchg inc push subl add movb loopne xchg cmp xor jmp movsl xor pusha ljmp push push jp adc push in sub js or sbb mov mulb pushf movsb lahf imul ss adc mov addr16 js or and lods je mov fmuls out pop mov inc or je sub jb aaa out push or xor dec test das mov sbb jne lret fisttp out jmp mov inc sarb in mov push xor sub notb movsb or fcoml into xor je pop xor add jg jecxz sbb orl test (bad) in inc pop outsl and add pop insl jecxz sbb sbb dec test mov add lahf xchg neg cltd add shl jo push test push and mov ret inc movsb sbbl cmc xchg leave dec mov and jnp jmp lods testb push add or and adc pop or sub pop ret sbbb adc pusha xchg push fsubs (bad) xchg pop lock jae lock xor mov outsb mulb inc lret sbb dec or movsl in sub (bad) jno fs push inc sub pop adc orb sub xor push mov or mov xor xchg or add xchg adc inc outsb clc inc sbb or fistpll stos xchg mov mov pop push sbb mov test inc add cwtl and data16 aaa daa rclb inc (bad) lahf dec push mov fmul js xor fdivrs jge arpl fiadd loope and jge push push lods add and in push cltd rcr es mov jmp cmp inc xor or add aam mov mov (bad) dec add add push outsl jo pop adc arpl jg fbstp inc and pop fcomps inc inc dec out cs pop inc notl arpl shr in decb mov xchg insb insl (bad) xor pop loope rcr lret inc cld das mov cmp jne les imul cs jne pop arpl adc push sub mov addr16 jne insl jae push orl loopne push scas imul and sbb push dec mov (bad) xor or pop mov sbb or inc mov xchg jle inc dec jne push fmuls stos das stc orb (bad) mov outsl call dec push aam mov adc mov inc lcall push out jmp sbb mov or fdivrl add mov jp daa adc dec sub mov push add or jb sti xlat leave test test xor add outsl loope aam and add (bad) sbb (bad) jg push dec cmp aam xor insb gs xor pop xlat je inc mov dec sub add andb jmp and sbb add jl icebp and nop jo cli ljmp data16 rorl cmpsb sub dec cmpsl arpl jns pop (bad) fist data16 mov jmp (bad) sub xlat jg cmp fs jae (bad) xor rolb mov mov sub add and add ja inc mov ja jge jne js mov xchg jnp jne (bad) pop mov jmp push add push mov mov fs sub or bound aam and aas (bad) jmp xor add cmpsl adc imull jge add out pusha adc inc pop inc or sahf icebp clc and ljmp mov mov rcrb cmp xchg scas mov mov cmpsl loope mov mov xchg add or cmpl push lcall add jbe test ficomp pop or push (bad) jmp out mov scas dec sarb sbb push pop out inc push add or int and lds clc cmp f2xm1 fsubl lock ja add pop pop cli add xlat cmp xchg repnz cmpsl rorb or pop adc (bad) cmp inc mov inc je dec push out or andl ret adc out add xchg inc push andl xchg adc jo mov int popa jecxz (bad) es lock sub cmp jne pop adc dec cmc fisubl loope test cmpsl wrmsr and sbb xchg push sub mov push sub or lods (bad) stos inc mov imul mov movsb iret xchg push in sbb lahf repnz int3 xchg or add xor xor add inc add addr16 jge sbb imul js sbb adc add dec movsb es inc pop adc jns adc jl add mov add inc lret ss jle pop sub test jbe (bad) inc sub mov fcompl xlat pop sti in xlat pop add adcl cmpsl add ljmp test shlb add movsl scas test aas aaa dec inc loope and inc shl das jmp or in lret popa jb insl into cmc lret popa push push or adc ret jns sbb aaa test inc add clc jne jbe dec mov xchg fcomi mov or mov adc call shrb cmp or cld aas jo or push and pop fwait lods adc scas fistl add fcoms push xor pop push ja imul inc lcall (bad) jne push and xchg xchg ret shlb mov cmc push sub xchg adc call push (bad) push outsb popf aad ja (bad) cld ja sbb mov dec xor loope push sbb loopne aaa jo in call bound mov pop sub and cld cmc or pop adc sbb push jp rcll push pop loope mov mov ds test jge (bad) push fwait mul test lock inc add inc sub bound movsl mov xchg outsb or inc sub sub xchg mov inc pop mov repnz or cmpl dec push (bad) shlb push mov and sbb (bad) adc shrb cmp mull pop loop jl pop cmp scas xor sbb inc pop adc xchg sbb or call xchg pop insb mov sub jo rcrb ret aaa mov (bad) clc insb or or lock js push test mov xor inc lock pop jp lea out mov pop or add mov push cmp inc add pop mov ret (bad) cmp fisttpl ret mov cmp dec test or jge jbe cld stos adc (bad) addb fadds orb arpl add xchg les movsb xor cmpsb sahf xchg jp adc rorb pop lock mov pop into inc pop xchg mov mov call lods push fst les loop mov outsl pop sbb jge mov dec icebp fs sub sub add cltd scas mov pop test push test sti dec xor cld xchg and push dec pop sbb jge lret loop clc inc mov and movsl sarb sub or mov xchg mov test fcmovb lcall mov leave and sbb loopne aaa pop cmp subl jae cltd or pusha dec loopne jge jge pop mov je sub ret in sbb in mov mov adc and jo mov sbb fild jno cmp jmp jne cmp cmp js cmp cmp jp jl cmp cmp jle pusha popa cmp cmp bound cmp cmp addr16 cmp cmp insb insl cmp cmp outsb outsl push push cmp cmp push push push push cmp cmp push push pop pop cmp cmp pop pop pop pop cmp cmp pop pop inc inc cmp cmp inc inc inc inc cmp cmp inc inc dec dec cmp cmp dec dec dec dec cmp cmp dec dec xor cmp cmp xor xor cmp cmp ss cmp cmp cmp cmp cmp cmp cmp ds and cmp cmp and and cmp cmp es sub cmp cmp sub sub fwait les cmp das in xchg std adc (bad) add xor outsl insl adc push add push rorb out sbb lahf cli xchg push xor mov les pusha mov es test sbb je imul dec push xor data16 mov and adc movsb data16 mov push fwait jae cwtl std add push nop test sbb repnz add jae je (bad) popa or xor push je insb cltd (bad) xor data16 shll enter je arpl adc adc gs dec and sbb sbb ljmp es dec jae xchg cs mov push ja outsb int sti not mov xchg outsl sbb push inc popa jae add imulb or adc push mov sub push mov push xor mov xor (bad) add insl inc insb idivb sahf scas push push push je into insl dec outsl jo je push inc cwtl jnp inc jns sbb mov pop jb gs and add fnstenv xchg sbb mov jnp pop xor aas mov es out loopne or and ret adc cli jbe imul jne dec pop mov xor push adc or dec jl jp ss cmpsb pop imul fidivl or xor cs inc outsl jb jae mov lock and ret mov and sub and addb je jbe push aad mull scas mov popa adc lds and sahf or mov jle dec mov ret imul inc and mov xchg insl add add sahf pop jnp shlb add pop or ret and enter pushf and nop inc rclb das call stos and lret add icebp iret pop adc pop mov sub xor cmp add xchg and aas je fcomps or inc push mov jmp in sbb ja mov hlt sbb push push dec gs mov sbb inc xor out daa mov sub gs nop or mov jns nop jl add out loop adc mov rol jl incb ret jae mov imull sbb jo cmp lds mov and sar xchg xchg add cwtl in pop add add add in xor cmp rol sbb ds adc ds inc je out mov jo leave stos (bad) sbb nop and scas push cmp (bad) repnz add and scas xor dec add or les add sub repnz xlat pop daa or inc dec or jl sub insb sub mov mov sbb push hlt loop mov or scas vaddsubps or and or int3 push or lods push out in sub add js cmp cld sub add sti inc add fcoml push xchg ret sbb es pop xor adc xchg add adc sahf xlat stos adc cli add and dec mov sbb pusha mov sub fstpl xchg mov sbb push icebp sahf imul sbb pop loop xchg push aas fsubrp cmp push sub sysret movsb inc ds mov enterw mov out cmp xor pop arpl or popl and enter add jo add mov enter pop in fcomp add addr16 dec xor dec push pop cmpsl jle sbb dec cmpsl lock out adc inc push add push xor sub imul dec push jl ret loop dec inc out ficompl data16 addr16 dec sbb adc push xor je jb add imul pop and lods adc rolb add outsb das pop xor or fistpll pusha or fsubs popa addr16 stc or fimull mov or push xor ss mov je es in bound ret nop insb mov adc in xor mov xorb cmp jg dec inc aam faddl inc push lret inc fild push lods push jle push inc popf call push cmp push fdivp inc sub pop push pop jle nop (bad) (bad) xor pop and stos clc push dec or sbb inc push je,pt js jnp icebp push xchg or insl mov aas lods mov push ret xor jg imul imul push outsl jle outsl clc push in jp aad loopne jl,pn fdivrs jle mov lods (bad) cld push orb push push jns hlt or insb jp pop popa adc pusha addr16 sbb mov xchg or cwtl sbb fadds or outsl outsb pop lock hlt dec int3 pushf pop push xor in daa jns (bad) pusha (bad) rolb addl xchg fcompl test fmull loopne dec jnp pop xchg addl xchg push add sbb pop pop sbb idivb add ret outsb or fmull add mov dec ret push jg call mov popa outsb nop xchg mov mov xor data16 add jne inc mov and push adc cwtl pop xchg and daa adc dec popa int or add inc std or push int in aas rol dec adc pusha jb push inc jo and cmp ret xor je sbb clc push add jne (bad) add xchg fdivrs outsl jle movsb or shrl inc cmp dec ret xor or adc cmpsb mov rclb or xchg sub mov into add pushw iret add decl sbb or int cmp std insb mov mov (bad) dec add shlb add ffreep imul jo dec (bad) lock sub (bad) test or cmp push xchg mov xor add sub and out pop leave adc and xchg pop jmp test repz inc mov mov loopne dec out xchg jns inc jnp fidiv js loop popa sarl je push std xlat cmp pop and xchg (bad) cltd fsubrs inc ja in fild es and incl and dec inc jle aad aaa addb pop dec int push adc in inc pusha pop sbb repz (bad) dec out adc pop dec mov or stos add in loopne pop adc call lock adc and mov pop out addr16 icebp ftst add inc call sbb jge mulb loopne jg mov mov test adc pop cld (bad) mov xchg into push cmpsl mov rolb or xor xlat arpl scas mov jle outsl lcall inc add pop dec insb in iret insb lods pop push xchg jbe add add insb xchg sbbl fsubs pop add push imul pusha aas pop xchg gs gs cmp iret lahf jne enter or arpl imul add pop inc and jns (bad) mov add ja imul les dec or mov push xor andb aam das cmovae gs mulb pop imul popf dec add inc push addr16 and enter je inc test xchg dec mov jnp das or jg js pop pop mov jg sub push mov and sbb imul sbb inc fiaddl or je pop rcll wbinvd movsb mov lret insb cmpsl xchg jg fbld pop imul adc mov aaa pop or sbb jge outsl inc push mov jg pop outsb jne and inc icebp pop xchg daa (bad) (bad) es iret or lahf sbb xchg dec cs push arpl mov cltd add imul sbbl das cmp (bad) out daa or push das or or or incl arpl push pop jo push mov push clc xlat imul adc mov push fld push adc pop psllq lcall negb decl inc dec inc push push inc push add inc inc inc push dec push xor notl dec inc dec dec arpl dec inc inc push adc inc push rcr add dec dec push mov push xchg mov jbe inc dec dec and out pusha addr16 incb xor xor adc (bad) notb (bad) inc inc dec inc xor fisubr notl dec sub xor mov mov sbb mov inc and push push push test xor ja mov pop xor inc inc push push push dec push inc scas (bad) icebp xchg inc dec push mov xor xlat pop add (bad) out push mov mov sub pop push mov cmp or jl add not cli inc mov or sbbb jne inc sahf xchg cmpsl add jecxz adc pop mov in test mov lods add mov sbb insb dec sbb add ret push jne inc xchg xor cmpsb or add add mov dec pusha push cmpsl loop,pn scas shlb mov xor mov and mov es stos push mov iret pop bound inc insb xchg test add addl add sti adc dec movsl jmp or js fmuls mov das outsb dec inc jmp incl orl clc sbb push jne test fldcw inc adc cs in jne loop pushf mov add xchg adc cmp push lock cli das xorl xchg sbb and or or add push sbb mov or stos cmp mov add mov in lret test inc loope mov pusha push ret xchg je orl in je or test push test inc sbb in fiadd (bad) rol jmp adc rcl ds aam add mov (bad) pop sbb pop mov adc lea add or fsubr mov inc mov out sbb mov std test jmp jo cmpsl jge mov mov inc fiaddl push fsubr and (bad) jecxz push je in and fisttpl and add or xchg sbbl jecxz jo sub (bad) xor mov rolb repnz mov mov xlat test es fcompl pop adcb or xor mov imul nop push inc mov or sahf ret pop adc incl fadds es pop arpl inc loopne fstpl mov jl jb push lcall test cmp ja mov or pop loopne out fstpl inc push das jg mov fdivp ficoml jp mov mov add pop pop ja or add fmull cli or maxps mov sti xchg xor pop xchg (bad) add or pop or ja pop lahf movsb dec loopne inc sbb add add loopne jb sar add outsl push push push loopne sbbl aam sub adc pop push sbbl movsl add in add (bad) in add dec es push leave dec push cmpsb pop lock test inc mov pop mov add push jne fist pop jne rcrl (bad) fwait sbb mov inc dec rclb das nop dec xlat push mov clc xchg push repnz jecxz cmp mov fidivl lea enter jne push cmp or lock or inc rclb inc sub sbb xlat adc iret and push in adc sub and adc mov leave sub xor pop and scas push sarb pop sub and enter cltd and pop sub sub js inc push push adc adc add (bad) xor bound js lock adc xchg jae stc and jnp lods and or cmpsb pop insb das aad aam js add fstpl jb repnz or adc lock insb or jmp je push adc imul or add cmpsb test lock dec movsb in inc andl aas adc mov pusha ret cmp nop and es aas inc nop popf nop inc cmp add xor jg popa mov movl push cmp pop xor inc or inc inc sub adc inc ret movl mov bound jno adc xchg (bad) dec push pusha push insb add push adc mov les nop jcxz add jge mov roll rcrb pushl sbb push or push add or int mov or xor sbb xor sub push push or loopne or fsubs jo nop xchg shl dec in mov (bad) pop in cmp jbe cmp xor loopne iret insb movsb (bad) mov push add add mov or clc add or pop pop popf and pop mov adc dec sub (bad) out push pop int3 jnp mov (bad) jae or das (bad) push or jg sub xorb jo and jge push insl push lock fwait rclb outsb or push (bad) test pusha lea cwtl sub xor mov cmp add nop sub sbb xor loopne dec getsec in sbb inc or xchg mov es daa iret or mov emms xchg cli lock into testb je push or pushf and sbb and jge push clc repnz cli sarb in push or and or xor iret add inc lret icebp dec cmc cmc pop sbb or inc add xchg add dec pop jnp shll push push sub mov mov cmp xchg or sub jne jno cs push scas imul xor mov push and add aaa push cmp dec push and dec push adc xlat (bad) xchg rclb and addb jmp adc add sarl sbb inc adc ds cmp scas outsw adc in pop sbb adc cmpsb dec inc xchg xor and or aas test enter aam xchg les addr16 mov mov (bad) ss xlat enter call or add sahf outsl in pop xlat leave xchg push push cmp call ds jae (bad) out outsl lods dec mov and mov cmp je mov cwtl push push lcall mov or mov fs shr das dec add xchg fnstsw es das lods (bad) adc sbb out cmp inc add arpl incb and and orb clc lea push xor fwait lock (bad) decl and mov je aam scas sub push dec and cmpl push insl leave lret loopne push add mov push add pop push add or xchg mov mov ds jbe xor push xor or add sbb and sub cwtl jns jno xchg sbb mov and imul test xor add subl bound inc orb jmp mov imulb je test std sti (bad) push lret jno ds jno or stos cmp xchg std das mov insl icebp inc mov sbb ret nop mov xchg mov movl movl add and xchg outsb rcr or cmp xlat push in add add pop out das lea pusha mov cmc aaa jmp mov or mov adcl xchg mov jnp test adc adc in inc das jp push add (bad) test add js jnp xor mov test push fs sub imul into pop lock (bad) and mov ret pop or addr16 sbb in mov sahf lock jle (bad) add pop push loopne std sbb or fimull push (bad) mov mov adc fisttpl mov cmp pop cmp lahf js and push or mov std shl lock divl roll and fild sar xchg pusha dec inc (bad) mov inc push add sub test sub add add test push sub push stc pop xor sarl enter lds jo mov ss or lcall mov cmpsb fchs (bad) dec fdivrl lock es add push push jge mov mov pusha cmpsl cs lods sbb and fdivrl mov mov push sub dec jmp jns xor sbb ds xor into fild push inc daa or in data16 push movb mov movsl movl cmp sub out adc push rorb aad adc dec rcrb dec lods sarl bsr adc (bad) adc and dec notb adc xchg lea add js decb mov mov or add jmp dec mov sbb sbb mov sub cmp aas or (bad) add jle add mov lods dec add mov dec (bad) mov lcall or jne jp (bad) jge pop fstpt sub push push sbb (bad) rolb gs mov push inc lea aam pop cmp incb ja inc call and out (bad) stos inc and mov enter mov dec (bad) xchg and jns jmp mov jecxz add fildll adc jecxz mov mov jmp rclb movl cli sub push inc fist pop repz sbb push add pop aaa jno fcoml jl pop push jnp or rolb sbb dec cmp jecxz ds rolb (bad) fiadd mov lea (bad) push xchg pop push cmp cs push addr16 data16 sbb and sub cld add pop (bad) icebp dec movsb pop mov jg push pop xchg sub ljmp clc inc cmp (bad) xor clc push adc or jge pop icebp aaa das test cmpsl add repnz and in ficom int fimul leave clc and pop mov imul add sub pop loopne pop pop push push (bad) cmpsl mov add mov ss push jo test out aas and das pusha shll dec mov je push pop or lret mov adc adc es cmc add mov xchg mov and xor add add pusha dec xchg in mov cs fistp add aad push or sub and mov popa pop je inc push outsl push dec test sub loopne jmp push add jg fmuls cltd push push ret jnp loope stc add je (bad) lret call push pop popa xchg loopne subl mov aam jge add je add xchg or clc mov push add (bad) repnz pop movsb fdiv cld mov or in sub les push mov xor sub out or add test pop xor cli mov inc and imul je shrd insb pop cld push jns add push pop aaa mov inc lock add add je mov aaa cmp push imul jp pop xor mov jle sbb enter or pop add or fdivrl test movzbl sbb add push push lock mov or (bad) mov test jle cmp jl add int enter jg jbe sarb (bad) les test dec movsb add and push sbb dec inc pop cmp or popf pop dec gs or loopne sbb pop dec bound mov pop lcall push mov dec cwtl fcmove pop fcomps xlat add adc mov sub inc cli imul repnz xchg cmp sub (bad) test sub test add daa mov loopne test cmp inc add mov mov push jg or jl push cmp xor dec xchg sub das or fldcw sahf inc dec jne cmp mull cmpsb fs xor xchg xor cli js ss cmp push inc and inc adc sbb push xchg and mov pop aam add popf aam loope dec mov lea add nop mov insl sbb int3 jbe (bad) mov pop cwtl enter inc mov insl mov push mov imul fs add xchg lret fucomi xor (bad) popa pop je sarb add push push mov (bad) mov ret mov and mov push push mov jmp pop loope mov jecxz push pop cmp mulb sub push sub or sbb xchg mov int inc mov js mull push sarl push jmp xor add rorb or jl ret loope dec loope push sbb mov xchg test aas sbb lods push fiadd jb rorb sub xchg roll mov add sbbl dec or adc sub jmp fs fnsave adc test adc sub adc insb and iret sbb push sub or inc inc sub jae insb inc outsl lret out and out add sbb adc dec adc (bad) xor (bad) cmc pusha loopne rorb sub push pop dec out adc pop test add mov jne pop sub icebp add add or mov lock add bound sub xlat hlt repz sahf add pop pop and dec inc cmp dec stos leave xor or scas xchg int pop and push xchg mov push (bad) arpl push dec js inc jmp sub cmp jl push hlt decl or inc push gs pop adc sub or dec sub pop cli sub in inc cs sbb adc (bad) lcall dec push push (bad) pop aas add mov pop push push in hlt sub movsl int3 inc call and add pushf mov clc call jp sub cmpsl fsubr mov add xchg and add shl xchg add (bad) (bad) ja jns add lock jb nop dec mov jb iret sub inc fmuls fidivl mov dec push in mov mov or inc adc lods mov mov fadds cmpsl mov mov and dec scas sbb stos mov push (bad) mov arpl dec hlt test jno sbb adc movsl imul hlt loopne lcall call mov popa addl pop aas call and xorl js inc jmp shr call pop mov in dec call xor (bad) mov adc sbb adc mov dec ss out test adc xor nop push es sti or adc leave iret inc pop add mov inc inc or cltd dec dec pop popa xchg leave js cld in mov adc jns xchg mov je sub arpl je imul xor xor das add clc jmp push cltd hlt jbe rorb xlat dec es adc or sbb mov mov fcomps push cmp cmp insb daa pop ja inc lret jge mov lcall mov dec mov ret aaa hlt int bound and mov sti aaa in out mov sbb adc loopne mov or and cmpsl pop ret pop jg inc mov inc inc mov push and mov add fs mov dec inc scas cmp jb add clc inc outsl jb lret hlt lea and lret fldl (bad) xor jge bound add call inc inc adc sub mov rorl mov ljmp push inc movsb xchg mov inc add push enter mov pusha movsb or repnz hlt mov pusha xchg cmp xchg or mov cmpsl test xchg sti lds addb fcom or dec pushl popw call imul mov outsl scas xchg (bad) fdivp sbb adc push in cmp inc dec jne and insl adc add mov or popf mov orl stos jo fldl lea pop and xchg cs ljmp inc and and or fcmovb mov xor (bad) jne clc adc orl jmp pushl pop sbb loopne (bad) adc ret inc daa or (bad) push pop sub dec adc jo outsl push arpl xchg sbb jae push or mov and test add add loop mov mov sbb sarl jno inc (bad) lret loope dec sbb jne cmp mov push pop das insb inc ss aad (bad) and cmp jne pop jmp rolb enter jmp fcoms add inc mov daa mov in hlt cs mov (bad) enter aaa cwtl or decl adc or pop leave movsb js mov add push lea pop xor (bad) aas and out lods xlat pop jne mov or call or pop mov dec jae shld sbb nop inc nop cld fmull xor (bad) pusha and out jl pop adc ja mov loop imul pop iret mov push sti and pop mov das sbb ret nop dec (bad) sbb dec jg add pop adc mov test mov xchg and add inc mov lea rcll cmp (bad) rol movb leave and sahf jno shrl or or mov nop mov sub push cmc push xchg pop or pop jno xchg arpl inc rol mov lock setno push push cltd loopne sub ret aad das xlat imul pop outsb out out sbb clc pop push mov and or mov mov or or pop cmpsl cmpl lea sbb sbb mov orl sbb pop mov and dec mov and xchg sub mov pop mov pop pop or mov inc sub cmp ret xor mov test (bad) pusha mov (bad) sbb or gs xchg shl scas add (bad) je adc pop inc sbb fstl mov imul ret (bad) cs jo and lods xchg inc add mov push or pop call adc testb mov sbb adc rolb dec jmp sbb mov pop lods xchg mov das push lahf cmpl and out sarb rorb inc (bad) xlat xlat mov or les inc cmc sbb or jb mov and dec pop sbb sub adc (bad) sub scas add movb push and and test in dec je jnp sub push (bad) icebp (bad) lds les inc inc push inc sub fstp push dec js xchg dec sub sub sub inc sub adc rorb cli les mov push call and or push xchg inc and outsl sbb add scas push scas fdiv mov sbb sub pop loope jl pop push ret jnp add aam call sbb lea mov cld je decl insl or sarb test push mov adc fnstenv sub jg es pushf pop jne inc orb sub sbb or mov (bad) ss xor sti nop imul aas sbb adc call adc (bad) pushf les cmp push pushaw dec mov pop iret fcomp or std imul mov mov cwtl rorl (bad) and movsl dec aad (bad) jo sbbl push adc pop pop fmuls pop ss add xor add cltd sbb dec or inc jb or (bad) dec scas add xor jg mov inc adc xchg mov (bad) mov aaa in xchg jg push adc sub ss sbb pop scas xor dec add or or daa cmp stos cmp push shrb cs push xchg ja jnp add movsb jns,pt iret inc ret aas cmpl and inc je fdivl sub sub jbe pop or push lea dec push rcr dec enter push std push mov cltd pop enter add and jl xor push push rcrl mov adc pop iret add xchg stos subb mov sub mov xor lods fidivr sahf subl lcall adc pusha adc subl sar pop cmpsl sahf pushf hlt push push jns xor fcmovb adc pop movsb mov push inc pusha xchg push xchg dec (bad) lret mov call ret or ljmp into (bad) mov out sbb (bad) fimull or sub jne lea add or mov sbb add cmpsl cld aad add sbb add dec cmpsl adc pop sarl fs or andnps (bad) xor sub mov leave jns aas (bad) fdivl fmul mov js stos jns movb add xor hlt icebp test sub addl and ret (bad) mov xor (bad) je pop adc xor or out xor inc js mov outsl lcall aas push or pop fs in mov aam call add push push push and repz cmp je daa inc or adc adc or ja or cmp xor call push leave fiaddl aas je xor nop dec xchg (bad) orl pushf andb inc xchg icebp inc adc xchg in jb jno cmpb rolb adc or movsb or jle sub sti movsl inc sbb or push test pop adc aam popf sub clc sbb rcrb adc and loope or mov popl or push mov test fisttpll jmp or cmpb inc enter or mov sub inc dec pusha sbb aaa dec aam mov mov rcrb cmp rclb mov bound ja jb pop xchg pop data16 sub fmul add dec sub inc dec lcall adcb pop jbe leave jmp pop jl les mov lea ret ljmp insb xor mov insl sbbb add mov loope sbb mov sub jae mov inc jge cmp pushf pusha push mov inc mov pop hlt jl test pushf mov push sbb shl pop jnp sub sbb mov lods adc mov mov mov mov loope lret psubusb mov cmp and adc lret out pop and sbb and pop jg pop add push fs add lods testb pushf pop push or test lods mov pop sub lods dec add inc jp push pop mov xchg ja (bad) pop je and xor fcoms pop sub sti inc sbb call xor in mov mov pop (bad) xor imul (bad) stos dec lds (bad) xchg push xor (bad) jb mov inc (bad) add xchg pop lcall sub and push cmp ficompl pusha rcrb or adc pop sub out sub inc xor sbb inc gs (bad) stc sbb pop fist negl adc push sub xor push lods pusha pop xchg add das bound in sbb jno add dec jmp aaa arpl xor pop (bad) mov and clc pop xor adc add and aaa popa orb nop xchg dec jo mov adc mov add ficoml mov fbld clc jl int3 push pusha pusha pop and sub loope sub dec pop gs or mov inc (bad) jo or lock jnp jno adc es insb popf adc mov inc adc push mov xor add fistl fildl or insl adc dec enter sti addr16 fnstcw jns or add xor sarl mov adc and mov mov and icebp cmpsb lock call pop test cwtl mov (bad) fs (bad) dec sbb pop add adc xlat in jb icebp out not add add mov shrb cwtl es adc movl lret loopne dec pop xchg xchg fild jne add subl or or jg xor pop push cmp je adc movsl jo and cmpl add shrb add roll cmovg js push sbb cmpsl fisttpll insb push mov ret mov add and jecxz ljmpw jae aam movsl les jbe or je roll or or mov (bad) aas sbb pusha ret ffreep inc mov pusha cs add xor cmpsb loope adc adc and lahf dec insb or adc dec mov pop es push fmull and (bad) adc mov and lods ss fiaddl int3 sub scas push aad sbb fsubrl push rcrl push push mov imul push fbstp mov hlt cmp pusha stos or and out mov nop add je scas stos clc ror dec jo cmp and push out rolb or in mov iret sbb out jle loop cmp je mov pop imul mov sub push adc mov sbb inc mov mov inc nop mov lock mov push mov test dec sbb cmp jne adc jbe mov xor test aad in or mov add sub inc pop adc pop jnp push sbb and data16 movsb xchg je push fs jbe mov jg xor push adc pop imul mov or add mov gs mov (bad) out iret sbb adc or mov (bad) fstl (bad) mov adc xor scas mov pop pusha pop adc inc jnp imul fimull xor push mov andb scas xor push xchg or xor in xchg push lret adc repnz mov sbb (bad) fcoms ja xor loopne outsl arpl xor dec loope and jmp cmp fcoml push inc rcrb inc xchg rorl cmc or movsb inc mov hlt cmp jecxz lcall sbb sahf xor pop in xchg mov dec jge in call add into mov mov cmp (bad) subl xor sti and mov add ja gs pop and add icebp or jl or inc sbb out sub dec (bad) rcl cmp jecxz rorb push ret out add ja cwtl mov push lods mov cmpsl pop clc aam (bad) in out cmp addr16 lods xchg jmp nop pop cmpsb leave hlt mov lock bound inc out add cmp test (bad) into out cmp ds inc popa or psubsb fimull daa (bad) orb fimull mov pusha sub mov testl and xchg push pop out sbb repnz push mov and sbb push push or mov movl mov add ja cmp push xchg fidivr or addb sub ret aaa inc test adc xor movsl mov or rorb mov inc test inc incl and xor ret xor push outsb shrb xchg sbb push sbb aaa enter sbb pop dec jae inc pop push dec mov lods and sub or (bad) cmp adc movsb or xchg push mov sbb dec jns jl cld movsb mov imul sti mov clc mov xchg int (bad) enter in insb mov movl sub nop je cmp mull xor cld cld or mov mov mov or insl call xor leave pushf sub mov outsl fsubs cld sbbl mov adc dec add fnop lcall mov int scas push push or mov mov inc lret and repz sahf sbbb rol jbe imul cmp and add and jle push sbb (bad) imul dec jg movzwl add mov imul dec adc aaa mov push ret test repz or jl dec push js sbb jl xorl adc xor test add loope lds sub pop leave and mov inc rorl iret add insl pusha and or xchg call shrl dec inc or inc leave mov sbb pop and inc and cs mov adc push or mov xor sbb mov or lods mov cmp xor mov jmp rclb pop mov loopne pop or test sbb rolb test or xorb push sbb hlt movsl rcll sbbl cmp pop inc and sahf xchg sbb sub loope mov dec xchg fist (bad) icebp pop ja sub test mov pop push sarb add mov mov dec add xor inc xor xor fstpt xchg mov dec xchg mov pop add shrl sbb cmp gs mov adcl das in sub mov cmp jmp mov add inc add into add pop xorb xor ss in mov (bad) mov and ja dec jecxz xor push sub inc sub xchg and mov push pop xchg ja jb cmpl mov pop subb cli add negb movl (bad) or es scas pop movsb cmpsb stos sbb fs adc push ja jo insb dec jae repnz or sub mov sbb iret jne inc loopne outsl imul (bad) insl inc push sbb or mov data16 ja ss dec out pusha xor (bad) pop push pop cmp out test adc or lods jmp loop (bad) pop dec push sub pop adc xor dec pop fidivl dec movsl pop mov (bad) mov adcl mov inc adc dec movb test add movsl adc add cmpb mov adc xchg adc mov dec bound pushf cmp mov dec ds stos ss insb lds inc mov sub rclb pushf sbb push push leave xor cs or loope push push sub ljmp cmpsb mov movsb shrl sbb notb push cltd adc movb inc lahf xor lahf insb popf stos addb xor (bad) adc push scas mov mov and add ret inc movb dec call and xlat jecxz repnz fdivs gs jo mov lea inc imul push lock lret lock jmp test (bad) mov loopne or jo adc fistl fildll and daa insb sub mov inc jbe lret jae and jno fs (bad) in nop inc push (bad) jae js adcb push outsl sbb test aaa daa dec out (bad) pop (bad) push push test mov rorb push push ret jo xchg mov lcall rcr scas (bad) jp xor (bad) lds add inc (bad) fs fs jns cld js adc mov or enter mov aaa sbb mov (bad) cmp mov or push sub or push cmp xor push ficom mov mov cmp mov rcrb sbb std and inc sbb clc push rol adc inc dec enter jne sbb dec push or mov jnp (bad) pop pop and test (bad) cmpsl or sahf or neg sbb inc adc dec or mov call mov or sub or jne lods into sub decb inc push (bad) bound cmp loop in mov jo mov xchg scas adc lds mov and mov sub add mov push inc bnd dec shrb mov jo xchg xor lock jmp add mov movsb inc pop sbb hlt mulps movsb ja mov mov or adc mov in jno ja (bad) stos jo pop lods adc sub in cmp pop aam jmp xchg add loopne sub pop pop jne mov imul or inc sub mov push push icebp repnz cs ja movsbl sbb xchg mov sbb in pop jb xor mov stc pop js sub loope dec cmp es pusha dec sub popf sbb js cmp fdivrs pop mov aas in out or clc add sbb aad fsubs adc loop add xchg and jno inc repz adc movsl mov xchg sbb push in mov pop jo xor call out mov jb movsb fdivs shlb sbb xchg push or dec (bad) mov fs je loopne push mov mov mov adc cs lret xor xchg push push mov pushf push or xchg sub jle push jp add int scas pop dec scas or dec rorb add adc push jmp sbb jge ret xor or dec xchg jne rclb xchg add cmpl lods pop pop sub fmuls mov mov test movsb rorb jnp jne or push js lock or mov (bad) push jo add inc pushf xchg add inc sarb pop or pop or push cwtl push pop cmp outsl adc adc push jo xchg mov xchg mov lea cmp and push jns mov into or imul ja or and pop test jmp and add mov mov push jecxz and add mov xchg push sub loop mov jmp or (bad) mov push and dec aam or adc jg xchg add inc xor push xor mov test imul loope pop rclb jle or sbb push test xlat adc lahf inc js sub fs lock jns lods adc lock jnp stc jge clc sbb mov cmp das jp xchg dec jge inc adc sahf pop iret push jge cmp or inc lea std xor insl rcl sbb inc and outsl and adc aas cmp je les inc cmp cmp add hlt movsb inc sbb mov add cmpsl dec lds inc repz out sbb leave xor or mov addr16 xchg rorb push cmp adc mov test outsb sbb push lds add push or clc push mov fisttpll insb jg add dec inc add jmp sbb xlat mov adc push stos push jbe sbb push movsl dec arpl or pop mov and or movsl and and ja jmp ret push mov lcall pop call dec in sahf sub ret subl leave inc push jo fisubl iret imul outsl or ss inc arpl cmp mov mov xor dec cltd inc cmp jmp or adc push push data16 cltd or xchg sbb xor lock pop aas pop mov daa and xchg dec lret push shl sub shll inc mov call jbe imul in push push mov and mov and incb push mov pop subl push push pop pop jmp inc std adc sbb inc add enter pop jns jo (bad) pop insl mov mov fwait push dec inc adcb and loopne iret push pop add push jg push xor adc pop pusha add push xor pop cmp lock mov (bad) xlat push dec das add xchg xchg sub dec cmpl test addb rcl insl aaa or lock inc daa add or jl lods mov dec inc and add pop or dec adc sub test pop xor dec ja out mov popf sbb insb push cmp or es xor les pusha nop sbb add xchg fs in and adc dec les loope push fdivs daa frstor or jae cwtl cmp inc testl xchg imul or andb and mov in sbb test out sub mov je clc add orl mov mov sbb (bad) push (bad) cld cmp mov adc add and push das add (bad) xor ds (bad) or sbb or je and pop test test add inc idivb fsubs pop pop ror pop movsb add (bad) inc ja jbe mov inc cmp xchg mov add jecxz sub scas inc ret adc jnp (bad) stos add push push imul hlt movsb or pop and and in notl sbb enter ret cmpsb fs cmp (bad) subl cmp loope sahf dec fdivrs add les mov loop std xchg scas aaa xor add xchg aam fimull or mov std cmpsl mov xchg imul pop fisttpll push test lret andb popa inc andl and push jg mov jnp daa mov movsb iret add iret out push push adc pop and sbb scas and cmp jg addr16 jg or mov mov xorb sub jne mov mov fidivl faddl jb mov (bad) mov jb (bad) outsl adcl bound push pop push or xlat enter mov mov call inc scas sub test dec adc sub sub popf push dec test mov xor mov cmp jne push sub jno adc sub fstp and fimull add js mov pop dec or andb mov out leave aam paddb lock adc dec pop adc add (bad) or adc lahf mov rcrb push xchg out movsb addl fsubr adc or or sub sbb xor adc xchg adc shlb add enter loope jmp lret cmp rcl adc mov jne ret fmuls jne dec cmp ds cvtdq2ps shrb dec sub (bad) pop jmp nop mov or mov mov adc pop sbb mov push adc rcrb push cmp ds ret mulps popf rorl dec dec pop mov push stc rol cmp dec insb jne nop out dec jge mov push xchg xor xor pop xchg jbe mov adc in adc es fst dec push ret adc sbb leave sub push adc inc jl xor ret (bad) js adc subl push in roll mov adc pop mov pop test and lock mov jg push push ficomp mov inc movsb sub fiadd std add out inc or xor inc imul in mov inc bound pop adc outsl mov std xor mov pop movsb or sbb sarb sub popf cs daa or mov jl ja mov or add push test pop mov stc outsb (bad) adc test lea enter dec (bad) fdivrp inc loope mov push enter cli or (bad) pushf gs fwait pop movsb iret mov scas popa push or pop pop ret mov test adcl push mov mov push addr16 jecxz or xchg inc dec inc inc mov mov sub adc stc push mov and aaa pcmpeqw aaa sbb adc and push daa test dec sahf or lock or add push or iret fldcw dec push rorb data16 mov jbe xchg mov sub aaa and pop rolb push hlt and fwait dec bswap (bad) shlb jb mov fstl jg ret aaa mov shrd dec test mov dec cwtl xchg nop mov dec dec mov dec js sub clc xor cs mov xchg push movsb pop sub cltd push jbe mov rcl adc cld jae inc xor xchg jle fisub push adc cmpb fsubl jae sub adc or mov imul or lret add movb fiadd xchg cld pop lret cmpsl (bad) inc ret fsubrs outsl jb shrl inc mov and rol and pop add jmp mov xchg push mov ljmp adc dec adc adc xor sbb jmp inc or sbb in push jae pop std xchg mov adc test jb dec in push cmp or es mov xchg dec add pop push sbb pop lret cmp enter dec cmp fwait testb and or push popa insb aaa insl jg add push pop dec jle mov popa dec cmp xor ret sub pop jp hlt ja lret sahf (bad) pop and and mov dec jmp jmp popf pop cmp sbb jmp and sub pop or pop mov or lock and ja push adc daa or or mov daa pop xchg mov or pop push int sti or or adc push es call dec lock pop lcall or nop or mov mov lds pop lock sub add xchg std dec mov or cmp xchg inc pusha cmpl jb inc cmp hlt jnp fcompl dec loopne dec xchg or insl outsl adcl (bad) clc cmp lea call (bad) ds jb sbb loopne push sub andb daa mov out dec push push dec inc pop mov sub adc xor adc push adc iret lret (bad) cmpsl sub xchg and and enter loopne das pop ja aam jne sub mov add sbb pop aad adcl inc (bad) sub pop test in or and and test inc flds inc dec mov lahf push push sub clc pop xor push add mov (bad) popf lds pop sbb pop lock test sti dec push ss sub repnz mov adc ds jmp xor mov push push ja mov adc inc outsb jne fcomip pop add insb popa jns jae push js shlb (bad) movl mov testl shrb cs insb xchg adc (bad) cmp dec adc xchg sbb ret push push inc push (bad) fldl add (bad) pushf in ljmp cltd mov hlt nop mov xchg mov jmp inc lock (bad) lods jle cwtl decb ret outsl lret ret sub cld mov pop rcll mov mov or ret push sahf and cmp push push insb out mov adc xor gs sbb mov fbld adc pop adc movsb fnstenv xor cmpsb out or lcall ret mov out mov xlat and fisubl movsl xchg or fs fisubrl outsb add fist test adc aad xchg jl mov push and xchg push mov mov mov les jb jb cwtl push push dec clc xchg (bad) fwait out xchg mov mov leave adc cmp mov orb xchg inc mov lods xchg or shll or iret cmp cmp xchg popf cmpsl arpl mov orl ja lcall aaa lret sub mov fwait sbb iret pop add or xchg es aad sbb cmpsl inc mov adc or and push xchg movups fsts daa mov movlps stos xor push mov in sar pushf inc jmp shl sub mov jae and lea or dec iret dec in push adc dec cmp sub jge (bad) add aas push loope add sbb mov ja sahf dec push sbb inc push lahf lds loopne xchg add mov jge sub dec sbb inc sbb or sbb jmp movsb xchg jae cwtl sub pop jne sbb adc xchg ja into sub icebp mov loopne xor add movsl stos (bad) pop (bad) or mov daa pop (bad) adc mov pop lret es sbb and rcll test or sub call outsl mov xlat dec pop jge pop rcrb jge jle jg pop and sub sbb bound psubb add or cmp dec cmpsl clc sub lock lock outsb mov out add dec inc or (bad) addl push xor nop push scas test add sub jae cmp xchg inc or imul lret test push sbb stc adc fisttpll insl hlt jne out in mov adc rolb pop mov test sbb push sbb (bad) daa or cmp pop mov repnz je and (bad) aad mov mov scas dec mov jmp mov and fistl out add stos out ja sbb jl or jg jne mov mov cli or inc add pusha jnp xor stos je mov fxch and inc push cmp push lock mov leave inc lea adc or cmp push mov std das xchg push add sarb sbb fstps mov dec loopne push or shlb (bad) xor and cmp cld xchg daa xor push ds addb and dec pop fsubl bound lea mov inc push or (bad) hlt cmp sbb sub adc test aad jle insb and mov cmp cmpsb hlt popa sbb addl mov pop push mov jns dec and hlt stos dec pushf mov xlat dec mov dec lea faddp sbb and push sbb loopne pop inc (bad) pushf pop push fnop jmp mov in sbb and xchg or dec mov lret loopne push leave (bad) nop daa call xor mov outsl jno adc sbb adc pop inc adc jne mov test jmp inc inc gs lock fwait cmpsb add lock jmp and cmp and inc imul js jmp cld loopne in xchg jo dec ja fs movsb lock shl cmp dec loop add inc mov xchg inc (bad) popa fldcw (bad) movsl icebp nop mov shll mov pop push pop mov test loope xchg out xor sbb jb lock sbb stos fsts pop pop clc dec sbb or rorl xchg inc push push dec jmp subps ret repnz es xchg loope cmpsb inc and sbb clc movsl mov sbb jmp dec je or mov xchg fildll test jmp adc mov adc and loopne mov inc test test test inc dec mov rolb xchg inc (bad) leave adc jns or jg cmp jne sbb mov push adc adc sbb sbbl leave sbb push cmpl arpl sub int cmpsl cmpsl rorb cmpsl into mov and jns cmp cmp repz sub pop jb sbb xchg or cmp pop inc mov cmp jb xchg and fs pop push fsubrs arpl inc add call sbb int3 fist addr16 dec jo lahf mov int in imul dec push inc xor push cltd movsb push push je push subb insl and inc and nop out not mov inc inc mov pop push jns insb dec enter out imul push push clc xchg lret push pop push or pop sbb pop gs add cmp mov sbb arpl arpl or jg push mov inc xor inc push inc push inc daa push sub int3 inc maxps lret pop and das push inc outsb insb adc fiadd or ja mov jae test pop outsl jae inc mov push fisttp cmp mov fs enter xchg (bad) stos (bad) shrb jg lock cmpsb pop lods push pusha push push push ret adc or notl dec pop ds nop out add aam loopne lcall imul xchg push and test movl das (bad) rclb dec add fwait mov pop (bad) rorl repnz push and subb cmp adc inc lcall add and mov dec jae sbb pop fdiv mov test xor pushf add dec nop push xor xor test xor xor xor xor xor xor xor (bad) enter xor rcl fcomp xor xor loopne call xor hlt clc cld xor jb add xor xor adc sbb xor xor and sub aam xor xor xor sub lock cmp or mov push lea jmp mov pop arpl test add add xchg xor and mov or aam nop lret in and mov mov test sub cwtl push lret push pushf mov andb test mov mov mov pop mov and xchg add push movsb xor xor inc sbb rolb add aam test mov cwtl xor xchg add test adcb call lret lock lret add adc nop and xor nop ja and push gs sub or test andb lods lret push sbb and push sbb nop lret or sub dec add xor xlat mov inc cmc xchg inc pushl mov and je gs gs andb call rcrb inc insb outsl jae and sbb ret inc mov cwtl or jns inc mov add jge clc mov push popa jb test pop arpl lods daa test je dec insl movsl nop jne test addr16 addr16 xchg gs in test addr16 fs pop and cmp jno jae jnp xor fs lea loop cmp jns jp jae cltd pop rol inc outsl rclb lods cmp imul pop fiadd xor xchg push or xchg mov pop adc dec push mov mov mov or push (bad) loop mov insb iret ds daa fsubrs jns xor outsb mov sub add cmp (bad) outsb movsl addl pop pusha push (bad) in inc bound add (bad) in pop xchg sbb pop pop xchg das adc adc ja and rcll jns loope and xchg fsubrs pop fs sbb fdivl jo mov fs jge test jno popl xor popa mov loope push lods and jge pop outsl movsl lock cmp repz fisub push cmp mov or jl push inc hlt enter xchg jne xchg push popf xor jg daa sbb aad jbe xor sbb add in and pusha mov xchg js mov dec lcall cmp dec mov outsl dec push dec add xchg add xchg mov in push in les dec push cmc pop cld xchg sbb and mov and pop fs sbb insb mov popf add xchg add aad fdivl call out pop push mov mov pop dec lea adc mov rclb dec jl les push enter inc clc addr16 imul incl mov push hlt and inc nop roll ds popf mov (bad) or loope and in sub add push pop cmp cmp lahf popa sub or jns inc pop mov daa fsubl cmpb push fs push inc cmpsl cmp xor movb mov fadds mov call push movb cld sub (bad) pop xlat and inc adc adc js cmp adc push mov fstpt xchg push add popf pop push push xchg or mov sub xor fdivrs sbbl pop inc and or pop mov mov mov sbb lahf test inc frstor inc (bad) pusha fdivl or add out inc pop add inc pop pop pop add fisttp fidivl out lock test push pusha les mov insb call adc push dec icebp cwtl push fmuls pop dec mov xchg jp fist and push inc cmc lods add cwtl (bad) hlt mov pop xchg mov add push pop inc cmp and jo pop fbstp daa lahf or lods pop stos daa push int3 cmpsb jo cmpsl pop mov jo mov xchg cmp dec pop dec dec push movsl xorb arpl subb add bound jmp test pop push push inc jnp or pop dec outsb inc gs mov faddp fnstenv pop or and mov cmp push xchg iret xor mov push sbb mov add push (bad) xlat fdivs dec xchg rcrb mov mov pusha inc rcll test mov jo mov aaa dec pushf idiv insl fs addr16 push loop and adc pusha adc and inc or sub xchg aaa repnz pop push push add dec cs cmp mov inc and cs mov cmp xchg mov cmp sub xlat clc ja jae outsb out hlt push pusha xlat lock mov fistpl (bad) pop push mov push icebp and shll mov (bad) push cmpb add pop mov xor mov add movsb lods mov int3 adc pushf sbb (bad) hlt pop pop pusha xlat stos sbb movsb pushf add xor push leave aam faddl inc push pushf ljmp add and int ljmp dec arpl insl xchg (bad) pop sbb jo add adc sbbl jae mov pop jae mov and and xor je sbb mov inc pop jno jo add add and es xchg lods std aaa push or outsl inc jb bound and jno cmp ja mov jae jno or xor push add pop and fisttpl add add mov loope mov and push leave insb in cmpsl add inc aaa leave or push mov and loopne pushw ss sbb (bad) pop add push outsl ja xor shll stc adc add pop jge and adc sar mov sbb xchg mov pop and and leave add push lds dec shlb sbb lods pop pop lds adc xor (bad) push xor cmc dec loopne add les (bad) cli push jbe pusha add jbe xchg sub dec and push or (bad) mov data16 adc outsb push cwtl stc inc cmpsl data16 push outsb loop outsb inc hlt out cmpsl insl add gs xor cmp mov jo push pushf push addb (bad) test cwtl std inc cld data16 and stc mov imul lahf mulb push mov push divl data16 or aaa push fildl loopne shlb enter inc out push call stc es movsb sub sbb add mov mov call pushl repnz jmp cmp outsb mov sbb pushf in mov test out xchg pusha (bad) xor push adc out pop xor push jp mov inc les lds js add js in movsb popa push mov ret jmp cltd sbb inc ret cmp cmp in inc les jge add adc ds add mov jo bound inc xor sahf adc cmpsl test int int3 inc jne je push (bad) in imul cmp es push push inc pop xchg or decb cmovne push insb xchg nop mov jno andb enter in (bad) push mov add arpl aam int pop adc outsb mov popf add dec fs jns mov adc loop test gs test add dec (bad) in fsubrs in inc push imul dec insb jo or shl adc iret pop dec and and cmp rcll fcom dec sub sbb and adcb jb pop das push xor test sub shlb sbb mov pop inc hlt push push mov dec test int3 test stos fwait icebp sbb dec sbb pop gs jb pusha sbb negl cmp sbb fs hlt inc je xchg add or mov mov sbb je push pop fidiv notl push dec dec nop outsb leave inc test nop dec aaa shrb pop fdivr mov cbtw and dec or dec je iret lcall jo sub cmp test xor adc adc mov add xchg push push cmpsl cmp jne add xor aaa leave dec loope or xchg jmp mov pop (bad) inc lahf (bad) scas and add cld sbb lds es add in cmp js mov lods daa inc push and pop mov jl movsb test sub and ljmp ds mov sub jae mov and sub cmp jecxz sbb outsb lahf sbb dec inc adc in sahf xlat inc mov nop out les cld test jno mov in push sub dec sub clc mov pop lahf cmp in cmp subb inc sub imul in mov enter es inc sbb iret jno mov xor push ds lods push mov sub roll xor cmp xor sub dec mov leave xor cs test dec sub outsb jl cmp shrb push dec xor repnz and mov pop mov aaa dec inc (bad) sub cs inc sbb cmp insl rolb jb (bad) ja inc je enter jae dec cmp mov nop xlat int3 rolb cmp or add mov cmp or test outsb dec stos dec fadd nop or cmp popf xchg loopne mov aaa push push dec push jo pop cmp ja sbb mov cmp movb mov and stos roll mov sub and jge push and cmp inc xlat mov (bad) push fldl xchg add xor mov out add test push push inc adc xchg subb scas mov mov push mov xor adcl jne push mov xor or add adc sbb cmp sbb daa cmc cmp mov mov arpl fs pop js xor cmpb (bad) or xor inc or loope (bad) jb pop and dec enter (bad) cmp or or xor push shlb les or adc stos mov popa jne xchg push mov cmc pop jg mov xor add fisubr fwait mov call rcrl sbb or inc inc jg adc out movl dec cmp cmp adcl cltd mov sbb lock sbb icebp inc fcompl or jne rcrb or sub dec push push or adc mov out call add shlb xor mov andb sbb sti add push movb xor adc clc mov mov add fsubs or es ret inc (bad) adc movl xor popa nop push clc add es daa inc sub rol dec das lret add (bad) out adcl js (bad) fcmovu test inc xor and push adc pop xchg enter fldcw dec and pop in rclb push adc sub (bad) pop pop mov and and cmp fdivrp push sbb ret cmp jne cmp shr push and xor mov addb or ljmp cmp xchg dec xor insb mov cmpb stc int3 cmp movb mov int and stos or cltd js pusha pop repz int pop xlat rorb or into or lods mov xor mov add stos mov (bad) fmuls cmp decl stc mov lcall pop jnp imul xchg sbb aam pop mov or xchg jg lock adc pop add lods inc arpl xchg orl push inc dec add add or movb jmp jne les jecxz xlat dec sub cmp addl btc mov jnp adc dec hlt mov pop icebp (bad) aam jmp bndldx out jmp mov mov pushf sub cmpb add cli adc adc xor and push cwtl cs or adc lret mov add sub dec add xor mov inc xor mov nop sbb js add cmp and push popf sbb roll fwait cmp add xchg lea std push test stos cmp push cmp fistl inc and pop dec pop mov ds jae jmp xor xor push daa or jbe jne jno fwait js js repz xchg xchg add out sub pusha sub sbb jge (bad) fadd push push mov or ss imul cmp mov (bad) test mov push cs lcall adc adc pop xchg jmp inc repz mov xchg push pop imul adc sub lret or or dec add test in push jo lods inc mov and push mov cmp popf jmp movsb or add dec sub sub mov dec pop test push mov jnp push repnz (bad) mov inc enter inc inc fsubl adc sub in add mov dec mov pop or dec pushf sub jb jle mov adc out jo call sub cmp lea xchg mov sub add mov mov jge int3 movsl and aaa in push xchg xor out sbb cmp pop xlat sub mov clc jne dec push mov movsl (bad) test scas gs xor (bad) (bad) sbb cmp loop or inc cwtl ljmp and pop (bad) mov das sahf je mull and jle adc fdivs shlb mov ss je stc ror push lock loopne mov add push jne add jge shr jo imul clc sbb mov lods loop push xor jbe cmp adc inc rclb xchg inc les jne add clc cli mov lret insb jp xor push and mov add inc dec outsb push cltd pop lods cmp lret in sbb cmp int3 lods jge daa cmp shrl ds sub jmp fsubrs fcoms pushf jge dec jnp sub lea imul or pop or ss jl cmp xor lods outsl sbb loope sub add es lahf push or je pop mov push cmp mov imul push insl cmp push out out pop cmp adc cwtl dec cltd xor jnp mov jns xchg jge mov je pop lods cs mov add cmp cld test notl scas and add add mov sub mov inc test data16 mov sub mov dec test jo push nop push data16 in outsb inc adc out sti xchg lods add (bad) jo jae cmp add and inc or mov push fistpll dec cmp add cltd sbb jnp add adc push shlb rcrb in pop test xchg and je iret lock xlat test cmp jecxz inc and inc insb xor jo cs jg inc cmp jne xor out incl je movb lea xlat outsb js insb lahf mov or mov aaa mov sbb cmpl or aam inc faddl add lea iret mov js xchg pop test xor fwait mov jl pcmpeqw inc sbb not inc push inc outsl or push pop pop insb mov je jp iret movsb dec xchg pop add (bad) push lret les push and enter rolb lcall clc and mov aas lret aaa adc lock adc adc jne and test iret dec sbbl sub repnz insb scas shll or pop mov cmp inc fistpll gs dec pop mov fsubrp mov cmp fcomps and jns xchg (bad) je pop sbb mov (bad) imul ret loopne jbe inc stos cld sbbl jmp xor icebp in add add push int3 adc repnz cmpl add lea add mov sti stos add and dec or push inc adc aaa inc add sub adc sub and inc push cmc and loope or lea sbb std stos clc cmpb inc (bad) lods pop add sbb push dec inc andl popf adc (bad) rclb dec js mov and cmp in adc jae in xchg je std sbb pop sub invd add inc adc sahf jl jne push fcoms call push add mov xchg or imul mov popw pop mov aam lcall pop push and cmp mov push push push test add fsts clc lcall (bad) jne mov notb add pusha pop sarb jbe sbb mov (bad) lret cmp (bad) int3 pop fmuls fcmovbe mov cmpsl sahf mov loop movhps mov mov push shl rclb call test dec (bad) sbb or jbe test sub sbb add push inc push cmpsl addr16 pop sahf jo sbb and inc add shll sub inc or push add and std mov mov mov adc sbb (bad) ljmp jnp push pushf test xchg jbe (bad) dec jg adc sub add inc fisubl inc (bad) dec in jmp and jb nop xchg cmpb addl stos dec or push add and mov mov sub mov push dec sub add push pavgw (bad) xor add dec add cmp jle lcall (bad) hlt dec sub imul (bad) test jne in ljmp xor subb or adc inc aas stos jmp aam cli xchg xchg mov cld lock jge dec xlat jno mov cmp inc or push jp nop movl por jmp inc jecxz add push loope cli pop sti out dec and sbb sbb sbb jle (bad) sbb mov jo aad or and or or pop xor ret pushf mov rcll add adc sbb ret or cwtl int jae add sub and and adc push call sti or fmuls pop (bad) movsl add sub fisubr adc movntq sbb adc mov sbb lods mov out (bad) sbb and sub dec and sbb lods rorl mov jb push and and int3 push or jne inc movsl mov push inc jg push inc fildll jge add inc adc push adc push subl add add sub ret cmp push push pushl lret xchg cmc rolb loopne adc (bad) lods xchg cmc push aad insl les popf and sbb push sub (bad) shrb (bad) notb fiadd pop loopne andb je lahf mov add jp fild shl push mov cmovp adc push jecxz and push in fcom pop shr push mov daa out xor xor jb lods test pusha jno fisubr pushf nop jnp iret add xchg icebp or outsb test sub mov jle mov cmp fsubrs inc push or sarl mov or xchg testl mov or rcll test mov pop fsubrs sub and jmp cmc fistpll cmpl ret jbe push sti cmc xchg push or mov push sub cmp mov in add fcoms lock fldl push inc aaa movb in test cmpb in test inc clc cmp push movsb pop fdivrs (bad) and xor (bad) stos shll movl mov cmpl dec push mov test fscale call push xlat fcmovbe stc in add outsb xlat dec dec and hlt mov adc sub push mov sbb push in cmpsb inc sbb push or fisttpl imul rorb mov lcall push pop lret movhps negb enter scas inc ret add or add add xchg mov push movsb add sbb push add ret pop arpl sbbl or int out push (bad) cmp (bad) mov pop push xchg pop push xchg cmp adc (bad) pop clc mov mov jne jnp repz testb push test dec (bad) rclb sub mov fwait cmpsl aam or add test push subl cmc xchg or (bad) in fistl fsubl dec loop xchg icebp loopne jb testl (bad) bound jg lea xchg mov fdivl imul lcall and (bad) push arpl xor insl adc inc inc inc adc sbb inc dec fs lea mov dec xchg and rcrb cmp push push jo add jnp jno add out push shrb pop addr16 ja lods out jmp outsb push or pop imul sbb int3 gs jb jmp sub cs les pop loopne pop neg push xor adc and pop test loope mov push lahf sub (bad) clc push andl add jne add pop cmpb push xchg adc faddp pop dec cmp cmp inc push dec nop imul push stos push sub lds (bad) shll mov ds sahf pop pop cmpsl data16 cmp (bad) and std pop pop arpl push ffreep rolb lret adc adc es (bad) aas add inc sbb add pop pminsw xchg jne jno and inc add adc xchg xor sub mov (bad) rorb dec mov xor jle mov cli jl xchg inc je cmpb ret (bad) mov divb add cltd adc and cs movsb add (bad) xchg or xchg mov sbb pop insl loopne lock scas inc cmpsl jb push inc cmp (bad) sub ja or nop sbb hlt adc (bad) call pop rcrl mov clc lock pusha push cmp loopne or mov repnz fstp pop add inc push cwtl lcall sbb cmp push pop cmp add sbb xchg pusha mov addr16 js (bad) neg cmp and dec clc dec adc push popa add cmp jge push sbbl add or jg pop out xor and mov xchg std push ss scas xchg pop cmp mov adc ret add adc pop jne arpl push dec pop xchg (bad) in and cmp roll adc sub sub jp cmp and dec sub dec fs test enter insb pusha pop loopne in cmp cmp or and repnz cmpsb xor rcrl inc clc outsl sub stos dec mov jb add sub mov lcall mov mov es dec sub ss sub push cmp stos sti xor repz and inc inc fistl push lock push lock mov pmuludq dec pop nop imul push (bad) jae and or add sub push adc rorl sub cmpsl and test mov push push push jg or sub dec leave test (bad) repz push cmp ja loop xlat call shrb scas sbb jne push or add and imul lock pop rclb gs out pop loopne sarb aaa sbbb (bad) mov lsl add xchg jmp movl call scas mov sbb push sti loopne mov cld mov xor dec sub push movsl jne pusha xlat add jmpw jmp xor ja push mov mov sti xlat in jnp test jmp mov adc (bad) mov mov rol sbb ficoml mov and xlat shrb jmp xorl adc push int loopne xchg fcomip sub nop dec xor repz add fisttp mov dec rclb add loopne (bad) mov mov loop dec inc or pop jae push dec fsubr test adc mov popa sbbl mov pop es cmpsb mov add loope insb repz mov test clc adc lahf lods arpl adc clc popf outsl ret lods aad dec adc ret mov sbb imul int3 sub sbb or arpl insl adc leave leave leave leave sbb sbb leave leave leave sbb leave leave leave add add leave leave leave add leave leave leave or or leave leave leave or in in icebp repnz in in cmc div clc push in in cli sti cld dec dec dec dec std (bad) jmp mov dec dec loope das add fdivrl jns push cmc jle fs sahf out sahf pop les mov sahf out inc lods cmp xor jns out sub and sahf out sahf sbb adc or cmp out add cld hlt fs repz repz in push in iret repz faddl int3 xor iret repz sub and repz repz adc or hlt cmp pushf add cld idivb repz jl repz repz insb aam iret repz int3 pop les cmp repz inc lods cmp repz repz sub and repz mov adc or (bad) repz add cs into add mull mov or test add cmc inc xchg jae jecxz and shlb lea jns outsl xchg idivl and add clc pop dec adc adc push mov add sti inc dec popa insb cmp lods cld push and ljmp push les lahf nop adc lods jne pop and add fimul daa and push je sbb sbb jo push enter mov es dec adc cmc push mov add cmpb aas mov scas das movb mov push and sbb adc cmp jnp xor cwtl clc add sbb mov insl mov and mov cmp faddl xor add mov and adc or dec sbb add inc clc push xchg push push in stc adc test pop jecxz cwtl daa cwtl mov cmpsl sub mov pop or and popa insl adc jmp (bad) cli mov ds mov sub cwtl fisubl mov test pop or cmp test fildl mov mov outsb jo jecxz sbb nop aad sub enter cltd pusha add fadds fwait js lret add and jle pop lret iret mov fnsave sub sub leave add xor (bad) mov (bad) adc das or jmp das (bad) jmp aaa and sub jo aam nop pop lahf dec inc nop (bad) lock sbb jo js add pop add test movb pushf cmp neg popf addl dec dec push sbbl inc jg imul or pusha lods pop movsb scas sbb xor jmp xchg nop pop in and cmp loopne dec mov sbb ret iret and push inc std or or je sub frstor sbb loop (bad) call jmp xchg loope xor sub emms enter fscale test cwtl test or std mov test push jmp addb pop jo pop (bad) or lea add pop xchg or (bad) pop enter mov cmp mov add mov fwait (bad) jne je dec popa jns adc or inc insb jns xor pop stos mov xor or jnp outsl mov xchg jae aam add push dec jne popa je insl cmp daa cmp lock xchg pushl sbb lcall adc pushf jne sarb iret jnp call je in or out test test dec push pop push mov push test cmp pop pop push cmp cmp push push nop jl inc lods adc push adc push push push pushf inc and sbb sbb add pop test rolb test sbb push clc nopl xchg (bad) and pushf rclb outsl lock cmp out inc pushw movsb dec and xor outsl cmp outsb mov push pushf cmc (bad) incb lock push clc insb icebp lcall push push adc add sbb lahf inc cli call mov mov mov mov (bad) fcos xlat fucomi call imul push push data16 out movsb sbb mov sub dec sti xor adc sbb or sarl or nop ja and mov (bad) push arpl pop pop je and pop or push das mov jb and stos mov inc nop sbb push pop dec or jae cltd inc nop or out sub or or jmp pop repnz cmp push loopne xor lahf xlat inc adc add int3 pop pop enter inc aam push fiaddl push loopne sbb adc cmp nop outsl add and inc rorb mov push (bad) jmp mov add cmp imul inc add lds mov scas inc fisttpll lret test pop repnz (bad) push ret sbb or jecxz xor xchg sbb call or inc sub inc sbb mov or je add xor cs pop les cli mov les sarb lahf test adc mov jb or fs (bad) (bad) and mov lahf mov popf lods cmp rcrl in push fmuls fadds xchg mov mov test lret aam jge cli imul jg inc xor push nop pop pop movsb add lods and ret add out add addb (bad) dec subb dec fcom rolb mov scas aas xor push popa pop or test icebp adc iret test sub aas popf add pop (bad) cld xchg add add pusha pop popa sub dec add cmpsl mov add push add out inc shrb push pop fdivrs mov out addr16 jae es xchg mov rorb notl sbb inc js push outsl (bad) lock add xor decl adc adc adc add ja mov cmp push jl (bad) aaa loope imul add and sub adc inc sbb into faddl dec add mov mov mov adc inc mov cmp dec jo adc dec adc mov push (bad) bound push inc and pop hlt or inc hlt jo aas cld hlt movl and xchg inc xchg or inc cmp jl mov or inc pop in loopne imul push mov inc pmaxsw add stc lods test icebp sbb jge clc mov sbb adc scas xchg mov scas sti and mov cli add dec roll mov inc cmp (bad) push or mov addb idivl cmp jne pop lods or inc add mov dec xchg inc mov sub or add dec pop (bad) fincstp stos bound xchg inc sbb sub cmp in push rcrb (bad) jne xor call push ror cli cwtl out cmp je or add jbe add inc push inc (bad) loop dec cmp sub int3 cli movsb mov jb sti icebp pop aam and into test in (bad) fnop sbb or je mov in pop pusha xor push jno cmp inc pop cs cmp pop or and daa aaa push xor fldcw pop and adc nop les test mov cmpsl jmp mov js xor (bad) aas sub xor outsl jge mov cmp jl add push mov adc pop inc imul dec imul scas stos pop add ret dec sub jg sub int3 cltd jmp mov lods fstl pop ss (bad) rcll (bad) cmp in test pop dec sbb mov shll add and fcomp inc xchg add test add mov inc push jg lock xor aaa fwait lcall jecxz cmp insb pop add xchg enter or (bad) cmp mov enter mov mov adc inc cmp gs in dec cmp lods dec shlb push adc sbb adc mov xchg push ret mov pop loop shr fisttp mov add nop push cmp add pop inc orb insl xor adc mov loop loop cmpsl aaa in push dec jmp xor or or bound fdivrl adc jmp dec stos fdivrl add std inc xchg rol std das je movsl bound (bad) lcall adc pop xchg (bad) scas sub mov clc or dec add lock (bad) cmp lea mov sbb jno pop mov sahf pop push pop es or jg cmp inc aaa mov dec and mov or sub add push cmp sub add mov push pop rorb sbb leave add movsl jecxz dec outsl adc in jb jmp sub mov mov jmp mov push mov mov les std adc xor and pop dec pop clc scas mov adc add aaa aam imul in fsubr rcrb add push test push jg jmp push arpl pop or je (bad) out lock es jge leave (bad) loopne jns pop mov test xchg mov out and mov push aaa dec lods dec mov or rcrb pop or push jge and sbb nop push cmp movb mov (bad) clc push mov adc (bad) and or or xor inc xchg jo add call push dec adc loopne imul adc outsl test cmp mov push dec ret pop mov ss add sub mov imul fs pop mov scas (bad) fsubr sub pop mov and inc aad sbb and or inc sar sbb adc cwtl sub outsl pop js shrb jmp inc call loopne inc fdiv push (bad) frstor xchg loopne push adc rclb xchg jne push in xlat int3 and call (bad) pop pop or mov inc xchg sbb adc aam mov xlat and test add dec roll jnp mov bound push clc lcall adc sti cwtl pop sub enter (bad) mov or adc aam add mov jbe roll (bad) iret sub cmp dec addr16 add loopne shlb cmp sbb push or sub dec inc add lods popa imul mov dec fsubrl push and add xor push adc adc mov push hlt sub jmp push (bad) jmp sub xlat divb and sub dec or shrb ror sbb sbb jmp lcall in jae insl clc daa add sub add sub les cmpsb adc add pop jns fwait adc scas int3 inc sub push cmpsl je push cmpb sbb adc inc imul pop sbb out dec in xchg xchg sbb loopne nop mov xchg adc loopne sbb loopne bswap pop ds sub scas aas adc inc push nop and and add inc clc mov or movl int icebp movsl aas push push push jmp jno (bad) movsb sub sbb inc outsb adc pop test fcomp imul sbbl adc jae push or or adc xchg mov (bad) xchg rcrl or test xchg sbb lock dec jb mov adc dec movsl push pop daa or loopne xchg loop in ja cmpb mov cmpl or jmp adc or sbb movl notl add loop add pop fcmovu ljmp adc sbbl sub and adc or faddl add add mov inc dec test fcoms adc adc cmp jo mov xchg mov aas les mov lea jge mov aaa sti pop sbb jo mov jne addr16 nop enter push rorl push mov xchg adc imul clc aam lcall lods les add sub or out js testb mov xor pop add push test (bad) xchg mov or xor pop cmpsl xchg mov or gs dec sti sahf mov enter pop jb xor clts add cmp dec mov (bad) aam sbb or push insl setb sahf ja sbb adc shll adc mov pop xchg int outsb push je inc out inc mov out mov xchg pop and jne pop ret sbb pop jne adc xor (bad) call test test mov cmp imul rclb outsb and je or test shrb inc fistpll (bad) pop je push mov (bad) and cmp push in cltd add mov bound adc (bad) adc adc mov loopne lahf or or movb jne pop lock ret sub and add add movsb xchg dec dec or xor sbb adc icebp in roll mov popf sbb in adc nop leave sbb mov int3 push ror (bad) push lods adc mov add je adc cwtl and int jle jg xchg cmc test lods out incb xor popa add mov cmp leave add mov sbb sbb or out inc add std cmpl cmpsl add jp jne (bad) mov sbb inc xor and repnz es mov (bad) pop jmp sub mov xorl scas cmpsl sbb push call repz or das mov cmpb ret inc in xlat push mov cmp fildl inc mov test jae sub test jmp cmp mov fcoml push and cwtl psraw or inc test cmc sub and mov dec sbb call inc dec pop aam push adc adc jne aam mov sahf add (bad) lock jo ret scas sbb dec outsb lret adc sbbl das nop (bad) dec and add mov xchg sti fimul mov imul in jae cmp ss jo mov pop jnp sbb aas je xor ja mov sub and cld insb not and mov (bad) fidiv or jae push jo pop push nop jb mov dec adc xchg or jmp arpl nop and sub icebp push sbb iret inc cmp enter jne dec fidiv hlt int3 adc adc cmp cmp ficompl cmpsl push sub rcrl or fwait gs pop repnz popaw and adc rcll dec push andb xchg sub insb cmp scas cmpl add dec dec mov cmpsb cmp arpl jnp inc inc adc add fdivrs inc xchg aaa cmpsl punpcklwd (bad) comiss cmpb mov or loopne and and imul jo push insb dec push xchg mov push dec and inc mov add orl in out sbb cmp mov pop fcmovne add bound xchg push xchg data16 mov jo pop add pop xchg adc test sub mov fdivr mov mov (bad) inc aam icebp mov jae sbb add mov or xlat les push fs cmp into sti punpckhwd fiadd jge push inc xchg mov mov (bad) mov and add fisub xor cltd push add int3 sub push or data16 aam adc jl add loop mov or jno mov jp sbb xor out or jo xor sbb repnz out add or ds xor inc stos pop jg clc jns fucomip and mov jo,pn mov inc mov inc in push (bad) divb inc sbb add jnp dec sbb ds nop ret cmp and mov sub sub mov dec rcl mov mov add xor lds sub xor (bad) lds or movaps add sub cmp jg iret inc xor pushf enter dec leave mov les push dec jg daa (bad) dec push or (bad) adc mov pusha fdivrl daa xchg fcoml pusha rcr jmp sub cmp aam cmp in and roll xchg shrb sbb xchg mov sub clc mov xchg test push fadds add jbe imul or push push adc adc les or inc pop sub xchg add popf or xchg mov mov and push ljmp mov in daa adc daa adc sbb loopne xchg or in repnz loope out popa jbe call or and or cmp inc pop add sbb loopne (bad) outsl sub in push mov jo,pt shrb dec ss push push or test into pop movsl pop mov sub insl out (bad) aas sub and xor xor dec imul xor arpl add in jle xor pop arpl insb push or sti pop jnp adc outsl pop js bound jge popf imul push jb popa neg mov sbb es insb bound fidivrl es gs out int sti pop jo addr16 jb addr16 mov pop mov arpl add daa push jg sub sahf out je outsb insb das je cmpsl ret mov imul loopne mov (bad) pop je jo jb arpl testl out lods loope das add or sub outsl pop push hlt adc ret add or cmc pop pop test sahf lock sbb or lock mov add and inc add add pop pop and pop adcl daa cld sahf inc xor cmpl test inc addr16 pusha fsubl test (bad) mov dec sahf (bad) flds sbb cmpb js push or insl stos push cmp xchg insb push pop pop jbe ret push sub mov sbb mov dec sbb imul sbb daa pmulhuw and mov inc adc sbb adc cmc data16 push mov or or shlb dec test nop or scas fwait lods mov mov xchg and dec or jb sbb or inc and xor sub andb dec add mov xchg ja and clc inc sub mov popf xor ret ret jge sbb (bad) sbb sarl jmp sbb or and shrb push inc adc jbe (bad) repnz sub jmp sbb pop xor push sub mov sbb add add rolb adc push pop mov add push lds movsl cmp pop aaa pop mov sbb roll jnp or dec or adc adc jb or xor push movsl stos or dec jmp rorl xchg add push or adc xor and lret and and movhps scas or das inc inc xor add add add ljmp add or or or or or jns adc adc out sahf out adc out sahf sbb sbb and and iret jnp and loopne push cld or out das inc push bound jns out xchg cmpsb mov dec repz fldl2e sti or sbb cmp push popa jb repz repz movsl mov shlb out cld or sbb and es push scas or add dec sub in lret adc mov or or test sbb dec sub xchg lret or jb in sub sub pop push mov sub adc lret dec adc in inc pop dec sbb movsb dec sbb xchg push cs dec cmpsl dec sub pusha lret mov imul bound and lret and movsb xor and adcb sbb call clc mov pop test les insb inc sbb xchg mov dec cmp push fadds cmp xor or lea mov js,pn lock movsb je or test decb push leave clc push adc push popf add data16 call or lock xchg subb (bad) pop inc ja out int3 mov out mov cltd or in jecxz add lock outsb out or lea mov frstor loopne and outsb sub cwtl stos mov add pop or cmpb jecxz push mov outsl in inc push push inc or lock lea sbb add xor fcomip and or dec adc movsl dec xchg add or or mov inc pop or fs cmp dec add cmp push inc out push push jbe or and pop outsb mov enter fcomps pop and aam xor mov add sbb in (bad) mov pop (bad) inc (bad) call sbb out repz fsubr pop mov push aaa in lea nop ret pusha sbb cmp movsbl add les xchg and jbe loopne push push stc nop scas pop sbb js xor daa inc or std and mov mov jo imul insl push es mov or push sbb xchg cmovae add and adc adc push jb push inc leave adc push jmp mov rol or or sbb mov pusha and or push sub mov sbb rol das push pusha mov test xchg dec inc mov hlt pushf xor inc popa notl add fdivs inc xchg add inc enter and test and push jb add push fdivs and jo or add pop and sub push jb sub jb and sub add add inc pop lahf lret shlb inc and repnz js js or sbb dec gs jbe xor orb cmpb ds push mov ret cmp pop or and inc sub aas push outsl inc loope enter int3 sub insl mov into cmp fs push xchg mov adc inc mov imul dec bound int3 arpl js idivb sub fdivl or lret adc test pop adc (bad) rorb adc push push push ret mov cmp or (bad) loope pusha jl rol and or or and dec scas pop xchg inc xchg ud2 pop hlt mov sub push imul lock jle xor sahf or mov jb aaa jae loop xor push pop pop out dec jb inc jl xchg push sub xor nop daa xchg cmp outsl inc push nop cmp lock mov adc fwait insl adc in inc outsl fild add into mov and push and push or pusha dec xchg jecxz cmpsl pop and jmp mov pop repnz fcoms pop or push inc aas nop loope add and addr16 sbb and mov enter pushf outsl or or inc orl adc and and aaa leave inc mov in adc dec inc push add pusha icebp mov ret fistp ret cmc add mov nop gs les rorl leave push sbb add out stc jo sbb outsb add add inc and movb mov xchg rcrb stos lock fmull gs inc mov mov or pop inc enter rcrl and cmpsl add mov pop or adc fwait or js outsb addr16 (bad) je inc adc pop popa and inc dec jge push xor pop and add pop and frstor xchg mov (bad) pusha mov ret xchg scas and adc test pop xor sub into jb incl jb lea sub push pop pop jno insl popa aaa hlt push popa push fsubr push inc and sub add sbb test arpl jge lods aam xor ja stos sbb mov push mov pop mov xor or mov ret sbb inc xchg add out lods cld mov loopne iret mov ret inc mov xchg les int shll dec xor xor aas inc adc sub test dec inc and pop test mov dec outsl or mov add test add add daa add pop pop iret popa inc sbb (bad) jbe jmp test adc popa jae add add jb pop add fldl mov dec pop xchg lods cmpsb fisub icebp repnz jo jo mov dec and movsb ljmp push lock cmpsb or push cmp shll dec adc aam out push or mov dec popa inc pop test and jno fldl pop xchg ret movsb jb out and inc pop lods cmpsb mov and push loope idivl push pop sub mov sbb pop sub mov inc add mov push js pop ds push jle sbb mov inc fdivl inc push cmp jae je push outsb or sbb in jnp push ret jmp enter enter push inc loope idivl mov push pop and lcall xorl add xlat push and inc lea push add push jne inc mov (bad) adcl mov mov leave pop cmpsl xchg pop push and jb adc cmp push adc mov into insb insl sub popa push xor sub (bad) sbb lods or push daa cmpsb sbb sbb push pop orl (bad) or mov xchg pop enter jb pop and leave push es in cltd or sub xchg test add sub and sbb das popl add cmp add add or cld push lcall add and xchg add pop or and fs xchg or xchg arpl dec add fistpll or inc clc out or popa ret popa xchg enter fnstsw shrb dec out mov mov or insl gs jo cmpsl add xor (bad) adc add jns dec loopne nop add dec pop lock addr16 mov pop ja push jg cmp cmp mov pop out jl inc enter (bad) jo inc xchg cmp in jl mov xchg or cmp pop xchg lahf pushf addl stc mov xor pop or fnstenv push mov sbb les lahf mov aas loope add sldt sub or mov pushl and shrl ljmp test push mov add push fs out out jle cmp xor pop mov push cwtl push mov inc scas popl sub xlat add jne clc push xor pop js xor pop das dec dec outsl push imul int3 add sub loope daa and sbb mov inc fcompl cmp outsl movsb es leave push daa and or xor add or sub sub (bad) jmp pop cld pop pop nop pop lea jbe or ja xchg push pushf push sbb inc outsb xchg or cld jp inc es outsl sbb in es push mov xor in je pusha add xchg pmaddwd imul inc dec and dec imul dec xchg ret out mov in (bad) adc mov xchg inc nop sti in jo arpl dec pop or and inc push dec sub and xchg or ss pop mov inc xchg nop js (bad) divb sub inc or cmp jne add int lea imul pop jp xchg or (bad) dec mov push push adc inc fisttp test xchg add sub xchg es push arpl out xchg jnp xor sbb bound dec roll xor out cmpsl andl shrb bound lock jnp adc dec inc jns adc cmc add mov hlt gs adc aas outsl aaa mov mov cmp subl jmp cmp sarb iret inc daa insb dec lds or movzwl insb outsb and rolb pop aad adc mov or jmp pop add add pop mov push push (bad) and jns or mov sub cmp iret xchg push push dec sbb xchg xlat inc imul xor add push or fnsave sub cltd inc cltd repnz aam in sbb and mov mov sub leave jno mov fdivs add mov js xchg sub enter inc adc inc mov cmp or ss (bad) add or adc ret add adc pop lahf insb xor and insb cmp stos pop mov adc testb mov add add loope mov xchg mov mov and jmp pop sbb mov mov jb cmp mov push xor cmp cmovnp push cmp adc shlb imul add jl cmp sti add pop or pop test imul movsl and inc imul test dec xchg pop imul sbb mov adc stc and movsl sub pop or inc das or sbb jle addl in push inc and jl les hlt mov inc adc add mov pusha scas jns mov jns orb in jo or or clc sub and adc mov lods push sbb add aam divl das inc cmp xchg pop (bad) fdivrl mov lods push (bad) cmp jbe cmp (bad) xor push jae adc das ret xlat cmp or mov fldenv loope mov mov xchg lock xchg addl pop sarb pop mov push or data16 push push lock pop mov push enter sahf push adc mov mov xor push push out lret rcrb xchg push cld mov mov xchg jmp add sub adc rcl add or mulb mov cmp sti movsl mov in inc inc test push ja fs xchg nop sub or movsl not fnstenv (bad) mov jnp push lock out sbb pop add dec push enter inc and push inc int dec ds jg cmp clc jg dec mov and (bad) mov pop xchg (bad) (bad) jp pusha add dec mov cli enter xor dec int3 lea rol (bad) mov (bad) xchg xchg dec cld pop fs nop dec cld cld mov sbb pop and loopne arpl outsb arpl das aaa pop mov cwtl mov add daa addb mov or or das xchg ret fmuls xchg cmp sbb adc dec inc call xchg jne cld lcall mov out xor pop inc jne andl push cmp or stos inc inc dec es xchg fadds jmp add inc (bad) ds pop and add cld mov fisubr negl jo rcl and pusha test imul mov mov ss pop cmpsl adc (bad) xor adc shll mov fidivl subb add nop xlat mov ja adc mov xchg inc push mov and xor dec scas xchg sbb push mov mov mov mov lock pop sbb mov sub test and mov nop sbb outsb sub add sub nop clc add loopne push shrb jp mov adc in cmp push daa aad loope inc movl add aam insb addr16 imul mov and nop adc sbb mov test faddp add sti add add xchg adc ret dec pop adc cmp add mov jo,pn adc inc xchg cmp xchg call pop or imul push sbb xchg cmp mov jno pusha xchg sub mov test xchg add mov push ja dec aam push std dec fs or or test inc push test push or cmp jp add jg jne mov testl cmpsl adcb cmp ret cmpsl push adc or xor push pop out adc adc sbb sbb add in or jle add adc aam fs mov pop cmp lock dec xchg mov lcall or test inc xor lods adc fcoms or (bad) xlat push rol enter adc dec or scas (bad) jmp dec ss add into mov dec pop sub leave ret pop mov adc jae xchg xor push stos sbb dec subl cmp mov pushf and xor dec pop in adc mov pop pop mov dec fisttpll fcoms fwait xchg push push mov adc cmp push mov inc (bad) roll xchg add and cli push addr16 cmp jge xor test cmp or add dec adc scas popa mov scas and adc xor xchg xchg sbb mov add sub sbb mov data16 inc sbb lock fbstp imull push adcl roll jno test pusha mov sbb xor xchg fiaddl and or enter and adc mov push jns adc call xor outsb add subl jno pop rcrb nop sub rcr mov or mov addr16 out sub test dec sbb lods push inc mov pop adc push jo pop xchg mov and aaa jp mov sbb roll out xlat das push dec test mov pop add or and add pop cs push add mov mov lea cmp roll loop or inc and pop add xlat mov sbbl testb adc stos and fisubr and fcmovbe (bad) pop xor outsb ss pop pop adc dec jo fwait stos (bad) mov jb mov mov test popf test ret inc imul mov and js aad outsb call xor push fisub mov fbstp aam add mov cmp sbb daa or lcall imul xchg ss es rorb imul add xor or mov data16 and fdiv aad mov inc aam psubq push inc xor pop add push cmpsb push int3 or adc and or dec xchg sub cmp add push sbb outsl add imul je sbb (bad) ds or cli jo jne dec jl int3 xchg adc arpl test sbbl (bad) movups lea push test lods inc lods push inc xor and mov pop xchg mov mov (bad) adc (bad) push mov and add inc dec mov daa pop sub add push mov in lods and adc pop dec or daa add adc or push xlat pop sub pop pop pop paddb push xchg arpl mov dec add ljmp scas or cmp pop and icebp or cmp cmp lock push loop jbe pop orl fiadd or cmc daa sub mov and (bad) dec aaa ret push mov push push test sub nop dec and sbb hlt adc and push jne add pop sub push hlt loop xor (bad) jle (bad) push cmp (bad) je jne scas test hlt jge pop sbbl adc cmp sbb mov or gs and pop test add mov jg lcall mov aas adc push dec dec xlat lods inc int3 cmp dec mov loopne outsb faddl andw jmp pop adc ja xor loope mov inc adc sbb lea stos add fs adc jne cmp ret add adcb inc push jne,pt sbb rcrb xchg sub pop push jbe out jle addl fistp (bad) jo pop jmp jnp movsl mov movsl lcall inc push jge cmpsl pop aas sahf add test adc add dec cmpb lods sub push js sub (bad) mov in outsb pop pop iret mov leave scas fwait cli xor dec sbb sub and mov je jp mov sbb repz xchg mov pop adc aaa or jbe dec insl movsb mov shll mov addl das xor call sbb and or xchg mov shrl stos jne sbb das dec rcl (bad) cmc add sub daa mov cmp cs jnp and dec popa andl pop push cmp pop add sub inc (bad) push or sub cmpsb inc iret and hlt xorb mov xor pop ret popa add into (bad) jge test or outsl jo push dec add push shr jge xor inc fdivrs ds and jns mov in inc mov orl jmp fiadd scas adc inc sbb xchg mov fdivrl mov (bad) stc add and sub sbb jno or xor imul xlat inc sbb arpl push xlat push andl addr16 das fidivl inc daa insl cmp pop cmp clc lods xlat jmp inc clc inc inc pop fdivs iret inc pushl ret jge adc or inc data16 scas es xor (bad) ja push inc sbbb (bad) fdivrs or aad test cmpsl adc leave mov or jl cmp mov js push jno mov inc pop jmp stos js jg xchg ret sub test insl test ja ljmp jecxz jp test ljmp adc inc insb mov adc jb inc adc ret gs push jb bound jne sub cmpsb sub cmp add fwait (bad) xlat mov push and cmp xor pop frstor jge add inc loopne jb cmpsl aad push movsl leave dec loopne dec movsl notb inc add pusha lds cmpsl sub sbbl pushf sub and ret add and sbb iret xor in popf xor pusha and pop leave test inc rolb lcall mov inc cmpsb movsl add rclb pusha mov add sub loopne sbb sarb leave mov and cmp es jae outsb icebp jmp or sub mov outsb lcall mov faddl mov jno mov inc cwtl idiv mov test and lcall adc (bad) aam xor inc push sub xor clc jne jmp iret mov imul mov jns xchg arpl adc mov test push inc jns aas push addb fnstsw fnop mov nop ss inc mov pop or mov (bad) mov insl or jae loope xlat push jl bound or jle cmpl pop jbe push push jb add aaa fdivrp inc jmp and jge or jmp add ja cmp je sbb sub jmp sbb clc mov les add inc dec lahf das mov sahf push dec mov add fisubrl stos mov inc mov inc sub lods xchg pop xor xchg je and adc push mov das push or sarb outsl out mov call and cmp sbb xchg adc and and mov cmp rclb sbb (bad) mov pop lahf push dec imul hlt sarb cmp sub or (bad) lea or xchg and add dec subl jl inc sbb jns sysexit mov cmpsl movsl cmpb jl mov mov inc xchg dec mov mov out sub pop test push or mov jmp cmp or adc and push ds sahf push push aad adc inc gs mov cmp inc sbb (bad) mov dec popl xchg xlat ja test fs test or loopne inc pop jle jle push enter xchg add sub test pusha xor adc pushf mov sbbl cmpl sbbb push xchg or test inc test into daa aad add mov sub gs mov add and mov cld push fsubl adc xorl add sti clc and stos cli (bad) jle adc mov pusha out (bad) cmp je decb cs int push in inc fcmovu fwait test jne inc pop jg mov add (bad) sub test adc ret jle xor lods jmp add fdivs sub gs dec add or popa xor out push push imul mov (bad) cmp add inc or setb pop rclb mov lret lret push add scas mov inc sub mov sbb or movsb cmp daa xor inc sarb inc sub jnp and dec push and dec pop adcl movsl std sbb icebp enter and pop dec dec push push inc dec pop outsb std inc fcoml dec mov das add jo adc inc pusha loopne push sahf inc mov es bound xor sbb jno lods or lock push pusha mov imul (bad) jl aas and dec lret dec (bad) sub push xchg inc repz sbb test cwtl fildl ja mov pop repz and jmp iret arpl fsubrl (bad) dec cmc movsl adc stos sub adcl dec addr16 push inc inc jns mov sti mov rolb jne (bad) and inc loope jle cmpb fistpll dec and mov lds or pushw push jecxz xor loopne stc andl mov (bad) adc add mov and mov cmpsb dec push inc mov mov outsb add dec cltd scas outsb (bad) pop push aam add sub les xchg mov ds jmp xchg fs pop subl pop push ret sub out out pop rolb test or jmp inc cmp mov out mov lods xchg inc pop es es cmpsl and aam clc nop rolb pop adc mov add inc mov inc push pop and popf add popa cmp shrb mov or xchg loopne xor xchg lcall movsb adcb popw icebp ss cld (bad) jmp xchg push cmp negb lea pop and sti cmp jge and xchg ret xor movsl pushf das mov and ljmp and add adc push inc outsb jo (bad) (bad) jo push jmp (bad) fisubl call gs sbb aaa mov add cwtl inc sar cmovno push fidivrl pop jmp jbe jo cmpsl xor out inc cmp out loopne loop adc test sub fs out test leave call push xor or cmp adc add lods and arpl es push lret rorb or push (bad) aam jo xchg sarl add lock push dec fwait adc stos ret clc jb mov push jnp loope es gs into push jmp (bad) mov insl lock shrb push dec or es adc xor add sub std shll outsb lods sar (bad) bound adc and pop pop fcmovnbe test pushf pop xchg js adc add outsl xorb push push (bad) jge std addr16 xchg sbb jl test adc cwtl das cs pop and adc dec sbb or jmp cmp sub xchg movsl out mov cmpsb adc mov ret inc sbb adc adc xor jne xor inc adc iret add ret test cs adc pop fs push push and sbb adc push movsl push push mov lahf mov sbb mov jmp mov in add xor sbb insl adc cmpb loope inc fcoml cmp or fwait (bad) fdivs add arpl or jg sub adc popa loopne int3 daa (bad) fadds rcl add sbb aaa or pop (bad) hlt xchg jns mov and (bad) inc clc mov adc (bad) inc cmp stos or add adc cmp add and push cmpsb mov js sbb nop rolb or xchg mov xor adc lcall pushl jmp adc and jne push aam ret in aam movsb cmp out jmp insb rclb xor sbb adc adcl sub ret cmp sarl sbb (bad) sarb js push pop jg pop jmp xor xchg jecxz xor mov out sarb sub movsb sub add xchg pop mov cmpsl push or mov push sub mov mov and orl imulb dec mov mov clc xchg ret shlb push and sbb push bound push inc jb orl mov lea and hlt pop cmp aad mov sub xorb shrb add loope in cmp pop sub jno js jle dec or pop or ds push sub enter and sbb fcomi ljmp push in and dec sub sub aaa pop and addr16 movsb mov dec push xor jl add sub inc lea mov mov inc pusha fild xor push iret loope cld call xchg cld inc xor push jecxz loopne mov mov mov fs xchg and fadds leave leave mov (bad) enter movsb xchg fisttpl mov and mov insl xchg repz sub push andl dec push pop gs repz or sbb mov inc es and aaa fs mov pop rcll rolb mov and inc js iret adc inc mov popf test adc and movsb push inc adc mov lahf jnp arpl ret (bad) xchg inc popa push xor xor push fs sub mov push push roll data16 cmp mov adc clc pop scas fucomp sbb clc push mov (bad) (bad) fmuls pop xchg fwait sbb push push fwait mov xchg aas sub pop punpcklwd bound pop xchg adc push xor setbe (bad) in cwtl test movsl test pushf cmp and dec and jecxz pushf dec pop stc loope cwtl sub adc inc pop mov xchg mov movsb jns lods add pusha push cmp sbb xchg dec inc bound jns lods mov push lea cmp adc push dec dec pop jbe jb cltd and test ret loopne adc pop inc mov fs dec (bad) lea inc add dec adc ret pop pusha xor dec cltd scas and in mov dec lcall and test sbb mov mov push or jno in rorb lcall pop fs xor push inc jmp cmp out test add adc inc lock fnstsw popa jmp lcall or pop mov dec inc sub sub and sub push pop dec gs sbb cmp sub sub and xor dec insl popa xor sub cmpsb ret or mov xchg add in adc out or daa or cmpl test or lods frstor je and and or sbbl adc in adc fisttpl jmp mov scas push push sti mov pop push lea out push lds push mov mov popa sub inc pop push repz fldl stc push cmp lock dec jne test inc call dec mov pop or pushf cmp cmp clc sbb jbe or (bad) xlat xchg inc jecxz addr16 popf test mov lret or jae xchg sbb pop cmp loope jo cmp mov (bad) or movsl and cmp mov rolb and xor lret jp repz and adc aaa (bad) cmp je or xchg inc cmp xor jecxz pop sbb test ror aad cmp pop lcall enter outsb adc and mov gs sbb adc and cmc sub inc add movsb pop add test aaa movsl fnsave sbb push sub mov out and jnp mov and and mov xor mov push pop push dec dec dec inc dec push add sbb sbb or cs xor aaa aaa xor decb or (bad) aaa inc insb cmp and xlat sub or sbb inc push (bad) lcall incl adc sub les add sbb notb jmp add cmp idivl inc sbb stos mov (bad) dec and xor enter fstl jmp (bad) jmp inc sub cmpsl sbb add pushf add mov or xor cmp sbb addr16 mov cmp loop pop or lock add xor dec mov sbb ret cmp adc shll or or inc adc rolb mov xchg out mov pop push (bad) lahf loopne jo jb negl push and fwait idivl in pop scas mov mov or or clc insb or mov daa fstpt mov ret dec mov out or subl or pop test dec enter add test aaa xor out inc push jnp mov xchg xchg pop add jno or dec nop xor sub or push testl inc push dec add outsl cwtl inc loopne cmp push or push pusha xchg add add mov inc jb outsb adc xchg shr or fnop mov adc adc rcll inc cmpsl push push out cmc cmp sbb sbb jbe jns cmp push xor cmp push jnp lods xchg cmp and pop and or sbb sbb dec add cmp mov inc add rcrl ficom add sbb fsubrl popa adc and test fiadd pop movsb test inc xchg and je (bad) xchg sbb adc rclb push jg das or or add xchg movsb rcl dec xchg inc iret inc rorl je pop mov repnz aaa sub inc mov dec dec pop (bad) mov les js jnp js mov lods (bad) negb js jnp (bad) out pop sub sbb test outsb cmpsb xchg leave dec mov movsl mov or sbb adc dec insb dec or aam pop in push sbbb inc push rcrb inc mov push (bad) cmp nop movl sub fldcw jns aaa je lock in add leave inc leave hlt call lock pop ja rolb in xchg ja cmpsl mov outsl or daa mov add add push insl bound jo sub mov jg test imul insl jmp add xchg adc adc xchg add jae je add ja in sbb adc andb pop adc iret pop shr es or fcoms dec (bad) jne rorb sub int3 cs imul or test popf add cld mov push movsl xorb pop stc jo mov mov pop adc enter sbb and fstpl je or mov xor add xchg lcall div bound jbe sbb pop add sub andl xchg je or loopne or out push loope dec dec sbb loopne xor test or adc lcall gs adc push jmp cmp or lea fnstcw imul inc xchg lea decl push cmp lea stos sahf or and or insb adc dec add adc popf sbb or dec mov add mov cmp fbld stos out mulps mov sbb int mov mov pop jo jb aam pushf inc call rol fldl xchg stos push pusha sub add flds shlb (bad) ja fldcw inc scas ja out add push lcall sub adc pop or mov into das call adc inc sub inc les add (bad) jo and pop or add dec or (bad) mov inc pop popf xor jnp (bad) insb (bad) or fs dec push int3 and inc inc je enter add pop mov cmp or (bad) xor sbb xor push out mull test pop (bad) add movsl mov or sub ja push es and xchg lock cmp paddusb pop lds add push das add lds or bound inc loope nop mov loop mov add add mov sbb mov rcll movsl lea or jo mov and stos push in test mov push mov add push mov and les pop xchg dec cmp or sbb mov add push add or add lret rclb push inc addps sub jl adc adc test jmp mov shrb lahf and test cmp mov aaa xor mov dec push pop add bound (bad) fist fadd sbb push sbb mov mov pop mov inc ja andps or mov add ljmp rolb add add add add add or or or mov mov mov mov ss sbb cmp mov insb loop nop pop in (bad) in (bad) mov inc jmp jmp jmp jmp jmp jmp jmp mov cld (bad) jmp (bad) (bad) fdivrp (bad) fdivr (bad) fidivl es sti scas cmpsb test call call dec mov mov insb loopne dec cmpsb repnz add sahf leave push push daa and les adc push shr out jl cmp push jl hlt adc dec repz xor int3 jl movsb lods mov sbb mov data16 xor push or adc inc out sahf negb inc insb in adc idivl add xor sti into nop or mov test clc es ds inc push push push iret repz push push add enter jge pop loopne sbb push out adc lods fs or jl in jecxz fidivrl mov mov mov mov add add or nop pop pop seto nop scas mov out or push mov dec sbb cwtl add pop repnz add nop cmpsl dec add dec nop add inc gs out cmp mov mov incl and sbb gs pop insb imul fimull shrl mov add movsb imul sub (bad) orl or aaa popa pop push or pop dec sbb movb lods or mov (bad) rolb inc dec pop jle adc add adc data16 test cmpsb mov pmuludq inc mov imul pop adc mov push data16 fmuls hlt or inc loop xor cmove pushf repnz dec jb push dec popa je xchg inc push push addr16 dec fcmove les adc add jmp in mov or cmp loope rcll sbb in pop add or (bad) in cwtl aam ja or push popa pushf pop nop subb pop and cmp xchg mov xchg dec gs popf fs inc or or les inc push inc xchg push or add pop add dec add imul xchg lcall add dec (bad) or inc into mov iret jns sbb add call fwait or data16 mov hlt mov cmp fs push pop mov add lsl or or pop xor loope aas or mov add shlb or add add fwait or cmp sub push dec mov push ss jl,pn jge add sub add add test lcall test out inc test test adc sbb sbb addb add aaa mov mov test jl mov cmpxchg adc mov mov (bad) sbb and and mov popf lock fild mov push mov xor cmp push clc test repnz incl popa adc inc inc inc inc (bad) mov into std mov mov (bad) mov pushl mov pop inc push inc push fcompl push push jo mov int jns cld and push imul idivl adc ss mov xor out repz jno push hlt push repz fisub push push xchg sbb xor inc mov dec xchg sub jne pop lahf out fisub in pop out mov push sub push test adc mov dec js test sarl push lock push add push (bad) imul push pusha lods or fs mov test (bad) xchg bound rclb or cmpsb fdivl outsb data16 imulb jbe inc scas es dec dec push cmp repz cld insb push mov lahf data16 sbb push mov and push (bad) push cmpsb fcomi sahf data16 sbb ds shlb nop arpl push push lret into inc pop and mov in cmpl mov aaa hlt ss push or out add jbe cwtl rclb ja adc into roll push or rolb insb mov clc push pop mov inc addb push or add ret sub mov cs cmp les dec add pushf mov in rolb fiaddl sbb jb xchg ja and or fdivrs jge lock test xchg push cmpb add dec cmp mov add push xchg push sbb in sub pusha sbb xchg and leave push sbb lds mov mov push cld enter inc rolb add pxor pop sub leave fiadd das mov (bad) setle xchg adc push lock addl or mov push stos cwtl (bad) or or pop call rorb inc insb inc pop add adc in shll dec add or mov (bad) push dec icebp add inc pop pop cld pop call lcall fiaddl dec pusha fs xchg outsl cwtl fs xor fimul cmp lods mov push and sub add out mov mov sub adc inc clc mov cmp sbb adc or inc into inc out sbb fnstenv xor push or dec and mov adc sbb pop je je and xchg dec or jp pushf and test mov xchg or or and xor adc outsl xor add sbb xchg xor daa test out mov shlb out sahf push pop gs jp jns out xchg mov loop ret jg lock jo or call fs (bad) clc push cmp mov push cld mov adc mov repnz test mov clc lcall fdivl out push in dec push jl sbb lahf ds jo scas push adc mov cmpsl je pop pop or cmp iret leave rorb jnp pop and mov push jbe jg xor mov ljmp pushf fmuls leave pop in iret and inc and test cmpsb lea xor fwait repz mov cmpsb outsb cmpsl pop dec or cmp loop inc push and jo outsb lods dec sub xor mov leave push and popf sbb push add adc push adc pusha les push and sbb loop ds cwtl sbb enter mov or add xchg in nop adc lcall lods cltd aad into sbb orl aad sub xor dec xchg (bad) cmpsb mov jne add out inc xor sub orl jne orl mov imul pop (bad) mov sbb fwait sbb aas sub ja push push mov or cs mov test jb daa inc jb or pop imul xor or fcompl add xchg daa push jb mov push inc push inc mov push jo daa or jo and popa clts ret mov xchg dec outsl nop jg push nop xchg daa dec push jo imul cmpl mov (bad) mov cmpsl adc mov sub int sbb fs out jmp mov test out xchg dec pop pop add mov inc jecxz test add adc sub jns lea and xchg int mov or xor cmpsl pop jecxz adc mov js push cmovo imul cmp mov adc ficompl inc aas add and cmpsl testl cmpl loopne add cmp mov and ja pop xchg sub xlat add sbb mov push test adc out inc dec add xlat mov in push sbb fucomip push or imul test insb int3 push dec adc (bad) mov add incl sub push or and (bad) testl ss fadd loopne adc inc call jmp push add subb mov jmp (bad) and nop lock rorb add lea arpl and jle orb aad loope mov jg dec dec jne das push cmp cmp mov inc and (bad) jmp fimull push or mov dec cmp add add fbld or cmpsb imul cmpsb imul aas push sub scas push push rcl inc mov sub pop add inc or sub fidivrl adc inc and nop inc cmp rolb cmp in sbb add sbb push inc mov or je into rcl mov push dec je ja inc aas popa jl test cmp cmp add sbb dec (bad) lret mov (bad) xor dec mov add sahf cmp mov (bad) mov sub adc cmpsb rol adc or (bad) or fmul add lret sub xor fidivrl pop cmp dec out xchg dec das cwtl les (bad) jmp or jmp mov mov sbbb sbb jb add or jl imul add and call jp adc lsl gs xchg dec mov es inc jl xchg sbb sub adc inc mov add push or add xor dec fildll xchg ret addr16 push jp imul cltd xor lahf xchg mov jo,pt add bound pop xchg shrl jae xorb sar pop (bad) or add dec nop stos mov inc inc daa and cmpsl loop adc int3 sub aaa (bad) push mov inc shrl ret pop push insb insb xchg mov mov lea fstl imul xor dec pop mov lods or enter adc sub stos xor sub test jmp push sub imul or loopne insl test adc rcl xor push sub add pop xlat dec adc and outsl dec or adc mov mov (bad) jbe (bad) test cmpsb neg xchg add (bad) jb mov add mov add daa fimull cmpsl add hlt nop or call xchg mov cmp dec add inc inc sbb jnp ja add js and pop sbb mov sarl jb jle jle dec movb adc xor inc and dec mov pop inc enter fucomi push negl inc jge jne push rcrl or add sti xchg and sub rolb and sub sbb add cmp popl mov sub push movsl jmp testb jmp push mov (bad) sahf or sub mov pushf clc lods inc and pop add mov mov pop jge subb mov aaa xor adc dec push icebp js pusha les adc inc in sub ret jp scas add and cmpb (bad) je dec (bad) mov add cmp adc inc mov cs mov in jmp popa xlat (bad) adc mov lea or cmpsl (bad) cld inc jecxz pusha mov adc jmp or subb (bad) mov or pop lret xor mov add jl test cmpsl sub out adc and mov xor ja mov adc mov mov xchg pop lock imul aas jl jle inc jo insb loope jecxz xor sub pop rcl mov mull fcomps loop sbb mov loopne test and and cmp aas jnp push mov test jmp mov call js sarb popf sbb test push (bad) cmp jle jne and (bad) cmp mov shlb test subb jmp sarb sbb sub pop lock in sbb dec rorb scas roll push jbe imul push and in and push push pusha sbb lock sarb scas inc shlb test cmp mov lock add or or lods xor (bad) mov ss jns pop push inc leave adc sbb adc push pop movsl test sub jo lcall jne das imul sbb sub mov or mov das fdivs test jb pop push lret fsts xchg push pop or orl xchg inc jo jl mov (bad) divl mov ds push fist aas call jbe fdivp add je out ds aam and push in or test test adc sub mov dec xor es ret push sub pop (bad) dec stos (bad) jbe jge mov sub or xor mov mov xchg sbb pushf mov es cmp sbb cs test lea enter add fdiv mov sbb add cmp je jmp in in repz xchg xor cmp sub into adc pop sub or bound push insl mov pop pop imul mov add pop xor sbb andb jge mov mov cmovae xchg sbb xor push mov rolb and cmp call (bad) jne mov sbb shrb xor push sti fadds pop pop mov mov cs ja jo pusha sub stos add loopne xlat sbb push push push cmp out pop nop lret fistpll and (bad) ficom inc pop sbb pop fdivs mov push jmp push cmp nop lcall xor push pop lret adc fimul sub or pop loopne stos xor xor ret fdivrl das or daa add nop sahf sti movsl mov cltd loopne jns jnp pop sbb sub inc nop imul mov out popf fwait add stos (bad) lea dec or xchg and jp and xchg push cmp inc xlat xchg fldt fldenv push loopne fstpl jmp inc and sub fnstcw out ret arpl jns sub sbb push sbbb pop sub popa mov add adc sbb scas sub adc sbb or cmp in jmp sub mov push adc adc shlb addl loopne popa rolb movsl loopne jo xor cmp mov js sub mov dec out push push push push mov inc inc sub cwtl mov and cmp (bad) in movsl insb bound jo sbb sbb sub add roll xor mov push xchg add add or dec jmp xchg xor push pop mov call imul ljmp dec sub add mov add pop jno dec arpl dec rorb and int push adc xchg add (bad) xor insb mov roll and int3 dec into xchg scas push push jne aaa xchg sbb mov jne sbb cmp sub lahf int3 test cwtl push mov clc mov inc ds (bad) xchg or fcmovnbe enter or xlat (bad) inc cmpsl sbb add nop fisttp cmp pop jp movb adc sub lahf and pop xor dec call adc aam insb cmc sub and mov sub mov or cli jmp and or loop rcrb mov je sbb xor daa pop dec jge mov jg arpl (bad) push enter pop outsl je test adc push cmp sub pop add mov ja test test or ds add xor cmp pop mov sbb push mov or or loopne xchg or and push or or sub adc cmp or and mov pop jb xor pop and mov cli and push pop inc dec js scas notb outsb adc and mov jb xor stos scas flds adc or dec adc add rcrl cmp jecxz fwait (bad) push adc push imul sbb xor jno jb pop insb not add or (bad) xor imul jbe and or push enter insl rol sbb add mov fisubrl jmp xchg adc sbb cmp mov add mov add outsl inc push add sub sub pop push (bad) push test lret mov aad (bad) push pusha test clc or dec xchg pop mov jmp (bad) int3 in clc xorb (bad) insb cld das dec stos movsb aad jmp aas jnp dec or sub dec loopne push cmp inc jmp dec inc push mov push lahf dec sarl dec xchg adc ja bound clc dec jbe inc aas jo in sub hlt imul push xor inc and adc es pop (bad) mov iret pop loopne out les addr16 pop inc lea gs pop jge pop (bad) out or data16 or lock lea pop into xchg add nop fwait and jge push rorb and lods ret ja jmp pop (bad) or aas roll (bad) inc pop mov sbb xor pop add outsl sbb ret (bad) jns sbb lock sbb repnz jge andl cs sbb inc sbbl je and push adc cmpsb imul in xchg orl pop jg ljmp dec out pop jmp dec mov or or adc cltd mov ret cmp push pop xchg lret adc pop je sti xor sub pop cmp cmp or sbb and cmpsb popf mov add ja dec fadds push stc xchg in cmp fucomp push or test popa fs pop or (bad) mov fs je (bad) push jl cmp test out jl dec aad ss pop cs jmp sub push in mov xchg cmp fstp pop adc fldl or sub mov out pop mov sub and push das sarl popa arpl add fsubr insb jge sub jae cld push sbb adc cld fs mov (bad) add outsb lcall rorl mov jecxz inc mov push addr16 or pushf test outsl insb into mov jecxz inc ficompl gs aam scas (bad) adc es int3 inc mov mov xor push fdivrl je call jg mov jp mov and xchg clc xchg ljmp xchg adc in arpl or adcl sub xorl push push lods je sbb xchg jne cmp mov xsha256 cmpsb shrb cmp (bad) jecxz sbb orb sbb adc aas add mull lret ds mov push xlat fmuls arpl je mov mov jle jmp push cmp loopne test popa push cmpsb imul jmp loop inc fwait sbb pop movsb movl movb push pop pop pop fucomi sub adc push pop add jp push jbe sti jmp (bad) xor imul xchg addl lods add (bad) pmaxub sub call xor xor fistpll push add xchg adc lcall hlt xchg fmul dec push sbb jne cmp pop sub xor imul push push test test push xlat and testl mov xchg adc mov (bad) xor nop sbb and mov (bad) and or insb xlat jo dec sbb imul jle mov pusha pop mov and pop dec or pop mov cmpsb loop and lds sub aas or insb jecxz sbb adc fdivrs mov je push and (bad) cmp fadds outsl adc icebp dec js arpl bnd orl rolb pop xor push cmp jns and mov inc or adc data16 push cmp shl movsb mov (bad) xor mov mov je sbb ds mov sub jno sbb inc test rorb sub sbbl dec dec push xor ret aaa xlat mov sub xor arpl add std xor or in and cmp test and and jle jne inc cwtl or inc jmp jmp cmp cmpsb mov fbld xchg jge inc add pop sub or pop pop ret daa xchg (bad) roll jne or push ficompl or and push mov pop out dec cltd out pop imull or ret cs xor js adc je xor mov (bad) scas inc insb insl popa daa mov dec aaa push inc inc shrb rolb mov jbe roll and ljmp pop inc jbe jnp jne xor imul and cld mov js push imul test jns js inc inc mov or mov dec mov inc add andl push xchg or iret cli dec imul mov xchg nop (bad) jge (bad) mov add ret mov dec adc into loopne sbb mov adc and inc dec sbb cmp fiaddl mov push adc adc push ss cmp xchg or dec mov mov outsl fs sub scas out imul cli push and pop push mov inc jmp shlb nop inc xor or jmp push pop push lret ja cmp das pop dec xor pop loopne mov adc loop (bad) rolb dec mov shll or mov xor inc dec add aad and xchg and add push inc or pushf and pop xchg aam sub cmp (bad) or cltd pop sub jmp and cmp add dec inc mov push imul popa mov and arpl sub scas hlt adc aam cmp fisub cmp cli clc dec and mov push bound xchg dec push cmp push lock ret mov jge repnz jne mov dec les sbb xor or (bad) cmp dec loopne loopne nop pop cmpsb testl mov movb nop or push mov pop fbld sub mov or outsb dec add add fidivrl adc mov inc sub xor cli ljmp adc and fwait or mov mov adc pop or fadd outsb enter sub jno sub sub aas xchg push nop or (bad) (bad) aam pop add hlt (bad) repnz nop lahf lret mov aad mov (bad) fmuls mov sub rolb test (bad) mov imulb mov sbb mov movsl outsl shrl pop push insl pop mov enter mov sub mov (bad) and xor inc test cmpsl cmp add or cmp inc pop mov xchg clc mov mov mov or and dec mov pushf mov and (bad) fstp xchg inc imul mov jg (bad) (bad) jno or adc mov push loopne and cmp je pop addb push sbb mov inc pop bound sub and es sub outsb inc xor and jmp mov adc cmp pop xor imul mov add mov dec adc popf and nop add pop fwait mov out imul mov dec inc mov adc bound xor mov or mov loopne mov lea xchg pop push jl ja push xchg pop cmpb and cltd add pop push stc (bad) rcrb mov cwtl popf movsl xor add out dec pop je mov test popa or pop mov mov je jp cs testb or addl orl aam add out and mov scas orl or adc cli pop fsubrs das or push popf inc mov adc push sbbl pop dec pop add pop inc inc outsb cwtl and xchg sbb lret cmp mov or xlat add roll inc ret sbb cld insl pop insb pop xchg paddb pop push je pushf int dec fwait push popa push xor mov adc aas dec scas jo adc je mov push mov loopne fbld nop pop push add xchg enter mov sarb clc popa inc lcall rol out mov jo and xchg lock add add push rolb mov mov push or jmp mov leave inc fwait dec mov enter push cmp cld sub push outsb adc (bad) rolb enter cmp in fistpl outsb pop je mov movb ja mov pusha add push push (bad) push inc inc push movsb cmp bound lret mov sub mov ret outsl push add push or mov fnsave aas mov xor cs je mov je or pop pop aam aas or nop cltd out sti sbb mov (bad) mov dec in fstp nop and je mov fwait adc idivb push jo mov leave dec orl pop or cs pop pop or pusha pusha cmp data16 data16 sbb out push mov les dec mov dec xor sbb mov xor push out sub xor sarb dec adc stos mov sub mov and or xor mov push push sbb adc or push mov sarl mov leave je rcr or mov push and adc pop pusha push mov adc (bad) pusha clc shlb mov pop das sub dec or push call jb inc push inc mov pushf mov mov inc jecxz xchg mov dec dec dec xor fwait aam cmp xor mov push jb cmp dec and pop dec bound pop cmp jg xor mov fnstsw ja dec aad adc je adc (bad) and push add xor push adc aam sbb dec lods inc std loopne add inc clc sub aas scas jne test out push push in push cs outsl test push push and push das bound cmp cmp fwait and fdivrl sar add loope nop scas inc pop sarb mov insb (bad) dec lcall and rclb aam insl in sbb mov sti jne mov pop pop cmpsb xchg pop shll dec dec roll inc call inc jecxz out ja pop cld add push popa inc mov sbb fs pusha jno xchg push adc xor mov mov (bad) dec outsb push divps or add mov mov or jg das add add dec jb add cmp or mov cmpsl adc inc cmp xchg jae mov push mov aam iret scas xor aas enter pushl mov sbb js add and lods je lock add xchg test aad stos movups jl add in dec or imul lock add into cld pop andb or ret rcr xor add incl daa test into out xchg push sub pop sbb or bound adc fs push cmc hlt pop lock pop imul pop stos pop daa in pop test add adc inc sti jb xchg mov inc adc in aaa and xchg pop push stos fimull loop sub xchg dec popa jne js out mov adc mov fcmovnu fmull fildl ret jle ret mov pop or xor mov clc sbb adc fildl (bad) scas push mov adc or outsb add outsb or push divl decb inc push pushf (bad) adc jns je ja mov mov push insb push mov addb jecxz push cmp je sbb mov and add add add add aam push repnz gs push adc dec jb mov idivb test rcrb push les jno mov xlat add mov rcrb cmpsl xor sbbl cmp (bad) leave lock or ficomp lea bound sub notl adc loopne mov std cmp jge mov cmpsl ds cmpsl aaa hlt mov cwtl add cwtl jo dec sbb (bad) push inc daa adc or (bad) add sahf dec inc inc mov (bad) dec and xchg dec dec dec add mov jmp insb add push push test loopne or dec test inc xor mov add pop mov xchg mov add jb mov stos dec sub sub pusha mov mov xchg rol sub jge push imul or imulb dec (bad) cmp (bad) aaa call jge mov push adcl in push xor addl xchg adc xchg js adc jg mov outsl es dec xchg sbb mov push outsl or sbb xorl ret jne aaa or push add iret jo loopne les fild jecxz inc add add je sbb (bad) das jno and data16 inc push mov adc (bad) outsl xchg or les ja fldl add lcall cmp or and pusha xor jmp daa int3 fiaddl push add ja xlat or dec cmp add mov test (bad) out stc addr16 ret jge jmp push fsubrl dec (bad) fsub push dec pop sub jg inc (bad) adc enter imulb int3 push pop push add mov xchg test ja jmp lea mov mov push mov cltd sbb xchg nop push inc dec test je adc lret xchg sub pop add or loopne sub lret icebp xchg and push sbb jp,pt push add js or sbb mov pop adc js jne xchg leave std sbbl imul aam roll hlt add movsb ja pop test movsb mov clc mov js iret mov pop int adc ljmp or cmp hlt and adc sbb add mov lods inc push nop int3 and cmp sub push xchg ss add ret push inc in push cld push ret sbb and add cmpsl pop or je cmp adc stc jle or or add adc loop mov movsb dec mov jmp push push hlt mov imul or jae iret cmp bound mov pop xlat cli mov cwtl cltd xor and cld rcrb dec add add add pushf enter fwait mov in orb int xor fiadd nop add iret (bad) pop jle cmp add adc or add pop mov pop lahf lock je jo inc shl (bad) jbe insb (bad) rorb imul adc addl in in push sub or roll js adc cmp in and jle pop mov jnp or push jmp push sbb or jge push pop dec jno push or or lcall sub push add push pop enter pop stc lea jbe sbb push lret cmpsb adc xchg lods adc fsubs ret dec mull push dec mov jo pop and test aad cs out sbb bound mov inc jmp int xchg and ljmp or add inc mov and sub dec mov and and nop (bad) sub or movsl ss (bad) out and mov push jo (bad) sbb ret and mov jo aas mov pop loop aaa cmp mov push mov int outsb xchg insl rclb pushf jne (bad) jmp es iret jg jb adc sbb ja cmc fsubs sub add adc add aaa in (bad) or sbb cmp or movsl inc (bad) (bad) adc fsts (bad) in sub sti cmpsb jmp dec push add jle push (bad) jmp out loopne mov push pushf insb adc inc popa les inc sbb cmp movsb mov lock and fs mov hlt popf sub scas dec popl adc and mov (bad) xor (bad) in out xchg cmpsl add (bad) in or je test fisubl jmp aad clc jnp add xchg or punpckhdq cmp aas mov (bad) cmp cmp jns xor ja pop mov xchg andl mov inc movsl mov aaa cmp or xor jo jo test adc fcmovb popf adc adc inc mov mov sub or shrl adc push pushf (bad) adc inc add push mov sbb adc (bad) nop leave push movsl test sub jbe and movb je cmpsb and or adc js jp and std sbb sbb xchg xchg jle add sub xchg iret push dec mov xchg xchg push pop or pop aam shlb jno mov ja or jne inc push xor jg pusha movsl push dec mov adc lods push hlt cs pusha stc fnstcw inc enter daa sbb and sahf adc or dec mov inc sub popa loope imul movsb or hlt (bad) in in or inc adc add dec and dec add ss pop and movb xlat mov xchg mov or inc inc aaa arpl (bad) ret addr16 sbb jbe test xor add mov adc outsl pop mov cmp push mov jns scas pop push clc mov pop xchg dec fwait jne out push cmp pop jge lcall push push ret or push sbbl jno in cmpsb in adc cmp push in add or fcmovbe enter push movl mov jns pop cmpl sub ret ret bound or je aam ret pop aam push leave or rcrb dec or jb inc scas mov imul sub shrl rorl adc shr pop dec pop adc mov or leave ret adc push cmpsb fsts fild (bad) fwait sbb inc lahf add in pop adc add addr16 and (bad) adc out sub or inc sbb popf les inc mov add gs push and outsb adc xorl push movb push aam push cltd sub mov mov inc pop outsl mov ret js into jle je dec mov or imul adc adc mov out jle adc or movsl test sbb xchg jno das je mov or mov bound jne testb and andl push or mov fildl in inc rorb je add push inc mov loop cwtl insl xor sbb addr16 test and jp jb pop lods jae jmp inc jo mov cmpsl popa pusha loope fs hlt daa or cwtl cwtl push jo push mov bound adc push mov mov push mov leave or (bad) jne inc and movsl push lods mov inc daa mov cmpsl add push (bad) jmp push lcall mov (bad) (bad) in inc (bad) out pop in mov push ret xlat push in xchg mov xor inc lahf into dec sbb cmpsl (bad) insb ret fcomps adc pop cmp daa jmp xor inc add jbe adc adc lock dec daa or mov and add pop inc in inc cli sahf test sbb sub (bad) mov jmp dec out add test loopnew add adc mov sub cmpsb js xor push or adc lods dec lock clc push inc test loopne stos sarl add push mov mov push cld loopne imul loopne insb or sbb setge add cmpsl push xor enter xchg or sbb sbb sub xchg and lods xchg xlat jge arpl (bad) cmp test test sahf adc sti in mov clc fstl movsb aaa pop test push fs dec xor bound and jle inc add jl xorps add and xchg fsubs ljmp add fiaddl test enter daa or push fcoml push mov xchg sub sgdtl push add ja mov adc dec out add and fisubl xchg mov cmp inc sbb mov xor sbb push rorb add jb or out xor je add inc adc pop pop je aam sbb jo fcomps mov jg sbb inc ret jp mov pushl xorl cmp jge xchg test jnp das pushf clc xchg xorl xchg sahf and jle xor sub sbb je xorl adc inc and xchg inc adc xlat cmc jbe arpl enter fistpl les js add mov aam push shr mov jg add jns and push add insl cmp push add movsb xchg stos insb ljmp lock dec or xchg (bad) repz xor xor and xor fwait push dec pop add add sti add call or xacquire add test cwtl cmp out jl push fcoml add lds lret xchg mov sbb dec push push dec fcoml int3 inc push das out mov sbb mov add or add and jne jae cmpsb mov pop out mov js mov es xchg sub fimull sbb and pop push push bound inc (bad) mov adc daa rclb roll cmp sbb icebp inc adc inc les movsb sbb mov cmp and or insb inc or movsb adc inc pop sbb xchg loopne jmp leave sbb add insb xor fimul dec cmpb outsb outsl or mov inc sbb dec and sbb movntps inc and nop popf or xor adc sbb lods cltd push xor loop mov clc mov je and ffreep cmp dec (bad) xor inc fsubrl addl jne lock fsubrl ret cmp cwtl jae (bad) lods push rorb jo push icebp aas mov add mov sub test adc adc orl ljmp imul jbe or cmp bound and add fs mov adc mov pop pop scas lcall aam sub inc movb xor pop lea mov stc out and (bad) call cmpl or lods leave fsts hlt and xchg rorb cmpsl sti cmp pop and mov cld push jne (bad) jo pop pop add xor arpl fldl and pushf pop dec cmp in cwtl mov hlt pop mov adc enter aad loope push dec int outsl lret icebp jo mov xor or in jbe,pn (bad) pop jge enter dec mov outsl sbb add ret or inc out mov sbb xchg and sub sub add cmp loop fisttp cmp adc mov cmp cmpl xchg add aam sub pop push mov pop dec dec ja jmp jae ja sahf jle pushf daa scas notl add mov lahf shr inc add imul sbb push dec cmp setle cmp lcall inc dec aam adc adc cld test arpl and into dec inc daa rcl push and mov inc sti lods cmp ljmp or mov push mov cmp inc lock pusha pop lcall pop add loopw psubb aaa in cmp xor loopne pop and mov popa add inc adc pop jle add (bad) mov fsubrs cli loopne (bad) xor push aaa rclb xorl negl push dec imul sub dec push jns mov or xchg jbe xchg inc mov call and std add mov and jbe movb shll addb push and test cmc aad pop sub ja push jne icebp mov jno mov cmpb add pop mov mov pop push jno mov sub xchg cmp inc add pusha movsl cwtl jl or pop add inc pop div pop add (bad) loopne cli (bad) popf cmp ja pop daa out (bad) sub mov mov scas daa leave jns add (bad) or jle sub lods (bad) jle addr16 fs add jmp sbb or cmp dec inc push test gs push gs push adc fsubrs pop lds js xor dec sub cmpsl inc push sub mov int push or cs xor add notl xchg stos mov cmp sub push jnp jno inc push daa insb ja imul aam xchg sbb mov aam sub inc cmp fisttpll push pop sti inc and lods or xchg insb sub pop subl dec bound cmp jne xchg call jmp sbb lods int es mov enter test in out cmpb mov (bad) adc sub je xchg dec or mov js dec push cmp xchg mov add int3 mov mov jge adc sbb jo xchg adc inc rcrl dec fdivrl iret xor les pop adc mov push fimull xor testl jg ss or loop les jne scas inc sub loopne daa push push fsubrs xor pop xor push test mov ss aam or pop cs sub cmp ljmp xlat or pop cs test adc and addr16 lock adc mov adc loopne (bad) call cmp cli push push jmp sbb xchg sbb or movsl xchg mov movsl cs pop stos sub pop test add adc push sbb add push cmp dec mov fwait movl sub pop dec jmp lods aad cs scas jo push mov lcall sbb jb enter test inc cs fstl pop (bad) pusha push out lods jne es ffreep cwtl loopne movsl push mov jne and or mov inc mov (bad) mov pop sub or push icebp test mov xchg scas or mov sub shrb lret dec sub test (bad) adc add icebp jbe xor add pop pusha pop adcl xchg cmpsl sub and sbb mov pusha mov sbb dec cs and scas adc cli rcrl mov or shll mov adc or loopne jg adc mov loopne jmp mov adc mov cmp orb jg fucomi mov inc pop pop xchg xor sbb add insb into jg push mov rolb in jne push movsl sarb aam loope clc dec popf or mov cmp arpl push shll xchg mov mov sbb dec insl ffree jae pop (bad) jne mov dec enter enter adc push push lods repz mov add shll dec insb cmp add push or sbb and mov adc fistp xor dec ss inc test xchg inc pop insb idiv mov aas (bad) jmp mov sbb fmuls mov lods test and arpl mov stos flds or add lods imul pop cmp jle lds cmovae aas and dec sti fisttp add sbb decl loopne cs mov movsw daa xchg call cmp and mov sub loop sbb mov pop sbb add or and stos outsl xor jmp mov lea adc lea insb cwtl and pop and xor dec push mov and pop addb es push ja lock push orl loop repnz or lods lods clc sbb addr16 push sub or sub or and jg push xor stc dec jbe stos adc insl nop mov add inc loope push sbb push inc in sub je orl push rclb call or cmp in mov dec or or (bad) xor dec adc and mov add and sub je add sahf mov adc ss and pusha sbb mov xor add or adc (bad) jp mov dec xchg loopne mov scas inc call into push inc xor mov jp adc rclb inc test pop add and jmp xchg in push inc adc dec out jnp inc push test or pop ss cmp sub inc pushf mov dec imul inc test or mov push inc je and xorb lret fwait sarb or add data16 es out xor inc out xadd lock mov cltd jge push sub insl pop xor sub xchg sbb outsb sub add or xchg shrb add mov aas push movsb sbb popf in fwait push aad mov fwait inc adc push xchg mov xchg inc (bad) or push add mov sbb adc fidivr dec mov and add adc insl mov and pop dec xchg cli sbb test testl les pop out daa jmp and jge jnp lea in adc add test pop pop aaa loop jae inc (bad) sub cmp or mov and ja or popa jne loopne andl pushf pushf lea push scas or push loop dec jle ja sub repz jge xor aaa cmpsl or inc test pop mov incb jecxz sti (bad) mov daa pop lcall jl sbb dec enter cs xlat imul add dec sub add or rcrl xchg adc leave int push mov test mov adc mov lods inc pop repnz xchg pxor sbb shl pop add pusha fdiv cli xorl lds addr16 aaa xchg xor scas orl dec and push popf or and inc jno pop sub notb add insb out lea xor scas test add add outsl je out jne (bad) out and xor mov scas mov ljmp xor in xchg xor es (bad) repnz xchg mov adc jne int3 ret les or aaa dec push xchg icebp ja or push or loopne pop je sbb mov xchg daa and cmpsb arpl and sbb ficompl movsb pusha sub (bad) mov mov dec mov (bad) fcoml add push inc nop cmp sbb xor inc mov cmpsb xor mov inc xchg aaa jmp jmp je xor mov adc loopne or pop mov imul inc je std sbb adc push arpl inc mov xlat icebp cmp nop mov imul xor jge xchg clc mov xlat lret mov sbb insl ljmp (bad) loopne inc sbb or or cmp and inc jo cmp dec cmpsl dec xor dec clc push inc add pop push outsb inc (bad) (bad) adc sbb bound pushl add cmp add int3 adc rcrl or adc inc push inc push sarb push xorl and adcb dec test fs dec imul and in or mov sub std js add adc cmpl pop pop scas ljmp and cld adc test fnclex mov sub sbb insl cwtl push popa dec nop ljmp gs or popw add mov test adc inc and inc push test adc pop outsl mov mov mov das lods sbb adc ret aam ret xchg fisub cmp or adc scas js or pop adc je cmpsb or rorb pop cli ljmp das add (bad) aad imul popl cmp lods daa insb not sbb mov jmp outsb and test push jge mov (bad) pusha inc rcr inc in (bad) adc adc into cmp test xor mov or lcall jmp fwait das push jmp pop add dec shlb sbb sbb cmp and or and inc ss cmp jne fwait mov mov push push xchg lock add loope jb,pn add sbbb push mov (bad) out lret cmp adc js fs inc test stos mov xor sub add jl cmp sbb xor dec dec xor mov sbb gs jne cmpsl dec jl adc subb repnz sbb xor add inc (bad) shlb addr16 jecxz or pop push ljmp push imul mov and sbb inc xorl loopne fcmovbe dec mov inc xor mov hlt add add push inc xchg test daa fnsave das mov insl xor and adc or adc push mov add pop les sbb ja or adc test xor test xchg cmpsl pushf push xor scas mov xchg sbb adc movsl jnp adc movl shll loop das loopne ljmp pop inc sub popa push push incl adc aad and insl pop (bad) fild mov mov add cmp mov ret push sub push push movsb pop pop addb fild lds call xchg add and inc fsubl add sbb mov sub push in push xor mov jmp cli inc sbb lds call jge sbbl in push jmp data16 add call dec mov jno rclb rcrb cmp insl mov mov sbb fldenv mov xor aaa or rorl sbb dec paddsw mov pop jns mov pusha pop inc fwait inc test and add ret pop bswap nop leave pop fwait in push enter xchg push test lcall mov test adc adc dec faddl jmp les xorb pop dec roll jae insl jmp in mov pop loopne mov rcl pop das cmp aas sbb mov subb das dec xor lock pusha lcall xor jne bound sbb push push clc adc out xabort insb push pop add xchg dec xor cmp mov cmp ss jl add fmull lods push movsb mov sbb lahf push xorps stos lea cld lahf popf cmp dec popf pop mov inc inc mov pushf or pop push mov and xchg je push das xor or pop aaa push jnp add mov add (bad) mov enter cld sar xor push mov mov mov adc daa (bad) push in sbb mov inc sahf aam sbb stos add and and push push lcall dec fwait nop fidiv es pop push adc inc add add rolb add push jg add andb and jno pop add movsl inc hlt outsb test call ss cli lret xchg movsb cmp xchg sbb dec sbbl aam pop pusha aaa adcl mov (bad) and rcrb or cmp jo xorl int3 fldenv stos shl or sbb pop inc lods or (bad) adc inc add inc push and adc lods mov push out stos sbb dec inc mov push sbb adc icebp orl mov lret mov cmp push sbb ret les adc mov mov dec sub aam fstpt xchg or mov pop ret adc adc stos add movb scas repz aam push jmp cmp xor xchg ficom dec xor (bad) icebp adc out nop sbb cs cmp pop push popf rolb dec or or jae push mov and sahf mov imul adc movswl jmp sbb jle add ss or add sub xor clc cmpsl rcl mov int3 push xor adc push jns mov pop daa cmp movb scas xor or mov mov popf icebp or bound in and push lods (bad) test inc mov xchg mov push add push rcrl insl test inc int3 movsl xor movsb addr16 pushf cltd in bound dec or test icebp movsl sti cmpl mov testl (bad) mov mov data16 adc dec mov in push enter xchg test push icebp jl cmp rorl and push jnp icebp mov xchg adc lods jge mov push mov and rorl xchg xchg ds je ret adc pop jo adc test cmp call loopne pop and sub push jb ret movsb jb xor pusha aam xchg inc sbb pop into mov lea pop (bad) mov orl sbb xchg mov inc xor lea repz test fnstcw test mov mov icebp sub jb outsb call aaa ret pcmpeqb aaa orl and imul sti sbb jmp adc push sarb or enter shr mov fcmovnu mov pop inc nop push sub add in aaa or divb adc dec push pop xor (bad) fstl mov scas sbb push adc and jb rcrb sarb aam jae jno dec stos int call inc fild test mov xor dec adc das and mov xor js jnp daa adc push loop aam or and movsl cmp jl jmp jne xor add mov das fldl2t or (bad) push mov pop cmp ja jne xor xor jmp sbb fisubl fs xor ss lcall adcl inc lcall lea enter rolb jne and imul cmpsb push inc inc lret es cmp and inc or or insl xchg jecxz xor push pop push and std xchg nop dec push or cmp sub nop inc push test push andb xlat add jecxz push dec mov inc push test loopne rorb inc enter test orl mov push adc xor bound clc mov ljmp add imul mov inc ja inc sub push das push rolb xorl fsubl fcomps push push inc sub fstpt sbb cmc push cmp sub inc mov shrb inc ret and dec (bad) jb mov inc mov or xchg mov jo pop xchg adc add je xchg sub call inc mov xchg or aas movsl jb dec push loop loopne pusha and (bad) subl and adc test aam mov xchg xor (bad) inc mov pop imul add adc push and dec pop add fstpl add enter outsl (bad) add dec add adc or loope add aam or inc cmc sbb (bad) pop sub add adcb mov and mov mov push adc push jae mov mov loope add loopne pop inc pusha test sbb pop xchg cmpsb loopne ficomp or sbb add stos push jns push and cmp pop jae repnz add or lods dec or and pop ficom inc rcrl es and pop ret inc scas jno or movb push xchg les test xor outsl xor outsl fisttpll in loope loope xor scas mov sbb jne std js xlat out adc test fadds jne (bad) mov adc cli jns loope sub rorl inc fs sbb jo dec data16 jmp pop pop outsl or cmp imul adc (bad) or pop push insl push jno es jo int3 push cmp mulb xchg sti pop jo and cmp sub movsb pop cmp ret adc roll inc sbb cmp inc shll orb (bad) jg and aad movsl rcpps xchg mov add cmp aaa mov jp pop inc or imul fadd scas inc test daa add sub xor adc test or pop mov cmp movsb loop hlt push or dec loop dec cmp add jnp js push nop push dec push aas insb nop xor sub and xor mov loope jne pop pop ja es push xchg lods xor or adc clc add je dec and pop pop add xchg ret jle mov sub (bad) test js xchg popf cli cmpsl cmp ja push mov adc sbb test ret aaa btc lods push into jnp add xchg add add and jmp cmpl je add (bad) mov mov mov jg (bad) int3 shrb add dec mov push push loopne adc adc call ljmp push jl mov aam xor dec pop dec addr16 mov andl out sarl movsb (bad) mov dec jl dec sbb (bad) add push add push mov mov mov les rcrb jae nop enter xor fistl movsb inc lods add sub dec add jae,pn nop pop or repz inc add clc sbb push cmpsb push push fcomps sub adc jmp add adc xor test mov loop addl xor lahf push mov cwtl mov sbb xor sahf xor or gs pop ljmp adc rclb pop pop inc les pop (bad) dec push cmp por add jne pop iret adc push movsl cmp sub test push fstps push jno add aad mov sti add lahf (bad) and lock lcall ja sbb push or sbb mov mov mov inc jne push fwait cmp jmp aas sbb sbb xchg cmp inc aam jecxz inc or imul shrb inc jne jmp inc pop shlb aas imul dec pop jmp lcall in stc and xor sub add insb stos mul popa pop in or pop push das dec adc mov imul adc cs mov push int enter add mov dec enter add enter sbb add in cs out lcall roll daa cmp add sbb adc outsl add cwtl mov sub mov or cwtl xchg mov xor mov ljmp sub dec pop cmp out pop fcmovu cli testl ret sbb rolb xchg int mov (bad) sbb pop rcr mov aam push inc mov sub test mov inc sub js vshufps cmp mov mov pushf dec ja dec popf pop mov pop cmp or mov add jge fisttpl xchg movsb addr16 jmp sub ret jle and adc xchg pop push sub mov sbb mov jo and lret add xlat ljmp xchg mov sarb inc add ret sub in fidivrl or and sbb in ret xchg loope push sub or popl or sarl int (bad) dec sub and sub addl and mov or xor cwtl ljmp or mov jbe pop or pop dec aaa pop push push add adc inc adc jo lock pop mov add push call stos push pop xor sub movsb sbb push adc mov sbb jne push push push and shrb inc ret psrlw in rolb pop push xchg (bad) dec cmc add or jns push push imul aaa lds and ja fsubs sub aas clc js xchg or test add sbb (bad) icebp push mov jle (bad) mov dec popa mov or adc push or adc inc or or adc hlt aad or lahf dec fisubl clc push (bad) xor adc push dec xlat push lahf mov outsl add push sub or (bad) icebp pop push jp inc cmp pop adc outsl cmp pusha mov sbbb cmp xor movb dec loopne rcr pop push dec test ss aaa adc xchg pop outsl lods pop andl mov and int3 mov arpl add or xor cmp aad cmp adc jo mov pop mov lahf adc pop xchg push lods aaa sti or mov test aad or xchg dec mov adc outsb lret sub test mov iret add adc rcrl sub popl push out xchg cmpsl das mov insl in clc scas mov es dec push orl inc orb or fwait inc mov mov je fcomps test inc ja jns rolb or push xor cmpl adc mov addr16 and adc scas mov sub mov add adc add adc es cltd push ja inc movsb mov add xor mov mov xchg test or jmp jne xlat add sti xor mov outsb imul mov ljmp xchg (bad) sbb imul arpl jne or lods test dec pop lock and or imul push call icebp xchg scas cmp mov or mov test into inc xor sub jge es repnz jmp imul hlt mov fisubl in sub pop je cmp or jge and push adc scas inc pop or icebp inc push add or jg or call loop pop mov pop js,pn call xchg sbbl shlb dec icebp push sti fs in mov aam push outsl mov or inc pop pop adc mov adc hlt mov or adc or sbb or mov xchg jg xchg and movsb mov call decl xorl add sbb mov mov mov inc jp sub insl inc jmp stos sub push gs scas sub sub mov mov fildl push pop rcrb or inc cltd out or call int3 xchg sub fmul fmul jo movsl push aam adc test inc xor push or cmp mov test mov and pop fistp push adc mov adc fisubrl jmp movb stos mov push or scas and sbbl xor xchg nop loopne jp mov inc je pushf sbb orl sbb rcr mov in pop push mov sbb lds adc mov dec mov inc xchg ja jb pushf cs mov or or mov add sub data16 mov mov cmp inc and pop inc ja sbb jge adc or in inc jae loopne adc das cs xor sub inc jnp and jle adc mov sub dec add add dec sub dec ja and push out outsb pop push adc fmul adc ja or mov into adc into adc dec add add (bad) mov dec jae inc jl sbb push push jmp or cmp fsubl in xchg cmpsb cmp int3 or fcmovbe insl sbb xchg cmp clc dec fstl sbb mov rorl or xor push (bad) and xor add add rclb das mov sub add das insb rclb cld xor adc sbb mov pop (bad) mov ret xchg ljmp pop aam or test adc xchg jge dec xchg enter or repz fildl cmp pop add push rcll xor or fcomps insb sbb mov adc and xorl mov cmp inc mov data16 faddl jle mov mov fsubl enter mov mov lock fstpl add ret mov dec sbb xlat and jmp (bad) mov jb push mov lock cmp dec push ret mov rclb and pushf jle push inc dec or dec mov mov add ret insl mov jne xchg mov push clc xchg sub test dec rcrl fmull mov add mov test mov subb cmp push pop test push jno fs or fs mov imul xchg push push arpl aaa jnp,pn gs push inc in (bad) mov xchg mov add mov push imul inc rclb sbb push sbb dec xchg cmc shrb dec add sbb mov imulb (bad) jl push adc mov sub int3 rclb or adc les in adc rcrb and adc in sub mov int mov push daa scas imul mov aaa fst ss pop mov and jne gs pop add inc push insl pusha les aam sub sti sbb and ret inc loopne cwtl jno mov imul cmpsl ret pop out add sbb add iret add test ss adc pop in push dec or and adc ret adc xchg push ljmp and fdivl xor arpl add and enter test jmp jg mov mov xor xor les aam mov jne cmp pop in sbb push or pop dec push dec lea out negl dec scas mov cvtps2pi xchg lock xchg add inc icebp nop mov inc add and test jnp push add lods cmc adc mov pop lahf mov sub lahf pusha cmpsl clc out or or add adc xor (bad) jae xchg add pop jo inc mov sub xor add xor and and in gs jmp fldt mov adc push movl jbe mov jmp add push sub pop jns inc cmp lods xlat pusha add sub (bad) push and add inc mov movsb mov lds pop js or add movsb and in xorb mov inc pop mov movsb repnz inc jmp xchg pop mov js mov outsl cmp imul add pop movsl test ljmp jo dec jl data16 aas fistpl xchg into fimul adc sbb aad test mov push test cmc sub dec and adc mov sub leave sub enter mov push add push push push push inc loope or cmp aas bt lret aad js jno mov dec mov mov ds icebp jno mov in or out xchg push hlt add mov xorl adc mov add sbb pop or loope cmpb stos or jnp inc or inc loop js movsl es mov inc add imul push jmp cmp xor and adc movsl std pusha inc xchg jbe push or mov (bad) xchg outsl cmp push scas sub ja pusha dec inc out add rcll mov mov push pop lcall mov inc add lds mov or mov inc (bad) sub cmp and pop rol or pop jl faddl inc or (bad) cmp add clc imul imul jbe test call test call fdivs sub test jo mov addr16 cmp dec fcomps cmp lret adc cmp dec add fs dec icebp adc or jno loope sbb push adc nop arpl sbb mov test adc std int3 inc mov in adc adc pushf stos cmp cmp jge push out push xor sub push adc lea ret push push and mov pop mov loopne lock shr sub sub xchg adc imul xor sbb or lds xchg pop add orl push or jae pop and out in adc movsb jle sbb or mov jne push std add jmp inc loopne loopne mov iret outsb aaa pop mov sub (bad) jo mov xchg and outsl lods add add mov aaa or lock call mov or clc sub mov (bad) and test in hlt pop mov lock fistpll mov arpl daa sub sbb mov cmp dec pop sarb add mov xchg jae cwtl jle mov inc or jg xor sub cmpsl enter inc mov ret fs add xchg mov sub lods dec pop jno (bad) das loope or mov mov sub iret and cmp mov (bad) push scas test enter mov dec jns xorl push enter jnp adc sbb outsl pop cmp xchg and in push js outsb outsb mov sub and mov add mov adc clc ret inc jge cmp ja je pop outsl call adc sub sarl mov rol jo push lea popa ret sahf popa dec rcl mov les and rclb adc jae xorl (bad) (bad) xor aam dec rclb popa enter xor pushf imul cltd test inc cmp lods (bad) mov inc and or adc push insl jmp hlt push imul (bad) (bad) pop pop mov mov mov (bad) pop daa int dec add fimull ja (bad) lock and dec and push mov jb adc or mov rolb pop jle jne out hlt cmpb push sbb inc fs js rol aaa jno adcl nop sbb mov call dec mov divl push mov or nop inc xor in fdivrp imul pop push jmp mov push xor js pop dec inc cmp test out dec sbb pushf arpl mov adc and fs ret push add gs jmp je call xor add add pop and lock pop and push test inc iret and jne test jne or add mov sha1rnds4 mov sbb sbb (bad) sbb outsl sbb lcall mov xchg test into fstps mov pop fs push mov pop dec pop sub jne out sbb dec jne into inc inc add or les dec mov inc add and mov lods loopne adc hlt pop xchg sub jmp stos mov push aam ljmp (bad) loop add xchg faddp popa pop inc mov mov inc nop xor cmp mov (bad) mov push add dec sbb xchg addr16 mov add mov xchg mov push and pop mov aaa pop push jecxz insb sbb mov (bad) daa or sbb inc xchg sub sbb or sub cmp arpl xchg adc mov sbb cmpsl xor hlt out mov adc dec sbb pop inc cmp fnstenv fimull clc loopne or add dec rcll jno push mov mov fldt adc dec divps add ret rolb sbb or mov cmp add mov (bad) into aad cmpl test out bound in push adc (bad) imul lock cmc cli sahf lea and jecxz pop pop sbb pop ljmp or push jne push repz cmpsb cmp and mov imul inc adc push cmp add push clc loope adc add pop es add jo push or mov clts mov lret pop fwait or or cmp push mov xor les or scas leave mov mov dec mov jp and addr16 mov and and mov adc notl fs (bad) cmpsb pop or and jle fadds popf int in or fstl pop pop arpl xchg mov cmp out jl daa add sti fistpll jle adc push pop cs jnp mov daa in mov out stc rcrb xchg sub pop sbb sbb imul add cmp out mov and sbb mov inc insb sbb mov or into cld ret imulb xor loop icebp pop adc ret inc pop loope fnstcw adc sbb test lea (bad) mov jno in mov jp adc mov cwtl lret idivb mov fisttpll xor inc ret cwtl lcall push add jbe insb test xorl sub iret pop pop test push xor or push sbb push or (bad) mov dec adc sbb add add ret inc insb push dec insb (bad) jg pusha cld test push in sbb adc and pop (bad) fdivr add jbe xchg pop clc add jo in imul jp pop aaa or movsl push inc inc inc xchg adc xor or xor mov clc fs fldcw test mov pop inc mov jo pop call aam push mov pop mov and mov lods add fs xor daa icebp and in pop adc int3 cmc jmp ja daa imul jne and mov inc scas movsb ret inc xchg mov adc clc lea mov andl dec shrl add les inc inc sub jle add (bad) push inc adc adc loopne cli inc dec push stos add ret or adc cmp or and push mov xchg and addb push push mov xor jecxz mov xor inc push push inc adc add add orb pusha aas es or insl pop sub test or inc pusha adc in ja fidivr dec jne mov xor cmp or sub inc or int (bad) nop data16 mov mov jmp jmp push add push addl aas loope leave shr jnp push lods inc loope into push pop push add ja mov cmp adc jo mov fisttpl jo pop mov notl pop lret jle imul (bad) cmp or mov adc sbb mov or lea and pop pop loop aas xor loopne or or or add inc and sahf push fisttpll jl jns jmp xor and pop or and inc add inc adc and bound ja push adc ss inc loop inc insl dec sbb insb lahf pop or or jo xor xchg pop das js xor aas pop adc andl in jmp mov sbb pop mov and xor addr16 rcll sub daa (bad) mov adc xor and loopne test sub pop les sbb push inc mov add sub xchg add cmp sbb jo push out and sbb outsb adc mov loope icebp nop cmp xor clc sub incb xor add (bad) add (bad) adc cltd add add pop add jbe xchg ret xor push pushf (bad) aaa xchg mov clc jns out outsb cli rorb aam (bad) clc divb add sbb sbb (bad) xor fdivs and push pop add aaa mov mov sub aas adc cltd or jge ja add mov xchg pop mov sarb (bad) loopne fadd jg pop jg cmp add xor (bad) pop adc outsl loop add call sbbl jne repz enter push sbb dec mov mov sub loope stos and clc out sub or mov or add sbb clc xor add add mov clc daa pop out adc nop mov add xor push add (bad) fs dec cmp sbb adc shr dec in push dec fcompl pop dec (bad) jo and push and sub push daa mov or jne dec mov xchg adc inc imul enter sbb push scas sbb sbb pop loope gs bound xchg dec cmpsl into test rol xchg clc repnz fisub inc cmpsl flds fwait pop mov icebp jl adc mov js icebp dec push push jmp rol dec addl cmp pop in and mov xchg sbb or pop cmp adc enter jne inc or push clc cmc (bad) or xchg sub pop jp mov mov add and cmp jae push and cs insb pop insl pop sbb or jne pop mov mov rcr and jmp sbb (bad) (bad) mov push hlt or inc sub or push xor push icebp and in (bad) jo test adc sub movsl imul inc inc pop test ljmp movsl sbb enter clc cmp (bad) or mov pop in (bad) test roll mov faddp ljmp sub add addb aam add in xor mov sbb inc inc pop test and dec or adc jo and (bad) sbb push push or pop adcb mov and and (bad) pop cmp push rolb inc jo rcrb jecxz mov push sub sbb push mov mov sub push decb push jmp push mov xorl cld pop add sbb leave insl sarb or xchg dec addb xlat ret push push xchg cld out push clc (bad) xor fidivl ret leave inc mov das lods inc push inc dec insb or or sbb rol aas ss add cmp xor cmp xchg xor test xchg jne in dec mov add shrb adc inc jo shrb dec clc cmpsb jmp in dec mov inc lcall and loopne adc and add loope bound mov or cmp xchg rclb rcrb je aas jl (bad) adc iret adc lock lods or sub jmp mov sub pusha push ret jle cwtl int imul cmp sbb push push or mov add push roll fiaddl pop or das sub jo enter adc add jae push push push (bad) dec xor clc insl inc dec jno and (bad) jns adc push and cmpsb inc pop or xor or dec pop push jne add hlt pop or mov iret and icebp test pop push mov pusha push inc arpl cmpsl xchg cmp je dec mov psubusb icebp push mov mov pop push dec pop ret icebp or cmp jp sbb push or sbb testb mov fs stos test xchg int3 adc cmp or sbb test cmpsl push jmp dec mov stos adc cmp js shlb adc sahf push rolb sub rorb xor hlt jae or int3 cmpsb xor adcl sbb sbb add daa mov dec fcompl dec rcr or clc sub pop push mov sub js inc mov push push cmp ret (bad) adc push mov push cmp lret mov divl or jae mov jecxz enter test inc sbb fidivr call enter dec jae pop cs push pop or js sub (bad) mov repz pop pop in int3 sbb jmp pop sub dec xor sbb or (bad) sarb shlb roll das and movsb mov scas mov and ja lods lods imul sub sbb jle adc (bad) or push popf mov movsl test das adc jle jne adc sub ja sbbl cmp (bad) sbb push adc lret push adc push sbb std jne cmp xorb lret cmp mov push rcll push pop jecxz enter mov xchg (bad) loope sbb push fldt mov inc jle sub xchg lahf xchg fmull test and push dec aaa dec out cld les xchg or ljmp jp add cli stos jle push fwait popa pop icebp sub lahf shll sbb cs adc sbb cltd adc and dec and imul loop daa dec adc cltd popa push pop inc sub insb repnz mov arpl in and mov sbb adc mov in add dec inc jmp mov lret sub mov mov sub pusha and or mov loop mov movsb sarl out lahf push push inc mov imul addb test sti jmp lock call sub adc sahf inc leave jae xor cmp in je add data16 dec jno pop jne mov mov in push push pop dec rol jne pop or (bad) loope,pn shlb adc and add push add daa sub push mov imul inc add daa fwait xor and push clc or push pop adc cwtl dec sub xchg icebp add iret inc pop mov fs inc inc in adc sti pop push shll push and add mov mov push pop lods mov xchg jbe mov push pop repz jb jp cmp dec lods cltd add addl arpl and and or pusha daa add or es sbb xchg push dec jne movsb push and ret pop ss aam not sub cmp mov or test (bad) pop nop adc gs mov (bad) outsl or pop add cmc sbb addr16 adc repz test out in enter push adc inc sbb mov and mov loopne add lret xchg enter (bad) fsubs or pop mov test pop cld je mov xor adc adcl lahf adc aad (bad) sbb sbb cmp leave gs xor dec jl mov sub iret add dec (bad) clc xchg add or mov sbb fistpl fistl cmp stos add add mov jg jle mov pusha adc ret add adc in add in and xor jl lcall loopne test mov jmp in push lahf adc pop test mov test and jmp or push and mov (bad) mov xlat (bad) xchg cwtl pop push pushf mov mov adc js test pop xor out cmp aad and test aas aad push pusha pop jbe sbb cs pushf sub insb xchg and (bad) adc inc or pop and ds cmp test ss adc pop nop (bad) sub cmp insb out cmp add pop mov cltd pop mov add jmp sbb jnp in sub inc pop das fadds nop ret inc lock add insl push adc fstpl adc insl xchg mov lret and push pop stos shlb lcall mov inc push outsl adc cwtl push pop popa add inc loopne push test test sub mov and adc pusha pop lea out (bad) or pop cmp jl or dec push mov xor xor add leave enter xor and dec jg adcb mov mov lods inc add push dec bound lcall adc and add in in das inc cld mov sub nop pop fstps add jne (bad) fdivs cmpl pop mov push jns jnp sub pusha outsb pop aas xor fdivrs (bad) ret rcrb fstl fcomps test fcmovb or push loope and adc lock adc sbb push rolb popf hlt imulb xchg sbb adc into in sbb cmp mov xor sub movsl xor les add or mov adc sbb subl sti pusha xchg push push and subl inc rcll mov xchg lods out and adc clc mov or and sbb pushf inc pop ficompl or fiaddl cmp cmp push arpl and inc add adcl aas and add sbb add les add mov pop dec test cmp inc xor push xor lret inc fwait insb xor xor xchg fstl pop push cltd pusha enter iret adc xchg mov cmpsl movsl bound push mov movsl (bad) loopne loopne inc loopne aam cmpsb adc repz lods mov lods int3 (bad) shrb jns inc dec xchg mov jae add jne cmp jmp adc loopne lds cmpsb pop cld out add xchg sub mov inc add negb inc add or add sub mov xchg daa jg adc mov mov or inc or adc and pop add loopne lods mov inc mov mov pop inc cwtl mov popa fstpl clc mov dec adc inc push mov cmp fcomps adc (bad) pop xor pop (bad) and mov (bad) xchg decb and pop enter pop es je fcomp lea pop (bad) cli nop or xchg fwait mov ret xchg xchg mov cmp je jmp popa sub pop pop sbb cmp jae nop flds je cmp cmp addl adc mov dec inc jb sbb cld xor scas inc push inc sbb mov inc sub push outsb cmpsl jbe fstpt les mov enter lcall mov test sub jo test add xchg or test inc test nop lret mov jns or (bad) pop dec cld nop inc adc iret mov pop mov add rorb push lahf dec dec inc add xor insl insl orl and pop push gs mov xor xchg mov add int3 jne das push loope mov dec and jo inc test mov mov inc in inc out mov inc xchg dec jae imul xor fcomps jno add mov push cmp push add inc xchg dec sub mov (bad) push mov push int nop jae fistpl lods mov mov fcoms test jns adc or pop sbb or sahf sub ljmp xor or hlt cmp jecxz ret fldl dec mov push or xlat ret es das cmp daa or push or das sub jb test xor dec mov and pop lock mov or mov and ret sub das cmp dec inc adc or push nop pop int3 jp xchg std mov mov bound sub push enter add jb adc imul xor adc (bad) rorl mov movsl push imul mov dec xor xchg and mov jl or fwait lock sahf sub popa gs es lds sub or add add rol loopne outsl inc inc fnsave shrl in lahf lods aas xor stc sbb insb or idiv or imul inc push push lds (bad) and lock xor test out rolb xchg clc das iret add mov das aaa dec add das inc outsb hlt dec or (bad) adc inc or mov dec cmpsl fsubrl lret push push sbb sbb (bad) cmp xchg adc pop clc mov nop mov mov push add inc mov popa xchg iret subl sub pop push pusha setae cmpsl push mov insl sub pop sbb dec dec enter mov sbb in mov mov add push insl mov pop or and pusha in fs inc inc imul add cs rclb scas jae xor inc pop ss in sub out imul leave push sarb mov mov inc pop xchg push pop xor in mov push and ja pop insb add incl icebp icebp sbb addr16 xchg fdivl fstpl daa add pop or es dec nop lock push ss mov cli mov inc je mov les add xor lock mov loope lret and pop sub mov movsl ss pop add xor inc test movsb pop sub inc adc xor or sub pop sub xchg pop ss aad sbb pop and and decb (bad) adcb add movsb xchg (bad) jl jo imulb sahf cwtl push or popa push lahf pop sub xor cmp paddq mov insl out add sbb test insl ret mov xchg mov repz push xor iret repz pop jo mov xchg cwtl pushf mov repz mov push sbb int3 and rclb sbbl test add and xor in xorl fildl add xor add fcmovbe mull xor mov aaa mov loopne insb fildll stos mov popa adc pop mov sub inc inc xor arpl lods rolb pop (bad) iret push pop daa dec test imul xlat aad jno sub push sbb mov cs fwait sbb mov (bad) movsb jnp adc addl mov push push xchg and inc loopne adc jbe pop and inc xchg push mov lock inc es fsts xchg fnstcw mov sbb jle clc ds dec mov push mov xchg imul aad es ja dec jmp xor jge pop mov sbb dec ss and dec aad inc add mov shrb pop xor adc sbb xlat xor jl fdivrs (bad) pop nop daa rorl movsb iret ret cmp mov adc cmp mov cmp jle xchg dec push pop sub jle mov call cmp (bad) mov fmuls sarl pop sbb cmp insl add xlat clc inc ret and add push scas mov push add sub (bad) pop cmp pop test ja xchg je xchg arpl or cmp in adc lods push add mov in je xchg push jbe stc push and sbb dec adc mov fistpl lret cmp push lea push inc inc pop add push insl jmp add out test sub leave int3 test dec ljmp xchg xor push push fadd pusha aad sbb daa xchg cmpsb adc les xlat mov and fdivl add aam mov lea mov jno or das sub adc inc mov or mov dec push xchg loopne aaa mov push movsb xchg fwait (bad) neg jo test (bad) xchg imul pusha push push je inc dec dec jae jl cmp fldenv sbb mov adc jae add adc neg push inc dec or add cmp inc add sub xor aam (bad) push sti daa push mov mov loopne push dec scas fmull inc cmp mov cmc rolb cmpb out loope and push jns pop ret cmp daa addb insl pushf push jmp (bad) or sub adc xchg adc jne adc mov xor ret hlt out sbb pop adc inc push inc test sub push pop mov je lds call insb pop out jl popa rol rorl ret push pop push jg jmp pop cmp mov pop pop rclb cmp sub sbb pop fs cs adc lods add nop sub test mov lods xor jecxz push out fiaddl adc aad jmp ror js int xlat mov decl aas cmpsl mov pop jb test jl xor inc push (bad) outsl or inc jne pop in insb jns xor mov mov (bad) testl adc mov jg cmpsl lods push mov mov dec shr popf adc mov mov dec mov jae rorl (bad) push lods mov xchg jne add inc sar ret sbb xchg adc adc pop dec (bad) out movsb or add and orl nop sbb dec sarb pop mov lods jge and jg sbb or add mov pop or push mov or inc or les mov jne shlb pusha mov push or cmp dec and les cmp dec shl enter mov xchg (bad) mov xor packuswb and or push xor add sbb in jb lods xchg (bad) pop rol xlat add xor add push sub mov int xor mov push inc enter add push outsl mov sub mov sub mov fcompl push pop pop add jne sbb ss fs or adc add xchg or insb or ret inc leave std push cmpsl mov push push or subl je push push mov mov add adc xchg xchg pop dec fbstp pop lods pop mov xchg leave mov shlb das test and and ret xor xor adc popa mov xchg shrl pop xor fstp xchg ljmp push jmp out dec dec xchg mov iret adc inc fidivr inc ret xchg movl pusha or mov inc or jns test test jge ja inc inc xor sub xor cmpsl mov dec pushf jmp ja inc sar jmp cmp sub movsl ss in sbb push push cmp int inc adc nop xor test scas loopne or and push jbe jge xor faddl roll inc cmp xchg mov lret cmp testl cs sbb and mov aam or sbb bsf inc and sbb leave dec sub xchg (bad) int3 cwtl in jno test ja loope insb sbb add imul and call inc loop (bad) icebp jne inc mov or (bad) push xchg clc test inc loop xor out nop dec std add daa icebp inc lock adc push mov idivl gs xor push xor xchg ret movsb inc call sbb or xchg xor mov lods mov adc inc js and movsb fs or add fsts ds lret jmp jmp add or cltd movsb sub movsb mov xlat cmp sbbb scas pop add bound jecxz xor (bad) fcmovne mov jae push inc movb (bad) fistpll mov out dec out repnz popf jecxz insl xchg mov cmp cmp ret mov loop gs mov pop lock std cmp aad iret mov iret xor inc cmp xor imul sbb pushf enter sub xchg xlat sahf iret ss adc push inc nop or xchg mov addr16 pop cmpb mov add dec mov sarl daa arpl test (bad) or inc es add popf rol push iret or (bad) aaa push mov (bad) dec and xchg cmpsl pop cmp cwtl ret mov push iret or mov imul nop push faddp inc sbb idiv incl lea hlt cmp xor sub cmp fistl xor lret push hlt dec or add push dec lock cmp push inc mov and push jns or push es hlt in fildl pop hlt call call fist nop lds mov mov ja aaa loope adc mov inc pop lret hlt fwait xor add cwtl enter test (bad) je mov loopne pusha adc and xlat mov sti mov inc cmp inc inc add test adc xchg cmc dec jne lock inc pop popa insl add xor jae pop inc and dec icebp inc push mov xor cmpsl adc loope mov stos cld push loope or fildl mov movsb inc mov pop mov adc cmpsb push cmp sub sahf mov dec xor xor out inc pop mov pop add inc dec mov stos outsl shlb adc mov adc pusha jne inc sbb push inc mov jl xor cmpsb cmp mov push push das dec cwtl clc or inc pop xchg out cmovo push mov jae cltd xchg inc jl or adc cmp inc push inc mov inc dec add (bad) or iret cs inc push add push mov xchg orb xchg add loopne add xor fistl add popa dec std hlt xchg imul dec push and jo lahf shr jp xlat and dec dec aam mov movsl cvttps2pi cmp dec (bad) jns jl dec sbb insb jge pop adc in aaa in mov mov insb add lcall fwait pop call push mov and in xlat fstpt hlt adc popa cltd clc leave in ja or push pop inc mov xor sbb cli adc jne jns pop bound test enter and inc inc mov pop add mov lods push inc mov sbb ret jecxz popf sbb or mov push inc and push cld insb inc push sub mov arpl push adc subl add loop bound cld fnstenv push and cmp ljmp pop sub aad jb nop roll fnsave je mov popa and lret fdivl rol rcr push sub loopne jg cs adc lods and sbb push movsb jns es mov push or mov add and add and (bad) cs rorb dec aas in dec sbb add aas inc dec movsb test fwait xor dec xor or enter iret jge cs nop jg or mov sbb insb adc dec sti or das mov add je insb mov push mov out mov sbb test fistpl lods pop sarl sub hlt fisttpl dec dec clc popa aam xlat jmp leave loop or (bad) cmp mov cmpsl aaa dec cmp jge sbb push push lret (bad) aaa and cmpsl adc scas push adc divl adc adc push outsb lock or faddl cs dec mov lea mov inc ljmp loop insl or inc fistpll sbb (bad) sbb (bad) daa (bad) je inc jb rcr imul mov jno pusha bound xchg fnstcw insb fwait imul sbb rolb mov or inc add and jmp pop pop push out call add xor mov std push pop mov push movsl adc dec cs ljmp mov inc clc dec les mov inc sbb mov push jne loopne push jo dec scas lahf adc cmp fwait cwtl xor pop lock xchg pushf pusha xchg dec fist inc in pushf pop jns lret shlb int3 mov dec (bad) push inc hlt lock mov loopne insb mov inc dec leave mov sub adc jns dec add inc ljmp rorb sub pop aam push ret sub out lock loope in dec jne push add and out es sub fimul xchg mov mov or sub mov xor int pop adc adc sub lock imul xchg popl mov sub dec pop aas test inc mov imul int3 xorl xor imul and xchg xor insb mov dec jne cs dec jge rcrb adc adc (bad) adc int3 cmp xchg test and push fsubs mov pop fcomps push adc or adc jns loop jno jle sar cmp fdiv fsubrl sub adc movsb xchg push (bad) jmp outsl pop adc sbb push imul xchg dec add pop pop (bad) xor pop jg jg (bad) incl ret push jo add or cmpb movb mov inc out mov sbb add jl aad xor add enter and mov pop cmp add xchg movsb test inc sub and dec call lock and lods dec fwait inc imul sbb or sti in cltd xchg or or popa jb insb aas popa mov in or or xor add push pop add cmpsb in bound sbb imul push ficoml scas mov test pushf out mov inc inc loope push add mov sbb outsb cmpsl sub aad insl push fstl fs arpl inc or test sub lock (bad) insb in (bad) les mov int sub add xchg lds out fnop cmpsb add scas (bad) add push pop pop mov mov sbb fdivrs or sbb or test pop pusha lret cmp in and mov in dec ficom aas adc inc mov clc inc mov cli inc imul inc int3 ds push xor pop (bad) out fs jg push add repz data16 insb enter sub fisub pop sbb sti fs mov js repz test movsb scas pmullw or xchg xlat jbe into dec adc lods das nop cld fcmovnbe fcomp out sbb inc add call push adc fldcw fs hlt add adc andb push xor fidivrl xor xchg sarb xor clc xchg mov lcall shrb adc sbb push pop sbb in sbb push movsl test inc and xchg orl test cmp fistpl mov dec sub ret mov inc push imul fnstsw dec cmp lods test jb and or ljmp clc or and sbb sbb sbb scas dec add cwtl sbb inc dec add xchg sub and orb or inc cwtl aam xchg lods inc sahf dec pop push test jl adc mov and pop fidiv cmpsl add cmp or nop stos add or cmp repnz cmp mov push inc aas fs or jnp mov push dec pop jl insl ljmp stos lea pop pop dec and cmp loopne fmuls and pop pushf cmp mov xchg and mov mov popa fs movsb add hlt fs je xchg aaa lea adc fsubr adc mov cld xchg add pop adc test inc add testl lock pop roll cwtl cwtl rclb out fmuls and adc pop cmp rolb jmp int3 push cld pop ficom (bad) repz ja (bad) enter aaa push cmp sarl inc sbb dec or jp sub stc push out jl push adc roll adc ret add or push jo fild pop push test fnop pop loopne inc das shr inc mov out cmp mov imul inc clc pop add loopne or cmp mov aaa adc dec pop bnd add xchg push stos add rol add loop into push jl xor xor add push and lahf pop mov cmp fbstp push jnp into adc or icebp pop inc inc add cmp sub push dec push push mov or or sbb out andps jmp cli cmp jo sub add out ret add push mov push pop in insb idivb or or xchg sbb gs pushf call lds xchg jae add sub sbb xor or mov ds mov mov arpl push sbb int add into push push jbe outsb inc add inc iret lds mov jb stos push and inc sub (bad) inc or addr16 pop and mov inc pusha sub test add add or or roll push and push sbb leave pop mov jo rorl insl ljmp adc shlb imul sbb cwtl pop mov orl or or cmc adc in jo jo in inc and or push dec add outsl iret lret pop and out pushf mov addr16 test and add and (bad) jg shlb xor xor xor inc adc aam inc inc dec dec dec dec dec dec dec dec inc push push push shrb or push push pop pop pop pop cmc and ret ret adc rcl mov fs in sub hlt xor pop cmp sub or push xchg pop jno mov pop xchg jmp shl lret and inc std mov data16 and add jo (bad) in andb dec cmpb fidivrl xchg fs push pop sbb test stos and add mov pop insb dec or xorb dec cs push pop test mov cmc mov xchg js cmpl push data16 push stos add sti mov cmp in inc push in push inc jge shrl dec roll push xchg or or sarb stos pop insl add sbb mov add aam sbb jge xchg push add test jb mov xor out push (bad) add ret xor in jmp inc inc inc dec dec aas sbb pusha sub add cmp test cwtl add nop pop or add and and lahf xorl sbb inc xor inc inc iret cs sbb fucomi pop xchg add sbb or iret push fadd psubsw pop mov clc cvtps2pd cmp test addl sub ljmp sbb xchg (bad) fs lret fldl pop adc adc les sbb cmpsl adc pop test ror in or out pop in sub push das inc jmp popa nop pop xchg xor lock ljmp adc movsb xlat xorb std or sti jmp inc (bad) sti push add ljmp (bad) pop lahf mov pop mov pop sbb push jo sbb and lock hlt xor mov push inc nop jecxz adc nop movsl gs mov fistpll jne mov inc pushl sbb xor insl (bad) jmp add pop incl test popa mov sub sub adc or lock std fcmovnbe mov jnp xor insl clc push pop jp mov pusha pop jne ljmp test jle xor sub es mov add sub mov outsl sub lock ja jo aas mov out pop xor jmp imul ss xor xorl pop leave pop pop (bad) jne nop pushl aaa in xlat adc ds pop jp orb fidiv and adc mov push gs movsl and daa ret test and ja jo (bad) test lcall mov inc fs add add add ret das sbb into inc cmp pop loopne mov mov xchg (bad) mov mov add (bad) enter sarb movsb inc shrl sbbb neg scas hlt sbb or insb pop insl sbbb cmp fild sbb and dec dec inc inc pop lods mov test pusha inc xchg add dec cs sub outsl js (bad) adc xchg add outsl inc xlat aas xchg xchg inc xchg mov pop cli mov insl push mov fimull iret or push mov aas cmp adc sbb roll aas xchg movsl add or xchg dec xchg ret adc int inc fwait dec sti mov cmp add lock lret cmp push push movl mov js cwtl or ja mov test add insb popa jecxz mov push sub fistp jo xchg mov jle jae dec adc lock push mov js mov adc and js movsb sbb push mov pop mov (bad) push loop dec outsb xlat or sarb and add jle movsb sahf jl sbbl mov xor addl lcall dec pop pusha adc jae mov lret addb sbb popa cmp or sub mov xchg add dec shrb pop push cwtl or (bad) cli loop mov movl aas add int push aam cmpb and mov add dec xchg jo sbb mull xor add mulb (bad) pop pushf jge push cmp pop xchg pop leave mov or rcrl je movsb dec push imull iret dec cmp fidivr xor pop cmp inc push lcall fcmovnu cmp subl or (bad) push insb ret pop pop call sub adc test dec mov sti cmp lcall adc sti (bad) outsb pop mov into adc lods rcll loopne pop inc push adcl or out push add sub sbb mov in test add sbb sti cmc xor call pop adc or js push xchg ds cltd je jbe xor iret add js sbb cmp int mov mov add les add outsb lock jl call sahf add cltd push fimull and inc les pop inc jle pop pop pop sbb inc mov or leave stos or cld fnstcw ret sbb mov lock outsb inc fild inc (bad) or fidiv adc (bad) push je mov dec arpl call mov in jne pop shll xchg insb out push (bad) negb (bad) or cwtl push jo clc or or (bad) (bad) dec push inc and mov sub or lret dec adcl stos jge mov or and shll adc mov loopne lds xor imul icebp mov iret mov incl sub jecxz and cmp jae mov mov inc loop jmp jbe sbb mov cmp pop aaa outsb xor add fs outsb add push cmp std popf pusha push or test pop jg push fimull push ds mov add xor mov arpl mov or and aaa in inc (bad) scas cmp add jecxz sub adc call movsb loope mov pop add into jecxz faddl stos push and add pusha daa andl mov mov dec add in call sub push movsb mov push ret orl and mov arpl ds not hlt scas and cmpb ret mov js insb mov call or inc cmp sbb xchg and or mov sbb lea es add push xor adc clc and inc add lods push sub mov add cmp out or imul iret mov add dec stc or xchg nop popa dec and dec mov psllw xchg jae dec roll push mov xchg pusha test xor dec das jge push add fisttp loopne stc imulb cli adc fsubs gs sbb cmp push push sbb mov imul sbb stc jns pop loopne stos inc cmpl mov iret dec cmp pop lret fwait adc dec lret pop (bad) sbb iret dec pop das jl or loopne lock je mov js xor and das std dec inc pop dec mov repz mov (bad) cmp mov (bad) pop inc cltd pop inc xchg jle sbb into dec jl shlb dec sub cmp jo andl loopne add test popa cwtl sub dec mov ds pop jbe adc add sub js pop lock inc xor or jge sub xor enter push pusha pop pusha inc js sbb movsl jno int3 push repz bound sub dec xchg cwtl cmp add sbb jns imul mov xor adc jmp inc inc pop aaa and dec fiadd mov or cmpl mov cwtl loope sbb jge pop push sti cmp lret dec icebp es notb imul sub add mov jnp rolb mov mov jge clc movsb sbb mov pop cwtl push and or mov inc (bad) lock or pop pushf jno sub sub repnz inc push sub pop lock addb roll xorb jl movsl or mov cltd inc pop mov test daa and lea sbb test sahf fmuls push lock dec mov bound sub push das sbb mov ret fisubl dec insb les pusha push (bad) hlt pop into hlt sub inc add fcoml movsb or push sbb add pop push int loope xor adc sbb idivl mov cmp shll add or xchg nop/reserved ds pop xchg sub fildll push dec xor mov ret outsl pop or sub dec or dec clc loopne mov stc adc or rep ja outsb enter aaa fistp test mov jmp outsl and pop push sbb add jne jl cmp dec ja and pop test stc mov loopne ret call (bad) cli mov inc mov or lahf add pushf lcall jo dec pushf or dec loopne push cmpsb mov adc adc rolb add xchg pushf or adcb aaa sub push js and mov test in push ret ret sub repz and or add test pop pop pusha xchg loope mov push xor add or sbb call or (bad) push xor add xchg adc leave inc and sbb pop daa call push clc pop pop xor and movsl bswap inc je inc stos inc clc xor add mov lods clc sub push push enter dec and xor pop and and dec lock clc in repnz add scas (bad) pushf adc lea and les jbe dec clc arpl rorb mov pop lret mov nop or movsb repnz call test pop add movsb and lods or test sahf jae and cmp or pop push add loopne xchg adc pop cmp jno add mov or pushw and inc dec dec pop push cwtl andl adc xorl lret add adc or negb data16 roll jmp cmp or or enter add sub cmp inc shll inc nop pop addl pop adc xor roll subb lea and jae pop repz je fist inc or (bad) cmp pop pusha inc push sbbl and adc xchg pmaddwd (bad) cmp and push fs jp repz adc pop jl or bound xchg pop loop push sub jmp mov or pop popf cmp les sbb pusha dec and xor nop sbb dec adc shlb ljmp jns clc push negb movl fwait adc fwait les xlat mov mov hlt sarb sbb imul loope mov rcll cld (bad) incl mov and xchg inc (bad) cmpsb push repnz dec hlt add mov add adc dec movb mov sbb jnp xor push or stc lahf adc lods es and cmp or pop xor xchg stc loopne ret mov lret insl les xor sub in ja dec sbb aaa mov int fadds loop mov xor add inc inc dec mov data16 add nop mov jp sbb into adc pop add add scas adc pusha mov es fbld jnp xchg mov xor jp orl pusha cmp decb mov in dec cmc (bad) fistpl adc fisubr nop inc ret dec (bad) xchg dec js outsl cmp imul inc mov or jnp fs jb adc cli pop pop jp aas decl cwtl inc add dec (bad) hlt push pop cmp mov or loopew daa loopne jne sbb test mov inc push and dec pusha in pop push inc lock ret cmpb stos dec push rep and cmp test mov inc rcll dec adc push sbb test cmp es jno enter out aas je pop xchg sbb adc pop inc sub ds test daa xor mov daa or mov xchg (bad) lahf pop test dec shl xchg mov dec aam pusha mov test fidivr adc inc inc add clc push loopne je outsb (bad) clc mov ret xchg lea add aaa ret or insl inc jnp cmp pusha sub fildl mov mov movsl sbb cmpsb dec rclb std popl je push outsl pop in je lahf mov dec cwtl cmp pop lcall gs or cs pushf (bad) or sbb fsubs fimul pop lods xchg daa aaa adc mov xchg je je push or sbb out jge lock cs push inc fs xor aas jbe and pop shlb pusha mov (bad) rcrl inc outsl push stos fdivl (bad) fcomps ljmp pop mov dec fnstcw lea xchg add xor dec out push cmp push mov mov insl xorb mov mov cltd or out jmp out cmp sahf outsb dec push daa cmp test sbb and in adc xchg jne xor adc pop xchg lret sub enter xor sarl jmp sub mov xchg sub and rolb add mov (bad) sbb outsl add cmp ss adc dec fnstenv dec rclb je push cld imul sbb pop inc jmp push shr gs push lock xor hlt xor push (bad) cmpsl or and adc cmp rorb sub bound jp out cwtl ljmp test xchg dec jno ljmp popf push test push mov xchg dec mov inc jp and inc inc leave xchg xchg inc inc fsubs inc push add xor mov ljmp scas psubusw in xor mov ljmp add loopne out cmpl loop ret iret inc xchg ror xchg aaa gs sbb jmp sub cmp fdivrs fdivl lret mov xlat fs lret push cmp cmp jp cmp jnp dec loop adc mov mov mov pop mov test push outsb loopne les (bad) sbb mov push imul push mov lods roll (bad) push pop pop mov rcl mov inc pop testl adc aas insb jae push fstps inc xchg jne and (bad) or pusha push push data16 pop lock cs sub mov mov push dec adc mov pop and clc inc xlat mov jge dec ud1 xchg dec mov xchg mov and cmp mov cs mov inc inc or mov sbb mov push andb or pop push inc dec inc sub in arpl mov xor inc inc sarb jmp adc or adc push fdivrl in push push inc dec stc pop xor in inc jl jl sbbl add mov sbb add push push mov loopne leave in sub mov fiadd mov push outsl push dec or xchg movsl test ds xor add add dec adc mov adc and mov inc pusha xor (bad) push test pusha sbb or sar call cmp mov popa shrb rcrb sub adc daa xchg mov repz mov mov push mov jae pop fidivl clc dec jne out add xchg insl jne add mov add dec cmp inc pop sub sub sbb addb fnsave or lock or mov jns push das mov dec sbb aaa pushl dec inc add adc push add and sub lret (bad) xor inc ja cmpsl sub into mov mov dec sbb mov xor pop int3 add call les xchg pop sub fwait inc das pop stc sbb js icebp loope sbb rorb or cmpsl jno mov dec mov in fmuls sub mov nop inc mov adc in loopne jb or leave and into fadds enter in movsl ds and jle sub and sbb mov xchg loop adc mov xor shll dec xor gs push aam je push jnp dec cmc sbb mov bound xor (bad) mov adcl mov enter lea fs out adc jl inc cmp push movups push dec lds inc push cmpsb mov (bad) mov mov xchg push lahf mov pop scas and xor and js mov rorl mov jns je aaa xchg sbb xor pusha rorl add push mov fwait dec loopne aas xor mov xchg or adc xor shrl add cmp (bad) ljmp popa pop and cld cwtl pop xlat (bad) dec pop mov xor fsub ret rcll pop lcall dec sub jp pop iret add dec mov inc inc sbbb lret or ret clc mov xor push jne or xchg lea (bad) loope pop test leave cmp (bad) test inc es mov not push mov jecxz bound out pop repnz and cmp xchg xor outsl int3 test push imul adc into mov ljmp push cmp cmp mov push rclb popf ss add sbb int3 dec mov or aam cld adc mov pop mov (bad) xchg ja sti jl inc test jnp sub ftst adc inc rorb pop adc fisubl ret inc sbb cmpl mov (bad) mov test daa push xchg add pop jne push loope movsb aad mov jl jle aaa dec sti and xchg and mov movsl popa daa sub dec jl cmp inc cmp orl push test push adc cs popa or cld add data16 jp push cmp inc add cld and inc mov push movl adc popa sub sbb data16 dec mov xor add cmp mov add fcomps cli or sub adc (bad) sti outsl sub into xor pop inc inc jae in xchg imull lret cmp imul jns mov dec into or daa pop cmp (bad) (bad) jmp push mov mov cmp ret push lahf pop fsqrt xchg and adc or es ret inc add xchg movsb sub mov daa sbb imul xchg hlt xchg or mov mov jne dec or js ljmp bound int3 mov pop scas push lock mov (bad) inc sbb rcrb add cs data16 gs push loopne add cmp out sbb xchg and aad xchg push jg and jmp int3 jecxz cmp call mov add xchg mov inc daa pop pop push or mov cltd rolb xchg mov aam sub fist in addr16 jecxz rolb arpl fist adc xchg orb xchg test inc into aas xor das iret cs out cmp add push xor xchg lea test gs push loopne mov sbb pusha inc andl rclb and add cmp push xor and scas or dec dec mov dec cmp sbb popa mov jno in and add mov push sub lock and push add push mov repz movb cmp pop sub mov in mov lods pop add mov lret add sbb or jmp (bad) mov je test fs cmp outsl xor daa add (bad) mov add int3 cmp jp adc jns loope jne xchg xchg mov dec leave lret push outsb sbb inc rcll mov mov and xorb mov sbb mov or mov loop push cli data16 cli movsl fldenv add cmc add pop movsl mov inc sub push mov mov and inc or je addb sbb pop in xchg inc cwtl push xor imul inc fiaddl cld add or jecxz push dec inc aaa push imul loop adc ret out jle imul nop pop and (bad) push adc push push loope pop rorl inc rclb push movsb lds mov cmp push rclb add xor push sub mov rclb and (bad) and (bad) jmp pusha mov je jo mov xor xchg xchg into push enter add cmp mov mov rorl cmp sbbl pop ds insl jne lea hlt adc cltd sbb clc xor jmp cs outsl test loope rorb cli imul jp popa lahf inc pop inc push lahf and jge movb inc push sbb rclb or clc dec cmpl clc jb pop fldl push mov or test flds sahf (bad) sbb imul and (bad) push inc iret cmp std lea add je dec shrb xor add sub repz adc or xchg pop dec pushf mov xor adc pop inc mov lods enter aaa inc add adc js (bad) loope inc lahf pop negl pop sub mov mov inc or xchg (bad) mov add bound add inc (bad) jle dec in inc jmp inc push ss inc sub xchg push push ret sahf or add dec mov cmp add dec fs inc adc mov lret in cmpsl push cmp cmp aas pop nop iret jb in dec inc dec inc lock fwait or jno push cmp push sbb inc sub xchg mov je ret sbb jo add push xchg adc jmp xor inc cwtl and mov test push push aam dec aam add sub add pop add cs jmp out inc testb push fsubr sub add and xchg mov or xor in test push out xor add cmpsb test or pop pop pop jp loop sub xor jo sub push pop fwait jge cmp xor pusha inc out cmpsb call xsha1 cmpsb mov faddp xchg aam or and ja pop mov (bad) mov aas push push mov je sbb fs jp cli sub inc push faddl mov movsb sarb (bad) (bad) cmc jnp hlt jmp sbb out push ja or nop jns sub out push mov (bad) jl adc xor jne ljmpw or xor adc add jns jno fisttpl sub or and xchg mov or or out sahf adc test push lock in aaa in xor cwtl sbb (bad) sti and je shl add (bad) push ss ret xor pushf lods mov mov adc sbb xor and into and sub dec or or lahf cmp dec jmp jb or (bad) fs insb sub loopne mov movb xor je cmpsl inc inc adc and aaa sbb dec sbb or push xor das push sbb or mov push mov mov bound rolb cltd xor hlt push xor ret aas cmp xchg cmc add aam adc cltd push pop call xchg imul mov cmpsl and stos sub in jo (bad) jne adc inc cmp add mov sbb loopne adc or or fnstsw test inc adc loopne adc dec xor or ja sub xchg addr16 nop (bad) jno aaa push pop insb shlb sahf sbb enter das add inc add sbb mov rcrb push inc dec jp xchg cmp ret clc call lods or daa and cmp xor sub sbb and pop add sub xchg es dec lds (bad) xorl imul int3 pop jmp aam inc push dec fsubl test add ss ljmp rcrb push xchg dec inc inc lahf insb adc movb clc fs sti leave hlt push (bad) (bad) outsl and pop dec add mov cmp addl cli mov testb add (bad) mov adc enter inc or mov inc xor arpl inc or mov xor pop push jle inc push mov push fbld push sub mov sub (bad) sub or inc dec add lock adc push and mov mov jg sub (bad) xor or ret (bad) mov inc fsubr es xor test icebp (bad) add jle in mov adc idivl data16 jg fmull fucomi mov dec je pop mov imul add add sbb inc (bad) pop shlb aaa adc in je fsubrs sub adc mov fcmovne inc sbb fcom dec test jb dec sub dec cmp dec pop orl inc fmuls push andb inc push xchg jns inc in loope dec leave inc scas inc jne loope fdivs or pop (bad) push dec mov inc or aam aad pop pinsrw add xorb and cli sbb pop push lds jecxz or sbb adc pop and add das jbe xor cmp ror xor xor dec mov cmpsl popf sub sub inc pop xor push add inc lcall push scas test (bad) test and add es lcall orb mov test testb push je pop sub sbb add ret aaa mov mov xchg inc sub xor add (bad) push sar pop lock sub jl add add xchg jns es ss nop sub xchg or mov aaa fisub push push pop jb inc pop inc add ret and pop and fs pop std xor lcall mov cmp inc xor adc mov test jp gs int3 pop mov push xchg pusha lcall cli push sub mov pop imul js dec jl fldenv daa roll stos jo test pop sbb push and adc mov popf and movsb cmp sbb fsub pop aas dec and fs sbb andl arpl loopne adc (bad) sub or add rorb out sbb push xor nop leave mov mov and je add and adc aaa pop cld xor xor push fs sbb lahf mov in mov faddl xchg pop push stos or add cld or es icebp and dec aam jbe fs xor scas enter push adc mov jne notb fbstp jo lods jmp sbb pop inc inc xchg and test pop dec dec lock jle fs mov das das adc mov fsubs es jl inc sbb test out js ret mov pop adc cmpsb inc mov sub ret sbb outsb adc xlat movsl in cmc push (bad) lret push xchg (bad) std insl adc mov outsl insb push push in test cmpsl stc sahf out mov xor sarl xor mov xchg jnp sub and lock out sbb mov push dec adc idivl or dec or ret mov out push mov inc sahf xlat cmp inc lods cmp shlb and mov jge or outsl inc scas mov sbb jae mov or out and dec xor subw test int aas xchg and aas and icebp inc movsb sub add loopne push mov add and dec outsb arpl mov cmp cmpsb lock or jp or or inc or insb ss adc js test adc adc insl add dec js xor mov add pop add push mov adc cmp sbb mov scas mov cmp insb sub jl mov cmp call jns mov std sub or sub daa frstor or pop mov rolb gs data16 pop push sbbl push push enter mov cmp shll push add sub ss inc lahf cs jg push inc push dec jae and push fcompl pop push insl outsl fs (bad) xor or in and es cmp and inc push push popa pop repnz sbb pop mov arpl dec add or icebp call cs push outsb adc xchg test dec clc xor ja or dec inc jb jbe imul or pop sbb sub pop in adc adc sbb inc insl add (bad) inc pop in inc and pushf addl fiaddl push es push push push push xchg pusha lcall add dec jo push movsb xchg add cmp in sbb pop mov test test adc call adc arpl or xchg popa push and jb ds ret pushf inc xchg lods sbb inc dec inc jp sahf outsb push xchg dec or in fs or dec into dec or imulb or xchg or cmp (bad) std mov imul imul adc es fildl nop inc or push outsl mov int inc and dec enter (bad) add mov inc ss iret je jno mov push and js jb and iret int3 mov mov push adc nop (bad) cwtl push or cmp ret pop or xchg sub push les iret or jnp aaa dec ret test or push push pop les (bad) lea jb sbb adc xor leave push adc adc pop xor and and inc push bound roll sbb inc lds sbb push sub sbb sbb negl and dec xchg mov in adc and nop andl mov and and inc push loopne and in pop adc add sub cmp cmpsb xlat sub mov rorl lods push xor jb sub cs mov sub pushf adc in lods xchg pop and leave push jb ss jb or cmp aam xor cmp add add cmp push push cmp xor repnz inc inc and pop enter push dec lods dec aas cwtl and hlt fs sbbb inc jg and outsl imul add sub dec mov es in sub dec jne cmpxchg dec dec mov stos inc jecxz jmp rorb roll pop loopne adc shrb add jmp data16 dec inc or test cmp or add notl dec cmp sbb dec sbb pop ds ja inc push mov imul push add outsb adc push adc mov sbbb mov cwtl iret or lock pop xchg or fsubrs add pop adc adc fdivs adc sbb (bad) enter out cld pop adc sbb dec jge adc or mov cmp and pop xchg mov insb mov mov xor or adc mov jb or mov or adc or push into cmpsl mov push into dec add adc push adc xorl inc lds sbb adc mov (bad) sahf fcoml addr16 int3 xchg push mov or and lock push or adc pop mov or mov sub rcr mov xchg in dec adc jo xchg or imul outsb dec je and lcall inc xchg addr16 push push and and sbb ja xchg inc neg outsl add pop gs adc pop or lock orl lcall push xchg pop je push sbbl (bad) cmp dec push mov inc iret jo xor nop inc insb mov xchg loopne cmpb nop xor je inc pop jns dec mov cltd inc mov clc addb mov int3 xchg inc xchg pop dec nop aas rclb mov sbbb shll lods push (bad) movsb insl hlt mov mov iret sub inc mov mov fnstenv push iret adc push push (bad) int3 addr16 ds mov push xor mov cmpsl out mul cmp js push lods or mov aaa and push add add add add ljmp add add add add adc push outsb inc mov mov mov add or push push mov mov sbb push ret mov test sbb mov mov ljmp shl outsl inc ja inc stos bound jp jl out cld push xchg movsb mov jnp iret ror cld adc dec hlt movsbl cmp mov sarb push rcrl ret ret cwtl rol fidivl testl mov out dec push inc test out dec es lret push test fldcw pop fsubl dec int3 mov xchg ds sti fiadd mov insb xchg push mov (bad) into (bad) mov fdivrl add pushf data16 push dec cltd shlb xchg mov jb jle and xchg dec lds fldt pop js pop inc push push jb pop fs xlat outsl pop sbb adc pop lret push add stos and aam add fs movsl inc mov leave inc cmpsl (bad) testl mov pop add adc sub pop push dec loope pusha adc xor mov cs pop inc adc pop inc adc sbb in jl js pop mov lcall repz mov mov movsl add or mov fcom insb inc xchg testb cmp cmp cwtl xchg inc xchg or adc pop bnd mov sbb dec or sbb mov mov inc fcomps jno xchg push adc inc repnz add dec push pop mov and pop repnz in arpl gs mov mov aaa cmp mov push and push and or dec mov mov add xor ljmp mov sub int3 test orl mov adc popa sub or xlat into cmp bound push add pusha jno add and or mov inc pop dec sub repz fwait sub cmpb xlat jbe xor int3 dec (bad) int3 cmpsb dec mov scas out in xor mov shrb dec jecxz xchg push repnz mov mov ret mov nop or xor (bad) mov xchg mov rorl lock jae data16 pop aaa sub repz xor or enter roll xor jecxz dec shlb bound test adc dec xor mov pop int push fs ss add aaa jae cmp or (bad) inc jne data16 or jo sub or pusha mov roll repz rorb (bad) sub xchg nop movd stos dec cmp rorb xor test push push adc adc mov pop xchg inc dec add xor inc dec ds aaa xchg adc nop fcoms aas mov test pop inc cwtl cwtl inc pusha (bad) sbb shrl sbb mov test fs mov pop inc inc sbb rorl jmp loope pop clc jns mov shlb sub imul dec loope pop add scas dec dec cwtl xchg in scas dec loope inc inc cs or jbe loope jb mov and adc js inc add dec push mov push popa pusha or lods dec push push mov inc lods inc push xor dec push lods addl cmp pop push jb push mov jno pop fbld pop pop inc pop test inc fistp xchg ret pop in adc enter or mov inc pop inc mov insl pop mov pop pop sbb inc mov fadds jo add sub inc inc or es mov push lock out fisubl fisttpl dec dec jnp mov ss insl sarb sub or out pop sub jb mov rorb or or nop cld mov sbb push fisub mov test movsb adc push mov xchg add push faddl test jno cmp or mov pop sbb and pinsrw insl push mov sub bound enter sub pop mov mov scas push inc add and xor add xchg or das mov cwtl inc pop push andps add cmp add mov or addr16 and fnop mov unpckhps insb in adc pop add cmp cwtl sbb mov cmpsl inc pop push je dec xchg (bad) jb inc mov enter mov mov daa mov mov or pop sub xor jne imul push cmp mov es sbb lea pop daa push clc jge in int3 dec adc dec pop or mov in xchg rclb lods mov jae hlt mov dec aaa jns clc dec jb sbb outsb arpl jno fadd out stos shll rolb cmp iret dec cmp mov int3 dec sbb call or fsubrp push lcall inc xor inc mov sbb ja dec mov arpl and ss push test outsb andl in sbb (bad) mov push adc pop lock or je mov inc sub dec dec sbb sub sbb and daa daa incb loopne fsubrs sbb add (bad) push inc aad mov ret mov add add pop jae sti int dec xchg jg mov xchg mov sub subl sbb mov movsl push lods je mov jae int3 cmp xchg push jne hlt sbb loopne sbb imul je scas mov push test add or jae add add pop push (bad) repnz adc pop js das sbb and cmpsl pop mov mov jae xchg cltd mov add ja testb cs sbb adc lcall adc mov inc lahf test (bad) cld push sbb push roll pop push aam nop nop dec dec gs pop adc inc das jno rclb xor test dec leave lock jns push or and dec jne inc fsts and pop adc mov add and sbb mov or mov fildl inc or cmp and or add or out test mov ds push inc add sarb mov out aas or popa sub ss push adc dec sub insl loopne xor adc mov addr16 es dec push mov adc mov xchg mov xor aas cmpsb xor xchg or cmpsb es xor je mov inc popa pop or push cmp mov adc jle pop or push inc add cltd mov popa lds or subl je movsl mov dec jb out (bad) lret add add test inc dec dec popa hlt dec imul sub mov xor cmp jno push lret js inc outsl cmc or xchg sbb fwait jl push cmpb lret push push cmp pop jp sub jmp sub outsb push add sub das or insb fldcw pop pop bound xor out dec xchg adc sbb add pop test ficomp ret mov fcomps outsl (bad) xor sbb cli and and jecxz add pusha adc enter dec mov jno test in insb pop inc mov and sub neg jmp arpl je xchg enter adc mov repz inc pusha push push test xor iret adc sbb mov jbe int3 imul scas add mov aas push cmpsb imulb inc mov fist dec xchg cmp pushf rclb adc jmp xchg ds and inc xchg movswl dec or jns shr mov mov cmp fcompl shl js push cmpsb sub adc jae or orl ret std or jmp fs ret pop inc xor lea (bad) mov icebp jmp cltd push mov inc inc or dec cmp sarl dec or lret add popa mov lods pop movsl or mov (bad) push inc gs xchg (bad) sti and frstor sub pop fucomp dec (bad) xor push jmp cs and mov fldcw jmp adc gs fsubl push dec mov fcomps ss jmp mov mov jp sub pop ja adc repz out popf mov nop and dec fs daa adc in xchg std aaa add mov and lods cwtl loopne movsb inc xor clc bound jle push ss xor inc push out fs (bad) mov sahf push push and sbb sbb push sbb sbb push movsl adc loopne ret fdivrs push and pop inc push push push jne cltd inc add sbb cld rclb daa add push sub je push add dec sub or mov push push dec inc sbb sub sub test adc fdivrp enter add aam rolb jle dec js cmp jmp push add add cmpsb lea bound je pop inc or das jbe cld andb std push add enter cmp pop mov push xor lods rorb inc rcrl pusha pop sti lea pop or cmp cmpsb and inc jb add xor (bad) mov mov int push inc dec mov das mov lret leave jge call xor fcmovb cmpl pop and cmp add (bad) les mov mov or sar xorl sbb cmp jns ljmp jnp cwtl insb push cmpl sub xor push sbb adc cmp xor inc push in sbb dec sub add test and fmull andl test jae lock pop (bad) and push mov push mov dec aad add sbb sbb mov loope pop out push adc xchg divb push and mov push and mulb aas or notb mov ret (bad) js adc and and lea out xchg int3 dec mov jo inc mov mov sarb cwtl xchg es or xchg movsb or adc adc aaa push dec adc popa fldl sub out adc movsb adc mov dec das push sub dec push inc xchg stos ds push sub andb sub pop push addr16 xchg fnsave mov lds sbb sub daa jae shrl (bad) mov inc adc or test xchg xchg pusha mov pop cmpsl sbb add xchg mov or add add sub sub pcmpgtd pop loope inc mov in add jle lock add int3 ss mov adc pop mov and push mov rolb and je mov sub inc lock adc or fidivr add mov cmp pop je mov sbb inc fisttpl sub stos outsl add sbb stc xchg dec or or or add inc sbb test dec mov imul inc arpl movb adc jp bndldx mov divb addb jmp dec nop and fisubrl or xchg dec icebp mov xor push push daa scas mov dec adc inc or (bad) mov es jb test loopne lahf sbbb cld push xor xor dec notl add sarl push sti gs lock sbb cmp movsb cwtl sbb les sub inc addr16 inc pop or push push lea push add push mov daa mov mov icebp xor jg add outsl or lds sahf mov out sbb pop mov fistpl jle mov fs add or hlt fdivrl sbb in xor jae mov inc mov lahf jns call xchg adc pop sarl ss adc and imul stos inc fcompl add loopne push adc inc popa fld in or push pop and ret adc repnz add fmuls cmp iret incl jae adc mov add xchg daa sbb je cmpsb ret ret or dec lods insb sub or fldcw mov mov adc add pop mov dec add xorb dec add ret inc or in push push cmc ds mov aaa dec ret inc jmp pop xor insb ret (bad) cmp dec pushl cmp push adc inc inc mov mov enter inc sbb fsubs mov and js xchg lds adc or es xchg (bad) shrd pusha pop popf mov movsb enter or add xor movsb adc xchg xor sbb xlat andl or inc add mov dec es push cmpsb jo das stos mov sub dec add and or cltd pusha mov push xchg and loope xchg mov popa inc push test push and adc mov dec popf adc jmp mov inc xchg js dec xchg xchg (bad) mov xor movsl ret or xchg (bad) add adc xor lret lahf adc or stos arpl test orb pop jne sub insb pop mov imul dec gs (bad) mov dec dec mov sub jg pop cld jmp mov andb (bad) push xchg int3 dec jmp inc loop push faddl or inc dec dec or xchg in inc push mov aas push repz fcmovnb fs testb and mov movsl mov daa or sbb mov pop ret inc mov and or mov fsubrs pop or push daa adcl into dec das xor js jb stos pop adc imul add add sub sub movsl jns sbb add add dec sbbl jecxz xor mov and (bad) jl or add mov rcrl fcomps int xchg andb xchg iret push mov in inc lods add pop or dec mov jl xchg push out or hlt sarb dec loopne and push mov cmp fmuls push movsb das sbb or ss movsl mov ret rolb cmp cmp mov imul pop and sub sub rclb adc arpl (bad) xchg rolb adc inc imul and ret popa sbb xchg or lcall push shrl dec inc push mov inc and push cs or or fcoms cmp arpl test mov cmc out test pop add add test aam cmpsb dec and xor ds or in aam out push lret mov cmpl aaa sub cmp mov or jle jne (bad) mov lret stc add scas sarl mov or in or lahf lcall pop mov inc jl mov push xlat xchg int sbb cwtl lods les sub dec add push aam xchg jo (bad) js xor and xchg and fwait dec ljmp mov jo mov cld pop add daa push pop adc enter fwait sub call jmp xchg inc mov test dec call dec loopne jl int mov dec adc out mov aaa add and push adc insl not sbb or inc test stos fsts lret ljmp jo fistp sub mov lret cwtl rcrl or push mov push rclb inc cmp or lahf mov leave (bad) in inc ret shrl xchg push icebp add call into orb mov mov in js es insl and add movsb inc femms dec xorb scas xor nop adc rcll mov dec add add add loope xor inc in rorb addr16 cwtl pushf xor sub xchg cmp sbb jg jmp sub xor mov (bad) cmp and test rcr call rcll dec pop dec mov and push imul cli (bad) or and adc mov xchg test cmpsl andb pop sbb dec mov push imul xchg cmpb adc xorl aad xchg bound adc sbb dec sbb jo add adcl outsb xchg add nop add jmp jbe aas mov cmp dec aas aas int3 xchg frstor imul clc inc dec push cmpl push jnp cmp imul movsb mov dec or push push mov pop push adc and pop repnz inc pop lods cmp mov sub cmpsb mov xor inc js pop icebp icebp jl xor xchg aad add mov ret nop (bad) (bad) adc pop sub popf scas sub hlt add ret loopne or adc movsb or push hlt jmp repz add jo and js aaa add add imul jbe fwait add cmp (bad) mov fisttpll pop int3 inc dec mov adc aam push add mov shl push ja popf cmpsb push mov psubusb jge mov mov or testb pop insb add xchg sub mov jne popf or cmpsl testb sub adc adc pop xchg pop push es or cmp or cmp pop push cmpsb leave xchg sub fcmovnu xor or int3 test adc sbb dec and xchg cmp mov lods nop das lret adc ljmp pop jg clc lcall pop mov arpl das subl lcall js lsl inc jg or ret enter jb or pop push jp dec or test (bad) (bad) cmp sbb jg cmpb mov lret add pop jne outsb lcall lock add inc xchg mov mov xor pop daa xchg cmp in or push orb inc xor imul xchg push push and pop jnp xor out add inc or and jnp xchg mov pop sahf sub or (bad) shrb push and adc aam jne sbb sbb inc sub or imul test popa add inc dec push dec dec jmp fs fisub pop cmp or cmpsl jnp sub pushf pop add hlt je sbb movsl pushf in clc cmp cmp pushw mov out insb aaa hlt rcll inc in in out lcall jo test cmp add adc loope sbb or add dec push das arpl stos lock nop iret add rcrl jmp loope andl xor and lret lea adc xor pop xchg popf adc rorl pop mov push pop inc push inc lock or adc add jno data16 and xchg or daa adc fcoml imul ss aaa jmp add mov addl cmpsb (bad) je push jp and pop or add fwait mov dec sbb push push repnz enter data16 rclb cmovs fwait mulb sub sub movsb sar mov mov imul (bad) in sbb nop enter roll dec dec ljmp or popf sbbl push ret dec movsb add push js inc xchg add add mov mov cmp push adc or mov xor (bad) ret add sbb pop cmpsb xor push rol pop cmpsl add mov or lock pop mov movsb std outsl lcall nop test dec test add movsb neg in ljmp jns (bad) mov add (bad) pusha add (bad) in (bad) cmp push arpl fs jle sub and fmul push adc enter add and lods js or in frstor pop clc daa mov jns das add les sub mov iret sub pop pop enter lret sub mov add das in aaa mov cmpl ljmp mov orb bound jne clc inc ficoml sbb or pop inc and adc adc nop mov nop scas xor mov sub lods add ret cli mov mov popf pop loop sbb inc jo inc loope or lock inc ss jnp pop ror out int3 adc xchg lods mov adc fdiv or xor outsl pop mov sub add xchg and push push mov add push sub mov faddl in cmpsl ljmp cmpl sbb imul xor aaa cmp movsl test jno test movsl sbb out movl fstpt xchg mov cmp enter and sti jno les mov adc mov inc shrb push or and aam popf sbb jae and test shll out add mov or fcompl enter xor daa mov orb adc lret add cmp fldt stc adc xchg adc mov cmpsl ljmp adc adc mov or and por add sarb jno imul gs pop inc push xor orb lods push (bad) leave arpl scas rorb fs je mov rcr cmpb jne enter mov add inc add sbb jl cltd pusha es jne mov and sahf test cmpb adc sahf lds dec sbb and test jmp sub xchg inc xchg inc stos ds icebp ficompl sbb mov mov jne loopne movsb in or inc mov cmp jle jne (bad) xchg dec cmp pop dec pop imul add popa addb jno lea mov icebp pusha sub je test pop add add les push mov (bad) cld cmpsl adc lds ljmp daa pushf out adc popa adc xor je enter mov rolb cmpsl xchg lcall or mov xchg push pop add or pop pop mov dec lods pop add pop inc jno ret pop adc cmp xorb pusha jmp int xchg mov iret sub imul sbb (bad) cs (bad) mov lahf popf data16 add gs test add lock jl lcall push sub fiaddl and adc (bad) sahf pop loope mov push and add mov adc pop popf cmp pusha cmpsl cltd add mov sbb inc jo cmp adc dec adc jb adc or sarl scas mov mov sbb dec fs push or je inc fldt sub stos mov mov xor pop test push or inc push decl imull mov clc add cmc pop and pop fisttpl movb sbb inc mov lret cmp xchg xor xor test rolb sub adc adc mov ds movsb inc ja add outsb mov push push cmp push cltd add cwtl xor gs mov scas xchg test mov mov adc jae nop xchg (bad) cmp cmp int imul sbbb and addr16 cwtl push mov sub js mov mov push fisttp lret mov push mov bound in add push cmp not sub es sbbl negb jg data16 add das sub push inc ret push push dec dec pop nop add and sbb (bad) xor sub in popf ss push dec jmp pop imul or sbb sub xchg and cmovae xor scas adc push test sbb cli add jbe adc imul pop cwtl and add xchg (bad) adc xor sub std fdivl cmpl shlb mov dec xor adc dec add enter cmp push push imul mov popa cmp sbb icebp mov pusha imul and (bad) add and (bad) (bad) scas inc add jns cmpl push cmpsl pop adc fldt pop psrld sbb rclb (bad) mulb add inc lcall jmp pop rclb icebp ss mov xor add dec xchg inc test sub mov mov fadd pop test aaa sub add add neg fstpl xchg lods push inc pusha sbb fs or rcrb jo in rolb push add cmp cmp data16 andb and adc adc dec ficomp fimull jno lcall sbb jge aas jmp or push js movsl sub test daa jo lahf jb sub or push pop add das jl push pop addb cmp ret sub fnstsw incl xchg mov push cmp sbb repz es or popa cmpsl sub mov cltd lods cmp mov inc sub adc sbb lock leave add mov jmp test xchg (bad) mov push xor pusha jmp sbb mov and std adc inc dec push ret mov and es sbb lods test or xchg add jne lea pop inc adc clc push test hlt fdivl js add or push cmpsb imul pop inc rorb add and data16 xchg ss and sti pop pusha dec pop (bad) cmp orb mov mov mov incl idiv dec sub fcomi out sbb sbbl test or cld scas xchg shrb pop add adc (bad) push mov hlt out mov or aaa pop inc cmpl jne pop jbe or nop cs sbb add or ljmp inc negl in pop cli stos jl cmp sbb add cmp add aad and es or cld jne xor add push test js mov mov sbb mov aas adc cmpsb mov and dec xorl pop xor ja sbb push movsb or xchg xor stos movsb jae out mov fdiv sahf cs rorb xlat dec xchg pop ret inc out (bad) add les sbb jge cltd fidivr inc jo jns fild test adc les dec mov xor sub sbb xchg add dec outsb pop add dec ljmp and cmc sub sbb mov sar push or fs shrb pop stos push andb into pop adc mov (bad) mov aaa arpl jns loope mov cmp pop sbb dec add mov sub insb cmp iret jmp and fs jmp dec adc jl adc mov lds jmp test sarl test rorb sub xor sbb dec or popf adc mov mov push pop sar sub xchg sahf pop xor dec jg mov mov adc adc mov sbb add xor inc scas hlt nop and aad inc ficompl jne inc inc push cmp lock sub je (bad) (bad) mov xchg or (bad) (bad) mull cmpl dec xor sbb stos mov loopne rcll xchg and add ret inc adc sbb sbb push and ficom jno rcrl lods xor push adc jo cmp push adcl icebp mov (bad) sahf dec or dec inc cmpl in je cmp je ja (bad) sbb mov mul xor push jmp rorb (bad) push pusha test hlt xchg dec push pusha adc cmp inc cmp jl addr16 jo xchg mov mov pop inc lock sti sub push push sub cs mov push xchg push mov in les pop movsb cmpsl dec mov cwtl pop es mov mov pusha (bad) xor pop popa rorb in mov sub into mov in stos cmp shr adc xor ret je ficoml adc add cmpsb inc or popa mov or inc add jle push mov ss iret inc dec mov fdivp mov push js pop xchg xchg inc adc ss push mov xchg bound clc mov jmp idivl into arpl cmp inc adc popa xchg xchg cmp pop clc pop gs mov lods rclb cmovns outsl sub addr16 xor push push jecxz sti cmp aam jbe inc pop adc inc popa mov addr16 adc push das adc test mov pop dec sbb imul pop daa push pusha add lock loop sar (bad) aam icebp shl jne in fbld popa pusha aad int3 test gs in (bad) xlat out pop cmpb xor sub imul add cwtl enter xor lods loopne fwait jmp dec add jbe mov aaa add inc sbb aad mov sub lret mov pop enter movsb cmpsb mov push outsl add sbb stos fwait add mov in loop add ja push fisubrl loope push dec loopne dec stos rolb and (bad) flds add maxps and sbb add in xchg sub aaa (bad) cmp test fadd inc add ret inc mov dec je and mov mov xlat into xchg in roll push mov in jae push sub mov pop mov clc adc inc ds mov add rcrb sub xchg sub aas mov inc add inc sbb shll and inc daa fwait clc sub adc pop xchg sbb dec ret inc lahf push sub add rcrb add out mov adc clc addr16 inc cs push loopne push cli push mov lods aaa push dec push push test mov add cwtl stc inc mov fwait clc inc clc test mov push or push mov push or add jp mov mov dec or add adc daa inc aam movsl and fsubrl mov push ret fisubl mov or adc push cs add jno cmpw icebp popw add popa mov add push or scas dec jmp dec les pop into movb mov xor jo sub adc jmp mov xor cmp push mov shlb jno popa pusha adc cmp arpl inc or inc aaa sub cmp and pop adc insl cmp or push dec (bad) and add mov mov leave call rcrl xlat ffreep add out mov mov pop mov movsl test xor cmpsb xchg push xor push pop pop aas lods push add arpl xorl jo sub mov (bad) cltd mov push jne outsb pop mov xchg xchg push inc pop xor repz in ret mov aam (bad) and lret mov int3 stc (bad) jl or xor rol adc mov idivl mov sbb seto ret adc jecxz inc add pop jmp and xor loopne mov fcmovu jbe sub and ret xchg xchg loopne dec in pushf xchg pop or in adc clc mov pshufw sub sub test adc mov lock add xchg movsb add mov inc mov and push mov add lea adc aas lods pop mov sbb adc mov or mov sub or inc sbb push and sbb sbb inc xchg adc cmpsb mov add sub fwait cli jge (bad) cwtl push loop int3 jge sub mov scas fadd loopne int incb or pop popa subb mov push sarl or push int3 sbb and iret ds sub inc dec cmp mov pop aas loopne lock hlt and dec dec clc inc xchg or lods xlat sbb mov mov iret mov adc (bad) mov jl sub add movsb cli xor mov xor addr16 (bad) sarb sbb popf shll ret sub shr movsb push es or je and xchg imul adc insb loope mov (bad) xor push (bad) jo mov push dec xchg insb jo repz mov std dec dec pop push or lret roll pop inc xchg mov leave xchg rolb pushf (bad) push sbb cmp xchg xor out xchg adc lock push add pop jne insl pop dec sub (bad) ss cld sub sar xchg roll aaa data16 (bad) hlt dec enter fwait xor imul arpl lds std cmpsb cmc or ret push or push in test icebp orb lods xchg xchg das pop fadds cli addl or jo jmp orl jne sbb lahf andb aaa add rcrl add pop inc pop roll or add adc lds adc adc mov into lret ss sbb add add jmp stos sub mov insl pusha inc and enter add mov pop lods add icebp inc inc pusha push and xlat or mov mov jb pop aaa cmp scas jge push pusha rep in or test or pop and adc lahf loope pop push roll movsb and pop xor sbb and shrb and push bound pop stc cmpsb cmp lret sti fcmovb or sub pop xor cld jmp or test sbb push sub lds addl outsl lods inc lds rclb pop fsubs inc push jecxz incb mov cmp push inc aaa or inc cmp movsb push dec jne subl aad dec pusha sub push xchg adc adc dec mov rcr aad or fs and movsb aam mov pop loope and add mov cmp sbb repz jmp fild es add movsb or inc jmp pop out lds rcr inc in add dec push jo adc mov or dec lods lcall pop push push les out call inc arpl or pop fildl (bad) por cmp or lds insl xor and jg mov mov (bad) sbb addr16 jbe add push outsb jg mov lret jmp dec mov or mov pop outsb add loopnew adcl sbb cmc cmp mov aaa bound loopne cmp fs mov aad jne aad mov sbb or jecxz gs rorl mov in push (bad) rcrb and dec js xor cltd adcl mov callw or xor rcrl add std pop rorb sbb aas add sub mov push popl lock icebp je cmp inc aam cmpb push push into or sbb (bad) mov leave ja cli flds sub adc fdivs and daa dec mov pop jge prefetch add pop ret sahf mov xor sbb into mov pop jl loopne aad and or jo (bad) pop add add or sbb js mov adc jb lcall into jle xchg mov jecxz lods push or lock and and adc fistpll loopne cltd sbb pop or insb sar frstor popw push fisttp pop dec test mov inc mov dec test mov add push (bad) sub cmp call leave fistpll pushf pop add (bad) xor out sbb add jne fdiv and nop andb scas in adc or and cmpsb inc call shr mov out nop sbb mov je,pn push (bad) mov push shll test cmp dec jmp cltd and lock xor and ret inc xor add ret mov cmp dec dec jp cmp xorb cmp rcrb in test push lret sbb mov push sub test ret in leave mov xchg push mov mov popf or ret mov add or adc jmp xchg (bad) inc dec jmp inc scas mov push push sbb mov in aam push xchg fisub movsl and sbb movsl hlt xor loope sbb lds jno or or xchg ffree mov loopne sub and inc arpl lret add mov dec fnstsw testl mov ret loopne insb test call test in call and sub out movsl xlat test push loopne push adc loopne dec imul in ret es mov nop in mov dec cmp leave call add sbb je lcall push push mov adc (bad) addr16 test lret mov adc adc xchg test mov xor rorb aaa add dec ja and imul fdivr mov addr16 add mov fisttp jmp push jns push xor jne mov sbb sbb fild push dec xor mov xor enter shr sti cmp rorb adc mov pusha das xor xchg rcl cmp jp es (bad) ss pop out and inc aad cs fsubrl sub pop pusha adc xchg lock inc fisttpll sub pusha out fsubr add xchg js pop and pop data16 jno aaa cmp adc aaa scas cmp add je arpl push outsb pop fnstcw faddp adc inc pop mov cld add xchg xor aas sbb lods aam insb add sub or ss sbb aaa (bad) and jnp cmp dec aaa in (bad) mov xor fwait mov pop (bad) fldt sbb pusha cmp push sub cmp jb adc jmp sbb cld cld xchg es cld dec push cld inc scas fs cld cld xchg shl cld cvtps2pi pop add movl sbb fdiv inc dec loopne es inc sub dec rclb add loopne dec jmp xchg add stos lods rclb aas das mov cs addr16 es dec or lahf scas push (bad) and xor and sti mov lds jle pop leave and les xchg js dec scas movl movsl bswap popa sbb loopne rorb leave popa jmp xor push adc and push pop jl ret add push add es es add xchg inc xor out xchg xor mov aam mov or pop jb int push mov xor fwait incl adc test daa daa mov (bad) dec xor pop adcl mov fs hlt add mov or sbb pop aas ds fcmovnb (bad) pop jb mov dec dec dec hlt andb pop and xchg pop fidivrl or push push dec cmpsb sbb ss rolb pop push aaa sub adc push sbb pop adc add mov pop iret insl xor movsl or xchg ret mov cs mov sbb dec ss jne lds and rcll sbb imul push negl pop xchg iret cmp out pusha mov inc mov out jl or jle mov cmp add push mov jmp inc push pushl out mov sub push xchg sarb xor xor (bad) or jmp adc ret addb and andl fs sub nop lret push fsubl xchg cmp pop cmpsl add pop sbb push add data16 out repnz mov xchg loop adcb js sbb adc inc pop mov jmp and cmp push pop popa stc inc mov call push sbb xlat out test mov mov inc std jbe sbb cmp repz std mov mov test mov aad verr xchg (bad) nop push imul add js jo insb (bad) (bad) jge xchg push mov imul jmp mov sbb xor andl xchg cmp cmp push out jno (bad) sub roll addl ds negb mov xchg hlt movb xchg or pop add into mov sbbl ffree xchg (bad) xor push mov mov add pop adc or xchg push pop adc outsb insb sbb aam and ljmp aam dec out aas mov movsb mov jne adcl sub cmp arpl movsb xlat fcmovu push pop lahf cmpsl push addr16 js push xor lods add icebp sbb dec pop outsb or addb repnz or add es and adc daa movsb add dec xor jae cmpsb aaa (bad) adc call xchg scas and insb inc stos cli and int push call fucomi jne orb lahf inc push popa (bad) or pop ds fldcw sub das adc test rorl and addr16 insb or das push mov hlt sub mov mov cs jno dec or jo xor push ret and pop enter das sbb dec lret or cld push ja pusha sbb call sub push sar movl rcrb xor mov and mov int stc out dec inc mov sbb pop movsl xor mov adc or loope,pn mov jmp movsb mov xor ret push mov cli (bad) mov testb inc add xor js out xchg testb sbb out sub cmp das pushf and rcrb mov cmp and lret lret xchg inc mov test mov jbe (bad) sub adc xor loop push mov push aas dec jae das sub test mov or sub es cmc sub and add sahf or push test fisubr pop xchg pop inc aam outsb movsl add mov rcrb and movsl xor push lock cmp iret outsl xchg xchg pop sbb xor aad xor pop sub push mov dec mov sub loopne (bad) inc push or jne sub adc sahf or cmp je and push sbb iret adc pop cwtl dec out push fs into repz xchg lahf mov rorl sub lcall or xor lock sub mov add jmp sbb mov pop and clc add (bad) hlt dec es mov ss inc mov pop mov xor lea jne xor adc inc cmp sbb mov iret adc inc fucom in mov cmp pusha add pop xchg inc and push cmpsl dec mov ret pop hlt je push sub clc sbb fildl push xchg sbb cmp movsb mov and jne sub xchg (bad) sbb sub outsb nop (bad) or insl into add mov rorb cmp xor out test sbb push fdivrs xchg add lock roll leave push xchg push (bad) aaa lock lock xor sub mov cld sbb mov add xlat mov add jecxz or cmc in mov adc xlat in dec sbb aaa xlat jo jge inc sbb inc inc ss ljmp ja rorl xchg pusha imull jo jl mov addb in mov sbb das add shrb and add inc push jecxz inc push dec popf or jns and mov pop jmp mov lock xchg push jmp cmp jmp shrb xor imul sbb xchg out adc dec xlat mov adc (bad) mov pop loop push cwtl nop sbb xor xchg hlt mov pushf push mov (bad) fisttpll add and cltd test cs push xor mov inc cwtl mov add jns in and aas sarl xor adc push adc mov mov jne out call adc push (bad) shll push or sahf xchg sub insl js je inc inc mov je mov mov pop pop sbb loopne aaa jmp xchg sarb arpl ret lods adc and test push leave or (bad) sbb inc xor es dec jmp adc hlt xchg imul mov ret fcompl sbbb push push cmc and rcrl pop aaa repz mov test xchg rcrb or inc mov (bad) cmc out pop xor movb and sbb test jne or cmp sbb js mov xchg aaa daa ja je or xchg out or add mov jmp stos pop lcall rcrb add or adc lret hlt arpl jne notb daa or inc cmp call jb gs cmp mov sub in push inc sti sbb (bad) roll and stc mov pop test sti loopne addl das inc pop enter pushf sahf adc or or and (bad) (bad) dec dec dec inc loop dec enter popa and (bad) imul cmc loop cltd jl xchg push out sbb pop sbb or lods leave jo (bad) inc sbb sbb test cmp jl das out lret pop (bad) mov adcl test testl movsb push xor cmp mov mov mov test push fmuls dec fimull xchg fsubs push lock shll aam (bad) rcll rcll push data16 mov je sbb mov rcrb cmpsl mov sbb or push adc inc int3 sub sub inc aam test add sti sbbl dec pop mov lret push jo adc or inc add jecxz mov and fsts push sub in mov inc cmp repnz in adc movsb mov mov sub bound inc xchg je addb aam pushf test popf rolb add dec dec mov dec inc push fs sbb push push sbb sbb sbb insb inc js je fildl adc xor or daa jl pop cwtl mov loopne dec je adc mov movlhps sub mov jmp cli adc or and sub test pop imul mov inc lahf and mov sub add pop cmp pusha je cs and xor dec push mov mov pop lret adc push mov jbe les loope mov (bad) or incl pop or mov mov sbb loop leave gs ss push mov ljmp enter loop ret cld ucomiss xchg sub jle mov jne test loopne jmp ret test and add xor and (bad) or pop inc and nop mov mov pmullw push and pop jbe add daa mov mov xchg inc mov and add gs cmp xor or inc adc (bad) sub and nop and lahf dec and das inc xor pop jnp pop push mov dec scas xchg rorb and cmp mov push pop adc subl cmp jbe clc mov addr16 cmp fwait xor dec sbb mov andl and jmp test in xor adc xchg jg sbb jg mov movsb (bad) ret sub pusha not pop and cs pop mov out and imull dec (bad) sbb call movsl adc jle xor aaa stos sub inc daa fwait adc dec sarl push imul lea sbb bound fxch sti pop jb js add mov add je and dec subl jl add push addr16 in push lret mov or and pop jmp into pushf jne test sbb in fmuls sbb mov in pop xor rorl xor das xor or insb insb and pop jg movl cmp cld js jbe rcrb ret mov addr16 xor add ds popf mov bound jecxz xchg add inc cltd and cltd xor and add jo or mov les inc push lods cmp das mov out or pop test add mov add js ret inc xor adcb lsl add xchg add push inc push fidivr add push pusha ficomp dec loope mov lods aaa cli add dec stos imul fadd sbb xor imul sbb clc imul jge rcll push add mov ss jg mov dec mov sbb fldl push pop rcr insb loope xor jecxz lock out fldl (bad) dec cmp es ret and test inc pop cmp aad jo lret mov fcmovb pop repnz sbb lock ret daa pop inc sub add adc pop xor jae leave enter aaa xchg sub jmp xor pop pop add sti or or add adc xchg xchg (bad) push add neg fs push pop into push testl and sub leave inc xchg in je xor fucomp fildll mov xchg lods movsl in fcomps jmp out and sub sbb mov add pop push enter loope mov add and xor push sub imul stos aas rorl mov dec add and pop mov inc adc test je cmc insl xor xchg dec adc inc inc movsb test or mov push dec xchg fsubrs cld cwtl push pop push jae je or test mov lods adc idiv and sub mov cmp pop andl cltd push pop or loopne fmull mov jecxz iret adc jecxz sti cltd cld cmp inc cmpsl mov or out movsl pusha inc std inc sub js push sbb lcall push xchg push ficompl mov aam pop and push add xorl dec or sbb inc (bad) mov mov sbb adc mov adc cmp pop add add subl push mov cmpb adc push orb and xchg fild sub lock xchg mov mov test pop sbb test mov mov jmp push lret inc jnp lret cmp jne pusha jmp into add cmpsl add (bad) push push push hlt mov add cmp adc pop pop rorb dec inc int outsb mov pop pop popf xchg (bad) push cmp jne mov arpl ljmp lea mov ds and (bad) dec roll loop inc mov test mov arpl test pusha push sbb push rorb in adc mov ret and ja loopne xor fstpl cmp aad inc daa cmp out in (bad) dec loop sbb adc push mov mov outsb pop movsl orl lock test cli inc xor pinsrw push movsb add mov sub (bad) jle sub ret sub pop dec mov rolb ja in push push mov mov stos cmp mov or popf test mov sbb (bad) jne cmp push imul dec push add fwait push inc jmp mov mov mov or sub in adc add and aam sub dec jae ret push adc call jle xchg ret cmp pop mov or sti mov gs sub aas cld mov test add and mov xchg test cmpl pusha test in fcoms jl in mov mov cmpb js jno xchg mov loopne pop aam add roll les sti dec add outsb mov xchg pop pop and pop rclb push mov jbe rcr inc daa gs jne jmp xchg mov ficom cmp or scas fsubrs fldl lahf add in mov pop sbb rorb loopne rorb mov (bad) and add adc inc jecxz pusha out and or adc call xorb or xor sub rcrl add jle inc ljmp ljmp sbb xor lock add (bad) in cmp js call inc in xor add pop loopne cwtl or mov jno and mov fidivl sub in inc lret hlt in and incb and je mov mov inc or mov sbb js fistp jo mov mov pop fcomps js sub stc out lcall inc pop movsb xchg xor pop mov or (bad) jl clc adc cmc and imull ljmp and mov stos mov jo and in sahf pop xchg xchg test cmp dec mov inc sub add mov sbb push call xchg adc gs and push (bad) inc add xchg inc ret dec dec pusha adc push jbe xor inc add pop adc jae movb in add mov (bad) dec es sbb inc dec xchg xor mov cmp mov pusha cmp cmp dec push jns cmpsl fldl mov jl mov push pop push inc adc mov mov ret scas pushf or sahf fld xor sbb lcall insb js aas mov mov (bad) or jb or or xor lcall adc sub lea nop xchg and call or imul jmp push movl cmc and push arpl sub ret pusha test std lock sbb mov imul mov popa outsb ficom cmp inc cltd adc sub or push push cmp jne insl cmp ret jg dec sub inc dec adc (bad) lods andb cmpsl inc arpl xchg fwait or cmp int3 movsl mov or dec xor add pop jb mov es fild imul or jo xchg add aas or adc repnz and mov int3 sub mov mov mov add add imull add es rorl lret das in inc cmp push cmp movsl jecxz pop sub (bad) adc or xbegin out mov ficom (bad) push jbe pop inc inc test test jnp ret xchg mov inc add mov dec sub inc call movsl sub push mov cld orl cmp cmp andps add lahf mov push aad sub pop pop pop sbb add insb rcrl and mov push push stos scas push xor mov xchg cwtl pop mov or sbb cmpsb inc sub fcoml and iret aaa shrb (bad) mov and jecxz jo mov lahf mov cmpsl daa rorl and push xor fcoms push adc data16 sub dec mov repnz loopne push sbb dec cmp xor inc adc test mov ret bound sub fucomip or cmp jne xchg repz pop add jns (bad) and cli jg inc pop iret add ror test or mov xchg loopne adc jle inc repz lods mov dec and clc ret push push add fiaddl jmp inc dec mov xchg std movsb movsb xchg xchg outsl pop xor lock lds and fildl jno xorl xor cmpsl xor cmp push mov xchg pop pop or scas xlat cmc sub aam in nop cmp pop sub pop inc push mov les adcb mov mov xchg add mov mov enter dec push push (bad) ljmp adc or add mov or pop clc inc jne (bad) xor lret ficom movsb js jne stos inc call push pop or outsl add and fnstenv sar cmp jge,pn hlt loopne fisttp (bad) fst les test outsb pop js add loopne mov mov add mov jns idivl sub lea dec or sub xlat and cmc call pmulhuw push sbb fstpl ret mov ret ja pop mov jbe pop push imull or sbb das sub lods jo loop pop xchg mov or aas jne jbe adc sub rcrb jmp addl add or sub (bad) lret sub add mov dec ret sbb aam add push je inc push movsb ljmp jmp out addr16 mov jg push and fldenv jmp cmp adc add or jl pop push add clc sbb mov fcmovnbe arpl repnz jb add adc adc push mov and mov mov inc mov sbb lods aas aam push (bad) mov push ja mov pop fildl push mov andb sub xchg add push pop sub sbb adc mov fucomip das jo,pn in sub lods dec fwait dec (bad) mov xchg test and lret in or push loop lea into insb cld insb loopne dec test lock push jl int3 lea jnp xor cmp js,pt adc or rcrb push aam mov arpl mov fadd inc and xor (bad) jecxz jge mov sbb mov and adc xor push jo xor push adc push jmp mov pop xchg mov int3 jno aad je adc ja sub sub cwtl sub popa roll and and sub push push push xor inc test and loope pop dec dec sub mov adc fmuls and sub scas fimull out nop mov push adc xchg dec shrb push jo in rclb pusha (bad) imul gs les fistl pop xor fiaddl mov jmp and sbb sbb rcll dec add push (bad) rorl dec jecxz scas movsl cmp pop subb movsl or stos adc inc jge push xchg adc or push pop imul imulb test and push dec rcl incb outsb inc cmp je test aaa lds imul cs xchg sbb mov and pinsrw or repnz fnstenv insl mov xchg xchg xor insb dec add popa test add nop lret push or inc push sbb and mov mov push jae jb jo outsb arpl loopne add jbe jne mov adc dec and leave xor ret inc add add stos mov test mov jecxz dec popf or cmp push aaa push push adc mov mov lcall popa es sbb push imul add mov test mov push and fildl addl jb fs pusha push add xchg add inc mull in pop mov jle andl pop or ret nop sbb push repnz mov xor or mov sbb insb (bad) jbe jns (bad) xchg (bad) mov xlat out fdivl pop push or or mov mov mov sub mov add adc mov fs fsub dec mov mov cmpsl or (bad) mov jo or adc mov mov insb (bad) and cltd into jo outsl xorb dec pop mov shlb sub sbb ds or mov in inc mov sbb popa inc nop adc shrb inc add lock lock rcrl iret and dec ds sbb pushf dec push int (bad) jb jb iret rclb rorl and push (bad) xchg popa adc xor test loop test fimull or pop shrb nop mov imul leave lock lock adc sub xchg adc addl lds pusha jo sub mov sbb imul fsubs mov cltd (bad) xlat and or push arpl pop leave insl rcr xchg mov dec outsl jae cwtl and and fistp nop nop sub xchg push fidiv add out adc inc mov push push dec inc js imul mov dec and cli or test mov (bad) mov mov iret mov inc xchg and mov and and adc sbb jo rcll pop push mov repnz mov dec (bad) xchg xor leave mov in cltd (bad) outsb jo cmp lea in (bad) out cmp cmp jmp cmp in in out out cmp cmp rcl rcl cmp cmp aam (bad) xlat cmp cmp fcomp fcmovu cmp cmp (bad) (bad) cmp cmp rol ret cmp cmp (bad) (bad) cmp cmp enter cmp cmp int3 int iret cmp cmp mov mov cmp cmp mov mov cmp cmp mov cmp cmp cmp mov cmp cmp cmp test stos stos cmp cmp lods lods scas scas cmp cmp nop xchg xchg xchg cmp cmp xchg xchg xchg xchg jns cmp cwtl cltd iret lds inc jb es fsubrs das and pop pop daa and sbb mov ret rcl jg push push xor jne dec daa mov jne aam or fwait push push add pop call or pop lret adc fstpt and jl jae hlt xor sub dec hlt jno xor (bad) cmp into mov sbb aas mov push jg movsl adc pop pusha or addr16 mov test inc adc sar loopne in pmaxub inc cs add in cs pop or in or or in or in cs movups in adc adc in adc in cs pop sbb in sbb sbb in sbb in cs pop and in and and in and in cs daa sub in sub sub in sub in cs das xor in xor xor in xor in cs aaa cmp in cmp cmp in cmp in cs aas inc cs cs inc inc inc cs inc inc in cs inc dec cs cs dec dec inc cs dec dec in cs dec push cs cs push push inc cs push push in cs push pop cs cs pop pop inc cs pop pop in cs pop pusha cs cs bound cs fs cs addr16 imul insb insl jl cs outsl push push inc inc insl lahf insl push jne sub arpl rclb out or das mov xchg push fsubrs inc mov imul inc push xchg jb rcr push push sub outsl xchg push je inc (bad) mov pop push ss mov xor fstpl pushf lea sbb pop or mov maxps jbe pcmpgtd mov andl fnstcw jo dec subps out adc (bad) jae jne cmpsb aas pop mov dec or jns pop xor mov imul flds nop cmp ss out add push jo and gs daa dec inc sub jae mov inc dec jae enter add add adc jnp daa dec push add jecxz cmpsl sub or jae arpl mov lock xchg inc jns das add adc scas das or repz das iret lods ss aaa mov mov cmp mov test pop and inc es and xchg mov movsb pop aam and inc jne gs inc daa push inc jp mov sbb in fiadd das popf jae daa sub mov mov mov xor cmp or hlt ss push dec sub cmp outsl lods dec or aam lods popw dec sub cmp test cmp dec aaa inc gs mov pop ret cmp jne outsl mov push outsl pop imul sub ss pop push scas or adc sbb (bad) (bad) mov adc jge jbe in and adc andb dec dec clc mov rorb das push xchg xchg or js and push inc push push int3 inc dec cmp mov inc das push rorb test sahf mov cmc sub das aaa xor dec mov div inc fs hlt aaa push fwait cmp dec lock jp pushf sbb inc push push inc push popa fldenv iret in push ss sbb imul aad and mov cmp xor jg (bad) mov out cld sbb or test inc movsb pusha (bad) and (bad) push lds dec add push popa test dec or xor sub leave inc jge sub adcl mov dec jbe cltd xor and clc dec sbb lret pusha cmpsl movsb ret cmpl add and adc mov sbb into pusha pop jns xchg (bad) xorb scas loopne add and inc loopne inc shl xchg pusha notl mov pop mov push mov lret addw cmp ret xorb sub xchg pop fisubl or mov or das in pushf in out inc push test sbb jmp and test jge fbstp leave inc into mov sub add jne cmp test mov dec push fistpll xchg inc test pop lahf pop sbb aam dec and out add push inc fadds iret fdivrl push inc mov xchg xchg aas adcb mov mov inc imul cmc or add xor neg cmp sub aaa leave out adc cmp mov mov cmp movsb sub dec push xor sbbl mov (bad) pop pop jp gs ret leave adc xchg fidivl (bad) mov das pop nop lock leave insb bound shrb jl add cmp push adc xchg fstl jmp out (bad) out lea sub adc xchg outsl cmp and insl xchg and je mov inc jbe ljmp and outsl into loope imul enter mov aad cmp xchg mov aas mov xor xchg add mov mov inc add daa mov jge outsl cmp leave and push xor insl leave mov iret xor (bad) rorl dec dec inc inc dec dec dec push aam mov les xor aaa xor jbe add dec pop cld add loopne adc push inc inc (bad) cld xchg sbb ja,pt cmp cmp fsubrs bound ficomp out dec lar adc cmp repz push inc push data16 cmp xrelease stc cmp fucomp call aas and inc push gs jns out cwtl cmpsb mov sarb js out in cli or push xchg add sub and pop in nop pop inc pushf mov adc bound xchg jb xchg in mov jb inc insb test or mov inc sbb mov mov push leave lds mov in mov leave lds cmp lret and cmp jns or jmp sbb cmpl mov mov and inc mov iret and and or xor (bad) fsubl sbb mov push dec repnz add push xchg aas hlt inc cmc adc sub bound imul addl test jle mov ds inc inc xlat dec dec mov rol scas push push jae imul movsb jnp mov mov cmp mov xchg add sbb push add insl clc jecxz cbtw cmp or in mov icebp jp lcall xchg xchg mov test push std or sbb mov adc dec leave cmovb ror out test cmp or inc lods pushf cs pop mov cmp in imul inc push adc movsb dec add cmp das bound inc pop inc sti mov into imulb into insb dec dec out dec jnp dec sti outsb inc inc push sarb dec cwtl push imul hlt dec dec dec sub fidivr andb push push jle push mov test idivl jbe pop push les aam jbe loopne mov push or adcb or mov nop jb pop dec aas insb adc scas cs movl popa scas or shrb jb fadd imul mov lret mov nop in cmp add xchg inc (bad) xor (bad) mov aaa lods add push xor (bad) pop mov inc mov mov ja fidivl jl xor inc add clc clc inc dec lcall xor mov pusha fldt push inc xchg bound ret pop dec bound jg or lods (bad) xchg lock inc add call xchg dec cmp cmpsl shl int lret jl pop nop nop sbb cmp lods adc cmp adcl inc aas (bad) in dec add mov sahf cld xchg imul lahf mov sarb or mov outsl push push iret mov sbb add lcall dec jae je mov in hlt mov dec mov inc lret push pop push xchg jbe jb into adc dec test inc aam or jb (bad) aam cmpsl push pop aam or add inc mov inc les aas addr16 xchg (bad) and add or sub xor repnz xchg xchg ret mov sbbb adc xorl out pop inc bound pop loopne cmpsb hlt push in sub pushf loopne mov xlat iret xor inc arpl (bad) out mov push enter adc clc xor xchg scas or adc xor mov add insl xor lods sahf xor icebp outsl push mov xorl stos pop test pusha in pop inc jle fadds hlt push pop cmp enter ja jb mov rorb ljmp movsb leave imul xchg adcb push mov add rcrl insl call in and sbb lock and getsec mov xchg imul fisubl (bad) push sbb xorl cmpsb adcl gs js rol popf movb call xor sbb adc xchg ret xor orb inc mov dec lahf pop mov fstpl test add inc sbb pop adc xchg movsl push and pop movsb or pop push js xchg dec and sbb cmc jne aad flds sbb adc mov stos fldenv lahf mov insb mov pop insb shl push mov out xchg adc (bad) jbe adc push mov imul in jne int and adc nop mov push dec addb in aaa pop sbb push cmc mov lock adc cs lods shlb test or and inc adc push push aam ss stc sbb push push repnz push (bad) inc xor jge push shrl push jg xor popa xchg mov test in imul push add or leave xor adc nop inc sub mov movsb add push and pop pop xor jg xchg sbb push dec iret aaa inc or inc lea mov das cmc ret aas dec lret sbb dec adc push fsub xor jl mov cmp cli fistl or jmp xlat or adc hlt dec sbb xchg out clc inc inc dec cmp jmp es mov mov mov push imul inc xchg out mov dec or xor shlb cmp pop mov jns daa push xchg mov fstl nop sub movsb cmp hlt inc add lock xchg push dec add in adc loope add xchg cmpsb pop push call test sbb push sub in xor sbb test mov shrl jle (bad) call or out movsb in cmpsl jne mov enter dec aas push push jb nop inc mov adc push mov mov xor lcall inc jl cld cmpl dec cld dec xor mov xchg fwait stos pusha fsubl inc jbe add add fs and fiadd pushf pop nop or jecxz sbbl or inc jo jmp leave cmp xchg sbbl scas pop pushf adc loopne inc dec jne shlb test (bad) in repz sub nop fmuls and aad outsb sub lahf out iret inc jbe push mov scas iret movsb adc or enter push add gs insl and repz fisub movsl mov mov fisttp mov add dec xchg push jne pop repnz cmp push jne das push gs dec call add popa je popa inc bound popa jb inc jo jns fisubrl add jne xlat leave xchg cmp gs dec arpl jbe ja lods outsl add dec test loopne add cmpb nop enter push jg dec adc or insb outsl bound les push gs fbstp cli cmp cmp in jae push rclb add sbb arpl xchg gs lea add loop or (bad) cmp inc in adc dec addl inc xchg insl ljmp sub shr adc scas push xchg ss or xor jne test xchg cmp push mov dec cmp jne xlat (bad) dec and in push in (bad) push mov sarb inc lret clc test insb sub std ja arpl adc js ficompl mov imul jmp jne add scas dec jae sub mov movsb mov bound inc add lock jmp or mov aam push dec cmpsl mov sub sub mov ja push pop mov sarb sbb test lcall push sbb pop push push adc dec inc mov or adc (bad) cld test pop scas ret lret mov cld roll shr jnp cmp and lock dec imul xor or inc sahf movsb mov xor xchg ret cmp sbb cmp adc sbb mov add sahf out jmp popf pop cli repz inc mov bound insb xor push inc or mov mov push pushf mov pop and add inc je cmc sub mull sub insb outsl sub add inc lods ljmp inc dec jge sahf dec sbb push sub jle mov cmp xchg push icebp sub or sbb js push sbb inc dec pop fistpl cwtl inc into adcl cmp add cs test test sub enter jbe adc push movsl mov jl or and bound subl sub add daa mov or sub movsl in scas les adc out mov add aam or add or jno xchg fdivrs or jbe add test and mov sbb add jl ds test adcb inc pop xchg lcall pop push push sbb cltd fadds pop pop add popa lods cmp mov hlt and cwtl dec mov lea out incl xor or dec out xor daa (bad) (bad) rol pop xchg or int3 je int3 int3 into les xlat sbb add test out cmp repnz pop push jo pop aas adc inc test sbb xchg push jp lods ss pop xor push test dec or stc push jl dec ja inc xor add push mov mov push jb add sub je jnp mov ja xchg cli cld insb gs add test cmp or imul dec pusha add ja mov pop jns cmp cmp sbb sbb lret aam add insl sub push mov imul cwtl xchg adc mov xchg cmp lret mov dec xchg sub insb out fmuls fmul inc sbb adc xor xchg scas inc sub xchg pop push dec xchg pop ficom inc pop push loop xlat pop pop sbb pop rclb xor js pop push or mov insb loop sub jae insb jbe dec mov pop or pop sbb gs xchg (bad) cmp mov adc loopne data16 xchg or or pop or pop mov or loop mov inc cmc mov or or sbb sbb js adc add inc sub in sub push add xor add and cs pop fdivrs rcrb push fs ja xor or or dec sub repnz or sbb fnstsw test or adc mov ficomp mov push popf popa mov and mov and inc xchg cmp dec aaa in (bad) xor and test jno sahf imulb enter sbb and pop sub mov push sub jns or push mov jecxz inc dec add add mov es imul scas jbe fcomps bound fcompl or or mov loop clc push pop mov mov mov mov enter or scas je clc sub enter or dec adc sbb arpl mov mov add or ja and xchg add inc test stos inc sub mov inc sub ret or popa mov repnz or jge pop jmp mov imul lock hlt adc adc scas push pop incl andl push push mov mov xor cwtl push dec inc fisttpl mov pop data16 ss dec mov cmp out or dec pop lods inc lahf mov lea sarb cmp decl xadd pop or popf fsubrl jne sarb adc dec repz add mov push cmpsl fnstcw cld test dec cmp pushf mov gs and clc adc xchg pop test aaa insl sbb loope push clc mov mov xorl add inc pop ss (bad) jae and pop cwtl test inc adc fucomip xchg push jecxz out pop sub adc bound and scas pusha (bad) push call (bad) add sub hlt pop xchg pop stc and push hlt outsl inc out add outsb mov push push insb sub dec xchg sub pop jo xorl daa pop sub add push xor jo jb std or dec dec test sub sbb add sarl add mov mov mov fs jge push add jg inc shrl fimull jo and sub and in and (bad) in pop sub cs or dec dec dec bnd inc pusha mov mov imul insb leave lods arpl jp mov push and test mov bound ret rorl inc jb js (bad) push cmpsb and ret mov lds add pop inc lahf push pusha test mov iret mov add sbb cld movsb in jge daa and push jmp or fldt add mov in pop pop fsubs and dec fs mov ss pusha pop jecxz jb push (bad) arpl xor xchg mov lret or pop mov mov lds xlat inc push inc cmpsb aam ds xchg aam inc jns bound pusha adc scas jb pop lret jmp fisubl adc dec pop fimull fwait push lock lods push notb sbb fildl sarl xor inc push sub xor aaa imul loopne mov cmp mov frstor clc cwtl in add mov or adc add or dec inc add test inc loope xchg insl push mov stc adc xchg ror jae lea aam jle push lea adc mov test pop das fstps les je inc jnp movsl popa dec imul pop sub jg das pusha mov in sbb adc iret in fwait insl cmc adc mov mul xchg xchg int mov inc (bad) mov leave cmp xor cmpsl adc je jle lea ja jno movl jno push or or xchg or ss mov dec std cmpsl adc mov adc ret pop inc loopne cltd pop into fstps shrl push sarb adc fldt inc add mov leave lock loope pop aad adc dec xchg pop mov rclb andb jb jne mov (bad) aas dec pop mov push sbb repz pop (bad) in lods ret cmp andb sbb pop jne dec jo xor dec pusha cmp push sbb or cmpsb int3 sub bound push pop mov push ret dec ja adc inc lret popa and mov sub mov push sbb and and and dec fnclex jecxz adc sub and sbb or jl int xchg push push sbb push or push je jns and inc sbb add dec loopne (bad) jo icebp inc movl sub test mov lock cmp rcl ficompl and add test pop js sbb aas push sarl and sub jg dec mov out bound test or cwtl adc stos sbb cmpl sbb mov (bad) fsts movsb in mov add fistl jecxz cmpsl adc sub push data16 jmp dec rdpmc in cmp lock sub and lahf add or in and mov imull inc mov mov test roll nop xor out jg jb mov jb mov or xchg sub (bad) mov dec jmp pop push inc mov gs mov xchg rcrl xlat xchg mov or mov or dec in subl push ljmp push insb jbe (bad) jne repz inc into ds mov fidivr mov or cmp daa push or loopne inc pop cmp mov sub sub inc or dec dec push popl add lea cs lock inc xchg mov mov add pop mov dec cmp pop jecxz jne mov pop dec xor (bad) sbb adc mov pop enter xor add xor xchg data16 fs add dec or and jb xor es adc and inc sbb (bad) push pop les jae pop clc and xchg inc jnp xchg xchg fmul and pop decl pop lods idivl clc add jle inc call fist popa pop aas addl inc cmp add xor inc inc xchg mov add leave mov or pop pop xchg ja dec add ss aam (bad) ja push and lcall cmp push xor cld (bad) push iret cmp pop or dec rcrl je ss pop sub bound sub lods andl ja in sbb dec push adc scas rorl dec push enter in clc xchg shrb loopne add mov stos push outsl repnz clc jp sarl add mov add push mov pop inc inc add or testl sbb into pop or rcrb sbb jge mov sahf test sahf popa ret fs enter adc jle jbe mov cmp add and sbb adc pop sbb pop or cwtl or mov or add gs pop pop sub sbb sbb leave je adc fmul daa push push xchg mov pop ljmp xchg mov shlb inc outsl imul push sbb or inc add pushf daa inc lods ret mov mov add pop fwait xor out adc pshufw and test jmp lods and or test sub pop add xchg hlt add jecxz cmp pushl lea test mov sbb push dec mov push xchg sbb stc push mov divl sti in and es add mov mov mov in jmp add (bad) shrb arpl test (bad) jo dec movsl fwait jge (bad) xor xlat jp cmpsl or rol add popa cmp add mov jno mov inc pop add add (bad) cmc outsb inc ret cmp ss call inc insl lret xorl aaa jnp sub dec jne pop mov jge add jg icebp jg loop (bad) (bad) lahf pop jle in add jle hlt imul sub mov xchg push jle scas add es (bad) jae pop xchg bound mov or push pop xchg push dec fnstcw jne nop scas dec mov (bad) mov push inc scas test (bad) lahf mov and cmp cwtl mov movsb adc or dec adc shrb jne insl push (bad) or test jg xor xchg jg xchg or cmp out inc inc xor adcb push add xor lds rcll lods or mov aas sti cmp adc xor adc outsl dec and xor sbbb push sbb push or cld (bad) xchg cwtl stc lods adc aas and jae cwtl test mov lods push mov mov adc and and inc pusha (bad) je mov iret insb push inc out iret jo imul sub pop and xchg jbe sub js sub and lods into push dec jmp mov add inc push mov or aaa or cmp je and push xlat int3 test in inc sub sub jecxz orb orl push loopne fwait fwait sub inc push cmpsb pop xor jo ret imul inc je js pop jl or jl pop xor test push push pop cwtl mov xor inc je enter pop jae test inc add cs dec loopne call mov rcl ret jg or add imul repnz cmpb xor pop (bad) je out sub sbb fmull pop add xchg add imul dec and test push js mov adc ret or ret add xor xor (bad) lea aaa ret fisub addl rol or adc adc and and mov lcall stc (bad) aam push jmp jl mov enter pop dec inc sbb movsl or xchg push lcall mov xchg inc loopne sbb rcr jl pop or fwait sub add test cltd sarl (bad) leave call cmpsb mov adc sub repnz push lahf mov imul gs adc mov cwtl gs sub bound add xlat dec hlt es add repnz jae inc and push mov inc test adc leave or in aaa fdivs dec inc dec imul enter pushl mov xorb fisubrl mov js cmp dec and pop pop push adc ficom cmp lock outsb (bad) test xor jo mov into lahf ret xchg mov in mov repnz leave and xor repz test fcoms ret or cmp dec fsubl movsl xchg mov push test xor add ja xor and xchg pusha or leave add pop rcrb fdivl push and mov dec or mov push jno popf push leave cmc es jbe (bad) dec push jbe fadds jns jb nop xchg fcoms add xchg test lods or and xchg and and dec and pop mov mov (bad) in jns in mov out pop push rcrb enter add mov mov xchg add push add rcrb fisubl out mov repz adc pop xor sbb push out stos cmc push movl adcl cmpsb mov push mov or sub or enter inc fisubr mov jmp cmp enter hlt xor or clc push clc decl adc and mov ja xchg cld and mov nop dec gs addr16 mov mov in push sbb es test js lods pop lea xor rcrb shrb adc bound orl mov nop xchg push sbb xlat add jne je add dec popa addr16 xor add add and xchg gs mov inc and inc (bad) or jmp inc and fild addr16 add add inc cwtl cld sti stos mov (bad) mov or mov jmp lea push popa (bad) testl and pop mov clc add push sbb ja fcmovu dec fldl sub daa lea push inc xchg xchg (bad) mov popa mov data16 pop jl sbb das sub xor pop pop imul cmp sub cmpsl jo and add and dec mov sbb cmp mov mov xchg push adc jne inc incl push (bad) mov adc lods pop jle bound jg and loopne xchg nop fwait das jge adc or adc push add gs add aas cmp inc pop movsl xchg jo inc push dec jo (bad) scas pop cmp js sub jl int3 xchg in xchg xchg fwait jne andl xor mov sbb in xor in (bad) adc pop pushf sbb jne mov adc xchg xor inc shrl int push les mov lods std and cmp jmp aam fs inc pop jmp cmp pushf ret xlat jmp push and jo cltd push mov stos adc lods aad nop push adc mov leave sbb leave fcom or push cmp push adc and mov xchg jne xor sub mov xor sub mov aaa cwtl xlat sub dec scas adc iret mov adc push sub cwtl or arpl mov pop sbb push push enter leave adc dec push out xor or mov and cmp dec push lock sti add xchg and sub nop jno mov das mov add or shrl inc sub mov push xor roll shlb inc push or adc mov (bad) sub xchg cmp and adcl push (bad) repz or mov jne lret inc push aam cmp (bad) nop jae sbb out xchg lret in fcoml les inc pop and mov fsubrs subl subb add mov insb pop add xchg and push addr16 inc insb scas lcall xchg push sbb jnp,pt or inc (bad) jae (bad) out pop enter push add sbb mov or pop mov mov sub outsb push lods cs movsb ss ds sti test mov cmp movsb push aam test insb cmpsb mov inc push imul adc add or adc mov enter and lods mov pop in int3 sub popa push imul jl loopne mov cmp mov inc mov sbb push add test nop ja test pushf imul jo mov push andb dec je and (bad) dec push push test xor repnz rcrb es xchg stc or adc popa jo adc xchg cmp mov add pushf pusha mov rcrb loope pop cmp pusha mov cmpsb adc push add popa mov (bad) shl adc fisubl (bad) aas sub leave sub xchg sbb lods adc addr16 jb pop lock lock mov orl inc imul mov mov push inc enter mov xchg lods mov push add lret loopne lcall fdivl xor push sub adc (bad) dec mov xor mov test orl popf jo gs and cmp mov sub fwait in add cmpb jg das or add ja pop inc insb or cmpsl pop insl mov mov scas push xchg cltd sub jmp pop or cmp cmp pop add cli mov je pushf clc cmc inc pushl movsb xchg clc jo and clc repz or in fwait das or or or sbb loop aas mov xor push mov mov push lock orb sbb lcall shll ret push xchg rolb int and cmp sub push and lret (bad) pushf or mov je inc push push or dec cld call jo lea lcall sbb je rclb and push enter push pushf pop sub leave jnp inc or (bad) int3 xor push aaa mov cs pop test ja pop in mov pushf cwtl sbb cmpsl jp cmp adc jne iret sbb sub xorl cmpsb mov das lds sbb jbe call sbb test shrb test adc call push bound push call and mov mov popa pop add and out jl sub repz test pop mov cltd test mov gs aas jnp stos mov dec sub or movsb pusha xchg push pop inc test sbb test in imul test xchg inc inc mov or inc or call sbb pop stos lock xchg jne or ja mov sub mov pop scas inc mov adc sub cld cmp dec xor lock and add xlat rorb and add sub jg cmp pop mov inc dec jne jne dec pop andl inc jmp push add add sahf pop pop dec dec hlt dec ret push movsb jmp pushf or mov data16 in je adc loope cmp cmp test daa daa xor loopne jns mov xchg nop mov hlt movsb in mov sbb nop icebp and mov xorb ficompl and push rolb int3 push cltd (bad) jmp add mov cmp ret in es push mov outsb iret sub cmp sub dec imul out roll pop mov mov add movsb dec in sbb adc cmp out add imul xchg out bound sub xor int and in fimul inc jmp mov cmp pushf rorb push mov cmp jo es fidivr pop jo xor subl xchg ss dec sub dec leave ret push ss fadds adc (bad) jnp cmpsb inc sbb push add ret add cmp test cmp xchg int in push lds je les movsb xchg inc mov add and call mov imul pop rorl mov jno (bad) mov jecxz xor cltd add mov or dec mov xor push out dec adc rcrl fcom and pusha xlat das cwtl dec push adc aam mov ja js jl out adc js sbb les cmp dec outsl lret adc les mov inc js adc inc sub xchg jb int3 jl bound test mov mov scas push xchg inc push cmp cmpsb ja push (bad) (bad) cld pop mov (bad) pusha mov push pop adc pop pop mov in in push ret or and inc inc cmc frstor out sub pop add xlat jge push cs and addr16 leave nop pop hlt inc cmpsb cmc cmc add (bad) int hlt lea add popa mov or insb adc mov sub push or inc dec test and and (bad) add lds into scas xor mov ret scas hlt push cld jp jb jno jno cmpsb js or cmp or mov dec add sub pop ja jmp or pop sub add and shl cmpsb out or sub or xchg mov add enter mov fwait aam or sbb jb cmp mov mov sub push and cmp roll in xchg outsl push arpl adc or fnstenv adc ss adc cmp cmp dec or daa cwtl xchg xor lock shlb call cmpl xchg cmpsl imul stos out das test push sbb jo add cmpsl cs cwtl icebp pop dec sbb les xor push fcmovb xchg inc xor adc loope js and aas aas pop leave (bad) adc push mov out test dec or sbb sbb iret ds sub push adc xchg sub or loope pushf dec add ret andl outsb insb push outsb cmp test mov js lret add fwait orl popl dec fsts push lea enter bnd movsb cwtl mov push dec ret or jmp and hlt cwtl fs cmp xchg or call imul mov dec xor aaa fidivrl stos inc pop jbe addl and (bad) xor sub and mov push popf stc sub push lcall lea cmp daa pop out add inc jp sbb ret push cmpsl aam shlb fildll pop xor push inc popf addl adc (bad) cmpsl sbb add pop stos add and daa nop sub cld cmp adc dec xor andl jg adc loope (bad) jb fsts jmp xchg sti push pop push jo xlat lea out sarb je sbb or inc icebp scas mov call inc jo jo dec lods adc and pop sub push and and sbbl mov sub push xor rol icebp inc test dec jne mov mov push and add inc add enter jl push lret icebp je aas std xchg int3 shr ret faddl jle sbb push mov imul enter fdivrl add and jl cwtl in add sbb add mov cmpps sbb mov mov add insb xor divl loop push insl test js inc sub and addb xor mov stc iret stos dec mov fiadd jle sahf xchg dec mov mov (bad) xor push lock dec mov xor insb push pop in push adc fisubr sbb adc ret xor imul push scas (bad) and dec add sahf sbb icebp movl add xor scas scas add adc add xor scas dec movsb adc popa inc lcall and sub aad xchg daa inc inc (bad) insl sbb inc scas push push addl mov stos loope xor mov adc jae mov pop adc jl adc popf and adc mov cmp or (bad) push cmpb jbe push and in sbb adc and jmp cmp jl in (bad) daa imul cmp add xor (bad) cmp push pop inc jo in mov cwtl or mov push mov outsb add outsb in and xchg xlat inc inc cmp pushf inc das add dec psubusb push mov pop sub fcoms in dec lods or or and xchg push inc imul outsb mov in inc pop popa js sub fdivrs inc jl sub sahf out sbb mov movsb clc ficomp push xchg mov pop les shlb pushf mov fwait mov dec inc xorl lods test rorl jae mov scas dec rclb fdivl xchg pop push mov popf or fstl test roll mov test inc mov sbb insb rclb cli movsl nopl sub xor daa ror pop and arpl pop sub sub cmpl jmp mov popf and testb (bad) and push adc mov mov push or push or ss fistp mov mov mov pop add mov lahf or lret push mov das dec and push in (bad) lock popa adc lret pop jmp in lods es sub sub syscall scas movb ret popf sarb nop ss and scas adc js fstpt into xchg adc out sub mov pop rorl test out xor dec dec mov and jae inc dec sub jae xor nop (bad) data16 iret sub cs push fcmovne test push adc sbb or inc add xchg fstps les jb xchg dec add mov cltd dec mov push xchg arpl fidivl popa mov addl in outsl and scas jb add add mov cmp adcl rcrl push push or sub ret xor add imul cmpsb divb lock add xor inc js and jno xor aaa loop call push mov mov lahf jbe sbb movb repz push aaa xlat lea adcb push in mov add xor (bad) into addb scas push push popf lea shrl repz dec imul test and mov or mov insb pop dec mov mov mov adc aas or pop inc xchg inc ss xchg pop ret das ficompl mov pop push subb dec push je movsb icebp dec fsubr xor daa push addl sub pop loopne push cmp jmp mov dec ficoml adc adc es dec pusha sbb mov cmpb shlb outsb lods xchg es addr16 pop test cmp or adc mov jbe and xchg out in mov mov fisub jns dec sbb dec push jg jge pusha adc jnp insl mov jle and mov dec pop mov push mov and (bad) push push mov orl (bad) and cmp rclb (bad) pop rclb sub cmpb jbe pop leave sbb jg dec hlt aam movsl xor fidivl dec call pop bound inc mov rol push xchg dec or scas test jl jmp sahf inc test les fnsave (bad) (bad) mov dec push fdivrl inc inc dec add js fldcw loope push loop xchg mov cmp rclb mov sub pop gs push jo cmp les rolb (bad) es pop repnz xchg pop pop sub pop pop dec arpl daa adc push ds push aaa mov (bad) mov aas ds shlb ss shrb push push outsl mov or dec push inc mov inc mov inc xchg xor popa leave add imul rclb sahf add xlat xchg cmp inc imul call int add nop dec pop xchg ret ret lret nop sbb or or je mov lahf or sbb sub mov pop sub cwtl int3 push popa shlb mov pop test outsl cmp add add jmp lea pop lret sbb xchg lahf or ficomp xchg lds out cs dec loop pusha xchg les ficomp jbe add push cs cmp addr16 push or iret mov inc push dec lock push lock jo aam sbb (bad) lcall addl in cmc dec popf pop pop sub rclb xor xor stos sbb fs add mov adc out cmp push pop adc das adc inc sbb sbb (bad) nop or or inc out sbb loopne add xchg lahf xor inc or shlb inc rolb add subb inc pusha mov ds test inc push jae pop jae xchg out mov adc mov pop add sbb movsb pop ret fs jno sub or scas dec mov or ret testb rclb jo (bad) lfs pushf sbb xchg add adc jnp lods jae out pop xor movl dec sub xor daa rorb dec lahf (bad) hlt cmp push sbb dec popa pop inc and push add imul pusha mov and push movb add or and adc aam fisubl pop lods in fildl dec and xlat and xor fs in push add add ss les and mov xchg push add dec push (bad) push nop jbe mov mov cmp fcoml inc adc out mov mov add inc daa cmp sbb dec pop test test add xchg int fdivrl cmp xor pop sub adc or mov scas pop outsl imul ret mov (bad) mov or jo ret mov movsb out (bad) mov xchg insl ret nop push test fnstsw lret mov ljmp xchg outsb mov int3 pop clc ds js cmpsl cmp repnz mov ror cmpsl jge cld jle roll jo ficompl iret repz (bad) xor inc dec xchg pusha shll gs xchg xor in pop sub sbb dec rolb add sarb arpl pop repnz decb jbe arpl test test adc scas imul std push test push pop xchg or mov andl lret inc push imul push xor lret sbb ret les std sub xchg or mov mov mov lret and cmp punpcklwd icebp add adc add xor sbb adc lods xchg outsb inc call aam pop sbb pop jae mov push mov dec outsb shlb cmp stos sbb adc push pop adc or (bad) adc leave movsl adc adc and add popa inc stos inc or stos and adc mov ja out mov notb dec lret adc adc mov inc mov push mov outsl es dec lds adcb stos aaa sbb sbb add jnp add pop loop pop mov dec hlt sbb adc or stos or sahf daa sub std inc enter movsb pop push or cmp mov adc or mov dec pusha sbbl adc push leave push movl sarb aas xchg xchg jbe push insb stos mov (bad) xor ds or push rorb and ss in mov inc bound nop jns repz outsb jo aas dec sub add repz mov inc mov add xchg adc mov push hlt xchg add jecxz pop xor push add mov out cmpl mov dec aas and outsb das push xchg sbb adc dec lods xchg addr16 inc xor sub sub das inc mov mov adc mov rcll jl les sbb push popf fcoms sbb cmc sbb (bad) mov mov cmp shrb loope (bad) aaa sbb push and push or ja aam xor jge cli andb inc je pop addb mov pop stos sbb rorb fsubl lcall mov pop cmp mov fdiv xchg dec dec arpl cmpsb push inc adc sub je mov sbb mov adc mov ja push inc jmp xor lds add or mov inc setne adc rcll inc dec popa jno aam popa xchg xor dec shlb das daa loop xorb inc (bad) pop nop aad jge jl ljmp icebp sbb jmp arpl fdivl adc ja test dec out les addr16 rclb xor inc jo sbb punpckhbw inc or dec pop shl inc push jg cmp adc sbb insb jmp cmp and lahf imul jmp and mov out cmp xchg jmp dec xchg mov ficompl mov xor sub cmpl add leave mov jo or push popa rcrb add or sbb ret add push movsb pop lahf xlat pop mov hlt ljmp sub es mov xchg outsb mov clc jp push nop stc adc and sub mov mov or out mov jmp xor or xchg cmpsl test cmp call psraw sti mov and leave lret and enter rcr (bad) int sbb hlt call out cwtl js stos push scas adc mov and jae push cmp xchg int3 xchg dec inc mov shrl mov push movl inc xlat movb dec out mov sbb sbb lock mov push dec sub mov sbb scas popf test insb sbb rcrb cmpsl fnstenv nop cmpsb and add test mov fwait out and inc and or fmuls jp (bad) ja sub xorb xchg mov lods mov add clc dec push push or inc loope (bad) push sbb inc adcl divl cmp enter mov jbe mov je pop mov fs pop mov cmpsb push adc push pop rclb (bad) adc insl mov add (bad) xor push mov (bad) adc roll pusha xchg insb push dec pop rcll movsb xchg jo mov pusha outsb imul push test aad dec jge mov icebp add mov sub lret or insb cmpsb add popa jmp movsb addr16 js lock (bad) insb js enter cmp or insb jecxz push push inc lahf jbe lahf and or jmp push nop insl pop inc into in sub or inc inc xchg fadd hlt imul add pop mov push xor hlt pop jle lods andl fwait inc xor add xor cmpsl faddp mulb lret pop push xor pop mov je enter jge insb popa push xchg daa xchg lea (bad) (bad) in rcll push pop imull loopne xchg push rorb push jae push rclb jg nopl dec pop push dec or les lidtl insl dec (bad) mov adc adc ja popa je imul int bound lea sub sub xchg xchg xchg xorb mov cmpsl fdivrs dec cmp xor jbe jp aam mov pop add into dec adc push hlt pusha js pop cwtl cmp sbb xor pop jbe jbe fistp (bad) fiadd inc mov mov mov cmpsl iret adc cmp icebp adc scas mov push loopne dec stc fisub fdivl cwtl rcll (bad) sub mov add jae cmp jmp jnp mov in xchg popa jmp xor jno mov fsub inc mov adc adc mov mov addb jae fdivrs stos push rorb or dec call shl push mov lods xor adc cwtl pop sub sub test outsl jmp and inc jnp xchg jge adc xchg add or and adc pop pop stos pop sbbl sbb pop mov dec or or or jmp (bad) and bound fcompl adc inc fwait fwait test subb in mov lahf sub jecxz add jecxz mov ret adc arpl iret add es lcall inc sub inc mov and int3 (bad) or mov decb lods mov sbb sub loope sarl fadds lods insb sbb mov (bad) test xor mov addl dec ja mov push icebp push pop cs adc cmpb inc sub sbb add sbb cmpsl (bad) outsb and aam insl dec shr xor stos mov adc mov pop ds or out and ja outsl adc outsl movsb sbb xor es movsb xorl xor push (bad) mov ljmp mov or leave faddl adc fdivrs imul mov mov ret adc repnz out fisttpl and sbb inc xor add push cwtl shrl fiadd cmp mov pop xor jo adc xor xor enter out jecxz push mov push push ja or or dec mov sbb rorb push or in aaa add loopne mov aas movsb pusha cwtl inc fsubr dec or adc add add or in mov sbb inc pusha add pop dec sbb jns pop sbb add and enter sbb adc push aam sbb or xchg add dec xlat push pop rcll hlt dec sbb push rcl out enter cmpsl (bad) mov mov cmp add sub out and int3 ret cmp ja adc inc cmp sbb ror push in add out and lcall cmp pop test pop jo or loopne jle pop sub sti inc xor sub je jmp xchg xor add stos cmpl adc jno sbbl mov rorl push nop cwtl test call pop bound fwait inc leave je push cli fldt push pushf arpl push call and call and inc fdivs or jmp push jmp daa sbb aas mov push inc hlt mov int3 push dec pushw jg add (bad) mov movsl push adc and inc xor daa mov fsubr add or inc add gs add mov sbb sbb mov lods jmp jb test je push push adc nop mov cmp fldl xchg lcall insb in or pusha xor add fcomps dec and subl out add imul add (bad) jmp test mov arpl shlb push mov jl xchg sbb fwait insb movd sub jl cltd (bad) jnp pop (bad) jmp hlt adc cmc inc and mov sub fnsave add xor inc mov push push jl insb xchg inc xchg push adc add xor and cmpb (bad) jmp add sbb in push xlat jmp rclb cmc fstpt repnz mov jmp xor je test fadds pop rcll bswap dec add mov imul xchg cmp aad or mov insl clc lods aam xchg addr16 sbb inc pop sub in bound sub push mov xchg jmp cmp mov add add dec (bad) idivl and or push dec push dec dec inc push test movsl add shlb inc sarb sarl and xchg or in cmp sbb (bad) in pop loop dec sbb jb add or mov mov jmp mov adc nop push out test and nop jl,pt inc cmpsl mov push mov out sbb ret and data16 aas pop out pop inc push andl push movsb jle call adc enter loopne negl jo pushf push push bound pusha mov loopne or lahf pop sbb aas pop sub popa in add sub int loope xchg jnp sbb jb cmp inc cmp mov test sub into or push fdivs mov orl aad mov es push fwait sub mov mov add dec ss mov pop enter inc adcb test rol pop pop (bad) push or rorl inc divb or xchg call push mov into pop pusha add jb adc dec out (bad) xchg mov (bad) and ret stos pop xchg (bad) in ficompl into jmp mov lcall pop outsl fimull loop jbe mov inc push loop or inc and inc ja mov loope imul imul clc dec xor fwait mov xor mov xchg cmp pusha sub loop outsb or loope dec push pop adc sbb das lods adc xchg fcompl and mov inc push jge cmpsl dec iret or xchg cmp gs add push add popa mov add inc jo ja jns xor (bad) push scas mov pusha xchg add push cmpsb sub call daa das cmc cmpsl (bad) cmpsb bound cmp xchg xor into and xor xor call shlb pop push or insb loope jne push insb push and cltd dec stos in push test in mov out cltd push xchg jne lret fxch sar shl iret and inc xchg push cltd dec xchg mov int3 cmp or xchg inc sub mov dec outsl rcll loope inc subl add rorl in jmp fmull (bad) ret push add jno imul or sbb mov add ss mov ja test addl jo aas pop inc test and cmc mov push cs jl sub mov aam cs sbb push add push mov aas add ret (bad) push (bad) imul sbb fwait (bad) push sub test add je inc mov les inc or cmp pop or push and mov sti pop imul sub jbe push xchg mov (bad) in mull das xchg inc outsb push notl pop divl mov loop adc sub sbb push add push mov nop pop andl in imull mul adc pop js pop pop sub bound push xor xchg sbb pop das or pusha xchg push fldt push xor or push cwtl mov nop scas loopne inc std out les sbb xchg outsb add mov inc imul xchg sub insb fnstsw dec or popa sub loope adc or aam xor in jno stc add xchg test xlat subl xchg test pop add movsl lea in out jle adc out sbb mov andb xchg mov lsl das jmp mov (bad) out stc mov cmp clc cld adc mov lock cmp xchg xor cli aad jne xor jbe,pn xchg mov (bad) push loopne ljmp push lds loope sti mov mov jle xor in xchg cld es addr16 add push lret push movl (bad) fidivl ds inc jne xor jle std in inc xor adc add das add add mov jbe lods lret pop call inc fcmovnb sbbl orl and push scas xchg (bad) divl sub and sbb fnop and sub push out add sub repnz jne dec sub xor and jmp xor adc inc jmp mov pop adc sbb pop shrb mov test add (bad) cmp ror adc incb jmp cmp jne stos adc jecxz cmp adc or cmp lret mov (bad) cmp or push std and add mov push ljmp mov jge push xchg into inc (bad) mov ss cmc mov adc addb push fwait cmp dec pop (bad) xchg jne movsb xor pop add int3 out add mov sbb aaa popl mov push out jp xchg inc or pop xor jo dec call sub adc dec orb in sub aam aam loopne loopne jmp ficom xchg imul add outsb in (bad) ret push sub popa cmp jge inc cmp add lods popa jo push add or xor mov push dec fucomi cmp xchg adcl adc mov lock mov or aam mov inc lock rclb mov sbb int3 fsub jp jmp mov mov (bad) daa sub dec test xchg sbb mov xor cmpsb cmp arpl or and inc (bad) or xchg mov dec in jge mov sti push mov add (bad) pop addl cmp or rcrb xlat jle xchg and push add xor xor and ja ss cmpsb sbb shrl js lock cmc xchg or or (bad) or fcos sti cmp repz (bad) shll mulb adcb add cld mov pop pop add insl push nop ret and loopne lock test sub nop mov fadds mov inc mov xor and cmp sub lds stos jmp out sbb js mov mov xor loop cmp decl and xlat sahf cmp dec icebp (bad) mov push das sbb cmp (bad) fldcw sbb (bad) jb adc lahf cli loope sbbl add inc or lea or icebp idivl mov cmpsb out adc lret xchg jb cs and sub xor mov cli in or cmp sub cmc enter xchg xchg jnp call fiaddl (bad) xchg in pop (bad) dec (bad) sub xchg xor dec rclb mov lcall mov iret mov fnop add jnp imul and sbb xlat adc add sub loopne les mov outsl adc add iret xor fdivs into pop push sbb mov cmp xchg dec sub dec iret pop add jle jge inc sbb and dec ljmp adc inc cmp cwtl ss pusha mov test data16 cmp jge push push ficom xchg pop mov dec or out push adc cmp fxch lods pop mov fistpl jmp pusha pop data16 jge xchg lock jno test mov push mov inc mov ret ss or inc pop clc inc js je jl jmp jne mov imul push mov sti sub and mov xchg add and xor xchg pop push push rolb push cmp add outsb inc pop cmpsl or inc inc rcrb fidivl adc test pop es (bad) xchg push rcll test push xor scas pop int sub push adc push pusha push int3 and xor xchg inc sbb push push testb and daa cmp xor loope nop xchg pop cwtl lea rol add scas adc jle daa push in sarl int or sbb add cmpsl fnstcw cld push inc faddl sub (bad) add inc push mov mov push add jo jmp mov sub dec xor and mov les aaa inc cli enter cmp lcall add jecxz adc sub add (bad) and pop jp testb xchg daa and je or fsubl push ja add jne insl sarb data16 push jmp push es das outsl imulb jne and jne jg testb aas cmp jne xchg dec or dec rorb dec loope ret pop jle adc popaw push les or adc loopne je mov sbb or fcmovu jmp jg pop loop add mov bound adc pop andl pushf es aam pop add rcrb xchg pusha ja add cmc je mov loop push fwait dec roll adc mov and rorb cmp dec cmp cmp scas mov cmpsl inc add or stc pusha mov push stc push inc xchg or fidivrl xor test (bad) mov pop xchg mov enter or andl mov cmc rcrl cltd or mov mov test xor jo sbb add and pop or faddl sti xor aaa aam ficoml adc and push repnz mov in or (bad) mov push mov inc lock test cmp orl imul sub imul test dec xor push sub push inc jo or popa nop test push dec dec lock inc pusha ss (bad) aad imul lret pop jne add add and in jns or pop mov in push sub jmp lock xlat or adc push jmp jmp ja (bad) adc mov and pop dec cmp adc xor ret adc popa imul mov cmpsb and mov add (bad) dec or lea adc sbb (bad) sub repnz add mov ret ret mov mov in push push sub test out (bad) push push mov clc icebp add adc pop dec pop inc add mov (bad) or xor shrl cmp lret sbb pop add movsl dec (bad) adc push inc sub cld add out inc ret and (bad) pop push push inc hlt or or outsl lods dec int inc stos mov lcall pop inc mov cwtl movb in jb xor adc call sbb hlt mov inc adc jl ret sahf mov cmp jae sbb cmpsl inc loopne xchg jl or jns mov jge jb imul lock jge cmp cwtl or rcrl add xchg or push mov sti cmpsb cwtl push mov inc add mov in cmp clc cmpsb lock mov pop and ljmp movb imul lock outsb movb add cmp pop mov jl jb push mov pop inc mov sub fnsave push jns std stos and (bad) cwtl xor jmp icebp or nop xchg call cmp in ret sbb movsb lods ret or sub push inc push stos fwait lods jne lcall xchg test lods and or pop xor dec sbb stos cmpsb es sub scas or lcall mov xchg add pop fdiv cs dec xchg sbb xchg fs cmp sbb or cmp sbb or dec mov (bad) or (bad) jecxz stos test movsl sarb pop inc imul fnstenv xchg xor adc leave pop add aam and add fcoms push pop addr16 (bad) and or inc xor imul mov mov push add int3 sbb ds sbb sub xor fldl sbb arpl sbb jl xor mov adc add sbb xchg xor xchg (bad) or adc test adc and divb lods loope sbb mov xbegin jne pushl dec dec ficom sti mov aaa xorl jge add add jge adcb jae aaa xchg jle test cmp fwait push cmpl xor ja insb or movb add cmp mov subl (bad) and imul test xchg or out dec (bad) jmp xchg or push bound fildl nop daa dec inc and das jbe sbb adc jmp push pop (bad) add iret inc pop add movsb sbb cmpsb sarl insl xlat sbb mov inc xchg xchg lock mov cmp add cmp ret jmp rclb aas clc mov push adc sahf or lds jne in or push inc icebp push mov ljmp xchg inc (bad) hlt cmp icebp xor test jle and dec jmp movsb (bad) adc inc mov cmp js std je or and push jmp and ret xor cmp test add mov movsl mov mov lods int cmpsb cmp sbb gs fs adc pop inc xchg (bad) push gs cld or pop dec jg lock insb (bad) dec les mov lods dec cmp and and shll mov maxps sub pop inc and and hlt xlat cmp mov fnstenv mov xchg push pop or data16 dec (bad) mov rorl jge mov cmp and xchg hlt shrb cmpl (bad) loop arpl add std in sbb lea or test push push and and sarl lods ljmp and or push in (bad) xor push add inc popa jne outsl lods ret ret sbb leave and movb inc add or cmp push sub je push jmp sbb add rol mov mov stc aas push sbb jmp and orb leave inc daa cmpb mov or sub sar inc mov add lcall or inc or ktestw xorl scas rorb jmp push jno sbbl sbbb das lods movsb test inc jo or xchg sbb dec add lods mov fldt inc ret test cmpb push add addl ficom push or popa jae dec mov jl je out adc mov mov xchg adcl test mov push pop lahf popf (bad) push aaa sbb cmp test add insb xchg call xchg pop push aaa inc sbb insb (bad) mov (bad) mov add or mov mov dec out sub mov mov cmp sub and push (bad) sub push call fimull sbb loopne icebp fmull or daa ljmp mov inc js pop sbb mov imul iret xor xor inc scas xor sub mov adc xchg out add adc cmp or mov adc add sub int or mov movsl iret std ljmp push insl fisttp sbb adc addl mov mov ss add xor lock dec ficompl das rorl or or cmpsb data16 icebp push mov push and mov xor adc mov testl mov or sub imul test pusha addl sar test out je or xor pop adc push cltd sbb jbe dec cld adc jnp xchg in push dec in cmpb jb or jbe push adc lods mov sub push fisttpll sti push push and (bad) into (bad) sbb dec (bad) fistpll adcb popf cmpsl push insb outsl sbb add add div pop sbb push mov push andb xchg pop movsb cmp call adc mov dec adc and arpl imul mov jne mov push add adc not and or dec jmp shl nop dec cmpsb fs loopne add mov mov or int loopne insb sub inc pop adc call fldenv push (bad) mov test in fiaddl push js sub js sbb xchg fild daa push cli fsubr outsb jmp mov hlt test sbb cmp and sbb pop xchg mov cmp inc je incl dec lcall mov pop mov mov in sub sahf outsb in add mov cmp lock jecxz nop daa vcvtss2si stos cmp dec in in mov push push jae cmp or add xchg and push dec push or bound or add and mov push loopne add inc data16 cmp or jl jge call or pop psrlq add out std (bad) or test sub or cmp (bad) repz jle xchg mov js ss scas jae popf cmp pop ret roll jmp loop add add inc inc (bad) push sub in or int3 leave in cmp mov ds rcll adc loopne cmp (bad) mov arpl ret jl inc setns das popa (bad) jle iret xchg add push xchg xor or and negl fdivr popa fdivr or push cmp in test aad xorl lock sub dec pop xor and (bad) insl imul scas inc mov loopne xchg mov sbb lods movsb sub insb pop add call xor jge jecxz iret call and inc jne loop xor aas xor xor and push push push shll xchg dec jmp fcmovb out jmp xor adc jl and minps mov mov sub mov and add mov sbb (bad) je pop mov push bound dec push les add pop add repnz (bad) and add pop aam mov data16 dec push fs or sbb add jmp mov dec bound sub dec mov xchg jbe inc lods add push pop sbb mov mov pop pop shll shll subl popa mov stos cli mov push sbb outsl xchg add add ss (bad) negb fwait jmp or adc xorb sbb add xlat mov jle inc sbb pop fs push fs add pop das sbbl (bad) fs adc fidiv popf adc inc insb ja jns push add and xor jo sub push or add xchg (bad) fist xor loopne sahf fs cli xor cmp jnp pop lcall movsl push sbb mov mov xchg aaa cmc testb das xor gs or nop loopne roll test jae jae push imul mov dec lock adc or sub inc xor inc xchg push xor cmp adcl and or fs pop das jmp add dec pusha sub inc out je sub sub push xchg jg aad pushl inc jg push inc enter and call or dec pop mov jl into add outsb int3 dec inc ja push ret js sahf push (bad) xor out mov xor add movsl mov pop data16 or mov inc jb cmp inc pop cmpsb inc notb ja xchg addr16 roll adc pushl popa push sbb ljmp jmp jmp mov lock sahf call fwait es and push or push cwtl cs mov inc cltd push insb xchg out ds fadds push mov imulb (bad) push and pusha sub mov mov ds cmp rol lahf iret jnp out es mov mov lahf ja sbb push lods or into out out fstpl call insb mov rorl lods xchg scas pop and (bad) add lock mov pop enter test cmp pusha ret xchg push fwait cmp fwait push jns add sub mov nop xor test mov sbb fild outsl and and xchg inc ljmp fadds dec mov jp mov xchg add out jns scas sub dec push mov add and sbb mov rorl sub add nop mov mov mov pop mov sbb and push iret xlat and popf inc push mov xchg cmp test fwait or lret xchg sbb sbb fwait roll sbb fmuls adc xor xchg das pop inc and pop add lahf xor (bad) xor xchg dec dec jo ficoml ja aaa add fsubp xor (bad) dec repnz sbb sbb add (bad) push rol into mov pop push and adc adc icebp sbb push leave pop sbb pop add sbb pop or shll jns loope xor dec insb xor xchg sub or test repnz stc je xor lea xchg sbb or dec jae xchg or jmp test mov (bad) aad fucomip cmc lds stos outsl subb dec fcomps and push movsw pop inc pop sbbb and iret xor int rclb inc add or sub nop push jb sbb mov stos ret lea lcall push insl cmpsb mov sub inc iret xor dec mov ret nop ret rcrb or pop clc in (bad) insb jne outsb int inc or pop xor push jb xor xchg pop jne xchg xor in push adcl sbb and orb xchg (bad) add adc dec mov add in cmp dec das and mov adc or add popl mov jecxz dec push xor aaa inc pop out test mov and enter movsb jb inc push and adc add cwtl and inc addr16 pop mov loope or cmpsb mov imul cmp cmp and mov je aam inc cmp in dec movsl mov cmp inc xchg sahf cld mov in sarb jbe mov ficom xchg mov jmp mov push mov mov mov cmpsl stc xor pop mov cmp lcall test stos pop je pop mov fstps lods push adc mov inc or push pop sub ret jo imul jo push xor subl or andb test jecxz mov add fnstcw pop or add (bad) lods adc add or pop fldl or add ret or add add subb inc jl inc in dec fmuls or cmp popa mov add push in adc int3 in sub pop repnz dec pop daa clc xchg (bad) xor xchg rclb push ss mov xchg das mov add mov faddl and adc daa sarl mov push xchg fnsave sub pop ret lods inc test dec imul xchg adc and cltd and test sbb pop ja cs movsl add xor pop scas dec pop or mov push movsb mov movsb jns cmp xchg and in xchg and rcr loopne bound mov push insb inc or pop bound sbb add mov xor sbb hlt and xor outsb xchg in and xchg lock and pop bound cmp hlt xor pop add mov fldenv (bad) cld pop mov inc push inc sbb addl int xor jbe or jge nop mov std mov cld aam pushf add xchg test xchg hlt jmp orl jbe mov imul jbe sbb mov mov pop jne enter and (bad) sbb push hlt jg dec pop xor test fsts icebp or div mov bound fs mov (bad) addr16 cs cli inc daa es fldl cmp cmp push push lock push sub pop xor (bad) adc lea sub mov fsubr sbb ret mov out push or addr16 cmp adc aas mov sbb sbb inc hlt sbb (bad) push sbb cmp jne in and push mov movsl push and addr16 js or jbe add push stc adc xor inc cmp popa and mov std pusha sbb sahf popf push add mov mov push fmuls insb call fcmovnbe add mov bound mov xor xorl fs or inc adc add iret xchg dec dec lods add test or dec (bad) inc pop int fs dec adc xor sbb jbe iret pop test push notl or data16 loop jb int3 ror (bad) mov and push mov xorb dec add jb sub xchg int3 mov fmuls xor sbb fdivr pop mov push mov cmpb sub dec clc or movsl or rorb (bad) fcoms add add pop xchg and bound jp data16 test (bad) dec ret shll xor mov adc iret pop jo outsl push scas dec pushf pop ds call mov push stc jl and mov es ret and dec xchg or lret push lods xchg jp rolb cmc push or fcom sahf cld adc movsb adc mov shrb mov es enter je or jg mov notl push add aam xchg adc add sbbl adc clc sub jbe mov stos je pop mov pop loope ror add xor pop pop mov add or rorb sbb movb xchg es xor test or ss mov inc sti pop shrl cmp inc loopne xor (bad) pop mov or rcll je lret or mov pop daa sbb cmpl jne addb pop mov cmp pop and imulb cmp (bad) js or add push pop les xchg lea stos movl sbb in push add clc pop mull shrb xor pop test loopne loopne pop mov xor fisttpl xor and adc loope mov je ss sbb or je mov add sub divl (bad) jb pop pop dec cs movl push and inc mov sbb pop adc jae hlt xchg pop add add mov psubb aas popa and dec popf jle ficompl mov jecxz lret mov sub add push gs adc xchg and cmp and xor lcall mov dec add add cmpsl mov and test jge add outsb punpckhdq pop push bound and dec and dec pusha js (bad) mov aas pop mov js frstor inc (bad) push lods push adcb inc inc xor cmpsb addb mov adc xchg mov cmpsl cmp sbb push mov sbb imul lcall dec sbb pop or iret gs push insb sub fildl lods (bad) je,pn jecxz inc push push push push enter cmp jae fcoms imul aaa shlb dec adc (bad) xchg ret mov xor popa add in fnsave push lods insl outsb or dec xor enter pop fstps dec (bad) fiaddl push cli push mov sbb xchg push mov pop and add clc scas rclb cmp dec xor sub pop xchg bound and jne inc or rclb xchg sbb repnz dec inc fs sbbl and sbb dec cmp jae cmp xor mov loopne sbb insb nop (bad) mov push sbb or outsb sbb (bad) (bad) lret mov add cmpsl pop movsl jne or push imull sbb hlt push push pop addr16 pushf or ss ret jmp pop mov adc pop icebp jno jecxz clc adc test (bad) dec and push adc push scas mov imul jecxz lret push or inc ret or fiaddl nop push cmpsl push ds fnop add sub test jno (bad) jg stos sub dec sub jl inc xor mov dec clc inc dec mov aas cld imul sub out pusha jne push and jns xor test andl and or push sub or fisubr add xlat dec subb les cmp and xchg jp xchg sbb add scas xchg std mov call jbe dec cmp movsb mov sarb dec xor add in sbb neg mov shll xchg jne faddl push testb pop pop push popf negb ss jne xchg pop xor in mov ss and cmpsl ret mov adcl mov pop or mov daa sbb adc sub mov xchg cld lock pop (bad) test lock jne insb push sbb or rcrb inc dec enter data16 and pop push add lock pusha shll pusha add scas xchg and or push outsl cld cmp jne outsb xor sarb movsb push push addr16 push sub ds scas fldl in mov jg lret mov movsl movsb xlat and push or hlt and cmpb rorb pop adc mov les in and js (bad) mov cli lahf jo push jne clc imul sub clc jmp cmp xor lret add pushf and clc push ret adc rorb ret xchg pop sbbl movb inc xchg pop jo adc rolb mov mov sub pop call outsl movl test dec lds push adcl daa sbb mov jecxz mov lahf xor cmp (bad) xor push mov sbb dec xchg jg sub mov mov fwait insl subb test add sbbl pop rcll orl pop xor add and fs sub pop xchg mov call daa pop cmpb stos push mov sbb fcoms pushf lahf mov inc pop inc sbb push enter inc dec pop fmull cmpsl xor adc push xchg or sbb loope daa or (bad) neg mov add and nop out push inc lea mov pop and jmp je (bad) ret into mov pop enter insb out test or jle cmp mov pop ss loopne and pop pusha sub stos inc mov daa movsl cmpsl xchg xchg push out xor push aas xchg push jb ror push add sub in pop adc test adc test (bad) orl add and mov sbb push pop jo push test stos and or sbb jnp xor imul mov or pop add or jo shrb mov pop std xchg stos cmpl adcl (bad) aaa enter stos pop xchg pop mov mov or adc and add sti sub mov push dec ljmp sub mov in cmp jne ret fs push and sub (bad) xchg aam cmp lods in ret loop les sbb int3 scas das nop (bad) sub jecxz and jl cmc inc adc or push hlt jmp pop or fild cmp jecxz jmp mov aas dec xlat mov imul loop xor test sub mov clc mov or pop lock jp mov imul lods sub xchg add cmp notb jbe add (bad) lods aaa movsl and add movsb sbb add cmpsb in add mov ret in add adc mov pusha insb push (bad) scas lods iret ss xchg mov addl mov imul subb cmp dec add add mov in jg push jg adc ja icebp loopne mov rcll lock lock xor push add xorb pop ja clc inc daa mov adc adc ja sbb push xor je jb push push or rcrb sub or cwtl pop push pop adc pop das inc (bad) or sbbb (bad) popf js icebp adc rorb push ret dec in inc ret jo sbb pop sub sbb sbb cmp hlt popl xor fildll adc dec hlt sub aaa es push pop pop loop fstpt jle cmp pop je sbb add repz xchg lods fmull adc add pop bound mov repz cmp cld adc das add add addb add add or sarb sub xchg in sub push jo rol push fistp call add xchg add pop cmp roll pop ss or or imul xchg and in adc les xlat in ja adc adc loope in xor xchg inc in and mov or in sbb pop adc lea jge (bad) mov or je jmp sub add ror data16 and mov add lock jle xchg xchg add bound cmpsl jmp adc dec cmp cmp jmp fninit (bad) jmp jecxz fwait and inc push cmc and lods jl and lcall rolb dec jecxz cmp dec jg int dec insb adc add cmp or imul hlt xor mov test enter ds add fwait add jg,pt jl (bad) aaa mov or inc sub ret rolb pushl sbb pop mov add (bad) movsl mov aas or loopne rol push clc flds dec adc addl cmp loope (bad) jb pusha mov in je or add dec jae adc inc lea push inc sbb fsubl pop add xlat add out lahf xor sbbb xchg or nop mov sbb sbb pop or pop push jg sbbl rcrl or cmp or push or lock jne cmp pop insl push (bad) adc xor xor or push lea sub mov or mov mov jnp and mov fildll mov jge xor mov jnp xchg enter fisubl inc push pop xor sarl clc lea add insl loopne xor loop lods sbb sub pusha sbb adc jmp add imul mov mov fsubl and mov pop or cmp jge push dec push (bad) jecxz (bad) or sbb test add rcrb aas sbb push mov loope jb movsb mov jae sub adc jae lods int insb pop (bad) in adc cltd add jle and adc (bad) fs or or push and xchg sub pop sub pop (bad) inc addb lds popa lea push inc mov cli add loopne clc rcrb out stos xchg dec inc (bad) shlb or mov sbb out dec leave (bad) ss push add or mov xchg xlat rclb or add cmpsl xor pop dec inc movsl pusha (bad) sub test push mov cmp xor outsl aam add enter cmpsl in or enter cmpsb stc (bad) in or adc inc and xor lods fs pop dec or adc pop aaa ds jmp clc loope movsl pop jbe (bad) cld jne xchg mov or fcoms (bad) jne shl (bad) hlt popa push test jge cmp sub push (bad) sbb jne jo inc (bad) cli les and add cmp cli negb dec xorb outsb icebp lock sbb clc adc dec sbb (bad) shll movsl rol dec ret xchg in and inc sub pop ljmp popf cmpb in gs cmp sbb push (bad) sub inc sbb imul nop dec sbb in ret nop ja insb dec jno xor sbb lods lock dec inc repnz jne sbb jg add jecxz in sub jnp add jnp jle mov mov xor cmp or dec incl (bad) jne or adc push movb mov sbb xchg mov loop and add mov pusha add push roll pop fist mov adc fldl insb push or shlb push adc fwait js and gs pusha pop call sub push fdivrs pop or pushf jge or lcall push cmpsb xor lds push daa loopne fistp adc push sbb push add icebp test inc ret aas xchg je pop and push xor imul adc (bad) aaa test or inc pop adc sbb jne mov sub mov cltd lods (bad) xor xor mov aas xchg popf push cwtl fisub aas iret and test es or sbb cwtl orl imul or pop push fsubrs outsb inc in notb and cmp mov (bad) or pop outsl or ret adcb xor add adc add sti sbb dec jo ret imul push fst bound les pop add adc add push xor xlat test popa or or scas dec sub lahf or sbb jmp mov dec pop pop pop or clc adc lea rcrb xchg xor push daa sbb shlb push sbbl pop (bad) popl adc in gs sti xchg jg pop movb and not and in adc add (bad) cmp sub cwtl add add icebp xchg push jecxz mov add dec and xchg pop mov inc mov dec push jbe leave xchg es adc jge xchg sub dec adcb (bad) and aaa sub subb push into std aam jne sbb lds (bad) adc fnsave adc push sub push or inc push push movsb sti aad mov adc pop in or add jmp std inc or sbb sbb dec push add xchg fld pop sub enter shrb arpl dec nop or pusha lea jl mov jge sbbl iret cld in (bad) imul nop mov adc cmp dec out pop fisubr cmp mov dec push pop scas dec or dec imul push xor ss jl andnps push rol insl pop and mov and mov enter add add fcmovnbe xor jg jl push jg cmc push adc addr16 aaa mov pusha and jge lea js (bad) mov mov loop mov jmp and or jmp mov andb adc pop outsb movsl sub cmp imul adc cmpb ljmp insl push or dec add adc pop sbb mov inc movsb jb or sbb aam into add dec pop popf xchg mov fdivr cmpb pop test daa mov jl ljmp sahf mov sub pop jbe,pt push lret or mov leave dec cmp pusha xor mov sub fisubl or push lock pop cltd sbb pop jnp cmp or push xor cmp clc inc and jo (bad) mov inc jle fadd lret or add push pusha ret stos sub mov dec mov jo push xchg push lods dec sub or test pop popf adc xchg cmpsb pop pop jnp nop mov sbb fisubl loopne (bad) lock mov or out stc xor arpl mov daa cmp xchg out sbb or jecxz inc pop and rorb add xchg test cmp push xchg cmp les push or cli test outsb dec rorb inc xchg add fwait cmp push adc or loop xchg inc insl les loopne in insb mov and lock pop aam dec iret hlt shrb lods xor pop sahf cltd adc jne add lock je jge add pop je js pop fistp mov sub xor movsl cmp loop xor aad hlt add or ret int3 jge jno add sub popf data16 mov cmp popf xchg mov loopne lcall adc xchg push mov imul cmpsb jge and jmp rcrl xchg mov enter sbb imul (bad) push arpl bound icebp int3 mov or adc xlat cmp inc mov xchg or aam add loope pusha out in mov and (bad) sbb cmpsl pusha pop and and xchg dec cmp pop pop jb pop sub aam lret in sub push (bad) or sub dec inc xchg xor gs sub xchg push insl (bad) mov das sub add add test es mov test adc sub mov and jae pop pop outsb daa or sbb xchg pop or inc hlt pop mov lea in jbe xchg dec pop cmpl sub mov aas sub mov arpl push movsl sbb test mov in inc loop addr16 adc out and inc mov fsubrs cwtl jmp daa pop loopne pop xchg shlb dec cwtl ja push pop iret repz rorb int imul in dec mov mov pusha mov imul sub and les sub xchg fs test push inc pop add cmp lods push jg cwtl pop push pop jo (bad) or push daa pop xor (bad) sbb add push mov push insb jmp and or dec ss sbb jns das imul mov cmp inc ja scas (bad) clc lds sub lcall add xchg pop jae aaa cmp iret repz arpl lods ret in leave pop mov loopne add push push xor add xor nop sub push cs sbb push dec or ret cs xor sbb add push or add pop add or inc mov inc sub mov leave int lcall inc popf scas push call cmpsb icebp mov cmp pop (bad) cmp cmpsl jmp test gs fbstp popl mov xor cmpb push fldl mov jno adc mov scas rorb xor addr16 aad or (bad) aam (bad) pop (bad) lds fstl cmp test sbbl mov push sti lods xor scas mov bound lea in sbb xchg xor nop movsb add (bad) mov push rorb repz add cmp addr16 push add cmp sbbb push jecxz push aaa cmp jge cmp jge mov sbb arpl mov (bad) ret fdivl je jns fwait ja (bad) pusha sub jge into jae adc (bad) rcr fst xor or loope add xor dec ss cmp inc (bad) test cwtl push scas sbb sbb lret clc fimul gs push mov jne mov (bad) clc cmp sub stc inc mov jg cmp jl pop pushl add or mov or fild in jbe or mov adcl and aaa scas adc lds mov mov dec jl mov dec or fmuls call js push push push test sub lods or out add fnstsw int3 jmp jl loopne jnp loopne,pn mov ds mov mov aad mov jb xor sub and inc or adc fisubrl jg inc ret dec in popa xor pushf sahf pop int3 or jns roll aas pop dec les xlat ljmp pop add add and dec daa xor jnp hlt movsl jne mov call add jmp loop mov pop mov adc add scas and cmp or xchg insb pmulhw ret xchg pop rcrl pop and add cld dec outsl sbb adc xorb sbb jecxz loop sbb gs adc inc test nop dec mov adc pusha inc push sahf push xlat mov cltd push nop movsb inc inc mov dec loopne sub sahf ror ljmp jmp sub pop xor ja sbb adc addr16 add loopne cmpsl xor subl (bad) rolb adc dec xor dec orl and dec xor shrl sarl adc adc dec imul iret mov xor loopne sub and jbe jne fnop or jo add loopne push mov mov sbb mov mov movsl mov subl shr jne mov sbbl mov push mov loopne mov push (bad) test jnp test push adc and add cmp in cmpsl enter add shlb ficom push push mov pop popf push cmpsl push arpl jbe adc dec push sub test je mov adc ffree add and mov push push and push ja dec sbb loope push xor (bad) lods xchg cmpb mov adc mov or mov int or push (bad) in push mov sub addb sbb adcb cmpsb push adc mov in (bad) mov pop inc push movsb jae aas icebp imul hlt mov and or movsb jge adc decl pusha jns dec jmp movsb (bad) mov das dec lock jmp push js data16 sub pop mov dec mov pop pop or (bad) aas in sub jno lock (bad) mov sbb dec fwait pop cli push mov add lahf sbb dec cmpb je ret adc daa fcoms stos pop imul es adc push frstor cmpb inc lahf mov pop dec movsb and test inc dec pusha inc data16 adc fs nop and sub lret sub jns dec nop xchg repz jo add adc stos (bad) mov outsb cmp sbb push loopne mov adc jmp bound pop add sbb outsl popf insl rclb das inc inc sbb pushf xchg int cmp rclb xchg loopne adc push bound test stc lcall adc xor or inc aaa mov add notb fmul or adc mov mov test test mov outsl xor cmpsb add pop lods in mov aam leave lcall cmp sub xor movsb negl adc imul repnz movb lods jge sub subl and and pop aaa cmp sbb xchg and fdivrl nop (bad) adc jnp stos daa push mov mov mov pop mov mov dec lods sub mov and push roll adc mov and jbe sub cmc or mov add and mov fwait push data16 das shll jne fistp sub add mov orl cwtl mov loopne xchg test inc cs xchg daa clc fist jne cmp fistpll mov jmp cmp and adc lods mov push mov push add or push (bad) xor icebp adc dec xchg fs lea js andb pop ja test mov daa jo or imul es aam cmpsl cmp mov add push pop mov (bad) jno loope jb pop testb xor lds mov mov cmpl push mov push fimul adc dec ljmp testb in jbe incl aam scas pop inc jg jo cwtl imul sub add push sbb cmp sbb (bad) test out mov cmp imul add mov lods pop sti or icebp clc and or scas and jg xchg or les sbb push dec dec and ficoml dec loopne adc inc push adc jb xor xor cmp je sub push xorb add adc sbb or popa or or adc insl add (bad) sbb cmp sub pop inc sahf sbbb jle popa (bad) push paddsb or mov enter jmp adc and dec jg lret xchg cmp push push push mov sbb sub arpl pop dec rorb dec andl icebp in negb lea lret pop push jo ffreep movsl cmp test add dec cltd gs dec inc jne jo std push push cs (bad) loopne dec and cmp insl add insb xor cmpsl dec xchg andb dec and test rorb mov test add mov rolb or push and movsl jmp or dec push jmp jmp daa push lcall mov or inc cmovne mov lea push jecxz mov cmpsl movsl xlat push shrl dec maskmovq (bad) mov pop inc sbb mov sti inc mov pop cmp mov fisttpll iret clc and movsb pop loope jmp mov adc push push sbb xchg mov and adc (bad) mov lock add rcrb addr16 int (bad) repz pop js dec ficomp cmp add jnp loopne cmc inc hlt out inc and and mov sbb jmp mov sub sbb inc or and (bad) setbe cmp jmp movb cmp popa or rcl popa out repz adc push pop nop (bad) xchg dec add sub dec xor or mov lret xchg js mov mov push xchg add xor and adc push mov add add mov adc cmp data16 lock adc mov mov mov cltd ja aaa xor mov or stos mov dec lcall mov (bad) xor and push scas xor pop test scas inc dec push rcrb mov adc jecxz adcl sub jmp pop repz in (bad) jp hlt fistp in lods and sbb jo xor sar lret lret or (bad) pop push cs jl mov sub inc or inc cmp cmp stos adc ror sub mov arpl add push dec cmp xchg sbb mov aad ja (bad) mov (bad) adc push pop popa jmp inc clc inc inc and and add xchg mov mov or mov and jbe adc movsb cmp leave iret adc mov dec mov les inc cwtl rorb inc xor loope dec mov pop enter jg jo cli cmp pop pop daa cmpsb pop pop push mov test adc add jle add call add fs and in ja mov adc sbb add or adc sub lock aas popf cmp xchg fild add pop push mov xor or sbb jmp adc mov bound aam cmp ja sbb je sahf orl ja adc insl or sbbl sbb push outsb xor or mov jg (bad) into adc push jle jnp and sarb push add jae adc jnp inc jnp sbb jmp push adc or lahf lods inc bnd pop mov sbb daa nop mov inc gs adc inc jae (bad) in or ss movsl sti ret mov mov int dec add dec mov jno mov push cmp fs and sub push mov inc xchg inc fcmovbe mov les into loopne cmp push (bad) lds fcmovnb daa push mov and push adc and adc js test sub adc sbb push aas or dec inc pop cmp inc pop sbb xor or cli sbb xorl ss dec (bad) les ljmp loopne add dec xchg pop fmuls in iret adc or push (bad) cltd movsb dec js xchg (bad) mov nop (bad) ret and sub cmpsb jnp ja pop jns,pn xchg cld cmp inc mov push push fiadd mov dec xchg arpl frndint fs xor out pop inc xchg pop sub loop push sbb and push ja daa adc push xor dec jmp bound inc push iret push xchg adc xor aaa hlt xchg or inc (bad) loope jge outsl fldl mov lock dec and mov or xchg pushf mov xchg push jb xchg call mov es and cwtl xchg inc adc test shr inc pop (bad) mov xor fbstp lds aam xchg and mov outsl pop outsb test (bad) sbb adc pop sub pop dec cmc test pop xor xchg dec sub lods jp dec dec pop pop dec push dec jbe lret gs push push xor es andl jmp xchg jb adcb push push jmp cmpl push mov test (bad) dec pop mov lret mov aas loopne cmp jnp mov daa add xchg push xchg lret cmp faddl test add mov es roll jbe cmpsl sub scas loopne pop imul dec xlat mov xchg aam sbb ja add shrb xchg stc lea popa mov xor test lods push jmp pop sub in pusha xchg jne daa sub or jno pusha adc add enter cmp hlt sbb rclb pop inc xor xor mov mov add je les fimul rcl xchg dec inc mov dec jecxz movsl sbb or call push loopne or test nop lcall aad xchg (bad) xor mov gs sub mov insl outsl fsts sbb pop dec or icebp pop sbbl adc (bad) cmp inc push mov out and test cmp dec (bad) mov mov (bad) loopne sbb jnp test (bad) (bad) int adc and clc es int3 addr16 xor (bad) je adc repz fidiv nop cmc jno and xchg outsb cmp rcr dec and jb cmp fnop adc jne scas inc arpl mov pushf dec xchg xor adc push dec xchg adc les push pop ret jo mov aad cmp mov xchg repz push fs xlat (bad) push add cwtl icebp xor xchg pop sbb jg xchg nop movswl push push or (bad) push arpl push das mov mov push add fwait popa (bad) shr cltd or push sub inc inc inc movaps jmp cmc jmp leave loope (bad) test sbb push xor and and insl ret mov out push inc cmp ret or bound into inc ss mov (bad) fdivs insb inc cmp or push or adcl rol pop rorb jle add xor jo push cmpl xorb xchg adc xorl dec adc cmp or pop cmp mov xchg frstor fs inc add adc sahf inc cs or sbb or pop daa insb test fmuls inc jge adc std sbb fdivrp mov std xor cltd dec into sub or jo ret rcrb addb or jae cmc inc fidivrl sub or push cmp arpl adc imul jg mov inc sbb sbb mov cmpsl add (bad) imul jge ss jle hlt sarb sub mov je sbb push adc bnd inc pop fadds stos repnz outsb add sbb adc jle or and mov cmpsl (bad) mov aad push popf xchg mov xor xor dec sub incl jmp sbb test xlat dec (bad) je jg cmp sub addl lea add adc mov (bad) xchg push subl inc add cmp xchg push sbb jmp xchg dec in int3 adc sbb inc adc adc mov pop pop lret setbe inc loope insl movsl pop iret insb sub mov mov mov add movsl jne (bad) jo test scas fmul fistl enter aas mov int movl xor adc or xor cwtl sub popf jmp nop (bad) and in mov jno cmp test sub fcomps jecxz sub jne hlt loop fnstcw mov or loope mov mov addr16 xchg inc (bad) xchg inc add push imul cmp add push mov cltd (bad) or je test dec dec decb rcll xchg mov push call push mov mov movsb out clc push or cmpsl bound xlat pop sub add inc adc push xchg incl ja orl rorb push nop mov and cmp out js imul enter out mov movsb call push xor cmp push or add sub jb pushf xchg (bad) xchg rorl add pop push lock cmp (bad) (bad) sbb inc mov and outsb faddl sbb push jae pop xor adc cmp xor addb and out sub inc out dec sbb push push rclb mov sub push subl in cmp mov dec jl sub dec rolb pop adc pop sub add pop mov mov aam incb xor inc or dec pop test (bad) ss mov xchg or sub mov or pop jle add dec pop popl adc ret addb and mull pop ret xchg sbb cmpsl aad and test cmp lahf cmp cmp test fmuls or jns in bound std xor push pop nop cmp movsl test dec pop mov xor add out jmp jns decl adc aaa (bad) aaa pop test mov jnp pusha mov pop je rol movsl fsts sub cmp lahf inc ss push push push sbb orb sbb sbb mov in dec lcall push les loopne inc mov fsubs xchg rclb outsb loopne dec adc dec push jbe xchg data16 jp decl or je or cld jo fmull add lea mov shlb pusha leave jmp fnsave (bad) cwtl jmp dec sbb or cmpb push leave push (bad) mov dec jle add sbb sbb (bad) test push xchg pop lods jo mov sub js xlat and pop add test loop addb stos daa xchg dec add sbb (bad) dec mov aad and hlt stos imul in fs inc loopne lods push lods mov adc or pop nop mov or (bad) aaa cmp inc pop call adc xchg push dec sbb add cmpsl xchg adc xchg inc les push jo and jne arpl pop jle paddb dec icebp and imull mov pop add dec in mov xor cmp scas push stos movsb xor leave or das mov cmp (bad) xor rolb adc or xchg inc pop fsubs or cmp dec add dec sbb inc sub add andl mov in dec xchg mov or and fisubr sub enter ret mov call fnstenv cli testl fild xor mov dec sub push sti push pop add inc stos or pop push adc shrb mov adc insl popa and out jne xor daa mov push xor or ret sahf push loop push icebp push dec jmp pop xor cld add xchg sub xchg leave jne or enter and loope rolb push and inc sarb xchg xchg cmc idiv adc popf push push or mov mov mov xchg mov xorl xchg (bad) xor xchg pop pushf outsl mov or xchg mov push adc hlt add test pop sub xchg mov and mov cmp sub xorb daa int cltd sarl xor mov mov test push mov jmp cltd jecxz dec cmpsb xchg inc pop inc decb sbb mov pop imul cmp rol mov das icebp loope into sbb mov pop orl xchg or add inc mov sbb xor inc xchg in add imul mov add roll push inc cmpsl imul add mov jge leave adc inc inc xor sub sbb jmp and iret cmpxchg add mov sub shr mov and add test enter cmc dec add mov add mov les push jbe imul pop testb mov stos mov pop in push sbb mov or push sub xor push xchg lret xchg inc andl aad jbe iret call ja inc and ret pushf scas inc cmp ffreep inc push jp push test je mov add rorb (bad) fstpt call push adc mov (bad) fiadd cmp call popa push cmp gs cmp out (bad) sub inc inc sbb add pop pop xchg rolb dec cmp movsl adcl sub sahf mov xchg and dec rolb cmpsl push dec xchg xchg push mov mov or dec pop shrb and cmp fiaddl sbb push movsb push add in push and sub add push sbb and imul mov mov ret sarb aaa pushl pushl fimull test jbe int push mov push cmpsb lcall jecxz outsb lea adc add jo inc add add adc pop jecxz fmuls ret lret and je jnp dec jo adc aad cld push xor push pop mov or mov jne enter enter push cmpsb inc rolb sbb leave (bad) popfw daa shll push push mov cmp pop les dec mov mov add daa (bad) outsl and xor xor xor dec ret mov (bad) cmp jl aam leave leave add mov outsl aas inc adc mov das (bad) inc movsl adc (bad) and popa and push xor mov sub mov push push mov xchg jns arpl or push mov add add rol addr16 xor sbb jo mov addr16 add or pop jmp iret inc lock pop enter dec mov movsb mov push ja push xchg push pushf out jo in ret shrl gs repnz ret push add in and mov sub add mov push push call lds mov push mov nop fdivrs mov in push leave addb push setnp (bad) lret pop in sub daa pop lock ss mov mov cwtl sub push xchg push ret push add push xor cld addb aas or cmpb mov movups flds adc je adc andb xchg enter test and and sbb sbb sub pop or mov jae es add cmpb xchg mov inc popa xor add out mov lret or add or and jmp sbb mov cwtl (bad) hlt push push in sbb add adc inc xchg and sub sarl add push dec xchg push push add xchg jl inc lret sbb lock es dec sub adc adc add and sub cs adc push xorl sbb shl mov out nop fdivrs inc ret gs xor adc xor daa test lods sti push into add xor or aam repz test push pop fnstcw push inc sbb pop enter xor push sub inc mov lock jo adc dec push fwait pop and cmp jb cmp dec inc ss insl leave cmp sbb cs cs mov in cltd dec inc inc lds mov inc scas in shlb add add test add dec jo out inc add les pushf mov sbb push pusha std test jbe mov pop ret jae mov mov imul (bad) mov shrb pop sarl mov inc js sbb ja jp mov xchg inc or jg addb dec adc ret adc adc xchg outsl add call push pop mov and dec cmp jb iret cmpsl mov add dec (bad) push mov mov or ror adc or arpl test jns dec adc mov fildll mov push lea inc testb jne inc adc pop rol sti mov xor xor adc or iret ja test xor int3 push pop cmpsl add adc mov mov (bad) dec inc xor ds (bad) dec pop xor xchg pop dec jae mov pushf add sete (bad) aaa fisubl sub and xchg or fwait add imul or ja jne pusha int3 pop push inc roll pop push dec sbb daa je js mov mov (bad) mov int3 (bad) in add aam sbb mov sbb xor and lcall and or pop loope jns loope test frstor cltd fsts adc rol hlt and fs cmpsl push data16 pop lock ja jl inc orl add xchg inc cbtw adcl mov sub call je push fwait cli jo push int and mov mov inc sbb or imul sbb push adc jge xlat les jo add es lcall mov inc imul dec dec movsl in sbb mov pop cmp adc into push inc cmp mov inc dec adc pop test dec push push adc sbb loope mov fcom mov xchg ja or popa cli fidiv lock jo pusha lea mov xor and adc add xor push fs and getsec xchg or cmp es outsl adc mov and push int3 (bad) add cmpl lods daa js lea jne adc daa push add sub into stos jmp push or andl cmp andl mov pusha push push and daa mov mov xlat xor pop in fwait adc xor add test shl xor and aas in dec push or dec aam out dec adc push add xchg cmp sub pop xlat outsl sub push aaa xor xchg cmp sbb push pop or mov mov and jbe rorl cltd adc xor inc fsubr pop pop sub enter adc xor test or xlat das inc loopne add fs aam or xorps or mov cmc mov loopne cmpb jne imul roll and add pop pop loopne adc add mov inc ret cmp popa adc test xor sbb adc popf jne xor sbb push daa das fsub mov push xchg movzbl jl das inc jmp fwait inc shlb dec fiaddl sub fs add dec or popa xchg insb call imul push xor std fisubl (bad) pop dec push jmp add add addb dec sbb cmpsl das enter ret mov push mov lods pop mov (bad) test js orb mov add and test mov rol push test sbb dec dec mov xchg loopne adcl (bad) sub or dec push stc inc mov mov adc push xchg pop addl loop or xchg es insb popf and mov mov sbb aad ret (bad) jne loope push mov and negb pop addr16 mov mov or les or dec les pop add pop pop xchg movsb add test cmp inc dec fcmovu cwtl mull xchg xchg in xor scas inc int add cmp mov cmp pusha add or mov xchg push add pop pop cmp outsl mov jl lods mov sbb insb test mov and cmp pop (bad) leave mov scas mov (bad) add push sti mov lcall inc loopne test push and mov add or gs adc in ja mov sbb (bad) or and dec ja or xor pop stos sub addl mov jae mov adc pop xlat mov nop mov addb xchg or pop pop push push (bad) mov mov push enter push mov cmp sbb das inc add push pushf (bad) inc ds inc fstpl hlt inc fcomps add fidivr push dec icebp fldcw push out push test shl lahf data16 lock in (bad) inc adc lahf call addl add add scas stos iret imul lcall in jns out cmp jo push call and jnp repnz mov nop push mov movl nop pop pop sub and add jb and adc adc and push dec adc divl mov loope sbb add adc pop dec jns je dec dec movsb scas es enter lcall xchg or jmp mov inc sbb sbb fwait or push pop aam cmpsl loope into fsub jo add mov and repz repnz push jo js out cld inc jo or sub inc es negl adc lds cs or mov mov add sub repz dec scas xor dec and mov mov mov mov and pop ja aam or mov aad xor fwait cmp and push ds and and inc inc mov nop inc inc mov inc cltd add add andl add lds cmp cmovnp test mov push or (bad) (bad) push les inc dec or mov adcl dec loopne inc (bad) fimull push lret inc or jae dec jl scas dec faddl call fdivs fldt test add (bad) cmp push adcb out insl xchg sbb inc mov inc or stc inc out inc loopne push pop mulb push push cli inc pop xor xor je mov arpl mov xchg outsb push push adc pop sub pop xor popa fisub mov sub push xor jmp pop add test push loopne fcompl or inc les jmp xor or xchg xlat pop sbb adc clc (bad) icebp mov jns mov icebp pop or mov sub inc movsb test inc pop push or jbe out testl jge js jae movsb lock cwtl add cmp adc push adc mov and cmp add mov setae mov add pop pop pop pop sarb sbb sbbb push mov in mov mov fadds mov addl lods cmp mov cmp movsb pop xor xchg and test push mov (bad) fdivrl xor inc pop (bad) sub mov or orb mov cld push mov lret jecxz push out sub imul mov mul inc cmpl mov cmp fadds adcl lods cmp pop push dec push mov pop sahf lcall lret mov (bad) movl lds loope and rclb adc or cmp (bad) dec rolb das add mov adc sbb out inc or aaa test mov adc mov xchg mov jle xchg nop or push or pop jae pop xor jecxz ss das lret push sarb cmp adc scas dec ret lret or mov loope jecxz mov je out or xchg gs mov jge mov pop sub cmp mov cwtl adc iret xor (bad) in xorl or out or test xor stos add mov les enter jno test and cmp incl mov add pop cmp sbb xor test jo mov (bad) xor sub and adc sub sub and push push xor pushf adc push outsb in aad imul fs dec andl mov sub iret movsl rcrb mov clc pop je hlt push mov dec (bad) leave mov pop stos (bad) popl add (bad) xlat add xor add push add movsb inc hlt dec mov pop cmp sub sub and add add or clc addl push and sub and ret aaa pop mov (bad) fmull or loopne mov xchg (bad) rcrb lret add adc inc insl push sub sbb or or subb ljmp push rorb adc (bad) loope cmp insl xor (bad) ret pop jno and leave inc push rol lods adc adc mov data16 dec mov loopne mov aam not and ret mov unpcklps mov mov push ja cmp mov pushf pop jp jp xor das dec and and dec xchg lret cmpsl daa sub pop fadds (bad) sub mov or getsec loopne mov nop cmp adc add repnz sub pop test daa add enter jb mov inc xor jle add inc or popa dec or hlt sets jo pop push push stc push cmpl (bad) ret arpl push sbb inc adc cmp sbb lea xor ret fimull stos (bad) bound pop xchg inc push adcl repz or mov lock pop mov sbb sbb add add std or loope outsb xor add mov xchg adc xchg jecxz addr16 and fsubrs (bad) je jae push mov pop sub fisubl (bad) xor push cmp ss jnp pop and mov add lret cmpsl xchg ret dec or fadd xchg in mov pop mov push test pop loopne add jge mov mov sub jge dec test imul push inc cwtl cmp inc inc loop (bad) fnop lahf fidiv outsl mov das cmpsb lock push jle push sbb cld mov (bad) pusha repnz push ds jae push das cmp rclb xchg lock or or dec ja stos or inc and pop adc sbb xorl xor cmp lock lea loopne lods sbb lea xchg jge mov xchg sti adc inc pushf arpl fist (bad) push mov mov mov call call inc or movsb insb sub fild push xor jmp jecxz addr16 or and in or (bad) pop mov push dec sbb ljmp (bad) push add in and rclb mov or and dec (bad) mov insl arpl inc les mov cmp mov pop push add xchg sbb ja sbb dec push xchg mov add leave jmp mov add push add rclb fcoms lods icebp ret stos outsb sub jo sub add sub aas and ret lret and pop pop mov mov lods dec cld adc pop popf cmp arpl out (bad) (bad) aaa xor sub cmc in (bad) mulb adc add xchg shrl mov lret cmp ss shr (bad) add fild lock mov and mov cmp mov xor in int3 inc js push in out incb daa dec dec or push push push rorl in in inc sub orl cmp ret inc testl popa ret rcr sbb arpl xor push jnp je cltd push inc daa jle mov push es xchg call adc int aas dec fldl pop rorb addr16 xchg lods inc andb data16 push lcall add mov (bad) enter add mov push jl and dec loop je pushf fadds xor pop jne mov call push dec lahf or xor popa pop das sbb (bad) and jmp push lock aas push mov pop sub pop sbb loop pop xchg or push shll lock ret out test mov aaa and xchg add mov and pop ret dec ja scas dec jle js jne dec xor (bad) loopne cmc (bad) repnz ret jb in adc xchg or test lock rcrb push mov mov add add insl sub testb push dec clc sbb aam jmp sbb inc iret and jb ja lock insl cld sbb loop je and mov and nop dec cld sub adc decl pop (bad) or pop push mov addr16 push jo nop les inc movsl xor pop cmp mov les jbe dec dec mov inc pop into push out arpl mov adc mov adc addl clc cmp (bad) or and mov aas xor mov test inc (bad) nop pushf ret lea dec add adc sbb xchg cmp fmulp cmp lock adc jecxz test testb ljmp ret dec cmovno test inc es or in imul xor pop inc inc xor iret sahf push lret jne popa pop es js cltd fsubs push mov loopne lcall (bad) add mov mov xchg fidivl inc push popa push cmp (bad) iret mov aam gs mov jecxz popf scas in mov mov and ss push loope js in xchg jne fisttpll jo arpl pop cmpl dec fidivl add add cmc loopne jg sbbb cwtl js xor pop jb ret push inc jp add rorl movsb and dec sbb jp ljmp sbb sub ja addb inc in ja loope or imul inc dec aam add orl sahf pop and push mov das (bad) or or add rcrb or add pop mov pop cmp sbb roll xchg outsb push enter sub gs movsl lds pusha sub loopne cmp dec sbbl xchg pop add (bad) jmp inc pop je (bad) fimull fcoms xchg mov roll and push imul movsb in enter mov or push adc adc mov or add push iret push or andl mov pusha push setp or popf mov xor dec pop xor cmp ss or inc push push sbb lock or dec (bad) mov or xor xor dec push push test xchg jo pop (bad) je pop inc (bad) cltd mov push or daa mov inc mov orb nop jne (bad) sub insb inc inc push mov add fs add pop mov hlt enter enter add mov dec xchg lock or pop movsb clc inc hlt push imul mov add data16 rolb add push hlt nop mov or sbb jecxz sub loop add cltd fcoms mov jno inc sbb mov loope scas adcl inc arpl and js add repnz or mov (bad) dec add add movsb rcll (bad) int mov xor jb mov jmp xchg and fadds inc push adcb and (bad) stos adc (bad) sbb xchg inc ljmp or adc push sub mov shrb das pushf shr and or lds es imul loopne rorl roll pop cs test sub and xchg or pop leave push mov mov sub inc popf sbb in je mov inc mov push inc movsb call or iret or movsb out mov push sti inc sub (bad) jns and adc jl add pop mov xchg dec pop and adc sub es dec imul xchg (bad) (bad) cld push repnz cmpsl sbb nop jnp add cltd adc mov adc rcrl cmp shrb inc test adc aaa pop sub mov add nop pop add inc dec and enter and push sub (bad) out mov add xchg lcall mov adc or dec push adc jnp inc rcrb cmp sbb outsb adc lods pandn in push xor inc out push or inc inc cmp xor shr cltd inc push xchg dec push and dec call or pop and insb pop mov push rorb rol (bad) das sbb xchg mov lea adc cmp add push out (bad) add movsl sub addr16 and mov inc inc inc push jns aam (bad) std push lods pop enter push cmp mov add daa adc cld cmp or and dec xchg inc pop add add xchg xorl imul inc adc xor scas inc push or xchg or xor dec loope inc loop loopnew test dec (bad) or xor xchg in add mov and repz mov or xor or outsw das lods xor sbb mov and pusha pop fmuls jle sub xor adc add add add cld notb insb das push fsubrs dec int les out push testb ss dec push cmpsl pop and fild popa mov aaa mov nop xchg inc nop or nop sbb push nop jge push pusha and or cli push xchg adc outsb pop inc lret mov and cmp adcl gs nop push (bad) std cmp insb imul mov cmp sti sti push mov clc fldt out adc jg push sti xchg arpl or push jo jle jle jo adc cli hlt jle test insl push or xchg mov stos adc test stc divw js fnstcw insb dec mov xchg mov imul xor std or xchg (bad) cli je das imul mov aam popw adc cld cmp (bad) loope jle adc shll hlt jl mov std popf rol cmpsb mov and mov and xchg mov adc jle fistpl test adc out adc mov mov jle push add stos jle adc inc rcrl js stc lods jo adc lret push rorb inc lods jo hlt dec std mov mov jmp adc std mov mov sbb adc jbe dec lock loope add ret xchg hlt jns pop lock adc mov test or mov lcall add sub adc and ja jmp jo xchg ret cmp cmc shrb add imul mov adc jo jo insl icebp std out sbb or mov jmp dec repz imul add fild lods xlat adc sub or jno sbb mov cld fnstsw lret and mov jo fnstcw jle in cmpsb dec push sub and das adc pop outsl sub adc std jae sbb daa popf jle loop inc fs out scas add xor test daa aam loope xchg iret mov out lds pop cltd sub fsubrl es pop pop mov jl push pop lret xchg rorl mov or iret mov sbb lods cmp pop cwtl xchg mov cltd fstpt (bad) xchg mov (bad) adc adc outsl lock mov mov push adc call inc mov incl mov xchg mov or and adc add jno add divl cli mov ret xchg sahf outsl test out jne (bad) fxtract (bad) js (bad) std xchg xchg adc stos pop jbe lret jecxz repz adc jecxz (bad) ja xchg cmp orl add loope jle add mov pop js nop js test sbbl mov xchg scas iret scas int pushf out lods xchg adc adc xor xchg iret mov pop dec add ljmp repz jne mov dec mov sub pop adc pop fcoms int sti (bad) mov cmp (bad) jo cmp clc xor inc rorl or mov leave mov mov adc fcompp sbb add stos lcall insb arpl pop add lods mov aaa in jg mov mov clc cmp inc rcll sub in jb fcoml sbb fistpl ds dec jbe inc push adc (bad) push and out js sar call jg ljmp addb jo aam adc jnp push xor or mov push ds xchg push enter mov and ffreep stos or jl sahf lods add fild loop imul enter aaa adc subb adc out and inc (bad) jecxz mov inc dec jae cmp test clc pop ret cmpsb jmp jns (bad) sar test mov aam adc stos aad leave mov mov subb ret pop addr16 adc pop int3 cmp sbb int3 cli ja iret jg xchg sti setae sbb frstor push adc lret adcb (bad) aas lock or cmpsb mov pusha in adc mov adc mov movsb repz icebp jmp out mov sbb lret loopne in repz mov out pop mov cwtl push dec out adc es in sbb cmp lret notl lods adc pop stc std sub ljmp ret adc aad outsl mov (bad) adc adc sub hlt adc mov lret outsl inc lock add jnp adc loopne ror and adc std push sub popa xor bound fbstp push (bad) (bad) pop sbb pushf lahf (bad) sti push rcr cmp fildll pushf mov fistpl cmp cmp loope jmp push out hlt fidivrl xchg add lds pushf pop adcl ficompl pop rcrb adc cmp ljmp mov mov cmpsl out pop js ljmp test pop in clc sbb fdiv mov adc stos push push testl mov out jo xchg lahf jge mov jg mov negl loopne xchg pop pop lcall add ja cmp lock test mov aam popa or outsl cmp or xor out jmp cmp sbb js add in adc les dec sub cwtl jae inc mov mov dec out outsb cmp popl adc mov lret scas jne insl xor cmp or fdiv lods mov or xlat jmpw or or cmp dec popf ss inc ret push shrl jge fistl xchg negl jnp and loopne stos cltd pop push sahf push sub in cmc dec push inc shr sti cmp lret es iret add lods mov add ret daa bnd adc or pop mov cmp dec pushf and sbb adc mov ss sbb loopne mov addr16 clc xchg inc rorb adc stc mov xchg mov lods adc addb or hlt pop cli push pop testb push dec loope mov sub or adc outsb ljmp and data16 ret lods add mov in mov jno adc mov sub aaa std lods pop stos in add les ret dec aas dec leave cld out ret bound ror leave xchg outsb mov jecxz (bad) sub in fistpll push call dec xor (bad) jo inc pop enter pshufw clc dec mov sbb adc xchg ja jo jmp pop stos lods aam pop push clc cmc iret adc add je ret aaa lods outsb stos inc mov repnz push outsb pop lea popf mov mov jl fldl xchg add and sub (bad) lcall seta cmpsb jecxz or mov mov inc js loop jl data16 jne fcmovnb and rorb sbb movsl out subl adc push dec shrl cmpsl add stos lcall xor adc lock sub push jmp clc mov leave jge xchg or mov xchg ss ljmp inc das and (bad) sahf test jle frstor adc adc iret mov cmp sbb arpl (bad) push sub xchg mov cmp mov loopne adc iret out xorl dec jo push cld xchg lret mov dec push cmp push cmpl mov aaa addl jo nop xchg inc cmp loopne sbb mov adc hlt jmp fcmovb data16 lret inc hlt push popf lods fnsave and cwtl push or xchg outsb or imul pop movsl mov push mov sbb cmp (bad) ss int3 lahf ja jg ss insb call cli stc cmp call stos adc or add mov jno or inc push fcomi push sbb jo hlt ja adc adc clc cmpsl loope add lret mov adc div stos add mov imul mov jae out (bad) fucomi xor sbb or inc in push mov sbb adc jl loop sahf imul jne test in lock pop inc shr and and rcrb fstpl frstor mov adc out jmp mov fdiv push cmpsb pop push icebp dec sbb pushf shrl fsubs scas in xchg enter (bad) jecxz sub jns or xor fnop mov (bad) or push ret push cmp (bad) loopne jg hlt incb hlt outsl cmp or daa jmp push xlat stc cli rcr push ja adc add and in mov not repnz xchg aam add mov loop lcall lret pop fucomp outsb lcall xor jo pop adc aad sbb mov pop lock fimull lods mov pop mov xor jge outsb fildll mov inc mov inc mov fwait outsl data16 or push adc xor xchg dec mov iret (bad) mov mov pop testl mov sarb cmp mov orb insb ret pop and clc mov sub or mov lea xor pop adc arpl test push cld xchg fistl cmpsl pop stc jl or mov sub adc lock sbb popa stos push pop jge sti stos daa inc jbe incl iret add mov addl mov jbe js movsb cmp stc nop cmp nop and cmp in mov push sbb clc sub lret lock jle add fbld bound dec xor inc add add lret mov idivl loopne add mov adc incb (bad) adc push push mov jno dec bound loop js aad stos push mov mov call enter add outsb cmp adc shlb adc data16 mov icebp hlt adc sub fisttp sbb jmp xlat cli add lret subl jo out dec mov push out or fld repz inc lret pop xorb add rorl test inc pop adc inc mov pop pop mov add or lods stos adc (bad) xsaveopt neg adc pop dec lods sbb jns notl mov jmp leave out ds push loopne adc test mov sti cmp repz mov xor sub (bad) sbb rcl daa mov inc sbb cs mov push cli sbb dec decl adc clc cmp stos lock fistpll mov xor mov ss push or xchg fldt add in jno (bad) mov js xor (bad) or pop pop and mov inc xchg xchg adc sbb lods lahf mov test adc cmc (bad) jmp jmp hlt cmpsl adc sarb mov rcr ljmp adc jg call sub mov les in cmp mov push xchg add out cmpsb pusha nop jp xchg imul jle fmull adc cmp loop or pop xchg adc jb lahf cli push mov cmp pop mov icebp jne setp xchg aam push gs gs out daa (bad) mov ficomp ss rclb sub add sbb xor (bad) call or or push cmpsb js (bad) xchg sbb pop xor loopne pop sub cs mov pop movsl sub (bad) lock jo insb cmp (bad) mov push mov fmull cmc ja xor stos mov mov loopne jle add push loopne scas and popf call mov adc lret adc roll push fwait adc stos jecxz jne add mov jge jle mov mov loop inc dec jmp pop mov outsb add out add rcl jnp jo xchg cwtl inc push dec push cmpsl jns (bad) fs (bad) or mov cmp andb sub cmp adc or or pop aam pop lds (bad) enter and jecxz mov jp push mull shrb or or gs insb sbb lock lret sub dec inc orl lods fisub dec inc pop adc ja jbe cltd or lahf add (bad) out xlat aad xchg ss push loopne aas sub inc (bad) adc push jge and jmp pop dec sbb push push movlps sbb enter stos inc leave pop mov push dec jo lea ds dec jecxz je loopne and js fwait js dec lea jo clc das jo or scas imul test mov mov out shll das hlt cmp movl ret cmc cs sub imull pop sbb fstl mov fdivl notl inc mov mov aas repnz movsb mov mov popf repnz xchg mov lods pop push lea jbe mov lahf push ret sbb sbb test or or iretw sti pusha jno pop push cmpb add lods out (bad) ss jnp rorb add jmp inc les xchg jecxz into jb xor jmp pop pop mov shlb sbbl mov stos mov adc jmp pushf add xchg push add sbb sub mov cmp cmp cli push inc outsb mov stos mov lock (bad) xchg sbb ret mov push mov pop pop rolb icebp shrl sub push mov adc jecxz adcl mov lods in xchg (bad) fidiv das xchg sub mov sbb loopne or daa mov sbb ret push cwtl adc push rclb push jmp (bad) jmp cli adc or out jo add jo mov add adc dec jle push xchg inc movsbl clc push loop or mov inc cmc cmp das es jo fidiv cmova (bad) fisubrl jo xbegin pop cmp cwtl std adc arpl stc sub rorb xor je lret mov add (bad) and dec rcrb out jge pop cmp fdivrl pop dec and push out imul movups sahf xor shl adc lret fisttpl jo jge sub cli mov mov (bad) sar mov cmp xor pop leave mov ret stos mov dec cmp adcl jo out mov lds clc and or popf out mov inc ficompl leave mov and xor and out pop sub iret jbe sbb inc mov adc lret jo or gs or inc shrb push inc adc mov leave cltd and in (bad) sbb adc mov or int dec or scas stos pop adc lret xor fnstcw cld aam adc out inc jb pop jmp cmp xchg adc repz std adc mov xchg adc fsubrl imul loop fisttpl cmp sbb (bad) adc rclb ja test jp mov fldcw data16 add mov xchg popf ret (bad) add push xchg add sti sbb lea enter das push icebp sub mov adc push adc ficompl out adc sbb fisttp psubb loope mov sub mov adc cmp in dec popf jnp dec sub jae mov pop sbb sub xchg popf mov lahf sbb data16 pusha cmpsl jecxz xchg push xor or pusha mov mov stos adc lods adc cmp mov lcall and adc jnp clc push pop out movl adc mov jl int jbe add ret data16 rcrb inc push lcall dec movsb jns test or jl bound push or es cld and adc or fstpl xchg jo mov (bad) mov adc push adc inc xchg xchg test add cmp test pop cmp lret ds cli fwait inc call (bad) outsb jge adc jl bsr stc hlt jge mov xor adc xchg (bad) mov pop xchg insl div mov lcall mov xchg xchg aad fsubr cmp orl cmp adc dec cmp or push ja push push sbb sub mov popf mov fisttpll jl cmp mov cwtl mov mov sbb dec movsl push mov xchg in inc dec inc inc adc push mov adc jle cmp adc rcrl cwtl mov rol stos out (bad) int adc iret and in fldenv daa cmp hlt jne add test (bad) cmp loope push repz in (bad) adc les mov scas loope ret movsl xchg test cmp cmpsl call push test icebp adc cmpsb outsb push push insb adc cltd xor xor adc test (bad) dec dec xorl adc rclb test mov mov in in lods stos add add adc test jle or xchg frstor bound adc scas scas pop xor aas (bad) mov or sub lock aad dec lea and jbe jecxz ret je ret addr16 shrb add pop cli push or je paddusw rorl xor mov push jno movsl shrl push lods in adc daa inc xchg push call icebp adc sub jno xchg adc xchg jle iret sub mov push (bad) adc add sbb negb push xchg cwtl shl loope jo mov lods adc int nop fsubrs je cmpsl (bad) cwtl or dec adc mov adc adc into cmpsl lahf push and adc sbb icebp inc sahf lock xor out hlt dec in cltd scas inc xor adc dec push leave mov jle sub jl push sbb xchg or lods cmp inc inc push pop popf pop aaa and inc inc js je or call jnp pop adc movsb sub pop cs and sbb xor sub pop push aad jae dec or push lds lock adc ljmp fiadd xor jmp sti lods cmp jo adc mov adc and jno adc ja mov stos jbe fbstp shl arpl adc add mov stos inc adc push stc pop popf ret out mov fdivr fnstsw daa lock hlt test mov jns mov clc mov lahf sub add add shl cmp cmpsb jge xchg jnp sub sbb js sub fdivs add jbe sar add les adc cwtl movb pop or push or bound adc push sub cli or sub pusha (bad) xor push lcall pop fcompl xchg test repnz sarl jmp mov mov jle jge adc mov add mov dec adc or fcom mov sbb imulb push testb mov ljmp sarb sub daa aas pop rolb mov jecxz (bad) icebp clc cmp mov push dec push jl mov mov movl shll scas adc (bad) loopne pop and rcrl mov daa adc cmp stos xor mov xchg add adc add jle mov push or (bad) rcll ljmp inc pop push imul jle push mov inc mov xchg mov jo repz scas sbbb les fcmovnu lahf sbb gs lcall loopne sbb xchg cltd mov fnstsw call sub cmp js sahf adc mov adc pushf jl sahf fwait decl push es sti sub test or scas aas adc adc inc jp sub cli xor sub loopne fidivl stc inc jno adc pop add pop popf loopne rorb mov aad or mov loope (bad) jo movsb out push and daa leave sub or xchg mov mov lods notb or sarb jl sub leave push jp pop mov add sub in mov and loopne push mov add outsb add sti mov add mov xchg adc mov push and xor pop call lods xor and sbb or sbb or dec jbe aaa sti adc adc push sub fisttp subb adc sahf fiadd and aad in jae jae mov push or (bad) divb test loop sarb pop loope pop push sub jge add mov sbb xchg mov mov pop pop fdivl push jbe inc and lock xor inc sub cmp adc cli push push xchg loop adc nop adc push leave std adc cli in mov bound test mov pusha mov adc pusha adc repz adc pop pop adc inc adc popf lahf hlt jne pop std dec add cmp out or fisttp mov dec mov pop divb xchg sub push out outsb rclb xchg and dec or (bad) push sub sub cmp les (bad) push ret and pop mov paddsb sbb out daa daa into (bad) call aam iret mov lods mov dec nop jo pop scas lret pop pop mov lret ret push sbb sub push call lods mov jbe sub sub adc xchg cld rolb jl push cli jp push adc icebp add pop xchg inc mov divb mov fcompl sti or mov adc xchg adc clc mov cmp cmp or andl inc das jo mov mov adc and adc in sub adc fdivs mov aaa mov sbb mov nop cld mov mov cmpsb pop sbb idivl cmpsl xchg xchg mov inc sub mov fst ljmp or xchg mov add mov add bound jo sbb es adc in cld imul notl addr16 cs add rol jl pop clc push jp inc push hlt ja stos xor push outsb repnz lods sbb push mov in add push inc push mov scas adc pop sarb loope sbb mov js jp jmp inc dec mov hlt jns ret lock cltd push rorb fadds cmp xchg mov sbb mov adc rcrb stc inc mov adc adc push pop push or (bad) scas jne lock push push sbb mov int3 inc sar mov sub sub gs add push push mov jl jmp dec sbb jmp mov cmpsb add mov subl outsl adc add ficoml xchg rcr mov test adc dec sub ljmp cwtl jp dec addl in mov and mov (bad) sbb inc test xchg mov add push jbe std mov inc js (bad) data16 lds data16 (bad) aam out adcb xor outsl pushl dec cmp loope pop and add (bad) sub (bad) (bad) jmp int3 clc xchg mov jge adc or frstor das pop loopne enter xor divl js hlt jno push mov out ror mov sbb lods bound push jne insl rolb aas cltd inc mul add jge lret outsl lea lahf pop jg mov add jae xchg xor adc mov adc adc xor shl adc or insl and pop or sahf or cmp adc and loopne cmp push data16 stos sbb and jmp cld mov stc add mov mov test push push add loope out (bad) lock push sub or sbb xchg inc lea in cli test clc mov inc (bad) or call push jecxz cmp iret push add pop xor dec rep push lea clc mov lcall inc pop jmp cmp jg inc fcmovnu mov jbe mov mov push stos (bad) cmp jg jo or and (bad) dec dec add xchg call lock loopne add or rorb ljmp or or pusha add data16 shrl scas loop dec lods lock imul and or outsl insb mov (bad) jb or loopne mov rorb imul push cs xchg or cmp push xlat or cli adc sbb mov mov push adc adc invd add mov dec movsb divl push xchg adc nop adc pop sbb into mov push inc in sarl les and adc adc jecxz pop mov and mov es and pop xchg pop inc (bad) jp shr inc insl pushl push inc int3 cmpsl mov mov xchg (bad) lret (bad) (bad) fsubl mov ror adc mov es sub mov jo adc test rolb sub xchg (bad) adc pop dec in movsb mov jo push sub dec mov rcrb (bad) mul stos (bad) das loopne add stc les (bad) or xlat in out (bad) and dec mov jl rcl sub in add dec pop sub inc push fdivrs adc and xor adc lods hlt and xchg push xchg xor push and into adc jmp (bad) adc std (bad) das test xor lods push (bad) pop xor xor ret add and mov mov scas jle clc mov mov mov adc jns stos mov push cli mov shr lds add pop push jne pop fsubl call cs xchg push cmp push push and mov cmp jl popa cwtl orl std sti pop aam xchg aam enter fcoms mov or pop clc cmpsb mov pushf mov loop stos ficoml call cld daa mov leave pop mov out jp add cmp xchg or loopne mov push sbb push call sub dec adcb and adc or lods int jecxz jp cmp or inc and sbbl xorl sbb pushf add mov sbb lods (bad) aaa sbb cmp shrb cmc add xor xchg cwtl dec cld jbe cli xor push push cmpsl ret aas xor jae ret jo or jmp cli xchg dec pop add mov jmp jns xchg cmc movsb je push loop adc sub mov mov jge xor lahf int3 xor and and stos das std mov dec es movsb cmp dec add adc lods adc add cmp decl cld stos jp xor sub imul pavgw push rclb (bad) lods xchg clc adc movsl into adc push rorb push mov pushf dec mov xor std sarl jb pop inc out cmc popf sbb cmp and inc mov jmp cmp loope sbb xchg sub repz adc (bad) movsl add mov push jmp and inc lods push fdivl orb mov inc (bad) idivb (bad) mov out mov mov idivl xchg inc jmp into dec rcll insl xchg sti push out jno pop sub js xor adc sbb fnsave mov aas inc movsb add fstpt mov lods or sub adc adc loop jmp (bad) bound jo mov xchg (bad) ret mov loopne,pt cmp sbb addr16 loop jo rcll push subl xchg adc ret dec pop adc stos test mov mov repz lcall inc jg pusha into lcall test out lea js cs jae xchg mov mov int3 adc and aas or pextrw cli sti or repnz pop sbb adc sub mov xor div mov insb rolb mov pop or jp mov mov popa sbb adc dec jp stc pop add scas jmp in cs adc clc out push sub sbb cmp push ss dec loop aam pop inc lret or inc cmp jecxz pusha ret xor int mov adc test js and fstpl adc fisttpll in adc out or das popa sbb std les xchg pop mov xor nop pop push adc xor mov bound mov ds repnz cmp xchg clc add sti cmp jecxz lds test add test mov jo jbe (bad) loope or push add jecxz imul fildl adc pop sub mov (bad) out adc mov cmp mov loope jle mov icebp repnz pop inc insb cmp jecxz out mov rcll xor adc sbb dec mov and cli xchg xchg adc subl add adcl scas outsl les int3 test jo aas jl pop pushf xchg cmp jo daa sbb repz rcrb inc xor fwait icebp xchg adc cli and push mov sub jge mov daa leave jg insl sub dec (bad) mov stos rorb cwtl aas lea cmp inc push and pushf test imul add dec nop ss mov or nop sbb je inc xchg dec js jl mov insb add hlt jl repnz jl inc push and and push sub inc sub clc pusha aas hlt jb in js shrl cmpsl add add adc and push clc adc mov or xchg clc hlt add call stc sar inc js (bad) movsb mov aas cli outsb adc clc sbb sete jg adc or scas repz lods xchg loope test mov inc lods dec push jl or pop inc mov mov scas lods lds cmp test push call icebp arpl sub stos push movsl and xchg dec xlat ret cwtl in loop cmp stc jp sub xor push jmp out sub xor shlb pop push inc out out pusha pop inc push out sahf adc in mov pop push das xchg xchg mov in dec mov add jne xor inc push sbb bnd jne addr16 mov aaa jecxz sbb cmpsl sbb add sti or dec outsl push scas add xor adc mov inc inc or adc cmp cmpsl inc push repz add push lods cmp into and rcrl sub jmp cmp mov repnz decb loope adc inc popa and pop dec jo xor lods adc pop or out pop xchg (bad) icebp fsubs xor incb mov mov sar jb (bad) jne sub adc fs inc mov jbe aas (bad) push mov sub (bad) adc stc push mov adc adc fcompl mov xor or pop xlat mov or scas outsb cmp loope add adcl inc mov out pop jg scas test or adc and pop insb aaa adc and test dec repz test dec push mov inc pop xchg jg jbe fbstp pop scas mov movsb xor dec add cli mov adc add mov ret push daa cmp jmp sub clts cmp pop sbb mov iret test pop out jb adc rorb xchg or xchg mov into dec fndisi(8087 adc push out cmp mov push sbb adc adc es orl cli cld mov pop pop push das and jg punpcklwd mov (bad) lds push mov insl aam out adc xchg movsb movsl xor adc adc mov lods movsl cli push iret stos push or jae iret pop inc insb aam lea jp inc adc sub (bad) arpl cli int3 lret adc pop loope jecxz jnp loopne cmp adc inc lds sbb or and xor loopne adc lret (bad) adc dec popa pop adc (bad) mov or sub push test ret mov pop cmp in cli les test push adc fldl jne sbb out jmp (bad) and data16 lods inc cmpl xchg jo cmp std adc int ret jecxz stos cmp cmp adc loopne mov aam inc int add mov push (bad) adc aaa and adc paddq inc hlt push clc sbbl jl int add ljmp cwtl mov popf adc mov add popf mov scas lret inc lods jg dec test mov inc jge cmp addl cmp bound in add push jb sbb cmp push test cmpsb mov push or mov test jb sbb mov clc or xchg mov clc pop mov arpl fnop mov jl pop (bad) sbb cmp adc pop push and mov jmp and mov cs out xchg daa fwait lods inc das xchg add add je (bad) adc cld push jle sub add sbb cmp sbb lds push jg and jae test inc jns sub ret cli adc loope xor or (bad) mov pop repnz icebp movsb pop jne add lods (bad) push aam mov jo xchg stos lcall add and push mov cld rol or jns cmp pop mov and pushf ret std inc (bad) sbb rcrl push outsb cmp push (bad) or jecxz push push cmp add add sub xor mov rclb ret fisttp push add outsl (bad) cwtl insl hlt push mov jge xor daa inc xor or add xor stos or adc cmp and test adc imul lock call orb cs push or in sbb call cmp jo fild xor stos fistl add iret leave sahf jmp sub clc mov stos push sub js loope bnd add outsl pop jbe daa adc inc notb inc mov aaa add movsb mov add adc mov mov ficompl and push xor incl push sbb mov lods imul mov sti out pusha inc pop mov ljmp mov rcrb or cli xlat add xchg xchg or adcl mov loopne jle pop sbb mov sbb jle add ds (bad) data16 mov sub bound lea inc and sub imul mov mov jnp lahf push adc push sbb std aam stos xor add jo sbb mov sub or sarl xor in cmp jno in and mov xor mov aad jnp jno,pn push ficompl je inc (bad) mov add inc mov xchg out pop scas mov add mov mov ficompl inc xor inc and clc jno sub lahf dec pop stos fidivrl mov cld jecxz (bad) adc and jg adc jmp aam cmp xchg jb adc sbb and or push mov mov cltd aas adc and mov and shl popa test nop adc pushf dec icebp xor jmp xchg repz jl jle dec bound jmp ja out cli cmp (bad) frstor jmp adc inc cltd (bad) sbb sbb adc add mov jae inc (bad) roll jns mov sub mov (bad) sbb sub pop test sub sub sub sub frstor push loopne or add js sub sbb and in scas sub dec repnz inc lret dec sti stc mov jge mov pop inc xchg mov stc test lods pop mov push frstor stos stos stos xor rorl inc sbb rcll xor popf jg mov hlt jns dec shlb pop adc xchg clc arpl pop sbb ljmp inc add inc dec sub popf inc cli (bad) add push dec jp (bad) mov add sarb adc out popf ret pop shrb jle,pn inc mov push lock stos in pop dec arpl cs insb push jp test loope test lods xchg ret or loop add lcall loop and xchg cmp xor (bad) inc or ret mov adc lock jno mov out inc mov xlat sahf notb hlt add (bad) jb push adc rclb (bad) jecxz and test stos push out dec fidivl ljmp cmp std stos aad negb mov adc mov data16 xor iret mov arpl xor mov add pop sbb or xchg adc je cmp adc mov arpl mov push or jp (bad) jmp scas mov mov (bad) stos pop add mov js inc pop mov xchg insb pop xor mov adc adc cld xchg (bad) xor jo rep mov and cmp jmp movsb dec cmp cmpsl fadds cmp push cmp xchg lret or pop fidivrl mov xchg jo jae das lret js sub or jb xchg jns popf push dec sub cmpsl push xlat mov adc mov or adc loopne lods test test push addb adc movsb testb rcr or lret xchg mov sub enter movsb mov xchg mov aaa nop inc jo dec test pop sahf xchg xchg cmp sbb lock lahf cmpsb pop ret inc mov push jge cmp adc xchg inc inc scas (bad) enter aad adc cmp leave xchg dec mov aam lods bound lds push loope lea paddusw loopne call pop lods push cltd mov adc xchg sahf xchg mov mov pop adc fild in push push inc inc xor cmp jns iret xchg outsb sub xlat es gs cld mov stos adc adc pop out mov (bad) stc (bad) xor dec outsb pop loopne es mov lods mov mov pop adc dec mov popf (bad) divl stos mov pop sub mov pop jo orb repz int3 int3 adc sbb enter inc and xchg fwait adc sub xchg std xchg adc add pop pop mov inc fidivrl shrl pop add int3 lds sub or inc sub xlat add js or fldl xor lods dec xchg mov mov mov xchg add jns lods test pop inc push pop xor shrb lcall outsb inc pop subl movsl push sbb andl nop cmpl fs push push je imul dec (bad) fs xor push xchg je mov jae nop nop cmp cmpsb pop insl ss jne daa push push push push push or bound scas xchg pop mov push pop push and repnz (bad) rolb add add sub lahf (bad) fild lret nop lea push mov xor add sub inc cmp loopne rorl pop movsl push pop stos (bad) mov xor nop push pusha dec add popf xor adc das cmp negl and inc and add fwait pop inc and (bad) mov jmp add rorl adc andl bound cmp dec dec xor inc pop cmp inc dec dec push push imul lcall leave fist outsb push jp js insb dec dec popa dec (bad) dec dec xchg daa mov mov mov out cld and pusha inc xor mov pusha cmp cmpsl stc xor hlt outsb les push cld fistpl and push push inc jb shrl adc dec fxch xlat mov jl test xor lods dec jl push cwtl repz cmpsl stc push mov add cmp or cmpsl lods mov test push add std push cmp inc mov jo push mov out push hlt inc les dec (bad) imul push sub push cld iret cmp mulb scas xorb out lcall lahf rol cs push movsb daa adc test push and push hlt push fidivr test js loopne sbb iret mov negb push and mov jnp out inc es and push subb fsubs push insb incb push in jge mov xchg es les push sbb cwtl mov lods sub push (bad) xor (bad) mov imul push es imul jl shlb mov push sub push push xor push cmp hlt push ss push test stc out shrl sbb push push fs imul gs insb js lcall jb jg cld mov imulb insb push cmp adc loopne mov jl jns add cmp mov push loopne shrb mov mov mov lods mov push cwtl mov jo,pt outsb inc mov into mov rorl pusha call neg cmpsl stc push xor pop divl dec repz iret sbb add push push sarl les push fnsave push test dec add push lahf mov daa dec push dec lret repnz xchg loopne mov jmp adc inc repz enter jne adc push add mov add mov adc pop lahf int fimull and cwtl and es int3 ret dec leave xlat iret enter fcomp fxch (bad) (bad) loopne jecxz in pop or pop leave push xchg sub inc test gs and dec fiadd popa je xor xor sub fisttp out mov pop xor outsb inc push push adc das fnstsw fistpl adcb test add xlat outsb test fcom cwtl addl aas scas jns sti mov add in in push hlt cld jns ja outsb jno adc and jns out xor inc dec sahf out sahf push pop fs je jns out test sahf out mov (bad) int3 sahf out sahf aam in (bad) jno jno or jns push add or daa add sbb push pushf inc adc daa hlt xchg xchg fnstenv ja pop mov fs fs jns xor fs fs jp in and pop dec ret inc add cld and rcrl and sbb pop add fstpl nopl movsl inc dec jmp adc pop das inc loope add add mov adc jno pop adc inc fnstsw hlt or outsl add push add test fldt pop or fs out lret add add add add add add jnp mov add push insb sub sbbl add add or add or ds ds repz push push js pushf lods ds repz shl lock jns out adc xor push out sahf out je xchg test imul push mov add adc cmpb cmpsb cli or cld add dec rclb lcall (bad) mov (bad) out addr16 push clc add clc incl or add gs sbb clc imul iret adc inc mov mov fdivl push dec pop and add dec jnp aas push jl push mov pushf push imul push sarb in add aas xor or push sbb jle sub out push cmpsb lret das sti push push mov out cltd cs or push add or add psubusb out adc adc adc cmp repz sub and repz cmp sbb push adc mov les fcompl lock adc out sub dec pop pop out sahf out jo sbbb pop lods adc pop rorb cmp jmp rorb adc jns iret add or xlat popf cmp mov mov dec xor outsl adc xor (bad) dec xchg repz mov xchg mov cmp les iret repz int3 or fisub jns out cmp pop mov adc add add jbe test js mov or push punpckldq out mov ret add jle mov or jecxz sbb out or in (bad) mov mov movsb jbe jns sti out mov add mov mov push in add jns xor pusha sahf out out les push aam in hlt cmp add or in fdivs pop add pop andb xor ror add (bad) (bad) xor jle jge dec fdivl jmp mov add cmp cmp unpcklps add cmp adc xor mov daa daa daa daa add sbb pushf es daa add addr16 sbb rcll xlat jo push or push and sahf out push cmp xor pop insb xchg out push push dec testl or call cs push push es mov mov daa push cmp dec (bad) mov mov push cwtl jns out push rcl lock repz repz and inc push iret repz fs nop test ds repz aam hlt add je out sbb inc ja faddp roll xor adc jbe (bad) xor rcll imul frstor adc jnp (bad) out or push inc imul add or nop out shr enter push std int jns in cld cld cli or stc cmp repz clc xor dec repz repz hlt iret repz test xchg repnz cmp repz lock in ds repz clc in or in in sahf out jmp ljmp add popa or inc fwait popa or or movb nop jmp add pop outsb out or or cvtdq2ps add pop pushf repnz sahf xchg pop lcall or push je cmpsl (bad) je ss adc push mov pusha mov dec jb mov imul call mov fwait add dec adc pop (bad) and or hlt fdivl jns add push push pop add in sub push stc mov repz mov sti cld repz repz (bad) incb add sti cmp test add scas cmp add aaa and sbb mov ds test inc pushf fcompl sahf out scas push loopne fs jns out je pusha test insb xchg lock jns out hlt xorb (bad) cld cwtl aam cmp repz movsb in lods hlt jns iret repz jns out adc and sahf out sahf aam sbb inc sbb sahf out in and sarb and je out sahf test test xchg sahf out sahf xor movsb xor mov sahf out cmp les out sahf out inc inc in int jns push hlt dec pop add dec cmp repz adc jl repz repz nop xor mov inc pop mov pusha sarb cmp fs je repz repz out lcall sub out sahf mov inc les sahf out aam js test jns out hlt mov cmp mov adc shlb iret repz loopne cwtl in repz repz pushf cld push mov or movsb sbb jns test test out mov movsb mov out rolb sahf nop aam test int3 jge out mov sub out fimul rclb fsubl sahf out fsubr xor hlt repz out in xor repz or je cmp repz test cmp inc movsb cld push out lcall add out sahf insb aam js adc jns hlt adc add repz rcrl mov and iret repz and fdivl lock out cmp xor xor cmp out and je jns out push test sahf out sahf xchg dec jl push xchg jns out mov lods les sahf out aam fsub repz sahf push adc repz (bad) fsubrp push adc pop fdiv cmp and insb xor out mov repz inc lods dec push push mov out fs or je sbb outsb js mov xchg push xor movsb mov inc divl pop (bad) ja pusha xchg aam insb jg mul loopne js hlt dec test push sahf out sahf mov sahf out xchg mov cwtl enter jmp movb out sahf mov clc cmp sarl adc xor cmp repz dec pop fs cmp into jl je jbe mov mov into repz push push push push push cli cmp repz sbb xor dec push inc int fsubrl jns scas push xor xor outsb push pop outsl pop movb xchg (bad) cmp cmp jbe fidivl mov jle lock mov xchg push sub pushf xchg jbe jo incl fidivr mov call es xlat cmp mov xchg mov pop int3 cli cmpsb push dec dec sub iret loopne les pop js add out dec cmp jbe push jle test jle data16 in xchg js jnp cmpsb push inc jle push jl push je neg cmp inc xchg mov cwtl and jecxz push add fsubp push iret fwait pop scas adc dec in daa idivl xor sbb xchg movsb (bad) mov loope std shlb inc scas mov lcall cmp pop je add mov fs out imul push les divl jnp aam lods mov inc mov out mov pop push cwtl es sub mov xchg es sbb outsb ss cs xchg shlb aaa push mov lcall nop sub push enter mov jle cmp push pop push or pop data16 cwtl lods fidivr cmpsb push dec mov mov xchg push js in pop scas xor xchg jle (bad) je inc test repz push fsubl cmp push in movsb movsl sarl aam dec xchg push test sbb punpcklbw scas enter pop cmp call es push push push pop cmpsb inc das outsl fbstp jnp inc add lods xchg mov je,pn nop xchg mov push push add inc packssdw push rolb xor negl push insb das sahf test outsb shlb mov lock inc ss cmpb pop and (bad) call fsts dec es xchg add inc inc pusha icebp sahf aaa jle test (bad) js cmpb jmp cs add pop div push mov mov sbb aas dec shrb xchg shll ds add mov inc negl xor sbb cmp call loopne ss out dec adc clc (bad) and mov insb out mov jnp sub xchg and cmp push out mov mov jo fs or test je in mov int3 es dec fs les es sti movsb into mov faddp ss mov pushf cmpsl cmp add dec push pop lock addr16 mov mov fadds cmp sub ds ss xchg outsl ds mov dec inc div iret loopne lock dec mov ja jge fs (bad) pop push hlt cli inc push push pop rolb add outsl in ret and imulb pop out sbb push sbb mov sbb ficom push out test mov inc mov imul rolb jnp dec pushf in push ds pop into fs mov jl,pn jnp ds sbb push xor call pop ja,pn dec inc out mov outsb sbb push sahf xor hlt xchg dec cwtl push iret sbb mov push fidivr cs aam sarl push les xchg hlt fidivr rol push push cs inc xchg dec rolb popl sub mov inc adc fs adc test jo loopne les or push add add push add insl adc adc cmp inc push dec add jnp outsb sbb pop inc sbb fmulp jnp inc and dec pop push and pop ficomp push pop dec add sub in cmp push dec xchg push mov pop push inc mov mov or dec xor or inc push push mov cs and inc lcall mov dec and jae push mov (bad) in jnp add sub rolb pop fs sbb add mov jmp (bad) inc sar faddl cld bnd bnd clc aas push pop jmp sarb jae cld add pop or push push imul pop adc addr16 into push xchg jl add test or fnop push mov shrb add psubb mov dec outsl add push out lahf cmpsl fldcw neg out (bad) cmp cmp or loopne lock and clc pop push (bad) aas (bad) aas pop xchg addr16 xchg dec jmp incl pop std outsl xorl add imul mov jg sbbb add arpl cmpsb jo iret add pop mov lock int3 xor sahf push xor push in push out cltd pop (bad) xor jg cmp (bad) cmp mov jns decl sahf iret int repz add add and push cs and add fidivr dec pop outsb daa popa sub mov jl std clc lock aas rcrb inc imul inc je jmp pop outsl clc popl adc shrb arpl add xlat pop sbb stos dec test iret xor cs sub fstps cwtl rcl pop in les jae and aas nopl in (bad) aas add xchg aaa xor ja cld push cmp fcoml aaa pop xor and lock cmp cmp jge mov insb mov push sbb push sub inc add sahf int inc add inc shll xor fs sbb push push sbb loopne shrb fldt loopne (bad) push xor fldcw notb clc fcompl jl sbb push sbb (bad) pop or test push shl or push jge data16 leave pop xchg adc push jnp addb out in adc add and add out add sarb fs mov cmp subl mov fbstp das cmp (bad) and fsubrp scas mov es xor mulb adc and ja mov or dec push dec push mov andl dec push push daa outsl enter xor daa xchg push divl lahf dec daa dec addl xor inc daa mov xlat mov adc clc push push cmp mov lahf mov xor cmp adc adc xchg pop xor cmp jae xorl pop fiadd mov daa in mov push aas push xor mov repnz dec sub pop aas sahf ret imul jbe and push mov inc and push and fcomps and cmp jmp (bad) imul push mov push fs xlat mov lret push and mov (bad) push mov or fistl (bad) mov mov daa push xbegin push mov inc inc pop xchg sti out push xchg adc addr16 aas xchg inc inc inc or cmc int3 jle mov scas dec push pop es gs out (bad) daa inc aad push push mov dec pop daa mov out in sub xchg incb add and (bad) clc daa add outsl lds fwait daa add mov daa or mov es adc sbbw fild ss arpl daa in jecxz ds shll xor arpl roll xor (bad) lahf xchg push push out (bad) mov cmp push int3 adcl lret aas daa dec lret ljmp inc inc es fld1 cmp arpl clc into xor in repz rorl mov fbstp sbb nop in inc xchg sbb or mov movsb sub push repz daa xor out jne mov daa aas das es (bad) in xorl in push inc sub loope mov push daa xor and sub lock adcl data16 inc push int iret dec (bad) je push inc mov jge mov aas call add sub fnstenv or cmp jmp dec push mov jo pop xor dec xchg fs inc fisub mov cmp lahf add xchg (bad) jmp scas jne adc cmove or sub call adc cltd xchg inc add xchg sbb les subl into loopne jmp sahf mov clc or sbb xchg divl push (bad) daa dec xor (bad) mov daa dec daa cmp out jae daa clc dec je pushf inc jnp dec sarb dec jl pop dec addl rorl cmp push lahf mov mov xor cltd ficom push mov sbb imul aas mull mov inc push repz xor xor (bad) or lret sahf adc dec (bad) jb sub push pushf cwtl (bad) sbb outsl inc push in imul inc daa out cmp shlb push push adc mov pop pushl dec cmpsb push mov cmp xor and cmp jl aad orl icebp addb mov cmp nop loope (bad) aaa into or dec mov daa and xchg mov cwtl stos sub aaa sub mov das subl jbe lds add sbbl das dec es and stc fstpt fcomps fnsave push ds push mov xchg pop dec decl xchg add movntq aas stos stos inc mov orl xchg ljmp in outsl xlat pop dec pop popf and cltd xor flds lods cld lret xor scas cld push pop mov lock mulb add insb xor or repz (bad) jg mov les lods mov jbe push mov push sahf loopne in stc mov inc mov lea mov scas cmp mov (bad) jmp add in sarb xchg add cmp aam sub add (bad) cld test jmp jg mov int3 xchg wbinvd (bad) dec (bad) icebp test addl daa lahf jg jmp out inc std mov ret ljmp es xor sbb ss in xchg stc mulb sbb sub xor movsb and jge sti dec test sbb pop mull xchg lcall aas jmp jge scas cmp push jmp out jecxz cmc jbe pop into loopne sti mov cld mov ja push scas jle cmp adc sahf mulps sbb loope inc mov jb inc jp sahf loope push mov rorb push sahf icebp jge int3 jo sub sub xor jge sub mov push sub mov mov in (bad) iret aas ds test sahf imul imul repz out stos adc movsl stos fdivl sub jge sub lahf inc lock shr cs cmp int stos xchg out jno scas ds jge push mov mov push flds jge jnp xor out mov imul sbb fs dec stos adc dec mov xlat sub xor (bad) repz std addr16 sub repz jmp mov xchg iret jmp pushl inc daa xchg mov call mov bound cwtl dec push in push es test (bad) lods (bad) and mov (bad) mov test sahf fisttpll or in aas outsl (bad) mov pop test mov stc into repnz mov mov lcall cmp push bound (bad) pusha mov fwait std repz movsb jp add cwtl xchg cmpsb mov inc jge idivb mov out (bad) xchg pop adc iret fwait pushl pop mov cld xor bound dec (bad) mov and or mov pop jl add lret dec fisub fnstsw iret mov arpl push std inc dec sub mov loopne mov push lock jb (bad) movd imul cmp imul mov jmp mov pop fidiv stos mov ds ret out mov test jmp dec push sti in std dec inc mov and pop jl dec push stos mov stos and jmp push sub xor stos cmc std lahf jne loop adc pop icebp jmp (bad) push or in pop adc jmp dec mov pop cmp lock sbb adc lret and cmp push in pop jl pop popa adc mov psadbw (bad) jg jne xor imull popf leave addl sub xchg fsubs scas push movsb sub daa cld decb (bad) push mov (bad) mov push lgs mov add sub loope mov jge sti jns divl pop clc push pushl out jp cs stos (bad) sti (bad) jmp jp,pn dec push lret daa sahf sbb mov xchg mov test inc sarb out mov cmp dec rcll fiadd idivl lahf std clc jmp cmp pop mov push addl scas adc jmp pop add xor adc imul (bad) (bad) (bad) out jb push mov je mov lods cmpsl jmp sub aad clc sbb pushf sbb test sahf imul and mov xor (bad) and aad mov loope mov mov inc jl push fiaddl fcmovnb mov inc sbb divl (bad) int3 jo push shrb push push jge std std imull xor xor jmp popa xchg cwtl xchg cld mov inc push ja fwait lret int pop popl xlat adc mov lock xor fistl stos xchg pop mov adc dec iret push sub stos (bad) into or ljmp mov idiv dec jns lret (bad) jae sbb push shrl jnp clc or or subb fisubl mov (bad) jg pushf sub outsb jge es push fldcw mov popa pop (bad) push fisubrl (bad) lcall mov push arpl lods fistpll and pop dec mov imul loope,pn paddd jb mov daa mov inc sti mov pop xlat scas sarb jmp pushf outsb cmp jns lock jge lock inc push icebp data16 in leave or push std pop cmpsl dec xchg pop test mov xchg cs mov jge sbb and add mov cltd mov add lock (bad) pop pop xchg jge mov mov push nop adc inc dec dec mov jle pusha popl lods xchg mov and sub jne pop dec adc rcr adc mov lods mov add mov inc repnz and int3 (bad) or push lds enter in mov (bad) jge mov push outsl push xchg add clc decl stos (bad) xor push xchg into push xchg mov mov movsb outsl notb mov pop loopne fnstenv (bad) call data16 mov cld dec jl cmpsl fs mulb lret nop push cld mov in jg ficom lock clc dec mov mov pop or jecxz pop sbb dec and bound pop jg and xor (bad) fmul movsb or push jno std add mov test jmp push add push rcr xor aaa jo lahf pop mov loope data16 sub pop sahf clc add scas sub sbb (bad) pop imul push mov mov aas stos mov mov pop sar pop inc push jge sub lods jmp popa push icebp mov data16 xlat xor ja adcl mov mov push incb pop dec adc stc xor dec mov imulb outsl and inc sahf popf idiv cmc pop (bad) jne cmp push mov pushf or cmp xchg or clc add (bad) arpl xchg into scas rorb and lds fimul std mov push jne inc inc mov (bad) mov and sbb scas pop cmp test pop loopne scas imul rol subb loop lock lock mov repnz shrb dec clc and sahf (bad) insl data16 jge call jg pusha je and and xor leave sbbl cli jne push movsl aam ficoml jge xor add fadd loope decl pop pop shll loope pop or sub repnz pop mov int inc xorl fbstp dec mov pop daa push lahf xchg (bad) sti stos int incl (bad) mov pop xor cmpsl ds push cmp xchg jge popa repnz repz mov or push jae (bad) std jmp mov (bad) fisttp pop jb push inc arpl std sar das daa dec movsl push pmulhuw scas push stos int and icebp fwait lret enter or pop hlt and lods and inc jb fistpl test inc imul pop lods push fcmovnu (bad) xchg push jg (bad) (bad) push sub mov adc mov test (bad) sub mov out into movsb add rcr inc (bad) ja jg xchg outsb nop pop or test mov jne loope xchg ljmp inc addr16 out mov adc outsb xor std push std jg icebp inc xlat stos inc stos fsubrl add mov jmp pop pop out inc push mov pop push popa sarl lds sbb sbb (bad) (bad) icebp add sbb xchg (bad) mov ror xor (bad) hlt mov sbbb xchg in iret dec fdiv xchg jnp lods jge inc lahf out (bad) gs and ljmp jmp or xor add mov (bad) cmc jns adc sbbb and lret and loope das xor sbb (bad) in aas cld call inc (bad) fimull dec push stos dec dec sbb sti iret pop cltd jb mov or lock lods xor lcall fistpl inc mov add cltd sub outsl push lahf es mov mov adcl rcll out xchg out jecxz in leave call aas dec lahf in sbb (bad) incl lahf mov mov sbb jne cmp mov mov add icebp in (bad) cmp out xchg pop int dec xchg movsl cmp sub push mov xor cmp xchg rclb jb (bad) ljmp and sbb mov dec scas popf or cmp sub jmp add jge nop mov xchg repnz push in mov adc insb xor inc (bad) lret (bad) ds les push clc mov add mov mov jp pusha mov (bad) mov mov and push mov mov incl lcall xchg les and icebp push lret xor incl cld push or pop lock dec data16 into scas out jbe push xchg fimul push add (bad) (bad) jne ror xchg push inc sarb popa out mov jo jge and pop cmp pop sub bound sub sti xor (bad) jg pop mov xchg cmpsl dec lds out dec scas fwait icebp in (bad) fdivrs mov lds jge xchg test repz cli decl and xor mov and scas bound aam ret movsl int dec negl xor dec pop ja push incl decl jb insl pop pop loopne insl cmp mov pop mov or mov cli sahf xor pushf dec inc jb sub dec xchg fs sub jmp pop mov sbb arpl inc adcl scas cld cmp cmp inc (bad) push decl insl inc stos rdpmc outsb imul fnsave loope jbe mov mov fwait ret dec ja cmc or mov sbb movsb (bad) stc pop or dec ds das in cwtl jb xor dec cld stos adc outsl jb popf mov fisubl lcall xchg add (bad) jne cmp (bad) lock lahf jle lock push xchg push sub mov test sarl xorb pop call xchg inc lret cs gs (bad) mov jecxz and jb int arpl notl clc jmp lahf mov mov and int3 mov jg fbstp dec xchg jl inc xor adc sarl adc sub mov inc jmp jnp ror jge lret lret mov jg adc (bad) ss lods cmp inc shl pop js add xor inc aaa popf pop mov jg xchg imul jns dec add xchg mov idiv out mov pusha cltd idivl sar add xchg ss arpl (bad) push neg (bad) ja mov fdivrl fisttpll stos push imul lods imul sub mov push pop add and nop pop imul scas inc inc addr16 adc xchg loop jmp sub maskmovq mov scas pop mov xlat add mov xchg mul jne movsb negb imull rep (bad) neg negl pop cmp aam pusha movb xchg (bad) (bad) mov jae inc gs movsb popf and lahf test add and dec push xchg inc adc ret jge (bad) jg sbb testb out rol inc imul outsl (bad) (bad) inc subl push add push call idivl and jle dec andl es jg fs mov mov mov mov mov out inc jmp xor mov mov sub inc lds stos loope mov test add mov dec std fimul push cld jg push mov add inc mov lahf pop xchg mov test jge dec popa sbbl mov mov inc stos in (bad) cld jg (bad) and aad inc xlat mov daa test int3 arpl lods fnsave leave add jbe fs mov cmpsb jo mov cltd cmpsb outsb shrb push aaa femms jle jl dec inc and shlb popf jecxz and xor xchg mov lods insb and cmpsb movsb jl loope mov or (bad) jmp sbb inc jg pop lcall or lcall lods decl jge cld repz mov lds lahf idivl inc rcrb data16 jmp or mov sahf loopne shrl push jge std (bad) out ldmxcsr mov cmp (bad) cld loope mov cld lcall or pusha mov lds adc pop ljmp xchg mov jge add popa add fimull hlt push sahf stos cld push movsb and aas mov dec jge jp stos aad or and inc inc mov pop mov mov loop jge mov mov loope jp cltd sub push (bad) decl loopne add pop cmp xchg mov mov push fistpll je sub cmc icebp lock ficom inc aas add push jge clc (bad) mov jmp or outsb push mov insb leave sbb jb (bad) pop ret push (bad) lcall lds xor inc mov inc fidivrl mov xor lcall push cld jle (bad) mov cmpl (bad) pop push clc fmul lret cmp fcomps movsl jo pop loope test ss mov inc fs adcb ret (bad) pushl aad pushf add cmp scas sbbl mov daa jp ret sub mov push and or (bad) xchg arpl in out mov jl add jge xchg pop adc jp aaa jnp sti pop and mov ret cmpsl push (bad) push enter add (bad) mov (bad) test rclb mov jge das add addr16 sbb pop aaa arpl xor das jmp dec push or movsb sub mov inc (bad) or xchg int3 jbe dec test push stc lds iret mov pop dec bound mov mov lods push mov mov dec pop ret inc shr or sbb test adc push jge mov std xchg rorb mov and push daa cltd (bad) cmp jg fnstenv hlt lods cmpl xchg pop mov push or add inc std inc sbb fisttpl or ljmp push and xor sarl jge out or fldt and cwtl add addr16 es lock push test and into jle push mov sbb pop cmp mov incl lahf push jp push or movsb out sbbl adc jp xchg jnp pop ret adc inc clc jmp jecxz lock inc cwtl je mov jge in inc int jle pop dec jge xchg clc push fdivl mov (bad) push sbb pop sahf mull inc sahf mov scas push jl mov scas iret jge (bad) push pop pusha test mov (bad) xchg mov loop fnstsw lea (bad) in scas inc push push bnd jl int3 roll xchg and aad mov jbe imul js insl push push repz pusha xor sub jb jbe stos jge cld xlat lahf (bad) dec push sub (bad) pushf push cmp cmc jne cmpsb dec hlt sub inc (bad) jb loop repnz lcall scas jbe flds loop mov cmp fs add lods mov popl mov paddd das mov test mov subb push arpl push lods (bad) push pop into pop sub jmp das mov int inc push (bad) ficomp add cmp imul popl das adc adc push imul sub rcrb push xchg aaa jl jmp push call jne dec cmc out addr16 cmp and cltd shrl pop jmp mov ljmp mov repnz jne dec sub lock mov or popa mov movsb jno aaa (bad) lock mov inc xchg push (bad) push mov jle (bad) in test fisubr inc or bnd decb jb cs shrb dec fadds xor mov jge add enter decl and add je scas pusha aas pop sbb jbe mov imul arpl inc and mov scas (bad) incb dec mov push mov or xchg aam ret jp fistpl stos jge xor sbb pop lahf jne out enter cmp fisub xor push and insb aad sub lcall lret insb es or ficoml out (bad) test mov mov clc sar rorb add dec adc pop addr16 ds xchg push cmc mov loope dec (bad) popa cmp (bad) loopne popf mov out imul add cmp int3 sub mov idivl (bad) in mov and aad and push push (bad) pusha inc dec mov dec iret add mov cli into ror (bad) (bad) (bad) cmp test iret rcrb cmp sub pop movsb sub stos fcmovbe xchg outsl (bad) cmp or add jb ret imul jne es pushl in sbb inc xchg xor pop stos (bad) lock add xchg int mov push mov (bad) mov mov cmp add dec cmp (bad) call and lea movsb ret cmp cld mov lock mov xchg xor sub cltd loopne nop mov loopne sti add mov mov mov jne jmp ljmp lcall fdiv pop push movsb xor inc daa inc lahf pushf mov push inc adc add cmpsb or ficompl mov (bad) dec scas pop lfs push mov jo mov mov dec cmc or sbb lret adc enter mov sbbb (bad) cld fstl push test and or test dec xchg xchg (bad) divb test aam icebp movsb xor sarl repnz adc jae lret add in pop icebp leave imul pushl jp out imul mov or (bad) cmp push push divb jo add cmp cmc aad mov mov out mov mov jnp lea dec mov push dec and sub add jp inc stos call mov push ds lcall rcr (bad) dec ja negl pop cltd xor mov mov popa pop cmpsb vpshaq insb xchg cs jo pop (bad) mov inc jge ja fnsetpm(287 push data16 sub fidivrl push (bad) stc in or stos and sbb insl jl shrb sbb stos pop xchg loopne dec adc std jnp out shrl test push divl test popl imul pusha and data16 push pop jb xor jne in sub cmp xchg dec mov dec sbb inc pop xor mov andb pop and cmpsb dec loopne (bad) pushl std sbb ffree cmpsl pushl sbb inc popa pop mov stos cmc adc pushl sub push lahf xchg cmp repz out cmp es (bad) idiv jg sbb out (bad) jne movsl iret jge cmp mov or mov daa scas mov arpl jb rcr xchg addr16 fmuls xor mov out (bad) adc stc adc cli sahf leave leave sub repnz enter jb fs orl pop notb nop dec mov das clc mov jge jnp ret sub outsb and ret daa lods mov lcall lcall test pop xchg sub jle push cmp incl out lcall jmp addr16 push xchg fildll ret or or dec (bad) pushf aas clc jg mov xor push gs mov in adc mov decl sub dec xchg outsb and jge in pop xor xor mov mov mov add rolb jg loopne pop popf cmp mov xchg pop les and incl and test (bad) das adc jl pop and xchg loopne adc aas or dec sarb (bad) mov mov add inc adc loope adc (bad) (bad) incl jb xchg pushl test xor call jo push xlat mov add cltd mov out sbb aas mov test mov or loop stos das das mov imul pushl sbb (bad) mov inc adc andl sub test sbb lahf sar mul or ret nop dec mov in das movsb cmp cli add rep mov push int cmp arpl adc cmp sti outsl push mov stc test and fisttpll dec jge inc (bad) incl pushl and xchg sbb stc sbb scas mov sbb (bad) (bad) incl movsb cmp pop out mov push dec pop dec inc xlat loopne insb out (bad) (bad) call or outsl js (bad) or (bad) lret sub incl fucomi pop ror (bad) ficomp out mov (bad) jg add ret add or imull push mov and and sbb xor mov and repnz add negl dec xor punpckldq dec cmpsl gs jge jge or int lret jecxz and mov loope incl lcall jl jns std or push mov lret cmc adc divl test hlt cmp dec repnz sbb fbld and cltd xor push fimull in dec fsubl sbb mov daa (bad) jmp jg repnz test sub mov sub negb (bad) (bad) ljmp xor mov je push jno fstl ret or insl mov jo mov into or jnp jg repz pop dec adc or sbb test mov hlt mov or xor cli push jns idivb int3 xor add (bad) mov mov out (bad) cmp nop pop xchg inc push push mov jecxz push push or push push (bad) fwait and popf ljmp testl dec test in sub cmp shl push into and hlt movsl push adc ds mov lahf jge clc imul (bad) adc jns jmp adc dec dec fsubrs xlat dec stos pop mov out push test lods aas cli fnstsw sbb push xor pop gs jno cmpsb pop mov out out imull mov mov rcrl (bad) loope outsl lock int dec and push bound repz mov xchg cwtl lret or out in cld idiv sub jo rcll rorb cmp jno jne dec ds pop (bad) mov mov loope cmp lock dec (bad) popa rcl loopne jge mov xchg xchg pop jo jbe pop sub push push cmpsb mov dec dec push sahf xchg cld mov mov sub imulb cmp mov sahf repnz xlat test call rcrl shl cmp push clc into or in push jge and test and lret add div out xor push jp and test in stos les inc push jb lds nop mov xchg mov arpl (bad) jnp jmp xchg xchg cmpsl loope jg insl push mov repnz push pop movsl mov repnz push int ss sbb fsubrl movsl js sub jbe push cs push sti mov icebp loop mov test pop iret and outsl hlt mov mov mov roll jmp bound fbstp mov or jge loop into incl (bad) or mov pusha cmp sbb in cld inc fistl xor cmp mov sub xor push or push out cs lods sarb std popa vpunpcklbw push mov add mov or add stos push popa bound pop cs mov outsb idiv mov lcall addr16 cmp (bad) cmp fs sub stc (bad) pop inc jmp rcrl loopne insb hlt (bad) inc (bad) xor and stos add sbb mov ss jge (bad) mov and jnp lods adc inc gs push add pushf lcall push insb fstpt adc mov loop and xor arpl lcall loopne loop and daa pop sub inc int cmp leave imul mov es lock sub ja sahf xor fidivl jns mov mov cld (bad) (bad) and jne (bad) loope aas xor push ljmp adc mov fucomi xor enter nop cmp ljmp cmp lret or stos push enter (bad) xchg xchg sub or rorb imul jg sub mov pop mov lds repnz jp ret (bad) inc inc icebp lcall add or inc fisubrl push (bad) lcall enter xor sub jmp mov xchg inc push testb cs mov cmp sbb cld fsubs fcos call sbb out (bad) jp (bad) ficoml or pop jge decl inc or pop out into mov mov popf aaa add das mov mov cmpsl stos jmp or cmc cmovne inc xor jl mov or inc dec inc cli mov loop (bad) dec insb mov lea (bad) cmp ljmp and xor shrl pop and push out sar jbe imul mov lods (bad) cmp and push bound mov push scas pop aam inc orl mov add (bad) mov bound gs call fdivrl and sub cmp (bad) (bad) cli aaa jns loopne xchg lcall inc int dec sbb loopne pop sti xchg and mov call pop ljmp adc pop jle dec (bad) or add cmp loopne clc fcmovnu sbb imul jbe dec xchg scas in jnp bound int3 push das enter aad icebp jecxz ss hlt cwtl pop (bad) jle pop pop and pop xor in loop add pop call js imul les cmpsl jg loopne lds fldt pop clc in das push xor (bad) dec lret fldpi fwait out jmp neg xchg (bad) jne pop cli xchg das xor out sarb pop lock test dec adc js and mov and (bad) pushl jmp (bad) jmp popa popf fdivs cltd repz (bad) shrb movsl das jnp gs adc out jg inc cld dec lcall push (bad) call and daa stos sbb jge add loopne push dec push jmp test cmp es (bad) mov pop hlt gs push (bad) pop adc (bad) decl cs cmpsl test cmpsl and push shl movsl sar mov daa (bad) cmpsl dec xchg xchg into xchg pop jl xchg sub and stc imul and js jge push lods clc mov jle inc stos lcall pop dec clc fstps fisttpl mov (bad) ficompl add incl das lret (bad) xor xor (bad) (bad) (bad) (bad) std sbb inc mov mov movsb sbb enter mov lret das pop xchg mov inc (bad) (bad) (bad) jle push es aas pop loop movsl lods and adc std add mov mov std xor clc mov adc divb xor push iret add mov push fs add test iret inc inc mov adc cli loope ret and scas push (bad) jb fist inc adc rcl pop and (bad) (bad) call add xchg push or roll into rcrb ds daa test sub cmpsl pushl push sbb and mov (bad) lcall mov mov insb cmp mov add je out icebp and cmpsl inc dec mov sti leave jg mov ret xchg and and mov (bad) (bad) ljmp or sbbl mov inc addl cmp ret mov push mov push xlat lea pop aam push mov xor jb repnz test mov out outsl jge nop or lods out mov addr16 xchg dec dec adc xchg ss faddl cmpb aad inc push mov outsb lods add pop loopne cmpsb pop mov sti stos sbb pop popa test and stos lea popf shl loopne inc repnz sbb adc adc lds lahf fdivrp (bad) mov xchg lret or mov jnp and lods inc inc leave pop inc or aas xor inc out inc out mov lea pop sti or fdivl mov (bad) (bad) (bad) lcall loope ds xchg or sahf xchg jns xchg push mov loop loop add cmpb jmp test jnp loop mov psubw inc mov lds and inc scas pop xchg jbe jno sub add pop and dec les test jnp clc sahf inc mov fs xchg pop fyl2x insl pop (bad) (bad) cmp inc jg add or mov mov xchg mov leavew sbb pop sahf push (bad) lods xchg imul fistpll lock cmp sub decl or pop mov and (bad) (bad) ljmp insb icebp lods sub xchg mov mov adc jbe loopne inc cld pushl rcrb and inc lcall (bad) inc fsubs xchg lock ffreep dec (bad) xchg rcll inc cmc dec ds repnz jmp add pop mov lods in loopne jg pop out xor dec movsb push mov jl pop sahf sub inc fidivr shlb shlb inc shlb add ja iret mov adc mov pop inc (bad) gs fisub loopne fwait (bad) (bad) mov shlb (bad) mov pop inc int add (bad) popa inc rclb push dec loope push call fstps mov incl (bad) loop (bad) add or mov push push cli or jb push negl and std outsl jp das mov mov aam jl stos sub mov loope stos xchg mulb pushf push cmc loopne or dec adc mov nop lret stos xor bound ljmp (bad) dec loop out lcall ds mov stos test mov adc fbstp fimul jb push or (bad) pop pop push xchg pop jl (bad) xlat mov cbtw je sub inc adc add (bad) decl fidivl add or mov mov sub sarb std scas sar mov or dec scas lods xor (bad) inc jmp pop (bad) aas pusha stc clc xor mov repnz mov cmp aad mov neg negb ret or std outsl (bad) ja daa ja ret imul sbb cmp int test push mov jecxz,pn mov idivb mov in into bound jbe ror mov inc mov jp es loopne scas out lods or fwait loop addr16 sub push hlt dec fwait cwtl jecxz push fisub or mov or mov jg mov pop enter (bad) scas arpl pop push (bad) dec push sti std inc xor sbb adc cmp popa mov icebp inc int3 add cltd inc jge sti (bad) or cmc test dec loop loope mov stc jp je push into imul mov cmpsb cwtl add jb xchg mov (bad) cld test sbb out and cli cmpsb outsl push push and push out das mov pop push testb jmp sub outsl (bad) cmpsl or daa or mov jno (bad) jmp cmp inc mov adc mov cmpsl xchg mov addr16 or sub std repz aaa xor lods loope push sbb dec dec jecxz (bad) fbstp mov mov decl iret out xor call mov add (bad) jle xchg es pop push xchg and lods repz sub cmp mov test ficomp push daa pop fwait sahf out dec ljmp mov js mov movsl std (bad) push push aas sti jg das cli push into outsb in popa xor inc jge lods (bad) xor pop lock cmp stos push fwait jg sbb adc scas hlt loope push pop jp rol aaa cld mov dec sbb scas loope (bad) imul sahf and pushf inc fldcw xchg sub pop jge dec lea or sbb inc cli fwait pop (bad) add mov lods and aad xchg xchg mov dec or mov pop and dec cmpsl xlat mov jge mov add mov push jbe stc xor xchg push pop add or enter (bad) bound mov clc and xchg out cmpsl jp dec mov sbb inc pushl inc cs cld dec mov into loopne jle (bad) cmp fstl xchg cmpsb mov int pop mov out push fildll les lods mov pushf or sub pop pop addr16 mov loopne scas outsb inc loopne mov aaa mov mov and inc out roll ret shll pop roll xchg ja push int3 sbb push es inc xchg pop out jmp aas inc stc test outsl fisub jle cmpsl pushf jge (bad) cli inc jbe imul cs (bad) push test shrb fildll mov dec mov jmp push dec fmuls sahf sbb pop movsl int mov insb dec aaa lahf addl jp dec pop fcoms push iret fwait push add and cmpsl adc or lcall push pop and bound jmp nop hlt mov mov cwtl (bad) scas and aaa sub pusha jmp arpl inc adc push adc adc gs sbb push fistpll ljmp loop pop jge or push sti mov mov push mov (bad) fbstp clc pushf mov xor sbb (bad) shlb test xor mulb mov es pop lock jnp jmp or enter loopne sub lock cli (bad) repz pop sbb mov mov xor clc inc xchg push stc data16 fs mov mov sub ljmp lock incl xchg rcrb aas dec or adc lods add pop cmp jge dec jo (bad) mov xchg or mov cltd adc incl ret cmp cmpsb cmpsb loopne add pop xlat test cmp lock xor push mov ja js lret adc or pop mov orb data16 aad mov pop mov sahf xchg daa and sub sbb aas ret fnstsw xchg ror or cmp lcall mulb sahf cmp into std insl mov outsl adc and std jmp cmp add repnz xor das sbb and mov (bad) nop addl mov popa into imul mov adcl push sti loope pop sub loopne jle (bad) push data16 (bad) push ret nop and loopne xor fwait cmp js sbb mov add repz les leave sbb jo cwtl lods cli and es push fwait pop xchg or add iret xchg inc cmp jl mov (bad) and mov adc mov dec js test ds hlt fwait int out out lea mov inc mov or (bad) jne pop les ljmp mov (bad) ss enter iret mov sbb sbb sub sub xchg or push clc mov jge fadd and pop dec (bad) xchg out add call ds out push jp and inc in xor div pop inc int3 sbb mov or daa loop fstps mov pop push imul loopne xor repz lods jb dec cld pop loop gs fcomps lds push loope jb mov cltd lock pop adc icebp outsl (bad) test dec sbb (bad) pop pop or lahf and jg jbe les cld or xor das fcmovu lea jne into loope stc lods shll shrb ret lcall sbb scas stos sbb decl sbb int3 and and ja leave movsb mov jp xchg add and pop adc arpl pop cmc or movsb mov mul rolb adc (bad) incl loopne adc popf jl ljmp aam add dec repz imul (bad) scas and scas mov push pop jle ds mov cli repnz mov dec orb js jg sub mov mov (bad) mov fisttpll scas (bad) icebp ja subl cmp inc jae push mov popf pop lret add sbb jle cmp lcall inc jmp mov je xchg es mov mov icebp loop imul inc repnz inc sbb adc popa push sub lcall and (bad) into push mov cmp rcll clc add into xchg ja enter mov and xchg adc inc fist pop sub mov dec xlat (bad) and add scas sub (bad) inc insb mov notb in shrb mov aas movsb (bad) pmaxsw push add mov and out mov je mov cld aas sub jo scas cmp int xchg in pop sbb mov xchg mov mov push push or cs rorb sbb jg adc add xadd adc pop sub data16 push repnz stos outsw cli stos in ss mov mov hlt loope in cmpsb lock (bad) lds jo repz ljmp into mov icebp dec ds or popa xchg std inc jns pop inc mov loop cmpsl xor fildll push nop/reserved ret out pop lock cli mov arpl jb add fistp mov (bad) loopne mov add movsb xlat cli cld jecxz push mov sub das stos jg (bad) jge mov ret inc scas (bad) jo jecxz inc mov es xor aam push out and hlt ljmp pop (bad) mov clc mov pop push sub scas repnz testl mov mov jo dec fisubr xchg jne repz (bad) pop int3 and enter pop mov jb xor and repz mov adc fsubr dec or pop test out inc jmp ds cmp push mov inc data16 (bad) mov stc (bad) dec dec scas push or cld out outsl movl pushf sar enter pop jge inc adc out sbb call or into adc sbb and testl into mov scas add and sub xchg clc or (bad) dec jg call jge mov push adc lods xor pop push fwait jmp sub inc mov loopne outsb fwait jle add test adc mov and mov mov cmp (bad) ficom hlt pop out fisub pop pop mov mov cmp push push in or mov sbb cmpb jecxz outsb xchg mov mov lret loope jmp arpl pop lods decb or nop mov (bad) jg stos mov xor lcall inc lods or repnz jecxz xchg ljmp fiaddl pop pop gs mov dec push imul fimul int xchg jmp call sub fldenv mulb (bad) mov mov cmp test dec rorl cmc push pop inc mov mov inc jbe jge add mov orl ljmp jl aaa sub pop out sbb jb pop cmp push push xchg jle inc (bad) loope adc popa mov mov mov dec mov test out not imulb pop lds cmp lcall iret jle push mov hlt popa or mov add shrb pop loopne or iret or movsb rcrl add outsb inc mov (bad) mov mov mov js sti xor mov jno data16 fisttpll lahf stos into xchg fs cli outsl les lea xchg cmpsb dec sbb sub pop aad arpl inc or cmp in add pop inc cmp out rorb mov sti hlt loopne inc sti push push hlt jne jmp leave jb xlat push ret inc adc sub sbb fdivr inc xchg cld in adc mov xorb sti stos (bad) repz inc push mov repz xlat xchg js jge aaa stos call incl icebp push xlat mov adc pop sub inc cmp or jg jle popf cmpsl loop leave imul les (bad) sbb mov rolb repnz test inc fwait push sbb out lea and pop jmp mov cmp jl jecxz fcomps sub pushf fisttpll movsb pop test xlat es xchg es mov imul enter ljmp jg std frstor pop cmc test jmp cmp mov outsl jb test xchg mov das test (bad) dec loopne sub cmpsl test fs mov xor or (bad) cmp insb add adc jmp test bound ljmp mov ja xchg xor ret mov decb push ds cmp mov std xor mov pop fs in jbe in jge ret adc (bad) scas mov add in push push adc mov mov lock xchg push mov or out decb outsl mov pop xor and adc ds int xor repz scas xchg test (bad) sbb stos jge lods fwait push loop orb push into sub jge mov call data16 inc push inc hlt (bad) out sbb popa fcmovnb and movsb loopne lods mov push adc fcomps dec jae cmp adc es xor cmp jo mov test adc adc xor dec test mov and mov orb shrb jge and add mov xor sahf mov cmp cs mov daa ljmp or out xlat mov mov mov nop push leave rcl les loopne dec lods xchg sbb and fisttpl daa mov imul ret pop sub loopne add bound fistp cmpsl mov lock mov notb (bad) jb addr16 jg adc ret add repnz pusha sub dec mov push sbb mov mov call cmp scas bound cmc inc notb data16 lret mov nop ret repnz mov (bad) mov std xchg pop cmc cmp push (bad) mov lcall fadds cmpb mov adc bound (bad) out jge pop mov test cwtl (bad) sbb arpl mov scas inc jp jo into mov jne add (bad) jp mov mov xor sahf (bad) cmp pop cltd inc aaa or inc xchg fwait jbe push lret push js je clc add add dec scas mov add cmp pop xchg xchg rorb cmp lcall sbbl jnp lea sub sub cmp pop je andb jb mov outsb dec mov pop clc rorb and fbld add arpl add (bad) rcrb cmp xchg fcom dec inc xchg lock adc adc cmpsb data16 xchg adc movsb popa (bad) mov jg pop dec (bad) decl or inc xor sbb cld out adc mov das clc inc bound and xchg pop pop inc jbe pop inc mov call movsl scas icebp pop nop cmpsb inc inc loopne std mov dec push dec dec mov push mov imul sarl ljmp lcall fstps out dec rolb jg fbld dec and sahf dec mov mov adc call ljmp push repnz test test mov jmp jae je jo sahf and rcll imul pop xor fsts icebp mov pop inc adc fiaddl mov ljmp cmp sub mov (bad) mov fist inc iret insl inc pop (bad) push jb and mov mov iret loope iret push hlt sahf cmc lret cmpsb inc sub jne (bad) into ret or enter push sbb hlt loop adc (bad) stos imul adc imul cmpsb lods push clc aas push mov mov stc xor pushl push mov outsb mov and cmc push loope mov fisub adc (bad) movsb mov adc fisttp je or xchg ljmp or or into add sub rolb xlat dec test or jg lock arpl mov (bad) jl int xor push out lea and (bad) adc dec (bad) repz sbb xchg mov fistpl jp inc and sbb inc sarl xor pop mov fstps inc adc hlt cmp data16 adc inc xchg or mov inc push inc and lock out mov lock movsl add add xor movsb xor ljmp insb push xchg add mov dec stos inc sbb (bad) sub xchg ds lock lods jmp jmp out mov jno sahf lea sbb mov mov pop in mov jb ss pop cld xchg dec lods dec cmp mov or mov sbb or fwait mov nop aad sahf add push mov js fs stos jge and add pop jbe sub mov subb mov je popa lods test inc pop sub push mov pop mov clc call ret and xchg sbb add aas adc (bad) jp mov repnz mov adc leave or push arpl aaa cmp bound mov jg aam dec lcall inc popa xchg call fistpll xor (bad) aam gs pop mov int3 pop orl (bad) xor mov cmp hlt mov mov add scas xchg pop jle xor icebp inc loopne (bad) loopne arpl add jb shll inc das cmp jge pushl xlat sbb sbbl hlt scas jbe int jp add mov push into push and inc push inc fisubr and jg dec xchg jle sub xor fsub pop out mov add test add mov adc outsl rolb std adc out jecxz mov (bad) js daa and sub add scas inc mov call loope xchg jecxz (bad) fistp in loopne rcr pop out xor daa fwait xor add divb xor inc shrl sbb hlt cmc xor xchg sarb mov (bad) mov stos mov leave icebp push stos (bad) int aam xor shrl fwait leave arpl scas data16 ja pop ret mov cwtl pop loopne loop push das xor popf stc or push (bad) mov dec enter jmp add sub cmc add fsub cmpsl and and fcmovne dec push stos sbb jecxz mov jp push xchg ja lods cmpsb pop jnp mov adc insb cmc or (bad) mov jecxz inc (bad) or mov imul fnop (bad) mov mov outsb fildl cmpsb inc cmpsl arpl cs sbb dec bound in (bad) lcall rorb loop pop (bad) decl or mov cmp dec xchg mov and push xchg (bad) (bad) dec incl dec insb cmp cmp xchg (bad) into cs lods fbld loope dec inc sbb insb cmp out outsb or cli lods mov dec pop and stos hlt (bad) cltd test push mov sbb sub dec jne or arpl fdivrl sti pusha xchg add cmpsb pop rclb adc cmp (bad) ljmp push dec sbb ret mov jge or or ret arpl lods push cmpsb or xor or lods jae push enter cld cmp mov add movsl std sti lret shll mov dec pop (bad) or loope cmp xor or cmp mov lahf push push sub repnz movsl jne adc call cmp idiv lea xor xchg jge test enter mov std push (bad) cmp dec test call pusha clc outsb (bad) sub mov out and mov xchg decl pusha daa les repnz xlat test mov sub scas (bad) outsl push add mov ret push adc xor jle xchg (bad) loopne stos jg lret test nop push es fist mov es dec test mov and imul dec sti push (bad) push mov mov repz cld in js push add cli aaa movb ret mov jb inc insb (bad) ljmp xor lcall popf stos out dec idiv fldcw mov (bad) push mov push daa bswap arpl jge sub out clc out push fcompl data16 adc stc data16 roll mov jp es daa sbb push add inc into jns ja pop test jecxz adc aad icebp sahf lods mov pop mov pop adc lcall pop pop add mov jge push rcrl add xchg imul lretw mov rolb sub mov push (bad) cli (bad) cmp jno push and out pop imul repnz pop dec addr16 scas enter adc jno dec scas loopne (bad) stos rol adc inc adc (bad) ja mov pop daa push pop movsl stc mov mov jg ljmp gs push push bound mov jle adc inc mov lock push and add add or xchg pop fildll test push pusha mov cmp mov (bad) decl mov scas cmpsb xor sub stc jne sbb inc adc (bad) (bad) lcall out mov pop mov jmp test jns adc std xcrypt-ofb cmpsl sub decl jg (bad) xor lds ret dec lds into fwait mov (bad) incl icebp gs cmc xor mov push loop cmc (bad) or mov xor incl and dec inc xor (bad) dec xlat or and xchg dec pop sbb jne sbb hlt pop pusha push clc dec cmpsb sti mov in incb ss out inc jl xor fistp push sub clc mov into inc lods inc popf icebp testl cmpsl add mov adc repnz mov clc pop add or (bad) sbb in outsl hlt fwait aam adc aaa xchg mov inc mov pushf ds jg lret jge mov dec add shrl push mov (bad) incl sbb test pop add xchg icebp jge rol mov iret mov mov push add inc (bad) push arpl adc (bad) sbb add repnz mov xchg jl xchg jb scas adc lret fdivs add mov or incl jb out and xchg int3 pop jae mov call sbb (bad) cmc (bad) into mov fwait and test cld (bad) incl test dec xor in sub adc fwait arpl cmp jg iret jmp pop cmpsl neg fdivs mov inc dec out out push sbb divl (bad) je dec fmull dec mov cmpsl or mov mov dec cli push or cmpsb push mov (bad) jb stos inc and decl or mov lret es js iret loope pop (bad) pushl mov mov adc mov test pushl fsub enter xchg les mov imul test scas sarl movsb decl and mov inc int3 mov or out adc imul ljmp int push sub sub jbe fs pop inc sarb xor aas push cmpsl lea dec ss sbb jecxz rol pushl pop (bad) hlt (bad) sbb pop imulb cwtl and stos adc outsl mov icebp inc mov inc call sub scas push test popa pop pop inc jl push (bad) (bad) mov and jbe pop pop cmpsb or loopne sarb loopne sub in loope pop push (bad) jg cltd xor xchg loopne xchg pop xorl daa and stc and cmpsb (bad) push pushl xchg mov add or push aas dec push idivl cltd repz pop xchg insl mov and push mov rcrl lods ffreep stos int3 jge std mov rcl mov fdivl loope data16 mov push pop inc test scas cli cmc mov test mov aam sarl mov (bad) arpl inc lcall repz (bad) adc dec ret test mov jl cmpsb or mov pop std loope xchg jecxz clc imulb loopne push fs movsl adc inc cs and addl cmp loope (bad) mov mov sahf movsb mov mov and jp push repnz in dec je les mov movsb (bad) test cli jecxz mov mov hlt call mov sub rcr cmpsl dec xor cmpsl sub push or add push (bad) jne loope fildl and push fs xchg lds xlat ret push push pop pop adc dec ss xchg dec out mov jle (bad) mov xchg mov int3 (bad) cltd lock test ret sub mov xor adc sbb or dec dec xor pop call std pop and push scas mov pop and or clc clc fwait adc add mov and push clc mov dec sbb mov outsl outsb dec (bad) mov adc jl pop cmc mov cmp push or inc iret lahf sbb ja adc pop fwait mov fwait jbe loope cmpsb incl cmpsl or sub fnstcw mov dec mov pop inc and jnp les xchg cmp inc add pop std leave lds ds pop pop mov jge pop inc sahf dec push movsb fisubrl ss fbld mov sub adc xor mov xchg or mov pushf iret xlat shrl pop xor (bad) out adc lahf scas mov mov test ljmp lcall cs adcl mov add enter (bad) data16 ja push and or mov data16 (bad) fdivrs std and cmpsl into mov or (bad) push popa sbb hlt out rorb mov icebp leave loopne cmp pop inc insl and sub jecxz in sub mov lcall jo inc mov add (bad) fstps in das dec cmpsl xchg rcrl fstpl jg xor mov loop fisub lcall icebp mov notb imul dec (bad) and orl lret std es xor loop in scas cmp stos into popf rcrb fucom pop sbb or inc int loope pop imul cmpsb sahf leave andl mov data16 dec std push mov pop std jmp mov push push ret add or xchg push push inc (bad) gs bound fildll js cmp aam in rorl mov (bad) in stos lock add loope fs ror (bad) or pop das jmp inc jo int3 mov bound or push mov ja pushl cmp and insl jns and imul pop cld and clc fsubs sbb stc and or add hlt xchg mov mov or daa hlt js loope inc ds addr16 pop pop bound rolb mov xchg lock mov out and cwtl cmp push clc push and dec popf cli aaa jge push movl or in movsb pop (bad) in fild incb push sub mov mov or imul and (bad) adc dec orb ja xchg lcall lock js xchg dec int3 (bad) jb test or xorb lea out negl add mov or lcall mov sub pop and mov js mov aas call inc mov pop and out div out insb push sbb nop dec daa mov and pop ljmp and popf push xlat std xchg jle push incl xchg mov push les dec sbb rorb stos in jge test dec movsl (bad) sbb or and cld (bad) jmp (bad) pop push adc pop das call mov out push add loope into (bad) rorb and push fisubr pop and and out lcall test pop push test lock cli xor call gs dec mov pop popa xor mov pop jmp test aas stos ljmp movb popf (bad) hlt incl xchg jo pop push cli mov mov lock jge add (bad) add loope call sbb jne out inc ljmp inc insb addl pushl imul xchg dec psraw inc loopne add je rorb ror lock mov xor ss fwait pusha xchg lods mov pop fsubrs outsb sbb shlb push mov and ljmp xchg enter xor fsubp push popa inc cmpsl (bad) clc fsubrs mov fsub cmpsl sbb pusha push je cmp ss pop and shrb xchg pop shrb stos repz mov pop jo,pn cmp mov call enter insl sbb call movsl pop (bad) xor clc sub inc cmpsb lds popf mov bound mull xchg sub subb mov mov xor frstor dec cld (bad) sbb mov into inc mov cld aas xchg das sarb fdivrs movl (bad) (bad) call dec xor lock lcall inc popf xor cmpsl lret (bad) (bad) call lods vpunpckldq iret icebp jns pop dec js ljmp push pushf dec dec xlat adc jge jg lret jp pop cltd xor sub mov dec adc std outsl clc push push and mov sub dec bound mov jl enter lods fild dec andb rcr lock (bad) push mov out clc lahf ret or mov inc inc and arpl test inc lock and push mov mov sub add or inc push xchg xor addr16 mov leave and sbb and xorb adc mov inc ret xchg hlt fwait adc jns hlt cmp jmp clc xchg fsubr sbb stos out pop pushf push lock add mov sbb adc pop cld pop lock jae int pop cld cld das xchg push jb jmp and push push pop jecxz test mov push adc pop inc jae ret or jo mov mov sbb mov cld (bad) test add fxtract test inc jbe subb leave movsl or mov jle in cld push in jge dec decb sbb out cmpsb mov mov jge ljmp jns clc data16 cltd repnz imul loopne (bad) jns mov and add push gs push mov arpl cli (bad) cli int in ret mov lods icebp cmpb push sbb rolb xlat and iret fsts (bad) in fistpll push pop iret fcomps dec push sahf xor jl add mov mov fwait loope insl (bad) (bad) lahf inc dec les loopne fsubs into js fdiv pop (bad) in cltd jecxz xchg cltd insl insb xchg mov mov call fistl enter fldcw mov clc movsl jo mov xor imul test sahf mov scas xchg fldcw jb je mov xchg lock sub call decb outsl xchg (bad) jb xchg jmp sbb cmpsb aaa cmp or push jge lock jbe and mov mov push adc adc ret ja aad xor enter out incl or cwtl cmp mov cmp pushl (bad) sbb mov pop push jge (bad) fadds mov mov inc xchg subl lods scas cmp push (bad) and push cld incl (bad) daa pop inc sahf xchg add or les push jb int popf addr16 sbb xchg insl jmp shrl cs or arpl xor popa inc push call pop mov or dec pop push adc dec sbb loop clc mov fscale cs inc dec lea mov push mov push mov mov sbb mov lods inc aas icebp outsl adc bound dec int xor fwait cs lods insl mov scas add pop jae sbb pop cld push sbb add jl xor xor clc add cmp xor loopne bound mov mov (bad) pop push cmp incb push dec leave fdivp rorb cmpsl add test lds jmp dec jp jge pusha in adc mov dec push mov imul and xchg dec stos (bad) jnp mov push enter sub shr bound xor imul std mov mov xchg test (bad) nop xchg shrb sbb inc imul dec ret mov mov ret add (bad) lcall out icebp ficomp mov loop jne mov rorl jg test jbe mov mov shrl je push and out test test popa mov sub jbe sbb or (bad) xor (bad) xchg fisubl out adc fldl test xor cmp cmp aaa loope (bad) ljmp sbb add lods mov mov add add sbb jg (bad) jbe dec push sub test xor stc mov fisttpl ljmp das rcl into cmp test call lcall loopne movsl pusha cmp (bad) jo sbb (bad) (bad) cmp mov pop sbb movsb add int3 mov je pop dec inc lcall das popf sub or add mov sub jmp popa jl cmp xor scas pop inc popa fnop xchg out add out lret test aam push cwtl loope out sub pop pop scas jno push mov add adc (bad) test fiadd sbb rorb jo or and push xor es fist mov fmull pop and movsb clc ftst and scas jge in inc mov out arpl rolb mov (bad) fisttp push loopne xor (bad) pop add les mov jge mov jmp sahf cmp arpl push xchg or adc sbb lods mov dec cmp jge mov decb inc aaa lcall pop cld mov and add ljmp dec fs cmp mov mov pop daa xchg shr mov and push sub fsubs ficompl mov (bad) loope bound and dec adc inc call dec jge je (bad) jecxz pop ficom or je ret incb push aas and out adc mov leave or testl and (bad) mov sbb shr into mov and sub mov jbe xor add (bad) push mov ret pushf or (bad) push stos mov ficomp in daa inc inc ret or mov adc cmpsl mov addl ficoml pushf negl push int3 add repz shlb out pop aas out add mov push ss add mov lret jg,pn (bad) mov mov fdivrs adc mov popf test (bad) push in adc inc mov (bad) pop mov mov cltd (bad) jle push gs pop pop xchg push mov mov js mov (bad) pushf pop adc adc adc aaa loopne jmp push mov jno ffreep dec inc aas sbb inc inc xchg icebp fidivr loope loope sbb jno iret pop (bad) mov insb sbb jns test cmpxchg add mov aam dec incl (bad) xchg cwtl mov inc ret ljmp cmp add jge imul (bad) inc das out popa fcomps pop shl div push xchg jns imul ds cmc push lods sbb jle ljmp loop hlt (bad) aas add sti sbb cli mov sbb aam pop push cmc scas pop push mov mov ret add xor scas cmp sub pop inc test aaa call sbb pop outsl in lods pop mov aaa push les jb mov repz dec ret jmp cwtl mov paddd adc daa push icebp and jp pushl push loope push push scas pop pop int es cmp lock mov mov loop inc jecxz xchg push dec jnp movsl and fisubl outsl (bad) fcomip push neg push mov jg (bad) jg mov (bad) mov adc ds dec adc pop pop fisubrl loop js insb lret jge inc add add mov xor (bad) (bad) aas push or (bad) push aas dec das aas push ja dec lret add pop add dec mov pop pop shrl and lds daa fwait loopne push and aam andb push popa xchg pop pop cmp inc ss jbe test cwtl sub add das mov lock pop dec adc cmp stc mov pop add jmp ljmp lret mov nop xchg loope push sbb cli inc fdivrl pop out pop dec outsl les sbb icebp incl iret and fldt mov add imul out add sahf push jo pop xor cmc jns dec shlb or jne outsl (bad) mov dec adc mov inc or test or push jne (bad) out and mov mov mov stc inc xor xchg dec out lahf ja lahf movsl paddd imul test sbb xor movsb xchg mov push jne cmc clc ret push jmp or push cmp out test pop mov jb lods push xor adc and jle add mov jmp loope sub add dec iret mov lock loopne js imul stos sbb push movsl nop loope dec cmp lods add rorb clc dec bound enter loop scas lods fwait cmp sahf rcrb data16 and ficomp and add out add enter adc das push pop mov cltd or aas push enter sub mov cmp les mov xchg les cmp (bad) cli jb sub lock mov test jbe (bad) stos jp push mov es mov popl cmpsb out lea out bound fildll sbb fwait (bad) mov inc pop sub test outsl stos pushf (bad) pop mov decl and push stos das pop dec popa xchg icebp inc insb sub popa mov vpmaxsw or dec inc xchg push jb push mov mov push mov adc push pop jmp fldenv test in cwtl jg dec push icebp in mov add hlt xor lcall inc lahf add inc imul mov fildll jbe int jb push xchg mov xchg in and in pop movsb test inc push mov popa movsb pushf adc cmpsb into cmpsb iret dec call into and aas call aas pop xchg sub ret dec aam add hlt rol inc es jecxz fidiv cli mov xchg stos adc mov jbe std sahf xchg jmp icebp push mov loop leave inc or (bad) dec loope push sub jae inc or or xor xchg test (bad) std outsl call sbbl pop int ss enter icebp mov jecxz jbe sar fisttpll push in mov xor addr16 mov xor mov jg pop cmp xchg sub pop and dec (bad) mov push sub int (bad) sbb push add and call cmp loope jae sub mov push sarb mov dec imul in add and mov adc loop insl stos push leave mov dec pusha push call jg mov mov loopne loopne xchg clc out mov or cmpsb jp fcmovnu cli cltd mov jbe shlb or pop (bad) decl stos (bad) pop out rolb cmpsb test cli mov test and sarb fild fcmovne lret mov mov scas (bad) (bad) out fwait in add ret pop mov xchg add inc push nop mov incl sbb or and or gs dec cwtl xlat inc push pop imul aaa test out ret dec rorb (bad) test mov rol lock (bad) mov and sub aad sarb or out push fisub (bad) (bad) mov scas je dec inc idivb push stos sbb add xor jle add jae adc (bad) xor stos push movsb insl inc lock pop mov sub push insl pop mov test stc ljmp (bad) fcomip adc out test jge push repnz jmp das jno push or or das sub dec and testl cld data16 pop jge dec aam cmp fiadd add mov gs aaa aaa test out sbb icebp loopne in fisub ds loopne outsb lock imull ljmp arpl add add inc lock clc inc shrb mov (bad) push clc fistp ds xchg cmp inc sub xchg push je int3 popa mov frstor mov popf gs (bad) fcoms jno in xchg lret and stos sbb cmpsb mov jge ret push xchg js sahf cmpsl sbb jb jg mov call out inc cmp ss lock repz mov loop mov jo cmpsb orb and jg ljmp mov inc push xor rol sbb and ret sub loope jae push gs fidivrl iret mov xchg enter or in xor cs sbb into lcall inc fdivs rolb mov sub icebp pop dec mov mov inc ss mov loope jl jmp int3 mov stos fbld mov out jge repnz lock pop inc jge add mov mov fnstcw arpl ss xchg jo push xchg and mov ret and jnp add cli pop mov bound push imul inc bound stos adc (bad) jb push lcall orl and sbb fisub nop out inc sahf out aaa ret (bad) mov pop lret adc cs push gs adc sbb push mov mov or enter ss repz in sbb cmp push (bad) jg popa xchg pop rcrl add loope xor clc and cld mov mov test adc call in dec xchg stos ds push das sub movsl dec int3 or push dec mulb lea out xor (bad) jg arpl or dec test test rep fstl or sbb jne iret scas mov xor sbb push mov jg cmp push jb aaa push sub pop inc loope mov outsb out mov push mov push (bad) mov shll jmp cmc das mov sbb in stos inc mov cmp stos pop pop pop xlat mov xor iret sbbl inc shrl jb pop out mov xorl sub jl test jl (bad) fistpll sbb pop inc push daa (bad) mov (bad) mov in out jo iret or rclb ret xchg mov push ja fisttp push (bad) lcall lret ss lea dec xor pop lods xor (bad) jp (bad) gs mov ljmp (bad) outsl sub in mov inc sub cli sub jbe dec bound sbb mov aas (bad) mov mov sub dec xchg (bad) cmpsb enter mov inc jl or add dec and mov mov mov in push in les add mov push nop ja mov dec pop inc push xchg hlt aad pop cld mov push jp cwtl fsubl fistl jno incb fisub mov lea pop inc and aaa or jg outsb dec out leave sub lock pop fidiv ja insl mov mov push (bad) jg enter pop test cmp fisttpl jmp (bad) lcall jp loop pop push jnp adcl xchg or mov pop add mov push xor cmc (bad) loop jl push arpl pushf mov lcall lret movsb mov cmc cmp and incl xchg dec xchg popf pop imul mov in inc les icebp pop lods loopne enter mov push hlt pop xor scas mov or ret mov iret (bad) addr16 sar push data16 js outsb jns jge jmp dec ljmp push fistpl add dec (bad) loop add loopne dec ds mov add incl mov push addr16 outsb jmp jo inc cmp std jb fs adc jp bound imul aaa stos push sub sbb lods cmpsb xor sbb sbb push bound push sti pop (bad) das inc roll fwait jge jle addr16 xchg push loopne (bad) jae loope bound mov push dec out (bad) (bad) out (bad) jge sbb sub mov adc imul mov mov ret sub jmp rorb sti cmc insb icebp dec outsl les rcrb notb lods icebp lret mov xor sub add rorb jmp pushl or repz lds cltd xchg add cmc cld call stos popf hlt pop dec stos (bad) cmpsb xchg inc (bad) sti dec push add pop (bad) mulb mov mov test out xor dec push inc mov fdivr fisubr sbb cs rcr js mov arpl lahf fsubp dec stos push test adc icebp scas xor out adc pop jnp and aaa cmp repz std notb mov pminub jg jl sbb je mov jl je inc pop (bad) and and sbb adc mov xor mov pop mov sub mov repz movsb inc xchg test enter sahf xchg xchg dec or fiadd inc jno inc xorl rorl jge in mov cmp test fstl lcall outsb xor mov jge push mov sahf jb cmp cmp decl dec mov in adc sbb mov jmp popa testb mov or gs arpl insb mov xchg mov insl lock arpl push cmp add loopne push add cmc pop dec mov sbb jl mov test push mov lods push fwait sbb outsb leave push divb push push inc mov stos inc adc scas adc pusha mov popf mov and sbb es mov int insl sbb dec mov std jmp or test adc cmc add cmp pop mov pop mov ficoml pop cmc add loop popf cltd (bad) cwtl mov mov jmp mov adc insl test adc cmp push dec mov dec sar pop test (bad) mov mov cmp push push loopne,pt cwtl je aaa adc push call test mov jle enter jge fstpl xor repz sahf add xor dec icebp jae push es push dec cmpsl inc mov mov sahf adc sahf in or xor test adc hlt (bad) jns pop imul repz or arpl add or cld jne sbb mov insb stos movsb push fsubrl dec ja movsl nopl repnz sub inc or mov cmp jge cmpl add push mov loope fs sbb mov xchg push mov mov push sub cs cmp jp ja loop xor mov mov scas data16 pop inc stos roll lock inc in xor notb repnz outsb loope sub imul icebp int lods loopne jg fstpt dec push js push dec cmp jge adc (bad) jp and adcl pop lock pop xor and push imulb ss sahf cwtl lea jl loop test or scas aaa dec ja dec jle pop jbe leave les icebp sub inc out inc js adc pop xor ror scas std xor push xchg (bad) pop mov and repnz cs (bad) jg xchg fisubrl outsl adc push cmp push in jne idivl in into popa loop jmp fcompl cmpsl add aas stos cltd push adc ja add sti in rcl pop and cli testb rcrb add cmp pusha cli or lret sbb push sbb adc inc ret dec sbb mov lods cli xchg ja add dec xchg roll adc xor mov idiv add xchg fnop xchg das or sub mov pusha add dec mov cli push sar dec test outsb hlt pop adc (bad) das mov movsb add or and pop jnp pop cmp pusha add sar or mov enter xadd daa push iret mov cmp sub and shrb add xchg out daa mov ljmp hlt inc int int3 sbb dec pop insb enter adc ret cmc in jmp (bad) hlt into fdivrs pop push push outsb sbb shr and ffreep scas sar insl inc (bad) gs lods clc sarb sahf dec (bad) data16 jb iret imul mov mov sbb sbb out fimul aaa lahf pop inc fbld pop pop das mov push or cmpsb (bad) push js push das jns lahf or in in push adc ret iret dec inc neg or ficomp out jbe jp push jl sub mov mov cli sti fldl mov pop cmp leave fldl add test (bad) in (bad) into xor and mov movb xchg cmp add (bad) scas (bad) sldt and mov scas inc or sbb sbb das jle scas (bad) xor imul (bad) add mov sub bound adc data16 in sbb lods out lods push mov (bad) jg mov icebp jmp fwait insl dec add cmc xor lods mov mov lahf mov sub pop and sbb aam div jl imul testl scas mov mov adc adc and out divl mov sub add cmp mov bound add mov inc out sub idivb lds in frstor pop into and pop xor add xchg jo (bad) arpl lods pop (bad) and les fdivr pushl jmp iret jbe mov adc inc popa push pop mov jb pop dec mov xor dec lods jge call fsubs sbb xor sub sbb jecxz (bad) sbb xor (bad) ljmp pop roll into mov stc mov jmp iret and bound adc or aam mov popl dec outsl mov adc or mov in ret decl ja cli ret dec mov (bad) lcall or mov mov daa cmpsb stc cmp stos sub mov cmp sti push mov lods jg sbb xchg lea movsl div mov (bad) inc mov dec mov ja jp or push (bad) mov insb xor jmp shlb pop idivl lahf insl dec push jge rorb dec out and les cmpsl lods xor adc mov test ret sbb sbb out xor cmp fistpl xor mov and add jp out and adc xor (bad) add lea call jle cs outsl push jp mov dec fdiv dec add push cli and divb or jno dec ds pop dec enter and outsl add (bad) push jo push mov jl and xor aaa dec mov stc pop sbb int3 sub mov push in out imul sbb (bad) std mov fild mov in xor inc sub sub add xlat mov (bad) call xchg clc xchg add and ror cmp mov mov mov loopne loopne or jne cmp dec mov pop iret dec xor pop and repz or mov xchg dec pop mov imul data16 cld aas add and jl frstor incl xor dec mov add mov loop lods in xlat lock jmp and push cs mov dec aad mov jmp jbe adcb loop lret in cmp inc mov pop call inc sub adc mov xchg mov pop mov test adc test dec mov push sub or std jp sbb (bad) cs das ret pushf in enter add push (bad) adc dec push into fldcw mov inc lret push mov fistp jnp pop test mov inc stos cmp sbb pop cmp sbb pop mov cmc loope pop mov icebp pop enter jge sahf (bad) fsubl add or pushf nop and mov push sub xchg pusha lcall lods add xchg imul xor jge ror out clc int lock xor test loop jne loope fisttpl outsl (bad) je mov enter push sbb mov inc sbb incl fnstcw jge lock adc cmpsl dec lret sbb pop rcl mov fsubs aas cmc inc push push (bad) leave fcmove dec jge pop inc bound das sub mov in adc mov fild mov sub pop xor cld xchg jg cmp sahf (bad) pop jno xor jge mov pop (bad) push or sub jb (bad) mov mov (bad) shrb arpl scas xchg imul test cmp test shrl bound mov addr16 es mov and adc jecxz jle in sarl jo aad (bad) idivl push inc mov push or std xorl or sbb repz pop les push sbb rcrb pop out pop in xchg pushf cwtl hlt aad and cmc adc es fimul push das or int rolb mov clc frstor or and subl leave mov and mov outsl loop,pn (bad) inc sub daa mov (bad) cli (bad) mov clc sub jbe push mov stc sbb mov adc fldt icebp cmp cmp mov in add jge stos push dec mov (bad) lock push xchg cmpsl fnsave sub test mov inc das adcb or mov out ret dec add inc les sub push (bad) aam addb dec jle adc aam mov mov xor jmp je mov ja pop sarl leave and xor mov cwtl xchg sbb (bad) ja xchg or sti push mov push push jge inc std sub cmpsb es add and (bad) bound (bad) jp dec inc fisubr sub js dec jno icebp cltd cmp pop push (bad) jo sub inc mov ret push cmp xor sahf cwtl fidivrl jg jmp (bad) jbe or arpl movb neg rclb mov repnz scas xor das aas jge push mov adc add dec fmull pop jbe loope xor leave xchg clc and mov out adcl sub mov push ds inc scas push add scas mov cmpsb push sbb pop andb daa push inc inc (bad) fstl aam (bad) sbb pop popa lock push pushf sbb test xchg mov xchg pop std push sbb add mov cs testl inc pop (bad) lret loopne scas adcb or pop inc ss in shrb xchg xchg jge aas jge pop (bad) es jp jp add and test sub xor mov mov fisubr fwait stos mov pop jecxz hlt ljmp sbb add fbstp mov or xchg mov (bad) aas daa lock data16 fsubr outsl mov andb or loopne add cltd jb xlat and cwtl push xchg loope lds decb push add push add mov inc add scas cli (bad) mov (bad) sub push mov hlt add (bad) aad clc mov ljmp sbb sub cmc or hlt adc push add push outsb jp insb (bad) (bad) dec mov xlat (bad) lods xor clc mov adc inc imul out cld jg aas fs into or ja cs sahf in pop xchg stc and cmc push inc lret adc jb mov ljmp xor test cmc xor inc sub jg lcall sbb out jb xor and jno push scas sbb or loopne dec mov pop fldenv pop and adc out or loopne outsb lret (bad) icebp out push pop div jbe imul jmp fmuls negl sbb xchg pushw jmp push std mov lock adc mov jg lds nop sbb mov cwtl bound pop mov lcall jmp aad adc xchg orb popf andb and sub xchg jecxz pushl pushaw pop pop test or jmp icebp pop add push cld mov or cmp stos test (bad) cltd xchg adc movsb ljmp stos or mov bound jnp mov xchg enter pop xchg push and shlb push loope mov push std jg daa pop and icebp in or adc pop adc lcall mov gs loopne js mulb and lock inc popf mov jmp and pop mov frstor cmpl sahf lds fmull cwtl or push out scas pop mov cmc clc fstps dec scas inc ret xchg jne loopne push lret cmpsl and ret cld cs in fcomip fwait (bad) sbb aam repnz jl sbb jbe fistp enter mov cmpsb push mov adc mov rorb mov cmc mov movsb push inc and adc push push add aad adc pusha add mov (bad) adc loop mov mov and xchg cmp mov or clc pushf add jmp or mov push ret push xchg adc int3 imul jl fwait aaa mov popa xor lcall std cmp mov iret mov test (bad) je dec dec cmp sbb xor or (bad) stc push mov mov and inc pop sarl and mov clc jge add mov xchg dec (bad) xor mov mov in or sub cmp cs lock lcall lods stos mulb mov (bad) jbe out stos loopne mov adc push mov add dec (bad) clc mov enter dec sub add and xchg fcoms out sar cwtl push pop pop scas jecxz add pop inc jl or clc lahf stos idiv sub outsb xchg in mov sahf push mov ds (bad) dec jg,pn jg and xchg and mov dec out pop cwtl in lods (bad) jg mov mov inc jbe scas mov cltd jge push fisttpll mull push and les mov andl fwait mov sbb pop int call jge pop mov lea push outsl rorb jbe insl or add cmpsb rcll pusha inc or movsb dec jp js cmp fistpll dec loopne repnz movd lret jmp jno lret out into add sar pop lcall out lods (bad) mov xchg mov sbb jecxz sub push dec ret jmp jmp lds pop rorl shl hlt daa add jmp mov push sub fisttpl jmp out das jp fwait push loopne aas dec js test mov jo or adc ret outsb setle pop dec scas sub dec out mov ds ds (bad) adc add adc xor mov lret push imul sub dec adcl daa loop mov enter aaa mov add ljmp cld in and ljmp jp add push dec stos (bad) mov (bad) outsb mov and adc sahf mov dec loope mov (bad) test repz pop add jno xor ret cmp mov jg jmp das daa inc fildll xchg jmp mov cmp pushf (bad) iret test int (bad) sbb jp repz and or inc push sbb add fnstsw adc das lods push mov mov aad mov mov push adc sub jg icebp mov sub xchg sahf cmp or dec sbb push sub inc sub pop fstl mov mov add out sub xor xchg sub pop rdpmc ss icebp mov test sti fstpl rcrb shrl push push loope mov sbb sub or lods adc cli outsl stos and cmpsb mov sub pcmpgtd mov out (bad) sti je adc fldcw les (bad) push pop dec push cmp jg scas sbb pop das or testb std mov xor xchg mov pop xorb idivb sti adc bound ljmp push and (bad) push cmpxchg mov mov push sub add or cmp test js rcll mov (bad) pop (bad) repnz icebp notb scas int3 xorb jge,pn add les mov push adc out fsubrl pop jmp (bad) mov out out test push dec push in ret sbb in adc xchg imul sub loopne xor fmull jb mov test popa pop lods (bad) mov scas xchg jo push lret sbb mov cmc cmp xor push push adc mov add mov into jo pusha gs scas ret es test add lock adc dec dec xlat shrb inc mov adc adc ds mov sub inc sub clc lods xchg mov loop imull mov es addr16 mov add mov mov adcl pop movsl mov mov pop fs jg pop mov xchg out es inc sub or xor sbb lret insb jg stos stc dec insl in das cltd pop inc hlt or jbe jg mov lds cmp mov nop test clc std (bad) jmp out sbb icebp arpl mov test addr16 ja xchg cmp notb push (bad) stos lock push mov mov dec mov loopne ljmp pop cmc mov cmp pop push or call jmp push notl inc daa dec clc cmp les mov and in iret (bad) jbe scas push jo lock cwtl sahf pop clc mov and jl add xchg (bad) cs out mov rolb inc and icebp test fcomps cmpsb push pop sbb insl icebp pop scas test in dec dec das loopne mov xor call sbb fmuls mov sub cmp sbb xor mov mov cmpl iret pop pushf jge es test mov movsl dec push lret or mov (bad) out popa daa jmp out ss mov js push sarb sub sbb out mov (bad) mov test lds push and rcl nop xchg xor loopne loopne xchg cmp mov sub mulb push xor (bad) push pusha adc inc enter xchg imul and sub pushf outsb dec inc jno insl mov sbb (bad) cmpsl push or cmpsb in xor add outsl mov loop mov lods outsl call adc adc jge inc push push jle adc add sti pusha lcall jne mov pop scas fsubl movsl add js hlt dec ja (bad) cmpsb and pushf int mov in jg push mov sub sub pop mov jmp cmp aam sbb fbstp add inc pop dec inc or mov mov out push dec mov ja arpl inc mov hlt lret mov pop mov cmc aaa fdivs push stos sub xchg mov jg rolb (bad) insb pop cwtl dec or lock icebp dec cmpsl push mov and stc jp outsl popa jb mov jnp mov mov out repz xchg push and outsb push (bad) dec push dec (bad) lods lret inc das mov inc jge push dec mov push fsubrl mov or data16 cld lock mov frstor out cmp mov mov (bad) xor or add dec push fbstp nop push outsl sub aas ss out adc popf push das xor push (bad) into decb decb not js xbegin ljmp nop nop mulb insb or xor ss push push aas jl fimul jp js outsl fsubs out add xor push addr16 rol iret push gs push scas movb jno xchg test lahf scas xor cmpsl in loopne (bad) mov not cmp pop (bad) roll ret push or pop dec loope dec aas adc dec lods cmpsb add (bad) mov stos hlt jne cmp into or (bad) scas movsl xchg mov pop xlat daa test pop hlt and jle test int3 sahf (bad) les mov sbb or and inc xchg cmp fisub add and push sub pusha xchg hlt seto pop sub cmp icebp iret and xor sahf out and push pop (bad) fsubl sub in or cmp dec mov js xchg fbld inc push adc out push inc pop push push mov stc add push inc cmpsl fsubl gs sahf repnz jo xchg data16 sub add inc mov add loope push push dec sbb mov or sub or pop xlat mov test sub imul call inc cld addr16 sub (bad) cmp dec or fcoms or scas gs cmc fldt add bnd cmpsb pop (bad) push mov add xor sbb int3 ret mov sbb pop or pop mov push pop pop mov push ret jp xor mov aad lcall mov test fwait jg push js faddl pop (bad) scas call not scas cwtl popa clc cmpsb lsl gs mov stos or dec add jmp dec std cmpsl pop fwait xchg iret (bad) push bound cld imul int3 cmp adc int3 sbb mov xor jb dec addr16 subl sbb dec (bad) fist mov call testb dec xor adc repz hlt lea add inc aam outsl (bad) pop add ja in push pop jge add pop hlt pop outsl adcl cwtl fwait jne and dec leave cs sub imul rcrb in std cld imul in sbb std ljmp cwtl add sbb aam aaa rclb pop popa cmc push mov daa cmp sub dec ss and jl test xchg shlb sub sbb dec test inc es xchg loope pushf pop jb xchg (bad) push xor pop sbb push sub sbb sub mov or mov or adc inc and ds jbe xchg call bound sub add xor ds scas cli lret rcrl pop mov xor sub ds jbe or dec das das inc (bad) out mov sub subl daa add cld roll mov call mov lods rolb cs fisub add jl xor je outsl std pop or xchg lret add in xor imul pop loope aad mov add fnstcw addr16 aam arpl dec fmull add js inc xor pop xor test adc cmp mov ds cs dec pop cmovg sbb jnp jg xor (bad) pop lret cld mov testl mov jne fildl cwtl and rorb stos xchg cwtl inc push mov lock test ljmp lea mov movb mov mov sub adc rorb insb (bad) mov add loopne and jg test sbb int3 cltd loope sub test push sub jg pop (bad) pushf mov scas or push dec dec in call mov sahf dec fldcw (bad) fwait jge addr16 lock mov sub xchg ja xchg mov dec cmp dec add lods dec (bad) shlb rorl lahf xor push jg (bad) (bad) jne add cmp cmpsb dec dec jnp aas int xchg mov inc (bad) or pop cmc xor dec jecxz mov xor push push jns enter loopne loopne sbb std jg enter ret jl push sti or add loop push sbb mov jno jp mov pop pop loop pop pop pop (bad) dec rcrb ja and cmpb stos mov sbb fldt mov sub sbb (bad) push test mov sub call lds mov fwait push scas fistp pop ljmp mov sar xor cltd mov mov sbb mov (bad) lods mov rclb and dec and aad push rorb mov sbb pop je add or ror pop sub aad cli mov (bad) adc mov cltd bound pop je out cli shrl loop xor push inc mov or pop ret or fwait (bad) cmc pop add xor adc mov loop mov pop incl sar xor in in cli ret int3 insb mov push cmp mov aaa lret cmp mov (bad) jnp inc ljmp xor sti sub mov mov loope ds (bad) aaa psubd rcll mov shrl in fstl pop dec sbb sahf arpl lods les or push or jp xor adc inc and push data16 dec mov cld inc dec scas out push cmpb in enter shlb add sub (bad) xchg push push inc rclb loope xor mov fild or cmp mov out fstpl shll mov push pushf add sbb daa pop pusha and fcmovnb adc and inc cli cmp adc mov mov dec xchg lock pop into icebp add xor add hlt xchg or clc cmpsl rclb js pop bound pop hlt in (bad) repnz pop pop lock pop icebp stos popf scas jge add popf (bad) cwtl mov icebp sub mov pop out aam in mov jno fimul (bad) xor faddp adc jge mulb push scas jge xchg or imul xchg cmp popf adc call xchg pop sbb mov inc leave or cmpl xchg inc cmc inc dec sub roll dec jae int3 data16 pop inc test inc hlt ljmp and pop or sahf dec out ss jge int3 or imul or add push xor loope popa push out inc std cwtl das cmp int lea pop cld mov lret adc dec mov lea popa jmp pop ss cli jmp out mov (bad) in push xchg out scas add andb mov mov pop es leave dec jnp xor dec or lock in mov outsl bound sbb jne mov pushf inc ret push test sub mov push inc and pop jbe lea aam push pop pop data16 test jp and pop lcall in mov or fisub jle jno (bad) jp xor (bad) jg rcrb sbb jmp xchg bound pop movsl fsubr int push cmp cmp scas push xor sbb or adcb aaa loop (bad) mul xchg jb inc fmull add fldl jno push loop negb mov or and adc adc mov and (bad) out stos mov sbb mov adc lods je jge sbb mov sbb inc sbb xor dec xlat and add cs ret stc pop push xchg jbe jle aad push xchg fs insl mov and std jo into xor stos test cs dec (bad) data16 xchg adc (bad) repnz and (bad) decb push jecxz sbb cmpsb sahf push int3 mov pop loopne frstor pop jne (bad) mov push cmp sub pop pop js or lock int3 add clc push dec sbb es jmp xor mov int sti mov test cli lahf dec arpl clc es (bad) ret push cmp push ja loope sbb mov fadds jmp (bad) pop test pop in adc pop ds (bad) mov outsb push lock mov idivl sarb push iret fstl dec push dec in movsb fidivr sub imul and push (bad) push aas mov xchg ljmp pushf push sbb fwait adc xchg dec xor cli mov or (bad) push xchg movswl faddp pop addr16 push dec add push ficompl xchg push pop jmp mov insl jge (bad) inc andl fldcw popa icebp sub ja jp fist rclb mov jae mov popf adc loopne fcoml push rorb cmpsl adc and cmpsb in ret push ljmp aam sub popa cltd lret mov xchg push xlat dec dec adc lahf sbb and add cs inc (bad) insb mov outsb ja (bad) out mov repnz sahf aaa in push ret cwtl adc es xor push in fwait scas mov bound mov mov push mov aas inc scas cltd xchg movhps add mov sbb add (bad) das sub sub scas hlt call mov pop sub notb insb (bad) int3 push mov jb dec ljmp imul push popa add insb rcr push inc add loope hlt sbb push xor add or cmp mov add pushf cmp mov jge cmp fnstsw test and les (bad) ss (bad) pop pop popa hlt sub inc decl add or and xor (bad) push mov cmp mov add lahf inc (bad) dec js imul in popa ljmp in jbe dec clc (bad) addl and mov hlt jmp notb outsb in int push push icebp add cmc lods pop sub adc and test test inc pushf jge mov aad sbb adc ja mov lods add leave stc data16 clc push lret sub mov lods dec sbb and (bad) lock xchg scas loope adc dec and xlat test stos xchg ja pop in jbe push pop testb daa cld call xlat aas adc lock sbb bnd pop mov sbb (bad) fistpl loopne das lea adc mov xor xor iret pop cs adcl sbb or test add jg sub and dec cmp insl jb hlt inc mov lds movsb cmp aad subb sbb dec stos inc push or aam xchg and push sub lock pop jge repz dec or cli ja pop push inc daa mov decl mov pop dec jle movl or lock sbb xor ret xchg jmp cmpl mov cmpsl imul (bad) jo or (bad) cld imul stos mov jmp in stc rorl fwait aas lods call mov push mov and or jecxz stos leave insl shrl inc add stos loop cmpsb and sub ret lcall lret push ljmp xchg aas int and pop inc dec xor movsl (bad) jg aas int mov mov movsb push adc int imul and xor pop iret adc jge out sbb mov dec test lahf mov ret add stos (bad) fs and push stc pop mov dec pop mov inc and jo das iret iret fildll xchg loope rorb in out mov imul or sahf mov or out jae out addr16 mov push pop dec pop xor adc mov dec cmp and mov test pop out fs stos bound mov enter inc cltd out ds sub sub pop jae cmp bswap call push xor push loopne mov lods addr16 lods inc cmpsl jecxz (bad) das loope adc dec repz stos mov lods in loope lcall inc mov test pop aaa jnp inc mov add insb (bad) scas (bad) jp mov int nop stos stos js lods pushf cltd movsb (bad) jl cmpsl sar pop frndint mov inc mov mov xorb iret and mov jge mov push shrb lahf negb mov mov mov aas movsb sbb loop repz mov dec repz std (bad) jne dec stos in aaa inc es xchg movsb rcrl mov repnz test push test mov push (bad) jl stos (bad) xor ret lahf out dec imul lret call mov loope mov cmp cmp or pop inc stos mov lret outsl movl cmp xchg shrl xchg sub cmpsl adc inc imul stos jo xchg (bad) aad in nop xor test gs repz daa test sar imul aam mov mov add sub mov sub adc int rcrl addb pop ret lret pushf dec dec jbe bound pop mov imul mov sar imul bound lcall sub stos jne out add (bad) push jns movsl stc rol inc and jge stos lcall es or push jecxz xchg inc xor ds ficoml jae mov or inc push and test stos jns sbb lods popf es (bad) push int cmpsb fisttpl sub sub mov cmp imul sub cmpsl cltd imul xchg (bad) sar pop (bad) lahf sub add int es (bad) or sub dec repz in out retw lret adc and (bad) mov xor ja cltd lods or mov gs out stos pop repnz ljmp out jno test cmpsb xchg hlt popf cmp sub cmpsb loopne mov idivl test xchg pop mov movsb cmp cmp sti cld xor cmp push ret in mov repz jns lea mov cwtl mov gs out lret inc pop jge mov lahf add and int3 (bad) push pusha mulb fs shr shrl stos xor jmp lcall mov inc divb jle add xlat xor xor repz mov stos jne cs lahf mov adc cmpsl stc in gs sbb sti push jo (bad) ja push das test and xor push daa (bad) jp lds cmp inc lock ja lcall jb stos into xchg jnp scas data16 enter jl adc cld imul sub jns out jmp fcmove scas test mov dec push and push mov (bad) js inc mov in push dec clc dec movsb sbb arpl push lcall (bad) cmp daa adc fdivp adc jo dec psadbw xchg data16 dec nop divb insb dec xchg cmp jge addl push add ffreep jmp mov sbbl mov (bad) out ss cmpsl adc stos fwait jno or mov sti jl and (bad) mov dec inc sbb stc sbb push btc mov jno fdivp sub in dec repz mov movsb and pop sti dec cwtl (bad) mov lcall jae rcll sbb or jmp ds data16 es enter lret scas (bad) jl rcl arpl jb dec mov fcoml mov inc pop in pusha mov cmpsl stc imul xor call pop push lahf popf out aaa and mov xor and sti sar imul inc ret lahf out push ret es js xor out jg lcall jge out ds or repz xor es stc adc movsl (bad) xor lcall lcall enter xchg std imul mov jp jg aas int jp je std inc (bad) stos sub insl cld imul out jbe stos fdivrl sarl mov dec repz jb stos add loop cld push mov and mov bswap (bad) popf mov out repz mov push push gs (bad) mov in stos pop gs aam test mov add mov mov (bad) cltd out (bad) xchg add test sbb (bad) pop mov push (bad) ja xchg out xlat lcall test inc push sub mov xchg imul loopne xchg mov and mov adc dec pushf xchg cmpsl stc shrl lret ret andl jae rsm call dec adc mov xor scas mov sub mov stos sti push lods add sar imul xchg inc ret imul lock sbb imul adc cmc mov push aas dec sub lret mov (bad) (bad) inc jl rorl mov shll dec stos mov insb je lahf (bad) testl add js int stos mov das addr16 xor fcmovu test call dec cmp icebp inc pop stos sti (bad) or aas int out mov in push js adc imul add dec sub mov push loopne incb cmp repz cwtl xlat outsl stos insb lods sbbb rolb ret jle mov inc pop movsb xor xchg ret ficompl (bad) jl stos inc (bad) mov push xor stos dec out popa stos dec stos fucom and mov mov mov mov mov sbb cmp stos inc and push cs loopne dec lea mov in out es je and lods nop xor call pop push mov sbbb repz cmp sbb (bad) mov fidivr ljmp cmpsl std das mov fwait push pop jecxz les sub inc ret add imul sti (bad) insl jl stos xchg add xchg cmp lahf out mov loop and ret jmp rcrl ret pusha out sti cmp mov or mov sahf pop jecxz stos test fdivr rclb out daa (bad) jo mov jge leave cmp mov mov ucomiss push and xor ret lock sti sbb loope mov shl leave cmpsl mov arpl stc (bad) sub sub jge cmpsl stc subb push or dec fistpll (bad) mov stos daa jecxz sarl add sahf lahf idivb xchg popa or enter and stos inc lret xor xlat loope fisttp sub inc mov pop out cmp bound xor stos int out imul ja xchg add add repz pop (bad) fdivrl mov and loopne mov xchg (bad) xor movsl addr16 mov fldcw mov fnstenv push mov js daa pop push nop push cs in aas lods sbb (bad) mov mov mov test gs push adc stos dec push cmpsl lret mov push dec leave out (bad) stos jge mov (bad) mov repnz jnp xor xchg inc stos shrl jl jle out or mov mov mov and call ret cld stos sub jno cmpsl stc sbb stos fisubl fidivl stos lods add push mov (bad) cld imul ljmp dec imul push inc lret xor cld imul jnp mov decl dec mov pop imul jb cmc rcl lret ret stos inc sahf xor cltd popa pop daa mov imul sub fsubl bound movsl inc aaa stos xor xor ret push adc push dec xor imul out repz push xor lret into out pop mov stos out or fdivl xlat mov cmp lahf lahf sbb scas xor cmp pop inc scas imulb ljmp cwtl mov push or push out lods lahf push andb mov mov insl jns mov mov gs push pop testb jne cmp std lods mov stos cmp or stos add cmp gs dec shr leave out jne dec pop jne stos daa aas nop in xchg mov stos loopne in xchg cmc dec mov pop cmp dec fbstp mov lods (bad) cmc rcr cmp mov add bound cmp mov jb xchg stos imull jge mov leave xchg mov repnz pcmpgtb add ja pop fdivrp mov mov lods subb stos push xor mov ficomp jns in mov fcoml repnz ret adc jge jge iret repz daa dec idivb xor pop bsf stos push lods cmp pusha jge in push mov out mov push stos pop daa xor pop bound repnz mov adc sub cmp or jl rorb xchg outsb out bound div and dec stos (bad) sti sahf xchg cld out sbb or mov test inc sub js test push jnp outsl stc cmp dec (bad) sub inc adc push xchg cwtl or jo inc clc in cmp or cmpsl adc xchg pop aas in mov stos dec push inc test push aas int pop in loope push push xchg xchg loopne int push stos iret lods pop mov or addr16 mov loope loope dec fisubr lock arpl lock stos mov popa clc imul scas push and and cmp pushf stos mov test fsubl mov cwtl cmp (bad) and push and cmpb cmpsl mov aas jle aas jle scas mov loopne mov (bad) mov aaa jns shrl sub leave orl insb hlt rcrl cmp repnz mov arpl dec lret jae repnz sahf int3 xchg cmpsl lods nop hlt jb sahf cmp mov arpl xor ds and leave push jp push mov imul xor fiadd jp stos jo mov std imul loope mov fs aas int dec daa mov icebp push dec dec repz loope (bad) or mov add addr16 icebp cmpsl stc (bad) mov cmp es add aas insl rorl (bad) pop ljmp jmp and adc outsb movsl imul roll call cld sbb pop inc xor lret (bad) jmp pop in sbb add mov ss add (bad) das test xchg inc and stos push mov lods jge sbb cmp jno test or inc lods sub das cmp mov mov insb stos stos dec stos inc lret jo fsubrl out adc cmp xchg gs mov mov clc not xchg add jb into push shrl aaa and lahf scas ret cmp out mov ljmp dec xchg mov fcmovu div cmpsl std sub xor repz mov into lretw lret rorb push insb stos and imulb ljmp outsl test push imul leave jecxz fimull sahf xchg lahf bound adc pop add push xchg xchg mov fildll mov pop jg aas sub jmp ret inc les mov stos mov (bad) imul xor aaa es mov fstl lcall sahf aas out stos sub xor and xchg out cmp nop rol mov bound std or sub out imul (bad) out pop hlt jnp stos movsb and out add mov (bad) adc lods test fidivr mov shrl testl imull xor cld imul lret push push pop jnp xchg shlb mov rcrl jecxz mov clc xor mov scas sbb (bad) jle aas in out sbb mov pop inc pop stos pop out mov insb dec stos ficom test add out out jno sarb pushl (bad) comiss fsubp divb mov aad and inc arpl lds mov dec mov pop test mov mov scas cs loope fcomps cmpsb (bad) aas test or cmpsl adc mov dec iret add mov sub xchg cmpsl loopne jnp addr16 mov rolb shrl and dec mov push mov adc dec xchg subb pop test jnp stos jmp sbb xor xchg dec repz mov xchg mov fisubrl (bad) push clc imul repnz rorb gs adc adc cmpsl jge fucomip push stos cmpsl jb in loope or lahf out mov movsb fsubp jns mov mov les js out mov ret mov (bad) cmp add jmp test xor inc xlat mov das and jecxz ljmp inc or test mov shll jecxz sub (bad) jg pop outsl pop movsl movsl inc mov mov pop lods (bad) sub inc and out (bad) jg xor cltd dec push aas and push clc xor outsl mov xor stos mov jne xchg xor sti out ret push xchg inc inc jg arpl aaa fistpll jne mov push shrb inc push lret push cmc dec and add clc in sysexit data16 in xchg shr mov pushl lea pop cmpsb xor sbb pushf movzwl add iret adc into sbb push mov or or aaa cli mov pop jmp (bad) divl pop inc xor out std sbb mov lods xchg loope aad fsubl inc pop and jl loope andl add jg sbb sub out aaa dec jg xor ss and dec add dec jecxz sub push sub fistp neg sbb lret int3 sbb iret mov scas sbb hlt (bad) or loope push rcrb xchg ret inc dec out cmpsl stos leave sarl je push mov pop or pop loopne in cmp jle xchg enter sub iret ds pop dec pop arpl addl popf out adc cmpsl mov and inc sbb mov ljmp pop in out pop push and add into xor hlt loope inc add and mov inc fcmove xor xchg imul mov js ljmpw add out push idivb xchg (bad) xchg jo pop sbb cmp notl and jecxz (bad) int or and nop push mov mov scas ss add (bad) dec xor mov inc sub pop cli shlb lret insb inc arpl repnz sbb les imul push cmp outsl or pop mov clc clc ficomp in mov pop insb sub adc sbb lcall out push xchg sub fwait inc gs repz shlb mov inc inc scas jno shll cmp mov pop fnstenv inc popa xchg sub cmp push cli xor cld mov pushf repz fmuls (bad) mov mov mov xchg or out jp dec loope aas adc fwait mov lcall in aaa jge dec icebp push jl lret adc mov lods add inc push ja jno insb push pop jns bound and inc ss fwait divl (bad) jne and push movsb adc imul aam aam push jle lds adc hlt test cmp lret fs sbb and sub jg sub mov lahf mov push adc repz movsl into mov push adc les fs cwtl mov adc and cmp mov mov dec mov clc sub push push push and je (bad) or movsb push and mov pop sub std xchg jb jo mov cld push push mov das lcall (bad) int pop repnz loope add push (bad) pop mov cs aas xchg (bad) repz hlt inc iret mull imul mov sub dec out xor in (bad) fcomps movsl sarl push (bad) into adc mov scas adc imul ret mov add or sub adc lock push cld lock mov push xchg inc jbe jge mov add test adc and fdivrs mov clc inc jp add jns pop lds (bad) (bad) xchg or (bad) mov sbb test popa inc int3 push inc nop mov sbb fwait sub in pop xor fld and pop insl into inc aam ds push sub fwait dec lcall push (bad) call cmpsb ficompl inc mov into pop jge pop jb cmp scas movsb cld mov mov lahf fnstsw add mov mov xchg mov (bad) dec std (bad) mov or stos jl mov inc jae sbb adc decl das testl xchg sub mov sahf sbb (bad) adc aas inc pop jp,pt or lods (bad) cmp test inc sub sarb and mov fsubs and inc sahf cmpsb sahf xchg sub rcr movsb pusha aas outsl pop push push cmp sbb inc cmc hlt push lcall push int3 cli rclb scas sub mov in les xor mov adc sbb je jge leave in nop pop test mov push jle cmp add fistpll mov and cmp pusha daa test nop loope pop popf std cmp lcall push dec sbb mov cs jg (bad) (bad) pushl sbb enter mov mov jo out jae mov fwait hlt sbb jb iret aaa jno sub aas stos push xchg xchg or sub mov stos aam clc ror out call add dec push mov jmp dec loopne test stos std or pushf dec jnp,pn mov scas jo mov adc and std dec add pop sub xor shrl repnz in sti sahf mov or lock es into inc pop pop pop data16 rolb sub xchg push mov fimull push ss pop cmp sub jmp jg (bad) es sbb fs test or incl add test dec sub pop (bad) cmp inc add push xchg pop push jb in adc loope mov ljmp mov inc (bad) psubq roll (bad) fistp lock xor sub jno mov or lret jge add icebp fildll scas xlat dec mov inc xchg hlt (bad) ds mov or push stos mov jle out sbb push mov jge sub mov insb out frstor (bad) pusha adc inc int3 ret fistpl cmpsl adc scas cmp insb pusha inc cmc push sub push or adc jbe std movsl pop jbe icebp dec mov in push out inc rorl mov jns ficom cltd cmp shlb mov fistpll mov inc pop mov mov jb add icebp inc xchg push fisttp aaa outsl fsubrp and cmp mov push lods dec and jae sti xor adc bound roll push push imul repz push mov mov pop les push mov test push mov or or push xor jnp lcall sbb xor xor fwait outsl xchg push out push aam sub stc out (bad) xor in xchg (bad) xchg pusha inc (bad) sarb addl mov ret sbb loope,pn sbb es mov lahf mov dec xor xor fidivr sub pop lcall or dec iret sbb inc add lods pop mov daa jecxz loope aad cli (bad) (bad) out or jge das cmp push int3 add add jle in lret call in movl gs inc std xchg clc insb inc aam shlb inc into or fildll fbld dec or dec sti pop jne and jl iret add clc cmpsl push inc cmp negb sub cmpb clc fisubl sbb test test push mov add and scas arpl (bad) pop and adc inc iret sub (bad) xchg sahf inc shrb mov fidiv push test sbb jbe push dec adc rolb xchg or ret (bad) ljmp lcall mov scas in add insl or xor jo lea dec add (bad) add mov clc cli sahf mov bound inc into or rcrb into cmp jge sbb mov aaa in xchg test and ret loop mov imul cmp in ss cmp out sub loope adc add push test arpl inc ret add jecxz cltd call push test test int3 xchg xlat shrb push ds mov adc mov lock fmuls mov outsl add mov and stos movsb scas (bad) pop mulb leave mov addr16 (bad) pop insb jbe (bad) push mov mov dec add test mov jge xor mov dec mov mov mov jge testl jg out sbb inc dec jmp jge or or cli sbb out sbb inc cs out roll addr16 sarl cmp lahf and (bad) jge lret mov sbb pusha lock bound and leave jecxz push pop (bad) dec ret clc and adc jbe lods or push pop nop sahf push sbb mov sbb lret dec xor xchg mov cmp or cmp adc adc lock ret enter or sub imul es aaa insl mov mov and push jecxz push lret rorl leave mov xchg repnz and jg movsl and ret sbb and push sbb mov lahf mov dec push into in clc cmp lock xor lret arpl adc jae adc iret sub pop (bad) icebp aam inc mov arpl push mov gs push mov test cmpsl dec mov nop cwtl rcrb in in into js icebp inc int and js mov aaa add or f2xm1 paddq sahf jecxz push cld cmp out and cmp mov mov je xlat pop orb imull push fwait aaa xchg cmp out and stos jp and adc xchg pop movsb xor (bad) les dec (bad) mov aas outsl adc call leave push mov pop mov shl or rorl outsl es or mov cmp insb icebp jmp mov rcrl iret push and (bad) sub cmp rcrl sbb int loop (bad) fildl dec mov pop (bad) or shrl push lods int (bad) jnp movsb xchg (bad) aaa int fstl mov xor repnz jge inc mov cmp jmp lret dec sbb dec xchg stos jmp add scas sub in cli adc sbb add (bad) jge cmp popf nop push hlt pop adc movsb out inc push inc shrb rcr mov fs jo fcoml ds adc push dec (bad) mov mov daa pop nop mov sub test and sbb push mov fsubrl and xchg jge mov cmp clc pop adc loope loop icebp adc sbb pop fisttpl into xchg fsubl dec jb lock jno adc sbb fsubrs add cmpsb adc int3 mov sbbl sub lods clc sbb sbbl cmp or and leave pop mov push pushf loop and leave iret test test xor inc dec dec hlt inc push adc pop pop (bad) xchg (bad) mov xchg push pop sarl popf or rclb jmp sub fs mov mov idivl mov lods (bad) push (bad) sbb or int fdivrs insb fimul cmp dec test int3 inc int3 (bad) icebp xor push (bad) mov dec mov dec dec push shll out test outsb cmp (bad) gs push add test sub jge and dec inc mov in fxch push sbb (bad) mulb xor (bad) mov or mov fwait loopne adc mov sarl xchg push repnz mov adc push movl sti mov enter int3 xchg pusha mov pop mov cmp sub push push mov fsub ja fs (bad) fadds jge mov gs (bad) faddl mov mov ja imul pop mov (bad) icebp cld xchg ret mov (bad) (bad) pushf mov fisubr xchg pop and pusha sub cld push rcrb and pop cli mov inc fisttpl lret dec or mov push insb or bound mov inc pop inc jle adc (bad) cmpsb adc sub push push mov push out mov and (bad) cmp push lea push dec movsl dec cmpl sub (bad) movsl out insb popa (bad) out sbb sbb movsl lea pop inc adc rcrb mov (bad) jno loopne imul pop popa xor xchg out aas subl jg sub sbb scas jmp jl aam jg push loope inc repz mov jge jg and and dec jecxz xchg push mov mov movsb mov imul lcall sub loope xchg dec xchg mov xchg in mov add into pop neg pushw inc ljmp mov and jb dec lret jge jne out mov adc out sbb adc (bad) out gs mov xor ret mov (bad) jl jmp pop add (bad) mov cmc lret xchg mov mov sahf lret inc (bad) inc ljmp cwtl ljmp sar in adcl (bad) mov repnz sub lcall mov insb mov pop push in mov mov adc push pop fistl pop adc (bad) icebp stos leave push ret sub mov sarb jl loopne cmp ds fisttpll es cmp rclb lret or mov aad in add jp (bad) sti dec add ljmp imulb insl shrb push xchg ss into xor and mov hlt into dec sti push fincstp mov jmp fildll in xchg mov out std jge xor mov add mov testb lret aaa sti lea into pop jecxz (bad) lret cmp push adc add cmp lret (bad) mov (bad) add lods and sti mov out adc dec push push sbb repz and jge sub daa dec jp fs bound mov pop mov cmp inc (bad) mov iret fnop jl out lods mov sbb dec cmp cwtl sbb mov mov mov call dec jns lret push push into cmp sbb push pop jge xor je dec repz test imul add mov rorb jmp repz movsl push enter lods add mov and pop js pushf enter xchg pop into xor repz mov jnp inc testb cmp mov dec xchg add imul test ss insl fnstcw out push sar lods jns (bad) jecxz mov mov inc and add dec out xchg int3 cltd test (bad) jge cmpsl mov cli jmp ds push pop cmc cmp (bad) push lahf cmp xchg pop movsl xor je es or mov (bad) lock int3 xor cmp dec xchg (bad) pop xchg or add ja jne xchg cmpb dec jg (bad) add xchg push mov mov sbb (bad) js mul inc xchg pop ret push and fistp sahf cmp or stc xchg push jl lret push fimul jo xor push jno xor cltd les mov mov mov test out decl sahf stos and sub in jbe js and outsl mov test les xor fs cmpsl mov nop outsl jge cwtl ficom xor fnstsw cmp add in sub pop lret ret push std test push cmpsb (bad) out bound rcl push repnz stos pop les sbb ljmp into psrld in cmp add mov loope clc cmp (bad) mov mov mov cmp (bad) or dec (bad) sbb aas dec xchg jl inc fwait out fisub add pop dec das lret mov cmp inc pop cmp mov lea mov icebp jle enter mov xor (bad) push loopne jmp mov push add dec (bad) jmp adc pusha pop gs out pop lret cld sub dec cmpsb and loop sbb ds dec popf and (bad) pop xchg inc das sbb add ffreep sbb sbb mull loopne jbe popa xor xor dec sbb pop pop sahf (bad) int3 cld pop repz dec ljmp std fidiv lods pop js mov decl cmpsb sbb cmp hlt jmp jo outsb std and shr clc mov xorb jns adc or adc (bad) (bad) scas and mov loope jl mov mov jecxz out mov bound das pop push mov add outsl shlb mov add or (bad) pop imul xchg (bad) sbb fbld in add stc ror jge fnstenv js rorb xor mov jb fxch mov sbb sbb loopne scas sub subl mov cmp mov pop (bad) xchg xchg aaa adc clc or add mov data16 test sbb mov adc mov xor mov xor mov mov add into cli or push out mov sbb ret mov xlat inc (bad) (bad) dec fisubr pop lret sub add xchg and xlat lahf xlat push (bad) fcomps adc dec rcl jae inc rdpmc rcll mov xchg pop pop xor or ss std or lret and xor pop iret mov decb hlt ret mov and aam out cwtl xor and pop dec push push push xchg adc jne aaa subl icebp clc add cmp mov stc dec sbb bound cld aaa rclb xlat shlb mov pop pop outsb push mov add enter mov xchg and shlb cmp jl add rolb xor pop xchg clc mov lcall repnz mov jnp (bad) cmp inc imul or inc fisttpll test in mov dec jbe mov cltd leave clc mov inc outsl or and inc sbb push push dec clc in aaa hlt jmp jecxz mov imul es add push ficom into xorb testb fldenv popa xchg mov rolb add jecxz fisubrl sub fisub mov jg jg push (bad) push mov push pop insl push movsl stos aam repnz jne,pn xor lods aaa repz iret push push mov push mov push pop in cmc push mov push (bad) aaa loopne into insl pop cmpsl pop pop hlt clc dec cmp push xor fldz add or lds mov movsl jo fbld sub pop out cmpsb dec fwait movsb add ds sbb (bad) lcall cmc cmp sti and sbb (bad) jg das mov sbb or push movsb mov xchg add hlt inc rcll dec or xor into xorl or and fisttpll hlt cmp (bad) fs mov loopne popf iret adc cld and sar int bound pop (bad) mul jp pusha dec adc fwait mov (bad) mov add sti sub adc cmp sub jg lds std stos sbb or cltd adc aam jmp or or fistpl test test and mov jl arpl ds pop mov in dec dec xor xlat ficoml push test lret loope push jge jl fimul and or and insb mov sub dec je sub sbbl mov jb hlt and (bad) jge std js clc dec mov mov sub jns lcall push mov cmp sbb mov loop sbb mov arpl sahf xchg pop js andl pop ret dec cmpsl pop cmp mov lret insl pop mov xor stc mov mov xchg mov stos test decl xchg dec mov dec sub mov es out dec bound adcl cmp daa std push (bad) and fadd loopne scas push dec test push into cmp cmpsl popa out push push cmp movsl mov xchg (bad) sub add into arpl push popa adc xor decl mov xlat bound mov cmc ljmp push add sahf sub jb ds mov jge and push inc pop inc scas (bad) imull bound call push js add cmp rcrb pop cmp daa aaa jge adc and xor out mov add pop mov sub jmp rcl add and or ror adc in mov cmp sbb add in mov sbb movsb mov (bad) shrb jecxz inc icebp in fs xlat (bad) punpckldq add inc mov int (bad) hlt pop (bad) (bad) iret pop pop push sub gs dec push scas sbb or sbb xor mov sub aam cld dec sbb adc xlat sbb negb sub jne loopne ss in push (bad) push ss mov mov fsubs xor into cmp (bad) dec and adc jg pusha pop lret fldenv pop jbe test jge xor rorl stos dec sbb inc adc sbb ds add std lea pop das sub bound add jno xorl lret stos jge inc adc lret cmp ljmp in push out pushf cmpsl out and or dec aam lcall shl inc sti mov (bad) (bad) jl cmp pop xchg out movb xor jnp push xor xor repnz lret fcomps ss jmp rclb inc xor les mov xchg xchg loope lea out dec inc pop mov cmp sbb mov mov xlat cmc testb add ds and enter loope jo (bad) xor push inc jl icebp xchg inc or test lock mov cmc insb lret cmp adc dec test neg pop dec test leave das push imulb cmpsl xchg stc inc sbb mov add push dec adc lea dec aaa inc repz cmc cmpsb mov lret and dec stos jmp mov cmpl fpatan lock fwait sub pop inc (bad) fwait or lret fs pop orb mov add enter sbb add and es mov negb cltd jp test mul jmp push inc pop mov sarl pop fsubrs add cmp or lret (bad) sbb movsb popa lret fisubr loopne sub push add pop arpl sbb push xchg cwtl xlat fwait add push lahf mov ds jnp mov repnz adc sbb push push push sbb test sbb or add pop out mov dec mov mov ret int pop push or out rcl das xchg pop fs pop in and nop sbb mov xchg dec ret (bad) xchg (bad) mov or push ds scas sahf add push addr16 sbb jp adc imul call repnz mov jnp (bad) mov leave subl mov (bad) int push sbb xchg dec jno sbb sbbb jle jle add das repz xor ret adc push js mov xor outsb sbb and das or xlat fsubs ljmp inc inc lret add mov jl (bad) setb mov movsl lahf and or clc add cmc out add sbb dec xchg je out jo cmp inc ret ljmp mov popf inc daa xchg into and dec pop outsb ret sahf js and loopne rcrb dec pop movsl icebp clc fwait sarb scas and mov (bad) (bad) repz sti dec sub stos cs jae ljmp push inc shrl push adc mov cmpsl xor icebp mov jge pop cmp cs (bad) aaa sarl es cld jno loop mov xor scas and push ds push pop or jp jo push ljmp fildll mov and addb imul in push or jnp mov add inc jns mov (bad) or cld cmp and and xchg ret mov stc lods add (bad) ljmp push pop jns cmpsl enter (bad) iret push hlt xchg dec mov or xor pusha aam push dec and xchg pop push and (bad) in stos push mov sbb rclb mov in push or and dec rclb (bad) jbe sbb out add idivb jmp xor and and jge lock pop push adc out ss push pop push cld into or hlt mov xchg fisttpl mov fild and add xor loopne adc push sahf stos testb out outsb pop daa fmuls mov xchg imul test xchg cmp add adc xor (bad) testb repnz cltd xor jp sbb adc icebp push loopne pusha mov arpl das shlb cld inc mov or movsl add dec and test sub or push loop inc std push insl ds fistp mov push jne mov dec pop push pusha cmpsb push out push ret inc or cmp out push add (bad) shll lahf loop add or add lret sti fldl sub sbb sub frstor sbb jle jp stos scas aam test dec dec xor pop push sbb sbb push or cmc ret insb push fldt or jl popf push push lcall pop adc (bad) inc pop cmpl rorb jg inc daa add or or arpl adc (bad) (bad) sbb (bad) xchg out cmp or sub cmpsb (bad) out es push in aam mov stos fdivr jge ret mov lret push ret les xor sbb push hlt mov add pop subl negb or push scas xlat inc push arpl ret (bad) adcl rorl sbb add aad sbb fldcw loope das inc add sti or mov popa imull sbb movsb jge std add adcb or lahf dec push movsb push xchg cmp pushf movsb fidivl fdivs test movsb out mov sub rclb scas mov cmpsb and fwait mov add insl mov inc inc int jo add loope cmp pushf in iret or test shr push clc fsubr pop sbb gs inc push inc rcrb pop lock out mov movb or fcoml lret push mov adc fstl inc js pushf push aad pop icebp lock dec mov push rolb xor (bad) jl int3 or push sbb jbe push push les and or inc mov push outsb data16 pop mulb push cmp repz push or loop int xchg imul add ss in shrb call mov loopne fidivr sbb mov xor or mov aas adcl fcompl adc daa test jmp xlat xchg popa adc lret scas push mov stos ret arpl std arpl scas ljmp dec outsl or enter xor push jbe push rorb stos sarb or jne pop push imul rcrb sbb push add loopne xlat idivb lock std lret push jnp push dec pop js popa inc imul sbb adc les in loope pop lret dec mov out or xor pop inc mov movsl out add pop cltd (bad) cmpsl sahf mov out popl fimul cmc push loope mov cld inc sub cltd mov jge fidivr repz adc mov fidivl ret dec bound or rorb lret sub lods cwtl add loopne dec into fs and adc or xchg push cmpsl andl (bad) sbb lcall ret xor or fstl andl (bad) dec adc repz cmp xorl pop jo data16 mov iret stos aaa leave imul test lock ss adc cmc push add scas fnsave es popf enter sbb dec xor loope aad pop add into mov (bad) push popl js stos fiadd incl xchg sbb jge pop add cmp mov icebp lds aam in nop repnz or sbb scas sub pop clc inc mov in pop (bad) fsubs dec xchg jge push shlb xor movsb fisubl push daa xor aad flds add rcrb js sbb jg xor xchg and or cmpsl test push js add pop jno repnz or adc xor cmp ret adc and xchg fs adc mov or daa or fwait sub ret mulb pop sahf add mov cmc mov adc lcall loopne mov sbb inc sub adc push inc inc fisttpl inc sahf xor dec nop cmc dec inc add mov dec pop fbstp (bad) (bad) loopne mov aas sarl loope fisttpl mov cs cmp cs fbstp add ds pop (bad) jb xchg mov pop sub bound loope and mov or std notb push mov and std add icebp (bad) xor sbb scas and xchg loop pop push cmp push xlat xchg ret push (bad) and cs out cld xchg cmp test xorb frstor lahf inc into outsb repz sbbb cwtl aam jmp pop jg out and mov lret mov pop lret mov and fmuls fadds or hlt dec inc push enter or loop pop dec in std xor and add cmc mov (bad) push push lock pop inc adc xchg into jp pop bound mov xchg lds and jmp das jl sbb roll mov pop xchg and shr and dec push inc xchg lahf lea test mov jnp repnz xchg inc clc rol out bound cwtl mov (bad) fstps cltd les ss orb add in dec dec and arpl mov inc (bad) mov leave xor in lcall lcall mov mov dec cmp ljmp add popf roll outsb xor outsl gs push clc pushaw sbb xor push aaa or sahf xchg cmp adc ficompl mov in iret (bad) pop mov jge aas cmp negl jbe cmp scas clc lret les test xchg je rcrb enter stos or repz pusha sbb bound jge icebp adc cmpl test cwtl or sbb or divl test jne data16 loop ss jo jge call or sub push lret add icebp xchg clc jmp pop inc sub jmp jmp cltd mov je,pn loope cwtl and fwait je xor adc mov sbb mov pop fwait mov insl int sahf inc xchg mov xchg xor dec pop inc push cmpsl loop mov test sbb roll popa inc dec clc jl ret add inc or jbe push (bad) shl jne and jp jmp jbe into shrl mov pop loope shlb lret imul inc mov push xchg jne sbb fst inc mov and dec and js xor sub mov test add pushf mov in je fcom fs insl cmpsl stos aaa dec push cmpsb mov mov test mov mov daa dec adc (bad) jnp jno jle lods dec lret mov xor push rcl lods mov xlat and mov (bad) cld (bad) (bad) mov sbb mov je clc out cld int cmpsb addb jmp mov nop mov or cmp fdivrl add cld movsl popf jl jp xor or push in push repnz cmpsl sub leave jl cmc fimul sbb mov xor push cltd stc out (bad) or inc cvtps2pi mov out out xor push pop (bad) add cmp fadds dec and inc ret xlat xor mov jo icebp stos out push sbb jnp je adc leave mov xlat sbb popa mov add out les jns mov sub cmp ljmp mulb scas mov cwtl sti sahf pop movsl (bad) mov insl xor ret lret ret hlt scas aas cmp mov inc dec fisubr into popf stos or ss bound jb adc aaa lcall sahf and cltd pop pusha leave mov stos out jp icebp sbb into out cmp xchg shrb push mov jge jecxz imul incl cmp pop and add cmp test mov rclb and (bad) (bad) mov (bad) mov jl test lods add or mov mov cmpsb js xor adc into pop adc sbb sti sbb xor cmp and insl mov divb dec xchg fdivs adc jge call sub push leave lar push (bad) hlt adc popa popa push negb pop enter mov jno rolb ret mov jae or xchg dec mov mov arpl lea jge movsl xchg inc mov fimul lock inc cmpsl addb pop hlt pop mov fmuls push lea fimul mov adc cmp pop jmp das ljmp cmp cmp insb mov xor dec dec gs and or loop addr16 sbb out add pop or jecxz les cld xchg jns sub mov xchg fsubrs sbb aaa jle sbb sub std mov inc and test lret pushf and cmp lods add loop or sub nop in or lret icebp gs dec insb mov push in divb cmp cmc add int3 sbb push jmp stos ljmp lret mov out xchg mov adc jae fsubrp ss inc mov pop adc test xchg mov add (bad) mov (bad) decb std test push (bad) stos mov ss xor adc mov adc dec fimul mov sbb fisttp repnz test xor rclb mov shrb fistp add mov xchg jno in ds pop adc stos xlat enter pusha stos jo dec test imul nopl add xchg pop or sarb or clc pushf cmp jecxz sub stos repnz add xchg addr16 cmp pop shlb lods lret and fdivp test into cmp add sbb mov xor sub mov pop (bad) rcrl aad stos jmp (bad) cmp (bad) jg or push testb fild clc inc loope fnstenv fild imul sbb mov mov dec pop pop or or je sbb cmpsb nop jge add sub jle xor push mov das and and loope imulb xor and inc loop aam jae push sbb adc xor test and and test sbb stc or punpcklbw or out incl mov test mov bound mov test test xchg mov inc cmp clc inc (bad) jle or and or sub arpl xchg (bad) sub das ficom xchg or cli xchg xor push comiss and cmc mov aas inc aas sub pop scas or test mov pop lret sbb pop dec or dec adc pop out (bad) xor movb inc les leave aaa sahf xor enter mov clc cmp cs out xor and mov pop and cwtl (bad) mov mov jo (bad) ds adc push mov nop out sub ja xor xchg jo mov fldt stos pushl inc xchg negb sbb cmp fisttp ret jne mov add mov test xor push and fmuls sbb test ljmp in sub xchg xchg dec sub pop das test into or sti jno and mov cmp popf add or dec cmpsb out into lret call mov fwait dec loope fidiv into sbb jno mov icebp and ja mov push pop es jno shr movsb ret lahf pop xchg mov add xor test enter movsb das or shrl inc sahf pop add aam es (bad) lret cmc cwtl push jecxz inc cmp (bad) push test push xor adc call icebp and inc sbb inc push hlt add lods test mov fnstcw popa mov in sub (bad) dec adc and pushf out (bad) daa push roll push sbb daa sub pop xchg mov sbb outsb sub sub movsb push push adc xlat xor dec in outsb adc jb or ret pop movsl cmc and imul imul popf xchg adc fisub (bad) dec clc inc and addl loope ret loop pop mov imul push inc jae sub push and sbb in adc inc ret test mov xor sahf stc sbb inc sarb mov loope mov adc test xchg (bad) fwait inc js jne (bad) jo outsb jo out ja cs adc and nop and fwait loope rcrl or idivb loop in push gs sub or jbe pop aad gs and push xor fimull mov xor pop xchg fisttpll xchg sub mov rol or mulb push es jnp mov cmp pop popa test (bad) ljmp fildl cmpsl (bad) push aam pop pop imul sbb lcall jge lods sub add mov pop je inc adc into and aas add xor jl add stos outsb push push inc leave pop jnp jg jns push mov je xchg es adc cmpsl jns pop stos push inc stos adc pop xor mov rcrb imulb pop shlb push jno int push imulb (bad) pop out mov cltd dec mov cmp mov mov jg adc aas out decl scas dec and mov add aaa jne jo les int sarl sahf in dec pop and adcb aad imul loopne aad or sub jns adc gs lahf xor insb sub fsubrl and xchg adc popa jb mov bound hlt outsl out out push mov lcall dec stc rcl push loope (bad) ret push lea pop imul stos xchg xor xor jns movsl stc push fcmovbe push into jge mov sub ljmp mov push push mov rorb pminsw push push lret push aas mov cltd jne repz dec andl mov mov sub mov xor int3 push nop out mov lahf xchg (bad) jmp lock (bad) decb iret (bad) jp (bad) test inc test stos cmpsl mov bound addr16 jae stc sbb int3 and rorl mov or sub lahf xchg jge cmp imul jbe ja nop mov push inc xchg jge fist aad into sub dec cmp cs cli push decl xchg push jl lahf out sub dec adc lock sbb aas incl mov mov or xchg jb dec mov into int data16 dec xchg sub cmpsb xchg stos mov fldt lret hlt (bad) push rcll out int push repz shr out mov popa xor fldcw loopne mov das sti stos mov cmp stos sti insl shrl mov jne jae (bad) int3 cmp sahf mov js adc pop (bad) arpl cmpsl pop push cld stos movsb and pop push out sti stos call les fbstp dec inc daa xchg mov add jmp cmp in or cmpsl shlb out push (bad) int push out gs rcrb enter aas out mov (bad) mov dec xor jp stos xor add in mov das cmp lcall sub xchg push pop (bad) push gs lock mov lods ret cmpsb adc jle jne lods incb pop (bad) lock xchg bound into inc or mov lcall out ljmp dec pop (bad) jb out xchg out not push lret push mov (bad) lret mov (bad) dec jge push aas fnstsw lods test mov (bad) add mov shrb sbb fwait mov (bad) gs repz push push idivb fisttp popf stos int sbb loopne xor cmp sarl leave sbb mov shrb int xchg insb testb pusha mov jo loop dec sahf push call xor mov or insl sbb pop and adc (bad) xor adc xchg xchg jo pop gs inc dec fistpl push (bad) in in enter cld pushf and repz es nop mov pop push or aas add clc inc mov rorb mov xchg pop jmp aad pop and andl mov and outsl addr16 xor scas in jmp loop xchg push adc cmp xor sub fildll sub adc push push push cmp call addb inc and stos repnz jle outsl xchg (bad) outsb mov sbb scas lret xlat mov adc aaa sbb xchg cld add int3 or push fmulp mov and loope dec xchg adc mov ljmp or dec sub pop lods cmc inc mov lcall xor in test push loope loopne sub add dec aad iret lock int and push pop rorl loope pop jns (bad) leave mov cld add and dec jo,pn mov jnp rcl mov lock call mov out cli outsb mov rep imul icebp or mov sub sbb lock jne mov cmp (bad) popa xor das fsub mov mov adc lock xchg add (bad) int3 pop or inc sub mulb cmp or mov in mov and enter pop ljmp scas ret mov sub adc es test rorl bound mov cld imul push lods mov and add outsl idivb out ret add mov sub fiadd lret scas cmp or lds inc jl mov out les mov mov mov pop bound int repnz sbb rcrl fldcw pop orl push call fucomi push jp inc and cmp dec mov pusha sbb dec es fbld (bad) mov ljmp pop icebp xchg dec cwtl (bad) bound pop fdivl stos add dec pushf push pop mov adc clc sbb cld (bad) mov xchg pop push pop mov xor xchg (bad) imulb and inc sub out inc pop inc fisttpll mov sub ljmp decl or cwtl imul fdivrl fidivl lock int3 and es add leave push out adc adc cli push neg xchg cmpsb push xor inc enter fmuls and into jmp inc out adc icebp dec xchg bound add test lea cltd xchg dec jns mov in or dec and xchg (bad) lock icebp sbb jb arpl cwtl inc das add xlat lea (bad) xor push or mov mov or or add out push and inc sub mov jp in iret rcrb xor outsb into rcrb dec sub cs xor sbb dec shr add sbb (bad) xsaves int bound mov int3 frndint icebp mov pop adc cwtl in and add push scas (bad) mov sub and adc jne mov lock mov mov pop adc (bad) adc cmp (bad) call (bad) xor xchg xchg fs jb xchg push mov ret xchg mov xchg fldcw push fistpll lcall icebp add rcrb push or mov pop add sbb fisub dec rorb pop fnsetpm(287 add loopne xor inc (bad) icebp int aas cli add fidivr cmc sub xchg mov out pop sbb js cmpl pop dec lret mov push test repnz loop xorb es mov mov test mov int3 mov xor ret add sbb or add scas insb xor pop mov (bad) dec popa cmpl mov inc push mov out jbe inc fldl loopne inc repnz cltd pop lahf adc jne hlt lock addl inc out js mov arpl dec fstps mov call add imul aaa out and (bad) sbb fstpl in push js outsb sub xchg aad xor imulb (bad) les push addr16 pop (bad) mov mov mov sar sarl js je outsl sar mov insl jl imul cmc popa repnz push out dec push fistpll adc dec and sbb add fwait or xchg decl adc xchg ds xchg push out add ljmp pop cmpsl add lcall dec shrb mov outsb int aad mov jb mov pop push inc mov loope sub test push dec jo mov cmp xor xchg pop (bad) rorb outsl or lahf sarb mov js dec lahf in in test and mov loope jb lret push cmp flds scas (bad) push inc aad jo dec lcall int out cli mov stos pop inc ret jg aas xor add mov (bad) out adc jge insl loop add fwait cmp mov sahf popf stc fimull std inc xchg cmp (bad) mov mov jmp in cmpsl outsb ss ss jecxz jo sub sbb popf cmc and xchg and fisttp push dec dec or push dec loope cld (bad) shlb mov dec test (bad) stos leave dec in shrb std cmp adc sub enter insb inc and loope lahf xchg lea jp xchg inc sbb xor dec or and cltd xchg test push addb cmp mov xchg hlt xchg fdivs push mov add mov push and test ret mov hlt loope loopne (bad) test repz call cmp xor loope dec jle adc mov test inc xchg movsb mov and and hlt popf andb out int outsl test ret push pop popa mov js fisttp clc inc mov jb push add sti iret pop je in (bad) stos jo xchg mov sahf fisubr popf jge iret mov scas pop cmp or xor adc add add arpl or imul sub or mov dec adc inc loopne adc neg in mov xchg bswap jnp rcl lea movb out aaa call mov xchg rorb mov mov jo mov cld mov mov loope into out (bad) lods jmp xchg jge mov popf mov outsb or and mov push and and add mov scas xor xchg pushf jecxz xchg clc pop push aas adc psrad loop jnp and sub xor pop jl push inc lock hlt jecxz and mov test mov push lods gs clc add cmpsb arpl sub adc jp (bad) pop inc insb xchg sbb fdivrs in xor push xchg movsl jne les sbb push mov or inc cmpsb fwait in test test cltd movsl pop or or xchg out push sub push test (bad) into inc cmpsl (bad) rorb lods add das dec je xchg insl add es xchg fldl sbb ret push mov jb jb dec mov add adc pop jb mov repz fwait inc cs xchg xor mov dec lods xchg push lcall loop adc ror orb jle mov push clc aam andl xor mov jmp bnd push adc lcall ss test rorl push inc imul add fxch sbb mov loope jbe dec or dec and add lcall xchg mov push xchg (bad) rcr pop sarb pop xchg (bad) inc sarb js jl pop mov mov push ret add jae xchg call icebp push loope mov jbe into push cwtl xor sbb cmpsl bound mov or in mov sub mov repnz and ss add xchg (bad) popa mov les test outsl testb outsl jmp ja das imul gs test shll xor (bad) push dec or ret (bad) pusha xchg sar adc add inc xor aaa mov or in push sarb mov jnp mov add ret cli push loope lcall mov xchg add ja addr16 and sbb cli es inc loop xchg in js (bad) xchg (bad) dec adc cld push or dec cmp test loop push dec sbb jl xchg dec pushf in fsubrs add xor bound dec cmp hlt scas dec std incl xor jne push cmpsb ficompl scas sti mov insl sarb jns push xlat pop (bad) mov mov cmp adc jb adc mov ds mov ret clc inc (bad) jno clc dec out pcmpgtw push push lock rorb and fbld or pop mov sub rorb test mov repz xchg cmp push dec mov enter sar ret jo sbb or jmp sub push ja sbb sbb and cwtl icebp push (bad) in or inc jg and fdivrl mov (bad) out mov ja mov inc push dec inc loope js push cmp mov xor pushl into add push sub rcl lahf xchg (bad) jae arpl loop push push and xchg loope add imul xchg dec mov daa pop pop out jo or xchg push mov out dec lods mov subl sbb push xor adc adc dec ljmp fisttpll xor mov outsl jmp outsb dec jne cmp push lock lock fbstp push adc jge aam adc lods std cwtl push xor mov add pop jae cmp sarl insb sbb adc xchg mov pop add lods push popf ret bound je in es mov jmp test hlt lods push mov mov xchg adc aad mov (bad) jmp jno jo jmp jl sar adc xchg mov cmc daa xor orb nop fnstcw and add cmova push and pop add mov dec sub mov (bad) hlt or push (bad) push into out add (bad) jmp cmp (bad) sbb ss mov movsb cmp out ficompl mov sbb pop jno iret jno faddl cmpsl cmp popf test repz jnp loop sbb sbb test sbb and mov and (bad) imul je add mov mov xchg popf push repz lret int3 add lret out xor aas cmp xchg jge adc mov mov mov popa dec pop sti sub jmp inc mov sbb xor leave push (bad) mov test out fsts ljmp out mov cs push cmp pop rcrb add mov cmpsl mov bound xor xor cwtl push gs or inc scas push jmp loop inc jl pop fbld sub or rol mov mov mov imul push out jge (bad) or mov mov or loope inc cld xor and js and or sub and push mov mov test jge sub fsubs mov pop cmp lock cmp out enter ret mov test (bad) idivb mov aas stc mov push icebp leave stos repz mov (bad) imul jns adc insb out mov or cmp adc out pop inc xor cmp or jmp push fisttp loopne cmp mov sbb fcomps or mov jp stos add out test pop (bad) xchg xchg int bound and vpsrlw adc lock cmp sbbl or or add cmp or dec jne ja cld enter rclb pop pop push loope and push stos (bad) xor adc dec adc js test lret dec push jmp (bad) push sbb add adc lds insb (bad) mov adc mov push adc sub sbb mov addr16 outsb into inc lds (bad) in mov cmpsl aas nop lcall jno and jle xchg fidiv fwait aad add rorb mov dec fwait test dec iret dec pop pop xchg jmp pop or lods mov lock (bad) stos xchg ret int push insl dec addr16 or ss mov push out dec push pop push popl cmpsb mov js mov pop xor push mov jmp arpl sbb pop cmp and dec shll addb push repz pop add inc shlb pop clc push cld pop cmpsb mov fildl lods xchg fild mov imulb mov cmp push lret gs jge inc lcall jne (bad) cwtl enter push jge (bad) sbb lods cld push roll xchg inc cli jns push test add out adc es push cmp push mov scas rsm (bad) mov and dec mov sti add es cmc push jge jmp into (bad) sub sub (bad) jle addl sti adc mov aaa dec add incb push cmpsb or imul fs cli aas pop xor hlt out movsl aad inc push adc pop dec push inc inc arpl cs popf nop (bad) cmp mov stc fidiv stos sar enter cmpsl adc (bad) inc xchg out push pop lret fnstsw fstps rcrb mov mov int sbb ret xchg cmp nop mov (bad) int cwtl push sub xor push (bad) cmp mov pop bswap jae out push mov or hlt adc pavgw jp cld push jp dec push inc jl loope std call dec sbb mov and and loope mov outsb stos ror xorb sub notl mov adc in inc pop sub je or mov jno sarl dec push sbb push pop adc push inc dec mov stos adc mov adc pop mov adc cld fstps push je and adc add xor cld xor ror mov xor rcrl mov xor xchg dec stc mov sub hlt sbb sub movsb dec lods stc stos bound incb rol mov mov outsb xor into inc jmp movsb lahf add fist xchg push add adc cs lds je (bad) mov mov cmp out xchg sbb enter xchg inc mov push ret or int3 or jge jae aas icebp cmpsb or sub push data16 sbb cmpsb adc pop fs push xor pop outsb ljmp inc movsb pop movb int3 lods (bad) idivb shll loopne test and clc ss mov sbb xor lcall int3 inc das push sbb paddd inc (bad) xor cli bound cmp jecxz cmc test mov movsb inc mov aaa xchg or jge push cld mov push mov inc into out ficoml pop outsl popa xchg cltd int bound cmp xchg jp add imul dec mov push mov ljmp xor js lcall push pop sub jae add call dec sbb cs mov pop test fild jl test cltd sbb adc lock sub mov ljmp sbb sbb mov add cltd dec out clc pop add fadd fisttp add fnop pop and pop (bad) dec xchg xchg in lods mov in (bad) sub out adc dec mov cmp inc add adc test rolb movsl call mov clc int cmp test push in js push xor ds sar or adc leave dec push testb push sbb mov dec mov mov fistpll out xor jnp xor xor dec cmp inc cmp pop and lcall inc incl mov mov or dec lods sti xchg orl mov mov mov or inc insb aam arpl addr16 (bad) xor mov rolb cld pop mov add dec mov (bad) mov shll sarb popf push lods add mov jge fidivl xor (bad) jns (bad) xor push fldcw ret in ja (bad) incl mov (bad) fimull (bad) jae push xchg lock xor jo fadds scas sub shl sbb lret ret stos push add das aam mov sarb sahf rcrb and add jge (bad) rclb mov xchg fimull arpl mov test mov daa jmp mov enter and push cmc adc test sar dec in mov je flds test add dec movsl cmp imull dec dec jmp aam fiaddl sti dec movsl hlt xchg cwtl mov and push fsubr mov andl mov push es inc (bad) push divb rorb xchg pop push push sub lret push sbb aam jge inc xor enter and fdivp subb (bad) xlat fwait sbb ds cmp call push rol or add bound jl ljmp mov or enter mov test dec mov out (bad) in (bad) cmp jmp aam xor mov mov in insl and sbb fsts mov rcr sub add push (bad) mov mov push add enter popf lods lcall ret imul pop inc data16 mov cmc add (bad) js cld adc jb (bad) bnd mov sbb fildl sub fs inc lret push cmp (bad) (bad) push mov xchg scas sahf adc repz ss lcall push les sbb cmpsl inc int3 add fisttp dec xchg lahf dec pop dec mov out popa nop mov mov inc lods mov jg add inc stc scas data16 push rcll iret ljmp incb inc xchg decb mov dec stos dec mov (bad) jge data16 cmp push sub inc fist jne add pop cwtl add stos push jl sub or inc jp mov jge xchg inc push lret inc loopne outsb repnz dec cmp dec ret inc in and xlat jae pop call out (bad) mov test stos (bad) push loopne jge mov es mov mov pop dec iret sub ja cmp and pusha xor xchg cmp add cmpsl loope roll movb ret sbb fwait mov mov sub sbb lock int3 inc enter sbb lock inc cmpsb out dec inc mov cld (bad) movsl aaa mov sbbb push (bad) mulb jb dec xor inc jb sbb add jl mull test mov (bad) out pop mov mov xchg adc in sub inc dec jo (bad) sti mov push or loop dec sti popf mov icebp xchg xor add and mov popf fistpll push scas repz add aad mov out push hlt movsl stc mov aas (bad) in jbe sbb and int3 mov mov imul repz movsb mov test sahf les mov inc bound mov lock xchg push scas xchg pop into cltd inc jmp lods mov out (bad) out jns fucomp mov cmp inc jne dec arpl sbb inc mov scas addb sub (bad) cs hlt loope scas inc dec jecxz loope dec jecxz dec cmp jbe adc adc aaa add mov rcr jb pop jp jecxz rcrl mov sub xor mov mov aaa orl inc (bad) (bad) jno add mov push sub xor cmp js (bad) ss daa (bad) mov test mov and (bad) cmpsb sahf stos stos cmp or mov mov rcll push (bad) pop movsb mov test lret (bad) inc mov dec xchg clc data16 cmpsb dec rcrb pop sub stos call movsb out mov jo movsl out mov pop adc cmp call jge add jl mov insl imul jge pop mov pop call cmpsb fisttpll inc or (bad) (bad) (bad) jmp jl fstpl stos lods rcrb ds into dec push dec xchg mov lds cld jg lcall xchg cmc xor mov dec (bad) sbb cltd pop cmpsb push ficompl shl lret fisub or dec xchg inc (bad) mov push aam cmpsl dec les inc ret arpl cmpsl push dec dec lods or iret mov int mov ret scas std pusha clc (bad) pop mov inc cli notb loopne mov xchg sbb cltd mov xchg ret or pop movsb xchg shlb mov and sahf aam or cmp mov rolb dec sbb mov push xor jle mov repnz loop add popf aaa mov inc dec mov call enter dec jmp push enter jge in sbb inc addr16 dec (bad) ret dec (bad) mov scas cmp pop fsts out scas cltd push push sbb mov stos add sub stos sub pop stos jg inc mov pop sub das test lcall out push lock test push add push test mov imul or push pop pop push sbb pop outsb push xor lret or push mov xor push aad iret subb test dec dec xor andl and and or leave push mov push cmc pop xchg and xchg mov and dec test xchg (bad) (bad) aas (bad) xorl cmc sbb mov std loope and loop mov daa imul in cmp add stos out jb cmpsl cli fnop nop jge arpl jbe sbb mov stos dec dec loop loopne push scas sub ret ss cmc pop imul cmp xor pop jmp outsl push sar sbb or inc imul adc push clc es aad cmp mov test jb and fwait (bad) out add cmp push pop jl loope mov rolb mov or packsswb int3 sbb push or mov or sarb lahf sbb mov jle (bad) test les sub xor jmp inc inc out ja aad sarb mov fstpl addr16 cmc add add pusha push add dec lea mov dec pop jnp jl rclb cli das cwtl cmp sahf into push add mov andb sbb mov inc gs jl loopne sub cld inc jmp jle mov cmp loop lock sub sub shrb push (bad) movsb xor mov mov xchg push dec mov in ficoml add and movsb xchg mov or je adc mov ret cli fsubrl pop cmpsb rorb jg xor mov and daa popf lret jle sahf jecxz data16 pushf cmp popf xor arpl outsb or and inc adcl sar inc ror jle push into in outsl cmp pop iret mov adc or jbe aam out cmpsb or (bad) and xchg aad into xchg xchg test lret xor loopne shl dec or iret sahf imul inc inc stos add sub sbb sbb cli js jmp dec jbe lock sbb jl xchg xor inc shrl xchg sub mov loope mov mov xchg loopne cld in push icebp insb repnz add dec inc or imul jns lret lcall imul push mov jmp or push cmp out js js inc out (bad) lret (bad) std mov mov jmp dec loope xor mov add pop dec push pop xor imul (bad) xlat push inc inc movsl lea inc loopne or dec faddp out xor adc (bad) xchg jl test orl movsl mov mov or (bad) or pop inc cmp rcr fisubrl push mov lock cmp or dec das loop adc mov dec jno pop clc pop adc mov mov push aam lock sbb rcrl loopne cmp scas sbb mov bound (bad) push mov bound cltd pop mov and mov ret inc testb in dec mov jb gs sbb xchg in push inc pop xchg sub insb hlt xchg stc push inc push lret dec les shlb dec jle pop in movsb int mov jg loope and sbb (bad) aaa (bad) mov into and mov sub ret add adc or cli fwait (bad) mov pop cmp jae jbe adc pop ret (bad) mov mov stos rorl std bound inc rolb inc cli inc mov dec pop lock mov dec leave or out cmp push pop dec mov mov push adc xor dec or xchg hlt jb incl pop (bad) push and dec icebp bound (bad) cmp (bad) daa test ds xchg adcb sbb adcl icebp mov lock stos adc inc or jecxz or movsl add inc dec and cld dec hlt pop mov (bad) test rclb out mov jp dec pop cmc bound sbb loop sbb mov ret pop and dec mov dec xchg call pop jnp or lods (bad) adc push addl ds and into outsl (bad) cli cwtl dec ret add insl arpl mov cmp (bad) aad pop mov in mov negl or (bad) std add jp loop cmp push sub es pushf push sahf fdiv call sahf adc iret lods arpl test push popa fsubrs repnz sbb adc adc xor push and lock jmp mov orl cmovne push lock mov push jae (bad) jb push push push cmc cmp jecxz add aas or push mov push push xor sub and sahf stos dec pop jge decl test mov (bad) into in (bad) xchg (bad) push and arpl cmp int3 xchg or scas gs lds sub push fldl cld lcall or rcrb cmc ljmp mov push lea jb mulb or push testb pop inc (bad) aas cmpsb push stos sbb xchg jmp loopne inc outsb lret cmp int mov jns inc repnz dec cmp rcrb or adc data16 jge add out mov es xor rorl iret sarl xchg push sbb push and and sbb icebp bound icebp adc sub and clc hlt xchg cmp or xchg mov pop add ds sub and mov push pusha inc mov dec jp fwait insb and or mov add pop loopne mov mov push out push xchg or nop sub mov push ss and sub lds jns pop lcall add mov ffree xchg cmp or jp xor pop (bad) rcl dec pop out xchg mov loopne das es idivb xor pop loopne sbb mov jbe fbld mov insl cmp xchg dec cs or jbe sbb xchg mov mov fwait jo out sti dec popa pop push into push stos das add xor and mov cmp cmp push mov lret inc pusha insl sub mov pusha mov les dec (bad) cmc add lods pop callw dec mov mov fcom pop dec pop lock push push mov sbb mov and dec mov push cmpsb pop movsl add repz cli push punpckldq into push repnz add jecxz xorl das xor dec push mov (bad) inc nop or lcall lahf xchg pop and and sahf popf daa mov mov test dec nop test repnz sub cmp dec adc (bad) xor push (bad) pop repz sub push ljmp push cld ret inc dec mov push das and lea es outsb or mov xchg pop inc js repnz and cmpsb mov fsubl push cwtl cmp add and push shlb cmpsl pop dec ss dec addr16 out add jle mov test jge fwait lock cld jmp inc dec add iret push cmp inc test loop inc (bad) and mov cltd mov pop cmp cmpsb sbb jmp mov and hlt loope jl call dec lds push test cli mov imul and jg movsl adc jae das jecxz inc (bad) or cmp pop dec outsb pusha xchg push add xchg (bad) iret mov ja fwait jbe cmp scas std cmp enter addb pop sub push jnp or (bad) hlt fstl and ret add pop ret iret inc popf popa (bad) stos leave push jns je sahf bound mov js test xchg xchg push mov fcompl arpl xchg clc fcoml xlat pop loope int or fwait test and adc std (bad) ficompl stos mov adcb imul xchg inc sub mov std xlat push bound inc popa inc out jb add iret xchg dec jmp lds jmp cli jg (bad) mov decb loopne pop arpl rorl cmp cs inc sbb or adc dec aaa sbb inc and mov jns xchg pushf mov pop das jle push pop test fcmovb mov lahf push jnp inc and outsl cmp push sub adc jp,pt stos cmpsb insl cli stc and mov outsb es scas (bad) les dec pop mov jge (bad) xchg mov test cmpsl in pop push add xchg or inc adc mov das dec or pop jb mov scas push push sbb jmp aad inc and jp adc aaa pop and push into mov bound push sahf loope test inc out arpl mov inc sub xchg daa imul dec xchg add arpl mov inc push addb sub jmp jns mov mov pop gs push jo stos (bad) popf lea pop sbbb loop js mov push (bad) iret rcll sub fisubrl pop pop and sub and repz pop adc push jle out stc stos dec pop cwtl ss lcall cs adc or dec push stos mov popa and lret (bad) mov mov jg inc popf iret in sahf stos cmpsb (bad) lods pop mov fnstenv sub adc sahf pop gs dec or es cwtl lret imul sahf lret jae and cs in sub bound ljmp jns repnz imul jle dec aad loop iret adcl cltd ss jae shlb mov pop sub cs fcomi (bad) sub mov xchg push dec out std stos arpl xlat push in add repnz cli mov jns pop mov lret cmp test repnz push (bad) psrlw stos aad jae cs sti jp sahf dec lret test mov bound negl stos movsl adc test jae and daa mov jecxz ret adc sti fadds loope xchg ret clc dec push dec notb mov mov in cmp inc push mov repnz sahf daa inc stos imul std sahf xchg popf out iret jge mov cs repnz lahf test popf lret jae das fcoml pop mov (bad) mov stos lcall lock imul les movsb int3 cld pop into push stc enter shl shr popa aam sahf lahf out stos pushf xchg mov mov mov jnp jge inc xchg xor jbe mov sti movsl sub xor int3 inc mov cmpl pushl cmpsl bnd adc push insl sub mov xchg iret repz addr16 pmaxsw mov sarl stos mov push xor mov repz out mov test jl cmpsb jo xor cmpsl (bad) cmpsl cmp jb stos sbb mov ret inc rcpps push ds pop adc dec in movsl push or ret cmpsl repnz jne es fiadd mov mov mov pop cmp js dec push sub sub mov cmpsl mov sub mov and dec in (bad) (bad) dec sahf test arpl out xchg lahf lret mov arpl sbb movsl mov (bad) xor jl push aam loop pushf imul inc cmpsb (bad) add repz mov jo dec imull or (bad) int pop cmp jne clc add jl jns in cmp das adc cmp iret pop bound lea xlat (bad) stc push stc in fmuls mov xor push idivl cmp addl add adc push aas jbe ss out mov mov fstpt arpl sbb xor mov dec adc ja sub add dec fdivrp or setp inc repnz xchg jno cld jnp (bad) loopne lods adc adc xor and pop mov push xchg idivl jnp lret sub adc xor stc stc cmp mov pop jmp xchg dec pop jg cld int jecxz dec rsm fbld bound aam lahf aas std push fwait mov inc pop pop (bad) ficompl cld mov test (bad) cmp bound loopne inc pop inc mov push cli fs mov push data16 cmc loopne popa insb cli sbb aam inc testb mov push scas pop je cmpl imul ljmp arpl data16 add (bad) ljmp loopne in leave mov fild test les mov jbe,pt pusha (bad) cmp lods popf or sbb lds cmpsl xor ds mov dec mull cld addr16 adc addr16 outsb add ret popa cltd (bad) inc insl push lock cmc outsl and or arpl enter push mov jecxz lret dec jge jl and push cli cld add or dec mov clc fistp xor lods mov cmp jmp (bad) xor pop test lea js mov test lcall or cmp lock or sbb dec je and jge fwait sub test dec call ljmp aas sbb enter xor enter pop sbb cli push out mov je jp xor and and sbb pop ret test bound jns imul or bound add pop mov jbe cli jmp dec jbe icebp push jno inc cmp jg pop test xor movsl in xchg push mov insl inc mov mov push dec ret xchg cltd or loopne loop xchg mov pop jo mov cmc fcmovbe mov or push or andb rcll or inc outsl pop dec jge mov rclb push test lret movsl xchg cmc rcll aam jo rol nop xchg pop jg cmp aam push movsb mov cmp ss (bad) rclb xchg movsb je cmc jo pop and jge (bad) pop inc xor (bad) int3 dec pushf xchg sbb add shlb pop stos and data16 mov push mov pop stos pop mov dec add pop test rclb cmp cli xor dec aam dec in mov adc (bad) aas and scas cld mov mov push adc mov movsl sbb mov stos (bad) negb or (bad) pop aam outsb aad sub mov cwtl and in push xor into push pop mov hlt (bad) loope mov pop sub mov jp addr16 inc arpl inc iret incl mov and arpl test ss add in (bad) pop mov push pop sub inc fdiv pop add icebp mov das repnz je lret lods push push bound pop or lcall mov push inc test sahf add into jo pmulhuw (bad) test pop add outsb icebp pop xlat test je into jecxz xchg inc or bswap xchg inc inc fadds dec fwait movsb mov ds dec dec dec or out dec leave mov push xchg js dec mov inc fildl push daa aam jno cmc punpckhwd sysenter mov or xor pop mov lods push mov or (bad) ja imul fcompl cs sub lahf dec push cltd mov in popa bsf inc std add adc (bad) mull and dec cld cmp pop roll add fidiv cld dec xchg xor out sub clc mov ret ja dec push sbb sbb sub jb jp push pusha push mov and cltd dec icebp scas sub or outsb sbb pop mov inc push mov (bad) or lods mov adc push pop and push divb add add xchg and lods jp mov incb test mov xchg pop (bad) cltd push push fldl pop (bad) fwait sub int3 cli xor inc add and push mov enter xor sbb dec jmp cs mov aas pop lret add in mov push mov inc and (bad) rolb rolb inc inc and pop sti mov inc sbb xchg xlat aaa (bad) insl dec jecxz cmp movl add cmp jp pop hlt pop lock and loopne pop pusha in std adcl rorb jecxz lcall push add add stc inc scas insl xchg imul pop scas test cmp adc dec bound mov push in lret decl jl (bad) aad lods cmp and mov cmp (bad) sbb jne jp adc and mov enter xchg pop ficomp dec adc pop sbb hlt mov xchg xchg or pop (bad) push stos ret jnp xchg mov mov mov pop dec inc loop into hlt scas xor aas loop push adc ret cli cli adc fimul or jo (bad) mov arpl or mov dec adc ljmp enter xor aas mov jge (bad) and xchg inc sub and cli mov cwtl sbb xor hlt aas fsubr dec and cld jnp pop mov fidivr pop add jb or sbb pop pop or enter add movsb jmp outsl fimul and mov jge add jl test add pop xchg push xchg pop addr16 jl dec sub push ret out outsl scas fbstp add in das and out mov jge dec push lret stos jb lahf repz mov lock sbb lea lods in cs pop mov add cmc pop inc popa push std add scas xor xchg xor in movsb pushf sbb push lret jmp std clc push push fs (bad) xchg mov mov movsb or outsl stos jmp pop inc das or pusha jecxz dec ret pop fnstcw enter fs arpl js lea pop sahf test pop int3 jecxz or jmp inc (bad) call push and mov push and add xchg hlt (bad) mov call adc cld mov inc jle orl pop (bad) push jbe and fildll movb (bad) dec cwtl (bad) (bad) icebp (bad) jnp iret cld test jo jbe xchg repnz scas inc jae hlt and ds add sbb jno adc int jb pushf scas mov in mov cltd sbb cld inc jp,pt pop cmpsl mov mov or das cmpsl jmp mov repz sub push push mov mov mov push xor push icebp dec call mov cmpb jl jl xlat sub (bad) pop std dec adcb mov mov mov fs dec lock repnz xor enter sub shlb cmpsb cmp xor scas in aad sti jo sub dec fcom loop addb jno out push fisub xlat ja sub mov sbb cmpsl jbe dec mov ds fsubs sahf pop das lret inc jnp inc inc inc cmpsl pop push scas (bad) mov or clc scas add push je and xorl hlt push adc mov push add sbb scas loope cmp stos iret mov jmp and jo push mov out mov xor adc add inc or mov adc sbb sbb and test (bad) ljmp outsl or sbb sub mov mov ss jnp stos pop mov xchg test push loope mov xchg inc (bad) mov insb data16 (bad) out and cld pop cmpsl mov (bad) hlt cmc inc adc (bad) mov data16 js jle ret cmp cmp inc push push movsb aas or dec mov daa xor ds repnz jle mov stos and or jnp pop test inc sub lret (bad) je notb icebp aaa or ret mov cmp sbb xor mov insl sub loopne dec dec ds jecxz jge lcall jbe lret mov jbe or aas push popf pop and incl in rolb dec push push inc hlt repnz inc test inc or add test dec loope xchg adc mov push scas adc jge add xchg movsl sub jns adc sarb rclb mov inc cltd inc fisttp or cmpl mov lea cltd jge push (bad) int3 ja dec sbb hlt xchg pop mov hlt test bound inc dec jmp js add dec scas out gs movsb dec mov outsl inc scas jnp or mov test call jbe sbb scas (bad) mov scas dec js (bad) aam sbb data16 xor or add mov rclb mov iret outsb es nop mov ljmp stos push add fildl inc pop rcll jl jbe inc popf fmuls mov das pusha movsl mov stc push gs xchg add dec into arpl loop pop and js push cmp arpl andl pop add in add sbb sbb mov outsl xchg pop adc imul push jp add fldt loopne divl and cmp pop push lods sbb inc pop out push fcompl mov inc aas and and aam js (bad) dec jb pusha nop add insb sbb (bad) out add inc mov add les inc andb pushf dec mov push outsb sbb and loopne inc repz push sub jecxz scas or call ja ss movsb gs imul mov sub sbb cmp mov and pop jb cli mov mov (bad) fidivrl push pushf ljmp aad sbb jge gs dec mov push adc push aam scas push and lods sub mov push dec testl inc frstor push loope xchg push ss cmpsb ret mov xor insb cmpsl mov jb pop out sbb lahf mov jb fistl add mov mov xchg push add sbb mov pushf or jb xchg mov scas sbb mov shrb loopne (bad) lock sahf imul sbb cmpl jo xchg or bound in imul jmp iret ret push xor fcmovnbe xor sub rcrb out rorl pop xchg pop jge pop add fnstcw mov push addb jnp dec nop jl (bad) fiaddl mov xlat lret jge lcall pop sub loope dec add jbe fisub pop daa add aas ret aaa dec jne sbb stos rcrb pop in mov dec mov in into jnp fcompl push stos stos jg lea jbe mov lret ficompl dec decl xchg jbe push les rorb cmpsb push loopne (bad) int3 mov inc aam lret or aam cmp fsubrl sahf lcall push loopne or push sahf cmpsb or mov stos inc call negb mov mov inc lock sahf mov jnp dec pop jl xchg push clc mull pop jns ss decl lods dec and subb scas sarb fwait inc push in mov jecxz or loope jmp jo sub and aaa mov sahf mov in mov sub clc xchg mov xchg push mov sahf mov rorl test mov push jmp ror mov and std dec ret mov push std outsb inc xlat push sahf xchg fsubrl pop push inc subl (bad) out lods and repz insb xchg jge xchg clc xchg jmp push add xchg (bad) (bad) (bad) mov mov xor or mov mov (bad) (bad) jmp sbb fdivrp (bad) outsb lds fsub and lock fcomip stos dec sarl adc sub clc adc sbb in aam stc (bad) mov cmc or mov jge push nop mov sbb mov jbe push sti mov push fstpl cld cmc ret pop call mov inc shrl mov mov (bad) jg mov (bad) lock in mov jbe push into mov inc xchg (bad) (bad) (bad) ljmp sahf lea int mov push (bad) fistp mov mov inc not push hlt push sahf stos sbb ja in mov inc ret push sahf mov mov imul jns mov pop push fs bound jg incl sub sub mov pushf adc repnz or or icebp xchg data16 (bad) dec cli lods xor and (bad) or negb js,pt leave (bad) mov scas fcompl push jmp (bad) sti lret mov inc rcrl and xlat sahf into or movsb cmpsl push pop and sub lahf pop mov shr adc sub enter lcall sbb popf cmp xor ds (bad) jp cld sbbl push xor dec enter fdivr cmpsb pop movsl bound cmp (bad) xor sbb cmc stc mov (bad) and xchg pusha shl adc movsb xor les jmp jmp add imulb (bad) rolb ds div jmp repnz ljmp movsb mov sti mov (bad) test cmpsl push (bad) mov push push ljmp mov fnstsw lahf jae jmp jo xchg lock and adc mul lea adcl xor movsb arpl (bad) jmp daa xlat push in (bad) fs test test mov rcl icebp pushf push (bad) add adc lds into sti push std xchg clc pushl iret rcrb add sar adc mov push push xor icebp xchg std pop in jmp pop cli lods (bad) mov dec mov xchg or mov cli scas fildll add sahf mov fldt xchg clc int aad shlb nop (bad) ret (bad) mov (bad) mov sub orb mov mov (bad) fmulp push mov push in (bad) rorl cmp and loope incl sbb aam xchg (bad) mov mov lock or lcall test pop jge xlat inc add in mov insb pop mov push lods push and sub or (bad) push icebp sar jmp aas (bad) fnop shr push lret clc cmpsb ja push (bad) decl cmp sahf popl test lcall xchg stc mov pop fcomps imul andl mov out popa push sbb pop orl cwtl inc clc imul leave dec xor ret jmp adc repz pop cmp out or mov xchg fbld lock enter or pusha mov test cmp fucomp sub mov mov pushf inc (bad) (bad) ss stos fistp scas orl xor mov inc (bad) pop lods sub fwait test loope push aas add dec stc mov rolb test fs mov inc or mov jb ucomiss scas (bad) push cmpsl fstl lret mov shr repz roll or pop loop inc (bad) jo (bad) jge fcompl add inc in mov (bad) leave dec pushf push inc add sbb int3 je fidivrl (bad) lret pop jge lret jae icebp cmp or sub (bad) movsl cmc js rorl xchg dec pop lret or sbb (bad) (bad) ss jnp aaa or (bad) xlat movb pop pop pop sahf and ficom cld push cwtl test (bad) jnp add fldcw cli sahf js mov mov lret mov jb (bad) roll mov sub out fistp fstpt lret pop jge cmp icebp test xchg cmp push not (bad) out daa lea out jbe mov (bad) mov stos xlat mov lret push and ds out test lret ret push in ljmp mov sbb push jp into lock arpl pop test xchg cmp xlat hlt push (bad) cwtl mov push movb xchg mov sub loop es jmp sub xor mov jnp bound push mov jne sbb imul sbb xor fstpt add pop (bad) sti xchg push scas cmp mov roll iret add (bad) mov adcl xor (bad) ds sbb (bad) aas clc addr16 test mov scas in call add leave pushl adc xor popf sbb fnstcw (bad) (bad) cmp cmp shrl addl mov pop mov jge mov dec push enter imul loopne jmp (bad) lock push push int3 movsb cmp rol pop je (bad) icebp or test outsb and sahf mov ja push sub or or and aad pop enter mov call test fdivr (bad) hlt inc rcrl repnz test aad xchg lcall cli xchg adc daa leave seta mov jg call xor test add aad das idivb call aas jmp loope add add and jnp out pop jno rcll cmp (bad) xlat mov loopne and into xor je jge out pushf adc decl sbb out xchg insb lret fildl fisubrl jge or ljmp lock test scas inc cmp aad adc lret sbb mov or rclb fist mov lret dec shlb rclb je push (bad) mov add clc mov pop inc enter sahf int3 dec (bad) cmp cwtl sub mov jnp aam ret jmp fnstenv mov loope push mov stos mov dec mov push je xor push mov call ret cwtl sub inc sub outsl lret add dec mov mov mov mov pusha test mov push push mov rcrl mov fidiv jge inc jmp dec sbb in push div jo rolb leave (bad) push mov sub mov mov and shrl mov stc fsubrs push aam cwtl dec sti dec fs pop sbb loop sub xchg inc repnz jge imulb roll inc push fisubl rolb jge into mov xorl cmc rcr xchg imul jge sbb mov lcall jnp cmp cltd daa push ret jge scas pop xor lods push in loop dec iret clc fistpll out es movsb stos jge adc mov lret xchg rcrb fwait nop mov stos jge bound mov mov out lcall (bad) negb not loopne ret and test sbb mov sub push dec adc movsl roll rcll popf out sub stos push ss push into (bad) mov loope repnz neg cmp lds push (bad) fcoms lret bound pop xchg jge lret imul stos jo pop xlat mov (bad) mov push out fsubrl push push pop adc push ds scas leave shrl enter push mov mov (bad) scas out sahf cltd xchg push les jge inc mov mov stos mov sub mov jecxz (bad) stos jge es rol (bad) not cmp jmp subl add test js into mov or and pop push mov mov jge subb inc jae cmpsl mov and push push std push (bad) xor sbb xchg in cmp pop pop nop out mov add hlt xchg jge adc into inc into sub test test cmp xchg stos ds test push mov jno sbb sub sahf aad test stos mov (bad) mov (bad) cli sahf (bad) or insl enter jae mov mov ss or (bad) mov ljmp jp loope popf fisubrl inc jmp (bad) loope icebp (bad) ffreep push imul aas mov adc call inc mov xor mov ja out lock test icebp call fcomip xchg addr16 fwait sbb xchg sarl xchg insb fucom nop sbb sub idiv jg call sarl lock add fdivrs (bad) pop iret test mov and pop ficomp rolb (bad) decl lock xchg adc shrb sub mov jecxz pop cli fdivr xchg mov and fldt adc test loopew jns cmc inc pop mov icebp jne inc or insb test xor rclb dec scas add push test cmp enter rcll out pop cmpsl cmp rcl out mov jmp sub pop (bad) pop jge test int cs lods or (bad) test into ret sti into out fdivr popf pop xor call mov sbb aas xor sbb in test mov aas and dec mov jns into (bad) xlat rcl lods rorb cmpsl push cmp jl cwtl jg add push mov out ficomp seto stos cmpsl mov loope xchg pop pop dec mov xor push jge mov clc lahf aas add clc mov loope js (bad) aam cmp leave sbb popa xor push icebp mov push push (bad) pop or fildll adc arpl sub mov jns mov test pop pop mov jne sub lret xchg sbb mov aas cmp xchg (bad) xchg fmul inc jnp ficompl jge shr fwait lock or test push jecxz sbb out (bad) je out daa (bad) jmp pop jge dec shlb dec leave aaa arpl subl jne add jge fmull or cmp mov test dec shr push call add cmovne ss jnp idivb jl pop mov xchg ds cmpsb sub and xlat popa rolb out xor mov fs int3 idivb jge test fcmove rcrb push mov xchg xchg xchg ljmp popf cs inc nop testl dec xchg mov push mov cmp subl mov or and inc jl or jge stos or dec sbb mov cmp mov ds dec jge cmpsb leave adcl sub add mov cmpsb (bad) fistpll (bad) jge xchg dec mov xchg (bad) mov cmp push stc fdivr fdivrl test lret or fstpl mov jp (bad) mov push out mov push inc movsl sub mov or lret push sbbl jge and sub lea sbb adc cmp push test push mov mov scas pfrcpit1 push fisttpll xlat cmp (bad) shrl ret sbb in orl xchg fidiv (bad) loopne rcl xchg bound mov les stos lret and jle decl clc repnz jp (bad) nop sbb sar xor or sti cmpsb pusha ret jmp pushf and ret cs push mov loope pop ljmp aam xor inc mov mov (bad) call mov fcmovnb aas adc xchg int3 cwtl sbb mov jge into aaa cld imul shl aas xor cld sti xchg cmc (bad) in lcall loope aaa scas xor push icebp subl loopne scas or scas mov and or sahf (bad) dec daa sub cmpsb pop adcl nop xchg jge popf inc call in ficoml insl mov (bad) inc or jmp push mov rcrb pop (bad) jmp pushf pushf jl insl add inc cmpl lods pop dec sbb jg and (bad) jle,pn sbb push sub or rol lds imul add (bad) inc jne enter es mov fs (bad) cmp je jno or jp hlt add pop (bad) mov movsl jbe push test mov push cmc out sub lea jne out xchg dec xlat insl or add out fnsave leave into notb cmp jmp lock adcl cs das (bad) push sub out test aas cmp roll stc sbb addl push stos ret xorl dec mov cmp fisttp daa cmp test je and (bad) jl nop mov js xor mov adc jmp add fistpl sbb rorb add mov popf rorl test xorl cmp sbb xchg movsl jge orl sbb lock jae fwait sahf mov mov mul pop test loope shrl xchg push fcmove (bad) sbb xchg cmp pop ucomiss loopne push adc subl dec (bad) xchg cmp test pop or push test mov cmc push mov xchg fstpt sub hlt test and idivl clc cli sahf add adc push push loop mov rolb lea in rcrl (bad) enter das icebp mov jp push lcall jl push jmp ss sub lret mov aaa imul rolb rclb iret aad push lret enter cmp push repz dec add jmp fistpll mov stos sbb das fistpll xor das jge pop pop sbb fcmovnu cwtl stos rorb pop pop mov cmp ret test inc iret push loope clc sub fidiv mov shlb lods sub mov (bad) fbstp add hlt dec test xchg xchg movlhps xchg pop test outsl jmp roll xchg and es mov push pop mov mov cmp imul pop add stos inc pop insl push mov (bad) ffreep push jno sub lds lahf add push jnp pusha xchg gs jae jge movsb in sbb cmc into ret xlat aad xor movsb ss ret pop loope fcomip adc adc sbb push mov cmovg out add xorl mov cmp push or mov pop inc mov not out push popf subl (bad) mov and shrb pop out sub into mov or and inc subl xor in mov inc movsl or add xchg mul sbb bound pop sub cmpsb mov mov cld pop fcmovnbe pop or out aaa stos sub scas arpl push mov nop cmc adc sbb repz dec mov sub jge repz dec pop (bad) sbb fistpll add pop dec stos fistpll (bad) mov cmpl push lods mov mov imul inc stos inc jno push xchg loope jl (bad) mov ror lret les jge test inc mov cmp (bad) and fsubrl (bad) repz lret lea or mov (bad) mov insl xchg adc loope cmp dec mov push test shrb insb fadd push sarb (bad) and mov jb addl push jae sbb cmp (bad) mov into les push shrb into test leave roll call popf flds and ljmp (bad) ljmp stc xchg xor sub std rcr add mov sbb jge sub adc pop push pop mov in out jl push je loopne jns mov push ret mov js mov daa stos sbb (bad) (bad) mov add es dec loope xchg mov mov mov (bad) gs jp rclb (bad) mov inc movsl or addl stos mov cmp dec add xorl add (bad) mov adc dec mov cltd into push cs cmp cmp push ds lea mov in outsb movsb sbb std dec xor inc enter pusha (bad) push stos stos jge call iret test sub ss jecxz (bad) dec jge stos mov adc sub push sbb pop imul mov rolb jnp or mov (bad) mulb je jmp fisubrl pop add xlat out pushf push sub ss cmp inc mov fdivrs ja mov cmp loopne cmpsb rcll loop stc paddusb test lock ret aas lds xchg xchg popa cmp out push adcl (bad) mov stos popa imul sbb dec in lret (bad) mov nop unpcklps lret sahf or (bad) sarb jge or shl (bad) sbb pop test mov sti xchg jg cld push mov leave shlb cld sahf add rorl mov push jmp scas rol movb ret or or push push and cltd stos subl out inc mov pop sub arpl shlb push nop mov mov xlat imul xorl (bad) mov and sahf lds adc add stos rcrb inc adc lret je mov adc (bad) jns cmpsl xchg push test push xchg push push cmpb mulb (bad) mov add out popl mov (bad) sti push cmp push push pop pop call bound pop jle sahf rcr sahf imul jge roll in jo nop bound xlat cmc out mov in aam movsb pop xchg addl cmp push (bad) stos jno test add mov dec mov jno lods rorl rcrl icebp xchg negb push loop xlat lret lods inc iret jp mulb inc arpl push lret rclb mov jnp ds mov jge add push push iret push movsb xchg jbe lds or jg pusha sub scas gs cmp adc gs or xchg push xor loop mov jmp or xchg loop cld or mov mov in in idivb add (bad) pop leave sbb stos loope call add push fwait je rcrl js lods mov add cli dec sub int or jge iret loopne mov jp repz ret dec ret (bad) mov jae add repnz loopne pop scas sahf push dec mov roll push xchg hlt arpl mov out (bad) insl aam ja jo ret test stos aas mov pop mov cwtl js pop (bad) mov add popf adc iret or jge inc int3 and mov jp bound inc push lock mov es hlt add fadd pop mov push push mov out aas xchg and lret pop adc pusha and push push xorl movsb out std arpl or out test fxch insl lahf xlat mov loope in test pusha ret cwtl (bad) into ss addr16 mov out dec push add push es rcr test enter lock out hlt mov adc (bad) adc push es jge push push lahf pop push inc rol loopne sbb js pop inc test cs int sbb das mov test test lret xorl sub jl adc icebp dec fisubl add jge subl sahf xchg jno inc sahf sub mov daa insb lret mov push cmp mov (bad) hlt pushf mov inc data16 pop pushf pop enter les test push lods xchg fildll mov mov mov imul push lret dec (bad) sub jge sub lahf cmp nop or pop popa push dec daa enter push addl push shr fimull (bad) leave cwtl push inc iret xchg pop (bad) cmp and mov mov xor mov lods xor or pop inc xorl int fs push ret or mov push mov aam mov pusha fisttp scas ficomp xorl bound pop fdivp ds ljmp fistp adc out pop imul cmpb (bad) rcll (bad) mov loope ret xchg lret push xor add rolb or (bad) mov mov sbb aaa mov cmc jo data16 imul out in add popa iret adc mov xor adc sbb or (bad) mov test add dec fwait lret xchg pop add jmp (bad) mov out xor cmp push mov inc push jl lret mov pushf out jne lcall sbbl pop les loope or loopne pop sbb daa (bad) pushf push xchg push movsl pop aaa push xor and in cltd jns fistpl shrb xor or ljmp mov dec and pop and push mov roll push inc jecxz jmp push push clc adcl mov xor arpl add shr push mov pop insb mov jge ja (bad) jae and or ss push xchg jmp addl ja jg popf insl and test loope sbb xlat sbb icebp shll rclb pushf test daa pusha jb stos jge pop loope mov rcr sbb test lock cmp loope in and push fwait stos les adc (bad) xor push test iret lret jge into leave add js fs jo movsl mov lret push sbb (bad) test or xor (bad) orl mov aaa and jge loopne int3 push imul (bad) loopne outsl hlt inc bound rcrb mov imul lods jmp push mov pop mov imul cs xchg notl jbe push dec lret mov in (bad) aas rcrl sub (bad) fiadd mov inc (bad) mov cmp jb jmp in cmp mov adc test std sbb stos mov and xor lret scas push cmp sub dec mov aam ret rcl xchg and push xchg popa push cmpsl or mov sbb rorl test push or jge in or xchg and lods adc mov adc mov xchg mov pop mov push fst ret pop ret xchg mov das shrb jns pop (bad) mov in ret jne mov icebp das xchg xchg and mov pop cmp xor test sub jge cmpsb (bad) shl loopne std (bad) lock (bad) xchg push sub pop xchg lcall les sbb pop or repnz out in adc aam push scas ud1 ror cmp sbb aam fistpll and xchg pop lcall mov ja adc clc movups neg mov cs cli aaa sbb out outsb jbe xor (bad) mov rcl cmp imul jne leave dec orb mov pop mov cwtl jge xor cltd scas adc xchg call ficoml push dec sub in xchg in pop sahf mov (bad) out xchg rclb (bad) cmc ljmp xchg dec stos loope imul cmpsb jmp addr16 sub ret bound push rolb push xor sub nop lcall (bad) fsubrs out shrl cmpsb jl in add and cld (bad) (bad) jg scas push pop mov jbe pop push test (bad) or outsb (bad) adc daa xchg mov mov xchg mov fldcw add mov push (bad) (bad) pushl fldenv add enter sub hlt dec inc (bad) mov inc pop mov ljmp (bad) mov add mov dec pushf outsl mov or sbb lahf sbb mov add out sub cmp dec sbb cld (bad) call cmp jg jns push push mov push pop outsl mov out imul ja jl pushf (bad) cs xlat jne pop mov int adc in js or cmp push sbb and (bad) (bad) dec fidivr xchg xchg dec fwait mov sub out push mov and dec iret testb int scas and (bad) (bad) (bad) ljmp aam cltd jnp jmp rcrl mov cmp jno fsubrs xor clc xchg (bad) decl aad test pop jmp into fldt int ljmp mov shll jle (bad) jnp scas cwtl sbb (bad) (bad) ljmp xor add (bad) orl int enter shr add push shrb leave inc fist cmp andl (bad) incl sub jb xchg pop xchg in inc aam jmp (bad) test addr16 pop lret cmp in mov ja cmp lods pop mov lods repz loopne jmp jp push (bad) hlt rcrl (bad) hlt mov cmp or sub ret lahf jbe std (bad) (bad) std nop rclb adc inc or jl push ficompl cli fisttp (bad) (bad) push scas inc sbb and inc xchg pop sbb (bad) dec cmp inc push sbb ret ja in repnz (bad) incl mov outsl es pop loopne ret jbe notl mov lods out mov das adc bound aaa (bad) mov xor ss gs scas iret inc ss push push inc xor cwtl sbb sbb pop repnz fcmovbe push push add je adc rcll cmp xchg mov (bad) (bad) fisttp jne pop daa je push push sub sbb jecxz shlb push incl hlt sub scas jno scas scas fcmovne loop es (bad) (bad) jmp ret jbe imul sub cmp test jno das popa push jno xor push js cmp fisubl ljmp sbb (bad) sbb data16 jns lcall and stos mov xchg mov mov jle cmp (bad) (bad) lcall (bad) mov mov out popf push popa (bad) xor or gs lock or popa faddl push insb jmp fs sbb aaa push hlt (bad) dec sbb imul sub sub jo jecxz (bad) call xor fild push push adc jbe mov js sub xchg jae (bad) lcall jb (bad) ja dec push push lahf inc (bad) fld sbb mov dec dec xchg repnz (bad) incl sbb test pop add inc test aas mov pop jge or push aam ljmp and mov ds aaa inc sub leave jb (bad) out jae lods mov (bad) ljmp addl or push stos fwait sbb dec in (bad) mov mov jne (bad) (bad) jg adc jecxz stc and fidiv mov push js test mov loop cmp in (bad) (bad) mov mov out in xor in jmp pop decl (bad) (bad) push icebp mov mov (bad) fs into scas lods inc iret add test (bad) (bad) push dec movsl and xchg sub xchg or push popa dec clc mov adc fbstp sti or (bad) sbb jp sbb decl pop fmul (bad) push push pop mov jo and in shl xchg sti fnstcw cmp lcall adc push xchg (bad) and int3 xchg clc int mov sub xchg lret int jge int3 cmp jmp int inc mov xchg fs mov int3 xchg push pushf dec sub ss popa aaa lret sahf (bad) (bad) mov pop jnp push call test push repnz leave push adc lcall pop adc mov jp add pop adc adc fwait mov mov cwtd jg outsl dec xor loop stos and jle jbe hlt test xchg cli decl sub adc cmp adc (bad) call mov push dec sbb call pop dec movsl jnp add mov scas leave sbb (bad) (bad) dec jl jl test lahf shlb push fidivrl xchg cmpsb xchg lret (bad) (bad) (bad) jmp icebp hlt xor lods pop jge mov (bad) (bad) (bad) call adc mov adc mov insb pop mov dec dec mov in in dec (bad) (bad) jg mov mov mov hlt and xchg in mov leave dec (bad) (bad) (bad) dec ljmp jmp push add mov mov inc jnp adc xlat dec aas outsl iret inc arpl out sbb fwait or sbb loope in push push lcall mov loopne fidivr fisub sbb cmpsb xchg push pop add outsl shrb rcrl push movsl jnp mov pop mov mov fidiv adc lea dec lods fstpt and insb cltd imul test iret out loopne jo inc (bad) mov std (bad) out pop xor xchg adc inc sub fucomp jge insb into ljmp mov repz std call push sbb mov es xchg dec (bad) sahf add (bad) mov aad pop add aaa add jg repnz mov je xor (bad) or or or cld jmp es pminub ret aas adc mov enter shr mov idiv and fisubr or movsb aas lret ret and enter mov mov mov movl in add ljmp cmp (bad) jg sbb push xlat sahf scas inc ljmp shll sub add mov jg jge ljmp sub cmp ret fwait lahf aas add fs jnp ja in imul inc mov push rolb mov (bad) add mov or mov les xchg push push adc fcmovnb dec std imul mov (bad) cmpsb dec jge mov jg aas inc out push lahf nop mov pushl rcrl (bad) icebp rorb mov fnstcw loopne jb addr16 dec (bad) jno jge push xor and inc xchg jb mov jmp (bad) aaa stc sub adc jno lret cs xchg inc push call outsl sahf and sub leave mov push data16 loope sub or shrl push push or jb dec pusha add test mov and add xchg push push sbb or adc push rcll adc lods mov add out add push aad pop and push xor push adc call and push addb inc add or and iret xchg cmp dec add add add push fidivr dec imul stos add int3 scas ret add (bad) sbb push inc ret cld cmp xchg xor repz je and cmp ljmp imul cmp hlt ret loope xchg jge push mov (bad) (bad) incl pop fisttpl xchg jmp rcl xchg xchg (bad) (bad) int cld data16 inc (bad) pop into (bad) (bad) (bad) pushl mov ret xchg cmp hlt xor ret mov jne (bad) (bad) (bad) pushl scas repz xchg and jne xor ret sarb mull bound imul pop (bad) lcall in jno dec fldl xlat pop lds loope pop test xchg (bad) (bad) (bad) decl stos mov xchg or jne add push mov push mov xchg ja sbb decl push incb (bad) jbe lret incl sub lahf aas and mov and and stos out stos push arpl out mov xlat movq and add and outsl cmc dec push js jae enter push jae or std cmc out push cs mov xchg add push push sbb inc imul dec loop and in arpl pop fucomp mov push ja fs bound jns loopne jge jbe sub je adc dec adc out imul imul ret popa stos push popf mov dec outsb je adc push pushw fs rorb or add add mov xor subl fs jbe push jo je test push fs xchg xlat jecxz inc outsl insl cmp cmp mov cmp (bad) imul js push sti push inc mov push fwait scas inc repz ja push push jae,pt inc xor das pop repnz mov arpl imul gs lock loope sbb jmp push pushf cmp outsl mov out fnstsw sub bswap mov dec jo ror adc adc outsl inc lods (bad) sub and aaa adc cmp cmpsb iret insb xchg adc pusha push mov xchg dec fistpll pop cmp incl insl mov cmp insb dec addr16 or push fs outsb iret dec pop jb divb push pop addl aaa jns insb in sarl bswap cmp scas outsb jg pop jno gs or push xchg sti out sub push outsl xor xlat cmpsb popa jmp arpl inc fisubr push mov push arpl imul xor enter and inc mov das pop jl call sub jae mov outsb stos rcrb mov and loopne loop sbb or lods sub stos push in mov add jbe push lret inc orl (bad) push xchg sti cmp setle sbb je out fcmovnu (bad) pop jo xchg pop add push or pusha repz xor mov push lock dec cmpsl iret pop add pusha aas daa mov push scas insl mov cltd test jns xor and sub rolb ret cmp sar rorl pop and imul adc addr16 dec lcall push insb sub pop inc jo add xchg mov arpl or shrb std inc out xor (bad) xchg test adcl sub iret daa fwait add bound sbb (bad) cmp shrb addb or sbb push pop inc lahf imul lahf sbb stos add or adc inc aad adc daa xchg push shll add daa es xor pop inc iret pop adc dec and cmpsb fs or add jb jno or cmp jecxz push pushf xor jne aas push adc je cmp aaa addr16 mov les jg scas inc push addr16 adc sti shrb and or cmp mov test add ja mov out push das (bad) lret push push dec sub push add lods jbe xchg cmovg mov sub push mov pop xchg dec jg dec cmp addr16 jne ficom and daa popa jno mov int dec adc hlt in pop push sbb cmpsl aaa push (bad) sbb push ja fmull repz mov adc addr16 popa test movl lret (bad) ljmp (bad) jb sub xor fwait scas sub insb sub or out js,pn addr16 xchg xchg vpunpckhwd push sbb mov mov sbb cmp jne dec sub inc icebp cmpsb inc jecxz test add pop scas push loopne pop es mov loopne (bad) shlb js sub int jnp jbe jecxz jmp mov inc jae inc or mov or push jae xchg cmp push test add loopne (bad) push mov jp inc daa or mov rorb popa ret pop je push pop jo jns,pn mov pop andb insb popa je lret pause push sbb hlt pop jmp cmpsl mov sahf cmpsl or das xor xlat dec dec js push and or xor mov scas orl fdivp jmp and lcall decl push jg mov jp addr16 scas mov pusha out xchg and xor ret imul das adc andb sbb xchg (bad) xchg popa jg xor comiss jmp and (bad) stos mov out outsb lahf mov out dec xor jecxz loopne or dec mov lcall cs xor aas das xor sbb pop ret or aas pop addr16 push push or inc outsb das push imul test push push popl scas imul mov stos maskmovq notl aas inc sbb fldt push or bound jne aas shl loop addr16 sbb sbb subl xor sbb pop sbb inc adc pop xchg add (bad) push jp insb aas pop stos jne inc jnp (bad) jae xor adc andb xor push mov aas cmpsl inc nopl (bad) mov push imul push inc insl sbb shl imul inc adc or mov mov mov or jo sti or mov jbe (bad) je pop adc adc or sbb scas cmpxchg mov inc sbbl test push sub rorl adc stos shrl dec (bad) repz divps addl xchg push add fwait sbb pop scas je insb and mov jo xchg inc xorl xchg add push sub daa push cmp fimull xor adc pop push and mov cmp push adc add mov fs pop ds or nop or xchg fiaddl fiadd rolb popa test mov or jecxz adc mov arpl sbb sbb jnp xchg push outsl pop je out jnp mov daa jmp aaa xchg push loop mov ja cmp push stos stos pop (bad) and cmp fwait fs addr16 jecxz xor add push daa and add out lahf mov js adc out fcom mov fildl adc loope ja sbb mov pop push or (bad) sub outsb dec or bound sub in test (bad) imul (bad) popa push lods repz jg mov rcll xchg scas xor inc aaa dec ja mov cmp and pop sub mov loopne fstpt xlat icebp (bad) sbb push mov mov xor cmp call jecxz pop cmp ja xchg stos lahf addl xchg pop and subl fidivl sbb ret mov push outsb push push adc call outsb orl dec push mov xchg mov arpl std sbb ja dec sti push cmp scas inc fildll mov ret loope data16 insb push pusha jne jnp insb sub aaa mov jg sub sbb sbb xor popa pop pop push mov (bad) push cmp mov xchg es add push stos arpl loopne mov push push inc rol mov cmp push das sbb pop sbb cmp push sbb mov sub bound sub imull pop lds pop sbb imul dec dec lods sti rclb or mov sbb dec mov add adcl sbb mov les push or lock lcall add ficompl mov or push and mov adc inc pusha inc adcb push push sbb add xchg sti out add rol inc and xchg push lods aam shrl dec push pop xlat pop (bad) movd add adc pop or push daa sub xchg lcall lret outsb pop or jbe movsl arpl aaa imul xor push pop mov pop bound xchg pop out shrl scas inc out loope fiadd inc xor ficomp push mov sbb push mov jae (bad) imulb iret daa dec out xchg sub cmpsl insl inc imul or rolb inc pop test (bad) js add aad adc jnp ja sbb scas push inc inc adc mov sub dec (bad) push lret cmp stos or push inc out jb (bad) test pop jo or xchg pop fcmovnu out into loope xchg jecxz mov xor aas fbld das popa push or xlat xor jge outsb cmp mov outsb insl inc dec xor aas push decl and call adc pop pop cs push je,pt xchg daa iret stos rolb scas les push add cmp or sbb sub inc (bad) jecxz mov push dec pop dec pop dec mov adcb sbb jae out in mov sub mov sbb inc add push (bad) ja adc push fcmovne dec loopne mov outsl xor cmp jae adc lods addr16 aam sub dec adc pop roll lods les rorb add push out outsl pop cmpsl and dec inc push adc and shrl sub addr16 stos aad jbe,pn mov push insb pop fucomi stos mov sbb adc sbb dec rclb sbb mov ss and sbb cmp mov adcl push pop ja xor sbb rorb dec mov cmpsb stos push lds mov pop in sbb inc ret sbb or mov adc iret or dec jp jg push pushf xorb fisubl push sub jnp push push pop iret imul aaa push inc lods (bad) cmp loope cmp or and mov insb fldt test mov adc imul ret and and push out or shrl sbb or sbb sbb adc ret das jae iret lods bound out sbb inc pop pop add cmp into or (bad) lahf out add lods arpl mov add xchg inc jecxz mov (bad) push mov dec adc pop and sbb push imul xor mov inc cwtl sub cs jg pop push lods add sub xor jo,pt dec and mov enter mov mov mov inc nop call rorb xor xchg sbb (bad) xchg mov test mov sbbb ffreep or sbb mov (bad) ret mov stos adc jg pop jae adc sub and pop popa cmp mov daa inc daa add stos jo adc adc movsb jb pop pop loope push jle push pxor inc push rcrl push push inc outsl jo (bad) imul xchg jle outsb lahf rclb cmp pop mov jae or mov pop push icebp xor fimull jmp cmp fidivl imul jae fisubl dec push mov daa movl scas inc mov mov push add jbe lock loopne arpl dec pcmpeqw xchg cs and mov mov add lds adc mov out cmp sub out dec mov mov sbb or inc (bad) insl rorl and xchg and sbb lods dec pop daa pop pop bound pop push dec xchg push adc ret (bad) mov decl xchg arpl bound stos ret jmp jg mov and jg add cmp or or movsl pusha adc inc and pop cmp ss jecxz sbb push jle push push mov fildl lahf add dec jbe (bad) jbe (bad) imul lcall push add inc pusha stos add sub adc popa add fsubs mov add fistpl cmpsl pusha mov pop mov xor jbe lahf mov jbe and dec imul mov addr16 jb add cmpsb and jnp jecxz (bad) popa pop cmp mov mov adc iret je lds xorl cmp sbb jmp xor jecxz cwtl or adc adc adc lcall push dec mov arpl push rcll push ds add pop rep (bad) cmp xor or fistl add push setnp arpl (bad) jb jg imul xchg sbb test jg mov ja mov push imul push idiv mov and xor in and pop inc inc push lcall or fsubrl push mov push cld adc adc inc pop lret scas jne sub jae js or mov jo loope and pop adc add inc sub mov dec inc sub adc inc (bad) or or das pop push jne jo pop and sbb xchg dec sbb out add push les inc test pop popf and sub pushl ret sub mov or cmpsl or das shrl or or and shl adc xor xlat es popa daa jp push or (bad) jns sub data16 es or imul cmp mov scas scas outsb imul out lahf jb stos test or adc (bad) jecxz push fwait mov dec adc jp xlat sub (bad) xchg dec sub or or add push daa pop in mov (bad) pop jg xor push arpl adc popf mov jb or xor or xchg sub mov push pop movsb mov push adc cmovno dec xchg jle bound push insb gs fmuls insb inc imul sbb arpl inc adc add sbb add sub xor cmc cwtl adc pusha or shr arpl inc js cvttps2pi push jne add insb jmp outsb jmp inc js or das test outsl mov gs mov push gs jmp add stos imull das pop mov and mov adc insb iret ret repnz lods fnsave insl gs sbb and inc add imul cld mov imul xor ja mov add adc add xor test sbb mov mov fstl sbb and fstl imul mov in and and or (bad) outsl xor loope inc xchg repz gs jo loopne adc jno add mov push fnstenv add faddl arpl adc insl pop dec jne sub inc and lcall leave pop mov pop rorl mov inc jp cmp cs lret sbb mulb inc les push gs pop sbb insb or or lcall adc jae insb popa xor pop out gs sti sub adc xchg push arpl push outsb inc mov lods push popf cmc sbb jl inc dec clc popa outsl pop push adc test sbb imul mov in jo jge outsl xchg sbb push inc push or test add push or mov add insb sbb or sbb mov push pop jge js shrb push push add sbb mov inc add pop subl adc add aas pop push sub add ljmp lods dec push imul lret fstp push or je adc sub adc or ret daa adc aad pop push pop mov (bad) cltd inc imul adc lret adc mov and jmp inc fsts push aaa xlat cs push je test adc add dec cmp mov stc aam addr16 loope out sbb pop rcll nop mov or insl or fdivrs movsb adcl add in add sub cmp cld outsl push rcll push adc dec sub or jmp or outsl aam mov fisubr push and das roll adc int sub test popa adc and sub fldt popf leave sub shlb cmpsl cmc mov xchg and mov or pusha and push outsb fildl mov (bad) outsb js sbb mov push xlat add lcall push jp xchg mov imul xchg jbe mov fistp jmp mov dec push xor cwtl xchg sahf pop inc adc imul pusha jmp or inc inc or lds push pop das insl xchg push fidivl mov fcomps sti fdivrs outsb sbb mov (bad) push xchg movb lret fwait sub cmp sbb mov push add sub mov jns and xor or cltd shlb cwtl add inc (bad) data16 push pop enter xorb mov add stos pop (bad) xor xor jmp and aas bound add sbb insb mov dec adc mov (bad) push cmp (bad) mov sub mov shll sbb ret and sti insb cmp xchg sub mov (bad) pop inc outsl das cmp or cmp dec jne sbb push mov arpl sub pop sbb or xor sub push pop xchg inc iret cli imul and adc inc dec outsb sub cmp inc sbb pop mov jne nop dec roll daa jnp cmp movl push mov add jno sbb data16 rol mov xor nop int3 adc sub popa pop dec es in and ret xor and adc push adc daa dec jo shlb repnz mov dec or jno addr16 mov sub jle bound or jns adc roll (bad) xchg test cmp push push sti mov pop sbb jo ja add loop aaa and call push jae adc xchg or xorl (bad) mov ja sub sub pop add das addl sbb loop push add dec pop mov or subl xor pop arpl adc repnz mov insl pop pop add lock sub mov xchg aam add out adc mov adc inc ja pop add add xlat sbb icebp add fcmovne xchg sahf jns and push or mov jle lods sbb push sub cltd mov push shr or fsubl mov sbb inc dec popf stc jbe (bad) jbe adc or cmpsl repz mov xor stos jno ficomp fs stos push hlt lds push jne dec sub je sbb mov aad data16 lahf sbb rorl into dec dec jae dec (bad) andb fcoms paddsw xchg mov jo push imul pop in rcrl and xchg sub sbb or test sub aad dec subb dec adc xor dec jae clc adc cs shrb fldl pusha ret sbb lcall pop iret or xchg push fdivs rcrb or or sub outsb jbe movsl or int sbb push jb inc and data16 pop mov stos adc and mov ret inc sbb push outsl test push imul and adc sbb bound inc leave jno enter inc push or adc daa (bad) jbe jo lret xchg pop add pop mov inc xchg insl (bad) pusha sbb pop mov jmp inc imul pop in lea mov out push add loopne or inc pop es adc pushf fs push shl lods enter int outsb inc sbb xchg jns cmp pop dec and xchg mov (bad) xlat icebp inc sbb mov insb test mov movsl popf stos in movsl add mov imul inc jno adc inc test pop (bad) rclb push adc jne xlat cmc mov mull add iret mov adc mov sbb pop adc rolb arpl and fwait mov rolb dec xlat mov push fcmovnb fcoml sbb popa mov (bad) mov mov jg pop inc fisubl cltd lahf and loop fistpl (bad) mov pop jmp xchg xor sarb mov insb adc jno and gs sbb data16 inc adc mov or aaa push jo ja roll jne fs pop add repz sub roll inc sar jle test stos jne hlt or xor dec test push fistp and fadds xchg dec add pop adc dec inc sub loopne popl add les les or adc adc mov fbld xor or push inc test adc mov nop or les cltd sub sbb leave push lahf inc dec inc inc scas or xlat ret lea xchg inc inc push push push negb movsb sbb sbb push or jbe pop ficom rolb orl add sbb out dec es cs fmull push rcrb enter loopne jns test sahf push dec andb lcall jge pop pop add dec and pop imul or inc and add pusha mov lea movl push or jmp nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp loopne dec add cs add add add add add push add add add add mov add add add addb add pusha push add lock addb add add add add add add pop add add add add add add add add addb add add addb add push add addb add js add add add add add add add add add mov movsl or xor add in add add add add add add add enter inc cmpsb or xor add in add add add add add add add lock add or xor add in add add add add add add add sbb add lods test add add in add add add add add add add inc add add test add in add add add add add add add push stos or xor add in add add add add add add add nop add add or xor add in add add add or add push adc orb add xor add pop add cmpb addb add pushf adc adc add clc add cmpb add dec add adc add ficom sbbb add add add add add add add add add and add jl or rolb add in add add add add add add add dec add add add add add add add add add add add add jo add xor add in add add add add add add add cwtl add add mov add add add add add add add add add add rolb add mov add add add add add add add add add add call mov add add add add add add add add add add adc add jo or rolb add in add add add add add add add cmp add inc mov add in add add add add add add add pusha add add mov add in add add add add add add add mov add loopne or rolb add in add add add add add add add mov add mov or call add add add add aaa add add add mov add fadds add add add sub add push push add js add mov add add push add lock add sbb add inc pop add push add add add add add add pop add or add xor add pop or orb add add add add add or orb add or orb and add dec or orb add add cwtl or adcb add or adcb add or adcb add or adcb add or adcb pusha or adcb add add add add add or sbbb add or sbbb add or sbbb add add js add mov add add or sbbb add or sbbb add or andb add add push add add add add add add or andb add or add xor add pop or add orb add add add or add clc or add add add add add add add or add rorb decl add in add add add add add or add add or decl add in add add add add add or add add or decl add in add add add add add or add push add cwtl fisttpl add or add add add add add add or add add cwtl in add or add add add add add add or add add cwtl in or decl add in add add add add add or add (bad) or decl add in add add add add add or add decl add or add add add add add add or add push add cwtl or add or add add add add add add or add pop add cwtl adc add or add add add add add add or add pop add cwtl sbb add or add add add add add add or add add cwtl and add or add add add add add add or add sub add or add add add add add add or add xor add in add add add add add or add pop add cwtl or decl add in add add add add add or add pop add cwtl inc or decl add in add add add add add or add or add or add add add add add add or add add cwtl pop or decl add in add add add add add or add add cwtl bound add or add add add add add add or add imul decl add in add add add add add or add or add or add add add add add add or add or add or add add add add add add or add or add or add add add add add add or add or add or add add add add add add or add add cwtl cwtl or decl add in add add add add add or add mov add in add add add add add or add stos or decl add in add add add add add or add or add or add add add add add add or add or add or add add add add add add or add or add or add add add add add add or add add cwtl into or decl add in add add add add add or add add cwtl xlat or decl add in add add add add add or add loopne add or add add add add add add or add or add or add add add add add add or add or add or add add add add add add or add or add or add add add add add add or add add cwtl add add or add add add add add add or add add cwtl or add in add add add add add or add push or decl add in add add add add add or add pop or decl add in add add add add add or add or add or add add add add add add or add or add or add add add add add add or add or add or add add add add add add or add add cwtl inc or decl add in add add add add add or add dec or decl add in add add add add add or add push or decl add in add add add add add or add or add or add add add add add add or add or add or add add add add add add or add or or decl add in add add add add add or add add cwtl jns add or add add add add add add or add add cwtl (bad) or decl add in add add add add add or add mov add or add add add add add add or add or or decl add in add add add add add or add or or decl add in add add add add add or add push add cwtl cmpsb or decl add in add add add add add clc adc cmpb add add add add add add add add add push push add cwtl scas or push add add add add add add sbb call sldt pop sldt orb sub add test add rorb add clc sldt and add dec adc xor add jo add cwtl adc xor add rclb xor add call sldt adc add cmp add pusha adc cmp add mov add mov add fcoms add add add sub add push adc cmp add js add mov adc add adc addb add add add add add add add or add add in scas or ret add add add add add add add add jo add mov or pop add add add add add add add add add cwtl sldt or or or add add add add add add add add rorb add or mov add add add add add add add call mov add in add add add add add add add adc add aam or cld add add add add add add add add add cmp add rol or pop add add add add add add add add add pusha adc add or int3 add add add add add add add add add mov add clc enter add add add add add add add add add mov add or add add add add add add add add fcoms add xor or loopne add in add add add add add add add add add adc or adc add in add add add add add add add sub add and or in add add add add add add add add add push adc add or mov add add add add add add add js add (bad) rorl add add add add add add add add mov xlat or cwtl add add add add add add add add add enter sbb or movsb add add add add add add add add add lock add add in add add add add add add add sbb add adc or mov add in add add add add add add add inc adc add in add add add add add add add add add add push in add add add add add add add add add add nop adc add add add add add add add add add add mov jmp add add in add add add add add add add loopne add shr or mov add in add add add add pop add jg add adc cmp add pusha adc cmp add mov add mov add fcoms add add cmp add sub addb add add add add add add add add add push adc add add in add add add add add add add js add cwtl icebp or adc add in add add add add add add add mov icebp or adc add in add add add add add add add enter (bad) icebp or adc add in add add add add add add add lock add icebp or adc add in add add add add add add add sbb add icebp or adc add in add add add add add add add inc adc add icebp or adc add in add add add pop add inc add inc add push add add inc add dec add add inc add inc add inc add dec add add inc add dec add push add push add inc add inc add add add inc add inc add dec add inc add inc add dec add add inc add dec add pop add inc add inc add add add add inc add or push add inc add dec add push add dec add push add or inc add add add push add add add inc or mov or or add inc or push inc or aam or and add inc or sub inc or cmp add inc or inc inc or hlt inc or push inc or pop inc or outsb inc or jle or mov add add add add add add add inc or add add into inc or add add faddl add add add inc or add add dec inc push dec inc dec xor cs dec dec add jbe jo xor cs insb add insl arpl xor fs insb add imul insb add gs jne xor cs insb add gs xor fs insb add jb imul add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs insb outsl jae dec gs add dec insl popa addr16 imul add add jbe inc inc add push popa jb popa outsb je outsl jo add add je inc add add jb jne jb push popa insb jne inc mov adc add inc outsl outsl insb gs outsb add or add mov insb jae add jb lea sub add push outsl (bad) testl pop dec outsb je addr16 and rcrb xor add jns insb daa push outsl jb add jns incl imul add or push je sub movsb inc or cmp popa into push cld add (bad) add xor push les add and sti incl push dec bound arpl push sbb jle roll sub (bad) dec ss or arpl add pop sti jmp fs add clc jmp adc xchg mov int3 push mov faddp ficom cs out sbb push add insb sbb push pop pop pop inc jo xchg insb pop adc sar mov pop jmp lfs jb mov test jb jb movsb mov jb cwtl xchg nop mov jb mov jb je les jb insb push jb fcom pusha pop jb jb in call jb push push dec push add mov (bad) push call sub je movzwl daa fucomp xor ret (bad) dec inc inc daa daa daa daa cmp xor (bad) in and sub mov add push ljmp add test jne xor pop enter (bad) (bad) jg mov mov ret lea mov mov mov inc cmp jne mov fucomp sti push mov mov push nop mov add scas mov mov xchg mov (bad) in mov mov mov or adc (bad) mov aaa push mov push or pushl mov push push mov mov mov mov neg (bad) pop pusha add rcrl mov imul incb push or ret and add inc mov or mov jg add jmp add push jne aaa sub mov cmp jne (bad) mov cmp loopne aaa pop pop pop push fbstp je sti mov xchg cmp jb mov add call ja addr16 sbb sub outsl fwait push jne ret jmp pop mov add pop sub fimul repnz sub jbe sbb es push sub mov lock aam or jmp sbb scas sbb sti jne pop adc es mov cmp dec add mov test and add push push (bad) aas inc push jg mov mov test je mov mov push add add outsb mov push mov data16 dec imul push lahf push pop icebp mov or dec pushf cmpl in loope or mov in mov roll or pop xor lret and call sub mov mov push in es ja mov add lods std xor cmp je jae or lea cmp or sbb xlat push or mov les mov mov cmpsl mov cmpl subl mov popf cmpsb pusha sbb pop push adc jg jne hlt outsl mov mov and loope jb sbb loop mov mov sub or lds mov fistl mov sti and mov cmp or or dec xchg adc sti push push mov pop dec jmp cmpsl movsl loopne sbb mov push inc daa push jb inc add sbb cmp add nop out sub or mov and add sbb xlat nop movsb loopne sbb inc addl mov dec (bad) (bad) fsub outsb ja clc mov (bad) aas pop mov (bad) out (bad) repnz (bad) xor idivb cli xlat ja inc xlat mov push (bad) in je mov and xor cmc fnsave push (bad) pop add fst mov jne sub cmp pop movsl and push mov push xchg insl pop mov add cmpsl out cli jl add mov add or jle xchg push mov sub push stos call scas xor lea mov jne sub pop add sbbl lea test mov jmp imul jne pop push xchg xchg cmp punpckhbw sub inc popf insl nop popa js mov ret shll stc mov stc lock add clc insl clc out adcb jae mov out rorl sbb xchg mov push test je and ret addr16 add mov or adc or lock ja jmp pop sbb (bad) add sbb in ss push loopne xchg pushl mov push cmp add jl and mov leave outsb adc push cli fnsave and cmpl jnp into fldt jle hlt inc cmp in mov adc add rcrb pop pop ds pop pop push adc sub push fstpl jl mov mov outsb test test shlb nop sbb lods add in adc jo out gs add add push push dec xor outsl push test bound jmp mov sbb sbb fistpl push cmp ja or cmp pop jg adc test jns add sar jle addl cwtl mov jmp sub mov sub mov pop adc sti inc inc push pop add or mov cmp das jne or sbb add sbb cmp jl movl in xor sahf es or or add mov mov and add sub test cld jmp aas aaa mov adc insl cmc hlt (bad) or push or push rolb and dec repnz or ret decb popl push fidiv loope or jp push add cmpsb (bad) sub cmc adc ret aas or add or or je mov sub cmp cmp popa sub (bad) or mov ljmp add or fsubs (bad) mov adc inc or andl mov scas pop movsb or movb aad add ljmp mov push lea jo or sub cld jg clc sub sub cmp jge adc or out ds or lea and or mov sub lds pop sti xchg test add adc (bad) xor jp or push sub add iret mov mov mov add sub jo (bad) imul test mov repz adc adc mov mov sbb cmp inc adc cmp add sub cmp or in or mov mov scas add inc adc or movb adc mov or adc mov xchg sbb cmp lea movsl stos loopne call lods test mov cltd or pop adc sbb fsubs int3 sub add mov or fs (bad) push and sub cmpl bound subl push mov and sbb leave aam loopne in cmp mov sbb add enter pusha pop pop inc stc lcall rol pusha or lods fimul mov mov add lcall (bad) jne jmp inc mov mov adc sbb mov pop movd lods push insb pop cmp jg pop mov pop je pop jmp mov rcrl in dec sbb add pusha test pop jle (bad) cmp mov sub cmpl adc ret pop cmp inc add xor jae loope sub xor orl pop mov and leave jmp inc add jne js mov or pop rcl adc test xor movsb pusha or je push scas push int3 sti clc stos jle inc cld jbe cld add adc test mov mov xchg push in cli add or sti mov mov mov daa jg push movsb pop or movb cmp or (bad) jne push or jns mov jmp mov jge xor pop sub or push jecxz lcall inc jae and jmp mov sub jg sub fdiv push (bad) mov add cmpsb xor leave mov adc arpl add pop popa jne pop push push sbb mov sub jne out push pop cmp (bad) jo xor mov pop lock test jne ret jne decl in mov sub mov test loope push or (bad) into andl or je pop xor cmp push jl nopl ret mov cmp loopne,pt sub in add jle sbb test pusha lds mov test je sbb mov inc cli (bad) or orl jmp mov cmpl clc push add subl or adc cltd jae and cmp add push dec xor jg add out loope cmpsl (bad) mov (bad) jge adc lds (bad) mov (bad) lock mov or orl stos jno (bad) into testb adc mov cli add punpcklbw jae sub rorb testb cmpsb test pop jbe add test push pop and cmpb ja push mov pop addr16 and iret adc dec addr16 lcall inc (bad) mov insl lcall mov icebp test sub popa dec add lods inc cmp sbb cmp dec and mov rorb xchg or add lret cmp mov cmp hlt mov fdivs cmpxchg inc rolb jmp (bad) mov cmc adc push int3 test sbb flds pop adc add ss dec in inc mov cwtl and or fcmovnbe sub test add inc adc lret xchg dec sbb (bad) adc cmpsl call or sarb adc negb stos xor add (bad) repz je rcrl jg or sbb enter sub in pop or add push jmp mov subl bound mov repz push mov xor mov push lock mov ret rol xchg subl add inc sbb pop mov sbb inc or das decb out mov mov mov or cmp add sbb fdivr vandnps cmp ja mov mov hlt (bad) iret pop inc pop fdivrl and adc push loope sub call xor inc cmp fadds rclb ljmp jp mov mov inc or je pop jle cmp pushl cld ret sub inc fdivrl sarl (bad) mov inc rep jmp mov sbb in leave jmp mov jmp mov cmp xchg pop adc fcomps mov cmp divl int3 outsb outsl ret dec js rep xchg add xor lea xor std xor (bad) ds inc cmp jb cmp ja sub ret nop mov aas add loop sub fstps pop push loopne jo sub fist fwait pop pop pop in or fldenv fwait orw or jo js (bad) fldcw pop inc in sub add ror adc xchg clc mov data16 jb mov repnz sub push fdivl inc fsubr sbb outsl mov cmp and mov add shrb sti (bad) pusha out mov sbb test (bad) mov jl mov cmp mov fcos lcall xlat adc jne call mov test adc and sbb sahf jmp cmp mov mov js (bad) jbe pop mov xor mov inc add jb cmp ja mov mov jmp mov inc inc add ret mov sub jbe mov pop pop jge push leave mov inc xchg mov sahf rcr lret mov inc and lret imul and add push shr je mov pop cmp jne dec mov pop add mov bound or loop push adc push ja add and sbb push cmp jne push adc add js mov adc add jne add adc pop cmp cmp jne shr lods adc add push mov shr or mov cmp (bad) in and sbb out mov cmp jne dec xor cmpsb jns dec and pusha dec rcrb pushf mov jecxz aaa pop sub int loopne data16 enter pop or stos adc pop test outsb daa push push insb sub mov pop cmc or push inc cmp je mov or je or je mov js pop pop je xor dec mov dec inc mov or (bad) mov and ja cmp ja lea push add push incl dec je sarb jmp inc mov js pop sub lcall lds pushf mov (bad) into pop xchg (bad) add push adc push lock ja add scas leave pushf add aad (bad) aaa adc mov xlat mov sbb sbb mov jbe sub mov dec jne pop decb cmp pop repz mov outsb sbb sub ss dec je adc lea std ja pop lea fldt and add pushf (bad) pcmpeqb test push notb lods fsubl inc aas das jmp pop xchg jge mov xchg push xchg xor xor call fstp fldt inc mov pusha fldz mov jl in inc jg aas mov jl leave inc cli or or ret (bad) in lahf and adc mov xchg vpcomud and inc mov sti lock mov lock sbb sub test scas xor out sub pop jecxz add leave sbb xor cs jbe imul cmp mov fwait (bad) stc add (bad) mov bound cmpb xlat fadds out nop lods outsb xor xchg push or push push int3 aad (bad) dec sbb rorl mov push pop test enter mov inc push (bad) (bad) (bad) jg hlt daa (bad) lret into pop inc test xchg clc js aas sbbl pop (bad) mov addr16 (bad) (bad) incl inc xchg and cld gs sahf mov sub inc aad iret decl (bad) (bad) fistpl js inc mov stos mov cmp or mov pop out sub (bad) (bad) jmp imul (bad) divl jl xor cmp call mov (bad) (bad) jg sti jmp stos push inc mov push sbb sarb repnz test nop (bad) (bad) (bad) incl daa movsb lahf nop inc pop stos clc scas adc (bad) inc pop pushf mov pop pushf mov fs aam imul loope (bad) (bad) (bad) (bad) jp iret inc bound ds push cmpsb scas mov pop or addl dec in xchg cmp xor in cmp sahf xchg pop cmpsb lock mov popa (bad) (bad) lcall mov and addr16 repz mov subb and cmp lock aad bound xor jmp lcall mov sbb add and rolb add mov dec dec xor cmpsl int and mov lea push push lods mov sub mov dec dec xor push push mov xor cmp movl data16 add rcr pause mov sub sub xchg out mov (bad) pushw mov pop aas or (bad) fbld mov adc inc push push inc push inc pop inc outsl jb ret jmp fs inc gs jo imul push dec popa jae push popa insb jne cmp jecxz in (bad) mov cmc (bad) ljmp scas lock xlat mov xor mov inc stos sbb ja jle or push mov or dec cld jne dec mov xor mov out jne stos repnz mov ss push mov fsubrl addr16 in add and or push rcrb je mov int3 or rcr test or movups fs mov test hlt icebp fsts xor pop mov loopne pop xor call (bad) mov jl mov xor rcr add push shr dec rep pop jmp sub hlt add pop fadd add sbb in cmp je pop mov pop test or dec push mov mov push sbb mov or lods (bad) mov mov rorb js fsubr mov inc xchg cmp push pop push cmc (bad) jb (bad) add jmp rorb jbe nop add add ret in das (bad) mov (bad) sub clc pop movsb xor out adc (bad) mov and xchg xor add mov push ljmp call lea sbb mov fbld in cmp (bad) push ja mov scas stos mov call add mov icebp in stos or xor xor jb cmp fmull or aaa or or push inc pop popa sbb inc fcoml mov add es and aaa test mov mov cmp je mov leave jne mov cmpsb xchg jmp lret sbb test sqrtps scas je pop in test call sbb pop add sub mov pop cs xchg les pop add xor pop ljmp mov mov xor das mov insb sarb cs orb fdivl inc pop push aam or data16 rolb pop das cld test ljmp lock (bad) mull xor decl xchg std out scas mov je movb dec push cmp sbb add dec jne (bad) hlt lcall push jmp add sbb jecxz push mov dec cmp fistp pop sahf enter shr mov mov lcall xor call jb push pop add mov jl ljmp cmpb hlt xor push adc mov mov (bad) sbb add and or scas sbbl mov cmc hlt hlt or mov push mov fsts xor push push clc (bad) xchg test jg scas stos mov jo call sub incb sbb add (bad) (bad) in push call xor aaa mov push pusha push push fwait xchg pop iret cs lret and scas cmpsl insl addb inc xlat pop push in (bad) ljmp mov cmpb je or subl inc jmp add (bad) mov sbb jecxz sbb (bad) adc or pop fdivrl adc fnsave (bad) aam call add jne fidivr aaa jge mov dec adc outsb adc pushf mov jne mov test (bad) pop ret lods adc out inc inc cmpl cmpl je dec and js dec sub sub add pop push pop sbb stos aaa jbe xchg pop cmc enter adc adcl push lea xorl je orl aad pop or adc push sub push push cmp sub or test mov imul loopne mov add mov (bad) fstpl jmp xlat mov dec adc dec mov inc or push loope inc outsl je dec or inc sub mov or pusha adc push or mov lea mov add push pop mov out sub repnz orb lock fdivrs dec fdivs xchg mov lock lcall lods push aaa call pushw push dec jne cmp push fisubr adc inc decl out daa mov nop mov inc xor inc daa adc pop lods add cmp inc mov pop adc cwtl dec sub pusha sub jbe pop (bad) cmpsl pop out montmul cmpsb movl or test jg (bad) xchg push jp mov push push push push push jo or mov mov es mov cmp jno sub sbb mov inc or push add (bad) or pusha adc fild rorb sahf sub lea mov jb lods pop mov int3 jmp ret xor mov xlat mov add idivl add je cmp in jl je sub and jmp add jno (bad) aas sub jb je jmp cmp sub xchg mov inc adc sub (bad) sti (bad) (bad) cmp mov jmp mov jmp mov jmp mov jmp push sbb into jo (bad) (bad) jmp mov jmp mov jmp mov jmp mov aam cmpsl ss or pop cmp pusha push dec inc mov jecxz jnp ja lea (bad) je push outsl lcall cmp cmp test mov sbb add out cmp inc sti and inc fadds pop add sbb push adc loope and ret loope inc or push or adc xor cmp cmpsb add or mov cmp je cmp jne and (bad) mov dec aas stc add cmp adc mov dec mov inc fiadd call and mov pop jecxz adc js inc lods icebp shrl or pop (bad) push lods daa clc mov mov mov jl ljmp (bad) sbb gs mov movl sbb out or mov movd mov clc test add repnz ss cmp sbb sahf push add add dec nop adc dec jne pop pop pop inc pop sbb jmp dec clc xor add mov xchg or mov clc nop mov add jg fcomps xor or and mov es divb test mov mov push fisttpl jbe sbb jl jecxz lahf xor sbb inc fistp push movsl pop sbb ja add mov mov push or cmpsb movsl (bad) mov dec test sbb mov loopne mov cmpl insb jle mov stos jmp push mov sti add and add cmp xor push add adc adc xchg cmp addl pop cld or mov cmpl je cmpl mov inc rorb and pop mov call and dec and iret sub or add or mov sub clc sbb fwait inc adc sbb pop in inc adc cmp or push insl pusha popa sbb and jbe scas adc rorl cmp jne cmp adc loop mov mov lock ret pop addr16 lods push outsl ret mov pusha push enter inc aaa mov das imul adc imul mov pusha adc aas test pop ds (bad) or aaa into hlt add rcrb faddp mov mov inc inc and in mov mov push or push mov fisubl xor or sbb cmp (bad) mov clc dec jl lock push lea and es pop push stc push int3 adc movl or fisubl dec push push mov and inc jg inc inc xor or adc sbb mov mov notl xchg jle iret jle aas pop icebp and add loopne push adc add adc bound movl jne jg cmp sbb das stc mov call or mov cmp lock cmp cmp sbb mov icebp add sbb jb lahf add fwait pop cmp cld jmp pop lods push jp jmp lea cmp push mov add (bad) adc pop mov sbb and fistpl mov cmp xor sbb dec and cmp sbb pop push mov mov push add shl and or add add into pop fsubrl sub call pop sub jmp in popf pop sub and pop pop or fcmovu imul push addr16 in add fnstenv mov inc xchg loopne pusha jo push inc repnz lds pop add pop pop xor loopne cld outsl push je pop cld addb fnstcw or push (bad) fcmovnb xchg aas add inc cld ret push aas fimul test (bad) fcomip mov lret mov push cld add cmp pop sahf mov mov mov adc mov sub (bad) jmp cmp adc or scas das nop sub add (bad) mov rorl add (bad) je sti popf call mov lds push sbb xchg dec mov loope lret psubusb or sub xchg adc or outsl xchg hlt cmp add or mov xor iret fs dec jne mov lock and jge and aaa add dec jmp cmp push jle pushf sbb rorl out into pop dec jne mov or add scas adc xchg pop lea jmp xchg jg jl popl sub (bad) imul mov xchg pop dec ja pop dec and inc mov add or lock and and mov shr aam scas pop lods or das add test dec push ret add cmpsb je lahf cmp (bad) loope xchg cs mov push out pop adc dec inc xor mov das xor getsec cli inc or sub dec jl test (bad) sbb fidivrl sub into sbb adc stos aam push in adc shr in push mov inc jmp and int3 aaa scas (bad) xor lret or sub jge mov ret push (bad) mov jle inc sub add lea inc dec shl loope push push cli mov jmp push lahf cltd mov push mov out (bad) dec jge cmp adc imul add gs rcr pop cmp mov mov lea lock pop addb lock insb jmp pushf negb mov push insb dec js mov inc jb xor adc loopne cmp pop fdivl mov mov pop push push and cmp and sbb push loopne mov loopne sbb mov mov push and (bad) mov sub scas push mov (bad) arpl cli pop cmp (bad) adc pop inc ret lock push push (bad) lock inc nop/reserved rorb into js add mov in push sub inc clc in cmpsl push cmp call shrb mov pop in jle add jmp leave jae inc pop jl push mov mov sub cmp ret ss (bad) fnstsw push push dec push das int3 stos pop orb lock mov and shrl add ss das add jl add add (bad) inc mov add bnd je mov and stc fcmovbe adc scas add pushaw and fs push cvtps2pd or adc clc sub aaa mov xor inc cld pop dec cmp nop pushf lcall maskmovq mull clc push lods add add or dec or or je jle cltd xor mov pop stos add mov notb leave xchg dec dec ss jg mov dec xor pop loopne je mov adc pop test pop mov aaa cmp lcall das sahf mov xchg insl punpcklwd or or subb decl and or je cmp into cmp je mov jo or mov mov clc jmp adc or adc jmp xchg aad push or adc push adc cmp pop jmp cmp mov sub dec jns jmp sbb and out (bad) imul mov call pusha aad mov jns adc ds pop or cwtl jbe pop fisubr mov cmp or pop mov lret cmp rol dec daa ja ss outsb es adc or repz jb or jne inc mov sub daa fcompl and jmp ret xor fstl mov scas xchg adc sub nop adc ja (bad) pop dec inc add cld sbb clc push xor adc sarl add add xor push mov cmp mov imul pop cmp pop imul jo pusha push pop pop or bound shll dec mov add movb and aas cmp pop insb lea mov sbbb repnz rolb push fwait ret inc dec cwtl or pop jmp mov mov push mov jns xor mov cwtl lea in ds fadd idiv dec jne cmp add add cvtpi2ps adc paddsw popa inc push mov imul adc pop xor in rorb out sub fcomi sub jmp cmpsl std adc ret test les cmp cmp or ja sti add add inc ljmp mov icebp mov jo add je dec test cmp call jae lret adc popa adc add (bad) shr mov scas addl jmp mov arpl sbbl jmp mov test add pop adc add dec pop pop ret xchg cmp sub xor pop popf xor adc or or sub jl (bad) fistpll mov mov sub inc jmp cmp jo fldt jne mov inc and sub push test decb sbb xor idivb add sub inc jae (bad) popa mov add ljmp jb scas cmc push dec out jp clc and int in xor sbb aaa mov out add or jb jmp jl andl out pushl jmp jg mov cltd (bad) jo xor push adc movsb mov (bad) add adc or inc push mov adc push inc xor ljmp mov je out xor (bad) push popa scas (bad) add ficoml cmp jae sub dec out mov cmp or adc mov cs jg lret pusha lock push xor clc loopne jmp sub mov jmp mov std pop setb jmp setl cmp je dec add inc insb rorb stos roll or add push test dec xchg mov xlat push mov sbbb loope out loopne mov mov pop add in or cmp pop mov and ss lods mov xor lock test inc add movb push call pop popa adc dec mulb jbe insl call cmpb call pop sbb cmp jne mov cmp jge xor sbb loopne sbb scas xchg add mov sub add sbb mov dec mov pop decl stos mov mov cmpsl add lret in jge xlat sahf or or xor xchg dec in push xchg pop and stos je dec push dec add fldl les add aam cmp adc test add push cmpl jle cwtl or xchg dec and jo and inc fimull cltd or fisttpl test enter mov adc lds cmp add inc andl cmpsl lock push xchg adc cmpsl pushf jmp fisubr lock mull outsl inc insb dec (bad) cmp mov cmp jle repnz jge or mov (bad) jo inc inc or dec push clc add inc push adc pop sub pop addr16 inc lods xorb push push hlt xor into xor jge add xchg mov adc sbb push ret pusha xchg orps ret (bad) mov or inc into cmp roll popf mov xchg mov call popf rdpmc pop lock jne shl and xchg push adcl fistpl dec sub out sbb fiaddl jl push push push mov jge lret clc xlat pop pop pop cli sbb cmpsb (bad) in sbb inc call mov pop jne add dec (bad) rclb aas test add dec test jo jne push or test test les push insl ret xchg scas cltd mov add or ret mov xchg mov loopne mov scas aad adc pop ror jecxz jmp sub jmp into cmp jne (bad) nop mov test js sbb push sbb mov push fimul push out and pop test jl jp rcl sbb jnp lods sub movsb inc ret cmp cmp out ja js pop jne push ds loope inc add or mov into and push (bad) ljmp xor insb jnp iret (bad) movsl jno shr dec (bad) sub add inc cmp push divb sbb push lods imul out and xlat dec mov loop mov jbe sti outsb inc cmp test sub dec push je sbb mov cmp inc adc lcall pop ret imul (bad) incl gs xor cs insb pop inc gs outsl outsb addr16 popa je dec popa insl gs mov mov (bad) data16 leave pop sbb frstor js inc out and mov int3 push and add cmp addl sahf adc stc push sub inc lea mov movsl subl (bad) popf sar fdivrs iret int pusha cmpsl pusha cmp push repnz cwtl test cmpsl add sbb stos and and popf push lods repz pop outsb add cmpb lock jge es enter mov in xor scas push add cmp stos pop cmp jne adc sarb orb js (bad) sub sbb add add lods mov add les xor cmc add (bad) mov jle data16 popa jb pop lods data16 mov jae aaa jl jbe xchg inc cltd inc jo sbb add nop daa dec cmpsl add in add mov loope sti mov adc jbe mov sbb loopne add ja lds jl imul add aaa dec in sbb icebp mov mov dec xor (bad) fcos fisubr adc cmpsl cli mov cwtl loopne ss scas cmp and sub sbb mov dec or xchg sub mov (bad) mov mov xor or (bad) int3 pop les inc jecxz stos movsb sbb lock cmp cmp mov jmp mov jg mov cmp jne inc cmpsb jp cmp ret cmp les add mov mov sub and push ret and or (bad) cmp dec push inc rcrl je sbb inc popa ss push push mov inc fmull mov pop sbb xor mov pop ret sbb inc sbb adc xchg shrl adc adc and into push js inc mov adc dec and cmp es xchg or dec js inc (bad) jns pop les mov ret push xlat mov mov mov pop fs (bad) pop cmc (bad) mov (bad) call inc hlt movzwl inc cmp ja mov inc jmp cmp lret lea cmp ja fcmovb jmp or sar imul mov adc sbb and lret mov test and and popf (bad) dec pusha rolb js mov add mov add dec movb shll mov dec (bad) aas jnp jbe pop add cmp lea push sbb lock push inc or cmp inc add outsb dec loop push jnp (bad) mov inc xor das xor fdiv sub inc test je fucomip and or sbb loope and je cmp adc mov mov sti orb mov pop out cwtl and or jg cmp mov pop lea dec dec cld mov inc inc push adc inc lcall cmp or jmp out cmp inc inc inc mov adc jne ret xor les cli xorb sbb bound fisttpll (bad) jb inc mov (bad) out scas add pop (bad) stc lret mov cs je adc orb inc lea pop cltd std adc ficomp xor inc push and mov aas xor pop pop test fmull movsl ror jmp adc in stc lcall popf pusha mov xchg mov dec jo pushf pop add fadds sub and pop inc xor pop (bad) and dec mov add pop pop add cmp mov push dec dec lock mov adc add cld aaa cmc mov cmpl add pop popf (bad) leave mov adc adc jg test enter cmp cltd or add xor push out pop ds lock add pop lea push push push fnsave lock adc lods mov and pushf add mov mov pop nop bound nop sbb daa stos pop icebp pop adc mov and mov inc xchg mov in aam mul jbe mov subl add (bad) or add xor nop add or push dec adc test bnd popf (bad) and adc adc inc jns xchg adc cmp add add in sub xchg call sub clc add les pop jmp imul call jp ja ja mov divb aad mov clc shrb hlt push push dec mov mov pusha loope cmpl lcall inc inc xlat jge or jmp push mov sub mov pusha mov test jne je sti jle adc jns push xchg mov icebp and add mov je sti fcmovnb mov outsb jnp cmp pop arpl mov fnstcw sub lods or rorb cmp jge in out dec mov pop mov push dec push mov iret rclb xor mov andl pop pop jl push out rorb push push inc add add jns mov dec push or sub jb xor jo xlat mov (bad) add cs in inc fisttpl jg or push gs mov or jb imul es imul inc push mov arpl inc gs jne je dec outsl je in fucomip out imul mov gs outsl inc arpl or adc ret or jb (bad) (bad) jnp xor xor (bad) outsl insl bound outsl js imul pop cld outsl ja nop hlt cmp andps outsb dec inc xor (bad) mov dec add adc jns mov dec mov cmp cmp cmp cmp sub and cmp cmp sbb adc cmp cmp or add mov add mov pushf pushf lock call pushf loopne fcom pushf pushf pushf pushf ror enter pushf pushf sarb mov test pushf pushf pushf pushf mov pushf pushf pushf nop mov pushf cmpb pushf pushf pushf jo push pushf pusha pop pop push pushf pushf pushf pushf push dec dec inc pushf pushf pushf pushf inc cmp xor pushf pushf pushf xor and pushf pushf pushf and pop mov push push test jl je daa daa daa daa insb push daa daa pop pop push push daa daa daa daa dec dec inc inc daa daa daa daa cmp xor daa daa daa daa sub and daa daa daa daa sbb adc daa daa daa daa or add xchg xchg xchg daa cld mov xchg xchg lock call xchg loopne fcom xchg xchg xchg xchg ror enter xchg xchg sarb mov test xchg xchg xchg xchg mov xchg xchg xchg nop mov xchg cmpb xchg xchg xchg jo push xchg pusha inc cmpsl inc xor leave leave leave sub xor leave leave leave sub cmp leave leave leave sbb or leave leave leave or cld cmpsb in in clc hlt lock in in call in in aam int3 in in enter in in mov in in movsb mov in xchg nop mov in in test in je insb in in push in in push push dec in in dec inc inc cmp in in xor sub in in and sbb in in adc or in in add cld movsl outsb adc clc hlt movsl mov pushf pushf fmull call leave leave test aam leave leave leave leave int3 enter leave leave leave mov leave leave leave lods test mov pushf cwtl xchg nop leave leave leave leave mov leave leave jl je leave leave leave leave insb push leave leave pop pop push push leave leave leave leave dec dec inc inc leave leave leave leave cmp xor leave leave leave leave sub and leave leave leave leave sbb adc leave leave leave leave or add in fs movsb clc hlt lock in in call in fnop aam in in int3 enter in in mov in lods test mov pushf cwtl xchg nop add clc out movzwl shl or repnz dec mov nop cmc popf popf mov js cwtl mov mov (bad) or xor mov scas push mov movswl add inc and (bad) fcompl pop pop mov or clc xlat stos adc push sub das push dec rcr jo dec mov mov dec cs aaa lock adc cmp repz and fs mov das push push sub pop test pop pop mov in mov scas cmpsl mov cmpsb aam stos and and scas push scas bnd jb inc push jge push mov sbb sbb ret xor push lods ss fs cltd out cmp repnz inc pop pushf hlt lock or add push mov dec popa gs aam aaa add dec push push dec inc inc dec add outsl scas std in or pop push and dec push inc push dec imul adc push rorb pop sub ja sti fstl dec pop dec dec dec inc push das addr16 outsb je outsb enter je and movsb gs push sub jb test psllw jb jb repz cmc divb jb idiv stc cli jb jb sti cld std (bad) jb jb jmp loope jb jb jecxz in jb jb out jmp jb in in out jb jb out rcl (bad) jb jb rcl aad jb jb xlat fcomp fidivl jb fcmovnu fstp jb jb ffreep rol jb jb (bad) (bad) jb jb enter jb jb int3 int jb jb iret mov mov jb jb mov mov jb jb mov jb mov jb jb mov jb mov jb jb test stos dec repnz jae das cmp pop xchg addb cwtl out pop fsubrs add daa stos push inc inc add sub aaa push mov movsb xchg or arpl je outsl outsb mov add fisttpll push push adc sbb insb in and in aaa call dec jb dec sub push inc dec gs jo nop xchg pushf pop mov mov fsubs inc dec jne dec dec gs outsl jb xchg add insl sti std dec xlat or outsb mov xor scas dec push int ds loopne pusha pop adc xchg (bad) mov mov jae enter xlat in mov adc jl mov outsl mov xchg or imul nop pushf scas push lods inc cs jle popa outsb sbbl hlt outsb add pop or dec jbe mov repnz outsl ja push jbe sub mov inc sti rcl nop test test inc add add data16 pusha xchg push jo add ds mov xor inc fisubl scas pop xor popa jo shl xchg pusha mov in push outsb fs or ds xchg or movsbl sub inc fs sub aas or ja jbe loopne inc popa jae (bad) mov sub inc xchg sbb orl sbb shrb sub xchg adc sub dec loopne jae adc sbbl or xchg push jb insb add aam aam pop add arpl or dec jbe xor daa mov ret adc fbstp inc inc popa mov (bad) mov orb in pop (bad) in in push mov mov and mov lcall mov mov mov mov sbb xchg fmull mov or adc pop and lock push push jl les (bad) popa decw add (bad) insb jle add aaa xor push bound or mov out inc cmp add xchg sub inc fist les adc jb popa outsl (bad) cld add jne int3 add int3 shr fld aam ret inc shr test nop fstpl mov mov cmp sbb out xor jnp sbb lock hlt (bad) push loopne sbb mov outsb inc mov fildl roll and dec subl push mov insb adc ret arpl cmp fmuls jg xchg pop cmp shr div leave pop push add (bad) das std pop es push lret mov mov imul hlt add pusha xor or xchg stos (bad) xlat dec rclb mov pinsrw notl add or fisttpl inc push call out mov ja popa mov adc cwtl (bad) scas imul and fdivrl outsb or mov xchg add inc push int3 aaa bound hlt inc mov push inc inc dec cmp jg iret add inc pop add scas mov incl sarl jbe mov adc cmpsb je movzbl push push incl cmpsl mov or mov dec loop ljmp rcr std inc jne inc inc ds mov pop add cwtl jle rcrb mov (bad) (bad) out and sti je cs ret add in out pop push aam sbb inc push and outsl jne push xchg lcall or xor test or adc in insb mov clc addr16 arpl and or cmc sub sbb jb cmp jbe outsl add mov lods lock rcrb push push adc icebp push dec dec mov add xchg mov pushl and jl cmpb jbe adc test fcmovnbe ds and clc push sub aas (bad) lret inc clc jno pop or fsubl in nop pop test mov mov jnp insb (bad) add adc pop mov mov ret or je ljmp jge add jg lea push cmpb cwtl push ficompl inc jmp daa and push decl sbb ret cmpsl aaa inc bt or inc and in dec xor in loope jne enter rcl jb,pt xor lcall aas sub pop ds outsb adc sub pop or push lock cmp xor (bad) xor push mov or cmp int3 add add or jmp (bad) mov xchg push xchg in rolb orb lock mov (bad) (bad) jb sub je (bad) jae cmp jl inc mov ljmp adc or incb jmp jae inc dec jne mov jmp sarb xchg jae mov inc ljmp mov (bad) div dec daa jne and cmp jb push pop mov in (bad) (bad) jg pop pop sub sub jbe add mov sub jmp add dec jne push fcompp call out in adc leave push outsb cltd cmp mov add (bad) mov movsb fidiv mov repz jecxz mov pop mov negl subl gs jae (bad) int3 sub dec inc loop mov arpl xor or outsb dec sub and adc in mov jnp mov andl push and fistp ret add fnstcw sub add rorl (bad) fdivr mov pop mov xor add push sub rcrl mov ffree or (bad) ffree ffree ffree pop aad aam add adc aad shll push or jge pushf movsb movsb and cmp rcrb push push mov imul out xchg andl pop add lock mov lea and or scas mov addl insl cmp push (bad) out adc add scas mov repnz mov push mov aas cmp xor inc mov scas jmp dec aas sub inc sbb push insb sar cmp mov mov xchg pop mov loopne xor fldl (bad) pop or jo or mov mov jp aaa movb in andb jl inc xchg mov adc or add mov dec rolb mov push pop mov lock mov insl lock std and add xchg add ss push (bad) push inc ljmp jne pop addr16 xchg (bad) int3 and add xchg push pusha dec ret nop sbb out out and mov fsubs or add out test notb loop aaa jmp and cmp mov mov jnp sub jg cmp out cmp ja mov and loope push inc ja sbb jnp clc or push sub js add dec mov mov movl push inc dec xchg (bad) xor push in inc lods fld orb pusha xchg jp inc pop push sarl int3 mov push pop (bad) aaa push or out imull dec pop xor js add and cs mov sahf push add js cmpsl stos jae das andps (bad) ds or and jns push data16 and xchg mov cmp je pop add jle jo cmp sahf out rcll xor push (bad) hlt mov cmp and sub sbb scas js inc mov xchg inc sbb sbb daa and xor ja jl cmp lock je lock (bad) mov ret mov icebp fst or call pushl sbb roll jne dec inc jg mov cmp cli pushf ror sub jmp js and test mov mov inc das pop cmp (bad) mov (bad) outsl push sbb dec jge fsts push jg (bad) jmp cmpsl mov nop cs or push (bad) lock cld push push addb adc call sub rolb ficoml hlt clc cld push jnp pop xor mov scas inc call test call inc xchg mov xchg and test lock ret nop add or inc mov mov aam cmp inc jmp mov sbbl sbb jl jle or dec not mov orb clc cmp movsl into sbb xchg daa movsb pop pop ret int3 jns stos fdivs mov add lret pop lret (bad) xlat or arpl (bad) pop (bad) shrl adc lcall jmp out icebp aas repnz (bad) aas xor xor repz mov mov (bad) fldcw je dec scas icebp lea icebp pop cmp cli xor jge and fisttpl addb or and flds mov test add out data16 jne scas hlt inc inc cmp cmp out jb insb aas divb inc dec je mov mov pop sub jbe sbb pop sub pop push inc (bad) lods mov mov push add lds in jo test je inc mov inc pop or out mov xchg dec push inc aad sbb mov and and ja pop adc cli test and pop jbe mov iret hlt xlat cmpsl push mov les push or movb les add and and mov fiadd sub or cmp je dec jmp adc pop sub sbb xchg push pop push (bad) lock (bad) push (bad) outsb add inc fidivrl hlt mov mov dec or jne fisubr mov loopne subl mov decb neg push testb (bad) cmp jne cs and lods jmp sub mov inc sbb lret mov fdivs jle push je movsb pop mov cmpb scas mov xchg or lret ror movsb xchg pop fnop fstpt mov rep sbb daa pop sti push (bad) or jge pop pop mov sbb xor cmp ja imul enter mov add and in dec (bad) adcl addl mov or bnd jmp sbb je xchg ret and mov sub add cmp pop jne push or lea mov lcall mov popl mov cmp nop imul mov das pop jl cmpsl ss mov orl xor xorb sub (bad) xor adc cmp mov fsubrl or fild test hlt xchg jae xchg pushw or mov push lcall push pop outsb adc in imul dec std movntq and cmp jne mov ret sbb add mov cmp mov aad in or jmp xor inc inc subb mov cmp jnp je add jne aas and xchg jno push cld call pop js mov push mov ja enter mov fdivl or push into scas jmp jecxz push fldl sub stc cwtl pop ds jo add mov lahf jno jmp mov outsb mov outsl pop sub mov or je mov inc je rcr out mov dec je dec jl mov mov clc xchg ret mov fdiv and jb inc fdivrl outsb cmp pop mov in (bad) push loopne mov inc iret dec (bad) sub outsl pusha fwait mov xchg ret xor and cs int3 lahf lea xchg push or in daa jbe xor test dec clc mov push jl mov scas cld jge lock or jg fnstenv jge into cwtl fimull jg pop insb (bad) push push mov add cwtl lcall and sbb sbb (bad) clc dec cld lea test cmp fnop xchg incb mov ret jmp add insl mov dec jne or jnp adc lea cmp iret push lea repnz xchg pop out push xor dec insb loopne stos or orb jge mov neg jmp or enter xchg and push jmp mov fs jg pop insb mov inc dec pusha in or jg dec mov stos cmp jne pop pop rorl dec call dec sub shlb in lcall xor in cs mov repnz mov pop inc aam mov arpl add inc add mov jno pop jle mov cs aaa aam daa mov (bad) mov pop call jge movzwl sub jp jae mov addl cmp sub jnp mov dec sub fcompl push mov or or mov add lea jl fstpl sbb call dec fdivrp dec test pushf sbb int3 iret cli aaa dec ss dec dec inc dec inc dec lods or outsl and dec xchg jge add ret std lock xor aam adc jg cmp jl xchg dec stos push je mov sti imul in stos neg sbb stos jmp inc inc mov loop xadd les stos pop pop inc clc dec pop (bad) popa jne add push mov and mov inc decb jbe sub incb insl sub add leave mov mov mov rcl dec inc call adc mov mov sub or or repz inc cmp test jne sbb add stos cmpsl popf add (bad) push sti push loope testl dec je inc jne pop mov ret mov bswap xchg repnz or repnz inc cld cmp out adc pushf fwait cltd xchg iret mov fistpll inc je push push cmp (bad) fmuls popf add xchg movsl int add inc loop push mov test add inc add and mov cmp sub sub sub xor outsb sub sbb and out mov sub or iret mov xor sub xor fld1 dec popf mov adc adc dec add and test pop xchg mov and jne testw test lcall fdiv movsl inc add movb sbb xor je,pn imul mov inc shl inc fabs ljmp mov frndint rcr scas push or fstps mov testb je fidivl fistpll lea mov inc sub nop shr and push ret add jmp shrb add jns or sti idiv fistpl daa cmpb jb movb js decb mov cmp jmp data16 pusha xor jmp mov cmp inc xor push or shr mov add xchg jge cmc test xor adc cmpsb sarl je into add orb add jmp adc jl mov push inc sub mov loopne jae dec add sti or in insl or mov (bad) mov fidivl ret inc xor fwait mov push xlat pop loopne sub pushf and jne dec sub adc jge cmp and ljmp add enter addb divl pop jmp pop or inc cmp cmpsl aaa pusha inc add push jns lret f2xm1 fwait push js call out cmpsb xchg mov cmp lods or (bad) add xchg xor (bad) lock pusha jne inc sbb dec and fistpll les inc enter add jg jne mov adc rcrb pop cmp add loopne adc aas sbb fstpt or test or test insl inc jo add add and mov sub add jae fimull pop (bad) fiaddl jmp aaa mov idiv daa push sbb es push inc imul inc testl hlt nop jb aaa add jge push sub lret rorl push mov stos dec sub dec inc sbb adc fistp dec push jb mov in mov (bad) ss lock mov cmp aam fldt fstpl fwait sub push fldcw insb pop mov cmp mov inc mov fldl inc jl cmp xchg adc adc mov popa (bad) mov xor push adc adc (bad) push add mov or jbe jae or cmp inc stc inc mov jae push data16 jmp (bad) add shlb mov ret cmp (bad) rcr fildl xor fstpl fwait loopne aad mov test mov lret movsb dec outsl movsl inc test jne add sbb sti and mov xor dec (bad) mov cltd push lock or lret loopne cmp addr16 ret and mulb inc or enter push inc jmp loopne into and fldcw in sub call add (bad) icebp or dec or or or std (bad) les outsl movsb jg add lea incb jnp mov jb daa ja and mov add jb or jb sti insb cli mov cmp ja adc push mov add inc dec jne sub dec mov and ljmp icebp insl lcall add sub ds ds add mov lock ret or adc popa vpaddw addl call (bad) or dec in test jg jl (bad) movsl rclb pop sub rorb add mov or inc decb push jo out out stc mov add jl addl mov and dec lock mov xchg xor add decw (bad) imul cmp imul fcoms mov mov mov mov pop pusha xchg scas stos shl cmp sub mov mov sub aas daa xor dec aam pusha mov nop cmp jb push inc jmp jmp nopl adc fidiv mov cltd (bad) sbb sbb and or clc jge addb addr16 xchg inc icebp xchg jo mov (bad) push mov adc mov add cltd cld sbb pop inc aaa stos fiaddl cmpsb mov out cwtl xchg and sahf or aaa push aaa add mov (bad) adc mov pop repz sbb push jb pusha in cltd push movsl add (bad) push mov add xchg pop arpl xchg rcrb sbb clc enter adc js mov mov mov sti cmp je lock add test inc hlt out push cmpb jne (bad) push pop mov jo add lea mov out fisttpl push lock repnz nop adc inc in add fistl rorb xor push jge lahf lret in call (bad) rclb cmp scas pop (bad) lea lcallw scas xchg lahf xchg jmp xor sahf xchg addr16 out out repnz out out add mov push mov in ret (bad) mov cmp stos mov jecxz fiaddl push fcoms mov mov arpl and mov je or xchg add out sbb mov cmp push sub adc dec ret push add adc inc dec adc xchg fiadd sbb fdivl push mov adc ret nop arpl xchg std in repnz cmpsl addr16 iret in inc and daa cmp mov bswap mov xchg xor loope jecxz push inc cmpb jne push xorl dec ret pop jb fcoml jmp sub add cvtps2pd nop fadds adc or jmp fnstcw push pop mov jle fsubrl pop incl stos and dec push jecxz add xchg mov icebp mov mov sub mov (bad) push out or cmp lods repnz cmp mov inc pusha (bad) pop mov or cmp jne mov xor jo mov cmp xchg adcb cmp test or or or or or or or push (bad) jl adc add or add repnz stc cmp imul mov lret lds out out add push test push pushf pop or call or mov test and in insb inc pop std inc mov push in adc lea scas nop out stc and fdivrs cmp (bad) dec or sbb xor sub hlt inc sub mov movb or sub leave mov xchg dec je add jmp out aad call mov mov stc xchg mov cld sahf xchg and mov mov mov pop lods mov mov dec jne xor xchg (bad) lock addb dec jg je int (bad) jnp and add push jmp or mov pop or je jmp cmpb dec mov jo mov test dec sub adc hlt roll jne rolb jmp cmp xor mov fs or jne mov ljmp add lock and push call xorl sub pusha or sub inc bound call fs add and mov stos loope pop push and cmpsb push stos les sbb xchg add cmp push icebp sbb addl daa cltd nop lret mov add add ja and xor jae inc mov inc jmp and add cs mov cmc xchg lea sbb push add cld (bad) jb fwait sti out subl jmp (bad) mov jmp adc scas call lods into jge fs cmp push cs add mov push imul rolb jmp sbb push test fucomi add out mov xor dec inc mov pop lods push jl mov (bad) mov cmpl fidivrl cli int3 xor inc mov in pop insl into pusha fcomp push pusha movsl incb jmp inc dec das push dec xchg mov push adc and (bad) fldt adc push pop inc test adc outsb lea mov xchg adc mov popa cmpsl or clc inc sbb cwtl fs lcall rolb pop cmp test cli and pop daa push xchg clc je shll push sbb cltd aam in sbb jmp mov cmp jo pop push movsb fsts ljmp (bad) adc fbstp add sub jae jnp int rclb jl sbb scas arpl ret addb mov mov call xor mov inc adc or cmpl mov nop inc daa push mov test sub inc loop fdivrs add mov jae test clc test dec pop pusha xchg push ds xor mov jl loop mov (bad) cmp jne incl sub inc js aad mov push sub and sub je dec je sub (bad) mov je jmp mov jmp push push push faddp outsb and jbe push inc mov jle fadd or es pop ret mov add or cmp lock xor jg jl popa aaa jno pop pop notl push pop mov bound or in sbb inc sub jmp loopne cmp incl bound loopne loopne or jne xchg inc decl mov jne cmp cwtl aam arpl mov jmp ret add sahf fucomip sti pop cli stc imul add cmpl jle adc pop sbb fldt cld gs xchg psubusb loopne (bad) icebp push push jmp scas and movsl mov inc out test add add pop xchg mov lock popf lcall jmp sub iret ds loopne popf pop add dec push sarb jbe andl lcall sbb sub mov or xchg insb scas pop outsl lods cwtl clc stos test jo mov cmc fistpl sub enter add repnz in pop jmp fwait push bound mov ret push mov and in call fldl push fucomip ss out pushf sbb hlt sbb js cltd nop jmp mov pop push movsb out fwait cmp jmp addb mov ja (bad) jno cs data16 xchg imul (bad) lock add ss jg cmp jle and fs jne mov add add (bad) or ds xor loopne or cmpb xchg mov xor clc mov pop mov and jmp out jle or frstor jne sarl add jne imul imul fsubrl fisubr pusha cmp fcomps adc test pslld dec mov push jb sbb mov or jno aaa (bad) add dec pop out rorb stos repnz fildl dec fimul scas fstpl mov or (bad) jmp push pushf lea jb int3 add or mov xchg add pop notb (bad) ss xchg inc inc add and cltd xor outsb sti push xchg lret iret je addl orl inc push enter add sbb daa mov subl enterw int (bad) ja or ret pop add addb daa js cmp push add pop sub or push or je ret mov sbb icebp imul repnz dec movsb es cli xcrypt-cfb cmpsl es xchg into inc fwait xchg add test jp xchg cmp (bad) lea pop pop addr16 fcoms or add sub add mull clc mov add sbb mov push cmp ret jne loop outsl xor daa fnstsw sbb outsb addr16 jb sbb fwait jmp sbb cmp sbb lahf jne cmp add pop push das sbb push jnp mov outsb lcall push add sub jb or adc or xchg imul sti xchg addr16 mov mov lea xchg push ljmp das dec lods das adcl mov and das subl push orl test popa pop call loop adc leave movsl mov imul add push mov nop mov leave daa fsubrl push add loopne aas sub imull insl gs push push sti pop shlb mov lea dec lret sti sub mov pop sbb nop inc xor lock push movl ljmp sti or xchg and pop add pop push xchg push pop and xor call fnstcw loope dec call ret es call aaa sbb aas fcmovu je test jmp push push aas pop xchg arpl push jl je addb pop xchg cmp insl push sbbb and adc jne adc test fldenv adc cmp adcl push fildl pop sbb and pop out cmp pop and in inc imul add add or or insb sub mov jbe cmpl add rol and pop sbb pop xchg pop mov outsl jb aaa or add mov sbb pusha dec ss and mov xor repz icebp adc pop vpsllq or daa dec xor test (bad) inc add ss ja sub push or mov jmp mov sub push (bad) incb sbb je scas ret mov push and loope add jle fnop add cmpsb cmpsb push cmp mov push pop loop cmc mov mov clc fistpll lods add jg test mov or loopne push cli inc rorl dec mov popa lahf add jle cmp add les add push mov dec xor jmp push dec push push jns insb jmp in or cmp in jle cs add pop mov pop push add mov out add add sub and movb mov push mov jle sti mov rclb scas or and sbb jne dec out iret pop mov icebp test dec cmp and or aaa fbstp cmp sub cmpsb dec mov xor add rolb mov stos loope outsb pusha aad cld mov lods movsb mov push fsubs xor fwait outsb les ljmp push add pop std sarb dec les push ds and pop js xchg out and pop sbb lods or fucompp mov push xor mov mov cmp mov repnz sahf stc push lea js lods add pop cwtl xor fildl cs adc mov mov dec addr16 jle js loopne push sub hlt push loope adc nop inc push or inc mov or pop idivl mov lahf xor xor jmp push or xchg adc lds cwtl bound aam (bad) out ss pop and cs fisttpl roll sub rclb push bound pop dec or adcl sbbl add mov push sbb pop adc mov cli test cmp hlt clc pop bound fwait das cmpb addl push push or dec aad or and and (bad) xor mov sti push jg mov xor and jne sbb mov dec repnz jae enter jp mov (bad) mov add cmp or pop mov push jo in decl push sbb cld dec cmc ret push push sar lret adc ljmp and xchg ljmp xchg cwtl and add inc or rcrl jmp aam int adc hlt pop or jb lods and out sbb adc or push add int3 mov (bad) call jne or outsl cmpsl mov hlt clc push in push loopne push mov repnz dec loopne cwtl jp int mov (bad) mov es ret lock (bad) mov mov and dec jo ja lods push (bad) shl adc (bad) add ret movsb into mov imul cmp push pushf cld and cmp je jmp xor inc xor sub jmp and add lcall add push cmpsb imul mov daa lods inc push mov addr16 cs adc or mov fwait mov adc cld cmpl inc cmpsb cwtl insb sub aas and je or sub arpl adc test ja cmp and and fs sub lea add pop mov or and mov jae sub push enter nop rcrb lods aam ja sbb xor pop cmp sarb pop sub cwtl mov mov pop test add cwtl mov jo int3 jb sub adc fs es mov cld fldt ret ljmp adcl jae jae cmp fmull adc in jae mov mov cmp lock inc je shl jo call and outsb rorb or addl dec shll or scas nop xchg int in jae ljmp mov sbb stos insb stos dec test mov fidivrl and mov mov imul jnp adc push inc pop test test sti mov mov ja and aas in mov or lods fsubp movsb sbb adc push adc inc aaa xorl dec xor cs cmp daa adc push in daa push insb lcall (bad) push push rcr les jl out adc enter jo push cmp sub jle sarb sbb adc ja or adc adcb mov jl cmpxchg8b test jne cmp add leave pop mov bnd sub ret adc adc (bad) jne cmp pop sbb jae fdivrl movsb jae xchg aad mov fisubr andb xor and pushf out dec cli pop dec xor or dec imul mov jnp movsl in add stc ret lret pop push dec cld add push cmp sbb pusha rclb add dec or (bad) dec jmp negb movsb dec adcb or and sarb mov sub and jns dec or mov movb sub add xchg add mov and in std aam test add xor cmp cmp lock lcall inc lock adc std adc jmp (bad) imul mov scas test stos das adc jl mov and arpl fildl inc inc inc jge rorb push or and inc sub dec loopne jae pop dec imulb jge fucom daa push jl jne sbb cmp or push sub dec addr16 (bad) mov xor dec repz pop xchg cmp fildll push dec cli pop rolb cmp div test push jg dec jg xchg or or or and fwait (bad) nop push inc mov mov xchg mov jge pop mov std inc push push sub ret sub (bad) push daa jg sub (bad) fcomps jb popf add jo add dec test pushf push ret adc inc cs push xor ret push ja push loope out pop stos adc inc push jmp inc das gs dec cmp lret nop addr16 adc outsb inc stos mov add jne mov pop sub mov subl cli mov mov sub inc xchg xorl insl push sub mov jg pop inc cmp jl dec push cmp sbb jmp adc xchg or cli push in fwait (bad) fisubr and jge or mov lods jo push ret (bad) xor adc push scas and dec jl js jge jb js (bad) aas and adc test push cmp and mov or adc push add push push nop imul dec clc sub aaa sbbb add dec adc fld sub jbe pop insb loop lret (bad) pop mov inc movsl insl daa test inc daa mov hlt (bad) cltd aad and sbb add out xor jmp mov adc inc inc (bad) jne arpl mov hlt aam sbb enter adc and ret cld insl mov bound enter inc sub jge or scas lock push mov fwait (bad) jg cmp inc aaa push mov sub jb inc mov lret adc stos (bad) sbb lret jne dec cwtl test je or mov jmp or pop jne inc or (bad) mov pop pop or push cmp jecxz push push dec pop je or inc add lods repz adc xor dec data16 enter mov mov pop call arpl mov or add xchg push out jne adc add xor or sub xlat fucomp loopne mov dec sbb outsb adc dec repnz mov mov out or inc inc cmp test sub ret sub inc push jo mov imul in cs rorl test jmp into pop mov sub sub push push arpl jecxz xor out in lock mov jne push and cwtl mov add js inc movsb xchg lcall xor mov outsb test xchg inc rcl push lea sub push inc call sbb fdivrl (bad) and sub (bad) pop mov push sbbb pop jb enter das mov movsl mov xchg fwait pop es mov mov sub pop int3 and imul xchg fcomp mov push fld push imul dec repnz sub and int3 mov or out enter shlb imul insl xchg add and aas ret in daa add enter into ret clc mov adc push push hlt mov mov xor inc movsb lock push mov mov aas sarb and hlt insl das fs lock in add scas insl add fs mov pop adc jb insl pop test mov inc push mov mov adc int3 pop inc loopne in cmp ss gs mov sub sbb adc aaa mov mov adc out in mov aam inc cld in push lret test jnp adc stos fcomps clc mov jo xchg add fiaddl mov sub fistp mov sbb add add sbb testb mov cmc adc daa sbb or adc pop sub jo cmpsl and sbbb sub outsb outsb xor pop or or mov subl push jo sub or inc js sti xchg lock inc adc xor dec ret xchg push dec js (bad) sbb and (bad) (bad) mov mov push or mov outsl sbb inc cmp jne mov and and mov cmc test jle aaa and push fildll mov mov inc jmp pop push test mov movb out fidivr jecxz or jmp fsubr sahf cmp ljmp je das cli sbb mov mov inc or fs inc jo (bad) mov mov push inc jecxz daa mov int3 mov xor (bad) sbb lret leave pop subl and and inc or test adc js mov movsb fsubrl pop pop pusha (bad) aas mov outsl mov imul movl imul xchg xor fsubs inc pop adc sbb data16 aam push sbb mov xchg (bad) dec dec lods enter shr lret or pop mov rcll and sti sub push lock push adc mov mov aaa jo clc adc in pop clc mov or loop jnp ja je push shll jne inc stc shlb ja roll xchg ret mov lea mov jmp daa mov dec sbb ljmp das add in inc in aam orb mov inc icebp jg xchg sub lds xchg ret incl xor inc test inc icebp and sbb jnp mov insl shr sarl push lret pop lock inc aas lock sub loope scas add cmp cmp inc cmp enter jno or aad add or mov (bad) mov push lock mov mov (bad) dec or dec out jg inc xor int enter or pop rorb stos jmp inc adc pop sub (bad) (bad) jp xor sbb adc inc inc cmp sub xor dec push and xor push aam and (bad) mov mov rorb mov (bad) push jne cmp mov cld mov xlat dec (bad) lds aaa inc movd pop shlb ljmp je int3 jecxz cmp rclb out sarl (bad) outsb pop int3 (bad) jmp jmp cmp je push mov pop je lret fwait insl pusha mov cld jb xchg mov in push adc push adc fdivrl sahf ja out les push (bad) mov jns repz lods push mov fucom jns pushf xchg push mov mov mov cs out iret insb mov push test mov mov dec and jle sarb cmp sahf xor inc test les mov ds outsb in into jl sbb cwtl test repnz cmp mov adc push pop xchg fmul xor dec add inc add movsb cmp mov clc sbb outsb daa adc hlt push aam lock mov hlt call negb or fmulp mov pop lock andb out shrb out int3 cs enter jns cld les mov daa mov loopne jns mov mov lods das out sahf fwait out test movsb mov out mov pushf mov enter nop mov pushf mov mov xor mov pusha test and nop notl dec add or icebp loop mov pop jp push outsl sub mov les xchg jno xchg adc int inc insb lea and notl jge sub nop add fcoms test or enter nop mov aam (bad) ss mov inc cmovs sub mov sub jg inc mov fs cmpb sbb lea mov pop or xor mov inc mov jno js jo insb test fs cmpl push je mov pop data16 bound cmc or push jp jae leave adc dec add or movsb add lcall gs adc stc jne (bad) sbb adc mov out inc pop sarl xlat xor fistl jns (bad) nop sub adcl sub orl nop mov movsb sti rcr xchg push clc jecxz repz lcall (bad) incb in and sbb xchg lret mov je mov std sar adc xchg or or adc mov mov mov add xor jecxz dec add nop pop and lods cwtl rolb es adc and leave pop jle xchg mov inc lea jbe out adc in daa fisubr pop (bad) pusha pop pop push cmpsb test pushf (bad) mov or push lods scas sbb shlb jge adc lea push mov sahf int lahf and mov cwtl cltd fs dec movsb mov jb test mov fs dec mov mov xchg dec sarb mov cltd fs loopne cltd fs enter movsb jb movsb lock sbb jb aam or fdivrs fistpl faddl loopne cmp dec in fmull mov pop in dec fstl dec repnz jo dec hlt sbb sbb pop cmc xor ficoml mov daa dec add outsl je fs bound vmread dec adc outsl fs outsb dec jb pop outsl jb (bad) (bad) cld pop inc insl jo inc jb insl push je pop push and enter dec insb mov push and cmp mov inc jae pop cmpl aaa sbb out loope inc dec repnz xchg mov clc ss sbb js ja adc ja jmp sbb fisub pop add adc (bad) (bad) push loopne in jo jmp jae fstpt add push push push mov xlat decb add push fmull adc sub jnp out dec inc push test push insb sub xchg and push int3 push adc dec ficomp cmp inc cmp add mov (bad) fldt jae xor adc fcomps and push inc mov adcl and in xchg (bad) xchg adc inc test adc mov (bad) pop in sbb ds inc sti mov addr16 rol testl fidivrl xchg dec jbe and ds cmp adc sbbl and dec add mov and in dec aaa lock lock rolb gs pop out or ds popa scas inc nop adc dec insl jo (bad) lods inc cs mov xor iret mov sub and jmp popl outsb divb pop mov lods int (bad) mov pop (bad) sbb mov push arpl in (bad) ds test loop mov insb insb jg xchg (bad) in add rclb inc inc mov std cld rorl jbe dec jecxz xchg jne loop call in and call add jmp in adc or das lods xor es mov call das es inc test stos add xchg or call add or fild inc stos shlb stos fild jmp adc les sub adc shll lods ss or aam cmpb movsb in ljmp jno out aad or fadds jg jecxz add dec je sbb cli imul sbb cltd std sti adc scas fcompl or aas dec je sbb (bad) leave adc int imul mov std add add test mov mov and fcompl lret hlt test pop stos hlt mov outsl hlt dec fsub lock xchg iret lock in mov xchg iret in or call imul jb in adc jae sahf arpl loopne cli es imul push and scas (bad) int3 or ljmp mov adc int xchg movb jp fsubr shrb stos and loopne or out sub add mov fcmovu xor mov or push push push xor mov adc jne inc imul pop jmp adc adc incl mov call mov or es or leave fisttpl cltd adc xor js sub mov nop (bad) jne mov mov in adc sbbl and in lahf loopne data16 aas mov roll mov add adc lods stos and xchg adc lahf ret sub jge xchg std int3 adc incl outsl xor or pushf (bad) xchg jne push pop flds xchg shrl pop jmp js das inc dec mov lahf mov pop in pop mov call das test pushf or inc add int3 fsubl push add pop loopne data16 xorl dec outsl mov test fs pop les adc push xchg clc jnp fnop jmp and mov lock popf or jl inc xor lea (bad) (bad) push call or lea push jno into xor mov test aaa cmp sub inc sub inc pop dec inc in mov xor mov jp sbb iret jae,pt pop sbb imul fimul (bad) sub in outsb xor ja pop in inc cmp fsts cmp mov cld inc push bound rcl (bad) or movsb xor push aas cmpb add push dec (bad) add mov inc sub or sub sahf adc repnz (bad) movsb fstps out xor inc sbb test or enter jne sub aas adc je test mov dec hlt (bad) leave loopne test mov cmp jae cmp inc pop aaa jmp add inc out sbb in loopne,pn nop or xchg in loopne rorb adc mov sub mov cmp adc pop or adc xor loopne dec mov sbb call outsl inc xchg push ret outsl cmp call mov jmp push fcmovnu dec adc (bad) jecxz push xor fiaddl add call decl push jns xchg dec adc jns pop jmp push or push add hlt and mov cmpsb bnd xor inc dec inc ret adc inc and enter jmp (bad) mov mov or sub or pop addr16 repz pop jne push sub cmpsb insl jecxz add or or add xor or jl movsb daa das lock getsec enter hlt (bad) xor push cwtl pop ds push iret sub out rorl fs sub sub or mov xor sbb dec adc inc (bad) aam sbb hlt pop aaa and fs xchg notb sbbb popa ret std hlt xchg xchg dec mov aad cmc xchg adcb sub (bad) jne mov jb clc loopne xorl lahf ret push mov lds xor fmul xchg xor xor xor pop push push data16 and pop or jecxz pop mov sub jne jecxz jmp (bad) lds in push xor fs popa add sub sbb es aaa push jecxz lahf in sbb or fbstp mov cmp jne dec xchg dec cli xor push (bad) cmpl fnop sub dec call pop add les xchg int jns (bad) mulb testl out sahf (bad) pushf mov ljmp cmp pcmpeqw pop or and pop or (bad) cmpb or adc ror dec pop dec sti xchg or nop pop fnop cmp or out lock and sub dec push add mov fstps fwait xor and adc (bad) cmp and fistpll jb daa sbb fs or aas in sti mov inc enter mov out inc es push jmp and cmp lret ret and icebp rclb cmc jl hlt jmp lea mov adc mov roll dec push icebp or data16 and or iret arpl sbb cwtl push or push stc movsb movsl jmp dec rcrl sub xor fildl or loop push sti (bad) std jg sub xor xor hlt lods or sbb pusha or mov push data16 sbb cmc pop stc sti inc cmp add and ja push mov xchg inc mov add cmpsb adc mov (bad) (bad) add inc jo add (bad) pop cmpsb shr in and lock lcall push dec lret out decl mov jp sub add outsl dec rcrb mov xor push sbb or shll mov loope cmpsl sub insl (bad) mov arpl jns xchg sarl roll (bad) iret repz or sbb pop andl dec mov es cmp ret rolb loope pop stos pop push ret mov push dec sbb aas cmpsb test mov xchg int3 rcrl lock clc leave mov hlt pop cmp pop mov test frstor push push (bad) rolb fistpll insl sbb push xor adc daa mov pop aaa and mov and pop call inc cwtl je dec je jmp outsl mov mov test push push ret icebp repnz mov test sahf cmp pop notl or push sbb mov xchg sub out cltd mov lret faddl ljmp mov (bad) mov fldcw cmp sub inc ret stos add mov test mov pop jmp sbb mov adc push push adc mov aaa or bound add ljmp or scas dec sbb jnp addr16 adc sub (bad) (bad) push mov mov in jg (bad) iret addr16 jb mov or add stos mov rcll jge xorb or pop pop repnz mov incl and orb fadds daa pop jb jne adc add leave nop pop enter push je test push dec iret and add push dec loope sub jp scas and adc fbstp addb inc sub add fisttpll push add cmp sub dec imul cmp hlt lock push jp mov mov pop mov jno test lds in cmp (bad) (bad) aas orps add fisub ja out add or jb sahf negl jb cmp cmp jns imul pop mov dec mov push and or push call pop lcall lods sbb adc out sahf xlat sbb and inc dec nop sub push add sbbl imul adc fs enter addb and mov or adc ret (bad) sbb push push or sahf add out pop sbb add pop xor lret pop aaa test imulb stc xor aaa sbb mov jne cmp inc or and xor push in push inc add push add and or or (bad) clc in (bad) dec lret sbb xchg pop jmp test xchg push pusha ss jmp dec call hlt mov fnsave add xor or sbb add (bad) mov dec xor fsub hlt clc test and scas add cltd sbb call adc and add loope call insl rorl in sbb adc xlat (bad) add add (bad) sbb pop xchg xlat pop push nop inc lret inc add out sahf stos shl clc push push and fcomip cmp push hlt push pop pop imul jl popl mov mov clc lock dec jns,pn adc push adc in push cmp or and inc es sub sbb push lea mov shl push sub fmuls xchg js daa jp sub or nop dec xchg jl jge push and test push pop xor jl xor jno xchg mov mov or mov cld in sti ficom xor dec or push (bad) repz mov jb lcall add mov pop insl mov xchg das bound or pop mov mov inc sub push movsl jmp and xor and icebp test pop in add inc out sub loope sbb fsts rcrb dec lret orb fild add sbb es dec jne or orb je test cmp sbb test ss (bad) loope add lock pop jg dec aaa mov add nop or sbb mulb dec and mov mov jp aaa fs pop out xor inc mov out out adc jo sub pop inc cmp into mov add and or mull push sbb or popf push push sbb or xchg es jns xlat jp andl sahf shl cld adc cltd dec mov cmp jp pop xor dec pop gs fs inc or mov pusha iret mov sbb inc unpcklps add push push inc testl jo mov mov pop jb push incl add insb (bad) add rclb aad cli sbb sbb pop cwtl push or pop pop arpl pop push or inc call out into pop cmp dec pop jb lret fwait idivb mov inc (bad) push sbb repz imul cli push inc and es (bad) push mov sbb dec and sub fildll pop vpunpckldq adc insl cmp jne adcb xor (bad) pop dec sbb inc mov jne and mov add icebp sub jmp cmp or sbb xor leave add or clc push add cwtl icebp cmp inc dec call mov mov pop enter add add pop adc test sbb cmp pop (bad) add aaa int3 negb or mov fstl and arpl mov clc jne add and pop pop push push and add add adc jns (bad) push xchg mov into fidivrl adc lods mov and cltd cmp repz jne test arpl je and xchg add inc loopne mov jo and fldl mov loopne fsubl lods lahf (bad) push inc movswl fidivrl fildl sub xchg push mov sbbb in cld rorb sti popa fildll inc dec das fsubrs jmp aaa call xor imul mov pusha out pop rorb push mov out fstps popa push outsl push jge lahf xchg ja jns movl cmp daa out add push sub sbb scas loope sbb and fsts lods js sbb dec mov cmc inc inc fisubrl in icebp sub test jg mov mov test push push insl inc icebp sbb adc lods loop and pop imul les xor cmp adcb in mov push fwait dec es push cmp repz push adc aas dec (bad) repz jbe pop daa jb mov cmp fwait scas lds cli add fstp aas xchg fildll mov push imul mov hlt fildl add add mov outsl add lret fwait pop xchg add in cld aam movsb dec inc pop inc in adc loopne xchg and jo (bad) xchg and push and adc lcall popl int3 ss xchg dec sbb and loopne cmp shufps xor fildl pop pop rorb add inc push loopne cwtl or in dec push push int3 dec data16 adc inc bound push movzbl test push adc mov lock mov xchg cltd pop or jns (bad) adc mov addl sbb and jns out push inc out (bad) push fnstsw shrl test ret sbb mov pop inc cmpsl pop mov mov (bad) xchg cwtl nop addr16 add sbb mov addr16 mov push dec pop xor push xor push addr16 loopne or xchg lods and daa or pop mov pop mov mov pushf sbb mov push mov mov cmpsb sub pop or lods or sbb and adc aaa cmp aaa sub es xchg or or fwait pop cmp js mov pop sbb pusha adc add sbb das mov popa mov push nop and lea repnz imul fildll and xor push push push add cmp sub inc jb jne (bad) ds jge xor adc xor push mov in incb push dec jb ds jae xchg cmpsb mov xchg out imul out jns sub inc gs iret cltd push sbb or in or fmuls leave mov je fistpl sarb in rcrb out add push pop or mov insb sbbl adc mov add add add xchg repz inc iret pop or in pop pusha inc pushf jle out vpunpcklbw pop inc pop pop insl fwait idivb jge mov negl into jmp or test push inc and jae push (bad) lods pop mov jnp xchg pop fcmovb cmp dec mov lods movsl movsb mov cmp mov pop pusha mov fwait pushf or xor add inc bound inc jl in aam push dec mov data16 or mov outsl dec push in mov inc xchg les and push mov mov add push dec je and ret insb ss gs clc outsl or xor mov inc lock outsb int3 movsb ficompl movsb hlt add aaa cmp and pop xor fimul (bad) out (bad) and lds push mov mov dec inc inc lock dec (bad) mov sub loopne push mov imul fs xchg pop je push xchg and xchg test mov adc sub aaa repnz xor cmp dec and in or lds push popa xchg dec loopne sbb inc setae adc xor (bad) push shlb add (bad) or cwtl out lret bound pushf andl xchg jl adc in in nop (bad) xchg in psubq inc mov adc cmp roll sbb cmpsl stc cmp mov clc out insl lahf es and rol jns js mov and nop stc pushf sbb mov sub jl nop scas ficom xchg inc mov test xor xor clc push pop mov mov fucomi push mov xor fnop fiaddl jb pushl add pop cmp xor dec push cmp shr loop dec mov into push or or xchg in nop jbe jl fsubl adc xor nop or fsubs dec cwtl aam aaa aam in (bad) shlb sbb ror call inc lcall test sti int in insb jo insb xchg push loopne es mov sar cmpsb cmp shrb mov mov es jnp sbb movsl push ret add and bound inc jae repz imul push lret jo out sbb xchg mov lods orb in daa (bad) mov cmp push addr16 shrb cmp popf or and dec enter popf movsb mov aad mov sbb inc (bad) and jo (bad) xchg jno jmp nop pop mov aaa nop dec mov and sub or cld adc mov inc mov ret or inc mov and movsb push or and cwtl or pop mov icebp mov in and inc and jmp dec push push sub mov push mov jb mov pop sub inc fistpll in sbb sub and (bad) sub push jb test sub push in push adc xor sub push adc imul or out mov adc arpl mov test push lret xchg cmp push (bad) das xor out cmp push inc outsb mov (bad) in sub sti jne sahf notb pop (bad) repz push js xchg scas int and mov push aaa push es xor xchg xor ret ret lcall cmp ret cmp in es nop nop in loopne add add dec add aaa (bad) fdivs cmpsb or mov aam ret test xor dec pop add cmpsb add enter add les (bad) add outsl dec or sbb jnp pop add dec das pop rcll push idivb iret cli sbb cs sahf imul daa lods leave in fcomip push out push and rorb push rclb jbe aaa aaa mov mov cmp mov mov jne test aaa or cmp pusha sub aaa test cwtl xor movsb aaa movsb xchg je and jno or jno mov aaa cwtl jno imul xor outsl cmp jo aaa dec mov leave jno nop ja mov test sbb mov cld sbb dec add test and xchg add es repnz test sbb nop (bad) int3 loopne mov nop pop inc fnop loopne es add push inc or push nop gs lock in jge adc nop cmp shlb adc push sbb fdivr or bound ror adc or or push ss cltd push cld inc insl int3 jmp cmc or cmp mov xchg sbb jne or xor add sbb inc add inc stos out dec iret fisttpll lret ret push mov xchg push stos sbb pop lea sub leave and outsb inc insl or enter inc add and or add add push push xchg push shrb outsl (bad) cmp sbb ret mov pop jmp movw es lahf dec aad cmpsl lea add lahf xlat mov sub ds adc pop aas jg cs sub mov mov add push adc scas (bad) sub test push dec bound cwtl or push and push push mov daa or add nop outsb jp xchg dec sub inc dec xchg and test fwait into pop mov imul daa xchg and dec or (bad) nop bound lahf push sbb lahf pop sub push pop mov dec fwait cli (bad) push (bad) or xchg hlt test adc adc mov lret dec or leavew aam fadd inc or push (bad) xor bound push jns push cmp pop cmpsl xor (bad) fistpll iret ja dec mov mov or sub mov dec lea cmp add or mov pop push push mov mov xchg push je dec je cli mov add (bad) mov adc mov jle or and jne sbb aad dec adc sbb cmpb cmp mov cmp jnp or (bad) jns sti cmp popa jle inc pop js dec sti add xor mull pop adc sub sbb inc jnp push inc fstl (bad) or sub mov cltd (bad) mov rcrb adc adc inc out cmp inc out xchg test xor cltd pop and outsl mov fldl pop or sbb jbe mov dec fildll add fcompp test (bad) xlat fisub and xor cmp mov rcl out mov jnp je sbb fmull aaa aad push push je test add inc dec fsubr scas popf or jle and test xor pop add sar jg sbbl shrl adc cmp ja or imul repz out cmc cmp rol iret sbb mov btsl jae loopne int inc and pop hlt (bad) jnp and lret push pop (bad) xor shrb dec add adc lock fistl sub sbb push jmp inc vmptrld cli (bad) sbb movsb xlat roll decb test xor jecxz add add adc mov mov jmp add nop push or movsb pop push data16 insb add and cpuid sahf adc adc mov cmpsb test adc insb pop mov inc dec cmp adc je add pop sbb mov enter in aaa add xchg ret int3 push out scas scas cmp jnp fdivrs es add sub mov adc xor sbb int3 mov add mov adc imul xlat dec add xor push test sbbl cmp or add fmul sbb ret ret adc addb cs ficom add add push rclb sti repnz jo xchg lret in or jb add je sub loopne mov stos mov in sti andl push sbb pushf jae gs or push mov push insl lret mov imul mov mov enter ja cmp stos inc and mov inc inc push push push xor call les or or enter add or insb jmp cltd xor push and bound pop outsb fwait adc incl mov nop jbe jb sub sub fs mov mov or inc insl jo jns pop xorb add mov push insl popa and daa adc xchg das xchg insb gs (bad) (bad) pop inc outsl jne xchg jb outsb arpl adc cmpsb jne add pusha fadds insb push addr16 inc add cltd pop orl (bad) pop imul lock (bad) push outsb imul inc arpl dec rol aas and inc iret push mov mov xchg test sub pusha and andl testl fdiv add jo pop gs push pop pop cmp data16 or cltd or xlat (bad) call xor sahf out mov mov push cld mov jno popa imul cmp cld mov sub out xor mov jo pop add push ret mov das xchg fld or je pop outsl imul push xor icebp dec test fimul or and inc inc stc push cld les in push xor repnz popl jns sub add and push push dec fbld push jmp jo cmp divb sar jle adc movsl or and cwtl and dec push jb lahf lock inc icebp add sbb xor dec movsb sub daa mov xchg rclb add dec push out fsts xchg adcb mov xchg insb mov mov lcall fisttpl mov push push ret sbb daa bound mov (bad) fmuls or mov cmp cmp addr16 ret outsb pushf and inc jmp sarb lret js xor inc push jp test jecxz push adc jmp sbb pop into cmp fild insb hlt pop divl cmp push icebp cmp add xlat dec (bad) je es adc ds xchg dec in inc clc xchg scas test (bad) pop out iret adc push ljmp add inc fmuls xor xor (bad) (bad) sub mov movsb sub push or adc ret mov mov outsb imul push jmp scas inc xchg es mov mov adc cmpsb cwtl adc push add sbb nop (bad) and inc mov imul pop sbb jle sbb push dec dec cltd add mov lods add daa mov test jae hlt frstor test or jg incl xor cmp adc pop js and pop jbe add lret clc in (bad) sarb jle aam inc inc ret xchg sbb cmp in mov setg inc mov mov dec je in push fnstenv sbb in loope inc dec jbe es lock orl daa push inc inc jo adc pop ljmp jmp inc xor jp call (bad) cmp or mov loopne mov pop enter call (bad) adc sbb add dec jne mov jb xchg lock or dec and test xor mov add xlat lahf incl add add aas shr dec or loopne mov rolb adc ror xchg loopne inc insl add into cmpsb jecxz fldt subl repz outsl jnp mov or mov in test mov sbb or mov sbb mov test cmp mov push jle lods sub shl push push sub add pushf pushf pushf fmull scas scas nop xchg pushf pushf pushf pushf xchg xchg xchg xchg pushf pushf pushf pushf xchg xchg cwtl cltd pushf pushf pushf pushf lcall pushf sahf lahf addb addl xchg sahf mov mov mov ficom aaa mov fsubrl bound and pop mov lock push mov push add test js jmp mov or adc xor call adc sbb test jne mov jmp cs dec xor cmp jle inc movsl rolb xlat inc je sbb mov add faddl cmp mov pop push xlat sub push add mov (bad) test mov pop inc gs push or push push or add loopne fbld sbb mov call jl or fs mov int3 cmp je mov dec and add adc add and jmp fsubrl enter fbstp loop mov insb sbb adc (bad) test out jne inc pop xchg push sbb mov sub sti imul or stos mov push dec inc push or sbb pop sbb lcall or bndstx (bad) jge or add ss cmpsl push mov mov or add aas pop je out mov (bad) in add decb ja add test adc sbb or or movsb push add add jae es or movsbl dec xor or pop (bad) jle add sbb xor repz into adc ds pop in push (bad) (bad) (bad) jnp adc add cmpb ja jb add xchg out testb call (bad) out mov into xorl mov int sub lea adc ss add call push call or mov mov idiv jmp dec or lods cmp lcall (bad) mov addr16 and pop xor les faddl or cmp inc adc jmp add clc jle mov call push dec inc inc sub xchg xlat out loopne ljmp push icebp test push popa and ja lahf sbb mov or or adc subb das popf outsb or or mov outsb hlt stos inc push call add loopw add or lret icebp dec pop pop (bad) xlat mov in adc lcall enter lcall fadds ret addr16 cmp (bad) xchg cmc popl ljmp movsb das mov aam adc xchg cmp andb xor iret inc jo cltd lods pop add xor dec sbb mov sbbl inc and jl mov test fdivrl cmp cmpsb (bad) dec mov test iret repz out stc fldt cwtl mov test dec adc aam loopne repnz lods sub or cmp or mov (bad) and pop lret add lret pop adc or jge jecxz xchg adc (bad) aaa or iret jae push jno pushf mov push add mov fsubr pop sub in ret push inc push fistpll pop (bad) sarb xor sub out add loopne lock cmp jmp (bad) inc shll sub mov add jmp or jg or jecxz scas ja sub pop push mov add jp js jno pushl jge lret xor add call js in aam mov mov aaa insl cmp dec test jae jne sarb pop adc pop jecxz adc dec or dec aad mov jbe fnstcw sti fxch ja ficom sbb push dec adc nop or inc fwait or push call cmp sbb mov push pop iret popf clc jae ficom pop mov or test test jb or cmpsl addr16 ja in jae adc (bad) mov add push inc insb imul cmp dec mov imull xor add inc pop dec gs and mov imul push fldl (bad) gs inc insb popa push jae js or adc imul fmulp lret fs outsl test nopl addr16 adc dec outsl sbb test (bad) shrl cmp outsb insb jns mov cmp sbb inc sarl mov pop ss push mov inc je insb sti in cmp mov cmpsl or dec imul lock stc xchg test or or xchg test pop push add dec or js add xor jo out aaa dec in or cs dec ret mov jmp jns ljmp sub cmpsl outsb xchg inc jne xor (bad) or add jbe dec or push add gs inc popf mov sahf xor push add mov pop ds repz adcl insl outsl mov daa pop leave nop nop call (bad) out adc and lock push repnz inc push or jmp data16 ds insb sarl mov scas jl,pt sub daa or cld sub xchg cld pop push mov out or lods nop push push scas and ds pop mov mov scas lods sbb inc and inc sub cs sbb nop or ds or mov sarl out mov cs mov into dec imul scas mov (bad) int3 jae adc add pusha pop push inc jnp loopne imul mov je xor mov insl jo push mov jb aas sahf xor lds dec sets jb or mov das pop and add jb mov mov push xor out sbb inc shrb call (bad) lock aad aas and push orl iret mov pop scas push inc inc call lds mov pop push pushf cmpsl sub fcmove pop test mov add js fstpt xchg test add in inc loop decl adc pop popl test (bad) pusha adc adc ud2 ret inc pusha or fimul adc sti push add mov mov dec aaa mov cwtl mov pop add dec (bad) fildll inc aaa and dec pop shr xor and imul fucom pop xor cmp mov loopne inc pop inc test pusha push outsb pop stos mov push addr16 cmp movsb push test jns icebp add andps hlt test xor mov loope pop jbe pop sub inc imul rcrl hlt or pop out pop xor lock sbb mov sti es push mov push mov test call mov push fistp rolb sbb (bad) cld (bad) sti mov mov or lea pop and rorb or adc dec pop cmpsl hlt cld sbb dec and lods pop sbb xor inc or inc or adc incl xor pop pop jle mov inc push (bad) cmovns sbb popa jo push add pushf jae push rclb sahf out testb fisubrl outsb dec or pop je scas sub rolb push adc (bad) and nop xchg mulb bswap and push rcrb pop fwait in pushf sub sti mov js movsb (bad) pop pop add pop shrb xchg push fsubrs clc xor mov xchg test add aas cmp imul and scas pop sbb sbb imull test les or aas cwtl pop pop daa xchg bswap mov pop je insb popf ds cmp adc push dec dec push mov pop les xor ret divl aam pop jo push dec jb dec mov lahf pop lods mov lock clc mov push dec cmp into pushf jle mov mov imul pop and pop mov ja pusha jg add lock xlat leave data16 imul pop movsb cmp push jl push push pop xor cs sahf pop sbb (bad) pushf push pop add mov inc leave mov push dec mov cmpsl cld daa or or inc dec ficoml in fisttpl popa push pusha add mov mov out inc cmp sub mov xchg xlat decl incl mov mov add idivl adc xor movsb dec stos negl sub inc divl jae push (bad) repz xor add push leave sbb push mov (bad) repz jg or enter or adc enter sbb sbbb and rcl xor inc xchg in in inc arpl lcall cmp out leave xlat in add adc adc clts sbb pop mov jnp adc push or sahf and inc outsl mov cmp sbb mov inc push mov iret cmpsl movsb or neg push and scas out cmp daa jmp xchg into add or fs push push pop lret rclb (bad) mov gs mov rcrl mov scas pop push lahf (bad) push test pop sbb cmp daa mov (bad) lahf jbe inc fdivl mov push pusha mov xlat sbbb mov lds push ljmp cmp outsl pop inc js in add cmp inc ds add imul fmuls fsubl data16 (bad) xorl mov and jo add mov inc inc mov xchg xchg jno cmpsb jecxz adc outsl mov sbb fsubs or inc fsubrs movsb adc movsb cmp inc aam iret repz mov or push fnstcw cmp sti add pop sbb xor (bad) int dec (bad) inc push in push add cmp aas lods sbb push out (bad) fmull pusha push xchg sub lea xlat dec out inc pushf out mov mov ljmp fidivr scas jbe push inc push push (bad) fsub mov icebp (bad) fist add (bad) stc (bad) clc push push push push push push xor stos sahf icebp push (bad) fdivrl out outsl lcall adc fucom jns fdivr in stos push in pop fcomps dec lds and or dec sbb and add xchg xor inc (bad) push mov nop jge add and or pop add test push popa lea imul out mov push push enter out add fnop aam pop inc push arpl mov cmp mov aam faddl push mov jb lock (bad) insb cmpsl loopne inc inc icebp call or cmp pushl adc pop push aaa pop sub adc or pop push sbb push dec fs xor jb mov popf and sub sbb push push push inc inc push dec mov rclb gs cmp inc mov enter pushl add (bad) mov pushl adc add ds int3 insb in push inc or add jb jne (bad) push scas ds ret cmp jae mov jne or insl xor xchg imul jo in push je jg mov dec cmp and (bad) rcr xlat bound fsubs pop je out xchg pop inc or mov mov or mov scas loope or pop or adc stc add pop sub xor daa test (bad) fcomp es imul jmp sbb adc rorb xchg (bad) add jg mov stc lahf popa jge (bad) fdivs rclb adc and pop or and or lods or sbb pop jl les lcall mov xlat leave loop jmp or mov or notl or mov add and into (bad) xor clc mov xchg cmc test inc pop adc adc xchg push jne outsl push loope and pop sbb push fadds pop mov cwtl mov jl jb or push inc or (bad) lds rolb (bad) mov cmp jne pop add dec jp hlt push dec mov xchg outsb jecxz mov mov enter push js mov (bad) into mov movb rol push xchg mov sti mov loope mov sbb test ljmp outsb in push cltd popa insl loopne popf out cmp and and pop xor repnz test fsubrs push mov cwtl div movl dec imul adcb add xor imul imul imul mov loop and xor push sbb in pushl ljmp mov mov mov push push fisubrl ficoml lea push mov ds cmp push pop mov fcmovbe cmp inc adc shll push scas cmp push lea push dec subl mov jl inc push cmpsb xor in (bad) mov lea test xor mov and push in sbb rcr nop sub xchg mov js js nop dec popf ss inc xchg push and cwtl dec mov dec pop xor pop jno adc xor mov pop xlat add inc hlt mov call ss (bad) sarl push lcall add xchg pop or jl dec sbb cmp pop push rorl rclb xlat xor push push mov jl inc push call fwait xor xor xorb inc pop sbb lock jae sub cmp push xor mov (bad) jecxz (bad) (bad) out aaa icebp dec call rcrb lahf and pcmpgtw push adc push xchg sbbl aaa pop push lret out rcr mov mov aad jge (bad) in int loopne dec and (bad) mov outsl push sarb les pop xor call insl mov inc add dec aad inc ja lret aas hlt xchg lret push into or or add add xchg je ret mov mov adc out xor push enter call add rolb pop xor addb inc mov jno dec dec jae sbb mov mov adc cs inc xlat mov adc mov pushf icebp jo cltd mov inc stos pop jne sub cmc or pop mov lret pop inc and cmpl inc push add adc pusha ret pop jbe repnz sti xchg jne pop push push cwtl hlt orl test sub pusha push ja jne sahf inc pop jnp lahf xor jno enter push inc cmp jbe pusha nop xlat je add push jae outsl xor sbb jp in dec cmp jns jmp jmp cmp inc push mov cmp push shll xorb ss (bad) mov test mov ja lds and popa fs (bad) pusha sbb push inc push lds pop xor add sub sub push jae les dec add dec rcrl or or or add int3 ja rorb mov and pop xchg insb stos fnstsw cmp jb push leave bnd scas push hlt add bsf js cmc add add or add cmp sti and cmpsb loopne sbb ret add and lea sub dec add push jo push pop dec cld mov jmp jmp aad ret add mov in inc lret sbbl lock inc push cmp jne sbb call sbb or sub scas call xlat add cwtl pop adc fldl loopne push mov in and pop dec mov ja xor cmp inc cmp xlat cmpb lahf pop shl and inc aas mov subl sub mov rcrl or cmp push jno jecxz outsl or push mov les adc cltd aam adcb (bad) xor xor pushf dec je xchg push fnstenv xchg xor cwtl or (bad) mov or adc insl add test dec nop sahf mov jl aas add mov sarl sub cmp mov out lcall add xor add xor outsl js leave mov push or mov leave rolb insl and inc or leave dec (bad) cld xor xor cmp into je mov jo je ss rorb int3 push sbb fdivrs push inc lods or les inc or dec in add sbb fldl ret add fnsave add adc adc adc fs arpl shlb sbb jecxz mov push push mov inc lock lret sbb ljmp (bad) or cmp call mull inc xor adc or das jae jae jg lock ret inc adc cmp incl adc push int3 or leave push add mov or adc das punpckhdq add (bad) jmp fisubrl rolb jp sbb inc decl sub and jge mov rcll mov lea or mov mov icebp push push inc sbb shrl inc jp push mov loop or aaa pop sbb jb inc mov (bad) push jle mov mov test in pop pop leave outsl jle outsb inc dec add imul inc int sbb inc sahf add flds ljmp jmp inc mov lock pxor jmp xlat add mov aad mov jmp inc cmp jge idivb ret adc jne sbb leave es jb mov pop stc std jle push xor jae push push loop adc or push and jecxz mov cmp je scas sbb mov popf jecxz fistl and or (bad) dec (bad) sub xchg lahf movsl add add cmp push mov test inc mov movsb push pusha inc in sbb popa movsl (bad) or shlb enter movb fabs sub cmp sbb sub loop dec lods syscall xlat pop sbb repnz lock insb adc mov xchg inc push addl push in push call mov jg dec movsb dec dec inc pop lar push and adc or fimul inc and adc outsb inc and in popa jne setns cmp enter add mov aaa add or cmpsb fwait (bad) dec fwait in dec jo mov mov fs cmpb das push enter inc jne test jmp dec add add or pop fstpt dec or repnz (bad) jnp dec popa adc push dec adc sbb aaa scas fcoms or sbb in pop cmpsl hlt and push xor push push or jo outsb ljmp push (bad) popf add lcall clc dec jmp hlt cmp dec cltd aad movsl cmp sar mov shl sbb sbb subl shl cmp je pop (bad) in mov fcomps adc mov mov aam push es push (bad) lds mov enter mov out aad push clc rclb pop add addb push add movd (bad) mov or je stos adc btr cmp jl popf jle inc adc jmp ret push jae add bt sbb adc loop inc inc (bad) sbb push js add lds adc je sbb cmpsb mov pop ja and lcall push cmpsl add aad ret adc sbb sti (bad) jmp inc cmp jne inc decl jne les mov push arpl and sub adc ret dec je movsb adc test loope rorl jne adc jecxz mov fstpl test or imul outsb inc sbb (bad) icebp pop call es add sub jns dec lock inc pop outsb imul es xlat push mov lret sub enter xchg ret mov ret test xor add cmpb inc cmpsb pushl js in mov xor or outsb pop iret mov aaa mov pop loopne mov and add add mov sbb inc mov mov lods xlat xor cmpsl xlat aas or mov pop pop popf rol push inc add inc dec fs push xchg and sbb lret fsubrs inc testb je gs push sbb scas adc sub daa push push adc ja popa dec popa movsb call sub xchg (bad) sbb push mov ja push pop adc sub inc lock mov sub xor push test (bad) ffreep shrl js push (bad) fbstp add pop cmpl add and out or (bad) jo cltd sbb xchg inc lret sub xchg xlat pop hlt sub cmp jmp test and in in std sbb loopne mov sbb adc mov mov lock divb jnp js leave xorb in inc sub in add adc pop and loop mov and lock jne sbbb jle mov int and (bad) in add js pop push fdivs outsb pop mov into lock cmpsb jbe outsl test pop or push loope (bad) mov test or cwtl out adcl or outsl cmp test dec sti jnp mov (bad) fucom and les ficomp repnz sbb aam test xor std movb dec ss lods pop mov sub test mov fadds nop mov cli pop xlat and js sarl add orl loopne adc scas and lahf rorl aam movsb lahf inc lods pusha je ret mov cmpsl mov mov jle es nop dec nopl pop jmp or jg movlps dec hlt jp stc jbe out bound xchg push int3 mov push xchg icebp fcoms lahf fwait xor or jo aaa or ja fbstp in mov add inc ds push push daa lods aas jl mov pop add (bad) push add inc clc pop mov or mov rorb lahf std or test iret push adc add addr16 cmpsb sub loopne push sbb decb test in xor loopne add add cmc dec movsl pusha outsl (bad) push (bad) mov lods sbb nop sub lea xorl cmp pop jb aaa inc call mov sub pusha ja and pop cmp dec cld loope notl dec jne jecxz mov and inc out jmp xchg iret pushf aam mov clc movsl pop pop ss sbb xor pop xchg in aad push adc decl sub sbb sbb adc lret xor jmp pop iret pop push adc mov fcoms dec icebp sbb or jnp inc (bad) loope addr16 mov aas pop call sub jb dec je jmp jb popf push fmul pop ret adc rolb cmc sbb add aaa inc jns fldcw cmp lahf data16 mov mov (bad) mov mov fistpll outsb stos sbb jmp xchg cmpsl lods cmp (bad) rcl inc and lods sbb out mov xor dec ja xor cs and dec add xchg sub xor inc loope in jmp mov mov stos (bad) (bad) xor pushf mov and push nop jmp cmpsl loope je add shll arpl (bad) jb xor arpl push xchg out xchg pop push push pop xchg js add in (bad) gs mov out test pop xor es add fistp mov sbb xlat dec daa daa (bad) dec clc rol mov repz adc jecxz lahf add popa add xchg and sbb clc sub test int push sbb mov pop push test jnp aaa loopne fldpi inc data16 daa mov mov sbb jmp cmpsl and adc out daa pop xchg cmp xor pop cmp cmp xor lock cld sbb jmp pop xor or dec jge shl inc aaa xor in movsl das add popa out jb and push add (bad) or xlat and jno insb test adc notl pandn lock nop aaa or mov dec sbb sub or mov xchg enter dec fnstenv sub int pop in (bad) sbb clc mov bsr nop daa inc lock outsb xchg cli mov xchg adcb jge lea xor adc test leave dec dec xchg mov enter lods or int pop and pop xchg (bad) xor xchg outsb out mov imul mov mov fcoml inc cltd xor jb and (bad) clc xchg popa mov sub iret rclb inc adc fdivl pop dec orb lods out push jmp xchg shrb nop loopne das xchg jno jecxz jnp (bad) fneni(8087 cs es dec xchg mov inc outsb or xor into lcall add push pop pop push add push fs mov stc lret fist in fwait pop call bound je adc lea pop mov in in mov mov xchg loopne add xchg push mov dec enter rcll pop sub clc icebp test pop fnsave hlt sbb or fdivl lret xchg (bad) add mov and xchg shlb or mov and ret sub in dec inc imul mov sbb into ja and mov test movsb rorl pushf add mov mov mov jecxz adc push test push adc push mov cmpsl cmp stos push cs or pop insl and xor or aad and cmpsl les sahf and push lret pusha in divps xor jo pop cwtl test sbb aas and dec push pop cwtl pop daa ret adcb add dec mov nop cmpsl push (bad) lock adc rcl outsb push push pop push test jl sub jmp add loop or inc fistp jne add sub in cltd clc bound add fs lods in jns cltd mov jae fdivs gs popf loope adc dec sahf rcll pop lock popf cmp mov sub and mov dec ja lods int3 (bad) push ficompl add add xor cmpsb dec pop faddp jle leave mov scas mov pop imull push out xor repnz js lcall dec fwait gs xchg mov enter fwait mov sbb pop xchg js je insl adc push pop das or xchg out lret addr16 sbb (bad) sub sarl ficom mov dec and std mov sbb cwtl pushf sarb in push lods or dec inc jmp fcom mov adc add add lret sub mov xchg and cmpb jne rcll add int pushf mov pushf leave cmp mov popf les clc leave push bound in dec sbb arpl mov and add pop es inc add add add cmp pop mov aas les cmp jne testb orb sarb xor sbb (bad) push xor add movaps jg push faddl adc std aaa cmp push adc sub lret out ret cmp iret or mov adc dec xchg shrb xchg mov inc sbb enter or mov jmp int3 add jecxz xchg movsb iret or into faddl bound in xor data16 andl pusha push aaa popf xchg out sub sbb outsb or mov lret mov rcll or sub xchg jmp pusha mull pop lea cmp fistpl adc or inc fidivl int movl subb iret iret (bad) xchg rorb (bad) je cmovno test pop cld lock dec rorb mov mov and xchg popa les lock inc daa clc push mov (bad) dec ret push cmp aas mov or testb shr sub ret (bad) fs add or dec test lret scas or add repz rorl mov adc sub cmpsl out sahf inc fisttpll (bad) mov push insb push adc aas aam sub add dec push sbb pop lret leave sub (bad) mov mov roll push scas pusha inc mov push mov or (bad) test add add in xchg jle cs sbb xor dec lock or orb nop and mov push fdivp inc add jl (bad) insb sbb mov rcll dec rclb xchg cwtl loop jl and test cmp pop add inc hlt shr out cmpsl inc shll inc insb or and les xchg dec (bad) jg cmp (bad) jl and add divb mov or or movsl movsl (bad) jge sbb jle mov and xchg pop nop pusha hlt jl or dec sub push pop add jb mov sbb adc or sbb enter or push dec and shll inc pusha in clc lret or sub dec mov rclb inc push jge or jle or addb dec out push add arpl adc shrb push sti je aaa add js lods xchg cmc rolb fisub (bad) pushl inc mov scas insl add insl repnz call insl fnstcw pusha jb mov xchg (bad) dec cld push test lahf movsb cmpl cmpl xorb not pop pop adc and and popf or jle mov jne xlat add add stos ss add (bad) adc (bad) mov jg subb in inc dec stos cmpsl push out rcl cmp jnp jbe mov push add hlt aam leave add std fidivrl sbb xchg test (bad) sahf mov cmp dec in bound xor mov pop in movsb push daa jl push push push xor xor mov sub lea push rorb es ret jle or mov adc or add (bad) repz (bad) xor int xchg fsubrl adc jb cmp add jbe push or addr16 aaa repnz data16 or fucomp sbb jl cmp pop fistl or add add push push push mov dec xchg fsubp repnz sub push mov jo aas mov sbb in testl cmpsl movsb mov add gs movsl pusha inc mov rclb mov mov mov and pusha push call arpl sub cmc (bad) sqrtps push push sbb push nop popa pop mov scas test in faddl cmp xchg dec out mov cltd and push mov push pop sbbb dec inc push add movsb push xchg mov sbb mov cwtl mov sbb faddl dec sbb stc and out inc loope cmp mov imul sbb test sbb xchg jge,pt pusha dec jns jns add fs jnp jmp mov in cmp inc lcall das in adc rorl jge fs push imul sub in cmp mov pop cmp xor fdivrl dec mov add sbb call or xchg or mov test pop jae sub ficom adc dec les into pushf icebp or inc fisubrl or rol out int orl je dec or adc push or push rcrb int3 outsl (bad) or orl jns js (bad) fwait sbb (bad) jne rorl or lock mov movsl sarb add push push fdivr mov dec or fmull mov ja fwait dec mov int3 cmp jge xchg sbb or loope mov lahf cmpl lock push enter or inc adc or inc and push jl xchg cmp je sbb jp jne pop mov pop push adc movsb sbb mov andl add xor mov in mov mov test cmp scas bound or cmp xor push (bad) pop sub jnp jle or (bad) test and mov ljmp push sub (bad) dec adc inc xor mov adcb mov mov scas into mov lods or enter in push xor mov adc and push lea push xchg pop rcll out ds dec mov xor adc or out pop push loopne xchg sbb pop jg outsb inc pop shr adc pop (bad) pop test lods mov outsb insb add inc ret mulb sbb jmp daa das rorb xor push mov dec sbb xchg scas div or cmp push daa mov pop jae pop ja jecxz mov pushl push push jb jo imul mov scas out dec scas test shr mov out cmpsl popa mov sbb mov js movsb inc cmp dec push or adc or movsb mov loope xchg sbb ja fmulp mov jne,pn fs mov sub mov lea lret xchg test push inc sbb ret dec pushf push cwtl mov dec lds rclb shl push inc mov sub pop test faddl movsb stos mov pop add push aaa push (bad) rcr inc jp ret fsubrl push adc stos ficom in stos dec mov add scas mov pop mov inc jo adc or jmp mov jp ror ljmp (bad) or fdivr adc mov cmp xchg mull pop jbe sub mov ja mov pusha sbb xor dec mov push push jno lahf int jnp ja cmc push and jl inc movsl testb pop push dec cmp loop cld xchg sbb jge adcb out sub imul dec clc xor loop cmpb xor mov iret cmpsl divl cmp lea aam ds push (bad) xchg mov cmp sub pop adc xor popa sbb mov sub jnp bound mov (bad) jg inc lods jmp aaa push pop inc cmp jl nop add popa or shrl push lahf cwtl mov jno iret andw adc flds ret or sbb mov gs mov adc inc lods ffreep cmpl cs inc test fstps stc fbstp mov adc je aas or fnop inc pop in and jo mov fstl pop fidivr (bad) mov out pop rolb push add imul push mov dec sub add enter xlat outsb mov pop push or lret outsl xchg test mov add ret movsb jo pop mov xchg xchg add add mov sbb mull push cmp add cmpsb hlt ja sbbl orl test daa mov sbb das outsl test loope ret in cmp jle adc jae xchg faddp cld ret mov xor lock push loopne adc push inc adc push fisubrl icebp cmpsl arpl fisubr push jb out dec jnp pusha mov adc ds lahf push dec add push pop out and jae inc js adc xchg popa mov (bad) dec mov sti fmuls pushf xor push je hlt aaa aad add test cmp push cmp test movsb cmc div aaa aam arpl lods movsl xor cmpsl aam pop movsb push inc lret adc sbb pop pop inc andb push cmpsl stc mov mov rcl dec leave lcall (bad) and sbb and jnp movsl dec jnp and movsb cmp andb pop movsb push dec unpckhps rorb pop (bad) pop enter cmp push insl getsec in add push push or jne add nop xchg out loope pop mov lds pop cmpsl rolb repnz inc in jae xor gs in outsb inc or icebp jl mov div pop add mov pushf in (bad) xor repz mov xor (bad) sbb mov popa mov arpl in inc js inc xor fwait push dec addl xor dec clc cmp leave xor dec cmp movsl inc movsb leave loope push (bad) dec pop mov test jp clc cmp xchg outsl test mov adc dec add jne or je cmp xlat es dec jne and ja cmp sbb jp jge enter call rolb xlat gs adc mov xor mov jbe (bad) mov push xchg pop mov jmp pushl dec jne ds fwait ja nop hlt cmp sub mov je popa je dec jge fs add mov gs add mov out mov cli xchg cmpsb add xchg pop out ja push jecxz movsb xchg inc shlb dec ss mov das xorb ja mov inc push mov cmp push (bad) inc loopne sub loop cltd fcmove adc dec mov sub push (bad) cwtl dec test (bad) pop push pusha sbbb sub lods xchg sbb adc shrl loopne xor adc js lcall sbb fcoms dec cltd dec jle push mov pop and fs or test cmp pop icebp jecxz,pn in dec or inc add faddl jae push sbb mov lcall mov in mov shll mov mov mov leave mov repnz inc mov (bad) (bad) rcrl leave test les imul (bad) outsl adc and and adc mov cmp das fmull fcomi in cmp shll je mov inc push mov (bad) pusha push xchg push inc (bad) pop cmp push add (bad) cld (bad) cmpsl adc cs xchg mov jle pop jnp pop add jge decl int3 nop cmp inc sbb or pushf fs xor testl and aaa int3 ret rorl mov nop mov lock add dec sub inc call sbb mov inc cmp mov hlt lods nop pop test fxch inc xchg popf xchg loopne cmp jnp cmp cwtl int test pop repnz cli mov lods jno add in xchg fs lock int mov ret in xchg jo imul cmp in dec jno pop mov mov outsl iret jae stc sub mov dec sbb adc pusha add or pop dec sub push iret inc or test add sub mov das mov push and in addr16 js adc in inc jo mov mov push xchg (bad) in enter xor sbb and cli pop pop in shl xchg or jne in adc aas mov enter (bad) xchg or xor xchg jb pop ficoml pop or inc sub lahf (bad) repnz daa fadds push jp sbb addl in (bad) and sti inc mov mov pop or cmc sub fcoml sbb leave dec mov ret insb addr16 push divb (bad) (bad) mov je sbb rcrb lods adc mov cmp addr16 stc rclb adc pop pop push mov mov pop popf xor xchg pop jne scas and mov add subb in adc inc cs fwait add jae in adc pusha sbb push je dec dec rcr fisttp inc in push xlat loopne fnsave sub xor mov xchg sbb cmp push imul nop aaa pop adcl cmc pop rcrl setp sub fsubs cmp lcall outsb xchg xchg cld adc pop (bad) sbb sarb xor test hlt sbb lods dec xchg xor xchg push mov and xchg cmp mov pop loope mov out or setno pop inc push sbb and (bad) iret sub rcrb repnz xor ret imul js and enter or scas fs inc in cltd fnop clc ss js hlt clc sub lahf push add jbe popf jne and cmp push icebp and sub inc cmp (bad) fistl xchg (bad) cmp lahf out or sbb add dec cs mov adc mov pop xchg jbe into mov fs aas adc dec sbb faddl xchg cmpsl mov mov orl mov jns les sub mov repnz repz pushf stos incb inc inc add mov lcall idivl mov sub int3 xchg sbb and adc nop fadd daa jns xchg mov xchg movl nop clc sub addr16 mov ss test sbb add movsbl out lahf dec xor mov sub sub dec cmpsl daa cmp mov in insl addps xchg es out movsl adc test sti pop push aas mov adc lock jne mov and testb mov pop ret push fsubrl cmp xchg pop lea sbbl cmp inc jb lock jne adc mov iret into fsubl mov in xchg or call add inc pop ljmp or and stos clc (bad) cli shlb dec aad and jmp lret mov daa and xchg jae stc in enter repnz mov pop (bad) and dec popa mov clc cmp pop lods mov hlt (bad) cltd scas inc (bad) out or cmpb xor inc mov rorb lahf mov imul cwtl nop jle pop push xchg std test mov mov mov (bad) or xchg jle adc pop mov sub (bad) mov shl mov add and iret mov xchg sahf lcall mov jo je scas loope cltd lds mov lgs dec xor cmpb cmp push push fstpt pop sbb jno repz or push inc enter push test mov (bad) call rorb imul stos cmpsl and les mov push sub in and repz cmp fldl and push lret push lock pop lret add inc sbb sbb or sbb mov add xchg lret jne mov lock addl mov daa inc clc jge dec or pop mov rorb mov les add call or push dec sbb loopne fwait int sbb cmc call imull sub clc jnp lock lods xor mov test subl and in xor jl out mov mov int3 mov jb int3 inc daa cmp inc sbbl dec mov pusha ds ret jns pop sbb (bad) call insl or cmc xor xor lcall xchg cmp das mov rorl pusha and cmp imul imul arpl xor cli sub (bad) jbe or jmp xchg or outsl mov xor pop cmc movsb inc push sbb jnp mulb mov sbb mov pusha mov gs adc cmp addr16 mov loop aaa cmpsb jbe popf sub push fild jo fistl aas in ret lea jmp mov test jae inc pop dec xlat (bad) dec test cmp or jmp inc push jge mov imul (bad) ja test repz and mov and dec sbb xlat rcl add fadds or das xchg inc imul xchg mov rolb push inc add (bad) aam jno lods cld ja loopne sub add push sub mov cmp dec sti push mov fdivl mov (bad) or sub lar shl ja dec repz movsb aam sbb clc add (bad) fs cmp test sbb jle adc and je or call xor in pop rorb pop imul lods inc dec pop lds add xor push daa mov das xchg adc inc lahf add mov test cmp xor inc mov orl sahf pop inc jnp jl fcoms dec je push xlat or jecxz xchg pop ret shrl adc inc inc jecxz test mov (bad) inc dec or mov jmp (bad) xor stos inc xchg addl sarb mov mov fsubrp mov test inc test xor dec cmp and pop xchg sub jmp adc push rclb inc cmpsb loopne stos ret jmp lds orl inc inc ljmp inc outsl rcr aad cmp mov test mov sbb dec aaa sub mov std (bad) xor adc pop jne jne adc mov adc clc inc sbb push call push push adc mov cld sbb cld mov push sbb hlt xchg (bad) insl push jb cmp add jmp nop inc pop pop push jg sbb pop jecxz jae push les sub out shll pop and (bad) mov out push push mov (bad) roll add dec addl dec xchg mov adc les rorl jno or ja adc nop mov inc aam sbb inc ret call push sahf lret ret cld add push add ja adc and push je cmpsl mov jge shrb and scas shll xchg mov adc andl (bad) cwtl loope leave adc mov or (bad) (bad) jno pop xchg cmp xchg dec aaa aad iret jnp inc jns nop push pushf push scas rcl sti outsb repnz pop hlt push add iret rep pop sbb and inc push addl repz insl jmp sbb outsl dec pop pop mov and add xor dec ret (bad) mov pop les xchg jmp das (bad) je pop push adc mov sbb mov xchg or sbb or push sub popa xchg (bad) pop mov (bad) or cld xor (bad) insb push push ja hlt mov jl imulb ljmp pop and arpl mov ret push mov rorl loopne add test inc adc cmp movsl lock push negl sub sbb mov adc inc (bad) shrl mov inc push and inc push push pop sub sbb jge push call cmp jge outsb loop xchg test jg fcoms dec inc pop push xor dec clc lret aam xlat dec rorb rclb clc clc inc push sbb pop add inc call jmp in (bad) mov sub test (bad) scas mov cmpsb sbb dec and sbb rorb push add test je shrl ret jb mov jmp cmpsl fwait pusha vcmpsd jle,pn outsb add push sub aam or test ficompl jmp xlat call fiaddl (bad) jp (bad) mov pop cmp cld pop adc push test cmp inc bound not push dec movsl xchg inc push xor adcl sbb dec cld repz mov sbb rcrl imul dec enter clc lea test cmp cltd or xor pop inc movsb fwait clc mov mov inc faddl xchg xchg lea push aaa push out (bad) hlt dec jl push dec lret cmp stc jo sbb dec call inc das mov (bad) jg adc (bad) inc pop sub aas sbb add inc ljmp add xlat pop fucomp shlb in in and sahf push (bad) repz push lock das ja mov xchg pushf pop cs mov repz mov (bad) out ret jne je adc mov fnstenv int3 fcom movsbl jl and mov add in pop cmp lock mov push and mov sbb sub insl jg dec pop mov adc pop jmp ds insb daa pop fnop jmp push mov call cmp dec add mov movsb sub ret mov pop and lods xchg mov add add lcall sub or dec scas pop sbb sub or add add dec pop pop xor mov cmpsb hlt pop cwtl mov rcll fwait call mov ret mov psubsb add jle jl or sbb js push cmp int iret adc or movsb jl pop sarb sbb and add add add fildl add or jae fnsave dec je and mov cmpsl add mov xchg push adc dec lods lods (bad) dec xorl push (bad) xor push aaa or (bad) pop xor jmp cmpsb icebp inc jb movsl inc sub or lock pop adc push push cltd jge cmp je adc mov or sbb addr16 dec mov mov sub push push pop push movsl mov (bad) jo xchg add push pop dec cmp in test ret nop pop cwtl sub fsubr adc je sbb outsl cld popa leave dec dec ja cwtl gs std adc (bad) sti iret pusha jmp pop loopne sub jnp xchg (bad) ds xor push push push cmp and or adc fistpll ljmp rolb inc mov xchg sbb int or jl fucom scas sbb push push (bad) cmc insb sub stc aaa jo xchg (bad) test mov stc in fs xchg push cmpsl mov das enter imul lock loope cmp imul test push aaa cmpsl mov loope enter shrb dec roll mov jb pop (bad) jo add es pop push or dec sub jp mov fldenv (bad) sbb addr16 test pop sbb loop imulb movnti or push xor jl sub loopne,pt inc ret dec enter push xor lock jl enter enter and cmpsl pop (bad) imul das (bad) lock or cmpb sbb sub mov sbb and sbb loopne adcb test xlat push lods dec xchg gs add adc mov sub sahf jecxz cmp addb pop ret or mov mov or inc movsl pushf jnp lds mov push push adc dec loop or add scas rcrb sbb xor and pop pop inc jge aad aaa cmp or mov outsl mov sbb inc dec mov adc shrl nop or sub mov jmp mov cmp mov sbb cmpl shll add sbbb add pop data16 adc outsl aad mov jl popf mov add std in out add aas add sbb dec mov xor jp out add call test and call int3 push sub cmp or in lods aam mov xor cmp je test adc mov xchg jmp inc sbb inc cld inc sti mov pop shrb aas mov shlb sbb mov pop int3 mov imul (bad) pop clc sbb ret xchg inc push subl add movb loopne xchg cmp xor jmp movsl xor pusha ljmp push push jp adc push in sub js or sbb mov mulb pushf movsb lahf imul ss adc mov addr16 js or and lods je mov fmuls out pop mov inc or je sub jb aaa out push or xor dec test das mov sbb jne lret fisttp out jmp mov inc sarb in mov push xor sub notb movsb or fcoml into xor je pop xor add jg jecxz sbb orl test (bad) in inc pop outsl and add pop insl jecxz sbb sbb dec test mov add lahf xchg neg cltd add shl jo push test push and mov ret inc movsb sbbl cmc xchg leave dec mov and jnp jmp lods testb push add or and adc pop or sub pop ret sbbb adc pusha xchg push fsubs (bad) xchg pop lock jae lock xor mov outsb mulb inc lret sbb dec or movsl in sub (bad) jno fs push inc sub pop adc orb sub xor push mov or mov xor xchg or add xchg adc inc outsb clc inc sbb or fistpll stos xchg mov mov pop push sbb mov test inc add cwtl and data16 aaa daa rclb inc (bad) lahf dec push mov fmul js xor fdivrs jge arpl fiadd loope and jge push push lods add and in push cltd rcr es mov jmp cmp inc xor or add aam mov mov (bad) dec add add push outsl jo pop adc arpl jg fbstp inc and pop fcomps inc inc dec out cs pop inc notl arpl shr in decb mov xchg insb insl (bad) xor pop loope rcr lret inc cld das mov cmp jne les imul cs jne pop arpl adc push sub mov addr16 jne insl jae push orl loopne push scas imul and sbb push dec mov (bad) xor or pop mov sbb or inc mov xchg jle inc dec jne push fmuls stos das stc orb (bad) mov outsl call dec push aam mov adc mov inc lcall push out jmp sbb mov or fdivrl add mov jp daa adc dec sub mov push add or jb sti xlat leave test test xor add outsl loope aam and add (bad) sbb (bad) jg push dec cmp aam xor insb gs xor pop xlat je inc mov dec sub add andb jmp and sbb add jl icebp and nop jo cli ljmp data16 rorl cmpsb sub dec cmpsl arpl jns pop (bad) fist data16 mov jmp (bad) sub xlat jg cmp fs jae (bad) xor rolb mov mov sub add and add ja inc mov ja jge jne js mov xchg jnp jne (bad) pop mov jmp push add push mov mov fs sub or bound aam and aas (bad) jmp xor add cmpsl adc imull jge add out pusha adc inc pop inc or sahf icebp clc and ljmp mov mov rcrb cmp xchg scas mov mov cmpsl loope mov mov xchg add or cmpl push lcall add jbe test ficomp pop or push (bad) jmp out mov scas dec sarb sbb push pop out inc push add or int and lds clc cmp f2xm1 fsubl lock ja add pop pop cli add xlat cmp xchg repnz cmpsl rorb or pop adc (bad) cmp inc mov inc je dec push out or andl ret adc out add xchg inc push andl xchg adc jo mov int popa jecxz (bad) es lock sub cmp jne pop adc dec cmc fisubl loope test cmpsl wrmsr and sbb xchg push sub mov push sub or lods (bad) stos inc mov imul mov movsb iret xchg push in sbb lahf repnz int3 xchg or add xor xor add inc add addr16 jge sbb imul js sbb adc add dec movsb es inc pop adc jns adc jl add mov add inc lret ss jle pop sub test jbe (bad) inc sub mov fcompl xlat pop sti in xlat pop add adcl cmpsl add ljmp test shlb add movsl scas test aas aaa dec inc loope and inc shl das jmp or in lret popa jb insl into cmc lret popa push push or adc ret jns sbb aaa test inc add clc jne jbe dec mov xchg fcomi mov or mov adc call shrb cmp or cld aas jo or push and pop fwait lods adc scas fistl add fcoms push xor pop push ja imul inc lcall (bad) jne push and xchg xchg ret shlb mov cmc push sub xchg adc call push (bad) push outsb popf aad ja (bad) cld ja sbb mov dec xor loope push sbb loopne aaa jo in call bound mov pop sub and cld cmc or pop adc sbb push jp rcll push pop loope mov mov ds test jge (bad) push fwait mul test lock inc add inc sub bound movsl mov xchg outsb or inc sub sub xchg mov inc pop mov repnz or cmpl dec push (bad) shlb push mov and sbb (bad) adc shrb cmp mull pop loop jl pop cmp scas xor sbb inc pop adc xchg sbb or call xchg pop insb mov sub jo rcrb ret aaa mov (bad) clc insb or or lock js push test mov xor inc lock pop jp lea out mov pop or add mov push cmp inc add pop mov ret (bad) cmp fisttpl ret mov cmp dec test or jge jbe cld stos adc (bad) addb fadds orb arpl add xchg les movsb xor cmpsb sahf xchg jp adc rorb pop lock mov pop into inc pop xchg mov mov call lods push fst les loop mov outsl pop sbb jge mov dec icebp fs sub sub add cltd scas mov pop test push test sti dec xor cld xchg and push dec pop sbb jge lret loop clc inc mov and movsl sarb sub or mov xchg mov test fcmovb lcall mov leave and sbb loopne aaa pop cmp subl jae cltd or pusha dec loopne jge jge pop mov je sub ret in sbb in mov mov adc and jo mov sbb fild jno cmp jmp jne cmp cmp js cmp cmp jp jl cmp cmp jle pusha popa cmp cmp bound cmp cmp addr16 cmp cmp insb insl cmp cmp outsb outsl push push cmp cmp push push push push cmp cmp push push pop pop cmp cmp pop pop pop pop cmp cmp pop pop inc inc cmp cmp inc inc inc inc cmp cmp inc inc dec dec cmp cmp dec dec dec dec cmp cmp dec dec xor cmp cmp xor xor cmp cmp ss cmp cmp cmp cmp cmp cmp cmp ds and cmp cmp and and cmp cmp es sub cmp cmp sub sub fwait les cmp das in xchg std adc (bad) add xor outsl insl adc push add push rorb out sbb lahf cli xchg push xor mov les pusha mov es test sbb je imul dec push xor data16 mov and adc movsb data16 mov push fwait jae cwtl std add push nop test sbb repnz add jae je (bad) popa or xor push je insb cltd (bad) xor data16 shll enter je arpl adc adc gs dec and sbb sbb ljmp es dec jae xchg cs mov push ja outsb int sti not mov xchg outsl sbb push inc popa jae add imulb or adc push mov sub push mov push xor mov xor (bad) add insl inc insb idivb sahf scas push push push je into insl dec outsl jo je push inc cwtl jnp inc jns sbb mov pop jb gs and add fnstenv xchg sbb mov jnp pop xor aas mov es out loopne or and ret adc cli jbe imul jne dec pop mov xor push adc or dec jl jp ss cmpsb pop imul fidivl or xor cs inc outsl jb jae mov lock and ret mov and sub and addb je jbe push aad mull scas mov popa adc lds and sahf or mov jle dec mov ret imul inc and mov xchg insl add add sahf pop jnp shlb add pop or ret and enter pushf and nop inc rclb das call stos and lret add icebp iret pop adc pop mov sub xor cmp add xchg and aas je fcomps or inc push mov jmp in sbb ja mov hlt sbb push push dec gs mov sbb inc xor out daa mov sub gs nop or mov jns nop jl add out loop adc mov rol jl incb ret jae mov imull sbb jo cmp lds mov and sar xchg xchg add cwtl in pop add add add in xor cmp rol sbb ds adc ds inc je out mov jo leave stos (bad) sbb nop and scas push cmp (bad) repnz add and scas xor dec add or les add sub repnz xlat pop daa or inc dec or jl sub insb sub mov mov sbb push hlt loop mov or scas vaddsubps or and or int3 push or lods push out in sub add js cmp cld sub add sti inc add fcoml push xchg ret sbb es pop xor adc xchg add adc sahf xlat stos adc cli add and dec mov sbb pusha mov sub fstpl xchg mov sbb push icebp sahf imul sbb pop loop xchg push aas fsubrp cmp push sub sysret movsb inc ds mov enterw mov out cmp xor pop arpl or popl and enter add jo add mov enter pop in fcomp add addr16 dec xor dec push pop cmpsl jle sbb dec cmpsl lock out adc inc push add push xor sub imul dec push jl ret loop dec inc out ficompl data16 addr16 dec sbb adc push xor je jb add imul pop and lods adc rolb add outsb das pop xor or fistpll pusha or fsubs popa addr16 stc or fimull mov or push xor ss mov je es in bound ret nop insb mov adc in xor mov xorb cmp jg dec inc aam faddl inc push lret inc fild push lods push jle push inc popf call push cmp push fdivp inc sub pop push pop jle nop (bad) (bad) xor pop and stos clc push dec or sbb inc push je,pt js jnp icebp push xchg or insl mov aas lods mov push ret xor jg imul imul push outsl jle outsl clc push in jp aad loopne jl,pn fdivrs jle mov lods (bad) cld push orb push push jns hlt or insb jp pop popa adc pusha addr16 sbb mov xchg or cwtl sbb fadds or outsl outsb pop lock hlt dec int3 pushf pop push xor in daa jns (bad) pusha (bad) rolb addl xchg fcompl test fmull loopne dec jnp pop xchg addl xchg push add sbb pop pop sbb idivb add ret outsb or fmull add mov dec ret push jg call mov popa outsb nop xchg mov mov xor data16 add jne inc mov and push adc cwtl pop xchg and daa adc dec popa int or add inc std or push int in aas rol dec adc pusha jb push inc jo and cmp ret xor je sbb clc push add jne (bad) add xchg fdivrs outsl jle movsb or shrl inc cmp dec ret xor or adc cmpsb mov rclb or xchg sub mov into add pushw iret add decl sbb or int cmp std insb mov mov (bad) dec add shlb add ffreep imul jo dec (bad) lock sub (bad) test or cmp push xchg mov xor add sub and out pop leave adc and xchg pop jmp test repz inc mov mov loopne dec out xchg jns inc jnp fidiv js loop popa sarl je push std xlat cmp pop and xchg (bad) cltd fsubrs inc ja in fild es and incl and dec inc jle aad aaa addb pop dec int push adc in inc pusha pop sbb repz (bad) dec out adc pop dec mov or stos add in loopne pop adc call lock adc and mov pop out addr16 icebp ftst add inc call sbb jge mulb loopne jg mov mov test adc pop cld (bad) mov xchg into push cmpsl mov rolb or xor xlat arpl scas mov jle outsl lcall inc add pop dec insb in iret insb lods pop push xchg jbe add add insb xchg sbbl fsubs pop add push imul pusha aas pop xchg gs gs cmp iret lahf jne enter or arpl imul add pop inc and jns (bad) mov add ja imul les dec or mov push xor andb aam das cmovae gs mulb pop imul popf dec add inc push addr16 and enter je inc test xchg dec mov jnp das or jg js pop pop mov jg sub push mov and sbb imul sbb inc fiaddl or je pop rcll wbinvd movsb mov lret insb cmpsl xchg jg fbld pop imul adc mov aaa pop or sbb jge outsl inc push mov jg pop outsb jne and inc icebp pop xchg daa (bad) (bad) es iret or lahf sbb xchg dec cs push arpl mov cltd add imul sbbl das cmp (bad) out daa or push das or or or incl arpl push pop jo push mov push clc xlat imul adc mov push fld push adc pop psllq lcall negb decl inc dec inc push push inc push add inc inc inc push dec push xor notl dec inc dec dec arpl dec inc inc push adc inc push rcr add dec dec push mov push xchg mov jbe inc dec dec and out pusha addr16 incb xor xor adc (bad) notb (bad) inc inc dec inc xor fisubr notl dec sub xor mov mov sbb mov inc and push push push test xor ja mov pop xor inc inc push push push dec push inc scas (bad) icebp xchg inc dec push mov xor xlat pop add (bad) out push mov mov sub pop push mov cmp or jl add not cli inc mov or sbbb jne inc sahf xchg cmpsl add jecxz adc pop mov in test mov lods add mov sbb insb dec sbb add ret push jne inc xchg xor cmpsb or add add mov dec pusha push cmpsl loop,pn scas shlb mov xor mov and mov es stos push mov iret pop bound inc insb xchg test add addl add sti adc dec movsl jmp or js fmuls mov das outsb dec inc jmp incl orl clc sbb push jne test fldcw inc adc cs in jne loop pushf mov add xchg adc cmp push lock cli das xorl xchg sbb and or or add push sbb mov or stos cmp mov add mov in lret test inc loope mov pusha push ret xchg je orl in je or test push test inc sbb in fiadd (bad) rol jmp adc rcl ds aam add mov (bad) pop sbb pop mov adc lea add or fsubr mov inc mov out sbb mov std test jmp jo cmpsl jge mov mov inc fiaddl push fsubr and (bad) jecxz push je in and fisttpl and add or xchg sbbl jecxz jo sub (bad) xor mov rolb repnz mov mov xlat test es fcompl pop adcb or xor mov imul nop push inc mov or sahf ret pop adc incl fadds es pop arpl inc loopne fstpl mov jl jb push lcall test cmp ja mov or pop loopne out fstpl inc push das jg mov fdivp ficoml jp mov mov add pop pop ja or add fmull cli or maxps mov sti xchg xor pop xchg (bad) add or pop or ja pop lahf movsb dec loopne inc sbb add add loopne jb sar add outsl push push push loopne sbbl aam sub adc pop push sbbl movsl add in add (bad) in add dec es push leave dec push cmpsb pop lock test inc mov pop mov add push jne fist pop jne rcrl (bad) fwait sbb mov inc dec rclb das nop dec xlat push mov clc xchg push repnz jecxz cmp mov fidivl lea enter jne push cmp or lock or inc rclb inc sub sbb xlat adc iret and push in adc sub and adc mov leave sub xor pop and scas push sarb pop sub and enter cltd and pop sub sub js inc push push adc adc add (bad) xor bound js lock adc xchg jae stc and jnp lods and or cmpsb pop insb das aad aam js add fstpl jb repnz or adc lock insb or jmp je push adc imul or add cmpsb test lock dec movsb in inc andl aas adc mov pusha ret cmp nop and es aas inc nop popf nop inc cmp add xor jg popa mov movl push cmp pop xor inc or inc inc sub adc inc ret movl mov bound jno adc xchg (bad) dec push pusha push insb add push adc mov les nop jcxz add jge mov roll rcrb pushl sbb push or push add or int mov or xor sbb xor sub push push or loopne or fsubs jo nop xchg shl dec in mov (bad) pop in cmp jbe cmp xor loopne iret insb movsb (bad) mov push add add mov or clc add or pop pop popf and pop mov adc dec sub (bad) out push pop int3 jnp mov (bad) jae or das (bad) push or jg sub xorb jo and jge push insl push lock fwait rclb outsb or push (bad) test pusha lea cwtl sub xor mov cmp add nop sub sbb xor loopne dec getsec in sbb inc or xchg mov es daa iret or mov emms xchg cli lock into testb je push or pushf and sbb and jge push clc repnz cli sarb in push or and or xor iret add inc lret icebp dec cmc cmc pop sbb or inc add xchg add dec pop jnp shll push push sub mov mov cmp xchg or sub jne jno cs push scas imul xor mov push and add aaa push cmp dec push and dec push adc xlat (bad) xchg rclb and addb jmp adc add sarl sbb inc adc ds cmp scas outsw adc in pop sbb adc cmpsb dec inc xchg xor and or aas test enter aam xchg les addr16 mov mov (bad) ss xlat enter call or add sahf outsl in pop xlat leave xchg push push cmp call ds jae (bad) out outsl lods dec mov and mov cmp je mov cwtl push push lcall mov or mov fs shr das dec add xchg fnstsw es das lods (bad) adc sbb out cmp inc add arpl incb and and orb clc lea push xor fwait lock (bad) decl and mov je aam scas sub push dec and cmpl push insl leave lret loopne push add mov push add pop push add or xchg mov mov ds jbe xor push xor or add sbb and sub cwtl jns jno xchg sbb mov and imul test xor add subl bound inc orb jmp mov imulb je test std sti (bad) push lret jno ds jno or stos cmp xchg std das mov insl icebp inc mov sbb ret nop mov xchg mov movl movl add and xchg outsb rcr or cmp xlat push in add add pop out das lea pusha mov cmc aaa jmp mov or mov adcl xchg mov jnp test adc adc in inc das jp push add (bad) test add js jnp xor mov test push fs sub imul into pop lock (bad) and mov ret pop or addr16 sbb in mov sahf lock jle (bad) add pop push loopne std sbb or fimull push (bad) mov mov adc fisttpl mov cmp pop cmp lahf js and push or mov std shl lock divl roll and fild sar xchg pusha dec inc (bad) mov inc push add sub test sub add add test push sub push stc pop xor sarl enter lds jo mov ss or lcall mov cmpsb fchs (bad) dec fdivrl lock es add push push jge mov mov pusha cmpsl cs lods sbb and fdivrl mov mov push sub dec jmp jns xor sbb ds xor into fild push inc daa or in data16 push movb mov movsl movl cmp sub out adc push rorb aad adc dec rcrb dec lods sarl bsr adc (bad) adc and dec notb adc xchg lea add js decb mov mov or add jmp dec mov sbb sbb mov sub cmp aas or (bad) add jle add mov lods dec add mov dec (bad) mov lcall or jne jp (bad) jge pop fstpt sub push push sbb (bad) rolb gs mov push inc lea aam pop cmp incb ja inc call and out (bad) stos inc and mov enter mov dec (bad) xchg and jns jmp mov jecxz add fildll adc jecxz mov mov jmp rclb movl cli sub push inc fist pop repz sbb push add pop aaa jno fcoml jl pop push jnp or rolb sbb dec cmp jecxz ds rolb (bad) fiadd mov lea (bad) push xchg pop push cmp cs push addr16 data16 sbb and sub cld add pop (bad) icebp dec movsb pop mov jg push pop xchg sub ljmp clc inc cmp (bad) xor clc push adc or jge pop icebp aaa das test cmpsl add repnz and in ficom int fimul leave clc and pop mov imul add sub pop loopne pop pop push push (bad) cmpsl mov add mov ss push jo test out aas and das pusha shll dec mov je push pop or lret mov adc adc es cmc add mov xchg mov and xor add add pusha dec xchg in mov cs fistp add aad push or sub and mov popa pop je inc push outsl push dec test sub loopne jmp push add jg fmuls cltd push push ret jnp loope stc add je (bad) lret call push pop popa xchg loopne subl mov aam jge add je add xchg or clc mov push add (bad) repnz pop movsb fdiv cld mov or in sub les push mov xor sub out or add test pop xor cli mov inc and imul je shrd insb pop cld push jns add push pop aaa mov inc lock add add je mov aaa cmp push imul jp pop xor mov jle sbb enter or pop add or fdivrl test movzbl sbb add push push lock mov or (bad) mov test jle cmp jl add int enter jg jbe sarb (bad) les test dec movsb add and push sbb dec inc pop cmp or popf pop dec gs or loopne sbb pop dec bound mov pop lcall push mov dec cwtl fcmove pop fcomps xlat add adc mov sub inc cli imul repnz xchg cmp sub (bad) test sub test add daa mov loopne test cmp inc add mov mov push jg or jl push cmp xor dec xchg sub das or fldcw sahf inc dec jne cmp mull cmpsb fs xor xchg xor cli js ss cmp push inc and inc adc sbb push xchg and mov pop aam add popf aam loope dec mov lea add nop mov insl sbb int3 jbe (bad) mov pop cwtl enter inc mov insl mov push mov imul fs add xchg lret fucomi xor (bad) popa pop je sarb add push push mov (bad) mov ret mov and mov push push mov jmp pop loope mov jecxz push pop cmp mulb sub push sub or sbb xchg mov int inc mov js mull push sarl push jmp xor add rorb or jl ret loope dec loope push sbb mov xchg test aas sbb lods push fiadd jb rorb sub xchg roll mov add sbbl dec or adc sub jmp fs fnsave adc test adc sub adc insb and iret sbb push sub or inc inc sub jae insb inc outsl lret out and out add sbb adc dec adc (bad) xor (bad) cmc pusha loopne rorb sub push pop dec out adc pop test add mov jne pop sub icebp add add or mov lock add bound sub xlat hlt repz sahf add pop pop and dec inc cmp dec stos leave xor or scas xchg int pop and push xchg mov push (bad) arpl push dec js inc jmp sub cmp jl push hlt decl or inc push gs pop adc sub or dec sub pop cli sub in inc cs sbb adc (bad) lcall dec push push (bad) pop aas add mov pop push push in hlt sub movsl int3 inc call and add pushf mov clc call jp sub cmpsl fsubr mov add xchg and add shl xchg add (bad) (bad) ja jns add lock jb nop dec mov jb iret sub inc fmuls fidivl mov dec push in mov mov or inc adc lods mov mov fadds cmpsl mov mov and dec scas sbb stos mov push (bad) mov arpl dec hlt test jno sbb adc movsl imul hlt loopne lcall call mov popa addl pop aas call and xorl js inc jmp shr call pop mov in dec call xor (bad) mov adc sbb adc mov dec ss out test adc xor nop push es sti or adc leave iret inc pop add mov inc inc or cltd dec dec pop popa xchg leave js cld in mov adc jns xchg mov je sub arpl je imul xor xor das add clc jmp push cltd hlt jbe rorb xlat dec es adc or sbb mov mov fcomps push cmp cmp insb daa pop ja inc lret jge mov lcall mov dec mov ret aaa hlt int bound and mov sti aaa in out mov sbb adc loopne mov or and cmpsl pop ret pop jg inc mov inc inc mov push and mov add fs mov dec inc scas cmp jb add clc inc outsl jb lret hlt lea and lret fldl (bad) xor jge bound add call inc inc adc sub mov rorl mov ljmp push inc movsb xchg mov inc add push enter mov pusha movsb or repnz hlt mov pusha xchg cmp xchg or mov cmpsl test xchg sti lds addb fcom or dec pushl popw call imul mov outsl scas xchg (bad) fdivp sbb adc push in cmp inc dec jne and insl adc add mov or popf mov orl stos jo fldl lea pop and xchg cs ljmp inc and and or fcmovb mov xor (bad) jne clc adc orl jmp pushl pop sbb loopne (bad) adc ret inc daa or (bad) push pop sub dec adc jo outsl push arpl xchg sbb jae push or mov and test add add loop mov mov sbb sarl jno inc (bad) lret loope dec sbb jne cmp mov push pop das insb inc ss aad (bad) and cmp jne pop jmp rolb enter jmp fcoms add inc mov daa mov in hlt cs mov (bad) enter aaa cwtl or decl adc or pop leave movsb js mov add push lea pop xor (bad) aas and out lods xlat pop jne mov or call or pop mov dec jae shld sbb nop inc nop cld fmull xor (bad) pusha and out jl pop adc ja mov loop imul pop iret mov push sti and pop mov das sbb ret nop dec (bad) sbb dec jg add pop adc mov test mov xchg and add inc mov lea rcll cmp (bad) rol movb leave and sahf jno shrl or or mov nop mov sub push cmc push xchg pop or pop jno xchg arpl inc rol mov lock setno push push cltd loopne sub ret aad das xlat imul pop outsb out out sbb clc pop push mov and or mov mov or or pop cmpsl cmpl lea sbb sbb mov orl sbb pop mov and dec mov and xchg sub mov pop mov pop pop or mov inc sub cmp ret xor mov test (bad) pusha mov (bad) sbb or gs xchg shl scas add (bad) je adc pop inc sbb fstl mov imul ret (bad) cs jo and lods xchg inc add mov push or pop call adc testb mov sbb adc rolb dec jmp sbb mov pop lods xchg mov das push lahf cmpl and out sarb rorb inc (bad) xlat xlat mov or les inc cmc sbb or jb mov and dec pop sbb sub adc (bad) sub scas add movb push and and test in dec je jnp sub push (bad) icebp (bad) lds les inc inc push inc sub fstp push dec js xchg dec sub sub sub inc sub adc rorb cli les mov push call and or push xchg inc and outsl sbb add scas push scas fdiv mov sbb sub pop loope jl pop push ret jnp add aam call sbb lea mov cld je decl insl or sarb test push mov adc fnstenv sub jg es pushf pop jne inc orb sub sbb or mov (bad) ss xor sti nop imul aas sbb adc call adc (bad) pushf les cmp push pushaw dec mov pop iret fcomp or std imul mov mov cwtl rorl (bad) and movsl dec aad (bad) jo sbbl push adc pop pop fmuls pop ss add xor add cltd sbb dec or inc jb or (bad) dec scas add xor jg mov inc adc xchg mov (bad) mov aaa in xchg jg push adc sub ss sbb pop scas xor dec add or or daa cmp stos cmp push shrb cs push xchg ja jnp add movsb jns,pt iret inc ret aas cmpl and inc je fdivl sub sub jbe pop or push lea dec push rcr dec enter push std push mov cltd pop enter add and jl xor push push rcrl mov adc pop iret add xchg stos subb mov sub mov xor lods fidivr sahf subl lcall adc pusha adc subl sar pop cmpsl sahf pushf hlt push push jns xor fcmovb adc pop movsb mov push inc pusha xchg push xchg dec (bad) lret mov call ret or ljmp into (bad) mov out sbb (bad) fimull or sub jne lea add or mov sbb add cmpsl cld aad add sbb add dec cmpsl adc pop sarl fs or andnps (bad) xor sub mov leave jns aas (bad) fdivl fmul mov js stos jns movb add xor hlt icebp test sub addl and ret (bad) mov xor (bad) je pop adc xor or out xor inc js mov outsl lcall aas push or pop fs in mov aam call add push push push and repz cmp je daa inc or adc adc or ja or cmp xor call push leave fiaddl aas je xor nop dec xchg (bad) orl pushf andb inc xchg icebp inc adc xchg in jb jno cmpb rolb adc or movsb or jle sub sti movsl inc sbb or push test pop adc aam popf sub clc sbb rcrb adc and loope or mov popl or push mov test fisttpll jmp or cmpb inc enter or mov sub inc dec pusha sbb aaa dec aam mov mov rcrb cmp rclb mov bound ja jb pop xchg pop data16 sub fmul add dec sub inc dec lcall adcb pop jbe leave jmp pop jl les mov lea ret ljmp insb xor mov insl sbbb add mov loope sbb mov sub jae mov inc jge cmp pushf pusha push mov inc mov pop hlt jl test pushf mov push sbb shl pop jnp sub sbb mov lods adc mov mov mov mov loope lret psubusb mov cmp and adc lret out pop and sbb and pop jg pop add push fs add lods testb pushf pop push or test lods mov pop sub lods dec add inc jp push pop mov xchg ja (bad) pop je and xor fcoms pop sub sti inc sbb call xor in mov mov pop (bad) xor imul (bad) stos dec lds (bad) xchg push xor (bad) jb mov inc (bad) add xchg pop lcall sub and push cmp ficompl pusha rcrb or adc pop sub out sub inc xor sbb inc gs (bad) stc sbb pop fist negl adc push sub xor push lods pusha pop xchg add das bound in sbb jno add dec jmp aaa arpl xor pop (bad) mov and clc pop xor adc add and aaa popa orb nop xchg dec jo mov adc mov add ficoml mov fbld clc jl int3 push pusha pusha pop and sub loope sub dec pop gs or mov inc (bad) jo or lock jnp jno adc es insb popf adc mov inc adc push mov xor add fistl fildl or insl adc dec enter sti addr16 fnstcw jns or add xor sarl mov adc and mov mov and icebp cmpsb lock call pop test cwtl mov (bad) fs (bad) dec sbb pop add adc xlat in jb icebp out not add add mov shrb cwtl es adc movl lret loopne dec pop xchg xchg fild jne add subl or or jg xor pop push cmp je adc movsl jo and cmpl add shrb add roll cmovg js push sbb cmpsl fisttpll insb push mov ret mov add and jecxz ljmpw jae aam movsl les jbe or je roll or or mov (bad) aas sbb pusha ret ffreep inc mov pusha cs add xor cmpsb loope adc adc and lahf dec insb or adc dec mov pop es push fmull and (bad) adc mov and lods ss fiaddl int3 sub scas push aad sbb fsubrl push rcrl push push mov imul push fbstp mov hlt cmp pusha stos or and out mov nop add je scas stos clc ror dec jo cmp and push out rolb or in mov iret sbb out jle loop cmp je mov pop imul mov sub push adc mov sbb inc mov mov inc nop mov lock mov push mov test dec sbb cmp jne adc jbe mov xor test aad in or mov add sub inc pop adc pop jnp push sbb and data16 movsb xchg je push fs jbe mov jg xor push adc pop imul mov or add mov gs mov (bad) out iret sbb adc or mov (bad) fstl (bad) mov adc xor scas mov pop pusha pop adc inc jnp imul fimull xor push mov andb scas xor push xchg or xor in xchg push lret adc repnz mov sbb (bad) fcoms ja xor loopne outsl arpl xor dec loope and jmp cmp fcoml push inc rcrb inc xchg rorl cmc or movsb inc mov hlt cmp jecxz lcall sbb sahf xor pop in xchg mov dec jge in call add into mov mov cmp (bad) subl xor sti and mov add ja gs pop and add icebp or jl or inc sbb out sub dec (bad) rcl cmp jecxz rorb push ret out add ja cwtl mov push lods mov cmpsl pop clc aam (bad) in out cmp addr16 lods xchg jmp nop pop cmpsb leave hlt mov lock bound inc out add cmp test (bad) into out cmp ds inc popa or psubsb fimull daa (bad) orb fimull mov pusha sub mov testl and xchg push pop out sbb repnz push mov and sbb push push or mov movl mov add ja cmp push xchg fidivr or addb sub ret aaa inc test adc xor movsl mov or rorb mov inc test inc incl and xor ret xor push outsb shrb xchg sbb push sbb aaa enter sbb pop dec jae inc pop push dec mov lods and sub or (bad) cmp adc movsb or xchg push mov sbb dec jns jl cld movsb mov imul sti mov clc mov xchg int (bad) enter in insb mov movl sub nop je cmp mull xor cld cld or mov mov mov or insl call xor leave pushf sub mov outsl fsubs cld sbbl mov adc dec add fnop lcall mov int scas push push or mov mov inc lret and repz sahf sbbb rol jbe imul cmp and add and jle push sbb (bad) imul dec jg movzwl add mov imul dec adc aaa mov push ret test repz or jl dec push js sbb jl xorl adc xor test add loope lds sub pop leave and mov inc rorl iret add insl pusha and or xchg call shrl dec inc or inc leave mov sbb pop and inc and cs mov adc push or mov xor sbb mov or lods mov cmp xor mov jmp rclb pop mov loopne pop or test sbb rolb test or xorb push sbb hlt movsl rcll sbbl cmp pop inc and sahf xchg sbb sub loope mov dec xchg fist (bad) icebp pop ja sub test mov pop push sarb add mov mov dec add xor inc xor xor fstpt xchg mov dec xchg mov pop add shrl sbb cmp gs mov adcl das in sub mov cmp jmp mov add inc add into add pop xorb xor ss in mov (bad) mov and ja dec jecxz xor push sub inc sub xchg and mov push pop xchg ja jb cmpl mov pop subb cli add negb movl (bad) or es scas pop movsb cmpsb stos sbb fs adc push ja jo insb dec jae repnz or sub mov sbb iret jne inc loopne outsl imul (bad) insl inc push sbb or mov data16 ja ss dec out pusha xor (bad) pop push pop cmp out test adc or lods jmp loop (bad) pop dec push sub pop adc xor dec pop fidivl dec movsl pop mov (bad) mov adcl mov inc adc dec movb test add movsl adc add cmpb mov adc xchg adc mov dec bound pushf cmp mov dec ds stos ss insb lds inc mov sub rclb pushf sbb push push leave xor cs or loope push push sub ljmp cmpsb mov movsb shrl sbb notb push cltd adc movb inc lahf xor lahf insb popf stos addb xor (bad) adc push scas mov mov and add ret inc movb dec call and xlat jecxz repnz fdivs gs jo mov lea inc imul push lock lret lock jmp test (bad) mov loopne or jo adc fistl fildll and daa insb sub mov inc jbe lret jae and jno fs (bad) in nop inc push (bad) jae js adcb push outsl sbb test aaa daa dec out (bad) pop (bad) push push test mov rorb push push ret jo xchg mov lcall rcr scas (bad) jp xor (bad) lds add inc (bad) fs fs jns cld js adc mov or enter mov aaa sbb mov (bad) cmp mov or push sub or push cmp xor push ficom mov mov cmp mov rcrb sbb std and inc sbb clc push rol adc inc dec enter jne sbb dec push or mov jnp (bad) pop pop and test (bad) cmpsl or sahf or neg sbb inc adc dec or mov call mov or sub or jne lods into sub decb inc push (bad) bound cmp loop in mov jo mov xchg scas adc lds mov and mov sub add mov push inc bnd dec shrb mov jo xchg xor lock jmp add mov movsb inc pop sbb hlt mulps movsb ja mov mov or adc mov in jno ja (bad) stos jo pop lods adc sub in cmp pop aam jmp xchg add loopne sub pop pop jne mov imul or inc sub mov push push icebp repnz cs ja movsbl sbb xchg mov sbb in pop jb xor mov stc pop js sub loope dec cmp es pusha dec sub popf sbb js cmp fdivrs pop mov aas in out or clc add sbb aad fsubs adc loop add xchg and jno inc repz adc movsl mov xchg sbb push in mov pop jo xor call out mov jb movsb fdivs shlb sbb xchg push or dec (bad) mov fs je loopne push mov mov mov adc cs lret xor xchg push push mov pushf push or xchg sub jle push jp add int scas pop dec scas or dec rorb add adc push jmp sbb jge ret xor or dec xchg jne rclb xchg add cmpl lods pop pop sub fmuls mov mov test movsb rorb jnp jne or push js lock or mov (bad) push jo add inc pushf xchg add inc sarb pop or pop or push cwtl push pop cmp outsl adc adc push jo xchg mov xchg mov lea cmp and push jns mov into or imul ja or and pop test jmp and add mov mov push jecxz and add mov xchg push sub loop mov jmp or (bad) mov push and dec aam or adc jg xchg add inc xor push xor mov test imul loope pop rclb jle or sbb push test xlat adc lahf inc js sub fs lock jns lods adc lock jnp stc jge clc sbb mov cmp das jp xchg dec jge inc adc sahf pop iret push jge cmp or inc lea std xor insl rcl sbb inc and outsl and adc aas cmp je les inc cmp cmp add hlt movsb inc sbb mov add cmpsl dec lds inc repz out sbb leave xor or mov addr16 xchg rorb push cmp adc mov test outsb sbb push lds add push or clc push mov fisttpll insb jg add dec inc add jmp sbb xlat mov adc push stos push jbe sbb push movsl dec arpl or pop mov and or movsl and and ja jmp ret push mov lcall pop call dec in sahf sub ret subl leave inc push jo fisubl iret imul outsl or ss inc arpl cmp mov mov xor dec cltd inc cmp jmp or adc push push data16 cltd or xchg sbb xor lock pop aas pop mov daa and xchg dec lret push shl sub shll inc mov call jbe imul in push push mov and mov and incb push mov pop subl push push pop pop jmp inc std adc sbb inc add enter pop jns jo (bad) pop insl mov mov fwait push dec inc adcb and loopne iret push pop add push jg push xor adc pop pusha add push xor pop cmp lock mov (bad) xlat push dec das add xchg xchg sub dec cmpl test addb rcl insl aaa or lock inc daa add or jl lods mov dec inc and add pop or dec adc sub test pop xor dec ja out mov popf sbb insb push cmp or es xor les pusha nop sbb add xchg fs in and adc dec les loope push fdivs daa frstor or jae cwtl cmp inc testl xchg imul or andb and mov in sbb test out sub mov je clc add orl mov mov sbb (bad) push (bad) cld cmp mov adc add and push das add (bad) xor ds (bad) or sbb or je and pop test test add inc idivb fsubs pop pop ror pop movsb add (bad) inc ja jbe mov inc cmp xchg mov add jecxz sub scas inc ret adc jnp (bad) stos add push push imul hlt movsb or pop and and in notl sbb enter ret cmpsb fs cmp (bad) subl cmp loope sahf dec fdivrs add les mov loop std xchg scas aaa xor add xchg aam fimull or mov std cmpsl mov xchg imul pop fisttpll push test lret andb popa inc andl and push jg mov jnp daa mov movsb iret add iret out push push adc pop and sbb scas and cmp jg addr16 jg or mov mov xorb sub jne mov mov fidivl faddl jb mov (bad) mov jb (bad) outsl adcl bound push pop push or xlat enter mov mov call inc scas sub test dec adc sub sub popf push dec test mov xor mov cmp jne push sub jno adc sub fstp and fimull add js mov pop dec or andb mov out leave aam paddb lock adc dec pop adc add (bad) or adc lahf mov rcrb push xchg out movsb addl fsubr adc or or sub sbb xor adc xchg adc shlb add enter loope jmp lret cmp rcl adc mov jne ret fmuls jne dec cmp ds cvtdq2ps shrb dec sub (bad) pop jmp nop mov or mov mov adc pop sbb mov push adc rcrb push cmp ds ret mulps popf rorl dec dec pop mov push stc rol cmp dec insb jne nop out dec jge mov push xchg xor xor pop xchg jbe mov adc in adc es fst dec push ret adc sbb leave sub push adc inc jl xor ret (bad) js adc subl push in roll mov adc pop mov pop test and lock mov jg push push ficomp mov inc movsb sub fiadd std add out inc or xor inc imul in mov inc bound pop adc outsl mov std xor mov pop movsb or sbb sarb sub popf cs daa or mov jl ja mov or add push test pop mov stc outsb (bad) adc test lea enter dec (bad) fdivrp inc loope mov push enter cli or (bad) pushf gs fwait pop movsb iret mov scas popa push or pop pop ret mov test adcl push mov mov push addr16 jecxz or xchg inc dec inc inc mov mov sub adc stc push mov and aaa pcmpeqw aaa sbb adc and push daa test dec sahf or lock or add push or iret fldcw dec push rorb data16 mov jbe xchg mov sub aaa and pop rolb push hlt and fwait dec bswap (bad) shlb jb mov fstl jg ret aaa mov shrd dec test mov dec cwtl xchg nop mov dec dec mov dec js sub clc xor cs mov xchg push movsb pop sub cltd push jbe mov rcl adc cld jae inc xor xchg jle fisub push adc cmpb fsubl jae sub adc or mov imul or lret add movb fiadd xchg cld pop lret cmpsl (bad) inc ret fsubrs outsl jb shrl inc mov and rol and pop add jmp mov xchg push mov ljmp adc dec adc adc xor sbb jmp inc or sbb in push jae pop std xchg mov adc test jb dec in push cmp or es mov xchg dec add pop push sbb pop lret cmp enter dec cmp fwait testb and or push popa insb aaa insl jg add push pop dec jle mov popa dec cmp xor ret sub pop jp hlt ja lret sahf (bad) pop and and mov dec jmp jmp popf pop cmp sbb jmp and sub pop or pop mov or lock and ja push adc daa or or mov daa pop xchg mov or pop push int sti or or adc push es call dec lock pop lcall or nop or mov mov lds pop lock sub add xchg std dec mov or cmp xchg inc pusha cmpl jb inc cmp hlt jnp fcompl dec loopne dec xchg or insl outsl adcl (bad) clc cmp lea call (bad) ds jb sbb loopne push sub andb daa mov out dec push push dec inc pop mov sub adc xor adc push adc iret lret (bad) cmpsl sub xchg and and enter loopne das pop ja aam jne sub mov add sbb pop aad adcl inc (bad) sub pop test in or and and test inc flds inc dec mov lahf push push sub clc pop xor push add mov (bad) popf lds pop sbb pop lock test sti dec push ss sub repnz mov adc ds jmp xor mov push push ja mov adc inc outsb jne fcomip pop add insb popa jns jae push js shlb (bad) movl mov testl shrb cs insb xchg adc (bad) cmp dec adc xchg sbb ret push push inc push (bad) fldl add (bad) pushf in ljmp cltd mov hlt nop mov xchg mov jmp inc lock (bad) lods jle cwtl decb ret outsl lret ret sub cld mov pop rcll mov mov or ret push sahf and cmp push push insb out mov adc xor gs sbb mov fbld adc pop adc movsb fnstenv xor cmpsb out or lcall ret mov out mov xlat and fisubl movsl xchg or fs fisubrl outsb add fist test adc aad xchg jl mov push and xchg push mov mov mov les jb jb cwtl push push dec clc xchg (bad) fwait out xchg mov mov leave adc cmp mov orb xchg inc mov lods xchg or shll or iret cmp cmp xchg popf cmpsl arpl mov orl ja lcall aaa lret sub mov fwait sbb iret pop add or xchg es aad sbb cmpsl inc mov adc or and push xchg movups fsts daa mov movlps stos xor push mov in sar pushf inc jmp shl sub mov jae and lea or dec iret dec in push adc dec cmp sub jge (bad) add aas push loope add sbb mov ja sahf dec push sbb inc push lahf lds loopne xchg add mov jge sub dec sbb inc sbb or sbb jmp movsb xchg jae cwtl sub pop jne sbb adc xchg ja into sub icebp mov loopne xor add movsl stos (bad) pop (bad) or mov daa pop (bad) adc mov pop lret es sbb and rcll test or sub call outsl mov xlat dec pop jge pop rcrb jge jle jg pop and sub sbb bound psubb add or cmp dec cmpsl clc sub lock lock outsb mov out add dec inc or (bad) addl push xor nop push scas test add sub jae cmp xchg inc or imul lret test push sbb stc adc fisttpll insl hlt jne out in mov adc rolb pop mov test sbb push sbb (bad) daa or cmp pop mov repnz je and (bad) aad mov mov scas dec mov jmp mov and fistl out add stos out ja sbb jl or jg jne mov mov cli or inc add pusha jnp xor stos je mov fxch and inc push cmp push lock mov leave inc lea adc or cmp push mov std das xchg push add sarb sbb fstps mov dec loopne push or shlb (bad) xor and cmp cld xchg daa xor push ds addb and dec pop fsubl bound lea mov inc push or (bad) hlt cmp sbb sub adc test aad jle insb and mov cmp cmpsb hlt popa sbb addl mov pop push mov jns dec and hlt stos dec pushf mov xlat dec mov dec lea faddp sbb and push sbb loopne pop inc (bad) pushf pop push fnop jmp mov in sbb and xchg or dec mov lret loopne push leave (bad) nop daa call xor mov outsl jno adc sbb adc pop inc adc jne mov test jmp inc inc gs lock fwait cmpsb add lock jmp and cmp and inc imul js jmp cld loopne in xchg jo dec ja fs movsb lock shl cmp dec loop add inc mov xchg inc (bad) popa fldcw (bad) movsl icebp nop mov shll mov pop push pop mov test loope xchg out xor sbb jb lock sbb stos fsts pop pop clc dec sbb or rorl xchg inc push push dec jmp subps ret repnz es xchg loope cmpsb inc and sbb clc movsl mov sbb jmp dec je or mov xchg fildll test jmp adc mov adc and loopne mov inc test test test inc dec mov rolb xchg inc (bad) leave adc jns or jg cmp jne sbb mov push adc adc sbb sbbl leave sbb push cmpl arpl sub int cmpsl cmpsl rorb cmpsl into mov and jns cmp cmp repz sub pop jb sbb xchg or cmp pop inc mov cmp jb xchg and fs pop push fsubrs arpl inc add call sbb int3 fist addr16 dec jo lahf mov int in imul dec push inc xor push cltd movsb push push je push subb insl and inc and nop out not mov inc inc mov pop push jns insb dec enter out imul push push clc xchg lret push pop push or pop sbb pop gs add cmp mov sbb arpl arpl or jg push mov inc xor inc push inc push inc daa push sub int3 inc maxps lret pop and das push inc outsb insb adc fiadd or ja mov jae test pop outsl jae inc mov push fisttp cmp mov fs enter xchg (bad) stos (bad) shrb jg lock cmpsb pop lods push pusha push push push ret adc or notl dec pop ds nop out add aam loopne lcall imul xchg push and test movl das (bad) rclb dec add fwait mov pop (bad) rorl repnz push and subb cmp adc inc lcall add and mov dec jae sbb pop fdiv mov test xor pushf add dec nop push xor xor test xor xor xor xor xor xor xor (bad) enter xor rcl fcomp xor xor loopne call xor hlt clc cld xor jb add xor xor adc sbb xor xor and sub aam xor xor xor sub lock cmp or mov push lea jmp mov pop arpl test add add xchg xor and mov or aam nop lret in and mov mov test sub cwtl push lret push pushf mov andb test mov mov mov pop mov and xchg add push movsb xor xor inc sbb rolb add aam test mov cwtl xor xchg add test adcb call lret lock lret add adc nop and xor nop ja and push gs sub or test andb lods lret push sbb and push sbb nop lret or sub dec add xor xlat mov inc cmc xchg inc pushl mov and je gs gs andb call rcrb inc insb outsl jae and sbb ret inc mov cwtl or jns inc mov add jge clc mov push popa jb test pop arpl lods daa test je dec insl movsl nop jne test addr16 addr16 xchg gs in test addr16 fs pop and cmp jno jae jnp xor fs lea loop cmp jns jp jae cltd pop rol inc outsl rclb lods cmp imul pop fiadd xor xchg push or xchg mov pop adc dec push mov mov mov or push (bad) loop mov insb iret ds daa fsubrs jns xor outsb mov sub add cmp (bad) outsb movsl addl pop pusha push (bad) in inc bound add (bad) in pop xchg sbb pop pop xchg das adc adc ja and rcll jns loope and xchg fsubrs pop fs sbb fdivl jo mov fs jge test jno popl xor popa mov loope push lods and jge pop outsl movsl lock cmp repz fisub push cmp mov or jl push inc hlt enter xchg jne xchg push popf xor jg daa sbb aad jbe xor sbb add in and pusha mov xchg js mov dec lcall cmp dec mov outsl dec push dec add xchg add xchg mov in push in les dec push cmc pop cld xchg sbb and mov and pop fs sbb insb mov popf add xchg add aad fdivl call out pop push mov mov pop dec lea adc mov rclb dec jl les push enter inc clc addr16 imul incl mov push hlt and inc nop roll ds popf mov (bad) or loope and in sub add push pop cmp cmp lahf popa sub or jns inc pop mov daa fsubl cmpb push fs push inc cmpsl cmp xor movb mov fadds mov call push movb cld sub (bad) pop xlat and inc adc adc js cmp adc push mov fstpt xchg push add popf pop push push xchg or mov sub xor fdivrs sbbl pop inc and or pop mov mov mov sbb lahf test inc frstor inc (bad) pusha fdivl or add out inc pop add inc pop pop pop add fisttp fidivl out lock test push pusha les mov insb call adc push dec icebp cwtl push fmuls pop dec mov xchg jp fist and push inc cmc lods add cwtl (bad) hlt mov pop xchg mov add push pop inc cmp and jo pop fbstp daa lahf or lods pop stos daa push int3 cmpsb jo cmpsl pop mov jo mov xchg cmp dec pop dec dec push movsl xorb arpl subb add bound jmp test pop push push inc jnp or pop dec outsb inc gs mov faddp fnstenv pop or and mov cmp push xchg iret xor mov push sbb mov add push (bad) xlat fdivs dec xchg rcrb mov mov pusha inc rcll test mov jo mov aaa dec pushf idiv insl fs addr16 push loop and adc pusha adc and inc or sub xchg aaa repnz pop push push add dec cs cmp mov inc and cs mov cmp xchg mov cmp sub xlat clc ja jae outsb out hlt push pusha xlat lock mov fistpl (bad) pop push mov push icebp and shll mov (bad) push cmpb add pop mov xor mov add movsb lods mov int3 adc pushf sbb (bad) hlt pop pop pusha xlat stos sbb movsb pushf add xor push leave aam faddl inc push pushf ljmp add and int ljmp dec arpl insl xchg (bad) pop sbb jo add adc sbbl jae mov pop jae mov and and xor je sbb mov inc pop jno jo add add and es xchg lods std aaa push or outsl inc jb bound and jno cmp ja mov jae jno or xor push add pop and fisttpl add add mov loope mov and push leave insb in cmpsl add inc aaa leave or push mov and loopne pushw ss sbb (bad) pop add push outsl ja xor shll stc adc add pop jge and adc sar mov sbb xchg mov pop and and leave add push lds dec shlb sbb lods pop pop lds adc xor (bad) push xor cmc dec loopne add les (bad) cli push jbe pusha add jbe xchg sub dec and push or (bad) mov data16 adc outsb push cwtl stc inc cmpsl data16 push outsb loop outsb inc hlt out cmpsl insl add gs xor cmp mov jo push pushf push addb (bad) test cwtl std inc cld data16 and stc mov imul lahf mulb push mov push divl data16 or aaa push fildl loopne shlb enter inc out push call stc es movsb sub sbb add mov mov call pushl repnz jmp cmp outsb mov sbb pushf in mov test out xchg pusha (bad) xor push adc out pop xor push jp mov inc les lds js add js in movsb popa push mov ret jmp cltd sbb inc ret cmp cmp in inc les jge add adc ds add mov jo bound inc xor sahf adc cmpsl test int int3 inc jne je push (bad) in imul cmp es push push inc pop xchg or decb cmovne push insb xchg nop mov jno andb enter in (bad) push mov add arpl aam int pop adc outsb mov popf add dec fs jns mov adc loop test gs test add dec (bad) in fsubrs in inc push imul dec insb jo or shl adc iret pop dec and and cmp rcll fcom dec sub sbb and adcb jb pop das push xor test sub shlb sbb mov pop inc hlt push push mov dec test int3 test stos fwait icebp sbb dec sbb pop gs jb pusha sbb negl cmp sbb fs hlt inc je xchg add or mov mov sbb je push pop fidiv notl push dec dec nop outsb leave inc test nop dec aaa shrb pop fdivr mov cbtw and dec or dec je iret lcall jo sub cmp test xor adc adc mov add xchg push push cmpsl cmp jne add xor aaa leave dec loope or xchg jmp mov pop (bad) inc lahf (bad) scas and add cld sbb lds es add in cmp js mov lods daa inc push and pop mov jl movsb test sub and ljmp ds mov sub jae mov and sub cmp jecxz sbb outsb lahf sbb dec inc adc in sahf xlat inc mov nop out les cld test jno mov in push sub dec sub clc mov pop lahf cmp in cmp subb inc sub imul in mov enter es inc sbb iret jno mov xor push ds lods push mov sub roll xor cmp xor sub dec mov leave xor cs test dec sub outsb jl cmp shrb push dec xor repnz and mov pop mov aaa dec inc (bad) sub cs inc sbb cmp insl rolb jb (bad) ja inc je enter jae dec cmp mov nop xlat int3 rolb cmp or add mov cmp or test outsb dec stos dec fadd nop or cmp popf xchg loopne mov aaa push push dec push jo pop cmp ja sbb mov cmp movb mov and stos roll mov sub and jge push and cmp inc xlat mov (bad) push fldl xchg add xor mov out add test push push inc adc xchg subb scas mov mov push mov xor adcl jne push mov xor or add adc sbb cmp sbb daa cmc cmp mov mov arpl fs pop js xor cmpb (bad) or xor inc or loope (bad) jb pop and dec enter (bad) cmp or or xor push shlb les or adc stos mov popa jne xchg push mov cmc pop jg mov xor add fisubr fwait mov call rcrl sbb or inc inc jg adc out movl dec cmp cmp adcl cltd mov sbb lock sbb icebp inc fcompl or jne rcrb or sub dec push push or adc mov out call add shlb xor mov andb sbb sti add push movb xor adc clc mov mov add fsubs or es ret inc (bad) adc movl xor popa nop push clc add es daa inc sub rol dec das lret add (bad) out adcl js (bad) fcmovu test inc xor and push adc pop xchg enter fldcw dec and pop in rclb push adc sub (bad) pop pop mov and and cmp fdivrp push sbb ret cmp jne cmp shr push and xor mov addb or ljmp cmp xchg dec xor insb mov cmpb stc int3 cmp movb mov int and stos or cltd js pusha pop repz int pop xlat rorb or into or lods mov xor mov add stos mov (bad) fmuls cmp decl stc mov lcall pop jnp imul xchg sbb aam pop mov or xchg jg lock adc pop add lods inc arpl xchg orl push inc dec add add or movb jmp jne les jecxz xlat dec sub cmp addl btc mov jnp adc dec hlt mov pop icebp (bad) aam jmp bndldx out jmp mov mov pushf sub cmpb add cli adc adc xor and push cwtl cs or adc lret mov add sub dec add xor mov inc xor mov nop sbb js add cmp and push popf sbb roll fwait cmp add xchg lea std push test stos cmp push cmp fistl inc and pop dec pop mov ds jae jmp xor xor push daa or jbe jne jno fwait js js repz xchg xchg add out sub pusha sub sbb jge (bad) fadd push push mov or ss imul cmp mov (bad) test mov push cs lcall adc adc pop xchg jmp inc repz mov xchg push pop imul adc sub lret or or dec add test in push jo lods inc mov and push mov cmp popf jmp movsb or add dec sub sub mov dec pop test push mov jnp push repnz (bad) mov inc enter inc inc fsubl adc sub in add mov dec mov pop or dec pushf sub jb jle mov adc out jo call sub cmp lea xchg mov sub add mov mov jge int3 movsl and aaa in push xchg xor out sbb cmp pop xlat sub mov clc jne dec push mov movsl (bad) test scas gs xor (bad) (bad) sbb cmp loop or inc cwtl ljmp and pop (bad) mov das sahf je mull and jle adc fdivs shlb mov ss je stc ror push lock loopne mov add push jne add jge shr jo imul clc sbb mov lods loop push xor jbe cmp adc inc rclb xchg inc les jne add clc cli mov lret insb jp xor push and mov add inc dec outsb push cltd pop lods cmp lret in sbb cmp int3 lods jge daa cmp shrl ds sub jmp fsubrs fcoms pushf jge dec jnp sub lea imul or pop or ss jl cmp xor lods outsl sbb loope sub add es lahf push or je pop mov push cmp mov imul push insl cmp push out out pop cmp adc cwtl dec cltd xor jnp mov jns xchg jge mov je pop lods cs mov add cmp cld test notl scas and add add mov sub mov inc test data16 mov sub mov dec test jo push nop push data16 in outsb inc adc out sti xchg lods add (bad) jo jae cmp add and inc or mov push fistpll dec cmp add cltd sbb jnp add adc push shlb rcrb in pop test xchg and je iret lock xlat test cmp jecxz inc and inc insb xor jo cs jg inc cmp jne xor out incl je movb lea xlat outsb js insb lahf mov or mov aaa mov sbb cmpl or aam inc faddl add lea iret mov js xchg pop test xor fwait mov jl pcmpeqw inc sbb not inc push inc outsl or push pop pop insb mov je jp iret movsb dec xchg pop add (bad) push lret les push and enter rolb lcall clc and mov aas lret aaa adc lock adc adc jne and test iret dec sbbl sub repnz insb scas shll or pop mov cmp inc fistpll gs dec pop mov fsubrp mov cmp fcomps and jns xchg (bad) je pop sbb mov (bad) imul ret loopne jbe inc stos cld sbbl jmp xor icebp in add add push int3 adc repnz cmpl add lea add mov sti stos add and dec or push inc adc aaa inc add sub adc sub and inc push cmc and loope or lea sbb std stos clc cmpb inc (bad) lods pop add sbb push dec inc andl popf adc (bad) rclb dec js mov and cmp in adc jae in xchg je std sbb pop sub invd add inc adc sahf jl jne push fcoms call push add mov xchg or imul mov popw pop mov aam lcall pop push and cmp mov push push push test add fsts clc lcall (bad) jne mov notb add pusha pop sarb jbe sbb mov (bad) lret cmp (bad) int3 pop fmuls fcmovbe mov cmpsl sahf mov loop movhps mov mov push shl rclb call test dec (bad) sbb or jbe test sub sbb add push inc push cmpsl addr16 pop sahf jo sbb and inc add shll sub inc or push add and std mov mov mov adc sbb (bad) ljmp jnp push pushf test xchg jbe (bad) dec jg adc sub add inc fisubl inc (bad) dec in jmp and jb nop xchg cmpb addl stos dec or push add and mov mov sub mov push dec sub add push pavgw (bad) xor add dec add cmp jle lcall (bad) hlt dec sub imul (bad) test jne in ljmp xor subb or adc inc aas stos jmp aam cli xchg xchg mov cld lock jge dec xlat jno mov cmp inc or push jp nop movl por jmp inc jecxz add push loope cli pop sti out dec and sbb sbb sbb jle (bad) sbb mov jo aad or and or or pop xor ret pushf mov rcll add adc sbb ret or cwtl int jae add sub and and adc push call sti or fmuls pop (bad) movsl add sub fisubr adc movntq sbb adc mov sbb lods mov out (bad) sbb and sub dec and sbb lods rorl mov jb push and and int3 push or jne inc movsl mov push inc jg push inc fildll jge add inc adc push adc push subl add add sub ret cmp push push pushl lret xchg cmc rolb loopne adc (bad) lods xchg cmc push aad insl les popf and sbb push sub (bad) shrb (bad) notb fiadd pop loopne andb je lahf mov add jp fild shl push mov cmovp adc push jecxz and push in fcom pop shr push mov daa out xor xor jb lods test pusha jno fisubr pushf nop jnp iret add xchg icebp or outsb test sub mov jle mov cmp fsubrs inc push or sarl mov or xchg testl mov or rcll test mov pop fsubrs sub and jmp cmc fistpll cmpl ret jbe push sti cmc xchg push or mov push sub cmp mov in add fcoms lock fldl push inc aaa movb in test cmpb in test inc clc cmp push movsb pop fdivrs (bad) and xor (bad) stos shll movl mov cmpl dec push mov test fscale call push xlat fcmovbe stc in add outsb xlat dec dec and hlt mov adc sub push mov sbb push in cmpsb inc sbb push or fisttpl imul rorb mov lcall push pop lret movhps negb enter scas inc ret add or add add xchg mov push movsb add sbb push add ret pop arpl sbbl or int out push (bad) cmp (bad) mov pop push xchg pop push xchg cmp adc (bad) pop clc mov mov jne jnp repz testb push test dec (bad) rclb sub mov fwait cmpsl aam or add test push subl cmc xchg or (bad) in fistl fsubl dec loop xchg icebp loopne jb testl (bad) bound jg lea xchg mov fdivl imul lcall and (bad) push arpl xor insl adc inc inc inc adc sbb inc dec fs lea mov dec xchg and rcrb cmp push push jo add jnp jno add out push shrb pop addr16 ja lods out jmp outsb push or pop imul sbb int3 gs jb jmp sub cs les pop loopne pop neg push xor adc and pop test loope mov push lahf sub (bad) clc push andl add jne add pop cmpb push xchg adc faddp pop dec cmp cmp inc push dec nop imul push stos push sub lds (bad) shll mov ds sahf pop pop cmpsl data16 cmp (bad) and std pop pop arpl push ffreep rolb lret adc adc es (bad) aas add inc sbb add pop pminsw xchg jne jno and inc add adc xchg xor sub mov (bad) rorb dec mov xor jle mov cli jl xchg inc je cmpb ret (bad) mov divb add cltd adc and cs movsb add (bad) xchg or xchg mov sbb pop insl loopne lock scas inc cmpsl jb push inc cmp (bad) sub ja or nop sbb hlt adc (bad) call pop rcrl mov clc lock pusha push cmp loopne or mov repnz fstp pop add inc push cwtl lcall sbb cmp push pop cmp add sbb xchg pusha mov addr16 js (bad) neg cmp and dec clc dec adc push popa add cmp jge push sbbl add or jg pop out xor and mov xchg std push ss scas xchg pop cmp mov adc ret add adc pop jne arpl push dec pop xchg (bad) in and cmp roll adc sub sub jp cmp and dec sub dec fs test enter insb pusha pop loopne in cmp cmp or and repnz cmpsb xor rcrl inc clc outsl sub stos dec mov jb add sub mov lcall mov mov es dec sub ss sub push cmp stos sti xor repz and inc inc fistl push lock push lock mov pmuludq dec pop nop imul push (bad) jae and or add sub push adc rorl sub cmpsl and test mov push push push jg or sub dec leave test (bad) repz push cmp ja loop xlat call shrb scas sbb jne push or add and imul lock pop rclb gs out pop loopne sarb aaa sbbb (bad) mov lsl add xchg jmp movl call scas mov sbb push sti loopne mov cld mov xor dec sub push movsl jne pusha xlat add jmpw jmp xor ja push mov mov sti xlat in jnp test jmp mov adc (bad) mov mov rol sbb ficoml mov and xlat shrb jmp xorl adc push int loopne xchg fcomip sub nop dec xor repz add fisttp mov dec rclb add loopne (bad) mov mov loop dec inc or pop jae push dec fsubr test adc mov popa sbbl mov pop es cmpsb mov add loope insb repz mov test clc adc lahf lods arpl adc clc popf outsl ret lods aad dec adc ret mov sbb imul int3 sub sbb or arpl insl adc leave leave leave leave sbb sbb leave leave leave sbb leave leave leave add add leave leave leave add leave leave leave or or leave leave leave or in in icebp repnz in in cmc div clc push in in cli sti cld dec dec dec dec std (bad) jmp mov dec dec loope das add fdivrl jns push cmc jle fs sahf out sahf pop les mov sahf out inc lods cmp xor jns out sub and sahf out sahf sbb adc or cmp out add cld hlt fs repz repz in push in iret repz faddl int3 xor iret repz sub and repz repz adc or hlt cmp pushf add cld idivb repz jl repz repz insb aam iret repz int3 pop les cmp repz inc lods cmp repz repz sub and repz mov adc or (bad) repz add cs into add mull mov or test add cmc inc xchg jae jecxz and shlb lea jns outsl xchg idivl and add clc pop dec adc adc push mov add sti inc dec popa insb cmp lods cld push and ljmp push les lahf nop adc lods jne pop and add fimul daa and push je sbb sbb jo push enter mov es dec adc cmc push mov add cmpb aas mov scas das movb mov push and sbb adc cmp jnp xor cwtl clc add sbb mov insl mov and mov cmp faddl xor add mov and adc or dec sbb add inc clc push xchg push push in stc adc test pop jecxz cwtl daa cwtl mov cmpsl sub mov pop or and popa insl adc jmp (bad) cli mov ds mov sub cwtl fisubl mov test pop or cmp test fildl mov mov outsb jo jecxz sbb nop aad sub enter cltd pusha add fadds fwait js lret add and jle pop lret iret mov fnsave sub sub leave add xor (bad) mov (bad) adc das or jmp das (bad) jmp aaa and sub jo aam nop pop lahf dec inc nop (bad) lock sbb jo js add pop add test movb pushf cmp neg popf addl dec dec push sbbl inc jg imul or pusha lods pop movsb scas sbb xor jmp xchg nop pop in and cmp loopne dec mov sbb ret iret and push inc std or or je sub frstor sbb loop (bad) call jmp xchg loope xor sub emms enter fscale test cwtl test or std mov test push jmp addb pop jo pop (bad) or lea add pop xchg or (bad) pop enter mov cmp mov add mov fwait (bad) jne je dec popa jns adc or inc insb jns xor pop stos mov xor or jnp outsl mov xchg jae aam add push dec jne popa je insl cmp daa cmp lock xchg pushl sbb lcall adc pushf jne sarb iret jnp call je in or out test test dec push pop push mov push test cmp pop pop push cmp cmp push push nop jl inc lods adc push adc push push push pushf inc and sbb sbb add pop test rolb test sbb push clc nopl xchg (bad) and pushf rclb outsl lock cmp out inc pushw movsb dec and xor outsl cmp outsb mov push pushf cmc (bad) incb lock push clc insb icebp lcall push push adc add sbb lahf inc cli call mov mov mov mov (bad) fcos xlat fucomi call imul push push data16 out movsb sbb mov sub dec sti xor adc sbb or sarl or nop ja and mov (bad) push arpl pop pop je and pop or push das mov jb and stos mov inc nop sbb push pop dec or jae cltd inc nop or out sub or or jmp pop repnz cmp push loopne xor lahf xlat inc adc add int3 pop pop enter inc aam push fiaddl push loopne sbb adc cmp nop outsl add and inc rorb mov push (bad) jmp mov add cmp imul inc add lds mov scas inc fisttpll lret test pop repnz (bad) push ret sbb or jecxz xor xchg sbb call or inc sub inc sbb mov or je add xor cs pop les cli mov les sarb lahf test adc mov jb or fs (bad) (bad) and mov lahf mov popf lods cmp rcrl in push fmuls fadds xchg mov mov test lret aam jge cli imul jg inc xor push nop pop pop movsb add lods and ret add out add addb (bad) dec subb dec fcom rolb mov scas aas xor push popa pop or test icebp adc iret test sub aas popf add pop (bad) cld xchg add add pusha pop popa sub dec add cmpsl mov add push add out inc shrb push pop fdivrs mov out addr16 jae es xchg mov rorb notl sbb inc js push outsl (bad) lock add xor decl adc adc adc add ja mov cmp push jl (bad) aaa loope imul add and sub adc inc sbb into faddl dec add mov mov mov adc inc mov cmp dec jo adc dec adc mov push (bad) bound push inc and pop hlt or inc hlt jo aas cld hlt movl and xchg inc xchg or inc cmp jl mov or inc pop in loopne imul push mov inc pmaxsw add stc lods test icebp sbb jge clc mov sbb adc scas xchg mov scas sti and mov cli add dec roll mov inc cmp (bad) push or mov addb idivl cmp jne pop lods or inc add mov dec xchg inc mov sub or add dec pop (bad) fincstp stos bound xchg inc sbb sub cmp in push rcrb (bad) jne xor call push ror cli cwtl out cmp je or add jbe add inc push inc (bad) loop dec cmp sub int3 cli movsb mov jb sti icebp pop aam and into test in (bad) fnop sbb or je mov in pop pusha xor push jno cmp inc pop cs cmp pop or and daa aaa push xor fldcw pop and adc nop les test mov cmpsl jmp mov js xor (bad) aas sub xor outsl jge mov cmp jl add push mov adc pop inc imul dec imul scas stos pop add ret dec sub jg sub int3 cltd jmp mov lods fstl pop ss (bad) rcll (bad) cmp in test pop dec sbb mov shll add and fcomp inc xchg add test add mov inc push jg lock xor aaa fwait lcall jecxz cmp insb pop add xchg enter or (bad) cmp mov enter mov mov adc inc cmp gs in dec cmp lods dec shlb push adc sbb adc mov xchg push ret mov pop loop shr fisttp mov add nop push cmp add pop inc orb insl xor adc mov loop loop cmpsl aaa in push dec jmp xor or or bound fdivrl adc jmp dec stos fdivrl add std inc xchg rol std das je movsl bound (bad) lcall adc pop xchg (bad) scas sub mov clc or dec add lock (bad) cmp lea mov sbb jno pop mov sahf pop push pop es or jg cmp inc aaa mov dec and mov or sub add push cmp sub add mov push pop rorb sbb leave add movsl jecxz dec outsl adc in jb jmp sub mov mov jmp mov push mov mov les std adc xor and pop dec pop clc scas mov adc add aaa aam imul in fsubr rcrb add push test push jg jmp push arpl pop or je (bad) out lock es jge leave (bad) loopne jns pop mov test xchg mov out and mov push aaa dec lods dec mov or rcrb pop or push jge and sbb nop push cmp movb mov (bad) clc push mov adc (bad) and or or xor inc xchg jo add call push dec adc loopne imul adc outsl test cmp mov push dec ret pop mov ss add sub mov imul fs pop mov scas (bad) fsubr sub pop mov and inc aad sbb and or inc sar sbb adc cwtl sub outsl pop js shrb jmp inc call loopne inc fdiv push (bad) frstor xchg loopne push adc rclb xchg jne push in xlat int3 and call (bad) pop pop or mov inc xchg sbb adc aam mov xlat and test add dec roll jnp mov bound push clc lcall adc sti cwtl pop sub enter (bad) mov or adc aam add mov jbe roll (bad) iret sub cmp dec addr16 add loopne shlb cmp sbb push or sub dec inc add lods popa imul mov dec fsubrl push and add xor push adc adc mov push hlt sub jmp push (bad) jmp sub xlat divb and sub dec or shrb ror sbb sbb jmp lcall in jae insl clc daa add sub add sub les cmpsb adc add pop jns fwait adc scas int3 inc sub push cmpsl je push cmpb sbb adc inc imul pop sbb out dec in xchg xchg sbb loopne nop mov xchg adc loopne sbb loopne bswap pop ds sub scas aas adc inc push nop and and add inc clc mov or movl int icebp movsl aas push push push jmp jno (bad) movsb sub sbb inc outsb adc pop test fcomp imul sbbl adc jae push or or adc xchg mov (bad) xchg rcrl or test xchg sbb lock dec jb mov adc dec movsl push pop daa or loopne xchg loop in ja cmpb mov cmpl or jmp adc or sbb movl notl add loop add pop fcmovu ljmp adc sbbl sub and adc or faddl add add mov inc dec test fcoms adc adc cmp jo mov xchg mov aas les mov lea jge mov aaa sti pop sbb jo mov jne addr16 nop enter push rorl push mov xchg adc imul clc aam lcall lods les add sub or out js testb mov xor pop add push test (bad) xchg mov or xor pop cmpsl xchg mov or gs dec sti sahf mov enter pop jb xor clts add cmp dec mov (bad) aam sbb or push insl setb sahf ja sbb adc shll adc mov pop xchg int outsb push je inc out inc mov out mov xchg pop and jne pop ret sbb pop jne adc xor (bad) call test test mov cmp imul rclb outsb and je or test shrb inc fistpll (bad) pop je push mov (bad) and cmp push in cltd add mov bound adc (bad) adc adc mov loopne lahf or or movb jne pop lock ret sub and add add movsb xchg dec dec or xor sbb adc icebp in roll mov popf sbb in adc nop leave sbb mov int3 push ror (bad) push lods adc mov add je adc cwtl and int jle jg xchg cmc test lods out incb xor popa add mov cmp leave add mov sbb sbb or out inc add std cmpl cmpsl add jp jne (bad) mov sbb inc xor and repnz es mov (bad) pop jmp sub mov xorl scas cmpsl sbb push call repz or das mov cmpb ret inc in xlat push mov cmp fildl inc mov test jae sub test jmp cmp mov fcoml push and cwtl psraw or inc test cmc sub and mov dec sbb call inc dec pop aam push adc adc jne aam mov sahf add (bad) lock jo ret scas sbb dec outsb lret adc sbbl das nop (bad) dec and add mov xchg sti fimul mov imul in jae cmp ss jo mov pop jnp sbb aas je xor ja mov sub and cld insb not and mov (bad) fidiv or jae push jo pop push nop jb mov dec adc xchg or jmp arpl nop and sub icebp push sbb iret inc cmp enter jne dec fidiv hlt int3 adc adc cmp cmp ficompl cmpsl push sub rcrl or fwait gs pop repnz popaw and adc rcll dec push andb xchg sub insb cmp scas cmpl add dec dec mov cmpsb cmp arpl jnp inc inc adc add fdivrs inc xchg aaa cmpsl punpcklwd (bad) comiss cmpb mov or loopne and and imul jo push insb dec push xchg mov push dec and inc mov add orl in out sbb cmp mov pop fcmovne add bound xchg push xchg data16 mov jo pop add pop xchg adc test sub mov fdivr mov mov (bad) inc aam icebp mov jae sbb add mov or xlat les push fs cmp into sti punpckhwd fiadd jge push inc xchg mov mov (bad) mov and add fisub xor cltd push add int3 sub push or data16 aam adc jl add loop mov or jno mov jp sbb xor out or jo xor sbb repnz out add or ds xor inc stos pop jg clc jns fucomip and mov jo,pn mov inc mov inc in push (bad) divb inc sbb add jnp dec sbb ds nop ret cmp and mov sub sub mov dec rcl mov mov add xor lds sub xor (bad) lds or movaps add sub cmp jg iret inc xor pushf enter dec leave mov les push dec jg daa (bad) dec push or (bad) adc mov pusha fdivrl daa xchg fcoml pusha rcr jmp sub cmp aam cmp in and roll xchg shrb sbb xchg mov sub clc mov xchg test push fadds add jbe imul or push push adc adc les or inc pop sub xchg add popf or xchg mov mov and push ljmp mov in daa adc daa adc sbb loopne xchg or in repnz loope out popa jbe call or and or cmp inc pop add sbb loopne (bad) outsl sub in push mov jo,pt shrb dec ss push push or test into pop movsl pop mov sub insl out (bad) aas sub and xor xor dec imul xor arpl add in jle xor pop arpl insb push or sti pop jnp adc outsl pop js bound jge popf imul push jb popa neg mov sbb es insb bound fidivrl es gs out int sti pop jo addr16 jb addr16 mov pop mov arpl add daa push jg sub sahf out je outsb insb das je cmpsl ret mov imul loopne mov (bad) pop je jo jb arpl testl out lods loope das add or sub outsl pop push hlt adc ret add or cmc pop pop test sahf lock sbb or lock mov add and inc add add pop pop and pop adcl daa cld sahf inc xor cmpl test inc addr16 pusha fsubl test (bad) mov dec sahf (bad) flds sbb cmpb js push or insl stos push cmp xchg insb push pop pop jbe ret push sub mov sbb mov dec sbb imul sbb daa pmulhuw and mov inc adc sbb adc cmc data16 push mov or or shlb dec test nop or scas fwait lods mov mov xchg and dec or jb sbb or inc and xor sub andb dec add mov xchg ja and clc inc sub mov popf xor ret ret jge sbb (bad) sbb sarl jmp sbb or and shrb push inc adc jbe (bad) repnz sub jmp sbb pop xor push sub mov sbb add add rolb adc push pop mov add push lds movsl cmp pop aaa pop mov sbb roll jnp or dec or adc adc jb or xor push movsl stos or dec jmp rorl xchg add push or adc xor and lret and and movhps scas or das inc inc xor add add add ljmp add or or or or or jns adc adc out sahf out adc out sahf sbb sbb and and iret jnp and loopne push cld or out das inc push bound jns out xchg cmpsb mov dec repz fldl2e sti or sbb cmp push popa jb repz repz movsl mov shlb out cld or sbb and es push scas or add dec sub in lret adc mov or or test sbb dec sub xchg lret or jb in sub sub pop push mov sub adc lret dec adc in inc pop dec sbb movsb dec sbb xchg push cs dec cmpsl dec sub pusha lret mov imul bound and lret and movsb xor and adcb sbb call clc mov pop test les insb inc sbb xchg mov dec cmp push fadds cmp xor or lea mov js,pn lock movsb je or test decb push leave clc push adc push popf add data16 call or lock xchg subb (bad) pop inc ja out int3 mov out mov cltd or in jecxz add lock outsb out or lea mov frstor loopne and outsb sub cwtl stos mov add pop or cmpb jecxz push mov outsl in inc push push inc or lock lea sbb add xor fcomip and or dec adc movsl dec xchg add or or mov inc pop or fs cmp dec add cmp push inc out push push jbe or and pop outsb mov enter fcomps pop and aam xor mov add sbb in (bad) mov pop (bad) inc (bad) call sbb out repz fsubr pop mov push aaa in lea nop ret pusha sbb cmp movsbl add les xchg and jbe loopne push push stc nop scas pop sbb js xor daa inc or std and mov mov jo imul insl push es mov or push sbb xchg cmovae add and adc adc push jb push inc leave adc push jmp mov rol or or sbb mov pusha and or push sub mov sbb rol das push pusha mov test xchg dec inc mov hlt pushf xor inc popa notl add fdivs inc xchg add inc enter and test and push jb add push fdivs and jo or add pop and sub push jb sub jb and sub add add inc pop lahf lret shlb inc and repnz js js or sbb dec gs jbe xor orb cmpb ds push mov ret cmp pop or and inc sub aas push outsl inc loope enter int3 sub insl mov into cmp fs push xchg mov adc inc mov imul dec bound int3 arpl js idivb sub fdivl or lret adc test pop adc (bad) rorb adc push push push ret mov cmp or (bad) loope pusha jl rol and or or and dec scas pop xchg inc xchg ud2 pop hlt mov sub push imul lock jle xor sahf or mov jb aaa jae loop xor push pop pop out dec jb inc jl xchg push sub xor nop daa xchg cmp outsl inc push nop cmp lock mov adc fwait insl adc in inc outsl fild add into mov and push and push or pusha dec xchg jecxz cmpsl pop and jmp mov pop repnz fcoms pop or push inc aas nop loope add and addr16 sbb and mov enter pushf outsl or or inc orl adc and and aaa leave inc mov in adc dec inc push add pusha icebp mov ret fistp ret cmc add mov nop gs les rorl leave push sbb add out stc jo sbb outsb add add inc and movb mov xchg rcrb stos lock fmull gs inc mov mov or pop inc enter rcrl and cmpsl add mov pop or adc fwait or js outsb addr16 (bad) je inc adc pop popa and inc dec jge push xor pop and add pop and frstor xchg mov (bad) pusha mov ret xchg scas and adc test pop xor sub into jb incl jb lea sub push pop pop jno insl popa aaa hlt push popa push fsubr push inc and sub add sbb test arpl jge lods aam xor ja stos sbb mov push mov pop mov xor or mov ret sbb inc xchg add out lods cld mov loopne iret mov ret inc mov xchg les int shll dec xor xor aas inc adc sub test dec inc and pop test mov dec outsl or mov add test add add daa add pop pop iret popa inc sbb (bad) jbe jmp test adc popa jae add add jb pop add fldl mov dec pop xchg lods cmpsb fisub icebp repnz jo jo mov dec and movsb ljmp push lock cmpsb or push cmp shll dec adc aam out push or mov dec popa inc pop test and jno fldl pop xchg ret movsb jb out and inc pop lods cmpsb mov and push loope idivl push pop sub mov sbb pop sub mov inc add mov push js pop ds push jle sbb mov inc fdivl inc push cmp jae je push outsb or sbb in jnp push ret jmp enter enter push inc loope idivl mov push pop and lcall xorl add xlat push and inc lea push add push jne inc mov (bad) adcl mov mov leave pop cmpsl xchg pop push and jb adc cmp push adc mov into insb insl sub popa push xor sub (bad) sbb lods or push daa cmpsb sbb sbb push pop orl (bad) or mov xchg pop enter jb pop and leave push es in cltd or sub xchg test add sub and sbb das popl add cmp add add or cld push lcall add and xchg add pop or and fs xchg or xchg arpl dec add fistpll or inc clc out or popa ret popa xchg enter fnstsw shrb dec out mov mov or insl gs jo cmpsl add xor (bad) adc add jns dec loopne nop add dec pop lock addr16 mov pop ja push jg cmp cmp mov pop out jl inc enter (bad) jo inc xchg cmp in jl mov xchg or cmp pop xchg lahf pushf addl stc mov xor pop or fnstenv push mov sbb les lahf mov aas loope add sldt sub or mov pushl and shrl ljmp test push mov add push fs out out jle cmp xor pop mov push cwtl push mov inc scas popl sub xlat add jne clc push xor pop js xor pop das dec dec outsl push imul int3 add sub loope daa and sbb mov inc fcompl cmp outsl movsb es leave push daa and or xor add or sub sub (bad) jmp pop cld pop pop nop pop lea jbe or ja xchg push pushf push sbb inc outsb xchg or cld jp inc es outsl sbb in es push mov xor in je pusha add xchg pmaddwd imul inc dec and dec imul dec xchg ret out mov in (bad) adc mov xchg inc nop sti in jo arpl dec pop or and inc push dec sub and xchg or ss pop mov inc xchg nop js (bad) divb sub inc or cmp jne add int lea imul pop jp xchg or (bad) dec mov push push adc inc fisttp test xchg add sub xchg es push arpl out xchg jnp xor sbb bound dec roll xor out cmpsl andl shrb bound lock jnp adc dec inc jns adc cmc add mov hlt gs adc aas outsl aaa mov mov cmp subl jmp cmp sarb iret inc daa insb dec lds or movzwl insb outsb and rolb pop aad adc mov or jmp pop add add pop mov push push (bad) and jns or mov sub cmp iret xchg push push dec sbb xchg xlat inc imul xor add push or fnsave sub cltd inc cltd repnz aam in sbb and mov mov sub leave jno mov fdivs add mov js xchg sub enter inc adc inc mov cmp or ss (bad) add or adc ret add adc pop lahf insb xor and insb cmp stos pop mov adc testb mov add add loope mov xchg mov mov and jmp pop sbb mov mov jb cmp mov push xor cmp cmovnp push cmp adc shlb imul add jl cmp sti add pop or pop test imul movsl and inc imul test dec xchg pop imul sbb mov adc stc and movsl sub pop or inc das or sbb jle addl in push inc and jl les hlt mov inc adc add mov pusha scas jns mov jns orb in jo or or clc sub and adc mov lods push sbb add aam divl das inc cmp xchg pop (bad) fdivrl mov lods push (bad) cmp jbe cmp (bad) xor push jae adc das ret xlat cmp or mov fldenv loope mov mov xchg lock xchg addl pop sarb pop mov push or data16 push push lock pop mov push enter sahf push adc mov mov xor push push out lret rcrb xchg push cld mov mov xchg jmp add sub adc rcl add or mulb mov cmp sti movsl mov in inc inc test push ja fs xchg nop sub or movsl not fnstenv (bad) mov jnp push lock out sbb pop add dec push enter inc and push inc int dec ds jg cmp clc jg dec mov and (bad) mov pop xchg (bad) (bad) jp pusha add dec mov cli enter xor dec int3 lea rol (bad) mov (bad) xchg xchg dec cld pop fs nop dec cld cld mov sbb pop and loopne arpl outsb arpl das aaa pop mov cwtl mov add daa addb mov or or das xchg ret fmuls xchg cmp sbb adc dec inc call xchg jne cld lcall mov out xor pop inc jne andl push cmp or stos inc inc dec es xchg fadds jmp add inc (bad) ds pop and add cld mov fisubr negl jo rcl and pusha test imul mov mov ss pop cmpsl adc (bad) xor adc shll mov fidivl subb add nop xlat mov ja adc mov xchg inc push mov and xor dec scas xchg sbb push mov mov mov mov lock pop sbb mov sub test and mov nop sbb outsb sub add sub nop clc add loopne push shrb jp mov adc in cmp push daa aad loope inc movl add aam insb addr16 imul mov and nop adc sbb mov test faddp add sti add add xchg adc ret dec pop adc cmp add mov jo,pn adc inc xchg cmp xchg call pop or imul push sbb xchg cmp mov jno pusha xchg sub mov test xchg add mov push ja dec aam push std dec fs or or test inc push test push or cmp jp add jg jne mov testl cmpsl adcb cmp ret cmpsl push adc or xor push pop out adc adc sbb sbb add in or jle add adc aam fs mov pop cmp lock dec xchg mov lcall or test inc xor lods adc fcoms or (bad) xlat push rol enter adc dec or scas (bad) jmp dec ss add into mov dec pop sub leave ret pop mov adc jae xchg xor push stos sbb dec subl cmp mov pushf and xor dec pop in adc mov pop pop mov dec fisttpll fcoms fwait xchg push push mov adc cmp push mov inc (bad) roll xchg add and cli push addr16 cmp jge xor test cmp or add dec adc scas popa mov scas and adc xor xchg xchg sbb mov add sub sbb mov data16 inc sbb lock fbstp imull push adcl roll jno test pusha mov sbb xor xchg fiaddl and or enter and adc mov push jns adc call xor outsb add subl jno pop rcrb nop sub rcr mov or mov addr16 out sub test dec sbb lods push inc mov pop adc push jo pop xchg mov and aaa jp mov sbb roll out xlat das push dec test mov pop add or and add pop cs push add mov mov lea cmp roll loop or inc and pop add xlat mov sbbl testb adc stos and fisubr and fcmovbe (bad) pop xor outsb ss pop pop adc dec jo fwait stos (bad) mov jb mov mov test popf test ret inc imul mov and js aad outsb call xor push fisub mov fbstp aam add mov cmp sbb daa or lcall imul xchg ss es rorb imul add xor or mov data16 and fdiv aad mov inc aam psubq push inc xor pop add push cmpsb push int3 or adc and or dec xchg sub cmp add push sbb outsl add imul je sbb (bad) ds or cli jo jne dec jl int3 xchg adc arpl test sbbl (bad) movups lea push test lods inc lods push inc xor and mov pop xchg mov mov (bad) adc (bad) push mov and add inc dec mov daa pop sub add push mov in lods and adc pop dec or daa add adc or push xlat pop sub pop pop pop paddb push xchg arpl mov dec add ljmp scas or cmp pop and icebp or cmp cmp lock push loop jbe pop orl fiadd or cmc daa sub mov and (bad) dec aaa ret push mov push push test sub nop dec and sbb hlt adc and push jne add pop sub push hlt loop xor (bad) jle (bad) push cmp (bad) je jne scas test hlt jge pop sbbl adc cmp sbb mov or gs and pop test add mov jg lcall mov aas adc push dec dec xlat lods inc int3 cmp dec mov loopne outsb faddl andw jmp pop adc ja xor loope mov inc adc sbb lea stos add fs adc jne cmp ret add adcb inc push jne,pt sbb rcrb xchg sub pop push jbe out jle addl fistp (bad) jo pop jmp jnp movsl mov movsl lcall inc push jge cmpsl pop aas sahf add test adc add dec cmpb lods sub push js sub (bad) mov in outsb pop pop iret mov leave scas fwait cli xor dec sbb sub and mov je jp mov sbb repz xchg mov pop adc aaa or jbe dec insl movsb mov shll mov addl das xor call sbb and or xchg mov shrl stos jne sbb das dec rcl (bad) cmc add sub daa mov cmp cs jnp and dec popa andl pop push cmp pop add sub inc (bad) push or sub cmpsb inc iret and hlt xorb mov xor pop ret popa add into (bad) jge test or outsl jo push dec add push shr jge xor inc fdivrs ds and jns mov in inc mov orl jmp fiadd scas adc inc sbb xchg mov fdivrl mov (bad) stc add and sub sbb jno or xor imul xlat inc sbb arpl push xlat push andl addr16 das fidivl inc daa insl cmp pop cmp clc lods xlat jmp inc clc inc inc pop fdivs iret inc pushl ret jge adc or inc data16 scas es xor (bad) ja push inc sbbb (bad) fdivrs or aad test cmpsl adc leave mov or jl cmp mov js push jno mov inc pop jmp stos js jg xchg ret sub test insl test ja ljmp jecxz jp test ljmp adc inc insb mov adc jb inc adc ret gs push jb bound jne sub cmpsb sub cmp add fwait (bad) xlat mov push and cmp xor pop frstor jge add inc loopne jb cmpsl aad push movsl leave dec loopne dec movsl notb inc add pusha lds cmpsl sub sbbl pushf sub and ret add and sbb iret xor in popf xor pusha and pop leave test inc rolb lcall mov inc cmpsb movsl add rclb pusha mov add sub loopne sbb sarb leave mov and cmp es jae outsb icebp jmp or sub mov outsb lcall mov faddl mov jno mov inc cwtl idiv mov test and lcall adc (bad) aam xor inc push sub xor clc jne jmp iret mov imul mov jns xchg arpl adc mov test push inc jns aas push addb fnstsw fnop mov nop ss inc mov pop or mov (bad) mov insl or jae loope xlat push jl bound or jle cmpl pop jbe push push jb add aaa fdivrp inc jmp and jge or jmp add ja cmp je sbb sub jmp sbb clc mov les add inc dec lahf das mov sahf push dec mov add fisubrl stos mov inc mov inc sub lods xchg pop xor xchg je and adc push mov das push or sarb outsl out mov call and cmp sbb xchg adc and and mov cmp rclb sbb (bad) mov pop lahf push dec imul hlt sarb cmp sub or (bad) lea or xchg and add dec subl jl inc sbb jns sysexit mov cmpsl movsl cmpb jl mov mov inc xchg dec mov mov out sub pop test push or mov jmp cmp or adc and push ds sahf push push aad adc inc gs mov cmp inc sbb (bad) mov dec popl xchg xlat ja test fs test or loopne inc pop jle jle push enter xchg add sub test pusha xor adc pushf mov sbbl cmpl sbbb push xchg or test inc test into daa aad add mov sub gs mov add and mov cld push fsubl adc xorl add sti clc and stos cli (bad) jle adc mov pusha out (bad) cmp je decb cs int push in inc fcmovu fwait test jne inc pop jg mov add (bad) sub test adc ret jle xor lods jmp add fdivs sub gs dec add or popa xor out push push imul mov (bad) cmp add inc or setb pop rclb mov lret lret push add scas mov inc sub mov sbb or movsb cmp daa xor inc sarb inc sub jnp and dec push and dec pop adcl movsl std sbb icebp enter and pop dec dec push push inc dec pop outsb std inc fcoml dec mov das add jo adc inc pusha loopne push sahf inc mov es bound xor sbb jno lods or lock push pusha mov imul (bad) jl aas and dec lret dec (bad) sub push xchg inc repz sbb test cwtl fildl ja mov pop repz and jmp iret arpl fsubrl (bad) dec cmc movsl adc stos sub adcl dec addr16 push inc inc jns mov sti mov rolb jne (bad) and inc loope jle cmpb fistpll dec and mov lds or pushw push jecxz xor loopne stc andl mov (bad) adc add mov and mov cmpsb dec push inc mov mov outsb add dec cltd scas outsb (bad) pop push aam add sub les xchg mov ds jmp xchg fs pop subl pop push ret sub out out pop rolb test or jmp inc cmp mov out mov lods xchg inc pop es es cmpsl and aam clc nop rolb pop adc mov add inc mov inc push pop and popf add popa cmp shrb mov or xchg loopne xor xchg lcall movsb adcb popw icebp ss cld (bad) jmp xchg push cmp negb lea pop and sti cmp jge and xchg ret xor movsl pushf das mov and ljmp and add adc push inc outsb jo (bad) (bad) jo push jmp (bad) fisubl call gs sbb aaa mov add cwtl inc sar cmovno push fidivrl pop jmp jbe jo cmpsl xor out inc cmp out loopne loop adc test sub fs out test leave call push xor or cmp adc add lods and arpl es push lret rorb or push (bad) aam jo xchg sarl add lock push dec fwait adc stos ret clc jb mov push jnp loope es gs into push jmp (bad) mov insl lock shrb push dec or es adc xor add sub std shll outsb lods sar (bad) bound adc and pop pop fcmovnbe test pushf pop xchg js adc add outsl xorb push push (bad) jge std addr16 xchg sbb jl test adc cwtl das cs pop and adc dec sbb or jmp cmp sub xchg movsl out mov cmpsb adc mov ret inc sbb adc adc xor jne xor inc adc iret add ret test cs adc pop fs push push and sbb adc push movsl push push mov lahf mov sbb mov jmp mov in add xor sbb insl adc cmpb loope inc fcoml cmp or fwait (bad) fdivs add arpl or jg sub adc popa loopne int3 daa (bad) fadds rcl add sbb aaa or pop (bad) hlt xchg jns mov and (bad) inc clc mov adc (bad) inc cmp stos or add adc cmp add and push cmpsb mov js sbb nop rolb or xchg mov xor adc lcall pushl jmp adc and jne push aam ret in aam movsb cmp out jmp insb rclb xor sbb adc adcl sub ret cmp sarl sbb (bad) sarb js push pop jg pop jmp xor xchg jecxz xor mov out sarb sub movsb sub add xchg pop mov cmpsl push or mov push sub mov mov and orl imulb dec mov mov clc xchg ret shlb push and sbb push bound push inc jb orl mov lea and hlt pop cmp aad mov sub xorb shrb add loope in cmp pop sub jno js jle dec or pop or ds push sub enter and sbb fcomi ljmp push in and dec sub sub aaa pop and addr16 movsb mov dec push xor jl add sub inc lea mov mov inc pusha fild xor push iret loope cld call xchg cld inc xor push jecxz loopne mov mov mov fs xchg and fadds leave leave mov (bad) enter movsb xchg fisttpl mov and mov insl xchg repz sub push andl dec push pop gs repz or sbb mov inc es and aaa fs mov pop rcll rolb mov and inc js iret adc inc mov popf test adc and movsb push inc adc mov lahf jnp arpl ret (bad) xchg inc popa push xor xor push fs sub mov push push roll data16 cmp mov adc clc pop scas fucomp sbb clc push mov (bad) (bad) fmuls pop xchg fwait sbb push push fwait mov xchg aas sub pop punpcklwd bound pop xchg adc push xor setbe (bad) in cwtl test movsl test pushf cmp and dec and jecxz pushf dec pop stc loope cwtl sub adc inc pop mov xchg mov movsb jns lods add pusha push cmp sbb xchg dec inc bound jns lods mov push lea cmp adc push dec dec pop jbe jb cltd and test ret loopne adc pop inc mov fs dec (bad) lea inc add dec adc ret pop pusha xor dec cltd scas and in mov dec lcall and test sbb mov mov push or jno in rorb lcall pop fs xor push inc jmp cmp out test add adc inc lock fnstsw popa jmp lcall or pop mov dec inc sub sub and sub push pop dec gs sbb cmp sub sub and xor dec insl popa xor sub cmpsb ret or mov xchg add in adc out or daa or cmpl test or lods frstor je and and or sbbl adc in adc fisttpl jmp mov scas push push sti mov pop push lea out push lds push mov mov popa sub inc pop push repz fldl stc push cmp lock dec jne test inc call dec mov pop or pushf cmp cmp clc sbb jbe or (bad) xlat xchg inc jecxz addr16 popf test mov lret or jae xchg sbb pop cmp loope jo cmp mov (bad) or movsl and cmp mov rolb and xor lret jp repz and adc aaa (bad) cmp je or xchg inc cmp xor jecxz pop sbb test ror aad cmp pop lcall enter outsb adc and mov gs sbb adc and cmc sub inc add movsb pop add test aaa movsl fnsave sbb push sub mov out and jnp mov and and mov xor mov push pop push dec dec dec inc dec push add sbb sbb or cs xor aaa aaa xor decb or (bad) aaa inc insb cmp and xlat sub or sbb inc push (bad) lcall incl adc sub les add sbb notb jmp add cmp idivl inc sbb stos mov (bad) dec and xor enter fstl jmp (bad) jmp inc sub cmpsl sbb add pushf add mov or xor cmp sbb addr16 mov cmp loop pop or lock add xor dec mov sbb ret cmp adc shll or or inc adc rolb mov xchg out mov pop push (bad) lahf loopne jo jb negl push and fwait idivl in pop scas mov mov or or clc insb or mov daa fstpt mov ret dec mov out or subl or pop test dec enter add test aaa xor out inc push jnp mov xchg xchg pop add jno or dec nop xor sub or push testl inc push dec add outsl cwtl inc loopne cmp push or push pusha xchg add add mov inc jb outsb adc xchg shr or fnop mov adc adc rcll inc cmpsl push push out cmc cmp sbb sbb jbe jns cmp push xor cmp push jnp lods xchg cmp and pop and or sbb sbb dec add cmp mov inc add rcrl ficom add sbb fsubrl popa adc and test fiadd pop movsb test inc xchg and je (bad) xchg sbb adc rclb push jg das or or add xchg movsb rcl dec xchg inc iret inc rorl je pop mov repnz aaa sub inc mov dec dec pop (bad) mov les js jnp js mov lods (bad) negb js jnp (bad) out pop sub sbb test outsb cmpsb xchg leave dec mov movsl mov or sbb adc dec insb dec or aam pop in push sbbb inc push rcrb inc mov push (bad) cmp nop movl sub fldcw jns aaa je lock in add leave inc leave hlt call lock pop ja rolb in xchg ja cmpsl mov outsl or daa mov add add push insl bound jo sub mov jg test imul insl jmp add xchg adc adc xchg add jae je add ja in sbb adc andb pop adc iret pop shr es or fcoms dec (bad) jne rorb sub int3 cs imul or test popf add cld mov push movsl xorb pop stc jo mov mov pop adc enter sbb and fstpl je or mov xor add xchg lcall div bound jbe sbb pop add sub andl xchg je or loopne or out push loope dec dec sbb loopne xor test or adc lcall gs adc push jmp cmp or lea fnstcw imul inc xchg lea decl push cmp lea stos sahf or and or insb adc dec add adc popf sbb or dec mov add mov cmp fbld stos out mulps mov sbb int mov mov pop jo jb aam pushf inc call rol fldl xchg stos push pusha sub add flds shlb (bad) ja fldcw inc scas ja out add push lcall sub adc pop or mov into das call adc inc sub inc les add (bad) jo and pop or add dec or (bad) mov inc pop popf xor jnp (bad) insb (bad) or fs dec push int3 and inc inc je enter add pop mov cmp or (bad) xor sbb xor push out mull test pop (bad) add movsl mov or sub ja push es and xchg lock cmp paddusb pop lds add push das add lds or bound inc loope nop mov loop mov add add mov sbb mov rcll movsl lea or jo mov and stos push in test mov push mov add push mov and les pop xchg dec cmp or sbb mov add push add or add lret rclb push inc addps sub jl adc adc test jmp mov shrb lahf and test cmp mov aaa xor mov dec push pop add bound (bad) fist fadd sbb push sbb mov mov pop mov inc ja andps or mov add ljmp rolb add add add add add or or or mov mov mov mov ss sbb cmp mov insb loop nop pop in (bad) in (bad) mov inc jmp jmp jmp jmp jmp jmp jmp mov cld (bad) jmp (bad) (bad) fdivrp (bad) fdivr (bad) fidivl es sti scas cmpsb test call call dec mov mov insb loopne dec cmpsb repnz add sahf leave push push daa and les adc push shr out jl cmp push jl hlt adc dec repz xor int3 jl movsb lods mov sbb mov data16 xor push or adc inc out sahf negb inc insb in adc idivl add xor sti into nop or mov test clc es ds inc push push push iret repz push push add enter jge pop loopne sbb push out adc lods fs or jl in jecxz fidivrl mov mov mov mov add add or nop pop pop seto nop scas mov out or push mov dec sbb cwtl add pop repnz add nop cmpsl dec add dec nop add inc gs out cmp mov mov incl and sbb gs pop insb imul fimull shrl mov add movsb imul sub (bad) orl or aaa popa pop push or pop dec sbb movb lods or mov (bad) rolb inc dec pop jle adc add adc data16 test cmpsb mov pmuludq inc mov imul pop adc mov push data16 fmuls hlt or inc loop xor cmove pushf repnz dec jb push dec popa je xchg inc push push addr16 dec fcmove les adc add jmp in mov or cmp loope rcll sbb in pop add or (bad) in cwtl aam ja or push popa pushf pop nop subb pop and cmp xchg mov xchg dec gs popf fs inc or or les inc push inc xchg push or add pop add dec add imul xchg lcall add dec (bad) or inc into mov iret jns sbb add call fwait or data16 mov hlt mov cmp fs push pop mov add lsl or or pop xor loope aas or mov add shlb or add add fwait or cmp sub push dec mov push ss jl,pn jge add sub add add test lcall test out inc test test adc sbb sbb addb add aaa mov mov test jl mov cmpxchg adc mov mov (bad) sbb and and mov popf lock fild mov push mov xor cmp push clc test repnz incl popa adc inc inc inc inc (bad) mov into std mov mov (bad) mov pushl mov pop inc push inc push fcompl push push jo mov int jns cld and push imul idivl adc ss mov xor out repz jno push hlt push repz fisub push push xchg sbb xor inc mov dec xchg sub jne pop lahf out fisub in pop out mov push sub push test adc mov dec js test sarl push lock push add push (bad) imul push pusha lods or fs mov test (bad) xchg bound rclb or cmpsb fdivl outsb data16 imulb jbe inc scas es dec dec push cmp repz cld insb push mov lahf data16 sbb push mov and push (bad) push cmpsb fcomi sahf data16 sbb ds shlb nop arpl push push lret into inc pop and mov in cmpl mov aaa hlt ss push or out add jbe cwtl rclb ja adc into roll push or rolb insb mov clc push pop mov inc addb push or add ret sub mov cs cmp les dec add pushf mov in rolb fiaddl sbb jb xchg ja and or fdivrs jge lock test xchg push cmpb add dec cmp mov add push xchg push sbb in sub pusha sbb xchg and leave push sbb lds mov mov push cld enter inc rolb add pxor pop sub leave fiadd das mov (bad) setle xchg adc push lock addl or mov push stos cwtl (bad) or or pop call rorb inc insb inc pop add adc in shll dec add or mov (bad) push dec icebp add inc pop pop cld pop call lcall fiaddl dec pusha fs xchg outsl cwtl fs xor fimul cmp lods mov push and sub add out mov mov sub adc inc clc mov cmp sbb adc or inc into inc out sbb fnstenv xor push or dec and mov adc sbb pop je je and xchg dec or jp pushf and test mov xchg or or and xor adc outsl xor add sbb xchg xor daa test out mov shlb out sahf push pop gs jp jns out xchg mov loop ret jg lock jo or call fs (bad) clc push cmp mov push cld mov adc mov repnz test mov clc lcall fdivl out push in dec push jl sbb lahf ds jo scas push adc mov cmpsl je pop pop or cmp iret leave rorb jnp pop and mov push jbe jg xor mov ljmp pushf fmuls leave pop in iret and inc and test cmpsb lea xor fwait repz mov cmpsb outsb cmpsl pop dec or cmp loop inc push and jo outsb lods dec sub xor mov leave push and popf sbb push add adc push adc pusha les push and sbb loop ds cwtl sbb enter mov or add xchg in nop adc lcall lods cltd aad into sbb orl aad sub xor dec xchg (bad) cmpsb mov jne add out inc xor sub orl jne orl mov imul pop (bad) mov sbb fwait sbb aas sub ja push push mov or cs mov test jb daa inc jb or pop imul xor or fcompl add xchg daa push jb mov push inc push inc mov push jo daa or jo and popa clts ret mov xchg dec outsl nop jg push nop xchg daa dec push jo imul cmpl mov (bad) mov cmpsl adc mov sub int sbb fs out jmp mov test out xchg dec pop pop add mov inc jecxz test add adc sub jns lea and xchg int mov or xor cmpsl pop jecxz adc mov js push cmovo imul cmp mov adc ficompl inc aas add and cmpsl testl cmpl loopne add cmp mov and ja pop xchg sub xlat add sbb mov push test adc out inc dec add xlat mov in push sbb fucomip push or imul test insb int3 push dec adc (bad) mov add incl sub push or and (bad) testl ss fadd loopne adc inc call jmp push add subb mov jmp (bad) and nop lock rorb add lea arpl and jle orb aad loope mov jg dec dec jne das push cmp cmp mov inc and (bad) jmp fimull push or mov dec cmp add add fbld or cmpsb imul cmpsb imul aas push sub scas push push rcl inc mov sub pop add inc or sub fidivrl adc inc and nop inc cmp rolb cmp in sbb add sbb push inc mov or je into rcl mov push dec je ja inc aas popa jl test cmp cmp add sbb dec (bad) lret mov (bad) xor dec mov add sahf cmp mov (bad) mov sub adc cmpsb rol adc or (bad) or fmul add lret sub xor fidivrl pop cmp dec out xchg dec das cwtl les (bad) jmp or jmp mov mov sbbb sbb jb add or jl imul add and call jp adc lsl gs xchg dec mov es inc jl xchg sbb sub adc inc mov add push or add xor dec fildll xchg ret addr16 push jp imul cltd xor lahf xchg mov jo,pt add bound pop xchg shrl jae xorb sar pop (bad) or add dec nop stos mov inc inc daa and cmpsl loop adc int3 sub aaa (bad) push mov inc shrl ret pop push insb insb xchg mov mov lea fstl imul xor dec pop mov lods or enter adc sub stos xor sub test jmp push sub imul or loopne insl test adc rcl xor push sub add pop xlat dec adc and outsl dec or adc mov mov (bad) jbe (bad) test cmpsb neg xchg add (bad) jb mov add mov add daa fimull cmpsl add hlt nop or call xchg mov cmp dec add inc inc sbb jnp ja add js and pop sbb mov sarl jb jle jle dec movb adc xor inc and dec mov pop inc enter fucomi push negl inc jge jne push rcrl or add sti xchg and sub rolb and sub sbb add cmp popl mov sub push movsl jmp testb jmp push mov (bad) sahf or sub mov pushf clc lods inc and pop add mov mov pop jge subb mov aaa xor adc dec push icebp js pusha les adc inc in sub ret jp scas add and cmpb (bad) je dec (bad) mov add cmp adc inc mov cs mov in jmp popa xlat (bad) adc mov lea or cmpsl (bad) cld inc jecxz pusha mov adc jmp or subb (bad) mov or pop lret xor mov add jl test cmpsl sub out adc and mov xor ja mov adc mov mov xchg pop lock imul aas jl jle inc jo insb loope jecxz xor sub pop rcl mov mull fcomps loop sbb mov loopne test and and cmp aas jnp push mov test jmp mov call js sarb popf sbb test push (bad) cmp jle jne and (bad) cmp mov shlb test subb jmp sarb sbb sub pop lock in sbb dec rorb scas roll push jbe imul push and in and push push pusha sbb lock sarb scas inc shlb test cmp mov lock add or or lods xor (bad) mov ss jns pop push inc leave adc sbb adc push pop movsl test sub jo lcall jne das imul sbb sub mov or mov das fdivs test jb pop push lret fsts xchg push pop or orl xchg inc jo jl mov (bad) divl mov ds push fist aas call jbe fdivp add je out ds aam and push in or test test adc sub mov dec xor es ret push sub pop (bad) dec stos (bad) jbe jge mov sub or xor mov mov xchg sbb pushf mov es cmp sbb cs test lea enter add fdiv mov sbb add cmp je jmp in in repz xchg xor cmp sub into adc pop sub or bound push insl mov pop pop imul mov add pop xor sbb andb jge mov mov cmovae xchg sbb xor push mov rolb and cmp call (bad) jne mov sbb shrb xor push sti fadds pop pop mov mov cs ja jo pusha sub stos add loopne xlat sbb push push push cmp out pop nop lret fistpll and (bad) ficom inc pop sbb pop fdivs mov push jmp push cmp nop lcall xor push pop lret adc fimul sub or pop loopne stos xor xor ret fdivrl das or daa add nop sahf sti movsl mov cltd loopne jns jnp pop sbb sub inc nop imul mov out popf fwait add stos (bad) lea dec or xchg and jp and xchg push cmp inc xlat xchg fldt fldenv push loopne fstpl jmp inc and sub fnstcw out ret arpl jns sub sbb push sbbb pop sub popa mov add adc sbb scas sub adc sbb or cmp in jmp sub mov push adc adc shlb addl loopne popa rolb movsl loopne jo xor cmp mov js sub mov dec out push push push push mov inc inc sub cwtl mov and cmp (bad) in movsl insb bound jo sbb sbb sub add roll xor mov push xchg add add or dec jmp xchg xor push pop mov call imul ljmp dec sub add mov add pop jno dec arpl dec rorb and int push adc xchg add (bad) xor insb mov roll and int3 dec into xchg scas push push jne aaa xchg sbb mov jne sbb cmp sub lahf int3 test cwtl push mov clc mov inc ds (bad) xchg or fcmovnbe enter or xlat (bad) inc cmpsl sbb add nop fisttp cmp pop jp movb adc sub lahf and pop xor dec call adc aam insb cmc sub and mov sub mov or cli jmp and or loop rcrb mov je sbb xor daa pop dec jge mov jg arpl (bad) push enter pop outsl je test adc push cmp sub pop add mov ja test test or ds add xor cmp pop mov sbb push mov or or loopne xchg or and push or or sub adc cmp or and mov pop jb xor pop and mov cli and push pop inc dec js scas notb outsb adc and mov jb xor stos scas flds adc or dec adc add rcrl cmp jecxz fwait (bad) push adc push imul sbb xor jno jb pop insb not add or (bad) xor imul jbe and or push enter insl rol sbb add mov fisubrl jmp xchg adc sbb cmp mov add mov add outsl inc push add sub sub pop push (bad) push test lret mov aad (bad) push pusha test clc or dec xchg pop mov jmp (bad) int3 in clc xorb (bad) insb cld das dec stos movsb aad jmp aas jnp dec or sub dec loopne push cmp inc jmp dec inc push mov push lahf dec sarl dec xchg adc ja bound clc dec jbe inc aas jo in sub hlt imul push xor inc and adc es pop (bad) mov iret pop loopne out les addr16 pop inc lea gs pop jge pop (bad) out or data16 or lock lea pop into xchg add nop fwait and jge push rorb and lods ret ja jmp pop (bad) or aas roll (bad) inc pop mov sbb xor pop add outsl sbb ret (bad) jns sbb lock sbb repnz jge andl cs sbb inc sbbl je and push adc cmpsb imul in xchg orl pop jg ljmp dec out pop jmp dec mov or or adc cltd mov ret cmp push pop xchg lret adc pop je sti xor sub pop cmp cmp or sbb and cmpsb popf mov add ja dec fadds push stc xchg in cmp fucomp push or test popa fs pop or (bad) mov fs je (bad) push jl cmp test out jl dec aad ss pop cs jmp sub push in mov xchg cmp fstp pop adc fldl or sub mov out pop mov sub and push das sarl popa arpl add fsubr insb jge sub jae cld push sbb adc cld fs mov (bad) add outsb lcall rorl mov jecxz inc mov push addr16 or pushf test outsl insb into mov jecxz inc ficompl gs aam scas (bad) adc es int3 inc mov mov xor push fdivrl je call jg mov jp mov and xchg clc xchg ljmp xchg adc in arpl or adcl sub xorl push push lods je sbb xchg jne cmp mov xsha256 cmpsb shrb cmp (bad) jecxz sbb orb sbb adc aas add mull lret ds mov push xlat fmuls arpl je mov mov jle jmp push cmp loopne test popa push cmpsb imul jmp loop inc fwait sbb pop movsb movl movb push pop pop pop fucomi sub adc push pop add jp push jbe sti jmp (bad) xor imul xchg addl lods add (bad) pmaxub sub call xor xor fistpll push add xchg adc lcall hlt xchg fmul dec push sbb jne cmp pop sub xor imul push push test test push xlat and testl mov xchg adc mov (bad) xor nop sbb and mov (bad) and or insb xlat jo dec sbb imul jle mov pusha pop mov and pop dec or pop mov cmpsb loop and lds sub aas or insb jecxz sbb adc fdivrs mov je push and (bad) cmp fadds outsl adc icebp dec js arpl bnd orl rolb pop xor push cmp jns and mov inc or adc data16 push cmp shl movsb mov (bad) xor mov mov je sbb ds mov sub jno sbb inc test rorb sub sbbl dec dec push xor ret aaa xlat mov sub xor arpl add std xor or in and cmp test and and jle jne inc cwtl or inc jmp jmp cmp cmpsb mov fbld xchg jge inc add pop sub or pop pop ret daa xchg (bad) roll jne or push ficompl or and push mov pop out dec cltd out pop imull or ret cs xor js adc je xor mov (bad) scas inc insb insl popa daa mov dec aaa push inc inc shrb rolb mov jbe roll and ljmp pop inc jbe jnp jne xor imul and cld mov js push imul test jns js inc inc mov or mov dec mov inc add andl push xchg or iret cli dec imul mov xchg nop (bad) jge (bad) mov add ret mov dec adc into loopne sbb mov adc and inc dec sbb cmp fiaddl mov push adc adc push ss cmp xchg or dec mov mov outsl fs sub scas out imul cli push and pop push mov inc jmp shlb nop inc xor or jmp push pop push lret ja cmp das pop dec xor pop loopne mov adc loop (bad) rolb dec mov shll or mov xor inc dec add aad and xchg and add push inc or pushf and pop xchg aam sub cmp (bad) or cltd pop sub jmp and cmp add dec inc mov push imul popa mov and arpl sub scas hlt adc aam cmp fisub cmp cli clc dec and mov push bound xchg dec push cmp push lock ret mov jge repnz jne mov dec les sbb xor or (bad) cmp dec loopne loopne nop pop cmpsb testl mov movb nop or push mov pop fbld sub mov or outsb dec add add fidivrl adc mov inc sub xor cli ljmp adc and fwait or mov mov adc pop or fadd outsb enter sub jno sub sub aas xchg push nop or (bad) (bad) aam pop add hlt (bad) repnz nop lahf lret mov aad mov (bad) fmuls mov sub rolb test (bad) mov imulb mov sbb mov movsl outsl shrl pop push insl pop mov enter mov sub mov (bad) and xor inc test cmpsl cmp add or cmp inc pop mov xchg clc mov mov mov or and dec mov pushf mov and (bad) fstp xchg inc imul mov jg (bad) (bad) jno or adc mov push loopne and cmp je pop addb push sbb mov inc pop bound sub and es sub outsb inc xor and jmp mov adc cmp pop xor imul mov add mov dec adc popf and nop add pop fwait mov out imul mov dec inc mov adc bound xor mov or mov loopne mov lea xchg pop push jl ja push xchg pop cmpb and cltd add pop push stc (bad) rcrb mov cwtl popf movsl xor add out dec pop je mov test popa or pop mov mov je jp cs testb or addl orl aam add out and mov scas orl or adc cli pop fsubrs das or push popf inc mov adc push sbbl pop dec pop add pop inc inc outsb cwtl and xchg sbb lret cmp mov or xlat add roll inc ret sbb cld insl pop insb pop xchg paddb pop push je pushf int dec fwait push popa push xor mov adc aas dec scas jo adc je mov push mov loopne fbld nop pop push add xchg enter mov sarb clc popa inc lcall rol out mov jo and xchg lock add add push rolb mov mov push or jmp mov leave inc fwait dec mov enter push cmp cld sub push outsb adc (bad) rolb enter cmp in fistpl outsb pop je mov movb ja mov pusha add push push (bad) push inc inc push movsb cmp bound lret mov sub mov ret outsl push add push or mov fnsave aas mov xor cs je mov je or pop pop aam aas or nop cltd out sti sbb mov (bad) mov dec in fstp nop and je mov fwait adc idivb push jo mov leave dec orl pop or cs pop pop or pusha pusha cmp data16 data16 sbb out push mov les dec mov dec xor sbb mov xor push out sub xor sarb dec adc stos mov sub mov and or xor mov push push sbb adc or push mov sarl mov leave je rcr or mov push and adc pop pusha push mov adc (bad) pusha clc shlb mov pop das sub dec or push call jb inc push inc mov pushf mov mov inc jecxz xchg mov dec dec dec xor fwait aam cmp xor mov push jb cmp dec and pop dec bound pop cmp jg xor mov fnstsw ja dec aad adc je adc (bad) and push add xor push adc aam sbb dec lods inc std loopne add inc clc sub aas scas jne test out push push in push cs outsl test push push and push das bound cmp cmp fwait and fdivrl sar add loope nop scas inc pop sarb mov insb (bad) dec lcall and rclb aam insl in sbb mov sti jne mov pop pop cmpsb xchg pop shll dec dec roll inc call inc jecxz out ja pop cld add push popa inc mov sbb fs pusha jno xchg push adc xor mov mov (bad) dec outsb push divps or add mov mov or jg das add add dec jb add cmp or mov cmpsl adc inc cmp xchg jae mov push mov aam iret scas xor aas enter pushl mov sbb js add and lods je lock add xchg test aad stos movups jl add in dec or imul lock add into cld pop andb or ret rcr xor add incl daa test into out xchg push sub pop sbb or bound adc fs push cmc hlt pop lock pop imul pop stos pop daa in pop test add adc inc sti jb xchg mov inc adc in aaa and xchg pop push stos fimull loop sub xchg dec popa jne js out mov adc mov fcmovnu fmull fildl ret jle ret mov pop or xor mov clc sbb adc fildl (bad) scas push mov adc or outsb add outsb or push divl decb inc push pushf (bad) adc jns je ja mov mov push insb push mov addb jecxz push cmp je sbb mov and add add add add aam push repnz gs push adc dec jb mov idivb test rcrb push les jno mov xlat add mov rcrb cmpsl xor sbbl cmp (bad) leave lock or ficomp lea bound sub notl adc loopne mov std cmp jge mov cmpsl ds cmpsl aaa hlt mov cwtl add cwtl jo dec sbb (bad) push inc daa adc or (bad) add sahf dec inc inc mov (bad) dec and xchg dec dec dec add mov jmp insb add push push test loopne or dec test inc xor mov add pop mov xchg mov add jb mov stos dec sub sub pusha mov mov xchg rol sub jge push imul or imulb dec (bad) cmp (bad) aaa call jge mov push adcl in push xor addl xchg adc xchg js adc jg mov outsl es dec xchg sbb mov push outsl or sbb xorl ret jne aaa or push add iret jo loopne les fild jecxz inc add add je sbb (bad) das jno and data16 inc push mov adc (bad) outsl xchg or les ja fldl add lcall cmp or and pusha xor jmp daa int3 fiaddl push add ja xlat or dec cmp add mov test (bad) out stc addr16 ret jge jmp push fsubrl dec (bad) fsub push dec pop sub jg inc (bad) adc enter imulb int3 push pop push add mov xchg test ja jmp lea mov mov push mov cltd sbb xchg nop push inc dec test je adc lret xchg sub pop add or loopne sub lret icebp xchg and push sbb jp,pt push add js or sbb mov pop adc js jne xchg leave std sbbl imul aam roll hlt add movsb ja pop test movsb mov clc mov js iret mov pop int adc ljmp or cmp hlt and adc sbb add mov lods inc push nop int3 and cmp sub push xchg ss add ret push inc in push cld push ret sbb and add cmpsl pop or je cmp adc stc jle or or add adc loop mov movsb dec mov jmp push push hlt mov imul or jae iret cmp bound mov pop xlat cli mov cwtl cltd xor and cld rcrb dec add add add pushf enter fwait mov in orb int xor fiadd nop add iret (bad) pop jle cmp add adc or add pop mov pop lahf lock je jo inc shl (bad) jbe insb (bad) rorb imul adc addl in in push sub or roll js adc cmp in and jle pop mov jnp or push jmp push sbb or jge push pop dec jno push or or lcall sub push add push pop enter pop stc lea jbe sbb push lret cmpsb adc xchg lods adc fsubs ret dec mull push dec mov jo pop and test aad cs out sbb bound mov inc jmp int xchg and ljmp or add inc mov and sub dec mov and and nop (bad) sub or movsl ss (bad) out and mov push jo (bad) sbb ret and mov jo aas mov pop loop aaa cmp mov push mov int outsb xchg insl rclb pushf jne (bad) jmp es iret jg jb adc sbb ja cmc fsubs sub add adc add aaa in (bad) or sbb cmp or movsl inc (bad) (bad) adc fsts (bad) in sub sti cmpsb jmp dec push add jle push (bad) jmp out loopne mov push pushf insb adc inc popa les inc sbb cmp movsb mov lock and fs mov hlt popf sub scas dec popl adc and mov (bad) xor (bad) in out xchg cmpsl add (bad) in or je test fisubl jmp aad clc jnp add xchg or punpckhdq cmp aas mov (bad) cmp cmp jns xor ja pop mov xchg andl mov inc movsl mov aaa cmp or xor jo jo test adc fcmovb popf adc adc inc mov mov sub or shrl adc push pushf (bad) adc inc add push mov sbb adc (bad) nop leave push movsl test sub jbe and movb je cmpsb and or adc js jp and std sbb sbb xchg xchg jle add sub xchg iret push dec mov xchg xchg push pop or pop aam shlb jno mov ja or jne inc push xor jg pusha movsl push dec mov adc lods push hlt cs pusha stc fnstcw inc enter daa sbb and sahf adc or dec mov inc sub popa loope imul movsb or hlt (bad) in in or inc adc add dec and dec add ss pop and movb xlat mov xchg mov or inc inc aaa arpl (bad) ret addr16 sbb jbe test xor add mov adc outsl pop mov cmp push mov jns scas pop push clc mov pop xchg dec fwait jne out push cmp pop jge lcall push push ret or push sbbl jno in cmpsb in adc cmp push in add or fcmovbe enter push movl mov jns pop cmpl sub ret ret bound or je aam ret pop aam push leave or rcrb dec or jb inc scas mov imul sub shrl rorl adc shr pop dec pop adc mov or leave ret adc push cmpsb fsts fild (bad) fwait sbb inc lahf add in pop adc add addr16 and (bad) adc out sub or inc sbb popf les inc mov add gs push and outsb adc xorl push movb push aam push cltd sub mov mov inc pop outsl mov ret js into jle je dec mov or imul adc adc mov out jle adc or movsl test sbb xchg jno das je mov or mov bound jne testb and andl push or mov fildl in inc rorb je add push inc mov loop cwtl insl xor sbb addr16 test and jp jb pop lods jae jmp inc jo mov cmpsl popa pusha loope fs hlt daa or cwtl cwtl push jo push mov bound adc push mov mov push mov leave or (bad) jne inc and movsl push lods mov inc daa mov cmpsl add push (bad) jmp push lcall mov (bad) (bad) in inc (bad) out pop in mov push ret xlat push in xchg mov xor inc lahf into dec sbb cmpsl (bad) insb ret fcomps adc pop cmp daa jmp xor inc add jbe adc adc lock dec daa or mov and add pop inc in inc cli sahf test sbb sub (bad) mov jmp dec out add test loopnew add adc mov sub cmpsb js xor push or adc lods dec lock clc push inc test loopne stos sarl add push mov mov push cld loopne imul loopne insb or sbb setge add cmpsl push xor enter xchg or sbb sbb sub xchg and lods xchg xlat jge arpl (bad) cmp test test sahf adc sti in mov clc fstl movsb aaa pop test push fs dec xor bound and jle inc add jl xorps add and xchg fsubs ljmp add fiaddl test enter daa or push fcoml push mov xchg sub sgdtl push add ja mov adc dec out add and fisubl xchg mov cmp inc sbb mov xor sbb push rorb add jb or out xor je add inc adc pop pop je aam sbb jo fcomps mov jg sbb inc ret jp mov pushl xorl cmp jge xchg test jnp das pushf clc xchg xorl xchg sahf and jle xor sub sbb je xorl adc inc and xchg inc adc xlat cmc jbe arpl enter fistpl les js add mov aam push shr mov jg add jns and push add insl cmp push add movsb xchg stos insb ljmp lock dec or xchg (bad) repz xor xor and xor fwait push dec pop add add sti add call or xacquire add test cwtl cmp out jl push fcoml add lds lret xchg mov sbb dec push push dec fcoml int3 inc push das out mov sbb mov add or add and jne jae cmpsb mov pop out mov js mov es xchg sub fimull sbb and pop push push bound inc (bad) mov adc daa rclb roll cmp sbb icebp inc adc inc les movsb sbb mov cmp and or insb inc or movsb adc inc pop sbb xchg loopne jmp leave sbb add insb xor fimul dec cmpb outsb outsl or mov inc sbb dec and sbb movntps inc and nop popf or xor adc sbb lods cltd push xor loop mov clc mov je and ffreep cmp dec (bad) xor inc fsubrl addl jne lock fsubrl ret cmp cwtl jae (bad) lods push rorb jo push icebp aas mov add mov sub test adc adc orl ljmp imul jbe or cmp bound and add fs mov adc mov pop pop scas lcall aam sub inc movb xor pop lea mov stc out and (bad) call cmpl or lods leave fsts hlt and xchg rorb cmpsl sti cmp pop and mov cld push jne (bad) jo pop pop add xor arpl fldl and pushf pop dec cmp in cwtl mov hlt pop mov adc enter aad loope push dec int outsl lret icebp jo mov xor or in jbe,pn (bad) pop jge enter dec mov outsl sbb add ret or inc out mov sbb xchg and sub sub add cmp loop fisttp cmp adc mov cmp cmpl xchg add aam sub pop push mov pop dec dec ja jmp jae ja sahf jle pushf daa scas notl add mov lahf shr inc add imul sbb push dec cmp setle cmp lcall inc dec aam adc adc cld test arpl and into dec inc daa rcl push and mov inc sti lods cmp ljmp or mov push mov cmp inc lock pusha pop lcall pop add loopw psubb aaa in cmp xor loopne pop and mov popa add inc adc pop jle add (bad) mov fsubrs cli loopne (bad) xor push aaa rclb xorl negl push dec imul sub dec push jns mov or xchg jbe xchg inc mov call and std add mov and jbe movb shll addb push and test cmc aad pop sub ja push jne icebp mov jno mov cmpb add pop mov mov pop push jno mov sub xchg cmp inc add pusha movsl cwtl jl or pop add inc pop div pop add (bad) loopne cli (bad) popf cmp ja pop daa out (bad) sub mov mov scas daa leave jns add (bad) or jle sub lods (bad) jle addr16 fs add jmp sbb or cmp dec inc push test gs push gs push adc fsubrs pop lds js xor dec sub cmpsl inc push sub mov int push or cs xor add notl xchg stos mov cmp sub push jnp jno inc push daa insb ja imul aam xchg sbb mov aam sub inc cmp fisttpll push pop sti inc and lods or xchg insb sub pop subl dec bound cmp jne xchg call jmp sbb lods int es mov enter test in out cmpb mov (bad) adc sub je xchg dec or mov js dec push cmp xchg mov add int3 mov mov jge adc sbb jo xchg adc inc rcrl dec fdivrl iret xor les pop adc mov push fimull xor testl jg ss or loop les jne scas inc sub loopne daa push push fsubrs xor pop xor push test mov ss aam or pop cs sub cmp ljmp xlat or pop cs test adc and addr16 lock adc mov adc loopne (bad) call cmp cli push push jmp sbb xchg sbb or movsl xchg mov movsl cs pop stos sub pop test add adc push sbb add push cmp dec mov fwait movl sub pop dec jmp lods aad cs scas jo push mov lcall sbb jb enter test inc cs fstl pop (bad) pusha push out lods jne es ffreep cwtl loopne movsl push mov jne and or mov inc mov (bad) mov pop sub or push icebp test mov xchg scas or mov sub shrb lret dec sub test (bad) adc add icebp jbe xor add pop pusha pop adcl xchg cmpsl sub and sbb mov pusha mov sbb dec cs and scas adc cli rcrl mov or shll mov adc or loopne jg adc mov loopne jmp mov adc mov cmp orb jg fucomi mov inc pop pop xchg xor sbb add insb into jg push mov rolb in jne push movsl sarb aam loope clc dec popf or mov cmp arpl push shll xchg mov mov sbb dec insl ffree jae pop (bad) jne mov dec enter enter adc push push lods repz mov add shll dec insb cmp add push or sbb and mov adc fistp xor dec ss inc test xchg inc pop insb idiv mov aas (bad) jmp mov sbb fmuls mov lods test and arpl mov stos flds or add lods imul pop cmp jle lds cmovae aas and dec sti fisttp add sbb decl loopne cs mov movsw daa xchg call cmp and mov sub loop sbb mov pop sbb add or and stos outsl xor jmp mov lea adc lea insb cwtl and pop and xor dec push mov and pop addb es push ja lock push orl loop repnz or lods lods clc sbb addr16 push sub or sub or and jg push xor stc dec jbe stos adc insl nop mov add inc loope push sbb push inc in sub je orl push rclb call or cmp in mov dec or or (bad) xor dec adc and mov add and sub je add sahf mov adc ss and pusha sbb mov xor add or adc (bad) jp mov dec xchg loopne mov scas inc call into push inc xor mov jp adc rclb inc test pop add and jmp xchg in push inc adc dec out jnp inc push test or pop ss cmp sub inc pushf mov dec imul inc test or mov push inc je and xorb lret fwait sarb or add data16 es out xor inc out xadd lock mov cltd jge push sub insl pop xor sub xchg sbb outsb sub add or xchg shrb add mov aas push movsb sbb popf in fwait push aad mov fwait inc adc push xchg mov xchg inc (bad) or push add mov sbb adc fidivr dec mov and add adc insl mov and pop dec xchg cli sbb test testl les pop out daa jmp and jge jnp lea in adc add test pop pop aaa loop jae inc (bad) sub cmp or mov and ja or popa jne loopne andl pushf pushf lea push scas or push loop dec jle ja sub repz jge xor aaa cmpsl or inc test pop mov incb jecxz sti (bad) mov daa pop lcall jl sbb dec enter cs xlat imul add dec sub add or rcrl xchg adc leave int push mov test mov adc mov lods inc pop repnz xchg pxor sbb shl pop add pusha fdiv cli xorl lds addr16 aaa xchg xor scas orl dec and push popf or and inc jno pop sub notb add insb out lea xor scas test add add outsl je out jne (bad) out and xor mov scas mov ljmp xor in xchg xor es (bad) repnz xchg mov adc jne int3 ret les or aaa dec push xchg icebp ja or push or loopne pop je sbb mov xchg daa and cmpsb arpl and sbb ficompl movsb pusha sub (bad) mov mov dec mov (bad) fcoml add push inc nop cmp sbb xor inc mov cmpsb xor mov inc xchg aaa jmp jmp je xor mov adc loopne or pop mov imul inc je std sbb adc push arpl inc mov xlat icebp cmp nop mov imul xor jge xchg clc mov xlat lret mov sbb insl ljmp (bad) loopne inc sbb or or cmp and inc jo cmp dec cmpsl dec xor dec clc push inc add pop push outsb inc (bad) (bad) adc sbb bound pushl add cmp add int3 adc rcrl or adc inc push inc push sarb push xorl and adcb dec test fs dec imul and in or mov sub std js add adc cmpl pop pop scas ljmp and cld adc test fnclex mov sub sbb insl cwtl push popa dec nop ljmp gs or popw add mov test adc inc and inc push test adc pop outsl mov mov mov das lods sbb adc ret aam ret xchg fisub cmp or adc scas js or pop adc je cmpsb or rorb pop cli ljmp das add (bad) aad imul popl cmp lods daa insb not sbb mov jmp outsb and test push jge mov (bad) pusha inc rcr inc in (bad) adc adc into cmp test xor mov or lcall jmp fwait das push jmp pop add dec shlb sbb sbb cmp and or and inc ss cmp jne fwait mov mov push push xchg lock add loope jb,pn add sbbb push mov (bad) out lret cmp adc js fs inc test stos mov xor sub add jl cmp sbb xor dec dec xor mov sbb gs jne cmpsl dec jl adc subb repnz sbb xor add inc (bad) shlb addr16 jecxz or pop push ljmp push imul mov and sbb inc xorl loopne fcmovbe dec mov inc xor mov hlt add add push inc xchg test daa fnsave das mov insl xor and adc or adc push mov add pop les sbb ja or adc test xor test xchg cmpsl pushf push xor scas mov xchg sbb adc movsl jnp adc movl shll loop das loopne ljmp pop inc sub popa push push incl adc aad and insl pop (bad) fild mov mov add cmp mov ret push sub push push movsb pop pop addb fild lds call xchg add and inc fsubl add sbb mov sub push in push xor mov jmp cli inc sbb lds call jge sbbl in push jmp data16 add call dec mov jno rclb rcrb cmp insl mov mov sbb fldenv mov xor aaa or rorl sbb dec paddsw mov pop jns mov pusha pop inc fwait inc test and add ret pop bswap nop leave pop fwait in push enter xchg push test lcall mov test adc adc dec faddl jmp les xorb pop dec roll jae insl jmp in mov pop loopne mov rcl pop das cmp aas sbb mov subb das dec xor lock pusha lcall xor jne bound sbb push push clc adc out xabort insb push pop add xchg dec xor cmp mov cmp ss jl add fmull lods push movsb mov sbb lahf push xorps stos lea cld lahf popf cmp dec popf pop mov inc inc mov pushf or pop push mov and xchg je push das xor or pop aaa push jnp add mov add (bad) mov enter cld sar xor push mov mov mov adc daa (bad) push in sbb mov inc sahf aam sbb stos add and and push push lcall dec fwait nop fidiv es pop push adc inc add add rolb add push jg add andb and jno pop add movsl inc hlt outsb test call ss cli lret xchg movsb cmp xchg sbb dec sbbl aam pop pusha aaa adcl mov (bad) and rcrb or cmp jo xorl int3 fldenv stos shl or sbb pop inc lods or (bad) adc inc add inc push and adc lods mov push out stos sbb dec inc mov push sbb adc icebp orl mov lret mov cmp push sbb ret les adc mov mov dec sub aam fstpt xchg or mov pop ret adc adc stos add movb scas repz aam push jmp cmp xor xchg ficom dec xor (bad) icebp adc out nop sbb cs cmp pop push popf rolb dec or or jae push mov and sahf mov imul adc movswl jmp sbb jle add ss or add sub xor clc cmpsl rcl mov int3 push xor adc push jns mov pop daa cmp movb scas xor or mov mov popf icebp or bound in and push lods (bad) test inc mov xchg mov push add push rcrl insl test inc int3 movsl xor movsb addr16 pushf cltd in bound dec or test icebp movsl sti cmpl mov testl (bad) mov mov data16 adc dec mov in push enter xchg test push icebp jl cmp rorl and push jnp icebp mov xchg adc lods jge mov push mov and rorl xchg xchg ds je ret adc pop jo adc test cmp call loopne pop and sub push jb ret movsb jb xor pusha aam xchg inc sbb pop into mov lea pop (bad) mov orl sbb xchg mov inc xor lea repz test fnstcw test mov mov icebp sub jb outsb call aaa ret pcmpeqb aaa orl and imul sti sbb jmp adc push sarb or enter shr mov fcmovnu mov pop inc nop push sub add in aaa or divb adc dec push pop xor (bad) fstl mov scas sbb push adc and jb rcrb sarb aam jae jno dec stos int call inc fild test mov xor dec adc das and mov xor js jnp daa adc push loop aam or and movsl cmp jl jmp jne xor add mov das fldl2t or (bad) push mov pop cmp ja jne xor xor jmp sbb fisubl fs xor ss lcall adcl inc lcall lea enter rolb jne and imul cmpsb push inc inc lret es cmp and inc or or insl xchg jecxz xor push pop push and std xchg nop dec push or cmp sub nop inc push test push andb xlat add jecxz push dec mov inc push test loopne rorb inc enter test orl mov push adc xor bound clc mov ljmp add imul mov inc ja inc sub push das push rolb xorl fsubl fcomps push push inc sub fstpt sbb cmc push cmp sub inc mov shrb inc ret and dec (bad) jb mov inc mov or xchg mov jo pop xchg adc add je xchg sub call inc mov xchg or aas movsl jb dec push loop loopne pusha and (bad) subl and adc test aam mov xchg xor (bad) inc mov pop imul add adc push and dec pop add fstpl add enter outsl (bad) add dec add adc or loope add aam or inc cmc sbb (bad) pop sub add adcb mov and mov mov push adc push jae mov mov loope add loopne pop inc pusha test sbb pop xchg cmpsb loopne ficomp or sbb add stos push jns push and cmp pop jae repnz add or lods dec or and pop ficom inc rcrl es and pop ret inc scas jno or movb push xchg les test xor outsl xor outsl fisttpll in loope loope xor scas mov sbb jne std js xlat out adc test fadds jne (bad) mov adc cli jns loope sub rorl inc fs sbb jo dec data16 jmp pop pop outsl or cmp imul adc (bad) or pop push insl push jno es jo int3 push cmp mulb xchg sti pop jo and cmp sub movsb pop cmp ret adc roll inc sbb cmp inc shll orb (bad) jg and aad movsl rcpps xchg mov add cmp aaa mov jp pop inc or imul fadd scas inc test daa add sub xor adc test or pop mov cmp movsb loop hlt push or dec loop dec cmp add jnp js push nop push dec push aas insb nop xor sub and xor mov loope jne pop pop ja es push xchg lods xor or adc clc add je dec and pop pop add xchg ret jle mov sub (bad) test js xchg popf cli cmpsl cmp ja push mov adc sbb test ret aaa btc lods push into jnp add xchg add add and jmp cmpl je add (bad) mov mov mov jg (bad) int3 shrb add dec mov push push loopne adc adc call ljmp push jl mov aam xor dec pop dec addr16 mov andl out sarl movsb (bad) mov dec jl dec sbb (bad) add push add push mov mov mov les rcrb jae nop enter xor fistl movsb inc lods add sub dec add jae,pn nop pop or repz inc add clc sbb push cmpsb push push fcomps sub adc jmp add adc xor test mov loop addl xor lahf push mov cwtl mov sbb xor sahf xor or gs pop ljmp adc rclb pop pop inc les pop (bad) dec push cmp por add jne pop iret adc push movsl cmp sub test push fstps push jno add aad mov sti add lahf (bad) and lock lcall ja sbb push or sbb mov mov mov inc jne push fwait cmp jmp aas sbb sbb xchg cmp inc aam jecxz inc or imul shrb inc jne jmp inc pop shlb aas imul dec pop jmp lcall in stc and xor sub add insb stos mul popa pop in or pop push das dec adc mov imul adc cs mov push int enter add mov dec enter add enter sbb add in cs out lcall roll daa cmp add sbb adc outsl add cwtl mov sub mov or cwtl xchg mov xor mov ljmp sub dec pop cmp out pop fcmovu cli testl ret sbb rolb xchg int mov (bad) sbb pop rcr mov aam push inc mov sub test mov inc sub js vshufps cmp mov mov pushf dec ja dec popf pop mov pop cmp or mov add jge fisttpl xchg movsb addr16 jmp sub ret jle and adc xchg pop push sub mov sbb mov jo and lret add xlat ljmp xchg mov sarb inc add ret sub in fidivrl or and sbb in ret xchg loope push sub or popl or sarl int (bad) dec sub and sub addl and mov or xor cwtl ljmp or mov jbe pop or pop dec aaa pop push push add adc inc adc jo lock pop mov add push call stos push pop xor sub movsb sbb push adc mov sbb jne push push push and shrb inc ret psrlw in rolb pop push xchg (bad) dec cmc add or jns push push imul aaa lds and ja fsubs sub aas clc js xchg or test add sbb (bad) icebp push mov jle (bad) mov dec popa mov or adc push or adc inc or or adc hlt aad or lahf dec fisubl clc push (bad) xor adc push dec xlat push lahf mov outsl add push sub or (bad) icebp pop push jp inc cmp pop adc outsl cmp pusha mov sbbb cmp xor movb dec loopne rcr pop push dec test ss aaa adc xchg pop outsl lods pop andl mov and int3 mov arpl add or xor cmp aad cmp adc jo mov pop mov lahf adc pop xchg push lods aaa sti or mov test aad or xchg dec mov adc outsb lret sub test mov iret add adc rcrl sub popl push out xchg cmpsl das mov insl in clc scas mov es dec push orl inc orb or fwait inc mov mov je fcomps test inc ja jns rolb or push xor cmpl adc mov addr16 and adc scas mov sub mov add adc add adc es cltd push ja inc movsb mov add xor mov mov xchg test or jmp jne xlat add sti xor mov outsb imul mov ljmp xchg (bad) sbb imul arpl jne or lods test dec pop lock and or imul push call icebp xchg scas cmp mov or mov test into inc xor sub jge es repnz jmp imul hlt mov fisubl in sub pop je cmp or jge and push adc scas inc pop or icebp inc push add or jg or call loop pop mov pop js,pn call xchg sbbl shlb dec icebp push sti fs in mov aam push outsl mov or inc pop pop adc mov adc hlt mov or adc or sbb or mov xchg jg xchg and movsb mov call decl xorl add sbb mov mov mov inc jp sub insl inc jmp stos sub push gs scas sub sub mov mov fildl push pop rcrb or inc cltd out or call int3 xchg sub fmul fmul jo movsl push aam adc test inc xor push or cmp mov test mov and pop fistp push adc mov adc fisubrl jmp movb stos mov push or scas and sbbl xor xchg nop loopne jp mov inc je pushf sbb orl sbb rcr mov in pop push mov sbb lds adc mov dec mov inc xchg ja jb pushf cs mov or or mov add sub data16 mov mov cmp inc and pop inc ja sbb jge adc or in inc jae loopne adc das cs xor sub inc jnp and jle adc mov sub dec add add dec sub dec ja and push out outsb pop push adc fmul adc ja or mov into adc into adc dec add add (bad) mov dec jae inc jl sbb push push jmp or cmp fsubl in xchg cmpsb cmp int3 or fcmovbe insl sbb xchg cmp clc dec fstl sbb mov rorl or xor push (bad) and xor add add rclb das mov sub add das insb rclb cld xor adc sbb mov pop (bad) mov ret xchg ljmp pop aam or test adc xchg jge dec xchg enter or repz fildl cmp pop add push rcll xor or fcomps insb sbb mov adc and xorl mov cmp inc mov data16 faddl jle mov mov fsubl enter mov mov lock fstpl add ret mov dec sbb xlat and jmp (bad) mov jb push mov lock cmp dec push ret mov rclb and pushf jle push inc dec or dec mov mov add ret insl mov jne xchg mov push clc xchg sub test dec rcrl fmull mov add mov test mov subb cmp push pop test push jno fs or fs mov imul xchg push push arpl aaa jnp,pn gs push inc in (bad) mov xchg mov add mov push imul inc rclb sbb push sbb dec xchg cmc shrb dec add sbb mov imulb (bad) jl push adc mov sub int3 rclb or adc les in adc rcrb and adc in sub mov int mov push daa scas imul mov aaa fst ss pop mov and jne gs pop add inc push insl pusha les aam sub sti sbb and ret inc loopne cwtl jno mov imul cmpsl ret pop out add sbb add iret add test ss adc pop in push dec or and adc ret adc xchg push ljmp and fdivl xor arpl add and enter test jmp jg mov mov xor xor les aam mov jne cmp pop in sbb push or pop dec push dec lea out negl dec scas mov cvtps2pi xchg lock xchg add inc icebp nop mov inc add and test jnp push add lods cmc adc mov pop lahf mov sub lahf pusha cmpsl clc out or or add adc xor (bad) jae xchg add pop jo inc mov sub xor add xor and and in gs jmp fldt mov adc push movl jbe mov jmp add push sub pop jns inc cmp lods xlat pusha add sub (bad) push and add inc mov movsb mov lds pop js or add movsb and in xorb mov inc pop mov movsb repnz inc jmp xchg pop mov js mov outsl cmp imul add pop movsl test ljmp jo dec jl data16 aas fistpl xchg into fimul adc sbb aad test mov push test cmc sub dec and adc mov sub leave sub enter mov push add push push push push inc loope or cmp aas bt lret aad js jno mov dec mov mov ds icebp jno mov in or out xchg push hlt add mov xorl adc mov add sbb pop or loope cmpb stos or jnp inc or inc loop js movsl es mov inc add imul push jmp cmp xor and adc movsl std pusha inc xchg jbe push or mov (bad) xchg outsl cmp push scas sub ja pusha dec inc out add rcll mov mov push pop lcall mov inc add lds mov or mov inc (bad) sub cmp and pop rol or pop jl faddl inc or (bad) cmp add clc imul imul jbe test call test call fdivs sub test jo mov addr16 cmp dec fcomps cmp lret adc cmp dec add fs dec icebp adc or jno loope sbb push adc nop arpl sbb mov test adc std int3 inc mov in adc adc pushf stos cmp cmp jge push out push xor sub push adc lea ret push push and mov pop mov loopne lock shr sub sub xchg adc imul xor sbb or lds xchg pop add orl push or jae pop and out in adc movsb jle sbb or mov jne push std add jmp inc loopne loopne mov iret outsb aaa pop mov sub (bad) jo mov xchg and outsl lods add add mov aaa or lock call mov or clc sub mov (bad) and test in hlt pop mov lock fistpll mov arpl daa sub sbb mov cmp dec pop sarb add mov xchg jae cwtl jle mov inc or jg xor sub cmpsl enter inc mov ret fs add xchg mov sub lods dec pop jno (bad) das loope or mov mov sub iret and cmp mov (bad) push scas test enter mov dec jns xorl push enter jnp adc sbb outsl pop cmp xchg and in push js outsb outsb mov sub and mov add mov adc clc ret inc jge cmp ja je pop outsl call adc sub sarl mov rol jo push lea popa ret sahf popa dec rcl mov les and rclb adc jae xorl (bad) (bad) xor aam dec rclb popa enter xor pushf imul cltd test inc cmp lods (bad) mov inc and or adc push insl jmp hlt push imul (bad) (bad) pop pop mov mov mov (bad) pop daa int dec add fimull ja (bad) lock and dec and push mov jb adc or mov rolb pop jle jne out hlt cmpb push sbb inc fs js rol aaa jno adcl nop sbb mov call dec mov divl push mov or nop inc xor in fdivrp imul pop push jmp mov push xor js pop dec inc cmp test out dec sbb pushf arpl mov adc and fs ret push add gs jmp je call xor add add pop and lock pop and push test inc iret and jne test jne or add mov sha1rnds4 mov sbb sbb (bad) sbb outsl sbb lcall mov xchg test into fstps mov pop fs push mov pop dec pop sub jne out sbb dec jne into inc inc add or les dec mov inc add and mov lods loopne adc hlt pop xchg sub jmp stos mov push aam ljmp (bad) loop add xchg faddp popa pop inc mov mov inc nop xor cmp mov (bad) mov push add dec sbb xchg addr16 mov add mov xchg mov push and pop mov aaa pop push jecxz insb sbb mov (bad) daa or sbb inc xchg sub sbb or sub cmp arpl xchg adc mov sbb cmpsl xor hlt out mov adc dec sbb pop inc cmp fnstenv fimull clc loopne or add dec rcll jno push mov mov fldt adc dec divps add ret rolb sbb or mov cmp add mov (bad) into aad cmpl test out bound in push adc (bad) imul lock cmc cli sahf lea and jecxz pop pop sbb pop ljmp or push jne push repz cmpsb cmp and mov imul inc adc push cmp add push clc loope adc add pop es add jo push or mov clts mov lret pop fwait or or cmp push mov xor les or scas leave mov mov dec mov jp and addr16 mov and and mov adc notl fs (bad) cmpsb pop or and jle fadds popf int in or fstl pop pop arpl xchg mov cmp out jl daa add sti fistpll jle adc push pop cs jnp mov daa in mov out stc rcrb xchg sub pop sbb sbb imul add cmp out mov and sbb mov inc insb sbb mov or into cld ret imulb xor loop icebp pop adc ret inc pop loope fnstcw adc sbb test lea (bad) mov jno in mov jp adc mov cwtl lret idivb mov fisttpll xor inc ret cwtl lcall push add jbe insb test xorl sub iret pop pop test push xor or push sbb push or (bad) mov dec adc sbb add add ret inc insb push dec insb (bad) jg pusha cld test push in sbb adc and pop (bad) fdivr add jbe xchg pop clc add jo in imul jp pop aaa or movsl push inc inc inc xchg adc xor or xor mov clc fs fldcw test mov pop inc mov jo pop call aam push mov pop mov and mov lods add fs xor daa icebp and in pop adc int3 cmc jmp ja daa imul jne and mov inc scas movsb ret inc xchg mov adc clc lea mov andl dec shrl add les inc inc sub jle add (bad) push inc adc adc loopne cli inc dec push stos add ret or adc cmp or and push mov xchg and addb push push mov xor jecxz mov xor inc push push inc adc add add orb pusha aas es or insl pop sub test or inc pusha adc in ja fidivr dec jne mov xor cmp or sub inc or int (bad) nop data16 mov mov jmp jmp push add push addl aas loope leave shr jnp push lods inc loope into push pop push add ja mov cmp adc jo mov fisttpl jo pop mov notl pop lret jle imul (bad) cmp or mov adc sbb mov or lea and pop pop loop aas xor loopne or or or add inc and sahf push fisttpll jl jns jmp xor and pop or and inc add inc adc and bound ja push adc ss inc loop inc insl dec sbb insb lahf pop or or jo xor xchg pop das js xor aas pop adc andl in jmp mov sbb pop mov and xor addr16 rcll sub daa (bad) mov adc xor and loopne test sub pop les sbb push inc mov add sub xchg add cmp sbb jo push out and sbb outsb adc mov loope icebp nop cmp xor clc sub incb xor add (bad) add (bad) adc cltd add add pop add jbe xchg ret xor push pushf (bad) aaa xchg mov clc jns out outsb cli rorb aam (bad) clc divb add sbb sbb (bad) xor fdivs and push pop add aaa mov mov sub aas adc cltd or jge ja add mov xchg pop mov sarb (bad) loopne fadd jg pop jg cmp add xor (bad) pop adc outsl loop add call sbbl jne repz enter push sbb dec mov mov sub loope stos and clc out sub or mov or add sbb clc xor add add mov clc daa pop out adc nop mov add xor push add (bad) fs dec cmp sbb adc shr dec in push dec fcompl pop dec (bad) jo and push and sub push daa mov or jne dec mov xchg adc inc imul enter sbb push scas sbb sbb pop loope gs bound xchg dec cmpsl into test rol xchg clc repnz fisub inc cmpsl flds fwait pop mov icebp jl adc mov js icebp dec push push jmp rol dec addl cmp pop in and mov xchg sbb or pop cmp adc enter jne inc or push clc cmc (bad) or xchg sub pop jp mov mov add and cmp jae push and cs insb pop insl pop sbb or jne pop mov mov rcr and jmp sbb (bad) (bad) mov push hlt or inc sub or push xor push icebp and in (bad) jo test adc sub movsl imul inc inc pop test ljmp movsl sbb enter clc cmp (bad) or mov pop in (bad) test roll mov faddp ljmp sub add addb aam add in xor mov sbb inc inc pop test and dec or adc jo and (bad) sbb push push or pop adcb mov and and (bad) pop cmp push rolb inc jo rcrb jecxz mov push sub sbb push mov mov sub push decb push jmp push mov xorl cld pop add sbb leave insl sarb or xchg dec addb xlat ret push push xchg cld out push clc (bad) xor fidivl ret leave inc mov das lods inc push inc dec insb or or sbb rol aas ss add cmp xor cmp xchg xor test xchg jne in dec mov add shrb adc inc jo shrb dec clc cmpsb jmp in dec mov inc lcall and loopne adc and add loope bound mov or cmp xchg rclb rcrb je aas jl (bad) adc iret adc lock lods or sub jmp mov sub pusha push ret jle cwtl int imul cmp sbb push push or mov add push roll fiaddl pop or das sub jo enter adc add jae push push push (bad) dec xor clc insl inc dec jno and (bad) jns adc push and cmpsb inc pop or xor or dec pop push jne add hlt pop or mov iret and icebp test pop push mov pusha push inc arpl cmpsl xchg cmp je dec mov psubusb icebp push mov mov pop push dec pop ret icebp or cmp jp sbb push or sbb testb mov fs stos test xchg int3 adc cmp or sbb test cmpsl push jmp dec mov stos adc cmp js shlb adc sahf push rolb sub rorb xor hlt jae or int3 cmpsb xor adcl sbb sbb add daa mov dec fcompl dec rcr or clc sub pop push mov sub js inc mov push push cmp ret (bad) adc push mov push cmp lret mov divl or jae mov jecxz enter test inc sbb fidivr call enter dec jae pop cs push pop or js sub (bad) mov repz pop pop in int3 sbb jmp pop sub dec xor sbb or (bad) sarb shlb roll das and movsb mov scas mov and ja lods lods imul sub sbb jle adc (bad) or push popf mov movsl test das adc jle jne adc sub ja sbbl cmp (bad) sbb push adc lret push adc push sbb std jne cmp xorb lret cmp mov push rcll push pop jecxz enter mov xchg (bad) loope sbb push fldt mov inc jle sub xchg lahf xchg fmull test and push dec aaa dec out cld les xchg or ljmp jp add cli stos jle push fwait popa pop icebp sub lahf shll sbb cs adc sbb cltd adc and dec and imul loop daa dec adc cltd popa push pop inc sub insb repnz mov arpl in and mov sbb adc mov in add dec inc jmp mov lret sub mov mov sub pusha and or mov loop mov movsb sarl out lahf push push inc mov imul addb test sti jmp lock call sub adc sahf inc leave jae xor cmp in je add data16 dec jno pop jne mov mov in push push pop dec rol jne pop or (bad) loope,pn shlb adc and add push add daa sub push mov imul inc add daa fwait xor and push clc or push pop adc cwtl dec sub xchg icebp add iret inc pop mov fs inc inc in adc sti pop push shll push and add mov mov push pop lods mov xchg jbe mov push pop repz jb jp cmp dec lods cltd add addl arpl and and or pusha daa add or es sbb xchg push dec jne movsb push and ret pop ss aam not sub cmp mov or test (bad) pop nop adc gs mov (bad) outsl or pop add cmc sbb addr16 adc repz test out in enter push adc inc sbb mov and mov loopne add lret xchg enter (bad) fsubs or pop mov test pop cld je mov xor adc adcl lahf adc aad (bad) sbb sbb cmp leave gs xor dec jl mov sub iret add dec (bad) clc xchg add or mov sbb fistpl fistl cmp stos add add mov jg jle mov pusha adc ret add adc in add in and xor jl lcall loopne test mov jmp in push lahf adc pop test mov test and jmp or push and mov (bad) mov xlat (bad) xchg cwtl pop push pushf mov mov adc js test pop xor out cmp aad and test aas aad push pusha pop jbe sbb cs pushf sub insb xchg and (bad) adc inc or pop and ds cmp test ss adc pop nop (bad) sub cmp insb out cmp add pop mov cltd pop mov add jmp sbb jnp in sub inc pop das fadds nop ret inc lock add insl push adc fstpl adc insl xchg mov lret and push pop stos shlb lcall mov inc push outsl adc cwtl push pop popa add inc loopne push test test sub mov and adc pusha pop lea out (bad) or pop cmp jl or dec push mov xor xor add leave enter xor and dec jg adcb mov mov lods inc add push dec bound lcall adc and add in in das inc cld mov sub nop pop fstps add jne (bad) fdivs cmpl pop mov push jns jnp sub pusha outsb pop aas xor fdivrs (bad) ret rcrb fstl fcomps test fcmovb or push loope and adc lock adc sbb push rolb popf hlt imulb xchg sbb adc into in sbb cmp mov xor sub movsl xor les add or mov adc sbb subl sti pusha xchg push push and subl inc rcll mov xchg lods out and adc clc mov or and sbb pushf inc pop ficompl or fiaddl cmp cmp push arpl and inc add adcl aas and add sbb add les add mov pop dec test cmp inc xor push xor lret inc fwait insb xor xor xchg fstl pop push cltd pusha enter iret adc xchg mov cmpsl movsl bound push mov movsl (bad) loopne loopne inc loopne aam cmpsb adc repz lods mov lods int3 (bad) shrb jns inc dec xchg mov jae add jne cmp jmp adc loopne lds cmpsb pop cld out add xchg sub mov inc add negb inc add or add sub mov xchg daa jg adc mov mov or inc or adc and pop add loopne lods mov inc mov mov pop inc cwtl mov popa fstpl clc mov dec adc inc push mov cmp fcomps adc (bad) pop xor pop (bad) and mov (bad) xchg decb and pop enter pop es je fcomp lea pop (bad) cli nop or xchg fwait mov ret xchg xchg mov cmp je jmp popa sub pop pop sbb cmp jae nop flds je cmp cmp addl adc mov dec inc jb sbb cld xor scas inc push inc sbb mov inc sub push outsb cmpsl jbe fstpt les mov enter lcall mov test sub jo test add xchg or test inc test nop lret mov jns or (bad) pop dec cld nop inc adc iret mov pop mov add rorb push lahf dec dec inc add xor insl insl orl and pop push gs mov xor xchg mov add int3 jne das push loope mov dec and jo inc test mov mov inc in inc out mov inc xchg dec jae imul xor fcomps jno add mov push cmp push add inc xchg dec sub mov (bad) push mov push int nop jae fistpl lods mov mov fcoms test jns adc or pop sbb or sahf sub ljmp xor or hlt cmp jecxz ret fldl dec mov push or xlat ret es das cmp daa or push or das sub jb test xor dec mov and pop lock mov or mov and ret sub das cmp dec inc adc or push nop pop int3 jp xchg std mov mov bound sub push enter add jb adc imul xor adc (bad) rorl mov movsl push imul mov dec xor xchg and mov jl or fwait lock sahf sub popa gs es lds sub or add add rol loopne outsl inc inc fnsave shrl in lahf lods aas xor stc sbb insb or idiv or imul inc push push lds (bad) and lock xor test out rolb xchg clc das iret add mov das aaa dec add das inc outsb hlt dec or (bad) adc inc or mov dec cmpsl fsubrl lret push push sbb sbb (bad) cmp xchg adc pop clc mov nop mov mov push add inc mov popa xchg iret subl sub pop push pusha setae cmpsl push mov insl sub pop sbb dec dec enter mov sbb in mov mov add push insl mov pop or and pusha in fs inc inc imul add cs rclb scas jae xor inc pop ss in sub out imul leave push sarb mov mov inc pop xchg push pop xor in mov push and ja pop insb add incl icebp icebp sbb addr16 xchg fdivl fstpl daa add pop or es dec nop lock push ss mov cli mov inc je mov les add xor lock mov loope lret and pop sub mov movsl ss pop add xor inc test movsb pop sub inc adc xor or sub pop sub xchg pop ss aad sbb pop and and decb (bad) adcb add movsb xchg (bad) jl jo imulb sahf cwtl push or popa push lahf pop sub xor cmp paddq mov insl out add sbb test insl ret mov xchg mov repz push xor iret repz pop jo mov xchg cwtl pushf mov repz mov push sbb int3 and rclb sbbl test add and xor in xorl fildl add xor add fcmovbe mull xor mov aaa mov loopne insb fildll stos mov popa adc pop mov sub inc inc xor arpl lods rolb pop (bad) iret push pop daa dec test imul xlat aad jno sub push sbb mov cs fwait sbb mov (bad) movsb jnp adc addl mov push push xchg and inc loopne adc jbe pop and inc xchg push mov lock inc es fsts xchg fnstcw mov sbb jle clc ds dec mov push mov xchg imul aad es ja dec jmp xor jge pop mov sbb dec ss and dec aad inc add mov shrb pop xor adc sbb xlat xor jl fdivrs (bad) pop nop daa rorl movsb iret ret cmp mov adc cmp mov cmp jle xchg dec push pop sub jle mov call cmp (bad) mov fmuls sarl pop sbb cmp insl add xlat clc inc ret and add push scas mov push add sub (bad) pop cmp pop test ja xchg je xchg arpl or cmp in adc lods push add mov in je xchg push jbe stc push and sbb dec adc mov fistpl lret cmp push lea push inc inc pop add push insl jmp add out test sub leave int3 test dec ljmp xchg xor push push fadd pusha aad sbb daa xchg cmpsb adc les xlat mov and fdivl add aam mov lea mov jno or das sub adc inc mov or mov dec push xchg loopne aaa mov push movsb xchg fwait (bad) neg jo test (bad) xchg imul pusha push push je inc dec dec jae jl cmp fldenv sbb mov adc jae add adc neg push inc dec or add cmp inc add sub xor aam (bad) push sti daa push mov mov loopne push dec scas fmull inc cmp mov cmc rolb cmpb out loope and push jns pop ret cmp daa addb insl pushf push jmp (bad) or sub adc xchg adc jne adc mov xor ret hlt out sbb pop adc inc push inc test sub push pop mov je lds call insb pop out jl popa rol rorl ret push pop push jg jmp pop cmp mov pop pop rclb cmp sub sbb pop fs cs adc lods add nop sub test mov lods xor jecxz push out fiaddl adc aad jmp ror js int xlat mov decl aas cmpsl mov pop jb test jl xor inc push (bad) outsl or inc jne pop in insb jns xor mov mov (bad) testl adc mov jg cmpsl lods push mov mov dec shr popf adc mov mov dec mov jae rorl (bad) push lods mov xchg jne add inc sar ret sbb xchg adc adc pop dec (bad) out movsb or add and orl nop sbb dec sarb pop mov lods jge and jg sbb or add mov pop or push mov or inc or les mov jne shlb pusha mov push or cmp dec and les cmp dec shl enter mov xchg (bad) mov xor packuswb and or push xor add sbb in jb lods xchg (bad) pop rol xlat add xor add push sub mov int xor mov push inc enter add push outsl mov sub mov sub mov fcompl push pop pop add jne sbb ss fs or adc add xchg or insb or ret inc leave std push cmpsl mov push push or subl je push push mov mov add adc xchg xchg pop dec fbstp pop lods pop mov xchg leave mov shlb das test and and ret xor xor adc popa mov xchg shrl pop xor fstp xchg ljmp push jmp out dec dec xchg mov iret adc inc fidivr inc ret xchg movl pusha or mov inc or jns test test jge ja inc inc xor sub xor cmpsl mov dec pushf jmp ja inc sar jmp cmp sub movsl ss in sbb push push cmp int inc adc nop xor test scas loopne or and push jbe jge xor faddl roll inc cmp xchg mov lret cmp testl cs sbb and mov aam or sbb bsf inc and sbb leave dec sub xchg (bad) int3 cwtl in jno test ja loope insb sbb add imul and call inc loop (bad) icebp jne inc mov or (bad) push xchg clc test inc loop xor out nop dec std add daa icebp inc lock adc push mov idivl gs xor push xor xchg ret movsb inc call sbb or xchg xor mov lods mov adc inc js and movsb fs or add fsts ds lret jmp jmp add or cltd movsb sub movsb mov xlat cmp sbbb scas pop add bound jecxz xor (bad) fcmovne mov jae push inc movb (bad) fistpll mov out dec out repnz popf jecxz insl xchg mov cmp cmp ret mov loop gs mov pop lock std cmp aad iret mov iret xor inc cmp xor imul sbb pushf enter sub xchg xlat sahf iret ss adc push inc nop or xchg mov addr16 pop cmpb mov add dec mov sarl daa arpl test (bad) or inc es add popf rol push iret or (bad) aaa push mov (bad) dec and xchg cmpsl pop cmp cwtl ret mov push iret or mov imul nop push faddp inc sbb idiv incl lea hlt cmp xor sub cmp fistl xor lret push hlt dec or add push dec lock cmp push inc mov and push jns or push es hlt in fildl pop hlt call call fist nop lds mov mov ja aaa loope adc mov inc pop lret hlt fwait xor add cwtl enter test (bad) je mov loopne pusha adc and xlat mov sti mov inc cmp inc inc add test adc xchg cmc dec jne lock inc pop popa insl add xor jae pop inc and dec icebp inc push mov xor cmpsl adc loope mov stos cld push loope or fildl mov movsb inc mov pop mov adc cmpsb push cmp sub sahf mov dec xor xor out inc pop mov pop add inc dec mov stos outsl shlb adc mov adc pusha jne inc sbb push inc mov jl xor cmpsb cmp mov push push das dec cwtl clc or inc pop xchg out cmovo push mov jae cltd xchg inc jl or adc cmp inc push inc mov inc dec add (bad) or iret cs inc push add push mov xchg orb xchg add loopne add xor fistl add popa dec std hlt xchg imul dec push and jo lahf shr jp xlat and dec dec aam mov movsl cvttps2pi cmp dec (bad) jns jl dec sbb insb jge pop adc in aaa in mov mov insb add lcall fwait pop call push mov and in xlat fstpt hlt adc popa cltd clc leave in ja or push pop inc mov xor sbb cli adc jne jns pop bound test enter and inc inc mov pop add mov lods push inc mov sbb ret jecxz popf sbb or mov push inc and push cld insb inc push sub mov arpl push adc subl add loop bound cld fnstenv push and cmp ljmp pop sub aad jb nop roll fnsave je mov popa and lret fdivl rol rcr push sub loopne jg cs adc lods and sbb push movsb jns es mov push or mov add and add and (bad) cs rorb dec aas in dec sbb add aas inc dec movsb test fwait xor dec xor or enter iret jge cs nop jg or mov sbb insb adc dec sti or das mov add je insb mov push mov out mov sbb test fistpl lods pop sarl sub hlt fisttpl dec dec clc popa aam xlat jmp leave loop or (bad) cmp mov cmpsl aaa dec cmp jge sbb push push lret (bad) aaa and cmpsl adc scas push adc divl adc adc push outsb lock or faddl cs dec mov lea mov inc ljmp loop insl or inc fistpll sbb (bad) sbb (bad) daa (bad) je inc jb rcr imul mov jno pusha bound xchg fnstcw insb fwait imul sbb rolb mov or inc add and jmp pop pop push out call add xor mov std push pop mov push movsl adc dec cs ljmp mov inc clc dec les mov inc sbb mov push jne loopne push jo dec scas lahf adc cmp fwait cwtl xor pop lock xchg pushf pusha xchg dec fist inc in pushf pop jns lret shlb int3 mov dec (bad) push inc hlt lock mov loopne insb mov inc dec leave mov sub adc jns dec add inc ljmp rorb sub pop aam push ret sub out lock loope in dec jne push add and out es sub fimul xchg mov mov or sub mov xor int pop adc adc sub lock imul xchg popl mov sub dec pop aas test inc mov imul int3 xorl xor imul and xchg xor insb mov dec jne cs dec jge rcrb adc adc (bad) adc int3 cmp xchg test and push fsubs mov pop fcomps push adc or adc jns loop jno jle sar cmp fdiv fsubrl sub adc movsb xchg push (bad) jmp outsl pop adc sbb push imul xchg dec add pop pop (bad) xor pop jg jg (bad) incl ret push jo add or cmpb movb mov inc out mov sbb add jl aad xor add enter and mov pop cmp add xchg movsb test inc sub and dec call lock and lods dec fwait inc imul sbb or sti in cltd xchg or or popa jb insb aas popa mov in or or xor add push pop add cmpsb in bound sbb imul push ficoml scas mov test pushf out mov inc inc loope push add mov sbb outsb cmpsl sub aad insl push fstl fs arpl inc or test sub lock (bad) insb in (bad) les mov int sub add xchg lds out fnop cmpsb add scas (bad) add push pop pop mov mov sbb fdivrs or sbb or test pop pusha lret cmp in and mov in dec ficom aas adc inc mov clc inc mov cli inc imul inc int3 ds push xor pop (bad) out fs jg push add repz data16 insb enter sub fisub pop sbb sti fs mov js repz test movsb scas pmullw or xchg xlat jbe into dec adc lods das nop cld fcmovnbe fcomp out sbb inc add call push adc fldcw fs hlt add adc andb push xor fidivrl xor xchg sarb xor clc xchg mov lcall shrb adc sbb push pop sbb in sbb push movsl test inc and xchg orl test cmp fistpl mov dec sub ret mov inc push imul fnstsw dec cmp lods test jb and or ljmp clc or and sbb sbb sbb scas dec add cwtl sbb inc dec add xchg sub and orb or inc cwtl aam xchg lods inc sahf dec pop push test jl adc mov and pop fidiv cmpsl add cmp or nop stos add or cmp repnz cmp mov push inc aas fs or jnp mov push dec pop jl insl ljmp stos lea pop pop dec and cmp loopne fmuls and pop pushf cmp mov xchg and mov mov popa fs movsb add hlt fs je xchg aaa lea adc fsubr adc mov cld xchg add pop adc test inc add testl lock pop roll cwtl cwtl rclb out fmuls and adc pop cmp rolb jmp int3 push cld pop ficom (bad) repz ja (bad) enter aaa push cmp sarl inc sbb dec or jp sub stc push out jl push adc roll adc ret add or push jo fild pop push test fnop pop loopne inc das shr inc mov out cmp mov imul inc clc pop add loopne or cmp mov aaa adc dec pop bnd add xchg push stos add rol add loop into push jl xor xor add push and lahf pop mov cmp fbstp push jnp into adc or icebp pop inc inc add cmp sub push dec push push mov or or sbb out andps jmp cli cmp jo sub add out ret add push mov push pop in insb idivb or or xchg sbb gs pushf call lds xchg jae add sub sbb xor or mov ds mov mov arpl push sbb int add into push push jbe outsb inc add inc iret lds mov jb stos push and inc sub (bad) inc or addr16 pop and mov inc pusha sub test add add or or roll push and push sbb leave pop mov jo rorl insl ljmp adc shlb imul sbb cwtl pop mov orl or or cmc adc in jo jo in inc and or push dec add outsl iret lret pop and out pushf mov addr16 test and add and (bad) jg shlb xor xor xor inc adc aam inc inc dec dec dec dec dec dec dec dec inc push push push shrb or push push pop pop pop pop cmc and ret ret adc rcl mov fs in sub hlt xor pop cmp sub or push xchg pop jno mov pop xchg jmp shl lret and inc std mov data16 and add jo (bad) in andb dec cmpb fidivrl xchg fs push pop sbb test stos and add mov pop insb dec or xorb dec cs push pop test mov cmc mov xchg js cmpl push data16 push stos add sti mov cmp in inc push in push inc jge shrl dec roll push xchg or or sarb stos pop insl add sbb mov add aam sbb jge xchg push add test jb mov xor out push (bad) add ret xor in jmp inc inc inc dec dec aas sbb pusha sub add cmp test cwtl add nop pop or add and and lahf xorl sbb inc xor inc inc iret cs sbb fucomi pop xchg add sbb or iret push fadd psubsw pop mov clc cvtps2pd cmp test addl sub ljmp sbb xchg (bad) fs lret fldl pop adc adc les sbb cmpsl adc pop test ror in or out pop in sub push das inc jmp popa nop pop xchg xor lock ljmp adc movsb xlat xorb std or sti jmp inc (bad) sti push add ljmp (bad) pop lahf mov pop mov pop sbb push jo sbb and lock hlt xor mov push inc nop jecxz adc nop movsl gs mov fistpll jne mov inc pushl sbb xor insl (bad) jmp add pop incl test popa mov sub sub adc or lock std fcmovnbe mov jnp xor insl clc push pop jp mov pusha pop jne ljmp test jle xor sub es mov add sub mov outsl sub lock ja jo aas mov out pop xor jmp imul ss xor xorl pop leave pop pop (bad) jne nop pushl aaa in xlat adc ds pop jp orb fidiv and adc mov push gs movsl and daa ret test and ja jo (bad) test lcall mov inc fs add add add ret das sbb into inc cmp pop loopne mov mov xchg (bad) mov mov add (bad) enter sarb movsb inc shrl sbbb neg scas hlt sbb or insb pop insl sbbb cmp fild sbb and dec dec inc inc pop lods mov test pusha inc xchg add dec cs sub outsl js (bad) adc xchg add outsl inc xlat aas xchg xchg inc xchg mov pop cli mov insl push mov fimull iret or push mov aas cmp adc sbb roll aas xchg movsl add or xchg dec xchg ret adc int inc fwait dec sti mov cmp add lock lret cmp push push movl mov js cwtl or ja mov test add insb popa jecxz mov push sub fistp jo xchg mov jle jae dec adc lock push mov js mov adc and js movsb sbb push mov pop mov (bad) push loop dec outsb xlat or sarb and add jle movsb sahf jl sbbl mov xor addl lcall dec pop pusha adc jae mov lret addb sbb popa cmp or sub mov xchg add dec shrb pop push cwtl or (bad) cli loop mov movl aas add int push aam cmpb and mov add dec xchg jo sbb mull xor add mulb (bad) pop pushf jge push cmp pop xchg pop leave mov or rcrl je movsb dec push imull iret dec cmp fidivr xor pop cmp inc push lcall fcmovnu cmp subl or (bad) push insb ret pop pop call sub adc test dec mov sti cmp lcall adc sti (bad) outsb pop mov into adc lods rcll loopne pop inc push adcl or out push add sub sbb mov in test add sbb sti cmc xor call pop adc or js push xchg ds cltd je jbe xor iret add js sbb cmp int mov mov add les add outsb lock jl call sahf add cltd push fimull and inc les pop inc jle pop pop pop sbb inc mov or leave stos or cld fnstcw ret sbb mov lock outsb inc fild inc (bad) or fidiv adc (bad) push je mov dec arpl call mov in jne pop shll xchg insb out push (bad) negb (bad) or cwtl push jo clc or or (bad) (bad) dec push inc and mov sub or lret dec adcl stos jge mov or and shll adc mov loopne lds xor imul icebp mov iret mov incl sub jecxz and cmp jae mov mov inc loop jmp jbe sbb mov cmp pop aaa outsb xor add fs outsb add push cmp std popf pusha push or test pop jg push fimull push ds mov add xor mov arpl mov or and aaa in inc (bad) scas cmp add jecxz sub adc call movsb loope mov pop add into jecxz faddl stos push and add pusha daa andl mov mov dec add in call sub push movsb mov push ret orl and mov arpl ds not hlt scas and cmpb ret mov js insb mov call or inc cmp sbb xchg and or mov sbb lea es add push xor adc clc and inc add lods push sub mov add cmp out or imul iret mov add dec stc or xchg nop popa dec and dec mov psllw xchg jae dec roll push mov xchg pusha test xor dec das jge push add fisttp loopne stc imulb cli adc fsubs gs sbb cmp push push sbb mov imul sbb stc jns pop loopne stos inc cmpl mov iret dec cmp pop lret fwait adc dec lret pop (bad) sbb iret dec pop das jl or loopne lock je mov js xor and das std dec inc pop dec mov repz mov (bad) cmp mov (bad) pop inc cltd pop inc xchg jle sbb into dec jl shlb dec sub cmp jo andl loopne add test popa cwtl sub dec mov ds pop jbe adc add sub js pop lock inc xor or jge sub xor enter push pusha pop pusha inc js sbb movsl jno int3 push repz bound sub dec xchg cwtl cmp add sbb jns imul mov xor adc jmp inc inc pop aaa and dec fiadd mov or cmpl mov cwtl loope sbb jge pop push sti cmp lret dec icebp es notb imul sub add mov jnp rolb mov mov jge clc movsb sbb mov pop cwtl push and or mov inc (bad) lock or pop pushf jno sub sub repnz inc push sub pop lock addb roll xorb jl movsl or mov cltd inc pop mov test daa and lea sbb test sahf fmuls push lock dec mov bound sub push das sbb mov ret fisubl dec insb les pusha push (bad) hlt pop into hlt sub inc add fcoml movsb or push sbb add pop push int loope xor adc sbb idivl mov cmp shll add or xchg nop/reserved ds pop xchg sub fildll push dec xor mov ret outsl pop or sub dec or dec clc loopne mov stc adc or rep ja outsb enter aaa fistp test mov jmp outsl and pop push sbb add jne jl cmp dec ja and pop test stc mov loopne ret call (bad) cli mov inc mov or lahf add pushf lcall jo dec pushf or dec loopne push cmpsb mov adc adc rolb add xchg pushf or adcb aaa sub push js and mov test in push ret ret sub repz and or add test pop pop pusha xchg loope mov push xor add or sbb call or (bad) push xor add xchg adc leave inc and sbb pop daa call push clc pop pop xor and movsl bswap inc je inc stos inc clc xor add mov lods clc sub push push enter dec and xor pop and and dec lock clc in repnz add scas (bad) pushf adc lea and les jbe dec clc arpl rorb mov pop lret mov nop or movsb repnz call test pop add movsb and lods or test sahf jae and cmp or pop push add loopne xchg adc pop cmp jno add mov or pushw and inc dec dec pop push cwtl andl adc xorl lret add adc or negb data16 roll jmp cmp or or enter add sub cmp inc shll inc nop pop addl pop adc xor roll subb lea and jae pop repz je fist inc or (bad) cmp pop pusha inc push sbbl and adc xchg pmaddwd (bad) cmp and push fs jp repz adc pop jl or bound xchg pop loop push sub jmp mov or pop popf cmp les sbb pusha dec and xor nop sbb dec adc shlb ljmp jns clc push negb movl fwait adc fwait les xlat mov mov hlt sarb sbb imul loope mov rcll cld (bad) incl mov and xchg inc (bad) cmpsb push repnz dec hlt add mov add adc dec movb mov sbb jnp xor push or stc lahf adc lods es and cmp or pop xor xchg stc loopne ret mov lret insl les xor sub in ja dec sbb aaa mov int fadds loop mov xor add inc inc dec mov data16 add nop mov jp sbb into adc pop add add scas adc pusha mov es fbld jnp xchg mov xor jp orl pusha cmp decb mov in dec cmc (bad) fistpl adc fisubr nop inc ret dec (bad) xchg dec js outsl cmp imul inc mov or jnp fs jb adc cli pop pop jp aas decl cwtl inc add dec (bad) hlt push pop cmp mov or loopew daa loopne jne sbb test mov inc push and dec pusha in pop push inc lock ret cmpb stos dec push rep and cmp test mov inc rcll dec adc push sbb test cmp es jno enter out aas je pop xchg sbb adc pop inc sub ds test daa xor mov daa or mov xchg (bad) lahf pop test dec shl xchg mov dec aam pusha mov test fidivr adc inc inc add clc push loopne je outsb (bad) clc mov ret xchg lea add aaa ret or insl inc jnp cmp pusha sub fildl mov mov movsl sbb cmpsb dec rclb std popl je push outsl pop in je lahf mov dec cwtl cmp pop lcall gs or cs pushf (bad) or sbb fsubs fimul pop lods xchg daa aaa adc mov xchg je je push or sbb out jge lock cs push inc fs xor aas jbe and pop shlb pusha mov (bad) rcrl inc outsl push stos fdivl (bad) fcomps ljmp pop mov dec fnstcw lea xchg add xor dec out push cmp push mov mov insl xorb mov mov cltd or out jmp out cmp sahf outsb dec push daa cmp test sbb and in adc xchg jne xor adc pop xchg lret sub enter xor sarl jmp sub mov xchg sub and rolb add mov (bad) sbb outsl add cmp ss adc dec fnstenv dec rclb je push cld imul sbb pop inc jmp push shr gs push lock xor hlt xor push (bad) cmpsl or and adc cmp rorb sub bound jp out cwtl ljmp test xchg dec jno ljmp popf push test push mov xchg dec mov inc jp and inc inc leave xchg xchg inc inc fsubs inc push add xor mov ljmp scas psubusw in xor mov ljmp add loopne out cmpl loop ret iret inc xchg ror xchg aaa gs sbb jmp sub cmp fdivrs fdivl lret mov xlat fs lret push cmp cmp jp cmp jnp dec loop adc mov mov mov pop mov test push outsb loopne les (bad) sbb mov push imul push mov lods roll (bad) push pop pop mov rcl mov inc pop testl adc aas insb jae push fstps inc xchg jne and (bad) or pusha push push data16 pop lock cs sub mov mov push dec adc mov pop and clc inc xlat mov jge dec ud1 xchg dec mov xchg mov and cmp mov cs mov inc inc or mov sbb mov push andb or pop push inc dec inc sub in arpl mov xor inc inc sarb jmp adc or adc push fdivrl in push push inc dec stc pop xor in inc jl jl sbbl add mov sbb add push push mov loopne leave in sub mov fiadd mov push outsl push dec or xchg movsl test ds xor add add dec adc mov adc and mov inc pusha xor (bad) push test pusha sbb or sar call cmp mov popa shrb rcrb sub adc daa xchg mov repz mov mov push mov jae pop fidivl clc dec jne out add xchg insl jne add mov add dec cmp inc pop sub sub sbb addb fnsave or lock or mov jns push das mov dec sbb aaa pushl dec inc add adc push add and sub lret (bad) xor inc ja cmpsl sub into mov mov dec sbb mov xor pop int3 add call les xchg pop sub fwait inc das pop stc sbb js icebp loope sbb rorb or cmpsl jno mov dec mov in fmuls sub mov nop inc mov adc in loopne jb or leave and into fadds enter in movsl ds and jle sub and sbb mov xchg loop adc mov xor shll dec xor gs push aam je push jnp dec cmc sbb mov bound xor (bad) mov adcl mov enter lea fs out adc jl inc cmp push movups push dec lds inc push cmpsb mov (bad) mov mov xchg push lahf mov pop scas and xor and js mov rorl mov jns je aaa xchg sbb xor pusha rorl add push mov fwait dec loopne aas xor mov xchg or adc xor shrl add cmp (bad) ljmp popa pop and cld cwtl pop xlat (bad) dec pop mov xor fsub ret rcll pop lcall dec sub jp pop iret add dec mov inc inc sbbb lret or ret clc mov xor push jne or xchg lea (bad) loope pop test leave cmp (bad) test inc es mov not push mov jecxz bound out pop repnz and cmp xchg xor outsl int3 test push imul adc into mov ljmp push cmp cmp mov push rclb popf ss add sbb int3 dec mov or aam cld adc mov pop mov (bad) xchg ja sti jl inc test jnp sub ftst adc inc rorb pop adc fisubl ret inc sbb cmpl mov (bad) mov test daa push xchg add pop jne push loope movsb aad mov jl jle aaa dec sti and xchg and mov movsl popa daa sub dec jl cmp inc cmp orl push test push adc cs popa or cld add data16 jp push cmp inc add cld and inc mov push movl adc popa sub sbb data16 dec mov xor add cmp mov add fcomps cli or sub adc (bad) sti outsl sub into xor pop inc inc jae in xchg imull lret cmp imul jns mov dec into or daa pop cmp (bad) (bad) jmp push mov mov cmp ret push lahf pop fsqrt xchg and adc or es ret inc add xchg movsb sub mov daa sbb imul xchg hlt xchg or mov mov jne dec or js ljmp bound int3 mov pop scas push lock mov (bad) inc sbb rcrb add cs data16 gs push loopne add cmp out sbb xchg and aad xchg push jg and jmp int3 jecxz cmp call mov add xchg mov inc daa pop pop push or mov cltd rolb xchg mov aam sub fist in addr16 jecxz rolb arpl fist adc xchg orb xchg test inc into aas xor das iret cs out cmp add push xor xchg lea test gs push loopne mov sbb pusha inc andl rclb and add cmp push xor and scas or dec dec mov dec cmp sbb popa mov jno in and add mov push sub lock and push add push mov repz movb cmp pop sub mov in mov lods pop add mov lret add sbb or jmp (bad) mov je test fs cmp outsl xor daa add (bad) mov add int3 cmp jp adc jns loope jne xchg xchg mov dec leave lret push outsb sbb inc rcll mov mov and xorb mov sbb mov or mov loop push cli data16 cli movsl fldenv add cmc add pop movsl mov inc sub push mov mov and inc or je addb sbb pop in xchg inc cwtl push xor imul inc fiaddl cld add or jecxz push dec inc aaa push imul loop adc ret out jle imul nop pop and (bad) push adc push push loope pop rorl inc rclb push movsb lds mov cmp push rclb add xor push sub mov rclb and (bad) and (bad) jmp pusha mov je jo mov xor xchg xchg into push enter add cmp mov mov rorl cmp sbbl pop ds insl jne lea hlt adc cltd sbb clc xor jmp cs outsl test loope rorb cli imul jp popa lahf inc pop inc push lahf and jge movb inc push sbb rclb or clc dec cmpl clc jb pop fldl push mov or test flds sahf (bad) sbb imul and (bad) push inc iret cmp std lea add je dec shrb xor add sub repz adc or xchg pop dec pushf mov xor adc pop inc mov lods enter aaa inc add adc js (bad) loope inc lahf pop negl pop sub mov mov inc or xchg (bad) mov add bound add inc (bad) jle dec in inc jmp inc push ss inc sub xchg push push ret sahf or add dec mov cmp add dec fs inc adc mov lret in cmpsl push cmp cmp aas pop nop iret jb in dec inc dec inc lock fwait or jno push cmp push sbb inc sub xchg mov je ret sbb jo add push xchg adc jmp xor inc cwtl and mov test push push aam dec aam add sub add pop add cs jmp out inc testb push fsubr sub add and xchg mov or xor in test push out xor add cmpsb test or pop pop pop jp loop sub xor jo sub push pop fwait jge cmp xor pusha inc out cmpsb call xsha1 cmpsb mov faddp xchg aam or and ja pop mov (bad) mov aas push push mov je sbb fs jp cli sub inc push faddl mov movsb sarb (bad) (bad) cmc jnp hlt jmp sbb out push ja or nop jns sub out push mov (bad) jl adc xor jne ljmpw or xor adc add jns jno fisttpl sub or and xchg mov or or out sahf adc test push lock in aaa in xor cwtl sbb (bad) sti and je shl add (bad) push ss ret xor pushf lods mov mov adc sbb xor and into and sub dec or or lahf cmp dec jmp jb or (bad) fs insb sub loopne mov movb xor je cmpsl inc inc adc and aaa sbb dec sbb or push xor das push sbb or mov push mov mov bound rolb cltd xor hlt push xor ret aas cmp xchg cmc add aam adc cltd push pop call xchg imul mov cmpsl and stos sub in jo (bad) jne adc inc cmp add mov sbb loopne adc or or fnstsw test inc adc loopne adc dec xor or ja sub xchg addr16 nop (bad) jno aaa push pop insb shlb sahf sbb enter das add inc add sbb mov rcrb push inc dec jp xchg cmp ret clc call lods or daa and cmp xor sub sbb and pop add sub xchg es dec lds (bad) xorl imul int3 pop jmp aam inc push dec fsubl test add ss ljmp rcrb push xchg dec inc inc lahf insb adc movb clc fs sti leave hlt push (bad) (bad) outsl and pop dec add mov cmp addl cli mov testb add (bad) mov adc enter inc or mov inc xor arpl inc or mov xor pop push jle inc push mov push fbld push sub mov sub (bad) sub or inc dec add lock adc push and mov mov jg sub (bad) xor or ret (bad) mov inc fsubr es xor test icebp (bad) add jle in mov adc idivl data16 jg fmull fucomi mov dec je pop mov imul add add sbb inc (bad) pop shlb aaa adc in je fsubrs sub adc mov fcmovne inc sbb fcom dec test jb dec sub dec cmp dec pop orl inc fmuls push andb inc push xchg jns inc in loope dec leave inc scas inc jne loope fdivs or pop (bad) push dec mov inc or aam aad pop pinsrw add xorb and cli sbb pop push lds jecxz or sbb adc pop and add das jbe xor cmp ror xor xor dec mov cmpsl popf sub sub inc pop xor push add inc lcall push scas test (bad) test and add es lcall orb mov test testb push je pop sub sbb add ret aaa mov mov xchg inc sub xor add (bad) push sar pop lock sub jl add add xchg jns es ss nop sub xchg or mov aaa fisub push push pop jb inc pop inc add ret and pop and fs pop std xor lcall mov cmp inc xor adc mov test jp gs int3 pop mov push xchg pusha lcall cli push sub mov pop imul js dec jl fldenv daa roll stos jo test pop sbb push and adc mov popf and movsb cmp sbb fsub pop aas dec and fs sbb andl arpl loopne adc (bad) sub or add rorb out sbb push xor nop leave mov mov and je add and adc aaa pop cld xor xor push fs sbb lahf mov in mov faddl xchg pop push stos or add cld or es icebp and dec aam jbe fs xor scas enter push adc mov jne notb fbstp jo lods jmp sbb pop inc inc xchg and test pop dec dec lock jle fs mov das das adc mov fsubs es jl inc sbb test out js ret mov pop adc cmpsb inc mov sub ret sbb outsb adc xlat movsl in cmc push (bad) lret push xchg (bad) std insl adc mov outsl insb push push in test cmpsl stc sahf out mov xor sarl xor mov xchg jnp sub and lock out sbb mov push dec adc idivl or dec or ret mov out push mov inc sahf xlat cmp inc lods cmp shlb and mov jge or outsl inc scas mov sbb jae mov or out and dec xor subw test int aas xchg and aas and icebp inc movsb sub add loopne push mov add and dec outsb arpl mov cmp cmpsb lock or jp or or inc or insb ss adc js test adc adc insl add dec js xor mov add pop add push mov adc cmp sbb mov scas mov cmp insb sub jl mov cmp call jns mov std sub or sub daa frstor or pop mov rolb gs data16 pop push sbbl push push enter mov cmp shll push add sub ss inc lahf cs jg push inc push dec jae and push fcompl pop push insl outsl fs (bad) xor or in and es cmp and inc push push popa pop repnz sbb pop mov arpl dec add or icebp call cs push outsb adc xchg test dec clc xor ja or dec inc jb jbe imul or pop sbb sub pop in adc adc sbb inc insl add (bad) inc pop in inc and pushf addl fiaddl push es push push push push xchg pusha lcall add dec jo push movsb xchg add cmp in sbb pop mov test test adc call adc arpl or xchg popa push and jb ds ret pushf inc xchg lods sbb inc dec inc jp sahf outsb push xchg dec or in fs or dec into dec or imulb or xchg or cmp (bad) std mov imul imul adc es fildl nop inc or push outsl mov int inc and dec enter (bad) add mov inc ss iret je jno mov push and js jb and iret int3 mov mov push adc nop (bad) cwtl push or cmp ret pop or xchg sub push les iret or jnp aaa dec ret test or push push pop les (bad) lea jb sbb adc xor leave push adc adc pop xor and and inc push bound roll sbb inc lds sbb push sub sbb sbb negl and dec xchg mov in adc and nop andl mov and and inc push loopne and in pop adc add sub cmp cmpsb xlat sub mov rorl lods push xor jb sub cs mov sub pushf adc in lods xchg pop and leave push jb ss jb or cmp aam xor cmp add add cmp push push cmp xor repnz inc inc and pop enter push dec lods dec aas cwtl and hlt fs sbbb inc jg and outsl imul add sub dec mov es in sub dec jne cmpxchg dec dec mov stos inc jecxz jmp rorb roll pop loopne adc shrb add jmp data16 dec inc or test cmp or add notl dec cmp sbb dec sbb pop ds ja inc push mov imul push add outsb adc push adc mov sbbb mov cwtl iret or lock pop xchg or fsubrs add pop adc adc fdivs adc sbb (bad) enter out cld pop adc sbb dec jge adc or mov cmp and pop xchg mov insb mov mov xor or adc mov jb or mov or adc or push into cmpsl mov push into dec add adc push adc xorl inc lds sbb adc mov (bad) sahf fcoml addr16 int3 xchg push mov or and lock push or adc pop mov or mov sub rcr mov xchg in dec adc jo xchg or imul outsb dec je and lcall inc xchg addr16 push push and and sbb ja xchg inc neg outsl add pop gs adc pop or lock orl lcall push xchg pop je push sbbl (bad) cmp dec push mov inc iret jo xor nop inc insb mov xchg loopne cmpb nop xor je inc pop jns dec mov cltd inc mov clc addb mov int3 xchg inc xchg pop dec nop aas rclb mov sbbb shll lods push (bad) movsb insl hlt mov mov iret sub inc mov mov fnstenv push iret adc push push (bad) int3 addr16 ds mov push xor mov cmpsl out mul cmp js push lods or mov aaa and push add add add add ljmp add add add add adc push outsb inc mov mov mov add or push push mov mov sbb push ret mov test sbb mov mov ljmp shl outsl inc ja inc stos bound jp jl out cld push xchg movsb mov jnp iret ror cld adc dec hlt movsbl cmp mov sarb push rcrl ret ret cwtl rol fidivl testl mov out dec push inc test out dec es lret push test fldcw pop fsubl dec int3 mov xchg ds sti fiadd mov insb xchg push mov (bad) into (bad) mov fdivrl add pushf data16 push dec cltd shlb xchg mov jb jle and xchg dec lds fldt pop js pop inc push push jb pop fs xlat outsl pop sbb adc pop lret push add stos and aam add fs movsl inc mov leave inc cmpsl (bad) testl mov pop add adc sub pop push dec loope pusha adc xor mov cs pop inc adc pop inc adc sbb in jl js pop mov lcall repz mov mov movsl add or mov fcom insb inc xchg testb cmp cmp cwtl xchg inc xchg or adc pop bnd mov sbb dec or sbb mov mov inc fcomps jno xchg push adc inc repnz add dec push pop mov and pop repnz in arpl gs mov mov aaa cmp mov push and push and or dec mov mov add xor ljmp mov sub int3 test orl mov adc popa sub or xlat into cmp bound push add pusha jno add and or mov inc pop dec sub repz fwait sub cmpb xlat jbe xor int3 dec (bad) int3 cmpsb dec mov scas out in xor mov shrb dec jecxz xchg push repnz mov mov ret mov nop or xor (bad) mov xchg mov rorl lock jae data16 pop aaa sub repz xor or enter roll xor jecxz dec shlb bound test adc dec xor mov pop int push fs ss add aaa jae cmp or (bad) inc jne data16 or jo sub or pusha mov roll repz rorb (bad) sub xchg nop movd stos dec cmp rorb xor test push push adc adc mov pop xchg inc dec add xor inc dec ds aaa xchg adc nop fcoms aas mov test pop inc cwtl cwtl inc pusha (bad) sbb shrl sbb mov test fs mov pop inc inc sbb rorl jmp loope pop clc jns mov shlb sub imul dec loope pop add scas dec dec cwtl xchg in scas dec loope inc inc cs or jbe loope jb mov and adc js inc add dec push mov push popa pusha or lods dec push push mov inc lods inc push xor dec push lods addl cmp pop push jb push mov jno pop fbld pop pop inc pop test inc fistp xchg ret pop in adc enter or mov inc pop inc mov insl pop mov pop pop sbb inc mov fadds jo add sub inc inc or es mov push lock out fisubl fisttpl dec dec jnp mov ss insl sarb sub or out pop sub jb mov rorb or or nop cld mov sbb push fisub mov test movsb adc push mov xchg add push faddl test jno cmp or mov pop sbb and pinsrw insl push mov sub bound enter sub pop mov mov scas push inc add and xor add xchg or das mov cwtl inc pop push andps add cmp add mov or addr16 and fnop mov unpckhps insb in adc pop add cmp cwtl sbb mov cmpsl inc pop push je dec xchg (bad) jb inc mov enter mov mov daa mov mov or pop sub xor jne imul push cmp mov es sbb lea pop daa push clc jge in int3 dec adc dec pop or mov in xchg rclb lods mov jae hlt mov dec aaa jns clc dec jb sbb outsb arpl jno fadd out stos shll rolb cmp iret dec cmp mov int3 dec sbb call or fsubrp push lcall inc xor inc mov sbb ja dec mov arpl and ss push test outsb andl in sbb (bad) mov push adc pop lock or je mov inc sub dec dec sbb sub sbb and daa daa incb loopne fsubrs sbb add (bad) push inc aad mov ret mov add add pop jae sti int dec xchg jg mov xchg mov sub subl sbb mov movsl push lods je mov jae int3 cmp xchg push jne hlt sbb loopne sbb imul je scas mov push test add or jae add add pop push (bad) repnz adc pop js das sbb and cmpsl pop mov mov jae xchg cltd mov add ja testb cs sbb adc lcall adc mov inc lahf test (bad) cld push sbb push roll pop push aam nop nop dec dec gs pop adc inc das jno rclb xor test dec leave lock jns push or and dec jne inc fsts and pop adc mov add and sbb mov or mov fildl inc or cmp and or add or out test mov ds push inc add sarb mov out aas or popa sub ss push adc dec sub insl loopne xor adc mov addr16 es dec push mov adc mov xchg mov xor aas cmpsb xor xchg or cmpsb es xor je mov inc popa pop or push cmp mov adc jle pop or push inc add cltd mov popa lds or subl je movsl mov dec jb out (bad) lret add add test inc dec dec popa hlt dec imul sub mov xor cmp jno push lret js inc outsl cmc or xchg sbb fwait jl push cmpb lret push push cmp pop jp sub jmp sub outsb push add sub das or insb fldcw pop pop bound xor out dec xchg adc sbb add pop test ficomp ret mov fcomps outsl (bad) xor sbb cli and and jecxz add pusha adc enter dec mov jno test in insb pop inc mov and sub neg jmp arpl je xchg enter adc mov repz inc pusha push push test xor iret adc sbb mov jbe int3 imul scas add mov aas push cmpsb imulb inc mov fist dec xchg cmp pushf rclb adc jmp xchg ds and inc xchg movswl dec or jns shr mov mov cmp fcompl shl js push cmpsb sub adc jae or orl ret std or jmp fs ret pop inc xor lea (bad) mov icebp jmp cltd push mov inc inc or dec cmp sarl dec or lret add popa mov lods pop movsl or mov (bad) push inc gs xchg (bad) sti and frstor sub pop fucomp dec (bad) xor push jmp cs and mov fldcw jmp adc gs fsubl push dec mov fcomps ss jmp mov mov jp sub pop ja adc repz out popf mov nop and dec fs daa adc in xchg std aaa add mov and lods cwtl loopne movsb inc xor clc bound jle push ss xor inc push out fs (bad) mov sahf push push and sbb sbb push sbb sbb push movsl adc loopne ret fdivrs push and pop inc push push push jne cltd inc add sbb cld rclb daa add push sub je push add dec sub or mov push push dec inc sbb sub sub test adc fdivrp enter add aam rolb jle dec js cmp jmp push add add cmpsb lea bound je pop inc or das jbe cld andb std push add enter cmp pop mov push xor lods rorb inc rcrl pusha pop sti lea pop or cmp cmpsb and inc jb add xor (bad) mov mov int push inc dec mov das mov lret leave jge call xor fcmovb cmpl pop and cmp add (bad) les mov mov or sar xorl sbb cmp jns ljmp jnp cwtl insb push cmpl sub xor push sbb adc cmp xor inc push in sbb dec sub add test and fmull andl test jae lock pop (bad) and push mov push mov dec aad add sbb sbb mov loope pop out push adc xchg divb push and mov push and mulb aas or notb mov ret (bad) js adc and and lea out xchg int3 dec mov jo inc mov mov sarb cwtl xchg es or xchg movsb or adc adc aaa push dec adc popa fldl sub out adc movsb adc mov dec das push sub dec push inc xchg stos ds push sub andb sub pop push addr16 xchg fnsave mov lds sbb sub daa jae shrl (bad) mov inc adc or test xchg xchg pusha mov pop cmpsl sbb add xchg mov or add add sub sub pcmpgtd pop loope inc mov in add jle lock add int3 ss mov adc pop mov and push mov rolb and je mov sub inc lock adc or fidivr add mov cmp pop je mov sbb inc fisttpl sub stos outsl add sbb stc xchg dec or or or add inc sbb test dec mov imul inc arpl movb adc jp bndldx mov divb addb jmp dec nop and fisubrl or xchg dec icebp mov xor push push daa scas mov dec adc inc or (bad) mov es jb test loopne lahf sbbb cld push xor xor dec notl add sarl push sti gs lock sbb cmp movsb cwtl sbb les sub inc addr16 inc pop or push push lea push add push mov daa mov mov icebp xor jg add outsl or lds sahf mov out sbb pop mov fistpl jle mov fs add or hlt fdivrl sbb in xor jae mov inc mov lahf jns call xchg adc pop sarl ss adc and imul stos inc fcompl add loopne push adc inc popa fld in or push pop and ret adc repnz add fmuls cmp iret incl jae adc mov add xchg daa sbb je cmpsb ret ret or dec lods insb sub or fldcw mov mov adc add pop mov dec add xorb dec add ret inc or in push push cmc ds mov aaa dec ret inc jmp pop xor insb ret (bad) cmp dec pushl cmp push adc inc inc mov mov enter inc sbb fsubs mov and js xchg lds adc or es xchg (bad) shrd pusha pop popf mov movsb enter or add xor movsb adc xchg xor sbb xlat andl or inc add mov dec es push cmpsb jo das stos mov sub dec add and or cltd pusha mov push xchg and loope xchg mov popa inc push test push and adc mov dec popf adc jmp mov inc xchg js dec xchg xchg (bad) mov xor movsl ret or xchg (bad) add adc xor lret lahf adc or stos arpl test orb pop jne sub insb pop mov imul dec gs (bad) mov dec dec mov sub jg pop cld jmp mov andb (bad) push xchg int3 dec jmp inc loop push faddl or inc dec dec or xchg in inc push mov aas push repz fcmovnb fs testb and mov movsl mov daa or sbb mov pop ret inc mov and or mov fsubrs pop or push daa adcl into dec das xor js jb stos pop adc imul add add sub sub movsl jns sbb add add dec sbbl jecxz xor mov and (bad) jl or add mov rcrl fcomps int xchg andb xchg iret push mov in inc lods add pop or dec mov jl xchg push out or hlt sarb dec loopne and push mov cmp fmuls push movsb das sbb or ss movsl mov ret rolb cmp cmp mov imul pop and sub sub rclb adc arpl (bad) xchg rolb adc inc imul and ret popa sbb xchg or lcall push shrl dec inc push mov inc and push cs or or fcoms cmp arpl test mov cmc out test pop add add test aam cmpsb dec and xor ds or in aam out push lret mov cmpl aaa sub cmp mov or jle jne (bad) mov lret stc add scas sarl mov or in or lahf lcall pop mov inc jl mov push xlat xchg int sbb cwtl lods les sub dec add push aam xchg jo (bad) js xor and xchg and fwait dec ljmp mov jo mov cld pop add daa push pop adc enter fwait sub call jmp xchg inc mov test dec call dec loopne jl int mov dec adc out mov aaa add and push adc insl not sbb or inc test stos fsts lret ljmp jo fistp sub mov lret cwtl rcrl or push mov push rclb inc cmp or lahf mov leave (bad) in inc ret shrl xchg push icebp add call into orb mov mov in js es insl and add movsb inc femms dec xorb scas xor nop adc rcll mov dec add add add loope xor inc in rorb addr16 cwtl pushf xor sub xchg cmp sbb jg jmp sub xor mov (bad) cmp and test rcr call rcll dec pop dec mov and push imul cli (bad) or and adc mov xchg test cmpsl andb pop sbb dec mov push imul xchg cmpb adc xorl aad xchg bound adc sbb dec sbb jo add adcl outsb xchg add nop add jmp jbe aas mov cmp dec aas aas int3 xchg frstor imul clc inc dec push cmpl push jnp cmp imul movsb mov dec or push push mov pop push adc and pop repnz inc pop lods cmp mov sub cmpsb mov xor inc js pop icebp icebp jl xor xchg aad add mov ret nop (bad) (bad) adc pop sub popf scas sub hlt add ret loopne or adc movsb or push hlt jmp repz add jo and js aaa add add imul jbe fwait add cmp (bad) mov fisttpll pop int3 inc dec mov adc aam push add mov shl push ja popf cmpsb push mov psubusb jge mov mov or testb pop insb add xchg sub mov jne popf or cmpsl testb sub adc adc pop xchg pop push es or cmp or cmp pop push cmpsb leave xchg sub fcmovnu xor or int3 test adc sbb dec and xchg cmp mov lods nop das lret adc ljmp pop jg clc lcall pop mov arpl das subl lcall js lsl inc jg or ret enter jb or pop push jp dec or test (bad) (bad) cmp sbb jg cmpb mov lret add pop jne outsb lcall lock add inc xchg mov mov xor pop daa xchg cmp in or push orb inc xor imul xchg push push and pop jnp xor out add inc or and jnp xchg mov pop sahf sub or (bad) shrb push and adc aam jne sbb sbb inc sub or imul test popa add inc dec push dec dec jmp fs fisub pop cmp or cmpsl jnp sub pushf pop add hlt je sbb movsl pushf in clc cmp cmp pushw mov out insb aaa hlt rcll inc in in out lcall jo test cmp add adc loope sbb or add dec push das arpl stos lock nop iret add rcrl jmp loope andl xor and lret lea adc xor pop xchg popf adc rorl pop mov push pop inc push inc lock or adc add jno data16 and xchg or daa adc fcoml imul ss aaa jmp add mov addl cmpsb (bad) je push jp and pop or add fwait mov dec sbb push push repnz enter data16 rclb cmovs fwait mulb sub sub movsb sar mov mov imul (bad) in sbb nop enter roll dec dec ljmp or popf sbbl push ret dec movsb add push js inc xchg add add mov mov cmp push adc or mov xor (bad) ret add sbb pop cmpsb xor push rol pop cmpsl add mov or lock pop mov movsb std outsl lcall nop test dec test add movsb neg in ljmp jns (bad) mov add (bad) pusha add (bad) in (bad) cmp push arpl fs jle sub and fmul push adc enter add and lods js or in frstor pop clc daa mov jns das add les sub mov iret sub pop pop enter lret sub mov add das in aaa mov cmpl ljmp mov orb bound jne clc inc ficoml sbb or pop inc and adc adc nop mov nop scas xor mov sub lods add ret cli mov mov popf pop loop sbb inc jo inc loope or lock inc ss jnp pop ror out int3 adc xchg lods mov adc fdiv or xor outsl pop mov sub add xchg and push push mov add push sub mov faddl in cmpsl ljmp cmpl sbb imul xor aaa cmp movsl test jno test movsl sbb out movl fstpt xchg mov cmp enter and sti jno les mov adc mov inc shrb push or and aam popf sbb jae and test shll out add mov or fcompl enter xor daa mov orb adc lret add cmp fldt stc adc xchg adc mov cmpsl ljmp adc adc mov or and por add sarb jno imul gs pop inc push xor orb lods push (bad) leave arpl scas rorb fs je mov rcr cmpb jne enter mov add inc add sbb jl cltd pusha es jne mov and sahf test cmpb adc sahf lds dec sbb and test jmp sub xchg inc xchg inc stos ds icebp ficompl sbb mov mov jne loopne movsb in or inc mov cmp jle jne (bad) xchg dec cmp pop dec pop imul add popa addb jno lea mov icebp pusha sub je test pop add add les push mov (bad) cld cmpsl adc lds ljmp daa pushf out adc popa adc xor je enter mov rolb cmpsl xchg lcall or mov xchg push pop add or pop pop mov dec lods pop add pop inc jno ret pop adc cmp xorb pusha jmp int xchg mov iret sub imul sbb (bad) cs (bad) mov lahf popf data16 add gs test add lock jl lcall push sub fiaddl and adc (bad) sahf pop loope mov push and add mov adc pop popf cmp pusha cmpsl cltd add mov sbb inc jo cmp adc dec adc jb adc or sarl scas mov mov sbb dec fs push or je inc fldt sub stos mov mov xor pop test push or inc push decl imull mov clc add cmc pop and pop fisttpl movb sbb inc mov lret cmp xchg xor xor test rolb sub adc adc mov ds movsb inc ja add outsb mov push push cmp push cltd add cwtl xor gs mov scas xchg test mov mov adc jae nop xchg (bad) cmp cmp int imul sbbb and addr16 cwtl push mov sub js mov mov push fisttp lret mov push mov bound in add push cmp not sub es sbbl negb jg data16 add das sub push inc ret push push dec dec pop nop add and sbb (bad) xor sub in popf ss push dec jmp pop imul or sbb sub xchg and cmovae xor scas adc push test sbb cli add jbe adc imul pop cwtl and add xchg (bad) adc xor sub std fdivl cmpl shlb mov dec xor adc dec add enter cmp push push imul mov popa cmp sbb icebp mov pusha imul and (bad) add and (bad) (bad) scas inc add jns cmpl push cmpsl pop adc fldt pop psrld sbb rclb (bad) mulb add inc lcall jmp pop rclb icebp ss mov xor add dec xchg inc test sub mov mov fadd pop test aaa sub add add neg fstpl xchg lods push inc pusha sbb fs or rcrb jo in rolb push add cmp cmp data16 andb and adc adc dec ficomp fimull jno lcall sbb jge aas jmp or push js movsl sub test daa jo lahf jb sub or push pop add das jl push pop addb cmp ret sub fnstsw incl xchg mov push cmp sbb repz es or popa cmpsl sub mov cltd lods cmp mov inc sub adc sbb lock leave add mov jmp test xchg (bad) mov push xor pusha jmp sbb mov and std adc inc dec push ret mov and es sbb lods test or xchg add jne lea pop inc adc clc push test hlt fdivl js add or push cmpsb imul pop inc rorb add and data16 xchg ss and sti pop pusha dec pop (bad) cmp orb mov mov mov incl idiv dec sub fcomi out sbb sbbl test or cld scas xchg shrb pop add adc (bad) push mov hlt out mov or aaa pop inc cmpl jne pop jbe or nop cs sbb add or ljmp inc negl in pop cli stos jl cmp sbb add cmp add aad and es or cld jne xor add push test js mov mov sbb mov aas adc cmpsb mov and dec xorl pop xor ja sbb push movsb or xchg xor stos movsb jae out mov fdiv sahf cs rorb xlat dec xchg pop ret inc out (bad) add les sbb jge cltd fidivr inc jo jns fild test adc les dec mov xor sub sbb xchg add dec outsb pop add dec ljmp and cmc sub sbb mov sar push or fs shrb pop stos push andb into pop adc mov (bad) mov aaa arpl jns loope mov cmp pop sbb dec add mov sub insb cmp iret jmp and fs jmp dec adc jl adc mov lds jmp test sarl test rorb sub xor sbb dec or popf adc mov mov push pop sar sub xchg sahf pop xor dec jg mov mov adc adc mov sbb add xor inc scas hlt nop and aad inc ficompl jne inc inc push cmp lock sub je (bad) (bad) mov xchg or (bad) (bad) mull cmpl dec xor sbb stos mov loopne rcll xchg and add ret inc adc sbb sbb push and ficom jno rcrl lods xor push adc jo cmp push adcl icebp mov (bad) sahf dec or dec inc cmpl in je cmp je ja (bad) sbb mov mul xor push jmp rorb (bad) push pusha test hlt xchg dec push pusha adc cmp inc cmp jl addr16 jo xchg mov mov pop inc lock sti sub push push sub cs mov push xchg push mov in les pop movsb cmpsl dec mov cwtl pop es mov mov pusha (bad) xor pop popa rorb in mov sub into mov in stos cmp shr adc xor ret je ficoml adc add cmpsb inc or popa mov or inc add jle push mov ss iret inc dec mov fdivp mov push js pop xchg xchg inc adc ss push mov xchg bound clc mov jmp idivl into arpl cmp inc adc popa xchg xchg cmp pop clc pop gs mov lods rclb cmovns outsl sub addr16 xor push push jecxz sti cmp aam jbe inc pop adc inc popa mov addr16 adc push das adc test mov pop dec sbb imul pop daa push pusha add lock loop sar (bad) aam icebp shl jne in fbld popa pusha aad int3 test gs in (bad) xlat out pop cmpb xor sub imul add cwtl enter xor lods loopne fwait jmp dec add jbe mov aaa add inc sbb aad mov sub lret mov pop enter movsb cmpsb mov push outsl add sbb stos fwait add mov in loop add ja push fisubrl loope push dec loopne dec stos rolb and (bad) flds add maxps and sbb add in xchg sub aaa (bad) cmp test fadd inc add ret inc mov dec je and mov mov xlat into xchg in roll push mov in jae push sub mov pop mov clc adc inc ds mov add rcrb sub xchg sub aas mov inc add inc sbb shll and inc daa fwait clc sub adc pop xchg sbb dec ret inc lahf push sub add rcrb add out mov adc clc addr16 inc cs push loopne push cli push mov lods aaa push dec push push test mov add cwtl stc inc mov fwait clc inc clc test mov push or push mov push or add jp mov mov dec or add adc daa inc aam movsl and fsubrl mov push ret fisubl mov or adc push cs add jno cmpw icebp popw add popa mov add push or scas dec jmp dec les pop into movb mov xor jo sub adc jmp mov xor cmp push mov shlb jno popa pusha adc cmp arpl inc or inc aaa sub cmp and pop adc insl cmp or push dec (bad) and add mov mov leave call rcrl xlat ffreep add out mov mov pop mov movsl test xor cmpsb xchg push xor push pop pop aas lods push add arpl xorl jo sub mov (bad) cltd mov push jne outsb pop mov xchg xchg push inc pop xor repz in ret mov aam (bad) and lret mov int3 stc (bad) jl or xor rol adc mov idivl mov sbb seto ret adc jecxz inc add pop jmp and xor loopne mov fcmovu jbe sub and ret xchg xchg loopne dec in pushf xchg pop or in adc clc mov pshufw sub sub test adc mov lock add xchg movsb add mov inc mov and push mov add lea adc aas lods pop mov sbb adc mov or mov sub or inc sbb push and sbb sbb inc xchg adc cmpsb mov add sub fwait cli jge (bad) cwtl push loop int3 jge sub mov scas fadd loopne int incb or pop popa subb mov push sarl or push int3 sbb and iret ds sub inc dec cmp mov pop aas loopne lock hlt and dec dec clc inc xchg or lods xlat sbb mov mov iret mov adc (bad) mov jl sub add movsb cli xor mov xor addr16 (bad) sarb sbb popf shll ret sub shr movsb push es or je and xchg imul adc insb loope mov (bad) xor push (bad) jo mov push dec xchg insb jo repz mov std dec dec pop push or lret roll pop inc xchg mov leave xchg rolb pushf (bad) push sbb cmp xchg xor out xchg adc lock push add pop jne insl pop dec sub (bad) ss cld sub sar xchg roll aaa data16 (bad) hlt dec enter fwait xor imul arpl lds std cmpsb cmc or ret push or push in test icebp orb lods xchg xchg das pop fadds cli addl or jo jmp orl jne sbb lahf andb aaa add rcrl add pop inc pop roll or add adc lds adc adc mov into lret ss sbb add add jmp stos sub mov insl pusha inc and enter add mov pop lods add icebp inc inc pusha push and xlat or mov mov jb pop aaa cmp scas jge push pusha rep in or test or pop and adc lahf loope pop push roll movsb and pop xor sbb and shrb and push bound pop stc cmpsb cmp lret sti fcmovb or sub pop xor cld jmp or test sbb push sub lds addl outsl lods inc lds rclb pop fsubs inc push jecxz incb mov cmp push inc aaa or inc cmp movsb push dec jne subl aad dec pusha sub push xchg adc adc dec mov rcr aad or fs and movsb aam mov pop loope and add mov cmp sbb repz jmp fild es add movsb or inc jmp pop out lds rcr inc in add dec push jo adc mov or dec lods lcall pop push push les out call inc arpl or pop fildl (bad) por cmp or lds insl xor and jg mov mov (bad) sbb addr16 jbe add push outsb jg mov lret jmp dec mov or mov pop outsb add loopnew adcl sbb cmc cmp mov aaa bound loopne cmp fs mov aad jne aad mov sbb or jecxz gs rorl mov in push (bad) rcrb and dec js xor cltd adcl mov callw or xor rcrl add std pop rorb sbb aas add sub mov push popl lock icebp je cmp inc aam cmpb push push into or sbb (bad) mov leave ja cli flds sub adc fdivs and daa dec mov pop jge prefetch add pop ret sahf mov xor sbb into mov pop jl loopne aad and or jo (bad) pop add add or sbb js mov adc jb lcall into jle xchg mov jecxz lods push or lock and and adc fistpll loopne cltd sbb pop or insb sar frstor popw push fisttp pop dec test mov inc mov dec test mov add push (bad) sub cmp call leave fistpll pushf pop add (bad) xor out sbb add jne fdiv and nop andb scas in adc or and cmpsb inc call shr mov out nop sbb mov je,pn push (bad) mov push shll test cmp dec jmp cltd and lock xor and ret inc xor add ret mov cmp dec dec jp cmp xorb cmp rcrb in test push lret sbb mov push sub test ret in leave mov xchg push mov mov popf or ret mov add or adc jmp xchg (bad) inc dec jmp inc scas mov push push sbb mov in aam push xchg fisub movsl and sbb movsl hlt xor loope sbb lds jno or or xchg ffree mov loopne sub and inc arpl lret add mov dec fnstsw testl mov ret loopne insb test call test in call and sub out movsl xlat test push loopne push adc loopne dec imul in ret es mov nop in mov dec cmp leave call add sbb je lcall push push mov adc (bad) addr16 test lret mov adc adc xchg test mov xor rorb aaa add dec ja and imul fdivr mov addr16 add mov fisttp jmp push jns push xor jne mov sbb sbb fild push dec xor mov xor enter shr sti cmp rorb adc mov pusha das xor xchg rcl cmp jp es (bad) ss pop out and inc aad cs fsubrl sub pop pusha adc xchg lock inc fisttpll sub pusha out fsubr add xchg js pop and pop data16 jno aaa cmp adc aaa scas cmp add je arpl push outsb pop fnstcw faddp adc inc pop mov cld add xchg xor aas sbb lods aam insb add sub or ss sbb aaa (bad) and jnp cmp dec aaa in (bad) mov xor fwait mov pop (bad) fldt sbb pusha cmp push sub cmp jb adc jmp sbb cld cld xchg es cld dec push cld inc scas fs cld cld xchg shl cld cvtps2pi pop add movl sbb fdiv inc dec loopne es inc sub dec rclb add loopne dec jmp xchg add stos lods rclb aas das mov cs addr16 es dec or lahf scas push (bad) and xor and sti mov lds jle pop leave and les xchg js dec scas movl movsl bswap popa sbb loopne rorb leave popa jmp xor push adc and push pop jl ret add push add es es add xchg inc xor out xchg xor mov aam mov or pop jb int push mov xor fwait incl adc test daa daa mov (bad) dec xor pop adcl mov fs hlt add mov or sbb pop aas ds fcmovnb (bad) pop jb mov dec dec dec hlt andb pop and xchg pop fidivrl or push push dec cmpsb sbb ss rolb pop push aaa sub adc push sbb pop adc add mov pop iret insl xor movsl or xchg ret mov cs mov sbb dec ss jne lds and rcll sbb imul push negl pop xchg iret cmp out pusha mov inc mov out jl or jle mov cmp add push mov jmp inc push pushl out mov sub push xchg sarb xor xor (bad) or jmp adc ret addb and andl fs sub nop lret push fsubl xchg cmp pop cmpsl add pop sbb push add data16 out repnz mov xchg loop adcb js sbb adc inc pop mov jmp and cmp push pop popa stc inc mov call push sbb xlat out test mov mov inc std jbe sbb cmp repz std mov mov test mov aad verr xchg (bad) nop push imul add js jo insb (bad) (bad) jge xchg push mov imul jmp mov sbb xor andl xchg cmp cmp push out jno (bad) sub roll addl ds negb mov xchg hlt movb xchg or pop add into mov sbbl ffree xchg (bad) xor push mov mov add pop adc or xchg push pop adc outsb insb sbb aam and ljmp aam dec out aas mov movsb mov jne adcl sub cmp arpl movsb xlat fcmovu push pop lahf cmpsl push addr16 js push xor lods add icebp sbb dec pop outsb or addb repnz or add es and adc daa movsb add dec xor jae cmpsb aaa (bad) adc call xchg scas and insb inc stos cli and int push call fucomi jne orb lahf inc push popa (bad) or pop ds fldcw sub das adc test rorl and addr16 insb or das push mov hlt sub mov mov cs jno dec or jo xor push ret and pop enter das sbb dec lret or cld push ja pusha sbb call sub push sar movl rcrb xor mov and mov int stc out dec inc mov sbb pop movsl xor mov adc or loope,pn mov jmp movsb mov xor ret push mov cli (bad) mov testb inc add xor js out xchg testb sbb out sub cmp das pushf and rcrb mov cmp and lret lret xchg inc mov test mov jbe (bad) sub adc xor loop push mov push aas dec jae das sub test mov or sub es cmc sub and add sahf or push test fisubr pop xchg pop inc aam outsb movsl add mov rcrb and movsl xor push lock cmp iret outsl xchg xchg pop sbb xor aad xor pop sub push mov dec mov sub loopne (bad) inc push or jne sub adc sahf or cmp je and push sbb iret adc pop cwtl dec out push fs into repz xchg lahf mov rorl sub lcall or xor lock sub mov add jmp sbb mov pop and clc add (bad) hlt dec es mov ss inc mov pop mov xor lea jne xor adc inc cmp sbb mov iret adc inc fucom in mov cmp pusha add pop xchg inc and push cmpsl dec mov ret pop hlt je push sub clc sbb fildl push xchg sbb cmp movsb mov and jne sub xchg (bad) sbb sub outsb nop (bad) or insl into add mov rorb cmp xor out test sbb push fdivrs xchg add lock roll leave push xchg push (bad) aaa lock lock xor sub mov cld sbb mov add xlat mov add jecxz or cmc in mov adc xlat in dec sbb aaa xlat jo jge inc sbb inc inc ss ljmp ja rorl xchg pusha imull jo jl mov addb in mov sbb das add shrb and add inc push jecxz inc push dec popf or jns and mov pop jmp mov lock xchg push jmp cmp jmp shrb xor imul sbb xchg out adc dec xlat mov adc (bad) mov pop loop push cwtl nop sbb xor xchg hlt mov pushf push mov (bad) fisttpll add and cltd test cs push xor mov inc cwtl mov add jns in and aas sarl xor adc push adc mov mov jne out call adc push (bad) shll push or sahf xchg sub insl js je inc inc mov je mov mov pop pop sbb loopne aaa jmp xchg sarb arpl ret lods adc and test push leave or (bad) sbb inc xor es dec jmp adc hlt xchg imul mov ret fcompl sbbb push push cmc and rcrl pop aaa repz mov test xchg rcrb or inc mov (bad) cmc out pop xor movb and sbb test jne or cmp sbb js mov xchg aaa daa ja je or xchg out or add mov jmp stos pop lcall rcrb add or adc lret hlt arpl jne notb daa or inc cmp call jb gs cmp mov sub in push inc sti sbb (bad) roll and stc mov pop test sti loopne addl das inc pop enter pushf sahf adc or or and (bad) (bad) dec dec dec inc loop dec enter popa and (bad) imul cmc loop cltd jl xchg push out sbb pop sbb or lods leave jo (bad) inc sbb sbb test cmp jl das out lret pop (bad) mov adcl test testl movsb push xor cmp mov mov mov test push fmuls dec fimull xchg fsubs push lock shll aam (bad) rcll rcll push data16 mov je sbb mov rcrb cmpsl mov sbb or push adc inc int3 sub sub inc aam test add sti sbbl dec pop mov lret push jo adc or inc add jecxz mov and fsts push sub in mov inc cmp repnz in adc movsb mov mov sub bound inc xchg je addb aam pushf test popf rolb add dec dec mov dec inc push fs sbb push push sbb sbb sbb insb inc js je fildl adc xor or daa jl pop cwtl mov loopne dec je adc mov movlhps sub mov jmp cli adc or and sub test pop imul mov inc lahf and mov sub add pop cmp pusha je cs and xor dec push mov mov pop lret adc push mov jbe les loope mov (bad) or incl pop or mov mov sbb loop leave gs ss push mov ljmp enter loop ret cld ucomiss xchg sub jle mov jne test loopne jmp ret test and add xor and (bad) or pop inc and nop mov mov pmullw push and pop jbe add daa mov mov xchg inc mov and add gs cmp xor or inc adc (bad) sub and nop and lahf dec and das inc xor pop jnp pop push mov dec scas xchg rorb and cmp mov push pop adc subl cmp jbe clc mov addr16 cmp fwait xor dec sbb mov andl and jmp test in xor adc xchg jg sbb jg mov movsb (bad) ret sub pusha not pop and cs pop mov out and imull dec (bad) sbb call movsl adc jle xor aaa stos sub inc daa fwait adc dec sarl push imul lea sbb bound fxch sti pop jb js add mov add je and dec subl jl add push addr16 in push lret mov or and pop jmp into pushf jne test sbb in fmuls sbb mov in pop xor rorl xor das xor or insb insb and pop jg movl cmp cld js jbe rcrb ret mov addr16 xor add ds popf mov bound jecxz xchg add inc cltd and cltd xor and add jo or mov les inc push lods cmp das mov out or pop test add mov add js ret inc xor adcb lsl add xchg add push inc push fidivr add push pusha ficomp dec loope mov lods aaa cli add dec stos imul fadd sbb xor imul sbb clc imul jge rcll push add mov ss jg mov dec mov sbb fldl push pop rcr insb loope xor jecxz lock out fldl (bad) dec cmp es ret and test inc pop cmp aad jo lret mov fcmovb pop repnz sbb lock ret daa pop inc sub add adc pop xor jae leave enter aaa xchg sub jmp xor pop pop add sti or or add adc xchg xchg (bad) push add neg fs push pop into push testl and sub leave inc xchg in je xor fucomp fildll mov xchg lods movsl in fcomps jmp out and sub sbb mov add pop push enter loope mov add and xor push sub imul stos aas rorl mov dec add and pop mov inc adc test je cmc insl xor xchg dec adc inc inc movsb test or mov push dec xchg fsubrs cld cwtl push pop push jae je or test mov lods adc idiv and sub mov cmp pop andl cltd push pop or loopne fmull mov jecxz iret adc jecxz sti cltd cld cmp inc cmpsl mov or out movsl pusha inc std inc sub js push sbb lcall push xchg push ficompl mov aam pop and push add xorl dec or sbb inc (bad) mov mov sbb adc mov adc cmp pop add add subl push mov cmpb adc push orb and xchg fild sub lock xchg mov mov test pop sbb test mov mov jmp push lret inc jnp lret cmp jne pusha jmp into add cmpsl add (bad) push push push hlt mov add cmp adc pop pop rorb dec inc int outsb mov pop pop popf xchg (bad) push cmp jne mov arpl ljmp lea mov ds and (bad) dec roll loop inc mov test mov arpl test pusha push sbb push rorb in adc mov ret and ja loopne xor fstpl cmp aad inc daa cmp out in (bad) dec loop sbb adc push mov mov outsb pop movsl orl lock test cli inc xor pinsrw push movsb add mov sub (bad) jle sub ret sub pop dec mov rolb ja in push push mov mov stos cmp mov or popf test mov sbb (bad) jne cmp push imul dec push add fwait push inc jmp mov mov mov or sub in adc add and aam sub dec jae ret push adc call jle xchg ret cmp pop mov or sti mov gs sub aas cld mov test add and mov xchg test cmpl pusha test in fcoms jl in mov mov cmpb js jno xchg mov loopne pop aam add roll les sti dec add outsb mov xchg pop pop and pop rclb push mov jbe rcr inc daa gs jne jmp xchg mov ficom cmp or scas fsubrs fldl lahf add in mov pop sbb rorb loopne rorb mov (bad) and add adc inc jecxz pusha out and or adc call xorb or xor sub rcrl add jle inc ljmp ljmp sbb xor lock add (bad) in cmp js call inc in xor add pop loopne cwtl or mov jno and mov fidivl sub in inc lret hlt in and incb and je mov mov inc or mov sbb js fistp jo mov mov pop fcomps js sub stc out lcall inc pop movsb xchg xor pop mov or (bad) jl clc adc cmc and imull ljmp and mov stos mov jo and in sahf pop xchg xchg test cmp dec mov inc sub add mov sbb push call xchg adc gs and push (bad) inc add xchg inc ret dec dec pusha adc push jbe xor inc add pop adc jae movb in add mov (bad) dec es sbb inc dec xchg xor mov cmp mov pusha cmp cmp dec push jns cmpsl fldl mov jl mov push pop push inc adc mov mov ret scas pushf or sahf fld xor sbb lcall insb js aas mov mov (bad) or jb or or xor lcall adc sub lea nop xchg and call or imul jmp push movl cmc and push arpl sub ret pusha test std lock sbb mov imul mov popa outsb ficom cmp inc cltd adc sub or push push cmp jne insl cmp ret jg dec sub inc dec adc (bad) lods andb cmpsl inc arpl xchg fwait or cmp int3 movsl mov or dec xor add pop jb mov es fild imul or jo xchg add aas or adc repnz and mov int3 sub mov mov mov add add imull add es rorl lret das in inc cmp push cmp movsl jecxz pop sub (bad) adc or xbegin out mov ficom (bad) push jbe pop inc inc test test jnp ret xchg mov inc add mov dec sub inc call movsl sub push mov cld orl cmp cmp andps add lahf mov push aad sub pop pop pop sbb add insb rcrl and mov push push stos scas push xor mov xchg cwtl pop mov or sbb cmpsb inc sub fcoml and iret aaa shrb (bad) mov and jecxz jo mov lahf mov cmpsl daa rorl and push xor fcoms push adc data16 sub dec mov repnz loopne push sbb dec cmp xor inc adc test mov ret bound sub fucomip or cmp jne xchg repz pop add jns (bad) and cli jg inc pop iret add ror test or mov xchg loopne adc jle inc repz lods mov dec and clc ret push push add fiaddl jmp inc dec mov xchg std movsb movsb xchg xchg outsl pop xor lock lds and fildl jno xorl xor cmpsl xor cmp push mov xchg pop pop or scas xlat cmc sub aam in nop cmp pop sub pop inc push mov les adcb mov mov xchg add mov mov enter dec push push (bad) ljmp adc or add mov or pop clc inc jne (bad) xor lret ficom movsb js jne stos inc call push pop or outsl add and fnstenv sar cmp jge,pn hlt loopne fisttp (bad) fst les test outsb pop js add loopne mov mov add mov jns idivl sub lea dec or sub xlat and cmc call pmulhuw push sbb fstpl ret mov ret ja pop mov jbe pop push imull or sbb das sub lods jo loop pop xchg mov or aas jne jbe adc sub rcrb jmp addl add or sub (bad) lret sub add mov dec ret sbb aam add push je inc push movsb ljmp jmp out addr16 mov jg push and fldenv jmp cmp adc add or jl pop push add clc sbb mov fcmovnbe arpl repnz jb add adc adc push mov and mov mov inc mov sbb lods aas aam push (bad) mov push ja mov pop fildl push mov andb sub xchg add push pop sub sbb adc mov fucomip das jo,pn in sub lods dec fwait dec (bad) mov xchg test and lret in or push loop lea into insb cld insb loopne dec test lock push jl int3 lea jnp xor cmp js,pt adc or rcrb push aam mov arpl mov fadd inc and xor (bad) jecxz jge mov sbb mov and adc xor push jo xor push adc push jmp mov pop xchg mov int3 jno aad je adc ja sub sub cwtl sub popa roll and and sub push push push xor inc test and loope pop dec dec sub mov adc fmuls and sub scas fimull out nop mov push adc xchg dec shrb push jo in rclb pusha (bad) imul gs les fistl pop xor fiaddl mov jmp and sbb sbb rcll dec add push (bad) rorl dec jecxz scas movsl cmp pop subb movsl or stos adc inc jge push xchg adc or push pop imul imulb test and push dec rcl incb outsb inc cmp je test aaa lds imul cs xchg sbb mov and pinsrw or repnz fnstenv insl mov xchg xchg xor insb dec add popa test add nop lret push or inc push sbb and mov mov push jae jb jo outsb arpl loopne add jbe jne mov adc dec and leave xor ret inc add add stos mov test mov jecxz dec popf or cmp push aaa push push adc mov mov lcall popa es sbb push imul add mov test mov push and fildl addl jb fs pusha push add xchg add inc mull in pop mov jle andl pop or ret nop sbb push repnz mov xor or mov sbb insb (bad) jbe jns (bad) xchg (bad) mov xlat out fdivl pop push or or mov mov mov sub mov add adc mov fs fsub dec mov mov cmpsl or (bad) mov jo or adc mov mov insb (bad) and cltd into jo outsl xorb dec pop mov shlb sub sbb ds or mov in inc mov sbb popa inc nop adc shrb inc add lock lock rcrl iret and dec ds sbb pushf dec push int (bad) jb jb iret rclb rorl and push (bad) xchg popa adc xor test loop test fimull or pop shrb nop mov imul leave lock lock adc sub xchg adc addl lds pusha jo sub mov sbb imul fsubs mov cltd (bad) xlat and or push arpl pop leave insl rcr xchg mov dec outsl jae cwtl and and fistp nop nop sub xchg push fidiv add out adc inc mov push push dec inc js imul mov dec and cli or test mov (bad) mov mov iret mov inc xchg and mov and and adc sbb jo rcll pop push mov repnz mov dec (bad) xchg xor leave mov in cltd (bad) outsb jo cmp lea in (bad) out cmp cmp jmp cmp in in out out cmp cmp rcl rcl cmp cmp aam (bad) xlat cmp cmp fcomp fcmovu cmp cmp (bad) (bad) cmp cmp rol ret cmp cmp (bad) (bad) cmp cmp enter cmp cmp int3 int iret cmp cmp mov mov cmp cmp mov mov cmp cmp mov cmp cmp cmp mov cmp cmp cmp test stos stos cmp cmp lods lods scas scas cmp cmp nop xchg xchg xchg cmp cmp xchg xchg xchg xchg jns cmp cwtl cltd iret lds inc jb es fsubrs das and pop pop daa and sbb mov ret rcl jg push push xor jne dec daa mov jne aam or fwait push push add pop call or pop lret adc fstpt and jl jae hlt xor sub dec hlt jno xor (bad) cmp into mov sbb aas mov push jg movsl adc pop pusha or addr16 mov test inc adc sar loopne in pmaxub inc cs add in cs pop or in or or in or in cs movups in adc adc in adc in cs pop sbb in sbb sbb in sbb in cs pop and in and and in and in cs daa sub in sub sub in sub in cs das xor in xor xor in xor in cs aaa cmp in cmp cmp in cmp in cs aas inc cs cs inc inc inc cs inc inc in cs inc dec cs cs dec dec inc cs dec dec in cs dec push cs cs push push inc cs push push in cs push pop cs cs pop pop inc cs pop pop in cs pop pusha cs cs bound cs fs cs addr16 imul insb insl jl cs outsl push push inc inc insl lahf insl push jne sub arpl rclb out or das mov xchg push fsubrs inc mov imul inc push xchg jb rcr push push sub outsl xchg push je inc (bad) mov pop push ss mov xor fstpl pushf lea sbb pop or mov maxps jbe pcmpgtd mov andl fnstcw jo dec subps out adc (bad) jae jne cmpsb aas pop mov dec or jns pop xor mov imul flds nop cmp ss out add push jo and gs daa dec inc sub jae mov inc dec jae enter add add adc jnp daa dec push add jecxz cmpsl sub or jae arpl mov lock xchg inc jns das add adc scas das or repz das iret lods ss aaa mov mov cmp mov test pop and inc es and xchg mov movsb pop aam and inc jne gs inc daa push inc jp mov sbb in fiadd das popf jae daa sub mov mov mov xor cmp or hlt ss push dec sub cmp outsl lods dec or aam lods popw dec sub cmp test cmp dec aaa inc gs mov pop ret cmp jne outsl mov push outsl pop imul sub ss pop push scas or adc sbb (bad) (bad) mov adc jge jbe in and adc andb dec dec clc mov rorb das push xchg xchg or js and push inc push push int3 inc dec cmp mov inc das push rorb test sahf mov cmc sub das aaa xor dec mov div inc fs hlt aaa push fwait cmp dec lock jp pushf sbb inc push push inc push popa fldenv iret in push ss sbb imul aad and mov cmp xor jg (bad) mov out cld sbb or test inc movsb pusha (bad) and (bad) push lds dec add push popa test dec or xor sub leave inc jge sub adcl mov dec jbe cltd xor and clc dec sbb lret pusha cmpsl movsb ret cmpl add and adc mov sbb into pusha pop jns xchg (bad) xorb scas loopne add and inc loopne inc shl xchg pusha notl mov pop mov push mov lret addw cmp ret xorb sub xchg pop fisubl or mov or das in pushf in out inc push test sbb jmp and test jge fbstp leave inc into mov sub add jne cmp test mov dec push fistpll xchg inc test pop lahf pop sbb aam dec and out add push inc fadds iret fdivrl push inc mov xchg xchg aas adcb mov mov inc imul cmc or add xor neg cmp sub aaa leave out adc cmp mov mov cmp movsb sub dec push xor sbbl mov (bad) pop pop jp gs ret leave adc xchg fidivl (bad) mov das pop nop lock leave insb bound shrb jl add cmp push adc xchg fstl jmp out (bad) out lea sub adc xchg outsl cmp and insl xchg and je mov inc jbe ljmp and outsl into loope imul enter mov aad cmp xchg mov aas mov xor xchg add mov mov inc add daa mov jge outsl cmp leave and push xor insl leave mov iret xor (bad) rorl dec dec inc inc dec dec dec push aam mov les xor aaa xor jbe add dec pop cld add loopne adc push inc inc (bad) cld xchg sbb ja,pt cmp cmp fsubrs bound ficomp out dec lar adc cmp repz push inc push data16 cmp xrelease stc cmp fucomp call aas and inc push gs jns out cwtl cmpsb mov sarb js out in cli or push xchg add sub and pop in nop pop inc pushf mov adc bound xchg jb xchg in mov jb inc insb test or mov inc sbb mov mov push leave lds mov in mov leave lds cmp lret and cmp jns or jmp sbb cmpl mov mov and inc mov iret and and or xor (bad) fsubl sbb mov push dec repnz add push xchg aas hlt inc cmc adc sub bound imul addl test jle mov ds inc inc xlat dec dec mov rol scas push push jae imul movsb jnp mov mov cmp mov xchg add sbb push add insl clc jecxz cbtw cmp or in mov icebp jp lcall xchg xchg mov test push std or sbb mov adc dec leave cmovb ror out test cmp or inc lods pushf cs pop mov cmp in imul inc push adc movsb dec add cmp das bound inc pop inc sti mov into imulb into insb dec dec out dec jnp dec sti outsb inc inc push sarb dec cwtl push imul hlt dec dec dec sub fidivr andb push push jle push mov test idivl jbe pop push les aam jbe loopne mov push or adcb or mov nop jb pop dec aas insb adc scas cs movl popa scas or shrb jb fadd imul mov lret mov nop in cmp add xchg inc (bad) xor (bad) mov aaa lods add push xor (bad) pop mov inc mov mov ja fidivl jl xor inc add clc clc inc dec lcall xor mov pusha fldt push inc xchg bound ret pop dec bound jg or lods (bad) xchg lock inc add call xchg dec cmp cmpsl shl int lret jl pop nop nop sbb cmp lods adc cmp adcl inc aas (bad) in dec add mov sahf cld xchg imul lahf mov sarb or mov outsl push push iret mov sbb add lcall dec jae je mov in hlt mov dec mov inc lret push pop push xchg jbe jb into adc dec test inc aam or jb (bad) aam cmpsl push pop aam or add inc mov inc les aas addr16 xchg (bad) and add or sub xor repnz xchg xchg ret mov sbbb adc xorl out pop inc bound pop loopne cmpsb hlt push in sub pushf loopne mov xlat iret xor inc arpl (bad) out mov push enter adc clc xor xchg scas or adc xor mov add insl xor lods sahf xor icebp outsl push mov xorl stos pop test pusha in pop inc jle fadds hlt push pop cmp enter ja jb mov rorb ljmp movsb leave imul xchg adcb push mov add rcrl insl call in and sbb lock and getsec mov xchg imul fisubl (bad) push sbb xorl cmpsb adcl gs js rol popf movb call xor sbb adc xchg ret xor orb inc mov dec lahf pop mov fstpl test add inc sbb pop adc xchg movsl push and pop movsb or pop push js xchg dec and sbb cmc jne aad flds sbb adc mov stos fldenv lahf mov insb mov pop insb shl push mov out xchg adc (bad) jbe adc push mov imul in jne int and adc nop mov push dec addb in aaa pop sbb push cmc mov lock adc cs lods shlb test or and inc adc push push aam ss stc sbb push push repnz push (bad) inc xor jge push shrl push jg xor popa xchg mov test in imul push add or leave xor adc nop inc sub mov movsb add push and pop pop xor jg xchg sbb push dec iret aaa inc or inc lea mov das cmc ret aas dec lret sbb dec adc push fsub xor jl mov cmp cli fistl or jmp xlat or adc hlt dec sbb xchg out clc inc inc dec cmp jmp es mov mov mov push imul inc xchg out mov dec or xor shlb cmp pop mov jns daa push xchg mov fstl nop sub movsb cmp hlt inc add lock xchg push dec add in adc loope add xchg cmpsb pop push call test sbb push sub in xor sbb test mov shrl jle (bad) call or out movsb in cmpsl jne mov enter dec aas push push jb nop inc mov adc push mov mov xor lcall inc jl cld cmpl dec cld dec xor mov xchg fwait stos pusha fsubl inc jbe add add fs and fiadd pushf pop nop or jecxz sbbl or inc jo jmp leave cmp xchg sbbl scas pop pushf adc loopne inc dec jne shlb test (bad) in repz sub nop fmuls and aad outsb sub lahf out iret inc jbe push mov scas iret movsb adc or enter push add gs insl and repz fisub movsl mov mov fisttp mov add dec xchg push jne pop repnz cmp push jne das push gs dec call add popa je popa inc bound popa jb inc jo jns fisubrl add jne xlat leave xchg cmp gs dec arpl jbe ja lods outsl add dec test loopne add cmpb nop enter push jg dec adc or insb outsl bound les push gs fbstp cli cmp cmp in jae push rclb add sbb arpl xchg gs lea add loop or (bad) cmp inc in adc dec addl inc xchg insl ljmp sub shr adc scas push xchg ss or xor jne test xchg cmp push mov dec cmp jne xlat (bad) dec and in push in (bad) push mov sarb inc lret clc test insb sub std ja arpl adc js ficompl mov imul jmp jne add scas dec jae sub mov movsb mov bound inc add lock jmp or mov aam push dec cmpsl mov sub sub mov ja push pop mov sarb sbb test lcall push sbb pop push push adc dec inc mov or adc (bad) cld test pop scas ret lret mov cld roll shr jnp cmp and lock dec imul xor or inc sahf movsb mov xor xchg ret cmp sbb cmp adc sbb mov add sahf out jmp popf pop cli repz inc mov bound insb xor push inc or mov mov push pushf mov pop and add inc je cmc sub mull sub insb outsl sub add inc lods ljmp inc dec jge sahf dec sbb push sub jle mov cmp xchg push icebp sub or sbb js push sbb inc dec pop fistpl cwtl inc into adcl cmp add cs test test sub enter jbe adc push movsl mov jl or and bound subl sub add daa mov or sub movsl in scas les adc out mov add aam or add or jno xchg fdivrs or jbe add test and mov sbb add jl ds test adcb inc pop xchg lcall pop push push sbb cltd fadds pop pop add popa lods cmp mov hlt and cwtl dec mov lea out incl xor or dec out xor daa (bad) (bad) rol pop xchg or int3 je int3 int3 into les xlat sbb add test out cmp repnz pop push jo pop aas adc inc test sbb xchg push jp lods ss pop xor push test dec or stc push jl dec ja inc xor add push mov mov push jb add sub je jnp mov ja xchg cli cld insb gs add test cmp or imul dec pusha add ja mov pop jns cmp cmp sbb sbb lret aam add insl sub push mov imul cwtl xchg adc mov xchg cmp lret mov dec xchg sub insb out fmuls fmul inc sbb adc xor xchg scas inc sub xchg pop push dec xchg pop ficom inc pop push loop xlat pop pop sbb pop rclb xor js pop push or mov insb loop sub jae insb jbe dec mov pop or pop sbb gs xchg (bad) cmp mov adc loopne data16 xchg or or pop or pop mov or loop mov inc cmc mov or or sbb sbb js adc add inc sub in sub push add xor add and cs pop fdivrs rcrb push fs ja xor or or dec sub repnz or sbb fnstsw test or adc mov ficomp mov push popf popa mov and mov and inc xchg cmp dec aaa in (bad) xor and test jno sahf imulb enter sbb and pop sub mov push sub jns or push mov jecxz inc dec add add mov es imul scas jbe fcomps bound fcompl or or mov loop clc push pop mov mov mov mov enter or scas je clc sub enter or dec adc sbb arpl mov mov add or ja and xchg add inc test stos inc sub mov inc sub ret or popa mov repnz or jge pop jmp mov imul lock hlt adc adc scas push pop incl andl push push mov mov xor cwtl push dec inc fisttpl mov pop data16 ss dec mov cmp out or dec pop lods inc lahf mov lea sarb cmp decl xadd pop or popf fsubrl jne sarb adc dec repz add mov push cmpsl fnstcw cld test dec cmp pushf mov gs and clc adc xchg pop test aaa insl sbb loope push clc mov mov xorl add inc pop ss (bad) jae and pop cwtl test inc adc fucomip xchg push jecxz out pop sub adc bound and scas pusha (bad) push call (bad) add sub hlt pop xchg pop stc and push hlt outsl inc out add outsb mov push push insb sub dec xchg sub pop jo xorl daa pop sub add push xor jo jb std or dec dec test sub sbb add sarl add mov mov mov fs jge push add jg inc shrl fimull jo and sub and in and (bad) in pop sub cs or dec dec dec bnd inc pusha mov mov imul insb leave lods arpl jp mov push and test mov bound ret rorl inc jb js (bad) push cmpsb and ret mov lds add pop inc lahf push pusha test mov iret mov add sbb cld movsb in jge daa and push jmp or fldt add mov in pop pop fsubs and dec fs mov ss pusha pop jecxz jb push (bad) arpl xor xchg mov lret or pop mov mov lds xlat inc push inc cmpsb aam ds xchg aam inc jns bound pusha adc scas jb pop lret jmp fisubl adc dec pop fimull fwait push lock lods push notb sbb fildl sarl xor inc push sub xor aaa imul loopne mov cmp mov frstor clc cwtl in add mov or adc add or dec inc add test inc loope xchg insl push mov stc adc xchg ror jae lea aam jle push lea adc mov test pop das fstps les je inc jnp movsl popa dec imul pop sub jg das pusha mov in sbb adc iret in fwait insl cmc adc mov mul xchg xchg int mov inc (bad) mov leave cmp xor cmpsl adc je jle lea ja jno movl jno push or or xchg or ss mov dec std cmpsl adc mov adc ret pop inc loopne cltd pop into fstps shrl push sarb adc fldt inc add mov leave lock loope pop aad adc dec xchg pop mov rclb andb jb jne mov (bad) aas dec pop mov push sbb repz pop (bad) in lods ret cmp andb sbb pop jne dec jo xor dec pusha cmp push sbb or cmpsb int3 sub bound push pop mov push ret dec ja adc inc lret popa and mov sub mov push sbb and and and dec fnclex jecxz adc sub and sbb or jl int xchg push push sbb push or push je jns and inc sbb add dec loopne (bad) jo icebp inc movl sub test mov lock cmp rcl ficompl and add test pop js sbb aas push sarl and sub jg dec mov out bound test or cwtl adc stos sbb cmpl sbb mov (bad) fsts movsb in mov add fistl jecxz cmpsl adc sub push data16 jmp dec rdpmc in cmp lock sub and lahf add or in and mov imull inc mov mov test roll nop xor out jg jb mov jb mov or xchg sub (bad) mov dec jmp pop push inc mov gs mov xchg rcrl xlat xchg mov or mov or dec in subl push ljmp push insb jbe (bad) jne repz inc into ds mov fidivr mov or cmp daa push or loopne inc pop cmp mov sub sub inc or dec dec push popl add lea cs lock inc xchg mov mov add pop mov dec cmp pop jecxz jne mov pop dec xor (bad) sbb adc mov pop enter xor add xor xchg data16 fs add dec or and jb xor es adc and inc sbb (bad) push pop les jae pop clc and xchg inc jnp xchg xchg fmul and pop decl pop lods idivl clc add jle inc call fist popa pop aas addl inc cmp add xor inc inc xchg mov add leave mov or pop pop xchg ja dec add ss aam (bad) ja push and lcall cmp push xor cld (bad) push iret cmp pop or dec rcrl je ss pop sub bound sub lods andl ja in sbb dec push adc scas rorl dec push enter in clc xchg shrb loopne add mov stos push outsl repnz clc jp sarl add mov add push mov pop inc inc add or testl sbb into pop or rcrb sbb jge mov sahf test sahf popa ret fs enter adc jle jbe mov cmp add and sbb adc pop sbb pop or cwtl or mov or add gs pop pop sub sbb sbb leave je adc fmul daa push push xchg mov pop ljmp xchg mov shlb inc outsl imul push sbb or inc add pushf daa inc lods ret mov mov add pop fwait xor out adc pshufw and test jmp lods and or test sub pop add xchg hlt add jecxz cmp pushl lea test mov sbb push dec mov push xchg sbb stc push mov divl sti in and es add mov mov mov in jmp add (bad) shrb arpl test (bad) jo dec movsl fwait jge (bad) xor xlat jp cmpsl or rol add popa cmp add mov jno mov inc pop add add (bad) cmc outsb inc ret cmp ss call inc insl lret xorl aaa jnp sub dec jne pop mov jge add jg icebp jg loop (bad) (bad) lahf pop jle in add jle hlt imul sub mov xchg push jle scas add es (bad) jae pop xchg bound mov or push pop xchg push dec fnstcw jne nop scas dec mov (bad) mov push inc scas test (bad) lahf mov and cmp cwtl mov movsb adc or dec adc shrb jne insl push (bad) or test jg xor xchg jg xchg or cmp out inc inc xor adcb push add xor lds rcll lods or mov aas sti cmp adc xor adc outsl dec and xor sbbb push sbb push or cld (bad) xchg cwtl stc lods adc aas and jae cwtl test mov lods push mov mov adc and and inc pusha (bad) je mov iret insb push inc out iret jo imul sub pop and xchg jbe sub js sub and lods into push dec jmp mov add inc push mov or aaa or cmp je and push xlat int3 test in inc sub sub jecxz orb orl push loopne fwait fwait sub inc push cmpsb pop xor jo ret imul inc je js pop jl or jl pop xor test push push pop cwtl mov xor inc je enter pop jae test inc add cs dec loopne call mov rcl ret jg or add imul repnz cmpb xor pop (bad) je out sub sbb fmull pop add xchg add imul dec and test push js mov adc ret or ret add xor xor (bad) lea aaa ret fisub addl rol or adc adc and and mov lcall stc (bad) aam push jmp jl mov enter pop dec inc sbb movsl or xchg push lcall mov xchg inc loopne sbb rcr jl pop or fwait sub add test cltd sarl (bad) leave call cmpsb mov adc sub repnz push lahf mov imul gs adc mov cwtl gs sub bound add xlat dec hlt es add repnz jae inc and push mov inc test adc leave or in aaa fdivs dec inc dec imul enter pushl mov xorb fisubrl mov js cmp dec and pop pop push adc ficom cmp lock outsb (bad) test xor jo mov into lahf ret xchg mov in mov repnz leave and xor repz test fcoms ret or cmp dec fsubl movsl xchg mov push test xor add ja xor and xchg pusha or leave add pop rcrb fdivl push and mov dec or mov push jno popf push leave cmc es jbe (bad) dec push jbe fadds jns jb nop xchg fcoms add xchg test lods or and xchg and and dec and pop mov mov (bad) in jns in mov out pop push rcrb enter add mov mov xchg add push add rcrb fisubl out mov repz adc pop xor sbb push out stos cmc push movl adcl cmpsb mov push mov or sub or enter inc fisubr mov jmp cmp enter hlt xor or clc push clc decl adc and mov ja xchg cld and mov nop dec gs addr16 mov mov in push sbb es test js lods pop lea xor rcrb shrb adc bound orl mov nop xchg push sbb xlat add jne je add dec popa addr16 xor add add and xchg gs mov inc and inc (bad) or jmp inc and fild addr16 add add inc cwtl cld sti stos mov (bad) mov or mov jmp lea push popa (bad) testl and pop mov clc add push sbb ja fcmovu dec fldl sub daa lea push inc xchg xchg (bad) mov popa mov data16 pop jl sbb das sub xor pop pop imul cmp sub cmpsl jo and add and dec mov sbb cmp mov mov xchg push adc jne inc incl push (bad) mov adc lods pop jle bound jg and loopne xchg nop fwait das jge adc or adc push add gs add aas cmp inc pop movsl xchg jo inc push dec jo (bad) scas pop cmp js sub jl int3 xchg in xchg xchg fwait jne andl xor mov sbb in xor in (bad) adc pop pushf sbb jne mov adc xchg xor inc shrl int push les mov lods std and cmp jmp aam fs inc pop jmp cmp pushf ret xlat jmp push and jo cltd push mov stos adc lods aad nop push adc mov leave sbb leave fcom or push cmp push adc and mov xchg jne xor sub mov xor sub mov aaa cwtl xlat sub dec scas adc iret mov adc push sub cwtl or arpl mov pop sbb push push enter leave adc dec push out xor or mov and cmp dec push lock sti add xchg and sub nop jno mov das mov add or shrl inc sub mov push xor roll shlb inc push or adc mov (bad) sub xchg cmp and adcl push (bad) repz or mov jne lret inc push aam cmp (bad) nop jae sbb out xchg lret in fcoml les inc pop and mov fsubrs subl subb add mov insb pop add xchg and push addr16 inc insb scas lcall xchg push sbb jnp,pt or inc (bad) jae (bad) out pop enter push add sbb mov or pop mov mov sub outsb push lods cs movsb ss ds sti test mov cmp movsb push aam test insb cmpsb mov inc push imul adc add or adc mov enter and lods mov pop in int3 sub popa push imul jl loopne mov cmp mov inc mov sbb push add test nop ja test pushf imul jo mov push andb dec je and (bad) dec push push test xor repnz rcrb es xchg stc or adc popa jo adc xchg cmp mov add pushf pusha mov rcrb loope pop cmp pusha mov cmpsb adc push add popa mov (bad) shl adc fisubl (bad) aas sub leave sub xchg sbb lods adc addr16 jb pop lock lock mov orl inc imul mov mov push inc enter mov xchg lods mov push add lret loopne lcall fdivl xor push sub adc (bad) dec mov xor mov test orl popf jo gs and cmp mov sub fwait in add cmpb jg das or add ja pop inc insb or cmpsl pop insl mov mov scas push xchg cltd sub jmp pop or cmp cmp pop add cli mov je pushf clc cmc inc pushl movsb xchg clc jo and clc repz or in fwait das or or or sbb loop aas mov xor push mov mov push lock orb sbb lcall shll ret push xchg rolb int and cmp sub push and lret (bad) pushf or mov je inc push push or dec cld call jo lea lcall sbb je rclb and push enter push pushf pop sub leave jnp inc or (bad) int3 xor push aaa mov cs pop test ja pop in mov pushf cwtl sbb cmpsl jp cmp adc jne iret sbb sub xorl cmpsb mov das lds sbb jbe call sbb test shrb test adc call push bound push call and mov mov popa pop add and out jl sub repz test pop mov cltd test mov gs aas jnp stos mov dec sub or movsb pusha xchg push pop inc test sbb test in imul test xchg inc inc mov or inc or call sbb pop stos lock xchg jne or ja mov sub mov pop scas inc mov adc sub cld cmp dec xor lock and add xlat rorb and add sub jg cmp pop mov inc dec jne jne dec pop andl inc jmp push add add sahf pop pop dec dec hlt dec ret push movsb jmp pushf or mov data16 in je adc loope cmp cmp test daa daa xor loopne jns mov xchg nop mov hlt movsb in mov sbb nop icebp and mov xorb ficompl and push rolb int3 push cltd (bad) jmp add mov cmp ret in es push mov outsb iret sub cmp sub dec imul out roll pop mov mov add movsb dec in sbb adc cmp out add imul xchg out bound sub xor int and in fimul inc jmp mov cmp pushf rorb push mov cmp jo es fidivr pop jo xor subl xchg ss dec sub dec leave ret push ss fadds adc (bad) jnp cmpsb inc sbb push add ret add cmp test cmp xchg int in push lds je les movsb xchg inc mov add and call mov imul pop rorl mov jno (bad) mov jecxz xor cltd add mov or dec mov xor push out dec adc rcrl fcom and pusha xlat das cwtl dec push adc aam mov ja js jl out adc js sbb les cmp dec outsl lret adc les mov inc js adc inc sub xchg jb int3 jl bound test mov mov scas push xchg inc push cmp cmpsb ja push (bad) (bad) cld pop mov (bad) pusha mov push pop adc pop pop mov in in push ret or and inc inc cmc frstor out sub pop add xlat jge push cs and addr16 leave nop pop hlt inc cmpsb cmc cmc add (bad) int hlt lea add popa mov or insb adc mov sub push or inc dec test and and (bad) add lds into scas xor mov ret scas hlt push cld jp jb jno jno cmpsb js or cmp or mov dec add sub pop ja jmp or pop sub add and shl cmpsb out or sub or xchg mov add enter mov fwait aam or sbb jb cmp mov mov sub push and cmp roll in xchg outsl push arpl adc or fnstenv adc ss adc cmp cmp dec or daa cwtl xchg xor lock shlb call cmpl xchg cmpsl imul stos out das test push sbb jo add cmpsl cs cwtl icebp pop dec sbb les xor push fcmovb xchg inc xor adc loope js and aas aas pop leave (bad) adc push mov out test dec or sbb sbb iret ds sub push adc xchg sub or loope pushf dec add ret andl outsb insb push outsb cmp test mov js lret add fwait orl popl dec fsts push lea enter bnd movsb cwtl mov push dec ret or jmp and hlt cwtl fs cmp xchg or call imul mov dec xor aaa fidivrl stos inc pop jbe addl and (bad) xor sub and mov push popf stc sub push lcall lea cmp daa pop out add inc jp sbb ret push cmpsl aam shlb fildll pop xor push inc popf addl adc (bad) cmpsl sbb add pop stos add and daa nop sub cld cmp adc dec xor andl jg adc loope (bad) jb fsts jmp xchg sti push pop push jo xlat lea out sarb je sbb or inc icebp scas mov call inc jo jo dec lods adc and pop sub push and and sbbl mov sub push xor rol icebp inc test dec jne mov mov push and add inc add enter jl push lret icebp je aas std xchg int3 shr ret faddl jle sbb push mov imul enter fdivrl add and jl cwtl in add sbb add mov cmpps sbb mov mov add insb xor divl loop push insl test js inc sub and addb xor mov stc iret stos dec mov fiadd jle sahf xchg dec mov mov (bad) xor push lock dec mov xor insb push pop in push adc fisubr sbb adc ret xor imul push scas (bad) and dec add sahf sbb icebp movl add xor scas scas add adc add xor scas dec movsb adc popa inc lcall and sub aad xchg daa inc inc (bad) insl sbb inc scas push push addl mov stos loope xor mov adc jae mov pop adc jl adc popf and adc mov cmp or (bad) push cmpb jbe push and in sbb adc and jmp cmp jl in (bad) daa imul cmp add xor (bad) cmp push pop inc jo in mov cwtl or mov push mov outsb add outsb in and xchg xlat inc inc cmp pushf inc das add dec psubusb push mov pop sub fcoms in dec lods or or and xchg push inc imul outsb mov in inc pop popa js sub fdivrs inc jl sub sahf out sbb mov movsb clc ficomp push xchg mov pop les shlb pushf mov fwait mov dec inc xorl lods test rorl jae mov scas dec rclb fdivl xchg pop push mov popf or fstl test roll mov test inc mov sbb insb rclb cli movsl nopl sub xor daa ror pop and arpl pop sub sub cmpl jmp mov popf and testb (bad) and push adc mov mov push or push or ss fistp mov mov mov pop add mov lahf or lret push mov das dec and push in (bad) lock popa adc lret pop jmp in lods es sub sub syscall scas movb ret popf sarb nop ss and scas adc js fstpt into xchg adc out sub mov pop rorl test out xor dec dec mov and jae inc dec sub jae xor nop (bad) data16 iret sub cs push fcmovne test push adc sbb or inc add xchg fstps les jb xchg dec add mov cltd dec mov push xchg arpl fidivl popa mov addl in outsl and scas jb add add mov cmp adcl rcrl push push or sub ret xor add imul cmpsb divb lock add xor inc js and jno xor aaa loop call push mov mov lahf jbe sbb movb repz push aaa xlat lea adcb push in mov add xor (bad) into addb scas push push popf lea shrl repz dec imul test and mov or mov insb pop dec mov mov mov adc aas or pop inc xchg inc ss xchg pop ret das ficompl mov pop push subb dec push je movsb icebp dec fsubr xor daa push addl sub pop loopne push cmp jmp mov dec ficoml adc adc es dec pusha sbb mov cmpb shlb outsb lods xchg es addr16 pop test cmp or adc mov jbe and xchg out in mov mov fisub jns dec sbb dec push jg jge pusha adc jnp insl mov jle and mov dec pop mov push mov and (bad) push push mov orl (bad) and cmp rclb (bad) pop rclb sub cmpb jbe pop leave sbb jg dec hlt aam movsl xor fidivl dec call pop bound inc mov rol push xchg dec or scas test jl jmp sahf inc test les fnsave (bad) (bad) mov dec push fdivrl inc inc dec add js fldcw loope push loop xchg mov cmp rclb mov sub pop gs push jo cmp les rolb (bad) es pop repnz xchg pop pop sub pop pop dec arpl daa adc push ds push aaa mov (bad) mov aas ds shlb ss shrb push push outsl mov or dec push inc mov inc mov inc xchg xor popa leave add imul rclb sahf add xlat xchg cmp inc imul call int add nop dec pop xchg ret ret lret nop sbb or or je mov lahf or sbb sub mov pop sub cwtl int3 push popa shlb mov pop test outsl cmp add add jmp lea pop lret sbb xchg lahf or ficomp xchg lds out cs dec loop pusha xchg les ficomp jbe add push cs cmp addr16 push or iret mov inc push dec lock push lock jo aam sbb (bad) lcall addl in cmc dec popf pop pop sub rclb xor xor stos sbb fs add mov adc out cmp push pop adc das adc inc sbb sbb (bad) nop or or inc out sbb loopne add xchg lahf xor inc or shlb inc rolb add subb inc pusha mov ds test inc push jae pop jae xchg out mov adc mov pop add sbb movsb pop ret fs jno sub or scas dec mov or ret testb rclb jo (bad) lfs pushf sbb xchg add adc jnp lods jae out pop xor movl dec sub xor daa rorb dec lahf (bad) hlt cmp push sbb dec popa pop inc and push add imul pusha mov and push movb add or and adc aam fisubl pop lods in fildl dec and xlat and xor fs in push add add ss les and mov xchg push add dec push (bad) push nop jbe mov mov cmp fcoml inc adc out mov mov add inc daa cmp sbb dec pop test test add xchg int fdivrl cmp xor pop sub adc or mov scas pop outsl imul ret mov (bad) mov or jo ret mov movsb out (bad) mov xchg insl ret nop push test fnstsw lret mov ljmp xchg outsb mov int3 pop clc ds js cmpsl cmp repnz mov ror cmpsl jge cld jle roll jo ficompl iret repz (bad) xor inc dec xchg pusha shll gs xchg xor in pop sub sbb dec rolb add sarb arpl pop repnz decb jbe arpl test test adc scas imul std push test push pop xchg or mov andl lret inc push imul push xor lret sbb ret les std sub xchg or mov mov mov lret and cmp punpcklwd icebp add adc add xor sbb adc lods xchg outsb inc call aam pop sbb pop jae mov push mov dec outsb shlb cmp stos sbb adc push pop adc or (bad) adc leave movsl adc adc and add popa inc stos inc or stos and adc mov ja out mov notb dec lret adc adc mov inc mov push mov outsl es dec lds adcb stos aaa sbb sbb add jnp add pop loop pop mov dec hlt sbb adc or stos or sahf daa sub std inc enter movsb pop push or cmp mov adc or mov dec pusha sbbl adc push leave push movl sarb aas xchg xchg jbe push insb stos mov (bad) xor ds or push rorb and ss in mov inc bound nop jns repz outsb jo aas dec sub add repz mov inc mov add xchg adc mov push hlt xchg add jecxz pop xor push add mov out cmpl mov dec aas and outsb das push xchg sbb adc dec lods xchg addr16 inc xor sub sub das inc mov mov adc mov rcll jl les sbb push popf fcoms sbb cmc sbb (bad) mov mov cmp shrb loope (bad) aaa sbb push and push or ja aam xor jge cli andb inc je pop addb mov pop stos sbb rorb fsubl lcall mov pop cmp mov fdiv xchg dec dec arpl cmpsb push inc adc sub je mov sbb mov adc mov ja push inc jmp xor lds add or mov inc setne adc rcll inc dec popa jno aam popa xchg xor dec shlb das daa loop xorb inc (bad) pop nop aad jge jl ljmp icebp sbb jmp arpl fdivl adc ja test dec out les addr16 rclb xor inc jo sbb punpckhbw inc or dec pop shl inc push jg cmp adc sbb insb jmp cmp and lahf imul jmp and mov out cmp xchg jmp dec xchg mov ficompl mov xor sub cmpl add leave mov jo or push popa rcrb add or sbb ret add push movsb pop lahf xlat pop mov hlt ljmp sub es mov xchg outsb mov clc jp push nop stc adc and sub mov mov or out mov jmp xor or xchg cmpsl test cmp call psraw sti mov and leave lret and enter rcr (bad) int sbb hlt call out cwtl js stos push scas adc mov and jae push cmp xchg int3 xchg dec inc mov shrl mov push movl inc xlat movb dec out mov sbb sbb lock mov push dec sub mov sbb scas popf test insb sbb rcrb cmpsl fnstenv nop cmpsb and add test mov fwait out and inc and or fmuls jp (bad) ja sub xorb xchg mov lods mov add clc dec push push or inc loope (bad) push sbb inc adcl divl cmp enter mov jbe mov je pop mov fs pop mov cmpsb push adc push pop rclb (bad) adc insl mov add (bad) xor push mov (bad) adc roll pusha xchg insb push dec pop rcll movsb xchg jo mov pusha outsb imul push test aad dec jge mov icebp add mov sub lret or insb cmpsb add popa jmp movsb addr16 js lock (bad) insb js enter cmp or insb jecxz push push inc lahf jbe lahf and or jmp push nop insl pop inc into in sub or inc inc xchg fadd hlt imul add pop mov push xor hlt pop jle lods andl fwait inc xor add xor cmpsl faddp mulb lret pop push xor pop mov je enter jge insb popa push xchg daa xchg lea (bad) (bad) in rcll push pop imull loopne xchg push rorb push jae push rclb jg nopl dec pop push dec or les lidtl insl dec (bad) mov adc adc ja popa je imul int bound lea sub sub xchg xchg xchg xorb mov cmpsl fdivrs dec cmp xor jbe jp aam mov pop add into dec adc push hlt pusha js pop cwtl cmp sbb xor pop jbe jbe fistp (bad) fiadd inc mov mov mov cmpsl iret adc cmp icebp adc scas mov push loopne dec stc fisub fdivl cwtl rcll (bad) sub mov add jae cmp jmp jnp mov in xchg popa jmp xor jno mov fsub inc mov adc adc mov mov addb jae fdivrs stos push rorb or dec call shl push mov lods xor adc cwtl pop sub sub test outsl jmp and inc jnp xchg jge adc xchg add or and adc pop pop stos pop sbbl sbb pop mov dec or or or jmp (bad) and bound fcompl adc inc fwait fwait test subb in mov lahf sub jecxz add jecxz mov ret adc arpl iret add es lcall inc sub inc mov and int3 (bad) or mov decb lods mov sbb sub loope sarl fadds lods insb sbb mov (bad) test xor mov addl dec ja mov push icebp push pop cs adc cmpb inc sub sbb add sbb cmpsl (bad) outsb and aam insl dec shr xor stos mov adc mov pop ds or out and ja outsl adc outsl movsb sbb xor es movsb xorl xor push (bad) mov ljmp mov or leave faddl adc fdivrs imul mov mov ret adc repnz out fisttpl and sbb inc xor add push cwtl shrl fiadd cmp mov pop xor jo adc xor xor enter out jecxz push mov push push ja or or dec mov sbb rorb push or in aaa add loopne mov aas movsb pusha cwtl inc fsubr dec or adc add add or in mov sbb inc pusha add pop dec sbb jns pop sbb add and enter sbb adc push aam sbb or xchg add dec xlat push pop rcll hlt dec sbb push rcl out enter cmpsl (bad) mov mov cmp add sub out and int3 ret cmp ja adc inc cmp sbb ror push in add out and lcall cmp pop test pop jo or loopne jle pop sub sti inc xor sub je jmp xchg xor add stos cmpl adc jno sbbl mov rorl push nop cwtl test call pop bound fwait inc leave je push cli fldt push pushf arpl push call and call and inc fdivs or jmp push jmp daa sbb aas mov push inc hlt mov int3 push dec pushw jg add (bad) mov movsl push adc and inc xor daa mov fsubr add or inc add gs add mov sbb sbb mov lods jmp jb test je push push adc nop mov cmp fldl xchg lcall insb in or pusha xor add fcomps dec and subl out add imul add (bad) jmp test mov arpl shlb push mov jl xchg sbb fwait insb movd sub jl cltd (bad) jnp pop (bad) jmp hlt adc cmc inc and mov sub fnsave add xor inc mov push push jl insb xchg inc xchg push adc add xor and cmpb (bad) jmp add sbb in push xlat jmp rclb cmc fstpt repnz mov jmp xor je test fadds pop rcll bswap dec add mov imul xchg cmp aad or mov insl clc lods aam xchg addr16 sbb inc pop sub in bound sub push mov xchg jmp cmp mov add add dec (bad) idivl and or push dec push dec dec inc push test movsl add shlb inc sarb sarl and xchg or in cmp sbb (bad) in pop loop dec sbb jb add or mov mov jmp mov adc nop push out test and nop jl,pt inc cmpsl mov push mov out sbb ret and data16 aas pop out pop inc push andl push movsb jle call adc enter loopne negl jo pushf push push bound pusha mov loopne or lahf pop sbb aas pop sub popa in add sub int loope xchg jnp sbb jb cmp inc cmp mov test sub into or push fdivs mov orl aad mov es push fwait sub mov mov add dec ss mov pop enter inc adcb test rol pop pop (bad) push or rorl inc divb or xchg call push mov into pop pusha add jb adc dec out (bad) xchg mov (bad) and ret stos pop xchg (bad) in ficompl into jmp mov lcall pop outsl fimull loop jbe mov inc push loop or inc and inc ja mov loope imul imul clc dec xor fwait mov xor mov xchg cmp pusha sub loop outsb or loope dec push pop adc sbb das lods adc xchg fcompl and mov inc push jge cmpsl dec iret or xchg cmp gs add push add popa mov add inc jo ja jns xor (bad) push scas mov pusha xchg add push cmpsb sub call daa das cmc cmpsl (bad) cmpsb bound cmp xchg xor into and xor xor call shlb pop push or insb loope jne push insb push and cltd dec stos in push test in mov out cltd push xchg jne lret fxch sar shl iret and inc xchg push cltd dec xchg mov int3 cmp or xchg inc sub mov dec outsl rcll loope inc subl add rorl in jmp fmull (bad) ret push add jno imul or sbb mov add ss mov ja test addl jo aas pop inc test and cmc mov push cs jl sub mov aam cs sbb push add push mov aas add ret (bad) push (bad) imul sbb fwait (bad) push sub test add je inc mov les inc or cmp pop or push and mov sti pop imul sub jbe push xchg mov (bad) in mull das xchg inc outsb push notl pop divl mov loop adc sub sbb push add push mov nop pop andl in imull mul adc pop js pop pop sub bound push xor xchg sbb pop das or pusha xchg push fldt push xor or push cwtl mov nop scas loopne inc std out les sbb xchg outsb add mov inc imul xchg sub insb fnstsw dec or popa sub loope adc or aam xor in jno stc add xchg test xlat subl xchg test pop add movsl lea in out jle adc out sbb mov andb xchg mov lsl das jmp mov (bad) out stc mov cmp clc cld adc mov lock cmp xchg xor cli aad jne xor jbe,pn xchg mov (bad) push loopne ljmp push lds loope sti mov mov jle xor in xchg cld es addr16 add push lret push movl (bad) fidivl ds inc jne xor jle std in inc xor adc add das add add mov jbe lods lret pop call inc fcmovnb sbbl orl and push scas xchg (bad) divl sub and sbb fnop and sub push out add sub repnz jne dec sub xor and jmp xor adc inc jmp mov pop adc sbb pop shrb mov test add (bad) cmp ror adc incb jmp cmp jne stos adc jecxz cmp adc or cmp lret mov (bad) cmp or push std and add mov push ljmp mov jge push xchg into inc (bad) mov ss cmc mov adc addb push fwait cmp dec pop (bad) xchg jne movsb xor pop add int3 out add mov sbb aaa popl mov push out jp xchg inc or pop xor jo dec call sub adc dec orb in sub aam aam loopne loopne jmp ficom xchg imul add outsb in (bad) ret push sub popa cmp jge inc cmp add lods popa jo push add or xor mov push dec fucomi cmp xchg adcl adc mov lock mov or aam mov inc lock rclb mov sbb int3 fsub jp jmp mov mov (bad) daa sub dec test xchg sbb mov xor cmpsb cmp arpl or and inc (bad) or xchg mov dec in jge mov sti push mov add (bad) pop addl cmp or rcrb xlat jle xchg and push add xor xor and ja ss cmpsb sbb shrl js lock cmc xchg or or (bad) or fcos sti cmp repz (bad) shll mulb adcb add cld mov pop pop add insl push nop ret and loopne lock test sub nop mov fadds mov inc mov xor and cmp sub lds stos jmp out sbb js mov mov xor loop cmp decl and xlat sahf cmp dec icebp (bad) mov push das sbb cmp (bad) fldcw sbb (bad) jb adc lahf cli loope sbbl add inc or lea or icebp idivl mov cmpsb out adc lret xchg jb cs and sub xor mov cli in or cmp sub cmc enter xchg xchg jnp call fiaddl (bad) xchg in pop (bad) dec (bad) sub xchg xor dec rclb mov lcall mov iret mov fnop add jnp imul and sbb xlat adc add sub loopne les mov outsl adc add iret xor fdivs into pop push sbb mov cmp xchg dec sub dec iret pop add jle jge inc sbb and dec ljmp adc inc cmp cwtl ss pusha mov test data16 cmp jge push push ficom xchg pop mov dec or out push adc cmp fxch lods pop mov fistpl jmp pusha pop data16 jge xchg lock jno test mov push mov inc mov ret ss or inc pop clc inc js je jl jmp jne mov imul push mov sti sub and mov xchg add and xor xchg pop push push rolb push cmp add outsb inc pop cmpsl or inc inc rcrb fidivl adc test pop es (bad) xchg push rcll test push xor scas pop int sub push adc push pusha push int3 and xor xchg inc sbb push push testb and daa cmp xor loope nop xchg pop cwtl lea rol add scas adc jle daa push in sarl int or sbb add cmpsl fnstcw cld push inc faddl sub (bad) add inc push mov mov push add jo jmp mov sub dec xor and mov les aaa inc cli enter cmp lcall add jecxz adc sub add (bad) and pop jp testb xchg daa and je or fsubl push ja add jne insl sarb data16 push jmp push es das outsl imulb jne and jne jg testb aas cmp jne xchg dec or dec rorb dec loope ret pop jle adc popaw push les or adc loopne je mov sbb or fcmovu jmp jg pop loop add mov bound adc pop andl pushf es aam pop add rcrb xchg pusha ja add cmc je mov loop push fwait dec roll adc mov and rorb cmp dec cmp cmp scas mov cmpsl inc add or stc pusha mov push stc push inc xchg or fidivrl xor test (bad) mov pop xchg mov enter or andl mov cmc rcrl cltd or mov mov test xor jo sbb add and pop or faddl sti xor aaa aam ficoml adc and push repnz mov in or (bad) mov push mov inc lock test cmp orl imul sub imul test dec xor push sub push inc jo or popa nop test push dec dec lock inc pusha ss (bad) aad imul lret pop jne add add and in jns or pop mov in push sub jmp lock xlat or adc push jmp jmp ja (bad) adc mov and pop dec cmp adc xor ret adc popa imul mov cmpsb and mov add (bad) dec or lea adc sbb (bad) sub repnz add mov ret ret mov mov in push push sub test out (bad) push push mov clc icebp add adc pop dec pop inc add mov (bad) or xor shrl cmp lret sbb pop add movsl dec (bad) adc push inc sub cld add out inc ret and (bad) pop push push inc hlt or or outsl lods dec int inc stos mov lcall pop inc mov cwtl movb in jb xor adc call sbb hlt mov inc adc jl ret sahf mov cmp jae sbb cmpsl inc loopne xchg jl or jns mov jge jb imul lock jge cmp cwtl or rcrl add xchg or push mov sti cmpsb cwtl push mov inc add mov in cmp clc cmpsb lock mov pop and ljmp movb imul lock outsb movb add cmp pop mov jl jb push mov pop inc mov sub fnsave push jns std stos and (bad) cwtl xor jmp icebp or nop xchg call cmp in ret sbb movsb lods ret or sub push inc push stos fwait lods jne lcall xchg test lods and or pop xor dec sbb stos cmpsb es sub scas or lcall mov xchg add pop fdiv cs dec xchg sbb xchg fs cmp sbb or cmp sbb or dec mov (bad) or (bad) jecxz stos test movsl sarb pop inc imul fnstenv xchg xor adc leave pop add aam and add fcoms push pop addr16 (bad) and or inc xor imul mov mov push add int3 sbb ds sbb sub xor fldl sbb arpl sbb jl xor mov adc add sbb xchg xor xchg (bad) or adc test adc and divb lods loope sbb mov xbegin jne pushl dec dec ficom sti mov aaa xorl jge add add jge adcb jae aaa xchg jle test cmp fwait push cmpl xor ja insb or movb add cmp mov subl (bad) and imul test xchg or out dec (bad) jmp xchg or push bound fildl nop daa dec inc and das jbe sbb adc jmp push pop (bad) add iret inc pop add movsb sbb cmpsb sarl insl xlat sbb mov inc xchg xchg lock mov cmp add cmp ret jmp rclb aas clc mov push adc sahf or lds jne in or push inc icebp push mov ljmp xchg inc (bad) hlt cmp icebp xor test jle and dec jmp movsb (bad) adc inc mov cmp js std je or and push jmp and ret xor cmp test add mov movsl mov mov lods int cmpsb cmp sbb gs fs adc pop inc xchg (bad) push gs cld or pop dec jg lock insb (bad) dec les mov lods dec cmp and and shll mov maxps sub pop inc and and hlt xlat cmp mov fnstenv mov xchg push pop or data16 dec (bad) mov rorl jge mov cmp and xchg hlt shrb cmpl (bad) loop arpl add std in sbb lea or test push push and and sarl lods ljmp and or push in (bad) xor push add inc popa jne outsl lods ret ret sbb leave and movb inc add or cmp push sub je push jmp sbb add rol mov mov stc aas push sbb jmp and orb leave inc daa cmpb mov or sub sar inc mov add lcall or inc or ktestw xorl scas rorb jmp push jno sbbl sbbb das lods movsb test inc jo or xchg sbb dec add lods mov fldt inc ret test cmpb push add addl ficom push or popa jae dec mov jl je out adc mov mov xchg adcl test mov push pop lahf popf (bad) push aaa sbb cmp test add insb xchg call xchg pop push aaa inc sbb insb (bad) mov (bad) mov add or mov mov dec out sub mov mov cmp sub and push (bad) sub push call fimull sbb loopne icebp fmull or daa ljmp mov inc js pop sbb mov imul iret xor xor inc scas xor sub mov adc xchg out add adc cmp or mov adc add sub int or mov movsl iret std ljmp push insl fisttp sbb adc addl mov mov ss add xor lock dec ficompl das rorl or or cmpsb data16 icebp push mov push and mov xor adc mov testl mov or sub imul test pusha addl sar test out je or xor pop adc push cltd sbb jbe dec cld adc jnp xchg in push dec in cmpb jb or jbe push adc lods mov sub push fisttpll sti push push and (bad) into (bad) sbb dec (bad) fistpll adcb popf cmpsl push insb outsl sbb add add div pop sbb push mov push andb xchg pop movsb cmp call adc mov dec adc and arpl imul mov jne mov push add adc not and or dec jmp shl nop dec cmpsb fs loopne add mov mov or int loopne insb sub inc pop adc call fldenv push (bad) mov test in fiaddl push js sub js sbb xchg fild daa push cli fsubr outsb jmp mov hlt test sbb cmp and sbb pop xchg mov cmp inc je incl dec lcall mov pop mov mov in sub sahf outsb in add mov cmp lock jecxz nop daa vcvtss2si stos cmp dec in in mov push push jae cmp or add xchg and push dec push or bound or add and mov push loopne add inc data16 cmp or jl jge call or pop psrlq add out std (bad) or test sub or cmp (bad) repz jle xchg mov js ss scas jae popf cmp pop ret roll jmp loop add add inc inc (bad) push sub in or int3 leave in cmp mov ds rcll adc loopne cmp (bad) mov arpl ret jl inc setns das popa (bad) jle iret xchg add push xchg xor or and negl fdivr popa fdivr or push cmp in test aad xorl lock sub dec pop xor and (bad) insl imul scas inc mov loopne xchg mov sbb lods movsb sub insb pop add call xor jge jecxz iret call and inc jne loop xor aas xor xor and push push push shll xchg dec jmp fcmovb out jmp xor adc jl and minps mov mov sub mov and add mov sbb (bad) je pop mov push bound dec push les add pop add repnz (bad) and add pop aam mov data16 dec push fs or sbb add jmp mov dec bound sub dec mov xchg jbe inc lods add push pop sbb mov mov pop pop shll shll subl popa mov stos cli mov push sbb outsl xchg add add ss (bad) negb fwait jmp or adc xorb sbb add xlat mov jle inc sbb pop fs push fs add pop das sbbl (bad) fs adc fidiv popf adc inc insb ja jns push add and xor jo sub push or add xchg (bad) fist xor loopne sahf fs cli xor cmp jnp pop lcall movsl push sbb mov mov xchg aaa cmc testb das xor gs or nop loopne roll test jae jae push imul mov dec lock adc or sub inc xor inc xchg push xor cmp adcl and or fs pop das jmp add dec pusha sub inc out je sub sub push xchg jg aad pushl inc jg push inc enter and call or dec pop mov jl into add outsb int3 dec inc ja push ret js sahf push (bad) xor out mov xor add movsl mov pop data16 or mov inc jb cmp inc pop cmpsb inc notb ja xchg addr16 roll adc pushl popa push sbb ljmp jmp jmp mov lock sahf call fwait es and push or push cwtl cs mov inc cltd push insb xchg out ds fadds push mov imulb (bad) push and pusha sub mov mov ds cmp rol lahf iret jnp out es mov mov lahf ja sbb push lods or into out out fstpl call insb mov rorl lods xchg scas pop and (bad) add lock mov pop enter test cmp pusha ret xchg push fwait cmp fwait push jns add sub mov nop xor test mov sbb fild outsl and and xchg inc ljmp fadds dec mov jp mov xchg add out jns scas sub dec push mov add and sbb mov rorl sub add nop mov mov mov pop mov sbb and push iret xlat and popf inc push mov xchg cmp test fwait or lret xchg sbb sbb fwait roll sbb fmuls adc xor xchg das pop inc and pop add lahf xor (bad) xor xchg dec dec jo ficoml ja aaa add fsubp xor (bad) dec repnz sbb sbb add (bad) push rol into mov pop push and adc adc icebp sbb push leave pop sbb pop add sbb pop or shll jns loope xor dec insb xor xchg sub or test repnz stc je xor lea xchg sbb or dec jae xchg or jmp test mov (bad) aad fucomip cmc lds stos outsl subb dec fcomps and push movsw pop inc pop sbbb and iret xor int rclb inc add or sub nop push jb sbb mov stos ret lea lcall push insl cmpsb mov sub inc iret xor dec mov ret nop ret rcrb or pop clc in (bad) insb jne outsb int inc or pop xor push jb xor xchg pop jne xchg xor in push adcl sbb and orb xchg (bad) add adc dec mov add in cmp dec das and mov adc or add popl mov jecxz dec push xor aaa inc pop out test mov and enter movsb jb inc push and adc add cwtl and inc addr16 pop mov loope or cmpsb mov imul cmp cmp and mov je aam inc cmp in dec movsl mov cmp inc xchg sahf cld mov in sarb jbe mov ficom xchg mov jmp mov push mov mov mov cmpsl stc xor pop mov cmp lcall test stos pop je pop mov fstps lods push adc mov inc or push pop sub ret jo imul jo push xor subl or andb test jecxz mov add fnstcw pop or add (bad) lods adc add or pop fldl or add ret or add add subb inc jl inc in dec fmuls or cmp popa mov add push in adc int3 in sub pop repnz dec pop daa clc xchg (bad) xor xchg rclb push ss mov xchg das mov add mov faddl and adc daa sarl mov push xchg fnsave sub pop ret lods inc test dec imul xchg adc and cltd and test sbb pop ja cs movsl add xor pop scas dec pop or mov push movsb mov movsb jns cmp xchg and in xchg and rcr loopne bound mov push insb inc or pop bound sbb add mov xor sbb hlt and xor outsb xchg in and xchg lock and pop bound cmp hlt xor pop add mov fldenv (bad) cld pop mov inc push inc sbb addl int xor jbe or jge nop mov std mov cld aam pushf add xchg test xchg hlt jmp orl jbe mov imul jbe sbb mov mov pop jne enter and (bad) sbb push hlt jg dec pop xor test fsts icebp or div mov bound fs mov (bad) addr16 cs cli inc daa es fldl cmp cmp push push lock push sub pop xor (bad) adc lea sub mov fsubr sbb ret mov out push or addr16 cmp adc aas mov sbb sbb inc hlt sbb (bad) push sbb cmp jne in and push mov movsl push and addr16 js or jbe add push stc adc xor inc cmp popa and mov std pusha sbb sahf popf push add mov mov push fmuls insb call fcmovnbe add mov bound mov xor xorl fs or inc adc add iret xchg dec dec lods add test or dec (bad) inc pop int fs dec adc xor sbb jbe iret pop test push notl or data16 loop jb int3 ror (bad) mov and push mov xorb dec add jb sub xchg int3 mov fmuls xor sbb fdivr pop mov push mov cmpb sub dec clc or movsl or rorb (bad) fcoms add add pop xchg and bound jp data16 test (bad) dec ret shll xor mov adc iret pop jo outsl push scas dec pushf pop ds call mov push stc jl and mov es ret and dec xchg or lret push lods xchg jp rolb cmc push or fcom sahf cld adc movsb adc mov shrb mov es enter je or jg mov notl push add aam xchg adc add sbbl adc clc sub jbe mov stos je pop mov pop loope ror add xor pop pop mov add or rorb sbb movb xchg es xor test or ss mov inc sti pop shrl cmp inc loopne xor (bad) pop mov or rcll je lret or mov pop daa sbb cmpl jne addb pop mov cmp pop and imulb cmp (bad) js or add push pop les xchg lea stos movl sbb in push add clc pop mull shrb xor pop test loopne loopne pop mov xor fisttpl xor and adc loope mov je ss sbb or je mov add sub divl (bad) jb pop pop dec cs movl push and inc mov sbb pop adc jae hlt xchg pop add add mov psubb aas popa and dec popf jle ficompl mov jecxz lret mov sub add push gs adc xchg and cmp and xor lcall mov dec add add cmpsl mov and test jge add outsb punpckhdq pop push bound and dec and dec pusha js (bad) mov aas pop mov js frstor inc (bad) push lods push adcb inc inc xor cmpsb addb mov adc xchg mov cmpsl cmp sbb push mov sbb imul lcall dec sbb pop or iret gs push insb sub fildl lods (bad) je,pn jecxz inc push push push push enter cmp jae fcoms imul aaa shlb dec adc (bad) xchg ret mov xor popa add in fnsave push lods insl outsb or dec xor enter pop fstps dec (bad) fiaddl push cli push mov sbb xchg push mov pop and add clc scas rclb cmp dec xor sub pop xchg bound and jne inc or rclb xchg sbb repnz dec inc fs sbbl and sbb dec cmp jae cmp xor mov loopne sbb insb nop (bad) mov push sbb or outsb sbb (bad) (bad) lret mov add cmpsl pop movsl jne or push imull sbb hlt push push pop addr16 pushf or ss ret jmp pop mov adc pop icebp jno jecxz clc adc test (bad) dec and push adc push scas mov imul jecxz lret push or inc ret or fiaddl nop push cmpsl push ds fnop add sub test jno (bad) jg stos sub dec sub jl inc xor mov dec clc inc dec mov aas cld imul sub out pusha jne push and jns xor test andl and or push sub or fisubr add xlat dec subb les cmp and xchg jp xchg sbb add scas xchg std mov call jbe dec cmp movsb mov sarb dec xor add in sbb neg mov shll xchg jne faddl push testb pop pop push popf negb ss jne xchg pop xor in mov ss and cmpsl ret mov adcl mov pop or mov daa sbb adc sub mov xchg cld lock pop (bad) test lock jne insb push sbb or rcrb inc dec enter data16 and pop push add lock pusha shll pusha add scas xchg and or push outsl cld cmp jne outsb xor sarb movsb push push addr16 push sub ds scas fldl in mov jg lret mov movsl movsb xlat and push or hlt and cmpb rorb pop adc mov les in and js (bad) mov cli lahf jo push jne clc imul sub clc jmp cmp xor lret add pushf and clc push ret adc rorb ret xchg pop sbbl movb inc xchg pop jo adc rolb mov mov sub pop call outsl movl test dec lds push adcl daa sbb mov jecxz mov lahf xor cmp (bad) xor push mov sbb dec xchg jg sub mov mov fwait insl subb test add sbbl pop rcll orl pop xor add and fs sub pop xchg mov call daa pop cmpb stos push mov sbb fcoms pushf lahf mov inc pop inc sbb push enter inc dec pop fmull cmpsl xor adc push xchg or sbb loope daa or (bad) neg mov add and nop out push inc lea mov pop and jmp je (bad) ret into mov pop enter insb out test or jle cmp mov pop ss loopne and pop pusha sub stos inc mov daa movsl cmpsl xchg xchg push out xor push aas xchg push jb ror push add sub in pop adc test adc test (bad) orl add and mov sbb push pop jo push test stos and or sbb jnp xor imul mov or pop add or jo shrb mov pop std xchg stos cmpl adcl (bad) aaa enter stos pop xchg pop mov mov or adc and add sti sub mov push dec ljmp sub mov in cmp jne ret fs push and sub (bad) xchg aam cmp lods in ret loop les sbb int3 scas das nop (bad) sub jecxz and jl cmc inc adc or push hlt jmp pop or fild cmp jecxz jmp mov aas dec xlat mov imul loop xor test sub mov clc mov or pop lock jp mov imul lods sub xchg add cmp notb jbe add (bad) lods aaa movsl and add movsb sbb add cmpsb in add mov ret in add adc mov pusha insb push (bad) scas lods iret ss xchg mov addl mov imul subb cmp dec add add mov in jg push jg adc ja icebp loopne mov rcll lock lock xor push add xorb pop ja clc inc daa mov adc adc ja sbb push xor je jb push push or rcrb sub or cwtl pop push pop adc pop das inc (bad) or sbbb (bad) popf js icebp adc rorb push ret dec in inc ret jo sbb pop sub sbb sbb cmp hlt popl xor fildll adc dec hlt sub aaa es push pop pop loop fstpt jle cmp pop je sbb add repz xchg lods fmull adc add pop bound mov repz cmp cld adc das add add addb add add or sarb sub xchg in sub push jo rol push fistp call add xchg add pop cmp roll pop ss or or imul xchg and in adc les xlat in ja adc adc loope in xor xchg inc in and mov or in sbb pop adc lea jge (bad) mov or je jmp sub add ror data16 and mov add lock jle xchg xchg add bound cmpsl jmp adc dec cmp cmp jmp fninit (bad) jmp jecxz fwait and inc push cmc and lods jl and lcall rolb dec jecxz cmp dec jg int dec insb adc add cmp or imul hlt xor mov test enter ds add fwait add jg,pt jl (bad) aaa mov or inc sub ret rolb pushl sbb pop mov add (bad) movsl mov aas or loopne rol push clc flds dec adc addl cmp loope (bad) jb pusha mov in je or add dec jae adc inc lea push inc sbb fsubl pop add xlat add out lahf xor sbbb xchg or nop mov sbb sbb pop or pop push jg sbbl rcrl or cmp or push or lock jne cmp pop insl push (bad) adc xor xor or push lea sub mov or mov mov jnp and mov fildll mov jge xor mov jnp xchg enter fisubl inc push pop xor sarl clc lea add insl loopne xor loop lods sbb sub pusha sbb adc jmp add imul mov mov fsubl and mov pop or cmp jge push dec push (bad) jecxz (bad) or sbb test add rcrb aas sbb push mov loope jb movsb mov jae sub adc jae lods int insb pop (bad) in adc cltd add jle and adc (bad) fs or or push and xchg sub pop sub pop (bad) inc addb lds popa lea push inc mov cli add loopne clc rcrb out stos xchg dec inc (bad) shlb or mov sbb out dec leave (bad) ss push add or mov xchg xlat rclb or add cmpsl xor pop dec inc movsl pusha (bad) sub test push mov cmp xor outsl aam add enter cmpsl in or enter cmpsb stc (bad) in or adc inc and xor lods fs pop dec or adc pop aaa ds jmp clc loope movsl pop jbe (bad) cld jne xchg mov or fcoms (bad) jne shl (bad) hlt popa push test jge cmp sub push (bad) sbb jne jo inc (bad) cli les and add cmp cli negb dec xorb outsb icebp lock sbb clc adc dec sbb (bad) shll movsl rol dec ret xchg in and inc sub pop ljmp popf cmpb in gs cmp sbb push (bad) sub inc sbb imul nop dec sbb in ret nop ja insb dec jno xor sbb lods lock dec inc repnz jne sbb jg add jecxz in sub jnp add jnp jle mov mov xor cmp or dec incl (bad) jne or adc push movb mov sbb xchg mov loop and add mov pusha add push roll pop fist mov adc fldl insb push or shlb push adc fwait js and gs pusha pop call sub push fdivrs pop or pushf jge or lcall push cmpsb xor lds push daa loopne fistp adc push sbb push add icebp test inc ret aas xchg je pop and push xor imul adc (bad) aaa test or inc pop adc sbb jne mov sub mov cltd lods (bad) xor xor mov aas xchg popf push cwtl fisub aas iret and test es or sbb cwtl orl imul or pop push fsubrs outsb inc in notb and cmp mov (bad) or pop outsl or ret adcb xor add adc add sti sbb dec jo ret imul push fst bound les pop add adc add push xor xlat test popa or or scas dec sub lahf or sbb jmp mov dec pop pop pop or clc adc lea rcrb xchg xor push daa sbb shlb push sbbl pop (bad) popl adc in gs sti xchg jg pop movb and not and in adc add (bad) cmp sub cwtl add add icebp xchg push jecxz mov add dec and xchg pop mov inc mov dec push jbe leave xchg es adc jge xchg sub dec adcb (bad) and aaa sub subb push into std aam jne sbb lds (bad) adc fnsave adc push sub push or inc push push movsb sti aad mov adc pop in or add jmp std inc or sbb sbb dec push add xchg fld pop sub enter shrb arpl dec nop or pusha lea jl mov jge sbbl iret cld in (bad) imul nop mov adc cmp dec out pop fisubr cmp mov dec push pop scas dec or dec imul push xor ss jl andnps push rol insl pop and mov and mov enter add add fcmovnbe xor jg jl push jg cmc push adc addr16 aaa mov pusha and jge lea js (bad) mov mov loop mov jmp and or jmp mov andb adc pop outsb movsl sub cmp imul adc cmpb ljmp insl push or dec add adc pop sbb mov inc movsb jb or sbb aam into add dec pop popf xchg mov fdivr cmpb pop test daa mov jl ljmp sahf mov sub pop jbe,pt push lret or mov leave dec cmp pusha xor mov sub fisubl or push lock pop cltd sbb pop jnp cmp or push xor cmp clc inc and jo (bad) mov inc jle fadd lret or add push pusha ret stos sub mov dec mov jo push xchg push lods dec sub or test pop popf adc xchg cmpsb pop pop jnp nop mov sbb fisubl loopne (bad) lock mov or out stc xor arpl mov daa cmp xchg out sbb or jecxz inc pop and rorb add xchg test cmp push xchg cmp les push or cli test outsb dec rorb inc xchg add fwait cmp push adc or loop xchg inc insl les loopne in insb mov and lock pop aam dec iret hlt shrb lods xor pop sahf cltd adc jne add lock je jge add pop je js pop fistp mov sub xor movsl cmp loop xor aad hlt add or ret int3 jge jno add sub popf data16 mov cmp popf xchg mov loopne lcall adc xchg push mov imul cmpsb jge and jmp rcrl xchg mov enter sbb imul (bad) push arpl bound icebp int3 mov or adc xlat cmp inc mov xchg or aam add loope pusha out in mov and (bad) sbb cmpsl pusha pop and and xchg dec cmp pop pop jb pop sub aam lret in sub push (bad) or sub dec inc xchg xor gs sub xchg push insl (bad) mov das sub add add test es mov test adc sub mov and jae pop pop outsb daa or sbb xchg pop or inc hlt pop mov lea in jbe xchg dec pop cmpl sub mov aas sub mov arpl push movsl sbb test mov in inc loop addr16 adc out and inc mov fsubrs cwtl jmp daa pop loopne pop xchg shlb dec cwtl ja push pop iret repz rorb int imul in dec mov mov pusha mov imul sub and les sub xchg fs test push inc pop add cmp lods push jg cwtl pop push pop jo (bad) or push daa pop xor (bad) sbb add push mov push insb jmp and or dec ss sbb jns das imul mov cmp inc ja scas (bad) clc lds sub lcall add xchg pop jae aaa cmp iret repz arpl lods ret in leave pop mov loopne add push push xor add xor nop sub push cs sbb push dec or ret cs xor sbb add push or add pop add or inc mov inc sub mov leave int lcall inc popf scas push call cmpsb icebp mov cmp pop (bad) cmp cmpsl jmp test gs fbstp popl mov xor cmpb push fldl mov jno adc mov scas rorb xor addr16 aad or (bad) aam (bad) pop (bad) lds fstl cmp test sbbl mov push sti lods xor scas mov bound lea in sbb xchg xor nop movsb add (bad) mov push rorb repz add cmp addr16 push add cmp sbbb push jecxz push aaa cmp jge cmp jge mov sbb arpl mov (bad) ret fdivl je jns fwait ja (bad) pusha sub jge into jae adc (bad) rcr fst xor or loope add xor dec ss cmp inc (bad) test cwtl push scas sbb sbb lret clc fimul gs push mov jne mov (bad) clc cmp sub stc inc mov jg cmp jl pop pushl add or mov or fild in jbe or mov adcl and aaa scas adc lds mov mov dec jl mov dec or fmuls call js push push push test sub lods or out add fnstsw int3 jmp jl loopne jnp loopne,pn mov ds mov mov aad mov jb xor sub and inc or adc fisubrl jg inc ret dec in popa xor pushf sahf pop int3 or jns roll aas pop dec les xlat ljmp pop add add and dec daa xor jnp hlt movsl jne mov call add jmp loop mov pop mov adc add scas and cmp or xchg insb pmulhw ret xchg pop rcrl pop and add cld dec outsl sbb adc xorb sbb jecxz loop sbb gs adc inc test nop dec mov adc pusha inc push sahf push xlat mov cltd push nop movsb inc inc mov dec loopne sub sahf ror ljmp jmp sub pop xor ja sbb adc addr16 add loopne cmpsl xor subl (bad) rolb adc dec xor dec orl and dec xor shrl sarl adc adc dec imul iret mov xor loopne sub and jbe jne fnop or jo add loopne push mov mov sbb mov mov movsl mov subl shr jne mov sbbl mov push mov loopne mov push (bad) test jnp test push adc and add cmp in cmpsl enter add shlb ficom push push mov pop popf push cmpsl push arpl jbe adc dec push sub test je mov adc ffree add and mov push push and push ja dec sbb loope push xor (bad) lods xchg cmpb mov adc mov or mov int or push (bad) in push mov sub addb sbb adcb cmpsb push adc mov in (bad) mov pop inc push movsb jae aas icebp imul hlt mov and or movsb jge adc decl pusha jns dec jmp movsb (bad) mov das dec lock jmp push js data16 sub pop mov dec mov pop pop or (bad) aas in sub jno lock (bad) mov sbb dec fwait pop cli push mov add lahf sbb dec cmpb je ret adc daa fcoms stos pop imul es adc push frstor cmpb inc lahf mov pop dec movsb and test inc dec pusha inc data16 adc fs nop and sub lret sub jns dec nop xchg repz jo add adc stos (bad) mov outsb cmp sbb push loopne mov adc jmp bound pop add sbb outsl popf insl rclb das inc inc sbb pushf xchg int cmp rclb xchg loopne adc push bound test stc lcall adc xor or inc aaa mov add notb fmul or adc mov mov test test mov outsl xor cmpsb add pop lods in mov aam leave lcall cmp sub xor movsb negl adc imul repnz movb lods jge sub subl and and pop aaa cmp sbb xchg and fdivrl nop (bad) adc jnp stos daa push mov mov mov pop mov mov dec lods sub mov and push roll adc mov and jbe sub cmc or mov add and mov fwait push data16 das shll jne fistp sub add mov orl cwtl mov loopne xchg test inc cs xchg daa clc fist jne cmp fistpll mov jmp cmp and adc lods mov push mov push add or push (bad) xor icebp adc dec xchg fs lea js andb pop ja test mov daa jo or imul es aam cmpsl cmp mov add push pop mov (bad) jno loope jb pop testb xor lds mov mov cmpl push mov push fimul adc dec ljmp testb in jbe incl aam scas pop inc jg jo cwtl imul sub add push sbb cmp sbb (bad) test out mov cmp imul add mov lods pop sti or icebp clc and or scas and jg xchg or les sbb push dec dec and ficoml dec loopne adc inc push adc jb xor xor cmp je sub push xorb add adc sbb or popa or or adc insl add (bad) sbb cmp sub pop inc sahf sbbb jle popa (bad) push paddsb or mov enter jmp adc and dec jg lret xchg cmp push push push mov sbb sub arpl pop dec rorb dec andl icebp in negb lea lret pop push jo ffreep movsl cmp test add dec cltd gs dec inc jne jo std push push cs (bad) loopne dec and cmp insl add insb xor cmpsl dec xchg andb dec and test rorb mov test add mov rolb or push and movsl jmp or dec push jmp jmp daa push lcall mov or inc cmovne mov lea push jecxz mov cmpsl movsl xlat push shrl dec maskmovq (bad) mov pop inc sbb mov sti inc mov pop cmp mov fisttpll iret clc and movsb pop loope jmp mov adc push push sbb xchg mov and adc (bad) mov lock add rcrb addr16 int (bad) repz pop js dec ficomp cmp add jnp loopne cmc inc hlt out inc and and mov sbb jmp mov sub sbb inc or and (bad) setbe cmp jmp movb cmp popa or rcl popa out repz adc push pop nop (bad) xchg dec add sub dec xor or mov lret xchg js mov mov push xchg add xor and adc push mov add add mov adc cmp data16 lock adc mov mov mov cltd ja aaa xor mov or stos mov dec lcall mov (bad) xor and push scas xor pop test scas inc dec push rcrb mov adc jecxz adcl sub jmp pop repz in (bad) jp hlt fistp in lods and sbb jo xor sar lret lret or (bad) pop push cs jl mov sub inc or inc cmp cmp stos adc ror sub mov arpl add push dec cmp xchg sbb mov aad ja (bad) mov (bad) adc push pop popa jmp inc clc inc inc and and add xchg mov mov or mov and jbe adc movsb cmp leave iret adc mov dec mov les inc cwtl rorb inc xor loope dec mov pop enter jg jo cli cmp pop pop daa cmpsb pop pop push mov test adc add jle add call add fs and in ja mov adc sbb add or adc sub lock aas popf cmp xchg fild add pop push mov xor or sbb jmp adc mov bound aam cmp ja sbb je sahf orl ja adc insl or sbbl sbb push outsb xor or mov jg (bad) into adc push jle jnp and sarb push add jae adc jnp inc jnp sbb jmp push adc or lahf lods inc bnd pop mov sbb daa nop mov inc gs adc inc jae (bad) in or ss movsl sti ret mov mov int dec add dec mov jno mov push cmp fs and sub push mov inc xchg inc fcmovbe mov les into loopne cmp push (bad) lds fcmovnb daa push mov and push adc and adc js test sub adc sbb push aas or dec inc pop cmp inc pop sbb xor or cli sbb xorl ss dec (bad) les ljmp loopne add dec xchg pop fmuls in iret adc or push (bad) cltd movsb dec js xchg (bad) mov nop (bad) ret and sub cmpsb jnp ja pop jns,pn xchg cld cmp inc mov push push fiadd mov dec xchg arpl frndint fs xor out pop inc xchg pop sub loop push sbb and push ja daa adc push xor dec jmp bound inc push iret push xchg adc xor aaa hlt xchg or inc (bad) loope jge outsl fldl mov lock dec and mov or xchg pushf mov xchg push jb xchg call mov es and cwtl xchg inc adc test shr inc pop (bad) mov xor fbstp lds aam xchg and mov outsl pop outsb test (bad) sbb adc pop sub pop dec cmc test pop xor xchg dec sub lods jp dec dec pop pop dec push dec jbe lret gs push push xor es andl jmp xchg jb adcb push push jmp cmpl push mov test (bad) dec pop mov lret mov aas loopne cmp jnp mov daa add xchg push xchg lret cmp faddl test add mov es roll jbe cmpsl sub scas loopne pop imul dec xlat mov xchg aam sbb ja add shrb xchg stc lea popa mov xor test lods push jmp pop sub in pusha xchg jne daa sub or jno pusha adc add enter cmp hlt sbb rclb pop inc xor xor mov mov add je les fimul rcl xchg dec inc mov dec jecxz movsl sbb or call push loopne or test nop lcall aad xchg (bad) xor mov gs sub mov insl outsl fsts sbb pop dec or icebp pop sbbl adc (bad) cmp inc push mov out and test cmp dec (bad) mov mov (bad) loopne sbb jnp test (bad) (bad) int adc and clc es int3 addr16 xor (bad) je adc repz fidiv nop cmc jno and xchg outsb cmp rcr dec and jb cmp fnop adc jne scas inc arpl mov pushf dec xchg xor adc push dec xchg adc les push pop ret jo mov aad cmp mov xchg repz push fs xlat (bad) push add cwtl icebp xor xchg pop sbb jg xchg nop movswl push push or (bad) push arpl push das mov mov push add fwait popa (bad) shr cltd or push sub inc inc inc movaps jmp cmc jmp leave loope (bad) test sbb push xor and and insl ret mov out push inc cmp ret or bound into inc ss mov (bad) fdivs insb inc cmp or push or adcl rol pop rorb jle add xor jo push cmpl xorb xchg adc xorl dec adc cmp or pop cmp mov xchg frstor fs inc add adc sahf inc cs or sbb or pop daa insb test fmuls inc jge adc std sbb fdivrp mov std xor cltd dec into sub or jo ret rcrb addb or jae cmc inc fidivrl sub or push cmp arpl adc imul jg mov inc sbb sbb mov cmpsl add (bad) imul jge ss jle hlt sarb sub mov je sbb push adc bnd inc pop fadds stos repnz outsb add sbb adc jle or and mov cmpsl (bad) mov aad push popf xchg mov xor xor dec sub incl jmp sbb test xlat dec (bad) je jg cmp sub addl lea add adc mov (bad) xchg push subl inc add cmp xchg push sbb jmp xchg dec in int3 adc sbb inc adc adc mov pop pop lret setbe inc loope insl movsl pop iret insb sub mov mov mov add movsl jne (bad) jo test scas fmul fistl enter aas mov int movl xor adc or xor cwtl sub popf jmp nop (bad) and in mov jno cmp test sub fcomps jecxz sub jne hlt loop fnstcw mov or loope mov mov addr16 xchg inc (bad) xchg inc add push imul cmp add push mov cltd (bad) or je test dec dec decb rcll xchg mov push call push mov mov movsb out clc push or cmpsl bound xlat pop sub add inc adc push xchg incl ja orl rorb push nop mov and cmp out js imul enter out mov movsb call push xor cmp push or add sub jb pushf xchg (bad) xchg rorl add pop push lock cmp (bad) (bad) sbb inc mov and outsb faddl sbb push jae pop xor adc cmp xor addb and out sub inc out dec sbb push push rclb mov sub push subl in cmp mov dec jl sub dec rolb pop adc pop sub add pop mov mov aam incb xor inc or dec pop test (bad) ss mov xchg or sub mov or pop jle add dec pop popl adc ret addb and mull pop ret xchg sbb cmpsl aad and test cmp lahf cmp cmp test fmuls or jns in bound std xor push pop nop cmp movsl test dec pop mov xor add out jmp jns decl adc aaa (bad) aaa pop test mov jnp pusha mov pop je rol movsl fsts sub cmp lahf inc ss push push push sbb orb sbb sbb mov in dec lcall push les loopne inc mov fsubs xchg rclb outsb loopne dec adc dec push jbe xchg data16 jp decl or je or cld jo fmull add lea mov shlb pusha leave jmp fnsave (bad) cwtl jmp dec sbb or cmpb push leave push (bad) mov dec jle add sbb sbb (bad) test push xchg pop lods jo mov sub js xlat and pop add test loop addb stos daa xchg dec add sbb (bad) dec mov aad and hlt stos imul in fs inc loopne lods push lods mov adc or pop nop mov or (bad) aaa cmp inc pop call adc xchg push dec sbb add cmpsl xchg adc xchg inc les push jo and jne arpl pop jle paddb dec icebp and imull mov pop add dec in mov xor cmp scas push stos movsb xor leave or das mov cmp (bad) xor rolb adc or xchg inc pop fsubs or cmp dec add dec sbb inc sub add andl mov in dec xchg mov or and fisubr sub enter ret mov call fnstenv cli testl fild xor mov dec sub push sti push pop add inc stos or pop push adc shrb mov adc insl popa and out jne xor daa mov push xor or ret sahf push loop push icebp push dec jmp pop xor cld add xchg sub xchg leave jne or enter and loope rolb push and inc sarb xchg xchg cmc idiv adc popf push push or mov mov mov xchg mov xorl xchg (bad) xor xchg pop pushf outsl mov or xchg mov push adc hlt add test pop sub xchg mov and mov cmp sub xorb daa int cltd sarl xor mov mov test push mov jmp cltd jecxz dec cmpsb xchg inc pop inc decb sbb mov pop imul cmp rol mov das icebp loope into sbb mov pop orl xchg or add inc mov sbb xor inc xchg in add imul mov add roll push inc cmpsl imul add mov jge leave adc inc inc xor sub sbb jmp and iret cmpxchg add mov sub shr mov and add test enter cmc dec add mov add mov les push jbe imul pop testb mov stos mov pop in push sbb mov or push sub xor push xchg lret xchg inc andl aad jbe iret call ja inc and ret pushf scas inc cmp ffreep inc push jp push test je mov add rorb (bad) fstpt call push adc mov (bad) fiadd cmp call popa push cmp gs cmp out (bad) sub inc inc sbb add pop pop xchg rolb dec cmp movsl adcl sub sahf mov xchg and dec rolb cmpsl push dec xchg xchg push mov mov or dec pop shrb and cmp fiaddl sbb push movsb push add in push and sub add push sbb and imul mov mov ret sarb aaa pushl pushl fimull test jbe int push mov push cmpsb lcall jecxz outsb lea adc add jo inc add add adc pop jecxz fmuls ret lret and je jnp dec jo adc aad cld push xor push pop mov or mov jne enter enter push cmpsb inc rolb sbb leave (bad) popfw daa shll push push mov cmp pop les dec mov mov add daa (bad) outsl and xor xor xor dec ret mov (bad) cmp jl aam leave leave add mov outsl aas inc adc mov das (bad) inc movsl adc (bad) and popa and push xor mov sub mov push push mov xchg jns arpl or push mov add add rol addr16 xor sbb jo mov addr16 add or pop jmp iret inc lock pop enter dec mov movsb mov push ja push xchg push pushf out jo in ret shrl gs repnz ret push add in and mov sub add mov push push call lds mov push mov nop fdivrs mov in push leave addb push setnp (bad) lret pop in sub daa pop lock ss mov mov cwtl sub push xchg push ret push add push xor cld addb aas or cmpb mov movups flds adc je adc andb xchg enter test and and sbb sbb sub pop or mov jae es add cmpb xchg mov inc popa xor add out mov lret or add or and jmp sbb mov cwtl (bad) hlt push push in sbb add adc inc xchg and sub sarl add push dec xchg push push add xchg jl inc lret sbb lock es dec sub adc adc add and sub cs adc push xorl sbb shl mov out nop fdivrs inc ret gs xor adc xor daa test lods sti push into add xor or aam repz test push pop fnstcw push inc sbb pop enter xor push sub inc mov lock jo adc dec push fwait pop and cmp jb cmp dec inc ss insl leave cmp sbb cs cs mov in cltd dec inc inc lds mov inc scas in shlb add add test add dec jo out inc add les pushf mov sbb push pusha std test jbe mov pop ret jae mov mov imul (bad) mov shrb pop sarl mov inc js sbb ja jp mov xchg inc or jg addb dec adc ret adc adc xchg outsl add call push pop mov and dec cmp jb iret cmpsl mov add dec (bad) push mov mov or ror adc or arpl test jns dec adc mov fildll mov push lea inc testb jne inc adc pop rol sti mov xor xor adc or iret ja test xor int3 push pop cmpsl add adc mov mov (bad) dec inc xor ds (bad) dec pop xor xchg pop dec jae mov pushf add sete (bad) aaa fisubl sub and xchg or fwait add imul or ja jne pusha int3 pop push inc roll pop push dec sbb daa je js mov mov (bad) mov int3 (bad) in add aam sbb mov sbb xor and lcall and or pop loope jns loope test frstor cltd fsts adc rol hlt and fs cmpsl push data16 pop lock ja jl inc orl add xchg inc cbtw adcl mov sub call je push fwait cli jo push int and mov mov inc sbb or imul sbb push adc jge xlat les jo add es lcall mov inc imul dec dec movsl in sbb mov pop cmp adc into push inc cmp mov inc dec adc pop test dec push push adc sbb loope mov fcom mov xchg ja or popa cli fidiv lock jo pusha lea mov xor and adc add xor push fs and getsec xchg or cmp es outsl adc mov and push int3 (bad) add cmpl lods daa js lea jne adc daa push add sub into stos jmp push or andl cmp andl mov pusha push push and daa mov mov xlat xor pop in fwait adc xor add test shl xor and aas in dec push or dec aam out dec adc push add xchg cmp sub pop xlat outsl sub push aaa xor xchg cmp sbb push pop or mov mov and jbe rorl cltd adc xor inc fsubr pop pop sub enter adc xor test or xlat das inc loopne add fs aam or xorps or mov cmc mov loopne cmpb jne imul roll and add pop pop loopne adc add mov inc ret cmp popa adc test xor sbb adc popf jne xor sbb push daa das fsub mov push xchg movzbl jl das inc jmp fwait inc shlb dec fiaddl sub fs add dec or popa xchg insb call imul push xor std fisubl (bad) pop dec push jmp add add addb dec sbb cmpsl das enter ret mov push mov lods pop mov (bad) test js orb mov add and test mov rol push test sbb dec dec mov xchg loopne adcl (bad) sub or dec push stc inc mov mov adc push xchg pop addl loop or xchg es insb popf and mov mov sbb aad ret (bad) jne loope push mov and negb pop addr16 mov mov or les or dec les pop add pop pop xchg movsb add test cmp inc dec fcmovu cwtl mull xchg xchg in xor scas inc int add cmp mov cmp pusha add or mov xchg push add pop pop cmp outsl mov jl lods mov sbb insb test mov and cmp pop (bad) leave mov scas mov (bad) add push sti mov lcall inc loopne test push and mov add or gs adc in ja mov sbb (bad) or and dec ja or xor pop stos sub addl mov jae mov adc pop xlat mov nop mov addb xchg or pop pop push push (bad) mov mov push enter push mov cmp sbb das inc add push pushf (bad) inc ds inc fstpl hlt inc fcomps add fidivr push dec icebp fldcw push out push test shl lahf data16 lock in (bad) inc adc lahf call addl add add scas stos iret imul lcall in jns out cmp jo push call and jnp repnz mov nop push mov movl nop pop pop sub and add jb and adc adc and push dec adc divl mov loope sbb add adc pop dec jns je dec dec movsb scas es enter lcall xchg or jmp mov inc sbb sbb fwait or push pop aam cmpsl loope into fsub jo add mov and repz repnz push jo js out cld inc jo or sub inc es negl adc lds cs or mov mov add sub repz dec scas xor dec and mov mov mov mov and pop ja aam or mov aad xor fwait cmp and push ds and and inc inc mov nop inc inc mov inc cltd add add andl add lds cmp cmovnp test mov push or (bad) (bad) push les inc dec or mov adcl dec loopne inc (bad) fimull push lret inc or jae dec jl scas dec faddl call fdivs fldt test add (bad) cmp push adcb out insl xchg sbb inc mov inc or stc inc out inc loopne push pop mulb push push cli inc pop xor xor je mov arpl mov xchg outsb push push adc pop sub pop xor popa fisub mov sub push xor jmp pop add test push loopne fcompl or inc les jmp xor or xchg xlat pop sbb adc clc (bad) icebp mov jns mov icebp pop or mov sub inc movsb test inc pop push or jbe out testl jge js jae movsb lock cwtl add cmp adc push adc mov and cmp add mov setae mov add pop pop pop pop sarb sbb sbbb push mov in mov mov fadds mov addl lods cmp mov cmp movsb pop xor xchg and test push mov (bad) fdivrl xor inc pop (bad) sub mov or orb mov cld push mov lret jecxz push out sub imul mov mul inc cmpl mov cmp fadds adcl lods cmp pop push dec push mov pop sahf lcall lret mov (bad) movl lds loope and rclb adc or cmp (bad) dec rolb das add mov adc sbb out inc or aaa test mov adc mov xchg mov jle xchg nop or push or pop jae pop xor jecxz ss das lret push sarb cmp adc scas dec ret lret or mov loope jecxz mov je out or xchg gs mov jge mov pop sub cmp mov cwtl adc iret xor (bad) in xorl or out or test xor stos add mov les enter jno test and cmp incl mov add pop cmp sbb xor test jo mov (bad) xor sub and adc sub sub and push push xor pushf adc push outsb in aad imul fs dec andl mov sub iret movsl rcrb mov clc pop je hlt push mov dec (bad) leave mov pop stos (bad) popl add (bad) xlat add xor add push add movsb inc hlt dec mov pop cmp sub sub and add add or clc addl push and sub and ret aaa pop mov (bad) fmull or loopne mov xchg (bad) rcrb lret add adc inc insl push sub sbb or or subb ljmp push rorb adc (bad) loope cmp insl xor (bad) ret pop jno and leave inc push rol lods adc adc mov data16 dec mov loopne mov aam not and ret mov unpcklps mov mov push ja cmp mov pushf pop jp jp xor das dec and and dec xchg lret cmpsl daa sub pop fadds (bad) sub mov or getsec loopne mov nop cmp adc add repnz sub pop test daa add enter jb mov inc xor jle add inc or popa dec or hlt sets jo pop push push stc push cmpl (bad) ret arpl push sbb inc adc cmp sbb lea xor ret fimull stos (bad) bound pop xchg inc push adcl repz or mov lock pop mov sbb sbb add add std or loope outsb xor add mov xchg adc xchg jecxz addr16 and fsubrs (bad) je jae push mov pop sub fisubl (bad) xor push cmp ss jnp pop and mov add lret cmpsl xchg ret dec or fadd xchg in mov pop mov push test pop loopne add jge mov mov sub jge dec test imul push inc cwtl cmp inc inc loop (bad) fnop lahf fidiv outsl mov das cmpsb lock push jle push sbb cld mov (bad) pusha repnz push ds jae push das cmp rclb xchg lock or or dec ja stos or inc and pop adc sbb xorl xor cmp lock lea loopne lods sbb lea xchg jge mov xchg sti adc inc pushf arpl fist (bad) push mov mov mov call call inc or movsb insb sub fild push xor jmp jecxz addr16 or and in or (bad) pop mov push dec sbb ljmp (bad) push add in and rclb mov or and dec (bad) mov insl arpl inc les mov cmp mov pop push add xchg sbb ja sbb dec push xchg mov add leave jmp mov add push add rclb fcoms lods icebp ret stos outsb sub jo sub add sub aas and ret lret and pop pop mov mov lods dec cld adc pop popf cmp arpl out (bad) (bad) aaa xor sub cmc in (bad) mulb adc add xchg shrl mov lret cmp ss shr (bad) add fild lock mov and mov cmp mov xor in int3 inc js push in out incb daa dec dec or push push push rorl in in inc sub orl cmp ret inc testl popa ret rcr sbb arpl xor push jnp je cltd push inc daa jle mov push es xchg call adc int aas dec fldl pop rorb addr16 xchg lods inc andb data16 push lcall add mov (bad) enter add mov push jl and dec loop je pushf fadds xor pop jne mov call push dec lahf or xor popa pop das sbb (bad) and jmp push lock aas push mov pop sub pop sbb loop pop xchg or push shll lock ret out test mov aaa and xchg add mov and pop ret dec ja scas dec jle js jne dec xor (bad) loopne cmc (bad) repnz ret jb in adc xchg or test lock rcrb push mov mov add add insl sub testb push dec clc sbb aam jmp sbb inc iret and jb ja lock insl cld sbb loop je and mov and nop dec cld sub adc decl pop (bad) or pop push mov addr16 push jo nop les inc movsl xor pop cmp mov les jbe dec dec mov inc pop into push out arpl mov adc mov adc addl clc cmp (bad) or and mov aas xor mov test inc (bad) nop pushf ret lea dec add adc sbb xchg cmp fmulp cmp lock adc jecxz test testb ljmp ret dec cmovno test inc es or in imul xor pop inc inc xor iret sahf push lret jne popa pop es js cltd fsubs push mov loopne lcall (bad) add mov mov xchg fidivl inc push popa push cmp (bad) iret mov aam gs mov jecxz popf scas in mov mov and ss push loope js in xchg jne fisttpll jo arpl pop cmpl dec fidivl add add cmc loopne jg sbbb cwtl js xor pop jb ret push inc jp add rorl movsb and dec sbb jp ljmp sbb sub ja addb inc in ja loope or imul inc dec aam add orl sahf pop and push mov das (bad) or or add rcrb or add pop mov pop cmp sbb roll xchg outsb push enter sub gs movsl lds pusha sub loopne cmp dec sbbl xchg pop add (bad) jmp inc pop je (bad) fimull fcoms xchg mov roll and push imul movsb in enter mov or push adc adc mov or add push iret push or andl mov pusha push setp or popf mov xor dec pop xor cmp ss or inc push push sbb lock or dec (bad) mov or xor xor dec push push test xchg jo pop (bad) je pop inc (bad) cltd mov push or daa mov inc mov orb nop jne (bad) sub insb inc inc push mov add fs add pop mov hlt enter enter add mov dec xchg lock or pop movsb clc inc hlt push imul mov add data16 rolb add push hlt nop mov or sbb jecxz sub loop add cltd fcoms mov jno inc sbb mov loope scas adcl inc arpl and js add repnz or mov (bad) dec add add movsb rcll (bad) int mov xor jb mov jmp xchg and fadds inc push adcb and (bad) stos adc (bad) sbb xchg inc ljmp or adc push sub mov shrb das pushf shr and or lds es imul loopne rorl roll pop cs test sub and xchg or pop leave push mov mov sub inc popf sbb in je mov inc mov push inc movsb call or iret or movsb out mov push sti inc sub (bad) jns and adc jl add pop mov xchg dec pop and adc sub es dec imul xchg (bad) (bad) cld push repnz cmpsl sbb nop jnp add cltd adc mov adc rcrl cmp shrb inc test adc aaa pop sub mov add nop pop add inc dec and enter and push sub (bad) out mov add xchg lcall mov adc or dec push adc jnp inc rcrb cmp sbb outsb adc lods pandn in push xor inc out push or inc inc cmp xor shr cltd inc push xchg dec push and dec call or pop and insb pop mov push rorb rol (bad) das sbb xchg mov lea adc cmp add push out (bad) add movsl sub addr16 and mov inc inc inc push jns aam (bad) std push lods pop enter push cmp mov add daa adc cld cmp or and dec xchg inc pop add add xchg xorl imul inc adc xor scas inc push or xchg or xor dec loope inc loop loopnew test dec (bad) or xor xchg in add mov and repz mov or xor or outsw das lods xor sbb mov and pusha pop fmuls jle sub xor adc add add add cld notb insb das push fsubrs dec int les out push testb ss dec push cmpsl pop and fild popa mov aaa mov nop xchg inc nop or nop sbb push nop jge push pusha and or cli push xchg adc outsb pop inc lret mov and cmp adcl gs nop push (bad) std cmp insb imul mov cmp sti sti push mov clc fldt out adc jg push sti xchg arpl or push jo jle jle jo adc cli hlt jle test insl push or xchg mov stos adc test stc divw js fnstcw insb dec mov xchg mov imul xor std or xchg (bad) cli je das imul mov aam popw adc cld cmp (bad) loope jle adc shll hlt jl mov std popf rol cmpsb mov and mov and xchg mov adc jle fistpl test adc out adc mov mov jle push add stos jle adc inc rcrl js stc lods jo adc lret push rorb inc lods jo hlt dec std mov mov jmp adc std mov mov sbb adc jbe dec lock loope add ret xchg hlt jns pop lock adc mov test or mov lcall add sub adc and ja jmp jo xchg ret cmp cmc shrb add imul mov adc jo jo insl icebp std out sbb or mov jmp dec repz imul add fild lods xlat adc sub or jno sbb mov cld fnstsw lret and mov jo fnstcw jle in cmpsb dec push sub and das adc pop outsl sub adc std jae sbb daa popf jle loop inc fs out scas add xor test daa aam loope xchg iret mov out lds pop cltd sub fsubrl es pop pop mov jl push pop lret xchg rorl mov or iret mov sbb lods cmp pop cwtl xchg mov cltd fstpt (bad) xchg mov (bad) adc adc outsl lock mov mov push adc call inc mov incl mov xchg mov or and adc add jno add divl cli mov ret xchg sahf outsl test out jne (bad) fxtract (bad) js (bad) std xchg xchg adc stos pop jbe lret jecxz repz adc jecxz (bad) ja xchg cmp orl add loope jle add mov pop js nop js test sbbl mov xchg scas iret scas int pushf out lods xchg adc adc xor xchg iret mov pop dec add ljmp repz jne mov dec mov sub pop adc pop fcoms int sti (bad) mov cmp (bad) jo cmp clc xor inc rorl or mov leave mov mov adc fcompp sbb add stos lcall insb arpl pop add lods mov aaa in jg mov mov clc cmp inc rcll sub in jb fcoml sbb fistpl ds dec jbe inc push adc (bad) push and out js sar call jg ljmp addb jo aam adc jnp push xor or mov push ds xchg push enter mov and ffreep stos or jl sahf lods add fild loop imul enter aaa adc subb adc out and inc (bad) jecxz mov inc dec jae cmp test clc pop ret cmpsb jmp jns (bad) sar test mov aam adc stos aad leave mov mov subb ret pop addr16 adc pop int3 cmp sbb int3 cli ja iret jg xchg sti setae sbb frstor push adc lret adcb (bad) aas lock or cmpsb mov pusha in adc mov adc mov movsb repz icebp jmp out mov sbb lret loopne in repz mov out pop mov cwtl push dec out adc es in sbb cmp lret notl lods adc pop stc std sub ljmp ret adc aad outsl mov (bad) adc adc sub hlt adc mov lret outsl inc lock add jnp adc loopne ror and adc std push sub popa xor bound fbstp push (bad) (bad) pop sbb pushf lahf (bad) sti push rcr cmp fildll pushf mov fistpl cmp cmp loope jmp push out hlt fidivrl xchg add lds pushf pop adcl ficompl pop rcrb adc cmp ljmp mov mov cmpsl out pop js ljmp test pop in clc sbb fdiv mov adc stos push push testl mov out jo xchg lahf jge mov jg mov negl loopne xchg pop pop lcall add ja cmp lock test mov aam popa or outsl cmp or xor out jmp cmp sbb js add in adc les dec sub cwtl jae inc mov mov dec out outsb cmp popl adc mov lret scas jne insl xor cmp or fdiv lods mov or xlat jmpw or or cmp dec popf ss inc ret push shrl jge fistl xchg negl jnp and loopne stos cltd pop push sahf push sub in cmc dec push inc shr sti cmp lret es iret add lods mov add ret daa bnd adc or pop mov cmp dec pushf and sbb adc mov ss sbb loopne mov addr16 clc xchg inc rorb adc stc mov xchg mov lods adc addb or hlt pop cli push pop testb push dec loope mov sub or adc outsb ljmp and data16 ret lods add mov in mov jno adc mov sub aaa std lods pop stos in add les ret dec aas dec leave cld out ret bound ror leave xchg outsb mov jecxz (bad) sub in fistpll push call dec xor (bad) jo inc pop enter pshufw clc dec mov sbb adc xchg ja jo jmp pop stos lods aam pop push clc cmc iret adc add je ret aaa lods outsb stos inc mov repnz push outsb pop lea popf mov mov jl fldl xchg add and sub (bad) lcall seta cmpsb jecxz or mov mov inc js loop jl data16 jne fcmovnb and rorb sbb movsl out subl adc push dec shrl cmpsl add stos lcall xor adc lock sub push jmp clc mov leave jge xchg or mov xchg ss ljmp inc das and (bad) sahf test jle frstor adc adc iret mov cmp sbb arpl (bad) push sub xchg mov cmp mov loopne adc iret out xorl dec jo push cld xchg lret mov dec push cmp push cmpl mov aaa addl jo nop xchg inc cmp loopne sbb mov adc hlt jmp fcmovb data16 lret inc hlt push popf lods fnsave and cwtl push or xchg outsb or imul pop movsl mov push mov sbb cmp (bad) ss int3 lahf ja jg ss insb call cli stc cmp call stos adc or add mov jno or inc push fcomi push sbb jo hlt ja adc adc clc cmpsl loope add lret mov adc div stos add mov imul mov jae out (bad) fucomi xor sbb or inc in push mov sbb adc jl loop sahf imul jne test in lock pop inc shr and and rcrb fstpl frstor mov adc out jmp mov fdiv push cmpsb pop push icebp dec sbb pushf shrl fsubs scas in xchg enter (bad) jecxz sub jns or xor fnop mov (bad) or push ret push cmp (bad) loopne jg hlt incb hlt outsl cmp or daa jmp push xlat stc cli rcr push ja adc add and in mov not repnz xchg aam add mov loop lcall lret pop fucomp outsb lcall xor jo pop adc aad sbb mov pop lock fimull lods mov pop mov xor jge outsb fildll mov inc mov inc mov fwait outsl data16 or push adc xor xchg dec mov iret (bad) mov mov pop testl mov sarb cmp mov orb insb ret pop and clc mov sub or mov lea xor pop adc arpl test push cld xchg fistl cmpsl pop stc jl or mov sub adc lock sbb popa stos push pop jge sti stos daa inc jbe incl iret add mov addl mov jbe js movsb cmp stc nop cmp nop and cmp in mov push sbb clc sub lret lock jle add fbld bound dec xor inc add add lret mov idivl loopne add mov adc incb (bad) adc push push mov jno dec bound loop js aad stos push mov mov call enter add outsb cmp adc shlb adc data16 mov icebp hlt adc sub fisttp sbb jmp xlat cli add lret subl jo out dec mov push out or fld repz inc lret pop xorb add rorl test inc pop adc inc mov pop pop mov add or lods stos adc (bad) xsaveopt neg adc pop dec lods sbb jns notl mov jmp leave out ds push loopne adc test mov sti cmp repz mov xor sub (bad) sbb rcl daa mov inc sbb cs mov push cli sbb dec decl adc clc cmp stos lock fistpll mov xor mov ss push or xchg fldt add in jno (bad) mov js xor (bad) or pop pop and mov inc xchg xchg adc sbb lods lahf mov test adc cmc (bad) jmp jmp hlt cmpsl adc sarb mov rcr ljmp adc jg call sub mov les in cmp mov push xchg add out cmpsb pusha nop jp xchg imul jle fmull adc cmp loop or pop xchg adc jb lahf cli push mov cmp pop mov icebp jne setp xchg aam push gs gs out daa (bad) mov ficomp ss rclb sub add sbb xor (bad) call or or push cmpsb js (bad) xchg sbb pop xor loopne pop sub cs mov pop movsl sub (bad) lock jo insb cmp (bad) mov push mov fmull cmc ja xor stos mov mov loopne jle add push loopne scas and popf call mov adc lret adc roll push fwait adc stos jecxz jne add mov jge jle mov mov loop inc dec jmp pop mov outsb add out add rcl jnp jo xchg cwtl inc push dec push cmpsl jns (bad) fs (bad) or mov cmp andb sub cmp adc or or pop aam pop lds (bad) enter and jecxz mov jp push mull shrb or or gs insb sbb lock lret sub dec inc orl lods fisub dec inc pop adc ja jbe cltd or lahf add (bad) out xlat aad xchg ss push loopne aas sub inc (bad) adc push jge and jmp pop dec sbb push push movlps sbb enter stos inc leave pop mov push dec jo lea ds dec jecxz je loopne and js fwait js dec lea jo clc das jo or scas imul test mov mov out shll das hlt cmp movl ret cmc cs sub imull pop sbb fstl mov fdivl notl inc mov mov aas repnz movsb mov mov popf repnz xchg mov lods pop push lea jbe mov lahf push ret sbb sbb test or or iretw sti pusha jno pop push cmpb add lods out (bad) ss jnp rorb add jmp inc les xchg jecxz into jb xor jmp pop pop mov shlb sbbl mov stos mov adc jmp pushf add xchg push add sbb sub mov cmp cmp cli push inc outsb mov stos mov lock (bad) xchg sbb ret mov push mov pop pop rolb icebp shrl sub push mov adc jecxz adcl mov lods in xchg (bad) fidiv das xchg sub mov sbb loopne or daa mov sbb ret push cwtl adc push rclb push jmp (bad) jmp cli adc or out jo add jo mov add adc dec jle push xchg inc movsbl clc push loop or mov inc cmc cmp das es jo fidiv cmova (bad) fisubrl jo xbegin pop cmp cwtl std adc arpl stc sub rorb xor je lret mov add (bad) and dec rcrb out jge pop cmp fdivrl pop dec and push out imul movups sahf xor shl adc lret fisttpl jo jge sub cli mov mov (bad) sar mov cmp xor pop leave mov ret stos mov dec cmp adcl jo out mov lds clc and or popf out mov inc ficompl leave mov and xor and out pop sub iret jbe sbb inc mov adc lret jo or gs or inc shrb push inc adc mov leave cltd and in (bad) sbb adc mov or int dec or scas stos pop adc lret xor fnstcw cld aam adc out inc jb pop jmp cmp xchg adc repz std adc mov xchg adc fsubrl imul loop fisttpl cmp sbb (bad) adc rclb ja test jp mov fldcw data16 add mov xchg popf ret (bad) add push xchg add sti sbb lea enter das push icebp sub mov adc push adc ficompl out adc sbb fisttp psubb loope mov sub mov adc cmp in dec popf jnp dec sub jae mov pop sbb sub xchg popf mov lahf sbb data16 pusha cmpsl jecxz xchg push xor or pusha mov mov stos adc lods adc cmp mov lcall and adc jnp clc push pop out movl adc mov jl int jbe add ret data16 rcrb inc push lcall dec movsb jns test or jl bound push or es cld and adc or fstpl xchg jo mov (bad) mov adc push adc inc xchg xchg test add cmp test pop cmp lret ds cli fwait inc call (bad) outsb jge adc jl bsr stc hlt jge mov xor adc xchg (bad) mov pop xchg insl div mov lcall mov xchg xchg aad fsubr cmp orl cmp adc dec cmp or push ja push push sbb sub mov popf mov fisttpll jl cmp mov cwtl mov mov sbb dec movsl push mov xchg in inc dec inc inc adc push mov adc jle cmp adc rcrl cwtl mov rol stos out (bad) int adc iret and in fldenv daa cmp hlt jne add test (bad) cmp loope push repz in (bad) adc les mov scas loope ret movsl xchg test cmp cmpsl call push test icebp adc cmpsb outsb push push insb adc cltd xor xor adc test (bad) dec dec xorl adc rclb test mov mov in in lods stos add add adc test jle or xchg frstor bound adc scas scas pop xor aas (bad) mov or sub lock aad dec lea and jbe jecxz ret je ret addr16 shrb add pop cli push or je paddusw rorl xor mov push jno movsl shrl push lods in adc daa inc xchg push call icebp adc sub jno xchg adc xchg jle iret sub mov push (bad) adc add sbb negb push xchg cwtl shl loope jo mov lods adc int nop fsubrs je cmpsl (bad) cwtl or dec adc mov adc adc into cmpsl lahf push and adc sbb icebp inc sahf lock xor out hlt dec in cltd scas inc xor adc dec push leave mov jle sub jl push sbb xchg or lods cmp inc inc push pop popf pop aaa and inc inc js je or call jnp pop adc movsb sub pop cs and sbb xor sub pop push aad jae dec or push lds lock adc ljmp fiadd xor jmp sti lods cmp jo adc mov adc and jno adc ja mov stos jbe fbstp shl arpl adc add mov stos inc adc push stc pop popf ret out mov fdivr fnstsw daa lock hlt test mov jns mov clc mov lahf sub add add shl cmp cmpsb jge xchg jnp sub sbb js sub fdivs add jbe sar add les adc cwtl movb pop or push or bound adc push sub cli or sub pusha (bad) xor push lcall pop fcompl xchg test repnz sarl jmp mov mov jle jge adc mov add mov dec adc or fcom mov sbb imulb push testb mov ljmp sarb sub daa aas pop rolb mov jecxz (bad) icebp clc cmp mov push dec push jl mov mov movl shll scas adc (bad) loopne pop and rcrl mov daa adc cmp stos xor mov xchg add adc add jle mov push or (bad) rcll ljmp inc pop push imul jle push mov inc mov xchg mov jo repz scas sbbb les fcmovnu lahf sbb gs lcall loopne sbb xchg cltd mov fnstsw call sub cmp js sahf adc mov adc pushf jl sahf fwait decl push es sti sub test or scas aas adc adc inc jp sub cli xor sub loopne fidivl stc inc jno adc pop add pop popf loopne rorb mov aad or mov loope (bad) jo movsb out push and daa leave sub or xchg mov mov lods notb or sarb jl sub leave push jp pop mov add sub in mov and loopne push mov add outsb add sti mov add mov xchg adc mov push and xor pop call lods xor and sbb or sbb or dec jbe aaa sti adc adc push sub fisttp subb adc sahf fiadd and aad in jae jae mov push or (bad) divb test loop sarb pop loope pop push sub jge add mov sbb xchg mov mov pop pop fdivl push jbe inc and lock xor inc sub cmp adc cli push push xchg loop adc nop adc push leave std adc cli in mov bound test mov pusha mov adc pusha adc repz adc pop pop adc inc adc popf lahf hlt jne pop std dec add cmp out or fisttp mov dec mov pop divb xchg sub push out outsb rclb xchg and dec or (bad) push sub sub cmp les (bad) push ret and pop mov paddsb sbb out daa daa into (bad) call aam iret mov lods mov dec nop jo pop scas lret pop pop mov lret ret push sbb sub push call lods mov jbe sub sub adc xchg cld rolb jl push cli jp push adc icebp add pop xchg inc mov divb mov fcompl sti or mov adc xchg adc clc mov cmp cmp or andl inc das jo mov mov adc and adc in sub adc fdivs mov aaa mov sbb mov nop cld mov mov cmpsb pop sbb idivl cmpsl xchg xchg mov inc sub mov fst ljmp or xchg mov add mov add bound jo sbb es adc in cld imul notl addr16 cs add rol jl pop clc push jp inc push hlt ja stos xor push outsb repnz lods sbb push mov in add push inc push mov scas adc pop sarb loope sbb mov js jp jmp inc dec mov hlt jns ret lock cltd push rorb fadds cmp xchg mov sbb mov adc rcrb stc inc mov adc adc push pop push or (bad) scas jne lock push push sbb mov int3 inc sar mov sub sub gs add push push mov jl jmp dec sbb jmp mov cmpsb add mov subl outsl adc add ficoml xchg rcr mov test adc dec sub ljmp cwtl jp dec addl in mov and mov (bad) sbb inc test xchg mov add push jbe std mov inc js (bad) data16 lds data16 (bad) aam out adcb xor outsl pushl dec cmp loope pop and add (bad) sub (bad) (bad) jmp int3 clc xchg mov jge adc or frstor das pop loopne enter xor divl js hlt jno push mov out ror mov sbb lods bound push jne insl rolb aas cltd inc mul add jge lret outsl lea lahf pop jg mov add jae xchg xor adc mov adc adc xor shl adc or insl and pop or sahf or cmp adc and loopne cmp push data16 stos sbb and jmp cld mov stc add mov mov test push push add loope out (bad) lock push sub or sbb xchg inc lea in cli test clc mov inc (bad) or call push jecxz cmp iret push add pop xor dec rep push lea clc mov lcall inc pop jmp cmp jg inc fcmovnu mov jbe mov mov push stos (bad) cmp jg jo or and (bad) dec dec add xchg call lock loopne add or rorb ljmp or or pusha add data16 shrl scas loop dec lods lock imul and or outsl insb mov (bad) jb or loopne mov rorb imul push cs xchg or cmp push xlat or cli adc sbb mov mov push adc adc invd add mov dec movsb divl push xchg adc nop adc pop sbb into mov push inc in sarl les and adc adc jecxz pop mov and mov es and pop xchg pop inc (bad) jp shr inc insl pushl push inc int3 cmpsl mov mov xchg (bad) lret (bad) (bad) fsubl mov ror adc mov es sub mov jo adc test rolb sub xchg (bad) adc pop dec in movsb mov jo push sub dec mov rcrb (bad) mul stos (bad) das loopne add stc les (bad) or xlat in out (bad) and dec mov jl rcl sub in add dec pop sub inc push fdivrs adc and xor adc lods hlt and xchg push xchg xor push and into adc jmp (bad) adc std (bad) das test xor lods push (bad) pop xor xor ret add and mov mov scas jle clc mov mov mov adc jns stos mov push cli mov shr lds add pop push jne pop fsubl call cs xchg push cmp push push and mov cmp jl popa cwtl orl std sti pop aam xchg aam enter fcoms mov or pop clc cmpsb mov pushf mov loop stos ficoml call cld daa mov leave pop mov out jp add cmp xchg or loopne mov push sbb push call sub dec adcb and adc or lods int jecxz jp cmp or inc and sbbl xorl sbb pushf add mov sbb lods (bad) aaa sbb cmp shrb cmc add xor xchg cwtl dec cld jbe cli xor push push cmpsl ret aas xor jae ret jo or jmp cli xchg dec pop add mov jmp jns xchg cmc movsb je push loop adc sub mov mov jge xor lahf int3 xor and and stos das std mov dec es movsb cmp dec add adc lods adc add cmp decl cld stos jp xor sub imul pavgw push rclb (bad) lods xchg clc adc movsl into adc push rorb push mov pushf dec mov xor std sarl jb pop inc out cmc popf sbb cmp and inc mov jmp cmp loope sbb xchg sub repz adc (bad) movsl add mov push jmp and inc lods push fdivl orb mov inc (bad) idivb (bad) mov out mov mov idivl xchg inc jmp into dec rcll insl xchg sti push out jno pop sub js xor adc sbb fnsave mov aas inc movsb add fstpt mov lods or sub adc adc loop jmp (bad) bound jo mov xchg (bad) ret mov loopne,pt cmp sbb addr16 loop jo rcll push subl xchg adc ret dec pop adc stos test mov mov repz lcall inc jg pusha into lcall test out lea js cs jae xchg mov mov int3 adc and aas or pextrw cli sti or repnz pop sbb adc sub mov xor div mov insb rolb mov pop or jp mov mov popa sbb adc dec jp stc pop add scas jmp in cs adc clc out push sub sbb cmp push ss dec loop aam pop inc lret or inc cmp jecxz pusha ret xor int mov adc test js and fstpl adc fisttpll in adc out or das popa sbb std les xchg pop mov xor nop pop push adc xor mov bound mov ds repnz cmp xchg clc add sti cmp jecxz lds test add test mov jo jbe (bad) loope or push add jecxz imul fildl adc pop sub mov (bad) out adc mov cmp mov loope jle mov icebp repnz pop inc insb cmp jecxz out mov rcll xor adc sbb dec mov and cli xchg xchg adc subl add adcl scas outsl les int3 test jo aas jl pop pushf xchg cmp jo daa sbb repz rcrb inc xor fwait icebp xchg adc cli and push mov sub jge mov daa leave jg insl sub dec (bad) mov stos rorb cwtl aas lea cmp inc push and pushf test imul add dec nop ss mov or nop sbb je inc xchg dec js jl mov insb add hlt jl repnz jl inc push and and push sub inc sub clc pusha aas hlt jb in js shrl cmpsl add add adc and push clc adc mov or xchg clc hlt add call stc sar inc js (bad) movsb mov aas cli outsb adc clc sbb sete jg adc or scas repz lods xchg loope test mov inc lods dec push jl or pop inc mov mov scas lods lds cmp test push call icebp arpl sub stos push movsl and xchg dec xlat ret cwtl in loop cmp stc jp sub xor push jmp out sub xor shlb pop push inc out out pusha pop inc push out sahf adc in mov pop push das xchg xchg mov in dec mov add jne xor inc push sbb bnd jne addr16 mov aaa jecxz sbb cmpsl sbb add sti or dec outsl push scas add xor adc mov inc inc or adc cmp cmpsl inc push repz add push lods cmp into and rcrl sub jmp cmp mov repnz decb loope adc inc popa and pop dec jo xor lods adc pop or out pop xchg (bad) icebp fsubs xor incb mov mov sar jb (bad) jne sub adc fs inc mov jbe aas (bad) push mov sub (bad) adc stc push mov adc adc fcompl mov xor or pop xlat mov or scas outsb cmp loope add adcl inc mov out pop jg scas test or adc and pop insb aaa adc and test dec repz test dec push mov inc pop xchg jg jbe fbstp pop scas mov movsb xor dec add cli mov adc add mov ret push daa cmp jmp sub clts cmp pop sbb mov iret test pop out jb adc rorb xchg or xchg mov into dec fndisi(8087 adc push out cmp mov push sbb adc adc es orl cli cld mov pop pop push das and jg punpcklwd mov (bad) lds push mov insl aam out adc xchg movsb movsl xor adc adc mov lods movsl cli push iret stos push or jae iret pop inc insb aam lea jp inc adc sub (bad) arpl cli int3 lret adc pop loope jecxz jnp loopne cmp adc inc lds sbb or and xor loopne adc lret (bad) adc dec popa pop adc (bad) mov or sub push test ret mov pop cmp in cli les test push adc fldl jne sbb out jmp (bad) and data16 lods inc cmpl xchg jo cmp std adc int ret jecxz stos cmp cmp adc loopne mov aam inc int add mov push (bad) adc aaa and adc paddq inc hlt push clc sbbl jl int add ljmp cwtl mov popf adc mov add popf mov scas lret inc lods jg dec test mov inc jge cmp addl cmp bound in add push jb sbb cmp push test cmpsb mov push or mov test jb sbb mov clc or xchg mov clc pop mov arpl fnop mov jl pop (bad) sbb cmp adc pop push and mov jmp and mov cs out xchg daa fwait lods inc das xchg add add je (bad) adc cld push jle sub add sbb cmp sbb lds push jg and jae test inc jns sub ret cli adc loope xor or (bad) mov pop repnz icebp movsb pop jne add lods (bad) push aam mov jo xchg stos lcall add and push mov cld rol or jns cmp pop mov and pushf ret std inc (bad) sbb rcrl push outsb cmp push (bad) or jecxz push push cmp add add sub xor mov rclb ret fisttp push add outsl (bad) cwtl insl hlt push mov jge xor daa inc xor or add xor stos or adc cmp and test adc imul lock call orb cs push or in sbb call cmp jo fild xor stos fistl add iret leave sahf jmp sub clc mov stos push sub js loope bnd add outsl pop jbe daa adc inc notb inc mov aaa add movsb mov add adc mov mov ficompl and push xor incl push sbb mov lods imul mov sti out pusha inc pop mov ljmp mov rcrb or cli xlat add xchg xchg or adcl mov loopne jle pop sbb mov sbb jle add ds (bad) data16 mov sub bound lea inc and sub imul mov mov jnp lahf push adc push sbb std aam stos xor add jo sbb mov sub or sarl xor in cmp jno in and mov xor mov aad jnp jno,pn push ficompl je inc (bad) mov add inc mov xchg out pop scas mov add mov mov ficompl inc xor inc and clc jno sub lahf dec pop stos fidivrl mov cld jecxz (bad) adc and jg adc jmp aam cmp xchg jb adc sbb and or push mov mov cltd aas adc and mov and shl popa test nop adc pushf dec icebp xor jmp xchg repz jl jle dec bound jmp ja out cli cmp (bad) frstor jmp adc inc cltd (bad) sbb sbb adc add mov jae inc (bad) roll jns mov sub mov (bad) sbb sub pop test sub sub sub sub frstor push loopne or add js sub sbb and in scas sub dec repnz inc lret dec sti stc mov jge mov pop inc xchg mov stc test lods pop mov push frstor stos stos stos xor rorl inc sbb rcll xor popf jg mov hlt jns dec shlb pop adc xchg clc arpl pop sbb ljmp inc add inc dec sub popf inc cli (bad) add push dec jp (bad) mov add sarb adc out popf ret pop shrb jle,pn inc mov push lock stos in pop dec arpl cs insb push jp test loope test lods xchg ret or loop add lcall loop and xchg cmp xor (bad) inc or ret mov adc lock jno mov out inc mov xlat sahf notb hlt add (bad) jb push adc rclb (bad) jecxz and test stos push out dec fidivl ljmp cmp std stos aad negb mov adc mov data16 xor iret mov arpl xor mov add pop sbb or xchg adc je cmp adc mov arpl mov push or jp (bad) jmp scas mov mov (bad) stos pop add mov js inc pop mov xchg insb pop xor mov adc adc cld xchg (bad) xor jo rep mov and cmp jmp movsb dec cmp cmpsl fadds cmp push cmp xchg lret or pop fidivrl mov xchg jo jae das lret js sub or jb xchg jns popf push dec sub cmpsl push xlat mov adc mov or adc loopne lods test test push addb adc movsb testb rcr or lret xchg mov sub enter movsb mov xchg mov aaa nop inc jo dec test pop sahf xchg xchg cmp sbb lock lahf cmpsb pop ret inc mov push jge cmp adc xchg inc inc scas (bad) enter aad adc cmp leave xchg dec mov aam lods bound lds push loope lea paddusw loopne call pop lods push cltd mov adc xchg sahf xchg mov mov pop adc fild in push push inc inc xor cmp jns iret xchg outsb sub xlat es gs cld mov stos adc adc pop out mov (bad) stc (bad) xor dec outsb pop loopne es mov lods mov mov pop adc dec mov popf (bad) divl stos mov pop sub mov pop jo orb repz int3 int3 adc sbb enter inc and xchg fwait adc sub xchg std xchg adc add pop pop mov inc fidivrl shrl pop add int3 lds sub or inc sub xlat add js or fldl xor lods dec xchg mov mov mov xchg add jns lods test pop inc push pop xor shrb lcall outsb inc pop subl movsl push sbb andl nop cmpl fs push push je imul dec (bad) fs xor push xchg je mov jae nop nop cmp cmpsb pop insl ss jne daa push push push push push or bound scas xchg pop mov push pop push and repnz (bad) rolb add add sub lahf (bad) fild lret nop lea push mov xor add sub inc cmp loopne rorl pop movsl push pop stos (bad) mov xor nop push pusha dec add popf xor adc das cmp negl and inc and add fwait pop inc and (bad) mov jmp add rorl adc andl bound cmp dec dec xor inc pop cmp inc dec dec push push imul lcall leave fist outsb push jp js insb dec dec popa dec (bad) dec dec xchg daa mov mov mov out cld and pusha inc xor mov pusha cmp cmpsl stc xor hlt outsb les push cld fistpl and push push inc jb shrl adc dec fxch xlat mov jl test xor lods dec jl push cwtl repz cmpsl stc push mov add cmp or cmpsl lods mov test push add std push cmp inc mov jo push mov out push hlt inc les dec (bad) imul push sub push cld iret cmp mulb scas xorb out lcall lahf rol cs push movsb daa adc test push and push hlt push fidivr test js loopne sbb iret mov negb push and mov jnp out inc es and push subb fsubs push insb incb push in jge mov xchg es les push sbb cwtl mov lods sub push (bad) xor (bad) mov imul push es imul jl shlb mov push sub push push xor push cmp hlt push ss push test stc out shrl sbb push push fs imul gs insb js lcall jb jg cld mov imulb insb push cmp adc loopne mov jl jns add cmp mov push loopne shrb mov mov mov lods mov push cwtl mov jo,pt outsb inc mov into mov rorl pusha call neg cmpsl stc push xor pop divl dec repz iret sbb add push push sarl les push fnsave push test dec add push lahf mov daa dec push dec lret repnz xchg loopne mov jmp adc inc repz enter jne adc push add mov add mov adc pop lahf int fimull and cwtl and es int3 ret dec leave xlat iret enter fcomp fxch (bad) (bad) loopne jecxz in pop or pop leave push xchg sub inc test gs and dec fiadd popa je xor xor sub fisttp out mov pop xor outsb inc push push adc das fnstsw fistpl adcb test add xlat outsb test fcom cwtl addl aas scas jns sti mov add in in push hlt cld jns ja outsb jno adc and jns out xor inc dec sahf out sahf push pop fs je jns out test sahf out mov (bad) int3 sahf out sahf aam in (bad) jno jno or jns push add or daa add sbb push pushf inc adc daa hlt xchg xchg fnstenv ja pop mov fs fs jns xor fs fs jp in and pop dec ret inc add cld and rcrl and sbb pop add fstpl nopl movsl inc dec jmp adc pop das inc loope add add mov adc jno pop adc inc fnstsw hlt or outsl add push add test fldt pop or fs out lret add add add add add add jnp mov add push insb sub sbbl add add or add or ds ds repz push push js pushf lods ds repz shl lock jns out adc xor push out sahf out je xchg test imul push mov add adc cmpb cmpsb cli or cld add dec rclb lcall (bad) mov (bad) out addr16 push clc add clc incl or add gs sbb clc imul iret adc inc mov mov fdivl push dec pop and add dec jnp aas push jl push mov pushf push imul push sarb in add aas xor or push sbb jle sub out push cmpsb lret das sti push push mov out cltd cs or push add or add psubusb out adc adc adc cmp repz sub and repz cmp sbb push adc mov les fcompl lock adc out sub dec pop pop out sahf out jo sbbb pop lods adc pop rorb cmp jmp rorb adc jns iret add or xlat popf cmp mov mov dec xor outsl adc xor (bad) dec xchg repz mov xchg mov cmp les iret repz int3 or fisub jns out cmp pop mov adc add add jbe test js mov or push punpckldq out mov ret add jle mov or jecxz sbb out or in (bad) mov mov movsb jbe jns sti out mov add mov mov push in add jns xor pusha sahf out out les push aam in hlt cmp add or in fdivs pop add pop andb xor ror add (bad) (bad) xor jle jge dec fdivl jmp mov add cmp cmp unpcklps add cmp adc xor mov daa daa daa daa add sbb pushf es daa add addr16 sbb rcll xlat jo push or push and sahf out push cmp xor pop insb xchg out push push dec testl or call cs push push es mov mov daa push cmp dec (bad) mov mov push cwtl jns out push rcl lock repz repz and inc push iret repz fs nop test ds repz aam hlt add je out sbb inc ja faddp roll xor adc jbe (bad) xor rcll imul frstor adc jnp (bad) out or push inc imul add or nop out shr enter push std int jns in cld cld cli or stc cmp repz clc xor dec repz repz hlt iret repz test xchg repnz cmp repz lock in ds repz clc in or in in sahf out jmp ljmp add popa or inc fwait popa or or movb nop jmp add pop outsb out or or cvtdq2ps add pop pushf repnz sahf xchg pop lcall or push je cmpsl (bad) je ss adc push mov pusha mov dec jb mov imul call mov fwait add dec adc pop (bad) and or hlt fdivl jns add push push pop add in sub push stc mov repz mov sti cld repz repz (bad) incb add sti cmp test add scas cmp add aaa and sbb mov ds test inc pushf fcompl sahf out scas push loopne fs jns out je pusha test insb xchg lock jns out hlt xorb (bad) cld cwtl aam cmp repz movsb in lods hlt jns iret repz jns out adc and sahf out sahf aam sbb inc sbb sahf out in and sarb and je out sahf test test xchg sahf out sahf xor movsb xor mov sahf out cmp les out sahf out inc inc in int jns push hlt dec pop add dec cmp repz adc jl repz repz nop xor mov inc pop mov pusha sarb cmp fs je repz repz out lcall sub out sahf mov inc les sahf out aam js test jns out hlt mov cmp mov adc shlb iret repz loopne cwtl in repz repz pushf cld push mov or movsb sbb jns test test out mov movsb mov out rolb sahf nop aam test int3 jge out mov sub out fimul rclb fsubl sahf out fsubr xor hlt repz out in xor repz or je cmp repz test cmp inc movsb cld push out lcall add out sahf insb aam js adc jns hlt adc add repz rcrl mov and iret repz and fdivl lock out cmp xor xor cmp out and je jns out push test sahf out sahf xchg dec jl push xchg jns out mov lods les sahf out aam fsub repz sahf push adc repz (bad) fsubrp push adc pop fdiv cmp and insb xor out mov repz inc lods dec push push mov out fs or je sbb outsb js mov xchg push xor movsb mov inc divl pop (bad) ja pusha xchg aam insb jg mul loopne js hlt dec test push sahf out sahf mov sahf out xchg mov cwtl enter jmp movb out sahf mov clc cmp sarl adc xor cmp repz dec pop fs cmp into jl je jbe mov mov into repz push push push push push cli cmp repz sbb xor dec push inc int fsubrl jns scas push xor xor outsb push pop outsl pop movb xchg (bad) cmp cmp jbe fidivl mov jle lock mov xchg push sub pushf xchg jbe jo incl fidivr mov call es xlat cmp mov xchg mov pop int3 cli cmpsb push dec dec sub iret loopne les pop js add out dec cmp jbe push jle test jle data16 in xchg js jnp cmpsb push inc jle push jl push je neg cmp inc xchg mov cwtl and jecxz push add fsubp push iret fwait pop scas adc dec in daa idivl xor sbb xchg movsb (bad) mov loope std shlb inc scas mov lcall cmp pop je add mov fs out imul push les divl jnp aam lods mov inc mov out mov pop push cwtl es sub mov xchg es sbb outsb ss cs xchg shlb aaa push mov lcall nop sub push enter mov jle cmp push pop push or pop data16 cwtl lods fidivr cmpsb push dec mov mov xchg push js in pop scas xor xchg jle (bad) je inc test repz push fsubl cmp push in movsb movsl sarl aam dec xchg push test sbb punpcklbw scas enter pop cmp call es push push push pop cmpsb inc das outsl fbstp jnp inc add lods xchg mov je,pn nop xchg mov push push add inc packssdw push rolb xor negl push insb das sahf test outsb shlb mov lock inc ss cmpb pop and (bad) call fsts dec es xchg add inc inc pusha icebp sahf aaa jle test (bad) js cmpb jmp cs add pop div push mov mov sbb aas dec shrb xchg shll ds add mov inc negl xor sbb cmp call loopne ss out dec adc clc (bad) and mov insb out mov jnp sub xchg and cmp push out mov mov jo fs or test je in mov int3 es dec fs les es sti movsb into mov faddp ss mov pushf cmpsl cmp add dec push pop lock addr16 mov mov fadds cmp sub ds ss xchg outsl ds mov dec inc div iret loopne lock dec mov ja jge fs (bad) pop push hlt cli inc push push pop rolb add outsl in ret and imulb pop out sbb push sbb mov sbb ficom push out test mov inc mov imul rolb jnp dec pushf in push ds pop into fs mov jl,pn jnp ds sbb push xor call pop ja,pn dec inc out mov outsb sbb push sahf xor hlt xchg dec cwtl push iret sbb mov push fidivr cs aam sarl push les xchg hlt fidivr rol push push cs inc xchg dec rolb popl sub mov inc adc fs adc test jo loopne les or push add add push add insl adc adc cmp inc push dec add jnp outsb sbb pop inc sbb fmulp jnp inc and dec pop push and pop ficomp push pop dec add sub in cmp push dec xchg push mov pop push inc mov mov or dec xor or inc push push mov cs and inc lcall mov dec and jae push mov (bad) in jnp add sub rolb pop fs sbb add mov jmp (bad) inc sar faddl cld bnd bnd clc aas push pop jmp sarb jae cld add pop or push push imul pop adc addr16 into push xchg jl add test or fnop push mov shrb add psubb mov dec outsl add push out lahf cmpsl fldcw neg out (bad) cmp cmp or loopne lock and clc pop push (bad) aas (bad) aas pop xchg addr16 xchg dec jmp incl pop std outsl xorl add imul mov jg sbbb add arpl cmpsb jo iret add pop mov lock int3 xor sahf push xor push in push out cltd pop (bad) xor jg cmp (bad) cmp mov jns decl sahf iret int repz add add and push cs and add fidivr dec pop outsb daa popa sub mov jl std clc lock aas rcrb inc imul inc je jmp pop outsl clc popl adc shrb arpl add xlat pop sbb stos dec test iret xor cs sub fstps cwtl rcl pop in les jae and aas nopl in (bad) aas add xchg aaa xor ja cld push cmp fcoml aaa pop xor and lock cmp cmp jge mov insb mov push sbb push sub inc add sahf int inc add inc shll xor fs sbb push push sbb loopne shrb fldt loopne (bad) push xor fldcw notb clc fcompl jl sbb push sbb (bad) pop or test push shl or push jge data16 leave pop xchg adc push jnp addb out in adc add and add out add sarb fs mov cmp subl mov fbstp das cmp (bad) and fsubrp scas mov es xor mulb adc and ja mov or dec push dec push mov andl dec push push daa outsl enter xor daa xchg push divl lahf dec daa dec addl xor inc daa mov xlat mov adc clc push push cmp mov lahf mov xor cmp adc adc xchg pop xor cmp jae xorl pop fiadd mov daa in mov push aas push xor mov repnz dec sub pop aas sahf ret imul jbe and push mov inc and push and fcomps and cmp jmp (bad) imul push mov push fs xlat mov lret push and mov (bad) push mov or fistl (bad) mov mov daa push xbegin push mov inc inc pop xchg sti out push xchg adc addr16 aas xchg inc inc inc or cmc int3 jle mov scas dec push pop es gs out (bad) daa inc aad push push mov dec pop daa mov out in sub xchg incb add and (bad) clc daa add outsl lds fwait daa add mov daa or mov es adc sbbw fild ss arpl daa in jecxz ds shll xor arpl roll xor (bad) lahf xchg push push out (bad) mov cmp push int3 adcl lret aas daa dec lret ljmp inc inc es fld1 cmp arpl clc into xor in repz rorl mov fbstp sbb nop in inc xchg sbb or mov movsb sub push repz daa xor out jne mov daa aas das es (bad) in xorl in push inc sub loope mov push daa xor and sub lock adcl data16 inc push int iret dec (bad) je push inc mov jge mov aas call add sub fnstenv or cmp jmp dec push mov jo pop xor dec xchg fs inc fisub mov cmp lahf add xchg (bad) jmp scas jne adc cmove or sub call adc cltd xchg inc add xchg sbb les subl into loopne jmp sahf mov clc or sbb xchg divl push (bad) daa dec xor (bad) mov daa dec daa cmp out jae daa clc dec je pushf inc jnp dec sarb dec jl pop dec addl rorl cmp push lahf mov mov xor cltd ficom push mov sbb imul aas mull mov inc push repz xor xor (bad) or lret sahf adc dec (bad) jb sub push pushf cwtl (bad) sbb outsl inc push in imul inc daa out cmp shlb push push adc mov pop pushl dec cmpsb push mov cmp xor and cmp jl aad orl icebp addb mov cmp nop loope (bad) aaa into or dec mov daa and xchg mov cwtl stos sub aaa sub mov das subl jbe lds add sbbl das dec es and stc fstpt fcomps fnsave push ds push mov xchg pop dec decl xchg add movntq aas stos stos inc mov orl xchg ljmp in outsl xlat pop dec pop popf and cltd xor flds lods cld lret xor scas cld push pop mov lock mulb add insb xor or repz (bad) jg mov les lods mov jbe push mov push sahf loopne in stc mov inc mov lea mov scas cmp mov (bad) jmp add in sarb xchg add cmp aam sub add (bad) cld test jmp jg mov int3 xchg wbinvd (bad) dec (bad) icebp test addl daa lahf jg jmp out inc std mov ret ljmp es xor sbb ss in xchg stc mulb sbb sub xor movsb and jge sti dec test sbb pop mull xchg lcall aas jmp jge scas cmp push jmp out jecxz cmc jbe pop into loopne sti mov cld mov ja push scas jle cmp adc sahf mulps sbb loope inc mov jb inc jp sahf loope push mov rorb push sahf icebp jge int3 jo sub sub xor jge sub mov push sub mov mov in (bad) iret aas ds test sahf imul imul repz out stos adc movsl stos fdivl sub jge sub lahf inc lock shr cs cmp int stos xchg out jno scas ds jge push mov mov push flds jge jnp xor out mov imul sbb fs dec stos adc dec mov xlat sub xor (bad) repz std addr16 sub repz jmp mov xchg iret jmp pushl inc daa xchg mov call mov bound cwtl dec push in push es test (bad) lods (bad) and mov (bad) mov test sahf fisttpll or in aas outsl (bad) mov pop test mov stc into repnz mov mov lcall cmp push bound (bad) pusha mov fwait std repz movsb jp add cwtl xchg cmpsb mov inc jge idivb mov out (bad) xchg pop adc iret fwait pushl pop mov cld xor bound dec (bad) mov and or mov pop jl add lret dec fisub fnstsw iret mov arpl push std inc dec sub mov loopne mov push lock jb (bad) movd imul cmp imul mov jmp mov pop fidiv stos mov ds ret out mov test jmp dec push sti in std dec inc mov and pop jl dec push stos mov stos and jmp push sub xor stos cmc std lahf jne loop adc pop icebp jmp (bad) push or in pop adc jmp dec mov pop cmp lock sbb adc lret and cmp push in pop jl pop popa adc mov psadbw (bad) jg jne xor imull popf leave addl sub xchg fsubs scas push movsb sub daa cld decb (bad) push mov (bad) mov push lgs mov add sub loope mov jge sti jns divl pop clc push pushl out jp cs stos (bad) sti (bad) jmp jp,pn dec push lret daa sahf sbb mov xchg mov test inc sarb out mov cmp dec rcll fiadd idivl lahf std clc jmp cmp pop mov push addl scas adc jmp pop add xor adc imul (bad) (bad) (bad) out jb push mov je mov lods cmpsl jmp sub aad clc sbb pushf sbb test sahf imul and mov xor (bad) and aad mov loope mov mov inc jl push fiaddl fcmovnb mov inc sbb divl (bad) int3 jo push shrb push push jge std std imull xor xor jmp popa xchg cwtl xchg cld mov inc push ja fwait lret int pop popl xlat adc mov lock xor fistl stos xchg pop mov adc dec iret push sub stos (bad) into or ljmp mov idiv dec jns lret (bad) jae sbb push shrl jnp clc or or subb fisubl mov (bad) jg pushf sub outsb jge es push fldcw mov popa pop (bad) push fisubrl (bad) lcall mov push arpl lods fistpll and pop dec mov imul loope,pn paddd jb mov daa mov inc sti mov pop xlat scas sarb jmp pushf outsb cmp jns lock jge lock inc push icebp data16 in leave or push std pop cmpsl dec xchg pop test mov xchg cs mov jge sbb and add mov cltd mov add lock (bad) pop pop xchg jge mov mov push nop adc inc dec dec mov jle pusha popl lods xchg mov and sub jne pop dec adc rcr adc mov lods mov add mov inc repnz and int3 (bad) or push lds enter in mov (bad) jge mov push outsl push xchg add clc decl stos (bad) xor push xchg into push xchg mov mov movsb outsl notb mov pop loopne fnstenv (bad) call data16 mov cld dec jl cmpsl fs mulb lret nop push cld mov in jg ficom lock clc dec mov mov pop or jecxz pop sbb dec and bound pop jg and xor (bad) fmul movsb or push jno std add mov test jmp push add push rcr xor aaa jo lahf pop mov loope data16 sub pop sahf clc add scas sub sbb (bad) pop imul push mov mov aas stos mov mov pop sar pop inc push jge sub lods jmp popa push icebp mov data16 xlat xor ja adcl mov mov push incb pop dec adc stc xor dec mov imulb outsl and inc sahf popf idiv cmc pop (bad) jne cmp push mov pushf or cmp xchg or clc add (bad) arpl xchg into scas rorb and lds fimul std mov push jne inc inc mov (bad) mov and sbb scas pop cmp test pop loopne scas imul rol subb loop lock lock mov repnz shrb dec clc and sahf (bad) insl data16 jge call jg pusha je and and xor leave sbbl cli jne push movsl aam ficoml jge xor add fadd loope decl pop pop shll loope pop or sub repnz pop mov int inc xorl fbstp dec mov pop daa push lahf xchg (bad) sti stos int incl (bad) mov pop xor cmpsl ds push cmp xchg jge popa repnz repz mov or push jae (bad) std jmp mov (bad) fisttp pop jb push inc arpl std sar das daa dec movsl push pmulhuw scas push stos int and icebp fwait lret enter or pop hlt and lods and inc jb fistpl test inc imul pop lods push fcmovnu (bad) xchg push jg (bad) (bad) push sub mov adc mov test (bad) sub mov out into movsb add rcr inc (bad) ja jg xchg outsb nop pop or test mov jne loope xchg ljmp inc addr16 out mov adc outsb xor std push std jg icebp inc xlat stos inc stos fsubrl add mov jmp pop pop out inc push mov pop push popa sarl lds sbb sbb (bad) (bad) icebp add sbb xchg (bad) mov ror xor (bad) hlt mov sbbb xchg in iret dec fdiv xchg jnp lods jge inc lahf out (bad) gs and ljmp jmp or xor add mov (bad) cmc jns adc sbbb and lret and loope das xor sbb (bad) in aas cld call inc (bad) fimull dec push stos dec dec sbb sti iret pop cltd jb mov or lock lods xor lcall fistpl inc mov add cltd sub outsl push lahf es mov mov adcl rcll out xchg out jecxz in leave call aas dec lahf in sbb (bad) incl lahf mov mov sbb jne cmp mov mov add icebp in (bad) cmp out xchg pop int dec xchg movsl cmp sub push mov xor cmp xchg rclb jb (bad) ljmp and sbb mov dec scas popf or cmp sub jmp add jge nop mov xchg repnz push in mov adc insb xor inc (bad) lret (bad) ds les push clc mov add mov mov jp pusha mov (bad) mov mov and push mov mov incl lcall xchg les and icebp push lret xor incl cld push or pop lock dec data16 into scas out jbe push xchg fimul push add (bad) (bad) jne ror xchg push inc sarb popa out mov jo jge and pop cmp pop sub bound sub sti xor (bad) jg pop mov xchg cmpsl dec lds out dec scas fwait icebp in (bad) fdivrs mov lds jge xchg test repz cli decl and xor mov and scas bound aam ret movsl int dec negl xor dec pop ja push incl decl jb insl pop pop loopne insl cmp mov pop mov or mov cli sahf xor pushf dec inc jb sub dec xchg fs sub jmp pop mov sbb arpl inc adcl scas cld cmp cmp inc (bad) push decl insl inc stos rdpmc outsb imul fnsave loope jbe mov mov fwait ret dec ja cmc or mov sbb movsb (bad) stc pop or dec ds das in cwtl jb xor dec cld stos adc outsl jb popf mov fisubl lcall xchg add (bad) jne cmp (bad) lock lahf jle lock push xchg push sub mov test sarl xorb pop call xchg inc lret cs gs (bad) mov jecxz and jb int arpl notl clc jmp lahf mov mov and int3 mov jg fbstp dec xchg jl inc xor adc sarl adc sub mov inc jmp jnp ror jge lret lret mov jg adc (bad) ss lods cmp inc shl pop js add xor inc aaa popf pop mov jg xchg imul jns dec add xchg mov idiv out mov pusha cltd idivl sar add xchg ss arpl (bad) push neg (bad) ja mov fdivrl fisttpll stos push imul lods imul sub mov push pop add and nop pop imul scas inc inc addr16 adc xchg loop jmp sub maskmovq mov scas pop mov xlat add mov xchg mul jne movsb negb imull rep (bad) neg negl pop cmp aam pusha movb xchg (bad) (bad) mov jae inc gs movsb popf and lahf test add and dec push xchg inc adc ret jge (bad) jg sbb testb out rol inc imul outsl (bad) (bad) inc subl push add push call idivl and jle dec andl es jg fs mov mov mov mov mov out inc jmp xor mov mov sub inc lds stos loope mov test add mov dec std fimul push cld jg push mov add inc mov lahf pop xchg mov test jge dec popa sbbl mov mov inc stos in (bad) cld jg (bad) and aad inc xlat mov daa test int3 arpl lods fnsave leave add jbe fs mov cmpsb jo mov cltd cmpsb outsb shrb push aaa femms jle jl dec inc and shlb popf jecxz and xor xchg mov lods insb and cmpsb movsb jl loope mov or (bad) jmp sbb inc jg pop lcall or lcall lods decl jge cld repz mov lds lahf idivl inc rcrb data16 jmp or mov sahf loopne shrl push jge std (bad) out ldmxcsr mov cmp (bad) cld loope mov cld lcall or pusha mov lds adc pop ljmp xchg mov jge add popa add fimull hlt push sahf stos cld push movsb and aas mov dec jge jp stos aad or and inc inc mov pop mov mov loop jge mov mov loope jp cltd sub push (bad) decl loopne add pop cmp xchg mov mov push fistpll je sub cmc icebp lock ficom inc aas add push jge clc (bad) mov jmp or outsb push mov insb leave sbb jb (bad) pop ret push (bad) lcall lds xor inc mov inc fidivrl mov xor lcall push cld jle (bad) mov cmpl (bad) pop push clc fmul lret cmp fcomps movsl jo pop loope test ss mov inc fs adcb ret (bad) pushl aad pushf add cmp scas sbbl mov daa jp ret sub mov push and or (bad) xchg arpl in out mov jl add jge xchg pop adc jp aaa jnp sti pop and mov ret cmpsl push (bad) push enter add (bad) mov (bad) test rclb mov jge das add addr16 sbb pop aaa arpl xor das jmp dec push or movsb sub mov inc (bad) or xchg int3 jbe dec test push stc lds iret mov pop dec bound mov mov lods push mov mov dec pop ret inc shr or sbb test adc push jge mov std xchg rorb mov and push daa cltd (bad) cmp jg fnstenv hlt lods cmpl xchg pop mov push or add inc std inc sbb fisttpl or ljmp push and xor sarl jge out or fldt and cwtl add addr16 es lock push test and into jle push mov sbb pop cmp mov incl lahf push jp push or movsb out sbbl adc jp xchg jnp pop ret adc inc clc jmp jecxz lock inc cwtl je mov jge in inc int jle pop dec jge xchg clc push fdivl mov (bad) push sbb pop sahf mull inc sahf mov scas push jl mov scas iret jge (bad) push pop pusha test mov (bad) xchg mov loop fnstsw lea (bad) in scas inc push push bnd jl int3 roll xchg and aad mov jbe imul js insl push push repz pusha xor sub jb jbe stos jge cld xlat lahf (bad) dec push sub (bad) pushf push cmp cmc jne cmpsb dec hlt sub inc (bad) jb loop repnz lcall scas jbe flds loop mov cmp fs add lods mov popl mov paddd das mov test mov subb push arpl push lods (bad) push pop into pop sub jmp das mov int inc push (bad) ficomp add cmp imul popl das adc adc push imul sub rcrb push xchg aaa jl jmp push call jne dec cmc out addr16 cmp and cltd shrl pop jmp mov ljmp mov repnz jne dec sub lock mov or popa mov movsb jno aaa (bad) lock mov inc xchg push (bad) push mov jle (bad) in test fisubr inc or bnd decb jb cs shrb dec fadds xor mov jge add enter decl and add je scas pusha aas pop sbb jbe mov imul arpl inc and mov scas (bad) incb dec mov push mov or xchg aam ret jp fistpl stos jge xor sbb pop lahf jne out enter cmp fisub xor push and insb aad sub lcall lret insb es or ficoml out (bad) test mov mov clc sar rorb add dec adc pop addr16 ds xchg push cmc mov loope dec (bad) popa cmp (bad) loopne popf mov out imul add cmp int3 sub mov idivl (bad) in mov and aad and push push (bad) pusha inc dec mov dec iret add mov cli into ror (bad) (bad) (bad) cmp test iret rcrb cmp sub pop movsb sub stos fcmovbe xchg outsl (bad) cmp or add jb ret imul jne es pushl in sbb inc xchg xor pop stos (bad) lock add xchg int mov push mov (bad) mov mov cmp add dec cmp (bad) call and lea movsb ret cmp cld mov lock mov xchg xor sub cltd loopne nop mov loopne sti add mov mov mov jne jmp ljmp lcall fdiv pop push movsb xor inc daa inc lahf pushf mov push inc adc add cmpsb or ficompl mov (bad) dec scas pop lfs push mov jo mov mov dec cmc or sbb lret adc enter mov sbbb (bad) cld fstl push test and or test dec xchg xchg (bad) divb test aam icebp movsb xor sarl repnz adc jae lret add in pop icebp leave imul pushl jp out imul mov or (bad) cmp push push divb jo add cmp cmc aad mov mov out mov mov jnp lea dec mov push dec and sub add jp inc stos call mov push ds lcall rcr (bad) dec ja negl pop cltd xor mov mov popa pop cmpsb vpshaq insb xchg cs jo pop (bad) mov inc jge ja fnsetpm(287 push data16 sub fidivrl push (bad) stc in or stos and sbb insl jl shrb sbb stos pop xchg loopne dec adc std jnp out shrl test push divl test popl imul pusha and data16 push pop jb xor jne in sub cmp xchg dec mov dec sbb inc pop xor mov andb pop and cmpsb dec loopne (bad) pushl std sbb ffree cmpsl pushl sbb inc popa pop mov stos cmc adc pushl sub push lahf xchg cmp repz out cmp es (bad) idiv jg sbb out (bad) jne movsl iret jge cmp mov or mov daa scas mov arpl jb rcr xchg addr16 fmuls xor mov out (bad) adc stc adc cli sahf leave leave sub repnz enter jb fs orl pop notb nop dec mov das clc mov jge jnp ret sub outsb and ret daa lods mov lcall lcall test pop xchg sub jle push cmp incl out lcall jmp addr16 push xchg fildll ret or or dec (bad) pushf aas clc jg mov xor push gs mov in adc mov decl sub dec xchg outsb and jge in pop xor xor mov mov mov add rolb jg loopne pop popf cmp mov xchg pop les and incl and test (bad) das adc jl pop and xchg loopne adc aas or dec sarb (bad) mov mov add inc adc loope adc (bad) (bad) incl jb xchg pushl test xor call jo push xlat mov add cltd mov out sbb aas mov test mov or loop stos das das mov imul pushl sbb (bad) mov inc adc andl sub test sbb lahf sar mul or ret nop dec mov in das movsb cmp cli add rep mov push int cmp arpl adc cmp sti outsl push mov stc test and fisttpll dec jge inc (bad) incl pushl and xchg sbb stc sbb scas mov sbb (bad) (bad) incl movsb cmp pop out mov push dec pop dec inc xlat loopne insb out (bad) (bad) call or outsl js (bad) or (bad) lret sub incl fucomi pop ror (bad) ficomp out mov (bad) jg add ret add or imull push mov and and sbb xor mov and repnz add negl dec xor punpckldq dec cmpsl gs jge jge or int lret jecxz and mov loope incl lcall jl jns std or push mov lret cmc adc divl test hlt cmp dec repnz sbb fbld and cltd xor push fimull in dec fsubl sbb mov daa (bad) jmp jg repnz test sub mov sub negb (bad) (bad) ljmp xor mov je push jno fstl ret or insl mov jo mov into or jnp jg repz pop dec adc or sbb test mov hlt mov or xor cli push jns idivb int3 xor add (bad) mov mov out (bad) cmp nop pop xchg inc push push mov jecxz push push or push push (bad) fwait and popf ljmp testl dec test in sub cmp shl push into and hlt movsl push adc ds mov lahf jge clc imul (bad) adc jns jmp adc dec dec fsubrs xlat dec stos pop mov out push test lods aas cli fnstsw sbb push xor pop gs jno cmpsb pop mov out out imull mov mov rcrl (bad) loope outsl lock int dec and push bound repz mov xchg cwtl lret or out in cld idiv sub jo rcll rorb cmp jno jne dec ds pop (bad) mov mov loope cmp lock dec (bad) popa rcl loopne jge mov xchg xchg pop jo jbe pop sub push push cmpsb mov dec dec push sahf xchg cld mov mov sub imulb cmp mov sahf repnz xlat test call rcrl shl cmp push clc into or in push jge and test and lret add div out xor push jp and test in stos les inc push jb lds nop mov xchg mov arpl (bad) jnp jmp xchg xchg cmpsl loope jg insl push mov repnz push pop movsl mov repnz push int ss sbb fsubrl movsl js sub jbe push cs push sti mov icebp loop mov test pop iret and outsl hlt mov mov mov roll jmp bound fbstp mov or jge loop into incl (bad) or mov pusha cmp sbb in cld inc fistl xor cmp mov sub xor push or push out cs lods sarb std popa vpunpcklbw push mov add mov or add stos push popa bound pop cs mov outsb idiv mov lcall addr16 cmp (bad) cmp fs sub stc (bad) pop inc jmp rcrl loopne insb hlt (bad) inc (bad) xor and stos add sbb mov ss jge (bad) mov and jnp lods adc inc gs push add pushf lcall push insb fstpt adc mov loop and xor arpl lcall loopne loop and daa pop sub inc int cmp leave imul mov es lock sub ja sahf xor fidivl jns mov mov cld (bad) (bad) and jne (bad) loope aas xor push ljmp adc mov fucomi xor enter nop cmp ljmp cmp lret or stos push enter (bad) xchg xchg sub or rorb imul jg sub mov pop mov lds repnz jp ret (bad) inc inc icebp lcall add or inc fisubrl push (bad) lcall enter xor sub jmp mov xchg inc push testb cs mov cmp sbb cld fsubs fcos call sbb out (bad) jp (bad) ficoml or pop jge decl inc or pop out into mov mov popf aaa add das mov mov cmpsl stos jmp or cmc cmovne inc xor jl mov or inc dec inc cli mov loop (bad) dec insb mov lea (bad) cmp ljmp and xor shrl pop and push out sar jbe imul mov lods (bad) cmp and push bound mov push scas pop aam inc orl mov add (bad) mov bound gs call fdivrl and sub cmp (bad) (bad) cli aaa jns loopne xchg lcall inc int dec sbb loopne pop sti xchg and mov call pop ljmp adc pop jle dec (bad) or add cmp loopne clc fcmovnu sbb imul jbe dec xchg scas in jnp bound int3 push das enter aad icebp jecxz ss hlt cwtl pop (bad) jle pop pop and pop xor in loop add pop call js imul les cmpsl jg loopne lds fldt pop clc in das push xor (bad) dec lret fldpi fwait out jmp neg xchg (bad) jne pop cli xchg das xor out sarb pop lock test dec adc js and mov and (bad) pushl jmp (bad) jmp popa popf fdivs cltd repz (bad) shrb movsl das jnp gs adc out jg inc cld dec lcall push (bad) call and daa stos sbb jge add loopne push dec push jmp test cmp es (bad) mov pop hlt gs push (bad) pop adc (bad) decl cs cmpsl test cmpsl and push shl movsl sar mov daa (bad) cmpsl dec xchg xchg into xchg pop jl xchg sub and stc imul and js jge push lods clc mov jle inc stos lcall pop dec clc fstps fisttpl mov (bad) ficompl add incl das lret (bad) xor xor (bad) (bad) (bad) (bad) std sbb inc mov mov movsb sbb enter mov lret das pop xchg mov inc (bad) (bad) (bad) jle push es aas pop loop movsl lods and adc std add mov mov std xor clc mov adc divb xor push iret add mov push fs add test iret inc inc mov adc cli loope ret and scas push (bad) jb fist inc adc rcl pop and (bad) (bad) call add xchg push or roll into rcrb ds daa test sub cmpsl pushl push sbb and mov (bad) lcall mov mov insb cmp mov add je out icebp and cmpsl inc dec mov sti leave jg mov ret xchg and and mov (bad) (bad) ljmp or sbbl mov inc addl cmp ret mov push mov push xlat lea pop aam push mov xor jb repnz test mov out outsl jge nop or lods out mov addr16 xchg dec dec adc xchg ss faddl cmpb aad inc push mov outsb lods add pop loopne cmpsb pop mov sti stos sbb pop popa test and stos lea popf shl loopne inc repnz sbb adc adc lds lahf fdivrp (bad) mov xchg lret or mov jnp and lods inc inc leave pop inc or aas xor inc out inc out mov lea pop sti or fdivl mov (bad) (bad) (bad) lcall loope ds xchg or sahf xchg jns xchg push mov loop loop add cmpb jmp test jnp loop mov psubw inc mov lds and inc scas pop xchg jbe jno sub add pop and dec les test jnp clc sahf inc mov fs xchg pop fyl2x insl pop (bad) (bad) cmp inc jg add or mov mov xchg mov leavew sbb pop sahf push (bad) lods xchg imul fistpll lock cmp sub decl or pop mov and (bad) (bad) ljmp insb icebp lods sub xchg mov mov adc jbe loopne inc cld pushl rcrb and inc lcall (bad) inc fsubs xchg lock ffreep dec (bad) xchg rcll inc cmc dec ds repnz jmp add pop mov lods in loopne jg pop out xor dec movsb push mov jl pop sahf sub inc fidivr shlb shlb inc shlb add ja iret mov adc mov pop inc (bad) gs fisub loopne fwait (bad) (bad) mov shlb (bad) mov pop inc int add (bad) popa inc rclb push dec loope push call fstps mov incl (bad) loop (bad) add or mov push push cli or jb push negl and std outsl jp das mov mov aam jl stos sub mov loope stos xchg mulb pushf push cmc loopne or dec adc mov nop lret stos xor bound ljmp (bad) dec loop out lcall ds mov stos test mov adc fbstp fimul jb push or (bad) pop pop push xchg pop jl (bad) xlat mov cbtw je sub inc adc add (bad) decl fidivl add or mov mov sub sarb std scas sar mov or dec scas lods xor (bad) inc jmp pop (bad) aas pusha stc clc xor mov repnz mov cmp aad mov neg negb ret or std outsl (bad) ja daa ja ret imul sbb cmp int test push mov jecxz,pn mov idivb mov in into bound jbe ror mov inc mov jp es loopne scas out lods or fwait loop addr16 sub push hlt dec fwait cwtl jecxz push fisub or mov or mov jg mov pop enter (bad) scas arpl pop push (bad) dec push sti std inc xor sbb adc cmp popa mov icebp inc int3 add cltd inc jge sti (bad) or cmc test dec loop loope mov stc jp je push into imul mov cmpsb cwtl add jb xchg mov (bad) cld test sbb out and cli cmpsb outsl push push and push out das mov pop push testb jmp sub outsl (bad) cmpsl or daa or mov jno (bad) jmp cmp inc mov adc mov cmpsl xchg mov addr16 or sub std repz aaa xor lods loope push sbb dec dec jecxz (bad) fbstp mov mov decl iret out xor call mov add (bad) jle xchg es pop push xchg and lods repz sub cmp mov test ficomp push daa pop fwait sahf out dec ljmp mov js mov movsl std (bad) push push aas sti jg das cli push into outsb in popa xor inc jge lods (bad) xor pop lock cmp stos push fwait jg sbb adc scas hlt loope push pop jp rol aaa cld mov dec sbb scas loope (bad) imul sahf and pushf inc fldcw xchg sub pop jge dec lea or sbb inc cli fwait pop (bad) add mov lods and aad xchg xchg mov dec or mov pop and dec cmpsl xlat mov jge mov add mov push jbe stc xor xchg push pop add or enter (bad) bound mov clc and xchg out cmpsl jp dec mov sbb inc pushl inc cs cld dec mov into loopne jle (bad) cmp fstl xchg cmpsb mov int pop mov out push fildll les lods mov pushf or sub pop pop addr16 mov loopne scas outsb inc loopne mov aaa mov mov and inc out roll ret shll pop roll xchg ja push int3 sbb push es inc xchg pop out jmp aas inc stc test outsl fisub jle cmpsl pushf jge (bad) cli inc jbe imul cs (bad) push test shrb fildll mov dec mov jmp push dec fmuls sahf sbb pop movsl int mov insb dec aaa lahf addl jp dec pop fcoms push iret fwait push add and cmpsl adc or lcall push pop and bound jmp nop hlt mov mov cwtl (bad) scas and aaa sub pusha jmp arpl inc adc push adc adc gs sbb push fistpll ljmp loop pop jge or push sti mov mov push mov (bad) fbstp clc pushf mov xor sbb (bad) shlb test xor mulb mov es pop lock jnp jmp or enter loopne sub lock cli (bad) repz pop sbb mov mov xor clc inc xchg push stc data16 fs mov mov sub ljmp lock incl xchg rcrb aas dec or adc lods add pop cmp jge dec jo (bad) mov xchg or mov cltd adc incl ret cmp cmpsb cmpsb loopne add pop xlat test cmp lock xor push mov ja js lret adc or pop mov orb data16 aad mov pop mov sahf xchg daa and sub sbb aas ret fnstsw xchg ror or cmp lcall mulb sahf cmp into std insl mov outsl adc and std jmp cmp add repnz xor das sbb and mov (bad) nop addl mov popa into imul mov adcl push sti loope pop sub loopne jle (bad) push data16 (bad) push ret nop and loopne xor fwait cmp js sbb mov add repz les leave sbb jo cwtl lods cli and es push fwait pop xchg or add iret xchg inc cmp jl mov (bad) and mov adc mov dec js test ds hlt fwait int out out lea mov inc mov or (bad) jne pop les ljmp mov (bad) ss enter iret mov sbb sbb sub sub xchg or push clc mov jge fadd and pop dec (bad) xchg out add call ds out push jp and inc in xor div pop inc int3 sbb mov or daa loop fstps mov pop push imul loopne xor repz lods jb dec cld pop loop gs fcomps lds push loope jb mov cltd lock pop adc icebp outsl (bad) test dec sbb (bad) pop pop or lahf and jg jbe les cld or xor das fcmovu lea jne into loope stc lods shll shrb ret lcall sbb scas stos sbb decl sbb int3 and and ja leave movsb mov jp xchg add and pop adc arpl pop cmc or movsb mov mul rolb adc (bad) incl loopne adc popf jl ljmp aam add dec repz imul (bad) scas and scas mov push pop jle ds mov cli repnz mov dec orb js jg sub mov mov (bad) mov fisttpll scas (bad) icebp ja subl cmp inc jae push mov popf pop lret add sbb jle cmp lcall inc jmp mov je xchg es mov mov icebp loop imul inc repnz inc sbb adc popa push sub lcall and (bad) into push mov cmp rcll clc add into xchg ja enter mov and xchg adc inc fist pop sub mov dec xlat (bad) and add scas sub (bad) inc insb mov notb in shrb mov aas movsb (bad) pmaxsw push add mov and out mov je mov cld aas sub jo scas cmp int xchg in pop sbb mov xchg mov mov push push or cs rorb sbb jg adc add xadd adc pop sub data16 push repnz stos outsw cli stos in ss mov mov hlt loope in cmpsb lock (bad) lds jo repz ljmp into mov icebp dec ds or popa xchg std inc jns pop inc mov loop cmpsl xor fildll push nop/reserved ret out pop lock cli mov arpl jb add fistp mov (bad) loopne mov add movsb xlat cli cld jecxz push mov sub das stos jg (bad) jge mov ret inc scas (bad) jo jecxz inc mov es xor aam push out and hlt ljmp pop (bad) mov clc mov pop push sub scas repnz testl mov mov jo dec fisubr xchg jne repz (bad) pop int3 and enter pop mov jb xor and repz mov adc fsubr dec or pop test out inc jmp ds cmp push mov inc data16 (bad) mov stc (bad) dec dec scas push or cld out outsl movl pushf sar enter pop jge inc adc out sbb call or into adc sbb and testl into mov scas add and sub xchg clc or (bad) dec jg call jge mov push adc lods xor pop push fwait jmp sub inc mov loopne outsb fwait jle add test adc mov and mov mov cmp (bad) ficom hlt pop out fisub pop pop mov mov cmp push push in or mov sbb cmpb jecxz outsb xchg mov mov lret loope jmp arpl pop lods decb or nop mov (bad) jg stos mov xor lcall inc lods or repnz jecxz xchg ljmp fiaddl pop pop gs mov dec push imul fimul int xchg jmp call sub fldenv mulb (bad) mov mov cmp test dec rorl cmc push pop inc mov mov inc jbe jge add mov orl ljmp jl aaa sub pop out sbb jb pop cmp push push xchg jle inc (bad) loope adc popa mov mov mov dec mov test out not imulb pop lds cmp lcall iret jle push mov hlt popa or mov add shrb pop loopne or iret or movsb rcrl add outsb inc mov (bad) mov mov mov js sti xor mov jno data16 fisttpll lahf stos into xchg fs cli outsl les lea xchg cmpsb dec sbb sub pop aad arpl inc or cmp in add pop inc cmp out rorb mov sti hlt loopne inc sti push push hlt jne jmp leave jb xlat push ret inc adc sub sbb fdivr inc xchg cld in adc mov xorb sti stos (bad) repz inc push mov repz xlat xchg js jge aaa stos call incl icebp push xlat mov adc pop sub inc cmp or jg jle popf cmpsl loop leave imul les (bad) sbb mov rolb repnz test inc fwait push sbb out lea and pop jmp mov cmp jl jecxz fcomps sub pushf fisttpll movsb pop test xlat es xchg es mov imul enter ljmp jg std frstor pop cmc test jmp cmp mov outsl jb test xchg mov das test (bad) dec loopne sub cmpsl test fs mov xor or (bad) cmp insb add adc jmp test bound ljmp mov ja xchg xor ret mov decb push ds cmp mov std xor mov pop fs in jbe in jge ret adc (bad) scas mov add in push push adc mov mov lock xchg push mov or out decb outsl mov pop xor and adc ds int xor repz scas xchg test (bad) sbb stos jge lods fwait push loop orb push into sub jge mov call data16 inc push inc hlt (bad) out sbb popa fcmovnb and movsb loopne lods mov push adc fcomps dec jae cmp adc es xor cmp jo mov test adc adc xor dec test mov and mov orb shrb jge and add mov xor sahf mov cmp cs mov daa ljmp or out xlat mov mov mov nop push leave rcl les loopne dec lods xchg sbb and fisttpl daa mov imul ret pop sub loopne add bound fistp cmpsl mov lock mov notb (bad) jb addr16 jg adc ret add repnz pusha sub dec mov push sbb mov mov call cmp scas bound cmc inc notb data16 lret mov nop ret repnz mov (bad) mov std xchg pop cmc cmp push (bad) mov lcall fadds cmpb mov adc bound (bad) out jge pop mov test cwtl (bad) sbb arpl mov scas inc jp jo into mov jne add (bad) jp mov mov xor sahf (bad) cmp pop cltd inc aaa or inc xchg fwait jbe push lret push js je clc add add dec scas mov add cmp pop xchg xchg rorb cmp lcall sbbl jnp lea sub sub cmp pop je andb jb mov outsb dec mov pop clc rorb and fbld add arpl add (bad) rcrb cmp xchg fcom dec inc xchg lock adc adc cmpsb data16 xchg adc movsb popa (bad) mov jg pop dec (bad) decl or inc xor sbb cld out adc mov das clc inc bound and xchg pop pop inc jbe pop inc mov call movsl scas icebp pop nop cmpsb inc inc loopne std mov dec push dec dec mov push mov imul sarl ljmp lcall fstps out dec rolb jg fbld dec and sahf dec mov mov adc call ljmp push repnz test test mov jmp jae je jo sahf and rcll imul pop xor fsts icebp mov pop inc adc fiaddl mov ljmp cmp sub mov (bad) mov fist inc iret insl inc pop (bad) push jb and mov mov iret loope iret push hlt sahf cmc lret cmpsb inc sub jne (bad) into ret or enter push sbb hlt loop adc (bad) stos imul adc imul cmpsb lods push clc aas push mov mov stc xor pushl push mov outsb mov and cmc push loope mov fisub adc (bad) movsb mov adc fisttp je or xchg ljmp or or into add sub rolb xlat dec test or jg lock arpl mov (bad) jl int xor push out lea and (bad) adc dec (bad) repz sbb xchg mov fistpl jp inc and sbb inc sarl xor pop mov fstps inc adc hlt cmp data16 adc inc xchg or mov inc push inc and lock out mov lock movsl add add xor movsb xor ljmp insb push xchg add mov dec stos inc sbb (bad) sub xchg ds lock lods jmp jmp out mov jno sahf lea sbb mov mov pop in mov jb ss pop cld xchg dec lods dec cmp mov or mov sbb or fwait mov nop aad sahf add push mov js fs stos jge and add pop jbe sub mov subb mov je popa lods test inc pop sub push mov pop mov clc call ret and xchg sbb add aas adc (bad) jp mov repnz mov adc leave or push arpl aaa cmp bound mov jg aam dec lcall inc popa xchg call fistpll xor (bad) aam gs pop mov int3 pop orl (bad) xor mov cmp hlt mov mov add scas xchg pop jle xor icebp inc loopne (bad) loopne arpl add jb shll inc das cmp jge pushl xlat sbb sbbl hlt scas jbe int jp add mov push into push and inc push inc fisubr and jg dec xchg jle sub xor fsub pop out mov add test add mov adc outsl rolb std adc out jecxz mov (bad) js daa and sub add scas inc mov call loope xchg jecxz (bad) fistp in loopne rcr pop out xor daa fwait xor add divb xor inc shrl sbb hlt cmc xor xchg sarb mov (bad) mov stos mov leave icebp push stos (bad) int aam xor shrl fwait leave arpl scas data16 ja pop ret mov cwtl pop loopne loop push das xor popf stc or push (bad) mov dec enter jmp add sub cmc add fsub cmpsl and and fcmovne dec push stos sbb jecxz mov jp push xchg ja lods cmpsb pop jnp mov adc insb cmc or (bad) mov jecxz inc (bad) or mov imul fnop (bad) mov mov outsb fildl cmpsb inc cmpsl arpl cs sbb dec bound in (bad) lcall rorb loop pop (bad) decl or mov cmp dec xchg mov and push xchg (bad) (bad) dec incl dec insb cmp cmp xchg (bad) into cs lods fbld loope dec inc sbb insb cmp out outsb or cli lods mov dec pop and stos hlt (bad) cltd test push mov sbb sub dec jne or arpl fdivrl sti pusha xchg add cmpsb pop rclb adc cmp (bad) ljmp push dec sbb ret mov jge or or ret arpl lods push cmpsb or xor or lods jae push enter cld cmp mov add movsl std sti lret shll mov dec pop (bad) or loope cmp xor or cmp mov lahf push push sub repnz movsl jne adc call cmp idiv lea xor xchg jge test enter mov std push (bad) cmp dec test call pusha clc outsb (bad) sub mov out and mov xchg decl pusha daa les repnz xlat test mov sub scas (bad) outsl push add mov ret push adc xor jle xchg (bad) loopne stos jg lret test nop push es fist mov es dec test mov and imul dec sti push (bad) push mov mov repz cld in js push add cli aaa movb ret mov jb inc insb (bad) ljmp xor lcall popf stos out dec idiv fldcw mov (bad) push mov push daa bswap arpl jge sub out clc out push fcompl data16 adc stc data16 roll mov jp es daa sbb push add inc into jns ja pop test jecxz adc aad icebp sahf lods mov pop mov pop adc lcall pop pop add mov jge push rcrl add xchg imul lretw mov rolb sub mov push (bad) cli (bad) cmp jno push and out pop imul repnz pop dec addr16 scas enter adc jno dec scas loopne (bad) stos rol adc inc adc (bad) ja mov pop daa push pop movsl stc mov mov jg ljmp gs push push bound mov jle adc inc mov lock push and add add or xchg pop fildll test push pusha mov cmp mov (bad) decl mov scas cmpsb xor sub stc jne sbb inc adc (bad) (bad) lcall out mov pop mov jmp test jns adc std xcrypt-ofb cmpsl sub decl jg (bad) xor lds ret dec lds into fwait mov (bad) incl icebp gs cmc xor mov push loop cmc (bad) or mov xor incl and dec inc xor (bad) dec xlat or and xchg dec pop sbb jne sbb hlt pop pusha push clc dec cmpsb sti mov in incb ss out inc jl xor fistp push sub clc mov into inc lods inc popf icebp testl cmpsl add mov adc repnz mov clc pop add or (bad) sbb in outsl hlt fwait aam adc aaa xchg mov inc mov pushf ds jg lret jge mov dec add shrl push mov (bad) incl sbb test pop add xchg icebp jge rol mov iret mov mov push add inc (bad) push arpl adc (bad) sbb add repnz mov xchg jl xchg jb scas adc lret fdivs add mov or incl jb out and xchg int3 pop jae mov call sbb (bad) cmc (bad) into mov fwait and test cld (bad) incl test dec xor in sub adc fwait arpl cmp jg iret jmp pop cmpsl neg fdivs mov inc dec out out push sbb divl (bad) je dec fmull dec mov cmpsl or mov mov dec cli push or cmpsb push mov (bad) jb stos inc and decl or mov lret es js iret loope pop (bad) pushl mov mov adc mov test pushl fsub enter xchg les mov imul test scas sarl movsb decl and mov inc int3 mov or out adc imul ljmp int push sub sub jbe fs pop inc sarb xor aas push cmpsl lea dec ss sbb jecxz rol pushl pop (bad) hlt (bad) sbb pop imulb cwtl and stos adc outsl mov icebp inc mov inc call sub scas push test popa pop pop inc jl push (bad) (bad) mov and jbe pop pop cmpsb or loopne sarb loopne sub in loope pop push (bad) jg cltd xor xchg loopne xchg pop xorl daa and stc and cmpsb (bad) push pushl xchg mov add or push aas dec push idivl cltd repz pop xchg insl mov and push mov rcrl lods ffreep stos int3 jge std mov rcl mov fdivl loope data16 mov push pop inc test scas cli cmc mov test mov aam sarl mov (bad) arpl inc lcall repz (bad) adc dec ret test mov jl cmpsb or mov pop std loope xchg jecxz clc imulb loopne push fs movsl adc inc cs and addl cmp loope (bad) mov mov sahf movsb mov mov and jp push repnz in dec je les mov movsb (bad) test cli jecxz mov mov hlt call mov sub rcr cmpsl dec xor cmpsl sub push or add push (bad) jne loope fildl and push fs xchg lds xlat ret push push pop pop adc dec ss xchg dec out mov jle (bad) mov xchg mov int3 (bad) cltd lock test ret sub mov xor adc sbb or dec dec xor pop call std pop and push scas mov pop and or clc clc fwait adc add mov and push clc mov dec sbb mov outsl outsb dec (bad) mov adc jl pop cmc mov cmp push or inc iret lahf sbb ja adc pop fwait mov fwait jbe loope cmpsb incl cmpsl or sub fnstcw mov dec mov pop inc and jnp les xchg cmp inc add pop std leave lds ds pop pop mov jge pop inc sahf dec push movsb fisubrl ss fbld mov sub adc xor mov xchg or mov pushf iret xlat shrl pop xor (bad) out adc lahf scas mov mov test ljmp lcall cs adcl mov add enter (bad) data16 ja push and or mov data16 (bad) fdivrs std and cmpsl into mov or (bad) push popa sbb hlt out rorb mov icebp leave loopne cmp pop inc insl and sub jecxz in sub mov lcall jo inc mov add (bad) fstps in das dec cmpsl xchg rcrl fstpl jg xor mov loop fisub lcall icebp mov notb imul dec (bad) and orl lret std es xor loop in scas cmp stos into popf rcrb fucom pop sbb or inc int loope pop imul cmpsb sahf leave andl mov data16 dec std push mov pop std jmp mov push push ret add or xchg push push inc (bad) gs bound fildll js cmp aam in rorl mov (bad) in stos lock add loope fs ror (bad) or pop das jmp inc jo int3 mov bound or push mov ja pushl cmp and insl jns and imul pop cld and clc fsubs sbb stc and or add hlt xchg mov mov or daa hlt js loope inc ds addr16 pop pop bound rolb mov xchg lock mov out and cwtl cmp push clc push and dec popf cli aaa jge push movl or in movsb pop (bad) in fild incb push sub mov mov or imul and (bad) adc dec orb ja xchg lcall lock js xchg dec int3 (bad) jb test or xorb lea out negl add mov or lcall mov sub pop and mov js mov aas call inc mov pop and out div out insb push sbb nop dec daa mov and pop ljmp and popf push xlat std xchg jle push incl xchg mov push les dec sbb rorb stos in jge test dec movsl (bad) sbb or and cld (bad) jmp (bad) pop push adc pop das call mov out push add loope into (bad) rorb and push fisubr pop and and out lcall test pop push test lock cli xor call gs dec mov pop popa xor mov pop jmp test aas stos ljmp movb popf (bad) hlt incl xchg jo pop push cli mov mov lock jge add (bad) add loope call sbb jne out inc ljmp inc insb addl pushl imul xchg dec psraw inc loopne add je rorb ror lock mov xor ss fwait pusha xchg lods mov pop fsubrs outsb sbb shlb push mov and ljmp xchg enter xor fsubp push popa inc cmpsl (bad) clc fsubrs mov fsub cmpsl sbb pusha push je cmp ss pop and shrb xchg pop shrb stos repz mov pop jo,pn cmp mov call enter insl sbb call movsl pop (bad) xor clc sub inc cmpsb lds popf mov bound mull xchg sub subb mov mov xor frstor dec cld (bad) sbb mov into inc mov cld aas xchg das sarb fdivrs movl (bad) (bad) call dec xor lock lcall inc popf xor cmpsl lret (bad) (bad) call lods vpunpckldq iret icebp jns pop dec js ljmp push pushf dec dec xlat adc jge jg lret jp pop cltd xor sub mov dec adc std outsl clc push push and mov sub dec bound mov jl enter lods fild dec andb rcr lock (bad) push mov out clc lahf ret or mov inc inc and arpl test inc lock and push mov mov sub add or inc push xchg xor addr16 mov leave and sbb and xorb adc mov inc ret xchg hlt fwait adc jns hlt cmp jmp clc xchg fsubr sbb stos out pop pushf push lock add mov sbb adc pop cld pop lock jae int pop cld cld das xchg push jb jmp and push push pop jecxz test mov push adc pop inc jae ret or jo mov mov sbb mov cld (bad) test add fxtract test inc jbe subb leave movsl or mov jle in cld push in jge dec decb sbb out cmpsb mov mov jge ljmp jns clc data16 cltd repnz imul loopne (bad) jns mov and add push gs push mov arpl cli (bad) cli int in ret mov lods icebp cmpb push sbb rolb xlat and iret fsts (bad) in fistpll push pop iret fcomps dec push sahf xor jl add mov mov fwait loope insl (bad) (bad) lahf inc dec les loopne fsubs into js fdiv pop (bad) in cltd jecxz xchg cltd insl insb xchg mov mov call fistl enter fldcw mov clc movsl jo mov xor imul test sahf mov scas xchg fldcw jb je mov xchg lock sub call decb outsl xchg (bad) jb xchg jmp sbb cmpsb aaa cmp or push jge lock jbe and mov mov push adc adc ret ja aad xor enter out incl or cwtl cmp mov cmp pushl (bad) sbb mov pop push jge (bad) fadds mov mov inc xchg subl lods scas cmp push (bad) and push cld incl (bad) daa pop inc sahf xchg add or les push jb int popf addr16 sbb xchg insl jmp shrl cs or arpl xor popa inc push call pop mov or dec pop push adc dec sbb loop clc mov fscale cs inc dec lea mov push mov push mov mov sbb mov lods inc aas icebp outsl adc bound dec int xor fwait cs lods insl mov scas add pop jae sbb pop cld push sbb add jl xor xor clc add cmp xor loopne bound mov mov (bad) pop push cmp incb push dec leave fdivp rorb cmpsl add test lds jmp dec jp jge pusha in adc mov dec push mov imul and xchg dec stos (bad) jnp mov push enter sub shr bound xor imul std mov mov xchg test (bad) nop xchg shrb sbb inc imul dec ret mov mov ret add (bad) lcall out icebp ficomp mov loop jne mov rorl jg test jbe mov mov shrl je push and out test test popa mov sub jbe sbb or (bad) xor (bad) xchg fisubl out adc fldl test xor cmp cmp aaa loope (bad) ljmp sbb add lods mov mov add add sbb jg (bad) jbe dec push sub test xor stc mov fisttpl ljmp das rcl into cmp test call lcall loopne movsl pusha cmp (bad) jo sbb (bad) (bad) cmp mov pop sbb movsb add int3 mov je pop dec inc lcall das popf sub or add mov sub jmp popa jl cmp xor scas pop inc popa fnop xchg out add out lret test aam push cwtl loope out sub pop pop scas jno push mov add adc (bad) test fiadd sbb rorb jo or and push xor es fist mov fmull pop and movsb clc ftst and scas jge in inc mov out arpl rolb mov (bad) fisttp push loopne xor (bad) pop add les mov jge mov jmp sahf cmp arpl push xchg or adc sbb lods mov dec cmp jge mov decb inc aaa lcall pop cld mov and add ljmp dec fs cmp mov mov pop daa xchg shr mov and push sub fsubs ficompl mov (bad) loope bound and dec adc inc call dec jge je (bad) jecxz pop ficom or je ret incb push aas and out adc mov leave or testl and (bad) mov sbb shr into mov and sub mov jbe xor add (bad) push mov ret pushf or (bad) push stos mov ficomp in daa inc inc ret or mov adc cmpsl mov addl ficoml pushf negl push int3 add repz shlb out pop aas out add mov push ss add mov lret jg,pn (bad) mov mov fdivrs adc mov popf test (bad) push in adc inc mov (bad) pop mov mov cltd (bad) jle push gs pop pop xchg push mov mov js mov (bad) pushf pop adc adc adc aaa loopne jmp push mov jno ffreep dec inc aas sbb inc inc xchg icebp fidivr loope loope sbb jno iret pop (bad) mov insb sbb jns test cmpxchg add mov aam dec incl (bad) xchg cwtl mov inc ret ljmp cmp add jge imul (bad) inc das out popa fcomps pop shl div push xchg jns imul ds cmc push lods sbb jle ljmp loop hlt (bad) aas add sti sbb cli mov sbb aam pop push cmc scas pop push mov mov ret add xor scas cmp sub pop inc test aaa call sbb pop outsl in lods pop mov aaa push les jb mov repz dec ret jmp cwtl mov paddd adc daa push icebp and jp pushl push loope push push scas pop pop int es cmp lock mov mov loop inc jecxz xchg push dec jnp movsl and fisubl outsl (bad) fcomip push neg push mov jg (bad) jg mov (bad) mov adc ds dec adc pop pop fisubrl loop js insb lret jge inc add add mov xor (bad) (bad) aas push or (bad) push aas dec das aas push ja dec lret add pop add dec mov pop pop shrl and lds daa fwait loopne push and aam andb push popa xchg pop pop cmp inc ss jbe test cwtl sub add das mov lock pop dec adc cmp stc mov pop add jmp ljmp lret mov nop xchg loope push sbb cli inc fdivrl pop out pop dec outsl les sbb icebp incl iret and fldt mov add imul out add sahf push jo pop xor cmc jns dec shlb or jne outsl (bad) mov dec adc mov inc or test or push jne (bad) out and mov mov mov stc inc xor xchg dec out lahf ja lahf movsl paddd imul test sbb xor movsb xchg mov push jne cmc clc ret push jmp or push cmp out test pop mov jb lods push xor adc and jle add mov jmp loope sub add dec iret mov lock loopne js imul stos sbb push movsl nop loope dec cmp lods add rorb clc dec bound enter loop scas lods fwait cmp sahf rcrb data16 and ficomp and add out add enter adc das push pop mov cltd or aas push enter sub mov cmp les mov xchg les cmp (bad) cli jb sub lock mov test jbe (bad) stos jp push mov es mov popl cmpsb out lea out bound fildll sbb fwait (bad) mov inc pop sub test outsl stos pushf (bad) pop mov decl and push stos das pop dec popa xchg icebp inc insb sub popa mov vpmaxsw or dec inc xchg push jb push mov mov push mov adc push pop jmp fldenv test in cwtl jg dec push icebp in mov add hlt xor lcall inc lahf add inc imul mov fildll jbe int jb push xchg mov xchg in and in pop movsb test inc push mov popa movsb pushf adc cmpsb into cmpsb iret dec call into and aas call aas pop xchg sub ret dec aam add hlt rol inc es jecxz fidiv cli mov xchg stos adc mov jbe std sahf xchg jmp icebp push mov loop leave inc or (bad) dec loope push sub jae inc or or xor xchg test (bad) std outsl call sbbl pop int ss enter icebp mov jecxz jbe sar fisttpll push in mov xor addr16 mov xor mov jg pop cmp xchg sub pop and dec (bad) mov push sub int (bad) sbb push add and call cmp loope jae sub mov push sarb mov dec imul in add and mov adc loop insl stos push leave mov dec pusha push call jg mov mov loopne loopne xchg clc out mov or cmpsb jp fcmovnu cli cltd mov jbe shlb or pop (bad) decl stos (bad) pop out rolb cmpsb test cli mov test and sarb fild fcmovne lret mov mov scas (bad) (bad) out fwait in add ret pop mov xchg add inc push nop mov incl sbb or and or gs dec cwtl xlat inc push pop imul aaa test out ret dec rorb (bad) test mov rol lock (bad) mov and sub aad sarb or out push fisub (bad) (bad) mov scas je dec inc idivb push stos sbb add xor jle add jae adc (bad) xor stos push movsb insl inc lock pop mov sub push insl pop mov test stc ljmp (bad) fcomip adc out test jge push repnz jmp das jno push or or das sub dec and testl cld data16 pop jge dec aam cmp fiadd add mov gs aaa aaa test out sbb icebp loopne in fisub ds loopne outsb lock imull ljmp arpl add add inc lock clc inc shrb mov (bad) push clc fistp ds xchg cmp inc sub xchg push je int3 popa mov frstor mov popf gs (bad) fcoms jno in xchg lret and stos sbb cmpsb mov jge ret push xchg js sahf cmpsl sbb jb jg mov call out inc cmp ss lock repz mov loop mov jo cmpsb orb and jg ljmp mov inc push xor rol sbb and ret sub loope jae push gs fidivrl iret mov xchg enter or in xor cs sbb into lcall inc fdivs rolb mov sub icebp pop dec mov mov inc ss mov loope jl jmp int3 mov stos fbld mov out jge repnz lock pop inc jge add mov mov fnstcw arpl ss xchg jo push xchg and mov ret and jnp add cli pop mov bound push imul inc bound stos adc (bad) jb push lcall orl and sbb fisub nop out inc sahf out aaa ret (bad) mov pop lret adc cs push gs adc sbb push mov mov or enter ss repz in sbb cmp push (bad) jg popa xchg pop rcrl add loope xor clc and cld mov mov test adc call in dec xchg stos ds push das sub movsl dec int3 or push dec mulb lea out xor (bad) jg arpl or dec test test rep fstl or sbb jne iret scas mov xor sbb push mov jg cmp push jb aaa push sub pop inc loope mov outsb out mov push mov push (bad) mov shll jmp cmc das mov sbb in stos inc mov cmp stos pop pop pop xlat mov xor iret sbbl inc shrl jb pop out mov xorl sub jl test jl (bad) fistpll sbb pop inc push daa (bad) mov (bad) mov in out jo iret or rclb ret xchg mov push ja fisttp push (bad) lcall lret ss lea dec xor pop lods xor (bad) jp (bad) gs mov ljmp (bad) outsl sub in mov inc sub cli sub jbe dec bound sbb mov aas (bad) mov mov sub dec xchg (bad) cmpsb enter mov inc jl or add dec and mov mov mov in push in les add mov push nop ja mov dec pop inc push xchg hlt aad pop cld mov push jp cwtl fsubl fistl jno incb fisub mov lea pop inc and aaa or jg outsb dec out leave sub lock pop fidiv ja insl mov mov push (bad) jg enter pop test cmp fisttpl jmp (bad) lcall jp loop pop push jnp adcl xchg or mov pop add mov push xor cmc (bad) loop jl push arpl pushf mov lcall lret movsb mov cmc cmp and incl xchg dec xchg popf pop imul mov in inc les icebp pop lods loopne enter mov push hlt pop xor scas mov or ret mov iret (bad) addr16 sar push data16 js outsb jns jge jmp dec ljmp push fistpl add dec (bad) loop add loopne dec ds mov add incl mov push addr16 outsb jmp jo inc cmp std jb fs adc jp bound imul aaa stos push sub sbb lods cmpsb xor sbb sbb push bound push sti pop (bad) das inc roll fwait jge jle addr16 xchg push loopne (bad) jae loope bound mov push dec out (bad) (bad) out (bad) jge sbb sub mov adc imul mov mov ret sub jmp rorb sti cmc insb icebp dec outsl les rcrb notb lods icebp lret mov xor sub add rorb jmp pushl or repz lds cltd xchg add cmc cld call stos popf hlt pop dec stos (bad) cmpsb xchg inc (bad) sti dec push add pop (bad) mulb mov mov test out xor dec push inc mov fdivr fisubr sbb cs rcr js mov arpl lahf fsubp dec stos push test adc icebp scas xor out adc pop jnp and aaa cmp repz std notb mov pminub jg jl sbb je mov jl je inc pop (bad) and and sbb adc mov xor mov pop mov sub mov repz movsb inc xchg test enter sahf xchg xchg dec or fiadd inc jno inc xorl rorl jge in mov cmp test fstl lcall outsb xor mov jge push mov sahf jb cmp cmp decl dec mov in adc sbb mov jmp popa testb mov or gs arpl insb mov xchg mov insl lock arpl push cmp add loopne push add cmc pop dec mov sbb jl mov test push mov lods push fwait sbb outsb leave push divb push push inc mov stos inc adc scas adc pusha mov popf mov and sbb es mov int insl sbb dec mov std jmp or test adc cmc add cmp pop mov pop mov ficoml pop cmc add loop popf cltd (bad) cwtl mov mov jmp mov adc insl test adc cmp push dec mov dec sar pop test (bad) mov mov cmp push push loopne,pt cwtl je aaa adc push call test mov jle enter jge fstpl xor repz sahf add xor dec icebp jae push es push dec cmpsl inc mov mov sahf adc sahf in or xor test adc hlt (bad) jns pop imul repz or arpl add or cld jne sbb mov insb stos movsb push fsubrl dec ja movsl nopl repnz sub inc or mov cmp jge cmpl add push mov loope fs sbb mov xchg push mov mov push sub cs cmp jp ja loop xor mov mov scas data16 pop inc stos roll lock inc in xor notb repnz outsb loope sub imul icebp int lods loopne jg fstpt dec push js push dec cmp jge adc (bad) jp and adcl pop lock pop xor and push imulb ss sahf cwtl lea jl loop test or scas aaa dec ja dec jle pop jbe leave les icebp sub inc out inc js adc pop xor ror scas std xor push xchg (bad) pop mov and repnz cs (bad) jg xchg fisubrl outsl adc push cmp push in jne idivl in into popa loop jmp fcompl cmpsl add aas stos cltd push adc ja add sti in rcl pop and cli testb rcrb add cmp pusha cli or lret sbb push sbb adc inc ret dec sbb mov lods cli xchg ja add dec xchg roll adc xor mov idiv add xchg fnop xchg das or sub mov pusha add dec mov cli push sar dec test outsb hlt pop adc (bad) das mov movsb add or and pop jnp pop cmp pusha add sar or mov enter xadd daa push iret mov cmp sub and shrb add xchg out daa mov ljmp hlt inc int int3 sbb dec pop insb enter adc ret cmc in jmp (bad) hlt into fdivrs pop push push outsb sbb shr and ffreep scas sar insl inc (bad) gs lods clc sarb sahf dec (bad) data16 jb iret imul mov mov sbb sbb out fimul aaa lahf pop inc fbld pop pop das mov push or cmpsb (bad) push js push das jns lahf or in in push adc ret iret dec inc neg or ficomp out jbe jp push jl sub mov mov cli sti fldl mov pop cmp leave fldl add test (bad) in (bad) into xor and mov movb xchg cmp add (bad) scas (bad) sldt and mov scas inc or sbb sbb das jle scas (bad) xor imul (bad) add mov sub bound adc data16 in sbb lods out lods push mov (bad) jg mov icebp jmp fwait insl dec add cmc xor lods mov mov lahf mov sub pop and sbb aam div jl imul testl scas mov mov adc adc and out divl mov sub add cmp mov bound add mov inc out sub idivb lds in frstor pop into and pop xor add xchg jo (bad) arpl lods pop (bad) and les fdivr pushl jmp iret jbe mov adc inc popa push pop mov jb pop dec mov xor dec lods jge call fsubs sbb xor sub sbb jecxz (bad) sbb xor (bad) ljmp pop roll into mov stc mov jmp iret and bound adc or aam mov popl dec outsl mov adc or mov in ret decl ja cli ret dec mov (bad) lcall or mov mov daa cmpsb stc cmp stos sub mov cmp sti push mov lods jg sbb xchg lea movsl div mov (bad) inc mov dec mov ja jp or push (bad) mov insb xor jmp shlb pop idivl lahf insl dec push jge rorb dec out and les cmpsl lods xor adc mov test ret sbb sbb out xor cmp fistpl xor mov and add jp out and adc xor (bad) add lea call jle cs outsl push jp mov dec fdiv dec add push cli and divb or jno dec ds pop dec enter and outsl add (bad) push jo push mov jl and xor aaa dec mov stc pop sbb int3 sub mov push in out imul sbb (bad) std mov fild mov in xor inc sub sub add xlat mov (bad) call xchg clc xchg add and ror cmp mov mov mov loopne loopne or jne cmp dec mov pop iret dec xor pop and repz or mov xchg dec pop mov imul data16 cld aas add and jl frstor incl xor dec mov add mov loop lods in xlat lock jmp and push cs mov dec aad mov jmp jbe adcb loop lret in cmp inc mov pop call inc sub adc mov xchg mov pop mov test adc test dec mov push sub or std jp sbb (bad) cs das ret pushf in enter add push (bad) adc dec push into fldcw mov inc lret push mov fistp jnp pop test mov inc stos cmp sbb pop cmp sbb pop mov cmc loope pop mov icebp pop enter jge sahf (bad) fsubl add or pushf nop and mov push sub xchg pusha lcall lods add xchg imul xor jge ror out clc int lock xor test loop jne loope fisttpl outsl (bad) je mov enter push sbb mov inc sbb incl fnstcw jge lock adc cmpsl dec lret sbb pop rcl mov fsubs aas cmc inc push push (bad) leave fcmove dec jge pop inc bound das sub mov in adc mov fild mov sub pop xor cld xchg jg cmp sahf (bad) pop jno xor jge mov pop (bad) push or sub jb (bad) mov mov (bad) shrb arpl scas xchg imul test cmp test shrl bound mov addr16 es mov and adc jecxz jle in sarl jo aad (bad) idivl push inc mov push or std xorl or sbb repz pop les push sbb rcrb pop out pop in xchg pushf cwtl hlt aad and cmc adc es fimul push das or int rolb mov clc frstor or and subl leave mov and mov outsl loop,pn (bad) inc sub daa mov (bad) cli (bad) mov clc sub jbe push mov stc sbb mov adc fldt icebp cmp cmp mov in add jge stos push dec mov (bad) lock push xchg cmpsl fnsave sub test mov inc das adcb or mov out ret dec add inc les sub push (bad) aam addb dec jle adc aam mov mov xor jmp je mov ja pop sarl leave and xor mov cwtl xchg sbb (bad) ja xchg or sti push mov push push jge inc std sub cmpsb es add and (bad) bound (bad) jp dec inc fisubr sub js dec jno icebp cltd cmp pop push (bad) jo sub inc mov ret push cmp xor sahf cwtl fidivrl jg jmp (bad) jbe or arpl movb neg rclb mov repnz scas xor das aas jge push mov adc add dec fmull pop jbe loope xor leave xchg clc and mov out adcl sub mov push ds inc scas push add scas mov cmpsb push sbb pop andb daa push inc inc (bad) fstl aam (bad) sbb pop popa lock push pushf sbb test xchg mov xchg pop std push sbb add mov cs testl inc pop (bad) lret loopne scas adcb or pop inc ss in shrb xchg xchg jge aas jge pop (bad) es jp jp add and test sub xor mov mov fisubr fwait stos mov pop jecxz hlt ljmp sbb add fbstp mov or xchg mov (bad) aas daa lock data16 fsubr outsl mov andb or loopne add cltd jb xlat and cwtl push xchg loope lds decb push add push add mov inc add scas cli (bad) mov (bad) sub push mov hlt add (bad) aad clc mov ljmp sbb sub cmc or hlt adc push add push outsb jp insb (bad) (bad) dec mov xlat (bad) lods xor clc mov adc inc imul out cld jg aas fs into or ja cs sahf in pop xchg stc and cmc push inc lret adc jb mov ljmp xor test cmc xor inc sub jg lcall sbb out jb xor and jno push scas sbb or loopne dec mov pop fldenv pop and adc out or loopne outsb lret (bad) icebp out push pop div jbe imul jmp fmuls negl sbb xchg pushw jmp push std mov lock adc mov jg lds nop sbb mov cwtl bound pop mov lcall jmp aad adc xchg orb popf andb and sub xchg jecxz pushl pushaw pop pop test or jmp icebp pop add push cld mov or cmp stos test (bad) cltd xchg adc movsb ljmp stos or mov bound jnp mov xchg enter pop xchg push and shlb push loope mov push std jg daa pop and icebp in or adc pop adc lcall mov gs loopne js mulb and lock inc popf mov jmp and pop mov frstor cmpl sahf lds fmull cwtl or push out scas pop mov cmc clc fstps dec scas inc ret xchg jne loopne push lret cmpsl and ret cld cs in fcomip fwait (bad) sbb aam repnz jl sbb jbe fistp enter mov cmpsb push mov adc mov rorb mov cmc mov movsb push inc and adc push push add aad adc pusha add mov (bad) adc loop mov mov and xchg cmp mov or clc pushf add jmp or mov push ret push xchg adc int3 imul jl fwait aaa mov popa xor lcall std cmp mov iret mov test (bad) je dec dec cmp sbb xor or (bad) stc push mov mov and inc pop sarl and mov clc jge add mov xchg dec (bad) xor mov mov in or sub cmp cs lock lcall lods stos mulb mov (bad) jbe out stos loopne mov adc push mov add dec (bad) clc mov enter dec sub add and xchg fcoms out sar cwtl push pop pop scas jecxz add pop inc jl or clc lahf stos idiv sub outsb xchg in mov sahf push mov ds (bad) dec jg,pn jg and xchg and mov dec out pop cwtl in lods (bad) jg mov mov inc jbe scas mov cltd jge push fisttpll mull push and les mov andl fwait mov sbb pop int call jge pop mov lea push outsl rorb jbe insl or add cmpsb rcll pusha inc or movsb dec jp js cmp fistpll dec loopne repnz movd lret jmp jno lret out into add sar pop lcall out lods (bad) mov xchg mov sbb jecxz sub push dec ret jmp jmp lds pop rorl shl hlt daa add jmp mov push sub fisttpl jmp out das jp fwait push loopne aas dec js test mov jo or adc ret outsb setle pop dec scas sub dec out mov ds ds (bad) adc add adc xor mov lret push imul sub dec adcl daa loop mov enter aaa mov add ljmp cld in and ljmp jp add push dec stos (bad) mov (bad) outsb mov and adc sahf mov dec loope mov (bad) test repz pop add jno xor ret cmp mov jg jmp das daa inc fildll xchg jmp mov cmp pushf (bad) iret test int (bad) sbb jp repz and or inc push sbb add fnstsw adc das lods push mov mov aad mov mov push adc sub jg icebp mov sub xchg sahf cmp or dec sbb push sub inc sub pop fstl mov mov add out sub xor xchg sub pop rdpmc ss icebp mov test sti fstpl rcrb shrl push push loope mov sbb sub or lods adc cli outsl stos and cmpsb mov sub pcmpgtd mov out (bad) sti je adc fldcw les (bad) push pop dec push cmp jg scas sbb pop das or testb std mov xor xchg mov pop xorb idivb sti adc bound ljmp push and (bad) push cmpxchg mov mov push sub add or cmp test js rcll mov (bad) pop (bad) repnz icebp notb scas int3 xorb jge,pn add les mov push adc out fsubrl pop jmp (bad) mov out out test push dec push in ret sbb in adc xchg imul sub loopne xor fmull jb mov test popa pop lods (bad) mov scas xchg jo push lret sbb mov cmc cmp xor push push adc mov add mov into jo pusha gs scas ret es test add lock adc dec dec xlat shrb inc mov adc adc ds mov sub inc sub clc lods xchg mov loop imull mov es addr16 mov add mov mov adcl pop movsl mov mov pop fs jg pop mov xchg out es inc sub or xor sbb lret insb jg stos stc dec insl in das cltd pop inc hlt or jbe jg mov lds cmp mov nop test clc std (bad) jmp out sbb icebp arpl mov test addr16 ja xchg cmp notb push (bad) stos lock push mov mov dec mov loopne ljmp pop cmc mov cmp pop push or call jmp push notl inc daa dec clc cmp les mov and in iret (bad) jbe scas push jo lock cwtl sahf pop clc mov and jl add xchg (bad) cs out mov rolb inc and icebp test fcomps cmpsb push pop sbb insl icebp pop scas test in dec dec das loopne mov xor call sbb fmuls mov sub cmp sbb xor mov mov cmpl iret pop pushf jge es test mov movsl dec push lret or mov (bad) out popa daa jmp out ss mov js push sarb sub sbb out mov (bad) mov test lds push and rcl nop xchg xor loopne loopne xchg cmp mov sub mulb push xor (bad) push pusha adc inc enter xchg imul and sub pushf outsb dec inc jno insl mov sbb (bad) cmpsl push or cmpsb in xor add outsl mov loop mov lods outsl call adc adc jge inc push push jle adc add sti pusha lcall jne mov pop scas fsubl movsl add js hlt dec ja (bad) cmpsb and pushf int mov in jg push mov sub sub pop mov jmp cmp aam sbb fbstp add inc pop dec inc or mov mov out push dec mov ja arpl inc mov hlt lret mov pop mov cmc aaa fdivs push stos sub xchg mov jg rolb (bad) insb pop cwtl dec or lock icebp dec cmpsl push mov and stc jp outsl popa jb mov jnp mov mov out repz xchg push and outsb push (bad) dec push dec (bad) lods lret inc das mov inc jge push dec mov push fsubrl mov or data16 cld lock mov frstor out cmp mov mov (bad) xor or add dec push fbstp nop push outsl sub aas ss out adc popf push das xor push (bad) into decb decb not js xbegin ljmp nop nop mulb insb or xor ss push push aas jl fimul jp js outsl fsubs out add xor push addr16 rol iret push gs push scas movb jno xchg test lahf scas xor cmpsl in loopne (bad) mov not cmp pop (bad) roll ret push or pop dec loope dec aas adc dec lods cmpsb add (bad) mov stos hlt jne cmp into or (bad) scas movsl xchg mov pop xlat daa test pop hlt and jle test int3 sahf (bad) les mov sbb or and inc xchg cmp fisub add and push sub pusha xchg hlt seto pop sub cmp icebp iret and xor sahf out and push pop (bad) fsubl sub in or cmp dec mov js xchg fbld inc push adc out push inc pop push push mov stc add push inc cmpsl fsubl gs sahf repnz jo xchg data16 sub add inc mov add loope push push dec sbb mov or sub or pop xlat mov test sub imul call inc cld addr16 sub (bad) cmp dec or fcoms or scas gs cmc fldt add bnd cmpsb pop (bad) push mov add xor sbb int3 ret mov sbb pop or pop mov push pop pop mov push ret jp xor mov aad lcall mov test fwait jg push js faddl pop (bad) scas call not scas cwtl popa clc cmpsb lsl gs mov stos or dec add jmp dec std cmpsl pop fwait xchg iret (bad) push bound cld imul int3 cmp adc int3 sbb mov xor jb dec addr16 subl sbb dec (bad) fist mov call testb dec xor adc repz hlt lea add inc aam outsl (bad) pop add ja in push pop jge add pop hlt pop outsl adcl cwtl fwait jne and dec leave cs sub imul rcrb in std cld imul in sbb std ljmp cwtl add sbb aam aaa rclb pop popa cmc push mov daa cmp sub dec ss and jl test xchg shlb sub sbb dec test inc es xchg loope pushf pop jb xchg (bad) push xor pop sbb push sub sbb sub mov or mov or adc inc and ds jbe xchg call bound sub add xor ds scas cli lret rcrl pop mov xor sub ds jbe or dec das das inc (bad) out mov sub subl daa add cld roll mov call mov lods rolb cs fisub add jl xor je outsl std pop or xchg lret add in xor imul pop loope aad mov add fnstcw addr16 aam arpl dec fmull add js inc xor pop xor test adc cmp mov ds cs dec pop cmovg sbb jnp jg xor (bad) pop lret cld mov testl mov jne fildl cwtl and rorb stos xchg cwtl inc push mov lock test ljmp lea mov movb mov mov sub adc rorb insb (bad) mov add loopne and jg test sbb int3 cltd loope sub test push sub jg pop (bad) pushf mov scas or push dec dec in call mov sahf dec fldcw (bad) fwait jge addr16 lock mov sub xchg ja xchg mov dec cmp dec add lods dec (bad) shlb rorl lahf xor push jg (bad) (bad) jne add cmp cmpsb dec dec jnp aas int xchg mov inc (bad) or pop cmc xor dec jecxz mov xor push push jns enter loopne loopne sbb std jg enter ret jl push sti or add loop push sbb mov jno jp mov pop pop loop pop pop pop (bad) dec rcrb ja and cmpb stos mov sbb fldt mov sub sbb (bad) push test mov sub call lds mov fwait push scas fistp pop ljmp mov sar xor cltd mov mov sbb mov (bad) lods mov rclb and dec and aad push rorb mov sbb pop je add or ror pop sub aad cli mov (bad) adc mov cltd bound pop je out cli shrl loop xor push inc mov or pop ret or fwait (bad) cmc pop add xor adc mov loop mov pop incl sar xor in in cli ret int3 insb mov push cmp mov aaa lret cmp mov (bad) jnp inc ljmp xor sti sub mov mov loope ds (bad) aaa psubd rcll mov shrl in fstl pop dec sbb sahf arpl lods les or push or jp xor adc inc and push data16 dec mov cld inc dec scas out push cmpb in enter shlb add sub (bad) xchg push push inc rclb loope xor mov fild or cmp mov out fstpl shll mov push pushf add sbb daa pop pusha and fcmovnb adc and inc cli cmp adc mov mov dec xchg lock pop into icebp add xor add hlt xchg or clc cmpsl rclb js pop bound pop hlt in (bad) repnz pop pop lock pop icebp stos popf scas jge add popf (bad) cwtl mov icebp sub mov pop out aam in mov jno fimul (bad) xor faddp adc jge mulb push scas jge xchg or imul xchg cmp popf adc call xchg pop sbb mov inc leave or cmpl xchg inc cmc inc dec sub roll dec jae int3 data16 pop inc test inc hlt ljmp and pop or sahf dec out ss jge int3 or imul or add push xor loope popa push out inc std cwtl das cmp int lea pop cld mov lret adc dec mov lea popa jmp pop ss cli jmp out mov (bad) in push xchg out scas add andb mov mov pop es leave dec jnp xor dec or lock in mov outsl bound sbb jne mov pushf inc ret push test sub mov push inc and pop jbe lea aam push pop pop data16 test jp and pop lcall in mov or fisub jle jno (bad) jp xor (bad) jg rcrb sbb jmp xchg bound pop movsl fsubr int push cmp cmp scas push xor sbb or adcb aaa loop (bad) mul xchg jb inc fmull add fldl jno push loop negb mov or and adc adc mov and (bad) out stos mov sbb mov adc lods je jge sbb mov sbb inc sbb xor dec xlat and add cs ret stc pop push xchg jbe jle aad push xchg fs insl mov and std jo into xor stos test cs dec (bad) data16 xchg adc (bad) repnz and (bad) decb push jecxz sbb cmpsb sahf push int3 mov pop loopne frstor pop jne (bad) mov push cmp sub pop pop js or lock int3 add clc push dec sbb es jmp xor mov int sti mov test cli lahf dec arpl clc es (bad) ret push cmp push ja loope sbb mov fadds jmp (bad) pop test pop in adc pop ds (bad) mov outsb push lock mov idivl sarb push iret fstl dec push dec in movsb fidivr sub imul and push (bad) push aas mov xchg ljmp pushf push sbb fwait adc xchg dec xor cli mov or (bad) push xchg movswl faddp pop addr16 push dec add push ficompl xchg push pop jmp mov insl jge (bad) inc andl fldcw popa icebp sub ja jp fist rclb mov jae mov popf adc loopne fcoml push rorb cmpsl adc and cmpsb in ret push ljmp aam sub popa cltd lret mov xchg push xlat dec dec adc lahf sbb and add cs inc (bad) insb mov outsb ja (bad) out mov repnz sahf aaa in push ret cwtl adc es xor push in fwait scas mov bound mov mov push mov aas inc scas cltd xchg movhps add mov sbb add (bad) das sub sub scas hlt call mov pop sub notb insb (bad) int3 push mov jb dec ljmp imul push popa add insb rcr push inc add loope hlt sbb push xor add or cmp mov add pushf cmp mov jge cmp fnstsw test and les (bad) ss (bad) pop pop popa hlt sub inc decl add or and xor (bad) push mov cmp mov add lahf inc (bad) dec js imul in popa ljmp in jbe dec clc (bad) addl and mov hlt jmp notb outsb in int push push icebp add cmc lods pop sub adc and test test inc pushf jge mov aad sbb adc ja mov lods add leave stc data16 clc push lret sub mov lods dec sbb and (bad) lock xchg scas loope adc dec and xlat test stos xchg ja pop in jbe push pop testb daa cld call xlat aas adc lock sbb bnd pop mov sbb (bad) fistpl loopne das lea adc mov xor xor iret pop cs adcl sbb or test add jg sub and dec cmp insl jb hlt inc mov lds movsb cmp aad subb sbb dec stos inc push or aam xchg and push sub lock pop jge repz dec or cli ja pop push inc daa mov decl mov pop dec jle movl or lock sbb xor ret xchg jmp cmpl mov cmpsl imul (bad) jo or (bad) cld imul stos mov jmp in stc rorl fwait aas lods call mov push mov and or jecxz stos leave insl shrl inc add stos loop cmpsb and sub ret lcall lret push ljmp xchg aas int and pop inc dec xor movsl (bad) jg aas int mov mov movsb push adc int imul and xor pop iret adc jge out sbb mov dec test lahf mov ret add stos (bad) fs and push stc pop mov dec pop mov inc and jo das iret iret fildll xchg loope rorb in out mov imul or sahf mov or out jae out addr16 mov push pop dec pop xor adc mov dec cmp and mov test pop out fs stos bound mov enter inc cltd out ds sub sub pop jae cmp bswap call push xor push loopne mov lods addr16 lods inc cmpsl jecxz (bad) das loope adc dec repz stos mov lods in loope lcall inc mov test pop aaa jnp inc mov add insb (bad) scas (bad) jp mov int nop stos stos js lods pushf cltd movsb (bad) jl cmpsl sar pop frndint mov inc mov mov xorb iret and mov jge mov push shrb lahf negb mov mov mov aas movsb sbb loop repz mov dec repz std (bad) jne dec stos in aaa inc es xchg movsb rcrl mov repnz test push test mov push (bad) jl stos (bad) xor ret lahf out dec imul lret call mov loope mov cmp cmp or pop inc stos mov lret outsl movl cmp xchg shrl xchg sub cmpsl adc inc imul stos jo xchg (bad) aad in nop xor test gs repz daa test sar imul aam mov mov add sub mov sub adc int rcrl addb pop ret lret pushf dec dec jbe bound pop mov imul mov sar imul bound lcall sub stos jne out add (bad) push jns movsl stc rol inc and jge stos lcall es or push jecxz xchg inc xor ds ficoml jae mov or inc push and test stos jns sbb lods popf es (bad) push int cmpsb fisttpl sub sub mov cmp imul sub cmpsl cltd imul xchg (bad) sar pop (bad) lahf sub add int es (bad) or sub dec repz in out retw lret adc and (bad) mov xor ja cltd lods or mov gs out stos pop repnz ljmp out jno test cmpsb xchg hlt popf cmp sub cmpsb loopne mov idivl test xchg pop mov movsb cmp cmp sti cld xor cmp push ret in mov repz jns lea mov cwtl mov gs out lret inc pop jge mov lahf add and int3 (bad) push pusha mulb fs shr shrl stos xor jmp lcall mov inc divb jle add xlat xor xor repz mov stos jne cs lahf mov adc cmpsl stc in gs sbb sti push jo (bad) ja push das test and xor push daa (bad) jp lds cmp inc lock ja lcall jb stos into xchg jnp scas data16 enter jl adc cld imul sub jns out jmp fcmove scas test mov dec push and push mov (bad) js inc mov in push dec clc dec movsb sbb arpl push lcall (bad) cmp daa adc fdivp adc jo dec psadbw xchg data16 dec nop divb insb dec xchg cmp jge addl push add ffreep jmp mov sbbl mov (bad) out ss cmpsl adc stos fwait jno or mov sti jl and (bad) mov dec inc sbb stc sbb push btc mov jno fdivp sub in dec repz mov movsb and pop sti dec cwtl (bad) mov lcall jae rcll sbb or jmp ds data16 es enter lret scas (bad) jl rcl arpl jb dec mov fcoml mov inc pop in pusha mov cmpsl stc imul xor call pop push lahf popf out aaa and mov xor and sti sar imul inc ret lahf out push ret es js xor out jg lcall jge out ds or repz xor es stc adc movsl (bad) xor lcall lcall enter xchg std imul mov jp jg aas int jp je std inc (bad) stos sub insl cld imul out jbe stos fdivrl sarl mov dec repz jb stos add loop cld push mov and mov bswap (bad) popf mov out repz mov push push gs (bad) mov in stos pop gs aam test mov add mov mov (bad) cltd out (bad) xchg add test sbb (bad) pop mov push (bad) ja xchg out xlat lcall test inc push sub mov xchg imul loopne xchg mov and mov adc dec pushf xchg cmpsl stc shrl lret ret andl jae rsm call dec adc mov xor scas mov sub mov stos sti push lods add sar imul xchg inc ret imul lock sbb imul adc cmc mov push aas dec sub lret mov (bad) (bad) inc jl rorl mov shll dec stos mov insb je lahf (bad) testl add js int stos mov das addr16 xor fcmovu test call dec cmp icebp inc pop stos sti (bad) or aas int out mov in push js adc imul add dec sub mov push loopne incb cmp repz cwtl xlat outsl stos insb lods sbbb rolb ret jle mov inc pop movsb xor xchg ret ficompl (bad) jl stos inc (bad) mov push xor stos dec out popa stos dec stos fucom and mov mov mov mov mov sbb cmp stos inc and push cs loopne dec lea mov in out es je and lods nop xor call pop push mov sbbb repz cmp sbb (bad) mov fidivr ljmp cmpsl std das mov fwait push pop jecxz les sub inc ret add imul sti (bad) insl jl stos xchg add xchg cmp lahf out mov loop and ret jmp rcrl ret pusha out sti cmp mov or mov sahf pop jecxz stos test fdivr rclb out daa (bad) jo mov jge leave cmp mov mov ucomiss push and xor ret lock sti sbb loope mov shl leave cmpsl mov arpl stc (bad) sub sub jge cmpsl stc subb push or dec fistpll (bad) mov stos daa jecxz sarl add sahf lahf idivb xchg popa or enter and stos inc lret xor xlat loope fisttp sub inc mov pop out cmp bound xor stos int out imul ja xchg add add repz pop (bad) fdivrl mov and loopne mov xchg (bad) xor movsl addr16 mov fldcw mov fnstenv push mov js daa pop push nop push cs in aas lods sbb (bad) mov mov mov test gs push adc stos dec push cmpsl lret mov push dec leave out (bad) stos jge mov (bad) mov repnz jnp xor xchg inc stos shrl jl jle out or mov mov mov and call ret cld stos sub jno cmpsl stc sbb stos fisubl fidivl stos lods add push mov (bad) cld imul ljmp dec imul push inc lret xor cld imul jnp mov decl dec mov pop imul jb cmc rcl lret ret stos inc sahf xor cltd popa pop daa mov imul sub fsubl bound movsl inc aaa stos xor xor ret push adc push dec xor imul out repz push xor lret into out pop mov stos out or fdivl xlat mov cmp lahf lahf sbb scas xor cmp pop inc scas imulb ljmp cwtl mov push or push out lods lahf push andb mov mov insl jns mov mov gs push pop testb jne cmp std lods mov stos cmp or stos add cmp gs dec shr leave out jne dec pop jne stos daa aas nop in xchg mov stos loopne in xchg cmc dec mov pop cmp dec fbstp mov lods (bad) cmc rcr cmp mov add bound cmp mov jb xchg stos imull jge mov leave xchg mov repnz pcmpgtb add ja pop fdivrp mov mov lods subb stos push xor mov ficomp jns in mov fcoml repnz ret adc jge jge iret repz daa dec idivb xor pop bsf stos push lods cmp pusha jge in push mov out mov push stos pop daa xor pop bound repnz mov adc sub cmp or jl rorb xchg outsb out bound div and dec stos (bad) sti sahf xchg cld out sbb or mov test inc sub js test push jnp outsl stc cmp dec (bad) sub inc adc push xchg cwtl or jo inc clc in cmp or cmpsl adc xchg pop aas in mov stos dec push inc test push aas int pop in loope push push xchg xchg loopne int push stos iret lods pop mov or addr16 mov loope loope dec fisubr lock arpl lock stos mov popa clc imul scas push and and cmp pushf stos mov test fsubl mov cwtl cmp (bad) and push and cmpb cmpsl mov aas jle aas jle scas mov loopne mov (bad) mov aaa jns shrl sub leave orl insb hlt rcrl cmp repnz mov arpl dec lret jae repnz sahf int3 xchg cmpsl lods nop hlt jb sahf cmp mov arpl xor ds and leave push jp push mov imul xor fiadd jp stos jo mov std imul loope mov fs aas int dec daa mov icebp push dec dec repz loope (bad) or mov add addr16 icebp cmpsl stc (bad) mov cmp es add aas insl rorl (bad) pop ljmp jmp and adc outsb movsl imul roll call cld sbb pop inc xor lret (bad) jmp pop in sbb add mov ss add (bad) das test xchg inc and stos push mov lods jge sbb cmp jno test or inc lods sub das cmp mov mov insb stos stos dec stos inc lret jo fsubrl out adc cmp xchg gs mov mov clc not xchg add jb into push shrl aaa and lahf scas ret cmp out mov ljmp dec xchg mov fcmovu div cmpsl std sub xor repz mov into lretw lret rorb push insb stos and imulb ljmp outsl test push imul leave jecxz fimull sahf xchg lahf bound adc pop add push xchg xchg mov fildll mov pop jg aas sub jmp ret inc les mov stos mov (bad) imul xor aaa es mov fstl lcall sahf aas out stos sub xor and xchg out cmp nop rol mov bound std or sub out imul (bad) out pop hlt jnp stos movsb and out add mov (bad) adc lods test fidivr mov shrl testl imull xor cld imul lret push push pop jnp xchg shlb mov rcrl jecxz mov clc xor mov scas sbb (bad) jle aas in out sbb mov pop inc pop stos pop out mov insb dec stos ficom test add out out jno sarb pushl (bad) comiss fsubp divb mov aad and inc arpl lds mov dec mov pop test mov mov scas cs loope fcomps cmpsb (bad) aas test or cmpsl adc mov dec iret add mov sub xchg cmpsl loopne jnp addr16 mov rolb shrl and dec mov push mov adc dec xchg subb pop test jnp stos jmp sbb xor xchg dec repz mov xchg mov fisubrl (bad) push clc imul repnz rorb gs adc adc cmpsl jge fucomip push stos cmpsl jb in loope or lahf out mov movsb fsubp jns mov mov les js out mov ret mov (bad) cmp add jmp test xor inc xlat mov das and jecxz ljmp inc or test mov shll jecxz sub (bad) jg pop outsl pop movsl movsl inc mov mov pop lods (bad) sub inc and out (bad) jg xor cltd dec push aas and push clc xor outsl mov xor stos mov jne xchg xor sti out ret push xchg inc inc jg arpl aaa fistpll jne mov push shrb inc push lret push cmc dec and add clc in sysexit data16 in xchg shr mov pushl lea pop cmpsb xor sbb pushf movzwl add iret adc into sbb push mov or or aaa cli mov pop jmp (bad) divl pop inc xor out std sbb mov lods xchg loope aad fsubl inc pop and jl loope andl add jg sbb sub out aaa dec jg xor ss and dec add dec jecxz sub push sub fistp neg sbb lret int3 sbb iret mov scas sbb hlt (bad) or loope push rcrb xchg ret inc dec out cmpsl stos leave sarl je push mov pop or pop loopne in cmp jle xchg enter sub iret ds pop dec pop arpl addl popf out adc cmpsl mov and inc sbb mov ljmp pop in out pop push and add into xor hlt loope inc add and mov inc fcmove xor xchg imul mov js ljmpw add out push idivb xchg (bad) xchg jo pop sbb cmp notl and jecxz (bad) int or and nop push mov mov scas ss add (bad) dec xor mov inc sub pop cli shlb lret insb inc arpl repnz sbb les imul push cmp outsl or pop mov clc clc ficomp in mov pop insb sub adc sbb lcall out push xchg sub fwait inc gs repz shlb mov inc inc scas jno shll cmp mov pop fnstenv inc popa xchg sub cmp push cli xor cld mov pushf repz fmuls (bad) mov mov mov xchg or out jp dec loope aas adc fwait mov lcall in aaa jge dec icebp push jl lret adc mov lods add inc push ja jno insb push pop jns bound and inc ss fwait divl (bad) jne and push movsb adc imul aam aam push jle lds adc hlt test cmp lret fs sbb and sub jg sub mov lahf mov push adc repz movsl into mov push adc les fs cwtl mov adc and cmp mov mov dec mov clc sub push push push and je (bad) or movsb push and mov pop sub std xchg jb jo mov cld push push mov das lcall (bad) int pop repnz loope add push (bad) pop mov cs aas xchg (bad) repz hlt inc iret mull imul mov sub dec out xor in (bad) fcomps movsl sarl push (bad) into adc mov scas adc imul ret mov add or sub adc lock push cld lock mov push xchg inc jbe jge mov add test adc and fdivrs mov clc inc jp add jns pop lds (bad) (bad) xchg or (bad) mov sbb test popa inc int3 push inc nop mov sbb fwait sub in pop xor fld and pop insl into inc aam ds push sub fwait dec lcall push (bad) call cmpsb ficompl inc mov into pop jge pop jb cmp scas movsb cld mov mov lahf fnstsw add mov mov xchg mov (bad) dec std (bad) mov or stos jl mov inc jae sbb adc decl das testl xchg sub mov sahf sbb (bad) adc aas inc pop jp,pt or lods (bad) cmp test inc sub sarb and mov fsubs and inc sahf cmpsb sahf xchg sub rcr movsb pusha aas outsl pop push push cmp sbb inc cmc hlt push lcall push int3 cli rclb scas sub mov in les xor mov adc sbb je jge leave in nop pop test mov push jle cmp add fistpll mov and cmp pusha daa test nop loope pop popf std cmp lcall push dec sbb mov cs jg (bad) (bad) pushl sbb enter mov mov jo out jae mov fwait hlt sbb jb iret aaa jno sub aas stos push xchg xchg or sub mov stos aam clc ror out call add dec push mov jmp dec loopne test stos std or pushf dec jnp,pn mov scas jo mov adc and std dec add pop sub xor shrl repnz in sti sahf mov or lock es into inc pop pop pop data16 rolb sub xchg push mov fimull push ss pop cmp sub jmp jg (bad) es sbb fs test or incl add test dec sub pop (bad) cmp inc add push xchg pop push jb in adc loope mov ljmp mov inc (bad) psubq roll (bad) fistp lock xor sub jno mov or lret jge add icebp fildll scas xlat dec mov inc xchg hlt (bad) ds mov or push stos mov jle out sbb push mov jge sub mov insb out frstor (bad) pusha adc inc int3 ret fistpl cmpsl adc scas cmp insb pusha inc cmc push sub push or adc jbe std movsl pop jbe icebp dec mov in push out inc rorl mov jns ficom cltd cmp shlb mov fistpll mov inc pop mov mov jb add icebp inc xchg push fisttp aaa outsl fsubrp and cmp mov push lods dec and jae sti xor adc bound roll push push imul repz push mov mov pop les push mov test push mov or or push xor jnp lcall sbb xor xor fwait outsl xchg push out push aam sub stc out (bad) xor in xchg (bad) xchg pusha inc (bad) sarb addl mov ret sbb loope,pn sbb es mov lahf mov dec xor xor fidivr sub pop lcall or dec iret sbb inc add lods pop mov daa jecxz loope aad cli (bad) (bad) out or jge das cmp push int3 add add jle in lret call in movl gs inc std xchg clc insb inc aam shlb inc into or fildll fbld dec or dec sti pop jne and jl iret add clc cmpsl push inc cmp negb sub cmpb clc fisubl sbb test test push mov add and scas arpl (bad) pop and adc inc iret sub (bad) xchg sahf inc shrb mov fidiv push test sbb jbe push dec adc rolb xchg or ret (bad) ljmp lcall mov scas in add insl or xor jo lea dec add (bad) add mov clc cli sahf mov bound inc into or rcrb into cmp jge sbb mov aaa in xchg test and ret loop mov imul cmp in ss cmp out sub loope adc add push test arpl inc ret add jecxz cltd call push test test int3 xchg xlat shrb push ds mov adc mov lock fmuls mov outsl add mov and stos movsb scas (bad) pop mulb leave mov addr16 (bad) pop insb jbe (bad) push mov mov dec add test mov jge xor mov dec mov mov mov jge testl jg out sbb inc dec jmp jge or or cli sbb out sbb inc cs out roll addr16 sarl cmp lahf and (bad) jge lret mov sbb pusha lock bound and leave jecxz push pop (bad) dec ret clc and adc jbe lods or push pop nop sahf push sbb mov sbb lret dec xor xchg mov cmp or cmp adc adc lock ret enter or sub imul es aaa insl mov mov and push jecxz push lret rorl leave mov xchg repnz and jg movsl and ret sbb and push sbb mov lahf mov dec push into in clc cmp lock xor lret arpl adc jae adc iret sub pop (bad) icebp aam inc mov arpl push mov gs push mov test cmpsl dec mov nop cwtl rcrb in in into js icebp inc int and js mov aaa add or f2xm1 paddq sahf jecxz push cld cmp out and cmp mov mov je xlat pop orb imull push fwait aaa xchg cmp out and stos jp and adc xchg pop movsb xor (bad) les dec (bad) mov aas outsl adc call leave push mov pop mov shl or rorl outsl es or mov cmp insb icebp jmp mov rcrl iret push and (bad) sub cmp rcrl sbb int loop (bad) fildl dec mov pop (bad) or shrl push lods int (bad) jnp movsb xchg (bad) aaa int fstl mov xor repnz jge inc mov cmp jmp lret dec sbb dec xchg stos jmp add scas sub in cli adc sbb add (bad) jge cmp popf nop push hlt pop adc movsb out inc push inc shrb rcr mov fs jo fcoml ds adc push dec (bad) mov mov daa pop nop mov sub test and sbb push mov fsubrl and xchg jge mov cmp clc pop adc loope loop icebp adc sbb pop fisttpl into xchg fsubl dec jb lock jno adc sbb fsubrs add cmpsb adc int3 mov sbbl sub lods clc sbb sbbl cmp or and leave pop mov push pushf loop and leave iret test test xor inc dec dec hlt inc push adc pop pop (bad) xchg (bad) mov xchg push pop sarl popf or rclb jmp sub fs mov mov idivl mov lods (bad) push (bad) sbb or int fdivrs insb fimul cmp dec test int3 inc int3 (bad) icebp xor push (bad) mov dec mov dec dec push shll out test outsb cmp (bad) gs push add test sub jge and dec inc mov in fxch push sbb (bad) mulb xor (bad) mov or mov fwait loopne adc mov sarl xchg push repnz mov adc push movl sti mov enter int3 xchg pusha mov pop mov cmp sub push push mov fsub ja fs (bad) fadds jge mov gs (bad) faddl mov mov ja imul pop mov (bad) icebp cld xchg ret mov (bad) (bad) pushf mov fisubr xchg pop and pusha sub cld push rcrb and pop cli mov inc fisttpl lret dec or mov push insb or bound mov inc pop inc jle adc (bad) cmpsb adc sub push push mov push out mov and (bad) cmp push lea push dec movsl dec cmpl sub (bad) movsl out insb popa (bad) out sbb sbb movsl lea pop inc adc rcrb mov (bad) jno loopne imul pop popa xor xchg out aas subl jg sub sbb scas jmp jl aam jg push loope inc repz mov jge jg and and dec jecxz xchg push mov mov movsb mov imul lcall sub loope xchg dec xchg mov xchg in mov add into pop neg pushw inc ljmp mov and jb dec lret jge jne out mov adc out sbb adc (bad) out gs mov xor ret mov (bad) jl jmp pop add (bad) mov cmc lret xchg mov mov sahf lret inc (bad) inc ljmp cwtl ljmp sar in adcl (bad) mov repnz sub lcall mov insb mov pop push in mov mov adc push pop fistl pop adc (bad) icebp stos leave push ret sub mov sarb jl loopne cmp ds fisttpll es cmp rclb lret or mov aad in add jp (bad) sti dec add ljmp imulb insl shrb push xchg ss into xor and mov hlt into dec sti push fincstp mov jmp fildll in xchg mov out std jge xor mov add mov testb lret aaa sti lea into pop jecxz (bad) lret cmp push adc add cmp lret (bad) mov (bad) add lods and sti mov out adc dec push push sbb repz and jge sub daa dec jp fs bound mov pop mov cmp inc (bad) mov iret fnop jl out lods mov sbb dec cmp cwtl sbb mov mov mov call dec jns lret push push into cmp sbb push pop jge xor je dec repz test imul add mov rorb jmp repz movsl push enter lods add mov and pop js pushf enter xchg pop into xor repz mov jnp inc testb cmp mov dec xchg add imul test ss insl fnstcw out push sar lods jns (bad) jecxz mov mov inc and add dec out xchg int3 cltd test (bad) jge cmpsl mov cli jmp ds push pop cmc cmp (bad) push lahf cmp xchg pop movsl xor je es or mov (bad) lock int3 xor cmp dec xchg (bad) pop xchg or add ja jne xchg cmpb dec jg (bad) add xchg push mov mov sbb (bad) js mul inc xchg pop ret push and fistp sahf cmp or stc xchg push jl lret push fimul jo xor push jno xor cltd les mov mov mov test out decl sahf stos and sub in jbe js and outsl mov test les xor fs cmpsl mov nop outsl jge cwtl ficom xor fnstsw cmp add in sub pop lret ret push std test push cmpsb (bad) out bound rcl push repnz stos pop les sbb ljmp into psrld in cmp add mov loope clc cmp (bad) mov mov mov cmp (bad) or dec (bad) sbb aas dec xchg jl inc fwait out fisub add pop dec das lret mov cmp inc pop cmp mov lea mov icebp jle enter mov xor (bad) push loopne jmp mov push add dec (bad) jmp adc pusha pop gs out pop lret cld sub dec cmpsb and loop sbb ds dec popf and (bad) pop xchg inc das sbb add ffreep sbb sbb mull loopne jbe popa xor xor dec sbb pop pop sahf (bad) int3 cld pop repz dec ljmp std fidiv lods pop js mov decl cmpsb sbb cmp hlt jmp jo outsb std and shr clc mov xorb jns adc or adc (bad) (bad) scas and mov loope jl mov mov jecxz out mov bound das pop push mov add outsl shlb mov add or (bad) pop imul xchg (bad) sbb fbld in add stc ror jge fnstenv js rorb xor mov jb fxch mov sbb sbb loopne scas sub subl mov cmp mov pop (bad) xchg xchg aaa adc clc or add mov data16 test sbb mov adc mov xor mov xor mov mov add into cli or push out mov sbb ret mov xlat inc (bad) (bad) dec fisubr pop lret sub add xchg and xlat lahf xlat push (bad) fcomps adc dec rcl jae inc rdpmc rcll mov xchg pop pop xor or ss std or lret and xor pop iret mov decb hlt ret mov and aam out cwtl xor and pop dec push push push xchg adc jne aaa subl icebp clc add cmp mov stc dec sbb bound cld aaa rclb xlat shlb mov pop pop outsb push mov add enter mov xchg and shlb cmp jl add rolb xor pop xchg clc mov lcall repnz mov jnp (bad) cmp inc imul or inc fisttpll test in mov dec jbe mov cltd leave clc mov inc outsl or and inc sbb push push dec clc in aaa hlt jmp jecxz mov imul es add push ficom into xorb testb fldenv popa xchg mov rolb add jecxz fisubrl sub fisub mov jg jg push (bad) push mov push pop insl push movsl stos aam repnz jne,pn xor lods aaa repz iret push push mov push mov push pop in cmc push mov push (bad) aaa loopne into insl pop cmpsl pop pop hlt clc dec cmp push xor fldz add or lds mov movsl jo fbld sub pop out cmpsb dec fwait movsb add ds sbb (bad) lcall cmc cmp sti and sbb (bad) jg das mov sbb or push movsb mov xchg add hlt inc rcll dec or xor into xorl or and fisttpll hlt cmp (bad) fs mov loopne popf iret adc cld and sar int bound pop (bad) mul jp pusha dec adc fwait mov (bad) mov add sti sub adc cmp sub jg lds std stos sbb or cltd adc aam jmp or or fistpl test test and mov jl arpl ds pop mov in dec dec xor xlat ficoml push test lret loope push jge jl fimul and or and insb mov sub dec je sub sbbl mov jb hlt and (bad) jge std js clc dec mov mov sub jns lcall push mov cmp sbb mov loop sbb mov arpl sahf xchg pop js andl pop ret dec cmpsl pop cmp mov lret insl pop mov xor stc mov mov xchg mov stos test decl xchg dec mov dec sub mov es out dec bound adcl cmp daa std push (bad) and fadd loopne scas push dec test push into cmp cmpsl popa out push push cmp movsl mov xchg (bad) sub add into arpl push popa adc xor decl mov xlat bound mov cmc ljmp push add sahf sub jb ds mov jge and push inc pop inc scas (bad) imull bound call push js add cmp rcrb pop cmp daa aaa jge adc and xor out mov add pop mov sub jmp rcl add and or ror adc in mov cmp sbb add in mov sbb movsb mov (bad) shrb jecxz inc icebp in fs xlat (bad) punpckldq add inc mov int (bad) hlt pop (bad) (bad) iret pop pop push sub gs dec push scas sbb or sbb xor mov sub aam cld dec sbb adc xlat sbb negb sub jne loopne ss in push (bad) push ss mov mov fsubs xor into cmp (bad) dec and adc jg pusha pop lret fldenv pop jbe test jge xor rorl stos dec sbb inc adc sbb ds add std lea pop das sub bound add jno xorl lret stos jge inc adc lret cmp ljmp in push out pushf cmpsl out and or dec aam lcall shl inc sti mov (bad) (bad) jl cmp pop xchg out movb xor jnp push xor xor repnz lret fcomps ss jmp rclb inc xor les mov xchg xchg loope lea out dec inc pop mov cmp sbb mov mov xlat cmc testb add ds and enter loope jo (bad) xor push inc jl icebp xchg inc or test lock mov cmc insb lret cmp adc dec test neg pop dec test leave das push imulb cmpsl xchg stc inc sbb mov add push dec adc lea dec aaa inc repz cmc cmpsb mov lret and dec stos jmp mov cmpl fpatan lock fwait sub pop inc (bad) fwait or lret fs pop orb mov add enter sbb add and es mov negb cltd jp test mul jmp push inc pop mov sarl pop fsubrs add cmp or lret (bad) sbb movsb popa lret fisubr loopne sub push add pop arpl sbb push xchg cwtl xlat fwait add push lahf mov ds jnp mov repnz adc sbb push push push sbb test sbb or add pop out mov dec mov mov ret int pop push or out rcl das xchg pop fs pop in and nop sbb mov xchg dec ret (bad) xchg (bad) mov or push ds scas sahf add push addr16 sbb jp adc imul call repnz mov jnp (bad) mov leave subl mov (bad) int push sbb xchg dec jno sbb sbbb jle jle add das repz xor ret adc push js mov xor outsb sbb and das or xlat fsubs ljmp inc inc lret add mov jl (bad) setb mov movsl lahf and or clc add cmc out add sbb dec xchg je out jo cmp inc ret ljmp mov popf inc daa xchg into and dec pop outsb ret sahf js and loopne rcrb dec pop movsl icebp clc fwait sarb scas and mov (bad) (bad) repz sti dec sub stos cs jae ljmp push inc shrl push adc mov cmpsl xor icebp mov jge pop cmp cs (bad) aaa sarl es cld jno loop mov xor scas and push ds push pop or jp jo push ljmp fildll mov and addb imul in push or jnp mov add inc jns mov (bad) or cld cmp and and xchg ret mov stc lods add (bad) ljmp push pop jns cmpsl enter (bad) iret push hlt xchg dec mov or xor pusha aam push dec and xchg pop push and (bad) in stos push mov sbb rclb mov in push or and dec rclb (bad) jbe sbb out add idivb jmp xor and and jge lock pop push adc out ss push pop push cld into or hlt mov xchg fisttpl mov fild and add xor loopne adc push sahf stos testb out outsb pop daa fmuls mov xchg imul test xchg cmp add adc xor (bad) testb repnz cltd xor jp sbb adc icebp push loopne pusha mov arpl das shlb cld inc mov or movsl add dec and test sub or push loop inc std push insl ds fistp mov push jne mov dec pop push pusha cmpsb push out push ret inc or cmp out push add (bad) shll lahf loop add or add lret sti fldl sub sbb sub frstor sbb jle jp stos scas aam test dec dec xor pop push sbb sbb push or cmc ret insb push fldt or jl popf push push lcall pop adc (bad) inc pop cmpl rorb jg inc daa add or or arpl adc (bad) (bad) sbb (bad) xchg out cmp or sub cmpsb (bad) out es push in aam mov stos fdivr jge ret mov lret push ret les xor sbb push hlt mov add pop subl negb or push scas xlat inc push arpl ret (bad) adcl rorl sbb add aad sbb fldcw loope das inc add sti or mov popa imull sbb movsb jge std add adcb or lahf dec push movsb push xchg cmp pushf movsb fidivl fdivs test movsb out mov sub rclb scas mov cmpsb and fwait mov add insl mov inc inc int jo add loope cmp pushf in iret or test shr push clc fsubr pop sbb gs inc push inc rcrb pop lock out mov movb or fcoml lret push mov adc fstl inc js pushf push aad pop icebp lock dec mov push rolb xor (bad) jl int3 or push sbb jbe push push les and or inc mov push outsb data16 pop mulb push cmp repz push or loop int xchg imul add ss in shrb call mov loopne fidivr sbb mov xor or mov aas adcl fcompl adc daa test jmp xlat xchg popa adc lret scas push mov stos ret arpl std arpl scas ljmp dec outsl or enter xor push jbe push rorb stos sarb or jne pop push imul rcrb sbb push add loopne xlat idivb lock std lret push jnp push dec pop js popa inc imul sbb adc les in loope pop lret dec mov out or xor pop inc mov movsl out add pop cltd (bad) cmpsl sahf mov out popl fimul cmc push loope mov cld inc sub cltd mov jge fidivr repz adc mov fidivl ret dec bound or rorb lret sub lods cwtl add loopne dec into fs and adc or xchg push cmpsl andl (bad) sbb lcall ret xor or fstl andl (bad) dec adc repz cmp xorl pop jo data16 mov iret stos aaa leave imul test lock ss adc cmc push add scas fnsave es popf enter sbb dec xor loope aad pop add into mov (bad) push popl js stos fiadd incl xchg sbb jge pop add cmp mov icebp lds aam in nop repnz or sbb scas sub pop clc inc mov in pop (bad) fsubs dec xchg jge push shlb xor movsb fisubl push daa xor aad flds add rcrb js sbb jg xor xchg and or cmpsl test push js add pop jno repnz or adc xor cmp ret adc and xchg fs adc mov or daa or fwait sub ret mulb pop sahf add mov cmc mov adc lcall loopne mov sbb inc sub adc push inc inc fisttpl inc sahf xor dec nop cmc dec inc add mov dec pop fbstp (bad) (bad) loopne mov aas sarl loope fisttpl mov cs cmp cs fbstp add ds pop (bad) jb xchg mov pop sub bound loope and mov or std notb push mov and std add icebp (bad) xor sbb scas and xchg loop pop push cmp push xlat xchg ret push (bad) and cs out cld xchg cmp test xorb frstor lahf inc into outsb repz sbbb cwtl aam jmp pop jg out and mov lret mov pop lret mov and fmuls fadds or hlt dec inc push enter or loop pop dec in std xor and add cmc mov (bad) push push lock pop inc adc xchg into jp pop bound mov xchg lds and jmp das jl sbb roll mov pop xchg and shr and dec push inc xchg lahf lea test mov jnp repnz xchg inc clc rol out bound cwtl mov (bad) fstps cltd les ss orb add in dec dec and arpl mov inc (bad) mov leave xor in lcall lcall mov mov dec cmp ljmp add popf roll outsb xor outsl gs push clc pushaw sbb xor push aaa or sahf xchg cmp adc ficompl mov in iret (bad) pop mov jge aas cmp negl jbe cmp scas clc lret les test xchg je rcrb enter stos or repz pusha sbb bound jge icebp adc cmpl test cwtl or sbb or divl test jne data16 loop ss jo jge call or sub push lret add icebp xchg clc jmp pop inc sub jmp jmp cltd mov je,pn loope cwtl and fwait je xor adc mov sbb mov pop fwait mov insl int sahf inc xchg mov xchg xor dec pop inc push cmpsl loop mov test sbb roll popa inc dec clc jl ret add inc or jbe push (bad) shl jne and jp jmp jbe into shrl mov pop loope shlb lret imul inc mov push xchg jne sbb fst inc mov and dec and js xor sub mov test add pushf mov in je fcom fs insl cmpsl stos aaa dec push cmpsb mov mov test mov mov daa dec adc (bad) jnp jno jle lods dec lret mov xor push rcl lods mov xlat and mov (bad) cld (bad) (bad) mov sbb mov je clc out cld int cmpsb addb jmp mov nop mov or cmp fdivrl add cld movsl popf jl jp xor or push in push repnz cmpsl sub leave jl cmc fimul sbb mov xor push cltd stc out (bad) or inc cvtps2pi mov out out xor push pop (bad) add cmp fadds dec and inc ret xlat xor mov jo icebp stos out push sbb jnp je adc leave mov xlat sbb popa mov add out les jns mov sub cmp ljmp mulb scas mov cwtl sti sahf pop movsl (bad) mov insl xor ret lret ret hlt scas aas cmp mov inc dec fisubr into popf stos or ss bound jb adc aaa lcall sahf and cltd pop pusha leave mov stos out jp icebp sbb into out cmp xchg shrb push mov jge jecxz imul incl cmp pop and add cmp test mov rclb and (bad) (bad) mov (bad) mov jl test lods add or mov mov cmpsb js xor adc into pop adc sbb sti sbb xor cmp and insl mov divb dec xchg fdivs adc jge call sub push leave lar push (bad) hlt adc popa popa push negb pop enter mov jno rolb ret mov jae or xchg dec mov mov arpl lea jge movsl xchg inc mov fimul lock inc cmpsl addb pop hlt pop mov fmuls push lea fimul mov adc cmp pop jmp das ljmp cmp cmp insb mov xor dec dec gs and or loop addr16 sbb out add pop or jecxz les cld xchg jns sub mov xchg fsubrs sbb aaa jle sbb sub std mov inc and test lret pushf and cmp lods add loop or sub nop in or lret icebp gs dec insb mov push in divb cmp cmc add int3 sbb push jmp stos ljmp lret mov out xchg mov adc jae fsubrp ss inc mov pop adc test xchg mov add (bad) mov (bad) decb std test push (bad) stos mov ss xor adc mov adc dec fimul mov sbb fisttp repnz test xor rclb mov shrb fistp add mov xchg jno in ds pop adc stos xlat enter pusha stos jo dec test imul nopl add xchg pop or sarb or clc pushf cmp jecxz sub stos repnz add xchg addr16 cmp pop shlb lods lret and fdivp test into cmp add sbb mov xor sub mov pop (bad) rcrl aad stos jmp (bad) cmp (bad) jg or push testb fild clc inc loope fnstenv fild imul sbb mov mov dec pop pop or or je sbb cmpsb nop jge add sub jle xor push mov das and and loope imulb xor and inc loop aam jae push sbb adc xor test and and test sbb stc or punpcklbw or out incl mov test mov bound mov test test xchg mov inc cmp clc inc (bad) jle or and or sub arpl xchg (bad) sub das ficom xchg or cli xchg xor push comiss and cmc mov aas inc aas sub pop scas or test mov pop lret sbb pop dec or dec adc pop out (bad) xor movb inc les leave aaa sahf xor enter mov clc cmp cs out xor and mov pop and cwtl (bad) mov mov jo (bad) ds adc push mov nop out sub ja xor xchg jo mov fldt stos pushl inc xchg negb sbb cmp fisttp ret jne mov add mov test xor push and fmuls sbb test ljmp in sub xchg xchg dec sub pop das test into or sti jno and mov cmp popf add or dec cmpsb out into lret call mov fwait dec loope fidiv into sbb jno mov icebp and ja mov push pop es jno shr movsb ret lahf pop xchg mov add xor test enter movsb das or shrl inc sahf pop add aam es (bad) lret cmc cwtl push jecxz inc cmp (bad) push test push xor adc call icebp and inc sbb inc push hlt add lods test mov fnstcw popa mov in sub (bad) dec adc and pushf out (bad) daa push roll push sbb daa sub pop xchg mov sbb outsb sub sub movsb push push adc xlat xor dec in outsb adc jb or ret pop movsl cmc and imul imul popf xchg adc fisub (bad) dec clc inc and addl loope ret loop pop mov imul push inc jae sub push and sbb in adc inc ret test mov xor sahf stc sbb inc sarb mov loope mov adc test xchg (bad) fwait inc js jne (bad) jo outsb jo out ja cs adc and nop and fwait loope rcrl or idivb loop in push gs sub or jbe pop aad gs and push xor fimull mov xor pop xchg fisttpll xchg sub mov rol or mulb push es jnp mov cmp pop popa test (bad) ljmp fildl cmpsl (bad) push aam pop pop imul sbb lcall jge lods sub add mov pop je inc adc into and aas add xor jl add stos outsb push push inc leave pop jnp jg jns push mov je xchg es adc cmpsl jns pop stos push inc stos adc pop xor mov rcrb imulb pop shlb push jno int push imulb (bad) pop out mov cltd dec mov cmp mov mov jg adc aas out decl scas dec and mov add aaa jne jo les int sarl sahf in dec pop and adcb aad imul loopne aad or sub jns adc gs lahf xor insb sub fsubrl and xchg adc popa jb mov bound hlt outsl out out push mov lcall dec stc rcl push loope (bad) ret push lea pop imul stos xchg xor xor jns movsl stc push fcmovbe push into jge mov sub ljmp mov push push mov rorb pminsw push push lret push aas mov cltd jne repz dec andl mov mov sub mov xor int3 push nop out mov lahf xchg (bad) jmp lock (bad) decb iret (bad) jp (bad) test inc test stos cmpsl mov bound addr16 jae stc sbb int3 and rorl mov or sub lahf xchg jge cmp imul jbe ja nop mov push inc xchg jge fist aad into sub dec cmp cs cli push decl xchg push jl lahf out sub dec adc lock sbb aas incl mov mov or xchg jb dec mov into int data16 dec xchg sub cmpsb xchg stos mov fldt lret hlt (bad) push rcll out int push repz shr out mov popa xor fldcw loopne mov das sti stos mov cmp stos sti insl shrl mov jne jae (bad) int3 cmp sahf mov js adc pop (bad) arpl cmpsl pop push cld stos movsb and pop push out sti stos call les fbstp dec inc daa xchg mov add jmp cmp in or cmpsl shlb out push (bad) int push out gs rcrb enter aas out mov (bad) mov dec xor jp stos xor add in mov das cmp lcall sub xchg push pop (bad) push gs lock mov lods ret cmpsb adc jle jne lods incb pop (bad) lock xchg bound into inc or mov lcall out ljmp dec pop (bad) jb out xchg out not push lret push mov (bad) lret mov (bad) dec jge push aas fnstsw lods test mov (bad) add mov shrb sbb fwait mov (bad) gs repz push push idivb fisttp popf stos int sbb loopne xor cmp sarl leave sbb mov shrb int xchg insb testb pusha mov jo loop dec sahf push call xor mov or insl sbb pop and adc (bad) xor adc xchg xchg jo pop gs inc dec fistpl push (bad) in in enter cld pushf and repz es nop mov pop push or aas add clc inc mov rorb mov xchg pop jmp aad pop and andl mov and outsl addr16 xor scas in jmp loop xchg push adc cmp xor sub fildll sub adc push push push cmp call addb inc and stos repnz jle outsl xchg (bad) outsb mov sbb scas lret xlat mov adc aaa sbb xchg cld add int3 or push fmulp mov and loope dec xchg adc mov ljmp or dec sub pop lods cmc inc mov lcall xor in test push loope loopne sub add dec aad iret lock int and push pop rorl loope pop jns (bad) leave mov cld add and dec jo,pn mov jnp rcl mov lock call mov out cli outsb mov rep imul icebp or mov sub sbb lock jne mov cmp (bad) popa xor das fsub mov mov adc lock xchg add (bad) int3 pop or inc sub mulb cmp or mov in mov and enter pop ljmp scas ret mov sub adc es test rorl bound mov cld imul push lods mov and add outsl idivb out ret add mov sub fiadd lret scas cmp or lds inc jl mov out les mov mov mov pop bound int repnz sbb rcrl fldcw pop orl push call fucomi push jp inc and cmp dec mov pusha sbb dec es fbld (bad) mov ljmp pop icebp xchg dec cwtl (bad) bound pop fdivl stos add dec pushf push pop mov adc clc sbb cld (bad) mov xchg pop push pop mov xor xchg (bad) imulb and inc sub out inc pop inc fisttpll mov sub ljmp decl or cwtl imul fdivrl fidivl lock int3 and es add leave push out adc adc cli push neg xchg cmpsb push xor inc enter fmuls and into jmp inc out adc icebp dec xchg bound add test lea cltd xchg dec jns mov in or dec and xchg (bad) lock icebp sbb jb arpl cwtl inc das add xlat lea (bad) xor push or mov mov or or add out push and inc sub mov jp in iret rcrb xor outsb into rcrb dec sub cs xor sbb dec shr add sbb (bad) xsaves int bound mov int3 frndint icebp mov pop adc cwtl in and add push scas (bad) mov sub and adc jne mov lock mov mov pop adc (bad) adc cmp (bad) call (bad) xor xchg xchg fs jb xchg push mov ret xchg mov xchg fldcw push fistpll lcall icebp add rcrb push or mov pop add sbb fisub dec rorb pop fnsetpm(287 add loopne xor inc (bad) icebp int aas cli add fidivr cmc sub xchg mov out pop sbb js cmpl pop dec lret mov push test repnz loop xorb es mov mov test mov int3 mov xor ret add sbb or add scas insb xor pop mov (bad) dec popa cmpl mov inc push mov out jbe inc fldl loopne inc repnz cltd pop lahf adc jne hlt lock addl inc out js mov arpl dec fstps mov call add imul aaa out and (bad) sbb fstpl in push js outsb sub xchg aad xor imulb (bad) les push addr16 pop (bad) mov mov mov sar sarl js je outsl sar mov insl jl imul cmc popa repnz push out dec push fistpll adc dec and sbb add fwait or xchg decl adc xchg ds xchg push out add ljmp pop cmpsl add lcall dec shrb mov outsb int aad mov jb mov pop push inc mov loope sub test push dec jo mov cmp xor xchg pop (bad) rorb outsl or lahf sarb mov js dec lahf in in test and mov loope jb lret push cmp flds scas (bad) push inc aad jo dec lcall int out cli mov stos pop inc ret jg aas xor add mov (bad) out adc jge insl loop add fwait cmp mov sahf popf stc fimull std inc xchg cmp (bad) mov mov jmp in cmpsl outsb ss ss jecxz jo sub sbb popf cmc and xchg and fisttp push dec dec or push dec loope cld (bad) shlb mov dec test (bad) stos leave dec in shrb std cmp adc sub enter insb inc and loope lahf xchg lea jp xchg inc sbb xor dec or and cltd xchg test push addb cmp mov xchg hlt xchg fdivs push mov add mov push and test ret mov hlt loope loopne (bad) test repz call cmp xor loope dec jle adc mov test inc xchg movsb mov and and hlt popf andb out int outsl test ret push pop popa mov js fisttp clc inc mov jb push add sti iret pop je in (bad) stos jo xchg mov sahf fisubr popf jge iret mov scas pop cmp or xor adc add add arpl or imul sub or mov dec adc inc loopne adc neg in mov xchg bswap jnp rcl lea movb out aaa call mov xchg rorb mov mov jo mov cld mov mov loope into out (bad) lods jmp xchg jge mov popf mov outsb or and mov push and and add mov scas xor xchg pushf jecxz xchg clc pop push aas adc psrad loop jnp and sub xor pop jl push inc lock hlt jecxz and mov test mov push lods gs clc add cmpsb arpl sub adc jp (bad) pop inc insb xchg sbb fdivrs in xor push xchg movsl jne les sbb push mov or inc cmpsb fwait in test test cltd movsl pop or or xchg out push sub push test (bad) into inc cmpsl (bad) rorb lods add das dec je xchg insl add es xchg fldl sbb ret push mov jb jb dec mov add adc pop jb mov repz fwait inc cs xchg xor mov dec lods xchg push lcall loop adc ror orb jle mov push clc aam andl xor mov jmp bnd push adc lcall ss test rorl push inc imul add fxch sbb mov loope jbe dec or dec and add lcall xchg mov push xchg (bad) rcr pop sarb pop xchg (bad) inc sarb js jl pop mov mov push ret add jae xchg call icebp push loope mov jbe into push cwtl xor sbb cmpsl bound mov or in mov sub mov repnz and ss add xchg (bad) popa mov les test outsl testb outsl jmp ja das imul gs test shll xor (bad) push dec or ret (bad) pusha xchg sar adc add inc xor aaa mov or in push sarb mov jnp mov add ret cli push loope lcall mov xchg add ja addr16 and sbb cli es inc loop xchg in js (bad) xchg (bad) dec adc cld push or dec cmp test loop push dec sbb jl xchg dec pushf in fsubrs add xor bound dec cmp hlt scas dec std incl xor jne push cmpsb ficompl scas sti mov insl sarb jns push xlat pop (bad) mov mov cmp adc jb adc mov ds mov ret clc inc (bad) jno clc dec out pcmpgtw push push lock rorb and fbld or pop mov sub rorb test mov repz xchg cmp push dec mov enter sar ret jo sbb or jmp sub push ja sbb sbb and cwtl icebp push (bad) in or inc jg and fdivrl mov (bad) out mov ja mov inc push dec inc loope js push cmp mov xor pushl into add push sub rcl lahf xchg (bad) jae arpl loop push push and xchg loope add imul xchg dec mov daa pop pop out jo or xchg push mov out dec lods mov subl sbb push xor adc adc dec ljmp fisttpll xor mov outsl jmp outsb dec jne cmp push lock lock fbstp push adc jge aam adc lods std cwtl push xor mov add pop jae cmp sarl insb sbb adc xchg mov pop add lods push popf ret bound je in es mov jmp test hlt lods push mov mov xchg adc aad mov (bad) jmp jno jo jmp jl sar adc xchg mov cmc daa xor orb nop fnstcw and add cmova push and pop add mov dec sub mov (bad) hlt or push (bad) push into out add (bad) jmp cmp (bad) sbb ss mov movsb cmp out ficompl mov sbb pop jno iret jno faddl cmpsl cmp popf test repz jnp loop sbb sbb test sbb and mov and (bad) imul je add mov mov xchg popf push repz lret int3 add lret out xor aas cmp xchg jge adc mov mov mov popa dec pop sti sub jmp inc mov sbb xor leave push (bad) mov test out fsts ljmp out mov cs push cmp pop rcrb add mov cmpsl mov bound xor xor cwtl push gs or inc scas push jmp loop inc jl pop fbld sub or rol mov mov mov imul push out jge (bad) or mov mov or loope inc cld xor and js and or sub and push mov mov test jge sub fsubs mov pop cmp lock cmp out enter ret mov test (bad) idivb mov aas stc mov push icebp leave stos repz mov (bad) imul jns adc insb out mov or cmp adc out pop inc xor cmp or jmp push fisttp loopne cmp mov sbb fcomps or mov jp stos add out test pop (bad) xchg xchg int bound and vpsrlw adc lock cmp sbbl or or add cmp or dec jne ja cld enter rclb pop pop push loope and push stos (bad) xor adc dec adc js test lret dec push jmp (bad) push sbb add adc lds insb (bad) mov adc mov push adc sub sbb mov addr16 outsb into inc lds (bad) in mov cmpsl aas nop lcall jno and jle xchg fidiv fwait aad add rorb mov dec fwait test dec iret dec pop pop xchg jmp pop or lods mov lock (bad) stos xchg ret int push insl dec addr16 or ss mov push out dec push pop push popl cmpsb mov js mov pop xor push mov jmp arpl sbb pop cmp and dec shll addb push repz pop add inc shlb pop clc push cld pop cmpsb mov fildl lods xchg fild mov imulb mov cmp push lret gs jge inc lcall jne (bad) cwtl enter push jge (bad) sbb lods cld push roll xchg inc cli jns push test add out adc es push cmp push mov scas rsm (bad) mov and dec mov sti add es cmc push jge jmp into (bad) sub sub (bad) jle addl sti adc mov aaa dec add incb push cmpsb or imul fs cli aas pop xor hlt out movsl aad inc push adc pop dec push inc inc arpl cs popf nop (bad) cmp mov stc fidiv stos sar enter cmpsl adc (bad) inc xchg out push pop lret fnstsw fstps rcrb mov mov int sbb ret xchg cmp nop mov (bad) int cwtl push sub xor push (bad) cmp mov pop bswap jae out push mov or hlt adc pavgw jp cld push jp dec push inc jl loope std call dec sbb mov and and loope mov outsb stos ror xorb sub notl mov adc in inc pop sub je or mov jno sarl dec push sbb push pop adc push inc dec mov stos adc mov adc pop mov adc cld fstps push je and adc add xor cld xor ror mov xor rcrl mov xor xchg dec stc mov sub hlt sbb sub movsb dec lods stc stos bound incb rol mov mov outsb xor into inc jmp movsb lahf add fist xchg push add adc cs lds je (bad) mov mov cmp out xchg sbb enter xchg inc mov push ret or int3 or jge jae aas icebp cmpsb or sub push data16 sbb cmpsb adc pop fs push xor pop outsb ljmp inc movsb pop movb int3 lods (bad) idivb shll loopne test and clc ss mov sbb xor lcall int3 inc das push sbb paddd inc (bad) xor cli bound cmp jecxz cmc test mov movsb inc mov aaa xchg or jge push cld mov push mov inc into out ficoml pop outsl popa xchg cltd int bound cmp xchg jp add imul dec mov push mov ljmp xor js lcall push pop sub jae add call dec sbb cs mov pop test fild jl test cltd sbb adc lock sub mov ljmp sbb sbb mov add cltd dec out clc pop add fadd fisttp add fnop pop and pop (bad) dec xchg xchg in lods mov in (bad) sub out adc dec mov cmp inc add adc test rolb movsl call mov clc int cmp test push in js push xor ds sar or adc leave dec push testb push sbb mov dec mov mov fistpll out xor jnp xor xor dec cmp inc cmp pop and lcall inc incl mov mov or dec lods sti xchg orl mov mov mov or inc insb aam arpl addr16 (bad) xor mov rolb cld pop mov add dec mov (bad) mov shll sarb popf push lods add mov jge fidivl xor (bad) jns (bad) xor push fldcw ret in ja (bad) incl mov (bad) fimull (bad) jae push xchg lock xor jo fadds scas sub shl sbb lret ret stos push add das aam mov sarb sahf rcrb and add jge (bad) rclb mov xchg fimull arpl mov test mov daa jmp mov enter and push cmc adc test sar dec in mov je flds test add dec movsl cmp imull dec dec jmp aam fiaddl sti dec movsl hlt xchg cwtl mov and push fsubr mov andl mov push es inc (bad) push divb rorb xchg pop push push sub lret push sbb aam jge inc xor enter and fdivp subb (bad) xlat fwait sbb ds cmp call push rol or add bound jl ljmp mov or enter mov test dec mov out (bad) in (bad) cmp jmp aam xor mov mov in insl and sbb fsts mov rcr sub add push (bad) mov mov push add enter popf lods lcall ret imul pop inc data16 mov cmc add (bad) js cld adc jb (bad) bnd mov sbb fildl sub fs inc lret push cmp (bad) (bad) push mov xchg scas sahf adc repz ss lcall push les sbb cmpsl inc int3 add fisttp dec xchg lahf dec pop dec mov out popa nop mov mov inc lods mov jg add inc stc scas data16 push rcll iret ljmp incb inc xchg decb mov dec stos dec mov (bad) jge data16 cmp push sub inc fist jne add pop cwtl add stos push jl sub or inc jp mov jge xchg inc push lret inc loopne outsb repnz dec cmp dec ret inc in and xlat jae pop call out (bad) mov test stos (bad) push loopne jge mov es mov mov pop dec iret sub ja cmp and pusha xor xchg cmp add cmpsl loope roll movb ret sbb fwait mov mov sub sbb lock int3 inc enter sbb lock inc cmpsb out dec inc mov cld (bad) movsl aaa mov sbbb push (bad) mulb jb dec xor inc jb sbb add jl mull test mov (bad) out pop mov mov xchg adc in sub inc dec jo (bad) sti mov push or loop dec sti popf mov icebp xchg xor add and mov popf fistpll push scas repz add aad mov out push hlt movsl stc mov aas (bad) in jbe sbb and int3 mov mov imul repz movsb mov test sahf les mov inc bound mov lock xchg push scas xchg pop into cltd inc jmp lods mov out (bad) out jns fucomp mov cmp inc jne dec arpl sbb inc mov scas addb sub (bad) cs hlt loope scas inc dec jecxz loope dec jecxz dec cmp jbe adc adc aaa add mov rcr jb pop jp jecxz rcrl mov sub xor mov mov aaa orl inc (bad) (bad) jno add mov push sub xor cmp js (bad) ss daa (bad) mov test mov and (bad) cmpsb sahf stos stos cmp or mov mov rcll push (bad) pop movsb mov test lret (bad) inc mov dec xchg clc data16 cmpsb dec rcrb pop sub stos call movsb out mov jo movsl out mov pop adc cmp call jge add jl mov insl imul jge pop mov pop call cmpsb fisttpll inc or (bad) (bad) (bad) jmp jl fstpl stos lods rcrb ds into dec push dec xchg mov lds cld jg lcall xchg cmc xor mov dec (bad) sbb cltd pop cmpsb push ficompl shl lret fisub or dec xchg inc (bad) mov push aam cmpsl dec les inc ret arpl cmpsl push dec dec lods or iret mov int mov ret scas std pusha clc (bad) pop mov inc cli notb loopne mov xchg sbb cltd mov xchg ret or pop movsb xchg shlb mov and sahf aam or cmp mov rolb dec sbb mov push xor jle mov repnz loop add popf aaa mov inc dec mov call enter dec jmp push enter jge in sbb inc addr16 dec (bad) ret dec (bad) mov scas cmp pop fsts out scas cltd push push sbb mov stos add sub stos sub pop stos jg inc mov pop sub das test lcall out push lock test push add push test mov imul or push pop pop push sbb pop outsb push xor lret or push mov xor push aad iret subb test dec dec xor andl and and or leave push mov push cmc pop xchg and xchg mov and dec test xchg (bad) (bad) aas (bad) xorl cmc sbb mov std loope and loop mov daa imul in cmp add stos out jb cmpsl cli fnop nop jge arpl jbe sbb mov stos dec dec loop loopne push scas sub ret ss cmc pop imul cmp xor pop jmp outsl push sar sbb or inc imul adc push clc es aad cmp mov test jb and fwait (bad) out add cmp push pop jl loope mov rolb mov or packsswb int3 sbb push or mov or sarb lahf sbb mov jle (bad) test les sub xor jmp inc inc out ja aad sarb mov fstpl addr16 cmc add add pusha push add dec lea mov dec pop jnp jl rclb cli das cwtl cmp sahf into push add mov andb sbb mov inc gs jl loopne sub cld inc jmp jle mov cmp loop lock sub sub shrb push (bad) movsb xor mov mov xchg push dec mov in ficoml add and movsb xchg mov or je adc mov ret cli fsubrl pop cmpsb rorb jg xor mov and daa popf lret jle sahf jecxz data16 pushf cmp popf xor arpl outsb or and inc adcl sar inc ror jle push into in outsl cmp pop iret mov adc or jbe aam out cmpsb or (bad) and xchg aad into xchg xchg test lret xor loopne shl dec or iret sahf imul inc inc stos add sub sbb sbb cli js jmp dec jbe lock sbb jl xchg xor inc shrl xchg sub mov loope mov mov xchg loopne cld in push icebp insb repnz add dec inc or imul jns lret lcall imul push mov jmp or push cmp out js js inc out (bad) lret (bad) std mov mov jmp dec loope xor mov add pop dec push pop xor imul (bad) xlat push inc inc movsl lea inc loopne or dec faddp out xor adc (bad) xchg jl test orl movsl mov mov or (bad) or pop inc cmp rcr fisubrl push mov lock cmp or dec das loop adc mov dec jno pop clc pop adc mov mov push aam lock sbb rcrl loopne cmp scas sbb mov bound (bad) push mov bound cltd pop mov and mov ret inc testb in dec mov jb gs sbb xchg in push inc pop xchg sub insb hlt xchg stc push inc push lret dec les shlb dec jle pop in movsb int mov jg loope and sbb (bad) aaa (bad) mov into and mov sub ret add adc or cli fwait (bad) mov pop cmp jae jbe adc pop ret (bad) mov mov stos rorl std bound inc rolb inc cli inc mov dec pop lock mov dec leave or out cmp push pop dec mov mov push adc xor dec or xchg hlt jb incl pop (bad) push and dec icebp bound (bad) cmp (bad) daa test ds xchg adcb sbb adcl icebp mov lock stos adc inc or jecxz or movsl add inc dec and cld dec hlt pop mov (bad) test rclb out mov jp dec pop cmc bound sbb loop sbb mov ret pop and dec mov dec xchg call pop jnp or lods (bad) adc push addl ds and into outsl (bad) cli cwtl dec ret add insl arpl mov cmp (bad) aad pop mov in mov negl or (bad) std add jp loop cmp push sub es pushf push sahf fdiv call sahf adc iret lods arpl test push popa fsubrs repnz sbb adc adc xor push and lock jmp mov orl cmovne push lock mov push jae (bad) jb push push push cmc cmp jecxz add aas or push mov push push xor sub and sahf stos dec pop jge decl test mov (bad) into in (bad) xchg (bad) push and arpl cmp int3 xchg or scas gs lds sub push fldl cld lcall or rcrb cmc ljmp mov push lea jb mulb or push testb pop inc (bad) aas cmpsb push stos sbb xchg jmp loopne inc outsb lret cmp int mov jns inc repnz dec cmp rcrb or adc data16 jge add out mov es xor rorl iret sarl xchg push sbb push and and sbb icebp bound icebp adc sub and clc hlt xchg cmp or xchg mov pop add ds sub and mov push pusha inc mov dec jp fwait insb and or mov add pop loopne mov mov push out push xchg or nop sub mov push ss and sub lds jns pop lcall add mov ffree xchg cmp or jp xor pop (bad) rcl dec pop out xchg mov loopne das es idivb xor pop loopne sbb mov jbe fbld mov insl cmp xchg dec cs or jbe sbb xchg mov mov fwait jo out sti dec popa pop push into push stos das add xor and mov cmp cmp push mov lret inc pusha insl sub mov pusha mov les dec (bad) cmc add lods pop callw dec mov mov fcom pop dec pop lock push push mov sbb mov and dec mov push cmpsb pop movsl add repz cli push punpckldq into push repnz add jecxz xorl das xor dec push mov (bad) inc nop or lcall lahf xchg pop and and sahf popf daa mov mov test dec nop test repnz sub cmp dec adc (bad) xor push (bad) pop repz sub push ljmp push cld ret inc dec mov push das and lea es outsb or mov xchg pop inc js repnz and cmpsb mov fsubl push cwtl cmp add and push shlb cmpsl pop dec ss dec addr16 out add jle mov test jge fwait lock cld jmp inc dec add iret push cmp inc test loop inc (bad) and mov cltd mov pop cmp cmpsb sbb jmp mov and hlt loope jl call dec lds push test cli mov imul and jg movsl adc jae das jecxz inc (bad) or cmp pop dec outsb pusha xchg push add xchg (bad) iret mov ja fwait jbe cmp scas std cmp enter addb pop sub push jnp or (bad) hlt fstl and ret add pop ret iret inc popf popa (bad) stos leave push jns je sahf bound mov js test xchg xchg push mov fcompl arpl xchg clc fcoml xlat pop loope int or fwait test and adc std (bad) ficompl stos mov adcb imul xchg inc sub mov std xlat push bound inc popa inc out jb add iret xchg dec jmp lds jmp cli jg (bad) mov decb loopne pop arpl rorl cmp cs inc sbb or adc dec aaa sbb inc and mov jns xchg pushf mov pop das jle push pop test fcmovb mov lahf push jnp inc and outsl cmp push sub adc jp,pt stos cmpsb insl cli stc and mov outsb es scas (bad) les dec pop mov jge (bad) xchg mov test cmpsl in pop push add xchg or inc adc mov das dec or pop jb mov scas push push sbb jmp aad inc and jp adc aaa pop and push into mov bound push sahf loope test inc out arpl mov inc sub xchg daa imul dec xchg add arpl mov inc push addb sub jmp jns mov mov pop gs push jo stos (bad) popf lea pop sbbb loop js mov push (bad) iret rcll sub fisubrl pop pop and sub and repz pop adc push jle out stc stos dec pop cwtl ss lcall cs adc or dec push stos mov popa and lret (bad) mov mov jg inc popf iret in sahf stos cmpsb (bad) lods pop mov fnstenv sub adc sahf pop gs dec or es cwtl lret imul sahf lret jae and cs in sub bound ljmp jns repnz imul jle dec aad loop iret adcl cltd ss jae shlb mov pop sub cs fcomi (bad) sub mov xchg push dec out std stos arpl xlat push in add repnz cli mov jns pop mov lret cmp test repnz push (bad) psrlw stos aad jae cs sti jp sahf dec lret test mov bound negl stos movsl adc test jae and daa mov jecxz ret adc sti fadds loope xchg ret clc dec push dec notb mov mov in cmp inc push mov repnz sahf daa inc stos imul std sahf xchg popf out iret jge mov cs repnz lahf test popf lret jae das fcoml pop mov (bad) mov stos lcall lock imul les movsb int3 cld pop into push stc enter shl shr popa aam sahf lahf out stos pushf xchg mov mov mov jnp jge inc xchg xor jbe mov sti movsl sub xor int3 inc mov cmpl pushl cmpsl bnd adc push insl sub mov xchg iret repz addr16 pmaxsw mov sarl stos mov push xor mov repz out mov test jl cmpsb jo xor cmpsl (bad) cmpsl cmp jb stos sbb mov ret inc rcpps push ds pop adc dec in movsl push or ret cmpsl repnz jne es fiadd mov mov mov pop cmp js dec push sub sub mov cmpsl mov sub mov and dec in (bad) (bad) dec sahf test arpl out xchg lahf lret mov arpl sbb movsl mov (bad) xor jl push aam loop pushf imul inc cmpsb (bad) add repz mov jo dec imull or (bad) int pop cmp jne clc add jl jns in cmp das adc cmp iret pop bound lea xlat (bad) stc push stc in fmuls mov xor push idivl cmp addl add adc push aas jbe ss out mov mov fstpt arpl sbb xor mov dec adc ja sub add dec fdivrp or setp inc repnz xchg jno cld jnp (bad) loopne lods adc adc xor and pop mov push xchg idivl jnp lret sub adc xor stc stc cmp mov pop jmp xchg dec pop jg cld int jecxz dec rsm fbld bound aam lahf aas std push fwait mov inc pop pop (bad) ficompl cld mov test (bad) cmp bound loopne inc pop inc mov push cli fs mov push data16 cmc loopne popa insb cli sbb aam inc testb mov push scas pop je cmpl imul ljmp arpl data16 add (bad) ljmp loopne in leave mov fild test les mov jbe,pt pusha (bad) cmp lods popf or sbb lds cmpsl xor ds mov dec mull cld addr16 adc addr16 outsb add ret popa cltd (bad) inc insl push lock cmc outsl and or arpl enter push mov jecxz lret dec jge jl and push cli cld add or dec mov clc fistp xor lods mov cmp jmp (bad) xor pop test lea js mov test lcall or cmp lock or sbb dec je and jge fwait sub test dec call ljmp aas sbb enter xor enter pop sbb cli push out mov je jp xor and and sbb pop ret test bound jns imul or bound add pop mov jbe cli jmp dec jbe icebp push jno inc cmp jg pop test xor movsl in xchg push mov insl inc mov mov push dec ret xchg cltd or loopne loop xchg mov pop jo mov cmc fcmovbe mov or push or andb rcll or inc outsl pop dec jge mov rclb push test lret movsl xchg cmc rcll aam jo rol nop xchg pop jg cmp aam push movsb mov cmp ss (bad) rclb xchg movsb je cmc jo pop and jge (bad) pop inc xor (bad) int3 dec pushf xchg sbb add shlb pop stos and data16 mov push mov pop stos pop mov dec add pop test rclb cmp cli xor dec aam dec in mov adc (bad) aas and scas cld mov mov push adc mov movsl sbb mov stos (bad) negb or (bad) pop aam outsb aad sub mov cwtl and in push xor into push pop mov hlt (bad) loope mov pop sub mov jp addr16 inc arpl inc iret incl mov and arpl test ss add in (bad) pop mov push pop sub inc fdiv pop add icebp mov das repnz je lret lods push push bound pop or lcall mov push inc test sahf add into jo pmulhuw (bad) test pop add outsb icebp pop xlat test je into jecxz xchg inc or bswap xchg inc inc fadds dec fwait movsb mov ds dec dec dec or out dec leave mov push xchg js dec mov inc fildl push daa aam jno cmc punpckhwd sysenter mov or xor pop mov lods push mov or (bad) ja imul fcompl cs sub lahf dec push cltd mov in popa bsf inc std add adc (bad) mull and dec cld cmp pop roll add fidiv cld dec xchg xor out sub clc mov ret ja dec push sbb sbb sub jb jp push pusha push mov and cltd dec icebp scas sub or outsb sbb pop mov inc push mov (bad) or lods mov adc push pop and push divb add add xchg and lods jp mov incb test mov xchg pop (bad) cltd push push fldl pop (bad) fwait sub int3 cli xor inc add and push mov enter xor sbb dec jmp cs mov aas pop lret add in mov push mov inc and (bad) rolb rolb inc inc and pop sti mov inc sbb xchg xlat aaa (bad) insl dec jecxz cmp movl add cmp jp pop hlt pop lock and loopne pop pusha in std adcl rorb jecxz lcall push add add stc inc scas insl xchg imul pop scas test cmp adc dec bound mov push in lret decl jl (bad) aad lods cmp and mov cmp (bad) sbb jne jp adc and mov enter xchg pop ficomp dec adc pop sbb hlt mov xchg xchg or pop (bad) push stos ret jnp xchg mov mov mov pop dec inc loop into hlt scas xor aas loop push adc ret cli cli adc fimul or jo (bad) mov arpl or mov dec adc ljmp enter xor aas mov jge (bad) and xchg inc sub and cli mov cwtl sbb xor hlt aas fsubr dec and cld jnp pop mov fidivr pop add jb or sbb pop pop or enter add movsb jmp outsl fimul and mov jge add jl test add pop xchg push xchg pop addr16 jl dec sub push ret out outsl scas fbstp add in das and out mov jge dec push lret stos jb lahf repz mov lock sbb lea lods in cs pop mov add cmc pop inc popa push std add scas xor xchg xor in movsb pushf sbb push lret jmp std clc push push fs (bad) xchg mov mov movsb or outsl stos jmp pop inc das or pusha jecxz dec ret pop fnstcw enter fs arpl js lea pop sahf test pop int3 jecxz or jmp inc (bad) call push and mov push and add xchg hlt (bad) mov call adc cld mov inc jle orl pop (bad) push jbe and fildll movb (bad) dec cwtl (bad) (bad) icebp (bad) jnp iret cld test jo jbe xchg repnz scas inc jae hlt and ds add sbb jno adc int jb pushf scas mov in mov cltd sbb cld inc jp,pt pop cmpsl mov mov or das cmpsl jmp mov repz sub push push mov mov mov push xor push icebp dec call mov cmpb jl jl xlat sub (bad) pop std dec adcb mov mov mov fs dec lock repnz xor enter sub shlb cmpsb cmp xor scas in aad sti jo sub dec fcom loop addb jno out push fisub xlat ja sub mov sbb cmpsl jbe dec mov ds fsubs sahf pop das lret inc jnp inc inc inc cmpsl pop push scas (bad) mov or clc scas add push je and xorl hlt push adc mov push add sbb scas loope cmp stos iret mov jmp and jo push mov out mov xor adc add inc or mov adc sbb sbb and test (bad) ljmp outsl or sbb sub mov mov ss jnp stos pop mov xchg test push loope mov xchg inc (bad) mov insb data16 (bad) out and cld pop cmpsl mov (bad) hlt cmc inc adc (bad) mov data16 js jle ret cmp cmp inc push push movsb aas or dec mov daa xor ds repnz jle mov stos and or jnp pop test inc sub lret (bad) je notb icebp aaa or ret mov cmp sbb xor mov insl sub loopne dec dec ds jecxz jge lcall jbe lret mov jbe or aas push popf pop and incl in rolb dec push push inc hlt repnz inc test inc or add test dec loope xchg adc mov push scas adc jge add xchg movsl sub jns adc sarb rclb mov inc cltd inc fisttp or cmpl mov lea cltd jge push (bad) int3 ja dec sbb hlt xchg pop mov hlt test bound inc dec jmp js add dec scas out gs movsb dec mov outsl inc scas jnp or mov test call jbe sbb scas (bad) mov scas dec js (bad) aam sbb data16 xor or add mov rclb mov iret outsb es nop mov ljmp stos push add fildl inc pop rcll jl jbe inc popf fmuls mov das pusha movsl mov stc push gs xchg add dec into arpl loop pop and js push cmp arpl andl pop add in add sbb sbb mov outsl xchg pop adc imul push jp add fldt loopne divl and cmp pop push lods sbb inc pop out push fcompl mov inc aas and and aam js (bad) dec jb pusha nop add insb sbb (bad) out add inc mov add les inc andb pushf dec mov push outsb sbb and loopne inc repz push sub jecxz scas or call ja ss movsb gs imul mov sub sbb cmp mov and pop jb cli mov mov (bad) fidivrl push pushf ljmp aad sbb jge gs dec mov push adc push aam scas push and lods sub mov push dec testl inc frstor push loope xchg push ss cmpsb ret mov xor insb cmpsl mov jb pop out sbb lahf mov jb fistl add mov mov xchg push add sbb mov pushf or jb xchg mov scas sbb mov shrb loopne (bad) lock sahf imul sbb cmpl jo xchg or bound in imul jmp iret ret push xor fcmovnbe xor sub rcrb out rorl pop xchg pop jge pop add fnstcw mov push addb jnp dec nop jl (bad) fiaddl mov xlat lret jge lcall pop sub loope dec add jbe fisub pop daa add aas ret aaa dec jne sbb stos rcrb pop in mov dec mov in into jnp fcompl push stos stos jg lea jbe mov lret ficompl dec decl xchg jbe push les rorb cmpsb push loopne (bad) int3 mov inc aam lret or aam cmp fsubrl sahf lcall push loopne or push sahf cmpsb or mov stos inc call negb mov mov inc lock sahf mov jnp dec pop jl xchg push clc mull pop jns ss decl lods dec and subb scas sarb fwait inc push in mov jecxz or loope jmp jo sub and aaa mov sahf mov in mov sub clc xchg mov xchg push mov sahf mov rorl test mov push jmp ror mov and std dec ret mov push std outsb inc xlat push sahf xchg fsubrl pop push inc subl (bad) out lods and repz insb xchg jge xchg clc xchg jmp push add xchg (bad) (bad) (bad) mov mov xor or mov mov (bad) (bad) jmp sbb fdivrp (bad) outsb lds fsub and lock fcomip stos dec sarl adc sub clc adc sbb in aam stc (bad) mov cmc or mov jge push nop mov sbb mov jbe push sti mov push fstpl cld cmc ret pop call mov inc shrl mov mov (bad) jg mov (bad) lock in mov jbe push into mov inc xchg (bad) (bad) (bad) ljmp sahf lea int mov push (bad) fistp mov mov inc not push hlt push sahf stos sbb ja in mov inc ret push sahf mov mov imul jns mov pop push fs bound jg incl sub sub mov pushf adc repnz or or icebp xchg data16 (bad) dec cli lods xor and (bad) or negb js,pt leave (bad) mov scas fcompl push jmp (bad) sti lret mov inc rcrl and xlat sahf into or movsb cmpsl push pop and sub lahf pop mov shr adc sub enter lcall sbb popf cmp xor ds (bad) jp cld sbbl push xor dec enter fdivr cmpsb pop movsl bound cmp (bad) xor sbb cmc stc mov (bad) and xchg pusha shl adc movsb xor les jmp jmp add imulb (bad) rolb ds div jmp repnz ljmp movsb mov sti mov (bad) test cmpsl push (bad) mov push push ljmp mov fnstsw lahf jae jmp jo xchg lock and adc mul lea adcl xor movsb arpl (bad) jmp daa xlat push in (bad) fs test test mov rcl icebp pushf push (bad) add adc lds into sti push std xchg clc pushl iret rcrb add sar adc mov push push xor icebp xchg std pop in jmp pop cli lods (bad) mov dec mov xchg or mov cli scas fildll add sahf mov fldt xchg clc int aad shlb nop (bad) ret (bad) mov (bad) mov sub orb mov mov (bad) fmulp push mov push in (bad) rorl cmp and loope incl sbb aam xchg (bad) mov mov lock or lcall test pop jge xlat inc add in mov insb pop mov push lods push and sub or (bad) push icebp sar jmp aas (bad) fnop shr push lret clc cmpsb ja push (bad) decl cmp sahf popl test lcall xchg stc mov pop fcomps imul andl mov out popa push sbb pop orl cwtl inc clc imul leave dec xor ret jmp adc repz pop cmp out or mov xchg fbld lock enter or pusha mov test cmp fucomp sub mov mov pushf inc (bad) (bad) ss stos fistp scas orl xor mov inc (bad) pop lods sub fwait test loope push aas add dec stc mov rolb test fs mov inc or mov jb ucomiss scas (bad) push cmpsl fstl lret mov shr repz roll or pop loop inc (bad) jo (bad) jge fcompl add inc in mov (bad) leave dec pushf push inc add sbb int3 je fidivrl (bad) lret pop jge lret jae icebp cmp or sub (bad) movsl cmc js rorl xchg dec pop lret or sbb (bad) (bad) ss jnp aaa or (bad) xlat movb pop pop pop sahf and ficom cld push cwtl test (bad) jnp add fldcw cli sahf js mov mov lret mov jb (bad) roll mov sub out fistp fstpt lret pop jge cmp icebp test xchg cmp push not (bad) out daa lea out jbe mov (bad) mov stos xlat mov lret push and ds out test lret ret push in ljmp mov sbb push jp into lock arpl pop test xchg cmp xlat hlt push (bad) cwtl mov push movb xchg mov sub loop es jmp sub xor mov jnp bound push mov jne sbb imul sbb xor fstpt add pop (bad) sti xchg push scas cmp mov roll iret add (bad) mov adcl xor (bad) ds sbb (bad) aas clc addr16 test mov scas in call add leave pushl adc xor popf sbb fnstcw (bad) (bad) cmp cmp shrl addl mov pop mov jge mov dec push enter imul loopne jmp (bad) lock push push int3 movsb cmp rol pop je (bad) icebp or test outsb and sahf mov ja push sub or or and aad pop enter mov call test fdivr (bad) hlt inc rcrl repnz test aad xchg lcall cli xchg adc daa leave seta mov jg call xor test add aad das idivb call aas jmp loope add add and jnp out pop jno rcll cmp (bad) xlat mov loopne and into xor je jge out pushf adc decl sbb out xchg insb lret fildl fisubrl jge or ljmp lock test scas inc cmp aad adc lret sbb mov or rclb fist mov lret dec shlb rclb je push (bad) mov add clc mov pop inc enter sahf int3 dec (bad) cmp cwtl sub mov jnp aam ret jmp fnstenv mov loope push mov stos mov dec mov push je xor push mov call ret cwtl sub inc sub outsl lret add dec mov mov mov mov pusha test mov push push mov rcrl mov fidiv jge inc jmp dec sbb in push div jo rolb leave (bad) push mov sub mov mov and shrl mov stc fsubrs push aam cwtl dec sti dec fs pop sbb loop sub xchg inc repnz jge imulb roll inc push fisubl rolb jge into mov xorl cmc rcr xchg imul jge sbb mov lcall jnp cmp cltd daa push ret jge scas pop xor lods push in loop dec iret clc fistpll out es movsb stos jge adc mov lret xchg rcrb fwait nop mov stos jge bound mov mov out lcall (bad) negb not loopne ret and test sbb mov sub push dec adc movsl roll rcll popf out sub stos push ss push into (bad) mov loope repnz neg cmp lds push (bad) fcoms lret bound pop xchg jge lret imul stos jo pop xlat mov (bad) mov push out fsubrl push push pop adc push ds scas leave shrl enter push mov mov (bad) scas out sahf cltd xchg push les jge inc mov mov stos mov sub mov jecxz (bad) stos jge es rol (bad) not cmp jmp subl add test js into mov or and pop push mov mov jge subb inc jae cmpsl mov and push push std push (bad) xor sbb xchg in cmp pop pop nop out mov add hlt xchg jge adc into inc into sub test test cmp xchg stos ds test push mov jno sbb sub sahf aad test stos mov (bad) mov (bad) cli sahf (bad) or insl enter jae mov mov ss or (bad) mov ljmp jp loope popf fisubrl inc jmp (bad) loope icebp (bad) ffreep push imul aas mov adc call inc mov xor mov ja out lock test icebp call fcomip xchg addr16 fwait sbb xchg sarl xchg insb fucom nop sbb sub idiv jg call sarl lock add fdivrs (bad) pop iret test mov and pop ficomp rolb (bad) decl lock xchg adc shrb sub mov jecxz pop cli fdivr xchg mov and fldt adc test loopew jns cmc inc pop mov icebp jne inc or insb test xor rclb dec scas add push test cmp enter rcll out pop cmpsl cmp rcl out mov jmp sub pop (bad) pop jge test int cs lods or (bad) test into ret sti into out fdivr popf pop xor call mov sbb aas xor sbb in test mov aas and dec mov jns into (bad) xlat rcl lods rorb cmpsl push cmp jl cwtl jg add push mov out ficomp seto stos cmpsl mov loope xchg pop pop dec mov xor push jge mov clc lahf aas add clc mov loope js (bad) aam cmp leave sbb popa xor push icebp mov push push (bad) pop or fildll adc arpl sub mov jns mov test pop pop mov jne sub lret xchg sbb mov aas cmp xchg (bad) xchg fmul inc jnp ficompl jge shr fwait lock or test push jecxz sbb out (bad) je out daa (bad) jmp pop jge dec shlb dec leave aaa arpl subl jne add jge fmull or cmp mov test dec shr push call add cmovne ss jnp idivb jl pop mov xchg ds cmpsb sub and xlat popa rolb out xor mov fs int3 idivb jge test fcmove rcrb push mov xchg xchg xchg ljmp popf cs inc nop testl dec xchg mov push mov cmp subl mov or and inc jl or jge stos or dec sbb mov cmp mov ds dec jge cmpsb leave adcl sub add mov cmpsb (bad) fistpll (bad) jge xchg dec mov xchg (bad) mov cmp push stc fdivr fdivrl test lret or fstpl mov jp (bad) mov push out mov push inc movsl sub mov or lret push sbbl jge and sub lea sbb adc cmp push test push mov mov scas pfrcpit1 push fisttpll xlat cmp (bad) shrl ret sbb in orl xchg fidiv (bad) loopne rcl xchg bound mov les stos lret and jle decl clc repnz jp (bad) nop sbb sar xor or sti cmpsb pusha ret jmp pushf and ret cs push mov loope pop ljmp aam xor inc mov mov (bad) call mov fcmovnb aas adc xchg int3 cwtl sbb mov jge into aaa cld imul shl aas xor cld sti xchg cmc (bad) in lcall loope aaa scas xor push icebp subl loopne scas or scas mov and or sahf (bad) dec daa sub cmpsb pop adcl nop xchg jge popf inc call in ficoml insl mov (bad) inc or jmp push mov rcrb pop (bad) jmp pushf pushf jl insl add inc cmpl lods pop dec sbb jg and (bad) jle,pn sbb push sub or rol lds imul add (bad) inc jne enter es mov fs (bad) cmp je jno or jp hlt add pop (bad) mov movsl jbe push test mov push cmc out sub lea jne out xchg dec xlat insl or add out fnsave leave into notb cmp jmp lock adcl cs das (bad) push sub out test aas cmp roll stc sbb addl push stos ret xorl dec mov cmp fisttp daa cmp test je and (bad) jl nop mov js xor mov adc jmp add fistpl sbb rorb add mov popf rorl test xorl cmp sbb xchg movsl jge orl sbb lock jae fwait sahf mov mov mul pop test loope shrl xchg push fcmove (bad) sbb xchg cmp pop ucomiss loopne push adc subl dec (bad) xchg cmp test pop or push test mov cmc push mov xchg fstpt sub hlt test and idivl clc cli sahf add adc push push loop mov rolb lea in rcrl (bad) enter das icebp mov jp push lcall jl push jmp ss sub lret mov aaa imul rolb rclb iret aad push lret enter cmp push repz dec add jmp fistpll mov stos sbb das fistpll xor das jge pop pop sbb fcmovnu cwtl stos rorb pop pop mov cmp ret test inc iret push loope clc sub fidiv mov shlb lods sub mov (bad) fbstp add hlt dec test xchg xchg movlhps xchg pop test outsl jmp roll xchg and es mov push pop mov mov cmp imul pop add stos inc pop insl push mov (bad) ffreep push jno sub lds lahf add push jnp pusha xchg gs jae jge movsb in sbb cmc into ret xlat aad xor movsb ss ret pop loope fcomip adc adc sbb push mov cmovg out add xorl mov cmp push or mov pop inc mov not out push popf subl (bad) mov and shrb pop out sub into mov or and inc subl xor in mov inc movsl or add xchg mul sbb bound pop sub cmpsb mov mov cld pop fcmovnbe pop or out aaa stos sub scas arpl push mov nop cmc adc sbb repz dec mov sub jge repz dec pop (bad) sbb fistpll add pop dec stos fistpll (bad) mov cmpl push lods mov mov imul inc stos inc jno push xchg loope jl (bad) mov ror lret les jge test inc mov cmp (bad) and fsubrl (bad) repz lret lea or mov (bad) mov insl xchg adc loope cmp dec mov push test shrb insb fadd push sarb (bad) and mov jb addl push jae sbb cmp (bad) mov into les push shrb into test leave roll call popf flds and ljmp (bad) ljmp stc xchg xor sub std rcr add mov sbb jge sub adc pop push pop mov in out jl push je loopne jns mov push ret mov js mov daa stos sbb (bad) (bad) mov add es dec loope xchg mov mov mov (bad) gs jp rclb (bad) mov inc movsl or addl stos mov cmp dec add xorl add (bad) mov adc dec mov cltd into push cs cmp cmp push ds lea mov in outsb movsb sbb std dec xor inc enter pusha (bad) push stos stos jge call iret test sub ss jecxz (bad) dec jge stos mov adc sub push sbb pop imul mov rolb jnp or mov (bad) mulb je jmp fisubrl pop add xlat out pushf push sub ss cmp inc mov fdivrs ja mov cmp loopne cmpsb rcll loop stc paddusb test lock ret aas lds xchg xchg popa cmp out push adcl (bad) mov stos popa imul sbb dec in lret (bad) mov nop unpcklps lret sahf or (bad) sarb jge or shl (bad) sbb pop test mov sti xchg jg cld push mov leave shlb cld sahf add rorl mov push jmp scas rol movb ret or or push push and cltd stos subl out inc mov pop sub arpl shlb push nop mov mov xlat imul xorl (bad) mov and sahf lds adc add stos rcrb inc adc lret je mov adc (bad) jns cmpsl xchg push test push xchg push push cmpb mulb (bad) mov add out popl mov (bad) sti push cmp push push pop pop call bound pop jle sahf rcr sahf imul jge roll in jo nop bound xlat cmc out mov in aam movsb pop xchg addl cmp push (bad) stos jno test add mov dec mov jno lods rorl rcrl icebp xchg negb push loop xlat lret lods inc iret jp mulb inc arpl push lret rclb mov jnp ds mov jge add push push iret push movsb xchg jbe lds or jg pusha sub scas gs cmp adc gs or xchg push xor loop mov jmp or xchg loop cld or mov mov in in idivb add (bad) pop leave sbb stos loope call add push fwait je rcrl js lods mov add cli dec sub int or jge iret loopne mov jp repz ret dec ret (bad) mov jae add repnz loopne pop scas sahf push dec mov roll push xchg hlt arpl mov out (bad) insl aam ja jo ret test stos aas mov pop mov cwtl js pop (bad) mov add popf adc iret or jge inc int3 and mov jp bound inc push lock mov es hlt add fadd pop mov push push mov out aas xchg and lret pop adc pusha and push push xorl movsb out std arpl or out test fxch insl lahf xlat mov loope in test pusha ret cwtl (bad) into ss addr16 mov out dec push add push es rcr test enter lock out hlt mov adc (bad) adc push es jge push push lahf pop push inc rol loopne sbb js pop inc test cs int sbb das mov test test lret xorl sub jl adc icebp dec fisubl add jge subl sahf xchg jno inc sahf sub mov daa insb lret mov push cmp mov (bad) hlt pushf mov inc data16 pop pushf pop enter les test push lods xchg fildll mov mov mov imul push lret dec (bad) sub jge sub lahf cmp nop or pop popa push dec daa enter push addl push shr fimull (bad) leave cwtl push inc iret xchg pop (bad) cmp and mov mov xor mov lods xor or pop inc xorl int fs push ret or mov push mov aam mov pusha fisttp scas ficomp xorl bound pop fdivp ds ljmp fistp adc out pop imul cmpb (bad) rcll (bad) mov loope ret xchg lret push xor add rolb or (bad) mov mov sbb aaa mov cmc jo data16 imul out in add popa iret adc mov xor adc sbb or (bad) mov test add dec fwait lret xchg pop add jmp (bad) mov out xor cmp push mov inc push jl lret mov pushf out jne lcall sbbl pop les loope or loopne pop sbb daa (bad) pushf push xchg push movsl pop aaa push xor and in cltd jns fistpl shrb xor or ljmp mov dec and pop and push mov roll push inc jecxz jmp push push clc adcl mov xor arpl add shr push mov pop insb mov jge ja (bad) jae and or ss push xchg jmp addl ja jg popf insl and test loope sbb xlat sbb icebp shll rclb pushf test daa pusha jb stos jge pop loope mov rcr sbb test lock cmp loope in and push fwait stos les adc (bad) xor push test iret lret jge into leave add js fs jo movsl mov lret push sbb (bad) test or xor (bad) orl mov aaa and jge loopne int3 push imul (bad) loopne outsl hlt inc bound rcrb mov imul lods jmp push mov pop mov imul cs xchg notl jbe push dec lret mov in (bad) aas rcrl sub (bad) fiadd mov inc (bad) mov cmp jb jmp in cmp mov adc test std sbb stos mov and xor lret scas push cmp sub dec mov aam ret rcl xchg and push xchg popa push cmpsl or mov sbb rorl test push or jge in or xchg and lods adc mov adc mov xchg mov pop mov push fst ret pop ret xchg mov das shrb jns pop (bad) mov in ret jne mov icebp das xchg xchg and mov pop cmp xor test sub jge cmpsb (bad) shl loopne std (bad) lock (bad) xchg push sub pop xchg lcall les sbb pop or repnz out in adc aam push scas ud1 ror cmp sbb aam fistpll and xchg pop lcall mov ja adc clc movups neg mov cs cli aaa sbb out outsb jbe xor (bad) mov rcl cmp imul jne leave dec orb mov pop mov cwtl jge xor cltd scas adc xchg call ficoml push dec sub in xchg in pop sahf mov (bad) out xchg rclb (bad) cmc ljmp xchg dec stos loope imul cmpsb jmp addr16 sub ret bound push rolb push xor sub nop lcall (bad) fsubrs out shrl cmpsb jl in add and cld (bad) (bad) jg scas push pop mov jbe pop push test (bad) or outsb (bad) adc daa xchg mov mov xchg mov fldcw add mov push (bad) (bad) pushl fldenv add enter sub hlt dec inc (bad) mov inc pop mov ljmp (bad) mov add mov dec pushf outsl mov or sbb lahf sbb mov add out sub cmp dec sbb cld (bad) call cmp jg jns push push mov push pop outsl mov out imul ja jl pushf (bad) cs xlat jne pop mov int adc in js or cmp push sbb and (bad) (bad) dec fidivr xchg xchg dec fwait mov sub out push mov and dec iret testb int scas and (bad) (bad) (bad) ljmp aam cltd jnp jmp rcrl mov cmp jno fsubrs xor clc xchg (bad) decl aad test pop jmp into fldt int ljmp mov shll jle (bad) jnp scas cwtl sbb (bad) (bad) ljmp xor add (bad) orl int enter shr add push shrb leave inc fist cmp andl (bad) incl sub jb xchg pop xchg in inc aam jmp (bad) test addr16 pop lret cmp in mov ja cmp lods pop mov lods repz loopne jmp jp push (bad) hlt rcrl (bad) hlt mov cmp or sub ret lahf jbe std (bad) (bad) std nop rclb adc inc or jl push ficompl cli fisttp (bad) (bad) push scas inc sbb and inc xchg pop sbb (bad) dec cmp inc push sbb ret ja in repnz (bad) incl mov outsl es pop loopne ret jbe notl mov lods out mov das adc bound aaa (bad) mov xor ss gs scas iret inc ss push push inc xor cwtl sbb sbb pop repnz fcmovbe push push add je adc rcll cmp xchg mov (bad) (bad) fisttp jne pop daa je push push sub sbb jecxz shlb push incl hlt sub scas jno scas scas fcmovne loop es (bad) (bad) jmp ret jbe imul sub cmp test jno das popa push jno xor push js cmp fisubl ljmp sbb (bad) sbb data16 jns lcall and stos mov xchg mov mov jle cmp (bad) (bad) lcall (bad) mov mov out popf push popa (bad) xor or gs lock or popa faddl push insb jmp fs sbb aaa push hlt (bad) dec sbb imul sub sub jo jecxz (bad) call xor fild push push adc jbe mov js sub xchg jae (bad) lcall jb (bad) ja dec push push lahf inc (bad) fld sbb mov dec dec xchg repnz (bad) incl sbb test pop add inc test aas mov pop jge or push aam ljmp and mov ds aaa inc sub leave jb (bad) out jae lods mov (bad) ljmp addl or push stos fwait sbb dec in (bad) mov mov jne (bad) (bad) jg adc jecxz stc and fidiv mov push js test mov loop cmp in (bad) (bad) mov mov out in xor in jmp pop decl (bad) (bad) push icebp mov mov (bad) fs into scas lods inc iret add test (bad) (bad) push dec movsl and xchg sub xchg or push popa dec clc mov adc fbstp sti or (bad) sbb jp sbb decl pop fmul (bad) push push pop mov jo and in shl xchg sti fnstcw cmp lcall adc push xchg (bad) and int3 xchg clc int mov sub xchg lret int jge int3 cmp jmp int inc mov xchg fs mov int3 xchg push pushf dec sub ss popa aaa lret sahf (bad) (bad) mov pop jnp push call test push repnz leave push adc lcall pop adc mov jp add pop adc adc fwait mov mov cwtd jg outsl dec xor loop stos and jle jbe hlt test xchg cli decl sub adc cmp adc (bad) call mov push dec sbb call pop dec movsl jnp add mov scas leave sbb (bad) (bad) dec jl jl test lahf shlb push fidivrl xchg cmpsb xchg lret (bad) (bad) (bad) jmp icebp hlt xor lods pop jge mov (bad) (bad) (bad) call adc mov adc mov insb pop mov dec dec mov in in dec (bad) (bad) jg mov mov mov hlt and xchg in mov leave dec (bad) (bad) (bad) dec ljmp jmp push add mov mov inc jnp adc xlat dec aas outsl iret inc arpl out sbb fwait or sbb loope in push push lcall mov loopne fidivr fisub sbb cmpsb xchg push pop add outsl shrb rcrl push movsl jnp mov pop mov mov fidiv adc lea dec lods fstpt and insb cltd imul test iret out loopne jo inc (bad) mov std (bad) out pop xor xchg adc inc sub fucomp jge insb into ljmp mov repz std call push sbb mov es xchg dec (bad) sahf add (bad) mov aad pop add aaa add jg repnz mov je xor (bad) or or or cld jmp es pminub ret aas adc mov enter shr mov idiv and fisubr or movsb aas lret ret and enter mov mov mov movl in add ljmp cmp (bad) jg sbb push xlat sahf scas inc ljmp shll sub add mov jg jge ljmp sub cmp ret fwait lahf aas add fs jnp ja in imul inc mov push rolb mov (bad) add mov or mov les xchg push push adc fcmovnb dec std imul mov (bad) cmpsb dec jge mov jg aas inc out push lahf nop mov pushl rcrl (bad) icebp rorb mov fnstcw loopne jb addr16 dec (bad) jno jge push xor and inc xchg jb mov jmp (bad) aaa stc sub adc jno lret cs xchg inc push call outsl sahf and sub leave mov push data16 loope sub or shrl push push or jb dec pusha add test mov and add xchg push push sbb or adc push rcll adc lods mov add out add push aad pop and push xor push adc call and push addb inc add or and iret xchg cmp dec add add add push fidivr dec imul stos add int3 scas ret add (bad) sbb push inc ret cld cmp xchg xor repz je and cmp ljmp imul cmp hlt ret loope xchg jge push mov (bad) (bad) incl pop fisttpl xchg jmp rcl xchg xchg (bad) (bad) int cld data16 inc (bad) pop into (bad) (bad) (bad) pushl mov ret xchg cmp hlt xor ret mov jne (bad) (bad) (bad) pushl scas repz xchg and jne xor ret sarb mull bound imul pop (bad) lcall in jno dec fldl xlat pop lds loope pop test xchg (bad) (bad) (bad) decl stos mov xchg or jne add push mov push mov xchg ja sbb decl push incb (bad) jbe lret incl sub lahf aas and mov and and stos out stos push arpl out mov xlat movq and add and outsl cmc dec push js jae enter push jae or std cmc out push cs mov xchg add push push sbb inc imul dec loop and in arpl pop fucomp mov push ja fs bound jns loopne jge jbe sub je adc dec adc out imul imul ret popa stos push popf mov dec outsb je adc push pushw fs rorb or add add mov xor subl fs jbe push jo je test push fs xchg xlat jecxz inc outsl insl cmp cmp mov cmp (bad) imul js push sti push inc mov push fwait scas inc repz ja push push jae,pt inc xor das pop repnz mov arpl imul gs lock loope sbb jmp push pushf cmp outsl mov out fnstsw sub bswap mov dec jo ror adc adc outsl inc lods (bad) sub and aaa adc cmp cmpsb iret insb xchg adc pusha push mov xchg dec fistpll pop cmp incl insl mov cmp insb dec addr16 or push fs outsb iret dec pop jb divb push pop addl aaa jns insb in sarl bswap cmp scas outsb jg pop jno gs or push xchg sti out sub push outsl xor xlat cmpsb popa jmp arpl inc fisubr push mov push arpl imul xor enter and inc mov das pop jl call sub jae mov outsb stos rcrb mov and loopne loop sbb or lods sub stos push in mov add jbe push lret inc orl (bad) push xchg sti cmp setle sbb je out fcmovnu (bad) pop jo xchg pop add push or pusha repz xor mov push lock dec cmpsl iret pop add pusha aas daa mov push scas insl mov cltd test jns xor and sub rolb ret cmp sar rorl pop and imul adc addr16 dec lcall push insb sub pop inc jo add xchg mov arpl or shrb std inc out xor (bad) xchg test adcl sub iret daa fwait add bound sbb (bad) cmp shrb addb or sbb push pop inc lahf imul lahf sbb stos add or adc inc aad adc daa xchg push shll add daa es xor pop inc iret pop adc dec and cmpsb fs or add jb jno or cmp jecxz push pushf xor jne aas push adc je cmp aaa addr16 mov les jg scas inc push addr16 adc sti shrb and or cmp mov test add ja mov out push das (bad) lret push push dec sub push add lods jbe xchg cmovg mov sub push mov pop xchg dec jg dec cmp addr16 jne ficom and daa popa jno mov int dec adc hlt in pop push sbb cmpsl aaa push (bad) sbb push ja fmull repz mov adc addr16 popa test movl lret (bad) ljmp (bad) jb sub xor fwait scas sub insb sub or out js,pn addr16 xchg xchg vpunpckhwd push sbb mov mov sbb cmp jne dec sub inc icebp cmpsb inc jecxz test add pop scas push loopne pop es mov loopne (bad) shlb js sub int jnp jbe jecxz jmp mov inc jae inc or mov or push jae xchg cmp push test add loopne (bad) push mov jp inc daa or mov rorb popa ret pop je push pop jo jns,pn mov pop andb insb popa je lret pause push sbb hlt pop jmp cmpsl mov sahf cmpsl or das xor xlat dec dec js push and or xor mov scas orl fdivp jmp and lcall decl push jg mov jp addr16 scas mov pusha out xchg and xor ret imul das adc andb sbb xchg (bad) xchg popa jg xor comiss jmp and (bad) stos mov out outsb lahf mov out dec xor jecxz loopne or dec mov lcall cs xor aas das xor sbb pop ret or aas pop addr16 push push or inc outsb das push imul test push push popl scas imul mov stos maskmovq notl aas inc sbb fldt push or bound jne aas shl loop addr16 sbb sbb subl xor sbb pop sbb inc adc pop xchg add (bad) push jp insb aas pop stos jne inc jnp (bad) jae xor adc andb xor push mov aas cmpsl inc nopl (bad) mov push imul push inc insl sbb shl imul inc adc or mov mov mov or jo sti or mov jbe (bad) je pop adc adc or sbb scas cmpxchg mov inc sbbl test push sub rorl adc stos shrl dec (bad) repz divps addl xchg push add fwait sbb pop scas je insb and mov jo xchg inc xorl xchg add push sub daa push cmp fimull xor adc pop push and mov cmp push adc add mov fs pop ds or nop or xchg fiaddl fiadd rolb popa test mov or jecxz adc mov arpl sbb sbb jnp xchg push outsl pop je out jnp mov daa jmp aaa xchg push loop mov ja cmp push stos stos pop (bad) and cmp fwait fs addr16 jecxz xor add push daa and add out lahf mov js adc out fcom mov fildl adc loope ja sbb mov pop push or (bad) sub outsb dec or bound sub in test (bad) imul (bad) popa push lods repz jg mov rcll xchg scas xor inc aaa dec ja mov cmp and pop sub mov loopne fstpt xlat icebp (bad) sbb push mov mov xor cmp call jecxz pop cmp ja xchg stos lahf addl xchg pop and subl fidivl sbb ret mov push outsb push push adc call outsb orl dec push mov xchg mov arpl std sbb ja dec sti push cmp scas inc fildll mov ret loope data16 insb push pusha jne jnp insb sub aaa mov jg sub sbb sbb xor popa pop pop push mov (bad) push cmp mov xchg es add push stos arpl loopne mov push push inc rol mov cmp push das sbb pop sbb cmp push sbb mov sub bound sub imull pop lds pop sbb imul dec dec lods sti rclb or mov sbb dec mov add adcl sbb mov les push or lock lcall add ficompl mov or push and mov adc inc pusha inc adcb push push sbb add xchg sti out add rol inc and xchg push lods aam shrl dec push pop xlat pop (bad) movd add adc pop or push daa sub xchg lcall lret outsb pop or jbe movsl arpl aaa imul xor push pop mov pop bound xchg pop out shrl scas inc out loope fiadd inc xor ficomp push mov sbb push mov jae (bad) imulb iret daa dec out xchg sub cmpsl insl inc imul or rolb inc pop test (bad) js add aad adc jnp ja sbb scas push inc inc adc mov sub dec (bad) push lret cmp stos or push inc out jb (bad) test pop jo or xchg pop fcmovnu out into loope xchg jecxz mov xor aas fbld das popa push or xlat xor jge outsb cmp mov outsb insl inc dec xor aas push decl and call adc pop pop cs push je,pt xchg daa iret stos rolb scas les push add cmp or sbb sub inc (bad) jecxz mov push dec pop dec pop dec mov adcb sbb jae out in mov sub mov sbb inc add push (bad) ja adc push fcmovne dec loopne mov outsl xor cmp jae adc lods addr16 aam sub dec adc pop roll lods les rorb add push out outsl pop cmpsl and dec inc push adc and shrl sub addr16 stos aad jbe,pn mov push insb pop fucomi stos mov sbb adc sbb dec rclb sbb mov ss and sbb cmp mov adcl push pop ja xor sbb rorb dec mov cmpsb stos push lds mov pop in sbb inc ret sbb or mov adc iret or dec jp jg push pushf xorb fisubl push sub jnp push push pop iret imul aaa push inc lods (bad) cmp loope cmp or and mov insb fldt test mov adc imul ret and and push out or shrl sbb or sbb sbb adc ret das jae iret lods bound out sbb inc pop pop add cmp into or (bad) lahf out add lods arpl mov add xchg inc jecxz mov (bad) push mov dec adc pop and sbb push imul xor mov inc cwtl sub cs jg pop push lods add sub xor jo,pt dec and mov enter mov mov mov inc nop call rorb xor xchg sbb (bad) xchg mov test mov sbbb ffreep or sbb mov (bad) ret mov stos adc jg pop jae adc sub and pop popa cmp mov daa inc daa add stos jo adc adc movsb jb pop pop loope push jle push pxor inc push rcrl push push inc outsl jo (bad) imul xchg jle outsb lahf rclb cmp pop mov jae or mov pop push icebp xor fimull jmp cmp fidivl imul jae fisubl dec push mov daa movl scas inc mov mov push add jbe lock loopne arpl dec pcmpeqw xchg cs and mov mov add lds adc mov out cmp sub out dec mov mov sbb or inc (bad) insl rorl and xchg and sbb lods dec pop daa pop pop bound pop push dec xchg push adc ret (bad) mov decl xchg arpl bound stos ret jmp jg mov and jg add cmp or or movsl pusha adc inc and pop cmp ss jecxz sbb push jle push push mov fildl lahf add dec jbe (bad) jbe (bad) imul lcall push add inc pusha stos add sub adc popa add fsubs mov add fistpl cmpsl pusha mov pop mov xor jbe lahf mov jbe and dec imul mov addr16 jb add cmpsb and jnp jecxz (bad) popa pop cmp mov mov adc iret je lds xorl cmp sbb jmp xor jecxz cwtl or adc adc adc lcall push dec mov arpl push rcll push ds add pop rep (bad) cmp xor or fistl add push setnp arpl (bad) jb jg imul xchg sbb test jg mov ja mov push imul push idiv mov and xor in and pop inc inc push lcall or fsubrl push mov push cld adc adc inc pop lret scas jne sub jae js or mov jo loope and pop adc add inc sub mov dec inc sub adc inc (bad) or or das pop push jne jo pop and sbb xchg dec sbb out add push les inc test pop popf and sub pushl ret sub mov or cmpsl or das shrl or or and shl adc xor xlat es popa daa jp push or (bad) jns sub data16 es or imul cmp mov scas scas outsb imul out lahf jb stos test or adc (bad) jecxz push fwait mov dec adc jp xlat sub (bad) xchg dec sub or or add push daa pop in mov (bad) pop jg xor push arpl adc popf mov jb or xor or xchg sub mov push pop movsb mov push adc cmovno dec xchg jle bound push insb gs fmuls insb inc imul sbb arpl inc adc add sbb add sub xor cmc cwtl adc pusha or shr arpl inc js cvttps2pi push jne add insb jmp outsb jmp inc js or das test outsl mov gs mov push gs jmp add stos imull das pop mov and mov adc insb iret ret repnz lods fnsave insl gs sbb and inc add imul cld mov imul xor ja mov add adc add xor test sbb mov mov fstl sbb and fstl imul mov in and and or (bad) outsl xor loope inc xchg repz gs jo loopne adc jno add mov push fnstenv add faddl arpl adc insl pop dec jne sub inc and lcall leave pop mov pop rorl mov inc jp cmp cs lret sbb mulb inc les push gs pop sbb insb or or lcall adc jae insb popa xor pop out gs sti sub adc xchg push arpl push outsb inc mov lods push popf cmc sbb jl inc dec clc popa outsl pop push adc test sbb imul mov in jo jge outsl xchg sbb push inc push or test add push or mov add insb sbb or sbb mov push pop jge js shrb push push add sbb mov inc add pop subl adc add aas pop push sub add ljmp lods dec push imul lret fstp push or je adc sub adc or ret daa adc aad pop push pop mov (bad) cltd inc imul adc lret adc mov and jmp inc fsts push aaa xlat cs push je test adc add dec cmp mov stc aam addr16 loope out sbb pop rcll nop mov or insl or fdivrs movsb adcl add in add sub cmp cld outsl push rcll push adc dec sub or jmp or outsl aam mov fisubr push and das roll adc int sub test popa adc and sub fldt popf leave sub shlb cmpsl cmc mov xchg and mov or pusha and push outsb fildl mov (bad) outsb js sbb mov push xlat add lcall push jp xchg mov imul xchg jbe mov fistp jmp mov dec push xor cwtl xchg sahf pop inc adc imul pusha jmp or inc inc or lds push pop das insl xchg push fidivl mov fcomps sti fdivrs outsb sbb mov (bad) push xchg movb lret fwait sub cmp sbb mov push add sub mov jns and xor or cltd shlb cwtl add inc (bad) data16 push pop enter xorb mov add stos pop (bad) xor xor jmp and aas bound add sbb insb mov dec adc mov (bad) push cmp (bad) mov sub mov shll sbb ret and sti insb cmp xchg sub mov (bad) pop inc outsl das cmp or cmp dec jne sbb push mov arpl sub pop sbb or xor sub push pop xchg inc iret cli imul and adc inc dec outsb sub cmp inc sbb pop mov jne nop dec roll daa jnp cmp movl push mov add jno sbb data16 rol mov xor nop int3 adc sub popa pop dec es in and ret xor and adc push adc daa dec jo shlb repnz mov dec or jno addr16 mov sub jle bound or jns adc roll (bad) xchg test cmp push push sti mov pop sbb jo ja add loop aaa and call push jae adc xchg or xorl (bad) mov ja sub sub pop add das addl sbb loop push add dec pop mov or subl xor pop arpl adc repnz mov insl pop pop add lock sub mov xchg aam add out adc mov adc inc ja pop add add xlat sbb icebp add fcmovne xchg sahf jns and push or mov jle lods sbb push sub cltd mov push shr or fsubl mov sbb inc dec popf stc jbe (bad) jbe adc or cmpsl repz mov xor stos jno ficomp fs stos push hlt lds push jne dec sub je sbb mov aad data16 lahf sbb rorl into dec dec jae dec (bad) andb fcoms paddsw xchg mov jo push imul pop in rcrl and xchg sub sbb or test sub aad dec subb dec adc xor dec jae clc adc cs shrb fldl pusha ret sbb lcall pop iret or xchg push fdivs rcrb or or sub outsb jbe movsl or int sbb push jb inc and data16 pop mov stos adc and mov ret inc sbb push outsl test push imul and adc sbb bound inc leave jno enter inc push or adc daa (bad) jbe jo lret xchg pop add pop mov inc xchg insl (bad) pusha sbb pop mov jmp inc imul pop in lea mov out push add loopne or inc pop es adc pushf fs push shl lods enter int outsb inc sbb xchg jns cmp pop dec and xchg mov (bad) xlat icebp inc sbb mov insb test mov movsl popf stos in movsl add mov imul inc jno adc inc test pop (bad) rclb push adc jne xlat cmc mov mull add iret mov adc mov sbb pop adc rolb arpl and fwait mov rolb dec xlat mov push fcmovnb fcoml sbb popa mov (bad) mov mov jg pop inc fisubl cltd lahf and loop fistpl (bad) mov pop jmp xchg xor sarb mov insb adc jno and gs sbb data16 inc adc mov or aaa push jo ja roll jne fs pop add repz sub roll inc sar jle test stos jne hlt or xor dec test push fistp and fadds xchg dec add pop adc dec inc sub loopne popl add les les or adc adc mov fbld xor or push inc test adc mov nop or les cltd sub sbb leave push lahf inc dec inc inc scas or xlat ret lea xchg inc inc push push push negb movsb sbb sbb push or jbe pop ficom rolb orl add sbb out dec es cs fmull push rcrb enter loopne jns test sahf push dec andb lcall jge pop pop add dec and pop imul or inc and add pusha mov lea movl push or jmp nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp loopne dec add cs add 