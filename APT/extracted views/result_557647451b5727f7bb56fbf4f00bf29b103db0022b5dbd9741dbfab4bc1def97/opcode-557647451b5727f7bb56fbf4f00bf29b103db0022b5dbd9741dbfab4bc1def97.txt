testl icebp xor mov movd sbb cmp sar jmp pop daa or fbstp aas call mov jne lea lods inc mov adc sub mov xchg inc repnz arpl dec sub int cmp popa mov (bad) jge je pop add mov pop lcall inc stos pop or rep jns test sub pop dec and scas cmp push push lock pop outsb vsubps test jmp in popa xor xchg out mov das adcb cwtl mov (bad) test xchg adc movsl cli fmuls and xchg jg jp mov mov repnz and mov adc call mov mov mov call jle or aad inc mov daa cmpsl out decl adc rcrl repz popa into pop mov xor ja lret mov or push aaa dec mov arpl cli pop call or addr16 jmp call enter popa sahf jae stos loopne ja imul xchg mov sbb adcb scas inc mov out call pop cmpsl pop ds cmpsb int loop xchg repz ss lret cmp dec rcll (bad) std adc lahf and mov (bad) lock rol cld (bad) xchg dec dec push ficompl fisttpll jne lea pop pushf pusha push pushl ret inc movb pushl neg jmp lea je pusha pushf test add cmp stc cmp pusha pushf lea jb bt test cmp jmp lea jne bts movsbl sub test mov sbb mov clc xor cmp call lea jne btc rol pushf mov sar test sar sub sar test bswap btr lea push sub test mov pushl popl push pushf cmp cmp mov lea ja rcl ror push rcr sub sar btc bsr bt add add inc clc mov pushf mov bt repnz pushl jmp movb lea jge lea pusha jmp lea jb push mov pushf cmpb pusha lea jne cmc movzbw bsr mov pusha add stc pusha bt stc movzwl push sbb mov pushf cmp add test pushf test mov jmp dec pushf pushl not cmp jmp rolb xlat push inc rcrb xchg jmp sbb (bad) add cmp mov nop popf lock mov and test repz lret sub cmp rorl xchg push inc (bad) sbb leave mov mov sub and repnz push scas ljmp adc jne icebp mov push in scas jo jge fildll out cltd or jnp xchg mov aam ss rcll (bad) mov push insb cli nop stos push xor ljmp adc xchg mov cmp cld xor loope cmc pop (bad) ds mull adc inc cli dec mov mov xchg add push mov inc ror mov test bt test and jge push add mov mov pushf pushf lea jmp rcr inc not mov xchg mov bt rcl test add pushf setb pushf not lea call mov setnp push inc or and cmpsb rorb lock addr16 or pop js mov loope jp popa rorb xor adc jle xchg (bad) jo push jp xor dec push dec jmp insl mov dec mov cmp adc gs daa dec test jmp stc aad cmp sbb push outsb lods hlt das inc lods and cmp int in pop inc sub xchg jb pop push adc adc roll inc pop je sar nop idiv cli lcall faddp test lods ret mov adc pop ret cmp hlt jo inc mov ds mov and cmp push mov or pop call aaa pop cmp add jmp jp (bad) ds loopne fisubr out mov cltd pushf mov dec in push (bad) mov js jns mov fsubrs pop sbb mov rorl daa into (bad) std push outsl mov std sarl add pusha mov jno int3 inc mov mov aad pop lock sub cmp pop stc dec pop (bad) jbe fist call dec fild pop cmp cld or sub xchg rolb inc into jnp and out inc test test pop and out out lea fnstsw xchg es sub xor fchs pop test sub jle jge xchg jne adcl leave and cmp mov outsb adc sti and mov (bad) mov adc push push mov aad mov lcall cmp in push sti outsl sbb jbe leave (bad) stos mov ss sub inc mov jnp xor stos ljmp xor push mov mov fs dec cltd cmp jle inc insb ret mov cli mov inc bound jmp fiadd shrl pushl popl call pusha jmp call dec shll adc cmpsb mov adc cmp mov sbb pop xchg cs mov jb mov dec xor out pushf shlb jl inc jp data16 enter inc xchg push sahf rolb or sahf fldl sbbl test cmpb sub jle cmpsl inc mov or jp scas or jo dec sub push xchg adc jecxz xchg xchg (bad) push or inc mov mov sub cwtl pop ret and in in jae jge mov dec adc xor mov scas or add xor jns push xchg add cmc cmpsw adc mov bts pop loopne sub adc jnp mov mov mov sub sub ret daa push sarl pop dec or imul push mov cmpsb push hlt js movsl je lds inc fwait insl scas rol inc mulb mov leave jbe in push fisttp mov in xchg inc sarb notb jp sbb bnd jle pushf xor pop xlat dec test imul lret mov jge divb paddd fadds push bound addl (bad) xor jge aas adc dec xchg in and inc mov mov pusha add push roll adcl push push cmp jecxz icebp or fs enter mov sti adc dec shrl rcrl das dec shll pop in pop xchg lret (bad) rorl ss in stos aaa mov cmp jo cmp hlt push mov out (bad) sub scas xor jl pop clc (bad) psllq jge lods imul in and fcoml add inc adc pop and in aaa sti shrb pop mov daa mov push dec add sbb mov cmpsl out or jbe add xlat jmp mov cltd lock lea push pusha call pushf lea ja pushf lea jae rcr movzbl mov sub mov rcr mov cmc test mov push push pusha sub cmp pushf jmp push jmp pusha lea jne bswap mov adc rcl cmp sub rol push lea lea sub push clc pushf sub cmp clc pushl popl clc cmc cmp pusha cmp mov lea ja pusha ror sub lea bsr add bsr mov not pusha sub ja clc mov cmc repnz pushf pushl mov lea jne pusha call sub inc add mov mov sbb add push mov pusha push call lds jecxz push inc jne adc pop cld or lods ret or (bad) out dec ficompl fisubr stos jo or and jne jmp push jb and test pop xor sbb push xchg pop bound xadd inc sti xor test mov mov aaa adc xchg mov (bad) outsl mov nop xchg mov ljmp mov daa popf adc mov pop add mov xchg xchg roll adc inc or (bad) out in push fsts push mov clc addr16 push or outsb sub ret or mov cmp add data16 test sbb jp jp pop imulb adc xor stos jecxz pop jns das mov fsts jp push aas shll cmp sub or addr16 (bad) ficompl test pushf xchg (bad) mov orb fs and lds (bad) jg imul mov (bad) out (bad) aam std push jecxz sbb push cli and fild inc or mov insl (bad) (bad) das sti stos aad mov (bad) add cmpsl (bad) adc (bad) fs jo inc enter test data16 push arpl sahf adcl xor ss aad pop inc xchg pop into cmp jo pop (bad) jb dec sbb jl jmp sbb std std xchg push lcall in push inc sarl sbb lea xlat sbb lret xchg jl scas mov xor cs and ret pop mov fimul fs ja jmp rep pushf push movzbw mov lea pop movzbw mov not not jmp add cmp cmc jmp pushf movl movb pushl pushf pushl popl pushf mov pushl ret mov pushf jmp rep lea jmp rcr add mov pusha pushl cmp cmp xor jmp push mov movb lea jne pusha dec push mov jmp jmp sahf push pminub push inc dec xlat daa pop jno das mov xlat inc arpl or fcomi icebp mov jnp pop jmp xchg popa stos outsb or mov jg mov cmp dec adc adc xchg lahf cmpsb xor jno pop cld cmp mov cwtl jae mov inc out or add sbb cld cmp test aas dec es scas or mov out lcall push (bad) cmp lods fsqrt sub ret sub dec xlat ret ljmp lock jge popa mov adc or ja lret je dec mov call sbb mov icebp dec mov daa lods cmp mov pop (bad) aam dec lods inc dec fs repz jmp mov lea jne shl dec pusha mov btc btr rol pushl mov btr ror movzbw sub sbb mov cmc mov sar sub pusha mov lea adc push mov clc bsr clc sbb mov rcr clc mov sub bsr sub lea dec setge mov stc mov aad shld sub rol sub pop daa sub and cwtl sets mov stc shl stc pushf test cmp add movb call cwtl movzbl ror rol shr rcr btr not imul add lea shr mov shrd rol bts push dec shr mov sbb mov bt cmp pushf call xor inc xchg test aam loopne out mov (bad) cli add (bad) clc cli hlt testb sub rcr jecxz stc ret push jbe std add (bad) repz mov ja in sahf or cmpb fdivl ljmp push mov mov xchg ss addr16 ret and int3 jno and adc or sub scas inc (bad) or negb (bad) nop lock adc mov sub pop mov lea xor push xchg adc fs add push and lea call pusha jmp call pushf setae mov pushl pusha stos pushf lea jmp lea call call call movb cmp xor jmp call mov stc mov bt bt and pusha call movzbw mov movb cmc shl test movb stc add mov call add lea clc add push dec pushf mov pusha push lea jne call movb lea jb push stc mov cmpb call sub and cli xchg imul mov sub push dec add pop jbe ljmp jo insl jge and push sbb cmp jl call (bad) ja outsb lcall add dec iret nop and mov rolb seta sar cmp pop fsubrl enter scas fisubr ss pop idivl xchg mov inc sub pop int iret xor shrl fsubl cmpsl in movsb pop lea mov sbb push repz or repnz add add pushl rol test cmp pusha xor cmc jmp int (bad) adc push inc dec test test or xchg ficoml mov je push lods or (bad) adc shll movb push fbld hlt (bad) or fnstcw and jns mov lea loopne addl pop sub pop les pop in inc bound ret mov adc mov or mov loope test loopne xor ja movl rcrb xor stos xchg aad test dec loop inc push xor sub add xor (bad) andb add add add out inc mov xor pushf in stos lock cmp cli mov pop xor mov cltd fs cwtl jle fdivrs insb lcall push hlt mov push jns cmpsb inc mov mov push jae cmp mov test jb mov stos mov or out push mov sub cmp xchg pop sti sbb jmp mov bound or les mov lea decl xchg jl outsb mov loopne mov pusha out push mov mov mov push imul sbb (bad) call xor mov adc repnz cltd loop (bad) sbb cltd xchg stos outsb ljmp mov cmp and je pop or jg mov ror frstor jns jl inc xchg (bad) mov push andb mov or xchg mov mov pop pushf popa and push xor fidivl mov xor scas aad shlb call cmp int add stos sub add das in or cwtl movb pop pusha pushl sete mov movsbl bswap pop lea lea lea jmp push movl pusha movl pushf pushl lea jmp lea mov movzbw lahf mov jmp jmp pop mov push lea jb lahf cmp not mov push pusha movl pushf lea jb pushf mov jmp shl stc jmp movb lea jae and pop rcl call lea jb bsr push lea lea mov cmc sub pushl pushf movb seto mov jmp mov pushf seta not lods stc cmc stc add stc cmc test call jmp lea je stc cmp test bt add cmp bt cmp call jmp ror gs push inc mov sbb int3 fadds clc jbe out adc jle push add mov lock fs daa clc sub cmp xor push int stos mov pop div inc (bad) enter add jg cmp and mov mov rcr push test dec fcoml cmp xchg mov adc mov out sti es mov xor push loopne jge loop xchg jl or or add cmp mov ss neg mov std xor fisubrl jle push shll (bad) push loope inc ror cld mov enter les out rorb (bad) push insl xchg push popf pop div xor lods cmp push inc pop mov fwait mov movsb in cmp (bad) dec pop push pop repnz cli push push inc mov ficomp movsb repnz xlat outsb jmp test and pushf xor mov and mov adcb fistp sti push hlt mov and in mov sbb and jl sbb dec and popf mov test sub cmpsl push add in mov outsl test pop jecxz fs jb btc mov cmp sar not test mov add not add pushf pushf lea setb push setbe lea movb movw jmp and not adc neg ror mov and neg xchg xor add lea pushl sete movzbl setb pushf lea pushf jmp bswap mov shr rol mov pusha add shr bt add sub adc or bsr movsbw mov call push push lea ja bt pusha pushl bt sub push push lea jmp pushf movl pushf movb call pusha lea call pusha pushf call pushf lea jae call (bad) ss jnp push inc in cmpsb mov and mov insl adc mov imul push mov lds adc ret js push and data16 push add pop bound xor ficom pop dec outsl xchg xchg or mov mov (bad) cmpsl (bad) sub arpl sub push lret fdivr adc cmp mov sbb dec mov pop dec mov cmp (bad) icebp push ret pop pop lahf repnz cmp pop mov in lea rol pop jnp in xor cs sbb pop xchg dec add ja test jmp out xchg or jg fildl call (bad) xor movsb aas ja cli loopne out sub test adc cld or jo push jp adc imul dec push int test iret out icebp xor aas dec add in inc outsl jae (bad) push in mov or pop mov mov (bad) jp aad into cmp xor ss out out pop mov jecxz incb dec fdivl pop (bad) dec mov inc das dec repnz aas adc cmc fs xorb imul leave icebp dec (bad) jp scas shrl and pop mov sbb jmp ret fisubl loopne ret cmp cld mov insl sub xor sbb add outsl jae dec popa outsb fs add add aad or pusha mov pusha lea jae pushf jmp sub push inc clc lea add ror shl shrd mov cmc mov bt cmp stc repnz call jmp inc inc push inc push dec xor cs insb add js add mov push sbb movzbl lahf setnp lea lahf movzbw mov pushf not pushf movw mov jmp rol test push xor cmc stc push shl clc cmc add mov test stc sub movb mov lea jne cmp push mov cmc btc bts sub mov lea xor bsr sar ror mov shrd cmc mov bsf mov or movsbw mov rol pusha rcr mov call call pushf pushf push jmp bt imul jmp btr add pop movzbw pop pushf pushl cmp pushf push jmp pusha setb pushl lahf call dec movw test not mov bt neg jmp pusha mov mov pushl mov pushl ret lea ja call call lea call pushf jmp ja pop fsubr push inc dec aad mov test add and cwtl push adc stos or fcompl and pop (bad) les fimull popa mov jo mov mov out cwtl add cltd jp lret lods iret inc adc test adc repnz lahf push nop adc jl sti ror sub add mov jg ret inc test mov adc incl dec out dec lods add cwtl or xor fisttp mov lret sub scas xor xor popf dec loopne mov add fadd add mov popa (bad) mov jmp btc push xor sub lea pushf mov call xchg outsl test push inc (bad) int3 loopne hlt cmp jmp adc loopne jg cmc jo or cmp cmc and add jnp mov lcall inc lods cmpsl (bad) and scas inc leave fwait sarb adc loope int3 xchg fsts pop andl or mov mov push mov cltd (bad) fistl (bad) js xor cli cmp push sbb test call je push mov imul out mov and pusha adc loop adc js jle add stos sbb fnsave (bad) ss nop mov movsb dec mov repnz iret sbb insb push (bad) es jp push clc push pcmpgtb call movsb lea shrl lods gs lahf or mov (bad) adc out outsb xor mov xchg add lods hlt inc push pop addr16 xchg mov and loope popl (bad) mov xchg xor sbb subb lret and popa mov ja insl mov scas adc mov cmp xchg sub push int add cli xor imul adc clc add jmp pushf lea call pusha lea jb shrd add btr cmp push lea jmp fild sbb push inc inc mov test sarl cltd jg repnz push add cmpsb sbb in insb mov sub push hlt addr16 mov push adc mov lds scas xor and insb mov scas inc xchg es nop inc mov out xor in xchg mov imul push cmpsb mov out push aad mulb push cmp mov mov ljmp push repnz jno lahf in sub clc mov adc (bad) inc cwtl add adc lods bound jge test fsubr cmp dec push add pushf lea ja xchg not pop mov movzbw xchg pop push seto mov movzbw mov bswap pushf mov push pushf lea jnp mov movsbw lea lea bswap pop pusha pushf pushl ret adc call dec nop sbb ljmp int or test sub scas push daa outsl test dec insb xor dec lahf outsl lds ja dec sbb in mov fcmovnu loope mov fstpt cli pop out push pop mov and dec insl in adc push ljmp fdivs movsl cmp adc fnop ss cmp cmpsb lret sub pushf in sub lret mov in xchg ret sub arpl bound sbb (bad) pop rcr add pop or push pop dec jle rclb mov call add test test popa sti push jmp lods sahf sahf push mov arpl (bad) out cmp pop repz xor adc pop cmp xchg inc sbb or sub lret roll dec in push cmp add mov mov outsl (bad) xchg out (bad) ss push imul clc out (bad) lahf xchg aaa push inc shlb test cmp test mov sbb fisttpl orl loop pop rcrb sub jns gs mov mov lods sbb (bad) push mov adc add data16 or xor xor in insb mov sub mov outsl or mov (bad) sbb insb add loop mov dec fistpl jne sbb push sti (bad) out inc into gs adc stos xor xchg lock divl inc inc xchg mov jno clc add outsb mov neg repz jns dec add pusha scas cmp out mov das xchg mov outsb and cwtl jb sub lock push and dec loope rcl cmp push pop mov sbb test into xor mov fdivs adc mov dec test xor popf (bad) cld out xor mov cltd cmp rclb rcll inc fdivl fwait mov rcll stc and pop xor std adc mov repz ret mov mov jnp ss xor lds (bad) loope xor cmpsb insl ljmp adc mov jo out dec sti sbb jecxz in insl adc outsb or dec jb xor sub sub xlat ja in or lcall jae cmp xor lcall add adc insl rcrl xchg mov sahf repz dec hlt sub clc out mov pop test sti std xor mov bound push pop cmc pop shl cwtl push add scas sub lods xor bswap mov call cmp bswap setns bswap lea pop mov jmp cmp sub push rol mov dec mov add call movb call mov movb lea jmp test not xchg neg rol pushf btr pusha rol bt xor or dec ror clc xor jmp not cwtl add pushf not setb pusha lea mov movb push lea call call add push mov jmp push call jae add call jb mov shl lea call add pop ret mov loop testl (bad) scas out inc and aam jnp lcall loopne inc mov divl in lods in rcll mov in insl lods jge arpl push mov mov mov fistpl xorl fnstsw jb movb addr16 inc mov leave lea pop mov mov dec insl mov mov pop (bad) cltd xchg aad jbe popa stos or int3 daa nop es fildl adc dec jno flds mov push mov insb jecxz mov xchg inc push xor jns test mov popa mov test dec mov in rol xor (bad) adc bound test add sbb jne subps inc dec and cmp xchg fdivs ret bound add and or aas adc xchg out mov daa dec mov mov lcall aam xlat push aad addl ret movsl sub pop cmp inc mov nop jmp jle lret mov aas sarl mov xor or (bad) stos rorl lret (bad) imul and scas lcall addr16 fdivs and fidivr sbb jl add js add mov jnp adc orl jle mov xor repz pop jmp cmc bt add clc pusha cmp mov neg call lea jb rol jmp lea je cmc stc call mov inc mov sub jle fcoml push add hlt and push mov js add repnz pop mov std adc dec or dec mov add jno push sti daa inc sub mov cmpsb cmp mov ja pop jmp popf pop jb (bad) aad push repnz cmp and and das aam dec jae (bad) enter mov mov lcall adc fdivrl std cmp das insl in repnz push sahf (bad) movsl inc cmp popf inc sub repnz and jne lea movb pusha pushf mov lahf pusha cwtl lea pushf push mov push lea jmp ss arpl lea add xor iret pop add sub and or cli sbb xor dec clc cwtl inc xchg jge inc push inc mov jecxz (bad) movsb enter movsl push inc xchg push aas jmp icebp into xchg jb aad fdivr xor mov mov int inc sub into lock sbbl movsb push mov xor mov enter and dec inc lods sub push call outsb sahf out aam dec aam into dec cs adc dec repnz inc fist or dec stos mov cs stos mov fbstp sbb dec ret insl popf icebp mov mov stc cmpsl (bad) stos pop add cmp outsb jbe outsb cmc scas dec pop xabort inc adc cli inc std lods cwtl mov int3 daa lods fwait in pusha add cmpsb or popf xor or fadds cmp push aam rcll push mov stos sub push inc jne in dec mov mov stos or pop push sbb add sbb cmpsb fisttpl daa lods addr16 dec dec jnp cmpsb or fldcw lods jno adc sbb lcall icebp xchg popf clc pop repz (bad) (bad) xor in lret xor rcrl inc cmp in (bad) ret ss fsts pushf data16 add js std push arpl std or pop (bad) repz inc sarb mov pop xor (bad) sbb loopne aaa sub adc (bad) pop lret dec fwait imul xchg fbld addr16 inc das mov and xchg rcll loope inc lret and cmpsb lret dec mov sbbl sub (bad) shrl sub or addr16 jmp pop scas in add mov cmp mov add arpl (bad) (bad) pop push cmpsb out inc pusha stc or rol and fdivrl aam push push cltd mov mov dec movsl sub dec or cmp jb cli and xchg jo rclb sbb pop jmp sti decb movsb push jbe stos sub outsb ret rcrl mov sub lods add or roll push push inc outsl add inc pop mov or dec cltd insl push aaa lock add inc dec jb adc mov mov test xor pop mov jge fs call jmp lea jl pushf xchg call pusha pushf movl pushl call lods insl mulb cld push inc jl (bad) jae jg cltd fwait add dec jg fistpll int3 inc mov sbb mov into test aaa out mov inc mov or sahf insb scas fsubr and adcl mov mov mov orb dec movsb iret push push jge pop sbb stos cli or cmc push cmp pop ret aad and adc cmc adc xchg loope fs jb js test push incl cmpsb pop ficom and das lea mov lock jge xchg adc std push inc movsl in push pushf outsb pop inc sahf pusha cs lods inc mov cmp gs cmpl pop mov pushf jp fxch xor lods push push sub insl xor cmp push popa out or xchg dec and xor mov sub lods push bound movsl mov aaa xor xorb pop test fs loope jne adc mov jle push loopne popf mov cs xchg out add (bad) xor pop sub sub xchg test and test arpl sub mov into cld sub out inc call dec sub mov mov push lahf popf divl insb jns test loop cmp daa ret mov jae btr bts mov dec xor mov test setae bsf mov bt sub cmc call xchg mov push incb inc ret add and mov lret xor enter int xor sbb mov mov push jg mov bound ss sti xchg stc and mov xchg repnz repz adc sahf sbbl xchg popf mov add and (bad) mov mov int3 xchg push scas pop (bad) xor xor jmp enter ror sbb (bad) adc lods push adc test pop loopne xchg xchg sub xchg pusha add pop adc sahf int3 mov bound imul repz mov out faddl (bad) jecxz mov pop out xor fiaddl add je add fs jbe clc cmp movsbw sub mov bsr neg add rcl jns mov adc btc add bsr adc movl bsr mov pushf clc cmp call jbe mov push inc add jmp in in mov xchg xchg imul mov mov dec xor mov push or dec movsb das (bad) sub and pop mov leave pop fisttpll dec cltd mov jbe leave jecxz (bad) mov inc add (bad) jmp xchg and mov stos and pop stc sub xchg or add add stc pop nop lds test pop in xchg mov ret xchg ja dec rcr es inc push (bad) insb sbb xor add shl lea call pop ret jmp rol sub movzbw xor bt test sub sub xchg push setp movsbw mov mov pushf movsbl mov call mov adc jl and cli pop enter in fadds stc pop push (bad) pop jl cmp or loop into sarb lcall inc nop add jbe das sub sbb adc cwtl clc jae sub mov push das cmp ljmp ret sbb ss dec push xorl out xor sub add add sbb cmp pushf add or mov xor mov or push dec cmp movsb out int add pop sub sti inc (bad) cmp pop adc mov cmp ffree fsubrl cmpsb mov mov mov jmp fs insl ss ljmp add add sub bswap btr mov clc test shl call setge mov setge mov jmp sbbb stc push inc ret cmp mov sub mov adc mov cmc jge cs inc imul sarl sti ret sub xchg rcll sar or int3 sub lret add js push xchg icebp lods scas inc aam int3 (bad) stos pop mov jnp movsl inc lret jmp insb es xor pop in xchg mov ds (bad) mov add push inc ret std mov push pop jne flds sarl rclb test push call and jo pop mov xchg ljmp fsub or arpl add jl dec jmp jnp sbb mov lea movzbw mov pop call add cwtl pop seto setb pushf lea lea pushf lea call pusha pusha push adc pushf lea jb pushf xor push push pusha mov lea jmp pushl call pushl popl mov mov movb pushl ret idivl inc push sbb add jg insl xchg xchg jmp lret repz popl jno flds lock or cld cs inc into or add sti add iret cmp xor pushf inc pusha ffreep push rep pop lret push int3 jo jb pop ljmp pop fsubrl push cmp movsb lods xor loop pop je add test sti push inc scas xor sub sub pushf movsb cbtw movb cld adc mov imul sub mov xor inc jle data16 cli push add fldl dec or enter sahf gs jno dec (bad) cmp mov movsb dec jns es sub and shlb pop les xchg dec push mov cltd lret jbe (bad) (bad) outsb mov gs shrl test and call jmp call cwtl mov lea bswap pushf push mov mov not call lea pushl pushf push jmp pushf sbb pusha lea pushf movb push mov lea jmp test pop inc aad mov in hlt adc mov adc mov push adc scas subb dec dec jle mov xor dec or mov xor dec and hlt inc xor lds jns insb jg pop pushl jl mov pop std adc xor push jp insl mov in jecxz xor in cwtl pushf fdivl (bad) in hlt into lahf lods or xchg imul and lcall ret mov stos xor bound int3 cmp xorl cwtl adc pushf inc push aad stos adc pop pusha xchg std out scas and push mov pushl xor add xchg call push jbe cmp or ror out push scas pop (bad) outsl jbe insb scas mov test adc pop jge popf lds mov jle (bad) dec xchg pop xchg sbb xor movsb mov mov xchg test xor jcxz out nop scas mov (bad) adc dec mov push loope cmp mov sbb sub fwait mov rcll mov scas dec lret dec lea js (bad) or gs cmp cmp es or repz paddd clc js pop inc xchg mov lcall pop popf insl pop and sbb adc push jge loope push push loopne pop decl test mov test xor mov adc sbb inc pop mov and loop out subl xchg cwtl add arpl or rclb (bad) push lods pop rorb int into idivb roll cmp test outsb sahf in (bad) jns lret ds dec jne xor push js sbb mov mov das push out insl xor adc stos imul lods jbe stos xor test push loop add xor stc sub pusha pushf pushl popl call lea jne shr mov cmp mov bt dec sub and rcl mov bsf shrd shld mov mov movsbl mov sar mov data16 repnz mov rol mov rcl sbb sub add rcl mov sbb shr stc shld mov rcl sub sete push bts and push mov jmp call pusha lea jne jmp mov not lods jmp bt jmp daa sar cmp cwtl push mov pusha mov pushf lea jb movzbw inc shld cmp call push lea jae and not btr mov or shr mov cmp mov call push mov inc mov lea pop ja fildll sbb jns gs aaa xchg xchg push mov loop data16 xchg stos loop xchg push clc pusha jl pop in aaa dec or cli jne lret outsb dec repz mov loope push push (bad) mov mov aad jno ret daa push aad sbb or movl sbb test and push xor cmp out insl add clc enter out pop and mov popl into fwait inc jge in inc add ret pushf mov scas adc xchg ret lds jb cmp outsl jno or into push movsl bswap push movsl or mov inc pop push xor push ret jae xchg popa shll jae outsl pop gs sbb and test gs shrb arpl pop repz dec mov or push add mov int3 xorb test mov xor ror mov dec mov xchg out lret (bad) je and cmc cwtl bound xchg lods sbb shrl ds pop loope and jp jmp mov jnp jge test add test ss sub pop xor aas insl enter test sub dec or lea call jmp jmp shr clc stc cmp jmp lea call pushf mov jmp cmc mov not mov neg pushf cmc clc rol stc pushf push stc xor pusha bt bt shl cmc cmc clc add cmp cmc sub call pushf lea call jmp pushf movb push pushf lea je rcl bsr pusha pusha mov lea dec add lea rol shr call clc bt shl cmp add cmc sub call test sbb mov ror xor sub movsbw call fstpt icebp lods adc fcomip push lods addr16 (bad) popf or add (bad) icebp lods adc lea (bad) scas add fs ja cmc stc imul call clc call add mov lea pushf movb jmp test pushl popl clc bt call call pusha lea jb push cmpb pusha lea jne add mov push cmc add push clc stc movzwl bts inc cmc not mov cmc pushf jmp add and add inc sbb jae jg inc aaa push popa pop xlat aas outsl mov int lods test inc (bad) aam mov mov sarl xchg push jne sahf add (bad) out outsb insl jb xchg mov jbe push jl int3 dec xor push repz movsl nop insl sbb add pop pop dec cld jmp push popf jns push xchg push mov js outsb cmpsb (bad) mov cmp fs xor inc cmpsl xor push fmull xchg push pop rcrl dec (bad) int3 test cmp mov jnp and dec pop sub inc ret pop loope adc or push test or mov repnz mov cmp (bad) inc or inc sbb rcl push cld mov sahf fs bnd inc dec (bad) pushf cld int adc fdiv je stos ja dec movsl and ret sub mov jne addb fnstsw neg jge jmp push dec lretw mov dec dec push jb and rclb fs sarl pop subl adc int xchg popf cmp movl add pop or sub jnp test (bad) xor rcll pop outsb imul cmp js mov out dec stos loope cmp pop add lea ja (bad) lock sti add (bad) lock rol cmp data16 not lock sar clc stc mov jmp xor bt stc shl cmc jmp clc mov test clc cmpb jmp pushl popl bt cmp pusha call add jmp adc aam or int3 cmp ljmp sbb fcomps stos cli xor fisubr pop jns dec sahf aam (bad) xor xchg cld and lret sbb sahf into orb lods iret cmc outsb movsb into mov cmp jecxz dec popa (bad) mov xchg inc ljmp and inc sub lods ss pop pop aam jmp mov add mov and push jle in push jb test add xor push (bad) sbb inc imul cmp clc das dec imul add pop enter cmp (bad) xor xor pop arpl inc dec cmpsb mov mov std dec stos jp jnp push call icebp (bad) lret xor inc pop cld xchg jb shlb push mov inc jbe pop je rep mov int3 push or jmp push xchg scas sbb jae out das call outsl sbb mov bound cmp push sarb clc xchg mov push movsb inc adc mov icebp lea neg mov test jmp pushf lea jne clc add xor btc aas movzbw pushf mov jmp cmc imul clc stc add pushf lea jmp add out sysret inc cmp xchg cli and and loopne inc mov imul push das jge lds dec mov ret loopne xchg mov incl movsl fs cmc mov xchg add and mov (bad) popw (bad) push cmp lods shrl aam inc aad push sbbb pop test and cmc lea sub mov add lock jle fstpl push scas lret fisubr shr enter scas adc cmp pop or xor cli fistp dec call test call cmp stc xor pusha jmp pushf pushl lea je not bswap lea lea call pushf outsb and popa mov std icebp add sub test xchg aas xor repz cmp out cmpsb push and cli gs xchg jns imul sbb or rclb sub xchg lcall lods mov lds pop cmp inc sahf ja hlt lsl push push and mov inc fwait adc xor xchg add movsb shrb xchg loop rorl aaa jbe xor cmp imul (bad) xor lret jo fucom into sub and mov movsbw add call call rorl inc mov add mov aaa popa mov inc mov iret dec mov outsl add lret movsl jge std xor sbb dec test dec (bad) xchg mov push test cmp mov popa ja decb push loop cmpsl je mov or add fisubl inc jl enter mov lret or lock inc nop push pushf test (bad) test shrl cwtl dec jnp in mov mov aas out sub rolb jbe clc ja xchg lds fcom insl cs lahf test bound xlat pop stos lods and lcall mov addr16 cltd gs int lahf pop jp adc sub jmp push jae negl push iret mov inc scas les hlt pop mov jbe jmp into in adc clc mov add daa (bad) and scas cmpsl (bad) push into push mov push dec in mov psubq arpl fnstenv out pop in jg and sbbl mov inc (bad) cmpsb xlat mov insl mov or xchg lret jb and add (bad) and or mov fdiv (bad) jg es ds movl aas mov es jl adc test push push and push adc cld xchg je inc inc and dec xlat mov bnd mov xor mov jns loop jno sbb lahf (bad) xor or jbe cmpsl pushf xchg jnp push mov call jne cmp call cld add jge or sub clc shrb into and push add mov mov (bad) cmp xchg sbb loope bnd and sbb jnp sub mov dec mov add mov dec in and cmp lea jb pushf mov jmp call in mov inc popa sub xor xor pushf add xchg into je les mov fldcw cmp inc daa inc in pop mov ret fcmovnbe mov addr16 xchg jecxz (bad) xor push xlat fmul ljmp das lret out nop movsb les cld push xor inc out data16 lods repz cli nop jnp addr16 pop repz int3 cmp fcoml jl adc call imul sbb push adc in or or mov or mov loope cmp mov add ss mov ror add fwait lret das cmpsl push icebp notl arpl cli out insb call mov mov cli pop sahf xchg aam jp inc mov ficompl sbb mov jl aam subb outsl test cmp and jb sar adc rcl mov bt test call lea je stc sub cmp cmp push pusha pushf lea ja bt jmp sbb bound pop mov mov push sbb cmp fmulp mov movsl aam dec sub adc or fs xor sbb out xchg add mov mov mov xchg cmpsl repnz inc push scas inc test jb add adc sarb and dec inc and mov ss mov inc add ret icebp cmp gs xor nop sub sbb xlat add push call pushf lea ja pushf imul lea jle add pushf lea jmp pop stos xchg adc pop inc dec and jmp sahf push sbb sti jge mov sbb xchg (bad) and ret jmp arpl ljmp fcmovne loope dec leave or pop lods aad push in int3 cmp hlt mov ret cmp jmp cli repz outsl clc adc jg ja shrb lock clc sahf mov in mov bound mov lret fidiv dec (bad) xor mov mov xchg add xchg fiadd sub mov inc imul pop clc push cld ret dec xchg lahf test sbb addr16 pop ljmp push lret cmp mov mov mov outsl mov fsts sub popa insb cmpsb mov shlb cmp fdivs xor adc aam leave push xchg in xchg shrl fistpl int3 push mov andl ret stc jmp mov push push lea jmp fstps push lods jecxz lds xor mov mov push imul inc shr test cmp imul adc outsb into gs (bad) lret jg cmp sub test inc cmp inc rorl sbb insw xchg lret or or push jae les lahf int fwait mov jno push or imul pusha nop jnp sub fnop insl ret cmp or add and xchg mov inc mov int3 call test pop push arpl ljmp jge clc jne gs xor fs insb add cmp movb mov jmp movb movb lea movb pushl pushf call call pushf call cmp mov sets mov pushf pusha pushf cmpb pushf movl lea jne movzbw bsr xor pusha shl ror pushf mov sub bt neg add rol shr rol jmp sub pusha not setge pusha mov jmp shl cmc pushf mov jmp pushf not clc test push sub movl cmp lea lea cwtl movsbl mov push pushf lea ja call test mov test pushf mov push pusha pushl lea jmp cmp push jmp push dec dec push inc push dec cs insb add add (bad) inc add adc movzbw pushl jmp rorl int adc inc push insl mov jge pop jno and jns add and or sbb shll xchg prefetch jp icebp adc sbb adc popf loop mov pop sub pop jne and mov pop cmpsb add mov je mov push imulb fidivrl rol loope arpl int3 mov out xchg push je or xor sahf cmp test mov add fistp dec stos sbb fs cmp nop mov lods enter xor push mov mov (bad) pusha xchg jmp push pop pushf mov pushl rep call and addr16 pop inc in xchg es push and mov sbb push pop cmpsl ret jb jno jp lea (bad) lahf jg xchg insl aad mov dec minps sarl xchg data16 cmpsb lcall jne jne outsb push pop es in (bad) jl cli sbb sbb inc push arpl mov mov add and std mov les ret mov std jns int3 int3 mov jns sbb inc mov pushl mov adc lahf dec inc jecxz xchg rcll inc ret mov jp loope xor xchg sub shrl or test sti adc inc movsb adc cld loopne ljmp adc jle inc dec jecxz xchg int3 sbb inc stc out dec aaa and (bad) push cmpsb add dec lret jle adc add and jp or xor int mov mov and sub hlt clc jp loope (bad) pop sti push adc pop imul mov scas sub mov arpl fnstenv rcr or lock lahf mov ss mov pop daa inc xchg mov ret (bad) fidiv dec hlt clc popa cmp sarb into dec loope ficom cmp in cld push lock nop in adc inc outsl aam jbe outsb push pop movl sbb das xchg sub out dec icebp add xchg inc scas push cmp mov jno or add dec mov mov or and fstpt xor cmp xor push mov movsb nopl lods lret sub nop (bad) push push pop cmp mov inc aas cmp (bad) repz mov cld xor jl xor inc mov in enter mov xchg sti pop mov shlb out mov dec cli add push test push ret mov stos adc inc mov and cmc shrb rcrb pop sbb out xchg popa aaa inc sub cs cmp fnop add inc xor test jmp adc sub sbb scas adcl mov sbb mov ret push add cmpsb adc sub call add in and test pop int3 arpl and out fldl ja xchg fs pushf rorb in push int3 lock pop ret mov stos jb jecxz add inc or xchg (bad) test dec pop add pop and mov scas ds dec fiadd loope stc xchg test insl stos ljmp mov sbb inc cmp and xor lret mov push mov ret and int3 adc push add xchg pop lods dec mov adc sbb (bad) int3 sbb je faddl and push int3 cs xchg jg and mov lds js lock mov rorb popa mov xor enter sbb mov mov sub xor inc imul ss cmp notb repz adc scas in cs in dec xchg push rcr mov pop pop mov xchg adc test aam in cmpsb out (bad) call pushf lea jb pusha bsf pop cmp push push mov call mov pop lea pop pushf movw call lea jne shl shr mov (bad) (bad) lea bsf mov xor sub sub inc bsr inc mov btc setl btr inc mov jg ror bts not mov sbb bts rcr and mov btr bswap mov neg ror mov push sub mov neg jmp frstor inc loop mov jb js fs outsb aam xchg push and data16 mov jbe sbb mov xor clc test pop nop inc clc insb sahf stc mov fs int pop ret pop lret lahf hlt add mov sahf or mov dec popf mov lahf and lds xchg loope pushl sbb popa add jecxz push push je lahf (bad) decb jl gs cmp test mov scas xchg stc outsb leave into pop cli and std xchg test mov repz sub scas into dec mov (bad) arpl xor and in push lahf xchg fcoml loopne rcrb rol cmp jne lds push addr16 mov add push adc je in ljmp fnsave mov add mov xchg sbb adc push xlat mov fistl inc (bad) ss jp inc mov mov adc arpl pushf lea call jmp add xor add push adc dec and add sub sub add pop (bad) mov xchg movsl fdivl inc add xchg je fcmovb out inc add daa xlat in ss nop xor inc add add das cmp fist xor add call cmc xor add in loopne nop xor inc xor add scas pop cmp sub add sub xor inc add add cltd cmp add (bad) xor add call push aas xor add fldenv mov inc add repnz adc (bad) in (bad) xor add call sub xor add call cmp xor add enter scas enter add cli imul inc add out rcrl dec fbld (bad) xor add clc sbb push sub add int aas fwait lea add add (bad) xor add call sbbl inc add int3 (bad) je fnsave mov clc out outsb and ficoml inc add clc jecxz enter das es add (bad) out movsb sub sub add push std lret mov jo inc add and jmp sub add adc or xor add lea (bad) xor add call cmp hlt ja push in clc xor inc add (bad) pop adc pop sbbb inc add lret xchg popf cwtl out push sub add mov xchg dec adc add add insb xor sub add add dec xlat xchg pushf (bad) xor add call cltd mov inc add test pop jb pusha das es add add mov xor add call xor sub add xlat lret cmp jnp xor add aam scas adc inc add nop ret cmc in xor sub xor add dec jmp (bad) adc add add jg lods adc add loop mov mov bswap bswap pushf lea call aas inc adc sbb inc xchg and aas fucomi cmc or or aas dec cmp pop xlat inc arpl (bad) jg inc xor mov dec inc and pushf lret (bad) js xlat dec mov mov dec rcr push pop subb sbb pop adcl pop dec in jb sahf sbb mov in orl sbb cmp push ja daa loopne pop fldcw xchg push mov jns sbb cmp jmp dec rcrb fisub daa ret xchg sub or xor adc jbe lock int3 rcll jecxz js pushf lea jne sbb rol adc mov not cmc mov shr or xor bsr ror cmp cmc mov mov movsbw mov jmp mov lea call lea ja jmp shr movw movsbl imul movsbw inc bt lea bts shld shrd bswap mov sbb mov xchg not btr cmp mov cmp btr ror neg mov pushl pushf pusha clc cmp jmp clc push add pushl push pushf pushf lea jmp sub ror movl pop movsbw mov test cmc cmp pushf push jmp lock add xchg sti das xlat (bad) popf jne push divl shl mov jecxz jg test stos dec cmp ret sbb inc xchg ds bound fldt xchg cmp fcoml inc daa lock sbb cmp lret cmpsb stc push jbe hlt gs push mov fcoms jecxz push sbb mov out jno xorb stc xchg or pop jg arpl add stc and testl fdivrl cmp inc scas cmp popf xchg out outsb mov adc or ffree pop fadds jnp enter xor adc (bad) or inc mov call setl rep movsbw pushf sete jmp pushl pushl lea je lea lea push pusha lea call push call les ljmp and inc jne adc ljmp (bad) (bad) mov cwtl insl sbb or into and imul jno pop pop xchg stos enter jnp jle aaa dec mov in pusha jle adc into push xlat bound clc pusha (bad) adc (bad) jmp psubusb repz and inc push clc test xchg clc push jecxz add aam out push mov push aam pop (bad) xor ja push shr mov inc ret mov in lret cmp sar dec lahf hlt push adc ljmp pop (bad) (bad) decl insb mov bts add call adc les pop inc (bad) pop leave jns addr16 or lods add scas fbld jp or stc std into adc adc push jnp jae insl mov ror add int3 jp jb xor bound push mov nop insl aad ret enter or xchg ljmp arpl inc push xchg sub inc xchg dec push jp cmp ljmp mov xchg lret push test jmp test and pushf mov jns push jg cld push fs ret pop sub xor test (bad) hlt lods fiaddl cmp stos (bad) push jle lret push test dec lods dec inc or rolb xchg dec stos and xor cmp sbb dec ret pop mov adc mov pusha push dec adc and imul int add test fdivs aad fdivrs imul fwait loope je fdivrs (bad) push and inc lds ja mov xor xchg out inc jg ds std add xchg or pop scas jle sti sub cltd add jle xchg jle into sbb jns (bad) ss fwait push or mulps pop push aas scas nop hlt cmp or idivl inc les mov fsubl pop jmp cltd (bad) ja jge mov movsb pop or inc mov bound fwait sub xor inc clc cmp or stc inc jle adc (bad) not cmp mov jmp bts bsf neg mov movzbw bt bt mov pusha xor call lea jb rol bsr mov bt test pushf sub push mov mov pusha jmp add inc gs outsl fs gs imul add mov or not pop push pushf pushl ret cmp jmp pushf lea jne not movb bswap push pushf pusha mov setb lea jmp lahf setne movzbw mov pushl call jbe sub popa cli sub loopne mov cmpsl xchg orl lahf (bad) stos test jp push xchg arpl aad cmp insl cmc dec mov inc inc lcall mov pop sbb lock jbe cld mov daa aam lahf into push or mov dec out imul jmp dec or (bad) mov add inc test addr16 jo stc popa xchg mov add jno sti pop outsl mov shll xchg sub pop sarl jecxz pop cmpb in add cmpsb imul (bad) xlat xchg jne and scas push mov dec add dec les adc mov lds lcall cmc movb bt mov test jmp gs out in into inc mov push pop fs dec shrb dec pop dec xchg shlb pop repnz pop rclb jbe mov mov mov and popa fbstp insl push add mov mov and aaa push sub jbe decl addr16 dec pop jns rorb inc rcrl xchg pop pop daa loope sub lods pop jbe,pt in mov mov push dec cmp jb add aaa and mov mov and sti add adc mov (bad) jne lock sahf xchg rorl and lds cmp (bad) and push fcmovu mov movzbw pushf pushf lea call mov btr mov cmc lahf shr sub add aaa or and or aam call lods pushf test add cmp pusha neg jmp jbe cmp mov cmp std or fistp jmp jecxz jecxz pop pop mov push leave xchg push popa xchg mov xor jp add jnp mov push add jno add test cmc xchg jae push fwait dec adcl addr16 mov adc hlt add mov adc sub sbb mov (bad) xor mov sti cmpsl ss aaa or cld loopne xchg (bad) mov dec xor int3 clc cli mov repz outsb in pop xor aas jnp hlt incl push lea jb test clc cmp pushf lea jae movzbw push bswap rol mov btc mov jmp push lea jne pusha cmc bsr adc mov cmc add test movzwl btc mov test pushf add movb test cmc mov pusha stc test pushl call push lea je push pushl pushf add jmp pushl popl mov movb cmp jmp mov call cs adc and inc sub pop gs popa jno add mov addr16 mov pop aad fnstenv ficompl jae jnp jl pop fldt sarl inc (bad) lods idivl mov sbb and bound mov pop cmp in adc adc in das sbb adc pop pushw or jmp dec data16 (bad) ret (bad) (bad) loop imul mov retw jnp test sub xor mov lods xor inc mov jle (bad) dec cmc (bad) icebp push sub lds sbb and loop jge push mov leave test xor fmull pop inc (bad) mov jmp lret jecxz jecxz inc cmpsl aas testl cmp pop dec test pop aas mov les fcompl mov add movsl in inc lods aam xchg jmp jg sbb in jg mov (bad) out xchg (bad) pop mov movsb xchg cli xor idivb call cltd or inc mov add or mov xchg jmp (bad) mov adcl jle loopne and enter popf jo fcoml ljmp test cld stos jbe mov popa int3 js (bad) mov add cmc sub call movsbl pusha movsbl mov pushf push cwtl mov lea movzbw call mov jmp cmp neg clc cmc rol test xor sub jbe stc pusha shl pushf bt add stc test stc sub jmp call stos pushf pushf mov mov movb pushf pushf lea jmp call setnp mov pushf cmp clc and test cmc call inc pop xor shrb pop pop inc dec jecxz out scas (bad) (bad) mov jg jg inc fdiv pop cmpsb and or push (bad) clc (bad) (bad) jnp bswap int or pop leave mov add push adc stos call mov add jecxz xchg cmpsb jns subl aaa rcrb sarb mov lcall aam and dec (bad) shll cmp shl pop mov mov push add cmp cs add or insb test cmp cld sub repz and call in push or fldt pop ret jmp imul inc leave fistpl les jle pusha rep hlt fs sahf scas pop push out and add into ret mov in xor aam pop cmpsb pop sub insb call data16 fs faddp dec mov mov sbb sarl add jge sti or or in pop sbb addb mov es lahf jmp outsb sbb and es lret pusha mov or repnz or mov scas mov nop push in jnp xchg js mov imul enter loopne pop clc fstpt shrl les adc cmp movsb test dec scas xchg sub jge sahf pop lds xchg fsubl popa jge sahf arpl sarl mov scas int dec popf lahf sub pop inc push iret cld push push sbb mov fcomp adc sbb clc clc mov mov lock xchg in push aam mov jo mov loop fistp mov cs pop fldt pop inc dec inc push xchg jb inc js fmuls (bad) add (bad) mov aad add adc data16 sbb neg shrb xlat aas gs jge sahf adc out scas cmc add popf mov aad adc pop jo movsb fldt aad adc push or shrb mov cld rcrl mov push cmp sub rcrb out sbb (bad) mov xchg adc dec push mov daa aam arpl mov rorb mov push in int3 add in pop sub adc ds pop aas out inc jnp in fsub addr16 push lahf push or or push repz rorb inc sub (bad) sub push sub mov and lea jg movsbw pop mov movzbw bswap lea pop jmp sbb pop inc cs rcll cmc sub mov sbb xchg mov dec in sbb cmp mov mov pusha push push or dec mov xchg std xor aas les mov (bad) jge cmp jl inc lret dec rcr push daa imull pop inc push fldt pop movb sbb xchg sub or int3 movsb push lret arpl stos lcall push ljmp pop in mov lods lods es lahf divl (bad) icebp mov sub cli xchg push test jge test loope or inc inc fwait dec xor in (bad) dec cmc adc outsb lods pusha xchg test adc test test push insb jmp xchg xchg incb fwait lcall fcmove aad daa add das jl mov sbb jns and nop jno sub inc in pop push inc pop xchg push repnz pop cmc or lds nop out int3 inc dec add cmp add mov push add inc mov mov mov bound and scas push sub sub pop sahf mov pop cmpb push test ljmp push (bad) movsl loopne,pt insb pop xorb pusha dec pushf mov rorl jno pop mov and leave fldt iret movsb data16 adc call stc pop xchg push xchg into cmp pop xchg std or rcll pusha dec push int and outsl mov push jl cmc lea jle ljmp std and mov mov clc addr16 pop inc jae xor or sub mov jae xchg nop pop or dec mov dec pushf mov pushl mov call lea jb shld call ret lcall sbb pop inc mov addr16 jb inc sub into lods clc es mov mov imul fist inc int3 clc mov leave dec mov xchg mov cli icebp (bad) pushf adc and mov jmp jae cmp repz jmp cmp lods imul rolb test or test inc jmp xor cmp (bad) repz mov push lock inc mov adc lret sbb xchg add jl hlt outsl test cmpsb and jb or (bad) icebp xchg sub (bad) mov jmp pushf lea jb pusha stc cmc xor pushf mov pushf lea jmp push adc push pusha lea jb pusha xor mov push pushl lea jmp lea jmp add dec outsl arpl inc insb insb outsl arpl lea jae call movb inc bts stc bts neg inc movzbw dec bsf shld not jmp cld adc and or insl popf (bad) sti jnp xchg fwait ret dec jecxz lahf enter into mov mov imul testl or sbb adc adc cmpsb mov and movsl lods adc aad xchg xchg jns fildll push lahf imul dec mov xchg inc mov lds popf jmp stos mov js xorb pop scas xchg pop xlat push aas scas add inc ret je pop gs mov cmp push mov in mov loop imul insb push push outsb ror ljmp in dec (bad) aad or inc fisub inc ret jne cmp (bad) cld inc pop pop xchg movb lea jae push lahf call push pusha pushf adc pushf push lea jb stc xor push lea jmp mov cmp cmp movl mov lea jb bts shld mov pusha call pushf pushl jmp stos pusha push mov mov lea jmp neg call mov mov rcr shr mov test pusha mov cmc jmp (bad) mov sub scas pop repz xchg or cmpsl addl and mov mov pop mov mov ret mov or je shrb lods jb push sarl jb xchg inc mov xor les and outsb pop idivl fnstenv out call jb popf pop test ja scas shrb mov dec ficompl in icebp dec (bad) add mov adc and pop and cltd xchg add jno lret sub mov scas (bad) dec mov or push insb and mov inc iret ds and test lds dec (bad) daa popf lods rcll addb xchg popa jae hlt push jl cld iret push jne shrb xlat dec mov out fldl dec in or jnp cmpsb mov push jl push dec jns ret test (bad) dec addr16 sub dec sbb aaa pop inc jns or mov jp fldl mov mov loopne jns ret lahf xor add add scas icebp sbb test (bad) ficoml or fcmovbe hlt jl ss out mov nop stc xchg pusha push dec pop fdivrl insl ret aas xchg inc lret inc jge mov mov mov std pop mov in add jmp iret pop sti lret rorl (bad) ds aad dec push lahf jae cmp in mov push in jle cmp lahf sbb test and cmp mov popa add xchg ljmp rcll pop lock stos (bad) (bad) dec mov cmp loopne,pn imul out xchg (bad) repnz fistpl push subl cltd sti inc (bad) lahf std cs stos sbb iret mov xchg in sub daa stos loopne imul push mov mov sti movsb repnz sbb sbb mov xchg mov fdivl popf mov sahf jne pop push inc popl leave xor lret xor xor inc clc arpl scas pop push push push add sub or outsl mov js out jns cmp aam (bad) or add mov shrb ret cmp cmp fcoml mov fdivs pop aad popa movsl mull pushf in subb imul mov sbb push mov mov inc arpl dec stc cs (bad) in fbstp loope (bad) loop xchg jns add nop sbb imul xchg in push (bad) inc sub push jo pop cmc test pop cmp jl mov stc movsl out aad xor jae dec mov popf ljmp jnp jne mov call sbb sub bts clc mov cmc push cmpb pusha lea jne btc sub add xor cmp sbb add rcl mov shr and sub add pushf ror sbb rol mov pusha test cmp pusha test push call add inc js je jb arpl jae xor adc cmc mov cmp cmpb jmp xor mov add mov jmp pop data16 icebp mov stc clc clc cmp cmp jmp add bt pushl test jmp clc repnz mov mov lea jne clc mov rcl sbb cmc sub stc xor btr or mov call pushf mov call mov push movw pushf clc sub movb pushl jmp int3 in in insl xor inc orb call xchg lods lds popa leave xor fistp mov mov xchg sbb dec xor push lret jb fldenv xor in insb jbe sti pusha jle mov jae jb cmpsb lods xor scas mov in jge out cmp sub addl enter add push repnz jl sbb jl jbe and jmp sbb test ret xlat adc sbb rep mov or mov jmp ret xor pop aaa cmpsb dec jge in sub jns pushf test mov cld mov push test xchg insl mull or jl or pop loop stc sbb pop or add jo pushl dec test test stc not test neg bt rol pushf pusha call lea jbe bsf rol rcr btc sub bsr bt bsf shl mov rol mov rcl ror mov add rcl test rcl shr jnp sar xadd neg mov call cmp movzwl mov shl mov cmc clc jmp adc pop inc cmpsl cmp sub and push mov leave jne or loop and jae lahf fisubl mov je add jp pop add ss dec jl ds cwtl lods leave dec rcrb push orb inc das jmp js sbb (bad) mov addr16 push mov push ds (bad) int insl mov scas push mov (bad) mov sbb mov mov jns cltd out rorb mov lahf mov push mov bswap movsbw call repnz jmp pushf mov jmp pushl movb lea call call lea ja push pusha lea jb bt cmpb pusha push lea jne bts and call call lahf imul loope out imul add andl sbb sbb mov inc push push and jmp hlt into mov sbb mov push pop and xor mov in fnsave pop (bad) jmp push test xor xchg inc mov faddl push fstl das out imul sbb fnstsw cmpsl sbb dec dec pop xchg pop loope test cmp pop dec fildll mov ja fs std mov mov test ja data16 fldcw mov div pushf pop xchg les in mov or call inc das mov jecxz dec mov call call mov cmp cmp dec push ljmp mov sbb fiaddl lcall and inc xchg push fstl fs jae popa ljmp pop push adc jmp xchg jmp les pushl decb rclb cmp dec div xchg adc mov js shrb mov mov adcl int pushf xchg lret push inc loope push ret xchg add mov (bad) or dec adc pop lods adc pop stc sub movsl call push (bad) in inc in outsl ficoml movb jmp call gs mov ds inc xchg cli and or mov sbb test inc inc xorl add mov or dec lea fdivrp xchg push (bad) xor sub xchg pop pop mov jbe push cmpsb sbb adc push pop xchg ja test sub cmc jb inc (bad) pusha mov jae cmp jle xchg (bad) mov mov test mov xchg sar xor sub dec mov loope cmp rolb mov nop iret dec push loopne push not fcomps iret push add fstpt mov jmp pusha mov pushl lea jmp stos pushl movw mov movb lea jmp push push inc push xor cs insb add neg push bt stc stc sub pusha cmp bt cmp mov movw jmp cmc jmp lea jne xor mov not or mov cmp sub movsbw mov rcr btr cmc mov stc shrd mov movsbw bsf inc mov test shl shl jmp sub mov mov movb pushl lea jmp lea je test pusha add jmp cmp inc lret arpl add mov mov or outsb movsb adc repnz out icebp cmp (bad) adc mulb push dec fwait cmp mov aad and cwtl cmp vorps inc xchg push or dec add das or divl xor (bad) jl test (bad) data16 cld cmp in jno mov pop push mov stos (bad) pop les xor add fldcw repz cmpsb cli loop and mov mov into sbb inc stc pop dec cmp notb adc popf mov pushf lea call jmp pushf call pop mov setne mov pusha jmp adc jmp daa fstpt or pop lret sahf pusha (bad) sbb sbb push pushf add fnop adc cld xor pop add popf iret push movsl jmp jle adc (bad) jp xchg xor mov into dec mov mov xchg sub (bad) fdivrs push jg cld mov cwtl movsl push les cs cmp jp iret (bad) xor int jbe pushl psubd inc sbb mov fwait (bad) aaa imul outsl sbb movsb and lods daa insl add ja (bad) ret sbb fsubs les push test jns adc ret mov cmc stc sub pushf call jmp jmp lods cmp cmc cmp clc add stc neg push cmc bt test not movl cmc sub call call pushf jmp pushf pushf dec test stc not stc bt neg stc call jmp push mov cwtl call push lea jb inc rcr not movzbl cmc lea shr shr clc imul (bad) idiv lret icebp pop add scas jmp mov pop movsbw not bswap mov call pop pop fwait dec cmp inc fcom mov and cltd mov and jg insl jge aam pop sub lea pop enter repz call xlat pop scas add xchg and add add mov mov add mov inc mov sbb outsl negl inc call and mov mov cmp std ss (bad) lea (bad) rcr or sbb adc lock in pop out inc int3 mov mov shrb mov pushf pushf lea jb stc lea pushf shr mov sbb not rol cmc not (bad) not jmp jmp pushf mov pushl lea jae daa rol pop stc aas pop aam mov call movzbw movzbw lods bts inc neg call test push mov lea jbe je movzbw setnp lea pusha pusha movw pushf lea call pusha jmp pushf call not imul bt lea pop bt stc bt push rcl neg push movsbw dec add mov xor mov pushf pushf cmp movb pusha pushf movb lea jb pushf adc mov bt jmp call movl pushf pushl popl pushf pusha mov pushl ret push push jmp pusha cmp jmp sub push lea jmp bt sub test mov pusha cmp call movsbw mov movzbw movzbw mov pushf setns lods cmp neg movb mov push inc push neg jmp pushf not adc btr neg setnp pushl rol shld or call jmp call pushl lea jb cmp call movhps inc pop inc and sbbl add out xchg cld hlt stc mov pop jecxz (bad) testl cwtl iret pop outsl loop jle add in push loopne lahf (bad) push out mov int3 imul out stos (bad) jno and cmp cs jb push aad cmc cli enter cmc add and dec call pop add add (bad) xor pop add adc jmp jge into mov in mov scas movsl fbld sub popa pop fnsave bound push sub and xchg dec push enter das dec insl nop ss pop shl test fist xchg leave jns ds push fs outsl add (bad) mov xor inc add sti ds loopne sub pop xchg dec fidivr push mov arpl or cmp aam cmp (bad) push cmc fmull sti incb test es in lods jmp scas mov lods adc (bad) jge pop pop adc mov adc mov cs ss test jae movsl aas mov add ss into lahf xchg dec sub lds dec loopne xchg mov adc xor imul mov sub sub rep lret and cmpsl or (bad) adc test in sub adc sbb lret mov test push rclw mov scas (bad) xchg and popf pop mov (bad) (bad) cmp aam or out jns or sarb xchg fiaddl dec scas pushl mov push bound aas pop ret xchg adc jbe adc addb xchg sbb jmp (bad) push xchg mov mov xor jg dec aas int3 rcl pop sbb xorb fidivr aas in mov mull dec sbb mov dec sbb adc adc ds fwait movsb andl mov mov sbb ffree fnstcw mov add aad ds mov es (bad) jne mov movsb mov imul adc rorb sbb cli pop sar mov insl test adc jg bound ljmp frstor test sub out inc sbb dec push loopne andb hlt sbbb (bad) addr16 mov lcall addr16 push mov into sub pop push xor push jnp dec or jo das dec scas pop xchg (bad) stos fs mov jg stc inc bound aas les jne divl (bad) aam leave or xchg jl out hlt call int push lea pusha lret fdivs lcall ret mov push adc mov lods and add (bad) dec ficom addl test aam aam cmp add stc ret mov or inc std mov push outsb sti mov rorl (bad) (bad) mov push (bad) sbb roll push xor int outsb das outsb pop cmp iret cli xchg out inc fistl aas jnp add inc adc sti dec imul lock or cwtl push sub jg sub mov mov xor ja mov sub loopne cs ds mov hlt lret ja pop or in xchg popf pop pushf addr16 inc in rorl mov js push jmp pop inc adc std andl scas enter clc inc stos aas out (bad) push lds faddl add (bad) mov orl jno out mov movsl test jecxz repnz cmp mov mov sub sbb mov out push inc lahf lods ficoml cli fidiv sub adc and int3 lea les adc xor adc (bad) mov iret sub clc mov dec nop fs sub rclb aam mov stos gs add push sub xlat lret mov mov inc adc pop pop fimul iret push lods push xchg mov mov lods std inc jno mov jge push js call scas push pop cmp cmp add insl cli sub mov addr16 pop xchg lret lods lret xor ss into push lods stc aaa pop (bad) lods fistpll clc stos sub adc fwait jne mov pop jle rorb and add stos jns,pt cmp or pop pop sub (bad) mov or mov xchg pop loop push andb stc mov (bad) fs pop cmp cmpl int and (bad) cmp lods or es jo add popw les into cmp test sbb push sub jbe lock sti mov repnz pop outsb mov cmp inc jne cmp cltd movsb (bad) adc and xchg cltd jbe subl push insb add loope push adc imul lret cltd outsb ret push mov cld pop sub shrl aam mov pop mov jbe int3 adc cltd clc iret arpl pop in inc push pop ds outsb jb scas leave orb xchg add je cmp mov mov add jne out jbe mov test or xchg mov and (bad) ss push stos mov push or fwait dec test mov sub dec lods adc inc push int jnp pop adc (bad) ja (bad) mov pop fadd sbb pop xchg cmpsb sahf in push test (bad) and jmp inc pusha mov cmp (bad) mov jne (bad) mov fs mov fistpll xor cmp outsb sub in stc adc mov (bad) or dec push cmp mov (bad) sarb jg andl (bad) or mov inc pop (bad) rcrl repnz das imul popa pop adc cmp mov (bad) ja (bad) stos xor mov mov cli pop icebp test pop push xor inc test sbb imul sbb cmpsb dec inc shlb enter aas lods jge arpl and xchg stos mov dec cmp push adc and mov jb out ror dec repz cmpsb mov pop jb mov dec lahf push fisttpll mov in cld mov lahf xchg or mov test cmpsl cmpsb sbb sub sbb sub pop popf js in fstl outsl les (bad) pop imul mov lea pop mov mov xchg sub add pop xor inc adc jecxz push call addr16 mov in mov dec xchg addr16 fldt es jnp hlt rcll xchg int3 lea pop pop push icebp pop ljmp imul lret mov inc data16 in (bad) (bad) insb fcmovnbe sub test imul push push testb (bad) adc mov cmp push push jl cmpsb fisubrl mov fiaddl call lcall negb cmpsb dec cmp or fnstsw add aad mov cmp sub adc push popf les xor pop mov inc add push scas push push jb sbb mov or mov adc sbb ss mov and das mov mov add xchg lcall loope mov dec inc pusha stc xchg push xchg ljmp mov pop aas (bad) bound jl xchg ffree xor imul adc lret aas out (bad) sbb aas push jo jae fildl (bad) fild pusha add mov mov ret xchg sahf shl stos dec mov loopne xor or in pop jp adc nop loope in or out pop add dec std mov mov jl pop sub dec mov xchg adc jmp xchg outsb inc (bad) incl add test xchg in orl pop clc (bad) mov lret mov xchg mov inc std in sahf xchg les fstl xchg jo xchg pushf add (bad) and mov cmp test push jnp notl loop popa iret call addr16 rcrl mov push inc xlat jmp xchg (bad) rorb popf sbbb pop adc sarl inc jl lcall pop out in (bad) xor adc dec mov data16 popf inc add mov enter rol in imul sub test push inc into push mov mov jb pop push adc or mov cmc test dec lods cld mov mov mov xor mov jge mov dec jge and stos fwait divps pop flds cmp lods cs lods pushf xlat sub pushf sub jmp test dec out addr16 scas fcmovb rolb cld mov movl and test mov dec push push pop jg fild imul mov xchg fwait pushf in xchg testb mov push jnp lods cmp loopne popa cmp dec inc push sarl aas fnstenv mov pusha mov adc out shlb mov and dec pusha inc daa inc ja jne and push and sbb and sub jg bound xlat loopne lods pusha adc push push and inc mov jge clc lds inc mov je cmp lret pushf in cmp push jp xchg sti bound push push orl in mov xchg sub jmp sahf cmpsb jbe je cmpb sahf iret sbb push xor or cmp pop subl aaa in pop mov ljmp inc mov push push xchg pop aad push pop lds pmuludq push (bad) out push xor mov (bad) aas sub mov mov inc cmpsb push and pop mov cltd pop sbb sub rcll add and nop mov and add test lock and xchg pop push xor mov into mov mov cmpsb jmp or pop pop cmpsb adc test sti lahf test test pushf dec jne jecxz fldl cmpsl enter sub jnp jno daa fsubrp lds out add loopne in (bad) sbb push scas fsubp lret mov sbb mov cmp cmc stos popf test xchg movsl dec adc insb push ficoml leave jg stos cmc pushf jmp xor cld daa inc cmpsb adc scas int out mov rcrb cltd js stos push int popa outsb push pushf rorb lock xchg mov push das mov stc adc sbb (bad) in mov dec inc sub or or mov leave inc mov push pop add cmp lret sub repz add ret mov pop inc popa lods jbe jno movntq adc xor adc iret orl sub popf aam std jns sub mov mov adc pop xchg test test jae ss mov arpl loop aas and sahf orb je enter insb sahf mov mov sbb pop movsl and mov daa mov jns sahf ja dec add pushf int mov (bad) sbb call push cmpsb mov add sbb outsl (bad) stos ret shll addb daa neg ljmp imul ljmp mov out call loopne or sub icebp in lods inc insb sbb imul mov pop pop xor jne jbe lea fmuls jbe add push mov mov jo les add outsb sti fisttpl or std adc cmpsb rclb adc xchg jp in pushf inc mov or lahf repz loop lds pop out mov inc aad adc pop xor stos pop jp xorl push push xor icebp ja fs dec lahf or fisubl mulb sub test (bad) add lea test xchg pop das icebp xor lods sbb xor roll aam in lret bound das and popa movsb repnz xchg cmp pop or movsl xlat inc adc in cmc inc jnp adc mov mov mov cwtl outsl inc jecxz jle insl scas imul and cli jno dec xor dec mov aaa add cmp adc imul push test jb push jb adc mov add adc mov cmp mov test arpl cld fstps orb int3 inc xchg jle (bad) rcl loopne or mov inc leavew xchg clc pop or jle scas cltd adc into inc add sahf popf movsl (bad) movsl in xor add hlt pop mov lock cmp addr16 mov lods jmp shl bound out fxch adc out adcl mov or mov jbe scas lret mov sahf outsl lods lods data16 and iret mov dec ljmp cs gs sbb xchg push dec in mov pusha pop (bad) mov xchg xchg xchg jnp sti mov movsl sub in xor fs sbb pop jb outsl dec push lahf insb adc lods and push push lock xchg xor xchg mov add push cld sub rcrb popa mov addr16 and iret les bound pop lea test scas movsb dec mov or pop jo push xor in outsl (bad) loopne jp pop rorb sub mov (bad) jbe adc imul fnstcw mov inc or inc test outsl scas es hlt add push pop test and and pop xchg mov xchg popf (bad) or movsl or lret adc dec sahf dec fisubr sbb inc (bad) sbb xor mov lds mov fist lea movl push and mov mov dec xor xchg mov popa jmp add jb pop pop or adc xchg (bad) cmc lcall adc dec out pop and stos jbe clc out cmp (bad) mov pop pop pop gs push mov sub mov push mov or in pop mov pop cs push jmp scas jb sbb or mov xchg fildll dec sbb sub and pop inc jae cmpsl out fimul jae or rcl int3 fsubr mov out add es in in loope inc xor or sbb push pop pop pop je fwait xchg test negb les stos inc push pop mov jb lahf pop es mov add adc fistpll test jmp js rcrb xchg iret ds clc pop push jmp outsb out xchg out je jne gs roll mov arpl popf rorl mov add cld into popa pop je sub data16 sub popa leave into dec cmpsb outsb cmp pop addr16 loopne js push or in dec jae xchg fistpl outsl jbe push sbb test add push loopew dec mov test lock cmp mov fcomp sbb call sbb roll jge in insb dec mov out (bad) xor cmp lret push int3 cmp pop inc pop cld stos fcompl repnz in cmp js jmp or call push dec jg cltd (bad) sahf in leave mov clc into das inc pusha xchg xchg iret inc adc xor iret nop enter pop in dec fwait xchg push pop rcl (bad) aad fldl mov (bad) mov shr popa lcall add jg sbb xlat les scas jecxz and jecxz push pop mov xor pusha pop fwait xor cmp and test and xor xchg cmpsb test add rcrb icebp sub out pop fs mov pop insb in repz aas xchg iret mov sub pop mov out lcall cmp dec out aas mov adc lds pop hlt lock je pushf jno push ret mov out mov cmp sub insl das pop add push stos jmp movsl add jne mov mov and rorb pop loope adc popa add mov sub addl scas cwtl add pop mov mov cmp or loope jns outsl jb push mov xor jne enter rclb fisubrl or push adc mov cmp xor mov mov or dec mov gs ret call add stc inc dec cmp lret movsb xor (bad) dec mov jl pop mov (bad) jns lods dec and outsl clc sub xchg inc xor jmp xor ja jl call pop pop adc loop fnsave (bad) pop dec clc je xchg adc addr16 cmpsl stos mov aas dec or out popf aam daa sub xchg pop dec cmp and fisttp cmp lock aas and rol out adc cltd cmpl std arpl pop in pop test in fidivr int xchg adc (bad) mov dec mov jl lret fs push lret mov mov mov movsb lock jnp movsl push cmpsl cmpsb jbe push sbb jnp xor roll inc insl or popa push pop push push inc sbb dec test in outsl rorb insb inc mov daa arpl mov push mov loop cltd loope sub mov pop lahf jle mov jnp inc push sub mov js fmul add (bad) fcmovu mov xor cmpsl aam or (bad) cli mov mov pop ret mov xlat push out xchg mov repz mov clc push hlt pop sub ret or popa daa scas push aad xor std cltd push adcl sti ja negl and pop imull imulb pop (bad) (bad) mov mov inc or lods pop pop fs and out inc pop dec xor xchg xchg mov pop in fucomp push enter or sub gs cwtl mov push imul in dec imul movl and push sahf xchg mov loopne push loop cld pop lcall in inc inc mov mov sarl lods adc push roll cmc jbe loop inc in xor xchg inc leave xchg dec or aas fisubl movsb fstpl inc inc movsb add mov in loop jb xchg mov pushf push (bad) cmc sar repz aad jb cld add dec (bad) je lock fucom loopne sub dec pop adc push mov sbb (bad) ja clc into roll imul dec mov push push push insl sbb je xchg lahf (bad) push inc cs sbb sahf adc lret imul inc test mov jmp and pop or jl jp aaa mov adc cld and lods mov arpl jns pushf test add paddd pop jmp dec sub enter push test jmp imul mov push lea lret cli mov mov dec mov loopne aam pop pop sbb mov inc lods loop mov lret fistl int3 push pop test test dec pop add xchg fidivrl imul push test mov cmc inc fisttpll sbb dec xchg int3 out cmpsb pop cld dec pop push dec or fisubrl icebp or insl fs fstpl sub and dec jle and lods shrb mov int3 cwtl mov jbe mov cld or mov jb lods inc add pushf adc movsb aam in aad arpl dec loopne (bad) sbb sbb inc push test (bad) daa shll dec addb sbb pop sti ds stc stos mov mov push or fstpl inc dec pop and jge (bad) in inc insb or mov popf ja inc fiaddl ja sub in inc (bad) adc mov jnp xor cmp (bad) out mov pop je push fbstp inc mov insl arpl inc sbb orl lods jg push gs loope jnp inc sub repz out pop mov sti or fsubrl mov inc movsl sbb dec dec aaa in hlt and sbb mov and mov adc sbb mov stos xchg arpl cmpsl mov xor dec lea enter jb push cmp and mov adc imulb into xchg fild cmp mov fs push dec ret cmpsl roll xchg jmp adcl scas rcr sub xacquire sbb sub (bad) mov daa inc js pop outsb (bad) repz lods or mov jge mov aad lock repz cld pop inc pushf sub int3 push mov in dec fstps add inc add sbb xchg out mov es jns mov xlat xchg imul and pusha xchg mov imul mov mov (bad) inc lods sub lods hlt (bad) je and adc in fwait es (bad) cli fdivs sbb aas adc les cmpsl jae xor sarl mov bnd sbb add scas (bad) pop cs fisttp out scas add les or cmp mov xor (bad) es dec pusha sub push faddl ret cmp fnstcw fisub popf clc cmp ds mov lds leave adc shl sbb (bad) pop aam call mov fiadd je jle xchg pop push jnp sbb test cmp xchg hlt test movsl icebp mov and leave popf dec andl and imull jns pop mov cld inc (bad) stc fstpt xlat mov or es aaa mov and lret and inc add mov dec xchg adcl jae out inc lret (bad) mov jo adc fsubrs stc ret test lret imul add clc mov push xchg add mov mov push inc sbb sub popa ret inc outsb ret push sahf mov ffree mov shlb leave fwait sub pop movb adc out add pop xor outsb das jns pop nop fsubrl jl and mov cwtl aaa or fs and enter fidivrl out test lea rcr outsl sbb sub ljmp inc sbb imull das or add pop add cmc call mov pop add sti pop adcl int3 pop push mov and lds push push cmp dec fnstsw js dec loop enter mov xchg sbb cwtl dec into (bad) jp popf cs pop clc leave mov ficoml rcll add fist xchg cmp cmp mov testl test mov aas xchg inc fisubrl add cmp (bad) fnstenv pushf pop lea adc sub cmp cmp nop cmp sub push inc roll mov fdivl aam mov cmp jp cmc aam xchg orl clc mov push cld pop xchg dec (bad) (bad) fdivs push inc out cli and imul dec testl or hlt sub repnz aaa repnz in sub and cmpsb out fmul fimul cmc data16 movl and mov test add loope cld (bad) jae bound cmp push lock xor sub push lea push xor icebp rcll cmp in pop or leave mov out (bad) inc icebp pusha (bad) outsl addr16 loope and insl bnd lret xchg inc mov lret in xorl loope enter xor pop cmp jle les (bad) js mov or or xor negb xchg or ret cmp adc les imul shr dec pop cmp idiv ss inc inc inc cmpsb cmp (bad) adc cltd imul out dec popa into push pop enter ja aas and sti xor into sub adc call dec push icebp scas imul or std pop mov test dec mov shll jle in lea and (bad) dec (bad) sub mov jne and mov iret icebp sti test lds adc inc lret push movsbl out mov mov repnz xor lock ljmp or jl cmpb or data16 daa push lods jno insl fildll sub inc push sub shll bound stc insl mov xlat adc sbb scas rolb adc push cmp sti lods repz jl test or stc xor mov or push cmpsb sbb mov push in mov jbe dec add dec pop lods cli adc and jbe adc call jno mov pop faddl cwtl (bad) insl movsl ret in mov faddl and insl ror fisttpl ret (bad) rorb btr jnp xor fcomps mov sbb pop jns sub add and cmp add mov and or jp inc inc loope daa pop add jb mov into scas pop add mulb stos jle fsts int3 jne xchg mov iret adc pop push push mov jp xchg adc pushf inc mov hlt push pop (bad) mov stc lea push pop cmpsb jbe sbb mov int or xor inc repz iret pop mov fst sub fcmovnu lds pop dec or aad js in js and sub out in rcll lcall dec mov hlt pop xor pop jmp jbe cmp push cmc sti adc sub lret dec mov enter sahf in (bad) mov ss mov imul xorl xchg aas negb ja ret adc pusha push lcall jmp int dec lahf push std or jbe roll or fist or push fs jge jns sti mov movl mov mov sbb fwait mov cld mov lock pop pop cwtl sti out push push push mov fcmovu test stc lret add jecxz aas or notb mov (bad) adc out dec dec jecxz shr pop mov fcomps push in mov jmp outsl outsl fldl xchg lds popf jo pop dec enter jmp (bad) ds and xor push fmuls in or cmp sbb xchg gs fs aas cmp mov iret xchg icebp and (bad) lock nop push jno push stc loopne and jo push insl or or mov inc pop leave sbb insb lcall pop std in xchg test cli in dec inc or movsl out mov je add fwait in fwait in cmp adc inc (bad) popa mov mov (bad) out jne pusha add jge and mov add outsb addr16 add mov lods xchg (bad) lods xchg adc (bad) fsub out xchg data16 out push push cwtl push sbb rorl mov cmp enter fwait es fcoms shrb imul jge mov imul jle mov inc int mov (bad) jae in (bad) cmp loope (bad) outsb mov scas mov inc xor xchg sub (bad) or jecxz scas jmp xchg iret xchg dec imul std sahf lods add add insl das lcall mov jmp xchg int3 push cs and sub shlb in je dec pop cli test (bad) (bad) dec mov stos cmp (bad) ds (bad) test xor adc leave shrl (bad) xchg jp mov repnz mov nop es jl sahf push pop out add sub jmp cmp push dec mov mov ds in les divb jae add repnz leave mov xchg leave mov bound mov dec jns pop jb mov mov push push lret jmp call loope mov xor pop lods push fs xor mov xor fsubp outsl pop rcrl (bad) sub (bad) mov imulb in daa push repz aad dec mov inc push adc mov or lea and fisubr xchg aas jo popa out sbb cmp scas movsb mov sti loop or xor cli les add jg sbb fidivl jno lret lcall jno fisttpll xlat and inc ret ret xor mov (bad) aaa fsubl inc push mov mov adc mov mov lret out rcl call pusha pop or mov popa and mov adc mov adc ret pop xor arpl daa sub out loope push xlat bnd dec add push mov int repz mov or stc dec daa jg sub inc lret jo loope mov lret adc jmp mov push lock test xor push pop mov mov mov cmpsl sbb and out inc xchg in repz bound pop shll adc scas aas or les and cmc insb or out mov jns mov (bad) jne gs aad bswap dec rclb popa cld mov and jge fnstcw and std popa jge arpl sbb inc push sti xchg mov fidivrl shrb jmp xchg fadd (bad) lock repnz mov sbb call fimul scas jno cld dec ret lcall add cmc inc lcall or lock movsb rcrl pushf inc rcll mov xchg jecxz popf out nop push adc xchg push cmp popf mov jb (bad) sbb xor insb mov ljmp and sbb mov aam mov stmxcsr add cmp pop dec push pop test push repnz inc xchg ret jno adc stc add cmp xor and rolb inc xchg ret dec fsubrs xchg popf ja jl xchg (bad) mov popa jl cmpsb lea adc popf lcall out sub nop stos aas gs xchg or mov fmuls pop add xchg jecxz imul sbb push popa (bad) xlat and sahf push (bad) mov push sub mov jecxz arpl fs fcompl pop mov inc mov or cs lahf pushf lret aam mov loopne lods cwtl push into lock lods ret shrl mov lods adc jle sbb jo pop imul ds sahf mulb insb xchg ds fcmovu pop rol scas adc test inc adc js jge pop aas mov fwait (bad) sarl imul fwait test adc mov fadd sbb inc pop inc add sub iret mov dec cltd dec aaa add dec jno jecxz,pt inc fildll sbb icebp roll nop add cld jle adc sub ljmp out jg or inc xchg aas push jge gs lcall mov xchg inc aad mov stos jg or ja jmp stos mov cs es psrld es sub xor shlb mov adc sbb xor (bad) xor push cmp mov je push jg pop sub pop ja fcom imul aam fs nop test cmpsl stc stc sbb fwait das push aam mov cli pusha mov inc je fstpt hlt mov adc jne cwtl lret and xchg adc ja fmull push lahf add cmpsb sub (bad) adc xor xchg dec xchg mov add pop xchg jl cmp sbb xlat ljmp mov cmc or or pusha es xchg bound sub push xchg mov lret (bad) loopne push cmp xchg push sbb pusha fcomps shlb cwtl (bad) notb mov (bad) xor add or test inc add inc push inc mov adc in xchg push mov dec dec out stc ret lret mov test in fs in mov cli mov imul xor jle rcl fiadd pop jg push xchg outsl push mov scas jno jl fcoms test lock (bad) xchg cmc jb cmpsb push mov pop sub add stos or iret push mov jnp cltd sub or cltd cmp xor popf or cs pop mov add (bad) jg test cmp sub and outsl push sub call inc inc adc fs or inc add mov jae mov out mov sbb rolb test mov mov jno inc (bad) jnp int push mov mov inc std ds into mov ja lods add jnp in ja out sbbl lea call test vminpd inc out mov ja jl push lret pop popl pushl sub popa icebp shll xor inc (bad) test adc rolb mov jp and sbb xorl push mov outsl cmpsb mov adc je push dec jne mov inc xor subb inc rorb mov cmpsb and mov add cmc divl insl mov pop xor mov push dec dec push std xchg xchg fcomps and lea pop mov mov imul loopne adc roll insl xlat lods mov es sbb fdivrl xchg aad daa lahf fisttpl (bad) ja (bad) lods stc mov clc jnp movsb mov ja mov psubq pop pop cmp jns push mov in pop push inc sub push hlt sbb and inc or cld jns gs repnz jae out and inc inc ret (bad) pushf push cs mov sbb sbb cmpsb ja pop push out jecxz xor mov in sbb sarl (bad) jne lret icebp xchg xchg pop ret xchg fsub pop insl ss pop xchg mov jp jne lock push fmuls pusha cmc xchg xlat jecxz fdivrs ret jo (bad) (bad) gs ficom test mov sarb stos out dec test mov jg mov aam (bad) iret mov imulb mov dec pop xor (bad) cld mov test lcall jecxz adc xor pop or cmp pop cli adc pop pop inc jle xor fs jnp test xchg pushf test aaa cmp mov add pop pop inc xor inc ret mov dec and movsl xchg mov pop xor adc je lret mov mov jp jg sub jb popf xchg sub add dec mov push ljmp frstor mov ds jae add dec cmp dec (bad) test mov or push add xor adc and add mov adc fst jns cmp outsl daa out in jle xchg xchg lods ror mov sub xchg and or incl pop aam repz xchg sub xor add cs dec hlt mov xchg dec out mov pop add ja inc push and cmp ffree jne clc mov sub pop mov add mov lods or pop cmp cmp cmpsb dec jge or faddp imul cmpsb sub sti dec adc mov fcomp jns mov movsb div (bad) fstpl dec pop (bad) mov (bad) cwtl cmp cs lahf push in orb jnp pop aam test xor inc or cmpsl ljmp sahf pop dec jmp sbb mov dec pop mov aad push inc repnz cmpsl push pop xor sbb insl (bad) idiv int3 adc ja pop bound or es and jg add (bad) sub push or cltd add adcb fsts (bad) scas shlb popa inc int dec mov push in mov mov xor xchg in sub sub and popf loop fisttpl int3 mov mov mov or jge adc psllw loop fld test dec aam test push xchg mov jne jne icebp inc aas push mov mov inc insb (bad) push xor mov xchg adc shlb repnz aas cmpsl ds fistp cmpsb sub lahf jnp subl add (bad) mov dec adc out sbb or dec jne jns lods xchg adc bnd and or pop xchg popf mov sbb (bad) mov pop (bad) mov (bad) sub rorb imul div cmp popf stos mov mov pop or add (bad) (bad) lock sbb mov sub aas xor dec lock pop paddq cmp (bad) lock repz mov paddw out inc jmp inc (bad) pop (bad) jmp (bad) xchg xchg test test sahf imul mov or call mov jl fiaddl cmp imul mov les mov or jnp das jge sub add add mov mov sbb mov (bad) jp jle mov inc pop mov push out push mov mov xchg iret jno in xchg ds rcrb push shrl sub push mov lds scas into out xlat insb xlat pop jbe jle cmp rcr int3 enter sub jnp lods push enter push aaa pop repz push xchg xchg inc call stos inc ja add jnp mov mov mov aas push jg movsl (bad) jl (bad) ret sti inc (bad) out add pop in xchg test jbe rcrb cs xchg adc jnp jne (bad) cmp or pop xorl cmpb jae mov pop outsl jp lret fistpll xor stos push add lods insb stos pop fidivl xchg leave cmp jmp (bad) or fiaddl sbb sub xchg add leave insl mov (bad) lods (bad) cmp or push test outsb test and cmp xor sbb cli cmpsl add mov in das js pop in xchg insl sbb fwait mov rcr xlat ljmp mov push std mov in add cmp (bad) in clc dec idivb dec sbb fwait mov lcall xchg mov cli sbb mov pop ljmp sbb xchg fwait hlt xlat (bad) cmp cld xor and dec das sbb xchg xor (bad) mov (bad) into nop adc enter inc and sbb je gs sub mov pop repnz fs out aaa xchg mov and jecxz repz imul xchg pop xor mov and mov mov adc pop mov shrl jp adc ljmp cmp es lahf rcll xchg mov adc shrl sarb ljmp cld in test cmp add das push lods (bad) cmp into (bad) out mov inc aam fsts push (bad) add xchg xor push shll lahf push imul cmp pushf inc jmp jb pop fbld leave shl lock xor cmpsl xchg out scas fnop insl stc mov lods bound hlt xlat mov outsb rcl pop movsl mov push inc pushf dec repz lret popf jne les or lahf iret (bad) xor cmpsb mov mov inc sub or and fimul (bad) xchg clc adc in cmp lret out pop aaa push xor xor repnz dec addb jl movsl jge push test pause rclb or roll (bad) inc adc bound insb inc mov push lret or inc pop cmc xchg push sub xchg pop or jns aad scas subb fbld aaa aaa scas pop pop xchg into lahf inc out push jecxz (bad) jle fstps imul mov pop cmp (bad) adc fidiv sbb aaa rcl into loope add (bad) sbb inc int3 mov stc leave or push jl and dec ja loope test mov dec or and pop scas iret pop pop or dec jmp pop test orl or (bad) jae dec jmp (bad) and cwtl dec (bad) and movsl data16 push cmovs ljmp mov or xor or fidivl fstpl pusha xor sarb pop sub jne xor mov and les (bad) scas or fistp adc or fs daa mov fcmovbe mov mov sbb adc xchg ljmp xor fisub cmp and adc sub ds push xchg cmp scas sub movsl ret (bad) and dec notb sti in cmp fcomp repnz mov inc and (bad) bound pop lea sub rcrl sahf jnp pop and mov dec dec fs pop sbb mov dec divb mov ljmp and cmc in mov das outsl aam or out dec or icebp (bad) fsubr pop cwtl fimull fldl dec ss inc mov pop mov fcmove add das fisubl hlt ss (bad) je add inc and icebp add push orb xor data16 jnp lcall (bad) sbbl mov cmp cmpb fdivs (bad) sti lret iret rorb cmpsb xor adc sub xchg pusha ficom int3 push (bad) lock jle popf xchg sahf xor inc fsubrl shrb dec inc fcmovb mov pop cmc cmp jg test pop fwait hlt cwtl pop lea mov pusha imul sbb or sbb mov dec lret nop inc jbe clc sbb jno add (bad) xchg in movsb adc scas (bad) xor jae,pn call mov sbb cmp add cli and jl test adc push loope scas sti sbb jae pop cmp je pop xchg arpl fistp in dec push and aaa js mov xor daa and pop inc lods mov inc sub ja insb fisttpll adc cmc jmp (bad) adc inc (bad) aad add pop daa mov call dec aaa pop in mov sub hlt js mov add push (bad) cmp jmp mov or stos repz insb cltd push scas (bad) xchg jbe (bad) (bad) dec cmp cmp movsb sbb cli mov add and xchg adc imull xor pop xchg scas mov inc add mov pop je cld fwait and lods pop mov sbb inc aas fimull mov dec in stos sub add int3 mov nop iret cmp ffreep dec pop sub and fwait (bad) outsb iret clc fidivrl fs ja test mov push mov nop pop xchg loopne cmp es (bad) add xor sti call mov add fidiv and outsl jnp xchg jbe sbb xor es sub mov (bad) sbb adc push idiv out aas mov jbe mov cmp mov aaa insl xchg scas out out mov mov mov or push sbb adc mov gs scas fnstsw test add js std pop sbb cmpsb push mov mov insb gs stos jae scas repz cmp push aaa frstor xlat add lods aas or sub (bad) push xor xchg sbb mov repz insl cmpsb jg pop xor and adc or push or fmulp ret in gs jnp shrl adc dec pop popa lret xchg imul jle mov scas sahf cvtdq2ps pop (bad) jo ljmp pop inc adc aam sub push pop adc int3 aad repnz insb in outsb dec rorb lock cmp jnp dec (bad) cmpsl cli sub and add jns jge sub or stc mov jno xchg test mov adc ret mov outsl mov xchg (bad) iret rcr cmp mov mov jge xchg xor inc pop dec pop jns (bad) adc mov (bad) push call mov pop pop mov pop fcompl sbb lods add scas or ss mov nop daa int (bad) fdivrs pop sbb pop shlb daa (bad) fild call repnz test mov lret push fs xchg push add shll sti arpl and mov (bad) std test sub jne pusha arpl cld (bad) fcompl or fmulp sub neg sbb mov push jmp dec add (bad) inc cmp shrb ficom sbb movsl fisubr xchg notb je aas adc pop adc xor or xchg data16 shlb clc jmp and dec imul in sub fs sahf add dec scas sbb push xor dec pop jmp adc popa xchg negl gs sbb repnz aaa std test adc stos lods cltd out inc in mov aaa (bad) dec xlat mov pop mov daa jb data16 in and add in and sub add or jl nop scas xor hlt push movsb ja sub daa mov jb das sbb loop gs mov cmpsb add xlat popf icebp xor fnsave insl inc cmp int3 les pop cmp scas or imul pop gs jg mov cmpsb pop stc and sti cmpsl xchg std fiaddl adc leave mov and loope xor mov enter jno js sub mov pop mov test test data16 sti into repz lods jo (bad) rorl mov push and jae mov pop adc cmpsb nop mov jle cmp adc sbb sbb or jne xchg add add int3 or cltd jmp xor lds pop jl (bad) mov insb cmpsl into push add in fbstp enter pop or add testb jns fcomps dec jo lcall mov mov (bad) jno dec sub lahf lret mov fwait imul dec iret xchg and int3 clc aaa jo sbb into scas nop mov xor cs lahf jnp jmp mov or std movsb popa mull cli inc out shr cld sub bound jbe dec cbtw inc adc fsubs add sbb mov sti inc mov rorb repnz xor std mov ja ret fs stos push adc dec xchg js das shll out xchg add movsl xorl or push es xchg or cmp mov jg sbb loopne push (bad) (bad) add or xchg stc jmp (bad) or dec adc icebp rcr pop dec xchg test mov sahf cmc (bad) cwtl adc lock aas adc je push (bad) enter (bad) test or imul cmp popa mov inc lret ljmp sub push add sbb out js inc cmp jmp pushf sub cmc mov sub pushf into xchg test xlat and loop push dec xor inc push add gs stos and imul and stos mov pop arpl inc mov inc ret sbb popf jno in jbe movsl pop jp jb mov cli out je xor sbb cmp pop mov mov pushf (bad) cwtl mov xchg mov adc (bad) jl gs push pop lods mov jnp fildll in aam (bad) in or rorl (bad) xor mov push add daa (bad) cmpsl pop mov scas dec mov repnz cltd mov push jae push jecxz inc imul xor sti mov jl dec es inc rorb lods in jecxz lock inc nop xor movsb es or cmp mov subl mov sbb inc fsubs mov (bad) (bad) test inc gs mov push loop mov adc insl pop add mov mov mov or xchg pop (bad) jne xor out mov aaa insl mul jae (bad) xchg ret clc dec xchg (bad) mov mov pop paddd sbb mov sbb mov mov mov fisttp sub in and iret cmp mov incb (bad) int3 dec fsubs xor test sub inc push repz mov int3 jmp fcoms bound xor mov sbb and cs or inc sysret inc jmp and dec pusha repz push bound movsb sbb pop rcr mov adc xor ds (bad) ret push test mov mov (bad) jno icebp mov dec sbb (bad) mov push xchg outsb xor mov faddl push or aaa jbe pop cmpsb mov jnp incb subl pop jmp pop in push inc fdivl lea adc mov pop or shll mov inc and pusha test and mov icebp cmp add (bad) (bad) push repz or pushf (bad) rol xchg cmpsb movsb xor loop lds ss xchg push sub lock (bad) mov sbb sbb or inc push mov in loop nop jb add and adc mov cltd mov pop mov and shl lock and in pop cmpsb mov add push movb enter push and mov add test add jp (bad) (bad) adc arpl stc fwait push mov rclb mov sahf fwait add xor lods xor in jne addr16 jmp test cmpsb inc jb add cld jb (bad) int push movsl getsec pop das inc xor sub xchg mov in cld loop fstpt dec cmp cmp xorl stos mov repnz repnz out dec dec dec mov dec jb jnp and popf xchg cmpsl dec sbb (bad) ja outsl xor sbb fisubr push pmaxub xchg xchg xor add pop (bad) addr16 add push ds cs jl lods push stos lret fadds cmp mov add jbe jmp fldz out lock call xor push aam jb and fistp (bad) mov imul je mov sbb push aaa fdivrl repnz pop cltd push add jno and ss sbb fist cltd mov dec lcall cld insb (bad) xor testb jle mov (bad) mov repnz jo das mov lret mov xchg pop mov jmp jmp xchg fs cwtl or mov stc cmp cmp int3 or fildl pop push test xor mov mov and mov mov and cmp sbb ss pop jb in add push out inc or nop je or pop or or jg cmpsl adc push pop xor loopne out cmp jae cmp jmp divl cld mov mov push dec push sub inc sbb sar fidivl int3 and sub push out nop addr16 dec sbbl incl cmp jle fs insb imul inc movb add mov push xor pop dec push aad insb and mov jecxz jmp xchg sub (bad) cli and cmp lods push aaa fsts push mov negl div aad lret sub cmpsb cltd mov pop pop cmpsl mov scas push outsb and shll mov jmp lods pop mov xchg push sti sub sub mov mov fidivrl add mov dec mov lods jno (bad) jp sbb fcom pop hlt push out pop push sbb pop (bad) or mov lcall xchg pop lods je inc inc jnp push and rorb inc mov js mov enter cwtl or subl aas xchg sub ret push mov adc and add mov and lcall sti add movsl dec push xor icebp cmpsb dec (bad) daa pop xor pop test add call pop xchg xchg stos ljmp std inc enter xor mov gs addr16 dec xchg mov movsb push xchg movsl roll insb adc adc data16 aas gs pop push mov pop push inc ficomp mov fstpl out test sbb mov pusha incl addl scas inc test mov aas pop js lret frstor xor pushf lahf mov fldcw pop movsb popf inc movsb inc add mov and (bad) fsubs lcall dec insb (bad) (bad) xor cmp sub ljmp push and js inc aam fmull (bad) std test gs pop mov push loopne mov gs ja movsl push mov dec not lods ret daa out mov daa pop bound data16 cmc inc lods les xchg fs adc cmp fxch jbe or rcrl push adc jl pop test sub add inc adc (bad) mov mov (bad) pop jns adc adc pop and mov aaa and xchg mov push out push push cld mov sub or icebp add lret fs jmp pop loopne fbld xor enter or push adc dec add hlt daa jo xchg xchg mov cmp imulb enter fistp add stc cwtl push pusha sbb sub cltd and push lods ret xchg push xlat mul pusha (bad) call sarb mov test mov xor test xchg add insb adcl ss pop push stos subl adc fwait fs (bad) mov icebp cmp out sti dec and and icebp les jb push add adc sub xor add nop mov cmp es daa mov mov or les add xor pop sbb cmc adc das and xor in mov scas adc dec jo adc fmulp cwtl cmpsl int3 mov sbb jns pop or imull mov mov lahf int3 xchg outsb add jb (bad) xchg outsl or xchg push xor sbb cld lods pop test jbe push and dec and rorl cmp pop stos push jle hlt adc inc lret test mov arpl adc lods rcrb jp pop push jge test outsb (bad) xchg push or (bad) jnp jb jmp jle ret js insl cmp adc jle ret insb or sbb push fist mov jnp jb pop decl dec sti dec insb push shrl fcmove cmp add icebp add fidivrl iret adc sub add sub adc or (bad) xchg pop xchg loopne mov add inc push sbb sbb add int3 ret push bound xor test test lcall aaa jbe jbe push mov inc clc rclb mov imul mov das imul sbb xor sub xor jp xchg fnstsw fnstsw push push in movsl ja cmp xlat mov testl jp mov and push jbe arpl pop lcall loope stos stc rcl pop pop into jno (bad) push fildl jne lds adc call xchg cld ss stos fwait mov xlat pop mov dec nop mov out jle mov imul ja xor and insl adc mov outsl fcomps inc dec mov pushf imul jnp sub lods jae ds ss jae xchg cwtl sub mov mov data16 imul push cmpsl rcrb out jns mov cmp add js xor cs xchg aam in jge jp das sub ds inc sub in pop jp shrb sub bound mov jl jbe jb xlat test (bad) test push lret push pop jbe adc gs pop cmp in sub or cmp scas mov scas lock out aas repnz stos pop jne cmpsl aaa aas daa test jle xlat std (bad) cwtl sub rolb cmp push add rcrl aam leave jp jb xchg mov jbe repz and adc mov xchg push movsl das add xchg jge cmpb xchg sarl xor leave sarb add add fmul js dec btc (bad) mov int and arpl pop or fiaddl leave sarl int lds jbe in in jno cmp lret popl cs mov mov pop jmp dec in outsb adc test mov popa arpl leave inc xor stc cmp sbb shr cmpsb jle mov movsb test or pop (bad) or mov mov iret fsincos lret mov mov loopne leave inc cli test sbb push mov les lock lods add movsb (bad) lret mov insl dec and shrb dec test mov xchg repz faddl mov sub sub (bad) rclb jno loop dec imul adc sbb and and sub movsb dec iret je loop xchg add xchg std mov ret xchg sub int3 mov enter cwtl imul int idiv cmp cmp std hlt mov inc cltd adc sarl mov adc or mov inc cmp fistpl icebp xchg dec push lret roll in mov mov sub mov push pusha jb jns dec out pop xlat cmp push xor and push sbb push addr16 jp es (bad) mov sarb dec repz lds stos insb into mov add xchg cltd pushf xor add xlat dec aad sub add imul cmpsb aaa imul imulb (bad) shlb push mov fnstenv inc stos outsl outsb in (bad) dec test jg adc xchg les (bad) adc pop jmp sbb pop (bad) xor inc push cmp add dec sti aaa cmpsl imul xor pop and cmp jp xchg jg das cld jno pop jne mov fdivs movsb inc aaa popf pop (bad) or (bad) fadds cwtl mov push fisttpl in popf lds ret pop add inc adc movsl xor adc dec hlt push cld aaa add pop push sub cmc lock out or sbb sbb xchg mov pop cwtl std rcrb fmuls mov mov je loopne mov adc dec jbe dec gs (bad) stos sarb or sub pop cmp mov sbb jns enter pop cmpsl xchg aam add xor sub fucom xchg add mov arpl es xor jne add cmp idiv sub mov shlb dec and sub dec cmp aas or jne push addr16 test jne sbb (bad) pop and ds pop loop in pop mov and xor jne pop in push sbb cmp arpl daa addb (bad) jne push push (bad) loopne xchg push pop arpl fisttpll cmc mov mov mov or out xchg push loope or push push in movsl popf mov leave and (bad) pop das xchg (bad) cmp push or sbb in scas lcall (bad) cmc jb mov lods into shr in cwtl neg xor hlt (bad) mov mov fxtract adc mov and xchg pushf xlat mov out cmp pop sub push cli mov mov dec rolb xor dec repnz mov mov cs jl or sub sbb mov daa daa dec and in iret std imul imul jl pop clc and xor mov inc add xchg ss mov addr16 add mov inc and adc dec sub addr16 jecxz inc push jge pop cmp sbb js cmp mov aam insb (bad) sbb inc (bad) lds loope aam out jmp mov lea cli out pop mov cmp mov xor or fs push xchg je icebp pop cmp subl mull ret sbb and aas add dec xchg sbb imul mov repz xchg xchg xor pop mov jg sub (bad) xchg pop sbb fwait inc adc iret cwtl cmpsb imul aad in mov hlt mov dec in js xor test sti xor jge push fcoml or mov pusha fwait xchg addl das (bad) jae clc xorb xchg leave outsl in jmp jno and lods aaa xchg test insb cmc and shlb add pop pop in (bad) (bad) cld (bad) jo andl faddl pop test add lret push xchg test into out and adc mov push int mov (bad) pushf jb xor jo xchg (bad) leave jnp (bad) sbb out rclb xchg push jle aas imul xor adc mov xchg pop aad jle add cmpb cmp xchg stos sub roll js mov jb inc push dec outsl add xchg ss pop idivl popl jmp es movaps lock stc divb pop sbb shlb loop out js lret jo in repnz mov or mov das jnp xor dec lahf xchg into imul push test clc sub mov jle movsb sti adc dec and mov jle test cmpsb xchg xchg dec lret dec pop add and sbb out xchg inc repz sbb cmc in or sahf stc ror les insl push rorl scas or jmp and insl and fwait push bound adc sbb das mov jle nop imul dec dec jle mov jbe mov or sub mov hlt push pop ljmp jge repz out pop mov fadds fidiv stc mov xchg outsl int sub cld cli mov xor jb push lcall js xchg dec mov jb push clc test pusha adc imul pop fbld push dec adc adcl (bad) nop imul lahf outsl push add mov add sbb dec adc or and outsb mov out and mov jmp test jg rcrb push hlt xorb mov inc jmp sub lea push cmpb (bad) xor adc mov xchg dec lods cltd scas pop and or adc lcall mov dec loope inc scas hlt lods loope into pop rol dec cmc jbe jp outsl sbb inc pop test (bad) repz stos sahf rorl std inc nop xor cmp push jae popa push iret icebp call repnz sbb loope push idiv mov and add cmpsb adc push movsb pop in ds aaa inc inc dec jl cltd mov jmp jne xchg jbe pop test addr16 in andb mov pop (bad) (bad) mov (bad) push sahf leave iret lcall mov inc xor das mov sbb sbb jge ja (bad) pop pop hlt cmp mov and or (bad) jecxz dec or popf mov in test imul mov push das mov dec jmp jp arpl inc loope mov mov out pushf pop pop test and cmpsl mov (bad) jb pop out jle xchg sbb jmp or shrl push gs int (bad) or popf xchg pop cmp mov lds test mov mov xchg mov ds jl inc xchg arpl daa gs or out mov rorl int push add gs sub divl xor add iret sbb (bad) mov loopne add popf dec ficom mov jno arpl xor or push xor jl xacquire jg mov loopne xchg mov out mov movsb fs (bad) iret push addr16 (bad) mov test out or jns inc pop or mov mov fnsave popa aad nop lds push mov push add dec inc imul add mov and jmp mov add fstpt lret and xchg mov inc out sarl dec mov cmpsb aam xchg sbb pop push ret stos das jnp ret mov cmc pop ds cmp fwait adc sbb mov in push outsl enter jnp and aam add inc add cmp aad hlt inc and int3 jg and js lahf stos test inc cmp cwtl std jmp add sarb test ss imul mov pop push js lahf push and jb jnp xchg insl inc out cmp mov scas push jbe inc mov (bad) xor fs mov cmp adc fstps jbe aaa icebp dec mov jae outsl test imulb pop out push push jbe sub dec enter stc mov or xor pop pop scas popf cmp push imul pusha pusha and push sbb jne cmp cltd nop aam inc mov js xor imul xor xchg jp push cmp lods mov cli pop stos jl add xor ret add sub test xchg aam mov xchg add int test repz and bound (bad) iret sbb xchg fldpi subl mov (bad) shll mov out inc and out and loope inc ret xchg stos mov cmp nop mov dec pushf inc mov lock popf (bad) adc sbb aam jbe sub dec cmp sub sti pop mov jg and rclb xchg pop sub insl adc (bad) xchg (bad) mov or in rcrb cmpsb ljmp (bad) pop mov inc sti cmpsl outsb jmp add insl mov dec outsl mov push mov push pop push or loop mov (bad) cmc aas push cltd rorb loop ss jo imul mov push loope (bad) mov push fwait arpl ret add adc out xchg sbb cmpsl int3 mov fldl cmp sub adc int3 imul and (bad) pop pop adc (bad) dec fs into mov pop into sahf jmp adc sub push xor outsb arpl aaa xchg out add loope add aad jecxz mov xor mov push out push mov rcr repnz es adc pop mov mov add rcrb mov mov and sub add movsb cmc inc mov sti xor insb test mov mov scas (bad) aam call test push (bad) fwait lods mov inc outsb mov call or outsb loope xchg cltd ljmp xor and imul flds xchg icebp test mov fimull outsl icebp or mov adc adc notb pop out sbb out add mov pop pop aad test push fsubl dec lds fldl imul imul mov dec and xchg fbstp out jg dec adc popf sub rorl mov (bad) dec ljmp inc pop mov lods ljmp scas jo (bad) mov jns pop push lods repz dec shrb mov or mov push push sbb out sahf jnp and in mov (bad) cmp jns fcomi mov scas loop dec mov pop call mull pushf test push adc inc push lods insl xchg iret push sbb imulb mov add movsl or push cmp iret out (bad) jno nop xchg mov hlt scas out pop rcrl xchg mov xlat nop popf push cmp stos leave push xchg adc cmp (bad) xor fdivrs bound insb (bad) or cmpsb jbe out pop mov mov sbb in aad xchg je mov scas cmp adc (bad) mov xor (bad) mov adc and jecxz cmp push jmp repz scas test fwait jl (bad) mov xor push (bad) mov xlat popa push xchg jp lahf outsb shll mov je cli test mov push movsl rolb sub aas lods jo sahf out mov dec popf cmc int3 out stc xchg data16 aad pop aad dec cwtl xchg push out lods cwtl mov cmpsb push arpl pushf loope je cmp jbe mov hlt repz gs add push mov call in fsubrs mov fcmovu test push out xchg out pop movsl xor xor mov movsl xchg pop sti sub fs xlat jle cmpsl cmp add adc les mov dec xchg jae add data16 repz jle or or adc movsl push insl lods ds mov fcmovnbe stc push (bad) dec mov jg jbe sbb push out ficompl cltd lds int3 add sahf inc jmp add rorl jae aaa out add push jle mov cltd xor stos sahf push push pop sbb bound loopne stos pushf and insb push lock add imul test pop adc rolb xchg dec adc lds test imul cwtl cmp pop js ficom sbb mov call inc nop xchg inc jecxz call sti push push xchg sub dec mov pop imulb mov mov insb (bad) jb mov out pop push in mov cs clc or jo jbe outsb pop lcall pop cmpsl or adc insb into mov and adc mov sbb arpl sbb rcrb and mov jecxz lods sarl push mov push push test sub mov jmp add fsubs sub in or jg sbb das cwtl movsb xchg ljmp les popa jmp jb insl sub jnp enter stos jmp mov imul sbb xor imull adc and pop lock (bad) int mov pushf xchg mov in xor xchg lahf mov push mov inc add bound adc sbb xchg mov push fs cmp mov jae sbb sbb jb sarb add hlt (bad) sub mull jle iret mov daa sub jnp insl cli into fwait es ds push imul inc cs push test pop inc nop scas xchg lret mov call js xchg insl aad in (bad) jp enter data16 fistpl pushf outsl orl mov (bad) jbe cmp lret ja (bad) ja xchg xchg inc inc mov bound pop lahf pop jl dec fwait adc push notl popf cmpsl movsb into inc jo mov pop mov push or cmp and xorl int3 mov lcall out jns adc mov ret dec mov arpl test rcll sub mov dec js sub jecxz lds rcrb mov cmovle ja adc (bad) mov lods stc jae mov xor iret mov (bad) (bad) and mov jns aad repz inc cld call mov jnp cmp sti ret cmp notb ljmp iret insb cld faddp sbb int3 push cli jne cmc ficom sahf mov aad mov cmp mov aam insb loope or mov rep scas int3 xlat mov lahf popf inc mov mov outsb in test cmp je xor xchg aad stos (bad) movsb jle xchg iret xor or xor jne xchg test pusha inc clc add insb pop pop dec dec lcall pop sub mov lret dec ss or es fidivrl sbb sbb add divl sbb mov push pop jecxz les in adc mov je arpl xor mov xchg popa dec jne push push test in jo fiadd add inc stos dec add sbb sbb ret xor mov adc fmul add and push adc mov test mov sub jae xchg scas fs imull xor fwait test sub iret fadds out mov inc hlt jp and xor sub in stos sbb inc xchg insb lods lahf pop clc mov test imul (bad) rolb in repz ss out dec lods pop dec inc sub sbb sbb scas mov fmull lds jmp (bad) mov jae dec sub sahf xchg fbstp cmpsb sbb mov inc and sub pushf jne (bad) fwait xchg cmpsb or sarl adc adc loopne xor icebp fbld jbe pop jl movaps ja leave fs adcl sti inc rorl or lea leave lds cli mov jge rorl outsb (bad) int3 pop fwait xlat sahf adc and sub xor dec movl xor mov pop test mov fcmovu cmp mov xchg fist jo insb (bad) mov cs call outsb sbb mov or addr16 push fisttpll xchg test test mov add sti dec dec leave pop in sbb scas mov imul pusha xchg push xchg and out lcall bound inc and or das mov dec fiadd adc mov ljmp lods das and pop xchg and xor inc stos cmp bound or jge sti lret mov idivb mov iret popaw mov sub xchg js mov xchg add fcomps int cmp dec stc jnp mov push push lret pop inc or dec in mov ljmp enter and movsl in adc ss push mov pop (bad) sbb jg pmaxub and ret xor bound dec (bad) push roll xchg subb outsb cmp sti std mov popa pushf or repz cmp out mov xchg inc cld test les insb xor and test jmp adc jo in add cmp sbb sub cwtl cmp cs inc out lods jmp rcr cmpsb call das inc xor test inc (bad) jb dec sbb aas (bad) jno ffreep jnp in pop (bad) pop xchg add add lret stc into lods dec movsl mov jp dec mov jl adc mov jb nop stos adc mov js das pop rcll fmulp aam (bad) ret cmp (bad) sbb cmp inc in ret fwait aas mov push mov cld pushf cmpsb lcall xor cli add cmp mov hlt pop das sar outsl or xchg xor adc testl inc push push mov adcl cmp sbb cmp inc jle pusha imul lahf (bad) adc sbb mov xchg xchg rcrl cmp lods out (bad) mov icebp or dec iret test sbb call scas ljmp in aad outsl sub mov enter sbb addr16 fsts adcb in int dec add lods or mov jne dec inc cwtl scas (bad) call movsb jl sbb cmp mov xor repnz imul mov cmp xchg es mov dec mov cltd mov mov sub add xchg sbb push cmpsl negl xor pop sbb add jne iret fcmovbe cwtl add loop lret push pop aaa push push jb jle loope das mov dec mov inc add loope xor mulb arpl (bad) in and mov xchg imul gs mov std mov sub rcrl stos and rcr int dec test popf pusha jo out out loope in jo push jl jg and ds clc mov xlat or dec out adc js mov pop inc ljmp test mov mov in dec and push insl cld or push pop mov add jo sahf and lahf nop mov ss arpl (bad) iret aad push sub mov xchg xchg dec out adc iret addl pop fs clc lds mov cmp jo,pn lds imul adc (bad) xor adc pop jle bound xor mov push jne pop es fs push inc daa bound push jne gs imul pop push out ret xor mov cmpsl pop adc push push int push loop ret push test and sub int3 int3 push daa lods inc nop mov bsr call push es aad mov push jg push pop and test mov outsl adc mov dec fiaddl test add adc xchg aas adc int popf xchg lods pop push sub int3 xchg cmp jns xchg int3 mov mov movsb fs (bad) inc jle enter mov mov jge pop xchg outsb adc push mov dec mov push push and mov xchg and cmp adc jl jb dec add lea inc mov into repz pop (bad) dec fcmove incl push add xchg sbb jp sbb xor out mov adc inc inc mov push mov xchg sahf sbb xchg into xchg ret (bad) mov add icebp movsb pop push jno or lahf loop rorb jno cld lret addr16 leave repnz jg outsl in pushf (bad) in pop xor mov mov mov jmp (bad) mov scas fdivs cmpsb pop idiv cmp xchg popf mov cs insl cmc leave pusha push pop dec stos out test jno inc scas cmp mov gs xchg mov cmpl enter orb mov mov push insb bound add push stos in fdivrl xorl std dec xor in mov push lods aaa test repnz xchg push loop dec cltd out aaa lret jnp lcall orb jg mov inc sub outsl jl das add mov (bad) sub imul xchg imul shlb dec es clc stos lahf leave ss shrl mov mov jmp fcmovne imul icebp jbe push cmp int3 das cli ja ret lcall insl mov data16 cmp inc fcoms pop js leave ja movsb pop adc mov mov push (bad) xchg call loope sub cs xor cmp jecxz bound div mov shlb push jae push sahf dec clc mov idivb (bad) mov std cltd mov xor mov mov (bad) add lcall sti js cmpl les in cmp mov clc lret jge hlt fisub flds addr16 insb or cmp scas ret insb mov dec sub ja push push cmpsl lds mov add mov movsl int3 les pop inc stos add popa in (bad) mov mov fild in or notl sbb and rcrb sub data16 mov sbb insb in ljmp jg test int push je mov fcoms ficomp clc scas add call sub cmp insl dec pop mov leave inc push data16 outsb lcall pop cmp gs mov cmp das xorb lret stos add insb fucomip add out xchg arpl xlat pop idivl fsts addr16 (bad) push ret out fwait cmp add push dec push mov pop sbb inc leave jle sbb rolw das mov jl fcmovnbe mov mov fwait inc lds lret fwait and daa (bad) sahf xchg sbb outsb xchg loop inc es xchg dec push fcoms sub cmp jle sbb or in jnp int3 js,pt pop sbb call jle sub mov idiv push popa sub inc in popf stc mov pusha fldcw mov lock inc insb jae adc fcoms jo jb lea std cmovbe dec jg pop int3 ret lret mov mov nop sti hlt lods loop inc xchg insb dec add rcrb ret sub mov aaa jle jmp xchg mov pushf jb out repnz iret movsl dec and arpl sub cmc mov push in sbb pop mov pop movsl or into jae int3 pop gs stos mov sbb jecxz mov jp test out or in test fldenv pop add jae lret imul cwtl cltd push mov out push jae (bad) or movsl pop aaa inc clc pop (bad) push pop pop ljmp jg push lea das (bad) xchg and repz out mov ss adc and inc xchg cmp lret fmul mov mov sub (bad) xor fwait inc insl adc divl fstps jge mov cli jo mov mov jne (bad) je je push inc pop inc popf insl dec xchg mov mov push addb jae arpl outsb mov sub push (bad) ljmp jl add push pop sbb out cmp fs jmp xor data16 in cmp mov popf ss sbb in and jmp push dec shrl push inc test aaa xchg mull incb mov xchg dec push pop adc (bad) mov or add or int3 mov clc xorl sub xor test xor xchg sbb iret pop adc inc and mov mov fisttpll push rcrb fild adc jg and icebp in mov daa add (bad) (bad) xchg sti jmp inc ljmp stos xor and dec dec mov in add sub mov popa mov lods mov outsl fwait mov jp xchg cmp insb jmp or test mov call sbb mov fwait in lock into mov push push fdivr xchg jo nop sbb das out test lods mov push xor loope adc pop push inc ja jle dec aad leave pushf repz or notl pop mov addr16 dec (bad) xor dec cmc and rorl mov xchg mov ret enter dec mov sbb aas (bad) es lret in xor push cmp dec sbbl loop lods xchg aam stc jns ret inc inc jb xor repz dec (bad) out xor sub jmp fisttp xor sub out dec or dec movsl xchg std frstor mulb mov pop iret bound dec xor adc adc int3 mov addr16 pushf ficom cmp insl rclb je ret jnp and sbb popf add jp cltd dec lcall dec repz inc (bad) or pop insl push xor mov dec cmp sbb cmpsl xchg mov xchg les out mov pop lcall hlt xlat fsubrs jo xchg pushf jmp inc mov aad xchg mov sub bound xor dec xchg xchg leave aad and out enter and (bad) mov jl xchg dec iret push std aam mov jg push xorl jg fs add pusha lock fcomps (bad) mov bound dec aas dec jle addr16 pop xchg or fisttpl repz scas adc mov dec mov and ss loope in pop pop imul into or pop (bad) mov add ds imul test mov in or stos fistpll or inc (bad) sbb testl fcomps jmp imul out stos aas push pop fsubrs mov fstl out nop xchg inc sahf jp xor mov sbb mov and andb in fwait clc jns xor pushf flds loope int3 dec scas and pop mov fld mov aas pushf or ffree and push lods xchg add out aas pop sbb mov xchg jnp mov mov mov adc and mov and pop ret lock inc loop adc (bad) push xchg pop cmova inc jne mov fistpl scas dec aam iret dec xchg pop sub stos popa xor inc inc ret adc js lahf (bad) pop fadds out or call out sti clc sbb or inc dec lea mov add jg lret sbb mov jecxz jl mov mov sbb nop xchg mov jmp cmp adc arpl adc enter repnz jo sbb clc push mov lret jg mov xor arpl add cld loop jno pushf mov xor inc jecxz shrl iret aas lret jp and cwtl aam rol fdivr jmp jne ljmp (bad) dec pop outsb xchg xchg and mov dec (bad) jne adc sub and push pusha and sbb xchg adc (bad) into mov lret sar enter pop std imul push mov adc in mov int push inc mov and xlat xchg test cmp mov inc dec or dec arpl mov dec mov mov rcrb xchg js scas fcomip add and xchg mov pop inc or cmp test insb dec int3 adc shrb push pop xor nop jne jge cld cmp in push rorb mov popa inc fdivs or mov cs stc fbstp scas dec dec and insl sti in loope cs dec insb in push popf pushf in pop vandnpd mov pop (bad) lock dec fs and pop and fild add push fidivr dec cld orb cmp jle outsb sub je stos adc arpl add jae push push (bad) aaa or cld mov icebp (bad) cmp and xor or test nop jmp adc xor add int3 cmp xor add pop xchg inc or pop loopne jg gs cmpsb add shlb fwait sub xchg sub and or imul cmp and mov mov into pop dec stos and or dec in aas sub inc and cmp inc cmpsl movsb sub imul loop xor inc dec ficompl nop pop adc xor mov pop stos aad mov mov not mov jmp cmp cmp pushf pushf call mov movw stc test pushf jmp bswap call movl jmp call push mov shr imul cmp jae mov mov sub shr add call clc pop ret mov mov lea call pushf pusha lea ja mov push pusha pushf lea jmp lea jmp cmp push pusha pushf pushf lea jmp neg rcl cmp rcl push or sar cmp mov inc push sar dec push rcl sub ror push clc btc jmp test pusha mov lea jg call mov mov movb call sub pop inc ret mov (bad) icebp mov xor int jmp mov adc rcrl cli cli lret out push jp ret jge imul dec mov lods pop fsubs sbb mov shrb jno cli (bad) mov or or lock pop neg push cmc not cmp test pushf sub call mov push pushl push lea jmp mov jmp dec xor das mov inc jo (bad) jmp jg iret aaa aaa dec mov stos (bad) ss mov lock mov mov mov icebp addb sarl mov leave repz imul pop jg xchg es xlat push pushf bound in sbb adc jae lods movsl ret jns aaa popf dec in outsl (bad) in xchg lret jbe stos fidivrl mov inc push adc in add and pushl lods dec adc mov fidivl pop inc mov int xor movsb aas jne pop push pop sub (bad) call sub incl mov inc cmp inc das adc popf fistl cmpsb hlt repnz testb out pavgw sub imul idiv cmpsl xor sarb push mov push outsl mov arpl push ss inc fcmovbe repz aam sub jb fidiv xor daa lahf ja (bad) (bad) adc aam int cld push (bad) mov popa xor add ljmp ficompl hlt pushf push pushf pusha lea jmp sub pusha cmc mov shr cmc dec jmp stos mov push lea jmp inc cmp neg jmp pop mov inc mov push xchg je inc stos (bad) sbb inc (bad) in ss fadd xchg pusha xchg dec and adc cmp les pop xor or inc out mov aam pop jge mov lcall xchg mov sbb sub pop fsubl sbb jle and inc nop lock iret inc in cmp jo push and pop pop xchg adc je push jbe mov cmpsl in cmc pop in cmp loop and lock cli es sahf sbb in pop aad fcmovu dec sbb cmp mov fimull and mov inc adc pushf mov xchg xchg xor jl,pt outsb outsl mov mov push dec mov fdivl and cmp mov clc stos aas insb test into imul sbb mov jnp int3 mov add mov or dec adc xor inc test dec inc addr16 jb js outsb out lock pop int sub sbb jl out add in dec mov repnz push (bad) mov imul cld inc xchg insl cmpsb mov cmp movsl pop xchg ds mov jmp pop add jp pop add fs call pushf pushf movb push lea jb aas bsf bsf movzbl movzbw stc shr bt rcl call mov stc bt shl mov pusha movb add pusha call mov stc add test cmc bt movl not cmp call stos add mov inc fdivs gs adc sub inc test sti sub push clc scas lods out mov add pop test arpl and dec idivb stos push gs lds sbb (bad) ja fisubrl inc inc xchg dec xor xchg xor or sub pop mov popa and cmp and rclb stos int3 jns xor and mov mov movsb out xchg in adc sub xchg jo sub lock repnz mov cmp ret sahf add jle test or (bad) mov bts cmp mov (bad) lock test add pushl mov pushf mov test call add stc sub jmp mov js mov inc mov fs xor pop inc cwtl mov mov push enter and mov or jge addr16 push add into (bad) out (bad) test mov add dec jmp fistpl lods pop lret test loop lret mov clc dec fisubl jnp call enter lcall lods sbb stos dec in or pusha fistpl pop jmp jmp jo mov mov jae jle sbb add jne mov dec out pusha movw lea je push call movzbw mov movw pusha pusha pushf xchg movsbl not bswap movl setno bswap lahf lea movb pushf movl pushf pushf pushl popl pushf movw movl pushl ret cwtl push setle call lea ja call call jns test mov mov movsl icebp ss imul daa orl cmpsb mov out mov inc cmovge push push xor repnz out pusha add xchg dec notl and pop (bad) pushl cli cmp push mov mov lcall iret insb jb aas call faddp pop sbb sahf (bad) lods sbbl shr (bad) dec push sbb inc (bad) xor lods push mov lret lahf mov fwait pop mov mov sub ret (bad) adc dec jno xchg je mov dec stos out push fidivr pop popa pop notb cmp xchg rcrl in jg leave mov xchg out mov xor jns jae lret mov scas test pop outsb sarb dec cmpsb mov adc xor dec jae mov fdivrs divl add sub xor addr16 cmpl xchg sbb mov sbb leave cmp inc es adc xorb repz int push or stc and mov or (bad) hlt pop mov add daa and xchg inc ljmp das incl add dec std aas xchg lcall mov sub getsec shrd push push cmp insb je xchg mov repz mov mov popf lds mov cmpsb mov cmp shll push dec mov shl scas scas xchg push add inc inc adc imul into cmp movsl test pop mov int and fistl popa popa aaa test adc push inc add mov xchg cs add cmp mov cmpsb jmp cmpsb lret popa dec ja push jle dec and (bad) xchg cmpsl je dec adcl push xchg or lret jmp imul in add lds jg pop xchg in (bad) dec dec mov ljmp outsl ljmp (bad) adc arpl cmpsl leave popf test and scas inc inc mov mov xchg inc pop test jbe fld dec iret gs add ss cmp clc loop add push int3 repz int3 ss scas mov dec jo xor movsl cmp out (bad) ljmp mov imul (bad) in mov or adc lea add mov outsb xor and or insl lcall movsb xchg mov push inc push (bad) fisttp xchg lock xchg and push ja and and lods inc (bad) xor jbe cmp loopne outsl insb mov (bad) sti fidiv sbb (bad) ret cmpsl stos int3 inc xor inc xor loop push lret sub loop push dec pop fildll shlb call ret cmp mov jo cmp xlat push push xlat ss dec clc pushf leave xor inc xchg push cli js (bad) out mov xchg mov out loope mov xchg xchg adc aas bound data16 xor cmp jecxz mov test xor cmpsl (bad) add pusha inc ja out ja std mov cmc xchg sub lahf sub insb dec inc ss out mov jmp sub dec sbb mov out push pop mov xchg lret xor outsl fxch in icebp add das pop sub xor inc lea pushf push mov pop cmp (bad) mov mov (bad) aas popf int3 int inc xchg xor das lods arpl daa cmp mov sub mov mov bnd repnz pop out xchg cwtl icebp daa mov cs pop push inc aaa lahf dec jbe fbstp jge arpl (bad) mov lods lahf stos dec jae iret xor push mov je pusha outsl mov xchg mov add jp rolb fsubrs mov cmp cmc (bad) cmp movsb cmpl into mov and cmp adc sbb xor jns (bad) sbb sbb fnsave aaa pop pop mov loop mov push add clc mov dec xor pop dec pop mov popf push inc dec mov aam cmpsl rcll movsl jl mov divb dec test pop shrb test pop lds lcall pusha rorb inc decb sti lea loope xchg jmp and cmp jns ss inc stos imul add out cmc arpl xor scas jl push in pop or (bad) and mov pop push add stos faddl or mov push loope call testl and (bad) (bad) (bad) mov scas mov add xchg (bad) out clc cmp insb mov scas jne and stc (bad) xor push sti jle int mov pop sbb push out repnz aaa subl mov cmp ljmp ror or jle cmp pop (bad) inc test scas cmp and loopne sub ds pop ljmp adc adc bound add fist jns or pop adc push push and inc inc in jecxz pop js nop mov inc mov and mov cmp (bad) sahf cmp les (bad) xchg movsb dec test push sbb cli test fsubr xor mov (bad) mov daa cmp les sub scas cmp push pop mov cs stos cmp inc imul mov cld inc sti fwait push sub adc mov inc add xchg inc iret aas movsbl adc (bad) lods dec mov je add mov xlat xchg xchg fsubrp push mov lret mov dec adc pushf popa loope outsb sbb mov and pushl mov add sbb fwait add enter jae add ja sbb scas dec lds ds in sub jp cs out fcmovnbe or movsl int ds mov adc stos sub cmp pop xchg inc or push push jl movsl xor rcl push mov scas sbb mov repz xchg pop add cmc adc jbe lds cmc add or js in push lcall daa movsl push push dec adc xchg pusha lret xor inc push cmp call leave les loope aam mov movsl dec test insb rcrl lret or (bad) mov push and repz lret dec add cmc aaa xor (bad) repnz in or sbb xchg cwtl pushf mov enter inc adc push imul outsb sbb xchg les outsl (bad) dec mov lea mov int add (bad) lods (bad) xchg ret es andl inc jl arpl test ficomp inc stos mov scas push (bad) pop cmpb cwtl pop mov lock rorb jmp mov xor rcl inc je es sub mov dec (bad) push jl inc mov jo in into push jb sub popl popf cmp mov pop xor dec iret inc and fsubl cltd jne mov sbb adc (bad) xor adc mov mov push mov bnd push in das js hlt loop mov and sbbl popa ljmp ret arpl add hlt jbe into dec cli out lret add imul pushf loop and push je add jp (bad) cmp inc dec fiadd push sub lds dec push add cmpl mov xchg sar jo mov stos inc xchg xchg mov fcomps dec dec cli in cli xchg mov push mov lods mov sub ds inc sbb es sub lcall adc fnop xchg jb xor loopne ds and lock add mov std push inc and lcall js imul ss loope bound jp aaa stc or xchg imul test mov repz dec jbe fwait dec hlt pusha dec jae (bad) fistpll xor push out movsl pusha push dec pop icebp sub ret daa xor dec lahf jo cmp pusha mov fstpl test stc or xchg mov std imul ljmp mov icebp into daa pop push shll (bad) callw sub dec mov cli adc xor and jp sbb das out jp call cmp rorl out inc fcoml xchg xchg jge add cmpsb aam mov push lods negb mov (bad) mov pop out arpl add addl mov jmp jmp and inc jg es mov and jle add ds dec insb and xchg cmpsl xchg ret fs jae add cld inc in jp in out add test cmp (bad) jbe add sarl xchg mov imulb pop call adc cli fistpl sub mov push cld pusha enter sbbl xchg fidiv mov dec das or mov lods dec adc insb mov lret aam mov rcl cld dec push je push adc div push in cmp cmp repz xchg test fsubrl mov repz scas pushf clc stos and xchg add (bad) mov or hlt rcr leave sub xor mov push test or inc mov mov aaa mov pop fcmovne or xchg outsb loopne mov adc mov jbe stos (bad) mov fistpl lods xchg sbb dec (bad) jne popf xchg scas pop dec add fsubrl xchg push daa inc fild addr16 clc int lea push stos adc xchg das (bad) dec or movsl push cltd ss jmp rcl fidiv mov popa pushf mov push shl and (bad) adc call mulb fisubr xchg loopne es pop jno js cmp add insl insb js adc imul js fidivrl xchg and cli clc lahf push ficomp push fstps stos inc sub mov int int cltd insl push clc test aaa push mov rolb (bad) mov xchg inc sbbl rcll push and cs push test ja sbbl call scas push adc outsb sbb push or or stos xchg fdiv lods dec xchg inc and std call mov fwait add cltd mov aaa inc xor xchg dec mov (bad) xchg jmp fs popa mov and pop mov mov and bound xchg push sub sbbl pop sbb pop outsb cmp enter add fdivrp mov daa jae dec adc test lods test inc icebp dec test aas push loopne pop xor mov insl dec and ret mov and lock (bad) ja mov divps sub test push jno or add jmp lcall dec fstps adc cld or (bad) in add loopne inc sub sub mov leave popa cwtl addr16 (bad) mov xor jmp or aaa push cmpsl push jae mov ret cmp push pop enter nop mov mov push push (bad) in xor stos pop mov jmp (bad) sbb lcall in rorb out xchg js jge mov (bad) leave lret xchg outsb stos jmp int3 fisttpll imul scas sbb push sub xor jg out pop fbstp test xchg xor in cld ljmp mov aaa and cmp loopne popa sbb inc pop or sub lret mov add pop inc push repnz dec push sarb std sub faddl jae dec cmp repz mov fwait mov out push push xlat jp add in subb mov (bad) loope mov push scas or mov xchg adc and idiv or lret loope ret out dec jmp insl or lea push xlat sbb adc mov (bad) mov test scas mov and push add ficomp dec sub stc mov cmc test loopne xor outsb mov call insl outsb mov scas cltd inc cmp into add or cmp jne or in out out mov dec push movsl (bad) jp mov or cmp fnop rcll xor dec dec pop (bad) xor or inc clc out (bad) pop push jle fstl push dec pop mov xchg jae adc ret push sub xor out loop lods jno mov rep stos pushf out xor add lods fimull jb and movsb pop fidivrl outsl adc adc mov sbb rcrb hlt cli push dec test fidiv mov (bad) insl sarl (bad) mov xchg lock movsb std movsl add mov cli jbe or adcl rolb pusha pop fcoms mov cmc imul cmp push fmull cmp rcrl test pop jo jbe xchg pop push jl repz hlt in dec and xchg and (bad) into std ljmp dec gs xchg xchg in mov iret lods aam cmc xchg aam (bad) xor mov mov inc adcl enter xchg jmp popa dec bound bound and push cmp cmpsb aas sahf add and and jge adc or adc ret in aaa sbb push dec xor xchg dec ds pop sti rorb sbb das lock stc sbb dec cmp (bad) sti jo fldcw ret lret push arpl mov out and mov or jmp dec shll xor outsl int mov push data16 mov push sbb dec mov out ljmp (bad) push cmpsl cmp xor lret xor jno int lcall add sub xchg xchg add and in fnstcw inc in setne pop mov imulb popl xchg (bad) push sbb leave lea fadds mov loope cmpl jns cli je mov jnp jno sbb outsb mov xor insb cwtl lret das repz jmp inc test pop into pusha pop push enter sbb xor cs mov add (bad) mov sbb movsl shl push cmp lock int3 mov arpl fistpl rorl add cmp push jo jecxz std adc jge and clc and add inc in push push int ja cmp outsb push mov mov mov sahf setle call add cmp fimul and xchg movsl pop fldl2t xchg add jle dec sub jg pop mov pop adc jmp es enter jne mov repnz iret sbb inc xchg xchg jb fcomps sti imul outsl (bad) fdivs mov xor in xor aam xchg lods or les sub js inc dec pop mov cwtl fsts inc cmpsl sbb insb adcb jbe roll movsl mov js cmp jne xchg (bad) cmp imull dec xchg inc xor int3 jnp out and pop test ljmp sbb xlat rorb lea outsl and jmp dec das push lea cmp cmp int3 sbb push mov out js (bad) jb icebp test insl (bad) ja jb sahf add pushf sbb mov fmull pop mov mov jbe in mov cmp mov or mov popl mov repnz sub stc (bad) cld scas pop add pop js adc pushf cmc dec push pop aam out sahf jno in sbb mov push sub mov sub int les sub divps cmp sbb mov mov cmp sbb lahf (bad) mov mov es jae add push push pop js cmp ret pop icebp cmc imul dec jbe daa xchg xor dec or sahf jge cmp test movsb mov (bad) mov jae fnop and loopne jp mov in jae cli or cmpsl xor dec add ret or and dec push or jle scas cs int3 push dec mov push adcl (bad) add push adc push push mov jae cmp adc or out (bad) mov sti mov outsl popa adc stos sbb add xchg mov add xchg pop sarb cmp pop xor mov std (bad) pop mov adc jl sbb pop xchg or push lret jns aam popl mov (bad) lahf fstps pusha mov xor mov add jb inc sbb or in std push ds ret push les sub pop aas outsb shrl (bad) sbb push adc mov jmp lret cltd outsl mov outsl add adc push nop lret dec jg pop inc loop fsts push push out aas mov mov push cs mov outsl push (bad) out sahf mov hlt add mov pop in pop call push jae mov push and push push rorl xchg sbb daa sub xchg jl mov inc mov jno dec sub jne cmp dec test icebp enter sbb movsb xchg push lds cs icebp jle lock daa test xor sbb xchg insb mov sbb pop mov and int xchg test test mov ja lret sub outsl (bad) jb lret sub mulb pushl jno ror xchg jle scas lds adc dec (bad) adc mov ret and aaa sahf cmp popf jb test scas test gs pop fistpl lea loope adc adcl cmp push jle mov lods push aam notl mov outsb jmp cli ret add xlat fimull push popf cmp insl sub out out lea sub (bad) mov pop xchg jmp pop test add (bad) xor mov test and adc jo or jo and and icebp adc loopne stos xchg paddb xchg data16 sbbl (bad) xor imulb (bad) push je js mov mov test sbb sub push test mov cmp nop ficompl scas pusha outsl imul adcb cli cmpsl loope push sub xchg rcl daa aam mov in lahf jmp cli push lock adc cmp stos clc adc pop dec or jae mov push pop pop dec cmp jnp outsb sbb ljmp in jmp mov (bad) jno faddl cld arpl js and sub dec xchg ja nop mov hlt shrb inc dec dec sub adcl xchg push jge xor roll ror lret jmp mov shlb dec sbb jb jmp cmpsb mov xchg jbe dec jmp outsb push sub inc imul test cli xchg jge pop fisub xor (bad) cmp push push test (bad) in (bad) sub xor push dec push cmp jle test fsubrp rol mov lds and sbb sub mov adcb add test je xchg ja dec fnstcw addr16 xchg (bad) dec lods pop pop mov iret cmp mov mov insb mov dec pcmpgtd push jbe cltd in cli les xlat jle sub cmpsb xor jmp push in push lods cmc and in arpl xor sub push subb mov sbb es push mov pop jl hlt sub lock shll adc insb push dec out jl push xor test or push mov and outsb nop sub cli jnp and cmp inc std fs cmp loop sub jae shlb mov sub and pop test out lock push pop (bad) ficomp aas jo out ja out lcall pop cmpl (bad) or jmp jnp inc cmp lods jnp out inc scas dec lcall enter outsb push fidiv sbb sub mov fld pop test dec xchg mov push hlt mov mov or adc clc cmp in xchg clc das packuswb xchg add mov mov cmp sbb jp mov sbb imul adc mov mov ja hlt outsl ret (bad) arpl add xor sbb sub test add dec sub les push sbb jo fdivrs mov in aaa or mov cmp into add es pusha stos jmp push out (bad) leave insb (bad) les pop hlt sbb xchg inc (bad) mov dec ds inc and sub jnp pop insb aad mov cmc jp push sub mov mov jne xchg inc rcll lods sarl call xor push inc sub pop jb mov cmp or fist and xor in mov movsb scas pop sbb repnz sbb add and xchg rcll mov sti mov sarb (bad) sti sbb inc xor mov cs xchg xchg ret cld repnz push pop mov push and aaa cmp ss sub cld (bad) sub mov push inc pusha orl iret mov popf aaa sbb xchg and sbb ljmp out push movsb call mov punpcklbw xor imul sbb xor sbb test out hlt lods mov mov (bad) (bad) fs hlt cmp xchg cs dec jns dec mov out aam inc and addr16 or inc xchg cmp imul in (bad) and mov mov packuswb aad xchg incb out lods lds xor and cmp xchg add in xchg xchg or lret push test pop fldt push mov scas loope adc mov xchg xchg push lahf cli adcb fidiv mov or ljmp and ret bound (bad) fs nop pop xor scas mov (bad) cmp movsb or stc pop test xchg aaa hlt lock xor ss ret xchg xlat popa lahf inc das push sbb (bad) sub lret pop xor pushl xor mov pop or adc mov xor test push not stc push divl mov test lea sbb fsubrs popa push xlat insb inc jno and cmp jbe call sub jg enter stc mov jo sub (bad) dec push mov leave je xorl sbb inc test dec jne jne pop jmp mov lea cmpsb into xchg mov jae sub sbb xchg (bad) sub je or jecxz dec fsubrp cli nop push mov cmpsb dec or pop jp dec adc cmp out ret cwtl inc insb cmp pop jns sub mov dec into cmp cmpsl leave xchg adc and sarl pop daa jbe idivb inc popa jecxz cmp cmp sub xor push rcl mov es sub andl cs dec and jb sbb cmp sbb stos stos sub addr16 mov push (bad) xor fcomps sbb jbe js bound int sbb xor imul pop lcall sub int3 pop cmp xchg ja mov ja lahf gs call cmpsb test pop jle sub inc fs mov das or cld ret or xor and sti fildll mov out inc sub mov pop sbb dec pop repnz loope bound xor sub in pop aad cmp popf out movsl cmp addr16 dec sub mov popf mov pop lret mov mov ja xchg jns das daa dec ret sbb aam inc and xor adc mov ret arpl ret xor cmp sahf jnp jp in pushf hlt out psubusw (bad) ffreep add ret xchg adc out and inc dec call sub out pop rdtsc cli int3 stc jp sbb xchg push dec adc pop mov mov adc pop in mov inc inc adcb clc pop push pop jmp mov fisttpl and loope mov negb jns pop and jp sub mov mov insb mov add sbb stos repz dec loop adcb cmp sbb stos out adc xchg je imul sbb xor mov je xchg fldcw scas pushf xor sub pop and aam fisttp jnp xchg ds mov dec xchg cmpsl (bad) fnstcw adc roll pop addl cmp jno mov xlat (bad) pop insb adc pushf lcall cs adc pop aaa leave push sub dec xor mov ja mov movsb adc inc or in test add dec mov mov sarb dec dec pushf je in push sarb cmpsb dec jb stc sahf mov add and ss dec push xchg cmp (bad) repnz xchg cmc xor fsts mov movsb stos dec (bad) pandn rcll fcmovnu mov dec movsl js cmc add xor add scas loope cmp cld bound testb clc sub pushf jmp push rcl pusha inc insb add pusha das movsb cmp xor mov sub inc nop cmp ljmp xchg test sahf xchg push cwtd adc sub adc test test faddl das dec mov aad push cmc sbb jp fmull jg ljmp inc xchg gs mov cmp outsb icebp scas sub xchg scas (bad) aad iret lcall popf jns cmp ljmp mov cs xor ljmp fs mov and mov jno rcr test sub sub inc push enter out push lahf adc in and aad xchg jmp xlat (bad) pop xor xlat add in sahf cmpb pop mov pop jo and cs popf out loop dec xor rcrb pop (bad) cmp pushf (bad) push jle into or mov push push jecxz loopne mov sub stc jmp popa or jo fimul cs ljmp shl pop sub mov negl push xor std mov jmp jae or (bad) ljmp jl push lock xchg dec fisttpl mov jl mov cmc (bad) cld lret lcall mov loopne ss popf mov pop in add add xor ds popf int3 push dec orl mov xchg (bad) push push loope cmc add cwtl shlb imul cli push cmp add pop mov enter repz cs jns (bad) mov test popf ret xor jecxz sbb andl push out insb inc fnstenv cmpsl pop sub jns cmp addr16 adc xchg jl xchg dec mov in cli pop iret jl push fisubrl pop pop test sahf cmp push fwait pop popa cmp loope sub mov jge sbb outsb mov mov bound bound insl cmp and jge (bad) cmc in sbb jae leave push pop cs cmpsl call shlb test mov or push pop pop and jbe fiaddl je add pushf sbb and ja hlt sarb das mov lretw mov imul fisttp xor lret mov push and shrl and sbb mov jae add mov scas in xor mov (bad) (bad) test push bound jle jle push mov das push and mov fildl popf and sti inc sbb pop sbb sub push jno push inc (bad) fimull loop adc mov cmpsl cmp pop cmp or add sub movsb test jg in (bad) fcomps scas pop mov data16 xchg adcl addb ret jo mov rorb xchg sbb xchg and in dec rcl inc xor bound mov fdiv pop popf mov mov lods add dec push dec shlb lock test into ljmp lock lods fdivs cmp pop ret sub or inc ja pop outsb mov (bad) cmpsb jge cmp sbb in jb fcomp mov cmp mov push fisubl out push je in clc ret mov mov lds jnp je sbb test popf int3 dec aaa out inc jg and mov mov je bound mov shrb shr orl int xchg test call cwtl jp xor in sti out cmpsb jns adc lods mov cmp dec js ret arpl cmpsb pusha jno (bad) ljmp cmp lret jae popw sbb adc rolb stos insb push nop adc mov inc push pop add out imul mov dec mov int dec jecxz mov and lock out sub push and pop jmp (bad) inc add jno pop loope push in cwtl cmpsb jmp enter fildll dec push repnz push ret ja popa scas adc adc lahf dec addr16 fsts ds push aas add adc aam insl xor loopne xor loopne push ret jl mov sbb mov cmp mov cmp scas adc shrl test mov movsl pusha add pop loopne mov es in (bad) xchg out pusha out add mov dec adc insl jb (bad) xor xchg lret add xchg lds sahf loopne fistpl mov mov adc or cmp mov adc or dec movsl cmp mov add lret push or lods out stos add leave push jecxz fiaddl jnp jo (bad) mov xchg std mov (bad) pop mov or push jno lret sbb xor inc mov xor sub push aaa cltd xlat mov out lret pop mov lods insl notw xchg scas push push mov or xor hlt and (bad) dec mov inc sbb hlt (bad) in fistpll pop leave mov push iret mov test jg push pusha hlt sbb push addl shrl cmp mov fbstp pop lods or into cmp push lret mov push sub idivl aam (bad) lret rorb das shrl pop iret push inc xor mov arpl dec outsb sbb nop into arpl jg lret pop inc mov add mov sahf mov and mov int3 inc mov outsb test aaa inc mov and or (bad) mov arpl int xchg (bad) (bad) push mov dec sarb (bad) sub dec or or int3 mov je arpl pop pop js xchg rol movsl mov sub mov testl nop into in inc mov or adc inc clc int3 xchg inc (bad) dec push nop mov xor cmp inc adcb test push fiadd xlat test (bad) xor sbb sbb add inc mov dec xor lds mov add cwtl adc int call xchg mov pop loope shrl data16 inc pop rolb pop (bad) jbe not push bound and mov pop ds cmp pop adc dec test out sub sub or insl jl ficomp ds lock and pushf mov stos sbb sbb inc push add pop repnz pop and or adc cmp cmc mov sbb mov leave cs add (bad) and (bad) std subb in les xor int3 and cld push push and cmp dec adcl and mov add add and pop and and and xlat lock hlt das sbb jb jmp dec out mov neg gs leave or (bad) mov jge ds cmpsl and pop pusha jecxz push sbb push lds outsl (bad) mov and fisubrl pop inc popf in dec adc (bad) push xchg jle xchg add adc cmpsl jp pop movsl mov dec push or cmpsb dec sub fisttpl cmp pop leave in or jno sbb fwait push and repz cmp lods pop xchg (bad) sbbb daa (bad) jb das lret mov fildl insl (bad) or fidivrl scas mov mulb cmp test fs mov popf int3 mov insl mov mov xor cmp cmp fldt movsl fucomp sahf jl pop mov inc inc std sub dec (bad) into xor orl mov xchg xchg scas bnd loopne shrb dec push inc push test xchg out fistl sbb (bad) repz xor push and mov je or jg sub add jle or loope jl pop cmp sub mov cmp fistp mov or ret (bad) hlt out adc sub dec movb popa stc jp fimul mov lret hlt stc fcoml sub cmp outsl mov neg sub fisttpll push pop jmp mov add jne (bad) cmp and fisttpl out jmp gs sub out push cwtl (bad) jnp mov ficompl setns jg mov imul or lret gs and cmp add test negl (bad) cmp pop xor test cmpsb push mov cwtl ret ja xchg es xor cltd mov inc pop shll test clc xor pop dec sub xchg add and dec mov (bad) (bad) mov xor xor push in (bad) xor add inc cmp jns mov std push addr16 es arpl xorl inc loop jb in rclb sti lods sub cwtl (bad) hlt je mov xor jno pop imul push out or xlat (bad) jge dec jbe pushf mov cmp mov jbe xchg sbb jb data16 movsb data16 and (bad) in sbb xor insl push dec xor push xchg psrlw jge test scas pop and jp in test lods jbe mov repnz sti sti mov xchg jmp and cmp xchg xchg jbe fdivrs and or sub mov (bad) jae les in ret xchg test and fwait xor jb ficom push mov arpl movsb ret inc scas push and jle cmp pushf pop jl sbb adc sub push stos nop imul push insb movsb adc push in es aad inc mull mov ljmp orl xchg cs movsl mov out xchg mov cwtl push mov and imul cli mov mov stos xor test sub pop test jno pop mov inc xchg js std dec cmp inc mov test pop dec pop sub outsl cmp and std cmpl push bndldx ds repnz notb mov push in sub fstl lret push rorb adc (bad) aaa sub push fwait mov test dec cmp jns push mov call sbb and pop aaa add es insl repz daa dec push outsb adc stos or and lret out pop out sbb mov (bad) or dec cmpsl sbb jo sbb cmp and add mov imul dec dec (bad) xlat std call out les lahf add mov (bad) xorl mov imul (bad) loope mov mov mov push sbb xchg ffreep je cltd mov jge mov mov insb popa (bad) push add loopne fbstp push pop xchg dec mov frstor (bad) jb mov cmp gs jg xchg mov aas cmp mov mov aam fistp rorl lcall mov push add or cmpsl dec inc pusha xchg mov in mov add out xor sbbb cmp lret mov pushf sbb mov clc outsb loopne addr16 mov mov sub jne lahf (bad) adc test repz mov sub out mov add pusha xchg jg mov dec movsb shufps test cli mov scas fmull (bad) fisubl dec mov push mov lods data16 mov bound fdivr jge repnz xchg adc adc mov mov mov sbb adc push clc std jle imul in or leave fdivrs aas sub (bad) xchg dec or outsl jbe lods sbb and jge fdivs pusha movsb cmpsb mov outsl fwait pop push repnz push sub inc mov adc lea stc add adc jns (bad) movsl add push inc pop cmc fs pop call insl mov pop insl test xchg mov cmpsb push roll and (bad) fisubrl add (bad) cmp mov stos xchg xor cwtl (bad) add movsb cmc rcrb sahf in stc jl ror arpl (bad) push xlat mov fildl push cs xchg negl in dec outsl enter fwait outsl xchg fldl test insb push xchg xor fldt fildl mov jge xchg addl mov push js mov mov and int3 daa pop push xor mov cwtl adc cmc mov fistpl lret sub xor std pop xlat (bad) sahf dec mov xchg (bad) jb dec gs cld rcll pop push sahf sbb loop cmp pop test lods testb ds sbb jbe jbe popa outsl sbb push movsl aam loope pop mov fsub test sbb xor dec push pop (bad) aam push icebp aas incl adc in imul adc pop pop (bad) mov dec (bad) fisub ficomp in (bad) sub repnz rcrb repz push mov rorb sbb jmp add cmpsb adc sub rclb enter sub jo call hlt ljmp pop pop popa pop jne mov das mov sbb les inc adc xor jns cmp push call lahf dec xchg test fild cmp jge push sub mov scas fisubl test push nop adc (bad) ljmp push pop cmc mov les cmp fs test sbb testb scas jp push pushl xor xor movsl imul pop mov inc enter nop (bad) jae jnp movsl push add inc ljmp jbe (bad) jae adc push mov les (bad) mov mov scas sub outsb insl sbb adc cmc inc xchg push psrlq imul loope (bad) mov mov popa and sarb mov idivl mov xchg cmp or imull (bad) jbe push repz lds cli pop cmp jnp daa xchg dec aaa mov int3 adc add cmc cltd jno das jg pop jns bnd lcall imul dec pushf sub mov add std add push lock js pop popa mov adc push roll mov dec jbe cld rorl mov push lcall aad fcomps xlat pop imul insl mov push lret xchg mov jo push (bad) icebp pop aaa push aam cli push js sbb inc xor push fiadd adc in push xor push scas jo jl or pusha jecxz mov (bad) mov out rcrb dec inc sbb push xchg lds (bad) ret in ficomp jne ds mov das or imul bnd sub out mov insl xchg sti and or ss iret xlat movsl jge daa mov loope fmull in gs cmc push pop fwait xchg outsl sarb fstps cmpsb sbb das ja push xlat lea mov pop repz adc stc decl mov iret hlt xchg mov xor mov idivl in push (bad) out dec inc push inc adc (bad) mov ljmp dec outsl inc inc mov enter pushf in ret popa aad add add add jge pop push addr16 rcrb js (bad) mov stc popl and xor enter adc fdivrl out out dec lea loop adc addr16 sub in cltd sbb ss push and cmp pop push mov fimul popa (bad) int3 das add into les dec sbb mov lcall aad inc icebp cmc das cmpsl (bad) and jl pop icebp mov (bad) aad jnp mov sub sub mov lods pop mov mov repnz sbb cmc and je lods maskmovq testl mov enter fcomi fmull xor cmpsb xor dec ret jle (bad) ja xor mov ss paddb je sub in scas test stos mov and je lret divl fimull inc and pop sbb xchg lahf inc nop pusha sub cmc (bad) fsubs cwtl test mov cld lret mov xchg and insb jmp pop xor outsb fidiv cmp je and testb sub and adc push test popf lret mov aaa imul rcll fcmove and loopne add stos sub call pop pop lds mov mov ret cmp sbb ret adc and or pop fisubr sbb mov sub push sarb clc jnp cmc adc push mov mov sbb adc adc stos adc arpl stos xchg ljmp adc sbb mov lret sub dec inc inc test sti ljmp sub jne jnp xchg in pop push xchg outsb mov insl test xchg hlt lahf pushf xlat push ds push pop cmc mov les mov pop std repz call ss inc push push enter pushf shlb pop ret lock cld adc dec add cwtl mov rcrl mov dec ljmp test es out push mov icebp mov cltd pop aas ljmp repnz dec push pop inc (bad) and bound xchg cwtl stos add jbe cmp xchg mov cmp push add cmp es enter pop mov mov mulb mov out mull lcall stc popf push cwtl in (bad) rclb fimull clc sarl dec add pop inc loopne sbb cmp lea ss bound mov and and mov xlat imul push js mov negl leave mov and fidivr out sub mov les mov inc in in popa jp ljmp (bad) test push cld pop std cmp mov (bad) lods fwait push sahf cmpsb (bad) xor repz dec repz lds (bad) stc jne outsl mov jae xor jmp loop jno shll fisubl mov stos ret xchg outsl shll sbb sbb insl fistp (bad) clc iret push mov fwait sbb push mov push jne add add shrl hlt mov mov pop pop icebp sahf mov daa in xor inc in outsl fcoml outsb pushf and stc in adc out xchg jae pop insl daa out iret stc arpl jecxz sbb cmp jg push gs mov pusha inc cmp inc push jge iret fnstcw loope jo outsl mov (bad) subl sti je pop cld mov jl gs sub inc fisttpll ret aas punpcklwd ret mov fneni(8087 jle,pn xor cli aaa in jb or pusha int3 dec cmpsb mov lods inc aam or mov out mov gs fsubrs pop aam push (bad) lret sti sbb pop test mov clc jbe mov xchg jne xchg push das int rorl aaa xor push jnp sti push xchg (bad) enter roll xlat pop jmp jl cmp xor fstps inc mov mov sbb shll and dec (bad) xchg cmc push aaa or and (bad) enter ljmp mov loopne imul jp ss jg dec mov jp js cmpb pop mov cmp mov pop lods ror xchg dec call pusha mov (bad) mov adc xor mov pop push xor sub stos loop scas test cmp xor shl dec movb int stos jne sbb or data16 fadd and movsl inc sbb or fwait loope jnp pop mov jb (bad) xor cmp cmp pop int cmp repz scas pop xchg pop sbb xor cli adc xchg frstor cs aam mov and sbb add pusha dec int out (bad) or jnp hlt inc addl and dec das cmp sbb inc out dec call lods push das les std xor movb sub sbb adc scas or and (bad) pop sub mov jno jb xchg dec js add gs sbb popa mov daa add dec jl mov bound and pop sti ds les mov ret int sbb out popf ja hlt lods ds scas mov cmpsl sbb lahf mov inc pop sbb push test mov sbb mov movsb mov mov (bad) icebp enter add jp xor test insb iret inc sti push xchg test cmp movsb jno je mov ss lods add lds mov mov int3 (bad) jmp sbb jecxz cmpsb mov gs movsb cld jns and loopne push mov loopne pop inc dec loope dec mov out pop mov enter mov sub lds xchg iret ret sbb loopne sbb cmp fimul mov (bad) popf fbstp loop movsb mov daa xchg lahf addr16 and lock jo pop mov mov adc daa mov pusha or mov jnp ret mov fsincos mov loop out pop mov cli cmp (bad) std lahf fistpl int3 lods mov arpl pusha inc and jnp push xor add xchg inc push mov les pop int leave scas mov lds outsb xchg cltd imull aam pusha dec mov lea das jmp cmp mov mov nop add cmp dec (bad) jl mov inc push ret pop aaa or stc cmc lods and (bad) clc ja push sbb sbb add stos mov in lea sti adc je (bad) jno gs aam add inc movsb je xchg into mov mov sbb adc dec lret test push sti xor adc stos mov pop jge xchg cmp leave cli imulb sgdtl xor mov (bad) jns inc nop cwtl movsl xor and in xchg and (bad) mov dec or (bad) mov push xchg and xchg bound pushf dec lds arpl xchg inc rorl arpl repz adc sahf xor pop push xor test and cmc adc roll pop sahf pushf out pop add sub xchg ja (bad) inc add mov jo adc dec and sub mov repz xor rcrl cmp sbb push and rcrb dec int3 aad xor mov cmp mov adc mov ss push dec or shrb and popf mov inc stc test pop or mov ret lahf sti adc jns and jmp std (bad) mov (bad) jbe push movsl adc sub (bad) std cmp jae mov (bad) fcoms aad cmp xchg add sub dec xchg mov jb xor adc push mov add mov cmp mov mov inc out jae int3 sti xor in xor test inc scas mov fs cwtl and jmp xor xchg popa push sub int3 in cmc cmp push hlt jge repnz mov repz jp (bad) icebp mov ficompl mov or push aad sbb in or cmpsb lret jmp adc jge sbb shll add cmpsb lcall lret hlt dec jnp,pn cmc push sbb repz xchg and out int into xchg cmp jns push jle mov clc daa xchg in rcll or add repnz lds add scas pop mov add mov (bad) sbb in sbb adc leave lret rcrl mov or in and sarl inc loope or rol jg sub int lret jl xchg mov daa or pop call andl in insl mov je sarb outsb cmp push std shl add xchg sub lods lret lcall or sbb xor mov enter add aam fstpl aam xor pop test movsb je ret cmp shl test and js xor xor add fcomp mov lods and sbb push clc xor nop dec inc and and rcr jns pop ljmp fsubr in cmp (bad) mov ret in out in jmp outsb fadd ljmp mov jmp adc test js stos jae add add xchg jno mov out mov jo push mov jp rcll pop push cmp pop popa mov imul ds lods push imull push dec push jae pop daa pop adc mov cmpsb push jge aas lods cmp in cmp or push es fwait dec pop test mov mov mov push (bad) jcxz xchg mov fwait sbb int mov testl stc sub repz into out mov out push out inc inc inc sbb push fdivrl ja push data16 fcoml inc jne sbb out add imul xchg fisubl xchg inc fild push adcl dec xchg call (bad) jge outsl int mov pop int3 jns dec jne pop sub mov dec loop mull mov inc and sub push adc jne or mov inc movsl aam orb inc dec iret push and and add push pop lret das ficoml sbb into mov inc push mov mov adc inc mov sub sbb adc data16 sbb movsl push stos out (bad) sbb cmp lea and loopne fsubp sub sbb push imul cmc stos cld pop push dec xchg cltd inc fimull add mov ret pop add es lods fcompl xor in fisttpll push dec jmp (bad) cmp inc xor sub jnp push outsb rorb in cli out iret dec jae pop fdivl dec ljmp xchg jmp push std xchg clc add inc dec cmc cmp aas mov xlat push sbb sbb mov mov pop in push dec add sbbb and test pop jne hlt repz or fcmovnbe les mov push adc mov adc stos cmp pop jecxz dec retw push movsb xchg cmpsl mov or jp ljmp jecxz cs push popa iret (bad) shrl ret aaa xchg adc lods dec sahf xchg push mov aad dec push rorl or mov add adc jle or jge dec in pop ss jb mov pushf mov mov add xchg std add outsb or fnstsw mov test push jle sbb or dec aad cmpsl push xlat test sub push shr jb rorb cmpsl aam jg xor movsb add jnp pop inc out pop mov pop pop xor gs cmp and (bad) lods idivb fs cmp sbb fnsave je pushf aas ljmp sub lds loope pop sarl ret add ficomp hlt inc (bad) mov pop push addl insl push sub lahf sbb jno (bad) mov xchg cltd shlb popa push jecxz xchg push fwait add repz mov sub fisttp xchg in dec push add push and movsl jae pop mov outsl jo lods pop fdivl mov mov adc pushf insl or or add push out scas inc pop cmp ja fimul insb scas push wbinvd adc adc sbb loopne push adc adc into push xor push xchg pop bound jne cltd test and jb sbb pop je dec sbb ljmp cwtl loop cmp push cmp cltd sub lcall inc inc out popl adcl sub and loopne mov scas sbb lret xor and jle sbb push push xor push ja lods xchg push jl and mov (bad) repz cmp xchg inc rorl ss shl out repz ficomp cmp mov scas or cwtl cmpsl daa mov das fildll punpckhwd push nop/reserved mov arpl outsb inc mov out jbe push or pop arpl pop aaa inc popf fwait lods push mov test pop xorl mov ss (bad) ror lods mov adc (bad) ds cli fsubr rolb adc mov jmp rolb push fimul mov call pop or cmc push sub (bad) pushl lds inc mov cwtl iret jb jb pop fild xlat or mov int3 lods mov mov in pop je out aad add rolb sbb movb idivb pop mov negb pop movsl xor xchg mov addl icebp in in add cmc mov push push mov cltd sti popf push mov movsb mov sbb jl add mov jmp mov sbb ljmp push (bad) rclb es xchg (bad) cmp adcb add sarl or iret call std add mov push push out push adc mov jecxz adc lret mov arpl cwtl xchg sub nop aaa dec dec cmp and sbb jg sub out sub sbb scas nop add xor sahf bound cmp mov outsl loope mov jae not je aas jle vxorps xchg mov in fadds fisubr xchg iret pop test jmp pop loope cmpl sahf leave bound sarb pop fldl (bad) mov adc es into call dec and shr pop mov into dec mov lret jae lea inc imul (bad) lret in (bad) jecxz ja push mov sub push cs or dec lret adc xchg test stc cld ja test lret inc fbstp (bad) scas (bad) cwtl add popf divb stc stc icebp dec mov fmulp lcall and or popf ficom in pop call mov lods sti leave inc cmp adc xchg add clc sub push sbb arpl xor dec add mov fstps xchg ljmp (bad) movsl jae rolb push sarb scas fstps lahf inc xor lods sub xor adc lahf dec lahf cwtl gs fiaddl mov sub cltd mov mov xlat xor sti fwait jle outsb xor push ds lds ljmp cmp aas jno cmp shrb dec arpl decl xchg loope outsl insb adc inc add call mov (bad) inc add xor in lcall lret test xlat popa idivl add fidivr dec fsts inc stc mov aas sbb hlt pop jmp mov xchg stc pop loop js aaa dec or in test in ret rolb xor push fmuls cmp rcrl or add lret cmp add cwtl xor add pop mov or stos in mov xchg push adc dec pop sarl inc fldl pop and scas sahf add cltd mov test or jg stc shrl adc es cwtl pop push add mov popa sub mov rorb bound sarl cmc scas in pop push in cmp cwtl sti push mov aam pop subb adc das mov or psrlq pusha lods fs popf cmp xor out mov dec xor or pop dec fidivrl push and fdivrl xchg sbb jb pop cmpsb jmp orl pop icebp pop dec mov jmp sub inc stos or mov roll stos inc mov or cmp cmp lret jb mulb out into jl es cld add pop mov jecxz (bad) cmp sub jmp lock lods mov dec xor mov inc push sbb hlt sbb dec push jge mov jp pop ret xor daa push xchg push xchg push jo push add ja fldt loope push jo adc add sbb ret mov lahf mov jb outsl outsl and or inc jmp lahf pop pop xchg (bad) test dec add into sub enter aad cltd (bad) or dec scas fs leave fisttpll ljmp and xlat stos and adcl addr16 loop (bad) ljmp mov or add sbb popa shl das pop pop out lcall jg das and outsb xorl popa sbb std (bad) jecxz mov lds sbb pop adcb cmp jp fimull cli jnp loope mov inc fs imul insb (bad) xchg daa stc or jns mov push sarl inc push hlt addr16 pop std dec cltd sub xor je jl pop sbb mov data16 mov (bad) jmp jns jp add or cs into lock rclb fisubl out out inc in stc lret (bad) popf fadds daa cmp inc test in add xor mov jmp push sbb (bad) int inc in mov and imul ret jbe outsb je subl push jne or icebp hlt adc in inc loopne pusha mov or dec xchg jecxz in js rcll or adc xchg mov push sub inc dec cld loope jo jnp push mov cmp stos ja dec aam fiaddl and js and out outsb or (bad) shrl mov and or and test cmp push sbb repz mov lcall lret movsl ds mov mov dec in xchg out and pop sbb ds and enter xorb cmp popf jns cmp scas mov push adc mov pop (bad) imul push adc lods add xchg loop xchg mov es pop sub inc and or cmpsb jbe sbb add jge jg jecxz or enter sbb xchg push xchg mov addl sub repnz fidivrl sub (bad) sub mov xor sbb dec arpl lret sbb add inc es sbb aad mov pop gs cli pop and (bad) jg cli in sarb jno icebp xlat hlt push loope xchg fdivrl (bad) jne mov pop dec hlt ljmp mov addl cli clc push in xor push lds push movsb mov imul add lds or push xchg nop dec mov pop sarl enter add mov inc in push mov cmp imul jae aas int jmp jecxz (bad) (bad) (bad) sti pmulhw sbb sbb mov add loop loope mov jmp mov xchg hlt ds dec bound push sahf ds xchg cmc or andl and xchg (bad) je mov or stos push or clc xchg push jb push sbb or jo or js into (bad) cltd ds addr16 pop fcmovbe pop pop daa dec mov int movsb in aam sub xchg mov sub addb mov sub adc xor arpl lods jb jno popf (bad) imul loope inc pop gs sub jb pop es inc pop add sub jno cmc pop cmp data16 bound mov lahf add call jg add push adc push sub push movsb and (bad) jne cld pop push jle or jo inc pop and fimul mov push fnstenv cs cmp mov xchg xchg sbb (bad) mov clc movsl loop add pop stos jbe dec fs out mov mov xchg std mov cmp sahf mov pop arpl lock sbb jp clc aad push mov sbb mov pop mov lahf inc push adc stc (bad) push daa pop cmp lods rcr mov mov stc lea int or push pop add and cmp jecxz in mov or test adc mov inc lcall fadd jne rclb add mov mov xor push nop inc sbb inc mov out outsl inc mov cmp test movsl dec mov push mov (bad) adc jge mov outsl out dec fisttp push (bad) cmpsb dec lret dec mov pop lahf jno iret lahf outsl out cwtl in sbb jp sub adc (bad) pop stos xchg cmp inc ret int push inc nop cmpsl jo in xor xor rorb (bad) int addr16 addr16 iret ror lods insb data16 out add pop push mov xlat sbb adc movsb or cld or sbb repz lea into xor mov or sahf and push pop xchg ret cmpsl (bad) mov fidivr aas fucomp xor sbb add xlat scas mov cmp push mov and dec loope mov test in mov lahf sti cltd mov xchg cli mov movsb inc lcall scas add mov fcoml xchg xchg test test push jno cmp fistpl cmp pop mov icebp jbe push mov (bad) loopne (bad) mov mov add dec or push popf cld dec pmulhw jecxz mov fistpl inc cmc jg outsb popf jg ret repz xor dec push xor arpl clc shll aad insb mov jle inc xor imulb adc adc jp in scas bound dec push push fbld mov scas aad jae mov mov das push xchg push sub stos cmp sti in repz sbb es sbb xchg add mov cmp xor push (bad) in aaa (bad) loopne enter cltd cmpsl (bad) jbe mov xor ljmp pop sub jae cmp mov cmp xor sub or add adc and (bad) mov stos mov mov cmpsb and fisubr ficom mov add sub lret and jns sti in pushf pop cmpl pop iret and mov or mov std push add cmp jge cmp pop mov jnp adc adc xlat add xchg mov sti cmpsb stc ret (bad) iret bound jmp or xor xor push xor pop push lock movhps cmp orw scas iret arpl jp inc insl xchg xor dec mov jge pop mov std mov lock sti xchg loopne out std shll es xor mov fsub fild mov jl pop lock incl (bad) sbb repnz les repnz ret xor mov push daa mov out mov pop ja mov movsb inc push ret sbb test xlat daa cltd sbb aad dec out pop sti mov pusha js pop (bad) jl cs les in out xchg mov cmp pop daa or (bad) std in stc xchg in stc aaa cmp cmp push in mov test sbb cmp int3 or jbe movsl cld dec test xchg jecxz data16 (bad) fs les (bad) sub xlat lods cmp jp mov or sbb adc sub pop xlat mov push add and mov enter push lahf nop rcrb inc jmp out or mov push test pop lods or gs xchg pop nop add mov dec (bad) lcall push xor xorl scas add movsb jnp (bad) sub add adc (bad) sahf jno aad std je adc jle inc xor xchg outsl push stc imul sti lock xchg adc add or inc cmpsb (bad) sbbl outsb lods adc out nop js add outsb mov inc nop lods lret mov data16 jmp call mov aaa int nop push xor lock std dec jno ja repnz ss lret sub int in fcoml mov nop dec sbb aas and cltd mov stos (bad) adc ja dec aad scas mov xor movsb xor int3 movsb popa enter add (bad) mov loope fstps std mov push jle out adc (bad) adc (bad) or fldcw cmp dec (bad) pop adc add cmp mov int3 mov dec mov xorl adc mov jecxz sbb pop mov jno xor aam fdivrs flds scas cli jp cli mov mov cld mov arpl cld (bad) xor xchg jp cli inc xor outsb xlat jb cwtl xchg leave pop dec dec pusha dec outsl mov test mov dec imulb inc test dec or mov mov sarl and ret js out (bad) push mov xor scas sbb shlb push jmp inc and add lret aam dec mov pusha push dec ja lret pushf scas movsw (bad) mov pop lahf shll leave popf cmc das fsubrl ja loop rolb stos xchg xchg xchg mov stos mov push je sub ret pop icebp fadds movsb lods push cmpsb add push rorb hlt arpl jae in adc xchg dec jecxz sahf fwait out push test dec or and xor lods push ret jo aas ds mov pop sub adc cltd sub xlat add xchg fldenv test push sub lock loopne lahf cmp dec mov rcl es dec cli popa sbb push cmp jge mov pop lea (bad) jbe jbe fisttpl fs pop add pop (bad) jmp mov clc add invd icebp push inc pop js ret imul fsubrs in mov (bad) std sbb les cltd mov cwtl mov hlt stos (bad) repnz sbb xchg and test (bad) pop sbb mov push in mov xchg je data16 jb stos insb push add pop inc jge mov push inc dec out mov inc push fiadd xchg mov repz pop in imul test mov xchg mov mov sbb xor fimull lea inc mov jae xchg mov dec inc pop fwait into nop cmp aam imul sub fidiv dec dec dec call jl addl sbb xor cltd jns add in ficoml push pop push cmpsl cmpsb push add dec adc lret adc fwait sbb ret call adc in enter (bad) xor rcrl cmp inc movsb call hlt out xor jb mov or inc in mov sub pop jmp loopne inc call mov jnp sbb iret jg add xchg mov lcall mov lds pop lea ficompl scas sahf pop test xchg shrb and xorb jmp fistl jno hlt push dec cmc test test pop or inc aad movsl (bad) aas ds inc mov pop lds pop ss pop out mulb and leave (bad) mov pushf pop xchg outsb hlt sbb pushf (bad) setle lcall jge fistl ret out outsb cli lcall movsb aad jns roll push xchg loope test (bad) iret sub insl dec scas jle mov fmul lcall jl xchg and adc or xchg push enter push out scas cmp fist popl push daa lret pop bound cli mov in test pop adc lret into or imul movsb aam and sbb mov cmpsb aad jbe mov shll xchg sub sahf in push hlt inc pop fistpl push and mov cld (bad) (bad) mov mov sub or and js push inc clc and shrb mov fcoml out sub xchg push movsl scas imul cmp xchg cmp mov xchg xchg mov pop scas cli daa lods add out xor ficom stc rorl inc fnop out das hlt inc ror and (bad) fsubr xchg jmp xchg adc jmp add sub insb cltd adc adcl jne les mov push mov and pop in nopl xor inc xchg and sahf lahf mov adc outsl cmp in mov push and add mov sub push add mov ret repnz mov sbb mov xchg mov and adc pop mov loop lea inc mov mov dec push pop lods stos xor or ret or addl popf pop xor adc daa dec sub dec dec aaa movsb outsl aas rcll (bad) xor stos ljmp push lock or mov cmc (bad) das push xor fst fsubrs pop or cltd pop fs or test sub xchg pop and outsb sbb adc lods aas ret shlb fs pop inc stos mov cmpsl xchg push std movsb sarl out mov jo mov outsl notl jb imull sbb sbb cmp fidivl in adc and js js cmpsb pop into adc xchg stc test test dec cmp rol and jp enter dec push shll xor sti cmp ds adc ret cmp pop (bad) mov dec add shll mov js pop fadd out xchg lds sub or std sub push xlat mov or mov mov xchg outsb addr16 lret and add sbb or sbb add mov adc nop hlt mov add psllw xchg sub js fiadd cmc lea test sub dec adc jle lret popa inc or test jge test xor in repz push push jg dec (bad) or out xchg xbegin in fbstp cli jns push and xor test xor daa mov mov ror stos push inc mov into xchg stc add xchg jae pop xor pushf pop push mov (bad) sbb add cmp lcall in sbb insl enter push push mov loop nop and (bad) mov or jp sub scas cmpsl std pop pop jecxz jae (bad) (bad) jae popl (bad) or push popf jns fwait das push sub jae sub fldt mov in hlt cltd das in cmp add dec push fisttp mov jno xchg push cmp aad push xchg sbbb jge cld sub sbb adc aas iret adc out in fildll pushf out lahf adc in sbb shl push jae mov add fdivrs mov arpl popa sub sub lret iret cs push sub fdivr xor xchg bound mov mov fs xchg inc push xor leave cmp pop (bad) inc jno out ss jg sbb fs add push xor int sub xchg push adc movsb adc movsb lcall xchg divb dec stos mov and cmpsb xor into mov stos xchg sub enter jbe fimul ds push dec push adc hlt xchg arpl pusha es xor sbb push std pop repz fmuls fucom leave mov fidivr bound fstl loopne cmpsl aas movsb cld mov xchg lock das pushf pusha sub insl test sbb pop and in or test rorb loope ljmp and pop or fiadd cld test jb dec das pop fstpt add inc xlat daa lods or out clc add imul fcmove lock fildl fwait push les gs cmp in adc movsb and push push or xor mov mov loope jle idivl sahf inc pop ret (bad) sub mov xchg push ret lock scas cs cs out shlb mov leave ljmp and shrb pushf jbe mov cmc mov sbb aam and or add push cld cmc mov sti and xchg inc jo or sbb adc leave cmpsl add ds fcompl jp xor sub mov jp jo sahf and (bad) lea mov repz sarb xlat push cld push dec push pop clc sub lods sub adc adc in lds enter out popa xchg fdivrl (bad) dec inc pop add call test push and cltd pop cmp dec jle jmp into push icebp cmp les andl ss pop and cli daa lea rcrl (bad) push dec pop cmp pushf repz fistl imul lods dec lods mov std stos inc add loopne adc scas lea (bad) inc jae (bad) je ret cmp orb add cwtl pop pop xlat aam and xorl out xchg mov aas les dec pop out cmp xchg jecxz div lea insb aad sahf jbe stos bound cmp sahf movsl aam lods mov popf (bad) adc jns cmc mov in jmp xor pop adc fnstcw add lret mov enter enter gs mov (bad) test imul test pop or fstl outsl es fsubrl push xchg sti lret shlb pop dec (bad) (bad) aaa cmpsb test cmc test jb sbb mov jbe fstpl rcrb add cld push arpl xor test xchg lcall repz stos out (bad) jle jae xchg test int3 pushf pop test mov nop cmp push in idivl jge xchg das sub dec stc mov pushf roll mov xor sub cmp sub sahf xor popf fwait in lahf mov pop mov jge add mov or loope icebp es mov test call out pop fidivl test inc ret movsb leave movsb aaa xorl int lret (bad) outsl mov mov sti ja xchg inc push outsb std test das rolb sub adc push sar (bad) mov int3 sub (bad) push xchg jg xor ds (bad) mov pushf jp lds add lea aas mov cmp cwtl movsb or inc out or sahf lahf notl mov pop out loope icebp frstor stc repz or inc sahf punpcklbw div andl jmp and (bad) adc pop in sbb movsl push cmp and es xor ret push dec daa ss fbstp jne sub fneni(8087 inc mov cmp scas int or dec pop add and inc sub nop mov (bad) in nop mov adc ret hlt aam cmp cmp xchg inc inc and cmp inc daa sbb add (bad) adc and sahf inc or cmp jmp dec bnd int in xchg push mov sub push pop mov jge add xchg pop mov adc push repnz inc mov sti jmp ljmp cs xor gs stos xor sbb out or lds adc and imul pop mov (bad) or int3 push push sub or inc rolb fwait dec sbb fnstenv sbb and int3 out push test xchg adc mov xchg cmp inc hlt xlat dec xor and push in cmpsb xor rcrb lods mov xchg inc stos (bad) mov jne sbb int3 xor fcmovnbe mov mov adc nop mov pop repz dec or lods les pop pop fisttp ss jbe and jge roll mov mov mov mov sbb xor fadds std mov jne fildll mov jmp adc inc jae (bad) out inc in cmp adc movzbl adc outsb lret sti (bad) sub loopne out std fwait cmp sub test in (bad) inc test jecxz lcall add fldenv mov and pop mov mov and cmp sbb das dec ja or (bad) or in add lock (bad) jge adc cmp adc mov and pop adc mov outsb movsb xor lret and or clc xor pusha int3 mov leave popf imul mov loop leave fcmove mov in mov push daa cmp jge pop mov or cmp add loop adc and pslld insl (bad) fsubl lods repz pop jne pop xchg xor shlb ret mov inc pop xor push imul test in js cmp fistp mov push push pop std mov add pop mov jecxz fwait ja into aaa out xchg inc packsswb daa mov lret out dec mov sbb repz lds in das cmpsb les int3 in stos jno pushf lret aaa inc fldcw mov pop (bad) pop (bad) out shll xchg adc dec mov imul cmc popa mov fucomi fcoml insl test sbb xor inc sar dec push and rclb mov add jns pop sbb scas xchg jl add int jno ja mov test in or repz cld sub and jnp leave fmull sbb sahf or stos xchg and mov in and jge jecxz fidiv xor fnsave xchg dec mov pushf into and ljmp inc mov call mov pop inc pop or inc mov scas sbb or mov sub xchg scas mov cmp (bad) icebp das add data16 inc nop (bad) jne bound popf lods repz sub jnp stc lcall repz sub mov mov pop lods pop push mov outsb cli inc aam jae fs xor and or adc scas mov push imul ljmp lret std inc xor lods pop inc in mov and push (bad) aas ficom js test or sbb jne test inc adc bound fisubl mov pushf sub add mov mov std pop mov xchg jno mov mov ret fmul fs (bad) lods xor lds sahf dec xorb fisttp bswap stos dec scas pop push push push bound lock sti cli inc jl xchg cmp pop lcall (bad) loop je and mov (bad) sub scas cmp ficoml adc adc loopne je fwait lds sbb or loopne (bad) shrb jmp loopne js lock jl jge xlat inc call cs pushf inc sub mov sti cltd ljmp xchg clc movsl (bad) mov popa (bad) and jae sub lcall rolb jmp (bad) sbb or loopne pop push push scas hlt pop cmc jl rcll (bad) lcall rol data16 mov xor dec and cld aaa inc std inc mov add cs out mul fmuls sub aas lcall mov pusha sub or icebp data16 cli mov (bad) jb stc inc cmp ja mov sbb addr16 fdivrl inc lret scas in mov add adc test mov fsin psubusb cmp enter sbbb outsb rclb jle movsb push or and dec negl dec shr push xor aad dec and test pop les jbe out mov nop push fcom jae int lods jp push xor test sub into mov dec sub jo xor add js loop mulb cmp mov je pop lods push pop sahf out cld (bad) jbe pop insb cmp pop add push into xlat or mov pop hlt sbb divb jmp fs shrl mov or jnp jne cmp mov in xor arpl out jl ss cli add xchg adc push jg sahf sub mov xchg cmp out xchg sbb xor mov xchg and jo call mov pop or inc jnp jnp (bad) call enter mov shlb jae adc out pop sbb test pop sub add jmp ja,pn cs fildl rcll mov sahf adc aad imull rorb push cwtl adc loop xchg dec arpl mov arpl jg pop (bad) mov icebp pop std fsts dec in sti xor mov inc out xlat mov jecxz dec mov mov imul movsb mov ss xor movsl (bad) cmc push popa jecxz dec and inc xor popa rorl mov xchg test jns push pop fistp sub call ss jg or add push lahf mov fidivl nop imul (bad) jp inc push dec sbb pop pop or mov add sar ja loop jne add adc cwtl xchg jae add push repnz (bad) cmp mov sub lcall lret jb loop dec popf ret dec mov xchg xor rcr daa push push shlb iret jp aam jp mov jle add repz repz adc add arpl xchg dec (bad) mov sbb testb and daa out add cmc in nop inc fiadd mov xchg cltd xchg cmpsb loopne lahf xor imul repz gs std in jle bound inc sub push fsub cld aas adc xchg mov jmp or je push call leave xchg inc iret adc addb push pusha mov push shr mov add xor test aaa mov bound inc cwtl jae or fldt ret aas mov or cmp adc ss sbb idiv (bad) cmp sbb cli outsb movb scas push insb pop subl add dec es pusha repnz cmp (bad) xor lahf ss sti ss fs mov or lret mov mov idiv sub push (bad) fs cmp adc aaa jle test clc mov int3 lea adc jl sbb ljmp subb lods pop xchg push pop data16 out ds push faddl aaa lea xchg insl clc xor daa sub dec mov xlat xor in mov and mov mov mov push mov lret movsl icebp pop pop out and dec mov sub push ljmp jge or es (bad) pop xor add push (bad) sub mov mull dec int push dec push cmp push outsb mov jo push add fs test jo push push dec stos cmp gs aam cmp pop cld jmp bound push adc or push mov mov mull sub and lock and mov fcompl inc mov inc (bad) outsb stos pop mov add ljmp inc mov or sahf in js push adcl pop sbb and in loop arpl pusha add sbb jnp mov add pop adc outsb inc in addr16 xchg lahf cmp dec push in nop adc pop dec jmp mov adc mov fnsave mov outsb or and pop insl orl insl cmp add mov je insb jno and (bad) ja pop sbb clc loopne dec outsb test data16 pop bnd inc push cmp std or test imul adc mov icebp ss mov mov int dec push (bad) dec fisttpl mov xor xlat or xchg inc fsts sti arpl dec adc (bad) out inc lds addr16 push js and xor cltd bound pop or rcll fwait add loope,pn mov mov adc xchg jns sub push insl jle dec ss add loopne inc sbb xchg hlt xor movsb jne push bound or (bad) mov in pop gs dec mov mov cld mov mov outsl pop popa movsb jle xchg xchg arpl mov loope or sub fdivr insb stos xchg ja cmp jecxz push outsb in push dec sti mov mov and mov addr16 js sbb out xchg cmc imul mov push jge jns pusha cli pop and cmp lods sbb mov sbb (bad) push push lret not loopne push js mov xor mov pop inc mov or mov (bad) je int3 mov aad and or cmp xor cmpsb push mov dec aam mov aad adc sbb lods or mov cmp test xchg jo jae pop lahf xor jp mov jle icebp (bad) or insl xchg jp aam rolb push fiaddl (bad) sbb sbb xchg mov pop mov sub (bad) seta into cli cmp hlt ds out lret shrl dec mov push aaa ljmp or shl cs leave dec pop pop popf (bad) mov imul add daa test push and adcl (bad) xchg mov dec mov addr16 and mov cli adc stc cmp test insb in push cli inc dec sub sub pushf mov jne sbb push idivb movsl jne rorl in mov push mov in inc into sbb aaa mov mov cmp (bad) jno push test sub jle ffreep into or push imul not dec xlat mov xchg out rorl popa mov push push test cmp cltd jecxz pop sub pop fsubrl aad mov test stos push test loopne push insb jecxz add mov sbb pop pop aam sub scas out jae dec jbe mov jmp stc enter popa stc out dec (bad) insl pop or dec and out neg lock sti outsl aaa inc push lea push ljmp xchg or loope andl cwtl xchg or arpl pop and daa sub hlt clc dec sahf jmp or mov mov jg push cmp mov xchg jno xor mov and call dec aam jg add dec jae pop imul mov enter adc mov adc test push enter sub repnz mov stc ftst dec js jmp xchg add pop fiadd rolb add ja bound mov bound js push dec jb jno jns pop sub cmp iret rcrb out insb lock dec xchg rclb (bad) jb add cmpsl (bad) mov in es les adc push dec xchg ret into lods std roll jbe arpl dec outsb in xchg cli mov xchg decb inc jecxz nop sahf xlat fwait rcll jb pop inc lods frstor sub ljmp inc mov add in pop mov dec into fldt push jp int repnz lds mov decb and std mov loop insl popf lret push or aas js pop outsb and fs rcrl inc cli pop mov sahf cs stos xchg and sahf mov in bound xchg jnp addb fwait dec hlt les ffree mov push fs pop push mov cld sti cmc add jo or and inc and fst pop imul cmp pop psubusb (bad) xchg insl inc pop adc xor sub lock sbb inc add jge addr16 or inc mov mov xor or iret (bad) mov dec cwtl and loop sub in jns repnz dec in add mov mov lods cld mov push or mov pop mulb push stc in in mov cmpsl pop or pop add push xchg lret lcall insb gs pusha push sub rclb sub mov inc call mov (bad) mov idivb movsl sbb icebp inc shlb mov dec addr16 idiv (bad) xchg stos loopne mov pushf or aas aas lock mov mov stc dec inc imul add adc mov leave pop and sti jae mov cmp insb mov add imul (bad) fwait movlps push imul sub pop sbb inc stc push cmp mov (bad) mov insb js cld push jp mov pop sub add aad in xchg lods pop adc jne rorb dec and (bad) popf jno adc sbb add sub jmp sbb xchg cltd xor sbb xor imul or notb scas lods mov ds scas adcl outsl addl or mov hlt dec test lea sbb pop pop (bad) jmp inc push pop cmc es and cmp pop pop fdivs and dec scas icebp fs or push shlb inc lcall cmp mov pop fsubrs push xchg xor (bad) notl loop js sbb imul fnstenv mov ret jl daa fsts adc into jp mov inc test adc pop bound in lahf stos int std ja mov mov add repnz sub ret out unpcklps imul xor sub inc xlat test pop pushf (bad) mov mov repz sarb xchg movsb es lcall xor jp das in adc loop xor and incb or push in push or pop sbbl test scas xchg (bad) add adcl ror ret xlat in and jge ret jle adc push mov fcompl (bad) fmul pop pop fs cli adc jnp sub imulb mov sahf mov mov fcmovnbe mov into ret ror outsb aad push cwtl dec (bad) xchg push mov xor (bad) movsl jge xchg int3 jae push fs inc inc (bad) mov mov incl adc (bad) mov mov call fs xchg push fidivr mov sub outsb pop outsb xchg push es je nop mov mov loopne and cmpsb sub bts pop clc cmp (bad) fisttpl adc cmp fsubr repz shl mov test aam or lds out (bad) jge mov mov jge (bad) xchg push cmp fstp dec sbbl rorl sbb inc jb pop pop xor dec cmp idiv mov enter aas or fsubs std jae lcall and jg popa inc or ret push popa popf sahf xchg (bad) jmp out inc or push xlat mov mov pushw leave shl fnstsw xchg xchg fidivrl and or dec lret cmp jg loop jbe sbb push mov mov testb cltd scas pop cmpsb fwait lea aad pushf aas sbb mov inc fimull pop jnp loopne push (bad) paddsb add dec pop aad imul pop loop jb mov cmc je mov sarb adc lods hlt fnstenv and mov (bad) out sbb cwtl dec xchg pusha das mov pop inc fisub call mov jns xchg ja aaa sub push jg push pop lret out mov and aad iret movsb fwait or cld and mov shrl clc mov pushl jbe hlt negl outsb fwait je daa sbb xchg ret int3 mov sub pop push (bad) or lret xchg dec cli (bad) aam pop (bad) int adc adc sbb out mov inc mov add out popf xor das loop (bad) jns pop jle fcoms fbstp cmp inc pop mov daa das negl adc or inc inc test arpl xchg mov ja jno aad xor mov (bad) lea pop (bad) ror pop in xlat inc jecxz jne mov js test push and cmp (bad) leave or inc jbe inc or ljmp lods repz mov xor aas dec pop jp,pt jl pop test dec add icebp cli inc rcrb fldcw sbb cld cmc xor data16 clc cmpsb test icebp leave push and and xchg movsb lds mov mov outsl jl mov stos pop movsb cmpsb cmpsl or and int pop fmulp jecxz sub movsl cli insb std jge mov and jg (bad) xlat (bad) fidivl mov pop mov mov adc add inc int3 push aas xor push cld or repz xlat inc shrl lock push rcrl mov sub fisttpll subl sub (bad) insb mov test push stc dec sbb pop test cwtl mov aaa sti test xlat jno sub ret aas cmp aad inc test addr16 inc cmp xlat dec lock stc scas (bad) xor cmp in hlt xadd ficompl pop das jmp outsl hlt jle ss fcomps jmp inc dec ljmp push adc dec sub mov popf stos push push add mov inc mov test je jno movb jle add mov push js aaa in pop arpl fist mov in or push dec mov mov dec add add push and and loopne frstor outsl and pop xchg push xchg fldt jmp (bad) pop sbb out bound rorb out mov xorb js cmp js push mov jb fisttpl mov nop mov mov cmp mov sub (bad) fadds push xchg lock mov jns pusha xchg popf fdivs push inc xchg push lods cmpsb lret ds xor xchg aaa mov (bad) int shrl out loope sbb sbb nop push test and popa jp lcall dec xor cmp lods enter adc cmp mov push addr16 in ja mov das fstpt jno dec cmp repnz andl int3 cli movsl and mov mov push out mov mov mov cs mov cmp jno (bad) xor push mov icebp xchg stos (bad) sahf frstor inc mov jecxz fwait repnz pop xchg flds inc pop out inc dec mov mov add mov jo fistl sbb xchg mov test dec push push mov imul stos adc stc mov fcmovu jp cmp adcb int dec das sahf out vpmaxub scas movsb sbb dec jbe lds lcall insb inc cmp negb adc xchg ficom jbe fdivl and jge mov dec incb jecxz jp (bad) mov mov sbb push inc cmp sub mov stos xchg sbb mov inc sbb mov pushf pop push push push ret loope push (bad) test iret fs (bad) push mov fldt loop inc int3 bnd add lods jne addr16 jecxz push mov movsb sub pop sbb dec pushf subb sub and and mov push aaa (bad) mov cmp jb inc mov (bad) lahf jno repz mov inc or xchg sbb jns mov mov or aas cmp xchg sar pop es lods mov xor movsl sarb int loop mov fldcw (bad) arpl mov adc ljmp imul inc push or mov aas jl jg rorb inc xor es gs jne jmp sub adc mov enter pop pop outsl hlt push jns cmp fistpl je push xor pop pop adc fxch movsb sub loopne sbb inc out (bad) adc inc mov adc mov aaa adc ds negl leave cmp test push out inc aad sbb cmc inc and ljmp pop cld outsl jb sub mov and cmpsl jecxz pop sub rolb jge enter add push sbb out sbb insb cmp loop xor lds ss js stos sbb (bad) sbb inc comiss out sub int aas xlat push mov rorl rclb jl push sbb lods hlt fwait mov mov sbb arpl ret les ds adc out bound in cmp ja xor push xor aam negl mov mov dec xchg inc xchg inc and loop (bad) rorb mov add jecxz shrb loop add loopne and inc xchg adc mov cmp xor cli ljmp push inc dec pop inc (bad) dec and mov push or adc lods adc rcrl adc lods push inc inc imul lds out mov push pop aad jmp ret les lea jmp push cmpsb mov jae lods adc mov pop shr out dec cmpsl sarl adc enter lret stos inc xchg add jno inc jb jns jl jnp or pop mov pop and push xor cs jge and faddl push popw add fwait mov outsb xor sbb ss fbstp in int jmp in shlb add std jmp les js addr16 xchg mov inc mov mov inc lods mov mov add and push mov xchg or (bad) insl lcall add ss push movsl mov cld and inc dec iret push mov or fimull movsl daa repz jg mov sbb out adc cltd scas sbb loope fiaddl test leave mov test mov xchg mov jae xchg add pop pushf (bad) jecxz push or rcrb jl mov mov mov ret roll push sti mov jmp data16 outsb rcr jb rolb pop ret push rcrb jne jnp loopne std aaa std cli pop loope or addr16 mov test arpl repz sub mov cmpsb adc sbb fld jb ja subl pop mov rorl cmp mov sbb cltd and adc (bad) mov mov out mov mov adc mov stos inc arpl shrb inc pop dec sub sub hlt ljmp mov pop push ss adc pushf push pop pop inc mov mov nop fidivrl mov test cli ret test repz (bad) pusha pop rclb sub mov inc cmp jmp adc aam shrb cld pop and or test mov cmp push inc ss or xlat insl aas sar inc popa leave mov out fidivl xchg (bad) (bad) lock push call aaa sahf cmp daa (bad) jmp push sub mov nop fdivs or out add jge daa xchg movsl rol jl int3 hlt jl (bad) scas adc jno leave lret scas (bad) dec xor xchg jns pop jmp dec movsb aad loopne insl mov lds pop adc sti mov fadds (bad) mov stos push mov scas testl not xchg ret outsb mov xor out decb dec into addl mov int scas pop mov xor ljmp xor xchg cmpsb outsl pop push and test pcmpeqb pop imul inc aad in push nop mov and aad mov jo sbb push jo sbb cmc cli lahf push sub jnp push jp mov mov mov pushl jb jmp dec cmp and js mov popa jnp ret ds in dec cmp ds das jnp xorl test mov mov mov bound mov sbb in mov fwait pusha or cli dec or shlb cmp imul lahf stos mov mov in fdivrp imul push mov mov je popf insb add fistp iret popf mov xor hlt dec (bad) iret dec or into mov int3 inc cmpb sbb mov xchg fwait and xor (bad) into dec pop xchg (bad) push add mov scas xchg rorb jecxz mov mov xchg jo ja dec shrb and dec rcrb aaa jl mov (bad) pushf add fnstsw sub push (bad) js push add and in lret push jne fldcw inc jns outsb push cmp xor jecxz repnz xor testb jl mov mov or (bad) incb fs test movsl inc iret (bad) jbe cltd (bad) mov jp dec pop push fadd jmp fstps in gs rcrb out jb rclb jp sub cld mov pop push bnd sbb shl adc movsb cmpsb push fucomip mov aaa sbb mov aas mov test outsl sub imul repnz mov fsub std leave jmp mov mov scas cltd and sbb cmp mov sbbb dec adc mov mov cmp cli xchg cmp push pop (bad) aaa lds imul adc and mov mov imul dec test sub lea or xor mov hlt popa push movsl mov sbb ficoml push xchg xchg pop imul not mov sbb add mov insb pusha push mov dec scas (bad) jg and xchg sub sti dec in jmp movsb out jnp add mov pushf sbbb fdivrl mov mov pcmpeqd out shlb xchg dec and adc scas jecxz lods pop xchg mov ds insl sahf dec ret or aam insl pop push in sbb insl lcall jle gs je int lcall fsubp mov pop inc pop nop mov xlat sub arpl out mov cwtl jmp lret mov fnstcw shrb in scas out mov and dec sbb mov cld imul fcomi aas imulb and and cmp xor mov std pop jb ds test imul js and xchg dec mov rcrl stos in and loopne cld out in out cmpsl (bad) (bad) and jno ret pusha jns into dec fdivrs sub fs int dec adc push out test movsb gs dec fwait rclb stos xchg hlt test and cmp std in test xor jnp cs ret test jecxz mov arpl iret inc imul and cmc push dec adc xlat mov (bad) loop int mov fs fucomp adcl xor add jnp mov mov (bad) mov mov ss jbe fwait dec mov cmp daa add fcomps shlb jg sti ret sahf mov ret out inc mov cld mov not loopne pop and inc and sub in cmpsl sub cmp stos mov loop scas setle mov cmc sub inc sub push (bad) outsl (bad) xlat jecxz jns pushf or popf mov arpl mov mov imul and add xchg dec arpl adc add int xor add adc and imul insb sti cmp in cwtl mov xor add mov add fs arpl dec enter sub mov lods adc jne daa shl xor push stos adc and fisubr xor (bad) stos jge iret sbb fsts sbb pop mov jle xor xchg test cmp mov fistl pop daa mov or fiadd push mov sub ljmp xor stos out add fcoms lret or call (bad) lahf dec fsubl cmc imul cs daa repnz xor shlb shrl (bad) jnp aaa jo jmp shll test cli mov cmp hlt pop les adc mov mov aas cmpsl (bad) mov mov push aam fldl xchg sub scas movsb inc inc push test in push mov mov aaa loopne jo or and shll and test sti push lret stos lcall push cld xor jecxz stos inc movlps mov les fisttpl mov scas xchg addr16 cwtl cmc jae test mov mov in xchg movsb stc jmp pop and xchg pop and inc xchg pop jb push and jl in or mov popa push jmp jp iret mov push (bad) mov out mov (bad) dec nop ficompl add sub es loop (bad) or mov mov adc push bound data16 sbb lret int3 pop lods sub push movsb loope gs fnstenv loope xchg jecxz or mov sbb imul jae pop mov out push fcomps cmp pop cmp dec xchg xor cmpsb addb inc mov cmp jae insb scas pop mov mov jmp adc push (bad) out mov loope inc mov lock hlt add outsl mov jge out out insb xlat imul stos popf lahf push leave pushl adc mov (bad) int or jo cmpsl cld dec daa mov movsl scas mov xchg insl fistpl addb push push jb push push fidivr lahf into inc push add or scas outsb ja insl xchg and dec (bad) xor push jp mov dec ljmp xchg push pop (bad) in scas mov pop jns movsl xchg stos push xchg xchg mov ds inc mov inc cmpsb lods mov (bad) mov cli cmpsl pop mov sbb outsl mov gs notb out xchg cld (bad) mov sarl jecxz inc (bad) push jg and cmp jp ljmp mov out and xchg mov mov ss mov mov (bad) sub data16 clc (bad) rcrl cli cs aaa push mov (bad) inc mov in inc sbb clc out xor icebp mov push je jge or cltd sub lret ficoml xchg cmp cmovbe outsl mov es sbb enter adc mov push out sub (bad) stos mov rcll aad jl adc test xor (bad) add pop and pushf mov mov cltd xor sti (bad) stos mov jmp aaa arpl cwtl or mov pusha mov xor popf lret lods gs pop inc clc (bad) (bad) je fwait push pop fimull xor sub xchg aam add adc xor aam es pop pushl fs das push sbb add mov push pop mov jp test jno into pop jmp pushf arpl popa mov (bad) rolb adc xchg rorb cs mov or fwait add cld outsb mov fbld push sub or add inc dec pop mov (bad) (bad) or and movsl or cmp add in mov loope out fldl xchg pusha mov push (bad) cmp mov stos cmp std ja aaa jno cmp outsb test js cmc mov leave out test dec test rcl fwait mov mov xchg jb aad xchg (bad) iret mov xor fwait scas pop or dec popa xor push add idivl add (bad) mov mov pop push pop outsl fstps sarl movsl jle xchg sub mov cmp clc hlt stos mov (bad) push pop jno shll mov sub and dec jae rcrl xchg sub add hlt stc push mov jl sarl cs vmovsldup mov jl incl pop ficoml fs mov xchg (bad) (bad) mov fildl je inc fdivrl push cmp shlb xor jo mov pushf f2xm1 jg dec int (bad) test pop sbb pop jns push js dec data16 pop dec sub dec inc js add inc mov cmp into push adc (bad) jae adc (bad) sub test in lahf dec pusha pop xchg xlat fisubrl fnsave orb leave roll enter sbb jp bound fldt fnsave jmp faddl (bad) ret pop jecxz mov fnop pushl sub cmp sub lds push or push test loopne xor ds sub addr16 jle je (bad) clc mov mov or inc inc daa xchg mov pmulhuw inc sub add sub xchg mov add mov cmpsl orb cmc sub std pop pusha test scas cmc sbb roll adc test lods fdivl inc cmpsb push xchg mov xor xchg jns imul adc xchg mov cmp inc xor mov std xchg shl rclb test frstor fcmove daa add push inc sub int adc ja lock xlat ja and fwait (bad) dec popa lods inc push pop js roll sbb xor adc or mov and addb daa clc ss add sahf jns sahf neg mov inc jo mov xor pop or int jge (bad) icebp sbb push repz imul sub lods add push (bad) mov mov cmp movsb jge loope inc leave call ss dec push pop xor movsb movsb inc mov jge sub xor add push shrb jecxz push out cmpsl ret loope sbb lahf fcomps xor aad sub and mov (bad) sub xlat ja nop mov push mov aad pop aad in ljmp cmp mov and cmp fmuls mov imul or jmp je shl push mov and mov cmp add cmp inc addl jge fsub xchg and push dec stos add mov or in inc mov inc cld das xchg jge adcl loop jnp mov ja inc lods repnz or cli add push pusha pop cmp mov insl fsts xor rcr pop adc dec xchg jp push xor lock mov jmp push sbb add sub ret or sti testl jbe mov cmpsb mov enter mov adc push xchg dec or mov dec mov xchg int scas ds push sub popf or leave mov dec testb push xchg fisubrl mov stos loope inc mov push jl in xchg (bad) ret std pusha dec jle inc push in or inc jo mov mov int3 mov jns mov (bad) pusha imul lcall cmpsb jecxz xchg jnp sti dec aad xor enter shrb and xor scas push js adc and (bad) in cmpsb pop inc xchg stc xchg mov sbb dec test adc (bad) push (bad) pop ret inc mov mov sarb xchg adc pusha mov movsl adcl xlat sbb mov adc xchg push mov mov jecxz inc scas inc mov sub mov adc adc inc aad lds sub pushf daa push mov sbb push adc mov pop (bad) mov xor je aas pop add push scas jle lret add xchg sbb dec xchg push rcll xor ret or mov pop es mov cmp clc mov jecxz jg cmp mov dec aas pushf movsb and cmp xchg jns movsb ljmp push jno imul adc rcrb push dec cwtl fsubl cld fwait mov je jns ret sbb lods pop ret scas inc into mov into push dec gs or rolb push mov push fidivr mov in and mov and lds push les mov out xchg pop jge adc mov shll dec out push mov xchg loopne mov jns cli push push sbb inc daa scas into rcrl add pop sub sbb ret cld out cli call sub mov dec pop dec adc int3 mov outsl (bad) jb pusha cli (bad) in mov fwait adc lods addb mov jmp inc (bad) cmp out jmp dec cld fldt cltd insb xor mov mov sub roll pop js orl fisttpl push ja pop sub jno jb cmp cld sti sbb (bad) and mov sbb inc das jp,pt test inc mov jl addr16 or dec mov add andb xchg add mov call jo mov and fcompl das xorl (bad) call fidivrl add mov sub sbb adc sub or out hlt jmp fdivrl pop les mov mov jecxz xchg pop pushf sub addr16 adc mov loopne call (bad) fwait jb xchg sub xchg jle xorb and or lods negb negl sbb cmp icebp xchg lea sub (bad) clc push cmp es cmc push mov cmp inc mov jmp and xchg call add fcoms mov outsl adc mov clc sub mov (bad) pop mov scas mov mov scas dec cmp push imul cmp js insb mov dec cmpsl out cmp in and mov imul cld pop pop mov pop xor fwait push pop scas insb push inc xor shll jg leave cwtl adc dec movsl imul std es pop adc pop out cmpsl xor rcrl adc cld or xchg jle jae test mov inc xchg or lahf fild and sub sbbb scas js bound leave scas sarb (bad) lahf in inc mov inc iret mov dec push pop lea out jo shr xchg xchg cmp mov jmp jle jle (bad) cli sub loop cmp dec bound addr16 je nop ret lret and jae in inc cmpl sub hlt adc add mov icebp test loop ret xchg xchg lea imull in cwtl sub loopne xor jne or or add test push lfs frstor mov in imul mov sbb (bad) (bad) fwait js jne inc in lret adc out movsb clc pop and sti aam jg xchg lret sbb adc mov in lds cli (bad) ds sbb mov bound and fmull (bad) fs (bad) jmp xor xchg add and stc out lods outsl adc out outsb cltd xor out or (bad) loope push push mov in fstpt notb mov int adc sub imul movb jbe out test add adc fwait xor xor mov int xor scas scas add ljmp dec pop rorl lret push fsubr repz xor js ds jl sbb pop or push sbb mov dec rcll mov idivb inc mov mov adc lret push jns xchg aaa push mov fs mov xor es mov (bad) repnz jmp daa xchg (bad) mov and aad es or out (bad) xor fnop mov fistl stos int3 rdmsr adc mov lcall or ja mov pop mov push mov js mov mov aad test dec push pop jecxz sbbl dec sub cmp int inc lds xchg mov (bad) cmp testl adc movsl repnz push sub jl cmp sub out adc in sub ds jecxz imul sarb push pop jl and mov push orl ss decl cmpsl or sti test jecxz sub (bad) adc sbb add das xchg and fisttp cmp dec add idiv xlat imul sbb inc arpl popfw (bad) dec add xor in adc dec xorl mov mov mov pop hlt out mov mov call scas pusha out dec push xchg cmp lods and pop mov push sbb or fcomip test mov cmp mov ret xlat dec mov subb push test sub (bad) pop sarl repz and jb test xchg out in dec stos loopne jo lret mov ljmp imul sbb mov lock sub xor aam jbe pop gs inc cmp dec nop in inc (bad) cmc outsb je push (bad) stc stos addr16 repz adc lds nop and xor add frstor sbbl inc clc inc mov insb shlb adc lods xor dec jl ret (bad) xor adcl or sar mov pop inc das and stos outsb mov sub xchg nop jg mov adc ja leave scas jnp xor imulb sub (bad) fdivrl push mov lods out fsubrl icebp xchg scas add pop clc dec dec pop js mov dec cmp xchg test aas popf cmp jmp adc in scas xchg loop mov xchg adc dec sbb and sub add cmp lahf push xchg mov loopne push dec mov push inc mov das shlb nopl add mov pop ret leave mov out add xor push (bad) in inc xchg hlt mov fadd dec test mov aad inc popf rcrb jle mov xchg jnp push mov add sub aad roll cli cmpsl push jno mov fidivr cwtl loopne iret out adc mov fsubrl cmc repz jge xchg movsb adc dec jle pop sbb (bad) enter xchg mov outsl or repz mov fs cmc sbb mov adc add and sub cli or fsubrs movb scas cli jmp cmp out lock or lret mov push cwtl sbb ret sbb sbb mov mov jle lea or repnz push push mov xor fdivl rcrl in pop xor imul mov mov dec popf and inc pop call or push cmpsl das mov push or iret cli jo (bad) repz pushf pop xchg sub cmpb (bad) xor jle mov sahf movsb jae lea je pop test into jecxz jge sahf xchg jecxz cld and adc adc (bad) sub mov mov aaa fwait les repz inc mov outsb fadd pop int3 stos sbb aam bound sbb jmp repz xchg or dec (bad) mov sbb out pop xor dec or cmp mov dec jg ljmp popf (bad) in xorb inc cli scas bound fcomp hlt pusha sub sbb adc arpl stos jge testl pop popa (bad) sti movsl jge dec mov dec lret hlt xlat rcll jnp push lock mov sub and jno add dec imul js and xchg jg pop iret xor pop into cld gs push aaa test daa sub in mov xchg sarb data16 jp push pop test ficompl and fstl nop dec lret std mov movl add jo jl or push lods xor (bad) rcr adc push and xor adc jmp ja mov cmp sbb das cltd fisttp lds mov loop push ror jnp ret xor inc (bad) std xchg jne sbb mov js jmp nop (bad) cmp prefetch push fistl xchg imul cli dec (bad) lods mov xchg (bad) imul aam sub movsl lock jo jnp icebp outsl lock jg lahf insb fs es adc cmpxchg pop (bad) jle sub mov inc arpl daa mov loop add bound dec and and test push mov add and scas roll lock fdivrl shlb cld push dec and in loopne in and mov out fldenv out bound xor sub or pop pop inc sbb lock rolb (bad) mov add inc int3 add iret or pusha mov leave xchg push fldenv dec lds add int cmp test nop inc mov push push (bad) lret cmp enter xchg pop cld lock push mov add mov ss mov movsb and hlt fchs mov mov jne mov mov sbb into cs repz test out aas cmpsl hlt mov jbe push repz imul fiadd add stos lods arpl dec jae mov mov cmpsb insl stc jb lret jnp scas fstl mov out shrb or loop imul sbb push lret in mov stos ljmp cmp imul rsm inc add inc and cmp xor jl jae test pop ror pop mov cmpsl cmc xor insb cmp mov fwait mov negb mov and fbld sub je sar ja xor pop fiadd les dec adc aaa sbb pop aam mov lds into lods (bad) ficomp aaa pop and ds ds lea mov fwait mov lret push fdecstp imul xchg sbb in jp lods in mov and jne mov jg shrl (bad) mov das dec movsl add inc mov fwait jge mov dec test lds mov sub addr16 mov scas xchg or cmpsl lcall dec sti fnstcw xor data16 (bad) pushf loope outsl loope jl jg or mov mov stc rcrb movsl sahf mov fsin mov insl decb lahf mov jg pop mov or push pushf add test (bad) popa sbb xchg out cmp mov sti jl iret bound adc lods or repz and sbb xchg test mov mov xchg in mov pop jb (bad) lahf sbb pop data16 (bad) adcl (bad) add push or (bad) sbb sbb iret pop cmp push xchg sub (bad) roll stos das pop inc xchg aaa xchg sub stc mov pop cmpl mov mov xchg nop arpl and rolb push lret jecxz fistpll ficompl sub xor mov dec jp rcll mov sbb lret in inc dec jnp gs sbb (bad) in sub les push leave fisttpll ss cmp (bad) aam test cwtl out mov adc push clc scas xchg jl cmpsl xchg inc xor mov add in mov inc xor sbb xor arpl jae xlat or inc stos dec (bad) in mov xchg call pop sbb jb sbb dec lcall jb add in xor cwtl lea ret mov in loopne sub fcomps push mov and pop sbb jns sahf daa out inc arpl jbe mov cmp pop push jle ds jecxz in and cmp push ds mov movsb loop cltd call aam (bad) stc loopne push xchg mov scas push jns cmc xchg test test insl pop scas repnz mov ljmp stc loope jne mov cli es andl cmp push or fild mov push add mov shrl mov arpl xchg xchg pop outsb pop lods sub and pusha sub cmp pop xor xorb fistpl xchg sub xor dec adc nop inc pop jg shl das dec popa mov sarb add mov sbb sub das fcmovu fsubs mov and test and jnp xor mov dec pop enter adc enter mov loop popf cmp test into pop loope xchg sub icebp stos bound mov scas xor in popa xor daa imul fwait jp (bad) pop dec sub pop pop adc lock adc jg cmp cmp push mov push dec jne aaa adc bound outsb data16 or adc adc scas int ja out enter jmp lret (bad) jnp mov push or push mov stos or pushf call (bad) arpl pop mov and add add aad or ror sbb jbe pop sbb mov xor test xchg outsl hlt loope jmp sbbl pop out pop fstpl rcll xchg xchg fildl outsb mov mov imul push mov xchg cmpsl frstor scas sub gs imul out cwtl clc and nop add lock jl pop xchg xor and xor loope cmp xchg adc cmp pop inc adc push lret enter cmc and insl repz enter test jne mov cmc adc sub mov push mov adcb ret mov stos je ss pusha fwait adc jmp or pop xor jge ja add push shr xor ds fstpl outsl loope or cmc (bad) pop mov lret dec ljmp lock aam pop loope cmc mov rcr lret aaa test and popf xor push jecxz xor inc int adc cmp ja fcmove repz in mov or mulb in lea add mov das fdivr and addr16 mov ja xchg jle inc and test pop cmpsl mov pop push sahf addr16 xchg mov mov sub xchg pop dec out into fisubl repnz sti xor int (bad) sti mov jg outsl push movsl fcmovne xor jbe xlat in push aaa es or clc icebp daa ds aas mov cmp in jecxz (bad) xchg imul cwtl inc scas jle ljmpw mov paddsb fadds popf adc in pusha cs movsb sti aad inc ret or test mov js lods stc sub fdivrl inc mov int3 fs std cmp xchg test dec in leave ret lahf into push pop jl ss inc sub sbb cltd mov mov or scas pop xor lods ja in clc test bound push dec aam insl jnp mov js and push adc push mov in cmpsb push pushf out adc enter mov das (bad) out rcll xchg out adc test negb jb and adc stc or push xchg xor insb and imul mov inc cmc ficomp stc in add dec cltd insl mov mov outsb pop adc jns std sub mov arpl arpl in push jge sbb mov in push fistpll cmp in sub notb ficoml pop stos and notl jle pop roll and popa aad mov fistp (bad) icebp test inc inc jno mov popa jne dec xor mov out rcl mov cmp in push push popa fisttpl lds test stos dec aaa xchg loopne or mov nop mov jecxz push enter jmp sub (bad) mov or ret roll scas and rolb cmpsl rorl loop scas popf ret dec mov dec mov lea lock std sub cmc dec mov add adc and mov adc cs sub into or xor lret ja popf (bad) into les mov cli cltd repnz out jbe mov clc dec lods mov test xchg lds scas jle add cld rcrb xchg ds dec movsl jo pop lahf decl xor bound jmp (bad) es lcall jp pop jg addr16 fisubrl out jl inc mov in xor xor or sysexit mov imul inc jl test mov pusha xor dec cmp mov into cmpsb (bad) push or cmpb imul dec (bad) push mov fdivs sbbl movsl jge les xor xchg push mov ret in leave movsl test xchg imul (bad) cmp fimull and and dec sub out cli mov add fwait mov push (bad) push jmp scas mov icebp shr call xor scas pop sub inc lods sbb xor jmp sbb leave fprem jno push insl adc dec or lods out sub cmpsb arpl cli inc mov push or mov jp mov (bad) mov or (bad) cmpsb int xchg jns shlb and adc sbb push iret hlt push mov and inc pop or pop insb leave and (bad) dec scas (bad) ss xchg cmpsl leave add popa popa mov es dec in hlt mov pop and pop ret leave andb pop lret cmc jne sub and jg push or ss inc lods call aam add int (bad) leave cmp cmp dec popf idivl cmp mov inc out jb mov push push fimul mov fisttpll or xchg add arpl sahf in mov cmp mov fdivs push mov lds scas fs push sub insb lcall out and lods pushf pop mov insb push movsb fnstcw pop js in shll adc cs push add imul int inc pop adc pop cmp and insb mov lcall (bad) mov outsb inc sbb sub add fiadd jp int3 jbe iret dec dec mov and iret fstps pop pop jbe roll mov add jno xor (bad) and scas in das jae ret mov stc cmpsb and into nop push and adc or out gs inc sbb lods cli or dec mov (bad) jbe xor aam (bad) vdivpd jmp mov sub sarl (bad) insl aad rol mov sbb mov orps nop dec mov orb pushf add jo test mov mov addr16 (bad) das inc div aas stos imul cld idivl insb test lcall dec or cwtl push mov mov push adcl lret cld cmpsb add push call lahf mov rorb or bound jmp repnz ja xchg mov sbb js jle popf arpl dec ss rol repnz int3 xchg loopne sub adc adc mov mov jnp mov out adc pop sti pop aam loopne mov shlb loopne jbe in lods pop es int3 call leave jb test imul cmc dec dec mov cmp sbb mov loop sbb cld pop ljmp sbb ficompl jp movsl xor inc jae sub cmp or mov sbb lock aas (bad) ret xor inc and mov xchg inc push and sub adc lcall ds xchg fcomps aaa mov call push push into cmpsb jnp in cmp inc (bad) push dec popf jno jbe mov xchg or mov xchg pop daa ficompl mov mov out add repnz shrl xor loope or xor cmpsb in xchg lret pop cwtl and adc inc mov cmp jns mov sahf aad test ljmp mov (bad) or fistp mov pop cmp fdivr push xchg leave jle jp push (bad) mov mov jns,pt pop scas dec fsub sub xor test jno cwtl ljmp cmp testl and mov mov int pusha xchg mov mov arpl addb call std ficoml jne sbb pop cmp aaa dec rclb addr16 sbb jo outsb aaa inc hlt test movsl add outsb dec xchg mov stos sub mov outsb les mov mov cwtl into push lret lcall mov jp and (bad) mov ret out mov (bad) jbe and and add or dec fwait stos xchg mov fadds fnop and pop (bad) mov icebp mov sub cmpsb (bad) mov pushf jbe jmp mov movsl lods into cwtl das dec mov jl sbb flds sub lret aaa jo ret xchg xor dec cmp negb sbb pcmpeqb or clc add mov inc fs fnsave pop pop push out (bad) and std inc xchg out xor fisubr jl cmpsb cmp fsubrp push pop jmp sub ss dec (bad) jb cs adc and int3 xor adc xor jb or and movsb and aad dec addr16 aam scas jo and (bad) mov lret dec xchg movsl pop adc dec dec in sub rorl lahf mov mov ss out gs and pop fstl std lds pop orb mov les add scas dec fcomip outsl xchg test push into jp (bad) adc push stc mov cmp xor outsl sahf sub dec jge xchg xchg or xor gs inc sbb mov and jno subb repz aaa rcr or stos imul sbb arpl xchg pop xor xor loope clc sbb jnp das sub icebp or cmpsb lcall ret mov (bad) mov mov push popa or inc mov lcall es shl cmc mov inc lock ficoml in iret xorb movsb and subl sbb pushf cmpsl popa push xor add sub (bad) and mov shl addr16 push cli call push addr16 add je lock leave cmc jb add mov dec notb aas insl int3 les and sbb adc in arpl cmp mov mov or inc mov push mov (bad) pop roll sbb inc fild cmp jbe (bad) jge add daa rcrl jae idivb inc lahf das mov pop dec outsl cmp and cwtl cmpsb repnz sbb sbb push mov test mov cmpsb pop rcrl enter in jecxz adc xchg sub fcmovnbe ljmp inc mov imul loop jl pop adc push jg jo cmp xchg call (bad) repz popf addr16 cmp add ret int xchg clc scas xor sub mov pop mov mov xor aam jg push cld cltd (bad) gs cli shr in sub push adc or jns int dec imulb mov sahf repz cwtl add inc imul loope pop cld roll mov cmp sahf loop add out repnz mov rcl mov out mov add fsubs out mov and or lock cld daa test inc xchg popf inc cltd (bad) mov (bad) rclb js (bad) fimul adc fist cmp imul into ret scas mov rclb mov dec cmp stos subl pusha gs icebp jge popf inc into xchg lds aas xchg int3 xor and cmp push (bad) leave and test daa (bad) or inc push jle or mov lret jb jle in mov (bad) cld bound mov fcomip push push addr16 sub inc iret push and mov xor dec adc fisubr pop test pop fild xor test daa test cmp iret lds imul in insb xchg cmp (bad) aam pop int3 pop xor sbb ja xchg imul pop gs lcall dec pop jmp inc rorb je mov xor ret imul out inc mov or xor add pop inc mov xchg test jb push adc orl cmp adc sahf gs lcall dec rcr in call pop push gs sarb push nop xchg hlt sub mov fstp push insb adc scas icebp inc xchg pop mov scas adc movsb jae lea sbb or add push mov cmp mov dec sahf into inc jp stc rep lods sbb pop jne rol fwait in in jmp jo aas adc cld or mov pop movsl xor daa add fisttpl and pop push add or ljmp fnop lock xlat add iret xchg and in fcmovu mov mov push cmp jmp push push mov clc rorb (bad) xor push lds sbb lock call hlt into jecxz jbe adc jmp inc (bad) or jb je scas mov push out mov lock cld (bad) mov sbb mov hlt fdivrp loope jne cmp xchg insb xchg idivl pop inc dec phaddbd xchg sub xchg rol fdivrs hlt stos outsb or adc int lock mov ljmp pop inc ljmp adc jecxz (bad) jbe mov mov popf cmp dec dec leave push iret jne push aas loope call adc dec xor ljmp push cmpsl inc xchg and pop ret adc insb test sbb xchg sbb pop call cmpsb pop push sub xor pop pushf xor jg lahf xchg sbb loopne in sbb arpl ret dec insb jo adc dec and mov push push pop pop lds adc popf mov pop add or ds rcrb daa push pushf mov cmp sahf rcll dec in cld aaa inc hlt or and cmpsl pop (bad) pop jl arpl xor sarl mov (bad) fsubrp scas sbb test dec (bad) cmp xor dec xchg jl cli pop mov xor sub mov mov shr or and addr16 and in rorb int mov sub rcll fs mov dec or xor sbb das mov push xchg mov mov gs mov rcll rcrl mov pop sarl mov mov aaa cli ret out mov mov scas les in cmp mov push das dec movsb inc xchg xchg bound mov (bad) add sti mov pusha rcrl or addl incb sub push out push enter sarb dec out icebp or sbb into mov mov lahf bound cli ss cmp mov sbb push or xchg inc dec movsl mov (bad) fild cmc js imul adc (bad) data16 jecxz lret push sarl jecxz dec outsb jnp aaa sub push sahf rcll fstl mov pop and icebp add fptan dec cli adc and sbb jnp sbb ret pop adc sti inc pop xchg mov in insl push adc call push pop mov mov jmp popa inc aam mov push adc repnz ds push cmp add mov push jns mov pop jae call cwtl jbe (bad) pop mov pop int3 pop (bad) jne mov repnz mov incl pusha pop push mov dec add xchg sub mov inc mov (bad) ja and adc ds adc sub sbb lret push imul cmp out mov sbb jne fcmovbe inc mov pusha cwtl das cwtl and sub xor mov outsb cmc and (bad) (bad) dec add xlat scas aas dec lret sub cwtl xchg push clc mov ret (bad) int shrb mov enter jmp dec add in dec jns bound pop sbb dec imul addl iret jle loop in adc inc test push mov xlat mov dec mov (bad) out jae jns sbb pop mov mov sbb fsubrp jne adc sbb mov loopne adc mov cmp pop mov nop loop inc push adc xlat fs scas std add (bad) incl pop subb mov test xchg aaa push push sub lea mov pop jmp ss aam lock ljmp mov lcall shl cmp ror push pop repnz inc xlat push cmc clc aaa adc sub fnop jae jmp es adc movsb lds pop jne xor sbb arpl pop dec xor cmp adc mov pop lock jecxz fsub inc (bad) cmp movsb or dec into jecxz inc xor bound int loop scas (bad) (bad) clc cwtl pop or push xor inc pop insb insb cmp xor cmpsl push test pop or adc mov or test xchg xor cli add or fisubr ds jle dec xor aaa jno imul loop and jge arpl mov xor pop cmp and popa mov scas cwtl mov push adc sub sbb mov pop xchg movsl mov notl inc mov andl lret sub mov pop mov xor dec sbb lock push in push ret sbb inc lea test test test pusha xor lods test sarb movsb jg into int3 mov mov sar (bad) stc sahf push mov inc aas ret mov vunpckhps aad push jl nop mov ret cmpsl movsl mov mov push je xchg dec dec repnz stos mov pushf push mov repz out fiaddl or sub sbb stos push cmpsb cmpsl mov push add cmp add outsl cmpsb (bad) cmp imul fisubr sub je pop sbb mov popa xor movsl mov ds (bad) jb fisttpll xchg fsubrl cmc xchg cmp cmp cli mov das icebp daa sahf mov pop pop mov psadbw fucom js mov repz lock jp popa dec daa add xchg jp cmpl in mov add cmp rclb mov fmuls rcrb iret add pop mov (bad) xchg mov es fnstcw stc dec inc dec nop add mov fdivr aam ret mov mov xor repnz (bad) in jns test mov scas (bad) imull rcll mov aaa adc daa or mov leave cmpsb mov sbb (bad) test mov pop insl enter jne push (bad) xchg jmp out jnp addb (bad) loope es clc dec lock mov cmp mov into jge nop hlt leave mov inc fadds inc jmp pushf xchg pop inc sbb insl mov jbe dec sbb pop sub push fmul xchg adc jmp pop sti inc js jge sbb jne cmp call inc dec dec push inc sub push xor test xchg mov call int3 bound xor addr16 pop repz mov jmp xchg in mov pop nop adcl sbb enter xchg dec call add cmc mov aad scas (bad) insb xchg cltd jl movsl pop aas out data16 jns mov inc and lahf jne mov adc xchg dec push testl les (bad) push je scas push repnz test mov ret rcrb movsb push lret jno dec in inc daa inc lret (bad) sbb adc fadds mov nop aad lahf cwtl inc insb popf sbb pop loope mul aaa dec pop xor jecxz (bad) lret sbb in jecxz inc cmc ljmp jl (bad) popa add xor jmp test xchg pop xchg push push jb out mov dec xchg mov pop xor addl mov mov fs lods jns test cmp lds fisttpll mov xchg incl adc push sbb (bad) jecxz rcl jecxz cmp nop pop mov movsb loopne imul in je inc and ret lea aaa dec push pop mov or or or mov sub xchg mov inc je pusha (bad) xchg jbe sub es sbb sbb outsb xchg (bad) addr16 (bad) scas ljmp mov lds xor hlt lahf jo or insl cmp sbb mov and and dec andb ja push popf sub aaa pushf push pop pop cld mov ret mov adc (bad) divb bound jecxz ret xchg stos jae imul test movsb jae xchg (bad) push pop xchg aam jnp sub pusha sbb aad clc sub insl xchg mov xor jnp daa cmpsb (bad) enter add xchg out ljmp outsb and gs ljmp push xor push leave push jge pop popa out add lock or mov ret andl cmc in aaa test or mov adc sub mov gs je mov sti ja sub mov mov pop jmp rol push cmove repnz lods sti add add mov or add pop mov fs xorb dec push mov adc jbe test daa mov mov push pop or mov (bad) ds int std mov lret mov pusha jb cmp pop stos dec fnsave es addl adc pop push or mov pop cmp jle or push add fsubrl fistpl mov lock adc (bad) adc lock cmp mov add jne jo data16 stos xor mov iret lret ret out mov mov adc fmulp fldpi mov insl cmpsl xor repz mov inc hlt psadbw push xor lods mov stos dec test xor scas in repnz icebp jl jns leave iret fimull ljmp lcall inc pop hlt dec mov enter dec mov mov mov fs push mov pop xor xchg pop jecxz or push add mov sub loopne jecxz push mov push ret pop sub movsl pop frstor fimul lds xchg xchg adc xor repnz dec ljmp int mov lea inc test repnz xlat cltd test add mov pop test mov xchg int (bad) ja push dec mov push cwtl fs sbb jb cwtl movsl sub mov and mov orl int3 mov fsubrs inc mov pop mov add or adc sub ror sti pop mov add adc push clc das mov xor cmpsb mov fsub adc jle cmp nop lcall cld pusha dec test (bad) jmp jae lods in out cwtl stos je fs fist mov lret jo sbb outsl inc mov call cs sbb insl std jo cmpb mov aam cmc sbb das sub push fidivrl lcall (bad) push lods sbb sbb (bad) push xor hlt push inc in std lds xchg sub in dec fbstp mov popa and out mov jl mov ret and mov and enter clc xorl in iret and mov mov mov lock nop imul leave or shll lret jp int3 mov sti xor sub push mov fdivr mov adc add fstpt aaa addr16 notl mov sbb leave (bad) (bad) lahf jne mov fiaddl xchg nop mov cli outsb dec xchg arpl xor fwait repz push mov mov push xor dec test (bad) movsb pop mov cmp (bad) xor in imull shr ljmp inc mov adc (bad) push fsubp out in xchg jne cmpsb ss imul mov fistpl repnz pop iret mov jnp push mov (bad) insb lret gs ficompl xchg pop addr16 and adc push or aas or jb mov clc sarb cltd add jnp les mov adc pop call jle xor adc cmc adc lods in mov movsb sbb add jp add add inc add mov or and jge xchg xlat dec jmp test test insl (bad) mov mov dec out sub icebp cmp add shrb or pop scas jns and adc rcl lds pop negl lock fwait and jb xchg mov xor stos mov rclb sahf mov scas jns or and and xchg outsb pop in mov dec dec xor ficoml jb incl sahf mov xchg dec jg sbb mov add mov ja fstpt pop sti insl inc xor pusha dec insl jle mov push jns (bad) fnstcw jg and (bad) in adc jle leave push jae push flds mov (bad) sub (bad) mov dec mov ret popf leave mov stos (bad) test clc mov leave std jne mov push push jmp es push inc mov movsb adc adc jp mov push rorl fcmovu out cld jl push clc jbe bound push pop decl add test (bad) ja cmp cmp aam sti or mov add or inc addr16 jnp inc push and pop mov mov sub xor cld je arpl pop paddusw mov push insb sub cld aam pop lock add xchg call mov pop sbb mov jno pop (bad) jae pusha ja jbe frstor cmp fiaddl push into enter aas (bad) jle in aad data16 or mov mov cli adc imull outsb stc or xor movl test test insb and ficoml or cmpsl sub or repnz xchg addr16 add sbb jg cmp adc dec popa jns dec mov std mov push mov enter rcrb dec (bad) mov xchg add mov lods inc pop bound int3 xchg mov sub dec mov xchg popf enter add mov adc sub push push pop rcr loopne lea clc inc mull repz mov jmp sbb loopne inc add jns jmp inc mov cmp jo sub sub mov mov enter clc xor iret js adc sub sahf sbb (bad) imul push pop pusha sahf out cmp dec sub (bad) inc jbe pop add (bad) mov inc sbb scas sbb pop xor xorl bound loop call sub sarl lcall cwtl push mov lea and imul push out adc xchg out push std testl sub inc sub imulb push out mov sub xchg jl sbb fs imul imul repz mov insl mov sbb orb mov repnz xchg mov insl cmp dec insb push jbe mov stos lret mov inc dec (bad) or sub xchg fdivrs sbb pop jnp mov jae iret dec test in mov out ss sub fisubl pusha push lahf pop popf dec cltd pop lods mov mov mov and pop push es mov fimul xor std mov dec iret xchg xor loope jbe outsb sbb in adc mov push push inc xor ss xchg push (bad) fdivl mov fcoml xchg sub dec idivb mov pop es lock in enter push adc adc stos adc jmp les pop jns cmp test lock int3 sbb jbe sbb fcoml push dec scas mov add popa jae add and dec mov mov pop cmpsl push mov fldl sahf out xchg cmp test popa shlb test es addr16 data16 rcrl sti xchg inc mov xchg inc cs xor pop nop inc inc lea or test push rcr inc mov jnp cli dec ret (bad) scas dec and out mov xchg xor scas cmc xchg and in lock or xor mov mov loopne gs push xchg xor shll xor je sub pop xlat loope loopne xchg mov jmp fcomi shrl jecxz xchg sbb es push xchg cmc push cs rclb cmp adc mov outsl aaa pop push mov call mov cwtl out cld xor add aas cs sbb or mov adc clc mov xor mov mov add sub fstpt std rorl fnsave in push adc repz lret or add mov cli lock pop sub mov scas test inc imul add xlat pop adc int3 mov sbb mov pop or movsl sbb xchg cmc cwtl sub in fs jmp mov jecxz lret cli adcl sub lds adc cwtl inc jle sahf mov sbb cmp ret test movsl jg mov adc mov mov repz sti pop inc xchg scas in rcll lahf add or fisubl cmp rcll adc ljmp add xor lods pop pop sar ss test mov sarl popa xor rcrb mov aas cwtl insl (bad) jg mov push aaa add and mov jle mov mov cli mov repz jae shr imul repnz imul fs dec fsubs inc sub sbbl mov cmp xor ja or lret dec rcl xchg jg pop dec pop add ljmpw das mov adc setnp into jmp xchg and fisubr lods pop lock push adc cmp mov jns add inc push arpl jno cs aad int lods push lods (bad) cwtl sub mov dec fs and jg cmp out cmpsb cli and sbb xchg push test dec jl cltd mov test dec push (bad) bound jmp pop sub jns lahf bound enter add xchg or ljmp stos mov add ja leave jne xchg mov icebp dec test xor rcrb push sahf and rolb sbb mov repz mov nop pusha sarb cmp lahf rol stos cltd mov enter pop cmp test insl mov or test inc ret pop and cmc into cmpsl sbb subb cli loopne popf (bad) or add and jae loopne in xchg add test and add roll (bad) sti and loopne push mov jecxz add mov mov jb mov sub in or mov push mov cmp push jnp pop cmp sub adc xchg inc adc mov inc xor add es loop mov negl movsb je xchg add add push ss aas jp xchg fwait mov insl enter xor addr16 jb inc inc mov pushf jg mov shll xor sub inc out adc fildl enter adc inc inc inc je push jno jecxz push add mov pushl je aaa push cmpsl pop (bad) or sub lret std xor enter daa and mov icebp inc lcall icebp xchg cli mov xor dec call (bad) into mov out push add add stc and or cmc cmp inc jle jae adc inc push adc and arpl loopne mov outsl mov fstpt sbb cwtl stos imul lds sahf aas (bad) in outsb cmp (bad) (bad) je mov out adc cmp dec int3 xor jns mov sbb in popf cmpsb (bad) pop int push dec mov xchg fildll adc daa adc scas push mov test or lret dec cwtl outsl lret addr16 out cmp in (bad) dec (bad) iret mov sbb fimul outsb movsb (bad) pop or cli movsb inc mov xchg imulb lcall adc imul sti sub insb xchg ss js test icebp ljmp aad pusha push mov rcr int3 or mov pop nop insl dec (bad) and nop fadd ljmp jecxz push mov jg loope mov and xchg in sub jp mov lods movsl rcrb pop xor jp call sub jmp ret jle push inc data16 loop pop add adc in sub inc fnstenv bnd push outsl je out fdivrs add (bad) idiv add mov cmp mov int hlt hlt stc sti sub std inc in ja push mov insl push ds int icebp scas aaa xchg ja imul sbb (bad) ds (bad) push push fistpll enter in jge xchg inc add aad pop push sbb fldl xchg cmp adc icebp int3 (bad) fcmovu sub bound loop jno push lcall (bad) or (bad) out xchg sub inc jle mov and (bad) mov imul aad xchg push pop iret and pusha cmp jecxz pushf push pop adc hlt jnp stos dec stos and jns sub gs push test push mov bound push scas mov pop push mov movsb sbb xor fs in repnz inc lods fbstp xchg cmc and scas in dec dec fwait ret (bad) cmc pop cmp push ja jns (bad) in imul add int3 and repz out test lcall andl stos shr and (bad) out add pop (bad) jne jae push xchg add pop sub hlt repnz mov sbb sbb push pushf jmp xlat scas jmp inc fstps xor mov adc xlat mov int cmp xor enter cmp shrl loope mov (bad) adc add inc mov lahf xor ss add add pop xchg sbb loopew pusha dec dec fwait adc pop js and inc cltd jle fsubr pop out rorb loopne orl pop and pop js (bad) hlt imul ds les ja call je fildl adc jne psubsb pop test movsb loope and or sub scas xchg mov mov jg lods mov or pop pushf jb push lret cmp ja lock mov movsb mov ficoml sub xor inc jg aas idivl pushf adc or jl lret jmp inc test notl scas mov xorb jmp stos mov add out aaa inc out faddl scas gs out lret (bad) mov sub push dec pop pop addr16 mov into pop mov sub test mov movsl sbb adc jno out mov test add les mov nop inc cltd into aaa js scas push adc imul rolb cmp xor daa call mov pop cwtl ret cltd dec (bad) notl sbbb and sub lods cli (bad) ja ds (bad) dec and mov aas notl (bad) loopne pop sbb negb cmp scas inc push int3 mov (bad) xor iret or adc in sub sub push jbe inc pop xlat notb sahf scas aas cwtl lock add adc lods outsl sbb and fnsave fldt fwait in repnz xchg dec push (bad) es js xor cmp movsb dec push das pop push movsl sbb xor jnp xchg iret sti idivl clc mov add add jnp out mov mov mov xchg cmp mov fcmovnbe push jb push cld xchg or cmp pop xchg out aas mov xchg cwtl cwtl pushf jle xchg daa in es push push cmpsb xor clc mov dec xchg inc inc dec xor jbe aad ds sub sbb sarl mov xchg sub dec div stos jnp shrl aas xchg faddl push cmp add int3 mov jecxz test imul dec mov int3 mov mov mov (bad) pop out mov mov push xorl cltd inc enter (bad) das subl jno iret pop or cwtl pop and jge cmc mov add cmpsl push (bad) sbb add (bad) inc and sbb inc fisttp pop jmp flds outsb push or (bad) ljmp inc mov lea push inc push lock outsl push mov pop bound jge jns cmpsb lds cs hlt push scas dec sbb mov and shl shl mov push dec mov stos pop lret repz test (bad) cld mov xchg pushf lret adc in mov push mov (bad) jnp jl lea push xchg dec cmp mov lock adc adc mov xchg out lret lret mov push push mov idivl jp cmp add aad xchg mov aam mov (bad) (bad) insl insb out jno out xor dec push mov (bad) push sub sub lock push mov jnp jmp push xor pop outsb notb outsb inc mov mov mov inc pusha cltd adc stos sub and jo mov and int3 in pop adc mov popa push mov mov push pop dec pop popf leave push jno xor (bad) add fwait sub popl pop inc push ss cs out repz push xchg fyl2xp1 imul daa fscale je jae or adc dec xchg pushf jp cmp fadds jg test js leave mov push loopne mov and aad xor imul fisub in lret jb xor xchg mov insl fnsave pop ret push dec imul dec mov lods dec push scas repnz daa loopne jae push sub out scas push cmpsb movsb mov or add adc sub pushf pop push insb lods popa aad cmp push aad addr16 cltd call (bad) push inc std push cmp scas sub or mov mov sub orb mov push mov js cmp (bad) sbb loop repz push mov enter jmp stos xchg psrlq outsl and scas cli (bad) mov sbb push and ds loop pop data16 mov lea bound dec cmp lods xor sbb js adc bound push popf mov or sbb pop cmpsb out dec movsb cmp push negl jne mul and jb push inc shll lock sbb in sbb pop pop out jl repnz sub mov and inc jl scas outsl loopne cmp loope ret test sarb out add or and out iret push dec sbb nop aad cmpsl out pop inc loope add mov pop (bad) int3 mov ja clc outsl ret inc jnp pop cmpsl sub cwtl jg lds adc in stos (bad) dec test sub sbb xor xchg cld xchg pop lds dec iret mov sbb outsb add adc jmp xor or xchg lods push and inc adc pop adc sub dec in sub push sub push mov cmp movsl sahf inc push xchg cmp or out into pushf (bad) xchg jecxz,pn and push add into pop int aaa (bad) jnp mov pop or sub xchg call mov dec (bad) fs pop fs je test (bad) adc and iret lahf xchg xchg sahf sbb mov imul jns das mov ds cmp cmp xchg fnsave push popf ret or jecxz rorl inc hlt cmp dec pop lock stos push scas inc xor add sub cmpsl sti rcl fistp out inc sbb bound jp mov out in xor xchg movsl mov push pop mov stos cmp test test xchg inc arpl jl xchg cmpsb outsb or jecxz push js loopne xchg sub sub in xor dec call inc aas test and lods je pusha je mov xlat (bad) xor mov sbb mov loopne dec cwtl inc loope leave adc mov lret lcall pusha cmp jle,pn jae mov (bad) push std rclb jns jno mov sbb lds js mov pop sahf push jp js pop outsb sahf adc aas push int testl adc leave jecxz cmp jns mov ss xchg push test xchg lock (bad) cs add aad dec lea cmp mov (bad) xor cmpsl movsb clc mov dec mov in xor call or xor cmc cmp and test jle add pop lahf dec or sbb cmp (bad) aas lods xchg pop hlt stc int adc sub les mov fistl int3 cld fdivl pop rorl xchg test and inc xchg (bad) or sub test dec lahf aas jecxz and (bad) pop fsts dec mov mov dec rorb inc lcall (bad) mov adc data16 dec mov aad mov das shlb sub sub cs (bad) xor sub dec (bad) mov mov xchg andl faddl jnp rorb inc ror cli dec fnstsw sub cmp imul xchg or in pop jne cli insl push outsl sub arpl fwait aad int repnz (bad) loope mov das push adc repnz sbb ds imul inc push ljmp sbb ficom xchg mov or icebp pop mov mov repnz mov adc xor mov enter ds add pop mov (bad) mov cmp imul sbb mov lods lods out dec xchg (bad) push sahf or dec xor xor (bad) and in cmp xlat mov gs test cmc sbb rcrb pop mov adc lret out mov xor mov and jl mov and pop inc sub (bad) rclb push mov adc sub mov push and cmp test idiv xlat jg rcl imul inc aaa (bad) cmpsl or mov popa hlt pop lods leave outsb repz mov jge je lahf (bad) jo mov jle jp push movb jb xor or xchg and mov xor xor jp ret sub out js mov clc hlt mov loopne imul fsubrs div and cmp sub mov idivl xor sbb outsl call clc cmp (bad) imul inc (bad) cltd fistl push cwtl outsl inc xor xor je adc xchg je adc inc (bad) lock fstps movsb mov xchg add fsubr stc pop (bad) (bad) pop mov neg mov lcall arpl test fiaddl jle rorb cmp lods divl dec and adc bnd xchg inc jge cmp fs cmp push andl add jnp sti pop inc mov adc ss push jae mov dec lods sub das std addl xor dec dec mov ljmp enter sbb into inc xchg pop pop add push cmp cwtl mov into popa mull (bad) daa cmp mov fstl xchg dec hlt popf subl pushf out push mov ljmp cmp enter mov or inc pop popa dec inc jmp sahf aam cmpb ljmp (bad) scas popa add repnz repz sub lret mov sbb adc xchg fwait pop sub std sbb cmp sub xor push fdivrs xor add mov push mov sarl loope sub fsubrl sbb cmp in sbb xchg mov test and dec inc mov stc or xchg xor pop push mov icebp pop ret out sbb (bad) movsl stos cmp add (bad) call aaa test xor cmp add pushf adc adc lods ss pop adc aaa xchg ret inc std mov inc rcll nop in std aam aas sbb or mov mov out (bad) ds push pop rcr mov sub in fldl dec xchg shr sbb mov gs jnp and (bad) pop (bad) stc push repz pop int stc shlb ja xor pop mov data16 fstl sub pop lock push sub push jae pop add icebp (bad) mov dec dec popf lds cmc pop push push mov sub xor cs lahf dec (bad) fstpl add jno lret ret aam (bad) loope inc (bad) mov popl mov and (bad) lods test pushf scas mov adc push sbb inc and xor adcb data16 scas sbb daa aas push sbb ljmp mov clc and into movsb xchg aad mov add jne inc dec fnstenv dec mov pop sub mov cmp stos jne xchg (bad) ss and iret fs js mov cmp dec stos lods iret push addr16 ja cmp xchg inc aad jmp cwtl nop xchg insl and mov into adc insb and bound faddl mov pushf lahf adc mov push jl xor sbb (bad) xchg test or pop add inc (bad) pop cmpsb xchg fdivp insb add jecxz cs loop push push add sbb pusha mov sub pop push mov inc (bad) (bad) xchg loop rclb (bad) nop (bad) sbb je push in inc inc in ror ficom adc xor sbb and mov das or add push test inc mov cmp in lcall shll push stos push sub inc fidivrl jno shlb (bad) sti iret jmp and mov (bad) aad daa mull dec ss iret and push loope int3 fnstcw sbb stos and jo mov fs pop sbb xchg or lret and mov inc pop imul nop inc rorb mov mov imul fdiv stos imul int3 rolb jne lods mov pushf dec icebp aam cmp add add jne mov fnstenv adc stos (bad) incl add jle bound xchg cld mov mov jbe xchg or xchg aas (bad) sti mov or out inc loop daa imul mov push aad dec sahf (bad) fstp idivb push xchg xchg lods jno push rcrb xchg xor js mov adc and sarb in mov dec ljmp scas aas js and inc into rclb aam test rorb push leave lret sub lods imul inc icebp push push or add cmp stos jge out pop inc or sahf out add xchg mov aas lret mov fnstsw mov xor mov loopne aaa mov out jp faddl repz aas in sbb xor cmp (bad) rcr fucomi imul sbb pop add faddl add xor and inc jmp mov or dec cmp jae xor into cmp iret (bad) sub mov pop orl std jnp ljmp ftst push (bad) sub movsl mov jae adc cwtl icebp inc xor out gs fisttpl push fstpt imul push mov cmp icebp jb movsb popf xor fcmovbe in gs adc pop mov popa or xor mov xor xchg mov xor inc repz inc (bad) call loopne jl outsb mov and (bad) ds iret dec in call sahf fucomip in (bad) (bad) dec add mov inc icebp xor clc fldt cmp enter lods adc or xlat std dec jge leave mov push pop stos dec repnz orl sub lods repz dec loope clc inc jae and test sub dec cmp sub out roll push mov lock icebp dec push in jae mov cmp push cwtl shrl pop jmp (bad) lret cmp jns pop jecxz inc xchg cmp outsl push std movsb xchg mov and test xor lods and mov jmp lods pop inc fbstp cwtl push or mov and xchg lahf es jecxz lcall inc xchg (bad) ds roll hlt xor sbb or adc jge pop push pop (bad) addl adc push into stc push test push loopne sbb ds cmp mov mov imul jge das insb pop pop lcall push xor push (bad) adc mov mov andl cs ror (bad) jno push leave insb sbb add dec sbb ds stos hlt rorl inc ret outsl fidivr xor push xlat xchg push mov pop and pop sub ret add jae fisubr mov push (bad) lea dec mov or dec dec cmpsl add rcrb add stos xchg sub inc in xchg xchg mov cmp mov xor fbld cmp fisub sub jg ds stos pop lahf (bad) je cmp test mov cmp in inc lods ret xchg loope add scas adc in data16 out js push stc movsl push jae stc pop mov jg xchg out aaa repnz shlb pusha jp imul cli pop inc pop pop cs sbb push sbb stos sbb test xchg pop (bad) mov sub and pop addr16 mov cld rcrb int add pop aad in ja in mov mov dec jbe adc dec push repnz push lcall mov sti movsb icebp cld mov (bad) cmp out cmpsb push roll mov dec push test pop cmp or cmp scas inc rcr and gs cmc cmc subl push xor mov inc sbb mov rorb call sub pop mov add in (bad) jge scas or out lods xor mov push dec adc and cmp int jp stos (bad) jmp xchg inc aaa mov fisubr std daa lret pop arpl sub dec divb stc (bad) cmc mov dec movsl incl mov insb adc rcll xchg mov dec sub es dec dec cs iret pop cld iret add (bad) (bad) mov push mov jp daa (bad) loopne add sbb call add jp inc xchg enter xor cmpsl and insb jo rcl and arpl mov fildll mov in sbb or lods cwtl pop jle call clc push jns pop icebp stc or or mov pop cltd dec out dec lret aam (bad) mov shl loop loope js into fsubs add adc inc inc insb test pop add in push mov ret jno pop mov mov pop jecxz mov lods pusha fnstsw je stc cld imul push push xchg jp mov and mov aam lahf sbbl dec das xchg pop rorl mov hlt sti xor daa es cmpsb mov rclb inc jb lret repnz dec cmc icebp lods xor mov push jl clc push xchg aaa mov push rolb mov xor cwtl add mov adc xor test mov int3 int and adc (bad) and sbb (bad) imulb insb mov lcall (bad) jbe movsl mov jmp mov jo out lret fs aaa adc xchg mov test xlat dec scas addl (bad) into (bad) pusha cld mov adc outsl xor sub sub je cmp mov mov and add mov test jp jecxz fwait cwtl jbe roll adc decl xorb push outsl pop inc icebp fidiv hlt jno sbb xchg fldenv or cld inc jle or cwtl mov cltd in mov jo inc push xchg cmpsb jne mov pop pop push lods lock jl pop pop nop sub mov add test push mov xchg sbb addr16 lret lahf movsl dec mov jns enter in mov jecxz push je dec add push or popa data16 lods inc popf inc pop ret cmp iret dec dec and inc inc xchg les repnz or (bad) fnstcw jge and and cmpsb es in addr16 je (bad) add js mov inc test add scas mov jb dec negb sub pop xchg push out mov (bad) ficom mov dec addb (bad) push inc into aam jb movsl add loopne cmpsl jecxz mov pop int out push daa out fistpll fcomps int3 enter mov add cmpsl add test faddp fdivs pop jne call xlat add or add pop je cli fistpl push stc dec pop mov jmp aas xchg mov mov pop out add sub pop in xor cwtl xchg rcrb leave sub shl fnstcw dec pop and xchg and xor pop jne adc cmp xor mov dec orl addl gs dec dec push and fmul movsb xchg hlt cmp int3 pop pop dec mov push mov xor push loope and into sahf mov aaa data16 cld sub fsts fsub jl dec inc inc jb jecxz imul pop cmp je pop imul dec and sub sub insb out jmp int test fldenv out ret nop dec dec (bad) lcall rcll xchg rcrl pop jnp (bad) mov sbb cmp sti (bad) dec lahf stos arpl std sub xchg mov mov sub and xchg sub rcr mov scas loope cmp mov mov stos (bad) je fsubs xchg dec cmpsb test inc dec or shlb clc and lods xlat xchg aam mov mov out mov (bad) cmpsb cmp push js frstor mov and and lods out addr16 leavew les adc jae into inc xor mov xchg jne fidiv dec inc loop lds or stos push cmpsb sub adc stos xchg sti mov fidivrl mul outsl or xchg insb add jecxz enter mov adc pusha cmp stos loope imull sbb xchg xlat outsl cmpsb test push outsb cli sbb inc inc inc stos scas rol sub pushf sar hlt ficompl int mov pop stos gs cmpsl imul pusha jge mov into loopne cmp or or and xchg mov mov lret cmc mov test mov ja or inc data16 ljmp dec stos pop mov pop and inc xchg sti xor add mov xor addr16 xor lock adc (bad) push sbb repnz call xor adc in inc ja fstps add fcoml mov sub mov (bad) sub or negb mov andl cmp in add imul movl push popa fadds xor je inc test mov inc aad jecxz xor xchg push in xchg out in and cmpsb or movl jae je xchg into lods and movsb mov cmp js pop movsl cmc les popf xchg dec std push stos mov mov clc ja mov daa js notb jns fisttp mov dec mov movsl es inc test jae pop xchg leave repnz ret lret jne mov cld aam stos xor adc dec jmp push jecxz pushf (bad) pop sbb mov pop int (bad) pop cmp jb scas je sbb mov ljmp adc or dec leave push int3 push stc pop or jbe pop or pop out outsl shlb scas dec sub out ljmp lods dec (bad) fnstcw sbb jmp sti lcall mov (bad) jno lea ret stos push sbb mov push add fldt pop or mov scas pop sub repz pop test scas pop cli sub or mov fisttpl nop ja cld and jle cmp cmp lock sub nop sub mov mov sub push stos jmp jae and dec add or pop mov test jae lret sub cmc (bad) js sbb loopne ffreep pop sub and lcall clc push popf movsl push add inc (bad) mov ljmp int3 jecxz push popf jge aam or ss add mov shrb push popa (bad) roll xchg xchg (bad) mov cmc mov inc add ret mov push cli imul data16 pop aaa xchg add mov (bad) (bad) leave mov pop push js fldenv mov mov aad daa popa dec out ds push mov jp neg cmp test arpl mov sbb lcall and das or clc push iret mov pushf jbe jns sub push pop insb in scas and imul push cld mov inc outsb fdivrs hlt test jns push push xchg rolb rcrl int mov mov aam int3 cmp mov pop xor scas aas in cmp icebp and or in fimull mov mov jbe xor bound add mov jb mov sbb sbb aad hlt xor xor sbb insl in fldcw dec imul gs lds jecxz lea pusha imul sarb subl inc cltd and push jecxz xchg mov inc or (bad) in mov f2xm1 outsb ja xchg inc out lahf fild fs cmc mull je xchg pop pop dec loopne repnz pop lret pusha fisubrl push jae adc not and lcall in jge mov popa fsubl ss outsb imul lods mov fild lret push je aad adc daa outsl ret (bad) outsb mov push mov out dec cli adc sti in add shl and es or (bad) and hlt sbb (bad) sbb fnstcw push and or outsb out aaa xchg cmpsb pusha and jb outsb and push sbb cld xchg lea cmp fisubl ret add cs ds inc mov iret mov push adc rol mov jmp and push popf mov mov mov mov xchg xlat inc dec mov xchg mov inc mov xchg push inc ja push inc bound push xchg jb or lock (bad) (bad) lea sbb push pop sbb or mov mov and in loop mov call inc pop add xchg frstor jmp and sti dec jmp mov fdivrs scas sub fnstenv jle dec lock leave mov pop cmp test mov aam mov mov test jmp mov pop lahf push mov mov int dec lcall push xchg ja adc repz stos push mov sbb mov pop adc aad jo xor adc cmp in fmull push adc sbb test mov dec xor cmpsl movsl push and outsb (bad) (bad) enter add mov daa xchg repz stos mov (bad) or lods xchg loope ds in lahf push test jo jmp xchg cmc mov lea std lcall sti jne or inc mov adc es xchg outsl cmp rolb adc xchg push mov mov cmp push ja xor mov pop gs (bad) mov xchg in cmp push daa dec dec add and sbbl inc sahf xor push fcoml pop push out mov in shrl add xchg or call iret cmp ficom (bad) mov sub insb inc mov sub pop (bad) dec ret push fwait and xor loop sti dec dec out cmp xchg xor and cmp insb and inc sti notl push inc into jne (bad) and test (bad) cli ja ret xchg xor iret insb js int3 or test ret in fistpl cli mov icebp pop inc cli setae or mov jo cld pop mov cmpsb mov xchg jl jns popa into and test sbb cmp lahf push or (bad) pop mov or scas push scas scas sub js push arpl (bad) mov scas mov bound xor ds adc popf pop jmp mov (bad) mov cs lods xchg sahf push pop loop inc jl into ffree fsts push dec movsb push stos mov fs cltd cmp adc mov inc imul pop lods or mov movsl dec add aam mov and outsb jbe ja imul jle stos pop insl pop (bad) mov cwtl cmp idivb divl push jae pusha xchg lods adc aaa rclb mov popf pop xchg inc (bad) or fwait sub andl fscale cwtl out iret inc xchg stos cmpsl jg mov fs lahf sbb adc push jmp ja,pn aam mov cwtl stos dec xchg (bad) xchg or movsb xor scas and fiadd xor jmp movsb mov mov cmp cmp jae inc ficompl pop dec push sbb icebp ret mov mov sbb mov fs cli (bad) aas jmp or cltd (bad) jmp dec in adc cwtl es add sbb jecxz cmc aam xchg in out mov xchg ret rep jp loope clc clc xor ret fidivl insb pop fidivl mov jg loop mov stos add pop repnz (bad) jno out ret add mov fsubrl data16 ljmp ret fs enter push lds mov xchg repz dec stos and lcall dec rorl popf aam xor icebp mov dec jmp add xchg or cmp jae mov sbb cmp jb mov (bad) dec adc dec das sbb addl mov ds addr16 lods dec mov js out cwtl je xchg jl inc shlb xchg test gs mov jne sbb sahf mov leave ror test or das push sbb mov aad bound xchg mov mov test sti insl add jmp push sti hlt jp sti call popf cmp shll pop and cmp inc adc data16 inc mov mov adc mov inc lcall push lret and cmp cmc dec push mov mov in int pop cltd and or push movsl pop in cmc ret out (bad) cmp pop mov cmp push repz mov and out (bad) dec mov xchg (bad) fstpt iret mov (bad) jg lcall ret std mov jmp mov lods imul cmpsb push into movsl je ret inc jmp stos lret sub nop and leave adc repnz movsb sbb sbb lea mov and jns sub fsubr movsb popa dec or rcll add frstor xor jecxz test add imul daa fldt cli and dec andl addr16 push lea test orl vmovups addl ja aas dec mov push inc mov dec lods pop pop dec jbe fs out imul movsb lds cmp mov push shrl push xchg scas cs mov mov das push lock xor movsl iret mov out test (bad) xchg jno push push mov scas sahf scas fbld sub push fwait test mov pop (bad) or sub sbb sub adc das rolb cmp cld insb mov push jae packsswb mov mov cltd push (bad) outsl movsl sub pop push or (bad) jns das outsb loopne mov mov jl sbb sbb sub outsb aaa pop insl adc test (bad) cmp ss xor xor (bad) cwtl icebp cmp rcll icebp or xor push xchg scas addl packssdw fbstp pushf and cmp xor mov in sub dec inc mov fs push or adc mov sub lock mov push mov or sti std xchg out ret cli xorl xchg imulb push push lods (bad) push jo fsubrs mov scas cmp or lock add std and inc sbb popa ds xchg sub push cmp repz dec fisubr shlb (bad) fstpl negb inc ljmp adcl aaa cmpsl ret adc xchg sbb sbb sbb (bad) adc (bad) outsl out sbb sbb repnz (bad) out out cmp inc inc or mov xor push sub cmp in xchg imul push lret out add stos add shll xchg xor inc mov test pop movsl sbb hlt push adc jbe in cmpsb pop pop cmp push lods dec lods push sahf (bad) negb fisubr icebp or movsl insb cmp xorl or sub mov push mov addb lods fsts xchg dec out aad lds jbe test cwtl call jp pop nop sub push mov je dec dec push pop dec mov movsl mov addr16 ficomp and mov xor decl push jnp ljmp popl imul mov mov mov fldl xchg ja xorl push loop rorl lods (bad) nop int mov or jne lea div sbb test (bad) adc or sbb xlat lahf mov test sub sbb addr16 in and mov cmc xchg repz rorb jmp outsb xor out out add shll add inc iret inc jne mul in mov (bad) mov pop call push add jge (bad) fisttp sub test jecxz or lret mov cmp mov or fisubl sub inc mov mov jge data16 sub jnp,pn mov int3 mov scas movl adc and add adc cltd xchg fstl inc dec jmp ljmp out add or int3 aaa push je push cli jg,pn pop or out pop out push or cld or dec aas int in xor in ret add ret stos xchg mov pusha popa pop push test inc pusha and pop fistpll jl push repnz mov dec sbb nop mov add int jecxz aad pop mov cld jnp cmc jge subl arpl add xorl add outsb sbb push ss imul mov mov dec and inc mov aas fisubr lahf outsb loop jl ret mov lods pushf loopne mov stos jmp mov xchg sahf dec clc les jb enter (bad) (bad) aad cltd arpl mov test loop pop dec roll jno xor (bad) mov (bad) jno into int3 pop cmc jge mov hlt loopne push insb (bad) cltd call adc sbb jne rol daa dec aaa insb xchg (bad) clc loope xchg jecxz stos push dec iret jbe rorb popa jne dec pop enter and fsubrs jns mov test adc arpl pop cld (bad) fmull incl sub divb hlt adc out jo mov adc inc fildl and add stos das xchg movsb pop sbb xchg stos push inc mov pop xchg and movsb stc and mov fbstp pop ret cmc add jg sarb xchg adc out adc pop cmp xchg jg aam icebp sub imul and inc scas xor mov mov mov popa repnz pop imul fdivl hlt push (bad) mov out and outsb pop aad xor or jg pop sti jno sbb xchg cmp xchg pop test mov iret pop (bad) mov mov jmp xchg movb inc xchg dec addr16 mov cltd pop std sub (bad) sar mov (bad) xor xchg mov divl aas stos mov test out dec mov les fistl in sahf (bad) jne lahf push xchg jno stos fsts mov push mov or scas pop or pushf rclb in push out dec sbb cmp jle lock cmp pusha je insb int3 xlat mov xchg cmp xchg xor xchg push mov xor lahf js mov test mov fscale aas mov add cmpsb add mov pop dec xor ficomp ret or pushf pop dec jp (bad) sub mov push cmp xor iret adc mov ljmp dec outsb popf pop sbb jl dec insb int cmp dec rclb shll push jb push out outsl pop ss std insb pop data16 in lret add js xchg jb push cld aam sbb add ret inc cmp push repz (bad) pop lahf ljmp maxps enter movb into cmpsl jge jae rorl iret (bad) rclb in mov test jbe sbb dec stc pop das xchg incb add pop xor mov arpl (bad) push out pop jne popa rorb sbb sets fwait js mov loopne push daa push jbe sub cmp les xchg sti rorb orb and adc popa xor je xchg push arpl (bad) inc arpl pop or and lea cwtl je jmp and xor push lahf mov scas mov mov fidivl fimull clc xchg inc adc push push mov pop lcall cmp push arpl sub pop mov rorb fstpl addl xchg jg cmp pusha sahf ja xor jg dec sbb je test lahf sahf sub leave lods test jae mov mov sbb push xchg sti xchg jb xchg pusha pushf sub fwait pop mov push iret insl out lahf aad ds pusha popa in mov or add cli je ds push out (bad) clc jge adc lcall mov jo sub shr xor mov mov cmc inc mov lret xchg pop bound push ds ffreep out (bad) lret mov lock (bad) popf inc imul loopne hlt pusha out int mov pop cmp imul repnz jae call in dec aam push rclb in (bad) sbb lret insl movsl cmp push xchg and mov mov cmpsl test jmp jecxz daa jb,pn push lret rolb fldenv frstpm(287 cmp push jae std mov inc sarl xor pop stc sbb xchg fisttpll jnp fwait (bad) shrl mov jno pop cmp pop out fcoml mov sbb xchg sub jge jg mov cld pop pop leave pop hlt mov int cmc mov sub shl mov lret jg pop call mov mov or test sbb jo push mov adc dec mov pop sbb fwait scas cmp xchg pop adc jb dec mov xor (bad) popf dec stc in div mov int3 fldt out es xchg inc jmp push sahf inc add popa dec cmp clc imul scas sbb jne shr sub in ret ret pop mov mov inc and dec insb test adc push scas out push add pop (bad) or fwait xchg imull push mov mov in xchg dec cmc mov js lock xchg sbbl mov loopne (bad) sub push push bound add cwtl sbb aam lret cld adc aad arpl in adc loop and stos lea aad pop or jno aam push jecxz cmpsl lret std pop dec lds cmc or xchg sbb xorb push xor pop or xor inc sbb lods rclb je jle icebp jp inc (bad) lea adc enterw movsb lock std cmc loope (bad) xchg pop push scas xchg sub mov je adc pop xchg mov insl loope test cmpl mov xor jnp scas jbe imul mov xor decb pop out scas mov addr16 insl mov fldcw mov xchg rorb fimull (bad) jl xorl (bad) loop push call in out cltd sub je cmp shlb enter xor out outsl into ds int3 lret mov (bad) cli mov inc jnp inc dec dec cmp mov push xor ret pop dec or clc sub pop in leave (bad) outsb orl in std pop xchg mov sbb adc insb ja in xchg out cmp pusha daa jmp pop in xor push int3 lret pop pushf aam fidivr add test adc and inc mov jp inc mov insb mov jb out xchg and mov pop cmp ljmp and mov jecxz gs dec xchg loopne push jb sub decb mov out jne cmp mov pop addr16 leave inc das nop fmuls popf in sub (bad) jnp jmp (bad) xlat dec push cwtl dec int (bad) stc fmull (bad) push scas (bad) jecxz xchg add imul xchg (bad) fcmovu mov xchg test decl out jecxz xor mov inc cmpsb xchg fcoms sub xchg push mov cs mov mov sbb stos mov jg (bad) inc mov cltd cmpsl aas ficoml adc mov lods push mov orb aam pop mov xchg xchg test pop jno sbb mov (bad) push xor cltd popf testl xchg dec fisttp inc mov inc cld add mov lds fdivl popf mov lock enter and pop cltd dec add sbb in or or lret push dec test mov jb dec sar sub pop lds mov mov (bad) and cmpsb sti arpl scas jo jns aam lds mov mov xor cltd jnp push ret (bad) ja and aad fstp mov std je cmpsb pop or loop mov mov ret out cli (bad) xor lret das sar imul addb jno jg mov jbe lahf pop jp push test test sbb into dec popf sbb inc cld cmc jbe jg aad dec jmp jo ja loopne roll xor lock sbb fimull cmp push ljmp in add add fisubl das push mov mov out add pop xor test push out mov stos in adc inc or pushf lahf prefetch vpsubq lahf fidivrl addl aas cmp xchg jb xchg xchg cmp inc repnz xchg mov jb lods (bad) aad cmp mov lock out stos sbb inc cs pop xchg jno rorb pusha negl jns or and fs aad fwait movsb aaa (bad) mov fadds iret inc push test jb rcl jne mov jp int lcall jle cmc mov sti stos mov mov fimull xor or cmpsl sub loope test shll test xchg (bad) fistpl add ljmp jl sbb lcall xchg ja out pop or (bad) repnz icebp cmp jmp ljmp cmp ljmp in out mov dec mov lea adc push cltd or insl and sub sub bound ds jmp mov dec in sub out inc cmp lret test ljmp ja ret mov ficoml jg jae lahf ljmp insb pop or js sub shlb mov das cwtl mov movsl mov push rcrl and pop aas mov jne mov leave mul mov jg xchg jne out mov cwtl or cwtl daa cmpsl sub push mov fisttpll dec push movsl jbe mov mov je lods cmp pop mov int3 mov mov dec cltd and imull aaa fstl pop inc xlat (bad) incb test in cmp cmc xor test jbe mov mov add push mov fcom je mov rclb or jp adc leave inc xchg sbb insl pop mov test mov out idiv dec rcrl data16 adc mov (bad) push adc mov dec mov mov xchg (bad) pushf push ljmp dec push pop cmp sub dec loopne pop mulps sahf int3 arpl and je sbb ja imul fcompl sbb inc mov movsb mov cmp xor cld add movl xchg sbb roll aam bound mov xor or jb and jbe in and push loop xchg inc mov add mov (bad) out inc lret in pop (bad) js cmp pavgw pusha fbld mov and loop jno push mov stos nop fcomip add push popf lret mov clc inc lret mov xor dec fwait (bad) xchg cmp push mov idivb repnz jle jne dec nop int dec pop roll (bad) pop xchg pop scas mov arpl cmp fidivl jb (bad) adc mov aam sub xor push pop fsubr das mov push dec xchg sbb int3 sahf mov push xchg decb cmp add inc (bad) stc sbb adc ret mov add push jb popa les and mov xchg sti fstl inc adc inc cmp movsb mov es dec inc test push out inc xchg xlat je aam jge addb sahf cmp js out adc mov adc dec dec loopne cmp in leave stc push mov lcall lahf mov xchg mov jmp adc int or cltd pop xor rcl std mov aas in movsl aas outsb mov pop mov in dec data16 xlat xor jbe push pop sarl cmpl scas shrl pop cltd loopne dec xchg test xor mov mov sbb enter fs call nop popa movswl xchg subl arpl rcl mov out lahf adc add inc cld jecxz mov mov js (bad) cmp dec (bad) dec pop ljmp imul stos inc push jne inc mov xor mov mov xor imul es xchg (bad) lods lcall pop (bad) lods scas xchg repnz pop push (bad) mov push inc enter aas fistl xor xor inc sub and adc fldenv mov pop and enter or incl sbb inc mov gs cmp outsb bound pop mov jmp xchg insl adc scas rolb fcmove mov sub nop jp inc shrl and pop cmp sbb jo inc dec mov fdivl pop les cmp cli (bad) push frstor inc inc lods aad jg xchg mov or jl adc aas (bad) push pop mov xchg sub or imul and push inc mul loope sub adc push imul in (bad) aaa popa enter adc es out sbb and stos or cmpsb pop and in cmp das out pop mov push (bad) ja es (bad) hlt (bad) (bad) jo cmp adc pop fs mov or sbb lahf mov push sub loope adc in je mov icebp pop dec and mov and jnp es data16 pop insb test imul gs adc jae add inc push jae and cld xchg xchg mov pop iret jb adc mov imul scas and imulb enter outsb push gs icebp inc push cmp mov je (bad) cld insl adc inc xchg push fwait push in xor add add xchg xor sbb or lea icebp cltd adc xchg pop sbb inc imul add inc mov mov cwtl pop lcall sbb call add loope sbb pushf aas stos std popa xchg mov cmp sub xchg jmp and inc push gs fnsave movsb lahf xor cmp aad (bad) mov cmp mov aam fdivr inc mov addl mov mov add push cmpsl xchg mov pop xor mov jecxz jnp sub pop mov pop (bad) negl lret jne fldenv push gs into dec adc mov out lods push lock push and sbb ss xorl ret popf xchg fstl mov fnstcw xor push jl loop pushf sbb lods je sub inc out outsl in movsl in push pop sbb loopne hlt scas into mov dec mov icebp enter data16 ret loopne test clc jb xchg es push std aam sub mov push mov sbb mul jne stos mov fldcw stc jle xlat and out in cltd jecxz arpl ret and repz inc mov lock or (bad) sub movl dec lahf daa push imul inc icebp icebp jle cmp mov (bad) jb ret adc test movl jp pop xor sub mov loop hlt lock gs dec sub lods out fwait lahf cmpsb pop data16 push jb xchg and repz mov addr16 ljmpw aad inc inc push jmp or fs xor inc pop sbb jb iret test out gs sub add inc (bad) clc or stc sbb mov jle mov cmc int3 pop repz loope mov es out insb fcomps pop push mov fmuls adc mov mov lcall push fwait mov outsb mov push ss rcl ja inc sbb push sti xchg sub xchg ret jae push inc push scas lret mov cmpl push (bad) lock dec or jno cld adc cltd dec sub ret (bad) jne cmc mov mov iret mov in mov decl mov aas pop sub stos aad imul adc repnz popa cmc dec mov xor adc testb and xorl out xchg inc mov in pop movsl lds bound push sbb jno repnz (bad) icebp xchg repz pop lcall ds out or adc dec cmp push or popa push (bad) aad rclb iret cmp inc subb adcl cmovs les or in addr16 andl jnp aas (bad) std inc pop out aaa daa out popa jl xchg mov daa cmp mov je adc bnd lock add pushf (bad) xor mov push rcrl cmpsl daa cmpsl cmp cs pop jne adc jmp push mov inc adc cmp aaa cwtl adc inc (bad) mov cmp mov imulb xor xchg adc jnp cli in sub and push push adc adc dec dec dec cld lret add jl xchg daa adcl sbb dec (bad) ss das mov dec repz cld out jl jo adc inc imul mov sbb jg cltd pop xchg xchg mov dec mov lret mov mov mov pop jl or in lock inc mov lock lret mov stos sbb jne or daa je (bad) (bad) fnstsw les sbb (bad) jmp stc test rclb popf xor mov aad out out sbb push mov fucomip cltd ja mov xchg pop arpl xchg dec push add inc pop jns addb jl jle cmp xchg add mov pop mov push add sub int cmpsl mov in jns cmp cmpsl dec ds sub (bad) in mov jne aad mov xchg and mov testl push dec xlat jnp mov aaa sub sbb jl xchg push leave movsb push les in loop push xor outsl data16 xchg (bad) out mov fdivl sar sbb mov cmp lcall mov or es lret sar out mov adc mov cmpsl add idiv push stos xchg insl shlb out mov xchg dec cltd push cmp les inc add mov mov imul add bound mov push mov inc fist test hlt decb inc int3 pop mov mov lret fisttpl mov das int3 and mov iret fidivrl (bad) scas mov ljmp mov cmp mov test push mov pop (bad) addr16 lods cmp fisubr fistl inc inc inc xlat xor out sub int3 fildl ljmp adc xor mov lret inc fwait jnp sub popa out gs mov dec (bad) shlb adc test mov mov (bad) mov das iret iret sahf lret test xchg es loope xchg pop outsl mov jg and sbb add loop cmc test andl cwtl pushf negb (bad) ja xchg add mov fildll test sub ror (bad) jb scas loopne push push cwtl les sahf inc jns xor scas add aaa fildll sub popa stos out inc or or xlat cmc push mov xlat mov stos loop pop mov pop mov ficoml or jecxz dec fwait pop int pusha inc inc push push mov rolb pushf test fwait out add xchg push nop mov loopne into push add imul mov dec and aam sbb bound hlt xchg lret (bad) sbb test xchg mov sbb imul mov movsl repnz inc or xchg lret stc lods push stc lea pop push pop test popf int3 sub (bad) mov xchg es inc sub cmp jns push cmp mov jge pop es cmp push ret jo pushf fcoms sbbb cltd adc mov inc jg sub loopne in js sbb add push add stc int3 add loop mov cmovg push pop daa in push xor pop or xchg out fist or fcomps mov sbb or aaa sahf fisubrl xchg sti pop jb sti jbe pop fnop call mov pop fisubr data16 sub mov cmc mov fidivr mov arpl mov icebp sahf or idivl lds inc push test iret jb inc (bad) into xchg lret sbb scas xor mov shrl lcall (bad) movl push in int pop subl or sbb iret data16 mov xor jbe xchg flds inc leave add dec fs mov (bad) pop pop fadds cli js xchg push hlt movsb mov insl cmp shrb ljmp (bad) jno popf ret les icebp jbe cmp hlt inc or inc jbe stos sbb lods cmp inc cmp lock mov (bad) outsb rcll xlat pop jo cwtl shll sbb pop mov aaa push xchg add dec pop insl push lcall lret outsl push mov loopne (bad) jae mov and outsb push jbe dec jle or pop icebp mov pushf addr16 dec mov sub rorb mov sahf pop into inc test mov div aaa ret and mov lcall fs test or (bad) xor sub out mov clc push sti mov test push rolb adc insb cmc pusha mov (bad) fidivr out inc sbb sbb (bad) das popa or nop lret fidivrl xchg je hlt push add frstor out in enter jmp loope xchg or fdivs xor stos jmp and fcompl sbb fsubl dec faddl push mov iret jbe imul ljmp shrl repz lret or icebp or movsb addl pop xchg pop loop jno push jge sti nop fldcw call add or repnz fcmovbe pop jle inc iret xchg scas cs test (bad) cmp cltd rclb or test (bad) mov or sahf call mov mov or xchg push add push sbbl mov adc sub xor fdivs insb push inc lock loope cmp lock mov shrb out push adc icebp out cmpsl (bad) in aaa xchg in mov xchg out cmp mov dec aas push fcmovne dec popf adc sbb inc lods or mov and ljmp xlat mov cmpsl (bad) repnz (bad) mov dec push cmp jbe pop xchg inc pushl into into mov lea mov addr16 cmpsl cmp jae pop jge xor dec adc aam sub in and outsl sbb mov mov mov sbb jbe inc repnz xchg (bad) pop jo sub inc jns in lcall xchg jecxz mov inc scas daa movsb xchg and es dec xchg mov ret popf mov push pop and test xor insl aas lcall or mov pop outsl insb orb inc sbb mov fs int3 daa xchg push pop scas jg push cmp fadds repnz inc xchg loop mov xchg popa mov fiaddl rclb sub mov call dec nop inc iret add push out clc scas mov cmp lret add push out insl push or aaa ljmp pop push mov ficom aas xlat dec pop inc and mov insb in popf sbb mov pop mov inc adc inc push jle mov cmp push cmp icebp sbb gs or jbe dec push jge push cli pop inc test mov and (bad) xchg cmpsl out fwait andl and int3 inc pop dec add out lret (bad) xor (bad) data16 stc push mov or adc or mov bound inc jae decb das or ror add test and push pop lods lods inc mov cmp ss sub or iret dec jns fdivr out adc test fucom mov in std int (bad) (bad) jp pop cltd sbb sub xchg push dec inc xchg clc clc jae pop pop sub popf jae in into or shrl xchg sbb sbb xchg push and out aaa cmpsb mov mov mov out dec shr mov sub repnz outsb enter or jo je out cmp scas lods fbstp adc mov mov mov cld fidivl popa rclb aad xlat stos mov xchg jnp popa (bad) lcall (bad) call loopne cld (bad) pop test into outsb clc sub stos rcl ja call lds xchg (bad) scas cmpsl sbb nop addl es or scas pop xchg add xchg daa adc inc insl cmp push into xchg fcomi fstpt add adc pop insb aaa pop push mov jp push add add mov fs lds outsb aas mov in js mov cwtl outsb mov mov dec inc (bad) sub add mov xchg add loop pop jb mov iret neg xchg mull (bad) or fsubrl imul nop (bad) stos fldt shll mov sub lods sti clc xchg ljmp stc test fcomps int cmp jns mov pop cmp cwtl dec lret pop mov fcoml and and lods subl stos (bad) fsts mov frstor push bound jecxz sahf cmp or cmp cmp scas shrb int pop lea sarl iret in loop mov mov push mov push inc inc jne push push mov sub (bad) aaa jo push sub cmp testl decb xchg jg ja or mov cmp mov sbb jle xor cltd negl lret xchg push push lahf xor pushf sahf cmp fiaddl sti xor in mov (bad) repz jecxz es dec cltd mov cmpl sbb jecxz mov shrb mov (bad) test or cmp push mov (bad) loope xchg rcrl aaa ljmp push mov mov push je fcompl les inc imul movsb adc cmp xor stc dec rclb fidivr shlb cmp push mov jns xchg mov xchg (bad) jp jne sub dec (bad) in add repz call and jl inc sub data16 pop pop inc sahf jbe or dec pop fildl jle cwtl xchg repz xchg mov sbb jg adc inc xor cmp or (bad) shll popf mov cmp (bad) xor nop push or push popf ret inc xorb adc xchg jg clc mov cld in into daa je enter ror negb push mov fdivp push xchg cmc rolb mov outsl pop iret inc sub sub test dec fsubrl sti add punpckldq xchg out (bad) or sub mov jp adc test pop mov movsl out aad dec inc in cmp fistpl lret repz sub iret cmp pop mov inc test adc scas es adc into or xchg popf stc cmc loop and or into idiv outsb cmp or adc mov cld ljmp jp fwait outsb or cmpsl js pushf push das iret xor or stc push push adc data16 mov gs xor (bad) cld mov stos inc movsl cmp ret mov test pop push gs cli negb fisubl enter add pop (bad) push mov cmp and call pop gs scas cld jmp adc (bad) jbe pop xor sti push loopne pop inc inc cltd mov cmp and jge pop outsb jae (bad) mulb icebp pop in lret test and pusha inc sbb sbb ss xor dec lret fwait push cmc xor hlt cmp add mov and out outsl aas or inc je shr and stc aad jb mov add sbb xchg or cli jmp aad lods stos sbb clc mov aaa mov jl fsqrt rolb mov lods movsl jo test roll out push negb lods mov mov iret jmp push adc push (bad) pop bound push dec js (bad) mov out push in ljmp rorl mov mov adc mov or test ss popa loopne sbbl (bad) jb pop mov cld xchg ja xchg (bad) mov push lret xchg dec push inc imul fadd fs add ret bswap out xchg ds sub aas mov sub fwait ret mov jecxz es sub shrl and jp popa sahf rcrl mov xor cld adc jmp inc (bad) pop jb pop test sti and js data16 call cmp inc fsqrt adcb sub int fcoms cmpsb (bad) inc negb in movsl cmovl fnstenv es cmpsl jo jns inc mov (bad) sbb gs adc sub movsl out jnp xor test ret sub stos nop lea mov pop fisttpll xor out loopne pop dec pushf mov in lds cmpsl sub sbb outsb ret lods test js xor out fsubrl xchg daa icebp pop iret push dec jp push cs fisttpl pushf mov add xchg mov mov cmp xchg jnp jbe dec mov sahf (bad) mov mov fnstcw pop sub in dec (bad) (bad) test cli (bad) jmp inc fadds test loopne fcoms into cli gs mov cs dec mov xor mov pop icebp pusha mov pop mov and mov push mov jl int3 or inc cltd mov mov scas jo adc (bad) xor clc popa jecxz push (bad) out jae push fwait cmpb pop lock stos xlat or dec scas add rol push daa cltd mov adc cmp (bad) push orl out mov inc (bad) (bad) pop out mov (bad) lcall push stos not pop jne mov lods js xchg fimull push cmp addps rolb cld push jnp cmp pop sbb loopne push iret andl fiadd and inc fs sbb (bad) xor and add add dec sbb fld (bad) fs iret sbb xlat pop xchg mulb or cmpsl scas and in icebp push (bad) addr16 aam sbb xchg loope mov xor mov hlt sahf and lods inc dec (bad) jmp mov out xor addr16 jnp das movsb cmc cmp adc jb std jbe lea popa push inc xchg in aad rcll dec mov push lds in outsl int cmp daa dec insl adc xchg rclb out stc in addl xor es sbb mov pop inc mov xchg push xor jno jge and push inc call lods mov jg sub icebp out add imul or adc and seta in shlb push out jo inc xor mov andb sub iret les push gs cmpsb aaa pop mov xchg push scas mov test gs mov ja daa movsl aaa clc (bad) mov jl imul loop aaa mov mov cld jmp and adc jnp xor pop (bad) push in adc jo mov repnz push cmpsb sub fwait cmp mov jle add push fucom les cmp loopne cld sbb mov ror mov push mov mov or inc jb adc jmp cwtl or or stos fisubr daa or sbb decl mov sub xor lahf jns mov mov jecxz aad loopne imul les daa aaa mov sbb mov jns aad ljmp lcall mov mov inc jmp (bad) xchg loop rcrb add js pushf xor dec movsl xchg (bad) xor call repnz dec push dec mov ds cmpsb out adc nop into out stos xor stos mov xchg xchg cmpsb push push push dec (bad) sbb loopne into scas pop mov dec rep test repz adc sbbl pop imul aas cmp xchg pop lcall sub repz pop cs insl aas push xchg fdivs daa and pop jnp imul mov rcrb add call add or fnsave cwtl dec pop jne push mov (bad) or and or mov clc int push push pop sub mov into mov pop iret xchg mov bound clc jno xchg (bad) int3 rcll add (bad) cmp popf scas jno mov mov or pushf jns xchg cmp lea jnp adc nop lods jge arpl or pop in xor sbb das mov sbb pop lret into mov inc in or lcall in cmp add sbb push dec loop pop stc jge daa sti (bad) jae lds mov pop sbb mov sbb mov jns aad mov scas mov fistpll pop clc sub loopne pop out dec adc dec xchg js mov adc out hlt (bad) lahf and (bad) push cmp ss or imul inc adc jmp mov test dec inc jge sahf dec lods jnp sub mov add mov push push shr loop roll cmp inc pop dec mov cli scas cmp lock loop clc cmpsl lods push mov sbbl fcomps inc dec dec lds cmc dec sub aad ret and into add (bad) dec pop enter xchg lcall fwait out inc xor jbe lods dec add push xor and rcrl pop cmp iret xor arpl das xor arpl mov rorb outsl in xchg sbb enter add fwait sbb mov push fcoms dec call (bad) loope pop adc xor in jno jns roll dec mov rcll xchg mov insb sub mov push jbe sub and sbb lret sub inc dec mov xchg inc ljmp repz inc sbb mov adc inc test push or inc icebp push or mov fcmovb lods pop cmp dec fwait ret icebp out inc js mov add std or scas dec pop mov ja xor (bad) mov dec lods rcrb mov jge rol mov xchg sub pushf mov dec lahf sub pop sbb pop outsl pop or jecxz (bad) mov push hlt cmpsl lods ds fisubrl xchg push lods push pusha enter xor push sub or icebp sbb pop mov mov faddp push mov enter pushw inc jbe test xchg mov test mov push cmc (bad) (bad) repnz aam adc jbe push xchg or xchg ficomp je sbbb rolb dec push (bad) mov je and shrb bound push js add jns jno sub movsb lods fisttpll mov call imul shrl pop pop push mov test jge fwait mov push inc cli adc lret lcall sub outsl mov imul in push je add mov xchg inc pop cmpsb testb fisubr scas rol loope jmp ficom push mov jmp fisubl pop daa hlt les jl popf fisubr sar aas push mov cmp popw pop pop push jnp movsb xor fistpl xorl inc and sub icebp ss imul sbb mov push jno cld sahf and sbb shl pop aas mov outsl cmp iret rcrb test mov add jle pop repnz add cld mov add cmp gs sub jae out fs push (bad) or mov out adc sarb jne ljmp and ja mov adc push arpl add cmc stos cmp add sbb mov mov adc mov or adc pop into cmp mov inc mov pop test xlat xchg insb xchg nop adc mov jg adc jg and dec pop push divl sub dec popf cmp or pop xor xorl movsl jg sub ret push mov (bad) or (bad) mov flds aad fldl xlat sbb arpl dec pop es (bad) fnstsw aam cmp int3 dec cmp sub jle mov sahf sub lds cmp (bad) push shlb ret cmp (bad) fst out cli fldcw push mov adc test adc push negl adc mov xchg cmp (bad) dec fnstenv je push (bad) or ja dec icebp pop jbe mov mov addr16 bound loope shlb jnp lea in xor xor scas aas out stc jecxz clc cmc add insl mov orb add push into dec test mov fildll fnsave sbb nopl imul dec and (bad) jae push dec jnp jp push inc in loope (bad) ja mov and and sbb inc pop jae adc and push jl mov xchg repnz sbb push iretw mov out jp loopne push mov icebp sbb loope dec jb lods out outsb mov lods imul jmp out mov leave lret ret adc xor rolb mov movsl lret cmp scas pop inc in fldl fldcw out cmp xor es pop cmp (bad) cwtl movsb popf inc adc nop sub mov nop xchg call mov jne,pt bound cmpl ja arpl push xor inc pop mov rdpmc jge pop inc lahf test sar sub xchg mov sbb inc out inc or test je jle icebp sub inc xchg aaa xorl cs jb xchg mull cmp addr16 xchg rclb idiv pusha movsb test mov push lcall push test and or les test shrl addr16 in xchg decl pop mov push sub dec enter or mov sub cmp xchg js popa clc jge sti jno jmp cltd imul mov in testl das adc adc out test scas push or and mov adc pop clc clc stc aaa jmp mov xor sbb adc gs std lret sbbl aam aam in bound jge pop inc dec cmpsb lods fwait rcll push pop add jno mov mov bound xchg hlt (bad) lea adc int xchg int3 sbb cmc mov fs movsb push scas clc stc stc mov negb sub mov jecxz ja aas lret aad and repz cli in out aaa fsubs icebp sub subps shr movsb ret cltd dec stos mov cmc push lahf lahf hlt sbb je (bad) insb fsubrs outsl cmp outsb mov repz or mov sahf loopne sbb lds sub jnp subl or jns pop jmp or stos (bad) sti jge int xor outsl (bad) jo inc add or pop in inc jo mov stc or or cmpsb sbb and push mov inc cmp inc cmpsl cmp js jge,pt mov leave sbb cmpb gs jle or add fisttp sbb inc dec fmulp mov pop push mov dec adc (bad) lods insl imul fs xchg sub sbb pop jbe add cpuid push lock adc lea lahf (bad) adc dec inc ja fcompl mov mov mov out sub xlat lahf loopne repnz lds dec test cwtl lea gs jp jmp cli pop in mov cmp out mov popf test push add das xchg xchg jns mov lods decl rolb pop push adc jmp fcmovbe rcl nop and out ljmp xchg jo lods xchg ret int3 jne fcoms sub mov enter adc lods daa xchg jl jmp loop sub fwait xor cmp out sbb mov out fldt add pop pop sub mov nop pop and int3 scas xor mov jge and aam pop jo lahf mov mov xor adc add (bad) jg shrb jecxz push mov setno nop stos bound lock (bad) jge mov pop repnz fnstsw and pop inc inc mov and xor or add mov mov push repz ret xor iret mov out push dec repnz popa sub paddsb imul daa push fsub xchg movsb and outsb mov int3 lods mov fbld orb mov test out movsl sbb in adc aaa xchg push mov fstps cmpsb aas (bad) sahf xchg cmpsb jnp lahf call outsl inc adc cld std lret insl cmp popa enter outsl aaa mov test pop data16 sbb dec scas mov xor ret out inc ret inc cmc push adc addb test (bad) (bad) lea in bound mov stos test mov ret js aaa scas fcompl fisttp gs sub and or dec pusha out cmp add jg (bad) xchg jecxz dec mov mov push sbb pop add insb mov mov push xorl ret aaa aam dec pop aaa mov cmc fistl leave xorl adc jb or cmc mov stos mov cld stc insb jp (bad) mov ljmp jbe ficompl cmp out add fnop jl inc sub mov jb in add std cltd (bad) mov jg hlt adc mov (bad) xlat cmp xchg push mov or frstor mov cmp fild and xchg dec inc aas inc popa mov out cmpsb xor pop test ljmp and jp fs je pop sub stc jge fs inc arpl add dec mov lods sub mov fldl pop xor mov dec jb pop lods lret add inc pop sbb pop mov dec out xchg imul sbb or push aas das inc sbb aas pop cmp cmpsl dec xchg mov and push (bad) std or int xchg pop lods (bad) scas sbb iret out xlat scas lods movsl mov push data16 xchg mov je jnp jl cmp mov fs sahf jecxz cltd sub sub push push jnp lea add lods (bad) pop int3 fisubrl xor jbe sbb or push jl mov in mov es aaa jle push leave pop dec fdivrp pop inc inc sub in (bad) adc mov ret repz add stc push pop push jns nop sbb mov dec mov xor pop lods xchg xor fimull int leave loope sbb mov xor test mov cmp iret inc dec add jle pop xor dec jecxz xchg adc test and insl lcall jnp xor (bad) push jge sub mov cltd je add or hlt pop stc nop lock mov xchg cmp or scas inc lods and adc je mov pop mov xor mov pop inc jl ret das sub std jle add in insl jae sti mov psrlq sub imul sub add sbbl xchg xchg add loope mov mov ja mov (bad) les xor cli std xor dec mov addr16 xchg sahf into sti je cmp fs sub das out push paddw xchg lret cltd cmp scas cmp pop stos lahf mov dec jmp mov insl (bad) push mov sub or fmull jno or add push test outsb xchg jb lock test aas test pop and push mov cmpsl (bad) aam jle dec out lcall xlat sub mov movsl lea or jae in jmp jp mov mov (bad) or dec mul icebp add xchg shl mov xor fcoms push movsl lea and lret stos cltd pop inc orl iret shlb xchg inc push js dec mov mov (bad) stc aad xchg or movsl sub add (bad) mov nop negb mov iret pop fwait pop jne out inc mov xor cmpsl lret loopne iret (bad) rcll adc outsl mov (bad) cmp pop stos mov push xchg inc mov mov pop pusha and leave mov or test insl rol and mov xor clc cmc sbb or shrl mov add insb sbb aam inc sar loope mov push insb aad inc sbb daa mov in insb aad push mov and repz imul insl sub sbb xchg std mov pop mov inc (bad) rcl pop test loopne pop je mov push addr16 outsl mov xor or in enter push shlb or insb or lahf dec cwtl mov jp dec jb fbld cmp mov inc je mov in and sub stc (bad) jbe psrld jle fcmovb out pop and push inc inc xchg negl int3 popa aaa and dec (bad) in inc jl (bad) jo pop sbb mov pusha mov (bad) movsb icebp adcl and cmp test xor jge xor jb sub je loop cmc mov ljmp adc inc dec sub cld xchg jle pop pop jle and cmp inc xchg mov cmpsl lret cmpsl sbb mov xchg mov inc add int3 sahf out jns out fimull dec stc mov mov incb inc dec cmp ja,pn scas pop pusha adc xchg fmull jnp add pop pop dec sbb ret test jl jnp mov sub jg movsb movsl arpl jne jnp jp jb or repnz stos mov push decl push sbb pop repz pop mov xor pop xrelease (bad) dec xchg cmp mov outsl cmp (bad) stc push sti inc pop jg inc xchg mov scas das sahf lret mov inc mull notb xchg sub scas (bad) pop repz xor mov xor es sub push and out sbb inc pop (bad) mov jno dec pop scas or lea pop sbb fidivl (bad) xchg cltd push pop or sbb inc xchg movsb jmp jno loope out ret jae stos sti jo sub jo pop daa pop cmpsb push xchg ljmp mov push ja push jne loop inc xor stc xchg and mov xchg push ds stos xor adc add loop mov scas movswl push mov ja jno adc clc fwait mov bound xlat sub test sar call rorb (bad) xor mov cmp pop ret pop xchg dec push das and repz push fildll call rolb insl outsb insb nopl out (bad) mov jl adc push push sti inc vmread pop inc fcomps push or aad xchg lock orl (bad) cmc movsb insb ret adc sub add in jo (bad) jne ljmp add pop or cli insb xlat mov faddl lds xchg jne jp jnp dec fdivs sbb inc aaa push fsub pushf jne and fimul icebp adc cmpsl jne mov and nop loope adc hlt pop sti imul push jecxz xchg or aas ficompl xor jg lods jg lea lods mov lcall adc std cmp leave inc lods hlt imul jno or fcoms xchg aaa jmp je jmp push lahf sarl mov inc pop xchg inc xor adc jmp xchg mov xchg pop iret jmp jge iret mov mov pop or pop cli inc sub push push pop dec leave arpl xor mov sub adc cld stos cmpsl cli or mov and xchg stos mov testl xchg imulb or dec mov bound mov jmp mov xacquire xor fucomi mov (bad) test add movsl pop stos dec ficompl add in push out sub iret inc push pop (bad) ljmp mov or fwait sbb jb jae and pop ret pop je cmp xchg inc rorb mov dec jns in and xchg fstl rorl int3 add add addr16 test lahf adc scas sub arpl mov cli lret cmp negl cmp cmp adc test lret stc mov mov mov adc test push lds rclb and cli cmpsb or mov ljmp xchg rcrl pop xchg hlt ret scas pop jno inc pop cmp jmp scas push test jb mov inc jno scas hlt notb fisttp loope xor xchg mov adc pusha mov out add push inc jnp mov adc scas xchg or push cmp notl insb fwait xchg sbb rcrl (bad) mov inc and mov enter mov xor hlt insb test cs add (bad) xchg scas rclb mov dec addl lahf popf jb andl rorl push sbb shlb mov mov add lods es cmp cmp (bad) dec sbb sub sub imul mov xchg negb lea (bad) push out movsl js shrb add test dec jmp add das test outsl pushf scas mov xchg cs int3 or inc stos sahf xchg push movsb fisttp movsb sbb jno rclb das xchg es ss push push sbb in orl fsubs insl (bad) inc sarl data16 xchg pop xorl insb dec xor sbb fimull xchg movsl jmp add ss inc je mov xchg cmp dec popf outsb imul fistp test bound mov adc fmull cmp inc cmpsl pop mov mov mov cmp pop cmp jg stos mov jne mov inc fimul mov (bad) jae jg xchg pop mov mov inc lret ljmp pop mov jns (bad) or or xchg hlt pop nop fwait lcall jb xor in cmp insb add inc jmp jne cmc leave (bad) ficompl mov pop cs xor icebp out dec std ja pop mov pop cld inc mov icebp sbb cld mov xchg push inc ror aam pop scas mov sbb repz mov int outsb aas out jg popf out mov out iret xchg movb and nop into inc fwait enter and pusha mov clc ljmp sti pop inc ss sti xor and mov cmp adc add inc and enter jo in mov fldt dec (bad) jbe gs ss mov cld mov inc hlt jnp xchg mov xchg and movsb xor push cltd cmpsb sub imul mov pop jp je inc repnz sbbb cltd pop std xchg xor into and std or jns jno add jo xor sub dec addr16 (bad) in pop and ficoml push lret pop sub xchg int hlt xchg inc ret jmp fdivr pop jbe and push lock xor mov push cmp pop jo pop data16 sub adc and inc mov hlt xchg and (bad) jo ret in neg xchg xor (bad) jbe movsl cmp sbb das xchg sub pop jle mov inc pop mov mov sub cwtl adc pop adc gs cmp out sbb dec xchg dec movsb lret cmpsl hlt mov push xor or mov xor mov out into mov loopne mov sbb adc push lock cld imul aas add test push xchg mov out gs pop outsb dec cmpb gs ret mov pop jmp iret (bad) aas and aam (bad) test add push cld insl aad (bad) lret dec divb (bad) push lods leave nop test push fs ds enter mov aam aam xor cmp in pop repnz pop mov xor sbb pop out xchg jmp rcrl aam push sub loope sbb mov fdivrs pop mov xchg flds adc cmp adc mov cmpl push inc out cltd sub xor ss cli lock xor push stos test mov lock mov mov pushf sahf mov adcb xor mov xchg and cmp dec repz movsb loopne das xchg push (bad) fldt mov les mov (bad) out mov push cmp imul mov clc cmpsl fdivl ret (bad) dec int3 xchg cwtl es xor xchg in or pop mov cld mov cmp je scas and lock les jbe sub xchg rorl iret mov dec std xchg scas cmp (bad) or dec pop add mov shrb rclb and sbb jle cs dec out in sbb push sarl int3 cmpsl lods test add xor cmpl sbb ss nop std fs orl mov lock stos push mov pop ror hlt stos lock sbb mov dec in in sub push inc cwtl repz pop out data16 cli lret mov call subl pop jmp imul mov outsl inc lea int repz jnp int aam xchg mov xor fsub sbb arpl imul movsl push fwait movsb enter fs mov push test lret dec (bad) sbb mov add push cmp lahf jbe cs or xchg fadds insb out aam adc cwtl scas mov sub in addr16 aam loop pop pop fstl sub sbb lahf mov nop lret push std lods mov sub pop jg ret lea add and out pop inc int adc lds cltd or push jno loope or (bad) into pop mov or pop xchg ss lret pop shlb mov xor push movsb inc push inc dec dec stc (bad) mov out insl or add outsl pop adc mul cmpsb mov jp mov ja cmp sub insb bound loope fs mov fisubrl cmpsb (bad) out jp pop nop/reserved js add push pop and shl outsl ljmp (bad) adc inc inc add jle xor cwtl cmc clc stc into jno (bad) lcall mov pop stc sbb sub adc and les dec cmc add lcall inc je inc inc and xor add lock call and pusha bound xor pop pop jne push scas mov fist adc xor pop bswap jl enter push idivl ss dec push or jle out jle lret ljmp lock aaa leave and xor jns int3 mov roll cmpsl in sbb add add sbb lods enter stos popf jmp pusha fidiv stos lods jle dec scas adc inc adc scas and scas in sahf push xchg arpl dec call or and rclb xor push (bad) jmp es or push adc lds fist jle sub or (bad) push loope pushf push mov inc sub ljmp repz repz inc inc push adc popa or popa mov incb dec cli xor adc push or (bad) repz xchg pop lock and mov (bad) (bad) cld xchg subb mov xor dec mov loop xchg (bad) adc sbb rcll imul stc xor gs pop adc push inc sbb lret and (bad) shr sub adc inc dec out dec data16 mov fidivl pop nop pop rolb gs in mov std push mov xchg repz enter push mov sbb push pushf adc xchg mov jmp xor jae xlat mov pop das mov or dec (bad) jl cmpsl std mov cmp lds mov mov pop mov mov addr16 adc sti ret popa bsf jmp xchg sub out addr16 imul out les mov arpl clc rcr jle js popa xchg cltd dec inc out fstps cmpsl mov cmpsl cmp sub xchg xor cmp outsl ss mov loopne jns cmp aaa scas sbb ljmp xchg push cmp lods cmovbe xchg push add dec adc pop sub and callw dec sbb add (bad) and test jg adc mov push in xor aad dec call lods lcall jo and es pop xor mov pop pop jp mov cmp dec sub std sbb cltd (bad) mov test inc add int jle outsb and clc inc adc push adc bnd cmp xchg negb roll and mov js fcomip mov jmp inc mov push mov test pop fwait test repnz out pop test sbb insl repnz aas inc jl shrb cli sub pushf arpl jg ficoml xchg lds or xchg into xor and or icebp cmc lods or cmp pop cld inc or ror add test mov outsb sub xchg xchg out jg aas dec adc js xchg es mov adc lea lds ss and sub lock nop jns mov sbb nop cmp sub adc enter lods cmp in add sub jnp mov int sbb jecxz in cmp (bad) sti scas nop dec and ja mov js inc shr add xor ret add xor add aad ljmp pop mov pop cs shrl fnstcw and sbb into int movsb mov sub sbb add mov sbb inc mov hlt jmp jo sti insl aam push xor jnp aas mov cld push mov aad pusha cmp push loopne xchg cmpsb mov cmp add scas or aaa push mov in jmp ss out dec push sub add push pop fildll out test mov sub dec push add push imul dec adc cltd pop cli xchg xchg stos xchg ljmp jns mov lahf cmpsl xor iret inc (bad) iret and add sub cld xchg cmp or lcall (bad) decb dec push fs dec (bad) orl sarb bound sub (bad) sub cwtl cmp fwait bound dec ret int3 add dec mov enter cmp and dec popa aaa sub fdivl cmp sahf dec (bad) jno mov fcoml mov popa int3 ret enter cmpl ficomp ret sbb adc dec mov test dec sti xchg addr16 insb pop lods dec (bad) mov lods sbb pusha loop leave daa and push push mov in fistp sbb push mov imulb xchg (bad) push lahf mov inc dec mov mov nop jnp and push (bad) popa or mov dec jge sbb enter cld leave js xchg sub pushl fldt aaa inc mul nop push es xor cltd cmc jle enter or dec pop dec lcall call out fcoml push push pop int3 pop dec imulb inc mov cmc ja icebp mov pop clc stc dec mov or and call loop or leave xor push dec sub push lods sbb sub mov sar adc loopne orl pop lds xchg xchg cltd ljmp cmpsl sub adc xor xor adcl hlt push mov sub mov out mov movsl xor orl nop inc aaa test outsb into or cmp xchg mov jp cmpsb js dec clc sub mov add mov inc aad lds hlt mov decb rclb mov cmp or es int cmpsl int lsl fstpt fwait mov push fistp push jb stc in arpl gs (bad) lcall sub jnp or jo pop xchg xlat sahf bnd xor aas movsb sub faddp rolb gs mov cmp jno or sub push icebp roll add xlat jmp push mov stos jne mov cmp jmp je test mov inc dec push cmpsl (bad) nop stos inc clc mov jp test mov push movsb mov push xorl sub fcmove loope divl xor mov pushf inc pop inc rorb jb pop push cmp (bad) and addr16 xchg sbb fistpl or jge int3 ret cltd (bad) xchg sbb mov lds sbb call js adc mov into sub test test mov mov jl pushf sub imul and or mov and cmp add jbe dec andl and dec shld mov jnp jae (bad) adc repnz mov pop cmc and jno mov outsb cmp imull pop sbb (bad) lock (bad) cli sbb add rol push or sbb aam jle pop cmp in test jp adc adc xchg cwtl mov xor insb cmp jnp test adc jg dec mov insb out sarl mov mov adc inc mov mov out das call insb into mov xchg and sti test inc lret adc std jae repnz (bad) fucomip aam push mov sub and mov pop fcomps pop mov in (bad) pop call and xchg add stc out adc clc imul mov sub cmp aad cmpsb cmp push xor add cmp adc and imul sub add (bad) loopne repz hlt cltd mov popa push mov or rorb test push shr inc (bad) in cmp lret jb lods mov ret xor and inc daa out xchg jg fwait inc add notb mov out loope pop adc arpl stc sub shl pop lret movb ret shll push dec mov cmc pusha dec push sti bswap jl dec clc jle adc daa inc dec add lods ficompl mov in ds push sbb or (bad) mov adc fidivr add aad ja push add sbb push add push cmpl mov ljmp hlt es sbb push (bad) xor mov out mov sbb mov jne sbb push loopne adc pop inc mov setb inc and sub or add cmpsl cmp popa push je push (bad) xor mov sub jno cmp sub cs jmp dec xchg cmp jmp js icebp iret adc stos adc lret je rcr mov and jno sub call popf mov inc xchg dec jne mov adc cmp bound lds inc pop rclb in push cmp adc lea adc sub jecxz enter fsts subb lods std xchg js es cmpsl roll mov inc hlt out (bad) add test adc pop and imul inc mov mov insl jbe mov movsl or push mov cltd xor push xchg icebp repz (bad) ret or sbb les jae lock mov movsl je jne in or fs inc bnd add sub lea inc jnp dec leave fdivr sahf fstpt lods mov push test lahf lret cmp xchg fwait mov stos out pop pop fcmove inc ss jb jo xchg out inc pushf add xorl gs dec or add lahf push dec pusha lods sti mov repnz leave aam rorb in test xchg ror mov in cmpsl bts pop insl ljmp lea lcall adc mov pushl adc push adc dec insl repnz in mov out jo loopne jmp push nop test adc push (bad) fldlg2 push in pop mov xchg and arpl sti dec fucom je test mov push dec out in mov imul ss fdivs mov adc std mov push mov fsubrs mov movsl faddp mov leave cs movb pop and pop or pusha arpl (bad) dec add add mov dec xor fxch or or pusha push or jno (bad) and jbe in ficoml shlb (bad) jb hlt lock lret lret push push sub imul js lds adc movsl (bad) dec dec loopne push out jnp mov adc loopne (bad) ss xchg cmp dec out xor jle mov cwtl adc xchg gs push sbb push jp fcmovne stos stc repnz aaa or jns lcall jle,pt es inc daa add mov test push sbb int xchg add xchg gs aas or mov mov ret fdiv mov (bad) mov addl pop inc xchg push lds andb xchg aad in jg add mov adc in sub fs repz pop add xchg cmp push fsts dec call jmp daa and push inc and fimull je call adc out nop xchg in mov push lods push and push stos loope adc (bad) je xor inc shll dec lcall mov mov mov sub shll mov cwtl cmc and pop mov loop stc lods dec (bad) ss sbb mov cmp das mov sbb mov mov shll sub sub (bad) or ret and mov sbb xchg sub mull mov inc mov push rorb cmpl mov push xor (bad) fistpl test ljmp (bad) or fwait enter dec not stc mov mov or mov xchg adc or int or mov addl cmp and sub xchg ja fs inc mov push sub sub jle mov dec test ljmp int adc pop hlt mov add lcall (bad) and movntps mov pop movsbl (bad) enter ds cmp out sbb mov xor clc push jg ss shlb je or sub jle adc push (bad) cmpsb sub ljmp add (bad) (bad) xlat roll add adc scas (bad) or jne repz ret cmpsl adc mov dec jmp fwait outsl outsb xor xchg fist add pop mov push push pop loope sub popa (bad) or lods scas fwait sahf cwtl push sub push test inc cmp je in ficom push (bad) sbb mov cmp mov inc mov pusha inc cltd mov out jmp ds out (bad) mov xlat imul jne pop cmp fs xor add test inc push (bad) cmpsl inc popa xchg (bad) mov pop adc push sbb push cld orb push cltd and les push dec push jno insl pop pop stos mov xor or xchg xchg cmc aas jecxz data16 sbb fist mov aad xor xchg and pop pop ror iret push sub dec imull or jecxz ljmp in xor adc or es fstl sub ret clc hlt cmpsb dec rcrl mov dec call out jo out push mov (bad) xor xchg xchg mov pushf sub repnz and pop jb mov dec mov aas int3 orl (bad) (bad) and mov mov push outsb inc mov pop fwait inc push hlt test push lret movsb mov insb cmc dec xor dec xchg dec ret jbe jl inc je std sub mov nop jnp lods cmpsl cmp xor out sub mov repnz cmpb xchg cmc lcall ret fisttp jg lods aas mov mov repnz mov xlat in jae sbb (bad) sub dec xor (bad) mov add push pop inc insb shrl dec xchg mov sub mov lcall xchg cwtl adc outsb iret xchg cltd fwait mov inc cmpsb popf lret in cwtl or xchg daa (bad) mov push (bad) (bad) sysexit sbb cmp push outsb std out jecxz jmp shr jecxz pop stos jae add test nop inc adc xor cmp mov cmc hlt pop push mov iret gs add das pop lock ret movsl sbb js (bad) jp push call addr16 cmp inc cmp mov fcomi test lret mov adc xor jae fstl sbb mov popf push int mov in andl fldt imul and mov xchg les rcr mov jp test negl push mov mov add cmpsb adcl sbb dec into (bad) (bad) int3 mov jnp mov or cmc std adc sub xlat sbb xor pop pop mov imul (bad) and mov jecxz je pop or insl (bad) outsl jnp (bad) imul fisttpl jne rorl lret cmp mov rorl insl pop scas and push inc lds add out sbb jecxz fwait dec mov and int3 pop sbb jno add aas push xlat aas jno jp orl adc fwait mov pop mov arpl add int xor aad jbe jno and (bad) xchg jle mov nop mov push repnz or out movl or sub bound xor cmpsl add xor ja dec (bad) repz and pop jno jne pop daa lret sahf mov mov add mov les das sbb cmp je inc cltd imul lods pop (bad) (bad) jecxz mov push xor mov daa adc (bad) cmc cmp pusha fdivp jae mov lret out mov iret stos stos xchg xchg pop shlb xor mov cmpsl mov and inc out jl sbb and cld add push xchg push fs int cmpsb in and push into sti inc inc (bad) adc test xchg les jnp ja outsl (bad) repnz (bad) in or xchg and mov sub sbb cmp roll in aas inc aas iret xor add in popa test sub out dec dec je popa scas inc (bad) lods adc lret push jb push cmc cld (bad) mov push jmp fistpl inc xchg cmp outsl cmp fwait or pop sub cmp data16 (bad) je pop or aaa pop divl fwait adc in fwait push jmp fwait lds mov xchg fdivrs pop pop cli mov fwait adc arpl mov imul loope dec mov lret jne popfw xchg mov shll and jo pop sbb (bad) pop sbb pop pop fisubr cmp ja sub gs popa mov jo nop arpl add pop dec imul xchg cwtl nop arpl cli fstl outsl aam jmp outsl iret lret cwtl imul xchg mov mov out dec ds jnp push xor into jmp and scas enter stc cmpsl cmc test test imul or lret xchg push pusha xor mov xchg ja xchg xor cmpsl mov (bad) out lcall orl lret shll add sbb mov and pop mov cmpsl cli mov jne cmpsb fldenv data16 jecxz cwtl sahf sbbb data16 imul adc push dec and imul pop out cmp xor int3 popa out rcrb test imul lahf popf mov sbb mov outsl sub ror popa pop push scas leave and push fwait pushl sahf arpl cmp cmc loop and lods lcall outsb sbb out push pushf outsb mov popa add gs leave loopne sbb push mov fsts sbb in and lds out inc jo fbstp mov jno adc and add call mov inc jno (bad) stos or cmpsl add xchg push imul push ret cmp mov dec xchg cmpsb mov stos lods push outsb mov rclb cmp add imul push push sub and and daa out sbbl and pop inc rorl (bad) xor jae lods push aad adc or jno stos xchg in xchg xlat cmp mov in test imul sbb addl push stos scas inc or inc or pop push (bad) aaa aaa and mov sub sahf push arpl clc mov mov mov int lea addl (bad) mov jl pop rcr xor mov cmp or push in jne mov shlb negl pop cmp popf fistpll aaa imul push cmp xchg mov aaa (bad) (bad) pop mov xchg fisttpl call mov cmp in leave add cs push push adc inc jg lcall lahf popa pusha push fsubl call je push push xor adc packuswb fist ffree js sarb xorl jno out inc xor inc add lret sbb adc aam daa xchg adc or popa aam cmp int3 jp mov xchg pop adc xchg xor mov jne out sti es aam jne int mov jbe fldl daa add pop lret jae sbb rcrl cmp mov fisttpll popf std insb pop add pushf (bad) outsb rclb js cmpsl xchg mov rclb sbb adc and popf lret jl mov xor rorb out inc inc sub sbb shrb cmp cmc subl adc int3 incl sbb cmp testl jp add fidivrl and xchg into inc test mov cwtl cli frstor cmpsb scas enter cli cld xor ret cs push loope enter push pop and jmp es in adc in call and sub xchg mov in or cwtl mov cmp movsb clc push pop or cmp movb hlt adc divl es pop lahf xlat mov mov leave pop jns lock xlat and push mov (bad) decl fsubrp dec (bad) icebp jae mov pop xlat push pop clc sbb pushf stc cs gs int3 lods sbb fwait shrl pop fstl mov aaa xchg rcrl js dec jb icebp imul jmp mov mov adc or stc sbb ret cltd sub inc aaa inc xor or push and pushf ljmp dec sbb mov mov gs mov repnz int and fild sti push mov xchg and mov push add fdivrl pop sub or sbb sub mov cmp cmp and paddusw scas fsts pop xchg add pop mov sub adc movw aas push push add outsb push scas sub mov mov pop push or outsl aad add dec or add pop cmp call and xor xchg xchg (bad) hlt sahf js xor fdivl cltd jle sub lret es jae sbb fwait add (bad) push push sub add lds inc dec arpl lds sub fistpl cmpb stos adc ljmp cmp fwait xchg rol addr16 iret pop aas nop push dec xchg lret js jae icebp sbb or movsb mov popa outsl lods cltd hlt jg rcrb add dec cs xchg push dec aam mov cmpsb in add and es dec je mov nop jne call repz mov std in cmp movl pop xor imul xor icebp xlat jge imul and out cmp cmp pop mov movsb jns dec cltd ss xchg (bad) out jge sub and inc dec fucomip pop mov sti push push shrb adc or sub pop outsb cmp movsl or xchg sub lahf jb out popf add lea rolb outsb cmp xchg test xchg sbb popf and xor sbb jecxz ret xor in mov inc push inc mov xchg ret inc ret xor xor mov add ret test xchg xor das or (bad) ret sbb (bad) lcall push (bad) lock push cmp iret lods movsb addr16 pop adc lret loope das aas orl sbb repz call loopne adc test test push cltd gs pop cmpsl mov loop lcall ss sbb jg hlt jle inc (bad) out iret out movsb (bad) les mov movsb iret popf scas fstpt mov cli (bad) xor mov out jle fdivrs inc sub rorl cmc aad pop mov jne mov pop mov popf mov xor pop fistl push push pusha sbb jge push aas and xchg push inc movsl mov (bad) sub mov rcr pop xchg fdivp jmp push inc sbb std xlat push sbb mov or ja (bad) outsl pop test loop and pop cmp and inc mov dec popa stos sar mov clc dec rcr jmp sub mov rolb enter dec andb add data16 int es pushw (bad) jmp and test push cmp imul in les jno sub or leave iret iret xor xchg pop sbb or add cmp lods xchg loope mov call sub mov mov cltd ficomp xchg (bad) xor shll mov fstps test fistl mov mov or xchg fist sbb mov inc adc (bad) and test icebp push push pop push imul jae jne dec test stc in insl sbb and clc fidivrl mov mov in inc lds stc (bad) jb mov jno fidivrl sbb in jp sub pop sub lods mov adc mov popf xlat outsl push mov mov pop imul addr16 push push jns das dec sahf enter fsubp inc xchg mov shlb push and rcrb mov aas xor insb xchg push pop loop loopne repnz loope xchg das insl loopne enter icebp cmpsl cmc fwait push lahf lcall jo xor push jge loopne sub add mov sbb inc mov add pusha cmp mov add roll sahf mov shlb ss sub jo xor cwtl cmp pop addl repnz lret push rclb (bad) pushf sbb xor mov mov adc mov loop and mov out inc jecxz hlt push inc enter mov mov movsb jmp mov gs inc loopne mov je sub cmc dec inc loopne cmpsb cmp fmuls push out xor faddl inc mov xchg (bad) or mov test jno (bad) mov mov adc mov pop cmpsl pop out (bad) leave inc dec pop jl in push cmpsb pushf frstor fildll aaa lret inc xorl aam push mov (bad) repnz cmpsb int3 pushf and mov cmp jg add gs loop rolb imul (bad) test push in les iret lret jne adc lods in sub outsl mov test fisubr test pop xor push enter xchg pop push mov ljmp insl add and fwait sub into in shrb dec je mov jo prefetch repnz xor das xor dec mov push pop imul cs xor inc dec aas jbe jb mov es or iret roll or add sub bound aas xchg cmp lcall shll jbe adc sbb pop xor mov ja pop or xor mov mov cmp enter js push into mov xchg dec xchg push mov add int push int3 dec imul test pop sub mov std test fistpl and xor out in js (bad) dec jb ror in paddw jmp fdiv push xor add mov ja inc mov ljmp cmp clc push inc pop push dec idivl push push mov sbb repz ljmp mov inc mov mov sub ja cmp jp adc or stos and jb das adc pop cs sub (bad) ds inc repnz lahf cmp stos js mov lret les pop xor hlt xchg pop je mov ret or lahf clc or fs add mov mov xlat dec jp mov repz sub inc jne shrl mov add clc fstl pop jl aaa adc jg cs dec add lcall push inc jp inc cmp in mov addr16 mov mov jmp sbb sbb mov aad lahf mov lods sahf add push dec pextrw mov ret inc addr16 cmp push push loopne lds fadds and nop cmp jmp inc pop add jecxz adc cmp loope fsubs jnp lcall fsubp and or and icebp test int3 mov push jge pushl sti dec cwtl jo jl xor sarb push mov and jecxz jns jns add (bad) xchg or xorl mov (bad) mov decl iret sbb mov (bad) mov push dec inc test int3 test adc mov aaa lret sub and aad outsl jge (bad) aaa aaa mov mov or cmpl aam in mov mov push fdivrs lahf jle out jno jmp add cltd mov imul dec adc add pop int3 loopne cs cltd (bad) mov aam mov jecxz mov xchg dec jne inc fwait aad outsl movsl cs xchg sub add orb ficompl repnz call pop jno mov push push mov jmp adc pop jbe adc (bad) and lcall mov arpl sub jno nop cmp push lcall loope ja jp push (bad) imul fs pop cmp push ljmp test stc shrl dec mov xor pusha mov push into hlt xchg push (bad) sub (bad) fdivl push sub jl jbe sub movsl gs or js pop iret sbb dec cmc add pop dec mov sub daa inc add mov imul mov push push jle cld inc cmp push subl or (bad) js stos inc mov sbb enter dec call (bad) (bad) mov sub iret push sarb jo lock das push sbb lea gs scas push in push mov and and in mov dec test xchg das and mov repnz call cmpl call inc mov fcomps sbb (bad) sahf inc fcomps inc (bad) mov (bad) jmp mov in push mov add outsl push cmpsl aas aam (bad) cmp or and addps pop in ds fwait pop fwait rcrl cmpsb mov imul xor fwait push dec dec daa or and cmc and (bad) mov xchg xchg loopne (bad) rcrb loop cli faddl pop jl inc rclb fs mov cmpsb cmp outsb mov scas sub pop in cltd sub cmpsl mov xchg cmp dec loopne xor arpl xchg jmp xor xchg jae popf mov movsl sbb out test in push push xchg or xchg cmp dec jb ds mov bound dec inc mov pop mov out cmp imulb mov rorb sar inc inc inc in fnsave mov test jns mov int inc stos push ret stc mov cs sbb test outsb cmp mov mov sti (bad) ret push test adc push adc popa es fwait xor mov inc ja in add adc popa mov sarl and repz inc mov lods jb (bad) ds mov es lahf (bad) or xor ss cmp repnz imul cmp daa js or push jle cmc sbb lcall jl fildl mov cmp sbb cmpsl mov movsb jp mov xchg cmp xchg push push or pop out pcmpeqb mov ret xchg and sbb inc scas test mov pop adc scas cmpsb out loop imul cld mov jae or mov std ljmp das jmp or jmp (bad) ljmp sub icebp ret test sub mov loope adc jo cmc xchg add dec gs movsb lahf addr16 ja adc fistp lret xchg es repz loopne and mov loopne inc lret mov cmp and sarb addr16 (bad) jle xorl jae cmp inc flds (bad) in mov jno xor pop push (bad) sub or add mov in je mov xor mov xchg sbb (bad) push (bad) lods adc shlb add push int3 cs and rolb mov ds ja ss fisubrl iret push xchg xorl imul jae cld jl cmpsb sub aaa and mov test cld and les cmp dec fwait or idivl sub xchg outsl sbb xor mov adc int lods mov jb fmulp mull jmp fidiv add (bad) fsubl mov les jno jp std imul mov movsl in sbb push aad shrb cli js push hlt dec stc xchg cltd sbb daa scas push fcom mov sbb out addr16 stos pop mov es rcrl mov sti data16 int3 mov sub sahf shrb sub test jo push idiv xor fldl dec icebp loop mov rcrb outsl dec dec mov sbb sub xlat lret movsl push lods inc push stc dec add int3 loope out cltd out (bad) test sbb inc mov add xor jne jb imul dec add mov imull rcrl insb pop xor inc jo stos xor xchg inc or es pop cmp and repz nop sbb xchg jecxz mov mov (bad) push inc inc ficompl jmp sub adc push xchg arpl out inc int ja enter lret movsl pop or aas popf test jp inc push adc push je xchg insb stos mov sbb pop cwtl pop ss sub pop inc inc push leave fucomp lock ds push ret jne add cs pop mov pop mov push pop lcall dec sti add test enter test mov jge xchg add adc adc cmc and test mov ds pop push xchg push pop mov js dec aas mov ficom int3 jmp xor arpl pop stos lea jb,pn xor ret xchg sub imul or cmpsb push mov and (bad) adc fistl in sub lret mov arpl jbe outsb into dec repz pushf out mov cmp (bad) rcrb mov xchg push and popf lret pop outsb cmp sbb jmp mov jmp pminsw cmp int jno xchg data16 pusha pop jmp jnp ss mov call mov adc mov decb outsl jo jmp mov stos movsl out push dec inc inc and lcall nop pop fsubrs movsl push sub lret sbb inc idiv inc (bad) sub lods movsb out bnd insl pop and dec loop xlat mov xrelease xor sbb test or lahf xorb mov dec mov stos fisttpll or xor mov daa sti jmp inc xchg out test xchg frstor ja dec xor es popa loopne ret es insb clc or sub (bad) jge jg lock jnp sahf xlat aaa test jle inc enter repz cmc sti jle stos ret cld add addb pop movsl ss sub cmp xchg imul addr16 (bad) shl je inc push movsl fdivp icebp out aad fmuls or add push lea cld addl mov out or mov add popa add loope cltd notl dec loopne repz inc test scas sub or lock outsl in outsl (bad) clc pop enter out lds pop data16 mov jmp jmp mov add inc sbb int sub lahf mov push clc cmpb and pop push imul sbb mov das and out sub pop pop jecxz cwtl and dec xor mov ss lods les repz sarl cmpsb mov les nop dec ss mov subl add dec push je fstps add mov mov fwait ret mov adc les inc insl jle (bad) jmp push fwait and stos add ljmp ljmp mov dec pusha or adcl mov rep jmp add fucomi and inc les xor xor inc jge dec add in sbb mov loopne ss mov cmpsl sub in mov cltd push pop xchg (bad) jae pop pop add (bad) ljmp das and jno jmp stc test out out in das lea sbb dec (bad) pop adc std adc dec ficomp mov push cmp dec inc push andl dec push pop sbb and mov mov inc xchg or das push adc int3 adc pop aas mov std ret flds sub push cld (bad) jnp or adc (bad) xchg popf dec mov push sbb in add or cli pop lahf inc subl out imul mov pop loop sub fnstsw add (bad) dec cmp xchg xor scas sarl lea cli mov call or sbb xor es gs outsl out inc push dec stos push fdivrl push fwait push mov xlat xchg add pop mov ffree ds test push sub popa arpl mov lods dec js ljmp mov roll imul imul scas fwait into pop mov xchg imull aam lahf cmc add pop jg and add (bad) hlt outsl pusha aaa sbb loope pop outsl push dec (bad) insl shll insl and dec mov mov je push dec xor aas scas jl out mov ficom js dec das adc jb addr16 lret or sbb sar sbb mov popf mov dec push add xor fist sub ror sub fstpl push int push and sub daa mov sti mov push lcall pop sahf dec mov in jnp pop mov inc cmp scas xor mov test (bad) movsb lock and or imul dec (bad) (bad) cmp mov les cmp pop pop jg ss sbbb loopne sbb cwtl mov ret push fwait dec jne outsl inc imul jmp fild icebp and andl push pushf mov adc loopne mov cmp (bad) mov daa pop dec pop into cwtl mov or out ret add sub push (bad) fldenv jb mov jb xor es fcoml pop divb dec mov mov mov loope adc pop test enter shrb (bad) in popa out sbb cmp ss mov jnp sub ljmp and fdivrs xor sub xlat mov loope dec push enter push jbe inc les test mov std mov popa incb push adc cld jbe lock push mov cmp sbb inc out sub lds ret sbb outsb outsl into and push mov xor adc jo jmp clc repz mov or inc fcoml (bad) add mov sahf (bad) sbb sbb mov jge sub lods mov push jp lret mov mov jb data16 into sbb popa repz imul jle scas xor pop cmp sub arpl xchg cli mov cmpsb dec pop jo arpl cmp mov (bad) out clc lds jb jle adc ds in sub rcl push popl (bad) mov pop out cli mov mov loope jle mov mov jmp stc mov xchg (bad) lods or fldcw jno adc lret jmp cwtl sahf pop xor sbb mov cwtl pop cmc mov jo leave (bad) mov (bad) ds cltd inc popf out mov ljmp in nop mov jl cmp out pop xor mov mov mov mov outsb push das (bad) and das stos ljmp aam mov xlat outsb mov lret ret sub repz ficomp sub test cmp mov push (bad) dec jmp xlat repnz dec ljmp jbe and out cltd loop hlt fnsave mov ljmp xchg push fstps inc xor js pop rolb pushl out nop sbb int3 fnstenv popa cmpl jbe sbb jae (bad) mov cmp pop nopl test inc and sub jmp and dec ljmp in mov mov sub fs aas mov jl scas imul test rcrl mull pop fnop pop push mov test mov incb (bad) jp sbb xchg aaa cmpsl dec mov mov fcmovnb scas call sbb sbb xchg dec adc aam mov (bad) mov push lds je mov hlt pop data16 dec jns popa aad xchg push adc pop movsb sub push adc sub and inc imul stos mov mov xlat movsb adc xbegin mov and xor jmp xchg fwait mov lcall pop test fs lea leave lods mov or push divl push pop ljmp pop xchg xchg pop xchg dec mov xchg popf les jl nop (bad) xchg test sub xchg push adc adc insb sub mov leave xchg cld xor pop sub jecxz adc cmp shlb aas jns cltd dec xchg roll pop insl push stos movsb (bad) dec adc out pop push ficom mov inc les aas enter pushf das (bad) pop test repnz push ljmp jno scas mov bound jnp cwtl sub sbb ljmp jmp mov dec fild sahf rcrl adc adc movsb in xor add es mulb xor lret cwtl stos cwtl out fildll ss cli sub (bad) mov push subl ss outsb (bad) mov jns ds add pop mov (bad) dec push xchg loope xchg daa dec inc or inc leave adc fs cmp xchg mov xlat jle jp imul xor cs push jno add inc sub clc jbe add xchg aaa insl pop sahf sub aam gs ljmp dec fnstenv (bad) (bad) out in lea push pop rcll jle xchg xor into mov cmc xlat mov in jb add divb xor mov jbe mov sbb mov mov into add (bad) mov ljmp aad outsb out (bad) lret pop mov scas data16 ret outsb aad dec pop dec add sahf adc xchg xchg ja xchg pop mov jno out cli xor sub in inc inc cmc fisub stos mov pop inc roll mov xchg punpcklwd int3 and clc cmp fdivrs cmp cli test imul pop pop inc xor arpl xchg jge mov stos sub push pop andl shrl jmp pop sbb aaa ljmp or daa cld or mov add imul lds test jl xchg in out dec mov call (bad) aam out adc dec sub fiadd das mov aad in dec sbb dec cmpsb pusha push cli lcall dec xchg sub sbb fstp jmp in lret dec push and fwait jmp (bad) xchg xchg push loope push aam test addr16 mov cld sub pop jp sbb lea lock fwait xchg push outsl test pop std push ds test xchg and aam add xor jl mov mov jae add jno out clc lock lcall push add lret xor xor sarb lds jge ss fadds inc stos xchg pop add push xorb imulb push dec das into mov sahf xor xchg inc cwtl shr cmp dec dec and sbb cmp (bad) loop fs pop fcmovb ret stos push and loope aam xor pop stc flds dec pop addr16 inc mov pop pusha out lret adc leave cmp mov repnz lahf adc ds or xchg xchg hlt sbb pop mov fdivr cltd add lahf cmp dec pop dec int3 rep ljmp sbb cmp jb cltd add push push xchg sub xchg cmp mov mov out pop repz mov and out sbb pop roll jne mov mov sub fsubrs adc sbb mov ret mov jno es mov lahf stos push fwait sub into mov dec cltd cld je xchg or mov mov mov inc and mov push add fmull push jg loope pusha mov fwait rcr pop jp cmp xchg into push push lock scas push pusha out mov jp mov and stc in incl js xchg adc xchg dec not (bad) jp mov adc adc jle popf enter lods xchg shrl ret ljmp aaa cmp dec repnz adc push orb mov orl push inc into repz (bad) (bad) out (bad) jb nop gs loope push xchg jecxz (bad) cmpl scas stc jmp pop mov sti cmp fwait mov and (bad) pop jb or sub lret sbb mov (bad) aas pop mov movsb jge xchg movb dec fsub lahf jnp jnp mov xchg mov xorl mov xlat fadds int3 aam lret cmp js add leave imul into arpl jg bound pop jnp ja sti sbb sub je push into cmc (bad) mov out mov pop test sbb inc (bad) lea mov hlt jmp sbb xchg sbb outsb cmpsl test das inc mov push pop (bad) mov ficomp (bad) repnz push mov out push outsl cmpsb lods loop dec adc add jae push pop inc std dec xor xor jmp pop pop adc (bad) jbe icebp and mov xor push push bound in ret fwait fs aam xchg push jnp push mov adc xorb aam test inc push inc xor or ds mov xchg lret test sarb adcl repz xor dec cmp test jl push das xor and mov xchg fnsave js test sub rorb leave push mov outsl fucompp cld xchg mov jb inc mov pop imul jecxz cs inc ret push (bad) pop daa call mov push lock icebp decb test inc rclb cld adc cmpsb adc popa and fnstcw stc push pushf jnp popa ret scas lret jmp cld shll sarb mov xor cld (bad) loop stos inc push mov aad fcmovnbe dec ss insb and push pop jp das stc jb mov inc adc jmp fxtract insl notl fs push mov jnp dec adcl jecxz (bad) int in xor inc sub mov aaa lcall mov lods int3 and push sbb es cmpb icebp mov ja mov aad jbe ja pushf lock les pop xchg ss or (bad) xor ja jbe jae jge mov cmp shll jge test rorb inc mov cmp gs orb imul push adc pop fistpll dec mov inc stos cmp nop push ftst jo push mov in pop mov mov loop loop inc xchg jnp inc adc push cs in jg (bad) icebp inc jns mov xor dec cmp pusha mov outsb lahf je sbb pop pop push pop inc repnz fxtract hlt jbe scas and cltd mov test xor xchg pop inc sbbb fdivrs fdivs push xchg mov or mov ret cmc jecxz jmp (bad) fistpl clc repz push dec std jne ss cld test fbstp dec mov push cmp inc push cltd hlt jbe ljmp loopne divb pop xor xor pop lds nop insl sbb in les pop inc pop (bad) call push sbb outsl dec add js pop inc mov inc std sti inc lds pop add cwtl in push notl inc mov adc jae mov daa mov cwtl add jb mov xchg leave loope imul jp mov push mov (bad) jne adc das xor cmpsb iret cld call pop pop pop push out xchg hlt xchg mov sbb jbe cmp jle inc jg lods or sub push enter push adcl fsubr insb jge popf mov dec lea mov outsb mov dec sti xor iret sub cmpl pusha js aaa in mov jae pusha loopne pop lahf rorb add out adc xchg xlat outsb clc lods mov les jmp hlt xchg mov xchg rcl mov jl cmp negl pop and cmpsl inc mov mov or pop xchg mov xchg data16 test lods jns idivl mov sti pop scas xchg mov movsl (bad) jmp sub xchg dec dec inc mov pop sbb cmpsl mov in xchg loop (bad) stos aam loopne mov sub cmp push orb in xor out dec mov push fbld pop adc loopne push cmp inc aas or sbb xchg loop mov stc sbb repz push jbe mov add daa fstpl (bad) xchg jae mov repz jne stos push mov inc adc sbb (bad) (bad) push addr16 out mov iret loop ficom xchg shrl lahf (bad) fcoms mov iret xor sbb std xchg inc arpl or mov mov cmp shlb scas and inc (bad) pushf add in pminsw cmpsb movsb lods out cld inc add mov out sub fwait in repnz in or or fldenv sti push xor sbb fcoml rcl out push lcall mov add sbb xchg nop cmp addr16 (bad) jl push mov xchg stc mov stos sbb inc gs pop add fmull mov jo adc add mov pop push fucom imul push and and cmc mov jnp movsb pop int and push mov jecxz add jo xchg xor psrlw add push addr16 (bad) pop push fcoml xor dec adc fcomps jae fildl lcall sbb pushf stos push mov icebp sbb or jb sbbl bound mov or cs inc daa sar push into sub jbe (bad) decb (bad) in inc or inc or jns das dec in (bad) lods clc movsb nop inc xchg scas mov sub inc loopne jmp (bad) pop ficompl pop or loopne ds fistpl lahf adc xchg into ja loope out insl xor sti push test adc rcll push decb out push fimull mov push push lahf xor push rcrl pop daa (bad) faddl push cmc test mov inc (bad) pusha imul mov mov mov ja loopne fild or cmp sub iret push ficom imul nop adc test lret not mov pop insl out insl lret bound inc int3 cmp loop test jb aas mov pop cmpsb test pop and imulb hlt mov lahf das fwait add adc int3 movsb pop (bad) icebp pop inc or sub (bad) orps aas ds loope sbbl ja push pop sub cmp lret inc out pop ss sar dec cmp sbb push cmp push scas jns jne xlat in bound fnstsw sbb insl call inc add ss fstpl ja dec dec and mulb imul xchg and add xchg inc adc push xor mov mov cmp mov test mov push adc fwait test out aas in sbb and mov fsubr mov pushf push jbe clc js sbb pop xchg xchg popf mov push pop in adc lret mov ja bnd jmp pop jne stc mov stos or pop add or stos pop pop jmp pop mov cmpsl mov loop fsubrs cmpb ja xchg shlb push mov pusha push cmp pop xchg outsb jo ja lret pop cmp leave in mov in add sbb cmp call jo fst int3 setg push xor fldt inc ljmp aas rolb jnp faddl loopne aas out adc loopne lret imul mov out inc jle lret xchg and pop sbb into (bad) (bad) ss mov fnstsw (bad) cmp rorl mov fmul push and or jge xor xchg jns cmc mov stos popa push cmp pop jne stos (bad) fadds sahf xchg add push jmp cli mov lods add int popf test aad dec aaa test xor nop (bad) insb pop sarb adc loopne stos inc mov call lcall and in js xor jae sub pop dec xor dec lods and mov addr16 ljmp inc xchg mov mov pop scas dec stos iret popa lods mov jo mov cmp adc lea and aam inc adc in inc mov sbb test push mov cli dec pop pop xchg sub add sub inc and clc inc ret scas mov test mov pop sbb andl cld mov stc mov and lret int cmp xchg sub inc jle in mov inc aas hlt test pusha jle aad pop int3 jle or mov cmp cmc dec outsb cmpsb daa sbb fldt loop pushf pop jp jae add aaa jle data16 mov add push add sbb jae dec and in and inc fimull add into scas hlt cli add and push ret push mov pop insb push pop xchg scas and icebp xor daa jecxz adc scas icebp dec sub pop dec adc mov roll insl (bad) int3 movsb sbb inc mov imul jno fisttp add lret popf pop rorl mov mov cmpsb pop xchg add (bad) imul sub sub loop cmp out mov ja fsubrl fs or xlat outsl (bad) lea xchg xchg cmp ss loope xorl das mov addr16 and ljmp adc hlt mov cmp cmp (bad) ss push (bad) je jecxz ret adc pushf inc (bad) (bad) jl push dec mov cmpsl mov addl pop and xchg iret pop mov mov xchg in shll popf mov cmc int3 xchg add sub push sbb enter std xor out mov dec add push push enter aam lea or js bound hlt icebp ds add les ja ljmp (bad) cli mov icebp push xchg in mov pop mov xor or jnp shrb sub ljmp dec jmp jge (bad) jbe and (bad) mov xchg ret mov sub xchg ret jmp jmp in push lods (bad) mov add jle xor (bad) push pop pop xor les scas es lock xor stos aaa or mov ret fcoml add mov pop scas or pushf sbb inc in push scas mov rorl mov sub push add jmp add test xchg adc dec cli add dec (bad) cmpsl xchg leave pop std imulb loopne xorl daa (bad) or push push lret ss scas (bad) das inc mov fwait mov test mov pop inc (bad) (bad) pop popl loope push pusha sub pop sbb (bad) out dec ficompl cli and adc mov (bad) data16 jbe,pt inc pop (bad) mov divb pop cmc ss push ret xchg adc mov aam mov xchg mov mov pushf test add mov sbb out push aad cmp fidivl pop sub jp in jecxz mov stos pop mov cpuid movsl testb mov adc into pop and xlat fild mulb jb add sub sub mov jecxz or xchg ret sub and pop in adc je out scas xor jle xchg bound out adc mov xor dec xchg int mov or lcall rorb mov mov sbb push aad fwait outsl push sbb cld fxch cmp in mov fcoml ss dec int3 or inc (bad) icebp bound sbb mov jp xlat nop mov sub call and (bad) mov and adc pop push int popa les sbb pop nop cmp ficom repnz xor lret call repz out mov jmp enter lret mov (bad) ficomp dec pop pusha in imul push pop dec pop fwait xor mov inc xchg add aad mov test mov (bad) pop nop rcl fdivrp aaa xchg sbb mov pop fs sub ret jno test fbstp sbb js inc inc inc sbb sbb xor inc xchg sub aam sarw icebp cmp sti das push lcall lret mov and fcoml push mov push push add mov inc mov jl lcall scas inc rcll cmpsl xor loop xor or mov jbe movsb int popf popa pop push movsb pop inc ds and mov or mov stos fdivrp repz sbb daa cmp iret xchg mov mov xchg jp loope inc js loope lds sub movsl mov dec inc mov das xor sbb xchg (bad) mov mov int3 rorl adc add and rcrl dec jmp push shll (bad) ljmp addb sub sub fcmovnbe cmpl xor sbb sbb mov pusha xor je arpl push movsl mov cmp sub mov (bad) add sub inc fistpll movsb mov pop movsb cmp pop mov seta call lds add or dec cmpl sub jle lods cli add mov ret outsb outsb lcall or xor sub jl cwtl shld push mov add lods pop out outsl out inc lea aas out jne push mov shrb push cld cwtl ficompl dec loopne xor (bad) adc pop push std add mov loop pop jnp pusha inc push scas adc hlt or test les cli or xchg mov xchg jecxz pop pop lock ds mov inc lret lcall (bad) sti rcr enter mov xchg and add cmpsl loopne jle jg enter sbb push lock rorb inc or lahf cmp mov push fs sub push stc jge sbb mov lret mov cmp fcomps dec jno lds divb mov inc aam movb mov pusha out in or pop dec xchg pop jns pop rorb pop lods push (bad) in pop add aas cmp cwtl jb sbb lret test push cmp lea mov lea inc int3 add cmp or int3 and lret pop mov jns scas cltd outsl shrb mov lea jp jl inc std or ret xchg push dec int3 xor dec fs scas xor push cld add xchg xor pop pop xlat mov movsb pop pop xor js pop std pop cmpxchg ror insb out mov cmpsb bound mov movsl test jnp and adc pusha vrsqrtss cmp (bad) cmovs jmp mov ret adc pusha lods ds pop xchg test add pop sub sbb inc in jmp imul fstp jno fwait jl xor xchg adc movl mov movsb or push mov mov mov bound sub fsubrl sub lods mov fild js (bad) dec ret aas (bad) cwtl and int3 add jbe (bad) (bad) or inc xchg pop xor mov and movsl insb cmpsl data16 or xor and (bad) mov dec sbb in test xlat cld stos mov pop jge scas std xor jmp out repnz jl out not xchg fstpt lds push inc xor loop mov dec fsubp shrb dec movsl push inc jne pop insl or es cwtl (bad) cmp out push push insl ja (bad) and loopne push stos ljmp inc lds push js pusha jno sbb pop aad adc nop (bad) stos daa dec inc xor mov xchg lret mull idivl and jns xchg lock cmp fcmovb roll les icebp ss leave xor pop mov shld test mov xchg and xor aaa sbb cmpsl cmp cwtl xor push dec dec sub sub in push int3 inc loopne dec xchg rorb pushf add or cmpsl xor cltd ja (bad) sub mov add outsl sub add dec mov out push inc jle fnstsw sahf pop subb push cs imul xlat pushf fwait mov push insl ds mov outsl or inc inc ja pop enter xchg adc adc push push inc sub ss pop xor call xchg push rorb stc call jnp and mov insb (bad) pop mov sub mov pop jb jne stos or addr16 push pop cs loope mov or (bad) pop roll rolb sti jno es mov lock (bad) mov cmp or popa shrb pop xchg dec jne add xchg or stc sub adc insl in and push (bad) ss lret sub jae fs mov xor test cwtl xor out inc add jge mov test (bad) mov xor sbb inc cld out pushf out adc jmp iret or ret push sub push cmp movsl faddp and inc xchg fdivrl je (bad) popa and push sub inc and mov (bad) sbb or insb addl hlt sysexit repnz loop inc sti das or in outsl or cld dec adcb inc gs sub fstps enter cmp (bad) gs add xor and jl cmpsb fwait sarl test out lahf mov lahf cmpsb push fimul and enter loope and jnp popf mov jp xchg or add and mov rcrl sahf mov cmp mov daa sub adc inc in or xchg mov add dec pushf xor (bad) fmuls add mov jg cmp xchg inc (bad) insl jnp push arpl jl push and ret insl in pushf out ss movsb adc into inc dec jl jmp add outsl or mov (bad) stos xchg rcrl call push mov push stos push ss rcrb pop dec loopne add mov sub jnp jecxz xchg jo xchg fldt lds sahf scas or test sub rorb (bad) sbb call ret jae xor jmp push ret shll mov lods sarl push or in outsl and mov or (bad) pop out js cmc xchg cmp jmp iret inc mov pop sub idiv xlat push divb inc jae dec mov out test sub fsubrl fcomi jge jno lret inc sub rcrb dec lds ret arpl je jge shrb xor outsb cltd cmpsb inc mov pop into ljmp addr16 test sarb xchg mov sbb stos int mov mov push sti lahf push sub cli and xor cmp sbb and mov notl cwtl mov sbbb clc mov cwtl test icebp sbb movsb xchg or clc or cltd jge js aas and in cmpb jmp mov sarb roll mov jbe jle xchg test pop call push inc iret mov mov aas ds jb sub rol xor xchg hlt xor mov jbe mov (bad) push (bad) in inc fidiv xlat xlat xor sub (bad) push xchg imul test xor scas clc movsb lods push inc add jns mov and mov ficoml pop data16 and xor insl pop mov cltd and or adc lahf shll mov leave dec stc mov lret adc adc pop aaa jmp jg xchg and repz and mov add or add mov mov jns mov inc ret mov push push mov cmpb out push pop jnp ret sub out xor sbb roll insb sbb fldenv (bad) or jl jecxz gs fldl lock adc adc popf mov pop jns mov push (bad) or jl cld lahf xchg sahf push popa pop addr16 adc mov sbb ret pop enter roll dec adc inc (bad) inc dec sub adc insl jp mov std cltd push aas push ja sarb pop mov jp adc xchg or insl lea push insl mov add lret ficomp mov mov jmp movsl xchg movsl es push loope movsb push (bad) inc out movsb cmp gs inc jecxz jle or dec lret stc cmpl adc test lret loop push adc jbe xchg jns xorb out fadds insl push insl xlat movsb jne aas cld aas sub or rcll lahf xor leave push pushf fisubr shrb cld movsl out cmp dec fldl leave or test inc minps cmp add sub ret loopne dec sub fadds into adc sub iret xor lods lds ja js cmp and adc sub addr16 aas cmp (bad) jecxz sbb mov add fnop stos dec sbb outsb mov and xchg das jo or iret lret jmp xchg negb aad std mov sbb dec pop mov mov (bad) push push dec mov and push fstp testb sbb jl sbb mov mov (bad) clc mov cwtl scas pop or iret enter mov clc fiaddl push lret and out or mov add mov rcl das jle cmp lahf fildl sbbl xor push aas arpl stc push ficom aam sbb insb add cwtl or test add push nop in push (bad) xor mov das pop jne sbb mov jecxz in lret in dec and ljmp adc test stos pop sub test (bad) push jbe mov pop sbbl stos or add xchg mov imul mov inc sbb stos mov imul gs push add xor xchg int3 push test lods ret gs mov xchg jp xor sub jl pop mov sub fidivr out lahf in mov test inc jge pop cwtl dec stc mov ret hlt lret bound and in sti xchg lret push mov stc imul pop cmpsl push or hlt pop ja imul js (bad) or pop and cltd into jmp push (bad) ficompl loop dec scas and aas shll jmp sarb jnp cltd sbb adc mov fimull cmp inc pop stos ljmp jl pushf or (bad) sbb or fistpll inc sbb or add stc and int inc das inc cmp lods sbb (bad) mov das into mov sti aaa cltd fs cli lock xchg mov adc xchg shlb pop test sub (bad) cmp fs mov push fs push sbb sbb movsl and mov xor frstor (bad) lcall hlt fsts cmp push scas mov outsl les dec pop mov subl fsubrl mov repz (bad) stos add mov (bad) sub pop mov mov int mov outsb adc loop out mov push lods lret imul add je and jo xlat lahf mov lahf ret fsubl js and xor aaa push bound mov jnp jno pop mov sti or cmp add xchg add mov in sub add add sub cmp cmp out xchg mov push scas rcll lret jb dec sar sarb add jbe inc sub mov pcmpgtb mov rcl pop test stc jno mov rorb dec jne stos pop scas xchg push popf jne push push test js push ror or hlt scas xor das pop pushf in dec mov sti jb stc cmp aam adcl enter enter adc push maskmovq notl mov inc addr16 aam sbb aaa jns sub out dec stc ret rolb (bad) mov (bad) cli loop shrb iret xor push dec and inc push sbb loope xchg push into lock ss cmc jp cmp xchg jo jge fistpll int inc in les adcl cmpps aad lock (bad) loop adc xlat cmp repz ret je lret (bad) xor dec mov dec out int mov dec push lret adc add adc sub fldenv test xor fistl enter pop dec xchg cmp fucomp loop push xchg aam in sarl cwtl jge mov jns jnp jmp xchg stos cli fiaddl push (bad) or xchg mov pushf (bad) iret inc or jle sbb imul loopne add gs (bad) sub popf movsb sbb xchg cmp imul enter xor incl jmp icebp mov cmp sahf inc mov push into aas subb ljmp scas jns cmp dec mov clc jmp dec dec add add aas js mov (bad) in movsl stos mov mov and pop pop jns fld sbb dec jmp jo (bad) call (bad) cli push scas shll cmp lahf jns cmpsb data16 cmp out ficompl arpl repz and jge mov push fwait push fsubrs pop mov cmp sub (bad) fldcw jnp dec int fmuls mov adc sbb or and sub inc pop pop repz andl scas sub fsts xor and push out mov and scas lods push xor or cmp inc pop adc out xor inc sbb mov pop call es mov fnsave fmull push jl dec mov cmpsl roll (bad) push rolb pop in insl jb add jno das shlb mov enter inc jnp mov roll jmp mov jnp fwait sar pop push je (bad) mov (bad) xchg mov push jp sub adc rcll js andb sbb xor jecxz fnstcw adc out and ffree negb (bad) js pop (bad) jp cmp icebp sbb cmpsl lods cmpl jnp repz scas mov sti fnstenv jns pop xchg xchg push inc into or in cld pop pop xor and pop pop negl inc icebp push push daa out ss pop adc in js adc js inc xor cld sbb xlat bound fs movsb jmp sub add addr16 sarl inc outsl dec shrb (bad) (bad) push fimul xlat (bad) sbb nop out rcll mov jo sti and addr16 inc pop pop pop jne inc movsl ret data16 icebp sahf xchg fisttp das push test call ja sbb iret xchg push push xor or adc lret dec je lcall sahf lcall fiaddl je fildll or repnz movsb fldt and or out mov andb xor xor xchg roll fdivrs and fnop add mov mov cmp pop add dec dec inc aas mov pop gs sub out cmpsl fnsave push push iret das cmp push int3 sub stos pop cmp xlat call jl or inc scas mov mov call test in dec pop fisubr fsts push jb pushl repz mov push fwait xor sub mov adc shrb add addr16 insl mov lods mov mov inc gs test mov mov (bad) pop adc fcoms cld mov push xor icebp fistpl ja repnz loopne jmp sbb cmpsb adcl out xor push dec repz int3 push jle icebp dec nop jnp mov or push stc movsl xchg inc aad fimul jne hlt mov mov and sub das add or jns xchg daa lds leave hlt cmpsb sbb adc loopne xchg bound add xchg stc popa rorl cmp test cmp (bad) movsb inc cs bound sbb or sbb mov (bad) repnz xor leave mov stos lahf cmpsb in dec into test mov push cld repnz fsubp sbb imul sub mov jae cmp jns sbb jb out push imul dec and cld jo adc adc sbb ds xchg fldl xor lods jo (bad) xchg bound adc jno (bad) push mul inc xor sub add lahf jecxz lahf pop inc jne mov fildll mov jne mov mov inc xor lahf xor sete cwtl es out adc cmp add pop jns xchg xchg lods lods cmp jne repz mov cwtl dec dec aad dec insl mov mov cltd cmp xchg rcll or sbb pushf adc and fcmovb cmpsb lods rclb cmp jg test mov cmp push cmovns add outsl or adc sub in sub pop fwait (bad) aaa xorl adc xor subl inc dec rorb mov add push or pop pusha cmpsl mov adc cmp xchg (bad) jl pop je cmp shrl or daa lods stc sbb push shrl shrl pop adc (bad) add mov loopne fucomi lea xor sbb xor sahf (bad) cmc sub jb cmc sbb call dec dec adc bound mov xlat fistl xorl (bad) loope xlat clc ret es add test loopne mov aad out ljmp push adc scas addr16 cs inc mov pop aam insl pop imull das (bad) inc stos mov cmp loop movzwl fsubl pop sbb rolb scas mov scas pop lret (bad) roll movsl or push xor popa inc enter jbe push mov loop fdivs sub push push pop leave inc in enter add stc inc push pop fcoms (bad) bnd lcall sub mov ljmp dec mov jg adc or je lret and sub popa and data16 es aas push cmp in xlat leave (bad) jmp (bad) mull fwait sahf push adc in or das inc loopne fdivp lods xlat loop ret sti lods xor cs push jg pusha cmp push jmp divb fmull cmp inc (bad) addr16 and mov out sub dec jg and mov xchg dec inc fstpl (bad) ret xchg into and out popa and (bad) xlat popa push add jge cmp aas ret js es ljmp pop lcall sub adc test xlat add pop fisttpl (bad) out js lods add sbb or cmp xchg mov bound jns (bad) lock jae mov jp ljmp mov xchg in cmpsl clc mov (bad) lods sub hlt insb cmpsl popf (bad) je cmp inc in mov jp or dec fwait outsl jae and sbb push xor push inc jg xor sub push ds popf ret fs cmp pop mov mov adc xor sarl aaa aad repz lea pop testb repz movsl and stos test or push cmc adc ljmp inc mov push sbb fcompl in or mov dec and mov dec cmovne dec pop das and movsl lods inc dec jb dec rcrl dec push divb outsb push jae sbb dec out (bad) mov xlat mov out mov push mov xchg inc push xchg inc cmpsb fadds inc jg or in loope ja lahf adc aas adcl inc add lods aam sbb mov adc arpl or popa inc out xlat sbb (bad) xor and mov call push mov pusha out outsb jmp jl jl sbb fisub inc int test aad iret frstor jno clc rcr pop jecxz jno adc mov insb jbe sub inc call mov sbb pop test mov xchg fdivs sarl out int mov push lea sar jno cwtl dec and jp cwtl test mov mov cld cmpsb mov or mov je aad xchg mov nop movsl ss aas push jno mov leave repz cmpsl sub cmpsb lock push add mov fsubrl rcll jno sub outsl dec lods sub cld jmp jbe fwait push mov cmpsl cltd dec or enter add xorb in jne push aad xchg cld (bad) dec dec pop andl hlt mov jp pushf push xchg inc jle mov ja out scas xor push call lods daa data16 mov (bad) and sub iret pop test sbb loop inc fcomip fwait (bad) cmpsb mov lahf jl ret insl sbb fadds rcrl pand inc xchg sbb adc inc jno jg pop sub dec push lock into in mov fistpll mov add mov sbb mov stos mov xchg xor out (bad) out inc nop mov push lcall add mov mov sub jns mov add push cmp cmc sub cmp xchg push pop mov sub out stc cmp mov (bad) mov call fwait lea loope dec sti xor and fcomip jge jge shufps out jmp mov out xor int3 sub xor xchg cltd pop xor jo js outsb in int3 jo xor pop push call xor xor pop jae xchg push push dec iret lcall jno jne adc cmp ja aam push cmpb cmp xchg scas outsb (bad) sub xchg (bad) fcomi leave arpl in mov outsb into xchg xchg ljmp addr16 or incb xchg inc xchg push addb pop jb mov add lods popf jge xchg in aad dec mov out xchg aad jmp sbb sub outsb test cmp outsb rorb dec xchg push cli lahf cltd sub sti fs and adc mov lret hlt je sbb ja push divl add and mov scas jp or pop stos lock lret loop rorb and movsl pop scas inc les sub shr out push mov pop cli jmp bound repz xchg xchg pop iret test and inc shll movsb jecxz fisubl push sub ret lret inc cs mov pop imul add lea leave popf (bad) lock lds dec (bad) xor mov mov bound ficoml (bad) or xchg stc and mov sti push mov cmp movsl (bad) ljmp loope les popa dec sbb sbb test aad jge fwait sbb aam mov mov pop cmc outsb mov mov jb push sbb icebp jno xchg (bad) icebp xchg fs lods lds aas test arpl push or inc mov arpl test sub pop je mov aas inc mov mov scas (bad) das mov pop out mov ss xor or nop int3 cmpsb je call std outsb xchg xor xchg movsl ds insl dec popf lock out imul test ja and pusha enter dec dec xchg adc inc aam mov cmpsb out lods adc mov popf clc pop push loop (bad) test mov inc jp aad xchg mov aad and fdivp fwait xor cmp mov and test push xchg dec test ja adc cli or (bad) daa or sbb mov cwtl sbb and xor insl cld adc xchg jmp and mov nop lret pop imul (bad) mov inc mov inc inc lods std mov mov mulb add and jg addl sti mov xor cmp loopne imul dec and add cmpb test or jmp popf sub rclb push pop gs sbb aad leave sbb sbb mov mov pop mov push es loop lea cmp dec dec bound les push sub or movsl popf pop in cmp cwtl xchg stos stos cmp mov (bad) in es sub rcrb push imul out sbbl aad add mov les mov repnz out aaa scas add mov xor popf cli pop fwait in and xchg sub sub fisttp rcl push and and push adc pop jge pop ja mov pop mov sbb jb jecxz leave and int mov leave add cmpsl mov (bad) btr adc aam fisttpll pop push je pop mov les stc adc repz adc dec cmp sar push gs js rolb xchg cmp out jno imul pop mov sbb pop (bad) xor sbb xchg xchg ja add xor lret or cmp push lret adc repnz test repnz insl (bad) mov insl adc push push push dec je or xchg fsubrs jle push push test jbe or dec inc cmp jnp push fisub lods fcmovu mov outsb insb inc stos mov mov sub cmp jb push gs and push xchg sbb or sahf xchg pushf sub pop jns or out adc outsb cmp out negl mov add sub cmpsb add movsb and mov aam scas test sbb hlt sarl push loopne mov mov mov movsl nop inc out test cli adc dec pop je pop xchg cld mov lods inc insb stc fxtract pop std or gs jno arpl or into mov add sub mov js xor inc fcoml and (bad) ds pusha jmp dec push mov mov sbbl or es mov adc in push jnp imul ja xor jo jle imul enter sub inc or inc into jbe jae bound bound pop or (bad) jo xchg pop inc test jbe jns jmp cltd loop das cli cmp push push cltd fisubrl pop jnp iret and mov lods xor inc cwtl negl sub cmp xchg fcomps ds cld inc scas test in or pushl adc push adc popa sarl dec xchg cmc sbb jae cmp pop rcrb gs popf addl jle xchg or push lret setg pop fimull std fcmovnb ds jp sub call pop arpl xor shll or and adc mov insl mov imul aas subb popa nop rorl std stos xchg push ret es ret pop xchg adc xor aas out push lahf jnp jmp leave idivb xchg cli in cmp mov mov mov fist sub pop scas in inc cmp lret mov cmpsb mov lret sub int3 adc iret mov and mov push negb mov and testb leave sub pop fsts and mov inc mov aas jecxz dec cmp cli jbe stos push cmpsb sub inc pop addr16 pop xchg jl mov pop in (bad) xor ljmp daa in add imul mov out jl imul mov jmp and stos popa aam pop jge outsl lret stos pusha (bad) out sbb mov roll adc or jecxz dec icebp inc lret xor mov xchg cltd sub lods jnp dec push pushf add push sbb ret mov sub (bad) sbb mov (bad) call sub int3 inc jle pop xchg js fsubl and outsb cmpsb ret push jmp loopne mov arpl add dec dec jnp pop mov (bad) notb outsl jnp mov testl outsl ss mov (bad) out addr16 and test and dec xchg out xchg xor add cwtl mov arpl and cmp and mov xchg insb fistp push dec sbb movsb loopne rcll loopne jno,pt adc and popa mov pusha adc and mov mov hlt repz xchg (bad) xor fnstsw in jp xchg inc mov jl test loop aad rcl jg inc and add rcrl add sub adc into aas fwait lods mov sbb out jno pop or add aas inc test cmp leave stos jle add xchg inc insl out inc and dec and or nop (bad) push nop lods mov and popa mov dec jnp into movsb jle xor add ljmp mov push jg lea add stc inc int3 dec mov in sbb bnd xchg pop gs mov aam mov popf hlt rolb movsl adc xlat pop fidivr mov addr16 push aas mov pusha aam mov lock in mov xchg aam cmp xor pop lret aam fcompl pop pop in imul dec fnstsw popa push push cmpsb add in xchg lcall dec cmpsl imul out xchg pusha push mov lret add (bad) out pusha (bad) or cmc decb outsb insb aam mov cltd (bad) (bad) ja (bad) ret hlt repz imul inc mov inc shr into mov es xchg fwait push test test add pushl nop mov adc jb imul mov fs in push (bad) fildll inc (bad) or jle pop dec jae outsb fdiv pop and repnz outsl imulb ja call loop mov sbb push adc or or scas icebp sub out lds cmp jge stos dec in adc cmp in stc bound pop mov lods iret jne jne cmp mov int3 jmp sub out fimull add ds movsl push imul jg cmp dec xchg and stos stos add fadds loopne add stos je enter das lret in xchg sub fpatan out xchg js cld mov jno cmc pusha add cld cmp out rorl movsl cmp sbb xor ficom fcoms jb loopne fsubl push test gs mov push dec or in loop jg xor dec add xchg cmpsl push popf das mov dec dec cmp es sub hlt test outsb cmpsb cmp test outsb inc mov (bad) nop jge mov add (bad) dec and fist add sbb xor ja cs nop fsts int xchg cmp outsb mov scas adc pop rolb mov stc mov aaa lcall test or es push sbb aaa inc decb lods int jns mov push pop dec out jg mov leave fdivr sub rolb dec pop ljmp fidivr cmp pop jne jp test sub cmc inc xchg ja int3 stos add mov push mov in sub cmp cmp add adc cmpl lds push add cld mov nop int inc sbb xor mov push sbb lea inc mov js jns jge mov or fs and cmpsl popa add mov idiv scas xchg xor dec dec cltd push aaa mov xor cld sub xchg or aad xchg fbstp ss das cld sbb adc pop sbb loopne mov inc ljmp pop (bad) or mov pop push lcall cmc and in enter hlt lds add mov ljmp or (bad) pop xor repnz sahf or dec cmp xor xchg fisttp leave in sbbl dec ss or push shll (bad) loopne dec insb fldt fbld pop sbb (bad) mov (bad) dec lcall xchg (bad) cmp jecxz inc inc stos pop scas lods mov cli jp cli sub aad jg loop pop jp iret sub xchg fcmovnu inc mov test loope rclb cmc jno push notl mov inc and pop sti or rcr mov out adc fdivr adc (bad) cli lock mov fild es (bad) add cmc and fldt xchg push push insl xchg pop cmp xor pop into add inc ret push add iret sahf pop push inc push popa int sahf push dec fstps ss jle inc add stc jo cwtl push leave and add out mov aaa sub jl xchg jnp int3 popf rorl cmpl into cmpsl pop and aaa ljmp sahf cmp jp,pt mov (bad) fisubrl xor cmpsb mov cmp popa cmp imul vcvtpd2dqy mov js push (bad) jne jns fs adc mov jbe insb (bad) push sbb mov jecxz xchg jno xchg dec mov xchg mov fs cmp jl xor pusha push loopne out js (bad) xchg or jecxz push mov sbb pop vmovdqa push jmp icebp sub out jnp xchg insl in mov cmpsl mov loop ja addr16 cld sbb pcmpgtd lcall pop push lock icebp pop cltd mov out jo inc lock xchg xor stos icebp (bad) lock jo xor push jae int3 shlb ja pop push dec cmp ret push stos dec jmp pop mov mov pop jae jnp jmp rcrl fdivrs (bad) xchg leave xor mov popa and pop repz inc adc cmp push jle fiaddl cwtl dec sub or adc jnp inc jp call sbb test push dec outsl adc lods sub aaa dec xor std push clc addl pop leave push sbb jecxz repnz dec repz into sbb (bad) adc xor hlt rcrl (bad) (bad) out leave add repz ret xchg push je inc cltd out outsb sub or les jbe mov bound fwait cli je dec and ds clc dec mov xlat mov daa mov hlt mov dec lahf push push push sub ret mov (bad) lods subb in jle push mov jns xorl fiadd mov inc mov stc popa or add push das icebp in jl cwtl or aas mov not xlat imul sbb outsb into mov dec and add xchg fwait mov scas sbb jecxz or xchg pusha dec (bad) xor sub dec movsb cmp out (bad) and sub sbb loop mov sbb cmpsb push sbb jns pop jae fnstsw loopne jo jmp cmp push dec test fstpl add dec scas std pop adc test lea scas or mov aas mov fwait iret xchg xor ss aas mov mov pushl stos dec sbb rdmsr push jp or jmp mov cmp mov pop cmp lret jg inc sub adc xchg fwait mov pop push fdivs fnop sbb (bad) lds add int lcall loope sbbl shr or out rcrb mov je js jns je or in call jo sbb rolb dec xchg data16 mov xor xchg insb cmp mov pop jne std mov xor dec outsl adc fs jne imul sub loopne fistpll mov inc dec or pop les stc shrl add ret sub sub es dec mov pop push push (bad) cmp or xchg imul pop cmpsb mov arpl cld (bad) xor cs xchg mov int3 dec lcall adc jmp pushf jno mov push pop sub cmp and rcr jge jns outsl fiadd stc lret (bad) aas adc scas imul inc in shll adc jbe aad pusha mov sub jl pop ret pop push jg jmp vpunpckhdq (bad) mov loopne in adc add jns push shll sti xchg icebp gs add lods lods enter mov adc dec daa orl push movsb sbb pop and out sbb sub dec jns mov mov mov inc jno mov sub scas aad stos push inc adcb imul (bad) das sub push dec and mov sub inc jnp cmc push inc ljmp dec dec add pop pop sub leave mov cwtl int (bad) mov scas fwait mov sub aam in adc lea cltd push lcall add lahf outsl or (bad) lods faddl pusha or ret (bad) into daa icebp cltd daa lret xor (bad) js repz xlat mov fstl fnsave push and hlt cmp out (bad) jmp xchg into add push fsubp mov (bad) dec sarb cmp insl repz loopne and aam popa push jmp sahf loop outsl test je (bad) es sti xor xchg sbbb ljmp mov std outsl hlt lret and push mov in (bad) add cmp and fsubrl pop fdivl cmpsb push mov adc insl cmp jmp pop std sub mov inc dec mov je inc inc movsb cmp (bad) daa int sub subl jl les decl sahf pop pop fwait xchg xchg push fcoms add cmp or ficoml leave fwait in xchg stos xor movsl (bad) fnstsw outsb (bad) sbb cltd sbb subb out dec in lock adc movsb jb jg aad dec add fwait (bad) dec mov (bad) dec dec or pop scas cmp fs jnp pop dec add jns fcomps rcr jo inc add je into push aaa jmp mov push ljmp or jno test jno adc push xor sbb enter outsb mov push push inc fwait mov mov sub and xlat ret mov fistl xor std adc or sub imul xor lcall cmp mov loope pop jno add mov xor jns cmp sub jno inc std adc xor ret bound sub push xor out mov jp or sbb push aaa outsl loop cli mov push add adc stos push decl sub sub rol loopne add pop jge add add pop pop sub jge adc fnop sub jle aaa dec rorb pop mov ds fadds inc aad mov pop sti repz stc es cmc xchg loop xor test mov mov (bad) cmc outsb gs scas insl lret sub stos or addl (bad) jmp mov cli jns (bad) adc (bad) xor mov mov aam (bad) sti push icebp out xor pop dec xor stc cmc mov in mov in or push aas jmp inc call lahf cwtl mov fwait jnp ljmp jnp mov pop pop shrb icebp out std je pop mov daa xchg pop lahf pop xor mov adc repnz cmp out or push arpl subb inc test cs push in out cmpsl in jns int3 fcmovnu xchg and mov mov cltd mov xlat push clc lea arpl pop rcll (bad) sub adc push mov dec (bad) pop push out inc dec int3 daa jnp jp fwait test (bad) in or jecxz or lods xchg addl dec movsl fwait pop rcrl mov daa jg adc sbb loope pushf into xor out out icebp mov xor cmp xchg lahf xor ja shll cmpsb movsb mov push push mov loopne jge out xchg mov ret adcl (bad) xchg test mov cmpsl mov cmp mov pop stos adc icebp jecxz mov mov xchg leave lds push xchg and cs inc xor add test cmpsb enter mov cmp cmp (bad) xor sahf out cwtl xchg and inc movsb (bad) inc pop mov insb and stos outsb les and xchg pop mov ja or pop xchg add leave xor pop call popa pop sarb dec imul mov sahf jge jg arpl test and fidiv jns fbld inc mov (bad) mov pushl pop out jl (bad) mov fisubrl jnp gs cmp xor mov ja push cltd xor mov leave std sub int3 inc (bad) jp push pop cmc in fidivrl inc sub or dec cmp aad add adc (bad) push movsl adc jle pop xchg sub jg sub push mov dec js inc jle dec mov sub shrl pop xor sub xor icebp dec push popa xchg pop mov (bad) ljmp push or push dec stos movsl mov scas xlat mov dec test (bad) add mov and cmp pop cmp sbb divl cltd hlt jecxz (bad) xor ljmp inc outsb jge add xor js into dec mov mov and cld mov dec lods jmp push jae shr jg rcrl mov jnp je sub dec dec pop lret push pop insb jne iret outsl cmp ds adc pusha fbstp fistl in or pushf loop and sub (bad) pop pop xorl add andb mull and repz cmpsb testl sahf mov mov fstp loopne hlt and fisub add (bad) ror outsb sbb popf sbb cmp ds jne in xchg push insb ret sub dec cmp inc in xchg or mov cmc mov dec ds jbe test fistl sub das adc popf iret jmp mov mov iret mov icebp sahf in add pop push lods in jg ret daa adc pop lods mov xchg mov cwtl repz pop inc xchg (bad) (bad) jae pop sbb dec add jge or shrb or notl (bad) icebp lret lds call jmp inc jb scas clc mov or mov sarl sub stos or arpl rolb and cltd sub pop sahf sbb push dec jle add test push ds jae cld xchg fs test aas pop and (bad) in fnsave test hlt imul mov push cmpsb fidiv xchg mov cmp and pusha jbe icebp lret ljmp dec lret cmp adc push or push xchg mov mov icebp jno stc lcall sub lods sbb and add es push (bad) mov (bad) data16 into mov (bad) jnp mov lock xor cmp roll jo stos cmpsl iret mov in or xor push cmp mov jl sub adc out jo daa xor loope test cli repz jge fsubs ds stc subb push jo jo loop and (bad) mov test aas sub xchg outsl jne xor xchg in (bad) xchg out push sbb gs je idivb les idiv lods mov or xlat push mov jle xchg incb dec aad shll icebp in xchg and cmc push (bad) scas arpl lcall movsb (bad) (bad) lock cmp fimull or incl fucomi stos into stos pop mov xchg scas push orl lea sub aas and cmp sti jnp inc xchg and adc roll (bad) in jp addr16 jl movsb cmp xchg push dec adc mov movsl cld js jge sbb dec cld test push jbe (bad) jae push mov out xor fstpt xchg out and jns mov (bad) dec xchg sbb test xlat mov mov cmp xor adc shll xchg or and xchg aaa jecxz xchg popf cmp negb dec xchg enter lret pushf pop inc dec pushf cmp addb pop iret pop loope icebp push mov and mov out (bad) leave add jb decb mov push cmp es js,pn daa stc adc in (bad) lods (bad) push pop (bad) jae push ret and jp and pop jle jecxz imul arpl addr16 mov das jmp test ret in popa insl jl cmp xchg sbb cmp mov pop fidivr dec je loope jle insl ror or or jns pop pop divl mov lahf gs leave inc xchg sub inc stc rorb hlt sarb das adc inc into imul mov flds scas pop lock mov pop jne cmp mov into dec incl push push or (bad) aaa sbb xchg aaa mov rcr out icebp add icebp stos stos cmp push mov add faddp xchg sub imul push (bad) push loope push jo sub push jge mov jae cmp les xor int movsb daa mov mov pushf sub dec (bad) xor xchg cs cs mov pop in push and les jmp xchg les rorl push sub adc dec insl add xor outsl cmp inc cmp adc cld fiaddl lods (bad) out hlt mov jnp lds popf pop fsubrl imul scas mov xchg mov push xor cltd nop adc dec xor divl mov ret xchg rcrl push loope push sub add pop aaa fdivp xor cmpl rcll ficoml or adc daa xchg xor pop ja inc jp aaa inc rol std pop inc int3 daa xchg loopne mov rorl cmp sarb ret imull mov arpl lahf aad dec cmc mov fistpll xchg pop outsb pop mov jbe cmpsb dec mov push sti aad movsl sub sub cltd push inc mov adc fsubrs adc icebp js dec mov mov cs movb or push mov pxor in loop push stos popf sbb (bad) std lahf adc shll ror pushf mov inc push out or enter into mov ds lock xchg pop inc adc or or cmpsb nop popf mov pop jnp adc in std in inc scas cwtl inc dec add ds repz out out call popf jno arpl fcomps mov push cs or rolb mov jns cmp sbb or je lret (bad) int3 sbb push sub arpl mov or and icebp outsl mov add icebp rcrb arpl push or mov pop xor and adcl jmp xor xchg add cmp divb inc pop jb (bad) mov sub nop pushf cwtl sbb test sub mov jbe pop mov ret xor and jle fdivl sub push stc popf sbb dec dec test xor cmpsl xchg ss mov clc push or xchg xchg push xor sub outsl mov push insl cld ds test inc pop cmp push mov scas test stc out push pop mov out pushf or xchg sub call pop mov sbb push mov mov xor mov movsl (bad) cld cmc fs mov xor (bad) mov repz mov inc aaa inc loope (bad) or cltd nop pop add adc push adc mov cmp xor mov gs pop aas clc clc (bad) mov cli loopne adc push add add je imul rcrl mov push nop dec push (bad) or je popa or xor lods mov ja imul mov fisub ja dec xlat lods jb mov js in rcrl cltd shrl test ffreep test sbb imul adc push push mov lcall xchg mov in js in pop sbb fimull pop daa sub or pop sbb call scas xor ds cs push dec xchg jl xchg aaa or jge pop sub lcall mov mov push pop stos (bad) xor lret nop fisubrl sar inc lahf sbb repnz aaa sub fstl or dec jb mov push jle negl fldl (bad) ror les push mov sbb mov jae cmp push rolb (bad) loope jle adc adc jmp inc ds adc andl push imul jae pushf dec out xchg jge out outsl movsb aas idivl xchg inc jns adc aaa lret sahf daa cwtl sub cmc or (bad) push push stos (bad) or mov pop and sub or popa pop cmp jb cld lods inc repz mov and push mov ret insb loope xchg imul dec xor sarl ss or test jecxz pusha call xor sbb add stc mov test stc or xchg (bad) lea xchg lret (bad) sbb or or pop pop mov mov adc jmp xchg or mov inc ja out mov loopne xchg fbstp lahf lcall ret fildll adc mul rolb xchg push fisubrl jns cmpsl fisttpll or push adc fcompl lahf jno jge jmp pop jle push imul insb leave in cmp mov mov or mov lods adc sbb sbb dec scas and ja push test call xchg mov sti out jmp mov (bad) ja rcl sub mov xchg (bad) jno std jecxz cmp mov enter rclb pushf mov cltd addb push movb sub add daa sbb decb inc test jnp xchg or pop out popa sub dec lret mov inc cld jg testl das xor repz cmpsb jl mov out sarb fisub add daa lea test adc (bad) xchg out ss xchg scas push or and sbb sub ss and scas mov lret and jbe mov jmp out pop cli dec lcall stos and xchg cmp popf nop mov popf xlat jbe ja mov sbb or cld xlat mov pop outsb lret add inc or test adc pop dec xor dec call mov inc imul mov pop in out lods push scas cmp mov outsl and add inc jg fdivrp push mov movsb jmp pop add lfs mov push mov (bad) fistp xchg mov test iret mov pop loopne lods pop cs sti ds push les cmp pop push les mov in in xchg call imul (bad) mov cld lock or fadds sub in pop test or es out movsl lds es scas xor ja or jo sbb xchg or dec loop and ljmp in (bad) xor test inc and or cs das mov imul mov ret xchg mov insb xchg pusha xchg push push shrl mov add nop into iret push test mov xchg add inc mov push push mov dec sbb jecxz fsub fstp (bad) push imul dec jno and dec (bad) mov jae cld add sti divl mov test adc ret lcall adc insl pop lods or inc cld and mov xchg or or jno hlt pop push sbb outsb (bad) jno pushf sub jb dec das and xor out jne (bad) jbe adc inc in pushl pop sbb mov testb and or push fnstenv inc movsb xchg ljmp push mov aaa add fstpl mov movsl sbb dec pushf cmp mov mov pusha mov sub mov add pop dec jno sahf jp xor mov sub fdivs xchg inc jne add sbb mov push in or push or adc call push mov out cmpsb frstor dec jp mov mov imul repnz call (bad) sarb jmp das mov sbb inc jp es push andb outsl mov (bad) xchg cmp mov jl les frstor dec js mov lods xor ja sti pop inc jle outsl lcall cwtl and mov mov flds sub lcall xor push dec pop into add push js lock push cwtl in cmpsl and into mov loope push ret data16 mov aas jecxz cld mov xlat test sahf addl add cmp sub xchg (bad) (bad) enter (bad) (bad) sahf fild in sub cld pop lret xor xor ds adc (bad) cli adc jnp mov subl dec fildl ljmp cmpps (bad) bound pop scas pop or aam mov iret sti cltd test sbb out jnp icebp mov in dec pop sbb arpl jle rcrl aam inc fs sub jo jecxz (bad) mov cmc cmp (bad) lret xchg aas push fdivs sarl xor add jecxz push xor or int3 or es dec mov jl addl inc out and jl fmull xlat mov aad dec pop cmp imul mov inc fistp xchg push fs (bad) imul inc scas push mov sub int jns sbb data16 push pop xchg lea pop xor jle iret repz sbb sahf mov pusha push jge mov mov xor pop pushl mov hlt nop sbb int mov outsb add adc aam lcall pushf stc adc add push cltd mov ss pop scas ds mov cmpsb imul loope pop cld lock scas imul xchg sub fiaddl cld cwtl les adc dec mov (bad) jno add aaa (bad) sub dec mov fdivrl das inc in movsl sub push and fdivrl adc jmp scas mov enter pop cs int cwtl es jmp add and sbb cmova arpl pop sbb jae push inc shll add or xor (bad) hlt fmuls inc inc inc repnz fs shlb mov loop mov adc and lock or (bad) std ret cs pop jb sbb xchg inc jg mov ffree ss and push in cli mov inc cmpl xlat mov (bad) xchg psubq or sbb es fimull dec xchg std push mov or dec and divl dec inc and push nop (bad) scas (bad) xor into xor aas add dec fs es cmpsl pop lds scas inc ret lret push jg inc (bad) mov scas lods cmp int3 dec push pop push jmp (bad) jbe and imul add add dec scas das in mov jge inc adc clc cwtl push xchg aas inc daa dec and sub xor inc adc divl mov mov pusha push mov (bad) je arpl ffreep js inc sti and je adc xor shl xor out test inc pop jb and inc jo outsb mov sub sub jl int xchg pushf inc sbb or in mov loopne ljmp rcrl out pusha mov fwait inc lea xchg xchg mov scas lock repz xchg dec cwtl jecxz aaa aaa mov sbb inc mulb inc aaa adc cmc addr16 push cmp mov cmp (bad) dec jns jecxz xchg arpl mov cld cli loop adc pop popf outsb into stos jae jbe jno popf insl sub pushf movsb xorl inc loop inc mov mov mov in sbb mov mov jl xor or stc jbe shrl xchg jnp inc push mov or enter cmp dec adc popf add jle and in xchg out lods lds ficomp cmp xchg int add xchg xor in pop bound jo xchg stos and mov fisub mov ret inc pop mov mov jp daa pop fstpl add imul mov test and jge mov gs push fs mov mov insl gs pop or dec jecxz mov loop push stos or pop adc push (bad) pusha aam sbb sbb push xchg xchg jmp das ret mov popf lret pusha jl add enter incb add push cwtl rcrb mov inc dec adc add mov stos and lock inc loopne sbb fisub pop add scas aas aaa pop repz jle hlt and cld mov and pop lahf movsl push xchg mov ret pop addr16 cmp cmpsl popf in icebp push movsb es scas cmp (bad) mov mov push outsb cmpsb movsl in or scas in push mov fnstcw cmp stc mov cmp shll roll mov loopne cmpsl andl (bad) mov inc push call imul add lock stc lods push or paddusb sbb jae lahf inc icebp xor gs mov pop out sbb fwait add pop mov push mov push add adc xchg shrl les lret mov les fidiv mull inc addr16 sbb jge mov pop push pop lods cmp (bad) xor mov sbb ficom lahf push into fisubr inc adc cmp mov or cmc insl inc or add shll sti cmpsl mov mov test adcl cmp aas fidivrl cwtl jns cmp movl xchg pushf xchg fwait mov inc bound mov cld mov adc jae push and lock fwait and and push icebp (bad) push scas loopne cmp xchg add jmp cmp mov xor adc orl sahf lahf mov jnp cwtl or mov (bad) xchg or fucomip aas mov xor xchg stos cmp xchg cmpsl or xor push jg loope sub xchg pusha dec hlt out repz push jnp or (bad) and fbld mov test fisttp adc loope,pn cmc dec mov cmc sbb (bad) mov test pusha mov or lret sub clc test fisubr push imull mov aam lret and movsb or (bad) pop xor cmpsl enter sub stos xchg or dec push inc push aad adc xor xchg rcr fidivl in fiaddl adc mov push mov mov or mov mov movsl inc sahf pop lahf push repz cwtl das jbe out std ficompl adcb jecxz outsl in sub lods ja push rolb mov adc ja decl sahf cltd add movsb in outsb fstps das mov das push pop xchg enter ret add into xor pop nop (bad) (bad) cli (bad) (bad) adc inc nop sub ficompl adc shlb out or mov popa jo sub jmp loop xchg jno jb sub mov in sbb test pop das ficom loope mov lcall movsb cwtl xor ficoml aam jo push data16 scas adc psllw cmp std and pop inc jns push test or mov imul lds inc add mov sub les pop jecxz mov cmp pop stos or and aaa jbe adc and mov mov fisub adc adc jle xchg pop mov inc (bad) push pop mov imul xor pop repz inc jmp out test cmpsb and push test and out inc push adc fwait aad loop mov mov fwait ss nop mov dec (bad) fsin pop mov push lahf mov pop mov sbb push (bad) add int3 dec les mov test push cwtl scas cmp in out mov sbb adc and (bad) out andb add ficoml mov add outsb mov jp jbe test adc (bad) jbe xchg fildll sbbl fwait sbb test pop jnp neg nop sbb imul mov fist push ret lods and in pop adc xchg out mov call ficompl sub add stos call pop stos push push sub idivb (bad) lret sbb arpl sub mov aad or popf push add push add js aas sub add setno fdivrs cmovge aaa les mov xor dec push decb scas arpl mov mov xor std andl inc ret mov bound pop stc jbe pop push xchg fwait pop dec inc cmp xchg imul jno dec xchg push jmp pushf call test outsl stc test nop xor popl sbb movsb mov dec int dec jge and (bad) jnp (bad) jae xor icebp mov mov test xor mov cs dec mov lock add (bad) xor lods iret add out bound inc or or and mov pop sub xor aad mov push pop jbe ljmp dec stos adc test addr16 adc jne mov cmp pop or hlt stc jp pop push mov sbb je lea xchg adc or adc fcmove xchg and rorl xor daa or pop nop sbb xchg add call push iret dec inc mov ffreep pushl sbb mov test sbb push lret push mov sarl dec stos mull or scas ss xchg mov push ret lods mov shr jnp (bad) out and mov sbbb out ja imul mov adc clc inc stc dec lods add adc and pop pop out lock lret lods (bad) jp sti pop sbb cmp push cmpb push push pop stos fistp test mov cmp mov hlt mov sahf lahf addb push mov and ljmp in movsl jmp popf push into or out addr16 sub outsl inc aas lds pop movsl sub cmp xor cmp xor mov and enter popf and std mov xchg cld fildl mov out imul jns das or sbb xchg xchg imul sub dec fdiv gs orl mov push hlt test sub mov xchg loopne,pn mov bound (bad) ds js inc and (bad) fidivr push jae cmpsl push fstp lds push stos pop mov cmp aad bound cs stos mov push iret mov dec test xor mov js in push mov cmp push add inc lods in lret int mov subl push pop sbb jb inc popa inc add push loope aad out xchg clc ss addr16 mov test clc imul mov movsb sti or xchg dec pop sub mov cmpsl mov in aad in jnp ljmp (bad) ss in imul loope mov cmpsl (bad) mov lret jb les aaa shlb lods push pop jle mov addr16 add es cmp insl sub pop cmpsb xchg mov test popf daa pop pop inc or mov icebp dec and out sbb mov or ret hlt lea sub fst add mov mov scas ja into stc push mov cs cmp sub xchg pusha mov and lock in lahf cmp sarb outsl iret mov fwait jne adc jnp loopne sarl xor push xchg xor push pop das cmc addr16 lods pop sbb mov inc adc add cmp mov cmp aad rolb addr16 mov pusha ss jmp xchg mov xor aad int3 cmp fsubl push push mov push movsl push arpl repz dec rcl push ja pop adc mov enter data16 in adc lcall xchg nop mov icebp leave adc jns in (bad) cmpsb and movsb inc or push sub mov cmc mov mov or sti and add out aam bound out inc jmp xchg movsl xlat cmp mov push push movsl jo adc pop sbb pop cmp mov (bad) pop lock add mov mov pop inc jae (bad) (bad) push inc xchg ja fdivr gs shrb mov iret sbb fdivs ss add fsubl xchg sub popa cli std xchg and (bad) inc lcall test fs data16 insl scas sbb adcb pop hlt (bad) lea out movsb jge mov mov sbb jo pop inc les cmp lods stos mov xchg lahf or in loop dec xor mov inc rcrl stos mov stc add add sbb fdivr cwtl mov pusha jp cs rorb rcr lods (bad) les outsb scas xlat fs stos adc jno loope inc bound jnp iret sbb imul adc dec jnp int jecxz jg test pop cli mov sbb xor cmp pop stos lods xor mov mov dec cmp sub lea cmp push cmc loopne bound mov sub in lods xor adcl or iret ss jl mov sub scas cmc mov into mov pop dec mov mov es ljmp dec movsl push bnd pop fldt aam mov cmp or push pop insl das and mov ds or rcrb adc insl (bad) xor cli cmpsb ret push arpl sub sbb shrl or cmp ds dec sti dec ds out int and loopne adc cmc (bad) sub lret jb insb lret push mov fs mov pop mov or push mov cltd hlt fnstcw js dec (bad) xchg mov pop imul sbb jecxz add jmp shll pop loope int (bad) sub cs ss cmp sti (bad) mov pop jmp xchg lcall mov rclb cmp xor ret ret sbbb inc sbb js outsl pop shll adc insb in loope push adc mov push (bad) lock push mov aas sbb xchg leave clc cs jb push xor push std cmpsb add mov cmpsb and sub lahf or leave (bad) les iret jb js repnz dec pop repnz mov lret pop test mov dec xchg mov call push jmp rcr mov or inc xchg jae jbe insb aam pushf mov jo pop stos add mov clc lret pop scas out mov jmp popf fstpl in mov les push lret xchg xor nop je bound adc orb lods pop lea pushl jae inc std lods sbb sbb add pop fsubrs (bad) stc and gs dec lcall subl in mov jecxz sbb mov into cmp and inc jno (bad) enter push jns jnp cmp mov pop out push movsb push (bad) into lahf (bad) push cmc rolb or xchg ret inc pop add lods arpl (bad) cmpsb sbbl imul cmp scas repnz les ret mov ret incl lret mov xor mov out sub (bad) mov (bad) int3 jp mov loopne inc and pop push aas mov jp (bad) xor dec hlt pop dec iret mov cs inc psubw pop pop test sub jg mov push (bad) mov inc mov into xchg mov jmp dec xor add enter xchg and popa rcll mov arpl in rcl jp imul mov stos sbb and lret mov add jno pop dec addr16 xor and js roll inc xchg adc fistpl sbb out loopne sti sub sub sbb (bad) (bad) lahf lret xor xor mov aam inc lret inc mov xchg faddl jnp ss int3 (bad) jae pop fcmovu mov or sub inc nop xor xchg xchg cmpsl xchg adc es out js mov inc sub cmp bound gs jb (bad) xor outsb (bad) and lea sbb push dec xchg jp pushf sbb mov pop jns inc sub lret cwtl data16 cld movsl jecxz inc cwtl adc push arpl rol inc dec add push pop movntps jbe pop add in and inc xor inc adc add dec test xchg dec mov jp bound iret jp lcall das pop xlat dec adc aam rorb sub ret ret divb dec inc push jp fdivrs rcl cmp cmp cli dec mov imul cli mov cmp in sbb push (bad) add divl in nop cmp add fstpl adc jne sbb shrb jp pop loop bound dec pop cmpsb roll xlat loop loope pushf jns cmc add xlat test lahf xor dec pop or or mov push dec fmull or sub pop xchg mov mov dec or mov loope sbb fstl int sbb iret mov out and stc pusha lds imul pop daa mov push dec iret mov mov mov xchg pop inc mov pop inc sub mov (bad) add sub loopne fnop and dec in dec (bad) mov and fwait sub scas fs insl inc cli or xchg outsl inc xor (bad) mov mov pop int push inc es std pop inc jno das lea lcall bnd jle and fild inc ds adc (bad) (bad) stc ljmp or xlat sar cmp ja push mov (bad) push or jmp inc adc pop mov fdivr dec sub outsl xor or xchg into xor leave inc nop sbb adc pop xchg xor push sarl mov lret mov jb leave push fstl or movsb hlt adc test sbb jns hlt add int3 out ja sarl sub loopne ljmp gs jns aad movlps adc sahf out lcall sub call loope gs xor xchg jns test push bound pop fdivl ficompl stc lret push out out daa loope or dec movsl mov int3 int xor es loope mov adcl fdivs and xor lea repnz pop mov mov lods xchg sahf je rorl xlat cmp cmp jne mov mov adc (bad) ds iret je ss push test stc out rorb xor pusha jnp in cwtl icebp dec call sub jge test stc jo iret sbb fistpll dec fadds lcall (bad) (bad) dec jg xchg rolb lret hlt adc sub aam adc push hlt mov test jmp add mov pusha xchg (bad) jecxz faddl loope outsb inc push xchg out pusha sub push ljmp mov jecxz mov fsts xchg mov movsl ja push push stc jb jo xchg (bad) jne ss pop inc cmp loopne nop mov (bad) clc mov or xchg inc popl repz adc pop movsb inc pushf add mov dec les mov pop push lods hlt pop icebp cmpsb hlt int3 push mov fxch stos shlb fwait outsb mov push movsb add push call (bad) js and adc mov add inc mov int3 pusha loop sbb andl mov or mov jge cmc sti insl add jns mov lret xor push or inc dec adc cli cmpsl je xchg push (bad) jle mov and mov sarl pushf mov xchg jge in outsl test mov (bad) mov push dec cmp int3 mov vmload dec push imul sti out dec negl adc lcall push xor scas stos out ret jb test jle xchg jg imul xlat mov jae xchg jno or xor or or push mov dec movsb inc repnz flds sbb in push mov sbbl and mov mov imull pop xor jns addl jmp sbb je sbb call sub mov (bad) xchg add sahf pop imul cmp repz mov cmpsb mov lea pop outsl adc vpmacsswd test xchg ss xor test mov pop insl sbb dec xlat int3 jns jmp ret (bad) sbb sbb sub popa sti pop test add cld ret arpl int3 aas push or sub push dec (bad) mov inc movsl xchg xchg push (bad) jle pop loopne insl lret cmp inc xor push cli mov clc xlat out ss test stc sub fidivrl addl in mov lea dec dec add and sahf and mov lret dec nop jmp mov ret cltd lret scas insb jne pop (bad) and stos dec jne xor popa (bad) mov dec sub popf iret cmpsl inc mov leave jp scas sbb ss jp (bad) pop cli (bad) in loopne jns loope stos aaa xchg cmpsl aaa (bad) idivb cwtl pmaxub in cmpsb mov int3 loope call pop cs scas adc dec xor xchg fucomp jb mov xor cmp je inc popa push pop sub lcall dec xor inc sahf inc gs out imul mov pop dec inc adc mov negb daa shlb aaa mov mov jae ljmp test mov lret into imul cmp not (bad) jne or (bad) xor jno int mov add std test stc (bad) xor jl aaa popf pop ja sbb cs idivb mov sbb insl lods pop stos sub or mov shr movsb pop adc mov mulb lds xor bound popa adc jbe pop (bad) cmp pop and pushf push lcall inc fwait ljmp xchg dec or mov (bad) add sub jnp dec ret sbb sbb cmp insl xchg cmp push sub cmp mov cltd mov ss sub mov sbb lea iret (bad) cmc cmp test mov out pushf dec ja lret push xorl jle lret cmp das mov and or pushf pop mov movsb icebp and int3 mov and pusha fiaddl lret dec sbbl mov dec int3 inc lret out sub enter rcrl sub xchg cmp stos outsb inc xor enter pushf lds pop std mov call add push insl mov dec dec out or push jne add mov mov cwtl cmp std mov adc hlt jns sub lds imul mov mov fst jbe adc pusha inc repnz loop inc (bad) clc xchg pop jmp or pop lods pop or mov mov mov dec fsubrs lds rclb roll in mov daa fs jmp outsb or dec jb lcall ss in mov sbb mov mov movsl (bad) jne jmp fcoms or pop test stc push fdiv xor es cmpsl sti pop jo inc int pop and or mov jecxz imul fwait insl fstpt add cmp lcall pop insl push ret inc fsub inc or push xchg mov fistp shll aaa pop pushf xchg or es mov fsubrs fdivs push mov loop ja hlt jns xchg subl or fsubrp out outsl and pop xchg jo ljmp sub gs clc in inc test cmc lock or fs pop repnz aam cmpsb sarb jp fs lret ficoml lret mov jbe pop pop ret mov push loope jnp (bad) xchg mov fcoml jmp sub lds cmp stos dec mov fs ss hlt out pushf push or lods push cld jae sbb jp,pt dec mov add xchg ret nop push pop xor sbb pushf lret js gs xchg push fcompl jae gs movsl inc call or sbb leave adc fsubs push int add mov and mov insb adc mov movsl push (bad) inc xchg dec sub movsl (bad) hlt mov and je (bad) popa bound or jge add jg loopne clc in into hlt shll xchg sub jo ds fs pop xor cltd pushf push fimull clc add ljmp sarl mov dec mov test xor gs test outsl add mov aam sub popf jecxz inc sbb pop mov cmpsl iret rorb add (bad) mov add mov (bad) xor fstpl stc popf aas sbb es dec in in pop push ljmp dec inc xchg idivb mov cmpsl ja lcall push aas insb dec test jp xchg xlat mov mov or jb sub insb fcomip push sub ds sti mov in sub ljmp es insl std jg fadd into pop dec xor lods movsb bound fwait push adc jg cwtl mov sub add inc lock pushf dec adc std sub mov adc push cs int (bad) ja call dec (bad) jl dec ds andl dec mov in iret sbb jle mov jge inc sbb dec movsb aaa fcmovnb in jbe stos cmp addr16 int popf cld sub xchg mov push ficomp push (bad) cmc push ret jnp sub int or cmp daa clc mov pop scas xchg mov push clc out xchg mov pop in xchg fild (bad) cmp (bad) push shll push or and jl inc aam mov js and mov (bad) sbb notl lcall dec jl mov sub mov xor movsl dec es into out sti or sbb add fildll or sub cmpsl icebp (bad) loop inc ds push fstps rorb mov mov (bad) popf decb dec fdiv insl cltd dec lea xor subb push jbe movsl ficom pop jns faddl adc pop stos push out jno inc dec mov or mov clc sub (bad) lock loope mov roll out shll cwtl ja pop les loope sub dec test add mov sbb cmp sbb repnz pushf fisubr (bad) int3 outsl adc cmp pop and push stos dec or or pop ljmp sub in mov lahf adc sub stc adc push mov and mov sbb cmp fwait push sti jae lock je jae sbb imul dec les mov mov mov cs movsb adc adc pop jnp (bad) inc fisubrl mov inc inc insl shll sbb mov adc jp ficomp mov mov idiv mov (bad) mov add icebp push xor and stos mov insl lods jle pop mov cmp (bad) mov andb (bad) ret pop mov daa jbe popf fs push stos lret mov test sbbl dec test sahf aaa stos mov jecxz dec cmpsl mov add push js mov pop mov and es movsl dec icebp outsb sbb std mov enter ffree mov jp ljmp fimull dec mov (bad) ret (bad) xor sbb cmpsb push pop sub jnp dec lret dec pop mov push sub in repz mov cltd xor call daa stc mov jmp and pop and arpl add add push lret mov and pushf loop sti mov adc ds and lock aas dec dec inc scas pushf jge lcall xlat and sub mov or cli pop or addr16 int3 insb mov inc rclb dec xor jle popf mov adc sbb das add dec (bad) out sub out inc imul mov popa in sbb pop jo add add repz data16 adc add push int3 inc jle out out push lret add mov pop cltd push xchg cmpsl mov fiaddl push add rdmsr stc cwtl out in rcll into jmp loop test inc aad mov das dec add pop xlat push xor mov lret cmc xchg jp xchg jle ret sub jl shll or idivl dec mov mov or inc or aas adc cwtl daa mov cmp mov push jl mov mov adc out pop cmp mov adc xchg xchg xchg jecxz lods mov lret rcr jo and stos add and xor lds jle lret adc pop xor mov jp dec aam jo or mov mov push adc pusha out push jmp mov dec lahf push sub cmpsb push mov pop scas add cld rclb (bad) or (bad) scas and jo in xchg sbb cs inc jge test xchg ret mov push cmp xchg dec sbb jo (bad) lcall adc or jbe nop dec stos data16 dec xchg imul mov sti mov mov repz mov hlt mov pop fisttp ljmp stc sub inc mov pop inc std dec push sbb es stos call sbb add inc lock jmp dec pop in mov cmp mov push sbb (bad) adc pop add pusha imul pop mov (bad) movsl movsl scas mov cmp mov test sbb lds aad jle jecxz dec push fbstp sbb ljmp cmp movsb cmp fiadd movsl das js sub loope jg data16 pop jg ds popf jnp stc repz push mov xchg in or sub cmpsb jb xor add xchg inc cmp aas add movsb or sti mov cmpsb sbb je iret add stos xor lahf inc pop shrb pop cs xchg aad test or call js arpl (bad) and cmp xchg flds add sahf das push movsb pop xchg push sub mov mov lret cmp aas fisub push fcmovnu inc and daa cltd rcll movsb sbb pop lret and fcompl popl imul mov inc lock sahf (bad) insb lret jle cwtl jp xchg ja pop jmp call loope cmpsb cmpsb dec or push jne sub aad and test xor mov xor mov jo inc ret cmc jb jae das loope ljmp sbb inc push test lods divl je imul aas into dec sti push dec das loopne push push insb dec pop scas insl scas dec mov je mov loopne and push jecxz les shll ds pop (bad) sub insl fstpl add sbb mov sti outsl bound rorl (bad) or pop outsl test push inc xchg fdivrl adc dec loope int sub push ja out pop cmp dec fisttpl lds ret mov lds jg daa ficoml pop popa (bad) xor xchg aam aaa sbb adc int and cmp jecxz mov pop daa inc mov ss dec fcoml push xor sbb cli push data16 gs ret loope and mov xchg pop movaps jns gs aas push lea add aam clc add push jns mov push addl mov add xlat ja xor pop test clc xchg repnz jl fcomps out (bad) jo fistp loope enter jge lret mov jne adc sub ljmp stc lods loope gs jne andl sub pop fistl ss imul iret push add adc ret lock xchg pop push jbe movsb pop cs pop inc je (bad) sbb mov jmp rorl (bad) cmp test push dec outsb xor stos ret mov imul movsl pop mov fsubs xchg daa aaa jns mov xor xor xchg mov iret imul pop sbbl pop pop fcmovnb mov icebp mov push xchg lea icebp or cwtl cli push in sbb dec mov xchg adc (bad) enter sub (bad) add or outsl push mov pop add fist test mov outsl add sarl xor xchg popf push clc jnp lret outsb inc mov adc mov push or xor jo in inc push insl in fs shll int3 jae outsl das mov mov das fwait imul dec xlat pusha (bad) jbe sub lods rorl lods inc pop scas andb pop rcrl dec jno and daa mov ret scas mov sub test call in cltd (bad) jne sbb loope push scas add iret inc jne (bad) (bad) mov int hlt iret lock (bad) movl xchg jg jnp ss fwait dec mov jno xor in cmp andb std shrb push or leave ljmp or pushf jno or lea out add dec push pop ljmp mov test mov add repz push mov cmpsb dec push stc imul test xchg push mov mov (bad) in stos fnstenv aas pop adc jge jge in movsl sbb add adc imul movsl mov clc dec cmp outsl ss dec dec jmp cltd ljmp mov and sub xchg arpl cmp sub jns or addr16 jmp jnp daa dec popl insb movsb mov mov popa movsb cmp adc sub pop adc or lock ficom test mov pushf push xchg je jmp sub lods psubsw cmp clc mov imul shrl out int mov inc jb mov xchg icebp fwait sbb or (bad) sub arpl sub add lds inc lds jne dec or bnd jo outsl inc fwait loop inc into mov lock ljmp testl ret pop add out dec loopne xorl dec dec cmpsl cs xor out rcrb leave xchg faddl xor and lret pop push fadd les jl imul dec loopne cmp test mov sub push cld cmpsb or xor clc mov xor adc jo dec leave mov js leave jle dec xorb fdivr mov addr16 orl repnz insl adc mov lock mov aas mov stc jg xor out jmp add (bad) dec cmp mov dec jmp out and and rcll lods sarl scas mov xchg inc ficom dec inc (bad) dec fxch insb (bad) popa pop pop adc or cmp push das insl ja fs adc fistpll int3 sbb xchg sub sbb stos mov mov inc enter enter mov hlt icebp push xor push pusha xchg (bad) mov jb test inc adc push xchg fcomps jle add iret enter sub sub popa mov je rcl jmp jp stc shrb jno imul adc icebp push cmc push xor mov mov add and mov jns gs addb jno mov jo jns das enter xor xchg sbb mov cli jge cmpsb out sahf dec inc mov inc mov pop jne mov push mov fisttpll ret (bad) jp sbb xchg rorb mov push pop gs cmc je lcall or xchg lret cwtl jl int3 aad int cmc fidivrl dec daa pusha mov inc rolb lcall xor loop mov movsb (bad) inc sahf adc xchg cmp xor dec lock shrl aas out (bad) mov lock fsubrl cmc imul popf mov push ficompl popl mov gs pop test and sbb pop mov mov popf cmp insl div jle pop lret mov je lcall iret sub (bad) jae (bad) imul xchg insb adc les lea dec jno (bad) es adc pop dec add fisttpl mov movsb bound dec fistpll fwait stos cmp movsl lret outsb dec and arpl jle fld jl jnp sbb jo cmp sarl dec sahf das fldl mov icebp add mov outsl in imul mov scas add mov int (bad) incl in mov leave decb pop pop pop mov movsb sub mov xchg leave xchg push ljmp int3 xchg pop popf pop push sar clc cmp sub mov loop sbb pop jbe add xor xor enter cmpsb mov xor sbb jecxz and xor or pop rolb cltd mov clc movsl das mov lods out rorb dec add jmp push jbe in lods mov cmc xor xchg bound cmp arpl out sbb push fcom ljmp lret adc dec js popa xor jb mov lret repz mov mov cmc pop stos mov leave loop adc sbbb inc test test add sahf jl adc push out int mov lods fstps or jo jbe leave lahf sub mov loop xchg dec adc inc ret add adc iret pop push mov sub test or mov insb test cmpl test jo in or pop mov jb (bad) test sub shlb mov shl (bad) inc jbe aas mov imul jbe lret notl mov cmp and jbe push mov sbb aas ja andl in dec inc xchg inc push gs cmpsl aaa (bad) ja fstpt incb daa xchg sub cwtl add jecxz imul push mov sbb jo fstl clts adc pop jno mov cmpsl cmpsb or sbb lea pushl add mov cmp imul cmpsl lods outsl int stos ss das cmc mov jl jmp adc pushf push outsb in mov mov push enter lock movsl push cmp adc sti xchg push test xchg das rcrl cmp mov dec dec daa jle leave push sahf aaa inc dec add fildl negb sahf lock mov movsl jp mov call stos pop inc sub and out jo mov inc jnp lea sbb push stc ret push std pop or inc or mov push loop dec clc dec adc fldl mulb sbb cmpsl push sub inc push xlat in pop jbe add xchg mov mov out mov call pop in rcrb insb push icebp push inc iret mov out mov mov mov and lahf push xorb mov cmp int3 xor sub push test mov aas sub xlat fsts xor adc das js call fistpll add loop mov cmp inc inc xlat xchg dec mov mov push scas stos xor insb or in in divb adc in lcall jg push mov clc ss push xor addl dec ja and fsubrp lods outsl jns and in pop pop add mov mov adc lret inc (bad) pop das pop lds in cli subl xchg mov and rcrl ds xor adcl cli sub sti sbb cmp (bad) cmp pop (bad) loopne xor nop stos fidivr in (bad) (bad) hlt in jl dec lret test cmp xchg add ljmp (bad) scas jo add mov movsl (bad) xor push push mov iret adc mov test adc shll jno sarl jge cld test subl popf loope pop mov sbb jno mov add and movsl push jmp imul pop mov jp aas adc test jecxz mov inc inc cmc sbb sahf xor mov push loope loop stc imul jg inc (bad) xor aaa push mov int flds sbb xor outsb in mov xor adc scas aas push outsl push lock out iret push inc popa xchg push ja arpl outsb mov jg gs bound push (bad) lds arpl ret cmp cmp inc and (bad) cltd jmp loope mov adc or jo mov ret jmp popf (bad) cld test icebp or ja fildll cmc jno fcomip int leave (bad) mov push inc movsb or xchg jo push jle popa cmp pop sbb addr16 fs mov dec dec popf mov sbb mov sub adc out mov xchg in or or push cld andl and dec sbb push inc stos lock mov mov in xchg imul sbbb sbb roll mov lods sub ds adc adc pushf dec cmpsb lret call mov (bad) jo cmpsb mov mov dec negl push aas and lcall jno lahf xchg sbb inc (bad) dec adc out jl stos xchg (bad) sti outsb fbstp cmp test adc arpl xor es mov mov mov push add ficoml es insl or jne inc stc rcrl pop (bad) cld pop or inc out sub insb ret sbb xchg mov ds imul cwtl mov inc mov or jno mov add or or mov inc popa sbb xchg scas leave scas addr16 pushf rorl mov ja sbb jnp insl ss sbb and popl cli cwtl loop add adc dec arpl test inc enter imul (bad) (bad) xchg ss nop fsubrp mov test push push int3 inc sub push loope sbb movl add fbld push xchg iret stc mov inc adc mov xchg faddl jg leave sbb ret jbe,pn inc or repz sahf mov sbb or add and mov or add sub in pop das subb pop scas int3 jo lret pop mov fsubs bound pop xor pop ljmp loope jecxz and mov (bad) mov jecxz cld fdivl jnp je divl mov rclb aad cmp jo inc inc (bad) jnp mov ds push (bad) mov xchg shlb push adc xor push add rol xchg and je out subb jmp and aas sub dec sbb pop mov cwtl arpl lds jb,pt jo aad inc je adc dec jg lds ljmp cmpl pop cli mov stos int icebp lds xor lret pmaxub test mov repnz or push lea dec mov loopne push loop shrb mov cmpsb fsubrl out mov in cmp pop out fwait dec inc test daa xchg push add imul lea dec sbb add jae adc mov das icebp or sub movsb cwtl mov pop fidivrl popa and cmc jo,pt fbld adc ss xchg lret xor insl movsb iret mov cwtl dec inc mov add imul mov aad dec inc lds stos sbb sub fsubs (bad) xchg (bad) (bad) jge mov adc sbb int ret adc or stc sbb lcall pop repnz dec add into sti jmp popa lahf or stos add mov mov int3 fcom lods sub pop lds add mov jo fldl adc adc test repnz dec mov or inc (bad) xor push xchg fsubrl push mov cmc iret faddp stos xor fs ror jmp adc add xlat cmp imul movsl bnd mov mov jp and xchg bound add fwait gs sbb xchg loope je lret loopne mov scas cvtpi2ps (bad) push xchg and lret jmp lds pop lods mov std mov scas sbbl mov in jg scas push (bad) hlt push movl xor popa mov lods jb cld loope loopne and cltd and cwtl pop inc jmp pop sub mov pop fs cld xor pushf insb jne dec decb rcl pop add inc in xchg add mov roll fbld jo xchg (bad) out inc es add dec mul (bad) dec xchg adc mov xchg jp or dec push adc movsl xor (bad) mul dec (bad) into mov dec or pop sbb mov push cmp inc sahf popl mov sbb rcrl inc dec push and cmc pop xchg imull adcb shld mov xchg test xchg mov dec nop mov mov je push xchg mov jo (bad) imul push jno imull push pusha cmc pop adc cs xchg or xchg adc jns jl cmp push xchg imul or xchg mov mov loopne in sbb sbb in shl push jnp push fsts mov stos cli sbb dec mov sub popa mov mov lcall xor add mov hlt out mov imul stos xchg outsb inc sub lods mov aad cmp push test into adc push in dec jp out mov xchg dec fisttpll sub mov mov xchg push je aam inc addr16 mov cli mov sub jnp add sub mov test xor stos imul mov mov jns xor jae add sbb mov jae pop js adc leave aaa fsubr mov pop adc orl cmpsb loopne test (bad) ljmp aaa cmp outsb mov rcr and or and mov pop mov jb cmp jmp adc mov stos add sbb mov pop cli jbe or or push ret and in repnz cmp (bad) push pmulhuw addl pop out je loope insl jp ss dec ret push arpl inc jle pop adc mov adc mov xor pop or rclb mov dec dec fwait push sarb in push adc lahf fbld cwtl insl in in popf mov (bad) jle movsb fist aam dec mov repnz sub sbb adc arpl sbb cmp movsb mov mov es mov push jmp in dec mov xlat mov or test iret xchg shlb xchg je,pn (bad) adc jno mov jle shrb jnp sbb fcompl mov jp enter dec negb pop mov push push testl mov jecxz mov incb lods lea dec dec insb push data16 mov (bad) mov fdivr test pop fisttpll das cmc sbb scas ja shl lods cmp add ljmp jp popa insb popf movsl scas push push in arpl dec push ret mov fldenv xor out push fwait rcll mov ror xor adc xor movsl mov jp dec lods inc jl and (bad) sbb sub icebp push add xor loop cmp lods lret push in lahf push mov jmp or clc (bad) popf ljmp sub push inc fist test rcr fldenv into push addl rcrl fucomp ret fldenv or je inc iret aad add jns mov inc test cmc lea (bad) bound gs sub out clc cmp jae jmp cmpsb das (bad) fbstp xlat pusha pop mov popf out xchg lret cld aaa (bad) hlt adc repnz sub jb and jne daa xlat inc adc and test out sti xlat sbb daa sti sub (bad) cmc cmp (bad) (bad) frstor mov lea loope js mov xchg cmp inc push sarb adc push rolb inc mov pop dec out mov rolb ret orl ret imul test fidivr fs data16 pop push jl push rcrb enter mov sub xor hlt adc shlb fwait lret loopne lds mov or mov dec jl adc or fiaddl mov jecxz loope lods xchg sbb pop mov rcr lock mov jo adc sbb xchg mov jns sub push dec inc out iret xor sbb mov movsb rclb inc mov je hlt test es ljmp mov movsb pop fcomip pushf adc shl cmp leave jns in mov sub jo pop test aaa (bad) in and jb cld fcompl jae add jnp leave push inc mov in pushf pusha xchg shrl adc (bad) rcrl add ret sar out fwait xchg stos (bad) or xchg loopne jns scas test mov jge mov icebp pop add pop pop faddl imul sub daa ljmp dec lods ret jb and sub mov sbb jb mov fdivp sub inc jb mov int3 inc cmp xor or cmpl xlat xlat stos popf sbb imul fxch add (bad) mov pop push pushl add mov cmp out push or popf lock xchg lret jbe mov lds lods mov xor (bad) cmp mov test les ss (bad) mov cmc (bad) or mov push and pop aas push mov es or sub push lock add add cli sub xlat xchg popf pop shll test lods ret push add bound cmp ficomp and in je aaa adc pop fidivrl xor ret and cmp mov rclb dec (bad) dec out push in (bad) lds lret out (bad) mov pop daa hlt sub add cmc rorl mov test call push cmpsl cld xor mov mov mov adc xchg (bad) outsb fildl mov lock xchg inc out push inc imull repnz test clc fs push test scas inc popf push cltd js add cmp lock inc aam pop cmp mov aad fistl sti adc adc mov sti int3 push dec in cli mov lock mov mov arpl xchg fistpll cmp ret cmove xchg sbb mov cmp (bad) pop mov addr16 rol mov mov or das orb test int or imul push lret lock dec pop jne je ljmp iret xor stc adc cmp xchg mov sbbb dec fcomps sub fmuls arpl push jl adc push int and in ret mov aaa test adc jno sti push rolb repz aas jecxz mov outsb dec scas idivl mov jne rcll jp adc mov cwtl rcll idivl dec iret xor and ret xchg fld xchg out add ljmp jne mov xor out loop xlat fsts fimull sub jl daa push leave lret or sub sub dec add jnp stc fcmovb sub xchg test mov adc mov loope outsb pop jmp push mov add mov jbe xchg in jbe xor and push jmp lock fidivrl xchg push int mov sti jnp (bad) mov ljmp cmp data16 test fsubrs pop and scas dec cmpsb sub ljmp push mov cltd pushf xorl xchg jecxz mov xchg popa leave mov lret lods xor (bad) cltd fs js dec jae pop dec jg xchg jle xchg jno jge outsl xchg fwait mov mov stos inc xlat inc sub lcall fwait adc inc (bad) push (bad) pop daa adc and in stc mov mov jnp inc out inc sub bound call or adc add xchg notb or sbb xchg mov mov pushf jmp sub xchg mov add pop ret add out sbb loop sbb cmp inc sahf mov xor mov mov movsb orl inc jecxz jbe mov add lret dec sbb negb call mov and lcall cltd dec sub jg add in add mov daa mov std jo inc inc shrb cmp push mov imul lds add lods xchg and dec mov inc leave cs mov mov out outsl jmp mov lock sbb lds sarl pop inc scas add lret ja (bad) bsr dec test clc pusha xchg jp mov or inc or movsb cmp cmp adc out jns pop ja or mov push sbb dec hlt test sbbb push je mov and jb leave xchg in mov lods mov xchg pushf daa mov cmp adc sbb sub inc inc clc ror adc (bad) mov push repnz dec rcrl sub fnstsw (bad) cltd cwtl jno (bad) imul push sbb inc pop adc (bad) xor ja aad jp push daa push push popf add sub into add xchg stc mov jnp in loop mov lods mov mov cmp cmp cmc push ljmp inc sbb push popf rorl ret jo lds in push leave push pop pop (bad) push sub xor stos lahf xor addr16 jg scas into lret (bad) add inc loope fnstsw (bad) jbe adc mov in inc jb sbb mov xchg or test cmp (bad) jae and cmc push jbe push xor push divb aad clc xor mov cmpsb inc (bad) test inc rcrb jmp jg dec outsl mov adc jp inc scas or push mov popf mov icebp or sbb pop faddl push (bad) jge sub lcall xor mov jge call aam push add or jecxz push xlat rcrl fidivr xchg push add mov sbb jne mov test push lods loope fisttpl aas cmp out cmp ja push daa sub imull push or fs movsl je,pt mov push stos pop into lahf inc testb daa xchg sub in push testl mov popf mov insl adc mov cmc mov dec mov stos stos xor imul lods aas sarb scas loop cli mov sar test aad cld je add out pop and or cmpsl incl sbb push int sub inc mov pop ja jno sub inc adc mov adc sub pop movsl push mov jg adc inc mov inc lret loopne xchg jmp out (bad) jecxz mov pop dec daa mov mov sar mov out pop mov fdivs ljmp xchg test (bad) xor mov add and mov push jb jmp adc insb repz dec jl and adc outsb ja cmpsb cltd add shld pop scas insl mov addr16 xchg adc imul (bad) and stc test xchg dec dec stos cmp and and not out aam xor je sbb mov mov and sub icebp jg sub mov add les jmp mov push test insb stos arpl jecxz inc mov dec in data16 inc jno ljmp (bad) sbb rolb out xor push hlt fld and pusha fs ja mov je adc scas mov inc shr daa in adc scas cmpsl cmpb cmpsb aam xor addb inc lcall lret imul push pop les sarb loope jge sub sbb mov scas sbb gs push out push xchg ret jl movsl push xchg jg (bad) push aad sub push aad in (bad) loope inc hlt jbe dec inc xchg push add in inc ret jl sahf mov jp loopne,pn (bad) insb jne xlat hlt clc fwait push fs adc rcrl iret shll mulb (bad) lcall shr add andb mov clc push out aad xchg push push xchg xchg mov push cmp or add xchg jge shlb mov and add or adc sahf lea and gs add xlat jge cmp pop mov inc sbb jno mov pop dec inc jmp jp mov ret mov rcrb dec adc mull mov add mov mov lods cmpsl in sub (bad) aam (bad) and mov dec outsb out add enter subl mov push aad add (bad) adc adc dec sbb xor sbb fwait lds xchg and dec adc lret in aas adc (bad) lahf cmc inc out (bad) cmp lea in aaa ret mov mov rorb pop loopne mov loope sbb push sbb aaa sub aas cli adc test cmc out cwtl js add push mov cmc add fcom xor addr16 (bad) push out inc call mov jbe add push pop adc gs mov and mov sbb mov mov aas jp xor dec mov jno mov fnsave (bad) stos or mov pop sbb inc adc dec (bad) mov std jno aaa popa inc or mov aas aaa movsb sub sti jp int3 dec (bad) enter or test clc mov rcr dec xor xchg test int shlb ficoml in mov inc mov sahf sub movsl jge rol add in mov fadds fs sbb (bad) jg inc sbb push sbb jmp xor shrl mov call inc mov into jmp cmpsl dec jmp clc in push jae in push and add out mov mov inc movb pop mov fldl lds cs into (bad) loope dec cwtl mov inc out je dec sbb sbbl stc outsb icebp cli xchg mov push mov push stc jp mov imul push es movsb aaa (bad) mov push fistp mov mov aas sahf adc ljmp lods mov fisub es (bad) xchg sti mov jge cmc cmp push dec sbb adc mov mov pop push jae dec jne repz pop decb adc test mov fcmovnu dec jecxz add popa mov loopne arpl out (bad) push sbb jmp jae sbb imul mov push jb mov cs icebp jbe jnp fidivl mov (bad) cli arpl fstl insb nop enter or mov icebp hlt repz mov lods mov xor js stos jae xor dec push sbb push movsl pushl sbb jbe iret jo dec or mov (bad) fisttpl jl xlat rol xor aad add aas aaa imul popa add add adc jnp xlat xor orl addr16 or mov mov pop mov mov fildll in sahf fsubs pop mov adc add lea leave add inc dec inc adc loop lret inc (bad) cmpsl insl mov cltd adc push sbb pop xchg or negl mov clc inc fistl dec (bad) frstor pop inc push push jl ret jns mov in cmp dec stos add lcall mov (bad) and pushf cmpsb add in aad or xor inc pusha and aaa add gs aaa es dec shll call pop xlat inc xchg faddl mov sarb xor lahf aaa adc push cmp in push stos and repnz push add test jmp (bad) jp dec xor ja test daa mov or jmp inc xor mov mov push (bad) cli mov inc jae popf in sub in negb stos adc xchg rolb jmp dec mov push mov xchg add add mov xor daa pop pop lea scas cli outsb adc dec pop je pop cmp xor xor push scas lcall adc in sub pushf loope iret push cmp or repnz xorl jp inc (bad) mov andb loop inc jbe cmp sub sbb pslld jae jmp mov clc sbbb jbe dec lds test push aaa stos cmp ret fildll inc mul fisttp sub in repz xchg ds adc push movsl in (bad) iret mov aas fucomp cld andl inc or xor (bad) in sub mov mov push scas rorl inc les jno add repz stos repnz xor repnz or rcrb outsb dec mov shrl inc decb sbb popa mov dec bound dec cld das imul sbb push imul xchg cmp sub adc or and notb rorb inc rcrl ja aam dec inc rolb mov inc outsl jl xchg push jnp jg jp xor sbb rolb jl outsl sarb push lret add xchg sub das mov add je insb add push mov mov push add inc dec in pop test das or push push es or sub out jnp mov and (bad) movsl loope pop mov xchg sbb cli iret fs jmp pop add xchg lods pop ljmp divl shll call inc lods inc test (bad) jnp out out add outsl cs repz sub sub xchg (bad) sti cwtl stos or fidivl int (bad) or adc dec pop jne jmp aas sarl out ret cwtl negl ljmp and sbb push mov loop ljmp mov ja push scas lea jno dec adc inc aas outsl adc sub (bad) fwait (bad) xor or leave cmp call repz sbb jns bnd inc xor fmuls jmp add (bad) icebp imul (bad) mov into or push jl push push or (bad) ljmp cmp ret mov jmp sub adc xchg adc jge stos jge lahf and adc and sub sete clc insl js xor and ljmp inc clc and lret push pop es add and lcall jmp or jo pop inc push cmc xchg ds repnz xchg test mov data16 je jo js cmp lahf inc lods add cmp mov (bad) out pop jno cmp jnp lcall popa jle repz xchg dec dec or xchg sbb xchg xchg xchg addl xor bound pop icebp push (bad) or aaa mov dec cld fcoml sub inc push mov push or nop ret fs ret insb mov cmpsb mov jo and gs pop pop repz in dec and je (bad) sub (bad) jno imul sub out sub sbb sub inc pusha pusha es (bad) xchg es int pop push dec and push cmp or pop xor jg jp pop aad cwtl or (bad) inc mov imul push add add lahf lods mov xor in int3 sbb notb mov xor fistp adc or lods fnstcw cmp pop dec aad lock mov idivl arpl jbe cltd adc mov aam cld fs or dec dec (bad) lcall xorl mov fidiv rolb and movsl lds jmp jge or jmp lret pop cli jno (bad) jg lahf fistpll add adcb test ds and mov push in (bad) addr16 outsb (bad) lock rcl js sahf jp jecxz mov js inc or notb inc ret outsb xchg sub and cmc xor mov in lock cwtl subl and inc cltd add arpl xor movsb sbb std into cltd fwait pop sub movsb pushf mov fimul subl popa test fs push cmp scas push mov or in in loop pop push inc dec cmp pushf shr mov jbe fisttpl jp icebp xor adc sbb rorb push xor xchg dec pop pop adc cmp adc into mov dec or xchg (bad) jnp adc inc cmp loop les push (bad) jmp mov mov sub mov fdivp dec jbe mov xor or jp adc sub int3 cmp shl sbb xchg jecxz xor test out add pop pop and outsl jmp cmp inc clc and xor aad sub jns push movsb push push push cmp cmp subl pop mov out lds addr16 mov rclb div insb mov sbb outsl adc push xchg mov sub and jne dec loope outsb xor test cmp jg jns xorl mov fmull mov xlat sbb mov and push fisub mov psubsb je jmp sub inc insb or addr16 jle xchg imulb cmp add popf sub xchg mov dec loop jbe inc pop mov es add inc enter or insb mov xor (bad) stc and les xchg jge movsl inc push stos popf pushf out jmp inc adc stos (bad) push jno cli xor inc cmp sahf sti jl push push stos test cltd sub subps cwtl and imul mov sub adc add push shlb (bad) (bad) aam mov lods mov test xchg daa scas scas sub idivb mov mov iret jo in and xor mov loope loopne push jp in ret mov or imul fmul jg cltd sarl jge jne xor push das sub notl aaa adc sub dec sub cmp add ljmp ret push cmpl xchg add gs aas ss ret out jae push aaa mov ficom xor dec std jge out xor adc (bad) sub add push lret mov jbe and int3 mov mov push mov std sti leave cli sub mov mov jne lods scas push popf sub aaa adc pop mov xchg cmp sbb sub ret int3 sbb clc aas add aas mov mov dec sub pop add cld fstpl adc sub push in stos add inc jb cmc push (bad) lcall aas push pusha sub daa das push cmp out pop push add test ja insl mov and fisttp push aaa mov test popl sub xor jmp loope jae sbb ja cli or arpl push xchg jb sti cli cmp xor jecxz loope mov rcrl cmpl ret aam fcmovnb mov lcall pop push mov js mov pushf cmc ret out pusha pushf stos xor fwait and inc (bad) stos dec push mov fwait jl addr16 fwait arpl push sub add lcall jo xor aad and inc clc arpl ljmp sahf or lea ja mov loope xchg js adc in adc gs and cmp inc test aaa mov mov (bad) pop xlat inc fwait scas adc mov stc movsl pop out sbb decl loope push das jecxz pop (bad) inc push cmc sbb inc push cmp mov push lea outsb and add (bad) jg jg lahf push xor xchg mov fdivrs out xlat pop call das outsb test or out adc (bad) adc orb bound aad test push cld sub aad add out imul repnz test xchg cltd pop in fscale cmpsb xor cmpl dec push mov mov sub or jle jmp mov jmp cli mull fild enter mov movsl stc std into sbb (bad) mov mov adc xor or lea mov add add dec data16 sbb and mov sbb jge enter jl adc xlat mov dec or or push movsb test cmp data16 aad ljmp cmp sub in pushf hlt jb (bad) or push jg adc sbb dec sbb sbb clc push stc in iret sub pop fmul in enter js cwtl push sahf xchg les popa out imul jle adc je and mov out push das mov or or (bad) sbb dec enter fnsave jmp movsl hlt push movb in inc int mov and fistp add mov imul push ss in (bad) mov xchg lcall lret test mov pop (bad) rep aam jge,pt sub int3 fildll popf mov movntps rcrl pop jp cmp imul adc add lahf adc mov inc pushf pop inc movsb add fwait and rclb cli pop xlat jg xor sarl cs pop xchg pop mov push clc pop test adc std mov lds in (bad) jp test imul add xor lock idivl outsl xor xchg stos ja xor sbb arpl adc xchg scas out enter sub in mov (bad) iret xbegin arpl push lret scas xor xor fisttpll int pop push hlt sbbl jb out into repnz adc or or leave push aas mov lea dec lcall xchg push insl sti inc lahf mov mov and push adc imul push push pop and stos scas daa and xor sub jp cmpsb cmp fisubr addl in push mov push mov jns xor stc loope xchg lea pop clc (bad) pop arpl sbb ret (bad) dec scas push stos xor clc inc mov outsb stos addl sub pop (bad) jns or test rcrl xor mov mov movsl fistl (bad) xor inc ret inc (bad) or (bad) fidiv fidivl adc add (bad) inc add pop test mov das lock push xlat or hlt cs ret dec sub (bad) in (bad) imul add (bad) js inc (bad) lock imulb sub in cmp mov insl fsubrl out sub roll out inc push add lods lcall push mov sti (bad) js sti lds inc jb enter mov or pop and rolb xor dec adcl sub js pmaxub adc iret ss in cltd (bad) scas sahf out test addr16 add or cmp pop push inc loope mov popf das sub int3 test jle or mov scas cmp cmp mov add mov dec mov fdivr and shlb pop and pop pushf sti or cltd out into push xlat pop fldt push xchg stos jmp xor stos adc push pop enter aam repz mov stc (bad) jbe or (bad) idivb adc (bad) push jne jecxz jno andl in (bad) mov (bad) (bad) pusha inc cmp inc data16 test cmp cmp cltd cmp or clc jne mov icebp adc cmc mov add adc xor pop dec inc leave dec sub cmp stc imul lods xor stos ficoml cld sbb mov jl (bad) jmp add mov push mov mov mov pop ja xchg bound lret js je mov mov xchg ljmp (bad) mov bound mov xchg inc push xor jb sub cmp dec jl test insl cmp arpl nop jecxz jge lods (bad) mov stos pop and fwait push and jmp das cmpsl jnp cmp rorl ljmp movsl loop popl loope sbbw sti mov into lahf sub cwtl imul fs cmp push js add in cmpsl mov je push jp mov sub outsl testl sub mov adc nop das std lock dec inc dec cwtl mov push push adc lea xchg aam lock lods sti add stos add push in stos bound lahf test pop xor xchg sbb lock decl hlt sbb xchg rcr pop cmp fs mov out mov jno je pop push sub jb cmovp inc cmp fbld mov loopne xchg fldt je (bad) jb in test push inc outsl int3 shll mov mov jl test dec cmp cwtl in mov sbb jno xor and pop dec lods int3 jne aam test sbb divb mov (bad) fcomps in push mov add (bad) outsl packssdw mov sahf adc pop clc or out repz sti iret sub inc movb movsl movsl pop mov jge mov fwait in pop das jmp mov xchg push pop cmp packsswb mov xor mov inc mov inc xchg cmp movsb (bad) jp add loop xor push mov xchg insb test dec sub mov sub rcrl dec xchg aaa icebp mov jns out jmp mov sahf xor js mov jp popf enter arpl pop fnstcw sahf cmp repnz or jmp mov xchg sub mov fwait out xorl gs sub add mov sbb (bad) push ret les fiadd dec mov sub or idivl arpl xchg outsb (bad) int jge (bad) cmp xchg fisubl push dec pop cltd iret add (bad) aas imul shr mov sub mov daa mov shlb rcll jno lds add pop dec cmpsb mov mov xor dec leave ja and in xchg sbb pop lods ja dec and dec sbb xchg cmc clc repz sahf push mov aad push mov aas xchg sub mov int3 sahf cmp mov fisttp sub mov mov sub daa pop xorl and fnstenv ret xchg pop push and adc mov shl mov adc fs popf cmp mov or push (bad) iret test push adc jae (bad) enter inc add movsl (bad) test cmp stos loop push repz inc cmp lods rorl rorb cld movsb mov (bad) sbb notb fsubl stos test jne fnstcw bound mov lret fs push clc cmpsb loop fdivrs (bad) xor movsb fs out or xchg ds insb dec orb mov jne pop mov jne adc pushf imul test mov xchg mov scas icebp imul cld mov fs mov sub fs mov or ds jp xchg jmp cli roll stos clc je cli fnstcw sbb xlat jmp mull jns addl cmc dec xchg or fstps (bad) jne mul mov lock xchg mov lcall pop jae push hlt cmp mov pop push or pusha dec ret inc bswap ds pop jns popa pop pop inc orl (bad) sbb pop pop int jae mov pop fimul fldt or enter dec push push dec xchg mov mov dec and enter pop out int xor in cmp pop dec (bad) ja sub outsl cmpsb je outsb or mov stos lcall sub push jns push adc repz aas sarl inc dec xlat sti pop movsl outsb and dec (bad) jo outsl loop jp (bad) jmp fnsetpm(287 insl xlat mov enter enter xchg rcll lods nop inc xchg mov mov lret push cmp sti repnz cmc mov cmpsb or cwtl adc fist stos and lcall orb cmp mov leave stos je cmp push sub jbe cmp add imul and lret xchg loope (bad) sti sbb lock (bad) nop or int3 and sti fistp outsl aad pop xchg pop inc pop lahf sub ljmp xchg jb stc sub mov movsl adc and idivb fs pop movsl (bad) test dec push jp pushf or js xor or lret adc in sbb fimull fildll or adc out jecxz pop jp cmpb into (bad) push mov sub lret mov or mov aad lea add pop test add ds das mov sub aas pop mov in pop mov nop/reserved sbb add jo lods fimul test loope mov sbb imul pop jo nop sar sub cmpsb or add jbe outsb lret xor xchg hlt push movsl inc outsb push mov shr nop mov push or clc push stos aam sub cld loopne shrl ss es repz std shrl (bad) jae stos xchg jns imul test xchg aam movsb stos dec push sbb jge inc jmp imul es cld movsl pop jl adc enter arpl outsb out sbb incb or fsub add fdivl sbb aam testl inc lods loope sub insl popf rcll stos mov cmp jo mov lahf aad add test aad mov mov and fwait add mov notb lret aas push mov inc sub mov lock lea rorb mov nop call xchg inc dec and or mov mov not rolb xchg inc rol push leave push imul imul ret mov inc mov mov mov pop faddl lea push (bad) rcr sub xor enter gs lret (bad) push lds add setg mov gs out and cwtl push mov cmp dec jle sbb xchg jmp push cmp mov insb bnd (bad) pop jbe xchg mov out hlt xchg push popf jne adc out stos inc movl inc inc test pop jns jb leave sbb adc or push adc pop pop mov ljmp (bad) fcoml faddl imul imul ret dec and jbe leave lcall xor sti jge push sbb je jne dec out dec mov imul into out add mov adc and addr16 mov fisubrl push fnstsw ljmp movsl aam nop adc imul mov aam imul mov dec shll add xor xchg inc test and (bad) cld enter int3 mov mov insb aad pop inc lea pop push test adc in xchg dec fmull cmpsl fwait jae cmc xor mov call add out fisubr cmp and repnz xor jno push lea out lods testb mov sbb (bad) scas fisubl push (bad) pop mov aaa dec jecxz sub ds les cmp aas mov pushf cs inc mulb dec es sti push leavew mov mov sub lahf adc xchg pop pop inc test aas gs ljmp push push cmp add fwait inc add jecxz mov int pop je mov shll lret (bad) cld add and add cld mov add in cmp pop add pop imull icebp mov jnp test cmpsb or popa pushw je sub push (bad) push and movsb inc decl rolb rcl mov test popf pop xor mov push lock repnz cli jne gs cmp pop pop xchg (bad) mov and rorl dec xchg into xor pop mov test outsl mov dec sub xchg xchg mov sbb jmp cmc mov pop jbe scas mov shrb push mov jno lahf arpl insb sarb cmpsb mov inc out (bad) int push dec mov or jecxz push sbb lcall sub fldt pop sub mov out pushf ret (bad) xor and negb hlt add mov xor inc in lret pop insl (bad) jo movsl nop icebp mov (bad) and sbb pop addr16 and xlat test dec push icebp out inc adc iret aaa std rorl sbb cli iret cmp call pushf add fbld daa insb std push int pop mov mov mov jne mov jbe clc adc (bad) and cld push data16 imul cmp lds mov daa pop or mov pop mov mov inc mov outsl lods stos inc std into imul or and mov xchg orl mov sub les ss sub mov fadds or fisubr mov adc cmp mov mov movsl pushf dec lock pop or jbe xchg sbb pushf gs bound mul or adc jnp (bad) mov mov notb and pop add jmp and cmp inc inc jnp lock in push or ret dec push ja sub push cmpsb sbb (bad) and pop xchg rorb movsb jle mov mov mov lret andb xor lret cmpb (bad) ja mov lock int3 pop fldl xchg sbb push dec or negl ret mov insl roll sahf pusha aas or out mov cmp push jb outsl push (bad) andb pusha xchg push aad mov mov inc xor mov push pop adc test arpl jge push stos push ljmp cli mov mov sub jo cmpsb lods add push lret scas push cmp repz add daa test dec shrl jle int xchg je dec add lret mov push int shll je fnstenv pop pop lods lcall jns,pn pushf sub loope es jmp stc xor clc test xlat mov adc insb or mov mov dec out fsubl pusha out pop ja jne adc rcr aam sbb add sbb mov sub adc (bad) push rclb pop mov test cs iret arpl mov or and sti mov cmp mov mov add sub mov movsl dec cmp cmp mov in aas pop rcrl adc int ja xchg das call scas pop cwtl mov adc push jl outsb fldcw loop jnp push cmovs inc int cmpsb loop cli into aad lds cld ds in jle add mov imul std mov enter xchg mov add mov movsb nop lds lret ds mov out xor inc stc (bad) repnz clc xor xlat leave loopne pop pop movsb stos push mov and fidivl cmp cltd sub push jb inc xor jg push loopne mov insl cmpsb fsub mov js test jle cmp nop mov lock mov lcall lcall fadds (bad) fisub mull repz xchg jmpw test lds mov cmp bound sbb xchg cmp sub push clc (bad) aam mov cmp fistp push inc ficomp hlt cmpsl add or pushl mov fnop mov fdivp rcl lds mov int3 cmp (bad) cld negb rclb enter popf frstor fstps xchg in outsl dec mov lret stos (bad) mov (bad) repnz incb mov ss mov or cld adc add cmp (bad) jno aaa mov jns pop pop or (bad) sub inc jg mov jnp push push scas cmp js test dec call das xchg out fs push sub xchg mov jge sbb aad cmp push ret sub in dec ljmp mov arpl mov addr16 fwait inc mov jmp sub int rclb mov rcrl mov sahf inc movsb (bad) mov mov or mulb addr16 mov loope dec jnp pop mov (bad) mov inc add dec lods cltd arpl xchg xchg clc fs (bad) inc sbb imul lea popf xor inc int3 and cmp fsub addr16 cltd nop in ret inc push call mov rcll fild mov pop jge mov lods movsl add mov or rcr cmpsl in scas rcrl mov cmp loop xchg cmp jo adc pop mov cmpsl inc cmc leave and adc mov lret push loopne rcll stc cmp or sbb (bad) incb loope mov push cltd mov cmpsb and mov dec sub shll mov ss lret add das (bad) push daa inc dec mov cmp xchg insb mov aam mov lret mov out jp jo xor rorb aas mov imul subl jns daa hlt les sti adc fsubr call fcmovne mov das xlat add movsb jge (bad) push dec cmc fisubrl push xchg or cli lahf (bad) jb mov outsb and aad or and lar mov out push or fscale adc xchg jno push insb xchg jae or push jb push repz cltd loop mov add dec add cmc mov loopne jae dec and call and je fsub (bad) cli push addr16 push int sbb mov jmp aam lcall cmpsl (bad) cwtl mov fs fwait stos sbb xchg lock mov (bad) js pop (bad) out neg mov xchg jno jae mov mov jp daa scas xchg dec xchg insl or push call into and pop and cwtl dec cmpsb xlat xor pop call mov int add pushf add (bad) fisttp pop fistpll movsl test cmp xor mov xor (bad) ja je les adc mov push (bad) cmp and jle adc inc mov add into push aad push (bad) and jnp cmp js add out or out mov cmp or cli scas jnp jnp ret xchg std cmp not sub mov shll xor and pop sub xchg pushf pop xor lahf sub scas rcl lods ja or or pusha jno psrlq data16 idiv jg push add mov or (bad) sbb pop and shrb es xor ror lret mov cmc push js das (bad) dec jmp (bad) idivl lahf push mul push cmp lret pop in mov dec rcr (bad) cmc cld sub gs arpl mov es jmp push aam jge adc adc leave push fidivrl lret inc mov lds jp add jo notb ret mov das decl out mov insl outsb outsb jb jno into jae jo mov mov testb ret sbb or in mov add mov aam push mov scas inc xor push xchg in cmp cmp pop shrl inc lods fdivrl xchg jnp sarb cltd cmp pop push data16 sbb sub sub test sarl push mov pop fdivp popf mov mov inc dec insl divb repz iret fwait inc push or push sub xor mov jb jp jg sub jmp pop pop hlt icebp dec aam enter mov and inc sbb mov push push jge sub out loopne jg fiadd lds cmpsb xor cmpsl xor std stos nop jge jmp in sub dec sbb push push dec dec mov sbb dec add loope outsl fmuls fadds movsl or mov iret and jmpw dec adc inc add xchg imul out and movsb sub add bnd es jnp aaa inc fisubrl xchg jae bound push pop and xchg mov dec cltd cmp stc pop addr16 cli inc outsb in xor in js fdivp lock stos daa pushaw or add sub bound daa inc andl pop cmp outsl lahf pop xor neg iret (bad) xor mov inc xor xor test aad pushf adc enter pop movsl stos sbb mov subb repz scas push mov add lods sbb mov insl sar xor bswap xchg inc push mov pop push sbb dec push sbb rolb mov jp and or ret inc jnp sbb mov mov lahf inc fs inc in sbb cmp or test mov hlt enter in dec mov outsl (bad) mov data16 cmp and lcall movb push inc mov fldenv sub (bad) mov ret loop xchg inc repz push mov in add loopne push push fnsave call mov dec cmpsl mov int3 out mov inc push jo mov mov dec pop xor ret cld or rcrl test sbb hlt orl mov mov mov mov add and loop add nop movsb and push cmpsl data16 mov cmpsl (bad) repz adc xor arpl mov hlt pop jno enter sub or scas mov cmp sbb aaa outsb cmc outsl rclb pop mov (bad) das lock sbb add jmp xchg xor xchg lcall lods or imul pop outsb pop add insb aad test mov jle ret cmpsl add repz stc or in aaa (bad) sarl insb mov repz add lock ss sub (bad) sub and pop or call push lea or mov mov pushf xchg cmc cmp in das ss dec repz pusha rorl add (bad) movl out (bad) lods jno jbe push xchg xchg jecxz jns (bad) mov mov popf xchg gs sub rorb sbb fildl xor xchg pop (bad) cmp (bad) mov push jne stc pop add xor test pop loop cmp movsb or repnz sbb rclb add cmpsb xchg inc movsl ret hlt pop mov lock xchg lods test les push test and (bad) pop pop addr16 mov stos je das ret mov mov rcl pop jo or mov push cmpsl (bad) pop (bad) ffree push rolb insb testl fnop xchg xor int cmp sbb fdivrs xchg imul jg clc int3 in movsl xchg cmp sbb lret pop cmpsb jg adc jge mov sub loopne mov lahf es or cmpsl jecxz fs dec adc int3 data16 hlt sub pop jmp mov adc adc iret lock cmp (bad) dec and lahf mov daa rcr and lret mov push jb inc mov decb adc push sbb popa or sub fdivs and inc jae push adc cmp mov pop add pusha jecxz inc sbb mov inc es sti orl pop pop adc jle ret fimul outsl in jg popa xchg mov dec sub mov dec fwait fwait (bad) dec (bad) mov pop mov dec adc xor imulb dec lock sahf ror jl mov push mul adcl arpl mov and (bad) pop sahf cwtl mov push outsl aaa addb cmp shrl (bad) mov scas xor mov jbe xorb lret (bad) std push adcl daa lock rolb mov lcall data16 sbb jg mov in adc and cmp pop xchg sub xchg adc mov xchg clc ret aaa (bad) enter and fistp sub dec jbe jl (bad) or loop in fistpll inc imul and (bad) mov xor adc sarb in stos cmp data16 mov or cmpsl (bad) lea addr16 pop (bad) fnsave dec dec mov push sbb (bad) push ret pop testl insl mov mov sti ja mov (bad) test xor add sub mov fwait and mov dec push popa fist xchg adc push scas push pop fwait inc clc sbb bound mov icebp aad pop mov loopne in adc sub pop mov ss dec mov push cwtl add and cwtl (bad) insl jge sbbl js sbb push (bad) push adc cmp stos fcmovu mov popf or in ss mov lret xchg pusha mov int loopne testb jb (bad) (bad) fwait push cmp iret nop push test rcll sarl and mov and xor mov mulb movsb and cmc cmc push cmpsl mov dec cmp sub hlt pop xor mov mov or or and mov lahf adc pushf mov adc cmpsl sbb and les jge sbb addr16 shll jge xchg sub in xchg loopne roll push mov (bad) jne cwtl popw xchg (bad) cld das pop repz ja movsb push hlt test xchg xchg jnp dec pop inc shlb jg jne hlt into add jl loop insb rorl (bad) cmpl push (bad) sub xor adc mov mov outsl jl xchg sbb nop andb xchg mov dec jbe xchg bnd add daa inc jnp test inc add lret pop add jnp pusha out adc js push jge dec sub mov fsubrs fcoms scas inc mov push loop add cmp arpl aad call ljmp sub jo pop (bad) lret in incl jg enter or movsl xor mov aaa fs fdivr mov incl aas and lock movsb push mov jbe jle adc ljmp or cli push imul dec sti add push xchg rcrb leave lea movsl add and pop sub lods mov dec adc out mov mov lds adc push add add sub test cmp xchg lret xor popa icebp xor addb sbb and jp leave cmp pushf jecxz nop rclb cmp mov shlb jg add (bad) leave push fsts jns pop les jb movsl test xor call gs das push imul enter cmpsl and dec imul std leave mov ja dec test std js mov mov dec mov pop mov push or bt push push lock sbb mov add std jbe cltd add sub push shll mov inc lret mov mov stos push lods inc xchg dec in iret xchg xlat dec outsw lcall repz pop inc push mov push addr16 mov adc fwait add add fcomps mov ficom ror cltd mov (bad) jge popa xlat xchg ljmp test leave push (bad) sti sahf xchg sub jb insl xchg popa xchg or jae div sub lahf gs xchg nop mov sub (bad) loopne outsl inc lock push cmp push data16 push aad ret push inc adc sbb push cltd imul (bad) or dec jge jecxz cmpsl mov mov push sbb mov in movsb jns fstpl outsl xor aas ja daa stos sbb mov push loopne sbb les push std pop (bad) mov rorl fidivr pop je add movsl and test or loop sbb aas data16 loopne test movsl sahf and pop jno cwtl test pop sbb adc leave mov mov or push andb xchg iret pushf mov xor and dec or push in mov sti and mov fadd ret scas xchg jge rcll imul mov mov and outsl mov fcom mov mov out gs loope pop test insl mov shrl (bad) jno cltd push mov out push xchg int3 xchg jno (bad) lods add cmp mov xchg mov lret mov fist jmp in push jb push daa ds fisubl mov mov add cmp push jno xorb lea shrl clc scas daa adc pop inc fidivl cmp out stos sub data16 add mov cmp mov imul dec shrb cli cmp jmp out (bad) outsl daa inc push sbb std scas rcrl pop out mov fidivr pop addr16 mov add js loop imul pop aam sub cld rcrb or arpl pop (bad) push inc sub lret mov sub js fildl cmp outsb add or shr jl cmp push enter out and sahf enter sbb mov cmp shrl int3 or pushf sti pop enter es rorb adc inc movsb jns inc push call (bad) hlt nop jge mov or lcall inc aas push fwait enter dec sub mov js push cmp pop pop aam dec or sbb pop push dec xchg mov sbb pushf in (bad) inc and test dec (bad) fcmovne xchg (bad) push (bad) sbb mov add cld mov adc mov adcl loope cmp xor fadd mov popf sbb subl mov clc add xor inc dec dec xchg mov xor jge jno sub fmuls scas scas jecxz mov sbb popa pushf jo insb lods sub lock jp (bad) jae in aaa push jnp mov (bad) (bad) pop mov aam (bad) scas imul jge fnstenv int3 cmp arpl inc les shlb aaa bnd xchg cli add in dec dec push cmp std (bad) mov into xchg jecxz mov ja inc mov sbb mov movsb enter gs clc pop mov cwtl lock cmp mov mov bound push les push movsb mov jecxz icebp les test or int mov gs lahf lds push xchg lahf adc mov pop pop ljmp sub pop mov js repnz test outsl sbb adc rcll lock dec (bad) es stos or push xchg and fwait rorl push pop jns test add and or push repnz mov sbb sub aaa cld inc or outsl lds mov pusha xlat xor mov mov push ds and xchg gs ljmp pushf push movsbl adcl loopne mov mov dec push es fisttpll std xor pop sahf (bad) mov movsb loope cmp or sahf aaa push push loope or mov inc icebp fs inc and test pop roll mov xchg inc es dec in cmp movsl push test mov pop lods subb inc pop sub popf cmp popf xchg jg cmpsl mov xchg xchg cmp int3 mov xchg push in rcr std insb jns cmp xor (bad) pusha push lds sub hlt xor add js in int3 int int push xor mov inc mov xorb cld sub inc cmpsl xor mov scas sub sub jmp jbe push jb or jl jno,pn daa int sbb into shll mov xor repz data16 movsl rorl mov cmp push stos xchg movsb lods insb push adc and std shlb xchg stos mov rcl enter popa (bad) loopne jp popa fldz add pop push cld xchg aam inc dec addw xor push out aad pinsrw test or popa jnp into movsl fldl push lret cmp outsb rclb test ljmp mov adc (bad) lods push ljmp adc pop aaa jb jmp add xchg adc aam popf cmp cwtl mov sub pop xchg fildl cmp arpl jo xor movq inc push pop fistpll cmpsl jbe mov nop sbb mov xorl (bad) test and repz dec pop bound scas jmp and lcall xchg xchg pop out popa add and ds inc dec push mov test insl inc dec insl pop adc xor sarb sub dec cld popa in data16 sub loope add xchg mov sbb and xlat sbb adc fiaddl out test jmp mov lret inc add ja sub iret add xchg pusha adc mov cmp es push les bound lahf jg ret push mov jmp inc mov inc or movsb fadd mov jge or push jecxz sbb jno xchg in in aaa jecxz loopne lret ret daa int ss loopne or and lcall stos aad fisttpll pop int sbb (bad) mov test popf jp ret jo leave dec fidivrl sub sub push pop xchg cmp popf jmp aam lods xchg adc push outsb (bad) lret movl (bad) pusha pop pop clc push sbb pop inc dec and out jecxz lock int3 clc mov xor sbb and out adc call inc insb sub sub hlt cmp lea cwtl add mov lods jae inc into dec cmp cwtl adc cltd cmpsb mov loope mov mov push mov rorb aaa pop ljmp aaa push js mov call cmpsb cwtl adc cmpsb or in mov mov and mov jmp sub push lret or cmp xchg daa (bad) (bad) lods (bad) xchg in mov out push lahf and fs outsl pop pop ror sub sti xor sub sub int3 jg sbb mov or push jmp or pop mov adc push stos add jl mov jp cld (bad) out roll jle or dec and jb cmpsl ror fsubl dec cs sub dec inc imul daa rcrl jno sbb adc call and int movsl inc out shr mov sahf mov mov bound jecxz lret jge sbb add mov push inc mov dec outsl push fld push (bad) cmpsb cmpsl iret and jo sbb inc sbb add pop or add lods fwait int into imul int js (bad) push cmpl ja sub pop jmp adc push clc or (bad) ret arpl les cli (bad) push sti jp cmpsb out push mov jmp (bad) mov (bad) ror or cmp aaa mov cs pop inc jae in jo mov add mov dec dec pop jmp hlt les push pusha nop popf ds pop jae fisubrl pushf xor push pop xchg int sbb xor movsl pop (bad) ja add mov push aas xchg js test lahf fistpl jmp and mov aad inc adc aaa loop xor and in mov cmp in jg cmpl lahf in mov jo popa outsb incl mov mov (bad) dec repz sub adc xchg mov dec cmp mov cmpsb mov jne clc xchg or nop and and je data16 insb adc xor sub pop add int3 cli imul insl les clc inc test xor pop cmpsl dec push incb cmp jge mov pop imull dec add jb das dec dec pop mov cmp cmc xor sbb idivb inc xor iret daa mov push lock ret sbb cld sub in push adc sbb fdivrl cld jb lret aad mov outsl bound mov iret mov in mov inc addr16 pop fistpll fldt mov dec imul js pushf iret icebp (bad) incl mov xor push inc test sbb push cmpsl clc daa push xchg dec pushf ljmp loope mul test mov fbld mov aam bnd inc xchg lods pop or into jg adc mov inc lret cmc aad jnp xor xchg jl pop mov adcl enter imul out xor mov xchg dec jmp mov mov sub sbb push movsb jno and out mov stos lock iret std jnp push (bad) clc mov popa lret testl mov mov xor push jnp rolb or and jo add repnz xchg xor mov fwait in nopl inc sbb mov sahf push test pop jmp and ret sub jne adc and mov shrb ficoml xchg xchg dec (bad) faddl mov shl and mov inc arpl jp mov cwtl scas pusha mov rcll add mov sahf js mulb pop cmp xchg loop insb lret (bad) int pop into mov stos inc lret cli mov jbe aad inc mov jne inc push fstps insb add jb dec mov bswap pop push icebp dec or jge adc clc shrb mov xchg mov lcall jle jecxz (bad) lret or hlt insb jle cmp mov sub call jae leave inc ret sahf iret fcmove test aad lea pop ret push sub jae xchg cmpsl adc scas inc push jns fistp fsub out cltd jle push enter mov jmp dec addr16 nop sbb sub jns dec shrb fs (bad) in pop subl jno mov lcall (bad) cs loopne xchg or mov insb movsl xchg adc insb jl sti xlat adc out popf mov rolb out faddl dec pop rorb sbb iret icebp sti fcmovnu xchg jle adc sub stos push inc movb scas aaa fwait nop iret pop (bad) mov out dec and jnp das inc sub adc cmp int3 sbb rclb xor in test (bad) mov das push push fxch fstps push sbb hlt outsb aaa sti fcomp xchg (bad) pop adc pop in les adc jb adc push sarl add mov je pop mov ds outsl pop dec cmp sub cld (bad) lods sub mov stos (bad) (bad) nop fistpl dec jbe (bad) cmp push pop mov adc hlt pop adc sbb rcrb shll fisttpl cmpsl movsb imulb ja sbb loopne outsl push fsubs pop gs sub push lds iret int3 xchg dec push mov or dec call mov (bad) push adc out je xchg dec inc out imul lods into nop push jmp popf inc (bad) mov jne fsubl scas pop mov loopne std cmp inc push popf adc adc les lret call xchg or push adc popl inc divb push aaa or stc dec out movsl push xchg and inc rcl xor push fstl iret out paddsb push psubb call push jle roll lret (bad) lock push mov cld xchg insl pushf dec xor xchg loope popa ret daa mov mov or pusha loop sub inc ja test xchg jp jecxz mov (bad) adc jb xor push sub insb mov add inc push mov pop fcmovnu sahf fsub sti mov outsb ds mov scas pop fxch jp,pt arpl sbbl mov fistpll xor pop outsl dec adc adcb movsl inc jnp dec lret aad arpl lds lahf ficoml cmpsl loope subl shl sub in test (bad) cwtl sbb mov add aad lods daa (bad) jmp push adc or cmp push (bad) icebp fs pop roll or iret mov out lcall adc pop insb fs test add mov mov jmp cwtl pop pop mov lods daa mulb or cltd sub xchg pop out call and push (bad) pop aaa arpl inc cmp iret or mov and mov or inc add dec xor jecxz xchg xchg add mov in adc dec (bad) call xchg jge fmuls pop pusha mov cmpsl xor jbe leave fisub lret iret mov jbe mov cltd mov cli std out repz rclb cli enter cmp mov fstpt sbb jmp xor xchg arpl jecxz popa jle fistpl outsb sbb cmp mov fisubr dec adc mov cltd pop es jae jmp add add lret in mov stc addr16 jmp and push repz call stos fildl lcall mov dec push xor cwtl sub (bad) rol clc test lods mov lret xchg stos xchg pop add lods adc mov pop sub add mov pop fcomps push push mov iret jb imul xchg inc jae xchg rclb int3 fidivrl cli pop ljmp or ljmp xchg shll outsb aad mov inc leave push jnp add and jmp test add or pushw (bad) pop test sbb sbb pop pop adc jg daa fwait (bad) dec sub shl enter out inc (bad) enter pusha dec inc cmp rclb push clc icebp test push cmc sarl push sbb or push outsb adc inc mov in ja adc test xchg jmp lret fcmove test mov repz roll out push inc xor pop dec mov hlt ss mov mul inc fsubrl cmp adc gs mov add mov jno pusha xor push mov adc mov out fstl mov sbb je xchg addr16 inc int aad rorb mov xor pop mov int mov lcall mov cld popa into leave mov or push add out pop jo mov fucomip in fistpl push jmp and sub or stos popa aaa xchg mov sbb adc push mov pop popa aas fidiv lret xor push push xor sub push fistpl aam and xchg call cltd into rclb dec rolb out adc mov stos mov mov icebp push jo pop shrl out mov dec jb arpl cmp inc iret jbe imul fdivr inc xor inc loop or adc or fldl pop xlat dec out inc sub les lcall push and test int3 sbb rcrl and std push mov mov inc add cmp rcll scas jg jmp xor ret rorl aaa sbb loopne cwtl adc (bad) jb inc pusha dec mov mov (bad) (bad) adc dec jge in push bound inc lahf dec arpl sub outsb sub ss pop cs dec popa push adc mov popa pop leave pop jne dec cli mov insb sbb push push sbb pop lods fwait jge rcll cmc sub arpl cmp mov xor adc (bad) dec add cmp subb int3 push pop int3 rcr mov lret jne sbb xchg mov repnz mov sub mov aaa inc jmp mov aam xchg lea mov push mov dec mov adc outsl push sti jmp mov pop mov ss sub push sarb xlat jle aaa inc jg dec inc fstl jae pop jnp inc mov mov mov push clc out jne mov in sub sbb aam push dec xchg jne loope (bad) inc mov add fdivs pusha (bad) repnz adc jo sbb mov mov cmp push sarl dec or mov fistp sub jl inc xor rcll and and mov mov dec inc mov insl stos cmp sbb aam out out js int3 adc pop in jl lods jns or inc mov add call jl push dec enter mov push movsl cmpb push loope pop cmp inc mov jg mov inc (bad) dec test pop jge mov dec movsb or sbb out movsl dec loop add fcmovb mov cmp scas rolb cmpsl mov popf pop jle inc dec les dec sub cmp push add mov fwait sbb iret fistpl pop adc mov and out dec aad stc adc pop mov notl sti and lods (bad) mov mov inc xchg loop (bad) mov (bad) mov loopne mov add mov xchg cmpsb inc fsubs xor into mov adc fimull jecxz push lret icebp mov das iret movsl dec js stc cmpsb in or aam xor cmp lcall push into rcrl jb (bad) ja mov xchg pop jb aam mov pop aam gs fsubl ficom pop data16 (bad) jae mov ss mov fist mov xchg nop jno jnp and in shrb sub jp ss notl dec rolb sub sahf les rcrl mov fdivrp xor loope jmp sub popa outsl dec stos ds lods jg mov orb imul jns std push fisttpl movsb lock sti fmuls or push pop inc jmp mov or cmp popf fwait cmp cmp sub cmp xchg inc mov cld push xchg int cmpsl inc mov fmulp in sbb aam call mov adc cmp ss fistl jg cmp xor jnp fildll test sbb imul sbb aas fsubl and xor and mov cmp (bad) in jno lea test xchg adcl hlt iret dec sbb or or cmpsb ljmp mov std in cmp and es ljmp jecxz mov inc test sbb daa data16 inc jmp clc sbb sbb cltd jnp test daa mov jns sub jle int3 je das sarl sbb dec lock mov ja inc sbb sahf sub or cmpsb dec stc jbe inc popl jp mov nop jbe scas mov call xchg (bad) and push into (bad) rorb cmpsb fadd mov nop pushf mulb sbb dec or movsb dec lods lods push insl push jo loopne pop sub mov and daa pop stos fsubs orl aas int3 jp testl and inc jle xor or sub mov stos notl cmp pop movups jns push sahf adc push dec pop inc mov dec push addr16 sub mov ja push aam int3 xchg es rorb adcb mov jp inc daa icebp lea inc jns jp xchg fildl mov fiadd rep inc rclb das mov sarb mov dec pop adc sbb mov inc cmp adc imul in pop and and xchg call rclb mov cld dec pushf jbe je or lds (bad) scas cltd ret cmp jmp jb iret mov je aas and push add xchg cs clc xchg mov insl (bad) sub xor call dec and lods cmp ja jg or je sub jnp leave mov cmpsl mov lret cmp clc bound inc dec scas (bad) popf fcoms push and xor data16 push popf sbb add mov shr lock das ss jns sti mov test cmpsl (bad) out jp jecxz sarb sbb jmp add scas aaa fcmovnb repnz push adc mov js fsub lret sahf dec rorb dec xor mov mov and xor sbb sahf aam push sbbl mov sbb inc xchg (bad) adc or imul sbb lcall lahf sbb int3 call adc jnp arpl inc dec fsubrl mov int3 lods adc inc fmull in stos lds jne xlat mov icebp jl sti je,pt fistl out call push xor insl enter pop imul mov push iret stos push or leave and ficom int add dec hlt ret out pop xchg push adc mov or test adcl or lea sarl xchg mov mov mov jle,pt or or pop sahf pop mov es je adc xchg movb ds fwait lea xchg xchg adc (bad) fnstenv cltd div sbb (bad) jl lcall sahf daa sbb stc add dec or in hlt dec stos or shrb xchg sub sbb inc mov lock jmp scas jae cmc mov sub dec shll mov das in aam shl xchg push nop adcl addl sub test test cli subl outsb lcall scas and in sub pop cmp lret mov fs fisub sub jmp inc push pop ljmp adc and lea cwtl jl arpl ljmp stos push js addr16 in jbe xor mov push shrl hlt arpl dec fldt fwait cmp bound or xlat push dec outsl and inc xlat syscall cmp lret cmpsl rorl (bad) and dec stc test std mov add push jle sbb inc sub decl push pop icebp xor rorl and adcl addr16 int3 pop ret test xchg cmp lahf aas or aam push xor sub movsb idiv bound popf xor (bad) sbb dec in test stos out sbb lods xor pop dec repnz imul fs jno add test call imul cld mov int jl sbb push cmpsb mov stos pushf mov out xchg gs loop je ror js dec iret imul movsl pop jg arpl bndldx fcompp outsl aas fdivrl ret jle ret test lret mull mov les xlat in mov jl sbb lods (bad) jecxz jnp jge xor ret cltd fisubr or sahf mov cmp xchg cmc inc in adc cwtl sbb jns cs cmc fcomps xchg test lods jnp popa rclb imul pop fnsave push inc or mov cmpsb sbb sub scas (bad) mov daa dec (bad) std xor scas (bad) andl (bad) cmpsl (bad) lds cmp (bad) xor movb (bad) test lods mov push adc shl leave cmp stos jmp add enter addl or sahf dec inc sub daa push mov jle (bad) and rcll (bad) jbe aas std jge cmpsl in cltd daa push fist cmpsl out jae mov ja int3 ss sub sbbl in scas lods adc sbb xchg ret mov imul (bad) pop pop sbb testb sub sahf jns addr16 cmpsb jb xchg sbb xlat fsubl scas inc cli sub dec sub sub cmpsl stc hlt pop lea inc sub addr16 leave mov in jmp clc mov dec push fmuls sahf stos push push js xor and and ja sub inc bound movsl enter pop mov mov ret test pop push xor int mov push lds push push adc icebp test push (bad) push movsb xchg mov popa pop insb inc ror jg inc lock repnz mov and cli shr imul out adc push mov lahf cmp es dec dec adc adc (bad) cmp mov lret or mov dec cltd icebp sub pop movsb add push imul adc shrb xchg stc inc mov rcl xchg and fidivr aaa xchg pop lahf icebp data16 insl add aas add mov mov enter add popa push icebp clc pop mov jl scas cmp jecxz gs aad std (bad) pushf adc mov cmp sbb ja push inc push les lods shll mov cmpsb outsb cmp lods xchg imul sbb cmpsl clc jns inc add out nop sub (bad) xchg dec pusha or fimull bnd imul mov jp lods aas lahf dec mov lds sti dec test sbb add mov jecxz in adcl mov cmc rcr stc lcall bound je xor dec lds add jnp dec dec jg movl adc icebp aam and inc mov loopne fisub ja xchg jecxz pop xor inc adc push insb sbb rcll jo (bad) and fstpl inc jl and outsb sbb test sub xchg fsts xor mov fs dec mov xchg xchg mov lods daa mov cmp pusha mov (bad) push add hlt or push xor ds mov or call sbb aaa fnstsw push sbb rcrl pop out aam je jb inc scas pop add pop mov out mov loopne aas lods shrb ds test (bad) rcrb jmp push xor xchg sti out call jl and movsb ds mov les sahf dec push and push aas int jo je mov (bad) xor mov lods sbb test enter loopne lods loopne inc sbb out sub leave add ret cmp adc mov lahf xchg jl std mov js add xor xchg js pusha mov adc into push (bad) insl pusha pop mov je cmpsl xor jg push xchg scas jg push cld gs out and mov xor enter add dec jle jno jmp jl jo pop adc fidivl pusha addr16 push push jmpw aas xor add lea mov mov add shl fucom inc lea clc shll xor mull or lahf cs push mov pop jmp (bad) or inc daa into or (bad) jge std xorb cmpsb jns sub inc into popa stos test mov iret pop jb loope daa inc jg neg ja sti fisubl lret inc mov mov fmulp out repnz mov mov sub push mov mov movsb test jg popa xor mov (bad) jl mov xor std je inc xchg sti in sar dec insl ljmp mov mov out xchg cmc test and loopne (bad) mov aaa or cmp iret push mov addr16 or pop cmpsb dec lds cmp jmp inc lcall mov mov loope imul bound outsb nop add inc test aas mov xchg inc inc pop imul or repnz cmp aam push mov adc adcl addr16 pop arpl lcall out in dec mov lea dec add (bad) or jo xor push shrl xor adc dec insl std (bad) icebp insl cs jae fistpll loope loope inc push (bad) mov bound fsub mov adc (bad) pop stos stos mov mov jp icebp shll rolb jno and cmp inc loopne jnp pop les stos mov cmp adc add xchg push sub xor inc add scas (bad) sbb je (bad) mov jns pusha popf cwtl sahf dec add ljmp sub lock mov outsb les mov push adc xchg inc movsb fld and mov inc shll stos loop outsb inc inc mov sbb xchg jle dec lods lods dec lcall data16 sub and les jl dec aaa testb mov mov inc fs scas push xor call dec pusha sub xor fisub inc pop xlat sub xchg mov cld and inc and xor inc jecxz daa adc mov fs nop sbb iret mov jge inc loopne sub jno,pt xlat mov int3 gs lcall (bad) rolb mov mov xchg mov int pop push repz dec push out out add or jb fldt loopne data16 gs dec outsb mov fidivrl push jge lret adc popf adc imulb mov sbb das sbb xchg (bad) mov cmp icebp sub xchg mov lods testl fnstcw adc inc sbb mov dec mov sub jo sbb rcll stos jbe cltd jno and js fs inc aaa adc outsb push (bad) insb mov push fcompl out inc aaa xchg aas sbb sub xchg (bad) sahf xchg jne lods arpl pop xchg xchg leave (bad) pop sbb pop or out adc cmpsl jae pop cli xor rorl js or gs and adc or jns push movsb je rorb lret xchg fwait pop clc cmp pminsw xor test mov jnp sti add push push mov mov inc jb lock je aaa and adc pop pop test pop das lret (bad) in pop xor test mov jmp inc sahf push sub test mov and ljmp jp std and loope pusha xchg xor call and insl xchg cltd mov cmpsl in and fsubs xchg inc stos cmp jne add icebp loopne fwait push cld push jge mov sub dec sbbl pop test adc roll mov cmc sti add sbb pop popf addr16 lcall jns jp rorb dec ret (bad) cmpsl dec mov jp xor mov cmp loop testl xchg cltd out shrl xchg shll rcr mull jb xchg lahf mov repz and pushaw push std xlat sub aam mov sub sub pop outsb loopne adc pop aas push jge mov jo (bad) push fucomi sbb jecxz mov pop mov out mov xlat sahf cmpsl ficompl (bad) push (bad) sbb push ss cmpsl repz ljmp and adc mov xchg pop out pushf (bad) aam mov and adc add popf cmp shrb mov pop fs xchg jle fildll test inc xchg mov aam pop sbb iret aam sbb in pop lods out mov mov adc mov pusha xor jecxz dec addr16 mov fldenv and and (bad) pop cmp sarb and jo pop into dec jns fldcw in xchg push push sub subl mov hlt or xor xchg int3 jne scas jne imul xacquire loopne les rcll in hlt (bad) and jae xchg push adc sahf inc xor mov cmp adc cmpsb movq ret in sbb sahf stos sbb out lock rorl mov jmp cmp push jmp add addr16 aaa lods fwait sub mov push test add js (bad) stos scas (bad) lret xor push mov fwait inc fnstcw hlt cmp addr16 insl std fcmovbe cld push push mov jl loope push stc xor call xchg push loop pop sbb leave les mov xor ds loopne cli sub std and stc xor insl xor push andb int dec shll addr16 ss andl das pusha divb cmp popf sbb dec adc adc mov jbe pop mov mov jns jno jno pop sbb pop jne dec add xor fnstcw scas (bad) push push test push add mov loopne xchg cmp push lds insl pop inc mov push fnstsw mov dec das mov mov neg inc repnz dec loopne lods or ja add lods sbb jge sub clc jmp enter or lods frstor jg out mov add leave mov in xchg jo pop inc bound inc test rcrl call and lret xchg or cs adc xchg (bad) notb (bad) pop pop sti jmp enter hlt cmp or fsts aaa or or inc sti inc cs fsubrl insb inc pushf mov sub int3 cmpsl (bad) jmp mov loopw mov jp adc rclb xchg sarb aam mov xchg jmp push sbb cltd outsb fmuls repz daa mov jb rclb xor push sub scas repz test mov fwait sub pushf pop pushf pop jle mov loopne int3 push mov jle andl out push stos xchg lods mov dec cmp insl cltd pop push ja (bad) (bad) adc mov push dec mov inc cmpsl sub pop insl test outsl repnz movsl mov insl in popa or mov outsb mov cld mov mov inc je push fnstenv aad sbb les gs mov pop mov movsl idivb pop aam adc add dec repz test mov push aam cmpsl cwtl cmp inc sarl pop inc insb mov dec dec sbb inc xorl addr16 dec je test (bad) out insb adc pop mov and dec pop insl or xchg sub rcrl cmp mov and fstpl jae jge and jns mov and mov popa mov add movsl fisttpl jmp in or jno cmc ret (bad) mov dec jnp push hlt mov js stos cmc dec push sub clc xor repnz jge into xor std sbb cmc mov nop cs repnz push lock arpl aam lods outsb stc movsb insl mov pop scas jae ret xchg add fstl and pop xor jmp jecxz dec xchg sbb pushf (bad) js out push push and pop cs sbb cltd push ljmp jle pop mov sbb jl repz add sbb cli scas mov pushf in mov std jge es sub outsb add jno mov aas mov cmp (bad) adc or pop jae js sahf addb mov adc outsb mov je fdivs fidivrl mov pop clc in jne out pop lret mov fildll outsl out add in and xchg dec sub orb dec das (bad) mov ffreep fs sbb mov push cmp xchg fidivrl adc ffreep divw jp push jns mov leave mull mov push xchg jp test xchg (bad) dec push (bad) jbe lock cmp jmp mov in loop (bad) cwtl push cmpsl sbb shrl adc ds lock test xchg jnp aas (bad) xchg rorl call addr16 cltd inc xchg pop sbb cltd pop xchg xor cltd popf ret cli rclb lods repnz mov jmp je cli pop inc mov stos jne rorl ss inc cmp add fprem inc mov insl in push lock mov push push inc adc inc aad shrl shl xchg sub dec xlat push popa cltd mov cmpsb lock and ds adc mov push imul xor mov or lcall jne push mov movsl icebp fldz (bad) aam (bad) daa cmc (bad) lret or inc mov call mov push negb ds pop add cmc mov push add (bad) stos inc adc sub push in ja adcl pop (bad) imul sub mov cld arpl or out pop cld push mov (bad) add xor inc cmpsl mov test cld js sbb jo fcmovnbe out movsl ljmp in mov imul movb aad jmp jo add ret xor lock push lcall cmp les lods sub jb ret adc scas mov outsb dec int bound in sbb add adc sbbl int dec inc pushl mov test jno add iret xchg jecxz rolb jae loopne mov iret ja push (bad) ficoml sbb mov ja xor stos lea sarl jnp popf fisub jp xor push and mov mov push (bad) pop inc mov nop pusha addr16 cmp mov add mov sbb pop push xor inc sub pop aas test aaa in data16 pusha pop push fsubp jo cmp int3 sbb adc xor jge xchg cwtl pop adc jb leave mov xor cmp pop and ret jno (bad) sti movsb jge xchg xlat cli insl (bad) pop stos out std mov out xchg jns repnz pushf call jne jne mov aas add inc aaa int3 mov pop push cmpsb orl (bad) mov inc out call (bad) in pop aas hlt clc push iret aas jp loop scas je mov mov fs imull and rcrl daa pop enter cltd popf xchg push cmp pop jp jle loope xchg enter add xor (bad) outsb inc (bad) into sbb cmp push je,pt (bad) sbb daa or shr push test in pushf sub inc mov nop jbe test jb and call cltd out stc stc icebp inc jo add push xchg sub movsl in stos jae mov add shlb cli add repz sbb mov xchg leave xor sbb (bad) xor dec ljmp mov outsl je cmc sbb jecxz jmp cmp out xor lcall cmp jg push aaa stos dec repnz pop mov jle xchg jo std dec pop decb sbb jl or cmpsb movsb cwtl int3 fildl jmp jle mov mov movsb pop cli lods push fwait popf lods rcrl daa push test lea mov fbld les xor xchg or mov and fbstp xchg (bad) fdivs xchg add cs mov pop jecxz xchg ret sub (bad) (bad) and shr dec sub pop xchg and push fildll into pop pop mov out popa add mov int3 inc push and cmp leave xchg fsubrs addr16 mov pusha into aam xor jns adc fisttpll pop out push iret or adc nop add xchg iret lds sub pop sti or mov test dec jmp adc jns fmulp dec xchg mov xchg or or psraw mov cmp and imul mov pop cmpsb push push loopne,pn cwtl jnp repnz test repz inc mov and push adc js daa push (bad) loop (bad) mov dec ficompl loope sbb adc mov andl xor ficompl (bad) fiadd jg dec repnz mov pop aam mov add fstp pop (bad) pop into outsb bound popf mov imulb and add insb dec cwtl sahf xchg lods cmp stos mov xchg inc mov les das sarl xchg jnp push dec xlat les sub fistpll stos repnz cltd stc add into call mov pop in fimull mov out mov outsl mov push xchg fld push push mov adcb xchg int or dec push ret in call push leave add test ds adc mov mov mov cmp jno push test mov enter inc add inc pop add push and mov clc pop imul (bad) fimull jne rorl lock mov loope adc int lea mov inc gs gs in dec orl stc mov in out in dec pop icebp mov xor imul mov mov cmc into mov cmp mov jl movsl inc sbb inc inc loop pop push adc fmuls jle sub aas mov jmp fsubl mov roll add pop cmp pop mov sbb in gs push jecxz repz aas or pop lcall or sbb inc fcomps pop jns imul mov push shl push lcall jle push mov cmpsl xchg pop adc (bad) mov lods jbe mov es lcall push outsl jmp fs cli sbb inc adc jno sahf inc nop sbb dec mov jne mov and jle ljmp js lret lcall les and leave mov sub stos mov lret cld movsl subl cmp dec dec cmpsl fisubl test shlb fdiv adc jg fisttpl dec and pop lret or sub xor xor nop out pop adc sub movsl fistpl dec jne insl inc repnz xchg add es and out ja sub jge inc insb mov xor xchg mov inc lahf sbb call push mov push and fistp pop mov imul insb int3 pop xor jo (bad) das fistp out add mov aam ret sbb mov popa cmpsl jmp leave mov push mov adc (bad) es push and shll sub je outsl jle repz test inc fldt jle add outsb mov jle mov (bad) ficomp imull mov int jns inc (bad) js lea jg xor pop jecxz and loopne xchg lcall insl movsl jp lock mov push xlat out jbe lcall cmp mov dec add arpl sbb cmp adc ja dec (bad) mulb fadds adcl push mov adc popa mov lret (bad) leave (bad) lret push add sbb sub test xor fs cmp mov jnp (bad) sub daa enter mov (bad) jle cmp fbstp imul sbb lahf fcoml outsl xchg rorb push enter add (bad) (bad) dec ja and mov mov or (bad) jo loope adc sub icebp call fsts sbb gs outsl jge xchg test aam mov pop cwtl test xor lea add (bad) jmp lahf or cmpl or (bad) idivb cmp sub fidiv out fidivr outsb jnp xlat pop cmp das xchg sub clc (bad) inc dec adc adcl xchg aam push cmp scas dec mov jg inc ss aaa test and faddl or mov pop or mov mov (bad) loope dec sbb lods (bad) mov sub adc jp xor mov mov js xchg out es and mov (bad) mov imul insb addr16 sbb movsb in jne mov mov cwtl cmp inc mov sub sub js,pn inc test (bad) push xor fist inc lea jecxz test rcr pop jnp mov mov dec inc push int imul mov cmp inc adc aam inc mov pop push jecxz dec add pop dec push inc mov cwtl pop adc (bad) out mov lock mov loop push or test sahf mov mov arpl pop int scas insb ficoml dec aas cmp dec dec inc lods icebp dec fcoms loope pop bound popf imul add push pushf outsb clc ffree mov adc fcmovnb shr add mov push int (bad) aad push mov dec rcr push inc idivl jl loopne jl orl and jge ja mov loop sub inc ja mov and rorl mov orl or xchg and sbb mov jp and jo lret cmp or dec cli dec push leave (bad) mov mov lock jecxz loope in jmp mov xor (bad) sbb xchg pop outsb inc push lods push out xchg xchg sub test xor mov mov adc out sub sub pop mov xchg jns imul xor push out sarb push mov outsl inc cld movsl lret dec and push pop add mov pop hlt je mov mov int sub bswap daa adc int mov pusha jmp sbb (bad) mov sbbl clc mov in test mov sbbl lods jae push pusha ret push nop push aas jno cmpsb mov adc test shr jp pop imul push dec repz pop mov fxch adc push push int in gs test inc fmul xchg add pop xchg cltd adc add xor sti and cmpl xchg xchg sbb mov or loop mov push mull dec xchg inc mov inc pop or jmp outsb jno pusha mov push sbb push push xor jbe clc aam (bad) jns popf jle adc movsl mov push mov fsts sbb loope pushl hlt push cmp dec xor xchg pop xchg add adc mov sbb push mov push inc sub fstps mov fiadd sub les test xor xchg in or mov xor cmp stos data16 dec jb push test jns bound cmp mov mov jmp jge mov sub dec inc ja popa mov aad call (bad) inc mov jl mov outsb jmp cmc jle cmc jp cld push scas dec out push mov out leave lahf mov add mov scas and (bad) mov jbe cld cmpsb ror fcmovbe insl dec jmp inc add cmp mov dec subl jne hlt inc stos or push sub mov add mov test daa sbb lods fstl adc mov dec stos mov js nop aad and or xchg fwait sarl (bad) push ror daa adc cltd mov enter shrl (bad) and rolb cmpsb dec clc jge imul mov cmp mov inc add pop out jle dec mov (bad) mov dec sbb mul dec xor sub outsl int cmpsl cltd sti mov xlat cmp xchg call pop sbb mov jp cmp cmp ret mov sbb cmp push in aaa ja pop xor jmp sbb add push (bad) fsts or mov lods mov xchg callw or push xchg mov xlat lcall jne pop and inc mov xor push inc dec adc xor inc das add mov and call fimul ror lds adc jne xchg in jp lods cmpsb jne sbb push jb jmp icebp xor outsl stos fadd (bad) les or add jge add jne and fiaddl cmp outsb mov loop push push scas or (bad) (bad) mov test lods inc sar loop fwait in and test jnp jg mov xchg lods jbe ljmp jmp mov movsl jnp lea sbb cli push aaa fildll nop pop imul add (bad) std pop leave xor fldt jmp push js sbb adc xor iret (bad) out xlat mov cltd jmp jae sbb inc and pop pop dec popa mov xchg cmp rolb or test mov iret nop add test push xchg loope (bad) cmp das xor xchg int notb sbb sbb mov xchg pushf sub cmp in (bad) fstpt imul std sub sbb (bad) lea mov add scas adc leave mov dec shll jbe xchg adc aad xchg adc sarl and mov daa fldt fstp and mov outsl aam cmp push mov mov adc push inc enter pop adc aaa out inc les mov and push sub sbb cmp add call clc (bad) arpl fisttpl loop inc cld or inc or or add fsub jbe lods (bad) shrl fstps inc js and pushf in mov stc inc push fist aad push inc ret inc xchg cltd dec add push in cmp adc lock (bad) xchg mov test sub inc xchg (bad) xchg push loope add addr16 adc pop rcrb add push add popf sub push fbld mov in push sti inc out rclb imul xchg sahf scas mov xor addl sbb fwait or jb pop inc cli (bad) xor or fdivl fs (bad) lods popf or repnz fstpt push add and test jge fcmovnu outsl iret (bad) bnd sbb sarb outsb das fstpl adc mov out mov xchg test inc xchg dec mov lea pop (bad) outsl popf icebp cmp or popf pop out loope jecxz xchg push jg mov lret movsl mov jnp call ljmp dec scas or xchg sbb adc fidivrl movsb mov aas pop mov sbb (bad) lcall ret movsl adc insb ja pop xor jge std repz mov into lret dec pop and pop xor outsb fwait sbb mov loopne mov mov stos push je pop jmp das jg arpl dec ljmp mov pop les out jb sub and pop repz mov sti pop fnsave mov mov dec (bad) sti xchg dec xchg mov mov out inc jge rorl aam sub (bad) xchg pop sub push aam pop sub test ja mov xor xor out pop mov lahf (bad) (bad) pop cmpsb pushf inc test lock push push lret jb sub pop inc inc cmc mov movsl hlt cmp sub pop adc repz push xor sbb popf mov test pop jle (bad) loopne rclb jbe push rclb in std icebp mov pop adc xchg adc js ret mov aad dec sub leave sarb jmp mov ss sub es lods in in fidiv pop and cmpsb jne popa adc push cli or into xchg mov mov lods movsl or je push leave push mov cmp dec mov pop outsl in loope bnd adc sub fs lods mov adc pop shrl jg in pop pop jg jp insb mov leave lods jle pop mov fdivrl sub rclb and cmp fwait pop adc aas ret pop or push cmpsb dec (bad) jp xchg dec das inc je pcmpeqw aaa lret in out dec mov ds pop (bad) cmp lahf dec lcall cli out insb shlb push popa lcall shl jnp in inc sub out fisttp mov dec je xor and sbb loopne xchg or sbb mov rcl cmp rcrb scas and out push fsubrs lea out jecxz jne mov out mov aas fldt (bad) mov arpl fdivrs mov fildll sbb repz icebp outsl sub je data16 outsl push repz jb push push cli in jbe imul ret xor push icebp mov dec mov sbb mov push iret or sub cmp mov lret sahf out add (bad) push icebp and push stos jbe xchg loope mov aam (bad) xchg mov pop jp iret cs sbb test fdiv or stos xchg ficom aas loope shrb cmpsl js and sti jmp cmpsl pop pushf cmc xchg pushf test or jno cld loop mov xor jo repz rcrb clc hlt lahf test andb or jae (bad) xor mov mov (bad) icebp mov cld push gs fs mov cmp xor cmp insl fistpll pop xor addr16 xor and mov cmp cmp rol ds push ja mov push mov into (bad) push or mov shlb outsl test out in clc pushl adc scas cmp jg mov jb js sub mov test jl or cmp out enter ss jp xor inc jmp dec cmpsl ficom cwtl (bad) sti push and xchg sbb xor pop mov sub lcall inc aaa mov int3 xchg or out scas lret sbb jp xchg push add dec sub (bad) sub sbb adc xor loope popa xor cli pop into cmp inc pop jl aas aas lret jnp pushf nop cwtl dec xchg inc clc enter popf stos dec pop mov inc add cmpsl cmp mov flds std (bad) jmp inc sub es adc ss jecxz cmpl dec loope lret idiv pop add jnp out aas mov shll mov les sarl test fidiv pop sbb sahf push (bad) insb cmpsl jns shll scas ficom shr mov or pop scas int3 pop pop fmuls xlat sub cmp and add xor adc push adc addr16 mov adc mov test mov adc xchg out popa xchg cli loop test pushf in jl das aas push dec sbb sub add aam lock push (bad) adc outsl add call insb clc dec leave mov ficompl popf push mov sbb mov mov xor (bad) fmulp or stc mov xor push cmp xorl inc loope dec fistpll mov test jne hlt jbe ret inc repnz arpl lret push mov sub fscale cltd jae popf adc sbb popa std popf (bad) push cmp mov push mov pop loope adcl pop mov jmp mov inc and cmpb out (bad) jle cli mov sbb pop sahf push hlt notb cmp jmp pop xor push bound fnstsw add (bad) lock cmp mov mov gs cmp repnz ficom push add sarb inc aaa adc cmpsl out das sub push adc push push and rcl xor je jmp inc mov (bad) lods mov cmp negb loopne jno clc (bad) out xlat cs sbb mov pop repz push out push jb scas stc xchg and into clc cmpsb jae adc jo push add sub leave mov xor movsb sbb jge mov stos add loope sbb xchg push jge (bad) pop fadd or and mov inc sar loopne sub mov xor inc dec and or adc leave movsb frstor push jo addl lock adc aaa fistpl xchg push sbb in mov mov leave popa xchg xchg cs mov imul mov icebp (bad) int3 mov dec ss cmp addr16 add out rol ret sbb push dec pop fs fisubl rolb and jae (bad) pop lods add sub aas sub jbe movb push outsb in iret mov xor jmp dec mov cmpl shl jne imul ss xor sub arpl and cmp sub pusha add js adc aas je out fisubr mov jg scas pop sarb inc movl (bad) jo mov or mov or ret jnp out mov fstpl push and jmp stos movsb hlt std addr16 mov jle xchg jp hlt mov out and fistl xor xor jno mov xor fadds lret aaa push (bad) push cmc push push inc xlat xchg pop popf pop push mov (bad) mov pop push mov inc and popf test mov cmp scas mov das jno add xor add popf mov push sub sub push xchg in lods jg out cmp fisub dec sub sbb (bad) loopne mov xchg loop cmc incb pop aam mov and add lods bound mov push inc into popf mov in sub andl and cmp push pusha push mov vexp2ps adc rcrb pop xchg pop negb scas incl aad ss stos call cwtl loopne pop pop push xchg push and push jecxz sti adc leave ret xchg repnz dec jae data16 sar mov xchg sub mov cmp adc jne jl mov jmp scas mov outsb or cmp (bad) cs mov mov out repz lods push lahf adc push push (bad) ja sbb ror cmp pop fnsave jl fistl push push mov lret cmp mov add (bad) pop fwait incl mov jecxz dec loopne mov pusha lods daa push fxtract fistpl jecxz jmp dec jle fwait je sub ror iret cmp imul push inc jp and ficom lcall and sbb dec lods fistpl imul mov arpl xlat imul scas dec in bnd mov mov mov in xor jmp adc cli stc xchg or cs push or (bad) push loopne (bad) aad in jns pushl lods mov in mov (bad) mov pop xchg pop nop push jl outsl mov (bad) jno rcrl mov pop cltd mov jb rorl xchg mov mov xor jo (bad) int mov pop pop inc xor inc fwait aaa or cltd (bad) lock lods sbb xchg or sub jmp xlat aad pop (bad) push mov scas mov mov sbb inc sub ja int and mov dec pop push inc bound push mov test movsb and mov jp xor arpl (bad) int dec inc or popf inc insl jmp pushf jae add mov sbb xor stos dec dec push (bad) or and inc cmp out ret mov jnp aaa rcll je es cli dec ss in lea mov sub std adc or or mov pushf pop xchg mov adc or mov or jecxz mov jge repnz lods xchg and push or or fidivrl (bad) mov sub movsl loop add push lret mov (bad) daa lret add mov out popa push sbbb mov sarb cwtl pop daa push scas gs mov fisubrl outsl lds mov lds (bad) or jecxz (bad) popf dec enter mov sub shll popa inc add bndldx mov loopne test pop cltd mov imul sbb pop xchg or test imul and rcl repnz loope fcmovnu (bad) xchg dec testb inc repnz je sti ds std push cmp xor pop mov lods xor xor pop adc aad out es hlt cli fstpt hlt pop jns or popa or xchg pop cli dec movsb lahf fwait mov mov insl adc mov mov dec mov ja ficoml ja,pn jecxz leave mov adc xchg cs push movsb jl and into mov mov lock jg rcrl inc cli cmc stos mov jno xchg inc fmull in movsl dec mov xchg in mov arpl sti xor inc cmp (bad) adc sbb push mov mov outsb mov jae in xchg xor insb cmp out fnsave les mov fisubrl or xor out cltd xor decl add add je mov mov add jbe cli fist cmp out fildll pusha dec xchg loop sub lret add outsb jnp (bad) notb dec imul imul dec mov mov cmp jle xchg push std add push sahf pushf flds sbb gs into aas out das rcr pop push popa fldt sarl adc dec and es lods pop jnp mov repnz fadds in enter int3 mov mov or push test jmp mov cwtl test dec jno mov sbb popf sbb movsb mov loopne xchg push sbb out cmp out ja (bad) daa ret dec aaa add mov xor mov dec (bad) sub ret mov insb sti and mov dec dec lahf arpl push test (bad) std mov mov sbb jns (bad) xor pop popa rcrb cmpsb jmp inc aam jo or mov jmp (bad) push cli and in inc push inc leave call mov ds mov je stc insl xchg xor bound cmpsb clc aad fiadd jmp leave mov ja cmp fadds inc insl mov insb push pusha mov dec and mov (bad) in mov dec jo adc mov xchg sbb or mov or mov std (bad) int3 pop lock idivb iret push dec pxor gs and fiaddl rorb cmc addr16 inc dec mov das stos movsb mov js in push cmp jne fistl push pop adc or jns mov ljmp xor adc adc sbb inc loop mov jno sub adc subb adcl xchg mov fidivrl inc out or jbe mov xorl jl mov arpl pop in les mov push add cs and mov cmp pop fwait gs sub outsl jns pop jge in sbb add repz fsubp jne mov fs lcall jbe inc fldt mov sub push cwtl clc add xchg ja repz jae mov in mov inc sahf mov mov add negb cli mov xchg inc icebp add xor jmp scas mov data16 push rclb jne lahf push fwait add or add mov stos xor loope rcrl sti xor jbe mov push push pop outsb cmpsb push mov sbb sub sub lea hlt cmc inc nop fsubrs jbe sbb push mov dec insl sarb sbb aas inc xorl and cmpsl pop add jl ljmp mov insl fs xchg sbb (bad) call xchg add (bad) dec mov addr16 jmp adc fxch (bad) dec push jnp iret mov jmp cmp repz dec sub inc sbb jp enter aas mov (bad) pushf jmp adc int3 loop sub dec xchg or nop jno dec fistpll dec adc sbbl mov adc fisttpll rol sub pop shl and inc scas push lahf cmp repnz pop sbb sbb jle xchg and test mov push cmpsb aam insl pop pop inc popf call xor and add lcall (bad) leave mov jge mov cmp pop into cs xchg addr16 mov mov insb pop jbe xchg sbb das fistp lcall adc popl jp (bad) and fimull mov jl push imul mov addr16 test (bad) lock rclb imul lea mov mov iret loope mov (bad) mov notl pop pop (bad) stc add mov jg mov cmp xchg jle xchg aas push (bad) push or xor pop fsin or aas inc mov out fstl adc cli add sub mov daa cmp pop imul pushf xor sub dec jnp in lods sbb in push mov lret xchg mov xor or inc les cli push scas inc push push adc jmp and cmp mov insl outsb repz (bad) mov lods loop cmpb int dec (bad) lods fisttp pushl (bad) mov pop dec out in test (bad) je pop cltd outsl mov or bound cld incb pop jecxz call xchg jmp mov push cmpsb (bad) enter mov mov (bad) dec loop stos push add arpl inc mov int and test (bad) fimul incl mov ljmp add inc add and push xchg test push sbb mov ret mov mov inc or aas inc jno fsubs or dec faddl pusha fdivl sub inc rcrl add mov sub and xchg subb popf sub mov mov into or out sub bound jg push aam (bad) movsb fwait xchg add jns cmp test jbe fisubr cmc or mov xchg mov add pop ljmp pop cwtl out stos xor jg xchg lcall pop jno int3 adc idivb xchg sahf mov out or jge mov jns cmpsb je das mov test movsl out js fnstsw push mov mov ljmp lret les (bad) mov push mov subb jno (bad) dec pop inc (bad) adc and mov mov aam add jl inc jbe jno mov mov mov in xchg pop roll mov in mov fwait in mov popa adc (bad) pushl iret sahf icebp cmp xlat pusha rcrb and ds pop testb std jecxz (bad) jp dec (bad) mov fisubrl aam test adc add xorl sbb popf clc adc int je js inc adc gs xchg (bad) int scas pop pop xor jns out jo cs es out adc cltd push mov clc jmp sahf loop rclb popf sub inc dec inc adc add addr16 test int3 les mov jb xlat (bad) ss adc out movsl ja dec add xchg mov lds adc and jecxz xlat iret ror mov je sbb sbb and fsubrs icebp cltd sbb icebp adc cmp inc or push or das lahf xorl ret cmpsb gs xor add cs insl xchg or dec push shlb xor les (bad) sub (bad) jecxz mov out or out mov je test fsts lret test pop addr16 cmp inc or call dec out adc push je into dec aam aas sarl fisub test fiadd ret mov test bound out repz ds xchg pop sbb push push jo cmc pushf out pop cmpsb pop mov (bad) fimull in push std pop lahf test loop mov mov nop mov pop stos jne (bad) cmp push jbe sbb inc inc daa insl lret xor or loopne dec xor cmp sahf dec mov lea sarl mov (bad) jb xor xlat dec lods scas fnsave add or jo loop pop jno inc lods incl std rep loope roll inc ret pop ret in paddusw xor pop push jp sti test or popf in adc xchg xor and dec dec mov in add aam mov and add and jo xchg sbbb aas xchg dec sbb xchg pop add dec cld movl dec rorb (bad) hlt lret stos push sbb add cmpsl jns notb inc sbb add in enter mov jnp pop adc mov dec pop pop lahf mov push dec les jno out (bad) stc or lock and aas out popf push dec (bad) icebp cwtl dec xchg fcompl jp les bound sahf push in mov xor popf sahf push jecxz push into lcall and (bad) mov add or adc loop mov or add push mov ret lret cmpsb mov mov sbb pop sahf loop inc xor jmp rcrb and pop sbb dec sub and push xlat and jnp cmpsb dec inc out xchg sahf ss pop cmp cmpsl (bad) jne xor bound lahf pop xchg (bad) out in sbb dec mov mov call push mov xchg stc pop jns rolb in sbbl mov (bad) push pop jg inc fcoml enter sub xchg out adc mov inc dec gs test and jnp pop lret fdivs int or jb cmpsl stos xchg (bad) je imul xor pop push sub test jp mov lcall imul inc shl jmp and in inc loope jecxz jae sar stos add icebp pop jle fisttpll mov push orl icebp sahf pusha pop mov inc jnp or pushf dec clc testb or cli adc fcomps loop loopne xchg pop call js mov ret lods test push add pop pusha repz pop or icebp lods adc dec jnp lods add fldz imul add mov mov arpl test fistpl (bad) clc inc in les lds jns jne std (bad) or push dec sub orl jno ds and sbb mov dec sub dec push int3 mov rclb and cld jge mov les insl fwait js mov in jecxz enter jns addb (bad) sub (bad) push enter sub add mov mov cmp jo xlat fcompl mov jo fist xor adc mov xchg faddl mov mov pop mov stos in xchg jb cmp (bad) jg stos sti cli sarb fdivrl or rcrb sarb mov push repz clc scas cmc stos mov inc or hlt fs and js fmuls call inc fidivrl outsl outsb leave call jns sbb (bad) pop fmul ljmp fiadd xchg add jae mov or test or je sbb push sbb insl fist fsubs sub push mov (bad) in sahf icebp gs mov xchg dec bound jp insb sahf stc aas sub (bad) pop add mov mov iret sub mov or (bad) test add or cvtdq2ps add mov mov dec sub fwait sbb push mov lods pop loope cmpsl (bad) jbe punpckldq lods mov std aam and fisttpl add mov lahf mov mov xor xchg pop pop mov mov (bad) (bad) mov inc cld jecxz out dec push fildl push sahf leave outsl iret repz add lcall out mov sbb xchg test lahf mulb mov rclb mov leave pop pop into stc lods call out adc fisubrl call dec mov fildl xchg mov ss repz cmpsl into jl mov fwait (bad) push in jnp and sub ljmp clc dec dec testl or lahf jle mov nop dec roll or or pop mov cmp cmp aam fidivrl sbb icebp lahf jne inc sbb sbb push imulb ficom mov dec xlat imul and dec in adc or jmp sbb mov add cs jo loopne pop fcom inc jle sbb push cmp xor jmp inc inc pop setnp jmp stos mov lea jge out jo lods xor imul fstpl fs outsl fmuls out pop addl pop hlt ret mov push ljmp push gs push push fidiv sbb push dec popf pusha or (bad) jno mov outsl in jle (bad) out popa addl pop aad stos adc mov jno (bad) subb sahf mov lahf or jae fadds jne jp and pop adc add add or stos xor mov (bad) push aad fimul xor mov cmp mov fnop cmp out mov pushf test (bad) loopne int3 enter arpl lcall in sbb mov push adc inc inc in movsb push mov cmc out adc and pop pop lret xchg loope lds inc sub xor or jb stc frstor mov dec push and scas mov inc mov xchg push or aad in pop mov xor mov test add xchg stos insl adc jle ja mov testb jne cmp jns sbb or inc push sub push mov aaa sbb test gs mov jle leave inc xchg je in push ret pop rcll dec push sub test rclb xor mov or out inc pop cs (bad) pusha mov mov or xchg fnstsw xchg and sub cmp pop mov cmpsb add sub jno inc and mov inc fucomi cmc sbb lahf insb xchg mov popf (bad) mov ja xor call add sub test (bad) mov mov jmp or mov pusha adc sub repz mov jae or sub sbb pop jp dec mov icebp mov xchg ret js sub les mov stc clc cmp xchg mov xchg inc jbe push fdivrs xorb pop (bad) lds (bad) ds ds mov xchg push adc push sbb push mov or es adc sbb mov cmp or pop jmp fsubs aam pop lret and fstpl test out push sbb lods mov into sbb add mov pusha push jp ds push aas fxtract push fs inc (bad) mov sbb pusha cmp sti inc repnz xor lea xlat scas js cmp mov mov sahf dec jne fcoml popa in xchg push nop movsl pop rorl sbb pop (bad) (bad) and pushf cmc aad pop cmp orl cmpsb push xchg sbb pop out lahf cmpsl add sbb test mov idivl xchg mov cmp push pop fbstp mov xor dec fcmovu in aaa and add arpl mov mov pop jecxz push pop data16 lcall sbb mov inc and dec in push and xor push (bad) icebp out scas mov push add jecxz cli aad fisttp jl sti jl ljmp dec pop push mov and dec push in mov icebp fiadd into pushf out neg in add jmp dec sbb xchg loopne repz out int3 pop pop xlat sbb push add jns jno push ds xor or push jb cli jno lock push mov mov pop das dec mov cmc pusha or sti data16 mov cmp add insl shrb cltd data16 lds jmp or sti inc sub ret leave popl in enter ja inc into scas (bad) mov sbb decb mov pop clc sbb push (bad) dec pop cmpl or std outsb cltd ljmp cmp mov push jl inc sub inc jmp aaa popf mov stos inc loop stc (bad) imulb mov icebp cmpl inc mov push inc add ret sbb loop xlat enter mov mov mov mov std cmp cmp test mov jg cmpsl jno sarb cwtl scas inc cmp dec aam lds mov in fsubr inc ret popf aas popf push cmpsb cmp xchg adc (bad) xchg cwtl xor and sub ret sub (bad) aaa mov stos push aas bound mov ja (bad) cmc jne fsub xchg imul hlt pop ds scas scas pop lahf insl mov lahf gs lods fiadd in sbb mov in or subl lcall in rcr int3 (bad) adc das pusha sub jns push int3 dec sti mov out lea dec mov push or data16 push in insl inc cltd dec cmp cmp stos add decb lea mov dec sbb adc sbb inc mov pusha push lahf mov mov jbe lock mov pop jne mov les or pushf inc in test cmp lcall cmc nop dec adc push jp mov pop inc jl popa xchg mov ljmp mov das lcall lret test mov inc xchg (bad) (bad) mov xor std xlat mov jbe decl jbe xchg pop test fnsave dec jle insl pop push jecxz out add mov pop add je call pop fbld jb mov out adc cli cmp and pop push outsl add push cmp and mov push push add mov push push jmp jp outsl add xor push and xlat icebp ja stos lret repz stos lret sbb jmp push into mov inc add sub pop pop sarl loopne mov dec (bad) aaa popf (bad) xchg in ds (bad) xchg cwtl outsb mov int3 inc inc in push loope aam add pop clc (bad) insl lock cmp inc repnz jb test jo outsb sbb inc sarl int3 xchg aas popf les mov mov mov test stos mov sarb in push popa daa adc loop cs jnp leave std lock sbb pop leave lock ret fcoml xor inc fisttp int add push daa sbb mov jecxz push rcll or mov notb mov pop stos inc in jmp ljmp cmp mov push leave mov mov rcrb gs push cld out test (bad) cmc pop dec sbb aad dec dec push lahf jecxz test pop dec out xor adc dec cmp add decl mov mov cli addr16 mov mov adc test dec lods outsl roll das test fildl push jnp inc sub jo repz xchg cltd xor out ds pop sbb imul mov (bad) adc mov adc outsb rcrl lods fisttp cmc sub repz ret addr16 sub mov adc mov add push icebp clc (bad) sbb aam arpl ficompl sub (bad) adc test sbb lods xor inc pushl mov inc mov daa push xor xor jp add int sbb and call inc lahf out pop mov cmpsl and xchg and insl mov sub mov xchg lahf cmp and int3 lahf jge mov aas stos fbld dec pushf inc stc es xchg inc ret inc jl dec mov or xor es push stc jns jp scas and shlb mov sti xor add in leave cmp stc or cwtl dec mov push fadds aam into mov push ds jle das (bad) lock ds fwait into cmp aad mov fsubr jae pusha or pushf out jnp mov or push lods das adc mov jl xor push lods mov test push jp add fmuls cmp xchg mov stos dec mov loope xchg push sub pop movsb inc jne (bad) movsl cmp movsb idivl addr16 xor leave stos mov adc es dec gs jg (bad) adc mov hlt cmp ds xor jge imul fdivp pop push int and and fisttp ss movsb call xor pop pop jnp sub test mov add and data16 clc jge and pop mov mov outsb add pop ds aam sbb cli cmp aam pop sub cmc in nop ret imul aad imul jne out add (bad) cmc loope add mov mov imul and xchg cmpsb dec ret popf sub int leave lcall test mov cmc (bad) mov gs jnp lods and aam out jecxz pop mov add (bad) imul (bad) lock dec into lods loopne jno inc fist out stos insb cmp cltd ret jge (bad) pop or mov inc (bad) add dec stc add mov sub mov shlb scas cmp inc jmp mov push xchg aam xchg in pop and and push jno adc stc adc addl sub sub sbb pop out inc cmp sar cli cmpsb cli rorl jno mov out push mov inc jno rclb pop sti push ss jns inc fs mov mov loopne ret in lds jmp stos mov xchg xor adc push jge push sarb ljmp and mov in sub lods xor std cld mov in jmp inc and cmpsl push imul mov xor pop pop decb fstpl xchg pushf adc bound icebp xchg pop out pop outsl inc sub sbb mov push jmp add (bad) repnz pop pop sub push in pushf cld sbb pop adc in xchg and test (bad) (bad) mov lret out mov scas cmp sbb sti dec mov (bad) lock jne or mov aam sbb dec mov mov jbe cmp rclb pop outsb int3 hlt (bad) mov fsubrs push push ss iret gs mov mov movsl idiv lods xchg in in inc inc push sbb mov fldcw scas les cmpsb or pop rol push (bad) mov xchg xor mov jg mov lods push cmpsl sarb dec fsts mov mov cmp into shr cmpsl xchg sbb mov mov jb test test mov leave ret repnz outsl mov pop insl (bad) arpl dec stos (bad) (bad) mov adc mov push jne out (bad) loop ljmp aad xor pop cwtl imul test add cmp mov cmp repz jo fisttp (bad) (bad) or popl lods mov imul cmp aas or cmpsl xchg jae adc dec lahf adc cmp (bad) pushl jge in push mov outsb or mov (bad) mov iret xchg sbb adc pop hlt xchg sub jmp clc push fucom xor aam mov ja jae dec divb outsl ret xchg in mov ds xor mov sub push push sub mov jnp mov xor mov mov mov push in mov sar mov and mov test loopne ds fsubrs mov daa push pop mov and clc adc and mov jno dec insl ss xor fs (bad) lock inc aam out cmp cli push icebp sub jnp fsubrs mull adc imul mov icebp inc in jmp (bad) out mov sti dec repnz lahf sub mov mov inc orl pop (bad) sbb ret adc bound mov into jae mov cmpb add or xor add push (bad) mov jne sbb and mov mov cmp adc xlat std adc mov lcall cltd lret push mov in insb sarl sti sbb les add aaa aas enter fdivrl and loope mov pusha (bad) cmp inc sub jg cmp in push push cmpsl sbb cmp les pushf and in cmpsb pop sub pop aas push lret cli in pop mov adcl aaa and cmpsb mov mov js aam out mov and out add repz inc xor in shl pop xor mov mov mov (bad) adc test dec rol fwait and inc lods rcr lcall or (bad) test enter and sbb dec cmp and lret cltd and sub repnz scas jns fwait xchg adc jns jnp jmp stc pusha test or mov push orb add jmp ja (bad) in in cmpsl jae imul sar fwait ret sbb add xchg cld test loop lock inc aad aam loop sahf sbb outsl mov scas jg insl icebp jae cmc push mov xchg lahf aas and pop scas test fxch mov cmp adcl mov mov push mov sbb mov repz aas xchg pop lock (bad) adc jmp jecxz,pt mov and pop imul dec jg in mulb jno jg cwtl movsb pop bound jecxz jnp test mov jno movsb push cli jo popl out add xchg inc cltd xchg (bad) popa sub pop data16 jge cltd or rcr inc mov in mov insb stos dec lods pusha test outsl loop insb ret rcll xorl sbb das mov dec adc xor pop loop out icebp out dec cmp repz lret clc xor pop outsl (bad) fnstcw arpl inc jns push fidiv mov clc sub dec pop rol (bad) in and mov add dec dec or push and push lock mov stos push xchg icebp jecxz fldenv xchg mov call std clc cltd stos aam fsubrp or pop adc decb adc jnp jl sarl ds pop xchg lahf jb push ror enter pop or jg cmp rclb fistp mov std cli aaa or popf xchg add test inc lods pop cwtl jecxz in es or aad and push inc mov dec andl mov loopne icebp inc adc xchg mov andl lock leave add dec cmp add fisub and sahf xchg into xor adc jb dec ficom sbb add mov cmp aad daa movsl pop test cli daa (bad) add xchg rcl insb inc mov lahf push cmp adc adc imul loop cld xchg push imul test stos mov je inc mov xchg popa (bad) scas add sbb bound clc mov call fisttp mov lods ret mov cmpsl rolb (bad) jmp add xor push mov sub or xor xchg dec lock pushf lret imul mov sbb sbb shl jno in mov push mov cmp mov sbb jns adc fs inc or pushf dec xchg lods mov dec lret and cmpsl dec mov lcall rcrb mov fnstcw dec rol mov pusha cmp xor xchg xor std and pop add mov and jo in insb or inc sti and xchg xchg cmpsb ficom xchg jecxz add sbb mov dec cmp jns arpl adc sbb sarb mov inc mov inc scas push xchg inc cmpsl sti cmpsl adc dec push inc xchg jge lds out xchg xor jne es inc mov xchg mov bound rcll fisub mov mov xchg push cmp inc xchg dec das sbb sbb adc aad pop in pop loopne mov cs and fsubp sbb cmc les inc cmp jae cmp pop add mov cmp mov (bad) jne cmp imul xlat jge hlt and mov pop fs out std in xchg push inc cmp pushf xchg jl rcl pop pop pop cmp (bad) fstpt mov sbb sbb je enter mov or lcall std and fcomps pop dec or mov sub push xchg loopne jns (bad) and mov push stos pushf pop cmp mov (bad) jne inc rcll xchg mov shll arpl (bad) jnp mov in or dec jno das fnstsw lods fmuls xor shrl xor xor repnz add xor fcomps and iret and or enter sar and movsb es xchg inc mov leave call and fdivs scas xchg adc or add or insb jnp daa test js sbb lea push inc mov push mulb shr pop arpl lea les xchg adc or mov add insl (bad) cmp out add sti mov jnp arpl fcmovnb mov mov out (bad) shl imul jmp and out jae into adc pop inc lods stos outsl test pop jne push jge pop sti out sbb stos cmpsb call stos push sti sbb cmp jno cmp mov cmp cmp in cmp xchg add pop adc or inc test sbb pushf dec stos or mov push xchg or lods inc push mov pop pusha dec daa jmp fcoms (bad) movsb inc inc jmp add pop fnstcw mov shrb (bad) mov call and or mov xchg (bad) sub and jge jnp lahf inc push jge enter sub push cmp (bad) js or inc sub cmp inc data16 mov gs mov ret sbb addr16 mov repnz add lods mov sbb lock add fnsave inc mov xor sar repnz pop xlat push mov in loop push out xchg inc push cmp fild xor add and test pop sbb or repz (bad) jno pop cmc jl iret imul mov adc ror (bad) xor (bad) out pop mov andl adc (bad) ljmp arpl aam add adc icebp movsl push mov in push clc push daa jge enter mov push jmp rorb in mov push cmc inc push or mov iret pop fwait rclb and repnz roll jae xchg into pop xchg clc iret ja or test mov mov jmp sub out or sub out jb mov and aam cmp jg cld fadd aaa jp int push lret xchg imul enter pusha and mov (bad) div dec sub pop stos (bad) push xlat cmp repz test mov and sub test in and sbb rcr cld in xchg cmovge orl cmp xchg mov push cli mov roll and pop inc and inc jmp xchg fisubl push out lds cmp mov out mov jmp ss push add cmp pop (bad) lret xchg ret mov ret and xor xor fidivrl dec fmul pop fmuls push js bound pop xlat in lods fs sbb cmp inc dec into xchg (bad) push movsl jae test mov xchg iret xchg imul scas leave push mov and rep xchg add mov push rorl ja add hlt in sub fmuls cmpl (bad) jb icebp rcr pop or push lods mov xor insl jno push add outsl icebp or icebp dec lock xchg sahf dec push outsl adc add test mov sub pop jmp gs ficompl aam mov imul and dec testb movsb cli (bad) lea mov xor lcall (bad) xor add outsb sub cs cwtl lsl out adc push sub jl data16 repnz ret mov int3 cld movsb mov int add int popf into movsl pop sub jmp lods cmp mov loop add stc lods mov rolb jnp inc bound mov push dec or into std enter or sar xchg roll pop cmp pusha gs xor lods sbb rcll cmp pop jl out (bad) jae xchg jns (bad) fwait cmp cmpsl addr16 roll inc ja xchg test (bad) mov jbe add jl xchg pusha insl pop jmp add mov or leave sbbb mov sti dec jl pop mov nop mov shrl lds int mov lret (bad) pop fwait mov cmp cs xchg out mov stos dec push out dec daa inc and jbe jae fidivr mov push jbe jg enter mov cltd mov jo cwtl sti push cmp orl nop leave in out inc inc pop mov ds pusha xchg mov push mov add push lcall xchg mov js pusha sbb mov lock or loop repz dec xchg (bad) shrl xor xchg xchg sbb push xor lds daa hlt daa lods push loope and outsb lret push sub or inc mov push stos mov fwait int3 hlt jp xchg insb cmpsb ss inc imul lods sti mov xor xchg jg pop push fwait or les addr16 rcll loope dec or es xor fimul xor mov or data16 cwtl aas xchg mov adc inc mov sbb cmp lods dec jo xchg sbb in xchg mov adc insb jmp bound aas xor (bad) movsl out fdivs test addr16 pop fild je lock inc jae pop into ret paddusw push nop in scas mov int sar into add arpl sub loop mov pop add or lahf jl xor lock add iret in xchg (bad) icebp and xchg in (bad) in push jge shll ja dec (bad) cs (bad) outsb adc leave lcall cmp ds mov xor and mov or mov dec sub mov pop pop xchg jo in mov lret ja xchg into pusha or xchg push pop es shr mov popf test xchg ret jge out cmc testb aad and mov aas mov dec into cmp fnstsw mov cwtl xchg das movb into and aas shr sahf mov pop clc sbb fcoms rol test inc insb push in aas cmpsl xlat mov adc xchg ljmp and and (bad) push (bad) cltd xchg xchg mov out or lea aam xchg insl fs and movsl pop loopne sub dec out lds sub das outsb stos cmp mov add and jp and loop test push aaa call push and pusha xlat pop inc idivb lods imul idivb ljmp add ja test mov out pop and adc out xchg rclb and movsb lret cmp cs ret cld push cs cmp arpl shll pop in adcl sbb cmp or inc jge rep pop ficomp insb sub jae rclb inc pop sti ljmp jl add xchg js popa shlb inc hlt cmp cs mov scas push test mov in pop inc shr and add call pop xor adc or imul mov inc fstpt dec bound adc dec mov insl mov (bad) sub enter ja cli movsl pop dec dec adc add sub ljmp aaa xchg push mov inc cmpsb add xor and loop ret xor add popfw stc mov lcall (bad) imul ficoml sub stos cmpsl push sbbl dec sbb mov cld and adc sbb fstpt sbb pop mov xchg push idivl sbb xchg jo cmp lahf xor js aas arpl in add xchg pop je test cmp clc js xor jns icebp xchg pop cs movsl cmp pusha fs mov aaa pop cmpsl call mov xchg rclb in fidivl sbb add pop arpl andl mov (bad) push loopne mov or ficom pusha push dec mov in push dec movsl loopne pop sbbl jge mov cmp test add test (bad) mov enter mov inc jecxz and dec je xor mov jle fwait xor and mov mov push adc (bad) xchg outsl cwtl ret mov scas cmp jge orl cmpsb adc inc inc cmp (bad) repnz inc rorl mov dec and out jbe adc out out xcrypt-cfb cmpsl add mov popl subl out mov ljmp add adc loopne faddl mov mov iret outsb mov or mov divl mov test and jmp jb or jg and mov aaa (bad) aas inc or mov fidiv push movsb out pop fnstsw push lea cli cwtl (bad) mov enter js sbb mov mov and mov cwtl inc xchg repz dec jmp inc sbb pop mov push jns mov mov push push inc sub jno leave out inc add jns rorb arpl or add (bad) xchg int3 mov and inc mov xorl add lods test dec dec or int rclb cmp arpl stc ss mov loopne sbb hlt add jb pop fidivr mov xchg lahf mov xchg repnz xor jge jg jae xchg pop add jge inc sahf sub inc push dec stos ss dec int3 fsts fs and xchg cltd xor cwtl mov lea dec enter cmpsl push pushf push and lcall sbb sub jmp push xor lds or bound sub cmpsb in adc aam lret cmp adc pop lcall lret xchg arpl sbb daa pop mov movl sarb push adc enter push add or inc ljmp scas pop movsl jle push cwtl hlt xchg xchg lock cmpsb popl xor fist rcll or (bad) mov enter inc ss xchg push out mov (bad) loope ss sub add mov jbe lret nop cmp add mov pop (bad) ja pop (bad) popa into xor push or hlt dec jg and pushf sbb push push or std pop test xchg sbb push sahf jmp cmp lods pop repz push adc (bad) jae cmp pop lcall xor or add mov iret stos mov out mov aam mov dec neg fwait xlat mov repnz out add insl mov je dec inc fimul call xlat sub or movsl test sbb xchg aad sbb mov fsubr fiaddl out out inc ja ss add (bad) cmp lods jae adc icebp (bad) dec loop adc or and les and inc int push mov fbstp enter dec cltd xchg dec mov insb aaa test xor jl negb (bad) pop aas in sub cmp in jp (bad) mov repz aas jnp jo fisubr mov xlat pop sub add lea (bad) popf and aaa inc nop in stos jmp sub js and adc std push mov subl ss (bad) fdivs add dec xchg data16 mov stos dec jge or aad xchg sti mov dec and or rol add aad les daa add in jmp sti push scas dec mov call jo out add in call mov mov mov xor mov ret mov mov fidivl sub lock (bad) push decb decb loope pop xor inc rol cs jnp xor ljmp dec add sbb dec add push xchg or add dec scas lock push xor add add xchg add shll cmp mov aaa decl arpl cmpb sti dec add and push mov call jb repz rcll mov stos stc in adc outsl add sbb (bad) add mov insb adc int pop dec iret call jbe push and int or jb add jns xchg adc add fnstcw inc inc idiv mov insl sahf or pop mov mov ret lret imul mov jo add addr16 mov mov mov or ret enter lret test (bad) mov or fsubs xchg lcall mov jns jp aam cwtl mov mov pop iret daa lea test cwtl jb inc xchg push repz mov lods sahf cld xor out mov xsavec inc fmull push lahf in sarb sub icebp xor sub test not inc pop ljmp sub addl adc cmc aas inc imul cmp es imul jno xchg jo imul mov leave add cmp fisub jmp mov push dec std into fstl xor push lahf pop jbe cli jle into popa scas and int3 mov push out movsb loopne xchg in xor inc lods mov mov ss imulb (bad) jg sarb ret mov test xor mov inc loopne mov inc xor push dec imul sub push orb insl push fisubr jmp jnp js jecxz inc sbb fsubs in xor add adc mov pcmpeqd xchg pop pusha push (bad) rcrb call or (bad) fs jecxz inc mov stos mov mov lret dec add sbb jb clc aaa pop sbb add mov cmpl test lods sbb mov aam ss cmp push jno add sub loopne mov ret jae push jmp pop (bad) push or jno (bad) mov cld xor dec dec outsl ss movsl cmp dec jg scas mov xchg sbb mov mov mov mov pop or sub adc fnsave jle xor add xor fwait cltd push pop test fldl repz sub orl cmp imul jecxz loop int3 int3 lret inc xchg inc cwtl jmp xchg out mov data16 int xchg lock add in cmp xchg add in push das lds jno cmp insl mov movsb xchg icebp sub lds incl push pop push pop gs cli int3 jbe push das (bad) repz loope jnp rsqrtps incb test mov (bad) xor cmc mov andl out lret dec cmpsl mov aam dec cmc mov add aad mov adc cmp or cmp add test jb test dec not push pusha mov jno xchg add sub je add push sub jnp dec jle inc sbb dec je or jmp dec xor pop test nop add and leave and stos negl sahf ljmp into inc and sbb stc cmp cmpsl dec xchg pop inc xchg lock mov inc dec adc mov push jne fcmove addr16 inc sub inc jg sbb sub repnz std (bad) pop sbb lahf mov rorl inc push fst add or push add ss into xchg xchg clc insl (bad) push lods pushl lret dec (bad) fstl popa pop push sbb jbe jp sub push jns dec movsl imul and dec pop push push mov dec pusha push leave add test adc lret dec scas cmpsb test shlb add hlt cltd xor aam out pop in push in fisttp pop (bad) mov jne add icebp and out test or mov inc sahf lcall std stos jnp cld mov sub loopne sbb and clc xorb fcomip (bad) leave sbb jb add mov jo (bad) xor mov mov xchg xor into adc jne and out jnp in sub subl dec (bad) pushf jo popa fmuls cmp sbb adc nop (bad) (bad) jmp mov or int3 imul repz sub das fidivl pusha cmp inc ss aam (bad) (bad) fdivrs rol xchg and ljmp adc sbb negb pusha lods cmpsb lods or divb xchg popa or jl cmp fcomps pop and fsts sahf mov loope popf (bad) aaa mov rorb cmp push out les adc push and cmp push jmp cmpsb lods lcall insb fcomi adc pop (bad) or jecxz stos sahf movsb rorb outsb les call dec cmp jo aaa ret into mov cmp cmp fnsave outsl xchg jl jle sbb and addl adc shl (bad) outsl test cli mov xchg xchg mov sbb aad xor jbe cwtl mov mov imul xchg mov inc xor and jecxz dec fnstsw popf xor jge lock dec mov pop in out leave add sti jecxz push rcll mov mov ja push mov movsb or mov (bad) addr16 push std xor push xlat aas ficompl cmp mov xchg int3 fst and (bad) xor mov sub cmpb mov testl jo inc fadds pusha lahf mov jb adc iret pop mov lcall call jle stos mov xlat push pop gs arpl out repz cmp test aad sbb lret scas cmp or dec jbe push lahf cmpsb adc add aam imul dec icebp push mov add inc das xor jns clc pushf mov xchg lds std pop hlt sti bound mov shl mov dec jp rcrb add out or loopne push mov xlat flds sub or sbb mov adc (bad) push xchg lret dec sbb into scas les sbb movsl or mov push cld fistpl stc push int pcmpeqb js,pn mov mov aas insb inc cmpsb flds xor lods jbe addr16 and lods lcall in lret mov movsb in lret lret mov stc push push shll xchg popf imul jle push lods mov mov ret lret mov cmpsb aas je (bad) in movsb jmp or in test or test push add inc mov dec icebp jecxz testb rol mov inc fidiv mov ss cmp andl incl jno pop xchg cmp mov push mov (bad) sbb fcmovnbe sbb test cmp add fwait inc inc ja pop (bad) fadd std aas test xchg shlb insl dec fist iret adc sbb lea enter dec mov ss test popa xchg mov insb inc out std mov and push out mov enter ljmp inc (bad) mov mov sub push ja sarl mov repz fcomp pop jle repnz lret cmp cld xchg or imul push ret cmp rcrb xchg (bad) repz out jns jp mov decl into movsl adc dec jae push aaa sub (bad) mov fwait mov dec int3 test lods dec xlat xlat stos adc divb mov repnz cmp out aaa mov in dec fstpl lods and or mov in rcr dec fcompl push shrb es in pusha in aam enter pop and out stos push adc mov jb mov sub mov adc mov mov cmp hlt xchg mov jmp mov add rol mov adc ret out fs jno or inc insb js loopne clc daa lret push adc movsb xchg dec sub insb jbe imul fistl or inc xchg ljmp cmc pushf int pusha pop adc outsb in push cltd jg cli pop cmpsb pop outsb mov xchg out xchg loop fidivl add xchg xchg dec in insl out dec cmp add sbb sub xor fcmovu (bad) aaa inc mov mov test cmp pop nop mov hlt xor xor jne cli push cltd inc pop fidivrl shr dec out ret stos scas sahf mov aam insb pop leave jns ret mov cld das xchg repnz ds (bad) int3 lret xchg arpl pop push or cmp jns stos addl pop inc (bad) movaps scas notl jno mov out gs std inc cmpsb out adc pop mov dec outsb sub repz mov aaa test inc bound inc jo test jnp inc inc push clc push and fst (bad) rorb jmp mov push cmpsb scas or insb scas stos add daa xchg xchg jbe outsl mov pop jl adc cmp pop add and fisttpl inc mov (bad) out mov gs or lcall fwait clc adc mov sahf jo and das mov sub jnp sub add mov stc ja push adc xchg repnz dec icebp in out xchg loop divl add in imul jo dec cli sub add mov repz lahf mov fdivrl jne push sbb mov dec cmp jl jnp jle int and pop xchg mov sub clc pop outsl gs stos neg fiadd mov subl sbb push jae cmp pop ficoml fnstcw andb and xlat ret bound adc outsb test cmp or stc adc pop push jae flds repnz aam and repnz jae xor call in and push and push dec (bad) out add hlt xor push xlat movsl mov ljmp dec outsb iret sbb leave clc ficomp outsl cmp cmp inc fistl cs add mov pop arpl mov ss sbb push out enter pop out push (bad) test addl add lcall inc into leave jae iret ret mov pop jmp adc lock mov or pushf loopne mov adc cmp mov jnp cmp test pop rorl int3 push jle loopne inc or pop adc lret sbb cwtl lcall jbe push rorb adcl (bad) pushf pop je shll add dec lds psubw cmpl sbb fbld jae dec or sub lret push test and inc mov int sub fldl2e fidivrl cmc nop iret xor sahf popl ficoml cli and push sub outsb (bad) cwtl cmp cltd xlat add sub mov std adc sbbl adc lret xchg jns icebp mov xchg cmp mov adc sbb xchg inc loop test dec (bad) mov sbb inc and lea lret insl mov xchg hlt scas xchg cld dec (bad) or ss mov lret aam movsl dec push xchg lods jo nop out dec jbe add cmp (bad) push test fsubrp stos mov ss dec sbb repz shl (bad) pusha scas adc fisub in outsb sub int3 or out push repnz nop sub or mov and int (bad) jmp outsb fist jl jmp (bad) jbe (bad) mov sbb xorl test push dec ja add js and mov je fnop mov and cld mov sbb xlat sarb pop bound mov in in pop cs ss out sub push ds dec ds sub shll aad pop stc jg jg call mov cmp aas stos imul jp mov sbb pop adc jnp out pop add inc (bad) aam jno rcrb dec mov xchg fwait and mov push out push sub mov fdiv mov mov mov inc test scas mov (bad) dec xchg dec imul shlb cmpsb inc scas sub jmp int3 repnz daa pop jle dec repnz fwait stos xor or subl push mov mov nop popf cli jge push sbb ss clc pop test stc mov dec pop cmp mov adc or pop push dec jge out xor (bad) lret lahf aas add or dec bound add stc iret inc stc rcrl cmp fsubrs mov dec mov dec std push cmpsl add jge test test mov int fwait push cmp lock inc xlat mov dec inc clc jo rcrl sbb enter int3 sarb sub sbb call and cmp sbb outsb push repz inc fs pop jl mov pop sub rcrl (bad) pop cmp icebp shrl pop popf xor xchg nop test (bad) daa fs es xchg cmpsl popa mov xchg sub mov dec repnz hlt inc adc sub dec fldcw (bad) sub jmp mov repnz cmc in arpl insb repnz dec or sarl adc and sbb mov bound cmc cmp nop sub outsl cwtl xor mov negb add and jbe adcb dec mov mov lds inc popf (bad) cmp aam mov fcmovnb lock into insl pop jmp push orl jne daa xchg lods imul mov inc xchg ja fistl popf fwait sub cli xchg (bad) stos fadd xor xor movsb or or int cwtl enter adc mov sbb das sbb mov decb sub jl mov inc test or cld ljmp in inc pusha dec daa rcll lock add out mov pop mov sub dec mov dec adc xchg sub pop mov sub sbb jns lds mov add adc mov (bad) int jp dec or (bad) xchg data16 jg mov lds jmp test jp push xor cltd aaa cld add lcall push pop cmpsl inc mov pop test xchg dec btr sub xchg cmp clc insb outsl lcall (bad) or negb push sub add push insl or lahf in aad daa pop push dec jb lcall mov es sub jnp mov sahf fs in fild pop frstor rorl call dec mov sub pushf adc ds lods sahf addr16 and cltd scas xchg mov lea loope (bad) in sub mov (bad) xlat in (bad) aad dec push test aad stos jb cmp sub xchg sbb inc fistpll cmp sbb mov xchg dec clc add arpl push push ret lahf mull pop jmp pop mov cmpsl (bad) cmc and mov test xor jnp pop (bad) clc push push mov dec (bad) iret cmp jno mov jne dec or sub je movsb in sbb mov ret mov loop sbb aaa xor jecxz xchg jae out (bad) xor andnps lret mov inc jnp xor mov flds sub lds idiv call dec mov add xchg sbb cltd inc cmp pop aad test das aad movsb movntq mov mov pop inc and out js mov mov pop push mov arpl scas xchg sbb mov sub jno shrb pop cs inc lock pop mov mov mov sbb or in xor add pushf dec ror clc adc mov lret pop arpl add lods xor test ret rcll add adc cmp sti adc out cmpsb pop mov fild fsts pusha lcall repz lock into mov icebp in into mov (bad) jge pop popa (bad) loope jns push adc popa imul incl (bad) aam sub out jo aad in mov lock and jb dec movsl cs mov icebp insb and xchg cld hlt loopne or sub mov and pop xchg xchg es add adc ljmp jo arpl push dec ja loop outsb test decl cmpl jl push mov lret (bad) loope call add subl adc adc fcmovb in movsl and or pop jg stos cld out negb xchg add jl ret mov cld fnstcw (bad) push out sbb sbb add push dec inc insl jns paddusw loope fwait and mov fs enter jmp (bad) jmp stos xor les (bad) lea sbb push mov and addb shrb jl test arpl mov test jbe aam insl adc cmpsb jl inc fildll movsl fnstenv sti cmp (bad) push rorl imul or lret (bad) cmpsb sbb cmp test jmp leave adcl xor or xor push imul add fnstcw xlat dec imul in jb push mov push xchg jp or (bad) mov mov mov bound hlt in hlt xor (bad) add jle iret mov fisubr inc jb repz xchg lret sub stos jle (bad) mov mov dec dec mov bound dec jp scas mov mov inc or nop xor in cmp sub and mov out and into and test add test inc sub ljmp cld iret mov aaa pop sub and or ja mov adc in mov or or mov adc jg dec test dec pushl jg arpl mov pop xchg dec mov mov (bad) aam mov sbbb xchg push sbb insl add push stc popf pop insw sbb push xchg inc cli pushf punpckldq clc mov add add jno inc cmp inc inc sahf fnstcw mov dec jmp in push clc xor and hlt cmp pop cli cmp (bad) in pusha bound add push insb imull lahf dec scas inc push shrb adcl outsb iret xchg out or pop pop mov xchg out ja dec (bad) adc inc lock xchg in test pop or dec cld xor into cltd xor adc or push cmp arpl and pop popf jns ret leave gs sub jns sti dec je loopne je addl mov adc sub pop into loop repz inc lea int mov jp pushf xchg sti out add bound shl xchg cmp and loope dec mov bound mov pop (bad) aam insl outsl inc pop insb pop ss adc jecxz push cld pop sti test pop sub mov (bad) loop mov mov popf dec bound cmp andl mov mov lods (bad) adc add je push dec mov sbb das sub lds stos mov popa test aam xchg mov and stos inc mov push adc cmpsb and push push push repnz push ficom dec ja cmp sub and lahf cmp dec ss adc repnz in sub call mov les rcrb clc mov into lea mov pop dec mov or shrb mov jns mov outsb enter sbb dec into jno xchg lahf shll jns bound incl fcmovbe movsb jns dec scas xchg scas mov dec sbb aad ret sub test mov lahf pusha mov inc les push enter pop imul lods enter insb pop sbb subl dec imul jmp mov jp mov dec mov pop mov aas clc pop aam pop jmp jbe (bad) int mov dec movsl sbb pop sub clc jnp push popf jge sub sbb jno or outsl cltd push sbb push or lods lods lret lahf cmp in pop cmpl movb xchg arpl sbb lds mov jge mov aas ret orl mov and pop int adc stos mov mov xchg gs push popa popf loopne pusha inc ret add shll jle jl adc push leave es sub aam ror cmp jbe mov or (bad) xor cmp sbb jge xchg sub xchg push jb (bad) lret cmp cmp mov add out lods jp push mov sbb js jle or (bad) (bad) outsl mov jmp jno xor enter into imul hlt push (bad) icebp imul hlt iret cmp dec and scas daa fsub push cmc cs daa stos cli inc icebp xchg sbb mov jmp and cmp cmp incb sbb je mov sub in lret mov dec ja fwait pop mov or adc mov inc mov jns (bad) dec sar mov std ret adc (bad) jbe xchg pop adc add push adc notb rcrb fcomps xchg xor lock fwait sbb and vpsllw add repnz sti xchg cmp push cmp and jg cmp sti mov fsubs xchg push sbb add adc das scas mov decb mov adc adc call shrl popf out sub fidivl clc out (bad) loopne ret push dec xor in mov ss cmp jne lret lods addr16 in sbb jnp mov sbb data16 cmp push mov jne xchg jmp or push mov and jle loope cmp dec push fnstsw fdivrl xlat mov push ret repnz gs xchg ljmp xchg adc xlat push xchg push mov aas test enter push cld mov insl enter sti inc addr16 cmp xor lcall or scas xchg outsb (bad) roll inc jg cs aad jge or fwait push mov and mov les aas lods lock mov imul mov movsb mov push cmpsb repnz stc fwait dec cmovle cmc rcrl nop xor jg mov fidivrl dec fbld mov dec insl movsb js mov mov xchg out lea int enter jno ja fcomi addr16 (bad) push xor mov push push fcoml mov std pop movsb xor dec push icebp jb out sbb bound pop sbb sbb lahf and xor out sbb shrl fcoml jecxz push inc inc and push jbe mov in inc mov or fbld dec (bad) loop sub jmp loopne sbb sbb mov sbb rorb (bad) mov jl pop mulb xorl addr16 mov ret ja xchg sbb mov sbbl (bad) repnz test inc (bad) jbe dec cmp inc aad mov leave and cs into ret or add mov dec lcall xor lods (bad) int3 in mov adc fisttpl imul adc pop sub aam or and fadd xchg dec xchg std and test or sbbb mov jne out xchg and addl jle adc popf or inc je dec out loop mov mov leave cs es inc into fst rcll hlt fdiv mov jne (bad) mov push rclb add jle xor pop fildl mov cld das jmp out jge test pop enter cmc imul mov mov and aas cmpsl mov cs jae push push add ja lret push dec aas push jno xchg pop inc mov hlt gs sbb sahf mov add inc jno sub scas mov sub cld sbb lret xchg ret cmp outsb nop inc cwtl and inc je dec xor sarl fsubrs push scas pop fldt jno inc jp jg jg maskmovq testl mov call mov cmpsl pop push cmp rorb push xchg (bad) mov ret sar imul scas xor out fsubs bound add xchg xchg jg fdivrl cli clc fidivr add push imul int lods ljmp or aad dec ret daa add push js cltd mov adc jbe cltd movsl enter cmpsw mov inc jns and xchg das and subl sub jb mov (bad) out rep dec sar mov inc and cmp jmp push sub add jp jnp addr16 icebp mov lds (bad) lret mov cmpsl add mov ljmp mov (bad) aas pusha xchg lods cmp sub hlt movsl out adc mov std push adc jg ret arpl add scas lods inc sub leave lock popa (bad) cmc stos fs (bad) push arpl mov mov and fs daa xchg push xchg (bad) call cmp mov pop aam xchg ja lds pop loope mov roll in jne mov pop cmp mov push cmp popa adc jg mov stos xchg andl arpl push jne add sahf mov movsl daa lods mov imul xlat push cltd pop lcall fwait movsl je adc lret loop rcll sub sub push test add sbb cmc lods mov xchg push repz mov xor fild cwtl push add fsub ret imulb adc inc and adc sbb mov dec aam inc (bad) enter mov lcall out push xor ds pop push (bad) in fwait or out stc mov and cmp or loop cmp outsb outsl cs fst inc cwtl iret mov xor sub sti and scas adc sub jle repz cmp mov mov jp fsubr cmpsl sub out loopne dec push mov xchg test outsb sbb xlat cmp mov icebp push xchg leave mov mov xor hlt jo sbb adc dec repz push (bad) jbe dec or (bad) dec movsb shrb insl leave xor std ss nop in hlt inc mov sbb and jge jmp sbb loope js imul pop sub out imul aas out dec xlat cmc cmpsb faddp or adc push xor push push sbb (bad) std aaa cmpsl jge jg sbb lea es jle xchg cld adc dec sbb daa test inc je mov push cli stos test shll popa jo ja mov dec pop lock jge mov xchg push or and pop data16 lret outsl loope mov xchg jge mov mov fmuls mov (bad) sub add test (bad) push inc aam (bad) jno lods mov sbb cld insl or sbb cmp xchg and cs sub iret mov cltd das lret pop pop push addr16 daa in inc jge mov ror lcall xchg inc xchg das sahf xchg nop jbe push sbb push leave xlat mov pop rclb sbb cltd jno lds scas dec mov or out xor jmp add push cli outsb add add xlat and das in mov xchg sti sbb ljmp std xchg sub jmp mov subl test aas mov pusha xor xchg adc inc mov shrb fs and push push mov mov pushf clc in loopne adc les cli mov push or and in xor orl pop jecxz jo je sbb fdiv clc pop lret hlt push ror dec int hlt push jbe fadds sti xchg cmp popf xor and imul jmp movsb insb push pop arpl loope mov push fcoml cs mov pusha or rcrb leave jmp xchg jle nop ljmp aas dec mov sbb and fistpll stc add add mov popf jl mov sub inc les out add xor in or js pop or or inc pop pop repnz add mov jmp (bad) pop mov jmp inc sbb insl mov adc dec insl pop sub ret fwait mov and or lock jge ds xlat fildl or into dec ret cli cmpsl lret les aaa and xchg sub mov das or pop xchg addr16 andl pop call adc movsb sahf add adc sub je mov mov aad ja mov push sbb mov add jae inc adc add sbb (bad) outsl cwtl jae dec mov sbb pop add (bad) fcomps pop fild sbb and pop xchg les rclb stos push sub push cmp fwait or mov xchg (bad) icebp jae or dec push cmp jne xchg and lods add and insl or (bad) pop aas cmp das xchg mov popl (bad) cmpsl xor aaa lret mov cwtl xor outsb fwait push cmpsb push out cmc jne out sub add jl push mov movsl sub sbb add adc addl sahf adc mov dec mov out pop adc negl cmp fwait jo xchg (bad) shrb icebp or mov sahf mov lret nop (bad) loopne mov xchg iret lcall (bad) or push in push insl movsl mov inc in ljmp sbb insl stc mov scas out adc jnp call test or mov pop pusha or pop nop (bad) fcompl mov (bad) mov shrl xlat (bad) js scas clc cmc rorl fs xchg xor xor es ret mov sub or lcall outsb and hlt addr16 cmpsb push aad movlps ljmp cmpsl pop lcall je mov sbb jne in adc sbb sub xchg inc jmp movsl leave mov das scas pop cmp push inc cmpsb push and or mov testl jo inc and push sbb dec nop shrl out xor mov dec call pop mov jb jg shrb jg ss mov and push or stc add insb call mov addr16 dec adc or xor push into and movsl xlat cmp mov pop dec arpl (bad) xchg shll pop add popf roll push mov test jl roll std sbb sub (bad) mov test sbb scas cmpsb rcll jb outsl test pop adc movq in sarl jmp out cltd mov sbb hlt sub pusha jge das addr16 imul dec lret pushf pop loope jne lahf mov sub outsl jae in jb mov cmp stos fdivl loope fsubs or fnstenv into jbe dec ret addr16 mov inc enter dec dec mov stc arpl lahf inc inc mov push stos outsb xor cmp xchg rcr arpl ret adc push jp ret sar pusha mov mov shlb fwait inc push rcrl (bad) arpl fldl cmp adc and fiadd lahf int3 roll dec clc mov mov xchg sub aam push or (bad) daa sub jne push hlt cmp mov lock fisubrl pop lods ds mov cmpsb out scas shrb mov inc out jl out in js in outsl nop ret movsl rcll jne lock and cmc adc sub int3 push jns,pt insl cmp pushf out fs cmp stc dec dec clc testb mov sbbl ja mov les cmp sub lds cmp outsb jmp push adc jmp rol test or loop or mov dec jnp pop outsb lods xor imul pop imul cmp (bad) jl dec mul cltd jae push jno xchg sbb cmc pop out adc jp cmp rcrb cmp lock xor mov flds mov rclb ds sbb push mov scas sbb cmp (bad) cmp xor lret cmp jb mov mov sbb lea (bad) repz sbb outsb fdivrl add out daa inc ss and call push mov dec xchg mov cli mov jb (bad) nop sarb jnp mov jmp (bad) jbe popa inc xor push pop movsb adc pop out int3 (bad) in or pop ljmp or mov out imul leave add cli or add loope xchg les xchg fiadd jmp jecxz js add xchg pop cmp rcll jle xor testb mov cmpsb test aad popa sbbl dec out xor call fcmovu adc push stc into lock faddp dec jmp adc gs inc or leave and es push test call dec std ja pusha stc fsubp mov pop dec xchg jmp xchg test sbb pop inc rorl movsl aas loop fdiv sbb jae adc inc jecxz add ja (bad) call outsb xor ds call aaa popw jl pusha pop insl mov es sti test xchg jo jbe fisubr xchg sub push add in push (bad) pushf adc scas fwait gs iret ficoml lahf into sbb cmpsl jle add aam scas ss mov test es clc jb jo pop mov cmpl fildl or arpl jb mov outsl sbb rol pop (bad) outsl cmp in fidivl inc stc xchg jge and mov call sub lock je subl popf int imull push pusha and aam call movsb add (bad) jae xor dec pop imul (bad) out mov mov inc jns inc rcrl (bad) cld enter dec jb jl adc lcall fcomps sbb and push jno outsb lds push test xor addl (bad) adc mov xchg ret fcomps pop cmp movb or ds popf cltd mov xchg mov or jns pop cmp jg mov fwait and out pushf (bad) leave pop outsl std pop movsb inc adc mov fidivr dec mov fistpll pop movsb jecxz jo push loope and das mov mov int3 inc pop imul dec cmp and mov clc cmp loopne gs jl (bad) push leave mov nop mov rcrb lods (bad) and ds or mov add adc mov aam xor (bad) push insl sahf jg adc cmp lret cli mov movsl adcl dec push sub scas outsl add add mov sub xor fsubl and stos mov addr16 sbb stos mov ret pushf cli xor sbb sub dec jecxz pop or fadds add jno adc sarb lcall pop pop aad scas mov mull daa call idivb (bad) push mov and xor add sub or out es cmpsb (bad) mov push adc loopne pop xlat add and xchg and iret and enter stc hlt mov cmp (bad) movsl push adc lods sbb imul mov clc or dec (bad) jb mov int3 je in repnz ret int and pop cs lret cltd lods test (bad) cmp lcall xorl ja xchg (bad) mov addr16 xlat push xchg jle (bad) cwtl xor jmp sub ljmp roll or mov movsb and xchg and loop mov or in jg shrb and mov cmp cli stc fmuls cmp mov into mov jno adc sub pop and sub push jmp xorb or fstpl ds (bad) (bad) fcmovbe push pop mov daa push jmp (bad) insl adc repnz imul push sbb lcall lods inc test mov add push rcrl icebp inc cli mov fdivl fs jo scas mov jbe jl and insb add dec mov add stos sti lret sbb imul mov add (bad) mov cmp inc cmc inc (bad) dec mov lret sub notb jmp (bad) pop fcompl stos (bad) sahf push pop bound xor iret imul dec sbb sarb int3 or stc stc or test lods mov sub and sbb sbb inc push sub sub cld sahf sub add cs xor jge out ret imul pop inc adc in push cmp rcrb dec (bad) xchg rcrl jno mov into pop pop pop mov cmpl movsb mov jne xor insb or inc mov push xor roll les or iret sbb pop fmull or popf fistpll inc or jbe sub sarb and lahf test (bad) int3 inc dec jmp insb mov mov adc xchg (bad) mov add fst cmp mov jnp and mov xor sbb pop adc push int3 imul xchg push pop pusha clc lahf jl lahf cmp inc out or add test mov xchg das pcmpeqb xchg or adc sub jne (bad) adc loope cmp xchg jmp jae cmp mov fistpl pop sbb popa out xor or push xor cmp test (bad) sub andb mov pop insb enter xor adc cs loopne hlt adc (bad) pop cmp lea or and int3 jo mov push jp loop lahf sub arpl jmp jae addl arpl ds in aam dec test popa mov mov pop sbb push mov lods imul out leave jmp cmp ljmp or pop popf std imul push mov pop jne scas rcll cwtl add mov pop push shll mov mov iret and push xchg cwtl xor mov mov xchg mov add jae jl pop fnstsw mov inc test out nop aas (bad) (bad) pop pusha ret jo,pt jb xchg sbb mov inc popf out xchg nop aas xchg xor mov outsl push mov loope adc in (bad) xor out stc adc popa jno add pop das pop or mov test mov mov inc cmp or in js inc pop push or fldcw repz mov pop push fisubr out dec into int add adc cmp aad ret fidiv push dec pop aaa pop push pop movsb xor cwtl xchg fcoml sti add pop and xor scas lret mov fsts push xchg stc fidivl hlt jo repnz add rorb daa add push test pushf data16 dec mov out push push mov fisubrl and scas sti test iret sbbl pop (bad) hlt xor das and jmp adc jnp jge cwtl and loope (bad) shrb adc or icebp push je movsl xchg dec dec jne pop push cltd jg add dec mov fbstp push into (bad) in add pop and (bad) add cmp sub inc or (bad) (bad) push cmp jnp (bad) mov fstpl xor sub in dec and jmp rolb dec rolb imul mov dec pop imull mov lods and pop out xlat and add add push xchg push push movsb or xor out out cmpsb jge (bad) rclb pop jno gs push cmp cltd jmp sub add ljmp rolb sti rorl stos mov mov loopne ret mov mov movl push (bad) lahf (bad) insl pushf xchg movsb repz mov gs pushf test inc cmp dec xchg cld (bad) das mov mov xchg xchg std mov or push pop fstpl inc and loop (bad) mov pusha sbb out and std mov xchg sub ljmp fimull aad cmp lret in cld add mov pushf dec mov sahf mov (bad) fwait arpl xchg jno popf dec in rcr xor scas (bad) sti leave dec cmp scas ss incb inc frstor add sbb cmpb push add leave mov popf cmpb out popa loope mov and pop loope aaa xor in mov in add mov jecxz mov rcrb dec pop and xor insl jae rcrb loopne xchg xor outsb fcmovnu jecxz mov hlt mov mov nop ror jnp cli jnp xchg out push push stos or fsubrs xchg (bad) and dec adc fsubrl cld fs mov in push std movsl les xor and jb es rcr sti sub ljmp cmp adc push push xor and xchg mov push adc jnp (bad) pop jo add pop int3 je cmpsb or xor addr16 sub and cmp jl (bad) daa lock dec sub cmp jae mov lock dec out mov sub cli icebp (bad) (bad) cmp (bad) stc pop jno inc test scas popl or add rcll and mov jbe cli fcmovbe stos orb push ds mov cmpsl fistpll dec sbb add loopne adc mov outsb movsb mov fild and inc add addr16 lcall ret (bad) cmp mov mov and in pop adc and push push inc in call pop loopne cmpsb repnz mov dec cmc add mov jmp jae sbb mov movsb xlat sahf cmp mov xchg bound adc inc xchg push push and mov sub in outsb inc mov cmp and lret std out sbb add test ss mov mov push adc mov (bad) xchg xchg mov or xor shll sbb push movsl add and scas cli (bad) cltd inc fcmovnu xchg adc subl sub in push mov shrb xor repz lret xchg xor pop orl xorl add push scas jmp inc adcl sub sbb pusha inc mov pusha xchg pop (bad) rorl or pop and mov xchg add xlat enter int jmp nop and cmp sbb aad mov push or (bad) fcomi in (bad) sbb rcrl sahf and cmpsb inc adc mov jmp test fistl fs test mov fincstp in int3 rol adc mov ljmp bound lock xchg adc in push (bad) or negb (bad) and mov (bad) stc mov mov add enter jecxz scas cmc out nop lret flds xor pop scas xchg lcall jp in insl or notl mov xchg cltd lret lea fwait sub pusha dec xchg cli push adc popa call pop inc cmp mov fcoml adc cld pop enter pop clc test pop aaa cmpsb stos pop xchg sbb pushf ficomp cmp loopne cltd loopne nop or cmp movsb daa or inc stos fcoml clc adc nop mov loope mov mov cs xor in sbb add sbb xchg stos mov popa mov and push fidivl cmp dec cmpl das sub add mov enter jbe add fdivs inc lock fcomi jmp mov push xor mov clc sbb sbb sarl mov or scas push dec or call add lods sub nop push (bad) dec cmc mov sub adc das inc adc inc es rorl popf les inc test xor xchg xor xchg mov les mov movsl gs daa push (bad) (bad) jp sub insb lcall shlb xchg pop sub dec fiaddl mov fbld insb mov in pop cli or inc jle hlt sahf lahf dec in fsubrs in ret arpl (bad) es jbe dec cmpl adc faddl (bad) flds (bad) scas and test leave mov aam cmp cmpsl mov (bad) dec enter in (bad) mov cmp in adc sbb sbb push in enter ljmp dec lock out dec test (bad) pop jp mov outsl jbe movsl sbb js and lds mov sbb outsl jecxz rclb mov ret call xchg outsl std push jne inc sub pusha xor bnd int xlat test mov pop mov dec lods daa sbb and pop stos test jno ljmp (bad) mov xchg in push jnp test or adc in mov pop movsb add (bad) aam dec push xlat int (bad) jbe inc ja daa pop mov adc movsb inc add fstpt fcmovnu sbb daa jne mulb nop sub leave loop in sbb xorl lock lcall push sbb jl pop scas mov stc sbb push mov push mov movsb imul pushf mov adc xchg movsb jg cmp pop imul addr16 test jle mov movsl xchg ja pop cmpsb pop xchg in add stc repnz fildl insl (bad) mov mov hlt or xchg mov in mov ret fild push jl lea jno in (bad) das pushf cli inc (bad) rcll (bad) fs push ljmp fwait push xor xlat cmp fmuls cmp into inc cmp in out rorb jecxz jb mov mov (bad) ret imul sbb adc xchg test ret pop cmp lock fisttpll loope push pusha leave movsb jbe into add or dec inc cmp into jg mov mov pop daa (bad) push fwait push sbbl jb dec or aad jae (bad) jge mov cs pop mov and repz jo mov lods xor jne fnstsw loope pushl ret (bad) leave xchg or pop popa into xchg (bad) pop arpl adc dec xor in jmp xchg push push ja in arpl pop adc roll sub rorb cmpsb and ds sti xlat movsb push mov mov pop jmp scas test add sbb ss stc test fisubrl test icebp ja dec push arpl sbb cs mov ja adc jnp sub mov imul inc fucom (bad) (bad) addr16 push xchg mov add loopne addr16 es dec pop jns mov in push push iret test mov jne outsl in adc popa add roll icebp sbb shlb mov mov mov jp test cmp mov inc shlb pop add test sti (bad) mov adc fisubr movsl add (bad) mov mov pop rclb popa xor sbb rcl mov not icebp inc movb popa sub push jnp adc test (bad) mov sti rcr xlat bnd mov sub mov dec fcoml stos sbb clc or loope iret and sbbb out repnz (bad) push (bad) icebp repnz add mov cmp adc (bad) ja mov in cmc mov jnp sti mov outsl cmp mov std (bad) insl aas or jnp xor addl add mov jo in sar test dec scas mov jge jle out lods pusha dec xchg sub mov das or mov sub pop int3 pop call (bad) dec adc xchg out movsb adcl mov lret das clc jno cmp mov cmp or lahf ret and ja out pop dec jl loop adc cwtl mov outsb arpl ucomiss insb xor aas daa add std push cwtl dec push loopne xchg rcrb jge mov mov aad fstps ret hlt xorl cmpsb pop js jno std and (bad) fwait jg clc scas jg addr16 dec jbe imul jnp iret sti mov lea stos mov shrb vpaddb in sbb lcall sbb xchg xchg mov inc xor movsb or jno jl add mov inc mov lock pop xor or fnstsw repz test mov ljmp ljmp jbe sbb cmpsb lcall jg cwtl pusha or aad ret jge movsl loope dec les mov test lods or daa movsb mov out mov mov pop lods scas jle je or and pop les int jecxz inc mov enter push add cmp xor dec cmp xor xchg jle or cs leave stos in std mov cmp mov jmp test (bad) popf cmp fbld lahf (bad) mov mov sub test shr mov (bad) ret add xchg imul push cli mov sub sub or jecxz cmpsb push pop cli loope ljmp mov mov aas adc cmp loopne cmpsl out js je mov pop sbb pop dec mov test add dec loopne cli mov pop loop in jbe rol sbb lret pop gs lea pop loopne es mov stos mov scas (bad) (bad) mov rcrl outsl mov loopne cmp clc sub sub push push lock pop pop fisttpl xchg mov adc add push in out pop pop lret dec loop lds add cmp movsl out pop push mov mov inc loop jbe outsb jo and outsb inc and inc fcmovb sti jbe fidivrl and lret outsb lods call xchg xchg pusha mov out pop aam jmp int3 bound ljmp inc rcl lods push adcl adc jl inc lds vmread fstpl or loope scas cmp adc pop (bad) mov and cmp xor scas nop push cmp mov add adc mov lea (bad) xor push (bad) out loop push mov push (bad) jmp (bad) sahf xor add dec or mov je xchg sbb fstl dec and add mov movsl and add icebp pop loope jl (bad) mov or and xor pop cmc adc mov shlb insb mov xchg jno in pushw jb fnstsw aam (bad) fs pop aam pop mov dec sub jo mov mov adc shrl data16 fcomp add cmp clc stos xor out dec jg imul loopne xchg les js sub mov lret and xchg sahf xchg jle lcall mov (bad) fistpl ret pusha mov xchg xor jne in adc (bad) pop daa cltd jnp andps mov jae lcall scas cmp mov push pop sub dec jnp and mov add imul sbb arpl mov mov arpl xchg dec in mov push jmp inc and mov pop repnz push gs mov dec lds outsb ret inc (bad) cmp add jb lret (bad) insl cmc nop fcoml xor mov test jl add inc and push or jl out hlt out cwtl sub stc xor leave rorl pop jl inc cwtl push bound inc repnz jge sub add shll or (bad) and and inc sbb adc pop (bad) xlat or pop jl lea jge sti pusha in inc popa push aas mov out cmp adc and and cmp cmc lods je es dec enter cmpsl sarb mov dec (bad) hlt cltd mov icebp jno lods xor jo mov (bad) subl xor sbb inc pop mov cmp adc sahf js pop lcall std mov mov mov xor xor xor es imul pop mov repnz cmpsb cmp add add sub mov loope popa add outsl jns leave cmp xlat outsl movsb ljmp jo jne sub popf (bad) clc test pop mov fbstp mov inc xchg mov push inc ret or sub (bad) push jl (bad) cmp jmp lcall dec out xchg pop in adc lret pushf cmp test js movsl mov cwtl jge add mov inc mov push jbe lret jb add dec push jge test sbb push lret and add push jmp cmp bound cltd iret cmp pop out xchg sbb push dec sub inc das nop js cmp pusha jl loope pop mov adcl ret inc mov mov sbb pop (bad) leave push cmp insl cmp jg iret mov clc hlt or outsb sahf adc (bad) scas out push mov sbbl lret call insl mov mov movsb jnp scas cmc out push (bad) movsb inc daa insl dec sbb cs push int3 or dec jp lods jnp sub xor mov ret mov out (bad) enter sub xchg mov inc inc addr16 xchg xchg xchg jecxz xchg fst pop adc das (bad) sbb adc (bad) xor xchg int3 in clc (bad) repnz jge and cltd mov nop mov pop jne and push push push push cwtl ret cmpsl ret enter jbe fcmovnu rclb and xor push pop test jge ret cli cmpsl mov dec dec test xor (bad) jg cli mov mov and sub jne rcl clc dec or sub inc mov xchg test pusha inc mov fldln2 jb dec sub aas lock jno mov jle or and mov sbb jnp iret xchg xor cmp jle dec xor jns aaa sbb mov mov scas xor xlat mov xchg sub adc clc jecxz push fdivs mov cwtl pop mov insl lock scas icebp mov fildll pop movsb test mov xor jae mov cld mov sub insb xchg adc pop dec inc add sub sahf shll stos pop lock orb clc test or sti jnp jge popa or xchg repz das and loopne jo fisubl stos push call mov ljmp dec vcvttpd2dqx mov (bad) out push aad aam sub sti repz daa inc push mov or jecxz mov mov xchg jns cmp and in jle sub faddp popa daa mov jg fs test inc fsubs jp xchg (bad) jg dec lcall xchg xchg push leave popf adc fs xlat xchg ret dec fcmovnbe add mov mov add aam loop aad out dec sbb push cmp pop call sub pop lods insl fsts cmp pop sub aas jnp or sub mov xchg mov repz dec mov inc dec jb repz jae in stc popf pop lock inc cmpsb mov sbb das push sbb lahf push cmpsl dec mov dec cld sub shl xchg adc lods add push lcall xchg clc inc je pop or add ja xchg push pop insl dec pop push inc mov mov jp iret xrelease sub pop dec rcl clc jbe and xchg jl les push pushf and inc inc fnop repnz in aad sub insb sbb cmpsb cwtl sub ret push pop in lock popf xor or bnd push push aam sbb loop jae (bad) adc out repz mov push mov fs dec pop adc inc sub pushf lret fildll pop cmpsb imul xchg push enter jno adcb in pop popa jecxz jp movsl repnz lret xor lcall jg stc jg iret jb add xchg sub mov or xchg loope lret mov outsl pushf jae fiadd mov int3 sub stos imul out inc add pop adc jnp pop (bad) xlat lahf add sbb mov gs cmp push loop inc loope (bad) daa mov idivb sbb clc sahf roll sbb test add cmp in add jp cmpsl mov mov jno das inc pop mov add fwait xchg stos jecxz adc rcr mov ljmp scas mov out aaa cmp mov mov aad les test enter mov stc lahf clc std and mov std repz shlb inc inc jnp mov aas adc int push sub push sbb mov int3 sub pusha and push add cmovs jg cmpsb push and cmp xor notb cmp push fxch adc outsl or popf sti (bad) arpl or fiadd fnstsw dec mov cmp and jb jle mov call cmpsb and lcall sarb daa or dec (bad) fild test push cli lret in dec and subb out or mov sbb xchg ds xchg (bad) jo dec fiaddl fsubl sub push inc lds out dec push mov push sbb test (bad) push push in in test and stc dec mov lods and xor mov inc sub jge dec ret (bad) scas lret divb fnsave (bad) jg aaa mov (bad) mov (bad) mov (bad) lods sub lcall lcall lea push xor and lock ret pop shll les push or pop fistl cmp loopne xor mov push aad insl and xor cmp jb scas mov add stos int3 int3 lret inc pushf inc fwait jne addr16 or movsb jnp xorl mov or jmp cwtl js enter stc jbe ret sahf pop imul add inc in xchg rcll dec fnstcw push xor cmp insb test and add sbb mov adc out or je int (bad) in or jb pop sbb push shl ret ret inc es insl outsl sti mov lds cmp and sub ret and pop jnp nop and cld cmpsl data16 dec cmp imul sub nop dec out mov sub into and (bad) adc js cmp ljmp mov push sbb dec add mov imul mov adc (bad) jb jne mov add ds lods rclb mov iret int and add idivl (bad) pop cmp xchg movsb mov mov mov mov fcomps pushf pop out ss pop sbb popf mov jge dec inc mov stos lods mov mov jge scas test lahf dec mov pop mov jae cmpsl mov jge and push mov movsb ja test pop mov fstl sub lcall push scas sub lcall xchg jp sbbl mov shlb sahf (bad) fimul and pop xor test gs adc pushw ret mov iret pusha clc hlt iret cltd xlat push fldt gs adc xchg in dec aad mov popa xchg and lods frstor push (bad) in mov sbb push loop ret insl cwtl daa dec adc fwait sti push push xor cmp movb popf mov out (bad) js mov fisubl (bad) (bad) xor and jl inc jb inc (bad) iret int3 dec hlt jl xlat addr16 sti fimull repz aad or add xor pop cmp fadd jmp jnp xor pop fstenv or arpl orb movsl das mov ret mov (bad) dec fidivr fdivrp fisttpl imul (bad) das fnsave test mov ljmp xor push pop adc cld pop fwait test push dec fcoml dec mov mov xorl std pop mov xor sub xchg inc loop add arpl movsb jne call ljmp jb hlt and notb fcmovbe add stos into (bad) (bad) pop jbe cmp (bad) je sub rclb aas jno mov push pop (bad) xor mov int push into movsb xlat push fimul out lret push insl xchg lea aas push fstps push stos xchg mov les dec push jecxz xlat push push push andb out xor xor outsb and lret clc and xlat push cmp adc adc xchg or scas pusha outsb jge test push or fildl (bad) (bad) jo dec jns imul arpl aaa dec faddl mov adc decl cmp xor sahf movsb insl sbb jo push dec cld and jl mov (bad) outsl or (bad) icebp push push stc cmp xor std jg int3 mov (bad) or cmc inc cmpsb std test out ds outsl arpl outsb sub pop jne gs sbb jl aam jbe xchg dec jns pop icebp repz jne cmpsb in jp ja dec xlat mov adc int outsb adc adc rep xchg push push int sbb daa push cmpsb dec adc (bad) test mov outsl cmpsb andl xor jo xor cmp ja dec popa (bad) push inc mov rcrb dec xor adc inc (bad) pusha (bad) mov sub mov outsl mov add outsb pop mov fadds lea mov lds fsubrp scas (bad) mov ljmp cmp lea loop mov sub push scas std add orb fisub aas jge fidivr insb pop iret cltd dec push idiv ficomp jecxz lock mov mov cltd out sub sbb lock inc out add jb xchg pop xor mov mov mov cwtl lods sub add and pop sbb jmp jne or xor lock test cltd test scas fbld jl mov push jnp pop ljmp xor xchg mov jnp (bad) push push sbb in ds sub cmp and shlb pop add push arpl enter ds jae xchg in bound dec mov test test cmp rcrl dec jecxz jae xchg cmp cmp call jns ret and addl mov aas ljmp popa push (bad) pop inc repz lret cmp lret inc mov sbb inc std pop cs jp pusha xor (bad) xchg sub loope push jg inc or movsb psllq (bad) mov mov xchg fwait dec lea pop and sarb mov lret cltd iret popa (bad) (bad) xchg idivl lods mov inc sub insl push add push mov adc and lahf pusha sub adc jecxz and jb xchg mull cmp movsb (bad) mov in or mov iret ret push in ss add fistpl add lock fcomps icebp ja add ret test aaa or adc jmp das test jne cltd loop push lret roll mov mov inc insb insl add cmp xor xor xor subb pushf mov pop or pop hlt fwait cmp aad xchg jne outsl mov incb sbb stos loope lret and cltd test (bad) loopne lods stos shrb or mov sbb (bad) push cmpsl xchg (bad) lcall in push mov add pusha cltd mov fs (bad) lock lret xor adc mov pop add push adc test fs xchg pop sub sub push inc mov push pop jl push out loop (bad) imulb sub loop das popa sbb cmp dec add ds push std jmp fwait into nop in sub mov (bad) jno jge gs outsl rclb cmp test adc inc xor sbb nop sub ja mov movsb (bad) add mov mov cmc push inc jnp in push mov repnz movsb dec lretw adc mov arpl out repz push (bad) mov js mov ss dec enter and inc mov sarl mov mov clc fisubrl xchg mov daa fimull and test ret add js sub push sbb adc mov pop sub jb leave mov jle and mov pop jl pop adc pop pop outsb loopne (bad) pop (bad) into xchg imul dec lds inc xchg xchg sti inc sub sbb outsl mov icebp mov imul test lods mov jns sarb sahf cld mov icebp mov xchg inc mov inc ljmp jl adc dec mov xchg ds lahf mov push icebp fwait icebp pushf in testl mov mov jbe in adc cmpsl adc sbb mov add cmpsl or jns call pop loop in lahf cmc (bad) sti (bad) mov (bad) gs jnp push jmp push sub jg imull dec in dec bound daa add pop or pop cmpsb adc push xor pop pop aad je js mov push hlt fsubrs xor out or pop jge orb mov into inc popf inc xchg in cltd mov sbb (bad) lret jb pusha dec mov repnz in mov xor imul cmc test icebp sbb dec xor and mov mov xchg xor adc movnti fs or fisttp aas ja pop and loopne xchg rcrl mov and (bad) push loope push push rolb push adc sub adc add fldl jl aam test call xor lock xor dec inc cmp pop call mov or push push or cli xor hlt cmp stc gs scas (bad) jb and dec mov push (bad) lds xchg cmp call mov jb (bad) xchg popf mov cmp fbld sbb out jle fistpll push pop xor jecxz and dec xor data16 data16 cmp adc mov mov xchg xchg leave mov out push in mov pushf xor (bad) xor jb (bad) mov push jg adc jecxz jmp mov pusha fldcw inc mov cmp inc arpl xchg pop jp bound cli xchg push ret mul fs push jl leave adc push cld xchg aaa aam push cs data16 out adc repz cmc outsb leave xor sbb (bad) xchg mov adc adc rcll int3 jb mov xchg mov or test cmp jmp xchg cmp sbb test adc popa aaa fidivl xor lock mov out mov ljmp pushf xor (bad) pop (bad) push hlt vpor xor and mov subb cs (bad) pop repz cmp mov dec stos xlat pop mov inc (bad) push cmp or enter jno nop mov xchg push sub push lahf xchg push stos fbstp mov test outsl and xchg adc adc ds sti loopne xchg mov out dec and sub adc mov imul push test les leave jns cwtl xor imul inc call pop test imul jle lods out mov push pop mov mov and and cmp xlat rcr mulb inc hlt dec adc add (bad) and arpl pop xchg hlt add sub add jo sahf push lods (bad) fimull in or fistl (bad) adc push or sbb pop lods (bad) fisub fdivrl and clc xchg sbb pushf push sub movsl push adc subl cmp cmpsl and sub pop mov fdivrl cmp and mov loop out push dec js iret mov imul push fdivrl mov push dec pop int push inc les add bound std mov push mov mov shrl lahf stos repz or call cwtl lret (bad) fldcw (bad) mov add (bad) das pusha mov mov sbb insb add in sahf mov lock ja fisubl push lock add or ja scas pop fcoml test pop jns call sbb pop push mov lock lea fistpl movsb push sub ljmp or cli pusha dec or sahf cmp scas in inc xor or dec or and insb inc dec pop outsb outsl cwtl mov test mov (bad) jb and push outsl repnz mov outsl pop pop imul pop and sbb call aas add outsl push push fwait mov popf mov (bad) rorl lods adc outsl cwtl sub lea mov lret lcall test sub pop movsb mov out xlat and (bad) cs pop fnstenv xor or mov dec pop jle push (bad) cmp je xchg fild arpl addr16 in es mov sbb out cwtl push xchg (bad) sbb inc xchg into xor fisubrl xlat or cmp insl mov mov dec stos ds aas pop lods rcrl mov ret cs push clc or cld inc jmp ret cmp mov (bad) into sub jle xchg aam jecxz add fsubrs cmp (bad) leave push jne lret mov xchg stos sub div fdivrs stc push cmp into test std jae mov sub imul push shlb xchg jbe push (bad) mov mov sub ss cltd lcall xchg insl fcomi scas int3 sub hlt jne lret mov jmp inc xor and sahf lret shr dec jae addl mov dec lds adc xor mov sbbl scas xorl fs xor pop lcall test popf jb push jmp and add inc out fwait ss jb test xor rorb pushl mov ss pop lret outsb adcb sbb lods cs call fsubl push mov xchg fldlg2 in daa and mov pop mov out adc out ficom sbb gs inc in mov jne pop push (bad) sbb inc icebp test cmp mov (bad) aaa (bad) fcomps xchg int sub cmp (bad) jno bound loopne mov in scas mov mov pusha and jp stos (bad) pushf xchg icebp sub test daa imul flds pop movsb sbb adc add testl mov jne xchg jg nop out (bad) leave cmp push test fdivrs cmpsb xchg jg mulb fild inc dec mov xorl lock rcrb and hlt rcl cmp inc (bad) mov dec daa cmp test je aad je arpl inc (bad) repz andl int (bad) jge insl outsb sub mov aad pushf out out scas dec dec adc out mov add stos mov js imul aam jecxz mov pusha xor sub mov fisttp push push xor (bad) xchg pop ds jg push push pop (bad) push sbb popa xor (bad) jo fcoms or (bad) hlt sarb mov mov push pminub js js xchg dec sub movsb mov jmp pop int3 lods push dec mov imul mov pop bnd xchg add icebp xor cs scas adc lods jae mov and adc dec xor xchg nop xchg pushf inc xchg fdivrs in xchg sarb pop (bad) insl sbb lods int3 call repz pop nop mov pop decb sti leave out inc sbbb jne pop sbb mov and jg fisttpl pop enter ret mov cmpsb ficompl sbb mov and clc push mov cmpsb ktestb jb jbe andb das xchg mov sub movsb loope addr16 dec xchg sub ljmp lret repz push test popa cmc cmp mov stos mov test ror adc scas call add sti inc int je xchg jne enter popa fildl sbb cmpsb push and mov and test sub sub dec adc jmp flds mov mov sarl out out mov fisttp xor ss dec cld movl roll neg and mov add stc lds bound test insl push lret mov mov shlb add out inc test dec imulb test leave pop pop ss xor (bad) jecxz push push xchg inc inc jae push lds mov fnstsw jecxz add dec xchg cwtl stos mov out push lea jmp jbe enter push ret mov cltd xor and sub and and sub test (bad) xchg stc pop outsb gs sub jo (bad) mov popf leave adc dec lret lods mov stc sbbb leave mov push push daa mov repz test fsubl mov xor fdivrs loop push sub or and mov cmpsb mov sbb psubusb insb or pop add cmc push cmp cwtl mov out aaa push cmc cmp (bad) call cmpl nop pop dec xorl pop pop xchg repz shlb shll ja mov imul ds sbb out dec mov jbe push movsl mov inc cmpsb jnp adc jae mov push sahf lea (bad) fadd (bad) (bad) movsb sub mov push jne es xchg push ret or push push or and jmp push divb xor (bad) clc loopne test add push xchg insl add divl xor mov das ret add stos pop mov adc xor aas dec ret in lret jne and fildll ficoml jne aam lcall subl loope mov push ds and dec data16 push mov sub pushf push lret cmp push xor lea stos sti cmp xor das inc cmpsl sub lahf orl mov sbb cmp es fimull pop rorl (bad) mov pop pop mov xchg fstpl pop popf out lcall push jge xor sbb lds sbb xchg mov outsl sbb mov adc pop xlat xchg jbe push adc not not xorl mov andl cld and ror test sub add es xchg loopne xlat sahf mov jecxz jae cmc mov in fst sbb (bad) pop and inc mov xlat mov jmp jnp jnp dec lret dec enter xchg sbb dec sub ja out lods xor fwait aas mov adc sbb out (bad) stc mov aaa xlat dec push xor push jbe test inc clc je icebp adc lret scas fs push loopne movsl and mov shrb sbb (bad) push sub sbb mov jae pop mov outsl fadd cmp test mov cmp (bad) pop and nop out lods or test adc ja xor xlat push fwait stos js rcrb ja cmp cli cld pushf push ljmp jg add and stc into popa push inc xchg cwtl sub pusha or outsl pop lret je (bad) jmp pop movsb movsl cmp mov nop sbb pop scas popf dec ja add push lret test cltd enter pop jmp xchg imul repz jno int xchg jg gs mov cs xor push sbb repz std xchg dec mov scas add into dec sarb dec xor dec je pop sub mov push jo pusha lods pop mov mov (bad) iret fnsave jne imul push in adc pusha push addr16 aaa cltd xchg mov loop,pn fsubrp xorl add sub jg sub aas push dec enter or or xor rol lcall cmpsb or aas iret push ret into into xlat xchg (bad) jg loop sbb loop movsl enter xchg lds xchg push fcomps mov fwait push jle movsb xchg lcall xchg inc and push mov jae adc jns in cmp jge mov mov nop aas mov cwtl ret sbb and adc mov jb mov or pop cmp mov inc push xchg adc not (bad) (bad) aaa push xor popa or sub scas cwtl lods push add mov scas sbb jecxz inc mov xchg jecxz push ffreep sub popf dec sbb clc sysexit gs jmp xor add cli stos push inc mov push adc rclb add xchg push (bad) jecxz sub in or cmp add mov mov cmp jo mov dec icebp lods xorl bound stc inc xor mov fldenv dec lods outsb scas es into xchg int mov xor jae inc cmpsb (bad) mov movsl (bad) xor jae jbe push lahf mov out sub jle stos mov out and add insl adc jb imul adc jnp push (bad) cld insl test xchg sub adc cmpsl (bad) fdivp xchg and divl test cld jns xchg movsb sub mov sub imul in cmc or xor dec aam fs adc push clc add xchg sbb add add int jno std (bad) mov cmp sbb out lahf sbb popf jb (bad) sbb push mov (bad) mov and add int3 jle scas jecxz sub ljmp shrb dec mov aam dec push aas cmpsb jne das pop btr pop jo push popf jb push jmp fdivr push mov (bad) cmc fsubrs mov fcomps adc insl rorb in jbe ret push cwtl push adc cmpsl notl mov pop push das sub dec add bound fwait sub inc pop in leave mov xor call ja xchg cmpsl inc jae add sahf fsubs xlat add test xchg cmp imul cmpsb mov pop xchg and sub mov insl xchg add cmp (bad) repz pop or push gs xor push enter mov mov jae out rcrb xchg shrb (bad) jp outsb test movsl out icebp pushl cwtl out cmp addr16 mov (bad) test aas arpl lods subb fldcw outsl push loop jg cmp push mov out xor pop xor lods aas pop mov pop flds push xor add mov pushf stos fiadd into popf adc mov test push inc roll jns sub arpl sub pop fwait add (bad) lock repnz mov scas mov in jo insl xchg pusha sbbl lret xchg imul lahf aam inc sbb iret push int fdivrp sbb xor sub jno xchg lods aaa pop adc adc jb xor pop mov jmp or imul int popf loopne repnz adc divl repz xchg ds pushf inc gs sub loope xor sbb add sbb sbb shr sub je dec ljmp sti xor adc iret adc jmp popa es mov jmp in jne mov loopne and sbb or inc in mov pop cwtl sub ffreep aad lret cld mov lcall pop rcrl push lcall xchg sbb mov int3 lret mov push jae movsb xchg dec cmp aas sbb pop aaa fisubr sub push mov and pop mov movl pop fsubrl lahf gs cli imul aas sub pop and push or push int3 mov mov imull sbb pop pop jle int flds xchg and out push jae lea cmp push xlat (bad) mov loop sub cmc jmp shr inc xor lahf arpl andl addr16 icebp adc pop insb outsb mov mov mov mov and adc fdivrl mov adc hlt nop lds test sete movsl jecxz mov pop stos jbe stos int xchg jecxz pop testb pop jb imul stos push rorb push mov jecxz sub fisubrl cmp xchg mov loop mov lret (bad) shl in insl ret leave rorl call mov or sti xor and cmpsb (bad) (bad) js idivb fidivrl outsl sbb lahf push aam shll pop outsb adc jb aad out or outsb movsl lahf cld fnsave sbb xchg (bad) cmc inc scas sub outsb clc inc jp popf pusha cmp jnp or (bad) jle mov imul and scas add fisub mov adc add pop mov cmc je cmpsb jp loopne outsb rorb enter test xchg in and mov adc frstor daa jmp je sub fwait mov sub mov push rcr popa sub push mov sahf inc lea mov mov mov iret pop push push and ficompl jg lds popf ja mov das enter jl js loope in inc sbb movsb (bad) dec cmp inc xor dec test int3 int les test outsb rclb ret adc jp sbb pop stc enter jge sub imul add fistpl lret sbb popf nop jecxz pop mov mov or mov xchg mov inc lock lods mov mov mov mov arpl jp cli in lcall lods sub add scas xchg sbb mov fdivs sti jnp add cmp pushf mov mov stc mov or xchg adc das inc jb jb pop (bad) sub jmp (bad) pop cs jl or jmp pop push (bad) or sub add xchg jle insl jb clc add push rolb repz or and pop fldl lea and or adc jae es xchg cmc jb aad mov jmp jns lcall mov add jle xchg in sbb into xor cmp mov pop inc fsts push lock inc mov inc or sbb jp xchg xchg cmp mov stos fsubrs shll popa enter inc push mov arpl call out xor push int dec and cmp movsb std in dec nop mov add notb aas sub in pop pop aaa (bad) cmpsb out std mov xlat push pop adc jmp ds idivl xor sub in sbb jmp pop mov mov pop (bad) imul out pop mov jp and xchg sub mov sub sub pop mov loopne push cs sar fidiv mov push dec pop int3 cmp call sub lea jne in inc push mov cmp add dec and inc pushf aas and or in xor ds push popf cltd mov sub int3 test fs fistl ret mov xchg stos mov test inc xor add xchg ss (bad) or mov rolb data16 (bad) sub jnp inc jns hlt cmpsb pop in push cs pop pop ret cmpsb or or push ljmp cmp xchg push xchg mov ffreep movswl pop jno imul clc ret xor jne in leave jl dec shr out inc mov jbe mov (bad) jbe,pn and mov in loope or adc push mov jecxz mov (bad) mov in dec xchg inc repz daa pop jle test aaa jecxz jo adc inc aad mov mov sar pop daa push imul (bad) jecxz push push lods sbb out adc icebp dec mov ud2 mov dec test mov call add lea mov and mov dec cwtl push or sbbb jge (bad) enter cmp scas add push lret adc push mov js cltd stc popa add (bad) pop xor jno pop cli xchg mov (bad) movsb shr insb lahf lret leave or lods xchg popa mov or inc loopne pop adc rcrb sub aam cmpsl xchg cs insl cs (bad) mov aad sub aaa mov divb sub lret adc adc scas dec or push stos push mov sub jl mov and (bad) rorl or inc (bad) and mov out jp enter mov jns loop pusha adc loope or sbb loop sti adc cmp push cmp mov imul mov sti sub sar shrl xchg inc adc pop iret movsb lods hlt mov das adc ja sbb sub mov xchg cmp fisub mov mov push pop out mov sub lret add xchg movsl inc mov outsl lahf dec and insl sbb fsubp sub in xchg cmp sbb ficoml fildll sub roll sbb ljmp adc leave test sahf and dec cmp test push (bad) mov add jbe push shll add dec and loope vcvtps2pd jl cmp fisubr test dec hlt mov test pusha fcomps repz mov xorb add inc std or jno xchg decl add mov cmp sub ss fldl xchg xor enter shrl (bad) out scas (bad) xor movsl jl ret arpl test (bad) in das rcr push jl es mov and dec cs or jae xchg mov cmp into call sub sbb cltd cld ret mov cmp lods in fldcw mov push add fwait adc xor mov lods jecxz stos and rolb inc (bad) and stc xchg pop xchg and adc out std repz mov push loopne (bad) lcall setp push ret ret and pop mov dec push ret scas mov inc (bad) jp and sbb gs push mov fwait xor fyl2xp1 jl icebp pop lea xchg movsb sbbb in pushf jnp imul popa lock xchg ss add jp sbb and lret fsubl cltd out dec and add je mov stos mov int stos pop adc clc sub cmp xlat fstpt lcall mov mov cltd fwait add push out xor adc sbbb jmp addr16 je ds push and sub push test ja enter inc mov popl cmp push imul mov sahf or push sarl roll rcrl insb and and ja push mov jg inc xchg sbb xor cli test inc or xor pop jbe dec arpl call pop rcrb sbb pop inc mov rolb stc pop pusha mov (bad) lea sbb xchg pop mov cmp sub test enter into xchg sbb mov js ljmp xchg xor ss sub pop xor je popf test or cmpsb test xchg xor sbb (bad) push sahf loopne and or sbb ljmp push jne jge pop fcmovnbe mov test nop jle daa push pusha push cli inc mov je lock mov inc das add mul push (bad) adc movsl mov loopne das mov mov repnz or imul insb jmp test cmpsl add insl xor roll mov push and lahf sub into lcall mov (bad) mov push icebp inc or nop lods popf aam add sbb xchg lret dec pop sahf sub (bad) repz lock insb cli lahf pop shlb sub xchg xor push aad sbbl or and sarl fdivr decl push or popf sub jg lcall xor xchg movl jle aam push out push test mov incb fdivl jns cmp fildll fbstp inc insl js cmpsl pop cwtl shl dec add mov adc int3 jae jp xor mov xor lahf cmovne cli cmc mov incl lahf je xor adc fs lods add mov push adc push (bad) jmp inc imul out sub jb sbb jmp lcall or sub lcall outsb mov outsl and mov (bad) mov outsl push mov dec pop push push push imul cld cmp ljmp test dec ret lret and mov ficom jo lret push adc push lret test push adc mov add mov enter popf fs ret mov cmp inc ret aam test notb (bad) sbb (bad) cmp push push mov cmc jle inc test leave js lcall push dec outsb dec movsb test push sbb fs sub mov mov and and mov stos mov insb (bad) mov rcll add out xor cmpsl mov in std xchg add push mov push sub int3 movsl jae pop or pop pushf xchg fiadd push lea je xor (bad) jle mov sbb mov add rcrb sub je inc call dec mov clc inc pop inc xor push cli mov lods push popa das dec mov (bad) jmp sbb test jo cmp in shl jno xlat xchg (bad) jb sub ss repnz (bad) mov sbb in mov sarb pusha ds jns pop inc pop enter mov mov mov mov jbe test dec std lahf xchg rorl push shll subl xor not and cmc loopne xchg pop add mov pusha xchg jbe xchg mov imul stc push pop ds mov loope xchg cmp fldcw pop and lods enter cmc (bad) into dec sub inc arpl pop cmp clc cltd dec out mov repz inc add nop xlat iret pop mov sarb pop fsub imul std xchg popf mov arpl inc stc push clc daa jne mov xor jnp test ds fdivrs popa sbb inc std sub movsl mov push in (bad) scas nop mov movsl lcall jae (bad) xor arpl (bad) push lret cmovge mov je push xchg jmp inc ds and push icebp rorb pop xorl mov lahf jns fs pop cwtl jo xchg ret cmp pop fidivr mov adc push lret pop push (bad) mov shrb pop into pusha scas int lret cmpsb xlat addb cmpsl push jno dec inc adc inc adc enter or dec push cmp lahf lods fild (bad) sbb aaa loope push fidivr int3 lods xor push aad insl rcl mov in inc (bad) jb stos mov adc pusha out dec lahf push insb push pop sahf mov push xchg pop (bad) mov push or out loop adc mov cwtl das mov xor sbb fstpt popf jo push push outsb (bad) enter gs dec inc mov lret pop mov mov xchg dec or and fucomp mov jmp pop sarl xchg xchg sbb push ds or and (bad) xor (bad) sbb outsb lret call mov cli stos push and sbb mov jne or fmul fs imul inc xor divb dec dec and or out jl pop lods mulb jle mov sbb jo (bad) xchg mov jnp jbe in cmp mov gs mov rol cmp add pop add or mov jae lcall fnsave jge call stos mov pop fwait xchg fisubr mov adc inc push stc int cmp xor cmp insb stc mov bound frstor dec sub loop and xor jne shrb cmp repz or int3 push pop cld test sbbb inc lea cmpsb int mov sbb stc stos xchg rorb loopne jmp pop sti inc movsl xchg mov (bad) repz cs aaa xor push push cmpsb push inc push mov pop jle mov add (bad) out add sti inc cmp dec stos jp (bad) xor roll sub outsl pusha bound xor mov mov add and mov pop insb ds out sub (bad) addr16 jae pop pusha jnp stc dec pop fistp psllw sti pop ret call orb pop scas lods lret repz pop int3 push sub imul push jno addr16 (bad) cmp push add jg pop pop jno pcmpgtw cmpb cwtl pop xchg xchg aam sbb in iret and ret sub (bad) and orl jp and repnz mov test movsl inc sbb out test dec push mov ret movsb inc movb xor mov or dec xor adc icebp mov sbb jbe fs adcb mov ds mov mov xchg pop sti arpl mov enter add or lea dec outsb inc fwait xchg cmp inc sbb rcrl mov aaa lods ljmp mul and lahf imul jo stos or push and loope lea jns sbb mov xor in arpl pop imul pop mov or es clc sbb or xchg mov mov sahf dec mov iret push adc scas and addr16 inc and jne es xor stos add imul std jo pop lahf bound xor and inc in ja je movsl stos sbb inc inc inc (bad) dec arpl fadds pop sti pop insb push mov into jp adc dec mov push je inc sbb rcll cmp xlat pop sub xlat (bad) jo out lcall and inc cmp push popf (bad) sbb push mov cmc push xchg outsl inc out adc ret cld sub cmp scas gs mov gs cmp pop mov mov lcallw mov xor mov fildl mov int ret sbb jmp mov sbb cltd add xor dec or push out (bad) mov or add fwait nop cmp pop add pop das sbbl stos lods adc dec div or clc jne sub sub and mov adc pop fwait scas pop mov inc jle jp rorl or mov mov pop xchg dec xchg (bad) sub or sub dec dec jl roll out aas and push mov mov adc jp hlt lods insb rcrb mov rcll ja ss insb sbb push out add loop leave fistpll iret fsqrt divb popa sbb subl push sub loope cmp fs add fsubrs push fstl cld xor pop or imul jge lret xchg or sahf lcall in adc ja and jo addr16 pushf dec jno test or cld and pop (bad) push dec aad dec sbb mov outsl and fstl cmpl jp rep pop push cmp mov mov nop shll jl cmp into pop add mov push gs mov lret xlat comiss mov scas sub xor adc daa shrl pop sarl mov cmp inc cld lock ror pop sbb fldenv pop xlat jb pop icebp repz lcall pop rcll add mov cmc aam xchg (bad) jp scas and call aad mov test xchg cmpb scas dec daa enter xor push pop inc movsl ror mov xchg xchg dec enter shll cs push std shrl push or cmp xlat movsl push cmpsb in inc add xor adc lods enter out add movb (bad) ljmp (bad) push jae push in or push jle gs dec adc add shr (bad) adc sbb cmp std sti jbe pop fwait mov out js dec fwait test mov and push and jns mov jns inc mov push jnp or mov out xor lock outsb inc into es ds mov test mov cltd scas and mov punpcklbw mov out out loopne test push call (bad) pop faddl sbb mov xor outsb xchg inc pushf mov jne pop sbb ja int3 or cmpsb push call and lods cmp lock fadd enter int3 mov pop in pop negb add push (bad) pushl or andl mov mov push loop out pusha sbb pusha cmpsl dec and enter jle (bad) jo and jnp das (bad) ss fwait test popa xchg xchg adc add sbb cld sbb lret leave movups cmp imul mov fldt adc aad fdivrs add dec adc mov or mov stos std cmp mov in adc sub cmp aam jns ds mov push jp xchg daa mov movsb mov je jnp out fistpll lods movb les mov (bad) lods lahf xor inc (bad) sar pop insl inc sub ds lods sub fistpl int3 lahf std test xchg sub (bad) dec mov (bad) jbe movsl cmp add int3 orl cli sbb nop hlt (bad) mov add fcompl inc and or mov add scas ss jo js xor jg push in add ficompl jo fnstcw push iret fldenv pusha test repz lret push iret test or pop jmp pusha fnop xlat mov or mov mov sub add jg shl pop sarb lods rorl pop mov fs pop dec xchg int jp jecxz xchg aad dec es or je jg cld cmc push mov (bad) xor dec sysexit (bad) icebp iret repz dec in aaa push (bad) cs icebp mov jnp sti inc out adc stos repz pop jecxz hlt (bad) push insl or (bad) movsb scas outsb jae xchg movsb popw data16 gs sti fidiv lods mov bound cmp mov xor adc dec hlt gs iret cmp xor adc pop inc cld pop ret sti popa sbb cli pusha call outsb jp or xchg stos mov xchg cmc adcl and fistl fwait (bad) push jp rclb adc inc inc fcmovbe cmpsb roll xchg outsb andl (bad) pop mov adc jns dec sahf ja mov mov or out push sub and pushf sub shlb sub iret fcoms fisubrl adc popa xor pusha testl ja jno dec or cmp popl data16 mov orb in xor xchg fistpll cli sub adc imull addl (bad) shrl mov dec mov test sti cmp pop lret sbb fisubr mov add lret inc mov lods adc xchg (bad) out sahf bound arpl int into jbe xchg stos jg pop wbinvd xchg adc ret xor sub repnz les in lds push pushf lahf hlt lock push cmp push fst pop repnz test fwait push fs xor sub int add mov ja push stos push cmp lret pop push lret bound sub aaa iret xchg (bad) mov dec repz and sbb data16 jle movsb sub lods lret add dec fsubrl or adc mov inc cmp sbb push incb push mov mov and adc inc adc xchg bound push gs in shlb rclb add andl les aad jno ss mov rol nop icebp int dec jmp pop jmp jne push xchg jge cmc icebp fsts xchg sarb jecxz pop (bad) jmp jle xor in jecxz das movsl and js insb xchg cs idiv andl ret dec add sub in push inc pop lea adc in mov add sbb addl movsl pop sbb jno add iret stos mov cmp cmp sbb cltd ljmp int3 mov jne mov jmp push (bad) mov xor inc add out xor and insl in push xor xchg mov lret adc aad test push (bad) insb sbb lcall sub lds pop mov stos push jmp and repnz inc in insl adc dec jecxz fcom into inc pop pop and mov xor (bad) and inc test push adc sbb lahf cwtl and push push fistp loopne mov lock pop xchg inc stos js mov inc dec ficoml add mov nop jo pop hlt leave cli gs inc loop movsb clc pop push pop ficom jg push push add pushf pop add add mov xchg pop mov jno dec cli mov cmp inc push jns scas cmp inc dec sub gs pop lret mov mov loope test dec lea fucom cmp push and lret lcall sbb (bad) int3 inc outsb loopne lret ret jmp out (bad) mov mov cmpl aad rcr ret jo in push or out dec in div test xchg jecxz pop and sub lods cs mov xor push (bad) jle push fistpll xchg test mov mov pop das roll mov push cwtl ja in pop lods cmc movsl push pop dec sbb popa loop cmp movsb sbb gs lcall push xchg lds out jl push add lods enter jbe test std lcall sub push mov hlt push enter rorb jl jno cmp into sbb pop adc (bad) mov je or jne fsub mov shll lret sbb es inc jbe push dec ffree repz mov mov test mov xchg pop push mov das std or xlat lret pop ficompl or jb cmp dec inc or dec stos push cmp sbb rol dec sbb sarl in cli cmpsl inc adc sarb jns adc adc xor pcmpeqw lret mov sub adc (bad) mov mov sysret pop rclb push jmp sub or lea lock jle dec daa pop push sbb in aaa pop jmp popf dec mov into inc movsb cmp or cmp inc and fistl mov pop lods mov daa sbb pop ds mov xor xor add mov adc icebp adc xor (bad) xor xrelease mov adc mov stc or rep ror pop mov sahf xor add jge mov cwtl or jp cmp inc das xchg add addr16 and fsubrs imul repnz xchg dec mov xor mov movsl sub and js in test stc adc pop and scas test (bad) aad push push inc fldcw mov (bad) xor iret jecxz mov jmp mov das popa inc mov sahf adc dec xor push pop dec insl inc adc dec ret pop je iret xor lods dec jae pushf mov push (bad) hlt mov mov mov repz xor xlat mov xchg movsb mov loop ss lahf push iret mov lcall dec dec lods popa mov xchg insb pop xor jl gs jecxz outsl mov iret (bad) mov dec dec rcr add aad aas jp nop icebp mov xchg mov loopne xor push clc imul xorl jl (bad) inc xchg hlt cltd jnp in rol dec inc mov mov mov jge mov out push nop mov imul pop and jbe mov ret jl movsl pop out ss and (bad) mov je adc daa push xorb enter in mov mov (bad) (bad) popf push jbe cld cltd jp sbb pop sbb push cmpl shrl gs jl cmpsb lods cli push out out repz xor mov int jae sub jle mov ljmp pop mov pop call jb stos insb push jmp ficompl repz (bad) push push or stos aad mov lahf sbb push cmpb jge mov mov mov fistp cli dec inc xchg (bad) sbb repz inc jp (bad) insb cltd jns xchg sub fdivrl push adc mov stos xor (bad) mov dec mov les adc mov lock mov xchg push and dec int3 ljmp in jnp test scas lds lret inc mov in lret sub xchg jmp jae or jmp dec loope sub rclb dec jl das (bad) mov pause in pushf push dec sub sahf stos jmp push call jbe pop imul stos lods push lret stos movsl (bad) icebp mov dec mov sub xor jl sti imul rcl xchg dec in xor adc adc pop scas popf or sbb imul push xchg outsb cmp mov andl mov sbb cmp es mov movsb mov rcrl xchg into xor (bad) dec xor arpl loopne adc popf outsb in adc pushf xchg das cli add psraw push pusha xor lods mov int3 std add in repz popf jecxz call pop xor push mov sbb rcll push popf push mov pusha and iret arpl hlt sbb xchg pusha push or add xor and sbb jnp push and push mov es sub jge cmp flds mov imul cmp data16 sub aaa push adc data16 xchg lret and cmp ljmp and dec fwait inc js add ffree mov enter in pop outsb jg aam insb sub cmc fwait leave ljmp fcomip adc xchg adc pushf cmp inc mov lret decl jbe insb jmp aas jno push mov (bad) cmpsl or ds xor mov inc (bad) xor push punpckhdq push xchg pop inc xchg lds sub mov stos in xchg movzbl mov mov loop sbb add sbb (bad) jle bound int3 adc fist (bad) cli fdivrl jmp xchg mov dec nop xor mulb or (bad) xor cld and pop mulb add pop lea or add fincstp cmp inc int3 xchg mov mov lods xor push adc (bad) (bad) push in int3 sbb inc dec mov xor and add outsl adc add sub data16 (bad) pop cmpsl xor insl push mov loop leave or dec fstenv dec das dec aam stos mov xlat arpl sahf sub dec sarb cwtl jne js test cli push decl aam in rep or add sub pop and cmp dec lock daa mov xlat sbb stos mov cmp jle mov popa jl mov fistpl movsb movsl lea mov scas nop xchg lcall test sub sbb push jns push jge mov dec pop pop mov iret jb clc test jmp inc mov (bad) dec sarb add sbb mov mov lds lret orps inc mov in xchg mov or xlat ret (bad) cs cltd push mov xchg ss xchg jno mov (bad) mov popa fcompl rol call fdivs lods inc push notl jo out add jns (bad) cmp ds out and lret pop adc jbe out mov cmpsb ret jge add nop cli fidiv jmp dec fisttp ds insb and lret je dec sbb xor sbb cmpsl mov cmp push sub divw mov mov mov jnp or cli mov add out add popl sti xchg inc xchg push sbb sub mov in sub pushf aas xchg (bad) ja push sbbb negb clc sbb jmp les test jg out imul cld mov mov stc mov shrl mov scas pop bound loopne mov negb sub cltd xchg xchg addr16 adcl push jae jbe icebp and sbb (bad) (bad) mov inc mov inc mov lahf add push adcb mov inc fstps xchg sub mov js xlat pop fisttpll pop mov lds lret and iret addb push test lret dec daa lock in pop mov out mov pushf dec popa movsb xchg lcall jae imul pop xorl aam cmpsl pop scas lea pop inc xor les pop mov js sbb sbb inc out (bad) jmp test in mov out inc sbb push jmp fldt mov xchg call test xchg aas adc inc push leave add jg push mov ja out inc adc sbb cmp pop and fdivl jbe mov jg push mov pop rcrb enter inc lock pop or cwtl cmp or lret sbb lcall sbb (bad) jae (bad) adc jo push inc mov push cmpsb add repz lahf ret dec ljmp mov jle mov pop scas adc mov xor xchg jno repz movsb inc jecxz rorl cmp (bad) sub outsb mov loope mov movb inc mov xor dec add fstpt out subl mov (bad) cmpsl bound dec fs ljmp sub or loope jns iret negb int sti mov cmp lcall jmp mov in fisub push sub scas mov mov pop pushf pop xchg jg in push xchg mov sbb pop call sti popf out sbb sub sub jb lods repz pop loope and mov add jecxz mov push in insl pop and lcall cmpsb push sti aad xchg ret xchg mov cmpsl push outsb scas mov xchg xchg push popf xchg aad sub sbb dec popa pop and fstps fmul push cwtl and cs js jae repz rorb xchg cmp aad cltd negl imulb sub cltd lcall and data16 sbbb sbb outsb mov rcrl inc lock movsb loopne cltd les push popa jb dec cmp scas xchg mov cmc pop xor sub xchg movsb sbb xor sbb sub fistp setge pusha test dec sbb mull sub out cli xor je mov fsubl cmc mov xchg hlt cmp xor push sub enter cwtl andl add andl dec out adc jp jno ficom mov sbb call outsl cmp push scas icebp mov push imul pop (bad) (bad) int3 (bad) leave push mov test xchg shl or enter fucom int3 popa popf out pop in adc mov mov imul daa push inc jae outsl xor add dec in adc dec pop les push dec push inc xchg and sub mov or lret mov push das inc and mov xchg jl mov pop and pop stc clc das in jecxz mov sahf pusha sub cltd test jg nop jp sahf or (bad) leave dec jmp lds sub cmp add pop xchg ror js pop call in outsb repz and jne lret push xchg lcall (bad) lea adc adc mov ds lret cs and sub jmp dec mov add pop fs in popf imul push into pop daa and lods sub in adc int mov add mov sbb push ret adc cltd outsl and movb pop mov jae fsubrs push (bad) jne inc sub jecxz in pop mov push jg dec enter sub ss inc mov adc jl mov hlt mov lds pop xchg push cmp jnp add xchg mov pop loopne addb sub fidivl dec add cltd or sub sar add or scas or fwait add das jne aad mov inc test movsb mov sub dec in cs pop sub ret jae daa sbb (bad) clc je xchg cmp les mov pop and add popf lds sbb jnp rcrb pop outsb js dec xchg pop ficom stos ret ss andnps lods xor push adc lods mov loopne inc or mov std or call push jge aaa addr16 and das push lds (bad) (bad) cmc movl inc xchg dec and (bad) jb test daa mov sbb call pop arpl mov aad adc sbb das sub bound mov cli insl stc rclb push xor jo push dec xor sub dec xchg rol xchg xchg loopne data16 mov sarb fmull mov push or aad repnz pop inc ret mov loope pop inc jne xchg cmpsb imul fidivl dec inc lock mov pop mov push dec adc out adc pop pusha out leave andb repnz sbb leave pop (bad) mov lods test aaa scas into hlt xchg xchg pusha out sbb cmp xor jae mov mov (bad) sbb xchg mov (bad) int add call dec inc inc fdivl inc inc insl mov int pop add pop call ja or rcll test and adc mov pop ljmp fsub mov mov addb push or aas dec push divl stos sbb jne mov push pop xchg call popa pmulhuw mov adc and push repz pop add pop push jge cmp adc add pop cmp xchg mov mov daa mov xor fnsave pop sbb dec or dec xchg das mov mov (bad) push into mov stos or mov inc jecxz int xlat sbb dec jmp stc adc (bad) mov daa rorb push nop inc dec ljmp aad rcrb js fistpl lret dec in (bad) or push mov ja or or mov sub test sahf out cmpsb dec out xchg pop push xor mov xor sub (bad) jo or or lahf xchg jl or mov cmpsl fidivr xchg adc mov jge fdiv lahf and (bad) jno loop call arpl add xchg aas fcomp xor xor (bad) xor movq call fstpt sub cltd lcall daa pushf fimull (bad) xchg adcl or in xlat cmc (bad) (bad) cltd mov dec xchg ret enter sub xor pop test aas adc push imul dec adc movsb jns stos xchg into fimul mov repz cs add sti fldt mov (bad) mov cmp push cmp jg pop fsubl push adc stos adc pop flds mov dec mov push out jg insb nop mov aad and inc push (bad) dec outsb xor and cmp loop mov push adc out dec in into lcall int mov int3 (bad) fmuls aaa arpl xchg xor leave mov test repnz xchg sbb ljmp (bad) mov cmp push cmpsb test stc jg je adc push xchg mov dec mov (bad) jno and pop dec mull cli push fcompl fmull inc dec (bad) push ss dec adc lds inc (bad) testl mov inc inc pop movsb push mov add jbe inc (bad) dec sbb jecxz repnz mov ret or pop cwtl jg dec movsb mov push inc push test add mov hlt dec fistpl daa or loop and mov add cs jecxz and cld fldcw or cmp fsubrp mov div imul shr xchg ret pop pop pop inc sbb popf pop clc es mov in fs jle push push pop mov pop fwait mov jg (bad) popf cmp idiv push pop scas pushf add ret or loope popl adc push pop cwtl sub movsl and (bad) jno sbb je xchg fnstsw jle adc out incb push arpl pop mov mov xor adc jecxz jmp leave mov or push in push std rorb push add mov (bad) lock push loopne lds mov out cld push (bad) jmp movsl mov out jns ljmp popa jmp jmp and cmp adc inc int sbb loopne into dec (bad) mov mov and stos jecxz push push xor pushf inc xchg gs mov inc (bad) and bound insl sub sub lahf nop adc and repnz mov push out jno lahf xor jo (bad) jmp rcll addl inc inc jnp add jne adc ljmp test cmp lea mov xchg cmp lods and mov lcall arpl jnp add mov push aaa jb push sbb test sbb mov imul xchg scas es sbb das sbb add mov aas jle stos jne push repz es push jno lss pop sub (bad) jge cs imul cwtl je sbb leave inc pop jg divb lods cmp xchg stc addr16 (bad) lds or mov pusha xchg (bad) int mov dec pop xor loop scas adc je sti notl fisub xor sbb stos fcomps mov mov pop leave int stc sub mov sub stc shrl cld mov das xchg adc push loopne arpl mov xchg add stos lods inc adc mov lret dec xor pop das test stos fsubp inc add pop xchg lsl jle addb pop je lret movsb repz call clc cmp in pushf out data16 sbb xor fnstsw jmp xor and pop mov adc mov fmull neg int adc std push jno jmp dec lret push inc in scas into lds mov subb sahf jle xchg sub aas clc lods ret xor adc jl mulps cmp add pop aas sahf lcall dec sub pop in mov int pop inc orl dec cmp or fsts gs pop and mov xor sub or cmc ja add xchg inc aas in lret out cmp movsb stos lds xchg adc cmp jmp lcall scas mov mov notb lods add js lret jne out push push pop pop pop adc sti cmpsl pop jl leave inc jmp mov test push and xor lea ret sbb aaa fst ja or xchg insb add sbb sahf push lea mull xor jl mov dec out mov jecxz and (bad) lcall pop orl loope push pop loop (bad) mov inc add aaa xor je lods loopne pushf outsl mov mov stc pop outsl cli les shrb std inc in fcmovb fwait jmp mov test (bad) jmp lahf push repz mov xchg jge xor xor inc push stc or and das (bad) lods jbe aad dec add adc (bad) sti cmp int3 jb js dec loopne jmp lock mov xor sbb imul popa mov push test or and test out and inc mov insl or in jmp jnp xchg mov fbld (bad) nop xor outsb rcrl loop inc fdivp je arpl fwait icebp inc pushf rcrl add pop imul dec add jp test outsb lret mov lret lahf cmpsb sbb leave movsb pop add or out sbb fcmovb push out jae and inc out jmp inc mov daa jb mov xor fdivrs imul repnz mov lods cmpsb call js cmp cmp xor pop sti cmp jne push (bad) pop mov mov jecxz pop daa imul mov movsb (bad) jns add fs adc and mov fs or mov ficoml inc and dec inc fstpl int (bad) xchg xor lods and inc add int3 pop (bad) insl jp and (bad) lods adc jg push addr16 mov push hlt cli dec popa (bad) mov notb mov mov xchg or popa adc mov addl call add cwtl sbb pop mov add xor repz in mov std jecxz dec test push dec jns rorl mov decl mov cmpsl test out pusha dec adc hlt insl push andb data16 lods or int sub mov mov ret shl into push mov ljmp int3 mov les adc mov push pop aam stc xchg mov sti sbb xchg lods clc fucomp pop lea hlt aaa and mov and jl xor addr16 mov xchg dec aas mov and test lods ret push mov push jl (bad) xchg fcoml sub (bad) lret fcmovbe stos add stc add push sbb leave push notb subl mov mov or pop inc xchg fwait in cmp cmp mov pop arpl mov ljmp stos orl dec push push xchg into push cmpsl rcl push aam movsl (bad) arpl mov dec jge movsb push aam or or sub int3 gs cmp imull cwtl add movhps in es (bad) push mov pushf xlat arpl add mov jge mov dec fldl mov mov xchg push in push or and sub arpl and mov cmp adc lea repz stos enter and sbbl and and fistpl or pop idiv sub scas push cmpl xor cmp pop cwtl insb pop fucomi or adc sub xchg push leave or xchg jne rcl or sarl arpl add cmpsl sbb xorl (bad) mov lea mov cmp push cld aaa mov lods xor cmp or pop (bad) dec fsubs mov je cltd bswap hlt add xchg ss jp lods dec inc outsl mov lea add mov xor inc mov add dec lods adc mov insb popf mov xlat mov adc mov popf lds xchg lods (bad) repz fcoml shrb mov (bad) and outsl fcom ds dec and push outsl cmp lahf aam add iret inc cmpsb push aaa or dec mov sbb jae sub (bad) pop add (bad) mov sti or jbe repnz gs loop lea mov xorl ds cmpsl jmp test ret data16 pop test cltd push loope dec or mov test shll aad lret int3 xor sbb or or lock call addb fsts into mov dec push pop ljmp in adc sahf movd add inc mov cmp loope sti inc in push cmp out cltd cmp mov push sbb mov sub mov lods ja ljmp out dec pop push sahf sbb out pop mov jno lret jb fisubl xchg lods lret add pop icebp test arpl insl sub imul mov mov dec and repnz cmp push out or xor outsb iret pop ss lcall jbe data16 mov jp scas dec jp ret mov test pop sub loop js pop aad lods push imul jmp stos fistpl sub dec out (bad) adc ficoml inc mov and or scas cwtl ja jp pop in imul dec sbb loop lods mov pop add mov (bad) dec mov sub in add or push in scas pop insl pop pop stos shr cmpsb xchg (bad) insb into fs movsb and mov pusha add cs mov in adc pop jle pop and (bad) jmp pop inc mov (bad) xchg sti jle and pusha or pop xor jb sub jge push adc fucomip stos pop test jns stos lret out sub mov and jg or push xchg int and sub cwtl in fsts mov lea push jg pusha push jae or clc loopne xchg sub mov repnz jne loop rolb shl or das push sbb jg dec icebp popf str lods mov insl sti sub ss sub stos inc mov arpl adc sub cmpsl mov (bad) je jb ja jmp lahf ds mov das or cs aad je addr16 jno call outsl pop orb (bad) std notl les push pop fmuls in push jmp push inc scas cmp lods lcall fsts mov and mov inc add cwtl cmp mov add sub add xchg jecxz leave and dec jecxz sub out psubsw popa pop les sbb bound test adc cmpsl dec mov push xor daa bound lret jge xchg stos ja mov pop fdivrl test push std jne popa aam pop dec xchg rorl ds mov imul (bad) lcall (bad) fstpt xchg pop dec or push mov imul mov dec jl,pn add shrl outsl imul mov jp aas push bnd or lods adc jbe icebp xchg xchg dec int jnp and sbb fnop test or in push sub mov std les stos xchg lock (bad) adc mov cmp popf sub (bad) sarl mov add callw std call shrl sti mov cmp or imul mov jg shrl imul mov mov fdivp lcall adc and pop bound inc out pop cwtl add fisubl js mov xorb shr mov fidiv bound out cltd cmp cmp sbb ja arpl mov loop adc out or call in cld fcoms pop rcr iret mov aaa out es int3 std mov shl repz (bad) cmp into ficompl (bad) fstpt dec loopw addr16 cmp push or sub mov mov mov sub aas iret dec or lahf xor imul add cmc inc jl mov mov pop mov pop and data16 pop mov jmp rcr scas leave negb adc int3 jne out loope push stos enter xor movb add add mov mov and add into push sbb or movsl xchg push das jge call adc inc push clc fwait lret dec mov insb popa dec (bad) adc pop iret xchg lret inc or push das es push inc and call sub adcl dec (bad) jo mov dec adc push inc mov cltd mov imul jb sbb pop and aam pusha and sbb lods adc jp ja mov ss mov cmpsb data16 push sbb into stos outsl xor ljmp out dec test test mov pop and push inc (bad) push std jg mov dec je pop out adc lods sbb jb dec sub xchg cmp add and xor (bad) mov jne bound test xor mov mov or jecxz (bad) pop inc ja sub push push (bad) addr16 ljmp mov insl enter fiaddl outsb stos xor nop mov ss fstpl out adc imul dec sbb pop addr16 addr16 adc or movsl mov jo std dec divb sbb imul rcr bound pop inc or cld inc mov mov dec cmp xchg popa (bad) jg (bad) fldln2 aas cld push rorl sub mov jno iret (bad) faddl imul pop popf test inc hlt jg jmp pop aad shrl mov mov scas out sbb scas jo,pn inc subb into dec cmpsb and pop popa xchg jle mov imul in push or or pop sarl lods mov out and inc push stos cs xor (bad) xchg push jle sub repnz imulb test jne xchg dec mov jmp test push ljmp pop pushf push (bad) pop and (bad) jmp aas sub out adc push add push into xchg push xor ret cmc outsl push adc rol clc xor push mov push incl fs outsb jmp pop sub (bad) int jne (bad) js repz xchg fidivrl fidiv inc cmp out mov adc pop inc aam jb dec sub add mov mov mov xchg shrb pop mov push jnp and push cld mov inc aad or lahf xor push and loopne and jns out pop sbb dec inc loop mov call out jno dec iret sbb mov mov ret (bad) daa mov cmp push fmull add and jl add mov push add xchg (bad) std sti in rclb (bad) addr16 xchg int3 scas xor sub inc (bad) mov (bad) inc jnp loope xor lret ret fdivrs mov loopne (bad) call add pop or adc sbb call mov into or sbb in enter jae dec mov add cs int3 rorb movsl iret lds test push addr16 ss in fnsave sbb hlt or jp pop mov push push aad (bad) shrl in or andl xor hlt xor gs jg inc cld jne add (bad) mov inc mov or ja mov sub (bad) xchg add cmpsb fidivl lods stos xchg jmp add add fisttpll fldenv push (bad) movsl and jecxz and mov xchg xchg rcll adc addr16 jne outsb mov xchg iret sub pop xchg movsl stc in (bad) repz ss cmp sub add mov cmp pop jmp push adc outsb mov inc xor stc inc pop push push pop arpl ja mov es mov cs pop lret push dec shll dec push push movsl xor dec pusha sahf into adc dec fstpt jp add pop xchg pop cmpsl sub lret mov xor loope ret push cwtl ljmp xchg sub out fdivr loope mov lods fildll (bad) je xor or imul cmpsl dec sbb cltd xor mov outsl scas ficom out inc or lods sbb adc push in mov or test loopne ljmp mov sbb and add stc cmp (bad) fldl stc fstpt dec pop jns out xchg movl jl lods xor push jb repnz pushf ss sbb sbb jg sub mov aad add dec (bad) cmp cli into cmp test xor sbb aas add out sahf insb push or sub fstpl movsl push mov xchg or gs sub pop mov out movsb pop jmp dec ret fcmovnbe lret (bad) mov lock push imul fistp cmp lock fs push mov fild mov push les (bad) pushf push pop push pop dec stos mov lret xchg shll cmp les jbe xchg mov pop das cmp jge push adc pusha inc (bad) xchg sbb adc aad jle test or inc push fisubrl sub fldenv ljmp sbb stc sbb or mov sub add icebp faddl mov mov sub or mov dec pop and movsl scas sbb out mov and stos dec nop xor mov movsl pop addr16 push out test push fcoms lahf xsaves mov xchg mov mov inc jns dec or shll sbb je imul xor mov fwait fs out adc mov sbb mov lods jmp orb movsl mov icebp add mov jg mov lahf mov (bad) jne inc je jl pusha lahf push cmp fild int popf iret (bad) dec (bad) cmp push jnp jmp mov xor sbb cmpsl data16 dec insl (bad) mov iret addb rorl idivb push push aas jmp jg addr16 int3 in xchg iret lds cld dec mov (bad) and aas lds push imull and scas fiaddl rclb fs shrl inc mov test inc lock mov nop sarl mov and ja stos dec (bad) sub mov pop add sub sub jmp fmuls rcrb adc fildll cmp push insl int mov sub mov movsb push adc ss arpl add cmp push lock dec jl pusha fldcw sbb push xchg adc inc sub in enter push mov xchg (bad) pop insl push or push jp mov cwtl mov movaps (bad) mov outsb je cmp pop pusha pop rcl (bad) push dec hlt pushf sti mov mov aaa movsb jg jae leave outsl push mov pusha xchg out push mov dec mov andb push (bad) dec ds addr16 inc push dec pop and xchg inc inc xchg neg out aas and sbb rol cs jle les in pop dec sbb inc add mov jmp sarl mov inc (bad) or fimull mov and mov add push xchg repnz adc addl bound sbb lcall jb dec push push pop or ds sahf or mov mov aaa sbb mov sbb pop imul and inc dec mov inc lods xlat xchg jl or pop inc cmp in out popl movb adc dec (bad) lock sbb fsub inc outsb cmpsb mov add aas mov cltd and mov push mov (bad) pop cmp cmp or or xchg stos shr mov jns jg aam out and je or out sti cmpsb xchg rorl aad and mov js pushf mov pop mov stos out sub aad sbb jbe cmc sub (bad) ds scas pusha std mov in rorl imul add fisubr fistl push mov cmp mov iret jno cmp ds int3 dec mov test cs mov or (bad) mov inc push xor out repnz ljmp jnp fwait push mov sahf adc xor add push push repnz outsb (bad) and (bad) sti mul cmp ljmp fstpl mov lods and pop dec sub add cltd cmc dec xor mov fmull mov lahf movsl pop sub mov xchg inc xor ds hlt repnz (bad) rcrb jmp jg add mov mov cmp cmp pop pop loop popa lds xchg ja arpl roll dec add sbb jno cmc sahf adc or pop xor fsubp mov enter stos mov addr16 fs ds inc fmuls mov scas jge dec cmpsb inc pop sti pop xchg das in dec dec stc cmpsb adc jle jo and (bad) sbb sbb stc (bad) cmp jbe scas mov jno dec fadd pushf repnz xchg in mov stos divl leave (bad) sbb in popf fwait sub lea sub iret fwait adc xlat andl rcll icebp pop mov pop xor mov stos cmp loopne (bad) push aam mov xor (bad) cs ret cmc mov adc es jo out scas add les data16 push inc xchg add aad stos lahf stc cmp out cmpsl shlb sahf sbb inc push out fwait rolb mov cmp adc ret inc insl add test push ret sbb and mov xchg enter xchg loop cmp rclb sahf fistpl sub out rorb dec push dec mov xchg cmp stos inc rcrl push cmc lret sbb stos xchg and cli cs add or pusha xchg push aam (bad) into sbb (bad) out clc lcall and or mov sbb insb inc inc pop cmpsl adc dec cmp jmp lds ljmp pop jecxz cltd mov inc pop push xchg xor fsubrl jbe push int mov bound sbb cmpsb and jecxz daa fsubs adc popa or lock add mov adc mov lock aas xchg daa xchg lcall scas adcl sbb sub outsl mov fs mov lock lret push lret fsubs lock add iret jo xchg inc fidivr test idivb xor aaa push xor cwtl cmp ljmp arpl cmp rolb out enter xor (bad) xor dec in rcr inc out dec cmpsb pushl or pop std out mov jae and (bad) dec mov test cli mov in pusha adc jnp mov push cmp (bad) mov fbstp pop je xchg sti int3 repnz fisttp mov jmp jle xchg mov stos shll cmp fdivrs out adc sub pop fbstp pushf mov (bad) xlat cmpsb test add jb inc notb xor sub (bad) repz xchg leave cmp pop xchg das lret push cmp push scas mov push push sarb jmp and inc cli aad mov data16 add add mov fnsave mov cmp jo mov cli out notb aas jge pop dec mov jge mov (bad) jo nop pop add mov lcall dec rolb js add ret repnz lret inc jae add les pop jp ret stc and ja bound in pop dec mov addr16 repz dec sti xor xchg and sbb jl sbb not imul xchg iret or adc mov cs xchg mov push cwtl xchg push cmp fistp es test xlat test and test iret lahf dec cld dec movaps adc xchg ret mov xor sbb inc inc push mov outsl xchg push lahf bound andl xor or adc int3 les into imul xchg aam xchg xor mov mov xor adc or mov pusha mov push mov lret pop insb mov dec mov push and xor icebp jne outsb xchg pop cwtl xchg cli std mov adc imulb pop sbb jp andb mov and sbb arpl jbe xchg lcall adc jo je out pusha in jmp fcompl fiaddl out rcl mov and lcall sarb iret mov pop in ja dec inc out push scas jns push mov push (bad) mov inc rol and lret dec aam xor icebp arpl xchg jb mov sbb jae dec movsl add pusha push je fldenv arpl aaa ret ljmp sbb inc loop inc out lds push imul xlat jb,pt sbb adc cmp rolb adc ret mov hlt int out xchg push arpl pop mov pop mov push sub fisubrl clc sub adc ljmp sub fcoml inc (bad) push jmp push mov dec cli sub mov mov imul (bad) icebp ror lods pop mov mov in out xchg xorl jae in scas sbb mov mov pop dec pusha jae adc pop insl sbb mov ret rol (bad) hlt (bad) mov xlat popa jp ds (bad) cmc mov repz push sub mov sbb imul ret mov rcrb or stc ret insl stos bound (bad) lahf push (bad) rcrb (bad) lea cmp sbb and jbe sub rcrb mov inc inc sar or push popf (bad) and pause pushf ret pop stc inc xor lods mov lret push cmc nop lea fldl lret ret pop push xlat mov daa into ja mov push push cmc mov jb dec push repnz (bad) enter aaa inc in or mov inc adc mov lret lock pop mov mov or xor sahf fisub inc pop in fnsave pop add pop in pop (bad) jle (bad) inc mov xchg fnstcw in hlt (bad) fstl es (bad) cmp mov pop lret leave mov xor cmp insl insb shrl aas xchg cmc fldenv mov fistpll iret mov cmp xchg pop sub popf sub mov aam testw (bad) leave jle mov ds cld addr16 fsubrs popa mov add xchg inc lcall out aaa loope out (bad) mov int and push shl fstps mov dec sub dec pop out push loopne push fldcw xchg inc (bad) or add into test xor pusha pop sub ja int3 sub mov sti iret inc imull std jg add fbld xchg adc cmpsl fwait lods push in sbb in mov (bad) mov fnstsw bound mov js mov mov mov xor lcall lret (bad) fucomip dec jns and repz (bad) dec dec leave push mov rolb and pop mov sbb cli or mov and cmp push sbb inc mov rol sbb cmpsl lea xchg (bad) (bad) (bad) inc fwait jp dec cltd dec push leave faddl sahf pop lods test push sbb cmpsl adc ss pusha push jmp adc mov mov mov cli jno sbbb xor push cmp test inc or cmc sbb jp,pt xchg (bad) xor push add mov bound pop cmp (bad) ss mov xchg bnd (bad) sarl inc sbb int3 push out jae in ja mov push jne call cmp (bad) xor push mov lock aad pop mov push mov cmp data16 inc or jp lods add adc movsb push mov lcall pop mov sbb mov sbb xor xchg jnp in out cmc test (bad) rcl popf pop ficoml xchg scas mov sbb mov fsubs cmpsl sbb negb imul xchg movsb and gs repnz adc lahf sbb add negl (bad) pushf nop mov mov mov mov mov (bad) mov mov subb inc push out push sub hlt fiaddl ljmp test lahf test (bad) loopne test popf push (bad) addr16 xchg popa xchg mov push pusha (bad) lahf leave sbb arpl sbb pop addr16 jne imul imul pop dec sub lcall or inc jno leave imul aaa inc aas cmpsb ret push mov cs or push es subl imul fwait jecxz sti gs mov mov (bad) jbe test mov jmp fidiv fcmovne cltd insl and cmpsl daa push pop push dec adc loope and mov xor xor mov jb push cld dec xchg cltd sub adc xor push cmc mov ret lret lahf mov push mov xchg mov mull push pop test sahf adc xchg shrl push xor stc (bad) in out loop into dec push call outsb pop mov inc mov jno cwtl vdivpd or or bnd cmp ljmp jp sbb aam and das daa push dec imul aas and (bad) in lods bound orl mov pop mov inc xor fidivr popf cmpsb jbe add cwtl push daa jae sbb adc and add mov sti lret ret ret xor or stos push jl (bad) inc test lret data16 inc js cmp push jmp lcall lahf aaa pop hlt fdivl sbb cld pop gs jnp dec int lods mov mov and inc dec into mov xchg dec fcmovnb incl and inc pop pop xchg sbb and (bad) mov sub das mov sbbb mov inc pop js data16 js jmp repz in adc push add out loope idivb inc cmp adc adc in iret ja cmpsl dec (bad) iret lods xor popa pop inc jp adc cli mov lds lods repnz mov movsl jp inc jl xchg or popa cmp push adc mov pop dec push gs push fwait ja inc fsubp lcall lret shrl in dec and xchg pop add jg mov out ret pushf sub mov fildl push js sbb xchg inc outsl aas or stc push clc lret jns push mov push inc pushf in jo pop pop xchg mov lds ror fdivs sub in push mov sub jae adc mov dec lcall imul push popf and icebp insl repz mov xor insl scas lods lods loop sbb (bad) insl mov cltd cli lea push adc or leave sbb push imul push ret push and add es movsl sarb and cmp push or leave sub mov sahf fstps mov dec andb mov int3 insb mov mov and xor int xlat or (bad) sti add pushf popa cmp fldcw xor lods lock lods incl xchg call push push pushf mov in mov mov cld xchg mov dec scas cmpsl adc sahf xor pop mov sub jne push js call fwait sbb cwtl dec xor ss sbb push xchg dec daa mov iret rcll xchg or movsb xor jno dec fistpll ret int3 mov icebp fmuls test outsb test pop rcll inc adc mov xchg xor mov clc (bad) std test adc cmp cmp aas xchg ss inc xor cmp lret pop lret mov popa mov gs push stos dec ss sbb xor inc inc pop daa ror sub inc push mov mov jmp jne jb dec std push subb call stos mov rcll mov roll and lret stc popf xor mov mov rdpmc inc lcall inc out fs pop cmpsb in es push mov icebp std into pushf add aam test sbb dec outsb fsubrl les mov mov std push repnz mov ret out stos pop jge add or stc in arpl popl sbb js jne ret lods mov mov xchg jo movsl add cld std cmp rcrb xchg popa dec push loopne mov pusha popa push test in mov lock ret or pop ljmp cmpsb xchg mov stos js inc repz popa popf in and sub jp ret stos inc sbb aam sbb dec psubb loop scas movsb mov sbb sbb pop pop movsb scas cmpsl fistl pusha ss sub sub lcall (bad) cwtl lock pop mov je,pn idivl jmp testl jb or inc fsts subl jg fisub inc xlat les mov adc sub iret inc and adc inc notl sahf push mov lea fisttpll test ret mov sahf xchg or jmp xor jns xchg push xor push or sbb cli (bad) xchg out testb cmc fistpl jns sub aad subl int mov std lds jg ficomp dec pop fs (bad) aam lods xchg cmp movsb aas xchg fnop pop insb add xchg in movsb shrl sub or mov add push call sub add in ds idivl pop loop imul jl fild xor test xlat push push adc sub fdivr mov mov push jmp flds loope rolb mov inc dec push or or inc or and push xchg and les fs jle (bad) adc dec mov inc pop jp mov jge stos (bad) push adc in mov sarb stos lahf adcb scas jmp jmp shlb das inc add jp add dec adc pop pop jb xchg jg push add push push mov icebp ret loop (bad) imul jge (bad) lock sbb cmp pop mov dec int mov fnsave adc jae fistpll pop sub out sub xchg inc mov dec test aam xchg (bad) sahf sub and and imul (bad) sti ds test jecxz lods push mov add add outsb (bad) mov mov out (bad) pop mov jb fsubs (bad) je cmpsl sub and jo shr (bad) inc les push (bad) aam aad mov xchg sbb and push sbb and daa jne loopne inc dec insl pop cwtl cld rclb imul sub (bad) mov pop orl aaa xchg push sbbl pop cmpsl mov enter push sub jno lea xorl jge jo or xlat (bad) je (bad) (bad) mov mov push jb pop lods and dec data16 mov jne out test cwtl push mov push jbe push inc cwtl lods (bad) jmp clc mov test ss mov aaa test mov xchg (bad) xlat mov scas push adc lret sbb shrl xchg ljmp xchg fsubrp lret (bad) mov cmc lea and leave xchg sbb cwtl in outsb lret loopne imul sub enter lods inc mov movsl and cld ret fsubl add mov repz shrb loope aas in xchg rorb xchg ret out sahf (bad) lods stos sub xchg ffreep and push sbb add add loopne call sbb cmp pop sbb ss xchg inc xchg adc (bad) sarl jno lret xor es daa mov (bad) mov (bad) fwait outsl popa mov scas sub cli lcall mov ja push sub je std and pushl data16 sub xchg inc pop sbb sbb loope rorb ljmp imul xchg add push fstpt inc rcrl sub cmp popf and ret or aam adc xchg std jp in ja push adc xchg adc rcrl rol push out repz fsubl cmpsl test jae cmp mov inc mov push adc dec dec push add int mov lods sbb (bad) jns sbbl cmpsl mov dec or subl adc and push mov xor mov (bad) mov pushaw popa or jl loop add negb addl dec lea lret xor jmp inc fiadd mov (bad) ret and mov cmp rol (bad) jo jnp and mov nop test orb xor inc dec out cmp ds xor and inc xlat out ds rcrl lds sbb mov xor add ret add out mov pop mov sbb mov mov insb int gs ds int jno and leave dec xchg inc lods sbb sbb (bad) rclb adc rcll add xchg sbb mov out test ret sub mov mov in jno arpl pop gs mov mulb cmp loope test cltd std pop shll shll sar pop add push sub (bad) lods gs sbb aam lods sub insl (bad) xor sbb xor push jo adc ret sbb add xorl outsl pop jo xchg stos inc int fisubrl fild inc pop jge repz cltd push sub cmp ds inc cmp insb fimull and arpl lock jge mov add (bad) scas fstl push out sbb (bad) stos and push stos cmpsb sub fs lret xor sbb out sbb jle jmp mov js mov mov mov push mov xor loope (bad) loopne clc fs testb sub pushf cmp hlt mov pushf pushf push inc add lock add fnop fcomip and adcl loop test xchg push pushl mov lret xchg pop pusha add out inc jno (bad) setl xchg adc dec pop lcall add pop nop imull dec push shrl imul lea test mov dec push scas mov sbb pop xchg pop into data16 xchg outsb mov push insb movsb shrl add mov aas push sbb inc mov inc sbb xchg (bad) push data16 push rcr mov dec (bad) stc (bad) icebp lods mov cmp add iret nopl push popf add insb xchg test sub les lret (bad) dec adc scas inc out fistp pushf sbb ja mov xlat test out xchg push sub push ss js fsubrs inc add lret out lods leave dec inc stos js push and es adc subb inc jno lret cli and jg scas rorl jne xlat jb fcomip pop push add test hlt stc dec repz call mov pop int pop jnp xor pop daa ret cmp push xchg adc cmpsl cmp rcll out bound xchg (bad) ja pop shrb push sbb adc mov sbb cltd mov and pop enter or push add push xchg (bad) pop xor lds sub pop xchg inc iret dec es adc dec jl add dec dec xor sub mov subl test pusha mov es insb sti mov mov leave bound mov cmc xor or pusha or repz inc pop and stc push cmp cmp jae inc cmp shrb adc rorb or jnp in push ja sub daa pushf mov fnop and xchg adc mov jo cmc pop repnz (bad) mov sub pop mov mov sti jle add mov loop lock out push and adc das sbb adc mov lea mov mov cli fidiv pop aas and (bad) mov mov sahf mov ds insl push in jno jmp test insb cltd sahf inc mov into adc (bad) xor enter ret adc and add push sti sbb xor adc dec imul adc push adc (bad) sahf xor jae cmpsb in push xlat cli sbb loop stc les fs je (bad) and add pop sub cmp cwtl mov pop push pop xlat or jmp dec cmpsb and pushf das fs sub decb imul pop adcb mov les mov inc aas gs cmp add xchg jg mov sub or or jmp cmp loopne shl fisttpll jle enter xor push prefetch jb dec and (bad) dec (bad) sbb scas push js xchg lahf xchg dec jl test lahf cmpsl popf mov cmpsb (bad) xor (bad) aas ret lods outsl cmp jl adc and dec and mov jne xchg in sbb pop or movsb loop test data16 dec mov scas pop push mov (bad) push gs call xchg mov add scas js fs aad test dec cmp push pop adc cwtl push sub jb std lods jne std sub mov push negl xchg ret ljmp pop or gs or aam lret push and mov (bad) mov xchg add test leave xor movsl inc rclb sahf dec or xor jne pop cwtl mov aad jle test in sub inc push jo clc lods sub mov mov lret in test cmpl adc or pop or test dec sub ljmp sub mov lret jno mov int scas les mov clc mov jmp xchg movsl imul sahf lods jb push cs sub jbe push scas mov ret test push lods and dec mov pop insb std ret adc mov loopne shll aad xchg mov xor mov pushf push out idivb dec mov pop flds cs call push adc mov mov loop and into add ds push jae shrb pop push lea push test xadd test jnp mov imul jle mov pusha pop pop cmp and rcr sbb mov into ficoml addr16 lahf sbb inc pop inc xor imull enter xchg repz xchg rcll cmp xor inc mov int cmp xor dec or push cltd jbe add fidiv push pop outsl out push adc (bad) jne pop rcl data16 das mov outsb mov (bad) in pop dec adc cmc aaa insl bnd ja into ret inc dec sarb push cmpsb mov lock rol insl mov or push jle aaa lret xchg push push leave sbb cltd (bad) pop imul mov inc or xor push jae (bad) push in adc cmp push mov and mov inc sub xchg push mov sbb cltd pop push pop (bad) into sar inc in mov mov adc (bad) daa xchg or xchg mov push scas sbb mov scas jle subl mov jbe cmp adc loope test ja jmp and (bad) dec addl mov sahf inc das call sarb hlt xlat js dec mov pop mov add jb lods scas cmp mov add in mov scas test push pop sub inc movsb mov mov mov and push daa jo cs add push sub imul xchg loop sbb mov hlt test idivl xlat lods fwait arpl jle sbb scas loope arpl push cmp and add cmp js adc mov out pop out lret xor xchg mov mov out dec fstpt and aad repnz sbb jno xor xchg or enter mov pop and mov scas or scas (bad) int imul pop test insb sbb lods push call (bad) mov bound or adc adc jmp testl mov or lahf (bad) jp decb cmpb jno push fs es pop push push dec dec pop xor inc push push jge push xchg cmp frstpm(287 and add sbb xor add pushf pop loope movsl arpl lret mov ror or ret cmp dec lods mov std adc xchg and xor sub push cmp cmpl mov or xchg and push pushf add fmull in mov (bad) pop fwait jo lcall jle pop xor divb xor and gs add daa pushf je cmp popa or push fwait and adc push inc das xchg test pusha sbb jge int3 push popa dec in lahf inc mov mov out inc (bad) das cmp push ds inc test (bad) and mov push cmp fdivrl fidiv jb dec lea push imul mov inc (bad) rolb adc mov cs add scas pop inc movsb mov (bad) clc insb lods imul mov mov push and jmp ds dec mov int3 (bad) xchg push sbb repnz std outsb xchg insl mov cmp (bad) adcl (bad) inc adc (bad) jnp adc push aam fsubrl adc aad pop pop test jne adc dec inc (bad) mov (bad) pop iret add (bad) inc bound jle adc enter out in aaa xor call inc cmp push mov cmp outsb xchg aam adc js and movl aaa mov fsts and pop scas xchg call ljmp pop negl test adc inc sti fiadd mov subb mov xchg cmp dec (bad) negl add cmpsl and loopne aad movl std xchg jbe das imul std stos dec adcl aaa lret cwtl or sbb outsb (bad) mov mov test lds test mov sub shrb pop imulb and fstpt dec jo inc xchg je cwtl mov inc enter adc push xchg lods and pusha jg loope movsb fidiv adc pop dec inc fisttpl sub (bad) cwtl sti outsb jl fdiv adc jle outsb and js mov mov mov in mov dec js push aaa aad mov fdivp and daa loopne add iret jne loop repz push xor xchg inc xor and (bad) daa adc push and adc inc out add pop or sbb sub scas fcmovnu adc sbb push jmp je popa leave jnp insl pop stos es in push cmp and shll mov mov arpl mov fdivrp leave ret pusha sbb jmp jno cmp fnstenv pop jae shl mov (bad) mov dec (bad) cmp mov jnp cld or scas out lock fs jmp mov mov mov add je inc lds jg push cmp dec sbb out jae pop mov push push xchg mov data16 inc mov mov jle push xchg xor xor shr sub dec cmpsl inc sub lods mov pavgw or leave (bad) (bad) es jmp ljmp cs dec or pop clc (bad) mov cli pop loope ja rcl sub mov xor mov ret sbb in aad mov dec sub sub das test daa adc aas ss insl ds pushl (bad) iret fs negb add lds pop pop out (bad) xchg incl jno (bad) pop inc insl inc push mov aad and push inc inc mov lcall addl lcall rolb inc jmp xor insb out popf mov jo xchg pop jecxz pop pusha test cmp jnp je push mov inc pop (bad) fldt sarb xchg push cwtl xchg push mov pop imul les adc lods rolb jge xchg sarl and iret push jbe mov jns xor inc jmp xor (bad) cld movsb xor jmp jmp sub push jns addr16 mov push out push jl jp nop mov jl mov xchg adc popf inc mov ficom lcall xchg add adc or inc movsb mov sbb dec popa call test (bad) fnstenv (bad) aam mov pop jno xchg (bad) insb in scas or xchg imul dec or mov inc lods xchg in mov rclb sub pop mov lcall jbe pop bswap movsb int je gs (bad) out adc cmp dec les js dec addr16 mov inc or lods sub mov push sarw push outsb je pop mov scas repnz cmp test cmp xchg mov test ljmp push fstpt enter mov jbe adc xor test add sbbl jg (bad) mov sbb or mov stos sbb mov mov mov fimul jb dec adc push and mov or stos lret add pop (bad) repz mov arpl add lock jecxz enter add xchg (bad) jns jge sbb push mov jmp add pop dec mov sub fdivr pop sub jbe mov fs add imul mov lods lods jbe cmp adc cltd push movsl sbb imul push jecxz dec (bad) dec sub xor daa (bad) iret mov out shrb and (bad) scas fld les dec lret mov test jp and jecxz and jmp inc xchg mov mov test sbb push ret fcomps and jmp lahf sub test xor jg mov mov mov scas sbb sbb mov pop sbb cmp arpl xor outsl xchg jbe xchg pop add mov div int3 (bad) add in mov pop jnp loopne sub pusha jge add mov insl mov ret repnz push outsb (bad) andb cmp cli movsb cltd popa inc mov and leave popf lahf outsl pop (bad) push sbb lret push fwait inc sub mov loop xchg and push and addr16 sub inc fwait jl pop rorl mov popa adc incb (bad) inc xchg out in outsl pop (bad) mov sub push xchg mov js jmp in xor pushf cmpsb or in xchg es push ret lret insl test push push add adc mov xor outsl shrb jg test xor fist movsb xorl leave jnp xchg and xchg insl mov or cmp mov (bad) push mov outsb scas aas jns push push mov push (bad) pop clc push (bad) xor and sub dec ret cmp ret sbb mov lods xchg sbb icebp xchg clc cmp pop and mov cmp sbb lcall je add movsb leave lods lahf ds (bad) std cmp and imul fildl add sub jbe fwait xchg call or mov mov popa jp xchg and or jl subl xchg xor cmc insl cld sub push push push (bad) dec xlat (bad) iret xchg or xchg roll shlb test xor cmp cmp daa repz jecxz hlt sub sub jg mov test and bound dec repnz pop gs sbb sbb aaa roll dec xchg add cmc fistpl add xor (bad) idiv xor popf nop pop adc std mov push lds hlt daa mov insb xchg jmp cmp push fnstenv inc mov fildl pop dec outsb pop cmp es into std aad fimul push jg gs int3 cltd xchg jle movsb lcall dec fmull out and dec lcall jo sbb pop pop or mov cmp xchg cmp mov xor inc pop xchg movsb mov hlt xchg add je sbb mov mov imul sbb (bad) push mov mov cmp xchg xchg xlat xchg xchg or test mov jp imul sub fsubl cli stc jle lods push pop push mov mov cmp idivl out inc pop lret xchg ret aad jp enter (bad) mov adc lahf mov test push test mov jb mov mov pop jmp mov jmp xor test sub shld int inc sub adc mov testl mov inc mov loope mov push incb fdivrl bound jne daa inc push or shrl mov and pushf popa lods scas sti cmpl xchg scas jnp mov bound lea outsl mov xor or mov or push xchg dec insl sbb sub aad push mov (bad) xchg insl lea push (bad) mov sbb aam pop movlhps mov fidivrl dec scas or loopne repz dec cmpsl mov push sahf pop lahf pop test mov dec rolb pop out sub dec test movsb pop (bad) mov jl pop mov push mov fs bound movsl int (bad) iret fsub or lret scas mov or cli and lods mov (bad) xchg outsl les in sub test mov sub cmp fidiv negl pop inc push xchg sub into pop cmp jle push cld xor (bad) lret sahf cmpsl (bad) mov push (bad) ss dec sbb cmp cmp jecxz push xchg lret sbb lods addr16 sbb js je dec or lods sub jecxz pop (bad) push cmc dec test (bad) jmp lods adc inc scas out inc xor roll pusha stos sti inc lods fidivr ss xchg adc icebp data16 add add cld in scas or jl mov fldt adc cmp jge aas mov jmp pop cwtl mov sbb out push flds dec jns cmpsl gs pop (bad) fimul ljmp add lods repz inc js push in cwtl fstpl pop fistpl iret lds push jae jle pop inc not push adc fstps fsub dec scas push pop mov mov add stos jne cmp push xchg and popf mov sbb lods cmp fwait push mov push sbb adc idivl or xor xor xchg aas outsb inc movsb dec ret push repz enter jb (bad) jne mov movsl (bad) fistpll out xchg (bad) lret mov das cmpsl adc cli jbe (bad) jo mov add ret in scas std js sti test out fnop arpl pop arpl stc hlt pop aas jg outsl push lret ds std movb lock mov enter neg xchg and lea out push das xor inc popf ficom mov adc lahf mov psllw rcr inc scas (bad) and add out cld (bad) dec enter cmpsb ret int3 mov push mov xchg push xor shlb call icebp add rorl cmp jle or insl push mov pop cltd orl dec push pop sbbl jmp mov loop test and xor sbb lea je adc aad arpl aaa (bad) xor mov cmpsl cmp sbb xor std lret popa clc mov adc cmpsl xchg scas sbb cmp imulb jns int3 add pushf xchg add addr16 cmp nop outsl mov jmp int roll bound adc inc mov insb mov rclb ret sahf or mov in das and fst lods and inc sbb fs pop adc cmp mov lods jno lea int jmp ret (bad) jo cmp mov mov cli arpl sub mov fstps cmpsl lods imul jmp inc pop inc push mov adc in pop mov shrl in sbb arpl leave fist jmp mov mov cmp call outsl pop or xor push inc mov ss gs lock pop sar arpl sub lock inc jbe in pop pusha sub pop enter or inc and pop xchg xchg in mov (bad) cmp jne push pop jbe pop push xor mov adc cltd sub bound in lods inc inc jb push fstpl cmpb jb cld popf arpl adc inc int3 mov aas lock sbb push rcr or fldenv mov jb pop repz iret aaa add ss add adc bound jmp add jmp and adc andl rclb cmpsb cmp xchg (bad) xor adc popf mov sbb aad or arpl mov or sbb movsb inc arpl pop out inc jo xor dec mov xlat inc push lock ljmp pop adc out enter push sbb movsb push and adc (bad) xor (bad) cmp jb adc sbb ret or lods sbb dec addr16 daa outsb lahf and loope adc lock dec arpl iret jmp imul fsubr test push pop xchg cmpsl lock int fs jo stos (bad) (bad) mov cmpl sbb jg inc ljmp cli enter jo not mov jecxz lret push lcall rolb sub mov (bad) adc fst cmp inc out add icebp pop notb sbb rclb cwtl push xor pop mov fs loop or adc push adc inc jbe inc cmp fsubrs lea mov and stos xchg jle and push je rolb xchg cmp fsubrs cli jae js pop jns add inc gs popa and dec push xor mov pop fsubr inc nop jg or dec pop out sub push test sub xchg add mov push lods mov cli or xorb cmp into cmpsl jg rcll bnd cmp mov mov push sarl adc dec sti data16 mov aam mov in mov movsl cld cmp cmpsb and pusha lods jnp add inc outsb inc or setno mov outsl adc out inc pop or adcb std sarl lret push in fs jge mov add enter pop dec and xor push and mov fwait repnz std dec jbe in test jp (bad) pop cmp inc ffree dec sahf (bad) (bad) xlat mov iret int jb nop/reserved into xchg jo arpl add cmpsl movb ret shrb cmp mov adc add inc test pushf pop mov andl std xchg sbbb jmp int rolb push push pop mov fidiv movsl (bad) fisubl (bad) je fnstcw lcall dec and push sub pushl movsb mov ja cmp pop jmp pop cwtl lret sub and movsb (bad) (bad) xchg add and (bad) jb lds sbb stos mov or lea lds jns fidivrl cmc rol shr sti adc cmp jae cld push popf int3 adc lods push sbb dec repz push mov inc sub add mov leave mov push out push pop addl mov and clc ret mov out adc jno push sarl jae arpl adc call xchg gs or (bad) xor ficomp imul push jge pushf cmp fs mov mov pop dec xorl mov sbb repz cmp or mov movl pop in test mov xchg cmpsl mov xorb mov int3 fadds dec mov insb lahf jl mov xor test notl (bad) xchg cmp push cmpsb xor dec (bad) repnz sub sub test fcompl js cmp sub mov icebp mov mov lea cmp fucom cli or clc inc mov fldt andb imul cmp or lret jne and sub dec addr16 cld fadds mov xlat push or ret pop into scas repnz addr16 cmp mov add push ja outsb fldl rcr add jno scas cwtl dec or pop das into mov pop cld pop imul fnstcw arpl or rorb lahf adc cmp sbb add sbb add out cmp fsts sahf call xchg repnz xchg inc call pop pop mov icebp (bad) mov push jecxz pop or shlb mov jae and xor ds or gs push (bad) pop jns mov repnz mov inc aad or cmp pushf cmp scas fldl jmp test inc rcl sub pop cmp rorl sbb jmp adc in push lods hlt les adc cltd jge cli loopne pushf movsl lds (bad) mov push or add and or mov jmp loopne push fstl loope lea pop adc rorl xchg pop in or xchg jae pop ss popa inc xor int mov mov sar aas fcom fldl faddl addb stos mov jmp mov add add cmp scas xor bts inc lret pop lds loope push mov rcll mov js pop cmp xchg sub in sahf and mul fmuls fs pop mov jp xchg enter repz hlt mul je sbb (bad) mov jo push mov addr16 and loopne fstp insb aam mov test cmp (bad) cmpsb dec daa xchg fstps lcall mov push ss cmp and xchg dec sub jmp test out imul ds cmp mov mov push xchg jno ficoml mov dec popf pop mov out std loope jecxz and sub and jle push xchg jmp fistpl cltd dec dec xchg ret adc sbb imul push mov xchg aaa out and cltd and sbb movsl mov test inc scas push mov inc xor add push dec aam xchg insl out xchg stos mov cld or jbe sbb rcrl inc mov cmpsl adc add outsb pop fcoml ret jno sti xor pop (bad) test lds add push cmpsb sbb les adc and and add or into cmpsb push mov ficoml or sub adc adc jb repnz inc xor leave jmp addl mov loop inc mov xor insb dec and jns sub daa loop,pn hlt xor mov xor jecxz adc out mov movsb lret mov sahf les outsl xchg aas test mov and lcall int (bad) js jae jnp in sub pmullw lods lods jno insb cmp cmp lret jae lods push and ret pop jle in sub and inc ljmp mov (bad) mov mov push and push xchg pop dec cmp mov ss xchg xor push call in decl mov scas js jbe xchg push pop sahf jae,pn mov es cmp mov push cld outsl fwait loop lods push xchg push add ljmp push loop orb or call gs les js sub mov sbb lret icebp rcll inc jnp in out and dec ret push aam hlt mov imul cmp std fldenv ds lock mov mov pop in mov push mov add or dec cmpsl xor in mov fadds mov out stos addr16 or mov loope lods and ljmp inc test and sti jmp add lcall out cmp push fimull fidivl (bad) fsubrl in xlat addr16 aaa xlat push cmp sahf cmp push mov pop mov lods inc dec stos sub cmp and rorb fild call pushf inc lea jge pop (bad) sahf dec dec ljmp daa sub cmp cmpsb sbb adc out xchg shll xchg in mov popa xchg adc inc adc popf and or out mov pop out pushf popa xor test scas out jmp add fsub sbb jo dec cmp les adc (bad) call mov add pop fimul inc mov mov xor or gs call sbb repz pop (bad) jno fist outsb mov pop movsl sub xlat repz mov inc jne add test test mov addr16 mov pop dec or daa xchg fsubrs add daa lock fwait mov mov in nop int3 aaa jmp add jle enter cmp sub inc pop xlat adc sbb scas or test enter or sub mov jl inc sub mov fsubl sbb add jnp test sub mov and lods cmc sarb jg cld xor daa gs jmp or mov aas mov inc mov cmpsb inc adc cmp sub push push data16 push mov lds out sub add dec test aam (bad) jmp sub arpl test pop dec and das adcl pop call iret add jnp out rolb xor enter inc sbb fisttpl or data16 fnsave in (bad) sbb in push (bad) pusha lret daa loopne pusha sbb mov addr16 add inc aaa sbbl push sbb xchg sub por je jne jmp push adc adc add mov push or xchg inc aam mov hlt mov jl or clc jns mov xor js cwtl aam dec xchg test out fadds sub lods xchg or fldcw shlb mov es mov (bad) es mov or cmc scas adc movsl xor cwtl xor adc dec aaa popa xor lock bound adc dec xor mov sub testl add mov xor xchg xchg push sbb sti lahf sahf scas fadds ficoml ss cmp adc loop dec dec rcrb pop (bad) jmp mov je inc test lock (bad) and inc and adc push pop aas lcall hlt push cmpl in xor or jge repnz enter cmp mov mov dec sbb movsl jnp iret cs inc movsl adc stos data16 push or cmpsb flds jp jg push std sbb mov stos push sub add sarb dec push aad pop and (bad) lret xor jecxz dec pop sbb es add es dec cld es ja (bad) je lea insl iret xchg pop test fstp adc mov popf mov xchg pop daa sbb js and dec push or mov dec out mov je mov sahf adc fwait mov ljmp sub adc inc imulb fisub mov sbbl xor mov testb pop loope or mov pushf mov sbb cmp js,pn mov or or test inc jle xor sbbl movsl imul call pop cmc fcompl jmp (bad) popa int sub mov mov mov arpl sarl cmpsb sub lock and pop or jmp in push sbb insb pop loopne xor andl stos popf push inc out outsb push mov push push sbb sbb jno insb mov movsb pushf nop enterw cmp roll movsl js arpl in cld sbb jg xor or lahf jbe pop xchg mov in xor xor adc xor stos idivb xchg jp mov adc xor aad dec adc imul fcoms inc jecxz or mov outsb ficompl fcmovnbe cmp fisttpl pop lahf cmpsb inc push and inc loope jmp dec fistp fadds adc lds push and lods pop test fcompl (bad) lret mov jns sti (bad) lret xchg (bad) mov (bad) mov (bad) and jo hlt je jb jmp cmp ljmp outsb in ret adc je cmp sbb push data16 adc push pop sar jns (bad) fcmovnb xor sbb sbb das jg ja mov aad pop cld aaa pop mov test es sub sti push jecxz sti xor or xor push out jle ljmp push loopne pop xchg hlt or xchg or mov mov mov jae enter adc jle sarb inc push (bad) and push jg jp add repnz fwait gs test mov jecxz add nop imul (bad) aam sbb icebp ljmp jmp xor pop (bad) mov mov mov scas push inc xchg xchg std pop cltd (bad) aam mov std int insl mov sbb out cmp lret or aam push add jmp sub fcompl enter push cmpsl xchg bound dec mov dec xor adc cmp adc lds pusha jbe xchg ficompl add mov add mov test cld xchg xchg aaa sbb dec movsl pop xchg lods cmc insl imul test into push imul add mov cwtl pop dec lods outsb jo inc mov jne xor jl sti enter add xor cmp or stos adcl in roll dec adc (bad) push jnp aaa sbb xchg jae imul (bad) mov shr movsb sub repz cmp lods lods clc mov jno cmp stos cs or xor mov mov shrb add rorb ds push cli stos call mov aaa mov xchg xchg sbb adc xchg outsl (bad) test sbb pop sub inc inc sahf gs sub sbb es std sbb sbb das mov xor pop lds adc jae (bad) xor shl (bad) dec xlat rorl pop mov testb imul rorl add in cmp repnz pop jecxz sbb adcl push push mov mov mov mov adc push fsubrs lods adc push je (bad) push fldt (bad) dec jbe gs (bad) (bad) insl cmc fwait insl cmc (bad) xchg inc mov cld inc (bad) push lock (bad) ret cmp lods mov lahf ret add or mov jo rcrl pushf jle xchg sub add movl or out fidivr mov insl xor xor (bad) sub mov inc jno xchg fcomps pop dec mov mov sub std enter stos sti push sti xchg pop out rorb das add xor dec gs shlb imul shl sub int3 mov xor inc rcrb add lods out pop sbb adc es pusha js pop push fwait mov mov xor pop outsb fidivrl jmp ljmp subl iret sti outsl pop nop sbb jecxz inc daa into xchg gs test arpl stc lcall pop lahf xor rcrb lock movsb jne xor cld movl xchg pop inc loope xor dec aad fisttp fsts push and sub sti mov jecxz insb int or dec ljmp pop cmpsb jmp sar inc lea test jle pop fcmovnb dec inc mov xchg inc cli outsl mov xor in cmp les mov xor pushf out inc add fldl xorl push inc mov ficom xchg and std xchg sti clc mull rclb (bad) inc test shrl pushf icebp test add lock test (bad) fwait jmp jns in push das push cmpsb dec sub popa cmp sbb adc add stos lret xor inc sbb bsr stc cmp in mov mov pop pop aam add jle scas fs testl jg das jmp dec xchg sbb scas enter add repz mov fxch movsb sar inc jge (bad) je (bad) xor mov cli ljmp dec popf clc enter std jno cmpsl test loop test movsb loop cwtl jle fwait dec push mov nop cmpsb jno rorb xor mov repnz inc or cmp add push push negl dec or (bad) fldl mov ja orl sub scas aad movsb sub add jmp jle stc cmp movsl pop (bad) mov fwait mov aaa out cli leave nop dec lret aaa fidivrl or sbb and out out insl sbb repz lret pop aad inc hlt add and sub sub movsb sub push mov lods test loope dec push pushf add or mov adc xchg add (bad) sti lock neg imul (bad) divl hlt insb pop loope jg jmp and inc sub cmp int3 sbb call in ret pushf test out or add sbb insl fisubrl xor lahf ret xlat xor imul (bad) dec stos mov in cmp repz stos aam push push pop add mov scas pop push test xchg jecxz cmp xor fisttpll les fldl and mov outsl aaa std xor sub dec outsl test or in add (bad) fidivr imull fwait test fsubrs xor pop sahf in lods in rcll sbb into mov mov adc jge out lea inc and das sbb imul xchg mov cltd gs dec bound mov pop jg dec je jmp or mov and cs cwtl lods stos push jle pop push push nop xchg dec movsb xchg mov sub jne imul xor or fstpt push popf negl clc ret popf fcmovne aad xorl popa sahf inc mov and stc sbb sti dec sub adc test insl inc in cld je scas icebp mov repnz cmp rorb cli mov popf and (bad) sbb xor test lock or xor out loop fist loop std scas sub repz or add pusha (bad) (bad) dec dec cmp pop out data16 (bad) insb in in imulb (bad) pushf negb sub cmc adcl nop sub pop cmp scas test or popa cmpsl cli mov mov je or xor xchg mov sbb lret adc daa out cld cld ret insl mov fmull xchg insb (bad) test push repz xor and jno fisubr sbb (bad) add out das outsl mov and sbb js xchg flds lret sbb rclb inc jae dec dec test cld (bad) pop repnz fildll dec add add loope xor push jo icebp repnz adc nop icebp xchg and inc add lahf fidivr cmc jecxz mov rcrb negb jmp pop (bad) repz lret nop mov pop int or and mov je testb lcall mov sarb jmp and idivb jp mov inc nop cmp mov daa dec aaa push inc shr mov and rcr and xchg pop push fldenv insl cmp ret push mov idivb jno aam adc (bad) cmp pop lods sub mov cmp xchg dec xchg mov inc js (bad) sub mov scas rorb cmc mov adc (bad) (bad) fildll xor subl insb stos fisttpl stc push dec mov sub and fdivr push xchg sbb inc push mov pop xchg xchg (bad) mov or lcall jo mov mov or sbb stc aaa and sub fnstenv sbb mov sub sbb enter pop mov fldl loope or popa jge xchg sbb add (bad) ljmp mov sbb test cltd jb inc and ss mov and sbb or enter cmp and dec add shrb and (bad) fbstp and push push dec (bad) insl pop and cmpsl mov gs push fcom mov sub call cmp outsb or divb add shrl imul mov add xchg mov mov int cmc (bad) push lods lds out pop popf dec outsb xchg push mov push push lahf push or stos imul incb out roll out aaa push sbb jo mov mov adc int3 lock fdivl push dec rorb movq rcl mov jle decb rolb nop fildll repnz int xor add sub push add mov xor dec in sbb daa inc xor and lcall and sub popa stos sub lret sbb push cld xlat push inc ret paddusw xor gs and xchg add cmp pop fisttpll xchg adc (bad) xchg mov xor xchg mov push xor or loopne jo popf shl and gs or test neg mov sbb or insl ret lret adc jg xor jp xchg adc push push push dec and dec cmp cmp sbb dec xchg push jno out lods sbb sarb out fs inc xor or adc sub enter fsubr loop mov adc out and stos mov xchg lods flds fidiv push add sahf stc xchg or push add loope call loopne shlb mov pop mov inc dec and cmp inc pop sub and jmp decl into lcall jecxz mov les std jno cmp (bad) (bad) repnz xor push ja mov aaa add lea mov (bad) adc fstpl clc aam push adc adc (bad) mov lret jecxz fmull pushf cmp fldl (bad) push es adc xchg movsb arpl sbb or and mov xor xchg sub dec mov add jno mov call and add or inc pop dec jp icebp sub test and insl dec ret and les push in jbe sub scas jmp inc xchg bound insb mov (bad) bound xchg lcall jo add inc dec push add pop imul inc ficom xor ficoml dec xchg repz test shll fwait lods test push lcall (bad) or loop scas (bad) sbb negl fwait rolb push mov sbb pop sbb jo push sub loope stc shl dec push int cmp adc sbbb add push movsb cmc movsb adc cmp push stos sub pop cmc cmc mov jg mov adc lods out lret push mov pcmpeqd push test dec in mov push or xor sahf jmp loop lcall and or push ljmp sub xor pop (bad) lahf lods or and cmp xor mov cmp loope cmp loopne rcl or div jbe lret hlt xchg cwtl sbb (bad) repnz cmp and ljmp out roll in push iret sub in stos mov cmp adc mov cmp xchg adc ret mov iret xchg xor aad adc ffree out xchg iret lcall cld xor (bad) push adcl inc stos jae mov sarb push sub stc cmpsb out outsb mov jecxz push movsb popa mov adc lcall sbb js sahf or imul pop test pop sub xor test sbb mov add ss into and push add mov orps jg mov jnp mov ret dec dec inc nop mov add test imul push adc and push test data16 scas dec push cmp popf cmpsl stos movsb lcall mov xor outsb sbb mov cmp (bad) in inc sub pop sbb pop push arpl rclb (bad) pop call dec movsb xchg sbb hlt neg cwtl sbb pop pushf jbe cmc lret cwtl add mov jne lahf xor outsb (bad) fcomp mov (bad) xor jne imul in xchg jns gs mov mov pop repnz dec sub (bad) repnz adc mulb mov push xchg nop je (bad) xor cmp insl cmp decb push mov xchg mov add mov jle lret rcl xchg notl popf es hlt lock adc and icebp and inc or into jle outsl les (bad) pop mov data16 and add xchg fiaddl int pop xor repnz fdivs das insb or pop mov cmpsl sbb (bad) insb and xor xchg lret insl xchg mov xadd fiadd inc jns inc ret in cs and (bad) push sbb xchg cmp cmp mov sub js mov mov fisttpll jb pop jle jae imul cmpsb inc mov cmp pop gs or enter add xor sub mov jne repnz xchg push aaa scas (bad) sub adc mov insb cmc add into adc jno mov mov repnz push xor jnp cmc mov rcrl xchg xor out and inc int3 enter dec mov fsubrp movsl push cmpsl cld data16 and sbb jno xchg mov fsubrs add dec add push insb push or movzwl stos mov inc mov xlat cmc into xchg insb cmp mov lods lock add xchg fidivrl pop push leave adc rcll adc fsubs rorl (bad) sahf mov mov mov fistl repnz sub xchg dec fs sti mov inc xor ret inc pushf pop mov test call pusha pop sbb std lea and adc dec adc shlb rorl stos push and shlb or out push sbb sub stc stc mov jmp fcompp movsl sbb in cmpsl xor scas sbb push jbe mov cmp jo,pn sub imul push add lahf push sbb sub push int jp jmp pop in iret cmpsl mov lret sbb push aam (bad) cmp inc fs mov xor nop mov loope arpl jg scas out dec cmpsb stc pop xchg test sbb cmc jns ret arpl pop push jo push cmc out insl push jae das and cmp xchg xchg je jmp cmp repnz push xor stos mov mov nop xlat jb call xchg jae sarl pop call xchg fistpll inc orl test ret inc inc push loope mov cmp xor out stos mov cltd cld xchg pop push mov iret imul xor aas and push mov aaa cmp push ret ljmp mov ret sub nop add call lods leave fistpl xor mov xchg jecxz (bad) fdivs add mov sbb out add out scas xor scas and inc jl adc lret fldcw cmp push xchg in loop (bad) lcall pop enter cmp scas mov (bad) mov and loope cmp stos pop notl shrb push rorl mov xchg cltd push mov and pop sub test xor add and push xorl jg add andl add or push pop and test inc mov jo mov xchg sub std rcrl or sub ficom mov out mov inc pop mov cmpsb insb mov adc pop add pop movsb icebp or mov out push movsb insl jne gs pop mov mov jb scas pop out xor adc mov jg mov mov xor gs push adc insb out (bad) leave sti rcll outsl daa or stos idivl lahf or add sets popf nopl out mov mov (bad) xor mov test adc mov inc aas cmp jne or jl push stos hlt repnz out or mov and sti push lret (bad) mov mov xor out inc test notl xor (bad) popf loopne jg push adc jns jmp insb (bad) push out lock cs cmp lret sbb dec mov out sahf shl mov dec mov xchg cmpsl push shll jb adc dec add stos cmc jl jg adc and jb cmp mov mov xchg push leave outsb and test addr16 cmp fidivl andl mov sarl jmp sub add je andl loopne mov (bad) cld or int3 scas inc mov sbb lahf cwtl in call push xchg stc imul inc call fucom (bad) aad pushl sub sbbl scas cmp iret pushf cld aam aad (bad) iret mov scas cmp stc mulb lret lods pushf mov dec pop flds pop aam ss out js and inc (bad) xchg push data16 cltd (bad) mov fisubl add int3 dec fildl (bad) jne data16 cmp fbld add stos jp mov jmp mov imulb mov xchg and adc insb jp dec in mov pop (bad) pop imul push dec adcl (bad) fiaddl lahf icebp into into push lods adc adcl cwtl subl mov (bad) insl mov xlat sbb sbb outsl dec xchg dec inc repz into pushf mov shrl jne jp test cmpsb rcl add push cmc or int pop push sub test out stos jmp lcall int or cmp arpl rorl xchg clc inc jge xchg mov jb sub cltd and and xchg jae and pop cltd inc lcall mov mov (bad) mov fimul lret add je jmp in cmp (bad) les lock or ret push adc cmc inc jnp jecxz in in push adc cmp and shrb add icebp cmpsb mov push icebp jnp jae in adc push pop dec cmp pop mov adc lret mov outsb cltd adc lahf jmp sbb fistpll idivb leave lahf movsb pop divb test les lea dec mov je rorb icebp jmp dec fimul rcll loop sub push fdivrs cwtl inc inc mov mov pusha jecxz in pop mov inc and jle push fsubl icebp mov mov scas cltd adc jmp aas mov adc cmp push cmp inc std push mov and movsl or mov mov mov cmp aas sub push lcall inc aad pop leave ljmp mov xor outsl cli addr16 jl pushf gs loope mov cmp pop test pop inc fwait test insb dec mov jno scas cwtd test imul addr16 js inc dec and xchg xlat pushf mov sbbl gs test (bad) fistpl loop pop enter js add in mov mov adcb in jl addr16 and cmc or mov sub sahf sahf ja test insb mov and (bad) sub xchg and jmp stos xchg jbe idivb pop in orl sbb sub cmpl sub std arpl jl xor sub imul sub lods fmuls mov popf out mov pop inc rorl sub fcoms dec dec mov or push inc inc mov xor aas sbb addr16 (bad) mov out int pop adc add pop ds add fmul push int3 inc call jmp dec adc notb int3 or add ja rorl out fsubr adc pop and loope cli push jl mov std test stos test cmp fist push add push pop les hlt mov into in (bad) aam repz push rorl lahf iret mov sub ds inc mov add aam repnz cmp in xor (bad) xchg inc pushf je sbb add jmp stc fbstp mov jns cltd repz pop pop mov fs jae out sub xchg sub cli enter loop and cli int3 mov mov sub add mov jp push adc fisub js mov inc clc lods iret xchg (bad) insl pop push inc and jne fisttpl je adc nop dec mov push and add push mov push fidivl es cmc dec popa lods movsb out arpl and test mov jge leave sub push iret jnp mov jg leave mov cs xchg jg mov repz xor insb inc add mov mov add insl add imul sbb popf ja push rorb mov sub js push mov or xchg xchg idivb testb xlat push mov je pop cld rorb and jg mov jne mov inc stos (bad) jmp sbbb lret xchg cltd adc xchg mov sbb fisttpl mov fisttp fldl jp dec jmp movsb int arpl inc sbb add mov fcmovbe ja scas arpl pop mov jnp mov and xor add xchg imul insl sub sti jmp jp xchg pop xchg fs cwtl mov call (bad) dec dec jge scas stos push pop inc mov mov lret inc fbstp lahf fcompl push mov arpl lock lahf xor aas push pop push les or or test sbb in lock dec aam cmpsl enter loope aad (bad) cltd addr16 mov pop jae out fcoml adc mov iret call mov mov popl (bad) cmpsb addr16 jle popf or jg and aam test je lahf sbb or dec sub push sub jp lret enter mov ret inc or cmp test xor push lret and scas stos mov aad scas adc sarb cmp xor (bad) add in icebp xchg ja cs (bad) outsb imul lods call lret imul stc xlat out jae in and jo push fistpll cltd adc push std push jp inc xor bound push jmp push aas loope sub mov mov sub mov mov lods push outsb scas test xchg aad movsl jge or clc cmp cltd sbb sbb push sub repnz lock mov pop je push jne pop dec jns ror fistpl ret mulb cmp stos adc add outsb cld fs add push test add imul mov dec nop rolb cmc push lcall add lods fs and aad xchg or test or rcl ror jle push jecxz mov (bad) or daa jp addb sub and int fs mov iret xchg inc and cli xchg aad dec test xor xor jle or scas lds fs and std in mov mov es call pop jne sahf (bad) mov mov xchg imul stos cmp shrb add ja mov jns iret mov xchg jns insl sub push fcomps mov dec mov and push shrb lahf jns popa imul inc adc sbb scas lea inc mov jne xchg push in test push jmp dec fistl adc jb or aaa adc int movsl add inc push mov movsb push and mov sub loopne and mov repz loop xchg ja mov out scas dec pop aad insb bnd insl cli (bad) jbe cltd fldl add loopne jns sti xchg push push idiv pop and dec sub lahf (bad) and and cmp jae inc (bad) in inc js mov stc dec xchg and add xchg inc mov mov insl int3 (bad) and dec test and cmp out jnp in test daa cmp xor outsb clc jo pop pop in or xchg mov mov jle jno,pt and jge jp incb or push fiaddl nop ja popa mov jle dec rcll rclb (bad) jo push fs sub fldenv push or fistl nop cmc inc arpl pusha dec xchg xchg insl inc movsl sbb repnz push dec xchg addr16 lahf das dec xor popf xlat inc adc mov faddl jae lret iret loop dec pop jns inc sub lahf arpl xadd dec out shrl sbb jl sub (bad) enter mov mov mov adc and iret cmp sahf sub das mov inc pop push dec cmp scas in into adc jbe lahf adc mov and sbbl push dec jns sub dec ret into (bad) (bad) mov fnstcw aas fimul (bad) in inc adc mov pop dec adc shrl imul rol pusha pop xchg pop cmp push xlat sbb lahf insl sbb fwait cld subb ror xor jl ljmp test dec pop and clc pmaddwd ljmp popa sbb lds mov je pop pushf jecxz (bad) mov mov and sbb inc inc imul xchg insb adc mov xchg mov loopne fidivrl daa in xlat out loope jge jg push aam mov mov insb mov stc test mov inc jo mov mov inc clc add add or lods mov jae jns push bound rorb cmp outsl test (bad) bound add sub cmpsl mov popf sbb mov mov lret rcrb inc aad mov (bad) cmpsb cli arpl or xor mov dec sahf imul imul fistpll cmp inc adc lcall setg lea rorl or add xchg (bad) ss cwtl das loopne sbb out ja inc add xor and inc popf test cwtl adc jns cli ret jbe push das test cmp popl loope ret push sahf or and arpl dec jl mov xchg in sub jge ja test jl xorb sub jno and push andl mov jmp cmp cwtl imul out add lret sbb xchg call sti pop mov shrb xor movsb push lods dec out aad (bad) out adc push mov sub jmp xor (bad) cmp jmp cmpsb aam cmp jae dec or (bad) rorl mov mov movsb cltd movl in fwait es and mov ret imul js cltd pop adc pop cs andl test (bad) punpckhwd pop sbb je pop add lret and sbb std rorl ljmp and mov pop fs xchg mov dec jmp mov enter imul mov rcrl lds or in cld icebp adc xchg jmp (bad) aad dec jae imul out or fs push popl fstps in pushf lret inc lahf and push lret push ror fisttpll cmp mov xchg add lcall hlt loopne push sbb lods fcoml popf and ds loopne jp dec and enter outsl (bad) hlt cld inc dec ror adc mov dec adc jbe xchg pop jne fadds jae cmp loope out xlat mov inc push fsubrl jle in iret call ljmp push daa jl xchg xor int3 es cld inc pop fstl inc (bad) cltd mov lds dec or sbb fmuls pop sbb mov add jae lea push ret jnp add mov subl inc mov movsb mov mov xor jmp add test lods xlat pop pushf xor in icebp xor inc shl xchg pop or jp jmp dec ss add inc cmp lcall arpl (bad) stos xor fnstcw add stos mov mov daa cmp and pop sbb add divl mov mov jo xchg adc sarl adc and mov sarb pop std add mov lea sub lods js imul test inc inc add and mov pushf mov and inc mov test add pop call or jns fdivp loope inc or xchg ret adc cwtl das aad loop xchg jno mov dec lods pop jae or inc mov call jmp jbe repnz and inc sbb cmp lcall mov xchg sub (bad) mov sub icebp aaa mull mov ljmp scas lret fwait push cmpsb outsl rcr divl out xor xchg fldl enter and (bad) pop loope in and enter mov mov stos pop pop cmc sahf cmp push imul sbb sbb cmpsb mov mov aam negb or ja test mov mov jne outsl ret jp dec popf fs jae bswap lcall out cmpsl add test pop inc popf xor stos add mov (bad) xor icebp fcmovne dec jecxz stc repz adc sti leave (bad) repnz lret mov and push mov mov mov dec test or roll std mull movsb test mov loopne inc ss insl sarl pop cltd and mov fiaddl adc cmpsb mov sub popa imul push jle lret xor cli fadds (bad) or rclb movb (bad) pop sbb fnstenv dec hlt dec fucomi jge jbe mov bound dec (bad) (bad) mov rcll repnz loopne or dec (bad) pop iret mov jl mov out ret movl aad jle addr16 push fmuls jp in pop sahf (bad) adc dec cltd push lret pop push loop xor hlt aam mov or ret mov das cmpsb cmp fnstcw cld aam lahf push push xchg pusha push mov (bad) mov adc mov push stos js jmp test shll mov pop push xor jbe loope xchg cmp mov mov stc xchg jecxz rcrb push pop jg or in dec push fwait and mov adc xor mov popf jne dec mov mov mov jb popa cmp sbb jg inc loope push inc out mov mov pop mov xchg pusha insl pusha shlb std jle imul sub and cmp mov dec ljmp xlat adc mov je (bad) ljmp fidivrl pop push push cwtl rorb pop mov xor jne push loope mov loop aaa sbb add popa cmc lret mov test ja sbb dec cmp mov popa in mov call mov bswap int int3 aaa lea insb psraw vmread jl pop and push xchg imul lret inc mul insl xchg jmp and adc and or sub jb pop into push dec ficom pop icebp sbb sbb (bad) aas mov sbb and and dec stos jo sbb fidivl (bad) sub and add lcall es mov cmp mov sub in dec testl cltd pop int and fidivl ret ljmp pop jno add loope (bad) xor cmc pop lock lods (bad) in inc shlb push ja out jno in mov nop xlat notb fldt repz test in insl movsl test dec lods in push pushf test out lret fcomp jg adc mov aam mov outsl and std xor jbe push sub inc int3 mov gs dec vmovsd pop in sti clc mov push xor push mov mov xor stos push shr fmul shrb mov push mov out push jp arpl leave jno jmp lods enter mov js (bad) das addr16 lcall mov (bad) scas test pop cltd cmp je pusha mov insl pop adc faddl fisttpl sbb scas pop or popa pop movswl jae push leave pop sbb daa ja fistpll inc sbb mov movsb in pop mov mov fsubrs and aam lds test inc cltd xchg insb mov shrb (bad) xor arpl xlat ljmp (bad) mov jno les adc stc pop cltd cmc das lds xchg jecxz dec insl mov loopne int3 stos push mov push pop addr16 popf inc xlat lahf xor nop loopne cmp xor lds sub pop mov xor add shlb je or xchg adcl xchg push mov pop fist inc add cltd and mov and or adc leave mov dec sbb out xchg or stos aaa icebp mov jnp mov xorl mov test mov cmpsb movsb insl push cmpsb stos (bad) icebp inc insb mov pushf adc xchg sub std xchg push ret les pushf inc dec mov clc xchg sbb ljmp test push int3 xor inc jns and mov mov mov lock fimull (bad) xlat popa int das in and pop into mov sub or outsb (bad) in pop aas xchg scas sub mov sub lods pop pop sub ret sbb (bad) mov mov cli std daa clc xchg loope mov xchg les (bad) sbb cmp pop inc mov mov orb inc into jae das lret xchg repnz lds out aam jp (bad) stos jnp sbb repz cltd push jns,pn mov je mov mov mov lahf test int aad xchg bound insb adc arpl jge dec les aad movsb test xchg and sti jne pushf dec je stc mov push jnp xchg inc mov popf lock lea cmpsb dec fdivs xchg mull outsl fistp jmp push arpl repz cmp stc or xchg sbb dec js push rolb jle je adc jge gs out arpl rorb dec shlb orl adc cmp cmp lea and gs leave out push push imul and adc mov pop les (bad) shlb aam cmp push xor (bad) test test mov xor add pop jno inc (bad) xchg jo int fistpll mov jle mov jge jl pop orb pop ja lahf jle pmulhuw xchg mov mov btl cmp lret imul sub rorl fisubrl mov xchg add rorl out aaa faddl testb and and mov add push pop xchg lds mov scas inc mov lcall movsl mov lock xor mov (bad) (bad) aad or ds adc lret jmp xor ret add pop jns icebp insl mov fnstenv jecxz mov fwait inc loopne into dec test and mov sub cmp cmp sub sbb xchg cmc roll pop inc js jne aam xor out xchg jbe pop data16 test cltd pop dec sub imul stc pop rcll adc cmpsl icebp stos mov ja adc icebp pop mov loope imul lcall sbb mov xchg in adc mov (bad) sahf mov repnz fadds push outsl insl movsl insb adc mov mov mov inc scas (bad) cld lock xor mov add aad xor rcrb out cmp outsb leave aad dec adc jns pop divb aad mov push sahf add inc dec dec stos scas sbb movsl ret (bad) std (bad) pushl sarl sti jecxz imull xchg outsb push push es jg inc add jno jmp adc mov adc push pop and pusha pop sbb mov add sbb mov jmp jle (bad) push dec js inc mov fmuls push sub clc dec clc mov scas mov enter cmp imul adc insl cmp mov cmp xlat out ficomp inc add roll (bad) (bad) jge (bad) mov inc aaa adcb xor cmp and and bound loopne jge add mov mov cmpsb hlt push xor pop cmp cmp push pusha jns mov ds mov pushf (bad) jae negl push aad xor mov push scas insl push mov add sub jb mov or (bad) sbb xchg mov xor (bad) loope test or sti out xchg xor fs aad pusha sub xchg adc mov fsts ds cmp mov (bad) mov js add adc pop pusha sbb mov out xchg scas xor mov sub clc dec add int3 adc ljmp inc mov jnp fistpll jecxz jle mov mov popf (bad) (bad) addr16 js or (bad) sbb mov add repz repnz in movsb rcrb cltd push push cwtl mov xor pop fisttp mov add fisttpl sbb jge inc inc mov cmp jmp mov in pop data16 pop push nop jecxz and setns mulb jbe pop test dec xchg jle dec push add jo jecxz dec pop or negl and adc cmp insl dec jae js outsb mov mov jo mull cmpsb scas jbe jns cld sti pop xor add imul adc and cltd addr16 add loopne inc in ficomp sub outsb clc add (bad) iret cld pop popf push mov inc fldl2e add adc test inc (bad) insb (bad) pop jnp syscall jp movsb sbb les pop mov adc lahf inc add popa sbb xor xchg inc inc xchg loop ret dec add xor xor xor stos add xor imul and add push in mov cmc int3 outsl jnp cmp jo dec mov int3 lret negl mov mov (bad) jp cld inc mov (bad) gs rorl cmp dec fwait pop mov pop add or or jl mov mov and add push pop and inc out push lahf gs add sti lock jo dec xchg sub and push in pop jge (bad) bound and leave out andl dec push xor push cltd aas mov enter aam cld mov andl adc dec jge dec cmpsb pop jb add dec push popf mov xorl in movsl ficoml imul pop icebp test rorb add (bad) and loop test dec (bad) inc int insl imul (bad) fildl insl jno loope lock inc hlt rol mov jmp adc aas sub jmp jne xchg sti ds adc aad pop sub test jl cli xor dec xchg leave dec and jg test jno pop psubb lret addr16 pop sub cltd mov ret icebp mov inc (bad) dec stos xor fstl enter fldl add mov cmpsb sbb pop or pop sbb mov jnp lods push (bad) dec out jg add jg fwait imul fsubs jbe pop add jge xchg into rorb sub push push cld sbb (bad) arpl pop (bad) pop in cwtl push dec insl lods into roll add mov mov push daa rcrl xor or in inc mov imul jae cmpsl stc pop (bad) jne cmp mov pop xchg or aaa sub sub mov mov and aaa or pop insl imul push (bad) jge xchg bound repz enter jge jmp adc mov mov mov adc push xchg xchg add ss mov leave inc fdivs dec int aad mov pop cs (bad) jg lahf sbb fild sti sub (bad) in lods mov push push ljmp xchg adc aas lock jb pop pop dec add xor enter push das xchg cmpsl mov sbb imul fwait inc inc push pop pop sub data16 je sbb stos loopne test loope sbb jnp and dec aas inc daa js out adc mov jno mov loop dec mov movsl in adc push aaa xor and ficom das add jbe xchg stos push rcll mov test fsubl mov in pop jb xchg push out fucom aad sbb sbb push adc sub sbb lfs je pop xchg punpckldq push dec je lcall aaa cmp mov stos loop daa mov cmpsl fiadd fstps shrl mov insb mov stos imul aam push rolb and out lahf (bad) in testl xor int3 adc repz jae jp jb jne rorb psrld test jecxz shrb jbe std and scas stos pop ficoml cmp inc mov out ret sub in or stos mov or iret in adcb push dec mov (bad) movsb mov in add sbb in dec cwtl xor cmc and fs push cmpsb inc inc xchg sti rorl lcall push loop and mov and xor pop imul fimul push fiaddl sbbb sbb jg out push adc fmuls sub repz je lods pop (bad) sub jnp daa add mov jae sbb loop call repnz sbb insb mov and adc mov cmp jmp cmp (bad) mov andb lds push test xor pop lods test and lock adc mov fcmovnbe clc mov dec jo mov push in out or mov enter jle pop pop outsb cmp icebp cmp in jae mov dec push mov in pop lahf and mov enter int and outsl mov loopne cmp mov mov sub rcrb sub sub adc or mov insb je add fwait je cli int jmp in popa lcall mov add dec or ss push pushf and jbe lcall jo jmp pop and or add (bad) (bad) stc add sub add jae hlt adc ror leave mov icebp sub sbb pop mov adc mov push xor mov call arpl iret push push out cs popa aas callw std insl flds add aas scas jge xchg mov mov loop lds and (bad) sub cmpsb mov xor push (bad) cld xchg adc (bad) shrl loopne and adc shr mov or cmp sti mov jmp das xchg shrb jns into sub int mov stos imul push lods sub mov sbbl les or pop in repnz pop mov push mov cmp stc jmp jnp xor jb and into mov in jne das cmpsb in cld fldenv sbb gs addr16 add sbb or aad test das lahf lret nop xor leave sub cmpsl test jecxz imul lock mov ss out enter push popf add ret xor test data16 mov mov push mov jbe sbb sbb inc fildll cltd daa fsts cmp icebp mov movb xchg outsl iret (bad) lret rolb pop sub xor adc aaa push jb adc lock jb mov mov fmuls cmp jg clc cwtl mov sbbl mov cmp adc pop fstl push jg push pop or loopne lock pop mov jbe mov jno leave pop mov inc push push aad lret and icebp ss into cmp push jns fimul sbb popa in mov inc dec test mov arpl std pop mov iret out mov fnsave pushf out push sub cmp fsubrl cmp sub cwtl into xor xchg arpl sub jmp in ja cmp xchg xor repz imul loopne sub iret mov rol or mov outsl mov push mov pop push adc pop xor mov xchg jnp push xchg or pop popa cmp push adc pop mov scas sbb das xlat in out lds cmp loopne pushw xchg pop inc add insl lds ss (bad) or outsl ds xchg push inc and rcll xlat (bad) pop pop sbb fwait out ljmp lahf xchg push fistl sbb out test mov dec call pop inc dec dec adc cmc or xchg int stos nop pop add test push insb sbb inc pop or push jecxz xor jne loop cmp mov popf dec xchg idivb mov fwait pusha ficompl sub and mov push push loopne das int3 sti ret sub (bad) divb jns mov dec sbb mov adc inc dec mov adc add out enter and xor inc push add add sbb daa pop loop insl xchg (bad) pop pop (bad) pop cmp cmp jp push aad adc leave push or sub cltd mov push mov mov mov insb mov test leave test fucomip xchg or rorl lretw add mov roll ljmp xchg into mov lods mov dec clc push js repz rolb mov nop inc lahf in or (bad) and and int3 mov leave add std (bad) xor mov adc arpl adc ficoml lret unpckhps sbb scas dec out pop jmp imul cmp inc jne outsb loopne push es es jb shrb aam cmp stos cmp push je outsl push and or (bad) mov xlat scas pop andl dec xchg aam cltd adc adc clc cld jg int push out add sub loopne loop adc ds add inc push adc or aas jmp rorl adc add mov (bad) sahf not xor inc insb xchg in mov fidivl xor mov ret or sub loope push addr16 jbe arpl mov cld push jo outsl outsb or xchg pop pop dec adc fidivl and rcrb xor sbbl add leave mov fcmovne cli sarb sbb test fldl cmp mov movsb pop (bad) cmp mov popf mov test cmpsl loope lods mov lahf push (bad) popa stc inc push in insl je fnstcw loop test (bad) fwait aas pop call pop add push es aas pushf push dec pushl fistp cmp lock sahf inc pop test jnp int3 idivl cmp push popf dec fcmovb popf push mov test cmp push imulb fbstp and sub mov outsb (bad) mov loopne cmp mov pop loop mov xor mov roll out mov jecxz in cs fcmovbe push pushf cs test mov repz inc fs sbb xchg sti or xchg add mov dec movsb mov jae mov imul addl faddp dec lods nop mov out incb enter push outsb mov adc (bad) popa mov (bad) mov insb cs data16 ret push dec mov push mov and inc mov push lods mov push aaa (bad) (bad) mov fcom in sbb xor cmpsb pop js push adc xor lock gs (bad) cltd mov lcall fs xlat jmp in sbb aas and xchg je xor pop inc push repnz push sbb sbb and push pop aam dec mov imul inc xchg dec (bad) dec push aaa stc arpl add mov arpl daa xor mov data16 mov int repnz insl js (bad) popa (bad) ds loopne jno repnz pushf in add rcl popa cmpsb nop mov pop add bound mov test jbe pop icebp scas xor out adc ljmp dec in xchg test (bad) add int3 outsl addr16 popa adc lds out enter and jo int3 stos lcall stc rolb enter mov insl cmp push mov mov push or in sub or push lahf (bad) mov pop xchg dec cmpsl mov mov inc jbe add inc outsb mov and or jnp cmpsl stos loop movsl or jle dec and loope pop lods mov xchg enter and sub push push mov into scas aad mov xchg imul sub ds jne,pn mov ljmp xchg dec movb jle sti and imul sub and ds pushf fs and push fsts sbb ficomp insl or (bad) int3 pop movsl (bad) push lods lret jl or sbb push mov mov xor lods dec jge (bad) out into les std xchg jbe je rcr test jbe out xlat sbb lahf dec ret (bad) out cli imul (bad) in or cwtl int3 and in dec push je adc repz outsl mov sub cwtl stos mov dec mov xor add fbstp hlt sbb lods pop into and insb push mov out pop cmp insl xchg or sbb mov imul cmp ret xor mov (bad) xchg (bad) jecxz xlat cmpsl add xchg push cwtl push fisttp pop fldl lea push scas cmp pop fcompp and fdivrs sub inc pop and sahf jo in insb lcall lods pop outsl aaa es movsl pop fmuls xchg stos sbb sbb pop into xlat jns mov (bad) pop sahf movsl mov mov xchg lock mov ficompl data16 cmpsb mov insl adc mov out inc mov roll out test dec call mov sahf adc cmp pop xlat push int jae enter icebp jmp fnstsw xchg (bad) cmpsl inc push scas xchg inc in xlat and add or test pop sahf and daa and push call mov mov mov cmp fisubr ret adc into lods xor in repnz lds mov sahf idivb jp lea fisubrl fs loope dec sub cmp sbb push int3 repnz imul jg ja incb mov int fs loop mov add jmp mov leave dec push adc es jno pushw jne fcoml ljmp mov rorb rorb (bad) xchg movsb call mov jl rcll iret mov adc mov fnstenv dec push pop sbb jmp pop inc mov pusha nop frstor popf (bad) jno iret cmp sbb shll imul aad test sbb movsb clc cmpsb inc mov adc xor xlat ss cld push xchg cmp (bad) lcall out pop in xchg (bad) out (bad) ljmp xchg lahf inc lods out xchg iret nop add xchg inc sub mov arpl cmp or or push clc jns fstl scas cld repz mov sarb test dec loope jg mov xor push pop hlt or xchg cmp inc and mov sbb pop movsb in je push sahf and stos lret add enter add sbb daa hlt ljmp lahf sahf jno cld ret sahf (bad) movsb mov or pushf or imul jl clc repz mov icebp xchg sub (bad) ja pop fiaddl jge bound add adc (bad) xchg (bad) cmp cmp sbb int3 je cmp add jo cltd sbb and pop (bad) ds in jle arpl je xor test sub decl jo mov (bad) out in pop fisttpll ficomp jmp fdivrl xchg ljmp pop sub sub add in push mov push sub push data16 repnz jl jle test lret mov les dec (bad) mov pop in dec not cmp loop adc sbb (bad) sbb test jl sub mov mov dec push and ret cmp outsl sbb popa jmp in in out dec pusha add jg,pn mov aas lahf dec mov xlat mov movsl mov sbb jle jge mov xchg jmp stc cli jo or xchg mov mov scas add lcall add sub loopne scas ja cmpsb sbb out cmc pop cwtl roll fnstcw scas test lods (bad) call pop outsl mov in or cmc adc cmpsl lods (bad) vaddsubpd pop push mov sub xchg iret das sbb aas jg mov jnp dec sub imul adcl and inc hlt jo es les dec ja push mov rcll sti imul lea mov pop lea push fwait mov gs gs loopne,pt inc mov popf xor idiv frstor shlb adc inc sbb mov jl lds inc imul adc movsl shrb int or scas mov dec jnp fidiv or lock sahf into rcrl dec mov (bad) js cmp pop repnz arpl int arpl push add movsl jo lcall inc mov sub jo and cmp push mov and outsb lods sub inc xor sbb lahf jnp mov jbe pop outsb push pop imulb frstor (bad) and pop in sub call dec popa shlb jecxz lock push clc inc mov ds xchg outsb inc pop (bad) mov and in push adc dec pop sub das or cs loop lcall faddl jne incb ds pushf je sbb pop mov mov mov das stos loop sbb xorl inc adc lret mov inc aas fwait pop dec shrb fimul mov call xchg mov push dec addl (bad) imul and (bad) xchg into or push pop sbb into add jo call out (bad) inc idivb sub bound mov cmp lods jecxz arpl in adc mov add or clc les ret decb (bad) sub jp shrl xchg xchg popf repz jnp xchg lcall pusha dec cld inc (bad) mov mov (bad) mov movb or fwait and lods data16 (bad) xchg ret mov push (bad) repz divl (bad) lea les cmp nop cmp dec sub lahf cwtl gs lock outsl mov loop icebp sub mov mov jae dec mov into or scas pop (bad) sti adc idiv dec or adc imul adc push ds in xchg sub int3 imul test fnsave xchg xor int cmp outsb mov inc pop sti add (bad) frstor je mov jp xor and add pop (bad) xor xor xchg test (bad) clc iret flds fstpl imulb push mov outsb inc jge mov daa lret and pushf sahf and outsl call daa dec and std pop push mov cltd rol push imul movsb and push push cs ja jae (bad) push int3 test bswap ret addr16 xor loop mov outsl stos mov outsl sbb outsb inc movsb cmp adc pop test inc popa cmpsb sbb rcrb and lret push or std shrl imul into out xor test adc cmc xchg repnz jb outsl jnp inc int mov sub mov xchg clc popf in into mov scas lods inc mov xor popf pusha test push lods (bad) mov in or into xchg jnp in or outsl fcoms (bad) pop lea scas jns rcl xor movsl movsl adc push imul jne loopne int icebp in sub jne inc and jo mov dec movsl (bad) or jmp test dec jne leave xchg (bad) xchg jecxz cs les cs dec push or mov les pop test (bad) jg jge scas aas sub dec mov mov jle mov sub in mov mov mov inc sub mov bswap test inc cmp or push popf dec pop enter mov pop jmp dec jl pop es in les dec fstpl jmp mov add or push in movsb stc pop ljmp or (bad) jl sbb push ret and test sub sub adc outsb cmp and std in fiadd pop jnp sbb xchg push fmuls mov pop cmp pop or adc mov es mov dec ja mov push sbb call hlt and ret xlat mov mov repz pop mov and cmp sarb pop mov or lds sbb cmp jecxz inc mov lods roll pop and in mov add jns addl je iret sub mov push and fstpt sub (bad) cmc insl dec mov nop mov pusha cmp and call mov movsl stos jp push sbb add in ljmp pop mov outsb pop data16 (bad) lea xchg xchg fidivr ljmp jo mov xor ret cmpl xchg sub sbb outsl inc int add lods dec xor loope and xchg (bad) jmp cld sub mov insl test lock add or sbb sbb js sahf fsub in or (bad) or gs into lcall loop add cld xchg inc popa inc mov sub sub mov rcrb mov mov lds mov add popa fistpll rorb sbb pop loopne cmpsb jae sbb sti out jb dec pop div int3 jmp dec lahf aam fwait push push fstp inc leave fsubp (bad) iret inc or movsl add movsb mov cmp test hlt jae test dec mov jae insl pop xchg push adc in cltd in frstor lods notb fwait int3 push and testl mov cmp cmp mov push cmp fldenv loope mov or push ss (bad) and rcll inc into lea sub mov xchg cmp lret mov and out add aam xchg mov push scas loopne mov pop pop cmp lret cmp cmp cltd add call cmc cmp js pop movsl jmp mov mov inc pop adc pop (bad) fsubrs and dec sub shll or ljmp js rcr xchg ljmp xchg adc sti cmpsb and int3 jbe in push jno (bad) idiv cs into aaa sbb pop fidivl das pop rcl mov inc jno pop and cmp cmp pop push imul ss sarl and pop sub (bad) jmp cmp jg pop outsb cwtl mov jo cmp in test cmpsl aas push or add cltd inc (bad) cld mov call hlt sub xor dec xchg cmp lds push mov out (bad) mov jne dec loopne push sbb fs nop push in imul sbb insb (bad) fnsave std repz fcoml test jle mov mov int test xchg mov dec jp pop jp xor mov inc add push pop subl add pop insb lock pop (bad) adc leave xchg out xor push sub int scas insl cmp (bad) cmc mov mov xlat (bad) jb jo dec mov inc mov cmp divl mov jg jne out and imul push jge call movsb shr dec es in inc sub inc insl fcomps fwait inc nop mull repz pushf and adc enter mov rep xchg popa xor sub leave subb push negb movsl mov inc pop push cwtl loope mov aam ficoml mov in (bad) aas sbb sbbl sub jns out mov popa (bad) into jo,pt js lret (bad) push adc popf jnp sar mov pop sahf test inc or fdivr pop rorb jb dec pop dec test (bad) mov (bad) cmpsl pop xor movsb xchg test jae repnz xchg jae fildl ja jmp jns (bad) sbb in push xor popf outsl pop in dec or and mov adc bound fildl iret ljmp out ret fadds fsubrl in das mov inc cli shrl in sbbl sarl xchg jmp mov mov push mov adc popf incb sub pop push push negl stos fwait adc xchg xlat outsb sahf imul out jo ret dec (bad) push fnstenv ret scas into jo clc add into adc dec push pushf scas jne sbb pop mov jle mov xor push popf orb cmp or dec fistpll xchg imul fidiv imul ds frstor push (bad) xor mov xor fwait imul dec or mov (bad) stc push mov pop sub mov call mov xchg mov push iret cld int lods fucomp sub pop xchg int3 or push xchg pop cmc add into cmp add in mov lea push ds sbb cli push cwtl mov xchg mov push popa jae xor (bad) incb jns cmpl push clc or xor insb call mov ss adcb test push rcll aaa aad lret mov jbe xchg repnz out stos ljmp and xor add pop movsl cmp push pop mov clc rclb inc mov xchg aad jbe rol mov pop xor mov stos divl xchg int3 add lcall fisubr xor jg mov test lcall push cwtl xchg mov mov in js gs fidivrl push push leave je flds add mov lods js imul cwtl fdivs (bad) mov addr16 add lods imul cmp and lods cmp orl imul inc adc pop add ds dec cmp pop pop ss sbb and fldt xor sub shrb test iret xchg insl or outsb and xchg lret sarl push jg fs mov mov pusha stos push pop push int ret inc adc inc popf or xchg xor dec arpl sbb iret repz (bad) repnz hlt mov stc in push cmp sub ret cli arpl pop loope sub cmp pusha cwtl mov ja mov and aas xor push cmp add mov addr16 imul pop outsl rdtsc jge (bad) clc sbb jge mov sub mov jmp into cwtl cmp and adc sbb push or nop cmpsb mov inc lods jae out pop inc mov xchg icebp cmc cld aam insl jo cmp jp jbe cltd repz xchg or push pop movb mov xchg stos (bad) stos mov pushf call mov mov adc jmp ljmp and jmp loop xchg scas xlat out mov jp (bad) jp pop clc or dec js cmp bound fistp js scas mov add cli (bad) ficom cmp add xlat sbb arpl andb push mov inc sbb dec popa pushf inc push add and in mov mov or dec pop mov mov xchg dec or add or xor popa sbb data16 stos outsl add test ja dec lret jbe sbb mov cwtl imul in add mov xchg test aas hlt dec inc inc mov rolb or push fsts adc cmpsb scas xchg jnp jl xchg push imul push es sub and jl dec mov ds (bad) ror dec jecxz shr xorl pop shrl scas loop jb lret scas jl (bad) inc push pop fwait cmp fsub jno stos pop sub cmp pushf arpl jbe icebp mov into jmp test hlt mov call cmp xor dec popa (bad) jne repnz fs leave jns push cmp rcr bsr cmp (bad) jbe ja xor adc lds jne pusha xchg fsubrs add test es (bad) call adc pop les mov sarl lahf stos movsl addr16 cmp ja mov xor aad sub add in mov cmpsb je cs jnp pop push jg,pt dec test dec push sbb adc in fcompl frstor stc in mov f2xm1 ret jo xchg lret jecxz dec inc jp test cmp or xor mov into pop push out xchg dec mov pop aam fldl pushf outsl cld sbb xchg imul jl mul inc xor adc sub sub mov add popa lock rcrl cld adc push cmc in adc idiv sahf outsl and xchg in mov dec clc mov pop out add sub xchg test repnz mov xchg jne push pop icebp imul jae cmpsb out jo sub mov push je movsl scas mov subl sbb mov adc outsb inc test test xor (bad) nop jb xchg add inc xor push cmp push xchg jp add lahf add cwtl pop mov push jmp shrb inc pop adc dec sub ja not mov xchg movsl jns iret pop xor mov insb sub adc addr16 (bad) and hlt push xor and loope (bad) mov pop or shrb inc adc dec addr16 cmp cmpsl lcall fwait cs das sbb (bad) (bad) jnp movsl sub sub push imul shr (bad) out daa daa add pop (bad) cmc push push nopl aas sbb sub (bad) ret xchg cld or outsl push (bad) ds aas aaa lret jno lock jo or mov mov mov fistpl cltd lahf dec add sub dec mov addl fild in pop iret aaa mov xor dec pop ret dec push es dec xor mov scas aam ss inc jmp and mov lods dec insb mov dec inc movl push stos pop jp out fs lcall dec sub and mov dec adc lods inc aas imul ja push dec mov sbb lret lock int jb or imul or sbb out fsubrs inc inc xor test mov mov fnstsw jns jbe movsl in dec push roll cwtl sbb ja neg pop aas outsb jae mov lea adc cmc scas loopne (bad) cli dec (bad) clc lcall loopne pop inc lods sub xchg shrl mov roll fdiv pop es ljmp leave adc push mov test mov fxch dec inc lcall lahf pop mov in loop or sbb xor xor push movsl (bad) stos pop or (bad) cld mov sub and push sub (bad) mul and sub (bad) jb adc out or lret pushf mov (bad) out cwtl in sub or std cmp lds arpl cmp cmp cmp mov cli data16 inc jl add mov jae div fadd sar mov xchg lret jl cld cmp or (bad) (bad) daa loopne xchg dec (bad) (bad) jl cmpb loop sbb lret dec cli sub sbb stc push lret (bad) cmp addr16 mov mov adc cli xor decl sub testb jns xchg icebp popa divb icebp fsts pusha jle ret je adc xchg mov xchg sbb push inc ret popf cmp xchg push lahf lea popf stos cmp push mov lods dec and lock xor fmulp mov jg lea (bad) out mov mov popa push push lock xchg add cmp test or aas xchg test or xor or cmp push out mov (bad) fsubl andb jp sahf nop and jge jne and push inc lods addl (bad) icebp jne scas add add outsb mov add insb (bad) and pop or mov hlt fiaddl push in jg sbb insb ret loop scas mov xchg push mov popa les push sti pop xchg mov mov mov mov jae rolb sbb cs add (bad) jns xlat and lret stos mov pop mov psubsb movd arpl xor or add dec insb (bad) xor cmc fimull or clc adc push iret je dec mov (bad) mov out mov mov or jns push sub loope jmp jmp mov fdivs repnz or dec inc pushf mov sub xchg mov add pop and loop (bad) in add and jecxz subb sub out mov mov xor jns cs xor jno lcall outsl push xchg sub mov xor shl das hlt dec (bad) and cmpsl push push test mov rcrl int fsubl mov movsb cmp jne and cmp movsb push pop imul pusha adc dec jg cmc push jp js xchg cld jl idivl aaa es add or outsb pop stc (bad) or insb cmc mov out jne xchg xor add push hlt gs pop dec push ja js sbb or jns out adc pop push icebp sub xchg jmp xchg test into cmpl xor or repnz push push stos pop lret aaa movb fwait xlat or pushw push pop popf outsb (bad) mov ljmp and dec mov jge cmpsl (bad) mov scas pop mov dec jg mov rorb pop pushl or repnz nop sbb ja inc inc xchg (bad) dec out (bad) push pop inc sbb xchg sbbb decb mov adc dec sbb sub mov push mov and jns in out xor call ret movsl or pop pop pop or or movsl mov dec inc call push in insl loope mov sub sub lret enter orl loopne sarl call mov imul icebp pop xor ret adc lret jp sub lcall pop mov lret test jge cli fsubrs in jp lock push negb lcall or mov push in aad jg lahf mov jnp pop jb mov insb xor jbe adc mov jo cmc inc jae mov jecxz jle jnp fistl test mov sub fisttpll pop xchg sub jae push pop mov jecxz mov dec arpl xchg inc xor rcrb movsl (bad) negl inc ljmp pop adc mov mov stos loopne cmp jle mov addr16 or aas ds pop mov repnz xor out repnz cmp mov adc adc (bad) lock insl movsb and (bad) pop dec push xchg xchg out ljmp mov jns pushf (bad) (bad) jne stos out xor icebp fbld mov ss cmp (bad) lock mov and test adc out inc (bad) adc xor add aaa mov jbe xchg in cmp insl rcrb jo (bad) or mov push or or add mov mov or subb leave push or mov or xor dec cwtl push pop pop fs sbb jno push stos jne lds movsb into adc hlt mov outsl stc jg das adc inc imul push xchg out (bad) mov mov cli sti jo xor out outsl xchg iret fisubr mov mov xchg adc sub and xor ret sahf dec mov test xchg addb pop icebp aad sbb js cli xchg jp icebp inc add lods add dec cmp push push mul adc pop out push add jmp mov or je loope push inc js mov sti fstpl lret push and sbb jns xor arpl (bad) (bad) push insb inc pop data16 fsubrl sub aam imul and jmp lahf roll inc cmp je xorl daa inc mov rcl int ficomp sub daa hlt xchg sbb mov mov adc cld lahf inc pushf cld mov jbe jae jbe inc mov dec pmovmskb andl cmpsl ja idivl ret pop (bad) clc (bad) cmp and add bound mov fbld inc (bad) or xor push jo shr cmpsl test daa iret and (bad) and repnz sbb insb movsl adc xor sbb sub roll popf or arpl add jecxz fldt xor mov or jecxz ljmp cmpsl iret sub push jg scas pop pusha lods rolb xor mov jle ljmp shlb mov pop and add loop call and add scas mov sub (bad) imulb add mov jb cltd fidivl xlat mov pop xchg ret mov inc jae add inc mov xchg cmpsl pop es in xchg inc in (bad) push and push (bad) outsl dec cmp out lea sbb (bad) popa xchg xor inc jne push xorl mov or repnz cli lds dec lds and ds jle hlt decb dec dec jp pause mov pusha aam push push insl sbb push sti xchg jl cmpsl jmp add xor cwtl sub push int ret icebp sub (bad) idivb mov in or test jle add dec loopne pop sti aas push lock shlb xchg mov xor mov outsl push bound and push (bad) insl adc pop leave scas lcall cli xchg mull push adc push xchg lcall push pushf dec lcallw cli loopne jl rcll int3 mov in rolb test cmp aaa stc xchg push lcall adc std push (bad) dec xchg mov sbb dec ret out leave cli or rcrb mov aad adc enter and pop sub or dec or push insl scas jl sar loope lock mov cmp inc xchg fmull out movsb jns and jl int test aad pusha cmp and fwait dec mov lea pop js into jecxz mov ds push les cmp sbb mov (bad) out or jge inc pop sbb stc lcall dec adc jb repz inc jo testb lahf fstpl loope out pop adc ret lret les lods xor ja dec push jp or mov fdivrs mov add js cmpsl inc push and cld mov nop int3 leave ja inc push cltd lret add pop (bad) push pop (bad) and xchg lcall pop pop dec cld jns ud2 mov and mov sub (bad) popf scas mov push xor sub mov and mov ret dec into sub fidivrl sub loop inc (bad) js xchg mov add sub mov push in or stos xor pop push inc les sti or dec jae dec inc or or inc xor sbb cmp lods les xchg or adc (bad) jg xchg mov adc add ja mov in fisubr rorl aas out jnp data16 push sti sub xchg dec repz mov mov sahf pop pop jne,pn jne test fs ljmp lahf int3 lret pop test adc dec ja xchg loope fstpt scas and dec push mov pop sbb cmp pop cld call rcrb orl in addr16 testl jge sbb sbb test cmp add out test push int3 ret xchg lcall push mov iret fs or inc mov fsts cltd test in test jo into ds sahf imul add jno xor faddl enter mov fmuls negl out add mull stc das adc call cmpl jno mov cs dec sub cs mov mov std dec push mov adc imul xchg (bad) fwait jge mov push add and lret jmp jecxz jnp shll add cwtl mov test xchg xlat jl mov sub mov addl sbb sbb jne movsb clc stos mov arpl sub xchg pop add and cmp rcll stos dec iret xchg sub scas les inc cmp jbe leave arpl popf dec jmp lea cmp outsl or aas sub fidivl dec and xorl pushf mov mov pop out js nop incl fisubl fistpll xor mulb imul out and jb out fldt in add jne sub add out lea adc add mov andl jmp xchg in add fild push std out add enter call in xor mov fimull insl sbb ss and lea mov js call stc or inc mov push cltd push sbb add sbb pushf es cmp mov add testl hlt jg into in fadd dec cmp jle out and fimul mov pop insb loope,pt and and in xchg in xchg insb jnp sbb stos sbb bound aad sbb sub out mov mov mov pop inc pop stos out dec sti hlt lcall and push mov ja into mov xor ss xchg aaa or popa into add adc in call pop out adc jb lods and adc push push dec or sub rcrb xor sbb pop or push mov mov stos mov adc dec dec bts dec inc or imul sbb das or movsl sahf cmp cmp fistpll inc mov andl cwtl roll mov dec (bad) mov and rolb mov and adc push push fidiv adc dec pop xor lods inc test xchg mov mov adc xchg push (bad) jmp loopne sub (bad) cmpsb jecxz loopne xchg ds out sub popa dec push std lret nop mov ret or mov xchg cmp (bad) sbb popf sbb bound xlat mov jbe dec das jecxz addl lods mov fisttpll or in js xor ds inc ret jp cli pop out fmul fs cmpsl ljmp movsb call sbb inc mov addb xor lods sbb fisubrl rcl mov add mov xor xchg roll cmp stos dec orb mov dec insl or xchg pop repnz sub adc adcl movsl rolb adc rcrb push jns sub ficoml or xchg cwtl test add imul ds (bad) push jecxz fs sbb pop push inc fsubr lret xor pop sbb fs xchg adc jo jne mov (bad) test in jae xor mov jo mov and jecxz pop inc lods inc or pop sahf jns (bad) icebp or fs outsb repnz cs leave dec je test or and xlat lahf mov addl mov push fwait (bad) popf push xchg das and test or ss outsl mov aaa call mov cmp (bad) and xchg push scas pop jbe (bad) orb nop mov fild jno pop or scas mov or fcomp ss lcall pop dec fbld jg pop mov test dec leave xor sub pop jl mov pushw test pusha xor bound push mov xchg or (bad) iret pushl push clc mov xlat or lds xchg cld imul lret fcoml aam jle inc vmread or aam pop cwtl pop pop shlb cmpsb add into cmp movsw scas cwtl repnz mov fnop out jnp cli inc popa and out jo adc jne jo dec push in movl outsl lret jb lret dec add xchg stos mov (bad) mov mov repnz pop ret in mov xor dec pop xor js jp cmc iret dec inc and jo cmpsl or cmp mov and or loope jno mov jno sbb pop adcb pop in xor pop cld xchg jp shrl push jle inc mov jge stos cbtw jno into movsl lds xchg jns jg inc and cltd dec cli pop in in sbb ret push jb xchg mov xchg aad mov adc and add fs sub pop add shl inc mov les xor jb cs cli testb add cmp outsl mov and mov (bad) pop clc pop ficompl inc or sub int mov sbb daa test dec movsb xchg shrl iret mov pop xorb or dec mov mov cmpsb loop outsl fmuls nop inc aaa xor insb add pop cmpb and dec mov xchg shlb xor pushl pop pop fisubr add add or add sub lret (bad) or popa mov leave popa ljmp adc sbbl outsl in in and xor mov cmp or mov cmp in int cmpsb arpl xchg and scas cmpsb outsl ds inc std fld1 loope sub push inc fimul mov jl notl cmpl int mov add dec push or mov xchg dec mov xor je std cli jbe jne inc ljmp sbb push fldt test jo lahf or inc xchg inc push push mov pop jmp mov and mov push stos and arpl sbb dec ret or push mov fld push daa dec ja (bad) cmp or lods inc or lahf adc dec mov jns sbb dec cmp leave mov into adc add stos sbb mov faddl je mov xchg sarl sbb lds (bad) and cmp pop mov call (bad) js mov stos cmp aas dec lret ret adc hlt inc xchg insl and or pop mov mov dec rorl mov je (bad) jno fs dec jbe enter mov adc lods sahf xor xchg scas jae cmp mov es leave mov (bad) out sbb sysexit stc popf adc fsub push jmp pop pop call push in jb rcr cmp es xor int mov or int3 outsb cmp mov sbb (bad) insl lods fidivl je and and lret hlt sbb and enter adc movsb outsb (bad) int sbb pop sub add fcmovu mov jb xor in mov sbb or mov mov jo or out enter xor jmp xchg sti lods and repz sbb psrad addr16 das add frstor mov push pop test jmp add je mov rorl xor loopne add xchg pop jp inc add push popa lret push jl les lret push fwait add jno (bad) mov sbb aaa inc push cmc sub aaa leavew jg insb (bad) enter or xcrypt-cbc cmpsl push loope clc sub inc movsl pop psubsb into (bad) icebp xor mov xchg loopne jg sub adc xchg xchg popf cli fisttpl and xor lcall xor jg cld dec cmp idiv or stc popa inc adc out jmp repz xchg sbb or leave test xchg xchg jb js sbb xchg insl out push test cltd and jb nop outsl ljmp mov outsl call cmovl xor inc out mov bound idivb rclb xchg fcoml (bad) fnsave inc movsl lods xchg push add dec pop inc pop aas mov pop jne es xchg (bad) jmp sub jmp aad repz adc xlat xor insl xor test jo pop xchg notl outsb stc and jp jae push outsl inc ficoml loopne div (bad) mov enter xchg xor sbb mov cmpsl out mov ret popf dec xorb ds xchg sub inc inc test test xor sti out in es mov mov fcoms adc and (bad) jbe xor js cmpsb lretw cltd xor cmp insl dec hlt add cmpl daa icebp out inc cmp movsl push mov insb mov pop (bad) cmpsb push int jne lds adcb sub ja and sbb lret cmc aam into shrl pop xor call fidiv gs push nop imul cmp popf mov or (bad) cmp in in outsb movsb data16 loope rol (bad) pushf icebp push in (bad) (bad) insb loop fsubrs (bad) cltd popa push jge inc (bad) dec sarl in dec lds (bad) cmpb inc sub mov pop push or and jo dec sbb mov adc bound sbb mov cmp sub in lcall loopne mov cs sbb inc aam gs mov scas fdiv shr sub mov mov mov ja xchg sub or xchg sbb adc add push mull das push sbb jno and mov mov xor aaa xor hlt dec int inc imul xchg xor cld idivl mov add lret dec pop outsb (bad) popf mov inc or sti rorl xor xchg mov mov mov lcall mov pusha pusha pop movsl push fidivl popf jl sahf mov push jl mov clc ljmp (bad) cmc inc pop and popa iret pop stc fcmove mov insl inc mov cli mov sbb popa jae dec push or mov lods retw xchg lret sub lret push or sti dec sbb fsubrl ficompl pop jmp sub (bad) add sbb mov popl jmp lea adc lret jbe mov hlt repz mov lahf jg adc lcall pop xchg push adc cli push stos pop stc xchg adc sub rcr fstp sub sub add fdivrs loope (bad) lods int mov mov inc enter jle cmpsb xchg mov (bad) nop xchg movsb in cli cmpsl jmp mov cmp or int cwtl test sub nop les xchg in std add mov in mov sahf cmpps enter fucom repz sub mov scas sub lds ret rep aad mov mov shrl (bad) pop movl jbe cwtl lret and mov pop mov xor in andl jno movsl push hlt sbb xchg push add mov fwait repz adc pop or xor aad gs push lea jnp jb pop fdivrs or out fdivrs mov (bad) jle push xlat sub aaa push mov mov popf test mov fs push in add rcrl (bad) jne shr add adc mov cmp roll pop adc rolb out jg sbb lcall iret out outsb (bad) (bad) aas pop add push ja int3 mov outsl jnp mov shll out fdivrl push movsb repz ds daa mov jecxz rolb mov and fcoms sub test or mov inc inc (bad) jb jg mov cmp es mov fmull and push cmp or or in xor das daa ljmp adc add mov mov mov xor pop fbstp ljmp jmp orl popa sub sub cmp xor mov adc out cmc mov fisttpl push and sbb stc (bad) mov xor xchg cs not jo jmp adc es les xor mov or daa test sub mov and inc xor inc pusha jg mov xor or sub and ja pop (bad) adc mov and sub fmull push insb ja or leave cmpsl mov mov outsl cli adc jae lods push rcrl adc pop jle and mov jo andb pop mov push fsubs mov daa cwtl sbb sbb fsubl or sub push inc nop push xchg cmp mov mov test adc out jns cmp int3 pop pop and test inc jae inc inc rcrl dec (bad) hlt lret dec mov xor cltd inc dec call insb pop sbb lods dec cmp leave incl sub adcl inc lret xchg pop inc inc pop and testb pushf inc cmp stc orl shrb (bad) xchg fstpt jae sbb pushf cmpsl lret hlt loopne int inc inc ja (bad) cs cmovae ljmp xchg cmp cmpsb sub pop stos or mov mov js pop int3 shl push mov cs ffree pop cwtl jne pop std cmpsl jle mov aas loopne xchg sub pop dec mov sub push inc nop outsl bound mov mov and out push data16 bound lea push jo cld cmp add cmpsl adc shrb call in sbb ds jo push add mov mov divl inc clc jl mov xor jne aad es jp sub push jecxz inc rorb xor push rolb (bad) popa scas test sar add push sbb adc pop mov (bad) (bad) mov mov insl mov push sub std (bad) mov repnz stc loop int insb call repz cmp jp xor adc out jno add push add lock nop inc rcr cmp xchg dec push loopne xor out cmpsb int adc pop mov mov (bad) (bad) mov outsl xor add aam mov pop mov (bad) mov cltd test mov sub sbb into mov hlt jecxz mov js test mov add shr inc push sub mov dec adc je repz lock (bad) rcrb (bad) fsin mov mov mov pop (bad) xchg ja inc push movsb inc mov or dec lock pop mov popa jo mov or pusha lods sbb xor stos cltd jmp call pop pop inc loope dec cltd neg mov jge cwtl int3 fidivr push mov push lea sbb xor cld add jge sarb lahf fwait add and or mov pusha sbb xchg mov popa test cmpsl jmp jbe aaa push jns or mov cmp push jmp iret mov ret stos push daa ror inc loop rorb nop dec shrl push xor rcrl data16 incb (bad) out rcll jb lcall into scas lret (bad) jp mov inc xor loop insb pop jecxz or push push shrb mov je cwtl rorb cmp jecxz fwait jmp dec cwtl adc push cmp fs mov fs mov cmp test popf mov sbbl lock add enter cmp xchg xchg mov fdivs lods pop hlt loop aam daa jmp test jbe xchg mov loopne nop pop mov sarl xchg repnz mov pop ret fstpt out lock je out mov fcompl fsubs test mov inc jnp (bad) fiadd aad in adc pop xor mov push and add push jmp push inc (bad) lret push adc cmp xor add pop imul roll (bad) cmc cld and pop push add sbb ficoml and insl aam pop roll mov xchg pop ss fs push fimull inc (bad) lods pop mov icebp sub adc cmp (bad) out ret jno aaa js out sbb add ffree mov scas arpl add das ja pop cmp in out loope shrb cmp dec xchg push inc insb aas mov mov add add lret call mov cltd or jmp or and std movsb xchg jo sbb sbb (bad) mov aas add ficom movsl js fldcw sbb add rcll or out pop repnz xchg imulb xchg push imul sub cmp xchg dec push in insl mov pop lods fs pop ss mov cmp jno or pop out cld in sbb cmp mov loopne mov in add and mov and movsb sbb add jo mov les daa ret (bad) call shlb jecxz dec jl jmp cmp mov into aad or mov into xchg mov in lds pop outsl add pop dec roll inc mov mov adc call jecxz daa roll adc or sti rclb lret add inc mov addr16 add sbb mov jno popf mov cmpsb jl aad cmp lcall fbstp lods lret inc cmpsb xchg fsubl dec pop lds cmp adc jle pop xchg jbe inc lea dec lods xor mov jne mov fistl xchg scas fist mov sahf mov sti xchg xor cmp mov (bad) cmp sub (bad) pusha sarl add pop xor jg and dec xor sbb (bad) fistl mov fldcw aas inc inc cmpsl push sub movsl cmpsb mov bound xor mov popa and in lock movl sbb ret test push dec dec mov inc add cmp jb rorl dec (bad) mov jo mov inc jo push (bad) dec mov xchg lods addr16 rolb outsb pop adc mov xchg fsubrl pusha mov xchg pop xor push lea js mov jne aad push jge sub or jno sub dec mov jb shrl or icebp int3 imul loopne outsl std aad imul xchg mov and iret inc sbb inc jge sbb push jle cmp and repnz pushf mov dec or sub fadd js (bad) neg nop or mov fcomps jnp adc fldt mov enter ljmp cmpsl mov popa aas mov test push test cmp and mov jae in out fcompl push or add pop xor call fsubr push lret inc scas and jae ljmp imul cmp jo imul out les mov test ljmp sbb and js mov xor mov aam adc lds push test arpl sbb xor dec mov mull adc push lock pusha cld in xor lcall jg jae aad xor dec dec mov dec lret clc std xchg dec or mov push xchg (bad) add xor outsl and gs and (bad) in lds cli adc adc arpl pop notl and mov (bad) daa push mov push ja or idivb fnstenv sbb notb (bad) xor cmp xlat inc test pop pop (bad) dec push adc inc aam rcrb push or dec push scas movsb ds sbb outsl push dec cmp repnz cmp inc push pop (bad) cmp inc add lock sbb scas jbe stos mov and sbbl adc (bad) cmp mov dec dec mov sub add insl ds inc and idivl incb pop sub sub mov popa xchg sbb loope fisubl mov cltd mov ficoml pop stos pop icebp jle pushf cwtl pop lea inc push mov and and lea rol sub or mov pop test popa loop addr16 jae mov push pop stos jecxz mov lea mov aam and in inc sbb fld bound jae dec fwait xor xchg cs aas dec sbb imul ret lods mov aas and loope lret mov push out sbb nop mov mov outsb mov daa les lahf inc lret lcall in sub in movsl mov rclb ss dec pop jg leave jno mov jmp loopne fldcw and cld sbb push add add mov xor (bad) mov sbb or jl mov fcomi mov cmpsb pop leave out cmp push je jae xor aad outsb out imul inc sahf sub xchg adc std arpl test test sbbl ja (bad) or mov call mov rol (bad) lahf das and or cmp (bad) inc mov sbb movsl push out mov fneni(8087 adc js mov stos sub pop xor out loope iret jmp into mov push and push cmp ret jg aad (bad) loopne jl stos iret (bad) mov fsubs jg lods pop push mov adc fisubl sbb dec loope mov sub add sahf pushf movups (bad) insb pop xchg lret outsb rcll (bad) shll test push sub pop jecxz nop dec push enter cwtl jp loope imul xlat inc in mov inc pop add jge sbb mov nop mov dec insl xchg js dec pop mov aas mov (bad) rep mov in dec popf int mov inc dec cmpsl xorl xchg test push mov pop or or xor es mov push pop jns clc ficoml shlb jmp mov push dec outsb pushf and sbb sbb jno repnz inc adc push dec (bad) jae push cmpsb jmp xchg pop mov aam idivl call outsb int3 scas roll mov jns ss jae daa lahf mov shlb sbb stos daa out mov call test cld data16 pop cld sbb xor aas (bad) xlat jb lret (bad) fild lods orl scas dec mov xlat and jnp jnp cwtl cli jl sbb mov inc xor adc cld push jne sub jno xlat mov out or sbb lods inc in jbe rorb adc xor dec mov (bad) or pop lea mov or imul sub xor jo jnp push adc hlt sbb bound stos stos mov fwait dec test xchg orl mov inc xlat int3 int3 mov lcall std push test pop das mov jl icebp jno imul pop sbb add imul hlt aas and loope pop (bad) mov cmpsb js fstps rcll push insl repz xor mov pop ret push sbb idivb and mov mov mov mov clc jp aam mov sbb pop inc sbb sbb sbb (bad) jo add mov or aad outsl mov xor std jno sarl rcrl in inc imul movsl test sub enter fadd and fistp xor ret int std push mov add imul loop fsubrp stos mov dec or mov sarb bound jns mov adcl enter pop or and push xchg cltd stc push cmp popa xchg add aam (bad) (bad) in je push aam sbb out pushf mov inc adcl adc movsl and adc js xor fstps mov fbstp cld add pop lahf cmc faddl shlb fnstsw lret jl inc xchg pop outsl (bad) push cli loopne mov lods xchg (bad) iret inc mov imul lods xor loop int3 test sbb movsl ljmp or jns movsb adc setg ja pusha js mov mov mov sar push je jns mov into sarl or xchg add (bad) mov cltd xchg jns xchg ror mov jecxz add cmpl xchg loope in mov pop pop pop iret ds sbb xorb and cmpsl adc mov or dec loope add lods dec sbb sub mov jle test popf in or ret test (bad) ret push dec (bad) inc bound or jecxz xor fucomip mov mov mov cli jmp lret mov out jg shlb (bad) cmc inc add pop mov shl jle mov pop lds dec push mov inc arpl pop xchg cwtl pop mov xlat adc aam rdmsr cli mov dec popf dec aas jp push mov adc adc movsl ljmp lods sub dec pop dec scas (bad) hlt pop movsl push adc mov ret xchg std jb and ficom stc mov movsl add (bad) fisubr dec mov aad adc and dec push in dec xorl fsubr push dec lds aas and ds add fildl and sarl or rclb (bad) in lahf sbb leave arpl mov jecxz rol inc das lcall and pop xchg xchg fistpll or ljmp loope mov mov movsl or cmpsl pop imul pop fldt or out ret pop sti nop or lret dec fdiv adc xchg jo mov cmc cli pause mov dec daa jmp mov pop and mov xor cld clts xor std pusha dec mov sbb bound adc dec inc jns add dec and mull cltd jnp pop cmpsl js jl dec or mov xor sbb into mov loop cld lds vmovdqa sbb je or add pop mov sub dec xor rol leave jnp dec ret push push subb dec lahf (bad) std xchg in mov push sti jmp jns rorl mov jle je pop lock ljmp and lcall (bad) jecxz mov pop bound xor (bad) fldl dec pop xor lds inc hlt inc aas push add clc mov or js int mov jp out in out push (bad) out and in add push mov dec xor leave lret or out mov jnp jb out fistl stc in inc xchg xchg int3 xchg sar outsl aaa xor xchg rcrl pop and outsl sub sub je fildl jecxz or xchg jno scas sahf lods jg dec sar lahf dec int add frstor cmc push and mov imul (bad) leave fcoml mov fwait (bad) mov mov nop sbb mov xchg aad fldt pusha ds jg or mov icebp aam mov or insb inc add mov cli imul xchg jae mov xor orb push movsb xchg mov aad cmp iret push sar test inc lret xchg jecxz sub movsl fcomps lods push and xlat sbb test loope scas dec xchg pusha cmp and packuswb mov fwait repz inc stos test test stos leave pushf aas (bad) insb repz mov hlt insl jne jo push repz pop insb inc repnz lock sbb clc or sbb lds sub push outsb scas (bad) cmp ja adc arpl or shrl mov ds mov sahf sbb push ja xchg shll or fildll mov jmp inc frstor mov je and sub rorb adc fstpl adc imul cmp into movb lahf xchg inc push jmp nop shlb adc pop pop loope adc dec mov xchg lret fs xor mov xchg jno cmp push push ja movsl xor aaa rcrl sbb scas outsl loop lret push fnstsw aad cmp cmp mov xchg shlb cmpsl pushf sti adc push pop dec xor leave fnstenv adc int3 repnz fnsave outsb jbe lds mov test in mov mov push lods add les or repnz mov cmp jo movsl adc lahf mov inc sti adc dec pop rcrl pop jno aad and fwait mov hlt cmp pop ss lods sbb xchg jmp xchg sub loope fnsave mov test gs lods ja or scas xchg inc mov fs jecxz (bad) pop lods mov cmpsb inc cmp mov sbb xchg dec dec cmc mov dec in outsb sbb subl add in jb adc jae and dec out stos mov inc xor dec push cmp jno cli add or shr and jne cltd popf js lcall (bad) mov and cltd cld mov mov push adc jnp push je mov subl sub jle pushf nop nop mov adc inc mov push xchg hlt in lods pop into push (bad) push shll fstpl cld jle add inc jl sub xchg sbb ss add jbe lahf add xchg xor mov and lds ret mov in xor xor lods ja cltd sar pushf cmpsl aad push sub mov fstl dec pop mov inc sub mov nop and in and lods sub (bad) inc mov insl fisubr mov in or movsl fwait ret push mov scas fisubr inc leave jo shl sub stos fbld aad jge xchg sbb notl mov mov sbb in adc cmp jge inc out push jle aas and mov push jns pop push int3 or leave push mov mov and xor pop push mov cmp cli out cli lds xor outsb fadd xorb add cmovns sarl push pop hlt inc aad out adc mov sti sbb outsb jb (bad) cmp cmp pop adc sbb mov push add sub jmp push push push pop sub das dec mov cmp mov fildll mov imul rcrb out aad out xchg gs push xor iret push addr16 pop push push push paddb and sbb mov jb idiv push and nop movsb fdivl (bad) jp push rcr cld add mov inc sbb sbb loopne push repz mov pop and loope add mov out and pop loope call dec mov jo sub push xchg xor lahf mov je inc push lods adc mov (bad) mov and mov lock stos shll add or into and mov leave ljmp aad pop test imul hlt popa data16 jp insl testl xor sub js mul push push push push mov pop mov push xchg imul inc adc aas aad add test rol lahf xor dec dec sub inc fistp sub sbb sbb sbb or ret add or cmc mov cmc test jp subl les or popa int inc jecxz sbb out sub aas xchg das arpl xor jo dec ja cltd push repz mov add pushf enter (bad) icebp cwtl nop xchg pop data16 mov dec sub pop inc pop test data16 mov pop mov test loope stc jno int3 push mov ss (bad) cs jb popf cli xor fidivl sbb add xchg push add mov xor mov loop dec pop jmp mov and out bound sub add jae (bad) and jne sarl jle xor fistl mov lods push mov mov shrl dec repnz mov sbb inc adc inc testb xchg in pop repnz pop mov shlb adc mov outsb lock loope mov fistp fisubrl cltd xchg subl int3 pop xor sub in sub mov outsl ja xchg fidivrl fwait mov pop orb cmp repz or les add nop ljmp hlt faddp sbb xchg jmp mov jnp sbb xchg push (bad) xor loop adc rcl fisttp sbb jl popl sub mov fs loope js and xchg es popa jmp or and or in psrlq mov pop xchg xchg mov sbb inc jmp das test sar xor or rolb xchg inc and pop daa lods andb movsb xchg sub test jno movsl aas lret pop outsl addl outsl xchg or jg test sbb repz sbb pop xchg mov adc outsl xchg icebp sbb pushw popa add gs mov out lret hlt fsubrs fcoms lods xchg xor dec js pop cwtl loope push mov test mov or or orl mov mov add xchg cmp and dec push int3 fisubr out dec sub xor push fimull cmpsl push ficomp in xchg jb dec popf inc in aad jns cmpl cwtl test cmc and pop fsubl xor iret mov mov lock scas push imul mov shl rcl nop stc aam inc popf xor fnstsw and aaa or out and (bad) icebp pusha xchg push sbb dec dec mov aas jae dec mov ret xorb xor mov pop sub or jg (bad) sbb xchg cmp insl inc testb jne loopne jmp cmp jmp push inc or shlb sbb test push stos inc popf xchg mov xor mov data16 pop mov shrb xchg popf xchg test cmp add cmp stos js sbb or jmp int3 out stc hlt mov mov adc jno pop jo insl scas and push push dec jl sub test adc lock dec or jle or fs adc loop gs inc dec pop fucomip xor adc xchg cmc cmp in jmp sahf cmp andl les (bad) ja lea outsl sbb in adc xchg repnz or inc addl pop rclb stos push xor lods pop jnp jp push xchg adc popf sbb lods js mov lods add je lods outsb addr16 mov sub adc stos inc sub popf push pop xlat sbb fild icebp insl dec cld sbb aad icebp rcrb das mov lods cmp popf rcrl outsb imul inc mov inc sbb push sarl xchg mov xor inc sub adc test fadds insb inc cwtl stc lea lahf dec fstps xor dec sub mov (bad) testl das jnp roll adcb cmp pop dec mov dec fistpl fwait push insl and push sbb stos jae xchg mov pop jg jo dec mov stos leave repz aad decb ror popa mov jg add iret xchg xchg sub jp lahf fisttp mov lcall inc (bad) ljmp add idiv test sbb xor add mov das cmp push add and lahf scas adc jl jo jecxz or in dec sbb int subb inc lds xor and mov pop xchg xor sbb jl sub out loope test dec xchg test xor mov out fs imul mov xchg ss mov push or out out jl or ss dec jnp inc cmp cwtl inc sub push iret sbb or push or inc and repz stc in cld jge jl mov add je ds fnstcw push and dec enter subb stc push xchg xor mov repz lahf rclb and imul lea or repnz push xor test xor daa cmp in mov adc jmp (bad) adc mov dec pop je repz mov jne inc push xlat movsl rcr lcall cli scas add cmp pop xlat cs and jl pop incb inc movsb scas jecxz aam mov movsb idivb add fisttpll addr16 mov scas ja lock pop push std sti push mov outsl in xchg (bad) lret inc mov aam or mov popa jp mov jae clc xor scas inc adc and loopne mov and iret int3 ss notb sub jmp xchg (bad) es adc popl ret inc aam push mov jbe sbb cmp sub push xchg xchg inc pusha pop dec movsb or and mov lock sbb mov in xchg and xor push psubb adc dec movsb xor mov jb xchg aam mov fidiv mov sbb mov mov add add and and sbb cltd jnp into pop dec in cmpsb out subb imul or les xchg dec popf xchg add push lods (bad) pop jl and cmp repz out mov leave fs push xchg dec stos xor into mov cmp stos mov daa jo push adc adcl sub enter dec and mov jge inc push (bad) sahf mov inc dec xchg sub daa mov or pop mov dec xor mov mov pusha sub or jnp (bad) pusha and (bad) cmp dec out gs test in push cmp adc ds jne sub inc popf and sbb lods sbb popf xchg sbb xor pop mov mov leave jg hlt clc inc or lcall and sbb jle popf repz and cmp mov dec jp jecxz mov push dec into dec inc push sbb fxch cmp or repz mov rorb faddl in shll adc insb xchg sbb add mov sbb dec xchg adc dec mov ss mov push sti mov lahf sbb xchg outsb scas dec sti iret out sub outsl int push adc xchg scas mov jg lds mov dec jne dec jmp or jnp lcall (bad) lea ljmp fisub daa cwtl rolb xlat sbb das xlat imul aad mov bound insl or rclb addr16 xchg xlat loop sub pop insb cmc pop inc iret mov jp (bad) mov test and loopne cld pushf cmp ret xchg pushf lcall in js roll mov push insb xchg lret in xor lods cmc add sbb mov adc jns rorl ret lock aam xor mov inc rclb cmc jge cmpsl adc ret xchg hlt cmc push push lar fild jg in and mov and movsl (bad) daa sub or push push pop and jmp jmp outsb pusha enter mov lock sub cmp cmpsl pop lret xor mov push out out and jbe lods in lock or pop mov movsb fnop inc gs idivb pop jnp outsb aaa aad mov in inc rolb push pop push test dec mov cmc movsl or cwtl jge mov mov mov in jecxz cmpsl std add push ret test push cmp ret xor cmp js xor leave movsb hlt jp mov mov jb shlb stc sti pop mov cmc and pop repnz pop adc mov sub mov das mov pushf mov in xor pop das mov mov incl dec popf dec cmpsb or mov jl mov (bad) aaa lret sub mov gs and ret push xchg out sub test fild lock dec sarb or push int3 pop sub mov mov cmp mov sbb ljmp sti in sti and xor aam inc fs push clc xor or xchg lahf out jno (bad) fsubs lcall in mov pop inc cmpsb pop mov jb xor negl fsubl or dec sbb js mov test pusha lea aas push mov dec mov (bad) rolb mov sub cld pop subl pop sahf nop rcr cmc stc aaa (bad) cmpsl adc fwait sbb mov cltd clc xchg jne inc mov xor xor (bad) mov cmp sub mov xor cmc mov aas ror ror (bad) sub into pusha imul pop mov xor jb lods adc inc scas mov sbb ja jbe (bad) mov addr16 mov pop and xchg stc mull pop cwtl addr16 adc mov push aaa dec movsl idivl in out xor (bad) ficom mov cmp das push rolb ret loopne mov ret outsl mov jae in leave jg sub adcl pop xchg push test bound sub mov test xor lds inc shll pop push mov jae jo arpl lret mov shrl std mov daa cmpsb into cwtd mov cmp (bad) or in push xchg sub sbb sbb xchg dec ds in cmpsl adc and inc pop ds push push mov cmc lcall out jg aad ss jb cld (bad) ja xchg mov pop push rcrb addl (bad) xchg inc jl test adc xor pop jle loope xchg pop das push test aaa pop (bad) leave decb pusha xor repnz scas cltd dec std xchg leave add xlat divl ficompl add dec sbb inc dec lock sub pop mov mov jae rclb jns nop cli imul push dec mov subl inc mov shrl cs cmpsl repnz stos mov stos std mov mov cmp dec add mov dec fbld in mov insl mov aam inc movsl sub sarb data16 pushf xchg aaa push sub jmp test je jne jl pop mull sbb inc insb pop mov rorb cmp ljmp mov sub sub jmp push and jne mov sarl (bad) or pop or fucomi mov ljmp mov lods call pop aas xchg pop ljmp inc movl ficoml or fnstenv jle push pop push mov xchg xchg sahf clc add sahf test xchg lret xor mov mov or test repz aad test fwait push pop loop lcall jbe and or test push pop aad add dec popf cmp pop dec gs pop fwait sbb xor scas fwait fwait xor sbb insl mov fmuls lock sti xor (bad) pusha leave stc cmpsl xorl mov call pop leave aad sbb cmp es fidiv ds (bad) pop jno push cmpsl loope and aam mov jnp mov xor cmp lods xchg sub mov flds call jmp cld ja cmpsl fldl xchg mov stc pop xchg adc pop cs dec adc pushf and jno jmp adc mov iret xchg cmp stc cmp jno into lock jle,pn jae xor movsl push inc jae aam rolb aam inc mov popl dec and add sbb xor pop inc fldl2e out ss je scas mov cmpsl sub or ret pop dec fwait dec mov pushf test mov mov jo mov das xor dec ret insl xchg cmp pop in test out pop cmp or mov neg fdivrs imul jmp push dec or inc mov rclb sbbb xchg or adc mov adc jmp and (bad) mov call cmp jge mov push orl insl loop fdivp mov stos dec add jmp clc mov es cmpsl adc mov mov gs loope in adc sub adc push jecxz jae lahf mov cmp das cli pushf pop sbb fmulp and (bad) jp js lret fstl sbb and cmp pushf cmp mov aam aaa pushf gs loop addr16 cmp pop push jae out adc xor (bad) pop or mov lods pop mov push fildll sbb mov fs adc jl mov or je mov fnsave pop and cmp mov sub hlt sub xchg in pop inc popf out and pop imul or imul jp or sahf pop mov push rorl psubusw mov and cmc out mov mov inc (bad) es lods in push jbe or jecxz divb lahf test sub mov je pop arpl stos or out rcrb cmp (bad) jb push push insb fild pop pop ret lea push xorb sbb xchg add add sub push fdivr jg xchg stos mov xchg test push dec xchg mov xchg pop and push (bad) xchg clc ss mov inc xorb add in push inc mov cmp sahf push sbb fisubrl lock cld jae inc jae adc inc push repnz sti push mov enter xchg in sub fbstp xor (bad) push push mov xchg inc fucomip clc repz ret ja bound roll mov pushf xchg cmc adc push or inc pop into into cmc dec cmpsl (bad) enter lcall push testl testb push mov lods add pop cltd stc (bad) pop test dec cli adc inc jp cmp popa push xchg jno add push push clc fwait pop (bad) stos cli cmc scas sub in pusha cmp ficomp xchg and mov cltd pop xor ja rcll nop mov push int3 loopne,pt push adc call loope adc dec out nop sub das out insl dec xor inc jp jge jecxz outsb data16 xchg sbb arpl adc mov add out daa (bad) push mov sbb js loopne int ds ficompl cli pop std dec and movl popf mov and dec in pushf mov push mov int3 mov pop pop xor xchg mov pusha mov jp mov fidiv sbb pushf lds pop dec adc fdivrs add in aaa push inc cwtl icebp inc gs adc jo or in xchg loopne in dec add fwait adcl xor dec mov cli lods out int movsb mov mov movsl xchg loop fildl jmp sbb and inc mov or cmp push push hlt cld loope xor xchg shl xchg mov push test fpatan idivb out xchg out mov adc pop (bad) fimull test add stos dec lret into ret scas imul outsb push out xor shll cltd mov cs push jo (bad) and push cwtl imul out aas addr16 mov cli imul bound sti mov jmp inc pop pop xchg jb sbb mov jp lods fcomps cs subl (bad) sub add xchg stos xor xchg cli sub (bad) adc jne rcll loop ret jns pop add mov mov inc cld (bad) jnp adc test in dec cmp repz addl add cmp xor lcall jle xchg and icebp idivl push ss jle mov cmc pop int3 inc and gs pop mov xor xchg shrb stc and and inc dec add jns out cli jae sar jp pusha push shl jns fwait cmp cwtl js in sbb dec (bad) mov sub enter or mov pop mov out xchg arpl aaa xor in cmc xor adc mov cmpsb (bad) fcoml out add repz cltd xor aad pop lods or popf mov cld das push push and subl xor movsb stos adc negl jle pop pop stos mov popa test and daa or inc lret inc test mov repz imul jle flds mov mov (bad) out inc push stos pop shlb xchg pop int in lcall out sub aam sub push popa jp out cli (bad) mov xchg andl gs js (bad) out or push inc dec sbb jae pusha mov push or (bad) dec in rorb out mov cltd ret cs lahf push sub repz jo mov or adc and sub int3 cmp push js mov scas (bad) enter daa add sti and xor and push pop mov and lcall sub std scas fldcw inc repz out push (bad) add loope mov fs push ja push (bad) xchg xor daa mov stos adc mov test inc cmp repnz dec or nop and loope or dec xchg lea repz lahf test dec push (bad) sub jp lods adc push shrl mov fiadd and sbb data16 adc icebp adc sbb scas ljmp jl jb es xor pop mov decb sub pop imul sbb pop mov stc inc and hlt mov xchg out mov and jbe add pop (bad) std repnz cmc popf dec mov imul popf inc sub ss jne mov (bad) int jmp loope dec hlt add decl cmp shrb add cmp mov popf jmp jns sub insl stos cmp fcoml movsl lret push repnz addl and mov rcll adc fcoml jge jb push or cmovs cmp pop mov dec jg stos inc insl jmp adc rorb xor pop dec add out sbb movsl inc pop addl stc subb sahf and dec mov xor setb or mov das xchg cmc dec mov xchg dec jl push sub jae aam jg sub out cmp pop xchg jae sub icebp push adc inc popa das (bad) int stc jnp dec outsl add inc ljmp cmp ja xchg add lret dec jmp out jecxz or sti ret cltd xchg pop and adc lock (bad) xor and in and loope popf dec inc jne lods ret cld out push mov sbb sbb fwait xchg push dec loopne jl popf jmp and jno getsec and push mov sahf jl mov push mov ret clc bound cmpsb xor and and fsubs cmpsl rolb pop insb cs scas cltd adc sbb dec out les jecxz mov nop mov or nop inc stos sbbl fisttpl addl pop sub or lds in outsl or jbe xchg fsubrl mov fnstenv ljmp cmp cmp les arpl test jbe mov mov pop nop or lods cmp mov cld dec cmpsb imulb dec bound add arpl out sbb (bad) arpl insb notl dec add mov or push decl xchg shll leave cs sbb aam outsb (bad) push in repz dec dec jbe jb jge inc dec push pushw inc test dec repnz sub in push jae data16 or inc sar xchg adc sti insl jmp aam and mov xchg loop mov jno pop or mov pop mov movsb in in mov or mov pop jge std xor mov loop stc imull xchg loopne stc sbbl push mov jns push xor sbb jle cmp cld sbb xor (bad) xor loop movsb sbb adcb outsb xor icebp repz ret xchg stc ss dec xor iret push cmc in mov in pop xorl ret sbbb pop clc lret insb mov cmpsb scas ror jns sahf sub push xchg daa lahf fisubrl fisttpl (bad) aam sub sahf push mov mov dec insb jp jg testl xor pop sbb cmpsl or bound insb idiv in div sbb jmp jge addr16 xlat mov cmp pop push sub (bad) pop jl inc fsubs jmp addb ret hlt mov enter push mov clc repnz out adc rorl add mov lock hlt mov leave stc lret cmc loop das repnz jmp jne dec push push inc dec push inc sbb add sub aas push jno (bad) mov jno jecxz and cmp pushl xor in pop subb mov negl sbbl cmpsl pop test dec ja add cld jl,pn stos jge push scas outsl mov inc or cmp xchg dec adc sbb cld add mov sbb mov in pop jle subb fwait es and mov sarl movsb leave xor mov out and lret pop jae mov movsl cmp lret rorl (bad) sub jns hlt addr16 in mov mov mov stos mov jnp sti sbb or ds bound sub and and (bad) out xchg lahf subb jl outsl cmc xor push mov pop jns movsb test jmp push je clc rcrl lahf lret gs (bad) pushf mov scas test xorl movsb mov repnz cmp fwait mov bound xchg xchg mov lret pop cld jb fucomi jle shrb xchg je jle mov push movsb adc mov push mov xchg mov inc lods daa les mov nop jns loop pop std mov cmp daa ds xchg addr16 mov cmpsl out xchg jmp lds (bad) mov xor dec jbe divps sbb cmc sarb mov push imul int3 imul (bad) jle xor int3 stos and push in scas outsl push adc dec stos pop lds iret or pop cmpsb lahf aaa pop inc xchg inc ret pop xor daa (bad) jle push loopne imul xor (bad) mov in (bad) mov lret nop movsl mov push sub stos ficomp shl das sti or inc mov mov ja jge mov (bad) sbb aas mov lock lret add insb clc sar and xor cmp fsubp sbb mov repnz mov shrb xchg mov test loop jns jbe cmp jg cli aas (bad) sbb inc sahf fwait or in and and adc and adc pop jg sub out xor shlb test mov imul cmp (bad) jmp add femms sub pop rcrb jmp adc mov repnz push gs mov enter jns in pop aam jmp adc jge xchg pop jle (bad) lock push cmp sahf mov sbb xor jl,pt cltd repz lcall daa add aas xchg mov sahf jecxz inc in push addr16 int adc imul lods icebp shl add mov jnp inc dec rcrl mov test mov outsl jno push movsl (bad) fistpl sub cmp aaa adc pop cld inc js cmpsl bound loopne and jo movsb or dec in dec fcomi xlat fcomi fs inc inc inc mov xor imul cmp repnz push xchg scas (bad) adc pop je aad shlb xchg lret daa das aas ds sbb jo or dec ret rorb movl mov (bad) int lock xchg stos xchg cmp lods cmp mov scas or xor fldt js pop adc or cmp xchg sub icebp sub outsl sar jle add lods sub imul test dec push aas jnp cld add adc int3 cld les popa test xor mov enter mov daa sarb inc orb adc sub popf jnp sbb xor pop mov mov aas in cmp and ss push aam jb in cmpsb sub cmpsl dec add adc or (bad) bnd ljmp and and in dec adc mov shrl in xor jo jns and mov icebp sar xchg inc scas call lret pop cwtl ljmp sub add jle or enter mov inc ja lea ja cli addr16 adc rcl clc inc cmp jns lea pop inc fs mov shrb ret movsl sti or sbb push test push call xchg fsubs cld mov jle push addl mov or xchg inc std xor clc inc out push sub sti xor js notl repnz or addr16 ss pushf movsl push sbb sub sub rorl or ret aaa sub sarl outsb push mov xchg pushl mov cmpsb inc int js ret pop out jg mov gs fs cmp ror push inc push sub adc and or cmp fmull outsl push mov cld arpl (bad) dec jle mov enter cmp shll ljmp sbb insb jp loope ret outsl adcb (bad) fldenv je ljmp (bad) aad pop lods xchg adcb iret outsl sbb xchg nop cs das jl xchg pop pop rcll mov or (bad) xlat call lock es and push addb ret adc fisubrl pop outsb stos push (bad) and mov inc inc jmp xchg pop shr sbb ret xor xlat cs aaa push sbb push lds into and push sub scas sub pop lods mov mov movsb das fcomi mov mov adc xor mov fwait (bad) mov mov fiadd and mov cltd xchg push mov push xchg cmp mov bound in out push aam ret movsl push sarb cwtl imul jae dec pop mov out and test (bad) push adc test scas idiv std les xor xchg lcall xchg add adc iret mov sbb adc sub call jp ffree inc imul (bad) lahf lahf mov pop adc arpl xor scas mov mov mov jne int3 jae sub enter and icebp jmp xor sub add div lahf mov ret es pop mov fwait xchg xchg imul imul popa xchg push popa fcmovnb loopne xchg cmp adc int jl xchg ds mov mov movsb xchg pop (bad) dec fs out divl outsl xor jns daa loopne push mov jmp adc dec (bad) jne mov ljmp nop sbb adc adc fdivrl stos xchg push (bad) lcall fwait mov das int3 fsubrs mov cmpps mov addb cmp push inc pop dec (bad) mov pop incl dec sbb insb lret (bad) fisttp xor pop add or jns sti pushl push adcl sbb push inc xor jp xor ss xchg imul push mov clc iret mov sti adc shrl fstpl pop pop lahf lods test lock outsb repnz lret imul xchg test call mov pop sub aam mov inc mov push scas cmp pop cli aad lock or jle bound fiaddl stos rcl mov pop adc push jg movsb int out call cmp insl sbb out test pop sahf cli mov cli mov pop push lea clc mov mov dec mov xor imul dec and xor mov pop fdivl mov sub push jl cmc xchg xor mov jmp xor shrl jne sarb roll pop fsts mov call jge xor mov mov sbb cmp lds in dec adc in ja out adc movsb ret fistp lock xor xor jns mov cmp dec dec mov int sbb jbe dec jno roll cwtl sbb jns mov cmpsb xor inc (bad) mov sub ds in out mov mov xor cmp loope (bad) push mov jg and stc mov and adc jb (bad) push fcmovnbe adc dec cmp ret pop xor push lea lret mov jns xor in inc inc (bad) inc fwait push ret pop stc adc cwtl mov inc popa mov ds jae add jle idivb jl (bad) movsb repnz pop pop pop loope inc sbb mov xor or and repz jle lods out and cmpb divb lea addr16 test ljmp in and mov out (bad) sub lar jno sbb stos sar or fwait mov fs out into pop cmc into sub das and jo mov and inc out pop push leave mov mov adc dec cmpsb push xor repz pop sub aaa pop jmp or inc sub jbe loop fbstp mov push popl lods jge lcall or or scas jb sti lea int push stos mov mov xchg push ficompl sub in js popa (bad) cld hlt push gs dec and jge flds (bad) xor int3 mov pop cwtl cli pop pop mov pushf mov rcl push jecxz fucom xor fimul cli sbb lea jg push push movsl pop insb mov cld mov xchg mov inc jns stos pop sahf movsl sbb outsb mov repz (bad) jno es orl xchg adc push fwait ret or cmpsl out inc pushf aam xchg xlat jecxz pop xchg mov add sahf xchg mov (bad) xor sbb dec repz cmp arpl and push test ja repnz pop mov subl mov dec sbb shlb in iret scas inc daa loopne push iret mov sahf fs or in scas cltd inc (bad) mov add add (bad) mov xchg dec pop cwtl aaa in inc sbb dec xchg jge jl mov push pop xor adc popa mov jmp mov jb push and xchg jecxz cmc outsb nop push mov dec mov inc out movsb or push lret stc clc lahf repnz or mov fisubl sbb push pop stos imul std test sub or adc clc dec mov dec imul push jl lock stos jo jb push dec je pop mov or xchg fsubl push pop dec pop mov push ret inc popf push fisubrl repnz mov ljmp mov xor cmp or sbb mov push cmp inc gs push fidiv xlat xchg add and xchg imul clc jle inc and xchg and push sbb sub je pushf in xor mov jno xchg add push xor inc std mov add cmp lods in data16 jns add xor xchg in push push rolb bound sti push cld lods xchg cmp add adc inc dec repz cmpl fwait inc (bad) stos and sub cmp mov jmp lods fdivrs rcrl cmp xchg insb mov shrl leave icebp aas daa xor inc cmpsl pop pushf xchg and cltd (bad) mov mov and push adc (bad) js mov xor loopne std mov xor mov fidivl test nop pop (bad) int3 fwait aam lods jmp lds pop cmp xchg pop inc mov ja push sbb push xchg xchg aaa lods cmc and sarb cmp pop sbbl mov xchg push jb inc sub pop and aam mov popf mov xchg mov pop jb adc pop sub aad pusha out mov pop xor cltd test cmc out fbld jp cld cmp (bad) pusha and mov xchg cltd sub loope mov cmpsl daa fwait mov loope xor mov sbb mov sub pusha ficomp les and aas insb and jno sub sti jbe or xchg inc inc cmp cmpsb fnstsw icebp cltd or jns add ss xchg sahf adc in leave lds jbe and shrb inc loope ljmp mov ret ljmp insb pop push cmp les out in test mov jge lds das addr16 sbb add mov cmp mov aad es scas (bad) fadd bound aas inc stos sub shrl aam es inc push insl jge divl xor scas mov aam movsb shrb jp scas loop pop pusha sbb pop sbb mov or jge jo cmp dec pop sub imul out (bad) hlt call rcrb loop fsubrl push addr16 mov orb stos iret sub xchg js scas mov aad adc rorl fidivrl sbb fs (bad) jo jno inc jmp and xor mov nop jle leave rorb (bad) jbe xchg lods xlat or xchg mov repnz pop sarb and cmp in (bad) mov iret dec enter xchg scas sbb push mov rorl add loope les in and jno mov aad mov imul push fmul mov das sti and sarl test lea lds xor xchg fmuls loope in outsb push shl ss sar jp push fdivrs push shlb adc stos xchg sahf jne jns in jb add fisttp push mov xor xchg xchg fildll inc dec push sub xor popf mov ficom dec stos nop pop inc enter cmp sbb and lea dec xor int3 test fcmovb cmp or sbb (bad) fwait push push (bad) adc in xor inc jno ss roll adc add mov sar lahf mov push rorb clc and stos lock cmp loop bound sbb jle (bad) jecxz cmc in ret xchg ss hlt sahf mov push loopne mov (bad) pop mov fbstp repz push mov ret (bad) mov mov out pop das dec jmp pop int xor sar pushf ret pop loope cmpsb sbb adc and movsb dec push and inc aas dec rorl or test (bad) imull (bad) cmpsl movsl pop inc out (bad) in sub shrb jle dec arpl xchg je pop out lods in mov mov fidiv aad out in mov lret adc into sahf cmp test sbb stos lahf std call push cwtl jmp mov test jb add or pop nop jb addr16 sti and aam je sbb stos ret and jb mov add movl popa or cli stos stc inc roll or add movsb mov push cmpsb aad dec popa jmp mov jns mov das pop negl and leave pop mov lock in inc add adc dec add (bad) mov in cltd stos loopne int3 mov clc cmpb cmpl leave int3 enter cmp loopne movsl (bad) lea lret add mov out mov mov sti bound stos push or loopne xor and push sub mov dec cmp scas sub push cmp xlat outsb mov cmp in ds push sbb iret mov popa mov jle (bad) addr16 xchg enter into xchg outsl mov mov das add dec out mov es movl add mov jne lahf adc push enter mov pop xor movsl mov test popa lahf data16 fwait xlat or xor jno mov and xchg js fstps sbb das add xor mov add mov pop out pop sbb inc std jno push mov es cmp mov sbb mov hlt push inc mov mov out mov (bad) lret (bad) je int3 adc shll ss out xchg mov xchg ja jbe mov shr rolb aas js sbb add xchg push mov lock int or mov rcl cmp jle decb sbb cmp das dec push mov fcomi pop je imul cmp mov pop fcmovnu out and fildl dec jb ret sbb cwtl mov in ds mov xor and pop loope in movl or push add adc dec adc mov rolb jmp mov repz xor aaa es add adcb mov mov lock jbe int3 push (bad) in dec or sub int3 inc scas loopne out xchg push cmc push nop push in imul pop inc inc mov dec pop leave pushf test insb fbstp xlat mov (bad) int3 in iret cmp lcall addr16 call and pop push xchg jne scas pop and lds xor pop loopne loope inc test push mov inc aad sub (bad) xor mov xchg mov into scas pop mov add jmp or xchg sti in js or in inc cmpsl add inc test sub ds push add inc push sbbl fidivrl add loop sahf pop mov push dec test dec sbb jb xor xor cmpsl push mov inc mov cmpsb mov iret jnp push ja mov or das daa dec outsb add mov shll cmpsb enter subl icebp cmp and ret and mov shlb pop gs sub mov das (bad) ret dec xor mov jne jecxz in or add jp imul cwtl sbb lcall cld stos lds mov cmp fstl mov or sbb inc ret inc push and mov dec shrl fadd fs gs dec test sub jno xchg mov and sbb sbb and outsl inc sub adc adc xor lahf cmpsl xchg cmc mov sbb enter push jge bnd dec cmp lahf xor fsubs push xor jno ljmp sub inc adc pop clc push shrb xchg adc xor popa shrl or in mov fwait xchg movsb sbb std add mov jbe inc scas leave out pop sahf (bad) mov ljmp cs gs fdivrs mov out jbe push rorb ficompl outsl aaa int xchg sbb push callw inc inc popa movsl scas mov jp rcll dec dec test scas mov or mov andl push xchg rsm jnp cmpsl cltd pop (bad) mov inc or ljmp push movsb xor inc mov aad rclb add pop xlat pop test aam jle stos stc stc or hlt dec mov (bad) pop ja dec clc insl stc imul adc enter mov mov inc dec jne jne aam outsl scas sti pushf ds jnp dec sbb sub cmp cli popf mov add popa sub aas insl sbb add pop mov int clc jb sbb cmp sarb movsb xchg push gs outsl nop sti mov lahf push or adc mov pop sbb sbb pop adc push sbbb dec mov or movsb shrl sbb mov test jmp sub je rorb int3 dec mov or and sahf cmp or pop imul jmp andl int faddl jmp out mov stc xor not ljmp cmp fldt bound cmc (bad) mov pop adc sbb mov dec out lahf push aas mov jno sbb dec popf push pushf fnop or popa pop or out ss ret scas jmp jmp fs aas jecxz sub pop fistpll cmpb sbb pop imul les enter pop push ficoml cmpsb inc xor fnstenv sub adc inc fcmovnbe cmp loope sbb push xlat loop pop pop jmp fimull push clc js lret ds mov or xchg add movb mov xchg insb push or dec dec popf lcall xchg fdivrs ja fsubp pop xchg aad sbb xlat jns push pop outsl adc cmp dec sub subb add add add xchg shl sub lods sub enter add pop xor adc lock inc xor add adc (bad) add inc xlat ret (bad) js jbe pop pushf cmpsb cmc scas xor inc jecxz repz stc pushl std popf and cltd cltd pop pop adc xchg leave arpl ds cmp pop (bad) int3 inc push and mov or daa stos lods int jno mov cmc stos jge ja inc jp out or daa loopne cltd test or lret jnp (bad) std hlt mov ja xor fcompl pop outsl decb or add mov out testb inc pop fwait stc xchg aas cmp cmp jnp or arpl arpl aam mov rorb test xlat mov movsb xor mov (bad) jge sub push pop mov cmp das cwtl push pop adcl fistpll pop rcrl into stos add je add arpl jno adc loopne mov mov mov lods inc cmp aaa fdiv lods mov push push out ficoml add aam or sub or mov jae mov xorl sub mov mov lods mov cmp mov pop fisttpl scas mov bound in xor add push aad dec (bad) pop cmp sbb jmp cmc push cltd rorl adc outsl call xchg xchg push adc cmpsb (bad) inc je dec out add adc scas xchg cmp or pusha je or rclb data16 out push aam or outsl outsl popf ds and cltd mov mov cmp sbb insb mov xchg jbe scas or test mov arpl jns pusha lret sbb stos jecxz fcomps mov inc inc cli lds mov dec int3 cmpsb cmpsb add adc pop (bad) lock dec call or test fs in push lahf pop icebp popa mov mov xchg cwtl aas ret pop dec pop in pop jp xchg dec stos pop cmp or push lods jnp push loope daa mov arpl je mov es sub pop xlat or adc incl inc push push jecxz (bad) mov fstp push rorb pop inc lcall (bad) mov mov idivb mov sti (bad) bound data16 outsb jg adc mov xchg testl inc mov lahf in int ja jo fldl clc ret pop popa pushf out loopne arpl mov push cmpsb leave insl std pop shlb xchg fldenv test loopne xchg mov sti xchg pushf or ret aaa (bad) or lds mov aas nopl adc (bad) mov lods mov and and sbb mov mov mov push sbb inc fwait inc (bad) push jl cmpl mov push je jl jl pop insl fdivr popf mov out ret add fstpl mov mov outsl dec or scas sub pop add jns mov iret in or lods fnstsw xor test icebp nop push fs push and mov mov fsubrs add jo je pusha push mov outsb sub lock stos addr16 xchg dec add imul pop adc cmp mov cmp jmp cmpsb es inc xchg mov xchg pop mov mov pop (bad) mov pushw out and mov jbe mov aad sbb test jle push inc fldcw in jne add xchg hlt inc mov mov cmp push cmp add mov push and push pop lcall notb mov pop jg sub rcl sub test lahf repz jne cmp js inc lret (bad) test bound lret mov adc lock std (bad) je xchg and les sub dec lcall js es js in inc inc scas (bad) inc pop in ret jae xchg push push lret pop call fisttp fwait stos sub (bad) mov xchg popf scas popf aad sbb imul dec stos mov and dec fimull in inc xchg aad push xchg (bad) aaa mov mov xchg mov jo lock sahf inc ja sub insl dec sbbl sub jmp pop (bad) mov jl mov jae cmp or mov dec (bad) mov ret pop hlt (bad) repnz outsl jecxz mov into dec and divl push dec out testb xchg in xchg imul sub fmull lcall xchg push das lret jnp dec jo cli sti adc cltd outsl (bad) fs jl xchg push xor sub rclb daa xchg mov ret or mov out je fwait push add mov subb inc (bad) repnz mov mov jmp mov sahf sarb dec xchg and xor pop addr16 mov fsubl les scas push pop adc ja scas int std cmpsl mov lcall or inc pop ret dec andl clc clc stos sbb xchg jl leavew lds xchg dec jno hlt ret sbb loope add arpl insl or shll add push ret leave dec lds push data16 add js sbb sub rclb test aas fldt outsb js data16 xor jbe dec std shr push ret fildl pop mov idivb fs xchg pop mov inc dec test sub mov mov jp (bad) gs xlat fwait mov cmp gs fldenv mov pushf pop cmp pushf scas cs adc mov movb loopne lds das add sub pop lea push sub inc xchg or (bad) sub lret dec dec sti pop lret add jp jb insb das push pop fcomps or cld adc xor icebp icebp jnp sub fcoml aad mov sbb jo jg sbb adc inc mov and cli mov dec mov in cmp sbb lahf mov (bad) jg push lods mov adc popa nop mov rol jbe fnstsw push div or imul push add cwtl data16 add cmp ffreep push and add mov (bad) or lods in mov les lods adc fidivrl cmpsb and mov and cmpsl insb adc pop sub pusha scas dec mov call scas inc pushf sub outsb cmp sbb bound cmp cmpsb and clc pop loop loopne loopne cmp mov pop mov jo sbb idiv rol iret pop pop xchg pop int3 mov xchg (bad) cmp mov rorl (bad) mov (bad) xchg cmp mov push les movsl xor cmp mov in dec or cs int test movsb movsb mov fcmovnb mov jnp ret call push fcmovnb scas dec inc movsl push cmp sarl lcall xor fistp aam std pop cmp daa popa clc ljmp pop adc and pop adc (bad) dec (bad) pushf adc push mul pusha (bad) dec mov addl xchg aam stos adcl xor add loope stos (bad) push aaa dec mov loope (bad) xor adc and cmp mov mov (bad) aad dec iret cmpsl add sarb lret lock inc jne push push in jle sbb call pop lods inc inc mov mov notb (bad) cmpsl popf adc orb negb xlat mov mov inc cli scas shl push mov mov xor xchg dec cmpsb pop push into sub js test mov and sahf add sbb out adc out xchg and das fdivrs out pushf lcall jnp sbb xchg xor push sbb orb adcl xchg mov mov push enter shlb stos daa leave test pop xchg inc inc or (bad) cmc mov push inc loopne push and mov std arpl dec rcr push fisttpl movsl ljmp setg test loope cltd jbe jb fstpl hlt xor xor add repz jp dec in mov pop (bad) jmp mov movsl mov mov and mov and test push out rcll and outsl inc sub fwait xchg rclb test mov mov push push imul test mov push sti movsl mov test push xchg sarl mov push push sahf dec mov mov int mov mov xor add jns push and ja fnstcw fld jno out fidivrl data16 mov ret mov and pop jns pushf std outsl nop test incb push lret dec xchg mov pop icebp and xchg mov or rolb cmp or mov mov imull jge cmp push xor sub pop aad pop pop ja int xchg adcb cmp scas int inc ljmp adc arpl and ficompl pop insb or fs call jo adc cmp loopne repnz push xchg mov and ret push in mov mov jecxz (bad) rcl outsl loop and iret mov and sahf movsb xchg ss push int3 push mov mov inc je inc (bad) stc lret out loop push add (bad) std mov sbbl xor mov push mov rorb dec les adc test pop popa dec jp sub pop ss and or (bad) loop xchg mov add mov mov into fild in sarb inc aad lods inc enter push cmp jmp int (bad) inc aaa add xor (bad) std rcr loop jecxz in xchg mov fwait popa xor lahf js js adc sbb sub test sbb movsb aam dec sti and inc or sbb push cmp xor xchg sarb les lock push cmpsl adc loop sbb imul in in cmp pop cmp das add stos pop (bad) aaa lahf bound push push outsb sub je rcl cvtpi2ps sbb mov mov rcrl mov cmp inc loop inc fadds push or xchg pop or jecxz or je sbb sti xor sbb mov jmp mov loopne sbb (bad) loopne or iret push cmp (bad) or xchg sbb jg sti ret pop imul movsl daa xor lods pop pushf loope ds sbb mov lds and scas adc bound inc push imul or xor push loope cmp or popa scas frstor inc xor out dec push push inc xchg (bad) imul lods test pop adc jbe stos sub jae out jg or sbbb aas or mov mov pop fldt and jmp mov jg rclb pop aam jl or add cmp push shll ret mov pop icebp in push lret or add mov (bad) (bad) repnz testl mov pop ror fadds push inc pop push mov or xchg mov inc dec pushf call inc push (bad) xlat mov xchg and lds and pop pop (bad) lea test mov int sar out out pop mov mov js mov dec out xchg dec ja lods jl (bad) pop xor inc out shlb xchg out fwait push in jnp inc js sbb enter sbb xchg or insb mov ficom sahf sbb jg in or mov mov fcomps mov ret cmpl out pop xchg mov movsb aaa js test inc cmp stos cmp movsb inc cmp push cmp cwtl mov adc sbb inc sub mov cmp cmpsb stos nop sub pop push dec aam mov imul ja hlt mov push fs mov cltd push inc adc loopne mov in or push add jo xlat inc (bad) clc loopne inc pop pop lods dec adc or push push sub xor nop mov test pop (bad) jno add sub xor je mov nop jp imul mov inc aas test mov dec mov sub jns rcrl push cmp jmp lds push jo push cmp pop push lret xor sub adc loopne xchg mov mov ret mov mov mov xchg jg scas test movsb orl add inc loopne xor jae mov lahf inc jmp pop dec andnps mov push lods sbb lahf jbe jbe or lods std sarb push push cltd leave xchg add scas clc pop jnp (bad) les ficom push jmp mov xchg fs jne ljmp gs les cmp pop (bad) mov push jnp ds pop sbb dec and arpl mov mov vmwrite fdivrl push rcr call or and sbb rorl jb popf ror das push das das jge push sbb dec test rol pop jl inc sahf sbb jnp,pn inc xchg jmp dec movsl pop test fwait jp xchg xchg cmp xchg add in stos adc jo push int mov (bad) or stc mov jns out insl mulb mov xorl out xor xchg stc (bad) (bad) rorl xlat mov xchg dec loop adc das add or cs imul pop mov mov fldt nop sub scas mov push imul mov jecxz lret inc imul add or (bad) xor mov cmp into inc mov bound sub mov fwait (bad) imul push dec and pushf xchg pop (bad) movsb mov mov adc mov (bad) push pushf clc inc or ljmp loope and add arpl pop call loopne lea (bad) dec (bad) or or pop rorl mov pop sarb cld inc jmp and jmp insl (bad) mov xchg mov lret dec xchg (bad) loope add cmp mov leave call jecxz test jg aas idivb xor int repnz xchg out mov jl dec (bad) call sbb rorb stc pushf cmc mov mov adc dec sahf mov test pop stos dec imul mov pop xchg pop jo mov jg mov lcall mov push pop cmpsl lret jmp lea cmpsb imul and dec jp jno and inc adc repnz jg xchg loop movsb push aaa outsb add pop mov xchg pop xor cmc push (bad) aad rolb arpl jg rclb mov test sbb sbb jns out jmp test sbb repz inc in mov mulb sbb cwtl fdivr push mov fcoms ljmp enter or ljmp shll mov mov fwait cltd push pop sub and cmp in jne and cli dec enter je sub test hlt mov sbb ret mov sub cmpsl and cmpsb push lea jno les repz gs lods cmp and dec push addl xor sbb fnstcw jno adc sbb mov stc cltd push movsb testb mov jp popf fisttp jmp icebp jmp and xor sub add xor push in test nop and psrld adc int nop dec adc lret std aaa push or fdiv movl jle xorb add lock rol push xor in lahf mov inc and fiaddl cmc loop ljmp cld repnz clc fwait int or test ja iret xchg fistpl rcrl aaa clc mov jecxz xchg mov aaa aas aas sbb add mov (bad) rcll jne arpl sub add cwtl ds xlat subb sarb dec loop test inc jmp cmp dec jmp aam ss notb xor dec jns xchg add pusha mov xchg cltd (bad) and mov je or imulb push mov and inc or lret mov cli adc mov or dec pop ficomp mov push xor pop push dec xor int3 cltd out mov mov scas (bad) call nop mov and imulb xchg pusha sbb push inc or mov cmc test mov inc jbe cmpsl adc mov cmp add inc or outsb loop mov shr inc dec test adc sub jns xchg das stos xchg sbb addl cmc mov inc mov fild adc sbb mov pop iret pusha xchg out sbb out js mov pop js in mov outsb xor hlt xchg jns inc add loopne lret and test mov sub aas jb fisttp pop ss sub divl sub mov insl fistpl outsl cs int3 fbstp stc dec lea clc pop fidivr aam mov clc mov push repz pop lds bound sbb mov mov mov int3 in icebp iret push or jecxz xchg test mov js xchg xchg xchg (bad) test roll xor into test ds push outsb (bad) cwtl jo cmc dec outsb jnp les movsb rcl xchg dec addr16 ret jbe mov aas addl addb aas jnp pop jecxz cwtl popa hlt xchg scas fisubrl loop xchg or imul (bad) outsl push pop mov decb add xchg je cmp fnsave pop ret aas adc into and loop jnp (bad) mov clc add ds out aam fisubl mov push push (bad) enter inc mov pop lds das les adc imul inc add push mov adc dec subb pop push daa xor mov jne xor out (bad) sbb fwait and sbb mov jo xchg enter xchg aam lods out adc data16 (bad) and rcrb mov (bad) adc jecxz xchg in and inc or lods dec out lcall push xor cld sub push loop mov pop cld sub (bad) in fistpl imul cmp cmp adc cmp ds adc mov cmc outsb lahf xchg addr16 jae lock test fs lods (bad) lods ret add stc cmc mov sahf jmp fimul jmp sbb lahf and jmp sub sarl (bad) inc mov mov out dec xchg es push stos loope fwait mul loopne add sub xchg jnp lods gs push dec (bad) enter lods add sbb inc jbe lods fisttp (bad) adc xor xlat mov mov add push mov or jge adc fs arpl pop mov out movsl push lea dec lds cmp test nopl fsubrs aas or loope jno xor push mov cmp fiaddl flds mov add or lods inc mov cmp push push outsl mov fldl xor idivl xor repz repnz jmp enter (bad) les out sti pop sbb mov pop cli and jg movsb mov push arpl fs addr16 push jno js cltd cmp pop dec dec rcrb and pusha insb jp test add fsubl bndstx mov or pop xchg sub xorb dec enter aam sub hlt stc out (bad) pop mov es arpl mov sbb add mov mov fucomi faddp mov (bad) lret xor loope sub inc shrl lods jl mov and push or shlb cmp outsb fwait sbb pop pop pop es lods lock aaa jbe dec pop int pop xor jb fs les sub fnstsw and push add and (bad) stc cli dec leave xlat cmpsl mov sahf xor adc test push push test insl mov leave das xlat adc mov (bad) lea gs sbbb adc add inc lcall or mov sti or out in adc test mov stos pop pop repz lahf sub jbe cld mov lcall xchg mov inc stos pusha call aam and cmp xchg addl dec push inc jg loopne insb or mov es lds mov cs push (bad) cli inc fwait dec insb outsl arpl popa sbb fs lds xchg fistl xchg add fcmovb (bad) hlt pusha mov repnz mov mov sub (bad) out outsb mov addr16 data16 das std mov pop insb fisttpl mov dec sub xchg jl and repnz ficomp dec xchg mov mov dec lock in sbb add sub xchg mov out cmp movsl enter push pop fdivr sub inc scas add inc ret fs add adc xchg outsl sub xchg (bad) xor iret sahf pop fidivl sbb (bad) fistpll lcall outsl pop sub push xchg arpl lods out mov aad mov test imul and imul cmp mul mov mov ds scas cmp out cltd xchg dec iret push ret fbstp and pop std jae gs lahf pushf dec jns aam cmp inc loopne sub sbbb pusha adc test and jne pop pop xlat pop (bad) jnp divb mov fidivrl dec pop jne jmp mov and and mov insb jnp cmp adc cmc pop sbb xor fdivs repz or aas mov jecxz jns (bad) mov roll lds mov mov push mov (bad) jmp cmpsb push mov or (bad) lock jecxz aas push xor mov inc pop cmp inc daa or pop jbe xor xchg pop and mov outsl xchg inc and add outsb pop repz push stos pop xchg or stc enter mov movsb ja,pn dec fs dec (bad) mov in movsl leave loope iret call cmp (bad) dec mov test sbb add sbb sti insl push mov mov pop dec sub insl mov aaa (bad) ljmp xchg mov lods adc jge out pop clc xor lods xchg mov or xor insb inc mov out mov xor imul nop shrb fdiv or jle adc loope push add adc sub inc lahf dec adc repnz ret fdivrs pop jne ljmp inc in cmpsl dec test push inc dec mov out imul jge xor sub fwait and gs xchg jno xor add pop pop jmp lcall pop scas clc cmp mov dec aaa xchg fdivrl xor ret cmp scas cwtl pop sbb dec stc notb test jne mov xchg arpl sbb jmp sti mov scas pop mov cmpsb out (bad) push stc iret outsl jno imulb arpl cmp lret sahf pop xor sarb (bad) mov mov arpl int3 pushf (bad) movb jne leave or jno fstl pop jge jecxz js icebp jmp xchg lret loope cli push pushf ret lock adc mov mov pop add mov (bad) rcrl sahf inc ret mov mov mov outsl sbb pop mov pop lcall push (bad) sbb mov sbb add pop fstpt cmp jl jbe enter aam adc xchg adc clc push pop cmpsl sbb repz cmp push test mov jno xor adc xchg pop lods jbe xchg mov divb sbb jp iret test daa mov jae xchg push stc cld inc pop push pop (bad) imul lock mov aaa lods sub cs jnp mov push das sbb pop sti ljmp stos sbb ja (bad) out mov (bad) cmp pushf lret idiv out in inc cli mov sti xchg sbb mov mov sbb aam pushf push icebp and or idiv loop jmp test cmp push ljmp insb mov jbe push cmp dec dec inc inc jecxz mov pop stos outsb push into fwait mov out inc andb sahf aad sahf data16 add or outsl cwtl test adc sub dec xor dec cs jge (bad) icebp xlat push xchg push push dec dec lret jnp or mov xorl test dec cmpsb add pop mov xchg leave sbb jecxz je and adc test ss sbb and leave pop das adc xor je or sbb jo insl imul sub pop pop sbb add dec pop xlat cmpl mov xor ds out mov aad mov jl sub or lret popa xchg xor pop lods xchg imul xor fwait test adc mov arpl in flds add xlat jo mov jp push loop xchg sub add xchg cs loope loopne cmpsb cmp andl jge sahf mov dec jae push out test push lret fwait ret pop test int3 pop sub les mov sub or pop les push xchg or sub jge sbb sbb or jae xor cmp mov lock cmpsl inc cmpsb lods push jle clc push inc leave popf loope sub xor mov mov xchg dec xor inc cmp int3 test clc dec jnp fsubrl push pop dec stos imul imul push xchg sti push stos or xor sub cmp mov pop dec or push inc dec das adc mov outsb incb jbe adc push addl cltd jne sbb xchg or lahf aam bound push fcomps push push adc xor ljmp xchg aad inc and push pop add aas sub fimull paddsb clc xchg (bad) outsl add inc outsb jg push shr out push mov xor in adc sbb repnz cmp mov lods outsb lret dec lcall cmp (bad) mov dec sub mov and xchg in cmp loopne pop fwait inc cltd negl adc mov pop pusha ret lret add sbb xor and int3 aad sub test sti pop jmp fmull push out cld std negl jecxz add pop sub mov mov mov add pushf mov fdivs mov aas push xchg rcrl adcl mov test sub jo in rcll push imul pop test sarl (bad) mov pushf mov xchg outsl jge jns sbb stos xor fisttpll push cli sarb inc pop mov push mov fcmovnb fisttpl sub jnp pop ja movsb outsb xchg jo cmp push cmpsl mov aad or jecxz push dec adc popa pushf out xchg mulps adc sbb mulps setg popf cld lcall leave jae stos or cmp dec push out jb cmp jmp cmp cmp cmc xchg add les ds pop and jno hlt mov std (bad) loope xchg loopne pop out rcrb movsb (bad) mov mov push adcb call or (bad) mov mov nop mov je adc add test push lcall call and push out or pop push add push cmpsb mov mov inc cltd stos out mov sbb xlat inc mov pushf jmp sub sbb and cltd cwtl es sub pop jae xchg mov nop cmp repz or sahf cmp rol xchg shrb das xchg pop aam mov pop push fcmovb mulb jmp sbb jo ds and (bad) lods and xchg aam arpl or sub jne fsubl pop in aaa outsl add pop scas add xor cmpsl aad ret mov pop sbb adc pop jae pminsw adc xor sarl hlt xor stos repz fistl int add push cmp cmp mov mov (bad) fcoml inc jl fisttp sbb shr dec fucomip dec cmpsb dec (bad) inc add loop icebp or and sbb aas cmp sti xchg sar fidivl add bnd push fwait sub cmpsl push adc xor mov xor aam mov js pop clc mov aas mov dec mov cmp aam mov incl (bad) ljmp fisttpl mov sbb iret xor fldl cmp pop mov loope push adc pop mov (bad) negl jg lret mov inc xor inc mov imul xor xor cwtl push push fistpl cs xor push fnsave (bad) pop (bad) jmp imulb in mov dec sbb sbb jb xor sbb sub dec push mov jnp mov in test cltd nop mov repnz mov loop lahf fistpl or inc jno popa stos (bad) je notb push push inc rclb push dec or pop cmp scas test out or mov and xor sub inc pop js rcrl int3 adc insb push lret lds mov sub pop fnsave push push sahf (bad) jno pop inc sbb jne cmp sbb push je call and rcll xor pushf sahf enter jge movsb sub dec scas out (bad) xchg ds (bad) aaa aam test mov movsl jo es push mov or mov ds stos in and mov es sub inc adcl lret or jbe lods ret fistpl sbb mov int fimull xchg out pop mov lods std aaa mov ds cld or pop les adc push (bad) insl ljmp arpl scas repz stos repz cmp scas xchg adc inc jge cmp aam scas xchg or add loopne and loop mov inc jae cmp dec insb push loopne add inc and fist aad bnd xorb out sub cmp mov cmc insb mov xchg stos xlat imul sbb dec mov mov sbb mov data16 icebp jno test mov xchg xor pop in fidiv repnz sti lds sub jne test or and sub mov mov jae adc cmp cmp adc stos xchg dec adc rcrl dec adc aaa movsl insb lods cld movsb xor daa inc imul or enter mov mov popa xchg mov lahf mov or adc jg test out cmp shrl in xlat push push jge lods int jmp (bad) xor pop jno lahf rcl xchg mov add fwait hlt cmp test mov (bad) push (bad) jmp xlat out mov sbb into fwait je addr16 out or mov inc jbe dec inc sbb popa stc scas (bad) mov loopne lcall loopne mov push mov mov call rorb mov xchg fldl2t inc xchg mov xor inc xchg inc roll mov inc ficom cli das cmp aad fcoms test scas cmp pop xor (bad) dec cmp sbb xchg loopne aaa sub pop bound dec sbb cmp adcl cmc xor jg mov imul sub pop jns aaa jbe xchg (bad) sbb sbb stos adc shlb push (bad) xor push mov cmp push (bad) add xor xchg add test popa mov fwait dec and xchg pop cld and mov stos inc mov push sub ja jae sub into mov push inc mov cmp mov movsb mov add and and jne mov mov pcmpeqd xchg rorl pop xchg pop arpl mov mov adc sub (bad) ljmp and mov mov dec lret fnstenv out cmc iret mov mov cmp mov cmp ficomp imul add xchg ret test aas cmp or fstp mov jo cmp les dec mov test push (bad) idivb push lcall jnp and dec mov loopne xchg mov or mov inc (bad) jnp (bad) mulb test cmp pusha mov sbb aaa insl jno (bad) leave dec cmp xor dec (bad) arpl test out fstpl cs push pop or push mov mov pop (bad) int mov aaa jmp push pop rorb push shll lods xlat fwait mov into lock or les mov dec jb mov pop outsl inc aas lahf push adc andl push into js,pn or dec dec push lret stc sub inc nop jns movsl adc sbb mov addr16 dec adc add aad dec (bad) mov roll push mov pop (bad) in fwait sbb jg inc dec les shl jge mov xchg inc pushf xchg xor or push out aad push or sbb leave sti sar and jge inc fistpl mov out sub stos mov pop mov mov or imulb loop out enter stos outsl bound pop shrl and lods pop mov insb int fs sahf and rolb cwtl push push inc xchg fwait pop mov xchg stos sbb sti mov sbb sti mov pop inc test adc clc and mov pop fcomps push sbb dec lret js repnz sbb xchg push out push lret sub fnstenv pop sbb cltd std aam push (bad) xor gs out sub aas mov push (bad) cltd in jne insb pop mov mov mov push leave (bad) (bad) or xor mov jmp mov sbb daa mov mov shrb repnz inc jp dec stos mov sbb adc scas int3 mov lods mov adc cmp push adc fcoms cmc push xchg cs daa int lahf es shrl (bad) fistpll dec fidiv push mov adc mov sub addr16 xchg jbe (bad) jo cmp push add repz fisubr out fwait mov jae loopne dec inc sti frstor movsl push outsb sbb ret out mov sbb pusha jb jge xchg aad negl cmp das jne or pop std les (bad) cli cmp push inc push aas in repnz notb xchg sti stc or (bad) inc and mov mov repz fisub push mov ljmp sahf mov mov fwait into scas jnp adc imul roll xor cmp inc js sbb hlt out sti pushf call aaa shlb jne or mov mov jb mov insb fldt fs inc dec dec cmc mov push inc (bad) aas inc fmuls pop and dec fmul mov push xor (bad) in push or inc ja imul imul stc lahf test sub fisttp xchg imul mov inc sbb (bad) addr16 mov sti out imul cltd aam ljmp movsb jne pop xchg arpl data16 mov (bad) je inc test mov int3 pop subb push mov sub inc int3 jb dec lds pop mov ficomp (bad) fwait in fistp fmul sti xchg sbb outsl sti push cmp jge mov aas sub push movsl xor push sbb mov mov ficom repnz dec adc xorb loopne stos hlt ds push (bad) push inc inc mov sbb dec and pop adc je xor nop jle lret and outsb sti leave dec pushf test mov outsl jo lahf int3 xchg dec fmul test ret xor or test dec and or dec leave hlt repz xchg sbb sub call lea cmp xor ds fisubl mov and loopne add and adc sbb xchg (bad) lock and sub pop mov movsl sbb and ljmp stos add and loope rcr mov icebp lods pop xchg cmc or negb (bad) rolb cs add adc icebp cltd adc lahf into mov (bad) jbe pop sbb pushf or popf lods mov cmp mov pop aaa ret mov stos enter jo and jae pop mov mov insb lret jp push mov repz pop roll inc repnz xor dec pop pop iret mov es mov jno mov mov jle pop jecxz jl inc out test add outsb push iret xor ljmp fldt jne adc int3 ja (bad) arpl jb rcrb ficoml mov mov test mov inc pop adc pop les push jo cmp cmpsb repnz or inc popa mov push sub xlat jae stos mov test cwtl dec test daa scas xchg mov xchg mov pop (bad) pop xchg pop incl test inc inc inc xor jecxz (bad) jp mov lods neg pop (bad) adc xchg int3 pop (bad) jmp fwait pop inc cmp test popa fadd mov push iret out les xor xor sarb pushf inc das in mov loopne pop adc test test fsubrl push jne div jl mov in push pop or aas add xor ljmp pop ret stos inc xor push cmovb and xor (bad) mov out aam mov sti and push (bad) nop lcall pop dec scas addb ja dec mov js cltd fisubl push jp aad mov inc xchg cmp in adc sbb sub mov push mov adc scas iret hlt add jo push aad jo fwait in jecxz negl or scas std and sub sub dec and enter sti or outsl jns les push ds mov repz js test add inc pop arpl ret cwtl aam inc das test loop pop lds dec or inc (bad) adc or inc push loope add jnp jp mov int pop mov sbbl cmp inc cmp lahf lcall xor insl push dec and pop enter pop je fstps repz test jnp dec movsb scas mov sub call push (bad) fisttp and cmpsl fimull fs rcl lods insl out mov (bad) nop xchg jnp sbb popa mov out scas mov mov and cmp pop inc lahf mov sahf jecxz push or mov dec icebp cmc fisubl pop bswap out scas mov jmp jle rorb pop push shl ss fwait jge push test insl xchg fucomip lds pop dec in fsubrs jmp pop dec mov repz mov cmp add mov aad cltd lret lods and cmpsl out lcall cs adc (bad) pop cmp mov lahf fsubrs fwait mov in es xor push and adc mov adc sub push dec je sbb (bad) cld xchg add dec jp adc pop dec in xor mov cltd add cmc insl popa pushf mov and addl cltd push adc sbb mov push ds pcmpeqb bound imul mov int3 lret pop out pop sub jl arpl ljmp inc je xor jle cmp fisubrl adc fwait push lahf add jp in push push inc mov push sbb push adc cmp push jecxz mov dec dec pop test cltd (bad) add (bad) aad mov stos test pop mov add (bad) sbb cmp xchg sbb ret scas dec ret xchg lea movsl daa adc push aam sub fsubrl test dec xchg mov xchg inc jle mov inc dec pop jnp or dec cli inc push xorl push inc fs cmp adc mov in xchg cmp into loope aas mov push stc adc outsl cmpsl lahf mov xchg mov popl jne inc pushf movsl adc lahf movsl fistpll in (bad) lahf addl push and xor fwait push jmp popa xor dec ret adc push repz or sbb cmp add (bad) jo and xchg jmp adcb mov faddl ds cwtl mov addr16 add jle mov (bad) jns ret fsubrl mov inc data16 stos and add ret dec and arpl adc repnz fistl lret mov xor cmp dec jnp jo pop imul stc mov inc fs fdivp fdivl cmp mov int test in push sbb stos cli js cmc nop sbb pop fwait jecxz neg dec je cmpsl test adc mov insb aas cmp add stc push ucomiss and fxtract adc xchg mov daa xlat cmc jbe fnsave iret sahf inc mov jge dec xor mov inc cld push pop stos cmpsl das andl aas shll outsl jge mov call mov push pop push cwtl sahf int sbb je fild clc or xchg add mov pop test pushf arpl scas sbb pop movsl xor dec or stos es leave mov inc pop cs (bad) mov lret je cmpsl ljmp lea out sbb pop push add sub in ja into jmp xchg xor add and jnp fsts add inc and cmp test loop mov jne gs add dec adc dec mov in cmp add pop sub cld arpl mov sub sub aas (bad) lock dec fmulp je divl lahf in sub mov and jp pop stos cmp fimull fldcw decb sbb xor lods fldenv sbb dec (bad) xor mov leave loop faddl add scas movsl les cmp inc cmpsl push or and hlt sub stos (bad) xchg xor xchg ret push sahf cs mov into jmp or mov (bad) mov dec mov add mov pop mov mov xchg int3 shrl jne lods loope or and sbb cltd (bad) and sbb out lea push push iret aad (bad) (bad) mov jp dec xchg adc xor inc insl add aad mov clc push out mov mov loope sti jge (bad) out in addl dec fst inc xor ret arpl pushf lock shlb jle mov xor mov (bad) cmc ss and imul xchg xchg sbb push scas test mov dec sbb test rcll push sbb aad decl aam mov icebp sbb ja cli jg mov mov ja jmp addr16 cmp inc fucompp cmpsl sbb xor shrb mov jl push pop out push xchg int3 cmp mov jl cmp adcl enter fabs out jbe neg scas hlt ret ss push outsb jo in repz mov (bad) sub jbe xor xor sbbb mov dec cmpsl jge jae sbb cmp imul pop mov je sahf inc mov mov and jns dec icebp leave xchg push fcomi cmpsb xor xor lods dec adc in iret popa hlt lock sub xor push push mov cmp dec mov jns pop rcll orl lahf arpl fldenv pop mov popa (bad) dec out adc xchg mov pop or push jo gs mov mov sbb pop nop xchg lea dec cmp lcall xlat ret (bad) lret outsb push mov insb ljmp stc mov xor (bad) xchg push adc sbb out popf jns cli call cmp xlat jne jmp xor and sbb or lods faddl cmp dec out ds mov out adc popf es push or adc inc mov cmp jp (bad) or mov adc movsb movsl mov enter sub lret loope xlat lahf xchg dec cmc lds and gs cmp mov in jmp sub loopne push nop adc lret les inc bound xchg inc testb lods mov inc mov adc add les jne xorb mov sahf hlt rcll dec mov insb fwait jge imulb fmul cmp std push jne into popa sbb pop (bad) repz (bad) jns rorl adc (bad) sbb push rcrl popa nop leave dec inc push push mov xchg mov or es outsl stos ret fstpt ret add and lret stc jno mov aaa (bad) mov mov test inc xor xchg mov ror into mov jp jge nop mov aad pop xchg sub xchg stc je push jmp push add mov jecxz pop sbb call sub sbb orb jo xor shlb ret fs inc sub cs in stc outsb adc pop icebp stos add outsb push cmp dec push mov nop pop ret in cmp ud1 sub adc mov jp lret jns cwtl and pop sahf decb or push lods mov (bad) shrl xorl mov push sti xor push adc jns or sub jecxz out xor mov add xchg fimull inc jl loopne fisttp sahf pop or orl push push fs or cmpsb call sbb aaa lock mov ret mov stc mov stos movb lahf decb xchg push popf inc jb sbb rcrl mov jg loope ja (bad) sub pushf in rcrl stos push dec or cmp into mov adc fs xchg add ret clc in cmp mov push orl xor cmpsl xchg sub cmp outsl pop lea sbb fcmovu insl stos mov pop xchg inc mov sbb xlat movsb jmp and push push sbb mov push ror pop aas in int3 imul xchg xor sbb insb popa arpl (bad) sbb mov jns mov fs bound mov mov fs pop pop bswap and push push scas arpl fistpll inc mov add dec and int3 (bad) jne aad cld lds icebp lods mov mov jne nop adc js pop push scas and sbb js mov ja rcr int3 lret (bad) ljmp cltd pop pop or mov sti xchg jecxz mov (bad) sti notb cli mov mov xchg gs sbb ret sub popf push scas push mov push dec imul push push fcomps rcll xchg pop push jge dec or gs out or repnz sbb jns mov push pop cmp rol jl dec dec add dec and out pusha pop jp (bad) xchg shl arpl loop jl imul int3 push inc pusha dec pop mov ds daa leave mov xor lds jecxz cltd dec mov pop push notl aad inc pop adc (bad) mov xchg xor jnp mov and clc xchg push test enter xorb cmp enter faddl orb (bad) cmpsb and lahf scas mov mov sub stos xchg mov aam nop mov pop popa push popf outsl ja push and sub lea xor xchg mov dec mov dec cwtl sbb in shll lea (bad) cmp pop stos add jns sbbl jge add (bad) xor jl cmp movsb (bad) sub fisttp dec xchg ror int outsb sbb jecxz xor or stos jle mov push fwait ja cmp mov inc dec and sbb ljmp and shrl mov mov mov orb inc movl mov add cltd sbb adc fisttpl (bad) stc out push or push push fsubl into sub nop mov gs lahf dec or cmpsl jge cmovae add sub xor adc add jge jg dec sbb mov mov outsl fimull out sub and sub daa jecxz test fildll cmpl loopne fild push roll sub cmpsl push pushf call cmc push sub addl (bad) (bad) and fildl (bad) mov push test jae addr16 xchg imul test es adc xor pushf int3 mov push mov jne mov call xchg imul dec sarb aad (bad) sbb cwtl insl int3 scas in loope rorb cmp pop or mov fs out dec inc fdiv jecxz test and insl es mov movsl scas dec add mov bound testl fistpll dec jb stc mov mov das movsl mov fistp jmp jo pop out (bad) add inc mov in stc or sub lahf test mov lcall loop cmp or inc xchg xorb add ret aas and dec push outsl shll test in xor shrb jnp shr scas add mov aaa jp inc (bad) cli pop ljmp push xchg mov adc dec mov xchg rorb add jns push or jnp dec iret repz jmp (bad) fs adc loope loope (bad) adc push sbb cmpsb jns stc cmp lret jns fidivl test xor sbb jp adc out aad mul pop cmpl stos dec das add sbb jecxz (bad) mov cwtl clc test and scas sub ljmp pop adc dec das ds lea fcmovnbe or mov pop in sbb ss lods ja sub cmpsb dec nop mov nop js jmp mov cmp aas jg popf into pop sahf xchg cltd xchg sarb das xor inc es mov out adc mov int3 cmpsb lcall inc dec push outsl mov xchg or leave pop mov push into mov mov jmp enter out dec lea or imul lcall xchg (bad) (bad) sbb insl enter call pushf xlat cwtl (bad) and ds mov pop (bad) mov insb ret cmc unpcklps mov cmp jmp adc popa mov xchg sub add cmp xchg inc bnd jg into mov nop xor mov test leave inc sub and stos outsb inc test xchg into push sbb fstl push das pop mov loop mov adc pop mov jecxz iret cltd fwait dec in in fs andl into jmp arpl dec mov insl cmp iret daa std nop and pop lret push dec sbb and imul (bad) cmp in mov faddp (bad) push xchg mov push xchg jge xchg inc leave hlt cmc xchg scas mov out jb movsb fidivl gs inc test fwait xchg (bad) xor xor stos adc or and dec add xchg call push sbb test (bad) mov sub clc lods loop jecxz mov jl push jb cld ret adc loope in xor jo jae adc cmp add test fxam lods and clc jnp push dec lea xlat or mov dec lcall dec push or cmp xchg cmp cmpsb pop mov jl mov adcl mov cmc push inc loope mov out xor mov pop (bad) shrl mov int3 mov or insl sub cwtl add push pushf mov sbb scas xchg jle or repz addr16 pop (bad) cmp jnp mov repz rol xchg dec (bad) cmc arpl stc stos pop jne push int scas push push mov out rcrb (bad) hlt aad test mov fdivrl cmc sbb sbb add mov add jmp mov pop sub mull adc clc enter and stos mov sarb or add pop sub push adc cmp mov jnp mov jecxz or fwait push mov sahf xchg pop and icebp sti xchg int pop jg mov insl sbb jns jmp add fwait lds push push xor cmp push xchg pop test test xor pop outsb orb or or mov mov push out fldt and cli mov aas cmp sub sub int3 or sub leave mov std sub nop mov jp xchg shll bound imul add arpl out and test cmp leave cmp sbb out call inc iret push dec call cli push adc aas jae lods mov shr xchg ja or inc sub cs sbb push and nop cmp in push cmpsb es cltd dec (bad) xor ret sbb jge icebp js and xlat mov fucomi les mov into ja rol mov sbb fldl sarl sbb cli pmullw lcall pop xchg out xchg mov roll rcrl in mov ficompl sub icebp and inc hlt cwtl aam cmp push dec xor cmp sub out sub jmp fbld pop adc or dec (bad) aas popa (bad) jecxz test dec addb add add leave movsl push mov sbb cmp mov pusha nop fwait aad jmp pop inc stos inc or sbb cmpsl mov inc jno cmp pusha mov and std adc push std adc mov in test adc loopne rcll xor pop (bad) cltd inc jae rorl repnz xchg test pop cli inc sub mov mov sub lcall xor mov aas hlt push bound and mov nop adc in pop dec sbb mov xchg insb cmp xchg sub and pop les fstpl sbb imul imul repz ss push cmp in ficoml mov pusha push sbbl push xchg jge push aad push jle enter js testl add and pushl jecxz repz sbb (bad) clc (bad) rcll jae cmp adc pop fcompl outsb push mov cmp lea push cmp sub jecxz and add jle negl or addr16 pop pop cmp adc out sub rorb and addr16 cmpsb stc aad stos mov or fisubrl leave inc dec push jae std xchg scas xchg enter enter std adc pop cmp jne adc push xchg jae ja mov rcr push mov rolb ljmp (bad) emms jmp mov xchg leave andl jnp mov inc mov mov mov cmp dec adc lock mov cmpsb in outsb cmp sbb mov mov jecxz in push xchg add add mov lret or ljmp fcompl imul roll scas jnp adc push xor repnz lods cld or xor fldt adc pop je push add cmp add popf push cwtl sbb call add dec ja push mov sub cmpl inc gs aas pop adc mov mov das (bad) insb xor stos adc xlat xchg pop mov stc or nop mov scas outsl pop ss pop jle test add pop es fxtract mov rorb cmpl out out mov jns add (bad) movsb vmovaps jecxz cltd xor cmp lcall ljmp mov mov int scas mov pop mov pop push (bad) push inc cmc mov cmpsb idivb push lahf sahf jbe push xchg dec mov shlb or jmp mov push (bad) xor movsb out or notb lea mov repnz push addr16 lods int3 dec mov mov lea pop mov cmpl push sbb stos mov push cmpps jbe,pn popa inc mov data16 cltd sbb insb insl cmpsl mov inc sbb hlt push int3 out mov mov pusha cmp in mull or and (bad) or cld cmpsl cmpl orb scas mov xchg shrl cs dec inc cmp bound mov or scas stos cmpsb (bad) push outsb into jnp dec std (bad) iret sbbl and jno jp add test test pop inc pop fcoml in adc enter out insl lea insl push xor ljmp cmpsl fisttpl inc sub lahf adc cmp int3 jl lds icebp dec pop jmp aas ja push inc lods and inc loopne (bad) hlt inc mov xchg cltd inc pop addl dec push push popa scas (bad) insb jmp mov and xchg adc outsb ljmp pop dec ret sub movsb push pushf push xchg call cmp (bad) pop sub std mov pop jl lcall clc es sahf lret and je mov pusha jo xor cmpsb jle push mov sbb mov xorl inc fsubp adc adc sbb adc cwtl imul push fdivp adc imul dec fsubs xor out hlt cmp or adc je mov daa loop fdivrl push fnstenv mov mov iret pop (bad) lret rclb stos test (bad) sbb mov inc jp (bad) lds add cwtl xchg fs mov push out xlat and adc pop sti xor andl gs push adc adc lods test iret or jp push loopne out lds aaa mov insl sarb jmp dec lock jle inc cmpsb (bad) mov pop add jb xchg repnz and (bad) loopne or jae lods pop fisubl adc inc xchg sub jmp loop pop sbb mov add insb jbe scas jo out mov xchg inc imul xchg dec stc cmc ret movb adc sbb insl aas mov adc sub push mov jne (bad) ja arpl push cltd dec ret das sub cwtl push mov test xchg jb hlt aam and (bad) in dec push jo or andl adc test hlt jle int out jno nop mov xchg mov aas enter mov popf insb subl fst popa pop sbb (bad) mov xchg cmp jns mov jnp sbb jecxz test cld mov sbb je mov cmc and out pop lock outsl pop pop dec jg (bad) fidivl xchg xor add and cmp xor mov popa xor pop sahf hlt leave adc iret adc pop dec fs inc jo lock aam addl pop add lea mov sbb insb push or ds xchg mov jb inc lret xchg js enter clc lods jb lock sub cmpsl mov or test cmp std lods and push mov pushf lock leave dec lea sbb fdivrl push pop mov iret adc cs test pop cwtl stc sahf mov push ds inc movsl repnz call mov cld test into pop dec mov stos int3 pop lahf xchg inc pop (bad) or sbb jbe or push andl sub iret pop clc dec mov out adc mov cmpsb cli std mov mov lret mov cmpsb push jnp sub mov cmp (bad) leave pop fwait jb popa cmpb add outsl pop sbb addr16 inc jp mov scas scas movsb xchg push pop fwait xor jo ja or je ss mov or in mov repz mov cmp bound jmp stc inc cmp ja or pop push insb loopne movsl addl in dec adc arpl mov test arpl xchg mov add adc out pop clc outsl lahf mov int3 frstors lods dec imul test aad scas mov loope and movsl pop add popf fnstcw push jns or adc call (bad) mov std pop jbe jno repnz scas sub jb lcall (bad) outsl xor roll pop fstpt cwtl inc stc int push loope adc (bad) out nop mov rclb xchg lgs sti testl (bad) ret imul mov adc stos loop pop xchg in push test fdivrl sarl arpl ss xchg fmuls mov call xchg pusha adc mov dec sub (bad) lock adc (bad) jno lret mov or mov jecxz xor or repnz push dec push sbb pop ljmp nopl cwtl aad lods das aas jge cmp xchg nop decb jl daa mov jg into mov sbb push fistp fildll scas hlt hlt mov mov lock outsl xchg (bad) icebp outsl test sbb scas adc lret in int push div and xchg add jno push jne (bad) aam int adc sbb sbb fisubr ja pop out mov sub nop jno mov pop mov (bad) iret or sbb xchg cmc push or dec inc dec dec out inc adc pushl xchg lret int3 fstps push dec cmp or cmp dec mov sub xor dec jp mov sbb leave inc inc adc loope testl xor and cmp lcall mov push iret das xlat loopne cmp pop lods cmp cmp mov cmp es aas inc cs mov leave mov loop xchg test mov outsl aam pop scas nop insl les or mov xor and push mov dec ficom and in mov push sbb pop rolb jo sahf cld stc repz stos jo in int add (bad) sub jge insb xor out repnz js mov jg or xlat adc mov or ja cli push iret in jmp jno fwait push mov or mov rorb pop mov push inc leave lret or jo sbb cs or out subb bound mov into repnz push dec adc xlat and nop dec sub jae mov (bad) pushf dec (bad) lock ljmp call cmp push mov dec inc mov (bad) lock cmpsb das hlt rorb mov incb ret xor loope bndldx dec cmp outsl roll addr16 mov adc push cmp mov je outsb ret mov in movsb data16 loope (bad) fistl arpl jb (bad) divl xchg adc fmuls sahf jg jl insb add xchg sti stos nop aam (bad) mov pop jmp out lret add jbe adc fstl cltd xchg inc faddl aas daa stc seto sub fbld popa or testb jb cmp push or or lahf xor ljmp ret pushf out and lock xor repz (bad) cmp fs js cmp lea push jl dec mov cmp or mov (bad) pushf ljmp cmp xchg out mov cmc fisttpll cmc inc ja sbb lret hlt and cmpl pop ljmp test push stc inc test bound iret cmp fwait enter or ret jp imul clc aam mov repnz push mov jne sub mov lock push or cwtl lds sbb pop fdivp add or fcmovnbe jp sub scas in fiaddl jp fimul xchg in stos sub sub rorb bound outsb (bad) push adc xor aas cmp rclb das dec mov mov add pop test push ja push mov adc add sbb or cs xor pop (bad) push mov add f2xm1 mov or mov push enter or (bad) and loopne ds scas inc cmp movsl lds ret push mov rol add rorb scas cmpsl mov rcrl out jb lods hlt adc push sahf inc inc movsl stos xchg pop out insl adc or adc rcll outsb pop ss ja cmp bound sar mov dec sub cmpsb movsb mov stos fldenv xchg jo push jmp bound lods dec pop std mov imul aaa inc loop sub add inc pop xchg adc popl std pop inc fldcw clc rorl cmc cmp mov js push xchg inc push loope xor mov (bad) add jns cmp int3 mov enter inc in jne sbb pop or das (bad) or adc cmpsb addr16 jnp lods inc or inc lods dec loop jo add out xor ficomp jle ror jle mov out sub inc fildll clc jo fwait (bad) clc mov mov subl in ds push inc lods insl and jmp mov fldl lods fstpl dec (bad) outsb mov es imul loope jp int jb push out (bad) lret push add mov adc mov push adc ficom mov div sbb jbe adc push pop sub out sub xor push pop ficomp push (bad) dec cli arpl out xchg add sbb push movsb mov lcall pop and cmp rorb mov adc outsb lret out adc rolb popl jl xchg push lret mov andl push mov inc cli in test bound mov aaa jecxz lods lds aad add push push inc pop pop aad xchg add rorb mov rclb jle mov std stc lret call pusha movsl xchg stos clc or (bad) fadds (bad) inc movsl sbb pop cli push mov cmp sarl inc jae adc push cmc sbb into fcomp lcall movsb push mov jl mov leave or xor aas maskmovq divl add movsb add test (bad) lret fsubl out add dec dec ja jns sbb clc (bad) je scas cmpsl cmpsb mov pop xchg imul out push and in jnp mov xchg or fcoms xor test movsl (bad) sti cmp je xor xchg in pop sbb or mov scas jnp cli jnp hlt xchg sbb and ss arpl out cmp ret out ss push jae mov hlt xchg mulb addr16 adc cld or incl scas cli and popa or mov mov pop int or pop cmp mov sti iret dec shlb mov leave in sbb xchg inc inc cmp pop xor in ljmp add jl cltd mov adc mov idiv or or out mov cld icebp mov xchg ud2 sub shlb arpl push call out adcb pop or fisubr mov insl imul jb frstor fmull ja add add mov inc sbb mov mov jge sub dec adc call dec or add movsb fnstenv lds xor test push outsb sub sub xchg std test xor in lods inc pop mov push daa (bad) imul mov imul mov xsha1 cmpsb dec sub mov mov mov add mov add xor ss aam cld xor ds fstpt jns jnp pop pusha addr16 push inc lds daa icebp test outsb int3 mov arpl jge sbb rorb popa cwtl mov in loop sub cmpsl xor out sbb sub pop mov xor sub aaa imul imul add dec jo mov js fwait (bad) mov or dec jmp mov and loopne push mov shrb push insb cld int3 ljmp dec mov sbb test mov ret adc dec sti hlt jp outsb and cmp test mov roll inc gs mov and leave xchg cmp xchg inc jecxz jb cs pushf and jne sbb xchg ljmp repnz mov test mov push xchg scas into cwtl jle mov mov mov or or push jp notb daa test sarb shll outsb mov outsb dec test xchg jp repnz lods stos cmp mov lock (bad) daa shl popa xor hlt orl loope adc shrb dec sbb adc mov push rcr shll arpl mov jecxz loope lods cmpsl frstor sub aas cld sub (bad) lock inc and xor mov add addl inc sbb cwtl shrb leave stc mov fisubrl in and jle xchg mov stos (bad) jg xchg inc push or mov adc orl lret dec mov lds jmp outsb sti cmc clc clc add sub lock lret mov mov popf andl jl and xor (bad) lret jnp add leave frstor mov sub out pop aam sub push stos inc xor add jns jecxz iret fwait jnp gs mov mov xor mov inc out pop shll xor fldln2 inc pop cmp sub in enter (bad) cmp or xchg cld insb jecxz fsubs movb mov aas lret mov pop jne sbb es pop xor pop pop test mov push or dec and inc lods push sub push xor out xlat (bad) pop mov xor cs cltd fnop inc adc adc jmp adc in nop test lret enter and idivl push inc ss xchg (bad) into mov mov fsts cmp sbb cmp jno jbe popa mov sti cmp sahf sbb hlt imul cmp mov sarb pop aad xchg ja clc int3 out adc push insl rorl push fild lcall xorb sub and xchg (bad) imul adc cmp inc out not js test stos fldenv dec jb sbb adc inc out in enter or mov cmpsl sbb (bad) ljmp cwtl push addl xchg or scas movsl xchg and adc (bad) lock fwait or in test lret xchg xchg inc add andl inc mov sahf cmp sub enter lret test mov dec dec test je xor (bad) ja mov sub pop aad loopne sahf (bad) outsb cmovp or daa (bad) jge mul jle outsl roll lea lods ret shll cmp push xor into outsb add jg insl xchg nop rcrl adc xchg ljmp in xor cmp jmp lds aaa andb sub stos jp inc hlt lds jo shr adc repnz insl xchg xchg jne pop int3 into jno pop movsl mov dec into add faddl push aaa mov sti mov pop adc daa fs pushf outsb pop cli xor xor add lods mov nop lods jmp in cld lcall or lods test pop lock lahf cmc out mov mov fsub jg xor in or mov jae insb push add (bad) jne add adc mov jbe call (bad) lret arpl cmp push cmp adc fdivl movsl jb fistl inc movsb sbb cltd insl jecxz iret les mov xorl cmp imul in lock jae sub inc cmp roll popa insl aaa cmpsl mov pushf sahf bound (bad) repnz xorl adc fwait mov xor fimull iret stos in cmp jecxz mov daa mov (bad) cmp inc pop clc sub inc (bad) pop inc sbb sbb push push xor flds iret lcall and sbb test stos mov mov iret int3 sbb jns mov pusha pop push out sbb sbb imul push jecxz (bad) cld push sbb test sbb jae and adcl das neg pusha insb dec stos pop push insl scas stc lods xor and pusha cmp out jae push andb stos shrl xor dec sbb out and test inc lods out jo adc sub mov jg add stos ret mov scas (bad) jns out sarb ret add gs or (bad) adc pushf pushf pop lea adc sbb outsb push jge mov add xor inc push inc add into call push addl ja xchg lock (bad) or push enter in sub popf aaa aaa test push push std add mov decb fwait pop xchg mov pop (bad) lods pop into cmpsb push dec xor fnstsw cwtl xchg sub cs fwait es and mov jnp js jo inc inc insb pop mov sub xchg test fsubs cmp into ljmp je (bad) ds into and out push jbe dec xchg dec out es and rorb lret jae inc stc ss sahf or cmp fnsave idivl fwait lcall add cltd aaa push xor faddp cltd in clc xor mov add push out repnz leave sbb and ss jmp loop cmp insl cmp dec test roll jo out jbe cmp in lds pop pop daa pop pop add stos je mov inc cmp sub call mov cmp popa mov jne insb aaa sbb push ret push stos dec inc jne icebp movsl addr16 sbb icebp stos out jmp push pop notb mov add xchg xor push in push psrlw movsb inc dec push test jmp and push insl mov sbbl nop cmpsw (bad) call lret imul aam jb lods push xchg lea cmp push fnstenv lea push ljmp aas test mov mov jg mov dec iret lods leave fisttp add sbb ja dec pop lea mov fnsave pusha out cmp int3 inc xchg mov xor lock test in xor test cltd cmp add jge int xchg mov pop pop jecxz in stos sub xchg adc or mov (bad) jmp xchg adc shrl in (bad) adc fmuls fldcw inc js lret xchg shrb inc xor pop dec xor pusha ret jp and xor mov in imul fadd adc mov mov andb loopne cmpsb xor js je ss cld fdivrp mov or sub push and outsb (bad) jne int jno sub loop push xchg push jecxz xor push popa pop inc insb sub fistl mov mov scas sub xlat xchg fmull push pop mov jl stos pusha adc fldl2e int3 xchg or push xor add xchg imul test aad repnz aam xchg jmp cwtl push (bad) imul ss push (bad) test movsb lds xchg call hlt and xchg dec pop leave loop imull loope mov push mov (bad) test test cmpsb and shl icebp sub push ja out inc sub push loop lods js jecxz in sti in xor mov adc outsl xor sub mov adc lods xchg fs hlt lret ljmp mov push pop sub pushf (bad) (bad) jbe lock cli cli test (bad) mov icebp out ret mov mov or clc mov sbb dec cltd int3 inc sbb or cs adc pop push xchg icebp jge cmp and roll dec xor jne mov and pop adc jnp or cmpsb adc adc inc aas push lods sbb in rclb xchg lds loopne xchg in and popf cmpsb out mov mov ja jno push push lods add daa mov pop mov and iret scas mov push jae fstl cmp popf sub popa inc mov stos fcmovu jmp movl jle cmpsl xchg push dec jle sbb and jmp xor push fsubl (bad) jl,pn jns (bad) iret ficomp fstpt lcall cmp rcl xchg cltd movb add add pop pop ljmp test cmc (bad) inc inc test inc pop adc adc inc (bad) fsubs jg jecxz sub mov cmp iret movsb mov rorb xchg dec mov loop into add aaa adc sub cmpsb dec insl and dec and push pop and push push mov adc pusha ja movb sbb (bad) dec or add lahf popa fistpl scas lea xchg (bad) jmp iret dec xchg inc jecxz imul ljmp xchg loope pop pop push push test movsl adc ret jle popa xor push xlat inc aas pop sbb adc (bad) sarb lds scas inc icebp test fnstenv rol idivb jg mov sub add mov lods faddl stc stos add inc adc pusha (bad) or push inc test lods mov enter orl xorl lea cltd fstps sbb push push enter shll lret adc cmp cmpsl mov rorl xor sti mov stos mov inc add pop push inc scas mov sarl es addr16 les xchg repnz insl and enter add fstl pop sbb lret cli (bad) mov mov ds movsl fistp leave xchg pushl out leave xchg jge push jb jb mov in push fsubrs cmp xchg inc enter mov movsl out sbb push mov mov or (bad) xchg xchg push mov fstl inc fldcw inc xchg aad dec inc add inc fbld out jecxz ds inc xchg push sub divl leave mov cmpsb imul outsl jnp cmp adc xchg movsb call jle pop cld sub cs clc push (bad) popf mov jns adc pop into cmpsb push xchg or enter sar nop orl jae aam in cltd jo xchg sub jecxz int imul push ljmp rorl bound or push xchg insl inc jno push std in dec dec mov xchg hlt dec insl cltd dec ret out (bad) (bad) loope sbb (bad) (bad) dec push mov cmp seto xor cwtl movsl lret xchg leave cmp adc sub jl adc or xchg dec push sarl sbb push adc mov enter jns mov mov hlt int mov xor inc cmp pop mov jo inc and lods sbb or jbe sbb xchg cmp xchg subl sbb in mov clc xor jne xchg fs sbb (bad) jo push push mov or mov inc cli psubd mov mov sub popa adc jmp lock dec jne push gs add xlat inc nop mov inc jle loop imul jbe (bad) iret sbb sub das or icebp xchg int mov out aam in out dec std lods imul sub out cmp mov xor in xchg test cli mov dec jae stos popw es mov jb ss stc fildl stos lret inc test inc push mov push mov popf aaa pop pop inc adc xor out push (bad) gs jb aad imul ret int push ret rorl and cmp out scas dec ds add sbb xor or mov mov pop pop add je movsl ss (bad) push out mov xor xchg andb loope xor in je xchg dec adc (bad) ja fisub adc repnz mov jns pushw and fs xchg xor ss stc cmp xchg cltd add mov mov adc inc fbld fisubr arpl fimul aaa add add into xchg pop in push jecxz sahf test xor cld dec jns mov inc repnz jl dec dec loope pushf test data16 jle pop inc inc cwtl test pop mov pop xchg mov fcoms mov aad sti jo,pn jae mov dec and xchg add pop sub sub jns pop xchg lds movsb mov rorl mov sub out (bad) pop sbb stc enter inc insl in fwait out test inc xchg xchg push outsl out sbb lret inc fisttpl jno (bad) push mov test and in cmpsb mov push popa mov pop mov mul jb lret cmp mov loopne push mov mov jg (bad) fldl mov push scas les stc push leave insl (bad) push jb pop mov (bad) cmp and adc test mov movsl imul cmpsl aam insb sub scas xor mulb dec push adc dec xchg lods jns jb stc cmp dec dec lea scas mov dec sarl mov lods int3 cmp insb add je rcll pop push lret js push add mov sbb call pushf and add leave jo call outsb shrl test std mov out sub stos in mov sub adc cmc add fcmovnbe je jle cs call je lret or inc add cld ljmp inc push or fldenv outsl inc orb pop sub hlt push mov out (bad) lock (bad) cmp jns push sahf arpl cmp sbb (bad) lods rorl aas push add (bad) jl cltd mov or inc mov and jle xchg (bad) pushw jg stos xchg push (bad) lods int3 cmp jmp das or fstl clc dec mov push (bad) or dec or adc jecxz xchg or xor (bad) xor movsb imul mov lret cmpsb jg (bad) push jmp lea aas add hlt pop sti sub cs pusha (bad) fsubs (bad) pushf push xchg jne gs cmpsb cmp dec or repnz mov sub les xlat push cmp jb mov mov mov jg je insb fcompl ret outsb adc or jae imul cmc jb or mov and inc mov mov add loopne cwtl in xor out dec cltd push push mov fcmovnu fisttpll loope fsubrs lret sub pusha cmp push js mov adc cmpsb xor lock xchg out fnstsw push fisttp ret movsb mov adc mov cmp daa push pop (bad) stc xchg test dec pop movsl aaa pop int cmp sub mov imul (bad) fcompl mov push sub mov lods xor repnz jge movsl icebp add or dec in inc fisttpll xor rolb repz test dec inc fst aad mov pop add push insb outsb subl fdivrl push mov data16 mov adc cmp jbe shl movsb js imul shl outsb ds clc xor or adc push (bad) (bad) js pop stos aaa out mov aad push popf dec (bad) mov mov inc cmp leave mov and jle or push cwtl inc (bad) repnz mov add or add push lds nop push std jo aad dec mov (bad) flds dec sbb es jle int3 dec imul mov dec jnp sbb fs enterw lea test loopne cmp mov xchg sbb ret pusha xor pop sbb cli push test jo push mov push ret pop pushf incl fstpl jg ds (bad) rorb mov xor xor mov xor and addr16 mov push test adc outsl pop cs (bad) mov scas movsb jle (bad) sbb in xor sub mov (bad) fadds mov das stos stos push pop pusha (bad) aas js add stc cmp addr16 adc ja jge xor daa popf ds imul xchg sahf test jbe jae mov sub sahf or into out fildl sbb pop mov jb cwtl push aaa leave adc popf imul add cmpsl mov cmova repz push jo sbb push (bad) inc repz jno or loope mov mov xor popa cmp adc jbe stc ret cmpsl aad flds pop es xor jge mov ljmp (bad) sub lods sar les or add sbbb adc fs scas stos xor (bad) cld adc hlt push rcll cltd in sub adc mov inc (bad) inc or hlt sub ja or negb sub lods pop outsl call bound imul or insb add sbb mov rcrl or mov jns mov push push sbb icebp adc push mov fcoms adc pusha sbb mov fdivr outsb imul fwait mov fbld cmp cmp sbb fcmovnbe inc push das push (bad) loop aad sti in cwtl mov lahf and push imul gs mov lahf push xor cwtl fstpl jl jp in jbe (bad) loop lods mov xchg imull divb fsub jl call sbb sbb mov fs mov pop cltd mov cmp fucomip pop out imulb clc xchg aad stos inc aam pop sbb iret adc pop and scas lret dec sbb nop in scas out jmp (bad) and push ret int (bad) add fsubl sub xchg xor in call pop mov jle int dec (bad) xchg sbb dec daa or pop mov call push sbb das pop push inc dec (bad) popf xor sbb push mov lods aaa sete or or cmp dec or jne pop mov cmp lret stos mov std or xor movsb out dec mov call adc mov fildll mov dec mov es neg int3 sbb sbb or fstpl repz out push rorl xchg jl mov inc mov fdivr xchg rol sub iret adc bound cmc jge loope jg pop mov push pop test pop jnp or mov test jge cmpsl push or test lods xchg daa scas xchg mov lahf (bad) hlt xor pop jns push push rcll outsb fnstenv fsubs jne fwait adcl xor js jno jl adcl cwtl aas jne dec xor jo fcomi dec repz subb sarb dec cmp stc xlat data16 iret repz mov or or push inc push push leave xchg mov jno mov adcb xchg mov inc xor pop and movsl dec das xchg lods push (bad) int3 or fstpt out sbb mov mov in test out push mov push (bad) sub xor xchg push idivl call xchg push cs pop pop xchg cmp jne jmp lods sbb fcmovbe (bad) xchg xchg mul pop dec roll int3 loope add sub fmuls xchg mov adc mov scas inc jns insl in pop inc dec adc push mov lahf adc xor lahf (bad) add push mov xor outsl nop lods or inc adc inc (bad) fildll push aas mov add pop fsub push mov (bad) enter in xor cli jle and hlt sub add jge cmp adc mov mov dec sbb aas in push dec xchg aad pop or stos sarl int3 loopne mov ret xor dec ds xchg sub lea xor mov jmp fmul mov adc inc mov fldenv ds or xchg sbb xor bnd jmp ljmp cmp xlat popf cmc adc jb fidivrl push cmpsb or cmp dec xor inc call sub jge jae sbb add (bad) aaa xor inc mov popf cmp jl jno or sahf dec sub (bad) pop lock aad shrl movsb push call xchg add xor rol mov jl (bad) hlt bound xor sbb stc cmp push (bad) sbb jb subl sarl or clc std icebp out mov ficoml jg lret xorl movsl rorb cmpsl cmp jo jge jle enter dec and cmp jmp mov (bad) push aas in mov (bad) clc insb xchg and lods ljmp pusha xchg sub and or sbb aad (bad) cmpsl add xchg (bad) repz sbb sub adc dec jb bswap in cmp xchg test into inc jmp xor push lret cltd mov cmpl pop mov insl fbstp mov ja cmpsl cmp xchg rclb and cmp cmc cmp imul or mov sbb lods int3 movsl shll aaa ja sbb (bad) test les mov sub xlat pop inc mov aas popf subl adc lahf mov mov mov in out dec xchg mov mull adc pushf stos div mov stc mov mov fiaddl mov lods insb push jbe jbe inc in stos sbb cmpsl cltd inc insb jne es fidiv sub xlat mov pop jnp test inc or jns loope sti data16 stc xchg test add les pop js adc out inc sub sbb mov xor (bad) dec popf pop and push loopne xchg xchg inc inc push sub popa decl into mov roll and xchg call cmc and insb stos jns mov add push inc push cmpsl mov data16 cmc test imul dec sub xchg call adc rclb sub inc mov jns jno aaa add mov sbbl (bad) dec aaa out aas ret jb les loop sti adc (bad) repz xchg jnp arpl pop fcmovnbe cmp push mov dec fcmovnbe fdivl test jbe pop (bad) mov mov xchg lea add pusha push ds push imul outsl test ficom pop pop sub xor or rcll push popa or enter dec mov and in mov lods sbb mov xchg dec push in mov push cltd jg inc es movsl and and sbb fadds clc inc sbb imul mov jns push fs fwait mov lods lods sub jne in in pop dec mov jne mov fbld lds adc nop cmp xchg test movsb dec ss jmp adc xchg xor xor je imul cli sub lret adc bound mov xchg ss and and cltd push xor arpl fadd jnp and lahf or mov in loopne mov insb sub ret rcll jl cmpsb push jp orl jnp and loop scas xchg mov sbb pop jnp inc sbbb sub pop mov or test push ret ret (bad) jle mov push sub mul xchg jno push mov roll into push push (bad) dec das inc in lea mov lods pop movsb xor scas cmp int push push sahf pop mov rclb and sub add gs sbb dec mov movsl insl je loop cmpsb mov js insl adc dec jnp or shr movsb add out mov (bad) xor pop fmuls lcall fs dec mov sub sub jge mov das jno push jns jp mov pop jb clc push lret int movb test in ficoml and nop mov xchg jbe adc mov xchg out mov cmc mov pop lcall mov sahf addr16 lret data16 mov dec enter add ret push jne (bad) jae adc fdivrs enter mov add lock pop rcl jmp and and mov push in adc fldt and mov cmp adcl movsb inc mov mov popa sbb xor pop fbld inc pop dec jmp push inc sarl mov jnp pop cmp inc push and lds mov repz repnz test bound fmul mov or lock fldl sub mov out (bad) jmp ret push lock adc test (bad) or mov and mov pop push fnstsw or bound add dec or push xor je out int mov lock loope ss pop add iret or or jle sbb in cmp lds inc push int3 xchg pop sbb sub dec jl xor sub dec inc xchg test pop enter or (bad) (bad) jae psllw imul daa repz sti and lret dec fisubrl lds fiadd pop (bad) push inc pop mov bound out mov jl mov dec mov wbinvd mov (bad) lea pop jl in nop adc cmp or out push adc ss xchg and mov clc cwtl out or in ficomp pop cli cmp int3 decb inc lods cmp psllw jbe movsl gs sbb cmpsl ss sub mov inc lds in push clc dec mov aaa inc js fist or jmp mov pop cwtl cld xchg inc bound xchg push xchg mov dec mov xchg and ljmp pop aad and jmp fcomi push stc scas xor push xchg repz adc push add inc inc in mov arpl pushf mov and cli add into dec jle in mov daa mov mov jno lea dec jecxz push das push adc int3 lea leave inc mov orb add das mov mov push add cmpsb or (bad) popa aam xchg dec stc dec movsb lcall mov enter cwtl fsubrl fnstcw jbe and and daa push mov push or fdivl and dec adc pushf push mov fs mov mov rorl push mov jae push adc insb dec jae jb sbb lea sbb lret lahf dec xor sub rcrb daa loop add sbb inc push dec add icebp adc add in sbb jbe hlt pop fldt mov adc (bad) jnp or lahf cwtl xor pushf mov or xor shrb insb rol push push jae jle ljmp das decb popa loop scas adc jno adc xchg and fcoml xchg mov stos movsl or add fildl pop dec pop dec in push pop dec cli movsb fstps jno push xchg cmpb cld xchg cmpsl cmp int adc insl cmpsb jl insb test shlb das jne xchg ljmp push dec imul sarb gs jl aas enter lods push fldt add out adc or mov rcrl inc aam mov ret mov cmp sbb push cmp stc pop test (bad) and push add stc pop ds pop or cwtl clc dec pop xor divl inc rcrb stos repnz inc xchg pop cs pmuludq xor sbb (bad) js shll in daa cld mov mov leave mov lahf sub xor aad sti sti loopne pop cmc dec testl cli rclb movsb mov mov jno ficoml shlb loopne add xor mov jp xchg jecxz insl arpl addr16 jl push jp dec sbb push inc (bad) jg add push lahf call add mov mov sarb mov scas imul into and xchg leave mov out inc (bad) push insb lods test xlat dec cmpsl xor add fnsave mov mov mov push sub and int xchg lret xor push nop rclb loop mov mov loop jle mov mov (bad) scas rorb cli xor ljmp loope movsl outsl xchg repz loop sbb imul out fnop jne pop pop bound mov xor sub out loop data16 push int sti ja xor mov sub out cmpsb dec inc xor ss push jbe gs push jmp mov pop lds dec rorb mov mov cli movsb dec icebp pushf push push and mov jbe inc adc outsl fildll cli aas sub pop lret pop repnz mov into fucomip shr test xchg xor and mov ss (bad) in pop fldl stos inc pushl mov aam adc lret mov mov jp outsl adc addr16 xchg ss mov (bad) mov dec add test ret iret sub xchg and cmpsl push loop js fs xchg pusha adc jbe xchg ljmp sbb adc fstps jno out pop and add sub inc xchg jo adc jns mov dec push jo mov addr16 adc adc xor sub aas (bad) jmp cmp pop mov fs xchg lahf mov lahf nop fs fldl les mov xchg inc or pop fildll push xor fildll movsb jge add scas mov jne fxam insl (bad) push xchg out notb mov or dec stc imul xor adc adc or popa mov jmp scas add imul jp push icebp push shrl out lods stos xor inc xchg or arpl cs sub dec mov into inc loope push dec lock xchg and fdivr out aam mov pop push (bad) (bad) imul mov xor ss xchg push adc cmp pop fistl pop jns (bad) jae dec cmpsl push jns pop stc mov lret inc xchg mov dec or mov popf test sbb sbb lret fldcw insb push rclb loopne aas stos xchg jle jge mov stc scas lds pop hlt hlt xchg pop test push pop addr16 rorb je stos sub adcb loopne pop mov cmc pop rcr jns push cs pop inc iret jne pop xchg xor jmp jl mov movsb ds mov cmpsl lock inc lods mov jb fs sub leave (bad) mov push out and and testb mov (bad) cmc jle cmp add mov movsl clc or xchg cmp inc xor mov cmp ret add in lcall popl nop xor cld cmp xor mov inc inc call inc insl pop push adc lcall daa (bad) int clc (bad) das (bad) sti inc icebp std cmp dec jo pop inc in add popf addl mov or data16 loopne std and mov mov xchg ficomp cwtl loope push test sbb add mov jl daa lcall sub dec sub jmp lret imul (bad) repnz int xchg mov pop rclb inc xchg movsb (bad) negb out cmp xchg jmp imul dec or dec test fwait xchg xor mov mov (bad) (bad) bnd call outsl jl mov cmpsb lock pop push jns hlt sbb fnstenv inc cmpsl test imul sarl aam push sub sub in xor leave (bad) lcall push imul (bad) pusha fwait dec lcall xchg xor cld xchg cmpsl mov inc cmc push (bad) lahf notl inc roll pop bnd test mov pop repz inc lea insb out xor stos dec les mov shll outsl aaa inc addr16 in dec dec mov mov lahf jb dec jle dec les fstl xchg sub dec mov inc lds negb popf test pusha xchg hlt jp test js repz mov out imul sub push in xchg pop (bad) int3 daa and jno les dec and (bad) pusha cmp sbb les mov sbb and cs sbb popf test mov mov xor pop out iret jp loopne fidivr mov movsb pusha cmpsb mov inc cmpsb push adc sbb imul rcr nop test into and (bad) test popa pushf cld cmp adc (bad) notl stos imul mov or sub in les ficoml (bad) jae push pop push inc cmp sahf jne push mov stos adc outsb dec jbe sbb scas and cmpsb rorb jecxz fisttp inc fadds sbb pushf les iret jo test mov jb xor aas out arpl push adc add (bad) sbb jge fwait out xchg hlt cs lcall mov jb mov ficoml stc sub jl shll or push fidivl xchg xor frstor shll sahf loope mov cmc out adc mov jns pusha xor outsl dec pop pop push cmc push sahf mov mov cld ljmp std push or dec sub push cld sub mov sbb mov arpl dec jg xlat cmpsb in push pushf add ret mov cmp sbb cmpsl lea jl (bad) aaa pushf outsb pop (bad) ss aas jbe mov rolb cmpsl push iret sub fucomip cmp jb cmp jle (bad) fldl xchg mov out aaa inc lods adc es pop (bad) adc mov inc decb cmpsl cld ret insl lds dec loop lods pop or xchg stos jb xor mov aas aaa es outsl sub add cmp mov jg movsl subl jnp movsb cmp inc loopne mov cltd mov ss sbb and xchg jp inc mov push mov pop mov push jno pop mov fsts inc adc jo inc pusha pop pop aaa fwait in cmp fadds movl dec mov in ds pop mov pop jmp pop scas imul icebp jno adc dec add stos lahf jg repnz pop pop adc mov cmpsl (bad) stos test xchg incl lods mov mov xchg xchg push movsb adc add out jo into push add (bad) lret xchg movsb adc jnp jbe pop add repz rorb js mov into fwait push mov fimull xor popa xchg push or repnz fs daa scas add add cmp push stc mov stos rcrb sub adc or or xchg nop int3 and adc pop pop sub aam imul mov xor inc ds nop xor xor movsb sbb dec movsl dec jle inc jns xor int3 and push mov jnp sub iret mov test sub dec mov adc push insl leave shrl stc shll fucompp test (bad) ret icebp sub clc (bad) dec or in add mov scas mov sbb cld out js (bad) cwtl push movsb ljmp or cwtl dec scas outsb enter and sub pop dec xor out mov fwait xor lods push mov cltd push cmpl xor mov enter out int3 jmp pushf sbb pop and jmp ret adc inc insb cmovo push mov adc sti jb sub cmp sbb mov inc mov or push ficompl xchg push ja lds mov xchg out sub icebp pop mov mov and sbb mov pop rorl cld cmp stos xchg pop out je adc std lcall icebp mov in imul adc jmp fidiv stos sub jns bound loope shl aaa fcoml mov mov adc inc sbb mov arpl lds dec fisubrl cmp pop aaa hlt std into mov (bad) cltd xchg sub inc inc pop dec sar call bound add inc (bad) xor dec push jge xor mov dec mov mov int xchg mov sbb or addr16 xchg xor dec jecxz mov push jno add mov pop mov dec inc cmp fistp add cmc cld ret sbb cs sahf jns pushf mov cld loope mov aam and xchg sbb inc subl lret dec call mov dec pop sbb rorb pop pop popa push fsubrl adc inc and stc imul lock jo adc adc stos mov dec push mov push lret fs test aas stos test mov (bad) cmp fsubl adc sbb data16 cmpsl cli lods jo aam mov jmp sub (bad) cmp ret jp dec add or lea adc push aam out inc mov dec fwait gs repnz in push es dec sbb stos aam dec sbb loope sub xor in push jle (bad) adc clc cmc fimull push clc les rol cmpsb loopne js mov insb xor ja pop push xorl test (bad) aas push imul daa add cwtl out add int3 stos push cltd (bad) sbb mov mov and cmc div push push and (bad) mov adc lods rclb jne mov arpl push sbb or fldt lods pushf xor rorl xlat test ret sarl imul xor pop xor pop ja mov cwtl movsl test int3 imul mov xor (bad) pop iret ret push pop std insw push out push or cmp mov out std outsb xor xchg addr16 adc add iret movsl movsb and dec lods ret inc test in inc xchg out lea rolb mulb movsb add xchg adc xchg pop inc cmp mov xchg dec (bad) sub jge pushf cmp aam adc sbb nop call mov pop cmp inc inc push add (bad) xor push pushf add int3 js loop mov adc in mov or sub pop push call cmpsb jge inc cwtl popa mov scas push push lcall mov dec jns sub mov and je push icebp stc or out enter test push pop add push sbb lock loope adc ds mov mov mov test int3 pop xor push cwtl sub mov (bad) jge cmp lock mov xchg lea sbb sti pop adc xchg push imul mov mov out push xor sarb iret xor xor push test ds daa xor rcrl xor int3 aam (bad) push inc xchg (bad) xor mov inc push mov xchg push data16 jle loopne xchg or mov push das lods mov sbb in adc lret push push add push jb cld inc or inc out std mov cmc dec notl in ss jno addr16 leave fdivrl mov mov leave mov out (bad) jg cmp mov fcomip xchg fadds sbb pop lret aas inc dec test addr16 (bad) push pop popl sbb (bad) sarb adc cld pop dec imul pop scas pop jl cmpsb cs mov ljmp cwtl ljmp fwait jbe mov mov rorb and mull movsl dec dec fwait mov add adc adc fdivrl jne xchg lea pop gs imul ljmp mov lret dec mov ret sub push add inc divb push scas adc sbb aas lret mov and xor mov iret push mov push xor sub gs sbb lock jbe movsl sub (bad) (bad) hlt div pop fdivr fistl sub xchg dec add or or std out ret sub pushf sbb (bad) dec leave mov (bad) xchg xorl ret (bad) mov sub les imulb cmp insb cmp and movsl ja cmp shll je dec or sbb mov daa jne dec stc add push pushl xor jb icebp mov push mov imul pop hlt xchg sub mov push insb mov (bad) cmp (bad) adc (bad) and sub mov fdivrs jb cmp dec cli out push in leave sub cmp cltd jmp ljmp outsl xchg inc add repz cld xlat in rorl subl and jae or xlat add adc clc aam add mov aas icebp mov sbb cmp and push in adc mov xchg lods xor (bad) pop cmp cltd les fwait mov or jmp call lret adc pusha fistpll pop sti xchg push sti mov and subl decl sbb lea xchg xchg roll inc icebp dec sub push and pop shr ffree pop add cmpsb hlt mov icebp dec loope push cs ret leave sti (bad) xor add enter icebp and jnp pop mov ds in pop jmp ljmp ss ficomp scas out xor enter iret out lock sub pop cmpsl cmp push out xchg inc jg or adc jne hlt dec je ret add (bad) js loopne sbb cli dec (bad) ljmp mov scas loope in xchg xor in out jo roll hlt cltd add inc sbb (bad) mov cmpsb push jno ja adc dec addb ja and aam mov test repz fbstp push jb stc mov out sbb daa repnz icebp sbb repz fiaddl cmp push adc scas stc mov dec sbb out adc push mov in fcmovbe lcall iret insb sub fisub sub sahf sub jecxz mov rol push adc sbb jo (bad) dec cmp jmp push mov call inc xlat mov stos adc sub mov (bad) fdivl mov sub inc sbb scas and ret push test mov mov jl (bad) pop xchg sub jne mov mov lcall mov iret or inc mov adc outsl js jb adc inc pop rorl popf dec xchg js push push ficompl jge ffree clc inc cmp faddl adc mov pop into push ja xchg pop inc mov xor loopne cmpsl cwtl call adc add jno sub adc lahf data16 ret sub dec cmc dec add push xlat insb lea rcrl mov stc xor aaa cwtl lock fidivrl out movlps dec or cltd clc adc aas mov pop and test push jne mov jb cwtl push mov and xlat stc lods sti mov icebp cmpsl jae pop bound cmp (bad) fnstsw sub sub ss js and fcoms pop push stos xchg xchg sub fstl adc sti add push sub or cmpsb pusha sar cmp and clc or sbb push mov jmp test sbb ljmp cltd or aas sub mov mov add jne fwait jb push enter jb mov outsb fwait (bad) mov mov push shrl repz or cld icebp shll mov inc adc (bad) jge cld mov pop mov adc (bad) sbb (bad) mov mov and xchg clc mov jnp jnp sub (bad) pop mov sub mov daa and mov jo sahf or in je es dec add pop repnz and xchg pushf or jge ljmp push rcrl stos (bad) jo or (bad) jecxz sub les add jbe xor add insl imul push dec fucomip (bad) aam lock pop je ds mov enter push cmp cmp jg stos mov js jae daa fistp dec xchg xor scas enter push leave aam push sahf arpl inc mov lret lret and stc faddl sbb in loop aaa mull jno mov cmp and ljmp inc xlat push cwtl dec pop mov mov lret add fwait sub xchg imul xorl push and xchg dec fisttp stos out and sti cmp stc sbb sbb mov ljmp (bad) xorps push in and aas sbb cmp pop test add cmc in stos fcomip popa pop addr16 xchg and inc and mov jne out in xchg xchg stos test cmp loopne xor sbb (bad) rorl mov inc cmp fisttpll jecxz in sbb xor inc inc loopne pop icebp mov fistp push ds jb dec adc xor int mov (bad) (bad) loope movsl sub les cmpsb pushf sub fimul lret (bad) mov inc test inc loop hlt (bad) repnz sub clc dec or test jl hlt aad push xor call icebp rclb pop pop lods arpl inc mov dec xor sub jno fwait and pop xchg add fdivrs loope ljmp repnz cmp push cmc adc pop or popf (bad) sbb adc jb push (bad) loope xor or sub jns xchg jno and cwtl mov outsb scas sbb xchg adc jle push cltd testb dec push test and ret sarl mov aaa adc and fcmovnu movsl ret push repz test push int and and shrl and lods or push mov mov dec cli enter inc js imul gs cltd (bad) je test or and inc mov or clc flds lcall mov std xchg mov cwtl xchg repnz (bad) xor pop fstps push pop shrb push and sub fbld add cmp inc (bad) xchg inc jns push ss or inc test pop mov push fsubr sub lcall and iret dec negl insl cmp loopne mov popa test sbb jg pop adc cmp pop and xchg sub pushl cli rcrl xchg (bad) xor fwait lret out sbb push cld pop jne (bad) xchg mov insl mov pushf pop pop imul cmpsb push mov sti mov mov xchg inc aaa lcall out cmp imul jmp jns add inc ss aam sti jle jo pop shll testl cmp (bad) sbb (bad) leave xchg in or outsl push fldcw jmp (bad) icebp jle (bad) pop adc mov loope xchg cmp mov mov cmp mov scas divb mov data16 jb add fimul xchg shlb mov inc or call ja gs cmpsb xchg mov xor mov into loop loope nop jmp sbb mov cmp push push rorl outsl add int3 mov das inc mov mov js ljmp mov sbbl add pop inc popa lcall lret jp ret (bad) jno mov (bad) mov pop mov xchg (bad) iret loope sub or arpl xchg xor repz jle test adc mov mov scas frndint rorl pusha iret dec xchg fldenv pop xchg sub and psllq push push test sets imul or push (bad) rorl je out lea lret ja adc cs in (bad) pop add int3 pop xchg outsb (bad) shrb lods test mov and lret test ret add mov out pop jae xchg jbe iret rorl and bound std std mov jb push dec sub push ljmp scas push (bad) popf cmp in or iret bound inc leave shrl push dec jge in cld push mov cli std icebp pusha mov or out adc adcl stos adc mov pusha mov or cmp int3 gs les adc in or and adc cwtl cmc test loopne fisubrl xchg cmp lds int dec mov scas lcall push pop mov cltd orl aas inc jle ror jbe cmpsl dec nop mov sub rcll mov sbb xor mov dec mov pop dec dec out stos mov loope adc mov sbb mov das (bad) jmp cs xchg dec dec pop dec xchg add push es mov push cmc (bad) rcr ds addr16 xchg jae (bad) dec jne mov (bad) xor pop in iret (bad) cmpsb cs mov test cmp sti scas push and xchg xor or stos jns sub gs jl sub (bad) in rclb in movsl (bad) test enter mov scas sub inc lcall addr16 cmp js mov xchg or jp push inc add (bad) adc outsl mov pop mov jp gs mov push stc into aam insl loopne or in ss push test test xchg xchg mov cltd adc push fucompp sbb loope push pop push mov dec add dec sbbl mov mov ja ds add push ds push test push daa push pop push xchg and loop movsl xlat push es xor nop push push les pop sub jns sti xchg push ljmp and and pop outsl dec in fucom out outsb clc inc mov push sbb push add inc jne (bad) dec das xchg mov sbb cmp xor insb mov enter dec jnp movsl lret push sub xchg mov sbbb std dec mov lret out ret push repnz lods and movsl clc dec ljmp xor mov mov and cmp ljmp sbb lods dec mov lods (bad) lods xlat fwait jae call push in nop xchg arpl push test adc leave rep mov jnp cmpsl hlt ds (bad) loopne arpl push mov test jge aas sub push cmp fsts pop ret out fisubrl mov std stos fldcw int dec add mov inc mov into xchg add or out xchg mov out lcall sub stos sub fist pop decl rcll setb jno cmc psubw fwait and cmp dec test and lods hlt or inc jge pop inc pop xchg mov ret mov fild inc cld and sar aas fcompl das and loop jb icebp dec rclb inc outsl cmp push imul and push or cs lahf xchg cmp mov ljmp aam jmp out pop sub xchg cmp adc push sub pop loopne or test cld repz dec adc xchg inc add nop jp mov sbb inc imul clc out jecxz jge stos dec cltd in mov stc scas js cmp cmp mov outsl shlb push mov stos pushf negb in push lahf dec and xor punpckhbw sub or ret subb cmp mov mov mov out sbb add test addr16 repz pop xchg leave sahf sbb scas or xor jns (bad) cmp fist shrl lcall shr mov cltd pop adc mov out sahf scas mov adc jmp fsubl push leave mov add cmp shll xchg popa or mov and scas add and jg add adc jmp mov shrl push jle mov (bad) adc outsb xor int or inc clc dec ds (bad) ljmp stc test stc aam cld mov (bad) in aas test xchg test fnsave mov lret mov ret dec lods mov and or (bad) xchg int leave (bad) loope pop dec clc pop jno add ljmp sub sub mov jns scas xor (bad) mov out dec add fincstp cmc adc inc push xchg add out jbe mov mov or or mov xor jae movsl cld add xchg (bad) dec pop inc mov rcll adc dec jg inc (bad) cmp ja sarb sub sub stos mov adc int3 xor and into inc into cmp in (bad) xor ljmp adc jb ja jne sbb out xchg xchg mov mov sbb mov test pop xchg or frstor mov mov lea hlt stos lods jo sbb ljmp lahf dec inc aas ss mov pop cltd xchg out aam mov inc and fwait pop outsb push inc jl push push enter adc das ret or mov jbe add pushf jl jno lahf pop (bad) test xchg and imul std outsb jns fwait pop cld or arpl or adc inc test add das popf (bad) (bad) icebp fidiv jmp es inc adc popa mov lret lret mov out add push push outsl stos in mov rorb jle push out mov aaa inc xchg pop dec shll mov cmpsl and fsubs std cmp and insl mov push push pushf lock cld test add xchg int3 lods dec adc dec into rol xor xor pop xlat cli push sbb jno xchg int3 inc adc jno mov mov clc or cld fmull les ds in (bad) push pop add fmull jmp andl addr16 cmp xor loope sbb pop push stos iret add lea aas (bad) mov lds mov sub mov push pop inc adcl xlat cltd inc pop gs int xor add dec push mov gs (bad) leave jne adc (bad) sbb outsl (bad) icebp add push mov and push jnp push ss mov pop inc xlat pop dec rclb mov hlt int3 (bad) xorb push push mov js inc cmp xchg cmp mov mov dec cmp jp and jge lds xchg sbb (bad) sub or jnp lcall cmc mov cld jne call pop fsub outsb in je loop and mov pop lds ds xchg repz jne cwtl sbb push fisttpl cs cmc outsl inc inc push pushf mov mov and xor divb pushw add arpl ds jp outsl mov mov mov xor cwtl or xchg add insb subl enter mov data16 mov lret and xchg mov int cmp xchg jg pop movl mov inc insl mov fcomps mov xor sbb cmp lret pop lock cmc cmpl adc es test adc pop pop and clc rcr inc xchg xor adc ror ret test setae xchg sbb ss jne hlt movaps jns or sbb push test xchg fwait mov sub mov or mov lods mov lea fwait adc mov jae fmuls xchg outsb repnz data16 test enter jmp out in push push fstpt and (bad) push jge cld cltd inc cmp inc movsl popa aam pop add add jae adc sbb rcll in stos into adc mov push mov xchg inc xor lods lods outsl stos sti rorb xchg cwtl mov mov in sub xchg xchg fildll ror push jbe mov rorl inc es pop or jns call into ss popa cmp js or pop mov lods fmuls movsb addr16 mov test imul imul pusha (bad) mov sbb mov jbe test cwtl xchg push sub ljmp jb mov pop cmp inc out jno pop jp ret xor in adc out insl aad outsl jge mov xor mov mov xor mov movsw outsl loop pushf ja fstl xchg loope ljmp sub sub jge adc inc mov imul lods inc push push xor icebp scas push out mov ljmp (bad) and sub pop dec sbb cmc mov adcl je or loope lods dec and mov out or mov movsl subl outsb in push inc lods xchg push cltd dec dec push dec push gs daa jg ljmp xchg inc pop xchg dec fldenv dec sub dec sub inc sub test or fildll adc scas ret dec andl add push mov fs ja xchg in es out pushf shr enter aad dec nop xchg sarl out cmpl dec xchg mov imul les push movsb mov or aam mov inc int mov iret cmp test aad ss std add sbb mov cltd sub cmp dec pop pop pop add lock fisttpll mov scas test xchg ss mov (bad) and xchg iret mov imul xchg testl (bad) rcll dec inc sbb jecxz icebp xchg xor or inc sub jns sub sti lock addl fidivl inc mov dec or jg jo cmp push cmp jmp repz (bad) jmp add pop test popa call mov dec adc xor cmp popa push ds sub ret xchg mov roll cmp jge inc dec xor neg xchg (bad) jb sub dec jnp enter fwait jae and inc sbb adc ds inc fisttpll push sbb jl push jecxz mov cld dec lcall in adc mov in dec lock mov pop cmp sub xchg outsl gs lahf adc cmp sub popa iret (bad) and in jmp in or movsb cwtl (bad) int3 imul outsb add and (bad) loopne push and adc jbe fwait aam and mov xor cmpsl lea mov es in lea lods mov daa jo adc sbb imul out outsb aam out inc movsl sub adc imull popf pop mov mov push pop neg in mov movsl cmp xchg popa sbb ret movsl enter mov or pop xor fadds dec (bad) mov jecxz out loopne gs pop mov movl dec test pop ficoml jnp sbb int lods add or sub dec stos push out cmc pop cmp (bad) mov in ljmp mov inc fs in leave out mov outsb push cmp ret call pop ds insb mov mov mov xlat pop insb ljmp mov sub pusha adc in fst lcall std add (bad) repnz ja scas jg in jne aaa sbb add xor add jp or dec imull mov xchg insb mov lahf dec fs inc xchg or push cmp (bad) inc mov mov push pop adc jo,pt stos jp lods cmp loopne test mov or repz dec add mov xor pop das ret fwait das jo,pn or fwait jo inc pop ljmp mulb mul push jns or fs lret mov fild jmp mov sub mov aas mov nop pop mov and ja (bad) xchg push xchg imull mov lahf imul adc jmp mov enter out icebp scas leave pop sub jmp je jp scas sub mov cmpsl mov aam (bad) ja add scas lods jmp aas mov or shrl mov or jnp icebp call lock xor clc mov bnd cli mov popa leave push (bad) sarl pop fmuls dec ret outsb cwtl scas in aaa dec fistpll pop pop mov pusha xlat mov arpl sub or dec xlat sub dec xor pop xchg jg jb mov js ret mov sub addr16 fistpl adc cmp mov call and je (bad) mov mov popf out mov aam sub int3 cld and scas addl sahf daa xchg or pop sub jl aas add mul jbe fisttpl repz in and dec pop ljmp and add addr16 cmc pop inc iret inc pop xor pop mov xchg push mov mov incb xchg jns cld lods inc div jns mov frstor (bad) add jge sbb cli cs and xchg and add pop divl sbb lret aas add jecxz xchg sbb jb inc (bad) mov xor je and cmc jno das jge test push fsts cmp or mov xchg xlat in adc sbbl pop jb aad popf push pop xor lcall push daa mov test fdiv mov mov sbb aas insb cmp dec enter insb or dec dec pop fcmovu add aam (bad) push push xchg stos xor data16 mov icebp aaa mov ret insb jp icebp pusha mov dec add pop rolb cwtl ret iret jno mov sub dec adc inc stos add outsb sub in jno cmpsb adc sub out or (bad) jb sbbb gs push std xchg aam xchg leave mov jmp push mov lret inc sar clc clc mov mov fild pop mov stos jl xor daa mov xor sub dec clc stc lock inc sub mov xchg cmp mov or and push shlb in ret pop and push push push inc test mov jo mov xor pop dec push jle mov stc test jl inc adc and jmp mov mov repz xchg cmp pop stos aad int or push data16 jne push hlt flds mov jo mov neg leave cwtl aaa call scas int3 pop lret ss jbe repz jg jne fcmovnb loope mov cmp xchg fistl inc mov pop push cmp and cmp addr16 out pop xlat dec hlt ljmp int fidivrl gs jg ja lret mov jae cli popa nop sub inc cmc (bad) movntq out aad notb aam jecxz jns push imul out xchg (bad) mov add push sahf jno and xor xchg mov fist sbb lret sub mov shl mulb shl adc aam aaa test nop xchg jge push lcall pop mov aas mov mov inc out clc pop dec fwait cmp push mov inc xchg jmp xor push inc inc and fwait test mov lods stos mov mov mov popaw dec add mov incl cmpsl cmp fwait stc lret mov and out push repz push dec cmc imul cwtl push or add xor out and insl icebp pop ja fdivs mov (bad) bound cmpsl movb mov sbb xchg push fisttp adc add cmp pop pop in mov (bad) inc data16 les shll stos ss pop sub adc stos sub mov (bad) outsl mov out inc les cli lods movsb sbb cmp dec pop je rclb or sub sub mov aas repz and incb or mov adc and pop sbb inc mov mov int xor int3 movsl frstor shr mov and sbb jns test leave (bad) stos rorb jbe mov mov hlt xchg stc push dec (bad) mov data16 out aad test icebp call push scas insb xor js mov pop xor (bad) out leave push (bad) aam jmp test inc fidivrl push in movsl jne sub pusha call in aaa pushw in pop xchg xor mov fs sbb push xchg fnsave push stos or mov lret adc das jge add insb pop sahf xchg cmc loop lret adc call mov cli jmp or adc inc stos lret (bad) in adc mov and add test test pop sub pusha lahf add xor adc std pop cmc cwtl pop mov cmp inc fs push or push xor xor dec xlat out xor int mulb jae loop xchg scas scas lock (bad) jmp push cli testb daa mov sbb sbb jne pushf inc xlat add pop ret bound mov dec or mov mov aaa push lods jo in mov adc addr16 inc sbb in enter push aad fisubl pop or cmp sub call cld aad push xor out mov ss xchg outsb stc inc jmp adcl aad cmp push sbb rorl mov subb mov js lds das iret lcall mov dec mov inc pop pop xor jl in adc popa mov js fdiv lea mov shll addr16 out (bad) xchg loope sbbl jge mov add cwtl inc test in mov into sub cli dec sbb mov out adc dec mov js in pop jl lea jnp loope jg mov aas sub or inc in inc pushf mov cmovo test mov add xchg sbb add dec cli imul mov in sbb int3 pushf shrb jmp jae mov loope bound in xor push fwait inc int sub xchg inc into sub enter hlt loopne push rcl adc or xor cmp xchg and es mov loope jne pop cli leave mov push mov jne pop jbe cli divl loop in push mov jbe sbb push xchg mov xchg int3 xor push les shlb inc push cld add sbb add sub and les ret sub add insb fsubrs mov fadd (bad) mov out popa testb enter pop jb sub push sub xchg aaa daa adc movsl cmp cltd mov jb xchg and outsb push xchg or dec xor sbbl cmc orl adc mov mov insb push cmp rorb or nop adc stos adc xor xchg idivb dec mov imul jmp aas movsb cmp pushf dec inc stos dec or sahf pop popf test inc pop jge lret cli je sbbb push and aas (bad) scas or inc xchg push lret dec dec outsb adc ret lret push jnp jg xor push add mov cmpsl pop movsb and inc xchg sbb fs xlat mov pop push lret dec into cmp mov and int3 sbb outsl test xchg xor out cld test popa lcall sahf pop int3 loope fdivr pop ds into out sahf pop ljmp xchg mov loop test leave jb lcall lahf cmp cld aam mov mov mov adc or lret ret jl push (bad) sbb dec mov xchg mov lods add jbe inc fdivrl pusha sub fstps stos (bad) lret shr (bad) loop dec add das mov add repnz les addr16 test imul adc push in out inc gs and clc test cmpsl xor out cwtl adc push out push pop (bad) outsb fcomip cs sbb inc iret rol pop xor xor sbbl test or out add ja,pn (bad) mov (bad) into cmpsl add mov rcll out repz xchg loop fist mov and mov xchg repnz fnsave xor sub jmp leave jle push push dec push insb pop icebp adc popa scas lea std ret clc inc pop imull xchg pop and orl jbe and xchg (bad) mov mov add xchg inc gs (bad) mov push rcrb push addb push ffree pushf addl jo pop (bad) loopne leave stc jno push pop cmp mov loope cmpsb mull out xchg test aaa push mov push jnp ret into mov sub jb and xor pop je das popf inc jecxz (bad) jb (bad) push mov cmp cmc sti or rorl rcl cld push js sbb cmp adc pop adc sahf sub mov pushw in jl notl pop sahf loop pop mov aam fsubrs les pop mov mov scas adc push scas dec sti cmp cs movsb aad dec or xchg movsl lds bound sub (bad) push sbb movsb mov jl add lods in sbb inc add stos jne int popf hlt outsb fcomps dec (bad) loop push mov adc ljmp pop pop jo ret jge jno cmpsl push mov popf cld adc icebp mov jg jae sub test jo xlat nop divb mov adc fwait pop (bad) jp pop and mov movsl jge pop dec arpl mov aam xor push insb jno pop sub pop js or mov push adc jnp shll enter mov or lahf cld mov and mov push mov sbb popa arpl pop xor sub adc icebp mov hlt pop jns rorb (bad) inc sbb fdivrp mov (bad) out dec push div push inc clc xchg lods jge ja xor lahf dec lret pop dec lret and pushf jecxz idivl add fbld dec test dec test (bad) ret das push and outsb inc dec (bad) mov int3 mov pop ss cmp sbb pextrw pop es je push fwait cmp hlt jnp fstpl add add popa jg lods ds xchg cmpsl fcompl imul push (bad) dec int3 xorb lret out int xchg sbb or scas (bad) in lock or jle jb xchg fsubl out ds jl enter lods stos dec fwait aam call mov xabort mov mov push and jl or popf data16 mov mov dec std push pop mov stos repnz call dec fnsave out sbb xchg adc cmpsb mov scas inc (bad) xchg mov dec inc out sbb jmp and xchg sub jae sbbb icebp jb pop dec push and xor push push lods fsubr mov jle out int mov std jg mov fdivs pusha or (bad) or sub and adc sar test ljmp enter lock mov enter mov push lods ret sbb jge (bad) jl mov pushf xor xlat or dec or inc pop les xor sbb fidivrl dec aas pop xor cwtl dec lret sub mov cmc xlat dec out repz je mov imul nop mov inc mov sbb in jo repnz fdivrs iret sub pop icebp mov pop out lods lcall pop push mov mov das bound je lcall (bad) (bad) (bad) stos or pop icebp fbstp fist decl jb add mov cmp mov or out mov aas jmp test (bad) popa mov rorl test into call aad in mov daa repz lds push test repz outsb pop inc sbb mov xor sahf sbb inc xlat hlt out lret icebp sbb adc jge data16 rorb pop inc ss jbe mov mov cwtl inc lcall pop sbb add mov push out adc sub jbe sbb push mov test test xchg sbb test sbb inc xchg pop push cmpsb in xor in pop xchg imul out lods fisttpll add xchg mov mov cmp push repnz fstps (bad) jne push lret push popa mov and mov add jmp mov lock scas aam xor add lahf mov fsubrl push hlt sub (bad) add in movsl cmpsb cltd enter ret daa je pushl and imul mov mov in je ret or xlat inc addr16 push add xor stos fcmovu mov jae jno out ficoml dec push int addr16 test adc jle sarl push mov es xchg rclb aam xor rol jne or and mov icebp ja xlat sub add mov outsb or insl mov (bad) xor gs xchg scas adc jp mov or jl in push xorl and mov or ss adc iret mov lahf push lret arpl add add or xor (bad) out dec outsl (bad) ffree pop lcall repnz test pop push mov jecxz xchg test mov fwait add popa js mov push gs jl,pn push xor inc mov sbb loope mov hlt in and or inc mov iret and sbb aaa mov loop pop insl sub aad clc jecxz cmpsb in (bad) xchg lret add jb sub mov push jecxz pop jg imul push dec mov sbb (bad) and pcmpgtw jns sub jmp cmp push test addr16 and jb int push iret outsl nop dec cmc xchg sub data16 pop push xchg scas cli sbb sti mov or out fsubs adc mov push mov ss movsl jae and mov pop inc dec sbb mov sahf xlat ljmp out shrb xlat mov push pop loop add imul mov stos repz cmpsb cmp das and in movsb fmuls nop scas fnstsw add and xor push inc lahf push shr imull insb cli (bad) mov mov movsl xchg bound xchg (bad) jg in pop xlat cmpsb jge fidivr call cmp lods faddl cmc sub sub cmpsb (bad) cmp jae gs or lock xor push (bad) scas or ja cmp inc mov pop aas cld fwait jnp pop loop adc shlb mov fs pop sbb and jecxz rcrb rorl adc cltd std push dec inc sbb sbb add (bad) adc in sub mov push cmp mov sbb mov into sarl xor mov dec xchg insl pop xor pop cld add sub cs add loop fwait mov pop or js mov xchg inc sub ret shrl sub xor out and dec jmp lret test push mov cwtl shll popf dec xor and jg enter (bad) push ss in pop pop mov je mov cmp out xchg fimul pusha or xchg inc lods xor mov jecxz hlt bound jmp scas notb js sub pop mov and mov fistp pop pop stos xchg rcrl sub xor enter iret pusha or std js cld addl push popf xlat add add fs fnstenv push pop xor aaa push scas jmp lret es fdiv cs loop adc dec lahf inc out pop aam or mov js mov inc insb lahf sub sbb inc das xlat mov and jb dec or fsubr shll push cmp insl ret aad imul insl js adc pushf pop mov in rclb xchg and nop fmulp pushf mov stos mov rolb popa cmp stos dec ljmp mov sti xchg push push call jle xchg jg adc (bad) testl leave (bad) (bad) mov xlat out (bad) sub hlt fdivrs popf outsl subb hlt enter jmp dec into mov sub pop cmp xchg mov repnz fimull xlat fild mov dec clc or repz jns popl dec movsl mov xchg pop sub pusha pop aad in mov lret push cmp pop or xchg cwtl mov add fimul bound aaa in xchg sbb push stc mov xchg negl fwait mov ljmp data16 (bad) (bad) mov mov push lahf pop rclb mov stos jbe bound out in loopne sbb push cs jno push mov stos sarb xor and cli sahf cmp pushf shll arpl mov xor pop adc xor add push iret cmp fstps mov fnstcw dec pop fwait pop jmp jae xor add xchg sub cli std add stos repz push adc jno jae xor xchg pop call push pop movsl sub in push cmp rclb sbb js add cmc xchg jno push repz (bad) idivb and push and mov xchg movsl mov repnz lods ss or (bad) cmp and lea lcall mov fimull shrb ss jno loop mov stos test ret in or icebp lahf mov scas mov scas mov inc outsl fist xchg mov ljmp lss inc jae pop scas jne mov in sahf shll cld divl or out fidivrl daa (bad) and mov xchg and icebp and mov cmc (bad) mov mov add and imul inc inc iret and (bad) dec hlt ret and and mov sbb jne mov mov push out mov xchg (bad) pop lods xchg jg push pop mov pusha (bad) enter or idiv sbb sbb adc dec fstps pop lea (bad) (bad) mov lahf lea repnz pusha addr16 mov xchg mov mov aam gs cmpsb insb sub pop jnp dec add xor push jbe jns jmp sub mov sbb jb (bad) sub cmpsl jmp out repnz xor adc sbb stc lcall and cmpsb mov xlat cld xor jo mov scas xor cmp dec (bad) pusha arpl test jge lahf xor xor jae adc out xchg sub outsl pop jb mov sub repz test xorb enter arpl pop pushl out cmpsb add dec inc insl cmp je fmuls (bad) xor inc test in mov xor cmp xor imul sbb mov lea adc and in mov mov stos out lret outsl jnp and in movsl add cs jns frstor mov and lea mov nop ja mov imul pop mov loop test mov mov (bad) iret bound test popa fimull ret jmp xchg cmp in cli aas pop inc jbe mov jnp icebp adc inc push mov pop xor data16 sbb xor mov push cwtl sbb in stos cltd pop lret out dec mov fcmovnbe test jbe adc add pop mov xchg push mov scas out (bad) ja in lea jns xor jae,pt rcll in or mov jp and into and mov mov idivb sub and addl mov lcall shlb inc dec (bad) jge push adc and arpl mov test outsb jno mov adc mov xchg pop jae mov loope insb (bad) xchg aam stos mov pop je data16 cmpsb dec ret dec cwtl and mov cmp movsl insb aad add dec das adc mov sbb les jp lret push push xchg pop cld jecxz repz cmpsb inc std push cmp (bad) (bad) shrb les jne adc mov cmp xchg adc or inc mov fs sarb (bad) cmp cmpsl aas fmull mov xor pop pop cmpsb pop in xor stc inc jmp std inc ja inc xchg cs dec (bad) idivl ret lahf pushf and nop pop inc int3 and pusha lock sbbl iret cld inc nop fnstcw test mov stc mov sbb test mov mov sub insb ljmp mov fisttpl pop js ffree (bad) inc jno sub pop fyl2x sahf adc dec addr16 jl push les shll pop push cld dec push outsb sub sub mov push mov lods cmc xor (bad) jo and std sbb aad call cmp arpl popa lret push sub sub cmp addr16 and outsl fwait mov js popf pop cmp dec push or insl das mov mov dec addb jno js (bad) outsl sbbl add ljmp call icebp inc (bad) mov cmp in add mov xchg lea test mov add add fdivrp iret xor fwait mov fcoms ds mov bound jae mov jbe inc fucom and jg push pop lret (bad) (bad) arpl mov mov sarb pop ret mov cltd cwtl enter mov loope pop mov inc cmc sbb in push dec jl loopne or xchg fdivl imul and adc fistpl cltd pop leave into adc mov jmp xchg mov jmp xor ljmp xchg addr16 fidivl mov jmp ljmp pop imulb movsb sbb and fs addl pop mov test shl cld addr16 xchg pusha adc pop ss int jl xlat cmc es mov sbb repnz mov or fldcw idivb into loop adc loop out xor mov and push sbb shrl push or popf pop or mov mov decl jo in jg out mov aad pop jge xor push rol jmp sarl subl cs ror xor cmpsb loopne pop and xchg (bad) (bad) in push or call int3 fwait dec jl loope jle mov sarl push dec jecxz sarl jb addl push insb push je cmp push jle pop dec aas cmp in push add mov sahf lods jns les (bad) aad call or cltd (bad) jne inc sub cmp cmp je or inc insb gs ficoml stos addr16 adc mov add xchg push push cmp cmpsl rcrb fs sti xchg add test out addr16 mov lock push inc cmc in mov je xchg dec mov in add xchg jmp push movd mov lods clc ficoml adc call pop mov jl pop das (bad) and mov neg loopne xlat es jmp shrb and cmpsb loop xchg inc pop test test or xor xor aaa cmp pop aam in clc movsl xor stos push sbb jno add mov pop icebp or in or cmp mov jl ds loopne push inc push stos pushl ret repz adc pop xor movd pop mov push arpl (bad) in rorl cli xor pop pop ljmp xor in pushf fisttpll push (bad) push push in mov insl mov mov arpl into pop cltd lret cmp jl mov cwtl leave add enter std push es or jge cmp ss inc ret pop loopne fnstsw add mov xor jg dec jo mov mov stos fsubrl ffree rol sti call inc (bad) ja stc lcall iret mov adc add jb scas cmp push divb ror test xchg add test lods xor adc jno loope adc xchg (bad) cltd cltd pop sub push mov stos test stc sbb mov and mov cmp (bad) pop aaa movsl lret push scas movsl xor (bad) movsl repnz cli pop jns stos push xor stos or addr16 xchg sub lock sbb pop or mov adc js xchg daa iret sahf fbld jo pop enter dec (bad) xor cli cmpsb dec lahf loop mov shl cwtl cld fistl loopne outsl xchg mov or (bad) mov mov (bad) xor shl imul mov add lret sbb cmp hlt fisub cli aam xchg xor mov add (bad) popf into mov xor mov mov push sbbl sub add les fbld rolb pop xchg sbb cmp inc or xchg push cmpsl in icebp and xchg push add and jnp mov mov pop clc pop repz es out or sub pushf in cmp loop sbb loop add cltd adc das dec daa cmp add cmpl adc add mov xchg mov lret test mov sub repz std or cmp out cli fidivr mov pop popf arpl subb adc mov jo sub das add lock cwtl xor jge jno hlt pushw repnz (bad) movsb or adc inc es enter aad jns out iret inc mov clc mov fsubr push add into xchg pop cmp fwait mov andl shl ljmp xor dec mov mov in fs std test pop mov shl lret mov or dec xchg call aas (bad) in mov add mov fs imul jl mov mov scas nop bound cmp mov (bad) ljmp sti sub sbbb out js out jne into cmc andl pop jae inc fidivrl jnp mov push movsl repnz les mov jns in mov adc test push xchg int stc sahf push clc fimull mov (bad) mov and lea fnsave dec js in sub mov rorl xor dec mov cwtl iret dec ja inc aaa ljmp fs sbb lahf add xor insb dec arpl dec mov ja sub jge lret push and pop rolb fcomi jmp hlt imul push jmp dec and cmpsl xchg hlt mov arpl (bad) call out ja outsb loopne jne mov iret mov or lods popf int js in jecxz push sub out mov mov addr16 inc xchg enter mov mov stos inc mov aam sub mov aam fldenv or jecxz js pushf pop jne push cmp push scas adc lahf dec fstpl mov sub popf dec es sub sub sbb and mov in aas pop movsb push (bad) jl int3 stc fdivrs push inc lds pop or int3 (bad) cld jne lahf outsl mov xlat mov dec mov add (bad) rcrb pop (bad) mov sti (bad) mov mov fldenv jnp mov sbb and adc popa hlt jp out out pop mov shrb pop pop cmp cmp ret js mov scas sbb pop push xlat cmpsl and cmp or roll xchg shll test (bad) jnp jp fisubrl push mov adc sbb adc cli lahf jmp daa fwait cmc pop jle and mov int3 je stos mov leave fdivs dec mov lcall pushl ja gs popa push in test out stos fucomip cmp arpl lock imul add mov sbb jnp adc sub popa lret out push sbb sarb cmp pop jne sbb out jl inc cld inc imul fcomi insl xchg pop (bad) cli xchg or imul and fdivl enter jg dec or into mov dec sub out bound inc fidivr test test (bad) mov mov mov pushf dec mov xor fwait sar int3 int sbb out bound sbb jbe mov addr16 or fbld pusha pop dec out jg jp xchg (bad) mov add sbb repnz ljmp sub sbb (bad) or into pop pop test mov and jae jecxz or addr16 or lahf and xor sub xor aaa outsl mov subl adc mov leave push int3 mov jmp lahf lods push or test pop mov call pop mov sub fwait mov sbb pop and outsl add fwait jle aam add insl or shlb or mov cmp es lcall adc xchg adc stos addr16 inc sbb cmp je loop xor lods in inc shlb or mov ds iret cmp pop popa sti leave cld adc repnz movsb dec dec sub aas and and movsb std inc xor fstpl xorps shll dec testb pop das mov mov scas pushf and imul iret xor aam push ficom jno xchg sbb jne mov into dec imull popf cli dec pop xchg jmp sbb xchg xchg sbb jge xchg aas push cld jecxz push adc shr and lods test dec pop lock dec mov js test cmp rcrb into xchg mov out aaa adc sub push lahf fidivrl jg xor iret mov xchg jno jns or mov cmpsb jge push mov jl and and jecxz lret arpl mov (bad) mov sub push jge sub or mov in jnp sub (bad) and int3 cmp adc mov pop sbb test into push inc aad and lret mov xor mov mov pop gs mov bnd shrl (bad) xchg ja jns cmp add rol sub ds cmpsl decb rcll decl addr16 xchg test fs (bad) xor sbb mov jp mov icebp sti cmpsl int3 je xchg or sbb xor mov xchg jnp jmp hlt popf lahf outsb ret cs xchg repz daa ret cmp daa push mov add (bad) push cmp (bad) insl into out cltd loop cmp push dec cmp orl dec lock test adc js sbb jle pop cmp and and nop fadds add aaa xor and cmpsb dec fidivrl fisub xchg and sub add jle xchg pop pop dec stos add jo int and popa stos les loop movsb xor jle fs movsb (bad) sub fdivl loope cmp cmpsb cmp and ret jmp sub xchg adc mov inc mov xacquire fs fcompl add cld movsb cmpsl pop loop hlt or test xchg pop sub outsl jle rorb stos sbb xorl mov adc xor imul aaa jp cmove fsubrp andl sbb xor lahf and ja inc nop lret rcrb mov xor roll and xchg clc or stos lret (bad) test test or mov mov xor aad pop cli jo mov add fisttpl mov icebp inc fadds mov jle into jnp or test or sub ljmp out or mov idivb xchg arpl pushf inc aaa aas add xchg inc adc push cwtl sbb movsb and imul xor mov test push enter jno call arpl rcrb jae push addr16 and and enter xchg shll push sbbl mov mov push xchg rcrl test mov mov xor cltd adc sbb jg gs mov sbb popl test mov add xchg lock mov cmp (bad) stos inc push and add jb into pop add in cmp cwtl xor in stc gs fsts xchg cwtl mov cmp imul dec (bad) fstpt addb mov lret in add xor lahf inc sub push jmp mov add and push fs mov push lea dec fstpt inc insl push rolb pop cmc xor enter or (bad) aam jb fucomp subl loopne dec sti sbbl pop (bad) push sbb jno xchg dec and aam fidivl sbb dec sbb push daa mov xor dec ror jo jnp mov repnz outsb in sub xchg call stos mov sub and mov jle push push clc fldt sbb lea sbb (bad) mov sub mov sub jne divb pop xchg mov mov dec js lret sarl mov ja mov div lock out sahf mov pop push push fnop enter arpl pop sbb push or inc addr16 in out adc (bad) mov pop punpckhbw push xchg mov xor popf lret (bad) test cmp fmuls jle js imul (bad) push mov push popa xlat in push push add data16 mov imull pop xchg sbb aas or add cmc sbb arpl nop cltd pop (bad) outsl mov mov adc xor or shrb sbbl cld aam mov xchg and lahf fldl sbb dec leave pop rorb inc fildll push aas jle xchg sbb jae jmp sub pop cmc aas adc rorb lahf iret sub call out push mov rorb jns and lods xchg add dec test xchg outsl sub dec xchg popa pop adc aad jae mov jno dec and pop xor testl (bad) xor movsb inc push popa lods scas mov cmc sub lock cmp jecxz aaa add clc pop push sub add mov fiadd sahf test jne mov mov add xchg push xlat xor or repz fnstcw mov imul aas add cmpsb daa out pushf sbb push adcl push dec (bad) push aam inc push loopne sahf das and and jmp std mov aad xchg mov or cmpl push xchg imul rcrb in jbe fwait push int3 lret lret xor dec and fisttpl mov js cmp int or or cmp pop cmp adc lcall push jmp add adc call sub add imul sbb fist hlt cmp jno pop sbb push lret jns or adc xchg cmpsb in mov sbb dec sub add mov lods inc cmpsb lret fwait ret ss fptan pusha dec cmp inc das mov ss test sbb sub (bad) (bad) enter xor dec adc adc repnz xor push mov (bad) mov es sbb popf mov xchg xor xchg std fldt add repz aas aaa (bad) aam xor daa push xor pop subl fimull inc jb loope int3 dec mov orl out push lods adc in in pusha sbb fmull cmp sub mov int xor sub dec dec sahf call bound mov and lods dec or pusha sbb jo rclb fcmovb testb jno push inc mov test inc loopne aad cli lds add jle or js push mov outsl js jle lahf cmp fwait leave or or popf jnp lods insl pop sbb lcall mov mov xor arpl sahf (bad) lahf sub jnp mov mov ds adc mul mov lret dec sbb shrl push fnstenv lea stos cmc pop inc jo jae aad adc fist in clc movsb aaa lret out xchg mov add imul ljmp (bad) ss (bad) sub (bad) jbe push inc add call push mov sub fsubs sbb dec adc ret rclb cmp pop loop cmp aaa mov (bad) stc enter or jge mov in mov addl int sbb dec mov loop lcall mov fst xchg ds mov xchg inc sbb aas mov ljmp imul gs cmc inc mov sub push jg lret or xchg nop arpl scas add cmp push mov add lcall adc stos push add shlb mov insl inc (bad) mov mov div mov fnsave test and sbb mov add pand lods std jb add push es and xlat mov cmc inc dec sub arpl call es xor mov xor enter cs push nop stos dec pop mov aaa xchg sbbl hlt jecxz fist mov es imul leave mov xor and and sub scas mov or inc cmp into lods dec or pusha and sti scas cld inc into pop cmpsb insl enter add outsl (bad) das cmovg clc fs add call sbb mov pushf es mov scas ret push add movsb mov (bad) ret cmp mov test rcll sub xchg out or les dec inc lea mov cmp ret fist and in jb (bad) pop in dec movsb push repz add push lcall imul adc and jo addr16 push rolb enter xor mov jge pushw ret in jns andl inc inc imul fcmovnu mov or aad aaa jg mov sbb xchg xchg sub mov (bad) out jecxz pop popa cltd loope sbb or fist std xchg int3 arpl dec test sbb in inc sti loope cmp push mov loopne icebp add stos mov fisubrl ljmp in lcall aaa xchg or clc and arpl rep shr sbb and push pushl mov fsts push fsubrl mov and icebp jo enter pop or add lods bound test (bad) in (bad) xchg popf xchg ficom out je sub in xor enter ret out ja push mov loopne repnz pop jns cmp cmp mov andl xchg vmwrite xor aaa nop mov sar fcoml and aad mov (bad) dec jmp insl addr16 (bad) popf pop pop pushf push shl cltd adc or std dec adc push addr16 mov lock aad cltd mov rcrl mov data16 int3 mov mov scas int3 and mov dec xor adc data16 aaa jge cli push and sti jns call sub push add lcall add ss bound dec imul cmp jle cmpsl imulb sub and jno in mov aam mov xor (bad) mov sub movsl xchg xlat jo or push es cli stos sub mov pop int int mov sub fucomip cmp movsl shll jmp xor add pop in pop and movsb or xor and roll sbb ss or cmp fwait sbb fs (bad) rolb adc jb fdiv jo loopne pusha leave pop fdivrs fsubs les dec add adc data16 gs gs das mov push in (bad) push lods jb cmpsb (bad) imul out ss (bad) sbb loope add stc es imul test addps ljmp addb inc iret sti sub lods push and xchg movsl psrlq push jle lods xchg sbb dec mov (bad) jl test test jae ja pop test lea dec pop rcrl mov push or inc add and jge and pop adc out insb ds and movsb xchg test or pop fbstp out outsb dec dec mov mov cli adc and sbb jns push pop ss cltd cmpsl inc ficom outsb jmp add mov sar push adc lret mov dec ret lock inc pop jle sti adcb mov (bad) repz xchg subps inc jecxz jl cwtl inc stc test es imul cwtl mulb push mov clc pop fsubl lea dec mov fwait adc nop adc lret cmp push mov fsubp dec sbb test mull mov dec rcl lea dec cmp adc mov cltd scas and fisubr lret data16 jno lods mov aaa dec jle movsl sbb stos xor mov or and dec scas sbb in cltd pushl fwait imul clc stos adc sbb out cltd sbb sub mov or ja int mov mov inc punpckhdq aad mov fsubl push jmp fnstenv pop leave pop jmp dec adc jp mov mov fs sub inc dec dec lret jne and dec push sub adc pop mov loop ds jbe sti push adc mov jle dec retw pushf (bad) sbb push and lods jno (bad) sbb push xchg les jl adc (bad) cmp dec orl stos adc (bad) sbb inc dec cmpsl inc inc movsl xor add push sub sbbl dec adc divb cmpsl stos jns adc and into fwait inc pusha and mov pop int3 dec mov jp push lret pushf cmpsb xchg ret fcompl push inc sbb or inc ljmp inc or sbb sti (bad) xor daa sub push sbb dec mov and sub push fwait shll loop loopne roll inc jp or out inc pusha lea test cli xchg push push push jne xchg jge mov ljmp push dec sub mov shrb adc inc sub test sbb push cld xchg loopne adc (bad) mov sub jb lea fstps jg in out push mul adc cltd sahf sbb sti lcall mov sub roll sub out pop mov sub (bad) inc adc aaa lods xchg fisttpll test cmc mov or mov sub xor push xchg cmpsl sarb push dec popf (bad) scas sbb imul iret ljmp inc sbb scas cld js cmpsl data16 xchg mov fs jne jl in xchg aaa lods inc popf mov scas adc add xchg scas push adc outsb cltd xor push mov push es aas push push pusha js jo dec bswap xlat je hlt and pop fldcw or fildl movb ja push and xlat xchg (bad) addr16 xlat out popa cs mov lcall cmp in (bad) sbb push je sti or cwtl aas jne fcomps sbb aas sbb sub mov adc jo out mov sti ficompl stos mov adc call movsb (bad) fimul push mov push sbb push adc repnz std loop enter fildll loope mov xchg sub (bad) data16 jge test mov out jae add imul ja std neg mov cmc mov adc (bad) jp test (bad) jns rcrl xor pop jmp lcall add inc xchg sub xor mov cwtl repnz push push cmp shl sahf loope testb pop and push enter push push adc in je nop ja sub sub jb mov xor mov push movsb adc and jo mov pop loopne push sbb cmc mov add or cwtl lea cmp icebp enter xchg sbb dec aam out mov cs mov push push in popf andl mov jmp fdivs sti and les movsl and int mov pop in sub bt aas (bad) mov and mov aam out jae cmpl sbb dec sub inc loopne aaa cmp inc aas addr16 or lds ljmp jmp nop icebp push and into dec mov inc push mov cs (bad) int jl jg lock vpmaddwd jnp insb sub leave sarb cmp mov or jp iret xor pushf fbstp xchg shll cmc loopne les jns jbe jecxz test jne pushf pop push pop mov mov xlat setge dec inc xchg inc mov flds ja ret (bad) in cltd push xor stc mov scas inc repnz clc adc stos ficoml add (bad) push and mov sbb sub add dec mov fisttpll mov mov fucomip mov insl les inc clc pop dec sub movsb cmp pop in add dec divb (bad) (bad) mov adc cmp int pop jg mov push adc mov pop into movsl inc jg add dec pop aam dec mov pop addl xlat cmp shrl adc fdivrl mov mov sub cmpsl sbb mov js or xchg push or repz repz adc stos jg jecxz ja lock mov cld insb sahf es pop and adc aad jge cmc push xor pop jle mov fwait out sbb (bad) out dec sbb mov or popa je mov jle ljmp scas or mov std ret mov cld ret cmc out cmp pop in mov flds out outsb mov cmc das jae (bad) out pop nop inc jp and popa fnstcw (bad) mov or ss enter inc pop pop adc push std dec inc jnp leave aam xchg (bad) pop mov rcrb pop (bad) jo int3 arpl cmc sbb xor sbb inc and inc fbstp aaa fwait movsb outsl pusha cmpsl xchg sbb insl mov cmp out mov ret jge aad or mov sbb mov push dec es and pop lcall scas sbb push xchg ret stos inc xchg dec jns jg sbbl rorb cmc (bad) je pop and push fldl jmp fs icebp cmp lcall cmp (bad) adc (bad) or (bad) outsb cmp sub movsb dec push popf xor sbb mov adc sbb mull mov add or in jnp sub push in pop mov out repz jno cmp loop cld add inc jmp xor fsubrl cmpl mov in pop mov ljmp push jnp dec clc loopne jp fisubrl in (bad) sbb adc cmp roll cmp fisttp cmp iret imul in pop test inc cli push sbb mov sbb add sub cld xor jnp (bad) xor cs pop jle mov pop cmc loope inc mov xor adc and add jae in push or jp je adc ds into add sub aas jo popf leave int mov add push or jg (bad) jbe inc dec pop arpl inc insl cmp (bad) adc jne movsl add mov fdivs ret cmc divb push pusha cld pop push dec stos xchg mov pop out jo sbb mov lea push sub icebp les insl mov mov inc dec push sub aaa clc imul rcrb push movsb daa cmp xor mov adc loop in mov mov xor lahf pushf sar push xchg (bad) inc or (bad) inc addr16 jge fiaddl and es jno cld les lret push clc clc lea test cwtl cwtl ror and fcmovnb xor aaa add enter sub push cs mov hlt int test dec inc out decb sbb push push call lret jo cmc rorl test mov (bad) sub push jns and aam jnp dec ss push ret outsb ja inc aaa jb shrl xchg mov inc rol nop (bad) jmp in sub lods push xorl jle push enter movhlps push fwait and pushf xor lahf mov xchg jnp call push mov in and pop repz xor inc add test inc jp test inc add imul jle imul push push rolb xor iret sbb mov nop mov push sti xor sarl ds dec sub movsb inc outsb inc ds mov out outsl mov sub sbb (bad) xor add dec sbb jmp pop rorb mov sub out jmp out mov push daa aas jo inc cld mov ljmp inc insl outsl (bad) std lahf popa out inc cltd js rcr hlt mov scas jg movsl inc push cmpsl jl (bad) enter push xchg dec fisubl cmp jnp icebp xchg push adc lods and outsb lea inc rcrb test movsl mov add nop push push mov mov push arpl in fldt or gs inc ror movsl sbb pop lea daa jecxz push jns xchg in bound mov jns fwait sbb sbb lods xchg aas xor lock mov xchg pushf mov dec out jb sub lods cld cmp jmp push jnp ja xchg dec adc aam inc (bad) lds rcll pop aad or cwtl out nop/reserved dec sbb xchg add ljmp popa lods in loop (bad) mov mov cmp fistp idiv sub push jmp out jecxz or dec jp xor cmp mov movsb fmuls jb repnz cli stos andl andl fcmovnu cli dec inc lods mov into xchg ss call sbb xor lds popa in ja sub movsb mov dec push xchg fwait xor mov push push push push push jge jmp fmull cmpsb faddl or cmp sarb in cmpsb dec dec clc or adc ret xor lea repz stos stos cmp or je push jne push testb movsb push pop mov scas pop jle (bad) cld inc mov or imul xchg pop scas push cli shrl (bad) aaa inc dec stos and cmp add dec mov clc jecxz lods and aam lods jb cmp aaa sbb pop divb adc mov ret mov adc xor (bad) mov faddp inc add (bad) xor xor cmp xchg movsl or cmp lcall xchg mov mov cmp push cmp rclb js (bad) jbe xchg jbe es (bad) fs dec int3 lahf (bad) fistpl jmp mov (bad) add (bad) loopne mov in push test std xchg bnd sub loop sbb mov mov cwtl loopne pusha push push mov sbb (bad) fs xor mov out push adc nop sub imul pop movsl push xlat inc movsl dec loopne (bad) out cmpsb push pusha mov jbe test (bad) hlt and rol popfw jo rorl lret cmpsl dec lahf pusha sub ja shrl add lods inc in in (bad) cmp movsb xchg mov jl dec pop dec push ja cmp insl nop (bad) or (bad) mov std stos dec mov stc call movsb xchg (bad) das push or (bad) mov (bad) (bad) mov and xor cmp pop sahf test dec pop sub jae (bad) inc lods adc (bad) lods (bad) jp cmpsb imul inc dec dec insl call and add xchg adc and or pop daa pop xor pushl push imul aam imull loope and mov lea in sub (bad) sub hlt add pop xchg xchg loope push pop scas or jg test mov cld sbb (bad) sbb push jg subb sub dec ljmp repz sbb mov sbb insl lock mov outsb sub out lds dec xor ds pop rorl push and les add (bad) adc inc call (bad) inc or sub movsl les out adc aad or xrelease in notb test mov (bad) pop arpl mov das repz mov adc sahf dec xor xchg repz adc mov sahf xor sarl sbb cs iret aaa dec lcall jnp fsubrs mov enter adc mov sub ja xchg ret out cli push or xor gs pusha outsl cld in adc jo mov jmp popa orl (bad) add sub xchg lock push (bad) xchg push mov (bad) loope sbb leave fwait xor mov mov notl cmp insl pop cltd mov aas add (bad) loop imul int sub mov adc and cli and (bad) scas push rcrl paddw push add aas repnz mov add outsl mov ds addr16 xchg push push adcb test (bad) and push ffree insl xlat push xchg repz (bad) sahf icebp movb data16 sub inc mov orb insb bound add cmpsl mov faddp (bad) repnz mov cmc rcrl insl addr16 mov loop sbb (bad) jnp and je daa lret xor jecxz into push fidivrl and and sub fnstcw cmp jmp (bad) or mov dec dec repnz mov push sahf add fwait cmpsb int xchg adc sbb test cwtl fsubrs sub or xchg dec out sub and jp push shll fcomi jl mov or aas es pop hlt insb mov add and dec cmp xor dec push cs test rorb cmpsb scas ljmp jnp and adc lea xchg xchg sbb fadd js pop ss xchg insb xlat cmpsl add and adc loope pop loop into pop cs fistl jge mov jb (bad) and jle push es scas mov lahf icebp add mov stos inc sbb test (bad) in and pop les sub cld in mov push les enter mov out iret inc sbb pusha lods stc scas jnp (bad) stos jo icebp nop and mov gs pop xchg (bad) jno cmp mull mov cmp pop sub lret test mov stos cs and jno scas push nop fldl2t add mov mov lods out ret hlt xor bound and cltd inc xor cli (bad) dec xchg pop cwtl dec jmp push pop xlat fcoml aam sbb xlat jecxz dec into add (bad) repz call mov mov mov fisubrl adc add bnd in mov rcll sahf jle sahf notb lahf ljmp test jmp add fscale or lcall push pop (bad) pop jb push inc roll jl call jb lea pusha (bad) inc xchg dec fwait mov in mov mov sbb push jnp xchg cli imul les mov and mov cmc add loop push cmpsb inc leave jecxz insb in or jae jmp add (bad) jno (bad) ljmp add les or imul and mov dec xor sub scas sub scas xchg rclb pop inc enter inc in cmp loope and in pushf dec ja fdivrs cli aam sub gs lret cmp lds jne pop xlat lds adc daa sub aaa push jecxz push jno not aaa sahf xchg outsl call pop jle rcll ljmp and ret adc push cmpsl add outsl (bad) xchg (bad) mov setl (bad) out add js test jbe lahf or call enter ja fwait cmpsl inc fldl adc lods pusha cmc ret or pop (bad) ret inc mov adc mov cmc xor pop ja pop mov (bad) fistpl push and mov add sarl call arpl mov cld add mov adc ljmp mov cli jbe es sub movsl jmp push sub insb xchg and mov je xor movsl shrb mov div push imul inc push add fisubrl rorb pop repnz mov mov rcl mov sbb add das bound js das push outsb call add push mov cmp sbb nop stos dec lods lods inc xor sbb mov or fmulp testb rclb daa or jecxz mov leave out jnp stos add push fistpl sub mov or cmp adc sbb test fstpl mov sbb mov xor test aas xchg xchg mov das cmp dec xchg aas out mov int out xchg ds ljmp fnop adc test int test mov adc xor daa mov pop arpl pop shrl push add add divl xchg inc xchg loopne lods stos mov push sti xor mov cmc and add xor mov push mov aad pop fdivrl in loop pop push pop mov hlt push sub fwait pop push or rclb sub das out push push mov inc les jbe mov inc xor jp ljmp enter ror inc int3 test out add idivb cmpsl stos imul mov mov xor pop mov mov jbe push aas add jne imul imul xor push push stc lods sbb add cmp outsl jo mov inc sbb mov hlt pop mov xchg mov in jge daa push ret fisttp pop xor dec and xchg cmp fcoml dec aad mov loope into adc scas xchg cmp mov inc dec mov icebp ss pusha xor and push xchg inc das (bad) xchg and ja mov jg dec mov (bad) mov cmpsl pop ror outsl jns inc pop stc push sti imul in aaa mov or aam fistpl pop inc dec sub xchg sub mov pusha add mov mov xchg cld fcompl or rorb fnstsw push test and adcb xchg mov sbb ljmp popaw and shrl or outsb push jl or loope sub movl mov jp mov sbb roll es mov hlt sub mov xchg int mov xchg mov and movsb xchg stos pop (bad) push out loope jbe lds popf sar stos pop lcall or or cwtl mov adc inc xchg (bad) mov mov push pop lahf push sbb jo repnz cmpsb cld int3 fs roll outsb or or and sub xchg test cli xchg mov cld push add fidivrl in add test and in aas inc xorb and insb mov aas pop cmp std cltd sub or dec pushf mov out sub add adc add call inc mov std mov inc push mov ljmp stos push lock push and dec jno (bad) xor arpl (bad) mov xchg mov scas dec in cmp add sub xchg icebp sub popa outsb mulb repnz gs jecxz ss lret cmpsb pop es pop mov mov or or mov mov (bad) push cmp (bad) sbb xchg pop or jns psubq (bad) mov mov fiaddl in sub ds aas scas cli sbb sub mov mov or bound jmp push std and lds inc insb cli push fsubl push mov mov in out fidivrl (bad) cmp adc test cltd test cmpsl fcomps inc ja pop lock mov cmp mov fnstsw scas ret in lock xchg mov adc jno (bad) outsl daa and pop (bad) mov mov add lods daa jp pop add loop push in jge test sub jbe or (bad) fwait xor xchg push mov inc jp jnp sub pop aam shrl mov aaa rcrl scas adc stos ror dec inc mov mov inc push jns mov (bad) movsb inc sub cwtl push rcrb pop jge pop push dec xor setne lcall mov mov sub out pop ja inc adc js ret cmpsb mov pop leave ds sahf mov xor jecxz push dec xchg das mov jb jecxz or aam xchg sbb insl lcall fdivrl mov add cmc push pop les adc jns mov arpl dec in cmc lods int3 jnp insb sarb sub or mov cmp loop inc out sub sub mov push fldcw sub pop adc mov cmp mov ljmp and jl clc mov jae mov inc ret bts std ret js lock ss ss test mov leave inc clc lret bt enter rcll xor incb pop fwait test int nop into (bad) dec cmpsb push mov repnz std cmpsb in pop int3 in dec xor int jb pushf cwtl icebp lds (bad) push fadds push je call lcall clc mov lret (bad) xor (bad) and jnp lret incb test mov mov in xchg adc lods fisub push das mov xor add mov jl adcb xor orl clc jno jbe stos xor pop hlt inc cmp in insb sbb xchg xchg pop nop addr16 imul mov sub jg mov push cmp jg cli cmpsl and es and push push inc popf push mov clc mov xchg jb orl mov push mov arpl cmp adc jecxz js or loope lea mov hlt sub rolb out (bad) jp out jmp mov mov stc aaa xor aad (bad) repz mov and sub pop imul xchg out push fisubr loope xor (bad) popa mov push inc (bad) mov push movsb ss xchg inc out mov aad ljmp xchg inc (bad) jo jge je sti lret sarl xchg push sbbl sub fstl lods out lock push xchg mov jae fiaddl fsubs mov mov dec fisttp sti xchg xor add aad popf iret ret push or push add stos xor pusha mov int ret xor in scas inc aad push jp mov jp fnstcw inc pop leave lds (bad) sar test (bad) and inc jae and jno mov xchg repz push aas cmc (bad) fnsave mov and mov mov mov gs xor inc inc xlat fldt mov test pop loop jae dec add jmp nop fimull dec rolb mov mov ja out aas push mov nop and add push lock cmc ljmp mov and add das jb and bound mov hlt adc pop ljmp popf outsb pop cltd je mov negl sub dec add pop jmp not sub sarl cmc mov leave loope cmp push pusha mov xchg out mov popf lret mov adc adc or sub imul inc or adc addl fs push jle jle pushf mov adc cmpsl test pusha aam add cmp inc and mov xlat loopne fwait ljmp xchg push adc add aaa outsb xchg lods aaa xor push pop pop pcmpeqd jb (bad) call ror mov mov mov jg rcr cmc scas xchg inc and or add xchg loopne xor mov test xchg imul or inc out xchg movsl cmp (bad) jb jns xchg inc test les push iret jnp sti mov lods cmpsl sbb add aaa adc lods add into sub push mov inc mov push push lret pop adc mov and adc push push inc jno sub xchg jns (bad) jecxz fildll js (bad) (bad) jbe add pop out movsl or rcll adc mov inc jecxz int lret inc and int3 push pop das imul nop pushf dec jle adc scas inc mov mov lret jl mov xchg pop inc mov lds cmc or cmp fdivl jne das pop in outsb mov jno lahf faddl faddl stc clc add jmp mov mov lcall popa lock mov fimul xor cli pop lahf sub push mov push sub es repnz xchg ret sbb add mov xor pop and imul jp test pop pusha divb into les push push out (bad) js sub je loop arpl repz dec mov push mov mov leave jae mov push cwtl ds mov mov cmpsl push repz into cmp pop adc xchg in test cld push ljmp es repnz rclb out xor cmp data16 sbb leave lret rcrb in cmp xchg cmp inc jns ret push pop stos cltd mov (bad) push and imul cmp add mov xchg mov cmp cwtl movsb fistp xchg adc les lret mov (bad) out or mov jnp or fdivl jae outsl loop in test or (bad) (bad) arpl jns mov inc dec fldl arpl mov test mov jne ret cmp out adc and aam add adc inc mov iret cwtl mov lods nop imul (bad) xlat mov test pop in into fs outsl into inc or mov les mov popa mov loop imul (bad) jecxz (bad) push xor sti fild xor xor lock int3 push scas adc or int and scas push dec cmp mov fldenv insl pop pop es stc and push cmpsb sbb jne mov lock dec pop push push insl push mov inc and int3 and or add or jmp lods scas lcall jo pop nopl addr16 je mov xchg std mov mov movsl cld mov cmp jg jle lods imul insb std mov in inc inc jnp pop insl pushf xor jge das pusha push push adc scas xor add and cltd addr16 and arpl xor jl add add mov les mov jp loopne repz and mov mov xchg jg leave pusha push push sbb les jb sub and (bad) (bad) jmp pusha push pop and insb stos clc inc mov ret ljmpw (bad) dec or repz xor jns mov popa push dec adc push rcl push xlat cmp out sub pop js xchg call cwtl cmpsl enter lods mov sub pop mov pop add insl cmp pushf pushf stc mov movsl lods call outsb and sub lods xor lea ret movsb in xor xor xchg and mov ss loope add xchg inc jae cmpl push and in lods sbb lock push jne xor addb loope xchg lods ud2 mov push adc dec clc cmp cli or xchg dec lea aas (bad) in adc mov sub xchg sbb sub mov add jno cmp xor ret dec dec or mov and jmp in aam repnz xlat jbe rcrl ja or repz lock ficomp sub sub add sbb lds pop int mov mov add adc jno ret icebp pop jp repz icebp mov rolb in aas call sti fiadd jg dec sti imul imul push (bad) pop dec dec hlt in xor insb add xor jp mov mov add add nop inc or lock (bad) aaa pop dec test loope jnp cltd sub jb rclb popf popf pop imul ja out popf sub cwtl popf xor jno fdivl mov fs fwait xchg test sub jp in je xor pop test mov das push pop xor mov js mov sbb mov stos cld dec or popf and insl push sbb pusha cmpsl (bad) fsubrs xor mov and icebp enter sbb sbb jo xor jmp mov stos lcall xchg pop (bad) xor outsl mov xchg jp addr16 std dec xchg and movsl pop rcll aam inc mov cmp popf mov movsl xchg mov add jbe cli arpl into (bad) fucom fwait inc xor jle ret mov idiv mov sbb scas ds aam pop dec jae loop adc lock cs aaa or xor loope (bad) xor mov sbb or cltd imul lods cmp and divl mov popf cwtl jb (bad) bound scas xor and xchg rorl lret lcall out dec int xor ja lret lds lahf sub sub jbe les clc int3 xchg inc fcmovbe divb mov sti cld in xchg mov adcb push shrb adc xchg sahf and dec push in and fisttpll test mov mov xchg xor push xchg out cwtl int sbb sbb and xchg inc (bad) notl stos dec mov (bad) push sub mov or imul loop andl rcrb mov stc sbb sbb add adc pop into and dec mov push out pop (bad) int3 xchg xchg push jg,pn or sub xor xchg jno adc les jnp sub cmpsl jmp js and insb jge jns xchg pop add dec mov fsubs fwait dec xchg push cmp add in adc loop cmp lcall mov pop lds cmp jno out push cmp lret (bad) sti iret mov push push pop or xchg adc xor popa lret repz sti mov ret dec jno jmp jns lcall addr16 aam xlat int test fwait icebp lds int3 repz (bad) push enter push add sbb pop gs dec fwait xchg out cmpb mov mov push mov pop out aaa dec mov in pop lcall adc pop das pop lds call fwait cmp ja,pt lods push pop mov cmp scas xor test jg lcall icebp cmp sbb sub inc xchg lea out cli inc sbbl push cmpsb push and enter mov and or add and dec or je sub cmp (bad) pop xchg test push and decl cmp mov xlat pop ss int imul xor adc fmuls and add jns cmp jp pop xor add rcll mov and cwtl rcr sti es fisubl jno mov test bound xor and dec popl test movsb jmp sahf jmp sarl in mov sbbb icebp dec xchg fisubr fwait mov xchg mov clc mov fcomps xor js cmp push outsl inc les or (bad) and mov fcmovnbe lock lret repz pop adc cmpsb in mov cs (bad) pop pop cwtl test stc (bad) jle lahf xlat mov scas outsb (bad) mov sub inc dec cmc xchg fwait outsl sahf and dec xor xor inc negl shlb xchg adc es lret test enter mov rcrl fisubl fldenv cmpl mov (bad) addl pop push xor jae mov ror mov pop loopne loop xor dec (bad) sub mov xor mov or sbb jb inc xchg fsub push cmp mov fimull cmp out or sbb push (bad) adc loop in pop data16 mov inc fidivr pop pop lods loope jge idivb xchg cmp push out push sti adc and flds dec jne cmp ja fadd sub bound xchg pop mov ficompl or lods push inc ficom test sub or xor cli push sub nop sti push push test sub int stos dec inc movsl clc (bad) mov (bad) mov mov mov popa and sbb add es adc hlt push xor (bad) cli dec ljmp or dec movsl imul (bad) xchg pop or jae pop inc loopne add xchg inc mov popa cwtl fcoml nop ret in test imul (bad) ss push push jb iret mov or aad sub js mov jne in ds cmp cwtl es inc ret dec test call sub outsl and cmpsl push test arpl int out and je (bad) in dec loopne inc mov xchg out fdivl mov xchg and idivb push out (bad) in xor and pop fmulp out cli bound lods daa cmc add sbb ja mov (bad) mov sub inc scas in jb xor pop stos mov in outsl adc shll xacquire inc xchg fcoms mov jo jp inc (bad) rcrl mov sub mov xor push call arpl mov lods xor mov pop adc outsl mov xchg fs (bad) out cmp fwait push cwtl dec loop cmp (bad) ret xchg (bad) mov inc aad dec push lcall inc mov dec mov add cmp les push in adc inc pop movsb rcr jbe cmp pop pop mov jp xchg push or or inc adc jnp lret xchg xor and mov lds sub mov mov ja pop mov psubusb or ja call js into les push sub xchg add push inc jle add ss sub and push fcmovnbe cli jae mov xchg xorb ja mov adc insl aas fbstp lea lea cltd jnp (bad) push lock roll negb shrb rcrb (bad) lock dec fistp pop lea (bad) sbb lods mov sub sbb scas or std and and sarb (bad) dec mov xchg mov (bad) and addb and xchg sbb js xchg xor adc or (bad) lods mov or test hlt dec jae cmp cmp cmp jo js mov push mov xor add hlt (bad) jmp movsb lret xor mov pop jns fs add jns fsubrl xchg cmp clc decb xchg in movl pop pop push faddl and lretw test add mov xlat jae test jp dec add jb neg mov jno xchg jae daa adc ret std aaa int3 push jo in ds jo lahf xor cmpl js,pn pop mov push mov sub divps xor cmp xchg mov cld lods dec lahf clc in sub push mov bswap mov add gs dec xorl lea out aam jge (bad) sbb jmp inc inc test jmp mov call mov dec inc bnd xchg iret popa mov and sbb adc cld popa ret imul enter mov repz (bad) fwait xor sahf xchg test inc call aad mov and fadds ljmp push jbe push cmp in mov pop inc or push cli sbb dec xor int3 mov xchg xor mov mov lods setle aam outsb in sub xchg test lock outsb into loope mov dec popf popf dec stos mov test test sbb out mov push fildll jbe xor or push sub out sub jae out jno mov and mov test ja sub rcrl add (bad) cwtl sti or daa aad fiadd xor ja bound insb cmpsb jle enter pop pop pop cltd push clc jmp lret jbe xchg add movsl inc sub mov and xor push mov leave in adc aas and sar mov in add (bad) nop mov sbb ret mov sbb sti loopne or fsubrl je in sub test push jmp xchg pop ljmp or mov rolb shr daa adc aad sbb in sbb sub int negb jge push rolb adc push mov sbb sbb mov addr16 pop fucomp jle dec inc push subb (bad) mov sub gs jb dec pop inc lret jno,pt aas mov jmp sahf icebp mov xor jno push or and and cmp pop mov data16 adc je and movsb loop arpl jecxz sti and add and bound dec int3 cltd or sub or adc xchg inc xor leave add roll loopne and lret adc pop es lock sbb pushf xor outsl lret das pop mov cmp mov jge jmp jecxz push cwtl les fildl in stos outsl mov lahf add fdivs stos dec jbe lret jns xor sti cld dec mov or jg outsl orl cmpsb fidiv pop aad push gs cs jge push xchg pop (bad) call push push mov sti inc inc jnp bound sub ret mov addl imul inc jo add sahf stos mov cmpsl mov imul pop nop cmpsb lea dec xchg jle pop mov sbb popa in xor or arpl dec stos mov adc and mov mov sbb ljmp inc clc leave in cmp inc jg aas mov es mov push add data16 mov mov fucomp adc xchg dec imul (bad) lret arpl sub jge cmp lds sub dec lds mov jg mov push divb jg ret inc mov or outsl sub (bad) hlt xchg lods sub dec xchg xchg push ss sub out xchg xchg mov dec repnz in adc sbb xlat mov cmp xchg mov xchg or movsl movsl jle xor (bad) int inc add mov cmp mov js dec mov fidivr xor xor inc xchg xor cmp or push loopne xchg add clc jmp repnz mov or push bound pop push cmpsl fstl sti or cmp jl fsub push push and pop mov jne lahf mov xchg stc jmp push push add jle lret stc mov lret xchg imul leave in imul int3 inc pop pop adc push push mov loopne stos inc cmp insl push es xchg jp xor lock pop test dec push rcrb jmp lock mov fistl push sub push mov imul stos shl cmpsl or lds ljmp xchg loope sti lret push adc jmp call movsb add test fisubrl mov pop rcr add aas cmp xor and fistpl mov decl xlat sub push inc mov mov pop or cmc fmul ljmp mov in test into sub mov fistpl xchg nop sub jns fdivs divl xlat ret lea pop mov jb mov jg jmp into jbe adc jp pop xor mov call pop inc flds mov jmp (bad) pop push daa outsb std popf fsubr out (bad) lahf mov jle popa dec mov xor mov xchg push push inc inc jne sbb lcall push xchg sbb pop loope dec pop or add (bad) outsb std jg mov jae in pop shr rcrl add aas adc pop push pop xchg or mov jecxz jmp push jge leave pop repnz jnp sarb mov sti mov mov push cli out inc adc and sbb dec dec or rcr aaa pop scas data16 pop sub dec xor xor mov inc std mov movsb add int mov (bad) cld pushl pushf enter jmp push lahf ljmp jl gs jmp hlt pop mov fmuls xor loop arpl sub inc shll lret lods imul and punpckhdq adc daa adc and cwtl inc xor mov ret loop add mov aas mov mov lods mov add add shrb cli pusha ds fcmovu aaa mov mov cmp jmp jl sti rolb arpl int3 or xor in (bad) (bad) in fcomps cmpsl movsb xor xchg test dec sub sub data16 xchg sbb mov jne (bad) loope push sti dec mov push jp pushf fld push into adc pusha jl iret push jae ds fwait in xchg out pop cltd add pusha fdivl add aad loopne jge mov scas sbb inc jg dec fwait imul xchg aaa pushf mov fstpl out cmp fdiv adc mov dec in hlt orl out in adc mov xor repnz pop jge in (bad) jge pop xor xor inc jg ss add cltd push sub and lahf inc imul sbb mov es mov lods outsb insb push add idivb adc mov mov jo test int mov shr (bad) aas mov insl push add (bad) in cld inc jae dec ficom shrl ret pop clc dec xchg jl js and test xchg jle out jo ret lret xor int3 in sub or mov cmpsl mov in pushf pop int3 jmp xchg xor jno lcall aad les scas push sti dec stos dec dec pop loopne cmc out in cmp sub sub push fisubl mov andb loopne,pn ja push and pushf mov les in sub (bad) bound or jae leave lds mov mov in out and sbb orb out adc leave popa or xchg rcrl inc push pop sarb (bad) cmc and and ret sahf imul adc loopne inc and xchg jle pop sti pop lret mov push popa mov sti pop cmpsb xchg lret aam insl stc inc adc in lahf mov movsl enter push pop ja mov and loopne inc and mov xchg rolb add aas push int int3 gs sbb xchg das push lret sub sbb fild movsl push les mov pop rorb add lea cmpl mov sub test cmpsl jo push (bad) mov add add push sti fistpl inc lea inc adc sub popf jno clc jne push xchg iret adc rorb inc jns lahf xchg out addr16 dec mov in push in pop push jo,pt xlat sub sbb cmp rcll sub gs bound cmpsl gs rcr insl out (bad) sub jbe xor mov sbb mov insb imul push pop push inc and xchg lods push adc jmp mov lea dec inc rcll sbb push and mov (bad) sti push cwtl jns dec int3 xor push jno pop mov inc (bad) stos repnz (bad) test dec mov push jl xchg ficompl in mov popf cs int pop icebp jmp shrb mov test loope xor imul mov mov and sbb (bad) ss sbb fdivl cs scas dec jne jb xchg std inc sub cmp and in sub les scas (bad) (bad) decb mov xor cmp in xchg (bad) xchg cmc mov out loopne cmc popa sbb and jo sahf dec mov dec jle sbb aaa fmuls push imul cmpsl lods enter push loope scas push clc cltd mov and clc xchg out inc ret sbb cmp xlat push mov sbbl test in adcl inc xchg pop or ljmp clc fwait (bad) xchg inc test adc or push inc fcoml into and mov fwait jo arpl xor loope orl je mov sahf mov pop cs push out push int (bad) cmp xchg dec dec or add lods mov xor into xor enter dec or out ja sbb mov xchg fs imul sub loop push inc jo add cmp stos jmp adc rcrl mov repz and repz fsubrl cld test aad out out pop lock jl insl int3 jp imul aam (bad) and lcall cltd jecxz mov lock cld or mov cli cmpsb push (bad) (bad) fnstsw mov repz fstl add arpl xchg mov lods shrl (bad) rclb lods jmp mov push push ret sbb test loope movb xor out jno imull mov pop je mov out jno fucomp nop pop inc pop fildl orb mov push pop outsb lcall push fidivl imull imul jns push cmp inc dec imul cli pop mov roll cs push scas add ldmxcsr test cwtl pop mov push cmpsl addr16 std pop mov pop or dec (bad) pop inc sbb (bad) xor push mov aaa mov repnz sub pushw repnz jo call push mov int ds push inc int3 cmp sub stos lods pop pop jnp mov mov pop pusha mov lret mov xor xor imul mov jmp cmp popf rclb xchg xlat test sti sub aas dec movsb testl sub xor xchg xchg sbb fwait mov insl inc sbb mov sti nop push (bad) aaa xchg add nop push cmp jmp and pop std push in adc mov test add dec lock movsl push jno jmp nop cltd movsb fmull outsb xor sahf imul sbb pop mov ret pop xor mov mov sub loop adc cmpsl fsubrs rclb gs dec xchg sbb pop sbb sbb int and add xchg loop add insb and sub cmp adc xchg cmp push lods in out mov gs ret inc xor or xchg (bad) int (bad) dec ret push inc sbb mov (bad) lahf pop fwait xchg inc lods stc mov sbb test push mov scas inc stos ljmp mov test jo sahf or inc adc nop hlt fnop jno pop inc out xor push mov xchg add repnz data16 pop xchg cmp fstpt (bad) pop add hlt inc les sub mov sbb inc jge ret inc lcall addr16 in insb cmpsb mov arpl push sub and adc mov sbb ficomp cmc and pop mov inc lcall adc test popa insl sbb dec push add jmp jle mov push xchg outsb jb sbb sub pop xchg ret bnd push cmp and jno movsl dec in test test fcomip mov fimul out movhps or mov sub inc enter outsb cmp aam (bad) jne mov out mov jmp enter mull cmp ret (bad) cli and out arpl sub inc (bad) push out call mov adc popfw cltd xor push js pop icebp mov sbbb call fstl and pop lahf mov test mov dec cld (bad) shll pop mov adc leave (bad) push ds and pop pop push fcmovnb mov cmp ret xchg daa add mov sub iret fistpl push sbb iret test sbb (bad) dec fstps adc mov push dec pop inc add dec inc mov ja adc mov test jb xchg out mov les ss mov fidiv andb sbb sub lahf cmp jge sub and xor mov sub or lock xchg mov sbb (bad) imul xor repnz lcall mov pop dec rcrl faddl mov test dec mov fsts sub jmp add je data16 js sbb mov ds sbb xor mov rorb sub fucom jae fcoml ljmp sbb xlat or inc call hlt imul in lock jb sarb outsl xor sbb pop fidivr data16 and mov jecxz push mov lret nop rcrb rol or lret popa cmp xor mov pop add imul dec fisubl sbb push jmp loopne xlat lods dec test mov sub fisubr mov pop jl clc inc cmp shlb inc popf inc mov ret cmpsl or pushf aad or sbb fldl sbb lcall mov xor sbb insl xchg xchg add out addr16 mov hlt jmp unpcklps in mov js jno daa jno inc push (bad) push loop std ds fdivl rol fwait cwtl pusha mov xchg idivb pop pop or mov or jl mov xchg pusha inc sahf mov (bad) stc push test jns xor jae mov cltd pop mov xor mov cmp push ror pop (bad) jo or mov add mov leave pop stos add cmc sbb clc out push icebp sbb out push xchg test out movsl divl stc add (bad) fildll mov test push imul ret and push aaa cld sub outsb sahf jmp adc dec push cwtl push ja push push popf out mov adc inc sarb push cmp idivl pop mov daa jmp inc in xchg popf or or mov arpl fldt test (bad) (bad) jp and call xor shll mov pop scas jge add push repnz fsts cmpb cltd aam mov test mov cmp call push scas stos repz dec jb add or mov push cld lret iret pusha mov inc mov aas adc fistpll inc insb lret ret fwait sbb push mov xor popf adcb jle loope int3 inc fiaddl cmp dec data16 leave decb lret sub cmp fs cmp negl or fidivl push lret mov dec fidivr cli scas cmp mov shr pusha cmp adc (bad) adc sub mov pop add insb daa test push mov pop fldenv jge xor ret xor icebp sbb imul ret jecxz ret adc test outsb pop cmp xchg addr16 sbb sbb mov jle xchg sbb cmpsl push mov test js test lcall lret fistpl xchg std iret shll (bad) imul lret xor in out (bad) push pop adc outsl popa es fs sti addr16 loop ja popf nop icebp add lods dec fmuls or insb les jl sbbl jge mov xor xchg xchg test dec ljmp inc pop and int mov add jb xchg movsl cmp jne lahf mov inc xor dec sbb repz lea mov sahf data16 out add fwait xchg jbe ds clc scas inc lods xchg jge scas adc or fcmovbe fisttp loop mov out push call mov or cmpl cld cmp xadd aad aaa pushf lret (bad) sbb jle adc adc xor jne rorb ja adc outsb scas mov mov pop and jae in popf or popa imul je dec add cmpsb xchg test je inc in fstpl fimul xchg xor jmp xchg leave movsb pop push stos mov push jnp or fildll inc xchg xor xor push adc ja add dec add inc and xor lret repnz sub xchg insb ds fsubrl test (bad) cwtl add adc push xchg adc xor insb jle xchg xchg test pop adc mov les popa out mov xchg sub xor lods repnz mov push push mov adc mov sarl or aad push xchg aas push cmpsb mov and roll lcall mov icebp out mov hlt mov xchg sbb jne clc sbb in iret pop int addr16 repz in stos push mov (bad) cmp cmp adc fcmovb test scas repnz bound push imul push or orl push cmp movsb cmpsl mov sbb cs (bad) notb fdiv out scas dec cmp cmpsb fwait or (bad) add ficompl dec lea dec test inc adc dec gs int3 (bad) jp fnstenv push inc mull xchg mov sbb pop dec sub ljmp add out dec sbb or mov mov loopne jle test test xchg pop jmp test push inc aam pop inc ret pop arpl subl dec fcompl aam mov inc pop push jbe push in insb es sbb dec mov or jbe outsl add lcall mov (bad) sbb lods ds or scas insb push insb ljmp push lods outsl push pop std movsl push sub sarb jbe mov mov bound insl push jns loop es jge into popa mov sub jmp mov pop xchg pushf lret (bad) imul adc mov mov insl bound and outsb ljmp sbb xchg inc dec lcall (bad) ds push ss dec (bad) lcall mov jl xchg dec cltd (bad) xchg pop into fucomip jnp rcrb cmp ficompl lret dec ret lock cmp fistp pop mov pushf cld icebp and js shlb rep cmpsb mov inc (bad) jae or imul inc enter scas pop jno dec push xchg outsl gs adc or outsb movsl aam xchg or (bad) loopne dec add mov and sbb ljmp jg stc enter adc icebp enter aaa lahf mov ss adcb push sub mov pop and push xchg mov push or in adc loop orl pop jno cmpsl pop enter mov dec ret bound int3 js xor imul sbb mov sub shl (bad) iret imul int add stos cmp cmp sub jl lea jb push jecxz mov out mov clc (bad) ret cmpsl mov pop (bad) jae outsl repz aam aam xlat mov mov lds mov out imul xlat sbb dec (bad) jbe pop inc sbbl add xor (bad) mov sbb jne adc pushf lods jo aam out (bad) fs fistl push mov loopne shll cmpsb adc divps xor dec xchg rcl cmp sub rclb xchg adc xor pop ret sub adc ja stos std mov stc cld inc fisubrl ror pop push and pop outsl das leave add mov jb jno fdivr xlat push jae call push and out je dec test lock icebp test popl push setb sub pop addr16 mov imul and nop jmp add lock mov xor shll sahf in fmuls sub lea dec addr16 es cmp hlt scas mov mov lret cmpsl cmc cwtl push mov pop dec push add fbstp in les mov int ljmp or xor pop push loop adc test mov or aaa jmp jae dec scas outsl pop inc cmp loope sub sbb das and xchg sub icebp cmpsl push sbb mov mov jp adc into pop dec in loopne cwtl (bad) fsubr sub xchg push enter lcall insb inc into adc pop xor dec push xchg sti mov adc jmp (bad) adc faddl test in xor inc push cmpl je mov sub (bad) jecxz iret or dec movsb and pop inc pop mov jb in (bad) dec mov push scas fs xlat xor setns test cmp mov push call in adc stos adc lea out jno mov xor (bad) (bad) out xor mov adc sub fisttpll or sbb fcoml add popf fldenv or dec xchg push iret mov mov dec adc dec mov and sub stc mov mov loope int3 mov gs dec aad or mov push adc jne (bad) mov pop sbb ret cmpsl frstpm(287 or (bad) mov nop jae loope sbb sbb adc lret mov dec test mov clc lret sbb out call add inc and mov stc test test add inc lea sbb scas cmc fidivl jnp sub cmp mov mov xchg cli (bad) rcr fdivrl rol push addr16 je ret in (bad) cmp shr or mov pop xchg outsb ds fs or fbld sub out xchg pushf aad mov pop cmp mov mov stc mov movsl and or pop inc insl adc mov inc dec popf or cmpsb pop scas inc push mov adc shrl jb pop test dec stos xchg int xlat push (bad) sub dec xchg out xchg out fwait adc mov jo pop push ljmp loopne lcall push push jbe movsb addb scas jl outsl dec fs xchg xchg es cli iret mov xchg dec mov loope xor mov nop mov std pop fbld push stos add xor adc cli rclb (bad) sbb jge mov cmp std mov imul movsb dec xor or lcall cs jo mov pop ficomp jae adc push in sub lods push jge mov dec loopne sbb mov aam jns lea pop xor xchg pop push xor popf into mov aas std jp fldt dec (bad) pop jl sub inc mov push (bad) jl sbb inc and stos lds test (bad) or adc ficom aad clc dec and push mov and inc jae inc lcall addr16 pop mov sub jp loope cmp push xchg xchg cld add inc movlps fiadd popa stos clc hlt xchg test jl movsb std (bad) (bad) mov std xchg pop fcompl xlat add pop je je (bad) pop add int3 fs in aad int3 imul sti ja jno orl repnz ss mov std mov imul cld test ds cltd push pop pop jp or daa ret mov sub fldcw cmpsb int mov mov or je movsl data16 (bad) inc int ds in xor push pop lds fwait int adc movsl xchg cltd sub adc sbb lds adc push ds mov or sub test ljmp sbb jg cmp pushf call sbb mov orl push or cs push push dec dec push mov xchg push repz push mov je add dec je lret call paddb std fs pop call (bad) mov jge je aad lock pop hlt mov popa notb aam xchg cmp push and mov sub jbe shl adc inc iret pop add and iret adc inc adc adc inc jmp push imul pop push rcr pop jp mov loope pushf jg xchg ja adc pop xchg jge or push hlt adc nop dec jg (bad) adc rorl sub (bad) push cmp xor jno icebp push sbb jns or xlat pushf jns adc loopne mov xchg rcl arpl ss cmp test incb bound iret mov dec mov in xchg scas pop popf mov jle mov cmp jns into xchg jno aad push pop fstpl cmp addr16 (bad) mov adc test jns and sub pop loopne jbe into push xchg or (bad) jle (bad) xor or shrl and lret imul push movsl repz in outsl sub add or cltd lea (bad) mov aas push jnp mov mov mov push stos js ss ljmp or sbb pop sbb dec cmpl mov push inc cmp imul out or push mov pop das add sarb daa xchg loop jp outsl cmpl out dec xor jp inc pop adc xchg clc xchg add cmovno and push rcll jmp pop clc repnz ja xchg andl int push mov jecxz mov cmp aaa lods mov xchg add dec add lret mov mov and jae inc addr16 pop inc cmc nop aas cltd mov aas or repnz and sahf or inc dec cmpl xchg dec in outsl pushf or imul mov push push loopne clc mov (bad) jne dec call mov mov in (bad) shlb dec call xchg stc imul out mov sub xor mov arpl xchg pushf xorl ss stos jmp adc push daa cmp and jb lret test pop outsb xorb (bad) cmc lods xor clc in sbb mov cs xlat inc xor push test fstps xor cmp dec inc in es inc push push test dec sbb xchg pop idivl ja ret pop jb clc xchg lea lret std mov xor addb test xchg adc sahf enter inc ret int mov mov roll xor mov or sub mov lahf insb sbb mov popf jecxz shll add push sub add dec jae jo pop lods or mov sub and jo imul mov sbb je mov ss mov pop mov in cmp xchg mov mov nop dec pop aad ljmp daa or movsl add and subl sahf stos xchg mov sub add add push inc mov xor cmp jo sbb std outsb push js outsl test pop pusha add adcl mov push cmc and loopne cmpsb mov fst xor outsb push fldcw xchg jl outsb xor push jnp pushw add jge mov jno rorl mov pop and adc mov mov inc jg mov dec roll pop in call fcmovb pusha push iret mov daa jne mov out lcall jecxz iret mov cmp push and and jns bnd inc mov into adc pop popf cmc fldcw mov jb cmpsb add testb outsl divps inc jecxz les repz gs lcall inc imul dec push es inc and dec xor add pop jae mov push icebp xchg add dec pushf sti data16 outsb fs inc xchg jp mov (bad) mov movb (bad) xchg stos negb into je push pusha leave and aam add mov jo inc and pop pop imul add sbb loope sub ds sbb popf jmp out fcompl aad xchg fwait cwtl jnp out fnsetpm(287 mov sbb cmp jl cmpsl pop ds jp sbb bound mov and dec cmpsl out or (bad) lret rcr mov repnz pop dec and out clc aaa pop adc ljmp push cmp adc leave movsl push insb push aad lds xchg fbstp lcall mov adc shrl inc mov cltd dec mov mov (bad) es push je jb movsl (bad) in jp or jnp or adc or (bad) and bound addr16 std dec mov rolb push std push loopne stos push pop xchg stos pop out or xchg pusha mov jg neg in movsl fcompl mov mov jno or je xchg jnp inc movsl mov sub ret out lock (bad) lret adc cwtl jg test repnz mov sbb lock cmp fnop sub out mov jnp neg and and imul or stos (bad) repz loope icebp jp push mov or xchg mov (bad) int3 pop addb jg push inc dec lcall add cltd scas stos fdivrs mov fdivs loop mov or dec mov cltd jge mov int3 push roll cmp lret call inc loopne (bad) push sub test sub cmp add jnp inc xchg rcr fs push aas mov inc mov fisttp movsb jecxz dec sub mov sub jecxz,pt mov sbb dec mov arpl and add inc ss insl and xor test mov (bad) xchg xchg mov repnz in in psubd mov xchg out push pop out popf jbe addr16 mov ret xchg push cmp jmp pop aam outsb in je ss adc cmpsl sarl ljmp inc adc jmp jnp stc mov loopne add popf mov mov js push inc inc fcompl popa out out dec cmpsb cmp aad sbb sub sbb mov xchg bound mov ljmp in or sbb ret lds iret out stc imul je jno inc icebp mov and insl cmpl mov sbb add out jae jbe adc cmp mov mov lahf dec (bad) fist mov ja nop mov (bad) mov pop push sub hlt imul test and dec xchg je xchg rorl sbb sbb jge xchg (bad) int3 or jae adc adc cld xchg mov das mov (bad) clc cmpsl aas fs xchg imul and stc notb aad jne imul mov imul int3 cltd mov mov fsubs icebp jbe mov inc repz pop aad cmp mov and imul sbb testl pcmpeqb add xchg add adc pop cmc fistpll jb xchg jae adc dec mov loop mov xchg cmpsl movsl lea or (bad) cmp mov loopne das mov dec fild inc repz mov push xor sbb cld jo sahf in and xchg nop in sub mov je add xchg mov cwtl hlt ss or daa xchg push add in sti test repz jno ja out jge inc pop enter xor inc pop lahf mov pop mov pop insl push lret mov push or pop sti mov dec jns (bad) xor in xchg and push (bad) test cld sub popf jbe out mov jbe mov pop pop pop call xchg fistl std (bad) mov or xchg ss lods push int rolb push sub pusha add dec cmp aam adc xor lcall push inc sbb xchg (bad) std jns lret push repnz or test pushf dec push or inc jge mov push or sahf xor (bad) rcrb push aaa js,pt mov jne je icebp mov nop push lods add dec xchg lods daa rorb push shll sbb jno xor sti int3 popa push mov cmp loop sbb push mov mov jmp inc mov das dec mov enter int3 sbb stc mov shrl mov xchg popa push lock push dec sbb jg add or jl loopne nop mov inc pop punpckldq bound lcall fld xor push add sbb je jmp cmpl fucomip mov push push rol or pop add inc xchg jp adcl rolb fimull cmp xchg sub aaa movsl jge cmp lret pop xchg faddl jns scas pop ret es add push push xchg ljmp dec sti xor push lds inc jle addr16 dec pop dec mov jno lret ret lock add mov sti or fnstsw shrl loopne mov out xor call xor fstps icebp cmp ret jl test dec cmpsb movsl dec in pop inc fwait into cli faddl push clc push movb jl push push call pop mov (bad) inc test push push repnz dec pop inc xchg cmp and push gs ja push iret mov pop mov inc out pop int rclb jb lock rcll adc iret in sub mov cmpsb shll xor sub jg hlt inc cli out (bad) in push mov inc fs out lods dec lcall inc fistl mov lods scas push xor out addr16 adc movsl enter mov loop mov cmp sahf xchg cmpl mov es cli dec loope or call cld cmp mov lcall enter mov cmp mov sub lods aam cmp rcl pushf sub mov mov xchg sbb xor popa mov pop (bad) insl and repz push mov inc xor insb mov cld and (bad) (bad) loopne aas (bad) imul push aaa out or and es sub mov mov iret and out lret test insb sbb sti aad ljmp pop fsubs repnz mov loop dec in test je,pt (bad) sbb cli pop and xor xor lret js xchg insl fcoml (bad) cmpsl (bad) test jge loopne push ret cmp out adc sub ficompl leave mov xchg push fbld xor xchg push push mov and loopne bound loopne aam data16 inc scas xor pop inc dec xlat ret xchg dec dec repz mov gs adc clc in push xchg cltd push sbb xor mov test pop pop lock push lahf hlt xchg movl add mov mov jmp rclb fsts outsl mov dec sti xor ljmp sub sub xchg (bad) movsb inc or adc in test in (bad) pop jnp aaa (bad) loopne push add cmpsl sahf out mov xchg adc (bad) cld push divl adc push int arpl stos mov lds lods arpl mov push icebp mov js pop jne fsubrl push jg mov cltd stos das or je nop dec rcl repnz pop loopne inc or in mov sbb pop ja ds testl insl adc es imul jnp (bad) pusha xchg cmp push lret sub mov mov (bad) xchg pushf add mov pop push cmpsl add inc add cwtl add xor ret nop std fistl jns dec stos jb js lret jo imulb jae cmpsb test mov hlt js lahf xor mov cmc or dec (bad) mov pop ss and sub movsb cltd xchg fucomip imul and icebp sub push jne pop and shr cmovnp outsb xchg ficom mov loop mov pushw or mov lret push adc mov lret push ret pcmpeqd inc push frstor or aad repz dec add push dec out xchg mov call sub scas aaa cmp (bad) aaa sub sbb xchg pop bound add call mov xchg pop test add add push mov push std jmp mov retw dec rcrb xchg sub or (bad) pop es outsl mov xchg rclb test push xor mov roll addl jne clc push dec out push inc add mov arpl mov pusha add loope cmpsb repnz loop xchg cmp or test js mov aaa stos fwait das jmp stc mov and mov add xor xor mov sbb adc test jae sub jl ja inc pop fistpll cmp jecxz in clc out inc xchg inc pushf mov scas push jmp pop and adc stos arpl and inc jo inc jg ret sbb in mov aam mov test test mov mov pop sbb sbb into call xor loop sti pop repz sub dec dec sbb sti lret outsl inc js dec and xchg insb push xchg and faddp andl dec and mov mov stos and push jb icebp push out xchg dec addr16 add (bad) and or mov popl shl mov fmuls mov lds mov faddp rep aad stos into aad in sbb xlat enter call (bad) into pop mov sbb jle pop and push fisttp iret mov xor call popa shlb sub mov push out jle aad jl negb loopne mov push loop sub push fnstcw jnp jmp int sub std (bad) mov jb mov pusha push std stos jns xor mov popf or or sarl in cmp mov sub call pop popf push mov test push cmpsb sub cmp xchg test int3 gs lret jns das xor fmuls icebp jle adc xchg inc (bad) mov xchg out or xchg insb and lock cld dec (bad) mov fdivl push jecxz adc dec adc xchg imul out jo lds or sbb fwait cltd data16 insl mov pop sbb jmp mov mov or or xchg sbb xor sub in aam lcall outsb fstps mov daa pop push mov je xchg mov and cld mov xor pop mov lret jns je and fisttpl (bad) jnp icebp sbb jl (bad) or daa xchg repnz jmp push roll in es sub ret aad xchg (bad) jno cmpsb and mov stos lret lahf mov fs iret cmp nop adc out nop sbb push aam (bad) enter jp scas (bad) xchg lret outsb adc jnp cwtl xor cmp pop pop add jmp pop sbb pop sub (bad) fildll cwtl (bad) cmp mov push movq test shrb sahf sbb add ja mov (bad) fimul mov sub movsl jecxz jo loopne xchg (bad) lret in out fnsetpm(287 les mov xchg cli pop daa sti mov mov jecxz repz sub stos mov (bad) fidivr popf sbb push clc xchg ja cmpsb enter or clc xchg fsubl cmp enter or cld mov mov test inc xchg hlt les jns pop dec stos hlt sbb out icebp adc scas push je pop push cltd adc stos xor mov stos jp add inc pop stos aam (bad) mov and sub push push into or stos jne popf repnz cmp mov out out jecxz call ja js aad xchg push and andb out and adc jl pushf sahf jnp insb popa jecxz sub inc inc mov in (bad) outsl push cmp push (bad) scas lcall or dec sahf mov ret je fsubs cmp cmp aas sbb xor sbb and ret jo (bad) fwait pop (bad) rcl aaa test icebp mov mov rorb fucom js sbb cmp and jo adc jne and subl div mov mov outsl inc jecxz jmp dec xchg jmp push cli std inc sub ret xor rcrl adc cmpsl mov fsubrl (bad) fidivl subl or jo stos movswl sub int3 loope and rorl rol xlat hlt sarl xchg rcrb shr sub xor lods sub insb lea call loop lcall push addr16 lock aad push sbb sub int pop scas mov push mov lods and xchg sub sbb push pop jl dec mov ljmp int add jmp or add call lahf lods lock (bad) jmp pop lods inc and mov jno mov dec repz gs pushf cmp psrld jae inc lret cwtl fldt push xchg push xchg icebp sbb fwait nop and jge add pop push cs sti test imulb out bound adc xlat push cmp in popw sbb dec lods xchg hlt pushf fsubl or or lret imul mov pop mov push jp fnstenv ret mov rclb icebp aaa in jge js cwtl ret in int and xchg sub push lret cltd mov lcall mov incb xor lods dec push mov repz adc test xor inc cltd pop push in (bad) sahf mov (bad) icebp pop jns push jb adc push xchg jbe outsl sub (bad) in xor adc insb andb pop and call mov cs clc stos jb jg pop and add aad fild xor pushf mov shrl adc divb dec pop cmp loopne xor mov popf xor sbb je (bad) mov mov imulb jno adc push mov pop in test dec fwait or sub sti ret dec or inc fnstcw aas psubb adc dec xchg mov jp popa call jp ret mov xor sub jge push daa mov xor lahf imul push mov xchg outsb xchg dec cwtl jo (bad) adc mov js add push mov mov xchg out sub test (bad) sbb mov (bad) jno mov pop sahf mov or sub divb xor bound adc jmp rorl dec jg aas int3 mov fbld mov test xchg leave lock fdivl jo (bad) mov test or ljmp or mov dec scas movsl pop ret (bad) mov pusha and mov adc cmp jle ja xchg or out mov cli mov repnz popf adc test or xor addr16 insb adc xor ret lret sub sub xor fnstcw fildl scas lock lcall rcrb nop (bad) xchg sahf (bad) mov movsl mov test pop mov and cmp mov mov das xchg sub scas push push xchg stc test arpl pop xchg adc ss je pop idiv jmp out aad push mov xlat push test mov lret mov cmp pop stos push (bad) or push push xor and je mov or paddusb repz mov inc sti sub and pop xchg outsl cli movsl popf mov in or mov int3 test je aaa jne jp cli push fmulp cmp iret pop test pop clc icebp push enter mov push lret sbb mov popa cwtl xchg dec add pop inc and (bad) rcr imul xor clc fdivp dec push sub fiaddl xor popf cmpsl push jae stc jle data16 xchg xchg xchg int3 cs inc sub subl clc pushf out push ficom hlt orb inc imul cmp xor fistpll push pushl imul push add int3 xchg push nop push mov and adc and call ficompl lcall aaa jmp daa pop (bad) mulb scas mov push cmp in push repz jns adc inc inc adc xchg cmc adc xor inc arpl xchg call in xchg ss dec pop into lods aas inc loopne pop lahf data16 xor ds mov popa mov xchg shrb data16 fidiv mov adcb lahf outsb mov test movsl jns int3 rcrb shlb in sahf push push push push cmpl or pop in cmp fstps mov jo push pop and cld inc imul cmp fsubrs mov arpl incb rcrl (bad) imull fisttp push mov push aam lahf jne or sahf cltd xacquire push or inc sub xchg pop shll mov lea subb dec lahf dec leave dec cmp push stos lret das cli pusha lea cmc ss pop jle loopne xor sar cmc sbb lock test jae fdivs jno inc push icebp fsubs pop xor xlat rorb mov jbe cmpsl bound ret pushf adcb test sti xchg or push std test push enter jp mov xchg imul inc scas jg adc rcl dec cmp movsb mov les dec inc push inc loope dec cltd sub jecxz fs cld push xchg jg dec add iret add insb adc sbb pop pop aas mov mov xchg jmp aad pop and xchg push call out cmp andl mov negb aam adc cmp mov stos push push lcall je adc push nop (bad) int inc sub or movsl pop shrb int3 rcll (bad) in leave xchg lret loopne push jns mov (bad) mov inc cmp jo sar inc ja adc xchg repz push fisttp mov mov inc or rorb xchg aas (bad) popf outsb and fcmovb jb push xor jl fsub jbe fnstcw xchg add jmp mov pop lret sub push add fild add cmpl push jo cmp lock pop cmp or ficompl shr stos pop shlb cmp adc loope pop adc subl mov sub aam jge mov enter (bad) sub mov adcb adc ret pop leave xor sahf cmp shr xchg leave xor add push cmp cmp test dec dec push dec sbb xor push je mov push or mov mov dec fdivrl jnp in stos and sub jae jmp in aad mov cltd xlat ficoml pop pop sbb (bad) xor cmpsb or push mov mov xchg pop mov insl lcall sbb into fcom ret mov pop ret push mov out lock out pop mov int xor sbb adc repnz dec int3 cmp jo add and iret movsb xchg cwtl in cmpsb jnp ret push mov (bad) das js sub cli std inc jae mov xchg push push sub add sbb fcoml dec lahf push jno sbb mov out sub ret scas xchg push pop sarb bound psubq sbb add scas inc lods mov les scas cmp incl dec call (bad) xor mov (bad) shll cmp (bad) lock mov scas (bad) or addr16 je dec les xchg jmp push cmp inc arpl add cmp mov dec out popa sub xchg pop out fdivp imul xor lret dec mov xor out cmp test jecxz arpl mov js push jmp cs outsb mov cmp sahf adc mov inc fsubs pop dec rolb cmp rclb dec js inc inc pusha (bad) pop jnp lret pop pop cmpsl sar jmp (bad) mov ret lods aam fisubr xchg mov sbb in mov sub jb,pt cld imul and push test lahf gs stc imul pop xor shll inc push aam mov and xchg or sub jns sti leave pop daa cmp mov int3 popa push sbb mov movsb pop notb jno lret into jmp stc cmp (bad) push movsl mov movsb jae aaa hlt push mov arpl mov mov push cli lret aam fimul inc mov xor mov mov clc (bad) mov imul stos sub xor cwtl dec mov int3 dec add or std mov dec das inc xor adc jne fwait sbb nopl pusha insl add ds sbb iret mov cmpsl mov inc mov adc rorl mul int int3 mov push inc in (bad) (bad) outsl mov andl loope insl xor repnz outsl popa test xor jae out aaa fldenv test mov jl and fstpl push imul test mov adc loope xchg inc enter pop inc fdivr je imull jge setp bound je adc pop lret cmp add inc aas test movsb stc out sub lods cwtl and in mov xchg loopne jmp sub movsb pand hlt inc or (bad) out xchg sub call jge mov mov pop xor adc daa cmpsl test jp data16 cmp mov and cmp and cs push mov dec lds pop pop and enter out lods add into loopne into loope outsl push mov test mov stos fmull cmp dec sub es inc cltd test stos xchg cwtl in xchg out mov jecxz mov test push jl clc dec sbb and add or ret cs adc les arpl mov mov jp (bad) inc sti sub scas pop hlt push test into (bad) mov std popa sbb pushf popf sbb mov bound in sub jmp les js or mov aas push adcl pandn minps lcall mov pop xchg mov hlt mov add mov sbb pusha lret or fcmovu adc jb popf ja shr ja loopne call pop pop mov sbb adc sub mov mov dec fcmovbe pop jg test in nop xlat roll xor (bad) lret ret aaa xor xchg stos movsl push inc push jb mov nop out mov and scas push pop (bad) lret xor lock jnp imul lods data16 cld test int cmp imul pop mov stos loopne add in andl sbb es int xor nop sub loope roll lahf inc cmpsl sbb fcmovu cmp xorb enter mov push push jae mov (bad) lret jbe mov jecxz pushf xlat sti jge aam inc jge (bad) cmpsb out divl lahf jo aaa xor jp cltd sahf mov rorb cmp test fdivl out aam pop int mov fist cltd ret mov addr16 pop jb cltd ss cli and xchg jns addr16 sbb jnp aam inc mov dec sarl popa movsl xchg cmp cmp jnp out lret mov xchg shll jg movsl push mov scas dec cmp inc cmc xor sbb jle icebp aad gs or mov (bad) out push inc jl out aad mov mov sbb cmc mov leave add bound xor sti nop pop icebp sub add insb and out add pop les outsb cld movl mov movsl mov test notb pop mov aas push movsl push cmpsl cmp cmp (bad) int3 fsubrs js jb test je ljmp pop imul dec pushf mov cmp push loop push (bad) cmp or or sbb sub jbe iret lret (bad) (bad) imul or xchg loopne outsb mov xor fisttpll lahf mov jbe jbe sahf or in lds pop mov std loopne jnp xchg adc out ja loopne pop mov push pop sar push stc (bad) ljmp out lret stc orb jnp add ret add nop mov adc int call outsl dec fsubl dec aaa lret cmp lret ljmp iret push push fldl xchg mov xchg add (bad) fucom and pushf jb cmp popa pop imul ret sub push sub pop cmp sbb cmp mov loopne js xchg xchg rcrl rolb popf sub inc in cli add jnp jmp daa mov clc fimull (bad) fld xchg movsb popa mov push mov dec xchg xchg cltd xor pop pop aas mov adc sarl inc (bad) dec sub push adc insl cmc lds (bad) sarl push dec or and iret cmp push adc mov cwtl (bad) sub in jae ffreep jmp sahf mov pop mov daa clc stos push adc push or pop mov xor jb shrl inc (bad) or sub sti sbb push jp (bad) lock lods testl fildll cmp cmp cmp mov pop push (bad) lret adc fimull enter sbb push mov rcl xchg jo,pt pop fiaddl or push pop ss subl and addr16 xchg inc in ljmp jno mov xor cmpsl xchg rorb fcomps sbb repz jno mov rcl pop (bad) (bad) mov cmp pop out jbe movsb cmp mov mov lea sbb sub ljmp roll mov (bad) sbb ja (bad) repnz push je mov cmp pop sub ret xor push jl pop cmc mov jl sbb popa mov xchg pop (bad) and mov movl mov push xchg cmp xor fs xchg jg mov cmpsb jle mov cli cmp dec mov mov jge cmc mov fidiv inc lock add lret imul mov push pop mov and roll vpmullw inc xor push insl imul mov push aaa insl lods mov int3 loope cs ret mov lods or inc std xor mov adc sbb sbb fdivr iret pop dec in jnp jnp mov mov or cmpsl add mov jne mov jb lea push cli in jmp mov pop lcall cmp mov orl mov scas hlt sub sti dec popa daa test inc mov push and pop cmc cmpsb sahf enter lods xchg adc in movsb and fildl cmp push fist cmpsb loopne call dec addr16 mov call pop and or and cmpsl pop scas adc ss jnp insb testb pop into mov out pop inc fmulp jb pop xchg add enter sub and add in ffreep cmc gs xchg jle insb cli popf rolb and and out int3 mov dec (bad) lock mov push (bad) js orl sub daa fisubr sbb stc sbb dec dec scas es icebp mul jne adc mov jne repz mov pop mov sub adc (bad) lret xchg les mov subb pop aad cmp adc mulps pop jnp stos scas mov push and mov jne dec popa cmc xchg fsubl in outsl ljmp ret loopne icebp push xlat xchg sub push insl add jecxz adc in fmuls test js je jae rcll sbb and movq ficom lds jo shlb ja or jecxz jmp lcall leave or or pop lods stos cmp mov sub loop cmp scas pop xlat push xor test es (bad) dec xchg das jge jmp add test (bad) push add insb add push pop dec test push mov js and das mov xlat and clc loope push xchg pusha mov cmp adc loopne cmp stc ret sub mov int mov (bad) fwait (bad) out add loope int sub inc es add pop sub mov loopne repnz sbb out xor test pop mov inc test dec roll cmc andb test pop ja cmp add fdivl sbb add add or popa loopne xchg add pop popa fnstenv mov sbb sbb and outsb push push leave pop inc jae jge mov int sti (bad) fisttpll fld xor in es or pop loope daa push (bad) push adc jbe test jo cmp cltd das int sbb mov aam adc xlat sub and fistpll jp ror cmp xlat or and xchg fsubr lahf in pop and stos decb dec out mov rcr jnp je xchg sbb insl shll fsubrl mov push scas dec (bad) fstps cltd repz jl inc mov inc cld movsl mov jnp sbb arpl cmp insb push add pop push push inc add and pop pop adc adc int jle (bad) mov sub insb nop inc mov sbb push je cli pop sub sub std dec inc inc je movsb or (bad) aam sbb xchg mov sub add cli mov mov or cli mov pop lock fs add xor cmp je mov cmpsb sub daa cmc dec ds iret iret iret fimul call jo push jle mov push mov arpl lret lds inc sbb fisubl xchg call or ss add ja out das and xchg jmp mov sbb aas jnp pop cwtl pop sub cli jge jmp cmp jl fnsetpm(287 mov sbb jb (bad) (bad) lock mov stc sbb add repz cltd pop shrd fxch lcall sub xchg jns outsl mov mov or inc into ss jl outsb push dec lahf xor xlat adc in pop loop nop dec mov fdiv lret add pop lds cltd lret add or push inc and fwait push popa cmc xchg pop pop fadds sub into push loope stos ret nop add js adc mov mov push (bad) into fwait pop push mov mov nop loope frstor sbb int in add mov cmpb mov mov add add push adc xorl hlt push push insb stc mov aaa popa clc inc rorb add insl mov and dec in shrl add jl sbb adc mov mov mov inc test int3 fcompl sub das xchg fwait clc push shrl sahf mov loopne movsl popa adc test jo push pop xor insb in cmpsb mov fwait xor (bad) cli enter mov js ja push test adc inc movups lret adc add and cmpsl les xchg stos mov faddl push insl jbe cld lret mov inc dec push mov add subl cmp fucomi adc and call pushf test jmp mov xor jge imul clc mov jo jns lods push jg dec ret xor dec cmp cmc in loop mov fwait push (bad) leave mov mov mov push out test inc aam (bad) or pop push int3 push push test ja push push adc and and cs cs xchg scas push sbb jge icebp push pop add pop out in mov dec fwait int movsb push xchg fstl in jl mov cmp inc ficom (bad) icebp mov out cmpsl dec (bad) jns mov mov leave mov and (bad) jbe dec inc nop push adc push mov jbe idivl stos (bad) add pop sbb (bad) jecxz inc test cmpsl popf sub cmp xchg xlat mov mov in test test jle addr16 xor xchg pop xchg pop adc dec mov (bad) mov pop aad fimul push inc or stos pop add dec mov jp shrb js xchg cmc fs ljmp test push cmp adc mov int cmp je ja cmp in sbb add pop fimull xchg inc dec cwtl rcr jle sub sub mov mov (bad) jecxz dec loop inc mov add xchg mov pop jmp mov push jecxz cltd inc jecxz lods and jno subb fstpt jnp and addr16 ss push loop (bad) loopne (bad) mov push sub fwait push jns push pop aas (bad) push push cmpsb inc leave push loope mov push push mov jns xor sbbb cli in mov mov add test jbe sbb xor lds dec add arpl enter inc mov mov call and call dec xchg jp push popa sub cs add jle in in ljmp inc cmp pusha dec xor loopne dec adc dec jns pusha fs lcall fwait cld jbe jg mov cmp fpatan sbb dec inc aad dec mov push (bad) jae fmuls push mov rolb jnp inc aaa (bad) inc aam fild and mov scas cld push dec dec js jge lret adc add mov mov push roll lcall inc (bad) mov je (bad) jno enter xchg inc inc cmp andl loopne mov xor and pop sbb dec das fwait fwait stos out xor push lods mov jo (bad) pushf lcall rol sarl push scas shr xor das loopne dec scas lock xchg push add sub push test xlat inc add das shr xchg sub call cmp out cmp mov hlt mov sub xchg ja adc stos addr16 pop (bad) cmp fwait push or imul fistp mov stos sbb jge out negb sar add xchg mov cmp cmc mov stos insl sbb dec test and mov in mov push scas add rclb test insl ja ret or mov xchg leave inc mov add xor stos sub cmp xchg fiaddl or pop jl jnp fnop pop rorb push faddl popf scas fistp mov mov lods xchg jns jg shlb jmp call ljmp out inc scas jb or xor lods lea mov pop pop int cs mov roll xchg ljmp adc add dec dec orb outsl sub mov dec (bad) dec lcall lods jle ret xchg jns and add aam mov jb sahf mov xchg fs and pop pop lds into mov out insl mov mov je dec sarl sbb jnp mov ret decb addr16 adc fdivs loopne out push mov xorl mov push sub cmp dec scas jno lretw adc pop cmp stos sub rorl imul mov das push out mov xchg movsl pop jg ljmp lods (bad) mov sub mov xchg loope shrb insl mov sub arpl xor test rcr fmul je and mov xchg dec femms xor cs push xchg pusha jnp repz jl cltd mov js pushf mov xchg ds (bad) xchg mov punpcklbw xchg cli push xchg stc mov jnp into scas jnp xor ljmp pop mov jne mov or mov lock (bad) aad lods sub rclb jns cmp in add mov ret mov arpl cmpsl stos lahf mov cmc mov bound adc sbb in mov inc pop sub sub shrb aaa outsb lcall push jge jae cmp test push dec mov outsb lret mov rorl xchg add jge (bad) aam adc push push pop sub in popf cmc jmp mov bnd jl (bad) mov jne and outsl (bad) sbb fstpl push and out fistpll pop mov outsb pop cmp ja sub lods pop mov sub push inc les loope bound (bad) cmp (bad) jne mov fiaddl xor adc pop sbb inc xlat pushf inc mov test nop dec mov stos mov add jns mov out adc aam jle xor dec fidivl mov adc scas push dec xor cmpl cmp adc bound xchg out inc clc push inc loopne xor movsl xchg into adc pop and jmp fchs insb icebp jne push pop movsl call and mov add mov adc stc std xor cmp arpl mov and ljmp dec data16 cmpsb jge add or scas ret and cmp out cmp push les jno cmp es xor or cmpsb push jp es mov stc push cli jmp jmp pop gs jns cmpsl inc push push inc xor add ficom xchg xchg mov adc out xor cli xchg rcr nop sahf and push lock or fdivr xor sbb rclb xor xchg mov sbb stos repnz out pop scas push mov jnp mov fdivrp out outsl vandps dec into pop incb mov ss ret lret cmpsb mov test aaa imul stos xchg inc xchg pop loope mov inc push xchg and fcmovne sub pop (bad) pop (bad) (bad) iret fsubrs dec dec jle and mov cwtl out out or pop mov movsbl mov or cmp (bad) mov and add inc cwtl or push fdivrl das (bad) outsb jne in and push adc (bad) or inc inc in push xor mov xor lret push and out sub sbb stos js andl test jp dec out das jnp enter rcr pop sarb push jge lret aaa add push icebp push pop hlt (bad) pop int shlb add or popf in bnd pop inc cmpsl inc or in lea adc inc in ja adc or js xchg push cltd (bad) mov push cmpsb in push cmc jno push push shll push dec xchg push push movsl popf mov cwtl jle rcl sbb dec lea or lret dec ss dec push mov mov sarb sub fmul out sbb fwait sbb jb dec inc das scas aas cmpsl (bad) xchg inc std and mul loop xor sub test cmp cmp and mov lahf outsl xchg scas (bad) mov aaa mov iret jno ret cmp rclb sbbb or inc stos and cs into movsb popa outsb icebp or sub push jge adc sbbl sub pop insb push and cmc jae jge outsl or cltd fidivl xlat pusha sbb push les std adc add mov mov adc or inc mov push jae (bad) mov pop inc cltd xchg std push or mov lahf push mov xchg cli arpl mov mov loope mov call dec adc mov cmp push inc mov pop cld ja in dec mov jnp aaa jb idivl or sbb (bad) mov jp rclb push mov lret push sub fwait adc mov orb ds xchg jl mov hlt repz pop adc lods jno pop xor mov out test pop rcr ja cmpsb mov sbb lods lock pop mov inc ja inc xchg test mov pusha dec add enter sbb push xlat mov jp lret cmc dec enter jl cmp insb and sbb adc add ret mov ficomp lea pop push test daa jle mov inc push jmp (bad) sbb xchg stc in xchg in add mov mov pop dec hlt je pop xchg dec xchg mov outsb or nop inc add mov inc sbb xchg into test dec mov cltd sbb push push pop loopne pop or cmp xchg iret pop push jge je jge ss leave xor adc push mov mov xor dec sub int movsb mov roll (bad) repnz jo (bad) js pop (bad) pop xchg jp subl popf xchg daa dec aas ja test je add mov int cmpsl dec nop in pop adc xor (bad) lods xor int jbe cli jbe cli inc xor xorb xchg cmp cmp push adc dec cmp and add ficom mov xchg aad ret jae fcmovnbe movsl mov insb out mov inc xchg insl push sbb fsubl loope mov mov insl (bad) mov adc pop inc sbb fnsave sbbl mov cmp push mov push or pop push mov mov cs cmovs dec cld rcrl mov mov inc xchg sti sbb (bad) cltd jae add pop pop jae adc jnp fmuls loop xchg xchg push pop int3 mov or sub push lods or sub xor or das testb pop xchg mov push or push enter (bad) int push jmp add jae sub dec adc pushf adcl jmp aas pop mov jl mov mov cmp dec nop jmp in and jae (bad) arpl pop cmp bound movsl (bad) sti stc mov jae nop jae xchg and and lds xchg call push xor bound (bad) mov xor sti push inc insb fwait pop aad mov sbb pop (bad) jae xchg loope inc fmuls (bad) js imul mov lock test (bad) dec push loop mov jl xor sub pop ss mov sub call roll mov adc inc and mov out and in cmpsb mov mov fidivr sbb pusha enter bsf add int sbb icebp xchg int3 sarb push daa sbb pmulhw nop int les out cwtl adc (bad) adc mov push (bad) dec mov loop ss xchg dec (bad) mov mov out jno pop jo sub fsts out pop fsin inc xchg xchg test cmpsl mov and mov out stos push repz loopne lock mov xor fwait out popf sbb inc mov jbe (bad) jae cltd mov adc adc mov test (bad) jae push push adc sbb fwait movsl jmp jno out xor and cltd add and loop es mov pop pop je clc jnp pop movb sbb push loopnew test test scas (bad) and sarb stc js dec roll aam mov test loop xchg hlt xor cmp shrl lock daa fs xchg cmp mov inc dec pop cmp push cmp mull lret lods push fs dec stos add lret or inc xor pop (bad) ljmp cmp aaa bnd xchg and jae adc jg mov stc or sub xchg inc stos mov lret jecxz aaa sub pop aam pop arpl adc callw insb loop push (bad) sbb adc sbb leave mov rolb dec xor or shrb (bad) cmp fbld mov pop sbb pop ja add movsb jmp fstl iret mov out mov or imul std mov bound popa aas mov imul mov and jmp sbb nop push lcall xor aam sbb inc fldl push ljmp mov xchg les leave aam adcl pop mov sti aad popf pop mov mulb xor xlat popf out lret xchg add inc cmc or mov mov xlat pop fldl jg fiadd xchg inc xchg add imulb mov pop es movsb pusha (bad) mov test arpl lea jb dec pop adc ret cmpsb pop mov call fistl pop dec adc adc loope cmp hlt adc cmp bound push imul mov (bad) xor enter jp mov xchg push add je sbb pop xchg cmpsl xor or add or push sbb xchg or mov es or jno jle pop fidiv sub add jge fildll ficoml mov lods pushf xor pop out jno sub xchg push mov pop xchg addl in and sub (bad) sub movsl stos adc and rolb test outsb sub jne jb js out mov mov clc cmpsl pop mov loopne cmp cld dec and adcl int3 std sbb dec lahf mov lret mov movsl lcall popa outsl cld fmull aad sbb or push sarb lret lods subl cmpsb push xchg lock fistp or or loope daa lock or mov out roll fnsave sarb ds clc pushf cmp adc movsl or pop pop stc pop mov pop sahf les (bad) clc mov (bad) fsubrl or fidivrl out and addl cltd add jns (bad) cltd add je test lcall and jmp aam hlt call lods dec les (bad) sti in push repz fimul sbb adcl mov mov repz aam jae es pop sub pusha lea jle jmp mov movsb push jne xchg hlt (bad) jmp sarl xchg das xchg leave aaa js cs dec xchg pop push cmpsl (bad) sarb jnp daa test pop pop jb mov pop lods cmp (bad) push or inc inc sub daa adc popa ss jo test fs or pop fisub mov insb dec mov cmpsl aad ret cld decb push and push ret sbb in adc in mulb inc ret call cmpsb xchg mov in jno ds inc xor dec dec insb jmp addr16 stc je hlt dec mov mov in push call push or sub add jnp xchg pop or pop inc lds dec cmp imul fisubrl pop out mov jns stos and ss pop movsb xor out arpl lods gs fwait sub adc mov and xor movsb pop into hlt jno or xor mov nop movsl dec fisubrl or push sbbb fwait xlat in jle int push stc cli loope pop and push sub icebp hlt (bad) xor movsl iret in and clc pop pop push inc dec ret push add ret mov push es fisubr dec insl mov pop lahf call nop dec imul cmp adc addr16 jne adc cmpsl adc sub lds lea test sbbl (bad) dec jns pusha ror pushf jne add movsb mov in pop pop inc aad fwait push mov inc inc add arpl xchg std jg xor mov mov adc test insl popf sub mov xlat pop push sbb sub adc sub push inc add push adcl (bad) inc push pop fbld cmc mov andb fisubl rolb outsl out outsl mov mov clc dec mov push jmp xor push popa add mov mov add loope xor pop sti inc pop cwtl mov jbe cmp adc (bad) inc pop fwait push xchg jbe hlt xchg ret in pop outsl fstl dec push mov pushf xor sub adc sbb adc mov cmc mov je fidivl mov push out jecxz xor aas outsl (bad) cmp sub ja jbe or ret xlat aad xchg push test inc fldenv inc mov mov mov nop push lret lahf push popf mov movsb push sub out fist sbb inc cltd into cld popf in push addl push or cmp mov mov fisub or int3 pop mov xchg ret jmp jg rol xchg xor in xor sbb push mov adc (bad) sbb xchg psrad xchg imul int3 lods inc js jl dec (bad) sub fidivr stos xchg pop pop add inc jp les or (bad) push out xchg repnz lcallw xor fdecstp add and (bad) jno mov jae push add pop push js pop inc pop pop inc inc push cltd push push pop mov fcompl aas mov int call js mov daa jg mov int (bad) div scas aad mov and cmp lret mov mov int3 fldt xchg dec in mov lahf or push mov cmp xchg push lahf (bad) add lea mov cld pop xchg pop pop repnz lds outsl shr pushf mov add (bad) jp inc int mov pop push sub dec mov adc push mov fdivs inc push lock outsl mov fs pop loop add jg test mov inc xchg imul sub add push sbb pop cwtl arpl stos or ret sbb pop mov sbb push negl pop jle sbb inc push cltd inc sahf inc cltd lods adc jno dec pop in and nop xor int3 pop or sub adc add sbb sub fistpl pop adc das and lock inc roll sbb icebp push push sub inc std jge lret mov scas arpl mov pop lds vpmuludq inc mov cli mov ds (bad) mov imul mov scas lods xor adc dec add loopne cmp mulb push lds jmp mov stos mov out pop cmp inc in sub dec push shrb lea sbb mov mov test push stc jp imul mov es negb inc cmp jg pop aas imul out add sahf bound lahf addr16 insl dec cmpsl leave or pop jecxz (bad) xlat mov ljmp mov and push iret cmc xchg shr punpcklwd cmp and loop dec decl jo leave into adc jno insl cli and hlt ja imulb add push pop sbb mov je adc adc jp and loopne add pop adc repnz jmp outsb pop jo loopne sub and (bad) adc push pop push out lret jae lds mov and cmp sub or stos cwtl mov push out add or sar ljmp cmpsl lock cmp nop (bad) arpl mov outsl hlt push loope sbb adc call ret lret pop sub pop push add hlt mov dec cmpsb das loope scas outsl icebp fimull jbe add mov push movsb call push xor into js daa in lock xlat dec push hlt ljmp adc neg push clc fisubr cli jg stos in cmp js mov pop xor mov sub bnd int3 add push push add jmp leave repnz daa out inc lods dec jo add std jl push jbe dec sub mov or jl dec jl pop inc rol push xchg sub dec (bad) push cmp mov jmp push pop pop push or xlat mov adc sub fcomps outsb push mov popa pop and (bad) outsb mov xchg cmp dec aad adcl inc pushf adc mov in pop jne scas mov fistl mov ja add insb xchg inc push sbb push insl lds fs mov ficoml fcoms data16 mov popf add jo call cmp xor movsl or mov inc xor ret cmpsl push enter int3 xlat and push popa xor outsl es inc cmc in cltd jns push bnd push mov xor inc pop push ljmp xor xor push dec sarb xchg xchg notb mov and bound xlat pop add mov fwait xchg inc cmp push jnp sbb stc data16 dec ds add lock push es lret mov mov dec sbb sub cmp into dec mov mov mov mov sub inc mov cmp push dec and or xlat and icebp scas mov and stos jnp mov roll movsl orb popa or fadd dec clc arpl sub mov sbb or popa mov insl xorl fs mov pop jo cmp jecxz shll cld mov loop xor inc jge mov in and out (bad) popa mov mov adc push inc jne vmovaps lret das iret jl jno in push aam xor push mov xchg mov fsubs add rcll jb dec sbb sti cmp mov cmp push xor sbb pop aam jbe int adc (bad) cs xchg lahf jo imul fnsave xor xchg pop xchg mov ret (bad) fisttp pop imul cmp add fwait inc pop xor data16 lea sti cwtl cmp add leave mull jl mov mov push pop test rcrb sbb mov in push clc sahf push pop fs or push mov pop cmp arpl mov jne je dec add mov jbe scas xlat (bad) push cmc xor repz dec pushf inc or pusha xor mov (bad) cmc addr16 mov adc movsl mov mov xor (bad) iret imul mov push sub xchg ficomp in pushf inc out and xor mov jecxz mov jae pop lock and and mov adc test jne lock lahf ds fwait imul dec sti push sub stos int fildll sbb xchg icebp mov test push je or dec push jg inc inc lcall mov mov sbb imull adc add loopne mov jno popf sbb mov ss sbb (bad) das fcomps rcll or (bad) or aas sbb popa dec outsl adc outsl inc inc pop xchg lret mov cmc addr16 push jb adc lods (bad) mov pop sbb test test mov cmp out into hlt scas cmp lds dec rcrl pop cmp add dec add sbb adc pop lods out negb repnz data16 into xor sub adc jno mov cmp mov std popf (bad) rcr jecxz pop popa clc and xchg dec xor movsb sbb ljmp adc ja inc mov and sbb mov (bad) jne sbb icebp (bad) sub dec push sub imul jb adc mov gs (bad) xchg or andb orl xchg or dec add xchg add add clc cmc aas fmull ret adc in jecxz popf cmp aaa loope and roll xor lcall ss cmp (bad) in adc push push pusha mov xlat arpl cmp out xchg sub bound sbb dec decb push std mov insb daa cmp leave ljmp adc dec xchg pop push pop sub mov cmp pop xor and mov jnp bswap push data16 push out jecxz ret hlt sbb xchg pop mov mov lds mov mov cmp (bad) ret mov inc mov jp adc xchg lahf push iret repz out mov scas push mov ret adc sub jnp clc bound cwtl aas subl movsb push pop mov inc cmp in sub scas fcomi lods les xchg in aaa ret addr16 leave iret jbe fsubs xlat jbe stos fnstcw out sbb jo dec lea rclb cli jno lea inc test in hlt add jp bound adc fldl out adc aad mov push mov das xchg mov xchg lods imul inc and out sahf mov sbb mov cs sub mov int3 pop pop xor movsb push sub pushf cs and fxtract adc sbb mov mov bound fstpl scas dec test jp sub xor sub xor (bad) aaa lods fadds (bad) cs addr16 sbb fmull iret mov dec repz xor jmp out fadds jb std adc pop sub scas subl loopne or lcall nop stc stos inc and icebp inc push pop out xchg daa cmp jecxz fistpl (bad) stc dec and adc jecxz fdivrp outsl test mov std stos adc scas jg loop push mov push mov jmp cmp push and push andl repz pop push int push adc fs cmpsl gs fcompl cmp mov push insb fs leave in pushf sub ljmp xchg pop imul xor sarb test jo rcr fcomi mov outsl negl push stc sub popa add add inc rcrl or xorl popf mov out xor icebp pop push xor push xor sbb inc inc aas sbb ja xor add mov mov aam in adc jg jne into aam out push outsb test sbb adc int3 inc dec jne add (bad) push dec rorb jecxz push idivb bound or and pop icebp (bad) loopne movsb inc cmp sub das sbb xchg cmpsl icebp sarb and imul inc jb mov pcmpgtw mov shl or cs faddl or in fstp scas cmc lods cs pop int3 xchg inc je jno mov fist int3 dec mov inc jne mov fs cltd ss push add call add cwtl adc aaa jno aas dec push xchg aam movsb mov addb cld push cmp mov loop lea pushf dec popf or sub hlt sbb xchg clc dec cmpsl fdivrs mov test subl subl in cmp adc retw out sbb inc movsb xlat ret icebp pushf mov ljmp and rcll sub aam stos or adc imul cmpl add jle inc fldenv jnp adc stos push nop or sub xchg add lds ds dec pop or fisub jge mov xchg leave add cmp (bad) pushw std movsb dec add jecxz cmp dec push fimull xchg mov test push or adc repnz call dec cmpsl xor adc cltd cmc sbb or dec popl inc inc lock dec push lret xor sbbl faddl or mov nop pop mov push cmp out xor jp dec mov xor ret negl scas mov adc popa pop mov inc push sbb mov pop shlb fs dec jno inc inc xchg ret andnps rcr or or pop sti mov int3 out ror inc and jecxz pushf sub in (bad) push jae cmp imul dec and dec inc aam icebp outsb insl out xchg inc add xchg and xor in xchg xor scas ds ja xchg out fcmovne add mov inc mov mov mov pop dec (bad) mov fwait out inc fmuls jg xchg mov in push ret (bad) cs or scas fidivr pop lock or push ljmp inc sbb std loope inc push insl pop shlb mov jmp jmp cwtl outsl scas int3 sbb mov sbb jl sub jns fcompl insl shrl add adc jl push andl xor add or add or xchg jne movsl stc inc inc fcmovnb fs mov mov sti sarl iret stc push out push (bad) jl pop daa cmp int cmpb xchg ja fldl cmp xchg xchg push fnstenv mov ss icebp leave add inc not loope int sbb push lcall test repz and cmp push jmp sub mov jle data16 mov dec and push clc mov into stos push and ror pop js scas in jmp rolb je shr dec imul mov pop mov push push push jbe fiaddl test fnstenv push insl bound mov fdivs and push add mov lds not rcrb xor (bad) mov fdiv dec es mov and mov enter and pop push sub lret jecxz dec clc sub mov lret pop call es mov jecxz xchg pop inc inc cmpb xor pop inc push (bad) fs xorb mov popa mov mov inc (bad) xchg rcll xchg ja movsb cmpsl sbb daa lea insb clc ret mov jbe loopne mov jnp mov ljmp inc xchg out adc inc cmpsl fimul cs and lahf cs sbb and mov push jb stos cli and jp jno out jmp pop mulb sub jle or push test jl pop pop pop cmc std push push in pop cltd repnz add dec gs fstpt and imul mov push daa dec sti cmp (bad) sbb repnz xchg hlt imul jbe or and adc pop popf (bad) sti cmp or mov fcmovbe (bad) push cli push add inc lods stos cmp adc mov test bound dec xchg sbb loope mov call dec mov (bad) cltd mov push jle cs inc mov cmpsb adc and lahf dec out mov lahf jp (bad) jg mov mov imul or mov xor add imul dec lret mov pop jns scas jo mov (bad) pop (bad) jle or push lods iret outsl sub and out cmp pop pop pop fnstenv pop test push mov pop push inc je movb loop test scas push lock inc sub xor sbb in mov mov out insb lods clc leave push loope sbbl jb movsl aaa sbb jae lahf jno cmp jae inc in cmp push cltd test sbb jno icebp lahf cmp push or rorl cmpsl loopne xor jno,pt mov imul (bad) jno push inc push aaa mov mov call xchg mov dec sbb and (bad) inc lret fisubl jecxz enter jo sti push fisttp scas lods cmp enter or mov outsb into lds or mov xchg mov sub inc mov jnp loopne and mov test rcr lret cmpl ret mov or nop jge arpl push stos inc cmpsb cltd andb inc xor sbb test iret dec enter loope cmp mov xchg xchg shl cli cmp stos (bad) sar lods arpl loope je std cwtl sub stos fldenv outsl cmc je fs and sti clc sbb fldt push xor test mov inc dec pop loopne mov inc js cmc popf adc xor cltd adc xor pusha stc dec sti mov push fwait dec (bad) stc jae fcoms sbb mov mov sub inc sbb mov stos sbb test xor push popa push and rclb sub jno sti cmc pop sbb jno mov or shrb or leave ljmp mulps jmp inc adc fildll insl ret clc add cli add call push xchg mov gs cld mov sarl int cmpsb mov pop xor in clc add movb orl jne cld jno fistp stos jp cmp in pop sti sahf (bad) ss ret lea decl jnp inc jge mov sbb adc mov jl dec call dec rorb into adc cmp (bad) xor fs mov inc fwait inc int out outsl or fnstcw into dec mov ljmp repnz pusha imull fs (bad) insl sub loopne popf (bad) scas test pop (bad) shlb jmp sub stos fwait add cmpl push in adc xchg daa stos pop dec aad push sbb xchg mov hlt in dec xor es sbb setno out mov ret sbb in push xor idivl add cmp adc xchg lahf popa cmpsb rclb lea cmp xlat adc out test cmpsl or cltd dec mov add mov test icebp dec int iret pop loope jmp out sahf out hlt xchg outsl mov lods inc pop adc cli cmpsl scas mov fnsave xor cs ljmp inc fcmove lods notb int3 test jne imul in mov mov lret xor (bad) mov ss cld (bad) jae push jnp inc into xor test mov and outsb loope (bad) mov adc lods ds add (bad) fnsave js leave xor maskmovq notl les ret push mov sub movsb mov dec adc jg popf fwait pop xchg sub cmp dec mov cmp jb fsubl scas xchg ljmp ss idivb xchg nop adc xor pop stos and add dec xor je jmp loopne mov mov addr16 push sbb je jns popa mov xor or push js imul cmp cwtl and push lods add mov cltd and inc inc addl inc (bad) or add popa mov xor out out dec cmp (bad) pop fildl daa mov dec (bad) jge mov ret cmp pop movsb add dec fs jp and lret xor call lcall into pushf cmp daa test (bad) sbb lahf lods idivb jno sbb enter enter std sub in in outsl addr16 insl push push cmp (bad) or ss enter xor mov inc ja out pop dec rclb jle push lods test sub outsb leave mov pop enter adc xchg imul jbe jno decb and fdivr mov cmp shrl inc scas fucom inc and mov jno lret repnz mov pop ljmp fwait or cli repz stc sub pop mov insl mov pop inc and cmp xor or cwtl pop daa mov (bad) repnz cmp addr16 jge gs (bad) jmp dec dec ss dec outsl test cltd mov cmp dec or push sub out xlat hlt repnz gs push xchg push insb jne xor jle jecxz stos adc cld loopne mov mov mov fmull jp in (bad) sub insb decl fldcw push add jno orl repz dec jnp icebp popf imul xchg push mov mov dec mov and jo pop xchg mov inc xchg mov or push xchg or addr16 stos cmp mov out add pushf mov push sbb out push mov imul vunpckhps lock xchg push inc or xor and cmp sub jbe xchg hlt leave divl adc or push adc sbb pop data16 mov jg pop sub jbe gs into int or fisubl addr16 loope stos sbb push aas cs and push push mov aaa ds sbb insb out jne cmc dec leave mov jmp (bad) cmc jnp sahf xchg jge xchg push jmp vpunpckhqdq pop daa push xchg jno sbb das fbstp jp (bad) inc jle outsl jno dec xchg jle mov das outsl cmp push aad pop ret fmuls xchg sbb jle mov jb mov sbb dec add add inc fs addr16 mov mull inc cltd inc inc push sbb mov inc popf roll push daa sub es insl adc fistpl mov jmp stos in stos adc sub loopne dec mov pop fistl xlat ss enter repz out mov push ret les jmp ss mul loopne out jmp cltd shlb fcoms mov nop movsb mov fdiv mov sarl cmp mov ret inc add outsb jbe add add jb push (bad) cmpsl sub (bad) hlt xchg mov mov and xchg push dec rcr cli mov add shlb mov or push out adc mov pop mov lret out jmp mov je lods adc mov lds add out jge pop push neg xchg push push out and dec add jo movsb inc cmp cld sbb ljmp sbb fcoms push or add push or mov sbb jge sub cmpsl lds js movsl movsb pushf cs or das fs cld (bad) mov adc jle mov sarl out stc aaa mov and sti icebp lods sbb rcll dec or adc inc sbb pusha push popf jle jae aaa push je pop sub push lods mov jmp test sbb ret ds jle cmpsb pop cmp cmp fbld into sbb sbb add jmp testl hlt test xlat jo sbb in nop aas and push (bad) repnz gs cwtl pop addl jns xorb xchg push sub arpl ja push repz or fidiv inc dec pop mov jecxz push les test mov (bad) out inc xchg or jae or cmp das cmp cmp repz xchg xor cwtl je into jg xor push pop shrl cs pop idivb popa mov push xor mov in aaa movsl mov sbb es repnz gs push inc jmp xor sub adc pusha inc dec rorb jecxz mov or nop insb popa push hlt push insl push (bad) jmp add andl lret sahf xchg inc jge lods inc xchg ss adc adc orl jae mov test xor pop inc fs mov test and mov or fs test test into mov jmp loope or mov xchg mov fidivr enter ret nop sbb jmp (bad) mov sar sbb pop js inc scas in xor repz lock sub fisttp mov mov xchg lods pop out data16 int3 sbb js pop add or cmp push fldenv cltd sub negb mov jo das jnp ljmp fmull loop out adc rcl and mov ret (bad) pusha test cmp les fsubl pop int addr16 mov pop fimul inc xchg (bad) mov cwtl sbb mov mov pop fistpll pop add pop dec xchg int or inc in shrb clc inc imul add and imul sub mov sar je int3 adc sub nop jge mov imul push dec pop test das repnz imul shr mov lds cmpsl dec xor (bad) xchg outsl jl push clc stos arpl mov outsl xchg lret mov mov insl subb orb popa in xor xor and push mov xor scas arpl cltd loope dec xchg push cld rclb push push in test mov shl and mov adc test loop or sbbl cli aad (bad) lock daa (bad) and imul mov addr16 or (bad) les lock pusha inc jae pop and (bad) pop or sub pop lcall repz push movsl lret (bad) mov cwtl cld or jnp int das movsb and sub rclb mov fmulp inc or xlat jge and jl (bad) jo mov lcall leave xchg mov mov inc notb lods lea mov sbb rcr mov std fnop xor mov test cli add pop and ja pop push lahf clc sbb push and sbb or jmp pop mov or push jns fs xchg cmp sbb ficompl movsl sarb mov pop jo jg mov fwait in roll ffreep lret aad sub ret adc xchg subl add jae lds mov sbb jne bswap stc out and mov inc cmp dec in and shlb enter mov jo lcall sub outsl jbe (bad) (bad) ja test arpl xchg dec adc mov cld push loopne xor or or dec in inc pop pop clc pop repnz cld push mov bound fidivl stos daa lret mov rcll mov mov lea xchg jo pop dec ss std push xlat sbb jge insl sub in aad rolb jecxz data16 mov rclb lcall aaa ret mov int3 adcb fdivs xor enter mov push cmp cmp imul scas mov and xor mov lret or add add lret jnp loopne mov adc fisubr jb fsubrs add cli (bad) ficom lcall (bad) ja sbb outsl sub pop sub add push sahf sub pushf loope jbe or ds lret jp add in outsl and iret std rorl sbb jbe mov xchg insl push cld lret pop js rcrb xor daa and fisttpl shll jmp aaa js xchg sbb pop mov xor jbe or or decl icebp adc mov pop cli incl jo jecxz out cltd imul lret jb pop pusha jmp cmc xor std ss (bad) jno push xchg cmp mov int sub and sbb daa ds rorb inc push mov sub (bad) cld mov xchg dec cmp xchg add dec fisttp stos test mov jmp gs fistpll int test mov add mov sub pushf add xchg jns fsubrl or jle mov jae les test pop movb aad mov xchg add sti lret mov dec repz scas into mov pop xor imul test pop loop andl add (bad) jne mov inc and lods xor cmp lcall mov mov mov and jecxz adc add xor mov lahf add sbb dec loopne xchg xchg test mov daa cmp data16 or lods xchg adc popa jae dec dec in (bad) (bad) push cmp mov clc ficomp mov push mov sub mov std (bad) fistp sti xchg pop dec pop roll mov push rcrl scas sub cs cli mov jl lea mov and xor lahf mov insl adc shll adc cwtl jno and cmp out push pop cmp aam jg not cwtl out inc inc sbb repz mov es popf pop mov movl outsl es mov out push and push negb mov ret jnp inc mov in mov push mov imulb xchg and lock push jl mov daa fstps push xchg outsl rcrb ja mov jae or out and xor leave sbb push push push sub rol sub mov stos cmpsb push push outsb xchg adc dec mov (bad) (bad) cmc xor inc mov movsl lret and mov add add cli daa adc inc push cmp mov in pop bound mov dec adc push xor imul pushf xchg mov add mov add ss mov js repnz dec aad loop sbb addr16 stos mov sub push loope push imul add arpl inc (bad) lea in fildll sub jl pop pop adc sahf xchg bound outsl mov incb mov cmpsb lods mov inc mov daa lds mov mov add xchg lods mov push add xchg push jl dec pop sahf lds mov mov cmpsl inc sbb sbb mov xchg push push sub jecxz cwtl inc mov or sbb xlat mov jle scas jge push test insb mov test fistpll adc mov scas mov pushl adc sbb cld jne cmp jns pop aad int3 mov inc loopne,pt out scas push lock aam cmp sub push mov pop pop mov cmp and pop loopne shrl mov jae xor sub adc in pushf jl dec sti into lret (bad) ds add sahf movsb pop xlat stc repz and xor iret and xor dec outsl pusha jno (bad) out (bad) jnp dec jl jb fdivl jle push pop ficomp outsl popa sbb mov inc pop insb movzwl mov popf incl mov (bad) adc cmpsl cmpsl and js mov cli jle in ror fcompl mov pop fdivrl mov jbe imul outsb xchg or cld mov cmp cmpsl fsubs mov jge push cwtl aam sub (bad) ljmp iret cmp sbb mov sub jmp in ret lods dec fimull and xchg inc loope adcb inc mov inc aam cmp push into jne push imull in sahf and adc inc adc mov mov pop push cld repnz mov clc roll popa push push scas std dec mov and popf push cltd xchg loop push jo sub xchg stc ljmp xchg cmpsl rcrb mov push (bad) daa jp aaa imul xchg in data16 xor shr adc sub push gs jmp test dec outsb dec xchg arpl xor aaa iret mov pop shrl test sub mov or ljmp mov push shr insl jp add sbb xchg clc test shlb rcrl shrl xchg mov out cmpsb sub insl loope jle xor push and push enter dec adc pop jl (bad) push (bad) rclb lret divb in pop push push mov sub das pop inc lret scas arpl nop icebp test mov leave test and fwait in scas dec pop cmp out xchg pop push mov push loop or in in mov jnp jo out mov mov aas loopne popf sti stos pop cmp enter and cmp gs mov mov and xor mov mov jbe ret xor addb icebp outsl fildll sub push and out imul in sub test mov fiadd lcall cwtl pop (bad) pop sub dec test cltd insb shll in rolb add jae pop mov cs sub js mov jns fwait adc test mov loope jg in lods mov xor dec pop int ret out (bad) int hlt or jno adc or inc jle (bad) out adc outsl add mov mov mov test test out cmc aam xchg lahf lds jno dec cmpsb sbb and inc int pop call dec rclb sbb mov pop frstor imul pop test hlt mov xchg xor in popf movsl into or cmp std inc xchg jg pop fisub sub enter or sbb arpl and xchg pop sub call mov fcoml aad add sub call mov xchg int3 repnz sub data16 imul xlat jle dec fwait pop mov (bad) sbb pop sub cmp or out ss repnz jb fnsave adc lock push sbb outsb ficom in dec xor xchg inc addr16 add mov je xor div sbb push mov lods inc das aad out cs fbstp pushf loopne enter (bad) xor and mov inc lds fcmovbe fmul or push and repz push dec xchg cld stos mov es test xchg cmpb mov add (bad) xchg mov sub or xor test faddp dec add sub xchg inc sbb xchg in cmpsb pop aaa in in adc popf and int push mov mov out loope outsb test nop mov dec lret xchg push inc ret pop (bad) mov sbb mov inc mov mov mov cmp xor cmp jb mov out das enter in loopne dec pop jl lret test ljmp (bad) imul push ja mov dec and pop mov imul mov cmc repnz (bad) push sub adc movq sbb rcl sbb scas cltd iret ljmp in xchg xor stc (bad) mov jl push inc pusha xor (bad) aaa inc jns test sub stos inc xchg int3 mov in out mov nop xchg adc fs add add cmpsl jo xor fidivr add xor dec mov (bad) jb mov insl sbb xchg pop cltd mov repnz jecxz add inc jecxz call sub push or insl lds xlat pop inc into jne loop cld pop and push stc movsb cmpsb jmp repnz ss stos rclb jmp ret cld pop lcall cltd enter popf stos (bad) mov sub idivl jp or repz loopne ret in or outsl dec test mov mov cli jp and and sbb arpl adc xchg in xor sbb stos add jle dec xor and dec insl std jne,pn sarb jge adc push loopne into jae pop fisttp comiss icebp mov lods fstpt lahf gs mov mov xor cltd in adc or dec bound test aaa lods jo cltd xor int3 fsubl cmpsl dec fldcw jl notl and les ret lods or aad jns fwait mov cmp in and and pop mov sub inc add cmpsl out int3 inc out nop cmp mov (bad) bound cmp imulb pop lret or mov imul or xchg jge in inc mov xchg pop sbb lock rcrl push pop push out sub lret (bad) push pop or loop add dec popf inc ret insl mov test push rcrb sbb cmp xor mov pop sub movsb (bad) ja out (bad) lret subb lods and push loop sbb ret mov cmp jns xchg cmp mov hlt test into test push inc xlat inc cmp mov add xchg ret or xor je (bad) lds pop cmp rcll sub fnstcw (bad) clc jl pop mov pop dec aas add sub stos cmp push sub fs or shrb iret (bad) cmpsl and xchg push loopne fdivrl push lret aam xchg sahf out out imul int3 leave jo pop mov imulb ficomp mov outsl (bad) hlt jge movsb repz shlb sub xchg sub cmp insl in cmp adc and out push int push cmpsb add data16 xor je popf xchg shlb dec outsb push insl mov enter dec and or popa orb dec or xchg rclb hlt mov mov negb push fmul outsb jmp flds int pop leave fwait (bad) xchg je add xchg test jne pop dec imul push or aam loopne test ds fnstcw cmc pushf cwtl adc pop or ljmp in xchg cmp cmc add scas rcrb repz ficompl imul mov popl ds mov mov mov (bad) lret ret adc mov idiv movsl sarl cmpsb push (bad) arpl push cmp rol imul fidivrl xor jns mov (bad) jg mov lcall bound mov add mov bound aas mov dec cmc in add or inc or jb xchg fcomip mov cmp into sbb adc lea (bad) (bad) xor dec mov mov ficomp sub outsl pop xchg movsl xchg dec pop cmpsb repnz xchg aam nop jg sbb sub mov (bad) inc push add push imul jmp stc cmp out and in arpl aaa sub jae arpl mov pop ljmp test lds (bad) cltd pushf push xchg (bad) insl (bad) fist mov pop ss pop test dec and jno lahf aas insl test fdivr mov les loope dec xor adc movsb mov test scas mov pop insl push mov mov inc lahf xor or clc jo bound and mov xchg rol sub adc (bad) (bad) das jg out shl stos stos test push jmp sbb das (bad) dec cmp mov sub xchg cmp jb (bad) jle stc mov cs test subb (bad) xor xchg pop jecxz dec and cltd adc in mov fadds sub jecxz out das fistpll xlat push (bad) (bad) lcall add jg daa xor fs repnz add movsb enter dec rcrb out ja mov (bad) mov out clc adc adc fidivrl jge cmp sub scas mov cwtl insl xchg or or out cmp and loopne fstpl fimull push cmp mov inc test repz add enter add clc xchg xchg cmp cmc (bad) pop cwtl in out xor jg inc dec inc mov cmpsb xlat pop pop (bad) jo ret mov icebp (bad) jb mov inc lcall lds push push daa adc mov mov lds cmp xor aaa in cmp jnp sbb (bad) out cmovno adc mov sti fldenv leave adc pop int jge jmp and mov icebp inc or xchg mov mov add inc lret (bad) dec add sub jb outsb cmp movl lds int3 jp push ljmp addr16 imul mov push inc add xchg in push gs fwait xchg bound cwtl mov push xor add pop pop mov mov out xchg inc mov sub sbb mov repz and (bad) xchg pop aad mov dec addr16 popa (bad) adc xor push push lcall pusha and pushf fisub fcoms adc (bad) outsl or iret dec adc pop aas mov mov and (bad) aaa outsb outsb mov mov cmp and cmp popf lea std ret popa adcb gs mov cmc sbb sub je into xor aad lods and pop pop nop and or pushf je mov (bad) nop arpl xchg iret aam inc pusha cmp or pusha and into rcr in outsl pop int3 test push out push lahf mov or scas mov and jae gs ja rol insl loope popf ret inc sbbb insl cmp (bad) cmp sbb pop dec lea movsb loopne aaa leave cmpsb dec int in cmp push gs add sub mov ja and sbb fimull pop cmp xlat mov sti hlt gs push mov out mov int mov add fdiv mov aaa inc out cmp mov cs push addr16 (bad) cwtl fsub cld insb lods xor mov daa jae jne push test hlt enter push jmp mov adc test push mov push jle je push adc aam shll clc jp push sub mov (bad) mov test movsb and jns xor pop out jns sub mov fwait inc int jae mov addr16 sub inc mov mov addr16 popa lcall pusha sbb fnstenv mov and push (bad) cld mov or mov mov fisub repnz or jb imul add mov imul outsb push adc daa test add in and jb enter jmp test stc movsb inc jg into inc outsl jle lds data16 mov xor aam (bad) out lea mov int add dec mov inc cmc (bad) int mov cwtl fisubr ja inc inc xor cmpsl adc (bad) push (bad) loop test mov mov rorb ret push in sbb (bad) pop (bad) xlat add pusha add sbb iret nop pop movsl js lret sbb insb negl cmp popa call cmpsl ds mov mov mov cs stos push inc movsb cmp dec (bad) fdivrl adc and jne xor (bad) fdivrl ret jno cmp pop call push cmc clc aas sbb (bad) sub popa das xchg sub popl xor and js fmul sti in inc inc xchg xchg and lds push dec or inc out cmp inc movsl jg,pn je sub mov aam je pop push xor es jns cmc mov int pop cmpsl bound cwtl cmpsb xchg scas jne hlt nop or fidivr movsl add dec mov sub in iret cs mull ljmp cmp mov fucom cmpsb stos jg insl or push and xchg pushf or imul lcall xchg push adc les cmc lcall in push adc jmp out sti xor cmp bound adc mov jns adc ret or por pop imul jns push stos cli mov or mov aas out (bad) cli xchg xor xchg loope or outsl loope push ret in dec jns add (bad) imull fcomps ret sub jg loop mov ret enter in les repnz or mov iret or adc push es sbb mov int3 pop mov fimull mov js movsl and ret mov cmpb outsl sub or xor xor sahf stos inc mov adcl aaa xor and in ret int lods sub pop or in ljmp out into (bad) jecxz adc xor xchg mov inc cmp push xchg int3 jl or add testl jne jb aaa cmpl cmpsl and push (bad) rcrb scas mov rcl mov add movsl icebp in cmpsl aaa lds fistpll sub adc jecxz dec sub adc daa testl pop push xlat imul rorb mov jae lahf sahf fsubrl sbb out sub pop and and mov fs out les (bad) enter test cmp push ficoml add inc pop pop jecxz fisttpll je nop sub dec or mov (bad) pop fs xchg xor push lods add rcl jae mov and into cli sub cmp in add fisub pop int3 (bad) cli xor test inc mov sub addr16 ss pop mov and dec jge dec (bad) mov hlt pop sbb stos xor pop jb repz outsb fildl xor mov ja xchg mov xorb sbb sbb mov shrl dec cmp clc inc adc imul pop (bad) lahf push cld insb sub popa adc imul and jge xor scas push cmc arpl adc mov dec pop iret lods fbld lcall ds test and push fimull ret pop inc (bad) repz (bad) xor fildl outsl mov movhps push add mov scas pop aaa and inc insb insb xor out imul jle nop aaa push lcall cs fild fs cmp xchg out cmpsb fildll stos pop add outsl fcoml mov icebp sub mov mov das bound cmp cmp or and jl adc push mov loop cmp sbb gs jno and lds sub dec gs daa int push inc mov movntps sbb jl or insb test outsb aas ja in (bad) pop lret add push jo fucom cmpsl cs lods imul pop jb in sbb push stos inc pop pop popa in and push and or test bound imulb xor loopne push mov fwait add sbb clc xor mov in (bad) dec loope dec in pop add xchg and adc inc push call mov xor mov pop rcrb or divl cmc mov (bad) ja rol adc mov insl xor nop dec insb dec lock (bad) popf push mov stos pop and adc imul xchg lahf adcb fnop xchg fisubr hlt repz jne push push and les cmp push jl addr16 jecxz adc (bad) out pop insb sub and cmp jmp pop lret (bad) mov inc ret xor sbb add mov sub enter test daa (bad) xor pop sahf cld out in mov negl pusha and jb repz insb add or add rcrl mov cmc insb ljmp daa mov stc cmp loope daa fs xor xor ret pop les dec repnz cmpl xchg out dec cmpsl add int insl mov out inc pop sbb imul andl enter dec or mov xor rcrl js inc and leave dec out jns jno test mov push outsl pop das inc fwait lods je enter xchg sub jl movsb or pop push aad pop icebp add xchg add lcall loop mov movl xlat and push or push fstpt xchg (bad) scas cmpsl pop aaa pushf add cmp rcr insb (bad) iret out int push mov or mov sbb or xchg (bad) std sbb adc inc and iret push sti dec popf leave lret mov add inc test mov adc aaa das xor add sahf mov lock scas scas fistpl pop push pop addr16 (bad) out xor xchg or push pop xor cmp in movsb mov movsl fsts shrl (bad) xchg (bad) xlat fdivl (bad) cmpsl (bad) repz enter add es xor enter adc aaa mov push jno add add pop mov sbb (bad) or add insb adc jg dec into (bad) and jmp ds cmpsb mov xor mov push lahf mov cmp (bad) ret jmp mov push add std adc and inc add adc add ficomp idivl xor ss btr mov dec inc pxor dec or mov push adc repnz (bad) and lret clc add (bad) mov data16 in cmp scas push xchg jae xchg mov test aaa jae sbb lahf js cli (bad) jbe cmp inc sbb pusha ljmp mov cld sbb pop mov ret mov mov mov sbb out xchg (bad) dec inc mov xchg stc jnp insb int3 popa fs aad sub jne pop dec push (bad) insb pusha test dec out and jl loop fldt adc mov or in xor xchg imul bound mov rcrl sbb jg xor push sti xor push or inc rclb adc bound xor out test test aaa in add push (bad) cmpsb pop adc dec jg lock dec mov gs pop jb idivb aam movsb out mov data16 test cmpsl fldl mov rep fnsave add push jne data16 rclb mov decl or pop cmp sbb in sbb leave pop stos xchg sub or fwait mov mov imul push lret fldt mov push pop xchg push shrb inc imul sub adc mov hlt gs or mov pop aas shll nop pop jmp or imul fstpt dec mov cli pushfw (bad) inc movsb loope sub popa sbb add outsl mov pshufw dec call iret xchg add xchg xor les shlb pop xor push inc unpcklps fisub ret (bad) xchg clc sbb sbb repnz mov dec rorl fcmovnb repnz test mov out scas mov insb sub jo daa aam lret out das (bad) outsb (bad) mov icebp aam or loop jle adc or mov enter push dec and adc inc shr jns mov xchg cmp dec das jmp inc lret mov cwtl (bad) hlt ds add xchg insb orl mov icebp das mov fstpt mov cmp push outsb iret add ljmp adc xor xchg (bad) in adc jmp lods dec imull (bad) cmpsl jecxz lock lcall inc adcl cmp out cmc addb and sub rolb cli xor sbb inc in xor inc push adc lcall outsb pop subb jno jmp enter sti jne mov xchg imul jae repz lods add inc pop mov add in and mov jge ret inc mov nop mov clc gs inc addr16 test lret (bad) out fsubrs mov fist lea insb and scas or dec test dec or inc or rolb cmp fs and push (bad) stos mov pop xchg push sub inc enter pusha mov pop sarl decl and dec (bad) jnp mov lret scas cmp mov addl fimull popf in jg inc push or or inc insl jmp clc mov xchg push sub pop (bad) into cmpsl jmp and leave sbb mov call dec push or arpl xor mov jg sub fucomi (bad) mov in lahf ret mov mov fist es aas jg mov cmp aam xor pop lahf mov push adc aaa sub mov std aaa rol pop stos arpl mov test or sub mov clc test aas sbb daa (bad) test pop lret push dec (bad) daa sbb cmp mov push inc mov pop rorl aas dec add add andl fldt sbb and xchg add testb outsl cmp es loopne sbb stc mov mov test inc adc fldl insl (bad) and lods sub xchg fxam jne nop aam repnz inc (bad) popa inc mov mov dec (bad) fs ret fnsave jns xor add and aaa sbb repnz shrl cmp and fnstsw adc repnz sbb test in mov (bad) jns jo push ja sahf pop in or scas and mov xlat hlt cli insb dec out xchg dec sbb adc sub mov dec cmpb nop nop add dec pop test popf push xchg add sbb popa pop aam loope inc sub sbb leave jo sbb clc (bad) xchg test or cmp out mov push js jne mov lods mov dec or xor mov jmp push daa mov (bad) rolb and aas lcall xchg mov loop (bad) lea cmp jns imul inc fidivrl pop bswap into push fdivr pop xchg in std jl push (bad) jo int outsl xor mov inc arpl cmp pop sbb int3 mov jbe sub push sub arpl adc mov fisttpl movsl cmpsb or dec and add ja dec sahf jns outsl int mov (bad) subps xorl push jae mov mov aaa fsubs xlat sbb aad xor in ret in sbb data16 inc in dec scas push xor (bad) repz stos xchg pusha jbe mov or or xor inc arpl sahf clc lea scas inc lcall mov sahf sbb or movsb dec incb aam out dec adc sahf (bad) pop push hlt outsl push jae gs lods xchg push and pushf sbb mov cmpsl mov mov (bad) stc lds imul or xor rorl pusha fidivrl sub pop fcmove mov push xchg xchg mov movsl cmp leave icebp (bad) idivl nop in fdivrl pop mov jge ljmp into nop not and test or sub sahf jg clc into sub mov (bad) jbe or mov pop fnstcw mov dec jmp jae push sbb mov sub pop xchg bound in push movsl outsl pop in repz aas cli ds mov dec cs nop (bad) pop mov xor cmc pop scas mov outsb or pop std jbe in jnp and or stos xor lods mov movsb xchg scas rcll cld jb sbb (bad) jns push mov jbe dec rcrb std pop push sbb jns dec cs fist outsb push aaa or icebp clc mov mov inc in mov add fdivrl fldl in cs inc add jae fwait cmp cmp ds test aas roll jecxz int cmp lea in test ja pop pop test adc pop push int3 sub sub dec jle (bad) (bad) push cmp lret or mov xor add aam mov dec enter daa mov fmuls test or inc frstor push sub push sub adc popl xor jmp mov cmpb sti pop sar and out jl mov cmpsb out insb adc mov lock ss mov hlt xor sub imulb out lock jno add pop mov imul xchg lret or sbb jge sub dec mov xchg jge mov dec (bad) daa inc xchg (bad) loopne add sub lahf cwtl cmp in dec (bad) insb lods iret in jp (bad) push adc ds inc xor lods cmpsb jo cmpsl (bad) inc lods shl mov addl and inc dec flds popf arpl (bad) pushf mov shrl (bad) xchg cmp rcl es xchg mov pop jns pop out mov popa dec inc mov and in cmp (bad) dec enter dec xchg test xchg lcall neg mov xchg mov sbb addb and out sahf push inc pusha mov ror in push popf mov inc jbe add mov sbb das xorb arpl rcl pop cmp andl jb ret add outsb pushf sbb hlt xchg add insl sbb (bad) in and shll xor lock into push jns int3 js pop (bad) cmc inc adc add scas (bad) mov push adc cli jmp dec sub ret and leave fs mov lcall ja ret outsb add pushf push xor xor lds pop adc cs xor dec cmp test psrad pop mov dec pusha sub iret add jg js push cmp inc add bound cltd movsb fs sbb lds (bad) out sub les and push push lods push (bad) push pushf ret outsb mov adc cmpsl push pusha inc adc test cmpsb scas xchg jp xchg stos scas add divl xchg inc dec pushf sbb dec inc add sti (bad) cmpsb sarb mov movsb aaa idivl out inc mov cwtl outsl sbb xor mov rcrl bound inc and adc dec sarb xor ss cmp dec mov (bad) or sbb mov and adc mov js fmull jecxz mov xchg add dec imul hlt test mov push adc or jle stc mov (bad) jg mov sbb dec call ljmp mov xchg push push cmp lahf inc xchg scas aaa into insl icebp push test orl scas rcrl pop sbb fldcw imul lock sti inc dec out dec fwait mov inc dec inc and xchg jge movsb sbb outsl outsl mov (bad) adc add xchg inc fbld notl dec aam stos mov inc dec popa add aam arpl dec icebp addr16 push ret dec lods aad sbb mov insb dec fmuls lahf xor pushf aad inc mov cmp (bad) dec test outsb out jo or pop hlt dec sti or into or push inc rcrl syscall mov fwait add dec mov ret enter mov mov jge jmp repnz or aaa push fldt jne xchg push cmpsb cmc mov arpl es add pop lods std mov dec lea fidivrl mov adc ret mov daa sbb mov les jg dec insl mov adc clc arpl fldl pop stc in mov out jge nop sbb fildll jns ds or mov add (bad) and call cs loope fidivr ljmp (bad) data16 jno sub pop inc mov mov fs sbb rcll js movsl inc jns xchg mov xchg clc cmpsb call pop jmp adc fcmovnu xchg out mov xchg lods pop fsubr je aas xchg cwtl jecxz test das loop inc mov jp clc pop mov fwait mov cli push inc rclb cmpsl inc dec nop xor rcrb call mov mov adc mov daa sarl sbb add lock orb push sbb adc pop jmp loop jne jg (bad) sbb shrb jnp es cmc sbb push stos icebp ja dec outsb mov cs stc shrl (bad) jo ja mov mov mulb aam pop pop adc cmp mov xlat outsb pop mov test sub js push xchg xchg test int3 push packssdw std outsl mov sbb stc das nop inc sbb repz inc cmp mov push aaa dec sub xor cmp ds loope outsb jno mov divb mov fist xor xor nop outsl movsb je sub jbe icebp mov xor mov scas mov fucomi mov and sbbl mov and out jo test insl cmpsb arpl rcrl xchg add or incl daa and mov pushf adc iret sbb mov mov cld ret js je in (bad) mov arpl ds jne les lea push inc and dec in test pusha sub mov sub fldcw mov mov in jno push mov std in adc inc out addl (bad) fcmovnbe lock pop shlb fistpll iret pusha inc lar scas xor fisttp imul xchg and lgs jmp adc add gs cltd xlat (bad) jmp mov adc sbb cld addr16 jns pop int3 xchg sti fild sbb push in xchg daa xchg cli push sub je push xchg inc add cmp lea in dec push mov push enter clc cmpsb clc stos insb loop push jne mov test jg imul (bad) aaa jne sahf inc hlt xor loope push jl fiaddl jg test mov sbb or dec xor push imul repnz fnstenv push and lock xchg and mov call mov stos mov mov xchg jp jae cmc cbtw decb mov xchg sub icebp subl les adc cmp jmp xchg adc add dec inc cltd les fidivrl xor adcl jb dec xor (bad) pusha pop add adc or xchg sbbl ret push lcall test push fildll or dec inc insb jne iret (bad) fwait lcall sbb movsl loopne sbb movsl jae xor or mov mov int3 daa iret sbb sub cs mov add negl in mov aam (bad) mov bndldx stos out xchg scas add gs mov aad (bad) scas xor jb jnp jmp lret adc cmp fs dec push jns lret jge mov mov adc mov adc test (bad) xor cmp out addl in imul idiv adc sbb scas inc pop fildl jle push cld mov add xor and push mov push jmp xchg jge popf xor loope push pop lods mov mov mov stos sbb cld popf out cli mov pop inc into (bad) cli push cmp adc lods or push idivb nop rcll into and mov mov mov ja insb pop enter loopne xor sbb adc (bad) test mov mov xchg lcall adc clc push push add sbb xor test fmul inc int jp mov addr16 push sub dec sbb repnz cmp xlat xchg scas into pop jge movsl decb (bad) push test push cmp scas dec mov enter push arpl sub movl push out (bad) mov rcrb sbb ljmp pop mov push adc leave jge std pop push add enter cmpsb rcrb out aad jge rorb ds pop mov insb cmp fisttpll push cltd stc mov ss cwtl mov adc push xchg dec insl cmpsb and repz repz dec out ret mov in ljmp sub sbb idivb les jae push lret add int3 insl xchg xor and sub jp add xchg int3 fsubrs cmpb cwtl lret or xchg xchg (bad) std cmpsb js aam push das sub sub and xor scas mov jge push mov punpckhwd sub iret iret movsb sti sti mov ss aaa data16 mov mov neg bound adc sub sbb call outsl ja nop and mov xor mov cltd out add mov inc xchg mov aad mov mov dec dec fidiv add xchg adc ss repz pusha leave loop (bad) ljmp lahf imul xchg popa and addb (bad) or pop mov icebp add cmp pop insl stos pop push jbe mov adc test push xorb dec adc mov mov fistl into ljmp push les out push sub or popa add jp fs xor xchg cli jmp outsl lcall pop gs fld xchg negl cmp push stc test dec xchg cld fiadd pop fidivr out popa insl jmp lods pop push fdivr dec sub adc mov repz (bad) lret xchg stc sbb push aaa cwtl lea jecxz sti and mov sub mov fidivl push jo jbe pop clc in call jecxz cmp clc jae sbb cmp push mov push sbb add iret ss lea push dec sarl add (bad) ss push lds in push push adc aad inc cltd (bad) adc out jle mov fsubl sbb pusha pop fistpl lcall push lret iret mov leave mov punpcklwd (bad) loop add in or add arpl dec jge push push pop and mov mov mov adc mov inc mov ljmp aas mov (bad) jno sbbl fwait push cli lret jmp push out or push dec jge and mov rclb jbe pop mov fsubrs mov sub lcall push dec sbb mov addl rcrb sbb add push cs ss andb sub ljmp insl repnz sub jbe pop (bad) je mov aam (bad) lock imul pop out stos int pop adc xor outsl mov data16 push sbb inc inc xchg dec iret sub sub scas jno dec stos (bad) lods mov nop cmp sub jb sbb pop popa inc dec daa scas and (bad) bound jecxz add in iret adc mov in inc mov mull or mov sti jae mov gs lds add loopne clc stos (bad) push jmp call andl sbb out lods push aam test dec addl mov lods scas xchg mov fisub aam js add ficomp add xlat aam test loope aas std pop lds rcr dec add rorb pop testl mov mov lret mov push and imul lret (bad) call and loopne nop pop arpl jge cmp xchg push xchg pop stos movsl or int pop lds lock adc fstps dec pop xlat mov or jne pop and xchg imul shlb xlat outsb enter xchg lahf call cld mov pop out inc inc adc ret mov mov leave inc mov rclb data16 xor pop mov ja clc sub daa popl imul push jg test mov xlat outsl shll inc cwtl lcall je (bad) mov pop inc push mov push adc sbb fidivrl cvtps2pi push sub enter mov dec dec je sub push sub cmp sub sbb or iret ret inc xor sub pop mov loopne aad clc xor jns negl scas jmp push outsb pop hlt push pop inc jb fdivrp outsl sti int3 jmp jge inc jno adc aam das in in in cmp add dec (bad) cld adc aam cli mov scas stos add cmp int3 (bad) negb (bad) lock jns xor jne fistp bound fadds and cmpsb sbb hlt pushf roll push sahf into jl xchg fstpt fsubr lods cltd sbb adc push rcl in stos jne lods es xor xchg scas mov ss mov xor sbb mov push ss lret leave adc add mov mov sub cmc test cmp xor ss iret inc push jmp push push dec xchg mov pop call iret bound xlat mov insl test inc repnz mov adc icebp cwtl test mov jecxz xor pop inc scas movsl inc adc les (bad) in inc mov adc mov jo pop mov jge out out aas xor jmp pushf mov xchg pop and jns fisubrl mov push movsb outsb add lods push cs rolb xlat add or inc movsl fcmovb xchg jecxz inc mov pop leave daa enter add mov push daa movsb ljmpw mov sahf jle or adc xor pop mov push lret or iret push xchg movsb jmp jp dec bound add rclb scas or xor pop enter sahf inc call mov and cmc in jne ja sub gs and inc mov mov insl dec xchg pop push sub cmp pop cmp gs orl jns mov or fwait (bad) shlb dec and mov imul push fisub pop mov ficoml sub leave fadds inc jl add addl ljmp aaa (bad) or mov push add xor hlt xchg push sbb xchg cli dec push xor mov push std movb gs dec sbb je test mov (bad) jg sub add mov or dec xor iret mov das rorl sub and lods (bad) ljmp pop sub and dec cwtl jp xor (bad) sahf push aad sbb je adc ret sbb popa cwtl insl lret adc mov adc cwtl xchg js adcl sarb mov sub ljmp cmpsb sub dec lods or (bad) (bad) (bad) xchg ret push xchg mov repz add (bad) dec add mov rolb bound repnz mov dec and push (bad) adcl and add out inc and orl fisub test roll inc outsl in mov sarb ret into iret xor fs pop jg fstpt push inc enter dec pop pop inc add andl sbb and mov loop mov (bad) dec incl ud2 sub mov popf mov cli fcompl mov divb inc subl stc sub dec jmp sbb rcll xchg fdivs mov insl xchg cmpsb xchg inc xor insl mov idivl addr16 sub mov int3 in nop xchg ret ja pop mov push or ljmp inc addr16 xorl lret xchg lds xchg xor dec call pop cmp cmp or sub or jb out and add jg mov cli jle push cs jae pop into lods jge pop cmpsb cmp cmp jnp xchg sbb fcmovu mov lret fsubr int3 lods xchg pop dec lcall xorl out xor mov sbb push push test fstpl cmp push jge mov je mov ljmp ffree xchg inc sub into dec in movl pop dec adc xor bound fstps in and int3 dec mov loopne jp ret std into lcall popl loope fsubrs jae cmp outsb xchg movsw mov pop shrb sbb fldl in inc pop sbb lret ss pop idivl mov xchg out lret push (bad) aas xor mov add xchg dec xchg mov lret push lcall cli dec push lcall push icebp ret adc (bad) sbb (bad) mov fwait mov jno stos push pop or aad inc mov int into ljmp cmpsl and dec add into sub sub or cmp test mov mov add cmp xchg cli mull fdivrs imul adc pop out pop xchg sbb mov pop stc out mov aam sbb cmpsb mov push inc std call and xchg es xchg sub mov mov pushf or adc and movsl (bad) xor sarl stc loopne or (bad) ret idivl insb sub das ret push int3 pop mov (bad) xlat dec cmpsb pop imul xchg leave hlt push pop mov lods sub dec inc mov jmp stc jnp jae and xchg pop xchg xor adc xchg pop jg ret sti add outsl dec dec out inc sbbl js test popf cld popa xchg loope push dec rorl jbe dec dec sbb shrl out addl sub add jp xchg test popf mov cmp popa sbb in sarl mov mov cmpsl adc xchg cmc lock aad fdivrs cmp sarl icebp fs popf dec in pusha add sub (bad) xchg mov sub movsb mov inc mov pop inc lods mov cwtl dec out mov pop je xchg (bad) mov sub test es push and or mov xchg inc mov arpl and test jp aaa cmp mov sarb int3 aam sbb into add inc lds (bad) jmp je insb ss pop sub rep js and mov xor or mov loop sub cmp popl mov ficoml test cs xchg movsl xchg mov lret pop pusha (bad) frstor add ljmp jle test cmpsb adc clc mov push je jo loope add ja cmp cltd jge hlt arpl fidivl pop sub imul xor cmc clc pusha dec mov and loopne (bad) insl xchg or insb mov adc mov dec xor outsl aas fistl and movsl out ss lret jb cmc sub sbb sbb dec jg pop jbe mov xchg dec mov pusha cmpsb cwtl stc xchg imul movsl fldl pusha xchg in ss repz sub mov jge cmpl push (bad) aam ljmp push jmp test dec pop das inc fs dec lds mov into out fbld call pop sbb push xor cmpsl sbb cs dec inc sbb (bad) xor rdpmc std mov inc jl insl outsb jae mov cmp mov xchg cli mov or popf or mov dec loopne and push imulb cmp hlt mov outsl ljmp jmp sarb mov cltd js sub shrb push jnp pop aas icebp jl imul shlb jne push or je adc (bad) negb sbb or mov (bad) push inc mov xchg cmp mov idivb rorl push lods fld mov (bad) mov add xor insl jge aad add pop mov jae adc and (bad) repz fs insb stos call rol cwtl and cltd sbb jmp and add ficompl jecxz gs sub stos pop dec xor or lret jno jns xchg ljmp lods push mov xchg cmpsl push aad pop mov mov push jecxz xchg jns cmp dec (bad) xor outsl and push fldl sub or xor mov mov sub pushf mov gs pop arpl inc mov or fidiv ret mov test jno mov add loop inc popf dec xorl lcall aas test fdivr and pop loop mov sahf orl sub adc sbb dec dec xor xor ret add pop dec aaa dec cmp mov cwtl imul lret insb xchg (bad) ljmp cli cmp out repnz in js pop mov dec dec test push or mov push insb rolb ret rorl cld push mov in mov outsb sub out jnp cli cmp test jg hlt push iret fiadd subl jae stos pop fstpl into fsub lock in mov rorl and lods xor dec cs mov movsl mov faddl mov add cmp xor mov repz pushf inc xor push stc fild sbb pop andl lahf in or jp sub repz test jl xor mov repz shll mov fwait mov sarb jno mov cltd es sbb hlt icebp loope push jle lds or (bad) ss add loopne xchg fnsave mov (bad) jne pop popa mov jge sarl mov (bad) mov popa mov ljmp inc add sbb push sub cli mov hlt insb shrl mov inc add std mov ds test popa inc stos mov and lods xchg xor or jnp bound std add add ds dec es aas jecxz mov inc jae gs add xchg test jle test xchg shlb scas jnp stos loope jle adc lret int3 lahf dec repnz xor sub mov daa jecxz and or mov pop jno (bad) stos mov push add mov fdivrs inc fwait sbb fisubl lcall pushw in sub movsl ss aad cld xchg dec cld cld mov call dec lock pop aas dec mov mov jge mov mov scas pop rcrb dec mov push pop mov fdivrs push addl sbb stos pop rorb push pusha stos pushf out push (bad) cmp in repz fcoml pop andl sbb loope sub cmp iret and inc jne inc dec outsb and add jecxz gs adc xor mov movsb loope popf mov mov out inc mov jmp lods test xor (bad) jp jb xor adc ds push in sub xchg test push add add inc pop xchg ljmp mov insl or pop sti dec push daa pusha xchg iret pop lret push cld add push das loop xor sub pop insl push js inc and jns and ss pop xchg adc xor or xor adc icebp and inc fs imul rcrl adc ret and sti int3 leave data16 jo loopne and lret out mov scas lcall (bad) adc cmp loopne out test scas int jne adc jle mov push jle aad mov mov aad cmpsb inc lcall push dec scas or inc add movsb fwait sarl push (bad) xlat sarb jne jne add cmp push mov arpl add xchg fnstenv ret push das pop push data16 pop int3 mov (bad) sub sbb movsb int3 stc fs cmp xchg cwtl std aam into das daa es mov jl jnp add push add repnz or stos sub lret fwait cmc dec rclb push push jecxz push push inc jecxz cmp les in call cli gs dec cmp insb scas lods sarb rcrb jge add mov (bad) out mov cs ja xor dec scas in jle js dec push pop push fucomip vpmaxsw jmp jae repnz xchg rorl fldt dec mov mov cmpsb sub adc xor add insl movl cmp out pop dec lret imul xor xor jne jp (bad) xor cs mov add jns dec imull pop sub ds cwtl jle xor jnp mov dec stos cmp in gs call xchg shrl inc pop xor pop jne jne mov pop or fs xchg mov lahf ja xlat (bad) push sbb push push xchg xor pop scas call test (bad) jo xchg in mov push add push gs and out leave repnz (bad) out int3 sub daa mov pop aas stos pop nop xor or cmp in movsl cmp incb (bad) (bad) dec leave loop sub push mov sub xor xchg adc mov cltd repz jge cmc pop mov xor inc shrl sti pop pop add into stos negb jno push xor push out mov jno pop and mov loop outsl stos (bad) testb (bad) push les push popa cltd sbb cmp mov fisub nop (bad) mov imul in repnz push loope jmp and out add out negl pushw orl (bad) (bad) push test imul adc loopne mov scas idivl repz into mov push rcr outsl into shrb (bad) mov clc xor jns popf add sbb call je test movb fcomps in adc or leave jp add (bad) imul mov lods xchg mov aaa and lret cmp stos push leave pop cltd cmp mov inc adc mov mov inc cmpsl cwtl test lods xor xchg xor xchg out fildll repz jecxz mov mov mov fwait and xchg gs xchg dec scas fcoml scas jne xor fldl2e jbe aaa (bad) lea mov lahf rolb and mov in jle cmp iret jg data16 (bad) lahf popa ja mov ja dec fistpl jnp push cmp aad mov mov add and in or cs add cmp dec add sbb xchg dec sarb int3 lret sbb out les mov jae xchg or ficomp test pusha mov jg clc push clc add xchg cwtl mov xor es rcr insb sub xchg pop test popf jnp xchg jle in push jle popf outsb cmp cs (bad) mov xchg push aam pop (bad) imull xor mov mov push dec test cli lahf sti (bad) fldcw insl dec int3 rorl stc fs jbe sbb jns adc out jmp daa out push push and adc loopne pop nop test pop aas aad ja cmp lods lcall pop lods add fwait xchg cltd xchg fs push std test inc popf inc mov les push scas lret push lret shrl insl push loopne out and cld mov mov xchg fnstenv (bad) push or aaa dec pop push xchg sub loop xchg ljmp outsl xchg dec jge xlat push jmp lcall jmp sub or inc xchg push popa mov pop out out pop in jecxz subl push sub ror cmc (bad) (bad) inc outsl sarb pushf js jo loop or lret outsb jp mov sub cld out push mov das jecxz (bad) and push ds insb add lods sub sti mov scas sbb popa shll push mov jno sub mov cmc in and pop mov pop cmp mov mov mov mov loope in xchg inc mov jecxz xchg cmpsb test push je shll cmp jo inc out jecxz out inc aaa loopne xchg jae sbb xor inc (bad) es lds fldl mov xchg pop sti jae mov popa loope cmc (bad) popf shlb lret xchg outsl test leave pop es ds popf add inc jle loop pusha jmp mov push int test or mov push push test lcallw lcall bound jo mov push pop cmp lods adc idivb sub adc lcall sub popf push repz or mov in jle push cmpb mov in xchg adc jg xor cmc xor mov fcoml sub push sbb notl (bad) in aaa xor inc jnp push push dec out popf pop xor out push (bad) sahf rcrl ljmp xchg popl roll aaa outsb xor das gs add push cmc jg mov push xor jne (bad) sbb and and add mov push aas incl mov popf mov pushw mov out sarb xlat stos mov arpl inc ret jle fsubrs mov lea movsl stc and sbb and pusha jg and xchg xor jo movsb mov stos xchg mov push jl,pt scas inc push mov test mov mov lods xchg stos repnz shlb scas adc idivl mov popl roll xchg aaa dec lea add test push inc jb sub mov cwtl push dec cld out and xchg xlat fisub mov sub mul stc cltd mov cmc fadd loope jp push in icebp pop popa bound lret cmpsl repz out dec pop pop adc inc cmp and in in and mov int3 jnp scas (bad) pop fcoml pop and dec dec xor mov xor pop cmpsb jl dec cmpsb cld out sbb loope mov dec or mov push pop daa ret outsb push sub add push nop mov fcompl fxch push dec int pop popf dec dec jmp idivb aas sarl fnstenv fsubr mov dec daa (bad) or scas outsl std aaa lods jbe or or enter or mov test and mov (bad) inc push push mov leave movsb stos scas (bad) pusha jge fwait push dec add daa pop jbe ds lock adc jb xchg push loopne rcrb push add push add or mov insb sub add push notb mov pop pop int3 test clc pop cmp js xchg (bad) inc neg loop lds xchg jo je pop mov xchg test add pop pushf cld inc or (bad) sub and cmp jecxz cmc (bad) jp aaa add sbb add ret int3 (bad) pop addr16 rcll and lcall adc movsb aad inc int movsb mov sub inc or adc xor icebp add mov stc clc repz or sbb cwtl pushl mov mov inc loop mov out lret (bad) fwait int stos call lock xchg mov cmp push jp stos inc adc out (bad) icebp test push loopne push ss jns leave cmpsb and (bad) cmp popa push adc js sbb fsubl fmull (bad) shrb push sbb repnz push sahf jp adc cmp xchg dec lret pop push fs add push lcall jns push outsb dec xor jbe out js sti daa xchg imul test sub jns aaa pop jp arpl sub sbb lock push mov xor orl or mov xor xlat sub inc cwtl xor cld ret jnp mov xor sub outsl loopne jbe adc jb jae jmp andl insb loope jbe popf ja pusha repnz add mov cmp rolb sbb cmpsb nop jns jb dec dec dec adc outsl mov push jl pop aam cmpsl jno int3 repz xchg inc ret (bad) xsave adc gs or inc mov pop call les fisubr push and fildl xor mov popf cmp mov xchg mov push add xchg test out mov outsl fdivl pushf adc je sahf and ret push adc push xchg push fs push and (bad) add jge cmpsl xchg das xor push mov and loop in dec dec data16 pop imulb inc mov popf dec lea jbe mov cmp inc (bad) xchg mov add pushw in les push cmp lock sahf cwtl jmp dec push push jl lock push push jle mov repz in cmp and and lret fcomi outsl add mov pusha or or jmp pop stos popf ljmp mov (bad) lock mov sbb jbe dec mov cmp mov repnz xchg lea sbb cmc pusha aas pop pusha enter ja (bad) dec xor cld repnz jb add mov or mov push cmp out je jnp loop enter jp ror push and sub call movsl (bad) mov imul adc jnp jmp hlt pop sbb cmpsl adc js xor mov mov xchg stos push lret in scas jge int3 jl test adc stos cmp xor in lock mov xchg dec lea roll jle xchg push jnp mov xor sar xlat mov je out mov ss mov jmp (bad) loope jg (bad) jo jne xchg push dec ret jge jnp das adc dec mov dec fwait in out sbb rcrb (bad) push inc popf popf stos sahf pop and rep cmp adc fcomp mov (bad) mov loope out mov add jecxz rolb gs and subl dec mov jge ds sbb ja sub adc orb mov jmp loop inc sti leave aad push mov pop xor or pop leave ja xlat movups push dec ljmp cmpb loopne xor and xor dec test adc or test xchg dec mov mov in add insb pop dec shll fwait icebp sub cmp push mov daa (bad) out sub aam mov add mov imul fildl jg mov idivb xchg je lock pushf cmp leave xor add aas jns or dec inc jbe and mov das repz cwtl mov jge mov xchg inc push movsl xor pop inc lcall jmp inc loop lods mov push jp es lods cmc push sub dec repz sbb aad das jnp js push push insb add xor inc aam aas out repnz mov mov lret jmp jge pop mov sahf inc mov cmpsb (bad) call dec xchg ret push sbb sahf mov lret test push sahf popa fcomps jbe repnz pushf xchg dec xor xchg stos fcmovb push jge lea lods stc lret pop jns test mov pop scas std fidivr jmp adc fsts or inc rcl lret add popa dec outsb cmp inc push test gs fbstp sub test xorl push jns lret or push outsl je mov js repnz int3 popa mov push jno,pn push xchg or pop fwait scas fldt out out or sahf mov adc push pushf and dec fwait lods lock xchg mov cmp pop lods xor xlat fldl lods dec (bad) gs imul negl pop mov add (bad) ljmp push inc out in xlat jp (bad) imull xor insb inc imul bound add dec js movsl aam fcomip cmpsb sub cmp push popf scas ja xchg jbe popa pusha push xchg dec cmpb (bad) pop pop sarb fstl sbb mov cltd lcall inc sahf outsb adc mov in popa cmpsl inc stos mov inc adc clc sahf sarb mov imul or dec movsl dec cmc or mov xchg mov in push push pop push test inc lret (bad) jb cmp xor arpl inc fsubrl dec ret lahf aam in lods jmp dec mov ret mov mov out sbb (bad) cmp fcmovb sub mov stc or cmp and lea mov aad xchg dec movb aad mov sub cmp add fs jbe xor pop fs add pop js ljmp inc iret mov pop cmp jecxz sub mov dec aas jg xor (bad) jo das jae lock push (bad) push cmpsl xor push mov cld add aaa out (bad) scas sub loopne clc aad sub xor int dec aam repnz jbe fwait cmc dec imulb hlt pop nop sbb inc leave popa mov out cmp ds lret jecxz rorb fcmovu sti inc sbb xchg lods jbe icebp sbb bound ret enter gs mov pop js std test inc sub mov dec lock mov mov mov inc cmp test sbb stc sbb fisubl adc xchg das leave push mov xor loope sbb add and int3 popf mov add ss dec mov xor sub jmp jae push pop mov mov out (bad) (bad) hlt push (bad) rol ja push or push mov xor gs dec pop into daa lcall xchg in dec insl gs lret dec movsl push xchg and into in pop push in lahf lods test mov cmp mov in loopne arpl or adc fwait movsb fs dec fwait pop jbe and cmc outsb (bad) or mov lret jne dec lcall mov mov mov adc jmp arpl mov in cmp jp (bad) cld jmp push jo jg push in popf add imul xchg mov add ljmpw gs std jns in es sti sub test out aaa shlb leave fdiv xor rclb xchg fsub daa pop vsubsd and pusha jge loopne insb insl push mov icebp cltd shr and mov in mov push add xor sahf xor push and icebp loopne,pt shl mov dec pop jnp ret inc sahf adc add dec repnz mov insb outsl movsl dec (bad) aad sbb repnz jns jns mov jp xchg pop cmpsb aas mov and and xlat dec bound xor pop mov xor hlt stc mov cs xor mov jne (bad) fs hlt mov (bad) xor cmp ret mov add fisub xchg data16 xchg sub mov imul jne pop adc fsub (bad) mov mov cmpsl je mov ret or aam loopne xor sbb sarl in das aad sbb fsubrl cli sub add cli sub lcall cwtl fild (bad) outsl addr16 popf pop leave mov jmp lret test or add int sbb xor aas arpl pcmpgtd cmp sub test cmp repz outsb scas test dec cli or push lcall (bad) mov es je sti gs hlt dec add xor fsubr push enter data16 push jge,pn xchg roll cmp xchg stos cltd dec inc mov cs mov loopne fcom loope pop lret (bad) gs das mov inc test push or sub fcmovnu cld lods or mov add adc out adc adc incl std into outsb sub jl test movsb ficoml cmp lret fnstsw pop aad and fsubp lods cltd push add sbb mov mov sti sbb inc or inc cwtl cmp sbb push addr16 inc ljmp test inc mov sahf lds mov sub fnstcw jb push imul or mov stos sub mov mov test inc cltd xor cs mov xchg je (bad) lea cli push dec stc cmp je lock fldenv push mov sti out mov out mov (bad) popa pop mov in sub cmp sub out movsb lret xchg xchg jo ss sub jb arpl xor push and in mov fistp lods jae dec or cmc movsb (bad) movsl std adc mov std rcrl xchg inc xor push dec movsb pop lods jp push mov sub jo and adc (bad) push ficomp sarl sarb push inc inc jb sub popf push xchg bnd int3 sar jl cltd pop stc xchg push mov xor or or inc jmp je mov add mov mov pushf clc inc mov inc mov push mov push stos xchg cmp push add insl push stc aad adc (bad) fwait pusha xor sub mov pop xor (bad) pushf lret push jnp push in js fs xlat push adc daa push inc or jno aaa fbstp cmp sbb testl and xlat ds rclb xchg js sbb adc add jp fadd popf dec ja int3 or inc inc (bad) mov call jbe into mov outsl push pop and or fwait or jno out (bad) fldt inc pushf dec jb fwait push mov sbb ret push inc add sbb and and and mov imull loop lods cmp js call dec jecxz fwait pusha xor lock add ficomp push inc dec add add imul repnz mov aam and mov inc stos loop jmp scas pop sarb (bad) decb or add push in xor lret jl xchg leave stc pop push mov idivb or js (bad) (bad) mov scas sub cmpsl push adc (bad) repz fstl dec stos lods mov or lea stos insb jle ja pop xlat sbb mov in lret test scas out ss mov jae xchg call cmc cli mov pop rorb call jae pusha loopne push inc jbe or mov sbb push pop ja inc idivl or cltd sub pushf imul (bad) fsubrs mov mov inc cld cmp mov les or or lock mov rcll loopne push (bad) push mov add or and pop (bad) mov or in pop jge push dec fdivl jmp and imul pop enter int push movsb sbb mov repz xchg mov xor addr16 push negb addl sbb sbb int mov call sub jmp and mov xchg pop adc fbstp pop test inc mov or dec jge addr16 stc dec cmp sti mov ret sti pop cltd push nop pop jg add mov and push enter or inc inc inc movsl les push sbb pop adc daa insl out arpl mov ss pop lret popf int cli xchg jae push lods (bad) cli dec icebp fmulp pop pop in pop gs fscale mov lea adc aas pop xor out sbb (bad) aad je arpl (bad) loopne movsb scas jbe sbb or mov adc ret inc push fmul clc xor cmp push incl mull jbe es cmp pusha movw pushf lea jbe clc sub rcr lea not mov mov rcl and inc mov bsf rcl add shr shr not mov clc add jmp jmp adc call dec mov rol stc mov bsf mov shl xor test bsr mov bt pusha sub ror sub jmp lea je cmp pusha sub stc cmp jmp lea call xor shrl add mov sub jb mov add call sub jne ret test bt push btc mov lahf sub aam cwtl push or btc push bswap aas add lahf push bts push rol neg movzbw lea mov pusha test call stc jmp call adc pop and inc push std mov inc and push add pop sub sarl jmp les inc int3 data16 mov xchg add nop js cli das mov and pop rcrb jmp sti icebp iret push push add addr16 sub mov push addr16 fstpl or pop out pop (bad) int3 test fnstsw inc cmpsl imul fdivrl cmpsb cmpsl jnp sub orb jl int mov mov push mov fcmovu mov out cmp enter test xchg xor repz mov fdivs xchg xchg fistpll sahf and ss (bad) jl jbe icebp rcrl loop lea mov mov pushf pusha movw pushf mov movb push lea jmp pop mov inc pop xor clc in add stc mov adc xor mov test repz pushf mov push mov loope popa test mov push lods in mov loope jae int3 cwtl fldenv loop (bad) (bad) pop mov and sub ds push mov dec mov popa inc movsb push cltd xchg ficomp dec rorb dec mov add sub xchg inc int movd mov pop pop mov cwtl fbstp mov dec lret loope and int movsb xor xor add cli add rolb add sub shl lea setb pushf bt mov bsf inc xchg test bsr xchg bsf mov call call jb pushf cmpb pushf push jmp jmp push push pusha lea je pusha pushf pushf push lea jmp pusha call movw push lea jae mov bswap setne lea xchg jmp jns push push cmp mov xchg or xchg or lods mov xchg mov inc lods mov push jns jne sub mov popf push and push push lret clc in push mov aad enter out and pop aam sarl dec cltd clc sbb mov dec mov pusha dec xor cld mov fwait ss (bad) inc pop lds push inc aam subl aas sub icebp lock (bad) cs out into call sbb push adc mov sub pop call xor sbb mov add in pop cli scas lea jo push xor push xchg addr16 lahf imul aas or mov and dec scas jge mov push pop mov xlat insl imul int3 into fimull fnstsw push xchg andb inc aas sbb ljmp in or movsl mov mov adc adc cmp notl shrl scas mov sarl movsl jne test stos adc das push cmpsl into mov pop jo cwtl add push or or mov jno (bad) mov jmp and sbb xchg outsl cmp adc movsb mov mov add xchg xchg pop daa clc xchg and xchg fld dec push scas add imul sub adc add and dec add push sbb mov (bad) lock insl sahf lret mov cld mov leave xor out lret leave addl aad test lds stc cmp mov (bad) dec imul xor inc (bad) lock push push sub xchg hlt sub adc pop psllq cli jo adc xor popa mov mov mov inc insl xchg xchg xlat data16 inc hlt lds push pop pushf (bad) mov cmpsl leave mov (bad) xchg add dec out mov mov in insb aad arpl pop stos out mov (bad) pushf out lods cmpsb adc lea or cmp dec add (bad) bound mov mov push mov pop leave nop sbb mov cmp xor fidiv cld adc cmp sti sbb sbb std dec outsl (bad) div xchg mov mov add shrb ja sub dec xor mov cli fbld int xchg mov xchg sub stos jle mov push xchg adc decb xor lcall mov dec stc mov repz cwtl add dec xor mov sub dec aad pmaddwd cld test push or mov mov aas adc fsts dec aad aaa in mov dec dec inc (bad) sbb sub cmp imul (bad) mov mov mov stc stos dec pop jbe repz insl dec mov push lret pop mov xor lret jbe pop pop stos jl cmp ror pop push jge pop cmc pop push adc xchg jb cmp adc pop imul inc push jb call rcrl addr16 cmp repz aad fwait in stos enter jno add cltd jmp jo fldenv (bad) in push or divb sub loope cmp in sbb aad imul pop jmp (bad) mov mov sub jo rolb leave sub movsl sbb insb out imul mov in fisubr call sahf lds es xchg cwtl pusha mov roll add push mov or pushl jno cmp jg xchg scas sbb je ret dec push jmp inc cmp xor dec cmpsb xchg ficompl push pushf ret cmp jge test mov pop fsubs cli push dec cltd call jno xor mov adc cmpsb adc outsb sbb outsb mov stc push jne inc leave jae inc pop push inc mov push adc sbbb pop cmp xor (bad) stc mov ja sub push xchg (bad) fistpl stos call cmp cmpsb repnz imul dec cmpsl (bad) push fdivrl dec cmpb loop loop addr16 jl cmp mov aaa dec mov aaa pop ss pop aad je pop mov sbb cs (bad) arpl adc sub aad test ret sbb inc fistpl lcall adc add pop repz scas inc iret sti jg add out rcr add adc jg arpl sbb jmp inc aad (bad) jb mov add test push lcall push pop inc inc dec adc (bad) mov dec cld pop mov pop dec fisubrl lods sub movsl cwtl xchg fdivl loopne adc nop sub (bad) ss ljmp jae or lret push sbb (bad) push bound pusha mov stos aaa andl test out xor cmp rcrl cwtl lods jecxz idiv dec fcmovnb cmp inc inc cltd push xor mov sub jg rclb mov movsl pop aas inc lret xchg jmp pop (bad) arpl fwait inc lret loope scas gs lcall aam inc adcl add push pmulhuw sbb lret pop jge pop int3 cs mov cmp fcmovbe inc xchg pop and jecxz pop jecxz and jmp pop sbb dec stc and fnop xor cli orl mov aaa icebp test mov pop (bad) cmp jmp iret inc inc pusha dec (bad) push insl mov mov sub mov aaa cmp bound jg inc daa pop pop stc jecxz (bad) xor cmpsl xor aam jno dec xor js and clc and call mov sbb call or aaa notl xor decb (bad) (bad) sub sbb int lods cmp lcall fwait rolb sbb jns and lods jne xchg out cld fcompl dec inc pop adc pop push xchg sbb out inc jg (bad) test stc daa out mov sbb add movsb push mov rcrl lea sti inc movsl inc nop cmp inc mov movsb pop loope aas fsubrl adc imul mov sbb add sbb push jg imul mov (bad) and aaa std fstps mov in xor push mov xlat mov push cmp test (bad) pop lods popa andl inc cli das xor mov rolb scas leave dec rcrb jecxz inc jnp add inc scas (bad) std push mov aas enter inc cwtl cmp rcrl inc fldt fucomp or xor subl cwtl sahf sbb xor pop sub hlt push jo jmp shlb cmp insb xlat frstor sub fcompl or ret or cs adc ja jecxz jae push repnz mov sub add or in lea sbb mov jbe rcrb cmpsl or pop mov pop inc cmc mov mov lock and jge and popf push sub fildl xor dec xchg imul (bad) outsl ljmp cmp mov push daa sub lds stc leave daa fneni(8087 ja js jmp xor sahf jmp jnp sub jge mov cmp mov jge das fistpll adc inc mov movsl jnp out mov adc or or idivb mov pusha out leave (bad) repnz and and rcrb cs adc jno rorl insl add mov or pop scas mov mov loop mov in test clc cmc sahf cmp sar mov incl je test cmp cltd addr16 jo inc sub and jl dec jg cli mov cmp sub cld inc add sti pop rcrl scas into dec (bad) sub push out sub adc or mov push je in cmp or icebp push xchg cmp cmp cmc stos xchg add in leave add mov enter out push aad add lret adc cli pop lods (bad) or lret std add scas jb repnz sub add pop sahf fdivrs in into adc shl inc and and stos jge hlt aaa dec xchg ret ja jo mov and int3 pushf pusha push inc call js (bad) xor inc push mov jns ja addb add cli mov cli cmp fcoms and stos sbbb bnd adc jge dec push or popf movsl jne ffree (bad) fldcw add pop pop pop sbb stos lret repz popf popf arpl jg aad add add xlat (bad) cmpsl pop ds lock sbb push jl and sub adc les jnp bound icebp ljmp lahf add cmp std cmp xor mov loop push and test inc jl push sbb dec js enter popl push pop stc ret push dec pop xorb pusha pop and repnz inc sar (bad) popa lcall jp mov sbb add imul jnp movlps test cmc inc xchg mov xchg xor mov movsl popa mov pop cs shll push (bad) jmp mov test sbbl bound out jmp cs (bad) push es mov dec pop mov int3 lea cwtl (bad) loope xchg jl movsl (bad) js fcomi mov xchg popa inc fimull add pop push cmpsl int3 jl xchg popf (bad) jmp push cli inc mov jb sub mov pop daa dec sbb ss push xchg jmp stos stos aas xlat cld add or cld arpl js pop sub cmc push mov out jne jns in mov pop mov xchg (bad) fsubp js,pt xor fldcw jecxz mov jne or inc outsl ss or push lea cmp popa mov or arpl or pop popa push test out loope les bound and push inc (bad) mov xchg ja mov pop mov mov aaa leave call mov dec fwait xchg cld or sbbl jae jne add repz sub rorb sub das jnp sbb fsubp xor shrl ffree jns popf sahf cmp jns,pn jle push repnz jbe sub (bad) int3 fstps bound pop dec daa sbb dec stc sub jne leave clc in shrl push jo scas pop dec adc pop adc imul push jmp cmp dec xchg lret jecxz (bad) pop into pusha sbb or jbe,pn push clc out (bad) sti imul xchg imul cmp mov xchg adc sbb mov xchg aad hlt add mov jne mov out test repnz sbb pop jns push push add pop inc mov sahf sbb dec jo stos scas movsl scas insb push hlt popf fwait pop out dec in inc mov rcrb addr16 mov push lea sbb out stos xor loope sub fs iret mov neg fmull pop imul das and ljmp iret xchg mov clc in cmp loopne in into outsb cmp sbb push cmp cmpb lods jns sub test xchg pop sarb sbb (bad) jo xchg mov mov call xor sub sti inc dec pop jb inc cs cmpsl jle gs or push adc cmc xchg adc nop xchg lods inc jge in cltd sub add ret leave sub cli dec lock sub shr pop ret dec sbb int3 arpl test fild sub add pop dec out das sub jecxz or inc fidivl sub inc sbb push pushf jl pop int3 or lret mov jnp add dec xchg mov lcall lret mov xchg dec dec mov pop push push in mov cmpsl cltd dec inc cvtps2pd adc fcoms dec cs test cmp dec push mov xchg insb mov fadds mov sbb fcomps (bad) (bad) pusha or out push inc dec es js jb mov cld in fmulp arpl cwtl xor (bad) add dec and popa mov adcl xchg jb sbb test (bad) and and add insb xchg dec sbb jle push popf les lods xchg aad inc pop test xor mov inc xor xor ljmp ds ret dec jle (bad) lods adc push dec mov data16 popf (bad) push subb dec outsb or in push sub outsl push test xor jb addr16 dec cltd insl xor sbb mov in xchg pop push test call repz addr16 pop mov inc adc push sbb or lods cli out inc fidivr adc sbb movsl lods and aas mov jae cmp nop jecxz outsb cltd adc xlat gs fisubrl xlat fs outsb inc dec pusha (bad) notb scas mov mov xor fnstenv std jecxz xchg (bad) in mov pushf ret test sbb mov pusha outsb jge xchg (bad) mul push inc out roll jbe cltd ds les inc or jne adc jmp add dec icebp sbb aaa movsl sub jb mov jno add pushl inc mov ljmp arpl xor sub pusha stos push cmp jb mov mov pop mov lcall jmp lods ret push jmp cwtl add test movsb arpl rcrb cmp inc je loopne add hlt (bad) mov jb leave pop push insl fstpl push test js (bad) push sub aad cmp and push adc negb pop testb das imul pop movsl je sub xor nop jle incb das pop enter loopne stc inc push inc fisubrl (bad) fldt shl clc rcl adc stos xchg or sbb adcl jg test (bad) jnp adc mov jae mov pop jl push dec mov push pop mov sbb scas jecxz inc repz cmp decl push les pop xor pop loopne pop icebp ffree out fstps mov pop add hlt sub mov xchg mov test insl ss mov in pop sahf (bad) and push sbb iret mov mov cmp inc jg out cld sub lahf roll test add test cmp cld mov mov xchg sti jbe and rcll mov pop inc jo ds or jo mov dec cmp aaa sbb xchg into in popl ror push cwtl cmp int3 mov loope sbbl daa out and dec sbb mov pop cld (bad) cmc leave push xchg xchg scas movsl int push in aam push (bad) push fnstcw mov outsb add lods das pop out pop xchg cmp cwtl out push cmc adc and dec icebp mov stos push or adc and mov mov sub sbb or fbld int jne sub enter cs jge mov dec sbb lcall pop imul or popa dec lods xchg push ljmp mov test out mov cmpsb inc mov leave scas out imul mov cmp clc mov and lcall pop fmull pop sub cli inc mov add (bad) mov js pop sti pop sbb sbb jmp add xchg (bad) pop fild lea in in out mov push outsl pop hlt pop roll pop in pop pop add cli and push lock aaa cmp test stos scas lds out sbb adc gs jp mov mov sbb insb lahf xor (bad) daa add (bad) loopne (bad) push mov mov mov jmp nop lcall es ret or xor or mov aas idivl int pushl lret mov mov imul into adc andl mov repz jae push cld cmp in dec (bad) jb dec mov rorl inc daa or lret mov in mov mov lods add mov pushf hlt rcr mov cmp or lahf aas rolb xor cwtl dec outsb incl adc mov or xlat iret or clc ds outsb bnd iret push and push mov icebp incb push jo cmp out fcoms push outsb test cmp and sbb lret xchg lea testb mov lahf incl sub lret mov xor adc sub jl std jae fisubr fs xchg jmp lret xlat imul inc or jns cwtl loope adc loopne push out (bad) incb adc scas xlat fdivl xlat sbb add lahf pop xchg rorl push jae int3 push ljmp cmpl ljmp or rolb stc (bad) xor sub sub mov mov mov in sarl cli stos es xor rorl mov dec push (bad) dec cmpsb icebp scas loopne sub andl lcall jo lods pop push jmp ds loop add mov push dec sub test xor loopne push mov pop test push mov mov mov or inc add hlt negl adc mov scas jmp (bad) push mov push (bad) and xor test sti fbld int3 movsb scas jb mov mov sbb push cli pop test pop outsb cmp imul xor (bad) movsl clc addb insl hlt xor cld sub inc mov addl xchg fwait test insl jno push jo add stos arpl mov in mov mov sbb iret inc adc out lods mov clc pop ret sbb inc sbb fisttpl push jmp mov ss fcom mov shrl cmp scas cld std lods inc pushf jno pop pop xchg mov pushf sub pshufw add push fist inc mov stos cmp xchg jmp jae outsb fst xchg loopne pop mov sub and std jle and dec imul dec shr and sbb mov std rclb int3 sbb mov imul mov aad mov push jo adc cmpsl imul insb loop jno cmp dec lods inc std xchg int movsl jne lahf xlat notb popa add adc lea jbe mov ljmp adc lods jle lret fsubr xor jne (bad) lret adc sub inc js jg sarb clc arpl cmp into adc rcrb add lret incb xor push lods inc add lods js adc xorl clc adc adc mov lahf jno fnclex outsl roll (bad) cmp jne jle xor jmp cmp lds sbbl xchg pop loop in mov cmpsl inc pop inc mulb lcall (bad) sub sbbb popa dec pop (bad) testb push test aas in xlat idivl jo pushf mov mov rcr pusha icebp ret aam cmpl cltd out jnp inc lret sub xor mov push jae out mov pop jo pusha cmp push push and mov mov inc add and xchg lods adc jbe cmp pop xchg inc (bad) vpacksswb repz and pop sbb mov loop jle inc fstl and ret pop or out test sbb sub mov sti and pop testb inc addl sbb into mov (bad) jo dec cmpsb test fstl dec mov mov (bad) xor jnp or insb call push test mov sbb in xchg (bad) fwait imul gs and mov jp xchg and and jno sub lods mov push mov mov test daa rolb mov mov pop aaa (bad) int pop sbb fisubl push imul push ret adcl and movsb iret jae adc dec dec and outsb cmpsb out sar add mov mov fiadd push push gs adc je push xchg or out push xchg ret xor ljmp into cmpsl jnp jo fwait leave mov hlt cwtl lret pop pop add push add mov or mov sbb adc jge push dec cltd fisub iret out cmc xor push sahf mov jge pop dec sub mov scas mov jmp pop mov push dec lods cmc cli inc inc sbb xlat xorl sub hlt and outsb push repz push fcmovnbe pusha enter or inc test push xchg leave push jecxz jne xchg arpl cmpsl dec push lret jne and cmp insl or cmpsl sbb mov ss repz out lahf fisubr fisttp aad lds daa inc adc (bad) int3 popf and (bad) int roll fisubr scas mov (bad) jns das inc scas pop jge jmp pushf repnz test mov aaa jb gs add stos cmc or dec hlt mov jbe jl push mov lret push add push fwait mov dec sbb das xor xor das stos fwait mov mov or outsl test add lsl mov add aas inc or out inc ljmp call dec xchg xor add add mov push fmuls dec dec fnop (bad) in test lcall pop testb mov lea dec cs in push not push push aam fcomps push out aaa lcall push fbld sub cmp loope stos imul dec in mov inc jb push (bad) jbe cli mov rcr jle int3 (bad) lahf or lock mov xlat (bad) addr16 jbe cld mov into pop pop push pushf sub jns test (bad) cmc fwait das cmpl mov cmp insb sar popa mov xor push cmp aam or in xchg mov adc xchg xor sbb popa and movsb jnp ljmp adc or mov in loop xchg mov push dec cmpsl clc fistl mov cli stos cmc add subb sub sbb das add xor inc fistl icebp mov lret adc scas pop popa add cmp dec lret jmp data16 in or adc xchg xchg stc xor lcall inc and pusha mov jg sub sub call dec sbb mov xchg nop out sbb out dec inc xor shrl push xor adc pop mov sub test sbb lock rclb fidivrl movsl gs cmp cmpsl daa add mov out repnz ljmp movsl outsl stos push je imul xorb fxch insl or push aad data16 nop repz pop add cmp pop fldt nop cmp pop and lcall mov mov lea sbb out xlat lods (bad) jne ljmp sbbl (bad) jecxz mov cltd fcoml enter adc cmp mov movsl cld enter sub (bad) fsub push cmp cmpsb (bad) mov lods adc dec xor lahf arpl push repz pop sahf dec (bad) push mov fistpll (bad) push adc stc dec int idivb std cmpsl aas std insb cmp sub leave mov mov xchg scas std in xor inc pop pop shrl out insl outsb dec mov mov (bad) rcrl or cmp (bad) jecxz lret addr16 insb ss xchg mov loop mov xchg push dec dec nop insl subb jle add adc sbb or repz push sbb clc das or cmpsl push cltd sub dec cwtl (bad) push mov dec dec push add sub lods jae cld cmp loop push xchg aad hlt mov movsb and daa stos enter cmc jns pop jo adc rolb insb (bad) push (bad) insl inc ss aam or adc sub insl sbb mov dec jae cmp cmp (bad) cli add push fsts call or cld cmp mov clc lods je sub out ss dec std rcll push adc sar push inc movsb lods cmpsb jle sbb int xchg jmp bound ret and rcll xor mov pop scas pop aaa fistp mov sub jp sbb insb mov xchg mov pop stos jecxz dec mov imul push cmp lods in add pushf push and (bad) cmc lods mov mov js icebp ret jge jle popa and pop mov jecxz inc mov (bad) ror (bad) and in sahf xor mov push mov pop test mov in jp xor mov xchg outsl or or mov rolb and inc push imul out icebp jne (bad) sbb sahf scas mov shlb shrl sti inc sbb (bad) loopne mov inc dec inc adc sub int mov mov stos pop sbb or iret js pop int and iretw xchg jge xchg sbb (bad) popa loope jg ja imulb cli pop xchg leave adc je xor stc in mov ljmp dec pop fmuls mov jo je shrl int3 sbb push push push lret sbb xchg lcall insl or xor stos push iret cmp das movsb sbb jbe rolb or lret jmp (bad) or or and sti fs adc adcb int nop mov out and nop adc push ficoml imul test inc push out xchg fsub sbb outsb std jb cmpsb insb jb (bad) xrelease jae fbstp and mov push outsb pop ja push or test out and sbb or js subl mov aas xlat fimul push aaa jle dec daa cmp add xchg imul add orl xor cmpsl or jo in imul scas add aas repnz push bnd push daa scas fs stos loopne sub and aaa xchg cmp sbb or int3 in pop push cld mov imul aas mov pop ficom outsl mov fstp or ljmp pop lods daa icebp inc xchg jge add and call fimul in and mov or iret cmp je xor movsl push lret fistpll je mov fstps pop out imul popf jmp movsb push call pop into adc jne divb or or daa xchg mov xor push fwait (bad) mov aad aam out push aad fwait pop aad enter mov sub imul mov outsb sbbb push push push add movsb jg call push idivl mov fisubl (bad) mov mov adc repz ja inc jmp xor lcall ss jp sti push (bad) mov inc (bad) movsb leave cmp bound push jmp xlat dec jp (bad) adc add inc lock ret loope xor xlat mov (bad) loopne jg sub adc scas push mov push add mov mov sti inc adc loop xor fistpll shl dec (bad) adc lcall gs (bad) and dec xchg adc aad push inc in lods insb mov sbb hlt test add mov or clc call (bad) mov pop in and sbb push inc cmp mov and sbb cmp mov lds adc inc lock les xchg jns das jg pop xchg dec dec sbb aas aas mov or inc xchg data16 daa add lods mov imul and out shlb mov mov mov or mov mov pop sbbl loope xlat add in leave or ret push aas int cmpsb (bad) and ja fldl lahf testb jns lcall js stos xlat mov adcl out mov out int (bad) mov out cmp pop mov add ja fdivrl ss xlat gs and cmp mov test xchg in cld pop loope xor movsb frstor testl dec mov lods adc jp pop inc cmp or sub or mov imul in daa pop jl (bad) iret add xlat into push cli aas cld int push aam mov and mov pop or outsb gs test in in pop aaa imul sbb leave scas test in pop aas cmc and wbinvd push out repnz adc into inc mov mov lods adc dec mov mov mov xor loop shr and test ret cmp outsl or (bad) sbb add xor add mov pop or push sarl and mov mov idivb ret cmpsb mov mov shrb push push cmpsl (bad) jl lods and jl dec adc mov pusha pushf loop pusha mov xor jge lods imul aam cmpsl (bad) and and nop dec or sarl push push lret pop (bad) mov or inc mov add or out stos repnz js movsb add sbb test (bad) jge and and es test pop pop xor stos jne dec pop pusha (bad) loopne push sbb rclb push stos fsubrl scas mov enter fidivr push adc out movsb test add jecxz cmpsl push inc data16 sub inc jl test mov ljmp repnz ljmp xor into cs hlt sbb mov dec mov xorl in add loope pop push (bad) mov adc xchg fbstp out std out cmp enter jle movsb pop ds inc out sbb movl mov inc data16 jo push push test cs lcall push sbb cmpsl add mov inc mov mov loope cli xorl sub dec in push out jnp cmp lods jae push out dec fwait dec mov leave push xchg popf pop rol xchg pop or sbb and test imul mov data16 jno mull sbb xor sbb xchg xchg aad mov mov or and sbb push lds add sub (bad) arpl xchg (bad) stos fild loope stc add mov dec pop outsl mov sub mov out dec roll lahf aas lcall cmpl repz mov push push xchg and pop push or dec daa mov (bad) hlt cmp sbb dec sbb sub fwait mov and ret lods xchg and mov mov xor fwait mov inc dec cmp xor lret mov sbb jns mov frstor bound in jb mov hlt mov add das add dec inc fwait pop cmc sbb stc inc sbb and cmp inc adc mov (bad) sbb icebp je test popa js dec nop mov imul maxps in jmp aad push dec mov push mov fidivrl jmp sbb popf fwait jp push int3 mov mov jp mov cli or (bad) jbe mov or or xchg inc jno pop sbb popa arpl bound pop fcomps addr16 xor cmp cmp rclw mov cli add divl roll testb enter sub bound mov loop fldcw push cltd sub push cmp or jge pop jae test iret jnp data16 movsb cli jno call adc sbb push jp pushf mov mov and mov loop jae xor adc cmpsb jns sbb jge aam sub dec sbb loopne dec pop jnp mov ds sbb hlt (bad) ficoml enter add or es std dec mov popa das jle ret test or xor mov mov mov push adc xor jae hlt xlat (bad) fs mov push sub cmp push notl jmp pop dec sbb aas cmp mov insb push insl and and jl stc pop xor sbb sbb and jmp insl int3 jge pop xor or pop test cli ds xchg or icebp cli jmp cmpl arpl push lret ja push dec fldcw xchg xchg pop sbbb sbb rolb pop test sub sbb mov ret in xor cld ss sbb daa imul (bad) dec loopne xorl jge add test lahf mov inc push movsl xor bound and sub adc (bad) or pop sbb int (bad) ljmp cmpsb jle mov adc rorl (bad) jo movsl scas insl sbb loop xchg je daa (bad) repnz dec cli xchg rcll and (bad) mov inc cmpsl das (bad) push jns mov decb jnp out xor xchg xor or and je test stos jmp xor shr addr16 and cli mov and and aas mov lahf test inc (bad) call mov aaa mov inc rcl rolb ret mov aas xlat lret adc (bad) fs imul out arpl in xchg ret popa sbb pop data16 xor inc repnz (bad) cmpsl fisub jbe mov fisttp mov dec fldt xorb lock (bad) push rorb (bad) js sbb mov push imul (bad) pop fist jmp pushf mov movsl in mov jo popa push fbld mov test adc out std repnz dec in divl adc jp mov cld cmp mov data16 adc mov add mov (bad) fbstp sub inc pop dec jge mov fldt inc inc test aam cltd fsub mov fldl shrl out push std lahf call sub fnstenv pop leave daa negl ja imul lret aaa mov mov andl push push sub jns cmpsb lds adc or ret ljmp fdivr dec cs push adc stc dec jns mov push pop mov cmc lods inc push xchg jge xchg aad push xchg xchg mov enter sahf gs jle divb mov cmp popa loope fimul pop mov (bad) pop mov jns or lcall aad mov pop cmp xor push cmpsb mov insb scas test jae iret fwait aaa pop xchg mov out push inc adc pushf scas xor sbb call insl pop insb cmp mov ss jl rol call mov sub push outsl cltd nop or lahf imul jae cmpsb pusha jae pop push cli pop outsl push sbb std (bad) dec mov fisubl loope lods (bad) add js faddl mov sbb repnz and lock add lret popa stc out aad adc dec es cs cmp in fs and out jecxz nop ds sbb shlb xor jo jmp jle loopne fistpll mov ds jbe xlat sbb out arpl int inc xor jge shlb sub (bad) mov loop js orl and add cmpsb mov dec inc pop jle jae cmp xchg in dec lahf push (bad) dec inc add mov dec xchg and lret ret fincstp repz aad pop lods mov xchg sahf jb sbb fidivrl adc sub add cmpsb lods iret pusha jnp and xchg pop les int jmp cs cmp mov mov clc push roll fxch xor or outsl fwait add ret mov ret and pop rol cwtl jbe cmc jecxz jno mov dec loope sarl sbb (bad) (bad) push xchg xor jmp jp adc lea test jecxz push or insb jle sbb lods jl mov loop cmp xchg mov in es (bad) sbbl dec cmp lret fcmovnu adc or xor pop (bad) loop,pn sub aad into pop rorl out ja pop xor push hlt xor shl mov ljmp (bad) and test add pop xchg std pop stos divb fimul dec movsl push repz cmp mov fsubrl xchg jne cmp mov imul mov les mov imul and je test ror jne neg lds and aad mov jo ss aam imul dec imul fiadd movsb xorl mov jge pushf dec (bad) cmpsb push fwait adc ljmp loope sbb (bad) imul inc cmp mov (bad) and cli daa roll or test jo popf dec dec (bad) jae xor jo jp shlb sbb mov sub sub sti mov dec xor (bad) sub in xor fbld and std cltd mov fisttpll out leave xchg inc imul xor adc jae pushf clc in mov lods scas inc jno cld hlt pop divl ret inc adc xor (bad) adc sbb push fcompl and gs cwtl mov mov loope xchg ss sbb xchg aas outsl insl sahf xor push lock jle int repnz pop into fiadd add inc js cltd lahf dec mov dec sub into sti mov or mov jns jge in jo fcoml or fadds pop icebp inc jecxz or lock (bad) jb mov and mov cmp jb mov mov pop inc xchg dec or or xchg std lds xor mov rorb lret lods push inc int sub mov inc mov mov xor or jbe mov lea cmc insb add mov jmp inc xor in inc in imul lods mov push cmp fs xlat cmp xchg add out mov hlt xor les repnz mov cmp (bad) outsl sbb add into shrb sti dec sbb add js add mov xchg in cmp jne repz mov ret out cmpsb lods idivl mov ror mov sub or mov sub lock fist int jae lods test notb test iret sbb mov push mov neg cwtd xor mov inc in cmp outsb ret mov xchg or jl test jae xor ficompl lock dec dec lock mov lret push push mov jg les aaa or fstpt sti pushf repz mov pop outsl mov sub dec clc inc mov arpl (bad) pop sahf inc push cmp sti adc daa insb icebp push sbbl and add fwait or aad sub sub xor sbb push imul test jg xor dec xor dec out dec push cwtl shrd dec jae fidivl test cltd inc leave push ljmp pop xchg push cmc xlat mov stc pop (bad) sub sub adc cmp (bad) lea and ds inc mov and ss gs push jp mov inc pop mov movsl push add in (bad) cmc dec ret inc fbstp xchg xchg push jno push dec lcall lret test leave aaa gs fsubrl cld shll aad rcrl dec or jecxz xchg clc cmpsl push cs shrb push mov test push aaa in sub inc mov jge ficomp ss lock jecxz inc xchg (bad) fimull lcall dec andb popa push push xchg sub xlat arpl lock fwait lods mov scas dec loopne sti stos dec xchg pushf sbb mov inc loopne mov lods loop outsl cmp (bad) into xor ss leave stos mov mull in stos pop mov and cld rolb pop out mov mov mov sbb lahf test sbb pushf or out lcall pop xchg test cli movsb push out pop out mov loope mov ret dec fistpll ret and sub mov xchg xchg fild rcrl push fwait push mov xor aam sub and cld dec cmp mov cs loopne les dec popf mov (bad) repz test sub xchg ljmp rclb mov les rorb pop in fs insb push jmp notl out dec xchg cmp mov aam inc adc xor xor sub insl push mov mov mulb pop fwait adc inc (bad) push mov xor lahf lods push call test xor mov mov pop fidiv push (bad) pop aaa mov (bad) push xor or popa arpl pop aad cmp jns sti jne cs clc jg stc (bad) mov mov xchg cmpsl (bad) jo lods popa rcpps pop xchg in mov add insb lods mov push daa incl cmc fldl std lahf fnsave mov call xor or xchg cli add rol xchg fsubrl cmp mov pop aad (bad) loopne fist aad mov (bad) xor les fucom or (bad) ja mov js clc sbb (bad) mov jb add incb pop out mov xchg add xlat sub pushf mov in jp test xchg sub jne jb lds dec mull stos add sub adc daa and popf imul cld in mov push mov lcall sub outsl outsl imul adc adc push cmp mov out adc int mov aaa push jge pop xchg jae arpl jp daa (bad) jl sub sbb mov es subb out adcb dec loopne xor sub sti fiaddl imul cli cmp lret mov pushf or push fidiv int3 scas xlat arpl out xor outsl adc test mov jmp imul rcrb ss daa das xor bound add cwtl xchg ja (bad) dec jg rolb xchg (bad) sbb push xchg cs call in inc mov push sbb fcomp jo repz xchg bound and dec ficoml mov jle fwait jo add pop mov ljmp ficoml faddl add aaa cs or fdivl stc jns lcall jb rcr sbb and sbb les into jb push push mov mov mov lock pop out pop icebp push (bad) int out sbb add and xchg aaa xchg jmp cmp jecxz roll rcl add lea lcall or add adc jl cld adc jmp pop push fnstenv pop stos fdivr cld das dec adc pop (bad) out push fistpl stos fstl lcall pop imulb (bad) jne jl pop (bad) enter sub cmp and add cld pop pushf mov mov fildl mov mov int3 adc mov arpl push das cs or add push push mov ret add bound test cmpsl or sub jmp jle or add repz sub xchg jns test mov repz mov add (bad) jecxz sub arpl sbb sbb cmpsb sub push mov jmp sbb hlt loopne cltd arpl movsl and (bad) xor mov das mov mov dec shrl icebp movsl lds stos or pop dec lock mov ds mov popw (bad) lcall or insb loop mov cs loopne adc setne enter xchg dec lods imul mov jne pop xor enter aam jle mov mov jmp nop aaa iret cmp xchg repz andl shrl xchg sub pop sar pop mov jo into mov mov lret add fcomps test mov mov das in aaa insl sub and xchg mov mov or mov fstpl (bad) xor sahf xor xor cmp iret ret fisubl sbb cli in mov rol in clc push into (bad) rcrl jb in aad iret inc fdivrl cmp fcmovb test sahf adc mov xchg push out mov pop (bad) lcall ds pcmpgtd and jne rdpmc fs push icebp adc loopne or mov add xchg pop and enter test xor pop mov jg dec or ja fisubl popa xor lods fidivl jle pop daa lahf inc lahf push sahf cmp push sub (bad) cmp sub aad xchg xchg dec stos add (bad) or icebp jl shr je mov and and fsubs push inc cmp std push xchg jnp lret arpl in xor jmp or jne cmp push xor pop rep jae insl fldl and outsl imul mov xchg and sub outsb push mov cmpsl ret rol lock lahf jp ja mov test jge jb mov fdivs jno push push cwtl sub pusha or test jg insl daa jle addr16 add loope lret sbb sti jo xorl cmp (bad) or add cmc clc ss je mov (bad) out add push adc (bad) sbb dec xor cmc ficoml mov sbb jge pushf outsl roll lret mov (bad) jo rcl mov dec mov cli push lcall push pop dec outsl xchg fstl jge fmulp dec movb adc pop loop popl xchg lret pop popf jns into rolb js mov rorb notb (bad) stc fistl push lahf pop adc arpl das lcall inc inc sub sbb push cltd stos jp dec jmp adc addr16 jbe lret leave shll add xor jl test add jg lcall push xor mov dec out loope out scas inc push (bad) push push pop icebp mov pop movsl out pop cmc xorb sbb iret add mov call fsubr outsb out mov dec test mov pop push dec pop imul fs jno lret aas mov xchg dec andl sbb xchg pop push orl push pop mov adc add jp lods dec fdivs sub push jo rolb mov jp pop push repz dec std xchg inc mov lret aam in in jmp inc in pushl lea xlat dec test stos es fs jns nop push enter popa pusha mov lods add leave ret outsb aaa mov insl clc sbb gs ljmp pop cld rcrl and dec xchg cmp xlat inc or mulb mov es lods mov dec fnstsw xor sbb dec mov and sahf push push pop fwait ret cmpsb cld arpl pusha dec xor int3 mov fstl and (bad) clc mov xchg lcall jmp lea loop and pusha or iret sub jb or test pop cld (bad) jns mov sbb ljmp in sahf push ss jb adc pop mov dec stos add sub cmc fwait cmp cmp and out arpl ror pusha or xor sbbl cmp ja adc cs movsb shlb cmc call mov aaa or mov lods in test add inc iret call in jb mov addr16 movsl pop fisubrl inc (bad) test add sub push ljmp fwait shll lahf pop mov (bad) dec adc push push stc dec xchg dec pop cmp aaa cmpsl pushf push mov fcoms notb inc ftst xchg loop pop and jno pushf adc jbe enter rclb mov aaa out dec (bad) jle iret jg jae outsb into lds nop out loopne test lret shrb push rcrb dec cmp mov cmpsb in lret add cmpsl cltd or arpl iret psllq jne fdivr mov repz int lods and mov rolb stos mov sbb jmp inc fsubrl nop add cltd jbe or repnz push imul aaa lcall shr aas loopne push lret loopne nop mov call je pop mov popa xchg sub add (bad) pop mov mov xor xor mov imul and loop test clc mov orb jns jp push mov lret cltd xchg cs test out jg xchg jle xor iret pop jge aaa push mov sbb sub xchg xchg arpl test cmp jns jl pop jl add push rcr push xor imul cmpsl ss cmc pop xor or dec rcll adc or inc popf cmp loope dec sub adc enter ds inc and or nop push stc mov imul sbb mov dec outsl stos je dec in pop mov int jb push cmp sbb mov lods mov cmp pop inc jl inc ja fdivrl push dec adc inc add test xchg add insl push or pop cmp insb aas daa ja jbe xchg lret mov (bad) (bad) and mov push pop cmpsb (bad) dec enter sub and and and jg jle pop sub aas mov aaa (bad) lea pop pusha xor cmp outsb fwait mov int push cmp xor mov outsb fxch jne add cli ja dec arpl rcrl sbb dec or mov shll test aaa arpl cwtl int nop cld inc fldenv cld inc test gs sti shlb mov adc mov xor xchg mov sbb aam shlb dec cmpsl xlat adc pop pop xchg stos insb mov sahf fcmovb repz imul stc pop loop xor dec mov les test cmp add or xchg pop pop adc movsb xchg xor mov bound fistp shrl sbb push dec bound bound sub es adc jne arpl (bad) bound dec jno jbe sti (bad) bound jnp xor fisubrl sbb (bad) sub push inc sahf rclb (bad) mov inc fwait fwait test loope loopne xor cmp icebp sub mov les out ficoml jg insb orb in xchg mov or movsl mov xlat imul sbb fxch in sbb int3 bound popa mull (bad) cmpsb repz mov int3 ljmp cltd shrl fwait and mov sahf pop and add ret iret insl jo iret mov adc or cld xor adc shrl cmp sbb sbb dec lret mov inc aam mov test and aad in or sbbl xchg jp sti mov pop scas mov mov scas jnp lods jg (bad) loope pop adc enter mov add jge adc mov mov sub inc (bad) popf (bad) ljmp adcl js adc inc cld xorl cmp mov into out sub (bad) xchg daa shll jecxz jmp adc jo adc sbb pusha adc ret cmpb xor xchg mov pop clc adc call push jg in pop call pop testb lods mov or cmp lret sahf pop adc aaa xor loop aas xor fildll xor xor jle sub cld mov es push cltd (bad) (bad) lock loope dec ret inc sbb mov int (bad) sbb cmp inc mov imul lea jnp xor mov (bad) cs sbb test pushf push adc mov aad pop aaa add in or add push lods (bad) mov add hlt daa mov push mov pop xchg push (bad) es aad mov fwait adc lret insb mov push mov xchg fwait fs xchg cmp jb xlat arpl sub jge mov test adc mov sub in pop push ds push pop xlat pop dec xchg std jne mov mov ffree sub flds into inc pop xchg in xor dec sbb jle repz call adc sub lock add (bad) frstor pop loope lret cmc mov mov xor adc aad out xor out outsl shr dec and push mov mov push push (bad) dec cmp jge outsb rclb sub out jge xlat clc js mov fs push stc pop out leave sub sti xchg imul bound sar dec lock pusha sub in mov sub repz ja jno jno or lock push pop orl and popf xchg popa in mov and popa sti or (bad) pusha jl and aad push cmp shll adc popa pop jg mov inc es imul inc gs fdivrs mov pop sbb adc (bad) jo push mov imul in xor scas jmp imul (bad) mov and fisttpll rorl test xchg push jmp mov jge sbb dec sbb pop add fs ficoml pop cmpsb inc cmpsb add (bad) sbb pushf push sbb fadd cmp adc movsb test stos push leave (bad) outsl divb stos js xor mov jo mov cltd inc fstl pop (bad) push push mov push mov sahf mov mov (bad) shrl movsb mov xchg addr16 inc nop adc xchg jl test sbb inc mov (bad) icebp cmp orb pop pusha xchg pop adc xchg pop rol dec jmp jge (bad) push adc stos fbstp add add cwtl push mov int leave sub pop dec (bad) mulb (bad) dec inc pop test imul ret or jg jmp jg addr16 ds xchg pop pop loop aad cwtl in repz repz jle ljmp push icebp add jge pop adc jle rcll fmull mov cmp xor icebp xchg repnz std movsl into (bad) jno fisubl (bad) cltd push fs mov mov mov adc jno aas insl cmp mov mov iret sub sub xchg pusha or repnz sbb sarb inc pop sub push mov out push lds dec lcall pop mov mov dec gs leave jnp (bad) lret jne sub and add inc fcmovnb inc shl fisttpl pop dec loopne outsb dec fst clc push arpl aad jnp jl dec dec cli in loop pusha int3 adc js imul fsubrs imul ljmp sbb xchg xor call aas push and in fldenv mov mov js inc sbb hlt fwait pop mov ja adc push mov pop adc stos cmp ret cmpsb lea pop movl std das enter in and inc jns stc xor addr16 mov out enter js insb inc xchg jo fs call sub sbb or addr16 push push sahf mov int3 fsub je in mov xchg pushf push adc ficom sbb faddl jne add xchg cmpsl add rcr fidivr inc stc cmpsb movsl jg test cld jecxz pushf mov pop idivb and and add dec cmp mov xlat outsl adc leave insb adc dec icebp dec rcrb sbb scas (bad) push (bad) mov fistpll insb push push mov insl scas repz push movsl cmpsl inc jae xchg ja and cmpsl out pop and push (bad) jno cmc insl lahf aam mov jle mov pop sub (bad) dec movsb mov push add mov test push cltd xchg xor push push pop stos mov mov cmp cmpb ljmp mov aaa les mov xchg add dec mov dec scas mov iret ds dec lock test push lfs fsubs jmp mov jecxz xchg mov pop add movsl inc mov xchg (bad) aas aad lods inc test fucomip ds mov sarb (bad) int pop outsl (bad) popf popf and and neg sub or je xlat insb cltd pop push xchg cli mov sbb push push (bad) mov call repnz repz cs (bad) adc daa sub push add je (bad) sbb or jno cmp and jecxz iret jbe adc not (bad) sub in ljmp int scas fstl cmp gs mov hlt jae mov pop jno mov imul mov push nop stos adc aam add adc out fwait out imul je outsb movl sbbl aam xor lods ret dec cmp or push pop loopne lahf mov fild cli mov rcll cmpsl dec insl jne repnz insl add mov cmp in test ret nop ss mov and fs mov out scas roll out int (bad) and sub or mov cmp dec (bad) jno test jne pop pop stc aaa test (bad) cld push xorb inc stc push xchg pop mov test cmp or es mov arpl cwtl dec scas icebp sub lods mov mov call cmc mov (bad) hlt mov lret popa nop ljmp push shrl xor lcall outsb inc mov data16 jnp das jbe ret imul xchg mov jecxz fimull push sub mov popf push test adc xor daa cwtl cmp xor push jmp mov dec dec sbb cwtl jno pop ret push pushf in jbe ret mov div lahf dec jp pop mov in mov stos dec cmp loope stos (bad) xor dec pushf idivb push and (bad) push imul popa and sbbl stos call in cmp imul (bad) enter xor sahf in out subl das loopne dec mov bound lahf lods in in in pop js loope,pt dec adc test pop stc pop pop fmull aam jno adc cmp xor pop mov mov sarb sbb xchg test ds daa (bad) js stos mov int3 mov aad cmp lds and addr16 mov push out movsb adc push call cmp enter xchg sbb decl adcb scas jno inc fiaddl rcrl pop inc pop cld pop push sub lock jno insb cmp lret rorl xchg cmp sarb pop (bad) test mov in stos sarb mov sbb cmp loopne fidivl add das jbe rcl inc push test in and cmp ss rclb or test xchg pusha lcall add lret cmp fcomip xchg popf lcall add je test cmp arpl (bad) ja mov xchg and ss and ljmp mov roll add movsb cmp sbb dec orl stc sub mov pop mov insb or xchg call and aas addl and imul cld test mov clc stc adc mov inc fildll scas mov iret mov cs sub xor inc in push nop sub insb push leave fisttpl xchg das xchg cmpsb inc jl push mov add mov (bad) mov js leave clc int3 xchg mov icebp mov test popf mov stc jno,pt in mov dec xor leave inc jb lock sub push and das push cmp sbb jb lock jbe int (bad) push xor outsb loop cmc adc in movsb inc xor sub pop arpl (bad) mov pop push jns inc push jno fisttpl cltd repz push fstpt pop dec push in frstor jl lods leave push ljmp adc repz mov mov popf xchg inc stos mov inc pop std sbb popf outsl xor fdivrs and loopne out push mov out popa negl insb mov out sbb cmp push jle aad jecxz push xchg adc in stos mov pusha icebp and pop jge inc test insl jg test or sub jno aam dec dec test mov movsb pop insl inc jo xchg cmc jo dec test pop jno mov xchg sub es test and dec std jo movsb das jecxz mov imul jbe int jge pop popw imul mov imul or push stos or mov loop add test sbb jne mov out sub (bad) icebp cmp loope pop psraw call loope jmp mov xor lret dec adc add inc mov pop scas bound test mov cmp inc les inc sbb and in shl decl shll jle cltd das inc iret stos and pop ds sbb inc pop leave in inc sarl lcall xchg or jg enter cmc push jmp cmp cmpsl push push sbb mov jae js pop sarl push pop pop imul add rcll xchg lods cli lds and es hlt push add dec sub loop dec sub mov cmpsb xchg cmp insb (bad) mov (bad) lods repnz add mov loop add pop cwtl mov inc lret xlat popa sub lret jo es (bad) dec jecxz in add loop cli dec dec xchg cmc mov mov scas mov mov cwtl sub and popa jecxz,pt (bad) lcall rcrl mov int3 xor stos and in popf sahf ss fstp jge hlt aad in movsl lret (bad) pop sbb pop jl cmp push rol push mov (bad) imul jb ret add and scas cmpsl cmp and mov in pop inc push aad pop xlat adc mov mov movb setb or bound (bad) pop fidiv in dec cmp pop aam pop sbb loope xchg cmc repnz pop mov lret jle xor sub (bad) les rcrb lea pop pushf out pusha cmpsb fwait sbb gs xchg lcall push xchg insl fcomps loop xchg das (bad) (bad) (bad) mov cld pop (bad) js mov mov sahf sub popa (bad) or int mov jecxz ret cmpsl mov xchg cmpl ljmp ja fstpt ja xor add push popa test xchg dec cmp jb data16 adc sub inc or popf and mov imul jae pop rcrl mov in xlat dec in and mov push cmp (bad) int3 sbb insl into repnz add mov pop ja enter push push das outsl stos lret dec mov notl (bad) and int3 int3 mov in out loopne sub cmpsl jne mov inc xchg cmp ds imul pop je sbbl cmpsb mov pusha ss aaa sbb sub dec xor subb aaa lcall rolb adc lock stc clc stc fdivrs mov mov call dec mov stos jnp out in push mov ja ljmp xchg int pop pop xchg clc je decb jl in jg pop sti ljmp frstor out jbe adc loopne push (bad) out sbb pop xor mov js push push (bad) xchg push insb jg pop loop outsb loope cld sbb fcmovb test fdivrs ds dec clc pop fs aam mov movsb iret sub cli jo xor arpl xor fsubrs ja xor adc fisubrl movsl outsl in push fwait rcrb (bad) mul fistpll js icebp mov jle cmp clc dec arpl pop (bad) sub pop pop lock in mov dec sbb mov test xchg dec pop ds (bad) and dec jl leave fs nop test jge (bad) push adc in in loopne adc cmc cwtl xor or jle test call xor arpl mov pop sub lea and call pop cmp mov fimull lods jecxz sahf (bad) push xchg insl ljmp adcl repnz int3 add jae sbb rcll pop add popa mov (bad) fcompl add add cmp xor mov push adc xchg mov int3 mov lcall add in xchg add pop out mov repnz mov ret push data16 mov in lret push dec sub dec inc dec dec out test and adc jecxz (bad) fsts jle sbb add jl imull in adc xchg out xchg push jns cwtl pop inc jge adc push push jl adc pop cmp push dec mov lret mov cmp pop movsl jne xchg xlat push insb push loop addl inc outsl jl add jge mov inc fisubr into xchg xor movsb es shll push push xor push lret pop fidivl stos dec push or lods xor clc mov sbb (bad) stos jb mov mov fstps leave leave mov pop movsl fnop cltd je push clc mov fildl in sbb jns repnz popa dec rorb daa ljmp mov arpl dec jno jno adc add inc aas dec faddp mov pop test addr16 mov jecxz jno xchg xor frstor dec (bad) imulb sbb loope mov xor ror pop jno mov mov in out add scas lock pop movsl xchg cs mov hlt cmp push inc cmp cmp int jmp fldl or mov mov xor cltd (bad) sbbb add mov mov loop mov es mov ja cwtl mov nop imul pop (bad) movsb shrl push mov or sarb or adc aas jge adc mov sti mov notb movsb popa js mov xchg xchg faddp or cmpsb add push loope (bad) pop mov cmp pop aas xchg sarb jp mov or pushf jl (bad) fstpl lods push mov xor sub ror sub xchg fistpll cli rol sub cmp test hlt loop out notl mov insb xor push in out scas dec cmp add jge gs sahf icebp xchg jne addl sahf cmp in mov je fdivrs movsl adc pop jno sub dec lret repz and fwait cwtl cmp stos in les fwait sarb dec dec aam sub stos xchg call cmc mov (bad) leave cli xor mov xchg xlat add adc into sbb rol push or ficomp lds mov mov inc and imul cmpl fldcw dec push lds cmp es lds and sub jmp sbb mov lds lret loope fldl cmp cltd mov std out fwait lret mov mov (bad) lods bound sar xor popf mov les das incl jmp mov (bad) jge pop pop push cltd lahf shrl or cmc cmp es fisttp stos scas pop lods cmc push dec int3 leave mov mov pusha (bad) movsl cmpsl pop loope enter adc push push roll lods or sub movsb push lret add into jne gs (bad) hlt pop add add test cmp negl push out ss ficomp (bad) rcl and mov add leave sub cs test fidivl insb inc sub call jmp jecxz scas xor mov mov mov movsb mov push adc jle pusha imul sub mov push aad insl icebp cmpsl fwait push cmp xchg and dec (bad) iret pop faddl fsubl pusha pop cmp mov notl in (bad) fild mov jno mov xchg out inc mov xor mov insb or push or mov (bad) sub xchg movsb dec jbe xlat (bad) icebp push lods ss scas dec ret mov pop adc xor js and or test je push mov xchg push in popa lods inc int3 idivb xchg sbb mov pushf dec sub (bad) aad aad lret iret xor enter (bad) iret lock sbb pop xchg mov test jbe or rcrl mov gs imul out mov dec addr16 lds sub xchg pop jo dec dec jae mov shld jmp mov lahf inc or push xor add sub (bad) fs hlt jno sbb fstpl ja cmp sub loope lahf jno rcl inc in clc test mov nop es dec add cmp stos mov and arpl mov pop andl lcall and sbb push sti mov add push enter ljmp fildl or push sahf jl push cmp pusha (bad) adc test int3 pop test popa arpl stc mov jo ret fldl imul popa add mov data16 imul mov sub fisubl out (bad) mov jbe aaa push ljmp inc into mull mov jo (bad) les xchg sarb stc jae out add in insl fistpl hlt test clc adc mov aaa dec popa mov or shrb mov mov jle call xchg aas loope add cld push or out jae rcll mov add add lret mov out pop push mov sbb (bad) mov mov push rcll or mov mov insl inc jle inc cmp xchg cmp lret aad (bad) cld push or sub inc mov notl imul mov (bad) call aad mov cld in inc mov mov add aas pushl inc push test addr16 jae mov sbb mov mov lds push outsl test sahf sub repz sub movsl test (bad) cs jne sbb lock cmp add mov lods lods std in in int3 and inc mov mov jns mov pop cwtl je dec adc jns push xchg pusha pop test jl dec cmp repz push bound fsubl lds notl out push xchg mov jb pop sub in es push fs pop cmpb sub ja fild rolb push cmp aaa xor and adc ja outsl and cld inc jp pushf test add mov cmpl and xchg (bad) cld stc ljmp pop sbb push push mov xor mov lret int xor mov pop scas iret roll or jno jp mov or cmpsl in fxch xchg ljmp (bad) or cli inc lea cld ret arpl imul rcrl sbb xlat pop test jbe mov out cmp imul push in mov ds add pmaxub jg cmc jno andl enter das loope movntps mov clc sbb inc dec or push push inc cmp push popa xlat (bad) xor sbb pop jo dec aas dec out cmpl cmpsl pop sbb sbb push subl jne mov pop (bad) or ficom cmp sbb test clc hlt cmp nop mov ret out shrl icebp dec sahf faddp loope ja xor icebp push das andb mov jle or insb out xchg and sti or in xchg es sbb (bad) cmc ja xor and nop popa test pop imul test test or cltd adc mov sub push sbb fistpll xor mov xchg out (bad) push repnz and add fdiv fcoms jbe ret jns cmp out lcall mov stos testb sti dec lret lock aam aas xchg inc mov pusha ret inc stos ret jo xor cmc jbe adc xor (bad) aaa or andb addr16 popf pop adc adc test mov mov sbb into lods xchg xchg jge sarl daa js xor push fisub sbb repnz sbb sbb loop pop pop (bad) lock xchg rcrb imul and in mov call cld adc dec test shrb repnz (bad) repz test (bad) push (bad) mov mov stos jae in push mov jmp xor pop mov ljmp dec mov nop mov test pop in ret pop adc std pusha lret (bad) dec adc lcall and cltd iret inc sti cmp cwtl mov clc mov fstl mov repz fstpt push mov push jecxz shrb adc xorl push push movsl int fdiv in add out pop test insb push xchg daa and shr rorl adc js ret insb je push xor cmp lea cmp (bad) and fs mov mov push jbe sarl lea js cli xchg adc push js hlt hlt jp aad pop inc loop loope mov push call insb jbe and xchg int pop fild leave leave cld cmp repnz (bad) push nop loope (bad) xor adc insl mov mov hlt sub test lds inc dec or pop daa push mov sbb cmpsb mov aas ret lock jmp loop gs (bad) loop inc mov sti adc les mov push or sbb xor inc mov cwtl addr16 enter pushf xchg add and mov jae out out das xor lock divl jno add fidivr mov xor and mov add outsl aaa xchg flds out loope (bad) sti lret sub insb sub jle xchg jle test insb popf xor leave xchg fldt inc call test sbb mov repz sub or cmp fidivrl in fildll repz pop and outsb lods shlb bound mov jmp and cmp aam es test sub pop inc hlt ds aas xchg dec pop cmp pushf imul xchg addr16 dec lods xor xchg das mov dec pop sbb clc dec aas pop cmp popa and popf inc sub sbb xrelease cs dec add clc lods xor icebp out lahf loope xchg dec mov mov je iret jl pusha popf test mov rcr push movsb push orb xor insb das repnz in mov imul jmp mov mov js js xchg or xor push sbb and cld (bad) je pop cs jecxz test sub xchg push in cltd xchg popf stc popa dec sbb sbb loopne mov pop cmc faddl clc aas test jge mov shr lds push add lea jmp inc mov rclb cs jnp xchg and loop ja mov cmp fcmovnu ljmp mov pop sbb adc imul and sbb fs cmp pop mov sub bound xor push (bad) jae inc push pushf (bad) call lock ja cwtl sub push or (bad) cmp in inc add adc int inc xchg mov push push jae cmc or mov cmpsl push in push pop pop pop sub jns sti push in push xor inc mov sub aad sbb cmp icebp cmp icebp cld outsb mov push out outsb pop or jno ja inc out mov xor lock roll lcall push add pop and and dec pop jmp rcrb repz inc fdivl into (bad) aas and xchg cmp popf fstpt cmp jp add mov es faddl xchg push jmp (bad) sub xor in cltd hlt (bad) in ljmp cld mov inc test cmpsb xlat mov jo adc jle pop rclb jmp (bad) movsl jo repnz jns cmp jb loopne adc std cmp shlb int mov inc fdivs (bad) (bad) jecxz pop xchg xor fwait mov lret mov (bad) xor into test jle mov aam xchg shll lret sbb pusha pusha mov loopne mov sbb fdivr (bad) jo out in insb xchg lcall jb cmp js mov pop mov xor jne push add and sub ret es (bad) (bad) (bad) test arpl lret mov mov ja jns notl inc adc in pop jl in jbe jne inc (bad) jb cmp push jns cmp mov cmp shrb (bad) jmp sub lahf rcll adc push xchg xor dec sbb mov movsb push sahf and jbe div popa and repnz inc (bad) jmp lods bound loopne cmp mov and fcoms xchg dec sub xor testl push cmp lret or aad test ljmp jne pop xchg cmpsb fcoml (bad) iret xchg mov sbb pop repz sbb mov adc xchg je cmp rolb in and (bad) loopne inc lahf lds sbb mov cmpsl shrb push sbb mov mov inc mov daa ret lret fwait test (bad) std push adc lods sahf xor iret xchg adc mov faddl sbb in (bad) adc mov jno dec loop shlb or aam cmpsb push mov repnz jnp xchg and in pop repnz or or pusha jl cld inc int pusha inc adc aam ficom imul adc push push cmc (bad) lods inc out xor pop sbb jno push xchg (bad) mov inc pop and int3 aaa mov fisubrl repz ficompl icebp cmp dec cmpsl flds jns test aad pop cmpsl jmp mov stc mov push add push pop popf sub in lahf scas ljmp push xchg clc push sti decl jne clc stos aaa adc jg push (bad) lahf into or mov aad dec jne jne sbb lods pushf or std imul jp in (bad) int cmp add xor mov mull mov sbb sub sub movsb lcall sti lock cmpb dec or pop jb and rorb rcll shrl cmp (bad) std xchg (bad) jo mov sbb sub sahf pushf aam adc cwtl push call flds push mov cmp clc inc xorl jle ja (bad) cmc mov jno inc loop cmp lods aad (bad) mov cmp push sbb data16 (bad) mov (bad) adc push mov insb (bad) aam pop out stos lds clc adc push ja and jb sbb mov push test pop and xchg mov sti mov sti xchg aam stos fs add mov mov aam inc adc fs and push repnz adc shr dec mov xchg jle leave dec fidivr push lret push test aaa mov inc xchg xchg xchg sbb push adc aas lahf jae daa push xor pusha popa mov stc icebp inc pop mov aas out test push ljmp lea rcrl cmpsl inc popf leave jns push push pop popl mov jo mov sub sbb andl pop outsb sbb sub xchg outsl inc push dec stos push inc jle adc imul repz add adc add hlt loope (bad) and mov std (bad) imul leave xor bound mov mov jae sub fdivr sub fwait pushf outsb int std orl das dec hlt mov pusha mov dec xchg pop push movsb in adc mov xor sub or and (bad) mov cmp sub pusha (bad) mov clc aas mov ret push ret cmp lds scas pop test lock push insb cmpl bound cmp fs sahf xor jg rorl cmp jecxz sub cli dec (bad) outsb clc pop xor outsb or data16 loope cmp xlat lcall mov jle rolb jae mov sub test fucomip or add cmp pop stos inc mov inc add pop loopne xchg and mov adc mov adc fnstcw fdivrs lods fild add into mov cmc mov cwtl cmp scas js pop sahf rorl inc imul jb jae push mov mov (bad) enter aas (bad) or cmovne fcomps adc jb dec cltd subb insb icebp in dec repnz icebp cmp mov cmc cmpsl xchg adc jg dec ss mov leave jbe ljmp ljmp dec es sub lret jp sbb mov std pop insb cmpsl leave xchg dec cmp cmpsl imul subb lret or mov out loope sbb jno (bad) pop notb test jb and push stos cmp jge lods jmp inc test add or dec sbb iret pop inc and or xchg mov fcoml (bad) icebp or cli fcmove int (bad) fistpl mov int3 imul cli stos push xor inc call sub xorl xor jp inc (bad) jecxz jp leave jb out cmp lea stos cmpsl pop sub fstps xor jg jp aad pop je cmpl jo (bad) int sahf movsb sbb jp pushf scas sbb sub pop call in fadds lods inc mov and push xchg sbb mov and lods loopne push jge jae pop enter or outsb mov lods xchg das jle insb cmpsl imul and into push adc inc fnsave test stos shrb pop sbb movsl cmc cs pop push sbb enter cmpsb xchg into arpl mov xchg dec pop pop repnz lahf adc adc jo sub dec das int push out insl mov push fsubrl mov sahf popf stos mov enter jle mov xchg cmpsl adc jecxz shl sbb mov repnz outsb adc jp sahf daa arpl pop xorl and xor fs push vmaxsd stos dec mov adc fwait lods xor cmp and loopne sbb sub and push xor in mov dec icebp and idivl ret push xor xlat fimull cmpsl sub sub adc or cli das xor lret cli pusha mov dec inc test movsl cmp out sbb xchg sbb xlat jbe mov stos dec stos add mov arpl mov cli xchg cmp sub incl push iret mov adcb add sub bswap enter and ljmp xor not gs adc in and mov xlat fwait shll movsb loop dec inc int scas aaa or xchg adc xchg mov hlt mov fimul cmp test (bad) shll cmp outsb jb ljmp cmp popf aas mov pop cmp jae jne or sub adc cmp addr16 lock push lds popf xchg lock iret fadds fnsave sub shrl cwtl adc jl hlt xor or jae inc imul js enter or std xchg lods jg ret xor add pop inc jbe push ret ss and aas pop into xchg or imul xchg fwait rolb stc push jmp or aad (bad) sbb mov test jg out push les jle xor sbb pusha xchg adc lds and lcall sub mov int3 mov jecxz je xor and cmpsl push jno jle or out movsb mov xor les sahf jl pop fisttp xor jae int3 jg fwait and imul sbb xchg dec mov loopne orb mov xchg xor dec cmp cmp test ljmp pusha rcrb push sub jnp hlt es repz adc stos and cs cmpsl mov repz pop dec cmp das fdivs mov hlt xchg adc mov sar inc ja cmc or push (bad) cli repnz xchg mov jo in icebp cmp and cmp shlb add cld fisttpl (bad) sbb push test mov dec push mov rorb cmp (bad) fcomps and adc and sub repnz push dec xchg aam xor lods dec addl enter and jle adc push stc mov mov or loope inc or mov mov inc movsb add and rorl xchg mov xor pop rorl enter fbstp xor data16 and and mov fnsave inc adc add stc ja (bad) nop pop scas out repnz mov fwait jno and mov adc jp jge jle jge xor cs leave adc mov (bad) jmp xchg xchg fwait and (bad) mov dec pop adc jmp lods loopne (bad) push xor rorb adc aad stos mov cmp lret adc mov jg in mov or push ds scas shll stos in lea faddl (bad) cmp push jns jns xor shlb or stos es dec pandn lret mov xor mov and pop ret cmp fistl xchg pop adc mov push and sbb pop cmp jle push sahf sub lods and scas test push sbb xlat jp enter xchg or push xchg enter fwait iret push sahf xchg add mov cmp (bad) push jmp adc mov mov xor loopne sbb pop dec pop lret and jo pushf or jmp cmp movaps jmp mov les mov sti cmp (bad) xor dec xchg jmp arpl mov scas in cs sbb mov (bad) ds fcomip or mov adc mov cmc notb jmp incl ret xor aam dec mov sbb and test in ret push mov stos jp jge sahf (bad) lret aam or xor in sti push imul xor sbb stos push inc dec lods lcall cli cmp dec loope mov push imul pop inc clc xor xor dec cli leave in into jmp (bad) mov sbb insb sbb dec jbe repz jl ds sub jmp test push xchg jb pop xchg outsl jno jp sarl xchg int lea arpl sub sbb adc pop push push outsl pop jns and out jl and push bound insb jbe cmpsb (bad) pop inc dec cmp cmp cld repz and std lret jns sbb aas xor aaa shll mov xchg mov dec fcmove pop mov sbb insb (bad) aas int3 mov jp std repz out jns inc in in imul int3 orl and lods push repnz das pop xor (bad) mov leave add clc pop jp fimull hlt cmp lods pop jae lahf lds dec es repnz xchg dec iret pop fldcw lahf pop mov inc push adc cmp lods movsl bndldx repz pop lret ds test mov or push pop js out iret sub leave out fdivs leave lret mov popf mov jl popa or cmp mov cs push mov push aas fwait cmpb ret xor jb inc lcall or int mov xlat int fwait inc jae loop mov push fdivl movsl xchg jl mov jge push popf into jge lods hlt scas jg xchg outsb stc (bad) push push or dec xor sub mov mov popf jecxz jae sbb int3 (bad) imul or jl and xchg inc rolb cmp in les subb fsubs or or into or (bad) mov cmp fs or sbb mov mov fisttp pop lds mov mov sti aad mov mov sub addr16 pop dec (bad) enter push (bad) add adcl outsb pushf xchg repz cmp push cs xor fwait inc pop and (bad) scas jg fidivr fcomps outsl leave push mov xchg push dec or sbb jno xor aam mov sbb mov pop out cmp fisub jecxz push pop outsl sbb dec pop or mov test xlat bound push sub mov pusha cmp ror push in mov into rorb stos mov cli test das int lods xlat ficoml adc xor add sub cs int rorl cmp lcall adc push aas pop sub xchg mov mov icebp aad popf adc dec xor mov sub outsb pop push fsubrp add sub sti dec sbb mov push cs fbstp cmpsl xor xor cmpsb enter inc jecxz sbb mov (bad) lahf jo scas xchg stc push cmpl popf xor rclb xor leave xor inc add mov mov lahf jbe push jl lret inc mov int3 mov dec dec mov mov mov lds mov loopne in (bad) and jae scas lret jl mov pop ja je repnz adc xchg push add stos mov fwait test push cmp push mov (bad) ror fld push lret sbb push sub fbstp (bad) cmc push not mov dec scas vmovaps (bad) fist dec call pop add inc stos push repz aam loope cmpsb pop pop or jne cltd mov and push xchg dec sbb repz cmpsb pop sbb and mov mov jo dec addr16 orl inc idivb dec clc mov cs jns (bad) ss lret mov gs jp cmp clc jns mov inc cwtl ljmp push sub dec lock ljmp ret rclb (bad) push push clc aad pop cmp shlb push in xchg jle arpl popa (bad) jne ss in fwait push sbb cmp mov leave leave pop mov mov jp push cltd jp imul jmp out sub cmpl ret dec imul in push mov fnstsw xchg lods inc mov push jae lods ljmp iret sbb ss inc push (bad) jg adcl sbb pop or pop inc jecxz xchg xchg pop inc jge cmp cwtl pusha or lea mov jno jg mov pop outsl ret subb test cmpsl xor mov pop int3 (bad) fsubrs lods in sar inc call dec lods adc sbb jle lcall add int3 outsl (bad) (bad) mov and inc xlat lods and mov xorl ss pop rcll xchg ja mov test inc pop insl test cmp imul fist imul jmp cltd cmpsl add adc adc cmp mov mulb mov push cmpsl adc push dec xchg xor cld jl jbe es mov dec jge neg dec push mov test les mov sub jne push inc cld add pop test insb and pop lahf sub gs mov pushf jg cmp popa and add popf xor test imul scas test adc xchg or cmp clc lcall sahf scas xor insl (bad) int3 and (bad) stos xchg mov mov repz stos jo xchg fs movsl mov mov hlt sub sbb fsts mov mov pushf int3 cmc cmp mov or and xchg fmul push lahf xchg hlt mov in das mov mov es jecxz sti hlt clc (bad) movsl jecxz mov jge push cmp pop push scas jnp outsb (bad) mov lahf jg in sbb mov push (bad) sub sbb mov loop jg mov fucomp ret stos and xor mov xor enter dec fsubp push test scas push lock test mov in cmp pop inc mov imul push int3 test sub sbb sarb mov out mov popf les rcrl or outsl rorb addr16 pcmpeqd pop push cmp sbb rcrl notl cmc mov adc xor out sub push popa aad cmp pop ljmp xor cmp stos daa mov (bad) outsb lds dec imul mov rcrl enter or inc sub aas and lods icebp hlt (bad) cmp push lret inc xchg imul or scas lcall test sbb add adc xchg repz (bad) mov xchg inc dec mov adc or mov push and (bad) ds scas sbb xor pusha and aas pop stos clc xchg fstpl adc clc or cmp and (bad) mov sahf mov cmp rorb xor and mov cmp outsl (bad) xchg call shll cli cmpsl xor mov rolb cld xlat in shlb je adcl sbbl shrb out sub jns paddb lret notl stc cmp sbb (bad) test rcll jae pop adc inc (bad) loopne xchg dec pop (bad) clc jp push mov pop sub arpl loope daa add push movsb or (bad) xor cmp inc add imul push pop push fcmovb jbe jmp movsb scas jmp outsb int or or mov sub push pop inc dec arpl jle fdivrl cltd push (bad) cmpb inc popa sbb xor add pop fsubrl or add insb mov es mov ret clc sarl gs xchg mov ljmp iret inc insl adc inc or adc mov lds add rcl mov (bad) idiv sub hlt xor rorl fstpl pop cmpsl push movsl adc mov add mov mov dec push dec cld xor ss mov mov imul pop inc daa addb dec jge (bad) xor test inc int3 gs xchg and ljmp sbb or divb fidivr lret add xor dec and lods (bad) ror xor inc insl inc xchg notl cmp aad movsb test mov adc scas mov cmpsb sub sbb and repnz enter icebp imul ljmp jo xchg int rolb push out in lahf cmpsl mov cmp aas and cld arpl push es xchg stc add je jle and (bad) inc aaa adc push movl lea loope fwait cmp ss sub adc xor xor push insl jne push jo lret jmp mov lret jl pushf dec ja repz jno (bad) iret push das jg scas pop lds repz ja mov leave data16 int3 mov adc pusha movsl cmp pop add add fdivrs mov out sbb test neg xor mov fdivl xchg (bad) stc call pop cwtl dec aad dec ds jl fistpll mov jbe jae sahf loop mov idivl xor hlt pop scas cli in cli outsl pop mov mov imul leave fsubrl xor jg add mov lock fsubs das fnop in cmc out les add push pop jbe (bad) push or test rclb pop outsl or push or mov stos adcl pop jp mov jnp es or rolb mov out sahf cs xor imul and sub mulb sbb fwait clc fwait sahf pop mov out sub mov les (bad) repnz aas or test ljmp into or adc fimul cmp dec not js repz xor lret lods (bad) (bad) pop sbb sub rorl jmp cmpsb inc mov push mov jo cmc cmpsl and sbb cmp daa (bad) insb mov rolb (bad) sub dec ret call repz sub xor andb scas subl or mov adc jns in lods push sarl out mov pop mov mov adc xchg mov lods (bad) (bad) data16 test loop cmpsl jmp mov (bad) out rorb insl gs add insl jge das xchg mov aas sbb mov fimull in mov cmp subl mov jmp mov cmp data16 cmc sahf enter cmpsl stc in pop cmp push mov push loopne mov out (bad) in dec lahf loope (bad) fs inc fsubrs adcl movsb mov arpl mov loopne in js fwait std outsb imul mov add pop imul rorb mov mov inc mov xchg imul and ljmp cmpsb jle loopne sbb cmp out (bad) pop add adc ss inc aam mov add push in jae and rol jp mov idiv popf lret icebp mov push aas aas jno push negb and pusha ret and cmp or mov jne (bad) mov jecxz sarb jae cmp (bad) into mov adc rclb pop and jle inc mov out mov outsl inc repnz (bad) sbb xchg movsl and mulb jns mov jne lea sub add (bad) iret in push call lods (bad) (bad) adc sbb rcr shrb fiaddl mov adc dec jo aad pop int and insb mov push subl lret jg add iret mov mov cmp dec jmp or popf outsl lock rcrl push push stos out jg inc imul dec popf jno iret stos jecxz das adc pop pop inc test or and je into or cmp jecxz ja cmc enter cmp cmp dec sub pop jbe dec jg insb lods cltd sub fiadd mov xchg add mov enter cmpsb or or aaa mov orl cmpsl xor das mov sbb dec mov andl mov adcl fldt sti clc lods cld or movsl js pop sub jmp dec ja pop scas popf dec jecxz scas push push mov (bad) mov add nop jg out insl lods and fst mov adc nop cs cmp out jle xchg mov dec xchg icebp mov (bad) faddl jp xor sub outsb cmp sub fimull mov push mov pop dec stc sahf pop xchg imul mov xchg mov (bad) ja jmp xchg int3 stos es mov int3 stos and outsl fdivs cltd gs xorl mov pop cltd mov stos scas mov add jmp sub pop pop and add adc mov mov mov mov popa adc pushf lods in push aad (bad) pop xor lods dec mov loope outsb aad sti xchg push lods fldcw sub cmp lods adc enter aaa mov push sub ret xchg cmp and push mov movsb aaa cli lcall fcoml pushf and push and aas pop outsl (bad) and int3 jecxz or xor sbb ss push rcll das fucomip iret mov icebp cwtl jl cmp mov adc pop mov and ret sub sarl outsl es push aas or (bad) scas and test inc loop xchg fdivr xchg cs mov mov je jg out add or mov sbb ja and fldenv test pop adc mov outsb mov rorb dec rcrb xchg in popa sub xor popa sub cmpsl cmp and inc aam xchg scas push sub in fiaddl mov lods and or (bad) out xchg push mov mov gs mov test pop (bad) fldcw imul fstpt scas xor adc mov push mov movsb outsl or fbstp mov addr16 sub mov and push xchg insl adc dec dec aad movsl cmp rorb push push test bound mov cli mov loopne mov loope jne dec out aas fxam popf xchg ds je lds cmp adc clc mov and ret sti aad adc cli and loop mov loop jb jmp int fidiv push sbbb sti fsubl jnp pop xchg or push sbb bswap mov fnstsw lret popa sbb push mov and or mov and sti and loope adcl and and inc ret sbb sbb (bad) mov (bad) popf jg in mov dec xchg bswap dec xor outsl iret cmp push ja (bad) sub in cmp cmpsl and stos push mov jle ret lods push lds sahf mov (bad) push test sub mov inc lahf xor stos lret test sbb inc or mul sarl inc stos fisub mov jle mov pop mov mov lret (bad) dec std and rcll xchg aas outsb nop cli dec push inc or out pop inc inc neg mov jae ret xor add loope push push add dec push or inc jle pop dec arpl mov addl or mov add sub xchg sub sub es rcrl pop lahf (bad) out call push jnp xchg call enter stos cmpsb mov neg and mov cld arpl (bad) push lret cmp push push enter sub loop cmp mov sbb mov xlat add pop test jne clc addr16 test fwait mov pop sbb repnz cmp jae dec movsb (bad) mov pop cmpsb icebp xchg mov pusha in sub inc and (bad) mov add mov aas xchg leave imul lods mov shl mov push aad xchg ret and cmp (bad) lods dec inc mov jmp lods xchg dec lcall sbb mov je mulb popf jnp (bad) push xor je das inc cld leave lcall xchg sbb in lods repz sub push mov add sbb stc test es mov sub sbb insl aad push push (bad) in out push in icebp loop (bad) stc aam pop sub mov inc mov andl dec jnp fisttpl into or lods aam push push sahf jne repnz loope rorl mov xchg scas bswap mov adc jecxz rorl pop jne jecxz ret aad mov mov cwtl add sub (bad) js pop mov test stos cmc add cwtl out mov or mov add add xlat dec dec sbb lea inc pusha or sub into sbb dec pop pop jne pop pop lret xchg push fild and insl arpl sub mov push dec mov rcrb sbb daa cmp sti mov jge dec stc clc daa sbb lcall mov test cs xor pop and mov in xor (bad) mov aad cwtl cmp push jbe inc sub cmp adc in aaa cmp adc or popa rcll push mov sahf dec pop mov int pop pop dec xor push imul rorb mov loopne cmpb (bad) or dec pop movsl or sbb sbb scas in or adc dec fmulp sub cmp or (bad) loopne aad mov jbe xor pop xchg and sub pop inc lods loopne xchg (bad) adc sub inc xor popf ret sbb sahf cmc sub mov mov jno xchg out adc pushf mov cmp orl push roll lea pop and mov stos mov adc rcr rclb stos aaa out sub lds add (bad) std and push loope aam fist mov fld ds (bad) int sbb push shr mov and in fld stos and lahf mov and mov add insl and cld mov cltd lods insb pop stos add test lea arpl cwtl add push jmp push push mov insb fiadd or in sub mov mov enter dec outsl and (bad) jns js (bad) mov cwtl outsl shlb (bad) jae imul mov push int3 (bad) fistpl je push pop sub jge and sbb mov and mov cmpsb push loope stos into mov sti repnz cwtl pop aad repnz jne dec inc lcall cmp outsb jp std gs shlb adc insl and loop jmp push jns push mov lods out shll int3 mov mov fs inc push and or and jae in add test and push mov pop xchg jmp sbb dec int3 dec popa sbb dec shrb dec jmp push loopne lcall mov sub xchg stos out sub mov cmp faddp sub fnstenv stos sbb pop jl pop fsts call sub mov jg dec or rclb mov addr16 xor ficompl pop or adc lock out lahf push jns int inc stc dec clc repnz int3 sahf pop xchg add leave imul divl out mov fcoms push arpl pop lret sti es jb data16 xchg inc jns sbbl ds inc int ret cmp add sub xchg sub or imul cwtl outsl pop aaa mov int sahf xor ss lahf (bad) fnstsw mov jns aas out rcll gs jbe push int in pop and inc movsl movsl fnop hlt sbb rorl or sub movsl cmpsb pop or mov xor js,pn sub mov fistpl std jns sub sub inc and inc push (bad) lock and not adc push imul cltd test push pop dec (bad) imulb add adc cltd repnz into cmp and jmp call adc add gs and fdivr inc inc ja lods clc (bad) jae out loopne shl cli push in mov adc inc icebp add popf cli (bad) repnz hlt stc in push push (bad) adc or popa mov inc jecxz mov out add jg sbb iret mov jle mov dec std in xchg ret imulb into and in pop in (bad) cmp jbe das out jne rclb mov mov xor jl dec or outsb add inc addr16 ss jl sub add jno xchg in cwtl icebp (bad) mov push mov cmp xchg hlt mov xchg stos dec pop mov fistp cmp jmp and outsl jbe and mov push shlb jnp pop cmc xlat jmp les inc pop mov jg icebp out idiv xchg inc (bad) frstor sti mov jbe pop inc cld es lcall cli aad faddp or xor inc push xchg sbb in and repnz mov dec mov xchg add out sahf hlt jp stc inc jmp jb mov out mov adc sub aad mov pop mov jmp fsubr or daa ret or ljmp pop (bad) jge enter xchg sub orl sbbl fidivr cld (bad) jae (bad) hlt fnsave xchg ficoml cli jge mov mull stos jg arpl push sahf pop inc addb aam xor jle sarb repz pop or jb sub cmp mov adc js push or je push dec pushf arpl js mov and pushf in loop lods cmpsl (bad) push mov fs mov ret sub xchg mov pop mov dec xchg add jno add mov mov xchg js pop fs insb mov dec xlat (bad) dec xchg cli mov jnp or (bad) das push jg xor xor repz or into pop (bad) cli pusha les fldcw inc and xlat jp lret cwtl pop andb cltd outsb out push dec lods jg loop inc test test popa icebp lcall in je dec outsl int3 call hlt and xchg mov in add hlt je cmpsb fwait cld fistpll dec mov inc jmp mov addr16 je jbe (bad) jb push ss xor adc imul fcmovnbe add sub sbb cmp test movsb adc adc pop and out repnz mov testb out popf or inc mov xchg psubsw mov fistp or cmp adc or rcr repnz fstps into adc (bad) mov cmp es mov fs ret cli stos gs enter jbe ja cmp decl sbb daa (bad) imulb pop test ds fs int3 jno addr16 mov push xchg popa jns xchg js pop mov push xchg pop mov jae sti clc loop mov ja mov mov pop ds or js mov mov and cmp jae mov outsb ret cmpsb pop push addr16 test lahf dec xchg test inc popf add lds xchg and hlt shl (bad) inc imul sbb cmpsl mov push xor mov clc mov cmpsb mov das push das jmp sbb aam add pop jge push push jge sbb fstpt or roll in and test xchg xchg pushf push pop bound loopne mov in ds outsb popa jl xchg mov adc pop xor test cmp leave popa pop push pop popa movsb or sub adc rol mov mov (bad) adc jmp pop das push xchg xorb jne in jbe pop call mov shl mov leave mov sub iret ret mov dec sbb adc and das xor lds jb pop push pop aad pop xchg cwtl push fstpl rcll mov (bad) mov add aaa out (bad) cmp lret pop fisub or push shrl push pop dec and or lods jno jge outsl pushf cmpsl ret fistl or shlb cmp push pushf mov add shll mov sbb arpl pop lret lock idivb jl adc mov or inc jbe daa int3 data16 out aas (bad) and sub fimull inc pop xchg std ds jns cmp cmpsl pop jb mov pusha loopne or test daa es jo inc mov push cmp gs rorb imul cmpsl pop insl jp and test adc jmp jecxz add push lret mov cmp loope fimull fisubrl leave vmread (bad) notb push and rcrl jbe daa sbb and (bad) into in (bad) repz lret pop xchg jg push jmp mov out push adc lahf cmp lret cli or cs in das pop fyl2xp1 dec xchg cmpsb xchg adc movsb shl mov mov fdivrl and or jno jb out aaa fildl xchg adcl mov jb test sub jno dec jne jo mov jecxz push xchg mov mov xchg data16 data16 and jp add test shlb cmp jns out in (bad) jae push mov sub ljmp xchg sbb xchg insl mov mov xchg and or xor mov push sti sbb push ljmp inc fidiv cmp jle repz out lock dec lods rcl sbb jno or cmp jmp cmpb inc js (bad) cli jecxz stc sub stc cmp fwait cwtl inc rcrb xor jge rol sar push jne in (bad) jb jmp push lret mov mov sbb mov fild mov and test imul mov movsb fs xchg mov jge pop aam (bad) jo sti adc add mov call inc cmp mov js mov pop push ljmp push shrb xorb push lcall ret dec int lret push out repz (bad) mov push es ret inc lcall call add or rol adc sub mov inc jl insb ja lahf flds or loope insl mov aam jmp and lret dec movsl jnp and or mov ret pop cmp int3 or (bad) fyl2xp1 (bad) lea xchg lock aam mov or int3 mov out aam xchg cld and ret inc movsb pop dec insb or div loop aam mov and xlat out fwait inc cli aaa jb sub cs popf push adc nop shl (bad) popf push dec mov out (bad) test ret dec into cmpsl adc ds inc dec (bad) rcr lods add jmp out xchg ds (bad) ljmp dec pop pusha mov repnz push aam movsl lods ljmp arpl aas pop add or mov nop xlat lret pop mov dec pushf xor mov hlt mov sbb jns and mov outsl inc repnz in sbb cli gs jg xor iret xor push add pop cmc daa dec and lea cmovbe les mov adc sub fs mov xchg push xor and iret ja pop jle add rcll jmp fstps inc outsl (bad) les and ret fsubs pusha js mov imul (bad) out psadbw int pushfw mov mov mov fwait mov int3 cld push dec scas bound dec int3 into ja (bad) jl (bad) push rorb cmp push cs xchg (bad) std xchg aas mov imul enter and xchg jmp cwtl cmp sbb punpckhwd xor (bad) out or fsubrl xor (bad) push pop sbb (bad) push xor adc cmp orl test and dec inc jne adc mov adc lret sub js mov inc andb push cli out xchg dec mov jae xor xchg pop mov (bad) lea imul jmp mov gs xchg push cmp loope adc jno cli sbb push or mov jp (bad) iret out addr16 sub notl xor movsl mov mov jp lahf les arpl mov xchg xor test pop add (bad) scas cmpsb mov xor out jg mov iret ret mov fmull icebp or xor test mov fidiv mov jo mov hlt iret mull push lea fidivl pop in out sbb fwait ja xor fstl test xorl xchg (bad) dec cs fs cmp or incl adc cmpsb test mov bound pop mov scas push lock leave push in lods scas divl jae and add mov xchg rcrb pop jge cwtl add pop (bad) dec aas shll push jg,pt call sub xchg push dec ljmp das icebp xchg dec sbb jno stos scas scas and data16 sbb sti add xchg stos inc push jp cmpsl movsb cmpsl ljmp (bad) mov rclb loope mov push test cmpsb cmp jl adc jle push mov sbb add arpl cmpsb lea ret mov mov inc inc into lods add and fsub cmp jns in or clc and cmc lret call aad leave sti icebp mov pop jne daa jmp cmpsl and cmp loopne push mov sub imul mov sbb xor rorl stc insb xor sbb mov adc ds lahf push xor jecxz push add call pop scas cmp add fs bound mov dec repz pusha mov es add movsb (bad) xchg sbb inc rcll pop lods xchg insb mov xor movsl cmp or inc movsl jle popa out lret stos mov cltd movsb cld repnz imul push xor sbb lret xor pusha cld or push inc push push jle iret outsl and movsb in nop fmull lret popf inc out insb out mov cwtl sbb mov sbb rcrl iret adc xor or dec sbb mov clc shll inc (bad) in je jno jmp outsb xchg in push adc jge loope add pop int gs pop in adc and fs sysenter bound aam out ja xor jmp fistpll mov out mov ja xchg pushf jbe xlat add pop (bad) adc stos popf sbb jne (bad) jnp (bad) jno cmp rorl loope sbb int3 cmp repz mov xchg mov fsubs pop (bad) pop dec jmp jmp lods push sti enter fwait xchg add jl inc pusha enter cmp cltd and push call sbb popa cmc dec mov idivb mov jp pushf sub lret xor arpl xor scas xor xlat into (bad) in scas or mov das xor and popa je cmp pop imul push jo outsb mov push ljmp inc add jp scas adc data16 lret sahf (bad) aaa and daa push jo xchg scas lcall lahf pop cwtl add rol mov mov fbld orl scas rcrl or (bad) jge in lcall mov jl cltd enter push (bad) jne pop pop mov or lock or test add jl daa es push (bad) fist test cmp xlat ret inc pop mov out ret pop out rcll std inc insl dec push or push mov mov int3 add add mov mov lds cs xchg adc test push pushf dec pop loopne invd mov mov fidivrl scas xchg mov mov dec mov in (bad) cmp and pop mov push xor sub adc stos cmc push xor repnz xchg or roll pop push xchg sub lds xorb subl repz insb sbb hlt push repnz and add jge push mov sahf call pop mov jae popa push imul or add cmp xchg cmp lahf inc and (bad) popa lds outsl and and in cmp shll test repnz sub mov mov mov into idivb out nop sub mov out or lods mov pop out leave popa in fidivr punpcklwd mov push ljmp jg cmpsl mov arpl xorl (bad) jle xchg mov dec icebp stc push nop mov lods jg pop or xchg pop ja inc cmp test adc lock adc iret sbb and loope inc lcall jnp sub outsl sbb add pushf jp leave daa cmp ret test js add stos bound ds mov push mov mov iret inc lds lcall cld nop or imul jg sub adc lds mov lahf scas jns dec jg sysret pop inc add stos sub mov orl mov and rcl push push lcall sub xor push adc push cld sbb dec cli sbb mov or ljmp ds sub sub clc and aas xor cmp jle pop add xor lret aaa xchg mov subl push mov out mov aad cmp test jno jns sub dec insb (bad) leave xlat xchg add lods rorl mov cmp shl jns push sti mov in ss add dec int3 adc cli insb fild test lcall aam mov xchg dec fbstp lcall push jg jb sub lea orb adc ficoml sub sahf jbe,pt (bad) xchg jg xor pop cwtl adc sbb or stos pop lods test jp mov pop mov aad rolb stc and and sbb or and popf mov add iret cltd fstl mov fs or lds ds inc push int das or mov in enter pop jb jmp scas (bad) adc hlt pop xor les jmp (bad) nop or test fistpl jecxz jbe (bad) jne repz push test mov lods ss xchg icebp mov in jae aam int3 lahf incb xor (bad) mov jmp or mov call pop sub xchg lret xchg icebp push jns sti and arpl mov jmp push stos jno add sbb push sti cmpsb push mov cltd pop add and sbb insb jb or xchg shl sub jp out jle add enter out cmp stos xor sub xchg mov or inc push jp inc pop jl mov cmp ret cmc sbb cmp inc mov pushf mov sbb adc mov jecxz insl mov pusha pop push int3 loop lock cmp mull push lods push addr16 addb ljmp lds mov push mov mov add je lods push mov xchg imul in xor fcomip in cs xchg loope imulb pop inc fsubrl call xchg int cmp sbb xchg or cmp xlat ret cmp pushf cs loope push dec (bad) lret popa sub push jbe xchg shll fbstp loop in clc or pop lret mov xchg sbb in push addr16 jae add inc in inc dec repnz push imul mov cld mov outsl or leave push push cmp out out dec sbb adc insl (bad) popf fdivrs cs add aas and addr16 fmuls sbb mov rorl mov ds pop xor out fadds jb mov in rcll pop mov adc stc (bad) lret les sub stos push stos xor orl nop adc mov pushw dec js mov mov push ja mov ss and shr xchg xor push push cltd pop cltd xchg pop mov sarl push gs pop mov insl xchg imul xchg enter pop sub xor adc nop int inc dec jmp xchg (bad) dec adc es push jmp inc fs mov adc pop mov sbb notl mov mov pop mov (bad) mov lods or mov pop fs pop stos icebp mov dec imul mov mov loopne loopne cmpsl cmp lahf ja in inc sbb add aam pop xor mov pop stc lret pop icebp sub cli ret insb stc pop and xchg sub roll bswap decb scas jns iret mov dec adc pop addl mov xchg sbb jo fs sub mov mov (bad) cli mov lret aas es jmp cmpsl imul jnp inc inc and jg xchg test lcall mov movsb xchg xor sahf in add push out push leave out mov loopne mov loop repnz vcmppd sbb or lret sete push cmc cmp xlat imul insl cmp xchg ds and imul rcr mov jecxz lret push out cmp (bad) xor orl or lods and jp xor jp jae movq outsl in loopew ja adc inc push dec inc cmpsb pop clc dec adc aas test cmpl sahf lock ret and inc push fs jb scas xchg cmpsl or jge cwtl xchg push scas daa pushl or pop scas add pop stc mov inc mov xor into lods daa fucomip dec jl (bad) or lret push inc add sbb in push push cmp sti mov or frstor out jl rcrb xchg xchg adc mov das xor test jg jno and (bad) sbb xor adc inc std sbb movsl pop mov mov or lds hlt sbb mov shrl mov (bad) fdivs push imul rcl test sbb das mov sbb call sbb xchg xchg push mov popf mov (bad) cmp ret lret sub inc xchg ja pop daa push inc or and pusha mov insb mov (bad) icebp cmc (bad) mov fwait in sub push or into mov mov mov inc shlb mov and jp les iret and push enter fs mov adc loop lret mov add (bad) mov jno xchg (bad) or repnz andl decb inc and jae cmp cwtl push cmp mov dec (bad) nop mov out lds es pop sub outsb popa data16 ds mov sbb fildll or mov clc mov outsb mov mov lods sub std dec adc mov xchg loop scas (bad) push push xchg mov lret inc xor mov pop test mov jl flds loop cmp ret push cmp loop dec xchg lahf inc int3 in push ret test dec ret adc int3 jecxz test jae jp daa pop xchg lahf es jmp dec jg dec movsl lods sbb scas mov (bad) xorb inc and push pusha fist fistpll sub call fwait out jge orl jno and call (bad) adc mov (bad) dec sti mov (bad) adc jns fbstp inc jb sub sub sbb outsb fsubr mov inc in rcrl pop adc mov (bad) (bad) jae mov in insb lods jecxz add inc popa adc repz pop push roll mov jbe decl pop call mov sub aaa cmp adc cmc (bad) gs imul inc mov lret sub out mov arpl xor test adc cmpl jl adc test jge adc add (bad) jecxz xchg sub out addr16 test fwait (bad) mov das mov push decl mov mov xchg xor aaa push outsb and aaa movsb enter push or call push andl xorl cld cld pop shrb dec mov icebp mov insl ds mov loop dec adc call gs lods xor cmp mov pop jb mov sbb jns xchg icebp lcall dec pop (bad) repz mov adc stos jo pop cmp lcall iret into jmp mov push insl fcoms (bad) push fwait out sub push push roll sbb xlat pop and xchg sub rcr add sub xor imul pop xchg popa mov (bad) xor data16 jp loopne popf pop fiaddl and mov inc lret mov pop aad or xchg pop in sahf mov push push mov and imul lods xchg imul lret pop dec mov sub fcoms add dec popf push lock pop cli sarb ljmp lds sub lahf jl jmp lret js inc (bad) repz aaa mov es push mov inc (bad) mov mov mov movsl lods push rcrl and int3 ja popf outsw xor fucomip ret and jne ljmp (bad) mov xchg jg pop insb pushf daa icebp enter les rorl fidivl mov out mov cmp out cld std add ja fprem insb push mov push rep jle clc lret in vmread mov push xor dec (bad) out aas mov dec lss push shrl and dec bound mov xorl insb inc fcmovu push (bad) mov jge mov arpl mov mov sbb or jb pusha cld mov adc add mull mov sahf jmp cmp xchg ret sbb mov clc fdivrs pop jbe lock es pop and scas ret out lds mov mov inc jbe pop outsb aam decb lock pop jae pop jno out mov bnd jecxz fidivr sub inc bswap arpl cli rcll call mov daa imul push push cltd (bad) mov test mov push aaa and push das outsl xor aas cmpsb xor or fwait xchg add adc inc idivl sbb sbb pop pop jg xlat (bad) jo (bad) mov xchg jb dec and inc jae push imul push fisttpll lcall mov sub ja push sub pusha inc pushl pop js adc mov mov (bad) fdivrl or pop pop fdivr cwtl je push int (bad) mov mov lret xorb pop lods nop lock add inc push popw ja stc out mov (bad) jp (bad) iret jge mov imul roll xor push (bad) out jae add fwait scas xor adc mov pop pop add inc into in xor push (bad) cld xchg lds jmp int3 aas inc push (bad) adc ljmp idivl pusha xchg add fwait jle push push xor out push sbb inc cmp mov add sub mov jecxz lcall pushf xchg insl in pushf and inc and imul jge jnp outsl mov xchg adc sub ljmp lds pop into test inc mov xchg pop inc icebp xchg ljmp mov aad lret sub in and shrl rcr jecxz fidivrl stc js sub sub inc enter repz cmc or adc inc mov mov sub sar (bad) inc fldt push mov lret mov dec xor ret int3 jbe ret fmul lea push fcompl and xchg std pop popf add dec dec mov shrl cmp jle cmp dec push in lahf imul cmp push xchg or jmp jbe mov fdivr jbe cs jno (bad) xor fucompp call sahf popf mov in bound scas mov mov ds lahf xor mov xchg or je mov mov mov push lock xchg lods bound sub mulb orl sahf insl popa sbb in inc jecxz rorb pop fdivr out cs mov mov and das xlat sub incl or xchg clc and aad outsl clc dec dec pop xchg xor inc xor pusha pop and div dec int and fstl orl inc notb and xchg cs arpl sbb xor cmpsl jp dec ret sbb push adc xor adc lds and iret mov cmp lods fildll push (bad) adc (bad) dec (bad) jg outsb cmp negl cli sub xor mov xchg and and dec xchg add mov enter xchg inc add push fmul pop cmp mov (bad) mov int cmp cmp xor and jno fistl and xchg fs movsl (bad) xchg or xchg ret mov (bad) ja outsb pushf cmpsl push push outsb in arpl pop fwait mov ljmp adc lret jno dec pop mov out xchg in iret (bad) xchg (bad) pop iret test jnp enter pop fnstenv push idivb jns pop push pop nop mov lds js mov (bad) cmp sub push faddl mov ja aas out mov mov sbb ret sub stc ja or xchg sub pushf jne sbb sahf jbe (bad) sub sahf jmp adc push lds pop jp cmpsl jnp outsl or pop lods mov std rolb cmp push mov xchg arpl pop add push lcall pop push aas js mov int xchg cmp fisttp fnstcw das loope xlat xchg xchg loope push mov or mov ljmp sub xchg mov inc jecxz int3 stos fnstsw popa pushf rcrb inc cltd xchg subb ljmp lret jns inc shl daa sbbl cmp pushf int3 sarb lock int cmpl adc imul adc stc les lods gs es jnp xlat xchg fadd loopne or add push test sbb pop xor adc divl je jg loopne sub cltd mov jle movl fidivr test cmpl mov push mov sbb pop xor cmp cwtl aam in push movsl ss inc inc aas add lods test lea das int3 loop sbb loopne sbb dec and ficompl aas pushf or cmpsb push xchg lea cmp aaa push dec fildl push xor add sbb jb or push pushf adc lock rclb data16 xor (bad) cmpsb shrb negb jg jnp loope imul outsl sbb adc lds cmp push xchg cmpsb leave jnp push jne mov call rep cltd ficoml mov aas aad or add mov dec je lret xchg or inc pop (bad) and xchg aas loopw stos cmp mov aas data16 dec mov ljmp push adc xor lods inc arpl mov mov mov and pop je dec lret stos sub ja cmp mov into imul pop dec (bad) mov in mov jo mov xchg cs stc insl cmpsb pop cmp jns mov aas jno and lret loopne mov outsl dec inc sti mov ja cltd in stc (bad) lds std loop jl adc ja mov enter fstpt loope add es push mov daa jns mov nop test call mov loopne loope mov jmp repnz call sbb adc pop xchg in adc (bad) hlt aaa and (bad) outsb xchg and push xor rorb stc dec mov aas jp lret out xor fs mov lcall ss (bad) xchg into lcall push pop (bad) jmp ja mov aam jp mov mov xor mov push xchg dec fsts xlat andb sti mov add and fimul and inc fildll call out insb sbb sahf xchg loop notb and inc sub jns xor xchg sbb fmull xchg js push cli (bad) mov jbe add inc pop jge and sub (bad) jecxz addr16 or popa add cmp js push xchg add inc fdivrl icebp sbb imul mov fcmovu aas lock xor xor cli inc clc sub dec popa xor pop mov sbb arpl sub fnsave adc inc movsl dec sub jge call ljmp push push jb (bad) xchg adc pushf incb xor (bad) je cmpsb adc mov jl xor sbb xchg mov cmp pop popa adc sahf stos fcompl orl cs test or das adc lret in push aam (bad) lock pop add mov push lods aas (bad) sarl adc rclb push in xchg sbb mov add pop data16 sbb mov sub arpl std or cmp or mov rcrb mov sub icebp cltd or inc repz std sub test mov mov and (bad) mov mov inc out mov icebp rclb gs mov les (bad) ja add cld mov (bad) jmp or loop ds jmp lret cs insb push mov stos push mov cwtl repnz sbb rcrl pop imul fsubrs or push mov rolb add js sbb shrl int3 sub cmp xor inc sbb div cwtl adc sahf add dec mov fcoml xor sbb adc lods jae mov inc dec sub mov push mov movb mov jbe ret xchg cltd mov mov mov dec in mov mov pop jno incb pop std inc fwait pusha mov xor xchg sub test dec sbb cmp adc dec dec push add scas xchg mov imul fcomps xor xor rcrl fucomp mov outsl add add xchg pop dec fcomi and clc and add inc sub movsl jecxz xchg or mov in push loope jns cmp mov bound test jb sbb roll ljmp fnstenv jb xor mov faddl icebp adc into imul mov xor and sub fwait dec mov lea (bad) movsb stc mov data16 mov jmp xor fisttpll jne loopne mov mov lea push sub cmp cmpsl mov shrl or into mov mov cmp es idivb pop mov imul mov int3 (bad) fsub xchg shr aad push mov xchg xorl leave jmp test xchg nop test sub jle xor dec neg mulb and insb dec fsubrs ret mov loopne int3 lods aaa ja jmp stos sub inc (bad) jns (bad) cwtl cmp (bad) mov lock cli xchg int3 repnz pop rcrb dec inc dec roll icebp sbb mov orl cld mov fdivl adc cmp aad adc (bad) outsl jp outsl scas pop pop xlat and mov repz stc out fstpt push ss lock mov in mov jbe ljmp leave sbb jmp inc (bad) ficom xor mov bound (bad) cmpsb jmp popa pop ljmp sbb cli pop pusha sbb nop stos mov dec xor lea mov and stos adc sub inc popa hlt sub adc out fcomps int xchg mov xchg fldcw mov aad sbb xchg mov xchg loopne in push and int3 and xchg dec ljmp orb es stc dec jl ss ret outsb sarb pop lcall fcoms pop shlb lds push repz push je sbb in call scas (bad) xchg sbb xchg loope add pop notb pop jo es mov pusha repnz inc or insl repz roll std iret sbb clc jb xor push gs push cs hlt pop scas mov lods out mov lret daa insb xor sbb sti cmpsl or nop scas out rclb test (bad) lret lcall out rcrl je cmp pop sbb aam loop inc dec add xlat das popf mov pop fimull sub fisubrl cld and add cmp sbb xchg popl xor cmpsb jle aas sbb xor push flds mov scas push nop cmp cmp inc pop sahf mov in jmp lock das add mov push sub xchg mov fbld xor cmp dec add xor push stc sbb pop sbb lret cmp (bad) (bad) mov arpl push cmpsb mov pop out xchg and call hlt pop andb insl sbb adc cmp inc in sahf xchg dec orb loope mov dec and clc enter fidivrl hlt jno dec movsl aas xchg dec fwait mov loopne lea xorb fldenv push pushf clc in add xor pop outsl test cmpsl mov xlat cmp je push xor ret xchg mov (bad) lcall inc xchg test pushf fildl cmc clc test aam sbb mov out imul icebp push imul leave jb sbb mov or hlt stos dec stc cmpsl sub push xchg mov lds jp imul lds test dec rcll ljmp (bad) popa mov add push adc test and mov ljmp push pop sub stc mov mov flds xchg aad sub jns sti imul and cmp push cmp cs jg push outsl mov xchg fs sahf ret jae pop sti sbb cmp rcl mov mov cmp fdivl test xor repz inc jno jmp add lret adcl cmp aad xor repnz inc stc cmp and aaa ret cmp lcall sub sub xchg adc aaa stos adc xor dec xchg sub jae fsubrl add (bad) loopne ret and aaa mov mov xlat enter dec mov test cmp inc (bad) setb inc cmp ja jae ficompl mov int cmp hlt sbb stos dec jb out test and pop dec sti xchg daa or aas cwtl imul je xor out pop add and fwait pop sub inc pop sub pusha lcall icebp dec xor ret andl jns fstl jae movq mov inc push pop mov ret adc testb pop arpl jl shrl imul scas push ret jne (bad) cltd push fldcw or mov data16 push jmp push add test sti rcrb test (bad) mov sbb adcb mov clc addr16 dec xchg dec lea mov add aas xor and mov and push in lcall adc movsl es (bad) fcomps in jp leave lods loop jo data16 xchg popa (bad) jecxz inc inc aaa pop cmp dec xor pop add scas push mov push push xchg (bad) adc (bad) sbb popf (bad) into mov mov enter adc fisubr jo pop cmp insb cmc pop mov jbe add jae jae adc mov xor adc scas pop mov sub jno mov and xchg fs jnp mov lcall sbb jg repnz and bound loope fiadd mov mov and sbb lret in rorl pop orb dec dec push sbb ficoml in jge out ljmp mov pop adc mov cmp icebp dec clc xor pop lock fistl outsl jno scas imul pop arpl (bad) jo cmp xchg push sti jl add inc pop addr16 lcall dec iret outsl xlat mov (bad) dec push sbb jp adc push jb push repz push mov sbbb lcall lea imul sbb scas jne cmc testb and addb subl fcmovnbe int out cmp adc (bad) lods js inc stos mov mov mov sahf stc sti push adc sbb pop out mov xlat cmp aas push cmpsb cmp cmp andb in cmp mov orps push mov push in push fwait (bad) pop jecxz aaa imulb mov fcom mov clc xor rorl test adcb in pop inc push bound loopne cs mov dec rol jns pop push push movsl call xchg mov sbb fisub or dec sub xchg sahf pusha fsubs jg sub xlat add dec fs lods das popf sub inc and test outsb das inc mov cld mov lods pop imul stc cs xlat and leave test xchg jg in sbb adc mov jecxz in push jno pop add mov add adc pop sub je xchg fcompp jne push aam nop in jg sti (bad) (bad) shrb xchg pop push sbb jb push popa inc jl les cmc or jo imul lock arpl mov cmc xlat fiaddl test sub mov fisubr add inc or ds inc adc jne sub (bad) cmpsb mov cmc push jnp cwtl pop outsl pop mov rcll xor rcll bnd mov imul loopne sub sbb fcos jno int mov mov adc loop lds lds or std xor cmp out test adc ret sub divb adc repz jnp inc fsubl clc shrl sub jae and outsl loope pop push sub xchg nop pop jp clc sub int adcl (bad) (bad) aaa mov jbe mov xchg inc fs mov push inc xor xor mov je scas ja adc arpl (bad) std call addl add out push jg shlb or add out mov xchg dec pcmpeqb inc pop aaa add roll std les and xchg mov aam (bad) jno das cwtl test lods mov xor fild push cmc lods dec jle imul test scas lock out cmp xor mov int3 push lret lret mov cli addr16 decb in cmpsl bound (bad) xor arpl mov and xchg xor test add rolb stos jl add jge jnp hlt inc popa (bad) mov je cli push mov xchg ret dec or xor jge orps xchg call aaa and dec and pop inc js mov xlat mov (bad) popa loopne inc mov shrb or push (bad) xor aaa rcl jno repnz insb addr16 cs cmp jo andl adc icebp xchg mov fisub cmc jae adc es pop pop lock sub pop in test mov push inc sti rcl lods into fldt shl rep das and mov mov add push mov movsl lods adc cmpsb repz jo xor mov iret inc xchg add shlb pop jg stos xchg imul test mov jne push dec rol loope jns in xchg pop jecxz xor (bad) pop push dec xchg scas notb and pusha push aas mov rcll sbb mov rcrb add pop mov inc push add test and lcall aam std aad mov test mov ja hlt leave dec into mov ja aad (bad) aas lcall test xchg stos cmp dec mov sarb push pop cmp adc sub (bad) divb sub mov sbbl inc sbb inc bound sar mov xchg inc popa pop dec mov fiaddl gs xchg ja add imul add xchg daa or adc test or cmp mov sbb xor sub inc mov out in or repnz test pop mov jne push das add xchg cmp inc xchg lret cmpsb pop mov pop pop insl pop push jo imul pop mov pop xchg mov dec add push mov cmp pop and mov xlat dec lret mov pop decl out mov add or mov aas repz divl xchg fs push mov xlat rorb and and out out mov dec (bad) pop pop sub lea jg xchg pusha roll mov pushf ljmp in out (bad) std jecxz cs push test jne mov inc mov inc xchg sub (bad) jge rclb xchg loop jnp pop sti enter imul data16 movsb xchg aad jg mov or outsl sarl in pop push repz enter adc sub add cmp aaa (bad) pop stc fs fs rcrl jnp push push jg mov jecxz,pn jbe dec and pusha cli les lahf adc jl push imul int pushw dec sbb mov lods (bad) push sarb or jmp xor data16 pop xchg roll push rol dec mov or (bad) ljmp inc adc adc in jne rcrl adc std sbb sub dec lods loope and lret divl movsbl jl add mov xor pop pop jle int sbb call sbb outsb jge mov cmpsl jecxz outsb rcrl imul (bad) mov cli addr16 (bad) mov dec les cld sub jecxz outsb cltd mov add xor fdivs repz fsub dec jb pop mov scas adc inc fsubrp ja fnstsw add xchg or push (bad) xor inc stc sub popa enter mov lea dec sub and jmp stc stc (bad) in dec jmp enter pop or out ret fisub lods mov push cltd add stos daa (bad) xchg nop cmp insb outsb and xor in mov push rcr jl in imul mov (bad) jb fbld xor jecxz and pop (bad) hlt or lcall pop in aas dec imul out jmp inc (bad) jae (bad) cmp jp mov xchg cmc add jb jae js test mov pop fs test mov or (bad) xor mov into (bad) sub or fcoml pop pop cwtl imul cwtl jle in or pushf divl pop mov cmc cmc jb mov or fwait push and lahf (bad) xor js lods sbb mov in inc (bad) jne ret sub push jp subl dec mov in adc pop mov fsubrs in inc jl sub hlt out fldl loope and out cmp mov sub inc scas sbb and add jp jo rclb jns inc mov push cli test mov aas aas pop pop fwait add scas insl jb adc adc adc pop sti outsl lret repz and rol mov inc imul int repz mov in dec add sub pop mov mov mov (bad) adc sbb pop int3 stos imulb (bad) jl movsb jnp and hlt sbb js ret pop sti (bad) or jns cmp mov mov sbb sbb adc notb adc bound fcoms jle aaa addr16 or inc add sub repnz (bad) addr16 dec mov (bad) cmp jmp add adc ja mov push push dec inc and ds (bad) aad jns pop mov and cltd js fdivrl inc mov jmp lret in mov sbb cs sahf popf ljmp push inc adc and or adc movsb push sub shlb cld jle ljmp loop jo je jecxz roll test sub ljmp scas in or out adc bound (bad) aas (bad) push stos (bad) fucom push ja (bad) dec frstor push loop pop mov lcall adc mov insl mov stos or cmp adc mov mov stc sarb fsubs sub ljmp inc rcrb xor cmp sub leave loope pop xor add call jnp aaa fbld sbb fisubl subl fwait pusha hlt sahf pop testb and inc adc pop icebp fstps sbb pop add jne jmp sbb lods or shrl outsb lods pop or (bad) jnp or mov or popa aaa icebp retw ret jne push addr16 push mov sbb idiv and push (bad) insl pop dec mov inc and pushf sbb jl lret (bad) cltd sarb call xor add cmp xor in pop fimul out movsb xor sbb dec outsb jmp and and inc mov and jo add ljmp adc hlt pusha scas or xchg mov enter and mov les dec jb xor leave clc lods (bad) es out and (bad) fdivs mov jp (bad) and fidivl jb insb test inc clc clc cmp stc aam cmc and dec dec js or lcall xor js outsb sbbb jne xchg sub sbb mov outsl int3 pop popa ja xor push pushl dec scas (bad) ficoml mov and and jmp inc outsb mov dec pusha mov hlt test mov out mov lock divl jae mov dec push in jb (bad) fnstsw push jno out imul loop movzbl loope xchg push push inc movsb out add and test sbb ja sahf and dec call (bad) lock dec jge cli pop and and jno jg sbb xor fs mov add ret outsb adc lret jecxz and insl pop aam add pop sbb dec mov inc lea pop add xchg mov ss fucom test and lcall xor movsl outsl mov movsl cmp lock out (bad) mov pushf dec adc pop and sbb sub or stc daa cmp xorl mov jns push popa jns int andl and test pop repz push lret jo sbb arpl push std loope push mov dec ret and or xor sub pop xor mov dec lahf mov mov jl jb into and aaa mov test sbb sub cli jge sbb mov repnz ljmp xchg xchg lea pop negb or cmp dec sub andl pop pop notb inc pop add dec mov push mov mov mov jbe lret or sub vmwrite je dec lea push or and inc mov mov sbb xchg fstpl jl notb jmp cld dec call cmp or mov jmp nop jl (bad) repz stos ss pop xchg mov xchg fwait andl sub es pop inc and push push push push xchg pop push outsb push jl and dec mov mov cs call cmpsl push fildl add inc cmp cmp inc ja cmp arpl rorl mov scas mov out (bad) sbb mov das cvtpi2ps or dec pop leave cmp repz adc add xchg mov gs fdivrl cmp pop arpl push aas sbb pop call roll data16 mov inc xchg dec faddl (bad) inc push sbb cld dec aaa dec aaa mov cmpsb hlt xor push mov jb dec mov pop fs cmpsl aad int3 outsl dec dec frstor push and call jecxz mov popf lock insl push lods lret dec iret clc pop popa xchg sub pop mov (bad) movd test lahf mov or enter (bad) ror pop and (bad) and xchg imul psrld sbb mov lds arpl ret mov test jo and jne xchg outsl mov add in imul sbb push adc or out mov sbb loopne lret fmull jne adcl loop fucomp xchg fidivl pop in xchg pop xchg in test notl pop ljmp mov pop lods sub push cld mov push leave fwait dec mov movsb lods dec push into pop xchg sbb icebp push cmp in adc mov sub sub sti pop push mov movsb repz pop sub mov sbb mov sub cmp jb leave inc cmp sbb insl jb notb sbb sbb (bad) xor push mov inc push pop cmp add add lods in and leave mov mov scas jmp add xor icebp fldl jl cmp push mov ss out rclb repnz fldt aas popa ss sbb sbb mov cmp clc xchg ror outsb add pop fcoms pop sub (bad) lods loop ss and adc scas rep inc orb cmpsb jbe loop sbb lods adc dec test aaa in jo scas ds sti call xor push lret shrb call mov lret hlt cltd dec clc push adc add daa sbb cwtl aas sbb addr16 mov push pop fs dec out push mov pop sub sbb jnp cmp xor jbe cltd addr16 out jg iret jno stos mov sbb enter pushf out dec dec scas adc (bad) outsb sbb lcall das lock cmp cmp iret lcall iret add sub insl fsts add jo loop xor in test xchg lcall fcoml cmp cmc dec stos scas orb push mov aad pushf cmc enter dec stos sbb mov add js push adc mov data16 test (bad) and add pusha popa outsl arpl dec dec movsb js fcoms pop das repz test xchg lea adc icebp dec std add pop inc in loopne push lahf inc insb xchg icebp in nop jb mov inc ss jmp sub cmp inc sub mov cwtl (bad) jno ret int lcall movsb (bad) aaa imul cmp out jle push fwait push mov push xor stc mov call das insb xchg movaps push in repz negl outsb mov insl cld xchg and sbb xor xchg pop inc cmp xchg bound test jge xchg xchg xor and or adc adc lock clc (bad) push push scas pop rolb and insl lea xchg repz inc in sub xor mov xor add loopne ss popf dec add jg xor lea jp sti js push pop test and jl inc es scas jge pop imul sbb push cmpsl dec ja sub pop inc fnop xchg sarl cmp or je mov in pop cltd adc imul mov mov aaa pop jb push jge xor push pop push clc sub cltd mov pop cld adc jo jp add pop arpl jo sub xchg cmc jns lahf xchg stos nop mov (bad) xor pop (bad) rclb shlb stos pop loope data16 inc and popf rcll leave mov lods jae hlt xor xor (bad) xor fmuls lret sarl (bad) out push aaa cmpsl pop add in mov fs repz pop and adc movsb call xor aad hlt daa xchg mov adc imul xor mov adc je imul sbb test cli call push sbb cmpsl inc dec das mov (bad) pop (bad) mov lret inc push xchg hlt dec xor jge jno or push or in adc cwtl mov inc inc mov scas in mov repz pop loope les mov mov pop and cmp sbb (bad) mov stos mov stos rcl dec inc mov or cmpl mov dec cs xchg imul jo xor pop icebp loopne sbb xchg mov add pop fmull pop pushf push fidivl ja outsb jne add idiv insl outsl xchg or call repnz adc mov mov mov arpl cs sbb mov xchg jb cmp xor mov imul push fidivl and jmp mov sbb pop jb mov bnd xor xchg aaa inc or and and (bad) imul (bad) test cmp jb or aad scas jle idiv cmpsb mov pop stos mov int push xchg inc mov (bad) sub ret adc idivb xchg (bad) and out sub xchg into popf ss iret leave and ja add jp jle xchg int dec in mov add dec cltd mov orl mov dec dec or arpl pop int3 mov out mov push cmpsl mov mov cmc adc mov mov lock mov in mov jns xchg ds arpl fdivr fistl push adc or xchg pop sub sbb lret insl and movsl and andl arpl jle push xcrypt-ofb cmpsl insb mov jne inc add fild popf pop cmpsl xlat cld push (bad) imull (bad) xor mov jg or insl out out ds dec cmc xor shrl sarl sbb insl out and outsl test fdivl daa inc lret movsl incl out cmp xor outsb arpl (bad) mov push dec pusha into neg cmp and mov insb pop sub sti pop out pop dec bound (bad) or jg (bad) xchg fdecstp or mov jp pop pop lea movsl call pop call jns lds and scas sub jae fisttp push pop pop and dec jg lods jecxz mov arpl enter es test jne gs shrl and fcmovb je pop out arpl out mov mov cld jne adcl sbb and mov daa adc cmp stos test jns adc sbb pop jecxz ret xor testb in sub rcll adc push repz int adc mov dec repz imul or fcompl xchg scas ret jne lcall fildl inc fsubr xchg mov push jnp (bad) jmp pusha pop jge sbb xchg push mov xor mov bound jmp and push xchg mov inc push add ss xor (bad) xor or std pop adc mov lock test rclb fst out sbb incb lret cmp out in cmpsl push fstpl xchg jmp push sarb jp or dec int3 cltd into jle negb lcall sub fstpt cmp sti push jl pop push pop push loop loop rcl in dec lahf xor es gs or fwait inc or in adc subl xor xlat mov aas xor cmp or sbb shrd cmpsb xchg scas mov add mov fcoml das sub cs jae and int jmp or je jae arpl dec bound xor push push add ret inc (bad) jge movsl push adc mov pop or jno jns jo push inc jns mov test dec stos inc out (bad) in pop shr or adc push lods pop pop cmp lea pop jb add or pop daa or xchg mov pushf or fsubrp jb pop les sahf cltd cmp test xchg xchg push mov stos inc sahf or sbb test lea in adc mov lods iret jmp add not (bad) and inc mov fisubr sub xor scas adc daa in fldt cld xor mov mov js cli pop ss out in adc or pop aas test std dec insb repz mov (bad) mov test stos jmp stos mov xchg jb sbb out jl pop insb jbe popa jle jb out mov sbb or fldcw xlat adc hlt pop fcmovne or icebp dec jae (bad) (bad) jo xor daa pop or enter rolb popf jle outsb inc gs dec mov daa push outsb clc call mov out add movsl mov pop adc dec push and ret lcall xchg cmp cwtl xchg in outsl mov into jl xlat jbe adc movsl sub add push pop and jbe and cmpsl xchg sbb addr16 lret xchg xlat mov jle jp rorl jl aaa pop leavew movsb xor xor or call out xor not sub test push (bad) fldenv or rcll pop dec mov inc pop ds mov (bad) popf test dec enter add or xchg cmp push (bad) or call cmp push xor dec sub ja push inc xchg (bad) arpl fcompl and sub push mov imul test lret lock mov mov inc loope push push shrb mov sar fwait adc xchg insl cmp xchg std adc bound jecxz xchg (bad) or lret or mov ja scas or daa inc in jb mov (bad) aam cmp roll xor addl push mov adc adc les test adc cld jbe lcall sub dec mov add xor (bad) jnp mov lcall sub dec mov sub (bad) sub jo push scas mov scas les aad outsl push xor xchg jge ss inc and adc (bad) fdivl and jmp mov pop repnz pop and (bad) repnz xchg iret fiadd add cli (bad) add stos mov xchg mov adc jae je adc mov loopne test sub sub sub sub cli (bad) dec push or daa icebp cwtl sbb (bad) push movsl bound sub add push fs in pop movsb cmp out xchg subb dec ja push dec mov stos pusha imul push mov jle push xchg mov addr16 popf flds cmp xorb xchg jmp cmp adc fbstp popa mov and xor pusha in fisttpll aaa inc repz je push faddl ja dec or out cmp (bad) jbe loop mov push mov fstps test or jae pop fdivl xchg cmp int3 cs and xchg into and lcall sub jb sbb aam jbe aam mov out cmp fnstcw mov or xchg stos cmp xor sbb repz xor out les (bad) idivl inc outsb pop push sub scas cs add and enter cmp sbb ja jne jo sbb push fcomip dec test cmc pop rol pop leave hlt in rclb orl in mov xchg bound imull mov add push (bad) leave inc aad dec or js nop cltd xor pop ret sbb jne pop jno test push das pop inc pop xor mov negl xchg dec fwait pop sarl xor sahf iret repnz push sub in push jg pop mov imul mov fs test mov add lret lret (bad) mov repz call jg mov add sbb jo jno lret xor jl adc ljmp mov or inc data16 adc cmp ja push pop mov stos xlat and dec jo cltd je xor jmp push pop or out lahf inc jge fwait inc (bad) pop mov loop lock dec push imul inc ss ret cmpsb scas push or mov cmp pop sbb pop ret popf fnstenv add mov xchg xor daa mov xor pop inc lods sbb lods add int3 lcall test sub adc mov sti jecxz xor adc int3 xor int and fwait mov popf mov add cli jg jmp inc les fdivrp hlt xor pop out xchg rorl pop clc add lcall pop testb aam (bad) inc test xchg mov adc jmp insb sub (bad) pop jl dec sub push push (bad) and mov cltd outsb push mov xor xchg and sub add arpl lret push ret inc mov cmp cmpsl add mov loop sahf jp mov out jbe std out pop insl (bad) xchg repz push fst or pop out or fisub dec xchg loop jae (bad) pop mov shlb test aad aad sub jl (bad) xchg aam in cltd aaa and xor jne jmp push out inc outsl cmp mov push jnp jg in fmuls dec push cmp repnz into ret pop cmpsl adc and out mov dec dec or mov pushf (bad) mov stc push repnz mov dec mov (bad) stc push xchg cmpsl sub rcll push stos icebp push scas push outsl jp cmp cmovb sub ret (bad) cmp sub and aad cld pop mov into decb sbb add std scas pop xlat daa addl outsl iretw test les aad jno popf enter pop sub add mov cmp or fdivrl cmpsl shl mov pop add fld test xchg push dec scas inc sub lret push jne scas xor dec mov lock aas and dec mov mov pop fdiv cmc cltd or lods xor push push jmp rol sahf stos inc push inc mov adc movsl xchg test sbb addr16 cmc or sub int3 push jmp ss and push push dec std cltd dec push cs jb pop ficomp dec fs (bad) xchg mov adc in inc repz sarb cmp rol out les lds pop fwait jae pop push testb cltd jmp not sbb out mull cmp sub mov daa leave lds jb loopne xor mov (bad) xchg int3 sbb sub aas pop cmp dec pop mov jo es push fisttpl ret mov and clc aad add rcrl push mov pop out movsl adc outsb mov movsl and dec mov push cs and aaa jp fcomps insl mov (bad) notb adc std repz xor pusha ret xchg dec inc fldl add jns pop pop mov loope cmc imul mov cmp adc cmp xor sub movsb or das pop enter gs jmp add jle in lods test push cmp push cmp add sbb mov cmpsb jp adc jecxz inc movsb lahf sarb xchg mov lock fs sahf rolb lds mov daa pop std jmp fistpl xchg push ds mov sbb lds xor lret fcomip fidivl sub adc xchg ja sbb (bad) fs jg enter pop jmp cmp cmp ss and or mov adc bound bound das lods into imul out xacquire mov pop ds pushf outsb fsubr insb insl hlt rorl add fwait lahf aam ror sub loopne cmp outsb sti inc jmp stc adc push mov (bad) dec sub nop stos xlat and jp cmpsl lret jne imul dec repnz shr pusha add dec lcall xor pop loope stc test in mov add mov int adc sbb cmc xlat pop push sahf mov (bad) pop ret test inc inc ja cmpsl mov aam xchg jae fcmove lock add mov loope scas dec jns push movsl or ja sbb mov sti fs inc inc faddp push aam pop cwtl pop jne jbe jle andnps dec or jle cwtl dec ds dec dec icebp add test (bad) xor repz adc push scas outsb push pop push dec inc cs lcall mov sub (bad) aam loop dec fs sbb and test lea xor cltd xor sahf int3 (bad) jle xchg cmp add (bad) daa xor dec ds push (bad) in fdivs sbb cli cmc dec jns push jecxz rorl dec inc push add rcrb outsl push inc mov pop jmp repz scas inc mov clc (bad) jb iret js das mov inc repz lret mov (bad) mov mov ret pop icebp xchg and paddusw mov out cwtl pop addr16 push sbb lods add mov jmp push je jae ja push push (bad) je pop int push cmp jl loop ja mov push ja ss jno sub enter adc mov enter ficompl or add stos cmp and and pusha push sub icebp push test or push mov movsb pushf cltd bound xchg repz sti and sub jae inc fs mov in xor test and scas jg popw xchg inc aaa loope xchg (bad) xor pushl xchg mov or add out mov jp daa xlat inc scas lret dec or mov fmuls imul mov ja and in jmp fidivrl std adc outsb test sbbl push dec add cld ss daa (bad) test jbe data16 iret push cmp jle shrb faddl and enter adc xchg aas add dec jnp xlat (bad) shr cmp xlat mov adc cmp jge sub xlat push and dec cmp fcompl es enter aaa xchg inc mov add push and fstps sub pop gs loope inc ror push mov and adc lds rorb dec roll out imul inc pop outsb in inc nop mov fiadd mov (bad) jae enter mov xor jge jae out fs pop mov xorl cmp pop lcall push jp call cli aas cmp cmp or daa lcall or pop mov pop lret imul xor fisubr jbe jmp pop inc das mov (bad) push data16 lret jg lods pop mov stc mov jl stc shrb or jmp not movsl inc loope push fistpl mov mov lahf mov lret cmpsb cs jp and addl fistpl shrb inc rcl test mov dec or gs lcall loope rcr mov xor daa (bad) push std jae add push fucomp or adc xlat xchg shrl mov fwait std pusha sbb in loopne dec inc outsl mov lcall xchg add arpl or jb push mov insb out orl sbb sub outsb jbe cmc fidiv inc xchg sbb (bad) ret rol pop into repnz mov or in fcoml xor pop pop pop fnop pop adc push fmuls or mov cld jp das into mov cmp out pusha jae adc fucomi sti dec aas xor jle inc or loop lods jge sbb mov xchg pop sbb cmp bnd test out mov xlat and xlat jmp daa and dec mov iret cmpsl sub test js addr16 imul mov adc int adc pop lock pop call inc ret mov mov and ljmp insl lods inc (bad) jge test shr dec pop mov enter adc std xchg mov in xchg test rcr dec or jae repnz in test or dec imul ret xor ds (bad) xchg pop cld jb mov and mov mov xchg sub push fcmovnu or add xchg inc push add call adc (bad) push cltd xor (bad) (bad) in imul adc adc xchg push sbb je push ss inc jge mov jmp mov push or cmp jnp je add (bad) movl popa in sub mov or xchg ret int in dec in mov jb and xchg and adc ss mov hlt push out gs dec adc add and cmpsl xchg into in jnp mov push sub leave sbb cmp push popf lods dec push or jno dec das (bad) (bad) out iret xchg mov add movsl inc mov xor mov lcall lret and (bad) mov in shl out aad mov jecxz cmp pop test jnp xchg and inc pop gs (bad) loope adc or (bad) cmc mov leave iret mov fxch ds cmp sbb pop loop inc aad push sub adc ficoml adc (bad) (bad) pop divl (bad) xchg outsb sbb mov fcomi inc xchg jecxz,pt inc ljmp lret dec cmp lahf inc and or xchg cmp xchg arpl jno rclb mov sti int sbb mov neg dec movlps adc imul sub mov (bad) jmp push mov pop (bad) mov mov xor (bad) frstor add into and adc decb inc (bad) (bad) out out pop aam mov lret pop fwait lret fsubs les subps repz push stos cmc lea insb add xchg inc pop inc mov dec mov in ljmp xor jb test sahf pop cmp jecxz cmp dec and push cmp fnstenv mov push pop out cmp push stc jnp pop mov (bad) lock js push jae sbb sub pop pushf dec mov xchg xor lret loop bound dec push insl je add pop xor cs out and or and fdivrl out pop int3 mov jae jmp mov movsb lock in cmp addl inc sahf es and push inc push pop fbld pop dec hlt cmp add cmp pop dec sbb push push cltd xor pop insl lahf cmp or mov ficoml and push adc sti sub fldt mov in mov popf movsl and das mov subl sub les mov cmp out pusha dec out leave out (bad) inc xchg push sub jno stc pusha icebp gs orb in xchg lods js xchg rorb push jb js push mov loop push nop dec (bad) pop fbstp or jb jmp loopne push push (bad) and (bad) mov or popa push (bad) in mov jns insb leave stos scas jecxz sub pop xchg sub mov xchg dec sbb out test hlt dec cmp test xchg test pop lahf test mov clc aam lds in mulb lods pop mov pop cmp stos js push scas imull adcb sub ljmp cwtl insb xor sub and jmp movsb ss je iret adcl xchg lds jmp lret mov mov push movsl arpl xor inc nop push pop jg lcall inc or arpl sub mov sbb std sub in or fidivrl enter or es mov xchg mov (bad) mov jg fwait stos outsl add int dec and repz or add orl mov sbb ficom sub rcrl jg sbb repz ljmp push rol addr16 mov inc and or (bad) xchg (bad) fldl outsl push cs mov xor push out cmp lods ja mov movb sbb mov outsb cmp neg dec mov in adc outsb xor jo pop daa ljmp in add pop test push adc xchg cwtl arpl sub add (bad) jo jbe jo adc adc push stos and dec sbb pop adc arpl and stos dec pop sbb jb adc pmulhuw pop lods mov pop sbb outsl fcmove stos mov imul pusha addb ja fiadd adc fwait pop xchg cmp pusha ret out lahf mov adc cmp enter jp and or mov dec daa repnz flds insl fldt fdivrp push orl pop icebp jbe fwait outsb scas imul sbb dec in aad fstps ss (bad) or lret aam fstpl pop stos pushf hlt fsubl cs cmp aaa push xchg fs jecxz das add (bad) repz xor arpl lods mov std push cmp fbld xchg cli add mov (bad) das pop lret pop cmc fs in or and xorl movl outsl adc adc pushf cmp or leave mov call cmp leave sub bound push movsb cmp (bad) jno cs xchg xchg xchg xlat jbe subl cbtw xlat jns aad or cli sub enter daa in fs jle das je lods jb and pop mov das add xchg (bad) mov in out xor sbb sbb jnp aas mov xor or ret push jns in or xchg test std out test fldenv push imul sub mov mov mov inc outsb adc insl xchg mov ds adc call mov fs fnstsw (bad) push or cmp loop push add dec rorw inc jns insl leave (bad) jbe lods adc iret dec sbb sub jb add jne cmp xchg out je add and rorl mov (bad) enter (bad) jns add loopne dec push outsl dec ret or scas stos or or pop cltd (bad) pop add mov (bad) subps scas shl jle out in movsl fldl out pusha (bad) lret fidivrl pop mov mov ret outsb jge cltd pop push xchg call sbb xor cltd outsb jl dec mov sbb xchg adc dec ss das sub cmp outsl pop mov dec sub xor add rcrl xchg out gs out imul xor fwait es push lea aaa xor or and adc adc dec mov xchg adc pop cmc loopne imul (bad) pop sbb or adc lahf jecxz movsb and iret adc fs mov scas into inc mov adc push inc add ror xchg cltd lods and inc cmp adc or cli ja add xchg imul jecxz stc iret sti mov js add cmpsb stos cmpsl xlat sub mov and (bad) lret adc xor dec mov adc lret and sbb aas and xor or mov cmc aad fs das movsl push pushl lcall repnz and cmpsb in cld jle fadd inc adc sbb or add mov push scas fisubl mov lret sbbl sti (bad) in xor int mov jno,pn xchg mov in mov inc loopne (bad) jb jbe xor jge pop (bad) into sub jae movsl pop sarl (bad) or ror popa inc mov sbb mov or test hlt bound iret inc insl sub in xchg jle mov int push xchg pcmpgtw xchg push daa in push in pop mov in mov test mov cld jmp dec push adc in inc mull push repz add mov in cmp ds mov stos dec xor mov ret leave stos xchg adc test std imul mov cmp mov les iret (bad) stos push push in dec jge jg push sbb cmp imul xor imul mov add xchg xchg imul inc (bad) movsb pop in xchg hlt pop fistl mov jno mov mov jp jne and mov mov jbe dec mov test jbe cmp out loope dec mov jle test inc sbb and mov shl mov insl insb dec iret fbstp xor xchg sub fwait cmp nop punpckhdq repnz cmp les aam and repnz loope gs aad test jg sbb test dec push add das mov sbb pop jbe cmpsl mov jp sub pusha out mov inc into movsb jl or xchg adc insb fidivr icebp push cmp cmp ret decl cmp (bad) int not shr call les ds pushf pop or inc call sub inc mov and (bad) int3 xor dec ja pushf push out sub addr16 sbb add sbb cli add aaa jle ds jmp jp adc mov sub mov in inc inc cmp loopne stos mov in jns stc pushf or inc nop sbb daa leave sub inc int insl sub cli clc scas push and ficompl fsub (bad) cmp push cmp cmp inc iret in call ds adc popa xchg aas cmp std add lds ljmp push xor mov outsl push pop xor and cli push test mov mov cltd mov clc ja and in call lods movsl and shrl daa lahf mov inc dec int3 add push push pop ret int and jnp mov lahf fiadd or int3 mov add shrb sub ja ljmp inc jl xor add (bad) cmp mov ret xor gs fistpl xchg stos dec fisttpl pop rcrb insb adc pop sub mov lahf jg jmp dec into lods jmp lahf mov lcall cmpsb mov mov sub pop fwait mov popa (bad) decl jno int imul out popf das pop test mov (bad) lcall pop mov lcall std iret jg mov add cs mov imul add sbb fldenv pop ret test lods xchg sub out xchg mov push or pop push jl jmp push jbe jb sbb stos fnstsw xchg sub sahf dec sbb xchg add in (bad) lahf divb cmpsl cmp in hlt in mull cltd dec pop mov sub pop sahf dec xchg cld adc lahf mov xchg pop insb test fstps pop push jae sub cmp sbb lock or mov mov notl fnstsw push negl into rorl jnp sbb fisubl mov sub xlat pop or daa cmpsl mov and (bad) mov loop aam ds push movsl imul xchg jle in enterw cmp jp mov gs push pop and fwait sub test scas sub and mov outsb les int3 and stc cmpsl (bad) and outsl and stos scas fucomi or out mov insl add cmp adc addr16 ss mov mov jae dec adc pop mov jnp or push adc divb add lcall pusha xchg push push and jbe icebp aam inc mov hlt insb ljmp cmp add test pop insl jbe pop or jg sahf and pop lcall scas add sub inc cmp adc xchg (bad) into mov iret fwait add scas addr16 mov xor jo mov stos lcall nop jbe fadd lock hlt add das repz nop xchg mov adc std add jmp daa imul adc push adc add mov xor cwtl std (bad) cmp je push cwtl mov pop dec jmp movsl ljmp dec jecxz sbb mov push movsb mov adc ja inc mov mov push add (bad) insl jp mov nop xchg mov dec ja mov je inc ret sbb inc pushf imull cmp mov in adcl fcoms bound ret mov xchg sub dec mov loop loop cmpsb mov nop sub mov xor cltd fcmovbe push lret cld js or scas les fucomp test mov xor fcompl es or push (bad) sbb cmp mov loope push dec icebp test push mov aaa insb xor jnp dec ret xor fild adc enter cmpsl arpl andb sbb ss jae call sub (bad) push or mov (bad) dec lock pushf jecxz dec test pop (bad) icebp subb jmp call push cmovb inc mov int3 ljmp repnz mov xchg or das lock lods aam mov dec das add cmp rcrl je test js lret in ljmp cmp fsubl fidivr jp pop rorl push push dec sub pop dec lods add adc pop pop xor ja pop jbe repnz push dec mov in mov lahf hlt push inc call xorl outsb out and inc mov cs inc es test cld bound adc xor lret js add sub and movsb add adc cmpsb aam popa cmpsb cwtl in inc mov imulb repnz (bad) xor fcomp bound mov adc lock rorl popa add or add mov or mov loopne clc push sbb stos jecxz jp test mov pop xor imul fucomip xor xor and xor test lds scas fwait (bad) adc jnp add cmpsb add add out or fsts outsb and mov jecxz sti jecxz fwait mov out mov ret cmpsl out sub (bad) fimull sbb cmp dec add adc outsb push fsubs fildl cmpsl aas and mov push sbb push dec mov arpl xchg dec es (bad) cmp popf push cmp dec and movsl imull mov test fist add inc pop xchg sub (bad) push stc cmc outsb pop sahf cmp pop cmpsb add lahf out inc mov xchg or push cld inc (bad) sbb mov ss fidivl cltd add sbbb jo sbb loop jmp negl or ret sahf inc cmp add lock add sti jnp cmovb lods or sub push adc pop cmpsl jg insl fnsave orl ja (bad) inc dec imul pop addl int loopne jge jmp xchg insl adc add and mov sub lret and loopne,pn repnz and ret push loope jns sub add sbb mov or or mov test in inc popa arpl pop std dec and ds jmp or pop push inc pop jl cmp (bad) dec and push call and xor bt xor mov call add push pusha mov lea jmp jmp lahf lea push jmp out xor jns cmovb movsb movsb adc (bad) mov mov jl cmp inc rolb cs or fstpt and pusha loopne sub addr16 mov or sbb loope loopne push lar cmc add and jnp lds and cs inc mov inc lods ret jne push pop push pop std or jns popf inc stc sahf push pop cli sbb xchg lea leave mov or add stos adc jmp cmpsb inc inc xchg push std adc sub add dec add shrb add cld popa mov cmovb push pop and mov cmpsl inc push sbb ljmp aaa inc pop mov push outsl xchg loope cld dec and test inc push test add jne loop push adc sar push pop ds add (bad) in inc jle xchg hlt rclb into aaa push iret mov cmpsl dec aad out inc in hlt ret (bad) cmp sub dec sub jnp in jno call inc mov jecxz cmp js jb arpl in mov add sub inc mov sbb idivl (bad) xchg scas add cmp rcrl jl cmc dec aad cmp dec clc not cmp neg cmc jmp lea jb cmc movzbl or dec call movl push pusha push lea jmp das jecxz frstor cmovb adc xor jmp std inc movsl cmc out fcmovnu or mov inc add loope mov dec stos and dec ds xrelease dec cltd cmp imul je (bad) out push push mov fisttp adc jb cmp jno push xor sarl sub or mov sub pop mov mov test xor mov (bad) sbb fbld sarb testl jle push push rcr arpl shlb into repnz std dec mov sub in or add fs imul add mov mov inc shl mov cmp cmp jmp enter and inc imul and movl cmp or lock mov stos and cwtl add imul (bad) sub mov sbb inc aam movsl add (bad) xor outsl fildll add clc das mov cmc push arpl dec aas mov test lds (bad) into ja dec push jg stc or xchg scas xchg mov jecxz sbb and bsr pop subb mov fiaddl loopne sbb sub adc mov cmovp mov lea pushf mov mov sbb xor lea mov neg lea shrd dec or mov (bad) lock sub not stc jmp mov call rol dec mov pusha pusha pushf test shl jmp lea je cmp cmp pushf call and sbb rcl mov clc (bad) lock (bad) setne pushf add call pushf movl movb mov mov pushf push pushf pushl ret cwtl pusha mov pushf call lea lods sar bt push cmc neg setge movw inc movzbw inc shl shld cmc neg bswap pushf dec not shr not stc sar neg call rol cmc or sub pop call mov bt clc pushf cmp cmp mov lea jb and shr or mov rcl mov bt cmp cmc stc shl jmp and fisttpll cmovb inc ret pop rcl push add xchg cmp movsb mov fadd mov rcrb push inc push push push clc push mov repz pop sbb lods stos outsb ljmp xchg mov sbb ja iret jae inc lret jbe mov scas test sti je (bad) scas lds push fmuls xchg inc xchg inc xor cli push push mov pop xorps dec aaa sub ret push cmp add out cmp mov xchg cmpsl cltd (bad) jae sbb repnz jg das ljmp pop sub push fistl movsl mov or adc call sarl test cmovns push mov lahf movzbl pop pushf mov call mov setb not lods jmp mov stc mov test movb mov cmc cmp jmp pushf sbb mov call adc arpl jmp (bad) jge xlat mov aaa shr and fcmovnb jns mov adc in sbb push mov rorl icebp sub daa mov pop and test and adc test (bad) roll xchg mov and xchg cltd insl iret push je push pop jno or ffree pop decl popa enter ja sti bound shlb push bound mov cmp xor lahf jo push sub mov sub mov sub pop jb mov fldt cmp add lret sub test bt mov clc ror mov call test pusha pushf jmp cmp cmp mov push jmp mov xor cmovb cmp push (bad) popf lret imul mov lods das ja lock and mov adc sti jecxz pop xor jge sub scas daa movl push je hlt push inc not dec leave or jae and hlt pushf div cld (bad) (bad) std mull push push push test mov xchg ljmp js fdivl inc pusha mov call and jmp (bad) jae mov mov xchg frstor xchg fidivl gs pop incl ss dec (bad) xor data16 cmovb imul adc rcrb insl cld add lods xchg jb cmp cmpsl xchg or xchg cmpsl ja aaa mov pop push (bad) cmpsl pop cmp rcll pop jg dec cmpsl push xchg sub fnstsw pusha xchg sub mov in pop ret test (bad) cmpsl sbb pop fild int xchg js xor test negb xchg or jg xor sbb and add dec or push std push push jecxz aas lods out lret push js hlt sbb inc lea je clc add stc cmp pusha movb pushf lea jmp mov test cmovb mov cmp push in and test pop ss (bad) (bad) pushf mov sub add loope pop add xlat das iret dec (bad) aaa out push mov jo push test pop cs and jae cmp jae mov (bad) in xor sub jnp cmp aad leave inc pushf lods iret daa cs fadds mov inc stos int3 add jl push mov push and insb push imul add (bad) mov mov cmp pop lahf pop fucomp ja dec or js (bad) frstor cltd hlt push ds inc cmp add arpl and imul push lcall js mov sbb and xchg cmc mov ds ret popf cmpsl add imul xchg je (bad) daa jne fisubl mov jmp rcrb push pop and push xchg add xchg aas jp push rorb push push fldl gs dec jbe push xor neg jno mov dec shrl inc in movzbw (bad) repnz stc sub data16 repnz xchg mov bt mov push jmp lea movl pushf lea call pusha mov push pushf lea jb rdtsc shr bswap movsbw movzbl data16 repnz movzbw imul test add lea test test setno rcr push sar rcl shr mov push mov inc mov shld shld xor and mov test clc pushf cmp lea jp pushf lea jb clc movsbw aad xchg mov shr sbb cmp not sar add mov neg bsf add inc add movsbw not setb cwtl movsbl pushf pushf lea jmp cmp imul jl clc mov xchg lret mov leave xor xor xchg in cmpsb jb pop iret hlt setge movsl adc adc movsb movsl stos popa sbb std xlat pop rorb add xchg pop repz outsb adc outsl inc loope cmp cli test jg jno mov jmp rsqrtps nop xor shrl lods rorl add push sbb jae push xchg and arpl outsl sbb pop (bad) ja xor jmp cmpl aam push add and mov jne xchg push movzwl dec pop in inc rcl (bad) xchg pop xor lds sub popa cltd jmp aaa mov sbb pop lret and stos movsb mov mov inc hlt adc insl gs ret jno xchg jge,pt aad sarl enter mov hlt test or pop daa fcmovnbe mov adc test lds mul cmp rorl ret popf test std stc test cmc add stc inc add jp mov adcl lods push jnp popa xchg and mov movsl lea setns mov bts movsbw shrd shr push mov rol mov test bts pushf mov pusha pushf cmp pushl pushf lea jb sbb lea shl shl mov sbb jnp neg not sub bt mov cmp add push movsbl jmp pusha lea jb pusha pusha call xor pop mov inc sbb outsl call mov leave inc test in cmp out roll or dec outsb mov dec xor mov pop dec mov sub lcall dec mov das ret mov cmc (bad) loope xchg lods sub lret ja in add add add fiadd (bad) ja or loopne dec sarl pop repnz test xchg cmp jb adc mov push xchg push test leave xor dec pop rcrl lea call clc bt cmp pusha pushl mov movl sbb cmc clc lea pusha bt mov btr xor mov (bad) icebp sbb lea pushf add pushf mov dec sbb not not xor test inc test add seta call pushl lea call pushf mov adc pushl lea jb cmp cmp push xor sub cmp test not push call cmp lahf lea movl movzbl lea movsbl jmp clc mov stc test cmp jmp push test push call shr pusha adc test stc test pushl sub call pushf push pushf mov jmp add sar mov movb pushf push test mov lea je pusha cmp bt stc sub bt movb cmp call call test push test xchg and add pushf xchg pushf lea test sbb pusha mov or stc setno neg not neg rcr cmc add seto setns not not rep lea mov movzbw not not mov jmp add cmc stc cmp cmp movw lea jb clc cmc cmp push pushf mov mov lea jae pushf neg mov xadd clc ror mov jmp call lea call pushf add movb cmp pushf cmp cmpl push lea jne cwtl setp lea call pushl adc pusha pushf pushf push lea jae stc movsbl rcr ror pop pusha add mov cwtl and ror xor mov shl inc pushf dec cmp not movl movsbw mov mov jmp pushf jmp sbb sub rcr cmp or mov bt jmp and and scas adc xchg je sbb jl dec xchg js dec test mov sbbb push push and lods pop (bad) xor (bad) idivb cli jp push fstpl es mov ljmp xchg and mov fnop loope nop jg shl roll add subl xor xor nop adc cwtl cmp (bad) pop jecxz cld push (bad) cli xor rorl repnz out pop xchg aad or jle inc mov ror aad fsubrs ret sub xchg cmc xchg std pop mov rcll in dec iret (bad) pop imul mov jg push sti sbb fistl pop mov jmp xor inc repz mov out pop das fildl push xchg jns mov (bad) push fsubrs jp push sar fsubl inc lock (bad) pusha jle sbb mov cli sub ljmp inc sbb cmp repnz fisubl in jno lret fcomi sub inc and mov fwait jnp inc jne or pop frstor lret lcall (bad) jns pop std mov orb cmp pop lea jb cmp cmpb push lea jne jmp mov push lea jmp mov cmovb mov push cmc icebp rcll loope inc popf mov dec cmp and jl mov mov mov jb iret repz loope adc in scas les jle dec inc bound fistl movsb je xor xlat push stc loope dec cmp arpl inc das fistl add cld jecxz shrl pop lods movsl xor nop pushw and jmp cmp add out daa sub push leave jp aad inc fidivrl push mov je cwtl test imul leave mov pop adc sub add add lods js cmovb dec mov mul fmull out fimul jbe sub and push cltd dec lds scas clc insb stos add outsb in (bad) out test (bad) xor adc push in xor or push movsl fs fild cld lock repnz loopne fidivr loopne movsb imul out mov cmp xor pop dec lds scas and sub scas add movb outsb je mov add mov pop and pop dec xchg push xchg push push or mov inc mov ret (bad) out push sub jl sbb xchg sub psrld mov jle test rorb cmp ret mov mov shl lea call adc sub jne mov sub pop pop ret cmp pusha pusha push pushf lea ja cmp jmp jmp es and cmovb loope add pusha xchg xor sbb pop shrl popa test jmp imul std dec loop imul movsl adc xchg dec pop inc cmpsb push inc and inc or pop test repnz xchg adc xor mov nop xchg adc addr16 daa int mov sub mov idivb aaa adc in push lods push sbb cmpsl out push adc and lods push push push jae out (bad) enter jg xor clc dec mov out mov mov mov nop mov mov mov lea jmp add lahf xor inc sarb insl lds imul mov mov xor iret ja dec fprem1 je,pt packsswb ficomp call xchg into add xchg xchg sub clc int3 out xchg scas cmpsb out pop cli sub push or sahf scas movsb mov push sub (bad) movsb jge adc jne cmp adc add mov jl jmp pushf inc movsb jl imul lahf jmp aam icebp pusha mov cmp xchg mov dec xchg xor fucomi push test ret cli dec push mov or sbb cmp add test pushl pushf pushf shr call gs scas jp cmovb pusha lcall insb mov in test out enter (bad) fwait sub jb data16 mov movsl inc xchg test adcl jno dec arpl pop (bad) fisubl movsl xor lea lret cwtl jge (bad) cmp adc jne and movsb cltd mov sbb sbb xchg out cs pop clc and (bad) into leave loopne or out mov ret sub outsb mov lds push test push push icebp dec push pop icebp pop out cmc je jo inc leave mov push loope inc sub jae lcall bnd int3 cmp leave fcoms lea jb pushf bt xor stc call fcompl out cmp jmp cmova aaa fildll pop xor pop test sub xchg mov les dec jbe es inc mov fdivrl (bad) pop setne popf push cmp (bad) mov xor dec (bad) std data16 push lds movsl into cmp cmp adc bound xor test lock and pop pushf popa bswap sbb add mov fxch inc pop insl and pop loop std fs leave nop fcoml sub jae sub push jge adc xchg push add lock push jmp sbb in cmovb sbb pop lret loop int3 movsb jle jle cli dec push popf iret repnz cmpsl mov or mov xchg cld and inc xchg imul popl mov test or aam mov push jg mov add cmc shrb adc pop (bad) mov or (bad) clc xchg jns mov pop pop data16 sbb add lret popa lea adc or jl push fmull and sbb mov pop scas cmp loope mov mov mov movw lea jmp mov jmp add cmc pushf rcl cmp shr bsr shrd xadd mov add bsr and add pusha push movzbw pushf mov call lea pusha lea jmp mov cmc test pushf lea js je cmc dec not add dec movzbl stc shrd mov clc jo add test stc cmc mov call xchg bswap setb movzbw lea pusha pushl lea call push call pushf mov call dec pushf clc not clc pushf movw neg call mov pusha movsbw rep movl mov lea pusha mov not pop lods cmc neg movsbw pushf inc call jmp mul cmpsb cmp inc xor out fwait jae je push insb add push inc stos shlb dec mov fcmovnu out push in lods loopne sub nop outsb add inc lods in ret sarl leave sub popa mov or mov xchg inc pop pop xchg pop xchg data16 and mov push fadd aam sbb mov mov sbb stos ljmp and mov sub adc fidiv in xor cmp push inc in lahf jbe or es mov cmc imull xor cmp xlat mov mov add xor mov xor les jp testl adc or push jmp js xor aaa ret inc imul pop mov popf scas mov mov push inc mov iret mov cmp sbb mov mov mov ja loop (bad) xchg into insl lcall dec clc rorl adc adc add stos pushf lea call jmp stc cmc repnz pushf movb mov jmp sbb xor mov bt call sub mov pushl push cmp pushf push mov pushf lea jbe adc mov clc add btr add add sbb btc mov inc call jmp stc mov (bad) cmp inc cltd repnz mov mov and push bound inc js and in dec and jo clc sbb xor sub inc pop jecxz lret inc mov lods insb mov jo inc mov icebp fwait ds push cmp mov les mov out inc outsb (bad) xor in jmp (bad) and mov cld inc in sub xor ljmp jecxz loop (bad) gs aas dec or xor pop loopne sahf ret cltd lret xchg imul xor inc movsb sbb dec adc cmp cmp adcl add push movzbl movzbw mov lea jmp jmp cmp pushf cmp add bt jmp pushf jmp pushf test cmp pushl lea jae cmc pusha add pusha push lea jno mov pushf pushf pushf pusha lea jmp pusha mov pushf pushl movw pushf lea jmp dec sub cmpsl ja pop pop gs decl adc daa mov int3 repnz push jns test gs lea cmp pop dec pop fidiv cld jp and pop and jp pop mov lea adc cmp xchg fwait lahf sbb jmp jle aam xchg push cltd add (bad) push inc out mov pop es ja addr16 push aad (bad) pop in daa ret (bad) mov (bad) jmp xor add movups or mov push jb movsb aaa int lods cmp cwtl and xchg test cmp inc loopne jno inc imul pusha test adc sahf nop (bad) sbb push loop inc sub (bad) and jmp mov pop loopne pop xchg lahf and or (bad) iret dec nop dec jnp clc (bad) inc aas and or cli ret lret push jae xchg and jl aas sub and pop inc popa xorl ljmp cltd jmp sub cmp xchg dec in xor js mov and xor adc cs sbb dec mov mov pop dec lds sub dec out pop inc out or cmpsl mov icebp push dec out push repz inc int3 dec fwait inc or sub mov mov adc pop lahf rclb add rorb fdivrs add enter push imul jb pop andb lods push mov cwtl inc ret push or test aaa loopne clc out (bad) (bad) add dec adc ljmp push es mov sbb xor or movsb nop sbb or aaa (bad) cld inc stos (bad) (bad) shrb stos dec mov fstl mov jl jle js test lret jbe call leave stos or stc lret stos movsl inc inc fisubr add dec mov fstpl popa fldl xchg jle mov (bad) imull or pop ljmp rcrl inc mov test bound gs outsb push mov push shlb lret xlat iret ja ret std popf stos (bad) test adc test mov jg inc roll (bad) sbb test aaa cwtl loope lcall dec xor ljmp add push or aam enter leave in (bad) dec aaa cmp je pop mov inc or push mov mov imul bound inc sar pop push fdivrl cmp xlat popa sti dec leave outsl je xor fsubs loope aaa ret repnz scas inc pop cmp xchg lcall sti fwait pop loope divps mov movl andb mov sub sub mov mov ja lea daa jmp dec mov into add fnsave loope add fdivr xchg lods cmp out lea movb aam rcrl and cld repz xor nop enter mov pop pop pop fnsave cmp mov mov insb out out mov jae push cmpsb add out fisttpl xor out and cmp dec push or sbb mov pushf into adc dec enter inc adc jg fstpt adc loopne imul stos mov mov pop ret xlat adc icebp aam cmp pop ja shl xor push pop push cmpsb mov cmp cs gs pop bound cmp in cmp into into add lret les fmulp out fisubr mov out cld xor cmp insb mov lock in push fcmove mov (bad) dec jns (bad) inc inc mov lret sbb testl inc pop sbb popf iret dec sahf outsb or arpl adc ret call push imul xlat popf int3 cvtps2pd bound aaa push rorb dec or cmpsl add sbb lods dec cmpsb shr xchg inc and leave (bad) mov ja sar cmpsl push js (bad) or addr16 mov fdiv iret or sbb push mov out sub add sub pop cmp jle mov scas outsb mov pop iret cld xor push bound add rcl int3 inc arpl cmp pop dec xor xchg pop xchg sahf in std jb popa sbb xor out (bad) divb in adc fmuls and xor stos gs fisttpl test fs pushf pop mov sbb incl rcrl or in xchg xchg adc data16 lahf mov mov out lret insb dec xchg xlat jno cltd pop arpl popf punpcklwd cmc pop inc repnz (bad) cmp sbb fxch fisttp mov notb jle adc dec std pop sahf mov daa js rcrb inc cmp fsubr xchg inc std loopne xchg aam pop idivl rorl adc jno int3 ja add cmp in (bad) data16 jne mov mov insl test cs add ljmp jbe loopne jae mov mov out push jecxz push in sbb test push mov fistpl cmpsl test or push adc hlt imul hlt push lods inc icebp xchg xor loope sbb andl cmpsb sahf nop fwait pop xor jp imul cmp xchg push mov and adc xchg xchg jb pop arpl nop (bad) bound ret add mov pop daa out adc xchg sbb sub inc xor xor in pop (bad) in mov loop jp xchg push std dec adc loopne sub pusha adc flds fildll test lret xor xchg mov mov test (bad) jae pushf cmp add adc inc aad aam xor movsb enter cmp call imul add inc loopne jge sub inc stos inc push xchg jne jbe push out scas mov (bad) mov jno add (bad) out popa jno xchg mov sti (bad) add cmp xor test scas es and loopne arpl mov push mov sti lret add mov xor test ret mov dec and test cmp jl test jmp stc (bad) xor add fisttp xor (bad) insl sahf (bad) test mov or out lcall jne inc or mov mov mov ss cmpl fcoms data16 jo leave jmp jnp (bad) cmpsl iret sarl xor sbb sti idivb pop out xlat imul mov mov inc sbb mov arpl cmp bswap adc data16 movsb mov pop (bad) xchg std xor cli cmp scas aad in mov xchg push cmp cmp fisubrl (bad) (bad) jae jb loopne mov into sahf outsb sbb int3 mov dec cmp cld sub (bad) popa mov lahf mov in mov sbb sti test mov xchg (bad) mov lds icebp mov sbb push sbb and adc add pop icebp mov fs or fdivp outsl add pop dec mov fwait test int add ret out cwtl not test mov iret aad fisttp pop pusha out repz cltd pop stc shrb ret shl mov jne and lods jecxz xchg push (bad) imul adc dec push mov ds test inc inc xchg (bad) frstor inc push sbb cmp add add cld aam (bad) push pmaddwd test test pop adc mov xchg sub loopne add cmp pop lahf mov enter je push sbb out inc and fs push cmp fucomp cmp mov pop mov cs hlt mov ss add pop mov decl add cwtl leave inc cwtl ljmp insl je sub add fcmovnu add ja loopne inc inc outsl xchg dec fstpt in repz sbb inc xor pop jmp insl scas or ret mov push lods stos test test mov and jmp jge fs (bad) je xor out (bad) lret and scas add (bad) arpl (bad) inc jnp in mull cltd call inc sub hlt lret mov mov mov add and je scas sub fdiv pop cmp or fisttp xchg clc or sub sbb sub pop ja aad pop xchg push sarl nop and subl (bad) push pop imul std (bad) mov lods cltd xchg push and push loopne int3 les fnstsw cmc js leave fldt mov mov into cmpsb loopne xor out sti insl pop mov test sahf int3 sub xor mov pop mov ret push mov and rol xchg jmp adc cmpsb mov nop xchg jg xchg popf cld xchg cmp sbb scas xchg (bad) rcrl mov adc mov mov lahf jno jg xchg shll bound mov fdivr (bad) jae fcomps (bad) fldt loopne mov sub xor xor sarb cmc cmp das ss ja pop jg jbe (bad) xor nop (bad) xor jl mov and jg and mov js insl push (bad) ljmp in pushf jbe pop addr16 repnz out dec pop notb (bad) lock and dec and push add pushf sub mov cmp dec insb cmpsb and les nop int inc (bad) jo xor dec jnp jmp sbb clc lock cld mov jge and imul movsl repz fnstenv mov je sarb arpl enter out cmp xor add cli mov test inc in sbb and iret fwait mov sarl jo iret andl orl lock mov lahf sbb pop fwait loopne repnz popa push fnsetpm(287 mov (bad) jbe mov sbb and mov movsl cmpl and repnz push or aas cmp cs insb xchg rorb jb cmpsl push call fsubrp mov fidivrl mov ss es xchg pop mov xlat aad nop fadds loope clc mov inc jbe mov push cmpsb repz cltd ljmp arpl jmp dec add xor std loop daa add and inc mov xlat insl lcall outsl xlat xor mov insb jb gs test add mov mov leave scas mov mov mov mov shlb cmp mov push stos es fwait idivb (bad) adc in repnz ljmp rcrb cwtl out sarb es pop subb mov cmp push push cmc xorl push imul inc shrb xchg add sti jns push push adc sbb ljmp dec inc in mov (bad) xchg mov push in push inc (bad) and or test cmc and add sahf inc xor inc repnz lahf int adc push push and xchg cli sub jecxz pop cmp dec clc nop sbb sub cmpsb cmp mov adc imul mov inc lret push pop sbb xchg xchg loopne cltd xlat hlt movsb fwait (bad) (bad) int3 (bad) jne in outsl add cltd push mov mov (bad) aad in repz es pop xor jp xchg out ds out je xchg add lea daa sti or cmpsl repnz jo mov and jns std lds xchg inc jne and in and leave mov (bad) jnp test cs into nop jl push and scas imul mov das push (bad) mov popf pushf sbb mov mov and ret xchg xchg and mov pop sub adc (bad) fs nop movsl (bad) arpl jbe add rcrb popf xchg or xor cmp movl sub test and (bad) pop cld sbb int3 push mov adc test adc sub mov test and neg out xor dec dec mov (bad) xor shll add lret fsubrl shrb and xor sub insl mov das adc sarl sub adc das sub push invd sarb mov push and test pop cmp std sbb push cmpl mov pop sub lret add dec mov push pop jns test in pop in (bad) jo push cmpsb mov (bad) idivl jge mov stc hlt (bad) mov out xor mov int jl pop fcmovbe in mov jle sub imul in loop into sbb cmp push mov adc mov push stos into push outsl repnz mov inc jnp jne stos and mov cmpsb fcmovnu or cmp imul mov jne aaa sbb jmp stos pop arpl mov insb in sbb jmp mov jne ds leave scas push insb mov xchg pusha pop push dec fisubr rolb adc sarl add sub das ret push pop mov (bad) iret popa lret je mov mov add fdivl pop push es scas pusha or (bad) jnp (bad) in ljmp sbb cmp fsubrs pop into pop push outsb push pop mov xchg mov xchg fsubrs gs repz and push sub test mov push out int jg inc cmp pop stc push rclb xchg movsl rcrb sbb push popl (bad) into pop icebp in shr jge add popa cmpsb adcb sbb sti xchg adc add loope and push sbb (bad) jb mov add jne into decb in in pop lods jns ljmp insb cs imul jecxz jg dec rcll mov test addl aam push jne adc sub and clc jmp psubd fmuls into or hlt and repz cwtl xchg nop and jp popa inc and adc test xchg or inc or xor jns hlt das or inc ss lock arpl lods inc mov nop rorl and and adc sub xchg or popa rclb in push pop in mov push (bad) cwtl dec ficom push pop sbb pop push xchg xor rcrb sbb call test movsb movsl loope or add dec sub push adc mov (bad) xchg sar sbb mov cmpsl out fld xor div sub mov mov in mov xlat mov or push xchg mov ret rol pop sub mov clc popf icebp movl and ficomp aaa lret mov dec loope mov movsl mov jl sbb mov sbb sbb lea jecxz mov cmpsl aas ds aad jo aaa lret sub imul (bad) adc sub sub jg dec in dec add lock notl pop std cmc xchg jno dec jno icebp cmp insl push daa and sub das lea inc jno fchs (bad) or push repnz add out push xchg dec xchg loope scas and cs (bad) push ret push inc inc imul lds dec rcrb xchg jb mov inc adc sbb (bad) inc adc push out call jge mov lea (bad) mov jmp leave (bad) cmpxchg sbb in xchg adc pop ret jl lret aam cmp jae fimul mov jle sbb cmp push jo and jp adc xchg das adc andl jb push lahf rcll inc repz push loopne jnp call cmp jmp add mov push mov lds inc in push dec mov lock inc lods jg es fildl xor and les lods (bad) mov adc stc loop rorl int lret mov dec inc test dec aam addl push pop and cmp movsl addr16 sbb dec or sbb xchg mov ficompl jne test sbb jns mov inc jge popa bound dec jns negb inc jnp clc xor cmc and sub add adc mov gs outsl sub sub cmc push data16 dec add sub mov sbb (bad) fdivl scas clc push in insb cmp aad mov enter sub in or sbb push rorb pop insl jl pop xchg xorl mov mov or test dec es pop fldcw sub sbb mov inc stos lret push lret es inc add mov adc sub iret aas test (bad) mov cmpsb jno scas inc arpl jb push enter sub mov add movsb lcall fbld dec (bad) mov ja aam jecxz adc or clc test push or sar sub add notb imul or negl aad lea loopne out out sbb sub pop jle adc enter (bad) jbe dec xor aad lock rorb flds sub cmc sbb mov mov and pop sti inc or xchg pop cld fsubrs insb and cmpsl or mov stos sub pop sub adc inc dec popa or fwait mov xor xchg lea and add mov add ljmp int ror popf adc mov enter and (bad) lret imul add push divl sarb adc xor fmul sub jp jbe imul dec pop (bad) xor aam fisub je xchg jg push add jp xor pop push inc test enter jns pop fwait hlt dec push push sbb dec inc or jbe loope lods or (bad) jp adc mov and lods repz loope dec data16 or mov imul aam pushf mov jae cmp sti jg fisttp mov in rorb call sti xchg jns cmpsb or iret xchg lods mov leave sub jae fcompl bound popf sub lret mov or xchg push shrb push mov jbe cwtl inc sti inc je xchg add mov add xor cmp arpl popa roll stc popa cltd insb outsl cmp mov or flds push jno push out mov sti inc pop and inc push nop not out call mov and xchg insl pop mov jge sbb je sbb mov mov js mov notb int xchg out sub mov adc inc jg fs das fisubrl pop jecxz ret nop jno xchg outsb outsb push mul repz dec out (bad) lock sub jo test pop fldcw add (bad) test xchg jae aam lcall mov pushf jle mov sub sbb rol lcall fs stos dec stos inc enter mov lods xor repnz (bad) inc push fwait jne loopne or in mov sbb add scas rcrl in dec fwait mov mov leave dec add xchg lock pop mov out fadd mov adc or (bad) jmp and cs scas repz les fimull dec (bad) (bad) lock fisubr sbb cmp jb mov mov insb repnz imul arpl jmp xchg or (bad) push dec mov jge adc andb jbe or push ja fstp pop mov jmp cld push xchg push out push outsl test jno sti fist pop push test fwait xchg xor dec push insb cmp dec stc loop cmp enter add xorl xor inc xchg sub or fisttp ret ss sti ret pop in inc mov xchg sub inc hlt sarl jae test xor fs cmp pop lahf or cmp repnz xor jp std pop arpl daa mov outsl mov daa mov mov es cld shr fldcw popa stos repz (bad) imul sub sub les mov mov add out adc jp fdivl adc cmp pop lcall cli repz push pop jecxz js rcr ja iret sub (bad) dec je jge cltd sub or or pushf lock enter iret fidivr or sbb lea mov arpl je inc mov mov out outsb lahf (bad) icebp cmc in nop xchg int3 inc sub fildll pop stc (bad) out sub ss mov pop fnsave cmc iret pop pop les push jmp pop stos movsb sti inc mov gs (bad) bound jl iret aaa jmp push mov or lock add imul lret hlt stos inc mov xor imulb rcl xor aam mov dec stos out xchg clc mov pop fwait or test insb or imul ds mov xchg sbb mov je cmpsb clc xor lds ds pushf test jecxz setl mov sbb pop es int cmp insl dec sub bound sbb stos loopne pop fwait insb sub mov in icebp sti out push inc push into fcmovbe adc xchg pusha cmp je jns xchg sub sbb in sbb jnp cltd mov out mov roll dec pop popf sar mov js push les data16 lret stc lock fs jp add mov loopne test sbb cmc scas add sbb movsl cmpsb add mov sub icebp adc xor cmp cmp ret loop xchg daa lret xchg movsb ja mov pushf rorl inc cld mov bound lea jae sub bts mov xor bts btc neg mov shld bswap or mov cmc push pushf sub bt cmc repnz push push call clc call mov sar not shl mov test xor neg pusha sub test btr mov shr (bad) lock seto sub and and add setge pusha shl mov push cmp movl jmp pop jge mov cmovb sub dec (bad) clc push clc jbe call xor cmp xlat xchg and in and pop mov aam or test cmp push and jo sti nop push fsubp insl pushf imul fsubrs mov outsl int xchg adc push insl xchg scas pusha jmp call push call movl pushl movl pushl pushf lea jmp adc cmovb pusha push push cmp hlt repnz jl cmp call adc sbb and inc cmpsb mov aas repnz inc icebp cmp xchg arpl adcb stos out xchg mov sbbb sbb in xor push inc test jno fstl sub (bad) sbb or sti mov inc fsubrs in test insl push pop ds mov jo adc sar ljmp xor lea jg loope mov loope mov daa dec xchg and (bad) aad nop daa test in mov jg daa sbb add dec cmp not mov mov push stos pushl pushl pushf mov mov mov lea jmp push pusha lea mov not lea jg push lea lahf push jb setnp push not jb push lahf mov jmp pop jmp add test add add pop or add add or or add add mov add add or add add mov add add pop or add add push pop or pop or push xor add mov add les add movl pushf call lea mov lea jmp add inc gs outsl fs gs imul add lea add push mov decl mov mov not pushf lods add jnp pusha add cmp neg call push not pushf sub call or bsf neg movzbl setle rol sub btr xor bsf setns bts xor movsbl mov mov movzbw lea jae mov push pushf setle pushf lods cmc stc neg lea jle pusha inc mov neg pusha lea jne push call add inc gs outsl fs gs popa outsb fs gs add popa push fsubr das fdiv jmp enter and add add cwtl jmp push movb mov lea ja pushf jmp mov pushf call xor lcall mov mov js push (bad) pusha xor sahf xor movsb enter ficompl pop adc (bad) or int loop xlat leave test loopne xchg rdtsc mov addr16 aam in adc in xchg and jno cmp cmp nop inc (bad) mov loopne insl xor and in push icebp (bad) (bad) insb stos call jge and inc stc fstpt add mov adc ret fs mov add inc mov push popa lcall lds js std test (bad) in push imul in aas in xor mov lock jns ret adc add add add add add test add add pop or add add or or add add mov add add or add add mov add add pop or add add push pop or pop or push xor add mov add les add pop inc clc pop pop pop aam cmp add or into xlat shll xor inc mov lret xchg shll inc sub das test mov rcr push mov or mov scas pop ljmp sub cmpsl ficompl int3 fwait in leave clc shrb call mov loope jge xor add push xchg dec mov add mov add in sbb mov cmc mov mov add sub xor stc pop push mov jo insb pop popa sub fisubr pop sbb inc addb inc sbb lret or test add je sbb fwait sbb in cmp mov ljmp push ss sbb fs lahf mov mov clc mov adc fwait stos popf fidivl divl mov cwtl scas sub mov inc inc xlat test or mov aam sub repz push mov xchg movsl fist (bad) pop daa jns jp inc or pop in cmpl in (bad) gs mov jle mov push xor leave jns lcall mov adc dec in inc push inc push hlt jmp fs mov inc mov sub lret loop mov pushf repz pop es mov popf lock mov mov add out adc jnp ret push stc enter cmp cmp es jg mov mov mov mov add sahf push into outsl lret mov push dec insb jb call sub xor js out sub or push xor push gs push lea test cld cmpsl adc add mov push rcrl les mov cmp or mov cmp mov nop popl inc dec cwtl inc or jp (bad) xor jmp mov jp shr xchg js xchg neg xchg sbb fs es mov and jp rcll (bad) (bad) xchg or bound jb into divl insl dec sub cli arpl pop adc or jnp push ds cmpsl lret shrl fimull hlt out (bad) lock and cmp jmp mov cmpsb mov lret inc cs sbb sbb mov pop ljmp sub rcrb fwait pop pop mov or lds clc and ret push xchg daa popf data16 lods pop daa fwait (bad) es outsl mov adc pop mov xchg movsb (bad) or sbb dec inc in add lahf adc pop xor jb rorl fldt subl sub fsub pop hlt inc jae mov xchg jecxz or sarb int fwait ret or ret (bad) aaa stos sub aas or adc inc push (bad) jo shl aad popa inc mov mov push sbb pusha aas test inc out nop fisubr push sbb jbe bound and lret push xchg cmp out jle outsl mov sbb pop sbb sbb mov arpl into sub mov ds mov adc fs iret sbb out cmp outsb call dec fwait add flds hlt (bad) lods nop scas cmp icebp das into pop xor push pop loop sub fadds test and xlat das ja xchg fcompl and subl jle and fwait dec ja adc fstps mov mov cli cwtl mov push xchg adcl flds data16 push ja arpl fldenv mov mov adc xchg adcl hlt dec mov test add scas (bad) cmc int mov lods sbb (bad) adc (bad) jnp fnsave mov xchg mov aaa mov test xor mov push sbb xchg into adc stc jle (bad) movsb mov aam stc adc mov sti cmpsb mov cmc (bad) shrb jnp jmp lret mov aad das push push jno cltd aas je (bad) sbb inc mov into and divb xchg and mov popfw (bad) push movsl gs stos das in xor enter pushf inc test repz sbb push jle add imul mov add and sbb adc or mov jb or xor cli xor nop add inc (bad) mov test call dec mov or sbb and or sbbb sbb aas and fistl sbb push movsl fisubr add jae adc ss rcll rcll push jns ljmp jbe mov xor mov push pop jge call shll sub push mov sbb aad lret or repnz (bad) xchg mov xchg add setle jmp sahf idivb ret cwtl pop pop pop pop out sbb or xchg pop mov mov xchg repnz xchg pop pop push arpl loopne xor (bad) incl imull das rcll ja adc mov pop sub addl test loopne add dec mov ss or imul out adc out mov inc xor jge xchg nop aas push sub sub jge pop rcrb push dec lea outsl xchg mov jne iret pop (bad) cmpsl xor test cmpsb xor dec icebp and jb daa in cwtl std lods dec jg (bad) jecxz bound sub xor aaa imul mov hlt inc jmp dec inc add lds (bad) push dec icebp cwtl mov mov movsl push sbbl xchg pop inc mov sub add jl enter in sub in cmp xchg xchg cmpb add inc mov cltd (bad) push inc jecxz ljmp pop int pop jg sbbl mov imul lock mov repnz into in push sub mov and int3 mov and outsb sbbl and add popf js or push hlt insb incl dec cmpsb lea scas fistp or sbbb fisubrl jge lds dec dec mov mov inc ds jo xor scas nop out pop (bad) xchg inc out mov mov dec sbb xchg inc jo cmp lock repnz (bad) jle add ret cld jle push cwtl repnz or ror sar mov mov push push add and bound push inc js leave rolb lods in lods jo mov mov (bad) mull bound cli out jo mov es and out jb stos mov insb scas cmp dec sub mov push (bad) inc daa repnz inc (bad) test adc lods std sub jmp in in pop cwtl cmp into pop cli out xor sbb xchg xor sub adc jns mov inc mov jbe dec bound scas push mov fstl jl js cmc sbb cmpsb push mov adc loop adc pop clc add pop dec or in xchg leave es mov lea cmp sbb and pop jo dec add repz out mov rorl imul ficom aad cld push jne mov push adc jecxz mov dec pop xor add push add clc ror inc cmpsl leave aad aas jb xor fadds std dec inc mov cmp jmp test add add mov (bad) bts mov (bad) cs adc stos pop loopne xchg adc inc jae repz sbb mov fsub int3 ds push push shll push loop cmpsl rorb pop shlb mov daa pop fidivr push scas mov in cmc sbb mov mov test loopne mov jp cmpsl lea fsubrl cmc les sbb pop push in daa xchg rclb aas lods push mov lahf or mov and and fadd fsub fisttpll fisubr ret dec adc pop into sbb or mov xor stc or js clc xchg jle ss sbb roll pop push out jecxz (bad) or cmpsl insb movsb inc sbb cmpsb push sub leave xor pusha int3 cmp imul xchg test push sub popa lods dec dec call dec ja jb iret fsin fimull sub daa test push test lahf push pop mov (bad) bound nop lods cmpsb sbb out (bad) adc adc lds pop hlt jg loope adc lea pop xor xchg or aaa add int and cmc dec xor scas ds mov out repz pop push xor mov cwtl (bad) jne scas cmc lea (bad) out mov pop or es test jne testb inc add mov fdiv pop sub lcall insb lock push mov inc test inc ret mov inc jnp xchg cmc clc scas dec or dec (bad) cld outsl and and loope fwait out inc pop mov in test inc or mov sub enter xor test nop popf or xor cmp xchg sub (bad) fisub popf mov jmp adc xchg imul sub imul xchg add pop mov cmp xchg sbb sub clc cmp pop mov out out loop sub stos or sub and std xchg adc lahf mov inc push test pop pop push or (bad) and push and cmp repnz (bad) aas and push das push das xchg jg add or cmp mov mov push push shr and adc flds es imul push lahf repz (bad) sbb (bad) iret popl fdivrs cmp repnz push xchg jmp lock xchg int stos pinsrw xchg sbb dec jo (bad) iret (bad) andb aas jecxz add or cmpsl insl loop test cmc leave out jae dec pop xor stos pushf and ficoml and das outsl lods lds bound mov sbb jo lea or mov in ret lds sub or in add ret dec dec pushf (bad) cmp nop adc pop mov divb mov cmp mov adc adcb adc (bad) lods dec xor cmpsl ljmp add loopne imul adc popa repnz mov jmp add daa mov imul or add dec int adc mov es rolb sub push mov add mov out repnz and lret mov and fmul push mov scas inc or jg sbb test aaa dec cmpsb inc rclb mov jb repnz mov es xchg test jg pop cmpsl sbb sbb xor xor pop jl sti xor insl movsb aam pop jbe adc stc dec mov andl imul dec add sbb pop xchg popf lret daa cmp add pop bound xchg xchg dec or cmp into pop cmc mov add mov (bad) xchg xor inc popa inc pop jno adc sbb loope das adc mov adc push shlb imul pop decb scas aas (bad) jmp mov jb addr16 dec and pusha (bad) lods sbb sub imul movd je stos imul pop push pop inc sbb popf pop bound pop sbb mov pop (bad) adc bts mov repz stc add jae ljmp arpl jns inc mov mov push fwait out mov lock enter scas lret inc repz xchg mov cmp dec lods aaa or mov sub and fdivs inc inc mov sub xlat out adc ret (bad) outsb sub out call add rorb test inc pushf fldcw in divb lock inc mov es cltd dec roll push into fs insb xor fs sbb mov test cmp xor mov arpl dec enter mov dec inc pop or je adc lcall mov jg das add inc dec or cld jo cmp popa mov in mov xacquire out cmpsb dec xchg repz es insb mov or stos out daa gs mov cmp std mov pusha or sti popf lea (bad) aas sbb in ficom pop (bad) push push mov ficom push imul pop test nop (bad) out in popf add add (bad) jmp das dec or adc lods in or cltd push insl sbb std sub popf scas js enter xchg xlat bound aam push mov js adc pop iret scas sub push sahf js mov inc cmp clc scas pop push xchg fdiv in sbbl scas addr16 or jg fwait adc ss imul jp or mov push in sub mov cltd lods std data16 ds ja imul sti (bad) cld (bad) (bad) std adc jge jle cmp addl and movsl pop mov scas pusha lea jne bsr xchg ror mov cmp sub shld mov cmp cmp mov call jmp lea movsbl lea pushf push pushl pusha lea call pusha pushl pushl xchg call mov cmc cmp add pusha movw test bt movzwl shr or mov test cmc cmp bt add movb clc cmc stc mov pushf test jmp bt call lret sub fidivr fimul fimul lcall js sub mov ficom mov mov je fisubrl (bad) into mov pop pop mov into loope int and pop fidiv js xlat xchg outsb inc negl inc pop fwait or gs nop (bad) mov sbb clc lret dec call sbb push fwait mov sbb sti mul sub jecxz dec test xchg stc pusha mov (bad) jne mov mov push enter fildl lea jb bt clc stc cmpb jmp xchg iret sub xchg inc outsl and outsb movsb adc mov int3 call fidivr adc pop movsb or dec scas loopne out jg sub test mov inc xor push mov movsb lret sahf push outsb inc add shr aam jae cmp jg xchg inc pop imul insl inc mov jno (bad) cmp dec mov cs aam add pushf and leave sub xchg push inc fistp inc mov push fmuls repnz push fnstenv jg push adc cmp fildll fnstsw stos decb and in mulb xchg std insb xor pop pop xchg sub cmp and mov inc and (bad) xor idiv lea jbe inc inc jmp push push push mov mov xor lea call lahf adc sahf rcr sub jne mov pop rol pop pop ret jo pushf movl push pusha movl mov pushl pushf push lea jmp lea jae cmc sub lea cwtl pushf lahf lea mov pusha lea call add rcl add pushf lea js dec shld pop stc sub pushf mov add jno clc cmp call arpl inc ds lds repz lahf call mov cmp xor or sbb inc lret cmp (bad) dec lods and inc enter xor out aam mov hlt pusha aaa push adc std adc (bad) cmp rcr cmpsl jno loope push add es notl in push push mov push push mov sahf cmp cmp call out std xchg movsb repz xchg add sbb enter push push mov xor mov cs or push hlt negb inc movsl clc sub adc mov scas (bad) sbb jb mov test sti push cmp and push inc leave jb aam jl push dec jp xor sub pop gs imul jecxz xchg fild ja lea sub add xor and adc or mov mov scas aaa in cmp out mov fistpl add xchg (bad) xor roll roll jmp inc enter ds mov je lret cwtl fldt push inc fcomi push inc push gs xor or adc pop mov dec push imul into mov imul decl xchg (bad) cmovb and daa out lret pop ret xor cmpb mov ret jnp sbb imul push cmp sbb les in pop or test add aaa xchg arpl pushf pop aas (bad) aam cmc popf dec fnstcw mov into sbb add xchg dec or inc fadds jge jmp out dec outsl (bad) sti lods js jne out push mov mov sti push cwtl add subl aad movsb or inc into (bad) pmullw unpcklps stos cmpsb fcmovb movsl push call xor fs cmovb push xchg jns push inc movsb push ja testb xchg fimul mov push in loopne push lods sbb faddl push stos sti push fldcw cmp cmc xlat mov popf call aas je (bad) ret dec adc je (bad) xchg or lret or adc popf jge mov imul insw and add add out out cmp push jecxz cmp sarl jp int cmovb dec loop push call lret icebp cltd mov fxch ja jmp push addr16 loop sahf jl jnp clc insb pop aaa mov or push fldcw add xchg lahf aas xlat cmpsb jbe sbb je scas xor push lods sbbb cmp cs xor lret mov sbb mov xchg jp sub lods sti ljmp adc adc insl push mov mov push dec lahf ja or addr16 adc mov push lea loope nop scas inc jg xor jae jecxz loop cmpl cmp bound jge pop mov push lods cmp add mov test jnp into cmp neg or sub mov stc add lahf bswap setb setbe lea pushf pusha lea call push adc pushf movl pushl lea jb push bt bt xor pusha test jmp xor movzbw sub mov cmc add inc pusha setbe bts movl pushf shr shrd adc mov call pusha pusha jmp pushl lea call push sbb mov cmp push shl pushl clc add movsbw not pushf lea pushl pusha pushl call jmp cmp cmp or mov pusha stc repnz push call cmp jmp pusha movl movb pushf pushf pusha movl pushf pushf movb lea jmp add add add pushl clc stc sub movb movb lea jne cmc mov rol setne clc movzbw mov sub setp sub or bts push mov and mov clc cmp bt mov test pushl clc mov cmp clc call cs fmull adc les mov sarb xchg (bad) xor enter (bad) cli mov stc push mov ja jnp imul ficompl (bad) lcall sbb fistp adc xor push inc das jo ret cld fcmovb and dec je adc mov mov in int3 mov mov cmp or jb pop mov pop pop fist cwtl leave les stos or lea xchg cs add push sub jg sbb and std fldl jb jle cmovb dec mov (bad) in mov or sbbl jecxz mov mov test outsb jbe mov fnstenv repz addr16 xor rcll in out out in sbb push shrb aaa cmp (bad) inc push cmp push pop mov inc sub sbb negb sbb and pop aad aaa mov jns aas imul cmpsl inc push cld xchg out jl popf fiaddl jmp or cs sub loope clc aaa int into bound xor dec inc nop sub jg cmpsl dec mov js,pn dec das loop add mov je push xlat add mov icebp inc popf and (bad) xor cltd fild aam mov xor mov pushf popf and enter push pop or jbe into pop inc mov outsl sarl rcrl push xchg insl les stos pop inc into les arpl pop rclb mov pop jmp jl fwait cmpsb in pushf cmp dec pop dec aas loopne stc dec mov sti or push sbb cmp cmp movb lea ja push stc cmc pushf sub movl pushl push mov lea jmp jo lcall (bad) cmpsl jmp lock mov dec sbbb mov sbb in (bad) ret leave xlat jnp mov iret aas repz or mov (bad) js,pt cmp out fwait adc jbe shrl jnp jb mov jge inc loop inc lock out dec xlat fsts (bad) stc cmp adc clc mov cltd scas xor call stos dec sub stc mov mov mov mov pop std sub and dec in or add (bad) in adc fldpi xchg rcr es cmc lcall pop (bad) aad cmc mov mov push add mov and (bad) ja stc inc insb jge adc dec or inc add mov jns jg xchg scas cli or push xchg or xor daa lods cmp sti push xor js fbstp hlt push cmpl cmp scas mov inc lock ja dec lea adc inc fdivl popl bound fistl scas push push push jnp adc dec jno inc mov loopne inc mov out sub nop push jbe push jb mov test pop neg iret xor test fwait hlt cmpsl adc fsts dec xchg addb mov xchg fs mov mov jae inc jmp jg scas jno lahf (bad) and stc xchg or xorl and xchg cmp sbb ret push popa add push adc or jne and ljmp sub inc xorl add dec xlat insb adc cmpsl and int or (bad) push (bad) sbb push std mov jp ret pop sbb popa sti cmp add leave jecxz adc bound xchg enter sub fisttp mov inc push loopne,pt les jp dec into add mov pop or and int mov jmp cmp dec mov dec pushl cs or cmpb jp jmp repz out lcall pop fldt sbb mov xchg inc out sub dec lods loopne mov imul jmp cmp push mov xchg mov out (bad) and stos sub dec jle fimul shr push dec cmp js aaa dec mov vpaddw mov bound daa dec push dec in incb mov pop divl dec sub mov push and jmp pop cmp adc (bad) push mov je scas xor mov lret mov inc ret mov mov inc aas aas sbb xchg shrl mov fwait (bad) cld in jae adcl pusha xchg pop cmp movsl das jne arpl imul movsb sbb sbb shl and pop inc pop dec (bad) dec adc int3 mov movsl dec mov enter lods aad into cld xor sbb pop inc es leave xor cli pop jne sub mov adc cmp or sub insb pop lea (bad) mov and int3 adc pop jne or xchg sub fsts add or movzbl movsbl not mov pusha pushf pushl ret call jmp add push popa je inc imul jae add or sub enter bt not mov push pushf push sub push cmc jmp push dec call mov call add not mov clc cmp movw pushf mov lea jb btc push btc mov dec shl jmp add add add add add jo add pop or cwtl cmp add jo add pop or mov jo add pop or cmpsb xchg or sbb add pop or jle or and add pop or out (bad) add jo add pop or inc adc add jo add pop or mov or cmp add pop or mov or inc jo add add repz xchg push vgetexppd xor mov push mov jl lods mov into and mov test add adc push or shrl xlat lds lcall and mov sub jge in sub insb mov xchg test dec (bad) dec sub push add cld push test jp int lahf mov (bad) inc add push int cld mov in aaa repz xchg test sub xchg cmp adc cs stos (bad) cmp nop in dec aad incl xchg pop mov arpl andl frstor push pusha hlt addr16 jmp jmp mov cmovb mov sarl out lea out ret jle (bad) cmp rclb aad and (bad) ja jmp inc cli pop mov es rcrl popf xchg stc and fisttpl adc cli jp daa mov dec test or fsts xor sbb outsb push mov and jecxz dec pop fiaddl ja stos test pop cmp out push mov mov repz pop and xchg adc inc ds sub bound inc lea jne mov mov shrd sub mov cmp bts mov push clc pushf clc sub call clc add movb lea jmp stos pushf movb lea jmp sub jns push cmp shl test bt push add pushl sub mov lea jne push mov lea bt clc mov bswap jmp add test neg cmp mov pushf not stc push push pushl sub stc bt cmp bswap movzbl lea jmp lea mov lea jle pushf lea call lea push mov movw xchg pusha movb lea jae jl lea mov not lea pusha pusha pushl push lea call call lea jne pusha sub shrd or mov movzbw rcr rcl btr mov shl bsf xor cmp mov jmp jmp bt add bt movzwl cmc movsbl mov test stc cmc pusha add test pushf bt call mov jmp bt cmc test sub pushl cmc shl cmc mov jmp call btr mov test pushl test pushf lea je bswap inc add shld and shr (bad) cmc pop mov jmp lea jb sar bt and mov call test or mov push movb lea je sar bsf add clc and sub sbb call mov xchg cmovb inc mov stos stos xor or mov sbb addr16 lods dec pop pop pop pop dec cmpsb imul rolb enter push (bad) mov addr16 nop call cmp cmp dec outsl cmpsl lret outsb sub adc pop sbb out push in cmp fwait cvttps2pi imul mov pop cli loopne inc bound mov dec and adc scas and stc cld in stos mov out rol cli or js sti or in inc enter pop clc and and nop xor (bad) push adc mov push out dec push dec inc dec dec xor cs insb add dec lds xchg cmovb lock add lcall jo lods push push and (bad) xor sti cmp cltd xor and xorl pop rcrb lret adc cmp cmp sarl cs sbb pop in aad lcall fs jne dec js,pn rorb arpl sbb movsb jae test jbe and nop fnsave cmp idivl mov lcall dec insb sub cwtl imul lret sti add and orb rcll sbb dec add jle jle add bnd aas cmpsb inc add test call jmp ljmp or fs add js xor movsb sahf nop outsb or iret sbb and adc lret xchg ljmp in pop js cmp pop leave enter faddp mov sar jl and cmp pushf mov xchg jl adc pop push sbb adc movsl push ljmp xchg imul jle es xchg repz or push es aad push cmpsl mov cld in inc or stos (bad) jb popa inc mov insl mov and icebp pushf cmovb cmp bound add sbb ljmp xor cmpsl arpl xchg jne mov xchg inc mov fwait add mov int3 jecxz lcall adc cmpsb je pop dec das push mov jnp sub das cs fcmovnbe inc fimul xor cmp dec sbb add pushl mov js fsubs mov xor bound jmp cld mov and xorb sbbl lea jbe insl fndisi(8087 add leave push push es sub push cs jle movsb pushf cmovb add mov lods add rolb mov push ret add xchg dec jge mov aas lahf xchg adc xlat mov xor bound and add out jnp aam push sub cmp xor and sbb cmp enter shr test inc cmp outsl inc pop dec sub icebp mov rclb cmc add push add cmp push popf push in popf pop xchg xchg cld sbb sub mull mov dec mov sbb or loopne mov sbb mov or inc lods (bad) xchg add in sti pop lock pushf pushf lea call call pusha call push lea jb cmp test cmpb pusha lea jne rcl dec mov clc add pushf movzwl shld add mov pusha add test test mov mov call jb call cmp clc cmp pusha mov jmp sbb dec not sar rcr pushf bt mov xchg add bswap bswap not movsbl setb jmp mov shl sub aaa push mov bts sbb sub xor and shrd bsr mov push clc shl mov mov movb pusha lea jmp mov jmp repnz call cmp lea mov pusha pushl mov data16 repnz jmp xchg mov pushf movzbw pushf rep not not mov setl jmp bound inc das aam out adc cmp mov inc cmp (bad) enter loop xchg je fcoml push dec (bad) scas ror test scas jge push les lock sbb push bound or mov test sub or out or std pop sbb popa popa or js jmp push outsb stc das sub xchg stos cmp je lret xchg repnz cmp aas push in inc jo bound std or push fildll cli das jb or add xor sbb clc repz push xor mov push and xor bt mov jmp pushf lea jb aaa rol dec movzbl dec or shr lea btc ror imul bt lea cmc push pushf mov bswap mov jbe bt mov stc cmp pusha pushf call mov push pushl push lea jmp jmp movl pushf pushf pushf pushf lea jmp sbb and cwtl cmovb push jl cmp jp cmp cmp stos clc test and fwait sti dec mov movsb push ljmp mov dec imul out scas outsl cmp hlt mov fsubrs daa lahf jp (bad) sbb lods insl cmp xchg cmpsb fidiv cmp gs push loop out jmp adc enter and inc sub jp out push int scas es leave ds nop (bad) aad (bad) es in stc (bad) add outsb (bad) imul inc idiv movl call pushf lea je movsbw pushf pop lea call add mov call add pop ret and xchg adc cmovb in or in push pushf data16 ljmp pushf ljmp adc sub popf in lret push sbb aaa stc movsb fcmove inc mov cmp out jecxz xchg xor xor in fwait mov lods sbb arpl outsb out mov insl je push xchg cmp ljmp lea pushf or test add xchg sub sub leave sahf add stos (bad) lret (bad) loope and mov mov mov xor mov movsl and lcall scas lds adc lcall test cmp test cmp xchg adc inc ficompl imul loop or mov cmpsl pop fidiv (bad) xor int3 js or mov pop test pop inc mov cmp dec jle adc jns lcall out in xchg or gs loop dec add clc aaa sahf xchg rcll shrl adc loopne enter cmc push mov or push pop and jb jecxz in cmp into mov fldenv pop push push pop xor test repnz mov pusha push lea jne or shld mov neg bt shl sub jne bts sbb bsr mov cmp test sub push push pushl popl stc cmp pushf lea ja stc push sub pushf pusha lea jmp jmp lea call push jmp cmp ret inc fwait cmovb lds lahf mov fldl sub inc cmpb cmp pop fcoms cltd cmp subb push incl fwait idiv push adc fcmove in movsb xchg add (bad) mov push jne mov int3 inc xlat mov ljmp fucomip pop lcall mov push mov xchg jno dec mov cmp movsb cmc xchg loope pushl in inc sahf test mov hlt das inc xchg das popa mov xor or into mov hlt push mov mov xchg push xor fwait cmovb ret cld inc test fdivrl loopne les into inc in mov cmp or movsb cmc xchg cmc pop out jne mov add push inc loopne cmp sub test cmp mov insl (bad) sbb ret fimul mov fnsave dec mov push popf lds push rcr dec test fmuls rclb mov and sbb insb sti fimull in stc sbbb fsubrl jne or rorb jmp mov pop (bad) xchg arpl pushl je outsl adc aas inc scas sub xchg adc pop lret or loopne movsl xor xlat je in add inc push mov add pop test cmp lea jmp and pop lods lea jmp mov pusha not pushf push lea call sahf sahf fwait sbb hlt push movsb sbb push xchg or jle data16 xlat xor xchg jecxz lea sbb cld repz stos lahf cli les dec or push pop adc xor fisub mov lea aaa outsl mov popf repz xchg inc xchg inc fist negb mov daa pop xchg cmp and inc iret dec fs fwait loope mov or sbb mov jg fistp jae or sbb in or jne data16 mov test xchg push bnd mov setno jmp cmp shl bt call lea jb cwtl rol stc mov xchg dec ror not sbb pushf pushf mov call pushf movw lea je push bswap inc add cmc mov bt cmp add clc bt pushf mov add mov clc pushf test cmc cmp pushf lea jbe dec test add stc mov btr add pusha bsr btr cmc mov sub add (bad) icebp shr neg or movl movzbw cmc bsf mov movw pusha cmc mov cmp call add dec popa imul jb inc imul jns popa je inc js jae jae jmp lea jmp (bad) test or cwtl into pusha sahf pop sub je adc inc mov out hlt lods dec push inc mov adc xlat loopne pop int3 pop shrb push xchg sbb frstor shrl inc test push push adc and mov cmc in push cmp push repz mov int3 fcmovnbe push jno mov popa and in sbb fdiv test adc sub mov lahf mov lret or push dec pop sub pop inc dec incl add dec pop sarb push cli xor xor push push outsb icebp cmp dec cmpsb mov mov jl mov (bad) sub decl test pushf pusha lea je jmp push lea jb test das aam pusha movzbl setg call fwait xor cmpsl cmovb add movsl mov fsave aas fdivrs lock fidivrl cmp or ret in arpl sub or lea and fs push movsb push inc pushf mov inc mov scas outsb into inc add fsubl mov xchg icebp add rolw xchg xor ret xchg jae dec rcrb sub dec mov and sbb lods pop dec mov in mov lea rorb (bad) and xor inc add or insl mov or in dec aad hlt dec int3 stos cld fnstenv mov pushf mov int3 push fisttp mov jmp pop cltd pop xor outsl dec or mov jmp scas dec movl mov push ret repnz mov lahf push pop sbb adc hlt push (bad) cmpsl push jecxz mov or test movsb in and pop fstpl mov loop mov push lret jmp popf mov sbb popa divl mov dec xor cwtl sbb or add push out imul inc mov and int3 pop imul aas jmp mov jo fsubr push mov negb sbb and into dec xor mov std mov (bad) push mov popf int lea aaa push mov and cmp mov setno xchg repz loope lret add cs pop fsubrs enter add sub shl scas jns std xchg call cmp jae (bad) mov rorl (bad) (bad) mov adc pop xlat imul xchg mov sub lea mov xor popf dec rcr xor xor stos cli inc jnp push (bad) xchg dec pop mov xchg lock mov or add lds dec add push mov fwait mov cmc dec xchg inc pop std mov add ss inc pusha mov lods (bad) jmp adc sbb mov add or push (bad) lds and sub lds gs pop subl loope (bad) fidiv mov xchg shl test aaa fisttpll loop adc inc or inc call lea jmp call not add not pushf pushf mov call xor rcr mov sub inc lea bsr mov rol shrd mov bts mov bts push sub sub add mov bt xchg bsr mov add sub add cmc test clc and cwtl mov pushl pushl clc shl movb pushf mov pusha lea jmp out leave into dec mov movsb lret insb (bad) jl dec push push sub int3 dec sbb push xchg ficompl movsb push inc jne outsl mov inc mov popf (bad) in cltd pop mov jmp ljmp and sbb cmc pop mov cmp arpl inc mov jle mov or stos cmp xchg jb outsb cmp (bad) (bad) icebp mov out push and jb cmp fcomip cmp andl jg and repnz mov sahf xchg mov or adc lahf int3 (bad) mov dec les insb inc clc cmp dec mov push mov (bad) and adc and push xor xor push xchg fst cmpsl lds inc sbb scas addr16 lret push cmp (bad) loopne mov inc das fcmovne mov inc mov std or ja sbb cmp iret leave xchg in aad movsb sub les sbb repnz je rclb lods outsb sub mov jne dec dec xor cmp mov fsubrs pop cwtl inc dec movsl add cmp lcall adc cvtpi2ps jno mov sub cmpsb (bad) push mov cmp add shlb in bt clc pushf neg jmp pushf bt cmp push pusha sbb call stc sub pushf clc cmp pushf pusha lea jae push lea jmp outsl fwait inc xchg lods cmovb mov xchg fsts test out xchg jo pop pushf pop cld add push jmp imul hlt pop xor lods int3 xchg fwait push mov sub lea push mov lret es lret cmp popf negl flds push sahf or out bound (bad) daa scas ret cmp in pcmpgtd mov aad gs in pop add sbb into sbb lock loopne mov pusha push push dec dec lcall out pop pop xchg and sub ret lods decb pop ret bound mov lods cmovb xchg or rorl mov movsl cmp repz imul jmp sahf roll mov mov dec jne out jns insl imul dec mov clc stos gs push pushf mov push or jnp je jnp inc sub push cmp ds jl push lods sti stc (bad) lods fistpll mov cltd mov negl xor insl sub and push fsubr aaa iret dec cmp sahf mov cmp ds fistp loop dec mov fs cli iret dec push adc data16 adc fstl adc or pusha dec cmpb push cld ja sub cmpsb add pop stos dec inc (bad) sbb pusha lea lea pushf movzbw mov call mov stc sub not not lea jne mov pusha mov pushl mov stos pushf lea jmp or cmovb into fsubrl fmul loop idiv loopne push repnz imul icebp and cmp rol mov jle xchg jnp push ljmp jle (bad) (bad) (bad) xor and shrb inc jno vrcpps push dec and cltd ret and adc in ds rcrl inc shlb aaa adc xor outsb cs shrb xchg xor and xor jae iret mov or push insb pop xor into out out push das add xor ja sahf adc in aam fisubl movb and cmc test clc sub bsf bsr bsf sub and or mov cmp shl push add jmp test call pop mov push call jmp push lea ja call push lock std std mov pop ret ja and cs pushf mov pop mov xor inc jg mov add dec dec push and aam push iret add out sub test sbb or xchg inc push dec sub push movsw xchg movsl pop push inc xchg or jmp sbb dec fwait stos mov cmovb push cmpsb mov test lods data16 pop mov call es lcall sbb and mov mov push mov sbb js or dec and adc int sub les add and jno push xor xchg and repnz and mov inc sahf sbb enter add rolb mov xchg fwait in lret mov lods push jge,pt in (bad) mov add movl pushl pushl popl push pushf mov pushl ret mov cmovb or mov jle mov fnstenv into pop (bad) aas aam adc mov xchg scas or (bad) negl sbbb pop movsb mov pop aas mov test js dec test sub cmp (bad) fisub pop in mov push adc adc fcomi sbb push inc cmp push mov jecxz ds inc dec repnz dec sti dec loopne mov aad lea pushf pushf jmp mov cmovb fnsave fldt pop ret fmul out adc jb mov stc xchg and xchg test stc sbb int3 mov (bad) int3 aaa gs cmpsl adc (bad) notb mov push fadd sahf mov (bad) push mov cmpsb jl cmp aas mov mov inc mov movsb adc pushf lods fst or push xchg xchg mov test cmp sbb loopne aaa mov jge pop sbb imul mov mov (bad) or iret cmpsl lahf in xchg call xchg mov mov add test test idiv pushf pusha mov jmp not push call sbb pushf test lea call lea jb sbb cmp call pushf test push push jmp call jmp add add pop add add xor xor adc mov adc inc xor lahf xor xor xor xor mov aaa clc aaa add cmp int std cmp cmp cmp adc push cmp cmp cmp cmp cmp cmp push cmp lock add pop add add inc xor pop xor stos xor mov sbb xor int3 xor fwait ss cmp cmp cmp cmp cmp (bad) cmp cmp cmp cmp int imul ds aas xlat aas add add adc add stos xor xor xchg ret xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor push xor sub ds push xor xor jo jp jg test cwtl xor lods xor int pop ss aaa outsb aaa xorl aaa push cmp cmpl cmp cmp cmp cmp cmp cmp cmp cmp mov cmp cmp out sti aas add add add add xor xor xor lahf xor xor xor xor xor xor xor xor lods xor sub xor aaa ss ss ss ss ss ss jle xchg xchg ss mov ss ss aaa int3 aaa aam out repnz divl or adc sbb xor cmp cmp test mov pushf cmp cmp and cmp cmp cmp cmp xchg cmp cmp cmp cmp cmp pop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp repnz xchg lods ds fnstcw lock aas add add add add xor push xor fdivs out add pop ss cmp cmp cmp jge cmpl icebp ds aas mov sarl aas (bad) aas loopne in aas cli aas add add add add xor adc pop xor xor xor xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor adc adc xor sub das xor xor pop xor jb jp jg xchg mov xchg xor xor xor xor xor xor xor xor cmp popa xor xorl xor repz (bad) ss cmp cmp cmp jns test mov cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp aaa jl,pt cmpl fistpll jmp aas add add add push xor xor xor xor xor xor xor xor xor je in xor (bad) aaa sti aaa adc and sub cmp xchg cmp cmp cmp cmp cmp cmp jp (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp lahf ds aas xor inc aas jnp sarb add add add lods xor xor mov aaa xchg aaa sarl add cmp cmp cmp nop add in add add xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or jb jge cwtl xor test lods xor sub xor xor cmp cmp inc ss ss ss ss ss mov ss dec aaa push aaa pop aaa mov aaa repz xor aas cmp pop cmp and cmp dec cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp ds ds ds ds ds movsl ds cli ds cmp ds inc aas dec aas push aas push aas lds into aas aam add add add pop xor jns test cmp cmp xor xor xor xor xor xor xor xor push xor xor xor xor dec xor xor xor add cmp fs out aaa push cmp xchg xchg cmp cmp cmp cmp cmp cmp cmp cltd add add add insl xor xor js and aaa pop aaa aad out aaa clc aaa daa cmp cmp stos cmp cmp mov cmpsb cmp cmp cmp nop cmp cmp mov jmp cmp cmp cmp add inc add add xor xor xor xor jo (bad) xor lret xor xor xor xor xor ss sbb pop cmp cmp lods cmp adc add xchg xor xor loopne add add dec xor push xor pop xor insb xor xor test pop cmp cmp cmp pushf cmp mov cmp cmp cmp cmp cmp cmp cmp enter sarb add lock int3 add add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp or add add jo xorb mov nop ss lods les aam fdivs in ss add or and xor cmp fs insb aaa je js xorb aaa pushf aaa mov (bad) aaa lock adc xor dec cmp jo nop cmp cmp cmp cmp cmp pusha cmp cmp cmp cmp cmp cmp test mov test enter or sub xor push cmp cmp add sbb add add sbb inc xor xor xor xor xor cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp sbb cmp cmp cmp cmp cmp ds ds ds ds ds je,pt cwtl ds mov lods ds mov mov ds sarb aam fdivrs fdivrl loopne in call add add add add jg xchg cmp adc add adc cmp add add daa xor ss ss aas aaa das cmp cmp loopne push cmp cmp pop cmp (bad) cmp cmp cmp cmp add add add jo (bad) xor mov data16 xor xor xor xor mov cmp cmp cmp cmp cmp or aas add add add xorb xor xor xor xor xor les add sbb cmp xchg cmp cmp sarb add das cmp mov clc cmp cmp cmp cmp insb ds ds aas add add sub cltd xor (bad) xor or xor xor xor loopne adc sbb test push cmp cmp cmp stc cmp cmp add push aas aam add add cmp add pop xor xchg in xor xor xor enter dec cmp cmp popf cmp dec cmp and cmp cmp int add add add inc add add xor xor pop xor xor xor xor xor xor mov cmp cmp cmp (bad) cmp cmp add aaa jp,pt stos cmpb loopne add add xor xchg xor divl (bad) xor xor xor xor xor xor lds push aaa or cmp cmp cmp cmp cmp cmp out add add push add add xor xor (bad) xor xor xor xor xor xor xor add mov repnz addr16 cmp jae (bad) cmp mov cmp cmp mov hlt ds add add cmp add push xor xor xor xor xor xor aas aaa mov cmp fstpt test mov cmp xor add add add dec add add xor xor repnz xor xor aaa aaa jno fnsave add adc int3 cmp cmp cmp cmp cmp cmp mov arpl mov cmc aas add add push add add xor xor xor xor fdivs jae cwtl xor xor xor lds pop aaa inc aaa mov cmp cmp cmp and cmp cmp push aas xchg aas add add add dec add add xor xor xor jb lret xor xor lods ss ss aaa jae pop cmp xchg cmp xor cmp cmp mov aas (bad) aas add add add add test jmp xor test out xor jb popf xor xor xor loopne insl xor xor xor inc aaa movsl aaa out push cmp cmp cmp cmp cmp cmp cmp cmp add add add push cmp cmp cmp iret and call add add mov (bad) xor xor xor xor xor xor es sbb test (bad) aaa cltd aaa (bad) aaa add adc cmp jno ret cmp cmp xor jge dec aas stos aas cmc aas add add xor xor xor outsb xor xor mov mov inc cmp jl popf cmp cmp cmp daa aas pop aas add add adc add sbb popa xor xlat inc push adc movzbw xchg mov movzbw and sub jmp jmp mov cwtl bswap mov setb pushf mov cwtl lea jmp add dec outsl arpl inc jb add or arpl mov sub xor (bad) fildl push rcr ret clc js into mov bound pop (bad) in cmp cmpsb xchg icebp xor out hlt xor jbe stc fsubrp dec rorl (bad) fmuls inc pop daa mov inc int3 inc xchg pop imul shrb orl inc ret pop xchg enter push xchg jge jb pop aaa das lret xchg js sub dec aaa xchg or sub mov or adc fild inc mov dec out cli aam mov jne and sub dec mov jb test nop aaa pop sub (bad) xchg ljmp add sbb leave adc mov stos jle movsl add (bad) lods jns xorl and cmp sbb in add stc dec xchg jl mov sbb loop pushf mov js sub mov shrb dec dec fnstcw xchg push lock xchg or mov mov xchg shlb sbb pop ja xor push inc mov lahf push sub adc dec fmull jns xor out (bad) es ret fs in and pop or lock sti xlat movsb jb inc rcll addl popa orl pop ret sub cmp cmpl test jp shl push data16 mov adc jp fcoms inc lods lcallw je push pop and mov outsb outsl xor popa dec mov das lods enter (bad) and repnz fsubl sub pop and adc inc in mov iret inc test mov es push int call xchg adc dec (bad) xchg lahf xor aaa aaa push pmuludq inc das jp mov orl lods jb cmp (bad) xor push mov std stc stos pop das fs sbb lds mov int aaa push iret rorb fwait aaa addr16 movsl and fstp cmp mov xchg push insl inc sub mov lods (bad) mov cwtl test xchg fucom frstor outsl repnz jmp js mov fwait push or es mov adc loop sti cwtl mov adc cmc sub adc ja sub mov xchg adc jo fistpll mov pop xor cltd xchg jmp xchg dec inc sbb stos js sbb out xor xchg add scas add loop push idivb mov mov (bad) inc movb lea call jbe test or js xor dec mov mov mov test pop mov call mov dec fs mov daa iret and lea or or pop jb pop (bad) dec push push pop xor lods iret gs mov pop xor movsl fdivrs jo xchg mull lret out and movsl sub push adc pushf popf dec out popa shrb mov push xor mov sub adc hlt pop add mov repz jge lea jne jmp pushf lea jbe mov movsbw rcr bswap sub xchg dec shl lea mov cmp mov clc dec clc add shr stc not xadd shr cmp mov bsr bsf jmp rol jmp jmp add inc gs imul outsl outsb dec outsb outsw push imul fs jb stc cmp call cmp rclb cmovb int scas roll or sti cmp stos (bad) push (bad) jns icebp pop leave test sub inc stos cmp jnp int3 out orl pop xor movsb mov inc cmp xchg mov inc add jmp pop push mov mov mov inc sub out fs hlt scas sbb pop jns sbb js xchg push sub outsl adc (bad) stos arpl mov mov imul mov inc imul sbb (bad) call push xchg push movw call pusha mov lea jae movzbl movsbw mov bts bts mov jno mov setno mov mov cmp clc test test xor push cmp repnz push mov call shrb ds cmovb fidivl in adc call ret mov es push lock sub jnp movl daa sub (bad) fldl mov insb dec subl sub mov loop inc aam mov insb xor push xlat jne cli mov push mov (bad) cmp in pop js lret popa out cltd jecxz mov add les cmpsb push mov test orl push aas mov out (bad) push in int3 xor and cmpsl jge cmovb jecxz xchg jae mul int sbb inc xchg fnsave dec popa inc addl ret dec mov rorb out sub mov xchg and xchg pop or cmp (bad) mov mov mov lret icebp or add ljmp ss (bad) cld mov movsl pop fisubrl hlt xor popf sub dec mov xchg xor jns or inc lahf imul pop mov cli mov mov lcall xchg fs push lock inc dec bound or add inc fsubl test popf addl aas cmp fs inc add adc push aas repz push or mov out cmc in (bad) mov jbe gs ret dec push pop lcall test xchg sti push pop mov cltd lcall imul lds push test sbb mov jns fildll cmp mov adc jnp push adc pushl aam aas ljmp dec jns dec push imul cmpsl push push cmp test in sbb test or sub int cmp nop pop out enter je inc sub lds rcr mulb mov lahf xchg sbb inc ret sbb in stc inc inc mov les icebp sub inc dec xchg call push add subb sub mov mov inc inc (bad) addr16 dec lods dec jmp xchg pop cs ficompl mov test jp pop sahf and stc pusha mov fwait xor sub aad jbe sub adc lret das or out add cmp push mov xchg adcl mov pop mov mov ja aaa xchg push mov (bad) enter push dec mov jbe lret fistpl xchg fwait in outsb and inc test or andl push and sub push cmc cmc cmc clc shl clc clc call lea jp pusha lea jae add mov or movsbw mov bsf shr mov cmp cmp cmp push xor cmp repnz mov mov jmp aaa lret pusha mov cmovb inc mov sbb stc and pop xchg fist js sub push or cmp dec mov xor cs lahf shl gs and mov cmpsb loop inc (bad) dec shufps sbb mov addr16 loopne mov (bad) pop sarl fstpt or xchg (bad) cwtl cmpsb scas mov or pop jbe hlt push sub cmp xor cmovb push mov hlt pushf mov inc dec xchg ds cmp (bad) mov sbb mov add lahf push or sahf push pop push dec leave jmp int jae pop xlat cmpsl mov pop sub dec mov adc cmp pop sub xor xchg cmpsl sub outsb imul push (bad) mov xor xor sarb fiadd ja pop adc cld mov andl test in movsb dec xchg icebp loope mov dec pop sarb scas pop pop cltd push std adc xor mov sbb daa inc mov shr mov xor xchg js mov out inc mov rcrl adc adc mov push sti xchg inc test jmp xchg lea setp jnp push mov pop mov pop call shr jmp test bt shl jmp cmp add mov sub call mov movzbw lahf push seta push movzbw push setno mov mov mov push pushf xchg not call lea jne push shr btc dec mov clc jmp call btr bts bt mov bt sbb adc mov push mov shld sub bts lea adc dec mov and shl mov mov clc sub sub xor pop and not sbb inc mov pushf stc shl mov lea jmp bt cmp bt mov pusha mov clc stc test mov movb call cmp pushf lea setne lea mov call mov lea jae cmp cmc pushf stc sub mov mov pusha lea pushf jmp xor cwtl sbb cmovb ljmp (bad) mov adc ret rorl outsl jge add lods daa mov std or jmp inc sarb jecxz popf push rcrl mov ret pop push push cli pop dec mov gs repz out dec mov jo test jmp mov push xchg (bad) mov push js add xor pop push xor ret xor push mov push mov (bad) je cs adc rcrb test frstpm(287 pop loop bnd das lds std pop mov fcomps jmp pushf pushf popf sbb mov loope and mov cmp insl mov push dec or les push popf xchg sub ds xor and test sub xchg lret in movsl out pop add pop dec mov stc xor mov xor sbb mov inc mov pop sbb mov dec mov mov push pop xchg xor adc js pop pop fstps mov push add stc bound es mov jmp movsbw rep mov setb mov movsbw mov call lahf (bad) hlt and cmovb mov mov and arpl mov mov in (bad) sbb xor test (bad) jp jns mov pusha cs dec cmp jb pop scas xor mov mov iret cmc inc push ds add jge pop xchg sub mov mov sbb cmp cmc pushf stc mov call jmp enter iret cmovb lcall add rolb test lds std jg adc outsl xchg and add repz insl stc adc jge mov cli mov das insl pop pushf mov mov pop cs imul dec or push js jns pop push mov push pop aad sub push iret jne ja cwtl out push inc mov or push stos cli cmp push push mov cltd stos xchg jbe jo (bad) mov xor leave aad cs cs in out push test or scas jae (bad) in (bad) inc jmp in mov cmp mov test and ret xchg gs mov std adc outsl ds ret jno fisttpll and inc pushf mov pop ret lret and jae in enter and aam push les out das adc test imul inc mov in add fs (bad) fcmovnbe in xchg push (bad) cmpsl je repnz and lock aad and mov movsbw add movzbw pop pusha push movw push pushl ret pop jo ror inc aad (bad) lock and sub mov and dec lds lret push sbb sbb rcll and adc mov inc mov or subl es iret lds mov inc push lcall adc adc push xor mov (bad) inc ss xchg xchg scas pop push loop dec or aad push inc dec std shrl out jp jb cmpsb test (bad) les les cmp or addr16 dec repz fisttpll fnstsw insb insl xchg ficoml mov cli pushl popf pop loop cs dec pop cmpsl mov popf add dec mov mov leave cmovb mov test dec push outsl inc cli in add (bad) je mov test or or test sbb shlb out lcall dec push dec cwtl jb inc pop push repnz insl rorb repnz dec sbb push fldt pop gs popa das sub mov jmp mov lret xchg icebp sbb out adc repz and ljmp (bad) es cmp push sub clc call jmp cmp add stc stc cmp pusha mov rcl and rcr movzbw mov jmp call mov lea call push lea jb lahf sbb mov call jmp call dec test cmp not stc neg clc movb clc stc rol test mov bt bt xor call lea call pusha jmp add jae clc neg clc stc sub pushf test mov call jg add lret cmovb sub call mov clc jl call jns sahf sbbl push inc mov sub mov xchg lahf movsl aad incb lock fdivs iret inc mov xlat inc test push (bad) fild add add call pop (bad) (bad) iret lods aad test sub mov mov test cmp mov into adc (bad) sub scas sbb xor mov icebp rcpps mov sub sub mov dec sbb and push fidiv outsb (bad) mov ds (bad) sti in adc cmp xor jb push add dec stos inc sub daa pop mov addr16 lock sahf orl movsb test dec mov repnz dec push (bad) pusha add outsb xchg mov fucomi xor cmp push popf neg in cmp dec add sub pop das movzwl mov sar movzbw mov jmp sahf push pminub cmovb push xchg jne fist mov andnps scas out stc xlat lahf icebp shrl out mov in inc mov mov ss mov dec idivl dec cld add pusha cltd sti xchg imul mov and ljmp and dec cs lcall mov sarl int ss sarb push mov sbb add jp xchg (bad) mov lock int enter and insl xchg mov roll or add popa xchg shr (bad) xor decl test pusha idiv shl not sub call not sbb mov btc bsr sub sbb shld and lea call ljmp pop movsl fildll pop cmpsl in fcmovnbe inc js js outsb xchg fmull add inc int3 sbb mov inc (bad) je into jge adc movb stos ficoml add sub out dec (bad) imulb and pop inc mov cli int3 lahf sub les (bad) xor shr (bad) out in les adc sub pushf test icebp pusha std lea shrb pop inc sub call cmpsb push xchg scas sbb mov stos adc adc push aas xor lahf pop inc into push int idivb sbb pushl push lea je cmp add cmp pusha cmp cmp jmp testl inc inc sub ss mov bnd dec (bad) js cmp call sub ret and (bad) scas push mov mov cmpsb dec inc lds daa (bad) (bad) xor int jno dec mov mov movsl popa cli rclb scas testb mov sti imul add adc loope inc sub sub add scas (bad) cmp ds pop mov mov jp jb ljmp andps mov mov call mov call lea jb clc pushf cmpb call movb lea jne lea lea mov stc cmp add pusha movzwl add clc mov clc add pushf clc bt clc mov cmc test add jae test pusha jmp cmp pop movsbl jge adc pusha mov jmp call pusha movb mov bswap pusha mov jmp push fistp cmovb sbb sub mov inc insb scas in inc jo adc pop stos add push dec das inc jp jle arpl push arpl imul je scas and or xor push ds ret adc jnp sub movsl dec cli call mov cmp adc out lcall xor cwtl push loopne sbb add inc fidivl loop mov mov xor and shrl icebp stc mov data16 dec fldt test add mov test pop sbbl and lea jne push mov shl dec bsr bts sub clc lea cmp bt sub pushf pushl popl test clc bt cmp movb pusha lea ja pushf cmp bt sub pusha pusha lea jmp pop cmp shr data16 testb movb rcl xchg and pop sar ror inc rcl pop bt cmp ror pusha add lea movzbl pop push pushl ret cmp pushf pushl jmp add push dec inc imul je outsl outsb inc add or decl test mov push add mov push cmp push mov lea jmp jmp adc call scas in jbe rorl inc cld dec stos mov (bad) addr16 rorb gs arpl jecxz xchg push out pop test outsb add inc cs (bad) push sahf or mov push loopne lcall push fnsave pop inc mov add ss sbb call sbb push cmp je repnz push sbb test lods mov mov stos call lds xchg icebp add push jbe insb mov out stc add shlb inc mov negl les (bad) jb jge stc xchg jp ret fnstsw or lods int cmp dec je push in test lock dec adc cmc outsl repnz mov xchg pop push (bad) mov call lea ja jbe jmp ljmp and into sbb dec scas and or int3 fadd push insl popf sbb jmp push jmp outsl into out xchg mov jp movsl mov inc daa pop repnz aaa sahf or mov xchg inc xchg mov push loopne jb aaa ret into mov cmpl or push cmc cld jne fistp sbb and mov (bad) dec or je sub subl xchg dec lock test jno or daa xchg loopne (bad) mov cmp jb clc fcomps jns push sbb push xrstors cwtl repz jae mov and mov cmpsl jbe xchg sbb aaa lds adc icebp and into rorl inc xchg cli and pop mov add sbbb pushf xchg push es sbb jp popf jno xor xchg adc cli and mov into cmp cmp xor xor sbb (bad) ds xor sub loopne shrb ss or int test sbb jge insl testb repz outsb dec pushf jle push jmp mov fistl push jecxz jle icebp inc inc jmp hlt std fsubs mov xor fs call push pushf pushl lea jmp pusha push jmp pushf jmp call jae test cmovb cmc jae in in pop sub jno adc (bad) movsb int3 mov fwait cli jmp xchg popa das inc mov lock and leave iret insb push xchg push (bad) lock cmp shr gs sahf mov adc arpl int3 sahf mov xlat sbb fstps (bad) pop lret lret mov fucomi mov cmpsl or pop jb (bad) lea daa inc gs sbb jno push mov mov sub fmull lret mov aas mov enter shl xor cmovb out out mov ds mov outsb int3 pop or testb mov xor in dec dec xchg push outsl lds xor cld xchg jnp push fcmovbe mov rcrb mov aam xor bound sbb mov in pop jno fsubrs mov imul js scas (bad) xor dec cwtl fadd push adc lds (bad) jno call add xchg xor xor les mulb jbe jo jle,pn inc insb sub sar jl or js pushl rol pusha mov xor clc pushf test shl cmc call jmp lea call call jmp pushf lea jae shr cwtl sub pop aas pop btc adc mov das aam test shrd cmp lea push jmp push inc push push dec dec dec cs insb add sub idiv xchg cmp mov dec (bad) movsb cld lcall cmp or popa clc xor cmc ljmp enter imul sbb cmp adc pop jle aaa pop sahf shrb cmp outsl xor jno fdivrl loop lods inc int3 scas aaa lret nop in mov mov adc scas (bad) (bad) cltd dec fstps sahf (bad) and cmpsb dec and pop aaa fisttpl sbb push into nop xor addr16 jle push jnp repnz inc fdivl popa mov cmpsl inc jl lcall adc mov push lahf jg inc xchg pop leave test (bad) je (bad) xchg pusha mov aaa mov jl cmp mov xchg xchg test inc les add mov ret sub das xchg push leave enter cwtl inc dec popf cli (bad) lret insb push fdivrs and push jmp sbb mov cmovb rorb call fidiv mov mov out icebp push into fs aam daa mov or inc loope sub push inc jge int sbb xlat out pop xchg and mov xchg call sti xorl push lds mov xchg dec imul pop dec dec adc ret mov adc divb cmp pop or cli push std pop cli and rcrw xor push (bad) cmp pop lret fisttp inc xchg das and mov scas ficom in jecxz icebp adc (bad) mov repnz rcll loope test (bad) mov cs jl push insb mov bound pushf (bad) shrl mov lret les push data16 pop pop stos lea icebp leave sbb fisttpl lds mov jge rclb jne jno jnp (bad) popa repnz cld sbb xor ss push das mov xchg cmp or jne jno imul sti dec fnstcw add je mov dec daa les fsubl jno daa popf adc mov cs jns sbb add shlb lock jge sbb fs inc test rep aaa stc daa shll mov dec fiaddl xchg imul (bad) mov lock push sbb cmp jne jo data16 push loop xor icebp xor ja rcl pop cmp xor jno out lret leave and dec divb cmp xor cmp adc adc aad outsl push stc aaa and jnp push mov push and es mov mov push dec test fs ja popf imul mov sbb cli and jecxz lea jge mov cmp ret jne in ds mov xchg test add mov dec sbb sbb (bad) jl lock pop and mov cmp jge lahf cs lds push (bad) pop sarl add (bad) (bad) stos jae mov lods jno lods ljmp lret push mov mov rolb lret js mov test jg rol jl stos rorb fwait pop and arpl pop cli cmp (bad) xor mov icebp insl jge sub jne fildl fdiv and (bad) cmp mov or jle insl jp adc adc jns sub enter pop loop pop cmp cmp adc (bad) mov cmp mov inc mov mov xchg pop add fldt lods test frstor mov stc movsbw mov sub jle mov btc lea bsr mov pushf shl setno test mov pusha add inc rcr sub bsr neg mov setno ror mov or add pusha and sub clc cmc lea and bsr aas bts or mov stc shl mov pushf lea jmp seto lods movb call sbb fcomps cmovb mov lcall sti adc xchg enter stos test (bad) cmp lahf arpl aam out dec jb xor insl lods inc sar pusha mov add mov cmpsb js jb fsub fdivrs subl xchg pop cli jecxz imul pop leave pop in mov jge mov xlat adc es pop add push mov (bad) dec lods stos xchg inc sub cmp jp popfw fbld add cmc outsl cli cs jmp loop mov jae inc insb sbb and cmp call jmp call lea movw lea call push pushf pusha movw lea jb dec call lea lea jno pusha pusha pushf lea call pusha lea jb movzbw cmp push cwtl inc jmp and insl mov jne mov decb dec push mov imul stos jnp push xor cmp (bad) adc dec push xchg jle (bad) pop setg xchg sub pop popf lods repz xor sbb movsb dec mov adc pop (bad) sub into cltd test fwait ljmp xchg xlat sub lret int adc insl cmp and mov insl scas push adc push ss mov inc xchg push inc ret inc push iret inc mov popa scas cld push fs repnz stc mov xchg mov lea ror es mov insb (bad) fs insl aad mov lcall and (bad) adc or sbb into fnstsw incl (bad) out data16 push enter into inc jecxz xchg push add adc pop pop dec xchg mov jge fdivrp dec hlt clc cmc int3 add dec test and mov fimull push cmp mov inc inc adc popa (bad) aaa popf adc lods add in adc dec into push rcll lahf cmp cmp idivl call outsb adc adc andl mov movzbl mov call cmp cmp setbe movzbw movzbw lea lea mov movb jmp mov jmp mov adc jmp pushl add movb pusha lea jmp pushf stos push lea jmp pushf mov lea pusha call lods test neg movb call push sahf fwait sbb cmovb and mov dec mov pop inc sub jbe mov cmp sbb cmp aas inc push add loop sub pop stos dec and adc (bad) aad and sbb imul fistl push std cmp xchg out xchg ret orl mov roll jmp jle jbe (bad) movsb int3 pop lods add jp pop sub sbb dec outsb mov inc das imul dec call (bad) cmp xchg add stos aad xchg lahf mov inc ret jle repz mov loop cmp push imul mov sbb sbb push mov ret jns lret hlt inc imul mov mov jmp sbb sub mov es cmc data16 mov mov dec fidivr push cmpsb fidivr jmp xchg (bad) mov mov jo icebp mov ss mov inc jo xchg add pop movsl jmp push inc outsb xchg sahf fs repnz push sub in sti jno sub jge xchg aam cmpl test out (bad) das inc sbb mov mov and pop movsb lock dec daa sti or dec adc pop mov xor jl cwtl inc cmpsb push mov loop push push sarb xchg sbb mov jmp xor aaa lret xor cwtl scas (bad) fxtract sub jecxz sub hlt lahf rcrl jg push lods push das test jg cltd jne inc and jne andnps pop decl jg xchg lds inc jp cmp jmp ret lret aaa (bad) lock cmp and insl xchg es lds cmove cmp push test cmovb and jae inc std xchg out imul push jl xchg jp inc pop or and scas push imul cmp mov add add add push jle stc sbb adc jno call push mov imul xchg in push and cmp lock mov or and loope add shrl dec mov lcall jmp dec add pop (bad) stc movsl sub pop ret divl and lods (bad) stos pop inc and in inc ret stos leave xor ds add bound push xchg and test in dec jecxz stos pusha pushf jmp cmp add pushf pushl lea jmp add add in idiv and lret pop loope inc leave ret in mov sub js mov and dec mov js pop in jge sub inc lods xor in dec cmp adc lock arpl sub jb push push pop cmp (bad) into add (bad) nop mov fisttpll xor into dec push mov pop ja stos xor bound push mov xor mov jae adc cmp fstpl fsub pop or add cmpsl adc imul (bad) test in pop enter inc test inc test push scas into cmp daa inc mov (bad) mov lock ljmp adc lods in bnd leave clc cmp lea sub pusha xchg setl pushf btr shl mov sub inc sbb pusha lea jmp mov aam loop inc (bad) dec mov pop movl jecxz mov add aad psubsb pop outsb pop or mov xor jb ret dec xor dec mov sub outsl mov lret std xor push in je es shrb push fadd xlat mov sbb jmp add ss xorl fwait insl repnz and test out inc sub jbe jecxz add add imul adc test pop pusha movsl int leave xor or inc push aaa mov pop xor (bad) imul sub pushf adc jmp cmp inc stos movsl jbe loope outsl imul cmp push mov in xchg movw cmp call sub sub mov shr sub call stc pop ret mov cmovb sub mov in cmc cmpsl sbb cmpb cmp sub jmp aaa cmp es cwtl and addl ss mov icebp lahf fs mov mov sbb dec jecxz cwtl in fnstcw xchg lock add cmp ss roll mov dec jp dec dec jecxz lret mov mov insb nop divl popa adc mov sti push dec push dec sbb cld dec push gs movsb out icebp in into pop inc mov add (bad) push jecxz shll test lahf adc cmc dec or inc push mov fwait andl push and lea jne and bsr mov jmp call xor jmp (bad) sar imul cmpsb in clc mov sub mov and adc and imul or cmp add scas mov xchg jo out and les stc or dec push out pop jae jl rcrl mov jle sub clc jbe das add xchg repz mov lret adc xchg mov add (bad) mov jecxz jbe daa lcall sti push xchg es in or fbstp dec orl jb sub adc mov xchg enter sbb lcall das clc dec mov push cmp jle xor test (bad) fidivl fs gs and aam mov xor stos mov push or arpl negb jmp and mov stc movsl scas ja push daa out sub lock test pop outsb add add cli sub sahf mov fdivrs cwtl cmc sbb xchg xrelease inc sub mov movsl add inc cmp in cmp mov popa jg mov repnz push stc inc jbe cmp cwtl imul in dec (bad) decl (bad) and add pushf clc bt jmp call mov movb movzbl pushf pushf mov jmp jmp pusha lea je stc pusha or mov pushf pushf lea je cmp movzbw seto pusha xor sbb bsr mov btc mov mov rol shr sub sub btr neg call lea jb bsf adc mov jmp lea jbe rcr sub pusha bt pushf mov rcl adc mov bswap add cmp add clc shr jmp call icebp or (bad) out cmovb jno stc or inc iret iret adc test mov xchg dec es movsb dec int mov js jle and pop cmp jne (bad) je fs lds test hlt push movsb adc leave and ljmp push xchg loop bound sub inc and add add cwtl cwtl lea mov movb movb call test shl pushf push add pushl call inc pop dec into out cmovb inc lahf jg mov sub push mov xchg fstpl rcll push xchg je fildll sbb jle add jge lock imul sbb mov inc idiv mov mov imul inc fwait dec pop jmp je imul mov loope mov or cmp clc aad int3 popa mov mov test sbb popf pusha cmp rolb lea outsl mov xchg scas push movsl inc std xlat inc cmpsl mov lock es fwait sub test mov inc cmpb outsl decl imul add out loope push cmp pop dec sub es lret movsl and pusha mov adc ds js jp mov inc movsl sub (bad) adc pushf xchg cmp dec lods jecxz mov xlat (bad) sti push out cmpsb in orl inc jmp jle push ds imul jnp pop scas pop sub pop jg xor imul inc insb mov loop ret dec popf inc ret ja adc cld inc mov nop inc in lods repz dec jecxz aas jge sbb and scas cmp scas and push icebp and lods or andnps sbb inc imul xchg loopne adc sub inc aam dec jb in mov pop pop addr16 and iret punpckldq mov cmp pop cmp push adc call add xchg sub gs xchg jmp fdivr push enter lea pushf or aas jmp in sbb dec (bad) into sbb fsubl and daa in jae lahf out push imul xor rcrb std test out lret adc clc push mov ret sub bound int3 xchg rcr or jl cmc sub dec imul aam fstpt jo mov dec dec cmc adc jle or and mov idiv scas test cmp cmovb sbb sbb jl sbb push xchg xor adc push mov xchg pop loop les dec loop (bad) int fldt movsl out out lock clc cmp mov push cmp fsts cmp cmp or lods inc jecxz or mov repnz sbb in loopne insb fisttp (bad) (bad) lahf orl mov cs sbb pop and fwait lcall nop cmp stc pusha mov or jecxz int pop adc pusha add lahf movb call ljmp mov lock xchg (bad) rorb pop pop mov cmp cs cmp es xchg mov mov leave sub cli sti xor sbb xorl pushf inc inc push inc mov std push jne stos js into cwtl sub scas in push imull sti ss xor mov sbb sbb data16 int jno insb cltd fwait cmp push dec adc fucomp sbb inc mov pop cmp add (bad) (bad) fiaddl fstpl scas push mov xchg jns (bad) rcll sbb out xor in jp test mul (bad) outsl fiadd sub and jmp not mov call mov inc stc neg jmp mov mov mov push pushl pushl ret clc cmp not stc cmp cmp cmc sub pusha stc pushf call movb lea pushf pusha movb lea call stc jmp mov pushf push lea je call addr16 inc xchg xor ja inc roll dec mov and lods lret dec lret xchg or cmp mov sbb sub fwait cmp dec inc dec fwait mov dec mov into push test jge aad lcall jb push repnz test jns fcmovbe into jmp sarl xor fisttpll pop dec mov inc cmp fnop les ljmp add or dec add stos test call stos dec rclb inc femms cs xchg and in mov hlt cmp lods loopne mov mov pop fimull push int3 sbb iret mov inc daa out adc es jmp xor push aas xlat daa fcomip push fsubrl (bad) sbb mov (bad) pop xchg pop sbb mov xchg gs test cmp movsb mov test jl lock jns mov mov mov ljmp add nop std xor xor pop int jp jne imul loope jno mov add insl inc cwtl cmp xlat int ret mov and sub (bad) fidivl adc sbbl cmc mov sub into sub mov lods xor ja fs call push pushf pusha mov adc jmp lea jbe shld bsr inc mov btr xadd rol cmp add lea mov push dec add test adc sub movl cmp shld cmp inc mov stc pushf cmp pushl pusha call setp call jmp pushf lea jne pushf call cmp sub jmp mov movb lods pushf test test bt add movl cmc pushl neg call mov lea jmp push mov inc cmp scas into dec ret inc mov cmp scas lret ss add adc xor js test xorb jl inc or jg jo arpl mov xor les (bad) (bad) xchg imul int jno xor mov (bad) dec fistpll lret mov or subl jnp sbb xor dec test or xor adc js (bad) cmp add in jne sub bound (bad) push lret icebp dec test mov cwtl (bad) dec and int3 push out popa jg sub xchg notl test xchg add mov mov call jb cltd dec (bad) cmovb inc mov cltd push std std or fwait jae movsl dec pop lock clc push jle mov xor jl (bad) mov sbb mov and fcoms test daa dec ljmp or mov test orl inc cld cmpsb lods in lods (bad) outsl test and xchg inc and dec inc xor clc push jecxz adc and into arpl das leave je jg cmpsb or inc mov shll dec ja jbe lret dec cli loop add hlt sub mov inc pop enter mov lea movzbw mov push movzbw movsbl mov not mov pop jmp not lea mov mov lea push lods xadd pushl cmc rol neg not inc ror setbe btr inc neg pop not dec btc jmp mov pusha push mov movb movb mov pushf pushl ret bswap sbb call mov stc cmp jmp mov bsf setbe shrd daa mov lahf cmp rcr cmp movsbw mov jmp mov movzbw mov pop movsbw lea pushl call pushf pushf cmp not movb sub clc cmp movsbw lahf lea not lea mov push lea ja call dec sahf mull lock jg jg dec jae sbb popf test mov sbb ja loope or sub xor les stos dec fcomi jle ret cmp push push insb sti inc (bad) xchg pop stc icebp repz ret xchg jecxz mov jo mov dec (bad) (bad) mulb les mov test jae push xchg int cmc xchg sub cmpsb inc dec data16 in cli cmp xor xor xor xchg je loop sbb push icebp dec or pop push lea outsb (bad) cmp pop jo pusha (bad) mov popa arpl jo jmp push bound cmovb pop out test dec xlat fstps sub jbe push fidiv pop lock fsubl add clc pop je hlt adc orl (bad) jb stc push xchg fucom sub cmp push iret das in test inc lea sbb movsl xor out push xchg pop mov (bad) xor iret addr16 pushf sub rclb lret jbe incl je jbe adc sub mov decl adc xor mov xor leave cmp xor cmpsl sub jl sti (bad) in addl inc pop (bad) push lea call clc pusha mov stc call mov lea jb bt cmc pusha mov setg bsr sar or mov jmp clc sub jle mov pushf mov pusha pusha pushf jmp xchg mov mov setb lea jmp cmp pop lahf lea mov bswap mov movb pushf mov pushf lea ja call ja dec popf repz push jecxz (bad) jge dec lret add jae (bad) or xchg sbb movsl dec mov fsts mov lds mov icebp lret mov mov jge jae repnz outsb pop mov inc in adc sbb iret in fwait xchg inc les dec add xchg push ret (bad) imull push outsb ljmp fadds (bad) sahf mov xchg sbb (bad) es jp inc pop (bad) movsl pop lcall sub xor dec loope (bad) (bad) push inc ret inc popf negb out add sub cld aam mov push inc bound mov iret mov inc xchg ss jl test xor xchg dec das adc and popa or sbb push push pop sti mov (bad) stc orl and inc cltd popl sbb or ficomp pop jbe dec xchg push inc pop movsl sbb ds jge xor or aad jge ret push cmp push sbb test pusha fwait ds pop cmp cmpsl roll mov push cmp bndstx insb outsb inc out push cmc pushf sub clc shrl xchg xor cld cmovb sub lahf stc or clc jl in cmpsb loop lahf mov or xchg fwait pop dec mov fbstp lea (bad) in les cmp arpl sahf popa test dec out clc jmp sub xchg cmpsb mov testb (bad) (bad) lret mov movsl clc jge mov jbe ret fnstcw or push mov and pop cmpsb xor test inc icebp lods shrl push hlt jp ret in and mov or mov aad ds clc aas inc sub bt push mov pushl popl movb pushf bt cmp push call jmp cmovb in ds mov bnd fcoms and std pop jmp mov dec ret inc fidiv into xor pop lds xlat mov fsubrs and lock mov jg out xchg jecxz sti mov pop pop stos sbb pop jge add pop stos xchg add mov out bswap lods push adc lea outsb mov cmp pop mov dec adc je dec lock adc mov sbbl and mov mov addl fcmovnbe pop scas sahf pop cli rcll xchg cmp mov dec add cwtl inc mov adc pop in mov mov gs xor jge mov scas lret fisub mov pop (bad) (bad) mov imul dec adc loop divb call dec mov fidiv fnstenv or pop fcomps jbe push repnz in inc testb adc lret or sub sti (bad) js xlat dec sbbl mov popf pop scas out icebp push in xchg sbb jb cmp sub mov repz data16 sbb shrb xor adc mov pop mov and sti repnz pusha adc sbb pusha push std push sti add push lcall mov movsw push mov imul xchg mov iret mov adc movsb stc xor repz cmovb adc mov adc mov inc mov ja jne lcall jp jg std xchg nop outsb jle test or and ljmp into pushf ret in mov adc cmp daa mov and jo,pn fistpll sbb mov sub mov mov xchg in inc pushf dec mov (bad) fisub dec adc lret fisubrl or xchg test mov sbb dec into cmp loope mov fnop loope,pt push adc sub xor xchg sbb mov ja xor stos mov rclb test (bad) mov ds iret mov scas in fadds (bad) cmc inc (bad) pop jl cmp mov js int dec call xchg dec arpl pusha cmpsb out push adc (bad) icebp jae inc mov sub sub cltd bt xor test sbb ret push loope dec dec inc addr16 fnstenv pop rorl xor clc mov inc daa loop inc dec jp xlat cmpsb std das adc or subl jge enter add out imul mov cwtl jmp rcll cld mov popf sti gs cmp inc push mov cmp lods mov and cmpsb mov pop push repz jno in std mov aam lea insl xchg fcomi inc div rorb add ret (bad) jmp mov jmp add stc test jmp xor pusha pusha pushf push lea jmp int3 mov inc lods out mov jle cwtl (bad) cmp mov out push ds pop push sub cmp in test cmpsb adc enter dec fsubr cmp inc mov cli cmp xor sbb in push adc mov lahf cwtl adc out sub pop aam stos adcl call aam xchg mov gs dec and (bad) std nop push mov sbb arpl outsl mov shlb nop std or rolb push fdivs nop aaa fisubr lods notl sub fs dec push sbb and fs call mov xor bswap add das pop rcl bt bts pop push cmp pushf sbb call inc int3 test xor sub iret test add pop fwait push push dec sbbb test movsb fcomps jae (bad) or sbb add dec scas cld aam call sub add xor inc insl pop mov testb (bad) pop out jecxz mov push cwtl pop mov push push iret in push repz pop cmc in insb fsubs mov loope jo sbb dec fistl add test sub or lret ss outsl xor fisubr push push sbb pusha cld addr16 (bad) or mov sub push fmuls adc adc jb xchg stc add pusha je cli cmovb imul in (bad) (bad) dec scas js (bad) cs (bad) mov mov or dec cwtl outsb fs cmp (bad) xor xchg or mov cmp pusha xchg xor insb std mov call pop mov push int scas cmp hlt push mov int3 mov rcrl jp push jmp lea jbe ror movzbl xor xadd sub not movsbw mov and inc bsr rol mov pushf xor sbb add sub bsf (bad) notl xor shr rcl sbb btc pushf mov bt shld movzbw add pusha mov pushf call ror jmp div sbb sti cmovb ds cmp (bad) jo inc jp (bad) xchg outsl mov rcr xchg test push dec hlt in mov pop xor cli nop pop (bad) xor jle nop jle jecxz adc push adc lret fs cltd js sub dec mov popa (bad) movsl lret mov inc push mov imul out pop gs nop adc addl insb pop jge repnz and call mov jnp ss mov call jnp and sub outsb sub mov push sti fneni(8087 or mov int out add outsb add dec and pop dec mov mov inc adc out or es (bad) sbb fdivrl mov sbb xor cmp fwait repz or xor and adc rclb jge pop loop je lods mov xchg lret xor mov sub push stos fisubl inc lock pop loope jl pop (bad) cmpsl pop imul mov sub insb (bad) enter lock mov xchg push lock sbb cmp push loopne repz or addr16 adc adc (bad) sarb mov lods inc jg xor dec fildll xor stc inc mov push dec in xor pop aad js (bad) lods jecxz lea jg cmp call jmp lea call cmc cmp cmp push sbb jmp sub test call call push lea call pushf not not movzbw mov push xchg call pusha stos pushf push mov lea jmp sar pusha mov add jb cmp cmp pusha movw lea jb xchg mov shr shl not test xchg inc mov shrd neg add pusha movsbl setb movzbw push lea pushf call xadd push adc rcl push xadd ror bt mov sub lea sbb xchg mov sbb bts rcl and mov push stc stc pushl or pushf jmp add call cmp sub shr rol rcl call call lea call not not lea push pusha call cmpb jne shll shll push lods neg inc neg dec not neg rol xor mov pop ret inc stos imul xchg or push mov xor adc dec mov mov adc mov dec inc dec pop inc lcall clc cmp ret cmp ret das scas sbb movsl jb inc (bad) xor jae inc and dec jns arpl cli or jno inc (bad) cmp in ret scas push mov ficoml mulb orl out push push mov into inc shr int enter lret jecxz sysret jns je (bad) addr16 dec (bad) (bad) cld or xchg (bad) mov mov aaa or fldlg2 xchg adc lea push movl lea call call lea ja cmp sub push lea jmp mov movl mov pushf movl pushl ret not mov mov call lea je bt stc cmp jmp lods clc cmp bt bt neg pushf inc cmp stc cmp jmp lea ja stc mov seto call pusha pusha adc call call add inc gs insb addr16 je insl add push dec inc dec xor cs insb add fsubs add xchg cmp dec push or jle (bad) ljmp pushfw in adc pushf lea jae dec pop cmc bts cmp pushf mov pop movsbw push mov btr neg sar cwtl cmp setno mov push movb mov pushl lea jb data16 lock push cmp lahf pushf mov lea jne pusha pushf lea jb btr rcl mov cmc jmp shr clc clc out ljmp fs je test add cmc cmc pushf test cmp pushf push lea jmp lea push lea jmp lea je push clc mov not add call seta lea pusha movl call mov or push sahf xchg clc (bad) mov sahf out dec out sbb jo fs loop mov outsl out stos inc mov and jbe and mov mov mov movsl dec fldenv ljmp pushf push loop dec (bad) lock popa pop scas cmp lds fldl mov add out cmp movl mov xor cmpsl repz es xchg mov test add dec ljmp repz inc das mov jge (bad) push dec (bad) imul adc mov xchg and outsb in movl xchg mov push movb mov lahf push movsbw not lea call mov call jmp movb lea call stc push call mov movsbw add pop add ror btc shr sbb inc mov inc rcl bsr shr add not pop mov pusha mov mov pushf mov lods test jmp pusha lea jb push pusha cmp pushf jmp sub jmp add push gs insb outsl jae dec gs mov xchg pop lea mov movsbw mov jmp lea ja pusha call mov cmc call pusha call cmc movl sub stc clc cmc jmp call pusha adc sbb or sub pop xor es lret nop (bad) add ds jmp subl jmp cmp mov add insb loop inc and leave jne sub adc sub pop loope loopne popf push mov div popf sbb or or in ss cli jno or fisub sbb stc arpl es pop push sub rcrb popf xor (bad) adc sbb mov aad cltd clc xlat jno mov xor add cmpb rorl pop mov insb mov pop cmpsb dec mov push (bad) and dec xor minps dec icebp inc mov xchg fldl into lds jmp inc mov cld mov addr16 into lret gs fmuls inc xchg sbb xchg pop int3 ds rcl in popf mov cmp daa aaa xchg mov jmp mov movsl cmpsb dec adc ret xor xor sub or or pop pop xorl jle jecxz mov subb shlb jbe jns xchg pop enter arpl or loopne,pn movsb xor push adc into pushf sbb rolb int sub add ficoml cmp jge lock dec enter out aas jg arpl xchg imul xchg lock ret mov add test imul in mov movl lods push lock fstps mov xchg sub pop and (bad) xchg popa enter sahf mov cld addr16 lret sub loop xchg in cmp hlt cs cmpsb push (bad) out mov dec cmp scas test and jl iret movsb jle push pop or aas mov push push push add cmp mov xchg outsb es dec ljmp in pop inc cmp inc add je pop pcmpeqd dec mov icebp cmp cld arpl clc out sbb test push or out leave dec in ljmp cmpsl pop lret scas in lret push scas push call xchg sbb test test xor jmp movb lahf pushf mov pop cwtl pop pusha lea movw jmp movsbl movsbl call imul jo fs insb add or push or inc and clc scas (bad) cmp mov push mov in pop movsb or lea and xchg jg fldcw cld inc add enter dec fnop cmp add popf lock mov outsl xlat or sbb enter inc shrb dec and mov jg pushf xchg jnp ror ficoml pushf add jl add outsl mov mov mov jns jp arpl das fsubrs data16 mov sub mov jmp lds sahf test dec add (bad) fimull std xor mov sub jnp lret push pop (bad) cmp jmp jmp ror movb jmp movsbw bswap mov lea mov js pusha lea jmp call pusha mov pushl jmp mov pushf lea jmp movw pusha mov pushl movw movb lea jmp clc lea jno add pusha jmp call mov push movb push lea jmp sub cmc add jmp mov bt or movb lea je stc push pusha pusha xor pushf jmp dec stc rcr ror btr lea jmp inc pushf clc bt add jmp pushf pushl popl pusha pushf push lea jmp jmp jmp shld mov jmp bt ror bt clc cmp sub cmp test cmc mov bt sub jmp stc call push movb call add pushf mov mov pushl lea jmp bsr neg adc notl dec mov cmc call pushf pushf popl pushf jmp pop pushf rdtsc shl pushl popf pusha mov setl pop call mov call test movzbl call cwtl mov pushf mov mov pusha pusha mov push push lea jmp cmp sub call movzbl lahf lahf mov call call xadd ror bsr rcr mov sar cmp add neg not xor xor jl lea neg not sub adc btc add cmc (bad) testb bts add pusha ror mov btc add shrd jmp pushf pushf inc pusha decl movw pushf pushl jmp ror mov movsbw pushf mov movb pushf mov movb pushf call ror aad xadd ror mov adc bts jmp mov mov push pushf lea jmp neg bt bt test cmp add push lea jo pusha push mov push pusha pushf pushf pushl ret cmc movb rol push call pushf pushf lea ja clc mov clc bsr aad lea shl sub sub aad not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call add call cmp bt sub push push jmp pusha push movl call pushl push movw pushl popl mov movb lea jmp call inc clc shr mov sbb call mov movzbw setbe not mov bswap movsbw bswap mov seto pusha xchg lea xchg lea setae setge mov xchg lea lea push push repz popl xchg pushl mov bswap xchg push mov movsbl mov push inc rcl rol movsbw push call add pushf stc shld pushl mov pushf mov mov pushf push movb pushf popl pushl call cmc cmc add call jmp push pushf popl pusha mov mov pushl popl push lea jmp cmp sub call mov call mov pushf pusha pushf pushf popl movb jmp call movb mov pusha pushl mov pushf call mov pushf lea jns push jmp pushf lea jo popl pushf pusha movw lea jmp mov mov lea jge pushf push movb pusha lea ja popl pusha lea jmp pushf movb mov movb pushl lea jmp xor cmp xor call shld mov movzbl mov bt stc pushf call pushf popl pushf pushl popl pushl lea jmp push pushf push pushf pushl popl pusha pushf pushf lea jmp mov pusha movb mov pushf pushf mov call movl mov call pusha mov call not pop cmc neg pusha or pushf add not cmp add sar lea not mov clc movw sub push call sub jmp movl mov jp pushf mov pusha jmp neg shrd movzbl shrd sub jmp mov mov ror (bad) repnz call push push movb movb mov pushl mov push jmp jmp push mov pushf call jmp mov mov movb pushf jmp mov jmp daa mov dec mov pusha jmp push call pushl popl movw lea jmp sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call lea jne or jmp jmp lahf aaa xchg mov btr sub mov clc clc bt add pushf mov mov pusha lea jmp cmc cmp add call sub call test pushf cmc jmp mov push push mov movb lea jmp call mov push call pushf jmp test xor test sub movb mov pushl movb lea jmp shld aam call rcl rol or mov bt pusha add mov pushf sub cmc pusha call mov call inc push push mov pushf lea jmp movsbw btr ror mov adc dec cmp mov bt sub cmc test shl pushf jmp add movw pushf pushf pushf popl pushf movw call push pushf mov pushf pushl ret rol movzbl push add pusha pushl inc call call pusha aam add mov pusha call mov push mov lea jmp test stc bt sub call pusha pushl mov jmp mov call mov call pushl popl push pushf lea jmp and btc shl mov rcr bswap inc sub shrd movsbw add inc mov inc bswap rol cmc rol inc inc adc call call call call cmp sub pushl cmp push cmc sub call pusha mov call decl pusha movb lea jne pusha pusha lea jge mov pusha lea jmp bts shr pusha mov cmc bt sub mov test clc call cbtw or sar lahf mov neg not mov push clc stc stc sub stc shl movl mov pusha mov mov pusha pushf popl pushf pushl popl pushl push movb movl lea jmp jmp mov stc call mov push push jmp jmp pushf pushf mov pushf lea jmp pushl popl pushf push lea jmp pushf pushl pusha mov jmp aam mov pushf seto sub mov clc cmp pusha cmp add push pushf mov call jmp pushf pushl call mov pushf jmp pushf pushl popl movl pushf movw pushl lea jmp pushl lea jge push mov call pushf pusha movw mov push mov jmp push mov pushf push push mov call jmp pushf mov movb pushl pushf lea jmp jmp bt xor push jmp mov push movb lea jmp mov call mov pushf jmp sub stc sub jo push mov shr pusha call shl pusha mov push mov mov call jmp pushf call mov pushl lea jmp pushl pushf mov pushf movb mov pushf mov movw lea jmp call mov push call pushl add pushf lea jo push pushf mov mov lea jmp call das mov cmp pushf lea stc cmc clc sub movl bt add pushf stc clc mov neg stc pusha jmp push and pusha pushf pushf popl lea jns push pushf pushl popl pushf mov lea jmp mov pushf lea jmp call movb call mov pusha jmp push shr lea jle mov jge push pushf popl push pushl popl movb push lea jmp pusha push pushf mov mov push call pusha mov mov call pushf mov jmp movsbw mov pusha pushf mov jmp push mov jmp pusha mov movb mov mov pushf lea jmp jmp call call stc add lea jno mov pushf lea jmp push push pusha pusha call call or movl stc xor lea jae pushf inc call mov not mov pusha mov jmp add cmp cmc std pushl popf push lea jmp mov pushl mov push pushf mov push pusha lea jmp call jmp bsr inc mov test add pusha pushf pusha lea jmp mov pusha lea cpuid cmp sub push stc cmpl pushl pushf mov pushl pushf mov jmp mov pushf popl lea jns pushf push pushl pushl popl pushf mov movl pushf lea jmp clc pushf clc add jmp mov call movb jmp lea jne stc push stc sub pushf call neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc xor not push setno rol dec shld not bswap or pop shld xor bswap jp sar bt xor pushf shl shrd rcr movzbl add cmc bts sbb lea add btc call jmp jmp or call lea jge push mov mov jmp jmp pushf mov jmp pushf jmp pushl popl mov pushf pushf lea jmp push mov mov mov pushf mov pushf mov call mov jmp mov jmp bt xor movl jmp push pushl popl movb pushf movl push lea jmp pushf pusha mov mov pushf pushf lea jmp lea shr xor rcr shld movzbl cmc inc cmc sbb lea jmp pusha mov jmp movw mov pushf pushf pushf popl jmp pushf push pushl jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp call mov pushl call mov movw pushf lea jmp cmp mov cmp add stc clc stc movl mov movb sub call stc cmp mov sub jmp cmc cmp shr jmp call push jmp dec btc or mov push add mov clc add jmp pushf mov pushl pushf popl pusha jmp mov pushf mov mov jmp not pusha cmp not push cmc sub jmp rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp jmp call jmp shrd not mov stc bt stc add pushf mov jmp call push jmp mov pushf pushf push lea jmp btr dec shl bt mov stc test add call call mov pushf pushl mov movb mov lea pop lea lahf mov pushf mov lea xchg movsbl not mov not mov movl pushl ret push push mov push pushf lea jmp cmp neg neg add sets xor rcr add rol dec add jmp push push inc jmp divl push mov push mov push jmp cmc xor stc stc mov bt test stc add pusha jmp movl jmp bt shl sub mov add shr add mov cmc call mov mov push pushl movb lea jmp mov pusha call push pusha mov pushl mov pusha mov jmp btr daa mov sub shr rcl mov call push call or mov push pusha lea je call pushf pusha mov movl push movw lea jmp pushf jmp pushf mov pusha lea jmp pushf xchg jmp pusha xchg call movw pusha pushl popl push movw lea jmp pushf neg cmc call push pushf pusha jmp mov mov pushf mov pushl push pushl lea jmp and lea jno push movb pushf mov call pushl mov pushf mov mov jmp push push movb pushf mov lea ja pushf mov pushf push jmp call or mov enter and mov lcall lcall mov mov mov mov mov add in mov jp mov enter jo mov (bad) loope jmp in mov int3 aad (bad) cmp mov xlat lock jmp mov fsubrp mov fs mov adc loope call mov and mov into loop pushl aam (bad) jmp mov (bad) mov aam mov mov mov mov mov scas loop (bad) jmp mov jp mov and mov ror pushl out lcall mov ret in mov sub mov push fdivs (bad) (bad) mov into loop dec (bad) mov jp mov add out (bad) jp mov (bad) in mov ret in mov pop jmp pushl lock (bad) ljmp pop out pushl fnstenv pushl aad push (bad) inc into mov xchg mov (bad) mov loop mov pop jmp call mov mov mov pop fnstenv (bad) jp mov (bad) mov and mov pop aam dec (bad) mov lock call iret mov pop fnstenv inc loope lcall fnstenv inc in mov push fdivs (bad) in loope decl loope incl in mov fsubrp mov add jmp call repnz or aad pushl out mov mov mov (bad) loope incl in mov xchg mov fnstenv decl mov inc iret mov pop aam (bad) jp mov jmp mov inc iret mov sahf repnz mov mov push in mov (bad) in mov push in mov insl call mov sub mov sahf repnz inc iret mov scas loop decl loope lcall fnstenv decl in mov mov mov ror decl repnz xlat lock insl loope pushl mov mov mov lock (bad) in loope decl out lcall mov ret in mov mov mov int3 aad (bad) ljmp incl in mov insl call mov int3 aad jmp repnz insl loope decl into mov jmp mov mov mov jo mov or in mov adc out decl fnstenv (bad) fsubrp mov fs mov fnstenv decl ljmp jp mov jp mov ret in mov pop aam decl fdivs ljmp mov push fdivs dec loop decl fnstenv pushl mov in loope ljmp mov aam mov fnstenv (bad) cmp mov pop jmp decl repnz and mov into loop lcall fnstenv jmp dec (bad) mov enter scas loop ljmp lock loop mov and mov jp mov and mov pop fnstenv inc loope call fdivs ljmp repnz lcall lcall (bad) mov jmp mov pop out pushl mov (bad) ljmp (bad) loope lcall iret mov or in mov mov mov (bad) loope jmp mov and mov sub mov cmp mov sub mov mov mov xchg mov and mov mov mov pop aam push (bad) jmp incl mov pop aam (bad) jp mov aam mov clc in mov jmp mov shr setle xor mov lea jg pushf pushf sub stc shr mov mov pushf mov pushf pushf call push pushl mov pushl pushl pusha pushl ret jmp ror add pusha mov mov call xchg jmp mov push push movb lea jmp call stc bt sub jmp pusha pushf pusha pushf popl call bswap call mov pushf mov lea jmp shrd inc mov jmp mov push pushl ret add pusha movb pushf lea jmp pushf stc sub call pushf lea jmp mov pusha jmp push push push pusha mov movb pusha lea jmp btc mov call pusha clc mov bt clc clc push add movb call pushf push pushl popl pushf mov movb lea jmp shl bt shr pushf pushf bt call mov movb push lea jmp call ror clc clc call cmp stc add pusha jmp jmp inc setno neg pushf pusha ror call movb jmp pushf popl call call bt bswap lea jae stc xor bt pushf sub jmp jmp call push mov pushf pushl mov pushf pushf movb lea jmp pushf lea jnp push pusha pushl push pushl ret mov jmp add push push pushf call movw movw mov call movw jmp lea jo push pushf mov jmp push xchg lea mov mov jmp bt clc test xchg cmp mov call movl pushl popl pusha pushf push lea jmp call call pusha mov call pusha mov call jmp bswap add lea push pusha cmp jmp push movsbw pop lea push jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp mov jmp movzbl push inc setge ror rcr cmp or sub btc btr test xor lea jnp lea inc bswap inc rol add cmc lea movzbl push pushl mov bt pushf call not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp adc push jmp mov pushf lea jmp call stc mov pusha call pushl popl pushf pusha push pushf lea jmp mov pusha push push pushf mov call inc neg mov cmp clc add push pushf pusha jmp pusha pusha lea movl jmp pusha mov pusha mov pushl mov pushf mov movw push lea jmp mov cld call bt clc and push pushf popl pushf pushl pushl popl push pushf mov lea jmp bt sub mov mov mov mov mov push pushf lea jmp pushf popl pusha mov pushl popl push push push pushf lea jmp lea jns pushf mov call jmp push pushf pushf push mov pushl ret lea jne push push mov pushl push pushf lea jmp jmp mov pushf jmp bt xor mov push bt cmp bt sub jmp mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp pusha mov mov mov pushf movb lea jo push pushf mov pusha pushf pushf pushf lea jmp mov jmp mov call clc add push pushf clc neg call mov pushl pushl jmp movzbw mov cmc (bad) icebp add loope dec add mov add add lea jmp push pushf mov pusha pushf mov jmp pushf popl push jmp daa push bts mov clc stc pusha xor pusha test pushf stc neg pushf pushf dec test jmp cmp sub call mov push push lea jmp cmc pushl popl test call pushf mov mov mov pusha mov call bt add mov push pushl movl mov push pushf mov lea jmp bsf bts rol mov jmp stc sub cmp jmp clc pushf ror push mov lea mov call movw mov pushl mov pushl lea jmp pusha mov push mov lea jmp mov movb push push pushf lea jmp lea pushf movb pushl push mov pushl mov lea jmp xchg stc clc cmp mov bt movw pushf sub pushf mov jmp call movb mov jmp pushf jmp jmp bswap mov neg adc sbb mov pusha shr dec call push mov pushf mov call push mov pusha mov push jmp pushl popl push pushl lea jmp pusha pusha pushl popl push movw movw lea jmp pushf popl jmp call pushf popl call mov pushf pushl pusha pushl lea jmp call call pushf mov pusha pusha mov lea jmp movw movb movl pusha jmp push rol mov cmp cmc mov pushl call btc btr cltd mov btc pop inc jmp mov pushf jmp sar add xor bswap rol movzbw mov call not clc bt not test pusha cmp and pushf movl jmp mov push pushl mov pusha mov push jmp jmp pushf mov pusha jmp call pushf mov call call call jmp jne push mov pushf lea jnp pusha movb mov mov jmp mov pushl mov mov pushf mov pushf lea jmp pushl popl push pusha push movw lea jmp jmp jmp call mov mov pushf mov pusha mov pushf pushf jmp mov movb push pushl pusha lea jmp pushf pushf mov pushf push push lea jmp mov movb stc pushf test and stc stc mov stc cmp pushf push pushf lea jne (bad) repz jbe xchg movl lret setp mov pusha movw lea jmp test pushf sub pushf pushl mov pusha pushf mov mov pushf pushf lea jmp jmp mov clc pushl cmc cmp add pushf pushf pusha lea jmp mov pusha pushf movw pushf lea jmp pushl popl pushf pushf lea jmp pushf popl jmp movb pusha jmp mov inc clc pushf neg call call mov mov pusha mov push mov mov pushf mov call pushf jmp jmp push mov push mov lea jmp push lea jp pushf pushf pushf pusha jmp movb call mov mov pusha pushf pushl ret stc clc ror stc sub jae sub test pusha stc xor mov sub jmp lea jbe mov pushf lea jmp add clc clc pusha shrd pushl mov call xchg cld pop mov pushf cld lea call pushf mov jmp mov call movl push mov push mov mov pushf mov movb mov push pushf movb lea jmp mov call mov pushf pushf mov pushf pushf mov lea jmp push mov ror btr sar bsf add add xor lea bswap cmp sub bt mov cmp pushf jmp movb mov pusha push lea jmp clc test btr rdtsc call mov pushf lea jmp cmc jl daa not notl aas mov push stc test sub jmp call pusha sub jmp xor neg movzbl cmc call mov call add pusha pushf mov movl call push mov pushf pushl mov mov pusha pushf mov mov push jmp add add inc dec movsbw lea xor movzbl stc bt pusha call mov call call pushf jmp bts sar rcl movzbl add btc pusha movsbw add bsr add movsbw add jmp cmp shr pushf movb mov push pushf popl call mov pusha push lea jmp push mov call lea jne call pushf mov push lea jmp mov pusha mov jmp call mov push mov pushf lea jmp jmp movl jmp add add add and dec xor add add push add insl add .byte mov 