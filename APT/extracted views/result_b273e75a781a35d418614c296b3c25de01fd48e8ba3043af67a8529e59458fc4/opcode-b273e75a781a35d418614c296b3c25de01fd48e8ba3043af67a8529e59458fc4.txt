push mov mov repnz inc rcrb clc sbb gs xor pop and xor mov add or into jge loop cwtl add xor fdiv mov jle loope fcmovbe enter and adc push inc and sahf cltd aas test daa aad lcall movsb xchg push push test and and cmp sbb cmp pushf cmp or mov inc mov in in mov cld or leave lret and or mov outsb lods cltd lahf fdivl sub xor popa or jnp adc xor mov (bad) mov (bad) cmpsb xchg fsubrl out mov pop cmp sub (bad) test add dec testl aad sub test fistp adcb cmp (bad) mov mov dec loope push cltd int jge sub dec (bad) xchg pop push out movsb out sub mov decl data16 lods jmp std test adc lea and mov std sahf inc int3 xor gs cli dec (bad) jge in mov add test pop and add mov mov xor mov int3 lcall ja aaa cld push push add in mul and rolb ret push xchg dec mov dec enter jae push sbb es sbb jo inc in scas das std leave ret imul mov pop cmp (bad) decl popf sub test les mov dec lds mov sub mov sub fimul xor xor jb repz scas pop lds fcompl movsb pop cmp or call and sti lret push cmp mov fimull movsb and adc mov mov push pop pop add cmc aaa bound scas jb sub cmp sub pop xor lds jae insl imul jle push cmpsl je push repz jae add xchg cld pushf js sub jae xchg or std test inc aas pop bound (bad) mov fcompl inc test adc lods movsl aam fstpl or mov ret adc call push ds sbb cwtl cmp andl in jp push test loop data16 jp sub les mov lcall fistl push and lods push sbb lods mov lds stc sti jno ss mov and lods mov fs add inc cmp pop call rorl sub imul cli mov int3 loope xor sbb xchg nop sub xchg adc mov xor andl fdiv (bad) sti incb (bad) add les ret mov xchg lret or lahf sarl or and mov cwtl mov jne mov mov mov bound shrl mov xchg testb lcall mov les adc rclb pop push mov insb and fmul cmpsb and fsubs jns sbb xchg cmpsl aas inc mov mov adc loopne stos mov add jo (bad) adc adc lock or loope test (bad) and push and pop add sbb cltd outsl push subl push jg mov inc and push jne adc pop sbb pusha aam (bad) dec pusha movsb sbb lea add iret arpl (bad) neg fwait pop inc jno test shrb (bad) je jbe add or pmulhuw fcomps xchg add or or mov fwait adc or popf jnp cmp sub jl jge mov mov sti and ja pushf stc (bad) pop inc jae icebp enter jle adc pop popf sbb adc idivb or aas sbb lahf cli (bad) xor cmp cmp in add mov or push dec shll imul jmp dec or js add pop std inc popf ret fistp and int3 lds aad jo sarl sbb inc sbb jne std jp in ds xchg dec xchg push jno insl iret pop pop fimul in jecxz and scas pop inc lods mov paddusb add sub cmc lahf out sub lret loopne test mov cs sbb sbb dec dec sbb adc imul aam iret loopne je and mov leave sahf cmp test push test adc pop jno js and test add out es pop adc lds fdivrs loope (bad) jnp int (bad) xor or mov sbb mov adc data16 cmp push fdivrl neg add adc (bad) sbb movsl fbld aad cmpsb (bad) jae mov sub xor xchg dec adc xor push add cmp sbb xchg sub sbb sub mov sti lcall cmp add or lods fs cmp mov jae xor in stos or mov sti insl (bad) scas sbb popf or cmp and and dec jae inc pop ret dec jg shlb mov mov call int3 mov fsubp jns data16 je jmp jo repz sub adc insb cltd nop adc sbb xchg adc dec les icebp sbb pop lahf sub cmp mov cmp rcll insl idivb mov lock cmp jle aad popa hlt ds sbb push sti xchg fimul imul rcrl loope fsubrs cmp xchg insb hlt jo ret or (bad) pop and jno gs or xor aas inc loop mov pusha inc fcmovu es daa mov mov jg cmp inc insl mov int xchg adc mov or sbb xor movsl roll push out push jmp scas dec jp xchg fcomps addr16 insb push sbb (bad) iret xchg mov imul lret inc fildll std mov inc or dec and sti test xlat daa dec imul push mov in addl outsl xchg and push push in xor push rclb insb (bad) arpl mov movsb cmc mov aam dec add ret mov cmpsl mov xchg je jno arpl lods mov lahf xlat pop loope and aad shll test and jg int push cmpl xor into inc and out rol xchg test xor and push mov lea add fnsave mov lcall stc mov adc and inc inc imul cs add jae mov cli (bad) sbb test adc adc jmp sub jbe jno aad adcl mov cltd pushf add adc xorl mov or push lods hlt jno inc push inc adcb and lret fs sbb push pop lea mov enter (bad) aad push test in or or test mov jmp (bad) jmp lock aas fild dec cmp pop push xor test mov mov bnd push adc jne rolb cmpsl sbb push inc fsubr cmc jne fwait pop push rclb jno mov push and mov jb jp xchg sub pop jne ret push jns int3 lahf lcall outsb lcall jo pop fsub shrl in movsl sub pushf jmp pop mov or sub std xchg mov mov mov pushf movsl jmp add adcb int sbb mov mov sbb adc xor push jecxz push add pop arpl pop pop sub mov popa push je andl fnstsw jle inc daa inc sbb shrl pop data16 test loop add mov dec out pop inc idivb xchg xor pop je xor fiaddl lds dec mov mov jno xor test repnz movsb xchg jnp push fidivrl dec mov and xchg mov test rcrl xchg xor enter seta add add hlt in push pop inc repnz jo mov jle adc out mov outsb ret inc clc add inc cmpb decb lods cmp mov jns pop popf bound pop jns push mov pop adc arpl popa (bad) (bad) xchg mov sbb sub mov xor mov and inc test and mov nop add xor mov sbb and sbb test out mov lahf jmp add outsb jmp mov or test cmpsl lret and pusha (bad) xlat sbb add cld dec add lock data16 and cs pop hlt mov cmp (bad) sub mov adc or mov push sti and scas dec cmp test mov mov test sti sbb call sub fmull int mov or bound jo cwtl adc int3 mov cltd push push pop stc xor sub fwait es fnstenv adc clc jb dec xchg jno add cmp xor mov in addb jp (bad) jle xor imulb push jnp xchg aas sbb and push mov inc clc ja aad adc dec mov ja dec adc out jmpw sbb enter lods sbb and dec or and ficoml scas jge scas decb sub inc add (bad) and mov int add mov leave jmp pop cmp int movsl faddl jo fistp pop sbb jge add add inc movsl lret mov dec xchg cmp jns jo hlt sub mov mov or dec xchg xor mov into xor lret mov aas push divl mov pusha (bad) jecxz mov (bad) scas (bad) and mov bound xchg cld xor (bad) sbb pop xor mov pushf cld and movsl sahf mov mov rorb inc inc daa dec imul push sahf (bad) nop push pop xor negl in bound in jge adc add xor aas inc mov lldt xchg pop cs or insl sbb xor test add adc jbe and inc cmp sbb leave sbb jp popa push cmp movsl xlat call test push ss sub add mov (bad) sti movsl mov dec ficomp and imul push sbb and push fs outsb mov aaa fwait pusha mov fldl push cs jns daa faddl and imul loopne js mov insl gs sub add fimull ss or shl sub in jno faddl push push and lret xor mov iret sbb test push lcall add inc fist test pop movsl xlat push fwait fs xchg decl pop or mov pop nop inc es lds push pop xchg xchg xchg sti and ss orb popa and cmp push inc jge adc in jbe nop mov mov mov xchg mov inc push mov ja add add sub fisttpl flds push adc dec dec mov inc lods cmc cmpsl roll int push mov iret jmp add mov pop lock mov (bad) leave nop scas xor ret mov nop xchg andb cmc lods (bad) std int3 cmp stc jle sub cmp xor or jmp add (bad) popa jmp (bad) pause mov cmc nop mov cld outsl mov lods mov inc inc ds mov pushf push sbb pushf sar and inc outsb or pop jl sub out negb out sbb push and sub jo out in js in pop pop jb jno xchg pusha insb mov movsb push arpl cmp (bad) mov es mov adc jnp,pn mov pop arpl outsl jbe and mov and cmp push push pop decl inc adc cmp pop and ret aam flds push mov xlat mov or pop xchg sti and into ret inc dec jnp and lea adc cmpsl push scas dec roll pushf lock in shll adc fnstenv push ja xchg not aad jge repz andl out imul shlb movsb jle pop in jge xor push (bad) repz ss repnz lret pop andl out pop or add xchg test test out jns xor icebp (bad) mov loop es loopne mov xchg add jg sbb pushf je or bound cmp jg sbb inc mov inc loopne dec mov add push mov pop mov inc rolb ja inc xchg in ret lea data16 and cld sbb inc shrb popf adc or and sub mov xor cwtl js and adc or add xchg sub adc lret mov mov jecxz pushw jns xchg sarb std mov add cmpps into jae sti ljmp push int3 stos sub add out dec mov test rclb sub sbb jo inc popf and rcrb sysret cli aaa lock push call mov daa fadds adcl mov jecxz sahf loope mov das sbb cli out imul loop pop test mov push inc adc cmp scas mov hlt lahf je popl int inc lods fnop int3 jnp jne pusha loopne adc imul pop imul sub call arpl fidiv pop out test sub push test pop mov in pop add pop lock adc xchg inc addb and sti xchg mov ret push mov sahf es mov nop dec insb bound fldenv (bad) or push push icebp mov sbb insl xchg xchg xchg and mov aas pop mov repnz mov mov jle cmp gs (bad) pop pop xor jns (bad) cmp hlt adc lcall xor or pop (bad) jmp andb mov mov add adcb mov pusha ret mov aad mov lcall jle add push jo inc pusha push data16 sub lods sub pop (bad) pusha aad sbbb xor jb mov cmp cmc sbb in into pushf sahf cmp cltd imul rclb mov sbb lds mov add (bad) xor outsb or mov pop push or xor push insl cwtl cs arpl int3 mov loope lahf dec lea mov gs cs rorb test pop (bad) mov insb lret in push push out cs mov jbe les cmp cltd sub rcll cmc cs icebp into cld push mov jnp pop movb and repnz lds jge inc jbe push mov adc cmp xchg pop or and movsl sbb fstpt imul test lock int sbb sub mov outsb enter arpl xchg jnp push and imul and fwait stc and sub test std add xchg (bad) pop sub sbb (bad) fisubr sub jno sub lret dec repz push mov or dec and dec ss and sub sti icebp cli mov out cld out xchg aas jg test jno xchg lea movsb scas mov incl adc or incl imul cs or mov fstl jecxz mov mov xchg lods insl pop sti fimull push leave jg,pn adc int3 push (bad) xor sub mov ficom sub ds push insb and daa dec mov and jnp aam inc mov das out ret jg jns popf cmp add pop repnz pusha in mov cmp cmpsb sbb aas mov add add mov and cmp cmc mov push aas dec ljmp daa inc jae test mov repz xor mov inc cmpsl sub aas std mov stos jo adc (bad) fisttp cmp dec mov mov adc pop push sbb je sarl and or add flds popa cmc inc das add dec pop pop mov push lods jp pop (bad) repz sti test cs repz inc adc dec push lds pop pop mov dec inc add lods sbb test xlat or dec pushf push mov jno add mov sti ds scas adc (bad) mov cltd pop sbb adc lea sub adc and xchg mov xor lcall fimul dec fstpl push and and stos push xchg loopne push cmpb cli outsb sti add add fnsave jno fwait or xchg dec cld inc mov aam fsubs movsb sti push into cmp adc push outsl int adc xchg mov in and mov add jne jmp jp sbb inc add cli dec loop repz mov xchg xchg rorl xchg rcr xchg sbbl cmp push cmpsb (bad) decb mov push inc adc sbb lds lea jle (bad) (bad) jle xor pop dec cmp inc nop xchg or add jge inc adc cli mov (bad) lock push pop data16 jo (bad) mov call mov sbb adc mov insb or mov mov out pop xchg imul mov cmpsb xchg (bad) std sti push cmp test or and jne es mov push jo xchg aaa clc add xor pushf aas lds daa outsl mov insb pusha or mov sub sub ss (bad) sbb push xchg and or icebp arpl movsb iret mov and fildll dec adc insb mov mov les jns loope popa mov cmpsl fnstenv mov repz jl add pop xor add cmp pop cmp lcall and push es (bad) leave in and dec enter sub sti inc cmp sahf into inc rcl push jnp sub cltd fwait pushf or repz mov inc xor jns pop pushl push addr16 cmpb ss dec push push mov sbb cmp pop sub adc and (bad) inc mov or ds (bad) or adcl ficomp movl cmpsl mov xchg scas jo (bad) data16 jns dec test sub mov and fcom cmp pop sahf mov xchg inc je sbb cmp aaa jno lahf (bad) lret cmpsl adc or in cs cltd xchg jg pop mov insb sbb jne push mov out mov sub lods cmpsl ja lods inc fwait jl daa pushf mov es loop fwait in (bad) insl sbb jg jp in adcb repz mov cli int3 ret mov in aaa push sbb mov jb dec mov push mov inc cmpsl sbb sub (bad) adc sbb inc jp test lods movsb clc into sahf and mov (bad) cld mov mov sar and cld cld (bad) cld cmpsb addr16 jns cmp out or cld cmp and mov imul jl movsl mov inc cmp rcll xchg mov (bad) in and jl push lret and sbb gs inc xor push sub sti fidivl popa jnp add xchg and cmpsl stc and pop aaa pop outsl (bad) xchg jne bound movsb leave cmp sbb xor shlb push dec aad imul xor xchg dec shl test lock out or test or dec or sub fnstcw jl dec xlat jle in iret test xchg mov fistpl mov movsl pushf push jmp fstpl (bad) gs cs insl push cmp mov rolb faddl pop iret fs insl and rclb add in push cmp push clc add call jnp mov dec add ret or cld and mov push inc sarb lcall jo aam imul dec imul ds shlb faddl inc inc push js fstpl and das jl popa push and pusha sbb insb int rcr mov or adc push jecxz mov push xor shlb xor lahf cmp decb movsl mov mov ss sub nop sahf movsl sub testl loop xchg setno push loopne inc jnp es fbld sbb xchg fs or dec xchg push xor xor sub lds sti sbb jbe aam iret je mov jl push lea mov rorw out jne sub dec pop or subb clts and jge push jnp clc xor jb mov xchg jbe test pop mov sbb inc push pop adc push cmp fisubl das cmp pop out sbb insb andl push out popf mov mov ljmp push in loop scas sbb pop or sub sbb mov xlat push xor push in mov jae or dec lods pop mov aam cmpsb lea inc mov sbb in adc inc push pop xchg cmp add jg adc add cld (bad) push adc xorl cld jge pushf jp adcb jae pop aas pop test mov test push pop inc jo jo outsb and bound mov and lea push fistp leave scas movsl lret inc mov mov (bad) cmc outsl sbb testl insb je xor inc mov mov sub call sahf mov daa fcom dec push cmp jmp dec sub mov cld in xchg cmp gs mov xor pusha fs pop or push sub aam xchg xchg mov repz in sub sbb pop add jne sub jp pushf sti shrl fwait inc dec xlat arpl sub gs fs lahf mov test daa ret add push mov (bad) push or add jl iret mov iret lods and daa adc sbb (bad) dec jns adc out loop out cmp bound xor pop sbb and xchg test mov xchg enter ja jnp in and push loopne cltd xchg xorl lods jecxz stc in dec mov pop mov bound div inc or das call inc jb pop sbb repz lahf sub push addr16 popa pop adc push dec mov int (bad) xchg sti sub iret or aad and dec jb mov mov inc in xchg pop push adc lcall adc jg mov call stc adc adc pop pop sub push xor mov add sub (bad) and push pop ja clc roll xchg loopne sbb and out icebp out in sbb push (bad) in jl jg inc mov jg in push jl add pop lret (bad) xor adc mov das out clc ds inc jbe or mov iret stos (bad) lods adc cltd cwtl and jnp sub cs mov push adc push lcall (bad) in add and xchg adc dec adc inc inc leave adc mov cli cmpb inc xchg into mov xchg sub sti aaa push push and lock imul aas or inc xor jno pushf jl cmp and and push cmp mov adc mov das xchg push cltd aaa dec mov and lock lahf and jnp sub push mov pop adc adc mov xor lret (bad) mov scas std inc mov dec jp leave add addb notl sub pop sbb loopne jnp fsubr and xor test mov out mov pusha popl (bad) ss xchg fstpl mov (bad) add inc adc push push adc add addr16 push cmp lea xor and aas ss cs mov lahf lahf out insb in gs popa jl pop bound (bad) xlat lret push sbb mov cmp ds fdivrl sti inc lods adc in add or jmp dec cmc sbb or ja repz push stc repnz out outsl mov addb inc ret movsl xchg subl aas adc nop loopne inc sub popl lcall adcl fistp fildl ret and les js or pop rcrb lods xor out out (bad) or int or pop mov in fistl sub or out sbb idivl cmc movsl mov lret les jbe push popa mov fwait (bad) scas mov push imul addr16 (bad) outsl mov cmp add out lods lahf stos mov adcb inc lods mov adc movsl lahf push aaa shr insb pop sbb lds dec clc popa and pop mov loop or mov jno test pop inc lds and imul lds xlat mov xor addl icebp xor fstpl push mov dec xchg rcrb test ret scas mov push int3 cmpsl sar das (bad) sbb pusha lds loope sahf pop insl arpl das xchg mov add mov ja mov add test jo test popa jecxz and in mov test iret (bad) in cmpsl adc inc jmp mov xchg xor clc dec pop push ds sub and daa sahf imul add sub inc das dec xor (bad) xor cmpsl mov mov xor sbb movsl and lods lds adc subl jmp and lea test push jo dec clc mov test jo mov cmp shrl idivl cmp or sub mov pushf popa xchg push cltd ret push push rclb inc fs (bad) enter ds imul lea pop xchg push pop das xor imul ret inc adc push mov les js sub inc cli pop push xor inc cmp int cmp mov and inc mov mov jb cmp xor test in pop out mov data16 cld or test and fimull lds das add lds pusha pop lahf push or adc xchg jl,pt ja test mov push js cmp mov pusha mov mov (bad) aad mov jge push push and mov mov fidivrl pusha (bad) enter sbb sarl jecxz push ljmp push (bad) fildll or dec flds dec sub icebp fs ficoml add sub sbb or inc push add cmp add es xchg add nopl inc mov enter ss gs xchg out push rclb hlt mov jl sbb sahf insb xchg sbb cmpsl lahf inc and xor cmp mov inc inc xor mov je dec pop push jmp and lods mov mov call in xchg jmp call imul mov add xor pop or adc adc mov arpl dec aas sbb rorb pusha adc sbb lods cmp inc xchg cld mov or xor loop pop xor test push cltd movsl mov sub mov mov aas xchg clc xor mov pop xor ss mov cmp (bad) pop and push cmp xorb mov sub pop add shrl lods test (bad) mov inc push or out cmp and ret or mov cmp call popf mov test pop mov jg insb insb je into loop enter out xor cmc sbb pop out cmp xor mov lret outsb fcoms fistl cmp enter fwait pop sbb cmp and lahf jne lds push int inc mov push insb cmp mov stos jno,pt xchg inc (bad) mov jne push addl pop mov das daa xchg inc inc rcrl sub gs sub dec adc xor loope lds int3 mov inc push add jmp sub (bad) enter cmp sub xchg inc and mov sub daa lahf jae dec dec fnsave (bad) sbb sub push dec lahf mov pop xchg insl (bad) rcrb push fsubs xlat mov outsb mov pusha push scas sub add and or jns fsubrs mov inc sbbl and leave mov lods leave xchg test mov sub and push dec aas or test mov sbb add inc aam nop lock fcmovnbe sbbb push inc hlt push jns mov pop xchg das fdivs aaa or cmpsb pop lea mov xlat sbb push mov fisttpll test xor (bad) roll push push popl add ds add and xchg jl xchg dec das xor stos lea ret scas inc inc and mov das fistpl adc xor and imul push mov add jecxz (bad) sub sub mov movsl cmp and sarl scas push cmp cmpsl push sub into and push sub sbbb sarb add xchg sbb in ja cmp test dec das shlb out fwait lock clc sub mov sbb xor int pusha pop and pop sahf push and sub push cmp sbb xor leave lock lret push cs inc stc test push dec cmp sbb push mov jne out adc push fsubrl sti and lret mov ljmp pop mov pop or jno and dec push jecxz xor pop lods fisubl xor je inc lahf sub push sbb mov xor and les test sub cmp dec xchg jecxz lock in cmp inc mov xor das stc cs cltd ds test arpl outsl les sbb xchg pop test daa pop (bad) mov pusha add in inc inc sub call pop and cmp inc adc pop mov add imul test sub mov clc dec mov ss xchg xor mov push inc sub sbb int adc in test xchg movsb jo test mov and popa mov lock cld mov wbinvd and inc cmc imul xor add xor and push out dec adc add pop push cmp movsl (bad) adc lods add xor add les dec xchg and in pop inc add decl mov sub pop adc (bad) lret popa lods inc adc inc mov imul ret arpl mov xchg xor and fmuls mov fwait and aas pusha lahf pop aas mov aaa add pop mov test mov cmp sub int3 xchg lret push xor jecxz lock adc mov sub movsl repz add aaa inc loopne jecxz pop in in rclb xchg (bad) jmp push pop sbb pop pushf mov pop cwtl cmp sbb (bad) xor inc ss gs pop or jle test sub or lahf rolb mov inc neg cs xor lods aad mov mov sub and push sarl mov xchg xchg mov sbb add inc stc sub cld and xor (bad) jg mov (bad) xor call mov and mov daa cmpl inc cmp inc hlt mov or xor int adc and dec xchg xor pop popa mov (bad) mov movsb xor and mov lock add cmc bound pop aas sarb clc hlt fwait fs leave sub insb scas addr16 dec xchg inc mov je (bad) adc mov push cwtl and out inc lods xor xor jmp pop xor das les and lock mov inc adc cmp cld cs or xchg ja xorl loope lahf sub mov xor inc dec cmp sub inc mov and es lahf xor mov and xor inc test imul mov xchg fcmovnbe push xchg xlat out and push enter cmp pushf push adc cmp orb js mov inc push ds inc or cwtl mov and je inc cs inc test xchg cmpsl jo pop mov rol mov sbb inc dec xor aam iret sbb mov test cltd out (bad) pop pop and and pop add fwait and shrl mov push jnp mov sbbl xchg lahf sbb movsb lods imul push lea sbb xadd cmp push inc sub add jns xor xchg rcrl js call les inc add shlb loope inc nop jmp les sub and push mov loop sbb scas (bad) mov loope mov dec xor push loope cmp or xor cmp rcr pusha sbb pop push stos rcrb pusha sub outsb lds push aam fsubrs adc push pop xor sub fmuls pop mov test mov popa pop test add sub mov imul sub imul dec cmp lahf lret xchg movsb jo test mov stos pusha mov xor and mov pop rcll gs (bad) cld mov sub xor pop push ss stos rcll mov and movsb lods mov push sbbb pop lods loope fs jns adcb mov and xor int3 mov lsl adc or (bad) xchg daa aas test sub sub push or inc outsl loopne scas ja test xchg (bad) mov fdivrl push ljmp sub outsl sub in sub pop orb loopne sbb push rclb xchg andb iret xchg psrlw mov inc pop lock xchg popf xchg jb add xor push mov mov sbb fwait jnp mov movsb jo jno test movsb lahf mov les fldt xor mov push aam les lea add mov pop (bad) dec aas lcall fidiv jg lret imul add sub lret test nop in mov and and xor sbb faddl jecxz lods push cwtl cmp cmpsb and jo adc aaa lods cmpsl leave xor cmpb nop cmp repz outsb mov mov andl pop dec mov sub xchg pop push sub jnp mov fwait or adc (bad) mov lea mov xor out imul pusha les pop popa in test ret bound sahf rolb dec mov shlb or push rol lods cmc fstpt std dec andb fwait cwtl add inc mov xor inc sbb aas ss gs popa dec push jno ret jbe loopne and push addr16 in mov or movsb jno xchg je cmp and lds stc scas sub test icebp test (bad) mov mov mov push and das adc adc daa jbe push mov xchg xor mov lea sbb xlat mov push insb flds push mov mov (bad) nop xchg ja dec stc and aas push cmp xor mov movsb popa sbb aas fcompl fsubrl decl or xor flds fwait inc sub loope lds popa clc fisttp inc and adc xchg arpl jo xor rorb mov mov add bound dec inc jl pop sub or xchg add or xchg movsb lods inc xor cmp inc out test or push mov push sub push pop dec loope sbb movsb imul adc out mov inc push pushf pusha and mov movsb aad flds or sti popf fdivs mov xor add and xor mov addr16 cmpsb aaa lods movsl fldt popa jmp sub sub xchg sbb in ja cmp or cmp rol aam iret add mov out (bad) cld shrl cwtl cmc add testl dec mov inc mov movswl jecxz xorb mov das fdivl adc ja data16 lcall aaa addb addr16 and movsb fs popf lahf fmull enter adc jle add xchg movsb xchg pop pop cmp sub and cmp fdivrs mov inc ror test push mov push in push pop cmp mov (bad) test popa (bad) cs insb scas pusha (bad) out pop push xor and idiv push sbbl cmp sbb xchg aaa adc in ja cmp add sti loopne jecxz movsb out aas icebp cmp dec or mov insl insb shlb push sbb push das js mov push and sbb sub popa in adc pop inc and adc jo xor lcallw sub cmp cmp pop mov int inc je movsb fnsave pop mov and xor mov into int3 loope,pt outsb test mov inc outsl sub inc lock and out out hlt test mov xor and mov xor inc sbb mov idivb scas testb xchg push add mov ja test xchg xor iret int3 sub or cmpsl mov mov xor lea jnp xor xlat dec call and fsubl xor shrb shlb sub inc inc cmp (bad) lahf sub push out (bad) cmpsl pop and (bad) pushf (bad) mov mov xor and inc push shlb pop sbb and shr lock mov pop or seto insl das lock or push cltd in jbe pop nop push xchg fstpt cmpb pop cmp cltd adcb adc pop and or pop sub lods inc fcmovne orb adc pop movsl cltd or sub lahf je add subb sbb int pusha or leave sbb mov (bad) push addr16 push push (bad) aaa adc fistl xor push jne pop sub sub pushf mov dec adc in cmpsl lods imul mov mov xchg movsb mov movsb push ja fs push hlt jns,pt add ja xor and cmp (bad) ja fs add or mov mov mov mov sarb cltd ds inc jmp lahf xor pop lea xor fnstcw lret adc pop out les pop fldenv sbb cwtl scas xchg or jmp push pushf cmp loope inc adcb sub and xor test sub fwait int3 pusha push inc fdivrs jne and movsl mov aas xor fwait and dec in dec fwait pop pusha loope push sub sub mov fcmovbe sub jae negb jle fbld mov cmpsl sti (bad) pop imul add imul jae in add or mov sub and xor sbb fsubs and sbb mov xchg pop fdivrl inc sahf sbb or xchg iret or or jecxz ret clc mov daa cmp int3 and xor cmp mov imul mov or sbb cmp sbb ret mov mov rcl mov add or shufps sahf fisttp jo and sbb and dec mull inc in test sub inc flds sub jne pop push shll mul add cmp jae inc inc adc out insb dec inc mov ror faddl out loopne scas (bad) or (bad) xchg fsubrl mov mov aad adc pop test pop loopne scas arpl push shlb cmp cltd ds test fwait popa push mov or scas dec xchg roll iret imul loope xchg inc mov inc jl add mov and mov enter mov fcmovu int3 lods loope in or dec push sub cmpsl or mov nop sub inc les push es pop push mov adc push fldt xchg loope sub ljmp sub rclb xchg mov aaa aam pop sub and xor insl pop iret dec add xor mov xor and popa inc pusha out pop adc lcall insb mov or lods scas cmpsl or rclb mov add jbe enter scas out push call popa xchg or adc dec cwtl xor xchg mov mov loopne movsb enter mov add stc rolb out aam mov xor and sahf aas or inc dec mov inc jo outsl and xchg cmp scas daa js fist and sub dec cmp fsubrs inc mov in fst and test repz cmc mov mov ret lods rcr pusha push inc pusha push in push movsb or or mov es int3 add aam sub inc bound aas adc syscall jmp push adc scas das fisubr fsubr xor mov loopne scas push sbb xor and rorl mov repz stos push mov xor add stos cltd mov xor je andl lea into push dec mov push xor pop lahf aam std mov pop and cmp pop aas movswl addr16 mov sub xchg scas inc adc or loop imul xor or fwait and or fsub mov mov pop lret cmpsb fist pusha stc inc in push jno hlt mov mov push stos xchg and cs push or js ja dec loope mov lahf sti jl xchg xchg or mov les (bad) (bad) xchg es aam xchg mov lods adc xor dec sbb mov aam test mov out add prefetchwt1 or outsl xor push rclb lea cmpsl and push out inc insb add and mov sub test mov inc int3 roll cs iret and sti (bad) lret enter push movsb mov add adc imul mov ja push inc dec xor mov mov in push lods out mov pop andb mov rolb dec pop enter mov nop mov sti sbb add in cmp inc and inc inc test lahf inc (bad) cld or rcrl in pop cltd push xchg sti and pushf in mov ss push ret (bad) lds insb test jo movsb add adc inc sub movsl and int3 mov jmp shll cmp cmpsl fisub mov dec push cmp pop shrb mov cli lods mov add lahf addr16 xor imul (bad) mov sub repz arpl mov add popa xlat cs mov add incl and xor cmp cmp ret sub mov fistpll or test je stc sbb xor ret (bad) loop mov push ja xor fwait pop jl es adc daa mov sahf sub adc and in xchg jmp add and outsl xchg jns int3 es daa mov aaa sub cmp and addl mov xchg movsl xchg jnp lods mov seto mov std and fcomps pop mov out rcrl xchg fneni(8087 andb (bad) ret jne sbb sub ljmp dec sahf cli lea arpl sahf cmp aas nop sahf mov cmp fistpl aam iret (bad) pop cmp out loopne scas (bad) or jmp out rcl test dec lahf cmp rorb xor pushf xor xor das xchg jne pop lea fwait daa mov xor arpl es lcall adc loope mov dec add rorb aaa test inc and sub insb and xchg aas or test adc sahf jle pop inc mov or cmp lret (bad) les pop test pop repz ret (bad) es or sub mov mov pop sbb xor cmp pop cmp jp movsb in add popa pop cs sarb mov adc dec movsl inc adc xor push sub fistpl popf mov imull popa and add inc ja fs push in insl addr16 pop push xchg pop sarb xchg cmp sub mov sub pop (bad) xor nop sub xchg mov mov (bad) mov out lahf arpl mov aaa cwtl and xor sbb popa (bad) out adcb dec mov and fldenv inc stos cltd test (bad) mov cmp inc push ds mov pusha cmp xchg andb sbb aas add sub and xor sbb inc mov xor mov sub xor pusha fmuls mov adc cmp xor notl or out or fsts sub and outsb movsl cmpsb adc cs push shlb insb pop (bad) adc jo pushf jg lods stc cmp push mov movsl mov and iret push loopne inc add aam in cmp cmp sbb das rcrb inc inc mov popa inc or gs fisttpll push mov mov lods in les ds enter pop sub fcmovnu popa jmp nop or pop add jp jnp sub pop push fmull aaa sbb xchg movups push and inc cmpsl fwait push roll add shlb push mov or lea mov and push mov lea pusha fadd scas popa lock loopne add hlt mov fistpl push cmp sbb outsb cltd aas and int3 out xchg xchg sbb cmp nop outsl xor add pop mov pop mov xor movsl mov sbb pop lea xor push mov xor pop mov stc fstpt pop outsb xor sbb arpl ja pusha in ja dec icebp cmp jns jne mov test daa movsl cmp sbb mov xchg pop in lahf out hlt mov test mov cmpsb xchg lahf sbb cs and dec aaa xchg sub cmpsl lahf inc and adc fwait inc or jo fnsave insb movsl rcrl andb cmpsl sbb push sahf mov push xchg push test movsl ret or loopne (bad) dec cltd ds pop lea ljmp mov subl jae arpl dec adc xor mov push das (bad) ljmp xchg ljmp pop dec cwtl stos mov es fmull sbb bound adc lea add cltd sbb call (bad) test pop jmp (bad) or cmp mov sub ss xchg sub add test and sbb lahf mov shlb (bad) in push int3 dec push aaa and xchg pop imul and and jge dec mov adc dec nop fldt jecxz xor ret sub int push cmp icebp dec je sbb arpl adc jle fdivs fisttpl push aaa loopne lock and lahf add cmp in nop pop and test sub (bad) cld mov lcall imul popf sub outsb pushf inc mov mov and xor sub es lea pusha enter cltd cmp pushf cmp sub sub sbb inc and sbb xchg adc fist xchg das or and and addr16 or bound imul cmp scas ds orl xchg sub sbb stos mov fadds pop xor pop xchg pop xor add mov movsl sbb mov test insb sub mov nop and mov (bad) mov push jle mov cmp lahf mov cwtl outsl fnstsw fwait inc dec loope push mov sub cmp inc insb int3 subl imul mov push mov sub sbb mov xor inc jb,pt dec adc sub daa lahf jae mov inc (bad) push mov test movsb lods shll mov arpl mov hlt lret jb clc (bad) out cmpsb jns push loope imul mov push mov and mov mov sbb ret (bad) sarb das aam lods push stos (bad) mov popa pushf cmp dec (bad) mov das and loop lcall cltd ds add mov mov enter xor sbb dec (bad) dec or mov loope inc or adcl xor xchg sbb sub inc mov sarl (bad) in xchg sbb xor lods popa fucomi lods in cmpsl cwtl popa xchg aam and add pop js je dec sbb into mov or aas xor mov cmpsb cld push pop xor adc add mov xchg pop and into sub cmp roll sub out push ror mov test adc sub pushf and and cmpsl pusha mov iret adc (bad) lahf cmp pop dec ja movsw add lds js (bad) fisttpl lods sub xor or add (bad) movsl pop bound mov sbb mov pop mov scas das add mov (bad) adc jae popa mov sub popf cmpsb cmpsb test imul add sbb popa fwait jl aas push or (bad) sbb mov add cli add (bad) ja test mov adc push (bad) lock dec xor and imul mov cld push (bad) dec lahf push fsubp out sub xor mov adc xchg scas xor andl push cli xor add inc out xchg jle aaa cltd imul lds jle movupd leave jecxz in test cltd push int jnp fwait mov and mov clc outsb jle cmp jne int test and sub cmp pop sbbb add pop adc gs xchg pop lahf mov xor push dec aaa mov inc inc decb imul jecxz mov push test mov mov and cmp sub dec (bad) adc arpl mov jg (bad) pop cmpsb jns mov lods sti rcrb push in mov aaa jns xchg jb add fs movsl rclb xor mov inc and mov jge stos and adc and stc pop ret aam movsl pop cmp clc and add mov lret xor and pop jmp stos inc mov mov mov add pop xchg push addr16 mov add sbb sub xor insb xchg inc jnp push push sub jmp push pushf scas sbb test push add aam fs inc mov repz jp and negb icebp push movsb mov sub lret fildl and scas (bad) aam jge sub push xor xor ss jne mov (bad) scas add out lea (bad) mov push jns insl dec sbb scas pop int jg push pusha fwait es sub int3 mov push lcall aad xchg pop xchg loopne mov pop lock loope cs or and (bad) rolb cmp (bad) cmc xchg popa push fadds ret dec cmp cmpsl sub loop sub fsts and call in cmp and out movsl sub mov (bad) loope pop adc cld gs xor fsubs jno mov iret notb jne iret arpl cli gs xchg adc mov aaa lret adc push xor push in jl in push ucomiss mov pop es lds xor mov gs mov shrb add lods sub mov dec and clc in cmp test out mov lea call add mov mov inc pop pop roll add sub mov pop xchg mov fdivl jne xchg (bad) push dec jbe (bad) mov mov mov js inc mov stos xor push push pushf cmp clc cmp andl add fldenv mov das push pop cmp pusha mov repnz mov mov or inc lds (bad) mov sub adc cmp mov sub repz push lahf cmp test mov lods push push and mov cmpsb (bad) sbb pop jo xchg lods movsb addb cmp (bad) insl sub dec aaa clc pop add gs addb push sarb and pop sbb mov sbb les mov cmp and fwait ret pop (bad) pop cmp repz (bad) shrb mov dec mov push and add jnp inc repnz shl (bad) inc cltd sub xlat mov imul sbb (bad) pop xchg movsl mov (bad) mov fidivl push cmp jb adc sbb lret je test adc loope rcrb push push pusha add jle mov xchg jo sbb jb (bad) mov adc sub jmp in arpl push lea and popf push aas loopne pop test loope addr16 jbe sti pop sub test int int xchg subl aam popf andb xlat inc insl inc lcall mov jmp stos lcall xor rol push data16 (bad) or inc decl xchg in scas xor in in in add adc mov aad lea push add loop xchg fcomip jg lcall lock int3 sub sti sti adc jno inc or cmp pop sub cmpsl in repz jecxz daa adc or or push aas outsl sbb popf sbb add jl mov nop movsl sbb adc mov adc (bad) (bad) daa fildl stc push or jp mov aam addl dec cli sbb test or cmp in and scas jnp xor fs loope or fldenv add cld mov mov push inc xchg out sub lds test adc notl and rclb inc xor pop cmc or sti xchg outsb insl enter insb lret add mov mov add cmp data16 insb add add cmp scas adc mov jnp mov (bad) pop cltd dec mov sub jmp fwait mov inc lods pop jnp imul and dec xor lock les and cmp pop add test jl and xchg push scas movsb cmp int3 int3 nop loop sahf ja pop dec or pop sub or rcrb or cmp mov mov sub sub dec cwtl (bad) rorl jle popa or sub in lds stos out insb xchg imul fdivs (bad) push push cmp insl and sub cmpsl mov pop popf sti inc add cmpsb inc aam jmp xor cmpsb jae aam push pusha test jg xlat or (bad) repz pop xor or mov adc cmp mov ret ss mov inc daa orl sub mov insl stc fist inc fisubr js push ds xchg and xlat or adc lahf arpl xor and inc pop insb test mov cs inc xor leave and adc icebp adc sbb pusha enter push sti and adc test ds mov (bad) xchg dec idivl lret mov sub enter cmpsl push arpl sbb repz loope fs add push sahf sub mov xor mov xor push add in jmp dec add ret push mov jb cwtl (bad) pushf popf mov cmp es xchg cmpsl rol dec enter dec jns mov xchg gs sub (bad) or in inc sbb imul push ds int3 test daa mov mov mov sub inc and xchg cmp push test jns mov mov xchg pop faddp aas inc repnz test sbb enter aam shrl add nop xchg test rcl xor dec xchg push scas das xor cmp mov dec push pop inc jb jb add or xchg rcl sbbl add jg hlt movsl mov lds push push hlt (bad) fadds rcrb sub sbb sbb insl inc push cmp push adc cmp and mov sti (bad) jl mov push cmp sub inc lahf dec in fdivrs xchg enter insl (bad) iret movdqu jl pop mov movsl insb mov inc cltd pushf fs in inc mov (bad) gs (bad) mov scas jae xor lds stos push xor pop sbb fimull sbb stos xchg dec sbb or jns mov ljmp jl lahf and icebp pop fwait pop aam (bad) scas nop stos sbb lcall mov test or scas pop inc cmpsl xchg pop and jo mov in movsb int in add jae jp adc dec into jge das mov das dec pop pushf add inc daa (bad) pop push cwtl jg inc cmp pop lods cmp push adc and popf mov or in arpl out pushf dec vshufps in cltd xchg lods mov mov je movsl cmpl fstpt pop shll movl jo das push shll hlt cmp mov call sbb repz mov mov loope insb xchg clc pop imull out mov aad out imul jb pusha insl xchg push sbb shl cmp dec mov cmp inc ret das and add or and dec aas dec (bad) (bad) in mov xor mov inc fmuls sbb add sub je and xchg pop and mov cmp es aas jno out pop push add inc ret jbe inc push repz mov sbb add push cmpsl mov mov dec sbb (bad) incl jne mov sti and push loope jle jg sbbl mov xchg sbb xchg data16 and scas loope jae popa mov xchg mov add inc (bad) sub stos rcrb outsl rorl xchg mov push out inc stos pushf ds pop lcall add adc xchg xlat cwtl inc int3 add outsl stos sbb scas std inc mov sbb push sub pop xor dec sbb fs xor out outsl jge stc fucomp add outsl or cmp cmpsb mov lds in lods test or pop xchg inc sbb fwait lods sahf or test mov (bad) xor test es lcall gs push mov scas shrb mov jp (bad) mov mov or mov sbb movsl jns and mov sbb ds xchg test mov incb xchg out arpl (bad) adc (bad) xor push dec lods aaa dec cli cltd movsl pushf orl jge mov inc lret sbb cmp push movb cmc and ja daa ret pop adc fstps push pop push jns test sti dec pop jne ds fcoml and scas js or xchg xor imul loope shrb jno test mov int3 outsl push push add icebp loope nop jl int xchg cld sbb aaa push or ret inc pop pop movsb inc pop stos sbbb xchg mov and push or scas lret data16 int test (bad) mov dec mov mov lret push loop dec dec jb call ret dec (bad) xchg popf inc lock dec xlat nop fdivl cmp pop sbbb xchg imul cmpsl call add xor pusha pop pop push setle dec ret rcrb (bad) fs mov arpl add sub inc xchg or mov in adc mov fldz xor sub sub fldt js pop mov bound (bad) or rcrb insl push loop dec dec mov fcoml pop aad adc fwait ss pop push sub loope js sarb int3 xchg in push dec outsb rol fwait mov and sub leave inc cmpsl rcl mov mov jg cmc outsb or fadds sub aas adc popf mov cmp daa test and sbb cmp pop push add orb push inc or inc lret pusha scas loop dec dec outsl movq adc (bad) pusha inc adc cs xchg cli sbb outsb xchg ret in and jno xor jno jle cmp xchg cmp adc cmp fmuls xchg rorl (bad) mov sub and cld add xor pop (bad) fldenv pop ljmp loopne push jnp cltd sub mov and cmpsb fild add inc faddp push popf in mov test adc cmp mov inc repnz mov sbb lods push push adc add jle push inc mov add mov scas add xchg lock xor sti dec icebp imul push adc scas popf adc sub cmp sbb aas push mov xchg dec mov sub jnp pop sub fldl movsl cmp push je fdivrs push mov nop insb cmp and hlt in mov addl push out jmp shll mov jns in push das gs arpl cltd pop and dec add bound imul cmc pop xchg jo jne (bad) xor mov movsl stos xchg jp cwtl cmp ret sbb imul mov and sub mov xchg pop adc cmp push mov add pop mov ds add pop jp mov push das add add cmpl test ja or mov pop ficomp (bad) mov jecxz mov mov cmp lea aaa imul bound icebp xor adc sbb std inc insb (bad) repz or xchg xchg lods xchg lds sbb pop jp ljmp xchg adc insl jno add in mov mov mov or xlat fiaddl inc xchg push or in aaa push pop out mov rol fst xor push adc ljmp outsb xchg jl in ret and sub lahf js or xchg dec mov xchg sub leave push cwtl dec mov push cwtl push xor ljmp shlb shlb movsl push scas mov insb inc and in cmp sub inc mov mov loop pop stc xor sub sub movsl pusha jmp and pop push pop ljmp jno (bad) fs mov xor and lret stc cli jns,pt addl idiv int insb pop pop xchg adcl push std jecxz cmc adc cltd (bad) sbb mov mov es test leave sbb fiaddl adc out mov or (bad) int outsl jl xchg lock leave mov jmp dec orl lret inc repnz cld push jge fildll jae mov mov clc mov scas out and ds cld ret xchg imull lcall leave ret xchg mov iret mov and add pop add sub or data16 jbe mov pop pop jno jo cs mov adc leave notb lea add mov and xor inc add push incb cld add loop inc xor xchg jnp mov xor xor lods xor das outsb or (bad) aaa cmp or jecxz lcall push jle js mov or pop popa sbb sub push clc mov jb mov cmp or push (bad) addr16 or inc mov push mov sub shlb cmp fnstenv rorl inc outsb jb cs stos xchg addl inc ja ss sub ret sbb data16 mov test xor mov cmp fldt and add and into mov insl mov int and iret pop inc sub push xor cmp in sub xchg pop mov test add sahf pop loop inc das inc xor adc adcb jle icebp push mov movsb dec lods add jp fldcw (bad) mulb js xchg or dec mov sti mov pusha pop inc cmpsb push sub scas sub in push ret leave es es ds addl pop fsubrs js inc sahf adc jo test insl push jne fstps push inc iret push pushf adc out jbe es pop pop pushf ficomp mov idiv and xchg in sbb movsb cltd sbb inc insb aaa jns adc sbb sub sbb sub sub sahf sbb xlat jle stos mov scas add jmp in int fistp iret test (bad) fstpt push scas cmp xor xchg cmc xchg mov xchg fs add sbb les adc sbb add cld sbb sub and inc xor test mov xor ljmp je add inc add hlt cmpsl (bad) jb dec sbb das fadd jge aaa shl xor test dec rol pmulhuw xchg gs hlt mov cmp xor (bad) mov push sub pop pop lock sub cmp inc cli icebp mov adc push cmp (bad) jo pushf dec jle sbb jne dec sbb je test mov fistpll jle fsubr negl dec test cmpl mov pop push fiadd push decb sbb pop pop mov loopne outsb jg pushf mov sub outsb jnp jmp movsb and test test or into ja or xchg jl xchg xorb sbb cmp insl ljmp add xchg adc cli pop sbbb repz mov and mov sub and adc fistp mov aas sbb pop mov loope adc mov ljmp inc or adc ficomp in push adc and jge pop in xlat and (bad) scas or rorb stos aas (bad) sub and sbb jp aaa and test scas cmp cmp adc test xchg or test testb lcall push sbb jo int xchg cwtl inc mov xor imul or pop aad xchg sbb cmp lock repz mov call xchg xor outsb flds aam jnp cmp adc xor out cmp xchg jl pop into popf jmp inc and sbb and dec popf and and push jle sbb in adc add inc sbb lea inc jecxz jg hlt cmp les (bad) (bad) sub dec stc movsl ja insb jge inc inc insb pop fdivl mov push xchg dec into sarl adc pop nop jne mov ja aad jmp inc pop add cltd mov jle loope add push jecxz jmp and and das (bad) mov jp fwait cmp in adc aaa add xchg inc daa mov aaa in outsl mov in and into rcrb jecxz add dec dec in mov inc cmp insl outsl ret pop mov arpl les ja jnp gs xchg rorl or (bad) xchg rclb or xor push jge popa (bad) mov cmp cmp inc pop mov test std shrb add dec add shrb adc inc stos sub pop daa fdivrp pop addb push jmp fnstcw pop stos cmc fwait xor sub add rclb push andl pop xor sub xor or xchg mov jecxz adc inc jge xchg daa pushf and (bad) sub incl xchg jo mov adc dec or adc and aas nop repz dec ret adc lahf dec pop aad pop sahf fisubr cltd inc and push popl (bad) ds ljmp (bad) rol aam daa jg (bad) jmp inc std mov mov ret lret pop adc fldt gs fsts lods push push add outsl push roll adc mov and pusha jecxz inc repz jo xchg cmp adc and ja and cmp dec ret data16 xchg mov bound pop insb shlb push out xorb arpl ja jo mov or mov mov and xchg xchg add insl lea jecxz mov out sbb jmp add or jno aas inc mov pop nop in mov cs dec jno and push add sbb cmp dec jecxz pop iret xchg sub sub jbe adc xlat andb gs movsb cwtl insb (bad) or (bad) test (bad) das mov outsb adc out arpl out aaa std xchg or inc sti (bad) daa push popf mov les ds pop and push and mov jle mov test sub fwait insl dec mov add jle sbb stos subb adc and xorb mov jmp or xchg add add push xchg nop and out mov in mov inc sub (bad) adc adc hlt cli sbb xchg je pushf pop and xlat xchg pop dec add push test xorl adc xchg pop inc jae inc adc out imul push test pop and js ret loope or sbb rolb sbb lods repnz popa sub lods add and push inc fsubrl (bad) adc xor mov push (bad) mov fsubl in cmp push or xchg aad mov xchg jecxz cmp aaa pop cli mov mov enter aam dec outsl lods or jmp mov fnstsw cmc mov sbb jmp and and aaa sub mov test jmp sbb xchg jecxz jecxz adc jno fs pushf cmp inc and jg mov fnstcw neg lock cmpsl daa loopne mov clc call adc inc mov cld and (bad) or push xchg xlat mov and mov in jmp jecxz repnz les js and mov (bad) push dec push mov adc and push jne sbb outsb lea lahf loope adc aam and pop in inc ret outsb push out or mov jle xor inc mov mov mov jg (bad) clc xchg cld add repnz out and inc or (bad) jl adc or and pusha adc fs out adc jo pop das xchg adc mov sbb pop (bad) rcrb icebp insl das xor loop lea xor pop cmp adc mov jmp movsb push int pop fistl pushf (bad) fistp mov popl out inc xchg scas xchg iret pop movsl and test loope fwait inc jno jl sar shlb movb xor mov pop sbb xor xchg mov jg sub sbb lret aaa repnz fisubrl nop xchg (bad) int clc lret push data16 pcmpeqb pop and jp xchg int push xchg cld jns push cli inc daa fistpll push jecxz xorb out outsb pop js cmp mov insl dec dec mov add or sti (bad) pop insl orl mov scas push jae cltd sbb subb sub shlb inc fldenv pop mov and push gs aam mov sbb push adc imul (bad) cmp xor sub insb aas outsl leave pop dec inc dec divl adc xchg adc (bad) aaa xor fcoml ja mov jae sbb and pop mov lret cmp mov orl out pop xchg pop jae mov test jo roll loopne insb push mov push cmp loopne pop dec pop test lret rcll mov jnp mov jb pop mov cltd jo push sbb mov sbb out jae lods push enter mov test ret sbb jge inc ret mov push sahf mov push cli insb xchg mov dec fmul xchg (bad) pop mov dec pop lds or (bad) dec inc aam adc iret in xchg (bad) push cmc leave mov mov gs lret stc inc insb and sub xlat fimull das in daa mov xchg fistl aas gs pop rclb cs jp inc pause shll repnz (bad) dec xchg cmpsl test inc or cwtl shlb adc xor dec (bad) fisubr xor jns push jl popa mov je (bad) ss push adc in adc inc and dec sti sbb and sbb push (bad) sub sub adc insl xor push in jge loop add dec insl push cmpl in lcall dec dec repz adc cld sub push sbbb xchg mov xor lret cld lods pop and mov orl das xchg dec mov (bad) pushf ljmp popf ss inc movsb outsb or nop mov lock jecxz xchg in ljmp nopl dec in icebp jl into (bad) enter cmp and sbb test clc cmp sti push xor clc andnps push movsl jl outsl lods adc loopne and push jge test push je jns or inc in and ja mov cwtl int jb xchg fdivl ret inc xor ret xor aad mov out cmp lret push rcrb add rcll lods test rcrl add cltd test outsb into mov cli dec loop mov jb (bad) mov sahf mov gs mov mov mov paddb fcomps jno mov mov push and lds cli fdivrp xchg jle icebp jp iret dec fstpl out pusha sbb popa ffree jb decb scas adc fs lods sub inc dec pop mov jo xchg mov dec mov push sbb push mov shrb insb fimul inc ss sbb xchg fwait ret sub int and mov daa aaa cs movsl sti and aam and fstps pop jp mov les adc mov mov (bad) xchg lods sub mov lahf cwtl mov popf push negl lcall adc inc mov fs push pusha pusha lahf lahf or xor roll mov lods popa mov add movl imul imul lea push clc mov outsb cmpl roll mov inc mov or mov aam fsubl (bad) nop xorb adc sbb mov lock sbb loopne jbe dec insl movsl sub and pop (bad) jno inc (bad) outsl decb mov cld xchg xchg sub mov divl mov adc mov ja xor dec or cmc cmp jmp or adc hlt and push daa (bad) jge mov mov sti aad cmc adc push mov pop inc lods rclb movsb push addb sbb repnz or jp lret nop dec (bad) mov cld xchg out mov or repz outsb gs into test ret aaa (bad) mov fsubrl (bad) pushf and loopne icebp bound dec stc dec scas sub aas xchg (bad) cmp dec addr16 faddl ret in or (bad) xchg pop pop or cmp pop xchg fist jae mov xchg (bad) notl sahf rcl js cmp popa sub cmc popf adc or pop xchg int3 cmp das call scas sbb and mov rorb push and xchg out fwait inc es pop enter call pop lret cli mov adcl test cltd pop adc fnstcw (bad) pushf and loopne xorb add fimul pop xchg and pop fcom shll es push aaa test sbb lds add test repnz leave inc mov cmpsb adc dec pushf cld mov pop mov mov cltd test jmp jbe xor pop adc popf push mov movq inc pop lods pop dec sbb popa dec mov lea test (bad) in (bad) ja clc and mov test (bad) xor adc sub sub and add adc insb push add inc lahf es pop jnp fs icebp xor xchg cmp sbb cltd fwait in fist aad xchg push adc test loope inc sub sbb sub cltd aas les (bad) pusha aam sti fwait test cmp daa sub movsb iret hlt iret cmp rolb adc pushl adc das add test aad daa or push sbb movsl sub outsb addl mov or sti fisttpl imul inc in mov movsl outsl icebp and mov lock jg xchg cmpsl jecxz xor jnp roll jmp cld loope cs xchg jb dec dec inc loopne das inc pop add test pop test push mov and js sub xor sub sub lods mov xor lahf andl (bad) jae mov rcrl pop jp jle jnp call out fcoml or dec es adcl leave xchg test push stc data16 rorl dec xchg (bad) sbb and adc (bad) pop movsl mov (bad) fistp push cmpsl xchg pop or mov pushf dec sbb (bad) cmc out sub mov out ret lods out push movl (bad) and push insb push mov mov and mulb xchg add fwait xor mov cltd stos movsl fistpll push outsb nop mov cmp dec add mov push fldt lahf mov sub test sahf and sub mov imul ljmp add sahf enter mov cmpsl mov clc pop and mov and xchg mov or imul inc inc fsubrl js mov fcmovne fcmovnb xchg (bad) popa movsb ja imul pop hlt xchg fistpl adc adc stc sbb pop xor or nop sbb mov or scas push jle add and fnop fcoml and or adc jmp gs jbe sub push jo cmp into orb or aaa dec fxch push daa jp sub or lea bound jns (bad) nop jl jns aam mov into mov jne outsl (bad) pop sbb movsl push xor add xor push mov sbb lcall (bad) ror cmp and bound xchg sub cmp pusha (bad) out rol loope rolb movl push inc pop leave mov mov add xchg popf dec out pop fwait push mov leave jle cmp in adc push push jle or aas mov xor fisttpl or jp mov mov cwtl dec push dec cwtl (bad) mov and add int3 daa cmp sub inc or ret cmpsb mov pushf int3 fnsave fldenv js adc or insl cmp frstor pop fcompl cmpl jmp sub scas ficoml push lcall jo xorl lcall (bad) into jnp loopne into or clc hlt es xchg sub dec insl enter mov mul jo insl xchg cmp subl add in mov add push push daa mov rol adc scas sti lret jge insb and shl cmc push dec dec inc les sub mov jp push add negl push ja push xchg sbb into cmp cmp mov adc sar cli and rclb sti mov scas shrl adc dec sbb repnz in mov dec lods push push pop dec fcoml or mov adc repz xchg adc add cld out sub decl fbld movsl outsl (bad) cs popf mov lock sbbl xor pop xlat pop lods dec std pcmpeqw mov and or std insl fldt mov xor add (bad) rcrl daa sub inc mov sbbl inc dec and and mov cmpsl (bad) data16 adc aad mov enter fadds call ss popa mov (bad) mov jns xor or sbb adc iret xor cld in jns sbb imul jmp imul int3 or pusha jae in movsl adc and (bad) sbb shl xlat das push shlb mov mov sub fisubr xchg dec pop jle sub fistp (bad) mov insl xor lret data16 pop aam insl pop pushf inc add xor jp (bad) sub xor out fistl inc fadd jp rcrb into nop mov jp sahf mov aas fdivs xor inc cmpsl push fldt not in loopne xor jmp jae aas mov push stos cmp push iret sahf or cmc push inc jb dec jnp xchg ret cwtl cmpsl pop loopne mov in xor es mov je or sub cmpl adc inc or mov jl or fwait nop popf mov push mov inc sbb (bad) dec ret arpl and jb repz mov cmpsb mov das loop pop loope push cmp js sarb or outsl fcmovne stos lret in add clc (bad) neg sbb mov push data16 movsb and mov pop jb cmp lods int sub add mov xchg test jns mov add inc jl loopne jle (bad) jae cmp mov dec out and cmpsl mov push inc pop mov push push add fwait (bad) ret xchg jmp pop push insb out outsb movsb jle jns lds xor loopne jno ret jle push insl or imul or dec stc mov (bad) aam cmp pusha leave dec shll pop test arpl mov dec mov scas gs mov or arpl mov mov xchg dec inc fbstp mov mov fsts das sub mov aad js push test cwtl adc add rcl dec stc icebp jae push cmp in leave out cmp mov (bad) (bad) mov xor and int repnz jl sti gs aaa (bad) hlt lock inc jo ret mov aaa mov ret and or (bad) mov adc and sub test mov push xchg test aad jecxz sarl xchg sti and inc inc add scas ds inc dec pop mov dec mov fcmovne mov fdivl jge jns jb das call int3 pop xchg mov and pop push sbb xchg cmp dec nop int3 or sub cmpsl pop xchg std jno xchg lods inc dec push insb lcall sbb mov xchg es add inc mov mov or dec pop shll mov xor pop popa adcl xor xchg loop lods xor je es in int adc sbb push int pop loope mov inc sbb inc push pushl push adc pop fistp shlb xchg fs jl in sub mov add hlt dec imulb js cmpsb xor jecxz das mov jle insb bound stos movsb mov sbb daa push cmp and int3 dec gs mov rcrl clc movsb lds or fwait aam sar pop inc mov xchg push inc jno ja imul aad (bad) enter sbb dec (bad) xor mov loop ss xchg insl or aaa sahf subl fildll xchg add or pop into mov sbb stos pop movl cmpsb inc setp and and leave push dec push push in sti inc mov scas loopne push pusha mov ss call or loopne js aas popf out (bad) mov ss mov aad push xchg sbb ret leave dec sub cmp push inc add enter scas push cmc pop adc scas rclb jno or mov (bad) dec dec in jno sub or lods mov shrl loop mov sahf jno push rolb cwtl into mov cld sti jo sub (bad) add xchg mov jno int3 cs inc jmp ds pop cmp inc sti gs fistp mov add adc or das (bad) jl push lea mov inc into fs aaa jecxz and sub pop hlt sbb add lret push imul or inc (bad) popa sub repz ret aas lds lods cmc mov or insl mov idivl sub xor or adc adc xchg jbe mov bound hlt (bad) jecxz sahf jl ds je mov movsb outsl inc xchg pushf sub rorb cmp and pushf mov xor mov and pop push jnp jns pushf jno insl repz je sti mov jmp clc outsb gs push (bad) call sub inc push cmp xchg jl mov xchg mov and ret std cmp adc lock sub and add sub fldcw es jb rcl jne pushf cmpsb pushf jl cld pop pop pop push fwait jbe fnstenv jmp add inc cld rolb es jle test aaa addl and in dec test xor cmp and andl aad or and aaa ds in pop pand (bad) lahf jecxz loopne mov iret push cwtl dec (bad) mov dec dec xchg aas rcrb lods mov xchg lret or add mov push sahf fistl mov test mov (bad) push push lods daa loop popf or mov fdivs (bad) es roll scas enter inc inc sub dec jne in dec mov mov and fiaddl loopne nop pavgw xchg test mov js xor and sbb cmp repnz mov aam out int3 add dec lret lahf inc in insb pop aas into pop push xchg orb in lcall icebp gs push xchg cld lahf jp inc push cmpsl jnp sbb cmp int3 push sbb (bad) lret sbb fcomp push pop and loopne xor mov sbbl loop adc es mov push mov add inc dec push push push arpl cmp rclb (bad) mov mov je int adc lahf cmp fsubl outsb xor loop dec pop push sbb icebp scas fildll dec jmp cltd xor test jg test pop cmp ret push fcompl pop nop or lret or jge rcll rclb mov shrb repnz nop or in cld jge inc mov bnd pop mov cmp insl loope push iret dec ja imul xor les or jnp orl addb push xchg in arpl fcoml xchg mov js sub inc ds (bad) xchg loopne pop xor adcl test or mov cwtl add sub mov sub aaa pop mov sbb idiv cltd arpl sahf sbb jle into and insb xor inc add mov rclb aaa insb adc xchg lock inc adc dec sub repnz es sbb add outsb mov ss movsb pop push push sbb stos xor dec cmp xor cwtl out stos mov or sub mov jecxz sub inc and or insl add xchg sub and mov sub movsb shll insb xchg adc loop mov inc cwtl testl add or cmp inc add add aas or cmp jmp aaa push sti clc and adc (bad) out iret cs jecxz mov in sub and cmp cmp iret or lods xor lea sbb pop pop add mov cmp (bad) stc push sub mov gs arpl aaa mov pop jnp pop mov (bad) fs cmp inc mov add xchg lods mov sar sub iret push xchg sbb test push dec fs push aam shrl arpl ljmp xchg add in xchg mov adc int3 add dec pop push pcmpgtd mov jns test mov popa add aam test inc fwait push scas gs cmp mov jl or scas dec or cltd sbb js or adc mov ret jbe mov mov adc xor lods jne clc lret mov insl or cltd (bad) xor in loopne scas sub xor mov push sub insl add xor test jg test pop add les push xor adc ja fsubl adc arpl add push arpl shrl ds push pop arpl in push dec lret dec cltd sbb pusha daa sub out mov sub imul arpl rcrl sub jmp cwtl js push cmp adc sbb mov mov pushf add popa rolb (bad) and and mov add or sahf mov jle mov mov xchg dec push (bad) push sbb arpl loope mov inc movsl rcr push mov dec and pop repnz outsl pop xchg out xchg mov add pop cltd xor mov mov fs ss mov mov cltd push dec xchg add stos das add cmp cmp sub mov and test arpl push pop cmp nop clc dec jle mov jns sbb aaa add mov fadds repz sbb mov mov fldt dec sbb push fmull (bad) and aas lds push iret dec jg add mov lods push jp fisubl mov mov push daa mov jno add in add lcall in push popa aas dec pop xchg les sub (bad) not mov int (bad) dec (bad) call rolb test scas sbb xchg repz out sub jmp bound sbb test das popf fdivrl xchg lock fucompp std sub inc xchg ret jnp pop and lret int3 loop test mov fsubs cmp add mov sub mulb call iret push cmc push sbb push lahf adc add mov in xchg dec pop cli sbb push mov loopne and jae mov inc xor imul fmull sbb sbb mov add add mov cmp out push nop add dec mov pop lahf inc mov adcl lcall clc push insl jo jp xchg add and cltd out into lret push in or mov xor movsb nop mov mov lea shl dec aaa movsl mov imul jmp pop je icebp mov test dec aam pop test inc and (bad) imull dec std mov mov adc mov es loope out movsb xchg sbb cwtl insb ret lods aad out (bad) jae push cmc and mov faddp xor imul pushf add dec cmp mov xchg movl pop adc mov push dec mov into mov jg inc jmp popf test (bad) mov pushl adc mov sahf mov pushf movsl pushf das and (bad) jno leave mov fcompl sbb xor jno mov add jno mov fidivrl lock adc xchg mov mov adc inc pop push in pop clc imul jecxz das xor out cli mov movsb into out insb test inc add adc arpl pop xchg pusha (bad) orl jle or push jno xchg xchg adc dec repnz mov and push xor jp add scas fwait mov and dec ss clc in (bad) ficom pop fiaddl xchg pop repz xchg fist dec imul sub mov add dec bound addr16 inc mov xchg mov inc js cmp ret outsb pop popf or and xor cs loopne out sbb outsb outsb int add sub xor pop notb loopne xchg cs pop subb pop daa repnz popa out not popf sub stos inc aas pop ret sbb in nop lea mov mov sbb int jecxz imul lods pop popf mov jp test out and cld mov in sahf cmp shlb fimull das xorl pusha sbb nop mov xor adc repnz jl pop adc mov sub and sbb outsb xor jmp push add xor cmp mov out repz pop lea push pop adc daa out push mov xor sbb xor mov ljmp out stos adc mov xor cmpsl jo push mov mov pop xchg and nop (bad) divl mov movsl push mov push rolb (bad) mov shll push push xchg dec hlt fcoms xor stc add jo hlt rolb pop (bad) mov mov aas outsl inc out mov ret pop sub cmp pop lds roll cmp sbb push rcll dec jb sbb and lcall rcl addl cmp pusha mov xchg mov and leave mov out jbe pop push push mov or jnp sub mov xor mov cmp imul jns add rclb cs cmp sub sahf adc enter dec pop in sub int3 pop scas sub insb push outsb xchg mov sbb add push cwtl add fiaddl fabs popf test cs cs orl lahf insb pop call jge lods js and cmp sbb repz std jno ds (bad) mov jl xchg mov test rcrl pop mov fadds lds or andl (bad) and xor xchg mov xor or (bad) dec (bad) imul push mov or push and imul lods push pop pop or jbe (bad) rolb outsb or out lea sub adc mov add popf dec mov sub push xchg mov addl cmp test fistp mov xchg test adc (bad) xchg cmp imul jp pop xchg std movsl push clc lea xchg les stos or lods stos in fldcw sbb inc sti iret shl cltd inc test push mov sub jecxz pop push add mov cmp das sbb imul out aad pop (bad) repnz (bad) and mov imul jo fmuls leave cwtl ljmp ja and sub push mov shll jle bound popf xchg mov int jle cltd adc push insb cltd push hlt cmp push sti sub nop roll mov lods or in ja mov nop out inc adc mov repnz fldl or pop pop xlat push push movsb cmp and add jl into mull sbb lods lea inc imul movsb xchg pop in cmp nop repnz pop xchg push add sub xchg popf inc mov dec mov xchg mov jp adc ret ss mov dec inc dec out lock mov cmpsl sbb nop mov sbb push popa fisttp lock ret sbb push sub mov scas call push or add lods aas push adc mov sbbl cmp dec pop mov xor xchg rolb pusha out dec mull mov sub mov lods inc loope pop jp add pusha stos sarl mov out mov mov jmp mov inc and sub inc and (bad) xlat jp cmp cmp cltd jge dec push sbb imul sub lahf jg push dec lods inc xor dec call xor mov jp mov rorb movsb jmp sbb fsubrs leave sbb fwait inc pop (bad) mov out xchg mov lret inc gs jbe hlt repnz cmp dec js xchg arpl mov les mov cltd push es sbb sub dec add xchg aad or imul pop jg in mov lret push cmp fildll idiv add leave mov push dec sti jp push sbb xor jbe call imul mov adc or nop push dec rclb (bad) mov test int3 stos xlat dec repz aaa std mov stc dec push xchg imul or insl pop or inc icebp sbb lahf jbe je mov jmp lock fsubrs test mov jbe pop adc xor push test or ja inc pusha jp ret dec (bad) scas cmp dec cmp inc xchg insl push and push ret fucomp mov pop inc cmc lahf mov lret dec sbb rcll sub sub dec icebp inc into in lods or gs (bad) test sbb sub psraw sub scas loope jae jecxz mov push fdivr xlat adc cld nop xchg mov test fidiv inc mov sbb das push popf mov roll in (bad) mov mov jo daa adc aas sbb xor outsl enter and repz sbb loopne dec stc adc (bad) xor subb jp add lods rcr mov jmp inc xchg xor out pushf rcpps inc std ds and adc sbb xchg pushf mov add inc dec lret outsb sti iret outsb mov mov add lea jge cld xchg cmp inc pop mov test adc jbe mov fisttpll sahf (bad) push add cmp push test aaa psllw aas sub js fbld inc pusha mov cltd jl movsl adc push cwtl mov outsb cwtl inc xor xchg and popf and (bad) int3 adc mov ss push mov mov cmpsl lahf movsl push andl aaa adc cmc lret mov imul push in movsl lret xor mov cmp inc scas jne xchg cmp inc dec les lea in insb cmp push insl pop (bad) iret add jne inc inc roll dec jae int3 xchg pop iret in test addr16 je fadds push xchg mov or incb mov inc jg insb mov pop jl jnp dec sbb and mov or ret dec mov dec xchg movsb lock xor ja pop mov dec push std aam mov icebp test xchg cld inc nop pop (bad) jmp sbb xor cmp push fwait mov and push sbb out repz call sbb inc sti sbb mov sub inc lea cwtl xlat cld test sub mov mov ss pop ja aam mov jge inc mov lret pop push out outsl pushf mov aas outsb dec inc cltd adc mov and or pop out inc hlt mov fstpt pop pop or lcall jnp pop lock loop nop pop sub and xchg std mov adc lods pop pop aam std jl mov in (bad) dec push xchg push icebp loop out (bad) or cmp pminub test inc (bad) jle mov in and test pop mov cmp test xchg pop fildll or xchg and sbb dec pop mov mov sbb sub sbb dec pop mov fsubl jge test cmp loop loope jmp xchg dec aam mov sbb sbb aam push gs insl xlat jno inc sbb and fcom push (bad) std daa fidivl push (bad) mov iret jns cmp test imul sub inc push mov fstl loope cmp fs mov push fwait mov mov mov enter sub js jecxz fistpl pop cld cmp push mov leave std sahf and adc jmp sbb sahf push dec aas clc mov adc jecxz mov sbb or mov add inc sub mov push sbb push addb jne jno and or pop es pop inc mov dec lods jecxz pop mov cmp js adc (bad) and lea dec aad xor inc sub cmp adc leave mov fildll sbb sbb sub mov mov dec icebp inc push fisubrl ljmp fcmovne andl repz jmp push sub pop incl mov mov inc mov mov lcall lret pop in mov mov aam les dec (bad) out jp in sub mov lods (bad) (bad) add in pop adc add add or addr16 repz mov (bad) cmc or out roll hlt push scas clc xchg mull mov jl arpl mov mov outsl loope loopne aaa popa jb add insb dec xlat mov sub xchg push inc jno add adc and xchg sbb (bad) cmc dec lds nop subb or inc xchg aam jae push sbb push or (bad) push aas fdivrs in movsl enter push insb (bad) add aad sbb outsl push faddl or sub xchg movsb arpl lock and stc sub ja or rclb inc add push aam (bad) (bad) in cmp jns call ret cmpsl dec xchg sub mov push pop into and push mov xor in fisttpll sbb push cmp xor out and stos test (bad) ljmp push lret jge inc in xchg mov push cmp fmul sti mov xchg push out jo jb clc scas andb sbb mov xchg inc test push imul fwait sti dec jge push insb cmp out or and jnp cs mov sbb add (bad) mov mov dec jb psrld gs inc sub mov push sub fsubs pop sbbl jb repz xlat pop jb call push arpl popa mov xor mov sbbl fstps mov mov adc jp fwait cmp xlat sub jne sub fcmovne (bad) or mov out push xchg lahf das stos and sub or addr16 dec xchg nop aas jb fxch mov jo adc adc pop cli js mov insl das mov mov xor (bad) divl jae mov adc and pop popf in or lcall jp wrmsr fsubl ss mov jecxz mov lret hlt js jno jl and es arpl xor data16 sbb pop adc push iret daa dec insb jl stos jno int3 shlb jns xor xlat dec lods fistp inc int3 pushf cmpsb jge nop xchg jnp mov add xor pop sarb mov pusha pop jge mov or xchg or fs pop jns pusha inc xchg inc sahf cmp pop pop mov pushf cmc xor push jecxz add push jb,pn and and mov and pop jg test mov lods int3 add sarb mov jns or lahf mov cmp in pop or cmp int3 fwait inc (bad) and sahf mov inc jp (bad) mov (bad) cli adc mov mov ds adcl jg popa jns jnp xor shlb xor iret aas sbb pop gs nop inc gs (bad) mov shrl and mov imul (bad) outsb pop adc xorl scas xchg xor bound and int3 test ljmp shl add fisttpl push pusha test lahf add (bad) dec inc inc bound mov jnp and ret pop push mov cltd dec pop mov jge aam daa adc push sub push int out cmp xchg add or (bad) movsl jle lds dec jnp incb (bad) fnstsw ret sbb test (bad) cmp dec stos push repz xor insb je pop inc stos imul inc rol mov loop dec pop js dec push push sbb loop xchg cli lret js pop jnp arpl lret jmp fsubrs ds inc inc outsb in fisubr add fnstenv xchg jo data16 pop inc sub fadds rcrb push inc and bound jae mov and pop adc and mov xchg int sahf pop movsb rcl push sbb cmp mov jnp mov stc push sbb daa pop xor xchg in xor cmp mov sti inc in or cmp inc jno dec inc popf in mov sub add sub movsl inc mov and sbb adc insb arpl pop les outsb pop add jp pop inc jbe and je mov pushw inc repz iret sub fnstenv xchg sahf and and adc fdivl lret dec and jo add add rcll xchg xchg (bad) pop or sub cld add push jecxz arpl fbld (bad) xor std rcrl fdivrs inc insl add adc jne cltd cs xor daa aas popa iret std pushf or fs cmc divb aas jp jl mov cltd xor push mov les pop or decb leave jecxz mov jl jg or sub addr16 pop push mov popa push fcoms and xchg out orl lret pop gs xlat or pop outsb sbb jge adc adc sti in xchg jns xchg sarb push dec pop sbb push and dec shr mov inc and pop rcr cmpl fnsave or inc cmp jb xchg adc bound lahf mov jp ljmp xchg (bad) or dec mov sbb add jnp cmp push inc and out sbb cmp je sub mov addr16 xchg fdivl dec mov cltd sahf sub add xor and sahf ret lods mov pop nop clc sbb lea cltd dec (bad) ret loopne jge inc sbb icebp and sub sbb inc sub test addr16 mov popf or dec lea into inc push mov cmpsb push aam int3 sub jecxz sub push imul cmpsb inc fwait int cmp push cmp push popf push jge std das int3 mov jp jb dec pop ja or insb cmpsl sub sbb xchg in (bad) mov pushf movsb std push aad jbe out cs sarb iret pop jnp insb insb pop in popf movsw je ror push jne bound and xchg inc push jecxz cmp mov and inc ja (bad) xchg sub or nop mov test adc sbb hlt xchg push and add lods lea cmp popf sbb lcall add or out out jnp daa or push mov sahf cli or fadds mov and mov sbb cmp inc jo jbe data16 lahf lock inc (bad) cmp xchg fs push push push fstl (bad) sbb aad (bad) es aad push je repnz inc jle je lock sbb js add mov fmulp mov mov dec lret aad push (bad) lods loope mov or xchg popf add mov popf (bad) cmovg (bad) push mov inc sub rorl es jg lods sbb in das fisubr and cld aam in sbb sbb call pushf jg xchg cmc pushf ljmp sub sbb or pop mov add je (bad) dec data16 mov (bad) xor mov push dec mov aaa push sbb dec repz sbb sub popa and pop or lods and and or popf bound inc jmp pop dec (bad) (bad) cmp adc xchg xor or aaa cmp nop adc rolb scas and int mov pushf ss loope in lahf pop call ds inc jne push popa jns popf rolb add bound adc sti add ljmp mov sub adc cs and or xor mov xchg pmaxsw push jge cmp cmpsb mov or inc lea or and subb cld mov add into adc mov imul lods movsl addb inc ljmp gs movsl movsb add pop lds lods cltd xchg sub or or rcll rcrb push inc mov or and sub xchg add out mov sub adc in fisubrl inc je sub mov movsb jmp push in mov inc movsl or cli push mov in mov mov sub orl adcb or inc std negb add std lods mov mov in (bad) xchg add shlb pop mov cmp inc mov adc jp sub cltd hlt sbb fwait and push sbb sub fisttpll or daa push out inc js dec add mov sarl add mov and (bad) in sub cmp imul lock push fisubl sti add into sbb mov dec cmpl pop mov aad cmp mov ret inc cmp cmpl push mov and push sti and sbb sub xchg insb xchg test sahf adcb add mov xor mov js loopne sahf test jb jo out and jle ljmp int jecxz lcall pop sub inc add std sub cwtl stos inc cmp rclb loopne into imul stc aam bound cmp sar les and pop mov add and lret mov cmp xchg pop jns cmp add and and insb lcall push insl out pop jecxz and ja dec pusha sar cmp xchg mov jno fs or or push in sbb inc movsb xchg jp lods dec and pop pop ja std lock dec dec bound stos gs (bad) leave aaa mov test (bad) ret cmpl adc test mov jns push std int cmp ds ja daa push aaa inc xor cmpsb jne xor fldl in and je add mov mov addb mov movsl xchg adc lea adc inc adc jge enter and into push testl sbb outsb sti loope movb lods decb cmp sub stc cmp jae inc push mov mov lahf mov cmpsl or and xorl int sub loop inc aam inc xchg enter in int jno lahf ret std mov (bad) pop mov arpl dec dec jo xchg mov xor xor call jmp pop addr16 and out xor adc bound xchg xchg ret (bad) xchg cmc or pop xchg xlat inc fmuls adc out aaa aaa xacquire push sub dec inc es sub and sti push mov adc jne test inc jnp inc repnz mov popf lret sub bound and lods nop xchg jae sti and mov sbb mov add or int3 jg pop ficomp lock jo lret cltd sbb mov mov push mov rorl mov xor fs in jo mull inc dec dec add inc add stos inc jb lahf cwtl xchg popf or mov sub stos cwtl pushf jae cmc leave or and and aas ss movsl cli out inc pop pop aam lods add xor enter out dec adc icebp add pop jl xor jbe inc push sbb out fadds inc loopne xor pop ret sub pop mov pause sub (bad) jg loopne movsl sbb push or aas popa add add in cli fsubp insb repz mov js xchg adc adc xor dec cmpsb rorl jp sbb insb xor cmp (bad) (bad) popa int3 (bad) shlb sub mov ss and cwtl and mov movsl and jg adc add rcrb out in cmp mov mov out sub data16 lret scas mov cmpsb xchg call mov aad pop stos cmp mov (bad) data16 ret dec inc int movsl mov and push push lret loop xchg cmc cld xchg sub inc js,pn sbb sub pop ficomp test mov or inc xchg in mov adc lds or inc lods mov xlat imulb rclb and mov jne adc das mov test xchg sti das jne pop and mov enter inc adc add inc out and ss sub push xor push bound xor les idivb and mov mov cltd out xor jmp dec lea jmp xchg ds pop movsb sbb xchg pop test mov pop call lds cmpsl and sbb xchg movsb push mov inc inc pusha sub hlt sbb jb rcrw ds inc cmp std dec popl fmuls inc das dec mov movsb daa adc xor push inc inc xchg (bad) xor cmp jne sub cmpsl and popa mov jo add and push or js les push xor xor jno fsqrt sahf mov pop popf das loop ret dec xor mov scas mov lcall xor outsl inc pop pushf sahf mov ds out or jg mov lret jecxz loop push ficomp mov adc dec cmp dec call push sbb inc pop xor out (bad) aad cs roll pop dec sbb dec or sub mov lods imul xchg icebp lahf cmc cs dec out push (bad) in cld mov pushf lds dec sub ret xor pop addr16 jg sub dec pop add jg cmpsb add popa or xor rol xor cmpsl and mov add add insl in dec mov xor sahf mov pop pushw les push pop inc add ljmp dec xlat sub add data16 fyl2xp1 in int cmp mov jne xchg or orl mov popa jbe xchg cmp xor scas push adc add sbb cld icebp orb adc jno lahf sahf stc add push adc cld xor hlt add cmp mov adc ds mov shll inc push xchg mov mov pop lcall mov call (bad) idivl dec loop pop cmp or ss inc es mull add or sub or mov mov int3 mov test add push leave sub les ds sahf add es cwtl loope lahf pop in jecxz cmc jge mov xor push aas mov xchg xchg sub cmpsl and push ja enter mov add mov push or clc mov pop pop mov lea or mov (bad) mov sbb lods mov fadds loopne cmp hlt sub fildll adcl pop gs xchg inc inc cli mov mov or push ds loope gs add pusha jne rolb or sbb jge arpl xor popa inc or je jecxz outsb fwait mov adc lcall icebp cwtl cmp push out push je (bad) xor mov imul mov adc faddl ret outsb mov or and cmp mov les and int dec subl fwait cld jp into xchg or sub or cmp xchg pop adc fcompl or add adc sahf icebp pop outsb fwait notb pop xor pop add push cmp dec sbb popf and and pop add or aaa ret jge lea int3 add flds mov pop xor add pop fwait cmp sbbl and enter lcall sbb xor jg jmp fmuls pop sbb dec jo or lcall push clc in loop mov add orb add call mov pop push gs pop outsl mov pop add or mov dec jecxz or adc lcall (bad) imull aas int3 inc fwait in or flds xor sub xchg (bad) mov loope imull insl jmp xor rorl dec mov imul fidivl push lea adc bound ret ja cltd cwtl cs es xor push cld pop loope addr16 mov jp aas jl pop adc and ds xor cmp xor lods sahf es stos xor sbb movsl push jno mov daa ret xor cmp cmp sahf mov or and cmp cltd in movsb sbb xor (bad) in in adc mov jge sbb mov ja (bad) repnz push mov (bad) test dec je mov inc dec cmp jle repnz inc aam and cld and xchg or sub scas movsl push out inc inc pop fisttp and dec sub shrl daa ljmp fstpt jp xchg sbb add push xchg adc in cmp mov dec dec cld mov inc jns fsubrl out push add stc jno fnstsw or xchg popa mov add xchg and aad pop sbbl mov mov sub push sbbl or std mov or push sub test xchg or cltd stos incb out repnz gs (bad) (bad) cmp ljmp int push roll or (bad) dec cwtl or std sbbl insl (bad) sbb outsl gs pop jo jo inc push call or sbb sub fnstenv push test sbb shrl xor lahf rcr addr16 scas mov mov xchg mov sar icebp add sbbb out and and mov pop xor bnd sarb aam adc outsb adc call xchg popl imul (bad) lret sti pop dec aad fiadd xchg sbb xor add jnp out fimul push repnz or scas mov pushf (bad) int inc fsubp xchg jl cmpsb in jnp mov pop adc das int sahf pop pop (bad) mov ss rcr jmp xor arpl mov sbb inc xor pop mov enter aas pop fcmovu int3 ljmp pusha movsb aaa inc and cmpsb subl push popf sahf std pop cmp push or sbb jnp stos fmull mov and loop iret hlt mov out gs pop xchg loopne sar push mov mov xchg xlat or sub insb jp in loope popa loopne pop dec sbb je sbb fldl pop test loop push cmc sbb sub test push and mov adc sbb mov inc cmp pop imul cmp repnz cmp popa shrl inc push dec lcall popl xor insb mov rcrb pop fistpl popa mulb call jb aad addr16 xor data16 jbe in dec pushf push js fs pushf int cli sahf cmpsb loopne mov jecxz aaa inc jno jo sar mov test dec mov sbb mov push mov xor cli push jp push adc popf mov pusha sub jbe mov pop mov dec sub adcl repnz mov nop gs sub mov push or int sbb out in mov aad and repz std (bad) sbb or icebp inc imul sbb mov sub inc daa cli mov mov xchg mull pop mov aam mov xor inc and mov clc out fs daa jne cld shlb xor pop xchg inc push aaa adc inc out pop push fcompl rclb cmpsb jge jmp sbb lret mov sbb xor arpl enter int3 stc aaa add push ja mov mov xlat pop fs xlat or shrb sbb stc ljmp pop cmp and pop imul test std out push cmp loop pop push popa push data16 inc cmpsl or mov fisubrl bnd cmp flds pop jo mov fwait add hlt stc test stos lods mov and ret sub cwtl aad adc sbbl dec sub enter cltd nop (bad) rorb lds lea xchg jns pop jg mov cmc jno dec push sbb mov and ret sbb or mov jecxz dec mov mov add and xchg or test insb xchg and push in ljmp xor jb xor stc aaa cmp movsl in popa loop in pushf loop jo int3 pop xor mov jnp xor xchg mov movsb out adc (bad) push mov pushw into aad jae mov jle int cltd cmpsl xchg loope ss xchg (bad) jmp pop popl jno dec jns xor sub jo mov and xchg sub or xchg inc adc in fs xchg test es faddl or js test pop and push lret decl mulb lock out push pop pop test inc repz push cltd sti out ret sahf xchg adc test cmp jnp jno repz xchg sbb push in in bound cmpsb cmp call and (bad) pushf xchg pop push es xchg jb mov sub pop xor pop sbb movsl dec jl repnz (bad) pop push xchg jno jecxz sub pop jns (bad) lea lcall push adc (bad) xor push mov pop adc shlb mov dec or test in add cmpsl lcall loope cmp jns es mov inc and push mov (bad) and inc push sbb movsl arpl es popf adc mov das inc inc push das adcb xchg in mov jmp pop mov sbb dec fdivr movsb xor add outsl pushf adc iret xchg (bad) pop in (bad) lods xor and inc jno or xchg jl das xor pop add cmc dec in lret or add mov inc (bad) incl add mov clc in pop mov add scas (bad) mov aaa and out aas scas cmpsl push sub pop push inc clc hlt xor mov sbb xchg add mov imul mov fnstcw pop ss push pop inc test push popa enter and out popa icebp adc test jns dec (bad) xor add cwtl jns add jp gs cmp fcmovnbe mov pop out push pop pop test cmp aad dec jo (bad) je (bad) lcall lret mov leave jg (bad) int3 in ljmp push dec xor (bad) mov lods jle lods sbb or add sbbl add pop push add push jns pop push sbb fdivrl mov imul mov (bad) cmc movsb aam lret or shll xor sbb push and jg pusha out insb push sub popa add pop pop int3 int3 nop movsl aad sti addr16 jp add fs daa xchg push jbe hlt nop xchg cmp (bad) push xchg cmp in xor out (bad) pop jo in dec dec loopne in lock pop nop inc inc and or bound cmpsl ficomp pop dec bound cwtl (bad) sti test loop das xchg inc mov mov push andl loopne xchg sub test data16 mov dec out fidivrl adc scas or mov or add shlb xor or aas ds sbb push popf xchg nop mov repz repz imul insb and pop mov cs xchg cmc setg (bad) sub mov cmpsb mov (bad) fnstsw add addr16 sti call pop push and cmp mov cmp sbb add push cmp jne (bad) dec mov xchg and and cmp and cmp daa add add inc pop and (bad) (bad) test add sub fwait adc add data16 pop push mov xchg test inc jg insb mov mov popf ja out pop sub mov cmp jne xchg insb adc mov mov xor jl sub inc ret cmp mov inc push fsub and and mov es sti out pop (bad) notl lods and adc je in cmp push out aas mov cld clc xor mov outsb dec ss roll dec pusha mov sbb xchg std (bad) push xchg roll mov repnz movsl cmpsl dec int jbe inc test cmp adc adc test xchg out roll xchg fsubrs push inc jecxz pop shrl cmp lea xchg pusha mov fcmove shrl and push adc addr16 xchg stos std inc pushf (bad) hlt shrb sub aad mov push pop push pop mov icebp inc inc (bad) fsubrs lock test mov adc xchg inc popf pop sbb jno inc stos rcll stos xor push cmp out xchg sahf adc lcall dec mov inc sti mov xor cmpl bound push fimull outsl aad push insb sub adc inc hlt xchg icebp sbb test xor test enter arpl xor pop mov out sub sbb jecxz shll jle sub insb ret mov daa inc movsl enter jmp mov mov cmp ret cli jl pop mov pop add xchg pop mov inc mov or loop lock (bad) shll sahf sbb and xchg lods (bad) pop xlat stos cmp mov sarb bound cmpl ja subl cmp loop push mov lds jbe shlb and push js jno or dec lret ds fwait xchg jns xchg adc icebp out mov outsb lea inc sub rcrb xchg test incb inc or pop xor mov in incb or xchg mov xchg jno test adc inc jbe loop iret dec add or mov mov sti lea insb xor rorb lock popf push rclb mov xor add push cmpsb sub push fwait (bad) daa or mov cmp push test ds test pop sub aas sub dec sbb xchg sbb mov mov xchg sahf fildl outsb fisubr cmp test jg push jns sub mov jp stos mov testl jl lahf pop icebp sbb (bad) xor je fist dec fucomp iret in rcll in enter lret and in sbb sbb dec in lret out add push dec in jbe push mov fwait cld pop and dec push sarb push add test stc cmp fidivl xchg mov adc dec (bad) xchg aas sarl dec mov add fbld data16 lret lods cmp xchg mov push push and dec cltd mov pop xchg or add ret incb cld int3 iret xchg push sub movsb jle (bad) gs jp movsl (bad) dec icebp push push clc gs inc or dec lret cli push push lcall cmp xchg lcall pop xor and dec and jns inc or xor ljmp popf (bad) call or jno mov sub fucomi add mov push in out enter std push outsl cmp jb push lahf add cld jns push call push jg sub insb jnp out and sbb mov mov add mov (bad) mov adc roll jo xchg in ss pop in push cmp add and je push jnp pop xor in movsl xchg fdivp push jbe or (bad) in ret push inc add enter jmp mov mov mov mov pop addr16 icebp and (bad) mov jp (bad) sbb loopne add dec lods ret adc pop jp cmp je call ljmp or lods aad pop jl add fmull adc sbb popa subl enter and adc adc lea lods and shrb cmp xchg mov cmpsl xchg mov loope int nopl pop jg call and inc imul loope pxor or aam push ss mov hlt nop sbb sbb mov add push sbb leave add imul add add roll adc repz es call and lcall out pushw xchg jl ds cld pushf dec xor jle adc xchg dec push test mov cmp adc insl jge das test movsb push lock ret stc xchg adc (bad) repnz adc ds outsl dec (bad) mov mov xlat dec repz cltd in and and test les inc dec imul inc int3 pushf data16 inc test jle or stos sub imul or daa pop cltd addb insl out add data16 jl fiaddl mov out jae into lock daa dec ja cmp lods stos jbe push cmp or mov and pop xor jecxz bound mov shrd daa cmp fwait xor pop lret dec ds and (bad) ret jbe adc out inc scas pop fsubl push testb loop and xchg push adc adc push fistp dec pop jns stc popa hlt and cwtl sti or cmp cmpsl mov adc gs movsb das imul jno cmpsl push aas sub ja xor xor pop lock outsl icebp sahf test cs cmp xor orl cmpsb xchg lock add sub jg sbb scas sbb pop jae dec mov (bad) mov dec inc or jns cmpsl mov mov addr16 dec push ficompl lock xchg or (bad) cld mov add testb dec inc aas jle (bad) cli inc les mov xchg sub test pop cmpsb fs jle inc loop jmp push (bad) and jge insl sub adc pop pop add add jo pop lcall lcall mov icebp (bad) xchg inc cmp ds inc in mov xchg lcall xor cmp bound lods sbb adc in pop sub jo jecxz sahf lds aad dec jo pop adcl mov pop jp adc ss ret push (bad) mov mov es add (bad) cwtl add inc mov (bad) push jle sub popf push push inc lods negl or adc or in aad xchg mov into lock mov out push adc movsb and pop rorb xlat iret stc addr16 lods push (bad) sub jns dec imul dec int pop loope rolb add scas loop lea pusha out cmp jno gs roll add jle shll cwtl int push push mov inc rcrb insb mull pop (bad) ja push and outsl jne lods out add adc jb cltd addb or lds push adc sub push les xchg pop push pushf push ds and and or xchg imul aam push or adc int3 xor mov inc cmpsl inc std adc inc sub std adc mov jecxz push xchg xchg push out or adc push cmp je data16 and (bad) pop jne adc sbb fdivrl sbb lahf mov mov adc pop sub test jo xchg repz enter mov pop sbb arpl ret test and mov popa pop orl jo sarl push ja sub movsl arpl stos mov scas aas dec jae inc bound adc add arpl or shr mov lods outsl and lea xor mov adc fildll movsl inc mull rcrb cmp mov out inc and jmp into and and pop pop aad movsl cld insb adc mov mov sub das sub dec (bad) icebp cwtl xchg add jns adc jle push ret imul and movb pop or xlat xor adc xor cmp mov pop push les inc sbb add faddp (bad) aas jge pushl inc cmp aaa pop lods decl scas xchg inc mov in leave cmp ss ds mov imul les out mov and (bad) sti scas mov sahf dec ret imul ss and call xchg cmp test cmp in fs cltd pushf push lret inc andl test sub es adc xlat inc or sub cmp decb xchg lcall bound fstl nop mov mov sub mov dec sbb (bad) mov test shl jno or lea pop mov fstps xor loope and and pop les add sti adc pop repz dec cmp adc outsl daa dec imul or popa push or out push mov jb int in popf inc shll inc jecxz stos add test aaa loop sbbl pop xchg adc or push inc pop sbb call sbb xor xchg imul int3 test inc xchg gs inc xor decb push call jae sbb sbb pop jle add or inc ss (bad) mov fwait mov loope lahf into (bad) in outsb repnz cmc jns gs push out mov cmc aas fcmovb inc push repz insl test popf jnp lods adc enter dec and scas push sub mov fstps shll mov jb jmp and inc xchg inc inc lods pop scas js rcrl inc dec ss outsb cmp imul nop inc test in (bad) hlt sub mov xor jbe (bad) mov mov repnz adc cmp and insl aam mov and cmpsl mov dec adc sub ret and pop aad je movsl sti int xchg xor mov xchg inc mov or (bad) push mov mov cmpsl int3 or inc lods fisubr cmpl inc add cmp adc add xchg out pop mov test ret cmp enter pop cltd push push adc jbe jg or push dec jne lock jns cmpl add out shl and daa cmpsb add sub adc dec (bad) xor mov lea push adc push inc xchg add out and cli cs and jb stc fistl mov outsb push idiv pop or (bad) xor xchg out int3 nop sti jle sbb rorb loope add cmpsl enter ret fdivrl cmp int jno setb add mov ds je js cltd cli xchg addr16 cmpsb jp or mov repnz push adc inc adc cmp pop mov push or dec pop dec xor gs cmc nop adcb push pop fnstenv cmp cmpsl decb ret cwtl mov sbbb jno push or (bad) in daa adc lea push inc es sub push aaa inc push mov and push pop enter loopne sub out jl pop (bad) adc jae pop arpl push arpl scas sub inc out fldenv sub ds sub scas sbb aaa mov test fildl mov sub xchg adc jge and jb sbb out jne iret sub in rcll cld or lock pop int fs inc rcrb sbb sbb cmp in mov sbb cmp call or (bad) mull leave icebp iret ljmp jno fldt idivb pop mov lahf jle lea sbb xchg arpl push pop and mov xchg ja imul sub sub sbb mov test xchg pop or and xor adc lods mov cmpsb adc ds push pop movsb popa add data16 aam pop push icebp es enter jl dec out add and and pop add lods fwait (bad) repnz cli pop (bad) mov mov and pop sbb into or push add jmp mov and push xchg and add ret inc repnz fimul aaa jns scas int3 scas sbb into add mov mov mov jb cmp popa push push add loopne movsb mov sbb gs pop cli pushaw sti cmp dec sahf aam mov ss jae inc popa pop inc mov cmc rcrb xchg outsb sbbl xorl mov loop gs daa (bad) push mov mov js jnp outsb scas cli mov lock cld cld es arpl clc cmpsl inc movsl imul adc adc addb (bad) sub sti push adc icebp jge es inc es es je mov lahf fiaddl daa cmc clc jnp add pusha xor xchg flds sbb pop into adc ret test ljmp xor pop in sahf jnp inc fs mov adc (bad) adc jg pop mov sarl in cld pop pop out cmp pop mov push add sbb jg sbb mov cwtl cmp cmp xchg sub bnd pop lods pop mov dec sbb push test sahf out in push stos pop stc pop aad xlat sti ja jmp adc xchg lea xorl xchg fwait daa pop sub (bad) iret nop adc shrl ret lret dec lret push cmc sbb inc dec xchg imul addr16 inc fsts mov and push xchg add mov add and sub iret and pusha je pusha mov aas pop inc pop push repnz push cld dec adc nop subl sub jecxz loopne aad mov (bad) outsb push outsl inc mov loop cmpsb icebp or rdpmc pop xchg sbb mov sbb or std je or sub push fisttpll mov mov jno and sub push push pop popa ret stos push mov pop cmp add mov (bad) mov ss sbb sarb xor mov cmp mov dec adc cmp dec fiaddl fsubl dec cmp stc sbbl mov cmp cmpsl xchg dec mov in cmpb xor adcl push pushf lahf sub call sbb xchg adc mov add inc cmpsb xchg pop fs cmp xor xchg vpmulhuw mov jbe aad xor push (bad) jns fnstenv inc sbb fs imull push (bad) xchg shrl xor sti fs popf mov lcall test pop xchg xchg cmpsl sbb popf push das add inc sub xor lea sbb in cli adc fsubrp mov cwtl jle cmp stos arpl xchg push arpl push fdivrs mov pop test adc inc or adc push sbb lods stos cmp or idivl nop jle addb jns incl push mov and sub add repz and jbe fs cmc lret fistpl bound push pop inc cmp sub xor xor and fnstcw popf test ss jae fs gs sbb push cmp xor sub insl ljmp loop xor fwait test xchg cmpb push out into xchg test ss mov cmp xchg push mov push lock dec cmp fwait in pop xlat adc mov xchg adc push pop sbb dec fwait ds ret push mov jecxz dec and (bad) bound pop xchg jp mov xlat pushf scas lods xchg sbb lcall jge (bad) xor adc movsb push repz (bad) dec dec xor mov (bad) rorb mov sub push daa in and rclb jge push xchg sti mov sub dec sti lock out cli les or lret push add inc and pop imul into ficomp pop xchg push push fwait xchg mov shrb sub pop mov pop jne (bad) out sub push sbb cmpsl pop jmp cmpsb push mov xchg loope je lret jb incb sub jno or mov pushf (bad) jno xchg (bad) xor nop call dec or arpl cmpsb arpl cmp dec pop outsb imul scas sub imull cmp (bad) iret inc sbb sub jl cmp mov pop adc (bad) outsl jg jbe incb ljmp clc pop mov pushf mov inc stos jae jmp enter mov and incl int3 ljmp inc and fs scas pushf and cmp xlat add inc jns fisttpll inc xchg adc jmp inc push mov in inc mov sbb cmc and jns jmp out imul jg andl xor cmpb fst aad aam push stc fimull mov test daa push pop dec sub mov jnp nop mov pusha movsb (bad) xor cmp dec adcl int3 jge jne std inc aas in sub add xchg or or push cld jo pop cmp push sub jg and push jnp divb ret addr16 loope xchg cmp (bad) sti mov dec mov push (bad) add xchg or in subb sbb adc add mov ficom and push test pop outsb inc push xchg xor xor addr16 pop mov out jg icebp push or in sub popa sarb mov add cltd into mov mov and sub and cwtl popf pop jmp imul aaa inc xor lahf inc divl sti jae mov stos pop cmp std jns jle repz call fisubr and push inc lea push aaa or xchg cmp (bad) pop out push jne rorb dec mov adcl cwtl pop inc push out or sarb (bad) popa sbb pusha ret dec xchg xchg jl or les cld test ret int3 shrb call mov jns insb ret jp lock ja and xorl jp aas mov dec mov fs movsb or andl (bad) in rorb in icebp test sbb movsl cmc daa div in mov mov pop push fs sub das mov hlt fadds mov js inc or ret (bad) aam roll mov aaa das or jl xor insb insb xchg adc test push addr16 mov mov js xchg push xchg fldenv mov fs xchg lret sbb sub xchg jne jge nop cmp sbb and cltd push push and aad fiaddl adc cmp mov (bad) mull mov icebp data16 mov sbb jle inc pop mov mov or jmp push cmpsl inc fisubl pop leave shr sarb idiv notb popa jnp hlt bound testl sbb lods inc jnp xchg inc ret jnp (bad) out mov push mov das xorl mull inc orl mov scas divb (bad) stc pop cld xor ret in dec mov mov pop jmp push cmc jo pop int3 stc inc jl outsl xor cs xchg addl in push jo xchg (bad) les and (bad) mov mov xchg fs sahf xchg adc push mov in jl scas inc push mov pop push xor xlat sahf in jbe dec mov jne xchg adc mov xchg je inc jb jmp sti inc cmpl sub rol push push push popa xlat mov scas nop iret mov jmp (bad) mov (bad) test dec js xchg nop lret jo (bad) dec xchg out scas ja and rcrb in jecxz aam dec nop push or (bad) in cmp adc fs jmp je scas aam cli and mov push adc sahf sub insb push shlb or aad jns aas pusha mov das sti test sbb mov into (bad) inc jl or ja adc dec push fs add xchg call sub dec inc aaa xchg popa add orl push bound (bad) mov sub and frstor leave pop xchg aaa add pop pop mov dec sbb push out loop inc jle mov pop (bad) xor in mov xchg push add push and fstl fidivr mov or pushf and adc jg stc dec push sub pop (bad) push xchg xor mov sbb dec out sbb add sub fwait sahf push dec sbb inc movsb in sti inc test cmp in adc inc push add sub jne int3 popl test (bad) repnz adc (bad) in mov sbb mov subb push xor sti in push data16 dec mov notb inc add push (bad) sub std (bad) mov inc pop ret into pop add mulb add lods push das stos or mov cli out pop mov (bad) cmp (bad) push jp addr16 (bad) fs pop ja loope pop mov adc add adc loopne jl fidivrl mov and popa adc xchg xor in cltd iret cld or pop dec xchg (bad) ds iret cmp cli mov setl cmp test fwait test decl or dec sub lods mov or inc fiaddl pop mov aam pop int nop sub data16 sti aam cmp das cmpsb movsb push std decb pop xchg push pop sbb dec hlt dec adc pop stos sarb sub outsl das inc sub subl sub inc gs shr xor push aaa incb sub ds mov pop out jmp jl jg sbb lahf add and dec scas add dec out daa scas add gs pop lcall pop lea adc push test and jbe xchg adc lahf je insl jno or js sbb int3 mov out inc arpl add ja xor dec dec outsb in scas jge aam iret push in mov idivl jne shll inc inc mov inc sbb test call movsb fwait inc adc (bad) in jo lcall push repz push aaa push daa fwait fs pop outsl pop rorl dec sbb ret cmp movsb les leave stos (bad) or lods addr16 jne fisttp jno jmp pop mov inc lcall out fiaddl movsl mov outsb adc adc lods push mov les xlat dec jns and jns cmp rol pop syscall sub fs shl (bad) xlat push (bad) jb cmp fnop dec andl pushf lods push mov mov aad push xor jecxz or enter push mov adc dec jmp cltd inc test imul nop/reserved xlat pop inc nop dec xchg cltd lret (bad) xor iret fucomip mov jae (bad) xor and or mov sbb or xchg in fsubrl inc ja insb lds (bad) ror inc loopne or lds fsubrl mov daa pop cld jl inc sbb and dec pop popf jl ds add mov pop ficom std hlt or aas adc mov mov push cltd imul xchg shrb in (bad) dec sbb dec inc push mov adc cmpsl notl or imul shll (bad) xor popf sar inc lcall jnp xchg sti fmul cwtl mov aad ss add or mov and subl dec and std mov (bad) sub push push sti leave mov lret jp push jnp xchg daa fs xor jne mov and sbb jb jns adc push sbb (bad) int3 (bad) mov insb sbb mov xor push leave jp inc ss test mov mov mov in (bad) stc shl (bad) push cld lds stc pop repnz fisttpll jne fisttp fbld or mov test jle sbb or loope push fsubrl push ss lods push or les adc or aas ret adc dec fidivl push lahf jne jns lea push js push dec mov push sbb cli and movsb xor add (bad) les xor pop xor mov push sbb cmc psrad mov sahf aad cmp in push lahf inc stos leave and cmp jmp mov dec add mov addl int pop ds fisttp dec icebp (bad) enter adc add mov fildll pop pop int mov xchg outsb jo sahf pop mov add lods (bad) sahf sar mov (bad) lcall ret loope mov movsl pusha shr test cltd pop jg jns push scas fistp fwait and mov (bad) sbb stos (bad) sub cmp rorl add test mov jns mov add cmp xchg mov cltd lret or and (bad) xor or data16 inc (bad) insb testl pop pusha inc xchg insb int3 xor push les inc test inc push push xor daa jecxz cmp out and fisubl sub add in mov dec xchg adc mov jmp xchg and cmp and xchg inc imul cwtl pop xor leave mov sbb adc sub lods ror push std adc or mov inc push pop lods (bad) repz gs pop leave pop add in les add out push sbb xchg xor sub mov in jge (bad) jno xchg xchg xchg pusha bound jg mov sub ljmp adc out mov inc jg lret and cmp mov jne iret aad adc jno adc mov sbb xchg aaa mov addr16 test jnp xchg cwtl aaa mov inc mov mov lret cltd push jo push lret push and inc (bad) out xchg arpl les sbb mov xchg dec aad in fmull inc movsb mov cmp adc inc pop pop hlt mov sbb jecxz das and lcall jmp addr16 inc js nop xchg pusha adc cmpsb mov fwait push pop es and jb sbb cld iret mov loope in adc adc psllw jbe add movsb cmp test and sbb jle imul pop sahf hlt mov xchg aaa in mov jecxz dec outsb adc inc cmp mov sub (bad) lret das stos push cld add xchg fsubrs aaa pop mov mov fs gs mov or inc jno or shlb mov imul push mov pop pop scas mov or aas shll (bad) jge push and movsl dec xchg cmp lret jnp rol scas bound and gs mov ret xor xchg jmp or stos fwait out jl (bad) pop jp fisttp lds push imul outsl test fildl popa add pop ret in mov enter movsb scas icebp mov ds popa es shll push mov stos dec test call push dec push test sti ret xchg pop fildll jnp dec (bad) jno mov outsl or jno test inc ljmp fcoml rolb les sti inc and nop fimul cmp fdivrl mov neg adc (bad) and sbb xorb mov fsubs dec or (bad) add push mov pop imul ret leave (bad) and leave jecxz inc leave (bad) ja inc movsb pop or loopne inc pop mov fs negl shll mov push cmp (bad) lods lods cmc shl mov pop sub push cmpsb xchg (bad) (bad) out das mov xor jb mov inc lahf in insb push sbb rcpps inc pop shl hlt dec adc stc mov into push rcrl mov popa movsb out insb mov and pushl push enter sub xchg in sbb shrb fcompl subl and jecxz (bad) bound or (bad) cmp inc jne fcoml mov mov or xchg jecxz pop mov sub pop clc in mull cld aas inc or mov call jnp pop scas test mov pop pop adc pop jnp out xor xchg pop add adc sarl sbb (bad) ljmp dec (bad) stc les ficom popa mov insb les jecxz dec adc inc add mov lock add fiadd or aad enter ja cs push adc inc push sub mov and and push es fistp js inc sti fisub or or or repnz mov test pop movsb and stc (bad) icebp xchg repnz das push stos enter xchg pop insb or xor mov (bad) test sub stos mov sub repnz xchg movsl add divl in xor arpl and ret lock lods (bad) aaa sbb sub add mov dec mov jbe push popl and std arpl cld addr16 mov cmp jb lea sahf xchg (bad) imul inc scas fs sahf sti or outsb mov mov jns cmp push and rol xchg (bad) mov jmp push inc or jge inc cwtl clc repnz push xchg imul pop push add jae fmull nop jb addr16 lock xchg std nop lcall movsl mov pushf sub mov das add adc dec ret mov and fwait or or lcall xor push popf fmull sti test adc xorb and adc shlb es push dec cmp fadds stc dec inc (bad) jbe inc popf test std and icebp add pop dec sbb inc insl lods pop push push add fs mov pop jmp mov lods push fwait xchg xchg rol mov stc pop mov adc insb out xor sub xchg test gs lret xor push (bad) mov sbb imul sub std inc lock inc ds cmc aad mov push inc jg mov inc sub sub push xor inc orl push cs push mov addr16 sub lods nop fwait jp jae test push pop (bad) lahf cmp outsl push leave xor jno int add push sub sub in sub sub mov or adc in mov fmull inc push pop cmpsb xchg cmp mov test jmp gs jae lds pushf aam lea pop fwait fwait pop jo cs (bad) je mov ds sbb int mov jl or rcr lea rclb (bad) mov pop (bad) (bad) push sbb sti pop pusha mov sbb jl movsl jg lea push popf popl dec or aam jb popf xor mov pop mov mov incl sbb xchg cltd out lret xor int3 mov out dec mov push mov push fwait mov xchg lds push (bad) push pop jnp mov fstpl push and fwait imul dec js inc jb scas lods cmp loope int3 jecxz (bad) mov sub out push mov and or pop movsl rcrl mov sti mov and xchg cmpsl pop push pusha pushf adc lcall dec les (bad) insl nop xor mov jno das sbb adc pusha pop cmp add xor mov repnz or jl push mov pop (bad) push sbbl test jecxz loopne iret jmp inc sub stc sti inc movsl test (bad) xor or fwait cmp test jae pop adc popf mov pop and (bad) fnsave xor sub addr16 into aas aaa pop dec cmpb add push sub mov ds and add test aad jne pop push in jnp add in xchg int sbb out pop or incl jle hlt ja add movsl std jnp inc negb inc jl ret addr16 dec push daa dec gs icebp adc in aam add or dec (bad) mov scas ja dec inc push mov mov or mov scas bound mov pop push jne std and out add outsl mov roll adc movsb cs add out jl insb test out lret dec mov jnp or out pop inc movl jg das or jge,pn pop push xchg xor pop fs push call arpl mov pop movsl mov shrl shll and sub subb jg sbb mov in push inc fwait movsl inc pop cmp add inc xchg push mov mov cmp dec or mov xchg (bad) cmc (bad) jae add shlb rorl (bad) imulb sti (bad) jo and test jbe dec mov inc sbb enter in xlat dec int3 movsl adc pop std popf or les mov clc das lods enter out push push or jge fisttpl and fwait pop pop data16 dec enter xor pop iret adc and xchg divb xchg mov xchg xchg pop pop adc lcall jge or ds cmpsl ds push mov mov push add cld and xchg (bad) xor dec mov insb add and jmp cwtl into xchg push popf subb (bad) sbb inc repnz das loopne cmp std decb scas pushf adc xorl out sbbl ja xchg jb je cmp iret push stos cmp std pop mov inc ljmp jo sub adc cmp int3 jp jle into adc out test xchg subb add imul jo aaa int (bad) out in push jmp inc mov adc pop imul and insl mov jae xchg xchg call and push xor mov dec out mov fwait out or jne dec and mov adc repz pop jo outsl ficomp or stc lock cld ljmp test enter fdivrl stc mov arpl daa incb xor cmp cmp sub fs out pusha and icebp movsb (bad) cmp sti push je imul sub aas jb or bound loope pop cltd fildll xchg lea push inc xchg pop cmp cmpsb jge je jns loop cwtl push jbe das mov xor adc in idiv dec xor fwait sti sbb cmp xchg int sbb xchg (bad) aad adc ss cli arpl iret mov add ret test sub add or inc push ret xor test and loopne xchg movsb std fsub pop stc mov sbb popf cli push lods xchg hlt mov js mov xor adc sbb adc hlt aad add fnstenv ja mov ss pop clc cmpsb in push mov jns inc cmp pop or (bad) sub sbb or sub mov in aad inc sti xlat push paddw xchg es pop sti jno push fisttpll imul jne push jmp xchg hlt in scas das data16 mov jns ja pop rcl test pop imul mov add dec and mov jo fwait sbb push les lds or push cmp ds outsb xchg arpl (bad) mov lods lahf and add lods jp mov xchg adc jmp push xorl les fwait and sahf lock pop xor mov or mov xor add and sub (bad) jne add cmp and sbb push (bad) mov sahf shufps fdivr and shrl cwtl jbe in repz in push xor out inc insl cmp and mov adc and jp cmp add lods imull push cmp in dec sti sub sub xchg (bad) ds test cmp inc cmp fidivrl into rolb (bad) out xchg cmpb popf sbb xor outsb pusha jnp cmp scas cltd arpl fidiv arpl lock inc stc xlat loop xchg lret sti fwait arpl pushf push gs cmpsl adc das lock mov fucom js jg leave xor push adc inc (bad) and addl push (bad) cmp inc mov (bad) (bad) xor jne xchg and (bad) shr movsb xchg rorl mov mov pop popa cmp jo push jno or popa mov mov sub xchg jg adc xor mov xor mov push insl lcall xchg mov push negb enter jl jp jecxz fmull daa adc imulb lcall jns call sbb xor call shrl aad dec cmp bswap movsb adc sti add jge outsb mov arpl mov icebp cmp cmpsb lock jno adc lock add sub inc inc incb sbb into xorl daa rcrb mov jae daa lahf (bad) testb inc jmp movsb mov sub sub dec sbb mov inc jl mov jge mov push jmp lcall or cli hlt pop mov test out xchg fwait cltd test lcall (bad) push sub dec jle cs jge inc push sbb and jmp sub dec cltd push mov cmpsb and out jle cmp or cmp mov inc jmp aam out add xchg xchg testb sub ret adc jmp xor or sub ret or mov or xchg mov mov and sarb fiadd iret fcoms adc add and sub jge inc mov xchg stos ds mov inc or inc das sbb adc xchg sahf mov add sbb jno add sbb or cmp out cmc imul adc lahf cld jecxz cmpsl ror mov xor sti (bad) pop xor push lcall pop add lahf mov popf (bad) notl xor pop xchg fdiv lods push pop sub dec pushf jg cld nopl dec rorb insl je xchg xor leave mov xchg inc lcall incl adc pop and lds lea jb out xor pop stos icebp push es inc cmp mov and cmp xchg mov aam mov xor xor lahf and ficompl sub stos or popf popf xchg sbb push repnz mov flds mov xchg pop cmp mov and and xchg jle aaa add mov das pusha xchg test pusha je sbb imul enter mov adc rcr and sbb cmp jns cmp pop sbb and (bad) sbb sahf add (bad) xchg push mov inc push pop notb fildl sbb adc or cwtl call inc inc movsb jg orl mov inc push dec testl mov jg pop inc adc sbb lds xchg je add or sub mov or sahf jmp sbb xlat (bad) test mov adc and adc lods mov cwtl dec cld xlat iret pop sub xorl xor mov xor repnz mov push scas add pop and xor mov cwtl mov mov int dec jo sbb push inc ljmp sub cmpsb sbb jb cwtl loope cwtl aam incb (bad) dec arpl ds notl push into xchg xchg fistpll into into jl inc or cli das adc fiaddl sarb cs roll cld in pop dec call jecxz xchg push int3 mov data16 aas jne xchg inc data16 pop pop pop ja js fisubl ficoml cld movsl es lea lds mov scas xchg (bad) add scas adc inc or jge mov push dec jg jb dec push enter and sti pushf adc mov mov jno popa pop xchg push pop movsb xchg sbb mov sub cmp out xchg xchg ret jge cmp arpl fldt out mov adc jecxz xchg mov mov and gs adc fistpll imul inc ret jmp bswap mov cmpxchg pop lret inc xor mov leave pop das (bad) mov dec test cltd dec and jbe xchg push cmp cmp xchg ljmp dec je xor xor cld push loopne aas jl mov movsb and shrb push (bad) xchg (bad) pushf xchg mov sbbl inc lods sbbl (bad) lock movsb and push jo es aad mov dec add xchg pop pop cli aas xor push mov ret jne icebp sub fs jmp ljmp adc decb mov add xchg cwtl mov push sub cli mov sbb mov mov push jns mov out ss sbb mov cmp fwait pop test adc fdivr sbb icebp inc mov jp (bad) jae data16 insb fild test xor push ja xor sub and push sub loop mov or (bad) xor jo ss inc xchg xor pop addr16 test xor out dec or sbb cmpsl and std sbb sar sarb xor adc jp and cmp cmpsl add jle test inc dec imul xchg and cmp xor ds enter xor inc inc incl ret nop mov add cmp cmp movsl inc mov or sbb pop dec (bad) in mov cld icebp test mov mov mov mov add in jge sbb jecxz pop popf orl pop mov ja dec cmpsl dec fidivr or jno call adc jge test pop push into jle and insb enter mov lahf sub shll push jmp icebp xchg push pop cmp jne xchg lods dec push add into into xchg add xor push in mov push pop jno sbb xchg push (bad) cmp popa and adc fistp adc adc mov cmp fsubs pop (bad) popf sub (bad) mov xor ja sti mov push sahf in pop or enter cli or adc test and and pop repz in test frstor fmull pop nop popa mov test aas sbb mov idiv add dec xchg sub or cmpsb les or push jmp fdivl and pop cmpsb pop adc adcl xchg sbb pop dec daa xchg sahf jbe pop xchg popf push jo pop lock das in int3 sub xchg ret or lock inc push pop movsb gs aaa outsl xor jne push (bad) je cs ljmp es repz jmp pusha rcll aad repz loop lock lcall cmc fmull jecxz idivl push xor cmp lret pop push cmp movsb adc push cmpsl je test dec push fistp xchg icebp xchg sbbb and dec out and movb mov fsubrl cld inc addb in add test xchg push nop (bad) dec mov hlt sub jnp cmp jne pop dec cmpsb jle pop add push cmc mov jmp iret ds and sti jecxz call jg mov xor (bad) and jmp pusha dec mov push iret jns pop jg add (bad) jmp fs add dec dec jp js and inc lock icebp fist cmp xchg popa xchg push inc mov push loope cmp lret fsubrs xchg (bad) dec mov mov dec les ja adc (bad) sti jo sahf and push cmc out push mov mov es jns mov add test iret clc aaa xchg jl sarb rclb xchg mov mov cmp popf data16 or mov (bad) pop mov int3 ret subl xchg sbb inc sbb clc cmp fmul sbb adc and mov outsb fwait cmove xchg cmp jbe ljmp jmp adc jp ljmp aaa pop insl notl rcll stos dec cmp xchg xor insb xchg pop cld pop cmp dec push dec imul jno imul dec in les adc and jg push xlat std cmp inc adcl test fcoml pusha lret ljmp jnp xor loop imul fwait push sub loopne or xchg adc pusha xchg js pusha cltd mov pusha popf sbb mov and pushf pop sub push xor xor sbb stc add negl add xchg jg out push data16 lret hlt and or lea test add and aaa mov xchg scas or or push pushf mov ret std stos mov and rorl pop lret mov sbb mov jno out test adc xor dec sbb add leave and sub add inc push idivb hlt addl cmp fcompl pop push inc inc arpl cmpsl push stc add lea ja sbb mov lahf insb out sar daa push icebp das mov stos and ficomp stc hlt jbe mov ficompl adc lods mov xor mov in ljmp sub sahf push jg xor push pop mov inc lcall mov and push fmuls mov popa cmpsl mov lea pop xchg mov xchg fidiv push mov push pop push adc les inc in (bad) push sbb mov dec xchg jns mov jmp add popf sub popl add xor and mov pop cmp xchg sub pop popf dec or jae jae lret add cmpsl pop and push xchg les sbb movsb lahf fldl cmpsl cmp popf mov and push pop add cmp sub sub and mov or adc jg xor lret les and stc xchg push jl pop fiaddl xchg adc pusha repnz test jbe sub mov dec (bad) xchg jge jl je js jnp (bad) movsl shr add pop fistpll mov lock sbb cld jo or pop xchg call mov cmc insb fbld nop fwait mov mov mov aad cmp push and arpl xor xor fwait push pop test inc dec push aas lock nop xlat in lea test jecxz xchg jbe mov (bad) mov shrb xor int aaa mov test cmp cmp mov int3 and pop add jne sub mov sub dec jl inc sahf rorb ret fadds movsb pop and enter push xchg dec lods mov mov rorl test xchg push bound test sub push fcompl ds jns xchg movsl ljmp ds jae push sbb add xchg dec int3 sti fwait inc ja in sahf aam add dec mov sub mov inc ret faddl flds ret sub and inc add sub mov fstpt or repnz out xchg adc icebp xor mov call std pop mov jno inc pop aas and sub cs movsl or subl mov and mov xor add jp or and nop sti jecxz or sub popa int3 add stos fimul push pop or push outsl test add inc outsl and icebp xor hlt push clc nop cmpb arpl out sbbb xchg sub cmp inc in xor popf adc mov imul adc imul orl call mov out push jo cmp mov xchg cmp cmp sub mov inc lret adc sbb jns clc sub pushf jno in lods ds insb push imul fidiv fcompl repz dec and mov pushw push imul imul sti into test cmc icebp pop cmp repnz popa fdivs aaa popl icebp mov pop push stos loope,pt fistl mov push les inc (bad) mov inc and gs hlt sarb add sbb push daa push push or adc icebp dec sarb xchg insl pop (bad) cmp pusha lret shll imul and in pop movswl nop push call dec scas xchg jno rcr sbb lea out adc mov das lcall xchg mov les jle and addr16 dec jg pop popa or push fcmovnu out arpl and jae mov mov add es mov sbb test mov pop push pop and xchg movsb (bad) mov cmp jbe (bad) in push and adc mov movsl push mov stos xchg jecxz jmp ret jle repnz and insb test iret fcomps and sub dec fstpl std es adc cmc jle sub or sbb dec aam adc mov mov loopne push loope fsubrs xor add fsts adc test daa es xlat jge jmp lea mov sbb or mov cltd sbb mov xchg sbb adc or fwait add insb icebp push and test push incb ds test dec sub ljmp test cmp add popf in in mov sbb lea fisubr and or (bad) jecxz push popf jle add sbb sbb fidivrl test cmp inc nop cwtl inc test sahf xor pop (bad) pop or popf inc pushf cmp outsl aam mov sub adc push pop push pop mov mov inc (bad) daa hlt push pop (bad) (bad) xchg test sbb mov mov mov mov lahf int sbb mov in scas cmpsl pushf or lock sub sub sbb pop mov aaa in out in movsb xchg jbe cwtl pop xchg add xchg mov (bad) fstps mov pop sbb or aad and push pop insl in push cmp jecxz ret repnz clc lea inc ljmp sbb push sub (bad) jp jg mov jecxz pop je ds aaa pop cli mov sahf pop mov cmpsb stc and mov scas (bad) insl loop mov cmp (bad) pushf push test (bad) (bad) push sarl sub sbb das orb pop nop inc or orb inc test nop xor aas mov (bad) hlt pop add pop mov lock out test int scas aaa or xchg mov xchg rorl and pop enter sti loope aad push faddl sbb sti add mov pop outsb or outsb sbb and push in mov les xor xor add (bad) push in mov ret cmp loopne mov test inc cmpsl jle movsl xchg mov sahf jno lcall pop mov fstps int add and std (bad) jg sarb push clc int pop cwtl insb xchg lods shll ss out sub dec daa clc jo lock (bad) sarl pop inc push xor jns xor jmp inc pusha adc dec and test div testb xchg mov pop push data16 aaa mov imul dec loopne jne mov inc icebp push lcall dec and mov (bad) jg clc fimul jo int3 loope into or ret xchg jle loop,pt jnp das sbb cld mov jge add in pop sarb jb ficom inc cld pop iret mov lsl lods repz mov dec (bad) xchg aad repnz xchg pop mov fstps pusha out and mov or mov lret push push pop dec sahf gs adc xchg push or mov push popa sbb mov push add jo mov and cmp aaa mov (bad) lock sub in (bad) inc loop and sti sarl movsb and lret pop insl mov add push in or xor stos enter das pop xlat outsl push jge fisub std notl adc or mov jl or xchg and pop mov rorl pop es repnz sub dec loop xchg push add adc jb shrb popa sbb cmp push (bad) jp in or adc popa roll test imul cwtl adcl sbb mov jns lea and xchg ljmp pushf insl xchg mov inc adc out sbb incl mov (bad) in or movsl sbb movsl movsb or sub or pushaw push sub in cltd inc mov mov rorl in ss push aam lret sub cs psrld pop cmp mov dec and push in inc imul test iret inc xor jne imul xchg cmp cmp sub punpcklwd aas or aas (bad) sbb pusha mov xchg mov lcall xchg mov sbb pushf cmp xchg mov cmp or add sbb lret mov sarl mov pop movsl or sahf ss js movsb push and add insb andl imul pop and cmp fwait pop push push mov and lret mov ljmp fist xchg imul rcll dec pop xor ljmp and test fsubr fstps loopne jo and xor insb loope int es jle lods inc and pop sbb jno adc dec mov loope (bad) nop sahf mov sbb mov mov pop decl outsb jnp adc xorl inc push les fnstcw test sbb rcll sub cltd fwait inc dec and dec mov in mov and add dec test cmp or mov andb mov mov cs inc mov pop mov pop hlt out or xchg das lds dec lock (bad) rclb xchg jl mov fisttpll lret lea jge jnp push mov call daa cs andl popf push mov lds adc add inc xor (bad) int add shll xlat arpl test cmp jae fcmovnbe and sbb pop pop cmp jle xchg sbb pop out outsb bound mov ret push add cmp and (bad) lea fimul sbb les inc inc lret dec push fs xchg mov rcll adc call pop and les imul xlat add sub and jb aam popf jmp hlt arpl je data16 cli shl mov inc clc das inc fldcw xchg jle jge or inc out xor push fbld js sahf in test (bad) push movsl and movsb push dec sti inc sub xor (bad) sub xchg xor cmp add inc mov aaa jo ds pop push loopne push sbb sub in sub push xchg pushf sub pop mov xor (bad) fistp xchg sub sub in inc push sbb (bad) scas sbb scas pushf daa loop jno minps pop add out xor pop orb push xchg and out adc rolb mov (bad) inc mov inc cli cwtl mov out js cmp fmuls add mov push pop xor pop xchg std pop mov push in fdivrl mov (bad) aam cmpsl pop hlt and xchg nop aaa hlt orl daa or pop sahf mov push and add or (bad) stos pop push adc popf cltd out jae add shll int xchg cmp mov and cmp and imul std and fptan cmpsl test imulb movsb popa mov xor sbb add fildll fcoms insb shll fadds adc (bad) cmpsl sub mov inc mov xor decl pop repnz add jno stos lock lcall mov sahf movb push xchg push xor adc push mov xchg cmpl pop mov lret test adc mov mov push and inc sbb cmpsb xchg pushf xchg cmpl ljmp aam jne lahf stc jp jne loopne xchg mov mov mov or xchg das data16 add add ret pop in pop jp mov into xor ret xor mov adc notb clc loopne jp mov mov cmpsl dec inc je adc insl and psrlw test cmp test in mov push inc mov rolb shr dec push mov and in push test push bswap pop jl repnz and loopne adc popf xchg aaa mov cmp pop xchg mov in test dec sub mov sub popf call mov negl mov dec in fwait cmp xor cltd adcb pop lret popa lods hlt ret sahf mov sub xor das repnz jecxz xchg mov test cmp xor clc or or aas and push cmpsb fs je cmp push lods in xchg in js mov push paddw adc jle test mov add stos aaa and push xchg add (bad) mov jmp mov out roll repnz cwtl cmp sahf mov mov int3 jae pop and sub mov fwait sbb scas inc mov movsl or add lahf push jle xor sbb and inc push or test xchg addr16 bound mov pop lcall add (bad) fldt inc push cmp cwtl mov push idivl sbb popa scas lods pop repz xchg fcompl sub xor ja sub mov movsl test xchg pop ficomp and divb movsl mov push insl mov xor lods xlat in sbb push flds test push (bad) pop lahf add sbb or popf in pmulhw (bad) dec mov mov out ds jp cmp les push ja movsb push xchg sbb or outsb lahf lods pop mov push fmuls sbb pushf push (bad) mov jl cmp xlat test push out repnz adc imul mov xchg repnz push push jg inc cmp (bad) popf das out fstps fsubs enter out jbe add jl mov pop (bad) sbb int jbe cs adc test test add cmp inc movsb pushf into shlb inc add sbb aam pop gs sbb lahf subl mov gs (bad) or fldl cmpsb int add add out inc add inc enter in imul or and xchg lret fdivrs nop jmp fnstenv loope gs mul (bad) push add push mov lcall sbb xor adc mov add cvtps2pd pop mov hlt test mov xchg pop xchg lret inc jmp push into sbb sbb mov ja insb inc sahf daa mov mov cli stc out (bad) and inc mov add icebp pop out cmp and adc rcrl pop xchg push inc or jp mov lahf mov (bad) dec inc ds mov lods mov aas mov mov sub mov mov cs fistl adc popa mov int xor gs icebp add cmp rolb dec or adc jle int adc outsl and ret xor in or out pop ret das stc mov ret gs outsl pop sbb mov adc lea mov push and aas mov sub mov xchg mull rcl icebp cmp push aad lock das sub dec push into sub mov mov xor lcall sub mov dec mov pop jecxz mov ss arpl or popa lods in push mov loopne cmp jge inc jle push pop test mov and les pop and repnz int3 in notb dec pop push (bad) xor mov lea scas inc and (bad) xchg cmc jne ds mov jge mov xchg cltd (bad) sbb xchg ffree sub test (bad) arpl popf loope push stc jg cli stos mov daa (bad) cltd mov lahf add pop fist cmp ret dec mov and (bad) insb jno lret push xchg imul hlt (bad) gs es aas mov ffree or cltd jle xchg mov and (bad) jb xor sti fidivrl xor xchg cmp sub int3 jb out and cmp and in push js mov iret inc jp out fdivrl dec imul hlt adc jbe shlb sbb mov (bad) mov (bad) into loop icebp mov fmuls loopne std (bad) jmp loope sbb ss (bad) xor and inc add nop xchg jp push outsl mov movsl pop sbb sarl mov mov dec stos iret nop mov mov mov or push nop in dec and pop (bad) lea cmp pusha lock lds lret push int ljmp in out aas inc jge jne aaa and or (bad) jne call or sarl cmp and and cmova pop imul rolb pop and stos cwtl pop adc pop stc popa and mov std lahf repz addr16 movsl js sub pop jne sub xchg jns daa add repnz es push (bad) jl add xchg out (bad) add or jne inc dec inc or shlb loopne inc push jl (bad) and adc scas cmp push divl jb stos repnz shll xchg or cmpsl mov and into inc mov push xchg sub imul test dec fnstsw push mov rcrl and and fstl lret test sub cs jmp test out inc inc test test sbb lock jmp inc (bad) and fsubr movsb (bad) and cmp add std push inc pop aam mov push adc jl jo adc mov cltd (bad) movl inc shlb loope adc and jnp xchg sarl cmp cmp and dec shrb cmp sub mov nopl hlt add dec inc inc fdivs xor push sbb cwtl add pushw cs jg aas and adc scas ret adc movsb and push sti fimull imulb in xor imul inc mov inc push jecxz mov (bad) outsl pop push mov pop xchg cmovle std negl aas scas (bad) movsb push adc cwtl dec arpl aas popf arpl bound lods cmp test or add icebp pop or or fs nop xchg clc int3 repz daa xchg fistp das (bad) cmp dec cmp adc push (bad) jno cmpsl imul jae repz sub inc cs mov jno xchg lock lea fisubl xor sub jno test pop sbb imul ret test push pop test push adc popf ss sahf std adc pop fs and jl test sbb pop enter sub sbb sbb cmp sub cmp sbb xor mov add aam jo xchg fbld stos sbb aas aas and xor push aad int sbb mov fldcw mov xchg je push and xchg gs jno (bad) push adc sbb xor aad adc sti les and cs sbb pop mov sbb ds mov jmp inc ret addr16 push mov aam stos out adc sbb mov fdivrp pop out aaa sub sub xor pop mov adc loope add lds (bad) cmc sub mov or xchg lret sub hlt xchg (bad) cmc mov adc sbb imul mov xchg fcompl push pusha adc mov (bad) adc mov inc or out ljmp lea sahf mov adc pop cltd pop in push je xor pop jns scas inc subb xchg loopne into mov inc or xor mov jge fwait mov int dec lret iret and lret push aas cltd hlt inc (bad) xchg mov fwait das and je (bad) rcrb loop or cmp xchg fisttp and xor add ret cmpsb stc xor adc or and jge pop xchg mov push push mov mov and cmp jg roll dec pop shr mov cmp xchg xor bound push sub add inc xchg enter sub out add (bad) icebp das daa lock popa shrl cmc jbe xor sahf jns jg inc ja cld daa fistl fcom mov cmp insb adc and dec inc xlat fldl sbb add arpl lds sarl or addr16 ret dec adc stos mov test outsl pop (bad) fildl in xchg lods clc icebp aaa enter push daa push scas xchg je add movl push sarb loopne fidivrl fsubr pop pop sub sub sbb xor mov dec fsubs xchg mov arpl test xor popa inc das inc pushf pushf call adc sahf (bad) cli xor aas xchg mov dec popf mov adc lcall or cmp movsl push cmp das cmp sub sbb mov nop clc inc mov lods mov (bad) cmc or (bad) jae inc aas mov leave xor and fucomp push xorb sub es inc movsb sub int jns scas mov lea pop aaa xchg pop repnz dec rorb repz test aas test mov fdivl push daa cmp jno ret test aad sbb mov sbb rcll add aam pop cmp push jbe or jg (bad) fisubr les sbb sbb dec or add fidivr jns jo dec pop (bad) into inc xchg pop or mov mov mov mov les daa sub sbb repz push sbb jp mov lahf loop add or pop cmpsb repnz mov or or push sti in push adc xchg fidivr es out sub push adc shrb rcll pop pop or sbb mov or jmp in push ret aam sti push cltd mov xchg push or inc fistpl daa out fwait lods push cmpsb add (bad) xor mov dec fs push or pop inc fwait xchg push andl mov pop fist out cld pop fisttp test jecxz cmp fldt inc add sbb adc out lahf pusha outsl cli js pop (bad) push mov mov nop hlt push xchg xchg (bad) push imul popa push mov pop xchg orl fdivrl incb out pop add js lcall out int and cmpsb xor mov (bad) cmp decb aam rcrb push or insb push xchg test push inc jp nop fnop sbb nop in mov (bad) jge jnp stos xor adc es mov movsl xchg fildl xchg cmpsb fwait lods es sbb outsb and cmp in rolb movsl xor out sbb dec pop ja les sahf stc pop add jge test out sbb sub adc push lods inc dec sbb and sub aam pop lcall cwtl xchg pop dec sub push jno or inc or test sub test push xor and sbb lea aad xchg stos fcompl jge in addl shrb dec mov mov cmpsl or pushf hlt sbb test add push sub push mov sub (bad) jg int (bad) jmp jnp scas (bad) aad stos int3 and ret decb mov jge add test incb pop lods jo es les aaa scas sub mov and fcompl inc push dec or fmul jnp test xor jno dec jmp pushf pop push cmp bound test mov xor or xchg mov sub outsb mov ret push repnz shlb fidivrl loope and adc adc in xchg std sbb xchg mov nop pop in hlt push sub xor ja (bad) mov jne (bad) cmpsl rcl into (bad) mov aad or inc sbb int3 loope add aam and or xor jo pop loope fs and add fdivrp in and mul std add daa in aam sti mov jg pop imul push stos add sbb xchg daa and xchg cmp fimul daa push push xchg push pop jae dec shll jle in cltd mov out outsb in inc mov xor pop dec dec loop or gs test ljmp (bad) mov (bad) scas jg and jle in jnp pop and push fidiv dec pop adc nop arpl sbb std mov sbb jbe sub rorl in repz push push pop mov dec mov test in addb xchg icebp add ret leave inc in jecxz push loop inc test aad pop add mov push mov repz out jecxz nop bswap xchg outsl ret loopne rolb sub ret call sub mov sub push mov jp push pop xor movl sbb movsb sub data16 (bad) or push orb movl addr16 imul (bad) adc jb add jmp mov mov xchg aam jmp cs adc jns inc mov insl inc mov lea iret fiaddl jmp movsl out arpl sub pusha and loopne inc jnp sahf cmpsl push dec shl push xchg movlps xchg xchg xchg into lods and xchg mov and stos pop jp ja jmp inc cmp inc rolb faddl cmp dec nop and pop dec pop fistpl cmp inc or push or or cld sbb pop or jle test imul sub sbb pop outsb fs push call mov xchg data16 adc push nop divl or xor loopne rolb aaa psubd mov sub xor or (bad) mov and bound ja xchg sarb mov dec iret fdivrp (bad) fs ja push push cld mov aas cmp out sti fldt test adc xor jg int3 adc pop cli jns dec inc xchg outsb in xchg repz cld xor lahf pop adc addr16 call xor out inc xor shl push mov sub dec mov (bad) push xor stos in pusha in jne jge cld fwait or sarb pop and and jbe je dec cmpsb arpl sub push and movsl outsl push mov pop sahf mov push pop jl icebp lea es test sbb sbb fwait pop rol push inc scas and mov sbb and mov popa mov movsb test cmp scas pop daa push fnstsw push xchg fs and leave (bad) jmp adc jno ljmp push jge xchg sbbb mov pusha jne adc adc enter sbb (bad) mov xor or xchg cmp add cmp add insl dec xlat fisttp ret mov cmp ja test pop jp and movsb adcb loope lea adc fs and dec jns pop push inc push xlat pop bound inc xor lret mov pop mov jns sbb insb inc mov (bad) sarl mov dec scas add cmp mov btr ja orb inc sub ficom imul jle ret pusha nop xor sub pop and push push stc push lds cmp add ret popf xchg clc out inc cmpsl ds and pop pop push std in sbb add insb mov push adcl pop pop std int3 int3 in xchg dec pop es faddp test sti lret sti fdivrs mov hlt push adc loopne out lahf mov adc stc sbb cmc cmpsl sub sub test push sahf pop lods jle iret arpl mov call fstl ds outsb pushf daa (bad) mov movsb lret stos out cmp xchg insb sub imul std popa cs in test adc mov mov pop cmp inc out inc daa add xor lret lret ds in cs mov add enterw inc or xor outsb inc sub dec test xor test cmpsl inc mov jg and fcomp push insl movsl stos mov into insl inc lds andl xor int xor test ss and mov (bad) cmp sub xchg roll xor aas push add inc push add inc shrl cli icebp bound or fcomi leave push xchg sti sarb xchg sub stc mov xlat xchg add js int pop das loope out mov fwait stos pop and rclb jbe testl stc and pusha cmp cmp data16 or loopne pop outsb movsl cmc sub out addr16 pop dec cld mov add in or nop es push mov cwtl fs movsb add or dec in mov int3 pop ja lahf and xchg (bad) (bad) test push inc test sti dec mov push jno push push xchg or popf std add mov mov add std pushf mov lret divl popf pop test fisubr push enter fs nop decb aaa lods cld mov clc adc aad add mov stc xchg cs and and cmpsl inc jl mov pop add mov pop push xchg ja dec jg cwtl in jae and dec sbb sbb std sbb mov cmc movsl int enter cmp sbb sub (bad) push (bad) (bad) jp nop push cld mov xchg fwait xor xchg lods nop ret scas mov cmp cwtl je pop sarl and pop insl notl add or test (bad) sub push movsl popf xchg and dec in and fildl pop push idivl jg cld sti out in mov sbb mov insl push xchg or shrb es rorb sbb enter imul mov sti push xchg es aaa mov or add inc add in mov mov test adc ss loop sbb inc cmp dec cltd adc and sbb push in hlt xchg jne mov ljmp aad outsl adcb pop pop inc jb and jecxz xchg test sbb or jns cmpsb icebp and movsl mov inc mov mov dec sbb cwtl sti xchg xor dec (bad) fstpl gs inc push jo xchg daa inc (bad) out and add jno push pop jge fcompl scas push test push pop and cmp push (bad) jno pop push hlt push add movsb push xor dec sbb dec int sahf and add es pop adcb inc cltd aas and xor pop cld sbb push pop sbb (bad) movsl sarb in xchg dec mov (bad) push add rcrl mov dec ficom xchg mov and sbb arpl and mov mov inc js xchg adc out jb and adc and jp xchg mov xor mov lds (bad) push sub jb or cmp pmulhuw loopne (bad) jmp arpl cmc pop in movsl mov inc movl cmc pop test inc xchg cmp mov mov std outsb push or xor popf xlat inc xor shr adc frstor jno jne inc jge push add mov cmp hlt or jg lods pop xchg lret jge mov lea jmp aam test xchg fcoml mov adc mov mov jno push pop inc dec xchg shrl or mov sbb daa iret sbb push out arpl sub ljmp pop das jno xchg add xor ds jno xchg add fsubs loopne fs mov ret xchg pop jbe cmp pusha sub add push insl xchg inc lahf imul jb push lea cs stc inc mov jno les mov jl pusha push cmp aaa js jmp rcrb repnz mov lret fsubrl dec and mov fneni(8087 mov or inc test inc add rcrb cs outsl add fnstcw add mov subl mov and std dec enter mov jecxz jb ret jb inc repnz mov les dec push xchg shl cmpsl aam lods push cmp xor cmp in lea push xchg pop xor xor sub shll and mov outsl mov jns xor mov lods mov push sbb iret out loop adc mov jg sbb inc dec adcl decb or insb lret xlat fiadd (bad) les fstl inc mov mov push xor jns push and inc mov jno loope ret insl mov pop lahf ja jns nop jge je fisubr inc xchg pusha (bad) imul in loope pop xchg test (bad) mov xor ret mov pusha pop pop popf cwtl adc cmp out adc dec (bad) je xchg jecxz cmp sub ret or cmp add adc or push push add mov adc repnz (bad) ja add imul cli scas popa cmpsl fwait (bad) sub mov add rcll mov data16 xchg outsb pop mov xor push in outsb or mov and sbb enter loopne jae outsl aaa out and jecxz xor aaa xchg mov and stc ss test std jge lea rolb cmp (bad) adc cmpsl imul orl into inc (bad) iret (bad) xchg mov jl test (bad) xchg cmpl sbb cld add ljmp dec adc mov dec pop sub imul sbb or add xchg daa int loop xchg push nop test push rcl mov int add addr16 in out or (bad) hlt jmp or mov aaa call aaa aam outsl incl cs sub into jl adc inc and hlt sub movsb xchg dec hlt lcall jecxz pop jg dec push les xchg sbb imul lds mov push ret fs arpl aad daa add push add xor arpl or adc jae (bad) int3 inc pop jne cmp push adc sar aam sub (bad) jne jno cmp mov inc cli and push (bad) in cwtl ja jmp pop test push cmpsl push sub push mov int add push adc inc sarb sbb add sub cmc pop sub insl add and pushf dec insl hlt jge pop mov push push or or fild hlt out rcrl movsl repz push mov inc repnz lahf decl fs mov sub and lods das mov adc inc pop in andb sub rep jae imul cli in xchg div hlt mov lock cmp push push cmc pushf adc mov addr16 add lea and adc push daa les (bad) and in leave pop (bad) jb testl test js lret enter mov pop mov push clc pop test int3 mov cmp mov cli in xlat les movsb pop jnp loope xchg add sub jnp and cmp inc sub scas mov fcoml (bad) dec in sub outsl movb push inc lods adc or test lods cmp add mov lods nop xorb push push in or rcrb mov fs pop ds sbb and fcompl insb in scas and xor dec mov into jno push sbb push icebp add push (bad) cmp or adc dec adc xchg add popa outsb cltd subb lret mov adc stos and sub dec mov cld sub pop lods and sbb (bad) popa push xchg pop bswap dec fucom imul repz icebp (bad) sahf jne jno fisubl and xchg jecxz push cmp mov nop add pop jl pop into cs ficom xchg std rcr push das fimul push xor inc mov test imul adc inc inc sub sub int add sub fs popa notb adc lock daa push dec jmp push pop inc pop adc ds ret or add xchg and add push jb int outsl pushf iret push cmp sub sub push mov std into push out and sbb inc leave adc (bad) icebp add fs aas mov or jbe pop fcoms out push fs push sub xchg jo mov gs andl repz mov lods mov lret enter jle rorb jne adcb cmp sbb cmp lahf pop add pop cmp popf jg mov mov jnp sub out (bad) (bad) inc mov dec into mov xorl and ds cmp sub in mov out jecxz push daa je bound insb adc mov or mov sahf (bad) outsl jne jo les (bad) fwait push push test xchg mov mov add push adc pop fistpll xchg push cmpsb lods xchg push leave insb popa cmp aaa je pop pop pushw jecxz xchg or cmp add jb clc inc pushf adcb push jmp pop cmp sti add and inc int jae xlat and sub mov push rclb std idivl xor or sbb inc sbb inc dec int3 dec and sbbl inc pop jmp and or test adc jae lcall inc jg push or or sub and fsubs inc loopne jns insb push in xchg sbb and xchg arpl push ds xchg mov loop fidivr sbb mov jo lahf mov scas mov push pop push lret roll rorl in decb and or fdivrl aaa lret jne outsb xchg jg rolb fs mov adc fadds cmp push and mov pop stc add mov mov and test lods sbb pop add sahf mov sahf adcl sub mov cmpsl sub sbb decb mov xchg xchg stc and pop push pop cmp aaa xor mov jno insl addr16 mov mov adc jne addr16 inc cmc pop leave push mov aam jb jo xchg or dec in mov or or test in outsl test mov fadds or or test cmpsl (bad) out das gs adc push inc loop cs jno mov cmp shrb sub stc cmp scas xchg ret push clts or dec inc lahf pusha (bad) aad jb fs jge wrmsr ret loope negl mov pop jae and int3 enter push xchg loopne (bad) sub inc push in sub xchg (bad) adc (bad) hlt test loopne movsl repnz push sub or mov fbld in or lret sbb icebp sbb jnp jae pop aad icebp fsubrs dec add clc sahf cmp lahf enter in xor sahf pushf cmp jmp pop sbb dec push jno scas ret lock test push cwtl cmp inc cltd mov push inc jle imul push dec cmp jnp lret xchg xor mov and xor jl ds test bound xor mov data16 jne xchg push aad dec inc call xchg push inc shrb adcl xchg jo rorb imul adc xchg push pop xchg lds dec mov dec xor pop out pop daa dec icebp dec sub sub mov lods (bad) popf and sub dec not adc jnp mov movsl mov cmp cld jge cmp js adc mov fwait xor sub pop hlt sbb fcom loopne dec dec stos pop jne lret jbe or cmp xchg fwait (bad) (bad) aaa xor cmc mul pop jnp sbb repnz cmp loopne xchg outsb js adc lock xchg (bad) call ljmp ret test cmp daa mov call and cmp inc (bad) and aad xor mov xchg mov mov dec or clc xchg adc jo sbb cltd je shrb iret mov or (bad) xchg fsts pop fnsave mov in push sub push dec in aad xor cmc add mov mov add sbbl jmp (bad) lods or xor cmpsb mov or mov movsl xchg mov mov movsb in sarb sub and cltd ds dec xor sub or repz sub add or push fnstsw jno (bad) dec jne mov shr push std lds push add adc mov clc push xor js cmp bound lods movsl fwait xor xor mov dec test loope push push xchg push add rorb (bad) inc fs hlt dec iret inc pop inc out lds popa inc pop pop jo shrb je lds js push mov popa mov xchg add mov cmpsb je imul sbb lods push push les xchg push push mov dec cs sub sub std mov mov push fwait bound aaa xchg push jbe (bad) pop xchg scas mov xor sbb mov sub mov jne and adc cmp inc das gs push enter sbb (bad) sbb sbb out dec mov jg mov (bad) push cmc mov add mov sbb out fwait fs cld jbe pop xchg mov xorl dec sbb shrl xchg xchg cmp movl subl and adc or aam add mov daa pop arpl inc sbb xor dec outsb pop cmc adc dec test inc fcomps xchg daa stos in mov das std add push or ds dec xchg xor mov or adc inc insl popf adc add out and fild sbb pusha jl sbbl insl or sub add add aad out xchg rolb (bad) lds mov mov xor cmpsl incb or pop add loop adc push mov fldl jg push insb or addl pop test pop icebp jg sub xchg jle fcos addr16 in xor dec leave mov dec aam mov dec xchg dec adc gs sahf and inc push push cmp dec (bad) pop loope cmpsl jge cmp xor aam dec and pop jmp adc xchg stos xchg adc push fmuls dec xlat adc sbb cli jp xchg and or cmp cmp ret or mov in aas lret pop ret (bad) xor jp push ret xor xor mov mov pushf mov mov imul in xor imul adc mov cmpsl popf and add inc jo pop int3 jns and mov in pop pop pop nop push mov xchg add aas in lock rorb pop fs sbb orl (bad) mov iret popf hlt sub push mov insb mov arpl or cmp or (bad) cmp mov fwait repnz rcrb int3 and loop add iret xor mov gs jno sbb stos out aas add add pusha popf aad fnstsw or fs inc roll lret fldl inc mov sbb mov popf mov mov or mov cmp mov push jl mov in rcll push lock add lods sti pop dec mov fdivrs in jno loope sbb sub and fdivp sbb or xor pop inc test aad sbb xor pop jb sahf sub aad push subl jmp test leave adc outsl leave (bad) lock jno das jb dec inc mov mov int dec out mov shrl out jp sub push daa dec cmp outsb adc cltd mov out cmp inc add cmp push das mov and sub cmpsb aas inc or into mov push (bad) in pop mov sahf pop sub pop push arpl pop lock mov push outsb lock xchg mov adc jae or mov dec xchg sbb repnz aam stos push cld sahf loopne movsb incb pop inc clc insl mov dec cwtl jge dec push mov mov jmp loopne mov lods xor in (bad) addr16 jo adc cmp int3 cmp xchg inc mov out sub add dec push and (bad) xor lea imul mov inc add inc leave inc add pop jb dec cmc or fs test jp xlat sub mov pushf adc sub jae jne into dec (bad) scas scas push scas clc add fmul cmp cmp push and es arpl arpl das xor jbe inc fs push mov cmp cli imul data16 pop out cwtl pop jns in xor xchg adc pop and in std or jb inc gs test adc push (bad) xor add cmp (bad) push sub pop pop out test aam sbb cmc cld cmc mov aam adcl pop mov push dec decb xor pusha ds gs sbb add push xchg and xchg jnp arpl sbb xor dec js jle (bad) cmp inc test jae sub icebp pop pop in pop pop lock sbb (bad) out jbe sbb and fcmovnbe push cltd insl inc jp int adc push lock inc or dec or (bad) xor xor dec jo scas pop aaa jl jecxz dec jg sbb ret pop cmp mov push jbe or in cmpsb sahf and mov mov sub das mov outsb sahf sti les adc or loop movsb mov push dec sbb nop push call in mov in or cmpsb pop xchg xor inc movl sub jns pusha xor dec add dec and (bad) fwait test loope nop cmp dec dec xchg in mov dec rcrl push (bad) jl repnz daa pop dec pushf dec out xor sub xchg or ss xchg in data16 xor icebp inc gs fs xchg pop dec cmpsb xor std mov mov das inc out jnp push arpl xor push inc out in jge in push push outsl stos in pop das scas push sbb jl add insl es icebp cmp fucomip pop push fwait sub jno fstps sub stos xchg std movaps ret mov add lds pushw subl sahf ret dec mov outsl dec repnz add xchg (bad) cmpsb mov (bad) into arpl adcb jge xchg mov jns out hlt negb inc pop add fcompl xchg out xchg jne or lock outsl sbb hlt cmp or dec add pop orl aam fs mov jbe es pop in fcomps mov cld les pop cmc mov xor mov out xor pop movsb test and and xchg jle adc sbb add icebp fiadd push mul call sar (bad) mov les push aaa es push test cmp (bad) jp in nop jle popf jno pop pop mov dec aad (bad) and ret jnp lea ret inc popa popa mov jp fwait daa in (bad) lcall hlt ror dec add sahf cli out sar xchg cmp cmp or shll sbb dec inc loope jmp mov mov add push mov push sarl icebp cmpsl popf jno push ds aam orl push mov icebp test insb mov pop data16 xchg xchg dec test (bad) mov in fisubl push movsb (bad) jno into xor mov sub add fsubl pusha cwtl and cmp xor pushf push mov and lds popf aaa stos cmp mov xchg outsl mov adc inc xchg dec pop jne lret out mov dec mov cmpsb clc mov icebp sub hlt mov repz insl push sub jno pusha nop data16 adc mov dec sbb mov xor imul xchg dec rcrb lds sahf or adc push push xor sub sbb daa (bad) js xchg sub loop adc (bad) adc js and lret aas dec mov pop cltd and scas repz mov jo xchg mov ljmp pop jno lcall sahf fiaddl pop lock popa push dec cwtl fistp arpl mov fwait mov add add lds jp sbb popf lcall xchg xchg aas inc sahf sub pusha test aas mul mov or test jo sbb jl mov lods and and mov mov cmpsb pop and aam xchg outsb sbb jnp lds or jo adc xchg adc test ret repnz js aam push add pop imul stc in cmp xchg inc mov mov mov xchg mov pop cwtl push mov out std or xchg mov push in fcompl dec mov adc xchg dec adc arpl cmp add or (bad) (bad) (bad) or fdivs dec inc xchg jl outsl out cmp pop cltd test mov (bad) dec gs and pop test (bad) mov cmp or imul cwtl push inc (bad) test or or inc sar sub or lret jbe repz fdivs push pop ja sbb test dec or inc outsb mov mov in jp cmp cmp gs jmp fstpt movsb xor in push sub push pop lahf int3 sbb in mov ds sub lods mov or mov push push sub sti inc push or push cmp push jb inc push mov lock insl stc sbb cmpsb lret scas cmpsb or adc pushf push sahf mov pop cmp mov (bad) pop pop jge push jne and mov icebp cli jns jnp lock and gs xchg xchg mov or movsb pop inc mov adc jmp das ret adc sbb push jle repz mov cmp cmp sub and add icebp sbb mov jno out ljmp xchg jmp jb in or push jns mov jg test daa out rcrb jo push mov sbb scas imul enter les aam cmpsl inc (bad) imul incb daa sbb mov cmc lods enter xchg cwtl repnz add jno std das int ds mov and xor push aaa imul and out pop or push jge cmp sub push call (bad) dec cmp xchg out add ljmp pop lods inc shrl dec pop ficompl subb dec (bad) push leave adc mov icebp bound adcl repnz mov aaa push xchg pusha sub jl inc jg mov cmp push sbb jns in xor in lret rorl add jae dec aas inc add in mov scas sub cmp ljmp xchg mov push inc gs mov inc std fidiv xor sub inc xchg pop xor mov pop sub std adc inc pop pop je add gs and xchg adc and push inc adc cli in hlt fsubr aaa sbb inc push pushf call mov fistl into sahf and xchg mov imul jp push shrb inc pusha repz cmpsb insl xchg inc in cmp out xchg mov push lods push xor and pop add imul mov test dec mov push sub aam sarb pop adc cmpsl push outsl adc mov pushf frstor push ljmp jne or and jg leave push add push mov es cmc cs int3 and inc jecxz push dec imul push repz add push or neg mov test cmp out and inc rcrl lea fisttpl mov add pop inc adc cli bound mov addr16 dec in scas xchg sbb fldl hlt mov and inc out (bad) cmp aas xchg addl aaa in stos mov sub sbb aad cmp push mov (bad) xor in xchg mov add hlt xchg decb push mov es and sbb cwtl mov push sti int scas sbb fwait push sub js out imul js cld sbb xchg sub addr16 pop and pushf push push mov lret out push mov and loope imul mov inc lret movsb adc xchg (bad) imul add pop jle mov addl or dec sbb mov jle and mov mov cli jnp rol cmp data16 xor inc pop shrl cltd insb push xchg (bad) iret xchg aam mov fmul out push lods pop mov and outsb jns xor mov (bad) aam rcll bound jb outsl arpl add jle cmp mov push mov add into lods mov popa xchg mov dec aam mov adc imul sbb jmp inc roll sub xor mov ror add popa mov call xchg sbb ds les add mov adc xor (bad) in lahf fildll (bad) xor mov hlt adc mov mov (bad) sbb repz inc inc mov dec fidiv lcall jmp (bad) icebp es fldl ljmp test mov sbb ret aaa xchg mov loop cmp sub scas cmp sti lahf adc sub pop xchg jb divl adc jae cmp and xchg or xchg es push les aad pop scas ds xor sub jno add adc cmc jbe das orb or xchg push jae gs pop and outsb push (bad) and jnp jno cmp and sub sbb in push sbb lahf push pusha es adc xor outsl (bad) cmp rcll es scas sarl pop sbbb or dec test add dec mov movsl push insb and xchg xchg insb ja push jo ja rcrl mov cmp pop inc cli cmpsl cld outsl mov xchg jno aad push inc in pop xchg mulb in inc popa adc call or jle adc aad (bad) and pop cmpsb cmpsb loopne repz jno adc dec stos lcall cs out sbb loop mov or adc or je pop cmp fisttp gs inc mov and repnz (bad) stc push je dec xor inc jnp mov sub xchg data16 cltd jge mov dec ret ds mov mov sub push mov icebp push inc mov add adc daa imull mov jl pop dec sbb loop mov hlt repnz aaa addb jne,pt mov test mov xchg lcall push arpl xchg add ds in fwait (bad) and (bad) jb jmp outsb cltd jo (bad) movsl movsb and push insb mov nop jmp jns (bad) pop arpl add push (bad) (bad) fisub insb movl inc pop out fcmovne orl dec outsl stos cmp data16 adc xlat (bad) iret mov lock push cli call lds sahf icebp out cmc test inc xchg add xchg and pushf sub aam lahf je pop data16 cmp cmpl xchg jae pop in in or mov pop fdivl aas mov sbbl insb nop sbb popa sub cmp sub jae stos xchg (bad) std repz call pop mov mov pop ret jl xchg jb gs js adc lret push jb test inc mov mov jmp adc mov (bad) jo ret push push add sti inc sub fimul call sti mov stos popf andb hlt xor jae int jae outsb and pusha aam mov movsb fistpl aam inc repz fdivs arpl and jge or push jb mov idiv adc dec mov std movsl (bad) nop cmp pop push inc dec xor lea stc jle and fwait aas daa cmpsl cld xchg (bad) sbb sbb xchg addr16 mov jecxz push jmp mov lahf outsb or jno scas or std xlat mov and test pop dec adc and sub daa int3 xchg loop adc out mov (bad) or in cwtl ljmp ja jecxz or popf push xchg cmp leave pop jbe std pusha sti xchg or bound daa stos xchg jo mov and xchg jecxz or jecxz xlat cli lahf cmpsb push xor cli (bad) xchg sub push xchg (bad) cmp xor or push add adcb pop es sbb cmc gs jno mov cmp imul arpl es and fwait pop jl and icebp (bad) lock jae gs and mov dec xor leave jo lahf mov ret mov sbbl cmp sub xchg aas jmp inc pop sub mov mov and enter mov mov mov sbb in imul mov das dec cmpl jno sub cs xor les sbb daa jl das sub xor xchg in adcl or fwait jle xor xlat cmpsl adc mov cld data16 or xchg loope loopne cwtl add jns dec mov pop into adc xchg push cmpsb xchg mov xor or icebp cmp loop mov (bad) dec dec push or mov mov in je mov mov inc andb dec and (bad) mov push pusha jno (bad) fidiv fs sti mov pushf pop mov or xchg sbb pop mov push or jno dec je arpl in lds xorl (bad) pop mov adc jmp push repnz and mov push insb xchg and add mov insb mov cmc (bad) icebp sbb push inc enter xchg out sahf movsl push mov nop (bad) push cmp mov xchg icebp aad adc mov pushl (bad) push mov pop jns sahf ret and lcall int3 arpl subl out mov cmpsb pop cmp lahf rcr rol and loop pop inc and and add jno (bad) lret call cmpsb incb (bad) and enter sbb cmpsb cmp xchg int3 or add jno adc mov pushl lea sti lods movsb jae data16 add test outsb jb cmp cmpsb fs xchg aaa add repnz insl push (bad) sbb test lods mov pop mov fnop sub int3 test (bad) js bound xor lds lods scas mov sub test push into (bad) ss and cmp jmp rcrb and mov jmp out xor lods xorl jp xchg data16 lahf jle mov cmp stos cld cld push push bound add lds cwtl mov xchg fstpl pop lds inc add push hlt inc pop cmpsl shll movl xchg push and fs push sbb dec insb and or pop ret fnstenv jmp mov ds hlt jp jmp cmpsb jge imul dec punpcklwd cmpsb fdivl in cmp xchg ss scas jns mov lret jg pushf icebp stos jb test inc cmp je xor dec outsb mov push addr16 dec shrl or cmpsb je clc dec pop fcmovb (bad) hlt sbb movsb je jle (bad) cld xor dec fnstenv mov aad adc and pop insb sbb push xchg jnp lock pop dec fnstenv scas xchg jno mov sti sbb stc mov jne cmovne mov add xchg xchg xor cmp popaw mov out add stos dec cmp adc fistpll (bad) cld mov stos add or mov or xchg mov inc xchg push addr16 fcoms mov or ljmp xor mov hlt fldl2e or pop add mov pop xchg scas daa jae push movsb cs push clc (bad) rorb outsb test in ljmp mov pop push gs inc or mov mov in mov hlt jmp jns sbb dec pop cwtl push aas or mov push lods (bad) jle scas movsl les js and inc adc xchg pop ror mov loope or sbb loope movsb sub mov add push into xchg (bad) iret mov idivl jo jle sbb cmpsl jmp push add xchg push insl int push jns outsb mov sbb sub mov imul addr16 xchg mov pop dec icebp je or fwait mov cs cmp xadd sahf leave popl xchg outsl jno pop movsl out adc repz or dec xor repnz or mov sbb xor sub lods je std push fadds mov fmull sub (bad) (bad) aas sbb cli xchg jnp cli sbb xchg mov in push jb inc dec xchg mov add or fs mov push mov fidivl and arpl in mov out jl adc mov jno dec cmp sbbb daa shrb cld push dec inc xchg sub xchg cmp cwtl out icebp or test jne fdivrl shrl inc movl xor sub xor out mov jo arpl int lock jecxz clc test mov fdivs aam lods out leave decl es inc inc sub aaa jl xor in pushw push sub into rorb add bound lcall pop xor cmp mov test ljmp sub or orl inc movsb mov sub mov inc in sbb fisub mov push mov ss or add ja (bad) ljmp ss inc add inc ds stos rcrl outsl loop lcall sbb dec stc shll add mov push int3 cmpsb xchg repnz inc mov push mov inc imull dec cmc pop icebp sbb cmp cmp (bad) xchg sub mov xchg repnz outsl iret sub adc push fidivrl repz xor lret push adc in push or ret (bad) mov shll pop inc lret (bad) jo lcall dec xchg fwait jnp (bad) out in pop sbb lds push push cli sub xchg push xor cmp cmp push jno iret adc data16 shl repnz pop fsubrl (bad) sub xchg cmpsl sbb outsb pop out in push push mov xor dec ljmp and add and cli (bad) test fild adc sbb xchg sti dec push leave and mov cs repz cmp ss shll nop in inc sub pop cmp in ss cld mov sbb inc push movsb test enter sti adc sbb mov or mov sub mov jo je je mov push jle (bad) (bad) jmp adc scas inc mov insl shr addl out shl cli jnp fwait inc aas test xchg leave and inc and loop adc or add (bad) and into push aas mov arpl cli xor les pop add out lahf popa std mov ret xor xor clc hlt mov cmc and or lds (bad) jae mov or lret or fwait add pop out add shrl fcoms dec pop ljmp push and test adc cmpsb dec add push push add je ljmp pop je add (bad) and int fs cmc jge lock pop jge pop jecxz mov out mov mov imul mov jne xor pop mov loopne and sbb xchg fistpll jne loop sbb xchg jo (bad) mulb or pop push xor das push sub daa dec xchg test lret push jmp cmpl and fiadd pusha add xor sbb add sub out mov lods lret rcrl pop pop or call ret add sar mov sub dec scas outsb dec cltd imul jmp arpl xchg loopne repz mov insl inc call jbe rolb pop dec inc (bad) in xchg outsl pop xor fsts mov (bad) jecxz aam push push into dec jge add repz jp xchg (bad) decb jecxz push mov xor iret hlt in fs es push mov cmp jmp mov add mov call sub sbb mov jl and sub jnp rol sbb add adc jle mov addr16 and icebp fidivrl pop xchg xchg or mov pushf jbe sub aam push (bad) cmp and add jecxz outsl inc xor mov aas mov and xor inc hlt mov push jmp cmp sti gs fdiv xchg fstpl adc lea js adc insb push jae cmp cmc mov or imul ffreep xchg fiaddl fild xchg xor enter and mov inc cmpl adc sbb lcall lock fidiv insb dec mov pop (bad) cmp in mov ss inc mov rcr and cs mov sbb dec ss outsl clc inc jmp xchg sti sub ret imul cmpsl aaa inc addr16 ds jns xchg push jnp mulb nop mov pop mov mov sbb push cs mov stos xchg je cld out pop dec pop mov jl hlt mov jge mov adc add ret push (bad) ljmp or cld push cmp fwait out je or jle xchg inc rcrb aaa pop and xchg inc sub int3 in out iret add sahf rorb pop divl sbb ss adc repz sbb das pop pop xchg and hlt cmc adc flds negl dec pop mov mov dec jne add cltd in cld jl test jo push imul cmpsb sti je shrl pop mov test verr or xor jnp inc jne sbb sahf mov xor mov or cmp inc dec mov iret les data16 and rolb mov xor int dec sahf daa mov insb xchg iret movsl push fldt mov jns aas lret mov clc stc (bad) cmpsl xor mov push push sahf fstl aam imulb mov in insb gs negl sbb xchg dec jno sbb outsl mov adc xorl lods (bad) lcall lds jge mov xor jnp pop jne stos sbb and push ss inc cli outsl sub divb or sar xchg (bad) test repz fcomps dec das in xchg insl aad push lea (bad) cmpsl ds add inc stos lock mov and ret xchg mov sahf movsl lahf or (bad) mov and cltd inc mov mov cs scas push movsb enter insb popf or and movsl stos ljmp repnz ds push scas dec pop inc and and jge push cli sub or and sbb push pop out cld pop pop movsl mov jnp shrl or pop ljmp and cmp ljmp dec jbe mov cmp aaa mov repnz sub nop and cmp inc mov stos in inc xchg sbb xchg push dec loope out sbb sbb (bad) call cltd jge xchg nop xor pop sub fsubrp daa movsb jno popa cmpsl mov out jge out pop cwtl push test (bad) xchg inc in xchg fild mov jns fcompl test cmpsl mov cld addr16 inc leave scas adc mov fistp sub scas xor fnsave mov in jno mov mov sub lcall cmp test in add sbb push jp repnz dec mov mov stos fisubl sub (bad) cmc inc sbb (bad) aad xchg push and scas pushf scas push stos repnz movntps mov lock and test sbb push int popa jl shr test loopne add or or jo mov and sub bound loope mov mov out enter repnz sub and add movsb and cmp (bad) aaa fild loopne cltd hlt inc mov mov lods lock ret out or xor or mov scas and sbb and or dec and cmp jbe lret push inc mov movsb lds xor sub adc icebp (bad) (bad) int3 and movsb das bound jcxz loop adcl outsl imul push or pop pop sbb push xchg inc out mov push fstp dec and mov jecxz das sbb mulb mov lret add sub push les sbb pop (bad) cld pop and mov xchg sub mov xchg call fnstsw nop fdiv decb mov xchg push decl jo xor mov int mov and adc mov out dec pop int int lret sbbb sbb aaa in and cmp lea jmp sahf aad out or cli mov sub aam mov add mov (bad) or rcl push orl and addr16 add add (bad) mov aam add xchg and push sub adc cld jl rcrl fwait insb out (bad) subl cmpsl stos subl xchg test sbb lods in loopne sahf scas cmpsl jg add xor cmp adc out pop xchg mov mov (bad) mov add push pop lret and dec jnp sbb push aad ret test loop sbb sub cli ficom push mov repz jle add adc pop cld add in scas loope iret lea and sbb mov xchg test arpl jp decl lods xor mov xchg fisubl adc pop sub fbstp pop adc xchg push push aas int pop ds mov sbbb jg and adc xchg enter push (bad) mov cld inc sti dec mov loop pop dec adc add pop (bad) sarl inc mov push mov hlt popf cmpb sbb nop mov cmp jne cli pop insl inc mov push xchg fildll push mov adc or outsb fstpl xchg bts jle aaa jnp sub stos xor loopne push adc or int3 add ja les ret test ret popf mov inc (bad) (bad) or or in mov nop and xchg xchg cli sub shl lods xchg push (bad) sbb mov andl adc inc aad (bad) xor (bad) idivb mov mov insb leave insb (bad) hlt sbb xor pop xor mov jmp sahf mov adc push mov inc stos popf pop ficomp sarb cmpsl movsl xchg and movsb insb or test sar add insb xchg out inc cmpsl and outsb mov add add aam mov mov mov adc jns fstl dec insb push ds daa movsb mov xchg xchg pop mov xor xchg test shrl lods push aaa aad cmp and ljmp add mov pop adc lcall pop mov addl imul push xor pusha sub add adc sub add mov jle jno in mov mov popa dec inc cld gs inc arpl jle push jmp jg decb lret xchg and repnz mov jecxz pushf js or sbb inc add add dec sub cmpb xor and jnp mov and lods ljmp in or outsl inc xor xor lods dec inc mov xchg push mov adc arpl lcallw dec xorb test mov cmp push jno ret and lds mov add stos mov loop outsb lock pusha sti or mov sti into fndisi(8087 call aad inc push dec jno in adc inc cmp test stc xchg sub adc push loop xchg daa adc leave ds adc and mov daa sub dec iret sub popl aaa ljmp or cmpsb pop xchg adc les pushf xor inc jge push in movsb dec push js faddl add pop mov inc pop loopne sub cli and pop inc push jl sub push sub pop out or test aas mov repz and push cmp jnp fwait push roll (bad) jbe mov sub (bad) mov aaa orb fwait enter mov dec adc sub jmp pop fdivl xchg in cmp mov pop pop or pop jno mov push (bad) cmp or mov jg (bad) xchg xor imul xor xchg mov mov movsb repnz jg sbb mov test or sub xchg pop xchg sbbl pop jle cmpsl jp imul lret add mov (bad) mov and fucom and ljmp pop test cmp int3 xlat fiaddl pop push xor push dec lods inc out and xor lahf cmp ss pop fdivl int cwtl outsb jge xchg cmp rcrb xor cmp sub adc data16 or xor ss push ret dec (bad) pop inc sub xor pusha popf hlt std cmp cmpsb mov pushf lods imul inc rorb pop popa fstp xchg test mov mov adc fnsave movsl or insl repnz pop mov cmpsb and inc cli pop add aad out fwait pop push inc adc sbb push sti add or (bad) movsb outsl fsubrl in xchg mov aaa xchg pop test pop push aam aas (bad) (bad) std imul or sbbb aad rcr mov cmp insl and je or jbe push fild jp mov lret cmp es (bad) jle scas adc mov cmp in movsb or lods das lds xor push lcall and pop dec cmp sub dec inc pop sub daa sub mov dec and mov daa jo or hlt mov mov andps cmp cmp (bad) cld push ljmp (bad) sub aas in out mov movb xor mov cmp mov push mov push inc pusha push stos mov jmp add lcall out and cmp mov adc pushf leave rcl std (bad) (bad) sub and mov (bad) out jbe push cmp test jg lods pop jb mov call pop pusha jno xchg and inc push enter in movsl mov adc push xor mov add stc pop cmpsl movsb aaa nop push cmp iret (bad) dec jb fsubrs sub in faddl jp cmp stos fstps push (bad) iret mov mov es decb pop push decb jae adc xor dec add adcl and mov mov roll push nop and push pop inc in cwtl push lret gs rorl inc xchg js push sbb jno adc ret push cld push fwait cmc mov out lahf jne fwait xchg add pop das movsb fidivrl xchg mov fild test xchg fadds fild sti push inc dec fdivrs stos xchg rclb std push jae test je xor dec mov jp loop cmove lret xchg fdivp (bad) cs mov and in jns in push pushf notl xchg outsl pop inc jno or sbb aas push mov pop cltd xor aas sub popf jle and pop lods test xor fistpl lret jne push mov xor fbld pop mov fisubrl jbe fsubs je push xlat cmp pop mov inc sbb stos add push nop out mov cwtl sub push cmc mov pop xchg xor insb jmp into and jnp (bad) pop test std jle repz push popf xchg inc (bad) inc sub pop sbb hlt sarl sbb ror xor sbb cmpsb dec icebp subb jl add add je push into divl fsubrs mov jae (bad) and pushf subl fwait push sbb add and inc clc (bad) (bad) jae jo out jno icebp xor es xor or push inc addr16 jno and jge cmc or and adc imul lahf push fcoml in or ds aaa and and xchg xor mov (bad) aaa mov xor into das gs mov dec outsl icebp jmp (bad) outsb jne jp jle loopne add add push jo push gs lds push fimull ljmp test test addr16 sbb cld (bad) stc gs test gs inc mov pop jns push les add inc xorl mov in cmp pop jo ficom cmp push ret cmp scas pop mov adc pusha mov and mov dec xchg scas dec mov sub sahf clc cltd or adc mov (bad) jle jle pop mov push aam fldenv xchg xor and insb xchg test cld mov adc jmp insl xor movsl je pusha sub jge adc aam (bad) (bad) and xchg sub mov fmul mov (bad) (bad) fsubs pop popf inc add adc xor out lds adc movsl mov fs mov xor roll frstor addr16 iret fadd hlt xchg xlat rolb sbb pop cmp mov xchg int out (bad) lock mov xchg mov repnz push or dec or jle add mov jl inc dec aam test (bad) (bad) mov jno vunpckhps in jno pop add (bad) scas test gs cmp jg sub push sti shrb lret out call pop or ja rcl loop pop cli sbbl (bad) rcl inc lods mov mov xchg (bad) sbb xchg mov mov (bad) or cmp mov dec dec dec decl mov or dec stc ret pop or jle inc xchg cltd cmp and out push or add push push loopne inc push push dec inc ds and nop testl in add mov mov adc push (bad) xchg mov jnp add jp clc inc adc pop aad addr16 lds gs cmp in iret mov in pop jmp and popw or in sub out rorl fldt xchg or pop fs and pop popf add jbe shrl mov hlt aam xchg arpl mov xchg lea mov cld xor mov sbb shrb divb pop adc loopne cmp test pop or movb or mov in pop adc mov dec sahf jmp pop and pop in inc and imul cmp daa gs in popf pop add inc decb stc stc mov add sbb add fidivrl mov lods jae cltd daa or je pop fcompl jle sub add sti stc pop or jmp cmp xchg cmovg pop add jne push das xchg cmpsl mov jge testl jg in adc pop xor lahf sub add call std stos gs jl jnp sub push les xor push ds test cmp sarb mov mov sbb lods out arpl lahf dec lods pop lds mov sub and enter and cltd hlt push push pop cmp rorb mull mov mov ss lea fwait sbb repz and aad aad sbb xchg mov pusha int sub mov movsb popf fyl2xp1 and ret cmp inc add push add cld leave movb lret rcl mov xchg inc jbe jge cltd adc or and lahf cmp add movsl in xor xor xchg xchg daa jae pushf mov or ja mov adcl ljmp and (bad) insb gs adc mov xchg sbb xlat sub sub sti outsb push xchg lods mov iret sub add (bad) cld bound jb add xor cli and popa rcrb and jg or xor and adc sti lcall jo mov adc mov add shlb dec outsb inc pop clc pop insl out jmp fdivl push or mov inc pop test pop ljmp decb adc (bad) push movsb ds je sbb data16 add mov sti sub enter mov (bad) ja in fidivl in addl popf and popw xchg sbb pushf jnp push and iret inc insb add sbb sub scas jl cltd dec test repz pop scas dec shrb scas mov rorl ljmp or adc xchg fcompl adcb add sbb scas jno cs adc xor and popa mov mov mov lods test es mov test (bad) jl sub add or push sub xchg cmp pop dec ret sub mov push fcomi and imul es dec in call into jge xor sbb adc mov enter data16 mov cmpsb cmp sbb nop cmp sbb mov popa xor int xchg mov cld adc (bad) mov adc fistl sub push mov jb shl sub cmp inc pop cltd xchg test inc mov add xchg popf xchg pop bound cmpsl add pop test in movsl loop in push inc mov add into out pop sub xor xchg sar xlat (bad) jne adc mov push dec shrb push inc inc mov aam stos adc inc int dec cmp adc daa dec pop sub push and fstps and pop jb rclb (bad) call xchg cwtl sbb sub mov sub dec sbb ss dec imul mov in cmp in mov out (bad) mov lods iret arpl or cmp rol adc (bad) fs repz sahf and das popa mov pop push (bad) jo add lock pop sahf in dec out out push push adc iret lahf and or mov testb loopne xchg repnz pop xchg lock (bad) pop ja das jne mov mov pop test xchg mov cmp and pop xchg loope stos push movsb add clc in repnz jb es scas pop xchg inc icebp addb sub xchg and adc (bad) sub lcall push push (bad) fidivr cmp ljmp sbb cmc (bad) mov add adc addl dec xchg fwait xchg xor push xchg (bad) xchg in test adc jle cmpl mov jmp xchg lcall lret inc cmc xchg repnz pushf mov add push sti pop inc out xchg add pop cmp in insl (bad) aad cmp scas addr16 dec das int xor scas xchg or lret mov sub out int popf inc mov xchg pop js xchg mov dec scas pop nop lcall and and mov push pop and dec mov (bad) lds (bad) or scas popa aam lret stos or dec (bad) jp add sahf cmc mov cli sub fs xchg jae movsl dec loop sub dec inc imul cs sbb xor dec (bad) lret and int3 (bad) mov (bad) repz cmp push inc movsb sub hlt clc xor test pop into xchg xor sub xchg aad test out stos sub cmp aas and mov mov popf daa mov hlt test mov and sub pop dec movsl sbb mov dec mov lea jmp ds (bad) and pushf jl jle adc mov pop cmp xor rcrl les or inc jb ss push xchg hlt jns xor push out cltd mov shlb dec icebp push ds ja add push mov rorb pop test sbb push xchg jne mov test cld rcrl aas mov xorl jae sbb sub mov mov add in pop call add jo cmp (bad) in push or cmp or aad inc (bad) push add fcmovbe xchg loopne push cmp or jl sub jl and insb mov aam pop jl nop pop pop xchg mov mov pop cld aas ret rorb mov xchg cmpsl out in scas in or ds (bad) inc cwtd adc pop lea cmp sti into (bad) imul and push and fs pop shrb stos imul sbb movsl pop pop add stos aaa outsl loop test xchg mov jecxz sub adc movsl iret sbb push sbb and aas mov cmpsl movsl or adc mov cmp arpl ret pusha add pop pop add gs rcrl mov xor sub test cmpsl pop push adc jg push and cmp mov lret add outsb sbb mov mov push lock ret out add sbb mov sub and cmc cli or (bad) outsl mov mov jecxz or lods add mov pusha and dec movsb je mov xchg mov adc dec xor loop gs lods mov mov jg dec dec push xchg pop mov sbb add out bound adc decb movsb dec subb mov or sar popf orb enter mov or mov es jg pushf or push jbe jecxz adc in rcll xchg ja pop mov les mov sub sub dec mov int push jmp sahf outsb xor or les inc xor iret rcr stos es mov aad sbb imul jae stos fs jecxz xchg mov sbb pop add es push bnd adcb mov in sub jnp pop push popf jns push loopne mov sub into push add mov mov xchg adc lret (bad) ret ret dec jle or cmpsl ret xor aam in outsl and data16 and mov xchg jb jg xor jp add sub decb scas sbb es xor in sahf repnz cmp inc mov ret fs xor sbb adc repz das add (bad) xor and mov outsl roll lcall imul orl cmp outsl lret das jle lock pop push push lret scas test sub jge and mov js out pop cmp repnz cmp jno imul xchg push movsl rclb add pop loop cmp mov xchg add jle pop xchg test xor jo sub cwtl lock xchg sbb test pop jae mov push fnstenv or mov scas cmp push into pop fidivl ret pop aas jne pusha pop fcoms mov pop hlt in je popa pushw jg mov sub xor mov or fild sub lea (bad) jae adc mov mov pop xchg roll aam dec sub imul fstps fisttpl cs jns lcall movsb sbb iret adc mov xor imul xchg xor shrb out call loopne pop dec pop push mov das fcoms aas push fcompl outsb push addr16 push shlb sbb jecxz adc adc mov (bad) ffreep push mov mov rorb xor data16 adc lcall jae roll insb cmp dec mov push cmc cmp sahf xchg les mov sub arpl sti in aad xchg cltd adc push mov dec ljmp cmc or push outsl mov dec aad add inc in and shr jp (bad) adc adc int add fmulp mov adc push jge int inc push movsl test adc mov lret add dec lret fsubl adcl inc (bad) push cmpsl lock mov lock negl and sbb push xchg and lret xchg shl orb xchg jns shrb push mov cmpsl nop out push imul mov jo popf insb lahf mov lods mov mov gs cmp or xchg mov fwait out sbb loopne cmp clc dec int3 sbb cmp xlat xor sub or xor xchg sarb lods sbbb mov mov push add int rcrb and clc aas inc and jne je inc clc add mov xor repnz cmovno xchg scas push outsb jb pop push sbb add rorl push fcoml in (bad) aad mov push xor sbb xor into ss inc std or xor mov into loope jo xor xchg sub sbb rcll cld jne popf out sbb movsb lret inc or xchg lea stos sub lods decb cmp data16 sbb lds xor pop mov mov inc fwait add sub lds int and in cld mov pop and sub add ret int xchg aad jecxz xchg pusha xorl mov pop pop lahf jb push add lea jb add and in push inc xchg fisttpll pop mov pop ja xor movsb sub outsl imull sub mov rcrl fdivl adc (bad) loop push scas mov push and pusha scas xor cmp inc cs sbb inc jg fcompl inc xchg (bad) or lods sub daa cmpb int inc rorl addr16 mov outsb jb pop pushf and cmpsl mov jle pusha ret push pop mov stc inc arpl rclb sub lahf in xchg cltd mov stc cld cs push or inc dec testl push pop pop sbb or and xchg push sete fs adc inc vcvttps2dq xchg push int pop pushf dec lahf inc pop inc push pop or jnp mov iret mov jno push enter pop jnp invd mov push iret data16 aaa lcall in jbe jmp ret imul mov sahf sub (bad) lods jae sti xchg jo ljmp push jle daa push sbb rolb jge xor dec xor inc jl or pop mov sahf dec pop sti mov jae fs test xchg cmp scas mov shr pop mov cmp mov nop cmp push xor adc push xchg mov mov loop,pt lcall xchg popa adc adc and add test push fistl repz (bad) mov dec xor in lods sub push and adc adc cld xchg dec cmp dec push flds fisubrl dec in push aad lods lds (bad) js stos and enter sbb jge repz fisub push (bad) lds add and push test gs push mov test and jmp (bad) mov or stos xor xchg mov (bad) lock mov sub popf sub jecxz and xchg enter movw push pop daa (bad) adc ret aaa adc repnz sbb mov scas cld jl je sub inc outsl das add in pop hlt add std cmpsb and or jnp add push stc je pushf int (bad) (bad) insl outsb daa mov inc and mov jnp xor mov xor mov arpl cmpsl test jns lock add (bad) fsubrl push sub xor outsl or xchg fwait jne push inc pop mov pop cmp push sub push cmp mov push outsb cwtl add pop nop popl mov mov out cmp xchg xor or popf sub adc sahf mov clc int xor dec pushf jbe mov aas cmpsl subb scas lods and mov inc dec add arpl fstps fnsave pop sbb add lahf and loope out sahf into js xchg pop scas out fimul and cltd cmp daa jecxz ret arpl fwait sbb inc sahf mov lods idiv mov cmpsl xchg ss cmpsb in sbb lods push cmp std (bad) sub or scas xor xchg cltd pop outsl jle xor and cmp inc pushf sbb aad call ds add lods cld lock add mov xor jp hlt add jnp jne out fs aam pop or adc rcl stos push test lds sbb popa adc pop sub xchg pop enter adc xor int3 iret mov cmp adc xchg je (bad) jg jne xchg xchg push insl lods add xchg (bad) cmp pop adcb sub (bad) or mov inc repnz addr16 push stos je (bad) xchg negb fwait loopne and lcall push nop fwait sbb gs pop testl inc repnz jns push adc dec inc cs xchg sbb incb adc loope lcall bound sbb test dec xchg lret cmpsl fs popa sbb dec mov adc popa mov adc rep add or sub insl aad and hlt mov jg scas ret test add lds mov jmp inc data16 inc mov pop lret push icebp shlb in push inc and fwait pop imul ds ja xlat xor xor inc mov add sbb mov mov js xchg xchg in cmp mov xor iret test adc or or adc (bad) in lea addl outsb add into or test jne mov or xchg jae push scas jns dec fisttpl shrb push xchg adc and xchg xlat xchg js cmp repnz lcall mov test aam mov or push insb in fwait arpl push fimull stc sbb jmp jne push jno mov int imul in rcll mov cwtl cmp mov push popa adc lds add pusha inc in or cmp xchg sbb test inc daa lea jge test pop dec (bad) stc add sbb xor popf (bad) (bad) jno int3 adc xor gs xor sbb or sbb mov data16 popl gs fnstsw cs addr16 add pop (bad) push fldt insl mov jle lds xlat movsb aad add cs bound mov cmpsb addr16 inc sbb lods add sbb mov adc cmc je fistl sti clc mov or ss daa cmp jnp mov cmp pop pop out jge adc mov lods and cmpb pop mov xor stos fs out and sbb or imul mov push test jle jecxz int3 pusha mov cmpsb inc xor icebp mov icebp xor sub dec stc popf in xchg (bad) jb mov add push adc or sti pop pop push mov (bad) fnsave sbb xor aas cmpsb test push dec arpl add cltd shrl mov arpl pop or dec mov mov (bad) in mov or sar rcrl mov and repz adc mov bound sbb jge xchg inc subl imul push and cli inc arpl (bad) out mov jecxz push cld lret rolb jg call xor pop aas pop mov loop fcmovnbe jecxz mov add and or and in pop cmp mov mov lods out cwtl mov adc or inc cmpsb gs lods fstps dec ds jns das fwait xchg (bad) mov push es adc rol mov test lea sub pop orb fdiv lret jnp pop fs sbb mov push xor jae or or and adcl ficomp or jl call in iret xchg ficoml mov sbb or int3 loope pushf test add jg or jg xor inc out push jnp shrb fistp fwait test aad out cmc popf fwait (bad) jge dec mov ret push (bad) mov stc adc sbb out mov add xor adc ljmp pop and xorl loop insb in jl jb dec fs inc and xor imul sbb addl cmp push pop fstl cmpl movsl es jl mov test xchg xor jle test adc xor lea stos and out (bad) and sub loopne (bad) into sub xor sbb cmp inc dec lods cs and cmp test repz and imul test shll in pop cmpl movntq shl jne mov and rorb ljmp dec clc sbb cmpsb fwait call addps sub repz xor mov push and (bad) lods and pushf leave lods jmp nop adcb pop les cld fmul mov and call cmp sarl in push out clc pop cmp mov mov (bad) mov jecxz,pt mov sti xlat xor sahf push imulb adc xchg iret enter aas push cmp push cmpsl and sbb sub mov test mov and sbb sbb mov pop ret pop adc sub pop dec inc xchg sub ja,pt repnz xchg mov dec mov jo mov lods dec pop stos cmp xor in repz iret fild repz and xorb push xchg ret ss insl out add push pop cld or sbb ds sbb cld push inc pusha test aas clc cmp cmpsl add fisttp bound (bad) popa or or xchg inc xchg fildl fdivs sub repz cmp push inc jmp pop cs es fdivrl adc cld jne push sbb es xor call lea xchg push sub sub int3 push fnsave mov sbb (bad) mov mov pop and inc add mov sahf test add call add scas mov add sub sub sbb cmpsl sahf je lahf test mov sub dec mov and and mov pop mov fs loopne inc aad test cli xchg in dec adcb xchg leave add mov xor xor std cmp mov mov in ljmp fs mov and mov js daa add xor fscale push popf fisubl push ret fistpl xchg xchg inc das in adc in and mov sbb pop into (bad) push lods into jno jecxz xchg (bad) sbb push mov and xchg sub or addr16 mov dec xchg sub hlt dec sbb movsb dec dec mov scas out movsb mov sbb repz adc cmp rorl lret and cmpsl mov (bad) jno repz jecxz jg es int imul mov jnp mov jle stos (bad) lock sub aas mov sahf (bad) jg pop mov in push in sahf xor aaa pop push movsb dec addl in cs fcmovb insb nop xchg stos pop and adc mov es xchg negb inc xor jns clc adc aaa fmuls push iret push pop cmp mov cmp xchg notb call xchg loop xor cmpsl inc jbe nop inc sbb in dec pop popf jmp sub or xchg hlt sub int3 enter ffree sbbl pop fistpl jl test aam mov pop adc mov aas add add mov fwait jae mov or repnz into outsl popf insl pop add in stos fsubr movsl addb cmp mov xchg ds bound les or xchg inc icebp aaa push fstpt sahf jne mov jl add pop sub jg push cmp out in mov xlat lret cmpsb dec or les loope daa (bad) test sahf and in cmp lahf cmp xor push or fwait mov or push lahf and mov int3 out arpl xchg xlat mov mov or add sub pop jns,pn cltd sbb pop lcall dec jbe int insb stc das adc gs adc std or jp sahf adc and push pop jnp insl or sbb jb imul jae insb pop inc lds xor into pop xor ja lea lret nop out mov test and lret pop cmp dec jle and push sbb call (bad) test xorl movsl and lds fld mov lahf cwtl push inc mov test aaa mov insb pushf xor aas lcall mov sbb add subl nop mov lock pop push and xchg xchg (bad) fstpt repz xor outsb rcll jp out cmp cmp sbb push mov cmp mov out mov cmp dec cs js cltd sahf mov push jmp adc pushf (bad) imul cmc sbb and ret sahf (bad) repnz (bad) (bad) test and push jl rcll jns rolb adc mov nop xchg dec mov incb dec inc fwait mov in cmp push or cmp scas inc cld mov pop sbb mov outsb jae ja adc add sbb or mov add lock inc xor mov insl and pop xor lods or iret lods xor in lret cmp jne lock daa in adc sahf add push xchg push ret stos movsb jecxz or movsl orl cmp add cmp push mov and lods push jno (bad) push push inc push or (bad) imul pop das push add add cmc inc adc cli pop and and jo loopne or jbe into (bad) pop lret xchg ret outsb mov add push inc sahf mov test movsb das das xchg adc sbb rcrl ret push adc push xchg (bad) sub test test mov pop add bound aaa insl sti sub and popf mov sub mov jae sbbl push jl xor add nop and ret in jns push stos and jns iret outsl xor cmp stc int3 cmp int in sbb inc jg cwtl push mov in and rolb jmp dec sub (bad) ja cmp mov enter (bad) mov fdivr lods repz scas xor cmp mov xchg imul pusha inc mov sbb mov (bad) fs mov loop cwtl outsb gs aas sahf lret lahf cmpl es push mov jp xor (bad) in mov fcos test repz test adc (bad) loope ret xchg adc add ror adc je cmc and fs sbb add lods test push jno jne mov jno in xlat enter cltd mov adc xchg xchg lahf dec cli push add cmpb cmp popf cmc add cmpsl movsb fnop add ret fistl mov (bad) cld lock loop add movsl mov out adc sub daa xchg and cmpsl pop pop andl out clc test fdivl js test dec lods and movsb shr ret loopne or into xor xor sbb insl out dec clc arpl mov jbe inc sub xchg jo (bad) push add mov xor mov pushf or mov repnz imul xchg dec inc mov sub adc dec and and ret cld and popa xor mov sub mov scas test inc inc out (bad) arpl dec aas xchg sahf mov add sub cmpsl mov xor pusha inc fstps inc (bad) pop mov aas in and xchg cltd adc push (bad) (bad) fwait cmp xor pop iret xor jne imul pop mov push mov sub int3 insl lcall cmp ret lea in ja bound sbb sub sbb cmp movsb (bad) dec or add sbb mov push adc mov rcll scas pushf into mov je pop mov lret push fdivrp js cld clc test mov insb cmp std and and nop cwtl lock jns jb rolb movsl cmp addl xor adc test pop les lret xor mov (bad) pop add inc aaa imul leave setne sbb pop mov xor cmp pop sub jl xchg int xchg pop add adc push and adc test lds inc inc es lods jb aaa sti loope das bound cmpsb pop and adc clc std xor mov outsl imul sub shrb cmpsb dec inc dec push fsubl test jnp cs ret push das push mov and ds outsl psubd add cmp mov jge lret lcall sub xchg dec push rcr out mov xor pushf pop push popa or mov int data16 pop je aas mov fs dec mov xchg and es jge lea insl and xchg ret sarb mov xor push daa cmp mov jle mov andl push xchg sbb scas movsb nop cmp mov mov mov pusha mov and mov jnp sub fstpt mov bound mov rol push in dec jno and xor adc in sti cmp les or jnp mov (bad) dec popa push lahf sub add xlat mov dec adc add fdivrl xchg sbb mov mov out mov mov mov fstpt inc pushf pop pusha xchg in out arpl mov nop adc xor mov mov add mov (bad) int stos pop sub arpl lods and cmc push cmp pop cmp cmpsb mov es mov lahf cmp cmp arpl push shr daa sbb add outsb retw lods lds push loopne cs fs adc mov mov mov (bad) js les or pushf inc xchg hlt dec repnz leave (bad) (bad) in add dec inc rcrl lret sahf fs gs imul sub sti inc and push dec out sub push pcmpgtw adc pop out (bad) ja inc repnz sbb stos xchg cwtl gs fcoms jne stos jle xor mov ficoml push pop fisubr clc sbb xchg outsl mov add pusha cmpb (bad) call cmp sbb aaa fs addr16 and jle jns ret add sbb ret pop ret std add (bad) pop cmp imul jl in lret lods and jbe mov dec lds rorb cs cltd mov sub or sbb sbb and lret jmp mov push xchg in sub pop mov and mov rcll mov mov loopne add or lahf loopne adc cmp inc int3 push insb ror sbb inc das in xor cmp push in jnp loopne inc add (bad) (bad) jnp sub dec mov lret out or or std sar arpl jbe push mov adc xchg jae sub je dec sbb negl adc cmp es jp xchg sbb jbe inc popa daa and movb arpl loop sub inc mov mov out imul cwtl insl jns icebp rorl jl lods mov bound cmc xlat (bad) inc in jae sbb inc ds pop jbe mov fs test dec dec mov int3 dec (bad) xchg mov and push xor (bad) rep or outsl push lret cmpsl xor daa ljmp push insl std push icebp loopne dec test cmpsb insb js xor xchg lods inc xchg nop sub in fisttpl xor cmp lods add sti inc test cmp inc xor lods xchg adc push test addr16 pop cmpsb jp or stc push adc outsl cs in mov je cmc fwait push dec jp mov sub cld push push sub cltd pop notb rorl cmp add mov mov mov jo dec adc in lds scas inc sahf ret fwait push mov jnp push sbb push les in pop (bad) pushf stos mov mov int fildl out (bad) leave sbb nop icebp sahf out dec pop mov insl fsubl je test mov mov rolb in aas aad inc pop test jl xchg pusha sbb jle cmp fs mov test xchg lods inc jg xchg ret sbb in sbb jb mov sahf stos movsl xchg push push in dec jge sbb test in test xchg mov popf jne data16 cmpsl push cmpsl add push rcr push push loope or pushf xchg loope sbb adc and xor push daa in aas insl stc data16 (bad) pop popf aad add popf sbbb shlb add and inc in xchg cmp insb (bad) xor jno xor addr16 mov mov add sahf sahf sub and mov cmpsb push pop lds arpl xchg cmp fnstenv lods movsl test push pusha out dec add mov fdivrs fwait push or mov incl cmp xor cs hlt xor cmp mov cmp add pop scas add popf cmc mov dec push data16 ss pushl add nop aad nop push push lea fwait mov dec arpl cmp xchg sbb or adc and xchg popl adc (bad) dec mov pop ret (bad) jne fwait sbb fbstp pop push (bad) xor cmp pop and mov dec ret sbb sbb into xchg pop lods push jg and adc mov dec mov repz hlt out sbb cli push outsl and ja jge cmp gs insb and add adc cmp jg dec decb flds pop nop fsub cmp hlt movsl or mov mov scas jg pop xchg push or sbb mov addr16 outsb cs cmp test inc pop aaa push aam stos pushf ds imul sub jns inc xchg cmp mov clc lahf ds in adc (bad) bound dec cs mov pop xor dec int lods daa or xchg in push inc xor imul pushf cld aam mov xchg dec lret sbb dec mov (bad) in data16 outsl mov cmp xchg jle mov mov sub repnz jbe jecxz xor lods mov in (bad) push mov ss imul imul and fsts lods daa xchg ret fldcw in mov pop mov mov xor sbb xchg icebp stos (bad) cmp fsubs (bad) fwait inc aaa or push xchg out test subl ds cmpsb dec pop (bad) and push and sub pop pushf mov xorl into test xchg inc mov decl mov pop jle jg imul fmuls jp mov dec fistpl fcomi sbb and dec lret sbb lock push jg bound jle shlb pop cmpxchg and pop loope inc add frstor push push pop mov lea int jmp push xchg mov mov pop mov cltd jno dec andb sbb or xchg xor ret ret fimull pop push pop das and push fbstp ss mov fstpl jnp dec sbb nop imul mov jo cmp push adc dec insl add pop jle je lret cs mov addps jmp sbb sub mov mov movsl or and imul loop pop pop push adc cmc push sbb jl in or fwait nop xchg cmp fildl fistpll and loopne (bad) xchg int3 mov push sbb ss xor xor lcall pop fidiv mov pop cs dec sub and call cld mov inc ret out pop jo cmpl inc push dec pop sub push adc sbb jnp mov inc scas lods shrb sub sub in add adc inc or push cld xchg dec add lds add lea out loopne,pt pop leave rolb inc stos (bad) xchg sbb and test xor imul and mov (bad) mov ljmp jns add and scas push inc cmp or mov jmp mov mov pop aas int push cmp test adcl push xchg pop mov adc testb jg mov lods imul adc jne push shlb push mov xchg pusha cltd sbb jmp mov (bad) js xchg arpl dec fsubs fmull roll idivb and loop lcall ljmp fwait dec inc rcll xchg and daa cmovb rclb ds xchg into shrb lods pop xchg xchg and push movsb popf lock movb adc mov lahf repnz cmp pop sbb dec inc lods ja mull cmp xchg jge sahf pop add idivl push faddl insl push lock mov es movsb or sti loope mov mov pushf lret pop jno mov xor (bad) xlat jnp xchg sti inc and cmp inc mov push sub adc push mov cmp jno xchg sbb nop lods jns inc out sbb or in xchg (bad) mov outsl imul push divb lret daa and and sub insl das jle insl adc icebp stos loopne outsl push fcoms sbb mov mov push mov (bad) in push sbb ds add stos mov arpl xor leave inc sub (bad) jg dec and and stos ds in iret (bad) fistpl and xchg js adc out stos pop shr sub mov (bad) xorl test inc js insl mov and cmp in cwtd dec or pop push mov mull lcall repz and push fldl js popf mov or sbb fs pushf adcb sub pop mov push lret xlat lret cld adc lahf mov dec sti push mov daa push cmp cs mulb aas mov mov out dec add (bad) pop bound jnp mov aas mov aas add xor xchg in xchg mov aaa rcrl and xor fs cs repnz popf subl les jg jo insb cmp dec adc das jp iret and and gs mov and pushf movsl mov cmp inc (bad) cmpsl or pop push push out gs pop jp or in je daa jg inc das sub cwtl lret enter pop add pop scas and sahf mov popa and daa (bad) pop sbb add cmp frstor lret push inc cld push pop jnp daa scas sbb mov lahf jno out fwait mov std mov ret movsl nop cmp cwtl shrl add fnstenv lret movsl and cmp pop jecxz adc fcmove or ja add lahf dec into pushf xor adc xchg xchg push shlb sbb test push lret les mov xchg inc stos in mov mov adc (bad) sub lcall pop adc (bad) push dec pop (bad) ret shrl fs push pop test lds es mov sbbb push data16 daa ljmp pop jns dec mov push out mov dec jbe push push or stos sbb es (bad) hlt call push xchg aaa fildl hlt mov add and pop mov push pushf fmulp faddl pop inc loope or add add rcrl pop and stos mov jecxz push sub inc inc movb adc (bad) jbe add jmp push pop sbb mov add (bad) ljmp mov jno aas (bad) fnclex pop cs and aas mov inc add xchg mov inc sbb add pop aas and add js popa xchg sbb mov xchg movsl test fisubr sub mov aam ja lret out fdivp aaa mov sbb or mov or jle dec xor xchg or mov sub xchg cmp nop mov std std jno test sahf push incl (bad) je fxtract sbb jecxz sbb jb xor sub jecxz cmp incb cld xchg cmp sub ds xchg test aam arpl js push movsb jne cltd jmp cs outsb mov cmp inc dec jecxz pop hlt cs aaa enter pusha fcmovnb pop and out lcall jg test imul add add mov into cmp sbb fcmovbe enter daa in mov ret mov es icebp jbe pushf and jmp pop rol js mov int lret stc out or fiaddl lret clc int3 pop fs das jb fcomp subl pop push ljmp sbb cmp sbb mov dec or cltd scas fild and push cmp test fs outsb popf insb xlat add xchg inc bound or jnp mov xchg sbb inc negb mov lods xchg iret sbb mov mov int3 dec lret add out jle mov je mov (bad) (bad) bnd in lret or in push aaa fistpl mov and mov lods jmp subb mov test cmp adc mov mov cmpsb repnz cmp stos ret pusha and andl sahf jae lods dec data16 sbb jge jl pop imul adc sub fldl jle fstl jecxz cwtl int3 outsl xor jb pusha xchg dec adc aas jl fs lods add mov lods mov jae or in cmp movsb gs push daa (bad) nop push sub or fmul sub pop jl gs sbb mov add pop lret push fistl test push add std das inc pop cltd mov sub sbb cmp scas cltd push pop add std jae pusha cmp pop xchg jns out cwtl or xor sub sar in xchg cltd and pop popa dec cmpsl cmp je sub xchg and sbb in sub (bad) hlt out adc cmp into popf add mov ja fs add dec xor xchg mov cmp sbb movsl lahf add rcrl cltd push sub xchg sahf dec test push addb test adc daa lea ja xchg outsb and pop jge push movsl mov or sbb cmpsb sbb jl xor cmp push sahf les fdivs cmp sbb or inc repnz scas in pop or xchg or inc pop adc inc xchg lcall cmp into mov dec push xor scas xchg adc and adc lea mov std pusha aaa icebp mov sti movsl pop lcall cmc sub test jb and cmp mov cltd mov fiaddl add cmpb cmc fs adc gs inc mov insb movl cwtl mov mov xchg stc fimul popa add mov and fsts test sub negl or mov sub jno push sub test test sub push cld sub inc add clc inc and ja sbb or mov push sarb in stos sbb mov xchg stc add out or and add xchg xchg xlat mov jmp cmp adc xorb or push sub popa xchg pop das add pop (bad) mov xor mov lock rclb cmp xor mov cmpsb pop sbb inc ficom test cwtl xchg es fucomp aam mov push mov or (bad) adc cmpsl mov mov xlat int out mov dec in dec (bad) xchg (bad) jno cmp sub pop gs scas arpl pop and jne xor push mov out inc xor pusha adc lds (bad) pop pop es cmp jno inc cmpsb mov and or adc sahf mov pop dec adc and fwait jnp das ja dec mov adc push mov arpl inc dec jnp inc ja pusha push (bad) dec sbb xchg mov movsl or cmp orl xchg das popf jbe test push and xchg (bad) sbb sub sbbl jo pop dec dec mov repz mov leave fsubs cli jae ds inc mov (bad) in test sub sbb fiaddl push dec or jb jns arpl mov int aad or add cmp xor or push mov arpl dec les andl push xchg jmp inc jb fisubl jno test pop mov imull push push pop sbb in stos cmp (bad) popa dec mov jns and and pop lret or outsl mov les rcr jnp pop insl xchg repz pop sti sbb neg (bad) aas in hlt arpl mov je add adc cmc outsl jmp sahf addps popa (bad) cmp jo inc sub xor pop insb sbb pop aas dec jmp mov cmp mov aas inc xorl pop mov dec test fadds mov out pop imul xchg jnp daa cmpsl dec gs adc inc jo add stc mov sbb mov cwtl jns mov in cs xor push cld adc push or dec sub test andl call mov xchg pop aas adcl stos dec and push sbb push and fs pop sar mov push cmp aas es sub dec jo sbb xchg sarb cmpsl out sbb test xlat scas xor (bad) out dec daa and inc push sub inc and mov and push inc adc and ljmp out mov push (bad) mov sbb dec rcrl (bad) cs or push je add outsl out jae cs in cs xor insb cmp inc lahf cmp lret rcrl imul and cwtl (bad) or cmp jg lcall cmc mov fs xchg outsl mov and (bad) roll cmp ds sbb ds push insl cltd push jmp xor leave aad and test mov test imul insl enter mov movhps std inc aad or inc (bad) push test mov out into jne adc imul repnz cs sub outsb cmp flds add adc imul sbb or (bad) mov je push sbb lea sub cwtl dec fwait popf xchg pop or push jae cmpsl jbe jmp sbb mov mov (bad) and xchg push add mov xor gs add aas and lods sbb adc pop lds int3 mov mov inc mov jmp add push nop sub and ficoml fidivr dec call mov mov pop adc inc push ja inc push imul mov movsl mov fsubr test fsubs es inc inc sarb js lret dec test and cmpl pop aaa lock popa popf xchg push clc iret mov (bad) mov push jno sbb sbb sub pop jge xor std add addr16 fisubl es out dec adc dec jae inc sub and ds cmpb inc xchg fsubrs lahf mov stc faddl cmp add int3 fcmovb jae out loop es in pop sbb adc cmp int scas mov (bad) das and xor mov mov pop pop fmul int3 outsb out movsb sub push adc push push shrd lcall dec movsl fwait jp jb ret js and divl xor xor jb mov rcl mov mov (bad) outsl add xor test add std add mov hlt mov mov js imul rcrb push sub and inc iret lds jmp bswap sub mov dec inc dec add ja push adc xchg push mov sti mov hlt cmp inc loope js les adc into data16 mov mov jno fild push loopne fiaddl gs dec jmp adc or sbb jmp fmul sub pop fcoms add add inc inc and xor sub push add inc cld jo push test data16 pop mov inc mov xchg sub ss das inc mov mov test xor movsb mov cmp mov out dec cmp mov push jnp aad add sub push js mov xchg mov jle popf cmp lock in sbb inc mov mov add and call lods test cltd pusha push xchg inc pop rcll subps jae (bad) das lds pop adc and sub dec xor or fwait lock jle imull insl call ss popa loope xchg ljmp mov outsb pushf in xchg push fld aas ss jne cmpsl (bad) nop or loop popf push mov fs mov scas sub xchg lahf loope inc loop daa andb pusha or adc push ret sbb mov sbb cmp xchg xchg repz adc (bad) outsb pop pop pop push add popf xchg pop out fisub adc ds mov popa loop mov pop pop outsl pop jb (bad) and pusha fcompl popf jns pop inc faddl mov jge hlt ret pop push pop test enter adc aas mov enter mov loope mov sbb cmc mov add int mov and mov inc outsl mov sub xchg imul movsl xchg jge inc sarl or mov push sbbl insl push mov add pop bound enter add jno jp dec mov out aam cmp push cmpsl cmp scas mov call fnstcw lds pusha fisubl or clc sbb arpl mov cmpsb mov les jnp dec leave adc jo lods inc pop iret pop and mov lods rcll mov sar mov lods (bad) pop xor (bad) loop cs and adc dec outsl setne xor rcll mov push or or cmp js inc aas and shlb jge fdivrs jbe mov cmp movl mov add xlat jne mov lret sbb sub pop test adc push inc mov add inc sbb (bad) imull popf jl inc and mov adc popf mov xchg xchg xor add sub or xor adc rclb sar ds fsubs xorl inc sti in dec cmp cmpsl into sbb or dec repnz mov movsl inc inc insl imul jno mov mov adc aam cld mov lret imul push shrb movl andl fsubrl cmp mov pop aam push mov mov sbbb add mov lahf insl fsubrl xlat mov cmpb outsb xchg xchg pop lahf pop add mov sarl push xchg add fdivrs cmp mov arpl out xchg and ret jl cmp aaa mov insb inc sbb jg mov mov fucom insl cs mov mov push pop adc insl pop movsl roll pop xchg adc fcoml sbb jbe jo cmp push scas mov lds andl jo pop jbe mov jbe fnop cmp test and lret cmpsb adc insl (bad) mov push mov cmpl dec pushf rorb lret or jl or pop aaa xlat fwait mov flds mov pop mov cmp imul ret jne ret popf fidivrl sarl xchg jp rclb lcall mov adc sbb pop js mov sbb sbb std sahf dec pop adcl push hlt repnz lret in insl gs mov or addr16 and sub jns jns dec mov pop inc sub imul xchg fcoms imul shll sub xchg adc mov pop icebp xchg mov cmovnp orl jecxz,pn test lcall stos repz mov sub ret pop pop jecxz jmp je (bad) xor in add mov adc mov adc arpl lods mov addr16 mov sub mov xchg sub dec sbb outsb cmpsl cmp lods lea adc mov cmp int3 jnp out (bad) (bad) mov inc cli and loopne sahf cs and clc sub jmp mov push mov pushf in (bad) leave cmp aam cmp or xchg insb sbb and popf adc sbb sbb or and mov lret xchg jg movsl sbb xor sti mov mov sub xor sub dec sbb stos add inc and push inc ret dec and stos jae sub sbb and leave push and or sbb mov xchg jnp and lahf push add fimul incl rorl scas pusha add adc push and test cmp lret mov jo daa xchg hlt pop pop mov test sub xor mov or std ret sbb inc insl cmpsl sub pop aaa sahf pop cmp add out scas sub pop xor or and pop mov cmp add push fnop sahf (bad) das push and gs jmp dec sahf push push mov (bad) mov dec ja test mov cli cmp rcrl pop pop xchg xor popa dec cmpsl cmp lods sbb arpl adc add dec pop shrl ja mov xchg out dec jge inc cld sahf int mov cmp pop lods cmpsb je cltd arpl mov mov and out mov xchg movsl fwait out add lahf push mov out xchg push add mov es (bad) push sbb mov into sbb cmp in fdivs inc cltd scas or inc push je sub cmp mov data16 movsb aaa add aaa stos or xchg jns inc fwait push sbb xor fsub idivl aad data16 add fcoml xchg rclb stos push sub xchg mov pop jno mov and jnp mov movsl push sbb (bad) iret lods mov mulb add jns xchg mov sbb pusha popf cld dec (bad) ficompl cld pop pop (bad) cmp imul leave xor shll push pusha adc mov inc aas popa cmp mov pop sti scas aam and pop ljmp je outsb cmp or and fbstp dec out sahf in syscall jo xchg sub jne pop push mov pop jb pop mov loopne jno clc add fs jne xchg mov pop add icebp popf imul and movsl lahf mov arpl out mov or imul mov xor xchg and cmp xor outsb in sbb xor cwtl lret pushf pop in adc pop or jns insb clc lock sub sbb mov add pop xchg mov cmp arpl and (bad) aaa enter xchg xlat icebp inc lret es and and fs sub popa cmp (bad) or std movsb pop test sub rcrl pop aas cld pop push mov cli inc and sub rcll and int mov xchg gs cmp dec cmp inc add jmp jb test das pop add push pusha cld xor add orl test test sub mov sub and push lahf xor in (bad) push subb sbb lods jg sub repnz arpl ss inc pushf (bad) out adc js pushf sub jb and decb mov adc dec int3 xor orl sbb jo sub mov adc arpl in push inc outsb dec sbb fsts dec push push nop icebp push mov imul add adc dec mov push push push movsl cld or sub in pop in adc push or pop mov (bad) stos mov lea (bad) aas and fs jmp lcall pushl jae xor adc ljmp xchg jle std mov cmpsl sub xlat pop sbb and inc sub jno sbb sbb jmp stc or jl dec fldenvs fwait pop popf mov test cmc das bound mov xchg sub dec mov cltd cli fwait or and loopne push gs inc push xchg dec sub pop cltd sbb clc add pop lret call aam adc iret cli dec push lods (bad) and (bad) cs jne xchg aad les popf xchg xorb test aas aaa das ds xchg pop jns jmp sub stos repnz inc aas xchg cltd push push jge dec fwait xchg aad js push add sahf pop scas dec pop xor into mov pop dec rorb loopne call jbe push xchg sarl loope push nop fnstenv lahf add cmp mov sbbl pop (bad) dec xor inc cmc (bad) mov dec scas sbb inc (bad) pop inc push pushf test pop cmp (bad) pop cmp and dec rolb mov in xor icebp push pushf and xchg pop pusha xor mov stos ljmp xchg sub mov push popf sar adc xchg sti mov lock push or xchg sti test pop xchg and inc and jne clc data16 dec loopne sbb aad data16 lea push aam cmpsl daa in fwait stos sbb adc (bad) lret divl jmp add shll fidivr lea push leave or jmp jg xor xor lods enter xor out int cmp or inc lret pusha mov pop or nop fwait and imul cltd jmp add imul add addb mov xchg jne repz fwait loop cmc mov add (bad) jns lds (bad) xchg (bad) shrl int add add sbb jle in push cmp xchg sbb push jmp imul ret mov jae nop push mov test ja es push mov push decl sbb outsb sti test pop pop adc addb mov insl mov pop and inc jmp jb cmp fdivs das imul les lret push aam andb xchg outsl sub shrb push out (bad) pop aad xchg cmp mov pop in inc cld fwait pop xchg pop xchg mov or sbb dec and nopl shll push inc or orl in test sbb or jl loop jnp (bad) pop insb xor lock (bad) stc sub lahf cmpsw mov adc mov push sbb xchg test mov in movsb cwtl subb pop mov insl jo or adcb test xchg loop and push pop push (bad) pop sti nop jbe and ror rcl jl mov mov aaa ret add cltd ret arpl push in inc mov push mov sub arpl movsb inc incl push pushf loop out and mov loope daa in mov cmp mov add jb lods and xchg adc das jnp sub imull bound (bad) fs gs and stos notl repz add pop pop xchg in xor les mov fistpl loopne insb mov push rcll pop lock sarl push out mov pop es mov (bad) xor rcll add lahf ds push cmp rcl sbb mov test and rolb adc call jl rclb mov flds enter test sub out and mov and (bad) mov popa dec and xchg adc icebp mov push mov or xchg and repnz mov das (bad) adc mov jg das (bad) dec jl inc mov (bad) pop std adc leave xchg inc mov xchg xor sbb stc subb dec jnp push addb sti mov dec mov xor or sti xchg jg lds test xchg arpl fisttpll rcrl pop mov mov nop dec in xlat xchg jle and pop dec out and repnz std es xchg sub subl inc and sahf adc cwtl sti mov icebp or mov lods fldl push leave rcrb jo cmc test and fisub cmc in and bound std mov (bad) and insb enter bound pop sbb add popf pop jl mov sarl cmpsb jle adc in add imul into xor push lods pushf jmp loopne lea inc mov mov sbb dec pop outsb add xchg jo cmp pop mov jo jnp xchg mov cmc cmp dec enter add lcall loop hlt fisttpl dec or jbe and adc mov test test mov sti jmp sbb sbb cmp cwtl out into cld dec xor sti or movsl stos jno and rorb test out jecxz sbb add push lock rcrl mov fiadd leave sub int3 xorb inc mov sub lret mov adc gs push lret in fs and imul (bad) adc sysexit adc (bad) jno or sub cmpsl mov adc and cld nop das test adc sub push aaa mov rcrl jle insl add jg aad or sbb popa xchg stos dec outsb insl mov clc and sub and mov xchg inc cltd xor pop xchg inc cmp xchg add inc jnp lds sub cmpsl icebp mov into mov inc sub daa stc aaa mov jle jno push jmp fadd out adc push sbb pusha rcl test mov in xchg sahf mov inc (bad) pushf sbb xchg stc add in dec mov pop sahf pop test lcall (bad) add test jle lock inc cmpsl jmp (bad) mov (bad) repnz fwait xchg jecxz xor or mov inc aad test ja jbe data16 sub or js insl mov sbb fs leave xchg or mov lock in jecxz inc shrl push dec dec retw lcall xor cli (bad) lea cmp sub arpl jo movsb adc mov mov push pop sahf cwtl lds arpl jg inc mov repnz cmp fs cmp aad add pusha push ss movsl mov fcomi js cmpsl fwait mov xchg add cmp or xor sarb jp mov inc xor mov iret jmp insl les call pop mov inc push mov xchg inc add pop mov enter in fwait push sbb jg mulb inc push cmp lea jg rcrl sub stc repz mov xor cld movsl roll inc mov sbb test inc stc fiaddl (bad) std not mov mov (bad) sti out mov or insb inc and and and xchg or lds fild les and add xor mov cld xchg cmp sbb lea mov dec pop or push mov in mov ljmp mov jecxz into andl adc orb call rorl cmp jae hlt sub push inc bound lock cmc std mov jmp leave popa test jecxz adc ja frstor cmpb test inc stos xor test imull mov dec pop mov idivl mov and cmpsb pop aad lahf pusha inc fildll jmp decl cmp bound out loopne cmpsb push or dec inc imul dec sub inc mov sbb sbb out cwtl mulb ret (bad) pop (bad) cltd and jb lret sti mov and (bad) mov clc out push xchg and inc fsts lea fldt push sbb popa aam lock imulb or sbb mov mov clc out jo mov fldl lods imul ret mov aam test mov sbbl mov or push adc fsubrl mov or inc nop loop jb jae les aad in mov inc and out les xchg jnp repz test push popa pop adc leave xor jae sbb inc add xchg and cwtl repnz inc ljmp jno ds jnp imul jo bound out enter shrl sub aad out xchg ret fs adc push in push xchg cwtl push fs xchg sub mov add or mov dec in push xor int sbb aaa mov fwait push xchg fldl lret or dec xchg cli ds pop pop sub movsl lret mov lods xchg mov sbb and dec mov aad jg sub cld pop jne ret popa in add fist push cmp notl mov sub out enter sub xor pop sbb enter xor mov push inc mov cmc adc jns xchg jne jge push sbb xchg mov in pop pop push cltd stos jne add pop jecxz fwait and pop clc mov sub mov fcmovnbe and orl subb lds jne leave fs jge sub and lcall into loopne mov add rclb lds push xchg xor ret or sbb dec xchg jmp cmc hlt mov lds sbb push cmp inc push cld dec inc (bad) bound lock pushf outsb xor dec sbb stos movsb inc mov pop cwtl sbb sbb or cmp xchg scas loopne loop push test cmc jno cld ss and outsb (bad) stos pop mov mov mov mov add mov icebp and bound and mov sub lcall mov xchg pop push and ret sub mov add pushf xor insb popf and xor (bad) dec xor or mov das jp xor xchg jne orb push outsl hlt inc jnp mov std outsb icebp jo int xor (bad) xor xor sbb and das pop cmp push xor xchg push jnp in test add or les xchg shll mov add pop mov pop fwait test mov dec addl and aam cwtl sub cmp xchg mov xor sub push add movsl out mov nop mov add sub pop push pushf dec push add pop push dec xchg loope fdivl es cmc sub sbb ljmp dec and pusha add sbb xor out lock xor scas mov mov sub push jl mov push outsb and and inc imul in fisubr lea cmp sbb mov xor push pushf pop fs lods shrl dec xchg fidiv mov mov js jns dec insb inc and sarb std pop jle add adc jno adc jge rol push jle sbb sbb dec dec adc cwtl sub ret xchg inc pop gs sbb adc jp add repnz int add rep dec incb mov out xchg push xor mov sbb add mov dec fistpl xchg enter stos subl mov popf dec sub aam adc jnp mov or lods mov mov inc hlt jnp sbb push or inc sub mov jbe jecxz ficomp dec add (bad) push push sbb into jecxz or icebp jmp lods or out je sbb sbb and push popa das daa mov adc insl and nop or repz cwtl push les inc lret adc xchg pop adcb jp mov fucom jge std dec (bad) fnstsw hlt mov loope sahf or jg fdivr js cli movl sbb add adc lods (bad) popf sub incl rorb sub push push adc add fsubl lahf pop mov jle xchg les pop jne push addr16 hlt xchg cmpl (bad) cmp push push imul fnstenv jg dec pop cmp test ret adc xchg add les jge icebp sbb mov xor cs (bad) aas loope fs jge mov stos cmpb enter aas mov sub in addr16 or or lret sub push adc (bad) xor or in and add mov sahf loope and xchg and adc test repz test fimul les stos pop loop xor test lret sbb es or fadds stos sbb or nop ljmp insb mov (bad) ja test add ja stos and aas push push ficoml xchg dec push and pusha dec adc cmp cmp mov push mov lcall aam push ss add aaa mov jb (bad) pop xchg xor (bad) push addr16 and adc pop mov inc sbb test pop fnsave dec repnz xor popa hlt xor clc inc cwtl sub es dec cs pop push (bad) cld adc xchg cmpl sub mov or aaa daa test xchg scas (bad) adc mov cmpsl inc xor ljmp xorl inc addr16 out mov cmp push xchg pop mov ds icebp ljmp xor ds and dec inc mov push mov and adc dec sbb test (bad) (bad) mov mov pop and sub int sub xlat xchg lret insl cmp push jmp or xor xchg pop loop xor cltd stos and pusha lods js pop inc bound fs (bad) adc addr16 sub imul movsl ret ss push ret les sub push dec fldz push fwait inc bound inc scas xor lret fldln2 sbb (bad) lahf fwait xchg jae adc pop pushf loopne negl cmp pop roll mov cmp std sbb pop push mov dec pop and mov xor mov dec and mov (bad) daa cmp test adc mov ret aas xchg mov xor bound movsl xor pop data16 (bad) mov enter lods push push dec fldl js rcl or sarl mov pop flds test leave push (bad) mov push les inc orl ss je out nop dec cmp dec xor pop xchg (bad) pop mov sbb add bound inc pop mov popa lea fs or pushf popa xor sti movsl cltd adc or out and jo (bad) outsb adc les aaa (bad) sbb popa jne xchg outsl into es inc xchg xchg repnz mov dec pop or sti pop nop repnz sarl push xchg cmp and dec xchg jnp icebp xchg repz mov adc dec ja lock ds add xor pop test insb test or xchg adc rorl jns mov push sub (bad) sub cmc xchg or cli xchg orb in fwait or jbe pop push mov xor jmp test ficompl fild and leave shrb cmp or push or xchg add lods test ds test jo cmpsb faddl hlt inc mov xchg incb popa std mov cmpsb mov fcomps adc jbe iret sahf adc xchg add jae aam imul sbb push mov (bad) mov mov gs call push cmpsl inc inc cmp dec inc mov cs cmpsb mov addl pop scas and push sub (bad) adc push pop stos or adcb insb dec push lahf ja inc or cmp push (bad) jmp inc clc jne sbb push inc sbb lds das xor push add mov pop mov mov cmp and sub mov stos adc add sahf mov mov sub and fwait and xchg adc pop repnz cmp jp repz (bad) cmp das jp adc xchg cmpsb sbb icebp add rorb fs mov push inc in add cli aam or mov pop mov xor pop gs inc into dec add and push push aas xchg mov fsts sub pop (bad) cmpsb xor adc xchg pop sub add add in mov nop xchg pop sbb add hlt es mov sbb dec lods push sbb (bad) mov add scas mov mov cmpsl mov nop sbb pop sbb aad lahf js js and mov pop jb cmp movsb sub icebp mov mov and inc sbb dec ds sbbl lahf jl cltd inc mov or fimul das testl pop jecxz jbe and fidivr jne ret mov dec cmp repnz lret stc mov adc fwait arpl xchg lods xchg dec add nop inc adc ds movb sbb and sbbb out sarl jnp ljmp cmp add out and push ret fucom push and out out sahf dec inc popf xchg dec lcall xlat mov fwait stos in mov cmp hlt icebp sbb cmp jno or sbb out jb adc aam cmp xchg aad roll mov (bad) sbb idivl and (bad) jns,pt mov mov jae lret jle addl xorl jge xor adc xchg or hlt cmove cld add and inc loope adc xor fsub xchg sub sub or mov adc pop xchg daa out xchg popf add test or jecxz sub das std xchg cmp xor andb sbb xrelease dec flds mov adc hlt into insl jmp sbb xor push clc pop dec pop insb iret jnp stos rcrb inc fdivrs stos out fwait out call fs sbb and adc jb,pt pop push pop sub sbb pop out ljmp sti insb xor in push and imul (bad) fmull and (bad) decb pusha sbb adc pop push lea dec adc and sbb jbe xlat xchg dec fcompl push cmp cmpsb mov sbbb dec sbb lock cmc xchg push movntps pop stc (bad) sbb (bad) mov sub or sti and jbe aaa loop sbb inc inc aas xchg mov sub cmp (bad) cmpsb lret pop loope and psrld inc scas xchg in xor aas inc jmp das enter aam sub sbb adc out add sbb aad in add cltd adc ljmp pushf jp fldl jmp call add (bad) int3 pop lea repnz push mov outsb lds mov add scas insl in insb decb push jno add xchg lds cmp repnz repz out mov cmc lea sbb aas sbb push mov mov mov imul jnp jne mov cmp jae cs jne cltd icebp adc and cld movsb shrb pusha and xchg and xchg pop lods shll push fstpt jnp inc lds lret divl xor mov lods gs inc xlat jmp outsb mov fwait mov xor push sub dec ss mov or push or xchg roll push and jns cmp pop insb into sahf adc push pop or stos add jl sub add shl mov cmpsb push and fs adc rclb lret pmulhuw adc in arpl cmpsl jo cmp sbb jnp ficom mov add das and and xchg inc cmp fwait or dec xchg adc mov jns inc xchg adc and xor xchg mov pop (bad) xchg movsb mov out mov add mov arpl or mov (bad) add push pop push cltd repnz andl rolb add loope fbstp add jg jl xor pop ret gs xor lret push aam jno pop rolb mov daa or loope jo or pop mov sar daa mov movsb mov (bad) pop jp mov leave and (bad) nop mov mov fcompl lret push mov jle (bad) stc mov sub loop lret imul fistpl jge imul jnp in jbe inc jecxz in inc jle cmpsb mov aas ftst test pop sbb sub stos mov inc push or pop jo in pop lods ret inc inc mov xor jnp inc dec cmp popf js pop lods pop lea imul adc pushf jg orl push jb,pt in cmp push std lea repnz dec les xor sub aam fild fwait adc xor push adc loope popa outsb fs (bad) jne dec xchg ds fidiv lods jmp aaa popa sti cs cld cmp mov addr16 push imul (bad) fnstsw add cltd mov inc mov push (bad) lret lock (bad) adc mov ds sbb leave sarl mov sub or inc imul pushf rcr dec aad add or icebp enter jg xor mov and jg pop adc lds push mov insb fsin inc dec addr16 xor in sbb pop pusha adc stos pop shlb das push mov or add dec pop and or xor lods (bad) insl test (bad) aam (bad) cmc or mov in mov imul jecxz sarb inc cmp mov mov or or into jnp jmp mov xchg cmp cmp fcomps cs push pop repz aas arpl insl pop pop and jns pop dec gs into push inc rcl mov in bound jmp sub cmp ret psubw imul sbb sti push addb push mov rcrb push movsl mov push shll aad outsl adc push add jecxz pushl stc jl outsl pop lea (bad) sbb test xchg or scas mov dec cmpsb xchg (bad) or testl rclb push xorb inc stos aaa mov imul or sub fadds pop pop icebp and xchg jno andb iret inc push pop mov inc cld out mov pop sbb dec stos dec decb clc outsb (bad) lahf ficompl out cmc push sub call push jbe jns sbb cltd orl fwait add dec xchg (bad) sahf mov cmp arpl jo xchg jno sbb lahf imul jp test and stos sbb scas bound aad and out cmp out mov (bad) fisttpl std fs xor adc cmc sbb pop sub test cmp and lret fdivp and test and and inc loopne sub or pop push das in lret in push cli xchg mov test gs icebp pushf mov push in jmp sbbl xchg mov mov add or test mov jno or aam iret pop jp in add scas lods add daa add jl mov and xchg fs xrelease movsl pop pop insb cwtl pusha clc insl aad push fs sbb jle adc jne add popf aaa divb xor (bad) sahf popa aad sub mov sbb cli lds jecxz xchg push pusha and adc (bad) and or cs aas outsb mov xchg or (bad) sbb aam gs invd push jae cmpsb iret inc daa call push mov scas fildll adc stos push dec xor or sti test push inc pop or xor pop mov cmp cmp arpl (bad) xchg popa adc inc iret inc and movsl pop and call pop int3 cmp push les add mov mov push jb ret mov xor cmp push xchg and hlt mov jbe add mov pop or add mull lods xor int3 fsubs shlb addr16 imul ds and insl adc les push dec jl enter fwait jp fcmovu xchg nop pop dec push push rol fisttpll jge push inc pop xchg jb repnz daa add divb push add mov test fldt sbb popl movzbl inc lods scas sbb add add mov jb shll push (bad) lcall or movsl loop sub lret mov add mov xchg or js das aam ret arpl mov fidivrl out mov cmp pop adc mov push dec stc fldt std sub cmpsl push aaa mov and add in movsl dec xchg mov and add jb inc insb mov movsb in push mov cmp push loop mov push jecxz cmp add das sbb adcb xor inc stc mov mov cmp andl loope movsb mov or inc jne and pop jmp nop mov dec xor inc out shrb jb and and pop outsl (bad) pop sub and pop dec pop mov (bad) jecxz dec mov mov (bad) mov inc wrmsr negl xchg inc (bad) lock inc aas negl data16 pushf data16 inc out daa adc sbb inc sub popf lea movsb pushf push xor inc hlt out outsl aaa mov pop dec mov mov (bad) nop cltd cltd push cmc jp or push pusha scas mov cmp out test outsl xor pop popf gs ja inc pusha or xchg push xchg inc cmp xor pop popf pop (bad) out inc aad out mov push jo gs push adc cmp out xchg out xchg and fsubl jne fdivrp push dec push aaa sti nop and rol fs adc fwait sbb mov mov sub cmp push push imul or imul sub pop aam pop mov aam movsl lods sub sub inc or (bad) icebp out dec ret add in jns repz add nop (bad) lds fisub (bad) jp (bad) call insb in movsl dec dec and (bad) jo xor pop jge lds jae test lahf mov imul push cmp sub mov fmul or stos xchg popl cld loope dec shrb gs mov sbb repnz mov popf mov aaa fldl shll lret scas cwtl popa pop scas sarb rcl daa popa push mov mov insb add into pop sub insl je popl xchg add (bad) stc jle xor mov scas fstl mov (bad) and shll imul cwtl popa nop pusha imulb mov call (bad) popa add rcrl sub xchg mov das stos hlt je,pn pop inc push popf in cmp mov lcall jp ds fild jmp out push mov or jge out xchg push jp gs inc inc dec outsl out xor out xchg outsl push je inc test movsl ss jae push pop xor adc lret dec inc mov pop jne int inc jp lcall outsb xchg and call cmp push daa test cmp rclb faddp fiadd xlat pop out mov stos movsl das sbb repnz les sub sub cmp mov xlat incb cmp push (bad) mov add adc and aad jp push mov dec sub fst xlat adcl outsb mov adc cmc add cmp das mov sub lret push push into scas jae insl fisttp daa inc jl mov dec scas lret addr16 cltd das adc testl gs adc mov in sub dec push icebp aaa out test sub daa jecxz adc or inc pusha out dec and mov cmc das mov repnz jo mov movsl xor outsb in out mov adc xchg jns xor mov push dec popf dec rcll cmp in xchg adc aad rcrb stos test sub stos outsl or and and pop dec ds icebp pop call fcompl (bad) lret pushf jns sub into push daa mov push in pop insb sbb sahf adc out hlt add or sbb popf jbe sbb fyl2x popf (bad) out or adc lods push and lret push xor mov adc pop pop fdivp or push xchg sub and lret add aas xchg mov adc and mov inc out xor add sahf test inc stos mov push ljmp xchg adc dec adc push nop std ficoml scas aam xchg add or mov cli flds push adc orb mov test mov movsl xchg xchg movsl jge mov imul mov dec add adc dec and mov xchg xchg and fwait add cltd or sub pop push lds jl mov insl out out xchg mov add jnp std push jl imul int3 and outsl push mov in aam dec push push dec jle adc in sbb jecxz fcompl lods sbb xchg or xlat fcmovne int pushf lods push mov (bad) daa popf arpl scas and and and out data16 out cltd xchg fcmove rcl in or push jle repz out lods sbb out pop mov inc mov inc cltd cmpsl rcrl mov mov je mov ss ja jecxz test mov bnd daa inc mov call mov and pop xor mov (bad) xor sub mov xchg dec roll push dec xchg (bad) subb add mov dec mov sahf xchg xchg adc jp sbb pop inc cltd push mov imul inc test mov cmp inc pop mov cmpsl enter loopne repz pop jo mov mov cs jae scas (bad) (bad) mov add sahf iret jns imul mov das hlt sub (bad) sub jg inc cmpsl es pop xor cmp mov sub in out int push pop loope push dec xor lea (bad) ljmp mov mov fmuls (bad) mov inc mov push in or xchg in icebp shrl nop inc into sbb mov div jae in stos mov rcll aad into sub fs gs (bad) xor mov pop into (bad) push or (bad) shll fwait xchg inc sub xor orl test mov mov inc fbstp xchg in in xchg hlt jb and lret in xor rclb int3 xor lea jb push or nop repnz out nop and pop adcl xchg movsl xor aam js and push ret ds ja sbb sbb jns push pop shlb mov movsb jge lahf xchg repz daa cmp or sub (bad) es cmp iretw fimull push leave push sbb sti (bad) mov inc js mov imul lcall inc or insb addl ja repnz pusha dec ffreep lea hlt aad fs movsb jno inc cs cmpsb pushl jp mov adc cmpsl in popa lea and xchg inc pop dec repnz mov or jns in imul lock push shrb adc pop (bad) rcll scas add daa hlt jg xchg in dec pop iret imul hlt add jne imull sub mov pusha cmpsb mov jle cmp clc outsl movl add popa inc rclb push and and xor push popf imul push jbe inc cs addr16 cmp stos call sub jge jo push sub lds in mov or popf enter popl negl (bad) cmc add mov and rcrl lea pop mov pusha test mov sbb jo add xchg add jmp dec jmp or adc adc sbb hlt fsubr and fwait pop inc inc ljmp rorb insl rclb loope imul lret loopne movsl (bad) sbb jge adc xlat mov inc repz and sub adc mov ja push push xchg icebp ss nop jle,pt fs push adc mov bound dec sub mov cltd inc inc ficom or adc or bts sbb popf repnz cwtl cwtl cltd loopne js xor pop mov popf loop sub ret inc sbb mov popf lock or jl xor mov cwtl cmpsl test rcrb pop nop loopne xchg jo and dec (bad) fwait adc cmp mov jecxz,pn rcrw adc xor cmp mov and and sti pmulhuw gs insl inc inc xlat pushf push sti xor jno adc pushf dec fcmovbe sti dec jne jmp cmp rorb lcall shlb push mov hlt aam pop into lea fmull push daa std mov mov sbb mov mov paddd addr16 jnp jae mov test or push inc clc and adc pusha jnp sub mov cmpsl pop mov push add adc sbb push adc stos mov cmpsl mov add aas jb aaa jp add add inc inc arpl cmp adc push (bad) dec pusha cmp dec pop faddl negl mov sub ja ljmp jns (bad) aam and lods dec mov das pushf out bound ja je jge ds jns rcrb mov psadbw cld pop or xor stc xchg aas add rorl sbb sub xchg dec add and jns adc imul xchg fcoml stc sar push mov dec sub nop pop mov pop sub test mov xor mov jno push jb in paddd cs hlt inc out out jo pop ljmp outsl push hlt std push adc fistpl inc fwait (bad) bound push pushf ljmp test or (bad) lahf dec dec jbe jmp adc lea and xlat lea out jp mov outsb int jmp cmp rorl xchg xchg and movsb mov pop shl mov mov jno add mov and cmc clc inc into scas nop add fdiv mov (bad) jmp sbb stc subl sbb fcmove or dec in (bad) dec outsb jnp movsb hlt and nop mov (bad) xor adc and sbb adc xchg scas dec rol daa aas int or add or daa out test cmpsl (bad) fidivl lcall out cld jmp outsl in mov cwtl out stos orl xor cwtl (bad) sub dec rcrl repnz aas mov dec cmp push mov sub scas outsb push xor or sahf xor jbe fldt mov sbb movsl mov mov mov into jle (bad) push mov dec testb repz cmp push and dec lret scas test ljmp jns lea pop jg rolb pop lds sarl mov sbbb mov cmp popf xchg and or jg inc sbb lds movsb nop add andl ja push or nop add mov cmp sub mov add xchg mov sahf mov loopne pop dec mov and adc aas or daa or stos xchg mov sbb xchg jo jnp in mov aam pop jl add roll jle repnz dec mov cmp lcall sahf mov and das pop sti ret rcll (bad) pop mov decl nop adc rcll dec (bad) test push xchg adc mov mov lds sbb dec jg cmpsb hlt aad mov jns sbb push fdivr dec outsb cmp dec out xchg adc in push xor fsubl xchg push aad (bad) sbb xchg sbb ret pop mov outsb fs xor jmp inc push rcll ficoml sub imul lret add lods shr pop fisttp push sub adc lret xor daa jnp jnp add jo rorl jno les cmpsl pop nop sbbb sbbl fimull xlat sub dec xchg push int outsb call adc jb imul (bad) adc inc mov in dec add into aam cmc hlt out adc test mov fcmovu jecxz sub xchg loope aam mov xchg rcr bnd mov fdivl xlat bound and or fs adc and lods cmp sub popa jno push add sbb jecxz mov dec sbb add movsl das out enter jle outsb jg in dec lods sub add andl or ds stos dec fcompl add xor fildl loope mov inc sub repnz aam aad jne aam adcl pop sub lcall out les jnp jne fcompp mov rcrb push mov fdivs push (bad) mov mov mov loope fstpl int3 push sub pop aam jnp (bad) and xchg xchg xchg scas push mov aam mov (bad) rclb arpl idivb push int negl sbb (bad) lahf sbb jno loope xorl insl add loope and or movsl pop aas pushf xchg inc outsb xchg (bad) pop mov pop push and inc adc popf ficom xor jecxz das sbb and arpl cmp add jge daa mov movsl jp push push loopne lods incl lods stos mov mov (bad) shrb add loopne or mov mov je clc cmp xlat adc mov nop and pop mov jnp dec mov push ja loop lret xchg popa cmp imul in fwait int cld in push (bad) xchg iret sbb mov lods xchg push pop movsb (bad) int3 jne and mov inc aaa adc cwtl sbb cmpl out stc adc mov lods jle mov stc bound and stos in (bad) cmp push bound dec adc and outsb in push js leave loopne sub push test scas popa (bad) mov jmp (bad) cmpsl dec add cli iret pop jnp nop push lods out (bad) sub mov (bad) xor jo mov imul lods cmp sti dec int3 xchg xchg subb or fcom pushf int3 mov pop or add shr add lods jmp and inc popa rcrb or jne xor pop mov fadds sub add jb gs sti lds jns,pn mov sarl imul out gs pop (bad) sub sub (bad) jo xor ret xor mov mov add dec (bad) or fidivr lret push les sub (bad) xor dec pop sahf repnz imul sub ds dec xchg mov sub pop xor inc out sbb push pop and cmp call push outsb lcall mov out nop mov jno dec inc test adcl add outsb lds cmp cmp cmp push sbb jmp ljmp mov xchg add and xor sbb int3 dec (bad) adc popa adc scas sbb inc repnz xor js push roll dec jl mov jbe xlat ficoml popf (bad) bound lds in pop rolb cmp pop std push xchg iret pop or lods mull add sbb repnz sub sbb sbb out out cmpsb arpl aam outsb dec or bound push xchg aad test xchg xchg test test movb mov out lret dec mov std es sub pop add mov data16 or jbe incl xchg inc xor clc lahf inc and sbb add mov in adc add imul mov dec mov aas andb test in xchg mov sub sub fsubs push lods leave inc aam clc sti test fcoml in jns and lods adc lock pop dec pop sub ss jmp pand dec mov mov jns inc push lcall (bad) push mov scas jnp pop jo mov bound sbb in arpl int3 mov jnp fxch sub pop mov xchg add sbb mov (bad) push jne cltd leave push movsl nop add sub push push and adc cld arpl push mov or cli pop (bad) jecxz outsl sub sti lds push pop xor lcall aad cmp dec push pop ret (bad) scas fisttpl testl mov sub in pop pop es sub lods jl ss arpl fs add test enter sub movsb (bad) shlb xchg push insb ja cmpsb outsl (bad) dec lret add inc inc out cli test jl test aaa into sahf in mov pop push insb jae pop sub repnz rorb and push sbb pop int3 push jns dec pop xchg in movsl xor fcoml cli inc inc cmpsl jmp repz loope sub jmp insb and sbb es insl icebp and fs mov mov jle push sbb in ret adc scas and cltd sbbl in push lea rclb addr16 cld mov xchg popf daa outsl fsubl push lods sahf test shr jno xor jp fiadd stos cwtl xchg xchg roll and sub imul sti add aas dec xchg pop cmp dec outsl inc adc add xor mov fidivr sbb scas dec into lahf jno sbb popa loope inc (bad) int (bad) sub mov push clc xchg mov bound sub out pop fldenv add and mov clc cwtl xchg cmp lea sub ds daa pusha jns out jne cmp or popf cmp icebp add add fldln2 sbb adc add inc add shlb add (bad) icebp outsb aad xchg mov ja jns xorb and es int fbld fcompl cwtl outsl hlt stos push jne inc aam fnstcw adc testl bound jno and adc mov cmp adc out stos cmp pop mov or test insl sub cli aam cmp jle out (bad) std js mov fldenv mov mov xchg sub inc xor push adc movsb mov into gs stos push into int aaa xchg popf movb add mov or nop lret fstps jo sti ds enter mov push and inc int3 adc int mov sub enter pusha (bad) mov jecxz,pt mov dec gs rolb ror sub xor or ss dec dec pusha icebp cmpb mov xchg cli (bad) gs sbb sti and outsl jle pop add mov push ljmp jns int3 dec xchg fs aad sbb sbb pop or push dec mov mov rorl inc loope inc dec sarl mov mov cmp adc mov ret mov scas jbe int dec loopne inc xor mov (bad) sub inc addb popf push sub or mull sub adc xlat cwtl lock pop dec mov pop mov mov mov das mov mov sti (bad) repz push cltd scas adc leave test sub and test sub dec xor movsl adc and and scas popf and pop pop das gs hlt pop pextrw sbb out imulb mov inc sbb dec dec mov add xor add imul ret or push jne fcoml ja or imul and push pop int xor mov jnp insb clc xor mov xor aad mov insl rclb mov lret xor bnd add and addb cmp jb gs scas sub and test xchg les cmp cmp test and xor in xchg cmp hlt in jecxz lods inc divb popf arpl mov in je or lea repnz push jge mov sub mov jle setbe inc enter aas push pop andps in iret mov imul mov dec push stc dec inc movsb (bad) sbb ds jle adc push sahf imul xchg or movsb jne push and fldt loop and jnp lea cmc daa xor nop lds shlb subl lahf js xlat and pop es bound dec cmpsl pushf popf inc sub xor rcrl cmp repnz sub jno fdivrs scas inc stos adc test repnz rorl in pushf xor fstpl cltd xchg mov out mov (bad) icebp push jno xor push icebp push rcll push cmp or lods in ss arpl push jne xchg push iret mov inc lds sbb leave sbb push mov mov test jnp (bad) test dec addr16 jmp lcall jecxz sbbb pop movsl pop cmc rcl nop mov sbb out lret dec dec sub cmp int3 add or adc fldt ss inc (bad) push lret adc or inc imul cmpsl divl adc add or adc add xchg insb mov pop enter das out fsubs ljmp add xor adc aas in sbb int3 lods add rolb mov sub fs cmpsl xor pop mov pop test or add outsl xchg sahf xor cmp ret cmpsl fwait add and lods imul and or mov fistp jle mov push and aaa ret sbb loopne cmp jmp aas push popf pop inc imull into shl js (bad) les movsl mov inc insl negb ja adc inc xor pop push mov in push pop repnz ljmp cmp sub test cwtl ret add xor lea or cmp jnp sbb rcrl out xchg add push cmp mov mov addl push xchg fidivrl push sahf cmp out sub or in lods pushf test pushf cli jmp adc pusha (bad) arpl pop mov clc pop adc sub mov xorl sahf inc gs inc aad ljmp gs xchg jnp aas imul scas mov mov push sub add lcall movsl inc jbe cmp mov xchg jno outsl enter inc lock jmp sti pop sub push icebp in pop sub (bad) cmp push mov mov jbe ja xchg or mov xchg call cmp gs inc rolb jns add mov sti and mov inc aaa push dec and inc loop and lahf std xchg test add push out fs cmc je adc or or pushf jno push pop loope inc lods scas lea dec repnz (bad) cmp push idiv inc sahf ret mov push adc mov shrl loop sbb push movsl cmp adc int3 andw cld in cwtl jo pop aaa xchg sahf int3 mov into (bad) gs gs push push dec mov aam or repz test push dec adc and inc sti push cli or test cmpsb rorl add stos sahf dec xchg inc dec mov sub rcrl mov push pop in mov daa fisttpl mov outsb xchg (bad) divb mov ljmp inc ficompl iret push sti xlat nop imul xchg dec cli and ljmp test jb addl xchg cltd or add and cmp cmp or test cwtd test aam daa mov pop sbb clc sub insb push adc add xor outsb sub sub es mov adc or adc push fmuls dec in inc out movaps and add call cmp mov push arpl dec les jae add (bad) stos insl cld dec mov xor in pop jns xchg adc sbb (bad) (bad) fisttpl push arpl add mov mov mov (bad) or dec insl iret addr16 or push inc xchg and dec aad aaa sub jne clc lods jp xor frstor rcl push sahf (bad) mov mov and push sub inc xchg aam or xchg mov daa mov nop mov movsb pop popf in mov push movsl loopne gs movsl fdivs xor decb (bad) mov pop jp fidivrl mov enter xchg jo es dec mov ljmp mov push (bad) push dec (bad) add or xorl (bad) mov hlt lods scas xchg fmull nop mov jle jmp inc push jns adc push sub addr16 adc and fdivs lds mov sbb out dec mov movsl push xor into push int bound mov and pop xchg jo mov sub xchg stos jne jmp xchg and jl jle pop xchg ret pop sub bound fs int or mov (bad) sahf sbb push or inc and pop outsb add enter push jnp sbb mov dec cs insl andb xor pop mov mov cltd mov push mov getsec cld sub and and fwait pop arpl outsl int3 mov dec or xchg jo add inc jp addl lea es xchg mov jge jg and add add and sti xor jmp adc mov mov jle and in pop stc jb or call cmp rorl push sub ror jmp mov or mov clc loop les mov add and pop das fidivr xchg repz jbe adc xor stos mov pop push adc inc icebp sub outsl and aam call cld mov out in mov add cli loope clc pop mov xchg js sbb pop rol test mov hlt mov out pusha pop push or cmp test sub outsl sbb fistl jb jno fcmovnbe aad movsl nop in jl dec push cmp push cmpsl dec jp outsb stos inc jnp pop sbb loope pop dec jae (bad) sti cmp aaa loope cwtl aaa add add fisttpll faddl xor setno pop and mov jmp cmp cs add pop pop jno jns or adc adc scas lds add addr16 inc mov push pop aam popf xchg icebp pusha mov dec lret fcompl lods mov (bad) arpl int pop fistpl xor jecxz,pn pop inc scas sti jb or fs or std push int3 gs in hlt test pop cs lods enter lea mov leave xchg cli or inc sbb dec fisttpl ret mov cltd int3 add fldl mov lcall add or nop (bad) mov xor add pushf pop cltd nop gs insb addl and dec mov cmp repnz mov movsl gs or int3 xchg sbbb sub data16 or cld push in push mov jo or addr16 rorl pop mov pop arpl rolb test dec aam in and iret es ja insb add ret push (bad) dec cmp rcr jp ljmp fidivrl fwait mov jge add xchg xchg jge shrb mov addr16 xchg xchg jno dec jmp sub cmpsb (bad) cmp lret lea jae mov in push das jnp aas sbb je sub cmp scas xor cmp adc in sahf and sbb mov xchg adc pop pusha popf cmp lods popa pop mov push dec roll xchg mov xor sbb cmpsb pop clc stos enter mull out lods pop ja cs mov addr16 push or bound cmp rcll sub rclb scas push sbb movsl sahf sti jae mov aam and negw test inc jg outsl inc jbe xorl mov cmp pop test lds mov jae and cmp sbb fistl inc or rcll sub inc push das popf pop pushf jae loope xchg sub dec inc pop push insb mov lcall aam add push shrb or fcoms jle aam ja inc add xor sarl dec int3 into xchg cmpsb popl cmp jp mov xchg es cltd popa mov mov adc pop sub scas insl lock gs or or mov fsubp ljmp push xchg mov jnp addr16 pop xlat in test cmp test sti inc cmpsb in fldl aad pusha mov push mov repnz sbb and aam movsb jae xor faddl mov aam shrb push outsl mov cmp ja (bad) lret dec fisttp push sub push dec xor mov (bad) (bad) (bad) dec out cmp jg aam and cmp shll jecxz shrb movsl mov sub mov inc jb pop dec add jb (bad) mov mov in jp or or fildll pop das out xchg xor jp fwait mov cmpsb rcrl sub push jbe popa sahf scas inc xor jecxz call lock cmp jns repz jge mov decb orl or bound xchg es mov nop inc fidiv push dec ss sbb or repz or cld roll dec popf cmp inc ss add xchg in cmpsb int mov xchg push lahf mov mov jecxz dec ret pop test (bad) in push push roll lret and cmpsb xlat fidivrl inc sti mov sub test lcall pop xchg in mov into daa xorl pop xor push push mov and add jne dec and int3 pop shl jo and fcmovu enter into xor aaa inc les push sbb lea xchg int jecxz es sbb cmpsb stos arpl fidivrl pop mov mov jbe (bad) push jecxz ret nop mov pop inc in mov enter mov push mov adc popa jge movsl aad pop push les pop jb jno jno out out lret aaa (bad) mov das cmpb pop jno jle cmp xchg (bad) stc scas ret jne or fldt inc or and pop xchg push pop data16 ret sbb test mov adc inc add dec pop ret daa dec aad aam add or lds mov sbb jle push scas dec jnp lods (bad) pop push dec clc cmp cwtl int3 std bts or mov push sub arpl nop and cwtl push push hlt inc xchg imul in nop push sub cwtl cld call inc mov sub push rcll inc lods mov gs pop cli fwait xchg outsb cmp mov or lahf in or hlt (bad) divl and (bad) xchg (bad) dec je repz adc iret and mov dec mov in scas fwait adc mov push and outsb popf and test int3 inc in jb adc mov add addl test add xchg pusha push adc xchg sub mov and dec and and aam cmp sbb das jno add sub repz dec and mov mov or mov int3 (bad) sbb testb pop icebp dec cmpsl and repnz add mov pop insl imul push mov inc jne pusha or fcoml inc cmpsl rcrb adc (bad) cwtl mov sub es cli test xchg daa jae test dec mov into int mov pop mov (bad) sbb cmpl aad aas add mov aam jae push cld sub cmp mov addb out dec out adc fisub or inc mov mov int3 fs lea jnp mov mov inc push and cmp pop repz adc lds dec nop enter ret int3 test xchg xor fstpl or pop cmp aas into sub mov (bad) inc scas add out das repnz test jno pop push pop add jb js inc inc pop adc cmp mov cmp cmp jmp dec xor fdivrs divl lret dec decb data16 fcomp sti adc test mov test into (bad) mov push ja pop les dec pop cli cltd sbb sub adc (bad) inc mov pop lcall insl dec (bad) jg nop push js lahf mov push mov push fsubrl push xchg adc jle std int movsb xchg jg cmc push cmp int3 insl add sti adc jns cli imul sub or pop ljmp bound lock lds sbb mov cmpsl (bad) enter aas jb test cltd cld push inc les daa out imul sarb push das int3 sbb out js lret adc cmp loop,pt mov pop add inc cwtl pop shrl imul sbb push dec out pop xchg jb cwtl idivb push fwait in jae xchg sbb xor cmp out roll add sti mov lea pushf in insl xchg lea add push int3 or or jo int sbb (bad) or pop add mov cld icebp mov cmp in out push sbb aaa test push adc or shll push mov push mov push mov jnp (bad) repnz pop lds add add push lods les push inc inc aad mov icebp leave mov xchg sbb jne mov leave je shrb popa xchg adc xchg pop push inc mov popa sub or out pop adc cmp test dec dec pop mov jno (bad) mov insl mov popf cmp inc aaa jle xchg data16 lahf in sub push xor outsb clc xchg jae enter push jo xchg sets jg test fmull pop xor sub pushf adc out mov outsb prefetchw push push cmp cmc mov movsb ret int pushf std lcall outsb mov sub imul xchg rcll xor push mov idivb sbb add inc xor xchg andb xor mov pop cmp (bad) std pop in cltd sub (bad) out es and ja daa hlt or test (bad) shll (bad) jne dec inc adc rorb dec xor loopne fwait andb mov les lods pushf xchg inc sub cltd push loope pop idivb (bad) movsl (bad) into xchg sub in mov insb sbb divl nop mov lods ljmp mov push pop std pop insb mov cld loop push inc jp dec sbb aaa icebp mov sahf adc jae out jno ljmp ja lcall sbbb push (bad) cli fcompl cmp (bad) jmp jle jle loop nop das cmp clc stos adc dec and push iret jmp adc xchg ror inc and mov inc jg mov xchg sub inc jae icebp pop push mov lret and xor cltd mov adc sbb (bad) arpl push pop push in and lahf add cmpsb pop lea scas aam pop cmpsl sub shl inc cmc scas inc xchg mov roll stos int out jp inc aad mov or sub push test lahf push scas (bad) inc dec add sahf adc (bad) out xchg mov cmp xchg mov insl test adc cmp ja and gs cli in and std push xor arpl push fldl inc nop cmpsl dec and mov inc out sub aaa (bad) and lock mull rcrb aaa in lock sbb cwtl add cs push fwait xor fldcw and sub sub inc jp (bad) mov (bad) (bad) mov ret dec mov xor sub jo xor cltd ljmp xlat pop test add (bad) scas movsb dec pop pop (bad) xchg jmp fs xor xor sub icebp fldcw xchg xor fisubr sub mov icebp add mov push aas (bad) aaa mov mov test sub or (bad) xlat arpl test dec jns jno pusha test aaa out dec adc sti dec loope push popf mov pusha push inc loopne popa sbb or mov cmpsb jp or dec repz fwait dec das push pop xor test push mov and push pushf mov arpl mov imul int xchg cmp push dec push jecxz and imul push std add jo xchg and mov jmp push (bad) cmp adc dec test mov sahf inc or (bad) dec in rcrl xor sub into push fs imul cwtl push lods jbe lcall or hlt into cs xor fcompl iret mov cmp mov lahf pop hlt push imul jmp pop sub pop push jl test inc jp lahf inc or fisttpl mov (bad) mov pop dec and and pop test insb out scas scas adc jns mov push lock jbe sbb ret in mov imull jle ds sub sbb inc xor pop push dec cmc xchg icebp sti adc test paddusb outsb jmp int3 iret adc daa sarb fsubp xchg popa jbe fnstcw shll inc dec ss daa lods sbb imul bound dec and daa pop bound insw xor xchg xchg sahf fidivl scas cmp in das pop hlt dec fnstcw out sub xchg add mov push add into dec xchg lahf imull nop movd xchg dec in jne adc jo mov iret xlat dec adc jg push xor mov fcmovne pop or sbbl aaa frstor and fisttpl aaa test cli mov mov jb test jb add jb sbb dec xchg xchg sub push pop insb jae int push pop adc push es push bound cmp imulb (bad) pop test push add xlat imul and in push jge addr16 xchg cmp js jge dec (bad) cmp std fmul adc xor xor pop test je push (bad) imul shrb pop pop xor or adc out and sbb flds adc (bad) xor dec cmp test and xchg bound cmp gs adc outsl and testb lcall mov aad outsb fwait and jbe sti xchg mov shlb lock sub xlat xchg (bad) scas lds fistpl sti (bad) mov lods dec or sbb out gs dec pop int imul cmp pop adc adc bound and sbb in add shrl cmp push mov inc gs inc mov (bad) loope mov push les mov cmp notb test and jne adc cli cltd clc popf aaa xor inc cmp mov movl jecxz sbb jnp xor jge push xchg sbb les mov mov data16 lods inc inc cwtl (bad) mov push or lcall pusha lea sub popf mov cs (bad) aaa aam lds mov and mov pop xchg lea jmp enter mov leave sbb (bad) cs clc insl clc (bad) xor mov mov and push sub fs push sub jle sub popf dec inc dec pop sarl insb jb stos and cmpsl xchg jp les movsl data16 cmpsb add aam orl dec xchg cld repnz push xor es sub bound inc scas or add add mov push mov aas xor xor iret jnp int3 lret and test popa arpl test push dec dec repz or ret mov jb (bad) and pop cld jl push push iret rcrl or arpl data16 pop xor in adc or loop jmp pusha mov ret dec xor inc fmull push or mov mov movsb lds push das (bad) fwait push jae int (bad) call xchg jp and inc daa movsl mov cmp jmp out fs stos je pmulhuw jg in and xchg sbb aam stc add mov movsl add outsb into mov lods daa popa cmp mov addr16 nop imul add daa pop mov in incl mov (bad) pop mov inc cmpsb ds inc mov es out jb rcll dec cltd (bad) into lods mov mov (bad) sub ret inc pop mov push or or and pop rclb fistpl adc xchg xor adc aad les mov inc fwait push das add pop pop dec inc push mov in add (bad) aam cmp xor adc insb popf std shl xlat push movsl call or sub and xor add (bad) mov test nop sbb xorl inc sub pushf lcall cmp aad xor jmp iret call sub rorb ficomp xchg cmc xchg mov adcl dec push push call pop test repnz (bad) mov pushf clc push dec js inc or popf xchg mov jecxz movsl add mov test cmp ja and inc mov push cli ret xor insb dec lods ja nop (bad) xchg add cli jg xor xchg leave sbb jno pop mov test sbb or stos adc xchg mov btr pusha pop mov fdivl andl xchg adc (bad) fnstenv std inc test sub nop call adc clc sub pop dec or sti jbe or cs mov xchg xorb daa cmp sub cli test mov push scas jb cs xor js cld push shrb fiadd nop or fdivs test push popa adc int3 addr16 ret pop fcom fcmovnu insl cmp ds out push stos insl sbb or push pop imul faddl xor imul movsl mov mov mov cmp add jmp jle inc out imul in xchg and cs pop mov fbld cmp cmp pushf dec in and xor push orb pop pop shlb mov in loopne sbb pop pop lahf les add push rcll sti pop out cld cwtl sbb rclb dec std jp mov add push jg pop (bad) or xchg mov cs pop mov mov xor aam adc xor call mov pop sbb mov dec dec pusha or push inc sbb shl mov cmc fcom mov lds or ror lret inc and xchg adc leave in shll pop xchg cmc pop into fistp bound xor jmp sub (bad) loop pop cltd out icebp pop data16 adc movsl aas mov movsb and pop xor aad adc js push sub ds push cmp adc push imulb push xchg orl inc sbb pop adc or adc xchg sahf fwait sub sbb sbbb rcrb lahf pop out add int dec addr16 fmul fsub test push popf cld in push xor (bad) sbb sbb (bad) cld cmp sti xacquire or mov push push or dec cmp stc jae stos add push lock in nop nop xchg inc or fmull xchg (bad) xor (bad) cwtl imul jecxz pop mov les out sub push add xor sub lods or test stos (bad) scas in movsb push sahf cwtl mov sbb icebp dec (bad) aaa test add inc movsb cltd xchg inc in cmp mov inc push aad and ret (bad) (bad) insl shlb ret in jecxz dec leave loope addr16 adc dec in sub push or adc mov fadds and test cmp xlat fmuls xchg lock ss gs dec lahf daa inc popa jl lahf sbb xchg test jg inc lret xchg mov pop pushf jbe cmp sarb rolb (bad) scas out test bound mov in mov sub mov or fisubrl cs gs cmp fcoml fmul xor adc pushf int3 ret in mov aad scas pop jge orb xchg push movsb roll xchg lret gs mov xchg (bad) add js fs or xchg cmp data16 xorl dec jecxz or mov cmp hlt dec inc pop negb jl sub push push mov and fisttpll stos xchg add fwait pop cld and call sbb ret cmp jl shrb cmp test fsubl sti add pop test mov icebp fisttpl jbe adc xor sub xor fsubl jle cwtl cwtl dec jno lcall pop push test push pop add adc and jne dec pop push outsl sbb fiaddl je jo or xor repnz pop inc cld repnz and mov add dec dec dec icebp push sbbb adc (bad) stos lods or fldt mov mov add ja mov lods (bad) dec arpl push xchg iret movsl xchg cmp aad pop pop sar mov adcb (bad) add gs sub inc push dec jnp push jbe,pn neg adcl ds insb push xchg cmp sub arpl ds inc (bad) inc adc in push movsb xchg stos mov ret sahf enter les cld add jle xchg mov jecxz mov inc aaa ss loop and fs insl ds cltd cwtl xchg push inc mov mov mov aas inc mov je cwtl icebp sub rep or js rorl xchg jo lea pushf inc test loop mov dec popf sbb mov (bad) xor xchg call pushf mov lcall movsl bound lret push dec les daa sti adc out and movsb movsb pushw jno test push jnp inc scas sub cld cs cltd dec popf call dec or jle add repnz adc jle xorl pop push sbb adc in add popl sub dec push addb stos xchg sarb add icebp jns mov pop mov mov les add cmpsb xchg fstpl dec pop push and and int3 jb test xchg pop aam repnz rcl je fmull inc rcr popf scas rcll fsubrl sbb jle mov jno in push adc enter jmp adc in add add pop sahf or mov faddl decb sub inc push pop pusha and stc inc inc mov and xor mov arpl sbb in jo loopne jb lds pop push frstor xchg test sub dec mov xchg lahf rolb push mov aas (bad) sbb fstl mov movsl pop gs (bad) lods inc dec je lcall mov test cmp inc dec arpl push or pop pop repnz mov push pop sub xacquire in push jle jg iret mov xor inc out ret pop insl test fist icebp fld lods lret icebp rclb ja mov leave inc movsb sahf add arpl fucom ficompl cmpl divl daa adc in push push hlt xorl test aaa inc sbb test and cmp jg in jl push nop test mov es xchg (bad) push and xor push or mov push mov pusha dec push lods sbb jp popa pop push cmpsl shr push mov loope imul das insl arpl adc fwait std daa dec mov shlb cmovo sbb inc and pop call std dec or cmp xor test (bad) lcall pusha lea mov ds in sub xchg inc addr16 mov cmp in int stc push in addr16 jle adc push jecxz lods test mov mov mov out xchg push sub das pop or sub inc jo mov pop xchg nop cltd stos arpl hlt sub mov aas nop xchg adc std push inc mov stos sbb pop mov sub (bad) and sub xchg pop xor aaa loopne fcoms add mov sub lret inc xchg and push add mov inc mov sbb inc hlt daa sahf imulb mov aaa inc hlt test inc movsb jb movsb and xchg popf and hlt dec add xor scas sbb inc push jg xchg (bad) jne add jl mov mov imul cmp dec xchg and inc mov movsb sbb mov outsl rcrl stc push rcrb xchg mov loop inc and stos sbb add and cs cltd mov push mov in sahf icebp loope xchg cwtl aam lahf loopne mov jl addl adc sahf sahf add mov and shll adc inc mov stos push mov pop stos cmp enter divb pop mov and ljmp cmpsl push lds lds pop sub dec mov data16 sbb daa push sub jmp xchg test jno std and xor (bad) shl sarl and push fildl sbb cmp or jne lock decb (bad) aaa iret js aas push aas xchg in imul sub xchg lcall or push fstpl into mov cmpsl xor inc mov testl arpl rcrb xchg fmuls sbb jno in push sub jbe jp push mov cwtl testl pusha stos jns pop jne jle scas push adc xchg inc aas xchg movsb dec adc jnp mov xlat xchg sarb push or scas push mov mov mov insl mov xor jno mov sti lods xor add inc popa adc mov fsubrl xchg xchg add xchg negl inc sahf in movsl int3 mov movsl ja test ljmp and xlat and mov out mov or test push jecxz nop ds int3 out in mov pop leave fistl icebp rclb mov into mov and and pop mov dec (bad) cmp pop jle ret and inc bound daa jmp dec fwait push mov sbb (bad) xchg das pop ret cmpsl andnps sti lea (bad) pop push mov cmp xchg test ds aas pusha clc test mov divps pop xor bound popa lret pusha pop ret pop fdivrp (bad) push lods repnz mov clc inc add insb pop movsl data16 xchg aam inc cmpl aaa test aad or mov out sub pop cmp iret nop cmp dec cmp ficom (bad) icebp in push je xor push hlt push cmpsb insb cmp fstl jae out fidivl int3 jge shlb ret adc dec or or dec leave repnz xchg and lahf flds sahf or xor add xchg jb add dec (bad) sbb jae hlt in pusha mov in mov lock cmc xor clc int3 mov fdivs xchg cmpb cmp (bad) cltd mov add lea and jnp (bad) sub es scas xchg test or adc inc ss and out stos cmp fidivr xchg pop or (bad) rolb sahf add push push pop mov movsl mov nop xor fs push and dec xchg jno and inc fsubrs jecxz fisubl mov inc dec pop insl dec xchg mov cwtl sbb scas pop rclb cmpsb stos out mov fs stos mov xchg js sub push into out aad xor addl and in xor cmp pop nop popf pop sbbb mov call movsb jns lods test imul aad sbb push and sub xor cwtl fistl dec cmp mov dec mov pushf jge and enter sarb xchg sbb (bad) punpckhdq cmp test (bad) push inc adc add loop sahf in jecxz lds stos mov or es xor scas jno pop lds and sub rolb and (bad) or and inc push dec adc cmp lods in jmp dec aad or xchg mov adcl ret stc dec dec mov lock insb frstor inc out rcrl ljmp pop pop sub aaa xor loope and add fnstcw xchg mov xor roll mov (bad) js sbb jmp add loope insl and pusha loopne pop sbb data16 xchg xchg sbb stos mov inc push and inc dec dec ss add movsl mulb (bad) xchg hlt lcall push or (bad) mov mov xchg and and je sti stc popa insb jns dec push loopne in and ret lcall adc xchg mov xchg inc nop dec push rcrl mov scas stc in cmp jg outsb adc sbb mov inc (bad) pop rcrb jp out xchg (bad) mov jmp xor subl sub into ficomp pusha mov and les mov jo push dec int3 (bad) rol cmp incb pop jecxz dec sarb jo pop adc ret dec movsb add inc or dec add sti jecxz bound shll aam stos lock fistp cmp cwtl pop (bad) mov scas push mov ret push aaa adc mov insl repnz cmc mov pop push aaa dec push mov loopne push negl js insb jne push xchg pop and xchg cwtl or inc fnstsw je sub push dec push adc dec nop xor or pop push mov (bad) in ss push add je leave mov xor and (bad) sub xchg mov in and add jb xor mov int cmp push (bad) imul pop stc out lds mov mov sar adc or jne cltd imul and (bad) or jecxz call mov cmp xor jmp popa dec sub mov lret add inc dec shlb cmpsb out es (bad) mov push xor pop imul in add test (bad) pusha fildll dec das rclb pop xchg inc adc mov sbb sbb scas push popf iret dec adc lahf pop pusha out repz push mov jb in pop pop and xchg sbb out and stos movsb sbb movsl sbb push dec xchg add dec hlt mov lock aas mov gs loopne repz or xchg lret sahf nop or int3 movsl mov jno pop (bad) cli cs lret jmp aam clc into cmp lret xor sub sub xor test sub xchg lea push dec push outsb icebp es insl adc cmc lahf xchg adc and cmp dec test sahf out lret pop cld stos or dec inc mov xor cmpsb xorl pop cmp mov call (bad) test stos dec cwtl or cltd mov pop xor or mov mov push dec movsl pushf aas ljmp inc cs loop scas mov add lock push je add fnstsw mov and push movsb out jle scas stos in arpl push xor jmp inc and add mov dec or push subl cmp xor stos les stos push (bad) sbb mov inc test pop inc push into jge (bad) fsubl dec (bad) fbld add or (bad) cmp fisttpl fimul loope lds add rcrb fwait jmp pop clc xor push add pop inc pop repnz nop dec js push pop test push sub cmc std mov fnop mov fsubl mov and mov movsl push or mov or push jl cmp lods push dec popl dec xchg mov xchg xor out lahf aas push or mov mov xchg cwtl xchg sub xchg inc mov mov test (bad) clc int3 and nop sub and fbld je cli pop in stc add xchg insb and mov mov pushf (bad) int insb sbbl mov outsl jno pusha incb (bad) hlt xchg xlat or aaa and pop add sbb std dec cmp (bad) and add jae pop push sar push loopne in lcall in and pop (bad) mov in push inc out pop mov sub mov sbb mov and int xor ret in xchg cmp ja inc ret mov ret and jo sub add sub xchg dec inc je addb xlat add jmp pop jne dec inc fs dec add sarb adc je mov inc xchg inc jmp xchg leave cld sbb xchg in mov push mov xchg or mov ret scas lea pop loopne mov cmp mov mov imul je jl add or push cmp test inc mov (bad) movzbl (bad) push imul dec sub cmp xchg and jg sahf adc cmp mov es cmp cs push inc mov xchg inc jae fisttpl xchg jge and fistp cmp xorb (bad) into gs in (bad) push pop std inc push sbb cmp insl push dec sub pop sbb xchg arpl pop pop bound inc mov jmp xchg popa daa push mov inc outsb inc nop sbb inc xor out mov popf nop mov xchg or es stos inc inc push pop (bad) cmp ja test cwtl push out lahf push dec mov mov pop mov mov xchg add sti sub xchg pop aam aad and and stos cld das cmpl fbstp and iret loopne iret xor xor test data16 fcoml ss movsb dec push push mov fisubl sbb es lahf xor add popf push into ja sbb or andl inc mov outsb bsr shlb cmpsl jae (bad) ja sbb cmp mov insl xor dec aas ret fdivrs pushf xchg arpl in cmp pop and adc inc lods daa mov push mov and inc dec and cld jo mov jg jns sbb add popf xchg jg inc pushf pop pop orb xor pop mov cmp lock mov adc sbb inc push sbb fwait outsb cmp (bad) jp inc lea sub xor or bound fcoml stc fdivs mov out push xchg cmp into sbb (bad) jb xchg test mov mov xor adc pop fsubl jg lods ss lret rclb aad xchg sahf cmc mov bound int3 inc outsl mov sub popf cmpsb adc cld jns loopne imul cltd iret xlat (bad) push cmp push aad adc sbb scas pop pusha cmp (bad) inc mov mov push inc add sarl shl cmpsb jle dec cmc sbb in jb push add stc daa adc mov xchg mov movsb in adc adc and scas cmp daa mov insl rolb cmp clc inc out and xor sub add sbb mov ss in aas dec insb ljmp std pop or dec mov hlt adc jo inc out inc loop jp jb,pt loope add insl (bad) cs mov and mov mov inc mov addl sub data16 popf push mov sub aas les and int3 popf ja popf lods mov test sbbl fdivrl dec inc pop or rolb mov push add in rclb outsl enter mov sbb rorl mov mov int3 in xchg adc jmp in pop or mov sub arpl xchg cld push sub lret sub dec aas push test testb in sub xchg and fisubrl (bad) js inc mov enter popl stc data16 or push stos hlt out xchg pushf xchg or fdivrp mov ret jecxz dec movsb sbb xchg and in sbb push out or in roll aad shll addr16 mov iret mov pushf dec dec aad mov lahf push inc int3 in enter dec jb sub lods test mov (bad) daa (bad) jo lds (bad) jge ret pop (bad) dec mov xchg xor scas add pop or adc xor cli dec and push xor add xchg mov test mov test xchg test dec cmp scas loope xchg stos sahf loope jecxz push hlt aas sub adc ja fs sahf in jne fdivp push push jnp sahf stos mov jg,pn and inc stc xor in mov add xor xor xchg aam loop inc xchg mov jge insl and mov or stc sub or mov dec dec outsb push sub nop inc xchg jle inc ljmp add test das sub add js popa and and xor in xchg and adc mov dec mov outsb fldl pop icebp push mov out repnz xchg repz ds push stos adc jne add push and lret mov mov insb and sbb rcll push add sbb sbb mov add xchg imul xchg enter and xchg int add dec push es add jb push cmpsb add and cmp out and sub or imul gs bound sub in test or xor adc lcall stos testb and es subb mov icebp xchg push adc lds jg dec mov iret xor mov jns int pushf sbb and xchg jns or jle push lock enter inc pop jle adc xchg scas enter sbb dec test jae test jno pusha adc stos sbb jle test mov push add sbb bound loop or jae loopne push xchg push lahf add addr16 sarl inc sahf jbe popw scas aam (bad) xor or xor add (bad) stc mov add mov lcall and arpl mov stos add inc hlt fdiv in xchg xor xchg ret xor push mov sub movsb (bad) and sbb test push ds jl mov mov loope and and push mov pusha jb xlat adc sub xchg iret mov mov sub add imul pop jne (bad) inc lret push jg pop cmc repnz push int jo jle std and pop add scas and ret sarb add data16 outsb movsl xchg xor sbb xchg xchg adc test test pop pop (bad) loop outsl dec dec daa fs into cmovnp pop mull es insb outsl xchg mov jnp fidivr mov ds dec mov leave xchg (bad) xor sub inc mov mov cmp jns pop clc loopne lods jae jb aas cmp pop pop pop xor aas add cmpsl mov dec push pop shl cmp and aas movsb mov or loope lock xchg popf fnstenv rolb (bad) xor scas fld test ljmp outsl push mov xchg fcoml pop inc cmp sub mov jge mov daa aas pop jmp daa sub push jae and pop jbe loope jg cwtl (bad) inc adc movsl rorb gs (bad) push xchg addr16 or push imul push inc pop inc das je add inc mov sti and ret fisttpl lea mov les insl repz sti and jle add es js push add mov jmp mov clc repnz jl pop jg jne out popa xchg and dec (bad) xor int3 out test je inc cmp bound (bad) fistpl cmp mov (bad) sub xor fidivl inc add mov pushf jecxz cld hlt mov test adc pop mov movsb pop cld lods fstpl addr16 xlat aam dec rcrl stc cmp and mov xchg loopne pop mov mov dec sahf xor mov clc fistpll das test pusha sbbl stos mov enter (bad) dec pop mov or into mov and andb mov test jp stos xor jne mov iret add icebp and sahf aam pushl idivl push movsl jno xor jae pop es cld add mov fiadd shlb pop mov jnp xchg fistpll cltd sbb push mov into out popl cmp cmp icebp das pop jb,pn test mov gs jl adc jns in cmp mov popf hlt xor add in mov insb xor pusha xor les cmp movsb out mov jp gs loop mov adc jnp insb xchg mov jo and sub inc cmp ss cmpsb jnp cmpsl xchg aaa ret frstor sbb int3 pop push mov adc stos ds cmp jmp mov shr cmp sahf movl jbe mov shll outsb sub jno fstpl roll mov dec cmp out pop xchg ds mov push (bad) sbb (bad) and sub fs xor push outsb adcl mov (bad) xchg ja xchg sahf xor cmc jo (bad) mov subl mov sub pop add (bad) in add sti mov cmpsb aad jo loop data16 fwait jecxz (bad) xchg addr16 leave nop or sub xchg insb jo test sub ljmp cmpb push aas mov fcoml dec lret adc adc std xlat leave test fistp mov or jecxz scas aam rolb inc int fwait dec jge das inc std xor sbb cmc pop and push jns insb add push xor test pop pop int3 pop movsl lcall cmp push (bad) jecxz pusha mov dec rol aam fsubrs xchg fldcw aam jle or je clc pop adc movsl dec push (bad) mov nop insl sbb das mov movsl pop sub (bad) int3 dec jcxz jp sbb sbb cmpsl stc inc (bad) fwait out scas sub or div or push pusha in daa scas hlt in push fsts xor inc mov outsl mov inc jo bound js and cmp out cmp ja gs mov xchg cmp adc test sahf mov fisttpll gs mov inc cld testb lock add pop pushf and pop inc pop stc push jne lahf dec test lods cmp stos jl dec add add imul push xor push es inc or sbb mov ds mov push mov jnp adc call decb jge xchg (bad) fidiv aad (bad) es cs dec jecxz iret jns into push jae test push add lock push or sti (bad) mov out xor popf ficompl xor aam adc in jg dec lret inc add imul dec insl outsl enter out cmp and cmp jp cmp jnp fs int3 push pop sbb jp adc inc mov sub sti cmpsl repz fstl push in jnp out test adc xor pop enter and arpl popa out inc icebp cli mov xchg loopne es pop dec mov jno rolb or xlat mov cmpxchg int3 sti jp fwait xchg loop insl nop fdivs jb push mov aas add dec cld mul or addr16 ret mov push aas dec push mov mov mov sbb cmp lret jbe jo lret gs in xchg xor sbb pushw sbb xchg fcmovnbe comiss fucomi scas sub clc pop test (bad) hlt adc mov data16 movsb add shlb add add into sub ja out adc in movsl push push outsb add mov ja sbb cmp arpl xor mov sahf and mov or out pop dec jnp mov repnz jl int xchg out pop idivb jb jge idivb lret mov std je push fmull ljmp test cmpsb inc in jns das cmp mov or mov dec mov dec cmp xor incb out lea sub dec push inc mov jb (bad) mov cltd sbb jo add mov jmp es sbb cmc aas inc scas push mov loope inc xchg out call inc mov mov sub (bad) jl adc and int3 dec xchg hlt fbstp push push push adc outsb xchg push nop movsl sub sub jae add imull dec sarl mulb bound div or cmp add mov and adc jnp jno mov pop ja jo fildl aam mov xor pop push lods mov dec ret jae into jmp sbb jns jae dec adc movsl inc inc mov dec pop cmpsl addb xchg adc adc push mov pop les insl push push outsb cmp sub push jns sub sbb push and lods add jb xchg mov into and adc repnz ficomp xor lds lods cli mov repnz stos imul ficom cmpsb pop ret insl rcrl adc inc xor and add insl je lcall aad outsl push mov aaa stos xor mov pop add mov mov sub lahf out jae and int3 or dec in jns das push outsl (bad) push xchg les mov push int ljmp xchg cltd nopl jmp stos add mov pop sbb lret outsb loop dec add jmp aam or mov and std data16 out dec add mov clc mov mov sahf je call outsb push jns xchg pop jno push xor test leave mov test or xlat testl sub pop mov addr16 jns imul dec subl pop xchg shl insl sysret mov jnp rol lret insb fisubl das nop inc inc sub push stos insb sti mov repz mov mov push std fwait test fidivrl mov arpl js inc cmp insb sbb xchg test pop inc fidivr adc cmp mov add adc andb push pop mov add andl (bad) rolb mov xchg cwtl sbb jle and sub (bad) jo orl (bad) jg cmp or xor mov push and frstor rcll mov mov idivl or test sbb cmp xchg xchg lcall hlt mov stc pop incb scas out push jno imull loopne inc inc mov dec jmp pop nop inc sub inc xor dec xor and xchg jmp push movsb cld pushf push add xor xor push cmp data16 jle cli xor imul sbb aad jecxz (bad) fwait xor dec cwtl jo or orb notb nop scas push mov mov sti das lret stos mov push mov or bound pusha es jmp jecxz mov loop rcr adc cld mov inc mov sahf and cwtl out mov mov jge mov cmpsl (bad) outsl cmp mov cwtl pop jge push dec jnp leave pop sub dec sti push push loop nop mov cmp cmp push ds cltd js mov inc and mov add mov add divl lds add (bad) xchg push in adc aad mov inc mov mov test cmp push xchg mov dec enter mov and fwait jl test xchg and mov push pop sub and push pop in sbb inc mov push push xchg xor test or outsb mov scas ds push int add cmpsl jl or sbb and lea lret adc sub xchg outsb xor (bad) ss and loope xchg adc mov popf push lahf (bad) jne (bad) push es cmp and sbb inc lahf mov or (bad) lret wrmsr xchg adc push aaa and sbb xor cmp xor mov mov test push test sub pop xor and inc xor dec xor mov ss mov push cmp ds rcrl (bad) xor mov push aas jle xchg lea mov or cmp lds xchg scas and pop lahf movsb (bad) mov cmpsb sub xchg mov test pop sub fildl das xor inc jle pushf jno test xor xchg add sbb xor mov adc jno xchg sub fdivrl mov flds scas mov negb lea add inc mul std inc lds push push add subl das xor out add and pop pop lods repz cmpl mov fist xor outsb pop adcb lahf sarb out push or pop lock xchg cmp clc and jp out mov pop inc arpl jbe roll decb sarb mov lock inc popf sub mov iret jb push (bad) cmp push sub dec cmp cmp pushf repz lret mov or jne jge adc and fs dec or mov inc and out aaa iret data16 aad jne in syscall inc je jae add or call dec rorb and mov or mov or dec scas movsl test sbb pop jp pop xchg dec outsl fs mov pop push mov or aas (bad) push (bad) cmp cmp adc std sub pushf add fldenv lods push lret and sti jb jle cs arpl adc mov subb rcr pop sub test je ja and les popa mov jo push cmp data16 sahf pop aaa int3 outsb push jp sbb push inc (bad) lea fistpl xor cmp adc inc data16 adc repnz inc xlat or and jo cmp mov or mov mov pop popf and pop (bad) out add ljmp dec sub aaa in push jae pop mov pushf mov daa cmpsl les jo aaa (bad) mov clc push mov mov in popf (bad) sbb jmp push dec jmp cmc bound repnz repnz int3 pusha jbe cmp and pop xchg dec (bad) call fs xchg push xor sbb add fistpll popa (bad) push sahf xchg je mov mov push xor adc xor inc mov (bad) cmp mov xchg mov cmp daa jg inc fisttp adc stos inc es stc inc in jle or ficoml sbb icebp and inc pop fwait adc jl jo or ret js cmp or jo sub cmp outsl xchg pusha pop adc pop lock pop jnp mov jecxz data16 lds cmp sub lea jmp push mov test push pop jbe sub jp mov pop iret pop lods pop icebp ljmp push int lock cmp mov aas js pop pusha or or and xchg icebp in and jl dec sbb adc sub lods lret pushf jle add hlt adc mov jge loope xlat repnz inc sahf xchg negb jae jnp add lahf xlat fistpll pop mov pop inc xor xor inc jnp test sbb or add xor imul cmp pop test in daa pop xchg or adc push andl adc xchg aad and es add gs aaa aaa or mov cmp pusha add push pop cltd ss fisubr inc lret jno xchg sti test or (bad) mov cld sbb mov js mov xor in xchg jae xchg push (bad) cld subl cmc out push movsb mov mov fcoml mov adc add sub sub adc xchg out std pop pusha test test xor ret mov (bad) or jo or xchg push shrl clc mov jnp push fwait mov or mov inc and movsb mov jo fdivs mov push and mov (bad) in xor test addr16 add pop mov aad mov xor jae mov das loopne push xor cmp aas or cmp das add out sub jno add pop lock dec pop cwtl std fwait jns pop xchg pop inc into xchg pop out fisub add and jl (bad) stos lods lret sbb xchg or ret and add inc cmpsl pop bound (bad) sub add fwait and push inc ficompl push mov out test xchg or aas push enter addb mov jno jno pop nop adc pushl push push add out mov sub xor rol inc sahf sti test pop pop pop jo or pushf std nop cs faddl pop xor fildl cmp stos jb adc adc and sub xchg jp lahf inc daa nop xor pop popf cwtl xchg cwtl test mov and aas das cmp cmpsb cld hlt sbb push cld jae orl add flds or sbb xchg (bad) js xchg ss sub into adc scas jge fnsave addr16 pop in (bad) mov test jne mov data16 sbb add add popf mov adc pop das push xor ret js pop test divps or add jne cmp ret loope cmpsl mov sub lds sbb das push aaa gs mov je cmpsl mov dec lods xchg mov sti xlat xchg mov or fwait add rcrl mov (bad) sub push pop jns jb xor mov negb adc jle js repnz insl sub push fs push pop sub push push cmp cmc xchg call (bad) es cmpsl and fldcw outsl mov inc aas mov mov jo pushl or add into popa adc std jle iret rclb addr16 or mov cmp test test fildl outsb iret jb test into fimull cs in ja (bad) cltd cmpsb stc icebp add mov int cltd (bad) mov push in repnz and push adc dec fldcw stos (bad) and push std and sbb out push inc mov sbb (bad) fildl sbb mov pushf data16 aaa push ja mov add es notl add movsl xor cmp sub lds jl (bad) imul jmp or outsl xchg adc cmp movsl incl jp mov clc pop push dec fcmovnb shrb push movl adc xchg lock push xchg (bad) out mov adc dec lock mov insb into adc sarl xchg xchg cmp dec mov sbb lods adc and add sarl jmp insb cmp cmp pop enter jno jl hlt pusha adc and repz popa jnp xchg scas call idiv add or sbb push fstl movntps (bad) out ja (bad) lods lretw test bound cmp mul sub (bad) push cmp adc popa addl je add jl clc push test call and sar add es sahf ret and cmc (bad) jge jae cmovno lods dec jnp rorb mov rorb popf or xchg push jbe mov out xor jne cltd mull sahf push push jne pop inc or cld rorl push or dec int das or lods int3 push push jae aam mov (bad) test jl lods mov out mov outsl mov push ja mov sbb sbb int3 stos and ret (bad) (bad) jg movsb daa (bad) mov cld or lds and aas fdivs lret sti lahf or xchg mov push mov sbb inc sub xor inc cmp adc mov cmpsb pop sbb jecxz mov mov xor ds xchg sbb mov call lods cmp insb mov xchg bsf sarl lea push xor xchg outsb cld push mov into into stc stc sarl cmpsl pusha jbe hlt sub fnstenv push test add and in dec insl adc fnsave imul pop mov mov xchg fwait xchg mov fstp and add push push movsb jb int sbb dec pop xor sub fmulp and xchg hlt cmp sub xchg sub sbb pop ds pushf pushf xchg arpl (bad) mov scas popf gs lret rcrl fiaddl jge sub mov stos and notl icebp repz test cmp fistl orl cmpsl pop dec inc cmp xchg and aaa or add int sub and add xor fildl add ret xchg adc sti and (bad) mov jbe scas pushf imul popa (bad) ficomp lret insb and (bad) into gs mov popf movsb or ljmp lock cwtl (bad) call testb repnz test insb sub lods add cmp sbb test push pop mov inc das mov or iret shrl pop push dec push xchg enter (bad) pop movsb test sbbl pop bound call cmpsl jmp add add dec in dec jg hlt mov lret xchg rolb or call out lret sbb xor add mov inc fldt int3 add imul adc push out cmp std sarl sub or or dec jae push jle shll mov cmpsl out mul and xchg inc sub stos jno paddsb int lds or hlt into data16 mov negl fstpl push mov xchg fs xchg cltd nop mov lea movsl ja shr (bad) dec pop repnz jge sub lds jo mov jae imul movaps xor incl dec dec in sbb in cmp cmp pop inc jne loope,pn mov lds push lcall or repnz rcll dec jecxz loopne xchg shrl lcall push push jnp cmp pop jo dec and aam mov rorb mov (bad) add aas and xchg inc adc push inc pop jbe addb jecxz ss decb subb mov stos out int mov movb (bad) fsubrl out xchg pop sbb push jbe add cmp push dec subl inc lcall mov cmpsl mov mov repnz cmp push or jo lret ljmp fsubrs sub or lea incb aaa sbb outsb out push jno xor push outsb sti mov jl cmp nop xchg lea pop into dec mov mov push cmpsl xchg and mov mov push dec or inc movsl nop inc sub seto daa aam and daa (bad) shll add inc mov sub test call xchg lods test bound mov xor sub fsubr iret fprem1 pop aaa mov dec in or (bad) mov stos test add mov out imul test inc lcall pop cli jnp roll push or ret mov add sub jns adc pop xlat push pusha inc dec pop push sbb sub or push sbb test sbb mov scas mov push imul sti and lcall lcall stc pusha xchg push nop xor xchg dec add xor mov mov xor test sub mov sbb cld (bad) jno cli inc lods lret lock int3 xchg aas and ds (bad) xchg das pop jnp lcall cmpsb ret (bad) jge and (bad) adc lea lds pusha pop lea jo pop sbb add int adc xor into push setg cmc push (bad) cmp adc outsb out mov hlt mov jg jge push jbe add lcall (bad) mov xchg push or jp in push mov les adc outsb faddp push xchg stos cmp xchg push inc mov les addr16 test lods (bad) dec in in stc lret arpl (bad) pusha jb insl add rcl outsb cs fist jl ret shrl pusha adc cmpsl es out mov int les adc inc inc call test flds mov push mov adc add inc cmpsl or fwait sub cli xchg test lcall insb jecxz movsl rcrb cmp add mov int3 ja jns push jl add pusha sbb aaa bound push in dec jno pusha mov xchg and in mov cld pop fnop pop stos dec fwait das mov test fsubrp xchg vmovlps je nop mov xor push push sbb sbb push js xor add cmp and jge popa test push and push cmpsl arpl and push popa and cltd cmpb ss bound mov aas jg or push or cmp cli push test dec sbb mov mov (bad) ja or or fstps cmp fnsave jg ja nop add jne or adc inc lret mov dec xchg add jl push sub mov cmpsl push rcrb cmc xor scas add add dec mul mov pop inc adc lcall mov loope movsl dec cmpsl adc add adcl jnp or cmp cmp xchg dec cmpsl pop ret repz lahf mov push sarl push mov push aaa sti sti (bad) pop sbb sbb inc pop pop xchg arpl dec iret pop mov es push adc jl int3 mov cli push mov mov es jo xor mov (bad) jmp jae mov in pop dec into stc cli addb aas pop aam push cmc out dec ja insl dec jnp out jg jno (bad) out cmp push cli ja mov cwtl lods push add hlt ljmp rcrb rorb arpl fwait (bad) jno repz scas jge test in sbb push cmp or xchg insl imul cmp cltd mov rolb inc sahf fldenv ljmp ds xchg (bad) ljmp xchg sub push pop cmp dec out jg cmp cmc push sti jp movsl push and rol (bad) (bad) out icebp fcoms mov and push and daa sub mov push call xor aam push scas cmc fwait cmp xchg jno inc mov (bad) loop bound arpl rorb addr16 inc push hlt mov mull sarl pushf dec pushf dec sub repnz xor aad dec adc int dec dec popa and sahf cmpsb jb and rclb and push cmp ss leave jg lds rcrb imul pop mov cltd in fsubrl popf icebp push push out and test test add cmp std xchg inc push jge cmp or xor std or cvttps2pi sub jne negl cld xor lcall subb mov rorl adc push (bad) jae orb (bad) sbb andl movsl xchg push push jle push repz cmp xor jle jo cmpsl and xchg pop repnz loop mov adc mov pusha repz mov mov sbb cmovo xor or and cmp jecxz sbbl out sub pop lock push push ss adc incb xor pop cmp mov lret inc (bad) aas sub into flds inc jle gs push cltd push cmp jno pop insb mov std mov lcall jbe add int ljmp cmp sbbl cmp test mov xlat and sbb lahf sbb adc cmovno mov mov and push insb mov push std jno out movsl cli add lret nop roll insl arpl (bad) pusha xchg out out dec aam cmpb pop (bad) test mov stos mov push out movq adc int3 data16 dec jne data16 clc lea test loopne add dec xor xor push stos (bad) xor adc jno incb xchg jp pop aas xor push add js adc cwtl outsb or pop push insl xchg loopne dec test cmpsl xchg and push push sub test outsl xchg push mov jns dec adc in sbb es jp xchg mov adc fcompl pop loop cmp imul movsl fldt add insl mov add push xchg mov xchg sbb loopne sarl les or and jne icebp ja mov scas push cmpsb int rorl jnp jmp adc xchg mov data16 jno inc stos orl pop rcrl pop out pop test cmp sbb mov (bad) push jb fs out mov push mov sub int andl jne inc jge xor push xlat pop bound push inc jae push test (bad) push mov insb add dec inc das arpl xchg cmpsb bnd imul daa or ljmp out inc daa dec xchg (bad) gs and ljmp cmp repnz pop or mov (bad) sti or ss xchg cmp push or mov out repz sub add pop push pop sbb pop data16 mov sub decb sub (bad) rorl jb push xor inc sub sar dec mov (bad) inc stc aam fdivrs insb stos dec mov ret cwtl push jge mov movsl cmp push lahf or leave lods xor mov adc test shll adc push dec xchg sahf roll pusha ret subb imul pushf mulb lahf popf mov jnp je,pt inc mov sbb mov jo gs rcll sbb cmpsl xchg and and dec std (bad) rclb mov jae test and adc sahf (bad) js cmpsb fsubrl inc sahf mov push jns aas outsl int pop mov mov and inc (bad) jecxz cbtw mov xor pop jns jmp bound stos mov cmp out or inc nop in bound inc in and scas lods add and int3 into stos mov cltd into fidivl (bad) xchg mov popf iret xor repz pop cmpsb push test sbb scas push dec ret push add mov lods enter imulb mul icebp jb popf adc test push popl dec gs cld push xchg es sahf bound test pop int mov jl stos or mov pop pop push inc push add sub push fcoml fdivrl inc mov adc subl idivb lret xchg push push dec jne int aam loopne push xor xlat pop jge push sti and fistl push daa js jbe loop mov xor xchg adc movsb jae cwtl adc xor rorl jp and sbb or outsl adc icebp sahf leave add jae pop int3 xchg mov ljmp pop jbe inc push add or adc movsb imul sub shlb loope int3 mov mov sahf int cmp and mov hlt fnstsw jb or inc addr16 fsubl es or push mov mov add clc out testb xor popa dec jp adc mov imul xchg mov iret je ljmp sub mov adc push sbb (bad) stos cltd push dec test jmp int out sub js cmp push mov sub push mov sbbl pop inc xchg inc arpl push inc dec push push dec xchg (bad) and fwait icebp cmp sahf andl adc (bad) fst sbb adc adc (bad) ds icebp in sub insb fmul push andb push out addr16 xchg mov pop xchg hlt (bad) test mov or push stc ss sbb push push xchg mov ds int in pushf pusha sti dec shlb fcmovb cmp imul xor cmp jo ret xchg push jne pop (bad) cmpsb and popf dec jle test ds add in es insb pavgw nop pop mov adc mov dec mov push or jo push ds mov leave sub or arpl (bad) cvtps2pi test sbb sbb pop andl xor add and sub dec and add rclb jb mov push sbb xor movsb inc and xchg jmp bound push inc cli pop inc ss pop andl les sbb mov pop mov jle or jle nop testl pop or out (bad) jecxz push ret jbe inc sbb dec mov mov fsubl or ja gs nop pop insl xor push iret cmp inc push inc jno lds test cmp xchg in sub and (bad) fs ret sbb xchg ds gs insl sub je fsubl subb pop daa pop insb xor xchg and fbld push (bad) loope mov and cs fs dec data16 jb and push inc sahf (bad) jae cld fsubrl (bad) daa pushf idivl inc imull ja inc adc push inc inc jge xor dec sbb mov addb rorl jp mov cmpsb pop add cmp pop mov or pop out ja pop out testl jmp pop cmp (bad) aam negb push es jns push lods icebp test sub mov sub add into (bad) push orl or inc addr16 push mov jge inc out and pop pop adc in das and push pop inc jmp jmp adc inc push adc jo outsl (bad) jb sub pop adc mov fimul fldcw (bad) cwtl cmp adc imul inc push add xchg imul xor cmpsl rcll sub mov cld mov nop mov sub (bad) xor adc inc sub in lock xor addr16 jmp fistpl add popf mov xor xchg pop sub dec rol sbb add push and int mov fcomp fstpl imul shrb jbe pop stos (bad) ss hlt cs maskmovq idivl int fs adc adc mov fwait daa cmp es arpl test movsb outsl jo int3 add and cltd rcr addr16 std and fnsave push pop out push jl icebp sbb adc push xchg out stos sbb decb loop sub sbb (bad) outsl jle jmp (bad) and sbb movsl inc jge dec insl out dec outsl inc or es jle fcompl xor lds adc jp aaa cltd push mov (bad) test add mov push inc in ror test or aad bound inc jg aam mov iret (bad) arpl adc fistpl dec sbb xor push (bad) xor or popa out rclb mov imul popa pop add psubb test cmp (bad) dec mov (bad) lea cmp loope and push lods leave (bad) testb aas mov lgs sbb (bad) out aam jecxz xlat loopne ror in cwtl rcrb xor (bad) sbb std (bad) cmp sahf out xor pop cmp roll test sbb or dec sahf push and rcll adc xchg mov mov mov xor add sub stos or sarl push insl les aam test push fidivr cli mov stos or push fwait xor cmpsb jb out jb inc xchg mov ljmp push sti fld sbbb adc test dec xlat and cmp lds enter orb sub out hlt cmc cli cmp or sub pop mov mov sub mov lods mov movsb jno and mov fistp mov jbe pusha je lds cli jae adc cwtl pusha sbb adc inc xchg inc or dec sbb jnp or nop inc cmpsb add adcb js out push stc outsb out xor xchg nop into test dec fisubr cmp xlat pop lret out mov inc shll (bad) (bad) ret insb dec push adc push push cmc ret popf adc rcll inc jns sub nop cmp cmp and jnp sub xor loop jle adc inc test inc faddl sti sub lea sbb push mov push lock sub mov sub mov iret xchg int3 mov movsb add pop mov lret cmc push mov jge cld and les xchg lods clc xor jnp stc cmp shl add mov out push jno pop rorl sub stos lods sbb or xchg in mov pop mov fcompl pushf fidivl mov scas out test data16 cmp inc add jb aad add adc jecxz cld arpl xor adc lds jl (bad) cmpsl pushaw into push lods hlt mov repnz pop cmpsb sbb jae mov lcall dec sbb sub inc pop cltd cmp pop sbb and jnp mov pop dec pop faddl aas daa repnz lret ficompl inc xchg and loop nop and test aaa and scas pop add mov jl lds or data16 mov xchg push out xchg xchg andb sti pop jo inc daa stos xlat out dec jae test pop loop mov add cmpsl arpl jb fdivr movswl pop fsubrs stos pop leave pop or xchg jmp (bad) sbb and mov data16 pop in pop jae or add xchg std (bad) jno inc cltd insb lock xor inc das in or insl scas cmp lret mov jns inc pop bound xchg inc int inc js or movsb cli movsb dec repnz jns add jnp push pop xchg mov out dec pop mov inc aas mov mov mov jg leave adc rcr mov push sub xor frstor or push arpl pusha int3 push std jge jp bnd mov add mov inc ljmp insb sub jg sub pop rcll orl roll pop adc sbb mov insb out and mov inc lret inc repz mov sahf mov imul sbb push aam sub lock jb adc pop jno gs xor pop mov dec pop addr16 call frstor cmc cmp mov sub jge and sub add inc pop mov pushf jp insb sbb (bad) or dec xchg aaa pop icebp (bad) cmp fadds in std jp test clc adc mov mov pop test pop push fsubrl aaa lds movsl int js lahf push in mov aam rcr scas and sub test add test inc mov cmc jnp mov dec mov mov stos cld jb mov adc sahf mov inc mov mov lret ret pop out mov dec sti jno dec cvtpi2ps ds sub aad test cs stos ret adc in mov outsb scas and lods xchg and in mov push xchg mov inc or cmp stos clc ret dec sar mov push mov jo mov rcrb insl push cld inc jge sub cmc add jns addr16 addr16 int fwait insl push leave inc sbb sub aaa cmp xchg pop setl inc dec out call sbb ja movsl mov js push in dec pop imul dec (bad) jmp adc pop xchg insb and dec or add add cltd cmp cli cmpsb ret lret in inc mov cmp cmp and add cltd pop test mov scas jg scas or arpl inc mov rcrl imul xchg movl sti imul decl push sti and orl outsl (bad) mov cld test adc popf mov add imul add movsb push xor daa mov sub cmpsl dec dec dec (bad) jle sbb daa scas lahf ret and lods fist pop mov data16 sub inc ds int out pusha jnp adc xorl and pop leave or inc mov ljmp incl xchg mov inc jbe js sarl push fldl lahf mov xor mov fnop pop push stc and popf daa mov add call or cli bnd insl stc jne pushf movsb sub mov daa out pop popa or adc mov pusha push and pop sub mov out push in or enter aad inc roll gs hlt (bad) mov cli inc or (bad) pushf daa ret inc cltd cltd (bad) pusha mov test jne leave or mov xor mov ds inc and aas icebp scas xor outsl outsb (bad) fist insl jno xchg or adc dec sti cs inc push outsb add dec adc mov cmp pop and rorb adc mov adc adc movsl pop sbb out jae arpl inc es xchg mov xlat jecxz adc mov int3 sbb push in (bad) in mov repnz daa daa neg rcrl popl daa arpl je add aaa xchg push pop jnp pushf mov sub or or enter ficoml hlt mov xor sub and fbld es aad out je test out (bad) and xor shrl movsb adc cltd pop icebp imul shrb mov ret les jmp data16 pushl and and mov pop xor rol mov mov bound lods xchg mov arpl inc cs mov and dec inc lds xor xchg lcall inc mov xor rcrl adc ss mov xchg pop mov test adc or and jno or leave add rolb (bad) xor adc sub cmpsl xor out sbb fcoms testb sbb inc cli xchg roll cwtl (bad) cmc stos add lret dec pop sarb cmpsb out cmp pop (bad) lds push push or inc or pop shrb cmp cmc adc mov cmp mov pusha mov pop or jno push sub loop test sub pop pop icebp pop sbb outsl pop cmp push cmp push dec push pusha divl xchg push pop jg mov xor inc clc shrl inc pop or js rcl inc lods or les movsl mov dec in xchg and out push movsl (bad) pop adc pop cmp gs clc test lods jecxz cmp mov sbb dec push pop gs outsb or cmp daa xchg jb (bad) push pusha sbb xor subl popa arpl rorl adc push aas es mov jno int into sbb cmp inc cmp pop inc cmp pop scas insb jge data16 jb pop dec mov add fcompl add inc aas fistpll cs inc sub or jle pop or outsb mov lods jae mov test jge sub mov lea test mov test and pop loopne sub ss add js cmp inc sbbl int daa lea mov mov xor inc inc stos lret dec test dec inc rcrb std fdivs add jnp aaa push add rorl cwtl mov jl push inc sbb dec adc or xor mov adc daa das add push movb mov (bad) push adcb push mov push aam sub icebp or pop inc xor loopne inc (bad) adc mov movsl fwait or add shrl inc pop inc add (bad) mov in (bad) imul jno clc pop mov inc sahf leave cwtl test mov rcll inc out xor repnz adc mov arpl and xor mov pop mov mov lahf sbb lods sti dec xchg pop test pop xor xor or int3 ja cltd inc test test sahf mov icebp dec test adc push pop push sbb pop inc inc test sub rcr inc flds xor or in or cli lret cmc and xchg test jge cwtl aaa push xchg sub sbb les in (bad) in call push xor adc enter movsl insl mov (bad) into xor sub sub jl cltd push aad (bad) jae nop fwait stos adc mov jb fidivl aas xchg dec gs mov sub or daa mov dec mov push call and mov push mov mov dec jae fbstp test mov movsb add mov aas sti jge mov jmp pop fdivp aad insl mov xchg jle addl repnz pop add push sbb das sahf sbb pop jo int test ja pop add outsb mov xchg mov arpl gs sbb in daa cwtl sub jg adc mov jo,pn push test jns mov rcll xchg jae movsb push add and cld repnz (bad) inc daa xchg dec es dec jbe pop insb imul mov sahf inc icebp sub xor xor cmp push sbb fidivl xor clc addl mov lahf push push sbb mov cmp xchg pop (bad) mov in loop into fidivr sahf idiv jmp xchg dec pop add mov jmp out (bad) call mov (bad) aas rclb mov pop cmp gs xchg xchg daa insl mov dec addl pop ds pop push xor lods addl and add jno push mov push push fisub dec inc lahf jnp add mov cmp mov addb aaa push push push test test das mov mov jmp mov mov add call jbe call xchg adc add rorb int cmp and fs mov test std add bound pop mov in test test daa mov fistp (bad) ret jne js lret xchg inc fcomps aas add push xchg fidivrl dec movsl fcmovnbe and jmp dec fidivr push adc popa xor insl int3 outsb xchg stc std insl pop and sti inc ljmp icebp (bad) popa enter repnz pop movsb mov std fistl insl push jbe inc sub mov sbb push push lods adc sub adc test movsb test cmp lret jmp xchg pushf adcl mov pushf jno jl xchg cli and jne xchg scas rolb ficoml cmp inc cmp sbb jnp cmpsl sbb mov movsl fisttp adc cmp aas test fcoms (bad) mov and push lahf cmp pop mov push cltd or shlb fcomp and jle pop jno,pt outsl fs adc mov mov lock adcb test xchg pusha dec sub sbb cmpsl lds sahf push lock stos sbb dec push pop push out in sub pop lea cltd pushf outsl sub and mov mov movsb xchg rorb mov imul sub push dec hlt test int int3 pop sub std xor and mov jnp fsubl and push (bad) leave mov out bound lock (bad) pop xchg sbb xor sub sar xor (bad) mov inc pushf lea sar aaa adc sub or and cwtd std dec data16 push jnp add dec movsb mov push sub push int3 add or fs je and fwait and jmp pop push addb movsb inc addr16 mov repnz cwtl or (bad) xchg and (bad) aas mov outsb push sub out fidivl push sahf push popf pop adc aas sub les mov cmp xchg sbb inc cmp ss and gs adc cs (bad) das into (bad) sbb andb sahf and stos call lea sahf sti dec addr16 jo ret loopne bound and hlt movsl cmp add scas xor lea inc mov sahf and inc add and mov dec sahf mov xchg and push test nop fwait adc lds dec or push fadds and std lcall xchg fwait jg jb aas in test movsb add lcall sub fs outsb sbb sub ja and (bad) dec call sbb xor sbb jl pop mov and sbb jge adc das and fs rcrl add mov test call dec mov inc lret cli xchg push fildll adc mov cltd pop lret bound xchg in and push mov and push fwait pmaxub mov je cmp enter in mov pop mov std mov mov lahf popf jns aaa sub fdivp cmpsb outsb movsb mov mov sub (bad) push sbb cmp pusha out es xchg xor data16 xor fmul ds fwait mov jb push sub push out mov push les push and stos movsb push lods cmc ja sub xor mov ds inc outsb cli fild sbb pusha jg inc pusha jnp cmp pusha jae jns outsl fbstp imul or xchg mov mov pop mov or mov or mov jmp cmpsb or mov test scas or or mov add or jge scas or mov or mov or (bad) popf cmp push cmp insl pop mov dec sbb in fidivrl (bad) mov add lds sbb pop adc (bad) sbb dec int3 or bound cwtl lods ljmp and adc lods repnz add aam mov call inc jae add enter mov and xchg xchg xchg sbb lea int3 inc xchg outsb cmpsl push mov add pop in shll jle pop pop ret sub std push sbb dec mov fidivrl jge pop push xor jns (bad) loopne int shrl nop lret pop cmp (bad) clc (bad) xor popf cmp jnp dec or dec cld inc loope pop pop sub add jnp sub xlat mov adc cmpsb push adc arpl test andb add jg,pn pop rolb jmp pusha mov jnp cmp fistl pop insl movsb or in inc pop nopl les movsb insb or mov pop pop insl jg cmp leave mov jns push inc dec and sub inc pop cmpsb mov mov movsb ds mov add fildl cmp add add push je mov adc aam fisubl sub (bad) jecxz push jle jmp push sahf xchg sub sahf push jbe or iret xchg inc jae jo dec mov out dec mov jns outsl imul insl or pop adc enter movsb mov loopne fnstenv iret pusha xchg dec push pop movsb mov jne inc lcall repnz mov das lret mov push mov mov pop movsb inc nop out sbb jb inc pop (bad) xor fimul shufps fstl inc fldl pop cmp dec in mov or ffreep jg pop lods fmull sub arpl and inc movlps adc xchg jne or mov call or dec push and xor cmp (bad) or out mov inc push mov cmp mov mov andl add subl jle,pt nopl push xor negb enter push jbe jmp dec mov dec iret std inc lods into pushf cmp ja or dec xor mov mov mov push or out imul xchg icebp jp mov loope nop and das addb pop cld pop loop out notl adc cmp repnz popa inc in pop push nop ja (bad) xchg pop fimull das jne cmp mov dec dec xchg add popl jae xchg rcl gs xchg shrl loope je lahf adc sahf testl sub dec flds les (bad) mov sbb adc ja pusha xlat pop pop pop mov adc dec dec sbb push popf frstor rcll (bad) rorb jp lcall ds and jg or xor rol (bad) adc cmp mov ja or push mov rorl jns mov ss (bad) mov cmpb mov std pop fidivrl inc pop or test jp mov aaa xchg or jne popl and (bad) nop cmp pop ret stos std push das cmp (bad) add nop (bad) mov stos inc mov mov and dec cltd fs xchg inc dec dec xchg es xchg cltd mov and mov push sub sub xor inc test nop mov ja clc sub and mov (bad) sahf icebp incl sbb test daa std inc sarl test jecxz fs shrl mov mov pusha xchg mov jl pusha loopne dec aaa mov dec subl xor push mov pop xor push (bad) lock pop mov jae cmc (bad) ja push inc jnp mov rdtsc mov xor std or jo test decl push push js (bad) mov daa aam add add push cmpsb rorb pop sub insl sbb xchg add sti xchg jg mov test pop jl movsl mov cmp sahf and adc pop xchg push fdivrl stc mov movsb push scas test adc sbb jmp push es sbb jno cmp int daa lods or mov push sbb pop adc mov add sbb out pusha mov cs jns push ffree dec ss aam jno add sub dec push inc or xchg pop jbe and add or and push es pusha dec pop loop out push jecxz pop fcomp inc pop inc into sarl mov (bad) imul jg mov inc mov pushl mov or dec inc xchg gs (bad) (bad) cmp sbb aaa repnz adc inc divb insb add pusha daa rcrl cmpsb stos mov fstpt je scas add jbe inc arpl push pop popa daa jo inc push call pop jmp mov sbb fs daa or out nop imul xor adc pop loopne jnp xor mov ds pop jnp jo,pn lds xchg mov jp push inc aaa in xchg cmp jl adc mov mov lcall add inc push adc push loop ficompl cmp dec mov and sbb mov fcomps jge pop in jb ja or inc (bad) jbe adcb in xor adc movsb mov aas adc movsl pushf add xchg jle gs js mov sub sbb lahf cltd mov int3 call das fisubl addr16 fwait insl mov sti xor xchg adc mov adc jge xchg push mov xchg (bad) sbb sti scas cmp sbb jmp add pop sbb and lods adc sub es mov ljmp mov sbb adc shll mov push lods loop int3 ja dec lds pop arpl inc jb lret popf and stc xchg cmp cmp divb jo mov or add or jnp sub dec movsb sbb stc sub push aas mov mov pop cmpsb pushf and clc lods inc dec push fwait mov movsb sbb jg sub scas xchg aaa pslld and shr and xchg stos cs jo mov jl leave mov in enter mov arpl mov jge and push xchg jno jno clc mov cmpsb mov std inc fsubs fwait add and adc addr16 imul loopne ds jb test mov out jmp and lcall call lea mov mov cmpsl mov je or lods gs into imulb sub lahf pop jb jnp jne mov add jno push shlb movsl mov and aam data16 mov jae mov sti pushl pushl lcall jecxz jecxz add out and imul push je outsb add cmp pop push push and gs jno insb xchg or xor and out cmp cltd inc nop adc xchg xchg or sub jb test lret lds xor jae push mov sub lret cmp (bad) sub pop mov call movsb inc aaa popa out cs movsb push call insl lret lret jmp jae inc and out loope jae fcomps pusha cwtl push lods stos adc push mov bswap scas xor or mov cmp xor cltd sahf xchg lock and add pop lock mov sbb mov scas loope insl add ds es jno fwait push sbb sub and fwait sub scas inc in leave xchg les out mov (bad) test and test sub movsb addr16 xchg mov mov mov (bad) pop in xlat pusha jae aas andb (bad) pop mov cwtl and cmp hlt mov fs lock mov and dec cwtl push mov jle jnp iret or xor mov stos inc mov sbb add lods adc cli pop jb pop and jle push mov pop jecxz sti gs nop pushf dec pop lea loope outsb clc inc mov fbstp (bad) popa sbb lods roll pop cmpsl out rcll outsl sub mulb jg push jge dec mov icebp in outsb scas fidivrl sub (bad) sarl and enter add mov fild jl jge mov mov xchg pusha xchg adc sbb and inc xchg js push mov sahf cmp mov imul pop push add lods test inc mov adc inc nop add add dec mov xor cmp scas and orl mov and push sbb clc insl sbb int3 mov out mov out std ljmp (bad) inc mov cmp fnstenv or jecxz cltd movsb cmp (bad) imul and mov or sarb jp ss (bad) or sub femms and cmpsb mov in pop addl cmpsb push shrl push in add mov into flds add jno movsb sbb pop nop pop dec gs insl pop cmp or call push negl rcrb mov out in mov mov clc repz jp dec jnp push jge sub mov cmp sub arpl xor mov cmp push cltd movsb xchg mov dec lock sub stos inc adc or clc ret jg repnz nop ret imul sbb cmpsb call imul or jno mov jg enter inc cmp nop int3 mov inc or (bad) or xor lahf pusha pushf cmpl xchg dec inc xchg lods decl xchg add add jp or hlt mov jle inc das push push push jo cmp ljmp xchg test (bad) outsb ds push subl std jp sub es lock pop and add fmul dec jmp jmp mov or add push leave (bad) mov pop lret inc push add jle sbb sbb imul xchg jge mov jns lock add cwtl dec xchg insl add adc sbb inc sarl push nop mov ficompl movsb insl jle fiaddl mov outsb pop popf jp mov jae decb mov adc and dec ja dec mov cmp imul enter jge sub sub imul ds test cld inc or mov dec lea mov ss pop int3 mov inc add pop pop es mov aam adcl mov maxps in loop decl sbb cwtl inc fbstp ds push pop cmc aas ret pop test jge rcrb rclb and mov and jmp jae push mov push mov xchg test insl adc clc fwait scas jecxz addr16 cmp cmovge lods pop fmul sahf push inc sbb fadds shr push movsb and adc pop pushf and ds les cmp inc or add pop les add cs push outsb mov (bad) push xchg xor inc and or repnz and or add out cmp xor notb push scas movsb inc adc roll sub xchg inc sti addr16 bound dec adc pop icebp movsl in sub ds cwtl xchg and pop ljmp adc and inc in push rcrl xor stc repnz or ret rcrb push jae push mov arpl popa lods add lahf aaa adc or aas cmp aas (bad) push sub cmc cwtl aam adc mov sbb shrb inc or loopne mov inc ja xchg mov dec aaa push mov dec inc jg inc xor pop sbb (bad) mov ss jae aam test cmp mov jo ret std mov lds test sbb aad jle (bad) push stc loopne dec sub jp mov mov add imul mov test insl arpl mov adc cmp js popf adcl push rcr addr16 jg add leave push sub cmp cmp dec mov mov mov mov push scas lea xlat nop inc xor and xor mov jecxz cli xchg and (bad) xor movsb mov xor lret aad jae jl inc inc dec adc sbbl push add rorb dec lods mov (bad) adc jl enter xchg xor test adc (bad) dec adc fwait push jns call adc and add lret pop cmp cmpsl pop xor adc inc cltd mov (bad) fcoms cmp xchg insb mov cld pop jae xchg frstor mov xchg jae icebp jb (bad) and pop test or lret push test jo sbb jp pushf fstpt je adc shrb xchg pop mov add and (bad) ja mov ret cwtl inc test push push test or add int3 mov pop xchg dec xor mov add xor je stos push inc fimull sub xor pop push ror adc cmp mov mov js fldenv sbb je cmp jno mov xchg popf sysret push test mov cltd mov rclb xchg lcall jl mov and iret insl inc adcl push inc (bad) xor mov push inc mov insl sbb inc inc mov pop incb lret outsb outsb mov jecxz push mov (bad) lahf xor dec fcmovnu sub in dec dec cmp jmp jg or mov aaa stc push cwtl out bound mov sbb test pushf dec mov movsb enter jo sub mov adc mulb insb jecxz cmp (bad) dec and mov imul call sub jnp daa (bad) push sahf aaa and pop test dec push cmpsl or or xor icebp repnz inc test or jmp mov mov pop inc dec pop mov mov sbb popf add test movsb and and ljmp xchg xor dec (bad) int leave jne into xor inc adc adc mov addr16 sbb pop sub andb arpl cmpsb lods jl pop dec cmc and xor rclb gs ret cmpsb les sbb icebp (bad) dec pop and pop cmp add mov push or sbb test mov test mov pop mov jbe pop push (bad) int3 inc dec xchg cwtl xchg xchg popf xchg lods decl dec repnz jmp adc cli adc out (bad) fldenv sahf rcrl icebp (bad) (bad) aad shrb add movsl push sub in add lcall daa sahf adcb xor dec mov inc mov lcall loope inc mov inc addl fwait dec lahf or pop adc cltd inc pop adc push inc and adc cld scas dec pop das and subb push cs jle popa xchg (bad) testl aaa dec pop push inc ja add fstps daa fsts das jg xchg mov mov orb jne (bad) jbe (bad) jle outsl scas adcl jmp and arpl dec and and xchg (bad) dec out loope add and outsb inc imul adc mov js adc sbb or imul sub mov dec mov adc adc sbb mov stc cmpsb xchg out jecxz inc dec and adc fdivl jo or aaa push pop clc xchg rcrl pop push aas xchg fildl inc fisubr inc cmp jns cmp lds jo sahf dec lock inc push push pushf push jb lds les pop pushf adc in icebp mov mov mov pushf pop in sti push pop inc outsb jns inc cmp fistl arpl cmpl or loope mov xchg fwait loop inc push aad xor repnz in adc jne test sub pop repz inc xchg (bad) fimull cmpsb (bad) cmp movsl sbb adc icebp insl pop loopne jne push adc xchg ja xor xor mov sahf orps mov out xchg (bad) je cmp bnd rorl or fs psubsw xchg xchg idivb aaa cmp sub pusha mov fldcw mov and insl sub es fiadd mov movsl xor movsb xor push js jmp mov sub and jg mov cli adc xchg aas add imul push pop adc (bad) arpl or and cld scas add inc xor nop movsl add cmc das mov mov hlt xor sbb sub push repnz jp adc dec mov movsl mov mov dec and into fidiv cli sbb les mov cld test xchg daa lods sub data16 xchg lret in fs inc mov mov and mov xor xchg jle pushf add leave xcrypt-cbc inc mov mov xor dec push xchg push jo mov push scas mov mov pop xor push (bad) repz jbe fstpl xchg popf add and ljmp std mov pushf sub lods adc inc jne sbb sti add (bad) insl (bad) adc stos mov movsb pop push fmulp lock outsb (bad) mov movsl sbb cmp lahf insb mov fimull ret sub mov popf ret aam xchg bound inc (bad) lret enter xor dec jno test push push int3 sti mov push push jl adc jge pop ljmp out sbb outsl mov jg xor jb out bound out and push xchg or push cmc and inc nop or rcr ret push xchg scas jle jbe sarb jns jmp cmc cli stc mov adc sbb sbb push pop adc hlt lret or push stc sub mov mov in insb ss jb xor pop test jl in (bad) adc in xchg push sub imul and pop jmp ljmp popf xchg fidiv cmp xchg sub jmp addr16 or shrl inc aad loopne mov xor pop cli enter jecxz lods and aam std daa test mov in pop mov sub xor cmp adc rolb fwait push jno cmp repz pushf and jl fsubr push cltd push (bad) insl aas fimull push enter (bad) xchg sbb test (bad) fmulp loopne dec xchg loopne int int3 xlat adc pop dec push cmp add (bad) in sbbl adc fist mov pop loopne orb adc pop into js,pn repnz mov outsb arpl mov adc push push fs and in dec mov mov sub orl adc lcall and mov push dec leave mov add pop repnz int adc cmp mov dec jg bound mov dec mov jae cmpsl ja rcll jnp push jb or repnz mov sbb loope jp daa aas fs maxps testl and push xor inc mov imul pop insl fsubl mov inc dec adc jb clc push (bad) and hlt cli and jp notl rcl cs inc inc iret xor xchg std subb mov push push arpl arpl mov pop fcoms pop movsb scas jb push test mov sub dec movsl jg insl xchg outsl sbb cmp lds or mov mov adcl or movsb mov inc jne in lock aam mov xlat out arpl leave cmpsb movsb mov pop dec stc jle dec dec jl imul xchg inc mov xchg cmpsl add adc in inc mov sbb mov or jne sbb enter push popf inc into inc arpl outsl inc stos dec cmpsl popf add or adc xor insl jl repnz jg pop aad decb sti push mov popf or xor mov das jp test popa cmc roll jmp sub push jg sbb jecxz aad push scas mov push adc cs pushf push fildll hlt jae ja sub adc mov fidivl xchg fmull fimull gs outsl scas dec sub jb ret ret sbb inc test jnp sbbb stc jge and cli rcr cmpsb cli push jg ficoml push inc jo into mov clc stc xchg lcall iret ljmp stc cmp inc mov fsubrs jle pop push test and dec and iret pop es outsb and movl mov sub adc sub pop ds jb jbe je movb lock movsl xchg adc jbe aam sub inc push jne push sub out scas orb jns cmp sbb cmpsb or and push fsubrs movsl mov mov jbe jns mov jnp std into push mov and cmp (bad) push cmp sub xor loope mov jns xor mov xor lock js icebp call and adc add sti mov add aaa aam iret mov add xor (bad) je mov lea mov pop (bad) jbe add dec mov shrl pusha push aaa sbb rcrl cmp lods pop lods push je int3 jnp and movsl xlat pop jecxz enter popf xchg addr16 icebp (bad) sahf adc push mov lea inc es cmc mov das imul inc push (bad) sahf push fistpll lea adc sbb pop pop xchg xchg pop mov inc and add xchg lret call (bad) mov push mov jno add daa xchg fsts stos lds and mov add imul cli inc and mov adc stos in push mov movsb in adc js xchg mov jle inc mov mov push add stos xor shlb (bad) sbb sub add (bad) rcrb arpl adc rorb jl pop xchg inc mov hlt popf mov out bound (bad) notb std mov into dec mov pushf or movsl inc inc icebp lock inc sbb aaa ror xchg stos loopne lahf cmp mov xchg xchg mov cmovb mov push pop add dec push ja in loope mov adc sub enter xchg pop clc and sbbb mov mov (bad) jne sbb movsb enter cltd xchg jnp dec jnp cltd jg sbb add gs mov ret bound movsl xor lods sbb xchg rcll lret psrld inc sub dec xchg jnp jno lock mov xchg mov mov push xchg test test stos loopne jp,pn fwait and sar mov jb stc dec les and orl ffree push lock cwtl xor and cmp ret mov jmp jmp das pslld std std lds test jmp mov xchg sub jnp movb outsb adcl xchg pop in pop xor add gs das cwtl and jp ss (bad) sub pop (bad) xor mov outsb sub push push and xchg push push popa shrb jo (bad) cmp test push clc pop imul cs sbb imul fs fwait call push jge add test pop push mov sbb mov in cld out jecxz push ja or shrb xchg pusha sub xlat jno sub (bad) adc add cmp inc push dec pop add jb push pop outsb in pop outsb push xchg xor mov mov addr16 dec cmp lea jo lods jb adc in adc arpl jnp fcompl (bad) lock popf lds inc dec and jbe sbb mov sub stos cmp pop mov cmp ror out mov inc setle shl je es movsb and in sub loop rcrl aam jo add pop insb or (bad) fldlg2 jb mov dec pushl test sub (bad) outsb test ret mov les inc insl add push dec (bad) lods push fscale sub dec add push cmp jp loop scas fcmovnu jae fbld leave and pop in xchg sub adc cmpsb pushf push arpl imul push dec insl shlb add jno pop sbb adc dec adc mov cmpsb lret sub jnp push jno lock cmp push push lahf cmp dec inc inc sti push (bad) mov xchg or cmp sbb or out aaa mov inc cmpsl sbb sbb inc add jmp ljmp mov test clc paddsb pop cli sbb arpl add out xchg js sahf mov push jl addl out mov lods sub fistpll push push aas (bad) pop ds iret cs mov and mov js sub sub and mov and repnz cltd and (bad) dec imul icebp loop push adc cmpsb add and and mov pushf std xchg adc (bad) pop mov insb mov cmp dec ja cli inc jl nop arpl jae mov dec add subl add sti test rcrb xor dec adc mov inc fistp daa cs mov cwtl sub imul mov outsb dec xchg arpl cltd out push mov pop sub dec aam data16 cmp pop aam or int mov adc out pop loopne aas push ret test repnz out ja test outsl fisttpl mov and sub (bad) cmp inc incb mov nop dec nop or push jle dec out dec dec aaa popf push mov outsb ss into mov or addr16 cmp daa dec movsb cmp dec imul dec mov xor cmp or sbb movsb fs ja movsb popa imul xchg fcomps xchg pushf xor (bad) dec aam push jo push jecxz jb out mov mov inc (bad) sbb bound mov jecxz push lcall push xchg and dec jmp daa in test fisubr add or out ja push lret int push mov insl cmp test lds lock stc and scas cmp stos arpl adc sti das ret fimull lea decb sahf mov aas xchg je jo mov mov test std movsb je mov push push imul loopne imul xor xchg adc incl movsb pop int push lret outsb or mov cmp dec xlat dec pop fcompl push addl ret fstps jo rolb int loop cmp and sbb or sahf cltd int3 or push lret inc jo mov fsubp (bad) and xchg in add or jns lret xchg out fidiv ficomp push loope mov shr inc jnp jl fsub lret jbe in xlat xor jno push cmpsb cwtl inc movsb pop stos outsl nop (bad) jge push stos sbb cltd int cmc push inc or mov dec in mov fs rcrl xchg pushl inc inc cmpsl add (bad) aad js lahf push and sbb orb mov and fisttpl mov and jecxz test dec and jae ss scas insb mov mov mov xor int3 loop mov stc pop aam sbb bound imul out ror mov mov pop jle or push mov sub lock sbb inc outsl pop jg sbb cltd sbb into xchg adc roll lods fist dec mov and sbb xor (bad) ss or clc xchg outsb xor push ss scas adc test sbb sbb daa jo bts out mov outsl pop mov xchg scas movsl cmpsb test loopne sarl in (bad) jnp popa jno pop cltd and js popf pusha or dec (bad) mov (bad) inc mov js popf xchg mov outsl adc mov xor push jo test sbb popf xchg outsl inc aad in aad jp mov mov loop and loop fwait insb xchg pop mov sarb sbb cmp fwait inc sub icebp mov cs or xchg mov jns mov push cmpsb mov xor repnz push (bad) inc pop xlat add mov mov mull scas mull into cld fidivr xchg jb or dec dec add aas bound pop std cmp es repz xchg pushf mov cmp es add popl test inc jl xlat sub sbb jge test call add in outsb mov (bad) mov lret lret sti mov lahf xor std fsub fidivr lcall mov jae inc iret push test add sbb fcompl shlb add push sbb movsb mov lds mov fiadd pop inc movb adc mov dec sbb dec insl inc and insb rolb repnz fdivrp mov outsl or and mov jnp xor fwait pop (bad) shlb mov (bad) cmc hlt imul pop cmp hlt add xchg and cmpsl push cmp mov xchg cs jl pop inc (bad) mov or rcrb mov (bad) bnd lea and sub sbb stos cld jmp mov mov dec sub dec mov cwtl cltd repnz insb (bad) xor insl push das sbb fwait xchg lea daa jne,pn test push pop lea inc cmp mov inc lret dec dec jno pop mov movsl (bad) mov push in push mov inc adc xor cmp xor dec pop leave dec add xor pop loop shl and enter fadds push adc dec call mov push xor xchg movsl outsl and test shll add jg jge sbbl sarb or jnp fnsave add mov sub fisttpl mov cmp adc sbb loop mov cmpsb dec loop sbb bsf int adc and push lahf push gs xchg sbb test insb fildl cmp and mov dec sub decb and mov and pop mov lcallw lds inc in (bad) rol push test (bad) add gs xchg mull and es adc push xchg pop fcoms add (bad) and cld and pop (bad) ret lods add jle sub andb and sti stos mov fidiv rcpps imul nop jl cld mov pop inc pop lods pusha movsl xchg lret jp daa xor lea dec scas dec adc inc call xor push jno pop ret pushf xchg imul push gs out add add imul mov mov sbb adc add pop in pusha enter mov cltd adc add cs xchg xchg aam jle repnz cmp and and xor mov call jbe dec sbb mov and inc inc mov ret xlat jge jl (bad) je test xor movsl or sbb test in out mov push mov push repz push stos jmp pushf incb inc xchg int3 xchg movsb test outsl loopne,pn pop push push subl scas call inc xchg rcll mov push shrl fidivrl lahf or inc in int adc cli sbb jo call cmpb cmpsl jnp dec add es mov pop das xchg ss fdivp shl adc inc out dec daa arpl inc cmp inc mov movsl xchg das stc adc xchg jnp pop mov sbb test xchg les mov add inc (bad) outsl lahf test push shlb in nop hlt xor dec xorb sarb jg dec lret pusha adc cmp test xchg in pop test in mov scas fidivrl (bad) pop sti inc lea pop clc cli push mov lea mov dec outsl test pop lods loopne mov dec push out int push cwtl pop repz in test inc sbb jb outsb xchg and arpl mov movsl data16 pop cmpsb outsb sub mov and inc bound and leave testl mov mov push mov cs mov imul in cmpsb lahf lret mov fs aas mov and movsb (bad) fcoms in push mov cmp sahf int3 mov int inc pop (bad) jne jecxz popa mov or out fs sahf adc xor push pop iret inc in xchg dec outsl leave jmp loope cld and xchg push mov jnp cltd popl decb pop pop test and outsb nop cld out sbb (bad) (bad) dec mov inc outsl inc bound mov cmp xor lds into xor mov shrb mov and cld cltd shrb mov jne jecxz cmp js aam lds call xchg or cmpsl popf imul inc mov mov pushf cmpsl fcompl jno mov jb (bad) jbe fsubs jecxz,pn mov push or sbb xchg outsl dec outsb aas call scas shrl repnz mov xchg mov adc and in mov aam or mov (bad) xor or (bad) push stos pop mov jecxz add hlt jl push sbb in jl lret je push ret mov add sbb addb push icebp mov outsb insb pop mov daa jae fwait or mov movsb mov and rol in xchg lret (bad) cmp sub and rcll inc sti adc lock xchg pusha mov insb sbb mov add xchg (bad) (bad) xchg movsl mov mov or int frstor rol pushl jnp cld cmp repnz cwtl dec inc pop xchg xchg push push add addr16 pop xchg int3 (bad) xor sbb mov xchg popf xchg xchg jge inc movsb mov lock in and adc sbb and inc cs in push xor pop push cmp into sbb adc repnz xor (bad) enter in and imul ja fdivs push scas sbb bt and xchg mov cmp cmpsl test dec sar push lcall into fs je fsubrp mov adc push pop sub push mov xor add (bad) pop xchg push arpl (bad) jne loop push sub xchg push inc mov rep cmp cwtl push orb out repnz sahf test repnz xchg add and xchg test mov pushf scas cmpb iret in ja add movsb adcl stc fdivrp jge mov dec xor in aaa jb mov mov xchg dec cmp mov test inc push mov inc jp into sbbl xor xchg mov xor nop lods out sbb dec (bad) add lcall jge loopne jns pop cmp sub sti in mov (bad) push cmpl enter push pop pushf cmc push imul stos sub ret adc out lret test hlt sti and sub movsb sub ljmp pop lea addl adc xchg das std and dec add mov fs lret add push shl (bad) dec push jno jne shrl and and out and loop mov jecxz push add add push and cwtl sbb sbb inc dec pop movsl lods je dec xor std push cmpl sub pusha (bad) xor pop test sub sub pop dec push lods test sub repz dec cmpsb sbb adc dec or sbb lods mov fwait mov das jl andl std mov mov mov mov adc jae ret ja stos mov arpl lret movsl mov in pop dec sub cmp or xchg add and pop pop adc lods mov push pop or or jnp mull mov dec pusha inc daa or outsl ljmp inc dec xchg movl mov gs inc xchg daa (bad) aam xor daa sbb cli cmpsb mov (bad) aaa pop arpl inc and lea addr16 pop hlt scas push lret nop mov cwtl mov ret jae shlb stc pusha push stos loopne dec mov push mov push pop jl inc push out fidivrl sahf mov pusha mov int call test icebp insb xor ret dec test outsb and jbe adc fdivl inc and lods ret jecxz fisttp dec xor insl rclb lods pop repz jnp mov popa mov cmpsl adc pop sub or ret daa adc mov fcmovnu test popa inc fiadd push cmc mov pop and sbb mov sub lods (bad) sub mov xor pusha inc fcmovnbe jae iret pusha popf (bad) sub mov (bad) popa pop and inc sbb push aam xor int3 lahf stos lret mov push cmpsl rol test add nop mov pop xchg add mov daa jle clc out adc xchg push mov lock sub dec mov lods mov and repnz adc call idivb aad test in push dec std mov adc mov scas push pop mov lds in mov mov cmpsb test xchg dec bound add or cmpsb mov insl sbb test mov sahf movl jmp clc pusha jne jle addl adc sub lods cmp out push decb gs (bad) imul cmp and jae inc xchg sub je cltd outsl cmp sbb cltd cmp lds test rcrl dec popf inc shll cmp mov xor jge xchg cmp mov or loopne int3 fwait sti mov sbb fstpl xor enter pushf jns cltd je add popa clc sub mulb xlat pop and adc xor add outsb pusha adc out cmp test xchg push xor sbb push test sub mov mov lods sbb cmc incb sahf push test pushf push popf or sti sub mov sbbl in loop jno js scas popf or mov in out mov lods clc aas clc iret lret dec js insl ror dec sbb mov jns push outsb ret pop sti out int sub mulb mov mov add xor sar mov je pop lods (bad) (bad) ds es mov in or push xchg addb fistp mov les push ja jg dec sub jg roll mov test mov (bad) mov in pop xchg mov call jge push and sbb lea push daa mov jae inc xor dec enter sbb xlat push mov cmpsl sti sub imul or push xor pop clc sti call xlat pop in test add xchg cmc clc pop fwait pushf scas push push les and jmp mov pop sbb mov (bad) dec pushf (bad) test movsb xchg (bad) imul mov ror daa adc xor test xchg adc jg in add pop add nop xchg (bad) sahf lret add and clc fsts lret push fidiv es push movsb sbb mov adc out mov cmpsb lret addr16 pop fnstsw mov pushf cmpsl outsl ds insl (bad) sti and push or mov enter lcall cmp rolb in por sbb mov push fsubs lret lcall scas push les repnz nop jns cmc lock jge and pop jmp cmpsb imul (bad) testl and dec mov lret adc xor xor xlat es pop stos pop xlat jo sub or mov out popa popf push lods out and cli inc scas cmp adc nop imul sub xor sbb pushf pop imul pop (bad) mov dec test mov icebp inc xchg nop adc or je xchg push dec enter rorl pop in mov aaa pop lret jb push adc (bad) mov out add jge cmp jb xor xor mov mov mov test cltd inc cmp mov add lcall push sub das pop shrl mov test mov jns dec sbb sar inc push add test jae mov sbb cmpsl add or jns out add rcr or mov sbb and inc out mov push mov imul lods add dec xchg dec (bad) mov cltd (bad) scas aaa loop add sbbb stc insb lds sub mov shlb ficom daa inc popf aam inc mov lea jb (bad) xor or xor rcrb pop mov (bad) cmp dec sub mov test jp add fnsave and mov jns add push lahf aad jp aad (bad) dec scas xor jle lcall pusha pop scas mov mov push mov jg xchg pop mov das lret das in mov das fcompl loop lods add call adc mov les test cwtl push jle out aas lret jg bound (bad) mov lret std cld xchg jl adc (bad) mov jmp mov outsl push andl leave cmp cmp gs imul push push inc sub repz adc pushf outsl jo jg pop or movsb add and adc jge xor mov push sub pop mov xor adc stos xor and jae,pt aad (bad) pop push fisub pop sbb in jle das movsb and test lcall ss jg or inc lods aas push xchg mov sub or ljmp sahf jbe xchg jp and cmp int3 and sub pop les sbb or mov mov mov int int inc fild mov sbb lcall push in rcrl adc jmp mov out inc stc sbb push rcrl jnp sub push sahf lea lret xor mov sub js pushf xor rorb dec xlat mov adc (bad) nop popf bound icebp pop mov push add lret sbb mov pop adc subl push dec ja sub fwait bound int3 cmp jo lea fsincos pop cmpsl jge call insl clc dec imul mov xor mov sub popf inc repnz push js push inc movsb das fidivrl inc jge inc and jo push push pop fwait xor fptan ret rol cs dec cmpsl (bad) jmp mov fild aaa jge sub adcb mov jno cmp push mov (bad) (bad) push xchg and (bad) (bad) hlt std cwtl icebp lods dec test cltd jne daa mov (bad) scas add popf pop mov cmpsb xchg mov jno pop loope rorl mov ficompl popa jle jl lds xchg ficom (bad) inc pop cmpsl adc (bad) lret and std xchg fimull sub test sti hlt mov lahf mov mov cld gs dec inc mov in mov and and cltd xchg adc inc pop pusha insb int3 fwait xchg pop and in adc in inc mov aaa rdmsr or sbb lock xchg mov test mov cmp loopne stos je and fwait jae xchg inc lods out (bad) loopne mov mov mov xor and jle xchg pop adc adc fs mov cli xchg in pop not inc fwait sbb int add mov popf pop lea (bad) and (bad) or pop add push je and fcomi add (bad) and imul pop loop leave aas cmp or or hlt dec out dec iret jns jns inc mov push mov or mov mov outsb std (bad) mov jnp data16 aam mov loop cmp fdiv jge ret xor mov mov andl pop movsb (bad) xchg xchg stc pop lock pop fxch pushf subb pop xlat test jae mov and xor inc xor mov js jl mov ret leave data16 inc sbb mov and and mov inc inc in jo bound cmp aam leave inc lock ret dec bound and lcall sbb adc dec pop inc adc imul out adc and imul add negl popf loop or (bad) dec pop shl sbb push cli vmread rcll test push dec sarb add xchg pushf mov popa int xlat int or adc test mov push and pop cmp add jecxz loopne add rcrb fstps (bad) mov aam xchg lcall dec sub push bound or fsubl sahf arpl lret push int fdivrs mov mov pop jno sbb in jnp push aam mov or mov ds insb test xor xor out fmul pop insb mov mov xchg sub lcall xchg rolb dec sahf icebp push jg test pusha cmp (bad) xor (bad) mov and mov jb or sub and push fs push adcb aad and jg push dec jl enter sub push dec xlat push push out cmpsl sti pop jnp (bad) fnsave lcall push mov cmp lahf dec sbb pop iret push lods repz loop sub mov sub sbb fstpt lahf inc lret (bad) cmp ret push subb lcall sarb in jl out adc sbb inc lahf aad jo or jecxz leave xchg mov lods dec xchg sahf mov outsb sub inc mov aam cmp inc scas jb xor xchg lods dec fs shrb push jns scas lock lock call xchg jno stos cmc pop or sbb addb addl fstpl js dec jb fdivrs ss (bad) aaa fisttpl jle sub mov cmp in sub add ss fsubr test dec sub push imul imul add xchg push in push xchg ficomp imul push test pusha push dec movsb mov or and adc bound mov and cld shlb push data16 jb in bound stos jnp jbe mov aad or call jbe inc jge and bound sahf loop nop lret lds jnp lcall adc sbb sbb mov repnz nop and data16 lock add mov clc pop mov mov andb jo pop cs mov sbb mov stos add mov or loopne or or movl test jmp sahf aas xor ljmp cmc pop push adc test fwait dec cmpsb nop adc (bad) adcl xor in inc cli jp xor xor lods sti in shll popa push adc cld cltd sub in xchg jns mov cmp (bad) in imul and outsl pop jo and fcomi push gs inc jbe push rcrb fcomi xchg repnz mov aad xchg pop mov mov xchg into (bad) pop mov pop lret pop stos and jo jbe in nop lods pop (bad) or inc jge inc xchg fbstp loop (bad) sbb cwtl pop xchg int3 push jnp jbe push aad aad js mov xor push inc pop data16 out cld out shll inc test mov dec or aaa mov ret sbb outsl cmp sub fisttpl cmp aam lods mov gs lret jb cmp mov adc aas push sub ret mov cmc lahf mov mov adc mov push ja add pop adc mov sub push sbb push jo xchg jns outsb push xchg and cmpsb cwtl decb sub and jmp lds cmp (bad) xor push and jge pop xor (bad) or insl and jle pop arpl mov cmpsb mov xchg js (bad) dec cmpsb mov and loopne mov and aam fcmovnb or js add dec xlat push sbb orl cmc test dec out fisttpll jg jb push cmp or dec mov das push inc stc mov pause push cwtd jp dec dec outsb add adc pop lret aam cmp cs xchg aas cmpb sub popa xchg sbb and inc and aam cmpb inc in scas sbb into imul add int sbb xchg pop pop cmc and and mov cwtl or or es inc jg cmc test jns or and inc std sub or jl,pt jo std push jle (bad) or imul sub add push pop sub rolb or js jns popf cmp mov or cmp dec jbe arpl lret into sbb cmp push ret mov popa push cmp mov push mov pop xchg xlat idivb sub das fsubl (bad) std imul mov mov mov xor aad out pop fsubl out dec (bad) jmp cmpb jns sbb std adc out fist push or sbb in xchg lret fistpl cltd cltd cltd sub pop outsl push lods test sbb cmp dec adcl inc jno pop push das adc fpatan ret push sbb jae push and lds cmp repz inc push clc dec in (bad) or imul or pop xchg out lcall in jae jne in xchg hlt mov cbtw shlb cld push mov jbe rorl or mov sub jno push jge lret sbb xchg push data16 orl mov push add movsb and mov jecxz mov and (bad) mov xchg dec inc mov or fcmovb sub in inc mov leave adc mov int3 adc xor pop pop cmp and lret lock loope dec jnp sahf or xchg popf xchg mov add add dec jge hlt sbb add ret daa or push xor push mov aad push push fisttp test bound cmp leave test std movl cmpsl test cmpl mov frstor or cmpsb xchg jns test adc sub cmp and sbb in mov outsl cmp cld test adc push xor cmp cmp dec test movsb insb inc and (bad) or jo xchg mov ret sbb push mov add sub xchg pusha sub das out fist gs xor push mov notl popf sub pop push loop in dec flds xor fistp or pop mov add jle or lods lahf mov fcoml mov movsl or lcall inc pop lahf xchg int3 (bad) adc (bad) inc sbb pop pop dec mov push mov or push mov aam in or inc sbb test out mov jnp cmp (bad) mov ret push mov cmp inc lahf (bad) mov mov mov int dec mov loop xchg push add pmulhuw in ds arpl nop pop in and not addl cmc jge jle or xor rolb mov clc push mov cmp dec jb sbb xor or sbb pop data16 lods shll inc jns mov jns (bad) pop mov insl dec movsb leave sbb lcall add arpl and push push clc jae dec push test add add pop xchg (bad) leave gs add stos into and adc xor sbb andl cwtl cmpsb addl roll lcall cmp movsl out xorb mov test pop fist and jp dec mov mov sti xor test inc xchg cmp out lea (bad) push inc sbb fmull aam shrb in rolb stc mov pop jo leave int3 add dec (bad) push subps push jge mov push dec arpl sbb out push jp push fildll hlt pop xchg hlt fstpl daa jmp sbb test cmpsl jle pop loop inc jnp mov dec nop mov arpl mov lods inc sub inc ret test inc in repz sub aad sbb std push jbe add mov aam adcl or inc daa cmpsl scas lds popl xchg pop and mov jb in pop bound dec dec ret add pop pop insb and and add sub (bad) mull (bad) adc loop xchg sub pushf sbb js mov sbb (bad) and jl adc add cmp pushf inc cmp lret or mov (bad) xor stos out int lahf fild push or sub pushf pop aam pop in lods or adc fwait lret fcmovnb sub jmp cltd mov std xor cmp pop xor sbb or mov jnp iret clc push (bad) sbb push lret dec cmpsb test pushf into cs cmp push push cli cmpsb pop fwait cltd dec push jg out jne in cld aaa inc dec gs sahf bound or fdivr mov adc push sub sbb adc psubusw lahf or fs jge and dec cmpsl daa fisubrl jns,pn add lock mov mov mov sahf lahf aas mov in cmovl inc loope stos lods pop and mov add fdivrp pop jecxz pop xchg addb imul dec sti inc jno dec and int3 jmp cmp mov xor mov lea adc std xor ret test sub fcom and rol (bad) dec xor cwtl lret nop (bad) stos cmp ret faddl sub push cmpsb dec sub gs xchg call fnsave les or push js add shl xorl pop test xor pop sub stc sti add fnstenv dec movsb add imul stc push dec insl loop adc lcall add mov test mov mov aaa inc xorb sahf and test jne fst pop pop or movsl enter out inc sti pop ficom jae jmp or mov mov aam cmp sbb or xchg push mov insl lds and aas mov lods xor sub xchg mov mov mov or imul mov xchg (bad) imulb cmp push out push xor push and adcl enter scas push cmp sarl bswap mov out insb aam sub sbb dec and mov cmp pop inc call xorb std cmp (bad) in sub mov dec mov add pop cmp out pop mov mov lcall ror mov jb pop pop jl cmc gs stc jae mov xchg clc xor mov add lahf inc push and sbb insb sahf push dec test sbb xchg movsl fsubrl dec jg lret loopne in mov adc xchg hlt fs movsb xchg xchg test and add inc pop ret (bad) jb fimul loop inc or mov or inc jno out ret fdivrs or int3 aas in das lds popa xor dec arpl or fadds pushf xchg inc popf mov (bad) xor fcmovnb lods xchg insb ss mov sbb sub cmp cmp pop movsb dec std stos cli inc stos adc lret testb repnz loopne xchg inc pop imul adc or stos or test int push das (bad) aaa mov mov movsl mov in movsl sbb adcl sbbl dec insl pop insl jno mov jns lock jg (bad) dec push jns mov shrb ret cmp inc lea (bad) cmp add das test popf es jne sahf pop cmp xor pushf cld lret mov push mov cmp push sbb je xor mov fisubl fisub push dec cli idiv add sbb adc jle and cmp pop (bad) hlt stc inc lea xchg lret arpl and sbbl pop incb test shrb cs imul xchg movsl sub pop test add xchg neg mov push bound stos mov and and mov push das nop fs fcoml lret (bad) jo movsb sub xchg adc jno out movnti mov cmp popf cmpsl jg test nop (bad) sbb dec lds insl dec inc test xor xchg (bad) xor push adc test push xchg xchg inc dec cmp and loope ss lea and test setne xor pop mov ja xchg (bad) or cmpb dec aad xchg notb push add xor nop sti insl and imul inc ljmp push jo cmp cli or hlt icebp bound or scas jo aam mov les aas imul popa push lods mov jne pop mov pop add (bad) xchg xor icebp jae js (bad) sub pop inc xor sbb nop das xor ret jns negb jo setle sub adc sub jmp add mov xchg jb (bad) sub mov pop mov mov xchg xor fsub ret and nop xchg sbb xchg ret fist xor mov push pop jl out push icebp and jnp dec adc adc ss push push arpl and xor mov sbb addr16 cmp aam mov imul or or aas dec call jle xchg (bad) xchg shrb fldenv imul nop test cmp (bad) popa jg or cli adc addl inc mov pop xor jbe lret je dec cld pop ret xchg adc push mov jno or (bad) popa call lods mov mov fisubrl mov or loope cltd rolb test aam adc pop push les arpl ss fnsave in add insl dec xchg mov pop test popa mov xchg int hlt outsb aad push movsl pop push mov (bad) clc mov cmpsl xor mov push push addl mov cs scas push out adcl add popa je cwtl test add fwait (bad) call loope xor cmpsb test nop jmp (bad) xchg cmp packsswb mov push cld mov aas inc ficom push inc std std arpl pop sbb mov mov lods inc daa mov (bad) or ss lahf aas arpl mov jg mov xor lea mov mov fadds inc sbb jno ja mov sbbb lahf (bad) pop and mov sbb (bad) xor fwait dec imul xchg fcomps cld (bad) mov cmpsb mov adc (bad) imul fidivr mov das dec cltd inc ljmp and xchg stos bound cs daa std and sbb cmpsb stc add mov iret jo (bad) ljmp sar repnz rcrl sub jg cmp dec lods nop fadds call jae add sarl es mov adc call add stos fs lods repnz nop jno push (bad) push cmp sbb lods aam ficompl push and and ret jmp mov pusha and or push or lds insb pusha sub mov mov orb and xchg lret cmp roll xor or push xor fwait add rcll and adc repz dec ljmp adc pop xchg pop negb mov mov push dec ret in lods mull pop popf push and cld outsb outsb fcomi movaps mov mov push dec sbb adc pushf jb xchg roll mov cld rolb or xchg sbb inc je mov frstor add pop or (bad) fistpll (bad) mov (bad) mov sub adc dec test and xchg jle dec add push xor loop pop inc jb std popf pushf mov and sub pop (bad) fcompl sub scas dec add pop fcoml sub stc mov and sahf add sbb (bad) scas call xor sub insb push aam lahf and popa mov inc in fmuls pop add pop sub lcall fildl ljmp cmpsl mov sbb jmp pop push sub das push popf cmp inc and lds cs dec push fs movsl jnp add pop lahf inc pop mov inc daa out cmp sbb or outsl dec add test (bad) push inc fmul pop mov inc lret addr16 push and int aas push dec (bad) mov bound mov imul sahf insl popf mov and mov cmp push sbb add pop cmp or mov mov das pop mov fstpl mov addr16 test mov dec rolb sub mov jg dec push sub imul add mov and ljmp in dec pop sub and je lahf inc fild mov adc std mov popa pop insb cmc xchg call pop (bad) mov or and inc lret ja jmp sub cmp dec in ja nop xor add push in cwtl out cmc add or or and jl fdivs gs aaa in rcrl stos mov mov or data16 jne xor into mov cltd outsb outsl mov pop and bound sub xor xlat jnp xor lcall add cmc and rcrl mov or mov es cmp int push mov mov in cwtl xor aad cmp aaa test xor push data16 (bad) pop jb xlat outsl scas and stos bound sti pop mov out and mov dec cltd xor inc adc mov pop mov js sbbl loope aaa jg lock pusha cmp popf mov xor (bad) mov in fbstp or decl test mov sbb push xorb nop enter addr16 in jmp adc stos stc push in fild insb jp lds jmp les inc jns fildll inc cs in pop mov cmpsb rolb and addr16 add popa pop inc inc sbb js dec push push xor (bad) notb mov test inc stc in jge add mov sub movsl push cmpsl jge or jg dec sbb in aad lock and cli mul dec add sub mov pop adc push ds sbb jle loope int fistpl (bad) sahf add dec rolb push ljmp adcl popf jecxz fildll rolb in add or cmp cmp pop jp out fcomip fistl lods mov in push xor repz sarl mov dec jb cmp jle mov xorps iret cwtl stos daa xchg jmp inc pop dec int3 lret mov mov or pusha sbb or mov mov lret mov loop bound pop mov imul in inc adc or enter rcr cwtl daa xchg (bad) and fdiv add dec rclb pop mov cmp stc sbb into and test xchg idivb or and sbb bound aam mov std scas pop mov sbbb mov leave clc bound and aad lea pop or inc mov xchg xchg mov aad mov mov pop sbb sbb ret sub arpl shr popa shll and dec mov xchg jno dec xchg inc jg pop test outsl push rcrl test (bad) adc xchg incl test pushf cli lret sub outsb add mov sbb pushf notl fs jb or sbb mov insb cmpsl sbb pop fiaddl enter xchg mov mov movsb mov fdivrp hlt push or iret adc adc pop cld imul es insl xchg test pop loopne arpl sub jg cmp (bad) jbe jo test in test popf repz hlt sar and adc fbstp popf pop lods popa add data16 call and mov into movsl popa xchg mov pop pusha hlt aas std aam test ret jno jg,pn ret mov mov or repz les out ficoml sbb decl sub ss mov mov mov dec mov pop push data16 lret xchg icebp pop cwtl or sbb xor push add or ret int pop test xchg add ja mov lods stc mov adc xor daa jp cwtl mov in pop sub (bad) cli cmp aad mov inc ret call aaa cltd popl outsb stos adc or pop inc fmuls push js pop into add sub jp push out out jae (bad) in xlat pop movsb xchg and ljmp jno les (bad) movsb stc adc adc inc sub test pusha (bad) xor lahf pop adc mov sub loope pop test push into fnstsw popa fldl sub js mov push fstp ja fwait inc bound stc adc leave ds cmc bnd pop add push insb idivb pop inc outsb pop (bad) mov call bound or sub movsb imul scas jmp add frstor ljmp or push cltd jecxz cmp inc aam dec movsl test fs push or and loopne mov pop pop nop dec lods sbb dec xchg mov mov fs mul inc (bad) cmp notl fwait inc jl push lret loopne adc pop xchg push mov or and ds in pushf push cs push int3 add pop push pushf mov xchg push mov aaa mov loop mov mov mov mov repz jecxz and (bad) lret cmp dec ja js out movsb sub (bad) cld stos xchg push out sti add sub js cmp fistpl sahf xchg pop inc inc xor call in mov call outsl sbb or inc (bad) (bad) mov pop jg inc and mov pop bnd and mov cmpsb movsl mov lret into outsl xchg or pop push in mov jl out lods sub movsl dec or jo dec cmp sahf inc mov jae repz mov mov push test les push xor sub sub add or scas ljmp pop pusha inc jg pushf outsb movsb sahf iret inc inc in jge pop adc dec mov dec mov jno outsl dec sbb sbb in jle sub lods push and mov cmpsb pop mov mov push mov aaa jb cmp incb out stc int3 sbb xchg jbe inc pop sbb fistpl mov add lods jne in test xchg xchg inc inc jge xchg push js and lret sbb or and xor sbb inc xchg adc int je jmp and mov xlat icebp addl sbb sahf test outsb (bad) fisub repnz bound pop test and and scas fwait movaps pop inc btc and push mov sbbb aaa add sub dec ljmp movsb pop fwait and repnz jp adc sbb push xor mov and (bad) push xor andl xchg fistp pop cmp inc test into mov stos cmp fiadd sub xchg sub cmc lods dec mov mov inc mov mov sub loop and jp mov lock inc add loop xor frstor xor xor shlb cmpsb insb jecxz jb xor cmp lcall xchg mov cmp pop or (bad) js push fcmovnb (bad) testl pop jle pop in sbb xor mov test popa and idivb in enter ds sub jno xchg in aam lods jecxz push outsb or loopne cmp es lcall push mov adc push mov cvtps2pd lods xchg lods rcrl sub mov push ss pop or addr16 mov mov mov push adcl pop and sbb (bad) add mov lods test je or mov jge lods jg fwait cld fimull test jb cmc enter scas push mov and orl and shlb mov pushf inc ret dec sbb and icebp mov sub repnz in or inc outsl rorb inc sub mov sbb sub mov mov cmpsb push pop int mov sub xchg lds loopne int3 les push xor or cmpsb in (bad) mov pop sahf pop out (bad) movsl or sbb mov (bad) jmp mov iret aas push mov mov mov scas addr16 inc push sti or movsl add add dec pushf lret mov fwait mov xchg or mov cwtl jno imul (bad) sub push dec loopne hlt aad std mov popa jle inc pop fcmovnu sar ret dec push pop add jae xchg mov cmp pop dec hlt imul sub mov mov jb movsb jl dec dec xor cmp shl add int3 jns push gs aaa loop mov out jno mov cmp ret inc xchg ret or (bad) test push jg sub aam mov repnz sub lods cmp mov outsl mov cld icebp cmp fwait jle repnz dec lea or stos pop sub les pop jle je and push jo bswap rep xor and mov mov cmp or mov jle clc cli loopne js jnp fistpl sbb mov mov ds test fistpl shrl adc es int rcrb je repnz xchg sti aas jo (bad) cmp sti rolb or sbb iret ja inc (bad) ds inc cmp sub xchg lcall add cwtl push jp sub xchg jns daa jecxz gs mov sbb push outsl cmpl pop inc push aam ror add and cmpsb xchg adc (bad) mov xchg jnp mov sub jp movsl jmp pushf add or xor repz popf xchg and adc test xchg popa push pop mov dec lret cwtl pop ja and lret int3 and or jl inc inc mov enter cmpsl jae out push adc cmpsl in mov lret sub or arpl repz push add adc outsl mov and xchg incb and sbb dec xchg cmp inc lods sub jl in lret add (bad) pushf inc xlat dec cld hlt xor (bad) lock ficomp ljmp cmp je leave xchg dec popf or dec ficom xlat xchg cli cli jl push xlat shll sbb ja fwait das in cld out add pushf dec (bad) mov xor inc stos cmp inc pop jae rolb pop (bad) seto testl or or ret rorb sub jno hlt cmp push cmpsl imul rcll jecxz sahf xchg mov cmp stc adc lret fdivr dec dec push int sbbl xor inc int and add mov push pop test sub loop jle out xor xchg stc jnp xor lea ja adc popa popa dec dec inc cmpsl xchg dec fwait push jbe or (bad) xchg dec sub scas xor xor aaa mov pushf mov push pop inc cmpsb pop lods cmpsb test loop aam push add ljmp loopne (bad) push fildll cmp mov mov sub push jb adcl jecxz out movl insb jg sbb pop leave inc adc pop test adc xlat jp test lcall fisttpl orb add push aam dec pop addr16 daa cmp lret xor sub insb in insb arpl xchg push sbb lods mov mov inc mov (bad) cmp movsl call movsb lods sub sub fs (bad) jbe and pop and loop and xor xchg sub fbld mov push sbb insl push and xchg or fucom lods cmpsb sub push jns in dec out xchg orl leave int pop popa fsubl clc pop adc inc sysret or and add in inc adc dec jo dec (bad) hlt mov xchg test test jo xchg inc repz sahf daa (bad) inc jmp icebp pop test loop mov cmp call mov lock int3 mov adc sbb leave ret lret cmp loopne call bound dec daa mov inc (bad) bound xchg fistpll pop xchg jo,pt xchg mov mov cs sbb jl xchg lds insl mov mov test and lds lea xor mov mov out add call (bad) cs and sbb and roll push cmpsb es mov xor or xchg cmc xchg fstl and sub sbbb jns dec mov scas push lahf ret jae mov push das roll add fs inc mov mov nop mov xchg inc and hlt jge lods mov in cmp std (bad) xchg push push push popf sub mov in cmp pop aaa lods adc mov inc and dec ss je xor outsb push imul scas mov fidivrl inc stc cmc stos mov int in into arpl out sub arpl outsl in adc jo pop fcmovnb sub fwait inc leave lock sbb hlt std js imul mov rol inc out (bad) xchg adc fcomps (bad) add jno gs sub sub inc jg xor ret ljmp cld jnp push lea mov or sti mov dec cmpsb mov inc xchg xchg jg sti xor in repz dec inc pop test je fisttp mov loop xchg mov mov cwtl (bad) cmp push mul jb and mov dec out pop push and xorb push decb shll sbb lds repz icebp inc imul jecxz mov mov loopne rcr sbb push mov cmp mov ficom cwtl (bad) jne dec mov jecxz cmp (bad) sbb sarb xor add xchg imulb sbb fstpt mov fild or push ret push mov (bad) stos inc cmp pop pop pop sbb (bad) mov mov adc pop sbb (bad) (bad) fs cmpsl mov or add aad stos repnz leave xor mov jp aad dec push mov pop adc aas push and outsl xlat sub inc popf in push mov cmp popa ret out push ja cmp mov and or dec push jb pop cwtl movb shll mov jg pop fdivr loope pop push ds test outsl sahf add inc loopne adc les ret jbe addr16 mov sbb repz jecxz,pt movsl (bad) pusha mov in xchg inc lret das and or fcomps mov std mov add sbb add sub or pop sti push pusha enter into outsb push mov mov sbb call movsl bound outsl adc adc pop lds pop mov enter nop xchg mov sbbb xchg scas addr16 ret fcom call adc add push and insb xorl jp out (bad) inc psubd aad jb sbb mov and push sbbl push test push enter clc jb outsb outsl ds sbb popf andl ficoml fild mov aas sbb xlat and test adc inc out aas in or out xchg (bad) cmc aas xchg std mov ss inc aam push adc mov adc fs out jo out int cmp inc dec pop jno xor sub jp adc pop aaa xchg int mov cmpsl mov cmpsb sbb adc scas jmp pop adcb adc mov and mov xor xchg popl mov pushf mov push icebp mov rcrb ds in jnp in ss shrb sbb out fistpl jnp add bound icebp dec dec cmp lret aas cli add mov movsb push cs cmpsb pop in sahf divl pop fistp outsl mov stos fadds and rclb out push iret les ljmp xor pusha adcb cmpsb push (bad) sbb add mov popa out push jbe in je push push fs xchg fmull jp sbb stos lahf pop test pop sbb fwait ret test lds (bad) push popa sbb xchg push clc mov aam inc mov mov jg out sub inc mov mov mov popa mov cmp push xchg sub movsl cmpsb daa add add ss add inc push sub popw cmc popa mov jne mov mov outsb sbb (bad) movsl xor (bad) or lds loopne push inc mov ret out add xchg (bad) push xor lock push push and (bad) and daa inc std and xchg lcall adc add pop sbb mov popa mov pop push repnz leave in push jecxz,pt push jmp xor clc insl or popf add dec jno test lahf movl bound ds push enter push or jmp inc sbb mov pop add subl push xor xor or cmp add push pushf add jae or lods scas push and sbb xor loop and mov aaa mov ret sbb fs dec ds pop jge push aaa popa cmpsl and sbb scas adc inc and sbb jae jns or sub pop and sahf mov push xor jno cmp xor cmp mov icebp push enter ss cld add xchg jno jo and inc dec pop dec jo mov xchg stos out lcall into test push adc test mov and jnp inc jnp enter jb cli sbb jl int xchg je gs imul mov lahf inc xor sub adc sbb mov rclb cmp dec dec jb adc idivl test mov and movsb decl push dec repz lds sbb xor sahf insb or dec fs test mov and scas xor push lds aas addb jb movsb jl mov gs je mov pop and sti shrl inc ljmp data16 loopne fwait lock shrb xchg pusha shrb lea jl aam ret jl jns bound sti lahf jle das stc push ret ljmp adc sbb fiaddl xchg out sahf xchg (bad) jne in mov xor sbb mov dec sbb lret nop addr16 add sbb hlt sub mov sbb mov cmpsb les lcall jno mov jae push xchg pop movsl xchg jns mov fs add rolb jle test inc and sub cmp pop repnz mov aam and lods xchg loopne push fdivr mov orl addr16 sub sub xchg inc insl push push rolb scas into push lcall popf or subl clc insb sbb int3 in inc and push sub fimull fwait pop mov mov mov (bad) sti mov out popa adc adc out repz mov (bad) cmp pushf lds sbb repnz pop jns jl mov cmp inc mov clc loop cmp sbb lods cmp aas addr16 mov jbe test sbb dec lret cmp xlat test inc fimull pushf (bad) bound (bad) jle push xor pop std sub add jmp jmp xor popf dec jnp pusha cmp adc cld pop popf fmull jnp xor or cld icebp sbb (bad) sub push inc sub cmp cmpsl mov mov xchg cmp cmp je push mov (bad) aaa push shrl js dec mov inc shrb in inc sub arpl xor sar pop xchg into sub popa sub sbb scas in mulb push cmpsl add (bad) add cli mov adc push xchg push and pop sbb mov cmp icebp lcall xor or valignq push sub int3 enter enter mov lods test cmp mov stos dec scas mov mov in daa mov lds push push jno push dec mov jp jno xlat mov aam in jnp std mov lock sub inc sbb inc sbb (bad) jmp sbb in push adc pushw xchg lea insb dec sbb sbb repz leave or leave sti cli cmp int ror ljmp jg adc insb loope add xchg adc push and addr16 xchg push adc out ja ss clc and cmp push dec add and mov imul (bad) mov sub mov popa push mov sbb flds mov pop data16 (bad) rcrb push loope cmp lds aas sbb and add movsb lret mov es (bad) shrb push jg or pop cmp cmp outsb out in and and mov int3 loope and das (bad) std jnp inc mov mov in jo mov icebp roll push inc sub mov inc pop mov xor fisttpl icebp (bad) push mov ljmp (bad) mov testl insl mov in and xchg or int3 push ficomp adc xchg sub cmp jle bound mov add inc data16 pushf mov jns xchg test mov addb addr16 subl adc movsb dec cld dec cmp lds mov jo enter (bad) dec xchg xchg vphaddbd add enter mov stos add mov ljmp jo xlat mov push les pushl loope arpl pop (bad) xor xor js int3 push dec mov xor loop and dec dec imul imul jo scas das cmp xchg rol cmp out push push sahf jecxz movsb fadds cmp cs xor (bad) or ffree mov repnz sub cmp clc ficompl add lds movsl mov xchg sbb dec and (bad) popf sub outsl les pop rcrl or mov out aas and lret push gs cmpsb mov aas scas jae imul lods jp push mov stos inc pop jns fwait jb inc sub movsl (bad) xchg and test fisttpl mov rorb push lods xchg fild push push inc out pop nop cmp lret push inc pushf test (bad) roll aaa test into push inc or mov pop or inc lea sub and cmp mov sbb add (bad) mov adc cmp int3 int3 cmp (bad) out gs fadd jp sbb sub pusha push sbb pop adc in jle ret les rcll inc in xchg enter pushf push in mov mov jbe and xor mov jo fs mov xchg fld aad pop sub add cmp sub scas cmp xchg mov fwait into (bad) jae insl rcl fisttpl leave add adc (bad) (bad) cwtl in lret xlat adc stos jo inc mov fcomps xlat stos mov jl pop imul add orl xchg movsl jo and lods test mov into (bad) loopne shlb xchg mov outsl push and insb xchg ret sti push out (bad) mov inc pop or sub push mov mov pop mov jmp lret and popa call aad iret leave cli pop orb (bad) mov pop iret gs into fildll insl xchg dec fildll gs add rorb cmp mov mov pop das pop insl loopne repz arpl sub lahf std nop inc lock cmp sbb dec lock negl cld cmpsb les fmuls sub push xchg sub rcr cwtl test iret rcrl cmp (bad) test mov jae dec mov pop scas inc mov mov sub mov xchg inc stos pop mov out or xor inc daa pop shrl cmp jmp rcrb push xor cmp jae xlat adc shlb push xchg adc pop jl dec sub mov decb push (bad) cmp sub (bad) mov dec adc (bad) (bad) mov rcr ds xchg push addr16 push add push or movsl push push shrb and mov popf aaa jecxz jb jbe mov push test mov adc out and (bad) roll jle add cli inc cli xchg sarl jl (bad) jno adc sub pusha cltd xchg adc inc lahf inc cli es mov test jb imul inc cmp mov xchg dec jge (bad) fisttpl lahf mov sar in inc fwait les push xor xor and ret pop push mov pusha pop pusha xchg mov in jg cmpsl aas dec push xchg sti ret inc aaa push lret inc cmp and in clc cmp xchg (bad) xchg dec sti add or fwait sbb in mov (bad) lods fiadd (bad) hlt imul in jg pusha popa fistpl and aaa adc dec lds fs push aad jge sarl clc sub cmp xchg sub loop mov lret (bad) xchg mov outsl movsl xchg mov mov inc and mov mov cmpsb cwtl in push xchg add xchg add loope jle pop repz es or (bad) jmp mov mov cwtl shll and sub cmp sbb jno cmpb push mov inc mov mov gs xor inc outsb xchg je hlt xor mov inc jmp pop sbb mov movsb int sbb pop jecxz notl mov mov xor add mov xor int and add adc and and cmp orb insb iret lea (bad) mov pusha sub pop pop jle inc test movsb idiv jnp shll (bad) mull (bad) repz enter cld pop cmp sub jle or jecxz dec clc (bad) and ror sbb dec adc jmp paddusb mov shlb sarb gs xor add pushf stc lods xor or push adc in lea jecxz das xchg insl dec pop cli dec inc pushf cmpb mov ja stos pop icebp (bad) xchg mov js fs int dec push arpl sub cmp dec push mov cmpsl aam bound adc in (bad) xlat push inc cmp push jp inc push sub adc test imul je sub push or imul (bad) push pop popf movsl lock sub xchg mov xchg mov movsb inc cwtl or mov fstl or in pop add fstpl int3 push shll push dec sti (bad) mov int loopne xchg movsl and subl movsb mov rclb out mov xchg mov hlt cs daa dec and fbld xor mov xor in (bad) jge and pop aam adcl add xor push mov inc sbb (bad) pop jl ds jo mov add in lret les pop ss repz outsb jno cmp dec sub inc test mov jl aas inc sbb rcrb repnz movsl sub movb xchg (bad) xor pop test lahf and jns sub movsl ds or dec xchg jno adc addr16 adc inc push mov repnz xor divb mov pop add fstl cmpsb push lea ret xchg cltd int3 gs or ja jo popa jne imul loopne ja arpl out sub sbb jge push pop cmp and xor repnz jae das jle add jmp pop adc inc into insb jecxz dec das test or loopne gs xor sbb sbb or icebp push mov dec jle mov scas push jo pop push sbb in mov shlb or nop test (bad) divl jne mov cmpsb sub push sub sbb xor xchg inc rcrb lods push fnop pusha int sbb add and push jmp xlat pop sub outsb xor daa mov and pusha push mov xor jns popf xchg sbb xor pushf jno inc adc std and jl and lods inc and xchg push push adcl adc mov mov mov pop and loop xchg mov (bad) sbb add std or lret stos sub js roll leave dec or cmp jge push popa (bad) pop or rorb out popl insl repz xor (bad) mov xor sub add mov jl fdivl and xlat sub or (bad) jb sub add das mov iret data16 add push xchg ds mov nop sub dec or xor rorl add mov push outsl pop popa invd into xlat hlt jb push hlt nop int3 iret cld pop mov outsb and ficomp and jns shl iret jae jecxz cmpsb stc xor notl jns xor push pop add dec bound inc xchg into or cmc outsl outsl or repz cmpsb addr16 pop test inc inc and sbbl adc sbb xorb xchg cmp jmp mov aas sbb adc push push pushf inc or xlat dec jg test add mov pop aas sub es scas push cmp inc mov jmp cwtl sub dec movsb adc movsl add stos push sahf fisubr jmp dec or loope (bad) lds jmp jmp sbb mov cli or loop cli xchg xchg nop imul insb rcl in std sahf adc sub push dec dec xchg inc sbb sbb lcall outsb push out bnd stc and mov cs sti sub push mov (bad) incb clc pop inc jge in jae xchg js fnstsw add adc sbb push inc pop fdivl imul sub (bad) or mov push insl xor js and pop scas add stos fimul sbb into jp pop cmpsl add bnd jl stos pop xchg pop clc xor or mov inc lds sbb add cmp add or fcoml xor jae and sbb cmp xor (bad) cltd les sub movsb in and xor or jle rcl cmp popf mov mov mov cmc or jmp orl mov es push mov sub decb pop push jp arpl add push clc push inc sub mov popa fcoml popa xor scas test in bound jecxz test das in cmpsl cwtl cmp jnp sub sbb xchg dec out iret imul mov xchg pop fadd sbb js in adc push add test lret repnz add test or pop push add gs adc lods jp xchg dec xchg mov inc gs mov mov xchg mov test mov mov mov gs xchg inc imul nop (bad) inc movsl loopne stos hlt sahf or sbb xorb scas popf je mov outsl adc js jg std stos cmp fidivrl iret inc dec push outsl sub jb gs lds dec push or cmp xor inc aaa jnp (bad) enter inc fwait sbb sub popf pop hlt aas add mov mov mov sub (bad) pop pop movsl cmp mov sub test in nop jae add iret xchg test arpl negb add insl mov and jb test aaa jne insl dec adc jl jge lds or lcall xchg mov arpl cltd (bad) in jnp (bad) div inc push aam pop sti mov mov mov es xchg xor mov xchg orb or mov inc add imul mov stos js add mov sub pop push cmp movsl test pop scas fwait inc and sub adc jle lcall and inc push addb ret adc lahf sub push incb xor insl push aaa mov dec xor xchg popf in adc jne in (bad) or add add cld sahf pop xchg rorl ds aad fwait in mov jae loope and sub mov mov or pop (bad) adc and aad add jle mov iret ljmp rcrb jno pop mov flds cltd scas sbb mov sub sub xchg aaa sbb shl adc movsl xchg loop pushf pop xor xchg xorb pusha cmp (bad) cltd idivb fst cmp cld gs outsb xor mov (bad) jns sub leave aas add dec movsl (bad) inc and int push inc aad sahf pusha fnsave test xchg inc mov gs std push icebp cmpsl jge inc push ret inc mov lahf cltd sub or mov les les mov xchg and and sub in mov ret addr16 loopne cmpsl add (bad) sub pop mov xchg js int3 scas arpl das cmpsb dec aam arpl in push in xchg addr16 lret or and dec pushf aaa fdivl jmp mov dec movsb push or cmp sub unpckhps pop mov (bad) cwtl outsl inc shlb pop gs cmpsl inc lock inc xor gs cmp data16 pop adc repz insl sbb or mov mov add xor pop pop cs gs inc mov sub shrb or pop sub fucom (bad) adc inc in add xchg pop inc lcall fadds jecxz push js cs push push push into xlat inc test dec lret sbb imul xchg pop inc push int mov sub pushf (bad) fbld add mov leave or dec add aam test xchg scas js aam xchg inc dec and loop xchg adc xchg cwtl inc mov add arpl or push les test and shrl push and cmp push jg fs mov movsl dec inc xor cmpsb jns movsl loope mov shll xorb aaa add inc icebp cmp pop icebp mov je,pt jg aas dec dec enter xor ja in ret fwait cwtl adc mov pop sub jg mov push mov pop imul jno test stos fsubl inc idiv xor addr16 cltd jae popa inc enter push fstpl pop ljmp mov outsl fwait lods pop cmpb xchg mov lret pop cmc mov aam jno mov in ret div mov pop mov xacquire mov enter or fsubl rorl lea cmp add bound aas fstpl xchg and aad loopne push mov sbb pop fsubrs clc stos xor jo xor andl mov or subl fidivr fwait gs cmp test jge cwtl ja ror sub inc mov loop mov add jg or mov fisub xchg clc jle sbb push out mov outsb dec sbb cmp inc dec pop fldcw and sbb and adc jo dec fisub cmp (bad) mov and (bad) dec xor jl ret or lret jecxz and sbb stos nop add push xchg mov xchg inc dec pop pop jns out test mul cwtl sub loope cwtl mov iret loopne pop adc push add (bad) pop mov scas shl insl lds mov mov pop mov and inc gs rcrb pop xlat mov dec add dec sti cmp mov pop adc push adc cmp push add cltd test outsb inc dec cli jge cld xor mov sarl int3 imul mov (bad) jl fldenv outsl shrl mov lds push pop xor sub notb test aad lods mov clc cmp cmc adc das jp pop jbe xchg movl fcomps mov in in aam and test push (bad) cmc cs pop sbb pop test rol sub add js (bad) sub mov and pmullw push sbb das push adc fistl cli js call pusha xchg mov (bad) movl and es lret and fs mov mov jge inc or jae subps inc or int pusha mov push movsl add icebp xor cli and cli test pop xorl pop inc popa or sub push sbb bound xchg js adc xor out out outsb ficoml mov out (bad) sbb hlt popa cmc fwait xchg (bad) mov and enter addr16 ss xchg inc mov sub ja pop jmp out and xchg mov sbb repnz (bad) pop int3 mov aas daa push in cmp push sub sbb mov movsl adc fs adc sbb out pop dec dec cmp (bad) std int negb aaa andb push add adc or push lcall mov fnop push inc dec sub xchg pusha and or xor test inc sbb aaa mov (bad) xor mov pusha adc cmp stos int cli inc sbbw push add les in lods and or and cmp push (bad) insb mov decb mov je pop enter jg test adc sub repz add mov add mov dec adc fildll fistpl jbe std out out mov cmpsl sar push mov (bad) cmp cmpsb mov and (bad) cmpsl push les addr16 add outsl (bad) (bad) cli lea mull jecxz or int3 gs jle sarl jg push and push (bad) insl je in iret add std xchg add cmp and dec mov sahf lds xchg adc push (bad) jo insb mov mov push pop test mov mov pop sahf inc adc pop mov jecxz or push gs in sub or inc (bad) jno ret popa push jl inc bndstx mov (bad) cli aad psubd ret lods mov xchg lea xchg pop std pushl pop mov jmp inc jb push mov test sbb mov (bad) mov add (bad) fnstenv cmpsl sbb scas rcrl add cmp add inc (bad) xor or mov mov mov js add gs pop in sahf pop cmovle popf sub into xor movsl test push jl ror adc add or jae or sub pop cmpsb shr fisub insb inc add test add mov adc outsb (bad) in pop xchg jno jecxz cltd mov fstpl daa insl xor add pop sti cmp add nop xchg push dec cmpsl jmp test pop add shrb adc inc data16 repnz dec fsubrl into cld push pop jne jl nop (bad) insb push adc leave inc mov jno jae jge repz inc cld or daa mov lock (bad) lods hlt das inc or sub insl xchg adc push aaa enter mulb subps fadd mov mov ss clc les fsubrl pop jo mov rcl push inc pop adc sub out in cs in sub jge xor dec fbstp add ds mov pop push imul mov lahf insl push xor jmp inc lds insb pop je and popa std lahf xchg xchg mov push adc pushf inc and push lods cmc leave cmp pop fxam mov into stos pop fwait sbb and std mov adc xchg test mov mov sbb mov cmp dec ja cmp fstps pop sbb or push fidivrl cmc stos pop repnz and sti out sbb mov idivl (bad) sbb add ret sub aaa cmp mov xchg pop sbb fwait and xor inc adcb test setne popa push jns ret lret cmpsl test mov xchg aas xchg ja sbb xchg mov inc scas fcmove xor mov loopne mov mov xchg dec sbb push repz shrl fistl lcall iret pop jne and xor mov test sbb mov bound popf pop mov xchg adc sbb jns mov pop xchg cmpsb cs xchg cmp xchg call and out (bad) cs xor orl dec test fcmovnb fwait sbb inc stc movsb xchg repnz hlt jle dec outsb push in mov hlt fwait popa push dec in inc rclb push gs je and sti xchg mov cmp mov hlt push mov ret cltd sarb repnz xor (bad) negl out push and int test (bad) fidivrl mov jp adc adc mov cmp sbb js ss pop fidivr xchg jo push es sub nop stos and sahf sbb mov mov rclb test in xchg popf insw xor mov scas or aad shrb sti mov gs (bad) hlt xchg jno scas or jg mov jecxz negl loope loopne push inc pop sbb sbb jecxz pop into jecxz jnp mov pusha push inc pminub push xchg sbb and push sub stc sti jge popf cmc clc sbb jo repz mov push (bad) fistl push sub adc in xor insb ja movsb inc iret sti adc mov push rcll decb in ja testb pop pop into or cmpsb ffree mov dec inc xor sahf into jnp lea sbb pop xchg ljmp push dec incb cs sub pushf call hlt dec leave ret movsb xor repz xor xchg xor sub sarl call repnz push mov les pop sbb std je sbb or mov rcl dec arpl add rolb (bad) dec mov mov push idivb les fist mov rcrl adc jne les cwtl pop rcr sahf lret inc hlt sbbl push mov adc mov xchg mov inc add pop aas loop add test fdivl insl mov mov test (bad) or loope push mov decb lods jns ja ja hlt xchg mov pusha out lea dec cmpsl test addl gs add dec add cmpsb dec push fsubl pusha insl movsl adc push add jno je pushf icebp daa mull inc mov mov popa sbb mov jne mov cmp stc jb aam lds je lds xor imul scas adc inc lret pop xor xor add pushf xchg gs xchg mov loopne out inc lds sub pop loop sbb pushf and jb mov sub or xorw mov pop or pushf push sub push in dec (bad) xchg dec (bad) push sbb inc lret mov mov pop jnp push pop mov push rcll fwait addr16 mov pop dec xlat jg push out xchg adc push rclb enter mov pop pop inc push cli es sub push xchg cs call mov cmp and fidivrl mov jb xor mov or mov push aaa iret xchg ret add or out and pop add test or push sbb cwtl adc inc xchg cmp inc das pop sub mov add mov sbb rcrb mov push adc incl sbb mov divb xor and push sub xor xlat outsb dec push aas popa inc stos sbb cltd mov xor sbb xor pop outsb orl ja decb jp icebp pop lahf aaa and jl xor les sbb in rcrl pmulhuw int3 adc push jae and jo mov testl inc popa mov ljmp jmp jmp xor arpl lods jnp mov xor test cld insb or and in push push sbbb shll jg push es and test loopne push test add lock pop andl push int3 mov cmp jb dec sbbl and pop jbe jge enter or pop adc leave cmp insl popa and xchg push push nop (bad) jle stos bound in test pop jo xchg iret outsl sti pop sbb xchg xor xor push ret out outsb (bad) xor xchg push inc add mov test xor inc cmp repz mov and pop pop and aaa sti mov ss mov inc pop or (bad) and jnp,pn xchg jg add cmp cli (bad) iret aas repnz cld xchg jo iret sub aad pslld and sarl add xchg out insb in repz mov mov inc mov outsb xor lds pop push (bad) loope inc mov adc xor aam xchg xchg jecxz inc call daa add (bad) push push lock push (bad) add testb mov add push testl in ljmp xor and dec fldenv mov xor lds ret clc push add fistl xchg push push into cwtl xchg aad xchg xor xchg push repnz (bad) sti inc xchg mov fidivl icebp in adc pop sti dec jmp inc repz mov or insb dec push pop add test daa cmpl (bad) add dec sbb sbb ja dec les sub (bad) pop push mov sahf adc jnp dec xlat push sub dec sub and and fcomi cltd call xchg in sub lret ss mov mov pushf and pop adc jmp inc rcll subps fstps mov adc sbb push xchg mov inc xchg addr16 repz pop sbbb imul cmp jp xchg fstpl mov into addr16 push sbb lds (bad) sub pop sbb or sbb add or faddp cmp das mov push inc imull pusha adc inc rcrb mov push stos jno mov insl or or adc inc mov imul add icebp and inc adc dec popf (bad) pop (bad) imul dec popa cmp inc sub arpl mov int3 inc cmp xchg std jge pop sbb out xor xchg add xor inc jle pop sbb out in jbe mov xor and test in push insl stos inc jo nop sub outsl sub into or pop mov and inc ret popf push sub imul xor imul das movsl add mov pop pop jo dec mov aas xchg js xor fstpt (bad) sti cmp test rcl mov cmp ret and pop mov dec call movsl xchg mov jmp daa jl stc mov fwait sub scas daa adc sti scas xchg or imul xchg ss pop insl (bad) or xlat es xchg mov test cmp or push sbb gs mov xchg sub or inc cmp inc dec stos mov loope pop push fldt faddl out (bad) pop jnp mov dec cs fldcw push inc pop std sub adc jge out sti cmp jns xchg adcl and mov push (bad) aad loop jo cmp rcl imull stc pop inc cmp xor sub aas movsb xchg cmpsl in imull stos sbb or push mov xchg add add rorb dec (bad) jne lods cmp outsb faddl pop div push sbb dec mov cwtl pop (bad) dec xchg xor jecxz test cltd (bad) mov fildl ret fiaddl (bad) sarb xchg xchg adc std inc popa movsb fisttpl je inc cltd push movsb cmp push cmp xlat and (bad) jge ret (bad) add hlt and mov aas cmp mov out aaa (bad) jmp out fisubrl xor stos or mov xor add adc ja inc cmpsb ja inc pop int mov fs adc mov hlt cmc sub lds imull ret ret push test (bad) fcoml mov in cmp dec stos dec push jge jo sar add xlat (bad) and lahf inc sub and aam cmp mov pop add sbb mov dec addr16 cmc mov add hlt pop mov mov inc push or xchg pop mov xchg popl add xchg je sub inc pop shrb jmp test aas sbb fbld sbb sbb sti mov rcrl sbb cltd mov xor in or (bad) lcall mov sbb and pusha addr16 jno xchg (bad) out xchg out insb and jae fstps out adc inc cmp enter (bad) xor (bad) jne negl scas retw mov inc xchg and fistl adc add xlat lcall dec inc outsl das pusha pusha dec and (bad) in fldl xlat idiv cmpsl jl or aaa jo cmp or sbb mov test sarl mov ret idiv dec and cmp test sub xor pop jae dec pop cmp inc adc pushf inc sbb sahf ja cs ficomp nop push dec es shr xor leave insl test imul adc repz stos push outsb in fistpll imul cmp lds xor in jns or fldl testb or ja nop cmp pop or pop cmpsb mov add (bad) push lea es add (bad) pushf (bad) jae (bad) stos insb jle shlb mov lret mov ret mov pop mov dec sub dec outsl pushf inc push mov mov cmp cld push fld mov out pop push pusha aaa sub push mov enter pop sbb in sub sbbb and lahf mov xor popa sub jle sub mov jl mov sub xchg lret pusha stos (bad) je int3 dec xor testl push and negb test pushf cmpsb (bad) cld dec pop push sub mov roll loop sub mov push hlt outsl pop sti jnp shrb mov xchg insl push or call xor cmp add mov cld xor cmp (bad) mov sub lret insb mov cmp iret dec sbb adc lods cmpsb lds cltd dec jne jo push pop mov or lcall or sbb add incl cld gs xchg adc push addr16 (bad) mov sbb imul sbb mov insb add inc adc dec (bad) xchg aam in push mov jmp lods adc cmp repz test sub sti (bad) test mov out push xchg and sbb or jl or out das shr mov loop sbb repz (bad) mov sti scas add movsb dec iret orl lahf js repnz ds dec dec in jns push (bad) mov scas fistl into dec pop int loopne xchg bound push adc or int3 push mov (bad) inc mov fmull loope push add movsb lcall mov jbe mov in popa test xchg sahf xor ds dec imul cmpsb lds das mov xor sub xor jo push xchg xchg or push add sbb xchg lea fimul insl fidivl mov sub xor jno loope (bad) fistp sub pop arpl mov sub test mov andl loop test and push int and mov add test cs mov rorl lods mov sub xchg adc pmulhuw pushf ficom or mov add push ror hlt outsb cld cmpl xchg or adc inc adc xor movd push outsl cmp lret adc mov mov jns adc mov daa adc (bad) jl and add dec push pop pop dec xchg push enter push and (bad) std sti call jne cmp mov sbb mov idivb sbb jg dec and les push push dec inc sbb mov xor lods xchg or aam movsl push mov aaa or sbb and cld mov mov or les jmp xor xchg push mov dec pop data16 push cmp mov sub out sub and push mov add push movsl and push popf and push xchg and push lea push test lcall mov jg les mov pop or js leave lea gs adc add sti loopne push jl call dec fwait scas rcrl mov leave pop cltd mov jb push jecxz or test das in inc pushf (bad) push xchg test and push or out or xchg mov mov mov ficompl jle negb sub dec and sahf pop je notb test fldenv pop dec int3 pop inc (bad) rcr out xor lea mov sbb xor fmuls mov stc daa xor add pop lock sbb das push sbb xchg and imul sahf stos push mov push jl rolb mov leave dec cmp ret notl aas lock xchg movsb call scas sub ror sub leave pop push push jge mov dec test pop es pushl loopne rolb push jge dec sbbl rcll rclb orl or ss sahf pop test divl adc inc dec and in xor mov inc xor lds adc cli and cwtl test stc andl loopne adc ds jnp cmpsl xorl ljmp mov in jae pop in or push and xchg add sbb mov mov popa pop or in leave pop jo pushf mov adcl sbb and push pop jno pushf (bad) rcrl fldpi insb push jnp dec lret inc lock outsb fucomp cltd push (bad) mov out or pusha test mov dec sahf (bad) dec nop mov pop fisttp sbb sub cmc add lds mov sahf pop jns dec xchg sub lcall (bad) adc mov and fidivrl mov push push in fucom and and xchg or (bad) or push lahf fisub mov stos fs push (bad) popa pop xchg dec enter data16 and or push push insb inc pop movsl fcmove lds cmp cli adc sbb inc dec (bad) loope push mov adc sahf dec sbb lret les jge or push adc and xor lods pop subb sub fbld insl repnz cli and fldenv aam sub push popf and icebp dec (bad) cmc xor ret pusha aam pop inc repnz out sub roll aaa inc das jg jp and cmc adc push icebp sbb or inc cmp movsb add ljmp pop cmp and shr mov and pop mov lods lcall lods aad sbb je (bad) pop out bound or aas mov add dec cld iret popa jmp pop mov jns insl jl popa pop cmc aas xchg sbb jl sarl xchg add pop pushw push mov into aad loopne push subl push pop dec stc adc pop sahf icebp sbb scas lret and inc lea cmpl or es out fwait repnz clc add (bad) xchg adc cs mov inc jb in xchg mov jmp repnz fisubl lea push bound push inc test dec mov pusha push sub pushf add adc test outsl mov (bad) cltd mov sub dec or popa push or movsl xchg stos scas dec stc push sti push dec jecxz mov add js push mov lahf and cmp jbe arpl xor lret mov or mov push mov std in (bad) adc iret iret (bad) inc dec aad add fsts inc shlb push pop push mov add popf cs pop push (bad) push pop sahf mov adc xlat and sbb out sub cmpsb or inc test incb clc test mov add lods sahf sbb add rolb (bad) repnz xor inc or out movsl push push sbb clc les in dec adc mov add in xorl sub or test xchg (bad) jne loopne xchg rclb frstor jo push jno add jmp fs pop sbb std lea sahf imul jns mov add jp in inc jg sti nop movsb mov xchg test sarb sub rorb leave fucomp sub das push mov js out inc pop jo jl jp sub xchg das clc adc mov mov pop inc pop dec (bad) xor jp shll out sbb or xchg mov jo cmp test repnz lcall xor jo mov out cmp mov pop adc push data16 add sbb pop dec outsl sti mov fs and jbe dec ret popa sbb add cmp sahf dec mov ja inc outsb pop int3 pop cmp (bad) mov enter in or call out aas pushf push imul aam ja lds das outsl cmpsb mov mov cmp push push es jbe test popf sbb pop or dec lahf pop jg lcall fmulp mov xchg pop imul bnd xor (bad) mov mov subl in (bad) lods pop or int cmp test repz xor pop shlb push lahf aaa loop imul xchg push push movsb fsub andb mov pop lret xchg mov xchg lock dec jnp mov pushf xlat xor and fdecstp repnz (bad) and pop outsb cmp push rcrl push mov notl fcmovnu fstpt mov loope jle pop add mov and cwtl cwtl dec pop pop (bad) and jge lods xchg fistl cs call and lea cltd xchg jecxz cs inc mov out imul test movsl jo test sahf sbb mov fldt add lock mov mov xlat add iret xchg cli lea adc je test scas push out xor add xchg jae rclb pop cmpsb test (bad) nop test xchg es sbb adc push mov in inc fisttpl inc movsl sahf jno mov das xchg and in inc mov sub jge cmpsb in add aaa inc xchg mov sbb mov cmp js cmp int3 jb cmp lahf mov (bad) cmc (bad) mov adc push pop xlat (bad) cltd in inc sahf sub add mov insl and xor stos cmp negl jmp in hlt dec pop dec out gs inc enter jle or pop xchg mov daa repnz add cmpsb mov mov mov (bad) (bad) rorb (bad) faddl xor shlb inc iret test les les test push lcall orl dec imul inc push or adc and inc xchg imul dec sbb sub stos jae or or pop dec test push lock je xor lcall mov sti or lret or xchg fidivl inc mov (bad) cwtl sbb sbb gs pop add mov test cmp loopne push add sbbl in jae mov nop pusha mov mov repnz and cmp cmpb mov mov sbb mov sub ja inc pop mov inc pop jp iret les (bad) cmp push mov rorl xchg (bad) xor sti repz mov jg gs push inc inc and jne fstp fist fisttpl stos lds pushf push and jo add outsb xchg iret (bad) sub push xlat lret and das fisttpl push out je jecxz xor insl xchg xchg jge sub rcrb in (bad) lods sub scas pop add (bad) or std jb xchg add inc adc push jns adc aam dec (bad) cmp sbb inc cmp call push (bad) sub repnz in inc ss inc jo ja js xchg icebp stc sub pop lods (bad) lds cmp cmp dec das and data16 cli lods xchg sahf jecxz fistpll jns,pt adcl inc push or mov pop movsb push (bad) cwtl xchg mov cmp sbb inc dec jbe inc jg and pop stos inc jno rolb in fstpt aad cld popf pop cwtl mov flds xlat mov test pop push into add (bad) lret clc xor mov jns mov jo inc mov pop cmpsl sbb xchg push push hlt sub aaa repz or imul test (bad) repnz pop mov sub arpl dec pop iret and (bad) loopne js jb sub adc (bad) pushl adc jnp or or rorb pop jns ret adc sbb loope iret xor add ret mov jns push je sahf inc dec insb addb mov (bad) xor sub push aad push repnz cltd mov cwtl cmp andb ss add lea inc jnp xor mov imul mov pushw int pop pop xor out mov and inc dec (bad) sbb fcomi mov cmp imul ret mov jp test and xor popa xor lret mov in movsb mov xchg clc jnp jle movl into ds xlat mov mov mov dec mov and cmp push or inc jb fucomip pop pop jns jbe loopew mov add sub sbb adc mov shrl lods fmuls or movsl jo push test pop add push rcrl ficom fsubs in ds cmp iret xchg stc inc sbb and jo xchg aad test in dec icebp inc loope mov cmp dec mov pop add scas pop cmp rorb sub inc jns add imul popa loope jp sbb movsb in add imul sbb mov jnp (bad) push sbb sarb cmp push inc dec nop int3 aaa xchg xchg sbb cld lds in enter aaa arpl aad pusha sahf rorb sbb cwtl and push mov stos sub inc adcb pop movsl mov jbe push or outsl scas jl mov sbb mov jg jge and mov (bad) sub loopne adc pop inc aas push mov dec or mov adc fildl xchg sub cmp xlat out or notb repnz shrb pop or and mov sbb arpl jl clc fisubrl jb roll js addl push sub jbe cmp test mov les lods fadd pop fnstenv and and (bad) sti in adc out stos loop cmp repnz dec pop loop and mov (bad) pop cmpl jo mov test sbb data16 dec sub dec ret js sbb mov push cmc adc pop jp xchg sahf mov clc into or sti pop (bad) cli jne pop mov jae xlat xor es sub push call push ret (bad) mov nop stos sbb cmpsl sbbl sti into ret dec sub xchg aam popa lods sbb repz arpl sti inc aaa mov cmpsb sahf xchg mov and pusha call inc xchg (bad) stc adc negl or inc xor dec adc scas fucom imul aaa roll jns imul in mov shl inc je fidivrl pop cmp cmpsb xchg les ljmp pop cmp push mov push mov pop sub mov jb and divb call xor (bad) cmpsl or add xchg cmpsl cld addr16 add sub xchg cmc mov (bad) repnz clc sarb cmp xchg mov (bad) lahf fidivr sbb sbb rcr inc xor push sbb rcrb push jle or fisubl push fcoms in enter imul fidivl mov sub rcl nop mov push pop repz outsl push or out push arpl xchg and cmp lea daa mov les mov mov adc mov test inc pop sbb sbb das jmp ret xchg cmp jae inc xchg push jp iret aam mov push push movsb inc xchg jne mov pop in js mov cmp sbb stos inc add fidiv adc jbe add pop sbb cmp xchg into fstpt (bad) and pusha dec add xor cli inc mov sub pop push cmpsb dec out push cwtl xlat int add sbb push add sbb lcall push or xor add jg or push lods lahf aaa xor je push push addr16 js pushf ljmp sbb add daa adc xchg xchg mov and into (bad) ja rorl dec cmp mov xor push mov mov test movsb loop lds mov add xor pop add pop and and test aad imul test ret stos roll rorb cs xchg pop add lds jbe out insb mov xor inc push cmp cmp push xor sub gs mov popf push repz or clc adc pop mov xlat jg jne rcrl and cli mov add pusha inc xchg (bad) or xchg fnstenv data16 xor cmp cwtl fstpl lea push pushf sti pop jmp mov gs and hlt cmp push dec jge adc pop jge lea cltd test rorb jb es stos lods enter mov push xor pop push mov mov add jle incl fsubrl clc pop mul bound xor jge pop sub mov scas in das ja test xchg sub lea and jns xor arpl scas arpl add jne xor lret inc leave cs xor xor pop lods bound xchg jg in into mov bound mov fwait jg cwtl adcl mov int jo and mov das popa inc push xor popf cmp sbb push shll std mov xor jp cli pop fcmovnu iret sbb out pushw sub mov out cmpsl xchg aaa in rcll or sub jno fcmovne fnsave adc or xchg repz sub adc adc lods cmp xchg pop loopne push xchg and mov dec push enter push mov cmpsb mov xor push mov outsb movsb adc push cmp cs cld mov popa arpl (bad) xor inc daa das shll adc push cmp (bad) out out cli mov pop in lcall (bad) out sub pop jns pushf jnp xor mov pop aaa lock lods repz cmp sbb pop inc outsl rol or mov mov sub mov ds adc or test xchg add bound xchg jnp pop adc popl cmpsl ret (bad) xor push dec mov sbb push mov std stos inc or repnz in add pop xchg notl mov pop rcrl inc and and hlt fcomps xchg fstl adc jns cld inc xchg adc mov mov mov (bad) js push pop pop pop sti adc adc arpl cmpsb ret or hlt inc (bad) popa les hlt data16 stos js adc nop pop sub push pop or insb cmp ret push push les mov into mov or lods sarb ja mov into lods (bad) hlt pop mov and xlat pop and jns or int adc and push aam aad bound gs mov xlat repz mov (bad) sbb fs dec mov mov xor or sti cmpsb adc imul dec (bad) sbb xchg (bad) mov and sbb cmpsb mov cli jecxz lret ss pop in addr16 jle mov insb push lret xor negl mov lods xchg repz sub add loope inc out push adc repnz xor pop mov shr mov loopne xchg push leave and and (bad) and xor loopne inc lds (bad) jmp and paddd mov xlat mov cmc (bad) sbb enter movsb xchg xchg popf les push scas jg mov or pusha popa xor sub cmpb inc mov (bad) addb sbb mov in mov inc jbe (bad) icebp cmp jbe xor pushf and aad mov (bad) mov pop xchg add inc cltd int3 cmp es cmpb jnp push xchg pop out lods add repz pop inc leave cmp pop xchg in add (bad) jb add cmpsb sub mov sbb inc movsb sahf mov or scas cs push movsl and cmpsl cmp (bad) or sahf popa sahf cwtl stos push xchg and fcomps mov push adcl xchg sahf call jb stos add jno push cmp outsb movsb push mov outsb (bad) packsswb stos adc inc dec jecxz enter push sbb adc pop mov and pop lock cmp mov cltd test adc jle mov fldl and bound lret gs pop mov icebp scas addl pop pop roll push lods out es mov pusha xor pusha mov add in icebp daa mov push rcll mov adc (bad) inc dec shll cvttps2pi xchg stos cmp pop gs data16 imull movsb and test es (bad) nop jne sub and movsb adc clc mov sbb jo and clc js out fdiv mov aas jle out inc mov inc pop mov adc jbe mov pop sbb jae sbb lret push bnd adc add adc sub popa jnp xor (bad) in rorb icebp cmp loopne dec (bad) adc dec sarb and (bad) lock push adc pushf daa lods jnp dec cmp mov out pop push enter and pop or push xor cmp cmpsl jnp push inc call sbbl outsb and or pop repnz (bad) lcall aad and loopne enter ds shrb nop adcl add negl xchg cmc ds int sbb nop push popa dec xor xchg jl jnp jne push add cmp pushf and sub mov outsb cli push or pop add bound sbb int mov js enter lods pop test and shrb movsl xchg sti ret jne rorb mov shl dec jo out sarb repz jne movsl cmpsb addr16 and movb cmp sub push xor pop mov xchg (bad) frstor cmp (bad) movups lahf andb xchg pusha mov movsb mov sub (bad) setnp dec lahf push inc je pushf nop cs movsb loopne jmp stos cli sub shl test (bad) xchg xlat loop rorl (bad) and dec jbe fldl sarl mov fneni(8087 je jno mov mov inc mov mov push test das mov mov cmpsl into cwtl mov ljmp pop clc aas hlt dec push movsl ficoml cmpsl jb pop and xorps shlb xor jne cmp and adc jle xchg dec lahf cld adc out jle or cs inc out fisttp sub push fistl (bad) or jecxz mov fwait and mov inc aam popa inc push inc adc mov or int repz fwait pop es adc add xchg icebp (bad) xor mov jl rol xchg enter scas dec lret fsubrs lea jns in movsl or je inc lahf imul dec sub dec pop sub push fadd mov (bad) xor jno add mov lods addb cmp dec pop repz rcr icebp aaa hlt mov mov mov lods in sbb or or bound jge outsw inc push mov cmpsl icebp adc push dec fistl in xchg mov iret mov (bad) gs or sbb and and repz add cmp leave test test mov xacquire icebp in stos xchg pop stc (bad) mov fcmovnb loop xchg adcl lret arpl cmp imul lock pop outsb xchg sbb jo jnp adc mov push outsb lret mov mov xchg in adc inc sub dec das (bad) lea ljmp rcl push and xor out inc cwtl sbb test nop inc mov jle xchg mov das in mov cmp add mov jnp cmc fisubr cmp mov inc scas xchg das test lods outsl lahf inc and add jae xchg fsubl pop pusha dec sub daa inc movsl add and pop stc adc fs daa lds das fdivl xor sub sub shrl mov mov xorl ja in add jnp imul pop push hlt pop pop xchg push dec es xchg push (bad) int3 push sahf (bad) rorb adc aam xchg (bad) fmuls fwait (bad) fmull xchg (bad) loopne cltd (bad) in xchg (bad) call push xchg (bad) lock xchg (bad) hlt push pop (bad) clc push adc sbb inc sbb ret and xchg loopne xor cmp mov mov mov fldcw jmp fs fadds sub add sub push and pop fwait dec leave inc sub call push jae and aam ss xchg mov sbb sbb pop clc pop (bad) pop add mov aad test push rclb jg subb adc dec cli mov push push sbb inc out sub push adc push xor xchg push xchg sub push inc add fs daa loope push dec mov xor jmp (bad) mov or shl test fidivr xor mov pop leave push xchg inc icebp lea sub test push mov lahf jnp outsb xchg mov iret sahf lcall inc cmp inc mov movsl sbb sbb fdivrp lods sub cld gs sti and mov cmp cmpl pop shlb xor and (bad) fwait push push movsl fiadd mov xchg cmp sbb and dec (bad) mov sbb inc push and out adc cmp sbb add mov pop lahf cmp mov test (bad) sub jle in and pop int3 imul ror and jno loopne dec pop mov stos shr adc mov mov pop jae jg in dec lret add test out xor mov sub popf addr16 insb inc mov test and sarl sbb out daa lds clc cmpsb paddb pop aaa fisttpll cmp xchg hlt scas jb push mov cmpsb dec inc repz lea (bad) sbb inc js or xor xlat movsl addr16 arpl lds les iret push sti pop lea jg fmull jne test (bad) xor sti mov hlt je dec cmpsl push in lods idivb push xchg sbb jbe mov inc mov clc mov fiaddl scas bound into mov inc sub push lods cmp cs out out loopne xor sub outsl mov std sbb add movsl dec andl jo sbb aaa lods incb lcall adc arpl push push sub ret push cmpsb lret xchg push popf cmpsb xchg hlt cmp sbb pop insb pop fistpll ret jne push sbb lcall dec xlat test cmp push mov sub int3 gs push dec and ds sub pop xchg outsb xchg ret hlt push hlt cltd ret sub insb and nop rcl dec repz pop (bad) fisttp pushf adc inc lods aam fmuls pop mov cmc sbb fs sbb and fstpt sbb out mov inc popf adc cmp adc clc inc xchg test adc (bad) call mov outsb cmp in add shrl xor out xor and out xchg or dec xor add xor outsb es lock test mov pop es fistpl enter nop push jno and adc call pop popf xor in fdivr adc scas hlt mov fdivrl add (bad) sti jle jns cwtl subb imul out popa cmp lret es jae xchg push lcall loopne adc jno in sub and mov aas in mov pushf test xor push movb mov sahf mov pop jae lods sbb jecxz dec mov sbb or sub fdivr xor insl scas jmp sti test adc xchg lret and inc mov jbe rclb sbb xchg (bad) sbb jne hlt mov nop nop int3 cli push hlt inc vpxor push mov in cmpsb stos loope clc aad sbb (bad) inc in xchg rcrb adc loope inc pop add mov shlb bound nop cmp sbb into mov adc mov (bad) cli sahf inc (bad) inc rcr add dec adc nop imul inc adc popa mov xor movsl mov adc inc arpl sahf lea stc outsl jge cwtl jle mov dec push ret cltd mov mov jl ret lods (bad) jle inc cmp in ds dec cmp mov test inc inc pop sbb jno push dec jne js movsl sub dec leave leave cltd mov fnstsw inc gs dec add test lods push push mov inc aaa lods ret (bad) mov or gs and sub clc xchg int dec pop pop xor cmp add lea push (bad) mov inc cltd or xchg or push popf aam (bad) (bad) mov or add mov call or mov pop int mov dec sbb fisubl fstl (bad) insl jg push in cmc xchg push addr16 fildl and push cmpsb aam pop sub add inc test ret ss nop cld pop xchg add jg add sbb add sub adc lret push into sbb (bad) jb inc dec inc das stos fwait mov icebp (bad) aam jo dec cmc aaa xor jg je int push mov and arpl mov lcall out and dec cld stos stc test xchg out cltd popa jle loopne push jmp pop mov in in push in add inc ret adc push cmc lahf dec adc inc fs push fidiv dec adc cmp mov (bad) rorl or lock leave or and rorl int3 and sarb push ret ja pop repz out xor aaa cmp dec dec dec lock pop fdivr sbb add push inc mov jo cmp jns mov fidiv mov sub repnz nop sbb xor cmpsl into push dec stc mov push cltd lods pop nop movsb dec jbe popf popa int3 sbb push negl shrl sub imul mov cmpsl xchg fcmovb ds popa outsl xchg mov test cltd daa pusha pop cltd and (bad) jp and mov dec push and sahf outsb (bad) pop daa jmp push fwait xor cvtps2pi add scas movsb cmpsb fcoms adc nop (bad) int mov pop outsl cmp mov in add jle xchg xorb (bad) add iret dec aaa cmp cmp fmulp cmp mov add incb gs in sbb cmp and (bad) movsl mov mov pusha mov aas movsl pop addr16 push rorl push (bad) pop mov pop lods out daa mov and das cmpsl add int3 add cmp icebp sub mov movsl sbb mov outsb dec loopne jo ds xor std push jno dec nop hlt mov jmp hlt lret imul lcall rcrl dec hlt ror or sub outsl (bad) test fdivrs nop xchg fwait jo xorl pop shll bound pushf out cmpsl jmp mov and inc xor mov out xor gs push push lods adc xlat push mov enter sub sbb inc popf daa lock add sub leave and lahf xor inc add cmpsl out stc xor loopne cmp xchg add rcrw push rcll xor or icebp jo imul and pop adc sbb iret stc out aaa xlat mov xchg sub stc in inc rcrl dec repnz out xor lock add pop lret lcall dec sub dec in push (bad) jp movsb movsb outsl stos lock mov xchg sub pop xchg sub mov es pop pop or jle sarl xor jl shrl cmp decb daa in aam aas jno inc push mov js aaa and seta leave out push push push sbb add pop mov outsl sbb fadds pusha outsl (bad) insl inc jecxz xchg and mov ret rcrb stc std insb xchg dec mov pop in jae shlb dec fnstcw lahf test bound cmc mov cmp test test out lcall je jg lock xchg dec add movsb xchg les push or push mov test push roll bound rcrl jne xchg pop in lret xor insb xchg jnp pop add fisttpll call test imul scas sbb xchg add xor dec repz mov sub sub cmpb jno cmp mov or rclb call mov and (bad) insl fadds ljmp ror push sbb and nop outsl je xchg xor inc push lods sbb push outsl mov add xor repnz shrl mov imul fnstenv push mov add pop pop (bad) sahf das adc jmp fidivl pop cmp jbe or (bad) push out pop out jnp inc js mov dec popa mov add jge arpl xchg sbb (bad) fwait cmc and nop jle fisubl dec cltd pop dec inc js mov xor rcl dec icebp sahf dec sub lret insl jnp jbe sbb sti cmp call (bad) push sbb ret rcr in (bad) sbb out testb aas jne pop jp loopne cltd sbb pop sub daa scas pop cltd push rclw bsf xchg mov test (bad) xor adc ja xchg pop mov inc setne int3 sahf jnp inc imull dec adc push stc lds out ficoml pop gs jbe add adc cltd ja cwtl add mov xor es push loope (bad) dec add (bad) jb scas jmp ret (bad) jnp outsl add and and and mov cmpsb xchg cli test mov mov dec mov adc push out jb pop xchg out push into arpl adc gs mov fmulp rcrl cmp movl pop or (bad) cmc int xor lock mov lea fistpl sub into and cwtl insl (bad) mov test and insb ret jb mov push xor fucomi push or xor test repz add fstpt orl jmp add add mov movl inc xchg pop ficoml les outsb mov in (bad) iret fnstenv pop (bad) or popa jle mov jmp jno aas sbb lds pop jnp jae sub adc jo sahf into add dec cld (bad) outsb in cwtl leave sbb mov sbb push mov sub mov mov test popf stos fiadd jb push into insl jge pop into push add rorl arpl and xor adcb push or sbb add aad pop fsubl fstpl fcoms inc mov jp or outsl mov push and jo ljmp push data16 or sub mov cmp (bad) jp sti dec dec (bad) mov out jmp or (bad) sbb cli test add push mov sub fimull sbb jne mov jno pop pop jns and adc fwait inc pop pop dec xchg add rcrl mov push inc ljmp dec outsb or cmp push pop or jge out lea sub mov jo and or cmp iret inc lret call repz xchg neg inc cli repnz inc mov inc popf dec ss sbb movsb jne fs and sbb sub push or sub sahf pop cld cmc (bad) ds lcall arpl es dec (bad) cld bound jb and dec add setno dec mov cmp into inc imul cltd mov jnp clc nop iret cmp sub or fcmovb aas push ficom mov or sbb movsl push mov fs shr daa scas sbb adc jbe pushf mov nop and sub stos or lods inc and dec out mov inc jle xchg loop sahf and jb das inc in jmp mov dec jecxz mov xor adc and ss sub sub lret inc inc sbb out imul lds shrl test cmp push sub inc push rolb inc jle sub inc out ret and imul test hlt sub ja pusha outsb repz add mov sub sbb adc adc movsb or mov add adc fwait xor loop jo xor push out push or push and or movsb imul mov jae push lahf and xchg imul sub pop mov adcl mov out stos adc xchg je mov subl pop fwait mov cmp adc jns or sbb neg out mov jmp aaa and xchg outsl xchg cmp aas fdivl push cmp loope and xchg xchg mov lret add push or dec insb out icebp insb mov mov addr16 jmp out and test sub cltd sub and insb inc ja dec lea (bad) testb jp rol xorb mov fsts arpl add movsl xchg sub pushf ficoml inc sub repnz cwtl push inc jmp sar xchg cmc mov inc out enter addl pushf mov les mov push dec je pop mov popa or scas shlb push pop adc xor or jo pushf stos push fldcw sti js fstps nop xchg sbb jp mov (bad) xchg dec daa divps jne dec sbb dec addr16 pop outsl (bad) jnp sub adc or lds sbb popf xchg movsb scas mov inc bound lret dec int jno bound fs jle push push test add (bad) and lahf jno pop nop lcall xchg cmc arpl arpl into inc lods dec pop (bad) mov fwait arpl jg shll adc xor or sar test loope sub cld xchg repz stos js mov add xchg jno,pt (bad) jb fisttp scas cmp pop push mov dec outsl sub shlb xchg popf sub pushf push imul jb inc cmp jo push in pop push cmp or and add mov jle pop pop cltd jmp pop push repnz (bad) aas sub lods inc dec ljmp (bad) mov insb cmp xor push xor bound mov xor inc pushl mull xchg mov repz js cmp inc fidivl dec or push movsb inc mov and mov mov xchg sbb push hlt mov pop or sbb mov xchg xchg stos push dec or cmp pop sbb xor dec cmc jmp mov xor inc mov jo aad iret and (bad) mov pop cwtl or sahf mov jns mov mov xor cs inc adc in cmp mov daa pop scas inc mov imull stos insb pop cmc fs or pop cmp scas jl or ja push add xor fcomps push xor into shr test call jge or sbb and jb data16 mov stc lods shl dec push xchg mov jle mov test scas into daa data16 cmp jno push inc dec fmull shrb lods jnp,pn loope mov mov pop xchg xchg xchg std aam nop pop or clc inc or adc outsb push imul xchg add add sub lock push sub xor cwtl out lret adc cmpsl gs sub aas call jmp pop xor popa in sahf ret cs daa ds pop sbb pop and push dec sub push arpl and pushf sahf adc mov mov push out sbb inc jmp stos mov fxch lea jbe pop cmpsl add sar xlat push fcmovne adc testb (bad) mov jno ret mov les and pop js jnp arpl ret inc push ss out mov cmp aam (bad) pushf add add mov jb aad add das cmp dec loop (bad) ja sbb scas add push (bad) xchg inc mov pop push jbe pop notl fisttpll cmpsl xor push scas fsub inc cmpb jns xchg jmp paddd rcrb xchg jb mov inc dec ljmp fdivrl mov or sbb cmp sub stc in aam lcallw movsl cmp test movsl insl cmpl insl jge lds in add rcll adc adc pop xchg test adc loop jns (bad) mov push loope mov andl dec push pusha cmp pop insb cli ja pushf outsb ja test outsl cmpb xor pop add xor jns pop mov test fs lods pop arpl out add push jo and mov in push int3 pushf repnz sub push dec jae or pop add (bad) push mov sahf sub jg cmp pop out ds dec fwait xchg xchg sub out in adc lods jae jg inc mov imul fs test and cld pop and in mov sbb mov lea cmp cmp adc rolb jge clc adc jae pop adc rolb inc add scas sti mov fcomip add adc dec into push mov pop mov cmp cmp les out xchg inc out sahf push das cwtl xchg mov mov push insl lcall popa add xchg (bad) push clc cmp or js cmp cmp out xchg push cmpsl shll lret sbb xchg inc cmp into imul adc roll iret inc pushf sbb sti js fisttpl or test sbb ss cmp cli push imul jbe inc mov sti mov ds pusha sbb out and xchg jne insl ret hlt dec or stos ljmp repz sbb add wrmsr sarl mov cmpsl sbb xchg ficompl push mov xor inc pop lock fwait xchg bound test lds call push and lods push jns xchg dec xchg imul test ret adc sbb inc pop lds jnp inc push and mov lret fmulp or dec and cmp sbb fcmovnu sub push jnp (bad) sbb mov stos adc or or push lea repnz pushf aad leave xchg dec jb mov or leave movsb jle or jmp lods xchg out add mov add imul outsb xchg jmp push sbb push outsl insb (bad) notb shlb mov inc addr16 or sbb adc add movsl test add or sub adcb jb fadd (bad) pop mov push and in fistl mov add dec movsl mov loope xor mov in and add sub int3 dec scas mov dec outsl or dec jle lods imul adc inc mov stos mov mov pop xchg mov push dec data16 mov mov sbb xchg (bad) mov out js pop fidivr repz rorb adc push inc adcl roll iret rcll xchg stc and push cs inc es inc xor mov ja ljmp (bad) sub (bad) pop sbb mov rorb add fs dec inc test dec push sahf cmp cmp mov fiaddl jnp inc dec cmc cli mov jle dec jne pushf push pop ljmp in jp mov popf outsl add push (bad) jnp mov mov (bad) push (bad) in stc test inc or xchg movsl push in sbb and pop rcrb call in cmc xchg push push add (bad) faddl xchg iret mov ja data16 xchg push adc sbb mov fwait popf push and xor fwait sti aas out iret pop movsb in or sub das sbb mov fisubl icebp pop nop push mov mov or das fwait bnd call lds cmpl mov sub mov mov lcall imul mov outsl adc loop pop test pop adc in xchg arpl je cmc lock jno sub imul arpl outsl mov or lods daa imull push fwait xor fidivr mov ffree fwait outsl pop push enter cld mov iret aam sub je in inc fildl pop mov pop xchg insb fidivl mov test adc or (bad) outsb aaa divb in sahf mov cld lds and fldl fidiv repnz pop addb cli push outsl and xchg or divl sti and xchg lea pushf stc jnp subl mov imul pop loopne rcr xor movsb jle out push pop xor push cmp push dec mov incl (bad) push adc loopne je test lods lea icebp mov and cmovb fs aas insl pop push fs les pop push pop sahf dec push mov cmpsb dec pushf mov call (bad) lock nop das pusha pop adc int js dec aaa inc movsl std xchg pop jae push (bad) sbb add cmp in push jbe mov aam push xor mov stc or push (bad) xlat lcall sub test xchg imul jle xchg xchg (bad) jno jmp add push xchg bound lock dec ds xchg (bad) xor mov enter sbb add js arpl out mov cs sahf mov sub das divl lea pop int lock dec test or dec popf ljmp pop lods dec ret out or mov push pusha (bad) pop dec in scas mov test dec out adc int3 rcrl (bad) mov out ret mov mov loopne scas test xchg setb sti mov (bad) lea mov jmp loopne push cmpsb pusha push shlb add stos dec cld mov mov fimul pushf (bad) add inc xlat out dec sbb stos popa dec push sub rclb ud1 jmp or repnz or pop and cmpsl gs xor mov push lods xchg pop add (bad) dec push cmp pop cmp mov or inc or movsl div test mov dec mov push (bad) rcl loopne inc imul (bad) out mov push add rol xchg mov cs xor fs inc pop mov push shlb pop xchg shrl fchs in icebp or lods incl fisttpl ja sub or (bad) movsb xchg jp inc xchg and sub fwait clc pop push adc js dec or mov hlt mov fcompl sbb xor sbb call jbe pop movsb mov cmpsl mov ret xchg xor incb cs mov push cltd stos pop add push push outsb icebp (bad) ss mov xchg mov insb jge jp decl dec dec cmp ds movsb xchg dec sbb sbb xchg (bad) sub push int3 mov cmpsb and movsb sub (bad) sbbl add outsl adc call dec mov pop rclb stc jmp loop adc add imull data16 pop and and mov mov cmpsl inc iret test mov out push dec (bad) push inc or mov shll add pop leave inc add dec (bad) or lods and hlt jbe fs pop imul mov orps mov push add fsubl (bad) dec mov daa push jge push arpl out mov push repnz mov dec xor int3 pop movsb dec jmp jl lods jl inc test push mov sbb bound inc or jmp imul fs cli iret out test adc (bad) xor leave inc in cmpsl negb jno loopne cmp inc mov loopne ja mul cmp out ret cwtl xor push fsubrl rolb in xchg push and dec adc mov dec in ja pop in arpl sahf xchg xlat xchg adc cmp imul or pop es fstpt sub rcrl dec cmp sahf jl (bad) sbb insl push xchg xchg jne cmp fcmovu out call in adc into in outsb repz inc jg xor mov mov sub cmp out fldt movsb push jne into sahf out cli lods cmpsl xchg daa fcmovnbe pop pop xchg xchg int3 gs cmp or sbb inc push push nop nop mov cwtl test pusha in into rorb out inc popa jb imul lahf jno lahf sbb in dec aad or in jmp mov lods pop pop movsl sbb pushf mov cmpl data16 cld loopnew sar push out subl cmp cld in fiadd xchg or sarb (bad) mov ficompl sbb loope jl inc repnz dec pop xor sub and mov andl mov mov jg inc shll mov push jnp cmp jns mov jmp sbb imul lock mov add mov cmp and out aam fcomi adc mov pop xchg lahf fnstcw out xchg inc sub sbb push pop test das test insb pop sub insb mov insl leave cltd fwait imul or loope push insb or test nopl cmpsl add push cmpsb mov das mov pop ja aas (bad) loopne andl and sub out mov adc orl and push mov mov in cs lcall shll in lea inc (bad) (bad) push stc ret xor jmp test dec adc sbb jns pop punpcklbw inc popf into and jg bnd dec pop mov jp push movsb pop add mov shlb lea in mov xchg inc pop push adc xchg sbb repz ds mov xor and jle cmp test test ds inc dec loop pop or xchg push dec sysret cmp jno dec hlt mov (bad) repnz pop cmp mul dec inc mov xchg ret lret (bad) adc inc dec jge pop clc repnz mov xorl cmp xor dec popa mov dec pop adc aam mov xchg scas sub in jle mov cmp mov sbb popa sub adc fidivr xor push mov add cmp lahf push loopne jo pop push loope hlt ds fstpt mov aad addl sub dec dec xchg and push sahf popa push xchg dec scas jle sbb repnz push ja jae inc jge imulb inc rdpmc sar xchg jecxz xchg rorb mov outsl push loopne inc int3 xor shl sub mov les cmc dec sarl negb cltd pop jp lea je sti ljmp jmp mov ds fmul cmp (bad) xor subb inc rorl (bad) cli and push push outsb aad es inc inc cli pop inc mov inc jne jle push xchg xor inc adc or pop pop or sub jne (bad) jp inc fisubl pusha movsl inc or push int (bad) mov out mov sbb mov pusha test cmpsl add add add mov loopne xor mov and add loope inc shlb jle sub aas outsb xor mov inc je bound fs mov mov cwtl and insb out (bad) aaa dec cmp mov ret gs subb push mov xor (bad) adc mov insb icebp and dec cmp and test in movsb fs in push mov pop leave jnp inc iret sti mov xchg and add rorb mov mulb xor dec xor ficomp cmp fisttp mov and addr16 jae jge stc into adc ljmp mov push sub cltd imul int jo jae inc iret cli sbb rorl xor pop ja repnz mov cmp popa outsb sti xor popf sub ja and mov dec or stc xchg (bad) loope pop lods push pop shrb (bad) add rcl adc cwtl adc fcoml inc fs mov cmp ftst mov ret rcll jo adc mov aad jl (bad) mov xchg mov sbb enter cltd and aam mov dec shrl dec orl push movsb out das xor loopne push dec in into pop push push (bad) and adc mov mov xlat flds pop xchg test push lea imul cmp xlat das decl add outsl sbb or jno rclb je sbb sub mov cltd inc mov cmp dec add pop or sar test cmp not int (bad) xor (bad) stc mov dec out nop mov sbb lret pop mov fstl icebp or fldenv jge,pn movsb pop sub mov sar (bad) fdivrp inc cmpsl jno add sub cltd dec roll mov sub jne ja loop cs jne dec outsl mov xor in push mov icebp inc pop mulb lods adc jg and (bad) mov sbb addb stc mov add push xchg jg fist push fwait sbb add push add data16 pushf lret cld and imul in mov mov sub fimul into and icebp iret or clc push int pop xor outsl gs ja stos jns push adc xchg sub xor mov repz dec outsb (bad) out pusha sub das or stos ret adc fcoms xor mov (bad) add or aaa insb es push mov insb push movsl and testl mov xchg dec lds test (bad) xor sbb es sub inc cmpl idivb cmp push add add jb mov add cmp test or (bad) in push mov jno xor xchg cmpsl xor mov and test jg xor sbb daa adc imul into and pop xchg sbb add sub test cmp dec (bad) lock out jge xchg rclb and (bad) fnstsw add data16 dec jl jmp mov push out pop stos repz in dec popf sysret lahf cwtl inc adc aam xor negb or dec mov mov lret inc lcall fwait adc adcb adc nop xchg jge or mov das mov test inc test adc rorb dec mov push (bad) mov (bad) dec fimul enter xor adcb (bad) push mov lcall test adc xor (bad) sbb cmp pop cmp ds add jle sbb in lret adc cmp pop lret std out dec sub and fldl pop add cltd sbb sbb add adc and xchg (bad) das pop or mov cmp inc mov pushf sti mov mov cmp imul jecxz fisubl in out xchg add cmp xchg cmp push push cmpsb addl daa and (bad) enter cs push dec (bad) lock mov inc cli sbb mov sti nop mov int mov sbb adc xchg sbb das scas (bad) sbb mov push mov pop sbb loope sub xchg xchg adc fucomi pusha mov rcrb jae adc xor aad loop jmp pop loop and popf and pop jg cmp icebp pop xchg mov push ret stc mov xchg xor mov or aam ret adc jns cmpsb push popf mov shlb xor jle popf jae push push xchg fs int fstl sub cmpsb push sub pop movsl or adc or cltd sub pop inc xchg (bad) fldenv loopne jl push sbb adc pop jae push pop repz mov xorl out stos imul sbb mov xchg data16 (bad) nop or pop xchg stos dec push sub dec into mov or pop loope push addr16 idivl movsl test and mov in mov out nop jno popf inc add push dec outsb sarb xchg dec inc adc sbb lea mov int int rcrb inc or add add sub les ljmp mov (bad) gs mov insl or cmp ret mov roll test dec int3 mov sbb push inc test ds frstor stc push fwait lock sbb int3 gs das xor mov stos sahf aam add inc dec rol push mov fbstp sub sub or mov or dec (bad) repz data16 icebp aas aas int3 insb xchg out cltd lea mov scas xor dec outsl gs push xor stc in in mov mov dec lea pop arpl push dec mov cmp out jo leave cmc inc cmp pushf lds sbb xor fisttpl sub cmc sbb sahf imul inc sub xchg mov addb or fisub mov adc cs xchg sub mov add gs (bad) nop cmp addl mov and mov std jecxz sbbl pop jns ficomp hlt adc popf pop repnz mov cmp into xchg gs cwtl lret and lods jns sahf and popa fwait lcall dec or mov add push fstpl inc in sub mov not outsb fcoml inc and push pop jg dec inc or dec lret jbe mov inc or jo roll roll lcall fmulp sub adc xchg xchg repnz es mov stc sub jle push sub mov jns arpl push pushf xlat mov push fs or iret cmpsl mov xchg ret mov jns rolb jg test mov or or addr16 cmp rclb dec cltd cmp in mov repnz addl adc andb inc es sub lods (bad) outsb gs es shll in lods mov (bad) int3 pop notl aas xor rcll push in dec mov fwait jno sahf in push xchg out inc into mov cmp mov (bad) lock sar or fs add gs int sbb je call add js sbb mov (bad) pop mov aaa imul dec in sbb mov pop push add mov test dec in outsb pop push rep fwait insl lahf inc mov add adcb mov xor jo adc test bound jle sub xchg adc inc test test mov addl and xor ss mov and rolb dec sub sub inc or jp cld adc testl popf xlat sub rorb lds aas lock pop push test xchg mov movsl mov adc stos es pop sbb addr16 mov movsl fisub ds aad ljmp popa call lret dec pop inc fildl lds sbb sub cmpsb out mov sbb pusha xchg aas add insb das and call jl add adc pop cmp sub pushf inc xor addr16 sarl lret in mov int pop jnp xchg loopne jnp movl mov insl xchg enter adc jge in insl push pusha jp push mov lds inc mov sub fldenv inc stos cmp jl xchg imul jp push lret ds movsb loopne pop adc cmp dec mov xchg adc outsl enter xor rcrb inc adc xor mov push and and shlb cmp cmp and pushf (bad) loope loope inc xchg add shlb std in je subl mov incb push dec pop adc mov sub mov jnp xor lahf sbb rol inc addl (bad) mov nop cmp rorl fistl ja xlat inc mov add stos les hlt lock sahf xlat outsl (bad) test mov jp movsl (bad) in decl mov push sub pop insb movsl mov cmpsl pop fcoml jns test gs jp loop pop daa mov inc sahf jne xchg cmp dec clc adc ret push sbb pop sub jae mov test lcall inc cmp mov and jle in jmp and and pusha outsb sub sbb in adc jae push pop inc sbb decb aad xchg stos js lret imul mov outsl mov push les fwait dec sbb (bad) addr16 mov mov jle cmp push sti inc clc aas push xor sub std xor sbb xchg push inc in leave mov dec aad xchg adc leave addr16 mov pop cmpsb stos and and or cmp cmpsb cwtl inc insb popf mov jge jl push sub dec xchg xchg cmpsb xlat aaa sbb xor and ss mov aaa push sarb push in xor hlt add ret sub out das adc fldenv cs ss test dec pop mov cmc add xchg sbb pop or bound daa outsl call andl fldl sbb mov add xchg jp jl sti data16 pop test jnp mov movl push mov stos and and call add int3 ret push or sbb scas pushf nop and dec xchg pop sbb pop rorl andl dec cltd test and xchg mov add xchg xchg movsb lret lcall mov mov sti mov inc aas sbb dec sbb xor es sbb push mov call std shll push mov xor scas xchg inc lea int3 ret aas dec xor insb mov add (bad) sbb gs pop dec rorl cwtl xchg xor fs sti je cli and lahf lret subl sub or push cld cmpsb sti movsb pop xor xor int fs sub out sbb push lahf fistpl fwait mov push pusha je cmp fmulp repnz ret pop push cmp ds lahf sbb (bad) mov xor daa mov inc xchg lods dec test ja test jbe je fsubr xorl aas or cli sub pop mov popa or insb cmp xchg inc in and movsl aas ljmp fisttpl mov push lcall xor add adc sbb ds aaa inc data16 enter pop sbb mov or icebp pop sar adc pcmpeqd mov mov xchg inc mov out ds dec aas iret jnp xor cmp add cli or mov push bswap dec ljmp inc nop add (bad) das into pop dec push xor stos cmpsl xlat (bad) rcrb test daa or ss imul dec jge adc (bad) sbb xchg sti sbb inc or fldt int3 pushf jb rorl ljmp adc sub sub pop sbb mov mov mov ds jb test and and pop stc je cld std fwait or add xlat test xchg jle xor dec test sbb aad test gs dec test or das aad es out inc sub xchg xchg jmp loopne push push jbe mov pop or push movsl out hlt fistpl sub inc inc call sbb inc and xor (bad) xor adc es shrb in xor push sbb stos fidivrl fidivrl gs add sub add lret insb ss jnp pop outsl rorl je mov mov (bad) xor js adc and inc xchg xor mov movsl pusha mov inc adc mov out push stos add inc mov pop dec repz fstl aas or cmc xor and fiadd subl and jae and dec sahf mov aas xchg adc mov cltd inc adc lods jnp fs cmc jno ret or add jle push (bad) aaa mov popf mov neg or cmpsl icebp sbb rolb inc dec ficom repz pop jg icebp mov adc push in add adc xor ds or outsb into or sub push mov mov jecxz add xor sub std pop jp int (bad) cmpsb ret nop inc cmp movsb dec xchg inc movsl xor or xor push sbb sub lret es jbe sbb loopne adc xor xchg or pavgw test into dec or xchg arpl push es in sub jl fnstcw cli xchg add fisub cmp sbb push mov addr16 fbld dec clc push call aaa dec sti test test dec das lret jecxz inc mov imul out popl fucomi (bad) xor sub repnz cmp and mov mov fsubl fstpt cltd sbb add mov movsl push lods daa push and and aam sub xchg rcrl adc addr16 cmpsb jg xchg xchg xor push in insl int add add push fnstsw adc pop sub cmpsb or ret mov mov (bad) cs sbb out push repz cmpsb fist jmp adc adc mov aas sahf push jge movsb aaa sbb inc jecxz mov sbbb insb and cltd cltd xchg lret daa add (bad) ss add aam ja icebp inc sbb test fwait jge pop cmpsl orb xor adc int ds inc push jp cmp (bad) fcoms ds out adcb push into rolb sbb xlat mov std rcll outsb mov mov dec lea scas rcll scas scas enter pop out dec rcll jb pop daa mov push sub jg jns add sti repnz ret and jo pop xor adc sbb (bad) xor xchg jecxz or add stc lret lret pop add pop enter scas es jmp dec xchg roll push fsubs cmp lock xchg addl mov mov push lcall dec lcall call dec lret inc aam mov inc mov test pop (bad) push idiv das outsl mov dec pop mov adc test or sahf incb xor mov inc adc dec xchg sub push sbb mov mov (bad) xor andb push pop mov push inc xchg push lea and xchg int3 dec jbe and mov insl int3 push ret icebp sub cmp mov jns imul xor xchg pop cmpsb push add bound pop mov popf stos data16 cs in mov add movsb sbb lods icebp sbb push pop bound fwait xor pop xchg sbb add adc and push sub cltd cmp jnp out out ljmp mov pop sbb xchg jge add lea add sbb dec cmp fdivs popa xor sbb push sti mov rcl test popf jns dec pushf gs add and (bad) fnstcw add pop or loop and movsb (bad) std push movsb test lret je xchg aad sbb cld xchg add fnsave pop pop and jge aam sbb mov test and loopne test aam mov cs fisub pop outsb rcrl pop je jae sub daa gs sarb movsb seta lea inc into and sub inc insb pop mov imul out mov push loope sti xlat mov jbe pop push xor cmpsl pop (bad) sbb mov lods push add cs push jo aaa sti jae inc je mov in adc (bad) (bad) sub push sbb fisttp mov cs or jns jnp xchg mov out cs in add lahf shlb lock xlat enter inc push loopne out and jbe sub sbb xchg jp mov cmp daa mov mov test inc hlt cli mov and imul or push add fsubs lret and mov dec cltd xchg in cmp cli popf xchg pusha xor in add aas jle data16 xchg inc sarb sbb fwait test (bad) (bad) sbb xchg dec xor mov add sbb and (bad) sahf cs push sbb cmp jno dec loop add add movsl ret stos sbb cmpb cld dec pop add test xchg orb into and add add sbb add pop adcb mov aad push push and sti rcll cmp rcrl (bad) add inc inc xchg mov mov push lods push inc in mov pushf fisubr (bad) test xchg sub je inc adc mov lea inc push pushf mov mov cwtl pop decb int3 add out andl scas mov inc nop popa fwait pop push mov xor cs jle mov mov stos daa je popf mov lods movsb fidiv cmp cmp push pusha inc mov sbb cltd push or mov aam push cmp lds inc ja mov fdivrl icebp ficom ds gs cmp andl inc pushf fstpl xchg xchg repz mov xchg xchg test (bad) mov and or (bad) xor lret pop xlat xor std mov lea mov arpl jne xor sahf and sub mov popf or aas inc lods pop mov mov mov (bad) bound lcall sub mov cs loop mov mov inc and mov add cld add jmp xor dec cmpsb insb lea dec data16 or mov cmp dec fcmovu inc jbe add ficoml mov xchg (bad) mov inc sub push stc push roll in jmp and inc std imul movsb arpl pop jle call jo dec (bad) or mov call stos hlt aaa sbb jg pop xchg push jbe mov std sub and ss and and aam sub int sub lea and pop pop cmc scas mov nop in lret or (bad) clc dec push dec mov ss mov roll dec icebp push xchg gs shll aam inc dec sahf imul push (bad) push adc orb ss arpl popf add int3 inc sbb call lds xchg push push and (bad) repnz loope mov test std inc jle inc push mov (bad) notb sub xchg inc clc sbb in outsb lahf mov sub (bad) cld mov out mov xor sti sbb (bad) mov dec fsubs aas cmp push (bad) and iret xorl sub sahf out cmp push mov rorb sub or mov sti jge xchg sub cmp imul movsl xor insb jnp call or add mov arpl pop iret mov push push xchg pop push das int push adc iret pop xor pop dec and xchg test dec xchg pop and sub push xor test pusha (bad) fisubl jmp dec popf sub mov mov and pop inc xor jmp pop test js and scas add stc pop mov mov and iret cmp push scas sub sub dec jnp ret loop roll dec inc xor pop inc ds aaa and lock out sub shrl jle mov fwait dec pop and dec xor leave in subl and leave sub push imull sbb pop pop dec inc and dec (bad) sub es out (bad) out sbb aas in inc jno in lea mov mov add aaa and xchg mov inc out jl add jo push cwtl nopl dec test insb or add sub xlat dec lcall gs into dec into xor add leave and movsb sub scas or mov (bad) pop cmp cmp inc outsl mov or sub adc jge push fwait ljmp imul in outsl stos jne jle jns sbb jns adc adc adc sbb mov mulb call dec rcll xchg dec mov push mov es stos inc adc ja insb fildl push fistl outsl and nop int (bad) jne cli xchg outsl andl (bad) add xorl fdivl and (bad) dec and (bad) sti pop test cltd lahf mov std or (bad) jns and sbb popf lea add leave and cmpsl lods test mov or enter xchg jae dec xchg add pop mov cmp cltd lret xchg and cmp fisttp push dec in fsubrs andl fistl xchg cmovl inc jle mov sahf add sahf subb fisttpl add daa adc (bad) cltd pop pop cmp test das cs scas out xchg es cmp in and insl arpl push test pushl mov sbb add int xor ds cmp sahf mov dec cmc xchg cmp nop and ficom push movsl sti lea fwait subb in fnstenv push lahf sub add (bad) pop cmpl sbb mov add popa jl test sub jno addr16 jmp xor or movl cli repz add pusha ret add dec sarl fnstenv loopne sbb adc nop inc adc dec and dec popf xor pushaw imul inc cmp cmp xlat fcomps sbb pop daa pop pusha mov add lcall rolb icebp jnp xchg in dec pop out neg sub jmp add daa jne sar rcrb or dec dec dec mov push bound inc ret inc movsl loope xchg jbe jle ss pop push aas call sbb test ja loop mov xchg mov icebp xchg cli xchg lea add sub pushf dec jae and mov lahf leave shlb adcl cmp std lock lahf cmp cmpl xor pop sbb lods fadd adc fadds shll pop xchg ja cltd sub or rcrb into inc push pop lea test clc sub adc in fnstcw inc push and sbb popf (bad) adc ret dec add xor or lods sahf mov sub dec (bad) sub lahf gs jg push cmp mov bound sub add outsl push add in ret in jmp cmp int3 mov lcall xor cmpsb pushf fidivl add xchg or sti out lret pop inc test add movsb shll cmp ss dec inc addr16 xchg xorl orb fdivr popa aad xor std lret addr16 outsl push dec push jno daa mulb xor xchg mov inc xchg rol test inc mov pop std cltd ds push mov fdivs out pop or adc (bad) sbb jae in xchg xchg mov xchg dec xchg mov cmp outsb mov hlt lods imul out mov jl mov add cmpsl inc (bad) movsl stos adc dec lds fisubrl js insl cli int3 dec test mov push and push repnz test cltd dec (bad) push xchg aas arpl jnp jne push jmp notb in enter mov mov jb dec (bad) mov push mov in sbb fistl jnp xchg pop sbb popl (bad) lods pop stos dec sub xchg and bnd ret xor inc cmp lahf adcl inc lods test inc cmc add push mov sub lds jno mov outsl sarb cld jnp dec xchg outsl adc call shrl add cld fidivl mov adc push jl lods into insl sub out jle sub pop inc push test push popa jle cs mov xor arpl addr16 lods push (bad) xchg xchg insb pop xchg mov dec mov hlt ret or mov fistpl ret shll shr xlat adc daa std dec rcrb pop data16 loop jmp xchg jb data16 insb (bad) jecxz pop fsin popa aaa push and sbbl fldl out pop sbb shll mov cmp cmp and and lods mov cli and pushf mov mov popf sub jle cmp fiaddl mov mov xor lods push outsl jns (bad) rcr xor sbb insb popf (bad) sub insb nop dec (bad) jnp scas stc pop addr16 inc es in (bad) ror inc sbb (bad) pop dec test mov js loopne adc addr16 add push (bad) jg add sub adc inc or sbb push js jle pop mov test xchg bound jge mov push pop cmpsb push dec or push push inc ds mov adc jne lahf lahf outsl push jne inc cwtl xchg in mov xchg inc or mov les out nop xor mov push (bad) arpl push pop mov sahf push jnp cmpsb aam xor pop push cwtl sarb jmp fs pushf cmp adc xor dec icebp xor adc adc jge push pushw rorl outsb (bad) mov jg mov push or inc test jg or mov cmp mov jb outsb inc jbe data16 and (bad) neg fidiv movsl xchg lea negl test outsb (bad) push aaa xor cld enter scas or aaa push jo,pn cmp mov addr16 in lods or xor cs mov movsl push (bad) aam pop mov pop push sahf push or or cmpsb dec add or cli jne push cmpsb mov push jno mov bound fdivrl pop xchg scas scas aaa (bad) cld xchg das lods (bad) sub cmp loop add xor xor test dec popl ljmp add sub pop pop xchg inc jno xor popf dec (bad) aad add mov in mov or sbb enter arpl cmc jg int dec stc loope xor leave or pop adc lea push popf sbb in pop adc xor lret les jmp (bad) dec pop int3 orl cmpsb push cmp sub adc and xchg jp pop sbb into pushf adc data16 inc dec push icebp push daa push adc aam fimull jae xor mov sti xor jmp xchg loop jl aas fs or aas insl (bad) in in dec insb xlat imul and xchg adc sbbb daa adc mov das adc xchg rorl mov lds push cld mov gs xlat sbb push or or jg or adc test fwait scas mov adc xchg incb adc cmc fwait mov out ss pushf out pop imul adc fwait inc loope pop movsb xchg xchg mov fldenv in addr16 and out ljmp jp hlt cli and test or or les test sbb xor push or pop daa sub jp inc xor add je dec mov pusha sbb sub jne jo cmp (bad) movsl ds inc sti xor or insb jg mov sub cmpsb lret adc popf xor sbbl mov gs and adcl cmpsb call test push je or insb inc sahf ljmp sbb cmp push cld sub ds cmpsl jmp (bad) popf mov dec lds push movsb adc cld inc sub and sbb pop lret cltd pop sbb xchg xchg push jae xchg inc sbb mov or out aaa mov add pop dec mov adc mov ja pushf sub pop fidivr push test in jg (bad) out xor lds inc jb cwtl bound push lds es arpl dec push jge xlat pop aaa jnp movsl clc es mov mov lret or fnstcw add xchg xchg jle jo xchg mov or popf stc mov test xlat and and and js inc push pop test inc mov inc hlt test hlt decl and xchg sti fsub push outsb pop je lret dec jno gs or out sbb push xor jnp xchg test addl int scas addr16 es xor in outsb outsl hlt shrb (bad) addr16 (bad) pop push jp out sti pop jbe insb cli add push aas data16 jle sbbb hlt dec rolb (bad) xor sub out push xor aas or push sbb pop add in inc pusha lcall jge mov push dec (bad) std inc dec inc and lcall orl or fcomp (bad) aas push pop (bad) push lret mov xor mov xor and popa imul add test or mov or xchg imul xchg add aam addl jle in cwtl add pop inc adc mov inc je bnd in lahf andb inc or mov loopne pop push add jno insl aas rcrl (bad) fs pop adc daa into and cmp movsb fisubr sarb inc mov xchg mov sarb rcrb push add (bad) jle clc fdiv dec rcrl inc js sub xchg sbb lcall test stos xor clc aaa xchg cli dec outsb cld xchg not jp fdivrl imull push xlat and inc mov jg repnz xchg and add or ljmp lcall cwtl vphaddubw mov mov inc shlb xchg (bad) push adc hlt test ja add and popa push mov sbb mov adcl mov out cmp sbb adc aam pop push xchg push mov mov inc mov inc incb push (bad) mov sbb pusha xchg incb mov pop in (bad) pop dec std fldenv dec and ret cld push je mov xor cmp ss sbb jno (bad) lahf pop popf adc and popa outsl and data16 sahf push mov inc loope add sbb popf pusha and stos in aam std xlat call js xchg stos xor repz mov inc test sbbb jns popf out add aad add loopne les shlb push dec jo xchg (bad) xor test push cmp (bad) pop adc es push sub cltd or jno or mov add repz jno addr16 bound aad pushf lret scas push pushf std popf adc xor aas add (bad) push dec movsb mov outsb mov inc pop in lahf mov dec mov mov xor mov jle push pop movsb lods jae testl pushf les movsb pop mov dec and mov mov pushf daa mov inc xor add xchg mov lock mov mov push xor repnz fisttpl xor mov lret jecxz das repnz mov ljmp cmc add (bad) xor mov sub and cmc and out adc gs xorb lods cmpsl cltd pusha lahf (bad) pop push xchg fs arpl gs imul pop mov jmp add mov xchg sub jne and sbbl test push add jg lock and pusha inc movups mov or test dec sbb in in xchg dec repz xor and adc add push jno inc repz and sub popa cltd sub imul (bad) movsl (bad) push cmp sub ss mov cmp sbb xorl push fwait (bad) sbb popa es in js sub lret outsb pop cmp mov cmc lahf adc mov add scas fldl mov push fisttpl std cmp add imul (bad) icebp inc popa or add push or mov roll or mul mov dec xchg fimul movsl xor cli add inc inc dec sbb sti ja inc xchg pop out cmpl adc (bad) and sbbb xchg je and xor pop in xchg add pusha mov push jecxz nop rcrl fs pop push data16 jno jecxz out mov daa adc fdivl xchg push pop and cmp sti aaa add gs lahf and pop dec pop enter in call or repnz arpl adc adc cmp sbb sub and dec stc ss mov dec stos push adc push in push lahf jae pushf in inc test cmpsb push sub push and fdiv xor imulb push push cld and stos lea dec jo shrl fwait insb or xchg lret adc adc sub mov cli test pop cmp mov jecxz dec mov ljmp (bad) adc push sbb pop fcmove fdivl xchg mov pop je lahf xor stc jge mov pusha sub out or ljmp jl and xchg push push dec mov pushf mov sti mov mov dec sahf divl movsl jecxz xchg cmp cmp or push enter sub das sbb push into sbb push subl in jne jb cmp inc mov cmc icebp xchg jge cmp lock mov in jno out adc les or adc or and loopne cwtl das std sbb mov add adc lahf push add out push mov and xor pushf xchg lret adc inc lret test and jae dec cmp pop lcall jbe add scas (bad) xor (bad) sub dec lcall add pop (bad) cld xchg dec xchg adc push or and jmp cs xchg fcmovnb dec inc inc xchg xchg (bad) jmp test pop movlps mov push imul inc js cmp sbb (bad) aaa add sbb dec stc stc mov xor and int lcall dec adc cmp jb jns cmp test outsl ficoml lea sbbb mov push jo xor int3 (bad) xor mov aad jne or dec es das xor pusha addr16 add xchg xchg mov cmp rorl out mov mov xorl mov mov outsl or clc add xchg mov scas aad out std xor enter pusha xchg pop ljmp outsl jg popf mov stos dec push outsb sbb adc push mov lret dec jb mov cmp (bad) fwait xchg sub dec pop jp mov cli or push mov dec test leave push mov xchg push test aaa fs movsb mov (bad) mov pop cwtl and add fbld adc cs mov stos popf stos fisub ret push and or push repnz es and jnp fisttp out addr16 adc xor inc mov dec mov xchg jecxz sbb xchg ja fwait inc subl adc or or in and shl insl push dec push jecxz xor adc mov sti mov adc and inc insb and or addr16 mov push push add jne cwtl daa rep rol add jae cmc add fstpt mov xor add fprem or xchg lret jae xchg inc xor repz pop sti fucomp inc je add mov pusha adc fs add or (bad) mov sbb and push dec and (bad) divb js push (bad) popa std stos sarl adc addr16 lret pop adc add lds fadds jl popf mov mov lret mov aad pop fcmovne aad insb sub ret nop out and sub pop js fs mov dec pop jne mov or aaa mov or in push ret push xor add inc dec mov inc xor xchg adc dec aam cmp aaa cmp aam cmp in sbb xchg sbb xchg lret repnz sub clc aaa (bad) jmp sbb and adc push (bad) xor and jle mov cmc divl mov fistpl push adc in pop lea (bad) or mov insl out push into inc test or fs enter bound pop ljmp and jo push add pop or and jno mov dec cli fsubl lock (bad) cmp adc xchg adc sbb dec xor faddl movb mov mov fimull flds push scas push mov or arpl ss std gs pop stc push test fsubl mov idivb xchg xor jg loop pop fldenv jmp adc jp add inc out and int3 cmp adc (bad) rclb add outsb push sub fildl fiaddl inc insl mov adc testl insb pop add stc add (bad) jge ss adc orb sbb sub test mov (bad) btc adc sbb roll dec lahf push gs jg mov mov mov decl pushf daa jbe or pop push xor stos lds cmp lret data16 jmp inc dec add and jae xor loopne test fistp dec push xor outsl ss int pop mov into inc sub das outsb shll dec fistp and mov mov lods fucomi inc mov sub bound add add and pusha push fs scas sbb je and popa (bad) iret das sbb and mov imul xchg mov cmp ret leave decb ljmp jo dec cmp cmp outsb xor (bad) je (bad) aam je xchg shr movhps jne add hlt sti mov add push pop inc aaa mov push push mov std pop push lods out fwait xabort stos sub mov mull jno inc outsl adc dec pop (bad) insl test daa in fs (bad) bound cwtl push loopne popf aad movsb mov loopne inc (bad) sbb or decl pop dec js repnz and into imul jae lods inc inc sarb mov sub fwait xchg ss or gs outsb std ds jb (bad) mov cwtl std test dec jecxz inc xchg movsb push pop notb jp xchg mulb rorl xor icebp cmc or jl xor push adc ja rorl rorb hlt fistp pop mov xor addl or xchg out mov daa sbb cmpb lock outsl aam push test shrb dec rorb lea and add or ret enter dec cmp pop jle sub paddw lea je je dec xchg popf push ds mov div dec fbstp scas dec sbb xchg out stc test (bad) jbe pop pop pop (bad) pop mov faddl or mov cwtl insb scas sahf (bad) jl fsts subl (bad) sarb mov xchg sbb mov mov jecxz notl pcmpeqd add pcmpgtd pop out das (bad) (bad) lock shll or movl outsl daa push test out xchg jnp mov jmp mov test mov cmp push sahf xchg ss jno cmp push (bad) jne jp jge into lret sub xchg pop xchg data16 jbe clc fxch lea jnp pop nop mov jl,pt (bad) andl push and pushw xchg es and pop ljmp xor lods hlt divb mov (bad) in push rcll sbb loope inc and into insb aas sbb pop mov lea and adc in cmp pop lret sbb jle dec clc cltd xor or inc ret jo in jl gs sbb lahf cmp adc mov fs and popf fmul add in test fadds adc or (bad) (bad) sbb xchg sti fsin mov arpl (bad) shl or mov xor test push cmp leave repz das sub adc fsubrl dec jl fiaddl in cli pop les add adc jae sahf stos (bad) in mov inc mov test inc cmp xchg arpl movsb sahf (bad) sbb shlb pop mov push (bad) cmp aam stos fcompl iret ret push addr16 daa ja fdivs das xchg or jae mov mov (bad) call call (bad) adc dec adc push cmpsb push scas push lcall mov push (bad) jecxz ret aad popf nop rcrl xchg cmc pop add in test in hlt xor push push and mov dec sbb fbstp lahf sub inc adcl stos movsb cs jecxz xor push jmp dec rorl xor subl xor sub sarb adc or in out jge cmp aam js data16 add xor in insl mov or ja test popa push dec adc xor jnp sub test push xchg adc mov push clc cld lods (bad) pop sbb lods and cmpsb loopne pop popf cld rolb and subl daa adc dec add fstp pusha addb movsl sub gs and push sub xor pop (bad) mov add lds fucomi clc daa mov inc in xor rorl inc subl mov cmpsl stc in jne sbb sub sub jns add inc pop lods jp and popa int3 out inc xchg pop xorl (bad) cmpsb push sub mov inc sbb jmp mov orb mov mov (bad) les sbb cmp pop bound jge lods jmp outsb into lock mov roll outsb mov xlat mov sbb xchg sbbb and dec out adc (bad) xchg cltd test jl test cmpsl popf add xor mov addb mov insb nop in movsb iret dec aad shrl mov loop loopnew,pt jecxz js push aam mov xor lods gs cmpsb push push jecxz sbb or mov shrb ss data16 pushf addr16 jbe push les adc sbb inc dec or daa adc int cwtl jo sbb sub daa inc mov sub dec popf mov test cmp xor and test and dec xchg mov arpl sti out push movsb pop cmp leave xor and dec add xchg das movsb pop push ja sub jb outsb subl mov lret sub in push sub aad sbb shrl orb mov sbb and nop into lock mov cmp out in xor lods cmp stos inc dec pop lods and mov add insl dec mov mov and xlat inc movsb int in push pop scas pop ret fs adc sysenter and add push outsl cmpsl test inc shlb mov add hlt mov xchg add xchg test data16 xor es and and cltd arpl sub push arpl xchg mov and addr16 cmp add test and xor xchg jo test adc pop dec and sub je imul daa loope mov cmp icebp js orw xchg sarl lods inc or cmp in adcl lods or sahf mov subb or cmp rcrb xor sub iret mov xor nop push (bad) call fucomp dec inc gs sub pop stos scas sub adc je jg gs adc out dec imul sub rcrl and mov (bad) in mov popf xor je mov pusha pushf mov fimul cmpsl fisttpll inc out adc fdivr jae jmp and call jl push cmp xchg (bad) cmp mov ljmp xor dec adc pop mov sbb ljmp inc cmp je fldt dec xchg out or es cmpsl ja jo sbb push scas movsl push rcrl shlb outsl sbb and jbe nop pop dec mov sarb mov std mov mov pop cmc and mov add shufps add inc pop xchg sub jae mov roll test adc push cmp inc dec in fstpl dec push into repnz in (bad) stc pop jmp sbb push add mov imul xchg orl sbbl xchg pushf sbb (bad) jbe bound pop dec mov (bad) inc loopne add (bad) out js pusha sbb (bad) mov gs dec iret xor dec aam repnz pop insb pop xchg pop std sbb adc inc push fwait (bad) imulb call es mov fwait add xor les mov and mov ret sarl and cmp mov push lea mov lret sub ja js dec or inc ret cmp testl out rolb xchg or sbb mov icebp faddl sbb or inc in pop or mov outsb fiaddl xchg inc cmp and cs insl jae lods jg cld subl fcmovnbe inc imul pop es push sti incb dec sub inc es add pop dec or aam and stos push lea stos fs ds fwait add insl nop xchg cmpsl in xchg sub jl mov (bad) in mov add enter inc xor add sbb sub fwait xchg adc mov ret adc sub jb sub pshufw sub daa jmp adc gs and inc cmp jae ds cli lret sbb pusha fsubrl je scas imul sbb adc scas jno aam mov in add inc jbe jp push pop mov inc pop sub xchg push lret and mov les aas xor pop adc push pushf rcl mov sbb jae xchg in push cmp popf data16 mov addr16 sti mov sbb xchg pop scas push dec icebp jb xor fcoms jno lds sbb push out add lcall flds sahf jbe inc inc add hlt and clc bnd cmp hlt movsl shr aam or lds lea int3 daa pop repz jbe jp mov insb mov mov addr16 arpl cmp sub out das stos push sub xchg fwait xchg imul nop enter aam js outsl jnp and mov sub sub popf (bad) fs inc and psubq repz push xor xorb cmp jne and cli clc aam xchg nop (bad) loop lods xlat xor cmpsb or aad xchg adc and push cmpb sahf sub leave inc pop push loopne dec jo xchg inc daa xor xchg daa xchg adc mov addr16 mov pop pop xchg dec xor repz int3 and cmpsb hlt mov xchg cwtl inc shrb repz iret jl rclb jne repnz adc loop mov movsb lret and adc and xchg cmpsl outsl iret mov push mov adc test ret punpckhbw (bad) dec lahf mov adc (bad) and cwtl mov mov cwtl and in jne cltd (bad) adc daa cmpsl cltd jecxz fs mov mov mov dec add pop push loopne fsubrl shrl in cmpsl (bad) jl test jo (bad) lahf jae xchg fwait jno mov test (bad) aaa dec inc insl jns sub loopne xor jb sbb das movsb mov movsl xchg cmp ss push cmp xchg imul or (bad) mov aaa rorb daa dec xlat jne and out icebp mov leave enter mov jg xchg repz pop lods inc sub scas xchg and sbb out cltd push push into xlat pop xor xchg punpckhdq or adc adc and cmpsl int or js sahf cmp jp jmp xchg adc jmp push mov or subl jecxz dec es cmp push test repnz and xor cmp sahf sbb dec push sbb ja dec icebp xor jno mov push pop lret jmp add mov add push mov imul mov lea cmp sub pop test sub cmp cld insb insb popf dec std popf adcl add js repz popf pushf adc add cmp xlat sbb mov fcoms std cltd adc cmc and iret push mov inc add cltd gs jecxz inc nop test inc jae inc jb rol mov cmp (bad) cmc es lea adc jno outsb lea inc das sbb push xor cs pushf into mov sub or jp addb enter xor addr16 jp mov sbb mov cltd mov ffreep sub aas mov sbb push das or push out fsubrl (bad) out dec addr16 pop cltd gs or icebp jb cli sbb dec mov pop add outsl adc dec push out repnz iret dec pushf pusha (bad) (bad) jle insb mov cs popf or add cmp mov into mov pop mov test rol pop gs loop or dec movsl cmc mov mov (bad) es das sub xchg xchg movsl idivb push sub lock adc jl sahf xchg mov js add adc fidivl repz adcb in loope popf xchg add push mov push ret push push inc xor cs and sub mov jb or ret sub or test push jge (bad) mov xor sti mov stos push pushf outsb adc jns nop cmp sahf (bad) (bad) divb mov mov negl push add ja adc jne (bad) sub push insl xor pushf incl addr16 sti (bad) in or repz push je mov push int3 (bad) fs fisttpl inc clc cwtl push inc mov jb mov ret sub xchg incb pop lock lds xchg lea into xchg data16 jnp push push push and cltd add dec sbb shrl add in xchg and or mov pop leave pushf jecxz addr16 popf into mov xchg sbb and rorb out dec fsts add mov outsb mov adc lds aad and std loope push insb sahf (bad) out shr xchg pop inc sub cmp mov fnsave fsubl ja (bad) roll scas adc inc push test insb bound and cmp ss frstor push mov cltd outsb xchg lea (bad) pop mov xchg cs xchg push sbb jns and cld into into in xchg outsb mov mov dec cmp dec dec popa xchg lret xor mov jns add push insl xchg idivl or pushf mov xchg jecxz push jno pop dec mov adc ljmp mov call ja outsb negl mov cmp sub xchg stos iret pop dec cmp cld aaa (bad) or sbb jecxz jl and push lods mov mov add mov jo loope popa movsl xor and (bad) iret mov int3 sbb (bad) mov pop sub stos lds fsubl out int das xchg push js mov idivb mov cmp inc outsb and xchg lds lods cmp jmp inc sub ds icebp cmpsl or daa imull cmpb pop fist iret rcll xchg mov int sbb xchg and cmp outsb sbb xor push addr16 sbb pop fisubr push mov lds add lret push xchg mov aaa inc and iret out mov (bad) dec out aam (bad) mov inc and xchg out push dec pushf pusha (bad) sbb scas add cmp push sub add pushf adc xor ja xchg jl mov bound out sar sbb xor lods cs jbe dec addl jmp sub rclb dec push add pop mov mov dec lahf pop (bad) fiadd sub lods fwait (bad) pusha inc xchg push sbb mov jns jge jns mov dec xchg sub push jmp push imul xchg inc and push test test inc fs stos mov push mov and xchg push (bad) xchg ret movsb pop adc mulb pop cmp addl cmp orl push pop ret pushf mov push hlt scas cmp sti xchg (bad) inc scas mov mov sub in sahf cmp mov add fsubs ja inc sub cli pop mov inc rclb frstor pusha lahf inc mov imul pop xchg pop or xchg shrl fwait insl popa sbb ret jno stc cmovs add es roll xchg in (bad) loopne dec test rolb jae jns xorb mov mov (bad) cmc push pop addps stos pop and jl mov dec xchg adc xor outsl dec add sub cld in or test push and cmp jl jns or sbb daa mov dec pop sub aam inc enter mov adc std xchg adc pop xor push jns mov xchg cmp movsb ds lds in aaa xchg ret out mul call inc daa or enter test xor jo xor je outsl cmpsl stos and insb sbb sub test daa push nop and xchg js lahf xchg loop (bad) repz cltd add xor adc or in scas inc fistp mov cmp pop mov jae pusha sub iret mov and sarb (bad) or out sub xlat fsubl and push imul ds sahf dec or and iret mov aad inc mov adc and adc xchg cmpl test xor rcrb fadd nop xchg rolb inc inc aam sub mov pop mov dec test in lret adc pop add pop rolb push das neg pop lock fstps and push fmuls lret push daa popf aaa fdivrs aaa lock xor push cmp pop andb mov nop (bad) xchg inc insb rcrl and and fstps cmp jae andb push daa jmp xchg loopne xchg and mov lds mov push sub inc inc pushf cs sbb popl in push in stc (bad) push movsl sub in cmpsb f2xm1 xchg sub cmpsl ds jo ds je push sbb sbb jecxz xor icebp pop movntps xchg xor in xchg jne ret xchg fimul pushf call aam mov or mov pop xchg mov mov loop aaa (bad) sbb dec pop out sti sub nop mov add int jg fcomps clc jl xchg sub add test push bnd fimul cmpsl and cmp xor sub lahf jne pusha xchg mov mov outsl jp mov test lods push cld dec cld cs inc std jnp cmp (bad) pop mov das test jno inc mov or shl movsl or scas or les ss fnstcw lock leave dec xor cmp dec xchg inc (bad) jg xchg cmc and or fadd mov xor pop jno aad cmpsb sub push mov mov pushf adc mov xor leave notb xchg rcr dec adc push sub test add ret repz push sub test mov push and bound push in and cmp mov fild rcrl stos insl loope mov (bad) je xor insl cmp inc frstor lret pop push hlt arpl pushl ds sbb and test sbb aas sub push cmpsl push inc sbb push iret and je cmpsb nop push cmc mov xchg mov pushf xor popf nop std adc mov jp daa leave mov jmp xchg call shrb jmp ja daa das in (bad) pop ljmp sub sub mov inc outsl movsl fsubs out insb adc pop (bad) pop cs push jae add stos xchg and and jo (bad) (bad) aaa aaa push jns sahf sti inc (bad) incb ret mov sub (bad) lods jecxz sub stos xor dec xchg in cmpsl test dec dec in and es mov pop stc and and xor sbb aam lods lret shl std mov and mov insl dec fs mov pop inc fs jo xchg scas xchg add adc ret lock pusha cmp mov aas in adc lret or dec jbe cmc pop mov jae popa or push lods jb outsb imul stos pusha cmp mov lea std push data16 cltd adc pusha sbb test and sbb adc and inc test push movsb fs ret pop adc hlt mov mov dec mov rclb xchg fildl in cmp mov ja xor jb and adc in mov lods xchg mov jge (bad) pop fs mov push test jg push aad pop jl jbe cmpsb mov cmpl mov mov bound mov cmc inc in lcall xor and addr16 sti fistpll lret adc fstl iret stos sbb std (bad) fist int mov in or daa jbe jns dec mov mov pushf popf iret and dec and push (bad) je dec insb inc test (bad) xor (bad) adc mov jmp fdivrs mov jno sub xchg popf jb sub jl jns enter jp adc push imul data16 stos inc imul mov addl jbe adc loope test jle sahf outsb pop movsl inc mov pop jno aad daa leave std lods sahf lcall out ss lock jl,pn push sbb and xchg jo out xor (bad) mov leave (bad) inc fmuls mov inc bound fs push add mov jb adc mov lret into dec lods ret popa out lea lret popa lret jae sti cmp movsl xchg roll xor mov inc nop fnstenv and sti fldl dec mov xchg add sbb shll jns jne pop dec xchg mov fild jecxz inc mov mov cli jmp outsl fsubrs push xchg sti mov adc pop ss ds add xchg cmp inc (bad) aas movsb pop jb int xor or add push dec jecxz sti das jmp in push mov add jns jl mov fcomps out in es insl inc and adc leave push scas xchg or sub fstps fistpl loopne mov push sub pop int3 cmp sti stc pop dec xor pop push sbb imul pop fnstenv add call xchg mov pop pop add jp movsb dec popa add mov cld sub ds mov mov push test lods or mov add inc or pop pushaw inc jg jns aam clc mov addl fidivr pop cmp lret sub cwtl test push (bad) cmp pushf iret sti jns aaa iret adc inc pop pop daa cli add xchg push xchg dec popf adc pop jb inc mov out xlat lahf dec or cmp sbb inc insl adcl xor lret or inc fs fldenv daa sub (bad) inc jle inc int3 outsb xchg cmp mov rcr xlat lret ret mov jle repz and push push dec sbb dec push es push or or dec int clc mov pop lret jp xchg mov lods movsl jno jo divb and cwtl mov or hlt and add scas xchg inc in insl loop jmp xchg cltd sub adc push jnp mul scas sub adc sbb lods inc sahf mov cli arpl sub jnp and jno sbb and cmp out inc xchg mov ljmp into cmova dec add shlb movsl jno jo inc stos jecxz bound pop ficoml lcall arpl les insl add add adc push insl xchg dec xor (bad) mov jnp or sub sbb mov repz mov popf fcmovnbe sub aas das sub sub xlat ret push ret neg cmp shrb or je mov es sbb xor adc (bad) testb dec pop (bad) push cmp jb cmp xchg mov into sbb loope xlat aas dec sahf cmp sub sbb lahf add fsubl mov test mov arpl in aam cwtl mov outsl js and scas lock insl inc add stos or js dec das rcrb cli mov sbb sbb in mov imul push fstl rcll imul jge or mov cwtl jno pop fxch pop dec adc jbe fsubrl inc jnp jge jp or jl lahf dec setns pop decl fsincos popa ja loopne pop dec imul (bad) xlat cli push (bad) aad sbb inc dec (bad) jle jae mov cmp lret sbb push outsl mov inc and loope cmp lret sarb sub addr16 (bad) or pop add data16 or repnz (bad) cmc jo int3 push pop mov pushf or jmp and int and fisubrl pop mov add movsl flds cmp cmp in imul pushf jl jno jp mov or xor push cmpsb out das movsb inc jmp or jl bound stos sbb dec ret test xchg and fcomps push (bad) xor push adc and fabs mov andl in (bad) jbe xchg add cmp mov stc pop dec scas mov sbb push add inc (bad) js add xor jle add pop movsb aam inc xchg mov repz push rcrb test movsb sub jle jns sbbb mov dec jno sti mov cmp ss adc ds push adc xorb fsubr out adcl dec and enter push aas xchg sahf cmc out push cmp jns jge (bad) loop gs sbb xor js mov dec cmp sub les adc mov popf dec in sti add sub gs fwait sahf jb stos pop or shll push sub cmpsb clc add roll dec xchg loop mov mov pop jp call push xlat sbb jno fs das ljmp sub xlat inc adc cmp mov ret mov das push pop mov xor xchg (bad) push sbb xchg jne cmp out stc int3 cmpsl sbbl sbb aaa je cli mov repz mov imul sbb sub fdivrs lcall mov sub enter test fcomi out add or mov das gs add cmovle cmp sub dec out sbb push adc daa fisub sbbb and (bad) scas outsb push inc pop sub test sub test ljmp jle mov dec xor cltd addb jnp lahf push pop dec scas shlb scas xchg mov outsb fimul sub inc fstpt daa adc push in push leave test xchg dec mov pop jle sub roll jns and mov mov popf xor sahf mov inc or mov dec (bad) sti rcrb pop jl negb pop and test lcall push inc mov ror mov mov cmpsb popa lods adc jle aad xor stc push punpckhbw ljmp xor sbb sub or adc out dec add inc push (bad) push hlt xchg sahf cld pop sar int3 fs test pop jnp and imul mov pop imul add addl flds nopl mov out add inc inc and inc push data16 test jbe inc rcl loope xchg test sub push xchg sub inc inc push add sti sbb add pushl mov rorb mov in outsl adc jo xor pop mov cld xchg lods popa fs sub or movsl mov inc popf in sub inc cmc mov dec or cli in test sub sbb and dec (bad) pop fdivrl push inc dec and cmp ret adc mov stos xchg rcrl jle or push iret mov fldt mov sub imul pop mov mov insb mov nop jecxz and inc cmc xchg ficompl shlb mov inc icebp cltd push mov or mov inc xchg jo cmp jbe (bad) out nop and and xchg push lea rorb xor aad mov arpl cmp test mov test fcmovnbe cmc dec pop sub sub sbb sub push pop mov cmp decb lods (bad) or ret std mov (bad) mov push test maxps outsl call adc lds pop jns jle loopne add (bad) xchg loopne push push iret pushl xlat or mov jge cmp gs sahf adc lahf imul cltd movsl mov das push pop nop jb and lret divb mov ljmp adc in sahf leave cli movsb cwtl adc aaa decb pop dec xchg dec mov mov (bad) jl xor xchg out jo xchg cmpsl lcall push aaa iret xchg (bad) mov daa cltd int3 ja js (bad) jo inc (bad) jno jle into in je mov pop rclb arpl bound jne sbb mov ja inc sub sub jns sub add mov int mov rcrl movsl sbb mov pushf add gs mov sub test adc dec stos adc and xchg mov hlt hlt daa movsl popf enter lock fucom xor mov jecxz insb cld pop sbb lds rorb mov je sahf and movsb imul movsb xchg add in pop mov and fnstcw mov mov add test adc xlat cmp mov repnz stc sbb out in (bad) lea jae add scas mov ret xchg popa lds cmp add jbe or popf rol inc lea xor int std push jbe ret push std int or mull faddl sbb inc (bad) jno dec adc mov jmp jl cwtl cmpsb pand movsb pop dec shrd test (bad) js leave (bad) sub jecxz push mov mov dec push pushf pop mov cs xchg adc mov cli xchg lret xchg or (bad) mov lods mov sahf pop fcmovnbe icebp add mov jno sub or xchg std pop dec aas cmp mov movsb xor insb (bad) and and sub mov shll neg aad add xor mov mov push sub cmp imul addr16 jg,pn ljmp cmp cmp insb mov pop adc push add xchg sete inc std cmp lods pop cmp jns aas push stos insl in nop pop clc icebp cs fstpl (bad) (bad) (bad) fidivrl fsubs movsb inc imul push rorl add sub out sbb (bad) clc pop xchg fiaddl or or sbb or dec popf sbb pop dec push sbb sbb jle test insl stos in cltd xchg and fnstcw bound mov test pop xchg movsb les mov loopne std int3 mov xchg gs das test xchg xchg inc push loope sarb xchg xor jbe sbb add inc aam add pop repnz pushf (bad) mov mov ja je cmp frstor jmp (bad) jns dec insl xchg sbb xchg das pop mov sub mov jecxz lods lret aaa inc sbb sub mov push jb test leave (bad) lahf sarb or das sub xchg dec pop jge movsl push sbb adc lods cmpsb ss xchg lock outsb cli xor add mov push (bad) sahf sub xchg jae daa outsb push jg mov add rcrl lahf cmpsl int popa pop repnz std (bad) pop mov pop inc push in cmp ficompl adc call mov ja imul mov and pop std lcall add push adc sbb stc imul (bad) cmp js add mov inc repz jns mov test stc jae jns test jae bound fcmovnb bound mov jb loop (bad) jnp scas sub add rclb add out lds dec and xor daa icebp sbb jbe rorb fimull or adc fmulp xor pop jmp inc pop mov scas push (bad) lret mov xor sub jnp (bad) jmp mov fidivrl aam xor lret stos lret rcll push (bad) int xchg outsl popa push loopne sbb in sbb xchg mov xchg leave fnstenv adc mov cmp jmp push pop popf pop ljmp push fwait sbb pop mov push push pop ss lcall dec sub ficom inc sbb loop push fisubrl popf mov adc iret cmp adc lahf mov jp inc and fdivl push (bad) sub loope mov repnz daa in call push inc cmpsb dec lcall sbb (bad) push iret mov bsf sahf aaa add loope adc mov add scas outsl push adc lock lds xchg insl fwait push loop jg insb cltd fiadd nop add mov push mov cmp cmpsb test seto pop pop mov lret test inc fwait or xchg mov movsl xchg dec (bad) rol fsubs lods mov push mov vmwrite aaa scas addr16 arpl aam imul sbb fcmovnb cmp js sub mov add mov dec or daa in loopne sbb cmp test pop fstpl mov or dec sbb sub dec pop jns sub sub add xor pop sub cltd pop add ljmp mov jae out xor ds jno sti fistl or test xchg dec push test jb mulps sbb mov mov push ficompl mov or les sbb cltd les sbb in int3 add push dec test jbe sarl xchg loop cmp cmp xor or mov sbb dec jnp xchg xchg cmp es sbb stos jge into inc jecxz inc xchg push add pop popl cwtl shrl js cltd fcmovu loope push loopne mov or push imul pop imul aaa xchg sahf lret pop pop pop std aam and mov outsl leave fldenv push add es pusha popa inc pop call movsb add popf push xor push sub ja sub dec jl fdivrl test lods mov ret xchg (bad) xor jle xor xchg outsb iret packuswb and cmp cmp and (bad) jg mov sub rorl push dec int pop and neg and jmp dec loope call add repnz mov leave push pop adc xchg dec and jo push sbb mov test out cmp push test mov cmp pop hlt addb add cmpsb fwait adc sbb mov cmp test mov cmp mov sbb pop outsl mov cltd loopne test test aam mov lds (bad) lret jnp mov mov jl je fsubs mov lea dec jae cmpsl jne mov jnp jb or sti jp aam lret mov sub movsb jg xchg and pop out rcrl and iretw (bad) cs adc shrb repz ret pop mov push push jno push movb mov mov mov and adc mov lcall enter arpl stos (bad) cld cmp aad cs push push jno jle or lret sub inc sarl inc adc push cli sqrtps xchg insb imul xor inc pop fnstenv movsb xlat mov ds fdivl jmp adc imul inc in jl (bad) pushf inc pop jnp and jbe mov xchg mov jl push aad mov pop xchg pop repnz movsl and test shll pop or (bad) xor fimul test add pusha mov fstpl js aas scas ror xlat mov aaa mov cmp and call (bad) adc lret rcll sub cmpsb popf inc ret mov xor inc inc mov cmp jle add mov cmpsb push aam movsb jbe ficoml es mov lret and xchg sub xor es add sbb pop mov jae ret xchg sbb cmp cld stc mov inc repnz mov mov mov sub gs loopne mov aam mov cld stos mov (bad) mov xchg or divl cmp test xchg in in lea mov jge add jg sbb mov pushf sti sbb cli inc cmp jnp or mov imul xchg mov enter or outsl cmp in ss or push push dec daa mov sub pop add data16 sub xchg pop push movsl jae repz or fwait movsl xor adc or je adc cmpb push sub into and lcall inc cmp sbb lret sub adc cmp add jl ljmp xor add (bad) scas xchg fs adcb mov add jmp sbb jge dec inc adc gs loop push sub lods xchg into pop or inc popa mov sub and test nop push fs fmulp add iret js cmp mov in cs aad jg pop (bad) (bad) sub outsb outsl std xchg fmuls in xchg adc fiaddl or int3 mov mov mov and jo sbb aaa out jo clc push mov pop mov add jle outsl and add test in ret and test xor out mov or lea jo mov scas xchg and jno sub cmp push jle out xor popa jmp sbb lret fisubrl cmpsl sbb lods inc add sub cwtl xchg sti mov adc or mov int3 dec das out mov add test test mov add fdiv scas hlt loopne mov (bad) ficompl daa repnz add test cmpsl mov pop dec fldl int3 fsubrl test xchg add mov xlat jg lret clc shll or add mov jnp lds inc lret xor ret xchg test inc pop sub xchg mov jle mov jg stos pusha daa and aas decl popf popf repnz enter push inc add push dec lea inc nop adc aad rcrb fdivrl call cli add fs outsb clc repz push sub adc gs sar dec xor push jne es mov push clc fldenv push adc jno push cwtl test or out in mov fist fstpt push icebp mov (bad) sbb inc push sbb pop xor shll js ja aas adc sti aaa cltd inc arpl pop jbe (bad) leave paddd (bad) sahf inc in xchg test inc mov jo lcall push es stos loop mov orl aas popf cmp xchg and pop test dec jno pop dec xchg pusha xchg (bad) fnstcw xor add ljmp push inc fcmovu xchg js out pop push jne inc arpl test fwait xchg dec adc pusha pop mov es lods into add mov aas cmp test repz mov fwait (bad) aad out lods xchg cmc jbe inc jae (bad) xor (bad) add xchg (bad) sarb xor pop aas (bad) cltd test jnp mov dec je push xchg xchg test sarb adc icebp sub lods mov xchg fldl dec jl loope dec icebp sub cmpsl sub push push mov fnstsw mov xchg fadds clc loope push and (bad) faddl cmp lret xor adc mov repz mov sbb push call push adc xchg hlt sub sub sbb mov mov sbb mov cmpsb sbb mov mov outsl cmp insb movsb fsubl fstl outsl push jge in xor mov cmp sbb add and into hlt inc xor sub orl add test cmp sub (bad) jno pop push fdivp pushf insb lock pop into cmp mov sbb xor pusha movsb sbb (bad) int3 mov or lods jmp jno out fwait bound mov inc lea xor push pop cmpsb fsts loop cmp out sub test mov jnp dec jne push cmp dec mov jg rol pushf pusha xor dec aas mov gs and jl xchg xor icebp push outsl or cli ret std cmpl mov mov pushf das adc pushf scas movsb lods pand gs arpl movsl out and jecxz mov into aaa sub mov jns xchg ja jl data16 loope pop call and popa sti or sub pop nop jp fsqrt outsl jno test clc call lods jns xchg (bad) jbe cwtl scas lcall cmp mov xchg mov dec xor jl xor jnp movsl outsb inc outsb or inc shl xor test jnp (bad) fcomps cmpsb stos ss lea std xchg fs lock daa test or fimul cmpsb add aaa and jecxz mov pop int sub and inc push xchg dec jnp xchg jecxz xchg add adc sub ror mov sbb (bad) orl bound pusha (bad) (bad) out test test das mov lods ds test xor inc jg jle dec dec stos pop adc xor testl test push (bad) xor aad push addr16 sbb mov nop (bad) mov inc sbb mov mov pop dec rcll push cmp lea xchg cli xor jb cbtw into xchg jge sub mov dec add cmpsl cmpsl repnz xchg dec pop push movsl adc ret fistl enter cmp cmc pusha and dec jnp fs dec jmp sbb jne push mov pop mov push mov aam or adc inc or daa aas and add leave cmp mov loop adc les sti (bad) dec cmpsb lods jo adc cmc movsb mov in jecxz jecxz sub and inc aad inc (bad) xor inc out inc out adc negl repnz out popa dec negl dec xchg inc pop or add movsl loopne imul imul outsl cmpsl in stc lret cmpl or sahf sahf arpl mov xchg mov lahf adc jg add inc cmp xchg push (bad) pop pop into mov gs das jle add sub cltd push dec inc aam ret test adc les hlt add push pop xor js mov dec mov push loop movsb fcos rol sbb inc (bad) pop (bad) dec lock adc mov dec jg data16 call mov and xchg pop dec fsts inc out sbb pop imul sbb into and data16 pushf das xchg xor mov adc (bad) or jo dec icebp dec cli adc sti hlt lods (bad) adc push ficoml xchg jmp ljmp lock jnp mov mov xor ficoml cwtl mov clc movsb outsl cmpsl lds adc pop ds mov data16 insl xchg sbb out daa (bad) dec jbe sbb pop add cmp inc sahf dec mov sub iret sahf adc fs xchg and dec xchg sub (bad) cli pushf or out fs add dec sbb iret popf xchg cwtl jp mov addr16 out adc insl dec adc pop cwtl add xchg jb in shlb rcrb push push push stos cmc repz mov sbb cmp into push sbb pop scas (bad) jo scas in sub mov fs pop sub addb add jmp shrd jg jge xlat adc insl in imul data16 xor pop lea dec cmp arpl test je gs add das mov ja sahf add adc xor and fs (bad) aaa or fistp (bad) cld jno or pop xchg push xchg lods xchg flds dec insb cmpsb pop push or and or mov sbb dec xchg faddl sbb mov xchg imul imul cmp mov push cs fcoml mov sti jecxz call dec adc push xor movsl cld cwtl scas or cmp pushf and movsb jb sub (bad) lret dec mov test sbb xchg clc sbb psllw mov fiadd inc or push js dec test ds sbb aad adc hlt lret in push lahf and nop or movsb lock int3 into lods jecxz pop sub xor imul mov mov push test out or cld ds and shrb xchg aad scas lret test push out add cmpsl push adc js lcall (bad) and (bad) xchg (bad) outsb call negl repnz pop (bad) xor adc in cwtl (bad) mov push sbb and push mov xchg test leave psubd or les mov xchg cltd xchg jp inc fdivrl xor push dec outsb call (bad) jne pop lock add lea (bad) inc xchg dec iret inc nop and aaa sar bound repnz jp push inc fdivl lods rcr repnz inc mov jg cmp jbe fiadd nop push push mov fdivrl sbb pop mov lds cmpsb scas popf add sub fwait jg out in push aad lret in pushf aaa cmp mov gs mov inc xor enter cmp inc lret mov sub push sub pop xor shrb cs int aaa roll cmp stos add pminub (bad) cmpsb jo and aam scas push adc xchg cwtl out pop push xchg push lods lods iret adc mov pop push jns push add xchg push or (bad) lret cmp movsb xchg sbb ret js dec andb mov inc jne rcrb das inc xor nop push lret mov sbb pop shl cltd ljmp aam roll pop ror loope mov push mov fistpl inc repz adc outsb and fsubs inc cld pop test and lock sub push push sub cmp sahf repnz pop loopne lods test (bad) pop and xchg xchg mov icebp push dec sbb push mov sbb mov adc shll nop xor xor fsubrl cmp and ret mov jle inc xlat mov xlat or sbb mov adc xor pop (bad) (bad) icebp daa jbe iret xchg pop cmp inc (bad) mov jmp stos add xchg pop lcall mov sub sub in cmpsb addr16 dec mov xor xor jecxz lahf lea push lods and xchg test mov test xchg cmp in int pop repnz std xchg push aaa xchg leave fwait add push cmpsb std or imul and sub movsb push les mov in cltd cwtl lock loop jp outsl rclb nop cmp fsubr test outsb idiv jp fisttp inc add push xchg mov lcall pushl or repz push insl adc inc ss cli lods mov jg sbb sbb cmp movsl stc adc sub test loop arpl scas out gs inc dec jnp bound enter ds add mov xor push repz dec pop lea pop inc hlt ret pushf sub in jnp icebp fidivr push fisttpl push cmp out xorb prefetchw mov push inc pusha jne stos push or dec jo lds je pop sbb pop nop and (bad) (bad) test js pusha jb sbb adc rol push jo adc sbb jle je cmc fwait cmp cli int3 sub fcmove sti into cmp add enter popf mov outsl push addr16 rolb mov xchg popf nop or sub jge in cmc es cld push rcrl pop adc loop lea or fs inc std cmp ret lahf subl mov jge sub xor lods std mov mov dec add fstp shl lcall jl jb push call bound leave fldt cmp adcl xor repz fldcw lods cmpsl mov pop leave jns (bad) sbb sbb or addr16 push push addr16 jle push sahf xchg repz cmpsl adc push in pop adc push ja adcb gs fstpl xchg adc (bad) cmp mov or mov std xor insb lahf adc push sti or cli data16 inc es (bad) mov fs xor push xchg add cmp dec jl daa pop xlat jns cmp (bad) es dec push sub das sub mov and xchg pop std (bad) jle or jae dec jbe push sti in pop nop test inc lcall jmp cmp (bad) push adcl or sbb mov mov xor sbb into stc lahf push outsb xor jnp cmpb cwtl (bad) repnz loope xor lods enter lret das (bad) pop mov aas icebp cmc jno mov call aam incb xor ret mov xor jbe test cbtw push and out daa pop insl (bad) popf arpl jle sbb sub js sub fidivr push mov jg xchg jno scas scas push mov std adc add cmc add andb jge jns or jp push dec xchg andl js daa mov sti dec pop jb push mov mov testb cmpsl and push pop push xchg imull sub inc xlat lahf imul cmp into scas movsl push (bad) sbb xchg sti subb pop fnstenv and (bad) mov ss jg cltd pop repnz mov scas xchg fnstsw std mov add lds mov mov and ljmp pop push mov and add xchg inc aas or in jnp mov and mov xor mov inc rclb dec dec mov mov lret xchg loopne push xchg frstor push sarl out mov sbb insb cmp pop push arpl lcall adc addr16 add jle lret pop jge icebp sti jnp xchg add insl and jl pop xchg insl cli stc dec xor outsl sti push push jb and sub sbb lcall dec (bad) mov sub jge and add (bad) repnz jecxz and int3 cmp and dec in pop pop aam int mov ficoml ret adc enter mov clc (bad) or sub jb xchg jae xor subps cmpsl push mov mov sbb inc jo loop mov xor or jne (bad) scas (bad) dec xchg add cld inc out cmp jl sbb push or test xchg clc movsl add enter repnz ljmp sub pop fsub stos ds jmp lods xor jle lods (bad) sbb leave xchg cli dec push xor std cld sbbb and mov or enter loop xchg popf outsb xchg pop sbb (bad) xlat push test (bad) adc pop xor sub xchg addr16 add (bad) or lea loopne test scas xchg push repz mov sub lods popa xor in dec push in xor adc lods int3 push pop xor inc out inc pop or or adc daa add lcall stos rolb sbb dec pop inc or lcall push out adc es adc hlt xor fidivrl test xor mov popf pop cmc adc cmp cmpsb rcll js ds lea bound (bad) aad xlat xor and jmp cmp inc lds pop xor push fldl pusha and xor pusha pop lea mov in call and fiadd sahf adc push cld lock inc mov stos test mov orps xchg fisttpl dec mov jne mov jecxz pop sbb sbb jae,pt stos decb sbb push sbb pop inc lahf dec rcrb rclb jno and mov scas adc lahf xchg jne aas adc push jmp xor mov jnp in stos xchg test cmp and shr mov jbe push repz xor insb sub adc popf inc sti mov pop test adc jne stos into cmp mov sub popf lcall mov bound add adc or jne in loopne jne aam add dec push sbb mov pop int3 outsb and bound scas jae jmp sub fildl push in sub scas and sub andl out cltd iret mov mov push pop loope lds bound sub sub in pop lea xchg and inc or daa out inc add add sub mov mov sbb (bad) inc ror test mov sarl in mov push mov dec hlt (bad) fstl (bad) lock stos add (bad) mov mov test les icebp mov cld movl mov dec mov (bad) and and test mov jl inc jp stos jnp insl xchg mov pop push xchg je jnp jmp (bad) lret or mov or test ljmp and sub xor adc xor into xlat or xchg test js jg stos lds pop (bad) mov repnz pop mov std xchg loopne push dec mov je dec xor mov es ror push das dec xor movsb popf xchg pusha xor jnp sbbl xor xor adc mov xor cmp pop test aaa loop xor pop cmp andl xor icebp cs jns mov out pop push sub (bad) fs sub dec jae mov arpl mov inc ss push into ret push dec mov pusha into sub stc sbb fstpt inc adc nopl mov icebp aaa ds pop into and ja in mov push fs enter lods cld (bad) or sbb sbb loopw sbb xor cmp mov rorl adc std fs shll push pop mov popf xchg in sub pop jne addr16 (bad) les arpl daa mov pop xchg mov sbb inc insb popf sbb add xchg jmp pop cld iret sar in xor mov gs into sbb dec push xchg inc jb insl cmp addr16 movsl iret mov pop pop cmp add mov std add mov mov mov int3 cmp (bad) rcrl push xchg or push sub or adc cmp or push pop (bad) and out insl dec mov btc add mov and jb movsb repz mov mov jns neg xchg xchg inc outsl xchg xchg dec in adc xchg jae inc or sarl jno lcall xchg test es pusha iret cmp jnp cmp mov sbb cmp mov add mov addr16 lret and sub je or mov add rdpmc in stos xor mov or add fisubr lds pop mov pusha add fcoms (bad) inc xlat iret subl lds xor stc (bad) pop xor in inc push mov daa sahf mov xchg pusha cmp mov (bad) cltd sub fs gs inc xchg cmp inc push in repz adc adc mov inc gs jge lock or fxch enter (bad) fxch push ficomp cli test data16 mov mov jp add fwait test jno jmp or (bad) add ret addr16 sub jno call enter data16 popa sub sub xor mov dec cli cwtl incl adc loopne bound jle lods dec jg adc xor movsb xchg push xlat xor cmp sbb jp lock outsb pop sbb adc xor mov xchg push loop mov sub jecxz sbb push xor bound push mov ja cmc or movsb or pop xchg pop ds mov insb in mov xchg mov repnz test hlt dec add ret cmp mov dec jbe jne mov dec fcomps pop pop xor add sub loop repz nop movsl insl (bad) adc fwait add into mov fsubs fisub adc je test and or jno pop fnstcw xchg std and push mov repz push stc mov test mov rcrl mov add sti insb pop mov xlat cli fs insl insl fmull fisttpl inc aad sbb in mov dec enter aas mov mov and int out ds pop push inc push jecxz add or fisubl mov lock es testl dec sbb xchg addr16 fwait cmp xchg mov add addr16 adcl int mov jl cmpsb in (bad) jmp hlt pop daa xor mov (bad) out mov cmp xor (bad) mov jmp ja xchg ret pusha int3 aad lods xor dec es push xchg inc sub out stc (bad) jnp loop cmpsb pop je popf jg sbb ss push lea xchg cmp in push pop outsb (bad) and sarl mov inc jmp inc sbb or xchg xor sub fisubrl pop dec jecxz mov loop inc push add pop int sbb out lcall addr16 xlat gs fcoms xor (bad) xlat add push shr mov cmpsl outsl pop and adc mov sbb mov outsl lods outsl adc push cmp test lea mov lods mull test insb pop nop out sub jl in pop push shl jnp jp xor xchg xchg pcmpgtw fdivl xchg lock inc mov push mov out cli push push jl repz sbb mov pop mov aam mull push ret nop test jp dec decl aas dec sbb lea cmp addr16 scas xor jo pop add fistpll (bad) lret pop (bad) jno out imul mov in cmp mov lea cmpsb lea pop sbb adc mov pop arpl pusha into cmp mov ss (bad) xchg fildll dec jg push les fs push frstor fnstcw test in xor add xor xor cltd push dec pop cmpsb push insb sti xchg sub lods xor pop cmp int dec stc adc jns xchg pop fisttpl incb test push lods int3 push add cmovge test jno rcll mov repnz in iret xchg int sbb nop sarl or nop pop test xlat movsb mov push push xlat js pop (bad) dec cmp dec dec push pop nop add mov mov rcrl int3 xlat inc sbb mov shrl mov call test (bad) sub test ss dec xchg inc in mov pop push xor maxps stos cmpsl test sbb cli sbb into scas jle and ds inc or test xor rcl pop dec inc or cmp cmpsb xor sub cmp ror mov jae xor adc mov dec mov mov cmp inc adc and add dec sbb (bad) sub into les popa insl add inc jb cld and xor test aaa sbb xlat pop gs sub and push pop pop jmp in in jmp lcall jge call shll sbb data16 fdivr stc jp ja push mov inc push xchg lea jb sarl icebp sub in mov inc test shlb ss mov push lods sub xchg inc test mov ja (bad) adc hlt test xchg (bad) mov mov sbb imul sti gs leave add stos into shrl mov out and shll js and mov rcrl adc out cmpsl in mov push cmp jmp or mov iret or or insl pop xchg push in pop cmp movsb cltd xlat std sub test popa dec decb (bad) sbb sbb hlt (bad) fldl repnz fwait xor sbb pushf mov xchg rcl adc fldt (bad) mov pop movsl (bad) sub lret mov dec stc push movsb fs fsubrl inc mov and rcr les sahf sti aaa inc xor std call pop push lret sub data16 out jl shrb loopne push add or mov or scas out and shlb mov roll bound bound xor adc jo enter dec ja and mov jbe fbstp sbb movsl cmpsb inc sub (bad) jno cltd mov in xchg shlb pop jne sbb call cmpsb aad lret ljmp and dec std stos movsl mov ror cmp jne mov das sbb pusha aas cmp pusha pop sbb adc pushf insb push add xchg pusha sub ret xchg pop int3 and pop fstp inc shlb sub imul jae xchg stos pushf pop sti pusha xor xchg inc jmp adc loope pusha push dec call imul int3 or xor pop movsb sub mov sub ret xchg pop mov pop cmpl xor cli ljmp mov push mov ret lahf pop dec sti and pop fcoml xchg mov insb or shlb push pop pushf bound mov sub or mov sub jbe sub push shlb sti popa fiaddl out dec cmpl push outsb pop (bad) adc jle pushf lret daa push inc add pop aad sbb cs cli pop in int dec es sti shll jnp mov inc add std jbe stc mov push (bad) nop push mov das cltd ret pushf sarl pop sti mov dec outsl cwtl dec mov mov xchg lds int xchg mov mov and fild dec jl xchg or lcall sbb inc jle mov jecxz pop jb lds outsb inc popf cs mov jno mov mov add xchg dec push mov inc dec and sbb jl dec xor lret jb xchg pop test inc scas jno iret cmp insl xchg test sub push xchg es cmp rcl jge sub mov movsl sahf cld add scas push xor cld pop push sbb adc rclb mov inc xchg xor cmp pop or iret and mov in fidiv inc rclb jb ficomp or fimul in mov (bad) jae and mov aam cmpsb mov mov repnz mov aam sahf test mov fildl xor dec add xchg rolb ja xchg xor jmp mov pop (bad) mov loope (bad) dec or adc and inc mov jb inc push sahf rorb mov rolb pop je add mov or add push aaa ret mov fadds enter sti add (bad) (bad) cmp sub push mov call mov mov push xchg jae orb je test mov adc jmp push mov lds fninit fldcw mov inc (bad) add push pop sub in xor xchg test clc arpl insl dec adc outsb gs andl dec pop ret xchg fldl fsubl jnp cmpsb sbb cmp lock add (bad) loope pop push dec arpl dec jg add in or lock jo mov outsb sbb out outsl adc xor mov xor aaa jecxz cmp hlt inc cwtl pop cmp cmp inc add fmul sbb mov jns xor fstps xchg arpl xor aas xor push jp xlat mov daa sub jmp push xchg shr dec xchg shl hlt movsl push in outsl fiadd jp or cld fmull popf lea cwtl push orl out mov fisubr push fmull mov ret mov inc mov fwait or cmc pop sub clc inc and loopne xchg test pop inc bound and xchg dec add lahf push add jp or jecxz mov pop mov movd inc mov stos gs in int or scas cmp add inc cs int movsl lret xchg imul sti inc mov jne aas mov jg sbb add cmpsl adc in in mov cmc in loopne dec jbe push or js bound and xchg enter jl daa cmp push push inc lods iret mov or dec dec xchg xchg mov lods push sub movsb outsl or cs into enter add and inc popf in in jno jne pop xor sub (bad) or xchg pop adc fyl2xp1 or pop jbe ss lods test xchg out jns push push fwait add mov (bad) or cmp lods mov push adc add aad push daa add push loopne ds sbb mov sbb pop adc jp dec jo (bad) leave mov cmp outsb and nop adc sub iret mov stos sub inc decl inc sti jns je jo (bad) jp mov into flds push mov push mov mov popf add clc adc sub cmpsl ljmp xlat xor (bad) sbb push mov push jne and add lods mov aaa and fisttpl fldcw or adc sub xchg cmp xchg mov xor fisubrl pop mov int mov push mov push fstps fsts cmp add mov insb out stos into inc aaa sahf push push xchg xor xor lds shll and js test pop cs sbb cmpsb jp or mov (bad) inc fisubrl sbb jo cmp mov fdivl out jmp addr16 insl jle add jge shl (bad) leave ret mov in sysexit xchg mov mov xchg rcr stos pop cmp rcrl shrb add adc mov adc lock dec stos addr16 jl fstpt outsb jb sub add mul xlat scas mov call ja test mov lods mov add xchg (bad) dec (bad) jns mov pop xchg pop cmp imul movsb pop rclb pop or lret sub mov loopne lret adc add pop cmc mov call push insb push adc lcall jae pop nop popf inc sbb mov adc fwait pop adc pusha (bad) push rorb std push or (bad) int mov imul mov aam orb and add mov hlt imul sbb loop int pushf ljmp mov popf jmp test mov and inc sahf push adc xchg sbb in xchg in mov push cmpsl loopne sbb sub iret mov and call push sbb stos or inc hlt cmp stc in (bad) cmp test js xor daa add jge call cmpsb cmpsl sysexit jb lods dec sahf movsb out push and pop xchg mov jne outsl iret int3 pop inc sahf rcrb scas lds mov and lods adc test inc cli jne push and jecxz aam xor xchg or cs jns fist xor pop jnp dec push mov xchg lods sub pop inc cmp or mov or mov jl push adc xor jle ret xchg mov pusha push push xor in pop sbb (bad) aaa rolb test pop pop jmp xchg (bad) out inc sbb aaa and test pop sub sbb imul or pop sub sbb cmc imul push adc and insl cli inc pop lahf rclb mov adc scas pop xor lock inc xchg dec loope sbb xchg pop inc xlat mov jg mov cmp (bad) daa mov pushf hlt (bad) cli sub in cmp rclb add stos stc xor scas es insb dec incl outsl mov xchg loopne cmp add add mov add pop mov mov inc inc push xlat push mov fisttp add int3 decl pop fcmovb cwtl and dec sub dec cwtl pop insb jl repz pop nop jecxz popf mov xor clc xchg jge sub cmp adc daa aam mov xor sti shll fstpt addr16 js sbb jns or mov stc xchg or outsl rolb rolb mov add lea cmpl adc aas dec jmp xlat cmpsb aam icebp scas mov call stos insb pop push and in sti sbb loop jno pop pusha mov sti hlt bound inc out mov cld lcall shrl scas cmp add fbld pop lds dec and cmp inc sbb push mov lea and jns add scas pop pop rcll cmp jmp add cmpsb jp mov push xchg mov xor dec push scas xchg andl xchg adc roll jo jg add popa mov jne fldenv stos mov push mov jnp xchg dec in sub push ja and pop push lods movsl xor inc (bad) sbb test cmp sbb jp std add dec rcr add imull fptan xchg out push rorb sti iret sbb dec out jno mov (bad) dec mov xchg out jb adc dec jmp call popa clc push addr16 es (bad) (bad) sub mov xor insl push data16 mov and jne ljmp in or push xor test pop push lahf test fnop xchg test mov push adc xor sahf mov jmp and fwait add loope sub jb fsub cltd sbb cmp dec xor or and test pop inc or bnd imul dec jae insb add push ret inc sub in xor cmpl outsl dec es dec lds (bad) lret dec add std sub ja sbbl add out frstor mov pop mov mov mov outsb and jns add ds sub pop pop pop push or push mov pop push clc dec add je mov xchg inc test fidiv shrb psraw cmpsl cmp ret test cmp cmpsb aam pushf pusha lods rclb out lret mov nop inc xchg repz movsb and enter inc fdivl enter lods push insl movsb xor stos stos es into jp scas gs jp push ret in orb push repnz pop push test adc lahf xor push xchg out sub cs push aaa fldcw sub cmpsb (bad) sbb ds jo cmp pop sub inc push mov mov (bad) fwait aaa push cmpsl sub out ds jns xchg (bad) arpl cltd and fwait cmpsl xchg js mov push push cmp jp and shll je sbb mov sub or jno push nop xchg or pop in in or arpl cmp pop and sub jg in (bad) movsl push iret adc xor or mov mov arpl iret adc push pop or and xchg mov aas xchg imul jge push and push cmp adc test pop add jnp inc je jae stc inc ss sub sub (bad) sbb ss movsb xchg ja imul adc xchg in and mov test xchg mov les jno cmp dec jb int and mov push pushl outsb lahf dec cmp icebp xor (bad) jle push fcom repnz and cmp pusha fcomip inc fs sbb fs (bad) jb das test sbb jnp leave call inc pop lret inc das (bad) imulb and mov inc arpl cmpsb or and imulb clc rcll mov movsb mov repz cmp int imul mov cmp sub sbb aaa xchg jns mov and dec fwait mov imul out in push xchg inc adc movsl out fisubrl mov xor andb insl mov bound add loopne push (bad) arpl das test xorl (bad) fsubrs lret imul or cmp xchg pushf fwait test arpl mov xor lds pusha adc inc add (bad) (bad) push push sbb icebp pushf and movsb dec sbb mov and add int movsb inc mov mov es adc sub (bad) mov pop dec pop jmp repnz inc dec inc cmp ret aam lods rcl lcall sbb sarb les lret (bad) les mov push pushl add cmp in test cmp das adc repz sbb xchg cmp stos shrl sbb andl mov xchg orl adc decb call divl mov jge les pop xor ds ret jmp scas dec fadds outsl div repz ret sub dec mov xor popl (bad) nop aad lea pop movaps mov lret popf mov fsubl inc nop cli xchg repz mov stos arpl jmp cmc pop (bad) mov sahf in mov push dec enter inc lahf (bad) inc out jecxz in je mov pop (bad) xor dec gs cmp dec lea and shrl (bad) lret xchg insl movsl lods arpl gs mov lods inc and mov or (bad) pop loope push xchg into sti lds stos jmp lret fwait push and dec xor movsb dec push adc jb sbb dec into sbb fsubrl adc insb (bad) cmp xor rep inc sbb jo sbb pop (bad) insb ret cmp pushf xchg gs dec js cmp sbb pop lret (bad) std sbb imul jae and icebp leave aas mov idivl mov mov dec lea cmp icebp adc fidivrl insl xchg adc sbb inc lods mov jle aam push sub gs mov sbb clc lock popf push imul sub and mov and adc movsl xchg jnp push outsb in stos imul pop mov pop push pop inc xchg push ret cmp or mov fnstsw and add scas incb scas mov mov pop roll sbb lret inc hlt jle add test dec jnp ss rcll jae outsl push sbb xchg push xor sbb sbb mov sahf adc gs in movsl out sbb dec (bad) lret cwtl insb xchg mov mov fcom fildll imul ja jl cmpsb cwtl ds cmpsb push fwait out and cmp jae adc and mov add lret adc push adc clc xchg sub movsl jno or cmp push mov inc jle lea dec jp cld xchg das sbb int in (bad) stos jns daa int inc inc repnz sbb add dec adc pop sti pusha mov std xor sti fsubrs test jge push mov (bad) je fisub xor sub mov ljmp scas push ret xor mov into ds jae sub push pushf or or xchg jnp sbb sbb sbb imul adc pop cmp je (bad) inc jbe outsb mov dec xchg jge mov js iret xchg aas mov add pop lds inc inc mov xchg jb and or and xchg inc mov sub lcall ds (bad) daa dec push jmp aas cmovs lahf cli or xchg test push push add cmp mov movsb insl (bad) cli call sbb sbb mov xchg cmp sub sub and sti jb add and (bad) mov xchg dec hlt enter fdivr inc stc jle inc or data16 je js test roll jne orb icebp iret fldcw daa repnz movsb or xor movsl out stc insl xor push push cli xchg mov fisttp lods jbe (bad) fwait aas mov xchg pop cltd inc sub lret and mov jo loopne xor pop push push inc inc test dec leave xor (bad) mov insl push jno arpl cli add xlat imul hlt xor in in jg outsl jge jl (bad) and pop or sbb xor jno mov and out mov xor movsb les xchg imul out or aas in insb sarb mov fmul in sub dec les sbbl or mov inc (bad) inc fmull cmp sbb inc popa mov es sbb movsl push xchg sub shlb mov jmp sbb pop dec rol flds fstpl lods push hlt (bad) jb cld in xchg dec jne loopne pop adc sub mov mov sbb sub and sarb icebp rorl jb inc add mov dec jns nopl mov les fnop sahf push (bad) jae (bad) enter inc jne (bad) repz pusha dec jl pusha lret fdivrs aad int3 imul scas xor into ret xchg push icebp ds xor dec xchg xchg popf punpckhdq pusha fidivr jo das push fadd jle xor adc lock test lahf sti int das or add dec lds cmp cs add cmp ret das sahf lea jge xor stos cmpsb ror rclb or cld fs in lret pop push int mov outsl jle outsl xchg gs inc lods jl insb push inc in jae sub test sahf inc popf dec jge in sbb es xor lahf lock in jnp pusha dec jnp aaa jns dec mov cmp push mov push and push das pop sub fcompl mov mov cmp test jle nop add or mov pop push inc and pop xchg ret lea into stc mov or orb in mov jo pop xchg (bad) lret cwtl insl lea inc loope cmp mov std nop pop sbb mov lret and jecxz test and dec dec subl fwait daa push jo jp clc add cs dec xchg jo jp or mov test ret push movsb xchg fs add xchg xchg popf xchg jne dec fsubrp lsl daa ret mov cltd in cmp mov mov (bad) cmp cmovno cmp fucom loope jne dec mov loop or popf cmpsb mov cmp jns cmp mov xchg pop mov sbb xchg test popa dec enter out add mov mov or fadd jl test jns pop movsb or pop add ret hlt orl mov xchg nop jle inc inc xlat adc sbb mov push notb scas sub sub pop mov cmp xor test mov pop lds push gs stos rcrb sbb adc out cmp aam leave push add iret mov scas xchg pop and pop inc mov sahf and fdivs add pusha inc and xchg jne ljmp into lods mov mov sti pop shll add push push insb fcmovnu fdivp jns pop jae and cmc mov mov data16 cmp sbb (bad) lods xchg loopne cmp movsb das ljmp xchg jg mov jns lods cmp xchg sbb sub mov and mov lods push push into lahf bound inc xor jb jmp xchg add xor cltd fwait adc mov pushf xchg jl arpl push leave or pop gs in imul (bad) ret in cmp sub push xor cld inc es sub nop (bad) jb xchg or pop mov mov stc into in out and pop aas ds pushf imul sbb cmpsl push mov sub xor mov lret movsl aam mov adc jg push mov mov push stos adc shll cmp in sub and stos pmaxsw ret xchg int3 scas adcl fbld jno jb shrl or push push jo jns mov or mov add push test nop jo and sub cld in pop inc mov mov nop dec xchg ret adc dec mov add dec inc mov addl hlt inc mov add pop and cmp xor adc sub xchg bound movsl push adc xor and inc aaa adc data16 and rcrb popl mov push or je rorb sbb popa sbb inc jg mov (bad) std mul push mov sub inc jg incb fildll movsb sub addr16 pop jge mov mov sub movsb ret inc cmpsb mov xchg xchg test mov jecxz inc pop sbb xor scas mov (bad) xor mov insl jle pop pop mov pop clc xchg xor adc push inc repz fimull mov pusha dec add and mov mov adc xor sahf mov push leave push ljmp cmp es dec mov jnp inc jae xchg cmc pop mov out adcl or cmp (bad) jno inc inc and or lods mov call mov cwtl out xor push and inc (bad) fs movl dec xor (bad) dec add xchg add mov mov cmp (bad) jnp dec test or adc xor (bad) xor pop push insl or cltd hlt jge pushf and push sbb sbb (bad) imull subb test xchg xchg data16 rolb jb daa fs pop push (bad) popa mov jo lock outsl stos pusha cltd mov movl (bad) mov (bad) jle jne dec mov mov jp mov lds and xor or mov fildl ja xchg outsb jp loopne pop loopne adc cld xchg mov mov dec lds cmp jg out push add scas (bad) in cmc (bad) xor repnz ss pop inc sbb loop sti sub negl pop mov popa repz enter fs mov mov (bad) dec pop inc fwait or into jp xchg cmp das ljmp daa in nop (bad) out mov testb xchg les fidivl cmp pop cmp mov inc and mov adc call lods xchg rcr dec mov push (bad) negl push (bad) mov inc (bad) jp adc int cwtl cs dec (bad) bound fldz cmp xchg mov xor lret dec aad test popfw int xchg inc xchg iret pop scas out or adc pop icebp xor mov mov cmp xchg cwtl inc lds cmp cs push aaa loopne out and stc lods ljmp jno add call in mov mov stc xchg mov inc jns shrb je push xor and adc cli sub mov jecxz adc add es cmc movsb inc push mov add xchg xor mov adc mov ret mov adc mov subb push std sbbb xor dec add jne push out add rcl dec movsl cmpsb cmpsl ret dec jl jp repz sbb sti imul test cltd xchg clc xchg jno push push aaa nop stos mov and dec dec pop das push fisttpl or xchg add xor mov push dec int3 mov and xlat push mov fisttp jnp adc push cltd cmp mov dec push cmp mov add cmp adc lock xchg push fucomp push outsl (bad) xor cmp rclb lret ret jge mov imul arpl xor push inc cli pop xchg mov movsb add cmp lret mov mov push out imul inc push xchg pop daa adc cmp xor pop jecxz sub mov cmpsl or lcall pop xchg push jmp insb mov and xor cltd mov or mov iret xor inc incb fwait sti pop cmp cmp push mov in in in sbb sub lock lahf sahf imul and jge adc icebp popa mov and dec mov aas (bad) mov aam int3 psrlw pop sub shlw clc cs push lcall pop or push xor sbb sbb adc js int inc movsl add imul fstpt aaa pop lods mov test pop and and lret dec cld pop aam xor aas fwait lcall bound mov sub push je lcall mov add andl xor pop jecxz or sub add xor adc das in cwtl push jmp fwait dec xor ret fprem xchg loope lahf xor ret and or gs (bad) cmpsb xchg dec repz fs xor sbb xchg addr16 pushw jb mov xchg add push dec inc lret popf out test inc add adc xchg aad dec mov or stc out ja ror xchg sbb xchg fildl mov test cwtl fdivrs lods das adc add mov mov pop xchg cld xchg (bad) adc dec sub push subb outsl inc out push (bad) popf pop adc pop cmp xchg cmp aas bound in dec add pop pop (bad) cmc and jno or je cmp fstpl clc in and insb cmp mov mov add in cmp lods (bad) push mov xchg lds mov xor cmp aas cmp xchg dec push add xor or sbb repnz cmp cmp jp pusha fisubrl pop cwtl dec sbb push dec cmp and (bad) mull into xlat lods xchg test idivl hlt nop jle or fbstp mov and daa xor xchg movsb sbb jns and adc push sbb mov sar mov push push mov cwtl daa fs dec xchg add andl dec add add lret mov rorl test dec cwtl or inc sbb sub pushf mov mov insb aaa ret xchg jle outsb aaa mov mov pop lret mov mov mov sub (bad) xor push push out sbb or cmpsl aam jne inc mov test adc xchg pop adc into xor jns pushf jns inc mov mov xchg cmp cmp sub mov xchg movsl xchg xchg xchg in imul cmp mov (bad) xchg mov aaa cmp pop pop dec test pusha adc pop rcrb mov sti icebp outsl out out test push mov mov pushl lea ds push stc sbb scas mov inc mov push and (bad) jp jg test imul scas adc push mov add movsb push push (bad) dec inc out xorl xchg sub lret mov mov jb or push mov aam (bad) mov lret sub jnp es ret inc ret (bad) mov rcrl jp stc mov push and push scas aam rcrb ss dec xorl mov and insb test jg aam adc inc std and push mov int adc xor and lock add pushf lods icebp js and fildl sub sub fnstsw xchg sbb sti das sub popf sbb add popa mov jmp bound dec ret adc (bad) mov pop add or popf outsl cmp loope in or ret sahf and cmp inc sub js fucompp (bad) add mov xchg shl pop cmp sub cmpsl jnp rcl add cmc in pop jo rorb mov or outsb xchg mov mov and (bad) sbb in or ret and sbb gs and cmp in aam cmp mov adc ss dec out sbb mov jne nop clc insb xchg cs in idiv int sahf cmp int3 inc lahf lret testb mov jmp nop jge mov movsl in mov negb fs sbb (bad) jge mov adc pop movsl into popf (bad) jne mov fwait aam xor adc inc mov push fidiv repnz mov rorb lret mov mov and sbb xor rcr repz xor lods mov push imul push push xor mov mov ss or inc int and repnz gs xor xlat push jg insl (bad) hlt or jae cmc loope adc mov imul mov or popa mov pop dec movsb (bad) inc adc shl aam push dec stos jb pop xor subb xor mov and and and add sbb push icebp adc and lcall mov lock jge jmp ds jno push addr16 xor fisttpl icebp cmpsb push idivl ds mov popf clc lods xor shrb jmp xchg jno inc in pusha dec pop add stc mov jno test in loope cli in flds cmp iret aas mov rcr les or popa pop cld mov mov sbb mov push push popf sub sub aas jle mov inc cmp and jmpw punpckhdq xchg mov and mov and in xchg push ficoml lock pop dec mov pop xchg das daa into pop nop xchg fiaddl xchg dec adc rclb add dec inc insb mov pop dec add pop push test push mov fbstp inc xchg int or and dec das lahf mov pushf mov xor mov les mov aaa sub popf inc sbb push add cmp push adc aam cs arpl mov sbb negl ds inc xchg sbb and xor xchg fisubrl mov aam in shr add push jns push pop sbb jns jb pusha out data16 call gs xor inc out jnp and cmp lods pop dec dec mov inc movsl aas inc jecxz and inc jp push ja xchg incb cmp jl and mov das repnz jns fwait pushf aas and lret les jne dec inc pop ret add push inc add pop test mov sti paddd sbb xchg xchg xor stos into ds sbb in add or add nop std scas aam rcll mov mov insl pop dec push ds sbb dec pushf daa stos test mov and andl inc fbld jmp push fwait xor push xor scas push in stos and jbe jg scas pushf xchg sahf inc or adc push idivl pop mov xchg mov pop dec pop dec outsb push sub fmull or and bound mov dec lds cs fimull repz and lcall imul repz lods outsl sub add jle cmp shll js mov pop mov mov (bad) aam cli and cmp adc mov mov mov or push mov mov mov or sbb xchg outsl pop mov outsb jae test and mov inc cld or sub xor dec xchg aam xor in push inc dec push dec sbb mov divb cmpsl push loopne cld fmuls fldt rcrb mov movb outsl adc jl or leave fisubr (bad) dec pop push out jl add scas scas sub out enter push aad mov lock ret jbe imul lret je adc cmpsb jb aad inc pop mov outsb jnp and aas dec dec repnz ds rcrl add pop (bad) out rorl negb out mov push movsb and add sub pop or mov popa inc addb mov push scas movsl repnz and mov inc xor jmp lods fs ss or add xor xchg iret outsb adc sbbl jno mov jp aas pop lahf (bad) and sbb cmp pop xchg inc and cmp mov lea movsb aad std (bad) mov dec and pop xorl das and jmp call and scas lret or fsubp hlt insb cmc mov add decb push or loop imul adc dec sub jb movntps adc push inc jmp xor cmp or jle or and sti shrb push cmp pusha mov xor imull and sub xor in es mov xchg mov push imul movsl xorl cmp jecxz aad mov or (bad) fdivrl xor sahf cmp loopne xchg ds mov pop add dec sbb (bad) inc sbb mov out mov mov lret xchg pop and cmc (bad) es xchg arpl por add cmc (bad) and movd dec pop xchg orl orl pop add lock jmp dec cli add aad inc xchg fwait xchg lock decl push jns insb repnz inc xchg and ja add cmpsb cmc xor mov pop cwtl (bad) test insl lock mov add cmp sti and and flds inc je insl cmpsl ret iret push xchg sahf das pusha pop pop mov je repnz clc push leave mov cltd adc in call (bad) cld cmp jl xchg jecxz and push std std fcoms jp push stos in jle cmp pop and bts dec loope push push add enter pop rorl test arpl (bad) into add and pop mov test add cmp jno into xlat xchg sti and cmpsb adc and (bad) mov fwait movb mov jle add fs dec loope mov xor enter fwait and lcall insl lods or xchg fdivrl pop adc cmp stos sbb es ret push inc dec mov pop jns mov dec xor jnp dec lahf pop cli sbb xchg add aad mov (bad) jb jl jle rcr pop dec push popf inc lock jb sub sbb add out inc inc daa mov mov subb xchg int3 cmp mov jae pop sbbl rcl lea lret mov xor (bad) pop mov pop lcall mov adc scas add push gs mov xchg xor cmpsl sub mov aad das in sub cwtl sahf sub cli inc cltd nop pop push cmp mov mov jp loop cltd xor sub xor dec xor or jp inc decb fsubl stos sarl movsb sahf stos mov inc test jmp inc mov sub insb repz mov outsb jl stos mov mov mov jo fisttpl dec test cmp test sti adc gs sbbl sub sbb push xchg pop mov or hlt leave (bad) and jecxz inc out in fwait sarb sti or push adc pop adc adc adc jle dec enter inc clc popf call dec (bad) test pop out and mov mov enter or push pushf xor lcall or fnstsw cmpsl dec inc daa dec adc push stos lahf adc and nop popf inc inc lret ljmp or or sub mov jbe xor xlat pop sti lcall clc xlat and cli insl cmp test sbb imul jno xchg lock sbb sbbb sbb lahf xor pop nop xchg lea xchg xchg lahf nop and jae sbb rclb sahf sbb jl push popa sahf or mov cltd dec aaa inc pop outsl xchg arpl movl push inc adc adc cmp sub sbb lea bswap bound and add cmp xchg jae sahf sbb movsb xchg lahf jl lea xchg jns ja out or xchg cmp lds test pushl (bad) int cmc jae mov xor rolb insb out jmp mov jnp dec sub push sarb movsb dec xor cli adc jnp mov inc jo (bad) int out mov fiadd pop jno mov jno out cwtl into push (bad) or jnp ret andps mov ds sbb shrl and sub in xor daa pop stos push and mov fnstsw xor xchg dec lcall and xor and adc mov jns aad sbb mov mull stc subl or inc (bad) lret (bad) mov shlb (bad) mov or test inc jo hlt cltd pop fdivrs loop or test mov sbb jne popf dec push std les cmc mov (bad) push cmc std ja add xchg and fnsave xchg mov popa push jae sub inc inc push rolb lods jg sub lds xchg sbb in jge push iret in push and addr16 sbbl and pop int (bad) pop cmp mov aad adc cmp xchg cmp inc fcoml xor sbb xor sub aam dec mov mov xlat (bad) jbe jae adc (bad) xor fs fldl shlb lock inc sbb pop sbb lds hlt das dec pop popf xor jl (bad) test xor out mov push mov aad fmuls sub and push ret int dec fisubrl cld mov dec push add add fildl mov test cmp pop push push lahf jo in sbb lret mov cmp or insb cmovae fsubs nop xchg push dec add pop out into jle add (bad) or inc lock call call and jecxz mov and and mov out xor imull jl roll add ds mov data16 rclb (bad) mov loop aad rorb add data16 fwait push aad fisubl imul cmpsb fnstsw int3 sti mov push (bad) sbb add fisubr xchg mov push sbb adc adc add sub movsb in jle xchg mov xchg xchg scas mov jg dec fidivl dec push push or mov push ds xchg mov adc push inc xchg test out insb sbb add adc or cmp pop outsb and je mov push mov and inc leave push cmp cmp pop mov sbb push cwtl mov jp into out (bad) xor mov stc fwait lcall mov clc pop sti pop cwtl scas inc xchg out and cmp mov or inc jl,pt sbb cmp mov and dec xchg int jb out (bad) xor ficompl jns popf mov wrmsr lods sbb imulb pop mov xor out mov das mov cmpsb stos (bad) xor mov jno and stos cwtl cmpsl mov inc movsb sub pop mov aam add les inc sti push out fbstp cmp lret pop add or ret push lcall jle mov xchg outsb jecxz push sub popl or (bad) (bad) notb stos jp int mov ret xor ror lods (bad) jmp add xchg sub addr16 insb and dec js pop sub or mov mov ds pop xor leave stos or xchg sti jecxz ret xor pusha rorb pop ja cs pusha dec repz pop and std push xorb or movsl fwait mov sub push mov mov pop or ficomp jnp outsl inc loop jl or pusha xchg inc xchg int cltd or daa aas mov mov iret adc sahf push mov lods stos pop les xor dec push cmpsb push fisubr add xchg jne adc mov pop push and or pop cli fcmovnbe fildll cltd pop lods sti pop and test xor (bad) sub sbb and test pop cmp adc dec xchg pop inc in insb sub sahf sub stc sub xor and sbb adc inc xadd mov mov adc pop aas fcomi add xchg cltd and dec mov js int and adc xchg and shll lret inc and cld add lods sahf or and jne cmpsb mov mov jno push pusha cmp daa add int3 (bad) cltd xor clc adc or rol push test sbb pop inc inc in push and inc mov or pop xchg jbe (bad) xor pop ret and addl adc pop dec xor sub test add pop jmp sub jne sti mov jmp xchg sub pop cmp cmpsl out push xchg aad movsb lret ja ds xchg ds mov lret sbbb aam adc lock xlat cmp add mov into jmp jge aaa sbb out lds mov sarl xor (bad) xchg int adc push adc pop lret mov mov stc push std and and daa lock sar je enter cmp sbb mov sbb adc mov sbb xor xchg cmpsl adc es in scas cmp and and cltd ds sahf inc or inc aaa inc pop lahf mov sbbb sbb in test lods mov cwtl sbb xchg and pushf push inc cltd inc ds jecxz adc addr16 pop jle loop cmp pop mov fwait (bad) fcoms in (bad) jne mov shll in xor add xchg les mov xchg dec inc pop enter push jns popf and addr16 lret jp scas adc jo add sub fcomi jp movsb mov xchg or xchg jnp lods out out pop push or push gs adc sti pop stc or sbb pushf test inc scas xchg mov ja xor inc inc lods xlat arpl gs inc mov cli or addl je inc mov rcrb (bad) sub pop mov adc notl in and adc mov das aas les jae cltd push (bad) jg movl pop xor jg pop dec stc jno pop leave out and aaa movb or fildll ret andl adc (bad) in nop xchg push mov xlat mov sarb cmp (bad) (bad) mov cmpsb push pop int push pop in shr addr16 xor cmp aas inc popa push push addr16 dec and pop icebp sbb dec (bad) cli sub out aas mov out insl cmpsl mov mov loopne rcrl test mov sub scas and pop scas sbb push aas jo xchg mov enter jo xlat inc cmp jmp sbb mov in pop mov mov testl xor jge test in jno fwait cmc sub xchg dec je add popa cmpsl test xor add inc mov push out push mov and or popa lahf jb xchg adc fs adc inc push gs jbe movsl pop and add (bad) xor inc loope add jecxz in jge aam gs clc pop mov adc cmp lea leave loop cmc mov lods loopne,pt sub push test stos fs movsb fnstcw jo add pusha jnp cmp pushf fistp into (bad) outsl mov push mov or sbb sub out and popa push imul mov lret ret test push cmp popa nop outsb jp hlt inc sbb or jg push pop push ds and notl or repnz mov add add pop xchg (bad) xor fimull dec add (bad) mov fild add fistp mov jbe mov pop popa nop xor sub movsl mov arpl xchg push jp les xchg popa (bad) cmp mov test insl out jo cltd mov mov repnz cs and mov lret call add jecxz mov add cmp scas cmpsl ret mov (bad) push adc insl movsl es inc push add sub add mov xchg mov dec push rcr cmp icebp das sarl adc daa sahf push arpl xchg mov sbb fwait jno,pn xchg dec push cltd lret pop inc or jecxz sbb int3 sar mov loopne jno pop jle add xchg inc ret or xor push daa popf sbb (bad) ljmp push adc mov push sti shrl jle int3 pop leave pop mov daa mov rolb and out push js add xor dec jno test sub int cmpsl cmp out mov mov mov cmpsb jp rep pushl sub outsl stc add pop mov movsb lds push and repnz and sbb in popa lret or je xchg mov and sub dec dec xor loopne or repz movsb movsl fnstenv dec mov stc xchg es rcrl jne or xchg repz lods sbb cli outsl pop pop les mulb loope adc push mov fisubrl fldenv add mov pop xor sbb aas orl mov cli inc lods adc (bad) call push xor cmpsl jge jne insb test xchg mov test and (bad) pushl scas in aad insl daa pop movsl repnz jge mov jle repnz push mov setl push inc jo inc xchg mov pop decb cwtl jae mov inc lods mov dec int3 jp xchg xor xor push inc and add outsb xchg xchg add (bad) sbb adc xchg jno fadds and call nop adc ret loopne or add xor jae pop lds sarb push cltd adc lock jbe jb mov lock call jno cmp movlps and adc jmp test pop or dec cs mov jne movsb pushw sbb pop or push push lea mov lds jae idivl adc push es push adc pop pop bnd add fwait mov sub mov xchg in ja ja pop iret ret out or cmc sbb xchg inc xor movsb std xor push inc jne xor stos movsb fs repnz pop std sbb sbb mov mov pop insl pop jle std add mov das stc push dec or inc inc int3 and movsl jbe mov je sub mov call fadds inc lods aam loope nop and stc insb ss mov ss outsl push adc mov dec fmuls mov mov mov dec jae cmp nop cwtl push leave das fistp push (bad) xor adc dec jo aam ret sbb dec ss sub ficomp push jne pop pop popa pushf in pmuludq xchg dec jns or dec loopne loop int3 out scas cld int rcrb xchg cwtl popa enter imul lahf and aas sub cmc sbb lds imul pop inc test add add adc inc sub or dec movsl adc inc orl testl pusha js psubd jbe mov call push in rorb jecxz push mov sub sub xor cmpsb xchg mov test xchg wbinvd xor pop popa pop sub movsl sbb mov inc fcmovb data16 imul nop or add jl jae sahf das pop arpl mov shll or jae xor das mov cmpsb sahf sub and sbb sbb stc and lock hlt mov jns add iret insb outsl hlt pop dec cmp in test pop jb int3 loop rcrb jl add gs pop jno popf pop jge pop lret add daa test xchg mov lock (bad) xor pop sbb jb push adc mov clc sub cmp sbb stos lcall push adc (bad) fxch push mov cmp jns stos fnstenv cmpsb in push cwtl es dec push push aad (bad) lret aam adc push jae xorl loope hlt pop gs mov dec in adc fs mov pop mov arpl lahf shll fisub dec xchg xor dec pop loope sti lret or inc mov inc cmp (bad) jge add out es aas push xor and aam pusha dec jnp sbb add addr16 dec inc imul out fstpt movsl aam rcrb test and pop lods or dec out push pop mov adc mov fcomps inc mov add out imul xor (bad) cltd stos loopne pop push add jecxz daa xor pop js adc std lds insb loopne inc faddl and (bad) and (bad) jo (bad) dec je sbb mov or pop das ror mov aam push or jo (bad) xor mov aas push sbb loope clc cmp imul dec outsb push dec and and cmp adc mov (bad) stc xchg mov testb mov sbb les outsb fidiv cmp cli xchg cmp out dec mov adc icebp popw and mov inc cmovns inc aad mov push inc add or push mov sbb call push inc ss and out test jns pop imul mov xlat cli fwait sub sub in sbb out cmp popf and adc push dec xlat push and dec sbbb sbb or xchg flds cmpsl mov addr16 or lcall lds aad mov cltd pop clc sbb xchg ficomp aaa js pop cmp loopne mov lret sub pop mov inc stc lods addr16 imul fldl sbbb lods in jle jp out jl add xchg jns test or rcll add xchg aaa xchg xchg dec adc mov in push out dec in out add xlat ss repnz pop sub mov (bad) fdivp mov (bad) cmp and in mov pushf jge int sbb xchg loope jnp xor ja lret jns adcl icebp mov lcall and cltd popf sbb data16 outsl cmp jg mov push mov iret mov pop dec or pop int3 stc stos sbb jns mov stos in sub xchg add ds cmpl movb mov call in pop mov or push and jle fwait mov or sub negb popa cmpsb dec sub mov sub aas inc jbe push dec (bad) repz and dec in xor cmp loope out mov lock jecxz and out leave mov push test sbb push mov push fmuls dec push sub scas cmpl push push lret dec mov (bad) lock push inc pop jl and inc aam jmp add popa loop push push jb ret popf cmp xchg out ds sbb sbb sbb jmp xchg xchg jge jp rorb dec outsb jne js jmp xchg cld gs and add in stos sarl mov and xlat mov adc (bad) and xchg icebp sbb es xor jnp mov sbb (bad) notl inc dec call and mov fcoms push xor aam adc sbb lods in movsb outsb (bad) push in in cmp ja fdivrp out sbb xchg dec and inc movsl pop xor push sub arpl in and aas push popa or inc mov repnz (bad) xlat ja into mov adc cmpsl incb and popa pusha jo sbb jl je lahf push imul jns insb stc ror jmp and into adc and lret inc mov int3 jl sbb jg and lods mov mov or or add nop insb adc cmp adc (bad) ja cmp pop movsb data16 movsb je leave push call aam mov rcrb sarl cmp xchg std push push push pusha pop xchg sahf push mov cmp jg (bad) popl pop sub or mov and or xorb jns cmp xchg xor xchg xor pop loope add push xchg into xor jns cmp mov push dec outsl cmc mov xchg mov outsb dec xlat stos repz popl jno stos fcos dec out stc jecxz sbb aas mov (bad) movsb loop out pop adc sub mov push xchg icebp sbb ret out popf inc out jno clc mov pop jle dec je push insb ss mov pop loope imul outsl int stos jne or repz rcr (bad) push js ljmp xor int xchg orl lods xchg or movsl ret leave xchg adc cltd sub push in pop jb dec mov sub pop push daa sub or or sbb jecxz push jp ret (bad) push cmp inc xor jge nop mov sbb push outsb sub add in (bad) out aam mov mov pop (bad) sub and rcr std lahf adc cwtl adc xchg mov cmp ljmp ds popf jcxz and jns cmp and cwtl jo in pop lret movsl sub dec xor inc test mov (bad) notb jp jno add push inc (bad) cwtl fstpl mov add sbb jae cmpsl daa mov adc fisttpll mov pop jns adc dec addr16 push push and dec xchg dec lods mov fwait subl lret add out add mov add out hlt adc dec insb dec in mov (bad) dec inc fldl sub les data16 (bad) ja cmpsl addr16 xlat and xor cmp jge repnz inc jo in movsb cmp push mov push push mov pop pop leave cmp or lods or icebp jg aad test aam (bad) mov mulb sbb bound push imull sahf call or mov shll lods inc call fmuls adc xchg adc dec stos movsb adc outsb push add lock lret out cmp sbb pop or mov push cwtl xor lods stc push enter mov sbb incb ds pop fisub cmp xor cmpsl (bad) ljmp push sbb xchg shrl mov or sbb int dec lods push xor xorl mov push push aad loopne push cmp (bad) sub mov in outsl xchg ja sti sub mov xor fs adc cmpb loope or in or dec aad lea lock mov sub xorl inc arpl icebp inc aam mov lahf sbb or pushf add pop add ret iret icebp scas xchg roll sti inc mov xchg push add addr16 adc mov int lods push (bad) or cli pop bound cmp leave or sub lock test incb xor out gs dec jmp fstl pop lds sti pop data16 aam stos insb or (bad) lret mov push movsl dec sub or cs (bad) ss (bad) je imul ds popa gs pop outsb sti in xchg rorl dec sbb mov test (bad) mov or lcall or jg (bad) mov xchg sbb jnp mov clc in ds enter ja push adc xor cmp out xchg xchg daa dec insb dec stos jecxz aas pop imull loopne inc rcll jl (bad) int3 jno lahf add push mov movsl sub mov jge iret or and insl xchg mov jnp mull std cmpsl mov jo xor lahf dec gs dec cmp jno jle in add mov out scas jg push outsl dec movsl jmp adc cmpsb outsb mov sbb test mov or shr push lds imulb mov (bad) insb add and push (bad) das negb into xor aas xlat pop lahf movsl stos jbe cmp jb sub sbb push out daa push shrb and push ffree fs lods xchg in xchg in xlat xor push arpl pop mov nop pop aam cmp inc dec ds lds adc movsl inc dec push aad (bad) fimull nop lods mov testb loope adc xchg xchg mov jmp or inc mov mov cli or adc jb or cmp mov xchg push aas xor or test (bad) or inc mov (bad) in mov push out sbb mov mov (bad) rcr add mov lods dec insb int inc lock push xor (bad) lock jae fidiv adc push mov movntps lods sti push dec xchg sbb mov (bad) sti outsb fistpl pop pop fistl dec cmp sbb jg dec inc push xor xchg jmp (bad) test jbe pop les out and add mov iret push mov mov clc cmp sbb cltd jne or (bad) in xlat jle rcrl xor dec mov cmp insb shrl or addr16 inc cltd adc cmpsb outsb hlt test lods les (bad) repnz pop or mov cltd jnp or iret test mov sbb cmp add push fs adc fmull pop (bad) xchg mov mov imul pop xlat cmp inc pop xor mov icebp lahf inc or or lret loopne pop ljmp add pop jns or bound int dec sub xchg pushl xor cmp and in into sub je adc jae test adc pop (bad) jbe cmp sti mov cmpsb out rorl xchg mov fs ds std out xchg sbb inc mov and xor mov sub adc test les dec add fist mov pop out jne sub lods flds sbb aad jbe push push cmpsl je fadd dec ret xlat mov fs mov add lock scas in xchg lea repnz sub inc (bad) push xchg dec ja movsl dec mov outsb hlt mov repnz in push push insl push (bad) sbb add xchg ds fbstp das xchg dec in add mov out mov xchg xchg adc cmp jecxz and stos daa ja jp into jnp mov daa jns lea dec test aad out out xor shr rol cwtl popf cmp sub sub pop outsb xlat mov inc (bad) cmpsb bound sbb push or pop out dec shlb dec in xor cmp push ret xchg mov loopne adc into data16 mov jnp mov mov dec dec lfs imul mov cmp cmp pop push in lea outsl test sbb das fbld xchg xchg push sub (bad) sti fidiv jno inc test sbb sbb inc std push outsl nop adc jmp xor cmp pusha pusha icebp xchg aam pop push hlt aaa inc adc inc xor xchg aaa mov out lds data16 iret xchg jnp and icebp xchg test sub mov jbe push int3 mov iret inc cld cmp xor push fstp call loopne or mov (bad) ds outsb jno je enter inc cld xchg (bad) or inc lods addl (bad) int3 cmc sub out movb jb adc pushf popa (bad) mov pop lret mov movsl mov adc mov int3 mov jp mov xchg sub mov (bad) fisubr lods mov pop xchg and dec lea or or (bad) mov cwtl mov mov mov inc jbe cmp (bad) sti cld sti xor sub stos daa cmpsb cmp movsl and inc pop xchg cmp int3 addl adc pushf jmp rcll mov dec test and pusha inc loope push cs push adc inc dec in push lods in inc popf insb pop (bad) push add pop pop jne outsl ss xor mov adc bound sbb xchg add lea out mov mov out sbb (bad) jns pop adc xchg mov xchg and lret div ljmp xchg mov mov adc xor mov jae jmp into sub shrl jg mov dec int dec and mov jno sub or daa add mov data16 clc (bad) jbe sub je ljmp fcomp adc sub (bad) fisubrl mov xchg sbb jo es (bad) cwtl and mov and test pop sub sbb shrl sub ficoml call (bad) pop lods cmp repz sub clc pop pop push aas out pop add jo lea loope push sahf arpl (bad) frstor adc dec sbbl xor push dec rol inc out sub fsts jb xchg mov xor movsb ds push push (bad) not std and cmp pop adc xor fdiv adc aaa jmp cmp or std jno in xchg cmp push rorb xor xchg (bad) cmc iret in lret pop imul lods cmova gs dec jae mov aaa xchg cwtl sub xor jp gs add fstps ljmp or xchg ret sub stos insl leave mov cmp dec pop mov das jne sahf inc jg xlat jae (bad) faddl jnp mov aam mov fsubs subl js jo lods add xlat ffreep dec stc xchg in pop (bad) cmp rep insl pusha xchg fstpl gs test or jo mov cmp jmp popa into push push push stos adc and jb pop and mov insl cmp xchg (bad) xor jo mov adc ja insb sub jge (bad) xchg and xor ds mov add mov lds lahf mov pop scas or fisttpll js pop cmpsl xchg popf roll dec push sbb dec loopne mov dec jle popf or (bad) adc es push nop lds in sub cwtl nop and movsb loop xchg inc pop aam xor pushf and nop loope inc push arpl sub jnp movaps (bad) jnp push stos fnstsw mov stos jle inc adc jns jno stos add add inc and add iret dec and fistl and sub int3 shll hlt outsb mov push bound std inc inc bound push mov repnz mov push les ds bound pop xor rcll sub xor or push xor xor push mov lds or dec (bad) and push aas (bad) jo cmpsb aad fstl inc cmp int fisub and pop fidivr adc xchg sub xchg sahf lock jmp xor or cld in out fimul and lret cld inc in or sub xchg repz add or add sub addl lahf mov add mov push enter xor ja aaa mov cmp inc cmp dec notb and and out xor sub cmp mov dec sbb aam js nop sbb mov cld in sbb sbb lahf les inc pop popf mov dec addr16 xor es sbb mov mov or push mov adc cmp mov push lcall pusha gs sbb (bad) mov add out xchg nop mov (bad) shr enter mov inc add data16 movb pushf adc push faddl mov dec cwtl in push lcall mov (bad) je jl icebp outsb mov mov inc dec out push stc jo hlt and and sti rcr test push or mov mov loopne xor in and mov cmp (bad) ret les add lods xchg push jecxz popf das ds leave nop cmp sub xor and fidivr jnp sbb das (bad) xor or add lds sub in jae and aaa sbb addl and test scas add and addr16 xor mov xor stos xor outsb mov cmpb jno jne lea mov adc pop xor cmpsl pop and jb (bad) in adc mov rcrl lock in jmp pop mov xlat nop mov es pop adc pop mov xor sub (bad) and sti loope jp scas fidivl pop push sub fsubs es sub into dec sub ret xchg xor popf and add call xor stos inc sub xlat adc xchg xlat sbb inc xor dec (bad) pop inc sbb enter lret jae and pop ja sbb jb mov dec addr16 fisubr lods pop or dec mov jb cmp and cmpsl rcl xlat pop inc inc pop es test mov inc mov lea cmp popf adc sub or subl cmp adc pop cli xchg stos icebp xor outsb cmc dec lret push cmp shr (bad) or das xchg xor pop jg lock sahf push (bad) pop sqrtps dec (bad) mov rorb movsl mov es arpl adc mov dec xchg xchg inc fcompl cli in test add (bad) mov aaa and mov mov ljmp in rolb pop pop inc push mov int scas lock mov mov add push or dec xchg sub push add add insb add xor push push mov xor in scas mov add in aad jmp in or test repz aad push push pop inc push sbb add test outsl or xchg jb cmp mov fst inc cmp pop outsb bound push and ljmp push pushf popf data16 xor cwtl sbb shrb adc push pop and or inc inc push rorl imul mov popa lea cmp mov ja xlat and popa xchg in and shrb xor gs daa inc xor mov mov adc add mul xchg push xor push or xchg dec or xchg push out dec adc push add sbb jl cmp fwait mov in adc (bad) push pop aaa push call cmp fimul fcmovnbe pop ljmp (bad) (bad) rorb test push add lret add and enter mov jbe xchg or (bad) lock test pop push rcll adc notl and mov pop push dec push aaa add jae ret xchg and add push test inc xor jl and push (bad) jl lds ret daa push fdivl data16 add rclb data16 and popa loopne scas aam pushf jl out xor push (bad) mov mov test mov inc xchg inc cmp xchg jmp pop jmp outsb ret jp sbb fidivr and jno pusha aam adcl popa fs xchg (bad) ja jb mov into mov scas sbb push rcrb outsb jp popa movsb popa (bad) cmpsb dec xor push cwtl add or or aas out fistp lea sub popl mov in stos adc (bad) cmp adc int (bad) lods movsb jno adc add clc pop dec push lods adc cmp jp or xor sub push mov mov icebp (bad) fimul sbb test pop fs push aaa pop sbb xchg outsb pop push cmp dec push jne cmp shll pop mov push inc scas inc bound scas add mov push (bad) int xchg jae mov loopne jmp outsl jle sbb into je xchg xchg jmp es stos dec (bad) mov push aam dec sbb fs sub inc fs jae jbe add aaa ljmp test add popa test cltd popa cltd and mov (bad) mov xchg push iret (bad) xor and jle fmul pop jmp insb xor repz in loop ror sub aas lea scas out inc mov xor mov int3 pop popa mov stos cmp inc js loopne loopne inc inc mov cmp dec movsl mov sti lods lret sarl jbe loopne xor push add and lea mov ret cmp mov (bad) push inc lret jmp xor sbb xchg push lds add mov push sub js sbb (bad) sti ss push or ret or mov nop mov enter fstps ds xorl jb pop push aam cmc (bad) int3 shlb jne das in outsb aaa sub push add xchg jg push loopne and pop lea xor mov xorl fwait dec popf sbb fsubl pop movsb lret out ret xor cmp out jne sbb pop ds mov xchg outsb rcll pushf loopne or mov pop les xchg or pop ss sbbl dec xor test int sbb mov pop ja,pt shll jge je mov scas inc mov pop subb xchg jecxz pop in sbb ds xlat repz adc pusha (bad) imul mov out cmpsb xchg sbb cs push mov mov lock imul sti jmp sbb sub mov (bad) ds into adcb jle dec cmp ret dec inc sbb and and nop xchg rorb cli dec pop test addr16 bound adc fnop xchg jle pop leave push aad xchg test xchg add pop adc inc dec fs push xchg inc pop pop jns,pt and mov addr16 pushf xchg xor ficoml sbb push ret or call and xor int3 aad jno cmpsb lea mov cltd mov ljmp dec imul loope mov push popa sub sahf inc mov xchg mov add cltd xchg lret in imulb std xchg cmp in push fmul clc push fdivr xor dec and cli out push push in popa movsl out idivl xchg and mov push lret cmp inc add lret cmp js adc call and out rorl ja,pn cmp pop out mov inc es loope lods xchg xchg adc mov sbb sub inc push push sbb dec lods mov test int in jl mov int3 jmp pop (bad) popa fild (bad) sbb hlt add roll std es out je aad mov adc cs test mov sub cmp mov cmc fildll mov sti aaa lret dec xchg jmp cld jg pop pop push and and fdivl bound pop add inc or cltd fcmovb jl jg jge lods cld inc and inc daa jecxz xchg xor cmpb push js insb and lret xor mov xorb mov int leave jp pop (bad) fwait pop pop sbb push clc pop pop mov adc pop adc xlat aad jl insb loopew push test sub nop mov xchg lock pop mov xchg int adc popf sub jecxz and inc ficomp nop xchg cld mov movsl pop gs push inc pop cmp enter fdivp (bad) test mov sub xor loop add add or int scas mov aas ficoml xchg mov cmp jns lahf std dec test adc test adc mov mov lcall std push ja and testb push inc out int3 movsb pop pusha push fisttpl push imul aam or jle (bad) xchg sbb fs icebp dec lods sub adc iret (bad) jge xlat mov mov out push fs aas aam and sbb xor push clc test and and lods push clc sbb xchg call add xchg xchg xchg in stos rol cltd rcl adc mov mov mov js cli fwait daa or pop hlt jb mov imul dec adc inc push push pop (bad) cltd sbb and pushf negb dec and lea (bad) jl addr16 xor jle cltd stos cli cs repz xchg jno das cmc dec dec daa cmpsl or inc mov stc shl aas or add sbb dec pop lret xor xchg pop jno (bad) std sahf int sbb adc fistp sub stos jno lret push test adc mov xchg inc mov and pop js nop imul rcrl adc enter xor dec mov mov imul sub jne aas jno mov push adc movsb xor outsb mov ret adc jg popa andl xor mov mov movsl mov adc sub imul ljmp cmp insl or cmp sub push stos and push in aad add arpl push fisub out mov fisttp shll mov iret mov inc jle lods jo push jb bound xchg inc push in pop xlat movsl lds dec out imul and (bad) pop mov int xor push lcall and sbb rcrb xchg pop jne fs mov inc addr16 push mov fistp jecxz scas xchg jne sub insl insb sbb es in mov add and xor jb sbb bswap adc and cmp push inc push mov jecxz add scas sub lahf cmp popa xor in inc and push push rcrl and outsb cs test mov faddl mov mov sub sarl jae xchg stos push xor (bad) sbb dec jbe push push cmp gs sub sub dec mov mov hlt and dec dec das (bad) dec fmull mov (bad) mov xchg inc xchg popf mov rcrl imul pop xor cltd sbb sahf hlt (bad) or jno push jl cmp fdivs xchg xor push cltd push or lods icebp pop sbbb in xor mov cs add push dec call jecxz repnz loopne in pop push jae mov gs push push sub or leave mov in dec mov adc jno sub dec movsl xchg (bad) sbb sar cmp xchg into bound popa cwtl lds dec (bad) jp mov dec leave mov ret (bad) and cwtl daa mov test fwait out js xchg movsl ret mov pop incb sbb leave fwait stos fisubrl lods icebp and xchg (bad) icebp xor sub aam sarb or jne and data16 lock xchg movsl push xchg ss inc lods xchg sub mov into jae inc popa sub push mov cmpsb lret fldl xor data16 inc mov (bad) outsl push mov setb bound sbb incl jo sbb iret pop (bad) bound pop mov or lea adc pop inc gs pop lods or das pop sub pop cmp sbbb or imul test push ja dec jno push insb dec or adc push push or jb push out dec mov cli push faddp xor sub loop insl mov or push int3 jo frstor nop (bad) mov fisubl inc in adc adc test enter jecxz (bad) int icebp and push mov mov outsl lret adc xchg (bad) movsbl cmpsl stos lea nop test xchg and mov sahf data16 push lahf ds xor inc xchg sub pop jmp in jmp mov mov popf test fistl xor or movsl (bad) cmc push jno xchg jg rclb dec mov pmullw and push push adc movsl imul fwait or jno (bad) enter push loopne js inc adc ficom cmc xchg xchg inc sbb lods test sub ret push test sub add cmc pop test flds es jecxz pushf test enter sbb fmull sbb cld popa jle std ficompl test shrb ret clc cmc mov sub xor stc sub shll inc inc jo or cmpsb xlat mov push cmp and pop scas mov mov sbb cmp or xor sbb pop sti xchg jp int out (bad) aad mov pop inc mov jns or rcrl pop and xor mov pop roll xchg jg cmc adc pop ss loope std mov into fwait jb (bad) and sti fsubl cld jg sbb sahf xchg in xchg das jg mov xor test stos cwtl jl adc mov xor mov sbb sub dec push imul iret pop fsubs into fsts push iret xor sub ret push das dec shlb adc xor mov ss mov pop and rcll lahf xchg pop int3 je mov jecxz lret bswap stc pop or xchg test cli xchg push das sbb adc scas xchg xor (bad) add xchg mov loop addl pop inc and and jle and out xchg loopne inc push jb mov out push inc mov out sbb dec shl sbbl cmp xchg imul shrl mov push jb mov (bad) out jge scas push aas mov mov cmp fucomi cmpsb dec dec cld xchg sub jne cltd push stos fnstsw pusha mov pop or shrb sbbb xchg sub pop sbb inc pop add (bad) lret inc xchg sti sbb push bound subb mov dec push sbb cmp (bad) jne dec xlat jle push mov mov mov ja mov aam sbb xchg imul dec mov fistpl imul cwtl fwait enter mov sbb clc fcoml sbb (bad) inc movsb inc dec in adc bound inc cmpsl push aas sbb in pusha andb add out pop shrb dec add pusha adc xchg roll xchg cmp (bad) push pop mov mov jno mov adcb (bad) or adc daa or (bad) xor xchg push add mov aad sub mov cmp inc dec fnstenv push and fadd ret mov js pop jns sahf adc (bad) in pop mov adc cmp push jnp jge or jle jb push push aad add sub or aad shll fild pop daa icebp fnstsw mov hlt mov iret inc mov jmp cmp mov icebp arpl mov or mov mov mov push cwtl xchg int3 pop popa inc or xchg iret aas shll dec mov push (bad) xor hlt jae sti sbb pop xchg push in push jne and pushf (bad) cmp mov into call push lea movsl cmp test and xchg mov sbb pop pop pop pop jmp clc js cmp outsl sarl xor xchg mov rcl enter push repnz pop test into sub test or out lock push cmp aaa cmp dec imul scas daa in cmovp andps xchg adc pusha sub mov fcompl jae cmp cmp xorl jno jle loope inc mov pop add test push sahf or iret jnp adc jne test inc dec cmp rorl call mov mov jnp or arpl dec mov inc cmc adc es inc xchg jne lods mov jle in jl sti mulb inc adc add je push cli pop (bad) cmp add cmp cmp jo jne inc addb lahf arpl pop or in push dec mov fistl in sbb mov mov int jmp inc pop inc mov inc add jae sbb cs fdivl nop insb movsb jmp nop cmc jns pop pusha sub cmovne sbb cmp mov sbb xlat mov push fadd (bad) loope jae mov in xor cmp in cmpsl fs sub sub xchg pop jecxz cld lods and int lods inc ja sbb (bad) xor pop dec sbb stos cmp sbb jns adcl shll cwtl xchg mov cmp xor lods add cwtl mov ret imul test pop into sub push fldt adcl xchg mov mov dec dec fist add jns data16 iret fstl jp ret movl mov in inc cli outsb pop shlb je sti insl mov movsl fwait jge mov faddl mov js repz mov decb cmc test outsb je adc bound inc andb jle dec nop mov push and mov push sbb (bad) sub inc dec lods push pop push outsb sub scas push out lods add in popf xchg in xor dec dec lahf mov xor and lods mov push insb mov mov popf mov scas outsl sarl cltd addr16 clc sti ds push popf ds aas das mov xor dec pop (bad) pop mov xor inc nop and xchg fisubl roll mov inc in fnstsw dec pop xchg mov inc (bad) sbb fwait jecxz mov cmp or lret xchg sbb or iret pop or pop dec jo test jl add movsb xlat popf sub popf in lret fwait arpl in xbegin inc movsl in pop rcll xor pop adc dec mov js dec jmp outsb fwait into or push cmpsb out sti inc dec or adc add lahf mov mov mov pop loopne sub add stos fwait push pusha addl inc ds pusha inc lahf sbb inc ret dec jns push (bad) test dec (bad) testl leave les (bad) fdivrp mov mov push stos xchg cmpb dec or cmpsb addr16 insl lea add push push sbb pop lds sub fstpt add cmp dec nop dec ret and cmp sbb xchg ja xchg jle lea or xor and and and lea fiaddl xor jecxz dec outsl push repnz outsb mov test out mov and jno ljmp cmp and pop or inc sbb cwtl xor aas enter mov test adc push out subb inc cli inc pop mov in inc in bnd mov test xor or (bad) mov push adc mov inc andl and aam into mov nop sub mov jle cmp mov ds lret pop daa (bad) push ds out xchg sub cmp sub xchg xor lahf lret decl loopne repnz ret pop stos pushf mov xlat test test dec in cmp (bad) sub pop pop aam imul test sbb int3 lcall or decl or fwait test ja pushf dec cld dec in cltd insb (bad) enter in mov mov adc inc xchg out cmp mov nop stos mov mov adc in daa mov out rclb lock push cld and cwtl lds test aaa xor rol xchg sub fdiv je js lret cmp adc das add les mov pop hlt in xchg mov imul or push in inc aas xchg movsl sub add mov lcall adc and sti imul jae addr16 mov out or xor cmpsl dec addr16 adc (bad) sub push ds adc imul fcmovnb xchg xchg (bad) pushf std xor hlt inc inc pop sub orb mov icebp mov mov push les pop push shl pusha rcrb dec xchg iret or stc inc push pop arpl (bad) ss or test jo push dec icebp xchg sub clc ficompl cmpsl shr aas mov lea dec add in add icebp jae dec popa sub sbbl sub and push add hlt bound cs pop jne mov pop sub mov pushf jns mov sahf ja jno mov int3 and xor repnz orl push call movsb test push addl (bad) pop inc pop adc jnp jns jo or and adc and les pop inc leave xchg or dec sbb lds sbb cwtl pop pop jo sub add out js (bad) (bad) mov wrmsr jmp and xchg movsb (bad) cs pop adc mov xor adc es lods testl inc sbb arpl xor aam dec (bad) and scas insb aam cmpsl cmpsb out jae scas aas adc push rcrb cs sti shl inc std aas aad or lea adc push hlt inc pandn lea jnp and push push jp (bad) cmpsb loop add jo insb jno,pt mov fucomip int3 inc mov cmc cwtl in cmp sub movsb into nop dec test add pop stc add pop fbld xchg dec xchg mov pop dec sti inc mov adc adc repz and jns xorl je pop jbe jge stc cmc dec inc mov push mov das jle pop sahf adc in push in mov data16 adc (bad) pop xchg sbb mov mov cmp mov sub stos jb push daa js ds mov daa add mov fmuls jl push jg jae (bad) cmp out cwtl cmp dec (bad) mov add mov inc pop inc add outsb push add sub lea sbb xor sbb cli jne jle (bad) pop or leave xchg and dec adc push push (bad) (bad) add inc push and and fcomps (bad) jp outsl push and xchg (bad) jb jae inc in xchg xchg lds nop dec fsubrl jo rol cmp or sbb jnp lods fisubr stc sub add jle repz push ljmp pop aaa jns push test adc xor or and and cmp inc test ficompl int3 mov test push leave repnz push lahf (bad) leave jnp insl pop notb jg inc inc pop js adcb xchg xchg pop fs bound mov stos or sub add cmp test push mov xchg sub stos sbb add leave das mov incb jecxz dec data16 aad xchg dec mov mov mov jb dec mov int push mov adc je fimull mov mov sbb sti sub adc dec clc sar jo mov push mov dec jo mov ljmp ss daa test sbb iret dec jae cmp aas test inc and push test push aam adc jne rolb mov add ds repnz push test add adc fwait gs test sub xor roll mov aas nop pop xchg and pop lea jp mov adc add lcall and arpl sbb inc shlb inc xchg ss nop shll mov shl cmpsb xor push pop enter sub loope sbbl xchg adc out push imul out jmp add fistpl pop sahf ds testl outsb lock mov xchg push mov aas test sti add andl mov cmp pushf cltd mov mov cmp pop xlat xor lods jns fidivrl pusha bound sahf adc inc lea push push mov loop mov cmc xor call sbb (bad) mov and sbb ret gs int pop push xchg popf cltd fucomp xchg (bad) push test jno popa xor pop mov mov lret add test out daa lret inc lock xor cmp and dec mov popa cltd int imul or jle aas push pop test add pop mov sub or add shl enter xchg js jno leave sub cwtl imul inc sarb add bnd test cmp cmp daa push dec sub decb mov xchg fsub cmp ret mov mov mov repnz or fwait push or fwait add dec cmp dec movsb sti (bad) pop mov (bad) fdivs test rolb add inc (bad) sub ds jns add insl imul gs push cmpsb mov cmp loope jno mov insl fs insl repz xor negb or es shlb int mov cmp and mov sub daa jno lcall pop addl mov gs cmp icebp aam imul dec (bad) mov xchg sbb rorl pop mov decl mov inc xchg adc enter xor xor and decb out imul repnz lret das hlt fldt lret inc decl inc out stos pop mov cltd jno ret xor jns test cmp pop std in out pop cli push pop sti sub jb rep mov nop (bad) sbb jge or sub lea jnp mov pop imul fs xchg cs sub pushf test (bad) xchg add mov xchg dec and and xlat push sub lock cmp repz lcall add addr16 int3 mov gs sbb fdivrl push movsl sahf icebp outsb imul mov loopne pop xlat inc je dec sub sub movsb xchg daa test sub jge mov or popf rcrb daa lea mov in sbb cli fsts add add cmp sub test pop pop xchg xchg jp adc mov fistl xor testl aaa addr16 fsin jg iret dec popf das fsubrs add lods mov mov sbb hlt add sbb mov inc sub push pop scas jae,pn jo fiaddl mov lods pushf mov xchg insl pop cmc add sbb dec push pusha push adc cmp jb lea xor scas xchg pushf ret shrb or or test jmp push xor mov mov fidivl cli imul sbb inc lock loope xchg movsl push and xchg cmp xchg test mov lods rorb jl je lcall in jnp mov sbb cmpsb testb sbb lods pop flds imul push jecxz xchg f2xm1 adc pushl lods dec dec scas push pop outsb sbb (bad) or mov add dec imull fimull mov or fstpt xchg ljmp jge push add and sti sbb cmp bound mov sub fldenv fadds xor loopne mov pop and add mov ds ss cmc sahf in andps sbb dec mov data16 sbb stos mov xor pop daa sub fnstsw movsb lahf mov push or sub stos shll xor adc ss cmpsl inc inc push add out ret pop std dec (bad) pushf ret adc cwtl or jnp pop stos pop je mov adc sub mov lret sub add dec cmp shld andl pop test adc ss sub sahf ret push (bad) mov add mov aas mov cld andl movsl fisubr stc sbb and in popa movsb in loope push hlt xchg imul (bad) sub add (bad) mov xchg call pop iret pop je lods jge aas gs jl mov xor int loope fisttp rclb sbb (bad) fldenv add or pop add xchg jns mov imul sbb adc loop and cs cwtl and cmpsb push pop push inc je out cmp and push jno xor or xor gs aas les stos mov fbld lahf imul xor sahf or adc dec call mov aaa mov mov sbb call lahf xorps ds cli cltd or cmpsl (bad) adc cmp test push gs adc (bad) inc cmpsl imul pop push movsl lahf fadds pop or cmpsb mov pop push es (bad) in sub lret mov sub daa movsb inc add gs xchg mov jg sbb shrb mov ror int mov jle cmp inc dec nop xchg andl mov mov pop sub cmp pusha adc insl lds outsb aas xchg or inc or clc sbb loop xchg aad hlt jge je test cmpsb aas push adc movsl push xor dec outsl inc adc lds fisubl sbb xchg cs or mov mov xlat xchg jg jg movsl fsubrl sbb outsl pop xchg add ret inc cmp push sub cwtl pop (bad) fsubrl test or mov rcr loopne or idivb xlat (bad) into push popf ljmp sbb and insl dec jno push data16 xchg stc pop test xchg cmpsb lods mov pop mov xchg adc pop (bad) xor stc push mov aaa xchg arpl ret aas nop and cli insb xchg or rcrb push add dec and leave and std dec iret pop pop cmpsl or mov mov aas jp loop pusha lea sub into dec push (bad) cmpsb sbb cmp dec fwait mov (bad) aad add push push and jmp pop bound add xchg xlat test or rorw cmp cmp aam pop or mov mov pop mov in adc in mov push out inc sbb lods mov cmc jg in test bound push sub out (bad) (bad) std movsb js jnp iret repnz xchg xor inc xchg jle (bad) cmpsb adc push shl std icebp adc aaa iret pop dec pop gs clc mov das mov cwtl and cmp cmp push adc sbb push daa cmp int3 cld xchg loopne pushf push ficoml repz mov stc orl test lods jno and stos subb xchg xchg loopne xor xchg ret flds pop ljmp ret std lret inc enter jmp fmulp or mov xor fwait jmp dec je int3 popa mov push movsl ss cmp test ds xchg sub jb popa sahf push fwait xchg xchg xchg mov idivb mov pop xlat xchg xchg dec js outsb cmp push dec test mov xchg repnz loop add lock arpl test lods test xchg ret xchg in xor aam imul push out inc pop sub mov adc push cmp or push pop movsl mov imul xchg lret mov xlat xor push pop or xchg out mov xlat enter test pop or xor loop jge cmp mov xchg mov push test outsb sbb push pop shlb jns push gs (bad) loopne push adc and ljmp push adc test mov or jp in jge psrlw and pop test scas cmp imul inc ss idivb out (bad) bound mov mov fs aas rcrl jp daa insb cwtl sbb adc xchg or stc dec mov lret add incl test iret push add sbb cmc adc push cs jne jbe (bad) in mov fisttpl std incb out daa (bad) mov adc mov push or aam and ja jmp push or std (bad) test int pop jg lods mov push les (bad) xor icebp inc cmp test pop lahf inc es out and cmp repnz lds sub mov inc in stos add mov push jno std je fisttpl jmp mov jecxz rol (bad) cltd bound sbb scas movsl pusha es cmp xor bound daa or nop jecxz adc aam mov pop mov mov mov jle push sub adc in mov bound xor dec xchg pop sub das pop xlat sahf in inc bound mov fwait lahf cmp pop gs sub leave adc movsb adc imul pop aad test (bad) jne sub xor mov xchg test cmc or (bad) jmp test inc mov pusha (bad) out pusha fcmovb cmp sub insl mov out fbstp sti out push fbstp push mov or sub jb dec (bad) stos mov xchg jne mov or inc mov dec xchg jnp hlt push push int jne mov cmp mov mov or mov out out jns jo fcompl pushf mov (bad) mov fisub jecxz (bad) lock cmp xchg cs jo sbb pop (bad) je insl sub idiv cmpsl (bad) in call outsb lods mov adc rolb ljmp loop jmp adc outsl push sti int3 push icebp cs push cmp ret cs jp ss mov out test push in divl mov xlat dec pop outsl mov and imul mov stos jl mov nop ficom outsb mov loope jb add adc pop rcr js adc in (bad) fcoms add pop es adc xor je,pn shrl clc loop jns xor jg out pusha pop gs faddl jmp pop or mov ret fsubrs jb fsubrl clc ret jmp add fs mov or sbb push xchg int sbb cmp rcll ds icebp lahf push icebp jo test push mov sti gs inc das test and clc lea xlat dec xor dec add cld sbb rcll aam inc lds decb cltd mov pushf lock xchg lds pop mov inc lret arpl inc in or and out mov pop fstpt pop pop add hlt mov inc lcall stos lods mov sti and push or ret jne adc sbb adc mov sbb loope lods pop lock mov sub jecxz mov lods sbb (bad) flds imul add cli mov lret movsbl mov lds and sub jb hlt adc fimull mov clc addr16 movups or mov jbe cltd and in scas dec mov or daa inc xchg and cs loop xor cmpsl outsl push cmpsl push xchg xchg pop add inc out add je jb iret pop inc shrl clc out jbe cli mov and sti xchg adc adc aad cmpsl adc ret mov mov pop aad dec (bad) mov xchg sub stc es mov jg jns dec sub push push sub das iret js out xchg std jo mov adc push xor xchg inc sub jmp dec std lods decb out pop sbb test lods test fistp test out or insl xchg and stc fcomi stos inc pop add mov xchg lods clc adc or fisttpll push inc movsl xchg sub jae inc and xchg hlt imul mov cmc cwtl cmpsl popf shrl movsb mov cmpsb cld shll push pusha mov mov sub adc mul adc and pop push repnz ret imul pop cld imull dec incb ss cmp inc and out pop in jnp enter rcll cld in imul (bad) or add mov xchg stos xchg (bad) mov or movsb sbb sbb mov pop js popf cmp repnz popf cmp test repz sbb or pop or jl shlb movl add idivl add jno pop adc dec mov rclb xor pop imul fwait mov xchg xchg push sub inc adc pop rorb insb push in push pop shlb jp int mov xchg incb xchg test into ja scas sub mov pop xchg movsl mov sub inc inc dec fsubrs fidivr lea inc or lods add (bad) int lds mov cmp shl push in js jae pop inc je aad (bad) sub fisubr dec shl mov js ds inc ficomp movsb mov ret sub mov ficompl es adc cwtl xor enter aad shrb mov push mov int inc enter in js dec jae mov xchg jne cmpsb cmpsl push inc cmp add inc incb imul ret lahf adc mov dec mov inc sbb jo ds mov inc aas ret adc dec jl mov xor xor cmc sub jecxz push icebp fidiv pop jg pushf setns cmp cmp lods (bad) ja push out shld push out push xlat sbb into jns xor xchg in movsb dec out pop int3 inc push mov sbb lcall xorl or push rcl fldl mov add aas ljmp cmp sbb push mov mov hlt scas test mov add dec call pop pop xor push mov xchg xlat mov cwtl enter dec in test or inc xchg out mov es fwait sbb lret cwtl fnstcw xor mov xchg xor lahf cmp (bad) enter mov cmp add dec mov movsl xchg lcall mov andl ja sub jb cmp add mov mov movl mov mov cli add sbb dec add (bad) pop xchg test data16 pop pop fwait and mov (bad) xor add and in fs sbb out scas adc pop adc lahf imul fisttp rolb or inc dec in jne mov fcomps and or xchg fdivrp rcrl (bad) clc mov mov (bad) cmp mov add test inc dec ss mov cltd cmp lods mov insl mov shrb data16 dec lods cltd ds inc and ret push adc sub push aaa sar pushf mov insl sbb jl cld ficompl sub aas movsb xchg or scas push or lea shrb loope (bad) mov out sbb stc adc jno mov outsl insb sbb arpl insb sub push push mov out pop lds push mov or xor push loopnew cli das cmp loopne inc dec cli mov in fcomps add std pop std push sbb cmpsb inc jl cmp dec sub ljmp (bad) push vpacksswb roll outsb sbb sbb sbb aam fnstsw addl jle decb jae push mov in adc xor mov lea or das pushf adc mov mov test pusha adc pop mov and ja inc push std inc outsb sub fwait jbe (bad) lock or repz outsb imul inc outsl cmp and cmp loope xor pop (bad) lcall push mov xor adc pop leave outsb and rolb adc ss xchg add mov sahf icebp add and sbb or mov in outsb jmp iret int3 or scas vcvtdq2pd inc push mov adc test in icebp inc adc dec pushf mov xchg dec pop lcall pop out jns push adc lcall imul pop insl stos sub cmp dec int3 cli ja pop out insl jmp fldenv popa jns push pop popa movsl ds mov (bad) es jb jbe sbb pop std mov inc push jb push and test pop imul jno push mov lock jbe mov dec hlt and sbb in push xor ljmp dec std mov test hlt jno mov das cmpl adc sbb pop ret sbb or shll sub jle xor outsb xchg add add jns ds dec ja testl jl xchg jns addr16 jle jno mov pop pop mov test test sub (bad) ret and dec fidiv mov mov mov call aas sbb mov push ja cmp mov and add scas cmp jp or addl or (bad) in sbb fwait clc in sbb mov fist lcall xchg pop outsl adcl xchg adc mov popf fiaddl mov dec outsb test fistl js and outsl cmp pop negl mov inc push mov inc cmp sbb xor or sub push les pop mov and mov rclb jnp push mov dec jb popf inc and cltd xchg add cmp or scas push xchg repnz call jl (bad) outsb push push mov (bad) into push cmpsl pop xor fiaddl xor sub pusha iret cld sbb xchg xchg mov jge pop xchg mov and mov add gs aas add add cmp out xchg daa (bad) cld pop nop or or push jnp and outsl sub lds pop jo or mov inc fs test mov scas leave sbb cmp xor dec cmp sub fisttpll lcall xchg sbb push xchg pushf mov cmp mov cmp int3 gs in or or or cld add xchg fwait and dec mov enter inc cli stc xchg jb lahf xchg pop repz jns lods lea es loopne in fcompl jg in aaa out enter cmp cmpsl rcrl fstpl insl add mov movsb mov adc aas frstor push mov shrl stc sub rcrb push fs sub aam dec push sbb test mov add ja jae out push in inc mov sti mov dec stos ss sub pop add xor loopne mov mov jge mov xchg jp add mov and lahf dec push lods and ret pop pop push test jnp fldcw call fisttp push test lret cwtl movd out cltd cld cmc push pop push pop xchg test sub xchg imul jb pusha es fisubr xchg enter dec xchg cmp phsubbw jp in push dec push scas je or dec cwtl push jns push mov jecxz in repnz popa and js push mov inc mov push mov xchg and pusha xor lods pop mov outsb popa sbb int cmpsl aas dec mov jo jp aad fs jmp inc inc and cmp call add or in js dec xor lods loope mov int scas lret movsl cmp xchg add and sub sarl xchg push add jne test mov and inc add ds ja mov cwtl movsb xchg ja jl jo dec stos out dec dec fnsave movsb test jb pop fsubrs sub lods mov cmp sub inc fcoml out dec (bad) xor int3 xchg into add jecxz fnstsw in and push mov jp pop sbb stos les mov (bad) in pop adc sub mulb pop mov dec (bad) leave daa stc mov loope pop cs fstpl xchg lea mov in xchg frstor jo incb (bad) jns incb stc sub cwtl les push mov xchg cmc sub sbb lds cmp enter pop outsl ds xchg sub test push mov fwait imulb mov pop sub ja jg mov nop jmp lret mov arpl cmp inc inc mov inc icebp and pslld cmp (bad) jb sub sub jb pop dec out inc adc mov push or in xor push xor lock mov sbb add inc dec pop in leave fdivl cmp sbbb call fisttp inc enter dec adc jmp add mov mov cwtl mov adc fistpll jmp push inc dec out fdivrp xchg daa adc xor xor mov pop lods arpl mov sub sub in pop sub xchg fs test nop push test nop scas push lds mov fdivl xchg rolb rolb adc cltd xchg dec aam lock push aad pop fsubr push add dec cmc aam sub (bad) popw lret push mov pop imul sbb bound lahf or mov loop mov pop mov and mov mov fbld gs mov mov inc push lods scas and push aaa and jns cmp cmpb test lods inc xchg dec fs fbld and cmp adc mov outsb push or or sbb nop sahf pop pop cltd jecxz xor jb cli popf aam mov sub mov fdivs bndstx movsl jns outsl mov (bad) jmp sbb xchg xor mov idivb mov aaa (bad) xor adc mov es jnp cmp out aaa in jb and mov lods xchg sbb adcl rorb push cmc push mov inc xchg gs pop xchg clc jl les inc test adc ja shll out push (bad) test jp adc jge push and mov push jns mov daa mov shrl movb stos dec adc lahf insb and pop pusha mov pop mov mov push adc adc jecxz movsl inc lock test fcoml push ss loopne or lahf push (bad) xor (bad) (bad) or cld xorl test ljmp jnp out stos or inc lods stos xor adc or push xor aad cmp aam xor cltd adc sub ss cmp lds mov lods push int3 and rolb pop in into fisubl inc mov add cmovns insb sub outsb movsl cmpl dec xchg or imul cltd les xchg cmp mov sbb clc sbb outsb ret lock mov aad pop movsl and sbb test xchg call lea xchg ret pop scas push jl cmpsb ja or fmuls cmp mov int test mov fmuls loop aam sti jp xor (bad) adc into add dec or scas cmpl insl test pop push lret jns rcr mov pop and insb popa scas test mov mov dec adc scas xor xchg fcmovbe cmp mov jne lret xchg adc adc jns addb aaa cs push pop and sbb addr16 scas scas mov pop addl adc lret jecxz (bad) xor mov mov ftst sahf and push jg cld pop add mov aam cmp je dec pop cmp xchg sbb (bad) andl push ds andl lods aad or lahf xlat rcr adc jo and xchg sbbb sub out ljmp mov aad jmp (bad) mov dec pop xor in xchg pop xor dec mov (bad) pop xor in jbe (bad) xlat adc xchg (bad) out jmp mov jp lods arpl ret iret into and enter jl popa outsb sub (bad) pop push pop cltd clc dec je xor enter mov inc adc aam loope push sbb dec popf ja push xchg ja aaa mov push popa mov loopne adc out pop inc pop push mov call clc adc mov mov (bad) xchg cmpsl mov lcall xchg cld cmp xchg imul add aad sub cmp dec and lret xchg pop push pop fist push pop lret sub in inc popa lods dec pop pop push enter pop xchg pop (bad) (bad) daa test pop push (bad) adc adc cld (bad) adc loopne pop je pop test inc sub or sub popa add push adc push out dec (bad) cmp lds ds pop outsb ljmp loope xchg push in add bound cs inc pop (bad) inc push test or mov xchg push aad sbb pop jecxz mov push in mov ds sti leave iret ds add in xlat dec hlt mov aaa mov subl sub sbb inc mov dec out lahf push test lret inc mov pusha adc test (bad) jecxz,pt mov add jb sub test jae mov xchg and aam xchg sub in mov adc call testl xchg movsb add adc roll sbb pop sbb fwait insl out sub dec cs jno jo dec lcall jp xor push jnp addr16 rcrl popf dec add xor outsl push and xor cs push arpl xchg decb shr movsl repnz (bad) sti jecxz stc mov scas fldenv xchg ja pop ljmp int3 (bad) (bad) xor imul mov inc lock sahf mov sbb repnz adc mov fs lock xor in outsl pop xor rorl push or xor mov jg aaa hlt cli xor mov xchg dec inc insb mov push xchg mov int (bad) ds xchg in dec push ret adc les rorl test mov aam jmp stos pop mov pop pop int xor mov movsl fistpl add lock dec test push xchg test out pushf mov xchg sub test cmp xchg pop add dec fwait sub aas aas sahf cmc add sbb mov loope mov (bad) mov cld add (bad) sbb cmpsl sarb lahf (bad) sub mov and jbe push or jno das gs cs mov or inc mov fmul aas mov insb nop lds xor dec xchg or (bad) pop push cwtl push jl fildl jbe ja imull sbbb pop inc inc sbb gs mov imul das dec shll movsl or xchg cmpsb adc add mov mov test sahf fist in jno push scas pop stos cmp cmpsl das div fyl2xp1 movsl int and xchg cmp mov adc aad fsubrl fidivr out push leave mov jae gs lods and add adc cwtl dec mov adc lods outsl mov (bad) out lock icebp mov fwait cmpsw jl inc dec sbb push sub cmp push in sub jae xchg add xor pop dec sbb jae dec sub sahf lods lret and fsubl push stos jg mov and pusha es adc xchg add iret add xchg scas lret push scas adc cmp shll cmp and jne mov lea shll xchg fstpl rcrb movsl dec loop push mov (bad) pop xor into dec mov push inc stc icebp pop jecxz push out clc movsl and mov outsb add imul jg les sti push sahf push cmp loope iret data16 dec (bad) enter fcoml or sub ds and or cmp mov adc mov sub in xlat notl iret das jne pop flds data16 mov scas xchg xor mov cmp mov mov adc adc jns mov pop sub xchg pop jbe adc lahf or sub sub mov mov dec mov daa pop test or loopne sub pop mov jno bound jle xchg mov int test or mov pop cmp in out xchg adc mov sub sbb push cli and or hlt outsb cmc mov out mov sbb mov xor aas mov mov xchg int3 loopne pushl inc fldenv cltd adc and xchg xor insl dec push insl pop stc sub and mov mov mov lods cmp int mov push iret push lcall xlat lods lods jl hlt mov xlat sub push push aad movsl jb lahf adcb dec jno ss addr16 push push out xchg jno (bad) and push hlt sbb pop dec dec xor addl ja and loop xchg (bad) sbb mov mov fcoml xchg dec jl pushf or gs fnstsw pop cmp cmpsb jg xlat pop lods movsb sub add cmp scas test (bad) movsb xor notl int3 fildll stos push push jae mov (bad) push insb dec sub jo adc xchg arpl gs inc iret jl out inc cltd clc (bad) dec add xchg push cmpl mov rcll cmp xchg push cmpsb test cmp out sbb popa addl cltd xchg xchg add pop cmp stos es int loope movsb push cltd inc imul mov addb pop outsl dec (bad) push mov jo jle in hlt outsl dec sbb inc out add mov ret mov aam mov dec data16 ss jae and mov jne adc shrb outsb jp cs jp enter decl test test and pop aaa int3 lds mov popf mov xchg xor (bad) outsb mov fs jb and add inc push pop sbb stos mov mov shrl iret stos cmp repz xchg rcl (bad) mov ja repz push mov idivl mov mov sub fwait xchg repz jne (bad) sbb sub or sub mov pusha cmc dec and mov dec mov int3 xchg in sub arpl xchg les (bad) fcmovu movsl (bad) cmp data16 rorl in push inc movsb jle daa add adc in xchg bound pop fsubl sub mul xchg icebp mov push bound ret mov cmp cmp test or movsl sbb sbb xchg popf jo in cmp lods lea and adc mov inc enter adc es sbb xchg leave aaa pop cs add xor sub and lds (bad) fs push inc pop push insb mov xchg scas adc aad add sahf ret out iret and add cmp push pop pushf popa sti jne aaa or mov and scas popl cltd dec mov adc dec dec push adc dec push cmp rorl dec (bad) std clc sbb push ret fwait jns incb inc dec sbb cmpsb lret sti xor mov pop (bad) add and sub and lret js mov in cwtl es clc pop pop or mov jp inc into xor movsl mov rorb pop aaa jnp or inc imul mov add fisubl dec cmp cmpsl xor and cmc sbb pop lds pop pop push movsb mov cwtl mov pop sub jno jb xor repz cmp xor dec sti xor sbb out imulb repnz (bad) push insb out mov ss dec fucom movsl int ret es sbb mov gs cmp aad add pop jno pushf popa or jno jnp andb das pop minps pop cmc or or mov xchg negb leave mov daa psadbw repz cmpsl cli stos in push mov out inc pop lea xchg movsb mov add and and shrb sub (bad) sti sbb sbb sub fbstp lods xor repz aam icebp jb add dec pop (bad) sub outsb pop mov inc dec or arpl adc mov sub addr16 cmc xchg jle and (bad) cli xchg and cmp incb out test aam sbb jp sti pop cmpsl mov (bad) aas sbb sbb in sbbb push xchg sbb push scas cmp and outsb rcrl sub jnp (bad) mov cmp fs es cmp xor out notb jle pop xlat in in test push pop mov into xchg out cmp pop jo mov and fidivr in sbb adc adc mov sbb je adcb out adcl mov sbb pusha cmp test xchg add (bad) aaa adc cmp movsl ljmp pushf inc adc add jle add test push mov add sbb fwait inc in jge adc inc push sub sub loop popf lea xor lret push loop and loope inc fldz mov inc push or mov xchg cltd in pop push push cmp jg js out mov fisubr mov stos mov mov (bad) mov daa dec push jae sbb sbb adc call das or jno mov test icebp into js add loop mov ficoml mov je js or lret pushf scas das lea xchg push pushf inc and icebp cs add adc pushf cltd pop dec cmp mov aam inc and fimull mov inc movsl (bad) repz inc jmp mov mov and push pop ja jg mov add sbbl (bad) in pushf cmp int3 popa movsl (bad) call pushf sub test inc imul divb dec fistpl std orl les lea scas or mov and mov jmp push xor repnz hlt (bad) mov aaa jmp pop popf insb int3 mov lret lds sub fnop and adc lds mov arpl cs into insb push mov inc mov or aad xor jb dec or jnp cli mov je hlt fs clc orl adc repnz fmuls jnp out add sub mov prefetchw inc push mov test mov jns cld arpl mov rcrl mov xchg add popf inc xor (bad) xchg and mov leave dec sbb das imull lret push call pop sbbl jecxz out movsl loop and inc das jae xor call cmp daa aas rcr sub push test push mov sti dec push or lods test pop inc dec and aad sub xchg inc insl pop inc cs cmp inc insl imul test cmc mov jbe call and loop (bad) cli insl cmp es cmpsb mov jno adc dec mov iret ss fwait outsl out mov cwtl mov test ffreep rcrl mov jnp jnp pusha sbb lea cmpsl (bad) icebp das lds js inc dec stos xchg xor decl push (bad) adc mov jnp,pt xchg in and mull fnstcw daa sbb jno dec (bad) mov aam movsb leave sub jl leave sahf (bad) mov (bad) push mov jnp and (bad) xor out xchg sub cltd mov sub mov mov sub mov daa and or lcall cld sub mov out jns ret bound sbb gs cld fldcw shrl sbb fwait mov xchg (bad) jnp mov lahf fstpl xchg sbb std mov pushf in jne xchg jno mov ds jle or jg das or cmc aas mov sbb test xchg dec cmpsb add jnp hlt mov jmp xor push jno sbb mov sbb xor lds test stc sub and cmp sub and fs in daa es jle push jne mov xor sar cli imul jbe (bad) lock or test or cmp sub pop (bad) push ds push dec add jo mov out (bad) jg inc adc imul sbb arpl mov es in imul adc sti fsubrp in push dec cs aaa movsb mov pcmpeqd fs jnp xchg sbb out aaa sbb add xor dec and add jnp movsb cmpsl dec xchg data16 nop xchg and inc mov jmp fcom pusha jnp bsf test mov cwtl cmp imull adc adc cmpl sub cmp inc les pop jb adc in jnp inc fcomi cmp fcoml dec je add dec jbe (bad) push and push push cs jbe add push push xor outsb sub sub inc push xor in jmp xchg (bad) lock sub push jne adc push mov mov and inc (bad) xor shl fnstsw cmp dec inc adc nop xchg sub xor and mov inc mov push aad add lea jns mov push push mov cmp push jge jno gs js cs (bad) jno test mov ret xor pop sub fistpl loopne addr16 push mov inc xor call lret popa and leave mov sbb outsl gs adc pushf and mov mov test adc pushf add cmp cli movsl ret xor xor mov pop or lea jae dec xor es pop arpl scas mov xor mov incl fdivrl lods xchg fild in jg incb aaa pop or dec adc movsb popa cwtl sbb or fcmovbe xor repz adc dec xor sub inc cmp push and fs ds mov nop and lds movsl mov out jle add movzwl push leave xchg push aas into mov cmp pop test imul mov adc xor dec pop mov jmp xchg (bad) cmc (bad) xor mov push cmpsb lea imul jecxz and ds cmpsl pop sti cmpsb scas sbb lahf out push and cld or pop cmp lods add fwait or or adc dec sub (bad) cmp jecxz fsts or sbb mov (bad) jecxz inc jp cwtl repnz in test xor sub mov arpl mov out mov insb and mov cmp dec cwtl mov ss inc jne push adc push adc es sbb push push jmp test mov xor dec inc pop push xorl jle pop xchg sbb sub cmp inc mov push popa fs repnz xor aad jecxz mov xchg movsb mov adc sbb fs xlat mov jmp sub in lahf add mov es and and mov dec gs out in leave ret cli add in (bad) cld sub or test mov push aam add or inc push (bad) xchg outsb adc inc inc xor push jle aam sbb data16 sbb stos lods xchg and cmp nop adc pop xchg dec pop pusha pushw ljmp pop mov xor fistp mov das sti outsb les fstps or test jg adc cmovp or (bad) (bad) xor sbb in sbb and xor push inc js fwait push add incl js or lea xor fsubrl and inc outsl imul (bad) and xor popf rcl roll (bad) test inc sub cmp sub (bad) call int3 loop push incb jbe dec mov and mov lds and sub fsubl xor jb stos jae xchg pop cli dec xchg sti sub dec mov mov or inc push (bad) mov jns dec aad dec add pop lret lahf cli xadd mov sti inc cwtl mov push out test adc mov aas aaa xor pop dec out jp jb jnp fwait (bad) sub or xlat shl out jecxz (bad) adc imul ds adc imul ss xor inc and jnp (bad) bound pushf jp inc mov lds popf pushf std mov insl push fsubl push and mov popf mov or into and call mov xchg mov sub mov leave stos dec bound xchg jg push push sbb jbe dec sub sarl (bad) lret scas cmp lods push ja pop cmp add pusha or mov jae pop push jmp sar fild mov cli cmpsl js push mov xor adc or std pushf xchg enter adc pop hlt (bad) scas orw jae lret mov or leave rcll mov bound (bad) mov aad decl loopne xor mov ss cmp dec mulb pop out int3 cmp dec adc fiadd inc (bad) sbb xchg jns pushf pushf cmpsl xor les and adc imul mov push dec cmp and inc bound mov std gs xchg mov (bad) and mov out call inc xchg xchg int fbld and mov (bad) push dec dec outsl insb std mov mov mov out (bad) fdiv or mov inc movsb mov jno add lods dec scas mov mov jg sbb (bad) in sub int3 cmc sbb xlat adc mov loope push sbb scas stos fildl shlb sahf loopne sbb jg imul or movsb xchg push rclb or or xchg pop movaps mov push sti xchg adc les mov adc enter fstl cwtl and dec push dec cmp mov cmp bound and repz jg cs inc xchg push jp add mov add divb mov mov and das xchg adc mov pop pop mov test and in iret pop mov and inc xchg lds aad scas push adc sahf push pop cld bound sbb mov (bad) mov movsb popf inc je scas addb jge mulb xchg jge test cwtl mov daa ja rclb push iret adc js jnp into leave fs stc fildl xchg ret test cs dec sub mov xchg xor push add insb ss (bad) sti mov push add sub inc rcrb iret push cmp inc lret mov popf insb jg pop outsl inc sbb aam roll cmp jle ljmp cld repnz repz loopne iret bound push add mov xor mov ds imul adc pop cwtl xor and insl inc mulb pop mov out pop mov inc xor and sbb stc mov outsb add lea into add out imul push aas mov jle adc mov sub mov nop cmp scas icebp nopl nop lret adc data16 test sbb inc xor pop jne sub dec ljmp and cwtl das outsb mov pop push bound push les add inc mov sbb add gs dec (bad) sub ficom adc cmpl lods mov adc and out push push pop mov (bad) jl xchg popa and or and rcrb and adc pop add lods cmp sub dec lea enter int3 lods inc imul mov pushf aad out lods xor dec sbb or mov inc lods xchg push inc push movsb xchg js pop mov jb addl out adc in sub jns jns gs or pop sti ret cmpl push shl adc mov mov js out cmp in jp cmp and cmp cmp outsb std dec adc adc shl xchg adc stos mov push push sarb (bad) xor enter ja scas xchg int3 int pop aad out cmp sbb leave inc lock call lret xchg orl pop sti sbbl test ret ficomp movsl push mov push repz sub or inc push sub and dec loop inc cld inc and lods cmp sbb pop movb adc inc idivb movsl ds mov dec sub shlb pop inc imul (bad) fildl or jb and loop hlt cmpsl inc stos add icebp sub pusha popl or out out arpl xchg shl adcl insl jae cmp xchg mov jb and js adc stos adc pop lods into add sbb xor mov cmpsb stc aas inc sub arpl call mov popf dec sbb test les xchg push pop adc out mulb jns xor and cmp ror push push adc rorb repz gs fnstenv scas in cltd aad idivl pop enter push dec fadds push jle or loop pusha push push stos pop in sbb pushf sbb loop js out movsl fidivrl jle xor and je lcall nop mov ret aad mov xchg in js xchg in push mov mov xchg ljmp js mov test add addr16 stos mov jne xchg add dec repnz aas pop pop push dec adc add dec xchg cmp adc enter cltd ljmp sti int3 mov addr16 int3 pop jno xor sbb and ja (bad) lret dec adcl xchg inc jno pop sub dec pushf mov add mov es test dec ljmp lods dec jg aam aaa test je and xchg movsl sbb push mov mov test sti fistp jle pushf mov sbb push pop out xchg call add push xor jg lods push mov addr16 jne nop xchg lea sub push insl add dec pop adc jge insl inc into fldl mov xchg mov std call data16 adc fldenv jmp test fwait imull xchg dec lods mov in sahf xor adc movsb outsl xchg add jmp mov repnz test scas stc xlat lret jne int std xor inc xchg pusha pop lods mov addl mov mov outsb call (bad) sub sti xchg cs enter sbb push ret sbb dec push test out lahf jae mov sub arpl mov mov adc repnz insl dec fiaddl and jnp push bound (bad) shrl daa adcb jg rcll xor cmp xchg fldenv subl sub insl cld cs insl jb dec fs ficompl bound push sub sbb stc and (bad) inc cld in jb jl ss decl mov rclb cld push data16 jnp sbb scas push xor dec (bad) mov or jecxz push dec add roll dec loop jecxz and and dec add dec push ja fsubs or dec test add add call pop lret mov add cmp mov mov fist std ljmp push cmpsb cmpsb test (bad) in lods pop imul xchg xor das xchg push loope xchg in inc push push pop sub xor nop aaa sbb inc cmp mov mov aam rcl ds lret sti pop scas xor divl add movsb lcall pop push sub outsl and ret or push sub aad fmuls cmc addr16 mov sub jo sub pop dec dec adc rolb inc pop ds cmp mov mov insl jnp pusha rorl hlt cmp sbb sub inc in or or (bad) fdivs lcall pusha mov shll adc or push pop pop dec les in push jl push mov fsubl mov pop (bad) mov movsb test addr16 mov outsl ss daa inc dec dec insl cmpsb addr16 push iret sbb jle or xchg (bad) push cwtl xchg mov cmp fistl loopne xor cmp subl inc mov ja ds sub and add or les rcrb aam push lcall and rcrl stos sbb fimull pop std sbb xchg scas rorb dec mov jl jle pushf jmp (bad) cmpsl fstps loope xchg mov (bad) pop cld icebp jl mov pop out pop je inc arpl loop outsl ljmp mov and insb (bad) jl inc mov lret adc xor fmuls jg sub arpl inc notb (bad) or and and test pushl call es dec outsb sbb dec nop addl call in xchg inc xor dec addl jge jl pop add xor js cmp mov xor iret inc lods xor cwtl xchg cmp scas (bad) cs mov jns sub xor lds pusha dec ljmp jo pushf push (bad) daa xor std fiadd and add (bad) push mov aam (bad) out inc adc fstps (bad) lds mov push dec (bad) lcall imul pop or js inc je add sub jne dec pop popa imul xchg sub sbb jp (bad) push dec inc inc jmp js pop in test test dec dec jge jbe sub js dec repnz daa dec xchg pop and addr16 lcall pusha out mov cmp out sub push xor pop push jo cmp xchg xor icebp or inc es movsb mov ret test dec add and aam ffree aam push mov inc adc xchg inc xor in jmp and xchg xchg inc mov lods les sub int3 sbb sub and adc xor cmp sbb inc movsb adc stos inc cld dec scas inc das push mov xor push cmp push cmp (bad) les inc gs pop dec imul adc shrl jne insl push js jno jl adc loope bound call subl mov xchg hlt adc mov sti xchg fcompl xchg sbb xor xchg push cmc jbe mov lods repz push loopne loopne imul orb adc sub jns imul test xchg mov das jnp outsl bound push mov push mov les push ds xor lods aam xor jae xchg aad pop cmp mov mov sbb xchg int jo daa (bad) (bad) dec dec in gs pop and das xchg mov xchg mov je std arpl adc pop push inc mov and xchg dec pop lea test aad aad loopne sbb sbb jl call mov pop dec test mov dec add int push jmp lea mov mov jge mulb push (bad) repnz and stos sub lret sub and lods repnz sbb pop loop popa jg cmpsl push insb mov andl in mov inc mov cmc bound push add mov popa jo push mov jbe cld mov add (bad) and lahf test (bad) mov push and push pop push mov test push loopne fldcw sbb mov outsl and mov dec mov gs pop and aaa jno out adc xorl out xchg pmaddwd sbbl pop test loope insb cmc mov pusha int3 repnz clc xchg pop je scas fwait pop test inc mov mov mov inc cmc int dec repz cmp dec in or sbb outsl std push int3 notb xor and (bad) movsl mov pop (bad) mov jmp ljmp add les out imul jnp in dec push jge gs and fstpt xlat mov and lds adc imul adc or int3 xchg and dec orb xchg (bad) je sub fnstsw jecxz iret outsb mov (bad) inc sub jae lods adc jo mov add loope or pop fsubl sbb insb mov and int push and es inc mov inc or aaa lea cmp lret sub pusha sahf jae dec cmc pushf cmp divb sbb mull lcall lods cmp xchg xchg push adc in push clc int pop aas and bound leave sub cli cmp insl movsb sbb dec jg jl in mov imul mov mov pop sbb push jne gs insb sbb push jno jmp jo sbb mov xor add pop add or mov fwait push mov adc mov and or jg add xor cmp (bad) xor and lea out pop (bad) and dec xor and je (bad) xor out dec loopne jns popa pop test push sbb cmc xorl mov sbb push jge push cmc xchg fs icebp cwtl xchg sbb or xchg shll mov subb sbb notb dec nop mov jge pop jns loope sbb mov sub adc js dec in out (bad) les outsb push jl or out test xor je dec mov push sub inc cmp enter ret sbb cmpsl test and mov sbb sub mov pop and mov or pop aad xor ret and mov pop cld jmp mov xor sar imul sub pop ja xor fmuls xlat (bad) pop jnp jp mov pop xor (bad) or jae add cwtl jmp add add inc xor adc push jp negb sub fildl popf jg std xor insl sahf enter sti lahf cmp adc push outsb jle mov ja dec push mov mov les (bad) cmp rcr sbb mov loope push (bad) cmc std dec push sbb xchg cld sahf add xchg lahf mov jge nop mov stos xchg mov adc mov and cmpsb sbb mov lods into jge mov xor mov aaa adc fdivrl aad fiadd ret fadd sbb (bad) ljmp (bad) icebp push ljmp pop icebp (bad) pop cmc cld (bad) popa clc loop data16 out push add push jle icebp adc adc jnp cld or mov in aaa gs lds xchg cmpsb (bad) jbe stc ss cmpsl jl cs popa xchg in and jmp pusha pop hlt data16 lock outsb imul loope gs push jecxz cmpsb mov das dec or cmp out int dec xchg shlb ds pop insb jg mov xlat xchg mov push dec rclb mov test imul fildl xchg sbb mov or (bad) cld jle xchg sbb mov dec sbbl arpl movsb (bad) cmp mov push mov sbb jns pop test fadds xor test jae out pushf cmp (bad) add in jg pop push ljmp push cmp mov out or fs bound (bad) push mov ret cmp mov push outsb idivb push xor cld pop pop rorl jl sahf int3 cmp movsb pop pop je fs out js mov das dec pop pop faddl jb loopne jno aam jne jmp hlt xchg es xchg mov inc fnsave mov fist push insb pop ja mov orb hlt adc aad jns and cmp arpl jbe xor add scas fstpt fcoml adc insb push mov lds xchg outsb pop je mov lods popf imull cmp stos xor enter les mov mov inc clc (bad) pop jne aaa add inc bound cmc inc mov test xor clc mov fnstsw sbb out aad jmp insb cmp pop cmpsl dec mov adc mov leave pusha fdivp pop pop push jbe das movsb jb in outsb cmp xchg insb or (bad) and stos sbb popa jp,pt std mov imulb jae mov sub adc push repz or jge jecxz or cltd and pusha scas push pop lock dec xchg inc add inc sbb add push jp mov jp mov dec adc and cmpsl arpl pop add mov aaa cmpsl das gs pop dec ljmp lret xchg xchg push in dec inc enter sub fwait ja xor mov sub enter jle and mov xchg das sahf and xor out gs pop sub aaa sbb pop sub ret mov cmp movsl dec xchg hlt mov orb fs push nop test xchg push xchg mov pop pusha sub stos pop push sub push pop jp shll lods test xor xor and and cmp adc or adc add movsl gs fsubrs dec fild fadd iret (bad) int3 lahf mov mov jmp movsb adc jne lea xchg inc mov pushf push cs or pop fldl inc pushf pushf cs movsb pop ds pop les fstps lods mov fsubl mov pop sub xchg test mov and add pop insl je es pop sbb and shrb mov into outsl dec mov mov mov push (bad) push hlt fcmovu pushf jle mov adc sub sbb in mov inc int loop lcall mov shrb or push jo es push fcomps or xor test jns dec or inc and mov push sahf inc add mov pop cmpsb mov pop jmp ja sub shll push xlat jbe dec mov jmp popa jbe mov mov call stos pusha js xor inc popf jge cli cmp std rcll dec cmpsb js (bad) adc lock adc dec imul sub test sbb mov xor jae shlb dec loop cmp faddl mov lods mov dec push sub adc ds and add or aas movsl cmp scas and imul adc subl dec out pop sbb cmp cmp ficomp push out sti out call stos inc jno cmc repz cmp pop outsl jo pop inc sbb daa adcb push mov lods jns scas test ljmp mov adc outsl in ds (bad) mov out (bad) rcrl (bad) shll cmp (bad) xchg push ret outsl jno enter cmc bound ja xchg popf outsl addl xchg jle,pn (bad) xchg mov aaa aaa pop out loop mov push and mov (bad) dec xor adc fnstsw xchg and xchg cmp in jecxz lds imul pop test popa xchg pop mov cmp or arpl mov sub sti inc ljmp scas mov aaa dec (bad) and pop stos (bad) orb ja clc enter mov push mov outsb push cmpsl pop data16 (bad) (bad) pop popf mov loop xor sbb push xchg inc push sub stc or jl xorl ds lods push or sti aas and sbbl aaa (bad) sub scas fistpll add stc cmpsl das ljmp and pop loopne push test sbb movsb pop je cmp dec pause and lcall mov or mov (bad) sbb aad lea lcall fildll dec mov inc mov sbb pusha and mov xchg xchg push stos and popf je and pop mov mulb movsb xchg outsl jge movsb inc fs out popl dec and inc rolb fild inc jg dec dec mov push mov dec xor adc xor and xchg jne fistpll add aas pop mov stos mov (bad) xchg out popa (bad) lea and clc dec adc mov and fdivrl jo in and push (bad) xchg and mov ret imul les out add inc lea jmp jae xor inc add in xor fiadd es jbe mov imulb das mov fs and lds sbb (bad) jnp add push or int or loop das jl xor repnz hlt ljmp pusha ss sbb pop add and lds leave movsl stos inc idivb pusha addb mov lret repnz adc pushl or aam ret adc outsl aaa sbb pop shlb jno in push (bad) dec cs lock dec ss jb jp inc mov dec lds ja test or push js (bad) jbe xorl ss lea dec (bad) cmpsl push inc dec sbb insl popf gs shlb push js scas mov xchg xor and test mov in lea test sarl arpl inc data16 sub jno push or jb xchg jbe sbb inc nop fildl add lds fs addr16 push pop push xchg push inc adc dec jmp add lret sbb andl and hlt push movsl mov dec vmwrite sarb push pop dec mov or sbb lret leave lock loopne insl inc push xchg rcrb shlb jo lock icebp gs mov cmp rcr xor sub ljmp xchg mov adc lret adc sbb mov imul shl dec dec test mov sahf fs xchg and mov loop sbb sub push and cmpsl imul test test xchg push outsb in mov push aas sub mov inc cmp fisttpll xchg cmp (bad) push jne pop dec (bad) xor inc inc add inc inc (bad) jmp inc xchg and cmp sub cmp pusha xor lret dec add push call dec cmp mov add dec fmul mov mov (bad) xor roll dec and pusha dec test dec in pop dec inc addr16 pop push cmp scas test and test ret adc daa inc out enter into sbb imul mov pusha ljmp movsb adc out test push jle sub jne xor ljmp inc xor pop insb testb imul fsts mov or mov and pop cmpsb and movsl sbb cmp cmp push js push pop int inc mov stc stos lods repnz inc call sahf adc push xlat out sub testb data16 xchg popf out test insl dec push ljmp jb daa (bad) (bad) leave adc xchg sbb ss push adc mov aad pushf xor mov xor mov or (bad) popf lea rcrl dec xor cmp jl and test shl loopne aad dec sub popf push loope cmp mov leave bound mov shll push cmp add roll fstpl xchg sub (bad) cmp and icebp cmp cmp and dec les dec outsb push mov sbb imul push aaa jae daa and pop (bad) cmp mov arpl call and popa pusha out push push adc mov pusha lods stos scas sahf fstps dec push jb jo dec inc jae pmaxub cmp outsl xor iret dec dec je add movsb rolb (bad) adc lea addr16 sbb ljmp vshufps int3 jmp pop repz or sub jg add mov sbb cmp mov dec and push divb in mov inc or and add xlat hlt xchg roll adc jle sub sbb mov test inc ret mov cmp inc iret push ljmp jo or adc inc and adc jne and aas (bad) testl xchg fildl or jns jb stos mov das scas and adc imul in adcl cld subl push jno mov xchg test ja loope (bad) (bad) loop sbb fild push daa outsl aaa or bound in mov mov (bad) push lods loope test mov les jno,pn push jns sahf rorb sub (bad) lock imul jp sub inc nop rolb call cmp inc orl cltd sbb mov test or jno or imul inc pop push fldenv add or jns pop call push in lcall mov pop ds jns inc jno out (bad) mov adc imul dec mov push sub inc call out dec mov and addr16 jle test pop jb push jnp mov cmp mov jmp mov sbb pop sbb fwait adc popa mov pop ja cwtl sbbb jbe jp push xor lock in addb rolb pop xchg inc and lret lods ljmp or sbb mov pop dec (bad) mov cltd dec pop scas jno sub push pop ljmp fisttpl fsubl pop sbb mov dec add std xor fild lcall gs fidiv mov rolb bound (bad) cmp push (bad) in mov pop add repz (bad) inc iret arpl in (bad) aas in repnz jl (bad) js inc xor inc pop in inc dec daa fcmovnbe loope mov xchg in xor push push adc and adc (bad) adc pop pop jne add in inc jl sub dec push jbe cmp fnstsw dec xchg in pop stc subl sbb jb js cltd jno fisubrl and fidivl xor nop ljmp push (bad) xchg fs dec mov pop aad xor fcmovu mov outsl insb xchg inc xlat pop jno pop xor (bad) movsl sub pop sub daa adc mov cmp pop xchg inc mov mov push xchg dec sub sbb mov repz outsl into mov ja in sbb mov pop xchg mov or mov cmp and movsb sub or xor sahf inc cmp pop popa or scas or insl dec or enter das inc and (bad) sub adc lahf inc insb xor push pop or scas popa or shrb sub xor sbbl (bad) xor cwtl sub ret fwait sbb xor and imulb adc mov dec pop fdiv push xor jle test sbb nop push dec dec push sahf xchg sub jo (bad) xor popf and mov or clc inc add mov cltd sbb mov sub push sub push mov mov inc mov test or repz mov pop sub xchg popa inc cmpsb cltd mov cwtl aam in push mov mov std fwait mov es or mulb fs lret jbe scas add mov mov push xacquire push lret adc in pop arpl mov sti push xchg repnz sbb bound popf scas jbe adc sub lcall pushf push scas scas pop adc (bad) mov adc add inc mov mov les and sbb xor in xor loope xor jmp dec push stc ja push inc (bad) mov movsb cmc dec xor push scas xchg scas push leave cltd incl xchg fadd pop adc xchg adcl add sarb adc bound sti inc push push mov mov and sub and push (bad) xor dec mov jnp mov sbb icebp je popl stos cmp popf xor cmp mov add cltd adc pop cmpsl sub pusha add push push test daa dec insl movsb (bad) push addl inc push xchg imul jp lock outsb cld loop insl or outsl (bad) (bad) fist jno cmp inc push std and sub jge mov and test and out or sub push je fsubrs sbb mov adc pop test adc outsb lods jle outsl lods addl clc xor pop test xor sub lods mov dec aaa push mov add mov sub mov xchg iret out fiadd and repnz lock cmp jmp jae out ja mov aaa dec and add dec lret mov mov jae into sbb out sbb mov fwait add mov pop aas cld pop sub xchg cltd xor push xor pushf subl rcr jp adc pop repnz dec jo and xchg insl mov cmp pop mov lods clc xchg stos jmp mov imul enter jmp cmp mov jns jno (bad) ss or arpl pushf add popf addr16 out xchg xor leave lock lret popa lret popa push repz lahf and adc lock jg pop add jae xchg mov cmpsl jnp sahf sbb out and outsb lret sbb inc jmp outsb test sbb in push mov ja lds bound lret pop inc popa loop nop cli xchg inc jg pop iret enter jp movsl push loop addl int3 inc cltd aad nop mov sub and into nop jp xlat dec xor xchg or jl xlat dec inc (bad) lock lahf ja bound sub test xchg dec cwtl fwait xor jmp mov and into xor adc lret push push call xorb movsl xchg arpl push (bad) mov test sub xchg or xlat sbb jp xchg bound sub mov sahf fcoms push mov jmp push jmp jecxz jns ds pop (bad) mov (bad) mov (bad) push mov stos cmpsb jle movsb mov jmp test add ljmp push push sub mov sbb movsl ss dec aad in into test inc xor lret mov daa mov fidiv sbb push xchg adcl scas lret and xchg xchg mov push subb (bad) ljmpw sti js mov xchg dec cmp mov shrl push mov cmp push testb clc aaa and jae mov arpl outsb ret push push mov pop push jnp adc push mov loope ret loop xchg mov inc (bad) js mov jg mov cmp cmp cmp cmpsl outsl aas cwtl aam in push mov pusha emms xchg loopne dec dec lahf sbb lret mov jno popa aaa lret dec mov gs stos mov jnp out inc xchg (bad) dec cmp inc adc scas stc repnz popa sahf mov shrd mov sub in pushf dec and pop sub hlt push jp lret inc and shl dec daa movb dec inc mov stos cwtl test (bad) add dec add xor out js sbb js aad xor lea lods arpl push jno in sub aam daa add dec pop pop (bad) mov mov jge out sbb sahf ret dec std (bad) xor push mov inc sub subb mov aas jg dec fs jnp leave inc xchg jmp das push icebp mov adc lcall js pop test ds cmpsl mov jp sub mov xlat xchg sahf jle (bad) repz jle mov orl les dec add jo and push jle bound pop pop dec push lods adc (bad) and pop data16 pop jno test (bad) repnz out jge ja rorb test cmp jo rcr inc pand dec lods lods int3 icebp in popf insb mov cld add (bad) leave outsl hlt xchg pop cmp dec in mov and ret sub xor daa push popa iret push in jo loope push enter and push add int3 data16 aam pusha mov fidivr cs push and aaa ljmp pop addr16 xchg mov scas outsl jecxz daa nop out insl outsl ret mov (bad) (bad) xchg (bad) jp sarb push enter dec leave (bad) int3 inc pop mov sbb lahf cmp (bad) mov jmp cmp (bad) xchg pop std mull insl cmp adc (bad) lock insl cmp ja (bad) stos adc mov mov and imul mov imull mov sbb sbb xchg add mov dec mov call fild popa stos roll cmpsb add lds adc std xor xor test shrl loopne push int dec loop lds xchg les pop xchg push mov aad xchg push pop sub and pop (bad) call inc and shll and repz dec mov imul cmp mov int3 lret out and sbb fsubrs adc adc cmp test fcmovbe dec cmp (bad) cmp adc adc xor pop xchg mov adc and push out arpl mov pop out pop in jo ffree pop mov push dec xchg adc outsl xor ja out test in hlt xchg push (bad) mov xor push push inc bound (bad) insb roll in lock adc sarl pop and xchg cmp loope and imul popa test std mov sub and add lods xchg mov mov mov cmpsb frstor lods xchg stc dec mov xchg mov jns pop pop mov popa inc adc push jp pop mov adc and sub sub sub repnz arpl sub outsb leave xlat rcr sbb inc rorb push pop test adc stos movsl xchg out insb inc push and push sbb fildl dec enter inc repnz mov lret dec in bound pop pop subl daa scas pop mov pusha orl push xchg test push popa mov lock rdtsc loopne or es test pop inc jne adcl fisubrl out iret mov push push int3 (bad) inc daa (bad) pop stos inc jbe leave push adc shrl inc jnp setl jl lods call dec pop ds xor fnstsw jecxz and pop ja jp lds jns aas rol xchg fnstenv gs (bad) mov out sahf das outsb push mov sbb lea mov xchg adc jae xor bound int adc add push movb sub adc mov mov scas lret rolb or or ret sbb and in dec das cmp mov dec dec sti pop mov in xchg sbb cltd bound mov dec jne outsl lret adc dec mov adc lcall inc dec xchg daa call aas fnstenv mov cwtl lds inc out jno add push bound or mov out mov sub ss inc shll mov dec mov jo jmp jnp pop aam dec test gs lret dec rorl push push out sbb lret lds out inc cmpsl sahf rorb aaa mov cmp cwtl ss xchg pop cs movsl sti xor cli loope cmp iret cmc mov cmp jmp xor cmp xor xchg idivl or mov adc pop outsl mov mov addr16 cs daa aas mov gs sub mov push or xor inc mov mov dec popa leave in inc test push push scas icebp sbb popf cmpsb push call addr16 mov js fildll inc (bad) sbb test imul pop cmc sub out pop cwtl sbb rorl cmp mov push dec mov sbb xor push es adc and dec (bad) sbb out mov jbe dec in movsl fcmovnb jo pusha pusha dec mov dec mov mov roll rolb mov sub dec iret lds out push sbb xlat xorl das pop test cltd pop cmpl (bad) mov out js lahf cmp out in xchg mov popa sbb (bad) loope loope push je mov or xchg bound inc nop (bad) cmp leave fisubr ret adc int lcall pop jp xchg rclb and pop arpl (bad) out inc dec into popf cmp and int xor fs xor (bad) xchg test pusha outsl pop mov les shrb daa and sub jne mov sbb mov add pop xchg xor mov repz flds das test test popa lret push ja cmpsl add xor pop gs inc (bad) out inc xchg stc jbe in hlt loopne lret clc shl addr16 jecxz lcall jnp in jmp push cmp xchg sub cmp pop mov rcrl jno sub jne imul cltd popf subb out push int3 punpckhwd in xchg mov dec das inc and dec stc adc les lock es cmp fsubrp imul xchg cmpsl lock mov dec lret dec or sub es ret test inc mov push push fs add lock ds fs dec push xor xchg je ja jae pop cmpsb xor and insl sbb (bad) fs push cmp add or xor out cwtl adc scas push pusha mov (bad) pop xor xchg mov jno sub outsb repz and cmpsb js rclb stos dec mov push cmp in cld mov or push jbe mov sub xchg insl cs sti sbb push imul jne mov sahf scas enter mov jne bound cmp sbb mov mov push mov inc cmpsb cwtl xor push push cmp lds push add loopne xchg movsl dec arpl shl int3 sub xor in into bound bound mov inc dec imul lret inc xchg pop loope xchg pop xor xchg pop dec lret xor xchg inc adc sub lds pop cmp pop in dec sub insb (bad) cmpxchg inc hlt shl dec int jnp lea mov cmp jge push mov jne insl push jnp imul sub sbb xor xlat mov gs jmp decb cwtl test popf addr16 pop fld dec or cmc dec mov (bad) gs hlt stos cmp add mov xor push dec cmpsl fs pop inc lret pop (bad) mov loopne popf lea inc pop sub inc inc test xor arpl mov xchg lds add pop movb in es (bad) popa jne ljmp movsb shlb inc push cli xor pusha pushf sbb cmpsb jbe lret push mov imul sub mov fs repnz pop mov sub mov dec outsb fdivrs iret outsb mov mov in scas arpl xchg mov mov lds test pop xchg idiv test mov imul cwtl sub xor dec push movsl cmp inc test adc jb test (bad) cli iret sbb jne leave mov jae push data16 push (bad) ljmp mov outsl xor cs jb jo (bad) ljmp xchg jmp mov add push xor aas inc imul jnp out test enter sbb xor dec jnp inc jp cltd aaa xchg aad push cmp inc pusha jne lods test cli mov fiadd and pop in cmp dec adc adc enter xchg pop xchg stos addr16 dec sub lcall dec cwtl (bad) cli pop in xchg cmc inc (bad) jmp pop add xor xor xchg test pop xchg cmp roll data16 outsb mov cmp sub pusha and sbb sub dec aaa loopne test inc dec sbb adc mov push lock popa jbe rolb lea insb adc outsl out int3 xor imulb (bad) xchg test jo jmp jo mov mov icebp dec dec lea js (bad) mov ficoml test adc arpl mov addr16 lret test in popf lret inc mov enter xchg and dec adc or adc add adc push adc and inc dec or mov shufps mov and xchg and push stos xchg pop inc test rolb inc es jo mov mov xor mov pop cmc rclb (bad) (bad) mov aas shlb mov aas mov add daa mov mov ss inc or push cmp ljmp cs cli pusha movsb leave adc lahf cmp inc push xor xor outsl push adc push ss ret cmp pop jns push sub arpl mov out (bad) popf inc out test into push cwtl inc test lods cli pop inc call call (bad) jo push dec lret fisttpll cmpsb out clc push rolb fstps push push mov int mov loop nop adc xchg shll pop dec loope cmp in fsubl lock jmp and lds inc sub nop mov push cmp out das outsl int3 xor xorb pop das sbb lock pop lea mov es xchg jge mov fwait cmp lret mov adc xchg addr16 data16 fildll or push leave xchg jae xchg mov das mov xor inc mov scas add jae lret sbb daa shll pusha inc xchg push dec mov and cltd dec dec sbb jb adc mov mov and pop loopne shrb mov push fstps (bad) sbb pop leave and xor sub and fdiv push (bad) adc out sub push mov repnz ret lods xchg dec xchg call sub gs in outsb enter mulb imul loopne dec add sub mov push dec add pop pop scas dec push dec xor outsb inc leave daa xchg jno pop into xchg icebp fs jmp in add mov repz jbe mov xor int3 iret fadds imul sub fcoms inc push sbb xchg xor rorb pusha pusha cmp cld xchg push sub pop (bad) data16 popa subb loopne push sub mov fadd cld pusha and xchg in pop dec (bad) dec ja imul cmp aas sarb jecxz std das push repnz ret stos push mov jmp test test in dec mov fisttp sbb adc (bad) xor dec fwait ret nop stos js test and sarl jg dec and repz call fcoms popf das test cmp cs dec pop sbb pop push cmp dec das xor mov xchg mov data16 jae xor movsl xchg repz in dec dec mov cmp addr16 lock mov jne pop sub nop mov adc xor add fwait mov call inc xchg pop or in cmpsb dec enter xchg inc sahf aaa seto cmp (bad) push add (bad) inc imul inc cltd ja mov xchg fiadd das pcmpgtw lret inc cmp pop rorb in mov push jecxz add inc enter pushf inc ret inc into xchg dec push inc out xchg nop sub inc out cmp je icebp outsl and pop push mov dec inc cwtl sti mov int3 gs dec fwait bound pop bound js flds inc mov jmp sub mov dec jo fimull movsl sub stos pop nop lods sbb jnp xchg cmp test and insl movsl (bad) adc sub push mov imul test lret in pop (bad) mov mov fstp pop bound arpl jmp sub (bad) mov and xlat mov dec ret and (bad) push dec insb stos push dec dec pop pop mov adc pop mov jno push clc pop add pusha lahf and sbb inc and popa pop out lds js loope jne jno and push enter mov cmpsl sbb cmpsb jge mov cmp jno iret add in (bad) cmpsb jecxz sbb and in outsl mov mov pop lret pop jbe call add cmp scas pop outsl pop adc stos cmc arpl inc xchg int3 outsb ljmp fld (bad) jo imul xor jbe lcall es mov (bad) sti inc pop clc fwait test sbb dec cwtl in (bad) sbb push jns mov xchg mov pop pop lods (bad) out cmp push or mov add fwait xchg ud1 js,pt mov arpl aaa mov arpl mov inc jecxz add push sbb sbb jbe pop outsb pop lret dec sbb or push ret cmp (bad) push and xlat ja stos inc in (bad) bound mov aas jno sbb inc xchg aam movsb dec rorl movb andl lock test mov outsb pop or std xlat mov (bad) and mov in dec les in add or imul lods inc dec shlb test ja imul frstor data16 test loope call (bad) icebp lret sarb call sub inc and mov mov test popf mov adc mov sbb add dec leave mov jbe iret cwtl jo mov mov inc jecxz add inc in xor pop decb push xor dec adc ja cs xchg das or in cltd mov bound xor rcrb jae pusha cld movsb int mov mov adc mov das sub loope enter stc insl lock lahf dec cs aas mov inc stos pop lods rolb mov and gs mov or jbe inc scas das ds mov jo addl loope dec lods outsl insb jp add in test sahf sub bound inc lock sub mov push xchg pop mov sarl test dec fdivrl int lea cmpsb dec dec popa pop (bad) into pop inc cmp leave fwait aaa daa pop xchg cld fcmovb ljmp (bad) fadds aaa ja add stos push mov or jb or pop outsb push mov push lods or sub pop push xor mov xor lods cmp and push lret cmpsb lods fs fcompl gs dec jns pop int3 lods out cmpsl out pop (bad) add xchg push sub xor mov mov push pop rorb and mov mov std fcoms inc pusha cli inc lds and insl mov inc les lea xchg or icebp rolb mov je mov shlb inc popf push sub jno (bad) and pop mov xchg fsubr mov lods add jo ficomp ficoml cwtl dec mov add daa sbb (bad) out nop push les pusha mov pop add dec xor popa xor inc add mov sbb out mov mov iret mov fmull xor sub push pop sbb and mov mov and pop imul mov cmpsl data16 js testl repz add (bad) je mov shlb and aam xor js loopne add add inc jg aas push in out xor bound or jl jle mov add xchg adc lahf sbb in ja fcoms adc mov sub fistl lea pop xchg jbe adc iret call mov lcall push adc addr16 mov mov outsl shl aam xchg movsl pop jno out sbb xor jno jle jb arpl cmp pop in jmp jecxz xor mov xor sarb mov sbb aas xchg outsb or mov inc push mov lods (bad) hlt mov xchg xor les push jb es fwait mov push xor push mov aad mov dec arpl cltd popf or (bad) lret adc ror test daa or cmp pusha xchg adc xlat test jp sbb imul stos sbb add outsb add cltd (bad) sbb add pop dec cmp cmp inc mov xor popa fldcw adc das sub popf fidiv test sti mov repnz inc scas js ljmp adc adc (bad) push pop push cs dec or outsb mov cmp cmp imul pop sbbl xchg xor lcall xchg or rolb out dec stos adc rclb xchg and mov xchg rolb add xchg jno push rclb mov fiaddl loope notl sbb pop push rclb fsts in jle pop lcall push dec mov mov popf popf sbb push (bad) int sbb add pop dec gs outsb sbb daa loopne aad stc fs and add pop inc jo lea xrelease clc pop (bad) shrb dec inc ficoml xchg mov sub iret mov jo rcrl mov frstor roll add loopne pop outsb push jno xor ss cmp lcall lea jle mov cltd js sbb xor loop lock int xor lret cli xchg cmp out das sub cld push sbb lea add cmp lds das inc insb and js inc jle pop mov or jmp lret nop mov inc ret and inc rcl xchg mov jmp movsl jae cmp sub mov xlat jg incb push jns pop shr (bad) adc adc cmp fucomip sbb shlb xchg dec mov jne mov outsb (bad) dec dec and insl fldcw inc lods aas jp dec cmp adc iret adc cmp popa dec jnp addr16 insb mull pop outsb pop dec bound or test arpl nop fiadd sarb in push xor les pop rcll pushf andl mov fistp push cmpsb add pop sbb mov cmp in fmull fldenv (bad) out xlat sbb aas mov adc xchg orb adc cmp and xor pop dec xchg jle cmp or or mov inc leave mov pop fs icebp xchg xchg adc sbb and and pop add push xchg cld out and adc add sub pushf mov (bad) xor sub data16 or test int push pop jl cmp xchg popf and pusha pop fistpll cmp dec rcrl jae jnp aam jno mov ja hlt pop les pop into mov or push xchg (bad) divl ss xchg inc xor cmp out pop je push or xchg push pop add mov cwtl and test push mov push cmp cmp cmp js (bad) sub lcall inc cmc test in add sub mov and mov jp cwtl hlt icebp divl or stos aas rcr pop test or bound jp test sbb aam ds push (bad) cmc and xor pop cmp pop and cmp and cmp add mov adc cmpb les repnz jle or xchg or mov push out mov dec les and stos mov insb (bad) shlb bound jmp outsb scas cmp sub adc jecxz addr16 mov cmc xor je mov pusha jns insb pusha push (bad) out cwtl inc jle repnz mov in lcall xor xchg mov pushf fisttp lods cwtl push sbb jg outsb jle out sarl sbb shrl sub mov mov ja cltd (bad) (bad) testl sbb xchg jo into or into loop outsl adc icebp pop insl xchg imul pusha cmp orl sahf xor adc test rcrb stc inc fcompl dec dec in xchg sbb mov sbb mov mov pop jns cmp std jns jge aam mulb loopne aas (bad) adc pop test mov fisubl mov bound mov push mov add jnp jge dec add iret hlt pop repz scas gs fadd in pop inc and dec lds inc fdivrl pushf mov xor test and cwtl push orl mov jae js imul and inc pusha mov aaa and scas inc adc pop add (bad) push hlt mov xlat push int3 (bad) mov imul nop and stc aaa jo jmp push cmp push and pop fsubrl inc roll (bad) lds inc pushf jmp scas sub (bad) dec lea sub jno es mov mov popf add (bad) int dec lea test arpl idivl xchg mov cmpsb dec fs adc lds mov out push dec and pushf adc (bad) aaa or add and pop add daa outsl sub dec aad xchg xor adc xor push mov cmp push adc out sbb scas jae mov jg xor pushf sbb in aaa sbb mov jl xor arpl cmp fs movsb push inc (bad) mov inc push mov mov ljmp adc in jo pop mov imul cmp sbb inc test push adc mov mov std repnz cmpsb adc ret jge loop cmp adc mov xchg cmp mov in sbb rcr jmp call daa pop int3 loope pop cmp mov push aaa mov stos push das shll inc std pop or in push push test and fldenv sbb (bad) xor test sub pop lds lea sub dec mov fs movsb adc xchg push or push sbb aas mov push and incl sbb inc push add enter bswap sti mov dec and dec insl add xor ds jo or insb rcll jne inc cs dec dec movsl pop adc xchg push insl roll les mov or and and pusha sub mov dec dec insb cwtl push add scas (bad) pop cmp leave imul sbb fildl mov mulb movsl cwtl sub ret and nop cwtl (bad) fwait adc mov fildl sbb or aam push popa hlt cmp add leave inc push cltd test pop sbb bound mov test pop mov mov mov adc push push stos mov mov cs rol dec and gs mov in frndint sti or jl (bad) int sbb push mov push andb cld pop mov testl jge loop pusha fucomip inc lods adc sub mov (bad) inc or out xchg je frstor test popa loop cld loop and cmp pop or pop jno add jb jge dec je mull push xor mov jns fsub adc mov scas xlat adc insl mov (bad) adc sbb insl loopne jge pop movsl jbe arpl adc hlt shld sahf in lock jge lds iret sbb negl fistpll and negl push push repz and push sbb dec fldt stos push mov out adcl jecxz aas add aaa mov cmp xor sub mov dec mov clc (bad) mov jmp stc sbb je sub jbe cld addr16 dec loopne cmpsl xchg pop arpl cmp shl adc ret jge mov mov test adc and loop iret fcoml je xchg jbe push jne aam int (bad) push xlat fmull aam imul cmp inc fs mov out cld mov popf add ja xchg ret jecxz jno jbe sbb fistp jo xchg sti lods mov cmp cmp sbb shrl push mov stc repz sbb int testb add and lods jno mov sub test out cmc ss dec imul mov push mulb xchg mov std in or sbb lret mov dec xor ror imul testl fwait push jae adc fcmovne xchg push xor pop sbb sub nop cltd mov pop cli sbb into in pop fld push ja aas adc (bad) repz push into xor push test xchg xchg (bad) and (bad) jle sbb inc ljmp movsb hlt movsb xchg xor push pop and cs xchg jecxz add out subl add cmc enter or pop lahf push inc and aaa add add imul pusha xchg test (bad) mov lea mov push mov lods mov inc or aam dec inc in ds dec push xor add stc xor test mov mov inc and lods cmc xor test and or pop fsubs pushf ds push push pop push das adc add mov mov jl pop inc inc push and into aad xchg push int3 mov xchg jl push sub xchg sub gs in lahf fildl xor fs xor jnp sbb and sbb test push adc pop fsubs test adc mov cltd xchg sub lock push push push cmp (bad) push dec xchg repnz pop ret sbb jne pop es sbb sbb test sub add xor jno insb push and pop add scas fwait std (bad) mov hlt icebp pop or sbb stos daa push jge jp stos lret jecxz lcall jl xor jo cmp lock sub cmp xchg lock out jb adc cmp or jge inc addl daa aad xorl mov mov popf xorl push test mov mov pop stc mov mov xor push fdivl enter repz mov ret sbb out push pop dec mov and icebp dec pushf popf ljmp xor mov mov lods xchg (bad) dec and pushf jg add (bad) jb int pop ret push lods sbb (bad) imul fs mov sub pop mov lea cld xlat popf in inc (bad) call lods pushf pushf enter idiv ficompl rcl gs sub mov xchg fst mov sbb push imul adc jg pop dec xchg pop push lcall sub pop js jge pop fnsave jle inc adc adc or std mov or fdivrl pop jne dec pushf in adc mov out and je imul mov xlat push push mov mov xlat shr mov adc add push xorl enter div inc add clc sbb mov dec es lds (bad) mov adc mov in enter cwtl imul adc (bad) ss jge and adc jno in cmp push dec adc mov and outsl mov (bad) cmp leave add cmp or in dec out xchg lret hlt mov cld pop add fmuls pusha xchg aaa adcb mov lea xchg popl adc sbb jns jno cld or add in (bad) sbb jo jle or and insl push jmp jle xchg cwtl out cld jge iret movsl xlat (bad) (bad) sub adc stc in fcmovnbe jbe jmp mov aas stos xor rcr sub cmc jp adc popf loopne jmp outsb addb or adc sarl cld inc mov dec aaa xchg repnz (bad) push std jnp pop cmp jno jp les push not bound adc (bad) cmp xor in xchg sbb pop enter mov jge (bad) cmp cmp aaa (bad) inc cmp fldcw movsl push sarb add push adc cmpsl sbb incl rcr sub adc jg scas lahf xchg sbb movsl and adc mov aam push sahf jge mov (bad) sub daa int dec pop rorb movsl or push clc mov insb out js pop out pop lock sbb jbe flds loopne (bad) outsb std inc ss xchg sub es fcoms jp out sti out dec add popa mov pop or stos jle out xchg inc rorl mov out mov (bad) jo pop dec fidiv push cld push fidivr arpl je pop sbb pusha inc test out jae jge inc xchg fdivs adc (bad) mov cmp mov adc cli cld adc into (bad) cld sti shrl lcall xor pop and and mov jmp sub inc jge fidivl jp aas stos adc xor inc jge adc nop inc in cmp mov or mov jbe add dec pop jnp stos jg cmp lret in int3 jnp xchg push push and pop pop mov (bad) mov sbb push test and lods into pop push adc add cmc adc shll pop inc mov roll test push xor aaa add sti mov adc inc push cmp fisubl out pushf or inc xchg in pushf fs dec fs push sbb push sbb and pop jl imul and lahf addr16 push lods pushf and xchg aaa add jns jge xchg sbb in cmp aaa cwtl or je push std lcall std mov xchg fsts push sbb insl pusha gs insl cs sbb fwait pop sbb mov clc popf test push (bad) pop jae fdivr push jb rcl subl je mov stc dec popa in jmp adc mov cltd dec xchg ljmp sbb xorl inc jo mov xor divb imul sarl inc lods cltd clc mov mov jb ja mov xchg (bad) sbb mov fwait aaa add add adc das dec stc jo les lock mov das insl xchg mov (bad) rclb ja cmp sbbb test pop test comiss idiv in push or xor dec (bad) jge mov xchg or mov xlat aaa and mov adc jae or sti (bad) hlt lahf fild xor aaa xchg fs push je push jnp adc imul jp cmp mov sub orl fsubrl push aaa int3 fs push test pop inc pop push aas push cmp pop clc mov pushf add fsubs xchg push mov imul and or andl inc hlt cmp aaa pusha jnp push and add and mov (bad) xor and call push movsb mov sbb jl push push dec mov push call in lret and lds lret mov das (bad) sbb dec inc cmp push mov (bad) lret mov and sahf cmp push mov cmpsl ljmp pop mov and jnp call (bad) mov aam (bad) pop jmp stos sub push and cmp sub mov xlat push aam mov js icebp pop lods fsts and lea lea push ds push enter push mov xchg inc nop push jnp push mov (bad) imul inc sub adc xchg int lret sbb sbb sub ja popf dec sbb fidivrl or lret or jge cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld .byte .byte push jb ss push add jb add jb push fs mov mov mov cmp into xchg shl sbb dec jo mov mov sub into cld das mov cmc les icebp les or inc sub adc les lret lahf (bad) jmp mov cmp jg ret cmp sbb mov je mov dec xor mov rol sub mov sub mov mov sub mov std clc out fldenv xchg sub cmp ljmp mov mov das mov call mov mov cmp sub cs rcr ljmp cmp fsubp xor les pop dec and out xor cmp cmpsb iret enter fimul outsl mov out xor mov mov fldenv int fidivrl mov lcall sarb pop sub pop dec and out xor daa xor xchg cmpsl mov andl mov pop inc inc lds mov jle mov lcall sarb pop dec pop aad subl mov rcl inc lds mov jle mov lcall sarb pop dec pop add iret sbb faddp sub aad dec mov fsubp xor lea mov cmp cmpsb iret enter push fidivrl mov lcall stos mov mov sub cmp out movhlps sbb sahf (bad) sub or lods and push push aad lret addl ret mov (bad) sti popf outsl xchg mov cmp fidivrl aad lret addl lds mov jbe mov sbb jmp les jl inc mov lds xor mov imul movsb mov shlb pop lds mov push xor lds dec mov and frstor cmp xor into push fistpll push jb cs js leave push or jl mov icebp or lcall cmp sbb test add add cmp sub lret dec insl fldenv push sub ss and aad mov cmpsl fistpl mov pop inc icebp lods fs and cmc out das daa leave push test (bad) int pop (bad) mov mov pop dec cld mov in test mov repnz jp repz pop mov jo ret faddp bound sub (bad) cmpsb popa mov push and arpl mov out (bad) pop test lods jmp insl jp pop inc cmp push bound mov loop popf jg mov loopne cmp inc sarb dec cmp out fdivrl mov lods push push sbb cmp fsub mov adc mov push mov xchg and adc push or inc mov push xor lds pop int xor mov icebp enter hlt int shll fistpll inc xor mov aad sub das fldcw inc (bad) loope mov aaa pop push or xchg aad mov push or xchg std scas mov mov or stc dec push sahf mov and jle lea cmp enter andl mov ror xor icebp cmp xlat insb (bad) add and xlat push cmp pop icebp sbb add cmp cmpsb scas (bad) xchg popa jge popf test dec push or dec sbb xor jecxz dec mov cmp ja popf dec jns,pt push push ds fldl cld jb aaa adc mov sub jmp and mov cmp cmp dec adc mov mov jp aad mov (bad) mov cmp and or test rcr int3 ljmp mov out xchg stos push (bad) cmp int3 sub push std jge sub add mov lret leave cmp fcmovu lret mov les adc mov lret xchg loopne jno fldt lea jmp or dec mov mov ret mov pop add pop sub hlt movsl rorl pop mov (bad) sbb adc push mov mov mov jns pop mov in test push mov dec in outsl les mov lcall pause loop adc or gs stos movsb mov iret nop pop arpl push mov mov cmp push add cmpsl mov or mov pop int3 in push je mov xor daa sti out sub test scas leave std (bad) cs push sub xchg popf pop adc (bad) push lods inc pusha icebp bound sub test loop xor in addl lea or aam or out mov or das movsb dec imul lret mov icebp mov mov push daa outsl xor enter cmp leave sbb and test adc adc (bad) or xor mov jb ficoml push out out or ljmp (bad) mov sub aam fldl mov popf cmp fmul stos ror cmc fbld pop sbb out js inc cmp test cmp jg fildll iret lods cli arpl jo cld push and dec loopne (bad) and sarb fisub or jmp fiadd enter lret pop lock idiv loopne or add xchg fistpll mov push pop inc mov mov fs xchg and or movsl and inc js lea mov pop fs jns xchg jecxz mov dec das cmp xor xchg movsl cs (bad) sbb shrl mov sbb pop mov jecxz shll les push daa dec jnp aad xor sbb mov adc xchg sahf sbb lods sub lret aaa repnz pop sbb call pop push sbb scas push jge lock pop or jl adc add add mov or lcall das shll cmp leave sub les out movsb insl add push (bad) adc (bad) std cli jle mov (bad) mov arpl fnsave or dec cli and sbb dec lods aas xchg fidivrl add mov cmpsb fidivr xchg mov lahf inc pop leave inc and adc add popf fsubrs push xchg fld scas and mov cmpsl scas cmc test mov das add in cmp mov push mov fcmovb jns insb enter iret or sbbb dec aam repnz lock jo xor and push push and (bad) adc push out enter inc daa fwait data16 lea push adc sti (bad) pop ja mov pop int3 xchg shl movsb add decl icebp mov add xchg insb add std dec or or pop dec (bad) and gs call cmp sub or jp sahf mov lcall add lods popa and push in imul xchg push cmp sti xchg ljmp cmp cmp repnz mov fs pop xor pop xchg mov sbb push (bad) pop mov dec pop push add loop nop lods iret out rcrl fisub pop ja clc stc xchg sub sbb mov dec lret mov xchg dec cld inc sub int mov xor (bad) or and int pop ss (bad) add xchg pop push add dec mov scas daa inc jb lds dec and je fsubs into movsb adc out mov inc mov (bad) (bad) adc enter fadd loopw inc xor mov and aam (bad) out (bad) nop inc add xor fcmovu sarl dec pusha mov out mov push das adc add test jmp pop sub jp add xchg jle das lea shrb push lods mov and dec mov mov popf adc dec and outsb (bad) cmp adc aaa sbb push lea mov nop xchg or mov pop inc cli jns push mov data16 xchg jae xchg mov and add call pushf xchg mov icebp xchg xor lock cli leave and (bad) mov push add sbb idiv and dec loop inc in decb sbb add xchg xor mov jnp out or js (bad) pop leave daa jae push imul out outsb pop cmp loopne rcr fwait jbe,pt pop dec inc mov ss add lret push mov leave xor add mov icebp mov aas fwait mov add idivb (bad) pop inc je add add pop insb int ljmp (bad) data16 jne mov and dec push jnp and dec popf add xchg mov inc cmp fcomi loope sub or test shrb fcoml xchg jo jge js leave aaa mov mov sar lahf or jmp fidivr push and and fdivrl sbb add xor jp bound aas jne scas lahf mov push sbb adc jb cwtl imul ret popf das sbb xor in xchg xchg push push mov rcr call jle sbb adc and lahf jp pop scas jmp out sub andl (bad) div ss fsts enter sbb ja pop cs jecxz dec adc into cmp inc test sbb jae gs jmp test stos in sti lret hlt int dec ja mov notb out xchg test inc movsb sub jle sub hlt mov cmp jns jne adcb aas (bad) cmp stos popa jne push sbb sbb mov in mov xchg mov mov push sub test pop mov popa xchg xchg clc das sub es (bad) jg add rcll dec loopne xchg ret test xchg dec dec or or sbb clc fbld imul xor mov sub push lret lods fstpt mov mov xor (bad) dec clc and ds mov out shrb mov xchg ficoml loope xor shl lods dec in mov loop mov mov shll enter ljmp popa fwait xor adc xor insb add cmc scas sub fwait dec xor adc mov adc dec jmp sbb jo push (bad) jmp lds aam fcoml mov es cs aad cld mov in mov fcmovnbe aas mov or mov mov daa jp pop cmp repnz jg add cli out int mov pop pop sti mov pop mov lcall dec xchg iret cmc push or jo mov je lds fucomi (bad) in enter lods je dec sub (bad) std add aad and cmp loopne push or aad add enter sbb rcrl jecxz sub cli sahf dec stc add inc arpl call popf mov xchg shrb repnz insb cmc and dec sub fidiv or adc sub mov das push jo xor xchg call ss cmpsb fisubrl in call mov pop jecxz mov sahf or popa movsl (bad) (bad) ror sbb mov hlt nop mov into test dec add lock mull int sbb adc jge clc jbe mov cli cwtl (bad) insb and outsl jns xlat ret aas outsl push testl ficom mov cmpsl js repz and mov jns subl sti cmp fsubs cli ljmp mov and inc ret dec repnz push es pop dec js adc movsb fidivr cli pusha int add fstp add testb push sbb aaa and les stos and stos pop call loop test add dec push or dec pop mov int pop int3 out sti out and mov lds xchg lea sub xchg pusha repz pop ret call out and dec aaa shrb adc xchg jmp rclb imul jae inc mov push aaa lahf and dec test jns sbb dec push repnz or fwait pop scas movsb jg movsb dec sbb lods (bad) and sbb sbb dec aaa iret xor fmuls sub push cmp pop sub sub jl lds loop,pt sub and adc sarl adc (bad) mov inc aas lea lea mov mov mov ret (bad) jecxz in clc push imul dec inc xchg clc rolb fcomps vpsadbw in push fs mov and inc push mov mov sbb jae pop jp pop push sbb mov scas or int3 ss js fiadd pop add mov int3 scas (bad) jecxz std and dec and inc mov pop fadds lret jl sbb mov in add incl mov add addl add mov and outsb xorb sbb pop xor jns jge insl or incl mov adc cmp push xchg int rcrb imul addb inc mov xor rolb xchg sub jo,pt jg mov in sub lods aas lock scas jns insb pop insl pusha sti adc pop lea imul mov push add and arpl lds or push mov rolb add xchg dec pusha jl fwait jne cwtl adc lfs inc pop clc ljmp lahf je adc loopne imul pop adc add xorl subb adc mov js add pushf mov sub pop out and cs in (bad) xor mov xlat push inc (bad) adc insl jl mov or dec xor cmp cmpl aaa jge mov xchg (bad) insb fsubs xchg xor outsb adc jno sbb jns cmp pop or jmp mov mov mov andb add inc xchg movsb enter fild push jne mov xchg pop fdivrs push inc aaa xchg pop xor popa arpl pop xor dec mov stc inc cmp sbb cmc sbb sub xchg xor imul or jnp inc push jle test lea adc or mov xchg stos ret or pusha pop inc test cmp dec xor pop pop xchg lds add loope xor jnp xor push dec les cmp mov jno ljmp cmpl aaa sub lret aam std inc or loopne add pushf or int3 dec icebp sub xorl aas xlat aad mov pop push sbb rolb sti in out add jb sub mov outsl inc mov outsb movsl and or lods add xor pop or adc addb xor pop stos nop mov (bad) sub push xchg cmpsb adc jno pop mov pop jg jmp pop hlt cli xchg sub push bswap je nop add mov dec and leave and scas andb testl or pop push (bad) or mov mov jecxz (bad) mov fwait add push inc lret jg,pt test xchg nop jo push xchg add insb pop xor pop xchg dec add repz inc (bad) adc adc sub or repnz adcl arpl imul test jno xchg dec ror enter mov out sub nop dec push lock sbb sub enter push ret cmpl clc add push and and out mov mov lods les in jmp mov in add ret (bad) shlb cld jno lea push loope mov mov xor sub scas push fildl cltd sarb dec xchg loope add rclb mov or push mov das push mov es push xor stos dec push push test nop loope scas inc adc add (bad) divl loopne sub lea xchg int3 pusha add iret insl xchg push inc pop mov or cmp incl ret ljmp add pop dec cmc clc imul jnp mov int je jle xchg mov sub inc sub xor (bad) ret jle mov jns (bad) xor mov clc xor or dec cmp (bad) (bad) out jge bound sub out orb ret mov cmpb ret lods cmp sub aam mov mov jg sub or call leave je or lock mov or insl jb sbb jmp je mov and add inc adc jl jo or loopne mov xor xchg in or fistpl nop sbb jl stos mov dec jno jg add enter out and movl add pushf jno add xchg mov and or lcall repnz push push adc mov test daa jg mov ss push xchg mov mov in xchg cwtl mov shufps outsb mov mov dec cltd mov xlat dec and sti and jnp fcomps push shll mov lcall (bad) sbb mov xor in sbb lds int3 cmp loope fcoml xor outsl jnp add pop add (bad) sbb jo push mov cmp loope repz xorl clc xor xor das sub add cmpsl adc inc jo cmpsb test sub adcb push push clc movl cwtl and mov test aad es loope sub jle add push mov xor popl daa sub js test mov mov sbbb test adc sarb cmp cmp add jmp sub pop sahf aam adc cmc pusha xchg or add (bad) mov sub sbb decl scas in (bad) ja adc adc inc push popa inc fsts mov lock sub pushl add fdivrs mov or fadds cmp aam xchg aad out xor outsl push xchg mov push mov pop inc sbb add divl ss pusha sbb daa outsl jge pop sbb mov xorb stos or push inc cmp aaa iret or jmp cwtl test rorb ficompl push icebp xchg leave cmp sub and std pop (bad) adc mov popa jl in pop daa loop pop ljmp aas out adcb push cmpsb push add lahf rcrl ljmp nop adc mov mov pushf and xlat push fldl2t mov push xor adcl test fadds and sbb test xchg scas pop or add mov jno lret xlat std jno pop and xor add dec bswap inc pusha rcl test mov and in ljmp es or (bad) int3 pop out or xlat sbb out add mov dec call dec add sbb int push lock push push inc sub xor mov inc push inc xor pop (bad) xor inc movsb mov add clc movsl shlb jl add add xlat push dec or pop loope or jmp sub pop in sarl xlat loope addl pop mov test incl push dec sub xor add adcl add enter or sbb daa in cmp mov pusha out cwtl jmp jno js lods xchg aam je call inc add push cwtl jmp xorb (bad) jecxz sbb or sub inc push loopne insl mov jg lds or das xor sub insl jge jg fstps call xor sub inc pop jp and in hlt xchg cli cwtl pop or adc mov add pop sahf sub icebp and push nop cmp sub dec or movsb add (bad) xlat or fimul mov loopne jbe aas xor mov mov sub cmp js js pop xor clc or or faddl pop popf xor mov arpl push ljmp cmp adc cs lods cmp sub add push sub into or cmp or lret sub and lods stos iret adc or enter inc sub xchg outsb xchg xor aad jp xor xchg rolb adc and mov mov repz sahf xchg mov stos rcrl nop mov push call cmp xor add add (bad) jb subl mov mov cmpsb (bad) loope or xchg push push lock xor xor fwait jle addr16 xor lods mov ret inc roll dec push add mov mov mov dec dec inc iret cmp nop add lods (bad) jno pop jo movd add scas cmpsb mov sub test pop mov fstpt inc movsb dec pop call and add rorb mov loop pop call mov mov loope dec sbb xlat add andl or es ret test dec inc loopne adc xor negl rol arpl jno daa sbb mov and lods loope inc mov test sbb fiadd lret lds pop add sbb adc mov xor xor fldl mov add adc push sti inc inc add popf ljmp xchg mov mov mov adc sub orl adc lea inc mov push mov ret inc pop paddusb add inc ljmp cmp xor jo movsl cld repnz adc pop sbb cmp leave or aam scas nop ret push mov and cwtl (bad) cmp imul mov or fadds aam cmp stc xor pop insb andb pushf add movsb je add sub scas aas ret insb sbb push loope flds (bad) fiadd add clc add pop xor xor pop pop aas rorb test add andl lret add sbb and loopne xor int3 mov push rcrl not dec iret adc mov das inc ret or or push add cs add mov pop ljmp mov loopne xchg rclb lret xchg mov inc xlat stos inc cmp fwait adc push xor (bad) movsl adc xchg (bad) jns nop adc lods push pop jne aaa cli xchg loope test add add add inc pop inc add dec add adc jns dec pushf sahf into movsb mov push xor inc inc mov dec aaa insb cmpb (bad) je bndldx daa cld fldenv inc je adc pop inc daa mov sbb ret push add cld cwtl and aaa push popf mov xorb add cmp int3 mov fld icebp popf add sbbb dec add xor ja (bad) incb scas loop cmp test mov sbb push cmp cmp ror out ja (bad) aaa mov roll lret mov cmp lods lea jl add adc test pop lret insb (bad) movsb inc push outsb mov prefetcht2 loopne movsb xchg dec xor dec xlat pop orb mov (bad) jp jle bound add xor lods cmc adc add mov test add jne test adc adc push xchg lret add xchg mov or lahf jno adc mov pop les add pop test push add mov add ret pop xchg pmaddwd jno add movsb jns dec imul push test movsl inc push aam pop rcr jle xor fwait mov push ret push aaa mov rclb cwtl mov lcall or dec repz std (bad) cmp cmp lret cmc pop add cmpsl jne ficompl pusha cmp fmuls gs stos push pusha (bad) cmc dec mov adc add stos es push xchg adc and in arpl inc mov xor or adc sub inc imulb aam hlt add test sti incb or icebp fs push add das stos adc fadds mov subl lods add call pushf xchg inc inc jo mov xor mov inc cmp or int3 insb sbb push mov push cwtl or and cmp mov xchg or mov fcmovnb add inc test push or mov dec addr16 and inc lods mov dec loopne adcb push popa jno push inc mov int3 dec es out mov jl aas sahf add cmp cs jno pusha push stc xor xchg flds inc dec jmp sbb sbb lret push dec xorb sbb js or pop jl xor inc pop int3 mov aam push call cmp dec mov adc push add push add sub ficoml adc loop push and cmp add jle repz mov ss int3 rorb or test or xchg sub sbb fs pop jecxz jmp scas add dec (bad) fld shr dec lock sbb repz shrl or adc sbb (bad) (bad) outsb (bad) mov aaa inc and mov xor adc fcompl icebp cmp dec push cld pusha and xchg inc mov inc mov scas mov fistpl sbb in adc dec xor adc adc dec mov mov mov pop loopne mov pop in roll decb stos iret dec imul adc add mov push aam sti adc add or jge cwtl sbb mov cmp xchg pushf cmp out aaa inc add inc inc test add rolb movsl cs xor and iret adc xchg and test cld add daa mov pop push or xchg mov hlt mov ss jnp lds rolb pop add dec push pushf dec and mov or sub scas jne es sbb xlat fcoms or sarb add add xor cwtl sbb add stos (bad) inc sbb sub int add and hlt enter movsb and mov fnsave stos push roll jae fldcw out add pop or mov test add repz and adc mov inc orb std pushl push adc and inc pusha cltd xchg adc addr16 adc ss lret push xor add test rcl sti add ret dec sub rcrb dec mov das sub cmp dec jno test test add hlt (bad) cld loope jg add mov cmp mov inc popa jmp les popa jle adc cmp mov add and adc jle cwtl into mov and daa push mov std add adc and or mov int and insb and cmpsb loopne mov nop add scas or mov into push fbstp mov fadds ljmp push sbbl xchg je and adc cli jno je or xchg aaa xlat pusha and push push push test pop ficom aad add add std sahf enter outsb addr16 fdivs fldcw inc xchg dec test push push cmc in idivb aaa in mov (bad) sub rcrb cmp pusha ds sub mov rolb sbb (bad) pusha les mov sub cmp sub jg gs loop push (bad) hlt dec adc sub gs mov loopne push daa add cmc push (bad) mov pop lods sahf aaa mov dec scas rorl add inc int3 inc (bad) es ret sub xchg clc xchg inc cmp sbb and push imul shrb pop inc inc js jecxz arpl daa fcom int in aad jno jge cmp jae movsb (bad) addr16 inc add push movsb push loop adc repz rcrb clc les nop pop dec mov arpl or dec cmp rolb cmc mov dec andb or jo adc das add inc mov inc daa add sub rcrb ret push dec adc scas lret add ja shrl mov add cs xchg nop loopne pop push add adc dec jb aas and cmp mov lahf inc mov sub rolb lahf xchg inc movsb iret fcmove jge cmp test ret cmp adc mov adc and ret xorb sub inc hlt mov and and ja ret and xchg mov cmp lahf aaa add (bad) xchg fstpt fidiv loope enter add aam aad pop mov push dec inc mov lcall and test xor mov adc notl inc add aas repz jo dec scas cld es lods or mov and xchg movsb dec mov adc les rolb sbb inc xor pop dec test andb icebp outsb out fcoms cmp test add sub inc sti adc popf test in add pop pushf and jns pop (bad) and mov shlb test aaa xchg loopne adc dec add mov add repz push sub movsb mov push dec es addl aaa xor mov cmp dec adcb xorb js fcompl sarl mov movsb or lahf xchg xor xchg adc dec adc push lods ja lock mov inc loopne inc xchg jmp or xor clc cltd hlt dec popa cmp add mov ds and adc pop and into enter vmwrite push sub mov xor lods or and lock insb dec out add push push mov mov xchg jb (bad) push adc jne andl cmp push shlb pop and jb adc cmc xchg dec cmp sbb int3 pusha mov push and aad mov stc jns or mov mov dec (bad) sub pusha inc addb mov ss and sbb test sub adc xor xlat cld jle cwtl aad fcomp lahf add jo sbb movsb cmp mov mov (bad) mov xchg mov lret xchg xor cmp push jge mov (bad) int3 aam sbb stc pop jo sub jle xchg cld jo les sbb add dec jmp cmp aas adc pop add jnp stos sahf flds out ja pop and mov xchg pushf mov sub cmp lock xchg fimull and ret adc fs inc iret test je adc or adc cmpsb push loop loop mov xor inc jnp aad popf loop je lea clc sbb push add xor pushf sbb dec aaa hlt paddusw or andb pushw cmp cmpsb hlt iret loopne mov add adc fisub and adc mov cmp test xchg add dec mov leave or test ret adc and cmp ss pop lock dec movsb adc lods fsts pop adc jns sub xor jno cmpsb or idivb dec icebp xchg pop in jg and or cmp and daa clc push lock pop add (bad) fisub adc fwait and add in push ret pop mov pop inc xchg or icebp add pcmpeqb bound test not jnp sub andb mov cli nop add mov jo rclb pop inc cmc and cmp xor mov jge pop and movaps cld mov jae cmp inc mov inc push mov aas mov push pusha lods adcb mulb test pusha dec setbe push test nop cmp data16 push xor or andb adc dec inc jmp loop shr rorb add push mov xchg movsb or add sahf mov or pop icebp lods and mov es pop inc js sbb add outsl cmp pop dec inc mov addr16 or inc es add repnz push pop add shrb push xor bswap cmc mov ret mov str pushf clc or mov inc jl cs cwtl push dec mov aam popf add jl push std xor cmpsl mov lock and int3 inc lods dec jp in aaa rclb repnz jns das es jns inc and inc and jl mov fs inc or xorl loope les loop test (bad) cmp les add or sbb les add xor aaa add adc aas and movsb cld das add xor inc add push shrb cmp shrl lahf xor bound (bad) and cmp flds jmp movsb add ficoml (bad) or cld inc lods xchg adc pop js cmp (bad) and cmp mov ret jo push mov enter push rclb mov je mov inc and sub or pop inc loope cmc in and shrb dec aad arpl and cmpsl mov andb in cmp fsubp jmp mov subb dec roll push adc aaa std out or xlat mov dec jae dec sub popa nop dec clc push sub mov add mov xor leave adc add ds mov (bad) inc push adc mov test hlt pop xchg enter jmp jle stc test or lds test out add or adc pushf or jns xchg xchg sub ror aaa sbb push adc cs cmpsl hlt add addb les imul push (bad) pusha pop (bad) je mov inc jmp cld pop outsl jl sbb or add es repz mov or iret aaa cmp enter es and fimull fwait aaa das sub xchg pop and push lcall aas lahf test faddl dec mov push inc inc test (bad) into mov pushf rcl cmp dec call mov dec cmp cs jae pop xchg in (bad) mov lds (bad) adc sub add xlat pop xchg fisttpl mov add mov shl pushf pusha adc adc cs cltd xor (bad) xchg sub loopne mov popa cmpb sub ret popf and loopne (bad) add mov cmp pushf movsl loope inc lods cltd clc xor int3 pop out sbb push ud1 (bad) imul dec andb into xor add (bad) hlt and enter jbe shr ret mov jb add jmp shrb fnstenv pop inc jne js lods aas mov nop xchg insb add mov lods daa and add mov dec adcl sub add jle ret daa mov and adc rcrb pop stos ja dec adc loop aaa stc mov loopne (bad) jo or sahf aam pop mov dec sub dec adc sub pop xor pusha (bad) and imul nop pop jg inc add mov cmpsl aas mov inc in (bad) jecxz out lcall (bad) add jle sbb flds inc jl (bad) jl mov (bad) push mov xchg push adc fdivrs or loope cwtl sub mov sub mov pusha push hlt inc lcall cmp movsb and les inc aas add mov pop sbb in jno cld inc dec push cmp fstps mov int3 mov or sub fsts clc (bad) cwtl test inc add add in mov xchg cmpb dec aam or pushf adc les mov jecxz (bad) xor jl fimull pushf mov fsubr sarb xor cld nop pushf sbb jae je xchg xor xchg notb int mov pop sub xchg test imul subb xchg inc add sti lock lea stos test ficom lods add int3 (bad) jno xor push inc pop mov rorb dec push psubsb mov cmp fldcw cmp cs or scas push ret stos idivb push adc in popf jmp popl fiadd jnp xor sbb mov cmp xchg enter push inc fmul shlb ret or stos (bad) std sub mov xchg add dec add stc mov ret inc inc (bad) push pop inc and or iret cwtl jo mov pop or mov ds inc enter movsl pcmpgtw sbb subl dec mov push xchg mov lods sub xor xchg mov adc push popa inc mov rolb aaa mov lods mov xchg clc (bad) dec (bad) fisubrl adc push dec int lock sbb in repz fcos cld adc movsb aaa xor xchg fs cmp mov mov or call sbb cmpsb test mov xlat nop pop sub inc (bad) loopne (bad) cld clc inc cmp sbb sbb mov xlat cmpsl outsl (bad) sbb push and pop inc mov loopne xlat pop and mov cmp mov int3 mov lcall add sub loope and mov rclb cmpsl jns xchg lret aaa push cmpsl cmp aas sub or dec inc lods data16 inc and add cmp data16 dec fnstenv fcom sarb arpl add push mov mov pusha sarl pop sbb clc adc and cmpsb pop push cli stos cmp loopne adcl sub add dec test loop repnz les add dec pop xchg aam add lods in adc pop pinsrw add cs pop loope lret pop test push repz cmc add dec xor stc inc ret adc stc leave sbb jg dec cmp lret fs lds xorl mov jge ret cltd pop insb lods sub sbb mov dec mov xor or inc pop dec les sbb push imul lret push and mov pusha add cli cs fld and icebp pop pop (bad) pop inc daa dec fdivr ret sub out test test lahf xchg shll cmp push add aad cmp pop or loopne js dec pop cmp mov push xor pop cld les dec js push adc pushf mov lret add or js xor ds aaa cld dec push add or rolb addb fldenv mov fisttp outsb test or or xchg xchg adc (bad) push aam lahf subb dec pop or inc jnp mov sbb adc adc or cmp lods cmpl mov mov xor (bad) mov test ss lea add cmp and pusha repz sarl inc xchg test out add pop enter mov popa icebp ljmp aad xlat mov cld repnz cmp in pop add mov dec cmc hlt lock cmc add push repz adc mov add (bad) or fwait mov jg dec orps aad test iret sub cltd jle nop fadds jo out in cmc sbb test sub shlb sub xchg test inc sahf add insb hlt pop and mov or pop inc (bad) push mov fld adc enter sbbl add push nop inc xchg xor push test sbb insb sbb ss xchg jmp xlat or lahf adc incb push and in aad pop cli push adc xor call add cmpsb fwait or out cli cmc ficom cwtl cmp mov addl xchg inc or into xchg mov sbb rcr dec pusha mov test mov stos mov add sub into (bad) out add and jmp rcl pop lret cld cmp mov add outsl lock mov add insl icebp aaa add lea or rcrb les cmpsb pop int3 stos or hlt call inc pop cmp fld in add mov pushf rcll add rcpps incb repnz mov fadds sub pop add mov cmc repz int3 adc mov cltd ja daa jmp push rcl cli test xchg xchg dec lea mov sub test mov push cld or insl into push aaa dec dec int3 mov fild jg fwait test shl jnp mov and inc cmpsl adc add cmp pop (bad) fnstenv xor xorb popf jb (bad) scas dec in lods add sbb movsb or xchg lret dec add in fstps aad or or mov add xor fnstenv inc mov imul add idiv and add sub adc aaa push pop pusha add pop shrl xchg add pushf dec adc pop sbb nop outsb rcl add enter test test adc or pushf setb leave inc (bad) loope push fsubs (bad) jbe clc mov sub add leave cmp xor cld sarb jl or add aad xchg rorb and into das cmp dec inc fsqrt out les leave icebp movsb add mov xor orl cli aad push cld or mov or adc add mov add int3 adc repz xor test xchg insb (bad) and js dec mov fs pop or cmp sahf fld add mov cmp (bad) push repz xlat movzwl sbb ret sub fnstenv sbb and aaa or std popa or add shrb pop and adc dec test ret mov mov pop add and (bad) pushf mov movsb xor ljmp fxch mov push loopne sub or mov add inc push mov pop test xchg lock pop or mov inc lcall pop dec lods fadds call push in push lds (bad) xor jnp test sub inc lock adc push je ss psrlq fimull std test shlb subb xlat dec push push (bad) inc xchg pop cld fs repnz pop cmpsb cwtl cld mov cltd xchg lret int3 scas dec and sub (bad) fs inc xor sub loopne mov popf mov (bad) enter mov cmp shll (bad) and mov dec mov ljmp push pusha popa mov or loope lgs insb mov adcl jo or mov and sbb mov jns xchg enter fs xchg inc jae mov adc popf mov sbb mov adc ds daa out jp sub mov mov dec pusha sbb aam (bad) mov push int3 mov adc and mov xchg xorl inc mov jle popf and test enter popf cwtl jo nop rclb push (bad) push imul jo jle sub xchg dec arpl adc mov fadds lcall inc pusha fdivr and inc adc lahf mov popa jmp sbbb and test int3 shl sub jb insl (bad) setg and in shll add mov repz inc xchg addb cmp ret and mov fwait rolb imul add pop das sub adc fmull mov mov pop es cs push add adc lods add pop dec lret xchg addb dec add or xor loop fwait add xor add fcmove iret (bad) inc dec add mov sahf mov flds and fwait xorb movsb pushl sbb int3 mov sahf add jle and fistp xchg fcompl add ficompl pop add or lea ret cmp xlat and arpl xor xchg jns popf mov or add mov je dec (bad) insb pmuludq adc dec xlat les add aam mov xchg mov (bad) stc je mov mov sub mov cs aad pusha subb cwtl inc mov je add dec adc fidivrl push lea rorl nop test aaa adc pop sub inc xchg loop adc cli pop push sub jmp cmp fs and nop cmp icebp adc xchg in adc xor ficomp jne add and in or cmp and xchg jle or movsl jmp jb pusha jg (bad) add dec addb out push popa loop fsub dec ja or enter sbb mov (bad) lods adc icebp and xorl aad insb ds cmc cwtl inc and add subb mov push rorl xor jp enter or cmpb mov aaa pop mov hlt mov fmul or mov jb scas mov sbb std pop xor and sub mov sub mov sbb add iret mov lock mov test (bad) lret fsubr adc cmpsb out sub cmp mov fcompl int3 push into loope,pt sbb sbb bndstx dec call add lret push and inc mov movsb or int3 mov fistl shlb les mov inc ret pop xor push daa cmp push (bad) loope push mov cmpsl jo daa lods roll pushf sub cmp cmp fildl inc ret mov fidiv sub mov pushf cmc loope insb mov inc mov xchg adc xchg mov in dec test (bad) jp daa pop xchg add mov loopne,pn and dec add test jo subps jnp cmp add inc mov into push clc mov adc notb dec mov push adc inc lds jl cwtl repnz sbb dec fsubl ret popa sbb icebp arpl test cmpsl and pop aam cmp inc adc test repz mov testl out repnz insl cld mov mov mov add push cmp fadd in loopne and mov inc mov fiaddl test xchg push fdivs push (bad) pushf inc dec or clc fnstsw loopne daa adc add imul and xor (bad) pushf test nopl (bad) or pop inc pop mov cmp xor aaa xchg fcoml mov sbb imul mov inc cmpb test into imul lock cwtl sub mov js adc ja mov mov sub call pop and int xor jle xor cs pushf mov fs mov popl fcompl repz mov xor pushf pop lret push popf pop push mov jno push arpl push insl mov push mov mov repnz outsb rcrl rorb xchg add (bad) mov pop xor clc cmp mov cmp lahf mov xor or mov pop je cwtl add xchg and fs scas nop xchg jb fwait js mov cs inc sub shl mov in and test pop (bad) xor iret add popa cmp pop sub xor daa jno sbb jae push push mov cld xchg push test or fidivl sbb rorb das addb cmp mov sub aam cmp (bad) xchg lret into cmp or sub sub fadds jl inc or in or lock mov xor xchg hlt popf (bad) mov imul cwtl push jb dec movsb test ljmp add adc mov mov and loope popa mov jno cltd ret sub cs add cmpsl out add popf loop mov arpl sub stc dec loope mov aaa int3 rclb ficomp mov loope mov ror or imul and push mov flds imul lea mov andl xor clc cmp mov lcall dec fs sbb loopne lock adc xchg pop sbb test xchg dec jo sti subb fldenv fucomp mov adc add jmp add sub lods jecxz adc xchg and lcall jmp (bad) hlt and cvtps2pi in cltd mov and jno jp or rorl cmp mov fs sar and or adc aaa orb orb cmp movsb cmp (bad) xlat push sbb xchg test pop aad (bad) fdivs add and les dec (bad) or and adc cld dec cld push ret pushf or rcr cmp push push cwtl hlt cmp xchg nop push jns xchg pop add fsubrl (bad) rcl adc pusha mov xchg jp add int3 inc cmp sbb and mov push (bad) add inc movsb mov xchg pop cli inc jl pop add mov and mov popa xchg and add push aas sbb in lret add dec cwtl mov add cli (bad) xor and adc cmpsb aaa pusha mov push enter iret inc lret cmp xor xchg clc fs xorb int3 aas pop loope or push adc inc xor pop dec sub cmp add jo xchg outsl push mov cmc dec lods bnd (bad) inc or inc lods or icebp add cmpsl xchg jns cmp sarb clc and mov mov orb inc fnstsw push or mov or sbb bound lock test push dec repnz out mov sbb mov dec call fisubr cmp test (bad) adc cmpsl pop xlat sbb sbb shr add sahf ror (bad) leave or int3 cmp dec xchg rclb aaa jae popa clc nop xchg shlb test mov inc sub enter movsl cwtl dec sbb outsb mov jne xchg notl aad jo adc mov out and jmp jmp inc or xor test aam out add fdivl sbb inc aam or shlb sub into aaa pop push add inc lea push push mov lahf loopne xor jo and add cld add mov mov add lcall aam adc lods fdiv dec sbb mov jmp mov mov cmpsb cmp mov imulb fs add in iret aaa inc into add mov nop aas or sbb fwait clc ret adc xlat jge imul (bad) dec pop mov clc popa frstor mov adc mov and mov push rolb insl push int ret pop and mov pop in pop push enter xorb add xor cmp enter add lcall loope and or sbb sbbb fnstenv ret das jno jl push mov je rcrb loop sahf cmp clc push mov cmp add push sahf je fsub pop inc pushf add orb mov movsb jmp pinsrw push aaa or movsl mov push mov mov (bad) mov jecxz add aaa in push add add out loopne (bad) fcoml dec add pop ret inc enter cmpsb jb adc xchg inc xchg mov cltd subb pop aad push adc cmp cs out or or pusha inc (bad) aaa push fimull mov inc jmp pop test add cltd (bad) clc xor aam and add loop sbb or out (bad) adc xchg rcll out dec fs xor pop cmp loopne mov sub arpl addb aaa out xchg int3 cmpsl xchg cmp lock sub xchg xor add dec sub fnstenv ret mov adc inc jo popf ror loope push adc mov (bad) rcrb dec sti cmp jns rol fstps mov and or mov xchg xchg add (bad) or inc shr inc ds stos adc cld pop sahf cmp xor cwtl imul cmp aad add jle loope inc sbbb push xchg orb mov cld mov or sahf aaa ja xchg fisubl push sbb daa adc leave mov sub movsb loope les cld fdivrl xor sub fidivrl int3 or test inc cmp adc lods pop mov or das add pusha ret stc jo lock bound mov jge add add or pop sahf mov inc lock xor xor push pop pusha mov sbb or cmp xor add test cmp mov fsts push cltd test loopne mov sbb push cmp mov les or cmp (bad) push icebp add sub (bad) fmul or pop adc (bad) cmp (bad) loopne mov rcll lds cmp mov mov fsubrl xchg out in dec xchg call dec or add or bound inc or cltd adc push push add cltd and popf add insb sti icebp pop adc bound inc aas repz add scas jne movsb push int3 add loopne jle sarb sarl hlt add lock xchg in movb dec xor and insl mov and cmpsb dec pop insl sarl cld inc sbb mov cmp in pop lock insl (bad) xor xor sub ja fadds daa (bad) or js mov mov dec rcrb mov mov add sbb sbb fcoml inc adc sbb mov mov shl fdivrl addr16 adc mov push dec xchg or loopne add xlat mov add cltd push add cli jo sbb lret cmp jo adc mov add lods cli loope or or push sub es fdivr jno push rolb pop lret out cwtl movsb test dec aaa and xor jae xchg adc push mov or pushf add xlat nop aas nop or or push lret loope enter xor inc pop fsts nop xorb mov lret or inc clc fmuls jle std inc add add movsb push cmp fdivs xorl and jo enter cmp cmp fisttp loopne cmpsb and enter fbld and mov sarb addl fnstcw out mov mov jo xchg arpl dec adc rorl push movsl ror and sub mov push sahf call add cmpsb add test in dec daa and xor mov jle add push and test popf loop inc mov cmc xorb inc pop rol jno dec sub loopne adc mov or xchg mov and and psubusb fdivrl rorb sub ret popa in rcrl test orl stc in in lock fldcw in (bad) std jno or dec aaa or (bad) jns repnz mov add (bad) jno dec and je ss or loope xor xchg xor sub xlat popa lock add xchg aaa (bad) dec push jecxz mov rcll xor sub sub ds mov xor notb and popa clc lock data16 enter faddl pop or je inc (bad) loopne inc jb add rorl enter inc jo add (bad) fnstsw mov jl in sub or mov cmp pop push jo inc cld out lahf xchg or daa cld adc test in test push add (bad) fmulp or sti shll cmpsb inc or shlb lea in out loope or adc fnop mov push mov xor les cmp mov icebp push jno nop cmp es dec test repnz cmc popa stos mov jl lret mov adc push in adcb cmpsb cld aaa and les lcall add std and iret sarb js lock pop insb xlat add lret add mov repz pop and xor cmp sahf sarb mov insb jecxz sbb inc test enter lods aad dec popf sbb push and in xor adc or push mov lcall cmp (bad) dec lods add ja aam pop (bad) jne pop mov push add jge loopne push or enter and outsl jle ds lods test xchg cs call add dec ds loope xlat pop push aad add mov sub lock les test sub cld adc sar pop loope ljmp xchg pushf imul push xor cld pop add xor ja es fwait es adc movsb pop fisubrl add outsb adc cmp add or (bad) inc mov adc decl mov push xor enter adc mov pop inc ja sbb mov fiaddl cmp and aaa or nop rcrb fsubs xchg jo mov les rcr cmp dec cli ror and jo pushf mov mov adc in push or lahf mov mov pop fs popf sub movsb inc adcl lock add lahf lea and mov (bad) mov inc je or nop pop jle sub inc mov lret int xor push aam mov adc cmp nop sub cmp add es xchg fmuls sbb sbb push or test xchg repz in dec mov nop inc jl popf popf nop mov lods aaa aaa jmp dec mov mov pop out mov pop test mov xchg inc or shlb inc stc cmp and mov cs and xorl sub nop mov popf add add xor ret aam inc and nop or add add jae xchg jno test cmp loop adc dec sbb jnp fnstcw jl or pop sbb pop cmp and shl push aam mov cmp sarb cwtl and sahf and add dec adc dec pusha iret sbb (bad) mov dec inc mov xchg or popa cmp clc popf in sahf loop add sub fs push int3 inc mov adcl add mov dec lret xorl pusha cmp nop mov push cmp inc sub jmp dec daa adcl in ss jl xchg sbb clc and cmp xor clc (bad) dec xchg push js mov push jae inc or out je test movsb or lds js into fs movnti inc cmp xchg nop inc pop mov pop (bad) hlt mov insb inc adc add mov outsb rcll jecxz pop sub or push sub andl (bad) aaa es jecxz (bad) and shrb sub xor fildl and xchg je push cld mov xchg popa xchg dec jp push int repz adc sbb pop mov add popa mov shll or mov inc popa sti jbe loope in test nop and pop sbb mov or fldenv and inc add dec mov fmull add shlb jnp mov lcall xchg movsb inc fcmovb je xlat xor movsl mov loopne fadds and cmp add sar call xor dec pop sbb mov and movaps mov movsb mov jno pop shl sub mov clc lods fnstenv cmpsl add fstpt or clc mov flds lds sub pop mov cmp dec hlt pusha daa fimull lods sub mov cs sub pop call xor push (bad) mov pushf jl loopne subl cli cmp dec push push xor or imul cmp mov mov js push add lods andb pop cmpl imul enter das pop (bad) pop mov and add scas es and (bad) mov movsl sub adc xchg adc dec pop and adc fcompl push clc aam sarl mov (bad) mov mov sbb and dec inc mov data16 jg and and cmp cmp mov test sub sbb orb sub pushf jbe add outsl push cmp std mov jb add jae cmovbe rcll and enter dec rorl lret test jg dec scas pop xor je pop lret int inc pushf and mov mov or lret loop adc das (bad) in and hlt (bad) cmp or push mov inc sbb sbb (bad) mov aaa repnz mov hlt pusha jae cmc xor sub aam xchg ret or cwtl jg lock add pusha fs das (bad) jno xor adc xchg aaa das dec stos inc nop add xor mov xor inc push repz imul pop inc or jae dec rcr adc mov and test jnp pop cmp jecxz lock inc pop mov add daa gs movsb loope add mov sbb and inc test xor gs add jp out mov (bad) movsl push enter xlat and and das push shr xor mov (bad) jo rorb (bad) pop imul add xor jno aam leave push cmpsb cmp mov (bad) sarl lods jbe or popa xlat mov and mov push and out xchg and pop mov ss xor sbb adc add aam fldt add in movsb subl adc jp xor mov jle subb mov cmp cmc lret adc sub dec roll ror jg pop rorb jo pusha fs orb adc sbb pop js test xchg mov cwtl or adc arpl fimul jb mov adc roll jle xchg mov cmp xor inc into fwait je nop mov enter hlt pusha dec shll dec inc adc sub outsb xchg enter adcb imul cmp rclb fcoml in addr16 add test loopne jo ljmp and and add jo mov mov (bad) mov fcompl add mov mov adc adc xor mov dec cmp int3 mov int3 xchg jl popf mov clc stos into jg inc push push jle je pusha pusha dec outsl xor jo sub add ret call push sub and out cmc inc ss pop cld and out sbb jge cmp iret xor push les sbb and xor mov (bad) cmc mov addl and ljmp dec dec xlat cwtl fdiv in cli stos roll jae lcall add add mov iret popl std (bad) shrb add (bad) pop add adc mov les popa fwait rcrb push add adc xor or and fcompl adc add addr16 sub cs cmp mov mov mov loope bound cmp and je out add mov inc push push (bad) adc dec sub cmp xchg mov xor sbb add mov cmp inc jo jae add cmp loopne js cmp mov call lret push sub sbb pop (bad) fldenv add inc js add mov je or les jo pusha es aad call jmp pushf xchg lret mov fsts pop aas dec dec or and xor and xor sbb or add fcoml ds dec dec and mov mov dec inc jg dec mov call les pop jnp and cs push push inc cltd push cmp fxch call jg scas (bad) es movsb cwtl fnsave cmp mov mov stc repnz push movsb add nop fs pop sub in jo pop fstps test mov enter dec or mov and loopne dec sbb xor test imul sub test mov aaa (bad) (bad) mov faddl jno popf mov sbb mov xchg xchg jne adc add and call lret in clc mov leave pop stos and add mov cmp fnstcw cwtl inc mov dec shll test aad add addl enter test incb clc sbb test jns xchg testb xchg sbb pop dec lahf adc add clc cmpsl (bad) cld cmc xor or jge test aaa shrb fcomps xor stc jg das ja mov sub adc les add xchg aaa dec rcl and lahf loopne icebp push or hlt dec repz push and xchg repnz dec add inc cmpsb jne repz dec push sub lods add andb and jp sti fs dec add add (bad) mov mov pushf push push in das jns xchg shrl hlt and adcb inc adc sbbb std adc hlt pop addl sub cmp cld cmp add mov not cmp inc sub in sbb mov dec hlt rdpmc mov cld out sub (bad) pop ss jbe sbb adc outsl add xor or test sti add dec xor loope icebp sarb out inc mov add and aam dec sbb lods subb orb and rolb xorl push or mov lahf add sti inc push xchg in cmp lock call sbb pop dec jl add adc aam pop fsin mov or dec aaa inc rclb add addr16 add xor out cld mov and fbstp sub movsl pop test mov adc andl sub jmp adc mov push or xchg loop scas cld add test nopl das mov xlat cmp add ja cmp movsl add push jg mov cmp orb inc test std jno (bad) xor add xor xlat pop int3 sub cmc mov mov add divb cmpsl fnop sar aam sub paddsb les xchg clc add xchg rdtsc bnd out mov sub dec sti push cmpsb testb jge push xchg inc repnz jbe cmp add scas adc test or sub or fcoml push mov add inc out mov xor push and out les mov sbb inc lods xor sub mov js adc adc dec add ret (bad) fist or and mov inc push movsb loopne jae,pt clc pop push (bad) pop les and mov std sbb add inc adc mov inc pop or add inc lret mov mov add and push les push pop add pop sub push mov cltd sbb iret or inc enter mov scas mov fnstsw mov repnz jb pusha int3 scas add je xchg and daa or inc test xchg div (bad) ss pop pop add (bad) sub and mov js and jbe cmp jg fisttpll jo jmp ret nop (bad) xchg sbb sbb pop sbb dec (bad) push pop cmp push xchg jbe test (bad) xor notb ljmp out sti jle add shll push adc xor pop ss add xor sahf adc rorb add mov jp or (bad) dec pop aam inc or add movsl jns int3 inc push jmp pop push cwtl push sub sti aad incl cmp cmpsl loop mov add inc inc inc mov dec cmc cmpsb pop xchg dec pop sbb and dec loopne or sti or adc lea clc and imulb mov add lret mov sub jno add jl nop inc mov xchg add es rorl enter add test test add andb lock add inc or (bad) mov (bad) es adc cmc dec mov push (bad) or push and scas add aam sbb mov xchg push subb cmp rcrb sbb (bad) outsl sbb stos lcall test pop shrl in std lock cmc cmp sbb movsl orl cmp (bad) fcmove mov pop sbb and sbb mov arpl xlat jp xor dec (bad) mov add cli jns (bad) sbb sbb push ret std add pop jl pusha pusha sbb cmp add (bad) lock fcmovb pusha shrl mov push cmp fildl mull pop mov push lock push clc jle (bad) out or sti or stc add repnz mov xor mov jnp shlb out sbb xchg in mov add xor sbb stc fwait add pop cmc clc je mov ficoml add imul jno aam sbb ja jne or nop adc pusha rorb jns sub (bad) decl call decl jns stos sub mov and push or and sbb (bad) jne xor out aad add cmp out (bad) jnp add loope and push arpl cli daa add cmp ret pop icebp jge lods add sub adc pop adc mov loopne repz movsl loope and xchg push lea mov jle fnstsw mov or adc mov cmp sahf and dec dec sahf sub hlt leave sbb or sub xor add (bad) dec pop es adc call sahf fs xor in in add xchg jg fsubs (bad) sbb and add cmpsb cmp xor in (bad) mov push or sbb sbb add outsb xorl adc dec rcrb jecxz loope mov sbb roll nop inc xlat xchg lret pop loopne push add jo into movsl sub or mov add scas mov jne pop adc pop add pop inc (bad) xor add imul loopne mov inc mulb mov (bad) sti ffree shrl lds and ret inc and nop sub cmp push rol stc dec xchg xchg mov inc adc push or test ja inc aam and jl bswap ret push xor jle sarb sti test push mov xchg fadds aad (bad) sbb add fsts inc lods sub out sub or mov sub incl nop sub xchg sbb mov (bad) cmp in mov jecxz push test and add jb rorl add adc jne sbb clc sbbb mov add inc mov xlat lock scas out sbb aas mov int3 nop lret mov jne xchg fstps or rcrl mov jnp pop inc in adc jl pusha cmp (bad) adc ljmp pop adc inc or cmpsl pusha xor and inc cltd sub leave lods push js bound je xor lahf jne mov inc loop inc xchg adc icebp int inc or xlat addr16 mov stc ret fild mov popf and scas sub decb dec nop sbb xchg cld xchg nop mov inc mov fs or mov test mov es cmp popa pushf jne mov adc sbb sarb aad rolb mov pushl mov xor nop iret mov pmulhuw or sub mov mov mov les cmc pop jb inc xor xor cwtl les ret ljmp pop cld cmpb aaa sti pop leave lds (bad) or push orb mov pushf adc dec pop adc xor aas add sbb or and cmp loopne push push mov xchg xor dec mov scas mov lahf insb mov pop aad subb add js out push testb popf mov cmpsb xor pop aad mov xchg xor push pop sub adc cmp pop sub and dec xor rcr jl std xchg mov add nop fidiv loopne mov dec or mov sub lret (bad) pusha and rclb or push jne (bad) jo mov jmp dec or lods mov aad push add leave push push pop and (bad) xor inc repz pusha aad jle js and jg or adc xchg inc jns in mov sahf rclb xchg movsb dec les pop or nop push or xor pop add push inc mov iret notb and dec test cs test test sbb imul add push outsl lods test test xor and (bad) jmp or (bad) or add stos and mov inc std inc sti inc into mov (bad) dec fst and mov sub adc or add out cld aad (bad) push in sarl sub sub loopne lods mov outsl loop pop sub cld ret inc lret aas and or adc add inc mov ss ficoml lock jp xchg loopne faddl movb adc and imul add ret leave mov cmp test test add nop (bad) mov testl insb in (bad) test fildl js out adc xchg test mov mov mov add add and lret jns jg and loopne ja mov fildl mov xor lea mov pop loopne and push or scas test cwtl sahf sub lock in mov lds cmpsb xor ds sub rolb pop push inc or add add pop sarl int3 push add nop lea in nop dec popa push and dec push loope testb mov out pop add jp inc int3 push cwtl xchg xchg cmp inc cs nop aam test daa pushf cmp movsb aad or mov and pop nop or xor xchg sub xchg std jg loopne and repnz aad jb pushf sbb adc daa aaa xor adc test and loopne stos fistp cmp dec stc cmp les mov xchg in cmpl add mov pop loopne ja xchg jae loopne aam fsub or sbb lahf jle and mov jo jge in (bad) xchg js inc stos (bad) cmp sub sbb or adc mov in faddl mov out mov push in enter (bad) dec sti push xorl clc and cmp mov std fdivs and inc cmp loopne das adc jl gs enter gs add xor js cmc cmp jecxz lock cld and mov xchg mov test push and insl inc xchg pop or sti adc orb std fldl fdivs daa push xor adc das lock call lods sbb and lock js daa and push mov dec movsl pushf or mov and popf and mov or or in (bad) enter shrb loopne lods pop xchg dec es fildl mov into incl and and mov fistl sub sub hlt sub aam push insb movsl jae adc aas add inc xorb pop adc and and fbstp cmp mov scas cmp inc mov cmc pop or nop add loopne cltd test shrb pop adc lcall mov orl insb or in adc push ja (bad) xor jecxz xchg inc xor cmpsb and xor pushf daa nop inc add hlt mov push fild sti aam mov daa xor movsl mov push hlt imull pop sub popa nop je or or dec xchg add pop sub dec add mov lods and jo (bad) push fbld ds add (bad) leave into int scas jecxz pop loope and fs popf push dec call call xchg or enter add fistpl pop orl or push shrl or pop fldenv je faddl daa pop sub pop jns xor push or sbb pop daa sti sbb scas add xchg rcll pop dec and dec add daa push add fisub fstl cltd lock aam jl xchg push rolb jl sbb aaa in mov pop fmuls and or add inc lock xor divl mov (bad) adc push cmp call clc es sbb loope inc add (bad) pop stos inc test inc sbb pop mov xor adcl addr16 aaa pushf dec ror arpl add repz imul adc mov and and lahf mov sub inc cltd mov mov and or inc inc nop sub enter inc repnz lea (bad) movsb xor subb clc push fiaddl test pop inc jp pop sbb ficomp es cmp pop int3 mov cmp mov (bad) lock (bad) adc nop xchg jo sbb icebp inc mov xchg je add fisubrl nop pop shld popf pushf bound cmc add pop jbe pop out dec std test mov cmc movsb xchg scas and xor and sub call loop or mov pcmpeqb xchg add cmc dec das stc in mov and jbe es pop add insb cmp pusha pusha xlat int or push push loopne and cmpb lods ljmp lcall push inc lods lds mov aad popa shrb fmull int3 (bad) gs xchg stos adc lods mov add scas sahf rolb xor and sbb dec cmc scas rclb es scas xchg add push cwtl loope pusha mov test (bad) adc es icebp adc jecxz test inc mov inc sbb je xor loopne xor fild std and fisubl adc push mov adc rcl xorb test test dec dec add and push adc push les js movsb pusha and (bad) icebp push dec popa and add or std pop inc clc inc test sbb jb sarb push fs out (bad) jno sbb sbb mov push fsubs jnp add clc add inc jns lea pop fcomps mov mov xchg enter push or add mov or nop xor xor divl push mov (bad) in test and outsl sbb jae xor outsl lods mov and aas rcll fistl mov jp fcoms pop dec (bad) add xor and insb dec rcll arpl cmpsl jp iret xor mov mov adc xchg popf mov adc or enter lock psubb push (bad) push fstpl dec test (bad) movsb push pop or fstp (bad) xchg nop shlb sub lock cmp (bad) ja mov sub mov loop inc (bad) sub jo nop shrb mov sbb inc lods add mov jp cmp movd loopne cmp nop pusha dec mov add cmp jmp lea jne loope inc or xor xchg dec and fidivr push dec into lcall inc mov or lock sahf xchg pop loop cmpsb fdivr or std or pusha jae xchg cmp add fs dec dec decb add scas mov xor sahf xchg and xor inc mov sbb movb movsb sub and test (bad) mov push add outsb pop cmp add lret pop adc inc mov nop mov push xchg iret mov dec xchg mov push lods fdivl xchg or lret in or mov xchg add cmp cmpsl and jo pushf pusha lock dec sub mov inc mov mov sub dec test and sub (bad) and dec mov fmull mov adc mov or xorl nop mov mov xor xor lods mov stc dec (bad) jno or iret enter ret jb dec xacquire xchg fist adc or inc cwtl sbb fsincos cmpl add mov or add lea cmp popf or jno xor add sub adc nop add aam mov jo mov pop jecxz xchg mov sub subb and aam fs adc xor jg aam incb lds cmc sub rorl sbb sarb xorb mov in inc rcll sbb rcrl add test pusha fnsave push out sti push dec add jno movsb int3 sbbb (bad) add add bswap test incl std cmp fdivr mov pop jo lea sahf and sar sbb mov pushf sbb test leave mov pop dec in or cmp pop jbe mov cmc mov js ktestw xor rorb lods or mov pop cmp adc pop add push and sbb cmc add mov pop xlat adc sub mov lret jno insb cld or cmp cmp adc dec and stc ja lcall stos test mov sbb aam nop ret mov and dec imul jns mov push sti xchg inc shll (bad) dec mov add fwait adc je cmp int3 push nop cmp push pop sbb shl insb js int3 pop lods ds cmp xchg out andb xchg and xor rcr add mov xor and adc outsb sbb mov shl push xlat mov sub into dec sub or mov sub incb dec add jne cli add jns fwait nop sub inc mov mov insb daa sbb xchg or mov lock cmp lods fcmovb les and xor pop inc or sbb js out lret lock jno xor add pop jecxz popl js pop mov test and push push sti daa iret ja dec adc or lock dec jnp call aad negb fmuls xchg rclb mov or in jl dec xor sti xchg sbb cmpsl cmp shll jbe inc cmp adc imul psllw sub clc cmp sbb js lods (bad) jl inc ficomp cmp mov nop xchg cmp add ficompl pop aad jno add je push movlps ljmp add pop mov inc add cmp (bad) dec test sbb xor jne adc (bad) adc rorb aam jle cmp add scas xor sub inc je push clc pusha inc adc test mov cwtl push loope jno mov mov and rcrl add lods repnz lea xor sub sarb je aad xchg nop adc lods or mov aas cli call mov aaa cmp pop cmc add repz sti mov mov sbb xchg lock push add test xchg les lods dec adc or aam popa sbb (bad) dec jl js pop adc add lock sbb aam ja sbb lock mov popa cmc dec je out sbb jbe and popf sbb cmp mov fs sub inc mov test mov xchg inc nop mov sub daa push inc in mov test sub sbb add mov fwait loopne push nop xor sti xor lock or in pop cmp aad cltd or xor and and push or mov sbb add sti lcall sbb in lock scas rolb cwtl insl push xlat std and sbb jb insb add out in xchg pop in adc xchg and fs mov xor cwtl dec adc and sbb pop add xchg sub test dec add jmp and add xchg jne xchg sub add xor cmp adcb std xor gs int3 inc push pop fsubrl sub inc movsb (bad) cmpsb (bad) clc cmp scas rcrl cmpsl mov cmp shll loop (bad) pop pop sbb rolb pop or sti dec ret hlt add cs mov jo shrb mov aas movsb or mov repnz sbb push gs dec xchg cmpsl inc aam cltd dec out mov mov fwait mov outsl push nop and pusha mov sbb xor fstps daa mov xchg dec cltd test mov cli dec mov sbb stc xor and loopne jnp jb sbb pop dec sti mov cmp sbb and push fisubl popf outsb sbb aam or sbb or jnp iret cmp dec push andb mov rcl add adc rcrb aas pop cmpl lock sbb es push (bad) or mov lock movsb inc pop popf out bound pop xor fisttp add sbb push add arpl push test pop mov push lcall ret stos xor out out push aas fnstsw push dec cmp mov pusha or adc clc and psubd sbb stos loopne jnp xor jg and mov in rorl adc in mov or jp or sub pop test mov push or sbb mov arpl stc add add dec xor pop cmp fmull lea mov pop icebp ljmp mov pop mov add test clc add push push push push sub sub pop shl neg stc int3 rolb mov jmp cs xchg in pop add shll test or (bad) sbb and lret or mov inc in push out shr mov push xchg aam push mov add cmp sub jbe mov test or dec push adc mov lock jmp (bad) in mov xor (bad) subl cwtl mov or jmp cmpsb inc pop (bad) scas shrb fbstp mov je in ss sbb sub push push mov lea or aas cwtl sub sbb inc or not sbb pop arpl dec jne scas push test incl out mov fs sbb and stos in inc xchg xor pop neg hlt dec jmp dec pop adc pop frstor das out rcrl add jnp and mov sub sub pop rcrb lds inc xchg mov mov (bad) pop mov add repz cs push lret xor in ljmp std pop sbb sbb push loope add es and test cltd pop and sbb shl shr inc pop sub xor mov mov mov add out or jmp ljmp mov and push add sbbl sub xchg or xchg adc roll jno movsb or imul sbb shl push add out dec pop push add cmp fucom dec es sti fistpll loope push ss ss rcrb adc stc addr16 loopne adc jae in dec mov and sbb pop sub rol stos ss inc push sub add add popa movsb xchg xchg idiv (bad) aaa fidivrl movl dec adc inc add push push jmp sub pop push js imul in nop xor movsb xor icebp loop xor in (bad) loop adc lds lock pop pusha fistp (bad) mov xchg popa sarb daa daa lea (bad) pusha call sub cmpl add (bad) mov sub add and and data16 scas adc mov into repnz pop iret lahf push sub or lods sub das sbb (bad) loope cmp xadd add fsubs testl push call lds inc ret fnsave mov mov repnz push cmp shl in xlat add mov pop shr jmp dec dec sbb rcll mov push mov dec bound adc insl je push mov jecxz jbe add stos pop and (bad) mov push or test mov adc push movzwl bound and daa lcall add or std inc and outsl test ficoml and and push mov adc test sbbb push ret adc xor inc mov aam or pushf mov subl add cwtl add pop jns pop or mov xchg out sarl adc pop pop push mov sbb inc or add call or pushf add xchg cmp xor push daa xchg pop pop nop sub (bad) jae xlat adc pop loope ret adc sarl arpl rorl nop pusha iret sub or mov sub (bad) dec push mov adc push dec inc shlb push push (bad) jmp inc add (bad) sbb xchg and or push mov test mov or push or add outsl aaa ss stc cli insl xor dec jb mov add fistpll and test das test and cmp sbb xchg jg adc cli fisttpll sub add into push imul cli sub ret inc sub into mov lret subl lea lret bound cmp out rorb (bad) out sbbb dec sub jae and jne add scas jmp mov rorb sarl mov orb and xor fs jmp or rol out (bad) adc sub das xchg mov sbb adc add mov or insb mov xor mov loop add (bad) xor data16 sbb mov add pop xchg add rolb add and mov jle jnp fidivr aaa data16 cmp or mov and adcb or adc push sbb jmp (bad) add (bad) push bound mov mov cmp hlt repz cmp fs (bad) rorl sub xor inc inc pop inc xlat xor and pop mov sub push add sbb or xor cmp movsl sub and dec xor out fs repnz sbb mov and or dec push fwait mov adc or xor cmp and cmp adcl inc xor xchg dec and inc sub ds adc add shll inc pusha jns mov out andb and dec xor into sub xor sbb mov jge and and mov daa add cli sub fcmovb jbe dec movsb ds pop sbb sub or (bad) call insl pop test push (bad) sysenter mov dec int mov xor cmp sub cmpsb clc push add (bad) les adc sub push sub mov or and movsb push ret fisttpll push jmp sub add sbb out pop push sub repz cltd push je push daa add icebp rcll push rcrl xchg mov inc adc and sub and cltd xchg mov (bad) xor or notb adc dec add fsubr add jnp push add xchg add repz push imul add jecxz inc and sub mov cmp into and pop pop cli jmp sub dec movaps xor mov fstps into xor push insl or out (bad) addr16 xchg ljmp out adc jbe inc sub stos adc lcall ss iret xor xlat addr16 push popa mov das mov les add ss xchg lret (bad) pop push jecxz pop inc ss dec and xor adc sub and sub dec add and stc ljmp shl test cmpsb ret orb xchg cmpsl cs adc mov mov mov cmp aaa (bad) loope pop sub and pop or xor cwtl (bad) iret adc jno cwtl push imulb scas or xor or add sub add dec loop push or and jae cmp es out sbb aad mov xor call aam lret add add and push iret sub ljmp mov movl sahf or (bad) sbb xor int3 add (bad) addr16 (bad) adc lret insb clc mov xchg and pcmpgtd or xchg call add mov sbb (bad) pop ficom xor notl push lret inc (bad) and les es pushf push add cli mov mov mov icebp dec (bad) sub jl inc push push xchg ljmp push loop icebp test or add xor and xor push or rcrb mov mov fistpll jecxz xlat int3 xor ret call push or sub pop insb jnp xchg arpl or jmp or loope push mov or inc out sbb cmc mov or mov add and inc and sbb mov test xchg leave clc mov and xor adc jo xchg push inc adc lea mov and ljmp imul cmpsb rcrb cltd lock add or or sub push or add mov and icebp xchg pop add add adc pop adc sbb mov in dec sub imull xor ret mov and imul push mov mov xor inc xchg adc or rorl (bad) dec icebp jmp pusha and xlat gs push test xlat add pop add cmp (bad) adc sbb stc or xor cmc divb pop push imul lea push (bad) dec addl fptan adc mov jbe sbb xor jmp repnz jae mov (bad) icebp int3 shll cs (bad) lret or aad inc or mov xor or or fstpt shlb (bad) xor enter mov and mov or mov rorb mov adc and aaa and dec jbe fwait and sbb push rcr or (bad) pushf cld mov pop out push mov jecxz (bad) xor sub or sbb add inc notb dec push push ret cltd fldt cmp lret sub inc into mov inc lret xchg clc test outsb xor push and movsb pop (bad) mov enter inc add fisubl xor and dec fcoms popf cltd repz loop inc or add mov xor nop ret jmp movsb clc and dec lods and sbb sbb xor adc add or add jmp aas add cs sbb fcomps out sub pushf mov arpl addb add mov fwait lcall lods sbb xchg int (bad) jge xchg sub hlt cmp xor (bad) sbb out andb xor xlat xchg mov roll mov stos push xor pop mov jmp and movsb repz xor sub fcmovnu pop (bad) cld push xchg or push ja adc rolb sub pop int cmc (bad) mov mov mov stos negb sub mov imul add les adc pop inc dec or cmp daa rcrb iret inc (bad) mov imul nop mov push inc (bad) sub xor les lock xor sub sbb lods (bad) lcall popf and sbb or pop insb leave mov ret cmp xchg bnd xor popa leave add loop dec jle pop jecxz (bad) lret mov add loope mov (bad) xor or adc push pusha mov dec mov and add dec movsbl sbb pushf or int3 pop xor xor jecxz rorl and xchg test insl nop dec mov dec xor dec ret repz or mov add push sub or xchg pop xor ret pop pop movsl adc fidivr and xchg mov dec repnz cwtl stos inc sub pop sub add or add mov mov test sub pushf cltd push das pop adc fnstenv add sbb addl sbb (bad) insb mov shrb lods cmp packsswb push sub sub iret push pop rcrb out (bad) lret jns or js push es stos arpl cmp lods fsubl push xchg dec repz cmp or adc add adc cmp fs test cli push mov mov mov mov dec and push push mov mov pushl cs (bad) les mov pop repz mov fistp out aad xchg cmovnp idiv jmp cmp test cmp (bad) lea xor add push lret (bad) mov jns sub mov cmp dec repnz data16 pop mov and scas movsb mov (bad) out inc and add push pop dec push dec xor mov pushf je adc and lea sub cmp mov and fs aas mov push mov lock inc or mov inc xor mov imul lret push cmp mov mov push mov (bad) mov movsl xchg mov movsl out dec ss pop add add test and xor xchg scas movl aaa adc hlt test orb add add pushf shlb dec hlt cmp pop shr xchg and or ss aaa jmp cwtl adc lret pusha pop mov and xor rcl jmp sub mov enter enter and mov mov sbb xor (bad) mov mov dec lcall adc jbe lret mov ret fwait repnz xor push mov add xor call sbb add repnz ja enter repz dec xor arpl xor pop push mov popf subb mov icebp psubb mov mov push es add sub or mov lret mov sub dec or mov pop outsl leave (bad) stc adc sbb rorb sbb test testb cmp mov adc icebp ja inc scas dec sbb stc mov mov pop xor mov ret aaa lret out push add arpl xor dec dec cwtl in dec push lods loope or or inc xor dec sub or cli int lahf test lods mov jge xor jbe jecxz push inc (bad) jo lods out rcl mov popf xchg movsb mov pop xchg leave mov lds adc loop std out fsts (bad) push fs push push lret inc lret mov mov sub roll outsl inc add enter xchg sbb rclb and pop mov mov (bad) (bad) (bad) mov dec (bad) sub lcall in (bad) jo mov notb (bad) je stos pop xchg ds xchg fs iret (bad) push adc or push test inc enter shll cmpsb das fs les xor xor ret mov push xchg mov fsubr rcll loop cltd aad gs js pop repnz repz js mov mov dec enter or jno dec or loop clc xor cld xor (bad) hlt pop out xor cwtl loope dec cmp mov jmp adc aas fisubrl (bad) (bad) xor mov sarl dec and sbb xor popa and loopne out add xchg cli lods les mov lods scas mov pusha add sub and movsl cmp imul dec inc push adc sub xor sub (bad) imul out jmp les cmp xor push leave dec inc leave sub add test mov adc into icebp sbb lret inc add fldenv das iret stos test test lcall and push sbb pop fnstcw or dec mov push mov faddl push jb xchg into mov and loopne push xchg mov decb (bad) mov imul pop push (bad) mov add clc sub xchg adc add mov dec sti pop adc xor xchg repz push inc adc push sub fidivl loope fisttpl fcmovu fisubrl movsl dec jnp and fdivl out pop mov test in es cs fsubl pop xchg cmp imul xor or (bad) jns movsl fs pop adc insb xor and push loope pop fnstcw add aaa xor pop inc xchg add xor xor (bad) call in mov das mov repz repz ss adc add mov enter loope jmp sub sbb dec fdivs les push enter jmp mov rorb xor push xchg lahf nop cmp stc mov jmp lcall push sub ret xor push and pushf scas cmp mov (bad) pop divl pop mov dec inc xchg and inc sub mov push or push push pushl inc xor xchg fbstp lcall leave cmp mov xlat js and (bad) xchg cmpsb arpl jnp imul jns movsl xchg xchg inc stos je imul divl std lret sub repz cmovae outsl mov pop leave mov push mov and add mov or cltd sub sub shlb xchg rorb test imul jnp (bad) repnz adc push adc pushf leave or dec push mov (bad) mov mov aam and shrb (bad) jp movl inc sahf aam xor je gs fs cmpsl adc jl pop dec sub sub dec jl repnz in inc mov dec insb jl jmp lret aaa pop mov out rcll out xchg mov mov adc mov jle insb leavew insl out inc adc mov mov fxch jl push or add sbb pop sarl out and adc repnz lds repnz enter fmulp inc push xchg sahf es push lret leave pop fs mov dec lock mov and fiadd (bad) shlb fidiv inc xchg push adc outsl xor lahf xchg addr16 ret xchg adc xchg movsb push pushf pop lret cmp or xchg lret js jno shl movsb mov lods ljmp pop ljmp (bad) adc popf repnz inc or jno sub cmp xor mov mov in iret movsb lret adc rcll aam adc mov adc mov lcall mov into mov rorl out sub xchg scas dec lret sbb and sub jo fisttp add sub mov or jb out cli mov dec xchg ds jno pop clc push xchg fwait es pop out xchg add or imul mov push push mov jo and gs icebp aaa cmp movsb int3 shrl sub add test cltd push xor sub divl inc add push cmp sub dec xor pop fadds pop pop xchg adc xchg mov das cmc aam pop cmp xchg sub xchg mov (bad) cmp sub mov xchg sub or repz xchg insb add mov inc scas dec addr16 cmp lahf adc xchg test bound movsb (bad) mov (bad) pop les mov mov xchg push lret mov iret pop gs repnz sbb (bad) jbe call aas (bad) (bad) and mov loopne (bad) xor xchg icebp mov ret ret popf rcrl xchg dec add mov push (bad) repnz xor dec add vpsadbw and cmpsb pusha pop test out and and dec iret cmp rclb push repz add xor xchg fcmovne jl dec or repz imul xor jp sub test add dec inc xchg or jo mov push cli into and cmp add inc lret or mov xlat rolb mov xchg (bad) jle jnp mov rolb lret xchg mov call pop mov or xor mov sub mov jb xor cltd xor lock repz pop mov pushf dec out add xor (bad) ljmp outsl sub inc xor (bad) mov sub add cwtl xchg xor sub lret dec mov cmp aas lret dec and in mov inc jns dec add xor les lea and cmp xor jno das sub jmp imul (bad) stc pop pusha xor mov mov sub dec and push sub dec shlb ds icebp sub xor idivl or sub call mov and into js mov push fimull ret sub cltd sahf out outsl add negb stos sub ret or bound xor loope icebp jbe inc mov push push (bad) mov arpl loope pop mov dec fmuls lret bound or dec and mov pop icebp cmp mov fisubl lretw lea mov add jb (bad) popaw xchg or das and cmp dec bound jmp repnz in fnsave aad (bad) int3 (bad) pop scas sbb xchg and cwtl das add std aas push cmp pushf (bad) repnz jmp daa sbb sub jns gs aam scas sub pop add and out sub cwtl push sahf add clc sbb add xchg aad daa pop xchg lds sub xchg adc pop decb je cltd add (bad) dec ss sti xorb and mov push or inc clc xlat dec push xor xchg mov xor push mov and rcrb jno mov into loop aam and dec (bad) outsl (bad) clc lock pop pop push int jb,pn push repz into jns xor xor dec and lret pop dec icebp xor xchg adc push push (bad) mov das ljmp sub rolb out dec and adc roll push mov sbb add rorb not aam pop pop cmp ret fisub jecxz cmp sub sub mov popf jo enter out sub enter stc dec dec bound cmpsl jp xchg rclb xor cmp popl jno movsb nop and xchg xor xor jl xor mov jmp ret inc jb adc bound cmp push xchg jbe out jb je dec fstps xchg xlat xor cmp sbb or test mov rolb or and mov or sub (bad) icebp add xor jle imul sbb imul ret inc xchg xchg loope,pt ljmp jg fcomi mov and ret vmovups mov xor imul dec adc mov cmpsb andl lcall addr16 insb cmpsb ss xchg outsb or in (bad) scas push sub out xlat repz pop xor cli xor out pop xor int xlat das (bad) dec bound xor cmp jo loope loope iret xor jno into cmp int inc add daa js mov in mov aam dec xor jmp xchg xor pop sti out pop xchg mov or cltd cmpsw cld xor xor movsb inc or cmp in cmpsl out out hlt (bad) mov gs mov cmpsb test sarb jl mov mov add xchg sbb fist adc xor dec mov leave push pop lds out adc into loopne pop or mov movl pop pop pop pop adc ret mov cmp push and inc sbb iret jg clc stc xchg cltd pop add enter dec jmp xchg mov add aam loop mov xor lea xchg pop dec xchg aad jle outsb (bad) popf xchg push pusha std cld mov enter push vmovlpd repz pop mov daa mov (bad) leave mov jle lahf sub inc or icebp rolb movsl mov cmp addb stc mov mov imul jns leave cld adc pop cmpsl mov push test pop rolb repz jecxz fstl out add cmpsb cwtl pop adc add add pop or xchg mov add push sbb sbb cmpsb lods adc sub adc inc and ret xor ja imul test in adc leave inc (bad) icebp add (bad) das xchg and gs mov lret add in xchg lret sub clc lahf mov mov inc sub lea out or xchg sbb and data16 xchg lods sub xchg pop mov push stc lods das (bad) mov push int3 stos dec into mov jle je dec fsubl (bad) or mov pop (bad) insb addps repnz ljmp daa inc and mov mov popf shl pushf cmp sarb ret mov pop push out imul dec add dec add pop cmp mov stos sub sub (bad) repnz adc xor lods lock jns inc andb jbe and in xor movb adc xor mov mov mov mov sub out orb pop out sbb pop push xor (bad) mov mov and dec xor ror test mov ljmp ja pusha cs jl dec pop cmpsl push js sti dec ljmp add sub cmpsb inc pop push cltd mov cmc mov shll jmp lods mov mov mov or sub aam xor inc mov ret je pop js push mov pop (bad) mov ljmp or or (bad) lods (bad) hlt xor pop sub mov les stos pop mov adc or (bad) xor inc js mov imul in ror fimul jecxz sbb lcall pushf xor push or mov xor lods jb sub les xchg lcall testl dec push or stos test sar ss negl (bad) cli rolb sub add add out mov mov pop fisubl into and cwtl repnz dec inc or in xchg aas add aam fnstcw enter mov cmp sub out xor sti add loop fadds lret cmpsb int3 pop (bad) mov dec out and fist mov xchg testl mov mov stc jecxz les mov xor sub pop rcll stos sbb lret (bad) and sbb fcmovnbe jne cwtl leave add (bad) mov mov bnd pop or dec mov (bad) mov (bad) mov adc mov add sbb mov mov movb aad int3 inc leave inc add cltd or outsl jp sub int3 fcompl pop mov push test xorb add outsl mov call jae daa or mov mov test mov aam into push xchg pushl add sub cltd lret bound sbb xor xchg lcall or cmp pop mov das and fxch mov (bad) adc test add add movsb fcmovb je loop (bad) repz adc repz xor or into and sub das inc pop mov pop jecxz mov mov mov cmp inc sub cltd dec cmp lods xchg sbb icebp jbe divb lret sub loop add jns inc mov cli adc repz das into lods popf add fcomps xchg and mov pop lock bound mov mov daa xor insb (bad) mov mov jecxz dec jb test mov call std outsl les leave test adc sub sbb cmp aad leave rcll lcall push inc push pop lret pop xor insb xor outsb bound call or add loopne icebp sub sub mov ds int3 or mov adc es sub in xchg mov es xor xor add dec dec xchg out mov dec iret cmpsl enter stc cmp mov sub xlat adc pushf std and push jmp jp mov mov leave rolb and subb lret mov negb add add repnz and pop pop scas enter negw mov inc (bad) or inc (bad) repz add or xor mov mov or pop iret push pop (bad) icebp or lret aam mov das xor push sub mov (bad) fistpll sub je in and lock push movsb cld pusha aad cs or lret nop imul inc out and testb pop pushf (bad) sub or add fisubrl (bad) inc and divl insl mov loop mov dec or shll or mov xchg ret mov rol imul xchg sbb add inc mov xor les adc enter xor mov cmpsl (bad) out sub add add or iret mov pop add mov jmp sbb fwait imul jp add stos jno mov (bad) into xchg ret push push rcrb fs xchg xor rcl test and arpl dec loop fisttp lret hlt dec inc lret push scas xchg (bad) cwtl sub cli scas adc clc add mov mov sub mov push mov sar imul pop xchg push out mov test mov mov fadd (bad) je cld leave mov xor (bad) push mov inc xor cwtl cmp mov imul hlt mov les cmp movsl test mov insb (bad) sarb cmpsl fisttp dec xor leave and sub mov xchg push popf mov andl nop outsl jo mov ret mov adc ret lea xchg pop xchg xlat xchg lret jp mov jmp dec push add jg or sub push mov inc jo (bad) leave mov sti movsl adc cmpsb fldt push xchg mov push lret les enter (bad) aam lret mov mov sub js mov shrb mov add mov dec push xchg xchg mov pushf lcall popf xor ret pop loope sub movsb add mov inc xor (bad) stos cltd xchg shrl push cmp xor sbb cmp (bad) shr fmull jb insb mov push stos adc fcomp mov cwtl pop (bad) popf inc mov jp dec sbb add das adc jecxz xchg pop lret lret mov repz lret jecxz mov test or loop popa out ret mov adc push mov add xchg call inc (bad) ret test xor test mov das outsb cmpsl pushf adc jle sub mov sbb and mov clc imul mov push xor scas sbb (bad) jle cmpb adc inc and sub add les gs scas dec sahf add inc add or faddl mov jno add jmp sub pop jp pop push mov sub cs jmp (bad) scas leave mov data16 adc sub adc ljmp insb xchg push leave ss roll sub push repnz jnp lahf insb cltd mov repnz dec sub push lret call stos or cmpsl adc dec fdivp std dec mov (bad) aam mov mov int3 movsl (bad) jp ds mov popf rorw xor and pop xchg mov mov jl fs jp loopne inc push gs enter xchg pop loope (bad) jno xchg icebp mov add sub mov in pop push jbe push out pop loop sub sahf lods daa into jg (bad) es test pop les clc daa mov push cmp mov sbb xor (bad) xor sbb fdivrs popf into dec xchg popa add movswl decl out stos je jecxz add into sub lods and mov dec jecxz dec (bad) call and negl andl es sub mov sub in mov pop or mov xchg cmpsl xchg in sbb and (bad) xor (bad) inc iret adc orl jmp sbb cmp leave add sbb js pop stc push dec leave rol mov sub jo and mov inc xor icebp cs int3 sti sub mov xchg movsl cmpsl icebp subl add push insb adc and sti fcoml mov add divb jnp add jne cmp push push repnz ss cmpl aam enter out and das ret repz insb jecxz mov dec push add ljmp add adc fstpt sub mov cmp shrl push pop (bad) mov adc push push imul fidivrl (bad) dec fcomps xchg lds adc cld sahf dec ffree add pop mov call in dec pop (bad) js inc lds adcb jo mull fbld sub les lret sub js popa aam jp (bad) dec mov push push and lahf adc loopne iret mov mov ss mov dec adc loop mov cli xor sub sbb call mov cli xchg in adc lretw pop adc sbb pop loope sbb jmp sub test add mov aam cli fist inc pop mov or call mov divl and or or fwait dec mov (bad) xor or xchg jmp add and xlat sbb into dec les pop movsl (bad) dec dec je scas mov xor xor in cltd lds (bad) cwtl jp fnstenv out popf roll (bad) mov shll or mov (bad) sti scas mov xchg push fcmovnu push lahf pushf test (bad) mov imul adc sub pop inc in ds xor xor mov pop dec shrl and jp mov dec sbb add xor add cmp mov pop pop or lea imul dec inc dec pop aad xchg jl gs or sbb push je imul fildll or add mov sarl and jo mov push cmp jl bound adc jmp adc mov out ffree adc jge mov dec and movsl jle (bad) leave (bad) clc mulb out pop or mov adc gs add shll and daa sub in scas add xchg and ret data16 test rcll and int mov fstps mov stos jne lods mov notl or xchg out bound in fs jmp inc add in in jns and (bad) jae ljmp stos leave rolb mov mov sbb les loop inc or in jmp mov xchg imul dec int in lret sub lods ficompl repz call push mov popa sub movsb fwait jp cmp sub cmp adc or int pusha inc sbb xchg sub jmp mov add sbb xor mov xor and rol pop mov dec sbb and add or jno sbb lret add icebp cld add cmp fimul out xor lods xchg mov loopne out pop (bad) imul or pusha ss push and jecxz dec mov push pop or movb les xchg dec xor (bad) jne pop mov pushf test jno mov pop mul sti vmovaps std push (bad) cmp idivb data16 lcall ficomp dec inc sub bound xlat xchg inc adc sbb aad stos or push icebp into xor out xchg negb movsl push and sbb and test fidiv sar inc xor out shll inc jp outsb aad ljmp out (bad) dec icebp adc or (bad) mov out subb fs loopne shrl enter decl dec pop repz xlat jmp push out imul cmp out pop mov outsb mov sbb mov inc jmp mul jns fisttpll xchg mov pushf clc cltd dec sub xor int3 and mov xlat jmp or les inc mov mov int3 fsts lock mov inc fisubl add sub push lods dec adc js cmp imul test (bad) xor dec inc cmp movsl lds lods mov loope bound or ret sarb lcall jmp (bad) clc mov push xlat sub jmp shrl xor push sbb inc xchg cmpsb sbb fmul push jne mov adc cmpsl out dec pop pop sub inc popf mov into xor sbb sub mov and fildll push fs sub icebp scas mov ret lds mov add inc add int3 sbb xchg out repnz jl add incl push dec repnz add jmp lret and and inc ss or setb cmp (bad) rorl xor xchg sub cmp mov sub imull xchg loopne enter mov ret ds lea mull push aaa frstor sub lcall icebp sub mov hlt mov lods xchg mov pop xor xor out cmp inc and mov cltd dec adc ljmp mov mov movb or lea mov adc lods shl repnz dec test loopne bnd sub in outsb and xchg out push fsubl dec stc xchg adc loop leave lret rolb push push fcmovnb in testl add int3 ss and add and add loope sub sub or testl or push add mov fucomip test sbb out lods test ljmp pop daa (bad) push push xchg and jp mov pop or scas cmpsl out and push fs mov stc mov adc or mov and jne inc pop je or add sbbl mov pop xchg repnz sub lret testb lcall shlb pop cvttps2pi bound dec adc cmp dec xor lock mov xlat mov and or adc and or pop add loop add add and out clc (bad) add sti gs xor sub xchg gs adc mov leave add lods (bad) jmp jo dec mull (bad) xor mov xchg fcmovnbe movsl fistl sub add mov out sbb or push mov insb inc push jecxz xor cwtl pop lret loopne mov pop push mov mov ljmp adc push je add dec loope jnp push testl mov cwtl ret pop fdivl loop adc loop lret add daa inc enter (bad) mov mov das gs loope aas sub je push pop sti sub mov xchg adc sub addb inc xchg scas push daa push cmp insb mov fist sub adc cld sbb sub test stos sub push mov test xlat xor lret daa add mov mov xchg push testl xchg lods mov enter xlat or and sti or iret pop mov mov in mov jne test bound mov or xchg stc mov icebp inc lods (bad) ljmp out out xchg jns imul xchg push (bad) stc inc lcall or (bad) loope jne mov adc in repnz addb lods in lret adc pop mov mov into adc shlb jmp (bad) add out rolb sar enter dec mov xchg out seto inc push mov (bad) repz jle or repz pop out inc data16 das inc xor mov pop or or push pop add pop xor icebp scas (bad) dec add mov jno scas cli fstpl je ljmp adc popf dec dec jne xor add cwtl adc xchg adc daa add into test pusha xchg sub jmp lea (bad) push stc sub orb jl (bad) and fsts mov leave ret fistp (bad) divb bound mov xor xchg jge jmp inc das jno mov add popf mov sub lock xchg mov sarl subb adc mov sub lret (bad) dec jne mov dec sbb mov pop mov adcb fisubl mov push and add ret mov or call iret popf cli sub pop fsubl inc lret xor repz adc iret mov pop push jecxz xchg jmp jnp bound push push pop rol sub lock dec or and stc sub adc sti daa fidiv mov js inc cmpsl je iret add sub out lock sbbb mov xchg call jle or add dec and movsb mov cmp dec loopne sbb jns icebp mov fnstcw cmpsb mov fimull dec ds add sbb pop lret inc lcall inc iret xor rcll mov divb pop mov (bad) push inc das mov repnz imul pop push and mov mov mov sub mov sbb lret addr16 outsb dec lock js call push es sbb sub popaw sub push enter sbb sbb scas es mov mov mov and mov push push inc dec pop cmpsl (bad) inc mov fmull xor dec pop lret cmpsb shll jmp mov mov and dec ret inc bound iret rorl push aad xchg xchg test ljmp repnz lock xchg fsubs add cmpsl sub scas sub rcrl dec testl mov xchg cmp mov hlt mov pushf cs pop enter je imul lret test fisttp out xchg mov cmpsb jns int adc push ljmp js movsl clc cmp fist daa pop xchg xchg iret lret jmp je dec or (bad) xor roll fimull push mov add dec jle sbb in outsl lret fcoms add cmpsb dec dec lahf xchg call scas add (bad) (bad) in adc add movsl xchg ljmp xor negl leave insl sub jle pop test mov fmull (bad) stc and insb lahf xchg sub xor or add je cltd cli aas hlt sbb mov out mov and sub xrelease mov push cmp dec loope sub cmp fisttpl setno dec mov push add fdivrp push out les sub inc mov xor cli (bad) (bad) cltd vmaxss das push cmp jg mov mov mov inc cli mov mov ret fwait add pop loope cmc or pushf mov jle insl les (bad) push mov sar jmp ljmp aam push sbb adc nop sbb cmp jmp ds pop adc sub add popf rorl mov push cmp sub adc pushf mov in mov sbb sub pop das shrb cld pop (bad) cmp mov in push fimull mov (bad) cmpsl lds xchg mov outsl pop mov fwait push add vpmulhw les pop mov mov xchg data16 cltd adc xchg movb nop mov jb mov or cmp mov jecxz movsb scas sub in inc int3 pop lret jb out sbb adc add and mov rol xor or out loop sub pop loope iret das fnstenv push pop shrb daa fildl daa sub je or add ja aad jmp mov xor and lahf pop stc pop iret pusha (bad) xor sub repnz (bad) rol dec sub jb mov mov push cmpsb addr16 stc lock xchg jnp stos adc fbld mov into (bad) dec in add div fs mov fisub js xchg outsl pop pop cmp scas mov or add cltd dec outsb test cmp push add mov mulb popf jno repz or ret stos cmp fwait out mov pop out and test movsb les call xchg (bad) or jne inc repnz cld in out xor add popf mov out cs lds pop jmp inc repnz or inc es mov xor ljmp cmp pop int loope daa loop mov and pushf movsl in and mov aaa (bad) ficomp in inc ds jns lret sub inc xlat ljmp push je es push ret gs sbb daa imul push fsubrs xchg loope pop lock add add popf adc mov cmp pop and addr16 push adc lods divb mov xchg (bad) out mov xlat lods dec and add xor jge or sub (bad) and and in hlt jecxz xchg jmp fcomps sub dec repnz add inc cmpsb roll (bad) push les mov or rsm fdivrl sub fmull or hlt inc imulb ret inc repnz mov and cs xor sub (bad) shrl cmp push add outsl fs push test movsb popa mov cmp dec int inc pop xchg and xchg push mov leave nop iret call ss mov add add mov sbb xor stc std repz incb out popf xchg aad mov jnp loope mov aas cwtl inc mov daa mov pop dec push popf mov push sahf daa stos inc aam push test mov loop mov dec lret dec icebp sub pop fiadd sahf ljmp in in lahf test idivb negl push ret out mov divl aas cs cmp pop cli dec sub sarl insb mov int3 cmpsb mov xchg lret jl mov insl jb xor sarl jno sbb xor out cmc or or jne aad stc cmp lret mov xchg fucomi fs lea dec adcl fnsave inc sub stos fmul add mov pushf push xchg fistl roll mov out sub or xchg fistpl sub hlt cmp loope push rol jmp or dec or and das fldl and xchg icebp inc sub add xor mov mov jns mov mov add imull pop inc inc ret or and inc test roll sub jecxz mov xchg push daa cmp leave aas mov daa sub or jo xor les ds out xchg cwtl rcll xor dec mov jge (bad) into xorb and adc (bad) cmp icebp sub sub js pop mov mov mov inc into sarl pop adc dec cld insb and push call push (bad) inc xor mov scas jno sarb or out fs push mov lret and push bound popa adc inc sub js sub xchg es (bad) xchg jecxz dec lret inc push inc repz popw mov xchg mov clc lahf mov aam call cmp call mov idivb popa adc push mov mov inc lds xor lcall inc (bad) mov lret test adc ret rol jnp jne inc xchg aas es mov jno mov fisubr out sarl cmp add sbb repnz call jle sub sbb jecxz in inc xchg inc lock icebp nop dec call in sub xchg cwtl add clc xchg sti ds xor sti pop movsl lods dec lahf pop push fisub push and sbb inc rcr pop pop inc add mull out and leave fldt mov sbb ljmp adc (bad) bound popa push stc outsb mov dec lods cli cs jno push mov fldenv aaa pop xor add mov lret add sub xor cmpsb adc pop mov jns lea ror mov sti jo add cmp cltd cmp int and std or mov and xor and cmpb or mov leave (bad) jecxz jbe adc or jmp in and adc pushl adc sub ss mov pop mov xor inc outsl jp ret jns dec xchg sub into mov push into loop mov test icebp adc mov test movsl out xor out push test fcoml lret daa adc xchg insb fstps or out adc or add jmp pop rclb lret out (bad) insl aas daa cld sub jmp mov push jo cli pop hlt rcrl cld pop out outsb lret imull aam lret push cltd dec push push push xor inc xchg xor sub popa push movsl dec cmp or rcr dec repnz mov (bad) dec adc and sti xor mov js (bad) shlb ficomp test xlat adc or sub cmp add mov sub pop or mov sub ffree pop and insb in and fsubs inc out adc push add icebp and mov sub dec popf cmp jle mov lock push adc mov js bound jnp xor push push out fcomps xchg vxorps cld dec daa out sbb fisttpll fmull mov mov pop notl repnz mov dec jns adc pop or ja es ja or jmp movsl mov push push mov xor stos lahf push and inc (bad) cmp imul ljmp mov (bad) xor xor mov add inc imul xlat repz dec in adc sti sub js fucomp je dec cmp pop icebp (bad) jge test enter insb pop dec cmpsl decb fisttp push add iret and cmp dec mov cmp sub sub jl push inc ret or fs and nop mov or pushf popf (bad) (bad) negl outsl sub push mov xchg jae xchg mov jmp or adc push mov sbb inc enter fsubrs out pop mov iret or das sub xchg mov pushf push out xor mov and cld jno gs add adcb stc push xchg sbb xchg stc mov xor lods fcmovbe pop dec call fidivr mov lods (bad) out push dec add movsb (bad) xor call mov rorl repnz add outsl cwtl aaa data16 les fildl call xchg mov and loope sub xor stos cltd lds mov testb add adc pop push adc iret and imul enter enter es cltd imul cwtl mov pop inc or sbb sbb adc enter das into je call mov into jbe movsl pop cwtl mov lahf idivl into adc mov cmp pop popf dec dec stos jg jb pop or mov sti ret ja xchg pop fsts jl js and xor mov stos sub popa gs insb stos popa nop ret pop adc fsubrs dec push repz xchg jl (bad) cmc lock mov les xchg (bad) push (bad) add imul xchg stos mov orl inc and aad call daa out sub (bad) out stc inc dec push cwtl repz mov cwtl mov popf xchg fs jmp sub fcmovu xor out adc les sub lods jbe ret xor and jmp clc adc jmp push divl push lret push xor fdivrl xchg test mov lahf sub xor xchg out mov loop movsl cwtl mov loope (bad) mov adc cmpb or or aaa pop push outsl xchg ja xor xor outsl xchg jmp add xor cmpsb and or data16 and js cmp addr16 sbb sub fwait cltd and ret push sbbl lock xchg sub jg in mov (bad) cmp sub xor pop mov leave jo pop out in dec in add add fistp push icebp push pop add cmc add pop push xchg into mov or mov movsb mov inc dec repnz fistp sub imul sti loopne (bad) mov test and shl adc xchg call test repz dec adcl or or and aaa and or bnd mov hlt dec es pop mov (bad) loope aad mov push mov push je cs js add pop cwtl rol dec push xor loop xor dec mov pop inc lahf mov mov sahf pushf and (bad) repnz inc jnp sub mov in sub mov mov pop (bad) push xchg orl rol icebp cmp pop test cs mov xor pop xchg nop fisttp pop push mov mov pop xchg pop rcll mov mov push xor xor or add adc (bad) les aad pop imul and xorl (bad) or sub mov repnz xlat lods or cwtl push mov clc fmuls xor xor mov daa and sbb xor test mov scas push inc xor lods fstps push out (bad) div xchg mov lret sbb inc popa and jnp jo in imul adc enter add push mov clc mov push out mov and in pop adc mov pop jnp mov or mov add mov jg push mov mov push pop inc push lahf jp pushf add jmp mov push vpsadbw test xlat inc pop nop or inc movsl (bad) push add ror adc or mov pop lds mov cmpsl mov add out sub out bound inc in out mov add and daa mov icebp push xor (bad) xor mov fdivl jmp js sarb sub sub test insb pop mov jo mov xor sub pop leave arpl fcomi (bad) insb fstpt xchg adc lahf inc or pop mov lcall popa sbb das push sub and in das das ficompl push inc fistl out xchg mov (bad) mov fist mov negl lahf sub aas dec mov lods add fsts lret cld and pop icebp pop popf pushf test sub icebp arpl mov aas cmpsb and test xor lcall in mov fs mov rcl es movsl dec loop xchg pusha (bad) lret and daa xor push out roll or cmp push enter cmp inc sub adc lahf insb leave pop repnz pop pop dec xor cli dec aam push std imul xlat mov mov sub push das jecxz das idiv mov ror sub jae pushf stos and pop cli mov or leave add xchg or stc rep movsb and mov and test scas push mov xor in fcmovb dec sub (bad) mov or jmp ljmp cltd adc mov xor mov mov gs das inc mov pop dec sub clc xlat call call in add mov popf cmpsb gs outsl nop mov fbstp loopne jno daa popa lods out mov mov lds xor lret pop das rolb and or out cwtl inc xor sbbb (bad) scas sub xchg push cmp iret xchg clc ljmp adc aam push in scas (bad) bnd movsb jge rcrb or inc (bad) fisubr daa add div mov je sbb rorl mov pop pop out cld pop cmc mov call mov ret pop js sti dec (bad) or adc or xor ljmp sub xchg test test sub xlat lock and int3 out or fisubrl fistp cli in mov ret cmc out das sub repz mov mov adc xor push ds stos and or jnp cmp out bound bound jne xchg or mov lods roll addb lods dec outsb in push movsl pop repnz in vmovaps push jg ds idivl stc pop test xorb shr xor dec sub int3 or out pop repz outsl cmp adc and das mov js rorl lret xor or add xchg xchg ret mov add adc mov or popf sti rep bound ret sub sub mov jno js adc rcll mov shrb xor dec jbe sub dec sub xchg add out fist sub in (bad) mov repz mov mov sub leave jbe mov mov and pop out adc sbb and adcb imul lahf pop mov pop (bad) cmc or test inc dec or add push stc mov (bad) out (bad) sub rcr xchg cld ret mov push xchg mov decb inc aad mov lods icebp test inc out adc repnz adc jle dec lret rorl xchg enter sub dec or dec imul adc mov add mov das mov outsl dec add fidivr (bad) xchg add add inc xchg mov dec jmp daa and dec (bad) sbb xor mov js mov push (bad) leave fcom call repz dec bound xor mov and push add icebp sub add mov and xor repz jecxz bswap pop mov clc imul cli sub sub jne inc push add xchg sti testb (bad) adc mov sar pop iret repnz gs xchg lods xchg popf jb pop leave test loope pop ss inc out mov (bad) lds jp js lahf mov or inc cmp mov sub test fsubrs les and shrl fisttp std sbb dec dec lods adc (bad) lea add inc pop add xor ds and leave inc (bad) jle jmp xor movb mov out and mov fdivrp fxch sub test jns xchg push add and int3 pop imul jnp mov ds xor cmp adc jg imul dec insb sub mov xor add adc xchg add sub (bad) lret outsb sub cmp (bad) sub sbb in daa pop insb test iret pop aas pop fildll sbb into mov and or in push ss sub inc cmp sub movsb scas jno jecxz adc fs cli fdivrs jecxz pop cmc adc test xor mov mov inc imul inc cmp roll xor xor bound add or roll mov push and xchg fisttpll cmpsl bound (bad) lock pop sub pop xchg add in or cmp lahf insb enter adc add pop (bad) dec mov out out and jno or push jne jno sarl cmp cli cmp (bad) mov addl xor add insb jo inc add int3 (bad) div fstps sub rolb xchg inc and pushf pushf mov dec (bad) std test lahf int3 rolb inc fist and mov lret les pop aas cmpsb and mov neg mov cli xor xor and (bad) ret clc sub sub out cltd popa cs ds inc mov xor mov (bad) sub xlat je (bad) repz adc mov inc int3 cmp fdivr and jmp xor inc (bad) ds mov aas dec inc inc loope lock xor mov cmp sti mov mov cmovne data16 orb sub inc xor cmp add push push cmp pop pop or xor out mov adc xor das jl mov mov leave out aam fldt leave pop fsts ds inc mov inc mov fdivrs or sub (bad) cmp xchg pop test sub mov or push sti xor sub cmp xchg push dec cmpsl int scas bound add rorb lret mov loopne in ret inc leave sub or repnz ds repz out sub fldcw popf outsb repz cmp insl cmp cli das sbb and repnz lcall cmp stos or fistpll (bad) sub sub xor fadd sub test mov ds mov jp dec repnz out movsb push loop mov mov adc fs push xchg cwtl jnp mov and mulb cmpsb bound stos lahf rclb cmpsb jge inc insl pop mov repnz lds dec movsb jmp (bad) (bad) push imul or leave xor stos sub pop dec data16 imul clc mov pop sbb ret add add movsb and imul ja or ja mov pop push sbb add jle pop das (bad) sti mov dec (bad) mov pushl mov out js jno les loope ljmp stos sub push cmp or or inc and adc pop test sbb jecxz incl add push cmpxchg in shrb sbb mov pop pop sbb adc jle mov dec push test out pop loope popf shrl ljmp test and xchg adc xchg pop fldenv mov sub mov or xchg test fldenv mov mov gs sub fcmove or stc mov orb jle out jne sub cmp fsubrs out xorb mov lea inc (bad) sub cmp xor arpl inc scas fmul ljmp stos mov sub mul fisubr lret pop lock or push xor testl outsl sub adc xchg push mov scas and and push jle daa mov das or lds push ret and bound jge aaa sub fbld or jg sahf and push pop adc mov stc vmovapd mov outsl fsubrs mov pop fstps je lds jmp add mov adc cmpsl pop sub push cld sbb aaa fnstsw mov addr16 int inc sub cmpsl sbb jnp xor lock pushf jns ljmp mov adc dec or leave dec jle ret fdivr lret xor ja gs or xchg mov inc loopne bound push mov mov inc cmp push push add shrl xchg xor aas sbb jns sar imull (bad) (bad) sbb mov mov cmp leave ret leave jge int3 jge cmp jne xor in pusha mov xchg xchg push pop ja rcll adc mov xchg push mov outsb cmp daa pop inc out cmpsl fsubrl cltd push and lods xchg fbld lret mov fist fistpll or imul outsb cmp sub pop mov (bad) and sub sub stos notl sub mov jmp mov add mov inc xor lret adc fsubrs jecxz aaa or ret dec xchg and subb xor dec add out in cwtl int3 ret sub mov fiaddl xlat cmp sub ret lds daa (bad) jnp daa inc jp repnz xchg imul lock add ret iret mov mov testl ds add pop bound es dec mov rcll adc lods lods xchg lods lea (bad) jbe rclb lret add or mov push dec iret and jg int3 (bad) out jle push pop popf add fprem dec add in xor sub mov sub dec js inc adc jnp cmp out dec sub mov ljmp sarb and pushf sti repnz call fcompl orb or mov push or jl sub dec imulb stc ds leave inc shrl lret pop xchg pusha push sub xchg xor pop mov lret repnz lret mov push (bad) jle push mov push xchg lret pusha adc or mov mov xchg outsb out daa xor sti mov jb ret and dec loop lret ret fdivrl add leave sub sbb mov (bad) cmp adc loop loop mov push xor movaps and repz test (bad) loopne out mov jns mov add or movsl jbe imul lods cltd roll mov adc ljmp (bad) repz and mov add mov add sub dec aas add loope repz mov adc and or jg and clc imul dec (bad) in pop popf push or dec cmp (bad) pop cwtl xor fwait js out inc pop mov imul push cmp adc rorl xchg aas (bad) dec jae push push cli xor sub imul push push dec push mov push mov jne or int3 xchg (bad) dec jg es notb add in js rcrb jl dec add push cltd neg adc mov rcrl leave rcrl mov xor or std and pop push (bad) test or xor pop adc mov scas push push or adc fisub insb (bad) mov sbb add sub push (bad) sbb jbe cltd xchg adc ljmp inc xor mov jmp popa inc das je mov call mov out jecxz pusha mov imul je out pop xlat lods movsb xchg repnz shl pusha sub pushf and jecxz jle push push ljmp push ret dec mov in pop mov cs xchg mov mov jle pop push cmpsb sub in inc xor mov loopne call add jmp lea jp push push (bad) lret sub fist pop lea mov xlat mov cmpsl stos out pop sahf movsl mov jl out rol mov clc inc shrb and mov iret test rorl into pop xchg add outsb sub cmc xchg dec xchg xchg mov gs xchg clc clc xor repnz sub pop (bad) stc popf xchg xor xor sub adc (bad) into gs pop idivl js push clc out push adc mov loopne push addr16 (bad) test add lret and mov xchg sub xchg es or push inc push sub loopne sub or jno mov sub and ret int3 insl fldt jg addr16 mov stos (bad) mov sub cmp sub dec ret test push inc addr16 mov cmpsb or or adc add lock stc movsb imul ret inc movsb std inc shrb addr16 and lret mov rcrl xchg scas test sbb xor cmpsb call ret lods (bad) stos mov fildl fstpt mov sub xchg nop leave clc push push adc sub xor push mov pop aad stos mov addl mov aam pop sub dec loop lock or (bad) xchg inc xchg push orl add mov xchg movsb xchg pop stc pop xlat les lods push movsb out sarl dec pop (bad) xor ret inc add js add mov mov insb and test movsl sti fsts testl out pop push ret icebp frstor and lahf (bad) and shll xchg cmp movsl dec out int sub test decl or (bad) mov arpl add lods mov sbb sbb or adc fbstp mov push (bad) mov or cmp cmp js or mov sbb dec dec ret adc fistpl fs data16 lock gs cmpsb mov and xor jecxz ror pop xor sub mov addr16 fbstp mov out mov jle sub outsb sub cli fwait add (bad) and fwait adc mov xor pop scas imulb and icebp lds cwtl pop into xchg aam push jg add das cltd xchg pop sub cld lret xchg pop inc push out sub jnp add inc mov xchg loope mov inc push (bad) in outsb lret dec dec pop xchg push test clc xor dec in pop xor pop inc lea dec mov sub (bad) (bad) xor mov xchg push sbb push jae lcall sub fucomip sub (bad) lret jmp lcall mov xchg xchg stos jno mov cmp fildll in mov xor add aaa jle aaa xlat movsl xchg sub sbb inc popf mov sahf cmp fs add xor jns bound xlat ja mov rcrb (bad) adc call jmp sub cmp inc int lods pushf mov (bad) pop leave xor rcrb fwait std sbb mov cltd mov fiaddl arpl loope stc js pop ret or in mov cs pop sub in cwtl sub inc fs mov xchg repz mov push dec mov push popa xchg popa pop movsl mov or cwtl cs dec xor and cli sbb std test out xchg jno arpl (bad) xchg (bad) stos adc popf xor push push mov ljmp jmp div cwtl scas data16 das ret push in and loop add cmpsl popf les ret xor jnp pop gs adc leave aad sub push movb and and pushf lahf jb pop add adc pop sti pop push adc jmp (bad) js shll cld outsb (bad) adc cmc and add mov leave popf xchg pop xchg fstps daa adc rorl adc adc mov cmpsb add out adc or adc adc addl jae sbb cmp out mov sbb popf push loopne dec inc xchg repz jbe xchg push mov cmp xlat cmpsl jmp push adc js pop pop sub in rorb daa sub outsb xchg add icebp into dec or xor xor pop jl push repz into mov and jnp mov push adc dec cmpsb leave adc inc pop rorl repz xlat mov pop lods fmul out adc (bad) or cmp xor in pop jle lds rcrb jmp fstpl mov scas pop loope sub sub adc inc jne add dec add repnz mov (bad) lock (bad) repz pop in dec daa call mov fucomp out xchg in nop adc pop mov sub daa daa xchg fnsave and mov adc cmp aas dec jecxz xor push mov sub or and push pop xor mull scas add (bad) jo pop pop movsl mov (bad) imul rcll je,pt int cmc pop push and sub pop push (bad) sub ficom adc sub (bad) or xor stc jne hlt mov mov xor push pusha sub pushf fist jmp int mov add mov push aas pop loopne cld pop and xor lret outsb fbstp call je sti test rclb fstpl push test cmp and and enter sub jge jns,pt push and mov fist add je iret mov mulb lret sbb andl mov arpl sti jg orl cmpsl mov mov in imul clc scas scas in inc adc or pushf jmp notl or lret das sub pop iret mov cmpsb sbb inc je,pt jmp cmp ret lcall jge xchg push inc cltd push aas (bad) and mov jnp mov xchg popf clc loop push or mov pop mov mov and mov (bad) test shrl mov xchg dec dec xor and outsb fnstsw (bad) jb push push jmp pop dec push mov je leave pop mov vpmaxsw movsb pop mov jnp add lds mov dec neg sub push les pop adc fs and mov cltd iret jmp push (bad) mov jo dec stos and adc or outsl lds std mov std ret das loop leave loop lcall shll mov sub out aam bound cli xlat int adc out pushf xchg xchg (bad) and sub (bad) dec xor (bad) pop icebp ss repnz das ret pop (bad) xchg mov dec mov notb cmp and xor ret ret ficomp mov imul aas or push ljmp mov repnz lcall add daa or jecxz mov jne sbb inc jmp out xchg inc sub leave mov (bad) mov push out sub out xorb fildll sub sub ljmp mov sub ret mull sub lds iret sub sub scas xchg in inc inc push sub or xor dec xor or adc mov pop daa icebp pushf icebp fstl ret test loop cmc inc jp add outsb (bad) fsubrs fidivrl mov aad mov and xchg mov mov mov dec mov pop mov mov clc aas mov das and test or and ds or and cld nop xchg ror movl push test and xor faddl leave mov gs roll mov test into adc inc idivb inc out adc rcr std and test call repnz orl sub jne sbb scas pop ss out push cld sbb sub test dec fs xchg push xchg push in aaa sbb mov cmpsl (bad) stos jle push push sbb sub push sbb sahf (bad) ds icebp mov push pop cmp add and sti fstps (bad) outsl out pop lret enter or lret dec fsubs insl mov lcall jmp add dec jnp (bad) jge cmc dec out mov xchg test dec test stos repnz cld adc and and out cmp cmpsb xchg das pop dec cli xchg sbb rcr popa lret inc fsts inc or push and movsl idivl xchg xchg ljmp cwtl aam les scas out daa mov lcall push pop mov dec fcompl fs mov out sti and out jno mov loop jbe daa out repz adcb inc push in inc scas sub sar outsl popa mov adc das add pop xchg xchg adc ljmp dec mov idivl or xlat mov scas cmpsl adc cmp sbb ljmp sbb push push cwtl pop or adc cwtl push or jmp ficoml repz mov ljmp jmp addr16 ret mov (bad) push xor lahf pop and or adc (bad) push pop addl push leave or cmp lods movsl sti mov add shl mov cmp jb xor pushf jp clc outsb mov inc sub lock or mov enter mov pop push cmp or sarl idivl push push repnz pop (bad) pop adc jne les jne sub stos sub xor xor sar add call repnz out int3 icebp aaa xchg sti int3 adc stos je sub (bad) xchg aam push pop (bad) (bad) dec adc sbb subb fsts xchg sub xchg pop mov add inc sub cwtl scas (bad) mov scas repnz xchg jnp ds loop rorb and ret sub pop repz mov cmc (bad) cli adc add adc popf cmp and rcrl dec shrl pop pop mov jmp sbb in jne daa pop cltd jb imul roll mov sub (bad) idivl icebp cmc inc inc pop jge test and repnz push dec je mov sub (bad) stc adc call lock add pop sub or test sub mov out add adc mov loope mov xor sbb aad enter mov add outsb xchg dec (bad) jae add sbb cmp inc ret sub sub mov xor xlat and sub aad idivb dec testl push lods mov pop push push inc js ss add dec stc mov and je imul pop (bad) out sbb cmpsb lret adc cltd popl jg pop mov adc js xchg mov adc cmp add (bad) dec enter pop mov pushf cmp incl dec ret fisttp add out rcll or (bad) dec adc xlat andl pop addr16 adc add jno or pop mov movsl sub jo dec jmp mov jnp popf cwtl inc or cmp dec xlat repnz xchg jo sbb fildll fidivrl jmp fldl int jg push jmp xor fmuls test sbb inc jae xor push out xor repz ret mov ret sub or scas fnsave xor mov sub or mov mov mov inc sbb ret (bad) pop mov and cmpsb push and idivl xchg fmuls lods jnp sub ret (bad) iret das repnz fwait sub ljmp ja sub inc scas dec sub lods lret or aam ja sub test lret bnd pusha pop cmp lods hlt dec mov and (bad) repz ss dec add dec or xor int stc imull pushf fs cmc ret sub inc mov or inc dec mov xchg xchg ja lods loopne insb mov jp inc xchg inc lret wbinvd ljmp jmp loope in mov popf push dec mov xor or test pop icebp pop mov imul adc mov rclb mov mov das push xchg cmp loopne hlt rcrb pushf add cld pop imul and dec xlat dec out out sub lods cmp or data16 xchg jecxz (bad) or inc or adc pop xchg rclb cltd loope and sub jl push adc push mov or inc mov lods xchg insb mov cltd mov das lods cld xchg mov icebp add sub push mov adc sbb jmp pop push xor xchg out jbe movsl imulb push xchg loopne scas imul adc movsb and stc mov mov mov add std cltd nop scas and mov dec cltd adc ffree push movsl dec (bad) (bad) fcompl fistpll push pop (bad) mov in mov sahf test stc push (bad) mov or push sti (bad) sub arpl leave lock mov mov test inc popa mov lea push sub vmovaps in rcll test jp xchg je push div pop xchg bound push jno ret pop push push or rcrl sub (bad) loop xchg jecxz dec orl out adc pushf leave lret out lock gs jmp sarl repz jl sti fldenv jno lret dec lret es (bad) lds xor divb cmp xor shrb nop fist std mov cli lret fs cmp test clc es adc sti cli or jge js sbb (bad) pop sub mov jne es les sub pop pop sub (bad) dec adc add mov sub add or in jmp mov pop scas ret jge lods adc mov test ret add xchg dec cwtl ficoml cmp pop jmp mov sarb dec cmp notl (bad) fsubs leave lahf (bad) cmc push sti fstl loope ror or stc jge ds sub mov add loopne cmpsb cld cltd pop mov fdivrl sub push pop scas push out push or out dec fcomps bound add sub ret mov sub mov sub (bad) call lret mov xor sahf pop std mov outsl dec subb sub mov int pusha mov in lods jle les repz cld scas jb scas lahf adc jmp cmp or addl (bad) fisubrl test cmp mov mov notb sub incl mov notl jne cwtl and stos lea dec and or add inc jmp mov sub fcmovnb iret xor cmpsb and leave cmc (bad) mov push or jp out mov xor ret lods movsb sahf push push jne mov mov push in sbb test mov dec loope,pn jb mov data16 xchg sbbb jb and jo push sub pop add push push xor xchg dec xor out aas inc fsubrs call jg shll movsl scas add leave sub mov mov or fcomp sarl cmp adc xchg fwait mov idivb ss out int (bad) jne or pop aaa mov out (bad) sub xchg dec sbb scas je sti jge movsl jbe xchg and icebp leave pop mov popa add cmp add or mov cmp push pop popf ret sub (bad) xor movsb ljmp mov (bad) sub pop sub mov add out xor fdiv mov pop repnz pop mov arpl add popf aam adc pushf mov or sub xor and xchg jl iret cmc ljmp movsl pop adc adc iret fidiv adc pop mov and loope sbbl mov js stc leave jae es pusha xor mov push mov sub pop push int3 scas jg pop mulb pop (bad) jne out dec cli fs lret sbb pop fstpt fcoml cwtl imul xchg out lret add fisub pop push aas dec stc cmpsl inc inc push mov (bad) ja (bad) and (bad) cs cmc rcl jmp jmp fwait push stos xchg mov add popf xchg mov mov inc mov decb xchg (bad) mov xlat xor sub and or repz jns repz push dec mov int and test cmp bound xor or leave rorb jge (bad) xlat dec cmp jg cmp fcoms sub pop dec ret (bad) adc mov ret lds ljmp decb daa mov call adc or mov inc xchg add add xchg lahf aad cmp dec (bad) and dec aad scas je push repnz aas and pop icebp rorl ret test imul adc lods mov xor mov into xor aas aam jmp pop arpl jmp test das add push int out (bad) adc jnp push enter ss (bad) dec xor aaa add aam cmove mov (bad) (bad) jbe loop (bad) shll mov mov ds add aad mov or das roll lret mov (bad) ja pop daa or mov xchg push leave cmp inc xor dec pushf cmc add cli mov mov pop pop mov andl sbb fistp add js mov dec mov lcall xor jp ret add mov add sub fisubrl fnstenv lock jmp mov mov mov mov outsb test cltd adc push xor cmp jmp mov scas jns cmp sub xor lret mov pusha dec ret xadd bound mov (bad) xor add sub pop adc adc cwtl mov xchg roll cmp pop sub das cwtl lods and sub rcrl leave stos xor pop sub push scas mov dec les rcrb rclb repnz mov pop dec inc sub cs and out push sbb jge push imulb mov (bad) mov xchg mov add rcrb sub lret mov xor popf fsubl (bad) mov pop and fisubrl ss std push rorb ljmp pop scas aam mov mov or push or les adc (bad) or jmp mov pop (bad) dec pop (bad) lret push ja addr16 jns dec idivb addr16 (bad) call addr16 fadds rorb mov js xor adc inc cltd sub mov mov sbb jno lahf (bad) cmpsb data16 xchg mov (bad) les cli popf sbb sub pusha push inc aam pushf add idiv ljmp stc call outsb sub ljmp dec xor jbe sub push pop xchg xchg cli in in test gs test cwtl or mov int insb xchg test repz add and outsb adc int jmp add clc sub dec xchg in or repz lret cltd dec sti xor sar mov cmp (bad) mov repnz rorl xor sub or xlat sbb pop mov iret std (bad) xchg call xor int3 pop xor cmpsb lods or lods or push ja les bound pop jge outsb lods or xlat movsb pop insb ss adc lahf hlt adc jb xchg int3 hlt das or xchg sub test (bad) insb clc in mov mov cli jno add cli bound mov mov (bad) jae das mov fincstp in adc push sbb xchg mov add pop dec mov ss loope push mov mov sub xchg add stos pushw or dec jp jl ljmp lds push not stc mov outsb mov jg and pop shrb imul (bad) lods mov sub mov cmp cmp mov pop mov dec mov jnp inc scas adc sbb test jne int3 sahf inc imul arpl or and sub xchg ret cltd pop mov mov sub mov lret lret fdivl xor out sar mov jle (bad) or xlat add or loope mov fnstcw imulb xor sub jmp jbe lret aad int3 (bad) repz cmp inc aas adc mov mov ljmp in mov into andb les stc sti cltd int3 adc xor sub cs and mov jmp fcoml push sub xor and mov mov or das xor aaa (bad) fbstp inc repz adc add mov cmp xor xchg or xor ja test xchg xchg stc lcall pop jnp cmp (bad) push decb icebp outsl dec pop subl push fidiv mov scas (bad) push dec loope bound pop xlat in cmpsl inc sti sbb fidivr in jmp add xor cmp mov jp xchg mov jb lock mov dec inc xchg xor and push inc sub jnp repz lahf jno lret cwtl in cli mov movsl enter (bad) daa add insb mov xchg xlat push cmc sub mov xchg xor jg out jp cld lret (bad) and aam lret cld cli clc dec mov mov aaa sub mov (bad) repnz sub js loopne sub xchg cs fdivrs add mov inc jo sub into out in add stos fnstsw jg pop pop out or push sbb sub or pop pop mov or adc or xor and cmp xchg cwtl mov cwtl stos xchg inc or les or fildll xor dec push jb stc inc lahf xor jge and nop stos xor pop xor addl in inc dec cmp mov xchg add (bad) int cmp xchg adc mov mov lock mov (bad) enter push add adc add sti cmp sub dec stos pop int3 (bad) fidivl fcomps ljmp and or (bad) dec pop test test in mov es jl xchg jle mov xor pop cmpsl add ljmp (bad) iret sub and xchg add or shrl push mov jmp dec subb sub daa bound jl push ja sbb xor jg stos movsb or arpl stc xchg (bad) jecxz scas cmp or test mov ljmp jb push mov push adc xchg add jecxz or inc mov shl dec mov out xor add das stc jl aas add and sub or lahf int3 lds mov and mov sub cltd dec and and movsl fimul sub mov loop fimull cmc or jo mov lret into pop dec insl mov clc mov (bad) std in xor insb call add or mov mov add xor (bad) mov leave sbb ja mov xlat xchg test inc pop xor pushf sbb leave hlt ds and cmp mov or or mov pop jb xor out dec imul imul sub dec and ss clc adc inc imull sbb sbb jne int3 aad xor fidiv repnz xchg out jp and ror sub lods fnop xchg pop int sub add (bad) and xor cmc mov test pop cwtl dec jecxz xchg push xchg dec jmp and leave pop pop sub mov lret sub xor pop in test push mov dec (bad) push pop mov int and jne xchg (bad) rcr stc shr (bad) sub dec movsb jmp loopne and jo cmp pop fwait mov push test mov push es stos push jns mov sti xor sbb (bad) xchg pop lcall jmp daa dec mov mov push xor pop xor notl and repz leave rcll (bad) imulb out adc xor or mov mov fstpl push mov pop enter into mov xchg repnz test add cmpsl fcoms xchg add ljmp test clc xchg stos imul and adc dec lods push test sub fsubs adc cwtl adc xor icebp movsb mov lock daa pop jo or add mov (bad) (bad) frstor sub adc xor push and xor rcll push imull sub insb mov ret sub enter push mov repz mov add hlt fwait pop jbe into mov adc test stos sub (bad) and fcoms xchg test mov addr16 int cmp aas mov xor push jmp (bad) (bad) mov or xlat data16 into dec jg mov int and xor data16 sub fimull adc push xor or (bad) (bad) cltd pop add and add ret and scas mov and out xchg je push aam sub imul cmc inc les repz das rcl pop pop or cld movsl call mov lret out push sub (bad) jbe and mull hlt and xor jmp adc outsb and dec mov mov je shrl inc in movsl xchg int3 push bound xor cld dec fs jno mov js popf fcompl enter push sbb mov ljmp imul ret (bad) cmc in dec and push xchg jae and sub fwait sub into adc loope jp loope lds hlt xchg dec es mul arpl jl mov insb cmpl push lds jnp cmpsb xor lret or lcall loop push jmp ss xlat mov xor call cld sub (bad) (bad) sub mov (bad) dec xchg add sbbl pop movsb arpl cwtl xlat mov pop mov lret pop roll aad mov (bad) xlat push jge cmpb sbb sbb stc cld fs mov xchg test sarb pop pop test loopne sar outsl lods or repnz jns xor fcompl sub movsl dec rclb jo test repz add inc sbb int3 fwait popf hlt mov add dec xchg add inc sub mov lcall push clc fdivs xchg cmp jecxz sbb mov stos ret fimul or ficom mov jmp mov rorb jnp lods imul xchg pop fiaddl xor xor push out lret and inc pop (bad) mov cmp enter dec inc xor mov nop jmp (bad) negl (bad) jge (bad) loope test sub mov clc xor push ja jb xchg inc inc mov aaa push mov jb adc icebp leave xor fcomps out dec enter ficom repnz xor std cltd lret test aaa fildll jns inc mulps mov rorl and mov cltd or loope,pt es das out sarb cld pop and es mov inc loope xor data16 es pop jb stc into mov mov scas test push add xor cmp xchg sub jle scas nop push loope lret cmp xor pop ret sub jne test pop (bad) cmpsl pop add jb pop push (bad) fstps je adc incb fdivl lahf into xchg mov mov bound mov (bad) lret mov movb sub insl lods cmc xor (bad) xor repz ss xor rorl push out gs push pusha popa (bad) popf pushw mov mov (bad) pop out xchg lahf cld xchg push pop push jns or sub xchg pushf fsubs push into out cmp cmpl aaa sub mov cs mov xchg xor add or insb sub jge mull dec mov inc adc sbb testl movsb sar pop bound xor mov mov or dec lea and movb out arpl pop popf and pop lahf (bad) fsts xchg inc xchg dec push scas bound push xchg ffreep cmp mulb aam cmp test mov (bad) xchg je pusha ljmp dec xchg loop jle data16 leave and scas xchg test mov xor jg mov out add xchg (bad) call mov mov inc in repnz cld ds and cmp xor sbb (bad) dec orb out adc ljmp cmp popf mov (bad) xor (bad) or ja pop dec or call jmp fdivs mov imul sbb mov push outsb inc mov adc mov icebp in add lds fist push xchg mov je pop in jno xlat (bad) xchg in and stos out push push outsl mov jge scas popf loope fisubrl (bad) xchg (bad) aam lret clc out lret jge sti cmp jecxz stc hlt push add test mov mov xor mov test mov imul lods inc hlt int jle dec push dec pop add ret stc mov iret push stos (bad) lock test andb cmc pop push imul imul cli sub inc and xlat movsl fbstp ja pop gs jne jge pop in cs push fbld (bad) xor mov cmpsl outsb pop mov idivb mov dec mov xchg out mov xchg iret mov dec (bad) adc inc lret ret testl inc (bad) divb add xor inc or dec repz loop mov popf test add dec mov mov ret mov insb sub pop and xor mov sub add add mov add je,pt sub add inc jmp (bad) xchg pop mov sub mov outsb lret (bad) pop inc sarb or jecxz aad inc dec xlat jne scas movq mov fdivr add adc (bad) (bad) inc add cld xor add rorl repz mov outsb jge and shl jp std (bad) mov push xor icebp fldlg2 mov adc popa mov sahf jp adc sub mov cmpl loope push cmp jmp mov jnp in and imul jae xor xor dec mov sub and int3 insl ret xchg subl imul push (bad) mov enter iret scas into pop sbb adc xor fs or fisttpl iret or repnz std dec adc add es adc jmp xor je inc imul subb cmp lret sarl jbe repnz in pop gs arpl call inc (bad) daa repz add lret sbb mov mov mov inc daa inc jle sti add xchg shlb mov sub hlt inc (bad) mov (bad) jmp cmpsl imul sub mov xchg cmp push sahf std dec (bad) clc inc xor or cli cmc jno gs and (bad) mov sub rcrl dec stos pushf arpl and rol mov lret dec (bad) cmc cs lea push arpl imull lret ret std xchg ja xchg and add cld push xchg cmpsb mov fdivs lds jge fpatan pop lahf push ficoml dec and or and lds pop sub insb mov ret push pop (bad) sub push push xchg mov loopne cmp fisubr out popf and or mov (bad) mov push mov stos mov ljmp gs and out arpl pop lret dec out cmp sub xchg xchg test sar (bad) xor (bad) cmp cmpsb xchg mov xchg stos adc sub xor mov xor push jns xchg notb mov (bad) jp ljmp ja sbb add and lock pop fiaddl arpl push mov cmp sub sbb inc dec jecxz xchg jmp xor repnz and mov xlat pop xor pop icebp arpl add sub xchg out popf adc pop or xor and popf jae stos roll fldcw cmp lret daa and mov cld or mov dec test or or sbb cmpb pop loope test mov and outsb jmp cmp lds pop adc arpl add mov mov xor mov xor mov nop in xchg jo sub xor dec and mov xor or in lahf rcrl xchg sub and inc mov shrl lea mov add inc sub stos aaa nop xchg test bnd mov cmp pushf test jp cmpsl jmp mov mov (bad) not roll mov shrb or iret xlat sbb dec xlat or lret rcll inc je and in add jmp adc push loope push adc pop inc popa dec jecxz adc jg push pop mov imulb test mov sbb movlps imul push dec (bad) cmp dec pusha lcall in sub push pushf stos mov add std push bound mov push sub sub or push shll mov call jns adc mov sub cmp out mov pop int3 movsl mov push push cs and les pop notb xor push and lods or mov jecxz je sub jmp hlt inc push shrl or (bad) jp mov adc out popf in inc adc sub fdivl push pop mov imul mov or sub out les gs add dec sbb cld iret vmovapd shrl shr push jb xlat xor fldt out scas pop lods sti cltd xor xor add pushf xchg (bad) mov jge jno (bad) out into add das jl push scas ljmp mov jmp scas mov ljmp cmp push popf aam lock sbb pushl xchg popl sub and out sub or pop sbb (bad) rcpps stc push sub jo cltd into loope cmp jnp sbb outsl pop mov pop cli cmp push xorb lea imul lret (bad) pop imul cmp inc ret cli sub mov xor and sub mov sub fisttp pop imul test dec ds add sbb mov into out jne mov dec nop pop mov cltd mov outsl fs incb negl pushf jno das in xor cli jo fucomip aas dec jmp pop repnz into and scas fildl cmp (bad) fsubrl and outsl in or repz insb notl mov outsb (bad) pop mov dec xchg ret pop (bad) repnz mov idivb ljmp pop jmp daa adc mov pop or mov sub ret mov or and push adc pop addr16 lods movsl and lret mov and push xchg bound leave jns cmpsl sbb pop inc test enter sbb fwait or mov sbb or add jb lea lret das into jne ljmp ja jno xchg scas xchg std dec or pusha repz xchg (bad) xchg pop notb pop mov out sbb scas pop (bad) dec in aas imulb out sub repnz fs xor xchg xor icebp out repnz xchg decb pop and ret fsubl enter dec mov and sarl cmc mov cltd mov dec shrb cli lahf gs lret mov mov add pop popf ret cwtl in and mov cmp stos das xor ljmp leave mov mov xor adc or push mov (bad) lret push shr jp mov std sub jmp (bad) pop jne cli mov sbb (bad) push (bad) scas cmp ret mov sub dec mov push mov jmp add lahf rcrb add mov mov fwait lods jge mov mov adc mov test dec loope je lock inc (bad) jb dec cld daa out jl pop push aam lret inc xor cwtl and xchg fisub xor cmc shl or fbld cld push ret push push pop xchg movb mov cmp and inc sarl add roll ds pop push inc and (bad) inc xchg jle test xchg fnstenv (bad) ds pop movsb mov sbb lock xchg jmp and jno movsl or aad fsts dec pop mov adc and or dec fwait pop push subl scas adc into lahf jnp add mov mov inc sub fincstp inc (bad) mov daa and mov and popf pushf rclb inc (bad) jno dec call aas mov pop (bad) sbb das sub add pop and jne and cld call insl das or pop xor dec cmpsl jbe lds ljmp lods ret rcl sbb lcall dec mov mov sub pop sub pop inc lods mov fsubs cmp xor call jl loop mov (bad) adc inc mov movsl adc fidiv mov mov push sbb dec leave mov rcll cmp je mov addr16 out push sti das cltd cmc inc jne outsb inc ljmp inc dec movsl lds mov mov dec jmp aad loop mov (bad) mov xchg (bad) adc xchg pushf and and outsl mov or fstps rcll or xor jp cld lret mov (bad) imul hlt dec jo fldt bound call jne cmpb pop xor mov mov or mov pop lcall pushf iret mov xchg out jb adc cmp xchg stos xor dec dec push (bad) ljmp cli dec gs adc rcrl jecxz dec out mov aaa sbb xor xor dec or orb popa or sbb icebp sub adc cmp sbb jg daa je pop fbstp cmpsl push add jge loopne xchg push in idivb aam push lret cmp rcl out mov sbb cmc sub in sub movsl je mov repz scas lret jle mulb mov std mov xor aaa pop popf sarw gs ljmp mov push outsb sbb xor imull ljmp mov out xchg fsubs mov iret fdivl push jns imul imul int jl mov and xor ret sub push enter leave add dec lret jmp inc sbb push daa push outsb mov adc out cmp dec std rcll sbb sti or cltd (bad) icebp das repz lret out jnp jmp add and daa xchg cmp leave add fisub jno push insl jmp cld (bad) pop pop popa xchg jae xchg xor jno add cmpsl mov push mov mov test popf or adc and or call cmp add das loop jmp push idivl jb xchg inc or gs das sub orb and xchg push scas and imul movsl jae cmp mov ja cmpsl mov push push push cltd jmp lret sar in pop push add sub out cmpsl adc sbb mov and hlt jp movl or mov mull pop jb pop ljmp setne (bad) jmp decl stc movd adc cld xor xchg dec mov enter sub test out (bad) cld insb test jg test cld mov xor fnstenv bound enter ljmp sub xchg mov out sub aas flds aad dec xlat adc xor mov stc mull xor into and movl xchg push (bad) and (bad) and dec or push das inc nop cmp and push movb sub dec (bad) dec iret movsb push jp dec xor or into aad adc jp icebp cmp push sub loope imull mov cld (bad) lret dec jl outsl xor jne repnz pusha add or adc mov cmp pop sub ficomp gs lds mov int3 popa push dec outsl cmp and (bad) mov pop scas test fmul into fsubs sub sbb lcall in fdivs dec (bad) ljmp in cmp dec lret iret lds ret sbb pop mov add or frstor dec repnz xchg fbld sub cli add insb dec not xchg cli bound sbb sub adc out lea (bad) (bad) (bad) neg lret das fild add sahf movsl push daa repnz xchg sbb jp out xor lret fisttpll cmp inc popf cltd loope dec ret clc inc popf testb stos sub pop and push xchg stc insl loopne cmp fdivrl shrl shlb jns dec (bad) xchg xor adc xor mov or sub adc addb and sub lret jmp and test in mov popf add mov add pushf lcall out push pop xchg push mov ds call jmp or xchg mov push aad and fs mov movsl adc push in es sub jmp dec out cmp iret dec dec int cmp mov sub mov or and movsl jge pop or cmp and ljmp test stc repz iret sub ret subb fsub es lahf mov push scas cltd inc shlb add lahf jecxz lods scas sub fld lods jbe iret adc adc jo loope je lea clc fnstenv xor jp (bad) mov das xor lret int3 xchg (bad) adc iret xor ds (bad) and add in es cld push rcr mov (bad) and scas cmp (bad) mov (bad) xlat mov inc adc mov jle int scas divb clc mov dec jmp or ret les fs xchg xchg dec sbb subl int ds scas sub xor jle rcrl lock mov fidiv push pop mov pop dec fiaddl cmp jb ficom iret and mov xor or adc push cs and push xchg outsb out lahf testb mov leave ja dec ljmp lret cld pop xchg clc roll lret fidiv and mov pop loope mov push push pushf gs dec scas or lret jnp push out ljmp mov fdiv inc jne cmp jne (bad) out push or mov sahf pop int3 mov movsl jne clc aad ljmp pusha mov clc or sub scas push cmp jbe sub cli pop sti out lahf subl and loop bound push push nop inc xchg stc or frstor mov xchg pop mov pop fwait push lock push jbe dec cmp cmp das cli sub clc decb loope loop sub xchg pop sub dec sub js inc lea sti mov add xor aam xchg scas dec sub fsubs add mov (bad) shrb repnz and (bad) (bad) out cmp sbbl jbe xchg sbb or in into bound js pop add cmp xor jp ja (bad) in cld sub test sti fmulp pop pop pop movsb xchg add mov add or pop pushf mov pop and sahf mull sti push je push das std xchg sub out sub lods fucomi mov out addr16 jg inc push lock push repz xchg cmp hlt ficom sub jecxz jns pop xchg (bad) (bad) sub xorl mov cmp sub cld fiadd cmp es cld stc das in or fsts and clc repz mov ret call mov xchg push inc fstpl xlat in dec mov faddl jle jmp into es sub lock out and push loope cmp cli fistpl lods in sub cwtl mov xor popf aam cld out daa pushf icebp xor loop icebp mov leave inc push les adc (bad) jg and push pushf adc mov rcrl das les dec int3 pop lods add push cmp mov pop adc lret lret scas cmp dec leave test repnz sbb lret out mov xchg dec jp aam jmp fbld inc shrl inc or pop xor cmp add jmp mov lods int3 lret leave push data16 sarb mov sub jb mov xchg xchg push jmp cld push add mov in xchg adc or pusha cld ud2 mov gs cmp xchg sub mov push sar jl repnz xor sub sub cmp dec dec ret (bad) rep jbe and iret dec push sub rcrl out test das std mov push push test ret (bad) fucomi or inc adc mov mov mov sub sbb dec jns cmpsl inc cwtl mov add push add in dec fidivr pop mov mov adc and xchg stos or mov sahf clc and std jnp sub mov rol popf stc cmp push popf inc push lods insb (bad) push fsubrs adc adc adc repz ror ss fwait push sub jnp shr jmp jg loop cmp sub xlat icebp fwait dec sti ret pop mov icebp pop dec xor js rclb push cli iret push inc and xor push movsl push fist xor mov xchg jbe mov imul pop inc inc and ljmp cmpsl xchg push jbe mov clc add in jp (bad) hlt mov fisttp inc sar pop inc lret (bad) xor and stc or int inc dec popf sub in in stos mov jno dec ror and fmuls iret mov and inc mov jmp movsl xor inc lds rcrl ds cmpsl adc mov test stos test xchg in jp mul cs stmxcsr pop and aaa push idivb test pop fildll push fcoms daa adc dec (bad) xor lods je inc pop mov test inc shll mov (bad) mov mov adc pop hlt push (bad) cmp pushf nop pushf dec mov and pushf fildl sub sub mov pop dec js icebp sbb xor pop test jecxz adc cmpb mov notb (bad) fbld or daa adc add mov lods pop lret ret sarl inc adc or in push pusha mov (bad) lahf fisubl fldenv repnz xor mov mov rcl daa into or lcall mov scas xchg lods pop or xor add mov sbb add jo mov adc mov scas enter mov pop sbb addr16 and lahf nop jp ds ljmp sub xchg andb je sub cmp cltd cmp fldt mov pop sub es jns jecxz fldl pop or repz (bad) out bound stc adc or mov add sub pop mov mov into and cs cs popf (bad) dec mov ret or inc fsubrl pop repnz xlat (bad) sub jp push mov push xchg mov lock sub fistpl stos je loop dec pop jbe push lahf ror sub daa (bad) xlat cwtl jbe push mov (bad) aam jb push imul inc add icebp mov call or cmpsb mov mov jne sti mov (bad) xor cmc dec xchg dec popf lret roll shlb pushf jmp popa push inc push xchg mov pop pop add cmp jl sbb inc pop jge sbb inc xor test jo (bad) fstpt cmc lods adc or arpl mov push pushf pop int3 mulb mov pop sbb ss adc xor add aad sub mov enter in sub out lret lret (bad) sub and push pushf (bad) lahf (bad) shlb or add push out or (bad) in add cmp add jmp stc int3 or mov and div dec ret and dec dec outsl mov rcll hlt adc sbb ffree pusha adc or out mov adc sub jmp push pop push mov leave loopne mov push xchg lahf das jb xchg hlt mov (bad) push or in add mov shrb mov add xor xchg negb add scas dec test lret daa out xchg or push xchg mov dec ljmp (bad) xor inc jmp sub mov sbb sbb inc adc xor xchg inc scas je mov pop adc push mov repz cmp int lret add (bad) and or imul bound (bad) in mov fisubr xor mov sti inc sbb sub xlat mov idivb mov xor dec push fbstp adc lea scas pop cmp cmpsl add dec into sbb (bad) pop loope into jle rcr pushf and push fst rep push lea push push negl push into add push fcmovbe jo idivl dec ficoml (bad) pop leave mov scas (bad) pop and add mov idiv pop sub lahf adc daa and inc push arpl mov mov shll or cli fsub (bad) or push adc xlat jge dec mov pop or or cmc cmc dec fs sarb ljmp stos pop inc mov xchg push xchg fistpll push movsb out movsb xlat mov das iret mov sahf sub xchg mull repz or popa dec jmp loope and lea loop lods int3 movsb mov (bad) rep flds mov stc cmp jmp mov xor mov xchg xor push adc sbb jmp dec fs insb inc mov xlat loop xchg test adc add mov sbb pop push icebp mov (bad) xchg in in test mov ja push in sub les mov cmp in and cmp inc es shlb jo out mov xchg (bad) mul clc cwtl daa and aam mov out inc dec repnz cmp (bad) icebp lods cltd mov xor push pop cwtl addr16 lret and sub cs inc xchg push imul mov mov pop pop mov scas mov push mov out inc mov cmp negl movb faddl dec jmp adc sub (bad) or push cmp out fldcw and push repnz sub push push loope mov lods test shlb dec lock push xor ret das mov pop cwtl add lret cmpsl (bad) int3 mov (bad) jecxz negl arpl or xor and scas lret lds rcrb ljmp and pop add cld out pop sbb fsubrl dec sub jnp out mov and insl jne outsb (bad) cli lret dec shlb mov rorb mull cmc or or xchg adc nop aad push add lcall fisubl scas fisttpll cs add or mov ret push mov push jg inc pop sbb sti dec or sahf adc adc or sub repz or pop adc and cltd or mov mov stos frstor jmp lret xchg adc ret inc add pop pop inc push xor and push xchg push pop outsb sub mov lods loope repz cwtl or mov jno lods push mov mov sub int3 mov push (bad) mov push adc int add lods fnstenv call cltd push shrl int3 sbb pop lret add mov sub stos adc inc mov js and adc cli lahf add jmp scas cmp cs andl add repnz xchg mov xor pop pushf divb fwait cmp je test les and or out arpl pop or mov jmp pop pop into xor mov outsl loop (bad) sub (bad) xchg jge cmp loope add fdivs inc sahf push jo hlt mov push clc adc sub sub scas (bad) mov mov mov (bad) jnp mov cltd lods push movsb cmpl or fistl and imul ds in (bad) jnp test and add push dec cwtl in pop mov xor adc test stc mov and xchg jae and inc sub inc call scas mov xor cs out xchg jmp xchg inc inc xor stc fwait and sbb pop pushl hlt cltd push mov or xchg cmp or lahf int3 mov ljmp adc ss sbb icebp xor mov sub lds lock and pusha ret add inc (bad) std scas mov testb push jge add mov xor (bad) stc xchg stos inc mov sbb and cli gs push scas out pop stc mov xor stos cmpsl cmc sahf adc in inc in shlb inc pop mov addr16 jmp pop imul out out dec leave ret ds das mov (bad) mov sub jne ljmp sti sub cmp fistpll dec push mov push rorb sub andl mov sub scas lcall ficoml outsb js idiv sub adc add cwtl (bad) mov push and lea pop ss sbb in fist inc leave pop cmp in mov fbstp add div xor test mov dec xor sub call mov scas int3 (bad) decl xor jbe into sar lret jb sub push repz shrl cli inc sub pop lcall loope sbb jne push cmp pop or test cld (bad) pop ret mul fisub cmp movsl lods dec xchg and fidiv aad push cmpl pop push out mov outsl test test adc xlat stc loop gs gs add pop sbb push push rcll in das mov jle jmp pop addl sbb je les push mov push movsl fldenv das and and mov jnp inc xor and xchg lds ret aam inc stos iret divb inc stos sbb (bad) and pop dec or cmpsl lods notl adc or les daa or push mov bound and add into add jno dec inc subl and mov dec leave jecxz orb inc inc sbb sub stc cmp inc testl xlat data16 xor or into lock aaa popa jno xor cmpsl imul xchg add mov out outsb stc dec leave out jne mov clc xor pop stos movsl jl test testb (bad) cli jbe imul nop sub add (bad) jl lods (bad) mov sbb adc (bad) divl into (bad) outsl daa push das dec or jmp cmp call shrb mov mov ret adc jecxz adc mov cmp movl jae es addr16 push cmc inc ret and and xor push adc xchg (bad) lea push pop cwtl cmp add test push lret inc sub xchg (bad) loop icebp xchg dec pop in scas or cmc add add sub mov inc das out xlat xchg pop mov lds dec cmp push (bad) aad adc xor movsl sub and or sub fnstcw jno (bad) add sub cmp imulb (bad) adc insb push inc sbb pop xchg push stos (bad) ret and sub xchg xor push lock das sarb sub sub jnp (bad) fisub sub shll lock clc mov pop icebp es adc aam sarl insl rclb lds subl pop sbb repnz aad pop add (bad) mov cwtl mov push mov loop adc sub and (bad) test shlb js sahf push sbb (bad) ja xor cmp dec sbb xlat decb mov cmc (bad) dec mov fistpl rolb push mov sbb std push lret jno and jp stc and dec in add clc jecxz leave jne inc fist or vpsubq (bad) arpl push jle out or sub jmp insb imul pop imulb hlt (bad) imul (bad) pushf jne ficomp sti rcll fistpll mov inc lret hlt scas jmp xor sub adc das add adc icebp mov xchg fidivr xor mov or in adc add (bad) or mov and xchg inc mov daa inc jp rorb push pop movsb or add loop (bad) js lret sub js push cli xor mov movsl mov shrl push pop sbb out insl xchg ss (bad) mov roll (bad) mov sti popa cmp sbb aad mov dec mov fimull fstl mov clc xchg jmp scas lcall adc pusha insb mov mov enter and and add xor xor mov push insb ret sbb adcl int3 mov into fstps into ljmp pop sub mov outsb mov scas je incb cmc js sbb adc inc dec popf jle pop push stc dec pushf leave xchg pushl xchg adc mov mov in scas ret mov push div das push (bad) out pop mov das sbb in mov js ljmp xor repz mov sub (bad) cmc outsb pop xchg jb sbb and sbb or xchg dec fs leave aad (bad) std cwtl pop and mov aas loope mov dec mov ficom xor xor jecxz xor test pop inc adc loop xchg in jnp (bad) sub je jmp jmp mov out ds dec jnp mov jbe and jl (bad) icebp scas xor mov insb adc mov ret mov add add pop inc ljmp call gs mov mov and sbb or fsubrs in neg sarl cmp cmc mov sub sub out mov dec jecxz push add bound enter xchg lahf push mov sarl jmp sub mov or subb shr lock dec rcrb orb xor fdivrl or or jmp jnp pop and dec std in xor xchg or and (bad) xor cmpsl mov xlat jnp and inc pusha daa pop mov dec add xchg in xchg push dec fstl xor mov jb cli mov mov sub out sub mov cs mov or ljmp sbb sarl test sti lret cld lods gs ljmp lock mov call xchg scas cmp mov in xchg in sub adc std lds clc pop bnd gs xor pushl xor into popf rcll shrl sub iret test pushf rorb dec and insb jno loope xor jne dec leave jge das pop push sub xchg mov mov fimull cmc insb xchg and add cli into imul aaa jbe (bad) movsl or (bad) mov pop mov jbe loop sub test xor or mov and jne pop xchg add jmp (bad) mov in (bad) mov test pushf xor pop inc aaa jbe push dec gs (bad) fmul xor mov xor mov xchg dec cwtl rcr (bad) sub mov xchg mov out and movsb fldenv adc movsl push jge repz xor pop lods fld and stos cmp xor stc mov mov fnstenv jmp mov (bad) fisttpl mov pop js pop iret mov mov jmp mov dec stos sub daa sub mov adc mov out mov push shr pushf adc xor xchg xchg ja mov (bad) or dec ret mov test add icebp xor mov jmp jle or sbb addr16 in jmp std and pushf repz push mov or iret xor xchg add inc (bad) cld into mov dec add pop sub fdiv push jecxz (bad) xchg rcl push push xor popf pop adc xlat push mov mov xchg and sub int3 cmpsl add cmp xlat call lods daa (bad) ljmp cmpb dec pushf out fldenv jne ficom sub sbb sbb shrl (bad) ss ret in cwtl cmpsl popf jnp jmp fwait dec cli pusha xchg pushf jnp adc leave cmp jo dec pop pop xchg pusha leave xlat sub push notb int3 fidiv or fldenv and dec (bad) movsb mov (bad) sub or add loop,pn xchg mov mov add cwtl inc xor cmp and jns pop test jmp sub xor loop xchg push data16 add decb test mov jnp bound and pushf roll mov cmpsl out mov xchg scas loop mov pop lods push add in adc or (bad) loopne pushf repnz fldl adc scas sub aam adc nop or lock or popa lcall das xor cmc xchg xchg xchg push or movb lret mov xchg je push divl imul outsb pop mov and arpl add sub mov and mov inc sub cmp in pushf inc push push fsubs test (bad) sbb idiv mov xlat mov adc xchg jg cmpsb mov xor dec add (bad) xor arpl sar fcoms mov add fidivr clc cmp test sub and lahf insb mov and adc dec pop or (bad) out cmp cld stos mov aaa cmp stos sub and gs test add fs ja jl push dec mov add jnp sbb es xor inc ljmp repnz mov adc pop (bad) aas mov clc sub cmpsb mov cmp jl rclb mov push inc popf push dec imul and adc push dec mov pushf je or mov repz and push or jecxz call ds mov test in fisttpll jns add call call cs ljmp das pop or lds sbb mov (bad) xchg jg mov mov push or sahf pop jmp sub xor iret add cwtl vmovlpd bound sub adc add and xor leave mul das mov lds and mov add mov lcall nop or sub pop jge sub or or lret leave mov cld pushf lds daa hlt mov add cld push xchg decl mov sub out cwtl int3 call mov insb cmpb or or mov cmpsb pop ret jns inc jmp jbe inc pop lods test lock jo das in mov ret pop rcr leave add shrb (bad) mov fs mov xor jge xor sub and movb inc inc sub (bad) xor cmp jp sub or sub xor (bad) mov jno mov fcoml sub and popf mov push out out cmp cltd aaa xchg (bad) jmp sub out stc gs push mov xchg jb leave subb into xchg test decl mov sbb fs jae adc je xchg adc lea xchg lods ljmp mov cmp loop sbb ljmp (bad) ja jne jnp cltd push jmp sub jns lret jl and mov dec adc sbb bound (bad) aad mov xor popf sbb lret sti fcmovbe (bad) mov repz and ljmp ja mov sbb bound lea (bad) leave jmp fldenv ret or test clc pushf movsl push (bad) push ret pop xchg sbb sub mov icebp jbe pop add dec mov mov jle shrl and icebp (bad) aas call dec mov test or into repnz or xor add mov ds cltd pop sub pop dec repz adc leave scas les cmp xor add xor add and mov sarl imul xchg scas (bad) mov loope subb icebp mov cmovp scas mov imul in sub cltd dec jno sub test aam rorl lds dec ds and ja push and add dec dec repnz (bad) aas sub testb adc xchg xlat sbb jno cmpsb in divl cltd or xor xor jecxz cld xchg cld imul jne mov cld aaa and hlt mov in popf (bad) mov dec push divb xchg arpl pop lret movb adc jecxz xor fwait or pop ljmp ret insb fucom bound mov mull push mov xchg and push sub stc inc in lret leave adc add cmp sub cmp sbb lahf or pushf sub (bad) stos imul fs xchg push or or dec fcom shlb mov loope imul ficompl jbe mov mov or or mov dec or pop jo mov rcr push hlt lret (bad) std pop push pop xor outsl mov add lock jbe divl xchg aas pop and inc sub and push xor push fnstenv inc and dec nop mov es mov clc lods lahf xor and sub xlat lods dec sub push dec daa iret pop in jmp add lock xchg hlt jp pop imulb pop or lds or jecxz pop pop lock dec jmp ret xor sbb mov int fstpl div test push or xor or jg xchg das mov daa sub fs add mov rorb (bad) lahf hlt jne (bad) mov movsb cli fwait outsl cs mov arpl clc or fidivl sub pop lcall jne sbb fdivrs add sub or mov aad daa sbbb adc mov sub sub sub repnz addb lret mov sahf pop jno ret xchg fsub pop lock leave pop (bad) xor and out cmpsb inc inc jnp mov and push mov repnz mov push xchg adc jl jp sub xor rcrb repnz leave xor idivl push mov inc icebp out ja in xor push and or mov pop (bad) mov dec add (bad) data16 xchg cmp cmpsl sub out push (bad) mov cmpsl jo lret inc cmpb mull inc fldenv jp dec movsb jmp repz mov das jecxz jns insl addr16 push mov cs sahf ret xor push inc lock cltd adc in mov cli mov xor jo movsb js mov push xchg and sub test hlt pushw das xacquire mov das mov pushf aas (bad) (bad) ja and xor mov mov xor jp ja jmp stos mov mov mov (bad) (bad) ljmp mov (bad) je add sub mov pop add or adc mov ret sub outsb add sub inc stos mov mov rolb cli lahf jle imul jnp pop (bad) dec ret loop pop je cltd mov or ds notl xor (bad) (bad) ret lcall lea jns pushf mov adc sub stos movsl ljmp add in lahf jecxz mov pushw mov cmp (bad) xor add mov mov mov clc xor stos gs mov ret fnstenv (bad) repnz lret mov add data16 xor movl jmp mov jnp aas sub out pop (bad) mov lret add fcompl inc mov jo call lods std sbb cltd cltd or push mov lea repz imull or cld movsb int3 scas into push xchg inc arpl mov ret int3 add inc mov push or sub popf aam push bnd pusha sub divb scas sub sub sub xchg cmc mov jle inc (bad) mov add out fs mov (bad) jle lods sbb fbstp push (bad) push or adc (bad) gs das adc sub cmpb out fs add jb or mov xchg test test and mov xchg cli gs push fildll cwtl xchg aad xor jmp fmuls jne jne fistl es add out sbb push pushf outsb push adc lahf je xlat out popl pusha mov jnp mov bound dec sarb leave adc mov out sub sub mov (bad) repnz in test sub int pusha mov sbb ljmp out gs push (bad) fwait cmp dec test mov xchg icebp pop lds pop std fwait sar in mov je mov (bad) (bad) jne into test add pop out addr16 push add mov rclb mov mov mov xchg lcall xchg iret sub xor dec and sti push into and ret push mov or or mov and push movsb imul shll jno dec imul cmc bound jnp mov pand scas adc dec or lret inc sub sub sbb xchg push xchg (bad) mov lret xor sub sbb addr16 mov repz inc int3 movsl jle xchg and add sub (bad) mov jno and push add repnz ss nop ret or jnp sbb adc fucomip popf mov fist sub ljmp cmpsl fsubs mov stc imul jge (bad) fidiv insb push (bad) fistl adc push mov std or ret push pop loop xor leave sti ss sbb jmp (bad) dec dec and mov leave xor jbe jns outsl dec into sti or jmp cltd jmp call inc mov jno imul inc xor xadd mov adc sub adc xor fcomps mov mov aad std cmpb sub pushf outsl bound sbb and pop mov ror pop dec sbb sub lcall or jge pop jecxz jno and outsl loope jle xor lds mov ror xlat mov mov cmp sub or jnp pop movsl out sub popf push mov or lret mov imul outsb mov pop int3 es pop repnz lret adc mov xor add int3 call cwtl inc add sub jb mov out sub outsb or add dec pop sub pop adc mov (bad) mov or lock xchg pop xchg xchg loope or sub mov in mov sub movzbl test xor xor sub sub mov fwait lret clc inc inc lahf lock cmpsl movsl aaa lret mov mov mov inc (bad) xor mov cltd cltd aaa fsubrl loopne jnp mov fistl push push jle jae add addr16 and rcll adc sti add mov xor (bad) adc sar gs inc out rcr xor and nop pop sub mov mov es test repz aas jne xchg (bad) or stc icebp loop aam out lret jnp xchg movsb jecxz dec test (bad) dec fmulp imul out mov out cmpsb inc mov ja ja pop sub and clc fs dec jae xor fiaddl push arpl pop mov iret inc incl and xor into jmp daa add pop mov mov xchg frstor pop lods cmp fildll mov les das and push ss (bad) push sbb or je ljmp mov inc sub lcall lods add xchg lcall add cld shrb dec arpl mov jbe vpaddsb rcrl inc cmp iret mov pop jmp shr fildl mov push test add mov xchg xchg cld dec loopne fistpll mov enter push xchg mov xchg cld leave sar out pop stos pusha roll or popf int dec aas and jno ret shlb push cs daa pop and stos fnsave outsb lea cmc imul or (bad) cmc icebp push fcoml lahf gs orl ds mov stos test stos lret xor xor aad loope data16 loop jmp pushf movsl nop cmp scas push orb dec nop add aas add imul mov call call scas sub ds mov jge stc add fild inc pop xchg das lahf lock adc (bad) jge mov push dec scas adc arpl repnz leave out mov and clc jmp aam or fstl rolb je xor mov mov or je push out test fldl jnp daa xchg repz lcall push lret dec mov mov mov into stc negb mov push scas bnd icebp sbb mov mov mov daa out jno lods jl pop lret cs movsb mov lret pop xchg push test push mov cmp jge add ljmp inc mull (bad) fld1 pop shrb dec ret mull xchg mov in cmp pop out xor mov pop inc push xchg xlat cmpsb mov xor call cmp add ret ja xor out adc mov or sbb pop xchg std xchg xchg or xlat lcall xor or inc pop movsl (bad) push ficompl lret adc inc mov adc ret shlb movsb mov push in sub cmpsl push aaa out push mov xorl js pop stc insb pop add lret pop negl pop pop jmp outsl mov sbb mov icebp daa mov xor jle mov das push bound pushf mov or into mov ret mov out out mov xor sti xor jbe pop jne jg inc bound ljmp mov leave gs mov fisttp sti jns mov dec das lret push cmp dec lret pop stos fcom ret imul add call jne mov mov dec leave add (bad) mov add callw or mulb popa jns ds pusha xchg mov lods out loope push outsl dec mov orl dec scas sub sub xor in mov cwtl fs mov call jo mov cld xchg push mov outsb push xor cld sub sub add cli fs sub leave push lds movsl je pop add cwtl int3 xchg lret sub stc cmpsl movsb gs mov or mov mov icebp ret das push ds loope test jge inc sbb je int inc dec mov shll and adc clc sub nop ds mulb lret fiadd push xor mov sub fnsave jnp test movsb clc js jmp mov dec lea mov mov das daa or repz add cs mul push jne lret scas add (bad) jnp xor mov push lret test mov xor cmpsl cld xor leave jl mov mov es pop or ffreep and pop lea mov inc pop lock sub (bad) fldt adc out aas negl stos leave icebp clc sub addr16 popf and out mov cwtl shrl sub sti mov stos int3 jno mov jns ret js cli sub lret sub or sbb xchg cltd call pop mov mov aaa xchg (bad) lcall sub ljmp adc scas and jmp xlat fwait cmp (bad) pushf push push (bad) ffreep adc dec lret (bad) out or add in sub xchg clc aad adc mov add lods leave sarb lcall test add rcrb fucomi push jno enter sbb or sub add (bad) xor xor out mov or xchg hlt xchg fdivrs or sub push xchg inc dec fistpll iret lret adc cmp ljmp scas scas fidivrl iret inc xchg sub sbb push pop fdivs xor jl xchg and pop sarl and test (bad) mov lret and insl jb add repnz fdivs dec mov enter jno push leave (bad) adc loop (bad) xchg fsubrl jb dec dec jg (bad) (bad) dec add nop jb push call cs xchg add or jle lret and lods cmpsl loopne inc inc mov xchg mov repz cld inc sar cmpsb adc jle flds and test stos in cli xchg scas mov add sbb loopne mov cmp sub leave dec rcrl sub or jg push sub add xor inc dec xchg aas lret pop jns rolb and cs xchg xor inc pop add mov add add xchg test xchg dec jmp sbb sti jnp imul test lods pop jg in dec add cltd dec cmp and xor icebp nop xchg sub or test rorl and xor movsl divl inc mov sub adc rorb cs leave aad inc lahf mov std lret gs pop icebp adc test imul add sub and scas int cs rorb sub outsl mov (bad) movsl (bad) imull mov mov cmp jmp inc scas adc mov movsl xchg outsb sub (bad) test dec ret stc mov mov iret sub cmpsl cmpsb lods jno mov mov pusha add and adc (bad) or jmp adc sub sub mov ret and xchg xchg pop popf mov adc or int cmp add or or xchg pop push inc imul stos push popa sub sub loop xor dec mov ja inc or mov or jae sub sbb xchg sti mov push popf jecxz inc je dec push icebp jmp (bad) movsl push pop jo out popa iret sahf andl or cs or sbb shlb push jle sbb sub sub jge rolb mov dec adc push ljmp lcall cmp aam jmp in cmpsl pop in popa (bad) mov das mov inc add mov mov pop pop sarl sub ret pop loope shlb fidivr loope (bad) dec sub and sub (bad) jmp mov dec xchg dec ljmp add cmpsl inc dec adc pop pop mov pop jne scas gs fucomi lret lock push (bad) scas fst xchg test lock sub inc int or pop add xchg idiv sub into mov sbb pop ret fcoms pop fild into mov add and loop cld inc movsb cli inc adcb outsb lods pusha xchg mov push mov (bad) sub xchg push dec mov (bad) ljmp cli rorb (bad) aad scas mov fdivrp repnz loop imul mov js xchg inc jl mov sti in std sbb sub xor aam out push loop xlat mov lock or adc jbe xchg gs icebp add xor sub scas pop imulb mov pop xchg add mov repnz shlb dec lahf xlat adc cmc cmp sbb push push insb ret (bad) std push divl scas push mov push sub mov cmp clc pop jecxz aas pop add shrb jbe out jmp add out mov dec lds mov sub gs inc mov insb mov lret insb out rolb adc cmpsl mov mov pop add sti pusha and daa into mov (bad) dec pop xor xor cmp and xor or xor pop mov cmc adc pop pop popf jle push mov aaa xor jnp adc scas int3 mov jp xchg push shr jno cmp daa inc push jns (bad) ljmp xor or pushf lea into rcl mov or or (bad) dec pop insl loop add and in lods aam adc pop ja (bad) xor and (bad) testb or call sub (bad) jo pop sub movsl scas mov xchg add in pop rorb xor mov sbb mov pop mov ljmp arpl add cmc dec pop jae out push adc scas fcomps push jb push imull das mov cli push push lret jecxz push fs test in adc xorl scas sub out add push repz dec pop (bad) pushf std out mov mov sub or xchg pop mov daa xor cli mov pop push pop lret fistpl adc jns daa sub arpl out imul xchg dec das lret jmp std push mov dec cwtl xor mov or pop sub shr mov and xor mov cmp cmpsb mov pop push test sysexit lock push mov imul shl xor add scas popa mull shrl out sub stc sbb iret cs jmp fdivrs and sbb jg mov cltd jecxz mov xchg or loop fist push mov ffree sub push lret out lds and ret push in jns xchg idiv movsb mov sub jno jl ficomp jg movsb popf jb mov add push cmp mov popf (bad) pushf fs jne repnz push in out and sub cs dec idivl call ljmp test inc sub pop xchg aas fsub out mov mov leave fsubs inc add dec push stos popf mov stos fbstp jmp xlat cmp int sub das (bad) pop jmp mov fcoml sbb jecxz sbb xor ficompl xchg sub or fnsave cld data16 (bad) mov jle jmp lahf pop int3 nop jmp mulb and (bad) js xlat bound fldl2t call std adc push cmp sub mov push lods mov int or or jo mov scas lret cmp std pop movsb decb or rorl movsl xchg stos sub repnz js pop out lret xor cli fbld stc in repz jmp mov pop cs sub popf jl pop push insb rolb cli fs sub fcoms daa xor pop inc mov call push add sub repz stos int3 xlat dec add out add xor data16 pop arpl or jle sbb push in sahf pop sub (bad) mov xchg in and add aas adc mov push mov repz incl and xor adc push push leave push mov dec fdivr sub lock lcall out lret fsubs fs xor add das mov sbb add and stos and ret cwtl in add sbb adc (bad) jmp dec inc or ret js mov or (bad) cmp push fidivrl mov icebp ljmp pop mov cltd jg add jge notl push pop and das (bad) and cmp push (bad) jecxz xchg stos leave dec sub test icebp sti fdivrl test mov and sub sbb aam dec lock ljmp leave inc add mov sub xor (bad) daa mov inc mov aad jne rclb hlt fstps sub jge mov dec add cwtl jae adc aas stc sub out loope mov adc shrl jno push adc lret or push (bad) mov fs jb arpl add add std pushf out lahf sub adc xchg sbb call adc (bad) imul (bad) cmp xchg dec mov add inc cmp push rcll movsl jb test stos dec xlat mov lahf inc out xor xchg push mov das ja and jo sub xchg mov cld lds gs out out mov mov ljmp mov lret jnp add leave mov and ja sti imul pop xor out push das lret rclb adc fbld std inc test (bad) mov (bad) (bad) lret mov pop mov or adc fisttpll (bad) or push and adc jne push das jl loop sub mov jmp adc mov stos daa add jbe clc imul jbe pop lahf das push test pop xchg dec lcall (bad) sub xchg add call pop sbb pop dec ja loopne pushl js mov out pop lcall data16 ret add or test or xor jg push pop push or ja push push or jne int fsubs (bad) das mov cmpsl outsb mov iret int3 in mov cmpsl mov je push mov movsb cmp out bound gs je ret movsl xchg loop adc popf out add push cli xor mov xchg imul loop (bad) cli bound daa jge orl popf repnz mov pop mov lock sub xor inc fnstcw xor movsl sub mov bound rclb push jae icebp and cmp jo jecxz inc push inc outsb daa xor ja mov imul mov lea or cli and sub xor add cwtl arpl (bad) in sub mov pop xchg inc or inc jecxz sub add (bad) or cmp stos test sub imul rorb (bad) sub xor in cmp sub mov mov jge stos push fistp in sub mov leave pop repz cli movsb pop pop dec and push bound jns (bad) lret xorb mov sbb lret sub rcrl aaa bound movsb dec add pop add sub jg test dec in lret jmp xchg cmpsb and jno in mov xor xchg xchg pop inc push and fs int3 outsl adc adc (bad) push jle test cld push movsl scas xor ficomp sbb adc inc (bad) mov lea sub cmp sti mov out add xchg xor lcall mov sbb sub (bad) jo sub mov (bad) repz (bad) ja or in pop add fdivrs gs subb in pop data16 mov mov add sub gs sbb cs aaa pushf ds fadd mov dec or (bad) sub jle leave pop (bad) mov pushfw jb push jmp dec (bad) cmpsl iret pop rclb (bad) dec push sbb cmp or add (bad) out mov fsubrs cmp cmpsb push mov sbbb rolb cmpb or mov in xor into mov mov add test dec cmc fcompl test add pop (bad) sub aas pop lods shll xor push mov and cmp js iret sti je lods movsb leave fucomip mov loop pop xor xlat xor lock mov fildl mov leave cmp or das dec mov dec int3 cmp mov mov cmp sub std in leave xchg jmp jle ljmp insb mov lret add push inc leave (bad) cmc pusha notb popf lcall dec push jmp repz leave cltd dec ret leave xor repnz cld daa mov enter jnp pop shrl cli xchg negl push shrl lea stos sub es sub insb fistl add mov cmc in pop negl dec push jnp xchg idiv js jmp aam dec xchg adc rcrl ds add sti cmpsl jle mov mov xlat repnz fldl call call or (bad) js sti fisubr ret adc mov and mov icebp scas data16 sub adc scas mov test shrl sarb stos fldenv cmp inc lods xchg in push pop mov mov pop inc sub in out mov into mov and and dec enter das out sub clc out push and or inc rcrl jle mov sub stos cmc gs sub hlt pop call daa ret push (bad) mov imul mov and aas lock dec push adc mov call jmp pop sahf or and rolb ret fucomp push (bad) and cltd pop outsb lcall sub insb cmpsl pop sbb std test lods js mov adc (bad) stos idiv pop popa fstps pop lret std popf daa (bad) insb push std jecxz sbb adc lahf fistl pop cld leave (bad) clc and cmc popa dec ret iret mov xchg mov mov adc mov mov daa mov adc (bad) lahf push test mov dec mov adc daa mov (bad) mov out pop repz inc decb mov mov jge mov ljmp sub cmp sti sarb xchg arpl jne ljmp ret xchg add xor xchg pop xor out mov xchg jg and mov xchg dec ret cmpsl mov mov inc cmp rclb jle into sub mov add or pop xchg paddd or jg jle loop fs std cmp mov mov add xchg push popf adc jmp cmpsb cmpsl cld push jnp (bad) xlat into xor xchg mov divb bound (bad) leave or cmp cmp sub arpl out add fucomip rcrb mov mov ret test or xlat and mov sub and cli repz dec pushl mov pop xor add jmp pop adc xchg icebp notl fdivrs push dec ljmp lret mov jbe pop dec ljmp mov inc out mov shlb jl sbb dec into sub leave mov fmull cmp (bad) ljmp out and inc ss rorb sub adc add fwait sbb or testl dec or call jg pop sbb call fidivr sub sub sub jle xchg mov int3 mov xchg sahf outsl push pop mov sarl push pop test cld call roll dec cld andl shl out mov add push pop sub adc std xor incl (bad) movsl scas aas test mov das push fimull mov and out jmp xchg xor ljmp mov fs mov mov sub cmp mov bound dec scas xor out inc (bad) xchg test add and lods scas mov cld pop lahf dec into pop repnz sti adc fisttpl mov lret pop and das sub test push data16 push icebp dec in mov and cmp fistpl movsb out into aaa add out sub or rcl xor inc or jno in negl lahf hlt dec loopne sub add xorl sub mov ret push mov mov ret (bad) sti xchg ss (bad) sub out mov pop scas imul adc sub in repnz mov repnz pop lret mov idivl inc or xlat xor and aad int3 adc repnz js icebp mov clc jmp mov pop ficoml ret les out popf push or fcmovnbe inc sarl push pop jne sub dec or add cmp mov mov std test push pop outsb mov adc ljmp or popf push mov ret (bad) xor (bad) or adc leave cmpsb adc mov sbb xor pop ret sub add dec push xor sub iret add fcomp cmp xor cmp sbb iret test rcrl xor xor jmp push mov push dec bound cmp inc (bad) scas lret jb cs sub mov mov and daa out and (bad) sub daa fidivr leave mov or xchg cmp repz fmuls mov cltd jb fiadd aam push pop out cmp xor add xchg je int3 adc pop (bad) xor icebp das call jge pop in mov aas mov arpl adc leave xor lret jb bnd sbb push adc repnz jns dec add daa xchg insb cmpl inc cmc out das bound ficomp ret xor ret pusha jns pushf ret mov repz dec (bad) jae mov sub pop mov outsl repz out pop xchg and sbb stc xlat imul lcall mov fidivr xchg movsl push pop fs xchg fadd ficomp pop sub ficom jbe xchg je inc dec mov mov repnz popf adc das add loop idivl into mov dec dec pop fsubs or push add mov movsl clc mov paddw adc ret push inc fldenv cltd cltd repz and cmc sbb mov pop push ds mov mov xchg adc pop ret loop popf fchs rolb sub add cmp inc or pop dec lds mov sarl cwtl push mov stos ret sar lods sbb clc (bad) and mov mov xchg test jmp mov lea dec rep add (bad) jmp std aas mov xor repnz sbb lahf test push cmp lret lds frstor push (bad) fwait and icebp fdivrl push leave add aas jno xor insl cmp fdivrs imull and or xchg stos mov push xor adc call mov and shrl cmp sbb cli notl in pop and fsts lock ja jg popf sbb aas cmp xchg add push sti push pop (bad) push xchg pop xchg and dec sub pop addr16 and (bad) into test hlt jae (bad) or adcb mov xor and pop mov sub mov and lret aad out sub icebp test cmpsl mov cli mov push and dec (bad) sub xor sbb ss neg subb sbb mov in push sub cltd sbb (bad) mov insb std daa and xchg jmp insb adc mov subl std movsl shr and xor (bad) shrl lods xchg adc mov fsubr add in adc fdivs or jns or nop mov push pop pushf frstor fistpl sub insb sbb jbe sub sbb lds inc xlat push add mov push mov jbe push pop notb mov data16 (bad) repz icebp add sbb sub xchg test imulb jb (bad) add loop addl mov sub inc out inc stos jne (bad) xchg enter push fbstp mov jl call push pop ret out xchg inc cmpsl leave notb cmc addr16 dec jno dec sbb jl sarb int3 leave xchg sti cmp and or xchg fstl jmp scas shrl adc or xchg cmp add sarl je (bad) (bad) jno scas sbb lret fldl sti push or mov push inc imul jne popa push mov decl dec or stos sbb aas mov lods and add and mov jp stos dec or pop add pop fildl xor mov repz sbb dec mov push iret dec sub xor outsb or push cs lods mov lret negl mov lret sbb jg jg xchg fidivr add popf mov and fstl add jle jmp cmpsb push mov sub jbe pop xlat or lret cmpsl ja jno (bad) lcall xchg mov add push (bad) cmp daa movsb adc leave dec cs test out in and lock hlt xchg rcrl add out dec ret jle shrb repz movsb ljmp mov mov sbb outsb clc push xor and out test mov pop dec call test stc and lret mov add test sub mov aaa cmpsb hlt dec clc jmp ljmp fsubrs mov push push jmp add push cld jle and loop push out adc or ja ljmp ljmp jbe pop std mov ficomp or jo sbb loop or xchg push xchg pop (bad) popa (bad) xor or repnz test ret push movsb mov or stos mov or cmp xchg gs mov arpl addr16 (bad) cmp das lods in fstp fsubs and ja and cs or push inc pop test ret and fsubr xor fidivr lcall roll mov sti inc (bad) mov xchg cld pop pop out sbb push rorl cmpsl jg xor add lcall repnz inc xor mov mov movsl mov inc mov scas cmp outsl cltd inc aas in imul mulb jo pop sub popf cld lret mov dec (bad) test inc fwait outsl jecxz fiadd xchg lret mov pop leave (bad) dec jp pusha xchg loop mov test in push mov jmp repnz enter cmp sub mov cs mov and aad dec leave dec into jns dec inc lods js mov or push mov es xor mov in ret fild cs je xor sub sub jge into and xchg adc fiadd adc xchg lods xchg and xor outsb dec xchg std add mov (bad) cmp outsb pusha mov sub lahf inc iret cmp iret fstpl mov push or sbb or dec sub mov add loope or or test adc jno (bad) addr16 push mov sub lods fwait mov adc test mov inc mov bound xor pop test repz loop (bad) xor loopne icebp fucom add push adc mov cmpsl std sbb cwtl pop roll and cmp ss ret clc int3 loop push mov stc ss inc adc mov dec insl adc mov or xor leave outsb call push pusha pop mov pop sti sub sub mov or (bad) jg test fsubrp pop fldcw pusha lock sub and icebp das sub push bound or sub in movsb cmp sti inc shrl (bad) xor push and out in mov mov cli cs aas cmpsl lock add lea xor mov mov leave sti cmp mov iret ljmp sub rcl and stc push movsl outsb scas call js xchg (bad) lcall sbb loop,pt dec jge cs mov pusha mov mov movsl pop pop out pushf cmp dec mov jg sub mov mov jp imul xor pop into aas jne pop jae jo mov and push je loop clc xchg add sbb pop pushf stos mov shl mov xor xor out repz mov pop adc xor mov sub mov test mov and xor out flds mov notb add cmp shrb (bad) jb pop xor add sub in icebp (bad) fcomps clc test iret aad xor mov sbb xor ja enter and (bad) mov or xor fbstp and mov or call jg outsb pop repz sbb (bad) iret push xor mov scas xor bound testl out push ss pop pop fistp insl lods jle lds jmp dec pusha dec lret loop mov xor cmp pop repz sub fmull (bad) lds cmp xor mov inc lods ds dec ret lods not push jecxz sub fisttp adc ret mov xchg les xor jne imul push adc xor imul or ret out daa pop scas inc mov into cld pop push (bad) cmp (bad) jno scas pop xchg cmp in pop ljmp and inc push sub mov or and mov xchg pop loop jns outsl pusha or daa or rclb scas ret hlt movsl stos mov mov hlt sub fmull or bound outsl shl cmp (bad) mov out stc or ljmp mov jne add xor mov mov pop enter clc imul popf imul dec xchg or xor fwait pop mov enter es js fsubs pop mov inc xor mov sub lcall sbb sub xor sub mov sub xor sti lds and inc jo dec mov mul adc fsubl dec fscale rcl mov in sub loopne add sub mov jg pop mov imul dec sub cwtl xor inc push ss adc mov pop jno mov cmp inc and out and lods inc mov add sahf inc repnz in xor decb lret (bad) (bad) xchg aaa mov dec pusha movsl adc xor sub jmp inc mov outsb daa call (bad) jmp sahf dec inc xor or stos popa push ret or mov adc cld fidivl in ret mov imul jmp test mov popf lret xor scas sub ret xor mov and add pop mov jmp ljmp jbe xchg mov js dec repz (bad) jmp pop fsubs (bad) repz adc shrl sti or cld (bad) push pop or jecxz add out repz inc lds (bad) out stc inc pop (bad) jmp sbb mov bnd or xor jmp pop or add ljmp pop mov movsl test popa ret and and insl sahf test or (bad) dec stos popf stc sub movsl icebp pop sub sub push call pop ja push daa sub js pushf stos or ja mov mov leave clc xchg sub out lret sub stc ret je test pop lret out pop ret pop jns mov cmp cwtl jnp icebp ds add xor cmp lret inc and int (bad) lret or sub cmp lods out out ret mov and mov cmpsb jl mov fincstp das int jle xor fstp pop xor dec and adc (bad) or repz add add and leave fsubr xlat jg and ljmp push lods adc pop stc fsts sub and pxor cli mov adc insb cmpsb push dec bound push jo mov les out repnz jmp rcll das or dec adc push pop in jg cmc insl out dec add mov clc sub jae shrl into push mov push outsl repz dec xchg dec mov push lret add hlt xor lods jno and pushl mov mov mov bound testl or jne cmpb clc jl pop into mov fidivrl in and out stos int loop inc insb cmp fwait jge popf outsb data16 stc push mov xor inc pop repnz lret repz rorl adc and push inc add xor dec clc cli cmp loop and mov mov xor not in jbe leave inc jmp adc cmpsl inc jge imul sub shrb xor (bad) bound (bad) arpl mov xlat ja push inc call or es and pushf mov xchg or lret dec pop push push mov out cmp push (bad) jmp add (bad) jecxz dec mov repz inc pop cmpsl rcll aam push pop out mov inc sbb mov js sarl xchg mov bound and jns xchg sub not into fdivs leave movsb test leave pop push xor jmp cmpsb dec dec cmp cwtl sub (bad) sub mov mov sahf or add stos push in and cli sub jg sub xor inc call dec jmp call rcl imul jge aam mov lcall inc lcall into je pop sbb push or repnz mov daa add int3 aas pop ret insl or test fwait das sub jl xchg sub sbb jo test mov lret sarl mov jp movsl rcll or mov cmp outsl ret int3 xor cmp xorb jecxz push mov xor cmp scas mov sti daa sub jne fxch loope add and jmp gs ljmp adc dec mov cmp inc out cs jge and sub pusha dec data16 sbb mov fimul das mov and sub push jns int3 jo lahf (bad) (bad) dec jne xor callw jo mov mov incb cld adc lock push into sub pop pop add mov xor jbe outsb mov sub dec shll mov mov add or cltd in cwtl and mov dec (bad) fstpt cli cmp out xor fsub es or mov mov (bad) or xchg and pop pop mov mov xor out lods insl das ret adc shl mov repnz sub int pop mov (bad) lock das sub stos movsl inc and cmp ljmp and sub xor aas testl clc or int cs clc ljmp lcall stc mov mov jmp mov into or sub pop mov push and cmp ret inc fisttpll jno popf pop sub jg mov movnti or mov (bad) lods pushl jl popl das mov out sbbb cmp xchg cmp out mov test add jns lret iret push mov or mov adc lods fdivl lret pop leave lret cmc in mov stos cltd movsb inc dec and mov outsb cmp lret and sub inc sub or sahf xchg sbb test adc mov mov pop out addr16 push leave out cmp add into push sub das mov pop xor subl mulb dec movzwl xchg xor (bad) xor jnp pop sub or push ss mov test negb (bad) negl (bad) cmp ret add inc (bad) xor mov aad sahf sbb stos ja iret push push (bad) aas stos add mov hlt rcll int jmp fcoms stc ljmp (bad) and icebp lret mov ljmp mov aaa jle out pop dec iret std inc rorl push bound fistp imul xor jne enter mov daa add out jmp push sub xlat mov mov add cmp inc (bad) xchg pop add pop pop test xlat jmp lods or pop mov shr out cld dec mov fnsetpm(287 xchg push enter idivb push mov (bad) lret xchg gs mov jno sub pop cmp mov mov loope fadds test mov mov loop xor ficompl mov add icebp adc sbb icebp sub fnstcw cld xchg stos loope xchg or pop in in push and adc or jecxz loop mov stos adc out pop ljmp (bad) notl sub out in test hlt scas mov pop call icebp add test push movsl nop daa push ljmp xor cmp jmp inc xchg pop ret inc out and lea rclb pop or mov ffree dec adc in dec lods mov (bad) fs jecxz adc push sub sbb xor ret shrb cwtl cmp rcrb orb sub or mov mov sarl lock in mov out outsl sar cmp fcoml dec sbb mov push pop cmpsb push dec adc mov das (bad) jp roll ljmp imul cmp sub sub pop mov push or test stos (bad) adc mov fcompl fldenv sub xchg jmp dec loopne sub scas in and test adc mov shll fsubrs xchg lods and clc xchg fisttpl jb iret cltd fptan inc and mov (bad) xor add dec xlat outsb and adcb popf (bad) or add or scas cld inc mov or or push out push add pop scas mov cld out and cld push xchg div sub into fstps and ss out mov loop xor push int3 loop sbb or or adc lock mov sub cmc imul mov int loope push mov add xor idivl add scas dec push dec fcompl iret xor and mov mov pop pop rolb xor fbld mov mov les dec dec iret mov add mov sub in cmpsl push mov sub in mov out adc cmp xchg cs lret insb dec (bad) loopne int3 aaa rorl mov push mov lahf (bad) imul icebp or cs out sub jle pop lret mov mov sub or (bad) mov lods inc mov xor ja repnz (bad) xor adc loope adc lods dec adc xorb push scas cld add sbb int3 aad popf ret mov sbb dec xor adc pop or jmp cmpsl dec sub sub xor add xor roll jns aas sub (bad) jp popf call pop sarl mov pop mov movsl pop or xor jecxz (bad) negb cli imul push (bad) repnz notl add mov pop aaa sub mov jnp call jle leave mov stos adc je test pop sti mov mov ljmp sub js aam mov add pop or sti jne dec mov push xchg aas lahf (bad) mov jle imul sub xchg pop repnz (bad) mov adc adc mov out pop push imul mov jbe pop jns mov (bad) dec jno aaa adc dec fidivr fldcw lock leave hlt pop leave jns push fs jae shr xor sub jecxz lods into int3 das inc lds and mov lods dec in xchg mov and jg and hlt add jb daa lahf pop push out cltd fildl fbstp fmuls int3 sub xchg push mov mov adc inc and std aas movsl (bad) stc mov or push ja outsb lahf js popf outsb inc mov inc jb jg dec jecxz aam mov sub ret lret (bad) insl xchg pop mov fist test and std jle xor out fmul rcll pop gs mov rclb andb gs pop add js add push (bad) imul jl (bad) incw and add das repnz stos loop (bad) adc dec mov cmc push sbb into mov and xbegin push jl or out jne sbb fwait xor mov hlt cltd pop xor lahf jae add xor test inc inc xchg int mov or xchg enter into add popf loope (bad) fmul (bad) cmp adc fistpll or mov push mov cmp xchg jle gs push and je adc ljmp (bad) inc iret push data16 sub lcall lret xor xchg aas fucom je int3 rolb sub dec jle je call cs and testl mov stos shrl les or fcmovne add mov xchg cmpsl push mov jecxz or or int test outsb push sub xchg jl mov divb xchg jae xchg mov xlat xchg mov xchg notb lret daa jmp out and (bad) rcr rclb mov and mov lret dec std push out xchg mov cwtl daa fsubl vcomisd icebp (bad) dec and xlat cli xor xlat and mov pop jmp mov jg divl mov or fmuls inc icebp mov test jecxz mov jbe imul adc shrw jmp and (bad) pop out aas clc add xchg shr sub out mov inc ds push fs cmp push or iret arpl sub frstor dec sub inc (bad) cltd aad jge enter jmp and hlt ss xor mov inc (bad) add cs scas push cmc pushf clc xor std jne loop adc fsubrp cltd adc std int clc lret xlat mov xor mov mov jg call jle sub lcall push mov loop lret (bad) jae xchg or (bad) pop dec or gs xor mulb scas jo dec mov pop lret bnd jo test mov or mov movsb add jmp cmp clc sub cld cli xchg es or in fs sbb inc testl adc loope fdivrs les js or (bad) fcomps cli insb test or cmp lods fs stos mov sub insb lret push ja icebp dec out out fldl sub mov (bad) pop sbb lret inc pop mov sbb subb pop and mov jns mov dec push push push mov push cmp pop and and shrb stos lret popf mov lods jmp mov cwtl test cmp mov (bad) mov fwait pusha cmp jmp lret jo or add and loopne xlat shrb dec sub das aad jo inc inc data16 or pop inc lods ljmp nop sti jle nop pop mov and mov push leave ret fbld popf lock pushf (bad) fldl push mov mov or (bad) mov rcll pop stc out dec mov and lock fistp cmp mov jp sahf cmp jo add mov xor out jne in sub repnz push pop jg jmp pop loop enterw out daa or pop popf jo mov pop cli inc pop es fisubrl ja cwtl cmp pop (bad) fldcw mov sbb sub insb leave xor mov or aad mov loop (bad) cmp test ret (bad) clc mov mov ljmp mov test pop mov xorl xor sub das in ljmp (bad) xor cli and adc clc lret (bad) adc imul add or scas adc pop sub xor clc repnz mov adc ret sub pop cmpsb inc mov pusha jmp fsubrs icebp scas test or sub rclb or movnti and out pop adc mov xchg pop mov mov or lods or divb cmp pushf sub cmp lret pop xor and lahf pop push pop leave xor outsl mov and or (bad) xor fisubl push mov es sarl lods imul nop adc addps into daa xor cld push pop test or (bad) fs pop dec sub pop xor ds je scas xor mov mov in bndldx mov (bad) sti (bad) out xchg repz sub or insb add popw xor push add std xchg xor movsb pop lods mov stc xlat or ret push push call adc inc inc (bad) cmpsl sbb bound (bad) (bad) pop loop (bad) mov inc (bad) out (bad) jno test lahf xor sbbb pop (bad) mov mov test lret loop xchg jmp xorl mov ljmp lret lds mov repnz jne lret sbb jecxz sub jnp xchg mov xor and stos (bad) (bad) repz push dec and push push sub xlat and fisttp xchg inc mov add and jg cwtl (bad) sbb into pop dec loopne sti sahf mov xor aam and cld (bad) push add dec add ljmp xchg inc lahf push push fs out xor loop xor lock inc xchg or jbe in in pop fmulp and pop xchg (bad) out mov dec jne pop adc rorl pop test (bad) mov leave outsb in add mov xchg and and push popf gs fcoms sbb adc ss dec xchg xor (bad) jo pushf cmp push and dec repnz roll repz jle es (bad) mov fabs adc cli sub pushf inc add ljmp dec push stc adc add jmp or or into jmp (bad) jge shlb xchg xchg xchg ljmp (bad) je push pop jle das aad rcrb lods sub mov int3 and fisttpl out loop push mov sub xor or testl jbe sub add jecxz mov dec rcrb mov (bad) stc mov mov lods ja sub add push jae sub and int inc mov push dec std cs mov dec imul push pop push aad add sub imul xor repnz sbb xor cs sbb mov leave sub fwait dec scas pop insl movsl xor scas cld push in (bad) out repz add fistpll cs jne dec daa stc dec mov cli popf mov and dec icebp jg lcall ret jmp (bad) negl pop ficoml cmp lds out xchg add or push arpl dec (bad) jge cmp and or sbb int3 jmp and stc mov jle pop out mov and and sbb push jg push pop mov ljmpw loope xor inc cmp sub xor bnd rcr dec mov or and sbb inc movsl jnp push out das xchg pop cmc (bad) mov (bad) dec dec push scas pop sub int popa in scas ficom shr sub repnz pop test leave or lret jecxz push jecxz into xor les mov iret dec sbb dec and add stos lahf cld push iret mov xor mov lret lods js or stc fmul adc xlat cmp xchg and jb jmp popf scas imul mov test jne and test sub in mov mov fstps lret jns (bad) or inc pop push cmpsl pop xlat pushf flds jg xchg call scas adc loop aad pushf add (bad) lock sub (bad) je rolb dec stc or jge cld es push sub add out xor or pop dec lds imul xchg (bad) and push xor das ret push jl mov cmp push adc sub repnz sub je push lds and cmp adc jbe pusha or add je lods fimul jmp sub dec (bad) xor imul repz jo xchg cmp cltd out out jbe push aam add cmpsl mov popa loop insb and pop sub mov notl pop jmp sub stos loop iret or loope or push jno jmp stos push stc cmp jnp insb movsl inc adc cli loop xchg les xchg push repnz jp sti or mov mov mov add stos mov (bad) and xchg cld push dec loope jle sarl add or dec jle stos pushf dec mov std notb mov or sub orl lret icebp push movsl cli (bad) dec or and mov lret mov cmc cltd das pushf ret in push sub dec (bad) ss pop into push or xchg cmp adc jno gs flds imul cmpsl out mov inc xchg pop xorb pop (bad) pop or data16 (bad) out leave jg jae or flds cmp icebp add cli xor cmp sub addr16 das mov lret lahf adc dec out mov mov jbe idivl (bad) loop xchg mov das ret notl imul jns rep pop movsb push ds mov mul (bad) xchg std es rcr jno imull pop dec mov and dec lret out and pop jnp lds xor in cli mov (bad) rorl hlt mov in in pop mov mov je stos xor and mov mov flds xor clc jns and mov add movzbl std imul into mov cli jne (bad) bound fild mov js lock jbe bound fidivl mov movsl mov add and (bad) xcrypt-ecb cmpsl movaps or pusha xor and sbbb outsl mov and enter inc daa adc fnstsw adc (bad) lret inc jmp jb fsubs xor fadd and xlat mov sub (bad) cmpsb lock xor pop xor cs lret dec push add push sub mov int3 mov mov xchg das ror imul inc mov sti sub cs popa sbb push fcomp xor mov cmpb lret xchg inc xor into jecxz xor bound ja inc pop shll and das test xor das mov push adc fbld cmpsl jns mov pop jne sti jae xchg ret out jle push aam iret or dec js in pop mov sub mov mov popa or iret ret icebp gs inc push inc movsb sub lds pushf scas out pop xor xor mov rorb gs sahf sub cmpsb fildll ljmp cmp rcrl stos fmuls mov jg pop shr shl mov insl xchg mov lock cmpb sub xchg mov add pushl shlb dec lea jle cmc daa and xlat dec pop leave pop (bad) in popa add sub dec jmp sub push xchg (bad) xor aam xlat popf mov (bad) xchg stc cld xchg out cltd mov jnp adc orl test loop std fcmovnu and jno mov idivb inc leave shr mov mov adc fdivrs adc jae mov jl (bad) inc mov scas jmp mov fiadd rcrl or cwtl dec mov xchg jo sub idiv inc and jne inc mov int3 pop mov xchg aas push clc test fimull add jmp stos jl pop loope xor rorl fwait adc dec leave mov xchg adc mov push icebp test ljmp cli iret aad push movsl fnstsw sar mov mov jbe jmp into sbb adc xchg push add pop (bad) les idivb shrl les insb mov pop scas mov movsl or ds scas jge loop or aas repnz (bad) clc jns (bad) mov stc fisttpll jnp xor lock lahf xchg cmp test out sub sub mov mov mov in mov dec int and inc fistp or xchg (bad) jl and mov inc sub (bad) add (bad) jae or sub repz repnz into mov and in and daa incb repz data16 jl cmp mov mov sub dec or hlt rcll lret cmpl and dec (bad) xor scas xchg ja fidiv ds lods mov leave sub nop pop popf rclb (bad) mul dec xor add and fldt jmp inc push stos mov inc xchg cltd dec xlat imul aam les mov test cmpb mov jbe vpalignr or xor inc mov fcmove sbb sub subl out das out jne mov loopne jmp mov dec inc sub mov pop sbb rolb imul adc shrl out mov scas popf fdivrs aas sub out pushf insb mov adc scas sbb push mov push nop mov int3 xchg fist add (bad) ja add nop fmull idivb xchg mov orb clc shlb and xor int cs ljmp fs mov ja iret (bad) js lock sbb or daa jo lahf hlt push pop sub test or mov movsl dec int and mov (bad) pop or aad jnp ljmp sub or sub sahf cmp pop out sub jmp sbb sub push dec jmp stos out lds sbb push adc or lds or inc push sub push sub mov add cmp mov test call fisubrl out in lock fdivrp or fstpt mov push dec adc sub or push dec and or sub mov jmp cmp rcrl lds pop pushf mov cmp mov xchg in daa lret sub adc and push jmp or repnz (bad) mov xchg mov jne fmulp sbb orb xor lcall push jne insl in clc jge out xor lret cs es iret mov pop sub dec jo push (bad) mov insl and push fstl push lret pushf sub repnz mov in xor pushf mov xchg mov roll pop jmp loop enter outsl xor icebp out mov sub cli xchg jmp fwait outsl mov add stos mov test pop inc xor div mov or test xlat mov daa aam sub mov add ds mov xchg out push imul sbb scas inc lock lahf push jge xchg or (bad) push jge push and dec mov lret inc or xor mov pusha dec jge test inc in mov cmp mov sbb dec ret shrl pop dec or out sub data16 scas pushf dec inc mov out mov mov and pop pop test xor call xchg ljmp inc push push jecxz dec inc pop mov out xor shlb pop sub mov dec mov sbb pop stos daa cmp jle and mov or mov inc and mov jbe icebp test movsl mov ss and stc push push pop mov in cs clc (bad) xor jbe xchg into push imul scas aaa (bad) test gs add push and cli in movsl hlt mov push icebp das and scas mov les pop push mov out movsb lods mov jb fs dec pop (bad) das inc mov mov sbb adc xchg cmc pushf sbb enter pushf xchg aas adc scas fisttp pop pop or call ljmp xchg addr16 jno mov arpl lea call adc mov adc repnz mov xchg (bad) lret sub add mov xor jno adc jg jecxz lret mov jle mov in cs push inc imul push mov repnz movsl adc inc mov sub cmp mov mov and adc add mov std sub notb mov and aas call pushf add icebp jmp repz imul fidivl mov xor mov xchg sbb imul test out sub fisub lret mov mov jno inc rorl pop adc xchg iret lcall in xchg sub popf mov fldcw dec jb and dec (bad) scas sub in mov icebp out and cld jmp sub sub divb into stc xor adc mov dec xor je mov das sub fsubs add adc daa out jb pop call pop ds mov xchg ror xchg ret daa les lret (bad) fnstenv aad sub movsb dec xchg mov pop scas cwtl lcall popf push fistpll mov sbb js hlt cmpsb jno hlt mov fisttpll pop gs push push outsl push clc aas mov xor mov add int cmc insl sbb push out les fnsave pop mov fsubr (bad) sar xlat mov push sub mov and inc xor scas xor sub stos shrb out (bad) cs lock dec lock stos mov dec mov es mov ret push xchg push repnz mov jmp inc fs lret clc add dec popf jae movsl sbb ss lds add cmp sahf adc xlat mov xor push or ret sub and pop cmp xchg out call mov mov pop ss movsl je pop ret xor mov cli xchg pop test and or adc notb sub xchg inc and mov xor xchg push mov in mov hlt testl dec pop jb jl lret pushl icebp push sub sub test ficomp test ljmp and pushl js std push in in test and push add mov mov rolb xor les mov mov cmc fist decb std jle gs adc (bad) loop aam icebp add sub stos push adc stc pop sbb sbb leave mov int test mov mov std adc lods gs outsb ljmp adc (bad) je mov sub ss xor (bad) xchg lret or (bad) loop dec rorb cwtl out inc xchg cld sub cwtl pop enter jb or sti cld adc jge mov sub das int scas sub cwtl shlb stc neg imull in sub add movsb cli loop xchg and sub mov pop or add out mov mov xchg fs or dec fwait and jmp adc dec xor test insb mov inc mov xor add out imul xchg jnp jmp jl imul sarl gs cmpsl mov adc int3 jecxz clc and and mov mov push addr16 sub xchg (bad) bound sub push push lret or fisubr aas mov adc rcll call das test jmp or jle adc das xlat je js push stos fnstcw cli aad test cmp das cmp ret sbb jle addr16 mov push in push and xchg mov out dec sbb sub xor sub rcr daa arpl ret xchg add insl cld inc inc cmp leave inc clc pushf mov cmp das popf pop aas dec hlt inc jmp (bad) out and jmp jg push sub sarl int mov push clc mov mov pop loope pushf movsl mov push xor mov jo adc je in das test mov stos add mov negb add add sub inc xchg jmp xor push movzbl in sub jmp test pop jae scas fcoml enter mov or nop negl nop dec lock push and in mov pop add mov xor decl adc sbb dec sub js jne jno jecxz scas rcl dec (bad) lret mov daa push ja fcomp and cld and aaa in xabort and sbb (bad) pavgw (bad) or mov jns or (bad) mov sub mov dec test cmp xor jo jmp repz daa jmp xchg mov xor add xor imull mov idivl scas dec cmp and mov jb popf jno imul pop or push test mov or mov fdivrs fmuls and inc mov inc (bad) not sbb pushf imul jmp mov ja aam ljmp outsl sub ret sbb xchg dec nop or cwtl mov (bad) xchg cmp xor rorl rol je clc cmp xchg jp jle pop dec loope (bad) inc (bad) popa orl sbb mov mov fstpl jbe fnstsw dec jg jp je leave sub movsb push and jecxz add out je les stos pop sub mov mov xor icebp cwtl mov fcomps mov (bad) lahf lds fist xor cmp mov ss movsl leave sub (bad) leave mov lock sbb mov test cmc cwtl clc ljmp out imul ss and push sub add add or leave lret bound in daa push (bad) xchg or wbinvd (bad) pop fwait lret loop stos sbb push xchg sti leave jmp mov outsb or mov pusha les or add inc mov add fiaddl (bad) mov ret loope stos mov sbb or std (bad) cmpsl lret je shlb cmp xchg sbb int3 adc scas mov lods jecxz repnz in mov idiv and or inc sbb inc mov dec xor enter sub push jle and pop int3 push dec out cmc or (bad) mov sub (bad) sub pop or lods inc lret out shlb enter syscall aad rorl pusha das int call sub fsubl out bound into pushf jne fwait imul dec pop (bad) (bad) div icebp pop fs xchg dec addr16 sub sbb lret or sub mov adc fstpl sbb and jge mov push mov or pushf jo xchg jecxz mov push push xchg (bad) mov dec add xor lods mov imul imul (bad) jle andl fbstp push subb or sbb push pop aam inc pop push or repz dec rcll inc xchg icebp dec aas test mov and push sub sbb mov lret mov bound fildl and and cld or roll pop imul dec and les mov xchg pop ljmp arpl pop enter mov andl jns insl and mov push gs fnstcw cwtl imul inc repnz pushf imul pop cmpsb pop sub scas and movsb mov add repnz cld std sub insb (bad) mov inc or fstps ds icebp xchg pop fs imulb lret popa ret xchg push sbb add and adc stos sub fimul dec stos mov repz xchg pop mov adc and push les inc aad xor scas out shrb cmp mov gs mov pop cmp and xchg jno xchg divl std mulb loop jmp or ss pop addb das (bad) jnp mov pop stc xchg dec sub pop js (bad) xchg pop jmp cmp adc repz repnz imul sub add and mov xchg push inc push movsl fisttp rclb decl or mov cmp inc aas push (bad) or mov lret xor adc sbb jae jge cld fs lcall sub add push push jo sti and test xor dec lock lret mov pop and sub dec sub cwtl and loop push lds cmpsl pop inc cmp das enter vorps lret (bad) pop repz sar test cli jl sbb dec test sub push sbb xor sub out popf xlat mov xchg insb xlat daa and jge es adc out mov in sub xchg sbb pop dec notb rolb dec xlat shrb out mov out bnd sub mov inc mov lds and xchg adc push idivl xlat xor sbb mov (bad) data16 idivb mov dec push sbb movsb movsl daa stc lret dec jb and lret leave lret pop xchg nop fldl pop test xor xchg adc jecxz mov mov icebp loopne in fcomp cli inc (bad) div in (bad) or xor push insl daa adc adc mov (bad) pop mov mov xor inc enter es mov push leave cmp cmp sub xor neg inc mov or sub std sbb xlat sbb fild dec shrb (bad) negb add cmp pop inc out pop std dec rcrl shll mov cld mov xchg idivb xor ret dec mov or sbb rorl and test cli fcos in xor repz dec lock mov adc cmp les adc (bad) shl push mov xor and and mov loop push shrl iret push jmp lret fdivr lds in xchg icebp jb loope pop divb rcrl cmp add jbe push push jle cmp or push addr16 add (bad) scas mov data16 add add ret xor sub ds in out nop repnz cltd (bad) out sub aas int3 imul add add xor sti daa or and and sub sub xor xor push xchg mov sub (bad) adc xchg mov xor test or (bad) adc mov mov inc jecxz in inc movsl test and loop push jno dec leave iret jmp pop jmp sub cmp sub icebp jns xchg pop stc dec mov mov mov push rcrl jb mov xor mov ret jle ret and out lods into cmpsl gs aaa inc data16 mov enter gs mov pop pop daa and sbb pop xchg dec out add add sahf mov sub jmp dec jb and (bad) enter xchg lock (bad) cltd popf insb aas xchg scas int pop leave xor or jmp pop shrb movb xchg mov cli (bad) add mov push out adc jbe and or inc inc or mov dec cmp cmp leave xchg lock imul push sub mov xor ss (bad) insb movsb cltd and aad leave jg outsw mov sub sub mul mov sti xor iret pop (bad) mov sub inc dec lret add or jbe dec mov lret loopne mov jg push sahf inc pusha enter push (bad) xor xchg push sub fistpll dec nop and lahf fmul push and ljmp std or adc insb sub dec ret push xchg mov push call leave push xchg cmp data16 imul adc mov out fcomps cmpsl loopne mov xchg cmp dec add aad fbld loop imul mov mov mov testb jmp jmp jbe jne data16 fisubr xor sub loop (bad) out cmp stos bound jmp mov and mov mov add shl icebp xor jo fnstsw push pop enter mov mov adc adc (bad) loop xor les cld mov add xor mov call roll into leave sub (bad) mov mov sbb xchg gs sub popf mov lods inc in fsubrs mov nop inc add call cli or pop or xor call dec pushf xor mov mov cwtl and mov sub add mov scas scas repnz mov out push das mov jo dec or comiss rcll lock mov pushf out mov push stos xor mov test pushf xchg loope sub movsb stos push mov cmp sub jecxz dec pop jg cld xchg fs cmp ret movsb out sub das cmpsl jae idivl or ss loopne into (bad) xor (bad) sub rcrl in xor mov pop push subl adc push gs mov dec mov dec (bad) dec pop in mov call mov das test mov lcall stos push jge fistpll cmpb mov or (bad) jbe push in inc adc and or pop ret mov push mov dec mov cmp sub jle lahf ljmp mov or add cmp mov inc movsl cld mov xlat adc mov out jo mov loope jnp scas pop mov fidivl mov dec or dec jmp sbb in mov daa (bad) pop adc sub add nop xchg pop mov push pop sub mov arpl pop (bad) push out lods and imul out test pop mov pushf xchg add insl dec mov imul mov dec and pop mov imul fnop ds cs icebp push cmp pop mov add inc addr16 sub loope mov add mov and (bad) scas dec adc mov add jbe stc out pusha pop pop add mov daa push fistl (bad) idiv pop xor mov mov jne dec dec sub push ja jae imul loope incb (bad) rclb outsb sarl cmpsl jbe mov (bad) adc and inc xlat inc rcrl xor and adc test mov pop or call inc push fst hlt popf testb inc add loope xor pop icebp xchg test and mov test leave cld push mov xchg lds lds ret push push sub rcrl cli push or lds mov mov dec mov shrb mov jmp cltd sub and mov scas or jmp jmp cmp js xchg std ljmp subb xor lods (bad) (bad) repz mov or popf pop daa mov in sbb adc dec lret std jl add lds push in cltd push icebp push loope fisttpll imul cs inc mov flds iret push cli sub or testb insb mov movsl repz sub cs jo ret mov mov xchg mov dec xor fnstcw pop pop fsubs cwtl push mov or repz fistp cmpsl ja or mov pop in rorb (bad) xor mul add jle pop pop (bad) mov jle mov repnz cld xor int jecxz imul pop inc pop pop jmp sub in push lret mov push ds gs repz mov xchg repnz lret cld scas rol shr ret (bad) (bad) lret adc stos mov xchg jl imul (bad) mov leave leave push and ss daa out into jbe add imul icebp xor mov pop jmp and add adc mov mov dec popf cwtl syscall add clc inc xor add mov push pushf ret leave dec inc mov pop icebp in jg jle xchg mov in fbld mov mov (bad) mov mov xchg leave sahf xchg mov sbb outsb mov inc dec das aam leave fsubl leave icebp outsl fldcw flds fisub sbb xchg jg sarb outsb ret fdivrs xlat jmp inc sbb sarb ljmp xlat dec sub jmp mov push out mov decb and notl or xlat cmp out lods shll mov push xor fcomps pop (bad) cmovbe pop rorb int cmc (bad) cmp std or repz add mov add jne and aas fs call mov cli xor cld and mov xor dec or data16 and or push jl or push sub xlat popf jns cmpsl and and je fs mov cmp or stos mov xorl stos sub sub cmpsb lcall push or aas pop aad (bad) jne mov mov call jne dec nop addr16 push lcall mov mov cld sub rorb cmp iret daa sbb shll fs loope mov rorb js jp (bad) jae cmc test incb inc or adc dec into cli pop je jmp mov cmp fbld dec aas lods xorb fbld daa jnp adc jmp cmpsl aad pop jo mov loop out and outsl pop into scas sub imulb or into bnd cmpsb in idiv pop shll pusha inc pop icebp movsb daa clc lods pop clc mov or lods push pop (bad) addr16 (bad) sub sub mov pop sub add or add repnz mov mov mov iret scas test sub mov or mov sub std movsb cmc loop mov jo jb dec icebp int sub cmp nop lret mov inc aam shl rorb movl sub pop lahf jbe jmp sbb jmp or fimul (bad) imul xchg cs pop pop je jp mov (bad) mov cmp aaa dec xchg enter fadds and (bad) rolb jl insl dec push leave mov test repnz xor sbb add pop lods and loop sbb shll fisubr test repz daa push sub dec lret pop mov imul pop repnz sub adc lahf adc pop mov lahf xlat mov add icebp jmp jp xor push rcr or (bad) popf das in rorb (bad) test ffree decb ret sbb sub cmp flds pop push sbb test cmpl cmp xchg sarl fstl xchg out daa jle fistp mov iret dec mov (bad) fidivl (bad) xlat mov sub aad aad idivl (bad) mov lods pop stos add stos mov pop lds in push movsl (bad) aam orl add fs and mov xchg mov jno or dec xor dec dec scas cmp imul jae aaa sub adc stc jle (bad) cmp pop fidiv xor idivb movsb and mov add mov mov (bad) pop out and rcrl repz jmp mov gs ljmp sbb xchg pop cmp dec sbb xchg inc jmp in cmp lret push pop dec cld (bad) xor jmp repnz pop sub mov dec mov adc lahf or daa sub adc pop stos push mov adc test repnz jg inc movsb aad inc leave lods fisubrl cmp xlat lds sub lcall stos mov test fist add sbb mov sbb mov dec lock mov leave mov pop iret dec mov jle lahf movsb out mov (bad) pop data16 das sub fnstsw lock mov clc movsl cltd xor dec push js enter mov popf mov dec ljmp mov add cmp rep repnz imul leave ret push stc (bad) in icebp add xor or inc popf xchg xchg add (bad) sub or jg rcll mov or adc pop das push aad fnsave sbb test push rcll aam movsl repz sub movsl mov fdivp push cs rcl lcall add or cmp into dec rep lfs leave pop outsl call cli cltd stc jle in jle test das cmpsb aam mov mov clc xor cmp scas push mov or fstpt adc add dec lea aas lds xlat mov dec mov sub punpckhwd or mov das pop jno dec push imul stos data16 popa dec mov pop mov mov fisubr test ja repz lods push ss sub dec fstl and jle push mov mov test ret cwtl add add push dec mov add cmpsb mov jecxz mov pop stc push xchg loop dec imul xor push cmp (bad) in add repnz xor push and scas mov popf gs mov repz movsb pop in ljmp mov repz out out into mov xor pop push gs outsl jecxz and add xlat xor jne stos or and or sbb mul popa adc enter rcr ret fisttp nop dec mov dec mov cmpsb ljmp and adc out lods insb andl aas cmpsb mov lret mov iret test jae adc sub in (bad) aad in mov pop pop pop jns push movsb xchg pop std jp jmp iret or out add jecxz sub idiv outsl sti cwtl xor test fdivs xchg data16 sahf sub push dec and jmp ss cli out push dec movsl int3 mov xor cmp push call sbb jmp sbb daa jae xor mov pop mov jg insl xchg out (bad) pop mov and dec out aam mov mov leave mov and mov cmpsl dec pop mov mov sub adc pusha stc jo or sub and daa dec sub leave xor xchg stc mov xchg loope das in jp stos xor ja pop mov in (bad) adc sub or leave add in in loop (bad) xor jge lret pop mov sub push ss lcall mov add xor or out (bad) fisubl xchg imul fwait rcll call sbb or pop mov leave packssdw (bad) sub popf fistp push (bad) jbe mov outsb sub imul sub nop and push int3 lahf pop xor bound xchg lret xor ss mov scas mov jne clc out je cli test mov fcmove inc mov bound sahf pop pop pusha mov out je stos into shrb jmp or fldt pop data16 das and shr mov mov cmp add daa ljmp and daa or jg aad test pop sbbl out sti popf xor cs sub and mov cwtl mov mov cmpsl inc add sub pop pop daa dec (bad) mov inc call notl push cmp lods cmp push fs sbb ret add add mov in push or icebp stos cmp add mov aam xchg imulb xchg ljmp sub popf mov sub (bad) ja push pop leave frstor jbe pop mov mov cmp add ja inc jbe jmp mov rol or pushl sbb les sub dec xchg pop and out negl dec jns xchg movb pop nop les iret and push (bad) adc (bad) in jbe out jecxz and xchg pop (bad) mov (bad) jne add pusha ret icebp push sub lods xchg out ljmp fbld movsl icebp push test and dec jmp push icebp sub dec ret pop push xor cmpsb mov xlat and or push das mov je push leave fstps sub push popf incl adc sub push inc xor (bad) hlt das or push mov pop cld lret pop imul cld pop sub imul sub mov rclb out fnsave in and into jle pop xchg mov outsl add mov push jns lahf call clc out mul dec and push sti xchg lock jb out jbe pop rorl das sub in in aam adc cwtl pop lret stc pop flds das aad mov fs icebp adc rcrb add call mov pop aam jmp xor sub pop pop int3 int push fisubr rcll data16 lret xchg (bad) cli faddl sub xor dec mov cltd popf fnstcw icebp mov lret mov lret (bad) cwtl or sub pop lret std xchg jecxz and jae lods xor repz gs inc pop test sub ret sub push negb lret mov and push stos sub xchg les cmp push aad add call push mov test cmp fwait or jno sbb and sub stc addr16 repz mov dec inc dec jle sti mov cmp or mov movsl call sbb lret pop ret jecxz cmc cli mov loope sar mov icebp fldt popa push sahf mov xor mov adc push xlat sbbl sarl ret idivb aad xor (bad) repnz das jmp push sub mov add jecxz js repnz mov cmc push outsl mov or or add pop icebp xor mov jge xchg mov popf cmp jl add cmc dec out mov add add lret mov jle add xchg lds sarb mov cmp sub add cmp mov mov (bad) xchg pop fisttpll lret mov jp,pt or sub loop (bad) je push sub (bad) (bad) push sahf aas add ret bound and mov mov movsb xchg movsl xchg jle pop fwait dec adc xor icebp adc movsb ljmp cmpsl push push add (bad) xor fisubrl loopne repnz cmp stos adc xchg daa clc pop cli je aam loop sarb fst pop mov mov push sub adc movswl imul mov inc rep mov out test pop leave hlt mov loope xchg inc push and aam fs pop out cmp or sub je xor jmp test movsb and incb inc or ret or (bad) push adc add dec test sub or xchg test mov push add xor test add mov lods inc pop xor or out mov and sub mov jnp push movsb mov ja push cltd mov out sbb xchg pop cltd mov sub sub fwait repnz sti (bad) and jg dec mov icebp dec adc icebp loop mov dec addl jo in repz push jmp add xchg out mov je out pop imul lret jecxz out jle ret bound loopne mov add add push mov pushf push xchg rcll inc xor and push les or rclb jl lock mov mov jmp lahf inc sub lods cli mov jecxz mov jmp mov (bad) cmp (bad) mov push psrad push mov mov jp and cmp cmc (bad) xor dec mov daa jmp inc movzbl fdiv add and sub out or mov arpl pop mov pop sti ret adc dec rcrb test lret cmp sub pop loopne andb adc fmuls pop ja (bad) lret (bad) fisubr ficompl hlt pop leave into sub jmp push popa out js mov push sbb lock stc aas mov sti inc mov sub mov and ret outsl das dec test or sub int out lcall mov outsl lret gs cwtl popa das or ror inc jl imul jmp mov dec scas lds movb loope (bad) lods into xchg stos repz push shrl xchg mov add scas mov fstl and shrb call idivl (bad) stc rorb cmpsl lock into xor jmp fnsave and pop test mov cli lea shr cmp popa mov lea iret and out pushf inc push xchg (bad) and mov (bad) fistl pop test into xlat push mov jp loope sub out std adc dec or cmp notl js gs iret iret xchg push addr16 mov call push icebp sub xor mov jmp adc repnz lock bound faddp xlat stc jbe mov mov and jnp mov add mov jmp loop repz (bad) dec out sub mov cli fstps test mov lcall inc add dec lock cli xor lea negl fwait inc pop lock jmp mov (bad) adc adc adc cli jb jmp add bnd movl xor test dec mov dec sti xor jmp mov pop inc pop orl jbe daa pushl arpl mov or xor mov cltd mov out mov sub dec or stc imul xchg scas push das into fwait popf push inc jno jnp stc fldcw mov xor adc and jae add shr out call mov cmpsl insb pop xchg fs jae adc test pop add (bad) dec jmp add btr repz sub sub popf sub cmc adc cmpsb mul shll jns sub xor stos and pop loop and cmp push movsb xchg in xchg repz das or ud2 adc xchg cld ja fwait pop shrl add (bad) test xor call out rorb cs lret cmp cmc adc jo scas pop xchg cld sub (bad) es ljmp ss into popf cmc xchg mov lods cmc lock mov pusha stos out mov push mov das aam jp mov mov cmpsl inc dec mull push std stos fs sub add xchg mov mov imul outsl call lret aas jbe shlb insb sar fwait and mov or and sbb cmp hlt push or add popl mov jp out mov daa pop pop xchg imul pop sarb shrb adc push adc sub cmpsb xor leave stc (bad) daa aad sahf idiv cmp xlat clc iret lds sub imul sbb xor leave shrb pop mov dec iret dec jmp sub dec shl shr (bad) out mov into imull bnd rcr cmp mov or subb sub fs mov js pop lret sub push scas lret ret dec negb sub xor mov insb js ret jg xchg dec xor repz push inc mov xor inc loop ds gs dec or cld add adc fidivr out lret add xor or popf je leave (bad) pop mov jno sub ret push xor lret ret push dec push sub cli cwtl lret fucomp mov or push add inc out mov dec dec and xor cmpsl cmp (bad) (bad) into in or jbe (bad) iret jo xchg and imul popf inc pmuludq mov add fnstenv iret aas pop xchg mov (bad) fcoms loop add mov adc out mov xor cmp in mov into cwtl lret inc pop scas jl cmpsl fimul fistpl test xor dec mov add xchg pop out sub dec pop mov mull iret gs out ret mov movsl (bad) adc out gs mov pop xchg and test subb out mov add xchg xchg ja das xchg push mov jle cmp add mov mov lods jmp roll lret or xchg mov push push adc mov jmp in sti je leave fbld cmpsl (bad) lret and xor jns loop push in sub pop popf xchg fcoms fcoms mov add cli jle outsl push pop outsl push shr test es loop movl sub pop insl call cld mov stos ss sahf repz pop in pop (bad) mov hlt test negb xchg mov jle sub in fcom or shlb xchg stos pop push sbb lahf sbb pop cli sub mov xor xor test sbb out lods (bad) (bad) sti sub or aas adc enter lret repnz loope (bad) jns (bad) lock cmp xor jae mov sub jno popf sti xchg aad rclb loope sbb adc lea lahf (bad) cmpsb jge (bad) repnz mov lret test leave mull xchg aad dec xchg cld and mov pop repz cwtl push pop clc lock xchg je push int3 and xor push mov cmp add mov fxch dec jge imul pop mov xchg push or data16 lss jmp xchg mov sbb add pop pop js notb xchg (bad) xchg pop xor mov (bad) sub pop icebp std jle add pop mov out push mov lret add and iret mov data16 jae adc mov outsl mov stos repnz nop xchg dec scas lret int3 xchg or ja les mov mov dec mov jbe jne or xor stc out stos aaa out or into stos sarl pop bound aam dec incb or or in aas pop stc cmp (bad) sub pop push pusha es xor stos jg das lds rcrl push sub xor or and mov jns dec xor ret mov hlt or xor add clc or out (bad) inc repnz ss mov sub push jge loop inc mov mov and inc ds mov bound mov add mov (bad) mov scas arpl dec out xchg ret dec push sub add stc cmp fnsave pop pop mov and mov fisubl into add mov or or jne push sbb sarb sbb sub in in daa mov out xchg fisttpl xchg enter push or push push (bad) xchg je xor loope push or xor mov sub fwait inc jne dec fdivrs dec push or sbb xchg inc into stc sbb movsl push int3 out or adc cmpsl popf cmc xor or mov test fistpll out push cmp xor sub inc popf jo dec iret arpl pop xchg sub arpl mov mov loope jbe insb mov enter sbb push ja popf jmp imul mov cwtl mov bound aaa or xor cmpsl arpl aad mov imul xchg or jns cmpsl rcrl repnz into cmc adc popf mov push subb adc (bad) sub inc sub push sbb mov std inc dec cmpsl pop adc pop xorl push push aad mov cmp sti cwtl es ret in dec sahf leave scas pop or pop xchg inc sub mov mov sub sub cmpsl pop icebp call stos fdivrs ja add push (bad) lcall jne ror loop pop jne add fsub mov fidivl icebp ret mov xor out mov sahf pop popf jmp mov fcmovu xor outsl pop lock fsubs scas into mov lcall negl sub dec or jle jns imul push dec lret movsl je ret xchg mov sbb (bad) pop negb jbe loop jmp loopne sub mov (bad) imul ret cmc mulb sub inc and rsm arpl ret lds sbb xor imul outsl rorl push loope jae js sub pop clc aam xor (bad) and sahf out mov cs out and mov sub mov mov outsb hlt sub mov lret xchg negb testl dec stc mov mov and xlat movsb inc jns cmp js pop (bad) out jbe popa test dec pop xor xor inc repnz or and cmp dec mov loop xchg pusha push (bad) cs cltd inc shlb mov push mov sub xchg or pop push inc push (bad) jbe sub nop adc lcall call add xor stos fnstcw jg jmp out std pop rorb in ror scas aad xor icebp mov sbb xor imul mov repnz xchg add mov dec inc jbe sbb outsl dec mov stos sti fsubr cmp aam stos and and dec pop ljmp mov outsl pusha lret out ffreep pop sub and sahf sub (bad) lret sub pop lods loopne ljmp dec rol sahf lcall xor stos pushf movsb sbb data16 push ss push inc xchg neg enter mov imull cwtl xor aas out and (bad) (bad) mov sarb popa leave jmp fnstenv addr16 in ljmp (bad) cmp pusha roll pusha sbb mov gs dec jg ja pop ds mov addr16 mov mov inc push add jbe xor jne xchg lods inc es and shrb xor into ret negb add popf mov ret dec repz cmp (bad) cmp jno mov (bad) dec pop push adc repnz pop jo sarb mov (bad) das stc into dec inc pusha jb pop aas jno xor jnp hlt lea es imul es adc jl stc pop and sub (bad) call jg mov sbb cs repnz pop lods das and adc dec or movsb xor icebp movsl aad adc pusha popf pop aaa sbb cmp lock adc xchg push and sub dec push cmpsl testl sub loope mov ljmp mov xchg cmp icebp mov or adc sti cmpsb inc dec lods push mov xchg adc sarb jmp mov data16 cmp cmp sbb inc adc sub shrb inc nop inc pop push int3 pop ret daa mov sti lods fpatan lods aam fs jmp (bad) dec scas int3 loope xchg inc sub xchg sub jmp dec test ror gs outsb mov lret bound clc loope cmp (bad) sub cmp mov cmp outsl pop std out lret inc out (bad) mov fucomip out imul mov daa dec sbb test inc add dec shrl or repz mov push (bad) aas bound fsubp js loopne adc movsl bound xlat repz sarb cltd inc sub pop xor xlat daa xor pop out clc adc rcr and leave clc les xlat jae cmpsb fisubl xor rcll lods push sub mov cmpsl pop pop jb leave cli jne test xor leave xlat mov out scas sub das or add or outsl lods lods mov xchg movsl fbld daa call ret add push loope (bad) jg es dec sti lcall pop cmpl sub add int xor mov jge cmp icebp mov sbb add cmp insb dec in fwait mov push inc test inc xchg mov sbb iret sub and jnp mov out inc dec and jle rol xchg pop cld adc clc mov cli lods into int push sub cmpsl aam ljmp jb and movsl push xchg scas test xor lods cs les mov lds adc je mov xor jg xchg pop imul or pop xchg and scas xlat sbb popa fildll or add outsb je pop jg (bad) mull out repz add sub push lahf test idiv cmpsl fimul cmc inc (bad) mov in cmpsb push outsb push jmp je lds repnz rcrl or add or sub inc xchg and loope xchg or push outsb loop xor add sub mov mov mov aam add sub sar xchg mov xchg hlt in push sub mov mov neg adc lahf pop cmc pop lret call fs arpl bound ret sub cmp mov dec out js icebp es push pop or add mov jbe lds mov enter sbb xchg out test je scas test jbe jl fs outsl mov movsb and loopne ret notb fist jbe mov inc xor xchg adc push in shrl jmp mov and daa (bad) shll stos call out (bad) add mov jecxz xchg stc ret fsubr gs cmpsl and adc arpl mov cwtl (bad) stc xchg dec mov divb gs repnz pop in and push push hlt jl pop push pop loope xchg in add fisubrl push mov (bad) dec cmpsl fsin xchg shrl jnp xchg push pop mov add bound (bad) aad xchg mov and movsb mov jmp pop into in push ret dec icebp mov in js lock xchg out (bad) ljmp popf repz lock push lds push cmp in add jbe (bad) xor cld rcl cmp inc cli sub push mov mov arpl sbb fs stos ret pop (bad) mov rolb mov clc push in inc das sub and imul xchg aam je pop jmp and testb adc jo loope push mov scas mov das shr pop mov test shr add add mov push repnz xor sarl dec das and stos cltd xchg cmp mov and or and cwtl pop fs mov jmp adc fidivr (bad) lock mov in mov jbe notb in movsl scas jae push sub lret incb mov outsl and pop leave mov (bad) pop repnz frstor bound sub dec (bad) ljmp pushf cmpsl rcl mov shlb ljmp std xchg fs add rcrl push aaa jmp clc mov mov subb mov daa and add jmp add xor or sub xchg shrl cli cmp adc cmp push sub ja stos dec repz lcall sub sarl pop cli xor fistp push jmp fidivr pop repnz xchg aaa cmpsl insb lods pop rorb push sub lcall es fisttpll inc sub jae lods mov pop xor adc cmpsb cmp mov movsb ret sub mov jecxz icebp mov fisttp mov cmp stos add and xlat leave icebp sub lret out sbb dec repnz (bad) adc mov ss arpl das into outsb dec mov add idivb jmp adc fcompl pop pop fs rcr push adc cld inc mov sbb rorb pop jp mov and mov xor sti jbe outsl xchg out jmp inc lahf xchg imul int xor aam push out jg push mov adc repnz add out xlat push pop push push das call popf sub (bad) ds pop push lds aaa xchg pop or shl or (bad) jg bound insl xchg push sub lods mov mov pop out or clc in loope leave bound into pushl rorl cltd repnz or leave lods push cmpsb (bad) mov push push gs movsl in push dec and inc dec mov push mov out out add and add ss mov stos out xchg cwtl dec notb push int3 adc shll pop int3 aas repnz dec xchg (bad) xor add cli xchg lahf lret mov pop aas gs hlt aas repz (bad) std adc popf pop or psadbw xchg cwtl loop repnz in mov adc dec jmp adc jae iret pop inc jp ret test sub pop test push clc ud2 loopne mov fdivs jnp pop inc aaa add (bad) push lret push pop lret pop je mov inc (bad) lods std les repnz out pop test ret xorb fimull jns imul ljmp (bad) push daa icebp (bad) xchg loope and out mov std or jle ret movsb jb add fucomp lahf inc mov cmpsl sbb popa xor and mov ljmp sub das fnstcw scas sub mov (bad) push pop in jg push inc outsl dec xlat lds cli ljmp (bad) mov das out loopne pushf aam insb outsl mov mov or add xorb sti jns cs jp fbld repz add jmp push ja in inc mov xor push sub test or cmp pop jo mov insb (bad) jo (bad) mov mov or pop pop je ficoml adcl mov mov cmp std ds push xchg ljmp mov js repnz loop push rclb or or sarb out sub pop sbb sarb lret sbb mov jnp mov lret movb ja sub ljmp xchg gs and ljmp nop pusha (bad) and (bad) pop int3 xchg gs out add lock mov les xor pop mov fcoms into push sbb cmpsl ss aam loop xor into bnd in cmp mov pop xchg aad jno lret adc mov pop sub jle imul xor ds jmp mov mov mov out xchg lds or rcl or imul xor jp push add out mov adc out adc (bad) popa inc add inc notb dec andl pusha mov and lods lea push inc push cld bound lea or pop and push push lods js movsb scas or push xor cwtl jb stos cs adc or gs dec add pusha or dec lds enter add call push sbb cmp stos popa inc ret sub push out ret cmc pushf imul fs cmp in xor popf out fdivr pop pop scas mov or mov lret stos xor mov add scas bound jmp out adc push insb es das bound lret bound cmp xor jl and sub jbe mov andl cwtl or jle jb flds ljmp push xor xchg jae andb sub or roll mov xchg sbb loop push in loope sub mov mov loop call into dec dec (bad) lret adc out cmp xor imulb pop stos (bad) xor push loop jne mov lret mov xlat sub dec sarb push cmpsl jmp xchg adc daa icebp (bad) hlt jl (bad) cmp scas jg pushf lahf dec loop (bad) or push jle mov mov adc mov test and push cld jle fsubl add stc inc mov stc xor repz mov mov ret imulb sbb test cltd cmp loop push pop sbb rorb add add mov repz les movsl clc xor mov xchg inc or ja in sbb imul je ret mov scas fnsave mov and mov stc inc mov jl in movsb and test out mov sub pushl subl cs sub jg sbb pop xor push and scas fsts mov cs jb into fincstp inc or test dec mov dec lds cmp repnz mov jmp ds and inc mov xchg push add sub cmc sbb fldt fnstenv das push inc ljmp and clc or mov push lea add inc frstor dec lds push rorl call scas repz shlb mov lret ret mov mov mov (bad) insl xor aad mov pop dec mov ja inc jp je xchg mov jns (bad) xlat add mov dec test jge jns lock cwtl addl fcoml push roll enter repnz jne sub cwtl dec and sbb adc pop mov (bad) repz ljmp fbstp push cmp sbb jmp aaa xchg mov push inc xor and xchg add xchg (bad) or cmp cmpb adc dec iret ds mov stc mov pop jno mov mov adc shr test sub jecxz dec scas test negl imulb cmc (bad) out repz mov lods das or sub shrl push imul mov jmp mov arpl ret xchg fistpl mov pop or lods rcl pop mov mov stos lret aad fcmovnb aas imulb imul push test adc and (bad) in push (bad) push dec icebp and jg (bad) xchg jnp cmp sub aaa or add ret dec loop mov inc cmp int cs daa fcomps ds pop loope jecxz out xchg stc mov mul repnz fucomip pop xchg pop mov or dec mov jmp sub or int add cmp aaa das adc jmp jb xchg sub mov test cwtl adc mov lods pop loop aad cwtl adc lret (bad) rolb je jae xchg out cmp add sub xchg xchg and movsb cmp cld xchg xor xchg ljmp aad fwait sub sub mov cwtl iret and call dec xchg daa mov fmul jmp out lahf mov add fildll add cmp inc push (bad) pusha xor xchg (bad) call ret sub or ljmp fildll or inc push pushf loope and stc and pushf scas imul clc jg sahf inc push cmpsl int3 xchg mov or sbb dec aam scas testl mov push loop aaa jge ljmp adc out mov add and mov mov icebp dec dec inc xlat repz (bad) (bad) (bad) mov (bad) add ljmp in dec test xchg cwtl inc into sbb push in aas ljmp lds xor mov ret inc pop fstpl cmpb hlt dec push dec mov inc mov pushl idivb jo pop loope (bad) cmpsl and cs jp push lahf jbe daa iret fildll or test mov add push je mov push out imul mov or mov pop shll je or sbbb mov lock jl jae arpl sub mov mov out lret add add jge pop shrb pushf les mov cmp lret mov (bad) or xor int ret sub dec das xor jg jns xor jmp and pusha push call push add dec stos xor jmp out adc cwtl xor xor aas stc dec in lcall sbb pop mov fnsave push into cmp mov (bad) or lahf (bad) xor pavgw sub ffreep js clc mov mov cs and (bad) sub or repz (bad) sarb xor stc lods dec ret xor mov (bad) loop fbstp bound insb fsts mov mov xor cld sub aaa sub jmp popf inc mov es xlat inc sub push pop jne testl loope cmpsl sbb push xor out loop lcall dec iret xchg fdivl dec mov lods mov and insb jb,pt jmp lods sub mov jmp hlt xor jecxz (bad) imulb mov (bad) sbb adc call leave idiv push gs add mov test mov dec cmp or loopne sbb shrl mov xor stc mov imul cs inc or push adcb or out push into outsb mov dec stos xor out xor jns scas mov dec inc bound dec enter out je jo push (bad) xor orl add xor and test dec inc inc mov mov or fcompl adc mov xchg dec sub (bad) and pop imul inc fst je mov sub imul pushf pop push inc leave stc sub and notl add popf inc xor jbe (bad) ljmp jbe xor xlat add pop pandn fcmovne insb push xchg xor lds lods data16 movsl gs clc pop jne sete dec cmpsl int insb lds push negb xchg ljmp add pusha (bad) mov js jno sub pop (bad) idiv cmpsb cmp and shrb (bad) (bad) stc xchg (bad) mov mov xor mov pop and and imul push fnstcw popa jp (bad) sub es mov imul (bad) and insl xchg stos fs in mov ljmp sbb lcall push sahf mov push clc and jmp ret pop clc sti pop sbb inc sub cmp loopne pop insb mov cld jle sbb data16 mov xchg clc inc jae sbb test add stos addr16 cs sub mov and ret test fisubl scas neg adc xor sarb inc mov jne in lret clc imul mov repz jae sub mov and push push leave push cmp lret xor inc (bad) repz sti xchg fisub imul xor inc mov cli mov inc jbe insb sub jne pop sbb dec pop dec pop cwtl dec and das xor push adc mov andl ds mov into cmc repz and or mov popf push fwait pop ret inc jl mov dec sbb std roll je push add pop pop iret mov inc mov or scas in imul push sub adc mov (bad) ja outsl jb inc (bad) (bad) icebp add xchg pop cmpsb mov popf icebp push add (bad) repnz inc fcoml add mov sub xchg push rcr or lock loope sbb pop repnz sub iret pop sbb or leave stc stos imul repnz sbb out in xor xor xchg lea push push and int lods in jae sbb mov xor negl mov lock icebp pushl sub cmp jns aam inc je push dec mov mov mov (bad) dec dec cmpxchg in insb daa aam sub sbb push pop xchg jo pushf (bad) push pop mov mov stos mov sbb rcll pop int outsb ret int loop xchg inc push lcall sarl popf adc adc jne or sub mov jmp ljmp movsb xlat sti push mov pop jne pusha push fildl or (bad) xor push outsl int3 mov not out enter shll (bad) fisttp pop or inc leave sub int (bad) xor sub mov dec lret ljmp imul out adc or stc lds call mov pop fndisi(8087 pop ja jb mov out adc cmp sub adc xor sbb (bad) jge arpl shr nop mov xor jb ffree pop (bad) sub and jle (bad) lock lahf xor cli out in pop mov push aam cmp sub xor xor sarl fsubs or or lock inc cmpsl add mov iret sub std lods cmp push xchg ret add jbe jmp out jmp push add mov pop jge mov dec and inc add dec mov cmp (bad) sub sub adc add push cmp (bad) cltd subl divb mov ret cmpsb sub sub mov push icebp cmp lea mov add test mov sub mov add ds out ljmp xor jns (bad) and mov jge outsb and xor fistpll repnz jl movsl cmc int3 and repz ljmp jmp in lock in daa mov sub inc push cmp rcrb mov call adc xor (bad) xor lret mov cmp (bad) sub xrelease clc adc and (bad) xor in xor and adc sbb push mov orb lea jecxz fs (bad) mov xchg aam in or add or sbb add gs pop daa not inc and lods cmc push sub adc jo (bad) stc sub outsb and mov mulb and je push out (bad) out aaa or test movsb mov inc out mov pop or inc das and sub into or into cmp iret inc xchg xchg or push push mov iret fisttpl add mov mov out xlat adc mov mov sbb jmp xchg out and stos clc repnz or lods idivb or gs in adc sub jecxz mov mov cmp insb jne cmpsb dec pop xlat xor (bad) mov jnp testb dec pop adc nop mov in stos mov stos mov xchg push jne ljmp or inc dec fstps mov (bad) cmp dec pop negl lea ret rcrl or adc jecxz cmp aad cmpsb lret leave or cmp fmulp sub leave and xlat mov push (bad) stos sbb adc xor add mov js dec sti mov (bad) mov adc iret (bad) xchg push cmpsl bound sub daa test aaa popf lahf sub xchg icebp push cmp (bad) leave mov negb adcb in jmp mov out mov dec cmpsl mov xchg lods sub loopne pop xchg mov jg push push mov jns stos or fsubs fist (bad) xor dec enter dec or mov xor mov jg adc sti xchg in dec and in bound sub test shrl push sti fisttpl ljmp jecxz add out scas adc neg hlt out or fsts sub (bad) fsts inc push mov dec scas gs (bad) in lock adc add sub pushf push xor jp dec push mov xor jmp sub xor inc or ret push out (bad) stos cltd cmpsl adc fdivp pop push mov xor xchg (bad) jl leave lods sub sub repnz inc sub cs sbb bound pushf xlat stos mov dec stc jne lret jecxz ljmp sbb adcb sbb dec mov jne inc adc and push pop scas mov jmp mov dec sbb jb rcr ja clc push adc loop or or cmpsl jae int mov test mov fs scas xchg pop lcall or fbld xchg cltd pop or push fisub pop mov into add jmp into inc xchg fist xchg (bad) mov pushl mov outsl sub sub gs pop in (bad) lret mov cwtl bound pop loop jg add adc (bad) icebp and (bad) leave notl pop imul mov xchg (bad) lahf mov ljmp pop in outsb out cmp mov push (bad) xor mov iret outsl popf std aas pushf pop aaa pop xor dec in cmp push pushl cmp push aad dec imul aad xor push mov pop jb pop int3 sbb repnz popf addr16 pop dec pop lret pushf sub jo out fs lret hlt adc orb jmp loopne sub bound ret mov inc pop and cltd lret in lret add mov test out mov (bad) scas lea xor xlat jns out cmp push adc popf loopne loop shrb push jmp jno push add dec in sub movsl xchg and decl ds mov sub sub xor xor sub inc ss fwait pop or sbb inc movsl popa je repz lret addr16 data16 lock in mov lahf insb mov and mov (bad) inc adc stos rorl and dec ljmp pushf ror lods xchg in xchg roll (bad) cmp push xchg xchg cmc fldenv or js mov dec (bad) inc inc dec (bad) xor movsb ss pop mov (bad) cmp push xor scas lock out jne scas xchg fildll pop and push icebp cwtl xchg pop stos gs lret addr16 mov sub repz mov pop push dec sub popf xchg js mov std sbb popf negb imulb loop lret (bad) std inc mulb pop lret repz adc mov loopne xlat add clc iret add push fs leave dec and adc inc in lods jnp and push out push add mov loopne cltd or xor mov lds jno out test out call jnp in int3 sbb push mov push xchg cld mov add jg loop mov pop sub mul mov sbb fnstcw daa fs jl clc jecxz push xchg mov push fs ret test (bad) out mov sbb sub mov jmp das xor xlat sbb in test cmpsl fs movsl movsl dec in dec pop dec pop repz add sbb cmp lret jmp and pop sub mov (bad) jmp arpl sbb xchg repnz adc dec (bad) ficom movb and popf jb pop add outsb push inc cs scas in imul popf xchg add pop loop lcall imul xchg fwait mov add adc xor mov push in ret xchg icebp subl jp shll bnd leave jl bound xor ret inc sar xchg call or xor movsl cli test mov les (bad) bound and ret dec lea cmp rcrl das (bad) mov aaa jne mov sub lret push or mov dec (bad) fisttp mov pop push loop and data16 aam test ficoml inc lods fsub jmp das call mov incl jmp sbb lret call in mov adc insl adc inc cs orl data16 lret pop inc mov stos lods mov jg jg repz dec out fldcw (bad) iret enter sti ja or insl or jmp mov ss repz ret cli adc scas mov mov lea add scas je lea cmc fildll cmpsb in sbb imul add imull iret ljmp mov (bad) xor into jno sub data16 icebp imul dec (bad) cltd mov frstor lods icebp in in stos jp,pn fs pop and jno dec daa inc sub in adc (bad) ljmp cld fmuls inc mov call in jb jecxz mov inc add les inc cli loop leave ret xchg fidivr sub daa adc pop xchg add repnz sub dec loopne add daa add out xchg mov cmpsb aam fadd (bad) cmp pop inc (bad) mov sbb adcl mov dec push rorb mov (bad) (bad) dec orb mov fildll or sub pop fnop dec aad pop out outsb repnz mov sub je mov (bad) clc pop nop (bad) pop in daa int3 mov cli push gs pop fisubrl out sub (bad) loope sbb test and mov fidivrl push sub xchg xor mul xchg push adc xchg mov out jle (bad) cmp lock arpl fist (bad) cmc (bad) imul mov or add sub (bad) popf rcrw xlat ds aaa xchg mov push adc xor cmp mov sub aam push sbb lahf lret or imul testb dec mov rorl stos xchg out cmp or add jecxz dec andb arpl les imul add pop add xchg xchg dec movsb jb sti lods jnp xor add sub mov and decl dec fbstp daa out icebp cltd add sub int insb in fidivl dec into fcomp xlat dec sub mov inc adc mov xchg lcall inc movsl dec xor mov pop (bad) jb mov lock cwtl and or js movsb test jle add in dec fisttpll divb (bad) xor xor push call and std lock adc test fistpll in pushf mov inc add popa mull add pushf sub decb xorl xor jg mov and cmpsl sub aam mov add dec sar fwait dec sarl mov clc push or aaa sbb sbb ja xorl mov repz (bad) repnz (bad) ljmp test mov dec pop call rcr mov out ljmp das jecxz xor pop cmp outsb pop xchg hlt or fidivr mov xchg in xlat mov xor mov ficom cmc fs or pop out xor cwtl loopne push jae je inc out fldenv sbb sub and xchg or jge call popf xchg sub mov bnd adc add and mov mov lcall mov add inc lret pop push adc push mov pushf xor inc or sub sarl lock jbe xchg xor rcl or sub pop sarl iret jae mov inc inc or mov and mov sahf ljmp mov pop or mov mov or jns dec or movswl arpl out ljmp cmpsl fsubp adc or iret jne mov int3 sbb and sub test add mov push xor out scas (bad) lock mov xchg stos rolb and dec pop jbe (bad) movsb hlt divb mov jno dec sbb nop pusha xor dec mov (bad) jb jmp sub mov adcb bound mov push or xor (bad) mov roll pusha movsb adc sub adc xlat sub xchg or test jg in xor or add popa adc cmp and fldcw mov mov pop mov mov ret test and jl in cltd jecxz stc jb sub jp outsb mov notl or sbb or mov sbb or je push jns dec xchg inc popa mov imull jge pop pop mov leave (bad) sub push outsb xchg xchg mov dec nop lahf or out lret nop pop pushf leave push std inc movsl push ret mov add mov dec push arpl mov inc cmp push and jle imul popf das lret push add ret and mov sub dec lahf xchg fistpll bound push (bad) repz jl sarb dec dec scas lret add rcll in lock xor popa mov imul pop pop repnz mov xor and mov xchg int3 xchg mov dec mov push xchg ljmp ss add adc sti sub gs and xchg sub xor cmp push cltd push lock in xlat jae dec lods lods adc add jle daa mov pop pop push ljmp fidivr xor out fcompl jmp cmpsl leave mov repnz or jae mov out das or or cwtd mov xchg mov jae daa sub imul imul loop pop jno out push jmp or inc add xchg pop pop jmp stos mov (bad) icebp mov (bad) sub rcrb jmp jl lret xlat aam loop add aaa inc daa icebp loop and aam imul mov aad jb in das pop enter or insb dec ja loope int lret jns push (bad) jo cld sbb enter mov int3 ficoml dec dec in mov inc sar dec jbe (bad) out call or mov add push cmp stc xor or divl pop cld push push sahf mov push roll iret stc loope mov fdivl push out jbe jle leave sti imul push shrl mov iret stos sub sub (bad) das fstl pop sub sub das bound shll xlat lock out sbb es xchg xor bnd sub lods jl xchg insl dec cmp push cmpw dec adc leave (bad) xor cmp mov xchg cmc lcall add scas jmp pushf sbbl outsb cli mov push or inc call (bad) mov scas sub sub mov pop scas adc stc push mov (bad) icebp add sub clc sahf lahf xor sbb jo jle sub das adc mov add enter mov lret scas jmp (bad) push out fstps push adc ret jne inc jp fldenv icebp gs xchg mov daa and ds sbb ljmp stos dec mov pop jo (bad) dec mov bnd out shll int xlat cmp push sub or jmp jmp cld in pop dec mov cmp ja mov rep xor cli repz push divl scas xor pop push xor sub jg xlat mov jbe push push dec out jg add xchg fisub leave (bad) mov (bad) out push dec and sub sub xchg dec lea mov mov mov lock loop jns or cmp xchg fldl sub fnstenv icebp fsub (bad) jbe adc cwtl fisub and cmc sbb mov sub inc imul fnstcw xor pop (bad) leave push dec sub add enter icebp or inc cli add add jp and fcmovbe jge ja aas ret push inc push add sub leave pop sbb and lds stc pop fbld mov sti daa iret add mov pop adc jb fldcw into push shll (bad) mov pushf movnti test xor or adc ret push divb into cmp (bad) ljmp xor xor dec (bad) fmull fs in jb xor inc movsl sub xor test mov mov popf stos sub sub cltd mov mov lea jge (bad) gs adc pushf sbb scas fstpl xchg jge xchg inc mov adc push fild dec out jmp mov icebp fisub push mov xchg push cmpsl loope loop in add hlt les shr fbld aaa sarb push push push push mov repnz pop push enter adc mov sub mov pop or mov ljmp or add push pop pop or ud1 pop cmpsb bound mov mov mov fucomp mov xor adc push sahf out aas xor (bad) cmp jo ret mov jge lock mov cmc mov loop push fidivr push dec xor addb in mov daa (bad) add out fcmovnbe dec scas pushf stc jmp adc jno jl rcr rcrb outsl push fucomi mov mov lret lahf jl jmp repnz mov ret inc into xchg pop or or cmpsb xchg popf in sbb mov fs xorl loop xchg push add sub mov addr16 fldt jnp testb pop or shrl pop mov mov out or xor jne mov mov lret dec sub pop pushf xor mov add sbb and (bad) mov in fwait imul popf xchg pop dec xor add jb enter lock fistpll sub or fisttpl push cmp orb les push sbb pop mov sbb or add (bad) daa aad cmc push inc xchg rorb int pop iret xlat sub sbb xor cmc (bad) mov sub add test loopne ret (bad) andb dec cs inc or icebp dec and inc sub shll lock ja lock sti pop daa mov stc mov push les cli mov jns ret divb (bad) ljmp imulb ror repz dec cmp scas xchg mov mov xor push inc mov inc ret sub pop sub push cld or lcall repz jbe push in or inc xlat mov cmp das aam mov pop (bad) lea mov pop mov add adc inc dec push fisttpl (bad) pushf add push jo loope pop mov cmpsl push jmp cltd into shrl xchg and in xor lret sbb dec (bad) call and cmp cmp push adc add add insl xchg mov add fldcw xor mov or and ret stc stc mov repnz popf aam sub out cmc jno inc loope mov leave add cmp mull mov lock stos lods (bad) cmp push mov sub and jl mov and mov cmp repnz mov xchg xchg xchg lret mov mov not ret fdivl and mov pop dec adc cwtl fmuls mov xor xchg clc scas sub ja xor fcomip popf or leave repz adc cmpl and out inc push ljmp das ret pop sub lret inc pop jmp loop leave aam pop shlb mov popa call faddl lahf xchg mov out fdiv pop out jle pop imul int3 data16 dec cwtl cmpsb mov ss das xchg cwtl dec mov push inc popf pop mov lahf xchg out arpl xor cltd mov dec fsubrs jle or in in ror test push dec sub pushl jecxz dec outsl dec (bad) cmp mov sbb sub mov and shlb fcmovu out push popf mov xor and notb pop mov fiadd mov cmp test scas mov shll xor repz mov mov xor sub mov stos jne sahf int and adc and ljmp popa xor mov (bad) in repz (bad) lea inc and mov fs lods jne and sub push into xchg icebp scas fidivl mov sti pusha fcoml and mov repz mov aad stc adc scas jecxz dec cmc mov in xchg mov push shrl in sub cmp and loop fwait jae shrb pop mov pop fnop sub sub and add std mov jne enter fistl jnp or push jae daa aam dec fisubr pop add jmp push sub xlat test dec sti mov inc add fldl daa sub notl insb cs xor (bad) popf aad sarb mov scas (bad) or out in daa (bad) jae inc xchg and or jle ret xchg out mov cmpsb pusha daa lret jno inc mov add xor ret notb decb dec out lea out pusha dec into xor push mov push mov mov jno push mov inc (bad) icebp mov add daa movsl loop pop pop cmc movsb cmp push data16 xchg ficomp mov into push cs inc lea rorb and dec lock repz jnp lods pop mov mov dec das xor inc xor add sub xchg pop mov jne (bad) sub (bad) shlb or push idivb rol out lret aad or mov pushf fcomip hlt lahf lds dec mov add movl out push pop faddp push mov jns xchg ljmp rcr adc call daa adc ret pop ss xor leave call or ja xchg fist (bad) cmp and xchg stos mov jno sub sarb imul pusha and jecxz xor and aas mov adc jmp cmpsl adc adc (bad) push xlat xor and sub lock xor in xchg (bad) ja push inc idivb push out pushf outsl inc mov jp xor popf push sub sarb add or mov ret sbb or call push add mov sub call in push in pop fstl xor sbb sahf pushaw mov dec add test mov fist bound sub leave cmp sti cmp das test scas mov adc popa daa jnp or xor xchg popa xchg ds rcrb mov cmp add cs and push addr16 push mov fdivr mov pop out arpl xchg divl adc out jecxz fstl xor xchg in dec (bad) repnz push lea xchg icebp fwait out add or add inc jb and popa mov xor ljmp sub sub std dec loop shrl dec xor jno imul (bad) dec xchg repnz or inc push repz mov push jge (bad) (bad) iret sub stc cli daa int ret repnz scas sub fdivs pop adc enter stc inc add movsb notb mov push ja leave dec mov jns mov loop repz test cmp popf xor jmp rolb call (bad) cmp dec icebp jne scas cmpsb fwait dec in xchg mov mov ret adc icebp stos movsl jbe cs sbbb in dec sbb adc loop or sahf sub xchg dec add test inc stos xchg es adc or or pop pop or lcall outsb mov mov repnz inc sub mov push into dec xchg fisttpl sub push xchg xchg ret andl sub xchg pcmpgtb stos lods sub loop insb add or (bad) outsl test mov or lock fbstp rcl je adcb lret (bad) les jl aam pop push add sbb push adc mov test das call int3 mov xchg daa cmp (bad) ljmp add into imul add lods inc pop inc fucom sub stc jl loope inc adc js cmp aam sarl cli mov lret mov test or ja adc sub push add mov mov repz mov pop cmp cs andl notb jmp shlb mov stos shll or cmpsb shrb push jb dec ret xchg rorl sub mov push pop das (bad) dec iretw rcl mov stos popf mov (bad) outsb icebp inc das xor (bad) sub test adc add pop mov leave scas mov test lret mov push sub mov and ljmp jmp fdivr das sub jns scas lock movsb call adc mov sub sub fucom (bad) xor nop jnp mov xchg (bad) add pop jle bound jns movsl xchg popf and jp lods inc xchg loope ds push mov fisttp cmp or jmp (bad) jge les bound xchg andb mov and or leave sub movsl xor mov push add ret push mov (bad) push mov push shlb leave pop and cld aad mov push xchg sub ds xor arpl and ret movsb push js xor mov mov jmp sub lahf decb dec stc jecxz mov adc ljmp lods xchg adcb test jmp into sub xor out std xor cmp imul ss push sub sub or divl js inc add inc mov test mov in cmp xchg stos imul inc fsubrl adc repz enter ljmp std or je xchg xchg mov pop mov pop iret fbstp inc clc lret sub add inc jmp mov rol sub add repz pop je stos test pop insl dec mov mov pop cmp insb jne call xchg mov xor or mov pusha lret push outsl sub sar jecxz inc jecxz jb loopne out xchg aad sub jno mov jge jecxz (bad) jns sti push dec fldcw cmc push mov or jl lods add sbb (bad) xchg fstl ficompl push fadds xor pop fmul out mov push mov test mov jmp cmp push mov push (bad) stc mov dec inc push pop in mov inc dec sub dec add jb testl repz leave push push (bad) divb shr push daa neg rcll jae add iret add xor lds mov mov mov gs push or in pop mov lret mov mov in stc orl repnz xchg call das xchg movsb or mov fs xor xor lods adc cmpsl bound (bad) jne hlt adc adc and or rcll cmp icebp icebp (bad) push xchg icebp scas loop test xlat mov sub adc inc out xchg bnd inc nop out leave inc outsb notb jmp stos (bad) or adc xchg mov jmp push pop rcll sub js ret jne movsb and das std mov (bad) mov pop int3 enter xchg out xor dec (bad) pop push or int3 xor repz (bad) xchg scas cmpsb fs mov mov or cmp xchg sub mov jae out mov or lock xchg adc or sti je scas mov dec out sub insl pop xchg stos sub loop sbb jle or mov ret sbb cli or testl daa sub cmp or push clc jns ret pop das icebp or add int in cmpsl push lods pusha fistl push lods jg pop shrb scas addps push fldcw ss cmp aad stos aas sub (bad) xor cli aas testb mov inc in mov bound fsts stc mov outsl inc or orb nop mov cmp jne cmp xchg aas std inc adc jmp cmpb leave mov out es mov aad loope jg aas push (bad) fcompl mov scas sub and xor add das lock mov imul xchg inc mov sbb ss loopne add pop ljmp add or popf jl fs ret jnp insl cmp or dec out jo sbb push arpl add mov or xor lock adc mov xor mov pushl in cmp lahf mov push test pop repnz lret (bad) xlat xchg clc jo mov mov popa mov sub lods push add dec icebp arpl dec jmp scas or sub out jbe add and ljmp (bad) dec repnz (bad) add je stos and out aad mov fstl jge jge pop push or lods push mov sbb outsl dec stos lret xchg jle cmp inc movsb mov ds dec jp push mov int3 or adc jbe dec mov cmpsb das scas sub pop and jmp enter fist jle std inc les xor mov (bad) fs bound pop push (bad) stos pop push adc mov or xchg imul je rorb inc mov notb test pop (bad) repz mov (bad) xchg and fs jnp mov xor push addr16 mov mov mov in mov das mov jecxz or out lret mov fdivrs fnstsw mov imul or icebp push daa ja sar jne idiv (bad) mov sti popa xchg push adc fildl fdivrs mov lock xor cli enter pop fnsetpm(287 lret cmp (bad) lret lods daa lret rcll dec sub or add and (bad) and xor insb jns stos or fcoms adc mov mov dec sti sub repz pop icebp andl push flds xor mov repz xor dec gs dec mov adc inc mov and dec mov hlt bnd mov lods imul push out mov pop mov loop nop push add hlt into cmp pop xlat inc dec inc lahf pop inc das icebp inc cmpsl push (bad) es jno scas cld cmp pusha ds sbb (bad) daa hlt pushl dec jmp frstor test mov lock lds mov fwait mov imul (bad) lods (bad) dec and in lods shll test std out sarl xor movsb (bad) xlat out cmpsb (bad) arpl push ret lahf pop leave jmp mov ja movlps adc fs fcomps leave rol hlt mov out daa jl mov out pushf dec xor ret pusha pop xchg or arpl mov jbe decb jae xor fwait sti pusha loop pop in cmpsl jne gs outsl sub mov aaa mov aam mov sub std pop nop stos in or cmpsl inc out xor lcall xchg sub jo repnz add fldcw adc mov rorb out lret or outsb dec mov test idivl pop scas sub cmp xor jecxz ret add sub xlat inc pop daa in cmc inc mov dec in adc adc sbb and mov pushf pop popf (bad) movsl lret and in (bad) jbe (bad) int outsb adc ja mov nop sub mov icebp aas push or lahf pop adc pop cli sub scas adc xlat mov mov scas fs movsl in mov xor mov out daa leave and pop sub ret jne adc xor sarb (bad) and push jo inc and mov cmp arpl mov mov ja add sbb pusha (bad) mov jnp outsb or adc outsl test mov mov dec mov sti popa sub js scas inc sbb data16 lret xchg repz or adc mov push psrlq call iret sbb cmp xor mov sub mov jmp in imul mov je dec push (bad) call jecxz test lods fucom mov xor dec stc daa mov outsl mov les cmp pusha mov push cltd dec sbb (bad) scas or fldcw leave adc jle movsl and inc sub jg pop scas xchg xchg pushf xchg jmp mov cmpsb dec shrl movsl sub adc mov xchg push aad pop sarl cwtl (bad) decb push fld1 in sub jnp push xchg les aad or (bad) xlat jmp cmpsl popf mov mov ret or leave daa dec cmpsb mov xchg cltd out addr16 aaa add xor lret xchg inc sub repz mov xchg (bad) loop xchg stos fs test (bad) adcb adc callw mov sub lret insb mov lret mov and cmpsb sarl sti fstpl inc sub into mov push xor push mov enter add test dec mov xorl mov mov out adc (bad) stos mov dec mov and xor stc inc fnstenv in inc mov pop lret into xchg add or sub push pop mov in jle xorb decl (bad) pushf jg aaa sub jg outsb xchg hlt lods push std int3 xlat pop (bad) adc sub adc push dec sub into pop jbe mov in push or push pop or dec sub popf xchg orb rorl xor std inc pop (bad) jmp data16 sbb mov stc adc jns and or lods out xchg stos int3 sbb push ljmp into mov mov popw xchg mov sub scas out pop sti xchg sub sub ja mov sarb or sub add das ss jp adc (bad) jp aam roll mov inc fmulp cmp lret or fwait jbe out cmpsl xchg push xor (bad) jne adc push jns inc loop rorl sub sbb (bad) mov jle cli cmc lahf dec movsl pop inc push push sbb or cmp adc pop in mov xor adc mov es in jp ficom popf xchg std xchg fstps adc (bad) jne out test call pop int pop xchg sbb and add jecxz xchg std dec inc sbb icebp in cmp out add jmp xor pop mov dec adc xor leave data16 add jge or push fcmove pop pushf or sub mov movsb xchg pop ficompl loope sub sub dec addb inc sub (bad) sub incb repnz or movb (bad) or test add add lret pop adc sub add das les dec test dec sub cmp adc imul mov divl movsb cmc rcrb pop (bad) jbe sub jg pop in and sti xchg addb cltd mov insb leave add cmp or hlt mov xor rcrl inc sub ret fmull pop je mov inc xor xor mov imul xchg jecxz cmp or pusha das lret movzbl add push ror jle (bad) xlat (bad) jne test or or add stos jg dec sub (bad) scas idivl cmp in sub xchg nop add scas fdivrs add add pushl adc into cmp (bad) scas addr16 pusha sub add xchg in or ljmp add imull lods mov int3 hlt inc pop mov adc out lret mov pop mov in je inc fdivrp xor jno dec aad insl icebp out push mov cmc stc nop inc sub stos xchg xchg xor jb repnz xchg dec sub daa xchg (bad) in out sub sahf jns add mov fnstcw dec inc or leave lods xor test rcr (bad) sti pop das clc inc test add loope std add (bad) push (bad) cmc stc push dec inc (bad) pop pop mov dec (bad) sarb dec fmuls add popa aas add cltd mov int aas iret out scas sahf mov fwait xor into pop lods lahf adc cmpb add dec movsb lret ret lahf pop jecxz cld test add repnz ljmp jmp or mov xor lret repnz pop fstp addr16 ret push mov loope add jmp into jge test out dec mov lea xor push xchg loop pushw fmuls cli bound data16 jae cmp sbb (bad) pop lea ljmp dec loopne pop cmp (bad) (bad) cmp addr16 cmc mov pop jns lods pop xor daa cmp fistl pmaxub repnz and mov ret int out das jbe lret jge and adc dec jo dec icebp mov fsts or (bad) pop icebp bound xchg jp ss shrl leave add ret jl out adc sbb daa pop xor xor imul add xor ljmp mov sub pop mov pusha loop cmp cmp jl pusha and das inc sub dec int3 testl dec jge in insb and scas xor iret stos sub ficoml mov sub jecxz daa sub jno in dec mov add lods push fsts (bad) cmc data16 xor and adc pop mov jle jecxz sub call sub ljmp out or and dec inc mov leave pop jno dec popa fwait sub test pusha int pop pop xor xor sub stc push rclb add es inc pop mov mov jmp mov xchg sub or scas loopne loop jo inc call xchg mov out dec leave jecxz or push ja sub aam sub mov js lock mov call lret jle pop out mov lock xor shr push repnz popf cld ret push data16 stos mov into mov aad or push sub lcall mov (bad) mov add lcall insl pop fiadd or add adc xor sub adc xchg sub and cmp and lods cmp daa (bad) jne (bad) shrb test gs adc daa cmpb sub or jmp es dec jnp or repnz mov sbb es ret scas sub insb fisttp mov mov ljmp adc xchg mov lock or inc outsb mov xor add mov xchg lock mov sub xchg mov roll dec ficom stc push and sub pusha cmp xor push popa jns mov mov push mov test push jae sub dec sbbl mov add pop popf in mov test and dec or dec stc sub mov fyl2x inc lret ret subb cld jmp (bad) add into push ficoml mov inc dec out mov scas xor sub pop inc push jns andl jl dec sub aam jmp and xchg fsubl push sub lds xor mov pop pop (bad) repz pop movsb sahf ret mov dec gs les fdivrs (bad) jl rorb cmpsl sbb push inc popa iret imul xor lcall mov push sub push adc and int jmp mov mov outsb mov scas lret fbld and (bad) adc xor (bad) sub jmp dec mov push push mov or aaa inc ja icebp icebp or xor in outsb sahf movsl jle xchg add test test fbstp stc mov (bad) sub imull fcomip repz sar arpl sub cmpsb aad cld sub cli pop xor ret push jno inc out mov repz push push mov ffree dec stos inc pop (bad) mov or sbb data16 popf std push or mov iret push cmp clc out jmp add jae das sub (bad) icebp mov (bad) xchg out xchg adc xchg pop outsb imul adc xchg pop scas mov imul lret aad push dec jne ja or ja inc testb cmp pop lret pop mov mov iret call daa jae push mov gs cltd and inc dec scas inc dec add mov and xchg mov sbb xchg and icebp mov push loop xlat icebp mov xchg loope sub into popf repz cmpsb and or std push jae adc pushf aad dec enter or mov mov pop jmp adc xlat cmp mov outsb clc imul mov lods incb es inc leave je leave sti mov into (bad) mov xor inc adc lods fs stos test lds jne adc pop xchg jmp xor aas mov imul pop (bad) repnz xor lock push mov xchg daa jmp push xor fnsave mov adc pop and mov cs and adc idivb scas bound scas ja pop jno adc lods jns (bad) pop in add dec addr16 in in xorl out pop rorl pop mov pop pop jp push loop pop inc mov xor repnz mov out loope mov add bound clc or xor fldl cmovno test add push fstp lods test jp outsl inc xchg xor lea jmp dec or repnz ficom and sub jg imul jb clc dec and ror mov ret inc add stos popf inc jp xor sub adc mov dec sbb xchg xchg stos cwtl dec xchg dec cmpsb jb jp add daa sub cmp cmpsb mov shlb pop xor sub pushf sub cmpsl aam dec mov jb xchg icebp ficom pusha add mov test call dec or mov or and subb xchg sbb mov clc or sub ret jle mov mov add and cmp popf cmp mov and jmp aas or add int3 dec popf sub inc inc adc xor sti lock ljmp (bad) cli lret ret das xor or cs mov (bad) cs lahf mov rcl mov mov pop and or cmp lahf push test loop popf ds push add jge loope xor js xlat test stos inc les jmp in dec cli into rorl bound push sbb sbb sub jno xor push (bad) xlat mov popf xor fistpll shr dec insb repnz mov sub pushf call imul pushf ja sar mov sub jge sub jno sub insb add ja inc mov into push adc test bound mov fwait jb sarb dec lock xchg lcall dec ret sar les xchg dec (bad) sub mov adc mov add adc negb xor mov insb mov mov orb loop or pop mov jg fdiv pop jp fmull xchg sbb mov js pop into out sub das lea push cmp push (bad) insb fs clc sbb popf xchg cmp mov push js adc shrb inc lahf adc mov fsts mov sbb lahf or cmp leave and stos sub sub and (bad) jp in leave xor std ret add sbb jg cmpsl xchg out popf cmp std or xor and mov xchg addr16 ljmp ja aaa dec jns cmp mov (bad) mov in lds iret jg pop dec and shrl rorl jmp mov or xor pusha mov jae jns dec push mov ljmp popa xchg (bad) sub in clc sub stc ret dec push das xor mov shlb fistp pop or or sbb jg stos push and or dec or (bad) testl gs ljmp jns imul xor add stos imul mov loop lret ret stos lret popa inc jb test xchg lret mull mul adc or mov add aas inc adc dec cmp xor mov pusha and inc adc xlat mov xor or or add xor cmp cmpsb orb rorb lret lds jne mov xchg jbe push ret adc ret ret test mov xor out cmp scas sub xor sti pop and mov pop int3 mov pop add and add std (bad) in xor out adc mov inc mov add aam leave hlt (bad) das shll jecxz mov movsb or or (bad) sub scas mov inc aad push jne hlt iret jne insb shlb pop jle data16 dec aas in xchg pop mov call jmp repnz repz sarl mov jo sub mov popf in mov dec dec psrad fiaddl mov adc scas xor or scas lcall nop iret sarb mov out pop cli cmp sbb (bad) adc push pop test adc add test addl sub and inc lods adc sbb or jmp (bad) and fsubr dec stc sub into xchg gs adc loop dec mov sub or or push mov jle push jmp adc addr16 stc sub sub jmp popa mov jle xchg dec cld outsl sarl pop push movsl mov (bad) hlt push ret lret push hlt aad in add xchg mov jg push xchg xor (bad) or xlat flds add mov dec jnp dec jb aam (bad) add xor pop pop xor test repnz sarl icebp lahf fchs inc out repnz xchg cmpsb and loop (bad) je call xor sub mov sahf das or cltd fnclex push cmp add sub cmp stos add xor call fisub fldcw xlat cld mov sbb xlat mov (bad) cmp lds sbbl mov repz test mov push sub out xor mov bound clc sub xor xor ret xor xor shrb jle add and cwtl out in cs stos jecxz pop test sub xchg dec fxch and rcll dec push pushf xchg sti pusha lods add and and out or loope sbb and fsts add sub ret push pop jmp cmp sahf daa pop bound push inc pop mov bound orl outsb adc (bad) stos lret jbe (bad) repnz out dec out sub and out and pop mov idivl xchg dec dec insb pushf jae mov orb and push inc xchg clc lea and movsb push nop fisttpll or and cld daa pop loope icebp stos mov cmp jnp jmp aam imul or add outsb jbe (bad) out int3 in sub pop loopne ficomp ret fwait daa outsb add adc out and aam stos mov (bad) mov imul add mov (bad) ficom enter dec mov adc idivl lods fisttpl add (bad) jmp mov or push sbb fnsave mov jo js mov stc cmpsb xchg leave test lret mov ds clc cmpsl inc ja add bound (bad) cmc xchg jno ficompl cld pop mov icebp repnz jno inc xor mov push jge mov aad scas xchg sti out dec jmp pop scas jae sub sti cltd stos fidivl (bad) mov (bad) mov ja cwtl popf xchg int3 pop into cli xor xchg push sar dec stos cmc inc mov add test in sub add sti add sub insb cmp add dec jle leave jbe pop ja lods push inc sub xlat and cmpsl xlat cmp mov je out push lahf in mov xor loope stos loop xchg mov xor popf add adc scas loop nop jp lods xchg push rorb test mov je enter (bad) xor arpl dec sbbb ret rcrl push jnp xor repnz repnz sub (bad) mov (bad) xchg not lds jmp iret fidivl repz test mov lcall lods fcmovne out pop and or popa cli and pop and popa cmpsb ds sbb fstpl cs or das push inc test (bad) sti xor shlb ja out movsl or jns idiv xor in adc testb movsl mov jge cmp loopne sub fisub inc lcall jg adc inc sub lret imul out or inc mov or push push gs push adc mov hlt xor sbb stos pop repnz dec sub cmp sub jge jecxz push call jmp jge xor cmpsb inc dec and mov jle ja mov xor test adc sti mov fldcw cmp mov daa add xor sarb test xchg push jge mov lahf xchg bound push add add scas bound jmp and lcall mov movsb out ja mov or sti pop jl int3 xor xor (bad) mov (bad) mov jno sub in lret mov dec ret mov popa sub mov lcall xor (bad) adc and push das inc in imulb (bad) gs sub loop gs and jle push or out jno add daa mov xchg jge into push dec (bad) repz imul test mov repz xor pop ret into in dec int3 loope or adc sub mov pop jg mov movsl (bad) xor dec shrb pop inc fnstcw ja xchg xchg ret xchg out movlps xor add inc data16 mov add pop clc cwtl adc sub and or pop into sub cmp adc sub pop out leave icebp outsl loope add sub out and mov imul jmp dec aas scas mov pop jb add pusha sub xor dec mov stc xchg movsb jmp mov mov fldt or ljmp data16 nop mov cs xchg lods inc fnsave bound repnz jecxz imul dec fdivrp jnp (bad) iret xlat dec rorb inc sub xlat int3 out dec icebp jmp mov sbb sub das mov pop push xor (bad) pushl fcoms ja xor js xchg xchg lahf dec (bad) movsb mov pop addr16 jg push xchg jnp clc mov xchg push add test adc cmpsl clc ffreep pop mov rclb pop das dec jno add lock cli pop cld scas fnsave out sub std (bad) xchg enter push cmp ja out pop jle les lock mov pushf lock inc sbb push or mov xlat xchg (bad) das xor jle call std mov xchg sti push repz daa (bad) xchg pop ret shr mov mov add xor mov ds push xchg cmovp mov pop or push push sub mov sbb out adc cmc push orl les ret sub loop sub xor push push mov jle lret inc push adc fisubr mov add xchg dec (bad) sub repz (bad) sub loop lret mov orl and popf fmull pop cli arpl jae es or lahf rcll scas fcoml imul jge int sbb xor inc loope dec and or movsb add cld sbb xchg jb cs fcoml inc pop mov or mov orb inc jno mov mov std sub xor dec (bad) gs mov mov fs mov pop adc movsb lods incl ss fwait roll push call lret cld loope insl adc mov imul xor ss sub cltd sbb or pusha adc dec mov cmp (bad) dec fidiv cmp lret sub pop and pop cmp or (bad) jno xchg out sahf xchg icebp dec imul ret pop imul push mov add fwait aas sbb add popa or mov push xchg inc adc fdivs push mov xchg cs push dec fs and pop adc js scas imul mov (bad) cmc aas repz pop push pop push mov xchg mov out sbb movsl xor pop lods or test (bad) or adc push (bad) negb dec mov sbb mov movsb jns je jb mov dec jl push repz lahf mov xor dec pop sub inc sbb leave imul lds sti push pop clc ljmp mov fcom jmp sub ljmp stos cmp out cld sarb movsl loop or pop fdivs faddl mov pop daa outsb jo lretw lahf loop pop add xor std dec xor jno push (bad) daa movsl xlat out subl das ljmp adc xor and in and mov iret mov mov idiv test push mov repnz popa mov and pop dec push cwtl dec xchg inc push jge out jo add mov int3 add cli (bad) das lcall shll jle iret xlat cld jbe sub aas mov call add aas mov (bad) cmc mov out insb popa shrb or and mov dec scas mov xlat jmp (bad) xor pop data16 cmp orb ds fldl2e pop pop sub sub add xor inc lods ds dec aaa (bad) cs and prefetch or mov add or mov cmpsb lret bound cmpsl sti jne sub dec mov sub sub stc sub loop jne jae or std inc dec arpl adc cmp test xchg imul jo push nop test leave xchg js pop sub insl cmpsl rolb mov and imulb cmp sub and xorl xchg jmp repz pushf jmp pop xor cmpsl loop (bad) aaa cwtl mov dec push jb adc repz fiadd fildll mov and lds or push sbb jecxz xchg push adc fs stc dec ja mov jae repz jne das or or or fstpt cltd pop lock outsb sub mov (bad) cld hlt lods inc aam pop dec pushf mov pop call cs (bad) lahf pop adc cltd enter or imul sub fs sub adc jmp (bad) out dec jmp sub int xchg inc lahf fidivr stc push sbb xchg call mov xchg mov add and xchg push xchg adc push sbb andl repz pop pop pop pop mov mov pop in and out and xchg mov xchg hlt (bad) pop data16 dec add jne ja mov mov push cwtl sub inc xchg pusha dec or (bad) movl into pop rcrl jmp or jmp xchg jae dec fadd jmp push dec fsts xchg ljmp lret xchg out loop rorl add imull pop lret xor and (bad) mov (bad) (bad) in pushf jmp movsl (bad) pop mov movsb push and jmp cltd das ficom ds mov xchg (bad) inc xchg rcrl cmp inc adcb inc or or les lret ja stc xor and pop into and push adc xor xchg shll dec hlt out push xchg push ror mov (bad) sbb (bad) out mov mov inc das cltd cwtl mov (bad) mov daa loopne add adc jge rclb ret cmp add sub or xchg shl clc jmp movsl xchg stos out pop and sti test mov cmc enter idivl aas (bad) jb jg sbb sub mov lods mov std sub xor push xchg outsb and ljmp mov out mov lock xor in outsb ja ds xchg inc pop or rcrl pop jg jecxz pop sub lock mov imul push call icebp std data16 (bad) jns ret jno mov cmc sbb xlat inc mov (bad) fimull cmpsb mov mov daa add and cmpsb and testl push sub loop nop mov adcl dec addr16 imull mov (bad) (bad) icebp inc pop cli int orl mov sub (bad) xlat insb push and mov cltd pop sub sub ja lret lret xor ljmp pop cltd or mov cmc and and mov mov cmp (bad) sub stos lcall fyl2xp1 dec ja lahf cmc jns cmpsl push inc ret and push mov cld fs fs mov fisub in cltd xchg xor jae jns shrb cli mov and out mov add and and fiaddl call call pop cmpsl push mov lcall mov sahf xor test xchg cld pop dec fild sub dec bound mov xchg in mov (bad) idivl les xor jecxz lret andb orl mov xor mov popf popa and aas addr16 pop jae and out add pop or xchg insl mov lods into pop idivl test cmp pop fsts clc sbb mov adc movl fmull and and jle lret jns sub dec adc sti (bad) into mov (bad) fdivs clc jle jmp mov jo mov dec or fidivr mov adc sti mov lahf data16 sub or out or pop sbb mov xchg push movsl popa xor mov out fsubl fdivp lret mov xchg push jae scas jg add mov js dec mov mov test sub xchg xchg add sub jns mov stos out adc idivl imul test ss or sub insl test xchg or out mov lds or mov scas (bad) push jmp test out sub imul lret sbb inc sub aam xchg out sub pop je jno imul fxch jo repnz clc ret pop xor adc inc rclb mov (bad) push adc shr cmp imul out jno dec cmc enter mov pushf insb sbbb jle push cld (bad) stc cmp lahf pusha lahf icebp in mov cmp addl (bad) idivl sbbb push sub cld lods jnp mov mov mov add mov idivb fimull xchg (bad) xor xchg icebp dec push or push std imul dec lret xor insb test lret sub mov pop inc gs lods lcall inc jg add mov jnp ds cmp popf ficom inc xor jge int loope dec xor (bad) jnp or mov dec mov std icebp cmpsb dec jl pop (bad) leave dec iret dec mov push adc das cmp cmp adc push mov pop mov jmp xchg xor and dec mov add lea jnp push hlt mov lret pop xor stos jge aaa pop iret repnz stos mov dec fdiv divl das ret loop or jbe mov loope sti mov (bad) loopne rcll bound jnp roll cmp xlat adc adc sub (bad) insb jae out decl scas adc sti loop (bad) mov dec xor mov ds sub stos popf dec push inc mov std pop mov aad and sbb lret sub mov jae jb outsl pop xor pushl lock ret xchg sub dec and mov push rcrl pop mov (bad) bound push (bad) pop pop mov or push xor sub scas xchg mov repz xor dec jae xor sub mov push sub cs pop scas sub push push dec lret fs jnp jge mov js (bad) lahf sarl pop sub das es (bad) sub imul call shrb pop iret repnz jnp rcrl and (bad) dec pushf rorl rorb jno push push ret test hlt jl aad push ljmp clc dec pop xor dec out mov divl cmpsl jae xor clc add mov lret adc sbb sti bound das cmp inc jle das xor pop xchg xchg idivb pushf jo or fdiv pop jne test pushf push xchg stc lcall stos imul push in push jge sti es out iret or ffreep lock push inc lods call movsb and ror in xchg pop xor imul lods ljmp fldcw cmp jge push xchg scas dec into mov rol (bad) out cmpsl mov xor stc (bad) fimul cld dec adc sub jb mov inc daa push lock fisttpll mov neg mov mov cwtl add les fsubl dec (bad) es push adc xchg and dec aad sbb inc pop shll inc xchg add lret std jns dec pop pop xor xor repz mov call mov into add xchg andb sbbb or frstor mov cli mov lcall bound lret je inc cmpsl mov or fstps dec push (bad) mov loope repz lods negb popa mov icebp pop and aas dec mov mov or mov jb jnp rcll jno adc test mov add lret lods dec lods xchg dec push loop jns and or push xor aam (bad) (bad) and dec lds xlat mov orb cmp iret xor ljmp cmp sub adc lods je jbe xor inc sub ljmp or fwait xchg test sub inc call mov mov in push push mov pop cmp jmp and and das xor dec mov lea jl bound or push mov mov adc mov mov pop jno sub and fistpll xor pop adc scas arpl (bad) repz cmc and outsb out mov test nop or jne jg push in and add xor and out and mov lock movsl int push dec call xchg xchg mov mov adc (bad) mov lcall daa out orb push das fiadd pop (bad) scas dec in dec mov bnd xchg add pop divb push jnp daa pop pop std sub les pop mov lods pop fisttp jg xchg out test mov push (bad) out add push inc and addb cmc out (bad) mov cmp (bad) xor sub xor or add sub and add loope sub jge test xchg pop sbb cli xchg add sub lret mov xchg lret sbbw mov sub xor nop das and mov shrb shll loope jno mov jg inc mov push and mov and cld fidivl adc leave fcmovne jle jno inc sub push cmp repnz es sub addr16 cmp pop xchg decb dec ret pop lcall sub pop scas gs mov mull leave mov aad push lods sub xchg (bad) push clc rorb mov xor sbb out ja popf push ljmp ret test add add fs data16 mov cmp stc call cmp std xor cmp xor fisttpl jmp push hlt loope pop pop add fs and jecxz and sub xchg lahf cmp dec ljmp push (bad) xor xor xor adc lock mov inc and mov lods lds sub and cmpsb inc daa jae adc test sbb enter add mov dec imul dec and mov inc and push mov (bad) pushf add jle xchg cli mov (bad) (bad) jge pop mov hlt push jns aas mov (bad) fwait and (bad) aaa int aad ja loop mov jecxz inc sbb aad cmp out lahf nop xchg mov out mov (bad) pop xlat in rol out sti loop xchg outsl rclb mov jge or cld adc scas lods mov ja into jmp loop pop pop and sar lea adc jne mov fstps fidiv sahf push imul int stc or xchg mov push fdivrp (bad) mov and push aas out adc clc rorl test fistp not fadds jnp xor mov mov mov jbe clc mov dec stos xor add jnp push sbb pop or pop mov and mov ds pop mov add push jbe cwtl jg sbb push xchg adc aaa lods mov bound scas movsl push insb std fcom icebp mov mov jbe or call aam and and inc sub pushf js test mov scas jne pop jns mov pop cmp or lock (bad) das sub xchg or daa negl adc repnz dec test mov push lcall lock fstps iret sub hlt pop pop test ljmp pop gs (bad) mov mov add stos sub hlt shrb adc mov test mov inc sbb lods cltd movsl mov xor clc jmp jns fs mov jle daa stc dec xchg lret js cmp push ljmp xchg pop cmpsl pop jmp sub push xchg fist pop lcall sbb or jo and pushf jle lahf (bad) arpl add add pop call popf or xor out hlt icebp in mov dec ja outsb lahf lcall test add rorl test stos gs sub mov enter or je or mov and divl push mov jecxz test mov jmp mov cli cltd sbb js loope or push or dec clc mov and ret and pop adcl out jne imul aam iret notl mov (bad) sti mov movsb into daa jnp adc int mov and lret negb add jmp sti mov or sub in das pop and jmp pop xor ds mov movsl cmc inc sbb dec cmp and cmp mov mov mov jg sti mov inc pop push mov mov sbb sub loope sub int3 push ljmp and adc adc leave insl sub mov adc sub outsb je or pop sbb xor mov sub cmp test xlat test (bad) in dec aad shlb pop xor fs scas lea and and repnz pop fldt dec js ror ljmp and sub rol xchg fisub push cli cmp mov mov out mov lret inc dec fsubrl push push adc in pop mov xchg push rcl dec popa loope or (bad) aaa lahf push lea scas jb (bad) ret sub pusha les adc sub leave repz mov flds xchg pop scas mov cli js push out inc jl mov cs lea into in (bad) mov jl and mov cmp sbb cli ret rclb es add adc fildll cmp or ja cmp sbb loop icebp add (bad) adc (bad) (bad) negb cli jns js (bad) nop jg icebp pushf mov incb add imul adc or inc or sub pop and pop out cmpsl xor test add cld push xor mov jg (bad) loopw sbb in ljmp fwait movsl dec or inc ljmp xchg push fdivl sarl das out sub sub (bad) mov daa push scas mov inc leave jne loop mov jae sub adc cltd and cmp ret aad fwait push cmp lret and add sub repz jmp sarl popf or mov lcall cld adc lret bound xor ret sub leave add leave mov orb jg adc pop dec mov mov iret lahf mov mov (bad) add add enter pop shlb fld out pop xchg fistl push popa xor mov or and cmp pop ret adc jno inc xor mov leave jge ss lret in pop leave mov cmp rcl test stos bound fstpt lret lret fxch sub shrb jg dec stc mov into imul ret push or sbb dec inc rcll daa rorl add dec loop adc cwtl and daa into jecxz xor cmp sub pop xor jno xchg jecxz adc mov add ficompl and js int3 pop div mov sub or into cmpsl pop sbb aad adc lock aam adc lahf pop stos out adc dec inc cs push int3 js imul add mov insl imul inc (bad) sub (bad) sbb cmpb cmc in ret loopne xchg mov pushf mov das sbb jns lea lds add mov fsubp jb xlat xlat cmp aaa pop jne mov dec jmp js cmpsl aam out cwtl mov mov or sub cmp xchg mov out fadds (bad) mov sti cs cmp shl imul nop jge (bad) out or jo lods dec lahf mov mov xor sbb sub rcrb iret pop stc out outsb adc add xchg out push scas sub jbe lds pop sbb cld cld ficom stos iret shll mov adc incl movsl jae pop sti push cmp (bad) pop adc aaa cli lret mov out roll ret xchg stc movsl pop sub and mov dec movsl xchg stos mov sub pop adc sbb xchg lock fsubrs fldcw mov adc sub dec push dec (bad) mov pop out sub jb add stc std dec dec loop jns imul jecxz xchg cli (bad) jnp lret and in pop sub xor push mov cld mov lret sub in lods mov fucomp repnz fidivr xchg mov es in jns stc push lds mov jnp xor sti mov dec test das aaa dec pop cltd xor inc clc push clc (bad) in lret movsb cmp rcrl icebp push fdivrl push icebp sti xchg or inc fnstcw clc pusha leave rolb dec aaa clc sub test fstpt nop cwtl dec lcall jne inc outsb and ret insb in push (bad) mov mov xor cmc test fdivrs pop pop adc out or adcb (bad) xor pop mov add std ljmp ret jle push jmp aas pop xor cmp or and jge pop imul sub jae imul and push pop sub js stc cmp (bad) scas jno mov fsubs mov cmpsl jno sub (bad) or dec ds jl jecxz push cmp lret and jge lret xor push in mov mov push and fstps ret xlat mov imul sub xchg or cmp mov int inc sub das fsubrl rcll jae mov adc jbe pop sub sub and repnz or sub push cmp sub and xor loopne loop stc test cld stos imul push inc pushf rol adc xlat out ficompl xor ljmp ja scas sub and dec in pop imul lds pop mov lods xchg in cmpsb push les jmp mov fistl movsl push push cmpsb sahf xchg shr mov idivb jno dec add insl loope cpuid lock pop push pop (bad) and int3 scas insl jnp scas lds sar dec mov test adc sub leave xchg cld mov loop lret jl and xchg adc inc das or mov sub das (bad) popf jns dec aam fs gs repnz xor aaa add pushf push sahf cli int3 xor movsb es (bad) mov rcr mov (bad) xchg imul mov rcrb popf aam push dec lret xchg cmpsb fisubl push xchg pop out mov repnz push mov dec or (bad) cli mov or je lret cmp lods xor sub repnz (bad) mov push outsl sub (bad) cmpsb rcll bound mov add fmull or sub pop sti shlb inc scas push mov std sbb fildll mov sbb sbb or adc sub out push ret bound imul idivb mov jge lds sub mov cs sbb push icebp shlb sub mov imul mov (bad) xor add mov ss fimul and cmp gs in dec xchg mov pop scas les (bad) jle (bad) idiv mov mov push idivl or shl cli mov test dec das testb xchg jecxz mov lcall mov xor xor xchg mov push and or inc jmp clc int3 push std jmp loopne xor lret jg inc push in or lock outsb xlat xor jae sub mov push ret lret and jns,pt (bad) mov add inc daa sub xchg je nop cli add inc sub imul (bad) icebp or mov xor adc jl loopne enter stos aaa in xor pop add lret mov out pop add idivb mov ret cwtl mov pop lock mov push mov jo mov dec pop (bad) sub sub fimull test shr cwtl push ret popf pop mov call out lcall inc or jns mov mov aas mov xlat in adc xchg mov xchg sbb popf addr16 mov jle xchg push mov data16 mov insb sub fcmovnb mov xor (bad) sti insb ds jae add cld mov cmc inc mov call cmpsb sti and xlat adc ret iret mov loopne fs shlb ret test out add xchg push sub movsb int3 js mov fnstsw fs clc popf pop jnp sub icebp idivb mov mov sbb lea jg inc (bad) jge and jp cmpsb and out repnz das (bad) icebp xor int3 mov setne xchg int3 rcrl sub repz into pop xlat xor call add pop idiv aaa (bad) stos sub pop (bad) xor cmp mov mov lret (bad) xor cmp sub ror mov and stos repnz ljmp out dec stc jo ds inc pusha aaa adc fcomip mov mov sti xchg in les inc pop popf aad sbb (bad) mov int and aaa cmc test movsb and mov xchg ja test lds scas inc xor dec cld mov movsl adc push jne xor push xor fucomp sub jne (bad) faddl pop mov cmc rorb xor mov notb jbe ljmp push and push or sub add push or mov jl jg fmulp (bad) mov stos jecxz xchg xor testl into dec fsubrs jecxz movsl sub aam cmp mov push movsb lods mov add sub mov push dec out or sub pop fsubp ret jne ds (bad) mov dec mov sub sub xor mov (bad) mov or rcll fisubr or (bad) data16 (bad) bnd xchg push mov imul xlat out stc mov dec cmp sbb in jle push jb call fnstcw push bound fistpll and (bad) outsl pop sbb and mov sbb (bad) gs pop (bad) mov sub xchg imul bound add or xor ja add aam adc mov or or cli pusha pop sub daa jg push outsb jecxz movsb mov ljmp push test ret pop dec jbe pop loope pop and or sbb into cs fcmove cmc stos adc vmovsldup int cmp dec popf adc fist lret adc mov inc mov iret (bad) popf (bad) mov pop (bad) pop sub stc adc xor push aaa jb in fstpt (bad) test mov in mov mov inc pop jbe push repnz mov mov leave negb gs xor xor daa xor rorl pop loope adc loop jg cmp negb cmpsb test mov pop nop jp fldt push stc outsl jmp mov pop jbe enter pop in sub cmpsb lds out divb xlat pop call push push aaa pop loop xor adc shr roll xlat leave sbb inc lock shll mov dec clc pushl shrl add int3 ja test jmp ret add rcrl sub push xor enter imul or mov inc xor insb faddl xor ret xor mov xor adc mov ljmp pop sbb aas dec sub cli pushf xchg lret xchg push (bad) lret add mov enter mov into or push pop jmp sub out pop rcrb lods scas testb mov add das sti sub xchg jae and adc aaa js ret dec mov movd xchg pop cmp jmp out xor adc dec repnz mov fnstsw dec mov mov or mov jmp notl call (bad) test mov pop lods test push pop jmp (bad) cmp xchg adc int3 dec ret mov inc (bad) fnstcw push out mov (bad) add repnz (bad) pop sub (bad) mov ret js pop leave cld shl fldenv jo out xchg (bad) ficomp mov xor mov ds data16 and push sub bound xlat aam (bad) out pop ror sbbb dec rcrl (bad) push cltd push sbb cmp dec lods fiadd inc jae mov xchg pop xchg dec jge inc dec icebp sub mov xchg out popf mov push and mov std and sahf pop jmp or pop jns inc ret movsb mov xor out xor dec fcoml out mov pop out lahf xchg lret loop xorb movzbl ljmp out jl mov cwtd push or sub fs mov sti cmp ret sub xor sub repnz pop call push stos bnd add (bad) enter mov mov push cs imul and test mov push and xchg mov loopne (bad) loop leave idiv jno jne mov sbb jno imul lds sub inc andb push mov cmp add aaa aas popf and jb je add push mov add ss mov loopne fisubrl movsl pop xchg dec popf or lret pop ljmp pop jp xchg add push stc push xchg std out mov out dec mov sub push push xlat xchg pop or push stc push outsl jmp add pop in and (bad) jge push lret dec iret cli sub dec aas daa subb lock lahf dec ja sub mov out fs test sarl inc lock or sbb xchg sarb add add mov bound or data16 leave mov shlb call pop xchg gs mov sub mov xor jnp call push sub jle nop or mov inc scas test out mov cmp jae sub and lret xlat add push outsb pop dec pop jbe ret jge push ds sub xor xchg outsb adc decb loop xchg mov or sub or cwtl int3 add lea dec xchg adc lock adc dec or ljmp fmull adc or pop movl jb outsb add les clc test lea jnp popf push ficomp xor inc daa dec xor sbb sbb xchg mov (bad) mov testb jg lcall das lds js mov mov loop fcomps bound jle jp insb and adc jns xchg lods push les lret mov aaa les mov cld lods xchg dec out fdivr jo adc cmp das aad adc inc or gs or sbb inc out add xor pop data16 sub push xlat pushf cmpsl pop push mov bound iret pop and clc pop inc mov push lods hlt add clc scas mov mov adc test mov dec aam enter leave bound das pop cmp sbb xchg lret or dec fild xchg adc add mov sti mov xchg xchg lock adc mov mov sbb mov test sub ljmp stc enter out fcmovnb adc dec xchg bnd test out and repz push movsb and or insb call inc push xlat push out sub mov ficom js add jae movsl dec adc or pop lret insb dec mov movsb test xor mov push (bad) cs (bad) inc jo cmp int3 repnz push repnz sub and jmp jmp lcall jg,pt pop or (bad) xor aaa jns ss pop and inc sti or lds pop mov jp xchg hlt ja stos xor imul mov jnp iret cli je cli lods pop jp ret ljmp xchg mov les lods (bad) cmpsl mov mov in aam leave mov mov pop fs ss inc adcb and mov mov popa popf rcrl in jle sub and mov rcrb push and movsb jnp (bad) mov shrb pop push inc xlat (bad) dec push inc (bad) cmc push loopne push add push add sbbb les add nop divl add mov out dec mov pop mov cltd xchg stc fisubrl mov rol (bad) inc add and insb iret pop xor in xchg shl sti out shrb adc or fadds jno push adc ja es add and mov sub clc push xor jecxz xchg sbb ret sbb rorl stos adc sub icebp lock icebp jle stc mov or mov add stc lock jmp notl jne popf xchg movlhps xor adc push je ficoml xchg xchg inc xchg pop inc add test pop and ja sub out outsb dec push mov out movsl fs cld sarl movsl jb clc shl repz (bad) (bad) xchg out add or ds notl sub mov pop leave clc fistp cmp mov jp (bad) jbe imull mov pop sub lcall and jno cmp push into add leave dec cld lods rolb mov inc leave sbb fcoml lret nop xor push bound test cmp xchg jg cwtl sar loope dec add jae add and popf adc popf lcall lret and cmpsb sbb lret and mov xor adc leave sub jmp sbb cld cmp sbb mul ffreep push mov adc sbb adc sub fprem xchg repnz popf mov ret sub adc or movb imul fidivrl push push fsubs (bad) movsb popa lock mov mov rorb and adc lret jmp jle pop mov or fldcw lea incb stos arpl mov xchg (bad) jb,pt push lods adc loop jg jb jo pop pop fmul sub push pop lret (bad) push add shrb sar mov das into pop xchg xor icebp frstor test shl ljmp (bad) lods mov or cmp hlt sub fistl sarl dec ja sub cmp sarl lret adc mov pop or and (bad) jp das fiaddl xor scas mov sub cs mov pop imul xor aaa cld inc lret inc popa mov sub addr16 sbb ljmp dec std test repz repz mov out dec jl cld lret test mov jno sub xchg jg and dec ret ljmp add push add push push aam push add mov call ret loope addb pop or sub push pop int3 lods ret xor arpl nop cs sti push and das repz aaa jmp dec stos pushf inc xor rcrl scas rorb xchg xchg int and jbe mov dec xor iret adc add in scas mov sub xor xlat mov int out sbb idivl push mov dec mov int3 xchg dec out cmpsb dec sub repz scas adc fildl push mov pushf insb fwait dec adc lods inc pushf popf mov aad sbb fxch dec daa ss cmc adc ret inc adc mov and lret fdivl pop flds inc jmp xchg jno (bad) stos mov add into or icebp std jp notl bound ja jae ljmp jl jge aas sub pop loope fsubrl into int3 loope push (bad) mov sub lahf leave sbb sub mov mov imul lahf pop int3 add sub or movsl inc jns inc and jge mov pop loop xchg xchg cld fldcw imul sub call push (bad) jp (bad) adc push inc out push mov and or jg adc cmp in arpl (bad) notb dec dec pop pushw fsts mov xchg loopne xor lcall jno cmpsl and add je dec test and lret fildll popf add and sbb ss (bad) sub fild xlat sub stos repz pusha xor mov sub xor cld pop jp inc dec aas lds lods mov lods repnz mov mov add cli ret cld je xor pop stc dec imul setle dec testl xchg or mov adc call mov insb sbb ja es xor out repz and push jno dec dec sub mov or stos add enter rolb xchg daa in push push imul imul pop out gs mov in xchg ret mov dec in adc out clc (bad) in mov and jge xor push ja add mov test scas les sbb pop cmp sub enter cmp insb arpl dec jecxz and imul scas popf sub or leave or pusha test (bad) bound sub add add dec mov mov mov mov xlat dec dec popf in add or pop lods jb icebp sub das loope adc or push mov shrb movsl adc xchg fild push (bad) mov mov sub or lcall adc fs mov cmp sti fsubl dec adc jmp pop mov gs add mov gs add (bad) rolb push push std or cld mov pop cltd push lret sub sub and das mov mov cmp mov sub shll xor or mov xor sub mov xor xor dec inc jmp jecxz adc clc stc rcll mov mov lret leave cmc lcall add fildl jnp pop ror hlt cmc (bad) ljmp and (bad) adc mov xchg call lea repz pop (bad) jb mov xchg mov add hlt test out fadds loope jle pop pop lcall push fildll sub pop das add xor mov leave push lds or repz les push loop jns test lahf pop xchg popf mov lods mov in mov loop add int3 jb insl rcll (bad) loop fcmovbe std insb hlt mov (bad) mov (bad) dec pop (bad) sbb into pop pop imul repz mov les xor xchg sbb ljmp icebp rorl push pop ljmp push lds (bad) popa int3 mov das bound ja clc dec test and or add jmp lds or fidiv or or popf dec enter js mov mov (bad) mov xor clc imul add arpl and out add movl fs fcompl dec mov cmp sub add sub cs jl fiaddl mov test repnz rolb lods push fld1 cmp sub cltd push pop test push adc testb xchg jns (bad) stos jmp sub xchg loop cmp adc mov addps mov insl (bad) (bad) or adc ljmp pop in push or xlat or fistl xchg repz mov pop repz stos test lods fstpl movsb pop cmp dec mov jecxz and fist pop jmp sub cmp stc int (bad) xchg dec mov scas push jo dec lret fist xchg out pushf test push loop das sub dec fldt rcrb xor inc xor mov jecxz mov (bad) addr16 mov cld shlb in pop sub jg mov cmpsl add add sbb fs clc lret jle push jne inc jno jnp and into add push jp adc sbb mov pop jmp leave jns (bad) fidiv aad lock adc popf push notb pop mov add stc inc pushf ljmp jg mov mov (bad) gs cmp sbb mov (bad) jmp sub and mov test mov mov xchg test dec jne push orb and popf (bad) js pop bound pop lods inc xor pop inc mov repz push lcall add cmp push dec or cmp sub data16 and rolb jmp popf mov enter add cmp add add mov jbe xor test rcl pop adc sti lods fsubp and xchg call imul cmp adc int3 jge notb jno push imul xor test pusha cmpl add mov jnp pop or test (bad) ret mov pop mov cmc icebp and aam push inc call fcomi inc mov lods movsl mov fidivr sub adc dec xor mov ljmp call xor retw sub or inc popaw sub xchg int push leave sbb mov mov fiadd xchg pop xor mov sbb enter jns dec js jp dec jmp sub or movsl stc out scas (bad) je inc jl in dec jle pop mov shrl cmp mov xchg adc sub mov movsb aas daa sub inc out aam out mov in pop sub jbe fs mov sub mov dec adcl pop sti repnz xchg test sub inc sbb lret ljmp inc xlat daa repz (bad) (bad) mov cli (bad) mov adc and fistpl xor and sub cmp sbb test sub mov xor lea ror jnp mov rcr xor mov lret aaa add jmp (bad) jnp mov jno xchg lock jecxz fildll pop cmp insb jns mov xchg sbbl sbb pusha mov lods hlt out lds push and daa push cmp or push int loope mov shrb add fldenv xor fbld lods sbb stc movsl insb pop adc xchg int3 jno xchg xchg cltd add push les add xchg repnz xchg xor fnop xor mov scas (bad) ljmp repnz cli cmp divl mov dec mov stc movsb sahf xchg call in jge or dec stos cli dec mov push xchg pop adc sahf pop and out dec mov mov dec push idivl cmp inc mov (bad) pop and add xchg sbb add in rorb ljmp adc jo ret cmpb adc daa cmpsl je push iret outsl divb push dec push jo lahf mov in (bad) mov je sar push out dec ret out sub idivb push pop mov adc push ja adc cs movsb cwtl add lock lahf jbe push push sub or xchg xor int3 inc cwtl test mov rcrl xchg and cwtl pop stc mov cmpsl in mov std jp sub jmp sub ret es mov dec lahf cs or dec push decl sbb pop aas jmp in movsb iret and bnd sbb mov mov push and cmpsl bound xchg pop push js and ja leave push and add pop mov xchg dec cld leave popf hlt cwtl jp or dec xlat mov cmp popa inc push and xor and cmp out cmpsb iret loop test daa lret test cmp repz push add jmp out sbb sub add repnz idivb sbb mov adc dec leave pop xor leave cli inc loopne sub fisttpll fildl pop mov dec sub sub je and mov outsl mov subl int icebp sub and or hlt dec or and js mov imul jbe addr16 sub pushf cs sub fadds (bad) pop mov fdivr xor and mov ret cmc cmp icebp popf adc int jp pushf lret push lret or (bad) or jge and js cwtl inc mov ds shll ja fnsave add repz sub mov js fsubrs (bad) sarb out dec aad sti imul mov clc icebp or (bad) es cltd xor pop mov and arpl mov pop mov mov lret xlat push pop ljmp subl mov test incb adc jmp pushf pop leave xchg push popaw fdivs (bad) cmp push (bad) jmp and call inc and sbb repz (bad) xchg rcrl or (bad) mov mov pop jmp sti pusha sub add shrb add das mov push mov fadd or adc fisub adc sti imul sti aam mov outsl inc cli add fucomip int3 dec ljmp dec xor movsb int outsl and and dec mov bound ljmp and dec and shll ljmp lods cmc cltd adc movsl out adcl icebp add mov repnz ljmp mov dec test (bad) testb stos (bad) mov sub inc lahf mov test sub mov or movswl mov pop mov roll xchg pop dec fimul fldenv cmc cmp mov xchg inc adc push fwait gs sub mov jb shll xor sar leave mov inc or and add testb pop rcrl lds mov in jle scas mov jne or add (bad) lods dec xor dec incl sbb xor aad push mulb lods sub pop imul lret or sbb mov lea dec repz aam fnstenv int3 jo fldcw and js and insl or adc rcrb cmp sub xor aad sub pop hlt or pushf out sub icebp movsl inc daa in add pusha out mov pop mov ss or mov cmpsb xor (bad) ja ss out mov or call cwtl in add mov lock imul incb rorl jle xor icebp pop mov mov lds sub scas lret fisubr sub ds mov adc mov pop mov pop out sub mull mov jg or loop (bad) (bad) dec xor pop push addr16 jmp mov mov lcall pusha movsl pop xchg xchg es popa aaa cmp les sub out test fbld xor pop and or mov (bad) pop test leave jle popf insb mov jo pop out mov mov and add ljmp jecxz (bad) mov mov popa jl mov ret xor imul popa sub jb inc cmpsl jg mov mov movzbl pop pop add sub and rclb movsb (bad) out hlt mov or lret loopne xlat sbb mov es pop pop lcall dec sub imul daa fnop out jne ret mov imul push loop std ret jbe sub inc dec les or icebp and into vmovaps movb and xchg xchg dec xchg add (bad) ret cmpsb push dec adc mov (bad) fs mov adc loop lods push ds pushf mov outsl sbb cs push sub inc mov xor lret pop hlt jno aas cltd sbb data16 adc lret sub push sub xor pop (bad) je sti sub sti xor (bad) ljmp je add pop jnp shl or out xlat dec push pushf mov sbb or or add push xor mov sub mov add aad sbb fs sub xchg les inc arpl dec mov or icebp mov repz inc call adc xchg imul xlat lds inc sti jl loope outsl call ljmp test pop pop int3 inc inc mov add xchg call rorb in repz adc pop sarb and and (bad) pop sub out imul cmp ljmp cmp call add fildl fsub sbb and xor scas bnd fisubr scas add pop stos push jmp test cmpsl movsb sub adc insl ret and fistp pop fnstenv lock add outsl cld fmul iret pop xor dec add imull out pop stos cmp (bad) add fldl add jecxz pop push out (bad) insb imul jg pop and and shl leave pop dec lods fldenv xor stos mov rcll jp outsl notl (bad) pop icebp leave (bad) ret insb movsb push or (bad) or cltd cs sub (bad) repz frstor mov popa mov or pop subb scas fcomps add bound scas jo repz cli dec mov xor fs fisubrl je mov ljmp sub mov or (bad) xlat test scas repnz xchg std xchg mov or cld pop cs loop pop insb dec daa cmp or sub push fs and (bad) fsubs lds lret sub (bad) xor xchg test jbe jne adc jecxz lods mov fwait cltd aad rolb insb cmp cmpsl and jmp or nop outsl xchg cmp stos jae adc test aas insb hlt sub dec and popa or dec inc rol lea mov aas jle and xor pop add adc and repnz xchg cmpsb movsb pop daa lcall pop xor sub lret fmull cld loop pop jge sbb movsl negl bound push cmc insb push popf pop sbb push (bad) dec (bad) sub jge jns daa rcrl jmp lret lds push (bad) dec lea stos push iret sub test and cli rcrl popf repz test mov cmp cmpsl or divl icebp jle push sarl sarb daa sub sbb dec jp subw or jecxz pop add add neg cltd mov adc pushf add cli fstps adc outsl loope cmp pop sub push subb xor (bad) loop (bad) or jae ds cmpsb jl ret push (bad) fldcw push push lds add xor (bad) cmp cmp mov mov adc (bad) or jae lods push jge or pop adcl and sub or (bad) mov pop cmpxchg gs mov lods clc popf dec pop adc mov fidivr xchg scas lret add inc push mov push or (bad) xchg jg cmpsb add sub cwtl xor out inc dec movsl std xchg je adc dec jbe imul daa mov lds div test movsb mov sbb add sbb popa cs push jl pop and push and in in inc add push popa or sub and xchg nop or cli push add loop pop push sbb fsts mov stc clc imul xor mov jecxz mov out or and mov stc (bad) cmp cmp and ljmp daa cmp jl adc in dec mov jns or mov enter and (bad) fcompl dec (bad) dec std pop enter push jae xor test out gs mov push push cmpsb add or data16 xlat daa or fdivl fs pop push mov call or popf fist adc cmp jne xchg lock add mov cmpsl ret (bad) mov mov mov cmc add out ljmp dec xor clc inc (bad) mov fsts adc inc mov rclb sub mov jne jg je or daa dec incb push jne cld mov addr16 jp push pop call add sub icebp cmp lds adc pop xor std test jnp int clc hlt movsl in ret xchg pop mov ss dec cmp push and mov imul push or mov enter xor lock nop push sbb cmp or in dec ljmp dec jo adc sub or imul dec push mov and push adc adc stos xchg out fist movsl movsb mov sub mov sti xchg xchg jne push adc dec and mov mov pop mov cmp ret inc pop and cmp cwtl (bad) or cmp ss xlat cltd mov imul jbe fidivr outsl mov add outsb leave fwait push subb jl pop lret mov dec xchg and loope or or scas jmp mov pop push push and xchg faddl lret sbb bound gs pop outsb std jbe sti or testb test xor fidivrl pop xchg sbb ret sub sub gs rcrb inc mov (bad) jne in dec jbe (bad) xor xor std mov (bad) das jmp or jns inc pop (bad) push scas sub mov push push jnp xor lods inc pop cltd out sub add test or jnp cmp push sub (bad) cmp fdivrl (bad) mov lcall or notl jns xchg sti mov ret sbb ds jecxz daa fstpt sub popf rcrb repnz ljmp shll lahf jl push ja (bad) movsl push xchg and fldenv and adc mov sti jae sbb leave jne xchg imul pop lahf sarl cltd add dec mov das push roll adc mov jns sbb pop test mov adc pop mov adc or xor add mov or (bad) sub inc scas add pop jl push outsl xor jmp mov mov or rcrl lea mulb aam (bad) pop or mulb mov jne,pt mov push out fs ljmp fisubrl adc das (bad) mov jbe sub fcmovu or loopne adc fsubl jbe pop fldt inc jns shl or cmp add inc das jl pop fsubrl inc add adc leave mov or insb xor and jnp mov out add or mov sub into das fimull cwtl mov pop pop subl das mov and ljmp int3 scas push in cmpsl inc in in adc sub mov popa push mov mov mov dec adc lahf push stc push add (bad) mov xchg into stos mov rorl notb sbb test fwait push out es daa lcall push cli (bad) mov mov pop xor sti cmp mov push ja mov and jbe divl leave (bad) (bad) je pop push mov out pusha mov imull xchg sti dec push pcmpgtw add and roll sub cmc fstpt mov in jp cmp add test jmp enter repz push out xor jb jecxz xchg xchg pop or sub std lret or pushf sbb jmp sub fs out push jbe fsts add add or xchg fnsave mov add inc and inc pop inc mov out imul inc dec mov std cmp movb aam jg mov icebp and sti fldcw mov xchg push fnstcw dec hlt or xor (bad) mov ds or pop imul push loope and daa or pop dec cli in lret xchg pop jne and daa xor divb add push insb jecxz out add sub and andl add daa and pop sub lods into js push jmp cmp sub jle out dec rclb xchg aaa and jecxz inc dec clc sub add mov mov (bad) dec adc push stos jl (bad) mov xchg das cmc fisttpll xchg cld or dec std sbb xchg icebp lret inc ljmp enter mov scas fisttp iret icebp sahf sbb mov iret jne dec mov lahf test lret mov or lret sub adc sub aad aad fbld adc pop mov lahf nop xchg das (bad) clc sub sub fwait cmpsl mov xor out jmp out pop out out sub push cltd adc mov sbb mov jbe or lea mov imul imul pop push jne xchg sti std test cmc inc mov test lret je push pop dec push maskmovq notl add (bad) mov fisttpll dec icebp mov xchg jmp pop imul or push les inc jle imul scas cmp (bad) ljmp sarl add repz mov mov cmc cwtl out mov lea jbe iret jb adc (bad) mov sub sub cs xchg push push mov mov leave add and divl lock in gs fbstp add mov nop not dec jmp inc cmp cmpsl leave repz mov repnz xchg ret xchg jecxz pop call daa pop dec xor mov dec lret je sub rclb xor sbb push add jb cmp push cltd xchg into movsl dec mov pop cmpsl notl mov stos repz adc ror sub inc add pop repnz add (bad) movsl nop jmp pop jmp push cwtl shll or fist pop inc sub sub xor sti test push test mov xor add push jl dec cmpsl loop jno pop shll stos rcrb xchg out mov jg int jecxz out push in lret ret lds scas aam out bound jmp imul data16 stos sub or push xorl lahf aas (bad) out out je fmul lock push repnz pop jbe pop out push pop or fcmovu xor xlat jge add jl mov sbb xor pushf mov imul scas das dec loope mov outsb add or lret sbb jmp (bad) jecxz sahf mov cld inc mov jecxz jecxz xchg testl or inc dec push and js sub xor push add xchg jg (bad) inc daa dec mov add push xor adc add jecxz daa and ror imul jmp xor fldl adcl mov mov test mov mov outsb into xlat add (bad) push and mov lea adc inc lret out xor sub mov sbb movsl jae lods push (bad) mov or mov jp and pop rolb xor mov xlat add test imulb push shrl dec xor push ret mov sbb mov or jns inc xor jne pop cmpsb or cld (bad) xchg sub sbb xor daa sub sbb aam mov mov xor sub mov xor shrl inc mov push fmull cmp sub test xor dec mov cltd cmpsl or enter mov aad push xchg outsb mov gs and jecxz and dec or or dec sub call xchg subl (bad) out xchg icebp mov inc mov lods lret faddp push jle xor ljmp loop (bad) sub pop stos loop scas mov xchg push jne les out cltd mov push jmp add jae jo test dec in mov stc and mov aas jmp lods loop xchg mov sub leave aaa (bad) pop mov mov out imul push mov dec sub cmp jle mull jbe arpl imul add mov leave mov out xor push push sub test cmp and fsubs out loope pminsw das mov inc push cltd xchg inc sub bound (bad) jnp adc push movsl lret mov sbb pop imul and stos jge jmp xor loop xorl inc pop out sub out fs test stos mov lds das andb stc out dec outsb (bad) fcoms ret xor pop xor mov pop and das xor mul sub sub xor imul lock jo (bad) negl xchg lret sti sub sub adc ljmp (bad) ljmp push stos insb mov fidivr rolb sahf nop jl clc sbbb (bad) cmp add mov jp sub jg mov fiadd mov (bad) dec lock mov lahf rcr sub mov xchg rclb cmpsl inc mov aas cmpsb ds cmc in or jecxz ja add rclb mov pushf mov jmp add ss rclb push push movsl cs popf (bad) mov jnp rorl pushf sahf jmp in xlat xchg ja add lahf xchg xor mov mov pop int aas mov arpl (bad) sarb and lock inc idivl cmp int3 out ja decl mov adc mov jb adc add out push std xchg xor xor push das xor test out push dec (bad) icebp mov sub dec push jmp loop repnz dec movsl jmp insb movsb jmp push sub loopne (bad) push imul jo (bad) mov push popa insb loop movsb xchg scas xor scas les lret test jo or jb,pt cmp jmp pop xor jmp mov jne scas mov dec pop xchg add ljmp cmp aad inc adc inc xchg movsl cmc xchg hlt (bad) xor sub jge adc pop xchg xor and (bad) dec sub popf push adc mov and jns mov mov xchg or xor lds fcoms add mov (bad) enter addr16 inc pop lock push das xor pop mov stos sub or mov lcall scas mov or xor insb cli and add lret lock lret ljmp push sub (bad) mov sar push adc add scas lahf (bad) and push aam adc in add test add (bad) cmp push popf cmp inc notl insl lret xor adc inc add in (bad) fimull mov mov pop test mov mov cmc push sub into scas sub pop fucomip (bad) mov mov mov mov fstpl adc adc decl sbb pop xlat inc push adc imulb ljmp loope push and inc sub push repnz ret fdivr popf mov (bad) push ret and xchg jmp sarl pop mov mov fbld jl sub movsl (bad) cmc shll xor stos bound inc insb pop mov jo dec (bad) in mov xchg repnz test add mov mov and push mov mov xchg lods jbe fnstenv aas mov rcrl adc xchg lea loope repnz test fcmovne jae imul and lods fprem1 stc fnstenv mov shrl inc mov xor idivb lods repz push mov cmp lea sub insb test xor out cmp outsl in add sub (bad) les mull roll xchg nop adc pushf ljmp jp movsl icebp into xor pop lahf sub pusha push icebp add dec sub mov pop repz pop call sub sub fsubrs addr16 movsb sub (bad) ds es xlat inc fwait jl pop jg and pop pop jne mov push xchg sub sub mov jmp adc xchg cmpsb fs hlt aad mov jg repz xor adc test xor in pop adc fidivr xor lret sub dec push push sub add icebp and sub xor jmp icebp sarb mov cwtl inc sub das and pop testl aam or jmp mul leave imul mov and and xchg dec test cmp das cli test fcomi daa js mov mov fcoms add iret xchg aas and daa xchg arpl mov in inc add jmp (bad) jmp inc pop out data16 daa mov data16 and fistpll mov daa fcom lods (bad) divl clc icebp mov or repz or add pusha dec fnsave cmp add push sbb lds jg ret test sbb imul xchg mov or pushl subb xchg jb out addr16 add jne jno sub icebp sarl add ljmp out sub push (bad) sti std push imul inc push or xlat mov cmp insb imul cmp cltd out sbb sub sbb sub int3 test cld inc movsl mov js enter adc adc out adc mov lahf mov or cli sti push pop push jmp repnz fadd and (bad) xor xor xchg mov leave sbb sub in fxam xor xor fild ja dec jecxz dec out xor orb sbb ret (bad) and jne outsb popf jle repnz int lods xor loope ret push xchg fs adc add out imul xchg add inc fdivs rcll out sbb sti pop stc call mov jbe pop xor lahf jp dec jbe (bad) mov ret imul (bad) imul cmpsl jl jmp inc gs ret sub pop ucomiss pop (bad) out jb out incl and test add aam lods pop xor sbb or mov push cmp out mov pushf mov lret cs sub sub mov push mov push adc outsb cmpsb fwait sub push dec test mov push scas lea xlat jno leave ficomp mov cld inc mulb or outsb std push cmpsl jns nop mov call ljmp mov or fwait xor mov movsl jge pop cmp das xchg xchg daa sub sbb mov mov sbb mov sub lock fidivrl adc in scas movsl out daa mulb or cmp mov push push (bad) dec icebp pop out scas jno xor inc mov repz pop aaa mov add dec add rorb daa out aam jb ja fldenv dec out daa xor mov fxch imul lret inc pop out test mov push xchg pop xchg pop out lcall pop sub add jnp (bad) imul ret mov mulb hlt mov roll stos rcll pushf xor dec out sub jecxz std ss mov and dec out or push insb jbe adc add xchg arpl mov cmc into mov xchg mov xchg mov dec sub xchg xchg push and icebp mov adc jp cli fs and out jl pop test pop fdivr div fidivl mov xchg push int test jp push jl sub push mov xor jge lock cmc add ret (bad) xchg (bad) mov decb nop out out xchg mov into dec dec or mov das mov dec mov fdivs pop (bad) mov pusha fidivrl mov mov and outsl lods (bad) xchg repnz add clc or xor loop std xchg ret mov sub leave push or pop mov pop push aad adc cmp jle jmp and ror pop sub movsb sub and dec (bad) mov fldl es pop addw or je daa lret xchg add addl dec mov testl aas fcmovnbe or sub das lods inc movsb mov and idiv mov mov fnstcw mov mov xchg scas or into into cmp cmp sti push (bad) fildl icebp jmp lret cmp sub and shrl jno ffree sahf jmp int push adc fisubl adc add mov stc movsb scas loop nop out dec loop sub fs dec adc insb sub jmp fprem1 jnp fstl nop pusha xor popa (bad) adc test cmp ds push (bad) imul pop test clc jmp out in jae (bad) lret loop lcall mov fsubs pop inc push pop repz (bad) jb cmp aaa mov push xchg and aaa xor cli ficoml stos mov outsb repnz push push insl mov jne push xchg add pushf rcl pop aaa and test push mov sub add sub pop (bad) xor das ljmp mov gs jmp jns imull fstl sbb (bad) (bad) xor lea mov (bad) mov pop add lods and push push inc loopne lock ljmp les arpl stos xor into jb aaa test ret push arpl (bad) fstl add jmp add mov mov inc pop loop cmp sub sbb jmp movsl lea xchg sar bound push (bad) dec inc and scas sub xchg mov in repnz fiadd cmp sar imulb dec and imul sub adc cwtl sub push xchg cld popa in stos out jp cld or or in dec and jns sub jmp loope cmpsl pop mov dec mov cs fs push out mov push cltd inc xor mov mov (bad) lret jecxz repz mov xor xchg ror add jmp inc or sub xor jmp jmp ret mov pop xchg sub int add cltd hlt (bad) ds rcl pop aad inc inc shrb jne in cld and repnz dec fdiv negl xchg sbb daa xor jbe jmp out jle adc rolb (bad) or pop sub cmp mov mov dec jbe (bad) bound enter push lret cmpsb sahf and (bad) xchg push dec push cmp pop sub mov icebp repz jp fidivl or cmp aas adc jo (bad) popf (bad) mov ljmp xor loop cmpsl adc mov cmp (bad) push rorl icebp aas icebp and fstpt pop mov fisubr add sti xchg mov fbstp or clc js xlat cld ds xchg jno dec aad nop pop out dec testl cmp lea ja or mov adc xchg out dec sarb psubb jle sub sub mov cmp adc jnp fsubl dec add ret int3 pop sub mov shll adc addr16 popf stc dec (bad) test inc push cs add pop push or sbb lahf movsb es pop jg xchg xchg out mov xor sub cmp dec jmp push add cld popa in mov (bad) push push dec sub push enter (bad) cmp jns imul pop dec out push sti add sub mov dec movsb popf cltd les mov dec adc mov das lret jge push dec cmpb fs stos jmp fistl pushf addr16 fs mov push std sbb pop lods or (bad) mov (bad) ret test loop gs repnz enter sbb insl outsl cmpsl inc and and mov jbe insl lcall push cmp or push cmpb call repz mov in iret pop popf (bad) xor sub mov or jnp adc stos mov dec or mov and lret push adc xchg scas loop (bad) mov cli ljmp ficompl xchg fnstenv sub scas mov xchg lds or imul sti faddl mov ror addr16 es mov in fist nopl xor and bound cltd pop sub je imul insl pop mov das jns mov sub xor lret mov add (bad) das aad mov (bad) sti mov arpl pop or scas addr16 xchg sarl ret sbb notb pop mov lret pop add lock int3 xchg add mov ret or cmpsl dec sub rcrl movsl jge push or pop ret adc (bad) outsl sub lret rcr add ljmp arpl mov movsl mov decb in mov dec cltd cmpsl or add and or mov xchg rol xor and ljmp add mov jle add or jge fwait xchg jno leave xlat sbb fdivrl and jnp pop cmp jb insb adc mov xor outsl xchg add mov sbb clc sahf fisubl repz das lcall and and inc xor xor mov ja icebp (bad) lock fldcw dec cmp fiaddl inc or leave ljmp adc adc jno dec pushf (bad) pop pop xor mov sub push iret sub mov jge and cwtl fidivr pop jle or jecxz fmull ret out xor stos xchg mov dec lret push out icebp icebp dec inc iret pop call xchg stos sub jg int3 pop lock pushf jecxz aas mov in and jge mov sub jo mov xchg adc test mov jns fs mov sub cmp imul pop and push fwait inc xor nop cmp bound cmp pop dec inc rcr or ja lds je call jg sarl loopne sbb dec jb outsb xor jl push ret fadds cmpsl pop cmp jo out jg and sub push stc lahf inc pop mov mov sub mov test (bad) xor or add xor cmc into loopne push mov cmp loope sub imul or xchg lds sbb and outsl clc dec movsb mov dec or mov add jne ss push lret mov and add pop pop jge xor rcrb ja fsub xor sub ret fcomp xchg and repnz xchg out lea clc call and ljmp ret sti in ljmp sti in ds adc cmp mov sahf ret xchg shrl stos int3 cmp ror lds aad fsts rcrl add adcb jno or sarb jmp xchg fs xchg or insb jbe jmp out cmp aam fistpll arpl pop (bad) cmp inc loop call jle fndisi(8087 test pop loop fdivs mov stos pop xlat inc sub out nop cmp call sbb lcall pop (bad) mov xor or ss jno mov imul or push jno xchg xlat loope stc push push xlat call mov mov std jbe push out xor clc loope pop xchg aas pop add xor loopne je mov dec mov or loop movsl mov decb (bad) (bad) and ret sub mov iret test dec ljmp mov cmc mov bnd dec lods icebp rorl test (bad) mov dec ss add and jmp mov dec jecxz pop les shr add pop add pop push and or arpl xlat stc push xchg scas inc cmp sub push adc mov push aad loop jae test pop and sub or aas int3 add lret and fstl stos rcrl add ljmp ret sub dec xlat in call cli in pushf sub and popf and pop (bad) into sbb push cli and mov lret push pop xor iret data16 sub loopne jge icebp mov hlt (bad) cmp sahf add rcll clc or test test dec mov outsl sub and notl ret cmpsl (bad) clc imul push idivl cwtl mov sub repnz test lret into sub in xor pop fxch dec sub add in shlb push and fisttpll je or jo cld popa dec cmpsl (bad) jb add adc cmc sub rclb gs dec mov sbb push stc xor xor scas jle mov pop (bad) popa push out and icebp leave sub outsb pop stos dec cmpb notb iret dec scas cmp mov jge sbb das repnz mov mov jo mov mov pop mov (bad) lret push pop mov daa xor jnp movsl (bad) mov into (bad) mov das stos sub jle imul sbb das jno inc add jl daa fs insb dec and daa jmp xchg nop dec lock into pusha loopne popf xor add mov daa lret pop or data16 push fldenv iret sub je xchg ret das mov mov fs movsw lods and add pop out movsl popa push idivb cld sbb mov push popf popaw mov popf pop push scas push daa icebp sub divl insb and sarl (bad) jecxz sub popf pop and adc mov dec or xor sub rorb scas sub ss cmc sbb or adc dec je jmp or leave push sub pop xor jb sub cmp mov jnp sbb ret add lods jmp adc test ret int3 aas in frstor movsl lret jb int3 push cli popf negl fwait xchg jmp nop gs xor and lods clc adc rolb add je push inc sbb popa jp mov in sub push loopne mov pop les jno adc call dec fs testl mov data16 mov hlt ja add mov inc jo inc das mov jns test fsubr mov dec inc idivb ds out adc clc sub pop mov pop xor mov dec loope sub ja mov sub mov out add pushf aad lods push (bad) mov add jmp ljmp sub lret pop xor dec test dec sub repz rorb lret push das incl mov sti fistpll mov sub inc and negb mov nop xchg popf imul insb cld xchg sbb shrl or icebp inc jb sbb sahf mov mov cmpsl push add test and mov jg fadd repz pop mov nop adc repnz inc insl mov lahf jne (bad) sub sub mov add dec push jge mov fidivl add negl pop insb fisttpl mov pop (bad) xchg push add loope je out pop in test das jmp xchg mov scas mov xor jl arpl xor mov into jns mov lahf pop or and popf xlat xchg sbb iret pop shrb lret iret pop cld mov mov mov out dec aaa cmc adc cmpsb arpl sub cmc cmp icebp (bad) jne jns out call out lret pop jl in cli sub out cmp jnp xor mov pop leave fidiv mov adc sbb iret mov xor ja cmpsl mov push add add rolb sub in lods leave icebp push jns dec insl js xchg stos cmp fbstp push fmull in push cmp sub xchg sbb aas cld mov jecxz mov jg push push jb mov mov cltd or sti aaa and mov fdivrs mov test pop lods xlat loop push mov inc pop adc clc add pop dec popf push xchg cmp dec push dec call adc xchg push sahf scas aam jo (bad) xchg pop mov imul xor ja inc hlt stos movsl js mov mov mov jge jbe xor jmp adc icebp lret sti adc dec mov mov lret jle adc push mov dec and pop pop add clc mov push fwait dec jg xor (bad) cmp cli mov pop out es fmul jg mov fcomps add loop fwait push lret fist push cmc jl into add cmpsb inc jle fisttpll test xor sub add loop pop les xor scas mov aad jg sbb push and mov and pop jecxz popf cs jbe jle (bad) and mov xor or pop xor ret or cld loopne out adc mov pop dec (bad) out pop mov jmp divb leave adcb nop add jmp fcmovne out push sub sub scas shrb sbb and rcrb sti or ljmp cmp and dec pop mov push nop scas inc (bad) daa or jne iret leave insb xchg fbld sub pop add cwtl pop xor shr or mov test xor xchg or mov or test movsb mov hlt or mov mov lds sub cmc jnp out adc add or jns cltd cmp jg lcall dec add push mov push sub or movb and sbb and (bad) into dec enter fmuls fistp add jne or pushf cmp push or lahf jnp inc aas lods cmp lret and out push stos push xorb sub mull xor push out add das add jg sbb gs cmpsl or (bad) popf inc sbb sbb and mov gs add mov lock loope notl cs adc (bad) int3 inc mov movsl cltd sub push push or jmp xor into inc adc cmp and dec mov or fld jp gs in (bad) scas cmp gs mov sti ljmp or jno mov ss (bad) leave lahf (bad) outsb mov xor fisttpl jg sub pop or fmuls adc xor (bad) sub pop int3 mov rcll or adc sub add mov sti or aaa loop or in pop mov fucomi repz imul stos cltd fsubrs mov (bad) std or into add cmp xor dec out lret aas add or (bad) into lcall scas pusha or cltd pop cmp std sbb dec adc cmp push negl lahf dec leave iret decl popf pop iret adc test mov push icebp outsl test loop test inc test mov mov frstor push (bad) mov jns lods mov std dec lods adc (bad) mov lods add fcompl sbb cli rcr xlat add aaa negb insb lret leave push dec nop sahf das sbb push pushf and jmp fistp cwtl xchg sbb fcomps into jo in dec add sar xor xchg cmpsl cli out xchg xlat xchg sbb int3 ret outsb fsubrs icebp xlat insb mov stos mov sub sarl fs sub (bad) ss pushf movl push cmp and push iret adc ret aad pop push adc (bad) mov push in push pop mov or sub int3 mov xchg and mov popa popf ja div (bad) dec inc lods sub inc xor cmpb sbb and mov adc xor mov mov pop and (bad) (bad) cmp ret js dec adc dec repnz stc mov lods pop xlat bound push sub cmp inc ret stos mov sub jmp lret pushf mov in aad or xchg push leave js cmp out mov stos movl and int3 mov pop imul xchg add mov jg push les shrl pop xchg daa fadds in mov ljmp mov (bad) sub insb mov sbb fidivrl shr pushf jne pop sub pushf cs gs xor ret xlat mov dec in or icebp or std and push cld inc movsb mov js xor inc popf scas pop out sub jge aaa pop cmc add idiv lret ljmp jge js jmp mov xchg adc push and cltd (bad) ds fidivr loop mov dec testb mov inc fildll call out aam push ret or jmp xchg add fnstenv sbb xor xor sbb ficoml adc jg pop inc or pop dec and pop xor jno pop or add xor pop cmc std insb adc cmp data16 xor dec sti lods xor and jno dec jge inc out add push repnz xlat inc jg jne pop les (bad) sbb daa js xchg pop mov cmp add in pop mov negl out movsb clc pop movsl sbb inc mov into in adc paddsb fldcw adc cmp mov call pop inc insb daa push out mov jg pop imul shll iret test mov je push dec inc sti mov fmuls leave mov mov dec mov jg in stos and adc addr16 or or add jle fsubr pop imulb sbb das push and sbb mov aam pop mov (bad) xchg int3 cmp ja mov test jecxz sub add out pushf aam pop pushl scas mov xchg les fild mov gs jmp loop test jmp jmp imul sub or mull testb test sbb fist mov or cmp call mov std test jmp xchg xchg push (bad) das and mov (bad) je mov ds pusha mov xor add add pop das loopne fistl pop imulb cmp rorb mov hlt sub push (bad) sti fprem1 jg cld dec dec adc pop push cltd sahf fildll icebp (bad) jb xchg lds mov notb xor jmp and imul add (bad) pop aas sub movsl inc sbb lock lcall or ds sub cmpsl (bad) std xchg or pop xor dec and mov fnstenv cmp arpl movsb dec and and mov or das adc cmp xchg ret jno dec outsl mov mov pop test test ficom test cmpsb sar fadds hlt mov xchg inc or fmull subb incl xchg sbb or lret test dec or test notl bound out mov mov dec mov mov and push sub or (bad) push jg or das les mov and adc mov (bad) arpl pop adc sub ljmp cmc movsb mov and xor xor subl adc mov sarl jo sub pop scas sub jge pop mov dec test jno rcll shrl inc ret push xor in nop sub xor or push fwait push loope rcrl sub jmp addr16 hlt sbb xchg sub pop mov insb pop add push jne or into sub inc bound rcrb incl fsubrs cwtl sbb stos sbb pop xchg repnz xor dec lret rclb xor and add mov adc xchg inc in cld cmp dec repz gs shrl xor cli push movsl sbb sub add les mov (bad) adc (bad) (bad) leave push leave fs repnz xchg test test adc fisubr fmuls (bad) adc xor or adc data16 lret push adc mov xchg xor lock jmp and pop (bad) fs out (bad) icebp idivb mov imul (bad) sub repz add mov mov loope xor jo push cltd inc imul decl dec xchg jecxz ret inc add dec lret sub icebp or lock and or or (bad) stos testl (bad) je dec pop sub push push and les scas sub xlat loope ljmp imul movsw pop stos out xchg stos negb mov aad (bad) rcrb inc sbb rcrl (bad) mov xchg pop xor pop cmpsl shrb stc ret or lret out test dec pusha in ret je add sub and sahf les scas sub mov pop xchg (bad) or scas (bad) mov shrl les xor out int3 cld rcll add inc jmp sbb mov popf sbb fmuls fstps repz lods sub lods cs (bad) out dec mov mov cmp xor ret orb jecxz leave stc (bad) in and mov mov jmp xchg loop cwtl adc add mov in or sbb data16 xor dec add add hlt adc cwtl sub add jmp lods mov push in adc scas addr16 and mov fisttp fisubrl or stos xor call push outsb xor mov pop loop cmovs or add fldt mov jno subl das mov sti mov mov mov push ret in daa fnsave (bad) mov and out push decl cs adc and mov dec ret movsb and int cli in xor xor cmc sub mov imul pushf xchg xchg adcl es mov cmp in movl pop jp jno daa dec sbb in mov jne dec push js pop jbe imulb shrl jb jmp or bound and inc faddl repz clc push inc push repz and call das push add sarb cmp stos push lret inc mov insb inc dec call (bad) fidivr out mov stos (bad) dec mov cs sbb stos jbe and push push (bad) jge in add lock sub xchg mov call or mov jbe push les pop mov sarb jge mov fs sub call add lret out in and and mov outsl call aas test inc jmp and xchg mov outsb and xor mov scas mov jp das xor push int sarl and cmp cltd test adc add adc adc stos call xchg sub es xor jl xor stos scas negb icebp sbb in add fs pop adcb adc jb (bad) xor inc and popf out mov mov loop jne xchg and xlat push je jmp mov xor fcomps icebp mov dec sarl aad sbb or (bad) cli sbb (bad) sub inc pop mov sub cs mov dec jmp xorb daa (bad) pop out into mov add add push xor jecxz push push and nop idivb je push icebp dec mov mov cmpsl and das mulb mov je int mov sub sbb or sub mov push cmp push pusha jb pop mov and orb mov out movsb (bad) and pop cmp sbb xor cmpsb adc lahf (bad) mov mov lret xor scas xor rcl xchg arpl xor ret pop popa lret inc xor push add jmp pop mov daa push adc mul dec and add add cmc int3 pop pop (bad) rcrb aas mov mov xchg lea cld pop in outsl cmpsb xor mov sub mov and or fsubr js in mov ljmp lret vmsave dec lret cmp movhps outsl ljmp xchg call scas xor iret pop dec mov and out mov and cmp fistpll outsb mov xchg inc push add or lcall lds scas add out test (bad) sub jnp in and mov ja xchg xlat xchg in mov adc cld into jno sbb aad mov ss dec divl cmpb cli mov ja sub (bad) jae push xor pop dec in rorb idivb adc xlat mov (bad) mov pop pop sbb push pop mov adc call cmp adc iret movsb dec mov dec das popf or int3 insb mov jb fistpll jle push add popf push lcall jae xor div sti mov mov pop or add jp push lret and int sahf xchg rcll scas or enter icebp test xchg and or loop jne sbbl mov adc sbb mov push loopne sbb adc or daa add pop inc pop mov hlt jg add scas cltd and mov out sarl or jge mov adc lret xor ds mov cld aaa inc add pop jp xchg sbb mov pop jne cs dec inc sbb fisubrl mov push or pop jmp jo les fisub (bad) scas addr16 mov inc push push sub (bad) jmp je and push cli xchg xlat xchg xchg mov jecxz add (bad) mov movsb mov outsb loope jle mov pop or add xor mov pop out ret pop shl dec sbb cwtl add adc int3 xor lret sbb mov cmp push ret or clc add cmp fldenv add or push sub bnd shrl pop ret das mov out dec xor jne mov jno inc clts push or jb aam add xchg sahf scas into clc add sub or out leave jbe daa (bad) and inc lods jmp stos fadds or pushf and pop mov sbb les dec sbb sub fisttpll push or outsb gs fs mov sarb pop or lahf xchg mov mov test test sbb add sbb mov xchg add xor sub nop push push mov xchg xchg out mov dec pop das xor stos mov xchg out (bad) mov jp push adc fldenv add mov mov movsb cmp fldt mov mov xor out test movsb jmp push (bad) pop or daa (bad) jbe jb shll test ffree pop pop lret push pop scas lods inc mov and out cs mov push sbb iret leave icebp test push inc and jb pop (bad) in jge ret jp pop and stos or add insl xor dec testl push sahf ljmp mov fldl inc test jmp mov (bad) out pop pop (bad) aaa dec rorl and or add dec cmpsl jge pop popf divl daa cltd mov fcmovnb (bad) lea dec mov and call (bad) arpl gs push add out mov xor mov jmp adc fnstcw pop ret lret add pop icebp ret jg push and pop mov inc dec fneni(8087 or popf call add lret pop and or addb pop fcoms xor sub mov lcall int3 xlat mov mov and jnp mov jbe pusha mov imul (bad) mov stc cld jmp sub push sub sbb icebp pushw cs mov idivb out (bad) xor out pop mov lret cmc ds test jmp xchg repz stos cwtl sbb push rol add outsl or pushf or mov imul sbb sub push fist test mov mov flds mov loop testb shrl adc ret jbe loop into rorl lcall jbe jb jle leave fnsave dec push dec inc mov sbb mov cmp fcoml push mov or jbe imul inc mov pop lret imull fsubs out cmc inc adc mov pop adc out mov nop mov jecxz xchg clc test out clc icebp mov arpl jg leave sub lret cmc in mov notl jg pop sub aam je jb dec int pop dec repnz dec inc mov mov push or and adc jmp gs or jmp pop fisub or xor pop in jmp mov mov sub push (bad) repnz js push stos mov pop cmpsb iret shrb jnp and and and xchg repnz adc jge pop lds mov sub ja into (bad) test cmpsl loop mov shrl xchg fnstsw js sub sbb xchg pop cld (bad) js daa or jbe leave pop push sbb add enter scas pop jne xor xchg jmp sahf movsl jne sbb mov mov adc sub lahf fmuls (bad) repz out (bad) mov std shl les xor push sbb pop mov push ljmp cmp pop adc (bad) mov ss or aaa cs (bad) mov sub call shrl xchg adc and bound sti sub shrb sarl jle pop mov dec divb in jg sub fstps movsl (bad) iret mov sahf xlat (bad) xor std mov je mov pop bound pop (bad) aas shr lods jo rorl or insb rorl mov mov xchg or popf sti bound mov mov cmp leave roll xor leave jl popa mov cmp call adc sub sbb sarl mulb jo jo nop fdivrl add decl sub roll mov leave pop mov insb add mov imul add sub sub repnz push pusha jmp mov adc lahf (bad) insl ja divl lret jg jmp (bad) sbb mov stos cwtl mov mov scas mov enter inc xchg dec pop mov dec push cmp (bad) pushf inc popa pop sub enter cmp adc (bad) jl int3 cmp das adc addr16 push cmp jmp xor jbe nop mov xor or xor mov cli mov push outsl addr16 stc fs ljmp add in xor mov idiv js hlt lods loop sbb movsl mov ret lds mov mov cmc rcrl in pop xchg lods rcrl push repnz movsb xor fsubs or sahf repnz or std les pop adc mov inc bound (bad) lock sbb stos popf fistpll ret lock mov pop mov orb add mov fdivl mov loop jno into clc test jo lret inc shlb sub pop ja add pop lea xor jne jl push dec mov push (bad) bound or fadds sub cs repnz (bad) mov xchg push or push xlat scas (bad) mov fidivrl pop sbb jns and je scas sub pop rorb loope sub (bad) dec xor int3 es or and mov mov and pop mov or enter sub xor scas cld jecxz int xlat cmpsb mov jge ja jne (bad) and nop mov mov sub xor lret add xchg jl test push call xchg clc dec sub rorl popf mov movsl push dec xor xor imul push jle and jne push fs xor mov xchg popf rcll fsqrt jb xor rol in movzbl cmp out or clc les sub mov jl (bad) cli popa xor sub sub fldcw je leave xchg outsl test loopne xor mov add int3 mov mov lods pop jle pop fisubr popf popa dec sbb xor pop hlt mov and int3 mov lcall movl imul repz addr16 insb sub adc nop daa shlb sub adc mov cld int dec (bad) scas sub mov mov pop stos jb loop adc xchg (bad) std test xchg xlat pop push jmp mov or mov jne xor push push popf cmpsl ret adc add adc call (bad) push or mov xchg clc (bad) das jmp std sbb dec mov cmp xchg sbbl jae pop or mov add adc iret jbe adc imul (bad) hlt pop test cmp divb xchg (bad) push rcrl stc clc iret repnz xchg ret dec rolb roll or mov repz dec add leave (bad) std pop jp in pop mov push jge xor dec or std mov stos and test mov test pop ficom and lds mov std xor and ret stc jnp loope adc mov and or pop xchg mul pop sub rol sub push int3 das dec add or clc popf pop outsl test clc call sub push or and mov cmp jmp lock mov xor rorb fmuls pop or xchg arpl push mov negl dec pop mov mov cs adc out enter push sub and ss sub and test pushf add pop mov push fdivl dec bts pop or sub aas mulb add xor push addr16 and and cltd mov jmp out mov repnz lods mov inc (bad) mov imul dec jmp jp cli jecxz pop pop nop loope sub sub mov xchg repnz mov sub xor mov stos (bad) mov icebp mov imul in loope and out sbbl les xchg icebp mov mov mov mov (bad) stos jecxz or sub push imul inc pop and mov or imul and push leave push add fcmovnb add cld imul pop mov jmp cs adc add ret jg lds je mov or adc lds and lea push cmp xrelease sub lret add mov push popa sbb outsb and add lods xchg lods push movsl in sub pop (bad) (bad) out xacquire fisttp pop lock lahf fldlg2 inc mov out xor lret pop and sbbb sti cwtl mov sbb (bad) or inc mov (bad) xchg add out loope ljmp mov xor clc xchg inc fcomps loop test imulb jecxz nop add mov scas xor mov lea mov pop mov add xor push imul add mov xchg ja jle push mov notl xor pop insb lock rcl jb dec ljmp in or push jno cmpsb out inc or xor jae fwait or repz mov int3 jb (bad) mov js fiadd and pop add lret or sub ror adc stos mov test in and or aas or scas std sbb lcall data16 push jns or idiv sub pop pop fstps mov cltd mov popf rcll fisubrl cmpsb jl or (bad) out mov pop mov repnz adc fwait mov dec pop pop cmp imul mov xor cmc divb pop icebp ds repz ja fwait mov push xor call scas mov movsl pop (bad) and mov fs dec sub lea mov ja div xlat mov push jns imul stc leave (bad) xor sub and jns int jle mov mov lret icebp sub or mov sbbl and sti in lock and add or pop and popf imul shrb int dec xor popf pop jge or dec ljmp ret or aaa jg xor outsb mov dec shlb mov imul xor lret cmc out aaa pusha scas push repnz mov mov fcomip sub push addl adc xchg add data16 push stc sub clc inc movsl ljmp lret xlat sbb sti inc std cmpsb xchg dec scas mov cmp stos lea jnp push clc pushf in sarb (bad) ret xor (bad) hlt lds ret sub cld and push jecxz lret fldl jp ret sahf mov sbb pop popa es fdiv or mov insb xchg das xchg cmp or movsb rorb jb push sub jp (bad) lret out xchg sbb jg lods nop out xchg adc ljmp xchg jge add cs push pop cmc sbb mov inc and or sub cmc xor inc dec shrl mov sti clc lea mov test mov add or icebp cwtl dec jg lcall movl inc sahf jg insl lods roll xchg xchg lcall fistp int jns dec jne es into (bad) mov pop cwtl xor mov pop push cmp sbb std out int popa (bad) jns out (bad) movsb push repnz or adc push ljmp ja mov xchg negl mov (bad) ja and sar lds notl pop je mov stos add aam add add or decb je jmp mov sub mov daa (bad) ficomp add loope add rorb into mov in mov sub int sbb lds call pop fisubl add pop aad push sahf mov out (bad) jmp in cmc push idivl scas sub jbe repz lret repnz aad test repz push das push cmp xchg pop call idiv jg rorl int loope ds cmp dec cmp mov add idivb xor push pop or cli dec and xor mov mov or cld call dec jnp lahf push push and jg inc mulb add mov cs loop jne lret imul lret mov pop mov push loopne ret xchg jp mov xlat sbb lret aas call or xor dec lret jne loope or or mov lahf ljmp bound div out dec xchg push gs in stos mov mov lods and jecxz or mov shrl xchg jbe out (bad) mov repz lock sbb xchg sahf or imulb add decl lcall es inc pop out mov fisub dec test add movsbl pop jmp xor push out adc cs xor aad ja mov adc xlat xchg inc ret jae daa lock call adc (bad) test cli adc ljmp add or fstps aam insl out add movsl out repz dec repz pushf out jno jnp cmpl lcall icebp imul mov adc cmp jb bnd loopne jmp xchg lcall into cli sub aam inc push push cmp dec sub (bad) aam sub cmpb jge push in or dec and sub cmp ss mov icebp add jg mov clc test jmp mov data16 pop cmp mov lret iret jbe ljmp fstps mov popf ja mov (bad) xor cmp pop mov lods adc int add jmp sbb ret mov sbb pop pop pop pop pop adc popf les and push lret mov xchg jp mov jnp mov pop dec mov nop loop lret and xchg jno jb int3 add cltd punpckhdq outsb xor sub mov mov (bad) clc and dec pop jmp in notl add lret mov xchg leave dec pop mov jo inc xchg mov fistl out dec sahf imul inc negb and dec or jno dec mov bnd movsb mov cmpsb negl jmp cltd dec in int3 fisubrl xor lret imul loopne (bad) daa mov mov aad nop rcll sti cmp inc mov cs (bad) cwtl push icebp xchg inc adc outsb out imul popf lahf sub add std ret jns imul lods add fs ret push (bad) imul pushf std pop nop into pop testb cli inc xor or pop pop and or out mov popf pop inc pop idivl bound mov mov xor cld dec pop (bad) jl and mov mov rcrb (bad) int3 ds lret pop fildll adc lahf ret push es jo mov or push sub enter sbb outsb dec into sub loop mov jp adc push dec push push sub inc xor add dec out scas sub adc xor in out popf cmpsl out push push or lods and push dec adc (bad) mov cltd mov daa sub pop mov (bad) sub cmpsb iret adc sarb sbb ret mov push in mov hlt or fsubrs hlt out or mov lds or fdivl pop fildll imul mov adc daa lret add mov mov es sbb cmp negl fs and xchg stc stos int3 mov rep pop sar sub lcall push cmp les sbb cs mov ljmp push xchg leave pop jecxz fs and xor (bad) std repnz and pop and xor push push mov mov pop pop int3 rcrb movsb push lods gs test xchg xor sbb fnsave or pusha out into adcb adc mov lods cli cmp (bad) cmp sub call mov sti into push dec call sub jecxz inc and ret jnp jb lret or push repnz cli mov fstl pop out insl (bad) andb xchg xor and out sbb mov cmp dec mov or dec movsl mov dec clc xor clc loopne out jnp call leave cmp repz out inc jbe jb cwtl (bad) mov mov out mov pop je push push movl in loope ds test lock pop and add xor jg (bad) pop into jne test std pop pop add divb fist sbb pop pop pop (bad) or outsl cltd arpl gs add cmp mov icebp stc sbb loope push jmp push and mov inc (bad) pushl leave jg xchg sub inc or fwait cmpsl loope shrl repnz (bad) sub (bad) idivl in adc cmpsb out xlat jns imul sbbb jle adc mov pop and jnp jge cli bound push leave jge leave jecxz movsl mov and add int lret gs fincstp out sub sub adc shrl mov sub out fwait jle and in add stos mov push jmp dec jne push inc lret mov insl or ret mov cs xchg mov jg bound add jmp imul or pop jno loop pop or fsubs dec lret enter movb ds iret jb mov frstpm(287 daa (bad) push fs cld rcl adc sbb ficomp or xchg je jmp mov (bad) cmc loop jg xchg xor add xchg sub fwait push and insl scas xchg fbld test and in scas sbb lock mov in out mov insb mov test repz push shr ds mov or fcmove adc adc cli mov cli pop lret out push xor ljmp es or inc out in push cs push dec fs jno sub and pop mov pop lret push outsb out movsl push js mov sub divl (bad) clc mov fs mov leave (bad) xor test (bad) xchg out or cld inc push lock mov xor scas in lret cltd dec das xor into ljmp jmp xlat mov dec and cs das xor (bad) iret in inc or ret sub or lds bnd scas pop idiv dec movsb das inc xchg add pop cltd mov es and pop mov push mov ds push cli bound push xchg in (bad) mov ret pop (bad) fcoms cmp cltd push mov (bad) ja hlt and or mov pop clc xor fsubl ljmp xchg add lahf (bad) mov push das ret (bad) daa cwtl loop (bad) mov (bad) xchg scas fwait adc push sub in mov mov cld mov ds cmp pop sub xchg pop scas sub and dec vsqrtps sub sti mov pop lahf adc sahf cmp repz mov loope repnz (bad) loope cmp mov shrb aaa test mov fcmovbe sti dec scas inc mov mov push xor jg dec sub mov arpl pop pushf mov pop add mov jg mov pop mov add mov movsb pop insb lds js add cmp das roll add adc data16 push fildll adc inc out mov mov xchg cli mov loop stc (bad) push jmp (bad) dec add lahf mov aad and add iret stos mov (bad) inc pop into loop ja push (bad) rcrb and lret push scas inc and scas ljmp xor push out lds shrb pop sub out test jns fs add leave pushf fdivl (bad) dec mov adc clc out icebp xchg push mov mulb test mov rorb inc jmp jno mov pop (bad) negl jle push jne cmp insb sbb add adc xor adc pop xor mov pop (bad) lods sbb dec mov jmp test mov (bad) enter jecxz pop scas sub ljmp xchg (bad) and fildll rol loop (bad) sub out inc xchg mov fmul fistp or add sahf les enter clc and add loop rorl or xchg stos mov inc orl loopne popf insl xchg fs cmp gs cltd lret shrb out (bad) adc mov popf data16 or sub jns movsl fcomps mov mov mov or mov leave icebp jg pusha xchg jmp clc dec leave (bad) lea mov repnz insb call ljmp mov mov inc mov out imull fbstp loope dec clc out sbb push cmp cmp xchg mov jnp into mov xchg lea xchg stos daa les sub leave movsl movsl divb daa std ss in lret xchg mov into sub dec ds jo mov jecxz outsb cld in mov xor rep cld and lea xchg mov mov mov push jnp sub out and add cli xor mov dec inc mov mov inc adc daa inc ret int3 sbb pop jbe bound stos cmpsb cld jg test in or dec in mov xchg idivl cmp iret lcall arpl icebp fwait add rcl loop xchg mov adc add sub sar iret xchg mov mov ja movsl dec xchg movsb (bad) leave stos sub jmp (bad) mov sub or sub sbb lret inc call or stc adc add pop and rcll sub ds inc js icebp addr16 iret xchg scas push je xchg stos dec mov notl leave loop fnstsw and jbe repnz push cmc sarl pop push adc sub sub mov adc xor cmpsb rcll add push jmp fnstsw sbb stc cli inc sub in xchg idiv lret xor mov push cmp cmpsb cmp add stc xchg std lcall mov mov aam push std bound add xlat pushf enter fsts xchg dec aaa pop into and cmp jmp mov jmp lret or sbb jge mov sub cli lret ljmp loopne push or mov out or int jl xchg pop pop das or fisttpl lds negb aam sbb divb adc dec in les clc scas xchg jmp in test or xor ss ljmp out shrb into mov stc ljmp dec (bad) loopne fs push shll xchg xor add cltd (bad) into xor rcrb stos inc mov (bad) (bad) mov test movsl xchg ljmp push and pop dec xchg (bad) xor in cmovg sub add pop and out pop test loop fsts cmp lret add test cli mov divl or dec into or stc inc into adc (bad) sub sub das out push sahf fdivrs push sbb fdivrp jno repnz (bad) dec aad nop mov imul jns outsl dec iret movsl das xchg repz cmp movsb mov xor arpl popa adc adc dec out and and fwait or xor imul mov daa inc and push imul jmp cli into loope sub fdivs loop or mov adc sbb cmp jne push outsb fsubrp lds frstor movsl push ret and or clc mov aad push dec xor fcom test mov mov add dec xchg push test cli mov insl outsb rorb rorb xor and mov push sbb in jmp fisttp or (bad) sarl xchg push imul icebp repz or nop int3 xor popf addr16 fisubr lcall and xor adc push out mov pop mov push and push push xchg loopne dec add popf fistpll shlb pop pop inc or sub pushf fstps mov into or xor xchg push inc rclb dec mov or pop ret mov (bad) pop (bad) in cwtl inc add add bound aad xlat iret stos sub (bad) std sub push inc ljmp and xchg and out das out xchg aaa xchg jg out std testb (bad) push mov mov push jae fdivr cmp xor add cmp aas xor repz cmp xchg fs mov jbe pop add push je,pn mov dec (bad) cmpsl and cmp lret stos repnz test cli scas jecxz dec mov mov push dec mov iret push dec sbb fisubrl mov jno dec js sbb (bad) jbe inc movsl adc adc lock mov jp (bad) out lahf jbe pop jge and mov adc and test movsb mov (bad) or add (bad) inc ljmp pop loope mov lret ljmp xor pusha mov popa sub repnz dec dec pop mov push mov jmp sbb jg cmpsl dec sbb pushf sub lret jo jl dec into mov fsubrl (bad) je mov mov inc or pop push jmp nop leave test inc jmp dec sbb nop cs fisubl cli int3 add pop sbb fld1 xchg int3 cmc xlat jb adc push xchg mov or fldenv dec sbb adc dec decl cmpsb js cmp or add push inc sbb std fildll call (bad) lahf xor (bad) out push dec ljmp sub xchg rcrb pop (bad) cmp pop pusha (bad) out xor (bad) lock aas push loop jge loope push aam pop dec idiv sub sbb sarb lds sub gs mov pop clc (bad) js or in stos mov cmp cmp inc inc out es inc xchg out lret cmp add cmpsl cmpsl in cli (bad) leave or mov sahf out jle (bad) in adc rclb (bad) (bad) lds pop outsb test pop add addr16 xor iret xlat and loopne stc loop adc enter dec xchg mov lret and add stos dec out xor xor add pusha cmp xor popf jl leave jbe xchg push jne ja and mov rcl imul push cwtl push or and in xor lcall aad or mov lds push pop scas inc mov xor stc decl xchg test dec jmp cltd jp add pop pop fs cmp xor shrl pop mov dec or out icebp mov add mov loop ret add lret xlat faddl shr lret sti pop (bad) xchg fmuls int cmp fs in out repnz cwtl ds push das mov xor adc cmpsb fldenv fdivr push jne loope sub pop nop or jno inc iret inc adc mov jge push sub in cmpsb xchg and fs jmp pop iret das mov sarl sbb push fmuls lret xchg das xchg cld in js fcoml sti bound add jb inc jbe jbe ret neg jns and mov (bad) jmp sbb cmp loope xor rcl movsb cmp mov xor fcoml sbb xor sub imul xorb pop cld jge mov jecxz mov mov inc cmp mov jae mov jge clc mov or call mov cmp adc fisttpl lcall or fnsave cmpsl out mov jle out jecxz cmpsl out pop daa cmp divl lret aas dec lcall pop push nop inc sub jecxz cld inc std xchg insb push pop and mov jne mov xor and push (bad) je loop andnps and daa adc push add xor clc jbe ret out xlat push iret xchg fstpl pop cltd aad xor mov and test cmpsl cmc fisub or out dec mov xlat in das (bad) cmp xchg inc mov sub lds add mov sub push ret sub hlt cmp jmp shrb dec or mov cli enter push icebp lret ljmp iret pop xchg dec daa sub lock imulb sub push (bad) sub or push sbb mov push or push fimul dec (bad) xor stos ret push push pushf (bad) ds jbe push pop icebp call mov (bad) cmpsl jl imul idiv adc int3 or (bad) dec rcr mov or gs es mov pop mov sbb fbld sbb mov notb test pop adc out cltd cmp xor das xor mov mov insb jge fisttpl (bad) xor loop mov sub mov lock sar dec insl rcl fsubp lods sub add test out sub out mov lret pop enter test dec sub push lcall inc mov pop xor scas mov pop mov adc mov fmull iret jle mov add dec add insb or xor mov fcomi inc gs in and sub (bad) out mov add jge adcl or js mov ret mov fiadd pop clc mov fisttpll pushf les es dec sahf into mov clc pop adc (bad) pushf or sub mul bound add sbb push (bad) daa repnz imul mov push inc daa xor push cmp (bad) cmp ficomp push xor cli out mov stos push or xor std jns xchg into ljmp cmpsl sub pop pushf cmpsl rcrb adc cmpsb xor mov cmp push (bad) cs pop imul icebp cs jbe pop jl gs mov stos movsb stos int cs pop divb push and pushl insb icebp mov push jne adc les lds mov iret out enter or add int aas mov push fs cli or or aaa movl push and jp scas icebp or out (bad) shlb lcall or sub lret jge cwtl ds into incb mov mov sbb or xor jmp jbe jle jnp and leave push or lahf mov lods andb ret aad push jmp sbb or dec or lret das repnz or imulb inc out pop mov dec sarl sub dec imul and and subb jecxz les cmpsl and mov add pop mov lods and daa fcom (bad) push adc push mov pop into mov sbb std push pusha and arpl dec icebp cs jl into imul mov loope inc popf movsb jle ret pop stos mov mov (bad) cmp pop in loop inc mov or push les add fdivp cwtl inc jmp outsl sti mov dec mov push sti ret pop sarb pop xor cmp loopne or in and jle lock je jo insb xchg xor stc nop es adc adc lret jl in in cmp xchg rorl inc dec lret aaa mov mov test xchg dec adc shrb aad idivb ss stos fs push xor mov mov push sub sahf shrl add fistp dec (bad) xor stos (bad) jne xchg stos mov pop mov sarb leave (bad) push mov add (bad) ljmp or cli mov adc and insl and (bad) adc out lds leave sub push jecxz bound icebp (bad) pop popf je imul fsts jne mov cmp mov mov pushf xchg mov das mov sub jmp cli cmpsb push dec and mov push push out icebp in mov cli (bad) loop push in sbb xchg mov adc inc lahf in adc mov jo pop mov sbb popa insb popa jo insb leave add cltd shrb cld (bad) hlt ljmp and leave mov sub cmp jle iret shr bound notl xchg pop (bad) mov lret mov aas and mov outsb pop repnz in xchg imull mov out jmp in (bad) dec daa repnz xchg outsb mov xchg pop imul sub pop loop add mov outsb xor jmp stos aam pop sub clc fnstenv jmp jge mov int imul repnz mov ret inc cs pop mov mov xor das (bad) les test icebp testb lds fidivl add (bad) rcll mov pop jg add daa popf stc out hlt stos adc mov dec movzbl mov jmp or add in mov imul pop cmp (bad) xor jnp cmp push or sti push shrb jnp jbe pop out scas adc pop aas out (bad) lret test cld cmpsb or (bad) mov and pop int or add testb sbbb rcl jno outsb leave add shrb std rol leave je sub ja insl sti cmp jae popf call es xor add pop iret imul pop lds mov outsl js (bad) (bad) sub xor mov (bad) je mov lret aas (bad) xor jecxz add test lock xor in jmp mov dec or xchg cwtl or inc cmpsb pop outsb xchg ljmp inc insb adc jmp addr16 xchg cmpsb xor mov jmp push mov push push adc je inc push fldt loopne sub xor test out and scas ret insb add inc mov mov pop sub xchg inc lea and subl xor stc fdivs sub adc push iret push mov mov jle mov push mov fs xor xchg loope sub cld insb mov pop les xor xor ljmp inc hlt mov xchg pop mov sti push add mov cld lahf pop adc sub lret ljmp stc jg into mov bound sbbl sti jne mov addr16 popa popf ss and daa pop iret pop ljmp mov and mov cmp (bad) or (bad) std dec je lret and xor sub mov dec lea inc sbb or cmp leave notb (bad) push mov sub push hlt shrb mov aas or and cmc jno lahf negl cli rol or out dec ret les shl daa adc iret pop mov lds and xor sbb ljmp (bad) xchg rclb xlat in add push push inc push insb and pushf mov enter fisttp (bad) leave and sub lret mov or jmp mov lret scas sub out cmp in test mov xchg push and (bad) popa add mov scas out dec stos sub sub and xor out cmpsb jmp test mov mov sbb pop xor add sub in sub loopne loope push pop sub add out cmp mov and add ss dec incl int3 adc xchg pushf mov stc ds pop push (bad) je add xchg cmpsl sti pop cmp mov out lret iret add mov pushf mov jne sub inc aam push adc ss bound (bad) push (bad) cmp jns jmp rcll (bad) cmp cs inc icebp sub mov mov popa sub sub gs mov and lahf xlat xchg (bad) scas sub xor jecxz or icebp sub das test add mov out sub pop push push mov lret les out fmull jnp leave push (bad) cmp or jmp dec gs add fwait push inc mov lds sbb mov pop dec pop cli sahf inc js add loop test (bad) ljmp movsl lcall sbb (bad) leave ret jns xchg mov fistpll fldcw xor js test sub pop sub mov add into or out fs cld arpl std adc mov and xlat xor add cs into xor cltd daa sub mov test cmp mov and or adc cmp adc pop test mov jle pop roll add mov imul lret pop repz dec daa cmp std mov xor movsb and stos lret xchg pop lods xor test cmp lret mov movsb cmp mov gs mov in xchg xor (bad) pop push sti or xchg add (bad) (bad) out addb sub bound xchg in sbb push fildl and mov mov dec xor mov outsb lret test adc inc mov rorl (bad) idiv push adc and loopne push std in xor mov stos cwtl jle lret push mov lret add pop out cwtl ffree pop insb sub lret xchg icebp sbb test popf adc xchg pop pop shrl dec aas sti mov or and int3 or fild movsl pop enter popf jno sahf mov ljmp push movsl or lods adc mov rcrl out add fidiv add xor mov fmuls cmpl xor ret std pop pushf dec rolb xchg add xor repz repz mov push sub pop daa or fidivr sti call stc das add pop cmpsb arpl clc lahf pop xchg sbb cli xchg adc adc dec add ds mov jge adc mov jg mov lahf push std mov arpl pop adc rcrl jg bnd les (bad) cltd inc mov mov sbb jne (bad) lock cmp lret inc push jnp jo loope xor and ss loop mov inc repz stos lret cs cld lcall fild sub stc cmpsl inc push mov dec cmpsb pop cli loop mov dec (bad) jmp movsl (bad) insl jp fbstp push jmp aad mov test add mov int scas ss pop mov addr16 fimull adc mov xor pop daa push jge jmp repz test int3 push icebp sub fcoms ds clc divl movsl jno xchg (bad) xor xor ret jo lahf cmp mov xchg lods cmp mov xor push fwait cwtl dec rcrb sub bound cmp pusha sub xor pop add or mov mov es movsl lret rol aas ret ja test icebp mov pop jl dec loop gs imul dec adc (bad) call leave push test leave adc (bad) jne pop aas pushf das or icebp pop loopne xchg int3 pop mov test mov mov and cs sub jp xlat lds lock shrb icebp cli stc clc inc jmp xchg dec sub jnp jecxz cld sbb push adc and mov cmpsb and (bad) aad pop xchg pop adc cwtl imul clc xlat in and sub (bad) frstor or add mov cs push sub lret cmp add add and lret inc inc and push popf xchg cmp sub das inc nop adc out sub xor inc lea adc stos lret out es add push mov divl mov and mov cmp xchg gs (bad) xor xor fucomp push pop out clc pop dec loop xchg jmp sahf push xor xchg divb cmpsb stc pop cli xor stos mov mov cmpl addl ja sub testb mov mov daa (bad) sbb add aam imul push and mov mov dec (bad) push negl sub adc call pop mov loopne sti sub xlat lcall pop jno lods std sbb ss movsl and sbb add (bad) sub ficom cmp pop dec cmpl fsubrl (bad) push mull jmp xor ss fsubl popf clc xchg xchg dec arpl push mov (bad) fsubr dec add dec xor or jns and or push mov xchg negb shll dec jl or or jo movsl notl fs pushl sub jecxz and fisttpl or rorb cmpsl decl mov fnop pusha repnz bound test aam pusha ljmp jno inc or std lock lea fidiv mov add leave jno xchg mov push lret push mov cmp xchg xor jmp xchg push mov dec and int sub inc xor and gs or sub lahf push jo negb or rcl imul addr16 enter xchg jle inc iret sub mov mov push jmp int push sbb inc xchg and mov enter ret imul ss add scas mov push stc jae and mov jmp mov aaa cld ficompl rolb adc mov mov and in xchg mov or xchg xchg hlt adc mov xchg negl inc or lret add setns xchg sub add push cmp lret ljmp pop jno jl movsl movsl sbb push jecxz dec sbb adc out fucom in rcll xchg jbe adc ljmp xchg adc dec loope xchg adc idivw sub cmp es sub hlt sbb or mov nop das test pop loop sarl or lret xor out hlt aas mov mov xchg clc pop loop gs out push cmp sub inc sub enter sub pop mov xchg add ret dec mov cmp out inc and xor lahf jmp ret andl in and fimul sub call inc or xor fist stos xor xchg in lods mov loope stos imul test aam out mov (bad) (bad) or cwtl dec mov mov dec and ja iret add xor and push dec xchg sti jecxz sub or gs ds xor shrb lret cmp iret repz (bad) cmp mov pushf or sbb pop sub pop stc cmpsl lds shrl dec push cmpsl scas dec cmp cmp mov call xchg or adc or fcmovu dec mov leave xor stos nop jl out movlps repz divl dec jmp (bad) jbe shll (bad) jne idivb jg and lcall xor bound addb stc lds inc (bad) cmp sarl jne (bad) aam jmp js xor cmc lods movsl jmp mov lock hlt jmp (bad) xchg push mov sub push leave pop mov pop aas (bad) mov (bad) mov mov ja adc mov xor leave adc ror pop das scas xor or ret cmc into jns or and jns (bad) sub or pop lods pop inc fiaddl and leave add xchg xor sti mov cmc arpl into add das mov divl push jg sar add sbb insl imul out xchg aad fisubl jns inc mov xchg stos loope sub sub (bad) jge lret xor scas in enter mov xchg adc jecxz adc (bad) std inc xchg test pop repnz cld icebp dec push mov adc sub sbb xchg leave ret (bad) dec (bad) imull inc aam addr16 lods les add dec mov out xor add int cmp jp out dec push adc xor mov andb pop mov sub pop test or and shlb out mov xchg jbe outsb dec enter xor adc nop sbb push mov dec or mov mov dec out adc out jne fimul pop and push rcll inc xchg mov loope and mov adc mov test and add int3 add adc rcrb xor xor mov iret cld mov out int sub (bad) xchg ret jnp or add cli jl push adc and fnstcw pushf push sbb in or lret lret (bad) dec (bad) fldt das lret andb mov lds mov pop out repz out or or out gs or add movsl jmp xchg add adc lret lds pop mov xor pop pop gs jmp pushf add push xlat in xchg out out das (bad) (bad) jne cmpsb mov mov or (bad) xor jmp stc mov mov inc cmp repz rcll and sbb mov sti cmpsl jge pop aas ljmp push repz daa out mov cmp into jne (bad) fcomps out mov popa lret xor inc xchg sub pop dec pushf out rep int outsl (bad) pop adc lds lods jno mov divb sbb cmpsl sbb mov jmp repnz int3 and jno pop outsb repz popf loop inc aad sub dec insl sahf jnp adc mov inc adc and mov notl test sub addb das mov testl inc cmc test movsb mov stc cmovnp out adc pushf mov xchg sub das mov daa out push mov or mov sub inc adc negb ja pop sahf test arpl outsb cwtl ja dec or xor mov out jmp pop or fdiv in fild xor out sub mov dec aam and sub cmp cmp xor fistl adc jo dec lret xor out je adc stos out sar fildl scas sub xor push cmp lds xchg lds lods sti add testl stc mov daa xorb in adc mov xchg repz mov jne cmpsb sub mov dec sub dec outsl jbe xchg inc xchg mov mov mul lret dec ret sub sub int3 fisubl notl ja insb test leave mov mov loop mov inc push push cs xor add push in push xchg dec sbb push shrl push data16 xchg scas mov fistl xlat cld cmp out mov pop test out lret dec push cmp test jbe ljmp insb daa mov push movl mov mov (bad) push iret loope push xor and dec sub shrb mov mov in add insl sub or (bad) push pop and leave (bad) out std adc mov mov popf clc xor mov or and add scas cmc jo cmp push xchg gs and mov in popf gs xchg out scas mov adc sub mov adc sub test mov mov shrb out cmpsb popf sbb (bad) mov adc (bad) sti sub xchg add enter inc add lcall xlat adc fidiv sub pushw xor adc sub sahf or pop repnz popf fistp jg mov mov pop push xchg (bad) push lea jnp lods jge (bad) dec nop pop lret sub movsl jp or mov dec pop push aam dec enter shr imul mov mov cmp xchg pop mov gs mov sarl divl insb lods jns lods inc jbe ret notb shlb jne les mov or (bad) add insb sti dec and or (bad) cmpsl sub imul add scas test mov sub icebp pop mov sbb push loope pop cmc and xchg jmp cmpsl iret daa add cmc mov sub cmp jno jmp xor sarb mov sub and dec or sub out mov (bad) sti pusha and xor sahf mov cltd xchg popf and mov cltd inc jne stos cli std adcl push mov xor mov lret xchg lret inc mov popa popf jl in jmp inc sti sub movzbl repz xchg stc shrd xor mov div mov fisubrl stos sub inc in mov add sub xchg mov sub xchg mov hlt or fsubrl ja mov jl (bad) jecxz (bad) mov dec mov idivl pop mov push scas das and jle fucomi adc mov mov xchg inc cld fldenv in jge xchg mov call icebp sbb rcrb les les adc add xchg pop push xor pop inc mov (bad) sub out sub mov pop mov div xchg push fadds pop scas inc dec and stos int3 mov mov aas mov loop xlat cmp shrl mov jl pop pop rcll negl (bad) bound popa jl mov jle cmp xor cmp (bad) and decl add lret jp push daa clc icebp fildll sbb cmp addr16 push sar lea test stos stc cwtl (bad) sbb pop mov pop and mov jl out xor mov or rcrl loop xchg cli or stc fwait cmp sbb icebp popa sub xchg testl stos das fist sub inc xor and clc cmp mov add cs xor mov fisubrl cmp ds daa and push daa repz xchg xor das sub ret mov lret fcoms mov movl mov lock int adc int3 lret mov sbb add xchg (bad) jnp into mov jmp leave push sub fwait (bad) xchg iret jmp and inc fcmove and cmc pop adc jge cli xchg sub dec push sbb enter and xor shrl ret and inc test fnop (bad) xchg stos or pop out xchg out leave out cmc push mov mov daa and (bad) jno lret loop ja mov into mov xchg jecxz enter sub cwtl pusha jmp daa repnz pop jno stos mov add add mov xchg pop dec cmpsb aas pop in inc movsl (bad) mov out jbe push push xchg cmpsb fiaddl xchg repz adc sbb int3 enter dec stos add (bad) stos repnz (bad) data16 xchg imul push scas or xor cmc out popf mov in dec loop mov and cltd icebp dec push mov push sub mov stos and xchg icebp mov push rorl jb push in mov imul sub aas lods repnz mov push add add ja push (bad) mov leave jl ret pop sahf imul (bad) call cwtl mov in mov pop mov add and cmp repz (bad) aas mov (bad) mov fidiv pop data16 popa test icebp je mov test adc pop stos fnstenv cmpsb (bad) leave push ret jp call les iret stc in fnstenv rcll loop mov pop push (bad) test mov xchg pop out lods in sar imulb cmp int3 sbb mov testb push and push xchg jno push add xlat adc sbb cld into (bad) cmp sub push xchg mov pop mov pop cmp jbe inc jno mov lods mov add std dec mov dec or movsl int3 pop jg mov loop into fldcw add (bad) jbe in add sbb xor mulb daa fstpl lret sbb mov or mov aad daa mov dec mov xor loope push sub dec je shrl push add and das cltd lds jge (bad) pop out stos je rcr mov adc dec mov jbe sbb or mov pop and xor test lret or mov xchg mov jecxz sub xor cs xor notb add mov xor icebp nop jle inc popf cmpsl add stos mov loope or mov sub pop sar jb add rcll icebp sti outsl pusha das dec cmpsb js mov push mov or or sub std cmpb loop or and ja push mov or dec adc lret out dec stc loopne call mov add push mov cltd fwait jecxz,pt add aad pop (bad) je add add addr16 pop aas fstpt mov sbb and sti ret scas sub and aam mov shr mov fidivl push xor cld cltd movsb mov xlat push insb sbb mov mov fldenv pop adc xor or cmp loop or in add sbb enter and icebp pushf scas and mov add cli mov sub pop push out cmp les into stos mov das out flds sub mov dec and push sbb and sahf push add mov sbb pop dec and sti (bad) inc mov pop pop mov dec adc sub jecxz pop push adc das xor jp int3 outsl mov inc fsubrp mov inc cmpsl test icebp mov add ljmp (bad) pop subb xor xlat jle lret mov add mov (bad) xor or outsb inc push cmp push mov jg mov add iret rcrl add scas test mov adc fucomi repnz dec jl add lea jp testb mov pop add pop add mov ja daa ffreep out stc inc out call loopne mov mov push out stc shrl (bad) int3 sub ljmp mov stc fist mov jmp (bad) or mov and cmp xchg in add push mov pop sbb scas divl inc inc lods (bad) jb dec faddl sahf mov aaa int cli mov and add sub std xor ret or sub cmp lret ret rolb adc and stos jge cmp mov xor xor out popa outsb sub in mov mov out inc ret sub lcall das jae mov xor (bad) cmp test mov sub sub cmp dec sub mov lret sbb ds dec xor test decb and dec cmp subb or xor cmp sub cld mov xchg jae xchg insb push aaa outsb and adc negl lock call adc mov fs mov and dec out mov jb lret cmp push mov in sub mov rcll leave movsl out xchg (bad) mov xchg decl cmc (bad) std in add xlat sub jne push dec push xchg jecxz sbb cmpsb dec mov cmpsl xchg cmpsl sahf xchg repz jmp shrl ja jns xchg xor pop and (bad) cmove push jmp cmp insb lds add jge (bad) das hlt es shlb (bad) repnz sub xor jecxz dec xchg sar xchg cld mov repz test pushf sbb inc dec fsubr fcmove fs or xor mov sbb (bad) mov xor add or push jl int ds xchg sbb lods push cmpsl in or scas adc movsb jg sbb call mov stc xchg xchg inc mov popl xchg cmpsl imul loopne fnstcw sub iret mov pop loop fdivr or rcll jno ja pop clc or xor call (bad) jmp data16 ret imul iret mov xor ss mov pop push cmp insl adc push or xor addb mov xor add repnz sub mov pop ficompl mov xchg mov (bad) repz pop jp xchg fist jns insb mov cltd mov cs (bad) daa sub mov and mov ss mov fdivs cld and xor pop push pop adc add mov inc dec or push aaa out (bad) dec stos mov repz push call mov mov sub mov lret popf jge lahf xchg push pop push jno adc inc add push adc addr16 sub stos and das add nop mov lock mov or mov (bad) mov adc mov jbe pop add xchg xchg add sub add out cltd adc fidivr rorb clc or push push (bad) lret pop xor mov icebp adc incl xlat mov cmc inc xchg or adc incb lret subb pop hlt ljmp mov (bad) jl (bad) mov xchg push pop push jge and mov push jecxz inc sti ja fisttpl iret mov mov (bad) mov repz xchg mov inc push pushf call jb aam (bad) repnz jb dec jno push jmp inc daa inc xchg daa jns cmpsl jo mov psubw lret sub adc shll ds pop test sub jno sbb rolb loope orb add mov popf je int jg (bad) movsb out cld and loop ja mov mov xor outsl scas cltd cmp jle push fsubr mov rol adc mov xchg loopne movl dec cmp sub scas je mov sub cmp repnz mov sbb jp test std ds stc ficompl shrl call (bad) or sbb mov xlat int ds mov jne mov jnp adc leave ret rcr cmp push or cs push mov mov roll push mov scas loop xchg scas add lods popfw repz mov lods iret or fisubr int ficom clc lods pop cmp dec mov xor shlb sub enter jge movl repz xchg mov pop lahf xchg adc mov xor cmpsw xchg in inc add fisubl xor in fisttp or (bad) mov inc mov int3 inc cmp xor push mov jnp andl imul pop pusha mov leave or adc cmp cli jl xor cmp sbb sub rorl pop sub fxch push aas sbb pop inc sbb data16 (bad) lock mov lret pop call xor mov popa mov add ret mov adc pop pushf negb jno and jg ret and leave sbb sub shll or pop out ds or scas push fprem dec hlt mov or stc inc movsb subl in mov push pop inc icebp out leave sub mov ret cmp daa adc adc inc mov icebp rcl dec pop cmp xchg jle sti das jbe and adc or call mov fnstcw fbld scas negl popf fildll lods js mov push mov popf call lret gs repz jge cli in inc movsb scas loopne call iret pop sub shr adc inc lret mov cmpsl test sub rcrl ror xchg ret repnz lret inc xor or push je sbb mov (bad) mov fidivrl shr sbb daa in in cwtl inc and or adc add and xchg jl icebp loop repnz jg test into mov or int inc xlat (bad) dec into mov push inc and ds xor sti mov push ja out outsl rcll ljmp popf mov (bad) fstp fbld cli dec stos rorl ror lahf push mov or fildl jbe arpl repz fistpl jnp clc and mov mov push xchg scas xor (bad) std jnp and jmp sbb dec mov add mov out xlat xchg ret lret mov pop and decb bswap xlat sub clc das or (bad) pushf mov test int cmp pop pop mov rcll jo iret or cmp test std repz stc cwtl dec cltd pushf mov jnp or push xor lret test out push mov lcall sub aaa dec xchg aam data16 push out sub fdivrs aaa xchg cmp mov test mov stc sub lea jmp sub xchg or jne xchg out inc xchg mov add mov loop lcall sub pop push imul and aas xor and pop add dec inc and and lods mov test adcb ret into dec sbb mov adc sbb mov sub sbb test ljmp clc aad adc popw in and sahf scas stos dec leave pop dec pusha sub mov pop push (bad) decl adc cs mov push push daa push shr rclb sub dec mov mov movsl js mov mov xchg pop inc adc ljmp cmp xchg shlb ret mov aad sub movsl push inc movsl add cmp repnz xchg jle or add jl js pop loop int and sub mov and (bad) mov call and and mov push scas lcall fisub mov lds rorl cli cltd mov aaa jp arpl pushf iret and mov jl pop or mov lret mov clc add fisttpll nop nop and or sbb pop pop loopne aaa stc or mov xchg add mov dec orl lret fisttpll call cld add jl pop mov push cmp cmc fnstcw mov mov add lahf in adc popf and sub in pop xor or leave jmp inc fstps dec dec mov fcoms test mov and insb lret or mov or mov fisubrl mov das aas sarb mov xchg (bad) pop clc jmp push movsl xlat test ret sub idivl jo and jge fnsave ljmp xor fistp xor adc mov inc and aaa std dec sti sahf ret insb add shll dec pusha pop add sub adc jecxz fnstcw inc cli daa nop push and mov mov bound cli xchg int3 stos sbb lret out add or add imul pop adc mov push add and and push bnd dec stc mov decb aad lret orl pop pushf xchg aam pop dec push clc cmpsb mov add xchg lcall iret cmp ljmp (bad) mov dec adc mov push scas scas jne mov adc xchg cmc mov add in jmp std rorb into lock mov add es fildll add or mulb (bad) (bad) adc dec mov into mov iret mov fmuls or ljmp out loop xchg jne adc cli mov dec test mov hlt pop jmp adc mov int3 mov leave and test int in cmp cmp repnz inc add cmp jae ljmp ret idivb subl movsl and (bad) aad ret and and scas cltd lods lcall lahf int3 fistpll mov add pop jb imul xchg clc test push add pop ret lret fstl cmp ljmp xor out je stos in pop mov xchg xor call cmp shl or addb fsubrp (bad) (bad) ljmp mov int outsb and pop dec pop mov lcall mov lahf pop mov xchg mov or lcall cmp xor add mov adc cmp sbb lret mov fcomps lds dec ret push icebp jne dec iret lods cmp or inc adc mov adc repnz xor sub arpl mov sahf imul lea mov mov and dec mov add sub pop adc mov xor xor adc call lcall push and xchg (bad) stos and inc sub sub mov sti or sub jno (bad) shl sub mov (bad) repz ret push adc cmp inc sub dec mov insb sub lock imulb adc out xchg jl inc xchg cmp inc loope sub inc leave incl push aas (bad) incb lcall push lock pop insb lea (bad) pop mov test mov imul or je (bad) into out loop xchg mov lods loope loope dec push popa gs movsb dec lods jge shlb sub (bad) add cmp (bad) int3 popa scas add mov mull xchg lret lea jbe pop pop movsl cmp lds ja into mov jmp cmc pop mov dec movsb stos test lret pusha das and std mov and fsubrl cmp out jno sub cmpsl sahf ja pushl cli cld xor idiv adc mov sub xor inc xchg mov push loop jmp push mov std test mov imul push jl call pop pop dec cwtl and mov sahf and xor jbe test ret sti les stc pop (bad) test xorb pop leave sti push sbb shll (bad) or mov and mov mov mov out fcmovne dec cli je mov arpl adc out inc inc sub je mov in lret mov xchg (bad) mov push aam mov icebp xchg adc subl mov pop mov (bad) inc sub fnstsw cmpsl pop fstpl mov cmp mov adc sub or ret mov rclb xchg mov xor sub popl pop add mov test xor daa inc mov out cmc cmpsb xchg xor stos jnp pop outsb mov jns aam push fisttpll notl bound mov sahf push daa jne mov fs in or xchg mov jae xchg int scas and fcmovnu jno mov or xchg pop mov imul ljmp movsl insb dec push popf xlat mov xchg out mov sub mov (bad) pop push lcall xchg aad jbe push push or ds xor (bad) and and stos lods mov xor es into push pop cmpsb mov (bad) add scas out or adc das and dec xchg out addps dec adcl dec ja sub push mov leave lahf stc mov or cli jecxz fdivrl sub push adcl mov mov loopne jl add ret or out leave test scas stc shrb test inc daa jmp push push lock mov dec cmpsl pop and jo loope ds push stos cmpsl cmpsl mov pop stos add scas xor fimul xor jns pusha pusha adc xor dec jge sub mov or xor mov das loop xchg dec xchg inc les mov out pop loopne leave movsb adc dec mov mov rep (bad) sahf jb mov (bad) std add sbb sub out test and icebp lea mull test xor addr16 mov sti imul rorl icebp cmpsl cmp lret lret aam sub loope aam pop es pop cld and gs or icebp in or gs push push or push adc dec leave jmp daa outsb and mov adc ret mov das (bad) jbe or outsb jp push movsb mov jno dec push imul mov rcl (bad) loope cmpsl js xchg jne std mov fldl stc popf sti mov push push xor outsb fadd jmp push arpl mov inc popf imul lea inc shlb sub pop in (bad) pop enter dec ljmp clc dec xor push ret dec pop or jno inc add jg cmp fldenv pushl push out dec mov (bad) fistp sahf inc pop stos or fstp and or cmp call sti pushf mov push xor pop jge repnz out pop das mov insb pop jb pop divl ljmp jb or push leave (bad) sub lret and push xchg lds pop adc mov xor xor pop rorb adc and xor mov fistpll cmc (bad) test cltd add (bad) sub mov xor cli mov or div js cld hlt inc mov xchg cli pop in out push ljmp mov and jno outsl cs nop pop loop iret out jbe jecxz (bad) jns sub or sub cmp lods push ret call push xor adc scas popa stc (bad) outsb les sub mov cmpsl sbb gs rcrl dec test and je int3 or imul push shll icebp jmp xor mov imul pop shll addr16 subl inc ret cli mov leave add sub loopne pushf clc loopne adc jnp xchg (bad) xor out lock lahf xor push fnstsw aad pop lcall mov push lret or das out clc sub cs imul notb mov out pop pop dec mov add leave xchg jno imul data16 addr16 pop repz and sub sub mov fisttpll mov mov repz mov ja mov lret in xor sub (bad) xor (bad) adc push mov iret (bad) out pop repz into jne subb and test sub mov push hlt pop inc add fisttp inc pop or mov and xor sub inc test sarl and push pop adc cli loop xchg ljmp scas (bad) xlat (bad) fisub push fdivr xchg jbe push add data16 fdivs xchg rcrl je jbe dec cmpsb out lds mov mov shlb xor or fdivrl push jnp sub or lret loop dec cmp pusha inc shrl cmc into cmp lods mov leave mov lods pop mov sbb iret xor xor stos shrl pop jp sub sub mov cmpsb mov mov stos or push ja sub popf in pushf icebp mov iret add push xor (bad) mov mov push stc adc fisubl xlat stc setno add mov mov into nop lret (bad) jp dec mov jo mov movsb movsl ds sub andl shrb insl adc sbb xchg add icebp in cltd and movl xor sub sbbb sbb jge out pop in scas adc mov mov adc shrl and ds aas lahf adc mov mov inc and mov cltd jno xchg stos pushf or psrlw fwait xor jg mov cmc jns sahf aaa or fcoml mov idivb insl dec ja mov (bad) (bad) sub mov enter pop lret out ret push pushf xchg dec (bad) mov jg pushf dec adc cld cld movsb in out test cmp jp adc or sarw imul add cmc adc outsl leave lret or insb push fildll (bad) jbe and repz lcall cmp xchg sub and daa fstpl insl and mov sbb lock mov or push and loopne push cli (bad) ljmp mov push mov test shr nop xlat hlt scas (bad) dec add cs sub outsb sub divb push sbbb sub in lock (bad) sbb cs nop aad push push jmp mov mov sbb xlat cmp repnz xchg adc adc push sbb xchg or and xchg sbbb xchg mov mov sbb push inc in pop call outsl inc rorb lock stc in leave mov sub mov xlat sbb cmp cltd je fdivl mov and adc pushf aas sub cmp cli mov jmp call (bad) jne mov sbb mov pop sub ss enter push sub leave sbb push sub fwait xchg or fildl add aaa inc roll pop imul sarl test lret lahf insb test inc jecxz (bad) fcomi xlat adc mull sarb mov loope or jge push jns movsl push cmp jg push stos jecxz pop ljmp and lahf jbe les stos adc push cli jb sub int3 lods cli leave jle and jmp xor mov mov (bad) inc das add dec add cwtl inc add xchg (bad) bound (bad) jg (bad) out mov xchg jb dec mov call (bad) dec repz and jne lods pop clc mov pushf push mov mov repz xchg xchg sbb sub stos mov xor or mov popa pop jecxz adc fidiv in imul mov scas data16 push sbb cmpsb adc jmp lods sarb fisttpll hlt rclb cmp mov cmc popa rcll ret sarb pop leave mov mov popa bound test cmp push mov add lock add and sub xor push movsb scas mov or jg push in imul clc sar fs sub pop loope icebp cmp push iret xchg test xor xchg lock push jle push pop pushl loop popf gs cmp inc lds inc (bad) pop push clc and mov shr lret mov (bad) shrl add dec repz dec dec idiv aaa out pop push pop (bad) mov mov add aas sti lods clc mov mov dec daa fbstp loope sbb add inc push pushl lds dec scas mov mov lahf push mov xor mov orl fsubrs and imul es sbb pop fdivrp mov (bad) cmp incl pop inc pop (bad) push jecxz push mov sub inc clc add divl lods fisubr xor mov push fidivr xchg aam jb adc std test insb add mov inc call inc or in daa or outsb sbbl subl sub mov stos pop out sub cli into pop sub sub dec or testl arpl loopne divb inc add mov in add std mov pop pushl and int inc sar jg sbb inc je imul or xor pop aam fldt pushf out pop sub nop jle push (bad) xor dec xlat cmp ret mov stc out sbb mov les outsb aad cs leave bound adc pop or push pop mov inc xchg push mov les jne mov idiv lret sbb (bad) push loope out mov cmpb int3 mov cmp shll xchg fmull xor jle push mov imul lods or ret (bad) sub pop push (bad) into jae pop jne pop mov mov flds (bad) psrlq inc loop leave mov (bad) or lahf jmp loopne aaa lahf pushf jbe mov nop mov jns dec ret push dec hlt ljmp inc jmp imul lret lods shrb adc jmp push ljmp clc jno int3 call mov ret (bad) pop sti cmpsl nop (bad) xchg (bad) or adc mov call inc jmp mov dec or dec mov jge pop xor popf ja mov iret push mov xlat imulb jmp lret xor (bad) xor stos aam mov mov pop pop mul (bad) jl sbb repnz mov sti sub cwtl clc ret pop add leave lea mov xor mov and dec jg stc (bad) lret pop inc (bad) adc xor sub jle lret sbb dec xchg pusha out and cs adc and stc jge cli jmp pop sbb mov push xchg xor jp test out mov sub mov repnz sbb pop mov push cmp dec push cltd mov ss out add push test sub pop (bad) mov loop iret pop lret inc mov ret push mov mov pop (bad) adc outsb je (bad) pop cmpsl jg rorl icebp adcb jl imul imul xor scas movsb out mov nop imul (bad) movsl test in pop xchg pop pop (bad) pop and and mov sub pushf add pop sub xor stos jl add ret ds xor pop mov pop negb icebp mov les std stos or mov sub in dec xor cltd nop ds add dec lret or and xchg das add test fs call dec outsb fstps xor inc mov enter sub imull adc jmp mov daa and sub sub (bad) (bad) mov js das call cmp fcoml or and sub or sahf addl push push jp cmp push (bad) scas (bad) sub mov or shrl sbb lods test imul push pop mov lahf sub push pop lret call pop sbbb jge stos push or add out (bad) sub pop (bad) sub push pop mov pop cmp and repnz imul test (bad) dec (bad) pop fsubrl push dec (bad) test ret in sub in lods mov ret imul cli adc lret mov mov ja jle shr sarb inc push cmp mov lea sbb in loope ret push loop (bad) jne or mov outsb (bad) mov jg ljmp test jmp xorl lea movsl pop ja sahf sub ret xor pop sbb push mov jecxz lret and sub jnp adc loopne add lea push inc add jbe (bad) jno inc sub dec daa xlat mov aad sti sahf movd sbb xor mov dec mov je mov jge jge lock mov push test pop pop jmp in add mov mov stos inc test (bad) ds data16 sub xchg or xchg xor aam int3 jle loope out add push sub hlt pop lret sbb adc iret enter mov adc arpl scas pop xor int mov stc push out fstps int3 test popf rol push out fstl imul jl dec mov mov sub mov in js std (bad) pop (bad) push adc std mov xor or in cs insb push std mov jae mov aaa aad iret pop fnop pop in scas daa out pop push leave mov mov or bnd lock sub sub xchg dec jmp inc into add and or inc and inc add cmp cwtl std repnz push mov adc fidivr mov jne or inc xchg xchg imul mov stc int3 aaa mov push sub testb push add ficoml inc mov pushf cmp scas sub decb out ffreep popf and sbb mov es leave pop add shlb mov cmp cli and cld leave add add cld adc (bad) dec loop leave lock test mov inc mov sub sahf (bad) bound div dec clc bound or incl sbb cld mov fisttp add sahf outsl xchg mov push mov jg cmp cmp (bad) clc popf mov sbb sbb fs out cs cs add sbb in das mov loopne iret xchg call movsl mov xorl fbld sub xor and data16 dec add jnp sbb insl stos cwtl (bad) cmp xor test xor mov jg and hlt mov dec push pop out mov leave testb (bad) xor je adc jecxz (bad) jno inc mov incl xchg loope add into xor mov xchg mov mov (bad) cmpsl js (bad) (bad) das jmp ret or inc mov pop xlat gs xlat pop into sbbb iret (bad) rol in sbb loope xor mov xor pushf aad pusha dec mov dec stos xor adc inc cmpb sbb clc sub stc xchg fstl out mov fcmovb adc xchg jl das cwtl mulb imul ret dec xor scas mov cmpsl (bad) jbe pop pop popa adc ds add mov call push cs subl sub mov ret pop pop push mov cmp pop loop shr cmpsb push inc mov repz mov jbe sub xchg mov ret or scas xor call sub inc cs out mov cld adc ret je sub in fsubr xchg jl push shll cs ljmp icebp lds push adc cmp in outsb cld out xlat faddp mov ja or push push aam pop in movsb sbb xchg outsb xchg xlat pushf data16 mov lods pop ror in pushf adc cwtl push mov add lods stos mov push hlt lods push in and fwait mov cmp into push xchg push das vpaddsb add jmp push mov xchg push push pop dec imul sub adc negl xor inc push inc and cmp ljmp (bad) mov or jle leave jno mov sti bound inc xor xor cwtl adc xor and xchg repz ds out cmc movsl bound xchg mov sub xchg das add inc ss or and ss pop sarl fldenv cmp pop movsb stos push inc sub loop lcall cmpsb add add in mov addr16 mov push insb mov xlat pop ljmp sub jnp js xchg aam add lods leave loop fsubrl shl rclb add mov clc jbe sub jbe mov dec out scas sub insl (bad) in add mov sub clc outsb flds xor pop cld dec outsb sub mov es mov jg cwtl out aad or add les push mov lret fcom mov data16 xchg hlt jb,pn lret inc dec pop xlat int3 mov popf dec out push push lods fimul mov mov mov xchg mov xor ljmp int dec (bad) notb lret das out test lahf xchg jmp pusha xchg or and rcll mov pop (bad) test movsl sti add repnz sub jns mov insb int data16 (bad) mov neg sbb pop rclb mov fs lret lods mov leave cmp aad cmp jecxz sub pop pop xchg jmp sahf lret xchg dec push add aas pusha std loope inc imul repz gs mov cli cmp pop insb pop xchg jmp sub popa cmp add cmpsb mov lods stos mov aad movsb lret inc mov lcall cmp cmp out mov and mov jo mov push push cmp aaa lods scas mov std ror lret stc sti cmpsl imul pop icebp insb into movsl scas loop in in cmp lcall sbb and stos jmp xchg push push cmc in mov xchg push mov fisttp push call fiadd or dec mov sbb rcll jne mov ret mov fdivl mov push and or push lahf xlat mov sub aas sub (bad) mov xor add dec or test ja and les movsb pop or dec adcl adc dec daa out xchg mov sbb sub in out ret rcrb arpl dec leave inc out dec out mov xlat adc push cmpsb and movsl xlat cmp mov and sub ret xchg or pop mov pop sub (bad) sti jge jge hlt je xor out add xchg es stc push mov mov sub adc sarb or out repnz inc in dec ror xchg jnp aas or mov test sarl stc and xor sub mov jmp or and mov xor mov xchg mov (bad) in dec testb lods ja shrb add call into adc pop insb push dec sbb popf data16 and rclb mov fbld xchg push mov je loopne jg,pn or and notb cmp aas pushf jae or adc pop jb out mov leave (bad) cmp test jp mov fidiv cmp arpl (bad) or repnz xor call mov dec and shrb jo mov push jg rclb loopne push sub dec sub mov mulb jmp sub into fwait sbb not in imul add mov pop (bad) xor sub sbbl fs jae aad xor sbb ret cmp push lret (bad) (bad) ss enter repz add adc int3 imul cli xor mov call leave lret rcl mov notb dec (bad) loope ljmp enter inc (bad) mov cli jbe (bad) imull sbb add loop mov or xchg add stos xor and in push cmp mov in rolb xor adc jle leave sbb or push bound popf daa fidivr push push push enter dec sub add or (bad) pop xor imul repz (bad) imul ret and stc sti iret push leave push jne mov in cmp jmp sub pop xchg sub arpl enter cmpsb xor sub mov adc sub jns sub xor add jns shll leave jge xchg inc out (bad) mov push das sub adc add orb gs fistp arpl leave xor cld ret or xor jo dec out mov xchg mov aad or fs jbe mov xor loopne add and mov adc mov mov notl or ljmp das xor jle jmp rcl cli cwtl and ljmp lea bound or sbb fmuls cmp fistl sbb mov and sub mov add testl and (bad) jmp xor fsub xchg out dec cmc or and sub or sub mov pop mov pop in subl cmp stos cwtl mov pop push jbe xchg daa mov pop xchg jmp enter push jg out add xchg psllw xor iret push mov and popf les push leave cld or xor ffreep aas mov frstor ret mov (bad) or imulb decb fistpll cmpsb (bad) xor add sub negl pop (bad) stos mov jle loope inc mov pop push and xor jne mov pushf dec mov ljmp inc insb lret addl push fdivrp or push mov jle jecxz xor mov in stc xor fnstsw ss jp pop or fildl mov or cwtl push sub xchg fsubl fdivrs bswap inc pop mov repnz addl pop jns shrl pop pusha cwtl and ds xor push pop lret test fwait inc movsl push les push xlat and std je or repz fsubs out div daa iret cwtl jb or lods xchg ljmp xor and pop js mov fmuls sarb mov out les cltd nop sub dec push pop add mov dec cld ret shrb and sbb cmp std hlt stos mov pusha and cmp sbb adc pop outsb inc fwait cmc pop jmp pop cld jae test dec lods fiaddl add test (bad) imul jno movsl or in lods scas daa lcall pop imul mov fldt inc inc jmp leave vmread (bad) stos fnstcw movsl mov int rcll or (bad) ss or and lret mov fs arpl jbe cmp scas cld dec leave jns or jnp inc mov jmp sub ds sti dec add mov out sti fistp cmp jo xchg sti pop cmpsl push cmp xor std and cs gs jmp in daa cld or and jmp cmpsl cmpsb ret jmp je push ja maskmovq imull or dec out adc mov push adc fmul into xchg shrl mov and (bad) stc lds mov (bad) pushf nop dec cmp ret mov fisubrl mov out fwait cmpsl aas mov jecxz and add pop xchg xor fwait push sbb sub mov jle pop jl sub repnz loope push adc xor fdiv pop stc imul daa sar pop sub fnstcw fnop push imul gs aaa mov stc (bad) popf mov lret and lahf xor jle xchg pop mov dec test (bad) xor mov or insl mov ficomp repnz stc mov sbb idiv cmp add test mov adc pop loop (bad) scas mov test xchg repnz pop and mov dec mov lret pusha and dec mov lret idivl fs cli jmp movsl xor add push negb sub mov ja (bad) xlat cmpsl loopne xor fcomps into pop insb sub jl lret xor mov fs jecxz push shrb lock dec cmp mov pop or add and xchg notb imul lea dec sbb ds pop pop add int3 cmp (bad) mov nop sbb cli xchg (bad) or add add push mov (bad) ffree push sbb dec into dec inc and mov ficomp dec imul xor data16 push mov inc clc lcall out (bad) mov mov mov mov ret daa movsb lahf imul xor push sub cwtl rolb mov sub mov (bad) sbb fisubl sbb pop lret and mov mov fildl or (bad) into cmp (bad) call js mov sub mulb dec pop (bad) or adcl (bad) add jle jno cmp push cwtl or movsb bound mov jnp mov sub push imul jo icebp repnz dec or pop outsb lcall cwtl hlt mov inc test cmp inc jns inc mov aad push scas imul dec out sub ja scas lds (bad) movsl inc cmpsb dec push xor aam or add pop jns add push sub jg or stos mov or push int3 add (bad) xchg pop mov or imul cmpsb xor ss pop mov dec mov notb out xchg mov adc sti mov mov aam push jns mov rclb popf stc scas (bad) ljmp xchg push sti lret fsubrs xor mov scas sub xor dec and aas daa fildll sub movsb adc dec mov or or popa jmp jnp add daa idivl daa adc or lods sti cwtl and push jae pop bound data16 ret xor lods dec ljmp fiadd hlt sub push xchg imul xor or in mov dec mov push fs clc or xor pushf mov mov insb insl and mov adc cmp rcrl mov jmp vminss adc or cltd xchg mov mov mov cli (bad) or loope add mov loopne pop sub dec jp lcall bound jo fwait mov fs pop cmp out stos sub mov mov leave add cwtl movsb in aam mov jo add sbb pop sbb or pop leave mov cmp (bad) pop xchg pop (bad) xlat xlat sar dec mov cmc sti icebp daa loope (bad) outsl mov call mov ljmp push les sub clc dec dec mov xchg xchg pop mov xor int3 sub xchg xlat sbb cwtl (bad) repz ja xchg faddl push pop xor sbb test mov and xchg gs lret and (bad) dec sti lea std dec add sti or mov repz movsl std mov jns inc dec or es sub add mov les or xchg jo dec sub pop out das lods pusha movsb pop xchg std fcom cltd sbb leave int3 lret outsl out dec lods dec lret iret std into and sub mov cmp clc jle loop mov add rcl and push pop xor push or lds jno lret fucomip rcll or add push push inc popa daa add jge cmp sbb data16 (bad) or insl sbb cmp pop inc (bad) imulb xor xor sub aaa mov fdivl cltd cld idivb rclb sti jl dec jle fs out or sbb popa jno mov or lods jns (bad) push lds add mov dec lock scas out (bad) mov and mov fildll cwtl insb ret jne dec testb jecxz jne inc pop xor pushf (bad) lahf (bad) in pop adc lea out dec inc inc das mov addr16 pop scas ja dec ret fwait mov sub loopne mov pop stos je jae xor jnp mov inc scas imul xor and fcompl cld xor pop jmp sub iret or rcll (bad) idivb cltd movsb mov xor imul mov dec pop arpl rorb bound add pop jmp and sbb stc dec cld (bad) lods xchg movsl psubb js iret ds ret adc mov test jecxz mov cmp out bound iret roll or lods pop mov or push mov xchg sti ja mull (bad) push cwtl add pop mov scas or aad pusha cmpsl push inc jb mov (bad) mov pop pop mov xchg mov shll mov es outsb xor (bad) xor xchg sub hlt outsl in stos fldcw sub jmp in nop mov inc mov in mov pop sub inc (bad) das pop cltd cmp and sub mov sub repnz xchg xchg mov lcall adc aaa lock push je dec fidivl (bad) negl in ljmp lds stos repz add cmp sub mov (bad) mov and sub xor mov fs xor sarb bound xor cld pop call and pushf mov dec out xor or pop movsb xor out fs adc and add pop lock pop mov add jbe inc and cld sbb adc clc loope ret fstpt daa cs imul sti cmp push fisubr ret (bad) ss or pop xor cld js jmp fnstenv repz lahf inc daa or in das in das shll popa cmp sub push mov imul aam movsb (bad) jb jne or push or fadd xchg insb sbb or sub push mov mov out mov add outsl rcl sub aas jmp push (bad) js cmp loope rorb in leave lahf pop xchg jmp into dec (bad) lahf pop xor pop mov xor push fldenv push mov jne pop sub jne mov cmp ror fdivrs lock pop sub (bad) fmuls fisttp add mov push adc dec push xor cmp sub cli mov or std gs xor popf sti xchg daa jo xchg out adc cmpsb mov cmp ja test cmc push imul xchg cmc push cmp mov insb dec sub jne sub xor pop mov and xchg pop cmp leave (bad) dec dec repz pop lods xchg fimull mov push data16 xchg lret (bad) mov bound jg ret add faddl push cmpsb (bad) enter int3 pop cmp into push dec shrl (bad) xor sub mov push jnp repnz pop in leave xor mov lock and xor jecxz sub push push imul push dec fdivrs or sbb xchg jmp jmp es sub aad add xor jmp and push jne mov mov push mulb cli out fnsave dec adc xor (bad) icebp mov imul mov add ret bound adc mov cmp add mov jmp (bad) sub pushf mov insl imul mov fxch scas and mov scas les jo loope ds loope std pop ret (bad) std leave or cs sub jecxz or add jp test lahf pop sahf mov (bad) jle in cli repnz jle push jns mov cmp push ljmp pop call aam dec out mov repz repz mov adc pop lret or (bad) cld sarb mov fnstenv repz mov xor mov mov sub fist les push adc mov dec les repnz cmp (bad) push sub mov testl xor leave repnz mulb dec xor daa leave jns xor add out (bad) fs ret sbb pushf xchg dec shrl mov mov test jp sti xor call loope xor popf push sti popf (bad) xchg dec cli add xor add ret xor (bad) out fxch sub mov not adc lds sahf add or pop inc repnz jle lret inc mov leave loop push faddl fist rcrb jmp push popf fwait ss out fidivl out repz in sbb int3 dec sub pop pop mov addr16 cmp mov adc (bad) aas roll movsl (bad) jno das test dec idivb stc sbb pop aam mov push pop loop je push jg fldt add aam adc je mov pop enter rcll lret add xchg repnz loop mov cmc popa push fldt cmp and sub lret push cmp call sbb sub push loop notl (bad) push in cmp mov stc out out test movsb lds mov push push aad adc lea pusha cmp lahf lods lds movsl aad sub cs scas lcall mov mov imul es shr adc and into lcall inc loop (bad) jnp ret int3 sbb mov imul mov fiaddl lds outsb push xchg xor push mov (bad) pop mov out mov pop push into ljmp in xor push test xchg notb jle (bad) jb add mov add dec push cs shlb push repnz sub pop (bad) scas loop je push inc pop ja or add (bad) xor lods (bad) popf mov mov add dec daa push lds in adc idivb inc mov stos notb mov add xchg dec push sub jae mov fist pop fist inc dec sti arpl mul lret mov lea outsb clc dec es jp in inc das out inc inc jg mov shrl repz dec cli lret je out sub sub push sub stos fdivrl sahf pop dec ret (bad) mov lcall (bad) je (bad) sub mov or mov xchg not data16 sbb ret ficomp dec sbb dec sub xchg lods pop pop jmp sub clc decb (bad) icebp (bad) sub in xchg push add jle inc add xor inc sbb cmp movsl and popf jae daa jnp add popf outsl sub xor shrl xor aaa sbb xchg mov fistp xor mov xchg enter ja jno divl stc (bad) stos or mov xchg out pop jecxz dec cmc clc cs loopne xchg adc mov ret pop aaa mov lea mov mov pop (bad) jo or dec stos xlat or (bad) ljmp and idivl or (bad) sbb clc andl fisttp out add test std pop add aad andb fs mov je or imul xor add add aaa adc lods iret mov in scas jecxz xchg inc loope lret inc pop jb (bad) in fisttp and mov pop lcall pop pop or jmp (bad) add loop dec stc fcompl and rcrl and pop and xchg aaa ret mov jno add mov lret cmpsl ja cmp push repz sbb (bad) in repz call shlb test cs add or xchg pop adc lock dec and lahf data16 mov test dec dec xor add scas dec (bad) icebp or (bad) imul mull call ja scas adc test sub add mov xchg lcall sbb sub adc pop sbb add and mov das ljmp mov sub and pop or ljmp xchg inc adc scas fbld dec lods push cwtl xchg ret gs mov (bad) call pushf popa fildll sbb pop pop jb lea ja sub pop ret and je adc repnz lcall bound jg mov xor jmp jg lds sbb jle adc inc dec push fisubr jmp or insb mov ja inc daa rclb out ds mov bound lret xor inc stos xor movb sbb pop call daa iret xlat adc daa add cmp iret pop insl or push xor sti test push lret add cmp cmp dec xor testl jns enter mov sbb shl xor mov aad pushf or repnz jns cmpsb pop cltd jmp sarb wbinvd jge jbe push arpl iret or adc rcll push sti ja in and int ret jbe jb xchg aam loop data16 (bad) mov mov out dec or cmp int fimull xlat test (bad) adc mov mov stos jbe cld mov inc jne push lds or je,pt (bad) sub test loopne cli xchg xlat gs jb jmp sub and push scas mov xchg jns in (bad) sub and and mov pusha pop add dec pushf lea xchg mov ret jle imul cmp jmp xchg loope fidivr mov stc mov out jbe dec lahf jno leave jne jp popa lret ret shl inc sahf das push dec cmpsb stos test mov dec (bad) fbstp pushf or lret push jae pop pusha xor mov (bad) mov repz in test ljmp cli fs xor or pop mov ja pop sbb xchg bound stc jmp repnz jns dec mov fistp mov (bad) and mov aad test call shll sub (bad) stc sub xor inc adc enter (bad) mov mov dec mov sub icebp inc sbb clc les cmpl dec dec xchg iret and xchg add ficom ret xor pop cmp bnd ss mov push arpl mov lcall mov std and in andl or stos pop sub cs stos das in sbb cmp pop add cwtl add popf adc scas cltd fnstcw lods imul outsl lret pop push scas imul xchg jge lahf adc movsb pop push call pop xor aas inc clc test les call mov pop (bad) dec je les mov out cmpsb je sub divl xor adc hlt fistl enter (bad) mov pop xlat xor (bad) and js mov dec or rcll ret pop jae xchg sbb jb ljmp lock and fisubl add jmp mov cmpsb push daa (bad) rorl repnz adc or adc notb mov xlat inc cmc xchg out test shr cwtl push iret push mov mov or xlat loopne push mov das push gs jmp dec sub jmp jnp push aas mov shlb sub cmpsl jle adc stos xor or data16 dec cld stos daa out push push add xchg popf rcll out mov mov add data16 (bad) cli cli mov ficoml call inc sti dec mov and add bound jbe push jle lods stos push ljmp das decl test pop inc mov rorb (bad) mov loop lds shrb sub (bad) sahf aad imul add sbb loop xchg (bad) in sub mov mov shrl push das leave (bad) ja and and fucomip lock out xor (bad) mov das cld dec jmp (bad) jns jbe pop adc in (bad) cmc jae daa (bad) fcoms (bad) xor and add ret pop pop stos pop lcall sti nop ficoml mov into mov xor add mulb xor jne lret jae or out pop sub sti sub lds lret call (bad) cmc sub in popf jmp jmp iret fisttpll dec mov aam push ficomp jb jbe sub ret fdivrl push imulb lret fwait xchg in sbb test mov les scas fdivs pop lds jmp dec sbb or sub jg pop mov loope push sbb incl mov or (bad) outsb mov int loope into cmp mov jge cmp xchg mov rorb or dec in or sub mov das repnz adc imul jo loope popa jle mov lock lahf rorl mov push je pop mov daa xor inc ja jle sub mov adcl sub aam ret adc int3 arpl mov pop divl xchg dec in sbb mov loopne (bad) jo fidivr sbb sbb pop loop insb xchg mov or sub push add sub mov fadds ret add mov fs pop out lret mov push xor out js std out dec xchg rorl icebp test in ss enter push in push xor adc enter push ds sub sub clc idivl stc orl iret lret popf sub mov rcr (bad) mov or add mov xchg xlat add add sub clc or dec mov out fstpt pop mov insb scas mov aam dec jmp in push leave arpl push jl dec lds xchg (bad) loope jg ret rcrl outsl inc sarb mov lock sub pop (bad) jb (bad) inc add cmp adc (bad) push out lea dec cs push daa sbb push pushf fild scas (bad) and rcrl dec sahf pushf in mov jo or xchg mov loop jnp leave jle and add cmp fisub das mov mov out jl push pushw and ljmp loop mov mov andl mov inc ja cmp lock mov movsl add lds scas insb bound insb pop ret or (bad) xor mov int3 adc pop sbb lret pop dec pop arpl loopne,pn (bad) mov pop push clc and xor or jge ds div xchg notl pop or inc ret fistl pop sub mov mov and add sub test pusha dec mov add cmp or ds and or and imul xchg pushf into jg (bad) mov sub sub test leave fstpt cltd push aam loope adc push int (bad) mov aad xchg idivb dec cltd std sub xchg xor mov sti outsb in bound scas (bad) rclb fiadd faddl or mov xor movsb or lahf movsl (bad) pop push repz adc jbe sti xchg push mov ljmp sbb (bad) and shll and sub add leave xlat jno (bad) fldt pop ret xor mov and mov or ficom fs loop xchg (bad) add cmc fstps (bad) call sti mov pop xor in add xor jns add in into push nop dec test shrb adc (bad) (bad) or jecxz push and or idivb lret xchg cld int (bad) repz lret repz xor cli lahf negl add sti add cltd enter adc inc push mov jns mov mov das out imul add mov xor cli test inc lahf adc add adc and cmp cwtl negl dec mov add sub push idivb push (bad) jnp leave push outsb les xor (bad) jnp jb stos cmp jmp mov mov jae ja push mov pop mov fstpl ret aad cmp push xor enter and imul push push xchg or jl out mov sub jl ds add xchg push push and es dec ret into int iret lds test xchg ss push enter scas (bad) pop sub into add mov xchg pop pop dec mov bnd repz mov xchg push sarl data16 inc loop xchg gs ljmp ret mov add (bad) int3 test sub xchg lretw mull pop add int push pop inc adc xchg mov xchg adc mov xchg pop cmp mov cld insl pop push sub mov gs gs lret or push imul notl rorl pop lcall or sub inc pop jnp repz xchg out lret jle data16 shrl std or (bad) insl cli popa push das test sarb mov pop movsb inc cmpsl addr16 out popf outsb cmp lret sbb mov mov jg enter (bad) adc test sub test stos sub mov push ljmp xor xchg adc dec adc mov sub cli sarb xor fist negb dec arpl xor adc (bad) cmpsl dec imul push push pop pop sub stc leave sub mov mov pushfw sub popa and and mov xlat dec scas fsubrl push sub mov pusha nop sbb iret sub xchg add push jnp mov sub add adc and cli and adc es mov cs push and cs clc ds lret xchg inc aad sbb sbb or push lahf cmpsl pop ret fisubl xor or push mov mov clc es or stc inc les scas ret jne in pop std push fistl and imulb iret sbb push clc sbb sub cmp push jp jno mov or add lret dec shrb pop lods loop (bad) xor mov dec cmc mov mov ss pop cld pop add push cmp xchg mov jno test inc sar icebp mov clc and loope imul scas and arpl ljmp pushf mov sub sbb int sub jno das call mov mov pop lds mov (bad) repz in fnsave cmc xor scas lret fldl dec ljmp out jg lret decl sti scas or ficompl dec mov fnstcw xchg icebp das test cld fst in outsb ret push pop push (bad) (bad) in mov mov (bad) push mov or mov mov imul and not imul out mov or xchg imul addl and and scas jecxz pop mov xchg mov xor repnz adc jo and aas mov sub sub fcom out push sub xchg shr add and and or or aaa cwtl sbb test sarb lret lea xor repz dec jle (bad) in sub mov dec jbe ljmp dec pop xchg or jmp sub mov sbb icebp dec or addr16 iret sub push xor sarl or insl fs cmpsl xlat insb popa lahf push xchg fistpll jnp int3 out mov repz stos repz add aam push pop mov push inc in push adc pop sub xchg cmp mov xor jmp inc outsl sub (bad) push insb sub test fnstcw lods inc mov pop xchg mov fisubrl loop pop mov sub daa push (bad) jo dec jmp add bound leave shr inc stc addb lret mov repnz scas loopne ljmp dec inc adc mov and rol adc (bad) sbb or imulb mov repz push xor out cmp lods fcmovb mov mov inc and dec dec cld sti popa repz cmp adc insb lock jp and clc pop (bad) mov daa mov (bad) xor jnp add cmpsb dec cltd or jl lcall cmp sub xchg in and out xchg adc mov jns (bad) lret mov push lret mov jno mov sbb pop (bad) mov or jbe popa es les sub ret mov repz jecxz push ja inc inc dec or leave das xchg popa out adc inc test (bad) sbb fdivl cs das pop jmp or jle bound fcomps das icebp adcb sub mov xchg clc dec leave neg dec fcompl mov ljmp stc sbb out lret scas daa notb fnstcw incb out xchg jl in mov std lods leave ret push loope cmp (bad) xor repnz in popf cltd stos sarb mov or cld mov mov or movsl out sbb movsl jne subb mov mov jne xchg xchg ror cmp shr sub lea sbb lcall imul call jle loopne mulb cmp scas push pop mov test pushf mov mov inc out loop test idivb jle push mov into sti inc lahf cs pop xlat xchg mov pop lods in pop xchg lahf xchg jg and cmpsb sarl std lcall rcl cmc (bad) pop or idivb (bad) scas in imul xchg push or test faddp cmpsl add push push sar repz and add lret dec cmp ret rorl inc cmpsl pop jecxz pop mov xor jle and pushl rclb pusha pushf xchg cmp popf mov ja inc test sub scas out or mov sub add int xor loop inc inc lods sbb or and inc xor xor psrld xchg test cld loopne or jb cmp int mov xor mov push mov xor std mov sarl shrb adc mov cmp sub lret push imulb cli sub pop mov popf fdivr push sub inc xchg icebp out dec lods xor rorb insb icebp xchg jns xchg push push adc dec xchg mov dec jne cmp je lds in mov dec or enter or add mull jmp loopne sbb or std add fdivrs (bad) cmpsb scas inc dec xor (bad) (bad) push sub (bad) xchg lods or sahf push jne push dec dec repz push and and mov test repz out pop mov imul pop jmp mov hlt mov lods mov sti push jnp sbb push pushf imul daa mov mov xchg leave jge mov aam pop add lahf movsl popa jb mov int3 loopne push and adc (bad) fnstsw addr16 outsb in sbb shlb js nop popf mov mov sub jg xchg inc sub jne dec icebp das xorb sub (bad) mov cmc loop jge loopne sub imul xor sti rorl sub or stc and sti jp lret fsts add mov sub push pop pop arpl mov scas push xor gs mov and push stos dec jmp and les and ret into rorl (bad) je push fstp popa sub fucomip (bad) pusha lahf test repz lret mulb mov xor dec lret dec (bad) jns inc and sub mov lods adc call out or add adc sti mov psubusb jp das out gs pop out mov loop xchg mov (bad) faddl jge xor mov into push (bad) or xor pushf iret sbb jbe push popf negb nop fisubr xor int3 fdivs pop jmp sub and xchg movsl (bad) xor adc ljmp push mov push (bad) mov fisttp mov data16 jecxz sbb cmp add aad dec xchg fwait pop mov call push (bad) or (bad) push test mov cmp xlat (bad) cmc daa fistp into fild cmpsl (bad) dec sub icebp and sub ds icebp and aad sbb ds dec lods std xor mov inc pop fldt add mov mov fst out adc imul dec in xchg xlat adc cmpsb sti push pop xlat cmp xor les lret mov xor or xor xchg mov ljmp (bad) xor cld xchg shlb shll or lock movsl adc mov ja fimul sub aad sbb xchg pop cs mov je jnp mov rorl sub push sti es cmp or cli outsb test jle mov push xor pop add movsl pop mov push dec subb dec and cwtl sbb es add rcrb das ret add fwait mov or faddl jne jns add fldcw movsl fldl inc (bad) mov pushf (bad) or fucom xor divb xchg fildll mov jle xor xor pop sbb je add xchg stos inc fadd lahf pop insb jmp dec dec pop jecxz leave clc jl imul icebp pop into in add add ds scas mov pushf test sbb and mov in mov inc sub mov cld movsb and mov adc inc sub pop dec mov idivb rorb push add stc mov lcall shrl dec out mov dec jne lret mov out sub lret inc add cmp imul enter leave fistp rolb ds gs scas mov pop ret test mov sahf ds cmc lret dec mov sahf shlb xor dec push in xchg call stos push call xor enter shll pushf mov mov push shll stos or incb cmp jp jg icebp xor mov les lret (bad) call leave aam jmp loopne ljmp push inc out mov int3 mov xchg jl push jne mov and out (bad) repnz shrl (bad) cltd mov or data16 dec daa not rcr fldl xor sub ret stos lret mov ljmp lret add sbb and mov and mov sbb divl enter mov rolb mov imul lods or pushf inc (bad) out fstps outsl cld or sub jmp popa dec iret subb int lahf hlt mov cmc addr16 dec mov sub repz push xchg out xchg mov or lcall push jmp stos xor jne loop sub jmp aad mov (bad) adc xchg adc lods or (bad) lods cs jge (bad) cltd das add (bad) mov pop inc mov aad jb leave jns mov or (bad) adc mov das jmp xor mov sub fnstsw or fisttpl repnz push mov inc mov dec fldt stos dec mov call (bad) sub jmp or and fcomi cli dec ret push jbe jmp fs xor inc cmp push xchg xchg and inc pop leave das cld pusha mov jns scas lret fnstenv dec inc jle cmp xor dec cmp sub sub xor inc sub ds test xchg lahf jb mov sahf dec sub cltd mov (bad) lods push mov lea cmp (bad) lret and or rol sub mov divb mov out (bad) daa mov fdiv out rcrb fcomps mov stos incl sbb add outsb loop outsb sub jl mov aad cmp das push pop jmp cld icebp mov (bad) (bad) stos jb xchg add lret mov push call jecxz mov in jp sahf or inc mov ja inc push add xchg aam fs movsb repz and lahf push rcll inc roll bound (bad) inc movl cmp add mov sub les fsubr mov into xor lods jns and mov jbe or repnz out jb movl incb sbb pop push jle lret idivb push or and jl rolb xchg pop daa xor adc lret jmp ljmp mov add stc out das ljmp cwtl xor out mov lds dec sbb ficompl and (bad) inc stos xlat jle jge xchg inc and (bad) xchg adc xlat outsl notl das or cmp pop mov les mov scas cwtl (bad) repnz xor sub (bad) push pop repnz sub mov pop jge test pop pusha decb and ja shll adc cmpsl and pop cmpsb mov out stos xor les repnz pop xchg insl loopne dec push push mov ret lock outsl std adc ret add mov fcoml movsl push or xor (bad) fadds mov stc scas dec movsl bound pusha out jecxz repz (bad) scas mov dec scas cltd dec imul movsl xor dec jle enter shrl dec mov add adc in add das (bad) xor call cs cmp and loop ret xor nop mov fbld jge stos dec or and jae dec and cmpsl xor add fidiv fdivs jnp icebp mov imul cld loope mov out xor (bad) add mov mov imul and daa ret fmul pop je movsl xlat lds xchg mov sarb jl int3 cmpsb sar negb push cmp xchg xor loop adc (bad) mov xor iret or xchg test aas cmpsb or dec sub das mov repz lcall les stos lods jns ret les adc nop push ljmp pop fldcw repnz leave dec add test imul cwtl add lahf mov xor mov sub push mov test mov sub mov stos mov imul inc add sub popf fadds sub add (bad) scas adc (bad) data16 inc push push and xchg ret jno test cwtl test shr pop mov lret inc and add popf fildll jae push sbb pushf inc ret mov inc sahf push loop ret stc mov or pop inc jno jnp add movsl or fildl push test xchg xor pop xor sub sub cmp pusha add mov cwtl stc mov dec call ds xor push mov (bad) in and movsb leave push sub mov xor mov push pop inc and mov rol xor mov aaa dec mov inc nop sub lcall adc fdivl cmp or cld dec jge mov xchg ja jne mov ret or mov sub sbb and imul dec cwtl pop and and (bad) dec inc mov lret cwtl lcall (bad) aad imul or or stos bound idiv cmp mov fisttpll sub mov pop or jecxz repnz ljmp xchg mov mov inc or test test loope xor mov stos aaa mov (bad) ljmp mov insl fsubrs dec sub (bad) jmp movb jl ret push inc push mov les or std movsb sti adc sub aaa out pop xor das sbb cmpsl fisubr jbe lods std pushf ficoml cmc push adc (bad) or cmpb out add jmp sti adc or jmp fs out test out or dec daa xchg aam imul and sub pop adc dec add icebp sbb add sub jl sarb (bad) and loope dec and dec daa (bad) mov out mov shrl push loopne add sub sub out and or mov call (bad) sbb popf lret std in or out inc in das data16 (bad) je and jmp lock jno imul popf movb fxch (bad) icebp out call mov fldt add sub mov enter mov cmp push jbe add xchg jg or notb adc call test dec das mov add rclb test xor cld lock mov sub push dec bnd stos adc and mov inc xor ljmp test push and fistp (bad) dec and jle (bad) icebp test (bad) xor notl mov add clc adc mov xchg ljmp mov and into and jmp gs xor mov jno das cld movsb jb mov mov add jecxz mov repnz ret xchg cs fistl cmp jge int3 sar push add xor inc sbb cli scas cltd or int call js xor push cmp sub ret mov jb xchg lret repz lret pop cmp sub dec sub ror mov outsb cmp mov jle (bad) adc cli mov and xchg loop adc lret or adc push cmpsl fdivs (bad) xor fstpt cmp jp add mov xor xorl pushf lret in add mov flds lahf pusha jmp xlat fwait and inc hlt fsubs and mov cli out repz ljmp xor cmpl lret adc sbb ljmp sub arpl loop (bad) neg pop test test add icebp out daa adc pop shll pushf jmp xchg mov pop sub decb jmp icebp sub mov stc mov cmp ret jp mov ja xor ljmp sbb push sbb sti mov pop int3 fimul pushf add inc mov push outsb test lret cmpsl add pop scas insl cwtl sub rorb test cld add cli cmp jne mov mov xchg sar mov psraw mov ljmp mov and jo jmp inc xchg bound push cmp mov stos enter aas and ret lret mov push and das lcall xor mov xchg jmp mov mov xchg jns and dec ljmp fist or and rcrl fisttpll icebp sub je leave inc xor stc sbb out pop add jmp xor or sub movsb loope mov xchg mov xor push or pushl test cld dec mov pop mov xchg dec and scas lret pop ret mov or mov jae mov frstor and popa add xchg dec adc test mov push icebp or lcall or inc jmp or inc (bad) fsts mov js mov pop pop push adc adc xacquire insb jge popf push loopne pop in push mov adc (bad) aam dec (bad) fbstp pop stos mov divb daa (bad) jmp adc or or (bad) jno mov testl sub and and divb (bad) sbb lret sub stos and cltd dec xchg pop add and dec push cld fcom (bad) jne in cmp push jno push or es xchg movsl not (bad) push push sub jno arpl mov scas je fcompl mov sbb fwait leave aam and into pop ret dec dec sub sti andl cmpsl cltd arpl (bad) cmc cmp aas sub mov xlat bound cmp xchg (bad) rcrl xchg lret or sub pop ret in push loope,pt int3 sarl lea int3 inc dec clc mov mov sarb out popa jnp pop jae add imulb cmp lods sub mov mov lcall sub dec loope sub adc sub lods xlat pushf sbbl sub dec cld sbb decb pop push ret sbb ror rcr sbb pop repz pop cmp inc or mov jo (bad) mov call xchg dec loope icebp cmp fnstenv lds cld adc or or fadds rclb cmp shrb iret xchg adc fsqrt repnz iret data16 fmul mov imull dec xor ss sbb daa or aad dec outsb insb lahf ret (bad) aad mov or into insb add xchg in stos and sbbl fwait popf xor (bad) bound pop mov fwait jo insb jmp sub fisubr mov sub push mov pusha jne divb rcrl xor or cltd jb movsb repnz das lds mov movsb rol push cmp test test or xor ljmp ss dec sarl push (bad) mulb or orb int loope lods add scas in (bad) xchg add loopne xchg dec mov or icebp stos dec inc (bad) rorl xor and mov push (bad) xor ja iret (bad) xchg fdivl bound stc jne dec imul mov dec cli js pop mov and add mov test mov cmp add aad jae mov mov add inc jbe xor cmp pop adc jle scas mov pop out (bad) scas and sub jg or add jg push orl mov mov jg loope ljmp or ds mov xchg rorb aad push push pop mov out les test push in mov mov push jmp mov cmp pop cli std cmp xchg mov mov xor int inc xlat mov lods popa andl cmp push outsl in shll test lcall pop mov ret mov aad mov lcall add sbb aam xor stc int popa cld push push push loope mov jmp popf (bad) ds rorl mov mov sub out jl and jae outsb push imul dec sbb pop mov xchg addl sbb jmp (bad) cs pusha sub bound cmp and in into mov pushf movsb jecxz jle imul iret sub or sub sub das or dec call mov mov push insb adc call mov cli fstps cmpsb jo mov pusha outsb fdivs fcomip lock add mov clc mov or pop ja jle std insb cltd jo loope and xor iret push inc test out cs loop gs adc movsb mov cmp js rcrl mov pop ret repz xchg dec mov frstor (bad) ja pop xor aas mov fisubrl fnsave inc xor mov mov mov and push enter push xor push aaa aaa push add xor push mov mov xor test js test aad sub cltd mov lahf imul ret (bad) clc outsl add xor jmp cmc mov rorl das (bad) test decb jl lds shrl (bad) sarl xchg jecxz mov (bad) and or outsb fnop sarl push adc repz dec pop mov (bad) divl push sbb not pop out fldcw stc in mov fstps lret push sub sbb sub ja cli leave inc and je dec ja mov imul dec out out jb jg (bad) mov inc clc popf ret cli dec clc xor gs out push (bad) xchg mov call push cmpsl (bad) stos lods mov imulb adc nop pusha sub in sub mov rol push pop dec mov pop pslld mov dec add (bad) sub add xchg dec das jmp mov icebp andb lahf in dec mov ret xchg loop (bad) nop or lret das fs popf fstpt or pop lgdtl dec repz mov (bad) mov dec mov pop adc mov cmpsb movsl (bad) jne xor inc cmp dec adc les push in cmp cmc pop into lods cmp out dec ret push enter test outsw icebp push and dec or out mov jl sub sub outsb sti mov loopne imul mov aaa mov sbb cmp pop loop xchg pusha fsubrs mov sub movsl dec xor mov aas icebp fadds sbb lahf aam push and cli lret clc jg fist cmp in imulb push cwtl (bad) jmp dec iret pop mov or jbe dec lods daa jg xor or cmp sub je daa push in lods pop dec mov push pop pop test into mov jmp mov push (bad) lock sbb iret ret std fisubl push mov imull xchg inc xlat inc mov cmp xchg push add mov cmp (bad) js movsl ret xor xor pop cmp and imull inc mov cmpsb push pusha bswap mov cmp ss pop loope add pop mov mov xor popl xchg add lods scas js xchg std sahf jp pusha cmpsl hlt dec rolb and mov cltd sub push or sbb push imul or mov aam leave add mov sbb clc ja jmp ljmp out dec mov into dec xor mov fs cld stos ret ficomp xchg jb insb arpl dec loope (bad) push mov mov lret rorb hlt test scas mov sti mulb jp push ja xor and and leave jne xor int3 mov (bad) gs stos adc xor adc jle push xlat insb (bad) shrb dec (bad) adc fcmovnu mov bound mov inc sbb aaa dec push std loop xchg loopne sti cmpsb push dec leave mov mov lret int3 cmp sub add mov loop pop sub fcmovbe xor pop mov push mov ja and mov jmp jne pop sub lea mov xchg cmp mov xlat mov jmp fmuls out xor or in stos jb and jecxz push xchg jbe or mov mov test mov (bad) adc sbb mov or mov jg ljmp sub lock jmp jns xchg test (bad) xor mov pop or fcom mov mov xchg mov mov jg orl leave pop pop push dec push inc adc mov pop (bad) je out mov mov roll dec lret pop imul loope xor cmpsl divl jg adc xchg lret popf jae (bad) mov and aad add xchg cmpsb dec pop and sub xor add repz js lcall jle xor pop or jecxz (bad) jmp push xor mov mov data16 ljmp ja jnp gs jo pushf sub xchg out and adc test inc lret mov jge sbb xor leave mov cs sub rorb addl sub mov pop add iret sbb adc pushl xchg or shl jecxz mov sub (bad) add ss mov pop dec and outsl jmp pushf mov add lods cs out fsubl popa movsb scas in dec xchg in push mov rdmsr es mov push fist js pop mov pop loop les cmp mov nop xor xchg leave jmp ljmp cmpsb inc das jecxz ds mov push cmp mov lods or adc into scas mov dec arpl test call jo push nop dec (bad) ret pop jecxz pop (bad) test or cwtl cmc movb fcmovne das add or je iret cmp mov nop ret jne xchg cmpsl (bad) ljmp add fmull mov pop or xor dec or insb xlat (bad) dec (bad) and imulb cmp mov pop (bad) sarb xor fsqrt jo ret lret mov add scas mov inc push outsl fwait jne loope and (bad) out xchg (bad) xchg cli mov sub and mov cmp push xchg push pusha sbb popf popf push lods movhps scas xchg dec or imul clc daa fist pop mov push aas mov sub sub popf sub adc push ret nop add sbb outsb sub sub in ficomp pusha sub fild pop push or scas stc mov jnp stos or push add mov push lret push pop inc pop add push mov popf das stos jb (bad) outsw mov jmp jmp loop repnz lods sub (bad) xor (bad) push sbb add (bad) mov add pop in outsb mov jbe fsubr stos pop loop test pop test mov xor imul mov ljmp jge and pusha pop add decl stc into outsb or out jg pop and sub xor ja rol js jne mov das jae or cmp or stos bound out pop das into bound ficomp cmp repnz ja faddl adc lock out mov and or fcmovnu test outsl popa test sub cld pushf dec popf lahf cs repnz leave (bad) jge cmpsl and lret sub mov pop lock add mov mov inc fcom dec sub jge inc dec pop fdivs js push je dec cmp std dec fcom leave xor sub xor fimul out xchg fs push ss xlat adc sub mov xor jmp popa cwtl sbb xor inc or mov clc xchg icebp cli int cmp adc jne mov das icebp push mov bound daa fcmovb or ja or fimul (bad) fdivr cmpsl in mov inc and sub inc add inc mov cld gs inc mov push push push jmp mov adc sub or dec out mov sub popf rcrl cmp loop mov sub cwtl and int3 dec xor rorl lcall jbe mov cmpsb sti das into aam jb jnp adc sub loope icebp cmp xlat stos adc sbb push aas loopne (bad) dec sub mov sub xchg lret lret inc sub fiaddl adc or int icebp xlat aas pushf lahf or out cmp and push push add cli push push cli lret stos cmp and sub gs push mov repz or jmp (bad) ficoml out (bad) mov fiadd lret test inc imul mov cld lock fist mov imul adc cld jno jmp (bad) mov sub aam inc or sub or mov mulb out inc nop push sub push sub (bad) leave cmp cmp sub popa adc mov or or (bad) enter pop scas sub jmp mov scas cmp xor mov clc add mov and adc xor rorb or arpl shlb fstpt iret or js xor xchg out adc and jle ja jne mov jge pop sbb shrl sub je,pn and xor dec mov pop sub xor push popf int3 pop dec cmp pop jnp push mull in pop jp pop mull mov push push xor test add jecxz dec cmpsb mov inc cmpsb jp stc mov cmp mov xchg stc jmp movsb mov mov cmp dec jnp es in scas or notl mov shrb mov add add cmpsb cltd xchg sub mov pop dec (bad) mov sub inc xor ror jmp push lods aaa jb repz movsl fstpl jns jmp in and inc daa (bad) mov bound cli (bad) dec xchg add cmp rorl pop fdivs dec icebp mov insl cld push sub bound push test clc xchg lds fsubrs pop pop add jno or outsl cltd (bad) add xlat cld mov loop xchg add shlb add sub xor xchg jp mov sub xchg sub lods xchg mov repnz xchg test test mov pop xor les test mov dec dec out jmp and cmp jecxz aad repnz sahf lcall jle pushf xor dec fisubrl popa or xor aas sub stc sbb fimull call roll jmp cs adc popf mov mov xor arpl sub test mov xor cli out std in scas inc nop out mov fcomps dec (bad) mov das repz mov aam mov negb fs sti lahf imul mov (bad) xor lret push adc insb test mov out dec mov idivb fstpt fidiv cmp shll mov imul fnsave mov aas je in jecxz or clc ret (bad) (bad) mov hlt es push leave sub das ljmp scas pop das push movsb adc mov mov xor add and xsha1 cmpsb dec or (bad) in test das out adc pop mov sbb xchg lahf or scas mov mov push or cmp lds or jne sbb sbb out mov xchg call jmp adc scas inc or push dec rorb or (bad) dec inc sub xor adc xor pop in out fyl2xp1 adc mov mov mov ret inc jle inc push outsb jb mov dec imul mov xchg dec xlat cmpsb (bad) inc push or dec add loop mov jmp mov lret add repnz loop cmp fisubl loop jnp xchg ljmp sub arpl or dec mov mov cmp in and movsl xchg mov push icebp sub pop mov fistl xchg scas or push xor xchg sti cli lcall out sti jne mov pop (bad) call mov ja scas out jecxz xchg int3 jae pop sarb lds popf add mov or mov inc or fdivp xchg into push mov sub popa sub iret mov pop push jl and gs shr sub sbb mov push sbb and aad cmpsl mov mov loop push dec fs lds loopne out xchg ret xchg mov inc jg add out repnz xchg mov (bad) dec cmpsl lock add inc (bad) dec xorl movsl test lret add mov int3 data16 jno pop dec (bad) xor xchg cmp mov ja sbb or roll sub mov inc mov scas jne test movsl fs mov lret sub mov and clc sbb adc sarb pop inc movsl adc jbe sti sub push or pushl repnz jle cli mov sti add mov xchg push push lret in pusha shrb out insb ljmp and xchg je push (bad) aam push imul xor xor in stos cmp fbstp aam sub mov stc aad outsl xchg in dec iret mov les shrb or add rcrl mov ljmp test and pop xor lahf adc rcl mov adc enter push mov cmp inc and mov sti cwtl repz stc (bad) sub inc cmpsl jp mov lods ret in cmp loope add in lods push xor add jne cwtl and into xchg mov aad jge mov test add mov mov cli pushf lock shlb lods sub adcl mov pop (bad) (bad) mov (bad) mov lock bound notl pop and mov test shrb jle inc jmp movb and sub cwtl aas (bad) sub negb andl pop xor fiadd addr16 iret outsb arpl ljmp or je pop insb fldenv scas add mov imul fldl jb (bad) dec stos mov dec fstp fdivs push ss ret sarl push dec out pop push ljmp fwait ds push es sbb xor push sbbl xor cli test stos xor lds push xchg dec lds mov mov sarl dec jo or xor popf stc arpl dec dec mov jb out mov mov push icebp sbb and sbb aam pushw add dec mov pop icebp pop add js daa push xor lahf add add dec out sub pusha pop jmp out popa lret jo or push out mov xchg dec inc mov das fsubs jno insl call stos sub mov mov fildll insl fstpt (bad) mov add inc add or sti mov adc xchg and add mov mov leave or mov mov add out pop xor (bad) in xor pop sti add mov out sub mov mov jecxz xchg jo push cmpsl sarb mov dec fmull loop cmp sub or or addr16 jmp jns push add pop or outsb mov jns fwait subl decl add rclb pop sub icebp test (bad) daa clc inc mov inc imul imul mov leave iret jno dec mov xlat pop jl add fistp pop sbb cs leave inc es xor or push shrb sub stos cwtl insb (bad) das add jnp add das daa inc or add outsb xor cli gs arpl xchg cld (bad) push xor or (bad) rep mov mov scas xor and jns (bad) repnz fild cld lds xchg (bad) scas inc pushf aad xchg imul (bad) lods cmc jle xchg cmp fcomps pop and lret xor and mov lods pop pop lods and push xchg in or out sub inc jp push mov rcll dec sbb mov cli rep cld inc mov stc mov jnp sbb stos jbe ljmp fninit xchg push xor pop out add popa adc adc mov push fstl add adc dec mov scas mov mov dec (bad) xor sub cmc notb sbb lret pop aas scas xor out lods and pop call out push aam in mov cwtl jne sbb push popf push sbb dec outsb mov sbb sub icebp popf repz daa (bad) jmp mov xor incb movsl jbe (bad) out scas addr16 mov leave decl cmp mov imul into pop enter lds ret cs adc pushf faddl lret push jge sbb jl sar add dec repnz sarb push dec xlat int3 out leave xchg fstps mov xlat xchg in frstor inc jp inc sub jp in mov out stc adc nop leave idivl loopne out adc cmc push aaa mov sarb dec jmp xor imulb test mov cli and mov bound inc adc (bad) pop sub ret or dec inc jmpw add mov pop roll or cmpsl cwtl push sbb mov push icebp inc mov (bad) jmp iret mov push leave fistp fs dec or and jl push add es xor fidivl (bad) mov dec and ja sub mov xchg xor pushf pop mov xchg pop mov and sub iret pushf xor xchg dec mov mov xchg ja mov mul fsubrl loopne sbb jae add int3 xlat ljmp icebp adc lret sbb and pop decl xor shll jmp sub mov (bad) stos pushf adc cmc outsl gs mov ret pop dec push adc pop inc mov xchg out cmp js xor push cltd push xor adc scas mov cs and ret in outsb xchg sti fstpl pop pop sarb cmp call test xlat int3 xchg daa add in cltd jp popf lock dec inc mov mul lods lret mov dec xchg dec xchg sub push loopne jle cli fiadd and mov into mov dec mov insb inc dec push in pop test fldt in xchg loope or cwtl int lock push xor dec divl pop inc cld pop out dec dec mov lret mov sub cwtl sub mov lret push mov in xchg or loop scas pop pop lret mov push xchg into imul push add pop or mov mov out or icebp call ss mov ljmp rol inc jb sarb add fbstp js add mov xlat call inc cli lret aam int3 sbb mov mulb xor call test andb pushl (bad) icebp xor jge fwait mov sub or mov test dec out orb sub cs mov jl daa jne or clc test sub sub wbinvd fdivs loop lret ljmp jns gs je or cwtl sub in stos mov xchg mov mov jmp xlat pushw add stos cwtl movsl rcll fs mov ljmp adc add pusha int3 (bad) add mov dec jmp xchg add xor push xor ficompl and pop jp jle jmp js cltd sub scas sub push add fcoms mov mov adc xchg jmp or scas sub and pushl pop push dec ljmp jno add aas pop and popa push repnz sbb or movsl push xchg (bad) mov sbb jle xchg out dec mov xor out xchg icebp dec bound (bad) icebp sub mov mul push mov sbb jl pop or test and jnp mov xor mov push sbb cli movb xlat std inc popf dec (bad) add fucom pop add or fldcw adc stc das sub fidivl (bad) mov ljmp sbb and mov in loopne scas push jmp (bad) insb bound mov test xor sub cld dec lods test add xor sub adc ret or pop xchg sbb ds push and jl push pop insb mov add mov and repz cmp stc push loop sti scas jb pop shll out fcomps icebp test (bad) (bad) cs push jbe icebp loop orl sub in pop adc push and add xlat jnp pop or stos into add sub jns add sub sti fidiv xchg push mov sub or cmc inc ljmp test int lods cs les scas xor (bad) stos stc mov mov push popa sub xor jmp jb dec jmp sar lcall andl jne xor in lock ret lahf cld in mov jmp in stc shlb mov and bound pushf push int3 mov push push push sub mov and rcl daa call dec xor scas xchg dec mov mov or (bad) mull lods lret inc sub dec mov (bad) insb adc mov and add jno imul call add adc xchg mov pop add scas fs call xor pop call out ficomp mov or xchg adcb push pop mov imul popf xchg loop rol cmp in cmp out mov or repz (bad) xchg mov pop pop notl aaa fmul leave mov insl pop ret dec mov mov xor jmp lahf or addb cmp mov mov add dec stos mov dec out cltd ds sahf in aad xor xchg cmp (bad) and adc adc add aam scas cltd dec (bad) mov inc icebp sub lds je cli test gs sub cmp je test and cmp or test xchg pop jnp cld lahf loope ljmp icebp mov mov sub cmp mov mov push jmp fsts imul test mov adc shrb testb sub mov xchg imull out sub mov (bad) fstpt or xlat int3 mov jmp movl mov iret xlat mov cmp out int3 aad imul cmp stos mov sub hlt daa and ljmp fmull xor inc adc movsb es inc xchg (bad) mov jmp lods pushf in xchg repz push stos popf push stc imul xchg mov and add mov pop xor push or cmc leave fdivrp sti xchg sbb notb or mov jbe dec iret jecxz pop mov stc mov xchg mov xchg lcall cmp les sti jecxz dec ret jle (bad) stos sub sub pop cmpsl fs jmp dec inc fildl sub add pop mov xchg (bad) inc fistp faddl jno pop decb lret cmp pushf lahf jmp in int3 mov mov movsl adc sub loop mov icebp aam mov jle pop xlat jae cwtl jmp xor inc lods pop and les into fisttpl cmc mov and pop sbb dec add iret ficom jne shrl pop jg sbb add cmp daa (bad) ja and int3 add (bad) xor add pop (bad) and (bad) repnz pop dec mov xchg xor call pop add in fs (bad) push mov fbld add (bad) scas sbb dec xlat cmpsl mov outsb ret xor loop bound scas mov adc jg nop (bad) mov push cli and std or repz jne push add lock nop mov pop add (bad) stc imul xor call cmp int pop sub push movsb test enterw cmp mov lods outsl cmpsl in mov imul push in stos pop sub mov xchg fisubr xchg adc cmp mov outsb sub imul imul fidiv push mov push ss insb mov or cmp jmp stos lret lcall std ds xchg fiaddl or adc idivl clc cld cmpsb (bad) mov (bad) iret jmp lahf dec and add pop hlt gs daa repz (bad) bound sub jne jnp add dec xor xor jle xor nop sbb sub or (bad) push mov sahf sub dec jle data16 cs sub cmp mov cwtl int and xlat loope lret mov pop icebp mov mov jne or xor sub sbb xchg repz sahf jle enter pop xchg pop mov push push sarl xor add cmp push pop loop pop mulb in push jmp jmp pushf jge addr16 loope pop pop mov test add mov xchg and sub idiv movsb shll xchg in daa ret jb mov cltd cmp mov roll fstps negl stos mov mov das ret rcll pop out dec test add adc xchg (bad) (bad) and shll inc mov cmpsb or leave pop push popl addr16 daa inc sub mulb scas adc pop xor mov push clc jnp popf andl sti adc lods or stos bound fnstenv mov mov jecxz fild addr16 xchg (bad) scas ja clc push ret inc movsl in dec roll idiv pop adc push ret push cmp adc pop pop loop into and pop mov pop sub push mov jns ja sub or mov adc ljmp lahf dec roll pop out xchg push push fildll or add orl popf in movsl fild lods stc add js fist pusha adc mov imul mov pushf mov mov lea call xchg or (bad) mov lcall xor jae cmp jne mov sbb mov xchg nop dec cmp pop sbb and mov iret mov inc inc or std out xor fmull push add sbb mov push adc xor push (bad) mov test fsubrl mov cli je and jo sbb xchg rcll repz adc xchg push adc mov sub and jne pop sbb mov xchg mov sub xchg daa aad movl ds dec or xor jg shl ds and ds cmp inc sub push repnz mov mov push xchg stc xchg imull push xchg inc test cli xor mov (bad) mov mov mov jl clc or cmp lret add arpl sub xchg mov mov das jb mov pop (bad) das mov imull cmpsb xor inc andl lret lret loope ss jo aam call add sub negb sbb dec push in (bad) mov dec sub subb sti cltd lcall pop jbe and fistpll push leave clc or sti xchg adc gs rclb (bad) jne hlt and adc xor mov dec xchg inc mov jg pop adc into mov es fwait xor push in fcoms mov push push lock and ret or orb sbb lret shrb iret xchg pop xchg xchg fist int inc mov sub sub jbe xor test fldl jnp push mov call cs xchg int3 data16 dec out jnp or mov jbe jb sbb gs cmp mov fisub mov or das mov stos sub add cmp mov (bad) loop or add out jmp pop or mov jne add add addr16 push jno inc sub push jbe addr16 orl (bad) jb fidivr jl pushl leave xor and mov cmc loop pop pop in pop xchg and add scas mov fdivl xor xor jbe lret fcoml jecxz movsl xor jecxz adc mov ds (bad) mulb loop ja mov mov sub pop icebp icebp adc mull out arpl lret movsl in jmp std pop xlat stos pushf sar xchg pop bound aaa ja (bad) out cmp (bad) mov add das shl js sub (bad) ljmp rorb std into lret stos jnp or xorl push test push jnp sbb xchg (bad) adc daa data16 cmc mov cmpsb (bad) icebp int3 mov add xlat inc push pop inc movsl fisttpll mov mov stc add lea mull test cmpsl imul adc movsb xchg push mov negb fwait sahf add and bound imul sub stc pop jle jmp push ds xor popf movb inc lahf in mov or mov imul mov pushf xor mov lods bnd jle rorb cmp push jae push push pop (bad) jmp aaa mov imul test push jmp stos xchg push lods icebp hlt mov adc fcmovb dec arpl lahf inc cmp jo pop pop bound out xlat in fs stc out aaa rcll (bad) lods daa inc xchg mov inc icebp test push lret or mov out lds mov aad mov inc sub cmp into or xchg sbb dec shrb daa loop aad inc cmp mov cmp sub out cmp lret cli daa add mov (bad) lahf test lret mov repz mov jmp mov insb mov sub cli add jge mov inc and or sarb ljmp loopne lock pop dec lea in dec mov mov xor cmp fldcw outsb mov xchg test mov mov sub repz mov xlat sahf xor xor test xchg aaa (bad) cld (bad) loopne jp mov dec pop xor adc iret arpl mov sub jge outsl jl and jle push or xor xor leave movsb and mov frstor mov adc or cli mov ds (bad) nop in adc jmp (bad) xor xor pop (bad) out sub dec mov idivl sub pop sbb repnz test dec enter ficom jbe xor shr mov daa xchg insb xchg push pop pop das lret (bad) ds cli cli (bad) lock cmpsb xlat dec test daa ljmp ret jle aam xchg (bad) mov fiadd bound fild into popf gs and mov pop xchg mov (bad) pop dec ljmp scas sub xchg lcall lock daa (bad) sub adc imul cwtl dec push repnz shrb jne (bad) push mov int3 mov das call cli lret adc or into dec add loope and push sub or xor jne add ret mov and daa sbb enter mov inc sahf fldenv mov sti test cmpsl push jge ret dec adc or xor lods xor (bad) sbb or jg add (bad) xlat fildl cld andl cld lods jp out lahf lcall test in lahf and add or ja push fmull sub cli dec add pop out pop mov inc sbb dec adc fadd imul js dec leave stos mov dec mov test sub xor out stos xor sub ja xchg rcr mov cmpsl popf pop repnz frstor fcompl and fstpl (bad) popf jbe ret jge pop mov mov les inc sub and push add scas fcoms mulb es jo and sti ss xchg bswap pop and ja inc in repnz dec sub pushf adc mov gs mov pop or push fiadd xor add xchg or mov pop add mov jecxz sbb mov xchg and out lret into lret xchg jmp popf xor mov je dec stc sti je scas test into je (bad) mov dec cli popf dec cmp sbb pushl faddl imul (bad) out xor std mov sub mov xchg pop mov cmp sahf and repnz enter xor cmp das cltd cltd xor mov sarb xchg shrb sub cmc sub rol pop cli sub test pop cwtl jbe clc lret sub (bad) dec sbb push push in lods out adc stos repnz xlat stos lret test je aad int3 andl lcall xchg fcmovnu in pop dec out lret add jge call add rcrl adc mov or pop stos lret ret dec stos js pop mov aam test fsubs xor push and (bad) lret or sub in cmpsb xchg ds mov sbb ds sub or lods inc sub push pop mov gs inc sub sbb lret call fs cwtl mov push call mov mov push xor out mov xor mov cmp or (bad) mov mov push hlt out xor jmp push mov pop or out clc xchg div das jnp ret dec mov dec mov xor and sub pop cmpsl xlat shrb ret stos cmp sub xor mov loope jg and inc pop push adc imulb sub nop xchg int3 add repnz divl inc mov daa sbb clc testb mov rcll cmp mov jnp ja sbb cmp (bad) push pop leave cwtl outsb negb pop mov (bad) es add mov repz loopne out fcoms or cmp shl loope hlt rcll int3 arpl out pop mulb jecxz or mov add out push data16 inc or and ret insb fstpl and cmp pop loope sub ficoml push dec push popa xchg pop popa loop sbb xchg lods mov pushf dec rcrl pop jne mov jl ror pop loop pop loope dec nop pop cwtl sbb call push xor add popf mov pop dec adc mov (bad) add fsubl leave stos mov outsl outsl dec test hlt ret cmp jno ret or mov jmp mov and xor lock aam pop pop insb jmp aaa popa ljmp pop aam push xor jl mov push cmc mov fldt pop fbstp int3 nop lret xchg fimul add in aaa pop and pop icebp fisubrl adc dec mov stc rcrl (bad) xor mov insb mov mov in push sub push pop mov dec out pop les stc ljmp push pushf jne cmp sub cmc lret ljmp pop loopne lods daa jne (bad) popf pop cwtl cmpsl pop lock sbb scas int3 and push and add or (bad) dec imul (bad) mov adc test popa lret (bad) data16 lret (bad) mov (bad) mov fisubr or int3 sub dec (bad) pop sbbb and aam sbbb out mov daa xlat outsl jne or mov and mov fbstp push imul xchg or and mov jbe pusha icebp pop jno dec push out das ret pop cmp cs cld ret call push mov or ss outsb lods mov sahf xlat mov clc in fnstsw into int call mov pop in mov jmp pop sub inc out aad mov imul xchg mov pushf fwait pop or xchg sub (bad) sub cs pop lret subb repz insb mov scas xor adc cwtl (bad) sub sti adc scas lea sbb imul ret xchg movsl jp pop repz sub push repnz add sti arpl sub add leave (bad) out mov outsb cmp movsb pop xchg ret mov pop lcall sub mov hlt adc (bad) and ds ljmp jle loop ja or dec incb jmp xor int3 add pop add jnp push in or repnz cwtl aaa repz mov fisubr test ret mov dec (bad) hlt sub and repz pop push or xor mov out fldenv das mov jmp inc js jbe xchg inc sub cwtl aas or stos insb aad xchg sarl xchg pop inc xchg cmp push popf rcrl jo lahf push add shrl jle sub push xor inc and mov pop jo pushf aad jg adcl or pop mov fs fwait std xchg jae mov mov int3 lock cld (bad) dec lea or out fstpl xchg jl sub and xor cmc insb frstor cmpsl push xchg fistp stos lret fmuls and aaa out addr16 mov stos pop imul jmp sub xor sbb scas mov xchg repnz imul (bad) stos bound cwtl xchg and mov pop sub inc aad jl into and (bad) (bad) and call cltd lock sbb sbb push xor or push mov test mov xor pop mov and scas xor dec jbe ds (bad) enter jne xor sub lods sub jne add and (bad) sub inc jmp pop jmp ss movsb mov mov xor fpatan dec or xchg push mov push fs lock dec outsl add or cltd dec or (bad) inc or jns cmpsb std sbb push push jge and lahf pop push jecxz loopne pop repnz mov clc sub push insb jb jnp inc sbb xlat cmp cmc stc adc ret test mov add and imul and push lret lret or pop and es clc add fiadd adc xor sub cmp adc mov jg mov popa (bad) aas imul pop fwait daa rcl push mov mov fbstp inc fstpt push out sub mov gs mov mov lret (bad) push or sbb movsl call clc and leave jl pop jle pusha das or xchg pop push imul sub notl xor pop add imul cmc lods mov test lret sbb sub sbb dec mov sbb inc xchg sub sbb sbb mov call shlb mov sub lods pop out scas and idivl pop in add fiaddl fist ja icebp sub xchg (bad) scas pusha mov xchg rorb in or mov cmp adc mov mov push mov mov mov notl inc sub push out pop push jle enter (bad) push dec imul or mov mov stos mov jp ret or ror xchg fs and dec lret add sub out daa and in leave push out dec sub fcomps pop lds push jg xor sub jg int lret mov (bad) call mov outsb loope lock cwtl loop hlt fcomps leave cli ja leave dec jbe push ficoml mov movsl rcll xor data16 adc scas repnz in inc pushf jno pop push mov es pop das inc adc outsl out dec (bad) mov rcrb icebp mov xor xor inc or cmp mov sub out sti xor addl int3 jg mov fdivs pop test cmpsl aam lea aaa jno and fldl add sub cmp js mov push leave daa sbb shrl mov push push ret bound or sub pop lds inc lds (bad) mov lret (bad) lds mov mov cmp ret in cmpsl push gs fbstp or int3 lret sub jbe mov xchg push imul dec sub xor adc xor jbe ret mov xlat stos jno sub jp je cli xor pushf or rolb cli mov xchg ret add dec ss add movsl cmp pop inc mov js dec into out jne test dec cmpsb repnz pusha jno push lret in jns lcall mov pop repz das inc inc xchg nop jne jns lea pop cmp xor xchg add shl js repz sbb sbb inc lret imul cmc ret cli aam cli hlt mov add pop mov sub icebp lcall mov xchg jge mov movl ffree out push mov push mov or shrl mov insb mov incb nop push out inc add stos gs out lds mov fcoms mov in flds imul mov rcrb jmp clc mov lcall sbb imul pop adc (bad) scas popa ror inc push imul pop rol les add (bad) sub dec les lock add (bad) mov push jp push cmp jg lea mov out sub or or (bad) pop outsb cltd dec add sub jnp sub fnstcw iret loop,pn rorb scas pop scas add xor push icebp outsb inc xor mov xor jae inc or jmp es cmp adc into ljmp test xchg jo xchg adc xchg push (bad) pop mov es insl xchg out mov sub dec out cwtl xchg add sub aas and pop or loope sbb out popf mov imul jmp ret add xchg jbe leave pushl stos xchg icebp out ficoml xlat xchg pop xchg ret mov fnop push in mov std mov or bound outsl test imul pop cwtl and mov hlt push loop sti jge pushl or cli mov jb mov mov (bad) (bad) jg sbb insl xchg push cmp negb jecxz inc lock xchg aam negl pushf pop (bad) sbb ret jmp lea adc and (bad) repz sbb mov sti xlat gs jl popf xchg mov cmp mov pop cmp popl pop jge pop lods xchg cmp pusha cmpsl rolb or adc addr16 imul mov jle lret xchg jge (bad) pop add rcrl ljmp push mov inc jb xchg push notb mov (bad) nop roll aam rcll scas sub jo (bad) or test inc repz push (bad) popa incb cmp mov mov jae xchg inc pop dec repz pop mov push clc mov into ljmp ja insl pop out out test mov adc fmuls notb cs xlat mov sbb mov sub and push inc jnp lahf lock xchg fist sarl mov xor shrl (bad) lret or sarb or mov aam push mov rcr mov pushf sbb mov pop ljmp push jp in sub (bad) pushf arpl cmc ljmp push mov dec icebp aam jno cmp leave xor lods ljmp sub cmp ror push and or mov add movsb leave sarb repnz mov push outsb orl mov mov or xchg pop and je dec call fxch or xchg xor sbb call je xor fmull lret out imul ja hlt jg jne insb push das jne cli lea jmp xchg add imul pmaddwd mov add jmp pop scas sahf push ja add dec in stos jecxz leave idiv mov imul jp call sub (bad) arpl call addr16 repz cli sub mov xchg jge cmc xchg dec inc push jo pop push aaa dec sub out add or pop mov into sbb push (bad) cmp (bad) flds mov fnop inc pop mov xchg push dec neg adc inc pop add mov movsl lret and popf jne cli mov cltd (bad) mov neg stos pop or pop jns jmp mov push fmul hlt outsl inc mov je lds cltd mov mov inc xchg sub sub dec and lods icebp mov cmp lock std popa add sub sarb jnp xchg cli sub aad arpl xchg imul sub sub add and popa adc (bad) leave (bad) ss cmp ficomp movb and fnstenvs leave sub rorl pop sub add dec imul dec xchg pop scas test sub pop fmuls stos frstor pop clc sub iret lahf incb push jnp sub cmp (bad) fmuls sti (bad) gs popa pop xor stos sbb cmp jmp mov push cwtl das mov lock incl pop jbe push lret test pop adc add inc sarl call xor adc and int sub or pop mov or jge rcl push sbb mov icebp test lods loop bnd repz loopne jg lahf jne xor pop (bad) cmpsb push dec das sub xor cmpsl popa (bad) fs jmp sub cs popa cmp adc repnz test push ljmp cmp jno and or dec push mov or enter ffreep pop mov push andl cs adc cwtl adc xchg negl jl jns jp inc dec test out les jp sbb mov adc popf js dec leave fsubr ret mov xchg stc pushf dec outsb cmp and iret and push daa fist xchg push hlt out std in mov mov lock movl xchg or call jg sub mov jno popa clc and lret (bad) out cltd jbe imul dec sub dec jle clc testb in lods xchg mov or and sub sub add stc fcmovu mov fnstcw fabs cmp subl or xchg and cmp jg xor mov ss or pop movsl xor or and add arpl bound lret shrb mov aas loop nop (bad) pop in mov mov pop lods rol xchg stos loop xchg stos dec mov dec mov jns dec xor pop mov je gs repz add ret jb shl dec std push jne sub fwait xchg adc mov pop pop pop jmp adc push (bad) rcrb popf rcrb (bad) stos bound ljmp xchg adc cs mov mov out jnp sub sbb outsl sub push push cmpsb and lcall ret clc mov jmp push sub negl daa pop push jmp dec (bad) mov (bad) xor cltd fwait mov mov sahf dec sub and xchg ss mov stos pusha sarl xor and dec or lret jo (bad) lret std mov sub popf jo push sub cmp fbstp xor lods adc push lock popf jg outsb xchg popf adc jnp imull cli cmp xor push pushl loop mov xchg fnstenv test mov dec add enter shr fs popf fist ret je inc xor lock adc mov adc inc and mov xchg inc adc incb pop rolb hlt or sahf leave add pop mov lahf in fistp mov rol sahf mov pop push mov mov add dec sub ret sub movsb mov jnp bound sub inc gs add js inc jl or std int fist mov or dec in in out (bad) xor rolb sti xor cmp mov mov rcl xchg lret push sub aad repz mov mov das fild sti je leave cmc cltd pop jmp in mov lret or sar xor push fnsave mov lea popf dec leave sub xor mov ljmp ja pushf xchg (bad) jo jns pop xlat (bad) stc jmp cmp int3 lods pop mov push jo inc (bad) das fist leave pop lds or adcb mov push pop mov adc cs ja jne lock icebp les into mov repnz jge hlt add fisubr cmpsb adc jmp dec inc push loope jmp in out push in dec ljmp sbb pop rclb gs mov inc popa xor sub daa jne shrl aas xchg mov data16 mov mov or or or rclb mov cli mov dec lret scas je fstl cld sub and mov leave outsl jmp scas sub cmpsb fcompl movsl add scas cltd (bad) sbb iret pushf mov add add add cltd cwtl cs sbb idivl icebp xorb mov inc sub imull push notb fistp xor call lods jmp add mov sbb clc add aaa (bad) stos push (bad) cmp or mov and lret imul sub add or mov jnp movsl cltd mov and mov xor mov dec jae mov pop jmp sub ds fs or mov fs outsl leave fcmovnu shll add mov out mov inc push (bad) sub clc pop es out adc arpl gs mov sti cmc mov imul in pop pop out pop sub adc ljmp stc daa or jae jp mov std mov adc and xchg gs adc ja cmp adc sti mov jl repnz sub scas hlt lock xchg daa push test mov cmc loope idivb mov or sti sub ds cli popfw push jns jg jg dec ljmp jmp out adc int3 lahf push mov enter jle mov mov cmp sub cmp iret cmp push mov mov push stc cmpsb scas imul jecxz out pop repnz push and sbbl xchg loop xchg xchg push fcompl mov jne sbb mov mov inc sub sahf mov js mov sub cld test pop xor push test out out xor jge sub and fnstenv repnz rorl ss jo jne jle ss mov mov or je,pt xor and xor cmp xchg mov cmp roll sbb stc cld cltd lret mov rcr data16 imul cmp loope into cs mov and mov jle (bad) (bad) cltd hlt mov mov ret mov cltd sub sti mov mov (bad) out inc pop mov sbb jns dec jb mov in les scas cmpsb ljmp xchg pop sub pop movsb (bad) cli in std xchg mov jg bound cmpsl mov cmp mov jmp add adc mov repz pop out sub ret lret bound leave fcoml (bad) (bad) into xlat xor fcoml cmc sbb mov pop fldl2t sbb int3 pop lret test jmp mov outsl mov incl das cmc mov add sub xor hlt loop jns imul jmp sahf mov dec xlat pop (bad) clc (bad) mov push dec stos jge jle add stos sub insl addr16 mov imul repnz jno repz and (bad) cmp int3 inc cli popf push add movsl jmp sti enter scas repz mov push push push xor cltd fbstp or ds dec leave pop xchg inc popf push xor jmp mov push adc cltd dec xchg sub addb jbe icebp ja add les ret add movb (bad) push loope xor sub mov push jl dec in push mov jns leave jae subb mov push xchg cmp out push aaa jmp push push cld lret sub clc or mov mov pop sarb add movsl (bad) repz adc bound enter sarl sub push pop jmp arpl mov dec ret pmaxub xchg sub xor lret xchg pop or jbe lret push ds idivl das icebp mov mov mov cmp fnstsw into add into decb mov adc (bad) or xor add jb rorb or (bad) mov adc jle push dec mov and and xor mov sub add rcrb shrl aad inc add mov fsub mov popf or or mov icebp in pop xor loopne cmp (bad) sub and pop shrl mov rorl mov divl mov mov out stos fdivs xchg mov xchg (bad) and sti (bad) and jge mov adc sub test pushf icebp pop fsubrl sbb sarl stc jl or (bad) lret jae jae push (bad) dec into leave stc xchg bound lret jge ds out mov (bad) mov pop dec cwtl or mov mov ljmp sub lret ret pop loop aas ja imul movsb xchg test dec or add stos jne adc push bound (bad) and or push (bad) lods aas sub pushf rorl push xchg mov scas (bad) stc sub and decb fisttpl or out inc pop test mov mov insb and pop (bad) mov ljmp int3 in sub xor fistpl out das mov mov or sbb fucomi mov adc aaa dec jge xor ret lcall (bad) notb sub out sub gs (bad) ds xchg icebp push push adc mov (bad) sti sub and jg push fildl (bad) jp enter mov mov lods jmp mov popf hlt cmp rdtsc push (bad) das dec rorb cli mov inc out cmp cmp daa jae lds jmp mov outsl push into jmp ljmp loope lret ja (bad) inc dec loop sub pop dec mov pop loop sarb mov fs mov bound lcall adc cwtl in lds scas rol push push sub adc (bad) aad cld push movsl push insb adc scas (bad) fmul push pop repnz int3 sbb sub mov and sbb clc ss pop sbb rcrl fiaddl push pushf push test insb push aas dec pop or sbb pop jg (bad) test lods jns cld loope ret pusha xchg movsl pusha cli fs lods mov aad sbb cmp xchg push push inc push jmp inc js das out jne mov mov out dec cwtl cmpsb jecxz add push arpl mov jge push lods dec and bound sti lret hlt inc fldcw bound imul (bad) cmpsb out xchg fistp sbb push mov xor bound addb sub or jmp out and iret and or sub js pop rcr test lret mov out jno xchg idiv or shrl pop repz mov jbe mov sub dec mov jnp cs xor adc dec mov sti sub xor add aaa mov push adc icebp pop push pop inc sub or xchg sti rclb push jge jecxz push stc daa cmpsl jge sub loope or loope xor mov jmp cltd inc dec lahf add jg pop jp fcompl dec leave mov repz sbb adc mov fdecstp pop fldcw mov push aad fldl sbb mov pop xchg push std loop icebp mov bound or sub and jbe push mov jecxz pop sub xchg pop sub fisttpll sub std cltd ja sub jbe sbb cmpsb xchg mov pop leave sbb jno add sub mov (bad) mov addr16 add mov mov shrl je push pop xchg add leave lds das loope and js (bad) (bad) xchg in pop (bad) xor in aas mov inc test cmp adc sub or xchg jg and xor mov movsb pop rcrl sub lahf jbe pop push test repz dec call mov das shl popf (bad) cmpsl sub cmpsl ljmp dec rorl data16 cmp adc or mov mov or (bad) add mov sbb sti sub clc lahf mov inc sub push out (bad) (bad) aad fcoml mov fldl2t push and add test and mov mov push sbb scas vcvtsd2si inc jno and cmp mov sub push icebp push negl (bad) out stc jo add and or and lret or into push inc (bad) dec mov nop xlat sub mov inc xchg daa pop sbb add cmp ja xchg inc add pop out mov push dec dec push cmp scas fnstsw cmpsb outsb dec cwtl pop ret popf sti pushf adc std inc in leave test movsb mov push fimul ss sub in icebp shr aad loop or rorl (bad) (bad) jmp faddl pop add scas daa ja insb xor mov mov sub ds cmp inc fnop cmp sti and jge imul (bad) xor fsub jl loopne aam cmp cmpsl pop mov icebp sbb xchg insb jge enter ret leave push push cmpsb xchg inc lods fcompl sub adc std adc add and mov or mov jle and sub mov dec iret or pushf es sbb jge movb or lods movsl pushf das inc jmp loope into mov mov xor mov (bad) adc jmp xor pushf orl in icebp mov cmp sbb aam lds mov xor in (bad) mov add (bad) pop add mov pop push mov xor or lds mov lahf daa fmull jle imul rcrb jle lahf cmp ds shlb jo or (bad) or je or loopne jne pmulhw testb out mull or mov incb neg cltd movb hlt loopne pop jne scas mov adcl sub cmp ret xlat push mov mov xor inc mov mov and cmpsb add pop stc add ds or scas test in sbb shrb mov pop lds movsb xor cmpsb insl daa and push xor add (bad) mov mov rcrb cmp mov shrb dec sub or fisttpll adc add stos xchg xchg push and or test mov sbb mov lods xorl fisttpl (bad) ja out jecxz lods xchg movsb and mov adc mov sub pop adc dec mov push mov add jp lods inc mov or pushf das add ja in adc in mov add cmpsb nop or mov jg repz xor lods out jne lahf xchg gs test (bad) fcomps mov xchg or xchg pop pusha pop push xor jl mov mov ror mov stc sahf lret (bad) pop in sub insb stc sbb mov dec jns mov ljmp out (bad) dec icebp scas sub pop ja aad add out adc clc lea (bad) fstps jecxz scas or or out inc mov aad jno xchg bnd cwtl dec push lea stc into xor sbb popf into pop aam pop in lahf pop fistl cmp into je imul (bad) mull daa sbb je sub jmp or xchg out xchg lret push movsb mov lcall mov push addr16 movsl fidiv int3 mov fisttpll movsl mov pop in out inc dec pushf mov pop neg mov mov mov inc dec and or cmp pop fxch mov rcrl movsb inc and sub dec (bad) pop add mov mov push popa push sub out xor mov mov in mov sub sbb and pop sub sbb loopne cld sbb lods ss scas xor (bad) negl push lock mov pop xor out lcall or xchg shll dec out sti mov sub fcom js cli inc lahf adc shlb adc mov dec fsubs into push and div cs adc call sub and mov cli test in and stos jne (bad) mov nop mov and out test push xchg out popf bound jb xor xchg (bad) into cmc sbb push loop fucomip fsts push and lods scas aad pop jno or jns les cmp cmp imul sahf or sub aam int ljmp xor js je and lock popf fnstenv add test lret xor push mov (bad) or imul or out daa out inc sbb loope adc xchg lds or inc in lahf out inc (bad) mov mov add (bad) or mov push jno inc dec push inc lds xlat push aas sub xchg or mov xor inc push sub aaa sbb pop out cwtl popf cltd push jecxz divl mov jmp (bad) cmp movsl (bad) bound bnd testl add push pop pusha push shrl (bad) jle or (bad) es shr push pop push scas pop cmpsb repnz stos sahf sub adc jp pop data16 dec add frstor flds shrl movsl mov adc pop dec or mov jb ret or adc enter icebp loope cmp ds shll ret stos cmpsl out mov xchg adc enter icebp sti (bad) ds lret dec repz aam repz inc or (bad) add pop xchg repz mov pop lret pusha adc ds popa inc and jnp and jg adc (bad) jo dec idivb cmp (bad) loop xchg mov cltd fiadd lret sbb (bad) fnstenv decl inc (bad) xlat dec bound adcb in inc dec sub jne clc aad mov scas scas clc bnd inc es xor je scas (bad) mov adc mov mov sub jp leave jb mov aam jmp call pop int3 push out and lret sbb lret iret je pop pop jle ret imul inc xchg jl push cmp icebp lahf je imul daa (bad) movsl movsl ja ljmp cmp jmp and pop aad mov stos bound aam int sub push into jge xchg xchg jecxz popf mov scas xor idivb (bad) lds fldenv add mov in add mov xchg scas sub (bad) cltd adc sti sub fldcw xor lcall jle gs jg sahf xlat mov sbb scas mov jo xlat push or sbb mov and pop mov or and scas jecxz imul lret in cli out lahf pop xchg aaa xchg dec and (bad) mov daa and pop jae icebp jg lret cmpsb fs ljmpw adcl inc (bad) adc dec inc cmp pusha or add jl push out in movsb adc fadd lret (bad) ja andb mulb add sub pop fwait pushf cld popa xor sub cli mov mov rcr je push or notb pusha jmp enter lret pop sbb mov js lret paddsw xchg pop loope mov into lret ljmp mov mov dec xor mov jge push movsl data16 xchg push ja out xor stc inc inc aaa fidivl adc sub out dec jno frstor push outsb test xlat push cmp pop xlat std sahf leave leave push jns inc add mov or and std cmp sar das pushw jo (bad) divl sbb popa pusha add imul stos out dec cld shl aaa hlt inc aam clc adc xchg (bad) jbe pusha sub sub scas mov test (bad) lods dec ret sbb lods int3 test (bad) mov pop xor test out mov inc adcb sbb test out fstps (bad) aas cwtl jl mov push xor lea and ret sbb test push mov cmc mov inc add cli push mov adcb mov fisttp fistp dec jle notb cltd jge ficoml psubsb inc je push sub stos test add xchg fmull push xchg dec mov push pop lret xchg in (bad) pop mov add pushl pop aad inc ret mov sub lahf xchg sbb rcl dec (bad) mov (bad) bound fstpt lret sahf xchg (bad) mov push sarl xor (bad) jmp mov test loope xor mov cmp dec and mov out mull icebp xchg jns imul and js dec add cwtl mov mov add xor inc sbb stc es pop loope sub test pushl fwait out sti or and or sbb push mov xor xor or jo and and and and test xor lds fnstsw lods (bad) pop (bad) mov (bad) mov mov or and mov test mov and mov cmpsl and sub add xchg and sarl sub pop lret mov jle jb (bad) sbb add push jbe repnz add pop pop scas leave fs push cli mov sub sarl xlat mov shrb inc out aam adc inc push sbb dec xlat in xor stos mov push or add push mov sub jecxz lret jg inc mov xor jl jmp rol jbe jbe and or xor lcall rep adc xchg sub xchg iret mov mov dec (bad) xor pop pop in pop push jecxz (bad) jne (bad) loop and xchg or or data16 cwtl arpl mov mov loop js sub nop insl mov xor scas pushf push xor fcoms sub ljmp aas mov fbstp dec or pop (bad) mov add data16 push les inc inc and into push les dec and out add out pop and sub pushf imul mov addr16 or lea outsl loop aam dec jne mov dec mov lcall ja (bad) dec add or out inc adc push imul mov xchg xor fdivr into pop or adc pop loop mov mov int3 add (bad) cmpsb lret je sub test dec xor lods push xchg ljmp add sahf out lds sti mov cmp push ret in xor rorb in ja ret icebp adc jbe sub out push and (bad) jbe mov jge inc call xchg daa push xlat jno scas ret mov jecxz adc sbb inc mov lock test mov mov cmp fmulp stos lret pusha mov ret jns lret (bad) add lock pop pop mov add lahf cmpsb dec push (bad) xchg add push in jl test loop sahf leave xchg xlat mov and ljmp inc insb sub sub xor mov pop and inc test jl std add sub hlt clc cltd iret sub jmp adc fnstcw mov push add idiv repz lds in mov pop xchg scas and dec inc mov test (bad) push test imul (bad) push inc jns or dec mov push (bad) dec pop dec sub and dec mov inc cmp test or jmp adcl mov and xor loopne ficoml add out aam inc shll mov dec xor (bad) pop pop das xchg push mov ljmp mov push sub cli jb gs in adc mov lcall xchg jmp (bad) mov scas repnz cwtl mov fldt fidivl jmp xor (bad) pop pop dec es lds imull cmp mov add daa into xor insb stos xchg cltd aam or jle int or ljmp ret xor daa out lds out repz inc push xor je stos jecxz xchg jmp mov ret push rcll scas xor jge and repnz in bound xlat mov xchg mov out mov push and (bad) stc inc iret xchg test movsb scas xor sti test mov cmp xor add add add fwait negb mov jle push push imul rorl pop (bad) movsl lret (bad) jne and mov xor sub fidivr enter (bad) repz daa add inc mov test xchg or pop es or (bad) (bad) in outsb fdivrs sahf and and cmp add mov and dec sub pop sub mov sbb mov mov das sub pop add (bad) mov cmp lahf jb adc (bad) mov ja mov cmp xchg and sub xor add jg sub pusha out pop stc lea int jge mov fnstcw sti mov lock shrl push push insb sub movsb les lods (bad) fnstenv pusha or dec cli mov (bad) xchg je push fistpll inc add mov (bad) outsb cld gs icebp les pop insb mov mov daa push cs leave out inc jb clc es push xor adcb imul and jo mov pop sbb cli lcall xchg jp jmp dec adc add (bad) fsubs out fnstenv bound or fisubl (bad) aad int adc mov mov hlt push pop jg cwtl and pop into dec pop inc sbb jmp fbstp push clc inc push pop xor shrl (bad) int inc loop ffreep out sub and sub divl es clc pop push jns mov leave cli test lea and cli insl xor xor aaa sahf sub mov pop (bad) repz je adc jg sarl sub ret pusha push or aam add testl mov std pmaxsw mov adc adc loope add xlat idiv loopne (bad) mov xchg movsl mov daa dec jecxz pop sahf popa sbb (bad) jle loope ljmp (bad) ror test cmp sar (bad) mov mov mov or cmp aaa sub inc test enter mov or inc mov mov sbb xchg lock fistpll pop test mov (bad) aad aas das cmp dec pop (bad) cmp into or (bad) jge xchg adc mov sbb sub push aam lods fucomi xchg aas mov jecxz cmp cmpsl cmp cld add (bad) in mov lret orl jbe pop cli sub push cltd jb cmp ja mov faddl xor incb loope ret in mov flds sub inc cmpsl push dec ljmp sbb pop cmp pusha inc and sub das idivb insb ja mov mov mov mov fisttpl out daa call pop or push inc or sbbl mov pop cld mov pop stc jmp sub sub sub xor lea cmp enter cmp fwait (bad) dec cmp xchg in inc into push nop cli imul ja inc pop cld add out gs add out sbb (bad) (bad) mov jno cli ficom push rcrl out inc outsb sarl je loop or js cmp cmp and sub pop cmpsl jns sub mov stc adc imul inc out dec sti clc xchg test (bad) mov dec icebp data16 dec aaa roll in sbb (bad) mov or imul mov pop mov lret jge xchg (bad) mov loop call insb pop xor inc das mov jno sbb std push stos cmpsl std xchg xor xor xchg xchg ja fnstenv outsl pop lds jmp mov add aad scas in xchg and fbld pusha pandn xor movsb sub out mov dec jno aaa lds stc cmp inc idivl dec (bad) pop mov sbb xchg loopne add push push mov dec (bad) loop pop mov and or dec mov xor scas fs sbb mov add mov insb das leave call inc xor jmp movsb movsb cltd ja loope lods scas out pop in neg xchg nop sub rcrb lret aam and xchg out xchg decl and in mov loopne or jne mov into cwtl mov sbb add push cld mov sub pop adc push outsb mov jmp xor mull fidivrl iret xor pop insb dec cmc jecxz inc insl lret jle icebp sub sub popa pop outsb faddl sub dec mov mov sub ljmp bound push inc xchg mov movsb call (bad) mov les pop and sub aam mull stc xor xor aas xchg lock jge mov mov repnz lcall sub cmpsl shlb dec push pop imul dec mov fwait mov and adc xacquire push jp xchg and mov dec sti fnstcw cltd lock fs sarb fcomps adc cmp fsubrs push mov cltd xor pop mov cs aad pop mov add dec add push or cmpsl pop sub jge mov and les xchg dec clc jle lret pop adc lahf in das sub xchg xchg arpl pop stos imul xchg ror jns call xchg mov or add mov add int div sub pop pusha cmpsl inc cmpsb out das stos sub sub fdivrl fs cmp or and sti xor cltd shrb les int adc pop fucom rcr mov shr sahf ficoml mov loop mov xchg mov imul (bad) push jp (bad) in push mov mov icebp sub cs xchg xchg xchg imul xor sbb dec push sub lods sbb pop leave ljmp aas lods dec sub mov jge xor add sub ljmp cmp mov das fistp imul push jmp test dec jmp dec lret scas popa xchg add cmp xchg mov movsl (bad) mov pushf pop out test xor orb push push shll adc mov pushw add or cmp sbb gs fs mov lcall sarb xor repz mul and ret mov (bad) or test pop repz neg xchg fisttp fstpt outsl sub into mov dec cli cmp add mov xor lds inc push xor add jecxz jp or add pop adc (bad) aad out inc pop sbb cmp push orl sub dec stc movsb cld test shll leave scas fisttpll into jmp (bad) sub and idivb jl pop sub mov sub popf jne and repz sub imull mov adc or pop icebp cwtl push jmp add test dec test mov cmc inc lret or lock sub push pop cli (bad) ja jl pop jg mov ret sbb ret (bad) fcompl mov and sbbb aas lds and scas in cmp clc (bad) xor push leave fsubl fdivr (bad) into sbb inc push repz xor imulb xchg adc xchg ds out mov lock out stc push mov mov sti adc out mov xchg cld xchg xchg sti push mov cmp or mov orb pop inc (bad) adc add cmp sub leave and jl lret or idivl add imul dec mov ja sarl testb lret pop pop clc out lret push mov fninit xor xchg xchg dec or push sub cs mov xchg enter hlt pop popa xor mov fs add cli lret fadds in sbb or cli xor pop add add push dec dec and pop insl pop add sbb fimul stos push fisubrl movlps fldt add mov cmp scas dec jno and (bad) rol xor jge pusha mov lcall mov add mov cltd lods cmp xchg ret pop (bad) int3 rep and rol or out iret and or jmp aam mov push adc dec push test mov xchg mov sub das sub jge lahf pop push and int (bad) cli pop mulb lock add loop sub mov inc or lock sbb mov aas xchg sub scas fldcw push pushf cmove jecxz add xchg push pop xor mov loop add adc pop cmp sub push movsb ja (bad) rcll movsb aas bound int3 mov lcall dec ret ret jmp xor xchg loop test mull xchg mov xor popf pop out push jp and add adc out jno dec push mov out scas sub mov test sub loope leave mov push sahf cmp popf cltd push mov push sbb movsl in lods mov out shrl aad cmp rcr xchg fs nop ficomp mov (bad) lock cmpsb add mov inc (bad) ljmp cmp jne sbb hlt sub xchg ljmp mov shrl or push shl in lahf call stos sub dec sbb mov bound mov push jo mov add jp insl leave mov xor jnp movsl insb mov arpl sub test mov inc sub jae arpl movsb mov out cmp dec pop jns mov add dec jg sbb fdivs lret mov movsl sbb lret xchg lods jge mov sub jae fsubs mov insb dec xchg (bad) fistl (bad) jbe sub cmp fnop insb mov ja mov inc popa xor or xchg fimul jmp inc xchg and xchg sub push jle (bad) iret and int and inc pop push incb bound pop push and or mov mov pop jmp das aam pop outsb icebp dec repz and sti xor adc pop fwait aaa and test cli sub insb push jnp test movsb xor push xor add bound call pop les repz dec inc cli je adc sub mov jge test ljmp cmp xchg icebp test sti adc and xchg xor flds fstpt shlb xor adc add lcall jne iret fldenv ds fadd loop jle into sbb roll xor and pop jnp adc in push xchg mov mov dec xor mov ljmp orl dec stos and out mov xchg mov lahf and inc sub mov repnz dec sti dec push mov adc inc leave into pop or out dec repnz inc mov into out sub or fidivl or bound sub idivl add or sbb and inc dec sub cli rolb mov push jnp icebp dec lods fdivr arpl lret sub pop shr sbbl dec cmp mov jge aam or rorb gs cwtl pop div mov popf in sti jl mov jp or pop cmp xchg and sti fisttp call mov repnz and xchg jg pop sahf popf aam pop jne insb dec fstpl jno lcall pop pop lret push dec stos lret inc adc add push push xor scas cmp repz sbb inc std lret xor xor cmp das divl sub repnz mov sbb sub stos cltd movsb das mov int arpl (bad) pusha sub mov jl push (bad) rorl in je loop adc fadd mov scas lret dec dec cld aaa std cmp xchg adc aaa mov lods out xor rcrb and iret add and sub ljmp call ja out mov pusha mov pop xor in adc in sahf sub out and je shlb fidiv mov lret push repnz mov stos rorl jmp pusha aam mov pop or pop insb pop mov das xlat es mov push xor sub test jbe and cmp int sub je add sub jle leave pop adc adc call mov push inc dec testl adcb shrl lock dec jecxz sub jmp out scas jecxz adc (bad) jecxz pop add scas popa inc cmp inc mov and fsubs out fcmovnb inc push mov and stc pushf ret cltd dec arpl ret loop jge jbe adc inc dec stos jl add ret push jge popa jmp outsb jmp xlat xchg xor rcll imul or loop xchg imul mov pusha push (bad) pop or clc mov mov add rdtsc sti (bad) (bad) sub lds adc push add test movsl scas mov cs jnp jmp lds xor stos sub loop icebp and imul xor mov or add push mov mov out mov add mov je cmp or or mov call frstor mov xorb ljmp push and sbb cs sub add (bad) sarl pop cli mov sub inc pop dec in adc sub xor das add iret leave push mov mov jno inc movb fisubr lahf xchg sbb xor lea scas jne adc push pop ret ja push fxch mov or out sti dec push dec dec jge mov ret call test mov (bad) int3 sarb adc push pop out dec scas adc pop call or mov dec (bad) push (bad) jmp test push iret add jmp imul lret ds adc xor movsl dec and test push ljmp or neg aas push sub stc (bad) sub les shrb mul inc loop xchg jecxz inc dec xor outsl test movsb xor and xor mov fwait cmpsl test clc cmpsl mov or add hlt fdivs in leave (bad) sub ror xchg rolb dec cltd stos out mov in fs and daa pop insb xchg lahf ret mov andb inc int3 das and (bad) mov out lods stos cmpsl or scas push (bad) sub icebp and in jno pop fcmovne mov (bad) lea data16 dec (bad) cld aaa ficoml sbb xor das and std pushf lea add stos lods mov stos (bad) jbe (bad) (bad) (bad) popf fistpll sub iret mov fldl2t icebp andl subl lods in popf xlat push cmp or push inc mov adc ljmp dec insb (bad) push les stc lahf inc movzbl sub test xchg fsubl push movsb jo pop and bound pop sti (bad) and mov sub loopne aam or movsb cwtl out sub fsubs into pop push (bad) and repz and ret push loop mov sbb fnsave ret pop sbb mov and gs in or (bad) push data16 leave (bad) sub mov or pop jae mov (bad) in add mov jne pop and std cmpsb xchg int3 mov mov daa aam adc lea xchg das pop lods out mov fnsave inc icebp push xchg xchg clc (bad) inc lahf inc (bad) push pop cltd mov and adc xor xor mov adc jmp js (bad) mov and sub mov fidivr (bad) imul gs push mov lret inc hlt stc pop jno adc sub gs mov jecxz adc add sub (bad) mov std jae daa xchg sub mov push xchg enter and sbb aad imul mov cmp add je jo inc mov mov mov in cmp scas pop cwtl movsl add mov je (bad) dec and test loope xor xor cmp pushl xchg popl das xor or icebp sbbb gs cs xchg pop pop rcll and jge out inc xor mov sub pushf das stos sub loope jle push sub stc mov lret (bad) pop adc or jmp sti mov sub cmp xor and push in pop (bad) ss xor sub repnz xor xlat or mov fstpt out fsubrs clc cs jg lahf aam in test lds repnz lahf xchg out scas mov pop gs in mov fcoms lods pushf xchg lds imul add mov cmpsb daa and lock in mov sbb repnz mov xor sub sbb xor stos insl cmpsl (bad) movsb jecxz lret and push lret (bad) loop test fidivl cwtl (bad) rol cli mov or adc es hlt shrb pop mov adc jg rcr test shll jmp ds sbb jmp fst jbe das add cli lret inc sbb mov push dec pop mov mov adc mov and aaa xor stc inc push sub push jmp dec mov imul leave pop repz mov add nop sub mov mov jbe jmp shll fucom outsb int3 clc ljmp jle leave fs sub (bad) adcb xchg ret (bad) mov lock imulb mov push push xor sub insb lock mov adc add or ret lahf int3 popf mov dec nop or fidivrl cltd clc movsl or mov pop mov (bad) cs sub add ret inc mov out pop push ret in xor jmp fistpl aas lods sbb add aas flds cmpsb and inc dec lock (bad) mov push adc (bad) cmp cmp add xor mov addr16 and pop mulb int3 add sub dec testl dec je or cmpsb lret cld int ja dec subl pop mov mov lret push (bad) (bad) jns dec nop js dec insl mov cmp ret imul add jle pop ret test mov cmp dec lret testl mov xchg xchg out or or mov mov pop add daa or (bad) xchg add mov test sub push mov das int3 pushf inc or pop iret or ss je sbb movsl pop arpl fidiv leave out and les sub jmp cld mov mov and stos xor push int3 lds fs cld pop pop mov add and enter shrl icebp fs mov pushf cltd pop icebp or dec (bad) das xchg adc mov adc leave lds lret cmpsb insb in add and stc or push cmpsl dec out add mov adc cmp jne cs out scas sub add push adc cld cmp xchg lret sub jecxz push mov bound jno or mov mov (bad) or fidivr mov sarl cmp mov pop mov xchg repz cmpsl pusha fwait and popf insb mov xor mov sti xlat jbe repnz in cli xchg stos sub xor jecxz sahf out mov push xchg push xchg and xor outsl ret jno imul sub jnp xchg out mov sub lret ret stc repnz int3 les stos adc push insl push dec sti mov or mov and (bad) sti insl outsb (bad) or xchg dec cwtl scas jle pop imull (bad) pop mov and jo stos sub mov loop mov and sbb jns imul cmp jecxz pop movsl subl xlat mov fstps or pop add xlat cltd pushf dec ja dec mov inc pushf fisub and add jne mov sbb in sar ret (bad) and mov dec pop notl into stos popf sbb cmpsl xchg adc movsb movsb xor punpcklwd (bad) daa into push out scas sub dec cmp and test or aad add sub in scas sub cmp aad pop sub jge repz fstps and or add lret ficomp and adc clc push jnp,pt adc mov ret stos movsb mov ja dec xchg test clc and mov out xchg dec add xor jb iret mov (bad) loop,pn sarb or add (bad) mov xchg lds mov std ret imulb ljmp sub js cmc cmp movsb test popa sub sarl xor adc push xor push insl inc xor sub fxam jmp in xor test cld (bad) mov ret inc pop cli into fisub bound sub mov pop shrl mov or fcoms mov pop fildl mov rcll jg outsl push imul sti das movzbl daa jg inc and iret add ljmp aam jp sahf pop lock int3 jnp data16 pop out xor inc loope xor jmp loopne es and mov mov xchg xchg mov xchg sarl (bad) (bad) into mov bound cld dec out rcrl or cltd popa jl inc mov pop mov stos data16 and mov mov jns arpl mull mov dec jmp mov mov sbb clc push inc in iret std push bound decb sub cmpsl inc mov mov xor ret inc or lods bound scas adc mov mov xor dec cwtl pop or repz scas icebp es xor mov pop xor sub mov push repz rcrl test les push addl arpl in adc test adc jnp subl or (bad) in and repnz jno add mov cmp pop cwtl or js test add xchg (bad) or mov jne add rcrb push fimul (bad) fidivr je daa adc cli jmp cmp lret xchg jmp or and and enter push mov movsb xchg sti negb movsl mov sub cwtl test (bad) mov cmp dec shll je pop or dec xchg sbb or aad test xor and mov adc or push sub push add xchg pop mov outsl leave cmc cltd ror out es mov popa rorl nop sub inc add mov test mov push insb dec daa xor push cmp popa mov adc ret dec xchg stos sub xor es cli mov lcall jns orl xor decl sub dec mov pop cmp bound call mul popf std pushf pop dec inc jl adc jecxz stos frstor enter imul lods cmc xchg leave popf mov jle jge data16 jl add mov mov mov pushf movsl dec sar mov cmp add mov dec inc mov imul push outsb cs sub add aad out mov mov cli sub es and repz lods movsb jae scas fsub out subb mov out cwtl jbe popf pop xchg in sub sbb out mov xchg ret dec pop sub or dec xchg and cmpsl mov in movsl movsb test xor incl mov fmull (bad) sub add sub (bad) les fldt xor lret and mov fidivr cmp adc inc mov push push test cmp stos in mov mov (bad) cmp loopne in in das std or sbb shrb das xor xchg sahf div sti lcall xlat fsts dec fmull xchg test in clc xor add btr ja mov xchg push sbb xor mov loop hlt pop bound cmc jno cmpsl (bad) mov sub gs out sub je and andl pop cmpsl or frstor xchg mov mov mov or jae adc mov out cmc pop xlat mov mov movsl pop fisubl add pop add lods aad sbbl shrl inc ja sbb mov ds sub add xor stos mov call gs mov out inc jb (bad) out sub bound mov mov sti into cmpsl fbstp mov cmpsb mov pop pop out or jg movsl pop push ljmp roll lods out xchg out gs dec pop clc insb mov sbb mov dec pop adc mov sub sbb rol out push ds cwtl mov icebp cwtl scas and movsl lock xchg dec mov or and xchg aam pop ja popa and xchg repz mov mov and dec aas sub inc sub mov jp imul stos sub jmp push mov dec dec lea (bad) sub cli scas (bad) sbb iret fiadd push lret (bad) pop mov xorl shlb (bad) pusha or push std mov mov xor mov stos push aam (bad) inc xor and cltd sub lds (bad) ror frstor dec rcrb gs lds out dec fldcw sbb rclb xchg cwtl mov adc jmp in repnz fs or aam pop sbb cli sub adc mov pusha xor pop jmp xor xor out push xor xchg xchg lcall test lret push rcrb repnz mov push xor pop adc mov pop aam (bad) fldcw inc xchg lock pop xor in add and mov sub xor mov inc lahf push shrl repnz xor mov (bad) pop pop or scas xor dec enter push adc mov push pushf push dec pusha in icebp mov scas arpl daa dec jb xlat pop or out (bad) jmp bound xchg jg adc add clc or and std ret mov adc stos xchg in clc dec mov jle and mov sub addr16 pushf jmp lret push sub pop rorl jecxz es gs loope jmp sbb stos repnz in ret jbe call sub test push sub add xor mov lcall lahf xchg sarl (bad) jle ds loop pop add lret lret aad xor std dec hlt (bad) fnstcw cmpsb push js in lods sbb int3 movl cli std sar hlt pusha add jo popf mov lret sub (bad) jg push xchg aad sub inc push or imul xor lcall loop xchg pop enter mov cltd adc (bad) outsb mov fisubl dec and adc sti mov into sbb (bad) jmp xor xor loop ret adc inc or aaa mov clc fisub jo loope or adc jae jecxz or add adc stos sub cmp mov pop mov orl lret or push xchg push xchg add mov mov call mov sar push push mov sbb sarb jg daa shr out push mov sub or scas jb push pop pop jge push lcall pop add popf pop push lret inc pop jg scas jns imul cld xchg mov mov jge jmp (bad) xchg scas lret jg mov add add sub ret push pop mov test and sub push das mov hlt loopne sti dec mov lret add (bad) xchg mov and lcall mov push mov pop gs push mov or dec inc inc inc add push jle cmpsb push dec mov adc test inc arpl xor dec aas cld mov mov inc movsl loop sub xor and mov jl jmp dec mov add ret and (bad) and cmc in mov shrb inc setl divl mov and in ljmp test or sbb sub dec pop (bad) sub int outsb add pop movsl clc outsb lret (bad) mov (bad) jge mov mov dec enter mov ljmp test je cli mov stos mov divb fidivr nop lret pop (bad) bound sbb ja add bnd add mov sub mov mov xchg fadd xor into inc jl pop jg jge shlb addr16 mov xchg lea cs addr16 outsb jl cld sbb cmp into sub xchg faddl stos aad insb jmp cmpsb xchg decb sub mov xchg test std xlat lea (bad) cmp outsl stc dec sti sub add sub fldcw push into lret cmc sub cmc rcll imul push or loope xor cltd aad fisub sub shr fsubrs dec (bad) repz sub (bad) push mov loope insl out mov cltd cmp mov inc mov pop mov bound cs sbb stos mov lods mov ret fild or jns pop sub leave pop push push fisub sub fistp icebp stc cwtl mov nop xchg lods inc (bad) out into inc pop lods sbb int3 inc add daa (bad) je out test sti jecxz sub jne add sub or sbb sub inc (bad) stos out pop pop mov ret inc pop stos cwtl push out mov cmp jmp (bad) out popf jne test jns fisubr cs push imul insb in (bad) sub fbld dec cmc mov (bad) sbb (bad) xor push fwait insl adc sti xlat loop mov addr16 sub dec imul jle bound xor mov test dec (bad) cli or mov inc jae mov das fs cmpsb imul imul std js movsb cld cltd (bad) jecxz push movsb in lahf pop push das mov gs xor out and inc pop mov add jl and and push adc sub jge sub scas int imul inc daa pop cmc ljmp jg popa jg pop js jle xchg not stc pop mov incb pop testb inc pushf icebp or rorl ret (bad) cwtl es xor sbb sbb idivb xorl push lock xchg pop shll and and imul lret notb sub pop or scas aas jne pop sbb je push gs sub dec cld xchg push cwtl in xor in or adc leave mov xor (bad) xor rolb mov dec std jmp cmpsb iret pop or add sub ljmp xchg negb ja,pn inc fisub cld lock loope sub mov push adc pop dec cli aaa aaa adc (bad) jg stos cli leave shll xchg mov imul ret arpl daa push and leave fcos inc xor sub (bad) xor fmul aad mov push inc push stos jecxz xchg mov cmp hlt shrb dec lods dec mov in movsb mov push mov dec xor sub pop outsl xchg adc lret mov data16 dec push jno out ret mov out stos sub xchg daa push adc pushf push int in ds je dec sbb ret pop push cmp lret mov dec imul or sub push mov adc sub sub stc mov cmpsb cmpsl cmpsl cmp or or sub loope es push mov xlat pop jae es xchg inc dec les xor sub out popf fstl mov add add add sub or pop int3 test scas sub outsl mov mov sub les repz cmp das fidivl daa nop dec mov pushf imulb mov fdivrs sbb roll jl jmp or xchg mov call insb add cs in dec shrb lea jbe stos xchg jge ficoml jns push sbb shrl adc mul pop sub subb push inc inc ret inc jo jns popa pushf push and daa test and xor rolb jae sbb fnsave pusha inc test adc xor out es mov jge add and leave mov jno cmpsb repnz mov faddp and (bad) fbstp mov lret clc movsb cli lret mov push rorb mov xchg or xlat test sti (bad) bnd sti aad addr16 lahf mov push movsb es sahf leave (bad) rclb add arpl test cli sub pop push dec pop pop (bad) jo icebp push dec mov in xchg movsb lea stc into popa sub ja pop idivb mov dec repnz mov jne pop xchg pop inc iret add sub push enter jg push sub push adc mov loope sbb mov inc pop xchg pop mov insb mov push out jmp mov jg out aaa sub and or sub pushf pop mov sarb loop jl cmpsb and inc sub pop (bad) jmp and (bad) jle or mov cmp loop xchg stc mov push sbb push dec push add dec fsubrp bound cld jae push sbb jno movsb mov ret push mov and pusha repnz pop xchg inc adc fldcw mov sarl ficom stc pushl mov fsubrl jno into mov aad mov and scas lret sar pop push fimul (bad) ds adc adc lret ja dec mov cwtl out pop sti mov lods mov or jb xchg jecxz adc or stos ljmp jmp inc loop add out test push and mov outsb lods rcl js xor add fucomp adc bound push jae xchg xor xchg or enter stos dec cmc mov xchg mov cmp inc clc adc test lds icebp cmpsb sbb xor cmp leave sub fs ret es imulb notb xor mov dec daa ja push pop adc and ror fstpt scas jne mov mov push add (bad) loopne ljmp data16 pop xor ljmp pop out insb (bad) mov adc and inc (bad) stc das sub push out fidivl (bad) mull mov cmp xchg popf jno xchg pop lahf jae daa adc pop sub xchg pop adc mov nop mov imul outsl mov or insb pop daa testb outsb je mov into jne pop cwtl ficompl pop push stos dec imull insl xchg ret sub (bad) lock popf fnsave cmp lahf cmp repnz or mov adc inc roll leave scas cmpsb adc add cmp sbb dec fnsetpm(287 push inc mov jg xchg xchg lcall out lret add lods popf loope sbb subb jno push cld cli and outsb scas sbb lods das aad push sbb xchg add in ret (bad) xchg cld mulb scas fcoms xchg push pop imul xor mov mov shll xchg jmp loope ja scas jmp aad rcll adc out lahf call out pusha std (bad) sub mov fldenv mov xor ljmp lret push xchg ret int3 ret pop dec bound stc push das or and cmp push add cs fs lods gs xor mov xor sbb lods sbb fcoms pop push or rcr outsb cs or inc jecxz jl or mov mov call push imul and gs out je xchg rorb lea add mov stc jb in sbb sub mov inc mov jmp clc inc lea sbb jp lea and jle lret jo xchg cld negb aaa mov icebp fdivl pop (bad) push aaa sar mov (bad) mov cmp sub inc cmpsl inc lea aam sub or pop inc loope lods pop jb lret in fsubrl or mov lock adc sbb repz popf nop sub jmp in mov (bad) jo or popa add xchg int ljmp or insb cltd daa cmp mov scas xchg out aaa pop sub ja jmp and aad mov stc and pop in xchg pusha sub mov pop dec add add xor mov jne xchg xor push movsl imul jmp fcmove shll out mov test je pop dec fs jo mov shlb loop mov or push pop rcrb xlat loope das loopne into pop mov and out enter add scas sub shlb movsb push or mov aad xlat cmpsb sarl roll pop (bad) repnz loop xchg outsl dec in rcll repz ret cli mov scas cmp or aad jmp jg mov pop stc lret inc mov push mov (bad) inc push push and ljmp or mov sub stos gs xor dec jle push nop pop push das push lahf push mov out sub mov aam loop sarl scas out mov das dec cld rcll sub jle add jo inc xor mov mov popf xchg lcall pop repnz or sub xchg aam lds sti gs and add testb lods lds loop loopne sub mov (bad) xor xchg pop xchg xor ret cmp mov dec push mov loop pop (bad) loope sbb inc fxch rorl cmp mov sub jmp push mov push mov dec shlb rolb mov testb cmp arpl mov test xchg lods cmp mov sbb aam add and std and (bad) jnp lods pop mov xlat loop test lea add (bad) iret or outsb jecxz xchg mov add fs negl loop negl pusha xor lods dec cwtl adc mov loop (bad) mov ret pop out push lret gs (bad) mov sub rol sub sti rep dec out xor dec scas (bad) mov pop pushf pop ret call scas lea orb xor into xor lock dec out repnz xor test pop sub into xchg enter mov adcl pop jne,pn out or jo or pop cmp cld jge pop inc xor (bad) clc adc jb and fnsave or sub sbb lock sbb xor sbb loop lock add mov outsb loope jle in stc das mov adc mov jmp cmp dec push jg xor xor cmc sar in cmpsl push sbb pop loop mov jge imul das add repz jae xchg jecxz mov or (bad) aad xor testl ret adc out jl in out dec dec ja aad mov daa jecxz aam loop mov xor mov cmpsl jnp imul add rolb ret mov stc sbb mov jmp pop rcrb or nop xchg pop jecxz pushf sahf inc (bad) pop mov xchg or jmp sub add in mov add sub and mov into (bad) dec int3 adc and add in xchg imul add xchg fdivl cmpsl aad mov xchg mov jno out or pop int3 mov or xor popf and fsubrs sahf push bound mov mov lea xor lret mov or test lret (bad) push insb movsl xchg in enter xlat dec pop icebp pop jbe lock mov aas cmp scas fnstenv push aad lea mov mov sbb lods add jmp pop leave rcll ds adc pop dec lahf out nop mov out dec or test ja pushf fpatan dec xlat in test ret out das cmp mov jae mov sti cwtl (bad) pop fwait mov pop dec pop std jp or add jns push and (bad) lods lock pop cmp cmp dec ds dec jne stos fcomps call daa into fisubrl (bad) mov push mov dec or and and add stc int3 dec icebp or mov xor inc jg jno gs or ror (bad) adc out daa movsl sbb in negl sub outsb gs mov sarb (bad) xchg pop inc mov cmpsl and test or mov jne ret pop daa mov mov adc pop xchg jecxz lahf pop pop (bad) xlat mov scas int3 lock or jnp cmpsb jge mov and movsl lock mov sub pop mov add cmp adc dec scas fucomp cli push cmc cmp pusha xor sub out mov xchg lds mov mov adc jmp fwait dec mov repnz sub and mov call xchg loope addr16 (bad) lods lahf jle push pop adc and ljmp inc (bad) xor adc int jg xchg out das and hlt mov les sbb stc mov push into test cmp shll and bound cltd pop fdivrp test ljmp lret mov mov movsb xchg les mov jl (bad) push or pop mov and out fnsave decb dec add mov (bad) inc fidiv (bad) jnp loop data16 movsl dec sbb mov jge jne mov xor daa jne (bad) adc jb test sbb add adc sbb mov decb jg cmc pushf sarl add fiaddl sub cltd (bad) jnp cmc pop mov xor push inc imul inc sub sub stos push push pop repz aam sub xchg mov mov cmp ljmp pop sahf dec and mov or or pop lret jbe jb cwtl cmp insb push xchg das (bad) sub pushf xchg neg mulb or and push test and adc (bad) mov xchg lock in add ja test mov cli jmp xor int3 (bad) es loop andb movb and sub ja adc add xor sub scas imul in mov and loope jg and imulb std and in push (bad) mov pop int3 xor test xor pushf xor gs mov lock xchg mov xor push inc and push and add sahf mov xor sub js mov adc test out gs addr16 and ror je mov jmp mov adc pop stc mov fs out mov mov into divl lods rclb sub xlat cwtl fnstenv pop cmc or push (bad) xor and mov bound jmp mov sub cmpsb out cmp or test pop pop or std stc pop dec subb jmp inc cmc (bad) int3 pop push push push xor mov or idivl sbb push sub stos mov daa jmp sub dec mov ljmp fstpt mov or dec dec addr16 mov loop mov outsb add jae mov push push jne xor ror inc push xor stos in push iret add (bad) in cmc int3 popa dec mov push out and mov icebp sarb into push loope xor dec pop add xor lret xchg rcrl rcrb faddl dec (bad) jmp jae xor xchg jg lret jge (bad) ljmp popf mulb push jg mov sysret out xor sub and jecxz adc lret xchg ffreep xor jno sub lock and push shr popf ja cmpsl inc pop scas jb out pop stc ds mov jg cli std insl jae sbb xchg lods push add ja int3 xchg leave mov bound lret push cli mov repz les sti scas int jnp push (bad) or mov inc inc add in jmp out repz xor leave add or pop mov cmc dec int3 jns mov addr16 popf in cmp mov test out xchg outsb (bad) repz adc xor imul xchg mov arpl in mov adc pushf jb ss (bad) lods inc jnp popa es or mov pop leave gs mov pop hlt cmpb mov push dec lods dec movsl pop loope mov mov out (bad) cmc leave or cmp or dec push repnz push iret mov cmpl pop push push int3 mov movsb cli ficomp clc lods mov jmp push stos adc or lods cmpsl mov sub mulb (bad) xor add ds dec (bad) insl mov movsl mov xchg push add fldcw pop pop lds adc mov mov ret sbb iret pop out call dec mov ja stos popa push xor sub shrb adc or in cmp xlat xchg xchg xchg (bad) leave daa add xchg iret sahf movsl imul sub pop popf cmp mov out xor les mov aaa test js sti cmp andnps inc xchg (bad) dec pop stc (bad) pop sub mov clc sbb sti mov mov ds adc dec rcrl repz cwtl xchg (bad) out jne stos sub add out dec mov orb daa mov lds shlb sub xchg jne jg adc (bad) popf add lret or push movsl std outsb inc dec add ljmp lret jb loop (bad) mov daa (bad) insb ja ror xor data16 or xchg or outsl mov das ljmp (bad) xor shrb sahf mov les daa nop jne xchg or push push out sub pop icebp cmp cmp in call push loop popa xor sub mov int3 adc jp mov ja cltd ja out pop mov popf jne mov mov popf xlat mov push fistpl mov addr16 push adc pusha xchg push imul cmpsl pop xor pop icebp ljmp add lahf mov (bad) pop scas call xor test repz loopne pop ret or loope cs xchg movsb mov ljmp xor or in rcll lods pop pushf sarb and mov scas push and lahf ret mulb out xchg pop ret lds in sbb cli pop loope pop xchg aaa repnz and push bound xchg in dec imul pop mov push inc pop sub cwtl cmpsl popf pop sbb ror sub pushf and pop daa outsb outsl jns movsl test sbb pop int3 sub mov pushf xchg xchg xor sbb xchg or insl mov out out cs xor imul or push pop jns mov or (bad) (bad) lds sub dec pop xchg jns dec idivb mov or lea shll and add popf pop jns mov pop xchg adc in adc inc cmp or mov lds adc mov bound push inc sub add mov sti sub clc pop movsl sub push push loope sbb in sub push idivl add test push mov mull mov xchg into loop fldcw lret outsb mov fiaddl addr16 xor mov xchg mov push insl call sub cmp mov aam lds ljmp sbb sub iret push ficom dec push pop mov push mov loop mov push movsl (bad) adc mov movsl adc cltd in ffree rep scas aas and and cmp mov mov bound sbb clc add popf fistp mov mov jg mov and pop fimul jmp rcll addr16 or pop stos jo add and xchg mov fcoml dec aaa mov mov dec scas sub add out pushf js mov ja cmpsl cmp pop cmp popf mov out or jbe out scas push les mov push vmovd daa test and scas shrb mov ret push neg lds adc test das xor insb pop dec sti fwait das mov (bad) enter push pop pop mov jmp icebp sub mov mov sarl scas je pop lods cmpsb sti and xchg inc frstor enter xchg mov stos sub pop jne aaa out ss push push es shr sbb and push cmp push call mov fldpi sub lret aad leave and daa in daa pop sub jle jb les sub repnz xchg mov adc dec jo ljmp mov popf cmp pop mov pop pusha mov adc sub and sahf lods xchg aam xor lahf (bad) fbld adc rorl lods das leave mov out adc xor popf mov shlb push mov out add aam push pop push fdivrs mov mov and xor icebp and push aaa mov pusha dec out and xchg test mov gs lods inc pop sarb mov jp loop stc mov jg ljmp inc xor mov push cmp jle pop xor mov push sbb sbb icebp popf je pop pushl fcmovnu or sbb mov adc dec sub ret xor loop pop (bad) push dec mov negl arpl push xchg decl jge cltd mov repz and lods lock call pop pushf std jmp mov mov pop jle pop fs mov ljmp cwtl dec pop xor adc ret push push pop ret add pop pop xor xor (bad) in mov cmc adc daa sub jnp xchg sub idivl std mov mov inc mov nop jecxz xor mov jg test daa mov or in xchg add add aas and xlat or cmp mov adc mov inc cmp mov dec loopne fiadd bound pop jnp and sub fisttp or rcll push lock cmp lds lea cvtps2pd mov (bad) scas bound push hlt js add xor leave push ffreep mov stos (bad) dec pushf and fidivr xor mull fucomip insb sub clc and add cwtl xor adc adc mov insb jnp xchg add and inc popf pop pop pusha imul shll sub dec xchg idiv lret xchg gs inc loope (bad) jle ret mov cmp lock pop inc dec andb fiaddl mov inc popa test das popl push or clc into mov cld sub add mov call mov out mov sub (bad) bound or sahf mov mov fsts lods out and dec cmpsb icebp xchg aas sub scas mov adc mov ss fstps gs lret adc adc jg cmp jmp gs jne ljmp pop xchg sbb out and (bad) inc pop sti mov adc scas fdivrl lods leave popf jns sub in loopne xchg (bad) mov (bad) fldenv ljmp xor or mov xor or int3 fdivs add sub xor pop dec sub scas sub jno xchg ss lret mov cmp pop fcomps mov and and adc jmp jne inc xchg notl xor sub mov push fistp repz movsl in mov lret lock ret lahf rcll jmp cmp iret pop xchg push popf rcrl jno mov add popa mov sub mov mov inc xor repnz mov mov jmp pop pop (bad) mov ret jae cmpsl mov pop jl push loopne jmp fldenv and (bad) popf insb js push lret cld or inc pop rolb ja (bad) lret xor leave jno lret in andl rol push jbe pop mov test aad or and lcall inc mov xor rclb cmp das aaa (bad) leave fs xchg xlat mov jge jno xchg cs test stos mov mov jge rol sub jl outsl or push xor mov rcl cmpsb dec mov fcmovb packsswb xor and int3 inc xchg fsubr mov insb js push enter loop pop out add and or cli clc push or cmp into mov out shlb or inc mov cmpsw les hlt aas adc cmp push inc or pop xor and pop mov add adc push mov xchg (bad) je mov xor bound mov imul int3 in mov push pop jo loope pop and cltd xor test pop sti out xchg pushl fisub and pusha mov and mov ror inc sub (bad) rolb not ret (bad) dec fildll jl (bad) lea mov xor sub mov (bad) std pop fistp ds inc sub add xor out mov push mov cwtl add inc jo push das jmp jmp clc test call xchg inc popf js xchg aad es or jae adc stos xor das fiadd add flds fidivrl (bad) pop mov nop das xchg adc and mov test mov push jbe fidivr imull xchg mov sub xor dec pop out dec or movsb push mov inc pop mov sub jno inc adc dec jmp je inc and sahf inc icebp pushf mov lea test xchg push sub js push daa daa cs inc test sbb std mov xchg in and and ds mov pop in push xlat lods mov jecxz xchg dec popf aam (bad) (bad) ljmp dec mov lods push pop jmp (bad) call cmpsl ret sub ds stos jecxz xchg cwtl fcomps sbb imul in cmpsl xlat out dec loope add shrl (bad) push inc mov mov cmp test test stos negl push dec addl push into inc int dec enter scas xlat pushf mov (bad) dec sub adc xchg jbe leave mov sbb xor repz mov inc mov cmp cltd or xchg add lret or (bad) jnp pop cmp mov add push in fnsave push mov pop jno or dec int3 cmp mov adc icebp push popa inc xchg xlat daa xor cld adc or mov mov dec stos jb mov adc cli mov xchg dec jae sti call pop daa insl je shll jne lret or push jnp ret mov or cli pop insb into popf (bad) push cmpl pop xlat stos xor into cmc jns dec (bad) sub fistpl lods ret dec cmp mov repz std xchg rorl dec roll lock sub adc sub cmp jnp nop (bad) mov dec iret push adc mov xchg add lret loope jg (bad) cmp pop dec xchg int sub mov (bad) loop call push mov inc sub shlb mov pop out mov pop stos cmpsl jecxz icebp mov xchg xor in scas rcrl mov or or loop bound push xchg adc imul push in daa lcall movsl js xchg pop pop les mov (bad) fucom dec sub mov adc xor int3 clc xor cli jecxz xor test and xchg out pop xor clc add cmp lahf pop mov aam push mov pop and insb adc mov fcmovne cmpsl push jge call pop stc (bad) mov pop dec repz mov (bad) out pop xchg mov and inc lret xchg add dec int3 lret cli das mov push sbb fcoml ljmp jno dec sbb jae add push mov sti mov jmp stos lds sbb dec pusha xchg dec dec sub iret outsb pop arpl std insb lcall idiv jo decb sub pop mov cmp mov mov cmp daa fcomps push sub and xor mov and fwait das inc push das or pop jbe mov sub cmp inc (bad) dec push jne xchg jecxz test rolb mov mov aas mov cltd rol and insb in sub add movb or mov push rep inc mov mov or pop scas jl loope jecxz gs cmp sbb add push pop rorb push push into xor repz jns xchg aaa ljmp shrl cmc push into in (bad) bound inc add stc mov std adc roll mov mulb dec (bad) push fistp inc or test and pushf pop (bad) loope jo mov ret cli mull cmpsb les pushf pop jmp inc jecxz push sub out dec cmp xor (bad) and jl movsl out sbb loop mov lds push adc cld jge lds adc sbb mov shll pusha pop rolb push add fs or inc add movsb aaa ja xchg rcrb aas loop xchg mov mov mov or loope sbb or lods pop xchg bound aaa jmp cmp out and cmp sarl (bad) ds add sub icebp xor lcall lods push mov mov sub out dec fsub jge pop fs das subl negl mov sub xlat pop dec sub cwtl and fdivs lea addl cli cld cmp fmull and mov and sbb out push js or or sub or mov mov sub dec arpl (bad) mov xor iret inc adc mov jno push into fstps mov pop dec std jmp insb pusha jg pushf xchg inc notb leave push or or test adc lods pop leave negl rclb out gs pop push inc mov cwtl sub add test and iret mov and lods je jl pop idiv cmp add stos mov aas sub adc adc ja mov and sub sti sub outsl call scas or pop push fbld cmpsb jg es adc mov sahf mov fiadd roll mov push out icebp sbb subl add xchg pop mov jmp (bad) sub divl pop xchg je pop fnstenv jo mov lret mov fisubr ret mov xchg hlt shrb cmp jg pop out hlt stos sub out dec sub push out outsl jmp outsl mov sub ss ja enter sbb std sbb bound pop sub fistp mov movsb xchg hlt xchg pop popf cmc mov add or pusha lahf stc iret adc or xor cmpsl nop mov ljmp adc add push lret in ret cmp enter jmp jb xor out fnstenv repz mov inc push jp or rep cmp rcrb (bad) sub sub aam push mov pushf adc or dec jb scas sub das stos sub mov mov push mov add lock xchg xchg mov push or shr mov xor out add or ret jle cli cmc lds jne xlat dec mov cltd testl rclb jb push add leave xor idivb pusha jge mov test cmp lea pop sub add lock mov lret add and (bad) xor and mov and push inc fdivl lret repz dec aad xchg outsl in pop movsb stos jecxz push sub mov pushf add mov (bad) xchg mov add test cli lret ret dec out dec in sub mov (bad) decb ret push (bad) enter dec inc (bad) leave sarb jge and mov ja (bad) xor movsl loope and iret aas lret jno adcb out ret gs mov xor mov std mov cmc in je inc hlt sub xor imul (bad) cmc sub sub out adc jbe sub jmp push xchg out dec xor and aas cmpsb xchg push xchg pop clc lret push push mov push mov idivb pop or (bad) mov push (bad) pushf insl in rorl lods ret jbe xchg lds out mov pop jb xor pushf pop les data16 (bad) push add mov jne xor mov or push rorl mov mov jae (bad) fstpt in xchg lret inc xor fist dec fdivp clc (bad) pop jecxz push add add cmp out fldenv cli xlat in and out add jne mov mov mov and fsubrs inc sbb dec idivb cli nop jmp jl,pn mov mov xchg shll push sbb stc sub or xor and mov sub rcrl xchg inc pop mov xor adc sbb dec xchg jbe lea insl cmp test clc mov negb cmp dec out xor xorl jnp stos mov add ja inc pop sbb xor pop mov adc add ret pop and push popf data16 xor fcomps mov push shll jae std and jp fildll or xchg push mov vmovaps mov dec xchg out lret leave (bad) mov sub fs in fs lds lods sarl lods nop clc mov lret mov jne test les ds lods cs (bad) xchg xor mov outsb loope aaa xchg jecxz adc jnp mov jg int push mov mov lcall pop sub rorl cmp mov les fwait pop mov or add and das lret stc mov decb data16 mov mov cmp divl lret add icebp adc mov insb sbb icebp inc cmp test imull push mull fdivr push (bad) repnz push fcomp (bad) mov out imull add pop pop out sub aad adc cmp push inc lea lods pop (bad) pusha xchg xor dec leave in inc and mov (bad) cmp addb xchg sbb arpl leave fldl out cmp cmpsb xor adc add jg adc das jo adc aas subl notl jne lret fisttpll scas outsb stos loop xchg dec mov mov leave pop xchg push push cmpsl dec mov dec leave div xchg adc xor xchg sub fstpt out jnp xor jb sbb gs mov stos or out fldt sub jg js jle dec jne repz icebp xchg repnz dec scas xchg fxch sbb pop cmp mov cmpsl jg and minps and je add insl or xor xchg cli add pushl mov (bad) stos xor rclb pop mov or imul bound nop push mov arpl leave into jnp jp (bad) pop into jb out inc test xchg xchg call scas xchg sbb (bad) mov stc das lods (bad) (bad) iret stos sub xlat xchg pop mov push jp add and test call enter mov xchg fadds dec add faddl pop jo push xchg into dec mov cmp lret mov aam push jne and mov lret hlt pop repnz push add cmpsb fs and (bad) hlt iret popf xchg mov dec mov mov sub jp pop xor (bad) mov xchg test adc in pop ss mov mov or (bad) mov push inc cmp loope (bad) fsts repnz scas jbe or adc fsubs cli jb (bad) dec push lret arpl xor aaa add popf adc sbb je call daa stos or mov cli imul fs pop scas pop jno icebp ljmp mov cwtl pop movzbl stc add js inc sahf test mov push ret jp cmp fstps sahf stos repnz (bad) cld mov sarl adc push mov pop push pop mov push sbb pop mov mov push into jp inc shr enter test ret adcb negb xchg pop jne xor and das gs pop aam mov dec inc push jle push push or push adc stos cmp add xchg inc mov mov fsub icebp pop mov sub xor notl ja iret leave subl ret push out inc (bad) outsl xor (bad) fidivr loop adc xchg xchg test enter push dec cli push and inc das dec sub fistpll mov dec lock mov notb lret sub mov jo push mov dec and fsubl in test sub dec mov dec int3 arpl xchg insb ds bound jle push mov rolb jmp jbe lcall sub add sbb mov and lcall cli lret lods sub lea iret gs cwtl or mov mov test daa mov pop cmp pop cld in scas mov push xor sub push daa mov jle (bad) or push add and out pop mov sub push adc cmp sub push aas push cmp add mov jp into mov out sbb xor loop xchg xor push int3 daa je jb mov mov xchg xor cmp (bad) and lock sbb push sub mov cld ficoml xchg aaa ret dec add es inc jle mov les bound adc push and int3 cmpsb mov xor mov fs divl lahf pop or push adc sub subb cmpsl nop loop add sub repz pop andl sub mov add cmp xchg fnsave lahf adc xchg xchg lahf sbb imul out stc fisttpl cmp mov mov jle imul lcall mov fwait inc and xchg repz sub sub add insl loope inc cmpsl mov in cwtl out hlt leave and in cmp rorb sub lds add clc ljmp jbe pop je adc loop leave or (bad) and (bad) mov inc (bad) (bad) fnstcw xor mov and mov lcall lods ret jmp ret push cmp sbb cmp sub jb test cmp mov nop xor in add mov fisttpll nop add xor cvtpd2pi jg sub stos (bad) mov adc sbb ljmp je clc pop inc push dec icebp pop sbb (bad) out mov add and jmp out sti pushf xlat pop mov int3 jae lret and jno inc (bad) stos mov dec scas je out ret ffree inc mov jge cmp (bad) call mov icebp push jbe shrb fldenv dec push add mov pop scas jl addr16 das jge fisub push andb xor xor sub xor inc data16 dec (bad) fdivs xor add push push adc jmp cli loop xchg mov cli mov (bad) sub dec mov lock jns add je ficompl push sbb jl jo push xchg inc mov (bad) stos push insl loop pop in xchg and mov or pushl mov test xchg mov das add fdiv mov sidtl dec inc mov (bad) int inc pop mov cmc push push inc add jne popa push mulb ret and test (bad) mov cmp and jge movsl xchg lret pusha push mov mov cltd loop outsl call in or in mov (bad) pop pop sub scas lret jbe xor and mov cs push lret pop je (bad) xor mov adc dec icebp scas sub notb ret out cld sub lods jle dec (bad) scas xor (bad) mov inc dec orl insl rcrl (bad) lds shrl mov incl idivl pop mov or xchg xor negb and dec pushf (bad) sub das mov int loop idivb out daa xor (bad) pop xchg pop imul movsb test jmp xor ffree jge rcll mov xor dec ds jmp add movsb push ja add or scas jmp movb lret pop mov sbb xchg (bad) cmp pop jmp lret xchg and (bad) (bad) adc xor mov dec push pop hlt bound jg gs arpl (bad) sub and mov sbb je lret or adc and (bad) repnz gs fiaddl push mov adcb repz push das xor lcall fidivr jno lcall jne sub pop imul mov lret dec sub xchg imull ljmp ret mov xchg (bad) fstps test mov incb repz pop (bad) sbb aas or ret jle test imul lret jns das fsubrs pop (bad) and push fcom push scas popf pusha js xchg mov jmp fsubp push add xchg xlat adc lock into popf stc aad add mov pushf or xor mov mov jbe stos xor xorb imul (bad) jnp mov (bad) (bad) xchg fwait lock inc jne lods loop mulb lahf ret popf push arpl add dec mov mov movsl cld push ret in mov decb pusha (bad) and sub scas (bad) fild in cmpsl adc pop out js dec (bad) mov cmp into stos int imul outsl fs mov add mov decl (bad) mov mov dec push push adc mov repnz sub sub scas push mov jns xchg inc mov mov cmp pop test sub lcall ss xor (bad) mov int3 mov jge std cli cli mov xchg into neg push dec (bad) jmp imulb loopne mov sarl hlt mov ljmp jg xor add mov push xor imul push jnp sahf out cs aad pop pop (bad) mov and stos pop inc (bad) std out and mov or ja dec xlat negb or ja dec inc mov fucomip sub scas mov rcr lret fbld mov pushl mov pop or std cmp jle lods test rorl jb mov sub adc rcrb ds cmpsl movsl mov jl dec iret mov pop movl iret ficoml cmp push fisttp rcrl ljmp or cld or ficoml add ljmp loop push mov pop cltd fdivr jnp in sti fs cltd adc neg pop mov push adc out jbe push negb and cmp jmp xor add and ljmp or pusha push pushf add jle add clc pop push mov pop push or aaa mov shlb gs cs mov les inc pop xlat jno (bad) sub mov jle imul int3 lock xchg mov sub clc dec repz xor imul xchg mov push test bound inc out mov and mov jge aam jns dec out and (bad) xor or cli sub in dec mov xlat push mov xor mov (bad) call inc jmp add or cltd int3 cli aad (bad) dec out mov and pop or je (bad) adc idivl push lcall clc or or icebp fdivrl mov push jb cltd mov pusha incb cs icebp add and out add jle pop jl bound mov cmp (bad) loopne push shrl mov nop and and dec pop mov decl xchg aaa out int3 inc add xchg iret std adc out mov jne test mov cmp sub jae or mov lea xor insl lret xlat add xor mov das mov jne pop xchg (bad) jne pop jl jp in movsb xchg add mov sbb pop into leave test daa negl fdivr mov lds pop out xchg xchg scas arpl adc mov mov test into mov leave idivb and sub into cmc ret pop (bad) jmp daa fsubrl mov sub imulb xlat push push push dec mov xchg mov pop mov mov push mov add mov stos ret jno scas cld ficompl cmp jmp (bad) cmp inc push lea push sub or mov or add repz mov add xor xchg (bad) sbb rorb mov push inc into sbb out or mov out ret mov xchg xor fs jne sbb clc jge mov in inc xor (bad) iret and (bad) je push inc sub or (bad) mov adc add call mov sub rolb ja loop (bad) mov pop or gs or or add dec and xchg in jp repz (bad) mov xor push dec pop loopne xor or out addb pop fs test xchg loop mov fs xchg pop mov mov jns add pop jno xorb sti sbb jp fist dec mulb xchg or sub sub add aam fcomp xor mov mov mov lret or insb pushf in js mov jge cmp inc jns cmpsl or and clc das add lret sbb popf push cmc pop data16 or pop mov cmp push pop fist or cli (bad) cmc inc es mov ret test fdivr pop pushf xchg decl sub push repz hlt sub and negl jg sub sub out insl xor into dec (bad) clc out push sub sub pop or pop dec and idiv (bad) (bad) js in aad cli mov sub xchg iret rorb (bad) movsb sub test dec sahf adc sub mov pop mov outsb mov add mov fldcw add popa mov cmpsl roll out sub or lret mov xor mov add sub in jge jb inc jo mov sahf jb cli lods push dec repz mov push fstl into xor sub movsb insl out cmpsb (bad) push xchg jecxz pop adc lret and pop ret jmp jno imul push int shlb loop pop jl dec add pop ljmp xchg inc lock (bad) mov or sub pop jne mov ljmp add and and daa xchg add mov cmp xor shrb xor cmp sub in mov cld les jmp inc pop mov loopne xchg out insb mov adc sub or mov pop mov call or clc stos lret adc mov xor sahf cmp sbb adcl daa test adc push call lret cmp into and bound sarb push jne push adc rol xor sarl les aad test sbb fnsave pushf add push jg pop mov (bad) pop test sahf ret sbb rol cmc fcoms clc scas enter inc dec shrl jmp sub cmc and mov jo dec or mov shlb inc les pop jle push push jmp mov in out mov inc rcll (bad) or ret mov fcmovbe jge cmp mov enter movsl ss mov sarl mov xor adc ret sub pop or add sub cld icebp xor outsb (bad) and stc add mov pop sub mov sub ljmp pop enter xor idivl ret lods mov add jg stos popa mov dec out (bad) into ds sbb stos mov jmp adc lahf jbe push dec xchg mov std push xor mov test sub call movsl cli jmp jo adc mov gs mov pop dec hlt add lods or lret icebp pusha xchg notb ret mov pop xor out adc (bad) add (bad) xchg pop or and out jecxz outsl repnz add arpl adc add (bad) pop loop xchg mov outsb out sub into std cmpsb adc (bad) or bound jnp sub xor xor cs bound or xor dec shr mov push fnstcw dec insl das push sti pop ljmp test mov or xchg jge pop cli shrb das sahf inc hlt (bad) (bad) repz xor or jmp dec ja cmc inc cltd pop xor stos les mov xchg jl sti test pop testl sub sub and dec leave or data16 xchg repz movsl movsb jns mov popa bound or push cld xlat stos sarl sub and add sub pop adc xchg mov in sbb cmp js mov movsl test add push jb shr jne dec jnp add pushf mov scas jmp xor sti pusha in push orb mov push push fstps mov movsb cmc jae and (bad) pushf jg mov pop idivl add lods das mov jl imul mov or rcll bound mov into and (bad) ss push mov ds sub notl and push cmpsl mov fimul or xchg inc and (bad) jb shl lret push fwait daa (bad) arpl jecxz mov add sbb out xchg pop push aad movsl clc enter lds fcoml and fild adc adc mov add lds mov pusha inc ficoml dec movaps xor pop cs icebp outsb dec idivl or sub push daa mov call pop add mov scas cmp icebp push add mov push fxch or mov xchg xor mov jo inc (bad) xchg stc sub cwtl push add jmp pop mov xor add cmp pop and cltd lods push dec mov (bad) cmp or jno scas fstpl xor push push or test add leave cmpsl in scas cmpsl push mov jne push sub jmp push and ret pop sub lret sub mov mov or and jne out cmpb rcr xchg push daa pop ljmp (bad) xchg ret repnz and sub (bad) add pop int3 xorl sbb xchg jl add xor popf rcrb rorl lret mov les add sub sub ljmp clc push (bad) stc push shr xor insb sub leave fcoms sar or lea pop and sbb cmp mov out pop outsl sbb das stc shrl sub loop hlt xchg xchg mov or sti sub push scas lods mov pop sbb mov pusha cli mov mov push xchg outsl mov mov popf bnd (bad) jne cmpsb xchg xchg lret sbb stos sub ds or add cmp mov inc movsb iret aam icebp xlat vmovsldup decb lret shrb cmp mov cmp mov mov pop test mov xchg add or pop cmp outsb cmpsl test out sub add sub (bad) adc arpl or and daa sub or pop std rcrl xchg dec popf roll xchg adc dec cli jo or clc xchg std cwtl push ljmp ficoml or cwtl pop in xor or fsubrp aaa (bad) jne mov dec sub and sub inc xlat popf (bad) lods sbb lods cmp pop or lock (bad) dec or mov xor jno xchg mov add imul gs cwtl dec mov adc adc fsub push push xchg xchg xchg and ljmp pop gs movsl aam leave push xchg sbb dec xchg pop mov cmp subb popf xchg mov mov add xor mov jns (bad) movl and aaa (bad) and std gs sub push or dec mov stc and mov xchg pusha sbb fisttp mov pop cld stos and sub push ret add add dec lret or cli pop xor imull push repnz popf mov loop sub mov mov std in mov sub ret mov into popf aad enter les repz nop dec dec jmp pop lods sbb scas push loopne mov sub jb pop fimul cs mov cli sub js js dec sub mov aas dec jecxz into mov scas loop xlat popf sbb mov mov xlat mov sub cmp push adc in inc or adc dec pop decl (bad) jb pop ss gs loopne (bad) dec add jno movsl rorb xor jo loope pop dec mov push (bad) pop call push (bad) repnz out and cli mov xchg int3 lret mov mov sbbb xchg add sub nop scas lods loope je out sub cmc push mov or (bad) pop mov xchg aad ja or jno lods fisubl mov pushf scas rcrb loop xlat icebp xor movsl add mov pop or cli enter sub mov jl add adc insb jns push (bad) lret inc sub lret xchg or insb and dec iret and sub loope in pushf call call adc stos mov or and inc pop mov scas push cltd sahf (bad) das mov mov pop mov push aas fisub rcrl insb stos lret dec push add out add (bad) sub mov aam lret cwtl dec cmpsb loope test lret or iret cwtl test lock lds cmpsb mov (bad) pop fisubl mov xor xchg mov or xor test mov idivl iret ja sub daa clc inc subb test call add (bad) jb (bad) mull push (bad) in inc add sbb or fdivrs cld out lds xor aaa add mov mov into incb push das rcrb popf sbb mov lds dec stos sub int3 cmp sahf incl repz ret mov fsts pop lret loop (bad) add fldcw xchg fldt loop add pushl and sub es sbb push loopne push ret cltd (bad) fs aaa xor lahf pop pop jo fstps outsl jmp jmp sub sub lds (bad) mov icebp scas cwtl fiadd das (bad) sub repnz test gs xlat cmp add lock je sbb pop imul in jmp cmp mov xchg mov push dec mov xor jge mov cmpb push sub jmp push mov das and adc call dec adc les cltd dec add sbb or and pop out nop jae bound pop mov das ret (bad) lea je mov rolb dec pop mov xchg cld (bad) jecxz bnd fwait sahf jb mov mov push lahf data16 jle sub mov jp je and inc cmp (bad) (bad) push daa scas clc pop movsl shrb enter xor sti and mov mov push add in jne (bad) mov popf jns leave pop xchg inc cltd and add cmp aad pop mov xchg or fstl xor jmp xlat dec stos adc jne add repnz sbb xchg dec pop cli loope lods xor mov pop pushf xor xor push sbb nop inc fwait sub xlat inc sub popf fistp mov xchg (bad) dec cli dec int xor int add or pop lds repz popf rcrl jg rclb out add pop hlt (bad) push cltd xor lret notb hlt outsb and xchg jae das ret lds jle mov mov scas mov in das data16 or inc shl test sub and xor jmp pop jecxz (bad) jbe and or xor jle or (bad) dec mov jo lds sbb sti sub sbb mov cmp adc push icebp sti sub pop xlat stos dec cld mov mov loop stos pop push jbe iret pop ffree xchg cmp rorl and fsubs pop roll push sub pusha ja rcll (bad) in and dec jnp xor js mov xchg or add movb dec mov shr (bad) pop cld mov mov mov fmull fldl pop cs xchg negl mov mov lods mov pop jbe inc rolb ss add ret imul adc jecxz outsb popa jmp push nop cmp xchg arpl add fdivrs (bad) push decl inc inc in aas or add or and jbe call (bad) sti xor add pushf pop sub icebp add mov scas aad or sbb mov fidivrl out (bad) pop lds sub out shl add sub jmp ljmp call jne mov adc (bad) frstor test push xchg dec jo mov decl cltd out add pop (bad) sub xor popa push sub (bad) mov pop xchg cld mov adc clc ret aam pop jg mov xor and divl push cmp fistpll sub out daa add into in pop data16 incb loope lock loopne xor adc push ljmp fiadd mov les jle bnd nop movsl xchg orl pop das jmp gs cmpsb xchg jns adc aam ret and out xor (bad) xor jg (bad) dec jmp fmuls sti sub jecxz ret jne jbe fdivl (bad) dec sbb (bad) mov ja in xchg stc daa bound (bad) jne and pop (bad) jns mov das cwtl xor cltd jae fisttpl sub mov sbb xor jbe add outsl in out into add inc dec pop adc mov mov out out pop adc adc xor repnz (bad) pusha sub xor lods rol ds mov sub push push loopne and imull ljmp mov inc mov fcoml dec enter push mov out mov mov push or xchg mov (bad) jo mov fwait jb sbb inc push add push test (bad) mov cmc pop pop pop popf push cmc push sub leave lods mov xor mov loop pop fsts mov cs movsb cmp cmc cwtl mov rcrl dec and push nop dec push ficom repz (bad) jmp pop enter xchg jecxz scas adc and icebp mov fldl sub fsubrp cmc xor lods int pop add rcll inc inc and out lahf jle imul loope negb xor stc mov push mov test adc mov mov sub adc cmc sub adc mov jmp mov push rclb inc push and daa push lds test sti enter pop jecxz in pop dec ljmp add xchg (bad) xor push xchg jle cmp jp sahf lds lret subl mov cmp push dec lea mov adc add in popa fsubrl mov mov push xchg ljmp mov sub sub push jmp or push push xchg jb dec cmp test test les rolb loope out mov idivb push add or scas in sbb icebp imul inc push movsl lahf insl xlat xchg jno sbb and mov push lcall cwtl bound ficom sub into push jns bound es dec ret lcall insl fidiv xchg in into out fcomps mov pop rorl out or push sub int loopne negb popf mov adc and add aad mov fsubs scas test mov cmp ss add dec adc negb xor adc cmc mov jle pop (bad) jg mov idiv lds daa (bad) rcrl adc cwtl repz sahf add aad push test sbb dec les lahf jnp icebp dec sbb xor cmp ja mov sub xlat xchg (bad) stc fistpl js cli test adc insl lds repnz pop xchg imul outsl in sub fsub cs push cwtl add mov push rcl cmp jb mov and sub pop sub lock sub push stc xchg jmp jae loop (bad) xor or add test sti dec ja mov int3 lcall add rcll add xchg js push cs (bad) (bad) lret sub pop icebp cli mov imulb add out dec sub cld cli popf fidivrl pushf lds arpl pusha xchg inc fs xor not repnz cmp insb std or mov xchg mov push xor pop cmp (bad) mov insl sbb clc mov add ja lret cmp repnz ds shll cmp int3 mov (bad) daa rol pop sub icebp (bad) jmp repz imul pop aas shlb push aam clc sti jo add sub xor loop adc jne lahf xchg pop inc jae cmp out dec test xchg mov cmp xor dec sub and repz jno add xor (bad) sub and cwtl jno movsb mov sub clc call mov (bad) lret mov (bad) jle xchg fs and xchg fisubrl out repz pop es sub inc in sbb inc pop stc cs pop inc movsl pop out or sub fistpll mov sbb mov out cmp addr16 mov pop mov cs add dec xor inc mov loop dec dec jmp push iret push in pop mov repz add js das dec jnp add mov inc leave into mov les cmp push mov dec cmp div and sub cld xlat inc movb fcomps xchg xchg (bad) mov push pushf xchg jbe jp leave adc xchg jge test jne adc fcomps xor loope or decl lods xchg mov bound rclb (bad) push sbbb mov repnz hlt (bad) les in outsb lret lret adc mov out outsl sub sub ret sahf or push mov mov cld mov neg sbb jp push jnp inc es push push ljmp (bad) cwtl jne lods mov jl pop loope xor loop sub loopne (bad) or test in in push mov add adc jb adc add cltd dec (bad) imul loopne jmp mov mov mov or adc inc dec call or (bad) mov inc (bad) mov neg cltd leave fistp ja in stos cmp movsl pop test push or loopne fist ret sub xchg mov ljmp pop std das hlt mov insb xchg setb ljmp imul icebp mov mov pop (bad) xor pop lret scas jno add sub popf out hlt leave dec mov mov andl sbb pushf inc and mov jmp xchg push (bad) xchg sub mov sbb ljmp cmp loope push mov add pop (bad) xor divb add (bad) dec pop xor in xchg roll mov bnd leave add pop xchg xor ficoml push pop mov das jb mov bnd sar xor and subb mov nop push cmp call mov mov xor lods xchg (bad) ljmp inc mov cwtl jg in mov pop cs xchg jb cwtl cmc jnp and sub fsubl lret add cmc jge int push gs popa cmpl xlat lods dec das fstpt add pop xchg mov mov sub mov cs fs fidivr push sarb (bad) sub mov and fidivr (bad) mov xchg ficom iret add add test (bad) mov cwtl imul and add lret sub rclb jp (bad) lret lret push xchg pop jmp imul xchg psubsb fistp xchg (bad) add mov aas daa shlb pusha roll ret leave icebp ficoml scas aam and repz and cmpsl inc arpl repnz aam leave jno mov sub jo mov pop mov mov dec mov pop or cmp mov loopne mov jnp add mov jp mov icebp fbld lock cmpsl jle xor out bound out xchg jecxz push imul sub push and sub ljmp idivb dec cmpsb cmp out sub lods (bad) jp fistl cmpsl pop mov into or gs xor pop mov jne cld or inc pop push (bad) jae das pop pop pop (bad) loop jno dec jge xor sub les jnp or pop dec hlt daa mov mov dec aad das xor xor pop mov push out popf fidiv push push dec fistpl xor stos arpl or test repz les pop jle scas pop test in das or inc stc dec or out sub xchg (bad) or (bad) mov jp xlat mov movsb and push es je gs xor jne sub jg jae data16 scas repz mov and jecxz mov bound pop popl push int3 aaa mov rclb int xchg and mov (bad) and mov mov mov jle pop data16 mov insl cld sub idiv aaa es pop sti push adc shrb fistp fsubr mov int adc call imul pop mov mov outsl jg xor cltd int push push repz jl sub lcall xchg in cmpsl ret sbb cmp idivl vmovddup mov addb or mov dec sbb or rorl adc loop xchg pushl or repz push cmpsb xchg psubq adc jle jmp inc jnp call or xor lock scas fs call pusha xor dec out aaa ret mov pop push rcll cmp or and xor push (bad) enter popa movsl std xchg mov push arpl push sub movsl stc ret dec icebp gs clc bound jmp push add xlat icebp and and fild sti inc jo clc or push mov rolb cmp lods das mov mov icebp je add std insb (bad) call dec imulb (bad) roll addr16 je push stos push sarb xchg xor cmp xor mov dec (bad) imul mov divl sarb movsl lock pushf cmpsl sbb cmc inc enter cs out clc push add mov jp mov mov or xor lds sub mov mov cmpsb (bad) repnz mov idiv daa loope or xchg dec loop aam pop scas je lock sahf or ss rorl out dec lods movups fiadd cs jl add ret cmp add gs loope mov push loop pop addr16 mov out cmp mov pop dec lret pop dec cli add jb push add les pop mov mov sti add fist add and xchg (bad) lahf outsb aaa pop push sub cmp mov push cld jo sub out popf sbb cli sub popf rcrl movsl xchg mov ljmp movsl ljmp ficompl imul dec or and xor add inc sub stos or jmp sub popf push dec jl mov imul lods gs mov pop lods fstl repnz sub mov jae mov sub fninit mov neg lds aas aad scas adc fidivrl and jno inc divb dec iret mov mov jns (bad) mov xchg idivl adc push mov or jbe jmp push and push sarb sbb mov hlt loop push jl lret icebp add push jnp mov mov std int3 add into jmp movsl ja ljmp (bad) das push and and xor mov push xlat push pop push lret cld mov (bad) mov xlat inc sarb cmpsl rclb adc sub ret push test (bad) scas mov xor fnstenv pop mov mov into cmc fldenv sub das pop xchg fidiv sbb into stos pushf enter pop sub outsl mov adc adc arpl cmc pushf cwtl lea jae jne mov and rorl push add xor add cmp lret cmpsl hlt icebp bound repz outsb (bad) xor mov shrb mov or divb movsl incl and rcl pop iret sti mov (bad) out mov jb or sti or loop mov or test cmpsl inc xor jg cmp mov (bad) ds mov pop fadds movsb cmp mov add push xchg flds jle sti fnsave jg arpl outsb xor data16 ret sub push pushf jmp jno ds cld inc mov pop (bad) dec push pop jnp fsub xor jne into mov xchg pop idivb inc xor xchg adc sbb xchg add incl leave cmc (bad) stos dec or mov stos fs out clc sub add ret mov js in leave cmp xchg xchg (bad) out xor push xor pop xor mov je adc dec (bad) jmp pop test das (bad) gs lcall adc or cmp lret adc xor xor cmp scas mov push jp xor in push push mov mov cmp iret cmc daa mov leave ljmp fdivl test push (bad) call repnz xchg add sub mov xlat repz in mov inc sub dec dec dec test sub push test mov add andl in jp (bad) leave xlat in push pop lret pop add cmp sub rorb mov pop ret cmp adc add pop mov ret cs (bad) cmp add push aad xchg adc dec mov aas add sti and outsb cld lret jne scas lret mov ja inc sub mov repnz pop int3 jb loop xlat dec pop daa fstpl sarb or ret fildl pop (bad) sub and popf sar add mov mov mov dec sub pop mov push or jge xchg ja jno adc mov gs cld neg setle add dec notl inc cmp notl sub mov xchg mov add and dec adc adc push lcall cmpsl add cmp dec (bad) jae pushl loope outsl mov test add movsb dec lea enter fbstp pop gs test and jno xchg out pop and js jecxz xchg nop pop enter sbb and dec and cmpsb pushl imul push add xchg iret sbb movsl es push arpl loop mov (bad) js jge or rorl sarb mov fstpt sub xor clc pop movsl scas mov test xor divb out into int lods xorb add aaa cmp push push jo xor mov adc push out cs in jmp gs ds iret push inc mov cwtl xchg out jns outsl pop push outsl and push mov out fs cli mov add pop inc sub cs outsb sub mov xchg cli cmpsl lods sub cmc mov lods adc xchg pop xor in or movsl icebp mov mov cmc (bad) hlt xor test pop xchg (bad) scas cmpsl mov hlt mov mov push icebp dec xchg aaa jmp jmp aam inc aaa aas adc mov jp cmp mov xchg out clc shr or ret pop jle and icebp cmp pop mov cmp xchg jl push mov sbb add bound fist bound ds fsubrl dec out andl pop jbe dec in mov out add shlb out inc aaa in lods xor or mov mov rcll dec inc and jle xchg stc scas int outsl aam mov lcall or xor ret xchg sbb stos sub pop lea lock mov pop mov aaa and lods jecxz into repz inc and pop iret push cmp push jl out xlat out cltd and divl xor or or jae xor jp out mov sbb push movsl jmp icebp imul ret push mov sub jbe and in mov cli popf shll push pop jne or mov shrb push push pop pop dec push sub xor jb (bad) inc add outsb sub ja clc jo xchg (bad) pop jg outsb cmpsl pop add push dec fbstp pop popa push sub ja test pop xchg mov pop sub adc ds xchg pop bnd sbb and dec jo jb call cld jge ret call push aad push movsl xor xlat or sti notl pop xor out or cs or or jno inc push mov lds xchg test cs popa push imulb test ret das and mov cmpsb lcall scas frstor sti idiv mov repnz sbb lret daa into aaa leave dec out aad push outsb lret push decb sub sub add ja mov into adc addb cmp pop bound jge int jmp add (bad) outsb xchg mov fldenv lret add enter inc sub scas test (bad) cltd pop inc fwait or add xchg shrl arpl stc dec (bad) leave push sub xor sub mov sub test sti mov xchg pop scas push (bad) cmp cmp mov outsl mov out jbe pop mov jnp push in mov dec fadds jb lahf dec sub dec test es fnstenv jp mov clc push sub sbb jbe mov inc into cltd and call test pop or add xor pop add je and sub jne mov xor xchg jns xchg add add jl int3 mov mov jns xchg fnstcw cs aas adc adc fdivr (bad) dec push cmp aad push add popf std xor je scas rcr movsl sbb icebp jle mov or sub andb jge jb dec repz mov mov mov xchg lods mov mov or lret mov scas cmpsb pushf nop lcall js add out popf jg hlt push in (bad) scas xchg rcrl je add sahf rclb dec mov pop jecxz mov lods es loop shrb pop mov aas pop ret loop lahf push sarb frstor hlt out pop mov cmpsb dec dec shr xor mov adc cli add nop std cmp xchg pop push push add xor inc cmpl xchg out pop in call sub cwtl fldenv dec lret test add dec fmulp mov pop push cmp jmp mov and pop dec inc lods repnz cmp (bad) mov sahf dec sti je push sbb dec jmp dec loopne pop and add (bad) dec into mov or sti xchg std leave lret ljmp push xor push add xchg jbe leave ja mov out or or aad cld popf aam imul adcl add data16 sub popf fstpt sbb dec in xchg call jns xor mov clc (bad) iret out xchg mov test clc stos cwtl dec insb mov mov pop fsubs lds (bad) scas gs jmp daa or in dec pop cmpb jmp pop sub lods or jo decb lea push pop jns dec fistpll cmp or inc dec or inc push mov sub or and xchg insb add (bad) in push lds pop mov and xor xor mov jb pop stos cmpsl jns insb fcmovu lcall pushl sub adc out mov andnps push lret aas lods mov mov fild xchg (bad) xchg fsts cmp addr16 int3 bound and dec sarw push cmpsl lds (bad) jecxz jl push jge out arpl mul cmp movsb mov nop mov or call das (bad) mov mov mov cli into rorb add xor or bound mov shrb movsb mov ljmp jmp mov push jl dec or mov das pop inc adc into lods daa add push shrb call cmc push fisubl adc test mov or das xor stos mul sub cmp lea lret out inc cs inc int cmp fildll out inc xchg jge idiv push (bad) xlat xor mulb data16 or fcoms mov (bad) xchg (bad) pop mov das ljmp add push cmp scas (bad) movl dec jmp add xor ficomp push add push insb iret push ret sub add fistpll mov lret or fstl movsl xlat popa dec pop push sti daa sub dec int3 dec lea mov addb cmp sub add sti cltd sbb lods fldenv jmp mov push jno enter xchg adc push test mov and ret inc xor add xor shl movsl insb xchg mov mov add enter lods into les cli out rep xchg out pop loope mov in repnz (bad) pop fucom sub jb movsb inc xchg sub and out pop sti xor (bad) fs mov xor insb addr16 lock cmc sbb cld notl je shll es xor sub test pushf das jo adc and mov sbb mov (bad) mov ret cwtl loop mov adc add push stc mov iret lahf jnp test push repnz pop das xchg adc mov mov and mov xchg cmpsl rolb scas and hlt into leave fdivs dec add mov out jle sub mov xchg lds sti fsub sub ljmp mov ljmp and (bad) dec push lahf push xor jmp dec loop sub icebp lahf pop outsl lods cli push imull fnsave inc dec add das les lds sub sub in fisttpl pop or aad or dec add dec add or xor (bad) mov xchg loope lret jb ret and jb call or push fldenv ljmp aaa leave and add add out mov mov inc fdivrp mov out sub sbb (bad) hlt cmpb shrl mov das int or cs push test sbb xor pushl add inc xchg or out je xchg inc dec jmp enter hlt jno xchg (bad) mov adc mov adc jae mov sub xchg bound or sub sub and or xor je test fidivr fcmovnu (bad) sub js les cmp add xchg adc repnz adc ss pop dec stos sub ljmp sub dec icebp jmp or into mov mov repnz leave pop sti jp adc ret adc push lret or decb or decb dec es or xor add dec cmc jae bound enter into test pop leave sar es sub push push jge push cltd sub push stos sbb scas fcmovnbe xor fmuls mov (bad) mov dec orb out mov dec lret fdivs nop (bad) cltd jge shrb adc pop add ret jbe push out xchg adc mov mov mov pop or push idiv cmp movsb scas stc imul ret repz scas xor jmp bound loop mov mov rcll dec (bad) xor xor jg sbb std sub jb xor out and fdivp hlt pop loop or das inc xor std daa jle jae repz out or arpl fadds test stc mov inc xchg add mov cwtl test push or push push sub mov int3 (bad) (bad) dec mov dec cmpb imul gs das into imul cmc ret xor out sub xchg mov mov mov sti cmp rcrl idivb sub sub push lret or scas xchg movsb mov testl xor ja ret pop ja sub divb mov sub fidiv call and xlat stc pop imul jnp xchg fldcw and into aad mov sahf inc ret pop xchg pop mov adc loop cli jg and orl or pop imul pusha insb addr16 out ret mov pop mov faddl sahf addr16 stos sub or add js jp push pop push mov arpl mov jle (bad) (bad) mov add (bad) push sub mov pop cli push icebp sahf nop (bad) lds sbb mov sarb adc dec xbegin (bad) mov scas push or add dec or movsb mov out mov dec xor gs mov mov pop les mov in and pushf or fbstp jmp xchg lret (bad) pusha pop jmp cltd lret cmpsb js arpl or pop jnp and scas bound divl dec call daa out pop inc ljmp sub in pop sub shll fild (bad) movsb call mov mov or push dec lret sub shlb mov sti lods rorl ljmp rep aam insb je push stos fs push (bad) loop mov pop xchg fcoml (bad) mov das jmp xchg push or push pop cmc daa and or (bad) pop ret cli lret jo pop aas pop or mov pop mov cmp loope sub stc mov sub jne and (bad) and sbb (bad) sub add pop lods aas movsb (bad) pusha jmp or dec inc imul lahf pop and stos loop xchg fnstsw pop sbb sbb fdivr mov insb sbb lods insb dec and inc cli test push jmp int lods (bad) cwtl push or ret mov fbstp pop sub jmp mov mov bound push ja jle jne movsb or xchg sbb enter into jb xchg ja lea notb sub shlb or cmp dec mov scas jl mov js xlat jo add cmp xchg adc sub adc mov and and mov testl sarl push pop lcall push jmp mov pop out repnz (bad) mov cld call bound ficoml sbb sub xchg in mov iret jne scas fildll mov mov ss xor push mov cmpsb lahf or dec sub push inc fwait cmp sub pusha imul xchg xor or jge xchg scas or inc dec (bad) push and and mov aas loope repnz loope (bad) icebp mov inc shlb pusha daa (bad) adc mov mov xor pop into adc shrb (bad) push pop hlt cli mov pop fldenv enter loop pop jbe lret fucomip outsb xchg call or mov and jmp fmuls sub fisubrl cmp pushf lahf push inc stc add cmpsb rorb dec movsl pop sbb inc stos pop shl xchg xchg cmp jmp jmp lret xchg sub dec mov add cmp fs das dec out mov mov pop cmp add popf lcall add xor out push mov aas imul xor adcb decl and je xchg add (bad) lahf pop xor shr daa stc aas xchg jmp dec add aaa lret cs push mov adc mov xchg inc mov xor (bad) jmp ss and xchg test test or push sbb jp push testb jle cli jae addl and pop cli pusha xlat mov inc jbe push add mov jno icebp add xchg (bad) mov add std mov jb repnz repnz bound adc (bad) je call loope pop mov aas xor mov jp xchg (bad) cld iret inc sub mov or mov jmp xchg inc mov sub sub cmp cli lret xchg pusha femms fcmovb jae notb movsb push mov gs dec imul xchg mov xchg mov subb xor xor cmpsb dec push xor std jo not push lret or sub xor add fwait aaa ret fbld adc pusha sub daa ja jecxz (bad) jbe jecxz mov mov jecxz xor mov sarb into jb fidivl add movsb bound xchg ljmp (bad) negb jns pop pmaxsw xor rclb mov clc sbb popf mov jecxz dec scas cmp test mov pop in sub jae jmp popf jb cmpb mov cli add call aaa mov sbb add scas cmpsb fwait das mov or pop int3 scas and inc sub je leave divl pop or fdivrs arpl jl shll jl add add add adc movsl push sahf jp xor scas jbe ret add nop fldenv negl test or inc xchg (bad) xor mov mov pop cmpsb mov hlt push pushf icebp dec divl mov and (bad) mov adc daa fldenv call fmul push and mov fsubs lret inc jg pop push mov xor adc fs enter sub pop add fwait dec not dec xor push shrl mov push (bad) lock xor scas mov (bad) loop jp add leave lods jl mov das test lds mov jecxz out push out das enter rcr sub scas int3 nop into lahf fsincos insl inc outsb or ja mov mov push fnstcw push fimull add fcoms xor jmp or loope cli rcrb jno dec imul fcomi clc xchg dec mov pop push dec mov inc inc cli aad mov mov ret div lea gs ds sub xchg sub (bad) int3 inc mov mov jo imul jle mov insb xor sbb and insb jns loopne mov jge (bad) in out sub xchg sbb or push sahf rclb lret xor dec dec adc idivl out daa repz ret mov xchg ss negb push mov xchg and (bad) lock das fnstcw into out dec cli sub out std jns and add and fldenv std lock or lods or jnp dec sar lret add inc shr inc mov cmp shll notb cli imul jb lahf pop cwtl leave add ja xor add sarb cli repnz mov cmc sti sub ficom (bad) mov xchg xchg shll out dec orb jnp shl sub hlt rcll jns out lds loop mov dec ljmp xchg shl inc pop push pop cmp lret push push xchg push mov lock mov dec aad cwtl out jmp mov mov ljmp cmp sub rcl (bad) mov sarb mov cltd and incl cmp add inc sub inc shll imul movsl fwait dec (bad) fsubrs xchg roll adc cli popa lret add lret pop adc lock pop leave shll xor cmc xchg mov negl aas adc stc xchg test rcll mov out loop lret and ret clc pop das (bad) mov xchg loopne ds sti in sub lock icebp or mov and loope fsubrs lds pop cwtl psllw xchg lret scas pushf mov jbe sub lea lods pushf sub outsb fdivrs iret pop mov and test and cld sub add mov cwtl and shlb mov sub mov dec sbb shr mov test into in addr16 ljmp mov (bad) lret cmpsb or insb mov or sub dec in and out loop xchg out mov mov add sahf and (bad) leave out fnsave loop mov lods popf rcrl in scas std mov xor scas shr das ret jmp pop jbe mov into sti (bad) das (bad) cmp xchg into add mov pop mov and imul or in (bad) out cmp sub pop pop bound xchg call cs sub int3 mov pop mov out out into gs mov stos idivl jmp sub fnstenv sub fmul jmp push cmp bound pop inc sub add cmp mov dec leave xor mov jmp adc clc jne add iret mov cmc dec ja loopne in fnstcw dec jecxz je stos notb (bad) (bad) mov stos mov shll mov (bad) cmp and fisttp add push imul roll movsb or adc mov sti xor xor lods adc out jle ret pop push mov sub enter imul movsl sti mov push and jmp in sub inc outsl pop lret mov mov or xor scas fnstcw lahf pop in jbe movsb fbstp loope cmp fadd mov mov xor lods or fucomip jnp arpl stc add push (bad) xchg lds lea fimull and cli cld xchg jae xlat jae cs inc and mov pop or mov mov shll jnp lock xor iret push add pop xchg in ds dec jbe xor pop jge add sarl cmp clc out pop mov add dec mulb inc out test (bad) mov or cmp mov xor or cmp movsl sbb jne out pop cwtl add ficom fild mov pop (bad) sub sub (bad) scas repnz out mov mov cmp xor rcr sub bound leave cmc pop mov mov xchg outsb out push scas mov ret sub arpl pusha shll addr16 not jle lret stos sub cmp push mov lret ret xlat dec stos frstor sar dec add xchg outsb cld fdiv lret incl lods cld xlat jb rol adc sbb lret jle fdivp push push repnz push and sub jae rcl dec das nop pusha add pushf (bad) adc (bad) sub lret mov icebp aam addr16 js (bad) sub jbe and cltd dec ljmp movl (bad) fnop dec lock and mov lods fisubl and jge jg lods mov jne repnz mov loopne mov add jl adc jmp sub ljmp popf jnp insb icebp out dec repz pop (bad) xchg cli rcrl dec lret sub adc std or not les sub movsb mov shr pop cmp mov out je loope adc scas jecxz nop pushf shr pop jmp mov fs int3 leave pop shrb lock in dec lret cld mov test stc sbb cmp mov sbb std sbb dec cs push pop inc ja sub gs call ret sbb enter sbb shr aad xor fcmovbe or and sbb xor jge or in push and mov jmp fnstenv fild dec and stc mov call int roll push add ljmp hlt orl sbb push repnz imul adcl mov aad hlt in cmp outsb out dec pop imul sti dec lahf mov mov into divl (bad) dec pusha movsb mov lahf push xchg scas lahf jl int3 std iret mov push aam jno ds jns (bad) dec pop xchg out adc xlat stos fdivl out imull in mov adc mov cs lods ja adc (bad) xchg sbb pop jge fldenv imul mull sub mov icebp xchg aas stc xchg dec pop shrl xchg mov rclb jmp lret and push stos into mov push pop out xor lahf pop adc mov mov sub nop xchg idivb cmp mov sub inc nop mov (bad) mov add cwtl push and and mov push sub in xchg call daa je das jle and inc popf sti out in mov rorl jmp dec or jecxz andb mov jg mov xor iret lret xor push lea fnstenv cmp sbb jge cmp fs xchg push pop sub sub xchg add clc xchg ret pop xor mov mov add xchg and lret xchg xchg xchg movsb pop out sti sub jle dec leave mov scas cmp nop jbe pusha lock mov add popf insb cmc dec mov loopne push popf jle in (bad) lahf mov das xlat sahf mov push xchg inc jle aam repnz jbe sub ret cmpsl xchg sub es das xor mov mov xchg idiv mov dec cmc cmp xchg ds bound out (bad) fdiv pop call int lods jnp sahf mov add xchg mov or cmpsl inc add push and std daa xlat cmp xor (bad) xor aas (bad) in lods rcrl in fsubrl (bad) jmp pop lret push xchg ret jnp mov scas mov mov jmp lahf js imul fnsave enter in lahf js popf aad popf mov scas xor (bad) add out sub pop sub pop ja mov mov mov adc dec mov jl aas cmp or stos lea jg jmp je (bad) inc or jnp jbe lock xlat mov cmp xchg sbb mov pop jnp mov stos mull push dec out mov pushf es int3 sbb leave add push pop out xor mov jne repz mov xor sbb loope sub mov lcall notl and aas (bad) shr xchg ds fs cmpsb das hlt out fist outsb cmc out insl add outsl repz pop mov adc jecxz into xor mov jmp sbb inc mov fbstp in xor mov pushf fmuls mov sub faddl pop xchg (bad) xor daa jbe and xlat pushf inc mov pop pop dec push mov dec lret fisttpll mov (bad) imul adc push jbe sub dec pop out lea pop mov leave pop pop sub or loop inc (bad) fcoml dec pop sti and inc cmp lret repz scas xor cmpsl test xchg push lahf shrl rcr ss mov (bad) mov mov dec scas cltd mov idivb cmpsl dec fidivl or pusha pop ds sahf in or ja adc mov mov cmp cmpsb fbld sbb in scas into cld dec fnstenv test xchg in sub pushf jecxz,pn mov pop push pop jbe push ljmp pop mov pop mov and rclb sarb jne xchg cmpsb (bad) xchg fnsave enter mov inc dec mov das adc (bad) lahf sbb push push movsl gs xlat dec pop mov sub add mov mov scas sub cmp dec mov (bad) mov jle adc lods sub das xchg ljmp in pop and imul punpcklwd pop cs sub mov cmp das call rcl cmp mov and jg ds mov loop jnp adc lret mov mov (bad) adc mov aas add movsl into pop enter cmpsl mov imul test sub or dec fcomi xor ror addr16 gs ret pop jl push sub sub mov and leave push adc adc lea cmp mov add or lea das fstps jbe pop adc xor (bad) xor mov dec cmp popa sub ja (bad) cmpsb add and cli jne dec bound jl dec call gs xchg repnz xor test mov mov sub out lret inc mov mov les xlat lds ljmp negb stos push xor add mov lret mov dec int cmpsb xor rorl (bad) xlat cwtl push mov lods xchg mov pop xor xlat mov movsb or sub movsl push jbe in outsb dec xchg dec mov sub cvttps2pi and pop mov repnz dec cmp subb call adc or jo pop push and hlt sub jno jp shll add jge sbb lret push mov pop movd into mov jo data16 ds cmpsl ret iret adc xchg (bad) mov ja lea int3 xchg stc lret inc aas into pushl fxch push jmp sub dec inc inc gs adc xchg in mov cmp xchg ljmp xor xor and lods mov mov sub sbbl cmp loope adc pop mov inc ljmp movsb cli lds mov mov add jmp jnp cs imul data16 inc loop out lea cmc push popa movntps push sahf js movsb scas and mov push int3 (bad) adc lcall or loop add sub sub out daa sub mov mov cld jne pop lahf mov push dec xor xchg ret jbe push out cld fisub (bad) cmp bound outsl lret jmp call out mov xchg dec shlb mov das (bad) push das ljmp dec push mov xchg (bad) aam pop push and pop mov fwait scas lods pop movsl mov sub xor cli push mov lret xchg stc xor mov add and cli fldl jle sahf addb arpl pop xchg fdivrs int3 xchg jne bound mov leave sbb shl scas add icebp loope sub test cmpsb xor jne sbb sbb loop test and xor lods push xchg stos cmp out dec roll add push push mov fsubl jnp out scas mov xchg or pop mov mov loopne shll sub lods imul scas xor mov lea popf jmp pop inc outsl pandn repnz mov cs les inc ret fildl cmp pop adc in cld pop insb inc mov mov and jns imul dec test xor clc shll out ficompl in or ret ret mov fistpll add pop inc push imull push sbb movsb adc xchg xor call lret mov and sbb jge cmpsb lock int3 or ljmp fcomps or mov daa icebp cmpl cli or push pop mov push (bad) xor and sub push leave imul dec mov loop push add fadd cwtl mov and jo push cmpsb jno out jne jns out xchg cmp ret in lret mov lods adc adc jnp movsl cmp jecxz or dec pop adc repz in mov mul sbb cmp cwtl sbb mov xchg add or lods dec cwtl cmpsb mov xorl repnz lea push daa lret pop fwait adc mov bound adc fucomp (bad) (bad) repnz or or add ss jmp ror or inc xchg fwait aad push mov jno mov inc dec mov aas xor mov mov fcoms xor je stos mov push out sub cwtl mov dec ja (bad) sti and push add fs out mov cmp test adc and bound into call and testl add mov mov mov aam push std xor and (bad) cmc fwait popf cli add add popa pop sub xor xlat out aas movsl fdivrs push aam imul sub imul ljmp mov daa pop mov repz jne aaa lret mov imul or sub mov call (bad) cmp and jmp jmp pop xor repnz sub sub stos mov push mov sbb jle xlat call xor ret jne mov or dec shlb mul jg aam jmp call sub pop out cmp cmp movsl cwtl cmp imulb jge pusha scas or add out out inc fnstcw lahf mov mov scas lret insl pop push mov xchg push jae add sbb mov jmp mov adc push arpl sub test push mov cli icebp push push pop sti (bad) inc xchg fwait test xlat mov pop jb out push fcoms xchg (bad) sbb pop push outsb xlat sarb sti sub add mov mov test iret xor in loope hlt sbb lahf stc (bad) outsl mov inc gs mov repz mov sbb mov or pop leave je cli xor cmc in test fistpll push decl ljmp icebp xchg add test xor push add lods adc (bad) jmp xlat fdivr pop sahf push pop stos xor out iret jg lods dec xor notb dec fimull movsb cltd popf and jnp add add pusha out stos ja dec add dec fsubs icebp (bad) in test (bad) fsubs lahf push xchg dec bound aam lods stos sarl push popf and in lahf leave add mov mov subl xchg push xchg mov push ret imulb fisttp jge mov stc jmp into das or mov mov jno dec shr pop out imulb push cmp or jmp movb sub jne loope or mov mov or test ret clc adc (bad) lds cmp mull add ret mov data16 or repnz fldcw sarb test xchg adc (bad) mov shlb sti add ret sqrtps add lods xor insb dec test (bad) cmc sbb pop (bad) mov pop and repz rorl sub leave xor mov inc out push or sub inc cld nop jecxz or test loop les aaa scas gs repnz mov push mov inc mov xor and test in andb xchg cmc gs es int3 jmp add adc mov adc lods mov mov pop ljmp hlt xor sbb fsubl (bad) lods (bad) hlt daa xlat incb xor stos mov enter jle mov dec mov push adc pop loop out and jmp in mov lret sbb icebp push lcall mov inc loope jl in mov popf sbb sub pop test jmp leave and jg dec pop loop jl push dec jp lock pop and icebp add or bound mov cmp push fmul loope cmp mov icebp out popa lock sub xor and sub mov fistpll dec (bad) idivl and sub mov out incl dec push mov inc and dec mov mov add xchg fnstcw popf jge aaa sbb fistpll imul lcall in or into cld fwait gs int (bad) mov movsl add sbb fisttpll outsb repnz inc mov sbb mov (bad) cmp push out daa and push cmc xchg lret or mul sbb and loop pop (bad) pop push (bad) pop inc add push sbb pop mov xor cmp loop xlat notb mov icebp sub cli xor fstps mov jl fnstcw jbe movsl mov arpl shrb and and daa or push push inc loopne pusha xchg ret pop mov pop cld stc mov iret sbb inc sarb xchg out jb cmp insl adc mov shrb push insb xchg xor mov and decl sbb repnz or lret stos sub out enter dec rcrb or ljmp pop fstpl dec push mov pop pop stos xor xor shrb out pop inc shll mov gs scas ret hlt mull enter fs and push flds aam popa shrl ds mov inc inc ljmp dec mov push xor add faddp adc mov pop inc push sub sbb mov push dec cmp popa fs scas mov add loop jge or into daa sbb rolb xchg push push mov xor pop pop stc (bad) popf xchg out xor ret lahf ror imul scas jne push mov xchg xlat int mov xchg and sbb fbld ljmp and dec mov cli xchg in or pop aad imul sbb ret loop mul outsl lret clc data16 xor cld movsl adc mov sahf jp jns inc out add inc pop adcl fstps push add push dec mov sub arpl fisubr (bad) mov lret push jl sub cmpsl cs loope inc push sbb pop je xor add pop and mov and or decl out or sub push pop adc adc jo mov mov push pop das (bad) mov std jne out add aam and xchg ja pop add xor (bad) rclb dec (bad) out sub jge push les or adc or and mov daa mov scas adc push xchg xchg dec sub jmp or testb cwtl das jp mov gs mov ds (bad) mov fisubrl inc sub hlt andl pop stc and and fdivrs dec dec and dec xor push fisttpl divb mov pop pop scas fdivp jnp xchg das out pop sbb xor mov cmp adc es rcrb movsl xor xchg lret adc lcall fdivrs sbb jae or xor aam pop sub or ret xchg jb enter xchg cld sbb jae (bad) (bad) xor jmp mov bound (bad) in mov push pop xor sub dec push ds dec push mov decb in adc cmp (bad) aam shrb ss in cmpsl jbe pop jge dec mov or mov (bad) dec jo pushf out rcll mov nop xchg dec stos js sbb mov mov idivl repz push adc mov sahf (bad) pop adc add fcomps mov mov adc (bad) jne jmp and hlt ljmp fldt dec imul push pop pop xor xor mov ljmp push adc add rcrb lcall pop add cmc sbb ljmp pushf dec mov out pop gs ret sub dec cmpsl out test xor add xor xchg insb incb pop mov and pop push jmp cltd adc xchg mov repnz mov sar out dec pop xor mov sahf bnd push push jmp pushf xchg iret mov xchg fucomi jecxz nop loope aam adc sub push jo xchg outsb jp inc mov (bad) push xor icebp sarl cs push mov cmc inc pop mov sub (bad) push sahf xor push icebp cvtps2pi mov nop jge pop mov jg ficomp lret fnsave fisttpl xchg xor fbld mov jmp ret or xor repz clc push sahf test jmp xchg cs (bad) sub jl ret xor mov mov lret and pop js incb pop (bad) sub int ret or hlt or sbb hlt das xchg push icebp jae stos pop push xchg xlat mov cmp push cltd loope pop cmp daa fs (bad) (bad) das mov dec ret es add leave inc test mov enter mov xor sbb out cwtl pop aas mov mov xchg adc pop mov jmp mov es xchg pushf push in mov pop dec lret (bad) mov or push inc push sub push xor cld out or sub (bad) pusha jb xchg divb mov mov sub inc or ret ds movsl mov xchg outsl bound add mov sub movsl xchg jmp adc xchg imul popf loopne (bad) insb xchg in sub int3 xchg pop out sub mov into xchg dec stos lret sbb and mov pop ja push test or (bad) fistpll fbstp push cmpsl and fwait jge negl out das xlat sbb and mov fnstenv shrl stc popf in adc fstps xchg cli cmp es adc scas lock sahf sti pop sub mov add imul (bad) xor or sub push xor dec stos gs adc lock xor jmp (bad) fsubrs xlat mov jbe fdivrs in push imul in mov cwtl out leave jecxz push push sahf pop imul ret jge ss add ret popf rcrb in adc stos notl or rep pop stos gs add fs push mov aam mov mov hlt xchg out into rcrl mov cwtl orb out ret pop aam jae xor jne test add adc shrb sbb inc ljmp movsb adc scas sub inc pop sarb dec pop aad xchg or enter mov (bad) insb jb mov mov dec test dec je mov lods jl jnp lret xlat out es or add cmp fisttp and scas cmp inc add sbb loop inc jecxz leave daa push lret push dec icebp imul adc xchg ja (bad) cmpsl rclb push stos and repnz dec adcb lret cmp das ljmp xchg rcll fiadd mov add fs mov (bad) icebp cltd pop outsb mov icebp imulb cwtl (bad) movsb xor rolb xor rclb mov in mov flds inc dec mov pop jns xchg mul ret dec adc pop cld (bad) pop push push and in (bad) mov dec mov jge and pop pop jecxz adc add jns pop scas mov sarl test fisubr cltd stos out popf adc fnstcw mov mov movsb jns mov push or push cs clc mov cmp test mov push jmp adc cmpsb movb (bad) imul push idivl sub pop popa dec movb pop xor lds mov pop inc clc xchg shl imul mov dec in mov add adc ret mov and (bad) enter ficom jae mov hlt mov sub mov dec mov or vmovhpd and xor or lea gs xor xor xor scas sti fsubr rclb and adcb (bad) jl shlb jno add inc aam out cmp sub (bad) bswap adc loope mov or mov inc popf inc push (bad) out pop or or jp repnz pop pop pop pop pop popf jo xchg jbe clc movzwl and or cmp mov xchg mov cmp cmp mov add xor and (bad) mov cs xor add mov bnd fcoml push mov mov out aas popf pop ficompl cwtl jne ljmp mov push cmpsl iret aas or xor sbb mov adc ljmp mov out mov dec sub daa mov outsb mov cmpsb insb pop xchg int3 cli lret repnz iret adc rorb mov or mov enter sbb mov scas in jne aam pusha or pushl xchg cli pop add mov xor mov out mov xor das mov mov cmp xchg jecxz es je lds daa jns lods rclb rcll pop dec mov pop cmpsb dec pop int sub pop ja cmc sarl xor out dec insl cmp xor mov (bad) ja sub outsb mov mov mov (bad) mov js xlat popa fimul (bad) outsb clc jns inc or clc mov mov xor jae repnz jge inc push pop (bad) fstps stos fldpi xor xor out pop adc mov out sub insb sub xor call (bad) fld cmpsb fdivrl mov push cli call pop bound fldenv out lret push inc sbb xlat mov sbb jecxz fstpl (bad) test inc pop jmp aaa comiss xchg sub icebp lahf and fsubl test mov jno lock popf jl pop ja cltd add inc decb push out fimull cli xor imul cltd stc or xor bound mov cmp jmp rclb inc dec stos and lret sub rcrl jg mov gs daa inc cmp cli shrl mov out xor fs aas mov adc mov aaa popa add mov push addr16 insb xchg popf jns dec jle (bad) inc ret sub lcallw adc std aam mov inc jo inc add ja xor push push pop out stc adc inc lods out cld cltd pop mov rolb or mov xchg jmp je,pt stos mulb out xchg add jb scas daa mov or negl sbb (bad) fs test loope shlb fistl push add xchg mov out cmp cltd mov sub cmp lret jno test add repz std xchg lods or xlat fs xchg fisttpll xchg xlat (bad) in sub dec (bad) jb iret fnsave or adc xchg jne js add stos xchg push scas sub ljmp mov (bad) scas sub adc xor mov (bad) mov xchg push mov xor imul or add add out cmp out xor rcll push stos sub mov xchg (bad) mov jmp and cltd add icebp cltd add (bad) xor sbb xchg cli push push sub das xchg jecxz pop test lea push mov call push sbb into mov pop mov mov mov lcall mov mov add or mov imul roll xorb sbb call push sbb dec and xchg sub icebp loopne icebp and jmp lret xchg sbb push pop movsl divl inc jne movsb jbe loop push jge mull mov shlb dec mov pop pop mov dec fldz xor mov jno insb adc (bad) loop shlb and sub test or mov pop out add xchg call add jmp add xlat out icebp in sub add test xor pusha adc mov test movsb jmp stc push (bad) mov adc insl jnp and outsb shrl and les sub outsb clc arpl movsb das and and jle push sub push dec pop clc mov mov push iret push dec xor jnp es jns adc add mov cwtl mov pop push lcall lock or lahf fnstenv xlat xchg stc inc outsb adc lret jmp and dec lret stc es icebp jo push xchg xchg xchg lahf cld or call jno (bad) leave jns fnstcw or jne aas fs stos repnz in test or sarl das xor mov ds pop adc flds xor scas jecxz pop mov dec daa adc mov out adc (bad) out pop (bad) repz mov popa (bad) push lret mov xor push sbb daa or idivl sbb jp inc mov xchg out add xchg xchg test (bad) sub xor or and mov and sub icebp adc mov insl mov outsb test (bad) ja ds arpl repnz (bad) out adc mov ja mov ffree loop pop lds inc mov xor mov imul aad (bad) xlat push lret daa jne ds (bad) enter cmpsb fcmovbe arpl push pop jecxz sub psubsw aam pop pushf pop and xor lock add pop jns inc or int3 stc popf jo xchg scas ret pop push bound ljmp lahf adc push out pushf daa lock nop imul xchg push sbb (bad) into xchg in mov pop jle lret sub pop jp pop lret pop out and (bad) in dec and dec or xor pop sub test ret mov adc stos and or in test lods jo movsl imul and daa xchg movsl xchg loope or xchg push test repnz je sub xor std aad aaa insb cld daa and xor xor (bad) jo push scas or mov test in mov mov lahf mov dec dec xchg xchg adc mov xchg fsubrl or dec adc ja test scas repnz xor mov and inc cmp sub jae loop mov mov cmc jb xchg dec adc lock imul fcomps or sub addr16 pop sub ja cltd lret jge mov leave xchg adc aam leave pop lea and stc iret aas sub out mov or add mov pop cmp jl dec clc sti pop fidivr cmpsb ds sub add mov out (bad) and sub xchg mov mov sub out fst sub xchg sub mov xor rorl inc in adc add cli scas aaa xorb mov mov mov das mov ror jb adc sar cld jmp jmp jns fucomp jecxz in xchg add push and add pop mov repz (bad) add ds mov int3 fiaddl pop icebp cwtl loop pop add daa dec cwtl or fnsetpm(287 xabort lds sbb xchg sub or sub imul lock aaa cmp inc out rcrl add int3 mov xor int3 xchg aam mov jb xlat add movsl daa xor ret fldcw mov add xchg icebp mov leave mov mov repz jb in (bad) pop mov cmp in pop jecxz add or adc mov jg ja mov push mov mov imulb dec adc outsb fist in cs and jge mov jecxz daa (bad) loope repz test push rorb xor sub xchg mov xchg idiv fldt jne mov pop out and movl das repz xchg jbe popa (bad) or sub push sahf cmpsl fbstp (bad) leave sub xor loopne xlat mov repz push sbb add clc jecxz out mov ficom xchg mov popf xchg outsl clc xor inc push mov sub loop shll adc sbb add lret jne sub dec jmp jle mov repnz push lds dec je into jmp fnstenv jmp push push fdivl pop xlat jnp mov ja fbstp int3 mov (bad) fbld add xchg or dec mov add dec or gs xor jo mov test and clc mov push dec test push pop les (bad) xlat jmp into iret lock pop xor iret stc mov nop inc add xchg dec or push arpl test test test mov notl mov fisubr push mov (bad) mov cmp shl mov cmp jmp mov mov jg push outsb in jg adc mov push sbb daa sub lcall scas cwtl pop mov push (bad) jmp fnstsw inc xorl (bad) out mov mov pop mov sub mov ljmp movsb ljmp xchg rorb lret xor xchg scas lods pop jmp sub es icebp jle jmp mov rcl add xchg lahf cli (bad) dec mov adc (bad) mov pop out mov inc lcall xchg push inc or gs xorl sub sbb sub xor adc repnz aam mov sti pop mov jnp out push adc ss push bound movb jnp xchg mov dec mov repnz xor mov shl pusha xor and addl mov or leave sbb mov test sub test xor jmp int3 mov std cmp loop xchg icebp cmp rcr jb and fisub jmp adc dec lahf (bad) shlb or das test stc (bad) (bad) adc dec in inc pop out sub pop pop or xor mov roll adc ds int scas addr16 (bad) aam mov push negl mov push fldt and mov inc stos pop or xor nop sbb inc jg jb or dec rol cmp cmc mov cmc add fstpt mov out pop cmp sti (bad) push idiv xor jmp inc sub loope cmc add divl fnop xchg enter cmc xchg push dec je xchg cmpsl lret cmp cli inc ja mov mov dec (bad) in fcmovne push sbb rcrb loop shlb fistpl push add mulb cmpsb scas pop ret sub xor jns inc mov adc (bad) fistpll sub inc mov (bad) jle pop pop or fbstp cwtl mov xchg mov into mov sbb in mov aas bound sub push add cmp push hlt out cmpsl repnz (bad) mov loop std in dec fisttpll pushf or inc dec mov dec les cs jle loope mov sub dec loop xchg push mov lcall ret (bad) adc (bad) out xchg (bad) push push icebp dec test test pop mov mov mov xor adc and pop xor leave daa (bad) addr16 xchg ret cli add jb clc repnz add mov inc ljmp xchg jge mov sbb pop mov pop and mulb rcrl fwait (bad) dec mov cmp movsb bound xor mov ljmp enterw icebp popf test shrl bnd lods je adc scas repnz test std das lret adc iret scas sub or aam adc mov dec divl jmp lods lock push dec stos ret jnp (bad) out rcl (bad) xor mov jne iret imul pushf fwait mov xchg iret mov movsl mov mov repz sbb fldcw psubsw shr sub mov mov jb fimul jne lods in clc int mov mov jmp lret xchg into cltd adc xchg xchg push jno jns test mov inc ljmp outsl sub (bad) mov bound jne cli lds push movsl push xchg jmp call cld sbb jecxz imul dec movsb jecxz pop mov or repz add ss fisttpll insb lods nop adc mov jb popf insb fnstsw dec loope sub cltd out pop dec jmp mov dec mov sbb daa dec xchg repnz lret pop jnp idiv popf sti or inc bound mov aad cld testb icebp add jg jnp mov sub add repz xlat cltd ds mov sub ret jne jno inc in lret mov or repz sub rcrl mov inc mov push lahf push pusha mov add jl test push jmp push out movsl mul xlat es lods and xchg push dec out jecxz pop out adc lret insl jb xlat (bad) (bad) jecxz,pn dec stos mov dec sti into sbb inc cmpsb movsb shlb popf cmpsl (bad) mov and clc sub hlt dec repnz or mov adcw adc or cmc sub test dec and add sti adc jmp cmp gs push repnz lds in outsb xchg sub data16 mov dec loop pop push mov lock ret (bad) and or cmp and xor lock and in dec or popa fmuls rclb sub movsl (bad) cltd mov fisttpll cmp add mov sub dec sbb add jns outsb inc xor je imul stos cwtl pop sub mov out push inc call pop out les jmp neg or cmc mov push xor pop repz or and jmp cmp xor out xchg stc imul jg inc fldl (bad) outsb sbb call mov mov and rorb xchg fimull stc in (bad) mov inc push test xchg cmc mov push insb fwait mov sub xchg out popa adc or into ljmp mov mov cmpsl movb gs fmull sub sub push xor cmp or push inc mov pop push fdivr fdivs xchg dec dec lret add lock lret outsb jmp das or fsubs sahf (bad) mov xchg mov push repz xchg mov (bad) jg pop dec push ljmp neg int3 add xor cltd mulb adc sti int loope aas out xor gs icebp stos jecxz xchg mov in and negb add adc mov fldcw xchg push mov sub gs sub mov fucompp cmp cmp movsb test pop mov stc mov movsl enter (bad) or gs and imul inc daa repz bound fisttpl and and mov sub xlat stc inc repz inc popf and icebp cmp pop sub jp add cld pop push loop xchg inc adc aam push or in mov (bad) jmp jo jge ja dec (bad) fadds mov loope cs shlb (bad) (bad) or scas jb lcall mov mov divb incb cmc jnp adc repnz test imul and mov xor aas or adc int3 mov (bad) (bad) xchg mov mov mov inc mov jle mov cwtl rolb in dec and push mov xchg mov cli mov or fstps jne xor add sti out inc addr16 push xor in jp dec inc mov inc push (bad) enter sbb sub test xchg push ljmp push fsubrp pop or xchg aam enter mov jno and inc repz fsubrl jns out adc aaa mov fldenv mov aaa cmp xchg fistpl (bad) icebp int3 fs js popf dec ds xor sub adc push adc lret clc mov xor sbb cmp ss inc (bad) and add pop insb add jmp je mov xor mov mov sub (bad) or repnz xchg or inc lret dec js cwtl push clc mov outsl mov xor aaa std jmp mov sub test stc stc jmp cmp imul sarl ja inc jne cmpb dec or dec cmp jge fcomip mov iret sub dec into cmpsb mov ljmp cmp xor jge xchg enter insb pop sub fiadd dec sti sub orl icebp xor xchg ficompl dec xor shrb lret push mov xchg mov mov icebp cli fisttpll add xor loop xchg push (bad) scas sahf adc data16 push lds lods cwtl clc sub push xor pop in out popa xor pop or enter mov test dec cltd dec loope cmpsl push imul lods pop fnstenv imul cmp mov testb lock imul enter add repz sti sub mov push es ss rcrl dec cmp cmp mov mov call sub and (bad) dec jl notb xor add inc jns sub xor cli push clc ljmp jp shl cmp ret sbb cli fiadd bound push and outsl sbb decb imulb mov sub cmp rorl pop and psubusb call inc stc inc popf lods xchg ficom or and fsubp loopne fmuls jno xchg (bad) xor add fnstcw push sub (bad) in aaa mov test mov je xor xlat lds inc mov bound mov call leave cmp xor push pop adc andl pop xchg loopne fisttpl and jle and mov adcb sbb dec xor loope sti sub mov (bad) jecxz shr cld xchg cli push push (bad) cwtl sbb mov sub rolb lock popf jnp mov xor notl pop jmp or dec sub jmp jae or ret mov sbb cltd adc jmp cmc leave rorl mov mov mov ret mov dec xor xchg idiv mov jmp sub lret xchg jns ljmp (bad) fs notl xorb (bad) dec sub data16 mov mov jg mov cmp push fimul adc iret mov pop dec cmp loop (bad) out sbb add xor int3 lods add dec iret push inc scas mov jmp jo pop sarl sub dec mov pushf xchg pop out in dec addb clc xchg outsl je xchg fsubl and stos (bad) out (bad) jb fldt add les mov xlat movsb ret scas mov inc sbb inc lahf popl nop fistpll push adc imul cmp and pop push push pop dec test jle and comiss xor mov push sti imul je pushl pop sub stc add test stos sub lds push fs jl adc xor dec in mov pop push imul and push sarl (bad) adc jmp push xchg fsubs rorb pop (bad) jnp sub or mov sub sub lret and psrlw cmp stos or pop add out test mov lahf out adc adc das mov ss adc ja scas dec out daa cmp mov inc (bad) jbe sub fildll es iret lret add mov cmp std sub xchg pop cmpsl dec pop and daa adc and scas cmpsb subl dec pop test lds push jmp loopne add sub dec cmp dec adc das jmp in adc scas sub or stos mov in mov lcall aad fnstsw mov rcrb cmp xor test xor mov pop dec jge push arpl sub ds adcb inc mov in div add or out and inc fistpll jg dec mov add pushf ret loope stos shlb dec in xorb adc inc mov je push and jae pop in xlat mov jnp cltd lea jae fidivr outsl out push (bad) (bad) sub stos (bad) add (bad) enter into (bad) pop loop jmp cltd popf pop xor sub pusha push mov sbb pushf or into sbb fisttpll aad subl xor flds cli mov shlb mov idivb rclb and push pop xor xchg in pop mov and cmp mov cmp sub ret out and cs (bad) (bad) and (bad) cmc es mov xlat xor mov dec scas ret dec rcr bnd add xlat sbb popf cwtl cmpsl fisttp cmpsl and or incb lret mov js push je rorb dec adc xchg adc sbb cmp push push sub or out push std stos sub fs repz movsl pop int3 movsb pop cmp popf mov cmp loope jg rorb ror pop mov cld out test mov push mov or add sub push cmpsb push inc ret leave adc fimul jmp sub jl stc sub mov jnp daa aas mov call fisttp cmp jle xchg mov adc loope loop,pn xchg or mov mov or push sti insl xchg ret sub sub sub mov add shr jae adc xchg test inc jge xlat jbe test pop in lods pop mov xchg push dec mov dec (bad) data16 jmp pop mov lock ret (bad) ja mov scas cmp enter mov xchg repz adc addl inc mov push out push dec mov (bad) mov fistpl cmc mov popf inc jle xor call jecxz lea adc fdiv adc movsl test out lds pop push out mov mov sub sub push sbb repz mov imul movsl pop mov pop pop mov dec jecxz pop popa add pop add mov iret icebp or hlt jmp dec mov fisttp (bad) or ret lock stos mov sbb sbb lds lcall mov add dec test scas lahf sahf dec pop push out add fpatan jb ljmp or pushl xchg xor pusha xor (bad) push add push xor inc add sbb mov out sub ret add ds cmpsl push rcrb ficoml inc pop popf loopne ljmp loope les cltd cld fs fs stos xor mov in cmc mov in fnsetpm(287 jg aam cmp mov xchg lret mov (bad) ficom fadd pushf xor lock cld pop jmp mov fst decb loop and daa adc sti (bad) xor mov mov loope xchg xchg sarl cmp ljmp push or sub stc mov fisub mov dec aad mov sub push sbb iret popf fildl in xor into inc xchg lcall lret sbb int3 (bad) (bad) push mov xor add mov (bad) jl negl fincstp xchg or (bad) mov xor and lods lea xor sub mov imul div jo dec sub sub and (bad) daa out xchg dec repnz xchg mov cmp pop in pushf leave xor fldl xchg idiv out loop std fs pop or lret sbb mov (bad) mov insl and hlt push pop flds xchg test pop scas mov xor sahf mov and or enter adc mov iret dec sub mov and xorb into mov arpl sub sub xor xor mov sbb jg clc movsb idivb inc mov (bad) xor bound shr mov hlt xor loope mov inc sub (bad) (bad) mov push mov mov test xor neg dec bound int3 jmp bound sub (bad) mov lret scas lret xor ljmp outsl adc mov push fs inc leave cli jmp in push lahf loope loope mov push jmp fsub mov das idivl dec hlt cmp sbb or mov out lods arpl jecxz (bad) mov jmp jmp incb popf int3 mov cmp pop (bad) and lock sbb cmp cmp mov scas (bad) mov icebp test push insb imul ljmp xchg add pop insb and jge lahf sub call lcall rcrl mov add sub ds sub inc add xchg dec inc call rcrl xor outsb mov xchg es cmp push pop sub or aas xor stos je lods mov add mov (bad) sub sub cld imul jl cmp push pop fdivrl cs out or (bad) mov sub pop and jmp (bad) repnz loopne out sub xor cs dec leave sti sub mov cli jmp and xor hlt sbb cmp mov mov lcall and adc pop jmp repz stos sub ret leave lds push (bad) loop int3 xchg add cwtl sub hlt icebp fwait in jmp push pop enter dec add wrmsr pop cli cmp test sub cmp data16 inc push lret pop mov adc (bad) cmp movsb adc pushf cmp sbb or call mov mov inc outsl jbe push dec cmp xchg mov sbb mov jmp adc sub ret rclb aaa dec out pop test das loope xchg mov ret rorl mov fcomps sub and test push mov lods sub enter leave push and in mov popa or adc push push push mov test mov movsl es (bad) jne jp movsb mov loop rorb mov aam push loop test and xchg push loop and call jg mov pop cmp and fildll push pop lods not lods dec fadds or push stos test add and dec and leave fs std dec call js test loope sbb lods xchg daa and jne mov lods lahf enter rcll xor inc sarl push pop xchg xchg jb roll and test cwtl mov outsb mov popf pop daa jle loop mov (bad) enter push aad bnd cld adc cli popa sbb icebp inc loopne mov test jae lcall lret inc test inc jmp (bad) cwtl dec in movsb lret dec sub or sub popf in rcll ljmp dec ljmp cmp lcall jns xor icebp xor ds dec push and iret lahf mov ds bnd mov stc rcrb (bad) (bad) push repnz imul in push push lds cmp scas movsb adc xchg xlat sbb rolb jmp jbe in jns push aam gs scas pop add sub test (bad) sahf jmp test clc lock (bad) arpl fs pop cs shr push scas adc aaa hlt imul in and in fnstenv mov add gs add pushf repnz test push call dec cli lret xchg int xor aam rorl mov test xchg fcomps sub sub xchg (bad) daa adc sub and icebp cmp test cmpsb and cmpsl jp (bad) (bad) mov (bad) cmp popa movsb dec xor decb xlat cmp loop test pushl cmp in jns clc mov (bad) fstl ljmp xchg lret repnz sbb loop lds call in loop mov insb jmp mov inc xchg sarb mov ja jmp test mov add sbb or xor (bad) ror (bad) icebp lret jno lea shr cmp daa mov arpl sbb test mov xor loopne lret xor cli sub xchg pop cmpb sub shrb mov push cwtl in inc lods ja xor (bad) das rcrb jns mov scas cmpsl scas sbb lock pop xchg rorb jmp and mov pushl clc push add add push aad leave jecxz loop ret or and cmpsb pop and aas sub mov (bad) or pop (bad) iret xchg call add jg jle fld jmp sbb sar jge pop das adc mov lea cmp pop imull cmp mov add shll leave das scas cmp jg stc mov mov dec jmp sub bound scas cld dec jb insb in xchg icebp movsb rcll xor jb (bad) mov add pop (bad) std jmp cmpsl xlat push jne mov sub cwtl jge or lock fdivrl mov movsl add and or xor adc inc adc sub mov or add pop pop inc ret cld enter xor or pusha mov pop sar xor lret pop adc cmp out xchg jbe push add mov push pop mov push adc es ret adc mov xlat push das rolb add and adc adc mov fsubs (bad) xor adc push dec mov addr16 mov pop push push flds sub mov add stos mov fbstp clc pop sub gs icebp hlt das clc inc mov rolb mov and repnz mov int3 cmpsl ss push fsubrs jmp (bad) pop stos and or xor push pop jmp icebp cmp (bad) add push (bad) jb add cld inc add cwtl jl andl lret lahf bound testb push xlat inc and aaa xchg das faddp add push mov xorl lods sub mov pop icebp mov (bad) stc jae sub xlat jnp add xlat fnstsw sub mov js sub and xchg push inc int cmp test rcrl lahf push xor adc (bad) jb sub (bad) push repnz mov sahf shll mov pop pop fisubr push or dec jmp aam lcall push and xchg aam imul das ja sbb outsb dec ffree cmp pop into mov jbe cld lcall ret push add pop xor mov sub inc imul lds adc lahf dec push mov mov inc dec dec loope (bad) shlb notb dec or out mov mov jg xor push and pop mov mov inc lods repz scas fsubl jmp add sahf lods xchg sbb je and jmp xchg mov push dec adc push movsl jo dec pop add std jecxz jmp mov mov pusha out sub jno sub push dec notl (bad) (bad) imulb pop mov xor imul nop pop mov repz lds sbb ret xor in hlt xchg test jne adc sbb sub dec cld pop jecxz sub loope jecxz repz jmp push cmp popf lahf (bad) pop lock push cli pushf cmp xor hlt rcrb (bad) shrl mov fwait lods mov repnz out pop icebp lret das out sub ds hlt icebp fsubrl mov aaa out pushf test dec sbb call gs idivl adc into adc sahf dec jmp in cltd dec pop pop aas mov popf add inc push cmp add aas loopne lret out jmp push pop push ja mov pop cld jg stos pop repnz pop icebp or push mov jmp fs int3 fcmovne mov ret dec push jg ret or fimull jno dec pop sub xchg mov jp mov je int loope cs (bad) xor and cmp sub xor lock pop sub inc lea mov xor movsb and loop ds pop or xchg decb in jecxz fidivl (bad) int3 sbb (bad) pop fsubs jmp xor adc scas mov daa mov (bad) repz sub sbb fsub ret stc or scas fst cs adc (bad) mov pusha pop or call push ret inc inc scas mov dec mov in or jp out rol gs adc sbb dec addr16 add xor pushl add leave (bad) and jns (bad) xor lock sbb fdivrs test xor in mov gs lock lds out js and fidiv mov pop repz gs out sbb daa adc sub xor sub leave cmc jae daa aad ss in lcall adc push dec (bad) daa ja adc stc mov in cmp xchg (bad) jb sarl movsl push into nop fisub adc inc inc sar lret lods arpl xor jmp scas mov aam js mov push push enter popa sub inc outsl cmp xor adc dec lsl (bad) scas sub out xlat sub insb and add je dec lret call xchg jo or inc or and les sub cld pop mov imul pop push mov imul xor mov push xor dec lret xor test dec sbb lahf pop cmpsl xchg lret fistp or push (bad) mov loopne aad sbb lret xor cld adc icebp inc loop test sub rep push or out xchg mov cltd hlt scas test or add clc repz push lds pusha and imul add jl andl push es fidiv xor jo push or or (bad) push out add test movsl idivb addr16 mov loopne rcll clc cmp ja mov fs pushf stos out sub mov movsb das sub mov loope lret (bad) jb pop out and jp es xor jne xor in negb loope xchg ficoml imul dec test mov leave scas add and or mov pop in cmp jbe jb stos dec pop lock dec out jmp out push mov xchg ljmp (bad) jnp jg sbb stos bound mov daa jmp call imul in sub sub sub jmp gs pop das mov sub sti fnstsw pop mov mov add jne cmp jle jo data16 adc xchg int xor push mov (bad) ds jle cltd (bad) xor dec ret movsl lods pop movsb add add sub inc (bad) fs adc or lds sbbl adc mov adc mov outsb xlat out enter idivl ljmp xchg pop or or cmc jae xor sti les or xor sub js sub scas mov pop jbe push (bad) sbbb add or add mov inc and rcl add int3 icebp aaa xor xchg in adc out fdivrl inc fsubr xor xor fs leave dec xor mov rcrl cmc jns dec push inc sub inc in out mov hlt or (bad) ja mov add popf lcall mov or iret xchg shrl push sub add ret in les mov jo shll mov ret imul push scas lret jp pop stos test or sub xor out cli fimull dec jecxz sub (bad) or xlat push pusha jo inc or sub sub sbb sbb xchg iret pop mulb repz sub mov sub adc sti mov (bad) xchg jns gs and xchg fistl mov (bad) mov sub push leave ja ds out sti sub add dec jmp shl push xchg xor gs pop mov pop ror mov cmove ret leave cmpb jle push lahf adc cwtl push ret xchg adc xchg sarb (bad) rep xor out and mov sub mov jns pop mov cwtl fsubrl sbb cwtl outsb out mov cmp sub lods jbe stos cmpsb fcoms stc jo cmpsl push or xor loop mov add leave add data16 jbe pop sub xchg push and loope mov pop enter mov les jns es jnp lcall movsl into icebp pop data16 sub jge lea adc sub ret pushf movsb inc push xor (bad) dec adc mov jmp or out mov push cmpsl inc cltd add dec sub pop mov push jp or mov pop mov in dec add mov and add cmp std xchg std mov lahf jnp push fimul cli jne shr push dec push push sub stos jne scas bound mov inc mulb sub repz shrl (bad) jno jg test mov sub add pusha scas out xor movsl mov out (bad) insb lahf xchg addr16 into mov jb sbb out and pop adc sub or cs mov xchg decb inc or fsubrs mov in push repz xor mov xchg sbb or aaa jne sti pop iret pop stos push movsl dec cmp add xlat (bad) xchg push and sahf adc jmp lret stos mov dec jmp mov lods lret inc dec cmpsb movsl pop jecxz pop xor enter icebp leave movsl mov pop push lret das xor cmp add and pop lods add sub mov adc mov add js xchg sbb push push es mov lock clc repz push add sub sti pop and push xchg mov mov or push lds int3 jb ds leave dec mov lcall jmp scas decl fidivl cmc stc (bad) bound (bad) test jmp mov xchg iret and jmp int cli jo mov push popl ret enter repnz jbe pop outsb cmp xor daa iret inc out mov scas mov bound ljmp repnz jecxz ret jo (bad) ficomp jmp jg pop add sbb dec ljmp scas repz fucomi pop ret notb xor in mov ret cld fstps je dec mov or or test ficompl icebp hlt inc pop mov xor push mov or mov sub xchg insw mov repz add fnstenv adc dec xchg fdivs cmp sti sub enter int3 aam inc outsl xor ror cmp cld push dec stc push rcr dec mov mov setb mov sub or sub xor lock clc loopne mov push mov inc dec ljmp sti jl pop loope xor add xor or sub pop adc movsb push sub arpl mov mov push sub lods fdivrs pushf insl lret inc cmp lahf pop push outsl enter inc inc xchg rcl into les jge push pop ret insb jmp shll sub add jecxz popf aas daa ds lods movsl fildll movsl (bad) jl (bad) inc or in cwtl das ljmp repnz ret adc push les into out idivb test pop mov jmp movsb dec in in cli cmp idivb outsl int3 adc sub (bad) or mov jne daa mov inc push dec jecxz sub or fucom pop jbe dec aam pop inc movsb adc or ljmp in jmp ficom sub push daa sbb (bad) imul or sub loop shrb fnstsw lea ret pop insl mov or sbb jne mov cmp push (bad) xchg jmp scas test add mov cld push pop push insb jns inc andl mov jno gs jne aad adc xchg sti lret call cmpsl int add adc mov idivb xor pop xor out repnz test pop push push xchg shr pop jb hlt pavgb rolb movsb or stc aam cmp iret rclb stos lret mov shrl pop xor mov mov call bound pop andl push sub pop add xchg lret out lret inc aad xchg (bad) in ret cmp mov xchg mov sub xchg xchg cmc add test or loope outsb call and sub stos sub (bad) sahf pop dec xor sub xor cld adc xlat in fist into and mov or data16 and pop out pop icebp cltd sub xor push xlat cmp lgs jns jp out idivb xlat xchg mov cli pushf pop push xchg adc push sar out mov (bad) lret lock shrb cmpsb pop dec jmp subb dec or pop adc mov rclb sahf out inc push (bad) icebp push (bad) loope pop mov sti mov and pusha test xor fstps mov jae cli stos xor pusha dec push cli lret cmp ror jg ds and cld scas leave fbstp lods (bad) cmc mov add pushl dec sahf mov pushf mov int3 popf mov cmpsb imul das (bad) lahf inc pop mov (bad) push mov repnz test mov loopne jno dec int3 jnp shll sub (bad) cmp nop scas enter icebp xchg inc or mov scas pop cmp mov (bad) aaa dec or into rcl stos cld imul dec outsb dec add test lret push or adc xchg cli ret push pop or sub sub pusha xchg std (bad) ja mov xchg mov in in ret cmp lret pop add jne out dec in lea (bad) xor or stos ret jbe outsb dec lock in das jnp or and jnp clc push divb mov shrl mov dec insb push sbb add push aad imul insl movl cmp inc pop cmp cs sub sub cs divl imul adc rcll call jnp cmp jg dec or jecxz pushf mov aad pop aas jl xor loop fstps inc rorl and daa sbb bound hlt shrl ja xchg std sbb xor mov mov stc stc adc jp mov add loop mull neg push shll mov daa fdivs sbb sub lock adc clc mov nop daa sub sbb or dec and mov sbb lods and pop and xor push leave repnz mov scas (bad) andl or add ficom out mov push outsl xor and ret add mov jb push fdivl mov sbb or mov mov outsb dec ds bound mov xchg xchg divl sbb cmc mov test aam pop into loop lds pop scas xor sub les popa addr16 imul lret sub add sub add cmp das mov adc stos mov leave out pop jl push add or dec mov push jmp lret xor insb xor cmpb adc mov enter inc mov imul fnsave and dec sub out ljmp ja (bad) push jg inc xchg mov sub std sub dec xor cld sbb adc ljmp and sub push xor shr add lods mov lods add cmpsb mov pop enter adc sub call add adc xor arpl sub dec sbb sub adc int lcall mov lret or xchg in lds mov bnd out lret and daa xor pop xor sbb sub repz mov imul xchg mov repnz fsubs shll mov mov cwtl and mov mov pop or leave es mov mov push jle push xchg repnz mov xchg call test pop xor stos nop das ss inc cs cmpsb and mov and dec idivl cmp lret sub out enter shll loope fldl fsts ret jle shrb xchg pop add jmp xchg loop xchg push aaa jmp test cli outsb mov fbld adc xor sub rorb popa loop push jne jmp cmp lret rclb xor mov mov cmp out xchg repnz jp imul call sub xchg add pop sub daa ficompl daa xor clc add push mov rorb push aam pop mov addr16 daa mov stos popf xchg insb mov arpl leave xchg jns xchg pop cs (bad) push push iret ret jge lods test mov pop mov out xchg push mov into mov fwait pop daa jl popa aas mov jo imull (bad) xor ret (bad) cmp fucom pusha lods push int jle jae hlt mov jno imul daa les or pop and jmp push add push add stos jbe lret (bad) mov jb dec dec loop aad mov ja sti movsb test pop mov adc and inc mov lahf (bad) jbe or icebp xchg xor push push int3 jle adc (bad) or ja cmp (bad) dec jmp test add and adc adc je jmp dec and sub int3 cmpsl sub call cs dec leave std inc push das jbe adc lcall sub icebp jl gs stos les (bad) mov inc nop and jle cld js clc test test (bad) hlt push pop in mov rolb pop shrb xor push rcrl jg cmp and mov mov icebp das repz cltd pusha insb sbb addr16 inc and or or cmpsb in into add inc negb je jae loope,pt loopne aam in mov fnstsw mov movd inc push dec aas fldln2 jmp stos lcall popf decb pushf dec mov inc (bad) xor mov jo lods jnp ficoml lret nop dec enter pop sub push xor mov lea sbb mov pop jnp xor les rcl sbb add sub sub into or lahf repz mov pop mov daa dec and sbb pushf mov or add mov mov xor xor add repz and and lret add and pushl add pop daa (bad) ja lds or pop in mov dec sti adc sub in push ret xchg push push imull aaa jecxz cmc cmp lods lock xchg lcall data16 mov sub xchg lds je into sub dec mov jg cltd mov pop jae pop stc jmp lret into xchg cld add test dec bound push or imul pop (bad) sub mov mov stos add out or jle cmp fisttpl ret and call xor jmp jecxz or stos daa sbb out xor mov in push jnp int3 adc push mov jg stc mov adc xchg jnp pop add mov mov stc mov rcll add into mov sub push aam xor ficom mov dec mov mov sub or push and sahf xchg leave push idivl imul add (bad) xor sbb stos pop bound movsl pop std imul enter xor mov mov xor jmp jmp dec mov lock test inc out pop jecxz dec push sub movsl mov sbb test xlat sti lret sub out aaa mov sub int3 mov leave jne mov push or leave sub fiadd pop enter ret movsl andl xor jmp xchg push shrl lds cmp pop add idivb mov mov repz lods push push pop mov mov popa push sub icebp push fxtract lods flds jae test pop xor add sub test subb cld cmpsl les loope and or mov inc cmpsb xor mov add mov sbb in (bad) mov adc mov xchg rol and mov lret xor cmpsb jge jns mov sub adc push add sub mov or xchg loop lods mov and out dec pop lret ret pop stos and pop daa lret stos cmpsl push sub xor push inc stc cmp xor sub cmp jl das lcall fidivr es and mov popa cli mov xlat jge cmp add inc mov shr in and xor adcb xchg and je push push (bad) sub pop and subl bound fistl movsb pop sub shll rolb outsb enter dec cmp incb mov add sbb xchg jecxz cmp mov je dec xchg jne pop scas lret aad fimul mov outsb mov dec xlat orl loope pop sub lock pop mov mov xlat push xlat mov (bad) and cmp test ljmp push inc pop and or mov (bad) orl ljmp xor push pop xor mov in imul sub gs push cmp xchg add (bad) in mov lret cld xchg cli cmp or cmp in jnp mov lea sbb push xchg ret cwtl xchg out lret push mov push cmp repz sbb dec ljmp mov dec jg sub ret mov in ret adc insl lret shrb arpl inc xchg cwtl push into add mov movsl das push cmp icebp mov add pushf inc ljmp jmp loop sub out jns xor jmp lods into dec inc inc mov fs mov mov push cltd cmpsl sub loop rcll pop push out pop lret and test gs mov or cmp pop fisttpl adc mov xchg mov ret sub cltd rcll das or xchg inc jmp jne (bad) dec pop ret and daa sub fisubr ret je lret push mov rorl add mov stos out pop xchg rolb les mov or out adc lods imul and mov inc shll dec lock xor add loope loop xchg adc jno jge test inc sbb movsb ret cmp xor shrb pop mov or sbb cmp add scas xchg fstpl fistpl xlat int3 and mov call fimull outsl mov pop rep mov adc imull mov adc cmp loop std shll out roll push aas iret ficom (bad) xchg push and sbb (bad) lret movsb or rcr mov adc cltd dec insb pop dec jo sub mov and inc bound cli into sub add or jmp dec mov xor jns jp sbb stc dec into adc popa wbinvd sti clc cs pop ds pop mov movl ret jle pop dec test add push cmp repz repnz call pop popf jae into push shll sub lock mov sub stos out shll mov sub pop or outsb push fistp ret sub mov mov mov stos mov ret jmp hlt and data16 aad rcrb test mov sub popf (bad) insb dec or push adc dec push cmc icebp or fdivp into ret sub or add daa sub daa inc sub (bad) rcr push (bad) mov std das out adc jne lods mov daa jl call pop jmp (bad) fnstenv cmp das jmp int3 arpl jle or (bad) fdivp (bad) mov fimul add push and lods cmpsb mov pushf (bad) loope add ja mov das bound popa daa (bad) jg fcmovnu sub jns lds mov jg loope mov adc loope dec ja xlat movsl cmc sbb adcl dec lock popf call shrb rcll pop xor test pop loopne out ffreep xchg or mov push push mov je sub xlat mov sub daa pop mov (bad) mov mov sti and ret cmp repz lahf adc adc xlat or pop xlat or jae and cmpsl into mov sub push mov popf lods out iret dec lret jecxz add push dec test aam out mov xchg fldcw sub sbb rcrb push mov and pop fimull aad sbb jecxz es push inc lahf ror dec pop ljmp (bad) in mov mov test sub cmp lea mov add les mov xor das mov cmp and xchg outsb fs mov xor and sub mov adc out insb cmpsb add ret leave out insb addr16 (bad) into and sbb inc xor push mov push andl dec pusha jb mov das hlt rcll dec lret jmp addr16 cmpsl dec aas ss xchg in or dec (bad) xchg lds mov adc add cs push jmp ret sub lock add inc out lods inc mov pop dec mov test mov adc mov lahf inc stos xchg idiv imul into out adc or cs mov adc xor pushl mov mov dec je push mov rorb pop test mov push sub adc (bad) ja push scas ja xlat in or add lock pop xchg lcall push xor jo cld mov pop movsl jg,pn loopne or xor sub popf dec xor and (bad) dec out stos mov adc and jge enter mov push scas sub sub xor sbb mov icebp mov sbb dec cmp (bad) and fild mov cmp repz mov pop add insb enter adc test mov (bad) icebp repz push mov (bad) mov das and pop xchg fs and (bad) leave pop push insb add cmp and xchg loopne add push pop jo sub enter jns iret push sub aad jne data16 cmp lds (bad) mov pop in cmp imul add cmc adc daa mull (bad) push dec sub push add mov lret mov pushf repz mov sub and sub jne push ret and sub out int3 bound pushl pop or fimul push pushf add in sub sti lods enter push aas mov mull push out dec pushf mov xor xchg lds fldenv jb stos mov leave mov leave pop mov sub bound movsb push xor jecxz fist icebp push jno dec (bad) iret dec pop mov xchg adc cli xchg dec das xchg iret push push xchg or jp or pop test loopne and mov push (bad) sub xor dec cmp or mov dec and out jmp gs decl pop sbb mov ljmp out mov xor and repnz xor sbb push and xor test frndint and fs shr xor out int3 mov mov add adc jmp dec mov repnz inc and mov (bad) dec or dec nop (bad) test sar cmpsb (bad) dec cmp sub in pop cmp mov jns les mov lret pushl sub cmc out in scas (bad) and xchg aas mov cmp dec stos je and add ret call outsb push aaa lret std jecxz rolb mov adc xlat mov aas push cmpsl iret push in xchg (bad) cmpsl stc dec movsb sbb mov push and loope cmp xchg push adc ret fldpi jg cltd divl xchg adc rorl dec inc das call jmp sbb dec pop adc mov or dec xlat loope xor jnp pop adc cltd mov jmp ficom jmp or outsl xor push cmc pop dec cmpsb and into dec inc dec add out add mov stos and arpl sbb xchg jns imul scas mov lret imul leave or addr16 (bad) xor pop mov ja outsl or fstl shrl mov in movsb mov repz out out sub adc sti jecxz push and scas fs (bad) pop sbb ret ljmp outsl pause rcr jns xchg dec lock call repnz lret mov cltd imulb jl icebp jg in es aas dec jmp adc push dec or sbb fs mov mov cld cmp sub inc mov insb lret ret adc dec sub push lea and xor xlat xor cmp jbe fldl ljmp cli lods lahf fnstcw fadds cmc jecxz dec push call mov mov push pop fistpl (bad) pop or inc sub mov pop mov outsb out xor xor idiv add sub xchg jns imul div mov movsb xor fdivr das pop fsts ror xchg jle adc ret bound (bad) mov outsb repnz scas xor cld or xchg sub sub (bad) mov mov andb dec inc mov cmp shll in (bad) hlt jmp mov xchg mov ret (bad) loop mov pusha dec inc pop mov xor int3 sbb jmp out sub (bad) jno add jae or fsincos sub mov fisubrl iret dec call mov or add pop ja out das adc repz mov and push or call mov scas das (bad) jbe inc and mov fstpt sub std jno dec inc ja mov ss jne movsb adc add pushf dec out mov add pop mov cld jnp loope jns dec std in jb cmp icebp sub mov popf and push shl push adc leave mov mov nop in ljmp into cmpsb add xor adc jno int3 adc scas dec ret jne ret push jne enter int3 mov inc jno inc into int xor mov (bad) fs jge fisttpl lahf fdivrs inc pushf xchg and ljmp stos fsubrl mov lock xchg jns (bad) sub int push ja pop repz scas cwtl notb adc sub mov insb sub lret lret fs js inc (bad) sub jns push sub mov (bad) ret pop inc cwtl cmp call sbb mov cmp add or cli push xchg mov lret pop and pop loop add mov dec ds jbe leave icebp adc push iret and fs pop icebp pop into lods mov fisub adc notl sbb xchg jg fldt lcall xor sub shll jnp sub clc repnz pop adc cs add xchg pop and leave stos sub xchg cli test jb add sti movsl pop or fnop popa cmpsl (bad) cmp mov jne leave lret push add dec mov jae xor or jge jnp or fbstp mov daa jne pop xchg idivl out lahf push push dec pop push aam (bad) push sub xor fcompl lea out xor daa pop adc nop mov sub xor ret fnop mov sub loop push mov dec out fbld in lret lahf jne bound sbb jns cmp add sarb mov dec stc adc push jecxz in sub aam gs and cld jmp mov ja add cld adc pop jns imul fmuls sbb mov jns pop out jmp in int aas loop test clc mov jecxz scas pop sub mov pop in pop cmp divb xor (bad) sarl mov cmp add mov push out or rcrl movsl roll sbb rolb jg jb cli mov and cltd or xchg xchg stos jge imul aad cmp insl sub jbe lds jecxz (bad) xor push jl push iret int (bad) ja sbb mov iret lea das xor mov or shll call jle cs lret add scas fnstcw sub imul dec (bad) (bad) cmpsl add lcall inc pop mov pop cld sbb push daa add (bad) std xor ret fcoml leave mov push mov out gs lods cmc lcall sub jnp dec mov inc aad or aam pop sbb or cltd popa push sbb out dec fidivrl mov and cmp xchg mov xor icebp jo (bad) in popf fist jmp ret or dec sahf sub std rcrl lret hlt cli lahf jae pop ret testb ja cwtl stos out dec mov inc mov rclb (bad) dec cmp adc dec lret cwtl pop jmp push pop mov xor repz add sub mov (bad) sti leave ret dec loop dec adc cmp out xor leave mov xor push jmp ret mov shlb mov mov popa es lds jg popf imul jmp lds pop mov mov and rorl sub aas xor sub mov ja cs lret and shrl xor test mov stc jg adc lods aaa mov adc (bad) fdivrs gs add sti mov mov pop lret xor or pushl push add stc xchg mov xchg add mov cmp clc push test insb sub pop neg test in jecxz pop js gs pushf jbe das ret call cli mov xchg jbe repnz push jo jnp dec ljmp jmp (bad) pop sub sub fldt das cmp add mov cmpsb inc sub insb or pop mov lahf loopne repnz dec ljmp push ljmp and xchg ret (bad) push dec fild sub fiaddl mov movsl cwtl or fidivl sbb (bad) cmpsl fistpl scas divl dec dec insb pop cli push add jno push inc jns mov xor cmp add lahf shlb mov add cmp je push push xorb das stc jne xchg pop shrb movsl xlat or push adc (bad) jge iret mov jmp stos in push mov pop addr16 jns xchg imull dec xchg test cli mov rclb jp popf (bad) loope sub lea test mov sub shl pop jp xchg jecxz enter push inc icebp or mov iret std in cli push adc movsl cld popa pop loop pop fsubl pop lock jp mov xor xlat outsb negb fbld out cld imul test pop sub mov cmp mov (bad) mov or adc dec dec or pop and adc lret pop ss mov mov or xchg es cmp out lret fldenv in daa pop into cmp repz adc ret jecxz addr16 rcll xchg pop orl or add dec and loop addr16 push andl push imul ljmp xlat and sarl fs or pushaw fsubs popf xchg adc sbb inc mov into jge ja add mov sbb test sti les mov dec sbbl cld out sbb mov xchg xchg bnd xchg xor pop (bad) leave out ret add dec xor (bad) xor or adc mov popf jge sbb pop cmp and adc fstpt inc loope testb (bad) stc mov xchg (bad) ljmp pop cmp push add mov lret add aad shrl out pop xorl mull js out gs sub in xchg je or xlat pop jnp pop cmp pop mov outsl sbb sub jns xor xor stc jg out mov dec arpl sbb sbb imul jae dec clc sti lahf fs shrl mov rcll sub rorl (bad) int3 lret test loopne sub popf add sbb inc movsl push jne jns fstpt ror xchg ret dec mov stos mov adc or cmp leave sub sahf stos mov sbb outsb and dec stos mov dec loope lret mov ljmp or movsb ret scas loop fnop pop xchg mov fld mov push jb test cltd (bad) xor add cmpsl pop cmpsl dec lret sub fs pop add cmp cmp add scas fs xor ret push xor repnz sbb clc jmp push or (bad) sbb xchg cmp mov (bad) push popf lret xlat inc dec push jl push and sub or sub xor gs test rcll jge cltd cwtl je dec fistl push xor lret into pop lds fldt bound xor idivb out das (bad) push sbb cmc ret (bad) in adc adc enter dec les xlat cli mov nop push cwtl cmpsb shll stc pop mov dec fnstenv test lock not add insb lret cli pop rol and xchg inc repnz fstl sub int icebp enter dec aaa pop sbb icebp inc adc iret (bad) gs sub in fldenv sti mov mov inc dec mov add push scas cmp jne into jg sti and into mov mov cmp pop xorl push pop inc dec fcoms fadds mov repz mov or std leave cltd sbb in jo imulb (bad) mov imul rcr mov jne jae pop imul outsb test das jbe xlat lods sbb mov inc in scas es cmp pop jnp (bad) rorl (bad) outsl and mov and xchg jp jo push jmp pop (bad) mov outsb sub jnp aad les ljmp pop lock mov out outsb repnz adc (bad) mov mov xchg mov mov hlt pop jno js lret or ret pusha daa push iret hlt pushf or inc sub adc pushl sti or pop xchg iret imul mov push inc mov jo aaa or ret (bad) and movzbl loop divb repz lock xchg xchg pop xchg cltd addr16 insb and mov test sbb gs movsb faddp mov loopne sbb bnd ret and enter daa sbb or popa cli je out mov cli ja xchg mov cli fsts cli lret or (bad) xor mov mov repz mov mov lods out jne jecxz dec xchg cs jmp shrl fidivrl (bad) rolb std rcr repz push testl bnd scas push inc rdtsc (bad) mov add adc sub cmp cmpsb jae call sti clc and dec repz sub add daa sub ret jno xchg or out pop jns xor pop stc data16 sbb sub mov les (bad) adc inc or pusha sub fisttp dec sti jne lods int jmp sbb arpl dec sub ror pop icebp stos sub adc loope jae add and ds sub ficompl (bad) ja adc sub pop xor mov jb dec mov mov cmc lret fsts enter xor jl cltd into jb fiadd movl lods pop ds repz or push and push push pop lock (bad) repz xlat xchg or mov push insb clc mov inc into stc faddp xor cmp cmp mov mov jle in ja xchg pusha add or jae mov xchg lds cmpsl jle lret push fimull scas sbb in das cmpsl adc and fldcw push sbb and dec sbb iret das clc inc movsb (bad) in loope adc add and xor and daa (bad) data16 (bad) mov pop icebp or aad sti out jg icebp sbb or test or mov cwtl iret add add pop mov (bad) imul movsl mov inc lret mov push pop ljmp dec imulb out mov fsubrp or sbb iret movsl fisttp std adc and dec clc pop jecxz cltd mov sub cld sbb aam push or push adc mov das repnz mov add add mov fidivl rorl (bad) sub xchg rclb pop sub (bad) dec push fdivs pop dec (bad) and cs test in or jmp aad sbb and and outsl ret push (bad) arpl subb dec out sar inc call enter outsb sar inc mov repnz sbb pop mov lahf dec stc jmp sti push shll fistp inc push and mov xor jnp pop xor int outsb sub add fidivr mov sbb push pop fldenv mov lods xor insl repnz loop push mov pop xchg icebp mov xor jecxz into inc xchg fnsave push push ret test add push movsl cli cmp leave or mov pop push bound sub rol sub dec push notl sar fscale loope or xor test dec push dec imul jle and mov out pop add (bad) rol adc mov cmp and sub out sub dec lret loop data16 mov and sub pop and sub lret ljmp xlat and das sub push xchg or mov and jnp in sbbb jle pop (bad) out or addr16 out or or (bad) add mov scas sub xchg out or lret repz jns or xor cmp adc push xorl sub xlat xor cwtl jecxz gs cmpsl pushf ja sbb in ret scas cmp icebp pop sub add ja mov lahf rep adc dec mov cld popf shl dec imul ret pop movl cli leave (bad) cmpsb push dec push jnp movsb jg aaa arpl jle push sub out stos adc popf push cmp jge xchg lret gs imul or adc xor sbb or pusha fldcw scas in xlat pop imul cmp outsb (bad) test inc sub dec mov mov daa and jnp jmp jno dec jge daa adc dec mov leave jno ds pop scas shrl mov mov sub sbb pop jmp cs sti sub xor fnstenv push sub sub sbb mov lret into std sti xchg test mov das dec cltd cld adc mov xchg repnz xlat xchg mov pop cld jmp ficom loope cmp (bad) mov xor pop das daa mov adc insb sarl mov fcomps shrl stc addr16 test xchg mov clc lahf xor sarl cwtl sti divb jmp movsb imul outsl xchg in popa xchg mov (bad) pop inc ret xchg fnstsw cmc push insb ret mov ficompl or adc or dec lret mov mov lcall movsb lea out dec cmc stc mov mov add sar cmp into xor sub cmp loop inc jno dec icebp mov push (bad) inc add or sbb sti push mov aad orl pop out das ljmp sub fldenv insb stos mov add flds jne cmc std cltd test ljmp (bad) sub xlat and es pop ja cmp in sub aaa movsl mov mov inc repnz jp mov sub and repz xchg imul mov mov cmp mov jmp test mov mov sub ja pop inc cmpsb push es push (bad) and repz in (bad) dec mulb arpl push adc ror andl cmp mov in mov roll cmpsb xchg mov push push mov icebp cmc aaa sub fwait std call mov and inc in cmp dec push and xchg cli cltd xor sar xor dec lret inc int3 ljmp daa xor dec xor cmc xor lcall dec ret mov mov cmp inc imul (bad) pop push insb jge lahf dec lods add aad daa sub ljmp out sub adc mov xchg lahf cmp mov adc ret mov lahf scas push xor stc dec cld pop ffree mov xor loope sub inc pop mov mov inc sub pop mov fisubr ja out cs and shrb std adc cmp rcrl out test jb fimul adc fistp dec je jo and (bad) xor (bad) adc add cld mov mov inc fdivrl iret stos faddp add mov or fsubl sub pop mov xchg mov data16 or aad mov adc shll in test sub push sub pop mov pop push (bad) add and ja inc test xor scas adc out dec pop (bad) cmc adc xchg dec dec xchg push fistpll pop or test mov inc pop fistp daa pop dec adc out mov push and shrl jl iret xchg int3 ret out mov ret jl es sub mov cmp or pop and sar mov das test jno mov inc mov xor cmpsl xor cmpsl inc inc sarb pop (bad) and cs sub xor stos mov cmp setl in cwtl pop ret xchg aad cltd xchg mull push jge or (bad) aad pushf imul sti sub rclb scas ljmp dec mov adc sub ljmp xchg incb sub jns xchg mov add bound pop mov pop mov cmp adc inc push pop nop mov lods cs rcr out jp idivb push gs jmp ss cmp jnp and xor pusha seta mov xor cmc jbe push or or repz loope xchg rorb jno lds jne inc je pop mov cvtps2pd mov dec lods mov aad cli (bad) loop fimul xchg adc pushl test ja push cmp fdecstp add mov or adc dec jbe pop rcrl lahf aam leave fs popf (bad) or sub mov xor sub dec or rol lea cmp lds mov sub and jb mov add jle lret insb cmp xlat call adc out stc xchg je ficompl movsl mov add mov push addr16 xlat stos flds insl xchg (bad) xor and jecxz adc lock jbe xchg enter mov sub call jae inc jg daa cmpsb or sub xchg dec jmp mov jmp in add cmp lret jne fsubrs and (bad) int3 sbb iret mov dec into dec dec fsubrl aaa xchg add xchg add push sub or cmp inc xchg ja pop (bad) lods stos xor jecxz enter sbb cmp jecxz jl mov xchg test add flds jg (bad) test jle cmc push insb mov leave insb outsl lds mov jne leave sbb adc sbb out adc icebp mov jecxz dec out mov movsb inc cmp (bad) jnp or mov movsb ret adc lret in sarl sub or add jg mov lds (bad) ficom and push mov scas and outsb lea mov or add mov push enter sarb fnstsw or xchg push or stc mov cmp dec mov xor inc push mov lods jbe icebp aas mov stc mov adc movzbl inc mov repz pop fwait (bad) push iret sub and adc sti gs outsl call mov cs sub xchg jle cmpsl js mov and push inc sarl roll and push and jle and jle int jg sahf jge mov loope push loope mov fsubrs ret cmp movsb mov jle stos fstpl test push and mov or sti mov mov pop scas imul pop push cltd add icebp (bad) jg add stos sub sub cmp jae pop sbb fwait sub sbb mov out stos sub fpatan xchg and rorl out pop add loopne and test inc add jbe xor push mov out adc mov scas xor add xor pushf scas cmp mov pop cmp (bad) (bad) xchg mov idivb cltd movsb ret ja xchg dec ljmp and sbb arpl and mov mulb jbe adc frstor nop shlb push std xchg imul dec push jno pop lret es dec cwtl push movsb dec mov rclb jno daa pop in dec xor dec pop ljmp repnz jmp sub dec or sub pop mov xchg pop mov into and mov idivl mov mov adc test xchg out and mov cmp shlb packsswb mov pop sti (bad) je fsts jnp cmpsb repz in lods js sub push inc test adc loop inc sbb xchg mov xor and adc repz cmpsl mov es mov fnstcw dec push inc adc loop ss pop dec ja xlat cmp mov ljmp adc xlat or cmp clc mov mov fs inc jnp out lahf push iret arpl or fbstp arpl ret jmp cwtl push xor xchg push cmp das in push pop clc sti data16 mov or cmp push adc lds test (bad) clc int je (bad) and add sub lret and ljmp rorb popa ds insb jno sbb (bad) xor (bad) dec mov pop xchg enter je inc dec xchg and nop out loop xchg pushf and lret mov sti repnz xlat cli mov inc fisttpll mov test into stos daa fbstp jns mov clc add add push xchg push iret pop sub xchg ror mov jecxz repnz out xchg push fmull in mov pop gs mov inc pop pop mov sbb push mov sub das ret pop sbb ret jl jmp fmuls decb mov dec rclw ja mov rolb adc xlat push xor ljmp xlat cltd sahf fildll mov xor cmc loope negl and loopne xchg fcomip pop and in push movsl int push push cmpsb (bad) insb mov test jle outsl lret dec pop outsb and mov pop lcall ret or dec (bad) jbe movb xchg and dec dec dec mov daa fcomip mov aaa pop mov loope out add sub sbb cmp sub pop mov icebp mov mov pop cmp mov push sub lods dec inc outsl fdivl mov test mov xchg fstl (bad) lds rorl (bad) mov add scas jb iret movsb sub and imulb stc adc sub mov gs or inc dec scas sub xor idivl icebp xor sbb fistpll repz xchg pop out sub xor mov dec lods mov adc stos cmpsl in ljmp cmp push xchg out repnz scas mov xlat pushf je dec shrl xor mov xor out cmp rcll add loope das sub inc lret loopne fcoms lock sub jno cs add pop mov lahf xchg and mov jge decl sar leave cmpl cltd fadds movsb ret lock (bad) push nop ret xlat inc mov sbb or jno mov aad int cld scas push rol cmpsl gs jmp jne mov xor fdivl push ret inc push aad push rcl stc sub mov pop outsb xor js xchg leave scas pop pop inc mov out sahf sbb cmp jg out sub and icebp mov ss push xchg pop iret lret jp xchg (bad) iret mov repnz jb pop mov int jge icebp mov and cld fucompp pop xchg imul dec or aad jnp es clc jmp sub loope push std (bad) dec imul hlt dec test das sub mov dec notb pop pushf mov jb in (bad) out jb aas jge loope jo shl sub sub sub cwtl bound aam cmc mov ja rcrl pop (bad) outsb mov js and lahf mov cmp mov cmpsl (bad) daa loope cmpsl push fdivl arpl adc repz fsts jbe outsl mov (bad) cs ret out xorb xchg mov daa or ja jne sbb bound rcr cmpsl test rorb insb pop mov stc fisub inc xor mov jp cmp popf push pcmpgtd es mov bound mov outsl mov popf gs pop xchg mov or mov aam imul daa (bad) sbb push xchg adc xchg dec repnz ret inc cmp adc repz jbe inc xchg test imulb mov pop sub (bad) (bad) mov sbb and inc fistpll pop testl cmpsl leave dec pushf cmp (bad) pop lcall xchg push ljmp jg pop push and test sub xchg mov lcall inc test movsl cli fcoml mov mov lret mulb mov jne and mov xchg sub jg hlt xor in cmp (bad) adc cmp sub xchg mov push rorb mov xchg les (bad) data16 jbe fs and add cwtl mov push mov pop in xor xor clc mov inc and in xor or pop fdivrl mov and (bad) cltd adc mov jmp in mov sub sub sub push mov test movsb stos repnz inc adc std mov sbb push push roll cwtl js int3 clc dec fisubr lods rorl dec cltd xchg sub fstl int jp les mov jmp sub icebp adc inc xchg loope push mov mov xor xlat out pop mov jg rorb add gs sub add push aas ljmp int3 in dec or faddl dec stc jmp sbb out ljmp mov pop push enter iret in loope add add add and outsl mov shrb (bad) leave add or out cltd inc cmp jno mov sub lahf mov or lock or mov add mov into into mov test subb sbb push lock mov into mov inc lods jge sub test xor test icebp out mov fmull lahf (bad) ret fwait ret sahf dec dec hlt into leave (bad) dec or popa sbb outsl cmpsb inc jns addr16 (bad) pop mov mov mov xlat lock sti and (bad) xchg leave xor add and xlat (bad) (bad) jp sub sub xor inc sub and pop enter pop jno test and lods sahf lret add std sub xor push (bad) mov xor push xor repz and adc popa pop add xor dec shl iret xlat sub and jg or ljmp xchg clc pop dec sub mov (bad) and out xor icebp sub (bad) lods mov loop dec adc sub test mov jno inc sub jns mov fnstcw fbld pop pop jmp jecxz rorl mov xor dec xor jge lret popf mov (bad) pusha icebp add fdivrl mov xor push mov pusha xor cmp jo mov lret push (bad) pop jne cs jbe adc clc in fsubl push popf pop and sub adc mov in dec es in repnz shll sar out xchg dec or fistl (bad) icebp scas daa notb cmp push icebp das xchg fwait clc lret stos movsb dec cmp jnp or lock mov add dec ret pop mov cmp and loop push xchg sbbl dec test imull mov cmp mov fucomip jae into sbb cltd sub mov mov test aaa dec stos xlat push bound add cmp mov mov push fistpll (bad) and sub divb xchg push sub push or in cmp pop sub out int loop in and loopne and mov leave daa jg and sub xchg inc mov sbb (bad) jns and out push push pop and ds loope xchg popa mov sti dec adc xchg pop push add inc adc lret or adc outsl in stos lods or inc add adc dec dec or idivb fdivrs mov mov cmpsl out in stos test mov jecxz pop sbb cld cs sub jp stos mov mov lret pop sub movsl loopne add mov (bad) popf movsb add jns (bad) fxch cmp dec lods mov sub ds inc (bad) div sbb popa test push inc test mov xchg add cmpsb and mov sub jae inc aaa pop divb jge add negl jle sub pop int3 add and int3 cmpsb xchg mov (bad) pop ret popa jecxz sub mov add stc int3 (bad) mov cmp dec jae mov or pop adc lahf (bad) ljmp jecxz cli lret jno push loop fbstp (bad) dec adc daa clc xchg pop repnz mov mov inc (bad) and neg or or mov sarb xlat mov lds iret mov (bad) mov ficomp aam pop sub pop mov adc andb push mov add mov sti popf inc repnz jbe loop rcrl inc js pop imull cli xor or stc pop dec mov mov fs jmp sub push xlat (bad) and aas lods jmp jecxz and xor loope lods ret lret xor scas mul sbb mov (bad) daa ret mov icebp adc out bound push ret inc push cmpsl push jmp jecxz add clc dec lds iret stos rep dec imul leave mov (bad) adc popl add mov jg shlb add repnz mov jle stos ret lcall (bad) mov push jle cltd and add or sti xchg push pop pop add mov or mov ljmp pop inc sub add cmp xchg in mov xorl aas clc (bad) in fadds (bad) xchg sbb cmp divps scas iret jmp sbb mov pushf push movsb daa insb std jge clc push pop xchg enter mov rcll leave jbe push sub ljmp inc or loope cs sub push rclb dec call (bad) in and clc mov xchg dec cmc mov hlt pop xlat and or sbb push dec pop add bound cmpsb fucom fisub add cld mov mov cmp pop sarb lea jmp test xor clc adc push cmpsl loope xor mov xlat test push fmuls enter mov test pop adc sub test rclb mov push mov sub or dec out cmpsb fisubr std (bad) loopne (bad) mov mov ffreep inc dec or jge daa or push fisubr xor sub (bad) cmp cmpsb ljmp sub lret inc (bad) mov xchg fsts testl bound add out cmp and repz pop push add dec imulb into mov mov dec xor cltd mov out pop push sub jne (bad) cmp das jne mov incb or xchg inc imul and dec push test mov add sub add xor inc in adc mov cwtl sbb sbb aad xlat sub out mov dec mov push (bad) inc mull and popa mov jmp jnp dec sub movsl xchg aas add sub mov mov lret in xor (bad) adc mov mov xor and repz jecxz jp jp inc inc mov mov dec adcl out dec dec inc mov fstl xchg xlat push mov popa cmp inc adc sbb add mov repz ret bound not call clc sub imul cmp push pop cs push fwait lods adc pop (bad) adc stos xor lret dec pusha push and mov xor popa xchg daa xchg xchg xchg add scas sub and cmp loope and xlat mov daa mov into mov dec aam cmpsl push xchg jb test iret stos lret mov scas rcrl pop (bad) pop push mov loop push (bad) dec push or or mov out and mov xor stos int push cli not adc and decl jecxz xchg mov mov xchg movsb test or dec ljmp lea xor cmp mov stc push xor das cmp std mov cmp mov fstpl xchg push push mov cmpsb nop mov sbb in add negb and xchg (bad) sahf std arpl cmp inc sub cmp add fstl xchg ret mov jp test and mov sti cmc mov test adc test xchg pushf lods or subb outsb or cwtl pop or fstps fs in cmpsw dec or adc xchg fistpll ljmp push and xchg cltd (bad) xor mov jmp ficomp and lret mov clc pop mov jns mov adc pusha push sub aad xor leave shrl call and xchg mov xor xor (bad) fsubr pop jae movsb jne in insl cld repnz xchg push cmp push xchg and dec scas sub (bad) clc pop pop jle imul in dec add xchg dec lahf sti cmpsb sahf or pop jg cmp movsb loopne test and mov lret lret xor stos fsubrs pop or dec rcrb jns jo or and xor xor mov add dec sub sub mov xor popa dec or dec lahf xchg and and psubq or mov jae mov clc aad iret dec out xor fmul addr16 sbb loop aam pop inc icebp mov push movsl (bad) notl jmp cmp push or stos cwtl insb xor orl mov push mov repz nop jl lods cmp out call dec mov mov je out leave xor mov sub dec mov ja pushf js dec out jns mov mov push mov enter addr16 icebp mov add fidivl test mov aad movsb xchg jbe adc jg out popf sub or sub ds insb imul pop movsb iret mov lea (bad) negl imul movsl ljmp mov adc imul call hlt dec xlat test loop xchg xor dec ret mov test inc push mov cmc in adc mov and adc xchg hlt mov call sub scas cmpsb and lds adc xchg clc mov (bad) (bad) neg inc push add add mov sbb divl pop je cmp lret test imull adc call cwtl ja pop clc test les or pop shll sbb pop and popa loope jmp push cmp cmp xor (bad) mov cmpb int inc sub ret inc rorl shl cmpl xlat lock shll adc push lods mov movsl and stos (bad) ss mov mov mov (bad) xlat cmp mov dec or sbb add xchg sub dec inc or cmp pop mov (bad) call or push xchg nop jle xchg pushf xchg xchg jo ret (bad) jno inc lea xchg add cmpsb jge (bad) mov icebp outsl or insb mov adc pop lds (bad) out lret xor fs nop push pusha gs into cmp out xor sbb (bad) stos mov jl push pop mov push xchg movsl jnp fs cld cli cmp (bad) (bad) jns call (bad) dec dec push jne adc dec jae divb lret mov fs sti or (bad) std push daa dec xor pop jecxz test push leave jmp sub mov xchg dec cs jno aas lret or fstpl (bad) cmp push mov out and and mov lret ret cmp movsl in shrb mov or pop cmc out adc mov cltd movl inc outsl testl ljmp sub mov and adc rcrb out insb (bad) sub insb in imul lods neg adc (bad) lret or ss clc mov fwait loop jl imul nop cltd mov mov inc stc add arpl ret xchg lock stos xor cs jmp ficompl dec shll sti fs sbb sti clc ret sbb mov xlat mov xchg popf shl pushf dec mov or sbb or adc and stos mov movsb xor loop das xchg lods call push mov call push adc imul xor cmp leave sub dec push sub lcall repnz rclb mov mov pop fmul mull xor idivb rcr imul insb sarl nop sarl add pop add adc lahf jmp push mov lahf fldt arpl inc (bad) adc scas imull lret pop dec in push mov je test mov push fidivl mov pushf sub xchg and std (bad) and bound out imulb sub out aam daa add xor idivb jge cltd push mov and sub inc in iret mov fisubrl aad cmp sahf pusha and sbb lods jmp mov push dec call sub pusha adc cmpsb movb pop scas xor adc aas leave xor push lret push lret or inc ds es (bad) je stc andl test xor sti jno gs clc popa ret repz test lret adc (bad) and popf mov lret add add stos xor icebp add xor cwtl xor mov or mov ret or test mov bound inc sub ja xchg imul loope outsl cwtl lds dec fidiv push push clc mov dec in das ljmp (bad) into rorb adc or dec lea jmp out jb out (bad) push pop (bad) mov xor mov jns movsl inc cwtl in dec mov add add xchg cmp pushf xchg dec jmp fisubl repz dec fbstp push xor pushf (bad) rorl jb fs rcl cmpsb rcll mov and pop or mov das shr je (bad) (bad) insb dec pop stos jne mov sbb aad jmp movsb es push and fisubrl push mov or fsubr arpl (bad) jmp sbb enter dec scas cld sti cmp pop lret adcl inc pop and dec pop and shlb lods sbb out push or pop int3 ret sti mov jg insb rcl sbb jbe (bad) enter (bad) xor xor dec jmp lods pushf mov jge and jnp dec lock shl inc pop cld dec in cmpsl jnp and bound lret (bad) into ljmp xchg jb jle ret daa jbe cwtl lret pop hlt daa adc clc dec mov test inc or test test in jecxz dec cltd adc xchg rcll add test dec lods pop loop jl push das ffreep je jb jno addr16 cmc sahf fwait dec jecxz xor inc (bad) out (bad) lcall pop in sub jne inc push cmc (bad) fucom sbb and ja into mov ss lahf sbb push mov adc (bad) dec jns xchg add mov xbegin out mov add (bad) xchg or add mov cmp int mov inc and les cmpsb mov mov mov cs (bad) sbb lret dec xor xchg enter add (bad) sub inc fadds inc into outsl (bad) idivb pop add add mov or stos loop add sub add inc adc push adc fistpl add mov xor xor fbld cmpsl insb sub cltd das fidivl imul and add icebp mov fdivrs mov repz (bad) outsl leave jno mov or sub pop (bad) pusha xchg adc lahf mul jb inc je sbb popf fcoms lret push fdivrp mov mov cmp adc and dec dec sub pop into jmp or cld (bad) loop ja pop pop pop mov ja aam sbb cmpsb iret jmp idivb and es cmp (bad) cmp or jecxz loop mov popf push js xlat mov test fnstenv or (bad) sbb mov gs pop pushf push lahf inc fisub out sub out popf test nop scas mov xchg cmp movsb daa xor sub insl sbb scas loop xchg scas loop lock loop dec dec aad xchg xor pop aaa int3 sub lods push pop add movsl push cmp jmp push pop (bad) neg das pop dec daa jp mov nop es adc xor add sbb aas test or cltd ret mov shrb pop or push dec mov and out dec push sub sbb jne ja mov or mov imul push add mov lret push push (bad) jmp xor stc std (bad) mull adc dec xor loope xchg ja ss in inc mov mov cltd cmp fmuls idiv mov out int3 adc pop mov fabs imul int3 lock fwait (bad) and mov loop lret add mov mov sti loope jmp dec mov jl repnz mov daa cmp repz lds adc dec push xor cmpsb jecxz ret sub ret or xchg sarb outsl ss pop movsl fild cmpsl pop cmp add sbb in xchg mov inc mov push ss dec and jp out popf pop adc mov xchg mov fcomp and or xchg xor sub les lret out xlat gs sbb jmp je push inc pop push stc mov xor rclb cltd push jle neg outsl cld sarb push or sub mov pop pop add sub sub sbb (bad) (bad) ds sub idivb lds ljmp addr16 cli scas ret test add mov and shrl jmp sahf into mov mov das stos sub mov gs mov sub sbb (bad) lret sub rcr int test mov push mov ljmp (bad) jge xchg dec mov jnp outsl mov inc fldz cmp sub mov or (bad) mov repnz sahf cmp lret orl dec imul stos jne cmpsl jmp cmp mov fsts and aas fstpl mov hlt dec push mov xchg push negl sub push push mov leave adcl inc pop cvttps2pi sti xor or push adc jp mov cmp inc sub jl pop je and mov lock cmp xchg sub or xlat inc xchg xchg jmp cmpsb sbb lock lret das lods mov lret jge mov int in cs bound popf jne pop push out jecxz add call xor sbb push scas jle ds or daa jmp sub and subl jle imul adc rorb pop xor pop out dec add fidivrl insl mov out inc test pop jg or jbe (bad) mov fcomp or adc cmp and or aad dec add jno xlat stc movsb test lret mov daa xor mov insb inc pop lret test movsb mov fnstenv out sbb fwait dec inc cmpsb inc fnstcw sub stos pusha lds mov sub mov pop mov push lock xor sbb nop mov gs cwtl and nop cmp mov push xor rclb mov mov loopne movb lret aam and mov (bad) pop inc imul test and xchg add push movsb and daa rcll push and cs adc fnstcw inc pushf or mov arpl and mov (bad) sub sub popf faddl lds gs mov fs repnz xchg mov adc lcall imul mov inc cmpsl adc add cmp and movsl sub mov pop mov pop and xor push xchg cmp sti jp push ret test sub dec mov mov test mov lds xchg fmuls xor and mov mov cli inc push sbb dec neg pop out mov ret outsl fucompp push lds mov push in adc clc sub ret test pop and repnz pop mov lret es jo dec jecxz fsubl pop lods scas xor (bad) or sahf loopne rolb jae lock cli xchg mov lock xchg mov push cmp std sbb dec (bad) mov (bad) jne mov imul xchg movsl mul xchg popf pushf rcl sbb pop jne push pop inc inc testb lret addl les movsl cmp fisubrl xor lret decl xchg cmp repz test mov sub loopne ss repz mov sub dec mov rorl stos fstpl popa lsl dec pop cmp cwtl (bad) das ret sub out lock adc add cli test add add cltd fsubrl out pop and sub lea jg bound subl push inc adc outsb adc xor mov push xor xor pushf icebp xchg jl dec or xor cs xor sub mov les sub fdivs ret movsl inc (bad) and jle jno push imul in bound mov push test mov inc push inc fistpll dec or and push mov and add xchg pop out loop sub mov fldenv clc xor test enter icebp lret sbb sbb add add jp xchg mov xor mov xor sbb mov and jecxz fcmovnbe adc cmp push faddl add loop ficom out scas lret sub out fsubs (bad) cmpsl xchg rorl inc cmp mov (bad) cmp fldenv in nop fimull push cmc das sub pop xor aad or das xlat sbb pop stc xor popa inc xor cmp mov jl ficom rcll xor leave cli cmp sbb dec pop repz cmpsl (bad) lcall sub xor add shrl pop jmp mov lahf fisubr inc (bad) sub mov div push xchg or lcall bound add icebp repz sti gs jecxz pop aad push dec mov and sub cmp dec mov or in repz add sub negl dec (bad) dec iret repz cmp mov aad (bad) stc sub xlat xor jmp cltd mov divb dec or mov scas lock xchg push adc mov int3 clc inc dec jecxz je mov jl out cwtl imul scas pop sbb test sbb inc and out sub jno dec jmp scas adc scas mov xchg push jl jno iret pop push mov in jns dec leave inc cs push aam lret mov add andb (bad) jne call aas lods mov cmp fcoml (bad) dec xchg lcall pop push rcrl fild fnstcw adc cli cmpsb lret iret idivb push jo lcall out push adc loope cmp adc or (bad) mov (bad) mov lcall scas bound notb lods notl xchg pop or fcompl push jbe cmp xlat leave aad mov and es cmp sub clc out sbb cvtps2pd cmp xor mov mov mov out cmp scas sub mov mov sub fwait dec ljmp aad mov mov (bad) pop push pop mov pop push repnz cmc test out jbe sbb pop mov daa add inc lahf cwtl loope cmp push add (bad) repnz nop mov mov mov cmp jg ja push and xchg loope xor jne popa adc enter sub out dec clc pop dec insl and pop jl das hlt mov add in inc (bad) dec mov inc dec jno imul mov js mov imul sbb mov fstpt clc popf ret fsubrs mov out mov (bad) fcomp xor (bad) and mov daa (bad) notl (bad) fs jnp inc pop out cmp dec mov sub rclb je xor (bad) jecxz mov pop gs mov ss push and iret aas cmp hlt negl mov push rcrl cmp add pop xor xchg cld adc or enter aam and inc ret inc pop mov xor jno and sub orl xchg scas dec cmp and popf cmpsl jp bound roll in jl push mov lods das sti inc xchg mov loop or sarl add adc movsb sub call pop in adc add mov mov jmp fld and xchg cmp mov xor bound mov add rorb (bad) xor mov out push and and dec or jecxz xchg dec mov enter push dec sti leave (bad) shrb daa pop and xchg (bad) scas xchg push and cmp xor push sub cli int cmp mov incb and push sub mov push pop addr16 ja ss lahf pop fnclex movb pop daa xor cmpsb xchg or pop out ds fcoml (bad) data16 movsb scas (bad) loope divl add clc sub enter roll push data16 mov sub pop notl add repnz loopne cmp xchg jmp or loop pop jnp push xchg out jge jmp sub stos call out pushf jb push (bad) loope mov into sub jns cmp cwtl inc push mov leave sbb ja sbb scas lds popa add daa or xor and jle int3 rcl ds rclb sub mov into or shll xlat xchg into dec lahf and jp pop mov stos inc insb cmc mov arpl lahf cltd inc shrl aam jl mov scas lret testb mov fstpl call jb inc mov orb scas lods arpl push in ror lods iret add xor int3 push lret mov pop repz sub (bad) sub or faddp gs out xchg cld adc cmp mov lret jle mov hlt dec fistl adc add lods (bad) mov jo add daa or push gs cmpsl ja pop xchg dec xorl xor dec inc jmp xor fnstsw add add pusha pop fucom out mov jno mov mov std or fistp adc mov out pop mov movsl adc testl loope sub sub jecxz (bad) pop push icebp mov or test mov popf fstps jg pop ret push hlt dec aam xchg fbld ljmp or xor jne jbe push jb xlat dec test (bad) jne pop pushf pushf mov hlt ret inc cmp add sbb dec add test shrb mov mov cmp sub pushf mov pop (bad) mov out cwtl add jne or in jp pop adc sti je daa das in mov int mov xor jb dec cmp add (bad) sub ja pop ds mov ds cwtl and or cmpsl and int3 shr mov inc xor (bad) hlt insb sub pushf movsl jg ret daa loopne leave add adc and shrl fidivrl into fldl pop add pusha jae leave mov nop dec test jmp repnz mov and dec fistpl scas shrl insl daa loop mov push pusha xchg and xchg test icebp push xchg jb pop dec mov cmp xchg inc imul xchg fcoms cmp out push add jae das cld test or pop or sub jmp xor scas loopne es rcl pop daa enter cmp sbb mov enter mov pop pop int imul push sarl adc and (bad) adc (bad) loopne setns inc xor push push adc mov xor mov adc xchg mov push popa ret sub call enter sub icebp (bad) jnp inc cmpsb arpl and and fnsave push int3 adc dec mov sub mov lcall adc cmp popf decb movsl scas jmp repz jecxz jns adc pusha sbb cmpl sahf xor pop pop dec sbb cmp aaa cltd jmp and adc inc cltd dec pop mov sub or mov (bad) mov and rorl ss jg jle loope (bad) leave sbb dec int3 fs mov mov sbb sub mov ljmp add mov test mov shl es fs in pusha aaa add mov or jb sbb popl mov int les jno cmp sub push adc cli or mov xchg cmp dec push ja clc or or xlat mov repz push imul pop sbb int xor xor cmpsb mov and mov xor cld aaa jmp ja shrb pop cmp or xor jo or iret sub ret hlt fucomip stc mov pop sbb fnsave iret loope jnp jl mov adc xchg imul ficomp test push hlt xchg and scas push mov aad push mov imul cmp rorl in int std or jae stos jns xor imul popf rorb push push dec pop insb gs sub stc icebp pusha sub push push lahf sarb repnz fdiv sub xor incb les mov dec lods cld rolb sub sub stc (bad) (bad) or cmp inc add and jo gs sub sub (bad) cmp out loop mov notl or mov sub call out pop outsb dec pop inc cld mov mov push push out es inc and dec and sub push hlt push lahf add fistpl test mov dec pop adc negl aam or or jno pop ret xchg lret mov out test mov ja fsts cmp or enter mov add out out cltd insb sub mov ret xchg repnz jne int3 and loop sub add mov or pop xor jge dec aad in inc xchg inc and outsl and dec inc rcll dec (bad) mov pop xchg dec ljmp pop lds fisubr lods movsb movsb push and pop call xor sub sub (bad) push popl push (bad) test sub cmpsb andb bound out inc xchg add in (bad) adc data16 jbe mov insb cmp dec xchg add fdivrl jne adc inc xor ja adcl call aaa sub or sbb arpl lcall daa cmc adc leave ds insb cmpb mov ficom or jp lss popa dec dec pop stos sarw lret movl jecxz lds fisubr lods lock push cmc scas sub cmp shrb cmp cmp fsubs stc or and push push jns adc inc pop push and cmp stc push inc jecxz lock sbb sub xchg sti mov and adc adc lock out lahf notb pop aad mov faddl ffree pop movsl pop or jecxz pop sbb test leave pop sbbl cmp fstl neg loopne test xor sub rcrl sti mov ja lea push jmp and psrlq stos (bad) out jno dec xlat mov out mov jmp pop leave jns xchg sar ret mov add sub lods fimull pop insb fsts inc cmp lods cli sub outsb mov imul or (bad) sti and cmpsl cli push inc fs inc lcall and out pop jecxz,pt cmp ljmp (bad) jne pop ja enter daa fnstsw out dec stos mov sub repnz je push inc or pop xchg call and mov inc or jbe dec cli in scas repnz xor jle jge,pn pop or sarb dec fsubs (bad) mov ds insb pop adc pushf lret xor sbb out mov in cwtl mov inc sub lods repnz sub add mov sbb bnd decb aaa (bad) dec ja mov rclb add sahf and lock jmp jle pop sbb or pop mov repz test cmp icebp cs lods (bad) fisttpll sub xlat cmp mull and lock imul shll into dec adc mov jecxz push or fidivr inc leave stos mov push lds mov pop inc leave cmp push push imulb cmc cmp adc or mov xlat stc cmpsl les mov cld inc ret inc popa mov in mov and imul push push mov pop jmp push outsb in sub sub mov lds mov daa xor xor popa dec cmp aas jne out bound jmp xor mov je (bad) mov cli test stos mul dec and add xchg (bad) imul ljmp cmp lcall sbb sbb (bad) (bad) les mov (bad) ficom mov jg (bad) rorb outsb into sub cld cmp sti int cmc push push or lret ror sub add repz add add lret es mov les mov mov dec lcall jo stc pop lock (bad) cwtl cmp lahf jge jmp jno jb popa mov sub cmp lods inc in int3 mov or pop pop xor (bad) ljmp (bad) mov add cld in mov out and push in or addr16 incl fnstenv ds inc and xor mov out mull inc lret pop add mov xor popf ficom add dec mov test ljmp loopne xchg inc pop (bad) pushf decb and cmp push decl pop ds sub daa and mov test xor mov into sub in mov jle sub mov in dec into cwtl xchg loopne sti clc shr repnz loop push or bound lahf (bad) hlt gs ja imul add or mov clc adc adc decl mov pop jmp push int jnp (bad) and into mov jecxz jge aam cld movsl (bad) stc add dec cmp js (bad) int add movsb adcl sub or icebp decb arpl (bad) lock cmpsb sub mov pop cmpsb adc mov out and pop or sub xor loope pop in repz adc mov in adc inc in xchg repz pop sub int3 stc add cmc das test mov fcom pop jecxz popa rorl jb (bad) addr16 pop std shrb gs daa jg inc aad lret mov sub xlat dec jmp push add js ret add or pop clc mov adc ficom jmp insl aaa gs pop insb std sbb or mov mov push add adc jnp push outsb mov iret ja aam stos pushf pop mov jecxz pop push mov les add add (bad) mov call push lahf pop sbb (bad) sbb leave cmp leave jmp xor xor push mov sbb ret addr16 xor lahf pop (bad) mov neg dec jbe dec push mov js mov sub test int inc jnp jl dec jne jno imul jo xor push mov stos mov inc xor daa fnstsw jge add or sbb sub sbb jbe insb dec sub cmc push push lcall pop repz iret jge icebp pop jbe inc mov sahf pop sar dec sub sub je sbb iret sub pop out daa add pop cmp mov xor scas xor jmp and fcmovu inc fsubrs sbb lock (bad) adc (bad) sarl ss ja daa les mov xchg imul imul inc sub gs lahf leave jmp xchg inc jmp ficom pushf test pop lahf xor mov scas lret inc inc aad jno fnop jmp jmp pop daa cs fcomps dec rorl dec mov test ljmp repz ret jle rcll pop adc jno and daa or in movaps loop xor jle add mov sub shl sub and (bad) iret sub mov xchg bound ljmp dec imul leave test into or sub pop mov call xchg sbb jl (bad) daa gs test repz pop sti mov jnp xor cld mov jl push jne dec push mov jbe int das sub outsl repz jbe stos mov mov or imul les rol dec xor jecxz lret xor fs sbb or sub xor and popa int stc fistpl dec sub cmpsb sub out mov aad push dec (bad) decb fildl ret jp ds dec cs dec and mov fsts outsb leave lret fwait imul test mov dec jecxz aas add ret iret pop add inc sub ret inc pop icebp inc push xor or popa es lds cs mov mov dec xor test add gs mov dec pop call jne adc jbe pop int sub out dec out mov cli jb leave insb stos inc lea pop ret fs aam sub lods push mov jmp adc push jns imul rorb pop lret bound xlat in fdivrs mov andb aaa mull jne jmp pop add stos arpl mov mov jb stos das cltd mov or mov movsl fsubrl stos xor repnz pop cwtl add or push xchg and sbb or cmp or mov popf imul into mov test fbld cli sub inc push add jmp in xchg aad outsl and popf jbe push mov jno sahf or mov imul inc add pop decb notb cmp stos sub dec jb stos jnp or jns and add mov or std pop add xlat sahf jae xchg sar inc mov pop (bad) pop (bad) cmpsl xchg stos push fimul (bad) sub adc aam pop neg mov dec sub cs lahf out out inc xchg repz fs adc lret (bad) adc fistl xchg lea faddp or jne lods push jmp and jb add cmp cmp lahf jmp push js enter or mov leave sub push cmp add cld sub inc inc fwait (bad) (bad) mov ljmp std lret mov aad add pop mov stc jo addl and dec popf inc mov adc pop stc inc (bad) jecxz dec dec fisttp popf cs push insl popf addr16 dec mov pop test pop lods aad add fnstcw loope sub sysexit mov cmpsb fbld stc and xchg scas cltd jne and or mov mov (bad) test xor jne jp ja mov bound cli xlat adcb pop ss pop ljmp xchg jb pop rolb lret mov (bad) cwtl jae dec sbb sub jo mov lods xchg iret in pop mov aad loopne mov mov mov insl popf pop cli and dec (bad) xor (bad) pop xor push cld shrl test lock cmp or (bad) xor add mov cmc into aad pop and mov nop imul and std add jno sub mov pop popa fisttp clc ds add lock mov jns adc xor pop notl ljmp mov cld das imul pop inc sbb jb mov dec stos iret addr16 pop pop add (bad) out jge push and jmp out jle cltd (bad) aaa out int3 sbb add mov jle push fs push or int3 xchg and add xor pop and in gs loop ret icebp jl mov (bad) les les std leave aam xchg scas cmp xor int cmp iret ljmp sub mov into xor cmpb outsl push adc mov loop lahf dec repnz xchg jno inc mov inc test leave xchg jmp add repz shrb stc jne jo cmc adc pop push adc movsb stos mov mov out addr16 jno and in repz repnz mov fisttp repnz xchg out mov mov xor mov outsl jb pushf sub inc mov xchg xchg cmc or mov add repnz outsl pop mov jo int3 lea (bad) fnstcw mov add movsb inc arpl (bad) jmp ss movl (bad) out sub add pop xchg xchg xlat cmp sub out push inc movsb cltd push add scas test gs sub pusha add and mov sub sub xchg les (bad) mov sub jae hlt and add push sbb mov js xchg xchg out shlb inc mov aad cli cmp sub add scas repnz fcmove inc pop or fild push or sbb xor push (bad) sahf daa add (bad) xchg jmp shrl sub fucomip mov xor cmp mov xchg inc icebp or iret (bad) loope lret imulb push jl insb in inc mov out faddl dec cld out pop out sub repnz sar (bad) out mov mov lret lret inc je inc add scas cmp daa icebp pop xchg inc lahf icebp std movsl fmull test mov jle xor push pop lahf loope xlat cmp mov xlat pop mov and lea mov mov (bad) (bad) (bad) jb js adc and repz cmp (bad) or pushw repnz mov push movsb mov sub cmp test cli and (bad) mov movb cld cli mov add xor imull pop mulb mov xchg test pop dec ds into or loop xor int3 adc dec fldln2 xor repnz add jae cmp xor cltd xor mov daa dec call add sub in push or jp pop aam stos sub ds loop imul ret xor pop add scas iret fsubp jmp rclb jmp test movb and das test jb push mov rol xor mov push sub test icebp add mov add adc xor cs or sub xchg push inc pop jno sti fsubs dec and push rcll leave mov fiaddl cmp insb jl xchg call pop scas jne xchg jne (bad) aas sub add mov fnstcw adc sub push flds enter fwait (bad) mov call xchg into cwtl jo icebp ljmp add add in sub lcall int jnp xchg es or (bad) test dec mov cltd pop cs fisub push insl add or mov popf cmp and (bad) or xchg (bad) or pop and or or mov pop in cld sub or inc sbb sbb sub mov mov movb dec pop repz leave bound (bad) mov add popf push dec mov cmp pop mov cmpsb fcoms repnz push pop push jno daa sbb hlt mov ja sub sbb add sbb ret jl pop push fistl push fild les xchg std pushf (bad) lock sahf aaa xchg out lret push dec out das sbb pop fild xchg add mov loop pop sub (bad) mov popa and adc scas push pop jecxz mov jo popf sbb sahf das adc inc mov lds mov push out xor lods inc push xchg xchg mov test pop and das and mov add idivl movsl xchg mov icebp repz sbb les lods lds shlb jl add scas hlt cmpsw std pushf mov add negl mov jg push and int3 jge jecxz lret shrl in mov movb jg xor jo dec fistl sbb cmpsl js xor out out clc out xlat ljmp jnp xlat pop stos sub cwtl sub movswl adc sub jmp into rorl lods leave mov mov sbb je es iret clc and jb xchg xchg fbstp cwtl mov adc cld mov pop test mov imul neg jp clc dec stos add out xchg (bad) std flds dec jne repz mov inc fwait scas or mov arpl xchg sbb sub (bad) cs pop mov adc jmp daa rcrl sarb push mov sbb adc xchg (bad) jne aaa dec xchg aas std test jmp test ficom dec out in leave mov mov push shrb pop fimull xchg icebp and lods mov pop negl xor scas or mov xor rolb sub mov inc in lahf dec or stos test cli bound repnz sub push xor (bad) jb (bad) repz jmp lods mov into aam push in fs mov (bad) add push sub rolb and scas popf data16 pusha dec or jae iret aam int3 jne dec push cli fs icebp mov jmp sbb fcompl sub cmc in push lret mov loopne pop mov and ljmp mov xor xor fistl push mov jge adc sub in xchg jns les stos pop mov in loop xor ljmp pop cld lcall imul out arpl pushf adc lret pop push mov icebp mov push cs pop in mov inc hlt dec push pop push inc sub ret xchg jae adc ret pop sub (bad) cmp (bad) (bad) aaa jl xlat mov push scas push mov mov cmp mov aad ljmp jnp dec mov xchg xor fxch in rcr inc mov xchg and cmpsl (bad) fsubl mov addr16 dec mov ljmp push (bad) jmp sub mov adc xor xor cmp push ja jmp rol sub cmp pop mov shll mov jg ret int3 icebp mov sub popf outsl addr16 add out (bad) repz mov lods ja and fstl mov sub iret push inc aad into repz xor adc loop rcrl push js inc xchg mov cmp xchg test pop bnd sub sub inc add scas xor loop leave mov add xchg and imul out sbb lods or ret xlat xor (bad) and sbb cmp jl imul mov mov push add mov sub xchg ret aad andl movsl jl lret jmp jns dec lret enter add daa notl repnz das (bad) mov fnstenv cmpsb xlat cmpsl push pop daa idivb sbb dec xor xorl imul imul repz sbb mov pop ds cmpsl loope (bad) ja adc imul inc adc rcl outsl dec call sar xchg outsb icebp popf cmc xor xor xlat ret push sbb ss andl sti out sarb push pushf dec mov adc or cld xor xchg imul jbe pop inc add or inc pushf fldcw mov jle jle pop mov lock add inc pop data16 mov in inc mov repnz dec shrb pop movsb or cli sub loope sbb cmc (bad) repz fs repz int mov jno and mov add lock js and hlt pop shr fadd jbe push or ljmp pop xor je cli mov dec cwtl mov aad pusha add mov fwait xor xor xor les add lods inc outsb ja sar xor les aaa mov fs xchg mov dec cld cmp icebp call xchg adc push aam cmpsl fadd jp add sub push out negb dec (bad) sub (bad) mov lret add mov jns movsl aad in pop out cmpsl xchg test dec out out sub pop bound fistl mov adc js out fcmovnb scas fmuls push cmp add out std (bad) xchg mov and fdivl mov sub adc gs lret pop and mov cmc push sub mov js lret sub test int3 pushw (bad) out xor int jp test sbb in mov fimul lods mov fildl rorb mov add push repnz cmc (bad) in push jecxz movsl lret pushf mov mov adc leave xchg clc test and xlat test out lret mov pop pop push dec pop xchg lcall and dec icebp (bad) icebp cmp lods adc repz dec test clc inc les sarb rorl ret xchg jge in or sub cs add push gs sbb xor sbb imul dec sub dec pop mov jno push push iret dec fldl xor cmp add stos cld sub mov cmp outsb push outsl mov pop push and inc add int3 and (bad) xor stc cmp fisttp leave std xchg test mov scas cwtl mov lds das ror or sub sub jge rcll push dec push mov scas addb sbb popa dec (bad) jp (bad) dec shll cmp pop addr16 repz out into into popf (bad) in popf pop jg fsubr imul cmp mov mov (bad) ljmp mov adc jno mov bnd cltd das add push stos sub or imul jg lds sub cmp scas fsubl xor jns xchg ret add pusha mov stc lcall icebp jb fisttpll jmp cmp sub and cld adc xor cmpsb mov dec cmp dec mov push jno cs pusha insb sbb jb jo repz mov push or test pushf pop lds shrb cmp scas jne lods insb mov sbb mov adc mov lret mov sub pop (bad) scas (bad) std sub movsb iret add dec movsl pusha mov (bad) mov mov lods outsl (bad) in popa cmp pop popf inc movsl sbb inc in push push lahf push out lret xor ret jbe xchg inc arpl stos or or data16 dec ljmp jns movsl fnsave jg xorb and mov lods roll repz and pop mov lret (bad) das (bad) sub mov mov ret cld cmp out shll sti mov mov pop sbb leave cmc out lahf pop test or sbb xor mov andl sub jle jmp xor imul ds mov mov jno jp and bound (bad) or lret inc cmp repz mov ss jl daa fs jge les add sub xor stc or out mov clc fisub cmp icebp repz ds out add jg or out lods inc iret sub bnd int add daa cmp xor loopne lret inc sub and shrb test xor push or push dec neg dec cmc (bad) pop mov inc push ljmp add add sub ljmp (bad) mov imul cltd mov cwtl out fidiv cltd je jle or push (bad) adc ljmp into mov pop pop pop es and mov xor scas push sbb pop mov xor dec lret movl (bad) sbb add sbb sub xchg scas out sub icebp decb or ljmp idivb lods arpl into jecxz cmpsl fs mov (bad) xor pop dec (bad) clc cmp das (bad) rorl out pop lret or popf or into test adc arpl repz fs lock adc sarl mov (bad) cli jp cmp xchg popf mov pop hlt cltd push pop adc imul das pop cli ret (bad) fnstenv pop out adc test movsl mov ror dec fldl shrb mov pop push push xchg or and lds lock or cmc and or sbb sbb idivl in or (bad) shrb cwtl jl mov and xchg cmc xor xchg jg mov (bad) jmp xchg and and rolb or ret adc xor add js shrl cwtl lret xchg addl decb pushf or inc and inc das into xchg cs mov or sar bound (bad) push xor ret inc push and xchg lret or sbb push mov and lock frstor xor inc mov ljmp dec cmpsb dec pop leave mov xchg out mov sbb jge imul jne jle lret and mov jp lds adc jmp or loop xor (bad) mov insl outsl scas (bad) xor ja push call cmp pop aaa ljmp dec cmp mov scas fildl push enter adc clc negb push es pop inc sbb sub push scas mov dec movb mov hlt popf adc sub cmpb ret lret outsb xchg cwtl xchg jns scas lock dec out mov dec outsb dec and test bound adc decb call scas jb mov in repz push mov pop xor mov xchg clc or sarb mov (bad) stos mov sti jecxz xor icebp fldl pop xchg lods cmpsb xchg popa inc add and leave inc sti and ljmp sub nop shlb mov adc inc sub cwtl lret call inc (bad) sub mov xlat push dec dec loop (bad) xor daa push popf mov idivl mov lock (bad) sbb repz je adc mov mov dec add sub mov mov push bound xchg mov fucomip pop roll leave pop mov pop (bad) xor inc cmp xchg iret sub xor xchg xor sub stos push sub sub push add es fstl sub lods in scas negb les shll jae pop aad mull jnp (bad) xor out push xchg scas sub clc js call pop push push out jb dec into lret cld pop shrl out clc jle cmp pushl stos adc in xchg add outsb xor mov jbe in push sbb mov int3 (bad) pop sbb add aas mov dec xor sbb clc rorb add cltd fdivs jecxz pop les adc sbb scas loop xlat mov or lahf sbb add test mov out das lods faddp or scas sub inc and xor jge sbb inc add pop mov pop (bad) or cmp sub imul cli lret cmovno cs sub cmp lret mov mov xchg fcomi and add das loop fstps dec ret jmp repnz jno loop jbe push mov fistp sbb or cld mov inc push jp xchg negl or mov sub add add mov xor cmp sub out jnp jmp cmc cli hlt das mov nop inc and lahf je in ljmp out xorb dec hlt pop mov xchg sub repnz fstpl pop lret lret mov out pop sub insb in fidivrl stos je test (bad) jmp aad mov inc ret push sub push int imulb repnz or je push stc mov dec jno pop (bad) mov jle sti (bad) jmp loope imul mov xchg xchg jl pop hlt mov pop xchg test dec mov das ret mov push sub addr16 mov scas ja hlt add mov stos sbb lret ja sub pushf add jmp jnp mov mov cmc ret into sub test or sahf xor cwtl not sub aam (bad) sub add mov fdivr clc mov (bad) out lcall lcall loopne dec ret xor in mov mov pop push setl xor adc push inc add mov scas lahf int3 pop iret fmull daa xchg mov cld cmp or ds insb in sbb test push ds in pop lret pop neg cmpsb dec (bad) aam in scas lret add mov jle pop dec out pop mov mov jecxz neg lret bnd inc xor outsb sahf popf mov adc (bad) pop into pop inc add mov (bad) mov xor mov dec das fisttp (bad) addr16 imul add ret mov lock jmp inc jbe xchg xor dec xor negl stos ljmp push pushf call iret push xchg ljmp mov pop gs addr16 or nop cli sub xchg jge pop ret push xchg pop inc and add push push pop mov (bad) jbe jne adc xlat and sub scas lds movb push mov adcb dec arpl cmc mov ffree jle fdivs cs outsb lcall push push mov call add out das rcr adc test push ret int3 inc add xor sub pop sti das movsl ror ljmp push mov je in mov je out sub dec out jo and add jnp add cmp out subb xor add mov add xor ficom ror repnz mov mov xchg movsl push inc dec mov stc mov pop mov mov mov jg nop out (bad) sub jbe lea scas cmp cmp popf push fldl mov fisubr dec ds daa jmp cmp loop fstl icebp fbld daa jne int insb push (bad) xor sub inc push inc inc xor jmp icebp sub inc jae div jno jle dec mov imulb and adc sti loope cmp lods xchg dec gs cmpsb adc lea jmp mov mov pop jecxz xor rorl es mov in inc sbb jle dec jle and outsl sbb mov testl rclb out mov insl dec pop push add leave mov addr16 (bad) mov push loop xchg loop adc scas mov dec out or loope stos out sub mov dec xor push add fisttp call js jae and ss mov inc xchg adc (bad) mov dec std test (bad) movsl pop addr16 sbb clc inc aas les aas out push pop les cmp xor mov mov das sti sbb and lods mov and imull loop test mov ss (bad) pop out pop lcall in pop or pop (bad) mov lcall add cli das icebp push stos scas sti push or add add dec mov push inc push sub ds cli pop gs ret jmp pop dec or mov mov test sahf inc imul fnsave hlt jns sub mov (bad) push (bad) js pop sbb out icebp stc xor in push mov jmp inc xor push ljmp xor repnz xchg adc popf and bound movsl stc out mov push insl das add pop xchg ret stc imul popf push mov xor movsb je xchg (bad) xor in cmpsb mov or sti popfw add adc sub mov out add gs loope das stos sub push mov xor dec cmp faddp fcmovu inc dec jne (bad) adc imull daa jmp mov pop dec aas cmpsl or lahf dec pop dec xor or inc sar repz cltd stos mov dec rclb test or out scas test cs or fiaddl xlat push push sbb adc aad mov xlat mov sub xchg or iret jno adc jg push and scas lods push ljmp cs xchg cld jno movsl adc sub lods notl dec cmc repz adc ds inc lds (bad) ret sub add push out or cmp ret sti (bad) and loope ror inc icebp inc push add mov cmp std sbb jno daa fidiv shll or sub out jle sub dec dec lahf je lret inc jg pop jo xchg aad clc mov iret mov mov push fcompl or or aad je lret jbe xchg (bad) lret scas ja push bound pop mov mov pop lea mov sbb popf pop sbb loope jnp xor dec inc xchg xchg or fidivl (bad) xchg jmp (bad) dec movsl lods jge inc mov out shrl xor jmp inc pop leave push in sub cmp and pop sub test sbb cmpsl aad ljmp cmp sahf std das mov jl (bad) cwtl dec iret xchg jns imul (bad) push out mov mov (bad) mov dec das or pop xchg jb mov (bad) lock in add push stos adc imul aas and mov jae and add fyl2xp1 jmp and xor add (bad) xchg lock cmp gs sub and out pop es loope out mov pop or push mov (bad) mov push test (bad) repnz xchg loope sub movsl (bad) xor rolb (bad) pop add fs cmp fcmovb jg sahf jge ljmp in and rcr sub jns mov and out mov pop rcl push mov sub repnz or push or (bad) push scas loop adc push xchg cmp out (bad) cs scas add mulb nop dec adc xor out and cmp push mov jns sbb sti rclb dec lret mov cmc fadds ja fincstp cmp xor xchg incb xor pop lods mov lret int mov les iret imul add call scas leave idivb cmpsl ja test pop or xor clc dec loop sbbl xlat mov cli lret (bad) push or adc and xchg cmc lea mov sbb movsl clc pop leave pop stc out dec jo dec into out sub cmp je sub int xor xchg mov repnz ror hlt rcll lahf in mov mov dec pop or lahf (bad) push push push arpl cli loop ror sub imul mov inc loopne pop add or bound out cmp push pop (bad) pop xor push dec adc (bad) sti sub ds stc and std das and mov (bad) out mov and stos lret mov mov repz lret add mov or repnz xchg inc mov jg xor mov add and push sbb add sub dec addr16 mov out test imul popf mov mov mov adcb dec mov mov jmp mov out or cmc dec or movsb fstl leave mov out mov pop mov popa mov adc pop xorl (bad) jnp xor je xor jmp mov add sub scas neg jne xor into notl add mov xor jno rorl jecxz pop mov and pop pop mov sti icebp mov xor cwtl movsl jns and or and lret fwait jno rcr lahf mov das rcrb fmull imul pop (bad) (bad) push pop call out mov mulps lea push test sbb add cltd cmp clc and mov loopne mov (bad) out fstpl out pushl mulb (bad) lds dec lods pop std jle mov push popa leave movsb sarl ljmp or pop xor dec dec dec xchg pop icebp mov test mov xchg addr16 hlt dec or and jge or clc icebp sbb jmp fisttpll mov (bad) insl movsl xchg mov je int3 pop mov sbb mov jle enter mov into sub sub aad ljmp fldl2t pop mov loopne mov inc mov scas andl les ficoml clc imul in adc imul jbe mov int3 mov fistl jno mov adc jmp jno and cmpsl jnp cmpsl fnstcw and in outsl inc push out sub mov inc ljmp shll xor push cmp fcomps loope jle push test sub mov dec movsl push and leave cmpsb cwtl jg cmp push lods add add das iret aas dec enter rorb enter sub lret test sarb mov dec mov (bad) cli fdivrl dec adc xor sub push fwait orb mov lods (bad) fdivrl ret mov fbld xor and lock sub or cmp jge (bad) shrl leave (bad) or and leave pop inc cmp shrb test xor dec push xor (bad) cmp daa sahf rcr cmp ficomp pop insb loop xchg mov sarb test mov icebp adc out fisubl mov sub outsb sub std repnz out loope mov (bad) fisubl sub mov les mov movsl fldlg2 mov mov sbb mov out arpl lods pop pop daa les pop add xchg test scas test movsl adc sti je mov dec pop iret mov (bad) jae pop rorl loop adc add sub pop xor stos fs scas mov and jno jmp pop pop mov push pop jb adc ljmp pop loop dec mov sub inc movsl sub ds pop popf imul shll cmp sub cli daa idivl mov jo jo das icebp pushf dec cmpsl add xor add test xchg std mov jo loope pop dec cmp add (bad) mov xchg push sub arpl in movsb bound lods add shr sub sbb in imul inc and lret cwtl sahf mov xor xor inc mov and clc sub in repz adc lock (bad) mov insb mov dec inc nop xlat fwait xchg lods (bad) or cld push int3 inc add ljmp pop xor int3 lret aas les ds xor (bad) or ret xor test orl lret xor test sbb sub jb (bad) mov push je sub fnstenv sub add enter jmp decl test icebp call test out incl movsb jb sub sub add sub mov ljmp gs fbld rorb lret cld dec ficom xchg push loopne push cwtl cli les test loop jl in xor cmpsb add (bad) lret adc mov clc or cmp pop decb repnz loop xchg xor fidivrl xchg xchg hlt xlat sahf insb push mov sbb push stc xor imul dec and call iret add fistp mov lcall cmc push sub jmp (bad) aam or popf sub aaa in daa aas xor sub mov jne addr16 ljmp leave adc pop lcall cmp jecxz aam sbb jmp push mov mov or xor push and gs jbe pop jmp cmpsl inc mov xchg mov stos jo pop call add xor sub jp mov cmpsb gs (bad) into xchg dec mov or sub push stc xchg dec pop inc lahf js popf jg lods xchg mov push test add push es pop xor imull jbe insl clc jg cmp mov repz ret pop jmp jecxz jg pop jmp mov out xlat sub and xchg or movsb stos mov xchg scas xchg jmp ds rcrb add pop pop pop pop popf ret addr16 insl icebp daa pop xchg inc es ds sbb movsb push lahf (bad) lahf xchg sub sbb pop loopne pop mov jp test idivl movzbl lods mov push xor stos je mov icebp cld jbe jns and (bad) mov test lahf cmpsl pop outsb dec inc mov dec and pop mov test cwtl imul movsb adc in (bad) pop xchg xor les lret or stc fsubs les cltd ficom iret xchg fcoms inc repz int cmp andl push or push (bad) xchg and incl push enter (bad) mov jge jnp es jmp (bad) push pop mov leave loopne stc hlt add mov jae add sbb xchg adc pop and jb add pop mov sub mov and data16 inc es sti out dec in (bad) dec ljmp popa icebp or jg leave loop mov add rol mov adc movsl push push cmp dec xchg pop outsb jp mov push push pop add cltd cmp mov testb (bad) mov fisubr fidivrl or mov ret outsl jmp xchg or lock (bad) dec out sub xlat es popf das adc test movsb pushf es leave push in pop sbb lds pop and adc xchg mov push mov xlat int3 mov or mov xchg repnz popf popa aas mov sub jae and adc mov pop mov popw aas scas mov dec mov out mov inc repnz push bound jle cmp xor mov out xchg inc pop rol cmpsb pop jg fistl (bad) dec mov jecxz ret ja jmp mov jno fs loop in push test lock dec es push or into popa and pop ret xchg xor loopne add xor add mov negl cmp movsl mov jg (bad) dec adc (bad) in nop xchg in cmp rcll iret sub and add subl sbb lahf xchg jl push rcr icebp out fsts call out xchg xor pop mov ret sti imul aam in xlat sub pop cmpsb mov xor std stos add sbb jecxz jmp adc xor imul pop or icebp movsb pop (bad) adc es push loop out (bad) pop aaa mov fbld lret std stos (bad) jbe jb jno dec pop xchg fdivp sub cld clc movsb mov mov pop popa xchg imul adc leave repz jae and daa out divl aas insb popf idivl jmp (bad) xor cmp (bad) mov mov imul mov dec out ljmp cmpsl cmp daa movl mov xor imull jg and ljmp push inc push or mov push mov mov imul shlb inc sub pushf mov jp jg or mov test xchg push stos push jge jo repnz std mov test or jb sub inc and stos repz lods and inc mov dec lret and fsubrs add jae pop lods inc loope sbb cmp or xor clc fs orb ljmp nop jge in and jmp fisubrl test mov jle loopne fidivl rclb gs (bad) loop or ret gs add outsb popf icebp cs test iret jbe dec andl loope (bad) cmpsl sbb icebp jbe jge inc xor cmp jge lock nop ret inc adc into pushf mov mov or mov sub xor rolb jp pop jmp out mov inc insb jg sti aaa and xor xchg sar int3 xchg stc jae mov gs xlat xchg sub or ret clc xor pop test jecxz pop adc dec adc bnd inc bound jecxz lret cwtl lcall out cld add scas mov adc mov mov test out jecxz sub push das xchg xor push jmp ljmp idiv ja (bad) in gs add popf jno jecxz repnz pop in and push aad push pop rorl and cmc mov data16 clc mov or pop inc and data16 cmc sbb rep out sub (bad) jbe addb xchg (bad) xchg add pop movb pop das mov test loope dec mov hlt adc cmc leave jl inc jl add fs mov out push mov icebp jge sbb int fisubl xor std cwtl imul std js lock push aas test aas int arpl sahf rclb enter fistp sub ljmp fsubrs (bad) (bad) ljmp sbb jne xor es in jmp jg dec mov into js leave or jbe imul mov insb xchg loope pop test xchg cli xor ljmp or cltd xchg or adc repnz imulb dec mov xchg sbb mov pop jmp js adc jecxz das add (bad) movsl mov loop mov xchg or inc rcrl dec mov dec decb dec lret jle mov add xchg clc cmp add jp (bad) jne (bad) insb lds (bad) sbb incl stc mov adc mov mov mov dec sti int3 sub dec fistpll inc and (bad) cmp rcrl jmp stos cltd sbb outsl mov add movsb inc pop stos sub or movsl jl (bad) xor pushf or insb xchg or pop push pushf (bad) cltd or pop sahf jo call adc pop jp loope lret sbbb pop sub mov pop mov dec (bad) mov cmp jne test or movl jg je pop in mov cld ja andl jno xchg loop sub fs movsb imul aas mov mov imulb ljmp adc adc pop or dec mov or pop (bad) cltd push pop or pushl icebp jmp or fldcw outsb test cli ja mov mov mov rcr (bad) xchg inc addr16 sub in cmp test mov dec pop jl out lea add das rcrl or fstpl and les shll dec out dec mov xor test loopne lret push inc loop repz adc sub decl sub inc sub jecxz jns imul xchg xchg shll addb fnsave stos fs out cwtl faddp das cmpsl aad clc daa jle pop pop xchg in clc lret lret insb fdivl stos mov pop das aad mov sbb iret lret jmp fsubrl lret inc das mov inc xchg outsb and arpl iret mov push xchg and movsb lret push fstpl jnp inc loop dec inc lret pop out and sub fcomp xor jne mov xor mov mov loop and add ret (bad) or (bad) in jne jmp mov xor mov loop data16 add (bad) cmpsl enter dec (bad) mov mov xchg rcrl aas jecxz aas shlb sub mov and lret pop bnd bound push lret or and and jnp in mov inc pushf dec xor dec lock inc leave xlat notl jno sub and push mov sti jne mov xchg lret scas mov pop pop fucom jg test adc jbe call icebp pop mov jbe xchg add leave out sub daa iret pop hlt or push jae xchg mov incb in das xchg cld mov dec cmp sub xchg push mov inc jne stc or cli int3 out ret xlat add cltd (bad) sub xor or or jmp cld xchg sbb fistpl (bad) test or ljmp inc sub add das or lock xor aad xchg mov add dec mov leave std inc inc scas push jmp pop xor lahf mov cmp out aaa inc xor sti jle mov popa cmp out pop insl and dec aam adc daa push aad mov pop sub adc sub sbb cltd es ja sub push dec xor in mov push sbb sbb scas lret inc pop repz enter adc dec inc mov mov push and outsl add inc loope pusha aad cmpsb dec pop in in xorl sub mov ret cltd cltd imulb lret xlat stc pop mov mov jp fs ret pop movzbl in scas mov cwtl jnp add dec dec or ja insb call fistpl pop pause xchg add or test cli mov roll xor insl jnp mov pop inc int push adc test xor cltd sahf ds cli into pop js cli fdivrl xchg testl push sub jle repnz dec inc scas (bad) push (bad) scas je std pop shr dec xor mov or movsb scas pop inc xchg out xor idivl repnz or shlb jmp out pop daa push pop xor (bad) mov insl shrb scas cmp add mov jmp mov dec pop repz mov inc pop aas sti cmp lret idivl sub cmp (bad) repnz divb push popf imul imul xchg cmp adc ja jg sub mov mov nop dec xor clc adc xor testl inc jp cld sub jg fbstp dec pop repnz jae cmovg lret daa cmp xlat inc int3 cmp jg dec xchg call data16 (bad) fdivrs dec sbb sti popa dec in or cwtl mov popf ds inc ret push jae das fsts xor mov pop xor repnz mov dec test cli mov scas pop ret sub add and fst push mov sub mov mov or pop xor repnz push mov je sarb xlat popf mov push and add xor push daa aam idivb insb dec add or jb pop lock mov push out push int3 leave daa ret (bad) and inc push sbb pop pop iret cmpsb and sbb (bad) xor enter imul loopne data16 idivl pop (bad) ljmp dec lret xchg xor test shrl xchg das leave jmp cmc push ljmp sub cmp icebp inc add mov out xchg fnstenv inc icebp or cli out cmp notb xor ljmp push adc add add daa add push inc repnz in add stos mov mov mov jmp jbe dec jb jnp movsl or fnstsw insb mov xor or sub popf in dec sbb inc sub outsb mov xlat clc mov mov jmp icebp and sub ja xor mov icebp (bad) pushf lret and stos mov pop mov je leave dec cli fcomps repz in xor call pop (bad) mov mov jmp add jle add aad mov xchg test sub cmp mov push sub and fmul pop mov pop mov icebp pop iret out and loope cmp jp dec adc sbb and pop add pop orl sar leave pushf movsb leave scas scas ja stc mov mov xchg repz push inc xchg sar xor sub ret dec pop testl es popf leave sub mov call add aaa dec ss in insb jle jle jae sub das pushf dec (bad) mov sub sti icebp xchg aas jb add jmp movzbl hlt scas (bad) rorb xchg adc xor (bad) sub jecxz mov xor sub fistp (bad) xor cmc fldenv lret sub cmp fbld sub das cltd add lcall xor xor or adc add cli push sub push out cmp and in int3 out or jmp dec out xchg shll xor out xlat test das adc rcr fsub icebp cmp iret pop (bad) push lods iret movsl mov push adc and cmp lods push xchg (bad) scas addr16 jne in ret jae sbb test and icebp nop mov or cltd lret and les inc xchg jno jb push push mov fidiv call mov push pop out pop leave add ret xchg push xor roll xchg add pop xchg mov inc movsb push jp jg xor sub jle mov arpl mov test add shll repz ja and je outsl stos (bad) and xor jbe pop sub mov mov mov jno or stos mov out push xchg push adc sarb paddd jmp xor cmpsl (bad) cmpsl mov push loope repnz push mov mov (bad) leave mov aas lock jmp shlb mov sub and repnz mov jmp jp or xor xchg push dec mov out dec mov mov inc mov sub iret dec lea mov push mov popf add clc nop adc inc mov jnp ret adc push out or je pop jnp mov out lret xor test or out xchg adcl into mov push dec mov or aad jo sbb lods std adc mov fwait leavew out dec (bad) mov sub aas popa movnti jle xor pop cmpsl incb into lea jecxz inc jp lock testb sub lods mov and addl ret and lea mov lret cs or jmp fldl mov mov pop mov jg sbb out sub sub xchg fimul nop out mov cmpsb sub adc fadds daa pop test push scas pop hlt arpl push mov (bad) test or add sub jmp andb push into dec rorb jae nop loop xor mov mov and out je cwtl stc lret cmpsl imul data16 sub icebp idivl cmpsb sbb pop insb push xor cmp call pop and (bad) adc mov jmp loopne and push pushf lods negl je cltd pop mov iret dec xlat dec das dec ljmp or inc jl adcb (bad) jg arpl fisub jb jns scas fimul or in add push call dec jmp cmpsb jbe xor cli inc shrb xlat xor negl lret jb sub (bad) cmpsl adc ret push stos and xchg or out push push imul loope (bad) loopne or iret jge xchg dec xor dec repz (bad) aad xor pop and in xchg jo pop out sti cmp mov addl mov pop mov out or pushf sub scas sub inc xor aas adc mov pop out sub or mov lock and das clc cmp push leave fsubs and push mov xor fcompp into or icebp jle inc mov sub mov repz std pop repz ds push and out (bad) jecxz out sbb clc out mov dec mov scas je out push rcr lret cmp jo xchg cld jl jg arpl imul push mov sti and aad sub popf xchg sub pop jmp (bad) xchg push inc lahf dec lcall adc mov or mov mov lret mov cmp xor xor mov or push mov test frstor imul push add jg lcall ret bound (bad) clc sti xchg jne add add cmpsb or xor ret lea test adc mov movswl or inc insb nop mov lods (bad) adc mov pop mov mov (bad) inc sub push fnop lods rep std cmp jno sar fsubrs sub scas sar xchg out dec loop das xlat out sub sbb fsub or inc lods xchg sub mov mov inc lock dec or pop xchg jmp (bad) stc out test imul or or jg test push mov or adc pop and adcb pop push out lret (bad) adc sbb (bad) das xor ljmp int3 cli mov mov das inc scas jne adc ljmp loop pop adc pop out rcl mov pop jecxz sbb pop push call repnz and (bad) out mov (bad) pop lock jb add les ss adc addb fsubp (bad) je mov gs fwait mov (bad) push and mov (bad) xor bound icebp shr xchg pop mov xor mov mov add pop cmp lods sub xor jp arpl pop (bad) inc repnz les (bad) ljmp aaa mov aam push fucomp test sub fiadd dec sar dec mov mov daa mov push int3 movsl xchg outsb int imul pushf and das les jne and fdivl movzbl and cs cmp test or xchg mov pop xor ret aad jmp pop daa jns mov addr16 lret push hlt sbb es loop (bad) gs mov fild and mov xchg push mov add scas sub sub ljmp insb popf lock mov stos cmp push add fcoms or pusha adc pop jecxz pop and adc mov pop add pop cltd or xchg cs outsl xchg fist subl jmp ficompl roll xor add cmp sbb scas sub jmp (bad) xchg or mov mov pop das js addr16 push (bad) fs (bad) pop push (bad) stc aaa (bad) sti xor fbstp push xchg xor les mov jb mov ficoml pop aaa add scas mov push das ret into int3 pop mov xlat jg je or or cvtps2pi mov pop dec outsb mov out (bad) repnz stc imul mov xor or mov jno inc mov and ja add xlat push cli push insl cli lret mov pop lods xor (bad) lea mov cmp xchg shr push jbe mov mov or out in and and mov adc lock adc inc add or stos (bad) fnstsw roll push (bad) ror xchg das rcrb mov cli into es bnd pop out gs push call jns xchg add stos mov fildl frstor rcl out jmp mov out loopne lret je les jg shlb (bad) jge add jecxz adc enter xor sub add nop jmp mov sbb or dec mov lret xor or sbb daa gs lret bound call dec pop and or or mov and in nop push dec mov sub sti cmp hlt movsb dec xor je push leave ds xchg mov or aaa pop mov jl nop add aaa cli stc aam fs lods shll pop jp lods insb leave ret xchg xchg inc inc xor icebp cmp or push push outsl jmp ja inc mov shlb xor and xor and adc pop cmp jb or jae (bad) mov imul jnp pop sub sbb sti mov and and mov ja xor jg stos sbb sub mov popa push sub inc (bad) push sub in dec dec mov leave (bad) sbb iret jmp inc popf inc pop mov cld shlb add into or cmp mov xchg xor lret jmp int flds pop inc rcll ljmp scas mov sahf (bad) (bad) mov cli inc addr16 pop ret inc sub int arpl ret push lods xchg aam scas mov fisubl fstpl dec outsb fidivl in mov subl mov jle mov xlat and (bad) not (bad) mull and adc mov sub mov imul in jmp sub sub mov clc jbe jle dec mov cwtl fsubs sub dec enter std cltd dec rorl xor mov add arpl mov jno outsb dec movsl jne out gs in xchg ljmp sub cmp cltd cmc sti push ja rcll lock flds inc dec pop jmp push repnz flds dec xor or es mov jmp mov mov inc stos jno add aaa sahf pop sub (bad) sub divl out lods pop dec rcl adc mov add mov adc mov das (bad) mov imul add lcall jmp inc pop add xor push push cmpsl std nop cmp jns mov out repz dec xor call test and mov xchg cmpsb nop dec sub or push ficomp hlt push pop movb or sub xor jne fldenv pusha imul xor call cmp fidivrl sti sahf pop pop ljmp sub ds sbb xor sti ret pop cld gs rolb imul cmp notl dec push push push in ljmp push xchg ds fsubrs aam pop or xor mov xlat pop push and push stos cwtl dec sbb push cmc pop lods iret jb mov hlt enter repz mov enter mov enter add mov adc mov lock sub (bad) sub dec sete pop fcomp mov lods inc in add lea add fadd push jo loope dec (bad) cmp or data16 imul ficompl push mov movsb adc in into hlt mov mov mov add clc add add out pop mov popf cs lret negl imul push push into cli mov insb jp mov inc adc sahf andl jge push xchg cltd mov fnstcw ss or (bad) or mov leave jne or (bad) pop out mov adc sbb in or pushl push lret fdivrs lock sarb dec loope cmp sbb fnstcw mov adc fcomps aad inc jne jnp adc scas fucomp das lds cld in xor leave (bad) ljmp imulb fisubrl jmp sub xchg and or pop daa cmc mov xor je jne mov xor sbb push sbb lret xor sti sub (bad) dec or or mov cmp (bad) push cmp inc fisubr sti jb insb push mov aas leave fistpll adc and mov jbe sub call (bad) push clc and mov lret in icebp xlat inc or aas mov adc pop mov xchg mov jno imul dec mov lret add aad cwtl mov int3 jp leave lcall (bad) (bad) fcompl xor and iret das mov fmuls icebp xchg jg into jo pop (bad) mov (bad) mov popf outsl fnstcw jae (bad) mov cmp xor repz cmp jl mov hlt and or jbe (bad) sbb insl lcall jo xchg sub test or stos dec out vmovddup stos out pop xor rorb sti (bad) inc imull sub call or push lcall inc push pop mov push (bad) rclb lcall cltd sub jg mov lds iret testl lret sbb sub push inc xor xor inc xchg scas push out cmpb push mov mov iret sub pop int3 mov dec cmc mov rorl mov sbb and and fisttpll cmp fdivrs pusha lods (bad) lds cmp fcmove fbstp notl mov leave aas cmpsl xchg pop mov dec fwait popf ret push jl and mov in std xchg adc cltd push push (bad) repz cmp mulb pop repz rorl xor cltd jge leave and jl leave xlat mov add xchg pop call fwait inc xor xor out jmp ficomp icebp sbbb adc stc mov daa xchg xor dec dec cltd pop in out das aas push bound pop pop das adc jge xlat das jg jnp sub bound xchg jmp xchg and iret lret imul scas popa adc mov pushaw jne mov jmp cmpsl (bad) dec xor test popf aas xor push mov test icebp jg sub cli idivl cmp inc pop fistpl lret xchg xor loopne (bad) stc je loopne popf shrb pushf ret daa pop push jno ret pop into sub pop rcr mov mov mov jnp loopne push xchg insb inc lahf pop adc mov das lret loope gs mov andb fiaddl negl inc stc outsb mov (bad) les jmp pop jno test sub jno dec fstps les (bad) leave pop loope push sarb (bad) xor frstor es xchg mov into mov push lahf lods xchg mov prefetchw cmp mov mov and sub das cwtl gs lods nop add sarb xor negb bound or xor mov test mov sbbb into mov inc fildll push in lcall ret fcmovnbe pop cmp (bad) dec mov adc lahf sbb xor xchg test or cli xor sub sbb popf mov dec jne xchg sub (bad) loop xchg or cmc lcall cmpsl out dec xor sbb xchg adc int3 push or or loope ja lods mov sti fbstp pop nop dec sub push dec cmp and negl push ret outsb dec repnz xchg fisttpll adc push inc pop sahf push bound sbb pop ret data16 fiadd out mov or dec out fnstsw into sub mov shr sub out sub push and xor (bad) xchg xlat fsub dec pop pop sahf out lret test push testl sub xor or sub ret mov movl popf hlt test cld imul and inc test decb es pop mov xchg je xchg scas jbe or data16 dec fstpl sub mov dec adc (bad) or inc or add stc or or sub movsb stos std mov scas outsb pop shr mov adc or les sti in sub cmp sbb mov call scas jae sarl hlt push xor dec mov cli or push mov lods (bad) out mov mov sub mov insl outsb mov sbb (bad) sub or js xlat (bad) call pop push sub xorl aad push and add sqrtps ret test (bad) out loop mov push (bad) jl out cmp jbe mov jno push dec dec cltd mov mov or shrl push popl adc jnp jle ret fdivl mov ret and sub mull xor pop push nop xchg cltd sub outsl call sub loope lret lods stos repnz jp pop (bad) sti insl stos popfw addr16 mov mov aad or imul cmp pop xor (bad) mov mov jne imulb adc stos mov sahf push out std ret fild ja imul cmp test xchg stos inc pusha xchg lret mov sarb xor fidivl dec push leave ds jecxz fimul mov in bswap ficompl inc push ja push push pop fnstsw pop adc mov andl icebp (bad) cmp sub xchg mov (bad) mov ficoml (bad) mov adc jmp mov cld (bad) pop out cmp pop aam pop mov ja pop int3 xchg or xchg jmp pop mov icebp cmp pop out inc adc inc dec jb add or jmp or mov sub rorb fiaddl ss shlb sub pop cmc pop xlat and push test mov loop js pop cmc xchg mov ja movsl adc xor out sub sbb ljmp ds mov fldcw xor sub std inc subl rcl ds mov addr16 sbb mov mov xlat in sub insb std cmp adc mov ljmp pop repnz jmp push and pop gs mov xchg call lock mov adc push lea es les mov sub insl rcr shrl jb leave call xchg jle popa fwait icebp cmp pusha sub sub dec pop stc cmc int sub mov adc add nop (bad) xchg in mov insb adc mov out dec sub je (bad) idivl loopne out sbb out mov je inc mov lock dec lods fbld or xlat vcvtsd2si sbb ret dec orb xor stos lret fs test in xor pop jp (bad) and and rorl pop mov mov sub mov adc pop divb inc lret fcomps add and push mov mov jb xor jmp rclb add or mov dec and or imul xor push cld jns or pop jbe xchg dec scas stos or mov dec addl movsb mov idiv adc orb jmp scas add mov mov mov jp pop add jecxz sub ret xlat in sub mov pop fistp and dec mov ffreep mov sub push lret negb imul dec lea cmp cltd mov push repnz inc arpl and fcoms dec (bad) repz mov iret lret ja test fs cltd stos add mov call int3 pop and or inc pop test xchg sub repnz movsl (bad) mov popa movsb and push sub lahf fs xchg jbe call jae out or adc cmpb dec lret mov out pop jg cld mov adc in daa cmpsb add nop imul dec xchg mov mov ds pushf mov cwtl rol inc add sti rolb adcl mov cmp fwait cmc icebp or push adc or (bad) imul push sti or pushl fadds sub mov and or mov jne fsubrp jae push pop leave clc addr16 sub (bad) (bad) sub fsts add mov mov (bad) pop mov dec xchg mov ds ja sub push xor and pop jno push mov clc mov pop mov inc adc (bad) idivb dec les xchg pop stos sub movsb ljmp jp mov cltd dec mov aam mov sub mov into sub popf xlat xor dec in mov scas xor stos mov sbbb jo out inc ljmp scas mov icebp jmp popa (bad) test repnz pop jmp lods add dec stos and mov das xor test leave fisttp or push or sbb jge and in lods pop out dec lds mov mov xorl mov pop mov in push dec out mov pop fs xchg cld push mov push ds xor sbb jle lods in negb out dec xor xor and push xor icebp cs sbb xor jno ret inc ss out mov jne call add mov aam pushf test mov mov fs into mov inc popf xchg jl mov sub pop imul inc test aad loope mov (bad) jg cmp pusha sub out mov fdivs dec adc cli mov push ss dec shrl (bad) shlb or sub sarl push das mov ret ss adc aad adc ret ret ljmp or push and (bad) xor stos iret xlat insl push and stos jbe xor movsl fnstsw mov sub or mov cmp sub (bad) xchg xor add jmp xchg outsb xchg and mov or mov je inc pop leave cmp pop xor xchg out jecxz movsl lret lcall cmpsb cmc or xchg add mov xor xor inc mov xchg sub jmp xor jl pop stc sub shl mov xor stos gs cli mov cmp in cltd into sub mov std xor stc pop and aad sbb stos mov adc xor jb mov test call (bad) je iret pushf xchg cli mov dec test in lods xor movsl xchg mov outsb xchg mov xchg pop ficomp or and popa add repnz cltd mov jnp (bad) sub push lods popa dec ljmp aam pop loop push sbb cmpsl subl in scas sub xor cli mov stc cld dec jg cltd add sub test sahf mov inc imul testl mov cmp sarb jb (bad) mov out nop call sub pushf push mov cli jo jmp shr cmp and mov or pop adc pop jmp (bad) loop stos cmpsl rol cwtd out je in test enter pop out jbe sbb stc das insb out mov icebp bound push sbb pop adc and sub gs mov es and xchg fidivl scas sub sub out lds test pushl (bad) mov loope push push test push and xchg popf loop push fldenv (bad) sub cld movsl push test out scas das adc xor (bad) xchg pop push dec cwtl sbb (bad) xchg insb iret dec xor jne les out dec lock and xor and daa iret pop adc xchg cltd popf bnd dec clc pop dec jmp sti notl pop in pop xchg leave cmc loop fcmove cs pop loopne or out dec mov popf rcrb and sub mov test cmp inc daa notb popf ja adc mov stos add mov xlat jns mov or mov jae lret push xchg push xchg push popf sar xor dec mov mov test push mov les pop dec mov mov mov mov xchg lahf jbe imul jl and xor lods jl test call xor add adc xchg pop push mov cmpsb push add xor mov stos je scas lods jno mov fsubrs mov push push mov push sub iret lret es icebp lea sub enter sbbl push jmp cli dec fnstenv adc ret xor cli stos call dec jg mov xor and fldl and lods and lods roll divb xor and aas repz dec or movl jno hlt add fisubr cltd jnp (bad) mov (bad) into inc ret adc xor fiadd fnstcw lret js pop out in (bad) mov into dec push (bad) mov and mov xor add push roll leave into push push and aad jecxz lock daa das pop xor out sub inc adc jg lret or loop or mov out jle insl push das ljmp push jo and daa (bad) cs fcoms cmc jae xchg icebp xchg mul pop mov lea sub leave add xor lds mov dec leave and cmpsb mov inc xchg mov inc sbb mov (bad) xchg (bad) sub test lret pop imul sbb rorb lret cld out mov out mov adc cmp sbb pop pop aam divb int3 dec xchg ljmp psubd adc ffreep popf (bad) js dec iret in iret scas (bad) (bad) jno leave cmpb (bad) fstps jns inc add fucomip (bad) mov sti testb add mov pushf outsl loope or dec test dec adc js aad sbb lret mov xchg das call push (bad) sbb xchg xchg outsl (bad) negb fild scas push adc add ljmp jne loop mov adc mov xor (bad) add push stc mov shrl hlt push flds gs leave movsl sti bound sub enter push dec jb imulb jne iret scas pop test push ds cmp xchg xchg push in repz sbb dec dec push cwtl mov add dec dec jp add cmp adc gs jmp cmp push cwtl inc sub inc xor dec leave mov les movsl dec cli or add jbe popa (bad) xor jg jbe popa xchg xchg xchg xchg adc test mov xlat fwait cmpsb inc cwtl cld rol jecxz in lods cmovge test xor je jmp out mov call std cmp lds or mov les int3 pop sti out xor test aam lcall mov mov jl shr stc xlat data16 js xchg pop nop out shr cmp leave cmpsb dec inc outsb or (bad) jge inc out in int3 sbb lods out or add loop and bnd mov out xor mov pushf cmp (bad) xchg cmp and lea and test pop dec or push mov dec sub mov fist dec mov aam clc inc mov dec mov enter sbb in push fsubs xor push sub and test je push std jnp xor jne loope push leave mov xchg lods or (bad) cs push sub test and mov pop xorl jno sub mov nop scas addr16 mov shr and mov ss sub jmp inc shrl into mov aam inc (bad) es pop stc or enter std outsl sub pop sti mov dec jmp cmpsl xchg shrb or call pop jmp mov mov xchg mov (bad) pushf imul inc movsb (bad) xor (bad) popf popf or cmp (bad) inc and jns pushf and mov notl xor ds mov xchg mov sub pop fcos or out je cmpsl rorb inc scas or jl push inc sub stos mov pushf dec lahf rclb pop sub movb fmuls (bad) sub (bad) outsl sub cmp xchg dec cmp test lret stos adc out (bad) lahf push xor aam or add insl fsts or mov sbb mull fisubr add scas fcmovnu rclb and add sub and gs daa lods lcall mov xor scas jle bound pop and jmp xchg pop clc (bad) pop or scas pop aas (bad) mov jecxz pop jmp rclb lcall xchg lahf mov and cmpsl notb lret mov in cmc dec or stc mov cs jnp adc dec popf stos cmpsl test js and (bad) pop or movsl pop pop daa call sbbb lock and call xlat bound push test xchg jl out or std (bad) stc aam icebp pop adc in sbb test mov mov adc dec daa add fistpll das leave gs movsl jnp lahf out xchg xor push lret pushf out mov iret and jmp imul int test add (bad) mov addr16 xchg xchg add (bad) fnsave push std sbb jmp dec add pop out adc ret lea outsb xor add negb xor ja sub icebp cmpsb sahf dec xchg sub out out popa pop lret sub xor hlt xchg pop or mov push inc dec mov gs sub or pop add jmp es fimull test or dec js ret push ficomp ljmp (bad) jns cmp fs add mov adc fcmove mov add sub jne mov mov xor scas int3 jmp leave mov sti cmp sub bound push sbb xor divb xor jp sub lock jnp sbb inc incb (bad) jo int negl ss aad add out dec jmp iret enter ds mov out push add xor scas xor std fpatan xchg loope repnz frstor test das fs pop mov mov cmp sub loope sub adc call adc mov jo loope cltd pop cmp and and and or adc pop mov mov lret xor lock and and sbb mov sbb or lods sbb adc pushf xchg pop test stc out ds lret xor into das sub xlat or shrl add jmp aam sub mov scas repz aas sub pop add mov ficomp push xchg int3 in push outsb and icebp (bad) cmpsl cmp sub mov out cmpb add xor test lds inc xlat fs mov scas cmp mov in push xchg push imul mov idivb lods jbe push into das ljmp ds nop adc and push jb sub and notb jp or lds mov inc bound jecxz test test into fstps add mov jae lods movsl call movsl mov mov inc xchg loope sub jp shlb lods addr16 push lea cmpsl andb sbb mov or inc pop cmp and jne xor sub push xorb movsb sbb imul jp loopne movsb ds xchg pushf xchg dec cmp lret dec mov jmp popf push xchg adc mov gs inc sub mov and jg pop out out inc xchg and test sub and pop popf adc es push and and mov pop lret orb jnp sub mov sub pop test lods sub xchg adc push pusha scas jecxz (bad) pop imulb pop test lret (bad) sti lds mov aas out inc cld inc fs es dec pop mov sti mov xchg aam fidivrl jns popa shr (bad) cmp bnd push pop (bad) dec jno xorb shr cmp test fadds pusha stos sub into or cmp jl movsb push mov jo not mov in out fs jp negl and xchg sahf (bad) sub in mov inc xchg mov push rcrl push push hlt mov imul out sub sub test outsl cmpsl outsl dec rorb dec sub fidiv push das xchg (bad) cmp les out in mov notl or sti mov cmp iret pop mov xchg popa inc add or icebp jl movsl xchg and cmpsb sub mov stos adc and pop (bad) jns xor add loope push mov sahf gs arpl rcl insb in mov adc inc call and and pop lret sahf (bad) adc cmp outsb xor jb and test mov or dec pop pop mov (bad) (bad) scas js out pop out mov gs mov and mov inc outsb inc pop and adc sbb lret into cmc outsb inc xchg inc movsl add mov jne sbb mov sar xchg xchg aas sub sub cmp mov test mov xchg and push mov adc pop push insl mov fwait out daa or cmpsl mov jge lods rorl (bad) sub mov mov xchg pop lret sbb lock popf jno vpinsrw and nop insb aad pop xchg pop dec mov pop mov lcall ror dec xor xlat popa pushf iret movsl sahf xor cmc popf or (bad) jnp push xchg jecxz es test insl jne xor mov cmp mov test lds cmp loop or loopne or adc (bad) dec into mov xor mov sub mov out mov or add push xor push or dec mov into cmp mov mov push jg add aas pop pop arpl fnclex aas pop mov jbe and xchg jmp scas mov pop pop mov dec (bad) icebp imul cmp cli sti ret aad outsb lods or jae mov mov into mov jp or aad cli out repnz iret imulb sub add das ja xchg call mov sub bound jmp out sti lret and mov in mov mov xor mov int mov sub fld inc (bad) imul leave dec mov mov mov inc add mov pop sub cmp sub nop pop loope dec lods pop add shr scas repz shll xlat lret daa pop add pop pop dec xchg and pushf repz dec adc mov cli sub notb out mov scas mov xor sub and mov fsts shlb push inc adc mov mov push add add pop call int3 cs pop add cmp bound icebp bound push lods lods pop lock pop add ret dec jmp lods movl es lahf xlat adc sti adc sub mov pop mov xchg mov lahf adc xchg xchg mov loope hlt movsb pop test dec sub xchg dec jecxz inc pop or xor push shll or push dec push jmp es jmp and lock hlt les pusha and fisub pop cmp lret sbb scas loop xchg fs stos or jmp loop xchg jmp lock push aam leave jge pusha pop sub enter jp xor and lret dec or rcll sub adc repnz fistpll and insb mov and pop push clc cmpb xchg dec mov ret dec sub xor pushf mov fnop or aad add xor inc cmp mov pushf inc add ljmp (bad) decb mov negl mov ret jno ret das sarl nop or out notl xchg cmpsb cmpsb sub jecxz adc add dec iret lods xchg les or sti cmp push jnp pop xchg out and jne push lock or pop mov cld inc push pop dec mov pop std in add mov mov push call daa push lods adc sti repz repz xor fbstp jmp out mov loop xlat scas add ret sub mov aam stos idiv sub aaa dec shr dec push sub fisttpl lock pusha add add dec xor inc aad nop in jno shrl xchg notb dec push scas mov add repnz and scas jae add aas dec lahf xchg repnz std mov or inc cmp cmpsl repnz dec add pop dec push jbe xor push push rol push xchg mov shl pop xchg popf out (bad) aaa push add mov imul push in leave sarb inc pop jecxz pop out adc sar mov leave dec fisubrl nop push rclb mull dec int cmp sbb ja (bad) xor lock xor jle incl add pop and lret out sbb sub (bad) mov cmp jg imul pop jge mov ljmp cs (bad) or pop mov push lret mov mov inc lods movsl add andl loope cmp dec leave aad mov pop pop jecxz jne push divl add cli ja jge jmp pop stos dec cmc dec mov out das xor fcmovnbe adc mov mov out add daa leave cltd loop adc pushf pop mov repnz add and push je pusha out adc fs test fcmovbe fbstp mov jge lret mov fldenv sub imul lds xor mov je stc dec xchg mov pop sub adc xor mov and mov jle mov sbb in jo pop shrb add add sub xor mov lds mov leave add dec or mov (bad) sbbl xchg repz adc mov or loopne (bad) lahf jl iret int inc outsl jno mov cs movsb fcomip (bad) mov mov lods mov rcl cs stos mov mov pop or (bad) pop ret mov mov (bad) dec add pop loope mov lret sub mov or push imull daa or push rcll (bad) push je and pop and mov jno jmp dec iret mov sub and sub mov mov mov callw adc jno inc ret mov mov xchg lcall or push pop xor leave inc and std jno inc add and pushf (bad) imul push stc mov add hlt sub sub sub nop ljmp or test inc mov icebp loope shr mov outsl test inc jns mov (bad) or mov aad jnp outsb cwtl push or out xchg jg loope outsl pop push imull scas sub xor iret add mov cmp dec xor (bad) push mov cmp add lahf mov lds in and dec fdivr fs stos xchg or shlb repz or xchg dec iret leave sbb xor cmp sti jnp pusha insl (bad) data16 std jp mov mov sbb jge push lahf (bad) or mov das pop stos add inc sub pop push add stos rcrl push jge push mov push out inc or stos in lock dec mov scas mov adc or (bad) iret fsubs and xchg shll cmp pop or dec xchg movsl cmp xchg out gs push mov dec out popf jno imul or sti and add mov mov push stos mov ljmp test shrl jecxz sbb test scas mov mov lcall xor xor add cmpsb pusha inc rol daa add inc jmp mov adc push repnz mov dec jbe adc mov jae gs xchg iret stos pop ja test xor mov gs and mov or icebp outsl lret divb insb dec bsf jmp dec rol xchg sbb out je stos sub or push fcoms xchg icebp jle sub adc mov lea and mov jns in jg sti fmuls clc xor xchg int sub ret iret (bad) mov pop repnz mov clc inc in sub mulb ljmp jne push cwtl notl mov mov or addr16 push add (bad) movsb mov sti sbb (bad) adc notb jle (bad) push pop and sbb imul cltd inc cs cwtl or mov xlat add sbb jmp sbb lcall xchg cmp pushf cs sbbl pop xor add xor mov shr lcall notb mov mov mov shrl loopne jmp xchg fcmovnb aas mov hlt cmp insb or sub add shll sub les mov fstpl (bad) lret and mov leave fsub (bad) mov cltd test inc adc ret mov lds jmp mov push xchg enter sti frstor aad mov into or movzbl in jg mov jp mov add xor pop inc mov push lea fiadd cld addr16 jne fs (bad) mov cli je (bad) jb rorl jae or pop mov out mov out mov or decb push pop add cmp dec pushl ljmp adc pushf test das mov sub into cld out mov mov ljmp mov pop mov daa ret leave ja pop add stc sarl pop add jmp jno leave mov sbb je or push ds mov pop fs sub or mov xchg (bad) pop push push mov je leave pop lods xchg sub ret push or mov sbb repnz lret pop cmpsb jmp scas out dec mov inc dec sub into (bad) lahf clc movsl push fwait cmpsl rcr push add repz fcmovnb lret inc inc inc or lods aad dec loope out notl icebp leave ffreep addr16 pushf pop and iret stos test mov dec call addr16 push mov dec mov pop mov loop xchg ljmp xchg xor fstpl mov ret fdivl jo rcll sti xor movsb int ds fcoml jg lods fmuls push popf loop mov stc ret jb (bad) lret pop ljmp out push lods push loopne and in mov push pop cld jbe sub xchg push pop add or leave jne das or loopne mov in mov jmp fcomps sub ja dec fs lret test sub pop shlb hlt stos daa pop movsl ret (bad) cltd cmp cli int3 daa jnp and mov sub sti aaa push (bad) mov mov adc push and pop mov jmp in daa and cltd sub xchg sti mov fnstenv data16 pop out repnz sub cli jecxz (bad) aaa pop sahf test and sub fcomip sahf leave inc adc (bad) test jecxz and mov les sti test (bad) or xchg mov popf inc xchg incb mov popf sbb out pop in pop inc lret add and int loope jb xlat cld xor dec (bad) pop ss and dec and or popf in sub mov sub lock (bad) xchg dec fist mov cmpsl les push xor ds std bound leave jle or sbbb rcll insl xlat cli push mov sub daa lcall jmp clc inc mov xchg or stos mov dec inc das mov cmp mov js andb cld insl mov or clc add mull cltd xor mov dec lret leave call mov sub ficom sti adc repnz dec negb jl add pop pusha pushl sub cmc clc ss or pusha pop cmp sbb test adc icebp jno imul sbb int3 lret fisttp pop cmc xchg inc xchg dec (bad) sub fnstcw jecxz cmp (bad) iret loop (bad) lods mov aas bound pop inc xor ljmp (bad) divl or sub push adc cs fsubs cld adc add push jp shrb je xchg out ss jl sub frstor xlat jns inc lret stos mov (bad) mov data16 xchg and imul cs test or lods push negl fbstp mov fs push cs and sti jecxz adc xor popf rcll pop or xlat jg repnz fcmovnu (bad) jmp push stc inc dec jne sbb dec scas xor ret insb dec mov gs call pop pop data16 lret lret mov into (bad) enter inc mov aas xchg (bad) adc jle push push out daa add xchg daa add jg pop dec sub repnz mov repz les (bad) mov jp pop xchg dec fsts out fisttp add je fsts ret test and or test mov cmp sub cmp mov or and sahf inc xchg in mov or mov xor add ljmp mov push pop dec stos jno or fs sti dec mov test in or ret pop jbe pop and lret and jge lods xchg icebp aas mov sub (bad) cmp jl,pn sbb js cwtl sahf pop xor mov (bad) int jecxz or pushf or ss mov jmp out sub or out sbb and movb es push movsb xchg daa (bad) cmc push out cs loop jbe push pop (bad) mov pop addr16 clc or into mov add sub mov xor sub add fdivr mov pop (bad) enter add pop add xchg jg mov xchg or stc loope and xchg into insb cmp scas and out outsb mov pop or mov in call (bad) cmpsb pop dec jns (bad) and movsb xchg idivl cmpsb inc out pop sbb into iret xor dec mov jmp lret mov shll je mov push dec jge dec add in popf hlt ret iret xchg out mov sub fsubs xchg push push mov dec sub (bad) mov push jne sub ret movsl outsb ret je icebp mov lret daa pop es (bad) out sub add call xchg adc xor (bad) jp add (bad) sbb cmc adc xchg std es push fnstsw pop xor test es sbb in pop mov call ret clc jbe inc ret dec dec xor iret jnp daa jge into dec jbe ds lahf fidiv xlat movsb pop adc mulb mov mov cmc dec addl stos xor jecxz xchg lock push mov daa or adc jmp sub (bad) (bad) (bad) sti bound push repz cmpsl shll (bad) mov std xchg cmp mov (bad) leave es or or mov fmul pop xlat ss pop aam pusha icebp and and inc mov rolb xor cmp cld add fld lahf pop jb jbe jb push or cmp mov jbe dec (bad) icebp xor push ret jbe gs das push insb cli (bad) fmuls xchg (bad) bound lock jnp mov push dec in add dec fs or push xchg inc dec sti jno out inc aas sub (bad) (bad) mov jbe inc pop mov shrb into mov (bad) repnz fist and push lock mov aad adc aaa or cli mov xchg repz add pop cmp imulb jecxz dec mov pop jns lcall mov mov or aam and out out sub mov push sarb test jbe mov lret push daa rclb lret dec jnp pop push dec or sti pop push ret mov (bad) lods stc ret pop pop je push pop fwait (bad) repz jae push mov pop push jns movaps (bad) stc add je bound sbb jno inc mov push mov push push xchg and mov pop fadd (bad) xchg add xor (bad) jmp lret xor mov fbld mov mov hlt jp rcl imul pop xchg negb xchg stos add adc sarb es xchg pushf dec popf xchg call xor pop sub out and (bad) mov mov in mov or or push lea (bad) pop cmpl xchg mov lock inc or ja mov (bad) and mov jns ret xor mov fs out sub nop pop push mov sub jmp outsb mov inc stos sub add pop or pop cld and mov sub gs lea and (bad) xor jl leave mov (bad) mov movsb popf pop inc mov ljmp shr lret data16 stos sub lds xlat jecxz push add int jp fdivs xlat pushf decb inc popf push (bad) xor outsb les cli test mov cmp out jne mov mov lret xlat and mov imul outsb fnstenv adc test mov dec mov out push shrb and and xchg fist (bad) cli adc rolb mov cli (bad) aaa mov jnp (bad) and mov clc bound xchg pop pop pop sti xlat lds xlat adc loopne movl lret xchg lret movb repnz out dec fwait mov (bad) sub mov add in and or mov sbb pop bound add pop add and orl out bound dec jp sahf add inc and mov xchg (bad) and or (bad) xchg jmp stos pop out xor (bad) adc out adc push mov mov ss ret sub subl andl dec in loope sub and (bad) jmp mov dec add and ds pop cmpsl dec hlt inc imul ret and adc rorb pop cmp add rorb jmp and les mov xor sub mov mov addl call jg imul mov jno scas shrl outsb inc jo popf xor testb ljmp mov lret xor add cmp inc mov cs daa sub jl movb popf sub pop sahf mov xor pop or cmpsb (bad) sub mov jo xchg negb loop mov cmc int3 pop dec loop jnp dec rorl xchg out and push loopne jecxz lock jnp adcb rolb imul test mov stos cmp mov movsb jns sti fdivrs popf cmc lcall pusha es add fmuls icebp add aad mov and and int3 cwtl sub add sub (bad) out dec and add sub push mov fnsave dec lret sub mov aaa mov lret pop xchg lea xlat sub cmpsl jne adc mov sub jnp xchg sub inc xor jmp repnz add xchg stos stos cmp fidiv inc scas xchg mov into cld pushf mov inc mov lods fmuls mov xorb sti xor xor es fist in lret fild mov repz or int and ud2 (bad) je ds or add mull popf fstl mov (bad) dec rcll mov mov scas les jbe jmp std ds jae enter add sbb loope test pushf testb jge ljmp mov add out fidivl repnz pushf mov add dec and call or std push cltd inc jno push inc xchg jl leave cmc jno mov ror loop sbb xchg repz loope pop xchg jle jnp out jg cmc dec sahf dec ffreep dec addr16 push mov and sub jns dec ja test dec mov xlat stos cmp cld popa leave or mov ret dec jecxz popa mov repz lds shrb lds aam stos clc outsb pop (bad) xlat adc xor or ds out icebp push adc lret outsl and ja loopne out xor xor rorl jns out out xchg mul popf icebp lahf lret pop xchg and hlt sti daa cltd hlt (bad) insb out into sub or pop and lods popa int add (bad) insb insl out (bad) jmp outsb xchg push repnz xchg xor cltd loopw jg mov in aam mov inc mov add sub or lods sbb lret cwtl adc push cmp cmp mov lds sar into (bad) xor (bad) incl cld ficomp pop or (bad) mov xchg sub xchg jne xchg cs and fsubrs (bad) sti and mov loope xchg pushf lret xchg sti (bad) mulb (bad) fincstp bound mov rcll or or es stc push mov xchg and jmp outsl add push mov leave lock inc xchg int out aad xor ret mov sub mov ficomp dec push shrl add in (bad) ljmp push outsb lret fisub int inc xor sbb mov scas pop sbb repz (bad) lea cmpsb lods mov inc push enter repz dec mov sub sub xor sarl mov (bad) and mov popf lcall cmp adc out mov or das cmp add inc xchg sub cltd (bad) pushf push push xor nop sarl mov jnp sbb lret mov cmc gs shl mov daa sar sbb repz icebp cs push (bad) fsub xchg mov (bad) mov ljmp or sbb in push xor test xchg fdivl adc lret push dec mov push loopne pushl adc cmp pushf mov sub imul push mov out popa stc icebp push jnp adc sub jge loope cmp movsb iret mov sub push mov leave pushl test leave loop gs pushf or pop sub ja,pt add jmp jns (bad) decl mov in and add out inc cld add call pushf rcrl xchg or insb xchg fiadd fildll sbb mov adc sub gs loop (bad) sbb adc push (bad) call xchg xor sar lahf or iret divl xchg mov in cs sub lret scas pop mov cmp jne xchg adc sub sub add adc push add les adc mov sub pushf xchg mov out mov dec push mov mov int3 or aad and and cltd leave cmpsl fldl push pop dec add push dec notb lea push (bad) pop push push inc imul dec cli and mov mov xor pop or popa xor xlat das mov out lods cmp ljmp mov and or cmp cs sub fs scas lods stos jae add xchg ret pop mov fist out test mov fwait ret or aad shlb into push jmp out mov adc push jbe nop mov or mov and push or dec inc ds adc xchg pushf sti out mov pop add (bad) jno xor bound psrlq mov push ja sarb iret (bad) xor xchg jmp bnd push mov xchg fsubl arpl mov mov (bad) mov je jmp rorb dec inc cmp test xor xor sti and ja lds shll mov push pop call dec hlt mov sbbl mov pop add mov ficompl bound icebp (bad) out add pop fisttpl ljmp or into fptan and popf jge mov cli sub xor ljmp repnz push leave loop jecxz mov jae lods xor pop dec je stos aam pop out inc ds fistl ljmp add jmp xchg aam adc (bad) lock lahf (bad) testl cwtl pushf lret mov mov pop push pushf scas jecxz test lret lret sub nop rolb push gs jb fnop xor push ret sub scas adc imul or fcomps je sub pop lods cmpsb fs jns and mov lret lret dec mov lock (bad) mov dec and out sub inc adc lret and movsl ljmp sarl cltd test dec cmp push cmp and test xor cmc pop adc negl stc xchg dec cmp pop aam and push or iret pop xchg pusha dec and mov xchg cmp test pop dec repz sub dec loop repz xchg xor mov sub mov cli std into fiaddl sub in sub push pop repz repz in mov fnstcw mov (bad) test push jmp in ss scas cltd xor stos insl cmp and push jl rorl add insl std cmp sub out mov xchg in cltd shr push add mov adc fs xor jae fisttpl popa leave iret inc xor add stos jbe sub lds mov (bad) insl jmp adc lock xchg or aas test repz mov sub neg inc and or icebp pop and aas mov bound fcoml or les and sarb popa sub adc mov pop push mov mov (bad) xor sar mov sbb mov and aaa movsb mov movsb enter stos adc andl lret ljmp push pop hlt mov push sub xchg outsl lea mov leave (bad) jae cmpsl pop sbb aad inc sahf lods mov pop mov add xor xor scas popf jg mov adc mov jg xchg rcr pushl mov mov popf rcrl aam mov cs scas cld aaa popf cld popa outsb mov roll push xchg cmpsl xchg in or fcomip cltd cmpsl js xchg adc xchg or notl add push sub add or jle dec test je dec into adc ljmp pop xchg and ja arpl or mov cmpsl pop jle xlat xchg inc js in fsts loope loope mov aam fldcw push aaa mov and push orb (bad) mov mov and testl movsl out in inc loopne shlb dec sti fwait pop int3 mov push out sub orl icebp pop sbb mov out lock pop popa dec and xchg test int cmp xor dec ret leave and xchg repz cmp out aad das cli testb lret rolb push loope outsl and xchg xchg ret pop pop jg sbb in aaa mov incl add push sbb push mov jb dec adc mov (bad) daa or xchg imulb xor (bad) outsb lret or in into push cwtl sub aad mov push ret nop out lahf repz add sub loope dec jo sub lds daa jl xor add cld xchg adc mov pop insb pusha xchg xchg test test ja adcl sub mov pop imul dec movsb shll push xor leave jnp repz dec dec ljmp leave mov insl repz lods jb jmp cli add inc xor into mov test mov stos jnp inc push push pushf lods push out fisubr adc xchg push inc mov pop and lret add addl mov mov (bad) icebp int mull dec arpl fdivrs xor dec into xchg lcall lahf add xor jne daa adc (bad) icebp nop ljmp mov dec mov xchg push mov mov dec out sub pop jae lret (bad) push rcll xchg stos test jmp ljmp andb lcall sarb fbld loope xlat in cs cmp push rclb adc push jb mov push and iret (bad) jmp sub dec mov or daa cmpsl inc fidiv pop hlt rclb mov ja sub rorl adc lahf aam push push int3 jp psraw mov ja xchg lods les testl mull and mov test mov inc js movsl add sub (bad) lea jo xor add (bad) xchg jno sub outsl test jmp cwtl cmp or dec push adc mov call insb call (bad) add sub jge xor adc mov xchg nop aas in xchg nop pop push or in fistp adcl push adc mov and add fidiv xchg (bad) xchg adc into daa (bad) daa popf fdiv dec icebp scas mov adc mov out mov add aas mov pusha add test jmp push sub aam xor imulb dec stos xor mov push movsb scas clc pushf sar out movsb out xchg mov mov cld repz fstpl jae test cli in add mov dec jg cmp fimul cmc sti lret xchg into mov mov les lea sbb ljmp lcall mov out or pop inc dec popa fwait ret mov in pop nop push (bad) je and fbstp test lret popa cmc or jp movsb imul mov pop mov mov or and fidiv jnp scas js xchg adc mov imul sub decb pop add xchg jne adc pop xchg lds roll sub rclb xchg pop cmp icebp sti loop jo fwait (bad) cmp jns (bad) mov fs test mov adc mov mov test (bad) movsb leave in ljmp (bad) mov fist sahf inc push ja mulb add out stos stos adc ljmp popf lret (bad) pop mov ret xchg je mov or jb jg rclb mov clc ret or mov inc cmp sub xchg cmp sub aad cmp add rcl xchg (bad) mov adc imul add leave addb mov fldenv insl xor sub sub mov dec adc (bad) into xor sbb es mov mov mov dec xor sub rcrl sub cmp sub xor rcll je cli stc clc mov fist fist mov inc out sub add xor xor stos stc mov push add bound or fisttpl in and push push fnstcw add icebp loop fprem1 inc xlat stc cmc xchg mov sqrtps push dec leave clc (bad) xchg arpl fisubr xor std adc call jmp inc pop es leave jge mov jmp fiaddl pop cmp mov dec fprem1 xor (bad) fldl into lahf sub outsb pop (bad) xor lods std mov fnsave cs push test ret test out add xor (bad) lock mov inc (bad) std or pop (bad) aaa imul pop pushf cmpsb sub aas stc pop jmp hlt and in mov mov mov dec clc add push sti popa pop roll xor rcll scas cltd xchg jl mov ffreep dec or sti hlt shr inc pop xchg pop xchg in into and add mov mov push aad movsb and xchg (bad) xchg adc enter or mov xor jge ss loope out sub imul je push xchg popf aas push aam sar jg xchg sarl adc sti out out dec (bad) sahf sbb out dec (bad) pop xchg jae movsb mov mov xchg push ret out pop add xchg iret stos fstpl pop adc adc cltd fbld dec ss jg int3 divb icebp stos popa (bad) bound out mov cmp lret std out jb lea xor and nop and andb cmp inc mov pop xchg xor ja jmp mov jg pop and jnp ret sub jne sti push out loope lods xlat and add fild out dec dec loop push dec fstp (bad) jnp cmpsl insb dec dec out xchg inc xor inc movsl push or adc dec mov (bad) dec pop aad ret push pop outsl dec rolb fadd push sub xchg add test and movsl mov inc gs adc xchg orl movsl es dec dec mov leave cwtl sub pop popf (bad) cld (bad) (bad) pop ret jne mov push xor iret scas into in mov in xchg icebp sti lret mov mov xor or mov jge out pop icebp cld das mov mov lret xor add out popa sub testb lods std adc mov gs daa fistpll lods dec xor add int outsl lds adc sub or lock lods xchg mov movsl out jecxz jl adc sbb xchg jbe bound or in mov dec mov xor ss call out dec or xor iret scas aaa and std jmp clc mov add or sub xor mov cmp mov ret add repz out ret fcomi gs pop mov add push dec push jl loop iret loope and mov mov int3 adc fnsave aas xchg or (bad) fsts xchg sbb test mov xor push lods aas lods push fstpl fcomi outsl imul sti pop mov mov rcrl pop inc lea mov mov out ljmp xchg xor (bad) scas sub fdivp mov sub pushf mov pop scas sub pop mov adc add sub or out mov cli stc fcom inc lcall push pop jmp pop push fisubl loope sub jp popf sub jle (bad) pop mov xor lcall jg ret sub mov je mov mov or cmc xor jno,pt add jnp lea lock inc (bad) out mov add mov or scas (bad) or pop jl pop fstpl sti insb pop enter push mov mov cs xchg scas lret jle xor test pop test andb jge shrl add cmp sub mov adc icebp subb dec cwtl movsl adc sub sub pushf data16 mov cltd sarb int and jg les cli (bad) or push inc mov das stos sub (bad) mov aas add or adc cmp mov out arpl ja out push lea fmuls repnz popf inc sub stc sub scas mov lret mov test cmpsl sbb imul jb jns insl jle shll dec pop jmp out popa lods mov int3 mov mov jl lret xor jmp mov sub (bad) cmc imul cmpsl add mov fcoms sub xchg fs cmp adc pop jge in dec (bad) mov ror jne push pop fldt sub sbb notb mov aaa popa dec scas sub push mov mov add inc pop aad or jecxz cs push roll pop test mov bsr and or push in add inc push test ljmp mulb add jg xchg xchg push add sbb (bad) and cmp cmp lahf or sub cmp gs mov dec mov mov fimul mov cmp cmp add bound xor pop adc sti flds ret xchg mov mov cli lret or out push in ja sub inc sub pushl in mov lds fldcw jge cmpsb and je lods mov and jmp sub cmp (bad) ret push xchg cmp push pusha xor lds stos dec pop sti hlt das js xchg jge push jle fxch sbb enter jnp jo xchg fistpll lea loope pop (bad) jbe loop xchg mov jle and jmp and mov repnz test (bad) icebp push das popf push adc or cmp ret neg ficoml scas mov sub add push loope lret scas mov in daa pop jmp push ret cmp pop testb (bad) adc idivl or bnd bound lret cmc pop sti jmp inc in imul cmp stc daa testb add fstl in mov divb add dec stc arpl leave jmp inc dec shr mov stos ret fsubrp out imul lret iret pop adc mov dec pop sub pop dec jmp (bad) sub push xchg das (bad) dec pop mov pop dec mov cli les or arpl divb push pop pop xchg add xor xor popa out xor cs (bad) clc cltd iret stc jmp repz (bad) push jmp jb lods jo add fisubl xor sub (bad) and cli lods mov mov add or call push outsl and movb xor ja dec dec add add pop and sub insb mov or je int3 or push loop aam pop and (bad) out add mov cltd (bad) push sub (bad) mov push push out mov in and push sbb mov add add jo jmp sahf push inc pop and ss or jne dec pop fdivrl mov inc enter inc notb lds xlat pop fdivrp bound or sub pop shlb jecxz imul cmp cmp mov or push add push pop ret xchg mov fdivp scas mov mov and sahf sub sub int3 in sahf sub dec imul movsb stos lret xchg dec sub test pop pop mov lret movsl xchg inc push and sub mov lahf je cmp outsb out xchg jge repnz out je pushf out rep mov loopne (bad) (bad) push and int3 jne popa pusha add sbb (bad) mov and pop add (bad) repz inc out pop lds stos loop xchg stc adc sbb iret and or lock sub jle add fsubrs imul dec sbb add (bad) xor cmp cs xor or push pop pop rcll daa add lock mov aaa sbb rcll data16 push aaa push xchg das xchg je rcrb jmp push lcall push out aas mov push shlb and dec leave rclb sub cmp hlt negb sub daa mov stc or aas mov mov enter jo popf pop test xchg (bad) (bad) mov xchg imul cmpsl gs ljmp pop inc insb and aam mov mov mov sub mov inc repnz inc mov pop add fildll fldcw mov das iret fwait push mov mov sbb xor adc (bad) (bad) xlat inc mov inc jg dec xlat or scas popf subl pop jecxz das into cwtl dec add xchg sbb dec add push das adc mov xchg into cltd dec mov repz push int mov or and cmp sub clc addr16 out dec call mov sbb jecxz pushf pop fs sti out jl add jmp push xchg cwtl xchg or lahf xchg lahf inc inc dec jmp mov sbb dec push in xchg cmc mov pop (bad) mov mov pop in das ljmp or aam xchg inc sub loop lret or mov int3 xchg lret pop fnsave inc (bad) xor or roll mov lret addb mov int3 fdecstp popf push mov (bad) clc iret mov pop jns or cld adc (bad) rcll in or add mov lret movzbl neg pop leave mov lds shr push lret lods (bad) ljmp jle push (bad) mov cmc jno xchg sub fsubrp xlat stc flds sbb cmp push and aas push or fs jmp mov jbe jb dec and push and test or cmpb mov scas cli cld outsl das jge adc mov pop mov fisub (bad) into aad pop lret push xchg pushw insl push cltd fs fdivs popf cwtl lods mov jno xchg push cld dec clc adc bound lret ud2 mov xor repz xchg ljmp mov negb lea mov xor icebp das xor ljmp jne fidivr mov inc nop jo test adc test mov (bad) and add rcrl call jne sti lea mov ljmp idivl stc pop xchg lock mov mov add fstpt aaa or div jmp ljmp out push jmp ds (bad) mov or scas out pop cmp out xchg adc mov insl call cmp jns fbstp sub out pushl xchg xchg mov outsl or pop sub aad loope lret jecxz jmp cmovl inc push daa orb cltd aam outsb mov idiv xchg mov sti adc dec lea popa push add and xor add mov mov (bad) rol push and add repz std sub jno lret aad cmpsw hlt mov (bad) out jg pop dec (bad) out sub dec fmuls sub das lods sub adc fidiv lds adc jge lods (bad) out lds (bad) xor xor cmp add mov pop ja imul push jmp mov xor nop int3 popf pop jl ret pop and push xor add (bad) jmp ja fcmove fbld movsl push in jmp call leave inc loop test push loope push xor sbb push pop insb mov mov and call xor xor test ljmp mov aas cltd mov adc sub sub xor fidiv inc adc aaa scas sbb mov mov or sub div in dec cmp inc repnz xchg pop fbld xlat jnp orl insb pop mov adc push gs int3 or dec aas movsl jmp cmpsl xor fs mov bnd daa cs popa mov jle fldpi fdivrs out stos mov and ret (bad) sub or add adc xor scas lret cwtl push arpl dec add fbstp (bad) and dec repz sub pushl pop or mov (bad) jge mov jge ret xchg jmp aad add xlat xor (bad) ret popf les inc pushf xchg fbld clc jg sub adc push sbb (bad) sub lcall fldt mov cmp int3 popa mov pop push xchg pop pop loop mov xlat popf jnp and or sarl inc and mov fdiv (bad) dec adc stos xor sub xor push and mov in dec xchg dec adc xchg dec bnd pop scas sub xor sbb cmp rcll mov cwtl scas lret leave pop adc scas imul sub or add stc adc sub clc dec mov dec mov cmp mov cmp (bad) pop (bad) out (bad) dec push insb out pop add and (bad) jp and idivl dec movsl data16 iret add out dec (bad) out call das mov fcmovnbe push cld lock je xchg jle loop or jns cmp movsb xchg inc (bad) cmp xchg es out sub ficompl pushf movsb adc jmp aaa add add (bad) movsl gs jae,pn add dec out adc push test outsl repnz jbe push cmc jae push mov add cs aad dec mov inc and xor ret push mov sub sub xor icebp adc mov inc aaa es out pop leave js adc scas leave cld xor add dec shr adc lock mov inc jb add mov sti and push or mov mov fs cmp mov (bad) add (bad) inc loope xchg jnp ja std jecxz mov lock iret sti notb ds or mov (bad) ja fldcw adc enter out and xor (bad) xor pop jnp or pop mov mov (bad) or and xor stos sub test scas mov rcrb addr16 pop ja lods or mov out fcom sub mov push sub in add or push (bad) jp xor pusha ja hlt movsl xchg test shl sub repz lock sarl daa (bad) dec sahf mov out push add xor sahf and mov dec jle adc jecxz daa repz jmp xor dec aam dec jecxz insl jb roll mov and or (bad) jle mov jge insb loopne loope aad rcll mov jbe das leave mov push pop dec cs divb add ljmp fpatan daa ficoml pop mulb aas imul sub mov cmc insb pushf jmp jnp xor add cmp sbb pop incl lods dec mov lret jmp mov hlt out cmc mov outsb jmp mov iret jecxz pushf add icebp push xchg dec jecxz cmp inc and (bad) mov xlat int3 jo shrl adc xchg fldl cs push inc xor push je pop pop or sub (bad) xor fnsave aas pop xlat in jg (bad) jo jo das iret mov mov pop inc lret aad cmp imul (bad) movl mov (bad) jecxz or push clc cmp mov in movsl ficomp xor or rol dec jecxz mov (bad) fldenv cmpsb xchg push add std push mov std dec clc daa jge mov loopne icebp pop mov mov stos ss xchg fcomps mov xchg out xor inc push (bad) fisttpll aad push jge mov xor into sub fdivs jbe pop notb rcll dec jae jmp sub push xchg xchg out mov pop push idivb jmp push imul inc lods cmp push xchg fmull mov dec mov mov or adc scas test rclb pop in sbb fdivp inc pop out mov or (bad) mov and add aam das std sbb (bad) cltd xchg xchg ret mov inc pop hlt (bad) xor mov sbb frstor movsb ds adc mov adc dec sti pusha pop xor or jp into roll stos je (bad) jns pushw ror ds add add jg arpl cmp sub rcrb roll xor lret daa inc shlb mov pop lret add sub and insb mov or negl ljmp outsl mov xlat mov sub sbbl jmp lea imul dec stc jb in pushl fsub pop scas pop test cmp imul ljmp add (bad) cmp jo adc cmp sub mov cmc dec xor fildl dec flds cwtl cwtl shll ret mov cmp add push fisttp adc test and jmp and sti jmp movsl movsb scas clc fst int3 popa sub andb es ljmp add cld cmpl call in rcll stc add in pop rcrb adc ror pop icebp mov add push sti push cmpsl jne push pop adc xorb mov mov (bad) pop rclb sbb in sahf mov dec mov shrb push jno rcrl out mov in fnsave sub lret cmpsl testl jno xchg repnz sub add lret mov add and imull int3 fildl xchg sub (bad) (bad) into adc loopne lret mov lret jp inc sub clc movsl sub pop in int mov mov mov and xor adc sub rclb add xor lea test xor into or sub and pop cltd ret outsl mov mov das outsb lods leave xchg cmp out mov shlb xor jge (bad) ror insl xor mov icebp mov dec ss outsl mov sarl pusha xor and (bad) mov or or fdiv jns lret sub or cmc sbb xchg es mov (bad) js leave iret xlat pop xchg pop (bad) cmp into mov insl iret ret pop and jae das (bad) push sub add icebp sbb divb pop mov leave mull movsl cwtl jg add xor lret add xor mov stos (bad) es sub lcall and push cmc rcrl movsl aad fstl and (bad) sub sub cmpsl movsb in data16 (bad) into cmp xor jl dec jne add (bad) js rol and xchg mov or out lock xchg lcall std shll push jns inc and in ljmp (bad) xchg xor iret sub add sbb sub push sub cld test xor sub mov iret aaa xor js mov insb fstps test movsb push adc cmp call or mov pop jmp adc push mov dec pop xchg and pop xor cmc jo xchg fist sub mov xchg fstpt inc jg iret mov cwtl (bad) (bad) dec sbb mov ret xchg and ret sub fdivrl and pop in ljmp sub pop loop pop test stos clc aas movsl out lret test ljmp out leave or fwait add fcoms js and mov and or cmp sub xchg call inc in cmp pop lret rorb das xor stc imul cmc out sub in jg mov mov jmp add mov jecxz icebp in mov and dec inc out iret sub sbb outsl stos popa mov sub je negl xor dec sarl sbb jmp and mov pushf push sar loopne adc adc iret test pop in shll sbb and aaa xchg sbb hlt shr mov jmp push ljmp pop jne xchg mov add xor dec inc data16 in imul xchg iret xor ret and outsb push arpl cwtl ret jecxz pop add add cltd in jp cmpl mov or adc mov iret insl nop sub shr xlat pop leave mov into je,pn bound sarl loope popf xorb cmpsl scas js mov sub and mov outsl ja jle stc mov fxch mov mov (bad) call mov push out or cmp aam cmp or push pop mov shrl inc xor stc or or add mov mov jmp popf fwait sub pop pop (bad) lret pusha pop test test lock bound clc mulb sti pop push icebp add sbb out inc out sub push cmc rcr lds shl or addr16 mov ret in mov mov push push mov call ret mov mov pop scas add mov frstor insl xor xor lock push pop lcall inc fbld mull aam pop mov push cltd daa sti cmpsb dec fnstsw mov adc ljmp inc dec stos fsts cmp pop mov aad sub pop adc fxch inc sub icebp inc or or pop add pop mov and or mov add (bad) add sub daa mov xchg mov shl lds and mov negl cwtl lds sahf mov (bad) pop dec lods dec xchg jecxz cmp daa rcll lret push jnp mov xchg push mov sub popf push or test fldl xchg dec cmpsl mov or test stos sub xor push inc sub sti fldenv inc mov sbb jns (bad) lahf dec pop and sub mov or and dec mov fisubrl notl movzbl scas cltd loop into cmp daa ret popf lcall js movsl pop xor mov jg mov jp cwtl je or adc cld (bad) mov sub movsl mov sub push mov imul lret jb negl sbb sti test fsub mov ds lret mov xchg ret mov lret mov (bad) repz cs jmp or popf ret loope aad xchg shrb mov or bndstx sub ret xchg sbbl daa (bad) in and les shr popa inc push xor sti popf cld cmp stos push cmpsb icebp pop jae cmpsb sbb cs mov xor jne les dec sub sub loope pop mov popf pop mov mov xor clc mov jbe out dec repnz xchg and out jle lcall loopne jmp sbb mov cmp mov out and test (bad) insl dec jecxz orl ret incl cmpsl inc mov ja imul mov popf dec sbb ret mov and cli mov daa (bad) jbe jmp dec jno mov lods cmp mov xor inc ja popa stos adc cmp jns in push daa add adcl negl or push loopne roll jne adc mov mov icebp ljmp add decb jle mov sub xor mov pushl (bad) pop repnz inc push int push movsb sbb pop inc pop imulb sbb mov in ljmp nop cmpsl pop sub scas loop xchg mov and push sarl mov test mov sarl stos mov pop lea ds repz jle push negb ret cmc mov loope cmp out mov mov xchg (bad) ds push rorl mov pop cmpsl mov sub in in xchg call into mov dec loope push push pop or mov aaa insb arpl dec mov or (bad) out adc and call call xor cmpl lcall push jmp aas lds mov (bad) mov iret shr loop lret mov movsl sbb or xor icebp adc sub iret xchg test cli in push push jp out and (bad) pop jno pop mov jge fs mov test rorl cwtl push roll std mov pusha lock xchg clc and pop jp sub movb out xor sbb mov mov out add mov push bound xchg mov cmp adc out inc push sub mov imul adc gs repz sub sub mov icebp out ret xchg int3 nop stos jl mov mov and int3 push mov or stc pop pop outsb add mov sub sbbb addr16 outsb inc inc inc es fimull insb fstl or sbbl pop push mov adc xlat in and xor test das push js xlat push pop sub and daa divb pop daa dec and inc idiv mov dec and mov inc inc sub or dec or cs mov mov leave arpl inc lret clc mov rcll hlt sbb mov and mov (bad) mov sub (bad) jle xor cld and push inc and (bad) xor sbb ret pop mov add (bad) mov push call cs bound and cmp push lds shlb (bad) push sub sub in das sbb mov push dec fsub add cmp push cmc cmp dec pop xor incl lret dec jl and cmc (bad) mov ret mov ss add out negb mov xor mov sti and xor adc aas loop shll das mov adc (bad) bound mov mov sub movsl ljmp es out pushf popa icebp mov push push pop dec ljmp mov jle lret hlt imul add popf pop xchg lods cmp jmp call xorb in mov leave pop ljmp dec mov dec std pop dec mov fbld imul xor xlat xchg and jnp (bad) decb rol sub bound mov mov adc xor push stos sub or shrl pand loope rep repz dec cmpsl dec jmp in flds mov push xchg cltd xchg sbb mov es (bad) mov test mov fwait hlt stc pushl inc test fnstenv jg sub mov pop add rorb mov xchg insb mov mov loope xchg lahf push lock dec mov lahf or cld movsl jne shrl ss shlb add mov ret xchg jne add xchg jbe inc rol push push add sarb arpl xchg frstor jo repnz mov in pushf movsl sbb loopne aam mov inc sub aas call into or mov mov aaa addb and or hlt mov mov pop in xor cwtl imul lret icebp mov push or or pop jmp daa and sub (bad) out (bad) mov negl lods pop xchg iret mov or lret int3 xor out adc into stc es mov movsl stos xor mov add (bad) mov cs shl xchg lret gs repz jecxz dec lods jns xor into sub negl inc and (bad) jnp and stos mov jmp (bad) sub out mov sarb add pop mov push push test jae lret cmc insl shll or cmp int outsl jecxz (bad) mov dec mov xor jecxz rol pop sub pushf mov jo pop pop in outsb mov jno and fildll cli bound fcomip (bad) push ljmp xchg jno mov push aas pop jne mov ja inc dec shlb cmp cli (bad) fsubl mov fsubr leave jecxz push cmp lret pop dec sti sub into lock lret xchg mov test pop out mov and push mov (bad) sbb push or cld loop movsb imul mov push mov sub arpl (bad) lods test insb inc push scas adc sub pushl fs xor in mov (bad) pop int and (bad) sti mov idivl test ds jge jl cmp and mov in dec popf push lcall jmp shlb gs das out add inc pop stos dec sub or fcomp sub pop gs add popf jns dec (bad) adc mov or xlat out and mov add repz fistp mov sbb adc shll in cs jns push ficomp (bad) push inc cmpsb mov lret icebp push inc mov and mov mov push add jge ja repnz leave push subl cmpsb sub mov popa subl or mov roll mov lret sbb sti popa dec cmp dec mov mov jne rorb rolb shlb mov lret cmpsl mov or adc inc xor cmp adc xor cmpsb or outsb sbb and sub sahf mov add or or push and clc jno out data16 dec ret scas jno and fistl push inc lcall hlt mov jg mov inc divb jnp,pt jg mov sub loope and mov inc test inc outsb mov mov repz and insl (bad) xor push (bad) cs lds test scas mov test add std loope add (bad) or lods mov out mov clc sub inc loopne fdiv jg pop sub pushf push lret repnz pop xchg je pop fisttp (bad) pop out shll inc sub or mov out pop mov mov xlat xlat mov cmp out pop inc sub js mov sbb or (bad) in (bad) clc test in xchg es push aam push sub sub mov xchg inc pushf ret cmp jecxz enter negb mov pop daa adc mov xor scas mov and sub add push add push push (bad) lock dec mov pop push and clc xor sub jmp add mov xchg sti in adc call clc les pop push ret jg in xchg mov dec jmp xchg push xor (bad) rorl test jbe leave icebp cmpsb sub add jg pop cmp out lods rcrb pop xchg xor leave dec iret pop and push ret pop arpl push xchg sbb add or pushf test aad jo adc lahf out daa push inc cs add push cs adc xlat add mov sbb pop push (bad) push das movsl ret inc (bad) mov (bad) adc sbb mov push mov mov (bad) jmp sbb or mov inc sbb dec call xor pop mov xchg cmc test sub mov stos dec pop sub lret pop imul pop out mov push push mov mov into sarb out adc xor mov lahf sub subb and mov repz jmp sub mov sub jl jmp jb push inc imul add mov pop mov lret ja xchg lret jns sahf or fcompl adc adc jmp cli sub xchg (bad) cmp sub enter sarl call adc sub out cld jnp ret lds sub adc sub gs fdivr inc or inc add add fisttp mov inc xchg iret in repnz xchg jne mov sub and cltd imulb (bad) fidivr cld aam mov in (bad) fisub scas sbb xchg cwtl outsb and sbb pop add mov inc loope sbb mov inc adc mov mov mov ds inc jle pop pop push je inc ret mov adc insl (bad) out int3 mov adc cmp xor add lret fisttp stos jae add cli bound aas jg sub adc jnp std in jg xchg aam push and mov push movsb imul adc shrl jmp xor xor test adc out int outsb pop stos mov mov out adc and and dec mov jnp shrl scas in (bad) sub jle xor xor (bad) out sub (bad) inc inc and lret sub decl ds cmpsl ficompl decb (bad) ds jg jo xchg mov sub (bad) out lret rol and cmp pop xchg std push add scas pop (bad) repz mov cmp sub data16 dec sub arpl out mov (bad) mov insl leave repnz iret sub dec pop cwtl and cmp add xor and jg pop and cltd and fld jnp and rcl jle push sti or lods mov fxch inc or pop jno mov ror ret mov push hlt adc dec out lret loopne loopne inc sahf popa push jnp daa ret aam or leave insb pop leave ret test xor aam jmp scas adc out frstor cmp xlat or xchg loopne (bad) (bad) jno cltd popa mov fdivrs xchg add add adc scas sub movsb (bad) jno mov mov rolb jbe sub aaa inc leave frstor lahf (bad) jae mov int3 cmpsl cwtl lret mov lock leave adc into in sub push cmpsl sub sub mov lret mov je ret dec fnsave cs xor or mov ret int3 mov push test and inc sub (bad) xchg lcall popf stos pop ficom lret out ret push scas aad (bad) dec and cli jle rcr pop sub push sub test cmp sbb lcall or (bad) cmp pop rorb mov (bad) ret xchg imul fsubl iret push insb imul sbb sub repz mov into das (bad) in into inc lret and or pop jns xor mov adc call out sub mov xor (bad) add data16 fs negl sbb daa (bad) cli shrb jne xor mov imul sub mov cld and jnp dec (bad) mov addl lret push fildll and inc in and sar leave icebp pop sbb cmpsl jne add add mov fldln2 push ds mov mov dec inc dec inc jp add (bad) pop jmp popa js lock repnz test scas mov sub imul xor fnstsw dec jmp mov stc jo movl xchg mov pop outsb dec rclb push and mov cli lret mov lock xorl mov (bad) pop push (bad) dec pop mov xchg or xchg pop rorb cld mov pop sub and (bad) stos adc dec sahf cltd jno lret and outsl frstor xchg lods pop sub lret test pop into int (bad) mov out mov sti jge jg cmpsb xchg dec mov push sub cmp push push cltd and fdivrs sbb hlt jg jne mov popf cld jmp add aam jmp mov stos bound std fnstcw sbbb pop (bad) or out mov aas mov xchg mov pop push mov into ror inc or pop je jp cltd pusha cmp add inc ja jae cmp and xchg rorl cli xchg fcmovne sbb scas adc aad stos out inc mov jmp sub push mov outsb inc mov mov jecxz pop jnp and push and push leave xor pop push push mov xchg scas ret cwtl and xlat xchg xor repnz push add into leave push cld fs jg les mov aas fnstcw xchg add mov pop sub loope inc repnz ss (bad) jne (bad) xor lret push aaa dec push repz in call or repnz xor sbb mov (bad) leave idivl int or fdivr dec fcompl cmp (bad) jo (bad) adc push push mov mov xor mov popf pop and mov or xor mov test push je jbe test sbb (bad) push push cmp pop mov repz notl popf xchg pop cmp movsl sub adc mov jmp push stc push inc pop adc nop das dec lds and mov dec fildll rclb xchg ss xlat sahf (bad) xchg sbb push and movsl outsl mov xchg jno and das ljmp aas cltd (bad) dec or and cmp pop sarb and jbe (bad) repnz cmp xchg repnz xor out add (bad) mov dec cmpsb decl and popf (bad) imul ljmp popl leave fs jle jno cs add push or or add nop decl inc and xchg test lods xchg test sbb mov (bad) loop arpl (bad) sub outsb or jae notb sub stc cmpsb mov xor jl cmp push lds orl inc mov adc push xchg es fisubl dec jmp xchg lods adc in faddp sti mov mov inc xchg sub sbb dec cmpsb add jo sub mov xchg test das sarl pop out add test sbb std int or push fbld lea into lcall xchg add add out fsts cs call mov popf sub aas cmpsl add pop in sbb add (bad) (bad) push or xchg xor ret loope,pn imul das out push push notb scas into loope out (bad) or cs push xor push fdiv dec xchg xchg rorl scas push scas cli lret sar test jb in or hlt xor sub inc out inc mov cli cmp cmp and leave out aam lret jge call (bad) pusha add or xchg mov pop jnp and mov out fldenv xchg nop movsl jbe cmpsb xchg (bad) xchg and jbe imul lret mov dec cltd fsts pusha sar add popw or pushf jne cltd mov sub xor roll icebp inc dec (bad) sbb lods mov scas fldenv dec mov cmc xchg movsl xchg cmp outsl lret ss add imul cmp and cmp shrl icebp aaa imul push jnp pop out int3 adc mov sub ftst ret mov aas js fldenv fisttpl jne out cltd test pop xchg xchg inc add pop scas push popf sbbb ret mov sti mov or adc cltd cmpsb shl and incb repz cld pusha rcl cmp sub push jmp dec test xor repnz cmc fidiv xchg ret test cmp (bad) pop ljmp cmc dec scas jno mov push inc cmp lahf xchg into test movsl ljmp pop ret movsb pop xchg mov pop mov cmp lds cmp dec adc add push push jp push push xor adc xchg sub pop cmc push sub divb shrb push divb imull jle xchg in mov sti repnz (bad) cli xor int3 add or mov sti into mov lahf push jbe mov out push push push push loopne lret rorb inc lea movsl mov pop push pop inc popf lds mov mov inc leave (bad) sbb in push add pop (bad) mov sub mov mov xor cwtl xlat lcall mov fwait into xlat scas sub cmp xchg fldln2 push jnp cmp cmpl sub mov into mov ror push cmp lds out mov xchg jno bound cmp xor pop push js add rolb cli xchg dec jno sbb and xchg stc fstpl lea and out xchg mov aad aaa pop pusha or test dec sbb push ja nop jns in call mov inc sub (bad) (bad) icebp stc cmp dec push lret out lds sarb sti rcll loope out pop ret test and mov jge lea out sbb adc or xlat inc push pop call int3 sbb dec push divl adc pop sub push jbe das jae pop ljmp pop loope adc pop add gs cmpsl data16 les lret subb rorb roll fsts loop popf mov sub lods pop fsubl cmp add cmp js mov adcb out imul add mov inc and je (bad) sti clc lcall ret movsb jg scas bound (bad) sub stc pop xchg gs fsts out test mov negl out iret mov xor xchg test repz xchg les push xor mov daa ret mov pop mov js mov ret xor scas bound test add sarl mov mov and sub jp sub push xchg add cmp xor sub fldt or jnp lods jle leave jne in pop or jmp adc push loopne into mov fs out call fs imulb stc pop imul mov lahf sahf (bad) push (bad) mov or inc fiadd inc jbe push add test mov ja push xor lock pop and daa ja stos iret cs sbb mov dec loopne ss out jmp (bad) mov add sub ja les rclb mov insb test icebp out (bad) mov cli add dec cmp xchg jg xchg jg and ds or jo pop sub pop push repz ljmp or mov mov fcomps xor std sub push lret sub shlb (bad) mov jle cli add in sahf leave out sarl pop xchg or add pushf shlb das shrb jmp icebp or (bad) jne jnp rorl xor ljmp cli (bad) es outsl (bad) push popa pop test ficomp hlt sub sub in icebp movsl adc fmulp ret (bad) sti push aas jecxz lock xchg pop mov stos jb mov pop faddp push jl push imulb cmpsb sarl (bad) out (bad) push test stc mov xlat shll mov stc cmp mov bound dec pop xchg ja pop addb popf inc xlat or add imul dec add iret sub jg xchg dec xchg jg push mov repz sub or out lock mov cwtl xor xchg jo cwtl push cmp pop mov sub pop scas xchg jbe mov test mov mov mov out cmp shr iret in xchg scas or lret imul ret gs lods mov fdivs xchg adc add lods mov adc sub incl push jg lea mov div lds add or pop mov xchg aaa xor ret fsubs js das sbb mov ljmp xchg sub sarb pop xor mov pop dec ffree inc adc xchg rol push jp push ljmp test inc sub repz add lds (bad) stc push dec or pop push pop fadds xchg mov jns sub loope fnstcw mov fstps sub cmc inc repz push push inc adc dec cmpsb xchg jns mov imul cmp sbb pushf mov pop jmp pushf nop jo lahf pop pop loop mov jmp cs ljmp dec aam gs push pop sti lret stc sub ss sub cmp mov (bad) sub int3 push mov retw jno dec (bad) or stc mov imul mov sub aam dec testb sahf (bad) cltd jmp mov jge ficomp mov xchg (bad) xor rcrb out xor aaa imulb add jle ret jne adc aaa fist jno or leave idivb cli clc mov insl mov notb sarl and call jne fcompl jmp or dec push pop sub xor cmp icebp in mov mov movsb pop dec push and out cmp pop adc repz sub pop pop enter clc pop add mov jecxz lcall mov (bad) dec inc inc xlat inc popf push adc test sub mov inc std out xchg movsl stc ljmp mov mov pop mov gs and inc push mov cmpsl xor push jg mov ficom out and nop out xor cmp sub and lods imulb repz icebp xlat into pop jo lods push dec sub mov xchg and mov pop xchg (bad) lock jl jo cmp insb pop test add in loope cmp in aad sub (bad) in daa leave jmp punpcklbw (bad) push xor mov pop xchg hlt adc mov test int jge pop and daa jg test repnz inc inc call xchg fstl xor lret movsl pusha and or aas lods repnz clc mov xor xor dec jecxz sub ret mov or dec sti jno add lret hlt mov adc pop lods loopne mov daa xchg mov and cmp repz test outsb mov pop inc dec sub jnp (bad) ficomp jg loopne push jne mov mov insl mov dec ljmp inc jp popf ret pop or ljmp push pop (bad) jmp pop sub popf (bad) fwait and pop stc sub jp lcall pop push cltd add pushf test xlat test mov decb mov in in fwait mov dec pop fld scas bound call cmp out and mov lods adc test lea sub leave cmp dec sub or xor dec xor xor pushf xor lock mov sub mov hlt imul (bad) iret mov insl cli nop sti lds into sti push mov out ds or cwtl es xchg jg outsb icebp loope push and pop (bad) dec out in mov xor fsubr mov or sub insl or sub in lret sub fs out push pop es lret add cmp adc jno push lods inc inc and int3 sarb fst jnp ja stos fnstenv xor rcrl mov xor inc push pop imul fstl iret mov sub or and adc lds adc dec stc sub pop and push cli aam push bound sub push xor mov ss and xor sub push lret lods loop jmp xlat push (bad) xchg sub jg push sub and mov out jge aam int3 jg add mov gs out movsl mov fisubl mov lcall in pop sbb ja or and jmp int or and decl pop out sub xchg sbb cmpsl inc ret test (bad) or push mov ret insb pop popf inc sbbl mov or xchg mov xchg bound dec inc ss sub pop lcall and add out popf sti pushf lods pop sbb int3 and sbb pop xlat (bad) lret (bad) (bad) cltd lds mov mov inc xchg jge jecxz mov sub xor push cmp jns dec cwtl push add cwtl movsb popf pop mov push mov push imul sub das pop push les sub icebp (bad) push cmp leave sub fnstcw repz stos add jo mov std sbb cmp insl cmpsl sbb inc int bound inc leave xchg jbe in dec push push test das aas dec mov xchg imul mov xlat adc mov (bad) mov (bad) mov (bad) push push push push xchg xor and xchg cmp add aad jmp pop repz xor hlt dec ljmp popf rorl out daa jecxz stc lods jo dec (bad) mov ret subl mov inc lds dec leave in lahf (bad) out sahf rcll mov imul cmp pop rcll inc rcll pop add mov clts pushf cmp lock (bad) pusha (bad) out add inc and push mov mov pop inc dec or and mov dec stos lcall sbb sub out jmp imul mov js stc shrl mov push stc sub sub inc mov mov xor mov pushf mov push xchg cmpsb lods cmpsl (bad) pop xor out mov sub xor cld jnp das push or push jbe leave sub (bad) mov adc lds or inc lahf (bad) mov fs into xor aas test add sub mov jne sub daa sbb mov (bad) sub sub out mov sub ss and pop out notl lret fldl xchg push sti lods movsl xchg fdivrl pop or pop add loop mov push cld and jns inc sub rcll lret pushf aam lods sub and or jp (bad) loope jle mov stc mov arpl dec ljmp test cmc leave cmc icebp cmp lret dec push dec decb scas xchg push lea pop cmc sbb fisttp imul add pushf into imul negl int jo out daa xor (bad) jecxz jecxz (bad) adc ljmp pop mov pop shrl sub push gs std adc xor sub pop pop fisubl mov pop addr16 (bad) mov dec pushl xchg and mov cmc lds xlat jns inc xor repnz fimul mov adc xor clc mov or aad lock and add adc shlb cmp jmp add jae push adc jmp iret das out and dec pop xor cld js adc repz dec fistpll inc jns test mov and ja imul aad cltd mov or adc pop stos repnz lcall (bad) loope sarl (bad) out popa pop out sbb sub sub ja lret stos xor mov movsl clc adcl fstl (bad) mov push adc pop xchg mov xchg sbb and push cmp test inc imul lock iret inc imul push ret sahf cmp adc into insb pop lahf mov lret aam jmp pop mov jnp jmp mov xchg stos lret scas gs imul cld lods cmpsl inc nop dec sbb jle iret mov dec int3 mov int3 jbe rolb mov aad mov add xchg stos out mov out jns into shrl jne sub rolb mov cmp je int3 dec mov inc sub fsubs push xchg inc repz clc lods pop lcall aad and mov lret rcll xchg fisttpl repnz leave notl test sub dec jg pop mov or sub cmpsb lock sti sub dec test out popf fidiv dec adc es ja (bad) sti scas xor xor cli negl sbb ret push mov jl fs gs sti push das data16 iret mov jle (bad) fucom jl pop inc push mov aad mov push xor dec pop and fmuls pop (bad) jmp mov push mov sbb push (bad) mov mov imul dec mov inc aas cmp lret lret in popf mov lret or mov call dec repz lret lock stos in sti bound dec ja add cs ret xchg sbb mov ja out xor bound lock dec push cmp pop or sub sahf mov maxps daa cld mov ss cmp cmpsl sbb (bad) in push sbb and push mov (bad) (bad) or jl daa add ret jbe lock push adc das mov push xlat xchg stos daa pop sub cs mov shl xor add faddp sub (bad) sti add pop idivb mov nop mulb scas lret cmp (bad) int3 stos dec into shrl sub outsl lods sub sub mov add js test jmp in sahf push add ret insb mov xchg add mov xor jbe pop lret fild test sbb add or or cwtl (bad) xor mov das push pushf pop mov aam test stos repnz iret sub ljmp ret jl adc loope sub sbb mov dec add mov fwait mov xchg jmp mov dec mov inc out ja cs pop out into mov mov nop (bad) imul test pop jge rcll mov push bnd adc iret daa ret push rorb stos dec xor insl dec push out inc ja pop popa aas pop mov jmp out fstpl xor mov popf push inc popf sti fnstsw lods xor (bad) jno negb sub mov pop dec (bad) xchg lret pop je push jecxz mov add push jp jge dec adc push (bad) ljmp dec and xchg vmovaps cltd sbb sub or jecxz aas xor lods xchg call fiadd inc dec push addr16 or mov mov add jno movsl aad pop sbb sub popf jg add rorl inc add mov out cmp ljmp mov cld leave cmp out xor pop xor scas jl xor notl cmpsl fwait das add (bad) repnz hlt jp fucom sub push loop sub nop vpsubb insl cmp pop (bad) mov and lock (bad) and push xor mov cli mov inc sub divb mov aas aaa lret cmp mov idiv out mov add std lcall push ret xor (bad) ds leave rcr or or loop stc out icebp imul and pop mov imul frstor push mov mov sub dec jmp push xor es js (bad) xor rcl js cmpsl shld push inc pop dec test lret push cmp dec mov bound xchg or dec imul and mov hlt mov mov or popf mov adc ss jg and jl push xchg imul push ret (bad) mov xchg movsbl inc mov repz out add popf int mov mov lret sub xor mov ret jbe jo add add add push test jmp xor sub jl jecxz stc mov xor fbld (bad) into pop sbb mov and test pop mov dec xor andl mov jae add rolb pop hlt dec inc sub xchg fcmovnbe clc adc out adc orb mov std adc xchg mov ljmp cmp cmc fabs inc xor out dec add mov adc sysexit int3 test (bad) insl jmp icebp (bad) enter or sub lcall fldcw add xor xchg inc add mov inc jno and roll mov xchg aam imul in add aam outsb xchg xchg add int jle inc cmp (bad) mov or or xchg push out cs sub inc sub das jns lret xor cwtl adcb sub in into test (bad) std pop lahf in je push add loope aas mov mov cmpsb repnz iret (bad) fs cwtl xor dec sbb lret ret (bad) sub sub movsl (bad) (bad) int es add sbb sar jmp sub pushf imul cmc cltd cmp in inc ss test xchg test and stos jecxz adc sarl fidivrl mov and lea cltd shr (bad) dec les pop out dec dec sub stos dec (bad) loopne repz (bad) pop cwtl idivl pop push pop sub call jmp in inc pop push ja lahf mov (bad) ss mov xchg xor stc sub jp (bad) push xchg push lahf mov xchg out mov xor negb test jl cmp cmp inc mov repnz dec inc (bad) xchg scas (bad) push and (bad) lea adc bound pop stc mov lcall dec fdivs roll add or out inc or xor gs sub test fildll jbe in mov sbb xchg (bad) xor out cltd jae movsb mov or lret fildl or and pop mov add jbe xor lods mov xchg fldln2 push rorb call mov jns push test stc loop adc pop fs loop dec jmp (bad) fcmovbe (bad) sbb fnstsw test pop daa xor into push push in xchg test lahf test xor (bad) fmul jmp aas push cmp xor add pop ror jns cwtl cmp adc shr jp mov jno out dec add sarl or jg jmp xor or adc mov cmpsl call ss sysret lret or pop add add xchg out gs imul scas sub mov add xchg push mov fmul (bad) lahf mov fldcw add aam loop subb shrb push pop sub mov sbb into fldl std push (bad) xor sti repnz sub (bad) jmp dec cltd pop dec xor mov mov xor outsb mov dec test cmpsb cmp add into mov lods mov push or inc xchg jbe mov pop adc add fldl out xchg ljmp and movsl inc loope xor jmp push in repnz fldl push mov xchg and xchg xchg out (bad) dec divb pop dec cld cltd bound mov stos or xor sub daa push (bad) scas gs or (bad) mov sbb mul and popa mov xor push lret (bad) jae adc scas arpl test rorb insl push and pop iret js mov ljmp frstor cltd inc xchg or into mov mov add inc out mov adc mov and mov lahf jmp (bad) cmp sub mov adc les les in dec jmp sub sub lret jmp add in push js dec jmp lcall pop sarb insl scas cwtl lods push mov ljmp or andl add bsr pushf add pop mov sub jae cmpsl jbe out lret sbb call sub jp pop call adc (bad) pusha psubsb xchg cmpsb cld xor sub push add jecxz js or das mulb pop bnd movsb adc mov cmp or cmpsb loope jmp jb lcall cmp enter lods es fisttp cld rcl lret cmc lcall mov pusha std (bad) mov mov or loop enter add cmp (bad) cli clc loope sar movups sub push add dec fcmovb xor mov repz xor xor pop inc out std (bad) scas hlt mov loope fnstcw scas pop inc xchg xchg inc xor rclb xchg dec jo das ret enter lret xchg out lock in jg ljmp cmp lcall sub pop pop dec in mov (bad) ss jge jo mov pop pop xchg jl leave jp lods repnz jmp out daa xor fmuls notl pop (bad) dec inc xchg xor int3 inc mov sahf adc sti jb sub mov add pushf ljmp (bad) mov into xchg add and popa pop insb imul mov or add jae fldenv and testl or loopne dec (bad) push mov add inc sub outsb test mov testl xor xor and xor sbbb mov fs dec push lahf (bad) sub mov jmp outsl lods lret mov hlt scas imul or mov sbb dec push lods push inc xor scas cmp mov ja sbb push int3 mov idivl dec mov dec imul das ljmp cmpsb cmp lds (bad) scas cltd pop cmp mov aad push cli sti dec mov xor jp mov fs xchg jl push mov mov idivl sub scas mov pop int cs cmpsb sub and aad sbb aas mov push sub xor std lds sub arpl fimul adc mov in push mov jge cs mov push or daa xor or in out clc push mov pop notb push arpl ret sub pop cmp (bad) jle repz in iret pop or push repnz cmp push sar das hlt mov xchg fistpl xchg push repz cmp sarb (bad) dec pop dec hlt popf push (bad) jbe or sbb aaa lret imul jmp popf adc xchg lds xchg sub lret or movsl repz repz ja push xchg adc (bad) fdivr jne mov popf pop repnz mov loopne out pop add rcrb (bad) icebp (bad) mov xchg mov call roll inc jg std inc add sarl cltd xor clc push mov cmpsl fdivrp sub cwtl inc cmpb into lods mov dec lret mov mov mov mov in cmp insb cltd call pop jae mov sbb int3 call cmp rcrl (bad) cmp call (bad) mov test add xchg pop cs cltd mov divl inc movsl pop pusha daa add cmp sbb into jle inc and push ficoml xchg cmp test or push xchg mov out pop aaa sbb cmp dec aad (bad) jp xchg movsb clc push push in mov jl imul je mov cmc repz adc in (bad) ror pop push mov xor cltd lods idivl jae mov out rcrl add std sarl (bad) ficom lods popf hlt xchg in add psrlw xlat mov js sbb xor mov iret mov inc das sub xor push (bad) ror mov ljmp aam pop pop xor icebp and jle jp inc mov xlat mov out mov dec cltd push sub imul sub (bad) enter xor adc scas jmp and or push sbbl push adc (bad) and out lds ret mov xor cmp sahf mov leave push adc xchg loope ror fildl pop iret sub idivb insb push and push mov lods pop mov and divb mov jmp adc pop add or repz pop mov xlat mov cwtl inc adc loop cld xchg (bad) call xchg iret ljmp sarb cld leave mov (bad) cmp out xlat mov fnsave jmp scas lret clc dec xchg mov push jne enter flds ds repz dec out jne out idivb add jne in pop mov sbb dec push pop mov push xchg pop mov cmp inc push movsb ja jl in push pop call inc dec or divb xor repz out or fist mov cs sub sub les mov insb fcmove ljmp sub imul mov pop mov jbe and cmp ret jbe jmp lret sbb lret or fwait pushf divl dec pop lcall or push push gs cmp ljmp xchg sbb int3 scas mov dec mov jnp or (bad) xchg pop jge xchg (bad) out (bad) addb mov cli mov leave icebp fadd mov mov jge imull and imulb jo mov sub mov test (bad) mov xor xchg icebp popa inc xor bound idiv sti or lahf mov aad cmp loope outsb cmp aaa or xchg mov fistpll pop push pop mov xor fmulp lods fmull lahf lcall or leave (bad) idiv ret outsl jmp loopne imull pop adc je scas jmp sbb out jg rclb jg repnz ja push test clc xchg pop jmp movsl into into test shrb (bad) and aaa or repz mov subb sub xor dec mov rorb mov xor sub sbb fmul gs mov incl pusha mov (bad) es cmp movsl stc sahf xchg shl xor xlat push (bad) lret mov sub sub stc inc daa enter movsb or and xor pushf jbe mov sub adc sarl in notl (bad) and or dec mov cld imull gs and or add (bad) adc jg int xor sbb out sub repz push out repnz imul adc ret cwtl pop setg popf test jno sbb pop pop or mov mov xchg xchg les fidivr pop xor cmp insb ds outsl mov cmp sub (bad) cwtl outsl data16 dec sti sub or xor sti or stc inc iret mov mov stos into jle data16 cmovp pop jecxz add pushl mov cmp and (bad) sahf incl mov mov lret repnz sub repz dec loopne repnz pop mov push and repz ljmp std imul fdivs cltd jo lock aas mov xlat xor mov push push and jbe fcoms jns (bad) mov inc lock sti dec aad jne sbb (bad) mov pop lods fistp jmp mov xchg bound stos (bad) jle jmp movsb shlb xlat mov pop add push jae cmp xchg dec push out sub and xchg sar pop jg pusha sub mov xchg (bad) fcompl (bad) data16 mov scas mov dec mov jo jmp sub pop mov outsb cmpsl lcall daa jmp and mov add pushf sub sbb and (bad) pusha and pop and dec mov fdivs pop sar sub lods dec stos xor stos test and mov xor sub inc popf add (bad) stos (bad) dec adc mov xor fnstsw addb sti mulb sub inc scas outsl imul mov xor sub add xor pop xor sub ds leave loop push fisub (bad) lock mov xchg mov je rcll jnp cmpsl adc mov and andb lds ja lret inc mov dec pop pop add movsb mov adc cmp addl xor sbb xlat jmp mov fisub lret sti rcl fisubr dec (bad) loop fidivrl fistl mov stc imulb mov xchg mov jbe arpl loop xlat pop rorl arpl jmp and jle or mov (bad) negl xor sub or popf rclb jmp icebp pop fcomip xor mov push mov (bad) outsl sub rol aam lds mov leave fstl xor mov xor jnp movsl hlt pop bound xor movsl pop sbb mov and mov mov xlat mov mov rcrb je mov (bad) mov shr xor movsb pop sbb xor subl sub repz mov push adc push sub jmp das not repnz push test (bad) mov mov mov mov sub push or ret popf (bad) or incl inc sub jmp loope repnz sbb lret sub mov push ret (bad) leave cmp sub out outsb xor xlat xor sub fcomps sti adc sti test add mov jg or sbb les mov sbb (bad) jo pushf jnp xor mov inc daa and in mov xor sub dec mov adc shr (bad) jp xchg (bad) aad pop (bad) leave sbb pop ret xlat and lods inc and or ret pop pop fs daa sub (bad) xchg sub push (bad) lahf fsub test add je clc or push sti push ret mov scas mov xchg adc jl cmp lock cld roll xchg call ficompl xor xchg repz and jmp cmp pop lock fidivrl push and sarl mov (bad) negb ljmp call or es mov pusha in adcb jmp inc popl cltd (bad) jmp add xchg or add xchg xchg jne mov insl mov imul mov xor stc pop mov add and and lock (bad) cmp ret inc sqrtps fidivr enter sub xor jp mov mov gs dec f2xm1 inc out xchg je push ja push push pop adc mov or test jne inc jmp lock sti and mov dec scas xor int3 cmp (bad) out sub bound sub and in sbb sbb sub repnz rorl rol cmp fsubrp sub fidivl dec add or int in rcl dec das out movsb imul pop or push icebp mov daa mov or pop mov lea mov lods sub mov fstpt add (bad) xor add sbb mov ja jns mov loopne pop ljmp ja sub sub aad leave jg outsl cld jne inc adc (bad) imul sub push jmp test jno (bad) cmp jl movsb les std fcompl cmp xor cmpl les mov insb dec mov sbb notl sti lret mov push fimul fidivr mov pop jmp je jne xor mov sub loopne pop push test out lret dec dec in xor ljmp mov mov jmp xlat data16 out mov jns xlat adc test int3 dec dec rorb or cltd sbb mov shll pop sub mov jnp sti (bad) push add inc out add or add mov xor cli cltd dec ss sub (bad) or cmpsb cld das ret push xchg jno xor pop roll sub xor or sbb xchg jbe dec sub lret push pop mov mov in lds call jnp and ds mov cmp out popf aad ret ja out rclb shrl mov fcomip ljmp orps and push out mov das jmp adc jl nop pop das xor adc ror jb mov jne inc imull sbb push sub mov les sar push repnz add je (bad) push pop loop pop shrl jns pop sbb push xchg movsb push push adc fcmovnbe xor push jge fwait and adc mov scas sar push daa repnz in pop stos lret mov jg (bad) fs and jg xchg imulb out push lods pop xchg or movl sub jmp loop psadbw (bad) push dec jo test out fcmovne call mov jl lret or mov pop xor ret sub xchg imul imul jne call push bound or lds push and cld mov jmp (bad) cld aas mov adc push mov out loop push cmp or ret and clc xchg and insl lret jne fidivr push adc in mov mov jl push sbb sbb ljmp bound xchg dec add (bad) jns pop xlat stos nop sub (bad) xor loopne clc pushf jbe in dec mov test mov xchg sub jae sbb pop jns pop dec lret jecxz sbb (bad) dec push stc or fnsave or pop xor call into lea ret jg mov sub lcall sub cli cwtl sub xchg lcall mov jns lods testb notl sub xor or aad cs fucomi cmc out xchg movb pop out lret ret inc mov xchg adc mov test or inc mov andb in xor jg ja jns scas (bad) std into pushf mov mov push pop mov adc mov jae push and push mov (bad) jne pusha mov mov into pop inc mov movsl inc adc mov lds (bad) mov pop icebp fimul cmpsb ror cmpsl mov add cmp out xor jge mov ds mov xchg test stc sub loop jns xlat mov add sbb mov xchg into setne adc xor sbb mov and das or pusha sti and cmp je jl push or push in or inc adc mov and or pop cld mov mov xchg sbb (bad) mov mov imulb or outsl inc mov rol aam push lock mov xchg xor mov js leave cmpsb fidiv jbe dec and dec xor xor sub mov sub negl ror dec mov outsb pop adc push or cli push cmp sbb (bad) xchg xor (bad) pop push sub sbb int lods jne jae push xchg xchg dec add mov mov je fmull test lret aam movsl in cmp push sbb rep xchg ja fs xchg mov dec mov adc pop fisttp mov push rcll rolb jl jmp hlt adc loopne adc iret mov ljmp mov idivl aas mov call das cmc cwtl jecxz fisubrl add mov (bad) fsubr (bad) push adc adc and lods add xchg fs mov mov ret aaa inc add mov lea push jne (bad) js xlat pop (bad) and and or and push data16 ret jb (bad) lock (bad) dec xor jecxz sub js adc je ljmp call mov mov fistl xchg mov dec mov sub test in lret mov outsl popa shr mov push pop add (bad) stc sub dec (bad) icebp dec dec push inc loop xor out mov aas add je (bad) (bad) daa ljmp test cwtl bnd jl jb mov xor je into cli bound push jge scas dec add pop shll stos arpl insb mov outsl insl aas push sub (bad) or fsubs mov sub mul testl xor pushf mov push xlat pushf mov pop cmpsb xor inc enter enter dec jmp sub mov sbb inc popf inc cli xchg aad and outsb lret ret icebp jge ljmp stc and mov fisubr (bad) leave mov push adc dec dec clc or xchg fwait mov lock sbb adc out pop outsb mov push xor popf inc add test popf ss dec out mov fdivrs mov or add cmc out ret pop shll sub (bad) dec ss adc push dec test jbe sub cmp stos cmp pop (bad) in fs fstps fxch ds mov sub fsts ss mov xorb rcll pushf xchg lock xchg movsl in mov mov dec cli gs cltd and inc loope cmc inc lea sub sub fst adc scas out pop mov pop mov (bad) cmc and outsb test out (bad) mov scas cmp push sahf pop ret insb outsl dec mov ja inc (bad) jp jg out (bad) sub dec push les fsubl popa jae subb mov nop pusha xchg mov sbb sub leave fnstcw sar icebp js jmp repnz mov rcr imul jle jmp sbb add insb add and cmpsb dec daa xor mov xlat jmp inc sti adc sahf push pop dec mov jbe jno leave je daa cmp int sub mov xor testl into xor std subb lds lret mov (bad) mov ja loope or sub pop out push dec (bad) inc scas cmp sub push lods ljmp lret or aam sti mov cmp mov rorl ds pop jl (bad) fcomi loop shrb stc dec dec fucomip add or sub xchg les jle pop loop push scas mov cmp (bad) lods dec out xor (bad) jp inc dec gs adc sub (bad) (bad) mov mov ljmp mov in jbe imul inc xchg in jle ss pop push lea ret mov add in enter dec das jg ss aas and xchg pop mov xchg xchg paddd fs addr16 fdivs decb jecxz pop popf and push ljmp sub add popf inc enter dec push sti xchg shll sti jne mov daa into jle adc mov mov movsl cltd out push or in fwait jb xor dec inc loopne jns dec loopne sub and dec push add pop int3 sbb imul cltd add cwtl sub std js mov push inc add cmpsl xchg movsl out mov int3 movsb add scas cmpsb mov mov add cli je mov adc icebp mov sti int sub bound mov and imul mov in int3 sahf sub lahf fldcw divb roll into mov and (bad) adcl push sub mov dec mov mov dec lods mov sub push dec jmp rolb ds sub fstps insb xlat dec scas int3 repnz loop (bad) jno cmp xor xchg scas int outsl or fldl js sub pop add sahf dec in shl das (bad) cmp jp jns in sahf sub (bad) ficomp adc mov dec shlb pop mov enter fnstcw ret or and jge mov ret icebp and dec js and add leave fldcw jmp xchg mov cmp xor mov mov mov das jo mov mov pop aaa dec mov adc pusha inc and or fist push imul mov adcl (bad) les lret fldenv fsubrs lds jle data16 mov pop dec ljmp rcrb xlat sub xchg pop mov das ret fs out push lret xlat aad (bad) dec into fbld add sub das add lret int3 fist sbb mov mov shr clc orl cli adc mov push push das addr16 imul rcl mov add push mov jmp (bad) and fadds or mov mov inc fs movsl sub lock mov fsubrs jl adc jae or lret or loop gs clc jbe pop jae adc sub lret sarb lods ret (bad) mov hlt cmp jge popf pop lret xor inc imulb xchg dec pop daa or (bad) and (bad) or cmp mov mov mov imul data16 inc adcb xchg pop xchg jmp cli mov test sub mov mov sbb sub aad dec shr pop out adc icebp fs popf (bad) or add or mov push pop jns push adc je mov add pop xlat in fsubl icebp lock in mov ds sarl lret push fisubr push lds cmpsb mov imul mov jmp inc push rorb lret loopne xchg adc xchg in popf cwtl dec adc repz mov out shr cmp mov cld imul xchg xor fdivrs mov pusha adc mov dec test shlb cmp dec insb fld stos sbb pop fsts dec inc inc adc popf sarl out popf ss xchg test ss push inc push jle or push adc xchg adc andl jne icebp ret adc lds cwtl ss mov outsb dec add sub loop pop in outsb dec ret das jb mov jle in sahf in daa push into fs mov fistl jbe sti sub xor mov (bad) xor jp push popf pop cmp xor das xor fxam xchg iret (bad) test daa jnp sub aas or sub decl xchg jmp mov stos popf mov xchg inc jecxz fstpl add dec jbe sbb xchg scas mov lods and es stc pop movsl pop clc jmp (bad) xchg fldcw scas sub mov mov ret xor nop mov push ret push inc sub pop mov jecxz setb icebp sub js (bad) mov loop nop lea sub popf xchg wrmsr dec mov jbe je out mov adc xchg loop insb xchg popf mov cmp pop frstor cmpsl rolb mov mov aam in push mov movsl lcall in cli (bad) mov pushl push pop fwait pop jmp dec mov dec divl loop jne andb push pop add js aas cs xchg xchg jg cwtl jg xchg inc mov negl push clc lahf xchg cmc adc xchg or cld ljmp xchg iret loopne out push pop cltd fcomps leave jo mov or das lds mov sub pop out cli aaa leave mov shrl add shrl pop cmpsl push pop sarl aas sub jmp aaa xor mov sub mov call pop (bad) sub mov icebp imul popf jmp xchg ja js push and inc aas mov cmp (bad) jecxz dec and outsl sub and sub jb push jp adc lock daa xchg mov sub f2xm1 jmp adc clc cli lods mov mov xlat inc into sub ljmp dec out fnstcw clc (bad) hlt stos mov push mov and stos mov mov push or fistpll fild enter sub lret inc ret push leave dec out pop add mov mov fldcw loop jmp jno xchg fsubs add insb mov cli sub jnp or rcrl cli ss mov jno xor cmpsl test mov jne add (bad) repnz mov shlb cwtl cmp ret pop lock and in lahf add xor cld adc mov out xlat inc jl out (bad) call push dec xor pop adc jmp clc ficom jns xchg ret xor mov or xchg bound lret mov xor and lret sub loop rorl movsl jge sbb sub mulb sub jge sti movsl xchg cltd add cmpb in movsl xlat sbb sbb and popf (bad) (bad) pushf jne addr16 into xor mov cmp adc jmp hlt clc jae mov ljmp notb aaa push stc insb lret xchg jle jmp cmp sub push out cmp ljmp nop inc (bad) repz stc call pop mov movsl jbe push outsb xor call mov pop sti cmp push movsb fiadd sub test inc (bad) scas pushf fs stos dec cld test test cmp sub push jmp fnstenv pop jne jp dec and jmp subb pop pop fcomp xchg sbb sub xor mov mov dec mov or sarl pop sub inc and stc xor add cmpsb fwait dec mov shrl push jno push aad xchg daa in adc shll std xchg dec xchg or cmc (bad) lcall stc loopne ds cmp std pop mov icebp (bad) and je mov push stos les and or jge sub jg lret add mov aaa dec jbe sub dec mov mov xor jnp sub jb ret fs add fwait movsl imul (bad) mov daa in cmp mov outsb popf cmpl cwtl add lret cmp inc xchg add add ret pushf sub add xchg (bad) sub push cs leave je mov dec sub push pop push lods daa xor cli cmpsb pop imul mov xor and popf push mov pop dec pop aaa xor jbe popf jno bound pop (bad) inc movsl xchg sub cs out je push pusha ss call push jno cltd bound and lret sbb xchg adc xchg movsb mov (bad) sbb in jle sub jmp clc push mov stc inc add jmp pop push (bad) shrl enter das jns dec jg or scas inc or push mov stos or aad push jmp add xor jne mov pop out bound sbb mov (bad) dec jl test in mov iret fist xchg shlb inc scas cld iret xchg or and sub test (bad) jae fisub fdivrs sbb mov jmp add cmp imul jmp fisubr jb push adc out sti mov xor dec ret (bad) xor sub pop aad pop rcrl mov mov lret push mov into (bad) and mov mov jb mov imul push push mov pop repnz flds and push push popa sub xor stos stc mov ret pop stos leave or inc dec or rcr out mov js (bad) aam or add cmc in pop add pushf popf dec sub cmp std or stc xlat or or jl leave jle jb adc pop scas imul arpl push xchg xor sbb xlat rclb daa mov pop or sub pop imul gs jbe xor jg pusha sub ss sub add jmp add ss add ret xchg xchg lock xor test xor and std mov push imul and adc cli inc or inc add mov call test cmpsb out dec stos dec lret xor nop xchg aaa mov (bad) xor mov xlat mov or add mov pop add or bnd imul cmp aas fcmovb mul jno sub fs repz jecxz jne sbb or out stos jecxz xchg out je and out lods jo mov cmp jb test (bad) lret outsb call xlat shrb dec aas call das mov mov dec sub pop into mov (bad) notb out int3 jle xchg jns daa adc (bad) sub jmp adc sub pusha mov (bad) sar loop out mov test or lahf (bad) js cs sub jmp loope les pop sub cmp mov xor pop test sub and iret test pop inc ja lods div adc stos cld test mov pop xchg lret mov jne jns jg add idivb inc sub push dec repnz in test and in add pop lret roll pop lods xchg movsl scas xor stos sub in ret popa mov lods lods aam out and insl mov out mov lcall mov adcb rolb xlat int adc dec xor daa cltd jg mov pop loopne fsts add mov (bad) out insl hlt (bad) mov test inc add jb dec rcr icebp mov int insb adcl push daa pop popf js xchg stos es out rorb lret mov out sub or push lds (bad) dec data16 xchg loopne insb xchg ficoml adc sub notb cmc add jbe ret adc ret outsb lret fnstenv mov jo dec sub or xchg je push or xchg fimull adc (bad) push cli aaa adc inc sti outsb call rcrb ds xor xchg out inc pusha xor mov stos call jge out gs and test or xchg sti pop movsb or push clc and jle push dec pop pop xor scas gs scas sub cmp mov cmp jae movsl incl push out mov xchg sub sub dec mov mov out movsl cwtl or push cmp or fidivl (bad) nop inc stos daa gs daa pop mov in jge pop jmp lahf fiadd sbb cmp push pop xor jne mov out pop and jmp stos push xchg jmp inc leave inc dec mov mov cmp pop inc repnz sub cmp add lret add jo mov cli leave imull xchg cli ret std (bad) hlt fs scas pushf inc lret mov fist lods sub cmp fcoms mov clc pop inc outsl sub sbbl clc stc daa addb jl xor mov fmuls sub adc fsubl mov into sti jb sub dec mov data16 data16 pop imulb dec xchg adc jg lods jle cmp cmp xor mov pop out xor in and or stc pop into test cmc mov jg and mov mov jle push push (bad) pop inc icebp aaa sub cmp push sub pusha push inc movsl mov movsl stos mov out lret add pop sbb add mov aaa mov insb scas xchg xchg mov jnp jo loope sub mov lcall aas sub mov xchg mov pushf inc call mov icebp sub mov pop (bad) or out push push push push xor sbb add addr16 cltd sbb mov shll pop add cmpsb dec push dec test (bad) dec push pushf jbe movsl push sub xchg pop push mov jb movl cmp mov sbb shr fs xor mov bound sar negl cmp icebp xchg das test clc mov adc xor lret push repz mov es jmp jb pop sarl mov fscale and daa (bad) or pop xor std dec jl bound pop das fs fs (bad) mov dec mov inc fcmovnbe outsb mov (bad) adc jbe das std adc and cmp imul pop out in movsl ja out mov xchg testb cmp jle bound shl xlat inc sbb adc movb push (bad) cmc adc dec mov dec (bad) jg and cmpsl (bad) das (bad) mov sbb pop in mov cmp push in sub xchg mov adc lcall pop jbe outsb inc xor pushl in repz dec loopne ret push lea xor add inc lods scas imul dec jp leave daa mov sti sub cmp jne mov movsb mov mov daa mov iret dec mov icebp pop imul jae out in push mov jnp scas jno push push lahf lret lcall mov xor jns mov add enter clc add stc dec (bad) mov cmp xor and and inc or fsubs pop (bad) or sbb das push inc mov inc pop sub and add xlat out mov js das mov mov pop (bad) rclb ljmp stc xor cmpsl sub push fmuls mov xor pushf incl adc adc mov ss scas or ret dec dec test push rcrb cmp add popf fstpl pop movsb pop push mov dec lret mov notb inc call mov scas gs fldenv or nopl rcrl into das lock sub xchg cmp fimull push negl pusha add popa pop out sub in ljmp push aas inc and jl outsl or aad cmp cmp cmp sbb cmp mov mov fdivrs (bad) negb pop outsl daa sar push dec cli test mov ja push clc loope xor jnp sbb xchg shl mov push xchg clc stos popa push jmp repnz jg cmp jbe push xor mov sub xchg lock call out addr16 and (bad) xchg je js mov pop clc xor call outsl xor (bad) lock div imul sbb pop out push xchg movsl jge and ds call push ret test or adc js pop xor cs cmp xor out xor dec xlat and iret out and lea cmpsl repz lcall lahf push mov jmp popa das rcll jge lea fistpl mov fisttpl (bad) idivb xlat sti fldl cltd adc xor shll pop sbb sub das dec or fsts mov and mov (bad) insb dec imul lock outsb inc inc ret (bad) or out sub jno das sub out xchg push mov ret pop stc add mov (bad) imul dec adc test or sarl rorb inc out loop aad (bad) (bad) push rcrb mov dec jmp pop jae sub inc ret je jnp ljmp test lret repnz leave inc sub or jne lock icebp pusha daa push jae cs inc xor loope out or icebp fildll mov pop mov dec or ja addr16 jnp push mov pop fbstp js lock fdivl out mov sti pop cmpsl pop jmp lret inc sub push in dec lret je or shll pop cs test xorl sbb adc xor popa data16 movsl int3 jns gs movsl sub push repnz xor aas les rcl ljmp lahf xchg pop add cmpsb rcrb sbb push imul xor mov mov or cld jmp cmc push xlat jge push add jecxz xchg jecxz pop sub xor add xor xor dec shrb mov insb lods or xchg enter cmp and clc mov lret outsl mov dec mov mov adc mov xor add out lret push and aas jne mov add rcrb jae dec lods cmp cld (bad) leave jns mov stc add cmp icebp imulb and cmpsb imul cmp out jle ror test xor sub aad call not dec jmp movsl cltd or ljmp loop jne fwait rclb call pop int3 sub gs sbb les lret aaa jl mov push or cmpsb cmpsb mov xor stos loope push loop pop test lods jp xor push xchg fcoml xlat mov (bad) add mov (bad) mov scas repz xchg mov sub push in ja bnd jp inc rorl fildl jne mov add mov mov jge in and pop sub mov out mov lds or xchg iret mov ret ja int3 jg mov imulb aam pop ja fimull add popf int mov or xor and loope cmp cs jnp test sub call clc (bad) mov out (bad) cltd sub xchg jb bound loopne and jg stos or fldcw mov mov xchg shrb pop pushf or mull add sub and xor (bad) jg nop sbb loope lret ljmp fs pusha xor add rcrl (bad) in outsl (bad) (bad) test mov dec ljmp cmp push and lret mov lcall (bad) mov out loope cmc adc nop mov out enter int jnp in sbb push or les lret jg mov pop fisubl lahf fnstcw out sub rcll aad pop (bad) push add dec negb gs xchg xor mov or mov xor sub push and repz mov or nop leave mov and mov mov mov ljmp into xor push pop popf mov rorl xchg lock in dec pop cwtl or popf aad mov jno imul cmpsb rclb insb je jmp jb sub jecxz xor je or and sub int dec sahf jg add aas adc xor xor and int3 cs lods inc (bad) and mov pop icebp inc dec sbb lret jmp jg rorb jbe xchg int3 sub xchg pop jae add subl or add ja icebp and (bad) pushw out pop xor cmpsb mulb cmp ja mov jg pop lock pop out sub cmp mov push mov das sub dec sub jmp adc lea lcall pop leave jecxz push int sub mov shr mov push and jb out lds xor jp xor hlt std sti xchg add or cmp std add cmpsb iret (bad) test mov (bad) pop bound add in and (bad) mov cltd push out xor mov add pop std lods icebp int3 xchg jmp and and imul pop cmpsl bound add and sub sbb and dec add shll ret mov lods rorl mov lock divl addr16 and jmp mov fnstcw ds lods out add (bad) fs lea pop and out or sarb jl icebp or pop sub jnp cmp push push jnp scas xor lret xchg jo push xor lret icebp jge insb jmp cmpsb (bad) dec test push mov insl ds sub gs mov icebp dec pop insl mov push pop jb push sbb add imull xor jns xchg in xor test unpckhps sbb or push test call int3 movaps mov repz fwait (bad) hlt mov pop movsb mov mov pop adc aad cmp (bad) (bad) mov imul pop repnz lds fimull ds mov mov insl mov push push icebp arpl dec sti sub pop mov mov ds cs xchg idivb (bad) fwait adc pop xor xchg loope (bad) (bad) cmp adc dec cld push push shll jge test jbe xor mov push push add inc inc and sub sub sub aas stc sub pop out inc inc or mov jle cmpsl movsl cmp notl arpl push stc loopne xor in mov cmpsb push adcl mov and mov ret mov push imul mov dec in jle jnp mov adc dec mov in outsl xchg or add repnz or mov lds ljmp dec sub leave add and sub add arpl pop cmp sbb pop mov sbb jo into cmp adc mov mov mov repnz xchg inc psubsb repz pop in and hlt mov (bad) out out mov jne and and in vpsubusb aas lahf insl add or or jge js lods jmp daa sub cwtl fdivp mov add (bad) or dec (bad) xor sti pop scas jecxz sub ret jbe jge hlt into push cmp add aam adc cmp movsb dec pop pop test jmp pop (bad) aaa repnz mov push out sub add pop jg add sub in xor xchg xchg (bad) sarl (bad) shr icebp mov jb mov paddusw insb pop dec push mov mov mov adc jmp mov (bad) fldl daa fist rol cmpsl js cli ret das and stc imul or mov movsl loope stos push jl mov cmp jne pop (bad) lods adc test add add push sbb add movzbl dec adc popf mov inc sbb cmp mov sub add fistpll adc or (bad) sbb aas mov (bad) in lods in or out rorl lahf add in inc or push out out jmp jg cmpb pop stc and in pop jb mov cmpsb xor fcoms (bad) nop dec and mov rolb push fucom inc xchg jecxz jl pop shrb sarl in lock pop stc cmp add mov sub add das or loope lods pop pop adc mov push sub mov sti xor mov scas jnp scas loop (bad) (bad) negl or xor or add push or test shlb enter mov push or scas or dec fisub clc lret ljmp into stos xor nop mov jmp xor add adc mov fmulp add and lret sbb pop pop mov repz add notl push adc and ljmp jnp pop jmp sub mov push pop jl sub insb and (bad) imul add outsb scas repnz push push mov bound xchg xor int3 sub mov sbb cli xor push add out ljmp mov stos dec inc insb mov out lret test ja and mov mov das xor out lcall fs dec inc and test lcall into dec pop out lahf sbb loop mov or sub movsl repz push idivl dec in dec movzbl push adc lods ljmp imul loopne cli aas lods push sub and aad xor cltd xlat gs jmp ds mov dec jae or pop push fs and (bad) ljmp adc iret mov mov mov mov sub test ds add mov dec scas pop lods int add xor mov (bad) or add idivb jmp fsubl dec ret mov and hlt pushf add jnp adc test (bad) cld lods movsl push sub xor mov mov (bad) sub (bad) pop outsb jmp imul sub push mov cmp pop scas sub dec je sbb xchg fsts icebp mov test cmp mov add cmp ja fs mov ja (bad) cmp icebp cmc rcll jl lret fisubrl mov push and pop mov push inc sbb and xor sub jnp adc sahf je pop dec xchg into dec mov sbb or pop scas mov or repz mov call stos outsl lret pop icebp cmp mov lcall insl insl orl push insb and mov mov das out cld lret pop xor loope push jl cmpsb dec xchg jns movb add lea orl call xlat les xchg jg adc jge add movsb jl ret push (bad) xor aad insl lret mov sub pushf in js inc cs xor aaa data16 cld pop xchg jbe (bad) fsubrs sbb daa push inc std das ret cli adc adc sbb adc or (bad) or adc pop sub inc sub pop pop lahf jnp push fldcw push bound dec out jmp mov aad and mov lret (bad) fcomi or add jge mov cwtl jnp mov inc inc stc fsubrl pop lods or gs fsubrl insb addl mov out cmp mov mov mov scas xor sti into sbb out inc loop nop pop shr or and xlat xor xchg push mov inc outsb sub out dec test stos std fcoms add push test dec (bad) jmp jle push iret mov or cmpsl test adc loope mov dec test mov les lret ljmp jnp psadbw push jns mov std in cltd rcrb ficomp pop jbe mov js mov push enter mov (bad) lea mov jge mov lock mov xchg mov arpl xchg js lahf push adc mov sub sub pop fs std outsl shlb shll rcrl or lcall push adc add mov dec lock lahf mov rorl out loop rol iret add push gs (bad) xchg insb sbb add (bad) and loopne pop mov scas repnz sub outsl mov dec and pushl (bad) push sbb popf incb pushf mov mov cmpl dec in push pop out sub rcrl das jne lock push ds and daa mov pop cmpsl sbb testb mov jmp enter push repz dec or dec test mov xchg mov xor xor add cmp pop pushf add inc sub popf fisttp sub test xchg xchg inc pushf out xchg sbb sub mov daa (bad) (bad) mov test sti loop test mov add scas push dec jb mov jmp sbb lret inc push fldenv ret pop enter loope in mov stc jo repz loop pushf or and sti adc push imul xlat mov daa (bad) cmp fld jbe dec add mov sub pushf or xchg mov pop shrb jns mov daa shrb xchg pop xchg ret mov jmp lds lds out pop mov (bad) fsubrs cld mov jge or out leave and adc imul insb mov mov jne (bad) fldt fdiv rorb mov insb mov aad lock and aas mov mov enter mov push daa add je lret or mov ljmp arpl add stos popa dec fidivr into jle ret jns inc sub enter dec dec dec in flds pop add je xchg inc jb xor jmp je stos lret out dec enter iret or xor es insb popa mov cli or idivb loope and jns sub sbb stc or das xchg (bad) and roll sbb pop test loop xchg inc cmp rol les ret dec sub int ss jnp je shrl xor sub fild xchg das sahf adc negl cltd pop scas (bad) sub inc add idivb (bad) ret in and jp pop or flds ret pop sbb mov inc out into ret dec jecxz loope leave adc jne imull xchg lds nop sbb cmpsb imul inc or cmp repz add xor xor pop cld loop nop orb loope pop vpminsw ljmp sbb mov mov loope inc dec cwtl mov leave movsl jo mov inc xor loopne xor sub lret (bad) pop jecxz add repnz stc in sbb mulb mov add ret rcrl pop add xchg or jmp imull into pushf (bad) xchg jns test or sarb (bad) fbstp push add cwtl add xchg jae push out clc dec negb mov loopne or fildll dec leave repnz rcrl adc add push lea adc or icebp inc xor es and and aad push or pop das inc (bad) outsb inc xchg jbe push int3 pop dec fdivrs cld rclb or adc clc xlat test enter rcr mov xor and dec xor mov xlat test out pop sub (bad) (bad) icebp pop and in jp mov mov int3 or das add adc pushf mov imulb imul lret scas lret loop or mov stc xchg cwtl pop icebp repnz sar ljmp jge push daa std xchg enter mov adc loope push fcompl sbb es daa or cmp lahf sahf push sbb daa aas sahf das std and cmp aam sub mov push (bad) mov or pop iret dec sbb into into mov mov and push pop jb mov repnz cmp lahf gs dec cmp (bad) dec dec scas xor stos mov mov sbb fwait (bad) mov xor dec or les adc stc ret hlt sar je xchg or dec jecxz adc scas push test pop adc or pop loop fldl ficompl mov push out mov hlt jle adc scas int3 cmp dec sar enter jecxz dec cwtl and or fisttpl lds into rorl sub cltd lds das sub (bad) divl pop pop xor orb adc mov repz lret dec fisubr pop and xor or and push and cmp int3 out mov dec jnp cmpsb iret cmp mov mov push or idivl inc add ja cmp in hlt pop int and add sub sub das cmp or push pcmpeqb mov mov push fnstcw sahf repnz iret repnz (bad) sbb jbe cmp scas jne scas mov icebp fnstenv aad xlat jge jmp push push bound pop ret sub inc jno fs repz jmp add les ret pop mov inc test gs xor imul sbb out mov sub xor add or sbb mov dec xor sub and es ret ds mov sahf shlb jne mov mov cli mov aas mov daa jns test pop or mov xchg adc mov or mov lret mov enter aad lea mov mov sub loop xor es pushf xchg xlat cmp push int3 bound mov sub out out xchg sub dec or lds sahf pop cli int3 mov mov call jnp or lret in (bad) pushf xor mov mull mov inc or insl ja and cmp cs xchg jecxz pop sub mov or xchg mov call inc lret add pop imull das fs mov dec test dec adc mov jge inc lahf push movups jmp xchg jmp sub out (bad) lods dec mov pop pop jns xor fsub notl mov mov and jne push or sub into xchg mov cld iret jae xor xor cmc daa push (bad) iret and stos mulb out adc mov xchg pop push jmp add data16 fdivp jg sub add sbb ret lea mov adc or stos repnz xlat mov xor inc add xor cmc insb into pop and mov pop out std push mov and bound dec jno movsl shrl or add add (bad) or cmp imul add fwait popf outsl push cmp repnz sbb bound clc lret neg pushf pop mov fs lods loop out repnz (bad) jge rolb jb pop stc push cmp pop int3 loopne xchg xor ret insb cld sarl loopne adc mov sarl mov adc jecxz dec mov inc fs movsb call inc or pop mov sub imul xchg jbe repnz lret iret pop and push iret adc mov imul (bad) cwtl (bad) sub cltd shlb xchg or (bad) sub scas add lahf push mov insb mov loop jge ss dec jge mov sub call cli lret lea or mov mov fstps sub mov xchg inc popf fildll sub les ret jne dec in mov and add mov imul pop ret adc mov (bad) jp sarb sub outsl fs stos xchg sbb icebp subl sbb cld adc dec (bad) pop into push daa and std mov cmpsl cmc xor lock shrb leave pushf arpl lds mov lea xchg fs or mov out out out pusha icebp or mov scas fadds mov imul jne dec dec or ds pushf lea push pushf inc inc out dec mov xor outsb cwtl rol mov bound sub jns lret adc shrb lock mov into push pop or fsubrs iret fdivs (bad) ja jo pop sub fisttp movl xchg pop dec xor and xchg shll dec lock mov jg jbe fiadd sub and sbb repz dec mov xchg int3 cmp mov xchg jmp mov xchg sarl cwtl mov mov push dec outsb movsl xor (bad) and mov dec pop xor aad outsb repnz clc mov jp add and mov adc (bad) xchg ret jp add mov cli xor pop cmp and jl sub sub daa ja fwait ja jmp jecxz cmp mov lcall pop cwtl xor xchg ja mov push mov das mov xchg lret mov sahf sqrtps sbb add cmp mov xchg aaa dec push (bad) sub or repnz mov mov shlb lret xor lock mov sarl adc inc cmpsl push sbb (bad) mov cltd pop xlat fidivrl push pop xor push sub pop xchg enter ret fistp adc and jecxz push mov cld gs cwtl pop int fs out mov fisubrl cmc (bad) in out negb jns incb xor incb dec into in ret xchg les stos jecxz xchg mov inc (bad) incl pushl popf pop rorl pushf cli push mov mov out add (bad) xor scas mov adc (bad) push mov or scas pop push repz lods cld xchg test dec inc pop push jmp mov dec dec mov pushf or mov imul imul hlt loop push jns dec (bad) in sub and sub pop inc test ds sub in pop cmp cli sti lock scas lcall xlat pop adc fnop add jbe mov inc push adc sub add sub pop jmp lret mov xor int3 stos in in movsl push mov cmp add add sar pusha test sub mov mov and pop sbb jno fstp lods sbb idivb pop les cmp call jg sub pop lret call leave out pop ret and into mov xor adc add push and push inc pushf stos mov (bad) dec add jle xchg adc or cli add into push adc push mov call adc or or inc xlat pop sub and mov jne pop mov mov xchg gs lea sub xchg (bad) mov adc jmp and or ljmp push ljmp push mul jmp adc pushf cmp icebp jbe xchg ljmp mov es cmp jg mov dec idiv test sbb ds ss cmc or popf push dec imul or push cmp fstps (bad) lahf pop lahf pop xchg pop sti cmp dec ja or popa jb lds add push js jno sub les pop inc mov or ret sub cmp lret notl shrb mov fwait mov jo cmpsb cmp ja mov mov jns inc jp jecxz leave (bad) jne hlt ljmp sub int xor add repz dec mov xor scas cltd ret jg cli jbe fdivrs adc adc add icebp int test xor cmc xor or pop mov pop leave mov (bad) push mov or add pushf pop push xchg stos cmp mov cs gs sub out sub jmp pop xchg nop add lahf lds push idivb xlat sbb and mov xor push mov pop cs push leave jg mov dec cwtl in lret ret or inc adc out pop lock dec inc repnz decl data16 adc sub and cmp rcr fdivrp push out xchg fiadd pop jbe cmpsl push fsts xchg cmp jno std inc shrb xchg out gs out repz (bad) incb popa add pop add mov jg stos xchg out das lret pop mov outsl shrb imul xlat and or icebp xchg ret stc das call nop jo dec pop clc mov mov and jl notl dec sbb stc clc mov cli and pop (bad) fmul clc lahf mov sarb (bad) bound add mov insb mov mov icebp and add fwait pop or mov cmpsb mov push mov pop idivl pop adc sbb sub dec ret mov sbb fcmovb push push hlt psubsw pop ret je cltd imul sahf out loop inc sub cwtl iret (bad) mov jno xor dec jmp xor out stos or pusha cmpsl aam int jnp imull mov sub leave xchg and out idivb push jge fnstenv jmp jo stc mov sub outsb (bad) repnz pop test or inc mov sub xor ret pop cli scas inc push mov mov ds imul jo daa adc cmp or cmp sub cwtl (bad) div idivb gs dec sub pop cwtl sar mov or cmpsl pop data16 jo ficoml adc out mov xchg lea xor jno sub and add js push dec xchg mov iret lret call daa mov (bad) pushl cmp or or arpl mov xor outsb out sub jg iret je popf push or push inc jecxz mov aad mov insb js or (bad) in out mov jbe loope (bad) xor cmp xchg test dec popf dec cmpsl xor and mov or xor mov push xor mov sub pop jbe js fsubr jmp out jg xor dec jmp sti mov cli in xor xchg sub repz (bad) mov push jmp mov push jb insb imul lds jge sub enter xchg sub pushl dec push je loop stc je imul xchg (bad) fs bound jg adc adc add out adc inc fucom jg mov sbb leave fimul lds jno insb dec mov jno sub pop sarl xor jp adc iret jb (bad) fnsave dec mov lods (bad) jge,pn pop leave test stc jno cmpsl hlt daa xchg (bad) mov icebp pop pop pop loope cmp add (bad) pop mov and inc mov mov cs insb pop icebp stos aas je inc xlat out and ret outsl mov pop mov lcall test push pop js out dec lods jle ret sub xor push dec cmp aas popa fistpll jmp int cs ret jmp lods mov ret ja into push adc xchg clc ljmp pop and sub dec idivb xor inc dec or and fcoms insl pusha cmp add cmovns (bad) sub dec xchg push pushf inc out or aaa dec js mov ja in repz add sarb and jo lahf sbb lock inc add ljmp (bad) mov cmp push xchg imul sub pop mov adc or xlat adc loope data16 scas gs sti (bad) shr xchg pop std dec inc xchg jle pop std dec dec xor pop mov (bad) out mov sbb clc lahf dec icebp stos lret lock xlat sbb cld into xchg push push fistl aaa and stos gs cltd and std cmp dec jl push inc pop or sub imul xchg (bad) aam je les push movsl jecxz adc push out cmpsl sbb test cmpsl scas dec xor xchg popf push fistpll cmpsl sbb pop and sub add (bad) cmp pop lds icebp inc sub mov mov or push mov test in addr16 adc (bad) stc arpl sub fstpl sub aad xor or je in mov (bad) sbb sub movsl pop pushf sarl clc jbe popf cmpsl mov ss add pop xchg mov pop mov icebp (bad) out fldcw sub or push or mov adc enter inc rcll mov pop xchg cld xchg mov xor or cmc xor pop stos add test es jae sti fnstcw push imul lds ret add push add repnz fs aam data16 das add int3 cmp lret pop mov movsb jle (bad) sub jecxz cld insl mov cld cmpsl mov push (bad) push ds outsl shrl sarl push cs inc mov (bad) adc test adc ljmp mov les jmp stos lret test dec jecxz,pt aam sahf push or out xchg stc stos or jmp inc or lods sub lock adc into imul movsb or mov rorl cli ret push jbe push ljmp cmp enter faddl jmp std mov daa push push in in and addr16 push leave fninit ja insl cmpsl xchg (bad) pop (bad) aaa shrl sub xchg repnz and xchg or add loopne out jae out je xchg mov (bad) por repnz dec add call cmp push sbb xlat je out loop xchg xlat mov in popf ror jbe jb std (bad) fsubrs xchg xchg add jmp cli je mov inc popa jl jle leave notl (bad) jmp lock or pushf rol mov adc sub test pop pop shlb xchg mov pop imul pusha pop or sub or shlb rorb lods roll test cld and push push pop shr push test scas mov dec jecxz add in sbb loope sub sub pop jmp out ret fidivrl nop ljmp scas fcomps ret ja loopne movb (bad) and out adc inc das add pop mov lret cli lcall push xor xchg out mov adc ret inc xchg dec pop loope rcrl in rorl sub ret or add leave sub mov cmp dec sub cmp adc xchg mov cmp or jno add popa push xchg imul sub inc mov push dec lds xchg jnp scas aad mov push dec xchg xchg aam pusha es push imul daa mov ret pop (bad) lret mov dec sti aas add xlat sahf push dec push gs xchg sbb add pop mov cmp mov dec outsl mov std xchg xor push pop out cmp cmpsb outsb mov mov rcll push and (bad) cmp rolb mov xor lock and add in inc jae sub xchg fyl2x inc mov and subb (bad) lods aam add call add roll out cmp ficoml loope ljmp sub dec mov cmp xchg pop (bad) loop xchg clc loop iret jg in mov fwait dec mov jge lods or sub leave xchg inc pop mov scas mov adc xchg ljmp xchg pop mov popf pop xor movl or call push mov mov inc inc mov neg xchg lret fidivr rcll out pop (bad) lret sbb or (bad) push add mov icebp sub mov mov jge add xor stos mov or mov daa iret sbb orb inc int3 jb xchg repz into ljmp cwtl or add inc and mov (bad) fldcw push ds stos paddusw outsl (bad) test dec pop jmp add (bad) mov sub outsb push in repnz jae push fldl inc imulb stc mov mov dec adc push xchg pop xchg mov cltd movsl outsl enter (bad) mov into mov xchg and daa pushl xor xchg fstpl dec rcll cmp movsb adc mov mov test mov add out sub (bad) mov fsubl scas lods stos xchg popf insb push mov or shrb and fldl repnz cmp fsts cmp and sub cmp add and dec fisttpl fcmovu jge cmp sub xchg jb out mov je int jnp push pop sbb pop mov xor (bad) inc scas ficomp xlat add xor add sti rol stos les out xchg shr dec call pop jmp repz (bad) div cmp or stc mov xchg mov pop cld jecxz sub cmovle test movsb repnz dec cmp push xchg pop cmp gs repnz mov pop test je test cwtl sub popf fldenv and mov xchg push cltd push stc sub lret leave jge sbb inc add bound sbb pop rorl orl cmpsl mov cmc inc xor push ret mov gs out (bad) in fwait xchg imul xor xor push sbb pop pop lret mov sub ds jns out push push xor lcall sbb stc sarl sub ret movsb scas or jbe or dec mov pop or test jl xchg addr16 jle xor jecxz iret gs mov or mov push out xchg std loope aas cmp mov push and and fld xor sub testb fcmovne ds pushl in aas mov std add leave stc int xor imul pop movsl xlat int3 xor or mov (bad) jae jle imul dec clc and mov sarl fwait push jmp ljmp sti ja cmc dec loop jns lods adc mov xchg shrb jl,pt je pushf cs or sbb pusha (bad) push sbb call fcompl call dec mov add lcall loope xor sub mov jnp movsl fstl or sub dec or or dec test xor push mov mov fist shl xchg pop cmp or sub lret dec pop stos cmp lret cmp fnsave inc mov and sub out mov sbb inc cmpsb dec or lods sbb pop out mov xchg out jmp test xchg lds iret mov loope jp addl ret mov dec popf cmp and (bad) outsl mov push out mov (bad) jno dec jle bound aaa jne jl arpl and mov dec mov add jecxz add and and rorb mov cmpsb push stos mov psubsb adc pop insb mov jg mull dec dec cmpsb (bad) xchg shll clc call lods inc xor push insb daa jg dec sub jbe jbe pop xor add enter ds repnz inc jle (bad) repz and (bad) mov dec (bad) dec rorb lret sub test scas jle jb ret ret das inc mov fmuls push push sub ds xor push sbbl or test mov cmpsl cmp ss jno movsl popa pop idivl push data16 and (bad) and inc es into cwtl mov test ja jbe std xchg inc xchg push orl out pop sbb shrb (bad) lods mov rclb and inc push xchg add icebp xchg or xor adc sbb aaa xchg shll sub scas fsubrs or scas xchg cmp jmp mov push push mov mov xor mov cmp pushf mov mov insb lcall sbb mov pop mov je xor fadds rorl lods fdivs fidiv jmp sub in xor add scas fistp jg pop hlt adc pop xchg xchg pop mov pop pushl loope push into shll neg sbb dec lods divl or ds in in or roll scas add aad adc ljmp push mov js inc xchg lds shr inc push jg xchg ljmp fistp fstl dec iret or out fnstsw dec pop xor lret adc sub and mov (bad) mov adc and cmp adc inc (bad) ret sub cmp icebp out sub jmp push pop test jae adc sub imul jnp pop cmpsl mov and add cs mov xchg in xchg repz sub idivl pop (bad) int jo push inc cwtl mov iret cli cmpsb pop xchg scas sub dec xor pop or jp adc xchg movsb lret inc lods outsb mov xchg cmp (bad) out mov xor leave xchg stos mov mov into scas inc (bad) pop je dec (bad) cmp test leave iret daa adc xor xchg rcrl sarb jle push test mov jge mov sbb sub (bad) mov xchg cmp pop push mov inc sub jl les fistpll daa jmp xor lea js test clc stos cwtl jge cmpsb lcall dec out lret pop imul jecxz pop test or std sub mov out mov sub sahf fildll mov cld inc mov test mov adc sub sub stos sub sub inc fnstenv stos push stc mov and push (bad) xchg (bad) mov pop mov or rorb push sbb cmpsb mov mov xchg push stos sub mov (bad) sub imul dec or add add adc in sub or (bad) dec dec jp adc push pushf stos mov cltd pop xchg out jmp mov xlat push and das sub hlt jnp sbb and ret pop push xchg and pop xchg add push cld fs icebp mov daa fsubrp in into push dec lds xor outsb sbb scas mov mov div xor lret and add mov hlt fbld sbb in (bad) sti cmp jmp mov push add adc leave incb sub imul jmp outsl jne mov mov mov (bad) sub fildll sbb mov jle push outsl sub popf lcall pushf fstps test in jbe or push and xchg out cltd (bad) adc je test pop cltd push or std in scas or and repnz sub xchg scas iret loop xor stos push jb jmp sbb mov in mov dec movb fisttp in and mov pop or icebp jmp frndint (bad) sub pinsrw pop outsb push faddl fwait adc call ljmp sub ljmp inc dec push out or iret push movsb mov push mov mov jae adc mov xor dec sarb mov lahf stc xor ss adc push mov popf stc ret leave inc iret leave cmp pushl lods inc sbb and fwait inc cmp out adc mov orb popa fidivl adc pop mov adc pop (bad) fildll or out cmp cmp dec xlat add cmp test mov les push (bad) test test movsb out push push into adc repz scas cmpsl arpl rcrl xchg fcmovbe and dec dec in dec incl sbb aaa xchg xor js jecxz mov xor jg sahf out pop sub or jno imul loopne mov xlat push cmp add fsubl sbb fistp rorl inc idivb pop push push loopne pushf popf in aas pop mov add leave pop sub mov jle,pt ficompl push inc add adc les shlb push sub rcll mov into and xchg iret cli ror into add ret inc into jmp mov mov (bad) rep pop adc stc mov hlt stc in call mov xchg mov div nop pop mov cmp pop dec mov or cli jmpw in lahf fldcw mov jno pusha shrl notb mov lods pop leave jmp jns daa loop out and push and and pop pop sub fistp jecxz pop xor loop mov mov and pushf inc out dec add push imul jb or gs add xor test dec repnz or xor inc mul ret or mov loopne out mov js movsb in jae sub mov add loope mov stos push std jo add xor test cmp es sub in lret adc scas aaa jg rorl (bad) push sub and outsb lods ds out ja jae and aaa xchg fsts inc fs push aaa lea xor dec bound fcoms in cwtl loop mov jne out xlat jae or aaa f2xm1 mov ficoml daa pop mov fistpl std out (bad) (bad) test imul jge std scas (bad) xor dec mov push fwait sbb or (bad) adc mov insb iret mov (bad) dec pop mov ficomp (bad) xor xchg xlat xor popf hlt mov cmp mov lcall mov jge mov fstp ljmp sbb xchg loop xchg lods adc inc popf pop into jno sub fisubrl cmc in and xor jmp add test imul and insl mov cmpsl adc jmp mov rcll dec out sub rclb andb fidivr movsb jmp sbb add adc lahf ficom add dec xor or sub lret add loope add mov bound add rol or sbb add and std dec sbb fildl and movsl dec cli xor or cltd add xor int3 jo sub fisubl sbb int add sub idivl adc int3 sub mov (bad) insb movsl ret push fbstp out push (bad) sub scas sub aas dec mov jecxz adc mov shrl jmp aad pusha pop add and push sub sub mov fisubr test and adc stc stc ja mov jp das shll out sub and sub movsb adc sbb mov add adcl loope ja add and push icebp stc xchg mov and stc mov cmp outsl call adc sbb das jae loope cli jne jmp push gs xchg shrl out fldenv dec push dec mov rolb xchg jb sahf (bad) mov and repz sub roll mov imul inc and xchg cmp (bad) dec (bad) xchg push test pop inc das push jmp cmpsl mov push (bad) xlat inc cld ds out xor out sub cld add (bad) ja aaa outsb sar in idivb mov clc lock mov mov fwait jp mov add inc mov dec (bad) sub (bad) rclb push scas bound xor repz push push sub (bad) or int3 pop pop out cld hlt mov push and xor mov xchg dec imull or add idivb push sbb (bad) clc call mov dec and push xor adc enter fistp lods mov and (bad) mov cltd cs call mov lea or xlat sbb ljmp pop punpcklwd and sub stos mov iret pop add les bound in cwtl push mov test bound dec mov shrl push test cmc sub scas jge sbb jl mov std or jo,pn push mov cwtl mov imul dec mov add fwait (bad) cltd cmp cmpsl push xchg ds imul xchg inc call imul scas int cmp and insb xchg lret sbb mov xchg or jecxz,pn push adc call add int (bad) dec (bad) std and pop in movsl fsubr pop mov ljmp and rcrb or xchg pop sti or std addr16 sbb sub daa xor mov pop ret cmc in xor adc cs dec clc ret cmc call lahf sarl leave sub pop ret ret pop fdivrl repnz push sbb (bad) jne clc pop dec addl inc xchg std adc test push push mov int pop mov icebp mov xchg je xlat out adc ja loop sub add std mov fcoms jnp inc (bad) push arpl mov inc push xchg sar xor mov mov inc push push sub jne add pop adc rorl test push icebp in mov xchg mov jae xor pushf nop popf aad sub push in sub in add xor dec adc pop jecxz add lahf fsubrl scas shrl ret cmpsl rcl je pop into add sti lea out xchg leave mov pop idivb push pop mov in mov xchg call mov jg pusha ficoml jle push notb div jae xor or and es enter (bad) outsb mov mov and dec bound lods es sub push int3 ret jns inc out scas mov pop mov stos loop das jmp adc xlat cmpsl mov ficomp out push xor ret cmp daa mov cmpsb mov out mov popf push sub lret fdivr mov in or ret dec dec xchg jbe test jno gs and pop and jmp sub xchg jb and sub mov hlt jmp inc pop ss add sub mov loopne ds jnp pop loop test dec xor pop sbb divb pusha mov mov inc dec (bad) fsts pop movzbl mov insb and mov xor mov dec repnz add sbb adc ljmp sub int3 jecxz xchg push pushf in inc gs pop cwtl aas ret xor pushl sbb dec xchg mov pop adc xchg cld les fstpl xor mov push ja decb mov enter add jmp push push lock sbb mov je or sbb mov das out jno dec inc mov aas bound mov push (bad) cs neg dec gs xor sub test xchg or fidiv (bad) lahf fistl dec cli sub and xor test mov not sbb or leave dec (bad) lahf popf pop scas and fisubl mov les and flds xchg cli cli pusha mov sub or fisubrl in ja gs jo xchg mov inc out es sub xor push stos sub movsl movsb stc std dec cltd push mov or push lods sbb scas lret mov or push dec lret mov cmp das xor pop and out and data16 roll mov call (bad) notb fstps xor dec pop xchg mov rcr mov cmpsb dec lcall ficoml addr16 fnstcw or fnsave push and mov xor xor xchg (bad) mov inc daa cmp mov add push adc iret and add inc pushf mov bound rcrl ret add mov mov cli gs (bad) dec out fwait gs stos sub stos push add push jnp push pop jbe lods repz (bad) push push adc mov or pop cmp or cmp out dec aaa xchg pop mov scas mov dec mov pop (bad) test xor fisttp divl jae rorb lock pop dec pop or inc mov mov xor and int3 jp aam daa addr16 aas add aad pop dec fst (bad) call and mov movsb sbb xchg repz in cmpsb lcall xchg ret test add cmc aas jle jbe add das repz (bad) xchg mov es adc stc adc cld xchg add pop lcall (bad) cmpsl push pop js sub icebp pushf das movsb mov pop lea rolb pop ret and or mov pop (bad) pop xchg test lret out call xlat sahf lea movl add fs enter xchg (bad) dec les or cwtl xchg mov or iret and jge push std dec test rcll sbb (bad) mov sti lret adc scas repnz fstl push jmp jbe mov mov repz sub aam xchg pop icebp pop xchg out lea and jno dec (bad) pop push mov pop das pop add loopne lret fwait mov repnz mov sti lds imulb cmpsb or sub sub cmp loope sbb arpl xor adc in in hlt xor inc aas aam mov sub lret inc dec jl,pn icebp mov xor cmp add mov dec or icebp sbb lds ret lea xchg push pusha mov cmp pop xor cs mov fnstenv cmpsl xchg imul repz sbb sarl or sub pop add das fs mov pop cmp mov sub (bad) sti pop and cs sub sub lret mov lret lea mov call push cli hlt xchg pop call xor or lret repz cmpsl rcll add (bad) cmp sub adc stc enter and and mov cmp dec movsl rcrl fcmovu cmp iret xor iret inc call shrb cwtl xchg rcll repz adc ljmp lret icebp cmp sbb jle sbb rorb push jnp mov adc fwait int xchg aas xor rcll mov and push xlat test rorb pushl sbbl dec jo mov xor cld mov fmuls dec repz adc mov das jmp cmp out xchg test es das cmp adc ret jp dec pop bound add and mov leave xchg jns dec jmp divb pop dec mov lods push fstpt mov pop mov dec leave fsubr dec pop dec add and and or mov add ret push push fcomip sub rcll mov mov pop stc cmp nop addw shrb rolb cmp inc and movsl jl les mov dec and shr ret jl push pop loope ret test sar push daa icebp jle pop add mov setne and or dec orb add sub ja fistp cmp cmp hlt stos mov mov test adc in jnp push mov out sub shll icebp or aaa jge aam icebp out sub insl cli wbinvd cld jb cmp or push push dec lret stos mov sub int xor ficoml dec ljmp push fwait lcall std xchg insb outsb xchg andl ja lods les scas jb sbb lret icebp jecxz inc and or out xchg adc and iret mov inc mov gs stos mov xchg ljmp test xchg call enter das in les cld jbe mov jle and ret int3 les xor xchg mov sub cmp mov or imul mov push add xor call sbb leave add shr jecxz push sbb jno and pusha push sub in cmpsb lret stos popf mov data16 int3 std mov xor sub sub ja fucomi and sub xor lods xchg lcall pop ficom sbb xchg in sbb or repnz mov pop mov or (bad) ljmp iret iret add mov sub jmp jo mov jg,pn lock fnsave cmp std cmp (bad) fidivr add (bad) mov mov pop push mov pushw dec lret dec jecxz adc lods mov inc add mov sub add fcom imul sbb js dec repz test movsb fidivl test arpl mov aas mov pop jecxz dec scas pop mov mov lret jle jnp dec or out call sub lods xchg xor nop or loope loop (bad) jecxz add popa fdivrl dec (bad) aad jmp dec adc sub cmc ret data16 stc ljmp lret mov ja stos gs push loope dec mov xchg (bad) jecxz (bad) mov mov xlat pop fsubrl inc out sub push pop cltd lods fisttpll icebp cwtl cmp std aaa jb jb iret movsb pop imul mov arpl and sub lcall out sub sub push or xchg jnp std jl cmc mov adc cwtl sti dec lods sub sub pop mov or test dec jmp mov xor adc gs pop fsts (bad) movsb orl sub aas cmp pop sub pop mov xchg scas leave or cld adc (bad) fs loopne fsts sti jnp dec and sub fs es lret cmpsl push inc bnd mov xchg adc mov imul push adc and xor xor aas cmpsb cmp mov xchg xor repz jge inc lret jbe and or sbb cmp add imul mov add (bad) cmpsl jns xchg notl inc mov ret sti sub xchg lock dec lods ret inc hlt xor jmp cmpsl dec mov lcall std test (bad) push inc xor add lret mov cli (bad) inc sub sub icebp lret lret jbe dec xlat mov adc dec mov ret push sarl push lret or jno in jle lds lret (bad) cwtl sbb clc mov je addr16 movsb fldcw jne xchg ljmp jb mov pushf dec out fwait mov gs xchg imul sti ret into jg iret es xor and push mov xchg loop pop loop push popa iret mulb sub scas mov xor mov dec push and mov insb push mov sbb lret fnsave leave cmc lea jns (bad) or push mov pop cmp mov mov adc shl sbb lods std mov pushf sub fdivr loopne mov fstl ret test divl push (bad) mov sub mov push loop jo dec call inc push mov xchg sub cmp insb pop stc push pop xchg pop add in jmp clc push xchg imul xor push not pop testl mov jge fcompl xchg dec adc incl push repnz mov jnp push out xchg call push push fcmovnb bound or aad aam lock popf jl enter fimul shrl (bad) jmp jg outsl in clc mov jae and adc xchg pop mov outsb mov push lcall paddd dec out push (bad) imul rcrl sbb sub mov negl pushf xor add ret mov out jbe mov out add cld arpl ljmp add xchg inc xor sti out add fnstsw or out push gs or stc ja incb add arpl add out repz adc jmp mov xor fucomip in stc or test pop sbb xor jl movsb imul lret or mov lret mov jge sub adcb shrl pop xchg push loope mov jle push push xor pop mov lret aas mov pop into add fsubrl pop (bad) jle mov dec push mov jmp or lods pop lret push jne imul xor cs jmp xor repz mov cmp mov or frstor das divb pop lret cs inc dec add mov das push leave mov pop daa jnp movsl jg jnp xor sbb add icebp cmp inc aaa and dec call (bad) push xchg adc (bad) cmp popf mov enter (bad) sbb add popw sub scas mov xchg mov (bad) std and out rcll leave sub stos rorb in and lar xor add mov jne in mov ljmp (bad) call pop test adc cmpsl xchg pop mov mov cmp cli sub lcall repnz nop sub (bad) add sub shl jmp push in repnz push pop lahf push adc mov xor mov fcmovnb and dec fadd repz ss cmp sarb in sub push pop lret dec ret call jecxz push icebp ficompl xchg jge mov push xchg das or icebp and in in xchg xchg arpl sarb je xchg jbe (bad) repnz dec or flds xchg xsave and popf in and xchg sahf ljmp loopne mov imulb jg imul imul pushf pusha sahf and popf jg pusha sub int3 inc ret push dec out jne mov gs jmp shl cld mov mov push adc mov jno dec sub xchg jb adc repnz adcl addl inc shr addr16 rdtsc dec ljmp adc cmpsl xlat pop sub loop daa or (bad) sbb push loope pop insb inc add sub mov sub pop in daa push fstl dec insl out xlat repz and push or pop and (bad) cmpsl jbe movsb dec insb sub and xor mov mov jecxz imul inc push pop ret cmp xchg lods mov arpl push mov sub or jns lahf test add iret repz sahf (bad) mov imul fs jp dec dec out jge out xor dec xchg repz lods add les sub jbe fdivrl lods sub mov sub adc jmp dec fwait mov scas test fldl2e stc aas mov cmc mov and sbb outsb (bad) outsb iret aad out and push lcall xchg mov cld push xor add (bad) rcll (bad) jle js xor sub cwtl in lret mov sbb lret or add loope shrb sub mov fdivrs mov and hlt ljmp or mov add lcall leave scas popf sahf jne repz test out dec test in psrlq sub dec outsb mov mov aaa cmp mov rcrl cmp das and es popf sti hlt movsl push iret push xor imul andl (bad) mov pop pop rorl shrb push sarl inc or adc (bad) addr16 imull inc xchg das dec (bad) fldenv jno mov fnstenv (bad) mov jg push or mov mull out and sti mov and ljmp scas fmuls mov sub adc leave arpl sub mov and add outsl aad leave pop add sti pushf and outsl jmp fs sbb inc negb repz or add loopne cld sahf (bad) in repnz gs jne bound and add mov movsl xchg gs adc dec adc fsub or xor fwait xchg mov ret pop int3 add push and icebp jb sahf add arpl mov mov movsb cmc (bad) mov jecxz iret add lret scas xor fildl lock xchg ljmp out mov rorl fistpl xor cs push ja out imull das fidivrl call sti (bad) xor rcrl dec pop daa and repz pop pop mov mov stos mov in nop bound xchg add dec mov fimul sub jnp cmp test push adc (bad) push pop sahf inc ret clc mov lret pushf inc (bad) pushf inc jecxz xor xor mov mov xor mov sub sub lret add idiv xor xlat in (bad) jecxz cmc jecxz out mov das notb loope xchg rclb xor push mov ds int or outsb call jle mov out cmp sub ds jb mov mov sbb xchg shr dec xchg jle cmc je jmp lods mov cmp ficoml lret or (bad) callw jne test test inc and movsb and sbbb mov mov out sub data16 xchg add or sub push loope cmpsl push insb adc cwtl and mov bound repz dec movsb (bad) fldpi or ret (bad) int3 idivb xor fisubl add adc adc les incl dec jmp xchg mov std adc lret outsb (bad) xor or jg sbb sub sub test sub jbe mov jp in sbb xor lods out lds lret inc cmp cli sub or and ficomp iret push int lods lods pop stos (bad) lret clc dec mov test pinsrw dec cmp adc sti lods fs mov dec mull repz movsl dec bound ret (bad) pushl test sbb xchg lds mov mov cs lret call loop and (bad) xor inc mov push fdivl add pop pop fwait gs sbb and (bad) lret in scas and jne bnd loop out inc shl dec inc mov hlt lret dec mov pop xchg mov sub xchg and sub sub cli addr16 negb push dec aaa xlat enter cli push imul mov cld cmp adc movsl (bad) mov push jmp mov xor je scas fmuls mov cwtl ss pop fwait (bad) lret sarb ficom adc inc fwait sbb jle mov add mov xor loopne mov pop add aam (bad) mov fnsave andl jbe push mov jbe aad mov add rolb sub movsb or cmp add xlat add daa mov loop imul popa out jmp inc xchg stos loope jg sub mov and test stos cltd jmp ljmp aas push mov (bad) insb mov adc in das cmp in (bad) (bad) xor inc (bad) or adc fistl scas out mov je lret daa xchg xor xchg xchg mov icebp mov xchg or cmp jge jmp push sbb inc inc cltd out jnp fsubl pop ss sbb add jmp xor and cmp rorl mov ljmp jmp sbb fisubl mov mov jne sbb and xchg ficomp dec out cmp call cmp jns lcall mov lahf enter jg fs das fstpl cwtl shr sub and jae and pop cmp adc shll mov ret lea movsb lock sub out lcall or out fdivrs xchg or xor nop push aaa and adc mov cmp ja daa into jg adc lods mov test stos out dec call inc push push push add stos sub pop sarl and or shrl (bad) cmc lds adc popa scas mov divb sarb xor mov xor insb test scas arpl sarl xor or xor mov add jg mov and and bound scas mov sti or sub push loop jge es push int3 mov pop xor cld add adc add out sbb mov loope sub ja sub jae lea repz dec sub lds sub push or sbb shrb rolb popa mov mov sar icebp stos daa outsb pop mov mov or mov push sub idiv sub aas sub adc hlt pop and iret in (bad) xchg xchg icebp mov pop sub (bad) sub andl fnstenv add test inc andb fnsave vphadduwq bound push jl lds sub mov sub xchg and cmp loope lret lret int3 xor sub je mov (bad) pop fcoml aad popf push push lret push mov stc mov jge fsubs daa sti lock rorl cmp outsb cmp add cwtl aad subb out sbb in ret hlt into pop sbb jecxz (bad) jecxz and ret mov pop mov and sbb shrb rdtsc rorb mov popl call jl cmp (bad) in lods pop xor into push add idivb or mov icebp push je xchg sbb jl das repz cmpsl nop push dec or ret or cmp or add lds mov sub add fisttp mov lret push in (bad) call scas in mov je dec repz call shrl xor fs shll push repz out cmp and mov sub mov and sahf ret jp das mov jmp lret xchg les pop add out sbb cmpsl pop shl out (bad) xchg daa inc lret mov jecxz xchg stos fcomps mov decl mov fildll mov sub push xor stos mov push xchg addr16 popf jbe imul (bad) ficoml jp xchg jmp mov cmp add inc ss movsl pop mov pop jb push and sbb add adc pop aad push pop dec notb outsb jo mov lahf sub jnp in out loop dec call pop repnz xor out bnd out int fnstcw out xchg fistpll sbb imul stos lret data16 pop icebp popa je sbb in popa imul lahf icebp mov sti mov inc xor ss mov sbb into mov xor add push daa xor mov pop cld enter adc mov xchg repnz ljmp push push into dec xlat mov dec repnz in popf lods sbb sbb sbb repz jne add out mov rcrb sub scas cwtl inc ret lahf push mov push jl add jnp or sub aad js mov pop xor test and icebp add addl mov pop dec pop sub icebp in loope in das popa pop jmp jne sti cwtl dec add push js ds enter dec scas out and dec in (bad) sub cmp mov lret aad sbb pushf mov repz mov add mov (bad) xor je ljmp push mov mov sti hlt (bad) mov enter sarl jmp mov jmp lret sub mov cwtl jge fsub lret lahf out js test daa (bad) cld adc mov test int3 mov scas and iret push push adc (bad) mov or cli jne and aas and cli stc scas mov leave xchg push pushf cmpsb das and inc ror cmpb mov xchg or or xor mov push fs push add mov adc push push (bad) outsb pop adc jns cmp sub or les xor sub xor xchg sti out les dec movsb mov mov xor mov or sarl imul in idiv and xor or rol pop popa or jnp into cmp add int push stos addr16 loopne stc xchg es add and add jmp les repnz inc xor cmp in (bad) fisubl aas outsl js cli cmc mov lret xor ljmp packuswb out or icebp sub mov mov icebp xchg push mov dec xor xor cmp xor sub nop and add and pop lea out xlat jmp jnp repz lods pop loop push mov xchg ret scas insl cmp push jnp mov scas sub rorb sbb jo xchg jbe push xchg int3 push (bad) mov ss push xchg or pop inc or mov push adc mov xchg lret add movsl sub in cmp mov mov sahf sub loop test mov (bad) aaa jno,pn sub xor ja or fdivrp aas pop stos jb or pop xor lock mov (bad) scas icebp adc sub sbb cld lods adc adc adc push arpl dec jo mov jne pop loopne jg dec mov inc std pop rol dec and or sarb pushf inc and push push mov sarb mov and xor mov shlb out loop xchg sete out and sub ret pop inc and (bad) js mov inc punpckhdq mov add das mov sub xchg and fisttp sub xor aam mov xchg lcall or jnp daa xlat inc jle xor mov fwait push lods pop push fisub repz aas xor add xor or cmp (bad) repnz push push (bad) flds sub xchg fild mov push repnz lahf mov pop inc xchg xchg lods mov push (bad) scas sub dec xchg cli popa xchg fidivl jecxz daa clc inc pop shr inc jmp imul or push movsb or sbb iret or xor or or xor adc jle scas call mov movsb jg repz dec dec xor cld cmpsb in or and std (bad) mov inc jle ss js pop (bad) xchg push movsb adc in sbb ljmp (bad) sbb fdivrl ljmp or mov xor bound cmpsb mov jl ds xchg push and and lret inc dec mov out cld sbb lret mov mov or jp call inc pop sti je out test out clc mov test stos xor or das adc mov sbb mov scas add rcrl cs sub sti pop adc jmp push cmp rcrb dec sbb je and lret fs mov and stc icebp xor xor decl mov out jmp pop stos xor add pop orl neg pop je adc adc and sub sbb outsb (bad) adc xor in scas test loope xor cld out push adc js sub lret shr mov sub adc lea arpl fucomip int3 and daa mov mov sub clc cld negb adc mov mov (bad) fcoms xchg sbb in movsb dec dec and mov mov andl push addb imul jne xchg push (bad) mov sbb insb (bad) adc shrb adc adc mov jle sub enter cld loope push mov mov cmp rorl js lods and aaa add jb push shll cmp mov enter add imul pop leave jl leave push pop outsl xchg jmp addl leave cmc in push push sbb xor dec mov xor fdivs leave mov loopne repz jecxz daa pop jmp out inc mov jge iret int jo xor jmp insb sub push and movb fsubs dec or int rcr pop (bad) sbb xor stos ret jle out in fadds jp mov and addl fmuls stc xchg add or pushf mov pop repz out into dec jmp push dec xor stos fstps mov roll sub xor xchg add mov cs jbe push mov stc (bad) cmp into decl pop push add xchg stc or push mov imulb and aad rcrl adc rcrl pop dec out (bad) shl jmp popf stc rorl out lret jl daa out aad push or fmull adc push xor aam mov mov cmp shlb shl enter xor cli mov mov in out iret (bad) dec jb (bad) jne (bad) ret ja mov orb jecxz jmp pop loop jl lret jle imul mov fnstenv stos test or fcomip mov mov cmc pushf or je rclb loop mov repnz pop loop (bad) mov inc stos mov std jbe dec iret out bound push aaa mov add or outsl int sub dec popf idivb jg js das popf fsubr sarl or mov mov sbb pushl out (bad) icebp rol mov mov inc push inc (bad) add inc js (bad) cmpsb and push add (bad) int outsl lods cmc movsl in es rcrl dec shr daa ret xchg sbb cmp je cltd cs or add test xor add out sbb inc xchg mov mov pop xor mov fsubrl lret xor stos mov dec subb add mov ret sub mov scas imul mov repnz xchg jmp pop xor push in dec dec sub sarb (bad) leave pop add xchg mov in movsl imul or mov and ret shll aam daa ret cmc ds or es jge or xor (bad) lock xorl decl mov add pop sub xchg adc call xor mov aam outsb mov add call imul test xchg mov or div push pop push loope repnz rcr lock pop dec leave sub add jnp out movsb xchg adc daa das aam ljmp (bad) jne sti dec pop xor or insb pushf das or inc repnz cltd push sahf pop mov cmc inc movsb mov shrl mov divb call adc jae and sbb popa mov jl into inc inc or sbb (bad) popf sbb lock mov sub mov out dec fs mov roll xchg leave call inc push lret test xchg add daa push cmp jg inc fistl mov cwtl das cwtl daa jmp fild add enter addl mov cld fs subl icebp fwait popa or xor bound test movsb mov add insl mov sub mov js and ljmp fild popf out imul int mov adc adc es push and sub je stc scas test fildll loopne push data16 adc insb mov imul es roll outsl loop shll jmp cmpsl xor jo pop xlat sti xor dec pop rolb or sub mov mov xchg jl pop iret cli xchg aam add popf dec lods out sub bound sbb loopne push test add inc mov outsb leave iret adc pop inc movsb jle push hlt jns (bad) ljmp mulb lret xlat mov xchg sbb rcll shlb jbe dec jbe leave jl into rcrb mov add (bad) sub mov mov addr16 dec mov dec dec jnp xor or sub cli cld cmp ret fs icebp pop sub imul xor fiadd jb adc sub fs mov imul leave fbstp outsb adc ret push pop das cmp repz repz inc cmp lock in cli ret add inc jmp sbb add (bad) mov mov pusha out repnz out mov add mov orb mov shrb dec js add jnp sub xchg (bad) out jge push out movsl fucomip inc xchg fistl xor sbb fistp jbe fadds cmc xor jg push sub movsb fldt out imul or xlat mov arpl and daa repz sub mov pop bound (bad) push xor cmp cs xchg pop scas jb rcll inc inc push xchg jbe iret stos lret out cs (bad) sbb imulb dec dec xchg call or insl dec scas cmp sub fisubr imull xchg or ret jp cmp sahf xchg ljmp add mov dec insb xor into movsl cmp sub movsb daa negb imul pop pop cli mov sub and mov out (bad) shlb inc rorl inc imul add mov xor rorb mov mov (bad) or mov mov cli mov cmpsl xchg dec cli xor aad loop xchg loopne loop pop pop sub shll lret and inc dec loope adc (bad) jecxz shlb cmp xchg xchg movsb and cmc sti mov mov xor mov push adc adc and xor push sub mov lcall push insl lret mov sbb mov cmc cs cld xchg cli mov int imul adc xor loop (bad) mov mov and sub lahf push lea and test mov clc add fmuls aaa and mov jmp sarb mov add and jmp xor call in das int mov div aad sti mov and jmp clc jle test adc (bad) adc push mov lds out (bad) sub cmp adc imul add shll fs lret fistpll mov mov dec adc sub inc ljmp mov fisttpll push repnz pop in cmp xchg bound in lret (bad) (bad) mov pop sbb cltd fdivrs and mov adc mov and out icebp sar and rolb rorb aad or into lcall out sub (bad) cmc adc rorl mov xchg mov jg bound and out out cmp (bad) stc mov shll dec pop xor dec mov mov sub jmp add test jle sub or xchg fiadd cmc clc lret je mov inc les popa stos jecxz cmp cmp sub mov shlb sub xchg pop jge std xor pop push add push and add mov out or loope push dec movsb mov adc jmp mov mov roll fstpt or jns sarb orb jb aaa popf (bad) into iret or adc das or shrl xor test rclb add clc or scas out jl xor mull rolb test mov bound je jmp fcomi ret inc test inc mov roll mov jecxz push adc push push rclb jmp inc or (bad) xchg mov inc push lret sarl pop in jns add mov and pop sub ljmp repz adc ljmp mov fisttpl xchg pop pushf and mov xor das pop and adc daa fnstcw mov fdivp aad and push and sbb mov jmp mov xlat inc arpl ret test fsubrp dec fucomip test jl or movb dec mov adc jp pop inc push gs cmc shll test jbe jno cmp dec test push cmpsl lahf sbb jno lods jae jl mov dec popa rorl adc ljmp mul sbb or out xchg je leave inc je lock les sti adc xor stos popa push out and add jns or repz xor and sub test mov cmc test loop andl xor add lahf dec mov and add push sub xlat pop and and mov rdpmc cmp pop push call bound stos int3 rorw sub add jns pushf std (bad) sarb mov sbb and add popf fimul jg sbb lret jg xchg dec negb das cld pop in (bad) lret mov movsb mov and cli mov push outsb sbb adc mov cltd ret or add xchg movsb (bad) xor cmpsb arpl pop jo repnz pop js dec ljmp and mov dec xor in call dec xor mov xor jmp and es sbb pop out pop (bad) jbe pop pop dec stos popf and orb call push add and dec add sti fsqrt dec icebp add enter stos push iret mov dec push ret int3 jp cmp jmp sbb xor lods xor xor pop jae out hlt xchg or fldcw and mov mulb adc mov imul daa (bad) dec lods sub mov xor mov mov or notb sbb scas inc pusha xchg push mov inc or xchg gs xor popa inc xor loope jle imul sub push jecxz outsb pusha mov gs movsl dec mov rcr iret leave jl dec lret ret fs nop dec xchg daa mov int cmp mov aam fyl2xp1 cmp push ret xor leave iret icebp repz fsubl add mov xor addr16 call xchg mov jnp sbb jmp push fs (bad) fucomp imul pop mov mov push (bad) mov push mov dec lea xor repnz (bad) in mov shlb into inc stc lods sbb in lods das loope or push aaa pop dec and mov stos mov sarb loopne inc dec (bad) scas lret or aas insb out out dec jecxz adc mov jmp xchg (bad) mov and daa (bad) adc mov pop lock popf divl (bad) clc push pop sbb cmpb adc (bad) das jmp lret jbe mov xor imul or pop fsubrl xor ficom adc loope test push add fsubl dec mov inc nop sub add or rorb ficom cmpsb enter push cs pop xchg jmp push dec test dec btc addr16 push mov out cmp pushf add inc xchg gs (bad) repnz dec icebp mov or loop or out loop sahf out sub insb dec pop cmp jmp fistl xor lods out mov aad jle inc bound divl add xor leave push lods inc push sbb stc aas add lret sbb dec xchg int3 cmp pop ds adc daa (bad) hlt stc sti cwtl js lahf js dec lret xlat repz es pop ja cmpsl aad or lock cmp add mov lock mov lock aam jmp into dec dec out lret jl nop dec jmp jne inc and ja sbb dec mov lds lret sbb cmp shrb repnz mov repnz xor imul pop ret sub mov jmp daa ja pop and (bad) call js popf jae mov and jnp adc (bad) fisubrl stos sub mov lea mov jg pop mov jnp outsl push sarl mov adc or or xlat mov out sub movb or xchg icebp loope push sub fnstcw mov popa mov js sarl scas mov aam out in mov add pop dec lahf scas or and adc jne mov ja xor cmp add sub loop xchg out aad out xor fsts pop icebp adc mov jb mulb xor incl ljmp lahf adc dec sti fsts push leave out and dec sahf sub and push xchg sbbb xchg mov sbb or repz lods out adc or into fs mov sub lret mov dec adc pop fisubrl out cmpsb xchg inc test xchg in das xchg add mov lret icebp sub mov jl ror shrl in out xchg mov mov add fstps fwait aas sub test sub pop mov inc push xchg test icebp inc imul (bad) cltd mov pop les pushl out fisttpll sti sub cltd inc inc xchg mov sub mov xchg stos mov fldpi pop pop mov dec pop push and negl (bad) mov xchg pop imul or lret mov icebp mov (bad) mov in and adc push push inc jp push iret jg out test testl loope cs lods pop mov in dec lret dec mov sub ret ja mov sbb and mov and or (bad) in add or sub stc aam int3 dec push out das aas loop mov (bad) ja pop cld push xor mov out mov sub dec push jnp sbb sub xor mov or or sub jl adc in sub mov jnp cli mov (bad) push shrb mov push test repnz test lods pop xor lods xchg mov or mov push fcompl loop adcb mov pushf xchg dec rcrl daa and sub dec sbb adc pop (bad) stos lods js out push daa stos cwtl push jmp sar (bad) mov sbb mov repnz mov in xlat xchg adc mov aad gs (bad) std push fisub push push pop ret push adc pop imul mov scas mov pop xor lret icebp (bad) lret std insb mov cmp das and (bad) mov test stc in in adc subb add xchg pop cmp mulb push xlat popa add divl sub das mov pop push or xor or or pop (bad) bound fadd lahf mov pop push mov ret mov sub xchg in add iret mov or xchg jae or xor ja add hlt pop jmp add cmpsb jle adc negb jb ficom adc push arpl xchg fstpl mov push jno dec inc add cmp mov push pop hlt mov aam and xchg sub xor push sub cs les ljmp in xchg es cmpsl test jns push (bad) ljmp sub cmp cmp jecxz pop (bad) gs int sub push dec out fmul xor dec mov loop push push insl or test (bad) stc add gs mov imul xor lds adc pop stos notl sbb sub lds cmp add jl imul xchg gs in movsb cli or lret jne (bad) adc adc idiv ret jb pop (bad) jmp adc mov xor call xchg enter cmp je in dec sbb (bad) pop mov pop pop movsb mov js clc data16 cmp test and mov fisttpl sub dec dec scas cmp xor call or lcall cmp or je in ss scas out popf lcall xchg sqrtps es dec xchg (bad) xor divb push bound ja cld and pushl aad jb push cltd repnz outsl mov bound push push and loop adc (bad) ret mov add fwait adc iret inc push ja sub iret repz add jnp cmp ficomp frstor sub sub insb addr16 cs sub cmc cmpsb cmp cli popa arpl mov or jns fadds add or pop sub inc (bad) fldenv cmp adc fidivl jns dec jg jge pop scas cmp xchg stos mov mov stos inc pop sub ljmp push cs shr test bnd loop es sbb pop jbe bound (bad) into push mov dec (bad) hlt jne cltd (bad) repnz xchg cwtl xchg pop (bad) ret (bad) rep push add add mov mov push ret call adc (bad) xchg mov (bad) dec mov das xor clc nop mov (bad) pop (bad) mov mov dec pop ret aad int3 adc pop pop leave out cwtl int3 sub in add mov push inc (bad) aaa jp push scas add adc std sbb and xor cli sub mulb cmc shrl repnz mov inc andb or (bad) jge dec pop loop insb shll (bad) pop mov sub (bad) movsl in fwait mov cmp and mov inc lret gs daa das test repnz leave repz pop sarl (bad) mov cld add mov fcoml sub stos bound pop idiv bound push push or dec dec and gs in sbb outsl mov xlat (bad) push jmp pushf xchg sub sub mov in mov (bad) dec lods dec mov rorl jbe adc je in xor movsl (bad) std mov sbb mov xchg push pop jmp lahf sar popf incb lahf repz cmpsl pop in mov lock das cmp inc push push scas stos fisub jg out pop pop or jle jg or addr16 mov cmpsl in (bad) xor add sub fsub (bad) push push xchg decb push outsb loopne or lds xlat jmp repnz mov (bad) fnstenv xchg pushl into push push mov jmp out xchg sbb testb repnz cli bound lahf dec hlt popf fdecstp xchg loope dec movsb or xor dec mov xchg ret cwtl sub shrl push push bound xor (bad) mov fild fidivr sbb push sbb pop rcll push lahf gs lock or xchg sbb xlat lds mov dec cmpb push xchg fstps push scas int jnp sub sbb je jmp lret das sub ja pop pop mov cmp xor rolb inc sarb fistpl aas dec and sarl xchg ljmp push xchg insb mov in mov lds mov pop dec xlat test pop adc fwait ljmp sbb xor mov data16 shrb mov imul je ljmp jbe push mov sbb mov (bad) xchg rcl or adc pop add xchg push leave nop dec pop pushl mov aaa mov daa jno movsl ja ret mov cmp aas xor sbb add sahf xchg or daa nop or stos and sub pop stc movl fbld movsb and ret in xchg loope sub lret pop jp inc cltd lahf mulb sbb and stos and add pop mov andb in or jne mov std push mov xor push dec in push push jmp xor add mov xchg pop add (bad) push loope fisub lcall bound jmp inc sub pushf cmc in mov arpl (bad) add inc test sub or jecxz fimull popa fnop xor pop lods push add mov into and mov cmp mov lcall add mov mov push nopl adc cld arpl mov (bad) push pop mov stos sub dec imul xchg sbb mull lcall into xor (bad) push sbb sarl lods (bad) fisubr inc icebp jne pusha jmp pop sbb stc into rolw pop add lret popa fnop push dec js mov in cwtl popf into pop add aas or ret or data16 jo push mov daa or cwtl adc cli rcrl xor in insl xor cmp popf in push sarb sub mov xchg xchg lods into fcoms setbe ljmp and jno imul push jb lahf fld in int3 cmp hlt jecxz sub cs je mov pop pop xor leave (bad) mov imul lret or xchg daa fisttp nop out fldenv xor push stc sub jo xchg jg ss scas movsb adc scas fcmove das or rolb jbe push insb into sbb lock push adc popf pop dec push mov stos pushf sahf and je adc test out div imul xchg pop adc and or sub (bad) popf sub pop or les aad repz or mov mov call jecxz das mul sbb xlat and js pop (bad) mov xchg fcmovnb sub or mov hlt subl adc fidivl leavew int3 cmp push cmc dec imul incb pop sub stos bound imul mov jl icebp sbb pusha add xchg jl movsb call cld xchg adc lods jae xchg repz xchg mov ffreep fs jg mov outsb icebp (bad) adc sub cmpsb push and stos xchg jmp and adc jmp aad xor stos frstor sbb loopne adc mov jecxz xchg enter ffree push mov ret mov clc lret repnz xchg in ret jg push mov xor add push mov sbb popa inc ficomp outsb lods mov decb (bad) xor dec sub jle mov sub jl xchg push push aam sub xchg add mov aaa or pop xor hlt scas hlt out pop lods push sub call imul push pop nop lods es sti push add test pop mov lods or xchg sub pop mov out sub sub push popf rcrb clc iret dec je cli in pop xchg call (bad) (bad) sub inc mov mov jg jle xchg xchg push pop into sbb cs adc popf jno xchg clc mov adc add stos and jo dec bswap fistpll iret mov and std scas in insl mov dec xor out sub sub bswap das and test mov or mov jne or push pop dec in adc dec fs stos xor (bad) dec and xor mov fcoml shrb repnz jge shr je sub xor jge daa into adc and dec cmp adc cmpsl cmp arpl aad mov adc mov jns das (bad) xor loop insl aad in add stos bound jecxz mov pop pop rcrb stos idivb add sub adc mov dec add cmc or shrl lret faddl insb and adc mov or cmp mov cmpsl decl inc push inc or adc loope sbb pop (bad) stc mov xchg ds bts test add and cmpsb test mov (bad) mov scas mov mov cltd sbb mov in xor rorl push es mov test push sti sahf jo pop jl pop mov inc push or sar jmp mov sub add notl pop cmpsl fldenv inc add or or repnz mov loopne iret inc pop and mov mov clc jbe sub movl aaa icebp xor out sub and cmpsl fsubs aad or push test call fwait push sbb out xor push outsb jle dec bound fnstenv mov aad std dec jecxz stc mov cmp sub fnstsw push insb out dec mov xor pusha cmp and mov mov popf cld mov cmp xor xchg dec popf je push cmc stc sahf dec sar mov xchg fsubl (bad) fistl imul fstpl rcl sub lret jmp lea stc lock cmp ds push pop add xor inc cmp add (bad) mov insb sbb clc (bad) fwait cli ret push out adc sbb scas jae (bad) and xchg sti and pop mov sub stc sti (bad) mov fcompl imul lods (bad) dec test mov pop insb pop mov js ss mov jp lret xchg stos icebp sbb sub add aad cmp jmp xlat daa icebp das loop rcrb mov jecxz in cli lret (bad) push and sub and push stc lret adc cmp and mov in or (bad) jne mov jns xchg inc adc and fadd rclb and rorb out sbb inc test mov pop mov test push clc mov out xor shll dec and dec (bad) stc dec push and pop sbb mov add pop in mov adc aas xchg pop mov xor call rorb pop dec (bad) int3 adc mov out add repnz dec sub jle jmp imul (bad) scas ss pop repz mov stos hlt jecxz xchg pop cmp ljmp mov adcb (bad) mov and jne inc and or mov ret int3 and rcrb imul loop repnz xlat mov pop mov jne mov push cmp mov jle push enter xchg lds add lods xchg cmp ret mov ljmp pop loop pushf sbb (bad) mov mov (bad) jmp mov sbb xchg mov mov ja pop inc sbb into pop divl data16 cli xchg aam imul lahf in cmp sub mov fidivl (bad) mov sub popf test lods pop pop mov xor cmpsb mov stos movsl rorl xor xchg repz cmp lret out sub repnz gs test mov outsb pop jmp xor mov jg mov mulb push cmp das cld cmpsl mov mov sbb test aaa scas xor adc out and jle movsl clc lea sub rclb stc sub ljmp or dec mov fwait lea fistp and inc mov roll mov xor lods cwtl xchg xor sub outsb lret clc (bad) jl and stos mov pop scas sub add repz and daa rcl or sar mov lret int mov adc pop ficomp inc sub sub inc int3 xchg fsubrs arpl mov aad fwait mov and cli mov add sarl (bad) mov pop enter repz cli les frstor aas xchg mov jo sub and (bad) lea inc (bad) repnz jmp xor pushf inc (bad) xchg ret daa divl in (bad) fld imul push dec dec lret repnz fstl sub scas mull sub sub jne pusha imul addl and and and or pop divb mov and push int3 adc jle hlt (bad) adc ret pop or push cmpsl xchg repnz mov dec inc daa mov hlt mov jns jmp push inc mov cmc push mov int adc push or xchg sub dec mov dec mov (bad) fisubrl stos bound adc pop jns inc mov idiv das negl bound insb mov push mov dec pop jmp mov sti add mov out pop sbb mov push dec jb sub or mov and xchg pop mov test mov mov mov fistl sbb mov loop cmp and inc hlt pushl repnz je loopne popa xchg sub jno mov xor aaa scas test popf cld and repz enter ret jmp add outsb cld push pop mov pop je ret addr16 xchg add push daa out in mov xchg rorl es pop js (bad) mov add ret push jns bound pop cltd pop out ja pop mov dec mov sub out and (bad) ss ja outsl out mov jno or icebp pop pop xchg cli gs popf fcmovu shrl push lret fisubr leave ffreep lcall sub sub imul pop mov repnz xchg lea shrb jb daa lcall mov add mov test lahf mov into cmp mov mov idiv leave ja cwtl pop out stos xor lea popa pop push rcr adc mov xor lods jno aas mov add repz icebp (bad) insl pop cmp icebp dec mov sub inc ficompl mov into nop nop cltd lahf pop xor lock pop idivb std inc xchg mov (bad) leave imul mov xchg mov push xchg mov test pop je mov ds sarb adc into and pop jae adc ljmp (bad) push in adc mov icebp fs xor mov mov cmpsl jge enter push lret pop lahf sbb out out jne sti xor ret adc sub cltd sub push leave ret inc (bad) or pop fsubr push repnz or xor stos bound fdivs add pop ljmp ja or xor fsub push mov (bad) es stc push jae int sub mov mov and push mov into ss push or xor add pop add out push mov or negl add loope loop xchg mov dec jle rorl sti arpl mov push push mov mov (bad) lock xchg cmc adc cli popf mulb pop mov push icebp and cwtl cli sti jp xchg cs in xchg inc xlat mov out lcall jo das ficomp iret arpl sar (bad) aaa mov cs sub mov addr16 dec in fist insl jle lods fstl cmp and fwait movsb xchg xrelease rcrl data16 xor add mov scas cmpsb (bad) and mov xchg push (bad) movsl insb icebp ljmp daa ret lea lcall loop dec cmc xor outsb mov jle out pop leave pop fiadd out outsb insb xchg lods daa jge push add into mov fbstp dec dec cli lret movsl pop call jmp stc popl or (bad) xchg dec lret jns pop or xor jg into mov rdtsc shl ljmp call or inc sub incl sub inc es xchg push and dec and addr16 (bad) jbe orb lcall xor or push mov xor (bad) je pushf add call std pop movaps pushf imul jb xor xchg sbb lcall add repz fcomp mov xor jns cs jp cmpsl lds pop mov add adc and repnz ret mov cmp or jnp or mov jmp aam daa push sbb push loope cmp movl and popf push push cmpsl ja inc and repnz sbb or fwait adc cmc (bad) test data16 and cmc mov xor loop test sar dec shrb sub ss in fnstenv outsl cmpsb mov pop ret cmp mov and imul push mov xor mov mov leavew (bad) insl adc mov dec sub out xor or rcrb ds fs stos test dec scas sub sub test repnz sub mov push sub xchg push mov push sub add mov and xor xchg ljmp pop out sub cmpsl mov add sub mov cwtl lods push push ftst mov out aas out or or (bad) ret pop in adc mov test loope or cmpsl and push xchg fbld stos mov (bad) pop push push lds jg in movsl xlat add jmp aas pushf fdivrl stos std cltd lahf sbb daa gs adc jg mov repz jmp fcoml daa popf and sbb ret test into mov mov xchg xor dec mov jmp pop (bad) call dec dec mov incl adc (bad) fsub sbb lcall or cmc into rcrb movsl cmp outsl in sub mov mov (bad) pushf into and push cmp cmp and aaa add mov inc dec mov sti sub dec clc aam out jnp xchg cld dec push jecxz out sub aas ret inc xor (bad) insb mov (bad) sti ret xor dec xchg nop (bad) loopne sti lds imul (bad) (bad) inc (bad) icebp jecxz sub movsb stos in popf mov inc push adc and and mov rcll inc xor icebp push sub mov adc and icebp ljmp mov mov sbb loopne mov test icebp jne imul jnp sub test jecxz not jecxz dec in sub pop fstpl xlat ret dec test ret or cmp lods xchg jecxz push pop mov lret and loop pop push mov adc imul cmpsl mov (bad) std add shr out pop fnstsw insl das mov out or fwait lods std mov cmpsl xchg dec hlt mov adc sarb cltd rorb outsb in push in enter out xor int fisubl sub sub push insl cwtl movsl mul add mov outsl call je jno mov (bad) dec xchg mov mov cmp stc pop mov push cmp add or or mov sarl jne push cli push push (bad) xor nop cltd xor bound adc stos loop mov jne mov sub mov popf test pop jmp das xor lret jmp jge and mov pop aas fstpl enter and mov push (bad) dec stos xor std pop pop out psubd jae adc dec sub rorl mov mov dec test or mov fucomip leave lret js dec in cld (bad) gs scas adc popa and cld bswap jecxz enter cltd repnz sbb mov adc lret lods les push and lcall mov pop or ljmp pop leave data16 jecxz jnp pop loope push testb ret aam jmp mov ljmp mov jne shll neg jg jne mov push xlat pop mov mov pop xchg bound fstpl mov bnd lods into idivl movsl ret adc jnp flds (bad) fisubr xor sbb mov scas pop sub sahf push jge push shr sub insb mov (bad) les add les jmp sbb mov mov cmp inc gs popf cmp lock hlt (bad) mov cltd push jmp adc xor xor idiv mov (bad) xor inc inc orl pop xchg outsl mov add ret repnz and sub jmp das mov jg enter lock rol mov cs mov lret jmp jnp es mov dec push cmp xor aas pop pop jnp das fldcw jl sub jp cmc dec incl xor sbb and leave out and pop je out movsb and xchg cmp jae es scas or mov es pushf pop mov int3 cmc (bad) movsl fimul divl xchg sbb mov mov pop and mov mov (bad) pop es clc pushf pushf loopne ja pop (bad) sub pusha mov xor std cs xchg pop jmp cli popf loop mov jmp cmp and divl lcall lcall testb push ret mov jp ror in mov imul (bad) or ja sub xchg repz lahf add das mov inc (bad) sub and out cmpsl loopne push cmp in cmp stos mov dec jo dec int3 (bad) mov cmp xlat inc roll idivb inc jns repz fsubs jb dec xor sub les out mov scas lret and add nop sbb mov and repz test mov pop xchg (bad) cmp push lds cld lcall mov push jl cmpsl pop in movsb xchg (bad) scas mov je jae sub pop push fisttpl mov mov imul or jecxz adcl shrb fs (bad) out lds or loope ds pusha pop sub cmp sarb (bad) mov pop adc xor sbb dec jno jg jno dec (bad) ror lret mov mov pushf xlat xchg jge test movaps dec aaa ljmp imul xchg mov cmpsb enter fsin push das xor mov xchg rclb dec cli fdivs jmp fmull ret ffreep push mov push xlat xchg aad in (bad) icebp mov pop (bad) pushf stos xor cld inc mov lock out mov idiv add add icebp inc cmpsb (bad) daa stc xor aad push xchg (bad) sahf outsb push out pop divb lret addr16 or mov dec stos popa jb pop sub mov jno inc lret mov mov jg repnz or das (bad) mov mov ret jl fnclex mov add mov sub add xor bound sub dec iret mov adc and popf pop cmp inc mov movl mov sub call sub iret data16 jo mov push repz fcomps (bad) popf push stos add cli je enter push pop adc pop fistpl (bad) fldt sub dec pop sub ret add imulb leave mov sub movsl lods adc lahf (bad) or mov out stos idiv das jmp es pop lahf xchg push and or (bad) jl mov into add (bad) shrb test mov add xchg mov repnz push pushf jnp js adc js xchg movsl pop or inc lret or cli fs mov ds cmp gs mov rcrl lods bound sarl pop jmp mov pop shlb lret mov mov mov and movsl loop jl jmp mov xor sarl add aad push pushf add inc dec scas fs mov loope cmpsb scas dec or (bad) push rcll push sbb pop xor lds sub into movsb stos testl adc xlat out xchg pusha lret es incl inc lods call pop mov pop test test in and cwtl adc aas and jns push mov imul ret xchg dec orb sub jno das push add (bad) jmp test xor std std je xor lds sub inc jne lea outsb mov movsb out mov adc icebp ljmp pop inc or scas add stc xor mov mov xor sub mov test mov sbb sbb add ja mov inc ret stc and lea mul pop je add mov mov mov cmp imul add push outsl ret push scas std paddusw loope or jge pop mov mov imul rcrl cmp ljmp mov fsts sbb (bad) jmp aaa inc dec mov lea pop mov int sbb or or into xchg cmp mov jge or sbb and inc out adc sub mov (bad) das lods cmp into jne add test aas mov pop mov into add bound (bad) testl out lock mov std sarl stc mov pushl jo sti scas mov inc out xor mov repnz sbb cmp or call mov lahf pop cwtl or (bad) mov mov mov cltd mov xor mov push push dec or fsts xor cs call lock and (bad) xlat add decb lock lods jle adc inc test inc rol popf lret mov shlb mov xchg (bad) sub jecxz jbe push mov mov pusha (bad) into shlb sub mov and pushf jmp sahf dec fildll xchg fcoml sub cli popf mov test repz mov lea arpl enter in xor inc je leave inc bound adc or or push and push cmp mov sarb in dec out xchg clc xor out sbb lahf (bad) (bad) mov mov aaa in mov dec lds arpl repz add icebp popa and pushf es ljmp and jbe inc lret mov mov les out xchg mov std stc ss mov xor (bad) jmp test sub out jbe push push pop mov aad or loopne das (bad) push gs jmp fldt pushf pop and addr16 out lahf jnp xchg into stc rclb outsb in shl movsl mov pop jmp and pop bound cmpsb lret or mov inc aas lret xchg std stos fcmovu xor add fcoms and cmc movsl pop sbb push cld test pop pop in inc or cmp mov mov pop sub bound bnd test notb movb push hlt mov subl cmpsb dec das lret cmc cmp push cmpsl daa inc cwtl sbb stc inc xor sub stos ds into out sub pushf in jge out mov or repnz pop imul add mov das rcr sub xor xchg xor add test sub mov icebp lods das mov dec dec and das mov inc jecxz bnd aam push insl sub out dec (bad) lods or or ljmp mov sub mov je popf lret xor movsl sti mov mov xchg xor out and sub push inc pop repz or push decl push xchg mov mov pop xor icebp loopne sub mov cmpsb push push dec dec jmp (bad) jae add out xchg xchg insb adc flds add rcr mov pop fiadd or jle jno sub sub shrb adc jge dec push fyl2x cmp jmp loopne add jo (bad) mov push jl dec imulb mov xor push push shlb jg cmpps sub mov stos js pop out sub sub mov xor into jns adc xchg pushf cmp add js addr16 sub xchg mov add sub jge lahf ljmp mov mov sbb push mov cmpsb data16 mov and loop pop push js aam xchg out mov inc iret jmp imull (bad) lods pop out lret cld inc xchg and sub mov push pop mov cmp jno add cs (bad) (bad) mov mov subl fdivl push rorl dec and fs stos fsubs mov adc popf dec push pop loop xlat xor shrl adc jmp lods (bad) and sub jns sub (bad) fisubrl lret aad int3 sub (bad) in dec inc into negb inc dec or mov pop out sti leave repnz push pop sub ret and add loop fdivr mov jge repnz pop dec xlat shufps xchg (bad) cmc shrl or or lret lret rolb je push push cld dec stc xor test xor lods fwait icebp mov jnp in cmp add ds cmpsl adc sub xor mov sarb shrl push pop xchg (bad) icebp sub ds adc das jecxz lds or andnps call imul lret push daa or fsubl ljmp push mov or xchg add icebp and sub shrl ret lret daa or push dec mov clc mov sub (bad) mov dec xlat ljmp icebp addr16 jmp out mov pop imul jmp sbb jae or or inc imul das jg push movsb xor and add in in pop (bad) mov mov stc xor push xor repz leave xchg dec sbb repz add xchg xchg ljmp bound pop (bad) or imulb pop add popa cwtl lcall (bad) push inc jb gs lods addr16 ljmp aaa lahf outsl add lea gs out psubsb lret pop mov iret and (bad) and jmp int3 fwait sub mov (bad) out adc mov ljmp popf mov stc mov jecxz xchg mov shrb (bad) stos out pop xor lret std sbb sub rol push jns leave cmpsl cmp mov sub nop or cmp test mov inc inc repz out sti les scas mov dec mov push movsb daa sub mov fmul pusha mul mov and cmc mov jo jnp xchg test repz outsl call or and or inc mov stc les dec xchg lret scas popf pop and fldl pop sub sbb and adc mov jae imul cmc jnp inc push jmp (bad) jnp xor xchg mov xlat dec or xor mov arpl in (bad) dec out sub add pop (bad) loopne xor xorb fistpll dec xchg iret sbb xchg dec pushf mov mov jmp xchg and dec add sbb (bad) dec das idivb (bad) movb sub and cmp shlb popf dec dec dec mov sub xlat loopne rorb and add aas add adc inc and mov push cmp daa sub jns xlat push xchg call xor cld cmp scas movsb (bad) cwtl or nop shrl dec dec mov dec mov cmp (bad) add jmp sub add mov add lds daa dec pop xchg mov add leave in push cmpsl mov (bad) mov enter movsb popf idivl pop mov pushf adc out inc xchg loopne pop lods popa push or jb dec (bad) imull or push add mov cld and scas std cmp (bad) push dec pushf push xor xor inc scas popf jb icebp stos jnp jb push lret iret (bad) imul lock lds jecxz mov int3 sub dec add cmp int3 mov add lret popf pop mov mov int3 push call or inc dec scas das in fildll inc into adc ret pop movb cltd movl call sbbl daa adc les mov and negb mov xchg test lods xchg movsl jmp fstps stc lret cld movsb shll or inc clc cwtl mov pop mov (bad) mov mov or pop mov inc mov out sbb and scas pop xor dec pop mov pop popf mov (bad) pop xchg add outsl imul jmp dec or and ret mov aas dec into scas sub ret cltd jno lods mov ret ret push pop mov push add outsb push aas into add cmpsl xchg pop jecxz pop stos xor mov and stos mov outsb jg mov popf fistpll gs add push shr and movsb xor sub push xchg adc aam cmc inc es add cs adc add mov jle es lret xor das (bad) sub push pop jle dec mov rcll xchg out push (bad) xor sub xor dec push repz repnz add and scas lret mov imull icebp stos sub outsl and stos mov mov ja and (bad) pop out pop cmpsb adc mov mov rcl mov add scas pushf cmp test pop dec clc movsb lea mov sarb (bad) aas mov (bad) idivl loop add test add sti and icebp fldenv loope bound mov xor or cld sub jno xchg xor jb ret bound cmp push lret and cmpsl mov and test insb and cmc inc dec sbb (bad) or sub imul out pop sbb or mov adc scas sub xor push faddp addr16 (bad) fldt cmp data16 jnp add btrl into dec xor cmp mov adc (bad) gs xchg dec int3 sbb cmp mov popa ljmp inc stos sub addl je adc mov jg insl (bad) rcll jo imul mov sub pop mov rcrl and xchg sti add sub sahf enter gs mov push aad or in pop rorb sbb mov (bad) cmpsb in cmp push ret mov push fisttpll and xchg popa enter ret fwait push pop scas movsl nop ljmp scas jmp cmp daa add add ljmp push sub sub insb dec shl cmpsb sub push mov inc stos cltd (bad) ds test mov sbb les shl pop imul lret into mov adc add dec pop aaa inc sub mov mov sub std xchg mov aad sub repz ja mov push sti js or mov frstor ja or jmp rcl aas imul sub aad lea out lds repz stos lds add es or lods add xor and mov sbb (bad) repnz xlat add push pop out pop cmp mov lret cmpsl dec cli (bad) pop jmp jecxz xchg pushf (bad) xchg or ds mov xchg (bad) jb fcmovu sub sub rcrl xor push cmp clc mov adc pop stos cmp dec fs mov push aaa ss sub lods loope iret and jl out mov dec enter lock dec sti xor fst jecxz dec iret pop popa test jne sub lods notb jb imul xor rcr sti xchg and xor push repz adc out jae iret xchg sti (bad) jnp add (bad) jg pop dec jbe xor jg cltd add mov xor (bad) ds mov mov js dec sub cld mov dec test lea pusha lcall xor (bad) mov pop dec sarl xor andl add test test out mov dec mov sarb pop sti fs loope sbb sub or and jne je pop cmpsb mov push adc aas xor scas or movsl sub lcall pop xlat (bad) stc dec sar add call lcall sub xlat cli xor stos mov (bad) xchg push mov cmp fisttpll dec sub jnp and cmp popa jmp jne xor popf xchg add cmp les dec cli cmpsl movsb psubd popf or mov add mov adc mov inc inc xor and lret jnp cmpsl fiadd aad pop test mov sbb pop mov jmp scas cmp or mov orl mov rol push adc or pop pusha push push cmp sti or out push iret stos lods sti call mov popa adc mov bnd mov inc ds seta xchg repnz add lret cmp imul push cmp adc cmp cmp (bad) or dec rcll test test int (bad) xor repnz in or add js and enter push mov or inc sub adc jp sub jmp xor mov jbe jmp or xor imul fdivrl test mov inc xor jl pop or rcl icebp das in sbb pop pop arpl ljmp popa stos pop sub mov mov jg sti xchg lea mov mov jne mov and sub je outsl mov mov popf lds cmpsl (bad) dec adc stc push mov movsl je enter mov fiaddl es fnstsw adc xchg inc sub sub xchg cmp scas ret jae movsl jle pop out sub out mov call cmp adc test mov add mov loop push nop jns dec inc sub add pop in rcll dec (bad) jg repz out pop in and clc fcoml push push sahf xchg mov jge out rorl sbb dec fisubrl xchg scas shlb mov xchg repnz push mov mov ret mov loop sub inc xor or notb add stos cs aas cwtl jae or sub and (bad) add pop push insb pop mov incl push sbb sub add test out icebp ljmp jb ljmp (bad) push jne or movsl nop or mov xchg mov jmp ret cltd jno jle lahf dec mov add data16 daa xor insb bound or ljmp into inc sub cli lret push sbb push add mov das lea mov (bad) fnstcw shrl lea lret mov decl xor dec push ja inc cmp jmp shlb sub mov sub cld test call test add popf cmp mov repz pop xchg stos pop sub sub jne mov std xchg jle in fistp push pop mov out sub ljmp add mov dec rcr lods and pop mov out push or loopne dec jp inc sbb daa inc (bad) xchg in leave sub push pop mov inc out mov and mov add aas push icebp push adc lods pop lods addr16 push xchg cmp xor (bad) lahf add dec sub xchg ret js dec leave test or jmp adc jmp push dec mov rolb aas in loop into (bad) in arpl mov shrb aam cltd sti lcall mov add mov add mov add aad or and xchg insb sub mov cmp int3 push or fcomps or mov push sbb mov cwtl sub (bad) cwtl into sub push push and daa loopne pop pop jg mov sbb add mov xchg mov in lods adc fisubrl test lahf jae xchg iret stos loop xchg stos repnz xchg mov in sub insb stos dec sbb into pop mov movb repnz push call call in out mov or pop jge lds ret gs shlb orb out pushf mov popf xchg ds sbb int3 fwait lahf mov cmc cmp add imul and loope adc icebp ljmp jbe loope and scas sub inc mov rcll pop xor push into mov leave pop sbb pop ret repnz rcll sbb roll jmp xor xchg push lock and cmc push bound xchg nop outsb lahf xchg scas pop iret (bad) sub adc popf (bad) push ljmp sub sub inc xchg mov out jecxz pop mov sbb adc sbb adc dec shr (bad) mov jg sbb mov xor das sub cmc fwait push dec test or stos adc mov and subl adc add lea or xlat cs ret mov js int3 cltd pop (bad) je (bad) aas test mov cs pop jle jno dec jl push xchg sub cmp shrb ljmp mov cmp and xchg scas push bound inc pop into cmp mov out xchg pop scas pop xor scas sub (bad) mov jle sbb hlt mov mov pop aad lahf pop daa movsl sbb add sbb mov or push cltd daa ret sbb (bad) and mov loop lods sbb jecxz rep xchg in and mov pop lcall ds (bad) jb repz nop pop (bad) in arpl pop (bad) mov sub dec jmp dec dec inc rcr add out fstpl arpl add mov inc mov cmp iret add lods into lock mov (bad) sub sti xchg mov or jmp sbb pop push add ret ret pop add test inc dec scas (bad) negl sub mov sub int3 fs cld js dec lret test mov or jecxz sub shrb outsl mov sub push cld mov mov cli movsb dec daa xor je das hlt adc ja popf adc leave or and pop xor mov sub cld sub dec cld and mov dec dec das ljmp dec pop mov mov inc lret mov testb imul std xor xor iret scas loop sarl repz dec and jge aas imul pushf js mov cmc rcrl outsl mov and xchg jns inc pop sub mov fmuls out jle aam cld int3 and and mull repnz dec pop mov sub js (bad) gs mov cmp jle test dec jmp jno (bad) mov ret jne nop xorl lret aam shrb out sub stos cmp lock out mov xorb xchg xchg or adc sti mov sub in xchg jae add loope mov ds sub lods push sbb push stc and fstl int3 cmp push outsb mov jmp daa xchg or cmp sub xor cmp and xchg or add inc mov les dec cli sub or test ss push orb push xor sub in sub out dec xor fcoml add out dec rol rorb iret inc icebp xor sub cli loopne fsubs fsubr cmc idiv sub test stos jno sub (bad) ficomp inc xchg fist test test loopne test stos dec xor jle js ljmp je jo mov lea mov cld mov loop push sub fsubrs pop xor test (bad) lret mov xchg clc mov aad lock out add or sub cld jp or leave (bad) push sbb cwtl cltd ret mov xor imul xchg ljmp inc sub mov mov ror inc bound rclb icebp mov (bad) dec sub inc jmp fucomi outsl pop sti pushf mov out pop sub xor push or push jae mov push in aas dec ss add data16 push sbb adc jnp out or lds lret cltd bnd push jbe pop (bad) (bad) (bad) das mov cmp mov leave repz mov fisttpl sub movsl sbb jg ss xchg pop and aas sub jl push inc adc (bad) mov jno inc dec hlt and push (bad) jp daa jmp adc pop shrl mov mov (bad) pop into sbbb jmp sub das mov or xor clc fldcw call test into mov scas sub sub call jge in test add cli push and out adc sub sub ljmp imul cmp xor test or pop xchg jle adc mov inc mov mov jmp stc fldt fstps adc test std fdivs ret sub jge pop shll xchg mov add es mov (bad) je shrb mov fisttpll (bad) mov je,pn enter mov add outsl repnz mov push clc mov hlt fidivrl out daa aam sarb or in mov dec out push mov (bad) inc jg and fcmovnu scas icebp fildl add fcmove pop cli xor repz popf cltd mov xchg (bad) jb int3 bound ljmp xor inc rclb sti mov adc or mov cmpsb idiv push out sbb xor jno cmpsl js jp jne adc add ljmp lret inc call push inc movsl (bad) xor push cmp push call jecxz stc shrl xor mov inc xor dec aaa repnz xchg sti or fs popf cmp std and bound cmp sub divl sbb cs imul mov mov ret outsb and test mov repnz sbb lods xor sub dec mov test fildll sti lret popa sub cmp adc or fiadd repz mov (bad) mov fs dec data16 adc cltd subb pop mov stos mov xchg stos cltd jmp mov mov sub inc cwtl mov push jno imul imul push clc jmp outsb into push das (bad) (bad) inc pop fnop cmpb push test scas cld loop ret pop push loope and (bad) jae push (bad) mov daa or mov mov ds mov inc loope push adc (bad) out aam lods sbb pop jmp stc jmp or adc push scas lea jg ret fs cltd pop stc jecxz repz fstpt addr16 dec sub lret dec dec cwtl sarb inc mov cmpsb (bad) das or push add pop lods js push stos test mov gs insb ds sbb jg jp out dec sbb cltd (bad) fistpll xchg les inc je pop push roll dec cmc stc rorb outsb negl call outsb repz lods push pop push std pop push xchg adc imul adc scas je ret push mov lahf and rclb popf xchg inc mov movsl or (bad) (bad) and sbb repz mov pop shl inc add in daa popf loope xlat aaa gs std sbb ja fstpl mov test ja movsl jmp inc sub rep cmp outsb aas mov xor ja xor push adc iret add sbb pop into xlat repnz mov xchg leave and icebp mov mov cmp call inc cmp dec sbbb or lret cmp lods (bad) aam (bad) repnz hlt (bad) cs push aad adc push cmpsb pop mov loope out lahf mov add lock jne jmp xor fistp leave stc push mov mov xor mov fcompl imul ds sub js dec out mov in sub pop xor sub icebp fsubrs das dec out adc inc sbb (bad) mov and (bad) fldlg2 mov sub pop popf fs scas fistpll xor aad sub rolb add mov and sub outsl mov xor sub repnz mov out in outsl dec int ljmp xchg xor icebp add xor (bad) sub inc xchg ds xchg jnp push push inc sahf movsl loop add push ret repz sub jns hlt mov add cmp idiv (bad) les idiv int loope imul repnz lods dec repnz shr sub outsl and xor xchg cmpsb add bound jnp daa rorl fsubp test xlat xchg (bad) push xor mov iret and mov pop lds xor sub jno movsl xlat push sbb adc (bad) mov xlat mov inc xor mov add xchg jp mov xor and ljmp jecxz mov push jae test xchg bound pop repz into mov or outsb pop (bad) (bad) mov sub adc (bad) lock jge daa push in pop add fild xlat xchg fdecstp jl mov scas adc enter leave xor int fld xor push test mov pop popa mov and shrb bound lret movsl mov cmc jnp pop call or inc mov jl cs sbb imul movsl jmp cmpsl les mov xor add repz pushf and or out jp and dec test or sub mov outsb call jb cmpsb out repz cs add popa xchg mov icebp ret (bad) pop jmp and idivb pop fldcw jmp cmp or sbb neg out aas ljmp pop xchg ja xchg sbb xlat loope pushf sub pop dec cmpsl push xchg xor iret sub or rclb call cld push loopne mov xor (bad) mov pop xchg dec dec fdivr mov dec fs mov sbb sbb daa add push arpl or (bad) divl jmp inc mov sub (bad) push cmp inc stos and jmp rcll fs (bad) bnd push mov xchg push sub mov mov or movsl imul bound in mov pop mov add add and lock data16 fnstcw inc sarl iret push cmp ret aad lcall pop cmpb add inc loopne lret dec inc loope add and (bad) stos adc pop popf subl and xor notl imul jne and mov outsl lret mov fsubrl mov mov fistpll movsl jmp imul cmpsb or pop je sub repz xor push or (bad) test mov jb repz lcall sub xchg addr16 and sbb sahf jbe cs clc adc leave xchg fmull test mov insb pop and sub mov std dec mov call or mov sahf xor dec (bad) jbe ret aad fcomps arpl xor jmp jno push xor lds les cmpsb scas adc inc lods iret mov mov icebp sub sahf mov add pop xor mov or lret mov (bad) mov lds cld cmp fbld jmp sahf cmp clc jmp pop nop imul cmc aaa pop mov dec mov (bad) adc out add shlb out in cs mov cmp jg sub jle rorl ret xlat mov lods jno repz (bad) std faddl nop ljmp les in leave mov jns sbb pop lcall aas mov pop out sub sbb mov adc pandn sbb incb push push push imul add ret outsl int js mov adc fildll (bad) je pop adc xor aad jno jnp sub iret pop lcall mov (bad) das sub cmp daa sub fstl add fbstp daa fidiv pop dec clc psrad subl add pop lds sarl xchg (bad) jmp sarl push loop mov cltd daa ret pop out jp jecxz sbb stos das rcl cmpsl (bad) (bad) jb std cmp add sbb stos jge iret xchg leave aad push es leave inc cltd adc fistpll mov xchg (bad) divl pop leave mov fcmovu imul test dec out or out jle push dec pusha scas sub mov xor jle outsl repnz call hlt cmp pop cmp add mov pop push and xor jno pop pop add hlt shr xchg ss or cmp inc jmp add insb cmp xor out pop add mov fisttp negl les mov jecxz aad push int3 es in scas lods stos iret ss lret jp xchg pop pushf fs into stc stos test xor or jae mov sarb mov call dec xlat decb or xchg (bad) mov pop add sahf adc mov xlat mov out cli add lahf pop sub test push cli mov dec mov pop sub aaa jne call add test mov add outsb jp push add lods and and pushf lods mov loop xchg scas out push and ds fsubrp push scas pop mov push stc dec test js cmp fs cli out ss into stc xor xor push in imul mov xor inc sub (bad) xor or cmp iret fmulp out ja sti add sbb pusha adc or or pop in xlat popf hlt loope enter fwait or test sbb mov mov popa out jnp mov stos xor repnz lcall and leave fdecstp mov stc aam leave pop ljmp inc (bad) test (bad) fwait stos jge xor mov xchg dec gs fildll push std fnstcw mov xchg push mov clc mov enter lock out daa fnstenv sub scas xchg dec jmp dec pop ret pushf or sub ficomp les fstps dec jg xor stos add jo fidiv cmp les sub jbe call mov call or add in popl mov dec loope das sub inc sub jg or mov stos cs push jmp test push push out repnz leave pop inc add in ret mov into sub scas fxam sub aas pop add in cltd cmp cwtl inc jmp lret call div stc push dec xlat dec or lret jecxz pop std and dec pop nop lock arpl mov mov imul ds out sub divb and daa out and add xor popf rclw outsl pop ret cmc int3 mov jnp adc rorb mov xor push test shl jl pop and xchg lahf shr fs xchg inc mov or cmp mov testl popf inc inc gs loop roll push or mov sub lret mov mov in ljmp mov xchg ljmp out outsb outsb lds and xor mov adc sub dec sub mov (bad) repz adc pushl sub mov mov push outsb jmp decl xor (bad) rcrl jae and jg and mov adc fs push ret xor iret sub pop cmc dec leave sub xchg sub js mov mov push dec lret pop pop iret pop out cmp lahf out xchg icebp mov je mov sub dec pop out and repnz add ljmp cli xchg push pushf xchg push (bad) mov ret xchg adc mov mov sbb add sub cmpsb cmp cmp sub mov out sti pop jmp cli mov orl ja inc repz mov js mov adc xlat mov cs inc popa gs scas fstps sti pop jnp xchg adc inc mov cwtl clc sub out push into nop aaa sar mov decb lret (bad) es cs outsl psrlq testb xchg rorb mov shrb hlt lret stos arpl repz loope ljmp jmp pushf das mov cmc adc (bad) fs stos push sti lods pop dec push sahf sbb dec xor setl lret lds incl pop stos mov popf xor pop ss and push or push ret xchg xchg xchg leave cmp fneni(8087 scas jge sub sub mov cmp mov jbe dec (bad) pop jns sub scas sub ds mov adc xchg repz lods pop and (bad) xor sti mov pop clc dec lret cmp mov pop mov icebp mov adc adc roll scas and sub scas mov add sub cmc sahf test movl loop rorl xor cmp in dec ds jg hlt and sub mov inc and idivb mov hlt (bad) movsl in xor adc inc mov adc xor les lock enter pop insl insl push sub jne lds (bad) mov jns ljmp mov insb add repnz mov lret (bad) (bad) and icebp sub call cmp popa fsubrs xor out cltd or inc fisttp lret sub dec sub and xlat xor xor mov mov xor push cmc stos lret shrl mov sub fidiv pop aaa out dec and push lahf ficoml xor pop aam test mov push mov jge sub mov or push adc test jecxz cli iret jbe push jge lret (bad) jae and add rcrl xor dec mov insb adc aas repnz les lods loop mov fidiv iret xor adc and ljmp adcl sahf adc shll xchg cli repnz mov arpl xor stc pop mov jmp testb mov xchg jno sub out inc jo xchg aad sub shlb jecxz jns (bad) dec imul mov gs cmp push ds in cmpsl lret push inc test sub je icebp cwtl out leave mov lahf cmpsl add daa mov mov or (bad) push adc cmp cltd lret pop out das or pop adc xchg xchg xchg and iret or repz mov aaa dec repnz int3 popf sbb clc adc or test stc xor mov ds or xchg pop xor into jg dec xchg loope sub push imulb das pop xor jmp sbb scas mov repz and addr16 pop cmp sub xchg xlat adc popf dec icebp push shl adc ret daa ret ds push sub cmp xor repz push dec mov jns mov dec insb pop xor mov cmp or and sub dec into mov testl mov mov ret dec and jmp stc dec push (bad) xor pop or pop bound fs pop out ljmp mov cmc mov sub cwtl xor bound stc xchg rcrl ret (bad) mov sbb das jns sbb xchg in inc dec leave stos sub daa test xor cli aam out xor lahf fsubrl push push jbe lret xchg xchg push and jbe fist mov enter fbstp or out lods sbb lahf stc and sub test repz lret ljmp in inc mov test cmpb xor mov sub sub movsb mov or (bad) or ret bound dec fist test ret gs loop dec mov (bad) dec mov sub mov jmp jmp aam mov mov shrb add sub sub mov out popa pushl sarl fucomp jg push or cwtl int3 rclb xor out jmp fsubp pop fsubl add repnz or loop mov jp lock cmpsb movsb jmp scas test (bad) gs xchg imull xor or lcall gs cmp push cwtl fldl add cli gs mov add inc insl or mov and iret rol testl int3 (bad) movsl mov lds ret add call cld fiadd ss mov aaa testl stc movsb xchg and xor fsubrs push nop jecxz (bad) pusha mov sbb mov and pop daa mov push push pop adc xchg mov or jp jecxz pop es jecxz dec scas (bad) (bad) cli sub shll push add mov fild lods sbb sub (bad) arpl pop loopne add push or push pushf adc popf stc int enter dec add stos mov and jge dec xor or xlat das fcomp rorb xchg leave lret jo add push inc imul mov mov mov or test inc loope push mov lods icebp insb ljmp in call jg sub sbb std insb and push lea sbbb out daa idivb shll insb call icebp adc fs aam mov fs lds (bad) mov push int3 fdivrl xchg fldenv in push jge repnz cltd inc lods data16 aaa pop mov and lods fist out decl and das jb stc sub out bound lds das add test test out xchg sbb push ss into sub lret pop and xor pop in jb sbb jg sub xor xlat out (bad) mov imul or repz out lahf push mov decb nop adc neg jnp or xchg jge cltd sarl sti cmp notb push mov jle pop loopne pop inc sub sub rorl cmp iretw out push and in call fisub hlt add and stc rolb push push inc adc andb sarb mov sahf xor mov or dec call xchg lahf mov mov lret ret jbe pop xchg repz rcrb adc jle test into push ret sbb xor idiv push xor std pop sahf das pushf adc cli sub mov fisub adc pop xlat out mov orl mov loopne out cli js lds dec sarl jge and xor push mov das xchg out jnp or lods add scas sub std xchg mov out stc lods (bad) pushl mov popf (bad) xor sub imul hlt adc (bad) ljmp lahf xor mov iret scas sar cltd jmp into sbb sbb add and stc jne mov fstl scas sbb or xchg jg and fs (bad) mov fiadd into lock popf stc stos imul pop xchg sti lock (bad) mov cmp sahf sbb jg jae pop and inc add test test addr16 test sbb roll and xchg jmp stos mov aam jb loop (bad) dec push mov xlat fincstp imul add mov mov out sbb adc pushf adc int3 insl dec jecxz pusha mov adc or pop cmp pop xor ds cmp xor add inc lret mov in insb and (bad) xor mov add cmp (bad) dec sbb push out test cs add or rep sub imul in cs or mov fisub jg xchg jg jae loop fist pop jne cli loope jge mov cmp add lret lock add mov pop (bad) cli mov daa mov movsl pop lds pop or andnps mov imul mov out adc xor add cwtl and xor xor ret add (bad) fsubrl ljmp adc popa sbb aas cmp jle xchg hlt bound dec movzbl or lods pop pop call aas lret sub jbe imul enter adc pop lret cmpsb xlat loope lret ds ljmp flds mov inc data16 xchg inc imul ljmp sub fild ds das lock fcomi out jne and xchg aas mov push sub jnp sub stos cmpsb push push or out cwtl xchg mov mov ret js mov add lret xchg cld sarb div gs push arpl (bad) xor mov incb fsubrs mov xchg mov xchg outsb inc add or in and xchg add jb adc call push mov adc xor (bad) into pop outsb test insb sub mov icebp stc js dec jmp mov cltd push in sti movsb call jg or ror inc mov clc out cmpsl gs mov dec movsl out stc sbb pop or cmp jns lret add xor test jmp jnp stos mov imul mov dec cmpsb inc pop dec scas leave or (bad) or add popa lret and dec or mov in repnz (bad) pop mov movsl leave push xchg enter sahf (bad) fisttpl out pop jmp add stos notb add sub and aam sahf movsb les int outsl xchg fidiv mov mov jne aaa mov in nop xor xor gs and imul and or clc enter cmc inc add es xchg scas xchg aad cltd lods (bad) bound jne push xchg lret adc into sub mov das inc stos scas or (bad) arpl dec mov ret xchg (bad) ss sbb stc inc adc lock int3 (bad) and ret xor insb (bad) stc in mov cmp fsubl fcomip lret stos ljmp push sub or jae sub cli sub in cli mov test cwtl jns dec shlb cmpsl and mov call sbb sbb and xchg push push shl sub mov daa (bad) out mov jg or sbb (bad) adc cltd pushf ret dec das mov shrb xor xchg cli inc sub dec dec xchg movsl mov stos jecxz adc idivb xchg ror subb test mov into mov jmp add lea cmp in sub or call adc sub cmp mov enter pop repnz mov inc into stc aam mov lea leave jg inc and pusha sub or or xor repnz add jp push jne jecxz sub (bad) bound (bad) fnstcw dec xor orb sub rcrl test mov daa push mov pop push rcll popf or jmp or jmp repz ret push push call out in sbb (bad) lret add adc add or or cwtl ret repz xor pop cs icebp leave repz js (bad) stos jnp scas inc popf push fistp test adc jmp std stos (bad) dec mov pop out xchg popf and fsubl out aas lret ljmp xor gs dec push jge loopne fucomi sub daa jg subb and in (bad) out add jmp and addb xor popa inc and sbb mov aam leave in lods mov (bad) jb mov mov jnp cmpsl mov mov jg iret dec icebp bound or add xor add pop mov mov push push jp nop out call or lods arpl xchg adc jmp (bad) add push ret movzbl mov adc clc add sub rclb or xor pop inc lods test xchg (bad) xrelease repnz aaa jo pushf (bad) push aad dec dec hlt popf inc iret mov jbe lods mov jge (bad) and push in push xor test xor in push mov mov mov out sub cmpsl jno stos pop adc scas movsb in dec mov gs lock int3 loop mov lret ljmp mov sub sub popf fimul repz ror mov push dec push out mov dec lret add push das cmc xchg test cltd dec mov sbb add je loope or pushl leave pop pop addr16 hlt (bad) (bad) repnz test mov mov (bad) stc sub and xor je sti mov daa add scas xor cmp pop mov nop test idivb pop xor (bad) test sbb push fdivrp test push iret mov ficoml fsubrp in out cmp mov jecxz inc push xor push les subb jecxz lds imul pushf dec int3 movb fdivs (bad) adc repnz and pop lahf push ret mov and lods jbe sti ret add sbb mov dec fnop out test insb dec std inc sbb mov sub add aad lods std imul das push call fcoms add mov push push je out pop inc and and dec push cmc popf pop aas xor and cmc pop ljmp scas fmul ret jno mov ds call rorl or mov insb in js sub cmp (bad) jnp enter push add sahf ret imul pop mov jl jmp inc push insb inc lahf pop ljmp enter fsubrs out aad mov push mov and jle divb or stc push or jbe push jns test mov mov sti mov xchg xchg stos mov mov gs int add stos xchg mov mov (bad) pop jmp mov inc xlat adc dec mov das out jmp repnz out adc mov sarl jne xchg jl and iret mov js movsb mov insb or add movsb aaa out xchg add mov ljmp rclb fiadd lret push pop pop adc xchg or ljmp lahf mov out jg fisub out clc add mov pop pop sti lds (bad) lds out mov jle dec push xchg dec out aaa inc in cltd scas pop int3 push or pop mov sub sub dec popf fsubrl fidiv jg ror jnp jmp sub dec ret (bad) jge push pop jmp clc mov sub sub dec repnz dec mov int jg sti cmpsl fisub data16 xchg jp mov jg fistl xlat lahf jg (bad) xor dec mov dec pop jmp iret mov xor fcomip scas sub adc ret pop xor rclb mov leave mov inc decl lods push lcall push dec cmpsb inc imul xchg lahf dec jmp dec into and rcrb aas into xchg xchg das fnstsw or stos cmpsb xor mov in sub mov push ljmp jge mov testl sarb dec inc mov popl jns jmp adc push loop cmc inc aaa (bad) or xlat sub dec or scas int3 scas push mov (bad) mov pop lods cli fnstenv mov sbb dec aam pusha sub mov xchg jl jmp push icebp insb cmp and es imul mull inc xlat pop push lock pcmpgtw imul and cmp fcompl or call sub pop sbb nop ret jns imul xor push lret out cwtl outsl iret mov add jo sbb or repnz sarb lret ror push mov xor pop jecxz lds lock mov xor push leave pop sbb gs cmpsb ss push cmp jbe into std sar daa stc hlt outsl lret div mov mov jmp std push adc lret push and cltd ljmp lret pop pop imul mov or push es cs mov cmc inc xor dec mov mov repz cmpsl fs or add jmp push cwtl cmp iret mov fsubr jg mov add leave inc imul xchg push mov dec pop pop negl xor sub push fiadd pop or andb xchg push xor ret xchg jle leave xor jnp sbb or mov iret out scas sbb pushf outsl andb jns cltd push out sub push inc sarb push pop adc stc pop (bad) xchg enter iret push sbb (bad) xchg hlt or addr16 pop (bad) outsb pop pop mov ret out outsb fs xor rorb inc mov les or inc ljmp jbe pop jne,pn cmp xor insb setge insl arpl xchg bnd icebp pop popa or add out dec leave adc ret iret outsb or dec jmp popa jmp vmread loop xchg hlt outsl xchg push add insb add and mov adc loopne sarl ficompl xchg popa mov je lods les cli mov (bad) int repz jne ficompl push mov cltd imul int3 enter mov test sub repz dec push mov pop sbb imulb mov in aas xor fdivp mov nop mov inc stos test sub push push pop (bad) and cmp movsb test iret mov mov daa and mov (bad) inc shl cmp loope pop (bad) xor add sti pop divb push jl dec pushf sub xlat rorl enter cmp jl adc stos cmp jmp jno dec cmp sub les (bad) gs fist dec sub out mov pop and xor sti cltd gs adc ficomp (bad) sub jmp repz test popf subl loopne mov fs stc pop iret loope mov in xor div ja push mov add fisttpll das jns cmpsb pop or add (bad) jne sti fs mov or ret (bad) push pop ja mov imul pop fst sbb xor xlat push pop aaa and popa cmpsl js ficom ljmp push shlb pop outsl xor test mov jne jae cmp sub sbb sub and pushw push rorl or mov outsb mov push or or add push fnop adc sub mov jp ss push inc mov push das cld rol sub je pop add dec cs bound lret xchg or gs mov movsb lret mov cmp ret push insb jp je and push stc popf arpl cmp pushf mov xchg add xchg sbb xor mov es pop cld cmp ljmp or adc jmp sbb sti stos imul jbe sbb lahf not out decb std movsb test lret dec (bad) sub clc jae dec jae cmp jmp test divb jb je pop divl mov lds (bad) push scas gs lret mov movsb lods cs pusha xchg test pop mov sti sub add femms insl pusha pop jne jnp jl movsb out jmp (bad) sar sub jbe xor or (bad) mov xor or mov fidiv imul mov mov mov xchg outsl xchg cmp sbb sub je sub xchg or in and mov les xor push (bad) dec (bad) adc call xor mov js sbb dec lods mov add (bad) adc (bad) loop sub and pop ret stc pop sbb jnp test cmp call pop dec pushf cmp xor gs mov xchg stos fmull jmp pop xchg clc stc push adc lods movsb (bad) clc into cmc (bad) mov mov xchg stc xlat mov (bad) imul or or push (bad) sahf lds leave add mov mov aad lret or movsl sbb mov out dec xlat fs test cwtl push ljmp ja xor add ret inc (bad) mov ljmp ljmp xor clc andl sbb mov mov inc pop daa test sub and shrl xor cmc in adc popa inc lret aas test mov adc rcrl adc or pop fistl mov aad gs mov mov inc jb aas or xchg stc jo subl lock push or icebp push xor sbb sub (bad) clc nop pop jecxz xlat mov and inc adc cmpsb out cmpsb inc sub dec daa flds popf insb inc dec jmp jecxz xchg loope sbb daa add dec lock sub iret mov adc dec rcl (bad) in into mov xor or adc sub inc add rclb sbb push inc cmp jno rorl and stc mov (bad) mov jnp dec shlb sti or mov or add rorl inc int3 or add incb stc pushf movsb sbb repz jns or (bad) leave aad sub loopne (bad) mov push pop inc xor int3 lret sar adc stc dec out faddp adc jmp mov in push sub add push push std movsb imul aad ja xlat mov aaa fisttp mov xor imull jns push xchg insl mov xor jecxz and mov push mov cltd inc and xchg lret ffreep repnz test pop leave roll leave imul (bad) shr (bad) into ss and lods mov xchg xor sub mov jge ret adcb imul pop cltd xor outsb mov xorb xchg add pop inc ficomp leave loope repnz sub shlb jb jl push out dec cmc fs mov sti (bad) cltd pop adc dec and jp dec lret ljmp rep xor out jge orl hlt inc jmp in das jae jmp xchg inc sub movl enter xor xor pusha pushf and mov dec push cmpsl test pop sub xchg in ret out lret push and cmp xchg sbb jecxz rcrb pop pop cmpsl nop add xchg imul nop push and (bad) (bad) push push mov pushl ds (bad) cmpsl pushf cmc push addr16 xchg sbb adc add mov xlat pushf sti lret mov daa push dec mov sub rcll (bad) je or flds or sub mov mov cmp ret mov stos lock pop cli mov movsl xor mov outsl fs (bad) cmc (bad) mov push leave ds cmp lock pop sub das loopne iret pop add mov repnz mov dec js lahf testb rcrl sarl aad jecxz (bad) or sub insb cmc pop xlat mov repnz les repnz lods fs ljmp dec sub out sub roll out mov call into notl xchg mov lock lahf jmp ss push mov push insl pop jg insb dec sbb cmpsl imul fs pop (bad) mov adc clc ja xchg sbb inc inc daa ja je mov adc sbb push xchg shlb das xchg push xchg js les pop mov xchg aam mov sbb ret cmpsb xor out sub sub mov push cmpsl push xchg imul xor stc repz sbb pop sub int3 mov xor jmp adc or jbe test push rcl mov lret ficom ja idiv sub add int3 scas mov inc icebp sub adc out (bad) push or inc loop adc sar add loope jnp jb movsl (bad) icebp ljmp sbb pop rcrl dec add xchg cs mov mov push movsb mov mov xor xlat sub aaa and subl cmp (bad) or and lret fbstp push xor lahf or push cmp je daa test mov dec pushf xor dec movsl and lods mov jmp push sub dec lret aaa mov lret mov and mov sti cmp or ret mov xchg mov loope push cmpsl push xchg xchg lahf cltd dec ret ror test out es pop ja call stos les mov popf (bad) stc arpl sub xor mov js aaa movsb les js or incl stc dec leave popa test nop hlt mov scas sub ret xchg fidivr icebp or pop inc lret sub and push push fstpt pop (bad) push ds mov xor xchg inc aas mov sub mov dec icebp clc jecxz divb jecxz lcall fcmovne popa mov sub sub clc mov jmp aas scas jmp (bad) out pop sbb jb in push jle add stc call sbbb jb test jns inc add scas repnz rcrl or fdivrs into cs lahf push mov jle push push pop inc or mov sbb add (bad) and loopne movl or jns lret cltd icebp sti dec push into xchg std sub lret aas sub out or lock mulb leave sub pop out sub mov or add inc dec loope stc stc mulb les je lods mov jge adc int cmp fsubrs mov cmp jo shlb in mov cmp jp xor ret mov push jae sub mov pop pop lret sar mov sub and push mov dec repnz adc pop xor xchg aad jle movb xor stos sub insb test daa (bad) jl push push in bound sbb mov adc mov dec jecxz and insb xchg bound rol inc lods scas hlt daa inc sub pusha insb and pushf sub mov jl in stos sub mov mov pop mov rorb add pop repz icebp arpl jmp rclb add lahf and push or inc mov (bad) jno sub cli inc jmp enter out in lahf movsb lds popf rcr jnp jno (bad) push mov (bad) dec adc sub (bad) mov adc jnp mull inc popa cmp int3 push add adc sub sub dec pusha pusha idiv xchg into fwait mov (bad) and cmp daa ret icebp and outsl enter xor into add pop push push and pop sub jmp fsubrs data16 dec sbb mov aam enter int es or scas inc and push cmp pop push stc imul or ds or lds idiv xchg mov xor xchg pop cltd xchg mov cmp test icebp mov push add leave jb fmuls jb shll pop mov sbb mov addr16 insl adc push aam iret notb xor scas (bad) jns out jl add ret dec gs idivl sbb leave xor and (bad) mov pop cltd fs data16 dec jmp push stos lret xchg sub sub mov ret cld movsl push adc xchg jp pop push pop daa (bad) add or pushl fmul xor insb mov xchg aam loop sub bound fucomp movsb pop iret xor mov call sbb les fistpll sub (bad) fidivr and sub scas popf lods ss or cld out push mov xor jne mov iret cmc outsb dec adc movsb icebp mov inc push inc sub cltd (bad) or xchg cld push pop std sbb cs ljmp cmp mov sub jg stos add inc xchg ss outsb mov pusha jbe ret mov enter jle js popf jnp jmp inc dec mov enter mov sbb and add inc xlat out lret sub jmp test mov fisubl add ss and repz sbb inc adc dec (bad) push cltd int3 adc imulb and sbb jb pop or add dec out mov xlat (bad) cltd das push mov (bad) cmp mov out ffree xor push mov push jecxz xchg or sbbl mov push data16 rorl mov out xchg in jl test jp add mov xor dec and shrb dec popa sarl and or sbb pusha ja jnp in inc movsb scas sub and xor xchg pop sub mov fcompl gs push xor stc out mov mov pop lret dec mov jmp enter sub push push mov (bad) sahf lcall mov cli lods mov pop dec xchg lahf push mov jns adc lret aad sub mov ljmp mov sub xor sbb push push int loop jne out xor (bad) js lahf pop int3 pop adc pusha mov or mov mov scas lret movzbl pop adc ja repnz xor (bad) pop push ja insb xchg or fs inc daa (bad) cltd lea inc arpl les inc lds bts xchg icebp ror jge mov dec dec push (bad) cmp lretw dec or out daa jecxz (bad) out lret loopne sub int aas push push cmpsl push xchg cltd nop gs and mov xor testb sub shr daa (bad) xlat dec bound (bad) sub and xor ret pop inc gs dec mov aad inc cli xor jno test fsubrl mov (bad) call sub mull sub pushf clc xor movsb pop lcall cmc and fldl xor mov jbe in push jmp or insb sub clc push or push movsl fstl xor add add and lds xlat add sti fcomps mov xor jno cmpsb std leave lcall mov add sar lcall inc sbb loop jp push xor jns adc add cmpsl aas iret out pop mov roll out (bad) pop mov jmp mov sub cmc inc jns (bad) mov xchg mov push ljmp aas lahf jno lds mov pop cmp shr call mov and xor ret push mov lret cmp les lret test cli sti mov (bad) in fcmovu add fdivrp popf push jle ja loope lea into (bad) popa mov lret cmp rolb fistpll push ret pushf jmp andl std xchg je sub inc push bound imul mov xor mov adc les mov lret dec call jl shrl or fdivs (bad) loope faddp pop jbe outsl add movsl cmpsb dec icebp jp aam pop fisubr sti push push adc ret repz add mov (bad) (bad) pushf xor cmp icebp or test jge adc inc adc (bad) cmp outsl cwtl pop fcomps sub inc sub adc into sub sbb mov xlat cwtl and cmpb and inc ds fs call in add push ja in mov add scas pop mov lret test sub pop adc pop fdivs dec inc mov pop pop std movsl add mov add inc push mov clc inc xchg jae mov jne mov mov gs cltd adc cmpsl dec test movsb mov loop insb lods xchg dec mov das adc or and dec fptan mov xlat incl mov out testl mov dec insb test decb sub dec push dec clc loop call and mov push push or xchg mov lret jne sub dec repnz mov or sub add mov jmp bound mov lret sub pop sbb adc mov imul xor fs loopne xlat popf stos sub adc into lods mov stos enter xor flds cmp and repnz mov push add add fbstp sub out dec mov push pop mov and ss and icebp aas repnz mov mov dec int sub sbb adc fld imul and add push xor sub or cltd (bad) xor lret push sub and and fmuls insb and lods (bad) or mov sti pop and pop leave cmpsl push sub sarl jnp mov (bad) jo mov push add mov cli test sub leave fldcw cmp rcrl leave xor sub xchg lret addr16 xlat cltd mov jmp fdivrs pushf cld add add adc mov xchg ss test pop jno dec stc icebp mov cs sub dec or sbb aas mov (bad) xor daa add inc push pop subl jnp into mov (bad) sub pop jno lods ja jno dec mov fs pop or call icebp hlt dec sbb lock inc jp into jp inc cs gs dec push loope (bad) std jp xchg test cld or sub or cmp imul xchg jmp cmp sbb jecxz in adc and test lock lahf push push insb dec (bad) pop push cmp decb lret cmp je sti shrl cs sub mov and and movsb add das dec push xchg icebp mov (bad) lods xor jle mov xchg fs sahf popa dec mov xor fisubl mov pushf push xor (bad) mov pop sbb sub dec nop int3 inc xchg xchg lods push pop sub xor mov movsb in std xorb add sub cli xor bound inc outsb sbb outsb lods ds or les add adc scas out inc xor push shr mov and mov cmp jnp dec mov dec lret and daa jp sahf rorl sbb and adc stos add and dec sub insb and adc push xlat arpl stos mov mov fwait subb scas sub aam (bad) lret inc or dec and push ljmp outsb mov sub out adc fcoml xor jge in daa je ret push pop in or sbb sub outsl sbb cmp xor (bad) out cmp std cmp popa pop xor mov mov cmp cmp outsb jmp (bad) out stc jl in mov mov mov lods pop rcrl jns xorb adc xchg add lret mov sbb xor add dec and lahf jmp sub cmp js shlb and pop ljmp divl lcall pop cmp adc (bad) and div pushf sub xchg cmp xor sub sahf or mov pop shrb insb mov xchg or push jnp adc je jmp cmp int3 lret cld sbb inc (bad) or shrb or pushf mov cwtl push ret dec xchg mov std dec pusha and add dec cmp lods add ret mov js pop mov sub outsb cltd mov pop and jge mov (bad) mov dec in mov fisubrl js in daa rorb push test dec ljmp mov and fiadd and mov imul roll pop rcr mov test lahf push push les cli clc xor mov leave mov gs lock pop pop dec repz and pop adc or (bad) and mov add add sub jge mov aas xchg inc mov adc add jmp (bad) icebp cld fdivs xor (bad) jno mov jle dec cmp add mov mov jle add pop adc xor pop fisub pop or scas jno add das neg cmp mov out js adcb loope outsb jae mov and mov dec jnp (bad) or movl icebp fsts stos jecxz xchg jecxz pop decb call fldenv dec jne mov add es shrw add jno cmp jg inc icebp adc jecxz lcall aas pushf enter mov mov repz leave lret sub inc pop sub adc ljmp jl shrl adc xor mov and (bad) cmp add xor and jae scas inc shlb mov xchg fstpl lods add mov scas or sbb pop sub add xlat sbb std mov outsb mov xor xor jns mov dec cli sti mov add in mov divb je pop sbb pop ret outsb lock pusha bound fstps cvtps2pi ret hlt pop bound int outsb mov inc mov adc out sub jecxz dec push sub jg leave cmp mov sbb push bound jmp push or cs mov out repz dec jl adc sti mov jl cmp dec in and sbb jmp pushf and sti pop or inc pop rorb aas sub addr16 xchg je adc cwtl jbe dec sub push jp inc sub scas sub clc push sti or (bad) repnz xor xchg mov and (bad) sti mov mov stc ds scas mov inc in dec scas rcr cmpb fs sub push mov and lods (bad) cmc into outsb fwait test mov inc out adc stc (bad) imul sub or dec repnz add pop repnz or jmp adc pop xchg pop leave jnp out int es sub xchg pop xchg movsl das add loopne ret inc or mov or add push jns xchg jecxz mov adc push scas (bad) dec and repnz and sub add push pop fidiv scas mov mov (bad) loop repnz fstl add push outsb mov daa or jno or push fs lea add hlt sub das in imul jmp into ljmp xor cwtl out icebp mov push insl xchg ds pusha rorb in pop add ds into add (bad) aam and and jl movsb mov mov inc dec cmp add mov and pop fidivr fs push repnz je xor add dec stos jns mov mov (bad) cmp sub add loope sub jp xchg mov mov nop mov lret xor out pop data16 sbb lahf inc push jp les cli add into mov ljmp mov or int ljmp fisttp push (bad) mov das scas xor xlat pushf cmp adc xchg and dec sub imul test cmc lcall dec lods push mov decl sub mov loope in push add (bad) xchg pushf xchg enter jne das out sbb dec in fsubs les stc test lret sub leave mov jp lods andl cli fisubr or (bad) mov out mov popf pop mov pop jmp out aas lret xchg pop pop shrb or rorl in dec jecxz mov add or mov xlat ret mov dec jmp dec push dec and pop enter lods xor xor sub jecxz ja iret ljmp sti and sub xlat xchg push fdivs rcrb push sub std xchg (bad) shrb orb dec adc ss loope imul stos mov gs and push loop pop dec shlb leave mov into ret mov sti sub add or sub or and pop xchg mulb xor cmp pop and or push aas inc add insb sti jge inc and cmpsl in adc in pop mov popa sub dec dec sub jmp cltd rdtsc (bad) xchg mov mov fildl add sub sub in cmp lret push dec test cwtl cmpsl cli cmpsb dec and push pop jb shll fscale cli mov jo xchg fimul pop mov daa mov jnp sub jmpw sub cmp dec lret int3 aaa adc enter xchg fildll xchg sar dec push or int3 inc dec pushf (bad) lods mov or pop mov test push ds cmp aad je gs sub or fidivl xlat xchg stos repnz sbb pop test add mov nop fidiv sub gs lods jle gs out sub pop rclb fdivl (bad) jl mov and fist rorl mov push add test xor mov enter inc or xor add jg ret in xor jmp xlat scas repnz scas add gs mov push push bound sub add pop test mov xchg jmp leave mov mov cs scas scas (bad) push pop xor in lahf jne (bad) inc int xchg push lahf jne (bad) dec mov ret (bad) xchg in ljmp sbb xor sub cs sub mov lock jl loopne stc roll fiadd (bad) mov shr popf call scas fstpl add popa sub loope shrl lds cmp shr mov jl icebp out popa lods and sub leave out xor mov aad cmp shrb mov std jns dec loop xchg imul dec rorb test mov (bad) jbe push mov movsb repnz or xchg daa xchg pop jmp push lds test je cli jecxz push xor stos mov fidivrl out xchg push cmp sub dec push sub ds and sub or into add cli bnd out sub movsb mov insb sub aas xchg pop scas mov int3 rol (bad) (bad) jne jmp push ret dec pop or sub ljmp out pop xchg jbe (bad) jp mov in mov add push pop adc mov scas stos loop xchg pop cmpsl dec dec sub sub and into loope loopne mov or cmp cmp pop pushf imul movq mov loop shrb mov xchg (bad) jge sahf xchg jmp lret mov popf fcmovu push pop cltd xlat mov sub lock mov fidivl roll sbb xlat jecxz add mov (bad) in in adc mov out arpl or add push cmp (bad) lahf jno xchg (bad) stc outsl xchg stos xor ficomp or push fwait dec orl adc pop xor lock push inc jg dec loop mov pop inc test das fdivs add mov push pop repz mov aas adc xchg and jo call xor out mov add sti mov sub jns je rorb and xchg cmc xchg in cwtl adc push sub fs push orl push sarl cmp pop pop test out pop add jge aad out lds sub sbb adc adc or (bad) pop (bad) lret jmp mov dec lock sbb (bad) jmp fldcw decb cmp mov daa into call sub sbb xchg bound shrl jno sub cs lea pop (bad) xor stos cwtl popa mov out out lret cmp leave mov mov dec cmpsb push and adc inc scas inc xchg push pop push insb dec in mov andl ja inc (bad) out dec pop or adc (bad) out adc cwtl xchg pop xor mov sahf aad mov out push jg insb lret inc stos leave pop add fsubl jb cmp xor rcrl lods mov sub leave push out lret mov dec (bad) je mov test clc jecxz adc push mov imul cmpps rorl gs (bad) je xor adc and push xlat insb cmp or and and or sti xor jmp (bad) pop or movsl mov (bad) cmpsl jo xchg inc cmp mov (bad) mov stos outsl push xchg (bad) mov outsl sub daa das pop inc cmpsl push addr16 or xor mov and sub mov push (bad) sub xor and in inc or push xlat adc popf xor add sub das notl lcall lods or addl lods aas xchg jecxz add jp scas jnp (bad) cmpsl (bad) pop pushl mov scas int3 inc add and or sarl or pop pop test fs subb add mov aas loop dec mov loop in pushf mov pop xor out cmp or fld loop dec loopne or mov mov int3 mov dec pusha shlb push (bad) cmpsl dec or dec and mov sub scas cmp push cmp stos (bad) sub pushf imul movsl scas popa inc sub cs sub jae gs adc pop xor mov std dec test fcomip stos inc (bad) out aas sub fimull mov mov cltd popa mov ret in stos mov arpl push iret mov fmul (bad) popf lds subb inc insl jmp data16 cli pop mov mov fisub xchg hlt loope mov jmp pushl scas ja loopne lods jmp lret and (bad) aas in (bad) loop pop inc mov sub add pop sti (bad) cmpsb (bad) dec scas xchg (bad) (bad) ffree imul ret push push sub mov stos stc lcall adcb xchg test cmp sub cmpsb or jge jnp daa jns lods rorb pop xor mov loop xchg (bad) jo incl lods fs or ds mov loope sti sub out dec cld int dec negb repz push loop fbstp pop push fldcw add jecxz dec test leave and mov or mov push (bad) dec pop ja and imul adc or call or cmp jne push inc mov xchg xor sub jbe inc pushf add (bad) stos mov (bad) fistpl dec jg lcall and inc scas sahf in rclb xlat jecxz jle pop sub adc ljmp (bad) in sub int outsl (bad) fidivr sti xor insb in iret inc mov cmpsl pop sub movsb pop das jmp cli enter fisttpl push mov mov pop add jmp inc insb icebp into outsl mov (bad) adc pop sbb push jbe push sub daa pop je pop into leave dec (bad) adc push in out sub xor (bad) mov popa or xor lret sub xchg dec rcrl scas or mov add or cmpl enter fistpl out adc in xor lock lcall push call jg and sub dec icebp mov aaa popf push ror cmp push mov call cli mov push cwtl jle add push clc into outsl ret cmp push in stc scas push adc popf add push sahf push mov fs stos mov xchg loopne clc sbb cmp sar clc mov mov dec cli xchg pop cwtl mov pushf xchg dec imul push lods jg (bad) lock lahf negb rcl push adc in sub push push psubsb xchg cld fs aad mov aad enter cmp sub xor outsb mov push or iret pop loop (bad) pop lods push adc cli or adc lds fildll cmpsl cmpsb add jo rolb sahf cmp rcr das inc dec push idivl je sbb sub dec aad dec (bad) fs lcall pop adc js pop popa mov inc jbe and xor fimul (bad) lds ret pusha jae push shrb push and push jne jg shlb adc (bad) adc sub cs adc push adc adc jae (bad) and stc push mov dec sub aad jne loop jno dec xchg cmpl mov imul (bad) pop add sub mov sub mov clc xchg (bad) imulb lahf xchg sub fs mov inc and pop mulb nop push sarb sub gs stos fsubrs push mov jns leave in daa cmp push cmp and mov pop into leave add (bad) mov (bad) ljmp data16 call add dec mov or shrl or stos iret inc (bad) xor in scas jbe popf pushl mov add iret inc pop rcrl (bad) jns mov out mov push mov in and mov gs sub nop out call (bad) lods inc jge rcr push (bad) loope add inc lea scas jle sbbl xchg mov ss repnz mov pop xchg cwtl pop mov sub xchg sub lcall mov andl jb dec sub sbb sti jp out cld adc mov nop ret xchg fisub fsubrs aad mov fs ret ljmp xor push ret lock push mull (bad) das xor ds das inc repz aaa add mov cltd hlt add inc or xchg mov sub mov mov mov and in stos xchg mov ljmp jecxz js (bad) lret sub lret xchg ret mov sbb gs or into (bad) popf push rorb jnp daa cmc adc lock insb ljmp mov pop xchg cmp and push in daa inc xchg lahf xor and daa xchg sub add jns xchg mov in or (bad) arpl les inc mov dec cmp cmpsl cwtl aam (bad) pop xlat fsts enter jge lock (bad) xor scas or call fnstcw xchg or icebp test into push xlat mov adc jb sbb outsl test jnp xchg mov rorb dec (bad) pushf sub test and mov movsb mov xchg mov add pushf insb inc jns sbb sbb push nop (bad) bound xor sub sub xor ror mov aaa bound aaa push jnp scas fisub mov divb and rorl fimul pop cmpsl push jne mov mov cmpsb repnz jbe push mov dec pushf fisubr les xchg and xchg fdivrl (bad) lcall jl push pop ret outsl dec mov dec jne sub ds sti jle repz pop adc sbb jne out movsb adc push sarl sub xchg pop push dec lods repnz dec and mov out cmp xor les addr16 sti out popf pop and sbb (bad) dec push xor lea aam negl fs (bad) pusha cli addr16 mov bound mov movsb and mov fcomip out divl add pop adc add neg jns movsl inc sbb mov jb jg incb push gs mov fstpt idivl loop push stc cli push call mov sub pop or in inc lcall and inc adc iret test test ja pop frstor daa call inc mov cmp xchg inc and xlat xchg pop ficoml popf push sahf stos xchg mov pop xchg mov adc dec fisubl scas push push or mov xchg pop add (bad) sarb push pop stos mov pop int add sbb mov push and sub pop mov test ja add jmp and push adc pop (bad) repnz xchg mov adc clc test out test lret lock push jl and dec repnz dec xor fsubl dec lods pop pop lret xor ret jle jp and out mov inc sar repz adc movsl push nop cli mov jp mov sub mov sbb imulb cli sbb mov mov add mov insb or mov mov adc roll addr16 mov adc (bad) or jnp push mov cmc mov aad mov movsl das add pop clc jmp (bad) cltd fcomi lods inc leave sub inc jb pop pop movsl rcll (bad) or iret or pop gs xor clc jp mov dec xor shrl (bad) fsubrl pop adc inc repnz xor mov fs out repnz xchg out dec mov insb add mov pop push (bad) mov cmp add pop out ret dec mov xor mov and das hlt icebp sub jp pop ret mov sbb xor mov cmp fimull mov lret aad mov movsb mov sti cmp repz or ljmp xlat gs and sahf int jg sbb mov sub sub push pop mov jo adc call sub dec mov cmp mov cmpsl das call xchg mov and das in xchg out jecxz push mov sub and ja push sub adc pop push push repz out pop xor mov jg imul inc cmp lret pop pop mov rolb bnd xor fsubr cmpsl loop out push pop in sub mov outsl sub xchg mov imul imul cs jg movsb adc mov movsl ret cmpsl push lcall mov (bad) lds int3 add add call and iret fcompl into and mov fidivrl xor xor icebp (bad) xor inc or and dec dec push loopne cmp adc bound mov mov add sub shr xchg sub xor jne ret and inc fs cli mov inc inc outsl ja inc xor cld mov mov lcall mov cmpsl bound int3 jp dec ds mov xor adc mov or cmp mov (bad) pop in mov dec addr16 stc mov stos stc mov fmull jbe push add mov ds loopne sti push mov fisubr push sub out add adc sbb xlat loopne pop stos xchg add add inc mov cmc lds rclb nop jecxz ret daa (bad) idiv (bad) jb ret and inc adc sbb (bad) cli (bad) jo sub dec xchg inc or ret fs sub sub sti adc movsb ljmp scas lret and scas sub lahf pop icebp iret sub leave test das arpl ret jbe push pop pop add icebp pop xchg or sar xor jne (bad) movsl rcr sub add add and int3 jmp movsl ret xchg out lret mov add mov sub stos xor add das (bad) dec jecxz lds sub out inc xchg sub mov push stos push jge mov xlat int3 cmp push xchg mov loope sarb inc movsl in cmp xor enter shrl mov jge sti sub (bad) aas xor or dec subl jg jecxz xor push mov fdivrp and or sub or mull daa push (bad) loop or mov sti dec add mov cwtl (bad) out lahf inc shlb push xor push shrl fimull dec (bad) out arpl cltd inc (bad) or push xor sarb mov xchg bound xor popa cwtl or mov repz (bad) mov jge (bad) aad cld sarb sub std push cld pop subb fsubrs cmpsl sbb (bad) sub daa out decb add fcomi gs dec or dec adc push shlb or sti xchg pushf movsl mov cmc push or lea shlb incb roll out mov lea xor out push out and sti cmp vpsllw xchg push push xor cmp ds mov mov cwtl fnstcw mov and mov shrb movsb aad pushf add sub push or sbb adc ret pop andb adc pop mov popf out adc and cli jne in and add pushf add jl fisttpl or adc out and push loopne pop pop dec lret sar mov mov jmp inc sub and and mov or adc mov imul je sarb lahf data16 loopne push xor outsb dec mov fs or xor das add aaa out mov mov into mov leave lods incl (bad) gs hlt stos flds xor cli mov in lret or lret sbb xchg test inc (bad) dec (bad) fimul cs mov insb and adc (bad) sub push test das adc mov sar int3 movsb leave pusha push int3 loopne cmp cmp es add mov adc and cmc cld nop mov aam clc and jno movsl insb adc call (bad) aaa pop push loop test sbb jbe out dec repz popf faddp lret or inc pop fcmovu fldcw sub mov cmp sub fistp mov dec xchg fnsave daa push es sub push push xchg pop dec xlat (bad) fsubr out xchg jne and xchg dec rolb sub aam rcrb arpl mov mov das mov mov xlat or mov jmp roll jae lahf das notl cmp or and pop mov xor mov and (bad) shr mov jge aam mov (bad) or in pusha mov rcr dec push xchg push push adc insb cld ljmp xor (bad) and out ret fsubrp (bad) call xor mov adc call add ljmp adc or int ds push movsl add fsubs jecxz add addr16 je decl (bad) div lds or sti jbe outsb mov push xchg data16 or repnz sub push push out out cltd and in mov popf jg xchg xchg adc fistpll clc cmp fisttpll mov popf icebp xchg leave dec popf push sub or mov stos ja movsl push jge adc leave lock ljmp loope lahf jo mov popf fldt mov daa adc imul push gs orl repz mov out mov mov cmp add pushf add cmpsb insl or add push jnp nop out nop rcrl mov jne int3 xchg xchg xor (bad) mov (bad) pusha stos sbb cli mov iret pop sbb mov jg sub sub jae push rcll xor int3 mov dec mov (bad) mov xchg mov test xchg lods pop ret add jl lret fnstenv and mov into jo,pt mov mov xor clc out jno inc or popa test lret je mov cwtl xor jle pop sub in aas int xor fsts scas lret enter mov mov repnz das mov cmc xchg fcomps stos jne ljmp cmp adc aas sub (bad) icebp out adc sub lods sub sub sub mov sub or (bad) or dec subb cmpsl fdiv xchg sub repz xchg jl jb loop iret push or mov xchg loopne lret xchg aas popf test out lret fisttpl jp not xor repnz je shlb xor out add pusha add add mov cwtl pushl and push lret icebp sbb fadd ret hlt lock or insb pop out or xchg fnsave scas fidivrl xor and mov mov les add pushf into dec xor xchg leave into dec mov xor sbb mov or add aas sub mull (bad) jmp clc cmpsb mov lret xorl cmpsb sub push daa cmpsb or loop call pop or push leave push or pop mov bound lcall pop or sbb fisubr and mov xor add cmp xor pop pop push imul inc jg arpl ret popf and mov adc je call mov mov pop cmpsl fstps clc dec mov dec push stc fprem jp jg testb in stos imul mov cmc out (bad) dec or lock xchg je push imul mov jo inc pop sbb ret add sub pushfw shlb mov dec ss cmc daa pop dec xchg pop mov sub clc daa pop sbb scas movsb stos mov cmp mov vmovapd jbe rcll mov icebp clc cmp jo sub pop xor mov xchg ljmp repz pop lcall ret out cltd subl jne mov std dec xchg cwtl and mov pop std and mov pop sub fsubs daa shll lods in dec mov jne adc add pop mov pop mov add (bad) into xchg sbb jl jmp adc pop xor sbb lret or lret mov xlat cmpsb scas lret out cmp and loope repz in xor add lahf jno push xchg adc xor stos xor fistpl daa fcoml or sub jge jecxz (bad) jle (bad) mov cmp fldcw ror fiaddl gs or bnd push lret xchg call and jle lds (bad) faddp roll dec cmp dec jp push repnz sub icebp mov push pop notb add sub or scas in sbb mov ret mov movsb stc popf jbe pop (bad) xchg arpl insb test clc push mov test int adc out sbb xor nop sarl negl pushf pop jl call mov or push pushf mov add loop mov push (bad) sub fcoml outsl fildll nop aad push push imul cwtl inc ret mov cmpsl rcrb stos stc (bad) in clc imul push jno (bad) sbb jmp mov outsl jmp inc outsl (bad) xor push insb pop dec (bad) imul pop cmpsb mov rorb pop push (bad) xor icebp mov scas les lret sarb pop xchg mov adc pop add mov cmpsl mov (bad) popf testb rcll xor (bad) sub cmc push jmp xor inc (bad) sub mov popa fmuls loopne pop and dec (bad) cmc gs mov cs mov lods popa xor daa test int cmp lcall mov aaa lret lret pushf sbb shll jbe sub jb sbb lret and xor aam push xchg mov icebp push loope test or fadd ret push gs pop inc cmpsl ja data16 sbb xor fildll (bad) call addr16 and xor sbb mov pop mov mov add and push sbbl mov fisubr mov adc imul push sbb arpl mov mov push (bad) dec out cs pop call jg loope out or pop das mov test lret fisub jp test sub mov push pop rcrl and lods cmp or or xlat fsts pop shld push jno lret push cli leave daa decl mov cld in (bad) test adc sti pop aad sub jge mov popf ret xor js int ficomp cmpsl xor dec shl pop clc inc mov imul mov ja dec fsubrs shrl sub mov (bad) mov mov mov mov into mov ret ror movsl aad mov clc mov loopne cmp fstps loope ljmp dec cmp and sub jne out fs cwtl (bad) cli lahf nop mov rcl mov jge ds rcll xor jge lahf ret and pop sub jmp mov jecxz (bad) test repnz and adc mov std icebp aad jg inc pop add xor scas repnz mov (bad) imul pop ljmp pop ret pop jmp cmp (bad) insb pop fild bound cmp or sub sub mov mov out push xor mov jno inc sub add in xchg mov mov mov mov test xacquire popf loop sub or outsb pop cmp fistpl mov ss jecxz daa lret icebp jb ret and subl and jns mov rcrl fcoml adc or or push je sub and mov pop (bad) dec lock sub dec lea inc (bad) cmp (bad) dec (bad) and pop inc lea push jge or xor or inc test xor jmp int3 dec lret iret dec leave idivb push iret jmp pop popa mov or out leave push lock sub pop and push fsubrl mov ret mov movsb nop sub lea loope cmp sub (bad) sub sub out pop sub aaa sub mov sti mov mov fild cmp push imul repz nop (bad) lcall (bad) scas popa cli rorl pop mov or push imul and mov call lods inc pop jmp (bad) (bad) jg (bad) push sbb out pop mov xlat dec add (bad) sarl mov mov repz mov mov mov jae iret dec inc sub sub add imul xor sbb icebp pop adc loop fist fisubr pushf testl sub test imul adc gs ret mov mov push add mull sub js stos mov dec shr int insl aad and adc fisttpll je mov ds mov repz ljmp add test mov xchg loop cmp out in lret stos pop xlat cmp mov ret dec sub call sub and jge dec popf pop popf sub dec jle xor cmp divl addb jecxz xchg je mov std push daa repz adc push mov sub popf iret pop dec jmp sbb xchg push repnz mov adc or or adc add mov mov das into push (bad) loop xor fisttpll data16 jne mul inc and in inc popl mov out jl shrb mov cli sub repnz shll mov lret loope or cmp into pop mov ss and out adc mov inc push cli stos mov sub rcll mov cmpsl push loop ret and push and lahf push lcall xchg xchg scas mov adc out add inc movsl cmpsb jae,pt pop push loop fnsave push call mov jbe repnz adc adc xor stos push mov mov jmp cli arpl mov xlat xchg sbb bound and (bad) lds cltd mov inc notb cmp fwait cwtl (bad) in pusha mov cmp mov mov jmp mov in outsb leave xor fptan out rcrb mov scas sub cmc jmp bound out jo add or push in xor and xor in cmp mov jg ficom ret inc popf lock shrb cmpsb inc rdpmc adc jb dec xchg scas mov lret cld dec test and xor mov dec testb add fcomps aad stc cwtl fs jmp fldenv daa or vmovddup mov mov push push sub mov pop mov cs or cmp (bad) add sub test dec adc pop test mov aam pop push add xor xor jp rcll jecxz cmp (bad) repnz lret ror sti mov push out cmpsb test pop hlt out mov in push xchg scas aaa int3 imul or test divl cld lds movsl das cmp stc cmp mov inc (bad) xlat xor add (bad) push pusha scas (bad) jmp dec push dec stc cltd insl dec frstor dec mov fcmovbe dec test clc pushf mov and lret sti das pop jnp scas cld scas push xor xor pop mov push mov mov push mov add fld insb add es lcall pop lret xchg movsl stos subb test sub lds cmpsb add or stos lds lcall fs loopne notl pop add loopne (bad) mov mov mov loopne test out push iret fnstenv (bad) cltd sarl jns mov xor mov gs add and sub sub imull shll inc fnstsw push pop xchg bound pop push add xor dec jne lds or (bad) xlat inc mov add call cmp add ret (bad) scas inc sub or cmp cmp idiv xor or mov test mov push mov adc iret mov (bad) aas push cmp dec in outsl jecxz jns imul dec ret lret testb or jl pop jmp jb call mov pop jg ljmp out mov pop fdivrl jae cmpsl lock out jge cmp test mov push pop in and inc dec repz sub jmp mov push les adc lret out cmp xor sub ja enter pop ds inc out testl arpl ds sub mov jle (bad) pop icebp mov jne rclb jecxz jle pop pop out pop cld lcall mov rcl mov sub dec pop jmp sarl test lods jnp loope out cmp jmp adc and xor inc loop imul mov sub (bad) orb mov out xor ljmp push aaa inc sub push xlat mov negb leave pop loop xor mov sub ffreep sub in stos int jp ds mov rorl sub ja add gs mov loopne xlat xchg mov jne ljmp sarb add stc xor dec divl jle push jl rorb les sub stc movsl imul cltd (bad) (bad) cmc inc xor and (bad) push in aad sahf cmpsb push add fcmove std icebp subl xchg jae and sub insb mov leave mulb repz push jmp mov push jmp icebp pop aam jnp mov out pop mov mov sub add (bad) sarb push push arpl xlat insb icebp pop ret xor sti jecxz das aaa xlat cwtl inc out mov mov sub xchg adc jmp add enter in test jmp notl add xor (bad) ret icebp (bad) xor sub (bad) and inc test int scas lcall xor fistpll lahf fisub add xor mov sub mov dec push jge loopne out bound cld inc push jle pop or ret jb push sti add int3 loope into ljmp (bad) rcr das fsts ds sub cmp add loop jmp xor sbb mov mov inc pushl push and rorl mov int3 cmp mov cmc gs add pushf sub dec mov jo dec pop mov repnz into xor adc jns out (bad) mov sbb xchg xor xor add lds (bad) dec push jge sub out pop jmp (bad) das jecxz push fs add mov repz pop mov fsubs (bad) mov inc or mov xchg clc jmp (bad) scas mov push outsl (bad) xor lods cld adc adc loope xor cmp gs jmp subb adc jecxz lret xchg add dec push enter mov cmp enter test in repz pop into cmp inc mov or push cmp adc jne out push outsl mov inc xchg or mov (bad) adcl mov gs (bad) aam in (bad) mov rcll xor inc out sbb scas bound pop ljmp push xor pop add fcmovne and out mov fimul (bad) mov por fistp test xchg xchg icebp push pop and ror mov sbb loope outsb lods mov add pop dec mov ljmp xchg add fistpll iret mov std adc mov mov outsb cmp xchg bound push shll mov lahf jno imul xor inc in cmp fcomip imull xchg adc sub pushf lea sub xor packssdw push dec jno not xchg mov (bad) sti iret mov add inc mov outsb in jge aam dec cltd adcl or into pop lahf flds mov jge add jp xor out mov or out pop leave stos sub cmp pop xor or xchg lds (bad) mov inc (bad) jmp sub jp fdivrl jecxz sub lock (bad) fcoms in das sub out scas adc aaa mov loopne out in loopne into cltd mov into mov ret stos mov aam call dec stos test fisttpl xchg lods pop ret or leavew repnz xchg jl jmp mov (bad) jne cs jp insb jmp (bad) mov out mov mov pop mov sti fucomp aas gs (bad) xchg mov das call sub or (bad) (bad) jae push add xor push (bad) int inc lods mov in or insb fisttpl push aam (bad) sub mov aam inc xchg inc jo (bad) pop dec icebp and ret add xchg dec mov and and add into xor mov test and idivl jmp ja ret jecxz cs scas jne mov pop dec rcrb je (bad) mov jnp sbb sub aad lock sub pop (bad) xrelease adc lahf in (bad) cwtl loopne lret roll mov and cltd mov loop mov test xor sub movsb mov (bad) or or push in loope ret daa clc sub add out inc or mov pop mov out lahf icebp repnz add dec sarb (bad) sub ds (bad) mov jl out sub or sub lret dec outsb mov mov popf jo push pop ss call cmp les shr (bad) repz stos lret enter das xlat leave xor stos dec (bad) mov lods popf (bad) lret sbb sbb imul bnd jno dec lds and cmp (bad) jmp sub pop add mov mov xchg jbe jae or ja popf lock mov xchg repnz bound lret ficoml adc add add iret popa mov movsl pop add jge das adc out pop and pop jae xchg into sti cmp add shll mov imulb xchg aam stos mov (bad) icebp ds je iret shr pop fisubl mov cmp aas lods inc pop stos sub mov xor xlat data16 pusha lret call repz mov cmp lea pop and xor fxtract xor mov lret ret pop and cli jae lea mov lret (bad) aaa lea sub cmp lret loopne not push or and lret mov clc loopne in mov mov jl in or xor pop xor pop out add or push fcmove push fld movsl jge,pt leave div xchg je leave lcall add andb xor (bad) mov sahf shlb (bad) scas push bsr dec stc loopne ret push sub inc xchg (bad) mov (bad) jmp mov icebp pushl and mov insb and (bad) sarl add pop dec mov or add push sbb sbb inc jo orb sti div xchg mov das je jno cmp jle xchg sbb xor mov insl adc out (bad) push repnz and xchg jle (bad) jmp pop cltd in lock cmp inc sub (bad) ftst ret push mov pop (bad) in pushf inc js dec sarl sub out xchg jne gs cld adc xchg mov and or dec in xchg inc out mov mov pop pop mov mov int3 and leave sub fsts rcrb mov xor (bad) (bad) push sbb std xor orb mov les cmp scas sub cmp fcoml lret mov in cmpsl in cmp repnz mov and es mov sub or jne stos into mov mov rcll aam pop shl cmp (bad) cmp jnp sub mov mov repz ds and stc repz adc cmp jmp stc mov sub adc lea jmp into xchg pop pop xor cld cmp divl cmc stc mov or jne jp andb loopne xor mov pop xchg sbb sub sub jg mulb and iret fldcw fsubrs std push mov pop repnz sub rorb adc or repnz xchg fsubrl imul mul scas hlt (bad) gs lods test mov or pushf rclb movsb mov insl sub cwtl cmp mov dec stos push mov jge stc pop iret cmpsl insb dec pop shrb sub push cmc mov xor (bad) inc enter add stos cld mov jmp jmp notb xchg or cltd xlat ret push repnz and and xlat or mov cltd dec sbb pop (bad) rcl add pop (bad) sub mov sahf adc adc cld adc mov mov aas lock ret sub ret (bad) sub mov aam dec je lock mov mulb mov lods cmp imul mov imul fisubr in jecxz dec sbb jno out mov leave outsb hlt mov push (bad) sub in or fnstsw arpl push push dec push (bad) enter xchg scas xor push xchg jb (bad) add stc xor sub iret loope sub cli data16 cs mov pusha cs scas xchg mov or cs and les cmp and test inc push xlat mov sahf popa adc ret ljmp idivl xor repnz call mov fdivs mov xchg add xor out test stc insb mov (bad) dec pop jo and jmp add icebp pop sub pop shr cmp pop je or arpl dec dec lods out fcmovnbe call xchg pop xlat dec sbb sub sub mov outsb je jecxz add aam mov mov popa aaa adc push or mov ret mov inc out imull enter pop stc mov or push jp leave pop add (bad) sbb out mov cmpsl sbb or or movb push idiv push mov sarl push add outsb repnz and sti mov push mov sahf cmp shl idiv repnz mov loop mov notb loope mov movsb dec (bad) aad imul jae mov imul dec dec or adc aad mov inc leave std and test xor ret movsb movsb mov push adc xor (bad) das push add and mov pop xor dec xor cmp test and shlb add adc enter adc mov sbb shrb mov fs or mov dec fs sub pop or inc add add push and shrl scas test test jbe or les push mov repnz decb gs push and sbb fsubrl dec icebp dec test inc test dec shrb mov cmp outsb sub repnz cmp fs subl nop repnz sbbb pop (bad) mov scas inc popa test add test xchg dec lret cmp sub (bad) bound cli pop pop sub dec dec and cmp pop test cmp or sub es or inc push les shrl loope repz ffreep repnz ret scas adc daa mov push dec mov movsl mov mov jns xor sbb adc leave fs out aam push shr or lock xor cmp cwtl aaa cld iret push or pusha pop leave sbb and outsl dec or in cs adc mov test adc sub (bad) mov (bad) out lret mov inc mov pop cmp sti out dec fs lahf sub mov loop cmp int3 xchg icebp ficom bnd rcrl push inc aaa ficoml cmc add movl sahf dec in dec fisubr mov inc dec or push dec lcall in lahf icebp cs loop fadds xchg mov adc daa call shll cltd push stc adc out or pop xor cli inc imul pop mov rcll leave data16 xchg jl jae into or je adc pop and ljmp mov dec dec fstl icebp imul jns ja scas out dec test aam sub jnp push aam pop pop (bad) push jnp inc lret and fldt add inc xor repnz fcmovb sbb dec loope mov ljmp insb push icebp jae stc xor sub sub cltd imul add addl sub leave (bad) jo or jmp repnz add and cwtl out sub fcomps xor pop push mov jmp jp (bad) and push jae,pn xchg xchg lret lods xchg test and sahf insb jmp repnz out inc xchg dec pop add xor pop and mov pop lods xchg test mov add push gs add adc jecxz cmp pop clc outsl icebp jmp mov mov aad ret jns cmp jmp mov outsl lahf out dec (bad) mov scas les jmp jns scas push sub or notb mov mov jge stos popa mov or mov out popf inc mov push sarl frstor daa pop in lsl mov or push inc scas jb xchg cld ret in pop and scas lret push dec mov dec add cmp cltd mov decl adc mov popf shll scas dec faddp xchg mov les je lods cmpsl sarb int sub inc and call jmp sti (bad) sub outsb shrl into fdivs pushf test movsb clc (bad) jmp ficoml push das into (bad) loop loop jge das daa add cld fsubr and mov mov into xchg out lret inc pop mov (bad) aad and into ljmp pop gs cmpsl push (bad) and aaa repz jecxz add testb mov into xchg fnsave and jne adc xchg jp fldenv push pushf das mov mov add xor test (bad) cltd mov movb cwtl (bad) dec and ljmp (bad) mov lds and xchg in xchg hlt mov out add sub cmp xchg pop jae mov pop lock int pop dec inc xor inc scas push jnp pop add clc mov mov sub pop mov imul adc xor pop das mov ja cmp xchg mov insl in jae push dec mov push shrl fisub xchg jbe xor jecxz and shrb mov jae mov dec (bad) sbb test xchg dec xor mov sbbb pop or jbe sub jns test lcall sub xchg (bad) lods add scas pop mov or (bad) xor sti cmp mov enter push push mov dec rorl (bad) mov sahf adc xchg push test pop cmp les rorl gs lods jbe fldcw jg imul lret cli popf stos insb lds adc cmp ljmp xchg sbb jnp push decb daa pop and clc add dec fbld xchg jmp lcall dec loop vorps lcall xchg jecxz cmp and ret mov add scas adc (bad) addr16 fiaddl xor popf pop insb pushf test incb xchg push jg in and insb dec xchg jl lret jge ja das out sub clc sub adc shl (bad) daa pop mov mov sbb mov in imul pop in pop ret imul loopne gs pop loope cmp sbb add sarb mov cmp mov jnp dec add bound mov xchg jmp scas fist ds and mov dec loop pop adc movsb or mov cli xor sub add (bad) pop add add sub jl (bad) jo dec fucomip add xchg stos jae divl ret pop sub cmp into xor js dec loope mov andb xchg stos mov sahf loopne adc scas int3 sub sub sbbl lret inc pop mov pop les mov cmpsb nop mov mov xchg xor aas push adc or (bad) ja jge (bad) or out lds pop das int decl pop or (bad) xchg push dec add mov fldcw rcr ret sub inc inc insl aaa mov sbb cli cmp test lahf pop inc out daa jmp or test lret pop jbe xchg jae aas push and adc sub stos bound in ficompl iret mov aad dec dec dec ds jmp ljmp mov (bad) imul mov popf cwtl out lret popf (bad) xchg push dec repnz cmp outsb lock adc scas or in dec jge gs pop dec jbe xchg push fcmovnb mov imul dec push add pop daa pop adc insb cmp mov test negb mov push leave jecxz jge sbb aas (bad) push sbb cli (bad) sbb (bad) int3 fs out scas sub mov xor cmp xchg insb imul fld push ror imul jmp (bad) or push xchg sub push clc mov fistpll (bad) repnz pop pop lods shrl push and shrb add imulb mov out lahf adc adc add scas movsl jbe lods pop rorb sub xor adcb push mov pop sub ds fimull out and push cmp in stos mov pop mov adc cld inc std sub push insb xor popf jbe pop pop les imul push movb loopne (bad) fnstsw mov out inc or sub loopne add cmc jge pop mov add mov jns adc jecxz loop and push pop pop pop lret and mull dec push push jp pop jb ret xchg xor xor lret mul inc or dec cli (bad) hlt inc sub je mov and into negl xchg xchg ffreep pop movsb push or rcl sahf and sub or lcall test xchg mov ret shr movsb cmp sbb lahf imul mov cs in call out (bad) clc into push fcomps repz fisttp cli sbb xchg clc mov lahf insl xchg daa jg push add icebp sti imul icebp adc dec xor or test inc mov cs mov sbb in xor (bad) int3 ja xlat call or push cltd sub jle (bad) out lods (bad) mov xor in mov push pop mov das add repz add pusha xchg bound mov bnd inc bound divps pusha or mov popf inc ja mov pop or lret stos enter imull (bad) fld (bad) std push mov adc sub js inc and adc xor jmp inc mov xchg add outsl cwtl lahf fsubs pop je push xlat push push lods xlat xchg clc mov movl xchg cmp pop dec mov inc js loope sub addr16 (bad) push loop add adc mov inc mov pop mov or sahf pop (bad) subb insb out cwtl or into xchg pop and in jne mov hlt aam test mov and adc or jle adc jae xor scas test (bad) mov jmp mov cmp (bad) (bad) loop mov xlat push jb ljmp and mov mov jbe push jns sub xor cltd cmp xorb repz and lods in mov xchg jae aaa lods push xor push stos repnz xchg int3 cmc into das mov aad adc fs mov loope cs sbb scas xlat das xchg sbb (bad) mov (bad) ljmp out dec jecxz dec ljmp shrb mov (bad) xor js adc jp lahf leave xor in or shlb icebp pop (bad) xor stos mov add mov push andl or add push ljmp lds push or cld push dec (bad) sti lret stos and or notb inc xor xor xor or stc sub call shlb xchg cmp dec aaa outsl jecxz cmp adc pop loop xchg mov fcompl pop xchg scas xor dec iret add hlt push stos sub mov pop mov daa jle ret vcvtss2si cltd jl loope cmp stc pop or int3 hlt mov mov mov or lret icebp xchg adc rcrl adc mov pop mov popa jmp out hlt inc jno inc sbb sbb pop fcoms rol icebp rcrb popf push adc xchg popa test arpl pop inc sbb add fxch xor sub hlt (bad) xchg ljmp (bad) cltd cmpsl idivb int3 adc dec rcl sub jae xor xor and push fucomip int3 xchg lea jmp adc sub dec sub gs or inc (bad) mov pop or dec mov xor jmp mov cltd push test ret add aam insl xchg xor (bad) aad push stos xchg stos mov sub ret in push iret mov fnsave dec dec mov sbb movsb mov xor or sub mov sbb clc mov notl movb add add pop sar jo push adc enter das mov push push jmp dec or add mov sahf lods pop and rolb or pop and pop lret popa insb sbb mov (bad) (bad) notl lahf push push insl lods sar inc (bad) fs or fcmove sbb in fnsave mov xor xor std (bad) jns mov push mov movsl call mov jmp rclb inc inc xchg repnz dec icebp fsubrl repnz mov inc imul sub popa pop (bad) dec cli pop mov inc push (bad) call int3 xchg iret xchg push and cltd mov add xor cli adc cs inc xor test movsl out ja fs cmp iret mov and fidivrl and gs mov sub pop lods (bad) and xlat sub cs inc mov pop pop lret in adc ljmp xchg add jp andl loop pop or mov jne push mov cli mov dec es push mov push jae mov cltd arpl ds inc sub push xchg push sti jle call in jne cwtl ss and imul mov and mov jge test or call stc mov xlat pop sbb pop test xlat and test bound push jo xor or movsl repz (bad) jmp das test (bad) xchg mov test (bad) negl lods (bad) gs nop dec dec xchg inc jmp mov repnz jecxz movsl xchg mov mov (bad) or adc dec jp xor out push adc pop inc push dec sub orl mov fcoml hlt mov fucomi adc fwait adc sub movsb stos or mov out lock cmpsb loopne inc lahf adc mov xchg sti addl in mov mov xor dec pop pop mov xor jb xchg pop pop xchg stos mov and and lock (bad) aad call enter cmp test icebp add bound xchg jo add inc out push cmpsl fimul test jno dec cmp adc stc cmp shlb push mov mov out test pop movsb push pop std dec adc mov test enter inc loop add sbb (bad) (bad) lret fs into cwtl (bad) cltd sarb pop mov jp push dec scas ret aad insb pop shlb xor push pop int sub mov scas fs mov dec jo notl mov fstl mov jno mov rol cli mov or mul ret cmc push (bad) pop (bad) mov imul dec push adc sbb clc sub dec lock xor je or mov adc (bad) and add rol outsb jo jns inc push stc add stos adc scas mov push out imul loope and sti shlb arpl push and adc and cwtl clc add xor loope pop pop lret cs popa lods aas clc jb ljmp inc dec test shrb cmpsl pop out or ja push inc int sub aam in lret imul leave cmc sub out lcall int3 xchg into (bad) int ljmp into (bad) out lret lock jo mov xchg iret je or dec push mov icebp adc (bad) pusha mov loop xor shrl stos bound (bad) enter cmpsl js pop iret lahf addr16 mov imul push insb imul ljmp (bad) sub mov movzbl leave (bad) cmp xor call mov movl (bad) xchg or push push xor pop mov xchg lods cltd add (bad) mov data16 pop lods jp xchg std push xor cltd (bad) in pop (bad) sub sub dec icebp jmp sub repnz sub and add (bad) out and (bad) jb (bad) lret pop mov popa notb scas sub daa nop out imul gs adc jmp jmp lods dec mov dec (bad) dec mov cs aad notl inc jl mov sub jb,pt rolb xor es pop mov mov ret or inc pop mov inc int3 push (bad) sbb push (bad) pop or or xor jb pop jl loop aaa fistp dec fstl mov xorb pop pop push xchg xlat xor jne xchg movsl cwtl fadd lret adc adc lds add add push into sub testl enter jge cmc sbb lahf push xor stc shrd or clc add test mov call (bad) das push lret mov adc fild decl iret into pop cmp inc inc jge test mov push lret fiadd sub xor repnz xchg or jg (bad) std or fldcw sub sub push jnp movsl lds mov les push flds scas xchg adc xor fnstsw and js dec cld aaa in xor add jg movsl add push sub (bad) fimull xor xor fwait push adc ret les pop mov jge fisttpl add insb adc sti push out das pop mov rol adc xlat lods pop lock inc mov sbbl sbb jmp sub mov jns jbe pop das pop daa daa cmp sub jo xchg fsubrs fisttpll xor sub or cld std sub test dec mov xchg icebp das out jg and sbb xlat in cmpsl sti inc sbb es pop sub mov call cmpsl (bad) test pushl mov adc daa mov mulb (bad) push cltd push push ret inc and les scas and pop shr insl lcall cmp xlat sti pusha add and cli mov xor or or mov sub out cltd or sbb (bad) xor lods and sub stos or mov incb outsb pop mov shrb leave arpl leave dec fidivl lret mov scas sub jne lods popf test add ljmp (bad) in push (bad) mov div adc add mov ficompl add (bad) bound xlat fcomps icebp lret cwtl bnd sub mov add push movsl imul mov add cmpsb loope es fs repz sub sarl dec pushf dec sub and sub flds mov mov pop push pop les test idivl sahf or (bad) (bad) aam sub mov pop pop data16 xchg dec xor sub or mov add sub (bad) (bad) and jmp add movb or repz xlat div xchg leave rcr inc mov inc and or add mov mov push shlb pop cmp repnz mov gs xchg lret push jmp mov dec sub xor jb (bad) pop gs add fidivr inc aas scas push fmul arpl insl fiaddl mov mull (bad) aad and test out or rcr sub adc xchg das (bad) aad adc cmpsl (bad) pop stc imul (bad) xor mov cmp cmp fs imull add xlat and mov jg (bad) (bad) sbb or pop mov mov scas jg (bad) icebp out icebp push dec leave idivb (bad) (bad) jecxz pop xchg into add in aad add and rep std cmp add or fldl idiv mov add xchg mov addr16 fidivl sub es pop clc sub cltd (bad) push xchg loop xchg push sbb negl push lods jb mov outsb sub sti push jae clc push (bad) mov or or out jns imul adc shr sahf leave mov repz mov (bad) jecxz das mov xor movsl rclb sbb scas xchg mov xchg shlb aad mov ret adc or inc fwait and add xor fdiv mov jnp fcmovnu cmp jo idivl add add add int or sub pop icebp cmp out into iret add mov sub adc add cmp fimul push int3 push mov cs sub add mov cmp imul aas mov mov (bad) jns into jmp shlb pop cmc inc in inc or adc jecxz out movsb sahf jp pop mov and lret test enter ja ret pop into or shrb movb sub or mov ljmp add aad sub or jp cltd movsl xchg clc xor jge mov mov and subb and dec adc mov xor mov cmp sub pop orl arpl lret bound mov mov subl outsl dec stos aam sti sub mov xchg pusha cs pop fisubl xlat jae and or (bad) jmp inc xor sub add mov ds repz shr negb jmp repnz mov jge xchg cli adc sti repnz pop cmc mov in mov loopne loope cmp (bad) call mov push jg add mov (bad) push push repz mov ret push test mov inc xchg dec ljmp dec sti sub je leave inc push aad sbb and scas ss pusha das lret or fistl mov out popa popf add cmp daa lds push out out mov or adc fs and pushf mov (bad) and cli jecxz xchg jne in leave ror bnd mov fnstcw xor push jnp mov sbb out push sub xchg andl xchg xor iret ja iret inc push ja and cmp das ljmp rorl xor leave sbb dec cld stc xchg inc gs push push xor mov inc inc mov xor jmp popa sub sub adc cwtl test or loope cmp xchg push into mov sub mov and popf (bad) cld push sub sub or mov add sub pop push sbb mov push inc push push fcomps mov fist lahf push adc or xchg push out xor xchg jne and fs leave or pushf xchg push xor (bad) dec dec mov insb cs cmpsb xlat xchg jl mov push test pusha add jmp sub adc orl cmp jmp mov mov push shrl sub cmpsl out std pop sub and cmp das xor push inc add mov sub mov add (bad) xor fcomp out loope (bad) in lods in xor enter push test dec mov rcrl je ret std icebp ror popa decb mov sbb es mov push pop mov pop mov pop inc jmp (bad) cli lea cmp ljmp test imul out test imul cli xchg or insb mov xor iret and ds jmp pop mov aad (bad) pop test mov dec sbb mov mov dec std sub pop ret loop jne test shl out pop ret cld jmp or cs and xchg ret in sbb lret add jno jmp repnz decb shrl fsubrp pusha or in xchg pop inc sub jge pop xchg sub push das leave jno or push inc loop inc sub and clc sub xchg inc mov clc lret xor push test popf int3 movsb and add jmp imul jne lahf lods sarb idivl adc sub pop imulb (bad) hlt inc sub fdiv add lahf ficom dec leave xor mov jge loopne out xchg (bad) ja aas sub sub xchg fdivrp mov ret rcll ljmp mov mov (bad) int adc idivb cmp mov push ret jns dec (bad) cli pushf sbb sub mov daa pop movl push dec adc test adc push or arpl fsubl push and mov (bad) sub out add rcll mov cmp ret pushf fdivl mov test das xor mov mov xchg and cwtl cmp lcall jge fs popf nop aas xor mov jns and xor sti add jecxz adcl cld sti xchg ficom sub mov aad enter jo mov popf pop leave imul dec xchg ret stos mov pop and lods or ret mov dec cmp and or out pop ret pop jcxz mov bnd negl push sbb xchg aaa and mov fst stc push mov add push mov or pushl mov (bad) sub or (bad) mov mov add push inc in push mov adc or and xor add call nop fyl2x imul insb das shl cwtl add cwtl or mov mov call imul out jg out mov orb fs je inc loop pop movsb mov stos test idivb lahf xchg rcrl shrb mov inc subb mov (bad) jge addr16 das sti sub xor ljmp adc add jnp pop sar pop shlb rcl pop xor xchg pop outsb add sub stos lods adc repz and xorb sub or and sbb call mov sysexit push pop imul das ljmp add lret sub mov fistpll daa inc pushf dec sti bound pop pop xor adc ss jmp fwait ds xor cli adc mov jl cwtl outsl and pop mov jmp sub pop sub lea xchg sub xor je and sub xor fistp push sbb sbb int3 out sti imulb sub js adc sub arpl pop gs pushl inc fdivrs cmp mov push inc hlt and xchg adc out in push mov (bad) sahf xchg gs pop push mov (bad) xchg cmc adc mov das inc jle movsb mov imul fxch les mov pusha add xchg pop jnp jl in daa out xchg jmp lcall loop fucom pop movsl test out mov add js pop imul gs push push lea and ljmp in or sub adc or jne and jne out daa jne or shrl mov lahf push cs sti mov lcall lds popf das sub sbb (bad) insl jge cmovo add mov leave sbb fnstenv out and idivl mov sub repnz out inc cltd aas cmpsl rorb dec adc xor mov mov imul push dec imull jle bound (bad) addr16 jmp cmp ljmp and jp in mov out movsb ljmp and stc push (bad) mov addr16 addr16 dec ljmp xlat data16 pop popf push cltd pop pop jno sahf add jne dec adc mov cmpsl add mov popa xchg add popf or or ljmp mov popf hlt imull sti repnz stos pop mov jmp aam es cltd cmpsb cmp sub stos pop (bad) out or xor cli mov xor mov rcl std mov push fdivl lea loopne in mov call inc pop sub mov sub pop imul sub sub ljmp and cmp adc inc push xor outsb pop mov pop scas mov push leave aad sahf jmp cltd xchg mov mov popf je jmp jno movb adc cs and and arpl insl sub (bad) jg inc adc (bad) aas jl adc cmpsb inc dec mov adc ljmp call fsubrs sbb cmp pop or mov cs data16 cld imul push lret idivl imul test mov push sbb lcall jl jmp and clc jns cmp mov xor stos repz int3 nop jae or icebp pop xchg and stc mov jno or out xchg stos xor sbb xlat xchg sarl and mov (bad) lcall fistp jge jecxz outsb jae icebp je mov or or pop and out mov and pop sub inc and adc repnz test leave test add ret test sbb dec nop rorb pop xor (bad) jno mov out cmp inc ret mov mov shl or and push je inc mov or lret popf push mov dec psllq sbb xor xchg jl dec jne sbb xor or dec jno repz add pop adc add jl mov jmp dec adc jmp jp xchg add divl add adc xor mov mov dec aaa ja divb pop nop lcall popf jge icebp adc push sub jg (bad) xorb mov jmp mov sahf push scas cmp mov int sub movsl in push cmp push dec adc xor dec (bad) jl sub int popl insb roll mov cmpsl popa (bad) idivb or xchg pop dec push push fs xchg in and movsl fdivs (bad) xor (bad) cld push xchg sub rcrb es mov lcall sbb and xchg lds adc cmpsb dec mov and bound push int3 jbe add (bad) inc es xor xchg cvtdq2ps jmp gs out sub and pop popw or jmp push loop hlt or xor adc (bad) jns aas loope cmp add adc sub in sti and push mov lds jne cmp ret xor sarb mov mov loop inc je push mov push pushf xchg xchg mov mov jge cmp xor or rcl xchg gs pop aaa gs nop aad jle nop adc sbb out (bad) inc dec add out jecxz or sub gs mov lcall xor inc mov movzbl mov test call shlb xor xor or leave divl xchg pop push or sub mov fstps (bad) (bad) sub xchg (bad) jb out push xor mov shrb fnstcw adc xor sub mov aam jg xchg stos dec add js stos add aad lods aad loope repz push cltd jp dec jno mov movsb xchg sub push jge loope mov and icebp out or mov movsl test movsl rcrl daa add fadds lret dec push mov add mov mov adc jnp test or dec fmuls jo adc xor xchg and or fnstcw push mov jmp repnz adc decb mov xor push (bad) xlat repnz push into push icebp push rcl dec jb or cmp pop iret stos cmp jnp,pn shrb js leave mov (bad) mov mov lds pop cli repnz jns pop jmp dec outsl add dec adc rorl imul mov (bad) stos bound outsb cwtl sub mov aam jmp or lods xchg mov cli push loope loop mov pop xlat daa sbb xchg iret cmp sub pop popa add mov ss notl mov pop leave xor lret in test dec and sub jl lds shl test inc sub jle push pop loope pop cmp ljmp out jb shll and mul lret loop (bad) mov add scas idivb xor and loope stc sub add sub orl mov (bad) sti fs cmc sbb mov xor fstp cmp shll mov mov push ret shl ret push hlt inc push cld mov dec pop ret push adc lods dec lahf jbe imul loope dec xor pop cmpsl xchg pushf mov lahf push sti and rdmsr scas ds aaa cmpsl jg ret sbb ret mov and dec add sub adc subb push push js rcll push dec je (bad) test (bad) repz lret xchg ljmp or pop mov pop out jg sbb mov fistpll lods jmp orb xchg mov jnp push mov or adc call jl or icebp and sub sbb ret pop jne push imul jns dec ja push xchg repnz ss fucom adc xlat cmpsb xor sub test jg mov pop pop scas imul cmp fidivl push push or jp cmp out std xchg sub jne sbb mov mov jmp shrb ja sub in out ficompl aas out sub bound lods test popf out das or adc xor popf fistpll push lret je push das dec sub pushl inc lock sub mov adc movsl mov mov lds pop xor and mov mov decb cltd pop xchg ret lock fs jmp sub pusha fidivl xchg pop out outsb mov sub sub je and fdivr push mov imul and es ja test push mov stos pop in repz mulb sub fdiv sub inc inc gs test xor stos adc or cmpsl aam (bad) or inc dec loopne shrl pushf and movsb mov pop sub andl mov fcom js insl xor aaa mov xor cmp sub cmc out js fisttp add sbb sbb mov fisub jmp adcb xchg dec je shrb fcom mov or pop add loopne test pop and popf pop push jmp andb cs (bad) or (bad) ljmp out fstpt jp xchg cmp repz imul dec js lock adc pushf mov mov mov xor out outsb clc cmp lds or into ret pushl loop jns movsl fldl fcoml loopne jae xchg (bad) pushf mov push rorb and cmp out loopne hlt aas mov sub add jl dec cld ret icebp dec rorb roll shll lcall cli das sub ja js jae xchg add (bad) (bad) sub xchg xchg mov inc idivl inc pop or inc mov jnp xor or dec mov fldl ret or mov dec push dec cmp sub jbe ficoml sbb dec dec mov pop shrb mov inc mov ljmp xor mov dec mov xor pop or push hlt dec and sbb mov cmp icebp test repnz mov mov call or cmp loop repz ss mov mov pop inc pop leave dec mov icebp fdivrs add mov xor out mov pop ljmp add sbb inc sbb les jmp push and push rcll loop dec push adc fisttp popf push xor inc add xchg mov pop add and inc sbb dec lods or sbb or xor mov shrl loop mov inc xor mov jl cmp push test or mov inc cli ffree jns (bad) sub dec punpcklbw mov sbb or mov fcomps repz mov xor jo imul mov mov call cmp test fwait jg cmp outsb mov mov out addr16 sub fwait daa sti dec sub pushf push out imul and cmp push das xchg add insb movsl stos cmpsb add sbb pop test aas or loopne adc out dec rcr jge ret insb movsb mov dec call mov pushf lock xchg push adc lahf repnz rcr repnz rcrl pop pop ret lds and or push into (bad) pop cmp lret push sub push hlt aaa jae mov jg aaa adc adc leave adc push xchg (bad) mov call sub mov cmpsb imul sub mov stc pop cmpsb or cmp (bad) shrb rcrb push cwtl test xchg sbb jbe push (bad) aad pop lea iret aam mov shrl pop mov outsb adc xchg aam xchg or fistp lea push adc loope or std cmp add mov (bad) cmp mov ret ds pusha loope sub cmp ret sti lret sub push push out xchg or xlat mov xor dec jmp jne cmp xchg mov lret (bad) aaa or push addr16 mov xchg mov pop mov mov sub or mov add mov cld push pop lock fwait lahf or sbb mov negb loope add (bad) (bad) call cmp (bad) leave mov push call (bad) test sbb pop push push adc pop lds daa aam js imulb add jae dec lods vmread inc jle push cmc jno mov jmp imul nop loop pop pop add out xchg cltd dec pushl and jne outsb ss mov (bad) out adc or icebp mov stc scas test sub fimul into nop adc movsl fs imul mov mov cmp mov out out (bad) pushf xor xor mov outsl mov test inc in cmp (bad) mov mov mov push xchg ret mov sbb out leave aas sub cmpb ds xor add icebp fildll adc clc data16 add mov jmp xor pop pop fmul test pusha and mov lret push or nop sub push dec pop stos sbb inc aas aaa into imul xchg push jl add ret adc lods and lds fdivs adc push adc cmc and daa xlat or sti (bad) or push push sub add push add neg jmp ljmp repz test mov divl inc jb aam push jnp push dec iret fdivrp leave or cmc push lods and std ret inc sarb adc dec shrb push xor movsb sub or lds fcompl mov dec scas mov xor scas lahf dec jmp clc xchg pop push lcall fs leave out xlat pushf leave xchg (bad) pop push outsb call test sbb cli (bad) mov (bad) jb mov cli (bad) push scas fisttpl (bad) insb lds mulb xor mov out hlt cli adc mov xlat movsl add fisubr gs lods icebp sub mov dec and pop in daa jnp adc mov cmp adc shrl mov pop mov adc sbb in or pop mov bnd dec sub sub cmpsl ds stos test repnz orl aad loope ljmp jmp jl inc outsl xor out pop lcall (bad) notl jg add (bad) stos mov iret push or add mov mov xor fsub pop jge lods and mov data16 aaa dec jne or dec rcrb movswl mov dec or add pop cli fs pushf das add das mov mov daa leave rcll lret mov add jns xchg out mov sub jne dec pop cli mov inc xchg ss cmpsl pop sub leave pusha xchg and sub fmul lret fisubl xlat shr fyl2x jnp out mov adc and mov mov lret jp ss nop fldenv rcr lcall add pop lret add les add sub fdivrs repz jo pop xor jns inc and fwait mov pushf stos pop add inc push pop sub mov mov and adc sti cmpsl test mov imul cltd adc leave lock ret outsb xchg (bad) icebp pop and sub out fdivrs lret and rorl pushf dec out pop test iret out mov or dec pop and scas std mov add out mov xor mov dec repnz mov pop insl sub cmp notl aad mov push jnp stos mov mov or add js mov loope sbb push jl ret (bad) jb aam lods push adc dec mov mov and xor push je inc xor or adc enter xor mov or push adc mov and mov inc add mov fildll test push stc dec add dec sbb fsts arpl dec mov fcoml jmp push mov call push xor dec mov push shrl jp jmp aam and lret push imul push shrl jl imul fdivrs cmp sub cmp das lret mov lea push and push jmp test aas out pop test in aaa movsl (bad) rep and iret inc xchg lds ret push mov mov lea rorb adc stc mov mov es adc mov sub movsb dec push sti movl xchg cmp out imul ror fstcw into repz rcl mov js mov loop rcrl jo out mov xchg jmp movsl ljmp mov push call xor out cld mov gs sub push or add sub xor add jp ljmp stos cmp loop or mov out stos loope ret jl lret push data16 dec iret cli xor cld add mov jne inc test or scas mov dec divb dec clc pusha pop mov jno push mov mov fnstenv leave scas sub cmc sti imul repz loop pushl gs repz lret add in in dec mov adc sub xchg lods out xchg pop xor lret ds cli fcoms out (bad) fcmovb sub sub call aaa push mov jae lods ljmp addr16 pop push sub mov daa add lahf adc sub (bad) mov ja repnz and cbtw fist jl repnz ret outsl mov or mov test or pop dec out push out mov adc icebp dec dec (bad) outsb movsl fild nop sbb ret jnp cmpsl faddp leave jl and or adc pop mov or cmc inc rcll fcmovnbe xchg (bad) xor add xchg pop xchg imul push sbb out xchg notb lret aam insl and jno inc test push mov and mov outsb lds bound out push sub xchg cli mov cmpsl out cmp mov or out iret popf push xchg jmp out dec pop pop lea in lret mov repz nop xlat jl sub sub shl rclb nop rorl in cwtl lcall inc mov test mov xchg movsl cwtl fldl insl dec out pop cmp cmp mov shll cld (bad) push and xlat pop fsubr jnp dec mov jge cmp mov pushf sahf sti adc out js pop notb enter and push push xchg les sub mov rcll inc bound or push cmp (bad) pop bound xor dec push mov xlat or rclb lea cli mov arpl icebp mov in xchg cmpsl leave xlat out dec sarb xchg bound pop mov aam or push ret addb sub adc push sub push jp aad mov aam adc push or mov mov and sub mov ret jecxz sub mov popf mov pop mov dec sti mov push (bad) adc hlt or add xchg sbb and add ret sub mov add mov pop mov out ljmp ja mov lret pop pop pop sub and sbb sbb or dec dec xlat imul dec imul testl insb or ss or sbb (bad) outsl sti repz adc xor sub sbb sub xor sti test mov pop les stos mov jnp (bad) ljmp mov pop jo mov das pop test out mov mov sbb cltd lret mov mov mov fldcw jmp fwait out es add int shll push stos or mov rcr xchg cli push sbb cmpsl adc mov aam ljmp jmp std sti mov andb incl dec call pop sub or out fcomip es sbb dec xchg cld pop mov pushf ja gs jmp bound xchg pop add scas push fstps out dec stos ror leave pop fisubl loop xchg gs loopne jnp cmp (bad) addr16 push ds and ja add mov push out mov jo and les sub jmp sarl ljmp lahf push and imul sub stos leave xor mov sub inc (bad) adc ss xor hlt or mov iret inc mov (bad) adc repnz jge movsl pop adc (bad) adc lret stos pop inc movl mov jne inc (bad) popf mov pop (bad) pop andl (bad) jnp bnd pop ja int das mov jno movsl jns gs cmp leave inc jle push loop insb stos rcr (bad) mov dec jge scas xlat mov xor in imul daa xor stos repz mov sbb jo pop ret sub xor aaa arpl iret sbb push or cltd (bad) loope jg xchg pop sub push out lahf loopne or ljmp mov sub hlt jne add test push loop mov movb outsb mov sarl sub xor fimull push cli mov out jnp popa lock lret and sti xor ret push push ffree rcll daa jmp cltd mov inc and add pop or or jo clc mov xchg jle fs mov cs push das inc leave pop mov mov lret rcll push sbb (bad) sbb mov pop pop mov sbb outsl test push stos lods es call push (bad) lret imul sbb xchg or call mov fsubp imul mov mov leave mov je xor insb inc cwtl pop cmpsb cltd and dec leave imul ret das push int3 cld jmp stos xchg fldenv sub jne pusha in dec pop mov mov or mov and inc dec jecxz cwtl sbb add (bad) enter mov mov ja push aad push inc mov push cld mov jo loope dec pushf int add cmp xor and sub pop and dec (bad) mov jne (bad) loop dec loopne ss pop mov sub dec xchg sti cld jb adc mov repnz lret shrb push das push ret cld pop popa rorl and lahf inc cmp xchg dec sub push sub fdivrl and lea out inc cwtl sub fidiv push xlat lock jecxz dec add add jge loop ds mov iret imul notb in mov mov lahf hlt outsl out test cli mov or (bad) iret sarl xchg cli fcomps sub inc mov xchg test adc std or mov xor sub in cli cltd lock dec notl out orb dec dec rorl repz dec add xor outsb lods fcmovb and stos cmpsb bound mov xor jmp xchg stc aas mov shrb xchg mov add rorl and aad imulb fimul adc and sti pusha or leave pop bound fistp fildl xor jmp jl (bad) repz push pop and inc push mov pop sarb iret fnstenv call shl cmp stc add mov inc inc out mov inc xchg lods fwait movsb stos enter sbb pop nop xor iret cmp int outsl adc fcompl sub data16 mov xchg add out and mov addl mov xchg xlat imul pop jge cmc jmp ret pushf cmp xor mov pop and daa addr16 mov mov mov xor inc sub mov lods scas cmp adc pop lret mov popf mov roll jmp ror or add mov adc popf imul fidivr cmp test jmp sub (bad) xchg pop lods les sbb mov ds fs in mov dec mov cld and ljmp mov (bad) mov je push (bad) mov rorl or ret jl xor lds or scas cmpsl jg repnz pop stos adc adc (bad) popf jle mov out jb or dec lret jge test xchg push mov or cmp add pop push test jne cmpsb cmp mov icebp jmp iret adc adc lret clc pusha xchg out (bad) add pop jmp or adc std push xchg (bad) cwtl sub pop icebp ret pop (bad) and int xor jg dec mov aam into cmpsb cmp daa cli cwtl sbb pop dec and inc out loop and add pop into or sub xor mov mov dec (bad) mov sub mov cli aad sub testb mov push cltd add bound ja push in mov add mov add inc loopne test xor and dec stos cmp cmpsl cli xlat gs sub mov lods pop leave mov insw fdivrs sub sahf xor and lds leave cs int3 adc test fildl sbb int3 adc adc xor add bound mov mov inc (bad) cld dec mov in mov cli je scas int3 loopne xchg std sub or bound rclb mov scas add (bad) test rorl jbe insl out outsl hlt cmp in dec add loop out cmp cmp (bad) cld adc push push leave clc ljmp loope inc das mov push call mov lods lods mov fistp dec push dec and popa xor sub sub adc fnsave xchg push pop xor movsb adc (bad) idivl sti pop sub daa aas push inc push popf pop add sub movl repz stc push outsb imul aad adc das and stos mov xor cmpsb push shll mov ljmp cmp loope add push lods mov aaa je jmp dec fildll push mov cs mov repnz push repz dec cmpsl cwtl test inc mov scas int lea sahf jp insb std mov fbld fmull xchg mov data16 xchg add arpl and mov add mov add xchg sar (bad) cli pushf sahf popf cmp mov sub sub mov push aad lahf rol xor cmc out std out mov testb dec leave inc inc add push pushf std mov lock cwtl mov cltd outsb adc cmp or and xor and dec movsb stos push test movsb mov pop ret aad test pusha push and mov clc inc (bad) xor fdiv and jg stos dec adc stos repnz test mov enter mov pop push (bad) icebp in cmp pop mov push xchg popa nop jp xchg das jecxz adc xchg mov out iret daa add pop dec and mov adc push mov enter negl lds dec lret sub mov not adc or fldcw push popa lret into outsl lret pop imul mov (bad) aam ljmp dec jl inc sub dec cmp dec mov and or pop push sub mov jle (bad) rolb or push sub fldenv pop int3 das divb mov jmp movsb mov and out pop ret mov cmp and (bad) fiaddl xchg rol ljmp mov add shr cmc rcll sahf add or sub outsb bound jne inc scas or mov mov adc stc mov xor out add into sub mov call mov push lret push cmp ljmp pop xor out pop in imul pop xchg sbb ljmp fcoms cld jmp cmp pusha adc push stc adc pushf in add adc xor adc mov sbb mov inc xor lahf js dec (bad) mov mov sub out jecxz (bad) sar dec or pop cmovnp aam push inc in fidivr daa fidivrl dec or int3 mov lea adc dec into js movb je and in lds js fs jp or hlt mov xlat (bad) aam sbb xchg js test lret mov cmp mov xlat in mov fstpl gs xor adc loop cmc ds jp mov adc pop jl leave xor sbb and lret xchg test aas lahf inc rorl fldt sbb cmc adc faddl xchg fldl2t imul (bad) mov jecxz mov add pop mov mov stos in pop mov mov (bad) mov dec xchg daa repnz lds push nop (bad) sbb dec into mov adc or xchg push fist xchg fist and pop add xor mov clc pop ds jnp xor das add dec repz lock jae sbb (bad) imul jno xor jecxz out jae xchg insb add lret add jne jp faddl or out cwtl ret jbe test ret xor add fmuls mov clc jo mov xchg and loop cmp push dec shr hlt sub inc leave test pop ret test (bad) mov das mov xlat (bad) mov stos notb adc subb cmpsl jp pop fstl les test stc pop mov pop mov dec jg popf pop add aad shr pop in scas imul pop imul bound ds mov xchg outsl xchg inc inc orl push jnp arpl leave push enter add insb add dec into sahf or sub in and cmp add data16 daa into jge push clc out xchg or add outsb pop pop insb jmp xchg xor dec jmp xor fldcw idivb pop mov jp add push popa jmp pop shll out daa fstpl pop fist aaa mov and inc test add aaa xchg cld mov cmpsl lds lahf push movsb jb sub imul push idivl xchg add pop jmp and xchg std push jne lock test mov stc inc add xchg daa mov xchg repnz sub pop add xchg adc xchg mov pminsw pop mov sbb cmp xor add add xor lahf sub dec add fwait enter sbb add out xor movsl clc cld jge push sub sub jge xor mov pop pop sar add sub scas or push leave pop sub xchg idivl (bad) test xor jecxz push dec cli sub pusha xchg add fldln2 or cmp xor add jmp xchg scas fs enter fdivrs mov in pop xor sub sub idivl in stos adc clc fcoms rorl add push insb daa cwtl push ret cwtl push imulb xlat push push fisubl jg dec cmpsb cmpsb mov mov fidivrl pop sbb adc cmp test rcr pop daa or or jne,pt std fbstp or push mov jge (bad) mov mov or xchg mov inc sti (bad) rorl ja rorb or mov out mov push sarb jnp daa jnp (bad) push lret ret call jmp and lea sub sub outsl adc dec push jp cmc xor add xchg fisttpl mov mov dec xchg xlat sti or mov dec scas gs adc mov dec ljmp adc idivb out pushl call sub pop push mull sub scas mov and movsl lods (bad) sub pop xchg incl push jbe insl in cmp call or add stc dec sub icebp bound xlat in iret cmp push js (bad) loope pop mov test adc lods push inc push cmc push ja dec push in push xchg mov push pop mov shr mov add loope sub mov mov adc pop pop mov add cmpsl test in andb cmpsb dec sbb incb pop mov mov add add sub (bad) repnz cld sbb mov into les out or and xchg shl mov pop call repnz add push push push fmull xor mov mov jmp scas sub fs xor or (bad) or out gs das fnsave mov or pop pop into push xchg xchg (bad) mov xchg mov push pop sub outsb leave fnstcw add sub call lock fisubl push rcl xchg out mov xchg jmp cmc inc pop add inc dec xchg add in (bad) nop movsb pop mov xchg push fisttp and adc and test das inc add mov xor aam fcompl stos jl mov dec push mov push notl mov or sub xor clc push leave in nop pop clc cmc mov mov mov fimull test das scas sub notl leave mov adc inc out pop enter jecxz rcll inc repz aam add xchg xchg sahf mov mov jno divl and xor push sbb sub fcom fistl loope push xchg and add sub pop cmpsb push pop lods dec ficom repnz out pop sub or mov std dec mov ljmp mov inc (bad) push pushf in mov xchg fwait ja iret dec xor rcll imul mov mov inc or mov rorb lret push dec cld push loop cltd or and or mov icebp xchg (bad) pcmpgtw (bad) push sub stos or pop cmpsl imul enter dec es cwtl mov pop lcall jae jle clc xor sub xchg mov jmp xchg or mov fimul int mov mov push adc imull lods mov add or fstpt mov dec and push aam dec cmpsl add xor sub ret inc xchg inc add add (bad) xor mov roll lods cwtl dec add dec fisub cld mov (bad) movsl ficoml inc (bad) mov mov sar mov pop adc jnp shl aas stc inc sarb cmp cmp sub add out jne stos ret stc int3 imul sub or xor jo daa or shlb (bad) pop xor mov sub xor (bad) or in inc dec out lret push pop or lea daa mov iret lock xchg adc add dec std sti orb jge or mov test and dec (bad) mov pop inc andl fs xchg cli cli sub sub add and sahf mov repnz sbb mov std or les cld inc cmp shlb dec ret (bad) jns imul lahf inc pop mov ja jmp mov call push inc sti lahf aam jno and xor or or and bnd mov shr dec add mov and insb fdivrs pop dec jg mov cmp push mov es xor cmc js test mov leave inc ss stos or pop test push loop xchg jmp jne imul mov inc call dec repz add out and jmp out ljmp lods lea xor and dec or adc testb inc pop dec or pop pushf fistl ffreep popa pop or dec aad mov push jmp sub cmp lret sbb (bad) lods pop mov orb (bad) repz sbb out adc fisubr pop sub mov pusha sub fstpt or sub add std jae and and or rol push daa int or loop ljmp stos int cs add pop inc jne sub add out repz sub sub mov dec add pop or sbb add mov mov pop mov push dec lock sub pop out bound test cli push xor and or cmc ljmp push shrl jg loop pop dec loope cmp cmpsb dec sub pop inc xchg push rolb push jmp pop pop inc out mov mov add loop add sbb je mov daa nop adc iret pushf fimull pop shrl loope push fst cs mov outsb mov stos mov mov push sub push in sahf lock sub addr16 and (bad) cmpsb xchg push mov adc jle lret xchg or adc bound leave clc bound mov sarl add sub push dec in jbe (bad) negb mov dec loop mov jno gs add fsubs xlat lods xchg fist sbb cltd sub mov sub shrb lret lods pop movsb dec nop and and xlat mov cwtl orb push jne icebp jl das (bad) aam or or xor mov dec movsb and (bad) fistpl fcomi xor or (bad) (bad) sub pop adc test lret inc lods xchg mov push mov (bad) cmp mov push lahf stc xchg imul lds sub mov test das loop mov jg xor imulb scas mov adc xlat popa xor jle cmp add stc mov push pop mov xor inc dec xor dec shl aaa dec xor jmp pop mov pop in daa pop pop cli movsb push (bad) add lods aas movsb jno add cli jne cmp test add adc fsubrs pop add addr16 and xlat or bound enter pusha lods je xchg leave push nop cmpsb sbb ja xchg imul dec xor lock mov pop mov lret addr16 in fsubl fstpl or mov jg or inc dec and test mul inc mov call jnp jle ljmp icebp in insb aam (bad) sub push adc mov pop xchg enter adc ja call aas push ret mov xlat int3 mov xchg or xchg inc daa jge pop gs ja ds mov xor mov cltd out mov cmp pushf sub test push fldt clc es inc daa xlat inc push or movb mov cld imul movb mov jmp adc sub in (bad) lds pop cli mov and push icebp lea imulb or popf loop out and xor mov pop cmpsb cmp test inc xchg adc fildl xor pop aam (bad) mov mov add inc std mov xchg std push add inc mov aaa loop cmp sbb or sub jmp lock jno ret sarb dec popf pop jecxz or or pop daa shrb (bad) jo xor (bad) sbb sbb cmp ljmp sub cmc inc and (bad) push mov ret pop lret nop adcb aas sbb iret xchg shrl xor jmp gs mov rolb ret pusha and add mov in lahf push cltd test xchg cmp jns inc add jle jmp push ftst imul mov mov pop jne pop (bad) (bad) cmp rcl dec loop dec dec ja or mov and inc je mov loop xlat inc aas pushf xor sbb hlt pop test mov lcall jl mov sub dec ss lahf mov into add clc jmp pusha (bad) (bad) call (bad) dec sub test inc lea sub loope stos mov test sahf ljmp sti mov dec test fwait jne adc subb xchg mov pop pop mov pushl sarl iret and sahf fsts repz pop fs mov inc outsb fsubs dec jb jl int3 lods mov push jecxz mull adc lea lods cltd movsl pop adc sti inc outsl mov daa adc xor xchg xlat sbb lahf nop inc add lahf outsb and push jne inc xchg xchg mull ja add sub cld leave xor inc dec lret xor dec ret mov repz jmp push lret repz lret or sbb into shlb test cwtl repnz push adc mov sarl and push pop push mov ljmp cmp push popa xor lretw div insb mov push je gs xor xor add lods ret in add stc pop out pop sub mov pop inc dec add outsl dec cmp leave xor mov sbb lret sub push das lret jmp (bad) mov xor pop cmp int3 fidivr push jge add (bad) pop ss xchg cmp sub jno or mov ja pop pop imul icebp dec inc or mov icebp daa imul std in movsb in mov or mov sub stos xor movsl dec sub xchg mov jmp shrb sti mov cmpl pushf or popf sbb out (bad) (bad) adc push jne aam scas mov sbb ljmp loop test lret lods push icebp pop and decb fsubrl xchg jne or cmpsl lcall adc sub jo icebp or xor iret jl clc add rclb fist xor repz leave sbb and dec dec lahf jmp out mov dec ljmp (bad) repnz jns leave sbb jmp test into stos fnstenv pusha mov mov mov sbb jl les xor cmp mov or add mov sub testb iret or mov (bad) nop imul repz scas ret fbstp (bad) sub inc add xor mov pushf and sub daa and pop inc mov ja imul jno sub adc ret scas int sub aam dec pushf fwait mov jmp mov sub inc gs adc add mov cs mov pop dec int3 sub dec pop stos fstps fcoml les adc xor int ds jmp or lret mov sub dec xchg out clc or pop cs add add cmp pushf mov jnp fs hlt (bad) fistp cmpsb mov ljmp into add incl jno je (bad) mov int (bad) inc jecxz mov sahf int3 xchg and in test add ljmp mov stc xor pop pop test sbb fsubs aam data16 xchg fucomip cmp adc xchg lret pop ret push gs (bad) sub xor mov and das stos sub sub aaa sub bnd dec jmp push mov xchg pop jecxz xor test mov or push lds xchg ds sub mov mov cmp jmp and push sbb mov aad and sub test pop add lcall pop sub add outsb mov out ds (bad) ljmp aas scas out dec popf push popw dec cltd outsb std bnd mov test (bad) pop aas test push (bad) adc in sbbb or rcll sub push dec mov dec cs in mov (bad) and lods adc pop fdivrs pop out sti jb (bad) in jnp and cmc (bad) das adc scas sbb mov mov ja mov and push sahf mov adc pop adc imull std xlat stos (bad) lds pop dec rcrl xchg icebp fnstsw mov in push pop std pop (bad) mov sub aaa mov xlat rcrl mov sti mov mov pop cmp adc inc pop out loope (bad) and (bad) push push leave pop int3 push mov and movsl ja (bad) (bad) pop adc scas sub ds xchg and daa insb out jl add or jl fwait mov insb mov mov fadds (bad) xor inc ror sub (bad) add out leave out sub pop mov sub or cmpsl popf and adc pop shrl push push xor jge enter cmp mov add pop mov das cmp or adc popf fcomps fs dec or sub xchg xor mov std and lret dec dec mov stos daa iret andl imul add cmp pop fnsave ds push add dec or jns dec push outsb fldenv divb pop jmp mov fistpll or fnstenv dec sub lcall sub les dec iret mov or sub cltd push jecxz and aaa cld (bad) (bad) scas lea (bad) int3 test popa push and push mov insb push dec mov mov add mov sub push ret cltd enter outsl xchg stos dec fs pop cmp jle mov sub cmp rorl dec xor adc pop call adc call cmc mov in xor sub add jbe or push xchg mov mov (bad) cmp mov aaa pop data16 or (bad) jbe lret mov or scas lret iret inc ljmp xor or aaa sbb rol adc push lahf jnp push or leave out idivb sbb imul pop push hlt (bad) or and xor js dec out test mov inc cmp neg rcr lods mov repnz mov les sarb scas fdivs xor pop xchg popf xchg fisub aam sub daa xchg (bad) insl (bad) pop sub aad shrb inc jmp xor add mov xchg test mov scas adc jle lea (bad) ret into (bad) mov (bad) adc sbb fsub jmp push lahf inc and or cmp in jmp xchg xchg pop push pop mov (bad) lret test add pop pop pusha les and ds xor add mov mov or cmp arpl sub pop push sbb loop xor imul decl out dec mov hlt ljmp sti loop ja (bad) scas lea (bad) mov out sar add dec xchg and out mov mov xor sub movsl jmp stc sub cwtl push or ret int3 repnz imull jae lret and js sub mov insb sar data16 pop loope cmp and lahf pop mov pop inc stos movsl or push in and into cmp mov outsl cs shrl loope outsl lret xchg mov bnd push add test and jne and mov testl mov push inc (bad) mov adc pop (bad) fwait data16 pop addr16 sub and jnp or dec ret pop xchg or lcallw movl stos inc mov jmp out dec in cmpsl ret cmp mov sub and stos gs dec xor aam sub pop sub out adc test ror orb mov add es mov push call lret push rcrl dec mov adc add in repnz fcompl into mov imul push leave pop inc data16 mov (bad) adc gs add jmp jbe gs out and mov or pop mov div xchg pop mov jge pushf or sub decl push iret sub mov inc sbb and xor mov pop mov mov bound cmpsl or test pushf lea or andb aas arpl call jns notl std adc add mov (bad) jecxz dec xchg pop mov repnz or push xchg push mov push mov cmp or sub fs sub mov icebp addr16 sub push and and push idivl addr16 push popf faddl call (bad) and jno dec out movb pop mov popf jae xchg adc stos test stc mov fldenv cmp scas mov mov pop test mov div push and pop pushf cli xchg repnz (bad) in rol add test mov imul das iret in das cmp jecxz push or inc push orl cmp dec scas decl cmc mov inc add add xor in mov and lea insb sub mov sub hlt aad push seta cltd and jge adcl mov setle repz mov dec repz cmp push ret mov in gs mov stc out outsl std in les idivb outsb add mov test pop divb test mov rclb int mov or jne scas add int sub popa and mov aas sub leave pop mov dec jae sbb add (bad) das xor and and sbb pop sub add (bad) lock test mov lret cli cld mov add das (bad) cmp imul pop dec mov mov push cmp cmp sti xchg mulb ret stos leave leave push xor outsb push es dec out mov and imul mov mov or lret mov sbb add xor bound sbb add mov pushf adcl (bad) in imul jae mov mov fist (bad) out out dec cmp idivl sub and arpl call rorb test cmp jge pop mov cld and sbb jl or ret outsb popf into push push sbb mov mov icebp imul cli or je or sub leave mov cmc xor jle jg ret push push or mov pop iret lds mov ficom pop divl and ljmp or xchg or cli jae adc xor shr cmp enter (bad) mov repz mov in push movsl mov cwtl dec mov (bad) je out add xorl fwait and add ljmp insb or inc idivb xor jns inc icebp mov cmp fnsave ljmp fdivp sbb mov int3 adc add xor push (bad) jne cmpsl dec jg or and push mov ret shlb rdtsc pop repz lret add (bad) lret or mov push and cmp push dec add cld popf (bad) (bad) push not pop adc shrb pop or mov mov add retw or pop mov pop iret dec jo mov dec in icebp adc sbb insb test mov sub add add fldenv cmp (bad) out push xor lock sbb jno or clc std out xor jmp addr16 pushl out adc rolb (bad) jnp mov jp dec iret mov jb imulb or clc mov push adc imul dec daa into jb push cmp dec jmp lcall mov ds imul pop js mov and daa out mov push push leave mov dec movsl pop dec jmp mov (bad) pop dec mov dec (bad) enter bound leave pop jae sub cmp movsb xchg mov and xchg nop adc pop outsb dec sarl xor xlat xor jecxz pusha dec adc pop mov and out popf lds mov daa lret xchg iret scas idiv cmp mov in mov cmp jl sbb mov mov mov shr mov popa jl pop insb sbb out lret gs ds push dec push xlat sti cltd sahf inc movsl xor inc dec push jno and cmp out pop dec fscale dec cli xchg inc sahf cmc in scas fs and add ja movsl xchg into dec bound (bad) mov push adc xor adc or pop pop dec loop iret cmc xchg daa lock pop rcrb sub ss pop and push or sub and in divb sbb mov aas fs negb pop pop (bad) test mov cmpsb pop and dec gs scas popf pop and adc lcall (bad) mov popf cld insb lret imul dec mov daa and add out clc and add mov xchg jmp inc mov fbstp lret jmp pop sbb aaa pop bound leave fdivr imul aam mov cli or cs pusha jnp stc push mov mov sbb mov push sub dec jl adc mov out fcoms jmp ljmp adc xor cli hlt (bad) push fistpll test pop sub pop lret (bad) test fisubr push jmp xor xchg aam ret sub loope mov adc stc add in mov inc xchg in test cld xlat repnz or scas pop aas rolb test loope nop dec ret pop push or xchg sti jbe or daa int3 sti add and xor in add push fildll aad out mov jmp add cmp lret push mov idivl clc bnd pop mov jne inc scas push pop jb fsts or xchg sub xchg repz in ds xchg cmovo fidiv cmp into scas pushf movsb add ja adc fcomps je jecxz es js or fnstcw imul movsl jns inc loop loop mov in gs inc (bad) clc sub rcll ljmp dec push push jp xor or xchg fbstp hlt int3 jno and les mov pop fdiv or aad std add jmp leave inc sbb inc pop out lods stos mov jno mov xor add cmp into inc imul mov xor mov stos mov add ljmp adc and mov xor rolb xchg inc jmp dec pop sub adc ret xchg icebp insl inc and mov xor push out inc xchg fisttpll mov xchg (bad) push xchg out popa nop lock push cmp (bad) repnz mov inc xor push (bad) inc jmp fcompl js and pop add or cmp stc pop push pop dec fsubl jb sti push adc dec out stos jge mov xor or lret fdivs call fisubl jecxz jo fs adc add pop cld stos sbb das std rcrl mov xor scas not cld daa inc xchg add push sbb jge mov cmp jo push mov adc jno ret cmpsb xlat xor mov sbb mov cmp stc jmp (bad) aad pop in sti enter (bad) movsb outsl adc stos xor mov (bad) sub and inc jg je daa xlat out and lods cmc pushf sbb (bad) pop pop movsb lret xlat loop (bad) jle or ljmp frstor add adc inc pop add rolb jg mov inc pop cld jmp (bad) das jbe stc sbb test cmpsl test out cmp mov xchg jnp push mov rcl or sub stos mov xchg test add dec mov ret lea xor pushf sbb pop add mov movhps cmp cmpsl jbe push or mov sbb pop insb fsubrs ds les imulb jno dec push sbb mov xor fsubrs sbb xor iret outsb std inc xchg (bad) repnz mov divb add or outsb divl inc daa out push xor mov mov lds sub icebp aad fwait or (bad) (bad) lea outsb or inc inc ret mov or xchg scas fs xor cmp adc mull addr16 jp data16 jle add adc jno push mov lahf and cmp jmp cmp cmp dec bound in or mov jl nop mov loopne lods outsl mov ret ss stos xchg lds ja inc test xor std cld (bad) call mov inc dec and iret xor popf (bad) movsl jmp mov repz cld pop repnz std jns inc sub push xorl fwait (bad) jne and mov or pop mov lret clc mov dec adc inc repnz mov push xchg negb (bad) or sarb add imul int jp xchg into jg (bad) xchg sub inc jge jns lods jl push sub xor test stos or inc jno imul data16 dec xor lds ror lds mov mov ficoml sbb inc fnstsw xchg adc test leave icebp dec and jnp sub dec sbb dec lods divl pop inc sub into push roll mov int3 and mov daa fsubrl adc dec movsl jmp mov inc push in xor and push (bad) push push das push pop mov push scas (bad) xchg xchg sahf cmpsb or cmp inc pop and or cmp stc xor mov or mov mov mov (bad) in mov lods pop inc sub lret ja cmpl xchg push or pop mov xlat ror movsl jg xor andb in cmpb sub scas xchg cmp and jae jmp sub xor (bad) xchg push or push fdivl (bad) mov inc dec daa out or mov mov mov shr cmpsb dec mov jns xchg mov sub lret iret sub gs idivl add xlat mov sub xor jmp sub jge ljmp push lods and sarb arpl int pop fs pop jmp add or mov xchg repz mov cld js into loop sub (bad) inc das sti aaa sbb stos (bad) repz mov adc call (bad) mov ror jb lret (bad) mov ds push sub std dec lcall push aam xor and rclb or xor std xchg sbbl jno add adc jo rcrl dec and flds or inc dec mov lock sbb stc adc mov rcll cs push add dec inc or idiv sbb xchg dec inc add mov dec div mov add loop cwtl mov and sub add jl fbstp (bad) mov push fidiv xor (bad) decb (bad) push stc cmp into bound jnp lcall or sti inc xor mov call xor (bad) sbb stos pop jmp adc push xchg jp jecxz mov or dec lret jne ljmp jbe cmp test cmpsl dec mov sub test (bad) cmpsl pop adc mov xchg push or pusha pop pop mov clc das stos xlat push lret dec push mov daa icebp enterw mov sti data16 mov mov sub pop rolb jo or jns scas decb popa iret xor das mov mov jnp jecxz mov jmp mov (bad) je mov cmp test call pop dec sub ja (bad) dec in lahf push ljmp inc dec lret pop add sub faddp xchg insl imul pushf popf pop xchg in and add icebp ret enter jmp xlat daa lret lahf xor mov (bad) dec jae push lods mov lods call loopne pop aad push lahf das faddl repz sub stc jg cmp jns dec sbb xor push ret mov out pushf push mov enter cmp scas js shrl mov mov pop mov (bad) fisttpll out lds es push pop mov mov inc (bad) cmp (bad) xlat or bound push cmp push mov out in xchg mov pusha mov rep pop mov adc aam fs ljmp jle mov sub dec ficomp iret pop (bad) jnp push sub inc (bad) (bad) data16 pop movsb loope push or sbb or fistp add notb sub int3 mov out lods shrb push sbb mov xlat dec or aam scas fs stos clc jmp lret frstor jbe (bad) push xor idivl popf lret jne sub rclb push sub ret and fisub ret and mov or sbb mov daa ret jecxz (bad) mov negl jmp cmp sub call pop int fidivr jae stc sub xchg cwtl es lds into loope or xor cmc sbb sbb icebp test fs cmpsl test stos lahf sbb or popf fnstsw sbb loope xor nop adc cld sahf xor gs xor in out xchg pop in or add arpl call mov mov out es fs cltd daa ret pop jle out jmp dec mov daa lock out or lock sti xor mov out out lret push xor and pushl dec addb push aam mov pushf es lret mov mov jne pop cmp add test imul pop loope mov in lock xchg movsb mov pop xor pop jle xchg iret movsl jo mov pop xabort fs (bad) lcall lahf cmp jne or lea fs jecxz adc pop cmpsb (bad) sub out mov das inc xchg das js cli xorb loopne out dec sbb out daa and pop orl cmp dec int3 dec mov leave (bad) fildll push stos fs cltd enter pushf shr xchg (bad) test mov arpl dec gs or insb mov mov xor pop dec test movsb stos clc pop mov adc fisttp out jmp push sub xor mov sub ret add das jg sub push cli out sub loope mov dec push into mov inc ja aad lahf xchg loope adc xlat daa add jge fs leave xchg (bad) into cwtl add jle or mov cltd fist mov pop jmp repnz fnstcw mov sub and push (bad) in lock dec jmp or mov or hlt pop idivb pop into xchg pop mov adc pop fwait mov mov push or mov ficom lret cld stos daa pop scas inc mov xchg mov dec stos imul out mov pop sbb cmp cltd ds das pop out jo cmp and xchg mov (bad) xor sbb xor cwtl ds (bad) das icebp aaa popf add fwait add es jecxz mov and mov mov imul ret pop in repz mov ficoml ljmp or icebp aam add in imul mov mov jno gs or pop xlat mov sub cmp mov sarb add xor (bad) testb xchg jbe ja por and add test div fldl repnz adc les (bad) gs fistpll mov and gs scas fs or test inc or out mov inc sub enter dec and rclb call lahf jl ljmp ja jnp mov add fnstcw sub ds xor pop pop sub mov (bad) inc dec mov mov inc pop xorl lods loope repz lret pop push je lds lret mov push cmpb push mov stos mov lods push out mov pop scas call das xchg or in stos (bad) or into (bad) in xor mov inc lret movsl sbb in dec jo movsl sahf cmpsl xlat in adc scas cmp xor insb aaa movsl fs jle adc in sbb das mov das hlt push sub xchg ljmp jle adc aas push dec out bound mul cltd or or scas fcompl ljmp mov pop rep jno (bad) sub xchg pop dec push mov mov mov loope mov and scas ljmp rol fsubrs repz dec inc mov push sbb xchg lds cmp movsl mov mov fcmovbe (bad) jg sti jp iret ljmp mov mov lea dec xor shrb and cli aad mov in jb rcll std cmpsl xchg ljmp push lcall (bad) mov lret mov bound into cmc dec notb xor inc ja call or iret out cmp stos shrl icebp out iret mov dec mov pop and or mov add jl pop sub outsl jmp idiv lds das or pop dec or add xor and (bad) out (bad) imull add jbe xchg shr push cmp in out dec cli sub add xor rorl pushl push imul fstl push dec or or jb xor inc and mov jne lcall cmp pop dec jle mov dec mov loopne and or sti das iret cmc adc mov ret push pop in push push out aas ret dec mov add mov sub notb (bad) xlat nop pop (bad) rcr xor aam insl xlat dec mov push fwait (bad) sub lahf sbb adc push lcall push rclb push xlat xor fsubrs js mov jnp mov push push enter adc jb shrb sub push cmpsb xchg andb xor cmpsl data16 nop push mov xchg insl (bad) mov xor mov jge add stc mov cmc jg mov adc js daa ficompl loopne pop out pop xchg enter push mov das add lods or test fs inc xor call sub or jl and adcl xchg or jbe leave pop fcoms dec sub and aam (bad) negb pop lods push adc lahf test icebp cli xor sub or leave xchg call in or stc sub pop sbb dec mov pop clc (bad) pop loop lret inc sub inc test (bad) notl jnp movsl insb sti or xor jg dec cmpsl pop hlt in jmp aaa movsl loope cmp (bad) pause sub (bad) lret popf add negb out in sub add xor das addr16 bound icebp out into mov loop dec stos je mov dec sti das cmp xor (bad) outsl pushf movsb insb mov jmp push mov xchg pop mov cmc das (bad) xchg repz and dec rcll data16 scas fnstcw pushf xor mov push lret (bad) xlat xor scas das scas cmp mov fisub movsb ret add cli push jg and hlt pop ja sbb adc adc cld cwtl test loope xor (bad) xorb cld xor in shlb test mov sub (bad) repz hlt loop dec mov add or add or sarl dec sbb pop mov dec xchg idiv xchg mov add rcll insl daa repnz jmp add movsl cli jb or push sbbl mov dec ss cmp incl mov (bad) or lds jbe ljmp push out sub loope js outsb in and xor insb cmp movsl mov jmp or shll push (bad) dec inc fwait xchg leave andl push nop pop mov sarb sub dec sub mov adc pop notb sub cli icebp xchg gs test pushf pop inc xor pop aam xlat insb pop inc shll clc xchg mov leave push into sbb and into sub mov adc iret mov pop and push ljmp cmpsb data16 icebp enter pop test ljmp mov das out xlat xchg je sub ja dec or clc xchg mov imull sub cltd mov or xor jecxz lahf adc pop mov aaa dec stos fwait jge test mov push push outsl mov push cmp pop pop sub imul (bad) lock in (bad) xchg out and leave xor xor sub repnz lcall (bad) cmp mov ja mov addr16 add repnz fcomps pop sbb sti sub vaddsd (bad) aam push call push sti jl outsb daa mov and test dec dec add aas (bad) sub cmc inc sbb repz ljmp adc jnp scas fs lret mov jns bound ret stos mov in sbb pop out test sar mov cwtl out pop (bad) adc sub bound sar dec adc stc mov pop add lahf xchg mov inc and sarb inc lds sahf movsl std popa test sub sbb je imul je lret popa add das mov daa rcr lret xchg xor lds sub lods je fwait (bad) sub je (bad) fnstcw jg mov push mov mov ja inc jo or inc jnp sub xor enter pop ret fs fstpl mov stc xor fisub das ljmp leave cmc outsb lods or (bad) testb xchg inc scas pop pop mov loopne iret or sub or rorl sub add jne and lret repz push pop rolb xchg mov fs das push andl mov push sub pop gs and lahf cwtl xor xchg adc and fcmovne and xor sub leave repnz fadd insb bound pop mov je mov sbb add sti es sub call inc jp jge jno pop pushf scas jns mov mov cli ss bound mov jno pop or shr push pop (bad) sahf and movb mov sub mov add and sub mov (bad) out pop mov and (bad) mov adc (bad) mov cmpsl (bad) xchg jle fs (bad) jl test add mov addl jb rcll in mov fwait cli scas stc or sbb push push add mov ret sub leave stc pusha or push mov clc jl out push icebp aad jmp xchg or movsl sti jecxz add fsts pop mov sub in imul mov bound pop cmc inc jae iret stc fiadd push imul mov dec leave push xlat out setge xor push fimul mov jns inc mov mov dec sub mov or mov push jo std dec jmp fmul (bad) aam cmp mov in mov das sub aas int cmp sbb push jl imul inc xor mov jnp push sub fucomip imul xchg jecxz dec test call xlat loope jl loop mov cmp (bad) addr16 cmpsl pop int3 dec lcall mov pop ret add sahf imul or out cs jle xchg popa cli sub and push dec bound xor test mov enter mov ss popf roll push and js cli mov mov movsb push dec cmp aas mov loopne jbe (bad) iret stos call lods call add fldcw cli loop mov (bad) xor sub call cld fwait push dec dec sub rol cmpsl push mov stos add icebp or leave enter inc and mov or sarb test xchg shl mov jno inc and cmc mov cmpsl fdiv sub add pop ret test mov sub in cmp test pop sub sub mov jae mov mov xchg out mov imulb sti mov pop adcl cmpsb inc (bad) hlt pop fpatan dec ja enter mov (bad) mov pushf lods push and push xor mov std inc cli andb sub jg dec (bad) daa xchg test mov shl dec sarb adc sub sub movb push cmp or sub adc mov or fsub andl add int fmul sub sub mov mov dec cli and fidivl rorb lods ret mov mov (bad) sbb sub divb xor stc and (bad) jg orl add add roll jo inc fstpl dec pop (bad) dec repnz push fsubs mov cmp fstps or in inc add push xchg scas mov aas sub andl pushf sub cld movsl ficom lret repnz decl insb push pop dec lea movsl ja lds push push cwtl fwait xor aaa mov add mov cltd jo cmp push jmp ss xor sbb cmp das xor pop mov xchg cld add add inc outsl and lret orl fsubs jecxz je add into out in push mov (bad) gs imul adc ret lods pop xchg dec (bad) rol inc and fnstsw or rol mov pop and ljmp push aas decb mov (bad) xor mov fdivrp sarb dec pop add jle push pop sahf mov in addr16 xchg push mov mov pop and dec mov pop icebp add gs xor decb add add fist outsb lret rcr fdivrs xchg fdivrs mov mov pop in inc xchg mov dec icebp or movsl mov inc or test mov (bad) iret push ja push dec das repnz cmp sub xchg push sbb gs push jb jo sub and aaa cs std mov scas aad add out sub int3 mov mov mov and xor sti mov popa sub add and sahf movsl and mov neg insb lods pop callw inc (bad) repnz mull push aad push xor push fdivrl ret shl dec adc aaa jmp ds es loop lcall hlt mov in push add clc in push mov aas pop xor sub lds fmull pop add daa cwtl adc dec rcrl xor or or pop (bad) adc add sti pop cmpsl add mov add mov xor lcall daa cwtl (bad) iret pop mov inc add les int3 leave std ficom out arpl and xchg jbe adc lcall icebp lret cli (bad) in xor mov pop in lods aam jb dec pop (bad) scas fucomp sub mov mov push or pop xor pop and imulb mov sub aas arpl rclb mov adc cmp movsl lds sub push out gs jp lahf pop mov or jp xchg enter xor mov sahf sti ja sub mov xlat or dec add ds mov or dec loope or xor adc stc lods dec mov push or lock inc adc mov out cmc push push jl jno jg jp mov das repnz stc and xchg ljmp push xor or pop outsb movsb test nop (bad) sub in movsl bnd mov mov cld ja cwtl imul hlt pushl mov add popa shl jmp xchg xlat pushf fwait xchg addr16 cmpb jg loope fistp or cmp (bad) ja arpl and sub jmp popa dec push push and push or or lret sti scas adc lret lods mov notb cli pop mov adc lea sbb lretw mov mov mov aaa xchg dec xor xor aas int3 sbb xor icebp clc scas mov mov test pop ljmp mov pop xor lret dec movsl (bad) jb add sub dec dec inc xchg ljmp xor mov int inc inc or in cltd les sbb fsts icebp push adc fsubrs add rolb into xor rol mov scas cwtl call ficom out dec mov in les pusha pop cmp sti imul xor inc ljmp (bad) std cli xchg cli lret dec xlat in movsb test fdivp std pop sti xor jbe mov mov xor aam mov adc adc jne stos scas jne pop ljmp jle xchg sti jge loope jne ret sarl xchg iret ljmp mov les stos sub adc add cltd push sti push mov push or idivl mov ret cmpsl mov jmp sub pop clc dec movsb test fdiv add pop in xor lcall inc pop leave add sbb or outsb (bad) dec xor or lds dec xor rorl or xor clc cmp test das sub xchg notb (bad) dec and repz rorb aaa aas loope sub popf cmpsb jl cltd dec (bad) imul lds sub mov sbb jmp fcompl pop lret (bad) cmpsl js or lock jnp dec or fdivrp lods mov leave jg das mov jbe pop roll jno or stos lret sub mov sahf xor xor fmull add ret dec imul pop sbb into mov dec lods fildll fisub xchg push xchg inc and mov outsb mov outsl enter fnstsw in roll lea movsl push cmc in out mov das adc sub cmc xchg inc das xor push mov jg xor aad fucomp sub push into gs je pop xor rorb mov ljmp subb mov cmpsb rcrl shrl sub je movsb dec mov dec pop cmp ds lret imul mov and sti xor xchg stc or pop les xchg mov roll cwtl mov jl leave aam dec aam (bad) mov repnz mov cs lods xlat test insl jp or je out sub addr16 fidivr mov jecxz leave (bad) loope dec (bad) mov cwtl inc ror repz ds sub int3 and mov fnop push xchg jle pop inc dec lahf mov pop sub fcom roll sub cli loop xchg adc scas popa xchg fldenv ljmp sbb ret cli jmp sbb or ja in xor sub int3 repz mov je and cmp loope insb adc mov (bad) cmpsl and out xchg scas lods pop mov inc xor fmull outsl ret jle pop fnsave sub orl sub inc pusha (bad) cmp sub (bad) lock cwtl cmp popf sti aam repz xchg cltd pop dec jecxz leave mov adc pushf xchg (bad) jle jb sub push (bad) aad sub lea jae outsb sbb inc and inc push cmp sub inc mov inc mulb rcrl pop inc (bad) or ficompl es lret push mov mov or decl xor fsubl (bad) rep in dec cmpsl stos jle dec je jo (bad) in mov jp fidivl or jmp mov mov sbb int xor pushl pop xor (bad) cld xchg leave aad sub es not orl sub and decb pop testb sub out cld aaa push repz xchg dec lret and sub test add nop imull fbstp out mov mov movsl cwtl repz mov leave out push push xchg sub (bad) pop sub mov (bad) xor into stos jns adc dec mov sbb push mov jmp (bad) int jne mov aas lahf in pop xor mov mov jmp add stc rolb adc daa sub jne int cwtl bound fbstp dec jle adc int cmp repnz sub test and adc (bad) roll test loop pop sti cmpsb push ret mov pop adc mov dec nop aas and cmpsl scas or mov out sub dec pop repz leave add mov notb pushf pop push push sti pushf imul xorl imul repnz push bound pop insb xchg lahf rorb clc sarl push xchg negb aaa jb jmp pop adc into mov lret out add and or imul mov popa add push insb das mov lods pop loopne mov and mov fisttp daa xchg out mov mov xchg jnp add lcall pushf pop cmpsl push and push or dec mov jne adc xor mov push pop pop popa (bad) icebp rcl jle xchg mov xor pusha (bad) out pop cmpsb out xchg mov push loop into mov cs or dec add push pop repnz sub cltd test ljmp ret adc (bad) rclb jns ret jno mov mov sub lea push adc aaa mov push clc loop jge add mov pusha mov xor mov sbb or dec ret fist fildl (bad) fcompl mov test or loopne out and sub add mov xor cs jbe pop adc mov adc ja xchg outsb pop and pop sbb rolb insb aam xchg lahf (bad) pushf jb pop push or hlt jge shr pushf xor sahf and or push (bad) mov cld in enter mov mov push aam push lcall fiadd mov cltd imul and sbb movsb ret scas (bad) jnp xchg out mov scas cmp fldl mov sbb push pop in ss hlt mov sub sbb mov pop movsl adc nop rol mov adc sub mov out ffreep aaa or push xchg xor leave jg xchg or or xchg mov insb stos xlat stos push (bad) test pop or fstpt pop push out cld rcrb ja lahf push incb ret int mov ljmp dec lret lret mov les add xchg inc leave aad sbb loop push iret jno push mov pop stc int3 mov cli mov das in adc sub ljmp and push mov jg std mov xchg add cwtl cmp cmp mov mov (bad) idivb xlat cmc push jg push mov or and jg mov push lret jne pop mov sub not aad bound imul es pop mov (bad) jecxz sahf fwait ret clc mov iret test mov int3 xor sub or fdivrl out mov fldt rorl mov sub xchg dec mov and pop cmp (bad) xor mov jl dec cs inc sbb mov push add imul dec lahf xor test (bad) divb dec (bad) pop leave mov leave mov cli das mov cld pop mov xlat or cmp xor pop and inc push pushf imul pop and cmpb out push dec bound jbe adc sub cli lahf xchg out stos mov sahf adc jecxz cmp imul mulb inc mov popa dec cmp fldenv out xchg push jbe or fistpll push jo mov inc dec lret add loopne adc test cmp or test pop mov inc jmp daa xchg cli daa and cmc fwait pop lret mov and sub adc daa aad mov fstl daa mov ja and add imul int3 mov xor lret mov xchg mov lds and mov or fisubl or sbb lock lds lods jne inc dec shlb adc or cwtl xchg cld cltd mov movsl dec jb ljmp clc cmp (bad) rol adc mov mov xor jge aas dec jle and push push xchg pushf lahf pop mov sti pop xor push loop sub sub imul mov iret std enter cltd mov mov xor roll cld xlat scas test test pop push lahf les shrb ret stc ja xor jno leave xor cmp aaa jne sahf cmp sti sub fstpt out insb xchg sbb lods lock mov (bad) mov mov sbb xchg imul mov lret and mov sub or shr push jge (bad) cld push pop je enter cmp ficoml in cmp or sub sti mov push and call mov pop testb test movsb stos mov dec sbb jge out cmp repnz xchg xlat sbb pause and fyl2xp1 jl (bad) jmp scas sub jg xchg rorl pop xchg rcrl js adc sbb pop xchg inc pop clc jmp mov cmpsb into loopne add mov jmp icebp test test fwait and and pushf sub mull lcall mov sbb sub enter lahf dec jg add jmp or int3 (bad) das lret test mov jl (bad) mov mov or mov mov jg movsb and and mov xchg data16 popf mov push das out sub adc pop add add mov stc push xchg pop mov and gs jo pop pop in lea pop jne sub and enter inc sub push jae ret push mov inc sub pop andb test and cli in ret xchg movsl sub ret pop xchg out mov (bad) add and jg dec or inc ja jmp (bad) mov or jge sub push inc push dec jmp test out lret repz (bad) jne mov sti aad loop cmp sub enter out cltd cs add (bad) cltd ja scas xchg mov hlt adc out sti fsts mov xor adc (bad) or mov pop sub cli push es sti movsl pop push cmp or insl aaa insb and jmp aas das and fdivrs mov xchg inc pop adc xor int js dec mov mov sub das jge shlb add fidiv xchg pop mov add addr16 xor ja jb lock sub lret call xchg stos sub xchg jge or sub enter jg ds mov sub xchg bound (bad) xchg addr16 je mov mov sbb mov inc out mov int3 sub lock je adc mov ds std arpl inc add mov repnz les pop xor sbb cltd mov push inc je xor add cmp cmp sub sub cld rcrl movsl test (bad) pushl cmp inc cmp xor adc pushf mov and xchg loope loop mov (bad) repz repz pop push xor adc bound lahf pop gs pop pushf lock nop mov jno inc (bad) mov push pop movsl dec or push cmp mov xchg xchg lcall dec xor rolb pop je leave mov add jb jge xchg pop fdivs int fmuls rorb xchg mov push mov sub addl xchg mov leave mov stc inc pop test lret push into mov add inc popa and or cmp mov fcmovbe lret enter clc test mov (bad) lds jmp pop mov call adc out adc gs lock pop mov push cmpsl sbb mov (bad) in cs push mov (bad) xchg test stc andl idivl leave pop in ljmp fidivr adc inc mov or xchg add dec dec jecxz and cmp call fstpl mov scas lcall add sarl lret sub dec push std adc and in dec mov lock jno dec fdivp sub inc inc add rorl cmp imul xor jnp push mov pop std and add push or or fcmove jae xor mov xchg mov sub mov mov and sub or mov gs cmp cli mov test push repz cltd xchg cmp pushl dec imull adc add scas cmp ljmp rcr mov repz repz ret jmp das (bad) xor add ret outsb (bad) imul fldcw in pop mov bound ret dec roll jo jl mov cld jecxz xor mov mov xor outsb mov daa out sbb xchg xchg ds mov dec nop cmpps jge jno jbe inc xor (bad) (bad) push mov jg xorl pop mov mov pop pop pop mov jp add std pushf mov bound lret push adc and aas and subb dec fadds push je add jecxz popf in xchg mov mov ret cmp (bad) das pop sti movsl mov xor in gs lock mov push and jecxz inc push xchg ds (bad) les cld push loopne inc std push mov lret mov lret or cli je mov sub inc mov bound mov xchg jmp dec test icebp fstps out imulb sub pop add das lea call subps xchg pushf aad jne movsb out mov jnp pop push cmp dec jl adc rol sbb or hlt mov xchg jo std push mov or inc call lcall lret pop mov scas cmp pop jl mov mov add addr16 mov das outsb add test push test dec movsl and and lock pop das (bad) jns jnp clc jmp cltd dec push dec xorb (bad) mov mov cltd leave out xchg bound in js lret xor (bad) push hlt (bad) jae xchg mov mull xchg insl mov repz ds or fstl das push mov enter add sub popf dec jns sbb shrl sarl sub loop pop push inc sub cmc pop rcrl clc (bad) lret dec push jb mov push movsl push (bad) mulb (bad) stc mov or cli stos les insb cmc xor cmp out aas mov xchg call mov cmp jecxz pop das push (bad) fcmovnu dec inc lahf icebp mov cmp sti sub lret jecxz (bad) inc add or jb das sti call je mov sti mul or fmuls add push test sti xchg out adc out arpl xor fiaddl fisubrl jle cmp lret das lret mov and ret pop sbb add es lods mov xor dec lret mov sub and xchg or mov dec mov add xor sub cmpsl stc mov int3 mov xchg mov mov push es push iret xchg pop test dec movsl in xchg sarb add xchg out sub shll ret push cli bound adc jbe xor sub xor pop pop (bad) shrl push bnd xlat jg notb mov lds adc rorl or out xlat adc sub fs ret icebp in dec shrl stos sub adc xchg cmp dec push in or fld aaa cmp idivb mull ret mov repnz lds sbb cmp (bad) pop iret and scas cltd sub lock push pop mov pop mov out and sbb push cmp flds insb inc sbb mov icebp mov out mov jbe (bad) nop sbb push dec push mov add in lret sbb (bad) mov push ret ljmp or xchg into pushf outsb lret sbb mov dec lret jp xchg xchg and cmp dec iret mov leave cmc push mov jge je mov xor push dec out mov or or add sub push repnz faddl cmp ja ret cli daa jo jb dec fidivl fsubrs addr16 roll aam push sarl jp mov int3 or into pop subb lea adc or jle stos pop std test inc mov pop add pop pushf and mov fcmovnb or jb icebp mov (bad) jp pop jmp mov rol jbe adc and add fidivr pop cltd in (bad) cmp shrl lcall push cmp out mov ffree and repz pop sub xor add das popf cwtl xor pop xor sub mov shr ret imul les fisubr pop mov shll leave mov push daa aam into pop dec imulb cmpsl arpl or data16 pop (bad) sti loopne mov aad fldenv pop xor mov jecxz loopne or outsl mov ss jbe sbb bound call loop nop lret dec xor or inc xor jae add movl in pop repnz imul jle mov and sub ljmp dec mov and mov stos mov repnz xchg dec xor mov cmpsl jl stos das or inc das adc pop out out sub icebp dec add xor dec scas cltd xlat sub movsl push in sub pushf xor ret insb (bad) lods jns xchg ljmp push jge sti jp scas insb ret pop lock jne or jmp fstpl fucomi mov or sub and mov sub call cltd pop outsl or fild pop jl push push divb sbb in or loop ret inc xchg jecxz push loope lahf jns mov xchg ljmp xchg ret movsb scas xor iret daa fisubrl rcll bound fsubs iret leave mov imulb push lret push inc movq adc pop dec pushf dec xor cmc in sarl mov jns dec mov sti cmp loopne (bad) leave push int imulb xor lea test cld daa iret pushf mov daa jle pop or test stos push sub sub iret sub add mov idiv cmpsb cmp add cli ja int3 jp xchg and iret sub dec shrl dec popf int pop add fsubrs (bad) xor stos or ds rcr hlt or mov ljmp push outsb popa lods iret sub lret pop sub pop out xchg fildll jl in call stc decb (bad) pop sbb movsl cwtl lds nop roll sbb scas fstps in jnp mov bound push ljmp cmp xchg imul (bad) or pop ja int push pop in mov stos xor scas mov xchg ljmp inc daa pop and pop inc fs stos or pop es imulb (bad) lret push pop fsubrp (bad) (bad) jmp fcoml push stos sub add and pushf xchg mov leave and cmpsl adc sub pop mull xchg xlat or stc add push push mov leave mov sub xor call mov pop push call ljmp jmp or jmp jnp dec shr jle ljmp shl stos ss pop movsb jmp mov (bad) lods push adc dec movsb icebp out ds outsb mov mov dec sbb push and fsubrs cld inc dec xor cmp cltd or test pop pushf push cmp sar fdecstp cs jg push cmp (bad) mov cmp pop dec pop or cmp sti mov sub (bad) lock aad push fisubl sub lahf sub in push dec (bad) adc mov outsl mov push (bad) ds popa bound or (bad) shrb xor sub mov notb inc adc mov bnd shl popa sub inc dec ret mov xchg or fisubl scas decb gs dec ficom pusha dec ljmp push xchg test lret mov (bad) jne mov (bad) inc test neg mov or xchg inc and mov fxch std shll hlt leave (bad) mov sub out rorl add xchg and or ret lret cltd inc int std inc imul xor mov sbb mov mov (bad) lods lahf lds roll fcmovnu cmc mov stc rorb and mov in call adc add mov pop adc push sub mov xor push mov repz or jno mov cld cmp adc stos je mov shr cmc jnp cmpsb cmp out fbld cmp add adc xchg pop data16 or push pushf mov ja push pop sbb test fildl outsl mov add inc es add and xorb mov jo dec pop out pop test (bad) mov xlat xchg pop nop ds add repnz daa gs or fbstp mov jne rorb fcoml test jae lods insb xchg jmp push mov jmp add and aaa fs xlat rcl adc sbb sbb add xor xchg je push pop das sbb movsl std mov sub lods cld lret fdivs stos cmpsb bound icebp jle loop push dec test adc sub popa pop inc fs les je adc scas loop iret out leave lret push add popf xchg repnz movsb mov sub movsl ja stos sub lds in call cmp lock icebp pop imulb sahf xor (bad) or std sub lds jecxz lds jnp xor (bad) sub push (bad) mov pop js popf gs pop jne push sub lahf dec sbb gs mov or add jne pusha pop call popl lret jmp (bad) mov daa or js inc ret dec pop test ficoml adc add leave mull repnz mov les push fs sahf popf std xchg adc or in out sub lret inc mov lret push mov inc cmp sbb aaa mov and lods xchg dec mov sub loope sbb out fisttp add pop (bad) call push xchg fdivs xchg dec xlat cmp mov lret out and repz in fimull enter lret adc sub cld sub sbb push out mov lret push sub pop xor mov mov mov daa ret dec add jg adc push dec xchg fcoml sti int jg ficompl xor je inc add mov jmp jg data16 pop test inc scas lret dec shrl fbstp js push lea shrb clc add testl xchg mov icebp adc mov mov (bad) cmp rcl daa cmp push pop cmp or or pop jmp das push repnz stos and into lret js mov push arpl jecxz js mov out xchg xorb dec mov cld adc loop pop adc popf jb xchg aam jle adc pcmpeqd imul std sti cwtl ret lods jo add mov inc fmulp lret out sub stos test movsb jmp sbb xor (bad) imull (bad) flds icebp ljmp sbbb (bad) sti (bad) mov out jle push jg ss daa mov aad and fs cmp sar negb xor sbb jl and xor adc mov movsb out stc pushf lcall incb lret out imull mov divb psllw jg jle and (bad) xor pushf (bad) sub adc xlat pop jno sub imul out add (bad) add mov adc or idivb cmp inc ljmp cs dec inc xor mov sub loop mov push dec lret xchg dec and call test mov mull inc lret fimull xchg jmp fmuls mov hlt adc sub or (bad) dec ds loope pop mov dec in fild mov mov inc imul hlt jb cltd loope cmc leave cmp mov sbb or mov setns xor pop pop stos dec out ret (bad) jecxz ljmp push push push enter shlb inc xor and push jbe pop fistp mov add mov sbb push cwtl jae sti mov add jno xchg add add arpl xchg sbb repz sub daa int3 (bad) dec sti repz pop in das ljmp adc cmp imul sar mov push stc daa fidiv inc into out lret push pop fldcw jp cld add push mov pusha std sti rcrb sub out xchg ret in cwtl popf dec stos dec sbb or push sub js mov and add or mov loope incb rcll sub push jno or rolb xlat xor sbb adc stos push cld enter lods adc push fsubrs stc and test (bad) scas dec dec jbe js cltd imul out sub cmp xchg fldenv mov dec sti mov jecxz cltd neg nop subb mov push orb inc hlt scas lock xor out daa loope das dec cltd mov adc and cwtl (bad) (bad) jle fistp mov jl mov lcall mov sub xor cmp sub xchg out leave mov mov lds lds (bad) les negb mov mov ret ljmp pop sub dec daa fstpt lcall mov lock jne loopne repnz ja sub daa jmp scas mov dec stc and out jge aad sahf add jecxz rorl dec mov jecxz sub outsl test xor stc adc sub push xor or mov sub imul jno lret sub or xchg lea mov push ret les je test les fsubrs ja,pt mov sub xchg cs loope mov aas lcall frstor daa sbb dec push add in popf les inc sbb add dec sbb shrl xor sbb clc and sub cmc cmp enter xor dec mov imul clc push xor push rorl aaa cli sbbb xchg jge mov adc mov ret jecxz (bad) popa pop scas cmp dec and inc mov add mov fdivrl imul pop lds mov pop push sub test outsb leave mov sbb fcoms xlat stos int3 arpl pop cmp jp push clc popa iret xor loope sub adc sub in stos test movsl out bound add (bad) negl push jne (bad) leave adcb cmp push repnz xchg jno dec push and sar int scas fs jae mov cmp js mov movsl jle jo stc sub (bad) push leave je daa ret push xchg inc mov out mov icebp xchg add leave xor fstl xor cmpsb add mov mov mov jmp (bad) mov or jne rorl out aas out dec mov bound out call fldt xlat push inc dec repz daa (bad) frstor mov sbb push idiv lds test mov sub mov imull xor xor inc out or cmp repz das mov ja add cmp jmp xor push mov rorb mov mov add sbb add jmp test cmp jg mov and cmp idivb (bad) mov lret loop jno inc or in dec mov xor mov xchg jmp lcall add in sbb in dec repz loope mov push es daa cmc sub and dec inc add and cmc dec icebp mov sbb or sub and mov xchg sti xchg adc pop data16 or aam stos negl and sub sar or push into mov cmpsb or pop mov into mov dec jge leave fimull aad cmpsl cmpsb (bad) sub inc aas stos std or pushf lret cs inc lds popa movsb fisubr movl sub pop fstpt pop mov cmp inc xchg pop imul gs shr clc test pushf mov out dec in out add test sub xor mov or loop lock sbb sub mov sub cltd adc lret (bad) mov daa mov andb xlat lds subl cmp (bad) pushf mov addb outsl inc (bad) mov pop (bad) fstps rorb adc mov sub xchg cmp into lock lahf cld add xchg cmp cmp fildl cmp loope sub mov xlat fldcw xchg (bad) mov bound or cmp mov add int3 sti out and jle iret xchg stos lea test mov lods mov stos sar xlat sub outsb lret loop adc es adc xlat data16 pop or stc inc stos push and cld push in xchg out sub adc stos lret out cmp add add and push in lods pop outsl sub cmp mov and mov mov into push das sub ror in sarb das je jl push xchg std xchg push xchg or jns lods (bad) or int3 cmpsb mov das and fist sub adc fldenv out xchg in pop mov mov (bad) sbb push lods imul movsl loop adc ficomp leave jmp icebp scas les adc movsl jae sub (bad) xor mov repz cmp push daa fsubrs mov mov or or mov xchg sti push and clc ja ret mov inc lret adc pop std out or inc mov (bad) push pop pop xor xorl mov jmp dec mov es and xor mov sbb (bad) cmpsb push loop jl pop and adc jo enter sbb cmpsb pop in nop xlat lahf dec jp lock aam push mov call jp jmp inc (bad) leave fldl add or pushf push mov push inc lock xor adc xchg cld dec jmp movsb (bad) xor inc scas adc leave mov push sbb mov or and ja add popl (bad) sti sbb leave mov mov jge push das add (bad) nop push icebp out lea and push sub and or lcall jbe push cmp xchg and iret icebp dec add les insl dec test dec lss cmp adc mov mov dec repz aas (bad) lret add mov test and rolb mov xchg add mov repnz mov sbb add and and mov test mov xchg mov sub ljmp icebp stos mov test call mov mov fcoml mov pop ljmp movsl jl lret ja jne mov push les aaa dec sti hlt sub mov or mov sbb out mov outsb sub mov jg cmp mov and jg xor sbb add inc pop xchg inc mov or leave xor pushf xchg out rolb sbb jp pop notb adc add int xor pop jnp xchg mov or fist daa pop mov ja push shll cmp sub lcall lret jle daa div les cld lock xlat dec push and daa call cmpsb stos dec push jg pop sub frstor xchg mov push out cld stc (bad) adc adc frstor repnz xlat mov movl pushf rcll push jbe xor push or fdivrl jbe clc movsb ljmp pop lcall ret cld faddp out dec sub push ret movsb stos cmpl mov call lret push sub lea js into repnz mov les sub xor or jae loop dec mov adc outsl leave fdivp pushf imul sub xchg dec int enter mov add xchg cmp lret push jp out and repnz (bad) in add sbb stc xor out or leave pop (bad) dec cmc in out mov imul lret xor mov sbbl (bad) cmp std xchg ret orb daa shr mov lahf daa xor pop cwtl lds (bad) test pusha repnz imul sub xchg fist push mov out lret jo and cli sar add out or push leave jecxz repz pop les mov mov jle dec xlat sub notl adc (bad) repz sti sbb sub lahf pop adc jmp sub cmp fimull rcrl int cmp add xor push or pop xchg lods pop adc mov xor xor insl sti imul push xor mov dec repnz xchg fsub call fstpl mov stos test test lahf hlt dec push inc imul icebp popf fmul push push cltd in and xor stc mov lea stc ja push cmpb xchg sub stc xchg test (bad) push adc ljmp nop std cs bound bound (bad) pop mov fcoms rorl add popf (bad) mov sbb pop mov data16 push push sub mov (bad) cmpsl jne push xor mov (bad) mov or lcall mov mov insb pop mov pop and xor pop mov inc in lods cld adc in push fcoms or int jle adc std adc test sub popf js pop add cmp or ret ljmp adc cmp mov jle (bad) test in jge test cmp shrb cmpl sub push dec (bad) jmp mov dec gs mov mov loopne cld sbb adc xor dec jae call push repnz mov push arpl imul jl icebp push mov fs cmp cmp into pushf mov mov push mov frstor jl push imul jb or inc and ret int3 neg int3 mov dec cmc int3 popa dec leave repz daa sbb aaa xor addb push mov inc jns dec add sbb stc pop cmpsb (bad) mov dec mov and or cmc (bad) push sub and fisttpl or push ficomp (bad) (bad) fnstenv dec xor imul (bad) jnp sub mov ret mov rcll and mov xchg repz and jmp lgs ret xchg aad (bad) mov pop push ror jmp stos add int3 cwtl push inc adc loope push push jmp fadd push rcll xchg sub and (bad) mov or push xlat cld jmp jns push jecxz dec mov sub mov fnstenv (bad) das gs (bad) adc xor mov push add (bad) pushl outsl (bad) cmpsl (bad) lock jmp gs xor mov push mov (bad) mov dec ljmp pop pop (bad) or cmp (bad) sbb mov push gs jmp pop jmp mov cmpsl xor pop and and dec stos lret pop outsl out into outsb dec mov add add addb cmp pop xor (bad) jae xor mov pop sti notl add subl das (bad) cmc push xchg pop xchg or add sub and test adc lods add cli jb xor push loope dec dec (bad) in mov das jp dec (bad) popa into xor jle sbb lret sahf movsl int3 jge xchg or js inc repz loop lcall ljmp shr movsl mov push adc and dec push lock out das or sbb and inc mull pop sub lock xlat popf je imul dec (bad) out inc shrb sti xchg jns ret cmp enter pop decb fdivr (bad) sti push (bad) cmp loop test add das xor lds clc xchg mov jns dec int3 cmp in sub dec mov add push rolb lock sahf add aam les scas jb add lret sub pushf cli mov mov sbb cmpsl aad out (bad) iret popf jne jmp test imul push ds js (bad) (bad) and mov ja push add lock dec xchg test and mov cltd outsl lret jne sahf pop or jecxz add xor popa or movsl cli ja mov aad insl mov in (bad) adc xchg add aad mov and daa sub test rcrb fsts cmp jns xor mov bnd daa mov lds push imulb or cmp cwtl lock add or mov or and sbbb (bad) mov xchg mov aam jmp cwtl pop mov xchg mov pop and iret mov xchg adc mov cmc lret and das cld out and xor mov icebp inc dec inc bound loope data16 mov lods lret pop dec dec mov inc inc cmpsl hlt (bad) push insb (bad) and sub jp (bad) (bad) push add jmp sub loopne lret clc iret cltd dec lret clc ss mov jae sub mov daa sub or pop paddsw gs push cmp dec cmp fdivrs pop sub stos (bad) fidivr push in jne push outsb push xor xchg out pop mov (bad) leave repnz mov push xor cmpsb pop cmp fildll daa and or mov xor mov loope or fwait or fs sub or insb lea sarl and xor in lret fisubr xor push pushf mov test mov iret scas sub add cld pop push inc jecxz sub mov test das pop cmp cmp sub xlat lods xchg dec adc imull pop in cmpsl mov and (bad) xchg cwtl xchg add nop xchg lahf cs repnz pop iret and sar and jecxz loop adc add cld in mov movsb int jnp mov mov add loopne mov scas jno add cmp and (bad) gs cmpsl cmp das mov (bad) cld pop mov (bad) mov adc adc insb xchg mul inc (bad) xor jns icebp lods inc ret outsl mov fiadd or or repnz icebp inc insl sub fdivs punpckhbw inc pop mov jecxz fidiv fimull daa (bad) test in hlt (bad) xchg jno dec inc cmp hlt imul or add jl pop loope cmp mov imul fcmovu imul xchg inc and xor in lahf mov iret jp fdivrl push (bad) test dec dec mov inc sahf adc mov cmp loop jge jmp clc daa roll (bad) imul mov mov fbld scas repnz jmp dec xor das mov (bad) outsl and mov in jecxz stc mov lock xchg mov testb pop sub movsb ret mov cwtl add jb fdivs cmp xor rcll push or mov sbb ljmp dec ret push hlt sbbb and stos jb sbb in cmp (bad) lret push push stos dec mov mov cli les lret push (bad) push repz fldt xor or in adc cld out dec daa maxps pushf xlat mov adc movsl cmp sti lret push pop add enter sbb bound outsl cltd in adc pop mov jae jmp push mov fcoms std xchg pop push xchg add pop mov loop inc sbbb fmull fsubr (bad) pop pop cmp jl push mov test sbb mov (bad) arpl fimull pop xor sub xor mov rclb add cwtl cld add mov or ljmp add cmp in loope fcmovb and out aaa test mov outsl mov popa stos jg addr16 testl xor out ja das popf inc mov inc xchg xor je jmp mov sbb ljmp sub or xchg mov fwait aas jecxz or xor inc popf fidiv xchg fprem (bad) daa negl frstor push cmpl dec stos jne repz aaa mov push aam popf ret cmpsl xor mov xor lret sbb notl add movsb aas or or or outsl int mov pushf mov (bad) xlat dec mov shll add mov sub jp dec iret repz push pop mov sub movsl popf inc jle andl cmp (bad) scas xor dec push xor (bad) jno push pushl (bad) stos dec lods dec pop or cld and cld (bad) mov (bad) add movsl jl jp pushf jne je lods test popf pop xor fldl2t xchg push jge clc or rcll inc xor add orl push cli pusha daa push and icebp mov pop or bound xchg arpl into push cld mov (bad) ja lock xor push lods les jae leave sub into mov pop mov aad xor or (bad) xor mov mov cmp ret daa ja cmp sbb inc mov into lds xor sub mov cmp pop enter ret dec dec cli int cmp flds gs stos sub push test fsubrs daa pop push lods push xchg stos pop aaa test adc (bad) movsl inc add pop jecxz sahf or icebp loop or mov pop es jae add or (bad) xor sarl in and push jg or sub sub lret jmp cld (bad) adc notl and push mov in xchg mov inc scas cld ja jl xchg sub std das mov mov pop test pop into lret aaa and (bad) insl ss and lods mov nop enter icebp xor jmp scas testb xor adc ljmp (bad) sbb negl xor cmpsb xor ljmp dec mov jae shrl sub sbb cmp and mov enter repz out xor dec dec or fisubl and sahf rclb leave mov mov or fstl nop and xor insl jns mov xchg xor add aas lods sub (bad) jne mov dec stos mov dec mov loop cmp fcomip cmp mov add jae mov cli sub inc mov cmp adc jbe dec xchg fstl push jge and imul mulb xlat add gs pop adc xor rclb push das jns sti arpl icebp push pop stos fwait pusha dec test mov fwait sub icebp xchg inc or enter shr mov and or fiadd (bad) in jp ret das ljmp xchg sahf rclb loop daa mov pop sbb sub roll and cmc pushf pop das xor pop mov rolb sbb inc daa and mov xor and adc std loope pop hlt sub repz (bad) mov push roll insb cmp xchg pop sub out pop leave pop mov (bad) pop add jno inc sub xchg mov inc adc and js stc xchg ret push hlt andl mov and jo sub inc scas push sbb xchg ljmp jecxz push xchg dec mov stos xchg push repnz push or jmp sub xlat (bad) mov ret mov inc xor in call dec sub push jb loop ljmp xchg inc xchg jnp (bad) xchg inc cmp push dec push xchg in adc push and sbb sub mov xor cs std mov clc mov movsb xchg dec push mov mov sbb shrl adc movsl call xchg lea lods fwait mov loopne add outsl shrb sbb das jmp mov cltd je stc ficom dec stos jb out jge and repz das fs sub add cli or jle loop mov repnz sbb mov push jmp mov ja and push jmp pop mov into sbb inc cltd add push cwtl repz stos cwtl loop cwtl cmp mov ret push inc loopne add pop jo mov jg and cmp push mov mov and mov (bad) or or cli repz jle jp sbb dec jmp shrl sub sub sub pusha stc bound imul push mov inc push int3 mov cltd push mov idiv fildl sub cmc call (bad) or and cwtl add mov (bad) icebp xlat xor adc pop out mov jnp bound mov insb (bad) (bad) divb ss popa repz mov rcpps shr lret adc adc mov idivb jmp sbb test jns dec pop aaa fsubrl icebp xchg dec pop shrb mov inc mov (bad) lahf cltd repz bound cli sub rcrb pushf outsl pop add xchg pop clc (bad) fcompl jbe fs repz sub and (bad) and add cmc jno imul sbb cmpl adc cltd mov mov fbld or add mov out popf aam es inc xor add iret data16 xor pushf xor out cmpsl fcmove add stos fsts cmpsb mov push sahf adc jmp idivl or lret mov pop (bad) int3 sbb out clc (bad) in cmp add out data16 ds inc pop inc xor sub aam lret fsub push pop ret mov fistpl test mov mov mov bound adc fildl sbb dec cmp xchg jns sahf ljmp sub mov enter jl repnz or ja cmp jo loope jl daa xor mov mov cli cmp sarb movzbl std inc repnz les adc push cltd test mov cmp pusha or das cmpsb sbb movsb jbe inc es push xor push hlt push out pushf cmpsl pop ljmp pusha inc fsubs lret xchg jo mov icebp aaa dec pop stos mov xchg push dec mov lret ljmp cmp jmp mov push shrl movsb aam add push or rorl or fbstp or lret pop clc es movsb loopne repz lcall lahf int3 xchg xchg push xchg ljmp pushl dec icebp out xor ret ret xchg cmp (bad) mov push push pusha mov out xchg xor shrb imulb (bad) mov lds shr add xor mov call cmp mov pushf pop push pop jl cs jo mov test jo in mov and fistpl je (bad) negl or and (bad) (bad) sub aaa fdivrs nop fiaddl or sub movl xchg (bad) cmp shll sub dec jmp pop fistpll dec jb xor mov adc imul fisub ljmp jle test in adc mov xchg lods repnz or pop das mov dec push dec push cmpsb ljmp jb jl call gs cs push sub lods cmpsl xchg and add out mov adc push adc aaa dec add imul shrl xor out (bad) sbb mov cmp repz add xor cmp push in sub fisubrl iret fidivl out (bad) shlb loopne cmp push jns and outsb xlat mov sub out cmp mov mov sub mov sti fwait popf mov adc mov (bad) adc pop ljmp (bad) bound pop fimull inc pop pop (bad) cmp pushf fistp push lods cmp jnp push mov pop xchg cmp add push mov xor lock cltd sub stc bnd imul popf jbe jb or and test pop xor inc setg and dec and dec and stos pushf subb jl jg into dec ss cs cli mov pop jb nop mov (bad) out sub sub or or xlat mov pop inc lahf sub and pop fldl pop jmp adc icebp mov cld rcll inc pop out xchg mov mov xchg jge leave iret jnp (bad) sub dec clc xchg sub mov iret popf icebp enter lods shll test xlat lods lret pop out mov stos bound (bad) adc mov xlat mov insl mov lods xchg mov jbe stc subb test sub andb gs lods pop mov xlat jae das je in call cmp cli out aas or fisubrl mov jp adc lret push push add mov push inc mov mov jl pop push push jb and stac fistpll jbe push pop sarl jmp cs (bad) (bad) push mov cmp add test cmp xchg scas test xchg mov and push sbb sub lods mov (bad) stc nop mov ljmp xchg sub inc pop adc xor (bad) or mov lods pop notb (bad) stos arpl inc adc sub stos mov pop cli jo adc fidiv sub call mov and or mov push les testb (bad) pop push adc cmp fbld or mov imul fucomp outsb stc cmp xor pop add adc push call xor cmp push subb mov xor dec movsb lds adc jecxz pop stos je xchg jns cltd movsb (bad) jg fldl scas inc es adc mov dec and fistl leave fnop cli sub inc adc add sub jl push and scas fidivr xchg mull leave jg push stc addr16 adc mov xchg iret adc xchg mov daa lret cmpsl mov ret jg or jb cmp gs enter sub xor jb xchg mov int cmp ljmp call mov cmc gs sub fistpll jne sbb nop xchg jp mov sub adc loop jle (bad) lods lahf cmpsb dec daa xor lcall cmp divl adc dec rclb sbb pop mov xchg lock mov movsb xchg mov inc in or jl movsl jne mov out mov or mov sub cmpsl xor out push out and stos hlt lcall cld daa pop out out lret add mov stc xor fs iret mov or adc insl inc pop into sub sub xchg adc enter pop mov movsb cli cwtl sbb fwait notb adc mov xor daa sub mov jmp js cwtl sub cltd shll jmp stos sbbb add pop int3 xchg popf cltd push out or jmp pop stos xchg in leave add out cmpsb xor xchg inc push outsb les sub jne pop ss mov push rcll cmp or pop mov jmp fldl add out mov sbb fistpll xor sub les cli mov sub movsl popa add (bad) leave hlt mov adc add mov dec mov xchg cli pusha mov into and push inc loope sub mov jns mov xchg inc inc mov lods outsb pop add cli ja ret mov (bad) mov repz lods xchg and fucomi and mov xchg sbb xchg add and stc (bad) mov sbb enter daa leave lds add mov xor add mov cmpsl add stos jecxz xchg mov rcl addr16 nop icebp sub mov out negl mov mov pop imul test sar scas inc cltd lahf cld out jl jg push push xchg (bad) cmp dec js arpl sbb pop lds fmuls mov cld or dec mov shr mov dec and negl add movsb push insb or and or sbb mov jns or jecxz cmp push mov pop fs repnz das iret jns mov add dec push (bad) jl pop jno add adc imul (bad) mov dec jmp repz pop sub pop inc insl sub add xor cs dec aad and icebp ljmp cmp shlb js sub in push nop sbb cmp cmp and sarb loopne xor inc in movsl inc pop mov into sti fs stos call jbe out sub repnz pop in push out sti fsub and in lods bound in xchg aas jecxz push and popa push ret insb aas sub decb lods cmp repz dec (bad) xor arpl adc shrb pop ret xchg fs fsts leave les cmp sub push jbe fisttpl lods mov daa ss insb and in sbb jo lock xor fs repz sub stos mov inc ret push sub cmp out sub cmp out push jle push lcall push test data16 mov mov sub roll pop dec fild jl or daa add lcall out lcall mov insl imul imul sbb or or nop jnp cmpl push out shll (bad) out pop xchg movsb stos xor stc mov mov popf push (bad) adc mov ret sub cli sahf rolb movlps fistpll insb out cmp int3 push pop cmp mov push cwtl popa or mov notb daa add mov (bad) mov leave dec mul jmp icebp jmp cmp mov insb cld iret push add pop and in mov and fmuls jmp in mov sbb mov cld fisub (bad) xchg leave mov or xchg lret sub mov sbb pop push call xor sub mov or mov ret cwtl mov xlat in mov jp adc lret mov cmpsl dec scas mov xor iret push mov mov mov divl dec fmul cltd (bad) dec jne adc sub fs sar cmpsl mov (bad) cmpsl jle and dec adc out dec jecxz jno outsb sar mov dec cltd push mov push sarl je sti fcoml daa shlb daa push and mov inc gs pop rsm cltd aaa sub outsl sahf (bad) or mov cmp bound (bad) rcrl out dec xor and jno cmp jecxz aad push dec lods jecxz popa xor pop int sarl aad mov or push int3 mov pop lret cld sub and out out pop inc push lcall sub inc sarb ds and add repz cmp pop pushf sahf mov rcr xchg add cmp mov sahf mov ret fisubl cli flds jle xor lahf mov dec jb pop mov dec xchg (bad) je loopne fimul stc cwtl mov sbb daa popf fimul xchg hlt xchg mov adc cwtl cmpsl mov imul xor clc in xchg loope sub mov push mov aam push inc sub and sub imul das movb ds or cmp pop xor mov mov cmp inc and jp movsl gs int3 jns jnp cmp mov mov std and xor jne pushf in mov es pop mov jle imul pop jecxz adc xchg repz push je shr xor pop pushf pushf push dec (bad) mov push subl fdivs or add cli add and xor mov lods sbb out pop add jle push cli pop jp xor call pushf pushf icebp imul xchg inc sbb (bad) (bad) mov mulb or mov ret push lods pop bound mov mov mov in daa les data16 scas xor sub sub bound lods daa jg imul and (bad) icebp shrl mov or jg dec jmp lods fist or (bad) arpl cmp push xor sarb xor enter rclb pop xchg mov repnz lods xor jp push bnd push lret add mov add push rorl jmp pop jmp mov repz jmp pop loop fstl jle jmp mov mov iret movsb loope sub cmc lock sti aas mov into mov pop jmp mov jb dec ret repz mov out imul (bad) dec cmp xor (bad) push lcall lret ret push xchg hlt popf in cmp and mov jmp into addb add cmp (bad) das mov cltd push movsl adc mov sub inc mov push sub leave into icebp call out xor dec sub mov iret mov and dec ds pop addl sub dec stos sub out xchg pop adc xchg arpl repnz jl xchg (bad) loop lret push jg test xor add jnp andl cmp and fsubs movsb jle lock comiss jne shr jg fcom inc jmp and jbe jb lcall (bad) lret mov jl mov jp scas inc xchg inc inc (bad) add xor dec imul push loope push fcmovbe mov fstpt inc cmp push icebp mov lret mov push lock cmp lcall mov shrb and bnd mov adc repz fnop sub mov cmp popa xor bound cmp xor cmp or jnp sub add push push out lods les adc jp cmp stos fstps push add arpl mov sub inc lahf mov into adc leave xchg clc mov stc jne mov imul mov sub push and (bad) xor jg sub into scas mov and ss xchg ljmp icebp mov or add stc stos test mov cmc pop scas bound (bad) pop out in sub out je test repz adc pop pop fist (bad) lea lret das ljmp mov pop sbb dec ds xchg roll push pop decb pop into jbe xchg cmp popa cwtl and das cltd rorb pop or fimul mov and and lods out and inc push mov loop sub pop scas pop enter mov add mov es jle out adc idiv call test repnz pop cmp jns movsl cmc add out cld pushf movsl scas repz out std xor or aaa popl leave pop arpl sarb and loope cmc iret mov gs add out jmp and add lods dec mov dec mov add cmp sub mov pop push mov in or lret or lock aaa dec jle and jmp imul xchg (bad) sub push jecxz ret pop jns pop cli ficomp dec scas fs mov xlat push xor xchg addr16 or pop inc cs xor mov push inc clc mov in out lret sub lret mov mov out push pop loope ret iret jmp out das xor jne inc ficom adc loopne es pusha add js mull adc pusha sbb lahf pop shr enter pop loop jne daa pop bound (bad) cmp sub sub test (bad) orb (bad) pop mov pop and sbb divl or mov and test popf inc mov (bad) pop ret push negl (bad) testl push mov sbb pop sub push sbb jne pushf movb mov sub push inc push stc ss add lcall sub sub sub dec int xchg movsl shlb fisttp cmpsb mov lret push data16 xor insb in fsubrs ljmp sub mov mov xor movsl pop stc xor add xlat xor cmc dec leave xchg push add arpl fisttpl jne pop ljmp shrl fsubrl jp add sbb (bad) sti imulb les negb outsl stc xor popf inc inc xor push xchg gs adc arpl jnp inc sub imul bound jae add ret std dec pop out test cli jb push mov add popf flds bound adc movsb mov std mov aam ret (bad) xchg jmp cmp cli mov xor pop repz fcmovnb push and cld mov inc loop ret cmp in cmc popf (bad) cmp jmp (bad) xchg or xor sbb inc xchg shr imul clc add mov inc inc aas orl dec cmp mov mov or jge pusha pushf xchg das inc cli and xor mov mov xor mov and mov push lock gs scas mov ljmp xlat push jne imul clc andl dec icebp int int inc mov js mov mov ret mov cli pushf adc push (bad) jg mov and cs lcall popf mov imulb test in add out sbb out out mov loop xlat mov jnp faddl sub lods lock dec (bad) std les mull xchg xor sarb lods mov xchg (bad) or push sti (bad) lret divb out adc fcomps mov (bad) ja push daa or lds loop test pop out dec mov mov sub sti cmp sub jg fidivl ja xor push (bad) adc (bad) popf sbb pop mov movsb int3 or sbb xchg mov mov movsl fildll (bad) sub and int fidivrl dec imul mov xchg ficomp dec imul cmp sahf das jecxz ljmp scas hlt mov pop iret lret inc in sub xor sahf repz dec clc out lret xor decl jno sbb out pusha xlat xor dec adc jle sti int cmp shl daa sub ja into jo popf je in stos sub sub jmp out in sub dec cltd in stos jo loop pop out aad testb adc call adc pop sbb adc pop loop xchg stos xor mov and cwtl cmp movsb or pop cld (bad) movsb fs jbe jecxz xchg imul loope jae pop loopne pushf mov insb add cmp push fdivl and stos int adc ljmp cmp adc sbb daa jne mov jmp loop xor jne push pop (bad) ficoml stc cld lret notl push pop push jmp add add fistl cmp test fwait decl ret jle leave lret xchg push pop stc sub (bad) push (bad) aaa lock xchg aad pushl loope mov shrl add cs ds aas clc pop cmp iret or and mov add (bad) daa jo adc or popf cmp mull cmp imul lret and (bad) fsts ds mov mov dec out iret ret push leave add dec push out aam sbb iret push ret xor inc rcll or iret fst cmp in adc leave rolb add mov por repnz mov inc mov sub (bad) iret and add hlt lahf pop mov andb test loop (bad) xor shll gs pop movsl gs jle xchg pop lret mov (bad) dec and mov dec and jp sarb or cli sbb iret mov test pop jmp fdiv add scas cmp movsb movsb imull stos sub adc (bad) pop test sub mov addr16 or test mull jle outsb ja popf sbb (bad) jle push (bad) or sub fwait lret daa (bad) ss cmp push imul xchg mov mov dec stos xor adc jge or dec mov pop (bad) out xchg fnstsw dec (bad) or adc lods hlt test sbb negb mov leave fldenv and cmc fucomp or mov or adc add and aas and lret in xchg adc les sub hlt xchg stc sub fldenv push fildll push xchg int3 pop leave xchg notl clc test out in push fs repz adc in mov inc adc mov ja xchg enter insl icebp cmp xor cltd stc or adc xchg adc sti mov lock mov mov mov xchg popa mov and adc mov sbb sbb mov movsl scas test push scas repnz leave sbb adc ficompl mov inc add std xchg movsl lods gs xor cli or (bad) fild repnz test fs loop dec jmp jle sub sub sub inc add (bad) cmp xchg leave (bad) add dec sub ss test leave push jno lcall mov sbb test push pop cld jle lock daa daa mov jg int3 push lret xor dec jle dec push or push cli mov shl push and sbb xchg ljmp lret int3 dec xor pushf dec mov sub clc repz mov dec int3 fldl2e test aam pop aam jp cmpsb cmpsl data16 bound out push fdivrs or das popa or sub push push pop push pop lock sbb add or mov and xchg in sti je mov and popa pop jg lds lods cmp xchg (bad) mov mov sub and fs in (bad) mov test das cld push jp inc add hlt out dec pop xor das call and js adc dec sub loope clc mov lock out data16 pushl jnp push sti or add jg xchg sbb jmp add sti or fdivp lods xor shll shrb xchg (bad) or dec jp push daa push pop iret imul mov fnsave jbe sub scas popf sbb sti adc ljmp nop fs stos adc adc xor test sti mov decb pop pop sbb enter bound xor movsb jo mov inc inc mov outsb xor xchg sub daa or xor inc inc and sub es and xlat stos lret int3 test cltd add push inc add push push lock pop inc sub stos and fadds ljmp sub (bad) testb mov sbb cmp adc gs cmp pop or dec in push inc rorl and ss and sub or mov in loop fisttpl xorb adc (bad) stc in cmpsl repz loop stc jbe add pushf mov sti adc ror mov ss pop and and lds cmp jo stos pop ja jp fimull xor push mov bound push nop adc sub push jae fnstenv lds in or (bad) or jnp out insl or xchg rorl or jg lret outsb rorl in mov loop sahf xchg adc lret dec ret mov dec jmp mov mov add (bad) pushf mov mov inc xor data16 loope out (bad) fs adc stos ja in lods dec mov mov push xchg (bad) push push xor scas cmp shll ret aam movl leave mov add xor or push pop cwtl call hlt (bad) mov sar enter jns dec in and pop inc test je mov fldcw imul lds push jmp dec jno shll out jb repnz fnop pop jno jno pop mov mov repnz pop sub lret xlat les out xchg das lret iret sbb inc pop aas xor and jmp stc out ja mov outsb loop (bad) mov cs jmp int3 xor loop lret mov add int xchg or add leave cltd (bad) add mov cwtl mov dec (bad) stos mov dec xor pop stos out dec clc hlt lahf mov xchg pop push sub out mov mov in xor push cmp mov enter mov imul jbe (bad) or pop inc pop fs sbb (bad) or outsl pusha lods xor sbb into sbb gs sbb jne ljmp lods in movsb mov lods mov pop das decl mov fimull divb test repnz jne int3 xchg fs jp test (bad) ss mov pop mov (bad) clc mov push cmpsb mulb and cmpsl xlat and (bad) xchg jns mov lock lods xor jmp fs sub sub fcoms imul ljmp hlt jp or xor mov les (bad) mov inc movb lret lds sub dec cmp or ja repnz loop jne mov mov sbb push cmp jo nop popf (bad) xor fxch das test mov mov (bad) mov sub dec repz arpl add flds and cli add pop lret push inc scas sub push or out and xchg jnp or mov mov xor (bad) scas out js out inc dec jmp fimull sub pop xlat cli jb roll push iret push cmp sub ja ret add (bad) cmp xlat or fldcw or (bad) fdivr sub lret (bad) xor sbb mov je lret rcrb or xor pop add lea mov sub (bad) jnp adcl push cs pusha cmp push iret sub pop into mov xchg leave (bad) cmp push ja es icebp iret cmp insb pop jl loop push subl hlt mov out cmp sbb and adc mov scas xor jb dec sarl fdivl lret fld cs mov mov iret xor cli mov ss push out in addr16 push adc dec sar fs jmp ja mov mov dec pop pop xchg stc je scas clc sub adc dec (bad) stos sub outsl mov jno cmp mov ljmp jmp xchg repnz mov push imulb adc pushf lds rolb add movsb loopne,pt negb ret stos push scas mov push add mov and add mov popf sti sub jo cmpsb nop add adc push pop sub or es cltd insb jbe fmull iret lcall stos enter dec add dec xchg (bad) movzbl imul aam ret and cli or in or (bad) push pop test push mov sub mov sub mov jg dec jns imul mov inc push mov stos mov pop les push arpl vmwrite pushl mov repnz pop out shll mov das into cmp inc sub divl and das xor out mov dec leave push dec sbb dec xor sbb out test into call arpl and or (bad) pop jmp and lock cmp jg pop mov data16 imul leave les adc push push jp out fldl das loop sarl sbb insl jecxz dec xor std pushf sub (bad) mov xor xor dec mov cltd (bad) mov cltd sbb add xchg cwtl adc outsb cltd xchg mov add call mov cli fstp aas repz test pushl adc int3 mov movsb ljmp or push inc xlat pop sar pop out xor test or or rolb ret jbe push ret xchg lcall (bad) outsl pop sub loope bound popf add xor mov icebp and push popa mov jnp mov stos repz ret jmp or pop cmp ds cli bound sbb outsl jmp dec stc mov push sub stos ja das lahf push fwait mov pop jae test mov xchg add repz add mov pop mov mov sub jp cmp xor testl (bad) into fwait popa sub daa gs xor stos fldenv add mov mov popa sub (bad) ds cmp mov push fnsave ljmp repz sbb mov and ret xor (bad) out add jmp dec lods pop pop sub pop or clc push xchg push mov cld mov mov add imul xchg pop outsl inc xor mov adc xor repnz fucomi pusha dec xlat xor fbstp add mov into cmp and and xor orl std sti movsb and adc add push das mov or (bad) call loope (bad) inc sbb mov mov dec and std jb push ret pop jge int3 dec jmp (bad) adc (bad) test out in jb jmp dec ljmp fwait dec pushf sti sub inc bound pop adc adc loop pop fnstcw push pop mov mov xchg cmp xor or xor and xrelease xor mov or (bad) in jmp dec sub shr mov daa xchg sbb cwtl mov in mov lock rclb cs and mov mov xlat ret mov mov and nop bound ret mov mov leave push mov test pop (bad) xor or add lods add mov cli imul sub mov pop mov sub das sub dec xor in fcomip (bad) mov (bad) xchg fdivs xchg stc shlb mov mov mov inc mov sbb xorb into (bad) sub call push (bad) push jp push aam cli (bad) mov movzbl iret dec movl outsb and lock xchg fs xorl fucomi dec mov je cld out adc pop pop cwtl lods out xor decl mov mov jne pop sub je out sbb fnstenv dec cmp stc sub lds (bad) lea and fsubrs pop jle rcrb add dec das push push aas cmpsl out pop cli push add ss pushf rcrb pop sub xchg pop push sub add inc push (bad) lods pop jnp mov xor notb lds lret mov inc lret or into adc xchg mov iret jecxz pop cld jno aaa mov fiadd dec sbb or xchg dec mov mov ret mov shrl sbb aam ret xor out idivb daa (bad) xlat int3 jns in push dec rorb enter pop in jmp je push (bad) pop mov fmull sub imul jp xor sub xchg inc sub lea icebp jl loope push adc cmp and aad jno repz pop push cmp add jp pop sar jns pop xor add ret push cli and clc xchg add in sbb inc loopne sub push xor mov mov lds dec divl stos fs lds scas mov xchg mov sbb xor jg (bad) xchg sti add pop hlt xchg adc daa test (bad) jbe or push cmpsl adc mov push nop cmovp fnstenv mov imul pop shll scas cmp iret stos data16 add (bad) stc fbld (bad) mov xchg jle je das sbb subb mov push push sbb mov dec fwait or or gs mov bound (bad) fnstenv out test mov mov cmpsb adc loop imul and cs dec scas cmp and xchg push xor les mov out mov mul jg push ret xchg add bound sbb xor sbb jae or aad adc ret pop (bad) mov xchg int3 push xor hlt mov sub scas fnstcw iret jge mov adc sub (bad) repnz idivl xor lret pop pop cwtl xchg loop std mov jecxz,pn pop sbb jno sub imul add ljmp ret and sub (bad) mov pushf (bad) into pop inc xchg mov test (bad) mov mov dec add sub cmp inc iret mov ret insb inc lahf inc fwait push or or popa sbb rolb out jb xchg out out mov negl inc fldt add jg sub mov lahf xchg jo std mov jns int das sub or in and das sbb and jg jne (bad) sub ljmp dec popa lcall or jmp dec or pop xor and jmp dec mov iret inc es mov insb xchg imul (bad) icebp push jbe lret jl pop push jl pop loope int3 cmpsb mov mov and jmp movsl sub sub adc lret popa leave sub ljmp ret jl inc add xor mov call dec out outsb (bad) faddl mov hlt sub mov xlat xchg inc dec jmp lock pop mov lcall adc comiss hlt movsl in mov imul add cli mov dec pop dec cmpsb xchg cli cmpsl add lds data16 mov add out add out dec mov bound das xlat xchg in add lret pop or movb outsl sbb lds das add movb xor leave sub enter test pop call dec das jae mov mov (bad) imul add sub mov or lret bnd push or jns mov push ja jne lock and sbb jge xlat (bad) sub xor rclb add cmp mov pop xor jmp cld (bad) mov lods pop pushf test mov mov lahf ffreep push rorl inc cmp add mov fdivl icebp scas loop xlat mov lret add ljmp iret orb add add fnstsw dec sti xor inc or push in jns aas pop xor push mov dec out sub sub sub inc shll lret push dec and insb aas adc call sub mov jecxz lock sbb mov or cmp dec addr16 xor push mov mov aaa mov jmp adc clc lcall iret add lds and sub loopne fidivr repz loop aam push ffreep cs testl test insb (bad) repnz sub movsb lods mov mov sub fwait mov add cwtl lcall adc (bad) repz push movsl scas adc mov bound lea mov lods loopne mov aaa sbb and out push or sti loope mov xor jbe sub xchg fscale mov lods in dec sbb arpl adc fnstenv loopne mov rorb and or outsl loopne subl push and arpl notb mov out adc mov orl or mov inc xor aad out movsl inc push lret xor fdiv stc mov lods adc cmc or sbb into and mov jbe aad adc leave pop into xchg leave out dec scas sub adc insb das sbb in mov out cmp or add and cwtl shrb add push cmpsl fbstp mov cmp jae mov add cli xor mov (bad) mov outsl addr16 imul jle ror pop dec loopne dec scas cmp xor das jecxz and add lret dec scas fmul jecxz (bad) scas jae sub or xor dec lahf pop sbb xor fldt jno xorl or adc add mov and popf mov cmp push ret insb mov pop cwtl scas out adc sbb out pop dec (bad) pop jbe mov push push inc inc loope,pt aas mov pop adc lret or fld jmp mov in mov lret das test addr16 adc mov (bad) jns xchg repz in push jp in mov lret jmp xchg dec or push jp daa (bad) outsb movsl xchg jnp lods xchg adc imul leave xlat mov cltd roll sub btr sti sub lds rclb cmpsb test lret cltd push mov or mov out jmp loop (bad) daa or xchg jb push add sub pop inc xchg dec fdivs cmp lds mov pop mov pop cmpsb push jl dec (bad) fldcw mull adc ss mov cmp aas repnz mov xor fstpt mov mov and jge fldcw jg repz push jl leave mov mov ss pop test xor cmpsb mov fxch xchg rcrb insb rolb sbb mov xor pusha jp insb push in or mov add (bad) mov js pop mov xchg je stc push ret test or mov call push push dec mov mov pop stos fucom inc cmp dec and jbe lods push sbb xchg adc (bad) repz sahf icebp sub push fs lret mov mov jg pop popa lods mov push (bad) pop inc and mov dec pop mov mov insb gs push sub jecxz in cltd mov xor (bad) mov sub lds push pushf pop negl push out push jp fimul fiaddl mov dec leave int push jo or sub leave scas movsl repnz ret les inc or mov (bad) xchg bswap test push dec leave dec iret scas mov xor ljmp (bad) mov (bad) daa je lret shr mov inc pop or mov fdivrl je dec push adcb dec add pop push inc pop out jo xor xor sub sbb add jno add cmp mov test movl sti notl fistpll andb xorb pop daa or xor pushf mov xlat pushf daa in or jle sub sub lahf ror sub movsl mov sub mov jnp cmpsl pop in daa icebp push pusha sub or jmp mov (bad) (bad) stc not adc mov xchg or fimul (bad) pushf lock rolb in idivb cwtl push xchg xor cmpsb adc jmp cld dec cs sub bound push loop pop shrl iret dec clc xchg leave sarl lret fldcw stc cmpsl imul push dec jae jge (bad) mov icebp repnz hlt sub lret and stc push sub pop cwtl push shrl shrl and mov mov xor lock mov int3 mov rcll inc lret xor aad sub aad scas repnz mov iret sub xor iret repnz bound and (bad) adc jae inc out cmpsb arpl jns dec int jbe jno sub sub mov clc pop inc mov (bad) or inc inc mov add and jne xor xchg sub ja in add sub rcrb cli mov cmovnp in dec push add mov or scas sub adc shr addr16 inc cmp data16 sahf xchg sub popf in ss xchg call into pop dec jmp leave mull mov leave and popf mov cmc cmp pop ljmp cld mov mov cmc xchg pop mov adc dec ljmp (bad) mov add push lods ds fcoml and insb cmp mov cs jg and mov push in xchg jno (bad) push (bad) div rorl inc mov jne jg jbe lods lcall mov ss in xchg jecxz cld stos adc loopne fnstcw dec aad inc inc jne out fcompl cmp insb dec lahf add sub popf (bad) jae inc mov jg inc adc mov push push xlat out cwtl dec (bad) out data16 lcall pop jns dec pushf push mov mov sub push cs daa les (bad) cmpsl and and nop shrl and ds stos xor test mov or (bad) repz enter mov sub add pop imul lods in lods nop mov adc int3 push in imul add js scas daa mov into repnz sarl clc sarl nop jge add mov lods sbb shll pusha sub xor loop stos je lret loope sub mov pop enter add mov adc sbb sub scas xchg aas ljmp sub test push movsl gs add mov xor add loopne into jecxz,pn cltd xchg mov scas sub xor sbb enter (bad) sub movsl mov sub popf jle int mov cs mov or mov xor cmpsb idivb insb dec out add fmull imul fsubrs jmp loop mov pop cmpsb sub outsl pusha sub mov aam xchg jb (bad) lea sub std add (bad) dec push fmuls xor or (bad) scas popf pop pusha test ret (bad) xor xor and popf pop lds int3 ret dec push mov mov jmp dec add and sub mov and std mov ljmp (bad) or and push mov adc faddl xchg mov mov dec fcompl mov jb leave push pop push xchg lret mov rcrb loop push pop push (bad) xor andl sti cmpsb test imul sub and bound divb and (bad) mov lock mov mov loop jns inc add mov (bad) scas mov cmp imul inc je ficom cmp lahf (bad) stos (bad) mov sti add pop aaa push xlat mov stc cmp sbb loope jmp stos lcall cmc lea fsts ds pop adc sub ror inc lea sub inc xchg (bad) jp mov out jl xchg add or add (bad) mov lret ljmp mov jb test shlb faddp and xchg mul (bad) and les sub add or movl jp push push jns call jecxz pop insl dec inc inc cmp cld out adc lahf fidiv jmp jmp imul adc rorl or out add sar movsb inc insl outsl das cmp and pop neg daa jmp adc test or in sarl sub mov sbb outsb (bad) jno sub mov fwait or stc push aam and data16 xchg fs and sub mov lods jg (bad) movsl ja (bad) (bad) int3 jg pop sub movsb fcmovbe and nop jb xlat std cld rorl cmp sub nop stc sbb xchg dec repz jmp sbb sub mov cli mov cmp (bad) mov ficoml adc add mov pop mov add xor push (bad) push sub outsb sub dec cltd jbe in add test movsb stos xchg fildll fnop iret add mov sti outsb xor (bad) jg xchg lret ljmp scas call push and out mov pop ljmp mov sbb sbb divb popf ja sahf add mov movsl cmc enter rorb notb sti mov cltd xor jg xor mov push imul jb ss mov push sub ljmp rcll lods cwtl into es ret add out std popa aad cmp fnsave xchg lret dec or dec sti sub movsl jno inc mov xchg repnz fnstcw test cli xor xor lahf pop sbb dec add pop add test cmovo popf xor sub lahf pop popf dec adc and popf jno leave (bad) xor sub add adc sub mov arpl clc dec sahf test cmpsl cld pop mov out cmp push jne fnsave popa in fisttpl call (bad) out in jno icebp fidivl pop insb fistpll dec mov and push inc and call xchg scas mov lret adc xor leave scas sub (bad) mov (bad) testl stos add add (bad) or xor (bad) stc daa inc xor or and es imul sbb aaa scas mov adc pop divl popf (bad) sub xor mov loope mov pop enter xor into xor mov adc pusha inc pop scas (bad) std xor adc mov jne jmp mov out lret jp ds pop lahf andl cmp pop (bad) movsb scas test (bad) cmp in pushf mov fsubl icebp adc stos bound jecxz xor mov scas fsubr ret mov fdivr sub jb sub jge mov sub xchg pop xor cmc stc shrb jae sub leave inc pop (bad) sub xor (bad) xor sub mov push pop or mov jo or dec leave fsubrs mov enter or js cwtl or dec or push dec mov xchg pop xor xchg inc sub push pop movsl jb popa lds and jge lret xchg add push ret test dec lock xchg mov rcrl dec cld pop lret adc iret jmp ret mov mov push scas mov add dec push lret lret cmp mov sti lods mov bound cwtl rcrb mov hlt cmp jbe dec (bad) out cli ljmp ret andb pop sub add ds mov jmp (bad) shrl or jae jbe mov jg dec ljmp cs out aad adc mov lret gs or mov leave stc enter fucomp jb pop dec inc stc pop call pop popf push sub or add xor rcrb push outsb jmp bound call (bad) mov mov or dec not adc adc pop pop in mov das out jne ljmp jmp push ljmp cwtl xor or sbb sub das mov loop jno dec or (bad) pop inc xchg mov jns jge sahf push add (bad) mov insb sub fnop xorb insb or mov insl sbb adc mov into leave (bad) movsl xor mov lds fdivrl in clc sub and sbb or out adc (bad) mov cmpsl or popf cmc adc (bad) xor mov (bad) add pushf loope int or (bad) xchg fcmovnb rsqrtps mov outsb add mov pop sub das fisttp (bad) xor or fbstp pop (bad) or in enter insb out idivl inc rclb and ja out xor jo js pop into lods cmc in cwtl mov adc inc iret loope lret cmp xor jl push repnz mov dec cmp mov inc sub adc gs test sub push out jns test or rorb movsl dec idiv daa mov aam fs xchg ljmp pop sub cmc push pop lahf jp test xchg cli mov push sub push enter fsubr xor mov mov inc xor jle adc arpl sub push or xor cmp scas add ss inc adc mov fcoml and sub or mov push xor clc clc movsl repz adc push mov mov or mov xor testb push roll cmp push xor push ljmp sbb leave mov xor frstor lret jge jae jg mov icebp ljmp xchg dec daa cmp pushf jns dec insb sub mov dec out aad int3 sub xor out or adc mov test lahf maskmovq notl or call lods cld outsb loop cmpb iret imul (bad) or jge mov or or mov inc in sti fstps js cmp sbbb add pop sbb (bad) outsb movsl mov mov rorl lods ficompl pop movb ljmp pop leave icebp aam push and or and cli sub cmp out mov lods pop dec xchg stc outsb movsl sarl movsb sub push lret imul jp fnsave je lock das cmp das xchg xor (bad) (bad) xor xchg (bad) mov sub stc dec ret cmc mov lods dec test push xor add (bad) sti sub adc xchg int3 leave popf divl push inc bound ds dec cmp xor add xchg je push push push mov lret je daa push in and and pusha sahf ficom icebp int call pop mov ljmp and das mov repz orl mov dec pop insb push pop dec loop jnp movsb repnz xlat xchg mov lret lea aam pop (bad) push sub pop les sub jbe sub daa xor push vmovsldup adc pop pop xor pop mov scas loop mov fnstcw xor or jnp cmpsl popa and (bad) lock jg insl into push stos ds lcall dec lock nop test mov adc jb mov push pop mov fsubr add push mov addr16 lcall test testb jl fimull fsts and subl out (bad) mov lock sub inc and jbe inc mov mov into pop leave mov hlt bound bound negb push push sti adc lds add mov push push call lret into jne fisubl xchg pop sub or jmp xchg (bad) out lds sub lret jg roll loopne adc (bad) fldenv adc ret call sub sti mov arpl test mov xor dec push je rcrb gs or cmp fidivr mov (bad) xchg mov mov out je lea or and popf out or ret or fnop imul xchg adc mov xchg or jbe mov ss sahf mov sar sub or fdivrs mov pop xor sub push and mov inc and mov push rorl dec xlat or pop les adc inc jle push push dec lret andb xlat adc hlt add inc jnp mov and add icebp pusha inc pop test ljmp leave shll pushl xor das negb sar adc mov cltd adcl xor lret lret add cmp cmp (bad) dec pop loop (bad) mov mov aam pop pushf xchg inc xor sub adc add int3 add dec movl leave fisubl test (bad) das and mov add or mov enter stc jo cmp rorl mov sub mov movsl dec ds mov in aam xor or ljmp and ror mov ret mov jns daa repz ficoml (bad) dec dec mov fistpll cwtl pop mov pop pop mov js mulb xor push xchg iret push xor pop fcoml mov add jmp pushf mov adc sbb subb mov xchg push cmp (bad) lods push mov int outsl in jo ljmp jmp orl sub mov add jp (bad) rorl decl mov fidivr repz icebp dec dec cmp dec adc imul cmp xor ja dec dec pop loop test xlat sti lods (bad) iret inc fildll dec xor and imulb pop mov xchg cli sub xchg lret jnp repz xchg sti (bad) in xlat shrl dec jp push add xchg loop jbe push jge and jmp nop cmpsb pop sub and add (bad) movsb pop ficoml shl jne xor cmc (bad) sahf icebp adc call dec sti cwtl popa repz and or lock gs mov notl xor or push add mov mov popf or sub (bad) jns aas mov sbb add nop xlat hlt sub int iret mov and scas inc xchg pop xor jne in sahf lds les (bad) pop stc shr mov iret mov dec mov out cmp stc scas sub xlat ror xlat stos mov sub ljmp popa stos mov mov xchg and sbb in cld test fstpt add movsb mov repz movsl cwtl out negb rcrb fcoms notl insl push mov jmp or repz fistl leave pop lock call sti dec add cs cmp loope sub mov push fistp test mov mov jmp jmp mov fsubs mov rorl stc jb jmp pop das mov insl jae lret pop push pop xor sti sahf lahf outsl inc fstpt push shll jle jmp mov jmp mov sbbb xchg lret sbb pop mov sub mov xor jo jge daa jmp add cmp jg movsl add (bad) sbb pop int3 int lret or test int3 dec and cli mov sub xor jmp inc lret test (bad) xchg lret pop dec test pop scas je daa jo xchg sub sarb repz aaa mov dec sbb xor sti movsl cltd pavgw ds push fucompp (bad) loopne fcoms push add and pop add fildll inc sub arpl pop sub and add or xchg pop adc lret adc cld mov icebp addr16 out cltd into push or jae sub test and into push cmp icebp dec xlat pop lock mov cli arpl rcrl sarl bound jmp (bad) in sub movsl push out sub add iret cmpsb insb or mov mov (bad) sub and test jmp aad test jg sbb sahf loopne or daa in dec xor pop ret jecxz pop call dec and sub add sub or iret mov sbb mov pop and xchg dec insb jp dec enter mov std inc or or cmpsl jnp imul pop mov sub mov popf push mov jno mov cmp and mov test (bad) cmp xchg pushf lods cmpsb mov sub inc shr mov xchg and (bad) aad push jl push pop mov dec cltd shrl cmc inc cs fldenv fs inc out and pushf outsl mov das mov repz xor push cmp stc out lods push sahf adc sti fadds cmpsb (bad) data16 movsb xchg fsubr leave jl rcr adc and pop movsl pop xchg imul insb pop cmp movsl stos mov daa push xchg jo jl jecxz sub xorl jb xchg sub daa jl sub and sbb pop scas hlt dec sub idivl inc gs popf inc and repz nop jo movsb sub popf repz xor push or call xchg or das mov and pusha imul vrcpss jecxz das aas (bad) xchg leave fbstp or cmp pop inc and cmp repz fdivl push mov mov das sti and mov pop repnz outsl sub push das mov loop mov movsb adc jmp push sbb popa sbb imul xchg out sub jmp xor dec aad mov cmc inc out and pop xor int3 call sub fdiv add ljmp add aad imul jb (bad) loop jle imul push (bad) mov mov and fisubr push stos popf add push mov mov adc or pop or xor or mov in inc or fs les mov pushl xor imul (bad) (bad) dec notl out mov fildll xor sub xor mov (bad) mov ret call jmp sti out cs jge ljmp adc mov bound dec ret sbb das and data16 fidivr inc loop loop sub clc xorb sarl fadds (bad) iret mov sub and dec mov mov adc inc pusha and adcb mov cli dec pop inc and mov das inc pop dec test je ljmp pop dec outsb fnstcw pop mov adc stos sub sub and and push mov mov cwtl add and icebp cmp push pop mov loop sbb sbb push xor push sbb popf imulb mov lret push orl in stos push push loope daa frndint shl xor pop jecxz arpl into dec popf js or and add jb pop xchg stc popf jns imul lea std cmc js stc xor cmpsl (bad) and sub mov (bad) mov fs or mov call jne jg sub popf je push mov ja movsl pop xchg dec mov jne (bad) mov xchg icebp out movl jae xor mov sub jno,pt (bad) push sub roll xor lcall xlat fnstenv fistl sub and xor dec jecxz rorl jne pusha (bad) ret popf cmp push dec dec inc popf cwtl jno adc divb icebp sub mov add mov test jmp (bad) popl lock mov fstps maxps lds sbb stos cmp pop xor ljmp scas adc adc movsl aaa imul cmc lock sub adc jb lds lods fsubl and push push or and and xchg adc pop xor push add lret out fnstenv ret push jbe push xor mov (bad) std cmp je scas lea das popf inc imul fincstp (bad) jb bound pop out lret fadds sub pop popf mov leave jl testb xor or jg cmpsl pop hlt sarl (bad) fimul or or push leave mov jnp adc cmp out mov adc iret lcall cmc mov das leave push xor xchg aad or ret pop xor adc icebp xchg das pop sbb and fadds stc mov sub or fstps mov dec ret lret add out adc adc pop iret or jne add out dec clc pop movsb push mov popf cmp fidivrl jmp fdivrs clc test fwait xor cmp or or sbb in inc sub dec push mov mov or xor jg pop ja cmp cmp sahf cli mov into cmc jae fildll into ja sub mov xchg in cmc dec or xor ret push push inc xchg out mov aas sub cmp ficom fistpll jp mov sbb push fstl dec jo out xchg sti xor mov pop and push or (bad) lock out pop imulb mov jmp aad pushl (bad) icebp mov daa pop inc pushl push out das ret sahf sbb or in push mov sbb mov push mov std pop mov imul and push or push ljmp xchg test sar adc (bad) push outsl idivl and cs xor jbe jmp jbe bound push xlat test sbb pop dec lock fldenv clc je or add mov push xchg movsb mov cwtl and mov dec inc inc pushf (bad) out cmp arpl imul out mov mov cwtl or (bad) dec leave push add mov and lret aam out dec cli mov or adc or xchg mov outsl loope pop and in stos mov shl xor das int xor jb jmp jmp aam int3 sti lret xchg push mov push lcall mov add ja test pop daa or cmp fldenv fs ret jmp pop ret into cltd cmp cs leave jmp ljmp add popf ficomp pop mov push and loope lods nop icebp xor jmp sarb adc jp push out in adc das add out ret jl imul xlat fsubrp in stos loop roll je cld movsb div call loop hlt and mov xlat jns leave push test arpl sub lret xchg dec mov aaa (bad) jl pushl adc popf sarl iret (bad) mov sub xor mov sub jmp or jl sub bound (bad) push add rorb lods int push movsl ss inc mov pop push cmp movsl pop clc enter sbb pop aam popf xchg scas mov mov and cld lret xchg or xor push jns or scas fdivrs je insl add js out notl xor call or fist mov inc add sub aas mov inc out rorl test mov test sub out bound leave roll adc jmp iret xchg (bad) aad std push loopne int jae and scas dec popf add mov xor or inc stos push pushaw pop mov mov frstor and sub jle sub jle icebp arpl (bad) dec sub (bad) or dec loope arpl test add mov push insb and xor mov xchg in lea outsl sahf adc arpl cli (bad) mov das call aam mov lods test sub pop add enter push sub push (bad) fisubr add dec sbb movsb insb sbb lret and ja xchg mov xchg rorl dec cmc lds and adc sub in mov mov push data16 xchg fxch mov jmp add xchg xor dec xchg pop jl jmp sub pop xor mov (bad) fldenv pop push sub lds and dec ret push cmp jg xor leave les mov mov shl loope dec cmp jmp sub lods mov enter or dec adc imul enter repnz div push push pop enter call add sbb stos or xor aad mov xchg inc sub sub std adc fildll int add mov enter lods mov shr or ret in (bad) xor jle loop cmp lods xchg stc sub cmp sahf xor push das jns repz dec in fldl inc mov aaa sub xchg lea push cmpsl fstl jmp enter mov or sub notl movsb outsb js icebp sbb or outsl cmpsl int mov mov sub mov (bad) xchg out in lret push or add add push (bad) inc fdivp fwait lret out mov nop hlt int3 sub mov sub mov inc stos dec (bad) sub xor dec lret sarb orb in inc std mov pushf (bad) and mov insb outsl xchg aam and pop xchg jecxz int3 out dec ljmp test xchg roll dec and das test mov notl sbb adc fistl out test mov jnp or push push jp push mov lret lret jle mov loope lods (bad) int pop outsb cmpsl pop xchg lds ljmp lea into mov lods dec pop mov sahf aas sub or ljmp dec sbb sub jecxz ficom scas sub add pop mov leave ljmp mov add or scas lods adc notb cmc aad sbb rcrl mov push popf in js mov mov test popf mov std (bad) in lret lds and xor cmp hlt and push pushf push jbe xchg repnz jge push mov data16 mov jb gs or adc xchg or rorb pop add xor pop or xor mulb mov or push jge mov jmp inc mov sbb xchg ljmp ljmp pop xor stos pop add stc and fist stos adc xor mov push or pop ja subl sbb jp inc jmp mov into ds sub push mov pop stc adc mov lret add sbb fld1 xchg cmp push lods rcr or cmp sub aad imul push adc pushf jg jmp mov cmp sahf iret xchg enter gs cltd sbb jg fwait mov (bad) adc gs into std jbe sbb stc lret in mov or cwtl inc insl cmp insb jns pop (bad) sub iret popf sbb scas cmpsl aam pop mov mov cmpsl dec mov sub xor xor lock xlat dec cmpsl popa sub add or xchg cmp insb rcrl imull stc out xchg mov xor mov and push stos mov subb push xchg push inc pop xchg lods jmp out or out fmulp stos mov (bad) jne and mov pop mov ljmp pop int3 xor mov pop lods clc mov inc add push push pop mov mov rcl outsb mov jae inc xor and in mov loopne sub cld lcall xlat mov pop lahf lret fnop and sub cli cmp fstpl and leave cmp je stos pushf insb adc pushf (bad) cmp bound popa mov adc pop jmp jg test jns pop stc mov mov icebp add movb push jne cs dec pusha xchg pop movl push jp rcr xor dec pop pop stc decb dec pop dec loopne mov inc dec icebp loope loop xchg mov nop cmp jne in daa jo lahf adc and sub pop (bad) test adc call icebp pop xor (bad) (bad) in or sti push cmpsl gs (bad) bound (bad) dec into leave sub les lock pop add pushf pushl xlat push sub sbb aas mov out mov daa add mov or add sub add adc pop adc cmp sbb and sub lret pop mov rep inc hlt cltd enter decb pop dec cmpsb loope sub lea daa scas sub mov pusha scas sub push jno mov mov (bad) sub xor clc lods adc in ret mov adc sub insb pop jle pop pop cwtl nop (bad) mov mov fs int3 pop xor mov pop in inc mov fstps es ljmp loope pusha stc inc dec fsubl xchg cli fs ret push jmp lahf push jae pop imul mov gs jp cmpsb je je pop out dec lea outsb sub cwtl pop fcomip into xchg push dec bound neg ret icebp lahf push and mov (bad) negl jne mov fld and sub in stc mov aad pop insb (bad) xchg pushf jmp out xchg call inc pop jns mov daa mov push call test sub or xor sub mov or mov pop adc ss xchg mov fldl fisubl ljmp xor outsb stc cmp xor sbb pop xchg pushf lahf xchg or outsb lds cltd popf mov mov mov jl inc or adc push mov jbe shll negb xor and and dec sub dec or inc or bound outsl cmpsl ret rcrl sub inc (bad) adc (bad) pop push xchg out ljmp loop mov xor mov loop mov pop aam in sti mov xor out out pop ljmp or call and clc orb push es push cli (bad) jg or mov adc push in lret or sub xchg push sub or add cmp cmp ljmp int3 mov fstpl dec dec pop lret ljmp cmp into int3 int sub add sub add mov mov jg cmovp repz rolb dec pop mov dec adc xchg add pop imul daa push test push mov xchg (bad) je divl int inc int or sub jge js cs outsl mov leave leave ja daa in and adc mov and push daa or pop outsb sbb mov push in mov push jl repnz fnstsw push je push add and test mov movsl push das notb stos mov cmpb movsb mov popf cld dec cmpsl je push jo loope out cmp xor push rcr or mov mov push mov fistp xor out dec cmp xor (bad) mov jne dec fidiv jmp out daa add ljmp xlat imul mov loope imulb cmc cwtl jmp pop xlat out sub add xor ret sarl mov xor sbb loop xchg add mov xchg xchg in pop and sub push jl iret dec add dec lret fs stos repz inc push dec ror les dec add mov mov cmp outsb fwait rcrb (bad) xchg lea and cltd or push xchg test movsl sbb mov enter movb lock fmuls sub lahf pop xchg sub sar vpmullw stos cmp dec or ret in xchg (bad) jb out idivl inc add ffreep repnz icebp aaa insl dec popa push sub movsb mov jecxz xchg mov sub in lods cld stos (bad) out sbb jg jo xlat inc shrl (bad) push imul imul pop mov push or dec mov inc push out fs mov add or xor xchg into sbb add (bad) mov xchg fs push inc add adc xor mov or incb pop pop xchg std xchg scas mov (bad) jle adc or xchg fmuls xor shr daa mov scas mov imull jns mov (bad) repnz call repz sub xor mov popa jb mov xor adc std push lds mov mov sub xchg ljmp mov call or and fidiv add mov shr lret dec xor ljmp lret and cmpsb add ret dec mov ds hlt nop dec xchg in inc sbb jp jmp lahf hlt jmp push mov mov sbb iret loop repnz or or outsb fistl test jns jno pop test cld xor lahf mov sti sub dec insb xchg movsb jmp jae xlat lock dec andb pop in movsl cwtl pop fisttp xchg repnz pop cld sbb or and jg mov je push sti sub dec or mov push mov lods jns adc sbb dec ret sbb mov jmp mov int3 movsl clc xchg and mov cmp sub or shrl repnz int3 lock or outsl xorl leave add and stos sub push push ret or lcall pop jmp add push adc add mov cmp cli add push mov popf in cmpsl pop or mov ret pushf add (bad) fstpt mov xchg les loop (bad) clc loopne mov sub push std test (bad) je jnp cmp in xchg jecxz scas fnstcw lock clc call dec sti loope jl mov lods pop (bad) fld daa (bad) or sub fcomip push pusha and or in lahf inc es xchg sarl xchg je xchg icebp out sub cltd stc sahf insl sub cld (bad) or xor xlat icebp div xor jnp mov stc adc and xor adc sbb dec sbb sahf push das jo dec imull (bad) mov vmovapd sub mov sbb push push scas lcall (bad) dec insl lahf rolb or cmp lcall dec out fstpl cmp or sbb xor lods adc gs stos sub or pop adc dec (bad) out push mov dec in scas in mov push aad xchg push push lea and sub gs push sbb sub mov jbe test les call icebp lea rolb xor dec mov pop insb adc (bad) and ja addr16 shr cwtl xchg sti insb roll out and lret mov sbb sub add orb xchg inc imul pop out pop ret mov mov addl pusha mov or cmc sub lret jne push push fcoml popf mov shr leave repnz out sahf add push sub sbb fdivs sar xor loope negb inc cmp jmp or mov movsl sub pop add icebp xchg adc sub mov jmp das clc lcall xor fdivr repnz bound sub movsl adc xor dec and cmp out cmp or jmp inc in mov cmpsb and cmp sub outsb jb clc in push ljmp add ret sub jecxz test nop jae adc dec divb clc or add cwtl add jb add jp fidivr loopne (bad) xchg roll inc xor xchg sbb and mov push cmp sub mov daa lret jns dec or lcall imul mov out mov push lcall mov les or aam (bad) rorl repnz mov jg je xchg or icebp fisttpl in fisttpl cli sub mov stos mov xchg mov faddl or movaps rorb imul mov push add jb xor fstpt (bad) fistpl sub xchg lea xor fisttpll loop loopne xor adc jnp pop pushl inc push lock testl xor nop inc mov push or add scas cltd mov cmp xchg ret ret add jle bound dec push and mov xor fisttp inc adc arpl (bad) stos jmp leave loope fisub sbb push xor push imul mov mov (bad) data16 cmp ss sub add pop push sub jg in insb aas sub jp adc cs fnstenv xor icebp add lcall add dec xor fwait sub pop outsb pop lea test inc dec pop (bad) mov ds loope aad add ljmp sub lahf je pop jo mov (bad) movsl shrl (bad) xchg mov ja sub mov push add psubusw pop imul sub call jecxz les push jecxz jp sti xor leave push adc or insl lret ljmp test xchg inc movsl inc xchg cmpsl ja aas push jecxz (bad) std pop mov pop leave inc out and jp jmp sbb sub adc das bound ret cmp mov repz std add mov push lret push enter daa xlat adc dec xor inc jmp mov mov daa add xor cmpsb inc push repz xor popf icebp cld mov cmp hlt ds sub mov in mov inc and jecxz dec mov sub adc sub pop mov and shlb test (bad) or clc (bad) mov jecxz sub sbb push stos nop sub daa cmp mov xor xor (bad) xor sbb lods cs ficom push data16 loop sub mov in (bad) mov jno dec sub mov cmc fcoms out adcl mov (bad) sub sbb and pushf into out pop daa jge repz bound das inc or sub daa jbe jp out dec repz xor lods bound jmp repnz xor sub mov fsubr (bad) mov pop pop sub (bad) xlat rcrl out jmp fs sub test push test cs mov cld jns xchg repz mov dec sti lret fldenv add dec jmp sarl movsl mov mov int das xor xor scas test out enter mov xor dec mov jp mov lret push pop cmp sti lret popf aam test mov mov out add (bad) push dec xchg mov nop sbb js pop inc fisub cwtl insb xor mov scas lods pop out fwait jb or mov xchg inc outsb pop mov dec outsl push lcall mov jmp sahf mov sub mov lret jb popa jp pop ljmp push dec pop lret adc or push jl ljmp mov icebp mov push dec inc dec out xor cmp mov add cmp jo call pop lods sub dec xchg xor sub rorb fildll fmuls enter aad leave push (bad) in mov sub push cli cld or mov (bad) jge xchg sahf leave decl cmpsl bound movl or call or pop jnp push into je daa js pop sub add movsl lret (bad) stos cltd into and call jo int3 add sahf mov cmpsb or lahf fwait sub mov and add mov cmp push inc jns sub dec cmpsl fs cmpsl add or int3 xchg imul ljmp xor pop xchg mov outsb lock icebp hlt lret or and mov xlat cltd frstor ret out in out loop cltd ss cmp cmp cmp and jns into and mov ret dec lret stos jne cli repnz dec mov pop mov mov mov outsb cwtl or adc xchg rcll pop ret scas sub aam xchg scas mov fwait gs clc mov aaa mov daa ljmp xchg mov sbb xor add mov jecxz mov dec mov mov push and scas hlt (bad) add arpl mov (bad) mov movsl leave into push pop xor loop sar inc jb add mov mov inc pop and xchg xor jl fisubl je scas ljmp mov stc push add sub mov pop cmpsb adc mov mov mov and fs add pop adc popf xchg stos gs fdivl dec cmp mov dec jns lahf imul and loope sar outsl mov rol je sbb jo out movzbl adc xor mov bnd xor movsl pop cmp jae sub add ljmp push sub pop pop xor sbb cmp dec add or jne dec push adc push inc loop add xlat rcrl dec xchg cmp sub out js xchg stc stos in lods dec (bad) fs sub push jg push out jns and in mov or std in (bad) mov add pop adc mov sub scas jge xchg jmp (bad) test xor mov leave das cld ds mov pop xor mov or xor add xchg shlb lods or jp arpl ljmp cltd in dec stos cwtl lods or dec xor lahf mov xchg cwtl jo xchg jecxz aad jbe in movsl fs nop xchg and jbe pop jge xchg mov add push jo mov popf dec xor fsub push stos mov jecxz push call daa add mov leave add fidivr int3 std mov mov push cmpl popf xchg or inc dec pop mov xor mov in fild repz mov mov jo loope sub or lcall xchg adc aad dec adc and dec les (bad) stc adc in repnz test mov pop jecxz inc pop push scas or push inc lods and shlb lret add aad movsl xchg into ja clc xchg and rclb mov pop push inc xchg lcall daa sti ret daa fnsave adc add daa (bad) daa out push inc repz cltd movsb out fcoml add test insl push or cmc out pusha in xchg xlat xchg jp (bad) ljmp mov out pop rorb mov cmp mov test push sub xchg arpl and fnstsw pop (bad) cmpsl inc imul lret fcmovnb or rclb dec push adc add das add stc das call mov nop and cltd or rcr dec xor enter mov and nop or icebp dec pop in in jbe cmp fiadd mov repnz (bad) xlat cmp imul mov sti pop jecxz xor xor dec push xor (bad) mov jg icebp stos sub pop rcrl mov sbb ficoml adc fstpt jo mov es or fcomi add pop xchg mov mov loop mov push pop inc in int sub lods add pop mov sub sahf daa pop out adcl call jl frstor jb inc pop nop rcrl loope icebp daa lret mov (bad) int3 mov into xchg hlt aam out xor inc inc cld sub jb out aad lea outsl shlb sub jne into mov push push das (bad) cs popa or sti and mov outsb jns repz jb out pop jmp pushf push mov mov sarb cmp ljmp daa xchg (bad) je repnz xchg lds mov negl mov xchg aad xlat icebp sub mov sub popa add cmp xchg fbstp jne subb mov mov ret mov push std outsb push or fidivrl sub adc rcr lcall xchg leave (bad) jns mov es mull nop clc lahf push inc push clc dec or daa lret pop mov ss dec mov in ret and loopne xor xchg fisubr mov repnz out push je pusha sbb adc mov inc pop inc pop jae adc add faddp in cwtl iret push mov inc (bad) cmc test or add push repnz cld sbb xor mov xchg push push adc add sub clc roll mull leave lock mov stc fiaddl cli add xchg sub out mov and sub out adc jae jmp insl or xor mov pop shlb xlat push or ja inc shrb xor fbstp and les icebp sahf ret push add (bad) cmp xor pop add test lret icebp fnstsw mov mov (bad) fisttpl sub repz lds or dec mov pop jno sub loop mov push adc inc lock es cltd adc rcl sbb or sub lods (bad) inc mov ljmp outsb mov movb ja jnp mov xchg jl dec lret xchg das into jl pop inc js (bad) mov mov (bad) ret mov sti mov je and repz lret mov mov mov sti pop or cld dec jmp outsl adc sti lea movsl repz daa mov mov ret in xchg and pop repnz jmp loop xchg test and loop mov and xchg negl inc ljmp inc (bad) xchg lcall fidivl xchg pop fistpl lods call xchg out das mov arpl push test mull push fs xchg sub mov pop stc test (bad) rclb xor cli call pushf mov iret mov or repnz insb add or xlat sahf mov call jecxz or mov push loopne add fadd sub sub test jmp lret shrb (bad) and call fsubrp imul sub loop mov mov sti into imul cli xchg lock call dec icebp scas pop push lahf arpl and pop and sub cs test push lods adc sti jnp and iret adc xorl jle mov xor mov in jo xor or sbb dec pop mov sub pop or imull fnsave leave out outsb in lock mov mov cld shll sub xchg fdiv sahf sub in cmpsl negl dec pop xchg data16 add xchg int3 mov mov clc pop test mov (bad) ja jmp push pop mov pop ret aam mull (bad) call adc pop sub mov and and das in out lds idivb jecxz xchg int3 pop shrb (bad) stos sub cmp pop add mov or xor or lock lahf pop push jmp lcall into rcrb movsb scas int3 mov mov cmp cwtl push fistpll lahf pop mov mov xlat push jne inc lret aad clc pop addr16 loop jne out mov test pop aas test or pop cmp adc dec adc pushf add cmp imul mov hlt push fdivl aam adc cmp mov fxch cld jecxz sub cmp jne mov (bad) push dec push inc push jge mov push bnd scas fs (bad) icebp mov dec adc mov push mov fdivs adc mov push shrl imul or (bad) pop out dec cwtl mov pop leave scas sub dec ret subb insb cs mov fnstcw shll add push addr16 xchg mov (bad) xor xor mull pop es fs sub data16 pop push push data16 cwtl push fisttpl test push adc jbe (bad) daa push testl stos lcall popf lds sub popf sarl movzbl sub adc sbb mov lds mov inc inc orb xor sub call enter mov fisub dec shrl movb adc jge mov rcrl push movsb les test sarb or inc jmp mov (bad) cld sub test call hlt (bad) scas test sbb dec leave jmp jns sti decl loop aam push xchg push (bad) push inc pop xor lods mov mov nop or (bad) mov inc jmp (bad) sub out mov jns imul clc or iret mov je sbb idivb jne ret pop popa das mov adcb int3 out and or mov loope xor mov bnd ja (bad) mov sti sub test std xor stc cmp lea sarl into jmp mov aas xchg out push lcall jne stc dec adc lods stos xchg jmp mov sbb stc pop (bad) sub scas xchg mov xor adc mov stos subb clc movsb (bad) cld (bad) loope and jp fistp ss sub jg movsl rcll ret dec (bad) movsl inc pop cmc imul lods add sub pop repnz xor ret leave repnz fs clc cmp lods into repz mov (bad) arpl fadds ljmp mov movsb mov dec push dec lods loop popf adc sahf imul xor lock xchg inc fisub xchg lret outsb jmp fistl inc push inc adc cli ja sub pop fs in push enter mov push fnsave sbb aad or sub dec out jno dec imulb adc loopne jmp xchg inc mov add mov int3 add jae jne mov gs sub sti jnp mov stos sub outsl out pop popa mov pop pop or test add adc dec jp (bad) mov jmp idivb imul and push std inc and imul ret jge enter jmp push add scas popf mov cmp add (bad) repnz in movsb push imul jne push mov pop (bad) arpl mov sub and or xor pop jno mov inc test sub mov push xor sti jl out pop mov fmul and xchg pop adc jg fdivrl sbb stos aas adc cmpsl inc push pop jo subb adc test (bad) fcoms inc or sarl (bad) data16 mov or call in fsubs sbb test mov and sub (bad) (bad) negl nop push jl daa hlt inc push aad lcall jnp xchg cli mov fsubs test mov pop leave mov loope stos fidivrl fcoml dec ja xor movb xchg outsb shrl popa push and cs xchg sarl lahf sbb (bad) push xchg icebp in pusha mov aad xchg ret scas mov and xor sarl ja imul (bad) je xor sbb xor sub (bad) icebp outsl lea sub repz adc push pusha ret ret push cld daa push or rolb das aad aaa ljmp les repnz fist ss or add out lock sub mov negl jp (bad) ror (bad) sarb js or cmpsb loope sub test mov in or mov cmp int3 or rclb fiadd mov nop sbb mov sub and add sub lods movsb dec push mov fdivrs ja sarb mov scas mov dec call xchg mov or mov pop or cmp xlat out mov (bad) clc call mov mov add into add xor mov (bad) (bad) repz adc cmp mov cwtl xchg lret cmpsb fildl push leave or mov mov dec enter lret popa push pop pop out sub mov outsl mov push push aam das jae push (bad) lea subl popa cmc cs js pop xor mov jecxz mov and mov fist test sub idivl or adc cmp inc outsb lods push mov pop loope (bad) sub es iret dec or lret (bad) imul pop mov add and sub dec xchg out flds shr mov adc std jl push stc ficom mov xchg aam add (bad) sbb or xor fcomps clc push jmp jge inc mov and or or mov out lahf loop push mov loop mov insl sbb dec cmp add pop scas sub jo push mov mov mov inc jp js cmp sub movsl push inc inc or scas jns cmp rorl pop fildll pop mov lret add xor mov shrl call fisubl mov fbld adc pushl daa mov mov cmc shrl and xchg adc xlat clc pop mov std (bad) dec or mov inc xchg bnd into jle jae mov stos cli (bad) mov mov pop icebp xchg xchg or icebp jmp lret (bad) adc fcompl pop cli fs cld fimul mov sbb mov pop (bad) sub add loop jge push or sub leave fisubrl insb pusha int adc clc sarb mov out cmc and sub repnz (bad) inc std mov std mov mov imul mov dec sarb xor or adcb test sbb mov out stos sub jae dec jecxz rcll lret cmp mov lods pop mov stc inc dec xor testb fnstenv jb jle daa (bad) mov dec dec cld imul fucomi mov xchg and adc push cmp and or add mov test call fisttpll jbe mov xlat outsb jle shr cmp cmc cmp and or divl dec repnz jmp and mov xlat mov fildl push xor lea pop pushf das stc dec repz inc inc (bad) jle mov add pop sbb and pop sub cld sti (bad) into mov out out loop movsl lahf xor cmp push or shlb (bad) fidivrl insl pop aas xchg cmpsb clc pop ftst (bad) jp sub (bad) add shrl rol mov sub fisub jl (bad) mov sti mov lret cmpsb sbb out sub repz or pop (bad) xor cli mov das out xchg jne test pop inc xor and push lcall inc paddusw jp mov (bad) iret scas test pop mov pop mov mov popf jne jle mov out in dec or xchg or jbe rorl inc inc mov mov lock xor pop stc adc out mov inc push xor dec mov xor xchg sti dec or leave jne mov or stc jbe fnsave (bad) xlat movsb xor outsl jmp sub repnz out sub out pop movsb int loopne,pn into mov das lods inc mov mov jg add mov fstpt push fcmovu (bad) ss shlb mov leave inc rcrl cli sub jl (bad) xor ja sbb jecxz daa or jl insb dec ret xlat clc sbb into js or inc and ja in (bad) lret negb pushf and decl and xchg gs xchg mov in and add pop lea ds inc (bad) mov mov mov repnz sbb xchg jl (bad) mov decb pop xor sti pushf inc decb mov cmp out (bad) imulb pop lds cmp cmp push out scas mov add mov adc out je push inc push dec pusha popf push daa icebp sub and jge aad daa (bad) (bad) dec pop and mov imul (bad) lock dec mov xchg pop add push out xchg add sbb clc adcl fisubl adc adc in gs xlat cmpsl add or sub push push dec mov pop sub notb xchg or in mov pop cmpb and mov pop adc out xchg dec clc mov mov fcom divl fs es ss jle add xor mov adc fcomi mov mov (bad) out sub mov xlat dec sub inc and push jle inc aaa dec pop mov dec sub adc pop push mulb out (bad) mov mov fwait dec les clc pop mov push cld pop mov or jmp inc notl adc loop mov insl jne je push inc and mov pop (bad) ret pop scas (bad) into add (bad) cmp xor outsb test pop orb push pop push mov outsb cs push cwtl push cmc cltd add jbe dec call lods pop leave outsb frstor rcrb xor mov jno mov cmc or aad (bad) mov dec clc adc sub ja push je or pop push inc ret ja insl inc das pop xor out xor cltd pop jmp loope (bad) and push out ret sub pop ds cs xor in jbe inc icebp imul push or (bad) jno mov rorl sub into or xlat add jge dec mov mov sub lock or orl (bad) xchg mov rcrb and jg ret mov lds and idivl xchg mov int3 adc dec dec fistp scas sub add mov jne mov xor mov or stos and mov das push xor mov push (bad) mov dec cwtl sbb or pushf repnz sub mov xchg xchg rclb jmp imull stos pop rcrb enter add lea test mov xor fbld negb add in movsl xor (bad) leave sbb lret into inc adc mov sub jbe cmp jle push mov icebp icebp jge xor hlt (bad) outsl or sub dec mov iret sub push ffree dec or mov cmp or push mov lret jne fs xchg and repnz mov sahf pop in into or jmp dec out sub divb (bad) fmul scas cmp sarb in mov call mov mov ljmp in stos mov and lret adc sub jne inc dec out mov pop (bad) (bad) sub pop ss (bad) pop push cwtl push mov pop in and xor cwtl push fnstenv call gs mov ja (bad) jmp xor sbb sub inc jp je popf jg push xchg add jp sbb add fstpl cmc dec outsl xor jns movsb mov notl (bad) xor out sub nop mov dec mov sar (bad) add out or mov jl add sub add cld rorb sub cltd stc push xchg sti or mov jne sub pushf xchg ret sub cmp pop out addl pop adc jmp test scas loop fldl ja pop clc cmc sub mov jl scas inc shrb add xor xor sub or pop insl sub (bad) mov or test fcomp inc insb push cmp push pusha sub sub dec cwtl pop mov xor lods jne or dec xchg in adc push adc sub popa jle mov (bad) sub sub jae push insb leave pop arpl pop fistpll and mov sbbl test pushf pop and sbb cwtl xlat lds (bad) dec sti adc sub cs cmp lahf adc test sub ljmp leave fstpl jmp ret push xor rorl dec lcall ret lret mov jp leave mov mov xchg loope and leave loope fstp std lret jb (bad) jmp loop xchg mov mov in xor and imul sbb cmp test lret (bad) je and and enter (bad) sti xchg pop into stos sub xchg lahf xchg clc fisttp jl pop dec xor stc pop fiaddl jno or mov icebp push xchg push scas sub mov mov imul ja mov jne inc xor xor lods pop dec test arpl adc or notb xchg or jmp mov push sub pop pushf daa inc aad xor add imul repz pop into mov popf test rsqrtps lret (bad) cmp popa pop loop cwtl mov cmc out sub dec dec adc mov mov dec cmp cmp pop lock pop xchg jmp lahf sub mov adc or mov (bad) mov inc push mov (bad) and lcall mov (bad) sub loopne mov incl add xor sub repnz or fldcw cmpsl stc cmpsb icebp or mov xchg cmp scas sub jo jne jge loope pop sub jp pop out lods fwait in pop jbe std xchg jge out nop sub mov jnp or lret lret idivl jl xor add popf inc mov daa or cmpb ljmp xchg stc int3 cli mov mov js sub jle xchg mov cmp fist pop or mov jno xchg stc stos cmp (bad) xor leave inc pop xchg nop les das loope xchg lea xor data16 sub xor mov cmpsl mov mov mov fisubr stos jns inc out sub (bad) shll or scas daa pop jl pop nop ss lret aam pop icebp add xchg icebp xor dec mov lds lret push test addr16 mov adc cmc int3 ds mov or daa adc stos out fs sub out xor stos lret nop sub push xor lret sub out pushf mov pop pop cmp push push and sub jne and cmp (bad) (bad) int3 adcl pop sar inc test jnp lret idivl inc mov dec pop je,pt scas repz aam push inc insb pop mov xlat ret int3 ret lea sti movsb cmp ret sub xor xlat xor call repz cwtl inc inc adc (bad) sti mov das out out push pop pop and pop movsb lods pushf mov fist push and addr16 ja cltd stos adc jle mov mov pop pop nop lock mov xchg mov lret sub cltd and adc pop add fimul sar ljmp lods iret fisub inc or pop sbb popf aad call nop (bad) jae cmpsl dec clc cmpsl push jbe (bad) cmc mov sbb rorl fidivrl (bad) inc notb adc mov cmp add mov mov imul ret pop ljmp cltd test sub (bad) push (bad) dec and fldt sub pop adc xor icebp daa call mov xchg in cs mov (bad) sti arpl adc icebp stc cwtl xchg cwtl push movsb xchg mov ljmp xor mov addr16 sar bound add data16 sarl pop push data16 add stc dec loope jecxz repnz leave ljmp inc mov xchg vpsllw add cwtl dec std sub testl xor stos cld addr16 lret push cli scas jae or mov and sub data16 je lods and repz adc idivl out mov (bad) or lock xor push pop dec loop pop out pop lahf adc pop ret mov add push pop mov xlat mov popf add out ljmp push push in or pop sub out cmp adc fstpt in cmp sub cli sub idivl or lock ljmp mov xchg inc pop xor sub sti pop fs pop nop lcall cmpsl js xchg fisub insb mov leave mov cmp xor pop cld repz cmpsb lea pop xlat inc in mov mov mov jge (bad) pop and shll push add movlps imul outsb stos inc mov (bad) mov xor add xor xchg push jle ficom pop mov pop out das mov mov cld test outsl mov out jg out add adc jle call xchg xor iret jae mov mov lods (bad) add mov or shrl mov jmp sti leave hlt sbb repnz sub ret mov or insb adc or dec out mov adc sbb add push scas or js jp cltd cmpsl mov icebp aas aas cld add rcll mov daa stc ja and add fdivrp enter subb jo push sub cli cltd jge mov fwait adc push aam les imul mov out repnz xlat scas or jmp mov repz inc sub add negb push mov add mov stos test movsl popf push (bad) push sbb xchg repz shrl xor push cmp adc mov in bnd pop ljmp out adc scas sub mov ret aas and add pop sar cmp dec fwait repnz pushf cs insb mov mov repz xor jno test (bad) mov cli pop mov adc popf mov cmc xchg rclb (bad) movsb rorb add or (bad) fwait pop in cmpsl jnp test lcall in fstl pop push mov les adc test push or jmp in stos mulb repz push mov dec jmp dec scas into out inc cmp push fisttp fucomi and out dec lcall in stos mov cmpsb flds stc mov xchg out push jecxz addr16 or fldt notb cmp sub insl add push sbb mov int3 sub (bad) mov xchg lcall mov jge clc xor int3 pop cmovb push ljmp add jmp sub push insb push mov mov adcb push sub lret popa jb dec or push mov clc xchg mov bnd push mov add stos cmpsl fbld repz es mov stos stc insl xlat pop cmc divb jge fcmove fsubrl test repz xchg out dec jmp cmpl inc inc (bad) mov aad xchg ret clc roll pop gs push push and mov insl ds mov sub jne sub or pop push lcall out sub mov and imul and iret jg mov test add xchg xchg xor gs scas out mov adc fisubl add lcall es mov fsubl dec icebp inc pop xor dec and pushl mov and add sub fild out dec imul mov rolb mov add mov lods cli jecxz pop test dec mov pop ljmp (bad) aad mov mov bound cltd mov xor outsl out daa and (bad) dec xlat addb aaa leave negl pushf daa ret mov aaa add mov push adc mov xorb enter dec stc fs mov or sub idivb adc sti fmull dec cmp (bad) into and test in or out sub mov cmpsl push sub push gs lea xorb and mov fucomip xchg mov mov push push inc iret pushl popf popa int add mov aad out (bad) mov pop movsb push sub clc pop subb stos mov (bad) fisttpll imul fbld bound mov ret repnz xlat mov fbstp dec add cli xor jg stc test mov mov push and xlat rcl cmpsb shrb and imul sub inc and push out and adc xchg mov xchg lods dec out cld shl aad jmp sub stos xor aas push dec pushf jle xchg scas pop bound pushf ret in mov mov and int push jnp icebp sti pusha add xor movsb inc push and cli xor mov lods jnp adc jnp lods out and (bad) in or pop into daa pop mov xchg stc repnz ret imulb rcrb pop cmc pop js or xchg mov xchg ret xor mulb or push pop mov xchg enter sti loopne (bad) loop lret or lods sub (bad) addr16 jbe gs (bad) repnz xchg int das loop dec (bad) inc cmp lcall cmp rcrl add xor jp xorb adc mov shll inc add rorb mov mov popa insl ficom leave cmc ljmp in lret jmp daa xor mov repnz (bad) mov or (bad) jns jmp lods fisubr rcl out lahf insb cmc xchg cmc xor shrb add mov daa and cmc cmp lods cld dec fst outsl lds pop xchg mov (bad) mov mov push ds sti and or or sub add push mov adc mov and xchg pop sahf loope out mov out outsb inc add out das mov pop (bad) jg dec jmp shlb and ss or jge out add dec test xor push lret loop (bad) pushl loop cmp xchg jmp sti xor add out mov das jmp lea or (bad) jns push sub mov and (bad) mov pop jo push mov mov imul dec pop xchg jmp pop sbb cmp xchg fdivp jne bound pop jmp jp insl lods pop mov jo and cmp cmpsl pusha es mov add sbb adc rcrl sub and mov add popa adc leave jb add push push or mov cltd out pop cmp add fadds push mov add xlat jno dec aad rcrl (bad) sub pop push or and jno imul adcl dec testl add mov push push incb cmc mov xchg imul std out mov aaa cmp clc scas ljmp mov or rcrl ja cli mov in cmp or or jnp mov jbe imul repnz lcall shr or jnp cmp dec mov (bad) and lret jl iret push test clc fsts imul dec test (bad) or xchg loop in sub scas pop shr ja dec dec and out mov ror sub cmc push lret mov cmp or incb sub cmpsb xchg daa pushw mov and or dec push das pop mov mov test xor out mov inc inc jp sbb mov sub (bad) pushl shlb adc or fild ss push add jno inc add or and (bad) fucomi fisubl sub cmp jae xchg daa lret lds jp rcr push mov xor out sub xchg sbb cwtl mov mov mov pop sub das in add int js jp jbe test shrb roll push loop sarl inc xchg mov and ficompl jmp cmp (bad) (bad) negb xor pop pop and adc (bad) sarb xchg jnp xchg xchg sub xchg mov leave lahf jno inc lret mov fs or jno mov push (bad) mov insb dec add sbb fldt aad or dec test (bad) add jnp sub inc sub imul pop push ja xlat (bad) icebp adc (bad) jp xchg cwtl mov add fldenv test mov sub aam mov xlat out xor xor in add aam sub pop mov sub cli cs jbe (bad) push or nop jne inc sbb ret dec (bad) inc bound popf decb push push fdivr push fstl push xlat in leave cmc out repnz in test push push repz loop bound ja adc clc sub sub lret dec sbb sub scas gs mov or or and (bad) mov jecxz sub idivl ret repnz mov je mov or and pop jbe (bad) jno loopne cmp imul pop sbb repnz and jp cmc sti mov lret sub lret jp jmp aad aaa push (bad) mov lret pop add in dec xor roll movsbl imul (bad) mov scas lret mov adc or push push loopne or jge jg sub notl clc lahf into xor fistpll test stos fs sbb sub in gs out sbb lcall fisttpll lahf aam lods lock mov leave jmp pushw out jge inc out sbb sti mov leave pop sub or pushf aaa pop hlt dec or aad cmpsb adc xor mov and pushf lcall sub pop pop mov mov jge pop mov inc add dec (bad) lret xor sub or ret popf sub es mov sbb test or sub ret adc imul inc jno dec xor sub cld call sub lahf push sti sub std sbb dec sub mov adc mov pop sti fxch outsl repz mov adcl daa or inc dec xlat xchg cmpsl mov jle lods fist pop mov push mov mov das movsl (bad) insl sub push jnp add cmp and std xchg scas sub push lea or fdivrs mov hlt (bad) addr16 lret mov fdiv jmp jae mov shlb test push loopne xor push mov xor mov (bad) push jne mov sbb xor jbe bound lcall jmp leave pop xchg ss and loopne ljmp pop or add leave inc rcl dec lret push icebp pusha ret dec mov push int adc je insb repnz mov jbe jmp lds ret cmpsb mov pop cmp int3 ss (bad) or cmp cmpsl pop and into jg addr16 iret mov adc mov and adc jl insl dec imul jp cli gs cmpsl jge lods ficoml scas xchg scas jbe pushf popf or movsl stos fsts repz js or into aad pop and stos sub jp xchg aaa or cltd and fs ss jge cmp ficompl insb jne ret push das jmp mov jno inc neg out insb push and xchg sti xor lret cmp add lahf icebp (bad) mov pop push jmp adc cs nop mov ja sbb (bad) pop mov ds cmpsl out and pop xor sub push bound into adc or fildl (bad) add jg pop or add push and cmp test int3 mov cmp out repnz jb ficom xchg out push outsb es mov scas lret inc dec test hlt or loope xor scas add lock insl and rcr cmp fdivrl pop pop std imul add (bad) mov clc movsb cmpsl or loope mov (bad) sbb mov lahf lcall or pop inc sbb imul inc pop push sub xchg movsl fdivrl out repnz movsl mov out cmp leave out cmp pop jle mov jb les cli bound sarl outsl xlat add pop enter adc mov pop sbb dec or add mov push pop iret mov ret and xor sub cmpsl jns leave fs daa and ja insl xlat mov js dec (bad) cmpsb lods and lods stc imul int3 and pop stc jb (bad) mov out mov xchg loopne jg daa mov sub fmuls movb adc fsubrs icebp fs mov push out add sub (bad) xor jge and in xchg lahf rcr mov outsl (bad) cs in lods pop xor into aas sub pop (bad) mov ljmp jl jmp scas mov pop jg call icebp mov mov setle lds lret stos enter ds lds mov push in fstpl lret xor or push add mov out or out into jo neg es or mov mov loop jns leave imull mov and lcall pop jmp orb test fdivl sub mulb add pop sbb sti mov stc adc add cli sub mov or repz hlt inc xchg lods jns outsl das notl repz cmp mov call stc pop push jp sub jnp loope cmpsl fstps addr16 (bad) jg mov add add xor pop std jnp xor mov rcrb mov lret dec cmpsb and push insb push xchg push add push (bad) mov fstl sub stos (bad) out mov scas lods inc in idivb cmpsl mov xor jg adcb mov sahf fistl or (bad) pop mov cvtpi2ps dec and ret mov fwait xchg pop push outsl pop clc or lods fdivs daa ljmp in bound xabort and test or mov cmp or mov push jmp add andb in test dec pop out arpl sub or add leave push roll cmp icebp jp add leave out jns mov fcomp ljmp imul (bad) pop daa pop jns repnz mov icebp dec leave lea add jmp cmp sub test (bad) jo or repnz jmp leave inc push push stos mov cmp sub daa outsl jo mov sub leave pop inc mov dec ljmp fld (bad) leave jns inc mov in xchg fsub adc push cmpsb dec cmp jg loopne fstps push xor push sub mov push pop pushl out mov out jne (bad) jp rcll dec push into dec ss push and popf lock xchg jae and das (bad) adc push cwtl xor popf je pop fistp imul xor cs mov mov int3 mulb mov xchg jmp es push aad icebp rcrl lahf out popa dec ja pop test xor ljmp inc add pusha or je push cs xchg out sub ret cmp lret push fisubr pop inc add sub out lahf jns addr16 or pop jle xor lret ds out pop imulb bnd lret fs fild push fadds xchg sbb xor loope sub fadds outsb push push cli sub cmp and repnz push pushf sbb xchg stc sub jmp or push xchg icebp mov ret jmp xor bound mov shrl and sub inc jno insb dec int3 subb cli movsw push jg and fistl and xor das aam jae ja jnp arpl mov in rcll negl movsl ljmp jg pop cmp mov sbb aad mov loop pop mov jne and out inc sbb adc ja clc pop adc movsl test stos out sub inc or leave rorl mov pop (bad) daa inc xorl mov xchg stos lock xchg (bad) lret jno or (bad) or mov ret notl outsb mov lods jo loope out cmpsb loopne iret sub lret sub xchg jno mov dec push pop sub (bad) pop or lods jb mulb mov arpl xchg notl sub dec xlat das jns popa mov cli bound jle ret notl cmpsl cmc cmp out mov jmp das nop not mov loopne popf mov call pop int3 out mov dec or mov fcmovnbe xchg sub cld or not icebp mov and or and shrb adc cmp add jmp jns xchg stc mov cmpsl add and stos lods adc push bound lds add (bad) xor frstor adc cmpsl rorl add xlat sub dec das lock cli std sti aam insb es push pop loopne cmp leave inc cmp add cs (bad) aaa das aad mov mov or mov cld cmpsl outsl push or or cmp ret push inc or jnp in xor add pop pop out je out divl push mov stos pushf sbb cli aaa xchg xor push mov testl fiadd out ds ret fimul outsb mov mov je add fdivrl gs mov and xchg mov cwtl push xor pop or xor call in in add jmp into jbe fs push jmp lds xor jmp lds ljmp divb jg comisd (bad) sbb les int imull aaa push cmp pmaxsw sub lret loope sbbb push testb shrl cli sub mov sbb std sahf sbb adc movsl lods or sub add push sbb popf aad std xchg sbb pop jmp aad xchg in xchg mov inc push cli leave mov pusha jnp out jecxz pop loop sbb (bad) out sub jle leave insl xor push daa ljmp sbb les sbb insb (bad) test flds sub sub imulb sub pushf in or enter ljmp rorb imul inc repz pop ret mov dec leave fidivrl popa and (bad) cltd adc inc out add push arpl or mov sar jnp add lods push mov mov enter xor lahf dec jns movsl mov push jecxz dec inc mov push xchg dec mov mov sub mov lods out test jle and inc mov dec enter pop sahf jmp jg jecxz jb lret (bad) xlat push outsb dec xor (bad) and dec jg rcrb aaa imul das mov pusha daa lret out lcall pop push lret test cs add or iret cmp lds mov push xchg push dec sub add mov cmpsl xor jae fcomp aas sub pop movsl imul mov sub xchg into and lret jno jle call jmp mov arpl std pop sub sbb (bad) jle push into sub loope push cwtl sub adc adc adc sub pushf sub adc push cmp xorb mov pop decb jb mov stc push int dec cmp sub lret and push push or mov sbb mov jge jb sarl inc inc dec js and dec (bad) mov cmp ret ja sub pop inc inc push xor add bnd push out notl pop rcll add mov xor out mov add inc pop test std lock dec add sbb sub or adc lret loope push imul (bad) aad sbbl mov ror adc dec icebp jmp sub push mov scas bound out outsb push or in xchg jne ja fmuls mov pop jge popf dec mull test out and mov cli lea sub adc mov inc loop sbb xchg or mov sub xorb mov ljmp add (bad) pop lret (bad) sub sub xor sub das xor scas fmull rol add movsl int jecxz xchg ljmp rcl mov mov repz push mov mov cmp mov mov push xchg sub pop inc in or (bad) rol or flds ret mov orl jnp xor lret mov adc mov mov sbb out icebp fmulp bound fistpll (bad) mov faddl fldenv addl pop stos pop add lret pop outsl xor icebp mov out dec (bad) call leave icebp push vmovss lcall jecxz xchg lret xchg dec jae push das lcall xchg ljmp mov icebp ret jbe jb pop add fsubrl jg test ss jno scas repz ret jnp sub popa cmp decb out shr sub mov xchg es push outsb daa jno pop sti stos mov dec test int add out pop call adc cmp test mov add jns dec or pop dec mov clc sub xor icebp jns clc jl lret jge adc jo dec pop faddl ret mov push dec stos int add add mov sub adc (bad) enter cmc mov popa push inc pop pop test shlb cmp cs out pop xchg inc fs xchg xchg pop icebp bound mov scas inc push cmp cmp add and push sub jb sub insb movsl daa movsl dec jb pop xor jmp iret call sti mov jbe jmp cs shl leave movsb pop cs ficom push push loope push pop je icebp scas mov lcall xlat in pop shr mov das je cmpsl cmc adc mov call lret ds testl insl fildll pop push in out xor div sub pop push push (bad) mov mov jb sub and dec fbld mov sahf pop xor stos inc shlb xchg stos sub outsb ret push (bad) pop push pop pop inc lock es pop movb or cmp shrb sbb lret mov (bad) or leave sub pop mov pop rorl xchg leave jne hlt mov and pop xor add mov test sub ret bndstx cltd shr cwtl movsb out pop mov jge loope cmp mov iret ljmp mov gs ljmp int3 ja jmp inc lods xlat mov push sbb sbb push jmp mov lock xorb jmp ficoml push cmc push dec or dec movsl aam add sub mov (bad) hlt stos jecxz add and mov pop rclb pushf jmp mov ret jbe and sarb mov jns imul ja imul sub dec adc and pushl inc in and test in js add or sub sub inc leave idiv dec push movsl xchg repnz (bad) xchg jl jb in popa lahf mov in jno (bad) movl pop cmp mov pop out dec test loop jg sub fstps lods adc inc pop (bad) or push pop imul fistpl cmp dec and xchg sub ret add cmp iret das xor repz mov pop sub mov repnz dec cmp and or jg loop (bad) das loopne out jp loopne cwtl add cmpsb iret sub movsb pop add int and add (bad) jmp dec fs jo or adc daa add push pushf bound fnstcw icebp aaa xor sar mov mov sbb mov xlat cmc rcll xchg and push (bad) jns cmpsb jge or insb dec hlt or imul lods push mov out mov popf mov dec mov sub xor jmp pop das jae add pop dec pop push pushl mov popa sub sub lcall xor fistp int3 pop xor lret xor stos xor bound insb pusha cs lea pop add mov and ret jg pop dec and pop or mov mov mov xchg pop divb dec pop xchg mov das xor pop mov in jb adc xchg mov ret push mov mov in pop repz dec out test out mov and into mov push sub aam fiadd (bad) sar cmc out sbb or dec pop pop in sbb leave imull dec bound ljmp out cs sub xor fnstcw lods lds stos cwtl fldt mov cli lds mov or lret pop mov pop jbe dec jne gs jae or leave dec add repz icebp scas mov pop movsb loopne mov xchg dec dec push pop mov (bad) aad xchg inc jno pop mov rclb xor stos lds cli mov ret rclb xchg lcall xchg xchg and scas nop jo dec fwait cmc jle xor (bad) sub int3 mov ja (bad) rep lret (bad) dec stos nop (bad) lret mov sub les pop out adc repnz push mov js aad dec dec lret pop push xor (bad) mov and fildl cltd xchg xor push mov inc mov pop (bad) popa adc mov or and sbb sub test das fcomp jl and shr (bad) sub jo daa push cmpsb sub adc cmp dec pop add mov testb push rol mov iret rcrb out iret imul ficompl cmpsb adc fcoms mov jnp mov sub in jno push lds sub xchg lock ret daa repnz movsb pop cmc loope ret bound aas lret xor leave cmp jmp out dec mov fild jbe (bad) push ljmp aad sub adc stc dec decb inc sub dec or (bad) std in aaa movsb xlat push push mov shlb xlat into cwtl mov hlt jmp pop xor mov or aas pop inc lds sub add cmp subb inc into push ss add mov test or lods sub es (bad) lock lret leave and stc pop dec jg mov pop xchg mov mov inc imul pop add mov daa nop push xor and xor decb or xor lret fsub ret or cli popf jle enter fldl fwait and pushf mov mov xchg cmp test (bad) xchg and sbb sub leave mov sahf in (bad) ja ret jnp xor xor sub xor int3 jne repnz fld xchg sub sarb rol or xor mov js jmp xor pop fsubrp pop in rorl or cmp mov cmp sub hlt add clc in adc hlt jge (bad) and (bad) dec ficom sbb mov mov stc and jo xlat or popf push push pop out jecxz mov mov leave add cmpsb shrb and ljmp jne xor sub mov mov jl leave ficomp repnz aam ss sub fstl (bad) jnp mov rcrw dec pushf sub mov dec mov adc dec xor fs push pusha ljmp movsb inc arpl pmullw jecxz test adc pop outsl aad les mov mov out sbb ds adc enter mov cmp mov cs mov out and repnz push ret lds xchg sbb xchg (bad) mov and dec jle or sbb lea mov and rorb test (bad) pop mov pop push mov xchg insb jae pop mov movsl icebp shll adc jne pop push jnp out push adc out push push (bad) scas testb adc push dec outsb inc jp pop (bad) stc shll add jns jbe int3 in push fdivr leave in jno mov sub hlt jp bound aam dec shr les add push mov fistp sub add fdiv jb sub jmp push or ret xor shrb jle pop jp pop decl fild dec or mov pop ret mov ret sub lret mov (bad) lret sub xor adc imull andb mov lea pop inc stos jp imul mov jg add mov xor mov inc mov mov rolb mov xor lods lret add in lods xor stc adc add push popf jp and sbb std pop insb scas std mov pop fsin dec adc mov jle scas outsl mov sub pop mov out cld mov (bad) (bad) sub rcrl or cld lds (bad) cmc push jnp inc movsl cli mov dec and scas lods lret stc ret in dec test addl into aad arpl (bad) out pmullw sub repnz or out jno sub int3 ffree in add aaa ljmp test jecxz in cli shl pop push and out adc cli dec sub ret mov pop xorb icebp jb sub (bad) jecxz inc stos dec cld jne sti cltd bnd xchg xchg sub inc das mov jmp and dec sbb adc and andb push pop sub movsl sbb (bad) cmp xor cwtl ret add jo sahf sub out cwtl cs sub stc mov out and and imul dec xorb out icebp mov movsb jle cmpsl cmc adc mov sbb in cltd add mov xor jg mov fdivr icebp cmpsb shrb repnz jb repz cld test xor xor loopne out cmpsb adc mov xchg stc jne fcmovnb push dec lret xlat dec add or stos lods rclb push test outsb xchg or or dec dec or cli cmp mov (bad) icebp mov inc (bad) cli mov mov nop shrb inc es mov xchg mov popf call pop sbb mov movsb rorb dec xor push ja lret test repz and enter mov (bad) jmp std (bad) stc pop xchg in stos (bad) adc sub add stos and repz lods push or lret dec xchg ret (bad) loopne pop jmp xor mov jnp and lret je adc cmp ja aad leave mov inc pop fisttpl sarl pop lahf mov das lret insb pop mov mov fldl lods (bad) je jg je cli and or xor and sub xor pop lcall ss xchg inc jmp insb jmp sub pop sbb dec mov push pop icebp scas loope shrl aas (bad) or adc mov or subl lahf push pushf icebp pop (bad) out sub mov dec scas xor (bad) pop dec mov mov popf and xchg xor and sub movzbl ljmp lock mov das bound divl push out sub cmp dec lret sub test inc jmp (bad) and jo sub push dec jo in out add add sub xor gs sti data16 js mov inc out push scas repz xchg cld std xlat and rorl cs xor dec xlat xor daa and in stc out shrl mov push pop sub push cmp push cmp in mov cli int3 (bad) and rclb ret push inc out es add xor ret mov mov int imul mov lods pop push cltd mov mov jl pushf pop and (bad) sub sub mov jne das pop inc sub mov jl (bad) dec mov mov and ljmp jae or xor adc xlat cs xchg (bad) cmp out sub sub xchg xor (bad) cli cs rcrl lds jns lods sarl push les add test out jge (bad) xor pop sub push negb push movsl into and out and push inc pop or outsb in je gs test call lret (bad) cs cltd inc xchg inc stc and push insb sub or aad adc sub dec jns notb pop lods and jle pop orb sub and dec (bad) xor lods sbb cltd or test xor push lock out lods adc mov jge mul test adc fstp das adc stos rcl (bad) mov cld and jecxz pop or pop and clc and icebp jg bound dec jbe pop bound out pop mov pushf aad mov outsl add xor ljmp imul mov lret mov shlb sub dec (bad) xor mov jg pop adc xor aam clc test out popf aaa leave sbb pop mov sbb sti mov and icebp inc add sahf push sbb adc sub sbb or or add (bad) mov in adc cwtl jge out pop mov adc std imull (bad) sar mov cmpsl sub or mov lcall ljmp xchg lds jg jecxz dec mov add fwait aad fimull inc shr outsl xchg sub xor xlat out fdivrl movsl and cmp add in xchg push mov cli jle sub mov sti cltd inc sub in sub dec jg insb loop add pop xchg fdivs inc xor fbstp (bad) ret mov mov std xchg (bad) lahf or fildl adc inc inc adc cli mov xorb mov add mov ljmp test ret popa cmpsb xor cs loope adc fistpll xlat sar shrl pusha cwtl rclb mov in ljmp mov mov add (bad) into iret jno pop cmp pop add scas fstpl and jecxz cltd rolb cli cmpsb mov add inc cmp fisubrl lea icebp sarl popf push mov mov sbb push daa lret pop push add mov jle or push dec repz mov repz fiaddl mov adc mov inc lahf notb mov daa pop add jne out and mov xchg jmp pop add inc push neg pop mov into dec and (bad) adc (bad) mov (bad) and stos ss pushf addr16 sysret cld jmp push pop call xchg clc flds js test pop es fmuls in inc ljmp xor pushf inc (bad) outsl je xor leave xor and dec push jnp test cmp scas cmpsb push js fsubrp mov or mov push cwtl sub push pop (bad) loopne std adc mov js and pop insb mov push or mov mov inc scas jp push xchg scas out dec lods jle add dec jmp mov out mov enter add in imul repz mov inc inc add mov ret icebp and scas clc add mov mov add adc sub insl pop out rcl (bad) les or out adc push cmc push int sbb pushf dec (bad) and push cs xor sub jbe arpl decb inc or add idivb jge mov jbe addps dec scas mov adc sub push fsubl ljmp mov (bad) nop dec xor fsts push or cmp les cmc pop dec dec or fldcw cmp std sbb dec (bad) int outsl int3 cmp xchg loopne jmp and add out lds jp addl sub jno leave pop jl sar enter bound cmpsb (bad) push ret lea or cmp adc mov ret and or sub cmc loop cmp fstl (bad) aad pop xlat stos xor add pop push in adc xchg sbb jne pop inc add fnstsw mov test fsubp push mov fisubr call mov pop sub test ret mov pop mov add sub cltd xchg push ret push jno xchg out mov pop in or pop add mov (bad) leave pop push inc mov push or fstpl cmpsl ret stc bound sarb jbe jb mov mov or lret add jecxz outsb mov jbe and xchg cli mov cld nop mov nop shrl xor pop inc mov das jo xchg jmp pop jecxz mull aaa mov sub cmc mov call loopne or cmp test jecxz pushf notl repz cmp inc addl mov or ljmp (bad) outsb gs shrl mov mov inc out mov pop imul push xor dec xor dec adc lds jg aad lock mov imul dec adc xor (bad) pop and hlt les icebp dec mov shrl fisubl ret cs and lods adc push (bad) sub inc enter cli sub shll adc mov das out sub dec xor and repnz adc imul mov sbb fwait test fs ss (bad) movsb cli mov adc out nop adc iret add jno out imul pop pop xchg push dec xor mov xor (bad) xlat jno movsl jbe out outsl xchg fnop dec dec sub mov add xor ja (bad) lods or sar push (bad) sti int mov pushl jnp adc stos mov das inc int3 sbb (bad) lret cmp adc cmp mov push push or fwait js stos mov decb loope jle lods sub aam (bad) xchg xlat mov sub mov pop sbb fwait add insb cmpsl jb and sbb xchg idiv pop movsb sti data16 mov jmp sbb xchg pop xchg lea (bad) push imul adc mov jg add cmp inc test sbb shl or mov das xor sbb lret xchg aam (bad) jmp cld push movsl xor and jle rcll pop ret jg call mov das out sub mov xchg stos mov leave (bad) aas cltd dec loop,pn shl lds xor in repnz pop sub jge addl sbb and in jns pop (bad) int and xor lock cli in pop or jmp push and gs xchg xchg jmp (bad) or mov out sub sbb sub push add xchg pop add pushf fmull adc (bad) jle sub shr lods lahf movsb mov add rcrl and inc imul sub (bad) shrl xchg shll sarb dec dec vsubss (bad) mov dec jecxz adc or adc xor xor lret sarb add jecxz pop in pop dec scas pushf sarb dec in xor jmp adc cld mov mov cmp sub (bad) sbb mull cmpsl push sbb les xor out or adc out mov dec mov push icebp add mov add mov jecxz dec jnp in pop mov (bad) cmp (bad) mov xor (bad) leave je pop inc jmp pop (bad) inc in add mov add jle test jmp add xor fstps imull sub add pop mov dec (bad) push sub mov or push pop cmp in xchg mov pusha loop fdivrs cmpsl jl jmp xor mov das or clc les test stc imul mov pop pop fsubrl jb xchg xchg daa dec mov cmp jmp adc sbb and and xchg push adc mov loope mov mov pop sbbb rol xor mov mov daa out or and fsts dec lods sub push sbb sbb testb or xchg mov sti sub adcl push jmp mov xor scas cmp cmc repz leave fcomi loopne xor add fistpll mov cli or pop xor pop out sub mov mov leave lret sub dec push insb mov mulb popf dec or push popf xorl sub js jmp jmp mov xchg sub xor xchg bound jno mov lock mov jne mov or jl imul ret lahf (bad) into repz adc sbb in pop (bad) xor mov mov cmp aaa xchg adc lock mov (bad) fbstp imul ja adc cmc mov hlt cmpsl call jge add flds dec xor dec push movsb scas adcb stos sub jp shr hlt xor daa ror jns sarb icebp aas repnz rcr ret loop sub sbb and mov mov (bad) mov and sub out xchg dec dec mov negl cltd sub add pusha mov mov movsl jb xor xchg xchg and or add ret lret lahf jns enter (bad) xor adcb mov or push adcb mov (bad) mov cwtl das pop sahf or jno mov xor mov jecxz stc push ret inc cs movzbl std rcrb pop or push js in ljmp xlat xchg mov out mov push jg cmp and fxtract daa leave dec test mov mov mov icebp scas dec xchg movsl push cs push mov lret lret in scas enter and push dec adc test xchg (bad) sub iret sahf imul loope sub dec mov (bad) stos jecxz dec and add fdivrp xor stc xchg (bad) fbstp daa pop xchg dec scas (bad) imul or add (bad) ljmp inc and cmpsb add loope (bad) push or mov out push out mov ds lret inc leave aaa and jae repz sahf mov mov mov add das pop cwtl sbb or lret or (bad) out lahf outsb test push dec and out data16 xlat je mov dec test insb jo cltd push out (bad) shrl or sub add pop sarl cmc das lret sub mov cmp xor pushf mov push stos sub in jb pop mov aas in and into movsl pushl out jnp sub xor pop and (bad) mov add ret std inc int3 mov xor or xor push orl out xchg divb loope cltd push leave cmp mov pop rorl das in cmp dec or inc lods nop or sub test lock fiaddl mov inc mov nop leave fdivp sub pop cmpsl inc ret mov dec jecxz in mov jl mov into or cmp ficom jmp mov mov mov shll xor add sub sub aad pop sub in mov jecxz add iret out pop and aas int loopne sub loopne add (bad) mov shll loop aad mov lock sbb movsl xor xchg call mov and dec xchg mov mov inc movsb out std leave cmp (bad) jp idiv mov loop xlat out daa adc (bad) into push scas push mov aad pop push rorl aaa add dec addr16 loop dec call pusha bound inc leave mov ljmp call sub inc rol dec xlat xchg stc adc dec cwtl adc mov or jmp call mov jge je pop sub lret inc and xlat push inc xchg jmp pop aaa xchg mov popf notb jo add xor xor xor jmp xor inc mov mov xlat mov das icebp popa mov imull jns xchg mov ss inc aad nop call mov addr16 xor sub cmp leave lods cmp mov push pop or pop xchg jge add cmp sbb mov mov dec popf cmp (bad) js sarl mov xchg shr add inc loop scas xor xor cmp icebp mov out mov xor mov xor sbb shlb (bad) xchg jmp sub mov fstps push daa dec mov xchg dec mov fwait daa roll and out lret mov pop imul inc sub cmp sub out dec ljmp mov lret sub sub mov lret cmpsl ret shrl sub jecxz adc cmp lcall pop aaa les inc mov and mov test lds dec xor sub std dec mov imul lret scas lret mov in adc ret mov aad cwtl daa ret daa (bad) jecxz cmp (bad) or push into cli dec ret xor mov mov lods jbe ret jl sbb xor out js mov hlt loop fildll pop cmp jb or and popa icebp je into jg in pop fs fdivrs push jl das inc pop and mov je les stos sub lahf fneni(8087 xchg or gs leave or jecxz lock mov adc daa cmc cltd aam pop adc cmpsb inc pushf add scas repnz movsb scas jmp pushf fucomp xchg xchg or pop mov bound icebp mov xor inc sahf cld or inc fnstenv mov inc outsl mov mov (bad) mov aad iret gs xor hlt (bad) shld shlb xchg fildl test das cltd mov int lea mov les sub mov add pop std dec mov outsb jp int mov xchg stos mov dec scas mov stos adc adc rcl adc fldcw mov xchg mov inc inc in (bad) or das ret scas (bad) jmp ljmp jmp aad mull dec shr xlat cwtl mov or xchg xor ja push cld jmp mov push adcb mov arpl sahf movsl mov add dec push or aaa sti inc and lahf adc jo pop push insb das push mov cmp pop adc ljmp sub mov and xor mov add test in sub ret add gs iret cli repnz mov sahf dec or (bad) call ljmp idivl scas sub (bad) jg shll or (bad) push and push in push popf gs movsb lock or or cwtl xor icebp jnp (bad) push xchg sub daa or jae lods mov pop sbb popf sub dec popf es std bnd imul xchg das pop xchg sub xchg xlat (bad) inc adc mov jbe pop pop decb (bad) cmpsb (bad) (bad) repz jb add xor push mov out jne sahf in jp fcmovb jg fisttpll inc jl mov cmp sti fisub arpl dec imul leave cmp adc out sbb cmpsb sbb sub insb mov push std insb test or dec jne mov mov inc lods popa xchg jne gs inc xor adc dec jmp into int3 shll jmp repz xchg mov call adc ss (bad) and xchg pop icebp push or dec rcll xor dec outsl or insb pop pusha data16 lcall (bad) imul fisubr and jecxz (bad) daa pop fistl mov (bad) jne xchg lods sti add mov aas mov les jmp std inc imull repz test push mov out inc loop jne sbb (bad) in pop xor or or pop pop lods movsl (bad) frstor or jg mov mov lods pusha hlt sti and loope sub (bad) mov xchg dec mov in ret mov xchg sub push cmp sub cmc cwtl cmc jecxz or ja xor mov daa mov sub jbe inc sub bnd movb stc rclb ror dec int3 ljmp (bad) les repnz in xchg daa mov mov and divb inc into aad dec addb or and mov lahf cld jo cmp clc (bad) cmpsb pushf xor out adc sub and adc inc inc ds repz repz add cmp cli cmc or pop dec xchg cs lds mov jl loope sub dec xchg add ja pusha ss rcrb std leave out les ret lahf roll jmp andb lret ljmp and mov add or out mov push popf (bad) or (bad) sbb mov sub or jo xchg dec ret (bad) scas dec mulb ljmp test or clc ficomp pop dec (bad) xor loop (bad) repz cmpsl xchg jge push std out jmp in cmc in xor fs or add lret pop cwtl sbb cwtl and mov sub popf ucomiss into das sub into dec inc cmp push shl adc lret mov test dec int3 lahf or pusha enter repz add std mov std cmp movsl sti mov das fsts jecxz mov lret and (bad) pop in push lret pop pop jg cmpsl daa cmc xor inc lret rorl movsl stc mov into scas mov xchg mov adc add pop das icebp addr16 loope mov into insb sub cltd mov adc pop ret loop sub arpl bound call sbb or stos mov vcvtsi2sdl mov pop gs sub fidiv in sub inc inc xor imul es loope inc cwtl es jmp xor ss movsb movb clc ds scas mov dec mov sbb hlt (bad) adc and cmp or (bad) aam jb jno mov lcall jmp leave cmp or pushf pop push fild and aad and mov jp (bad) out inc pop popa or popf sub iret inc lcall sbb push leave lcall mov subl sub xor mov out push sbb jl clc mov xor push out fnsave dec add std stos xchg (bad) cltd jns ss jle jmp fidivl mov ja dec adc call pop xor movsl hlt mov mov and add mov xchg clc inc mov or movsl ljmp cld clc je adc adc pop daa rolb notb stc jle fnstsw addr16 aad repnz (bad) lcall mov pop insl sbb xor cli adc cmp repz add stos mov ds sub mov jmp mov fbstp test lock and daa cmp icebp in addr16 xchg orb dec gs jmp sub mov jg pop xchg sub in out clc dec mov out negb mov ds in fdivr adc dec lahf mulb xchg mov (bad) mov sti lret sahf adc push scas int and pop fnstenv stos mov dec icebp cmovl leave loop mov sbb inc leave jne std xor rcrb mov pop xor ds adc shrb dec xor cli mov add mov es ds insb rcrl and sbb in les in mov das mov jge insl or lea (bad) jmp inc dec clc xchg push sub pop lret push inc das movsl jge lods fmul pop repnz xor ja adc dec (bad) (bad) sub aad xor repz cmp push mov sub leave rcr mov ljmp and inc cmp ja loop xchg cmpsb push test pop add xor jno or cs int or fnstenv add or pop ret sub cli mov xor (bad) jne or dec push or mov jns push in test pushf in xchg lock pop out mov notl jne clc (bad) cld jmp lret xor mov xchg xor adc test add cmp (bad) push imul pop inc aaa or ja popf fmulp and scas xor push push cli fcos jp mov mov adc ret sub or mov cmc xchg sbb mov icebp sub negl dec negl lret imulb fnstenv mov jmp pop mov xor outsl stos clc pop in sbb (bad) in mov xchg loopne movsl dec mov dec ja test sub jmp cmc imul out cmp xor pushf dec cmpsb aaa and mov add mov and fsubr pop adc sub xor adc andl jmp mov pand xchg aad popf popf mov cmp cwtl push test adc scas and (bad) frstor mov roll or add pusha and outsb out sahf xchg bound push icebp rorb add push mov (bad) icebp popf pop and movsl or add dec sbb nop (bad) mov scas xor (bad) aad out mov push pop hlt sub (bad) sub xor jge cs arpl add mov dec pop jns lods jne loope out xchg push pop cwtl xor in sub test ficoml xlat dec lods rorl (bad) lret xchg test lock mov lods cld adc mov cs (bad) mov stos iret test pop mov lods in cmp cmp negb push (bad) fldenv test movsb mov movsl dec jne mov fdivrs and jg dec mov bound aas or out dec call or add icebp inc fnstenv sub test push add aas sub (bad) loope adc or mov cmc or inc push sub jg push in repnz lret movsb dec js xchg idiv sbbl stc mov mov sub test ja or test popf andl xchg mov repnz mov push das cmp sti stos jmp sbb ret fldt and dec or pop es mov add mov sbb sti nop (bad) fwait xchg xchg idivb add out popf shrb xchg push out out and loop addr16 shrb out add xchg cmp (bad) mov mov mov cli test mov cwtl pop add xchg daa lret jg (bad) mov decl xchg in andb lea call mov xor inc xchg iret push rcrl (bad) nop xchg mov icebp ror jp jo mov bound pop fstl and push adc sti cwtl add push and fistl jb pop idiv sub xor push fwait jmp adc lret add and dec insb hlt sbb in sub lds lods push fisub cmp jmp push sbb jne aaa icebp pop pop and ret insb stos je dec das aad mov mov lods or lods cmpsl (bad) stos ret jbe push pop outsb (bad) sub out xchg cltd (bad) pop outsb mov cltd sub or mov dec int add mov enter iret stos xor repnz add push mov push insl into xchg mov push into sbb (bad) xchg push xchg mov pop into sbbb xor xchg repnz data16 and adc fsubrs pushf cli jb into imul scas popf cld and loope movsb imul cmp stc jp jbe leave dec xchg mov mov rcl sti jne sub fidivr addr16 push cli sub cmp add sti faddl push pop push insb dec ret cld std in mov or xchg mov pop push (bad) out jb outsb ds mov xlat lods aam (bad) and sub mov bound movzbl add dec pop imul fst mull pop pop adcl push fstpt xchg (bad) sub mov add call dec dec xlat in pop and push add (bad) sbb std fisttpl sub pop int3 out je jmp das inc dec scas repnz rorl adc push scas jge loope push dec das adc leave lret js mov push imul sahf out movsb jnp jne mov dec test lret ret pop xchg imul adc push pop orb push mov roll mov mov std fldt jmp cs pop push pop xchg roll in mov xchg xchg bound ret jnp ret push add mov mov in sbb xor icebp das jg inc dec xor ljmp xchg dec cli and dec add (bad) fstl add pusha cld repz leave and and mov (bad) mov loop cld xchg icebp repnz sub rcrl rorl fcoml loope jp pop lea loopne fbstp daa enter movsl std out xchg pushf add inc or mov jg push cli mov gs out mov rorl mov fbstp mov int push or (bad) sti bound xor or idiv inc test mov jb lcall mov push sub outsl mov test push mov cmp int3 mov mov clc mov ficom (bad) mov cmp pop and jge insb imul or xchg xor pop jle push sub jb pop pop jmp into mov and pop mov cmp or js arpl sub and mov jge inc (bad) mov jle divl pop ret xchg decl mov mov mov mov mov pop and push cs cmp ret (bad) cwtl jns xchg mov and inc ret jno xchg add movsl neg lret jge sahf sub out mov xchg adc add or ret call mov pop xchg mov jl mov addl mov mov push dec test dec add or sub out mov xchg enter lret lret flds cmpb data16 sbb xlat dec (bad) fnstsw clc sbb mov sub mov neg ret stc (bad) dec or adc movaps sub iret (bad) leave fpatan add clc xchg and jmp das add ret sbb cmp pop je gs jns sub pop add test mov xor cltd test movsl mov pop jo in xchg mov lds cmp push fmull sub dec xor cli aam stos clc aas mov or aaa mov stc and out cld jo jo xchg sbb ret cmp repnz sahf mov bnd dec lods sub lahf jbe movl icebp lret ret or mov add mov cs daa ss lahf sub out sub fmul (bad) (bad) and adc movsl pop push das in movsl xlat loop js mov lahf outsb pushf cld out xchg pop adc xchg shr mov jmp jp repz mov les xchg cli ja inc repnz mov lret inc dec call mov add loope aas lea dec xchg cmp mov push xor lret push out or stos pop push bound push stos lret decl stos (bad) mov xor inc add cmc inc mov ds jle mov adc data16 dec les ljmp (bad) sub and pushf jbe (bad) neg aad inc iret cmp test mov pop push imul scas cmc push mov lret mov mov or jns popf xlat mov popf (bad) decl jno xchg lret mov repnz sarl mov call inc mov inc jno aam adc mov jmp or inc or xchg lret bound mov iret fcompl lock icebp fcmovnb sub fsubl arpl rclb and add cmc sbb aas in in dec and mov dec and lret push xor adc int call and mov jns (bad) out and fsubs add scas stos jb ja xchg push pushl jns inc and aad dec sub dec mov mov inc gs in mov push xor mov jp aad and xchg mov cmp add sub mov test pop push xchg xor inc sub xor pop sub fwait outsb in inc popf clc lods movsb ret in out (bad) wbinvd xor lcall pop add mov sbb popa dec mov xchg (bad) sub sub in enter or mov xor (bad) jnp loopne out cmc jmp clc lret notl push out fs (bad) sub stos popf lods push addl mov outsl ja hlt adc sub and (bad) pop into repz test add or test jge dec pop push jb jg iret lret sub mov std xchg cmpsb mov mov popa leave notb mov add and sbb push mov dec sub sahf and mov js inc (bad) sub mov inc xor ja imul jo mov sub mov lret ja xchg aad test push xor sub inc sub out xchg das popa scas iret push adc lds outsb pusha subb rep dec mov xchg adcb popf pop push leave pop dec rcll jae add ja (bad) sub jecxz jae mov adc inc xlat fdivr lret mov sub frstor or in or mov ror lcall test pop loope aam add (bad) inc aaa pop sbbl out gs out mov lret out jns xor push loop incl cmpsb movsl adc xchg dec test stc enter dec gs or mov push outsb notl adc xchg icebp fnsave sub lock test lods dec test adc push lods mulb jno mov pop aas sub loop mov or shlb sub push mov fcomps mov xor adc (bad) mov jno imul jbe jmp or add into outsb nop mov adc xor pop add and shrb adc xlat mov sub inc sbb mov loope std jns xchg test test mov and jg enter mov testl mov lret sarl push pop data16 jns xchg out into out fs xor add add pop cmp fildll (bad) lcall xchg loop shr xchg push (bad) mov jp push (bad) repz divb test in lcall negb pop jae add movsl cmc jnp,pt inc (bad) mov notb pop push xchg jno jb pop push outsl test mov pop imul cmp sub sub fidivl jnp add pop cmp inc adc sub jnp xchg ljmp test and xchg (bad) push jbe adc mov inc ret mov (bad) fstp mov (bad) jno imul js pop mov cmp (bad) or adc add inc xor or lock fldcw or mov pop bound fst mov adc bound ret sar and daa testl jmp jg cmp (bad) fist or into add adc lahf iret add lret lret mov clc loope js in pop sub xchg or pop (bad) scas add nop mov sub fwait ds (bad) xor jae movsl jle daa fadd jecxz xor mul adc xor pushl mov inc or sub stc sbb add and jno and outsl je mov adc or push and inc and inc scas sub and dec sub std loop icebp add fisubl push pop ret loop jbe lret xchg lahf std lds push push adc cwtl lret jmp nop mov sub adc xchg js jne fcmovnbe fs push lret adc jle and lret push push inc push out loop xchg clc xchg rclb push repz pop ret out or out dec shrl out shlb (bad) (bad) sti mov idivl sub (bad) jge ret (bad) dec sub and jo inc jp scas call and loope call icebp inc xor or sbb dec clc inc sub loopne push or pushf call mov icebp hlt dec mov cmpsb mov push xchg push lahf fdivp imul add cmp stos sub mov out sub jg int3 mov pop outsl mov div jno dec int push xlat jns dec insb adc push fdivs fsubl xor push rcll jmp subl iret dec into aad mov push adc leave push adc lock movsl mov dec sbb dec jmp mov sub into jmp (bad) cmp adcl pop fisubr lret pop popf mov jo popf jl fs mov ja dec loop xchg sub push xchg xchg in out pop ret jle pop sub je pop mov mov mov test in cwtl (bad) sarb bound adc in sub dec cli sub inc mov sub xchg (bad) rorb lock (bad) cmpsb pop mov popa lds repnz (bad) jmp add out lods clc mov pop sub icebp adc push xor repnz mov popa mov testb sub mov movsl or and mov mov pop movsl dec sub mov mov imul and adc popa jmp mov sub pop cmp lret scas mov push mov xchg stos fs ljmp push mov or test xchg aas push add add outsb jl loop lcall jg sbb jne aad pop mov shr scas cmpsb leave pop stos sub add das popa test repz lods add pop or fnsave es out mov jmp jle cmpsb jge les dec je cmp xor andl cli adc xor cmc cmp xor pop xor push mov movsl icebp popa mov cmp rcrb dec mov in mov push fistl mov lods insl (bad) push stos repnz pusha sub mov rorb mov dec adc mov xor shlb repnz mov out cmpsb dec dec and bound sub add push sub or lods sbb cli xchg mov das xor xlat sbb ret mov inc pop add out cmp out sbb (bad) ja and (bad) mov lcall aad mov inc outsl clc mov clc das jmp push notl addl xor dec mov dec std into test iret cli pop stos lret xor pop orb inc hlt add jmp sub ret xchg shlb test in and lds or repz xorl mov jbe pop mov inc loop mov push sete and dec sub mov mov es sub sub cs (bad) lock popa pop sub xor stos mov dec pop pop insl jmp mov cld dec lret int3 lcall push iret and imul mov cmp sbb sub imul pop sub popa xchg loop pop sub mov pop rol dec dec jnp mov mov and in sub mov ljmp lds cld pop fcoms test cmc stc sub fwait lods iret sub xor jle into sbb popa inc or cltd jnp int3 xorl loop mov test stc or cmp stc xlat or adc shrl sarb leave movsl cli test mov sub mov mov mov mov jl outsl xchg out lret mov in outsl mov pop enter add dec fdivl mov mov iret inc idiv mov ret int3 ret pop lret repz adc or repz pop pushf hlt test dec enter scas adc add hlt popf xor mov adc mov cmpsb int ljmp mov fdivs pop sti cli xor pop in mov push addr16 sub js fst das adc mov dec (bad) mov xlat ret jbe or orb dec push icebp dec iret sub jnp mov jne (bad) push xchg ficompl sub sub jmp in pushf sub sbb call lret out mov inc fs add ja cli sub roll aaa and mov pop movsl push gs ja mov fild jle cmpsb (bad) push push inc popf pop bound push mov add mov pop lds sub repz mov jnp sbb adc sub mov adc lods ret in and loop pop xchg cltd cmpsb inc xchg shrl cmp or (bad) push and sub ljmp or pop inc push add jmp jl fs pusha mov cli sub mov ljmp insb push xchg xchg fdivp out ds jmp jne out add (bad) mov out mov mov (bad) (bad) hlt aas mov inc into (bad) insb lods push push and dec push sub int3 and dec pop mov and mov pop imulb mov sub pushl outsb jecxz test xlat mov out push js dec mov pop (bad) and mov popa adc sub sub sbb (bad) (bad) fnstenv scas mov mov (bad) mov bound scas push adc cmp aas adc cli je lock jae ljmp popf xchg scas cmp fcoms cmp lret push cmp pop je add sub xor pop (bad) cmp sbb inc and dec and notb popf xchg fdivr push cmc dec call sbb push loope mov nop inc xchg mov es mov add adc cmp mov xor aaa mov out movsl rorl push mov xlat mov xor sbb (bad) jae sbb movsl xchg and data16 or xchg lds fmuls negl cli sub push popa repnz lahf and lret cmc sahf push jnp xchg in xor mov dec pop lret loope ret adc xlat pop (bad) dec jne sub or sti repz repz scas push lock mov mov js ret mov negl in mov (bad) or fstpt fs insb js jmp push lret cmp insb mov inc mov cli push shlb add (bad) push jo repz jp aad add arpl mov jg inc xor adc popf xlat sbb pop cmp pop xchg into in sub mov repz mov ljmp pop xor ret ret fild sbb lret jg fndisi(8087 xchg (bad) (bad) mov pop negb sti repz daa rolb mov je movsb dec jecxz rorl and mov xor (bad) leave aam in cld push rcll mul dec mov ja (bad) mov and xchg scas loop xlat cld adc pop inc (bad) into add cmc jecxz sub mov out stos xor pop sti fisubr adc dec sub (bad) (bad) mov cld jbe and mov imul jb and out sub loop,pt xor xchg (bad) repz or cmc pop rcll pop inc jle dec (bad) aaa lds (bad) cld test out fwait dec (bad) sub pop ja in ljmp icebp js int3 jg and fsubs jecxz ret jmp xchg mov hlt dec adc aad loop xchg jge mov (bad) imul bound inc aam idivl jb mov lds xchg sub cwtl and std xor test mov scas out pop mov add repnz shll cmp sub cmp mov movsb mov nop repnz mov stos cltd repz and or les xor xlat and daa pop xor fisubr test mov fwait xchg ja clc pop sbb loope les jl and cld divb or call adc xlat imul add sub sub mov test (bad) cmpsb mov dec das ret push adc push clc pop sbb cs jle mov jo lds adc sti andl dec pop popf int3 push mov and jmp out dec (bad) fsts shrl cmp (bad) sub pop std mov imulb jb lret pushw jb jmp daa mov dec mov xchg lahf xchg mov mov sub mov (bad) leave ret pop mov lret add mov jae lods inc aad jle js mov insb xchg push sub pop test mov or sub mov jmp mov inc sub adc stc xor jle adc cmpsl mov mov sub push aam lds fstpl and daa (bad) mov mov mov aad and mov das xor xchg xchg rorb js jmp jnp and xchg jbe mov jae or xchg dec sbb add ror pop stc mov cli or cmp or lret add and pop lods push push dec add mov mov mov pop fdivl dec push stos xor adc jp incl sbb movsl mov add test jle push lds add lcall mov mov mov adc dec out inc imul cmp out mov or mov shrl or mov sbb add jmp jmp and shlb iret negl popf inc pop mov or add mov mov xor out mov pop daa lret cmp cmp das in push repz outsl jmp or inc pop scas bound mov or cmc mov popf pop or jne sbb push daa divb divb ds jg lods movsb gs repnz sub incb adc ljmp and push je mov xchg les sbbb scas mov cmp shrb mov mov cwtl mov jg adc add or fstpt ljmp ret mov jmp xor push cmp test and fidivl rcl jp sub jg test inc xchg xchg and jmp mov pop lret repnz jl pop notl mov es or jmp adc or mov add (bad) mov cld mov adc popf (bad) mov xchg push xchg ret int3 rcrl (bad) je mov int3 lret scas push ror andb sub sub xchg icebp push imul xor rol out lcall pop (bad) xor pop mov or rcrl pop sti jnp cwtl jle lock divl daa adc (bad) mov jns xchg mov jmp movsl ffree or push (bad) sub dec jmp insb sub jo test in std and xchg repz sar cwtl and or xor xor add lock popw xor pushf int3 popf (bad) xchg jg mov shll arpl jno,pn outsb fdivrs jmp dec or fdivp pop jne jo jmp (bad) mov icebp cmp (bad) sti bound test outsb negb lret sbb sbb leave (bad) xlat mov ret and (bad) dec pavgw jge shl out sub ret sub lret jbe scas or sub fldt cli pop mov xchg icebp fs stc push dec fmul lahf jns leave jge loopne data16 out pushf xor mov pop xchg mov push jbe inc sub mov dec mov xor leave outsl test aad dec je cli jecxz pop mov xor mov int3 loope shll repz jnp cs addr16 fistpll push adc sti mov sub lea gs or cmc nop nop jmp mov pop sbb mov pop lods popf sti sbb pop xor cli stos mov jb (bad) notl (bad) jbe inc dec mov out jg cmp mov sub sub fnstcw pop repnz js or sub mov xchg loop add mov les je pop jl imul mov scas mov sub mov dec lret push std out cmp addl sub mov test js clc lahf lret and fwait cld or add mov pop scas in fild xor xchg jmp (bad) push pushf ljmp cmp or xchg outsb fsub or push pop push mov aaa imul aas mov sub mov xchg adc es mov out lret add xor or cmp pop fsts sub push mov mul icebp xchg push push jne repnz adc mov mov cmp flds jge mov loopne sbb out push sub bound (bad) out cmpsl xor leave notl sub hlt sub mov mov jge xchg or xchg adc push mov and push add mov stc outsb xor lret jecxz and push pop xor movsb inc test bound (bad) pop cmp dec sub inc addr16 in negb test sub negb dec mov xlat lds ds daa leave aad and sub pop fmulp push ficomp scas in dec rcr popa sub das icebp std xchg pop daa sub decl push xchg and xor and je mov das xchg dec daa add aam or sbb or jns dec pop pop pop fs in jle jmp out jmp lret mov out mov or jg arpl ret mov inc mov xor loop frstor inc jge shrb leave jmp pop lret (bad) pop inc push or mov push mov rcrb cmp mov repz or sbb and sub mov push out ds or aas cmpsb jae icebp pop loope mov and leave pop leave fisttp push adc repz or cld inc (bad) mov mov and mov lret ja jl and jne notb or test pop xchg fidivrl in (bad) mov xor ret mov popf mov or aaa out lds clc and sub addr16 aaa mov mov lcall addr16 daa out daa xlat mov add mov sbb rcr mov dec pop mov pop xchg dec and lret add push arpl mov xor push jo or lret pop fwait dec jne mov inc (bad) mov iret inc mov lcall mov jle leave fbld andb cld push push jbe and dec lcall fidivrl rcl adc mov sub stc cmp test pusha sub imul lret leave cld inc jp insl int3 push nop fdivs ds arpl add sub xchg sub (bad) mov imul aad add icebp das call (bad) fimull fsubrs cld call cmp int3 xor cli or mov fistpl mov dec mov pop lahf adc out sub xchg push insb imul lods in mov ds rcll or fisubr jne mov mov imulb clc pop (bad) cld pushf mov pop jl push notb push ja test mov enter ret mov mov rorb dec test inc xor aad test loop or cli je pop pop repnz aas inc or dec addr16 mov aad test test fsubrl pop xor xlat fdiv add (bad) xor loope negb scas xchg or repnz mov push mov lds imul lds pop mov xor shrl into jmp cmp jne,pn lods and andb push fninit or mov aam push or pop jne xchg mov test pusha pop jbe addr16 jns mov sbb add mov add les fild (bad) int push xor mov push sub in loopne loop mov enter testb stos movsl adc push ljmp adc fcom mov out jae (bad) and jmp mov mov mov test add stc inc mov ja outsl das inc fdivp sti in inc push ret mov or outsl fsts (bad) repnz les xor stos mov test pop or pop mov les sbb pop mov (bad) int3 cmp push xor cmpsl adc icebp jnp sub xchg xchg out adc stc add and jge stos leave out and adc mov repz push scas push test xchg or icebp jnp daa test fldcw sub das bound jge adc jmp inc fist idiv popa arpl pop insb leave cmpsl popa je insb sub aaa daa das lret ss inc jmp ss or push aad dec lock scas cmp pop out fsubrs add call mulb jo lods pop or mov jmp loop fisubrl into fs mov add jle in jle adc sub xchg mov jnp pop rcl dec mov leave cld push mov movsb scas sub test in jns popf lds pop adc add cwtl mov mov push dec cmp lcall mov xchg lret (bad) jp jg lds dec add iret jbe add inc dec lcall neg adc mov jnp lahf mov dec sub cmp std data16 xor (bad) divl sub xchg (bad) test out dec lret in or xchg hlt bound ja adc sub mov adc add jl or mov mov jg sbb sbb sar and mov add inc in femms sub mov lahf jae adc cwtl adc cmp (bad) fldl pop push inc iret adc hlt or stc pop lea mov pushl aaa test aas fcmovne (bad) sub (bad) and mov dec mov add stos test ret sub pusha and add or push out sbbb in jmp push jne dec mov cmpsl mov inc les call xchg pop daa sub inc ja ficompl add sub cs add cmp in shrl push adc data16 (bad) mov pop sub ljmp add xor cmp mov inc jae scas inc cmp mov push add ret mov aaa xchg js or dec lret jg mov cld jmp popf push fcoml rol (bad) mov out popa imul leave (bad) mov pop and outsl icebp mov icebp xor rcl mov xlat mull xlat scas cmp popa fwait push rclw pop pop cwtl cli loop mov cwtl add inc out mov and push rcrl dec data16 pop repnz add mov jecxz fcompl push and mov decl inc (bad) mov lods inc and imul dec out fcoml or pop inc cmp and lods in mov xlat loope (bad) xor jne (bad) into push stos loop lds fsubrp adc fcomi pop mov xchg dec fs mov jp enter (bad) nop dec push mov pop cltd (bad) out inc addl mov cmp out or push mov cmp add movsb out fnsave outsl vmread pushf movsl jmp sub add cmp push xchg push jecxz cli je scas popf jge sub (bad) mov ficom or ss or daa (bad) jl pop je flds ljmp rcrb sahf adc jne lea mov inc xor push sbb fsub push neg repnz pop mov jnp mov notb scas jg (bad) cmc mov and aas outsb jmp je or sub jno xchg ljmp lret or in bsr mov push flds jns cmp jl lret xchg lret out into nop pop enter shll lcall cmc ljmp mov out stos bound and movsb dec lret mov jno (bad) notb sahf fcomps mov loope lahf xchg (bad) mov jo mov mov mov fs scas gs out leave cmp fdivrs mov xchg testb ret out loope and or push push jge mov imul mov call fnstenv ret xor and and or (bad) add sbb push inc xor rolb in and cmp or xor icebp sub jg mov ret rclb out xchg adc dec push lea repz cwtl xchg movb out and scas (bad) mov mov push std into push add imul idiv out repnz jns scas pop and inc xchg adc mov mov or inc daa int3 jo sarl xchg adc jb loope cmp or push loop fistpl sub mov pop leave xor jp std inc (bad) loop xchg sti mov out pop sub mov dec lahf mov (bad) sub (bad) xor sbb pusha mov in arpl fmulp int sbb fadd fs cltd xchg stc jl (bad) cmp stos jl adc mov dec xlat dec pop out imul xchg scas arpl cmp pushl (bad) rcrl enter rclb fnstenv fstl push mov (bad) fldenv ja aaa inc dec or cmp aad lea or das int or call ljmp pop call xchg mov mov jae repz mov sub popa clc mov mov scas add scas into xor add or ret bnd roll pop lods sbb mov xor xor in test (bad) daa push inc enter xchg mov pushf adc shrb mov enter sahf fucomi mov insb xchg pushf in daa jg xchg das nop aaa sub sub push clc xchg lret ljmp lret in add cmp sbb das pop sbb jmp lret daa jmp adc mov mov into aaa dec (bad) outsb cli cmpsb or mov push pop cmp mov dec pop loopne sub xchg decb lret cmp (bad) xor decb pushl ror lret jae mov push je jmp ja cmpsl xchg cmp xchg push fstpl stos sub adcb or sti sub pop std ret push push movsb pop cltd push adc cli imul loop pusha ret jge test ret test jp lahf stc xor push dec add das dec pop cmp testb xor or scas iret push movsl jae cmp xor mov pop repz test or (bad) ret test mov add rcrl imul aas (bad) lret dec pop adc inc mov push push mov mov js mov xchg std ret aaa and mov das (bad) das pop mov xor sub xchg lea (bad) (bad) or mov push mov sub mov aam and xorb int3 push add pop sbb scas fstpl xchg jge mov adc inc in mov insb subl xor add mov fidivrl into jo ljmp imul ret cmp xchg shrl popf pop cmc into daa dec jmp mov (bad) (bad) pop dec mov adc sub stos lea xor or test ja ret push mov push out push jmp into cltd sbb push das repz push cmp loop rclb imul dec pop cld lret xor jbe imul pop sub mov push int rorl xor stc lods sub subl mov pushf jnp movsb and pop repz lcall cmp jge js divb inc sub add out xor or mov vrsqrtss ds out sub cli adc jno aad adc test mov mov mov jae cmpsb clc push push lret fdivl and pop sbb pextrw add add xor push or (bad) into add and jne and mov dec jmp pop stos inc sub sub inc xor out push and mov push add repz loopne push sub lret sbb movsb in mov jae mov mov sub and ljmp mov pop jbe in jp adc aas fidivl bound out dec push dec and mov loope dec pop lret mov and xchg stc and hlt shr cld mov mov push stos xchg sub repnz inc xor mov push xchg into or loope add int3 ds dec lock mov or sub stc add and jmp fisub jecxz pop test cmpl cli pushf lcall sbb cmp inc push and pop das inc jae xlat mov and sbb scas frstor mov int3 cmpsb mov pop daa fidivrl ljmp jnp mov or inc ret lahf inc in (bad) lea cmp insl adc pop sub adc in sub in ljmp or cld aaa dec popf jno xor cli push sub or push in sti in les (bad) pop push pushf xor cmp add cmp xchg mov into test pop out mov mov test stos sub cmc mov pusha sarl sub movsb jmp ret test push push mov xor stos sub jg sti cmp out (bad) ds pop loop or dec les sub ret dec mov (bad) inc add in je mov sarl mov or repz mov icebp xchg gs fsubs and xchg test repnz stos xor add add and mov into xor cli xor mov scas sbb std inc xlat jmp mov js test pop xchg notl cmp pop andb dec pushf scas vphsubwd cmpl sub out cltd sub sbb jmp dec icebp mov sbb dec mov inc test sbb insb mov and fwait jle xchg rcrl sub xchg or jmp pop (bad) pusha sub stos cmp mov jmp or mov std (bad) (bad) data16 data16 cli push mov lret sub mov add xlat sbb les in inc movsb and inc push add pop call mov pop jl sub push rcrl push (bad) repz xor xlat mov hlt ds movsl jge ja aas inc inc push mov (bad) (bad) lahf hlt cmp test fadd add mov daa repnz orl and aas xchg call sti test pop xchg push push dec rorb push daa push imul inc imul ss or sub sub clc pushf hlt jecxz inc lahf add ret hlt lea jbe xchg div mov jne cmpsl and les (bad) les fnstenv adc ljmp call mov pop repz (bad) sub mov sar push mov xlat addb ret jle add pop lret mov pop and adc mov or jecxz test pop scas loop (bad) in pop movsl mov and xor je inc lret mov adc shrl outsl leave sub xor stc and sub mov outsb add scas mov pop nop (bad) sub stc das xor inc add scas je mov mov xor or ss aas sub orl (bad) dec sub push add bound xor std in mov pop lds (bad) stos sub mov lock popa adc jne (bad) mov repnz xchg loope add add ljmp mov jno add cmc out mov xchg out cmp pop scas or cmc stc ror sbb lds xorb cld sbb loope in movsl test pop sub mov stos ljmp adc mov push dec ljmp pusha xor loop pop insl push loop inc xor jle xlat into xlat inc rorb sub mov sbb xchg push jb out pop push jb mov xor cmp pop jecxz dec clc inc push popa das mov jg in or jecxz mov and pop push mov push jae lret fisub out or and jecxz notl add pusha push sbb mov push insb xor (bad) adc mov push and scas into jno (bad) cmp cmc stc cmp scas sub add daa outsl mov adc lods pop loop xlat fnstenv sub cmc jns imul stc loopne add out sub (bad) lret xchg fisubr jne jnp adc cli jne stos mov cwtl outsl add mov sbb dec loop test popf mov mov gs pop popa ja sub cs out cmpl and mov jno test sbb sub sbb (bad) sub jns loop pop out pop repz out sub cli pushl mov into mov dec subl add ja mov test sbb cmp xchg pop and push stos cmp test (bad) out fs mov xchg iret sti mov pop ljmp pop lret or inc lahf fcoml dec (bad) repz lds jb (bad) xchg arpl or in dec call xor sub loop adc mov sbb loope cld and pop loope xchg mov (bad) push js loopne mov jmp test pop pop xor or cmp ret iret not lret lock dec pop enter (bad) out sub sub ljmp (bad) notb nop xor mov stos xchg (bad) in daa in mov mov sub loopne aam lock (bad) out cltd lods loope imul sub cmpsl call adc outsl jae ret dec mul or ret sbb dec (bad) lret outsb adc sarb (bad) pop call mov dec stos test xor xor dec out mov mov mov clc xor mov insb sbb sbb jecxz,pn pop cmp pop repz enter xchg push icebp out fnstsw into sub jno repnz test mov nopl cmpsl dec push pop ret mov cli mov das into out pop aas hlt jp push mov and ret mov cmc jmp xchg push popa dec (bad) insl dec int inc jle ljmp imul repnz (bad) jp test add xor test xchg addr16 xor add pushl jmp pusha (bad) cmp mov sub xchg ret cmovle sub std mov cli lods mov out jle call sahf push inc mov testl xlat dec mov das mov lahf hlt cmp lret (bad) or and iret in ret in aad pop mov jmp push iret adc xor mov xchg jl lret adc mov aad (bad) xor or push sub push lahf out push sbb mov lret stos xor add or adc (bad) pop push add xor push call pop jecxz add sti xor lret mov cltd add test cmpsl add cld mov loope cmp outsb inc popf pop sbb aam decb sbb jle leave aad test ljmp leave cmp lods and push or setge xchg fcoml or les jmp sub sti (bad) pop add hlt push pop stc mov sbb mov lds fdiv js not call (bad) popf and add mov lock ficomp (bad) cmp lret push and cmp fnstenv scas pusha daa loope,pn sbb jb imul xchg inc mov testb jl lock (bad) jmp repz pop xor call pop push jl (bad) cmp pushf notl inc stos scas repnz out jmp adc cmp cld sub cmp and inc sarb shr (bad) insb and sbb neg dec xor sub enter (bad) pop lods sub repnz rclb xchg int cmp (bad) or roll ds into xor xchg push pushf in mov repz cmpl lret mov stos adc repz mov je lret sub clc mov popf out pop add xchg dec pushf fimul add sub cli inc push cli add mov and sub sub xor pop pop call sbb add insb and xchg (bad) das mov inc xchg daa add jnp or mov lcall add (bad) cmpsb ret mov notl pop pop and mov loope dec pusha jnp seta inc inc inc adc cmc push sub adc (bad) xor adc imul mov inc lods sub out inc or jl and inc leave cli or out aad cmp jns mov pop cmpsb cltd sbbb inc inc and and lods cmp rorb sub mov add mov mov and mov inc movsb xchg pop and sub decl cwtl jns repz cltd push neg dec adc orl (bad) mov pop add cli pop jge add xchg test mov sahf mov xlat mov les (bad) push sub les repz cs (bad) push rcr add sarl dec cmpsb fsubrs call and adc iret cmp sbb insb outsl push cli out dec cltd xchg stos bound insb add and ljmp ret adc dec xor add and notl push mov clc xor mov add or push into pushf xchg scas je jno outsb fnstenv or ljmp xor into aam xchg push test icebp (bad) jle jge xor fcomps or mov out flds (bad) loope sub lret and popf jle enter inc inc xchg fimul fs and push or lcall pop xor psubsb mov lock xor dec xor sub xor cltd cltd sub mov icebp xchg je or out cltd pusha pop mov xor mov repnz bound xchg (bad) xor or xchg test jnp dec mov jns fsubp push negl sub and or fidivr dec sub add pop mov and mov xchg lods shrb pop mov (bad) insl lret data16 ja mov lret incb (bad) xlat mov iret daa shrl cli add test xchg das and xchg inc out std das (bad) mov cli mov sarb fild sbb scas movsl mov aas in pop xchg mov xor cs and xor dec mov xor add xorl cmpsb sub or (bad) sub and loop adc mov push iret mov hlt inc loop cmp loope cltd sub xchg mov mov mov xor out subb fist xchg lret mov push cmp in les jmp inc mov dec mov sub add mov imul push (bad) push icebp lods pop loop cmc inc xchg cmp (bad) xor sbb ret loope add in jecxz push mov call dec jl (bad) lret xchg sbb add sbbb xlat popa fcmovb sub mov lods shll leave pop gs xchg dec add mov hlt or xor or sub pop mov dec mov jnp xchg fildll xchg repnz lcall pop and (bad) or dec mov fsubrs add and divb jmp xor aad insb shll sarb sub outsl jae (bad) dec fdivrl imul push push jne inc das cmp xor mov mov and sub pushf mov fistpl out push adc popa jmp loope imul and cltd vpaddsb jl sbbl dec mov rorb sbb movsb cld (bad) rcll int3 mov daa sahf jecxz xchg das add aam ljmp or pop jge sub or mov (bad) and and sub clc (bad) mov imul xlat mov lea cli sub or mulb fstpl shll mov push stc sub enter in xchg repz sbb or mov test imulb bound ja mov ret sub insb adc jb cmp and nop sub pop popa add cmpsb nop popf jl gs test fwait daa adc clc loope adc test pop stos push mov enter rolb xchg push test daa (bad) jge cmc movsl lcall mov clc pop shrb push jnp fs sub mov mov inc mov imul js xchg xchg in popf jge idivl or xchg je cmpsl jns dec mov cmp cs add (bad) ljmp not fs ljmp inc xor jecxz mov xchg out push cmp sub dec mov cmpsb (bad) and add adc xchg mov push pop mov lret pop sub mov and leave mov cs sub in subb push pop sub pop icebp std loopne loope lods outsb movsl mov pop popf imulb xchg mov les in mov push ret dec sub jg xchg cwtl pop aam and fildll adc stos jecxz bound adc insb push lcall jle rorl int3 cmpsb mov jnp into dec cwtl test xor pusha or rep movsb and ss ja xchg daa pop pushf (bad) mov cmp scas pop mov shrb enter adc or in or pop adc pop (bad) leave xor mov mov sbb adc mov and stos test mov xor add nop scas out repz xchg cli xlat movsl bound adc (bad) xchg dec leave mov shll cmp adc jne mov mov xchg push or adc add or or clc dec and ljmp fidiv dec push repz mov (bad) das pop and fisttpll (bad) jg and pop rorb loop shrl popa lods ret fldcw jmp or in pop data16 scas mov or sub pop stos sub (bad) xchg jg (bad) mov jbe das cmpsb shrl (bad) sbb pusha dec fcoml sub repz mov shlb notb or mov fcoml push push push fcmovnb pop xor in lret cmp jp imul inc jns adc lret and das in and inc sub mov and add ljmp lea mov add repnz xchg aam push jmp clc popa movsb cwtl enter jne xor int sub pop (bad) dec sti leave (bad) mov mov cmp out and pop pushf mov mov push pop das pop push sub rcrb mov jge stos out inc mov dec push mov shrb xchg jmp pushf lea xor cmp mov stos xor iret dec daa and jbe loop jl cmpsb push cmp add sub adc mov pop lods xchg xor aad and mov xchg rcrl or sub ret lret and or aad mov ds das out xchg mov movsb or mov mov out mov (bad) and sub (bad) xlat cli std add sti scas int3 and fwait push scas fsubl addr16 in out repnz mov out add outsb lods push xchg lock mov js movsl pop (bad) pop inc inc bound ds inc stc cltd cmpsl jae cmp (bad) (bad) xlat pop ret sub imulb pop xchg pusha idivl loop rcrl out pop adc jge pop ljmp pop dec leave xchg or rcrl or stc add sub ret cmc loope inc sub sti popa fcmove ret cmp or xor push sbb xor (bad) cwtl xchg inc mov xchg inc add and stos lret jg jns add mov fisub stc incb and xor mov pushf push (bad) xchg (bad) cs or jne aad jl pop popf pop dec xor (bad) mov jne (bad) push lret xor lcall in pushf and push and cmp es shlb fistp mov jp mov jb test adc lods call fnsave sub lahf idivb out (bad) sub sub pop hlt mov xor (bad) jb mov adc push cmc ret or mov rcrb mov cs call adcb pop mov sbb jmp and or aas fnstcw sub imul leave mov clc movsl xchg shrb sub mov dec mov inc sub or cmp js lret push icebp mov cmpsb cmp add push sti data16 ljmp es rolb xor push pop cmp ja cmp loope jg ja pop fbld xor movb into mov mov nop xchg xor pop mov outsb (bad) jp mov xchg sub lret and or (bad) sub or xchg call mov dec pop add mov xchg (bad) lret lods xchg lret cli sbb inc lret fimul jae les sbb fist (bad) lret and add mov adc movsl mov xchg repz adc scas sub mov notl xchg lahf js loope sub js leave rcl roll jnp das ficoml mov add jbe (bad) fcoms int loope fisttpl sub push (bad) repnz (bad) shrb sti jno sub std add daa or push mov mov push mov jecxz repz pop (bad) mov adc ror (bad) stc test adc loop movsb cli test test mov call (bad) jmp (bad) not jo cmpsw inc dec adc fbld sub mov push jae mov ja ret imul scas ds lods jp idivb cltd ljmp mov dec loope aas ss jb lahf jmp dec jl into mov pop adc mov dec and stc scas mov push leave dec sub pop mov dec ja lahf cmp lret arpl or or mov jg cmp in mov popf push clc (bad) out mov xlat mov int mov ljmp pop stc add cmp sahf rorb cltd icebp imul lock ret pop adc aam push push inc adc idiv mov adc adc lret ja mov sbb gs mov xchg sti bound roll mov inc pusha mov sub popf jae (bad) in mov ret int and mov push mov push xor xor bound rorl jae xorl mov pop pushf and jmp add inc xchg cmp add fs cmp xchg out cltd mov xchg shrl (bad) adc inc fdivr mov xchg adc push fsub out daa or pop push imul out lds fwait mov sub fsubrs (bad) mov push xor rorl cli sub push and scas and xor jne add cmp and std sbb sub test sar out les into mov ja and imul rorb jo add adc and in sbb divb hlt jmp mov daa cmp xchg cmp push ds push mov cmc rcll push xor push xchg inc test les sbb jmp test mov jle clc jge popf cmp push push dec leave je fldt adc pop cli out adc add jmp (bad) shr popf lret mov xchg add or sub jne pop movsl sbb dec inc inc xor pusha adc iret add mov mov sar lahf fmulp pop lcall pop int3 popa mov and dec popf lret jmp mov or mov aad push lahf inc out enter out adc pop call std mov sti fs cmpsb and sub pushf mov and push xchg clc mov sbb icebp sub outsl mov (bad) lock dec (bad) mov (bad) jbe or pop jno into jmp leave negb pop xcrypt-ctr cmpsl ficomp adc icebp pop jp pop das sti gs mov lret push mov sub gs dec imul bound cli push stc imul gs repz xor push int3 xchg push (bad) pop cli xchg jbe cmp rorl ljmp jg cld aaa repnz das cmp ljmp inc (bad) jge adc hlt cvtps2pi cmp or in mov adc ja mov and sub push jmp std mov out jp jmp popf push outsb loop test push sti aad mov or xor mov icebp xor inc xor pop jbe sbb mov mov dec fs and and push jno mov psllq cmp mov ret stc scas mov jnp xlat pop adc cmp out mov pop or add ja mulb jp stos fsubs add push enter lret dec jl jl xor push repnz inc leave jg or xlat push mov and clc nop jae lret negb jae ret (bad) das jle sub lret (bad) in fucomp cmp iret dec subb icebp or and loop leave ljmp or popf pop pushf jo xor and pop (bad) adc mov mov mov xchg adc loope pop cmp clc add cmp mov (bad) jb,pt int3 xchg (bad) sbb imul sub cmp add mov push lcall inc add cmp mov jg adc lret clc aaa into ficoml adc sub insl or adc popf cmpsl hlt sti imul pop xor leave ja adc mov std in das ljmp incl test (bad) and out xor mov rorl pop test cs xor lcall ret sub sti aaa pop xor (bad) notl and test xchg ror scas pushf mov pop xor fmuls mov xchg int3 pop add mov cld in lods lds iret and (bad) in insb mov insb (bad) mov sub mov sbb sahf imul add jle pop (bad) rorl fisub lret mov cs aas in lcall mov incb call cs xor loope sub es inc jg loop jle das sarl pop test pop pop mov pop fisttpll iret mov and movsb ret ret xchg fstl jmp pop fisub stc iret test xor dec sub mov out mov xor (bad) ja jno into es jae aad sbb in or out sbb movzwl das ljmp fmull dec pop test movsb popf sti and aas test in imul sbb lods mov push pop movl pop jecxz xor (bad) out aad dec (bad) aas loopw cld push mov in (bad) mull ret cmp sbb sarl xchg xor pop xor gs or add pop mull (bad) cmc and jecxz jb jmp push mov add xor mov push out je fst or sub push test les int das ret mov add sub adc pop adc or (bad) mov je cli sar mov popf jl imul mov xchg pop sub sti test sub lret mov leave push adc das add sti and push pop add jg scas test (bad) xor lods in or cmp push int3 test jp dec ret fsubs xchg xlat mov xor mov vpsraw push xchg mov dec ja (bad) and fmuls mov cmp add mov bound (bad) jbe (bad) repnz addr16 dec ljmp mov or jmp (bad) mov adcb jmp and ja mov (bad) fbstp push dec ds lret out and es aaa sub leave ret mov fisub xchg sbb faddl jge cs sub pusha cmpsb and gs sub xlat mov add mov mov mov scas ja sti pop inc rcl jmp pop xchg xchg roll popa mov cmp pop xor mov imulb imul (bad) dec repnz inc imul imul and dec sub test lock mov push cmp sbb jns dec test lock cmp sub enter sbb das xchg push inc loop or repnz cmpsb fs (bad) jl push or mov mov cmpb mov mov or les fidivr and dec test xor (bad) sub pop (bad) or xor adc repnz (bad) mov mov pop and or pushl pop pop loopne jle leave fist leave mul sub jecxz xchg fdivrs dec mov imul (bad) ret aad mov mov adc mov xlat fistpll mov pop test mov lods add jge shr or sub mov dec mov ret fcoms notl adc mov cli xchg or test and jb pop icebp test pop (bad) out adc add pushf daa sbb and xchg loop (bad) push (bad) lret ret ret (bad) push mov icebp mov and aad ljmp mov adc ret jmp add add adc mov (bad) lcall mov adc add int3 xchg pop lret mov and stos loop xchg scas icebp mov jb lods sbb out lea push (bad) movsl clc les cmpsb arpl add (bad) jecxz ds ffree imul ffreep cli out (bad) push bound lret nop lods (bad) nop bound mov jo pmullw outsb dec cmp pop sti xor adc mov cld lret mov mov (bad) data16 mov mov mov cmp xchg (bad) out out sub sub jmp mov clc pop out lret ror std in jo (bad) mov dec and into imul sbb test xchg js cld mov fcmovne or data16 out stos hlt xor aad xchg jmp clc sub and adc or dec xchg mov sub mov xor (bad) jb mov mov xchg fldcw mov fidivl shll mov sub repz ds jmp jg cli push lock ret sub lock scas lret mov adc fdivrs icebp orb je,pt ret pop shr push loop push aad pop leave pop and mov cltd mov mov daa or popf xchg loope xchg les ror sti jl js xchg fnstsw mov pop sti sub (bad) push pop (bad) jne add out xchg adc jns fistl ret xor inc lea cmp fucom arpl push and adc stos cwtl cmpsb add mov cld jp ljmp fisttp je lret add fs pop sub int3 cmp xchg mov (bad) aam jmp mov (bad) pop push mov pop mov scas idivb ljmp xor xor pop roll clc mov dec sarb mov test (bad) (bad) out dec and scas test pop fistl daa or in fldcw repz repz lret mov sub mov push or adc cmc adc or sbb into cld xchg outsl or pop outsb cmp loop cmp loope pop sbb dec pop jmp or sbb fistp lret aad ja cwtl jmp mov jbe mull in cltd xchg leave shrb inc cs xlat mov icebp mov pop stos jne mov clc popf fbstp test lods (bad) rcrb or not pop out leave lret add popa cwtl outsb (bad) pop cltd pop imul daa gs and outsb sub cli popf hlt rol mov ljmp imul or mov jmp ret mov cmp inc cmp mov xor push jmp mov je adc aad scas or into and jg int3 ret jns leave push daa xchg pop repnz inc sahf jge repz and loop movb js popa aam outsl fsubl push pop sub xlat inc adc or fldl jb rorl lret repz imul (bad) ret lds and xor mov shl push (bad) (bad) lret sub fdivs ljmp out dec icebp (bad) cwtl (bad) clc jecxz adc pop mov mul add stc das mov (bad) sub push in das or loopne loopne sti (bad) and das mov adc shr fdivrl out push or xlat mov repnz jbe push notl sti or jmp mov in cmpsl ja push mov movsb popa xchg neg test adc enter pop cmp sbb pushf mov sub pop mov daa repnz cmp and jg xchg xchg mov cs dec or cmpsl ljmp stc mov fistl push or out xor cmc push mov add sub mov mov jg jb scas pusha incl test fistpl mov (bad) sub and push cmpsl and shrl movsb jmp adc decl gs mov push (bad) movsb or lods cmp jmp rcl inc int3 xchg lahf js dec stc fldenv cwtl loop mov xchg push dec mov scas fs mov (bad) or pop jns fmul test insb jmp sub push mov aad andl adc mov out dec pushf into adc pop ljmp mov push int (bad) test je stos lret (bad) dec cwtl jp movsb sbb pop scas xchg inc adc repnz jecxz test push lret pushf imul and outsl fidivrl sub jo repz xor fldcw (bad) xor sub pop jecxz add fidivl or movsl xchg pop xchg stc adc mov pop and (bad) mov and loope inc testb adc jg adc mov cmp repnz fcomip clc and xchg leave sbb sbb sub ds jbe jno sbb mov dec push mov jno imul adc mov mov add iret ljmp push cmp lret andl mov sub das ljmp rolb xchg orb movzbl icebp test jno inc add sub sub dec pop mov inc and stos dec adc ret std jnp cmpsl jae cmpsl jb (bad) xchg ret (bad) jbe dec xor mov (bad) adc outsl out daa inc xor sub or nop jecxz xchg movsb cltd adc mov lods pop ljmp push adc out lret repz jne sbb jmp push lods and lcall test (bad) aaa and data16 pop popf rcrl mov pop stc jae (bad) dec jle repnz mov jmp call daa dec xchg dec lahf jle and push dec mov xchg inc or dec inc adc sub or setbe rcrl stc insb aam dec fst xlat test mov dec repnz sub rclb lahf jle imul daa and sbb fdivl cwtl cmp cmp aad je (bad) lock cmp (bad) mov dec xchg xor out dec enter stc pop push (bad) lods push pop mov jmp repz mov push imulb mov out mov rcll pop mulb mov sbb (bad) xor cmc leave jnp (bad) aam gs push and aas xor dec adc popf insb xor test push add adc mov das push (bad) leave push push add dec ficomp sub mov les cmp add jle fdivl lret ret jmp sub or (bad) loop (bad) add jmp or xchg inc and fsubs push pop (bad) fcomip outsb imul push push shlw xor cmp test mov ljmp ja and push es es and push mov mov fldcw cmp scas sti jne js cltd mov dec icebp out js mov ficom mov dec cmp data16 divl fs push mov dec adc mov mov lock loop mov fiaddl jns push or incl pop add xchg mov fildl xchg fcomps or inc push pop lock ljmp int xor mov mov icebp sbb outsl jge or lret or inc pop notl mov or sbb sub fdivr rcll movsl push jnp repz sbb and ds mov gs mov mov mov xor push mov int cs mov test and mov jns sbb add cmp mov out mov rclb sti sub pop mov add cmc ds lds pop in xor into jne add xor jle pop or fcmovne xor xchg repz fistp out je bound sub cs mov into xchg sub jge adc mov addb jno movsl (bad) mov jae cmpsl jo and inc push push or aas (bad) dec adc and push and out pushf adc mov mov (bad) lods (bad) in push (bad) out in inc shrw pushf jmp mov idivl mov mov arpl out mov xlat sti and jmp fstpt call cmpsb xchg das fistp and lahf fsubl ds pop cmp flds pop mov outsl lea jle mov mov pop lods movsl hlt jmp sub adc sub ja and pop and scas xchg dec ret jle push xchg pop lret xlat mov aaa arpl stc xchg pop jae xchg bound xor cmpsl push mov imul jmp les mov fdivp dec stc aaa testl mulb push adcl repnz stos mov lds jl push ror mov jbe pop aad ja aam adc out cltd sbb into sub add in mov out out pop scas sub xor out xchg lods loop add rcrl inc pop push or cwtl cli or insl push fstl sub dec pushf scas fidivl cld pop pop stos gs adc mov push jg movl jo or sub pushf out clc fdivl stos pop std xor ljmp stos cmc shrl imul and mov out add push mov test xlat mov in movsl sub jns insb cmp xchg fistp cli sub cmpsl lods pop shl popa mov enter add adc xchg dec test push xlat mov orl subl lods sahf xor add mov or pop fcomps (bad) mov mov sub xchg lret fstpt jo loope lods push out mov mov arpl aam leave add (bad) lret sub aaa push or test lret rcll sbbb fmulp fistpll cld or xor pop icebp adc gs sub add sub imul jg ja shr inc xor xor fdivs xchg mov xchg lret notl push mov (bad) in mov and pop aad inc jp pop (bad) mov adc cmp jmp idivl leave mov jo mov mov loope xchg push (bad) lret push add pushl fistpll cli dec leave fmuls mov bound push xlat in out pop (bad) test addr16 mov sub xor add ss lods inc dec test or jecxz add imul sub xchg ficom or pop (bad) out mov pop repz (bad) add mov mov or stos insb bound imul (bad) out adc inc pop rclb data16 jmp mov pop gs inc test outsb cld push in xor icebp sub test fnsave and fcoms mov insb xchg xchg push adc lret mov cli out aad mov mov add loop,pt xchg stos popf xchg fs mov xchg fldcw icebp cli lods push add pop in mov into insb lcall and mov sti jecxz test into adc fbld cmpsl out lret out jne jl mov add cltd adc push pop data16 add stos jg add cmp stc xchg xchg stos loop fisubl adc mov daa idivb popf fdivrs hlt bnd enter sti (bad) fsubr movb (bad) in jmp sarl xor mov lcall imulb xchg add mov cmp (bad) cltd cld lret add add shrb lret sbb stos mov pop (bad) ret iret pop push mov icebp dec sub push xor mov fcmove add add popf repz enter mov (bad) jo and xchg mov push or add sub jmp cmpsl dec and mov pcmpeqw lret fidivl sub sbb mov mov mov inc jmp pop adc mov xchg scas xor and mov mov gs cwtl pop mov and mov push push sbb cltd hlt fldz sub sub icebp xchg inc in daa add gs or sub pop pop mov push call mov repnz push xor addr16 sub cmc in stos jecxz xchg out out push lret std xchg push or pop ljmp repnz xchg sub test pop stos mov xchg push hlt lret out in imul mov add jp pop jnp ljmp fsubr sub rcl call dec mov mov xchg or jg pop movsb mov fldcw clc mov dec les add popf int3 lret out daa ss lret mov in daa pop xchg jg (bad) lret ret mov sub popa jnp comiss outsb dec daa or mov stc push scas testl xchg mov or sub (bad) pusha mov popf pop cmp repnz xchg or mov bound add ret mov (bad) gs ds xchg dec leave loop es test cmpsb pop enter shr das fisubrl sahf or adcb dec jmp ficomp das out call push mov or cld dec jecxz sti in cmp bound mov add push sahf into lds iret sub add aam jmp sub sub or lock sub lock in bound rclb and xchg adc add (bad) in sbb icebp or fs call sub iret pushf dec push mov xchg xchg mov mov mov xchg xor pop negl sub mov sub push aad dec mov stos xor inc ret decb pop mov sub mov mov add mov (bad) rorl lret sub popf fist pop add add sub daa and mov mov or gs mov cld jl sbb mov dec lret aaa mov imul (bad) ljmp sbb enter jmp pop adc stos (bad) add xor push or pushf xor xor sbb popw and dec pushf lods imul ret (bad) cltd test hlt mov xlat inc popl jnp mov in or mov rcl dec mov and enter (bad) (bad) xor test (bad) lock xor xchg or mov scas sub insb (bad) fisub popf je adc je pop pop sub leave sub mov popa loop pop bound jmp (bad) fsubl adc xchg mov and mov cmpsl jo dec out mov imul mov (bad) push int cmpl shl xchg adc inc stos je pop cmc stc or xor int3 cwtl pushf mov in jp (bad) jne xlat loop (bad) shlb pop push notb (bad) mov std jae and mov mov out mov mov mov cwtl push mov lods loopne cli pop call dec iret stos mov pop test leave loope lea leave xchg aam mov (bad) pushf add sub cmp pop jne adc push dec and fisubrl xchg mov ret shrl outsl mov out dec xor stc loop mov imul push and cli or fnstcw leave enter pop jmp and or pop fdivl leave push out (bad) idivl fild adc xor dec imull push or (bad) int3 fs mov mov iret xchg pop icebp mov mov inc movsl sub and sub cmp jecxz cld ds notb pop mov fldcw pop xor lcall sub push (bad) add (bad) mov outsl fisubr and mov mov push xchg jmp loop (bad) xor (bad) pop (bad) xor fst addr16 add cltd or lock cltd pop push shl adc mov xor (bad) stos jns (bad) ja std lret hlt push inc ljmp inc add lret and ja repz lret pop in mov repnz pusha sbbb jns fstpl or lock mov lds sbb test movsb (bad) pushf sbb mov adc xchg aad mov pop test pop test stos lods jnp adc or (bad) lds sub mov mov or add pop pushf daa nop cmpsl aam sub pop jecxz ret xchg ja dec iret sub sub in out push vcvtss2si icebp sub not mov xchg jae push mov jmp jo dec pmaxub (bad) pop inc int xor leave or jb in fwait xchg or ficom scas xchg jnp add (bad) mov (bad) cltd lahf jo xchg loop je leave add in test stc xor mov ljmp mov sub and movsl xchg cli jb lret in sub je fisub mov repz stos loope out xor lret or jmp mov popa add dec or rorb or cld repz inc stc add int3 mov xor pop push pop loop add mov icebp push bound (bad) mov jmp xor xor ljmp movsl mov and enter xchg mov (bad) pop daa push lds adc and daa (bad) rolb dec leave or call mov lret add sbb ret pop sbb and iret cmp cmp or push cwtl imul sti mov in out mov xor outsb inc xor add cwtl sbb mov arpl ffreep add xchg loope test mov pop loope imul sub pop imul pop dec ret pop push push dec jle rorb aaa adc stos cltd insl stc into ja sub sbb add cmp out out or idivb aad cltd sub adc lret imul dec mov lea out lea bound idivb inc push mov mov fsub pop inc or (bad) icebp and decl fcmovbe jns outsl imul dec ljmp out notb out int leave fidivl push sub loopne (bad) push xchg cmp jle push or (bad) (bad) stc int3 inc add add sub shr inc adc or loop adc (bad) iret or (bad) int3 lahf inc adc out repnz idivb pop push imull mov jg jg sti mov sub fs xchg dec mov cmp or popf mov test aas push and push sub mov inc xor mov scas ds movsl out ja mov jle icebp or mov bound out mov movsb push mov push sbb out mov sbb or notl imul sub add mov lds std pushf int3 add mov les repnz out xlat xchg dec xchg jl push mov pop imul sub or add sbb aad in faddl fild flds pop xchg div xor dec mov mov into or in or xor dec lods mov fidivr xor into inc sahf sub leave int3 (bad) aaa cld out (bad) mov push cmp jge enter mov ljmp fisttpll push sbb add leave push adc (bad) clc xlat sub subb (bad) in adc cmp push cmp pushaw mov out sbb push sub dec add sub fsubs lea push mov mov ficom or pop xlat inc xor rcll dec add jl xlat xor fnop das push pop int3 pop mov lret test pop inc mov cmpsl xor loop push insb push xlat xor push jbe gs out pop mov (bad) (bad) mov jle cmp pusha xor inc xchg call enter mov (bad) je inc jmp push (bad) jmp orl scas mov jb and sbb shrl jno jne rclb (bad) insb xchg push lahf push dec sbb mov cwtl jns push xchg outsb mov repnz stos mov inc jae or xor inc sarl sub mov jbe sub inc daa or (bad) lcall (bad) (bad) jmp divb repz je insb clc mov and push out popf icebp lret nop jge jae aas dec sbb das jnp mov out in test mov ss sub cmp sub arpl dec scas cltd les aas mov sbb inc aam sub jb or or ja jg clc iret mov adc pop dec jne in (bad) je stc mov (bad) bound sarl cltd jbe adc stc rolb cs pop xlat or icebp xor mov decb sub fstl enter imul sub mov (bad) inc and mov jns jmp or dec shr add aaa and sub cli loop sarl (bad) cmp out call sub repz (bad) pop leave mov jnp adc add and mov (bad) pop leave sahf lret outsb idiv daa insb lds leave into jg jo js into (bad) dec xlat sti aam jmp fisttpl popf ret loop lret xorb add aam mov rorb adc lret dec sub loopne jecxz movsb or xor mov das lret jl cs std stc incl xor push push mov lret dec sbb lods rorl mov pop fsubrs out (bad) pop sub or xchg roll out sub dec test out test mov fstpl adc add je outsb mov ljmp lcall or cmpsb das (bad) cmp loop jge mov push pop mov subb out and out cmpsl popf subl lods fistpl adc mov cs je stc decl pushf divl and xor and negb imull adc mov icebp outsb mov jns shl mov out dec or or fstpl push into in xchg cltd xor inc adc sbb mov cmp loopne mov outsl mov jge les out sub xchg lock rcll idiv xorl pop mov push sbb pop test inc ds mov cmp sub scas loop stc movsl imul jb dec xor movsl mov in rcrl cwtl jno adcl push (bad) and into daa movsl dec pop sub mov jo sbb sbb push pop jmp out mov rep data16 bound sbb lock or fnstenv push mov pop mov rorb dec mov subl xor out lods pop lret sbb cmp add mov ret sub mov fiaddl push andl cmp mov mov out xor mov xchg int3 notb xor jge xor pop pop mulb lret arpl pop sub pop (bad) (bad) lahf repz pop lcall adc cli lret hlt sub loop or xor divl mov xchg (bad) scas mov jnp daa flds or lds xor dec int mov mov enter and mov sub xlat shrl lcall mov mov sbb add mov xchg adc (bad) mov jge std sbb sub imul sub mov and xchg stos jge fwait mov jmp outsl mov sti add mov jp ljmp cmp aas out sub fucomip movsb push out je movsb jb aad jbe add daa repz dec mov daa sub ret mov xchg sub jnp sti xchg or out lret dec pop in movsl (bad) rcrb xor adc lods mov rcl ljmp mov ja sub mov rorl ds xchg scas mov xchg cwtl dec (bad) xor adc pushf jae imull divb loop andb hlt jge inc in sub clc pop ret push insb int3 js xchg bound fs mov fs jmp cs stos repz sub and ret fnstcw mov jo xchg mov sbb add xor repz lock out xchg inc mov jmp fisttpll lcall push xor inc sbb shrb inc call icebp mov add mov aad xchg ja dec mov outsb add or xchg pop pop sub and and negl les stos mov adc xchg outsb imul call xlat stc ljmp in fs sbb scas fdivs jbe and (bad) dec or mov xchg inc cwtl (bad) pushl (bad) push inc popf jg or cli js cwtl ret mov lods (bad) movsb and jp in repnz pushf mov daa scas lret or push pop xor xor mov jl or mov cs lea and roll sub jl lret jge adc adc xor and add popf xor mov cs mov sub popa push daa adc pop mov xor cmc add leave pop pop pushf push (bad) inc aam sub fxch cmp scas push mov adc fiadd or cmpsb mov add sbb pop jbe sub (bad) push inc idiv or bound es lds jecxz aas or (bad) std sbb lcall xchg lcall insb popf notl (bad) scas mov negl add sub std xchg xchg dec stos repnz test sub dec mov rcll repnz mov and pop mov add mov mov out mov clc jbe add leave mov cmp sub ffreep push pop xchg out cld iret movsl mov push cmpsl dec icebp fsubs pop into sub cld pop mov mov in jno outsl je adc adc push sub jb clc pop ret scas sub sub xor and xor imul sub mov mov into stos and xor adc mov mov pop shlb sub xchg in mov xor inc add dec pop pop mov dec leave cmp fistpl cmc xor aam rclb (bad) push jb push push mov adc sub out push imul xlat out dec add pop les (bad) mov push mov repz fldenv pop lods pop mov sub gs mov stos mov and xchg addr16 movsl (bad) jbe jge mov out xchg cmp out popf dec inc xchg lcall mov daa ljmp mov cli lret jmp sahf in sub push sub ret adc cs incl mov data16 sub dec daa fistp lret push mov mov fist sbb pushf rcll mov jne fcomp loope hlt sub pop test mov pop add mov out pop jmp dec leave (bad) out shll aas call insl or mov lea mov mov clc push es adcl push repz xchg mov sub xor jne cmpsb pop jne inc mov mov add jbe sub (bad) outsl mov (bad) jno dec ja dec ret xor dec stos pushf or sbb push xor mov add imul inc out inc loope cld xor mov mov pop (bad) pushf dec stos sub pop or cltd mov cmp sub xor jmp pop bswap fsubrp bnd outsl inc jecxz cmp dec add insl cs pop movsb mov je mov sbb leave cld lods mov cld xlat mov je cmp sti jle (bad) push lret jg cltd inc mov aam dec or cmp inc int3 cwtl inc jmp into cwtl xchg ret mov js lahf je push loop jbe jmp icebp xchg dec pop mov popf push xchg clc ret loop xchg mov adc mov or xor sarb sub (bad) mov jp jp adc scas jmp mov push and ss iret add mov fdivrs and add mov push dec dec fimul fdivrl mov jg nop sub notl jne sbb pop in mov mov iret xor fcmovnu cwtl mov or add test mov enter sahf push ret data16 addl mov mov jae in pop pushf mov repnz add ret pushf and xchg jae pop pop and jmp sti dec xor out subb mov adc fisubl jno mov outsl rcl jnp push lods inc adc popa jne sbbb clc mov and mov and mov imul sub and dec add (bad) cltd xlat lcall jmp ret sbb fmull (bad) or je push std imul das mov jg push mov ja pop leave (bad) ds loop adc pop push cmp cwtl and dec cli stos xor aam sub (bad) cld mov insb jge add xor cli jb and dec shrl xchg test pop ljmp out jmp mov jp (bad) insb push mov scas xor ret call xchg scas loop test repnz sahf and scas into ja out add outsb pop pop lea scas les pop jbe xor stos in out cmpsb fstps xor mov leave out fldl push adc icebp daa clc sub jno dec push into aas xchg out sub dec repnz pop (bad) sbb cwtl pop pop in jg std repz push cltd inc or push push lahf xchg shrb pop iret scas ljmp cld jno cmp ja in add push mov cmp push mov mov add lahf gs mulb fistl ret sub dec pop popf adc push dec nop je in mov and dec jb loope sub daa stc and loope loope jbe imul in mov or add movsb xorb add out iret (bad) mov sub cmp adc out mov jmp leave fldcw (bad) dec jmp repz (bad) out out imul in orb sub (bad) add mov idivl cmp popf sbb rolb mov sub sub xchg repnz mov xlat sub mov insl fistpl mov int3 sub xchg stos mov add lret cld and mov (bad) lea sbb sub cmpsl rclb cmp movsb xchg add fdiv push xorb jle lods and aas fidivr rcrl add aad mov sar xlat lock mov push shr mov mov push or mov sti xchg enter fstl fs sbb loope and adc fstps push cmp fs fidivrl cld push mov test dec mulb xor leave cltd ret adc incl dec rorl or fwait divl and lahf cwtl and mov mov or in jle stos pushf jmp xor call dec mov pop mov xor movsb mov js in outsl lods jb repnz adc icebp ljmp fidivr push enter decb leave ljmp and pop iret xchg stos mov inc mov add mov xor dec mov sub (bad) loop mov add pop xchg in (bad) mov mov (bad) gs cmc imul outsb mov (bad) xchg (bad) mov mulb cmpsl sub stos div push and cmc add out inc cld dec clc inc (bad) clc push shll sub mov sbb shrl jecxz lcall adc dec sti shrl sbb xchg push lea insb data16 lods test add xor out enter (bad) popf push xor push or add lret inc pop push pop pop out mov xchg scas gs jp xor (bad) cwtl dec or lods inc movsb shlb repnz mov fimul push push or daa push xchg and dec call jnp std xor xchg xor ret mov mov ljmp jo loope and out pop and mov mov xlat xchg push (bad) das stc icebp leave xor stos leave lock sar das or repz push out (bad) popf loopne xor in lods jns inc fldcw push sub das jle bound out and les cmp add push mov mov out or xchg adc push or push shrl sarl push and mov fstl jo loope ficoml push add je lds nop xchg xchg out mov lcall adc add mov dec repz jecxz fwait inc add sbb mov push in pusha mov out cmp mov xchg inc xor aas call ja dec lea aas scas mov daa xchg test xor and cmc xchg inc and sub lahf imul icebp pop leave inc xchg or fisttp add pop daa lds jnp and lds (bad) cwtl jp or sub cld imul sub xor dec jo fst mov xor mov cmc push ljmp sub sarl das mov pushl aam pop cmpsl outsl and fsubp test insb shlb out dec jecxz aaa push xlat and lods add cmp into add rorl fucom cmp into fldcw sub icebp lret mov icebp divl outsb aad add mov imulb rcrl in xor xor cmp inc inc aas lods adc pop data16 lea cmp add lea cmp cmp inc leave mov mov and scas mov daa push test mov cmp ss inc hlt push sub jp cwtl dec xchg xchg pop aam add daa imul pop (bad) ja (bad) aas lods add cmp mov and movsb xchg sbb leave icebp push xchg daa rcrl xchg scas fwait jnp inc mov add or fimul adc add (bad) dec aaa dec ljmp lret leave lds daa negl arpl add cmp aam bound (bad) sti stos daa xlat mov repnz lcall and and fs pop clc aas mov pop data16 out daa not add fistpl (bad) in mov mov stos repz pop out cld push movsl in sub test cli mov imul dec add add xor adc fisttp out popf ret mov xlat ret pop dec sbb lock iret loope je out jecxz dec jne push mov gs cmp sti daa lret arpl sub add mov mov imul sub fcoms leave mov and sub jmp stos or sub addr16 xorb mov sub sub leavew xor xor jmp xchg inc (bad) out les xor sbb sahf das lea jl imul pushf (bad) mov fcmovu or jns dec jge movb mov jle dec out sti into push dec out lret cld sbb iret add push popf (bad) cmp outsb loop (bad) and and fdivr das or and divb imul cltd into (bad) cmp cs mov xor cmp sub fldz dec ja frstor pop add cmp sbbl sub daa dec xchg rcrl push out pop fstpt shrb push sahf mov and dec mov cli sub insl cmp xor cmp mov push mov sbb xor dec mov cld mov (bad) cmp out or in push fwait lahf pop cli mov inc out adc cwtd (bad) jnp lea pushf jbe pop push push push test pop push sbb mov jge (bad) xor and sub jp mov ljmp pop jnp pop idivl enter push add cmp loopne,pn jne xor fnstcw push ret leave cld xchg pop add mov mov cmp ret (bad) fnstsw lcall xor xor lea ljmp test stos or push sub mov test mov mov xor into mov cmp inc jg (bad) xchg bound ja and idiv mov and mov push insb loop add sti popa popa out mov mov push inc xchg call push das xchg lods loop add jne xchg arpl xchg sbb jnp xchg xlat mov mov dec out mov cli jb lahf fildl je rol arpl divl stos loop shrl mov mov test out and add or pop push dec leave repnz inc imul sub add (bad) xchg jg mov lds jb or mov insb ss popf ror dec jmp pop jbe scas and jno mov aad fiaddl sub repz inc movsb xor add stos sub and push das push aad out cli sub sub (bad) and mov imul cmp add iret sub dec inc dec mov push loop pop cmp jmp fsubp call push std mov ljmp sub fs out clc dec out pop jo mov arpl mov push test fild out out mov xchg pop data16 sub xchg jle mov rorl push and pop mov ret pushl cmp (bad) jb add clc mov scas mov pushf mov stos push sub and aas and sub push movsb mov das stos adc cli push stc mov bound mov xchg xor mov mov xor mov aam pop loope popf mov sub sarb cmp lret in test leave popf sbb loop or icebp xor outsb aaa pop lret repnz sahf xchg mov adc aaa xchg inc jae cmpsb xchg popf inc movsl pop out and sarb cmp mov das leave add ljmp out jno outsl sub mov sbb push (bad) repz popf dec or sub mov push or inc iret mov fistp cmp aam repnz (bad) xchg fcoml fadds dec xor movsb push (bad) arpl push es pop or lock (bad) cli outsl or or xor hlt inc push fistpll inc (bad) sti enter xchg sbb xchg test mov daa imul divb aad rcr test xchg lock sub adc int inc js popf xchg mov pop shl dec repnz sbb push mov ljmp fcoms shlb jmp mov fucomp jno sub dec sub mov push cs ret push jnp jb loopne or add nop sbb sub sub fisubl and lret mov push in push jecxz daa icebp sbb and lahf or cmp out push push dec in scas cwtl jmp mov dec dec push popf xchg jnp xor adc sbb dec and clc add shrl pop cld data16 cmpsl into jmp out mov mov popf outsl adc mov mov xlat scas lret add dec mov fcos pop sub aad fldcw jmp aaa xor scas dec add out dec xchg es jl imul mov fisttp or int loop test mov push pop lcall lods cmp pop sub loope fcoml sub jle push jmp jge ja rcll xchg xchg jb (bad) scas adc in (bad) mov mov inc rolb xchg xor mov mov lret ss sub je push and out cmp fdivs inc mov in dec mov gs or cli xlat sbb lahf loop jbe push pop cli shlb (bad) xor icebp subb and ret int3 int inc jecxz das into bound shrl mov pop add shll xlat jns inc ret test sar adc aaa xor popf decb jl dec (bad) mov (bad) je push or mov fs movsl mov jo popf adc mov and into mov test (bad) cmpsb aaa inc out cmp lods inc nop xchg sbb and and sbb or jg dec jae push inc fisubrl pop mov sbb or stc pop out dec ljmp fs mov add fdivrp shll add lock cmp sub (bad) jnp sub incb je push add fwait xchg stos leave in test mov sbb sub or sub (bad) xor mov ja lahf xchg mov add mov fsubr sub daa testb adc int sbb out xchg jno imul scas jno dec push mov xchg pop out dec jmp sub pop sub ljmp cmp xchg or dec out in jo gs and mov into jecxz sub and fildl das je sub jno ds mov push jmp mov push jbe mov jg ljmp je imul shrb mov out in notl xlat add aad push sbb sub sbb lds and rcrl xchg sub mov and or inc mull cld lods (bad) (bad) decl scas and out xchg shlb out adc popf push ficoml imul sub ljmp push lahf loop mulb or pop fstl gs cmp jge les scas pop inc push pop stos jne popf imul scas popa (bad) xor sub mov enter enter sbb xor cld xchg addr16 out lods push daa inc xchg cli mov push xlat adc (bad) rcl pop test push mov jl sub movsb mov sarb sbb jl lahf lds xor mov pushl or push cltd cmp mov into push and push into or and mov dec fldt sub (bad) or fisub ficomp pop repz and ds sub lock rolb pop push movsb sub mov adc daa xor adc decl dec lahf lock in clc mov popa sbb pop mov jge mov aam adc mov xchg xchg les jne in (bad) and out sti repnz adc and movsl scas fst jg ret jle pop into lret ret sub aam imul leave das (bad) fist dec ret push or popf mov xlat lea dec sti cltd inc add xlat sbb and mov roll jle dec out scas sub cwtl sub cli jnp push jle popf imul push insl imul arpl hlt or dec popa pop or push jae fisub fiadd inc aad (bad) pop add xchg sbb jnp xor out sub mov xor pop popf loope lods cmp in sbb je push ret pushf push out mov mov cld sbb testl (bad) jmp adc or xchg (bad) icebp add js,pn pop (bad) xor lret (bad) aam dec push (bad) push dec push xor fcmovb xor and or mov push cli repnz push jl push sub dec call dec sub sub inc pop or mov pop outsl ret (bad) imul mov jno pop dec mov je push (bad) mov es std push aad add mov mov push jno test mov and xor pop dec clc inc dec cmp (bad) popf jl push pop push (bad) mov jo lahf cmp mov fsubs push push xchg xor ret jl pop mov je dec rep in mov mov ret cwtl repnz cmp (bad) nop cmpsb sub in lods cmp jne into icebp dec xor mov push lret mov adc call adc mov dec call sub mov scas mov xchg scas cltd addb aaa push mov mov icebp xchg jmp mov into or lods cmc cmp inc outsl cs (bad) mov ret mov mov std dec cmp call mov mov bound fsubp push std inc and sar inc call adc ret push sub mov sub cmp mov leave jecxz inc nop mov (bad) out dec cli (bad) or xor xlat fimul clc jmp pop hlt push and pushf lock ret inc or add mov outsl outsl gs and lahf pusha sub leave mov or pop call dec frstor cld dec xlat dec mov icebp jbe adc cmp jmp adc insb fcoml ret sub mulb add out cmpsl shrl daa push jecxz sub xor sti ret jmp cmpsb xor jle repz sub popf jg rolb jge push jge in and pop sbb insb jnp std lahf jmp cmp cwtl roll xor and mov lds mov or notl stos std dec ss sub adc push dec push imul adc or and mov sti mov inc xlat out (bad) jmp divb push jmp int3 pushl jmp push dec out adc sbbb mov fucom insb dec sbb xchg (bad) fiadd mov out clc adc jecxz das (bad) jae xchg (bad) lret adc fbld iret xor jmp xor lea (bad) mov cmp fsubrp mov call sub push or mov add mov inc in idivb mov (bad) sub (bad) lods and loope or push sub mov leave mov or sub mulb mov cmp repz pop repnz mov cmp cs mov push insl pop std xchg out dec ror pop jecxz adc cmp push sub ja lds mov daa push jl leave ja or push jae adc pop adc shlb jmp sub cmp mov inc xchg dec push loope sub insb sbb ret popf jge dec rcr fwait sahf das cmp push stos daa ja into dec jecxz xor push push cld pop cltd sub jp subl xor adc daa shrl adc adc sub loop push js (bad) or xor out sub cmc nop adc orl jp adc data16 dec pop jo pop loopne lea xchg (bad) jmp dec int3 add add (bad) mov mov push fnsave sub nop sub jo push or repnz (bad) adc sti (bad) out mov lods loopne int3 roll mov aas xchg add pop jmp fsubs stos fidivr or xchg popa cld jl or lock pop mov lock xchg enter sub pop test or sti cmp push inc inc rol mov pop daa loope rorb and into aaa mov cmpsl push or and lock jecxz fsubs jmp in mov xor xor mov and and out in aam test xlat and mov mov outsl lods lds cli mov xchg jle ljmp push daa push cmp push icebp flds jbe adc out sub (bad) cmpsb lret pop mov push xchg bound sub mov bound aam jmp pop leave pop sbb jmp das dec cmpsb (bad) pop jne (bad) adc fidivr xchg or mov js add clc cli popf gs jl pop cmp sbb inc test mov sarb cli (bad) sub add ja and xor sti pop lock lret imul loop xchg mov mov movsb cmpsb repnz cwtl xchg xor mov fstl stos cltd aam ljmp jmp pop es dec mov adc pop push sub sub xchg das stc mov push adc in idivl cmp xor stc les outsb lods and loopne out sbb les push aas decb idivl std gs sbb out push or ret test clc scas mov pop xor xor imul jecxz xchg push add pusha cmpsl int3 dec out ret (bad) mov aam scas lock and call das ret inc in mov stc mov jae rorb sub fsub push out mov lahf rcl xchg lock cltd mov jge nop es cmpsl inc mov mov lods repz xchg out aad test pop into popf js adc dec bound lods clc cmp sub arpl sub flds test pop scas je cltd jp push fdiv ljmp loop mov pop xchg dec pop out sub aaa or mov or fs mov jl or sub push push leave xchg mulb in ret jne cmp loop out xlat pop call jae dec stos adc mov xor or into jle xor ror push and lret sub dec cmp popa adc sub repz push sub xchg adc aad mov push mov sarl or xor fistp lock les sub ss rcll outsl pop call jb test mul sub sub sbb sub ret ljmp or push fwait jmp mulb ja into and inc in sbb (bad) xor pushf (bad) mov pop loop mov pop stos mov add add (bad) in loop sbb sub sub mov lds pop in aam call (bad) cltd nop cbtw dec xor or adc iret mov add sub push cmp movsb mov rcr push into in jl sub mov or leave movsl insb icebp std and repz dec pop mov pop in cmpsl rolb fistp add jo fldt mov pop mov fwait xchg in faddl push mov insl push lods inc add push pushf dec and add jmp sbb or fldl daa jne and adc mov pop or int3 movsl xchg xchg aas jmp mov mov ret lock popf (bad) push ljmp xor add mov (bad) push xor lcall jg pop adc repnz sahf xor cld dec out xor jg add dec bound push xchg push out push cwtl mov lds insb push mov xchg fmuls jmp jmp sbb xor fisttp psllw xor leave aad push test out xor lock cmp or iret jne sarb (bad) jge mov and stos push test fadds pop and clc and negl (bad) aam pop (bad) rcl dec scas test aam and mov mov mov repnz push les jmp addr16 push (bad) outsb popf gs jp shrb jecxz jb (bad) call ffreep bound add cmp mov ja adc xor dec jg cli fadd out lahf push ret push push sti xor push lret inc or negl sahf aad and sti xor (bad) xor (bad) jne daa and and or ret fnstsw lahf sub shrb or mov dec mov pop fisubr mov cmpsl mov out push lret pop aaa lret sub cmp and subl jp arpl dec (bad) mov lds fldl (bad) xor jbe adc shll roll (bad) mov scas sub cltd negl mov je pop cmp xor (bad) mov push imul jmp ror sbb push xchg sahf scas lds cmpsl int mov dec mov rclb inc iret push mov cli sub jne daa mov sub add fildll push and repz push xor mov stos popf (bad) addr16 mov mov pop and adc fidivr mov repnz decb and xor cld sub push js sbb dec adc mov xchg orl je (bad) push mov sbb fs outsb lret notl xchg inc jmp ss mov fcmovnb nop and mov dec in dec dec mov pop xchg test insb add negb xor inc inc add fnsave add shll add and pop ret and sub ja,pt (bad) inc pop adc push daa and cwtl xchg rclb mov dec (bad) fs lds (bad) cli sub daa jmp push push xor dec loop dec mov inc xchg cli js or incb int loope insl cld lcall aam roll or sub pushl pop jle (bad) pop xor popf negl inc (bad) jnp inc loope jnp je dec inc loop xor add ljmp dec lahf push xchg int3 pop or fist and pop pop inc jmp mov sub sbb mov lds test fimull mov and mov stos pop negl add gs pop cmp out mov adc push in pop xchg push or test mov xlat inc insl dec jo xor xor pusha sub cltd notl adc push ret jl addb dec pop mov or pop js les negb push fild mov cli xchg push mov or dec ljmp popf or mov pop loop in inc sub cs repnz (bad) push ds ficomp sarb stos cld insl in arpl cmp inc push xlat ret dec cld mov and andl mov cmp mov lahf push (bad) ds data16 lahf insb jb,pt dec negb scas adc mov aaa pop push imul in cmp jnp sub dec fdivs mov stc mov fdivl jp bound pop mov jne sub aam push mov pop fldcw js lods insl or sub fstps movsl cmp xor pop inc movsb stos mov mov fisttpl (bad) or outsb mov and mov inc dec push mov or and sub xor or lcall sub fsubl mov out dec adc push or or add lret outsl adc ficoml push mov add mov stos xor es iret out pop pusha mov pop es cmc lret out pop out mov or dec sbb (bad) ja cmp nop jle fcomps xor mov push lock mov xor daa xor mov jmp stos out inc cmp jl pop pop out fistpll mov ret test adc xchg add aas xchg mov int pop cmpsl jo in scas je loope add cmp mov sub stc dec xchg inc adc pop bound add adc xchg lret push idivl xchg mov push fistpl cs (bad) fmulp or aam lock xchg cmp sbb imul sub jno xchg loop fdivrl sub sub les test sbb icebp imul je (bad) adc pushl popf aas lods adc bound push mov ljmp push in mov insl adc jge mov dec into mov out xor mov (bad) adc fsubr cmpsb out lahf jl or cmp jns adc js cmpsb dec jbe jae cmpsl pop mov jg subl sarb leave cmp aam pop xor loopne addr16 pop push or mov int3 cmpsl jno,pt imul mov mov je (bad) lret out xor or cmc adc dec ret adc sub push mov es dec int3 scas into lds pop pushl lods xchg mov mov pushf mov jbe (bad) ja sbb xchg icebp (bad) cmp adc mov inc in inc ret dec pop je scas (bad) repz les popa xor cs je push and ret push adcb dec pop mov cli push repnz cmpsb dec fmull daa dec mov (bad) push cmp mov repz adc jp mov popf daa repnz pop ret mov dec and xchg nop push sub sub enter jmp or repz loop mov mov fnstenv sub loop aam pop and mov pop insb in mov in mov fsubs sub push jnp (bad) fnstsw cmpsl push enter movsl test inc add sub sub or add cmp scas repnz mov and mov outsb push sbb and fdivs loop xchg xor add insb adc test mov into and mov and adc inc (bad) xor jecxz xlat stos xor xor lea xchg loope lea xchg push repz loop out or and aad or dec pop loop xlat (bad) dec daa idiv (bad) in cli sub add push ljmp and mov push (bad) ficompl jle stos pop stos fnsave out clc iret (bad) arpl lock and push add pop and (bad) sbb inc dec fmull (bad) stc sbb adc and aad outsb mov add add dec sar jno sub ret sub inc pushf pushf imul outsb mov sbb push xchg scas mov lret mov (bad) xchg fiadd out sub ds rcll iret jmp popa daa (bad) sti or ljmp mov sbb out inc out lret add mov fidivl out or push out stos sub into mov xchg (bad) das cs in mov hlt mov xor (bad) out push sti jp loop sbb cmpsl push sahf adc stos loop lcall std xor ljmp xchg adc ficomp or fisubl mov ss je out or sub cmp repnz xor xor cli sub ljmp icebp and xlat out das xor jmp inc inc add daa adc add ret aaa and loopne repz mov rclb notl xor lret jnp adc jmp out xlat xor sub xor scas (bad) repnz in or div dec xor jle pop add fs ret push mov mov add add xlat and jge call or mov imul fpatan xchg sub les xor mov std lds cmp xchg rcll aam pop pop mov pop lret sbb cli cltd or xchg jmp call jne mov jb push add outsb sbb test lret xor xor or mov dec jne mov out adc out xor outsb (bad) or jecxz add pop mov call sub ret ja mov popf jp pop out fnsave or and fildl div (bad) out jb jle mov ret inc dec imulb inc das bnd inc mov inc adc fdivl (bad) aaa cmpsl inc lock fild jl push pop in mov mov nop push sub push nop mov jge sbb add add push fnstcw cli mov jl push mov call ret mov js fwait mov setl mull ret pop jae je imul sub add lods lds pop notl mov jle xchg dec stos lret and ret aam leave aad insl xchg cwtl in xor push icebp repz test ret add add mov sub fnstenv sub rorl sbb add icebp jnp xchg test (bad) sub out pop jmp in (bad) movsb scas xor mov adc push fisub push cmp cmp pop jb mov push add add out add pop cs mov push inc sbb jmp jg add pop loope ds iret sub and xchg bound fstpt repz data16 or leave add out sti jbe cmpsb sbb and push and jmp xor aaa mov mov cmp jmp out cmp push sub push push in and pop push sub mov cs jo xchg (bad) fsubr pop inc movl les xchg dec fcmovu rcrb inc mov mov adc add xchg lahf ficoml imull es or jne xor divl ljmp xor lret pop dec cmpsb add ja jne add scas cltd jge mov lcall stc mov lods xchg pushf sub popa (bad) movsl jnp mov shrb sbb jbe pop push pop fdivr mov cli fs lock out sub jge mov ss push cmp xchg and xchg xchg mov cld arpl notl cld icebp sub test inc inc jge sub sub dec loope jge or imul mov leave imul ds lods js xchg xor pop push push adc xchg and (bad) xlat (bad) out pop test mov mov adc not bound mov push fstl push jg sahf imull (bad) push dec out dec cltd scas and outsl idivb push add xor xor push fisttpl cmp xchg std out inc push jo xlat pop fild dec ret dec (bad) xor jnp dec (bad) aaa leave push xchg and add mov mov cmp or cmp lret pop push repz lahf (bad) and fnstsw adc shrl cmp xchg mov into arpl pushf or sub cwtl icebp fist and sub add daa fcomi fadds xor sarl (bad) mov call negl bound pop call sub pop pop mov xor jbe daa (bad) jb ret pop adc lods in (bad) mov scas adc ljmp pop (bad) outsl jg pop sub cmpsl (bad) test mov mov or push (bad) out sub push mov and push test push xchg ja push add and mov imul pop (bad) mov out test mov arpl jle inc movl fnop dec dec loopne mov jo cld mov dec sbb lea jmp mov clc (bad) stos push (bad) in jge ret inc xchg mov sbb clc xor insb hlt add les mov xchg mov (bad) cmpsl in (bad) fcmovbe jnp mov adc xchg into jbe mov sub push xor cli sub mov cmp fcomip jmp arpl sub mov xchg xlat mov mov mov (bad) push xchg ret mov das cli ja icebp sub mov mov mov lds cmp dec out push sub jne jmp sbb movsb dec ljmp das out push ret mov int call das in and stc adc insb mov imul cmp adc aas and out mov fisubl sub loop or mov dec fwait rcll xor adc bnd sub sbb dec xor dec orb scas mov icebp xchg ficomp imul jb mov insb sbb jnp (bad) (bad) dec add push dec test dec addr16 jmp lcall sbb jne pop aad sbb jae movsb xchg cmp push xlat inc out sub sbb or das xor (bad) jle repz inc lahf fs mov subb xchg ljmp cmp loop ret das jb sub pop mov out fs ljmp inc mov xor mov push or cli dec dec mov and mov into daa call and iret inc sub sbb cmpsl mov (bad) out lret push add jecxz (bad) stc ds lea icebp addb pop popf cwtl ds mov cli int3 jo mov ret lret pop sub dec add lret mov adc mov and repnz loope mov cmp push jns sub add mov dec shr loop pop xchg movsb adc add jne jmp xchg dec pop test jbe adc cli out mov or push push and ret xor jmp into push jle add dec shl adcl sub xor fs mov rcrl bound gs mov repnz ss add int add mov outsl mov inc lock fstpl sub and nop mov gs sti cmpsb sahf imul stos (bad) ja insb xlat mov and stos ret into out (bad) cld jmp xchg xor jmp dec lock data16 fisubr aam mov ds in add loop movsl pop sub mov push xor mov (bad) dec pop pop mov push pop add fcoml sub jmp or lea cltd inc pop int3 xor pop xor std and dec mov das mov add or cmc (bad) repz dec (bad) xchg xchg or fldl pop mov sub test (bad) jl divl pushf mov push dec push (bad) mov xchg xchg inc pop ret mov cs jne mov clc lods sti shlb mov and rcll ljmp or cli lock xchg add das sbb divl jmp mov call adc fsubrs xchg mov mov cmp push lret xchg ret into jne xchg jmp mov mov dec repz mov lods (bad) mov adc lret mov pop stos push and push jl (bad) out xor (bad) sti xchg mov bound push push jge sub mov leave sbb je adc test jg lret imul sub mov repnz mov jbe sbb out outsl mov leave xor mov daa out mov gs je stos fs xor lret xor pop scas popa push or outsl mov daa jecxz push jmp add sub xor mov add ret test ss pop lret test adc orb in imul jmp movsb pop int fcmovbe addb mov aaa ret pop ret ss xlat adc jmp inc dec cltd je xlat mov sub mov sarb mov add repz or sub jns outsl (bad) rcrl jg sub cmp fnstcw (bad) das mov out xchg ret jg arpl jnp mov mov pushl mov sbb hlt loop lahf push or cld and xor leave ljmp or icebp sub pop imul out dec test fucom aam repnz xchg mov xor in stos clc (bad) xchg push sbb lret aas testb fs xor mov jne mov or xchg loope popf inc movsl movsl xor cmpsl mov negb mov mov lods rcrl imull add jg mov dec lods ds imul into add scas xor xchg xchg cmpsl mov add mov insb jo sub jmp subl mov lret xlat mov xchg push xor cmpsb ret data16 (bad) cmpsb mov push jmp loope loope rcrl xchg push rorl push adc movb loop adc clc icebp xchg jns inc or xorl mov negl inc jne in jns test sub mov fcomps cmpsl pushf jbe ret enter iret dec stos add mov pop ss sub jecxz push ret sub jmp scas or jnp and ret pop cmp and pop sub fs cwtl popf add mov jb call push sub sahf lret cmpsb rcrl pop popa lret sub jg pop and or push xchg sbb jne or sti mov imul adc xor leave pop imul in add sub out idivb sarl pop daa inc cmp mov dec out icebp (bad) mov mov sub (bad) mov cs mov jmp add sti dec and and cmp push sub or add sti and sub xchg jmp sub out pop lea lahf rcr mov fcmovu lret pop hlt sti mov lahf adc out xor mov ficompl add ret gs cmp pop insb add sub icebp pop push and dec adc sahf jne shlb dec clc iret mov aaa outsl inc xor scas lret addl and imul dec inc stos and push adc popf repz or mov xor xchg repz pop xchg (bad) pop push sbb dec dec imul lret xor mov xchg repnz (bad) mov popf outsb pop mov add popf xor inc in dec ret in sub out mov das ljmp stc push add xor mov cs push imul mov sarb mov bound lods xchg in (bad) (bad) cmc insb das cmpsl cmp pop clc inc and pushf jmp push xor xor stos xchg inc add jb push fsub jb dec mov ljmp repnz and scas cwtl add or mov and roll mov sbb adc inc idivl dec lret mov adc push dec mov and sub jle in pop pop (bad) dec outsb ret in xchg negb jb pop (bad) lods dec ficomp sti sub test or push ret out je stos je adc mov cmpsl and ret fdiv mov xor out (bad) test pop fldz cmp push adc int3 dec lret pop daa out jae sub dec xchg std hlt xchg mov and or (bad) rcll xchg in and mov jp scas jp dec lret and out mov icebp fsubl mov fisubrl xor dec and dec cmovp cli daa sbb sub xchg pop loop sub ror lret aas inc mov and pop loopne pop mov sbb mov iret xor fdivrs xor aaa sub call mov pop mov sbb add mov (bad) lock ret pop xchg mov add int test mov fildl dec inc and mov ret loopne mov ret sti jb out into adc aam arpl lret (bad) fist loope push xor add into cmp xlat mov das leave fisttpl jl xor mov dec shll clc dec pop inc dec test adc data16 mov xor fstl mul ret mov add hlt rclb pop jae jge mov xor mov mov and push fs vaddsubps pop popf dec jb pushf dec sub inc and mov or rorl adc or addr16 adc mov (bad) add cli jge loope cmp xor aas pop add aad stc rolb mov mov sahf xchg leave mov push and clc mov daa xchg mov movsl mov ljmp xchg mov xchg idivb inc pop xchg sarl bound shrb movsb cmovno leave (bad) xor xor pop or leave sub jne frstor push pop inc mov jmp sti orl and jns into fstl cltd imul aad mov jae pop mov test adc repnz bnd cmp or push adc sub mov xchg xchg (bad) cmp lea cmp dec dec and xchg add mov xchg adc repnz inc dec or ucomiss or out fldcw xchg push sub icebp mov imul out pop jbe push shll adc dec leave sub insb add shll dec inc cmp enter push mov out xor outsl jae sbb mov push imul dec cli inc dec cmp out xor or push sub jg jnp arpl dec sub dec pop std push rcr dec enter pop lea jle sahf dec mov mov xchg ja lods add sahf mov daa enter push jb mov push repz xchg xchg aas add or popa jb test add ds stc shlb out rorb mov and mov imul mov cmpsl sbb das dec inc inc add jne mov adc mov mov jmp adc mov sub rorl lock negl inc (bad) adc sub xchg cli add jle jmp enter sub add testl repz ret lret sbb in or (bad) loope jns ljmp push lahf inc (bad) xor scas sub pop adc idiv xchg xor mov mov jge dec pop ljmp or mov aad popf ja call push sub mov inc pop aam push or mov aam pop jne repz (bad) aaa es push iret or mov and push dec mov clc cmp inc xchg vpor aaa cmp and fmuls lock dec pop mov (bad) adc xor movsl mov mov lret jbe cwtl lods clc mov aam push or std lds movsl fcomi sub xchg lea pusha mulb cld scas cmp and push (bad) icebp out jle add imul aam mov cmp (bad) es adc out cwtl jl mov sbb xor lods jge aas jae divb dec cmp or test mov inc xchg mov sti xor xchg lret stos adc inc jecxz or idivl inc inc push sub jmp cmp cmpsl xor into adc sub pop test (bad) and mov jmp lret jle fwait (bad) (bad) xor sbb fsubl push addr16 xor js out inc inc pop (bad) cmp xchg fcomps sub cli push scas or es stc sub sub lahf xchg faddl or mov mov mov mov das sub test dec lock adc dec mov outsl shrb outsl sub aam dec lret add out mov sbb lods xor cmp or push add dec mov adc cs jmp adc mov dec xchg add xor (bad) cltd or jecxz,pn xchg adc ljmp pop pop icebp (bad) sbb cmp out pushf stos add cmp cmc imul (bad) shl stos out and sub sub mov xchg (bad) pop (bad) push push imul pop sub xchg lret out mov pop pop int test clc dec lods fmulp out imul and cld fwait push enter sub xchg pop jp sub mov inc iret dec sldt and xor outsl mov in mov pop fidivr jecxz adc (bad) cli gs mov jo inc push aad (bad) sub in xchg mov adc icebp jecxz dec hlt or jb or fiadd sbb test rolb add pushf out repnz in and pop pushf int3 popf cld fucomi inc mov mov and mov stc pop adc pop xchg push dec insb mov fisub loope imulb push push or test dec xor mov xorb add stos or std imul out (bad) loopne ljmp pop jae xchg mov sub pop movsl gs daa inc mov in jmp add int3 jmp (bad) mov xchg or sbb push and out or and dec idivl xchg test stc mov or repz iret adc pop mov mov shlb or mov adc mov push xor inc mov mov mov mov or push and pop sub lret cmp sub xchg or int3 subl xor sub sub and sub and cli and xor and jne mov mov sub sub int3 mov ret adc sbb or mov cltd pop ja test mov add mov fcoml movsl or and mov push (bad) pusha xor and jmp pop mov out dec mov pop dec mov fsubrs ret test outsl in push mov add test sub mov jmp fadds stos jb ret jmp dec cmp cmp clc hlt popa sub jb xorl xor push pop mov sub fsubrs cli or jle mov xor dec cmp mov add enter dec mov (bad) into fnstenv (bad) in adc mov ret sub es mov cld inc mov inc cmp mov xchg sti fdivrl adc mov aam dec xor pop cltd gs add ret scas test sub daa pushf pop and or inc imul dec mov and pop jl (bad) out in mov cld pop hlt (bad) mov pop jmp jl push xchg lret cmc loop push and lods mov sub gs (bad) movsl mov pop les cmp jmp in push aad loopne into cltd mov mov sarl sti mov fisubr mov pop jns or cmpsl pop sub sbb mulb pop stos mov ljmp outsb leave out (bad) mov mov sti in (bad) idivb pop and (bad) cmp and push aam mov mov adc dec pop outsb (bad) jmp jmp pop mov xor pop and jbe jb or jns inc leave add pop mov fs int3 stos cmp add xlat xor mov sbb mov into scas mov jnp adc mov (bad) (bad) dec mov push (bad) cs or (bad) jg and pop xchg movsb mov inc inc add ja je out push mov or jmp movzbl outsb out adc into cmpsb notb jmp ss inc pop (bad) lret lret (bad) mov (bad) mov xchg mov mov or imul cs sub sbb cmp mov cwtl (bad) jle scas jmp mov data16 inc dec push fcoml (bad) sub notb shl xchg clc push or mov scas (bad) xor loope ret das mov mov rclb ss popa sub ret das mov xchg enter pop lahf adc push push pop push mov jl std icebp push sbb mov fsubl dec shrl addb or push add xor pop or out add or sub and nop pusha popf aad sbb xor and xor out pop (bad) hlt dec mov xor push sub mov aam adc (bad) cltd int3 cs xor adc pop call fwait cmp pop jb jb jmp shl bound jmp dec inc cmp sbb pop mov ds dec lods adc sti add lock xor jle imul xor xor lock xchg adc aad or add cwtl inc ljmp std movsl xchg lea leave sbb or js or in cmp call repz mov jmp in stc (bad) repz push (bad) mov or bound mov lret xor scas fisttpll cli sub mov adc and xchg out push in mov push sub cli outsl (bad) out push mov mov xchg mov dec cmp cmp (bad) mov xlat ret jae lahf stc adc out cmp das push lret andl mov and jp lahf les push jg xor jmp out cmp xchg inc lret sub sub sub fcomi mov mov das xor push scas imul xor or dec xor fidivl cmc xor add insb mov cmpsb push cld stos mov outsl inc add (bad) leave enter sarb sub jl das sub fildl cmp inc push adc jge lds clc mov fist dec icebp stc sub mov (bad) hlt and dec inc jecxz mov jl ss adc ret mov divb in dec data16 or loope ret and data16 lods bound push sub sbb push negb jb out lret push out mov dec stc je addr16 cmpsl addr16 test sub jo lret mov xor pop xor dec mov cs cld and xor and add adc loope xor stc das movsb adc pop pop outsb (bad) stos pushf fiaddl cmp and inc cmpsb adc add lret push data16 jmp sub mov mov xor mov (bad) cmp pop jmp repnz xlat mov xor adc add xor add rclb and mov aam push shrb sub test ljmp aad cmc in dec sbb ja repz mov lahf xchg (bad) push mov pop in cmp mov and outsl in mov xor clc cmpsb jp inc in lock outsl lods push leave mov int3 cmp ror push cmp adc stos faddp outsl mov ja leave test (bad) mov into xchg aad mov mov adc fnstenv mov mov aaa jg mov dec lods or leave xchg outsb push aaa leave loop jns inc leave xor and stos loop (bad) sub (bad) cmp in movsl jae and stos cmp das xchg cwtl cmp jae dec pushl push add ficom mov and (bad) fstps pop lock xchg scas sub clc push add or mov mov pop test in xchg add decb sub or push jmp or add add xor popf add jne imul cmp jb jge mov repz jbe push and popf lret das stos or inc mov faddl int das popa mov and ret dec andl int3 mov cmpsl sahf pop gs jbe test into mov shrb sub cltd xlat xchg lret pop in pop cmp sub daa add fmull cld and or sbb je aas and jmp repnz dec pop aam inc jmp xlat jle mov cld (bad) adc int ds sub sub rcrl push leave stc andl mov fstpl insl and lahf jp pop ffreep test add movsb pop fdivrs push jbe cmp sbb sub mov push lret neg xor mov shrl inc adc sub and mov (bad) idivb (bad) xor jns dec (bad) mov push jmp or xchg jnp sub xor into cmpb (bad) or add jp inc daa sbb push das out mov mov jg fidivr jl add in jmp and out jne adc mov adc leave ret and mov cmp addb scas cs inc rcrb xor out mov mov inc xor cmp ret lahf es movsl dec mov aas xor lret and push fdivl leave mov out movsl cmc loop push push push jno inc dec sub inc icebp xor outsb xor test (bad) out mov (bad) mov xor daa fsubl jg jl and in xchg pop ret (bad) push xor mov mov push xor call andb mov jne je adc or cmc int3 sbb adc rep mov cmpsl shrb xchg fwait xchg push sub (bad) les cmpsl daa cmp ljmp loope cmp add mov or bound and in daa cs xchg sub mov pop xchg into dec mov add insb jmp dec dec jmp mov mov push jecxz insb mov sti imul hlt out test rorl mov inc popf (bad) hlt or sbb push cs push rcll ds push repz jno imul pushf sti pop mov repz fmul daa jmp sbb in (bad) mov push inc inc or rorb jg mov add mov mov call push xor daa fcoml ss sub add jmp xchg xchg shr stc ret jmp cmp inc rorb push mov and dec pop mov pushf pop pop fildll data16 lods bound imul cli add mov in bound out mulb mov loop push mov pop mov cmpsl and xchg or push mov inc xchg cmp sub mov lcall mov xor rcrl adc or mov or jg sbb and mov jg popf leave out jg xchg or or and jp out scas mov push xchg decb sub mov out fldenv and stc mov pushl out repz sub lds xor je push sub push ss les push push xor clc dec out mov dec cmpsl sub sbb xchg xchg mov dec mov xchg movsl and fs (bad) cmp loop xchg lret pop xchg or mov sarl pop lock sti or mov or jg xor cmp inc adc cmp lret mov loop,pt xlat and or push pop sub mov mov adc mov cmp in fimul fwait mov mov shrl xor and out (bad) cmpsl popf into or and daa add pop pop xchg dec ret ljmp fbstp pushf pop mov movzbl push js or dec mov xchg or dec sbb xor adc sub (bad) mov xor push (bad) cmp sbb inc jle mov popa sub jp je push cmp mov dec adcb das and xchg ds stc call cmp jle add bound lods mov mov in add daa add stos (bad) repnz jnp pop mulb mov push pop es mov inc stos sub cli xlat jae and xor add dec repz or mov mov sti test cli negl (bad) pop lret ljmp ficomp jo mov hlt in mov jne ljmp data16 dec jmp mov xchg (bad) or jle push out das add hlt jo ljmp mov xlat mov inc out xchg sub mov pop sub cmp xchg adc xlat and xchg cwtl outsb repnz repnz cmpsl (bad) jmp aas aam ljmp mov clc repnz jecxz or pop lods mov out pop sbb adc cmpsl repz bound inc int3 cli outsb lds xor xor xor ret pop inc and pop nop mov xchg loope into movsb cli inc adc repz sahf (bad) mulb out fnsave stc ret jb and clc mov pushf pop std push sti pop lods imull push or pop or sti ljmp and adc xor mov das loop rclb enter scas fnstenv loopew (bad) stc sarl cwtl lret or stc imul jecxz xchg adc test in out jp and es pop pop cwtl fcompl add push sarl imul movl sti rcll inc cli pop mov xor xor data16 or cmp push popa sub add scas and iret dec out mov stos je stos mov dec call enter fisub stos mov icebp cltd in aaa xchg sub nop mov notl pop adc fcomps push dec sub dec jl push xor insl sbb mov shrb xlat or out xor loope cmp pop lds mov mov enter xchg jnp push fildll lret add and int jecxz mov xchg xchg out ss sbb sub leave sarl push popa jmp xlat cli mov pusha jne xchg je stos mov in jae sub ja ljmp jb push cmp pop dec mov stc jmp sarb iret out daa ret mov mov sub scas flds sub loope stos loop xchg sbb inc ja sub popf jge sub fstps aad xor out sub jmp mov in popf xor xor and or push repz repz cld movsl ljmp mov das test mov lods push mov (bad) mov pop leave jnp and xchg aad mov sbb sbb jmp mov cwtl inc xchg ljmp icebp pop mov leave pop lret repnz xor clc call pop inc insb or cmpb or xor cli sub mov xor loopne and repz inc add xor and sub aaa add sub daa (bad) pop lcall xor mov sub or aad xchg loopne or push clc out (bad) addr16 mov sub imul (bad) loope and (bad) mov dec mov cmp lret lea aas in cmp lret inc or push jmp hlt lods jmp pop addr16 (bad) icebp push mov or sub shrl lcall inc mov sub scas sub roll sub adc pop daa or ror lods ret dec xchg or out xor dec ret out xor dec jmp out push mov decl outsl fisttpl cmovbe sbb (bad) jmp mov jl sub and pop xor adc out scas adc xchg pop pop movsl lcall into dec lock push gs sbb (bad) repnz out sarl dec je mov ss rol sbb add mov mov dec lea push inc mov push cmp aaa mov lods cmpsb or in jmp mov sub sub aas jecxz rclb jmp test popa fnsave cmp in lock mov mov mov xchg mov insl adc push call push dec loope rcll sub mov cmp leave push je push mov nop jecxz cmc pushf xchg mov fldcw test imul adc ja fnstenv inc imul scas in out or (bad) xor mov push movsl cli fs xor and xchg ja js outsb (bad) aam xchg inc dec xchg mov xchg xchg enter ret pop lret sbb jp sub pop adc jns sbb adc mov pop cmp jecxz pop mov daa roll lcall cmpsl push or lret mov or jg or (bad) dec fxch arpl jg repz sub xor jne les out pop popf xor dec sbb cmc mov std push mov or iret jg mov fnstcw mov repz in and or and xchg iret in and pop mov inc lock push cmp mov stc push (bad) shr cmpsl inc dec sti sub sub or lods stc xchg std lret mov or mov cmc insb (bad) mov pop or push je jmp sub out sub push imul pop or pop fst sti jmp inc xchg call div or insb push or cli sub sbb loop insl into lods popf xlat push dec movsl sub insb popf jmp insl aad jbe in stos mov out repz mov std lcall xchg std xor adc mov mov daa test cmp mov mov or test lcall dec incl jbe push adc dec pushl call dec daa or jp lahf movl ficompl in daa xor mov cli (bad) pop ret in sbb or cmp push out adc out idivl (bad) in notb bound cld inc add push aam jb inc lcall jb mov mov mov dec ljmp and mov mov xor mov bound into push divl mov std out mov jo pop sbb vpaddsw adc jo sub jge pop ret xchg jmp es push lret add pop lock pop rcll pop or mov aas popf push or mov adc push rorb flds stc inc xchg (bad) mov add dec xchg pop dec add and loop xlat lods (bad) repnz aaa call mov cltd xchg cs imul enter fisubr jmp bound pop mov mov shrl outsb lock jmp fstps dec mov in cmpsl roll mov and aaa fist fnstenv icebp adcb (bad) xor push adc in xchg cwtl dec xor jg mov test (bad) pop and fnstenv inc mov insb push push inc out add jns inc or jne cmp aam out mov pop dec movsl inc cmp or mov in pop ret lods flds xor sbb xchg scas xor jmp clc test mov inc les pop fldl2t mov and cli (bad) test sbb arpl push stc testb mov mov rolb call or mov sbb repnz jb push lock sti into bound jmp dec jo es sub pop stos cmp pop mov fidiv js mov jbe dec (bad) loop shrb push xchg rcll dec push dec lret cli xor ret pop push pop imul aad jae stc sahf or pop pop jns out pop xchg mov dec inc fnstsw mov das test bnd push lds mov mov ret out (bad) notl adcl lret loopne shll cld (bad) loop xor ret iret jmp js dec out sub jnp cmp test nop push adc lock out mov cltd mov test leave lcall jne mov jmp shlb ds fs add sub jecxz adc and (bad) je (bad) xchg push scas push jg add mov daa or xchg push cltd pushf cmpsl roll cs or jp push jmp out call mov dec inc stos or sub xlat cmc das out cmp (bad) mov imul addr16 xlat mov or mov pop mov mov add inc add pop or mov jns xchg out arpl std pop aas lret cld (bad) (bad) repz cmp loope xchg cmp bnd mov pop in pop fcmovu jno mov sub sbb pusha jmp push sub jmp xchg lcall xor sar sub jecxz jl pop fsts xchg (bad) flds test or dec lds ss xor jne stc sbb cmp ds leave je inc add mov cmp add (bad) in jb adc mov mov cmp cmp jno leave pop int3 es test inc nop bound cmpsb inc jbe lods mov xor push adc mov (bad) repnz frndint out or pop out sub push sub in nop (bad) mov or sub int3 xchg xchg add insb (bad) jo mov or xchg adc int sarb repnz enter xor cmp pop xchg sbb mov mov inc mov ja cmp rcrl ret add xor sarl ja mov rorb neg adc lods je rolb ret xchg cmpsl ret jle mov ja cmc sti mov out push xchg xchg pop mov pop das xlat mov dec ror pop enter (bad) sti mov cmp lock pop aas cmp out cmpb (bad) mov pop mov out pop mov ljmp cmp xor fs sti and or jne jno push xor and dec xor xor dec lret fnstenv xor mov sub rcr test xchg push dec xlat in outsl xlat les stos adc cs jecxz sbb ds loope cmp movl push fwait lods sbb (bad) psrlq sbb add add fldcw inc lods fadds dec push cli mov xor lock lcall xor mov mov push inc xchg ret js push fbld rcll mov out push or or out (bad) xchg ljmp mov out jno,pt dec fmuls sbb sub jge jbe cmp pop repz ret scas dec sbb add ret cmp bound sahf lods jno and mov dec movsb adc jl dec divb jge ret xor dec cwtl in pop mov scas or or aam leave std xchg ja shlb lods push xlat test lret sbb xchg add ljmp rcrl in iret add xchg cmpsl hlt je or pop mov cmp mov rolb jmp cltd mov les pop ljmp push rcrb xor rcrb jge lret popf divl cmpsl sub lds pop pop lret xchg xchg mov (bad) test xor ret leave aam sub inc movl leave and sbb mov adc sahf lds cli push loope test or adc sub adc test pop test pop cmpsl mov ljmp xor (bad) stc arpl mov dec enter scas adc enter rcl mov repnz sub outsl test mov je push inc in dec xlat dec push (bad) sti fistl sbb jmp jle shll sarb sbb pop repnz les xchg jb loope (bad) (bad) call shl add sub iret jecxz adc mull jmp xchg mov in mov lds out xchg mov inc gs test mov pop imul sub jno and aas popf and jle dec (bad) pop stos mov jle dec cmp cmpsb (bad) mov and mov xor stos xor scas mov iret sahf mov hlt push imul icebp andb leave das mov sar xlat sub rcr cmc loope sub cmp stos xchg into xor and movb sub cmp cmp or jg into out sbb pop daa outsl cmpsl xlat dec enter ror and push stc cmpsl pop jle sbb xchg fsqrt int jns leave inc xor lret or sub cmc data16 jge out leave cmp aaa and nop (bad) xor adc clc add das sub test jmp mov addr16 hlt in sbb or fs mov sahf in cmc adc pop idiv xor int3 mov add or lret out inc roll mov jns in (bad) xchg imul sub call (bad) xchg ja repnz outsb jo scas add mov dec mov dec fdivp pop ret nop cld mov xchg shl rol call repnz mov dec add es push push mov dec loop lds (bad) pop in mov cmc adc pop stos pop repz cmp mov xor xor xchg lret loop aad pop mov cmpsb or jle out xor jne fs and icebp or or fstl lret mov enter scas push (bad) gs push dec gs or inc mov mov or adc push adcl pop lock shll mov cmpsb outsl pop out xor mov insb jge xor xor dec cli sub push xor sbb mov test out mul inc mov jae dec jbe imull sti mov shl add mov pop xchg ror mov cs sub or out sbb xor clc lcall mov lret lret xor (bad) data16 sbb stc ret cmc ljmp repz adc mov les cmp mov dec fcmovnb add mov outsl jmp cli sub lret adc xchg cmp icebp icebp shrb mov loope push lcall and fstl rcll push scas mov sbb cmp push dec iret adc repz ja jge ja inc in iret mov xor imul lds ret cltd arpl outsb mov aaa push lahf and leave std lcall sub xor cmc inc dec push lea test out jg push out adc add adc (bad) lret add add xor jmp div and pop das in movsb xlat sub adc pop inc add mov out popf xchg cmp xchg mov cmp and ds jmp addr16 sbb push add ljmp xchg mov popa push sarl aaa popa add or cmp stos cmp cmpsl push sbb sahf bound ret cld jbe repz sbb jl adc adc popa in mov dec out in int3 movsl out sub push or into outsb in ret and sbb sub pop fist (bad) jg test add dec clc outsb movsb add push push lahf shll js fprem1 insl xchg das stos sub cld shrl xlat test pop lds mov mov add push add in xor or outsl lods ss in adcl mov test mov xor iret xor xchg (bad) cmp insb mov popf mov dec sti sub decl mov std xchg mov call fsubrs adc scas ret mov jmp repz mov (bad) cmp dec out jb pop jle leave jle out leave add xchg (bad) es inc shr iret cmpsl (bad) scas cmpsl add mov xor inc fidivr xchg mov mov jp repnz inc cmp xchg ror pop or mov xchg jl jo and fs addl xor ret mov jbe and cmp xchg in (bad) scas fxam maskmovq notl call icebp pop popa scas jb pop inc out (bad) aam and adc popf gs cltd (bad) cmp (bad) lret mov lret cmp xor sbb cmp cld popf imul add mov outsl mov push int sub or and fscale popa dec pusha jle je ret pop lds neg stos sub pop jle fdivp pop cwtl (bad) xor lcall dec cmc pop jle popf (bad) shl add rorb sub incb xor cwtl and ljmp adc lock lahf jle outsl cmp xlat fistl mov icebp sub fild test mov (bad) shrb jmp pop jbe mov mov sub mov xchg addr16 out sub jne lods adc mov enter int xchg jo sar ljmp popf mov add out jge leave cmpsl fstpl sbb push shl test mov cmpsb imul aaa imul or enter repz vandnpd adc pop bound mov aas es mull jnp add mov ja lahf das jg outsl pop push ds out mov ficomp mov mov fisttp loopne ret xchg aad push sub sub mov negb push aam ret aam (bad) lret ljmp push push stos pop int sub cmp (bad) xor scas xchg mov push or (bad) lock iret sub pop jb pop and pop jmp das rcrl pop mulb loop jne pop and add adc les xlat mov stc add push xlat mov mov fist pop (bad) mov pop std push mov (bad) push fsubrp jp xchg pop jge jle jne sarl lds out add push fcmovnbe cmpsl loop fildl mov xchg jns mov mov cs leave ss (bad) lahf or (bad) mov jne push out mov test push xor mov pop jecxz ja sarb cmp and hlt test mov icebp test push lods and icebp cmpsl pushf shrl icebp sub push stc loopne add pop and cmp xchg stos repz (bad) dec out jbe fcomps out sub sub ljmp out mov cld loopne or aas cltd dec (bad) out xchg scas ds sub js lret icebp sti inc and push pop leave mov imul outsb js arpl enter ljmp outsl lret imul in or popf jnp cmp popf sbb sub inc (bad) xor cmp pusha jnp mov ljmp loope outsl sub jb push ds dec sti sub lock jns jge dec lea xor push xor push icebp sbb mov das ret inc adcb pusha add add mov call cwtl leave mov shrl dec outsb xor out inc inc add add cmp xor pop daa imul xor mov dec sub out cld inc push jle jmp bound sbb ret jbe arpl xor lock outsl mov mov mov mov xor pop int3 in out jb data16 xchg jge scas ret test jb cmc test sbb cmpsl fisttpll (bad) testl stos add sti xor ficomp (bad) mov or ja mov lods movsl sbb inc jecxz (bad) fnstcw sbb cmp sub xor push push ret dec push mov fimull inc sub mov cmp lds adc mov test push push js fldenv push push dec lcall pop mov push movsb in cmp int3 scas daa pushf popa jg mov (bad) xor mov pop ret and data16 shlb test sbb (bad) mov mov push pusha adcl aad or jno xor jnp push or push in notl jle xor add movsb adc xorb shr add arpl inc dec and or sbb repz rcrl jmp test mov sub xchg aam notl ljmp push mov (bad) jge cld and pushf jmp jmp and push push bound ret jl inc add push out or sub and inc cmp test xchg fnstenv pop jo sub mov add xor add push in ret pop xchg movsl adc cwtl cmpsb xor repz and insb fmull xor dec es or out js xlat int or mov pop jb (bad) insb push lods xchg cmp or inc and shrb xchg ds sbb and lock ss dec leave (bad) push pop (bad) dec mov loopne xchg test sub scas pop mov jbe loop sub cli cmp divl int3 lods ja ret clc ljmp mov loop sbb add leave out popf (bad) adc mov adc and cmpsl inc jae or std sbb lea xor xor cmp or push xor add mov push insb inc xchg lcall aam adc (bad) fistpll sub jo xchg aad mov call or icebp or mov and aaa mov sub sub cld fidivl in or rcl pop mov push jnp mov jmp enter das jp mov aad repnz sti lret xchg inc lds xchg insb inc mov xchg adc repnz add pop xchg xchg mov add xlat pop insb inc cwtl cmpsb xchg xchg dec aad add pop imull stc in sarl shrl xor out lds sbb mov imul (bad) fidivr (bad) mov mov and xorw ss repnz movsl lret sub jmp xchg sti repz imul or (bad) sub fmuls clc das cltd and cmpsl dec repz ret add jecxz mov aam outsb or pop mov jg cmc es mov inc adc sub ret push jle push pop xchg stos popa add ret jmp aas xor std stc (bad) jmp pusha gs xchg adc or and push pushf jnp push inc pop sarl outsl pop pop out cmp adc xor test mov ljmp mulb add out sub dec adc sti mov and adc mov cwtl movsb sub adc mov push and mov jl add jle or dec test (bad) out lods hlt lahf in inc out sub or or fucomi jecxz push sub lods (bad) and push lods lret rcrb lea xor loop xchg rorl mov sbb and fiaddl aas sub cmpsl pusha or xlat dec dec push sbb leave jge jge int adc nop cld pop cmp mov sbb inc cmpsl xor or inc jp pop pop lret out sub add fcoml insb xchg pop mov arpl lret mov inc pop cmp or ja mov (bad) ja pushf dec lret ficom adc add cmpsb popa dec sbb movsb add pop or or sub icebp dec jne mov push push incl cmp or in jae movsl fisttpl cmp jno int3 mov das adc (bad) xlat stos xor sbb mov ficom pop mov or sti cltd mov cmp rol mov mov sub cmpl ret push call mov mov cmp cmpsb movsb push in jae arpl xor mov sbb stc lret pop imul (bad) (bad) dec pop xor sub add jg ficomp outsl dec fs inc mov add push mov push push or in not push je std das mov jno pop lret or std dec jecxz sbb push (bad) mov and xchg lock xchg pop adc (bad) jl mov fistp ljmp adc enter jnp repnz das test (bad) repz pop pop outsl call aas jmp mov es pushl pop (bad) fcomp xchg or mov mov cmc lret movsl dec xlat adc mov inc adc cli pushf (bad) push or enter notl push nop cmpsl hlt ljmp jp sahf repz jne xor pop xor or lret ds sbb mov xlat add mov jne shrb push push lds loope call jge mov ja xlat daa cli add das stos sub cs pop sub xchg jecxz jbe adc ret in mov or loopne out inc orb bound jne cmp sub sub mov dec xchg add mov shll and aam into shr add xlat mov loop mov xor xchg xor ljmp push pop inc sbb rcll jle iret sub sub lahf inc jl fildll test daa loop xchg sub mov push roll mov add mov jae ds mov das lret aam push push dec das xlat pushf mov mov xor mov (bad) insb pop out dec inc mov (bad) pop add imulb pop cmp fisttp fwait push add xor inc push pop rcrl add sub mov aas dec adc ljmp add es lret scas and add mov sbb loope pushf jne sub outsb sub pop aam jbe push (bad) addr16 sub in popf jl pop mov cmp fisttpll mov mov mov popf push inc pop xor lock mov shrb (bad) stos lret sub fidivl shrb cwtl xlat mov aas scas mov and ljmp xor xchg cmpsb pop idivb aaa fxch imul xlat pop int3 call js scas xchg xchg jno ret mov sub dec mov mov cmpsl and xchg into out lret xor sub push mov xor jmp push sub push pop xor insb adc sub cwtl lock imul add les and xor sub mov jg divb inc ret movsl test (bad) lret ss mov hlt pop push xor xor sub xchg scas jecxz xchg pop or and mov dec sbb mov stc ret push push xor call and sar mov or mov xor out pushf (bad) (bad) xchg fld mov (bad) fucomp jg cmp mov ret push inc add and movsl pop add mov lods xlat shll adc mov scas jbe push loop mov jge sub mov dec push and xor scas sarl out into jle and pop bnd test dec sbb mov add insb dec pop (bad) xor sbb daa (bad) xor cmp in insb gs test pushl pop shll mov jmp fisub mov pop or pop xchg xlat xchg dec xchg xor xor daa and sbb int mov xchg imul lret mov test pop loop nop adc sub cli jp or pushf (bad) cmp mov repz add out inc inc rclb xor aam (bad) ret push inc imul lret (bad) and imul test repnz sub mov push jno jmp ffreep mov add mov mov (bad) pop push std cmp sub cwtl sub subb orb or fldenv push pop sub daa (bad) mov add or mov mov lret ljmp xor out popf (bad) cmp cwtl mov dec add or mov mov cmp fst inc push ficomp (bad) pop jle push mov daa sub rolb adc dec jp mov xchg fsubrs xchg int3 sub scas sub or lock or sbb lods sbb push pop adc pop xor imulb add push mov (bad) fcmovnb dec mov daa cmp mov aas xor aam and lahf andl and pop ja addps lret mov js add or pop mov mov in xor mov (bad) sti lret and fbld pop sub ss aaa and sub mov mov in jae xchg xor add mov pop ds daa negb sub add dec iret lock call jne fldenv and cmp leave (bad) lret test dec les jmp add ljmp pop shrb repnz xchg pop ret mov in mov gs and xor mov lock fwait pop jg bound fnop test fnsave fsubrs and sub das add push dec in mov jbe ucomiss pop mov sarl mov pop jmp je pusha das ja daa jbe dec repz xor fisttp js and inc sub out add out mov jmp jecxz add mov adc sbb mov pop xchg testb push test sub into mov jmp push je fistp mov arpl and xor stos push cmp adc movsb out (bad) mov pop out adc ss clc mov imul xor inc lahf xchg lock clc sub (bad) xor sarb adc les pop mov adc add sub shr add cli leave rcrb or out insb hlt mov sub mov mov sub mov daa and jp xchg fldt dec insb push or mov out lods ljmp out enter add push adc dec ret stos f2xm1 and push call decl adc movsl out xor aad cmp dec lods hlt xlat scas pop popa ret je jmp insb out pop (bad) sub xor sub jmp xchg xchg pop sahf ljmp adc or jmp or clc xchg test mov movsb dec xlat jmp push out cmp mov cwtl stc jecxz pop outsb pushf add (bad) fcmove aad scas sub dec inc lock scas lret or sub movsl idiv sub pop or (bad) loop (bad) fsts sub orl lret cli push ds inc in dec cmpsl and jb or mov xchg sub xchg movsl mov popa or lods adc inc (bad) add push bound jmp add sti sub insb loope sub jae pushf imul ljmp jmp shll and or cli leave jge imul leave add jno add sub shrl push std outsl adc jo divl dec xor xchg das scas mov mov xchg repz pop je mov cs out mov sbb mov adc cmpsl jns mov cmp bound repnz (bad) jle sub cltd adc (bad) sub ret push mov icebp loope cs push test sbb jns and xor mov xor mov dec enter in pushf mov xchg xchg cmp and imul pop mov rep sub out sub lahf fs and (bad) jg cmp mov pop jle out jb loope push into sub pushf mov adc add fisttpll pop loope dec dec int3 xchg mov lret sti pop mov mov push jnp loop stos fisttpll push out xchg addb push notl sub clc adc or xchg cmp mov pop mov sub adc adc adc sub in xchg stos push and js dec mov testb (bad) pop xor inc movsb movsl les daa and imull dec sbb rcl aad out loopne jmp fmull pusha jle inc sub dec xor push xchg sub jne ret xor (bad) xor shll inc jp (bad) xor xor sub icebp popf call imul xor cmp sbb divb xchg (bad) dec dec sbb cmp pusha fisubrl xor mov cmp or jae int3 mov xchg xchg rorl pop or or mov idivl insl jle adc (bad) pusha pop mov aas mov mov sub fbstp frstor pop add push dec sar shr sub and dec xor pop and mov out bound or dec xor sbb or nop push mov outsb std scas xchg add popa (bad) mov f2xm1 lods js jo out pop into dec lahf mov xchg repz (bad) mov sti out sub cld lahf cmp call adc jecxz xchg negb push and (bad) push inc ret pop push pop mov ds push inc xor pop aam dec cmp repz pop fstpt iret out fldl inc faddl data16 jmp fiaddl xor in and xchg xlat jo xchg push in jge out inc out and pop sub imul cli sub popf ja mul inc jl sbb sbb fildll or btr movsl sbb inc leave adc call cmp cmp sti jno mov push cld icebp (bad) in inc cmp cmp pop jle (bad) scas mov lret jle (bad) push sub repnz scas mov iret pop (bad) enter push lock test pcmpeqw leave loope jmp mov mov pop gs and cli jle lahf xchg mov (bad) scas in mov pop sbb in dec test mov jb aam (bad) jnp (bad) sbb sub int3 movsl imul xchg jg sbb xor call dec jmp xchg js std sti aas (bad) vpmulhw mov rolb cs imulb repnz push xchg xor cs jnp movsl data16 jge nop mov lods push (bad) popf std mov add xchg xchg cs jmp fsubrs cmp jmp popf test mov lret cmc bound ja inc push adc mov xor xlat xor push outsb inc dec fldt loop lcall enter mov (bad) xor popa sub mov in outsb into xlat add xor sarb mov adc enter add repnz or popa add shrl insl inc jb mov jp xor aad or add xor ds adc mov jecxz xchg cmpsl sahf fwait inc or pop pop inc clc add sub push xchg jnp ret enter notl pushf in mov and dec outsl fnstsw mov pop sbb cmpsl jo push pop in or or lret test mov pop sub xor sar sub inc mov push ljmp cmc (bad) and std cmp js (bad) ret (bad) cli es sbb add dec mov cmp ds repz mov cltd push inc xor mov push add ljmp dec mov imull and inc xchg cli xor xor fs pop mov idivb xor lahf mov dec lret stos pop mov xor cmp repnz js pop mov rep mov xchg mov xlat add ret mov sarb pop or mov daa add lock jle add pushf jo and lahf inc lcall pop jg ret test ret (bad) pop push je add ret (bad) leave (bad) mov test (bad) rcll push fs int repnz fnsave mov jmp mov jae sahf in adc ret fsubl cld daa imul dec mov dec inc cmpsl add push sar push (bad) push outsb pop mov mov clc or mov rclb mov mov scas mov jne gs add mov pop pop sub lea or cmpsb mov adc mov test test mov add lods adc xchg repz add mov xchg std dec jne pop pop jl jp xchg adc fnstenv sbb xchg push repz sub test jmp pop xlat iret mov loopne mull push dec cli lds ljmp sub mov and addl pop mov sub sub lods pop addb mov jne in mov mov icebp jmp outsb aad pop idivl popf rcrl adc fidivr xchg popa cli mov or and insb mov sbb mov dec adc push enter jbe sub push jbe xchg mov scas mov or dec std dec aas xor jg decb repz mov mov push popf sub inc daa jmp xchg out stos sub push pushf add movsb xlat jns dec or mov cmpsl inc leave iret outsb lret mov and daa cltd jne out adc mov mov pop loope sub icebp xchg mov stc cmp aam dec call cltd clc std jecxz daa inc lret lds and push and mov mov sub into mulb xchg cmp stc aad xor out mov int3 sti fld add out jl mov dec jle daa je les loope adc or mov sub test add repnz into dec cli shr push shll shrb dec sbb fldl2t cwtl js adc cmp sub jmp adc dec ret pop out sub mov xchg outsb push ja lods pusha lahf test in mov sub pushf fidivr jp inc jmp adc mov js push pushf pop add ds sub fwait aad cmp pop ffreep mov negl jle test es pop data16 push hlt sub mov sbb not cmc mov jmp fimul mov adc add popa fsubs fisubrl xor stos test xor xor lods mov mov hlt pop add mov jmp xchg dec loop ret fsubrp (bad) (bad) ljmp mov fisubl (bad) fsubrp mov and inc xchg imul dec cli cmpsb mov xchg and xchg pop add enter inc les shr fnsave lahf push bound ja lock iret adc mov mov enterw das cwtl and adc (bad) cmc fistpll mov cmp movsb push cmpsb mov mov jl mov dec or pop (bad) push cmpsl aam mov out ds lock popf fcoml mov idivb adc and je imul aad or mov aad xchg lret cld mov ja ljmp bound mov rcll xchg clc xchg call mov and imul sti loope test mov pop push push pop pop xor roll shl jmp out pop sbb sti pusha push aaa in in daa or aad xor dec push outsb out dec scas mov mov and lea cmc mov xlat mov imul (bad) jb dec pop imul push xchg pop dec push mov push xlat mov fldl2t out and xchg xor sub sarb xor out lock cli xchg fisttpll mov (bad) jbe and push or xor pop push jge jo pop (bad) sti sub repnz flds imul js out mov test rolb cs and jg sahf pop mov push xchg and adc pusha xchg (bad) and je mov sahf cmp dec xor daa outsb push (bad) sub cmp mov popa and sub xchg and rorl sub (bad) popf push mov jg mov cmp sbb movl aas addl (bad) (bad) leave xor stos jecxz or add push sbb shrb lds xor icebp adcb call and mov cmp xchg push mov test movsl xlat adc sub pop (bad) jmp (bad) leave pop add cltd hlt mov mov pop jae inc sub pushf pop (bad) sti or into sub xor mov push pusha stc mov xor imul or pop cmp and gs wbinvd (bad) mov (bad) xor jo xlat popf jbe gs gs mov (bad) stos int imul mov jmp xchg push cmp cmp sub mov xor pushf fidiv xchg popl and fcmove push popf lret push in add and pushf jmp inc jne add dec mov adc or testl and inc xor pop push pop test sub cltd cmp incb jmp xlat sub jge mov push mov cmp mov mov aaa fnstenv dec das out jae pop pop adc sub and push loope into cmp aam mov sbb cmc xchg cli mov repnz jbe sbb xchg adc cmp in or push clc inc ret add cli add aam xchg push and aam (bad) iret dec cmp cmp ficom pusha aaa negl pop sbb mov (bad) mov sub lahf repz das data16 or cwtl out mov stos test fisubr jecxz or add mov fs fnstcw sub inc inc dec iret lret cmp and (bad) out dec std dec shrl jb add sub xor and mov je inc fadds popa loop push test in pop outsb mov addl icebp push sub xlat cmpb sbb mov xchg lods imul lock push mov fs sub iret dec add jmp mov mov add lahf push mov mov test (bad) icebp or divl insl push mov outsb push pop mov gs stos (bad) pusha jecxz mulb and lret shll push repz cmp jmp pop dec mov inc dec push jo jmp leave jo xchg (bad) repnz xlat out xchg push (bad) imul popf pusha (bad) rorl or add and mov sbb sbb sub mov call xchg xor imull out xchg lock dec mov xor cmp jg pop out jle jns lret sub scas xchg dec xor dec aaa lods sub xchg out cmp fnstcw out pop mov dec xor inc lcall mov sub or (bad) sbb push repz das and insb add mov pushf loope scas sub outsl notb pop ret push pop jnp sub dec outsl dec mov cmp subl inc mov push cmpsl fldl fdivrl fisttp pop adc push pop or pop gs sub insb (bad) pop das in xlat cli xor call jge mov aas cli lcall sub cmp fcoml or mov out lods sub in stos ja xchg inc pop mov lret nop (bad) dec fwait push stos repnz fist (bad) ficom orl in (bad) fwait stos dec repz rorb pop data16 mov vmovlps loope mov push xor or iret adcb (bad) add mov or call jo xchg lcall ret pop notb adcb add sub inc inc lret imul mov mov dec cli pop mov or add icebp into sahf sub aam mov leave aas lods lock inc cmpsl jge inc imul jge ds lahf (bad) dec jecxz pushf add and pushl push push jle cli int jg adc add cmp and das fptan pop add inc das (bad) int3 repz std fwait mov and daa jmp inc lods or mov test sbb jge call jb jg in stos sub jmp mov insl add es dec in lret les xor ret mov add xor clc add scas dec adc idiv pop lods rorl sbb sahf and dec rcr lds aaa jae jle js pop sub xor add test loop adc gs bnd arpl mov push cmp add outsl jge cltd jne add in enter ret cmp mov push or sub fidiv push xchg or mov cmp mov push push or push mov and dec xlat cmc jns xchg push xor push inc repz out mov mov pop out lret loop cltd jbe test fmuls xchg stc movsl dec pop mov divl cmp push dec dec adc decb and pop (bad) or xchg push imul mov insb loop shrb or sub roll mov sbb leave add popf pop ret xchg push fs mov and std pusha incb sti xchg sti fnstcw loop push xchg cmp adc mov out mov xchg scas mov xlat stos test mov out call and insb test inc test enter (bad) ja dec popa ja int3 mov and sub inc xor jns dec pop test lds repnz add cld or jnp inc shr mov sbb cmp mov push pop mov ret push xor mov movsb dec add sar sub leave xchg int jb ret lret insb sub dec jmp xchg push jecxz sub lcall loopne fild xchg inc aam sub icebp sahf cld imul jmp dec test stos mov fidiv pop inc subl xor jmp (bad) jp jae adc cld mov xor sub stos bound lea or test pushf arpl cmp pop loop xchg in push mov icebp cmpsb push jecxz ljmp shr popf lret sub aam sub in sub repnz cmp out repnz sub mov mov stc add movsb adc clc or pop push lret xor push pop push xchg scas pusha test (bad) jb jecxz inc test cmp lds hlt movsl mov cltd mov je add ret inc mov pop dec xchg aas fisubl xor adc imul pop mov ja leave int int (bad) lods inc pop jmp or test jae (bad) repnz in cmp sub mov mov add repnz mov (bad) dec adc mov xchg mul sub add or jno mov ret (bad) ljmp pop push add mov into xlat lret in jl out mov in scas neg das ret lahf nop rolb xor out lret repnz and mov repz mov mov jge mov pop popa pop (bad) mov mov sub faddl lock push popa (bad) cmp pop leave ret aas bound push out in xchg inc imul outsl mov or movsl or repz xchg cli jge icebp inc sub int3 mov repnz dec ja mov jne or lret mov pop jns jo mov loopne sti repnz dec mov xchg xchg js enter xchg pusha cmp push lret int3 insl and or jmp aad pop or push sbb pop or mov movsb mov insl mov add and adc adc fwait mov sub add adc cmp mov (bad) js sub mov jne dec pop and movsb scas std and inc xchg je clc push test xor mov int3 jae dec add fsts sti call fxch adc adc mov xchg sub xlat sti int pushw and adc pop sub test mov std lret xchg mov mov ret (bad) jns movsl idivl aam sub add pop jg,pt cmp lret xor mov test movsl (bad) sahf fistpll lds lret lahf push cmp push pop and adc mov push test mov adc sub into jge mov ror lock xchg mov inc mov adc pop mov xor aam (bad) mul add xchg push cli ja je xor cmp sti aas mov xor lds into cltd sbb adc jl imul je icebp or test (bad) and cmp repz xlat gs aaa mov sub (bad) pop xor mov xor sbb xor inc jne pop or xor call repnz and gs (bad) gs cmp and and sub test scas dec in add mov add sbb fbld sub popa sub add xchg mov mulb jmp dec stos das or push adc pop rcr ret div gs mov clc aad sub mov inc stos sub mov xchg mov push in and dec decl inc cltd dec and or hlt jmp push and lock add mov mov test sub (bad) xchg mov inc cs adc popf rorw pushf cmp out lret jp les imul and and or push sbb pop push loop mov xchg push dec movsb clc xchg pushf xorl push cmp pop pop inc out fs pop loopne cltd pop cwtl add js (bad) jae das rorl lret pop push or movsl dec hlt mov lret shlb inc fdivrl xor pop dec jle sbb pop pop xor add rorl add lods mov ja cli inc fsubrp and (bad) rcll push decl xchg jecxz jp push lahf cmp je test rorl xor mov and xchg scas int xor (bad) mov inc das jbe in cli lret xchg rcll (bad) sbb sub lret pop dec push mov fs mov mov into scas gs dec dec mov add out mov lea pop add (bad) add sub stc data16 stos jbe jle pop out xchg mov adc sbb sub repnz cmpsl xchg mov shlb jb pop xchg ljmp xchg arpl sbb sub sub mov sbb push jge mov (bad) shrb dec test mov fnop xchg cwtl cmp popa jg aaa ficoml cmp xor mov dec cld or mov inc in fdivrs lock pushf (bad) push fnstenv or or xchg stc ret (bad) mov lea add in sbb xor jae mov (bad) xor inc jns rcrb dec and mov mov testl out cld mov dec xchg dec repnz inc sbb cld test imul xor jno (bad) mov ljmp jmp xchg mov or loop int jnp mov sbbl test xchg pop lret inc pop dec fucomip or lcall das push dec pop imull imul push iret xchg outsb leave (bad) mov dec faddl aam pop out aas mov adc rorl lret (bad) xchg cmp jecxz cmp das rcl xor add or in dec daa idivb bound mov fiaddl and loope hlt and loop push push and leave ror jp stos xchg lret repnz jecxz xchg out cmp loopne pop mov fistpll cmp arpl rorb cmp lds cmp cmp aam inc xchg cld repz (bad) loope aad fisttpl ret rdtsc lret hlt inc scas ljmpw repz cmp push mov cli bound rorl push sub (bad) sar mov hlt mov push mov sbb add fimul adc scas loop xchg cltd jbe das xchg lods mov dec add adc and xchg mov cltd push mov jge andb (bad) xor bound test mov inc sbb cli mov in sbb sbb or sarl add in das in test mov dec fcomps mov jecxz sub (bad) pop jbe rcrl (bad) std outsl sub jmp inc mov mov adc xor sub gs xor ja pop hlt pop lret movsb lods dec les add add enter xor sub pushl and mov sahf pop jns inc add jbe imul mov popf xor xlat inc xchg sarl dec or xor cltd mov add (bad) inc mov xor mov mov xchg mov fdivrl outsl in lods sar gs mov lcall hlt es jmp cltd nop and or mov add movsl dec push add shll add imul fmulp roll lret dec inc mov scas inc xchg movsl divl mov push pop arpl fmull add out dec and rolb xor or fild test andb loop clc (bad) pop leave lret roll pushf ror inc mov testb fdivr fwait mov pop jge add jo hlt cmpsl cld mov and dec lods xlat jno outsb rolb dec hlt xchg mov rcrl mov pop sbb xor ljmpw fucomip push mov jge out sbb mov das add mov dec call sbb xor push jge cmp test and inc sub push scas stc test pop fimul cltd imul push push add push and xchg sti jne enter (bad) sbb lods (bad) movsl xor pop cld pop lret cwtl (bad) push out outsb call ljmp push mov sub into jnp push jle fstpl add cld dec ficom mov or xlat inc repz pop cmp scas cmc adc std mov or mov (bad) xchg ljmp push imul andb cmp push loope push fistpll mov and jmp stc bound mov repz push sbb jmp cmp (bad) lret fstpl jp loope je mov jb xor test lret (bad) je movsb adcb xor aam (bad) cmp imul jp les iret mov sti sub (bad) frstor jnp es ret icebp clc mov cmpxchg pop adc or mov fisubl and clc add out in xchg movsl adc fldcw shr (bad) es pop in xor mul or cld (bad) in mov stc shrl aaa jp lcall aaa ret inc out mov pop lds lods nop pop mov outsl lds lret mov pop push bound lret int3 leave dec divl jg leave and outsb dec call daa add imul xorb test aam xor push inc cmp stc mov dec pop fstl mov addr16 rcll das cli sub sub insl lods (bad) movsl or jns mov jne mov cmp shll mov fs stc aad and pop fisttp mov clc mov popa push sub aaa mov (bad) mov loopne ret adc adc mov adc mov mov rcrl xor mov rol push lret mov xchg lea push pop pushf std add cmp sbb test sbb scas xor cli mov sub sbb cmp rcrl adc cmp pop cmovp lret les dec inc call movsl cld mov xor pop mov dec (bad) fisubr stc fbstp dec out mov fcmove ja mov add cmc lcall out cli sub jecxz repz sub imul dec push stc loope test mov dec cmp leave roll jb or daa imul aas adc mov add outsl dec xchg icebp mov xchg iret mov out cmp daa neg orl sub mov xor mov iret xlat mov test and cs mov scas sub push popf insb mov iret pop out call (bad) lret out ffree jnp in or ljmp inc push cli push in sti mov and xor cmp (bad) mov cs subl sub inc scas daa mov ja push insb sub sub test adc mov or flds roll cmp test (bad) sub in lods nop out pop orb sub push or sti adc stc mov fnsave jne cmp push xchg pop mov pop shr lock add (bad) mov popf dec push add mov xchg lret sarl data16 les outsb mov push push jb push ret stos inc les stos pushf adc push fcompl stos (bad) jne jle cmc pop les jnp sub andl adc (bad) (bad) add mov mov cmp add cli cmpsb pop pop fdiv out daa hlt adc cmp push stos loop xchg aam jmp test das out std adc mov xchg icebp lcall in into add xchg insl xchg repnz xchg dec mov mov adc fild adc xchg ljmp loop mov mov stos out pop lods js imul xchg aad jle outsb dec sub mov out leave lret cmp (bad) stos pop loop (bad) (bad) lret jne sti and (bad) (bad) mov dec mov or loope or jmp fs (bad) add adc popa inc sub lret add xchg fwait sub sbb mov sub adc pop or push das and sbb mov mov cmp out pop cli cmpsb push sub push or rcrl pop adc ret jp push xchg pop ds cmc das movb adc add scas ret xchg insb arpl mov sub xor dec ds dec xor aad dec mov outsl cld pop movsl mov lods pop mov ds sub scas imull jle mov mov sti or fxch mov (bad) jae adc mov sti scas cltd mov adc cli push pop in sub repz daa mov cld mov mov sub std push push clc and outsb pushf dec sarl sub adc mov stc push lahf gs mov scas sub add (bad) ret les stos popf dec or jmp stos fs fwait repz sarb mov pop xlat xor jmp (bad) xchg adc pop push insl movsb incb add fnsave push adc xchg (bad) insb adc push mov testb xor mov sub idivl mov mov idivb (bad) xor add pop mov call inc adc fldenv mov cmp pop lea mov cmp into insb sub pop clc jge pop or lds lods jbe adc and addr16 adc jne pushf leave push mov leave data16 ds into xlat decl loope mov cmpsb push sub ficom out scas push or lret ja sahf popf fsubrp push xor add fcoms mov fidiv enter cmp cli (bad) push and fbstp cltd sub sti loop xlat int3 adc ljmp add rcl xor pop pop rcrl bound ficom jnp outsl icebp js mov leave sub loop mov pushfw ret popa push jle imul xchg xor inc ret pop xchg sub lds pop ret jg xor sarl fisub incl lcall pop pop out mov mov mov mov cmpl (bad) pop push je rclb pop cld shrb sub xlat mov sti xor dec fstpt sbb stc int3 test into and das movb mov sbb rorl loop push xchg repnz pop daa sub test vcvttpd2dq mov enter adc (bad) arpl inc and pop add push enter (bad) sarb push push pop mov imul mov pop mov adc icebp leave fwait adc mov lea out adc and jne (bad) xor push out jne clc mov gs add nop jmp sub je js cmpb jb jnp jo das lock pop sbb jb push (bad) in into sbb mov lcall out hlt cld jmp inc xor sbbl mov fistl pusha pop jg cltd cmpsl popf call loope adc iret cmp fsubl mov call xlat or fimul testb mov xchg pop lcall sub pop push enter fwait mov and (bad) dec sbb repnz jns xchg mov outsb mov mov out jg stos and mov out orb (bad) stc into das in lret push sub add mov mov das popf test aaa (bad) fsubrs mov les inc mov jno daa dec or std add test out pop mov dec xchg rorl and xor aaa out dec add sbb mov mov pushl mov mov les sub pop icebp imul xlat add jecxz out mov fstl jne aad mov and xor mov jmp or das icebp fsubrl (bad) repz sbb inc pop push in scas mov pushl cmp (bad) repnz add jmp lret mov mov push idivb popa aas or and adc cli cmpsb lret pop fs mov dec out dec hlt sarl mov daa (bad) pop adc mov or and mul push push push or push stc lahf dec pop mov jns mov or ss mov in and sarb xor cmp enter adc enter inc repz xchg jl pop aam bound xlat imull push cmp mov sub push insl lods dec leave adc fidivl popl clc movsl fisub daa fcoml and out adc nop push popf push dec mov into loope repz or inc and push nop jmp pop mov mov cmp xchg sti xchg cmp xor mov hlt notl or js push cmp adc or adc or push inc and lret mov mov lret xor and scas ficompl leave out push push sub into sub and scas mov outsl mov pop ljmp xchg mov push ret (bad) fnsave scas or push dec adc into scas fs mov mov ret pushl mov push fnstcw lret or bound and and pushf mov hlt popf (bad) shll fwait push sub mov cmp jp fbld jl jne cltd xchg mov push and lret neg out push out pusha add scas mov je int add ljmp inc jle,pn or les sub mov into dec xchg fmuls mov lea mov xchg (bad) (bad) repnz pop fnstcw mov xor add ja inc lods hlt daa int jg fwait outsl cltd idiv push (bad) ljmp ja push fwait shl and lahf test iret scas sub sti gs dec fstl pop loop fist and in pop xchg rorb xor (bad) xchg stos clc nop mov icebp enter sbb cmp les icebp stos cltd pminub fstpl inc and sti pop sub pushf mov imul in lret (bad) or dec out dec mov sub loopne fnstenv and cwtl pop xor mov rcll xor mov xor out fiaddl dec cs int3 cld push jmp sar cmpsl (bad) mov ja mov cmp ljmp iret add jmp mov or xor in cwtl and mov cld push mov xchg dec mov dec loop repnz lahf xchg cli sti mov push add lods push jne ror add push push shll xor xchg cmp pop cwtl mov inc mov push or xchg jbe in cwtl cmc mov das cs lret scas pop in dec lret mov movsl pop out mov xor rcr sub jb or and inc repnz adc pop scas xor push lds mov ret add mov dec mov movsb cmc sub pushf hlt not add jns mov pop out mov sub dec ret (bad) fwait (bad) fimull gs add sub adc pop popf (bad) pushf jns aas lods ret movsb stos aam out cmpsl or add jecxz jle lret add aam mov out mov cmpsl xchg and mov xchg hlt adc add add xor push mov mov cmp jmp jmp test xor call jp xor mov pushf test inc add or cmp daa adc out dec cli or sbb enter ja sub jbe cmp pop mov jp cmp scas fistl gs push mov mov inc stos add and (bad) lock out mov mov (bad) jecxz pop loopne pop jno gs and mul mov mov loope xchg cwtl mov mov imul push add and icebp mov cmp loopne mov mov mov dec lret cwtl cmp dec inc repnz sub jae ret test leave fdivrp xor cld push push mov xor popf pop xchg leave in mov daa sub in sub sub mov mov and push mov mov sub out xchg fldcw and push hlt les scas jne mov les enter adc scas sub cmp jo es sti adc sub lcall push mov jle cmp mov gs mov xor cli mov xchg jns imul push bound repz dec pop adc add imul daa or pop das xchg adc sbb jno jmp add and js lock icebp mov pop out pop and (bad) dec inc mov loop push add push ret pop sti decb adc sti push push jmp les (bad) cli in lret adc mov jne adc std mov pushf push xchg mov icebp sub rcll sbb adc das or jge mov xor xor leave dec loop mov dec mov xchg mull repnz push jl xor jg ss outsl lods pop xchg xor ljmp int3 mov xchg pop pop and cltd or lret push pop lret xchg mov mov rcrb out je jb leave sahf mov mov clc inc and jl popf jno inc xor mov fs mov xor sbb das adc mov xor std int3 jle jno add xchg and push pusha cmpsb xor and mov movsb les lds test add or xchg ja mov and cmp sbb pop cmp jb mov inc xchg push sub outsl xchg or xor cmp and sub mov pop int and test mov and mov sbb fildl pop mov dec rorb std dec cmp idivb xor pop push lock sbb dec cmpsl pop mov cmp ja inc cmp pop mov sub loope dec call mov lods inc ret mov add mov gs cmpb jle and std xchg jns cmp gs roll (bad) mov adc mov pop pop jae jo daa (bad) mov adc lea ffree mov cmp inc dec and shrb push sbb scas fldcw mov jnp (bad) out jb (bad) push push and jo ret ret addr16 fs lods lahf pop pushf fwait xor jecxz add sti pop bound jecxz xor mov ret push jl push push xor sti sub sub mov sub imul push xor sub jmp arpl repnz cmc xchg cmc rolb repnz pop dec sub rol xor xchg idivl mov pop xchg mov lods int cld pop inc hlt pop mov add in out ljmp or xchg dec cmp ficom push lret xchg leave adc mov popf insl rclb lret fwait mov ss dec sub push pop aas sar add ret mov add roll jp and lds jns push cmp sub or les mov xchg call sbb fs addr16 mov lahf cltd cwtl inc pop (bad) mov pop mov lock xor or out sub out xchg jecxz sub mov imul fwait adc ret stos repz repz repz push ret repnz divl inc lret aas mov mov xchg mov mov mov (bad) sub add fucomp jecxz inc xchg and cli (bad) push ret mov or jns lods jecxz cld sbb xchg xor jmp inc sbb sub leave repnz xchg push jmp in xlat lret jecxz out pop (bad) cltd fnstsw jmp cs mov push sub pop push fild bound inc dec pushl fnstsw das mov adc ljmp adc ljmp stos aad scas fldcw jns mov push pop mov lcall adc xchg inc outsb cwtl mov sti cmp movsb (bad) mov lahf daa jl jno sub mov repz sub pushf imul lds sub xor stc and iret movsl je jmp jp out scas lcall insb push (bad) iret sub xor xchg leave jecxz mov mov test in das jp xchg pop pop lds mov (bad) cld mov rorl and pop scas jbe call mov lret shll push jns xchg ror repnz add xor sub cmp fdivrp (bad) divb adc das xor std cmp shrl imull push mov push jp push fwait and scas mov (bad) cmc push push mov sub push and mov arpl icebp stc jne push or pop lods aad repnz imul out daa lcall into lret icebp jg jl (bad) lods inc lds mov dec idiv lea in sub fs sub xchg mov mov shr mov daa or leave push inc push sub mov dec lods push mov rcll cmpb or pop out in int3 iret rcrl mov pop cmp out pop js cmpsb fdivrs xchg mov les cs sti push scas popf fadd insl xor and push sub into fisubl xor (bad) jle faddl push pushf je inc jbe aaa movsb pop mov sub arpl roll sub and or cmp inc cmp in mov dec xchg add stos call je in imul push xor popf pop and sbb mov enter or imul add push dec mov dec mov lods ret test mov stc pop xor jmp mov mov add pop or mov mov (bad) (bad) out mov es outsb jbe (bad) outsb (bad) mov dec (bad) xlat insl jmp xor jne test lods xchg rclb int3 add cmpsb mov aad rclb icebp in add dec ljmp jecxz leave into pop lds push mov cmpsb ss mov fdivr mov dec mov mov and pop andl dec cmp iret adc cmp imul and sub xchg jecxz xchg cmpsb pop cs dec daa push fwait test stos xor add xor ret or xor repnz int3 leave sahf xor sub jno mov (bad) pop out push fidivrl mov fisttpll movsl aad push mov ljmp jl daa aad mov packuswb gs (bad) and (bad) adc loop lds cmpsl mov repz and fadd fcoms mov outsl pop jl dec or notl and data16 mov imul pop sbb mov dec mov pop sub fildll lea rorb test aam mov push dec stos sub lods cmp out mov inc xor (bad) in sub lds (bad) loop movb xor dec sbb add mov fisttp lds mov cmp inc jo daa or rorb call cs push push inc and and and dec (bad) jb (bad) (bad) cmpsl xchg mov sti stc out mov push cmp je jle push ljmp mov xor add mov (bad) add repz sub xor mov ret xchg in mov push mov cmp inc xor inc ljmp jecxz add (bad) dec int3 nop call mov mov inc cmc mov sub enter popa sub and imul xor dec out fwait inc and inc add gs and mov xchg inc (bad) fisttpll icebp pop icebp or ja scas dec jecxz insl sti daa icebp pop xor ja push daa outsb ss push xchg push sub mov bound xchg movsb inc pop or std xor push dec mov pop xor sub mov repz cwtl cltd sarl xchg pop sbbl repz cmp daa fcmovnbe xor cmp sbb add icebp mov sbb cmpsl fidivr scas sbb fucomp sbb sub cmp and pusha and pop dec or aam sarb gs stc inc enter movswl cltd or popf xor loope aas xchg sub and popa xor lea pop (bad) (bad) int3 or push ljmp mov stc push dec sub stc test push sbb jp,pn orb ret xchg inc inc push test pop lret jecxz xchg adc xchg or add bound dec call cmp insl clc push sub xor test mov sarb fcmovnu xchg rol xor mov pop fcmovnu movsl aad cld jg xchg add leave xor and mov lea inc inc lods xchg and and imul bound gs std nop pusha out xchg pop dec fadds (bad) test dec sub mov push or fnstcw mov int3 js xchg insb xchg out pop leave adc cmp mov push add in ficompl jns pop add out sub sub outsl mov sub pop shr jne popa jle mov fsubs test in scas mulb jae ljmp cmp shr add out adc test ss dec dec test jbe popf mov (bad) xchg mov adc add fiaddl enter and fistp mov scas sub jb sarl or gs aaa mov adc mov add mov xchg ret pushl nop aaa popl in test mov das stos jb out jge pop imul push push fisttpl sub jae and xor in stc adc iret jmp or jns ret and repnz cwtl test or push push push dec repnz adc or aaa mov xchg or in loop xchg mov adc xor fcoms inc add ret xor in mov jbe bnd pop fidivr mov out ret lods in repnz iret cltd (bad) mov (bad) and mov ret inc ficomp sub pop ss mov insl mov pop adc xor pop mov fs sub xchg (bad) mov or push mov or lret or adc pop xor sub inc imul mov inc leave leave pop fs jns dec sti repz dec lods repnz mov add lahf sub sarl push or xchg dec add mov pop je pop inc jb es mov or cwtl inc sbb pop mov push mov out ds ret jne nop add mull mov push in sub loopne (bad) das add push imul jne mov aam push pop ljmp mov roll andl scas mov sbb sub mov or popf pop lods lret lds adc adc jl jmp mov icebp arpl and jne int rcrl xor and xor mov test mov adc in push push jmp in or xor daa insb rcrl loop je lret adc push and push and enter leave out xor aad bound je ss xchg pop sahf das popf fstl ret flds push cmpsl lret call test outsl jae sub out cmp mov mov xor mov test call cmp lods stos xchg mov fcoml sub jp jmp scas je stos fnsave cmpsl lods clc inc mov add cmp cmpsl pop pop and cld popa ljmp (bad) cltd jbe outsl enter sbb mov xlat pushf xor iret out dec mov es lock jle mov in mov xchg mov xchg adc ljmp je cs mov sub push je and aaa das out pop lcall ljmp enter dec in inc mov repz jo shrl cmc out dec or adc arpl mov mov ss (bad) insb cltd xchg out xchg push loop sti int3 jns into add lret xor xchg ret mov jae (bad) xlat cwtl or push and sbb add lahf jle push scas push jb xchg pop lods push mov iret sbb or divb xchg out fisttpll jno leave sbb add ljmp pusha add sub nop in xor movsl out dec add fcos dec lcall cld test pop fcompl push inc push arpl hlt push stos test ret out cmp arpl stc scas cmpsl dec push lahf jno mov sub push iret aad pop pop sub dec push sub inc sub aad mov ficoml adc or (bad) outsl gs dec enter sti sub sub jg negb test std xchg lcall les xchg mov push ja jl insb mov pop das gs or clc pusha lret or mov icebp inc dec sub (bad) xchg bnd int3 push into mov arpl rcrb pop mov or jmp lock imul popa das mov jns orl lret mov sub jl fstl scas mov out sub in mov mov jp loope imulb mov push mov lret (bad) lret adc adc imul jne,pn mov dec lds or in dec sub test out dec adc fisubrl dec fucomip lret adc add jne daa pop aad mov test pushf pop sub imul (bad) test call and popf aad test cs sub push ljmp je adc scas mov and xor xchg xlat cwtl daa sub xchg mov repz test mov (bad) popf jg jmp (bad) negb into xlat out sub loop mov sbbb adc and mov sbb xor mov mov fstpl dec or mov dec into pop sub xchg lcall mov and mov xchg pop push insb mov lock xchg inc icebp sub or adc push and pop popf dec adc pop xchg xchg xor stc sti mov cmc dec mov ljmp (bad) repnz fisttp xor lock in movsl std gs aaa int3 cmp push stc mov cmpsb iret pop aad scas (bad) daa ret inc pop xchg pop mov shrl add xor out lds cmpsb mov js flds dec ret hlt popf jnp imul sub mov fxch movsb mov fistp sti xor jmp jmp (bad) in je lret in es nop sub nop push leave xor mov and xor in aam and shr xor data16 lret stc (bad) xlat push xlat and gs ljmp mov adcb dec call add and inc or test mov or scas mov js push testb xchg push lods jns imul sahf adc call into daa pop xchg add cli mov dec xorl out sarl mov mov arpl mov mov ret xor (bad) in pop (bad) movsb insb out xchg jns imul test movsl sub imull and and fsubs lret shl sbb (bad) movb mov into sub mov pop lods ljmp xchg jmp ljmp cmp mov ja adc add xor and cmp pop jle ret jle lret je out mov out jg pop (bad) lret push popa je je das push and jecxz ja out int3 sub mov ss fcoml push (bad) sahf inc and call add cmpsb test inc test dec sbb lahf lods cmp jo inc xor (bad) pop stos mov add cmp lds and adc and cmpl call aam ja movsl inc mov aad sbb add iret loop lds sbb arpl and rclb dec in (bad) iret cmpsb push dec mov add mulb xor aas cwtl das sub xchg sbb rcl fcomip int das in xor lds mov repnz xchg cli or pop insb cmp jecxz adc pop jne push data16 mov imul xchg popf mov stos lea mov push sahf js sub clc jecxz leave sub mov xchg mov das add lcall (bad) out (bad) aas fcompl jl icebp out loop ror int mov xor shlb shrl leave and mov in inc xchg adc sbbb jmp jnp xchg sub mov push mov test mov sub leave mov mov addr16 movsl fild push jl cld xchg adc hlt cmpsl fs mov sub push les mov mov ret lods push in dec idivl int3 ss push les fcompp (bad) popa fs leavew inc int3 adc stos mov dec std mov out pop xor hlt jp adc jb or push pushf and xchg adc adc test adc cwtl movl ret pop sbb popf fld daa cmp sbb inc daa jne pusha fstp mov (bad) push add sti push push test stos mov sub fcoml add add mov sub pop dec int3 adc lahf xor push ret or or push mov xchg iret and dec or sbb sbb xor icebp mov dec das ret xor dec ficompl loopne pop mov adc test sar in ficom push mov rcll (bad) aas mov mov inc add cli mov dec jl jmp imul aam data16 xor (bad) (bad) iret jne outsb mov notl jae ss aad repz push pushf xor leave imull cltd and (bad) popf pusha std ret push in jns lret or ror pop jno dec sub and shrb mov add mov int3 sbb xor in (bad) mov inc sub movl std gs ret leave movsl out (bad) mov jns push pop fldcw (bad) dec ljmp inc sub jae push mov xchg dec icebp stc mov pop rcrl (bad) sub ds (bad) dec or mov movsb or scas imul mov push ret daa xor xor jo or sub faddl or pop int (bad) icebp push cmp icebp sbb dec icebp mov xor mov test out mov push repnz dec dec lods inc xchg popf push xchg mov ds in ds adc lret pushf cmp jb sarl shrl ds mov clc out cli (bad) mov pop mov sbb mov xchg repz pop adc gs push mov or es and dec xchg cmp mov dec shr fdivr jmp in sbb xor push or mov adc sbb jne lret xor (bad) (bad) add xor mov add xchg mov mov mov push dec enter pop lfs leave testl jnp or add cs in pop add xor sub ljmp sbb repz xor cs pop inc and push lds fwait leave jbe repnz push (bad) ss mov (bad) (bad) and ljmp or (bad) (bad) or mov shrl dec cmc (bad) jno out (bad) out sub nop test leave repz pop bound cmp jmp sub jb mov das lret std jno dec mov mov loope xor add pusha dec or fcomi (bad) sbb fisttpl ljmp lret loop test lret mov jno lods (bad) and mov scas popf sub push orb loope cltd pop test jecxz rol ret push xchg idivl mov dec fisttpl inc sub and xchg inc xor pop int3 aas dec xor test mov mov sub add popf pop cmp inc xchg out cld int3 js pop mov int3 dec icebp popf pop mov pop sub jp in js daa rcrb dec sub popa lret insl pop cmp lds icebp loopne jbe xlat pushf (bad) in xchg andl mov daa xor sub and les into pop mov adc stos popf inc jecxz,pt pop mov xchg outsl addr16 stos jle pop ret lcall aaa test sub movsb inc jb add and out mov and jo or cmp mov pop enter xor cmp loop mov aad dec xchg push outsl or scas lea sbb jg add adc je int3 ss dec scas int push stos xchg or inc add xor inc sahf inc sub call mov mov decb into adc test xchg aaa inc jno inc movl ds sub das mov pop sub ss mov xchg mov ds pop std push test pop lret dec push add ret movl cmp sub push movsb mov pop jmp push ret test pop pop cmp inc das push add lods and imul adc outsl inc and outsb in lret cli fisub repnz xchg scas cmpsb ljmp clc jb jmp cld popf sub dec xor fdiv sub mov pop into adc ficomp mov lds in movsb add popa mov add repz cmp mov push sarl decl cmp (bad) loopne mov dec dec push cmpsb call sub dec in mov movsb cmp iret cld adc mov push ja dec mov sti adc push shll repnz icebp scas pop idivl (bad) cmp shr out test xor push mov lret add test add inc stos outsl pop and cmp sub pop (bad) or mov sub stos cmp jmp xchg inc dec lret clc aad mov sub test and mov ret pop dec xchg roll lods sub cmp cs mov lret insb xor mov xchg int3 mov inc fisttpll sbb rcl cmpsb push ret mov push jae or or insb loop rolb jg add cmp cmpsb mov bound data16 clc cld sub in jp cmp jmp xor mov (bad) jl jne les out mov sub xchg lret and add mov bound sbb jmp cmc ljmp leave push dec imul mov lods divb mov xor sub mov ret mov pop loop push push adc mov push xlat cwtl push clc stos movsl out sar push sar pop mov fs jmp mov (bad) mov dec leave or in das js pop or (bad) fadd sbb fbld test pop fstpl out jle push sub mov cmc dec clc dec xchg dec cmc and adc loope sub sti out cmp xor loopne into lahf xor jne test and jl pop jmp dec movsl mov clc mov mov and mov out mov inc push cmpsl lock push clc movntps mov dec bound call mov fstpt inc (bad) push repz sub popf movsl lods pop flds sub sti lret imul mov add (bad) (bad) and bound push jno dec popa xchg lea push or xor leave clc dec mov mov adc push or fmuls repz sbb adcb ljmp mov (bad) mov add jl pop imull sub sub add (bad) xor push or xor (bad) cmp das ror adc (bad) incl fdivl call popf jl push das push (bad) cmp jmp pop xor hlt mov call dec sbb add sbb clc insb push (bad) or xor into ja and (bad) dec xchg (bad) out (bad) xor fucomp add push push mov clc xchg lcall aas lods adc or dec jge ret push outsb sub in mov lcall (bad) cmp stos sub decl clc int inc cmpl imul (bad) push mov mov dec scas frstor dec mov mov not push sbb inc add add das outsl cmc das ficom rol dec add xchg test or int scas int3 int3 enter and and daa sbb pop rorb ret daa jae or xor int3 pop fist mov mov scas jns cmp mov repnz ja mov sub (bad) xor aas (bad) and lret sbb push outsb cld enter sub cmp movsb jecxz pop std or scas cltd sbb mov pop adc mov bound bound adc rorl dec (bad) sub lods adc flds push mov cmp fisttpll push cmp fcom sbb xchg ljmp xlat pushf fisttpl ljmp (bad) movsl imul imul cmc in or test push ret dec shll out gs test test adc iret ljmp jbe pop loop xchg (bad) pop das jecxz xchg mov mov icebp jo int3 (bad) mov out pop iret pop test dec add adc mov in fcompl xor fcomip (bad) pop push rcll negl pusha xlat cld mov in je lret add mov (bad) or stc add repnz push pop sub pop jge xchg in and es xchg icebp xor pop lds cmpsl negl add rcr jmp les loop addb and mov push aaa push inc sub or mov arpl inc aaa popf aam imul mov (bad) fnsave xor lret or scas iret ja jmp mov clc fldt jg mov lret lret scas xor push push mov xlat retw xchg rcll ss cmp dec sar mov adc and mov sarb repnz pop roll dec pusha dec clc add lock xchg lds pop adc dec dec dec (bad) scas jne stos xchg ret ss outsb lcall loop test xor cli cwtl js or mov out xchg aas mov mov mov sbb daa or (bad) xchg iret cld cmp sub mull sarb out repz mov mov std push pushf xchg imulb or push ja out mov (bad) scas je add repz loop mov loopne out pop mov les (bad) push cmp or fldt ret pop pop add mov lds into mov daa jmp fwait pop and sbb ja je mov incb in test scas mov jle fcmovu sub dec add inc cltd sbb ret and lret neg push ljmp jle icebp jo sub pushl cs je ljmp jbe in and xchg mov int3 inc mov cmp sti fidivr ret repz lock dec fcmovnbe (bad) sub jns lcall (bad) pop xor imul xor mov leave hlt dec push sub mov mov jl jmp in and orb roll xor into push or xchg jl lret jno or stc fnstsw pop mov sarl mov jle fstl sub or pop xorl (bad) lret push push hlt jmp fist xchg ret inc mov aas cmpsb fcompl cld pop sbb shrl xor add lcall (bad) stc xchg cmp jmp inc stc xor mov adc or scas mov cli jecxz pop icebp aaa ror sub insb push insl push and aad inc aam rcll lret pop xor or daa pop xchg sbb out sub xchg pop sub movsl xor mov inc mov mov popf pop in gs lret dec and (bad) jmp stos push lahf adc popf sbb xchg dec adc mov xlat sub or sub xlat xor loop fstps inc dec idivb xor (bad) loop into dec and xchg xlat push mov sub jge jle push mov pop pop and mov push in push sti inc lods cld stc daa pushw jbe iret dec push sub add push dec xchg or xchg rclb and ja lret inc and pop add out mov dec mov push cmpsb imul (bad) mov sub add les fiaddl ss fstps sub cmp enter or fcmovnu or (bad) jb xor and and mov icebp xchg dec fbld dec adc les in adcb mov dec mov test adc mov fwait jns rclb add mov or adc shlw jmp push sub (bad) jns das xlat cmp mov cli loop into and mov out pop movl insb test movsl add notl adc or popf pop mov dec jbe (bad) hlt ret leave movsb mov xor xorb ret clc ds xor and jnp jo mov xchg rcll imul inc xor mov add int and loope sub mov sub adc sub mov add or leave add xor icebp inc fsubr sub lods cmp sub lea and jge ficompl repnz add in xor push and add sub lret xor mov and or das cmc fnstcw jo lret fsubrp pop hlt xchg mov add fs nop fstpl mov mov dec bound repnz icebp mov out repnz lcall push pop and jae cmpsl (bad) cmc mov data16 inc add mov sar and clc mov jae push loop,pn (bad) add idiv jmp fidiv jns dec fnsave in leave shlb int3 pop subl mov sti (bad) incl cli xor add xchg mov inc push xchg xchg dec out test mov jp sub (bad) xor push cwtl repnz push or stc dec rclb mov hlt jmp dec xor mov enter sub fist adc inc adc int3 mov enter add and jecxz dec and stc data16 xor sti addr16 mov pop xchg add pop int3 test sub xor dec add mov push and mov pusha leave pop sbbl mov add adc or mov das mov inc cmp pop in or xchg loop je lods les xor lds pop nop mov or ret popa rolb call into cmpsb daa sub cmp and mov inc daa out push inc sbb mov jb xchg sti mov lret sub push rcrb ljmp push ret ret mov pop adc dec (bad) dec push fucom push movsl jbe les test leave fdiv ret mov xchg mov std int pop outsb lods inc mov ljmp sub pop and outsl sub and icebp mov sub mov xorl or scas mov and adc xor sub mov jmp mov out and rcrl mov jne test xchg rcrb xchg mov fmuls inc and mov mov adc ficompl js (bad) mov ret test notl popf mov dec in xlat adc leave test fdivl mov push or into inc mov mov outsl push stos sbb lds scas enter sub adc loope xor or clc and cmpsl push scas das lock mov ficoml lahf je lds lret and sub aas clc aam scas fsub push jg dec sub daa lods pop xchg adc mov in lret xchg rcrb out jmp pop sub in adc cmp imul addb ret pop jle push jb popf jne aad adc or lock out mov adc rcr xchg insb out ljmp mov and xor jnp test fsubs pop mov leave and sti xlat add push mov (bad) fadds sub mov and push jb ficom mov popf jmp fisttpl sarb add pop jae mov aas call or ljmp int fs sti int3 adc mov sub ljmp xor sbb lret jbe repnz sbb pop jp cltd mov icebp iret cmpsl jbe or insb pop mov sub inc mov mov lcall push hlt and movsl icebp sub push sub jb xchg pop pushf imul mov pop pop loop fist or or push cmpsl lcall test mov (bad) xor ret popa inc (bad) cmpsl or int3 sub or enter and push sbb inc and rcll xor scas or sbb shrb loop and pusha cmp mov inc adc insb and xor repnz out pop mov xchg (bad) nop lods adc sub add imul mov mov jle mov jg jns andb or stc cmpsb dec push icebp daa or cwtl out cmovle (bad) pop and out mov push jmp ret (bad) jg cld dec xlat add repz jmp jmp popa dec push pop sti inc mov cwtl fcoml sbb mov mov jecxz into ljmp sub aas jne lods (bad) (bad) mov cmp pop xchg xchg nop rclb mov cld pop pop cld push and jmp sarl pop push xlat ret outsb pop sub sbb adc adc popa daa xor data16 add mov jge pop cmpsl in xchg out (bad) mov ret stos push jg bound push outsb fist mov movl pop pop scas dec sbb jns cli mov lods repz icebp sbb mov aad add das (bad) stc inc jmp es or gs cmpsb icebp adc push lahf mov add sub mov pop daa push inc scas repz daa push mov int sbb rol dec push int3 mov mov sub fnstcw jl cmpsl (bad) fistp ds xchg jmp push mov jb jae and cmpsl (bad) sbb sub sbb pop fucomip xlat lahf cmpsl sarl xor adc and dec or jmp fldenv cmc xor pop or mov repnz sub jo jl push jmp mov in rol push mov imul cld xchg (bad) adc lea jo mov and ljmp fcompl jo out sub movsb adc fimull rclb sub jns mov ljmp push outsl mov aaa sub or add int3 pop jmp mov and loop into jmp sti test sarl dec jns gs add cmp ret orps in repnz adc dec insb daa dec popf push cmp sub es fadds and insb jo shrb dec jg jp dec jecxz mov rcrb shrl imul mov push xchg cmp inc lds outsl push rorl and sbb ror das xchg dec cmc stc sub xlat mov insb cli call pop cmp mov sbb ljmp adc inc daa xor adc pop push jno add xor scas or or sahf outsb (bad) sti (bad) cld ljmp sti add shrl repz add adc stc stos pop bound into scas mov dec decb or (bad) fcomip loopne rolb lahf lds or daa mov out adc sub pop stc push popf stos dec add xchg sub fsub jge jle ja inc mov cmpsl aaa dec arpl subb shrb lock sub sarb jge addl or mov loope imul mov ret stc movsl mov mull pop jb cli and stos push or stc iret inc mov push lcall push (bad) movups and mov stc mov xlat loop push push int cmc add and sbb inc dec daa jno cltd into dec (bad) cltd jle mov lcall scas mov xchg (bad) popa inc sub aaa sarb hlt push cmp subl jmp cwtl xlat xor mov cs dec jmp (bad) shlb daa cmp (bad) and add stos jb sub cmp mov out fisubrl sub stos scas jo pop out mov and int inc cmp inc movsl mov adc shr adc fstl or not push addr16 fldl movsl jle icebp push ret test xor pop rcrl mov lcall sub ficomp sti movsl test out sbb scas scas push inc pop jp das push pop insb cmp fimull sti ficom add scas mov pop repz insl fistl out cwtl clc testl stos loope xor (bad) fbstp ret dec or popf jl lretw or mov and pop adc cmpsb push clc add push es pop xor mov add adc mov sbb jg jg adc pop mov (bad) jmp movsw out mov dec in mov lret lods fild enter insb fwait adc add xor pop int3 clc push mov add adc stc aam fildll jne arpl push mov xor jae arpl in outsl leave ss xchg jp mov ljmp jmp orl sub lret and rcrb test ret ja sub jmp xor xor mov sti mov add push adc pop push cltd dec jle jbe call dec adc mov xchg leave add xor mov mov sub mov cltd sub xor or stos popa dec ljmp in and mov mov inc movsl push pushf fcoms sub and jo pop xchg lret dec xchg loop push mov movsb mov lds add mov add pop pop adc loopne inc movsl popf test xchg mov loopne lret xchg pop add cmpsb sti and fwait enter imul jno sub aaa lret mov or stos mov cmp (bad) dec dec das (bad) xor xor mov xor repnz add cmpsb pop jle pop add cltd sub pop mov sub fildll mov xchg mov les xchg lret std cmp repnz stos loop xchg mov adc ljmp adc loop fist loop pushf (bad) and sub int3 arpl movsl dec repz and int3 insb mov ret lahf xor fisubr ret pop or jge push adc push cltd mov push fsubs mov loope cmp stos mov mov cvtpi2ps add pushf lods enter repz sub fstl push mov (bad) and cmpsb mov lock je mov dec out stc ret mov leave mov mov mulb pop popf add push mov adc sub imul mov adc or pop jp xor int scas jmp adc lea mov sub dec leave jno movsl lret in mov lret or stos dec add xchg sti mov sti sub add (bad) ja loope sub or fisub ror (bad) or mov pop test mov and movb jne inc imul push add fistl fs add mov xor add cmp jae testl mov adc adc pop add test lret pop dec (bad) (bad) pop aad sarl les push cmpsl pop pop xchg cmpb mov decl xor stc mov fdivl adc push (bad) ds pop jnp jnp fcoms ljmp mov ficom popf (bad) mov add pop into pop and fmuls mov and stos test lods leave inc sarl and or not (bad) mov pop and xchg pop (bad) cltd in popa inc push iret addl xor sub clc divb fisubr or stos jecxz add push sahf sub xor repnz xchg aad mov sahf ret pop fwait xchg insb adc (bad) mov lds mov bound into std movsb xchg out bound fucomp je pop mov dec neg leave push stc les (bad) push mov pop scas clc bound jmp cmp popf pop add dec jae and adc cmp mov std (bad) scas gs cli testl les mov pop js sub mov mov (bad) divb inc sub dec mov cmp add movzbl sbb push stos dec rclb mov test das test movsb ljmp dec ret pop sub neg and mov sub icebp hlt imul push fnop sbb inc das int3 aam dec imul fstl in bound outsb and and inc cwtl mov sahf movsb sub mov nop push xor xchg insb pop in pop test dec sarl sub xlat leave fdivs xorb add insb mov jle clc out xchg jne hlt test xchg loop fldl xchg (bad) mov lret into call xlat out pop stc movsl fistpll pop leave (bad) pop jns dec add pop pushl cli jne stos mov rcll mov out adc mov (bad) push jmp sub (bad) xor cmp push xchg and jmp test loop int3 data16 pop pop push inc sahf mov por inc test in sub add in add mov test std enter jmp lods mov and xor adc sbb adc data16 mov into inc and pop or sub jl push pop push iret sub sbb jp mov call or or xlat dec scas fnstenv leave scas jle or and add rorb sbb mov aas mov push aaa ljmp cmpsl (bad) jmp nop call cmc inc outsl dec sahf je cwtl mov xlat dec xchg outsl pop fptan dec lcall cmp int xchg sarb rolb or xlat jae cmpsl jnp xchg (bad) fstl int3 fwait and pop mov mul fs ljmp mov or lret push push push insb xchg movsb call fsub and sub js mov (bad) cmp aas test movsb mov (bad) mov rclb inc and or or ja call or or sub lret mov daa fadds push xchg repz repz les sub sub js sub sbb push push call mov cld (bad) lcall adc and out int3 mov hlt iret pushf lods leave pop or push xchg in mov sub aad mov lret (bad) pop adc inc sub pop clc (bad) dec cli and lcall sub mov pusha or sti pop xlat push test mov lods jmp hlt mov mov mov jmp cmpsb add (bad) sub mov and xchg addr16 adc or jmp loop out pusha mov fiadd jnp sub loope js mov popa xchg leave mov mov add ds jne add push (bad) or lret push mov cld loop add mov imul popl inc xor xor addr16 (bad) dec and push incl cli out gs and andl mov imull mov lret or ds negl imul xchg (bad) push pushf pusha fadds daa xchg inc (bad) stos sub dec leave pop pop jp adc jo dec pop sbb add pop fldl scas lods jo loop mov jg (bad) mov adcb xor dec push pushf and add pop (bad) dec or call fstpl mov xchg scas mov pop mov iret insl adc lret outsl push repz loop xlat les push clc ret push sub orl mov jle je adc push xor mov push scas outsb dec add (bad) lahf pop jmp ret fs push push rcrl mov and in outsl ret push cld pop push or push in or mov test imulb mov sub and shlb dec mov dec pop sbb inc das dec mov ret sarl xor adc pop push (bad) daa (bad) cltd pop mul out pop mov and roll sbb hlt push pop out popa loope or pop out imul jne and das int fisubrl cmpsb pop je mov cmp mov cmp cmpsl mov add sbb cwtl or movsl push xor xor xor (bad) dec pop les cwtl push or (bad) mov addr16 mov dec (bad) mov pop daa lret sub lods adc stc xor cmc sub outsb repnz inc in repnz mov test in or push push (bad) lret dec int3 jnp dec stc test pushf dec call mov test (bad) loop xchg cmp je push and mov push sub dec cmp cmpsl pop inc cvtps2pi sub (bad) fidiv push enter clc mov push mov or mov testl sbb or sub ror mov push mov or cmp popa and aam jmp inc inc lahf jbe stc or test xor sbb and mov shr adc mov into add and in mov jmp pop xchg mov push inc push dec pop sub loop (bad) fiadd jns gs scas xchg inc addr16 sub (bad) xor movsb ret xchg out les test mov inc pushf mov mov fildl mov push dec (bad) addb out mov outsb fs mov out jp repz jl into cli je push aas in rol pop mov pop jmp jbe out stc jecxz sub xchg scas in inc and pop sub (bad) jne pop ds sbb sbb jmp dec lret pop push xchg add add mov xor xor hlt xchg and arpl loope decb sub dec fdivl mov add not das sub cmpsl push (bad) sub enter sti repnz leave out aad mov cmpsl xchg jmp pop rorb lods mov (bad) xor jp mov push add daa dec mov sub dec pop out shrb pop mulb cld inc leave or lds pop pop sbb (bad) cmp in cmp adc les inc mov lret xor test pushf bound out dec scas adc pop cli mov sahf pop push fsubl dec pop lea sub lret xor inc sub (bad) mov decb clc mov mov push mov mov sub xor lret xchg pop mulb inc sub or and or stos dec cwtl lret jg lahf lods cli in xor cmp lret xchg hlt jo outsb xor mov xor or xor cmp and cmp or shrl mov rep fnstcw mov sub mov dec mov enter pop jge rcrl cmp out push pop mov clc jg pop push in loop xlat mov add and pop rorb sub int test sub and roll scas mov sahf xchg shl enter sti mov leave lahf imul lret xor jmp cmpsb leave cmc clc std mov outsl orb cmp xor dec cmp gs inc or add ljmp enter xchg test cli mov daa jnp icebp mov xchg mov sub inc push xchg popf test mov jo leave mov imul aam fistl enter into aas jmp jb ret cs sub xlat pop mov and clc mov sarl lock (bad) mov (bad) outsb mov daa ret daa pop jecxz movsb mov icebp and xlat stos aas dec movsl bound cs adc into fsubr mov or test pop pushf pop dec popf cs push cmp mov sub popa adc jb (bad) movsl sar and les mov adc and pop out mov pop mov mov mov pop in jno insb mov mov sub (bad) in cmc jno sbbl rcl and (bad) test je inc daa out daa xor aam imul add jmp dec dec mov ret dec (bad) sub sub frstor repz (bad) aad cmp daa sar pop out mov test enter xchg (bad) fcmovnu or (bad) add sub clc and xchg push and (bad) testl mov mov shl out add adc call shlb mov add das into sbb fld lods roll loopne push scas sub mov jb push (bad) div xchg sar neg jbe ret cmc lret push dec and pop in push out mov ror pop fs (bad) loope jne mov xchg call mov (bad) add dec xlat mov jbe or pop push xor sbb iret cld test icebp movsb pop ljmp mov add mov add rcl rorb lods repnz add sub fiadd rclb or mov dec sub stos jecxz xchg loopne (bad) hlt or fsubp popa push xor lret mov negb data16 mov cli and and aaa jge popa mov pop aad mov xor loop dec mov sar iret fild or fadd push stc sbb sub mov jcxz (bad) (bad) cs mov inc std lcall or andb js pop call push sub lret mov pop xchg les shlb push fs mov je test mov xor js xor shll js dec scas sub sub mov pop mov and out or stc and and negl (bad) mov ret repnz rcrl icebp data16 xlat sbb jmp lds jmp mov lcall mov shrb sub sub je insb iret xchg aam jne (bad) (bad) cmp cmp sti and test leave xor das out add movzbl mov std in insl adc mov mov lods xor in or and repnz push inc ds mov jmp popf adc xchg cwtl pop shl imul leave js sarb aam scas cmp push pop or mov loope aas flds xor nop push das lahf cld aas lods or les leave pop sub push inc add cwtl xchg or mov xchg pop imul and inc nop imull cmp jne adc xchg outsl in mov mov jbe iret leave sub (bad) ds das cmp mov loope shll fwait sbb ja movsb sub push xchg push inc stos mov adc mov fs mov ds ficoml mov test stos mov inc popf daa bnd (bad) fnstenv shl out mov mov addr16 jle dec mov aad jge sub pop pop sub lock dec shrb sub jmp ljmp inc jecxz mov pusha fcmovb out aam mov pop aad scas mov pop cmpsl sarl push push xor cmp movsl inc cs and or push pushf sar and loope popa xorb push pop or cs mulb mov out movsb lea ljmp mov cmp out faddl jmp or xchg push fisub or or xor push adc xor icebp dec test sbb and mov call add adc and or cld sub xchg xchg add mov movsl in lods daa iret leave lret cmpsl fmull lods cld imul adc add (bad) lock cld popf push cli sub mov (bad) sbb mov int3 ds mov pop jae and mov xchg decb repnz mov add dec dec mov add fcoms sti or repz in sbb ds or dec lret mov enter rolb aas cmpsb lahf das (bad) in pop pop (bad) xor (bad) xchg adc test and cmpsl out jno dec and daa ja hlt idivl xor scas add (bad) mov lea mov mov test leave cmpsb mov sti test mov jo icebp mov loop xchg cmp iret inc or jmp jecxz mov mov gs and mov pop and jne xchg mov imul in jp dec test (bad) ds shrl scas push lret mov xchg out sti lret jecxz das call scas je add and add rcl sub sub fildll fnstcw leave out mov dec pop mov dec jns rcll add mov pop adc mov (bad) sub sub xchg (bad) pushf dec cwtl sub cmp pop xor mov nop mov es sub lcall push sahf das das gs fistl pop cmpsb insb jbe xor sbb leave jo mov ljmp hlt outsl push pop stc ss mov xchg inc xchg inc push fld daa fldcw cs dec shll pop jno sub hlt aam jp shll jmp mov xchg iret ljmp adc (bad) pop (bad) cmc (bad) pop out sbb das inc mov jns inc mov pop push push xor dec cmpsb cmp (bad) hlt dec sbb xlat (bad) xor repnz cld jnp ljmp or sbb nop sbb xor fsts fistpll into jo out or xor int3 pop dec idivl or mov xchg pop jecxz xchg out or pop adc or es jmp (bad) add mov int3 mov push (bad) (bad) push stc lcall pop aaa (bad) movsb es and stos sarl xchg jecxz (bad) hlt pop jnp repz or iret sub or push and mov clc in push and mov movsb pop mov sub ret imul repnz sbb inc call push xor enter test es sbb inc pop test and aas das fsubp add adc cmp push divb add or or jge mov xor adc push mov bound iret push mov out or sub mov cmpsb movsb cli repnz and or test mov sbb push mov dec add sbb (bad) test adc mov aam dec push mov or lock (bad) mov mov mov out shrb std fiaddl adc enter rcr imul mov shlb mov pop fs and adc pop loope sub push dec cmp add mov mov add jmp mov inc or mov jge ffreep ss dec sahf xchg popa shrl cmp gs sbb sub leave lret sub sub add sub sub push sub fs lea in cmp call pushf (bad) (bad) lret sbb pop cs sub or out adc dec mov sbb scas ficomp ljmp pushf sub mov mov fnsave add out int3 fstpt dec dec in dec out jge xchg or fiaddl scas push (bad) testb dec loop and push jmp pop or mov jp xchg xchg scas xchg gs push mov outsl (bad) pop add ret (bad) or dec dec stos popf repnz cwtl and xchg (bad) dec and mov pop movb repz pop xor scas fimul cmp pop das mov adc fidiv in push dec xor std in mov pop decl pop inc mov fcompl push xor pop pop dec pop cs clc (bad) stos (bad) movsl inc jge stos add lret mov and leave lahf sahf (bad) cld pop and lock xchg push or iret push push adc push cltd sbb lret add or push jno lret ja (bad) rorl mov lret aam pop ja cmc jne repnz jge dec xor xchg jo or mov push (bad) (bad) inc add jg in testl pop adc lcall or sahf adc out inc mov outsl jb xor jns daa int3 or or xor (bad) ficomp pop xchg pop mov bound mov loop sti mov out push (bad) mov scas cmpsl push or cli mov sub gs mov jnp xorb loop xchg int3 add dec or jae getsec in das mov stc add mov divl sub imul ja push sub loope enter fisttp mov ftst (bad) repz mov cs jae sbb ret cmp andl ljmp out jb add je add leave sub std out addl mov adc or mov sub pop jecxz jno lret or sub sti jle loop in and jecxz xchg jg ds pop lea jo jne ss sbb cmp scas das fdivs dec clc je test mov test xor sub pusha cwtl mov cmp dec lods jb or ljmp push out imul xor dec jge cmp lret mov (bad) hlt sub mov (bad) sbb cmp xlat push loopne adc or add fxch mov nop icebp or sub lret enter xchg push rcl jecxz gs sbb jl (bad) mov mov and xor cmp sub mov (bad) fsubr jmp or mov pop fldl push cmpsl xor ret or mov sbb xchg imul rcll pushf hlt inc adc sti lret jmp loope dec jb movsb mov add push pop stos and dec xchg pop mov pop repz enter repnz stc addb (bad) add xor adc or and leave xor addr16 icebp add pop xchg hlt (bad) popa out xor jg lahf and ljmp cmp lock scas (bad) and inc ljmp push test cmp cli or pusha ret jmp stos repz cmp sbb into sti sub out pop adc xchg loopne or xchg js pop xor daa ja bnd xor std (bad) notb mov ret test aaa and xchg leave or outsb arpl lods pop add add arpl adc insb dec (bad) aam cld lret inc jno xor test xchg xchg nop ror movb sahf sbb mov cmpsb inc stos aad jmp cmp enter push jns xor sti hlt jnp mov jecxz repz pushf mov and lock ret cwtl scas push xor out cmp and cmp test or test sar les loope pop jmp (bad) stos mov pop loopne fidivl dec pop (bad) aad sub repnz dec and leave inc and lods out xlat lods repz fisubl xchg xchg pop pop lds or sub stos das pop jecxz xchg push or add xor pop inc (bad) jmp pusha out sahf mov dec inc xchg pop (bad) addr16 jmp sub loope ljmp mov icebp mov imul ss mov ljmp enter cltd push mov adc sub aad pop lods adc adc pop scas cltd push loope jg or scas out and mov and aad pop mov mov xchg push pop push repnz xchg rep cmpsb jne (bad) cmc ret fnstenv icebp orb and lea cld jae add test les negl adc insl add mov js into sub add scas sbb xor lcall sub sub je sarl mov jg scas mov imul mov and dec test mov ss mov xlat dec mov lds movsb out lods jp mov mov imul testb add add (bad) or xchg dec fucom fisttpl xchg and mov jg or sub mov aaa cli stc dec mov pusha push adc repnz lods cmp pop inc pop repnz cmp scas loope or jne ss dec mov jno cli mov sub cmova adc mov sub sub mov xor adc push stos out dec cltd iret out lret icebp mov sub dec sub push jne scas sub cmpsl pop cwtl cmp lret mov lods pop jecxz jae xor jne pop mov gs mov cltd das clc sbb cli and and add fisttpl fnstenv xlat daa ret inc repz push pop imul pop cmp lret xchg xchg loope mov lcall mov ja push mov loopne jecxz or pushf cmp or pop jg or sub daa fs dec xlat mov outsl mov dec scas sub sub jmp inc push jg xchg pop sub pop add lret adc movsl fnstenv imul in pop pop imul into xor sti mov (bad) lods xchg popf fisttpll popa aam pop dec sahf sub cs and scas int adc out mov ja push mov stos cltd fldt out or add ds inc mov faddl xchg das fdiv iret mov mov and out cwtl (bad) iret lahf push or sbb movsb dec mov mov clc es adc (bad) mov xor and xor in sbb add jg and rclb dec pcmpgtw adc gs scas cmpsb aaa dec mov repz ljmp incl add mov dec fs lods xchg pop xor stos movsl subb cmp pushf jl lret push ret in xchg xchg movsl adc and xlat pop loope pop mov and cmpsl pop (bad) sbb jo negl add (bad) fnstsw mov push (bad) jbe inc jno xor out cltd xchg push add add popf test or cmp iret das xor jle repnz push pop pop ljmp jno dec pop stc test dec xchg xchg nop mov push add xchg (bad) insl sbb xchg scas jecxz xor ss daa and sbb ret jae sub jmp lret inc inc add aaa mov dec sub enter repz dec mov sub bnd mov test popf xor lret jle push jae adc jmp fimull test icebp xor pop jbe dec jne jecxz notb rcll xor (bad) scas mov push rcrl adc mov pop and jl sar data16 push std dec mov add test pmulhuw or add pushw push lahf lock add mov in and mov sub sub pop mov notl inc mov add mov repz xor rcl mov mov xlat xchg cmp add in jbe cmpsb lahf jns enter outsl pop pop sub mov sub xchg insl and clc imulb rorl push ret imul test xor dec icebp shrl into push dec add push shrb pushf push cmp mov sub scas sarl bound lret (bad) leave pop aas movsl adc repnz icebp int or jle jmp pop mov stos loope pop scas jge sub ss add mov pusha jno and mov stc mov pop fnsave mov sub lea cmp cmp call lock mov or jge out sub fld dec push inc dec cli cwtl cmp clc xchg pop xchg sub or fidivrl pop sti mov xor jns sub test into std adc pop sub mov mov and imul iret xchg push sbb lret mov push xchg sbb adc loope ds or and scas jg lock stos daa mov divl inc (bad) sub sub and (bad) aad fmuls dec dec cwtl and fcoms pop popa pop xchg stos je out out adc (bad) in or int3 jne and fnstenv dec ja imul adc (bad) pop cwtl pop fcoml jge lahf inc cmp mov mov shr (bad) rorl test add mov sub bound pop fadd fldcw inc das std pop sar jbe (bad) inc mov xor adc sbb fdivl mov mov dec insl and and in jae into lret nop aaa mov lock jle jb (bad) in and dec ljmp dec push in scas cmp andl push push (bad) mov in xchg sub adc rcll cld ficoml or fcmovnbe adc je scas fsubrs mov stos jne test xchg mov lds scas xor add or pop jl (bad) ljmp xor sub xor mov fisttpl jmp sub stos mov or push (bad) pop push or ljmp add mov aaa mov inc push adc mov cmpsl aam inc or pushf bound jp jbe sbb int fcmovnb ljmp pop cmpsl inc inc ret imul dec cltd mov loop pop dec (bad) in mov sub pop pop in stos sub and or sub xor sub push shr scas hlt in scas ja and xor push sub loop icebp mov into inc dec repz (bad) repnz mov imul mov push push (bad) arpl and jg add jge mov out mov mov xchg ljmp push out mov jg sarl cmp jo push (bad) dec lret aas pushw lahf pop rep shr dec sub mov mov sar xor pop mov imull jo loope pop mov jb xchg leave adc mov and sub cld pop lret jl repnz (bad) jb push dec out pop movsl cs push enter (bad) test sub loope sbb mov push gs or cmp aaa fidivl inc push inc pop xor mov push mov je and cld js (bad) scas mov or pushf das inc xchg ds rolb push mov cmp pop roll pop roll cmp scas lret out mov jmp sub dec dec dec jg popa push inc xchg push mov (bad) dec mov popf (bad) fcom mov push push jge shll xor rclb stc inc cmp xchg ja dec mov mov mov push movsb out in cmp sarb mov lahf sbb mov gs loope sbb mov and push cwtl sub xchg lret jmp lahf rol jp sbb mov scas notb add jae mov mov inc repz mov dec adc pop add fwait add mov call frstor mov call mov jno lret mov adc cmp push adcl push fidivl mov icebp sub jno movsb pop lods sbb fcmove repnz push cli mov or shr lods or mov int3 add sarb (bad) cltd stos shr das in lods mov fisttp mov or push mov mov (bad) adc push mov test fstpl into xor fiadd and add js adc or add jo xchg mov ret push or sti dec pop sub sbb adc hlt xchg push push jns dec mov fidiv pop nop insl mov or stos fsts xor or movsb (bad) lahf pushf ret xchg shll and in mov mov cltd mov pop and inc sub repz jnp jne fdivrl sub mov dec add jae dec test pop lahf adc inc jmp loop xor stos or jae cmp and and iret sub xor leave xchg jmp test add fldt das jge xchg das clc idivl aas test clc push ficom sti cmpsb mov adc and lock in xchg fstl add adc xor sub call (bad) xchg mov mov rorb jne dec ret and add sahf mov cmpsl into push dec xor sub jb xchg xchg dec lea (bad) xor cmp pop iret movsl call inc push mov dec js pop sub and loope sub xchg aas push adc lret mov rcl fs cwtl mov xlat jno dec adc ret in sub sub push cmc fsubr notl mov xor pop mov mov jmp dec push dec fsubrs dec mov pop pop lods xchg movsb mov adc cmpsl movsl mov jmp ret das idivl push or jno and cmp cmp loop loop ret shrl adc test add xlat ret pushf movsl popa (bad) jmp cmp cmp jp punpckhdq pop pop pop sub xchg pop insb adcb lock imul pop pop mov or push icebp xor dec push inc cli movsl fistp sub ljmp dec mov clc aad inc jg mov or sbb pop mov popf xchg (bad) mov jnp (bad) xor cmp mov and mov fistpl xor loope (bad) and jecxz out stos sub mov push mov and jecxz sub xor push pop les shrl or shrb and rcrl lcall es dec mov lret add mov cmpl and adcb ror mov cld pop popa mulb sarb out daa out mov outsb ret fsub pop loop call push shl mov or sub lods mov into aad mov sbb popf cbtw daa xor aam pop adc out pop out popf sub aaa xor add cmp sti mov sub mov sbb mov dec cmp mov cld enter lods leave flds iret add roll mov (bad) xor test je mov bound ret mov sub mov nop push xorb jae and push mov (bad) repnz mov or ljmp testb push lods push jl into and xchg mov inc push movsb xchg out mov sbb dec cmpl sbb outsb cs fstps mov (bad) jle ss or cwtl mov rolb lret cmc xlat loop pop mov lods (bad) (bad) ljmp or cs and scas add or lds rol iret push adc in ljmp add add aas clc cwtl dec loop fidivrl in bound (bad) fist in int3 iret or iret mov andb lahf sti dec mov loope (bad) or add mov loop push adc outsb cmpsb push out sub sub jp push xchg stos or and (bad) rep sbb (bad) jbe push pop int3 adc xchg ret mov imul mov and sbb sbb (bad) hlt clc mov pop out cli and mov cmpsl (bad) adc mov imul test sub daa lcall sub sub cli out or pop mov test out js mov aad je sub mov es inc lock cwtl imul adc out cmp stos imulb dec cmpsl in addb xor std enter mov push push scas push rclb into imul ljmp frndint imul loop adc inc stos and gs push xor insb mov fs adc out mov dec loope sub and je xlat or and int jnp addr16 xor sub mov ret jnp xchg xor xor clc or decl adc mov xlat dec lock (bad) adc fld add dec add lret add pusha xor lcall or or cmp out sub mov or or xor sub jle je sub mov test cmp fisub pop outsl xor push sub xchg shrd xchg mov clc andl mulb decb mov xchg push xor popf push mov outsb ja (bad) loop shrl (bad) sarl lods loope idivb repnz mov lds enter iret add out mov loopne das test flds mov sub das int3 call adc lret cmpsl sbb (bad) fiadd lret mov jbe (bad) popf mov or bound mov outsb or decl sbb test daa mov jne js xchg xchg xchg nop loopne add jne and add add imul mov sahf (bad) jne jg int3 jbe sub push sub mov mov es xor (bad) pop mov aad icebp icebp cmpsl push daa fs cmp and pushf jge (bad) mov jbe or enter stos mov or pop mov or std push cld js or jg cs (bad) lods mov mov add adc decl and dec ljmp inc dec out int3 xchg add adc mov xchg ret (bad) ds sbb clc sbb out push add loopne mov sub jp add pop xor sub ret out pop dec mov stos fs jecxz dec mov adc pusha inc push xor pushf dec bound (bad) fistp fwait ror ret push bound bnd les and mull daa push nop push sub in cmp or jne stc inc and cmc daa mov sub fisttpll jae adc cmpsb dec dec in dec enter ret int inc or mov enter lret scas shll lahf pusha sub sti and out aam adc mov scas pushf mov mov jg push mov and out jnp or lret into (bad) sub sub fldl mov sub jne call mov pop fldcw dec or inc pop insb add inc sub aaa gs into movsb stos xor call jmp clc in lahf insb nop xchg inc lahf push push add clc lret xchg (bad) fisubrl fs mov pop push test ljmp or push xchg jle dec out scas mov dec cltd mov xor aad push jno mov xor popf fbstp sbb dec cmpsl sarb fs sub stos add xchg inc xor popf dec cs dec mov cmp inc cwtl shl sub in scas stc mov jo dec imul (bad) mov lods mov iret xchg ficoml into fcoms or ja fildl imul pushf dec dec ret enter pop repz cwtl push adc in sub mov inc call inc xor sbb xor div xchg repz push mov (bad) or xchg mov movl or sub (bad) or das push adc or popf jge add stc mov mov mov xchg xchg ja mov add popf jg pop push ljmp cltd push xchg push xchg rcrb stc lds xchg jmp repz sbb lret dec adc aas xchg lds repnz repz mov sub jno jmp cld add scas sub push (bad) imul bnd rcll jb outsb mov dec testb xor jmp mov push xor add xor add mov mov sbb daa jns push or test inc xor enter dec cwtl xchg or divl call movsb mov xchg pop pushf or xor or or aaa pop pop and mov dec mov mov push dec (bad) cltd fist outsb orl rclb lods pop mov push adcl je leave out fs fcoml shll pop push sbb push in push mov jmp mov (bad) sub pop add xor clc sub sub xchg stos fs pop jns push insb fisttpll repnz mov in sysret dec push mov jno dec xadd jmp mov jp cmpsb test sub orl rol add dec out xor les out scas cltd jecxz push (bad) push or (bad) stc adc push ret cltd jbe repz and ret sub das mov jmp pushl gs scas nop js xor lahf cmp jnp inc mov inc jle fiadd jb (bad) leave mov test lret cmpsl fist mov add lahf dec xor clc sub xor or mov leave cld in movsb insb sub in xchg decb pop inc lret sbb cs pop clc pop mov and jbe fisub in xchg fildll roll sbb dec xchg (bad) stc push push mov adc sti or dec jbe pop scas jmp cmp mov (bad) xor sub mov fsubs sti je mov push sbb pop xlat mov jne stos repz sahf adc mov push pop cmpsb lret fs stos leave shll test pop lods (bad) enter negl inc xchg into popf sarl push xor or das repnz popf push cwtl clc xor popf fidiv cmc dec lret pop addr16 mov xchg popf ds js mov mov mov adc fptan push pop stos pop ret imul dec or popf adc jecxz cld cmpsl push sub mov cli dec sub mov or add repnz xor xor iret add push jmp xchg mov aaa mov and movsl leave push inc push add mov in xchg leave scas int sub fisttpl cmp mov sub imul mov (bad) decl fstpt cmpsb inc push pop test stos jne push lods out cltd (bad) xor push or push shrb cli and ljmp cmpsb jle and repnz push not sbb adc popa pop sbb in jle xchg repnz xchg xor mov dec loopne ss sub add mov mov bound inc add out mov pop add in call imul inc mov pop mov xchg loopne pop mov int outsb mov daa out aad js push sbb cmpsb std fs pop add xchg stos int3 lock fldt mov sub fnstenv sub dec sti (bad) mov repz add mov in xchg mov lds out push xor das xor xor lods pop sarb adc fdiv jecxz sbb inc jle leave fs pop sub jg bound lock repz adc xchg stc push dec jmp je add (bad) or pop sub xchg stos dec push mov pop or mov cmp jmp mov ja xchg add cwtl (bad) pop sbb jo inc xor pop mov mov out mov pop jg xchg ljmp mov jae adc (bad) cs add xor or test push in jmp rorl push fmuls icebp ficoml xchg cs mov loopne out mov dec lods mov jecxz ds or mov mov gs and leave pop add mov jbe add jmp cmc xchg (bad) jmp push adc xor mov les icebp nop xchg xor lock or lahf mov jmp and mov lret mov enter adc test sub lret lds setb in call or mov add int shlb je ret neg xor movsb sti (bad) das fmuls stc or mov aad pop jl dec jno adc dec stos dec or out jle or fist insb xchg lcall adc xor out les lods pop mov cs sub ds xor dec xor call test mov cltd outsl jg pop xchg mov or fdecstp lahf sub icebp ret lret stc mov lret cmp das sub and xor pop push inc pop clc inc mov push xor add rcr jp cld add cmp movaps mov push adc or leave pop push daa stos jmp sub cmp mov cs out jg (bad) daa into add shll dec std das call or shlb sbb jb inc jge cmc inc out sti jno or mov mov cli lea leave (bad) adc repnz adc push jo leave or push push mov add mov jno insl xchg ds sub mov movsb dec xor jecxz or mov mov mov iret add sub add mull call pop inc jbe mov sub mov and jp iret mov adc (bad) mov out aaa lret add sub mov cmc push mov mov leave les push sarb adcb fisubr out mov stc pop das idivl out cmp dec jecxz and enter outsl add and stc cwtl movsl les sub sub out jle dec stc lods mov cwtl cmpsb iret xchg cli mov mov ret push jge lahf dec sarl sub test jno nop icebp (bad) and or add xor mov iret mov shrl clc pop adc mov dec int cmp mov scas pop xor mov es daa dec (bad) lcall lds (bad) ljmp xor and or fstpl xor pop sar dec fdivr or sahf dec push fbld push adc pop lcall daa rorb or rclb or into dec out idiv and sub fisttpll pop pop scas xor ret add pop lock jno xor in jmp frstor adc adc std cmp xlat (bad) pusha pop out (bad) cmpsl mov jmp dec sub scas rcr ror cmpsl or xchg repnz pop xchg aam mov sti xor pushl nop ficom jecxz jbe pop repz sub jmp jne push outsb jmp jl in lods sti movsb clc jo rcrb push adc std lds ret or mov enter cmp (bad) adc mov jl push (bad) or ljmp sub dec cmp pop das adc ss cltd cmp roll or das pop testb lcall xor xchg push mov (bad) clc or xor and pop scas sub stos test jno or fdivp (bad) roll mov add mov cmp jbe sbb lock dec mov xlat or xchg dec lahf jns leave icebp stos mov mov mov rorl mov push dec add add sub icebp cmp ds jmp dec sti lret scas (bad) out dec flds dec xor mov xchg push sub pop clc cmpsb xchg mov jmp xchg sbb daa stc pushf arpl cli cmp push stc cltd daa jg popf lret call and add jne (bad) imul bound mov jmp xchg stos mov imul fstpl scas mov jb aad push fwait jae (bad) adcl scas test movsb stos mov popf jmp push adc rdtsc inc dec or je dec out sub aas xchg cmc cli repnz jmp or movsb inc jle fstps pop add (bad) lea aas push arpl into dec pop loopne adc into test sub into das (bad) pop mov (bad) idiv test shrl lods dec and sub in addr16 aam fnstcw add ljmp mov rorl aas mov cs xchg imul fwait dec (bad) fs xor enter inc inc ret into movsb out stc in (bad) push aas lret imul mov or sub add in pop loop pop stc push dec jl sbb test mov adc loop mov push sbb mov or lods test or cwtl xchg std stos mov shrb jmp mov push inc scas cmp sbb xchg pop pop sub out pop mov pop enter jp jl or pop cmpsb ficom jae mov mov or cmp lock ja mov adc inc ss gs and dec lods sub ljmp inc adc jecxz jg mov inc cmp sti bound je inc add fwait lds sbb bound cli loop ret sub mov adc or cmp sbb jecxz daa push fild adc popa cmc into sbb ret inc sub add adc pop fsubp movsl add vmresume stc adc cld cli jle mov mov push lret and sti bound aaa inc imul test (bad) les inc sbb fsts adc lcall mov cwtl test adc mov sub imul dec ret or sarb cltd daa dec stos les add adc mov repz xor dec orl cmp xlat in lea out sub rorb mov adc xchg push xor or call out pop xlat dec mov adcb fmuls lret in iret pusha jge lods pop xor pop add and ret scas gs push adc xor rcl cmpsb or repz shlb mov push add ja or push das mov jecxz jmp adc sti mov mov sahf dec mov pop mov or dec cmp mov pop jecxz xchg int3 inc repnz dec (bad) aad loop (bad) or pop fbstp dec lret fsts cld scas in daa xor sbb fisttpll out imul ret aad std dec sub pop nop loopne sub jmp gs int loope and jmp jbe inc xor enter xchg xlat xchg lock out lret mov push popa sub push add sbb pop adc sub aas (bad) daa iret xlat jns dec xlat cwtl mov ret dec xlat out xlat pop ljmp dec mov push bound aam push and mov mov xchg jecxz pop call sub call jo xchg xor dec push (bad) out cmp mov sarb idiv sbb in sub push stos call (bad) imulb out inc push adc aad cmpsb xlat lods adc xchg pop adc jle sahf dec xchg push xchg sub lahf sub or or push xor movsb adc out inc mov dec inc addr16 push push idivl sub jmp jg cs push jge dec mov fisub jge loopne leave mov dec out push inc jbe sub inc insb mov jg sub das xor inc sti inc sbb fcmovnb mov in ds jno mov sbb pop out inc das xchg cli fstps int3 pop xor (bad) dec dec mov fstpt leave push mov xor sub out test icebp sub mov mov push cmp dec mov sub mov jle push sub incl inc sub das mov jns sbb cmp mov xor ret push push imul add lret call mov jb or fdivs push xchg pop cld scas movsl cli aad int inc lods and xlat mov decb and mov pop stos jb jmp sub add xlat pop sti mov cmpsl jbe jo inc mov mov mov test pop mov je pop cwtl lcall xchg lea mov ror ja sub push dec out stos cmp cwtl pop add fwait push and fcomps cmp sbb mov push add out push xor dec sarb cli mov mov jp xchg sub ror jmp and mov dec xchg iret stos fnstcw xchg xchg sbb (bad) lret push bound jne cld gs mov test in fwait push add scas fnstcw dec xchg push divl pop xor push dec outsb add clc mov pop push int3 dec (bad) sti (bad) mov inc syscall pop sbb loop jecxz cmp sub inc pop mov jl icebp movsl repz xchg cmp add outsl insl int3 push dec rclb jno test add das repz js jl pop loop ffree dec cmpsl fisttpll jecxz mov scas negl and sub stos pop xchg fisttpl pop clc xor inc popf das imul fildl mov push adc lcall js xchg push and jne add in outsl test int and mov dec fwait inc mov xchg and shrb and rcll test pop pushf mov cmpsb sub xchg xchg sbb mov mov xchg sub adc neg jno dec lds je (bad) js lock out icebp xor sub push aad mov mov leave icebp jg iret add pop and shll lret enter jecxz dec mov pusha mov std lds add jge inc xchg cli lea inc push scas or out lret sub loopne out jb mov jge cwtl and imul dec or scas (bad) jbe and (bad) int3 aad mov imul inc jae dec jg ret std add xor enter (bad) in add arpl mov shrb adc cwtl cmp xlat xchg aad xchg fstps or mov push ja clc jmp sbb or fist pushf dec (bad) out mov aas jmp mov pop xchg jmp xorb inc mov mov add add out daa lock sub in push pop out leave test bound mov xlat or rolb mov (bad) xchg fstl movsl vpaddq scas into mov add push sub dec mov cwtl jmp mov mov call sti mov pop imull mov mull sub pop insb lahf jo xchg cld mov ljmp sub sub aas mov loop in cmpsl sbb fsubrs sarl pop mov jne fstpt sub mov sbb (bad) fwait add adc ret in jae xchg jmp sub cs scas clc iret loop movsb dec loop push add or sub bound cs test jp mov mov cmp adc xchg dec xchg add fiadd fs sbb mov push fldenv (bad) into jnp cwtl sub lcall test aaa dec ret lods pop lock in xchg mov mov call sarl mov mov lret mov and jo dec out gs aam out lret scas lret scas pop int3 sub pop (bad) mov test leave orb cmp data16 es (bad) sbb sarb pop mov jne out mov mov pop sti xor imul mov push out jmp mov ja sub and adc mov daa push rcrl inc shll sarl (bad) pop xor scas je stos mov mov cwtl xor inc or lcall xchg mov sbb push pop leave or push add add adc movsl sarb fwait adc stc mov and lds add in outsb pop stos sub or icebp sub mov shll jo or mov jno (bad) fnsave jecxz dec sti bound add ss push sar mov adc push mov (bad) mov sub shll lret scas adc mov (bad) xchg jp inc mov lock (bad) daa sarb mov fcmovb (bad) (bad) pusha xchg adc sbb dec jne clc jo (bad) or mov ret test mov xchg sub dec fdivr mov lock adc cmpl dec call push adc fsubl mov push push out sbb lahf leave neg jns inc mov popf mov pop dec popf dec imulb jae mov sub xchg cmp mov lods repnz mov pop fstps and ja pop xor test sbb jne add sti mov call mov movsb jg (bad) xor push mov xchg jge push xor mov dec xchg adc mov and add repnz mov pop xor xchg fisubl adc outsl lcall and orb faddl dec cli sti xor loop (bad) lret xor test mov movb xor repnz faddp repz sub arpl shll in xor popf les sbb mov adc movsl icebp and (bad) mov xchg shrb xor jns aam jmp xor hlt push pop and movsb stos (bad) push mov inc scas pop pop dec push jmp stos xor mov sbb sub sti inc adc dec add rorb xchg jg mov outsl (bad) mov ljmp sub xor cmp adc lds sub popa sub divb mov sub pop push imul xchg push in daa out mov lret scas xlat mov and out bound test push inc imul dec mov arpl icebp sti inc fbld in add or xchg lret xchg cld std push push xchg das repz lock int3 pop and (bad) mov push jo loope pop je mov jle popa ljmp std out cmpl fisub mov lea out and lret in cltd imul sub cwtl sbb not xchg and shlb sub or push mov cmp jmp (bad) ret jg into and ljmp (bad) sub and xchg sub sahf push jne int push xchg jmp xor les in xchg in adc mov adc (bad) stc dec xor call aam and fstps mov cmc cmp sbb xor mov or rorl sar imul add adc inc or add or popf dec or push push sbb pop adcb sbb add mov ljmp pop cmp or hlt xlat xchg inc (bad) out outsl pop inc or pop loope mov adc push mov into pop ljmp cmpsl lcall pop xchg stos mov mov inc dec leave stos lret adc out sub add setl lea sarl out into push cmp popf lods and dec mov pop cltd lret stos (bad) sub jl sub std jmp out mov push mov mov dec push add pop insb int3 das out addb into sbb inc and out nop into xchg push mov int mov les adc ss jl pop cmpl sub addr16 stos lret movsl jl je clc push push (bad) cltd xor and mov or pushf popf push cmc xor divb int jp sub push mov outsb (bad) push pop mov push movsb xchg cltd aas ljmp lods fstpl mov mov add sub jecxz push or cmp ret dec xor mov and test clc das call or mov divb (bad) mov ret push push add pop ja inc jb (bad) daa xlat or push daa ja mov mov sub gs add sub sbb rol push aas xor add pop fwait lods adc out lret dec push fmul jl adc mov ret adcb push jne push or mov imul mov pop push into pop sub lret pop sub in lret add adc or in jg leave dec out xor cmp cmp pushf cmp sbb mov add pusha push add (bad) (bad) (bad) scas nop lds or loop push ja decb dec repz mov pop enter or (bad) sti je out int3 int3 fist cmp push xchg jns inc sub std icebp leave out inc popa sub out mov jmp push mov xor rcr mov dec leave jmp push out dec inc mov dec fcomps jmp popf enter and jl adc mov and pop jge push mov lret sub rclb push ss inc cmp sub clc xlat push cs mov out mov inc aam mov or push mov cli lret push and push or movsl push iret in jmp push lret pop sub out aad and loope repnz xchg scas or leave jg push push jmp ss inc sub cltd sub xlat bound xchg sti pop aas add jae mov push sahf lret inc sbb inc stc cld ljmp dec icebp (bad) jle cld mov sub pushf or or sub mov push data16 pop jge mov xor lret adc mov xor jb cmp mov jnp test pushf push lret stc inc in in cli iret xor cli fisttp mov dec mov jl pop loop pop xor sar js fbld dec ljmp ret pop lret inc in xchg jecxz mov std adc imull rcl fildl cmp (bad) jp add clc popa jg out imul xchg call jbe (bad) jg stos cltd adc inc cltd jecxz pop or pusha fist pop push pop ja (bad) mov fnstenv mov loop lcall jnp push (bad) push leave jmp cmpsb jl out jb scas adc pushf addl sbb sub loopne rcll in out jns jmp cmpsb fistl in imul fisttp ret cs bound mov cmp repnz or pop out fdivl xor js xor or repnz loop add xor clc mov jmp mov push ret lea leave mov outsl add mov int3 inc in insw jl (bad) lock into cltd idivb xchg test inc xor scas jbe nop dec stc mov xor (bad) icebp jnp (bad) xor stos lret xor (bad) dec push or lods push hlt sti cmc cld cmpsb jno jecxz dec mov jmp fs out pop (bad) aam dec mov adc and xor add stc xor (bad) mov sub mov lret (bad) movsl or dec sub add rorl pop stos sub outsl mov mov in scas and cmp xchg mov and pop lcall pop call out cld lret test imul xchg jmp jg cli scas xor repnz and pop fadd jmp adc mov add popf rcll mov mov mov imul or xchg aaa sti lret je imulb dec out cwtl pop out daa sub cld mov adc mov jae fdivs (bad) mov pop sti push inc out inc gs fldenv mov xor icebp out stc dec xchg mov cltd ss popa mov mov and fisubl inc lret stc push pop icebp hlt aas loop xchg push or cmp sub push ret int3 das mov jno push sarl dec push daa jle and rep faddl adc add scas out das rcrl orb cmp jmp xor ret adc and loope adc (bad) aam (bad) (bad) out sub push sbb jne fstpl mov lret jb cmpsb cmp jle sbb sub adc fldenv cmp mov push sub inc imul repnz mov push or add cltd dec push mov sub cmc xor leave lcall inc xchg xor push add js adc fs loop in jmp mov cli shll xor pop fnstcw dec stc pop sub mov loopne xor and scas jne stos into enter popf xchg lods cmp inc mov mov inc pop and dec rorl jle add mov mov pop or sbb sub call aam pop idiv insb mov sbb faddl sub xor sbb jnp insb dec mov lret loop push inc pop fisttpll mov out mov xor stos test test mov test loop test add aas dec (bad) and jmp flds test jmp adc lahf push ljmp or pop imul sbb decb or dec cli mov out fstpt (bad) test clc mov cmp call mov mov ja js push fnstsw mov sub daa add jns inc pop test mov jns,pn test sbb cs incb hlt out push repnz or cmp popf cmc mov notb xor cmp (bad) cmp jecxz sti lret fdiv cli adc mov add in js pop loop jne lods pop (bad) and mov out sub sub stos les stos jne mov ljmp mov and mov pop push fiaddl fcmovnu mov push mov gs fimull or mov stc xlat cli xor jmp out mov aaa lahf xor repz or xor paddusw into lods (bad) sbb or pushf xchg xor jne sub add pop mov aad cmp fnstenv xor stc into xor cwtl arpl sbb notl in in ret pop mov shr movsb scas xor dec call jmp xchg fs (bad) scas adc loop iret iret adc mov jbe repz xchg stos sub sub cmp fcomps mov scas sub sbb xor aas xor pop and mov (bad) or xor out lret xchg pop movsl mov (bad) cli mov inc lock and cmc cmp xor repz (bad) stos mov lods ds rcrb sub cld mov or loop mov int3 test fstpt mov pop pop mov out jae adc out iret dec inc shrl cmp stc ret ljmp mov ret dec jmp aas jo xor cmp int3 bound dec xlat lods aaa xchg sti cmp in out cmp outsb ret or mov popf pop aam inc sarb out sbb dec sub sub add sub enter sahf add sub jns fist mov jle leave ficomp movsl mov test mov shlb jne sub cmp xor fnsave dec out sbb (bad) mov hlt popa outsl push add jg movsl sbb fild test scas imulb (bad) mov and lea sbb pop adc pop push dec jecxz adc jbe test daa or adc mov cli xor or (bad) mov add repz mov ds repnz add and loop dec xor and aad call lret movsl jo out push (bad) addr16 or inc lret mov mov das in cmp jmp jle cltd pop xor pushf xor jae or add and outsb inc call sbb or rcrb push mov mov add sub mov (bad) mov bnd or push xchg mov aad sub into sub sub (bad) xchg (bad) test cmpsb mov xor hlt sti in (bad) stc bound sti jle shr ljmp jmp stc sub stc lods bound push pop gs cmc imul push stos ret pop adc xchg sar and sub lcall mov enter lret add add adc mov pop (bad) (bad) fld das repnz cld dec icebp and outsb mov (bad) xor aaa pop xor push insb or iret mov push dec and xor (bad) push cmc (bad) imul repnz xchg adc mov fidiv movsb mov push adc fs out int sub xchg xchg cmp and mov mov out sub or sub sub arpl lods fsubl cmc mov adc lahf idivb leave add mov lret es int3 je push jl xchg pusha mov mov inc xor cli scas jecxz pop push lods mov jg sbb sub out lret cmc stc in mov dec in das mov pushf scas fyl2xp1 jmp stos mov xchg sbb sub mov add sub pop xor dec loop pop movsl sbb aad jle jae sub in xor (bad) data16 into sti mov push loope mov lret add sub (bad) (bad) cmc mov mov sub arpl cmp sub pop std or sbb dec mov fsubrl fs ret sub push jl jmp add out flds and daa add mov imul dec icebp mov lds and movsb mov call scas xor sub xchg aam sarb lds repnz insb pop mov sub pop daa pop xor mov adc jno daa fmuls push push push in or pop sub sub ljmp adc jns icebp add loopne and jl add rol add or mov leave (bad) imul (bad) mov pop clc and mov inc sbb aas das add mov mov sbb jne out pop rcll decl les push add mov jno xchg lock loope aas mov into dec lahf push inc jmp dec lds les cltd inc inc das dec jmp repz popf ss push mov jno imul loope push xchg mov lock gs test out sti das mov mov sub push call inc sub rolb lds in xchg lret xchg clc out int3 jo pushf push ucomiss sbb das mov (bad) mov mov ja inc popf push loop pop pop add or pop in cli mov fsubrl lds pop out push jo xchg icebp pop inc mov ret pop mov mov or mov push in cmpsb bound fldl daa inc fisubr xor cmc pushf mov cmp mov divb insb dec ret dec orb sub push popa clc or xor (bad) fsubrs lret pop mov shr out push cmpsb repz in xor xchg adc les dec (bad) xchg inc movaps mov (bad) iret xchg call out jle pop push test mov push repnz popa push inc pop cmp xor sub push pop sub aaa test fcmovb xchg xor loop jge data16 aas mov or out into iret sub lret ja xor inc pop xor lret xchg lret dec mov mov dec jb or push cmp shrb mov shrl out cmpsl fistp and lcall pop pop xor mov bound pop scas gs daa cmp cmp mov test icebp frstor and arpl pop sub decl mov (bad) mov pop cmpsl fistp imul ja ds lret stos sbb into outsl repnz ss repz mov inc (bad) jno ret fs xor sub cmp or lods (bad) mov push mov dec pushl xchg fidivr out pushf inc sahf sbb shll jge in push jge aad and adc sub push inc sub in test test clc push popf std add mov add leave xchg and jl cs mov jo test and mov mov add lock sarb and ret jmp int3 jnp sub repz adc imul sub pop mov pop sti int3 add sub out testl or cmpsl das pop stos xor mov xor ret bound scas dec jmp sar xor sub data16 ret mov jmp imul cli insb and rcrb xchg pop call jo clc xor int outsb repz in es (bad) sbb jl pop push adc out pop std xor xchg mov dec (bad) xor cli add mov or inc mov mov jl or cs loopne out sub inc daa push dec or out dec scas sarb jmp rcrl out adc clc mov add stos cwtl xchg sub fmul add (bad) mov dec mov icebp jns popa fcomip sbb lahf mov aam scas popf lock sub inc pushf mov stc push (bad) push add mov call mov jno adc jbe sarl push add or fiadd cld inc shl inc je add sti outsb lods inc ja mov insb movsl mov outsb xchg sub leave out test movsl mov mov outsl std dec mov in or xlat xor or jns pop mov sub xor stc sub mov mov clc sub loope push xchg jp add addb xor xor int (bad) lahf fildl out stos cmp shl dec sub hlt sub push xchg push cli lock xor mov add (bad) jno popf jle jmp sbb fidivr ljmp enter and fdivs in test lahf pop movsl leave inc int es adc mov dec cld outsb imul jge pop inc out cmp insl mov popf decb push mov inc out notb jns dec js push fldt in jg (bad) sti shrb sbbb movsl in rcrl xchg xchg jecxz das jmp out pop xchg fnstenv (bad) jb mov cwtl ret sub bound testb add sub pushf fnsave lcall and ljmp out jmp (bad) pop mov cmovp sti icebp mov pop imul xchg inc mov cltd gs jg loopne push pop mov jge xor push scas lods pop and add out daa sub jmp outsb hlt ss add xchg push jle in ss xchg into dec (bad) fstps mov mov sbb push mov pop stos pop jg cmp inc sub aas mov call pop mov jae add or repnz cli or (bad) rcrb adc sub pop lahf adc ljmp jb and lds repnz sub mov push incl mov pop or repnz enter and pop or loop test test xchg aas mov and imul subl (bad) push or je mov mov mov sub lea mov xchg ret cltd xchg sub xlat stos mov pop sbb xchg ds insl jle sub and dec sbb popf test sub or loop in (bad) movsl test dec or pop dec push stos xchg add ret ret sbb pop mov xor sub (bad) jb mov lods cld xchg pop out add xchg mov hlt add loope sub mov ret add push mov (bad) xchg icebp insb dec add mov or xor es adc jmp mov ret ja icebp int mov xchg je mov stos inc or (bad) in mov sub ds cli scas xchg xchg inc xor pop sub sbb stos inc xor mov (bad) add inc rcll sub ret sub loop enter mov call (bad) push push addr16 in or push xor (bad) bound pushf repnz or xchg xor pop sub je or leave push int3 sub sarb call ds cmpsl cmpsb push out sub add add add imul push mov lahf cwtl mov dec imul xchg (bad) fsubs repz or pop imul or mov icebp lret lods push push popf push push fist std int3 stos adc (bad) pop stc lahf shll cli loop leave out pop jno dec call pop push fcoml sub lods xchg mov das add xor push xor roll or jmp jb push push mov gs imul push and and or (bad) mov daa sub pop gs test mov or ds add mov imul ret sub dec lret xor in popf into mov bound sub rcrl jns cmpb (bad) xlat pop lods mov clc (bad) pop mov mov pop (bad) xor loopne idivb enter mull loope mov xor xor cs sub repnz movsb jmp xor sarl sub dec into popf pusha loope arpl add sub sub not dec stos (bad) aad push test es je pop add (bad) mov xchg imul pop or repnz add mov xlat sub call mov add outsl mov (bad) adc push outsl mov and dec sub inc (bad) mov das push daa xlat mov ret (bad) ret add and or scas sub out and cvttps2pi out into aas and mov sub pop icebp (bad) sub je push rorl cmp pusha xchg adc xchg ss mov dec (bad) imul out inc mov divl pop xlat test mov pop and cmp lret push add adc ds adc mov sbb icebp sub jge mov and push clc jb lahf cmp push or shlw pushf jmp mov jb sbb xlat mov or cmp push xor mov rolb dec xor push repnz xchg ljmp outsb jmp divb and xor fcompl sub mov or mov sub add pop fisttp es push lret ljmp mov scas out mov dec imul sub sub addr16 pop push mov leave mov dec out ret mov or enter pop sub dec lret icebp xor std push mov sti dec (bad) mov xor out push nop rolb or xchg and mov push mov andl clc call xchg ret pop jecxz test out mov repnz inc inc scas (bad) outsb popf test loop mov cmp iret mov jb push sti das and add add inc lods cmpsl loope or adc cli adc test push (bad) mov daa add mov addb push es adc repnz mov lds (bad) not mul leave mov gs and bound loope dec nop dec add cmp xchg (bad) mov cmp scas sub pop ljmp jne xchg push sub or dec cmp add ljmp rcr pop push fsubrl out mov cltd ret loope sti insl insl cs cmp out inc sub repnz push cmp push or sub lea cs xchg push push outsl movsl shl xchg push and cli aam cmpsl lcall jns in or sub data16 pop (bad) nop push fldenv dec mov xchg faddl jmp and mov fistl xchg and outsb adc (bad) les mov rcl push subl shrl stos xor cli mov in mov out ja xchg push cmp or mov mov decl out sbb andl xchg mov dec dec ret push cli (bad) mov (bad) or rcl dec mov lods fistpll push jbe mov negl xor push push push mov loope inc mov into adc mov enter lahf push mov das or lcall idiv mov or mov sub (bad) fnop js ds sub sbb (bad) aad nop add das push sarb nop mov xchg cld xchg ja mov xor adc icebp cmp icebp dec cmp (bad) int3 and in rorl aam pop jmp enter add add xchg dec dec ja sub adcb push mov adc add push add cmpsl (bad) lret cld jmp cld rorl (bad) push pop adc pushl dec call aaa push xor out push (bad) cld es cmpsb pop daa rcl fsubrp cmp jbe and repnz add stc mov sbbb in ss or inc xchg mov cmp dec int3 mov mov lods mov lock inc dec add add jbe fs (bad) fnstcw xor lret jp mov jne and push lcall fiadd xchg mov jb das (bad) mov in mov add adc jmp je (bad) inc add das divb push imul lret icebp (bad) lods pop xchg xchg orb mov cmpsb jle jl out imul cwtl pop and enter cmp add js ja stos xchg icebp lret sbb sub fisubl mov cwtl xchg mov pushf fimul xor data16 fdivs lret dec scas int data16 push add out sub xor add add test (bad) jae bound pop xor add and pushf mov sub mov mov jnp inc add cwtl or push pop dec inc insl mov xor adc cmp lret rorb ljmp sub aaa or stc cmpsb lret mov into inc pop out dec cwtl sub imul imull test pop scas jecxz pop lret bound (bad) mov xor (bad) or decb popf inc lock dec jmp test and xchg fldl out mov scas (bad) mov or aad cld repz lcall mull or push push dec or pop and inc and lret fiadd (bad) push inc xchg mov cmp (bad) sbb popa mov jnp dec lcall mov xor dec ficompl jbe sub cmp mov pop lods push std mov mov and mov in icebp ja outsl push jmp and add popf cmp mov (bad) repz pop lods mov mov shlb xor fs sbb sub loop xchg push iret dec inc loope mov leave jmp lods lods and push add xchg sub pop cmp xchg sbb out cmp (bad) (bad) sub mov mov daa or push pop and iret fs push jl inc test test cmpsb adc jg xorb fs cmp out xchg mull pop mov jp cmp mov or addr16 scas and mov inc dec inc push enter pop ljmp lock cld inc call xor or (bad) lret push stos imul mov ss dec ret or mov mov xor enter jl jmp movsl std and jae les repnz dec daa in cmp repnz xchg or das scas gs dec repnz daa or sbb (bad) fcmovbe cmpb out jbe je mov or cwtl jne mov popf test out or cmc ds sbb inc jle adc sarl out sub add pushl cmc test xchg daa mov es ja and jle xorl jns or (bad) xor test (bad) xchg mov cmp inc sub repnz push in fs jmp xlat dec out mov sub leave not push or lret ljmp mov dec xchg mov dec popa sub or mov add inc cmp sti dec loopne sub lea mov out sbb add adc cmp out dec sti mov ja (bad) cs mov data16 dec cmp sahf jmp add dec imul popf inc (bad) mov mov loop ja push hlt in aas mov leave shlb mov and xchg sbb push sbb jmp mov add fsubs ja and clc movsb lret or adc scas pop repnz jge cmp popa adc add mov imul xchg mov mov shrb les jbe adc xchg in (bad) mov mov clc push mov jb imul fidiv mov adc mov (bad) sub xor test mov mov mulb push lret js mov push mov (bad) in dec push fsubr out dec lods sar inc cmp mov imul add pop sub call fisub cmc inc jno xor sub xchg push sbb xchg cld sti cld repz jl jmp and mov push xor ret imul pop push iret inc sub (bad) or mov ja test divl into fcoml lret fstl dec mov idivb pop rclb mov ja mov scas gs int jp fsubrp cltd xchg mov mov in or mov sub mov sub or xor fldl ret inc xor aam in and pop push fptan lcall or mov jmp push test mov push sbbl movsb pop pop xlat xchg sub lds pop inc push sub stos popf push cmp xchg sti popf dec imul cli fwait shlb add popf mov push cmp aam loopne fldcw popa rorb (bad) mov push inc out mov add lds int add add cmp outsl mov leave (bad) fstl add inc inc mov jl pop int int3 (bad) or lret or sub mov xchg orb mov fiadd cli mov xchg clc fmuls shlb mov push call test mov stos out lret sub xchg xchg pop fldl out mov mov pusha pop mov pop cli pop pushf ja ja in je push push add sbb fs pop loope (bad) outsl cltd ljmp (bad) (bad) xor mov imul sub xor maskmovq (bad) bt mov xchg or push ljmp jns inc jmp (bad) loopne jl jno jg pop sub mov mov xor mov rcrl xor cli in push jno pop xor and leave ja test fisubrl mov dec out cmp iret mov push and push mov (bad) or jne not and and dec jp cmp pusha ja add and add and inc cmp lods lret je adc mov dec (bad) out or inc push mov bnd (bad) push ret push and int3 mov aaa cli xor mov and jg add mov mov pop or addb das push pop lahf testb cmc sbb sbb sbb pop test pop xchg mov mov xchg push movsb ret (bad) pop push jno lods mov shl sub add mov (bad) sub adc inc popf je (bad) add ret xor pop or adc jmp pop test xchg mov cltd xchg cmpsb adc push call das notl pop mov push push dec inc mov test (bad) shrb int ja cmpsl xchg call push pop negb ja mov push pop add xchg dec push enter movsl xchg push into icebp iret dec mov gs and fnstenv sub add lods mov mov mov pop mov sbb clc divb sub or out add or ss mov push (bad) jnp jne sub in pop ds faddl mulb lds or loope cmc sti pop test loopne mov or pop dec mov ds sub ljmp dec or or hlt xchg into ljmp push dec dec cmp jmp loope pop bnd imul aam rolb (bad) dec (bad) cmp mov fildll leave mov clc and aas xor out cmpl push mov or out jae adc pop mov jbe pop pop outsb lds mov dec adc and popf lret lds sbb das into adc popf pushl push pop or pop cmp sub pop fbld xor sub les sbb mov cmpl test or test repz pop (bad) mov jb push sub fstl mov (bad) lock incl dec mov fstl scas in xchg movsl cwtl or lahf jbe pop imulb pop mov imul push repnz add mov loop out dec jmp leave sbb mul test fiaddl or sub and cmp repz aad jo nop mov or mov fnsave cmp stos sub or jmp test jecxz mov fs add mov pop jns and pop xor addr16 sub inc or notb icebp xlat in sub (bad) movzbl mov repz (bad) push push jno or push mov pop jae push mov xor inc out push dec ret mov cmp xor mov and mov push repz addb iret xchg cmp xor push mov lock iret sub sti pop nop lea (bad) ja popa push cs mov sub outsb xlat incl ljmp sub int3 lcall cmp mov jmp ret pusha xchg mov dec mov sbb mov fwait shlb sbb icebp (bad) outsl cld mov and aaa mov and out jo push mov and pop xlat test stos jne ljmp push test pop jp xchg xor sub jne xchg jle xchg xlat shl and negb fs out cld jp call (bad) pop (bad) lret sbb sar mov sti push je leave mov aam mov mov int orl xchg iret pushl (bad) adc xor adc loop pop icebp icebp dec in mov je negl stos xor pop (bad) adc inc mov dec popa (bad) dec push into repnz mov jmp scas jbe adc xchg dec mov add inc push testl cmp stos aad inc dec (bad) cli into in dec jecxz lret inc xor stc push xor mov jno xchg push lea cmp fwait negl imul sub cwtl cltd lcall fdivs cmp jbe out ret mov cwtl push jmp mov fnstcw inc jmp sbb rol push fildl mov push lds or or inc and lea xchg sub icebp pop mov repnz sub pushl sub cli push xor push lret push icebp idivb ret jae mov pop mov pop aam push jl mov aaa and sub nop mov repz push data16 dec sti out aam scas mov adc xrelease add inc adc ds cmp gs repnz add lret fadds pop push lcall mov mov orb cmp outsl xchg pop mov and push dec add mov jle in fdivs leave mov mov lret inc sub loop mov pop pop and xor sub jg imul xchg outsb or cs or mov arpl rorb mov cmp imul hlt icebp mov xlat (bad) or add jne ror or mov jnp fnsave ljmp xchg sbb inc idiv test (bad) push cmp fistp test and mov cmp test pop sbb xor out ljmp imul repnz lods (bad) mov xchg jmp daa leave jle pop push mov aas movsl push jno and push scas inc mov ds add test scas mov out fisttp mov fstpl icebp pushf xchg popf imul (bad) push loop rol ret pop loopne sti shrl sub ret aas sub mov or or pop push sbb mov mov adc and stos jbe cmp jmp jecxz jbe pop repz jo or adc clc inc dec pop test scas adc sub rorl dec xlat scas int fisttpll push adc imul mov xor clc out sahf in das sub push xor xchg add repz stos sbb ficom mov shr or jno fstps sub js mov sbb dec (bad) dec xchg pop mov int3 push (bad) fwait pop daa pop dec jmp mov push add mov out mov sti mov in or add sub repz pop jnp mov sub and pop ss out or ret mov xchg pop jne adc inc ret pop jl fs in mov or pop popa mov outsb in call push aad dec xlat inc into and inc jle push sbb (bad) negb jmp inc jmp inc mov mov ret rep cmpsl pop cli mov lahf sbb shr inc jmp sbb ljmp inc sti and ja push sub push iret lret out adc dec jnp inc cmp mov lds pop rolb sub sti or push lret (bad) popf jno imul lahf or add jbe jmp aam mov sbb push shrl add pop gs je jmp mov rorb xor stos fs stos stc in xlat mov sub add mov scas jb (bad) sbb sub mov inc outsb aas push jnp or mov cmp jo pop rorb loope xrelease incl add sbb out icebp xchg dec test out in mov dec mov test leave leave jge cmp mov xchg dec push into jbe pop and and imulb fsubrs lock inc dec mull jmp mov xor push (bad) mov mov push scas call cmp (bad) xlat dec addr16 mov xchg into xor lds pop repz xor push push mov das fwait xchg dec jne sub negb arpl and cld fidivl cmpb (bad) push fmuls cmp pop sti jns cmpsl jo gs out pop out in ljmp ffree cmp ja fdivs es (bad) adc inc orb das divb clc fisubr dec shr lret ljmp cltd or in mov lcall jb jne cmp stos cmp push ret or mov inc or les lods pop lret lret in mov or aad leave loop std push jb scas cmc sti pop mov jb sbb or adc ss mov sub mov sub adc or (bad) jae ret mov dec xor xchg sbb ja daa out push jp imull dec mov or fildll mov inc test lahf add fidiv jle xchg mov pop (bad) div mov loop aam pop ja dec pop push or sub push adc push sbb add and jae not rcl in pop xor call pop pusha and xchg xchg cmp pop dec and sub xchg (bad) fwait and add pop xchg dec dec fldl das test mov outsb ret pop lds insb cld enter add sub push pop mov inc cmp cltd fisubr out jbe lahf mov pushf sti test mov and divb fbstp pop mov jno add add pop (bad) or jmp push movq mov shr stos dec scas cmp mov (bad) ljmp lods (bad) mov sub inc pop js popf lcall push mov das (bad) push mov pop add adcl adc (bad) testb aas push enter or test popf xchg sbb movsw mov xchg in testl sub pop xor repz enter inc inc mov add cmp ss dec pushf xchg scas int3 lahf fidivrl rcr fwait lahf rcl daa jbe leave cltd fs jno sub cmp add test rol roll (bad) gs fcomps cmp cmc in fldcw icebp cmpsl cmp faddl sarb and enter xor or das div dec int3 cmc jmp inc imul inc cs jmp and dec cmc xor jb ret imul clc rcll inc and sub mov les lods repnz adc sub into jb jmp xor loopne lock cmc dec arpl xlat push aam movswl jb mov daa or std xor cmp push adc push push test sub pop mov pushl sub dec mov pop (bad) outsl xchg in adc dec fistp int pop or xor xchg cmp xchg inc inc imul push loope jno or cmp jge in sub xchg pushf dec lea popf aas loope cli pop test pop lea arpl (bad) daa pop cmpsb push dec rorb pop popf fnstenv test scas mov cmp jp mov jge lret (bad) jnp std sbb dec cmp dec sti mov dec mov ljmp jmp mov or fidivr xchg dec out xor push fdivrl out xor fsubp lods es out inc mov mov dec adc jb sbb add mov icebp fcompl and and leave nop pop sbb sub js mov jg adc push repz mov (bad) test (bad) (bad) arpl ljmp cmp shrb loop hlt cmp pop lds mov pop into fild mov std mov popf idivb push sahf leave nop jno clc and addr16 mov std cmpsb dec or xlat and and mov cmc into (bad) popf ja sbb xor lret sbb jl pop imull int repnz mov cmp push xor mov mov dec scas sbb ret jl add xchg hlt mov jns pushf mov pop movsl cmc cltd mov cmp scas sub inc fsubl xchg call mov in icebp mov rorb std inc pop dec pushl cltd add in jmp sub lahf dec and (bad) out adc mov inc push cltd mov dec mov xchg xchg loop cmc and mov mov je mov fadds pop cmpsl popa loop cmc cmp lcall mov (bad) stos bnd jmp push adc icebp and lret cmp push adc stos cmpsl pusha push gs nop iret xchg enter cmc and mov dec stos pop and rcll cmp and add and iret das lods repnz fld pushl clc xor imul adc jne mov fstpt pop xchg fistl or loop dec daa cmp cmp cmp mov sbb cmp xor lcall dec movsb aad jmp cmpb cs add add lock jmp mov xor sti idivl in mov or iret and xor xor (bad) sub xchg jne insl into jmp mov sub loopne lcall arpl sbb lcall sub push and add push out (bad) fldl icebp or jecxz xchg int lea test aam in pop mov inc sub (bad) pop in in std lret sub (bad) iret push popa mov ljmp out imul cmp das bnd pop (bad) cs rcl xor cs dec mov (bad) out xchg pop sub gs jmp mov cmp mov ss hlt call sub mov das xchg (bad) mov call daa sub and xchg mov orl mov pop repz dec push cld push dec mov pusha (bad) mov pop test mov cmpsb or mov xchg ret movsb movsb call decb out push xchg out add sub iret mov mov ljmp (bad) or jp xor dec mov push shlb rcr push pop dec ret pop mov and sub shrl add dec sub movsb cmp push imulb adc xor rolb ret or outsb loop sarl or popf xlat xlat daa into lods mov out pushf cmpsb mov enter call imul into add mov mov lods (bad) movsl lock pop std cli sub xor je xor and mov adc pop rcrb add xchg mov lock push mov fwait mov test mov cmp add notl or inc xchg push adc test fidiv aam cmp xlat bound jns movsl popa xchg iret jnp mov scas or and lahf dec lods dec lret dec sbb out test aaa repnz (bad) push xor cmc inc fstpt push bound cwtl pusha jmp jp in mov cli jg ret sbb repz sub movsl sti mov dec xchg pop out sub bound out mov sub scas mov adc dec pop xchg stos sbb negb jmp cmc roll mov push push sub out and scas js daa or push add dec scas adc mov shrl pop sub pushf jmp sub add cmp xor leave xor les roll mov ja dec mov push mov stos je es sub mov inc pop mov icebp pop push add mov mov into clc pop in push ja mov int inc inc addl pop pop imul jg xchg dec (bad) ljmp incl aad pop ja xchg stc (bad) adc loop pop jno xorl push leave stos in cmpsl movsl mov test ret adc or nop dec sub sub xchg adc or mov sub xor xchg adc mov sub fstps mov xchg loopne ljmp mov je daa lock push add pop hlt sarl mov je das cmp or (bad) pushl xlat dec cli jge andb dec into in jne sub xchg sti icebp loopne (bad) mov fisttp fcoms fnstsw pop ret inc lcall lahf pushf (bad) mov adc add xor push jp (bad) xor cmp dec adc fsubrl or gs aam lcall (bad) pop or jae jne xchg inc pop mov dec ljmp mov pop loopne lcall xchg ss mov lahf xor and push stos mov xor int3 inc (bad) or mov xchg ljmp lahf xchg sbb clc xchg mov fstpt test icebp ljmp imulb fs js sahf or dec mov (bad) push imul negb mov cmpsl rolb in cs inc into idivb pop ds sub outsb in pusha shrb insb mul or clc xchg mov cmp cli jg enter inc daa pop cwtl push xlat test or popf fcoml test test and and jg imul sub mov lret jae xor mov sub dec xor iret sbb inc add in stc ret lret mov pop jge inc (bad) and dec pop lret lods (bad) pop cmp push pop or mov xor fcmovnu sub push aaa xchg fisubr adcl push ret lea cmpl or or icebp rcll add dec mov scas lret and sti jmp mov shrb (bad) fsubp sub xchg fprem cmp sub jge ljmp lahf inc mov inc sarl add xlat inc cmp or cmp mov mov cltd repz cmp out mov xor data16 das mov dec mov das add fdivrl xor pushf lods xor and mov or pop inc popf (bad) iret loop mov mov (bad) ds jp ja ja in adc fucomip push xchg push pop repnz xlat test jmp clc stos sub movsb mov sbb cld stos inc add jmp notl and out (bad) lret push and negl fist sub sti sti adc icebp sub sub incb sub fildll xor call xchg cmp dec adc jmp and xchg add xchg sbb iret ds dec push jl fsts lods out in addl (bad) mov sbb adc imulb decl mov xor cld fsubs out jmp (bad) or jmp cmc (bad) mov dec mov out (bad) xchg push pusha mov bound fcomps icebp leave movsl xlat das sti sub (bad) loope jns dec pop aam aad repz push scas jbe adc xor sub popa cmp add stos xor mov mov or ja aaa icebp and rolb pop mov lea lahf push jecxz fisub or adc imul into mov jle dec (bad) imulb das fcomip sahf mov adc push xchg fwait rorb xor dec mov adc mov xchg pop imul xor adc in hlt (bad) notl subl cli inc std inc push adc repnz mov cld fidivl inc jnp dec iret int data16 scas xor rol push pop cmpsl scas mov xor ret icebp mov xor aam sti arpl add lret push fsubl push stos test (bad) out lret cmp outsl sub adc sbb rcrb repz (bad) add popf je test cmpsb cmpb fisubrl jle flds loop shrl cmp fbstp push mov in add divb pop mov test inc (bad) jecxz lea jb inc jle jb pop jne cltd sub lahf into mov jno pop out ljmp scas jno add popa mov idivl cmp lea xchg sub gs mov pop cmpsb dec test repz xchg (bad) adc fwait sub in dec shlb xor push cmp outsl mov test iret cltd pop outsb lods adc sub test fucomip and and sarl jns add scas cmpsl ret dec mov stos cmp outsl adc dec pop lret addl mov scas cmp aas inc daa jne mov decl pop pop push imul ljmp stc mov es add and test test movsb mov inc push int3 lock repnz and and add cs stos cmpsb and sti repz or clc add jns lds inc and xor scas cltd xor jecxz mov sbb mov sti sub div aas and mov (bad) cwtl pop stos mov dec xor pop mov cli fnstenv lret xor or mov (bad) mov daa arpl rolb inc pop leave or adc add xor push or sahf jmp jge jg mov sub lock stos dec int3 or mov inc mov std xor cmp sbb push jnp push dec xchg dec stos sub insb ficom mov dec aad xlat or mov imul (bad) push xor xchg std sbb mov fcmove roll add divb pop call dec stos jno or aas cmpsb call push jmp inc imul fcmovnu xchg inc cwtl ds push es test aad adc lods out sub stos sub nop lret out cli imul stc ss sbb add push int das dec mov sub aam and push dec sub mov lods rcrb cld in cmpsb jp stos sub jmp das mov lret movl push cmp lret push shrb lret adc push (bad) jmp das jge cmp lret jb jns mov divl imul and xchg lock and xor add or sub popa xor mov out xchg add nop adc jb pop add mov pop cmp xchg pop mov aam pop inc loopne (bad) icebp (bad) imul ror push sub push lret leave sbb jmp rolb xor rorl push rcrl sub ret lahf mov jge aam insl imul push pop xor add ljmp add pop inc mov cli lret icebp pop mov out je push je inc or nop sub roll xchg push fildll les (bad) jmp pop push lods push mov mov mov or fwait xor outsl xchg stos jecxz xchg test ret aas aam ret xchg xorb adc mov mov outsb (bad) cld pop cmp lret stos in int jl repz xchg xor xor movb mov adc out pop mov or in xchg dec cwtl adc dec icebp lea jge cmpsb and imul cld ljmp mov fsubl mov cs fidiv (bad) frstor fdivp dec push jo mov imul mov xor (bad) fs ret repnz lret xor jnp and ds xor jno dec cmpsl adc cmp fisubrl adc push mov xchg xor and or fildll pushf mov inc sarb xchg sbb shlb int3 sbb clc inc adc jle or pop das jbe (bad) sarb fildll (bad) int pop push ja fs mov loopne (bad) sbb (bad) imul popl push scas (bad) cmovg arpl and (bad) xor dec mov xor dec push lahf adc mov pop fmulp pop jmp stos sub das (bad) pop pop jg jnp lods cld push push or push das add repnz popf icebp adc das lock mov lock call xchg cmc push pushf pop sub push and fnop and mov (bad) iret xor loopne pop lcall fdivrs dec adc lods inc xlat call inc jae les out xor xor dec ficomp movsb mov (bad) xor ret mov and fldcw enter jbe push ret sbb pop fdivrs scas and jg ja push frstor or stc movsl (bad) imull xchg xchg stos mov pop mov push sbb mov mov pop mov add insb inc shr xchg outsb adc mov xchg push iret dec jecxz mov xchg push mov (bad) push test mov daa out cltd cmp cmp xchg jmp roll aaa mov pushf jne lret imul or mov xchg (bad) cmp push add inc scas mov aas adc fs stos xor cmpb mov mov fwait dec xor cmp cltd dec mov mov (bad) and pop adc out cmp call clc pop mov mov pop negl dec stos xor into popa insl xor stos adc movsb mov pusha sub push sbb rclb mov xchg das sti subb das push mov mov aaa and rorl add out inc ljmp sub outsl and add loope cmp sub popf pop adc or add xor fadds push pop daa ljmp dec (bad) cmc leave in cli (bad) lock cmc push jl scas or xor mov ljmp lret cli arpl leave lret jbe mov mov sub daa mov xor stc sub fidivrl jge outsb fs lret nop orl lcall and add pop scas jmp daa insb (bad) lds ljmp fcmove xor clc cmp pop or jmp (bad) rol (bad) pop jno popa add and fnstcw stc xor scas call stos jecxz das sti fwait rol xor xchg dec xor mov insb dec idivl dec clc lret or fcmovnu cmp cmpsb loopne jmp loope mov mov cmp jne xchg sahf inc push xchg ret push pop stos sub or cs sbb mov out hlt sub outsb jge scas jbe push mov ds pop pop repnz cld repz in movsl dec sbb dec pop fmul push sub pop movsb jne lret stos test movsb mov xchg mov in jno shrb and mov push xchg pop push mov repz xchg orl jno sub jns shll adc scas in push arpl cld jbe jns xchg cli jecxz push sub cld xchg xchg lods lods mov call add push pop insb gs ljmp cmpsl pop je stos int and sub add movb mov or add push stc pop adc sbb xlat pushfw pop addb push pushf fcoms stos popa inc enter sti dec movsb (bad) jg hlt and int3 pop add in inc mov dec out jp les enter add dec rorl pop movsl sub dec mov dec jge sub mov inc fmuls dec fdivr (bad) mov loop shrl and fdivl and sub or ja jb aad xchg xchg pop scas cli sbb dec inc and std stc stc rol inc (bad) dec add shl das mov cli lock stos and push imul and jb inc lcall dec (bad) mov sub add and pop sbb mov test jl sub adc ret xchg xor mov inc test mov push aaa jae stos mov xchg cltd aam or stos inc push and aad xor pop movaps ret sti and jle pop imull cli push scas xor mov push sbb adc pop mov or xor pop jno dec jns mov fnstcw subl adc mov lret mov mov xor add add push repz or xlat (bad) adc dec out pusha daa (bad) jecxz out mov lea loopne pop xor jae lret dec add or in xchg adc fs int popa push out sub or lret pop fistl iret clc sub rcl icebp insb xchg push int xor sbb (bad) dec jl jecxz (bad) xchg clc cmc inc add add cli mov jmp inc out xchg adc lock xchg pop out push inc dec add jnp call aas mov xchg xor mov out mov jle cmpsb (bad) das or je int3 mov ds stos lret fs out pop int cmp xorb xor mov xchg cwtl inc xor and cmp jmp mov gs mov dec ljmp add add mov sarl movsl or aam imul or jge int3 clc leave mov and lea scas jp movsb or daa (bad) (bad) mov dec (bad) loope jle jns xchg leave testl jmp cltd outsl rorb and loope popf and xchg dec push aam bound jp or xor mov mov in adc clc or ljmp xlat adc scas imulb pop or jmp sub mov pop lds cli leave es adc lea xor lret ror push and aaa dec pop and add call and dec cmp popf or mov push dec repz mov loop xor stos or gs dec sti movsb or xor js dec fidivrl inc movsl test into (bad) dec roll scas call sub test les or repnz leave ret xchg mov pop xor add mov fdivs mov dec pop sub js out xchg fadds movsb sbb jbe sub into xchg lods jmp and mov fist sar jle mov lock test fsubrs rorl (bad) addr16 or int3 popf mov xor pop test fistl (bad) inc mov dec loop mov out jbe lds fcomps add xor sub and (bad) (bad) mov idivl stc push mov push jp iret push bound sub mov and (bad) dec mov push jmp cmpsl push push lock sbb int3 or sub lods mov xchg cwtl mov (bad) data16 mov cmp dec std inc xchg scas out dec test adc mov mov or stos ss add cld pop push aad es cmp add (bad) xchg out fdiv mull loop repnz mov lcall jecxz adc leave stos repz repnz or out adc cmp and mov cs inc in std clc xchg push paddusw pop (bad) mov jl pop add cli sbb xlat dec push mov loopne fsubrl jg sbb testb pop push aas pop icebp loop rcll sub jno repnz pop lods add lahf xor sub sbb cmp pop mov xchg iret mov into out xchg je push (bad) dec pop dec xchg fsts jg jge pop mov mov adc popa sbb daa and jmp dec int3 jmp in fwait mov and call idiv std or iret mov out inc gs jp ja stos (bad) enter lret push xor mov inc mov (bad) dec (bad) shrb rcr test ljmp sub sub xchg call mov and xchg push mov cmc out mov sub jle push rolb xor cwtl adc addl jno mulb xor push lret movsb cli xor bound cmpsl fwait sub stos mov mov (bad) cltd shl sarl and and movsl xlat xchg mov hlt push push add je lret push fiaddl (bad) loope push test add push or add test out loope aas cmpsl movsb dec mov sub jmp sarl ret dec sub mov test aad push xlat in xchg or fisub dec fsubp xchg add lock sbb jns dec ljmp or sbb sti inc mov jge sbb inc adc mov mov popa (bad) icebp and jmp adc adc pushw or add mov scas lods mov les cwtl enter mov pushl loop inc outsb fxch inc stc arpl and lret jne aad leave icebp pushf inc out add lcall xchg sub sub jbe push and pop sub (bad) mov add and mov aas ret sti or out fcoms popf inc loop sbb ljmp lock inc pop jl pop in faddl pop mov mov xor mov sub mov loop jle loop clc call jmp test arpl xor adc hlt pop into jmp loop inc out dec mov xchg fist jae pop cwtl scas fsubrs mov lret jmp ja mov test dec in das xor aam lock push adc cmpsb mov sbb aaa pushf leave adc subl jbe push push and pop dec repnz sub push iret mov icebp (bad) cmp jecxz je in decl std aas mov enter push xchg xchg xor sbb adc mov fs sbb inc mov push negl into and (bad) sub add incl and imul inc sti xor xchg xor jmp sbb xchg (bad) mov sub or ror add inc pop or pushf push rolb rcrb inc or fistl pop jmp aas ljmp sub mov sbb sub mov pop inc int sbb js fisubrl push adc dec (bad) mov pop sub pop shl int3 repnz mov jmp mov lods inc movsb xchg mov or negb aad lods repz aaa fild outsb mov fucomp mov pop test pop or sub add pop mov adc (bad) pop push jnp add testl mov ret cmpsl fildll adcl icebp push pop sbb jmp test pushf divl dec mov lods mov pop fnstenv movsb je sub lods lahf into inc sbb or jne mov leave pusha outsb shrl mov clc xchg rcrl sarb lea jmp cmp xor dec xor ret push inc push subb sarl mov rclb (bad) cmp add jmp jae mov out dec xor int3 (bad) hlt inc roll and and mov into aam lahf (bad) stc or lea sub fs sti xor jl sti or add mov mov adc jnp xchg pop cwtl sub dec out jnp scas or mul lahf (bad) mov mull xchg mull pop add mov sub pop cmp (bad) jle repnz fdivs xor and push xor fild das cwtl into out and mov mov (bad) scas fnop add test xor adc mov inc inc ja push stc push jl cmpsl test daa imul push shll repz (bad) jl ret (bad) jb push (bad) movsb (bad) cmp fcom scas je inc dec fdivrs mov jp (bad) aas sub xor int jnp cmp pop and mov scas xor popf cmpsl negl jge popa mov xchg xchg dec and mov adc push and push mov push mov (bad) test test aam into push jo pop out gs lcall and sub mov ljmp aad je ja sub and mov jecxz das xor xor and mov lds sbb push sub repz movsl push push fadd or or pop mov in cmpsl jge inc and popf xor dec pushf pushf xchg hlt mov add sbb out mov repnz mov xlat outsb mov nop mov stc pop or xchg ja js pop out repnz shrb pop leave (bad) mov jne mov dec das or cmc add test repnz notb push test cmp pop in mov pushf adc xor and repnz mov sub fxch lods jp (bad) aad test add push (bad) mov repnz mov sar mov stos xor push in dec push bnd add jo bound add test mov test popf sti cmp jp jl in lock adc or stc inc enter sbb mov xor cmp mov pop push in jmp jae xchg (bad) stc orl mov mov jne outsw imull xchg jno cmpsl pop int3 mov out repz mov cmc inc fbld xor fbld (bad) mov dec xchg mov iret jg jp pop xor push xor mov shl adc lods dec (bad) xor movsl lods je js fistl mov movsb cltd insb (bad) xor jmp jbe loope or inc cmp or scas mov push xor into jne ja gs std dec fstpl insl dec stos fmull xor pop mov mov pop xchg jge fs add xor aaa repz insb pop mov dec les xor repz and xchg into push sub sarl xchg push fwait push lret cltd addr16 imul and push fstpt ja (bad) lret hlt call lret jg xor fs add push sub lea adc mov add mov insb daa mov loope add push cwtl orb sbb jns imul ret pop xchg xchg add mov imull cmp mov xchg pop cwtl ljmp push aas ret push sahf adc sbb add sarl test mov and call inc cwtl ja dec xor xor (bad) dec es jne mov or out cmc aam fstps fsubrl inc mov jne (bad) fnsave in mov and pop sti push out sub add mov aaa mov xchg in adc fidivr decl add pop sbb cmc pop mov adc add sbb sub (bad) and in mov push sub pop inc sti xchg les bound cmp pop lret movsl inc fs mov inc ror dec imul xor adc mov dec xchg dec aad rclb add dec aad dec cmpsl xchg mov repz lcall add fisubr xor and lahf (bad) and mov inc fistpll mov lock repz lret sti (bad) ffreep jg fnstsw pop mov xor daa push sub lret or mov (bad) jl push mov xor inc repz or mov mov pushf (bad) xlat aam lret out test arpl aaa cmp sub out xor sub cs test and cmpsl pop fnstcw cmpsb aaa aaa loope and (bad) xlat das popa mov or ljmp es sub stos out add sbb mov (bad) data16 push xor jge bound dec adc mov mov imul pushaw jne lds fldcw imul inc inc jl shr rorl test hlt scas push jmp subl mov pop cmp gs mov jl addr16 loop push push inc mov stos lret lea or mov pop xchg mov sub fcoms or adc (bad) lret in adc divl dec sub adc mov xor stos dec push mov xchg mov icebp out mov test into test test sub repnz dec mov lret icebp push notb fisub jle in mov daa gs (bad) lret cs cmp or push and mov dec dec idivb dec jne int3 sub adc or es xor xlat mov out in or and bound pop mov mov adc push (bad) xor sub imul add std lods xchg clc xchg leave rcr and repnz lcall xor aam in mov into mov ret and scas imul push mov mov inc cli (bad) popf pop adc dec push mov iret aaa fiadd lods divl frstor cmp mul sti pop lods sub mov (bad) cmp je daa aad add and jnp dec dec aaa lods mov frstor and mov icebp scas sub or lret mov repz scas sub mov idiv fbstp sub ret and jmp and outsb divb mov shr mov pusha scas repnz dec adc xchg cwtl add xchg mov and idivl rcr pop imul sub test sbb and stc mov add push cmpsb lds loopne jecxz sahf leave push fistp addr16 or loop add loopne pop (bad) xchg lods pop fmulp pop mov pop mov fcomps test repnz xor xchg dec imul cltd add das les in dec pop sub jne cmpsl push popa or in add jb inc jb shlb xor outsl pusha ds xor fimull pop addr16 sub in jno inc jmp cmp ja or adc push cltd sbb mov pushf xchg mov pop xor mov pop aaa lcall lea sbb pop add scas jne cltd lods adc mov dec cltd adc mov jo lahf xorb mov add (bad) jecxz inc fcmovb inc pop add aad mov ret ljmp and jl sbb hlt movsb test out xor sub mov jge popa mov rorl cmp xor mov ror stos mov inc and pop (bad) in aaa imul xor sarb xor repnz test repnz mov pop jnp cltd push rcll add sahf adc ds insb jg sti dec mull das stc inc lods jmp mov loop call fcoms sbb add inc ss (bad) daa add inc mov int3 xchg arpl pop and push jo mov and push adcl scas mov (bad) mov adc fimul (bad) xchg mov pop test ljmp jmp jbe ret int sub dec xor fs lds ljmp xlat mov push test add cltd xchg out mov push (bad) repnz xor mov mov idivl mov mov sti (bad) xchg inc pushf push and add adc mov adc iret dec pop jae mov jg stos cmpsl cmp or cltd sub cld (bad) mov and and cld mov aas add cli stos std in mov loop jcxz lret pop dec int3 push cmp mov sub cmp mov adc icebp cmp leave mov repnz inc pop fbstp dec lock loope ja xchg sahf cli sub mov imul inc xchg insb cli daa xor lcall or pop cmp loop cmpb lret ljmp or daa mov jne xchg xchg rcrl out sub sub pop xor repz sbb pop and fldl2e sub enter xchg lret xor pop mov inc sub (bad) ds cmp mov dec shll pop in adc fnstcw adc popf inc in add xor loop rcr add xor xchg or or roll xor jp insb xchg sbb or rcll leave in xor cli sbb jg sbb mov cltd dec sub sti shll sarb fdivr outsb jne (bad) mov jecxz inc inc mov xchg out in fdivr add iret ds add mov call std outsb mov and push lea stos sub arpl dec (bad) mov mov sbb repz xor jno mov rcl aas out cs pop and stc mov stc push (bad) mov jmp xchg cli (bad) lahf data16 xchg push ljmp cmp das xchg repnz sub dec push out cmp sub rclb repz pop loop popf mov cmc push leave (bad) lret (bad) repnz lcall sub pop cwtl add or jle gs loope push test fstps mov or dec out repnz mov dec mov mov test addr16 push in dec xchg mov pop push mov std sti and or aad mov mov loopne pop mov push outsb mov inc movsb lret jb dec stc jg sub mov xchg repz mov (bad) or in xor mov xor mov xchg add add daa push js and movb clc addr16 pop (bad) out dec jg mov rolb fldenv cld fs scas jb add aaa dec mov std js sub and repnz xchg dec pusha push sub mov rclb (bad) pop jae into push mov inc lds lock jo (bad) jp aam lret or pop jae lods adc cmpsb sbb sahf popf out mov ret or jle imul mov push and daa jmp jg cmpsb cs out mov cmp (bad) pop data16 pop mov das into stc iret dec leave add or and ds icebp jb icebp out or and sub aas outsl and sub jns dec pop call iret (bad) rorb sbb inc adc fildll std xchg mov neg fs lds cmpsl cmpsl dec dec std cmp xor (bad) (bad) fldl hlt push out or xchg iret cwtl sbb sahf arpl mov xchg push sbb call cmp mov ljmp pop mov adc xlat fwait sub push mov xchg imul add push imul jle add mov push adc jecxz lret add ljmp inc mov lods ljmp jne mov roll mov lock in mov adc lock js shr mov jle jge sub jne fmuls clc scas (bad) stos xor sub aas mov stos push stc xchg test jle imul xlat cs and or mov out mov out and dec leave das mov int3 or jmp mov rolb dec add out push or pop sbb popa loope das mov ret loope mov mov stos fisttpl scas jne imulb and and repnz ret in add nop mov cmp loope mov (bad) in ja xchg loop mov inc push sub test add xor ljmp and push icebp fucomp jg mov sbb repnz add inc cmp sub pushl int3 call sahf sub mov stos cs xor mov das stc insb cli pop ljmp sub lret pop repnz into and lods jae sarb mov mov pop jmp (bad) jl div ljmp aas arpl out xchg ljmp mov or cmp xchg sbb aaa jb rcrl xchg ret mov stc pop adc mov mov ljmp (bad) imul imul movsl push mov repz idivb mov rcrl es (bad) pop stos xor xchg stos incl mov popf xchg imul sub sub sub and xlat jg (bad) loopne leave mov (bad) pop out ja add fldcw dec call and xor sub mov or xor jl loopne add popf jo adc and mov stc and add xchg pushf or pusha and and sub inc das and and cmp mov and inc mov inc dec fwait inc dec sub push or cltd inc pop iret inc pop int3 inc pop or push inc imul jbe sub das jle addl subb jp adcb mov enter scas cmpsl jmp or or mov inc xor stos int3 add rolb pop aad push add jecxz add out ret pop out push lock jmp cld or add adc add adc rcll sbb cmpsl sbb out add add add xor cmpsb xor in add imul sbb and or push push push add pop add pusha add add movsb outsb sbb sbb ja inc jns inc jg inc (bad) mov (bad) popl xchg add cltd add popf push mov mov test dec mov xor inc mov inc leave push fs add roll aam mov sub lods inc loopne inc in inc jmp inc out repnz repz inc clc fiadd outsb nop sahf loopne bound loopne or or or or or or xor xor jmp and and and and and and and pop and and sbb mov add addb add xchg mov jnp adc sti inc lcall dec inc movsl popa inc stos pop inc lods pop inc mov inc mov inc mov ret ret add movl iret nop test daa inc fldt fstp loope cmpsl in xchg jmp or add cwtl mov cltd add loopne bound cmp or sbb push push or bound or or xor cmp aas sub cmpb jecxz andb sbbb jae add subb mov enter mov or or jle xchg orl xchg jo or or or inc mov stos cmp cmp add cmpb rol int3 push (bad) ror int3 cltd into adc cmpsb fcmove rcr push loop clc out or or or or stc or incb mov adc pop pop adc test adc adc aaa push adc sbb mov adc adc push xor scas xor pop cmp out inc add inc add add add add pop add add cmp xchg add imul outsb add add jns sarl jle mov add xchg jmp add push sub mov add stos or or inc lods mov mov mov xor add leave add into sbb sarl add faddl data16 push out shr add fwait clc add adc push or enter sbb test and pop jne andb mov cmpb jns xor orb enter xor or dec or or dec pop sbb pusha and and fs and and jno ret repz fs cwtl jle lcall or mov pop xchg or cwtl or pushf or or or or or or or mov xor or or rcl xchg (bad) dec fisttp jl or or call (bad) in jns cmpb clc sti orl les loop add or push adc adc jle add sbb push add and and dec das add xor aaa add cmp add inc add dec add dec push test inc push jno pop sahf fs sub lcall outsl cmp jp fimull lock jle inc (bad) xchg test mov mov nop add xchg add cltd push sbb sub pop inc movsl inc inc cmpsl addb inc stos popa inc scas cmp mov inc mov lds push add int3 add add roll inc fadds das fldl clc loopne ret in xor nop cltd out adc icebp adc notl movsl cli adc and cmp ja or sbbb or cmp addb leave pop xorb daa xor adcb subb cmp cmp xor sbbb mov enter or addr16 or arpl hlt data16 or mov ja icebp jnp mov add xchg leave mov pop nop and xchg and cltd and xor inc movsl add test xchg mov mov and shll (bad) and loope and das fmul fsubl test and popa jmp sub add add add std push and adc mov or or out and sbb imul daa and sub ds (bad) and inc aas mov addb fs xor push push add push add pop add pop add popa add gs push pop xor dec jno sub sbb jae adc jg test lea xlat mov cli xchg test add or inc mov xchg lods and and mov in jge cmpb rolb xlat sub xorb xorb leave call push repz cmc subb add andl adc push or test push jg andb push and sub push sub mov or aaa sub subb xor addl stc push lret insl and xor push jl fwait addb addl xchg lods mov rcll cltd add add add add (bad) mov sub and or xor and and and (bad) dec fbld fsub and and jo cld cmc subb sub addl or orb outsl pop xor sbbb lcall add add add add dec and dec and push and push and and pop and pusha and gs enter mov or or orl xchg or xorb xchg adc sbbb xchg mov add jo or mov and inc ret or lds sti (bad) or or add fimull mov or out inc jmp inc out hlt inc repz cli adc leave add popa push or scas adc xor loopne add sbb pop and and jmp sub outsl inc xor inc xor inc aaa push inc cmp inc inc pop inc inc mov dec in push roll mov pop add arpl push inc jo inc je inc js inc jle inc test xchg popl add xchg push sub mov stos sbb jnp add adc adc lret iret adc rcll cld aad mov adc fist dec jecxz leave out test adc adc sub mov scas pop or or pop cvttps2pi xor fistl add add add add mov add add add add add push add add pop add pop jbe pop inc push insb add jno ss aaa jnp xor mov add mov lea xchg add xchg add fwait push inc sahf mov mov inc stos daa inc scas fs mov inc mov inc mov inc ret mov lds leave add mov and fdivl out inc in icebp inc lock and stc cmpsl sub sbb or orb adc xchg pop add add add add sub or add add add aas add add dec add push add add shll imul push jbe je sbb addb addl orb sub ficompl adc jb and scas and mov divb fdivrl rol icebp lret into add add fiaddl ljmp in jge add loope add xchg cli add incl push add fisttp adc adc adc push inc push cwtl inc and inc sub inc sub jmp inc xor push aaa add nop and mov xor or add add pop add pop add pusha add nop sub loopne push jo mov add stc addl mov sub bound mov stos add scas add mov xor add mov lods les movl imul inc fidiv loop fs jmp lahf lock repz clc or or cld movsl aam adc add and add add add adc pop sbb shrb int3 inc fiaddl lea rolb adc stos inc inc or dec and adcl pop add arpl push les mov add ja imul mov mov inc mov inc xchg loope xchg js lcall fist or movsl adc adc adc scas adc mov fidivl repnz sahf (bad) sbb lret add aam fadds movsb fcompl add mov or add hlt add push rolb push cmp and or (bad) cmp and push jg orb aaa and jg or xor (bad) xor dec cmp dec pusha and dec and dec and and and pop and pusha and and mov jae gs outsb ja fwait jnp xor inc mov and rclb lcall lods inc cmpsl (bad) loop add mov es aam add add add int enter (bad) add add ficoml loop in fucomip add add add add bound or mov add add and stc and add (bad) xor pop cmp sarb add aas add add or push or pop or or popa or and and jae cmpsb js cmpb les sub mov mov xchg popa xchg add popf add mov cmp inc mov adc cmp data16 ret xor nop ror mov adc xlat adc fcoml iret ficom push loop mov adc adc ja hlt push fs inc incb mov push sbbl adc pop pop or sbb insl loopne lcall sub in sub lds jne jno adcb dec sbb addb push push sbbl (bad) pop or aas mov and and js jbe and decl jp and and xchg and lcall cmpsl sbbb jmp subl pushf mov xor xchg les test and and (bad) and and xor ljmp fs add cld add pop shrb or or pop rcrb sbb and add out sub and add aaa add add cltd pop inc xor sub into push add pop add pop add add push jno pusha jne dec jp sbb sub adc test push mov orb cwtl adc movsl add add lods add adcl dec xchg xorl sahf adc jo lcall sarb fs jmp sbb add fs sahf jb shrl in sub ficoml fisub cld mov sbb mov stos aaa add clc lret lea cmc daa icebp pusha pop rcll mov sub fnstcw jl (bad) pop pop push icebp loop ret pop xchg adc pop mov push add xor pop pop or push jg out lea sbb ljmp mov pop cltd sub mov insl xor mov pop cmp rorb and inc dec pop xor ficom cli js imul testb sub push push ds adc xor mov sub pop mov push xchg sub xchg xchg sbb push hlt addl (bad) or jl ret mov mov xor or insb daa dec adc sub (bad) hlt loopne push adc sbb sub call inc add inc add sbb enter sbb lods add icebp or xor in jbe lret adc sub adc rolb enter inc pop xor imul dec aaa cmp jmp cmp clc arpl mov push pop jns test xchg mov (bad) and xor orl daa sub mov fdivrs movsb mov xor je (bad) cwtl mov push push and lea inc add push mov hlt lret or mov add cmp and movsb push inc sbb jb dec out adc adc push mov pop pusha (bad) sbb cmc fildl or das mov push rcrb jae repnz sub das fwait shrl push jmp inc jge mov adcl push cmpl insb pop fs jo mov pop push mov xchg pusha lahf push sarl or insl scas pop dec ret mov jp in or sysenter inc sub cltd add rcr imul adc cwtl jb stos fs test repz jge in sub xchg leave gs out sbb stos and cwtl xchg add cmc popa jg inc test push mov fisttpll sbb or daa dec add test call or and pop popa adc pop int jle add pop insl jno ss xor ret imul push loopne pop push push pop nop pop add dec pop push neg push mov xor fldcw or and sub add mov mov add jp sub lret mov jno repnz add cmp cld in pop dec push insl dec sub loope mov push dec xor sub dec add xchg pop dec pop pusha imul cmp pop inc mov xor pop outsl ds or pop push pop add sbb add fsubs mov imul cmp add add stos pop neg adcl sbb add xor pusha or adc jmp stos mov leave add dec divl cmpl mov add push fs adc lds xchg jo sbb fbstp pop sbb int add and or out inc mov pushf push (bad) iret jno inc mov xchg sbb aad jo add je sbb inc jno and call cwtl dec push pusha push xor fbstp xor out movl clc pop and xchg lods dec (bad) outsb (bad) jmp subl add dec push dec cmpsl stos xchg daa adc or push rcl movsl add fmuls aas loop popa fwait jecxz mov lods adc enter sub add mov cmpl xor sbb xor arpl xor xchg mov enter push sti pop call sub lods sbb pop dec push sbb dec sbb or add sbb pop xor lock mov sbb or nop jmp fistl loopne mov dec out popf xorb not pushf pop and loope jle aaa rcrb xchg ss pusha cwtl pop pop nop inc or rorl (bad) push pop push mov dec add jle xchg in pop bound push jnp cmc mov out mov mov inc push jb icebp pop and or push mov push nop roll add xchg pop pop xor push mov es add add cmova pop clc pop lcall push adc cmp nop xchg mov push push fcomp adc cltd push add shr aad add inc mov iret xor cmp jno notb test add inc (bad) fstps roll add adc enter sub mov call mov pop push push pop xchg pop push mov je add js inc mov adc jecxz mov setne xor dec pop dec fstps push fisubl pop movsl movsb add cmpsb dec jb iret faddl or icebp fsts add xchg and ss les imul add add dec pop sbb adc or loope push push sub pop push (bad) mov mov push push push (bad) dec bound ljmp rorb dec sbbl les pop pop out dec pop jg push cmp roll insl iret add loop lret jb push lock cmp cmp push add add jmp into mulb or sub mov jnp dec sub test mov or pop add movhps or add push lret pop pop jb sarb xor push mov mov inc and sub iret iret xchg sub or movsl add imul shrl add aad int sub pop lcall mov test (bad) mov cmp cmp aaa out mov sub pop push gs adc xlat out pop xor dec or sub xchg inc xor jbe pop pop int sub dec push mov fisubrl mov jle adc and insl xor or imul call cmp sub notb icebp nop stos dec es pop jl cmp sub push mov cmp not lds imul das aaa jge sarl (bad) lret test data16 dec xor add xchg pop mov add (bad) (bad) or inc std sbb iret mov inc pop aam sbb push int3 push mov sbb cmp sub add mov fimull popa xor pusha pop mov add fdivrs sub outsb add loop sarl dec icebp cli inc push sub pop jp push xchg cmc xchg mov adc scas push push pop pop cltd (bad) out push mov or jns movsl mov jmp pop cs mov dec sub push adc jbe dec nop cs inc inc push xchg jl jae add xchg insb cwtl pop inc dec roll and cmp sub dec or push and jnp sbb inc dec fs mov imul or xchg lret add call (bad) std mov xor pop int3 sysexit loope xchg jb jmp lret pop mov add sub push ss pop pusha jmp or push roll ss ret pop pop cmp cld enter jae adc or mov sbbb das jno or (bad) push out inc gs rorb sub or dec rcll dec add lcall add fidivl pop cwtl ret mov push mov pop add loope sub adc jmp cvtps2pi jecxz adc int mov pop jg inc and push mov ret and insb (bad) xchg adc mov xchg paddsw mov repnz push pusha pop pusha pop (bad) aad sbb push pusha jg repz xor daa loop cmpb imul or and lds out (bad) or pusha movsb shr pop pop (bad) sub inc cmp sahf lea iret cmp xor ja pop or lret imul dec fldcw cmp hlt xor in out dec (bad) sub adc or in popf xor add pop mov xchg push addb dec mov add (bad) push push pusha sub bound dec insl test or aas stos int3 pop xchg std and pop pop xor push xor mov sub test mov push pop out mov rcll outsl dec adc xchg xor xor scas xor pop insb movsb and inc cmp je mov sbb fcmovnbe sbb and add jb imul int sbb adc dec jge push sti sub mov jecxz scas push push add (bad) or mov or dec testb icebp xchg lock sub cmp mov aaa mov dec dec (bad) shr xchg inc cmpl xor in (bad) loop add sub pop adc add clc add pop js xor inc leave push xor les mov xchg es test inc and nop inc out push add jle aad xchg es cmp mov je add dec sub test jb or add xor adc daa push add cs leave push add data16 jl sub mov jo mov add xchg and dec es dec inc cmp add ljmp cmc adc inc inc sbb or hlt jmp dec pop and stc pop and sahf es inc movsb push or sbbb push sub insb push adc pop jl adc addr16 sub out sub mov mov insl or pop cltd xor js sub push jmp ret (bad) jnp sahf jne mov popl in (bad) or xchg push lock int and jp xor jne dec pop addr16 dec repz mov and pop dec fs or fs mov push or outsb add xor sbb jmp shr loope mov idiv mov cmpsl and or xor adc push (bad) sub xor ds push push pop mov xor inc jl add icebp pop dec push inc mov sbb out add mov pushf inc and pop arpl or adc push negl inc add jbe mov rclb xor pop mov pop push sub fsubrs push xchg lods mov sub nop ljmp or lods imul aas jle or or iret pop inc into out push cltd push jmp fwait sbb dec adc push sub xchg je mov imul aad test fidivrl ror dec adc or dec sbb lods leave inc adc add or add pop xor loopne push dec push daa movsl test mov cli add dec and xor imul add (bad) addr16 pop std add jbe push add mov or push xor aam int adc dec cmpb aam xor out add xor test push and jns rorl je add pop test dec mov dec and testb pop adc xor mov add shll pusha or rorb adc scas mov repnz mov mov subl and test pop mov and or jmp arpl arpl sub push inc push xor cs jecxz inc inc jae sub or dec xor jmp test mov add subl in pop or adc add sub test add jne add popf pusha (bad) add inc inc cltd mov sub sub xorl xchg fild push sbb clc adc adcb ljmp push dec hlt jp push mov pop cli dec ss add pop jge push arpl fistp push or xchg insb ljmp insl sbb push lods or add stos push push nop or xchg jecxz icebp xchg or loop and pop popf mov shrd and ljmp cmp lret add cwtl cmove pusha adc mov arpl scas (bad) movsb inc (bad) add push lods adc cltd sub adc cwtl test xchg and out in insb adc xor and jne dec and jb adc rcrl addb push jmp push out or jb lods pop sub int3 pop pop inc and clc inc inc cmp mov cltd add int adc imul xor into push dec adc xor or cmc popf rorb fdivrl cmpsb scas test daa or mov cmp sbb out lahf sbb testb aas jg fidivrl leave pop jae or xor xchg dec jmp outsb xchg adc mov sti test xchg or (bad) adc mov ror cli hlt enter sbb insl (bad) pop sbb and out outsl outsb adcl inc test and jp addb cmp pop rcrl inc inc inc inc pop mov sbb xor popl cmpsl aaa or sahf dec sub xchg sbb add dec pop mov push adc jle cmpb inc testb inc and sbb and push fldt and xor cmp jmp adc jo lods mov test xor in xchg jmp mov xchg add mov cmp outsb jp mov sbb adc pop dec or es cltd cmp xor add ljmp sarb inc adc mov fwait cltd or cli xchg out mov or adc dec es cmp or xchg pop sbb xor test or and adc sbb dec pushf test and add rcr and push push movsl xchg shll add push xchg pop add add pop mov cwtl add add xchg adc inc inc push dec mov (bad) roll inc mov dec or sub rorb loope pop xchg movsl es dec addl call bound push lahf nop mov mov add push or xor push pusha adc imul std jmp mov or and out xor add mov xchg and pop add sbb pop cmp mov mov lea push mov ficoml or pop xchg lcall arpl inc fnop into xor mov or add pop cs mov sub pop mov cmc add and jle sub inc cmpsl sbb aaa push cmp das sbb xchg dec add pusha add lea icebp jmp mov xchg sbb add inc and nop movsb int3 mov or movsl (bad) lahf sbb mov jne add mov in mov sbb aam push push outsb adc fdivrs sub sbb test pop mov add incb pop cmp clc out push sub das xchg mov inc mov jmp push sbb inc mov push fwait cmp into and jl inc nop or push add dec fsubrs nop or add enter (bad) cmpsb cmp inc dec xchg and lock xor repz mov cld cmp adc pop jbe les sbb xchg insl sbb ret in repz (bad) adc add or add cli enter pusha mov lds ljmp mov push dec jo imul add (bad) (bad) mov or pop out adc xor outsb push out loop roll xor jnp add xor cltd xchg push dec loopne mov and pusha xchg and icebp xchg push jns or pop ret mov add dec sub (bad) or mov lods xor cmp jmp in lds fmull in add int3 les enter or ffree addl cmp adc out xchg xor js push push sbb and jmp fbld test addr16 sub dec or inc push es ss mov sbbl std add push or add jl add sbb lahf cli sbb psubusb sub scas jg and or push sub jbe adc mov sbb out and and cmpsb lea dec in mov lods inc rorl sahf push std add xchg dec loope lcall mov or adc cmpsl sub outsl mov ret adc jne xlat dec jae lcall xor xchg mov and out out inc arpl fs sahf icebp imul stc in mov jg ret xor and xchg fsubrl and add (bad) or movsb and addl dec mov or inc ljmp pop xchg mov jo scas out dec ja arpl push in fidivl inc mov addr16 adc test mov in inc out jg and push and add mov loope mov bound xlat (bad) imul xor orb cmp dec dec sbb sti cltd sbb dec jmp out dec (bad) fidivrl mov inc adc jb dec imul jno add pop movsl pop daa or sbb stos mov enter xchg ja jno sub xchg repz rorl mov test fimul nop push xchg push add fwait sub dec pop add jno scas cwtl addr16 aaa in pusha arpl scas add loope sub cmc dec add cmp and sbb rclb push mov leave repz push pop xchg jb das inc mov inc cwtl jle test and pop mov pop push sub and and (bad) test test jnp popa (bad) sbb or loope cwtl jbe mov cmp scas sub ss mov (bad) sbb test dec add push aam mov ret sub mov xchg xor xor arpl repz bound inc jbe int mov xlat into movsl xchg aas jns outsl les push fbld jb pop adc cld je sar cmpsb stc mov push mov push and xchg fild cltd std pop nop jno dec xorb dec stos incb push and add dec cmpb mov fild pushf sub xor xor push mov push test jge xchg xchg add add cmp or sbb dec mov rolb dec aam add pop dec outsb cld lret cmp push inc dec dec pop notb andl fwait push xorl cmp les outsl jecxz xor pop dec les testl mov or xchg cmp sbb loop and (bad) (bad) xchg lret or jo inc mov sbb push std sbb xchg or (bad) flds pusha sub xchg psraw xchg and lret pop push aas inc sub (bad) pusha mov mov addr16 inc adc jbe inc cmp dec fsts mov add xchg or mov sub insl mov andl jno push mov sub mov add add popl cli mov je aam mov popf popa ja or into jne or clc and or test repz mov pusha mov bound xchg data16 xchg mov ds outsb mov sbb divl std mov xor notl push adc lret test jle push iret mov adc stos ret inc add xor loopne add aad xchg insb xchg adc jno movsl pushf inc jbe adc inc push sbb ja or jne dec sbb xchg stos pusha adc mov xchg or arpl lea or xor inc outsb imulb das stos sbb movsb repnz xor xor orb xor (bad) and fs mov dec dec lods (bad) jae add fwait enter loop pop int fcomip subl mov pop ror and fs dec icebp add mov push rorl and and into sbb adc xchg (bad) rcrb xor add jno and xchg push pusha out and pusha adc xchg inc xchg adc cmpsb push pop adc add inc loop push test mov jae enter pushf clc push int3 cwtl fcmovnbe or daa mov out push stos mov push sbb xor lret fwait cmp pop pop in xor pop add xor xchg mov xor add cmp pop and dec mov mov xchg and sahf inc (bad) aam (bad) ljmp xchg and add mov add out jo mov test push jp test sub pop or or xchg jne jge js push sub pop push push pop jnp jge pop lahf add stc pop or cmp dec and add pop jl xor es and jmp les ret xchg cmp xor cli add ficomp dec ficompl jne sti rcl mov ss mov and inc les jge das inc xor add hlt jbe add xchg xorb test lods xor test jp pop call xchg add inc in mov dec ficompl adc push xorl push test outsl cmovge mov mov mov es leave stos cmp fwait mov cmp lret dec and adc mov mov ljmp xchg ss pop sub (bad) (bad) fstpl cli arpl or push cmpb repz out mov in add fidiv cwtl pop movsb add lea or pop pop mov loopne sbb xchg lret andl add rclb fadd and gs add enter cltd mov push or sbb add xor into aam js sbb dec or jae pop adc cwtl xchg xchg repz dec mov lds dec push test pop test xchg and mov lods js imull int3 ret push outsb mov jns sahf and xchg bound cs ja (bad) xor clc pop push je dec cld cld rorl pop xchg sub mov cmp shlb and aad pop add jae adc mov iret sbb (bad) jne and push adc push add push push pusha popa pop rorl mov jmp add in dec idivb push or or cmpsl cli (bad) imul cmp leave push popa cmp (bad) xor jle add mov or add mov jge mov cli repz (bad) mov push arpl cmp ficompl das ret or push (bad) xor lcall xchg add (bad) dec push add aas or push dec cmp mov push out jecxz sbb mov idivl push mov or sbb decl pop (bad) inc sbb and dec sub mov jnp fmuls xchg cmc cwtl test (bad) pop hlt mov sub push or push popf pop aaa mov aad pop pop push fstl outsl sub inc fldt sarb sbb fisttpll lret (bad) lahf test rolb aam insl push pop xchg adc adc dec xchg xchg push pop mov add inc mov inc inc in das dec add iret fs imul ds and pop or jmp (bad) jg add not out ss or repnz mov dec ds cmp cltd push mov insb xchg sti or sbb push psrld lret add jl xor or ds hlt fnstsw jno push (bad) out int outsl push mov daa cs xor xor leave or sub or push fsubrl adc xchg inc into rcl lea xchg dec sub das pop inc js sbb cmp aaa pop xchg mov popf xor mov psubsw dec sbb out xor dec push test inc add pop movb xchg dec jp mov cli repz popa mov sub xor dec push mov das imul jg clc lods inc push or lret test int3 sub incl push mov sub icebp cmp jl xchg movl mov pop sub add lret push (bad) dec int mov push jnp std dec mov inc xchg in lods loopne dec aas jl jo ret icebp pop inc divl insb pop lahf adc jmp std in jne add out push enter adc push xchg push or movsl andnps adc cmp push jmp lcall and ja jg nop ficompl inc mov push call les cld cmp adc add sbb lahf push imul xchg dec cmp push shll fisub inc (bad) iret aad mov data16 cmpb inc xor pop xor loop clc stc roll dec pop subl fist shrl adc pop xchg jne and cmp movsb addb cmpl cmp sbb out imul (bad) divb cld inc (bad) aas or add pop pushf mov pop add xor pop shr out pusha or inc mov jo test fscale cs outsb (bad) mov or cmp fistpll add aam loopne dec repnz js out or pop adc jmp orl push jl xchg ret xchg loope mov adc sub and mov outsl mov jge or sti and mov sub jg in lods xor cmp mov pop ja or mov data16 lods add xchg test gs pop es sti pop xor fwait xor sbb mov out mov loopne jo testb xchg mov icebp scas push push mov adc dec cmp xor pop xor cmc (bad) xor and loope push push or call mov jbe mov movsb dec add pop cmp fist pop add and imul dec dec xor insl imul out jno in pop and inc push hlt loope fisttpl test jmp dec cmp dec test sbb add jb pop pusha leave in lea pop sub test push sbb leave push cwtl dec pop push in addr16 inc jp sahf mov push sar in cld xor mov mov shlb xchg fs fild jg lret not or aas hlt sbb ret (bad) xor adc aaa sub xchg call add adc push pop add mov gs pushf sub (bad) lret les call pop aaa mov add (bad) mov add or jg js sbb lret jge push add sarb lods jae jecxz sub scas push cmpb add pop dec mov dec xor cmp jmp xor pop invd (bad) mov (bad) mov outsl add pop jl (bad) in xor jne (bad) pop movsl push rorl clc and push push stos fs mull popf jb jno xchg add imul xor cmp push pop test cmp clc inc pushf jmp dec movsl adc leavew pop xor xchg adc sub push lds add or adc (bad) mov add dec loopne add enter adc jb pop movb adc xchg pop push dec mov mov inc daa in xor popa jne sbbl sbb mov or adc test mov mov shlb cli push adc jnp leave dec pushf dec loop aad repz iret out jb and push fimul test add icebp nop push pop cmpsb dec pop cmp movswl xchg nop jecxz mov fsubr xchg mov push and push (bad) (bad) ja enter xorl mov inc cmp pop adc das add add push pop in mov pop pop fstl add repnz dec and add pop (bad) inc out jne orl les out xchg movsl shr cmp int3 mov or (bad) xchg cmp les inc pop dec pushf out insl nop mov sbb daa fscale dec (bad) std cwtl pop and jle mov and xchg jne in add xor add scas fcompl ss push sti in jnp adc (bad) cld jae cmpsb sub dec dec sub sbb dec fstpl or pop roll mov sbb mov inc sbb inc jge mov flds out (bad) fldl lods fwait je imul inc lea jmp adc iret stos popl add jmp and sbb frstor push inc sub or (bad) in adc (bad) out add xor das jb add pop dec xor mov addr16 arpl push cs mov jg cmpsb mov ja jecxz push cmp add rolb dec int mov js xchg enter sub push dec fldl into add xor mov pop (bad) sub cwtl popa jle fnstenv cmp dec add addr16 add mov mov mov shr or fldl inc sbb pop sub (bad) leave xchg loop pop dec insl in xor ds push mov mov xchg jns add mov add enter cwtl scas dec fdivrs or dec popf bound xlat and push es push lock inc out jns xchg cmp push jl pusha pushf icebp movsb ja lahf inc push xor hlt movsb pop cmpb mov repz cmp stos xor lret in adc in xlat or jae rcll add sarl xchg (bad) dec mov dec pop push pop loopne hlt push repnz cmc lret fcmovbe cmp and jae popf in popa jmp push push or add scas push jo cmp daa pop or mov adc push or jle or addr16 add adc repnz xlat nop iret lods stos lcall decb sbb daa xor dec mov or add adc or in push sub xor pop pop es test jno out push inc add mov test ret push pushf (bad) and in lods jno dec ds (bad) in sub push jg xchg adc outsl xor push lcall test fcos shlb call sub add jae rorb jbe fs test bound push sti das add movsb xchg jnp nop adc test lds sbb add xlat sbb daa cltd jmp in sub dec jb enter push pop ss int adc jae ret mov pushf dec or popa cmp dec lcall push enter xlat sarl cli jmp outsb adc jno push push push or loop push orl and stc scas icebp ret (bad) push pop push and mov push cwtl aad xlat add jae jmp mov dec adc aad shll add (bad) stos sti inc xchg add add not sub and repz mov add imul sbbl sarb bound cmp dec dec sub cli adc movsl sub loop call or push mov shrb mov or rol push sti add pop loop add or mov or add dec (bad) jne jmp ja mov (bad) dec dec loop (bad) insl pop xchg lret sub (bad) mov enter icebp rorl xor lahf sub outsl loope in push mov push js dec and or jmp mov sbb adc pop cltd setg xchg test mov mov cmp push and shrl aad mov cmp nop pop mov and sbb movzbl jns mov and (bad) pop inc movsl aas aad sbb ds or pop mov push fildl les sbb int cli mov ss pop mov sub adc add add jmp addl inc test jle xor out xor or push js push leave push and mov pop stos pop neg xor or ljmp mov cmp push nop orl outsl push std mov pop rolb add push (bad) xchg xchg sub out push loop add (bad) sbb (bad) mov insb in outsl mov xor inc movsb in add xchg rorl add and add push jg sbb cli pop mov pop push into jmp mov sub add imul sahf or adc sahf ret inc cmp jb xor (bad) sbb or sub adc ficomp push aad (bad) dec pop call mov sbb inc sub mov jge fstpl push or jl js rorl out fild pop int imul jge pop aad movsb dec push in add stc mov xchg int3 xor das and (bad) jl (bad) lret aaa mov dec cwtl jbe xchg mov jle add and and (bad) gs and sub push mov dec push sub jns je shl adc mov (bad) out icebp mov add inc loope add mov aad push inc ret aad cmp test inc imul sti pop xor cmp pop pop jp pop inc es push ret dec inc xchg lret dec loop mov and pop xor repnz aam mov adc jbe cmp xorb xor and je xor test push push adc inc les sbb inc dec sub (bad) testl mov xchg push std dec dec add xor in ret adc pop sahf mov (bad) imul ret add aaa add orl nop lcall inc ret lock pushf in jmp aad adc les fimull pop mov dec mov ljmp inc push jno stos sub pop adc and cmp out aam dec (bad) rorl lcall xchg (bad) lds cmp mov jge sub inc pusha out dec sub sub cs test insb pusha push int lea daa rclb pop test fsqrt imul nop jmp test push stc pushf mov jne cld icebp and or mov dec in fstl test ret or jge push pop push sub cmp push fcoml push jmp adc or or inc jmp outsl ret jae cs imul pop sahf sub fidiv xor add add push mov repnz xchg xchg repz pop sbb adc cwtl push mov sub xor cmp cmp inc push add (bad) lret push andl pop (bad) int3 push push and pop xchg add cmove fcoms push jmp add add mov out sub insb xor cmpsb cmp dec push and push mov xchg inc mov jmp insl adc push int or scas clc dec loopne jnp fidiv jbe jl dec inc leave and outsb pop sub loop sbb ret push jns xchg cli inc lahf inc add es mov add push jbe and or adc into sub or push adc insl push adc mov stos lods icebp mov pop js pop jmp addr16 movsl mov pop cmp dec loop pop push in lret adc lahf jecxz shrb cld (bad) rolb or cwtl push xchg mov outsl int3 pusha or movsb insl mov cmp inc cmpb imul jbe inc je mov enter dec lret xor mov scas xchg inc or repz sbb jno add xor inc mov fcoml dec mov and std push (bad) std incb and push daa js mov leave sub sub leave stc or cmp push push fwait jmp popf mov ret cmp inc pop mov rolb negl jge inc loop,pt shll icebp add xchg sbb adc xor pop pop imul and or add sahf ja out sub jnp ror push jb and fadds jae cmp rolb scas jmp mov sbb sub gs mov sub outsl enter xchg adc sbb pop or or mov jnp xor or inc sub jb shl leave imul add mov aad cvtpi2ps and add inc gs cli (bad) add stos fcmovbe xchg add mov pcmpgtw rcll sti cmc and test insl test stos sub pop movl xchg fsubs adc jl mov sub fwait push fisubrl flds fsubl push xchg push test add jecxz fild inc and negl fsubrp dec (bad) clc dec add push cmpps insl pusha push adc push push sbb rcll mov fiaddl add std lods pop cltd inc xchg hlt sbb sub loopne imul inc jne xchg (bad) push adc inc fild xchg sbb adcb (bad) cmpsl arpl into push cmpl cmp nop sub sub xchg ds and jge or push mov and in popl rclb mov mov jge and jo lahf mov pusha push mov sbb int enter loope push sbb nop sub jle je clc das add out fldl xchg inc xchg add sbb or push add mov add ret insb push pop pop subb stc repnz fbld enter push lods popa push pop xor mov and mov insl lahf push sbb insb jmp cmp adc in push sbb adc lcall add pop push inc insl dec cmp add jl aam test (bad) mov sbb loopne out pop push cwtl aas push out adc push cmpsb ja (bad) mov hlt sub xor enter jge pop adc lcall mov cmp test or adc add addr16 jecxz add test data16 sarb sub push jae adc push inc repnz js push or cltd adc push js cld lcall xlat arpl push iret add (bad) xor add xchg sbb xchg scas cmp negb pop inc adc or pop fildll pop push imul sbb and xchg fs add xchg movl iret sbb jecxz cwtl push je mov add shrl pop xchg xor and addr16 pushf push dec push subb adc inc call cmpsb leave mov inc jo push push mov fstps test sbb loope xor mov sub jge push xor shll sbb subb add aad sti mov adc gs add mov push mov cmp outsb sbb jno adc ret pop pusha ds ja repnz inc cmp dec mov test icebp xorb and push inc fdivrs loope jae fistp js nop mov aad cmp push push push adc or popf int3 add cltd inc adc push js fs mov add jae pmullw ja xor clc int3 adc insl jg outsb scas pop (bad) mov test adc fldl clc adc fs sbb (bad) sbb in rorl add in nop nop adc jmp cwtl jle jl (bad) pusha mov inc and fs add cmp push fsts js push push or pushf ret cmp pop and push (bad) lcall insb into push add imul adc and and (bad) push movsl jecxz jg cmp dec lret pop xchg add or push cli dec movsb bound and repz mov in ja and enter mov lahf cmp popa test enter popa adc xchg pop (bad) aam call adc loope bound pop pop js sbb into test or add mov test or movsb push call sub clc gs shll push roll lcall data16 xchg cmc jbe dec add mov push xor int3 cld dec fisubr data16 rcl pushf dec cmp adc jo pop aad sub ss push je (bad) fs sarb adc aas sub xor xchg call xchg lods xchg js insb adc add lods ds cmpl mov adc rcrl sub xchg sbb add sbb fst sbb fistl jg sub cmp dec and cwtl mov and or rclb mov xchg cmpl cwtl sbb ja xchg dec cmpb lods xchg jnp xor fdivrs testb xlat inc adc or popa test leave jmp sbb mov cmp sub in or cli and inc insb ljmp cld mov aad daa or xchg lock add test add xchg out loopne pop stos imul pop jge push xchg cs (bad) hlt jo mov or call and cmp cmp add jns pop (bad) cmp mov cmp sub push popa jbe mov sub test jno int inc push dec ljmp jne enter (bad) pop add sbb verr dec lea lock mov sub mov sub jo ret sub movsl pop inc cmp pop jb mov and pusha in mov jecxz nop ja or or mov test ljmp std add inc cmpsl mov shrb decb fidivr add dec add in mov (bad) mov sbb xor cmpsb add adc stc add mov (bad) sbb insb pop movsb cmp adc xor incl arpl xchg push sbb cld and sbb (bad) test fsubs add push jb daa push cmpb push fwait inc mov bnd xor popw lcall cs es xchg push js push sbb mov (bad) mov stos int3 xchg mov repnz dec dec daa jo xor adc shlb push arpl shll out lock jg adc adc jge ret xlat (bad) push mov test and scas add add add jns sahf xchg inc xchg mov scas or orl push fs mov orl movsb or es movsl sbb cmp cmp or sbb subb push inc cmpsl mov imul dec stos inc and pop fwait test jno mov or js pop xchg xor mov mov mov push xchg fidiv cwtl aad clc fcmovb cmpsb inc push pop cltd test and aaa andl pop xor imul push add dec mov js cs pushf imul cmp pop add int3 pop sub mov adc add jns stos cwtl jne jmp imul inc nop mov loope in mov pop decl dec sub sub and add (bad) fs rcrb jno cmp or add sahf cmp ja fcoms hlt loopne pop mov (bad) lods cld aas add jge,pn push cwtl movsb xchg add mov pusha and nop shlb mov mov dec dec jl and sub loopne aaa inc lcall mov xlat ds insl clc lcall cmp dec push xor jmp add leave pop and or insb jge mov pusha mov enter sub inc or mov sbb dec pop rolb insl xchg cmp icebp add jo lock pop cmovbe (bad) xor pop lods add mov cmpb es jo push xchg inc dec iret sub nop push sbb dec mov push or fldl xor cmp cwtl test fldt sbb add add cld lods movsl adc xorl or inc enter mov inc in lahf fldl inc pop sbb mov adc jns or lock aaa dec fildll testl cmp pop lods adc and dec pop lret nop adc xchg add fisttpll clc lahf test rcl movsb imul push inc push and adc jnp or cmp shlb loopne addb insl or mov inc fdivrl cwtl inc and sti cmp pusha enter sub enter test rcl add andb movsb push jno insl add mov ljmp jge inc mov adc lcall sar add cmp add fist subb icebp pop xchg repnz lock xchg fcompl incl lcall js cmp jo mov jae fsts jl in lcall insl inc inc lahf les push pop mov mov push fs mov inc mov (bad) dec push les repz orb negb mov test fistpll and enter mov or add test sub adc rcll cmp insl js mov dec frstor arpl sbb call and add jne xchg pop push cwtl xor pop add mov sub pusha in xchg mov rorb sbb cld test push rorb int3 movsb (bad) or cltd clc (bad) pusha test roll push jmp ret fs sub gs cmp sbb sub rcll cmp mov data16 ja je insl mov lock sub jp push jp pop into jns pop mov lods jg test cmp jb gs lahf or (bad) js test mov (bad) into pop js js jmp or js js add cltd xchg mov (bad) jle pop mov (bad) mov mov push push or fnstcw mov aad pop imul pop jle xchg add lcall ret jo and add mov int and clc inc mov dec (bad) aam mov lock inc lods add rcll loope dec test adc pop mov adc ja sub xor jle fnstcw add jns orb out and mov sbb or xor sbb je xchg mov (bad) mov mov shll psrlq mov je shrb test jo dec or les nop sub movsb xchg aam and rorb into adc mov add and inc add add or rorl (bad) push inc xor sub nop xchg lret popl sarb insb jnp mov data16 and (bad) or int3 or sbb mov pop repnz xchg add arpl adc xlat rolb roll push push in dec and or pop xchg sub fstl inc lcall nop adc lods pop sbb insb fs imul leave lahf fdivr inc lods mov mov lock shrl mov jle mov test outsl cltd push incb movsl push lods fs and cmp cld inc lea dec mov mov fild add push add adc inc inc cmpb into cmp xchg cmpsb xchg adc adcl cwtl out dec push (bad) icebp fwait sbb popa and and sbb or push cmpsb (bad) popf (bad) int3 cmpsl mov adc cs jl jecxz sbb ds and and ret inc sub jns and inc sub cwtl push or sbb and mov sub inc test rorb out insb adc or and clc push cmpb jo cltd loop stc loopne hlt cmp mov aas push cmp xchg cltd pop cmp test repz xchg adc dec push hlt or not rolb call loopne inc rolb es and xor subl mov in aad fxch pusha add into add jl lock (bad) in pop push cmp je orl cmp cmpsl lret push lock mov xchg cmp scas decl xor movsb jmp cmp lods data16 xor icebp data16 mov cmpsl nop pop push mov imul stc mov imul mov dec imul addr16 cmp pop jae subl or jo add movsb xor lcall movsb mov repnz cwtl push mov les pop roll pop movb and imul xor jg add or out mov adc fld call outsb daa mov sbb cmp push xchg xchg mov pop and xchg out scas lcall adc cmp sbb and xchg jp xorl cmc lret and (bad) cmp orb xor dec jo and dec cwtl add in or nop adc mov adc add clc mov test cmp sbb cmp int test add inc lea icebp ljmp lock lock fs sub mov mov cmpsl mov push shl add pop mov and xchg adc repnz movsb xor push out scas add or (bad) pop dec fwait aaa push lock mov sub sub mov dec cwtl cmp clc add sub je cmp add or inc aad int3 dec (bad) push or push insb mov faddl push icebp xchg enter add pop cmpsb xor das dec and jp push test js pushf or lea add in xor push mov jmp adc mov ja mov push and add xchg scas jno cmp sub pop cltd pop es call ljmp rcrb adc pop sarb dec out fnop sbb ljmp loopne xlat add adc xchg sbb (bad) jbe jmp or (bad) shlb add addl add cmp dec adc mov inc push pop dec xlat cmp adc jecxz inc bnd cld push and pop or add daa pop fild push outsb push out push inc jge or inc pop xchg add lods loopne cmp cwtl sbb insb push add sbb add lods adc push or jl push loopne add call enter sub mov push push fbstp jg push ds seto hlt enter imul inc inc push aas or clc pop sbb jo push dec or subl cwtl mov fiadd mov xor out mov add lods push loop arpl mov icebp insl push lock cmp add add cmpsl pop fs popa or test insb mov lock jecxz movl adc clc sbb je jae dec adc inc icebp mov mov push orb clc and add movsl insb ret pusha nop stos fistpll jl ljmp cmp cmp mov jo push or cmp fstps rclb add xor push dec add or add in or push stos in inc pusha cs pop inc leave fldlg2 inc pop push mov int3 adc bound shll jo jp cmp cmp loopne js push and outsb mov jae cmp sub dec and (bad) push cmpsb les stos into xchg cmp clc std ds add roll inc lods ficom addr16 adc shrb inc and mov add mov mov frstor dec mov cltd in xor inc adc sub lock adc fnstenv pop cmp add lock sarl ljmp stos clc jecxz or outsl jp js popf sbb add sbb arpl adc pusha out xchg movsb (bad) pop nop dec movaps inc or pop dec jns add mov mov (bad) sbb cld and mov adc cmp mov fs rorb or pushf xor repnz or inc insb rolb cltd jns pop daa cwtl cmp ret enter cwtl push sahf adc nop addb loop mov lret cmpl fs dec mov test je cltd dec or ror push xlat hlt sub adc pop or and test cmp fldcw sahf sbb sub movsb mov sub cmp dec sub mov stc int cs cld add rorl pop push mov mov (bad) dec add pop fld or xor sbb int scas mov push and jno xchg pop pop cltd leave or fnstenv mov pushf xchg push mov adc sub ret mov (bad) or je mov push and push push push loopne je mov push mov pop arpl push ljmp cmp jbe sbb mov add pop pop jge xlat cmp faddl lock xchg test jp xor cwtl lret loope and push adc sahf mov and sub pop mov test rcll add stc call and lds addl cmpsl inc shl out cs dec rclb add clc mov shlb xor aam jl iret and add ljmp add cmp mov inc aad xor dec adc dec mov or (bad) (bad) xor cmpsb xchg ror mov push push (bad) jns notl clc ss or cmp (bad) pop scas pushf pop mov pop pusha out xchg add fdivrs push je xlat rcl adc nop add mov jb add sbb (bad) aas sbb imul loopne bound clc loop push mov lods or sbb fs mov in (bad) lods add into nop pusha fwait xchg psllw sub adc cmp pop mov push jne dec push jne add or or test inc in repnz push ret cmp adc xor inc pusha sub popf jle sub daa clc jge sub push outsb xor decl add pusha hlt add xchg dec cmp adc testl fisttp leave pushf xor mov xor int3 mov sub xchg nop lcall lods inc mov sub and add push insb (bad) xor sub jno (bad) int3 test pusha push push inc add pop add mov cltd pushf inc add dec mov jl mul jl inc addr16 push repnz push pop fidivr pop sar mov arpl xchg adc movsl inc sbb sub lret mov or xorb leave or xchg xchg in fldcw jmp (bad) adc cmp add out lock xchg daa xchg shrb xchg je fcoms pop pop push mov adc popa rcll sub nop xor test es enter cwtl xchg or cmp insb adc test outsl push pusha lahf fadds pop sub or clc inc rclb or sbb mov fcmovb ja mov sub mov call xchg xchg aam xor cmp pop pop and pusha out inc addl sub adc dec insl mov mov jmp adc (bad) add add sub add aad add push mov adc xor xchg xchg mov cmpsl lret pop jae push (bad) xchg hlt and sub push sbb pusha insb movsl clc xchg dec adc add dec pop fcomps es rcrb shll mov aam cmp cmp stos ja (bad) lock (bad) cltd inc push popa in dec adc push loope xor notb push mov in repz mov lret addr16 insb cmp or aad jp daa sbb sbb fadd aad add push jb out test inc mov or push pop ljmp fsubs lock movsl cs nop cwtl add f2xm1 fsubs adc mov sbb nop push sbb cmc push aam dec xchg adc add lock xchg mov dec adc push inc or mov xchg and push add sar inc or cltd inc adc push popa pushf and dec sub or cmp cmpb and rcll cs aas jl ret or clc (bad) mov cwtl mov cs push dec shrb pop cmpsl xchg add and inc jl lfs repnz adc scas shl arpl punpckldq jecxz jbe pushf fcmovnbe pop test (bad) mov add fidiv push mov add in xchg rolb das addr16 push jbe lret push outsb xor xor pop cltd push popf test (bad) jb out popa cmp fsubrl sbb rcll cmp sbb jo inc add adc or jmp inc es loopne pushf pop pop daa fwait mov je jmp sbb xchg lcall pop pop jle mov cmp jns mov and jo jo mov mov add (bad) maxps fidiv or push imul add repnz pop lahf in sbb loop cmp sbb stos negb push test outsb xchg mov bound cmp dec and roll pop or adc out mov mov in push jp loopne ljmp add mov rorl repz add adc mov fiadd daa inc dec add sub out mov ret push (bad) inc xor test mov insb mov add push lahf lcall inc pushf fsubrl testb mov (bad) cmpsl jp (bad) push push xchg push int3 (bad) repz ret add inc sbb aas push xor mov les adc aas ljmp inc sub add sbb cwtl mov lret arpl inc inc adc test sbbb adc test in dec arpl adc cmp sub cwtl lret pusha mov pop hlt loopne mov rcrb cmpb mov adc pop clc mov sbb add lret mov ror and add add sti pop jp stc addb addr16 fimull and ljmp rolb and sbb scas add arpl ljmp sub gs mov or bound sbb test lea shr mov mov sbb xchg lea sarb repnz ror mov push cmp push clc movsb imul jg xor shll push cli rorb js pusha dec fcomi dec std cwtl fs jle mov faddl mov stos jg sbbb fild pusha data16 sbb ds add mov fadd jo out imul negb push xchg repnz lock mov popf stc je jbe add ljmp sub int3 dec adc jmp sub xor add lret fnop pushl jb mov push ss or arpl ljmp jne test icebp add (bad) notb mov test inc ds xchg gs inc adc adc fsubs or xchg adc cmp dec loope in imul inc jnp or xorb lods jmp adc cmp outsl add mov in loope xlat jb (bad) cwtl and mov mov rorb dec icebp adcb cli jg add fcompl pop xor (bad) insl xor (bad) cmc mov hlt mov and imul sbb mov inc push cmp mov add (bad) clc jne orl and jmp daa test and sub outsl stc pusha jge cmp cs dec stos jp pop xlat pop add xchg fs dec mov push cli and sbb adc lea (bad) push dec ljmp add sub add inc cmp mov loop mov or mov xchg jno scas stos xchg lock (bad) mov loopne,pn push inc adc add mov inc fs ja outsb pop mov movsb sub lcall pushf test add cmp sub fbld inc jne in cmp aas in or ds (bad) mov maskmovq notl sbb je or in push pusha mov or mov lahf or xchg mov fimull in sbb push in add mov add push mov mov mov in adc (bad) jae insb bound data16 fisubrl shlb dec xchg jle mov scas cld or or cmp lahf fistp pop addr16 mov pop call (bad) and clc aaa xchg xrelease sub lret test sub insb push or mov adc test mov in xlat outsl jl mov shll (bad) mov cwtl cmp aad faddl adcl inc sbb popa adc leave sbb inc icebp int3 jne lahf sbb insb rolb pushf test sbb adc or roll inc (bad) lock popw ficoml outsl and mov xchg nop fcomps mov mov adc or (bad) es pusha insb insl jns fistl lds dec incb popa stos pusha clc pop or pusha in push pushf sbb fs rcrb jmp xor inc pop mov push sarb push push and inc add sbb lret pop jns loop loopne cli mov cs mov inc push orl (bad) mov and lret add sbb xor dec les jb sbb and push out sbb movl sbb pop inc jns add sbb outsb gs cmp and add and das enter add push aam inc cwtl push pusha rorb pop sub ret in dec mov hlt (bad) sbbb mov adc cmpsb jmp xchg cmpsl adc fcoms pop scas push push lock int3 mov fnstsw cli cmp fcoms fdivl (bad) dec push adc mov clc sbb mov pusha push xor movsb shl stos mov or loopne enter rcrb mov or mov pushf je (bad) ss js mov enter inc data16 xor mov mov int3 xor jmp pushf inc mov clc lods xor dec dec loop push shrl test icebp pop jecxz test repz bound add fsubrl push scas push js das sub rol mov push enter mov bswap sub dec test pop pop xchg outsb mov lods js gs push add jp pop sub stos fdivs or push data16 sbb idivl inc dec incl es pop pop xlat movsb mov add popl jge add fistpll negl and adc pop addb lods pop in and mov jp add aaa scas and das sbb hlt or cmp jns add in inc cmp and aas loop jbe movsb add push xchg mov add mov jecxz add imul daa push pusha push sarb add mov mov or adc cmp and rclb adc scas push mov xor dec xor lret insb add jns jb mov inc sti push lcall pop (bad) loopne mull stos into inc mov movsb popf sub rorl lret faddl cltd jg mov mov jns cmp inc mov loop mov or dec lock inc addr16 add xchg or push add fwait xor mov jo repz mov inc outsb mov (bad) lret cmp stc std lcall bswap mov stc inc lods test shlb sbb push and mov loopne ds popf xchg mov sarl add xchg ljmp cmpb scas inc lock aas aam or in sub and adc add or jle movsb add push mov xchg nop sub lret pop loopne push lahf jno iret inc or lcall out cmp push fcmovu or popa and sbb dec inc icebp pop es add xchg cmp add sub dec lcall inc or int3 add adc or test cmp sub add mov arpl jns xor push negb sti mov ret out (bad) mov andl cmp add mov sub test jmp lds mov push xlat xor cmp out and out popa add call mov pushf sbb test mov loope xchg sub inc sbb lcall rcr sbb pop lock mov (bad) lods and orb cmp pop mov enter add push lcall sbb dec mov add test push jmp rolb lret test call lahf jno ret cmp fidivl pop fmuls mov leave add scas rolb (bad) lock or (bad) cmp cwtl sbb jb cmp and insb (bad) xor cli pusha or dec add pop xchg sub xchg cwtl push scas aaa sub loope add rcrl les cmp and mov adc (bad) and jno jo xchg mov mov mov loopne xchg pop mov adc out insb sbb (bad) pop lds aas or je xchg nop adc and (bad) dec push pop cmp mov add jo mov jl cmpsl clc je sbb mov lret add sarb (bad) cmp pop rorb jnp iret mov inc mov enter popa mov dec mov dec and add outsl push mov mov adc push lods push mov or or xorb xor clc nop push dec loop les fisttp or cmp sub dec push add outsl cmp xor pop dec pushf mov sub or testl and add out xor insb inc pushf sahf pop xor adc enter push mov and movsb mov jno pop push inc push mov mov insl and add add les and rcrb (bad) dec adc xchg test add sbb mov dec mov dec sbb (bad) jl adc mov imul es (bad) xor cwtl fs sbb adc aam mov dec add mov jo push mov jbe bound repnz dec in add (bad) cwtl lock cmp add mov in jno out int3 dec andb sub cwtl hlt jp clc test add sub push movsl mov dec xchg cmp cmp pusha adc and xchg lods add or movsl mov or scas inc push dec stos jl and loope mov pusha add add clc (bad) cmp sysret mov pop fisttpl cmp add in sahf insb jl xor mov hlt fnstenv pushf loopne inc jmp mov pop ljmp int sub in inc fmul add jno push push icebp mov cmpb int incl pusha inc lock mov call xchg loopne xor jno movsb mov subl mov mov rcr ljmp inc adc pop pop sub pushf pusha xor and (bad) in dec lret xor daa aad dec inc int3 or stc sub pop cs xlat ja fcompl cmpsl dec int3 mov sahf gs mov lret mov test push std or sarb mov clc aam lock hlt add sbb shlb stc and sbb movsl (bad) rolb ss mov insb test dec sbbb int mov (bad) lcall loope add mov push inc call and clc int popf bound push dec imul test ret or or pop dec frstor test xchg jns jo and clc xor dec adcb (bad) push loope jo push adc and cld pusha nop push addr16 pop in adc pusha mov rorb lods jl aas scas lea inc mov sub xor out aaa and scas add out mov sbb xlat (bad) call stos adc mov dec or or (bad) test add insl inc es pop push in loopne jno rclb jl mov in add jne sti jecxz cmp add sbb sbb roll dec mov sarb sub cmp and inc hlt and ret cmpsl scas inc data16 stc sub jo je jnp call lock fisttpl shrb xor icebp xor dec jno in ljmp push and adc pop notb or mov ds mov push push xchg jmp pop ror imul cmc jns loopne jo cmp in dec pop fisttpl pushf or js addl or and xor std imul fild and adcb adc or call inc adc (bad) dec cmpb or mov loope push cwtl roll jmp sbb movsb adcb inc push cmpb push leave add in mov add dec pusha pop fdivr outsl mov mov or (bad) into inc xchg ja les fdiv adc ret add or dec imul adc push xor sarb sar int3 cmpsb mov dec js and sub xadd add out cmp jle adc pop ja xlat enter mov adc push arpl pop and pop int3 add lcall (bad) popf push xor mov out test testl psubsb subl add test int les bsr js inc (bad) push mov push into xchg mov int pusha add sbb push adc add jl loope inc or sbb scas hlt in cltd ds push or pop fxch add out popa int3 mov (bad) insb imul mov jge sbb xor lldt xchg push mov xor adc mov (bad) repnz in cs in mull in xorb mov cwtl loope sbb mov or and sahf cmpsb inc js jp mov mov add fs push pop insb mov sub lock aas or xchg mov cmpsl or inc in je adc scas idivb push mov mov mov sbb imul loopne add mov mov repnz in sub add inc dec sahf and ljmp in mov mov inc nop fs pop mov popf loope add sbb fsubrp push sar add int3 addl test mov add xchg sahf jb lea arpl imul lret add lahf test out je mov movsl inc or je pop sub cwtl addr16 add add jb out loope lock inc mov mov outsl push xrelease test push mov int xchg jno mov test jae mov call data16 add mov mov xor add adcb lcall dec jl das inc mov cmp in cmpb aam std sbb mov and data16 add (bad) aad xor jbe add cmpsb in cli addr16 or add dec out sub jo daa cwtl xorl push (bad) ds (bad) je mov cmpsb lock mov and xor pusha icebp fldt xor rorb leave (bad) xor push aaa mov divb inc push mov js mov ss sub xor aaa lcall mov ljmp mov adc and imulb pop lds orb add aas xchg mov dec push nop sbb (bad) and imul adcl pop aam lea pop mov push addb push jl push add pop dec push (bad) mov dec dec lea jge jnp mov sysret dec orl push pop imul add arpl push pusha or out add sbb add jge mov sbb inc (bad) je mov xchg dec xorb dec jnp add xor and jne add dec ja sbb push sbb jle out pop push add cwtl and sbb mov adcb cmpsb add xor sub jecxz and mov push jnp fldl imul sub test ret mov cmc je sbb inc sub add loopne test push cmpsb sbb xor test push std mov cmc dec push pusha cli adcb loopne jns pop mov push repnz mov clc adc imul or lock clc push mov mov sub lcall xor dec test pop push shl ret xor testl in test jbe test cltd mov pop sub add sub jg popa xor in xor sub mov sub xchg add mov in movsb mov ret jns push cmpsb lcall mov mov xor sbb and push fucom test sbb cmp inc pop mov sbb push dec insl movsl inc pop fidivrl insb movsb orb je mov pushf push sbb out out sbb inc dec out adc xor xchg xor dec cs out mov inc add pop test subb mov loopne or jo jnp les inc sub mov movb mov js ret and push sub mov inc test movsl enter pop sub push and mov lods enter xor dec and ljmp shlb mov push xchg pop sub inc mov js dec dec clc fistp out cmp test or or mov inc mov insb dec cmp std cli movsb pop rol in adc imull inc mov sbb push mov or lods mov sbb push dec or add push mulb out int nop pop sbb test (bad) addb ljmp out xorl push cmp or sub jmp imul jge vmovmskps pop jg lods and mov push xor movsl jns bound pusha pop sbb xchg push add pop fistl sbb jp cmp imul xor and fnstenv adcl (bad) push std mov adc ret mov lods xchg stos (bad) or sub stos mov ds push aam xor mov pushf sub mov sbb adc sbb lds arpl xchg sub mull adc jl bound sub inc cmpl ret out push enter addl mov sbb push mov push mov lods aam pop es sbb pop fmul mov inc clc dec clc xor cmp mov sub xchg (bad) out sub pop jo in int add mov xchg cmp ja cmpl xor mov pusha decl sbbb aas (bad) jno mov cld call int3 nop fdivl in add in lret push jb and imul jecxz ds push xchg je cmp or mov idivl push leave icebp mov add xlat jle add in scas inc sbb or jno mov mov pop add (bad) mov mov fnop daa jl and out lock xlat and lds push int lea cmp mov sahf sub mov adc cld or lock hlt pushf dec fnstenv notl popf jne push arpl test mov sbb cld fcom popf push dec or xchg add out sbb jns pop xchg icebp je mov push mulb pop and and daa lds cltd (bad) adc dec int3 inc call sbb out dec sbb xchg insb or std insb xor adc loope adc sub push (bad) mov xor insl sbb sub fsub or push sbbl insl pop pop loopne add stos adc popa and push add xchg aam int lock in leave ret jo dec add shrb (bad) nop pusha add pop jae or add shld scas xchg sahf adc jge adc inc lock push sbb jecxz push pop je and je (bad) popf dec hlt push add add rclb loopne mov and or push loope lahf (bad) mov push je push xchg jmp jne jo jle add mov test jmp int3 jge je cmp adc jo push jae addr16 (bad) pop pop aad ljmp jns inc sbb jno int3 mov call xor jle push mov jg adc les outsl rcrb std cltd cmp (bad) aas insb add mov test xchg call sbb or ret adc lock inc fdivs mov add push pop sbb push jle cmp int3 add call adc (bad) and sub mov inc repnz jmp sar xor push dec pushf sub test xchg mov loopne lcall hlt mov and pop mov xor data16 test jo out push inc stos pop (bad) add outsl or xorb add (bad) fidivl sbb push jge div pop xlat call fistpl pushf pop into lods mov iret add int dec adc add inc fldcw push inc clc sub add mov sub sbbl inc and stc shl sub xor jbe xor bnd aad cwtl sub dec sbb inc inc jecxz add cwtl bswap dec pusha fildll add (bad) cmp xor dec pop push call cmp push mov addr16 inc or mov adc lds pop stc dec cmp jns ljmp inc xchg dec pop (bad) negb and jne sahf inc (bad) or or mov jno inc and pop xor mov mov push pusha push xor cmp or addl out cmp mov fldt mov adcl nop nop add dec iret pop adc jnp dec pop dec pop nop push (bad) adc mov sub cmp out add (bad) jo jo pop in mov cmp mov hlt int3 pop jae or mov hlt imul rol pop jecxz cmp mulb out stos popf push fisttpl outsl (bad) sub cmc sub or pop hlt push fdivrs lcall cld add or or ficomp mov stos or jmp shlb aad add nop out fmulp aam test ret jge jns out add pop popf and xor les shrb add mov xchg pop push shrb mov or add jnp fnstcw icebp dec loopne push cltd add jae sbb push std outsb test sub pusha fwait jmp adc repz add jecxz fucomi push stos pop rcll or xor repnz push je dec lret jp loope jecxz out jns mov mov fldl push mov dec xor push push cmc aam inc mov leave pushf dec jo add dec (bad) rcrb jno mov iret jae push imul call jo xor enter in ret arpl xor in (bad) aam xchg mov xor icebp jo (bad) mov fsts dec iret mov fcoml xlat push mov rcrb test jo push xchg faddl (bad) arpl (bad) inc xchg adc imul fs cmp scas cmp and cmpsb andb add cmp sub test (bad) xor xchg mov jae out sbb inc pop stos xrelease sub les mov sub sbb in outsl in mov mov mov mov mov xchg dec adc inc rcrb and mov roll pop test aaa (bad) mov fimul das adc dec pop add scas jmp and mov dec cmp mov rorl jle add and sahf xchg or pop mov lret clc sbb adc (bad) jae mov mov jge jb outsb xor and icebp icebp pop inc or adc jno je arpl push xchg gs sbb aas xchg cwtl or stos jmp iret push add arpl aas outsl pusha inc daa or lods pop jno dec pop incb sbb stc pop pop aaa jne test jo xchg inc add in add (bad) (bad) aam je add lea rorb loope les or mov loopne lahf data16 xor int3 mov xor nop fsubrs movb push lock jg (bad) call adc cmpsl loopne push xorb mulb xchg loopne inc shlb xchg mov mov cmpsb aad xor and cli loopne test fcoms icebp sub mov lods test cmpsb mov mov sub hlt or push int3 decb imul mov add fsubrs hlt test js sub or js add imul dec mov dec sbb jle out push insb mov sbb sbb in mov mov jle imul addr16 inc xorl pop inc iret mov sub pop clc push cmp dec push xor dec pop jge cmpsb sbb inc mov lods adc sub dec pusha movsl fcoms jle sbb sbb addl pop bound mov jge fidivrl dec dec sbb or push addl pop mov (bad) push xchg adc inc add xchg add or add push stos sub add cmpsb push xchg mov cmc push dec test popa (bad) jl dec pusha xor in push add xchg push addl push dec (bad) push cmp push pop inc in xchg lcall push jecxz call lea cs mov xor dec rorb dec jg mov and jg and call je cmovl pop push rcr inc jle rolb push mov pop jnp push loop mov ss (bad) push dec (bad) and or clc pop lock dec andb or and dec and sbb inc dec adc (bad) fmulp push jns push pop cwtl xor cmp arpl dec sbbl push repz jmp sub adc jle mov popa jg sbb add push mov and jle jmp dec push lock add out stc pop and dec push dec mov xor adc mov push cli pop jle push dec (bad) adc sti add xchg les sbb mov or rcrb cmp sub pop push adc inc sbb mov test sub repz pop rolb and out stc clc mov imul pop and pop jge sub cmp pop add jle xor mov and mov jg insl sbb adc lcall mov cmpb repnz cmc dec cmpsl sbb nop enter adc dec dec push test mov rcrb test xchg jb add mov ret cld lock add jl dec push (bad) cmp jle (bad) pushf add sbbl push mov dec ja push mov xor add mov and push inc cli push and dec dec shr jg pop je jnp push inc push pop ljmp (bad) lock push (bad) mov push push mov jno or mov mov ret test pop in or xorl cs pushf add inc (bad) adcl push mov xchg (bad) inc popa popf sbb push inc mov push aas insb mov cs ds lock xor clc adc cmp cmp ja adc orb daa aas push sbb inc data16 je or cmpl cs insb cmp cmp mov xor push ja cmp cmp add cmp xor adc inc sub jge xchg rcrb jnp fucomip or sbb and dec and pop sub data16 inc cmp and and in call ja cmp pop imul inc insb inc cli sbb or adc jb fisubl fmuls dec addb gs inc arpl cmp inc adc icebp into addb (bad) cmp xor rclb or aaa fidivl dec pop in stc push dec or pop or popa sub sub and push jg push inc jb inc hlt sub js sub add and ja rorb xor cmp call cmp add fsubrl add outsl data16 popa jb push pop push imul xchg insl out mov ja sub mov fwait loopne jmp cmp ja push push mov stos add pop jmp out xchg pop ss mov pop add pop jmp push loopne stos add add sub push sub (bad) mov jmp lds aas xchg jecxz stos popf lock push mov dec mov pop dec push mov sbb cmp ds xchg out sbb int3 shlb mov adc je lds clc add dec cmp mov pop mov repnz cmp (bad) aas xchg xor aad jae xor (bad) adc aaa or jne adc xor je push push mov mov test and xor push popf je iret daa mov jmp add add cmp and or mov inc or or jmp pusha (bad) jl (bad) shrb sub push mov push add pop cwtl std sub hlt (bad) inc mov call sbb (bad) sbb sbb push pop cmp out lcall mov adc sub add push sti enter test adc xor js sarb sub jge sub mov jne (bad) jo push push push and sub push pusha ret (bad) jne les daa push sub add ss shrb shll push pop jp es les mov mov xor call nop or sub or push stos inc das and xor jne int3 imul sqrtps shlb incl add xchg adc leave inc jae adc out loop mov jl add jbe mov pusha and and cmp xor xchg stc or add pop lahf jle jp mov inc xadd add and cmp pop sbb adc add test xchg mov adc daa pop adc movl push push das mov add inc pop mov push js imul daa add and sub mov mov xor clc ficompl shl test add cmc inc adc cwtl jns pop (bad) lods inc and (bad) dec push pusha loop or xor out xchg jmp (bad) clc mov mov xor inc cli int3 jbe call imul jb scas aas add pop xor jmp dec repz pop add or sub lock fcoms mov enter les ljmp jne jae pop outsl mov xor xor add add arpl xchg pop and and pop dec in cmp pop xchg mov in std xor pop lahf pop leave out in ds jae call jge outsb cmp mov and pop or sbb jno and adc mov push test jmp mov sbb inc or push add mov xor les arpl jmp cld sbb hlt sub xor sub lock inc test stos xor mov add or xchg mov push ljmp sti push sbb jae popl add sub and sbb es inc popa jmp ds jl movsb loop adc inc sarl lcall mov arpl rcll xor xchg xchg dec pop adc jmp lret or repz out add leave xor push push push pop adc and sub push mov mov cwtl add in test aam sbb pop jg fimull jmp cmp pop adc add mov dec push jbe cmp sub fildll nop mov push stos push outsb jo add or fistp (bad) ret inc sub imul push sub add pusha sbb xor jns ret add inc add jmp int push lock fwait xor stc or inc adc push xor xchg jle pop lahf loope cmp not loopne stc adc cld sti or pop mov jmp ret mov jg repnz or sbb popa mov add xor pop icebp (bad) inc cmp add (bad) pusha inc push push jmp xlat iret fs add mov lods pusha mov and or icebp pop shl callw push and sub mov or loopne (bad) pop mov repnz insb daa adc adc jge mov jmp not add lods rorl adc lds aam mov adc mov in fsubrl and sbb stos adc (bad) push adc ds fdivl lods out add and sub xor push and inc mov pop mov add test cld add cwtl push dec ss xor aas mov movb push jmp test rcll pushf sub test and sub mull daa pop cmp jne xchg push (bad) mov nop dec or loop and imul xor dec cmpsb mov pop popf je gs push jle das push repnz push push addr16 xor in popf incb jmp in mulb xlat dec or add hlt int3 add push testl and mov sbb ljmp pop mov lret xchg dec xor out or inc jmp (bad) sbb leave scas mov in imul rolb cmp sbb inc cmc mov or sub pop outsb jmp out mov mov xchg push lahf add jmp add into mov sahf ljmp mov daa push pop xlat mov mov ljmp pop sub adc mov inc jns xor ljmp add pop ja xchg out pop in sti or sbb pop pusha fidivr cmp cmc pop and cmp dec sub lock or out jne or push repz cli pop lcall test dec inc data16 adc flds push ljmp push and push es jg js push (bad) or mov mov sub rolb adc inc mov aaa int3 push lods or pop movsl ret jl jle sbb adc mov movaps pop lds stc rol repz mov rorb xor (bad) dec sahf jge adc jmp jl mov enter icebp insl push xor xchg lret adc lea in add sub imul popf subl neg (bad) xor push pop jg dec imul lds jmp in xor test jmp dec test mov movsl cmp dec add and cmp adc pop push scas lret out fs push subb int fucompp or fcoms sbb dec inc mov lock dec sbb sub inc or daa fcomip xor (bad) dec cwtl movsb sub pop movsb push daa add xchg dec cwtd movl (bad) push in cmc add cmp mov test out pop cmp cmc mov push pop mov sbb and or sbb popa mov and sbb push jecxz add fildll out inc mov push jae and xor xchg sbb jle (bad) into adc pop jmp lcall lcall xchg inc ret cli leave push clc jp data16 cmp dec dec or cmp xchg mov bound sbb jno inc stos test cwtl ss lods jmp mov fiaddl push or xorb adc cmp clc fisttp push mov ret push imull dec (bad) repz and mov mov cltd or test pop pop pop push movsl test cld pop daa movsb test and adc xor sbb int3 sub adc fsubp imul jmp add in adc or stc mov xchg pop cli (bad) std mov cmp cld inc jmp xor jl push adc push clc icebp dec and push sbb test loope mov xchg (bad) sti ret adc mov and pop add pop push les mov (bad) jmp push mov sbb xchg sbb mov sub push and pop push test mov das mov ja stos lahf nop add mov add push inc (bad) arpl lock imul pop or mulb cmp repnz sub pop notl movsb in cmp stos das dec (bad) adc add push dec add ficom sbb loope cs jnp sbb ficoml or pop add pop pop sub pop pusha pop dec jne mov add pusha push or mov daa fnsave xchg mov (bad) aaa add sub addb inc pop pop xor adc mov cmp xor mov sub pop jmp outsb or add pop hlt pop lock sub lods hlt sbb mov into negl gs mov daa xchg clc mov inc pop push jbe cmp xchg jmp dec scas sub icebp orl and jge or sub shrl cmp mov push pushf dec addr16 fisubrl inc orl pop adc aad stos sub cltd and outsl adc leave sbb sbb dec jmp gs sti add xchg jge decl jmp imul dec inc addr16 pop pushl xchg or inc jmp pop out repnz push xchg jns pop ljmp and sub rorb mov test into or sbb sub mov adc ficoml and mov or outsl mov das adc push in push xlat (bad) jnp adc push lret add jmp in leave cmp mov jnp pop imul je or in sub shr add into pop inc (bad) gs setno jae outsb or fucom push cmp iret push xlat movsl inc mov repz out dec xor push cmc and loopne,pn cmpl jmp mov pop lea xchg das push out cmp jmp pusha inc adc shl and pop sbb push stos pop neg ja jmp mov dec jnp xor repz hlt xchg and sbb lret ret push mov jl add cmp rol mov dec add das lcall add jo or scas cmp mov test pop cmp adc and jmp mov outsl add xor jno aam rclb mov add mov hlt gs inc jmp (bad) push aas out sub push push inc cwtl lret out inc scas mov stc push sub cs xor sub or pop mov mov xchg pop push test fisub sbb xor or mov out mov adc push out daa push mov decb imul adc ret push push pop repnz es jns dec (bad) test inc and imulb sub pop xchg popf push jle jmp shr add rcrb pop jmp inc push push dec pusha repnz cmc dec or aad rcl jo dec std fimul insb leave push bound dec or dec loopne out sub (bad) add jmp sub cs push pop pop mov pop adc mov xor jb aas inc push push incl push or sbb xor and inc fiaddl cmc push push or pop sub lea aas jmp add sbb addr16 jmp ja ja das add mov inc and pop push movsb cmp scas mov jmp test (bad) sbb popf ficomp fucomp popf andl mov (bad) inc shll mov flds mov dec push mov pop xor shr or xor movb push stc mov push add and bound jecxz (bad) jo add rolb jae loopne xchg add push sub xchg pop add insl pushf xor sub push push fildl sbbl mov jge hlt pop push add or mov outsb cmp or shl add sbb and or fnstcw aad cs and jmp pop dec inc test pop ficompl cmp stos sarb movzbl pop xor clc pop cmp xchg xchg ss stos jae add push mov push push fs scas and movsl xor fwait lods sbb xor inc mov and loopne es imull or dec sbb push dec test push jne add cwtl fs push xor push push rorl add pop push insb push adc and jbe inc or mov or test mov push add xor mov mov or inc push add add cmp or mov mov les jg hlt jmp push add and cmpb in inc pop push mov pop xchg xor sub or into std in cli mov pop sbb pop pusha cmp and sub xor (bad) mov pop xor cltd int test rcrb xchg cmc js push rcll add mov daa fist pop test add dec rorl jmp or sub rolb dec mov or rorb jne add popa mov xor mov pop popa ja insl (bad) pop sbb mov int bndstx mov add xlat mov push test in mov sbb cli cmc cmp mov adc dec ljmp js insb push xchg int3 mov pop shr push shlb push mov leave pop adc dec test push gs and mov dec or inc (bad) xor bound xchg pop mov jbe sbb mov adc add sbb fild cs xchg mov andl jbe xchg cmpsb arpl aad jmp lea inc movsb jl push pop jmp neg lods push mov sub rorb xchg xor or jp and add test or inc mov add clc xchg fdivs int or outsb pop add dec pop push jl cwtl cmp test add cwtl cld (bad) mov cmp mov ds andl jmp push or ja or add pop rcll sbb or insb sbb int3 cltd in xchg mov cmc add (bad) sete or outsb mov mov dec aas test xor inc or in mov enter and mov add jp iret pop push cmp movnti jo subl aad sub not shl inc fildl inc push push mov js fcoms ljmp mov jmp and mov rcrb add jge add scas cmp ljmp push jmp dec sub std jmp sbb and dec rol loop cld mov xor push sbb dec sbbb or jmp ror jecxz dec ds and out mov sbb shl out mov popa adc or mov daa popa xchg out xorl add add mov dec (bad) lret (bad) dec xlat xchg add pusha lock xor addr16 pop fwait sub pop add icebp mov cwtl lret xor fisub or push dec pop adc add test push add gs popf pop push mov pop push je jno or adc mov or jmp sub sbb fmull push call (bad) adc add js test (bad) mov loopne push ljmp push mov pop lahf jmp adc int3 imul test sahf in fmuls loopne fisubl sub add ss sbb inc (bad) xor adc das sub mov icebp pop cmp shrl mov sti mov xorl jecxz je inc xchg js inc jle mov or out push out and inc pop jg cmc movsb push add sbb or dec sub add pop notl test lahf and add movsl inc pop mov jb jl fs mull pop daa adc pop sbb fldcw fldenv sub aam inc push js out sub push push xchg mov jo mov movsb or xor lods cmp or stc scas add jbe and negb pop fs pop adc sti xchg xlat add sub add and add pop mov push xchg cmp das add fiaddl add inc push das ds andb xchg lahf sub jmp inc sbb xlat aad leave inc jmp into push and mov add aam test (bad) out ljmp push out dec add xchg cmpl jbe test add ss xchg ss out jb pop push shrb jge or adc adc push negl orl add dec push or add orl sbb pop ss add lds les jp (bad) or rolb icebp arpl movsb jnp daa lcall nop cmc inc or or push dec or push int cld sbb add jns scas sub add mov xor lds xchg out out cmp daa sbb sbb push in and into ss les shl rcrb bound pop std shrl xchg push (bad) rolb lret sbbl mov subl gs stos mov idivl and rcl xchg xchg rclb rcrb punpckhdq lahf hlt adc pusha jg push jg imul fs iret push dec inc inc push jl dec cld notl mov pop add or pop push rorl add iret add sbb adc pop or lds in pop push mov dec pop fldt cmp jecxz sbb repz insb pop xor add xchg mov (bad) repz adc xor add add clc sub jbe cli lcall cmovp push notl leave pop add xchg daa push adc ja fcmovnb cmpsl leave push push jle jmp shlb in repz imul push jno mov (bad) push adc mov mov out shrb fptan and push cmp dec and adc fstl inc mov jge sbb sub loop sub push lds cmpb jno sub dec push iret or aad cmpsb ret add in push mov enter adc into push cmc lret dec add inc or lods jo mov ss mov sub nop js mov out ds add jne imul sub icebp pop dec pop pop mov pop pop aam mov xchg pusha and idivb in jb pop std stc pop lds mov xchg scas fsubl push add addl imul (bad) adc cmp pop inc sarl hlt add cld pop or xorl adc out dec icebp fwait inc (bad) out pop adc cli or or cli (bad) sbb repnz mov cmpb std sub mov and dec pop xchg add (bad) adc mov push pop xor mov inc int3 pop and stos sub push repnz pop cmp sub mov jp xchg xchg xor sti pop sub and inc (bad) insl outsb dec adc pop inc push imul cmp aad adcl xchg test xchg push mov mov cmp pop add push sbb daa jmp sub jo jae or and leave sub push mov mov sub dec or fsubrp jns pop je inc push mov push imul addb jl addl ds call ljmp mov pusha adc sbb cld sbb ficomp mov add js out mov pop orb inc out arpl inc sbb mov sbb repz pop int cmp jecxz idivb and mov enter fidivl push popf inc iret sub ljmp divl dec loopne je jno pop inc xchg mov bound inc imul clc add aad mov test or out add fild inc std dec movsb pop xor imul dec pop mov and int lods scas scas lods cmc pop out sub aas pop (bad) mul push add dec sti loopne jle popf and pop test roll movsl (bad) xor ljmp bound mov (bad) rcr dec sub sbb mov fisubrl jg cmp rorl dec or sub xchg pop pop pop jmp lret mov stc ret push (bad) idivb adc jmp ffree mov sbb dec repz sub cmpsl ficompl sub pop pop pop scas jge scas rorb and and xchg sub sbb fstpt mov mov call in in leave fstl (bad) icebp sub adc pusha je and mov mov pop wrmsr sbb add gs cmp out xor cs add in ljmp data16 jnp jmp ljmp mov jl sub mov cld out pop cs push lahf push push outsb lods movsl mov pop pop add or test aaa lahf (bad) sbb pop leave push ret jmp (bad) xchg push sub fcoms pop push out jae and mov xlat std inc xchg jge negb dec stos lea outsl ss sbb mov sbb inc bound jbe mov les lock add jbe push fxch pop dec xor pop lods add (bad) out or xor cmp or out pop es into jg add ss xor dec jg int3 xchg xor adc aad seto inc add jae outsl xor rcll jmp pop push or push rclb out cmp nop gs mov push pop add iret dec sti repz jo cltd lds sbb push pop xor fist adc dec fmull xchg pop mov mov sarb xchg adc mov pop jg cltd or repnz push push cmp stc dec pop xor mov and in and sti jge xor xchg fisubl mov aam dec or xchg lock pop adc mov xorl push push sbb xchg sub les cs push fstl or dec addl pop je add jmp (bad) sbb iret mov xchg aad in pop shrb mov xchg mov lods mov gs xchg imul and push sbb add cmp pop push ds loopne inc arpl jecxz mov mov arpl cwtl push popa insl les and add imul pusha (bad) jmp int3 push mov fs cli or add or mov push call cmpsl sub or or xor sub repz jne shl inc or cmp jmp cmpsb add adc mov pop jmp (bad) xor xor pop test jbe sub nop mov mov cmpsl inc nopl loop dec test in sbb roll push add sub into jno add scas add pusha dec dec jae lret xchg adc cld loope and aas idivl xor dec sahf xchg mov jns push add mov ds insb add fsubr pop and pop (bad) cmc add (bad) sub add mov imul icebp stos mov mov mov pop int3 sbb pusha insb fiadd repnz sti sub sbb add aaa xchg scas das mov pop jns jne test jmp mov mov fidiv ss adc dec imul pushf cmp pop sub and jmp std adc aas sti dec out lds ret pusha mov hlt iret pop add into xchg icebp xor mov xchg sub jmp xchg jg inc jl add lret test adc add rol jecxz rolb es mov jb ficomp int loopne pop cli sbb or ret inc mov xchg jmp lret push cld jmp and insb popa psadbw push sub movl das inc sbb mov in cmp mov mov fdivrs dec xor out xorb loopne outsl imul test push xchg adc cltd dec jl pop inc pop mov add push dec dec sub adc or add sarl cli push sub adc fildl mull enter adc std sub push xchg mov lahf sbb jne push or add jmp mov cmp mov push ret adc inc ss out pop loope push aad iret fidivrl es fcomps mov push jmp xchg jl cmpsl mov sti popfw push jl pop ffree sbb jno ja stos ja mov pop pop push or mov and adc jnp xchg aad in sub popf loope jnp pop pop pop inc in jp mov dec jg pop mov ds adc insl add ja repz arpl addr16 pop daa icebp out jmp jno inc cmpsl xor aas add data16 subb pextrw divb mov loopne push mov inc push gs mov dec in fmull add or out add sahf popa jmp push mov das sub sti xor fstps push adc movsl mov sbb cmp push idivb jmp adc daa adc cmp mov dec sub jb mulb push rcrl js xor jmp xor or jne les loop sbb sub push jb sti push sub test (bad) (bad) dec xor inc vpackuswb jb add inc (bad) pop or sahf push sti cwtl test xchg dec (bad) cmc pop stc add cmovae pusha (bad) stos inc loopne and and dec scas (bad) mov mov mov lock mov inc jmp ja pop jmp dec movsb repnz pop push mov mov out sub insb leave pop push mov xchg data16 mov mov push push pop pop scas jns xor (bad) out xchg cmpsl add fldl cmp push sub push cmc test int push jae aaa inc sub pop ljmp push scas jmp lds jmp adc and es inc (bad) addr16 cmp fadds push in cmp repnz aam push xor sti and and add push dec loopne sub add (bad) adc add or (bad) ds addr16 fsubl hlt data16 shlb mov mov in test dec aam cli xor pop cs dec pop mov mov mov push movsb imul xor or fdivrs cmp sub rcll cmp sbb adc sbb push rcr mov mov sub mov (bad) jmp jmp push jbe sbb (bad) sbb inc mov jo mov dec mov dec xor cs pop adc xor mov adc clc mov dec testb push sub (bad) sub movsl inc jmp int3 rclb cmp repz jmp pop js pop aam cli sub mov nop xor rclb fcoml dec add jno ss push jmp cmp and mov stos and xchg insl cmp pusha inc aaa (bad) and fistpll dec sub jl xchg add dec push call sbb xor ljmp repnz sub bound mov outsb imul inc xor sbb out jbe sub add adc xlat and divb in dec (bad) xchg pop mov test add aam (bad) or inc les sub sub addr16 cld loope inc xchg pop stos leave test ss sahf add fist stos jnp mull sbb push dec (bad) aad (bad) clc in mov xor sub fincstp jmp test fstl xchg subl and lods aas movsl jns fld imul sbb jne xchg ror jnp jge,pn mov jae das add add push pusha mov add insb push mov or out or negb scas inc add adc sbb adc pop lock stc int3 in and add shrl push loopne dec popf sbb rcll pushf jo iret dec or or cmpsb pop shll inc sbb and mov mov test sar shr shrb pusha add sub add ret jmp cs jmp mov dec nop jg cltd subl jns add pop or in les and or fwait loopne (bad) aam inc lods jmp mov inc fildl pop data16 and push (bad) sbb xor cld and add repnz arpl jmp stos cmp sub pop push out ficomp cld out pop sbb (bad) fildll xor stos push sbb dec inc xchg pop faddl ljmp adc sub outsb jno shl mov inc fs cmp loopne lahf xchg in mov or add or int das sbbl dec mov mov add xor outsb add mov add add xor aaa jmp rorb loopw and stos xor dec push sub mov push insb das adc or (bad) and add dec aad int3 or fsub imul (bad) mov insb in pushf outsl add mov add adc jp jo adcl push (bad) lret bound dec mov scas loop xor inc (bad) dec or add pop mov test mov lock sub cld in sub dec add push xchg imulb pop dec aaa adc fwait mov pop mov es inc add cmp adc add cmc jmp fldcw cmpsb mov and mov rcr adc insb movb cmp pusha sbb std mov pop movsl mov gs mov lods xor mov or inc adc pop inc xor sbb mov mov sub jo push add inc dec or je mov test inc pop mov fisub push add es pop push ret ficom sbbl adc jp test and test mov stos call push sahf lods imul pusha imul dec xor or loopne jecxz data16 inc mov jnp sbb arpl mov push mov pop add fsubrp inc popa aad aad dec repnz sub sub shr inc push adc jmp jmp mov xor dec push daa pop xlat scas jne lock in je sbb and pop movsb mov out or inc (bad) fs cmp push popf orb mov sub and test out out (bad) enter in mov std dec (bad) pushw add mov ds push addr16 sub sub push adc pop lock push jmp xchg pop out in mov rolb lsl add hlt xchg mov outsl cld gs or push or inc (bad) sub sub bnd es mov jg test sub pop mov dec mov or and aam xor push mov mul ds test push and loope arpl xor (bad) rorb xchg shlb or inc push push add adc sahf pop inc adc or dec and fild sbb mov pop xor lds pop add inc pop mov sub jecxz or pop adc xor or mov lret jecxz (bad) repz or inc jne sub insb jg sbb cmpsl (bad) dec add xchg add or fimull or fnop add jmp cli and mov ljmp xor and ret mov inc popa push ret add (bad) and in dec adc jo push jg jecxz pop jmp shll rclb nop adc cltd movsb push scas (bad) aam pop adcb push add nop push test sub push js inc mov dec push push jl sbb push fidivr inc inc push (bad) jo mov rolb add mov push dec (bad) cmp insb cmp idiv sub test cld outsb mov roll les (bad) push inc xor in sub mov push into mov sub adc shl mov cmp aam mov or dec mov lock sbb or mov daa imul jl out fs ret mull je addr16 jmp jmp jecxz jmp or cld pop push push ret xchg jne and (bad) sbb or xorl adc rol mov adc pop push push call or outsb xchg mov cmpl mov test push or xchg push xchg dec les adc in pop jae push and add (bad) out cmp sbb add adc mov rcll test xor fiaddl xor sub push cmp push lahf adc or xor cmp addb jmp into neg and jg sbbb lods lret jp les jb mov mov mov dec push daa and jle,pt pop lahf loopne dec inc pushf repnz (bad) adc add cs icebp psubsw (bad) push sbb cmp jnp das aad insb inc adc jmp aam mov jg daa mov fstps fdivrs add jns adc sbb inc sub (bad) inc out roll push push je mov icebp pop jb in add mov in push sbb mov popa pop or or mov bnd dec mov aas orb shl xor jns leave push push popa xchg aas icebp enter cmp add xor mov scas or (bad) mov test pop mov or fsub add jns add mov fwait outsl sbb stos cltd sub add push xchg aaa pop test add or es das pop jge roll out mov jmp add dec pop mov rorb pusha pusha push inc jmp and xor push sub daa jb push pop cmp fiadd mov ret test (bad) and addl sub pop push mov mov pop mov shl inc mov and cmpl jb and jmp pop push or (bad) daa xchg or lock cmp divl cld or data16 pop pop stos pop pop push xor (bad) dec fcmovnb lds sti jp stos repz dec push imul push adcl inc or and pop nop in jecxz push inc sub fs out mov (bad) loop or gs imul scas sub idivl or movsb jp add gs dec pmuludq stos adc adc pop imul push jmp divb jmp push lods nop or mov inc xchg into xor and inc nop addr16 int3 xchg hlt js add je outsl outsb and data16 jb insl popa or push cmp gs arpl je repz aad mul jae dec stos cli fs jbe insb cli jo in jae ja (bad) xor data16 es sbb addr16 sbb imul xlat jne or xor jo jae outsb inc push push dec sub imul rcll push insb imul inc ss inc lret imul cmp movups push ret push jb std adc jb push cmovb ficomp incb push or dec (bad) adc test sub setl sbb cmpb cmpsb xchg jo sub mov sbb mov scas int3 ret sub pop adc add cwtl call inc paddsw in in add xchg mov pusha mov mov mov add xchg sub sbb mov gs sahf xor or inc fldl2t mov xor daa or mov jno fmuls jg pop je inc mov sysret mov shrl push cmpsb ljmp adcb inc sub sbb cmp lret jmp dec shrb cwtl mov faddl rorl inc stc insb sub ss outsb xor rcrl or add (bad) jmp pusha sub pop push cmc sub (bad) or pop out mov sub pop adc enter cmp adc sysret in insl inc aas sub (bad) adc dec bnd add aam test sbbb and inc sub in xchg mov or adc pop add or and adc and aam movsl jg and je cmc or (bad) imul mov inc push clc adc dec sub hlt out or pop xchg ja mov add pusha dec pop insb pop rclb arpl or aaa cmpsb xor adc mov xor pop nop adc pop sbb xor cmp mov adc mov cmp jle inc movsb inc clc icebp inc int ss push jno add faddl sub sub dec pop std shl cmp or incl xchg dec (bad) fdivrl inc inc adc call sub enter push cmc dec adc mov push cltd orb pop sarb add imul mov mov adc jle loop cmc (bad) jbe insl add pop adc mov mov pop cli push add mov ds sub nop inc or bound stos movaps cmp sar call add and repz cmpsb dec not add or pop push push loop add inc xor fiaddl pop push movhps dec ljmp lret jae ret add lcall mov scas cmp dec add cmp push outsl jo or test and movhps pop jecxz add inc (bad) gs jmp and sub pop push push or add adc jle jmp pushf movsl xlat inc subl xchg xlat xor aaa inc cmp daa test das push or dec push jns dec and es dec ficom push repz movsl mov gs das add xchg mov fisubr sbb movsb out push mov jecxz add add push adc mov adc xor inc dec add add addr16 enter pop add push jmp xchg in inc mov mov cmpsl sub pushf mov xor jno or add sub (bad) lods cmp xchg jo addr16 sub xor add and push pop cs dec inc cmpsb adc mov or mov sbb add aam lcall test fadds ljmp dec or push cmp push dec daa pop mov jge add sarb or xor add popa shll lock and inc or inc lcall dec mov dec and fld (bad) ljmp or adc mov mov es and in ret cmp rol push push jge push fs sbb or add mov mov adc sti test mov or pop pop pop push adc inc adcl pushf xchg pop and insl mov dec dec and jno mov pop mov or (bad) jl fsubr dec mov pop push mov cmp loopne sub addl sbb int jge dec adc add pop sub stos mov sub jl or adc imul ds pop add test test pop or push in mov inc fwait sub aas pop dec sub jbe pop pop jo xchg mov pop cmc adc in jmp mov inc aad or jmp fimull and dec cld mov popa push enter push mov mov pop shr xor repz mov pop movl mov mov mov movsb ja cld mov std test sarl pop dec mov dec out mov push mov shl outsb out mov lret scas leave adc jb push js mov adc sbb movb push mov dec iret mov lods add sti pop das fidivl or sub jmp es adc xor mov movsb dec adcb or add xor orb sub pop rcr addb aas dec or je repnz mov clc inc test nop adc push push xor or sub pop rcrb aaa cmpb mov popa adc pushl push aas dec sbb and insb push add sub (bad) inc iret mov pop popf and fwait add xor sbb pushf jle pop dec fcoms cmpsb inc lock mov mov shr add fs mov in call cltd (bad) add call and jmp add cld or jl sub hlt inc xchg jmp mov mov jmp (bad) stc nop jl insb add push push mov imul outsb add mov pop sbb jle push sub rdmsr inc imul sub lds inc xchg xor xlat or pop mov jb jbe cmpsb push mov lcall xor xchg add les aam loop (bad) jmp inc inc mov testb inc push or or pop pop mov mov cld sub mov repz pushf rolb lock pop push adc push cmp or divb pop shlb push ja pop inc and cld jmp pop (bad) sub pusha adcl or pandn enter jecxz call jmp push inc xor sbb xchg dec stos ret les mov pusha test sbb not shl jb bound lock mov mov mov bound pop cmc sbb in setb add add mov inc or mov in popf add int jno or add pop cld xlat dec jge (bad) add mov or imul dec loop rclb xor orl psrld add xchg pop das jmp mov cli adc lret movsl test test cmc sub fwait rorl mov sub lcall add cmc cmp cltd or jnp sbb (bad) jb cmpps jg sbb or pop mov push sti mov enter jmp sar and jb loop pop dec push mull mov addl mov (bad) lock wbinvd cld push sbbl push fsubrl sar or stc or addr16 or sti and mov insl lret push sub xchg sbb xchg or dec imul inc push cmp aas lock jp mov cwtl jbe add xor add cmc les sbb js jmp mov inc out dec jno adc sub or lods jl ret shl sahf enter jmp mov add inc mov popa add push dec fsubrs imul mov mov jmp push ss push cld je xchg icebp (bad) leave or out cmpsl shlb adc pushf in add cmc or mov push pop cmp xchg mov insl shr fwait pop or xchg adcl adc pop jns add pop inc inc jmp faddl jbe adc add jmp pop je sub icebp fs pop cmp jmp pop (bad) lret adc adcl popa and sub mov imul cmp dec add outsb cltd push pop xor jmp add jle arpl (bad) dec dec add or ljmp cmpsb inc push xor and xchg cmp jnp mov pop in jae sub jmp xor mov jge ljmp push or nop and insb cltd sahf data16 dec inc jo inc pushf fidivrl hlt out and lret xor cli or inc mov xor cmp imul push add loope and gs sub add add in or push das inc fcoms or jmp dec sub (bad) or xor push add cltd stos sub sub cmp shrl or sub xor inc repnz fs daa pop lock in or lods pusha fiadd xchg pop jge inc fmul ficompl outsl addr16 push ljmp add mov pop clc in clc imul inc jbe xchg push inc add pop les mov inc pop push cmp movsl push popf and mov ret or or mov out pop jmp lds mov mov imul xchg jb stos xor push rcll addr16 jge imul and add icebp inc das adc icebp mov cli ficom lea sub add ficompl loope and (bad) push punpcklbw add pusha popa cs cmp sub shr push add pop push jae (bad) mov pop cmc pop lods jns mov mov (bad) out ds test in das out stos jg loope scas sub mov push test cmpsl inc dec mov push xor cmp leave lds xchg movsl fstps scas xor jb cmc mov out pushf push fsubs jg dec jae xchg scas and roll cmp (bad) cld pop pop ret mov fnstcw xchg or sub dec jb cmp pop pop add pop sub mov lahf js addl push adc cmc and push adc hlt loope pop lret inc jb adc sbb out jmp bound jg xor in (bad) out into add add popa pop int3 xor pusha fistpl or and fnstcw psubb (bad) jae mov je jnp rorl xor push or xor adc cltd dec mov test repz or inc inc dec or jae xchg sbb dec jnp mov popf dec arpl add or mov jo cmp xchg dec ret sarb adc lock add and dec add push dec test or xor dec dec dec popa add add add push mov xchg inc jl out jmp push cwtl decb push rcrb clc (bad) or dec cmp int push xchg pop iret test xlat adc test jg pop add jae fsubrs popa or fadds nop loope sbb inc shl adc sub jmp sub push jmp ds neg push sbb ds leave pop jae add add add lahf insb cvtdq2ps jmp sahf adc push cld jg jecxz add (bad) out nop lahf pand jg jmp and (bad) fsubl je push mov inc and dec sbb jmp adc and and xor (bad) push mov int3 mov mov stos add sub mov enter inc pop jp daa scas xchg fnstcw sub sbb je adc jecxz adc stos jecxz jl sahf mov add xchg push push (bad) and dec sub nop mov cmp xchg out add aaa mov cmc push sub fmuls jae test inc loope cltd rol push inc outsl or enter cmpl addr16 sub cli fwait sbb mov jne fwait adc jmp push add (bad) hlt xor loope lods sub and push in xchg flds xchg movsl repnz add and or insb in xchg push mov or pop dec mov xchg cmp push xchg scas or (bad) in mov sub xor push push sbb dec sub push push mov sub jmp in test lea xor rcrl dec jno pop (bad) mov dec rol push idivb int3 mov rclb jle mov sbb jmp cld mov pop cmpl sub mov sbb repnz outsb xlat pop mov lahf data16 add add pop mov jecxz push and mov push jnp das mov add and cmp repnz jno stc pop loop,pt das dec cli out add push adc sub push pop jnp jmp inc add add out or dec not adc arpl out adc adc mov xor jg push pop sub xchg cmp push mov cmc and es dec xchg iret xchg cmp add fldlg2 jg daa jl jo xchg icebp es cmc xchg and pop adc mov xchg mov out out jle sarb (bad) cwtl clc mov jl jbe inc mov xor jno jno cmp adcl ja in jb and pop cmp add hlt insb mov rorl dec xor xchg jns jae testl cmp cmp pop or or push addl jmp stc add notl lahf mov (bad) push mov inc push and xor adc adc mov (bad) or cmp xchg fisttpll pop push pop scas cmc add jmp lods xchg cmp push jbe dec add aas xor roll fiaddl into (bad) mov daa popf out and jp pop push xchg xchg mov ret insb xor adc addl popf lgs addb pop adc sub sbbl pop sub dec int3 jnp daa loop jno mov or pop outsl add imul xchg and lcall add push orl int push add test add add add ret xor sti out scas inc pop fsubs mov stc dec test pop dec sub push int3 int or and xor add ret sbb add pop xor push sub jl push lods cmpb add (bad) or or es popf jp push rolb cmp inc ret aaa das hlt loop mov add cmp popa mov and add push adc inc lods jmp push add pop mov mov inc pop sbb sub push jno ret xchg mov inc xlat orb scas leave pop push jns cmpsl fsub push jmp jl xor dec push pusha test addl mov xlat sbb cmpsl and lods arpl mov ret add jmp cmp ret cltd mov or dec mov js add out sbb ja pop cmp pop add mov repz in dec aam out push cmp pop sub frstor mov add into divb push nop call dec jmp jp cmp in pop test adc movsl xor push mov dec lcall dec pop aad enter and cmp sbbl aas cmp imul fisubl sub pop push xlat lods mov jecxz jle pop inc inc push shll mov mov mov and inc clc scas ja ret cmp mov (bad) sub mov neg push add adc adc shl and insl pop jecxz sub stos in pop mov les (bad) pop jecxz loopne pop adc out push fcompl push addr16 mov arpl cmp inc mov or loope popa aad and xor cmp push std sbb cmp cmp popf into (bad) jmp pop nop fimul lds aas test (bad) add cld fcmovne stc xchg test dec pop icebp out xor shrl inc (bad) or pop pushl push daa jns add (bad) in mov std fs adc gs xor data16 cld iret add in jmp cwtl sub add sbb in sbb lret mov sbb mov and xor movsb push stos cld or ljmp es les fsubr rorb (bad) mov outsb int3 cltd push leave mov push add or repz sub xchg fstl test mov fldenv and xor add and popa pop fmuls mulb adc jns rol cmpsb jne,pn push sbb mov rcll ss dec sbbl rclb ja dec push icebp mov adc jge aaa add not dec add mov xchg stc push inc aaa (bad) pop jl jp mov nop fsubs xor add test dec jmp cli lds push mov cmp xchg mov push dec jle ret push xor xor add adc std mov push sub push notl icebp push mov hlt sub dec adc push push add push jmp ror pop repnz push inc sub pop jg add flds jns notb jmp push out xchg movhps or xchg out jp popa pusha sbb or int sub pop es rorl pcmpeqd gs sahf mov add pop ret xor repnz jle mov ss lds dec push jle sub add fwait orb mov (bad) mulb insb call pop push push and mov jmp imul adc mov pop lock dec lahf xchg sub aas sub mov add xchg jge adc test xchg mov ficompl dec fstps pop jge pop pop sub adc sub push or sbb push add flds xchg mov mov sub mov clc (bad) pop int3 ret (bad) push jmp in sub adc and jo jp mov or jge punpcklbw or mov es bound (bad) mov push sbb xchg mov pop orb or sub cmpsb or xchg ret rcl ja sub mov adc mov inc sarl add xor inc push or push xchg or adc xchg sub pop pop divl add push repnz dec ds fistpll dec mov cli stos mov pop out out hlt bound xor in das xchg int xor push stos ss loope pop jp dec sub lds out jp pop sbb add or out aaa (bad) xchg inc pop hlt jl wbinvd dec push xor rorl insl add pusha gs xor imul and jno or pop das jne aaa leave clc rorb push xchg xor cld cmp mov arpl push rclb pop sub inc nop push lahf test sti jmp push stos mov mov dec push pop repnz ds or add fimull outsb and or xor dec and adc mov stc add call lret inc in mov jecxz (bad) pop push add fsub sub sub fistp pop adc and addr16 xchg jae (bad) stos cmp mov pop cli dec clc push mov add dec push cs pop enter push jle push push in andl pop adc mov out or xor sbb addb and scas (bad) jno daa icebp out or call push imul inc (bad) std pop lods jns push sub rorl lock inc mov rcll pop jle sti jbe daa jg mov lahf push insl inc add pop (bad) pop mov or or dec faddl fistpll dec stos dec add pop xchg popf rclb pop mov inc imul and mov add inc sub cmp fmull cmp lods cmp fwait xchg or push shlb sbb ret mov cltd test outsb jl cmp cmp push pushf xchg repz dec sub inc popl pushf bound fs (bad) mov push mov out or fildl inc inc jb sbb mov enter or add mov add dec das mov repz mov rcrl jecxz in dec or sbb dec js jno or lea or sbb lods addb movb push (bad) faddl push xchg roll in dec pop adcb adc add mov add jbe (bad) xor sub ret jle js push jns jne test lret add aaa pop xchg mov xchg pusha pusha sarl adc xchg and xor adc mov fldt jo enter lahf mov imul cmp ja add movsl inc in test adc push (bad) stos lea cltd sbb sbb push movsl mov add xor cmp fucomi ficom pop mov mov inc add add and sbb add aas or add inc inc add xor lahf cltd add add push mov jp push (bad) pop loopne xchg stos add cmp jnp push imul jae pop mov rcll imulb lret mov cmc aam out lock jmp std inc addr16 sbb adc int add (bad) adcb sar outsl adc outsb test lret cmp mov hlt fcoms or add jmp jl sbb xor dec loopne sbb mov dec es xor scas xor adc xor fdivl incl sbb sub jae repz adc jno sbb add (bad) sbb lcall mov adc add nop push sub add mov out xor jle leave stc test imul sub or pop loopne add aam and mov js js sbb dec mov shll or jmp loopne inc sub dec repnz mov jge push adc mulb scas shl (bad) mov out ror sub lahf and add nop mov addl ljmp pusha lods inc add pop mov daa sti ds xchg mov hlt cmpb lea (bad) rolb add xor test add sub leave lea (bad) aaa add test pop fsubl sbb out stc stos in fs in inc aas popa add jp in cmp out adc adc (bad) test mov fs inc pusha adc jno aam sarb rcl push jne imul add xrelease push idivb gs and stos mov (bad) sub fcoml add pop pop es mov lcall mov test call dec and and push add or movsb jl into cmpsl dec inc cs and jo in fdivr stos or push mov inc rolb cltd in jne jb xor mov push fnstsw into lock jbe movsb cld dec cmpsb push push sub and loope cwtl push cmpb les cmpsl mov or rorb sbb loop cmp nop cmpsl aam mov (bad) and add adc mov sbb add clc icebp hlt sub nop (bad) sbb loopne add inc rclb imul outsb add leave and clc clc add cld fcompl sbb cmp data16 adc dec inc add xchg sub add adcb adc sbb dec dec cmp or lock aam mov jnp add lret dec mov lcall inc (bad) jle sbb je pop and hlt lea jno repnz mov adc mov in jno pop cmp mov add jge adc jmp add dec mov or pushf adc adc sbb adc (bad) lcall fisttp (bad) xchg sub inc mov mov mov (bad) jns movl das add iret mov pop or cmp sub stos mov pop add fs cmpsb sub rolb and push loopne adc repz movsl xchg sbb xchg pop mov jne adc out cwtl push or and pusha popa int or sbb push sub stc or cmpsb jo or sub stos push rcrb jnp adc mov sub add icebp and (bad) loopne jbe addb jl pop push mov fs mov js add shrb pushf loopne fs add mov sub pushf adc daa cmp rcrb subl jle cmp cld add adc je cmp cwtl enter sub mov mov push adc loope inc adc push lock jp push mov mov dec lock aam clc and insb sbb pop aaa add mov (bad) xor jno inc test jo mov in lock bound pushf pusha pop jno push xor cs mov fs leave movsl sub andb push sub jmp sbb mov mov lret (bad) imul sub repz add push cmpsb ret and mov in xchg stc mov bound and mov out (bad) jle fstps lea unpcklps jl add notl pop subps jnp push push repnz pop xchg and inc ret sub out add popa dec adc jg loopne push pop mov xor jb and in push bound popa dec adc testb push out push cmc add add lahf lods dec sbbl sbb hlt clc mov cmp pop add or jl mov push and cmp adc pop adc es jg loope pushf leave aam pop call dec int3 stos fild sbb inc stos mov add fdivs add in mov pop fs add sub cltd xor dec dec lahf push loope lret aad (bad) xor mov das sbb or lods fidivl clc pop cmp adc test mov xchg mov push or xor test mov pop and lahf mov and or js popf sti dec inc lds pop mov cmp sub dec push dec into xor sub xchg or sbb pop and xor mov femms adc mov je nop sbb daa insl and xchg scas jge repz cmpsl outsb cmp mov and dec sbb scas mov mov xchg test shl and test ret dec lret cltd pusha or add arpl faddl inc add push jo push pop dec gs push push flds in mov add jb imul and sub mov loope adc cmp fimul cmp cmpsl (bad) or in into or in mov andb aad mov push lock push xor fwait and add dec mov jle pop fcomps ds dec pushf sub pusha int int3 xor jg and rcr sbb (bad) int3 or and mov xchg mov or fdiv mov dec push test cs cmp test leave dec mov and sub inc pop mov xor loopne push and shll mov and (bad) movsb xor in ficoml inc in jg pop call dec jbe movsb aam mov xlat out imul ja loopne ret jl je mov call cld add add fidivl (bad) jle insl jmp and sbb pop inc push or sub add js add popa subb xor dec sbb or mov out lock sahf cmp pop dec add mov pop pop xorl orl mov sbb adc icebp add pushf adc or aam cmpsl movsb adc sbb mov jno inc or leave cmc int3 and cltd mov xchg and imul and leave add les (bad) rorb stos adc mov push movb push inc mov jbe gs push and repz adcb add push or (bad) flds mov pop jnp or pushf rclb xchg push test mov or das xor sub sarl mov lods les loopne data16 rolb add in pop add ja inc pop rclb xchg pop xor test test repnz test jecxz rcl mov clc repz push movsb xorb into (bad) mov cmpsl call leave pusha je and pop or xor sub inc inc push aad add imul mov or popa mov push out mov sbb adc add mov xchg add jmp mov xor sbbb pop sbb sub fadds popf lret fcomps inc sahf xor icebp mov repnz test mov test pop ss insb orl divb xchg loop nop mov push leave imul mov push dec mov or sbb sarl cmp adc xchg jp pusha dec sbb sbb movsb mov dec or mov sbb jmp fldcw adc test aam je sarb add dec cmp push cmp pop loop cmpsl inc inc xchg add push daa pop jb loopne cmp pop push in jle push loop decl xchg mov (bad) mov mulb sub mov or cmp push pusha mov add enter es inc or pushf or cltd mov xchg mov cmp add hlt es xchg push and xor push movsb add or (bad) data16 add imul sbb shlb sub les je js mov test and add test or add addl ret outsl adc daa and frstor in sub adc inc fs or xchg push pusha push and mull imul int3 inc mov (bad) xor ret pop sub adc inc js daa dec xor add pop ljmp pusha fimul pop or adc xor push inc jmp or add fsubrl out cmp xor (bad) mov loopne sbb sar or sub insb nop test push sbb inc inc adc addr16 loop aas sbb icebp and lock (bad) and inc fsubrl fdivrs add pop ljmp mov inc sub cmp nop orl jae jbe sbb clc push test (bad) inc ds je hlt fdivs imul jmp adc js dec mov xchg sub mov js dec imul dec js cmp or sub adc test outsb insl ja test jo push jns,pn nop andb pusha lcall pusha inc or popa adcb xor sub gs jb dec push lcall fcomps sub rclb mov mov jmp negl leave hlt push ret or push sub inc mov adcb xchg jbe push pop (bad) shlb jge add dec mov sbb xor jne pop enter dec lods (bad) jb mov sbb js sub mov mov popl add ds sbb inc or mov sbb adc inc xchg mov imul pop jl add bnd add xor loopne sbb push or xor or popf dec xchg cmp or xchg cmp insb cmp imul jae cmp add in and xchg mov mov xchg mov cmpsb clc sbb push pop pop cmc fadds adc xchg out add sbb xchg add or mov jns lahf popf pop jmp insl mov mov lret cmpsl shufps push add bound shll sarl mov sub ja add dec negb je xchg or inc (bad) jne push clc inc inc lock out sub fsubrp mov or dec data16 dec cs test adc sub dec mov data16 popl scas ret push ja mov push add add xchg (bad) icebp xlat (bad) testl dec hlt pop push (bad) scas pop pop outsb loopne jp lods push bnd adc xchg pop das dec or or xor jae and pop or xchg testl mov dec inc adc daa inc inc sbb mov iret pop sub lea xchg fs sub add cmc sbb neg pop in mov hlt add pop mov push dec add add add mov pop nop cmpsb popf add adc mov xchg aas icebp loopne (bad) pop data16 dec dec sbb cwtl add xchg pop rcll enter scas bound fs adc je pop je gs dec mov xchg fmull xor sbb push xor aam fistl jl (bad) cmp mov (bad) sub call popf mov aad iret xor dec lret fldenv xchg mov pop (bad) lods jle adc scas dec push pop cmpsb in cmpb pop icebp paddb mov outsb mov lods cwtl rolb mov rorl mov sbb in mov xchg fnop jno push pusha loope lea decb and test js (bad) xchg jae xchg and pushf es fisubr jb nop mov push cltd mov and and mov mov mov sarb mov pop pop notl xchg sbb lret inc adc iret mov sbb dec insb add and mov adc adc rcrb pop out xchg test insb shrb push clc sbb data16 or rcrb into mov ds or mov pop cmpsb pusha cmp clc mov jbe mov nop dec les shrb lock cmpsl mov hlt pop mov in add jle scas push es adc lret add pop push sbb imul sbb sahf imul inc jp pushf test cwtl cmpsl adcb and xor hlt adc and inc les dec and notb xchg mov push sub enter (bad) shrb sbb inc mov add adc dec lock jo adc pop sub and nop mov hlt es dec mov iret dec mov int3 out js cltd test cwtl jl inc jl mov ret jo sbb popa inc (bad) fisttp add daa lods xchg add lcall jecxz cmc int and jne hlt sub mov jle fdivr add cmp push std test pop movsb push cmp or inc pop lcall (bad) jmp lock aam sbb sbbb or pusha fdivrl daa pushf adc xchg add mov cld jg addr16 stos cmp call dec push add sarl mov (bad) stos push outsb into sbbl (bad) pop stc cmp push call in rolb nop cmc iret mov and and seto loopne mov add pop aad jge add mov fs test dec sarl mov test push fs pop mov pusha stc inc mov (bad) sahf push fwait sbb xchg mov mov mov cld sub leave xchg insb or std in fs cmc hlt dec inc pop dec mov insb pop mov test push xchg jb fimul inc fidivrl fnop dec inc dec push lahf jp jns add cmp inc movsb daa ret call dec mov in pushf adc jl mov mov (bad) sti (bad) cwtl pusha cmp fsubl dec les add mov pop pop add mov dec div mov movb sbb mov cmp lods mov pop (bad) pop xor imul sub dec aad sbb xchg hlt sahf loopne jae xchg jl sbb sbb mov adcl pop add xlat (bad) les lock arpl jg dec cmp inc adc sub int pop mov outsb fwait xor xchg cld popf inc fstps cwtl or nop call lods pop data16 dec (bad) hlt push out and push (bad) and pop bound stos loope sbb enter cld xchg jl gs hlt jle add stc xchg jne sbb ret xchg sti cmpsl adc sbb loopne inc testl popf cltd add mov sahf sub pop cmp mov jne inc push cld fcoml mov push les (bad) out mov xchg adc mov pop mov lds loope xchg fs or pop ds jle,pt add test jns adcl sbb pop adc je ds sbb sub mov dec int3 in rolb repz ds pop cmp (bad) js sbb cli fwait jl adc jmp les arpl mov in dec add ss test daa mov int3 mov push fs lods or pop xor ss add sub test xchg jo xchg mov pop add cmp pop or push push pop inc fstl mov pop or pop add aam inc xlat mov sbb mov mov xor mov inc or jge inc push loope and mov lods inc sub (bad) mov cmc (bad) sbb inc bnd in sub lret fucomi cmp lods cwtl sub sahf mov lret lock imul cld ja sub dec jge,pt add icebp inc push dec test aam mov push pop pop rclb clc jp dec mov push mov dec ds addb sub fst push xor push and sbb adc sub movsb ficom lock mov mov fsubr dec inc xchg mov ret adc push inc cmp and imul mov inc mov mov jp fisttpl ret and or inc jb (bad) js inc repnz push insb fnstenv pop and mov stos dec fldenv dec bound add fwait lock jnp mov or xchg dec or cmpsl xor pop (bad) les jns inc xchg test sub loope jno or mov sbb and or cmp pop fisttpl add pop test or push adc add je cltd leave pushf (bad) cwtl mov push dec pop and int3 pusha mov sub insl loop push add mov push jecxz sbb mov jmp jle daa xor (bad) int inc inc mov pop rorl enter mov pop mov add cmp add sarb dec sub and testb cmc and loope clc into add push notb xor inc out aad lods jb scas add aas stc je adc or dec loopne rorb sub sbb push rorl pop in js roll insb xorl imul mov mov and pop and js orb pop sbb inc dec rcrl (bad) mov iret ds shrb add mov enter cmp xchg mov xor (bad) mov rcr jbe jle pop into (bad) int3 sbb je shr rorb add popf mov scas in test and xchg movsl or mov add rclb stc mov lock xchg add (bad) cmpsb and (bad) arpl jo mov jl orb (bad) cltd jno and pop mov jle aam in scas call adc xchg orb push adc add inc jmp sub and dec and inc xorl cwtl dec sbb add shrb out cmpl movsb push lds mov or test dec enter out and xor mov dec mov add (bad) xor adc jo pusha inc repz outsb mov and lret dec shlb arpl cwtl sbb cmpsl pop cmp orl imul or jge mov inc shrb and jle movsl dec loopne cmp hlt test and (bad) and jo xchg xor xchg aam fsubrs push adc adc psubb add cmp add cmpb loop adc add xor xchg icebp push mov hlt and or push (bad) and loope scas or call xor pop cmp xchg ds xchg add sbb aam or sbb cwtl or xor add and insb xor leave push mov lock dec imulb cmp push (bad) sub pusha adc in lods je fucom push rcrb in or jmp or adcl adc cltd pop rcrl sub cmp loopne sahf inc or push adc (bad) or mov pusha mov mov hlt in add sub daa int add push pop lahf cmp xchg loopne mov add shrl fsubs jo cmovge fs dec inc push rorb inc jg inc mov xlat pop jb push jp add lds sub cltd fcoms ljmp insb movsl push add shr stos mov inc mov dec bound sbbb sbb push rclb xchg insb add pop cmp adc imulb pop adc lock (bad) xor pop rorl or and mov leave add mov cld rcrl (bad) mov push fisub psubd lods or clc pusha push xchg aas dec add les add in fnsave imul cmp inc in lods scas dec ja sbb mov jecxz sbb cld and push movsl adc push fnstcw ficomp mov pusha lea (bad) test pusha pop bound sahf ret daa adc loop cld adc rcrl popf popa and add (bad) inc je add and mov cmpb cwtl push xor add lret sub adc enter xchg inc testb (bad) jae or pusha push jns lods pop inc xchg aam xor xor pop loop ror out mov cmc or add cmpsb dec addr16 inc jo inc ret or int3 dec pop pop pop stos inc add faddl xchg pop cmp xchg or xor add or add add dec or icebp pxor leave in add xchg cli in test or sarb inc push xchg add and aaa sub out inc andl xchg xor sub jl lock inc fs mov inc pop fcmovnu and mov adc mov xor mov sub pop pop pop daa enter int3 mov call jo lods popa inc jge jae push jne loop pusha nop cmp adc or sub cmp mov cltd call lock cld pushf clc lahf adc fisubr rorl sti cmp lret scas xchg orb fnop mov adc rolb cmpsb shrb pushl cmp stc test inc add cli mov sbb test test cmp adc or xor or insb lock pop sub (bad) loopne mov pop add jge push pop add daa sbb pushf shlb outsb ss mull pop cmp inc test xorb pop aad xchg add call add dec mov das or mov mov rclb aaa cs cmp icebp movsb xchg adc add sub jo mov dec dec pop es and dec pop test or fs shlb into hlt daa lods in add jb adc stos push leave and xor test loop pop les popf mov into mov add cmp pop incb lds add xor adc or inc in rcl sbb and pop fstps cmpsb das jl dec dec mov mov loopne rcll push dec lock dec add loopne,pn dec shrl mov adc test adc cmp adc out addl adc cwtl push pop inc lods scas pusha sbb pop push sbb xchg movsl mov xor in jo sub test push jnp mov jl addl mov and xchg outsl lods pop cmp inc mov xor outsb daa sbb add xchg insl mov lret dec daa push pop sbb stos loopne jo test xchg imul or jl hlt test test jo int3 stc ret lods adc xchg loop inc or pusha je sub lcall push or lahf es imul stc mov or sbbb cmp push adc movsb add in push jb addr16 inc (bad) mov sub add addr16 and je lea test sbb je pop insl push pop popf adc arpl cwtl adc int3 mov les enter or or and mov sub test loopne cmp or sub cmp and and pusha or and xchg dec mov push cwtl dec push inc or lea hlt sbb or mov dec dec hlt mov movsb and and xor incl mov or (bad) aaa outsb roll inc inc and cmp cld cmpsb int push xchg dec lcall enter inc nop js,pt faddl bnd stc and pop lock push xchg loopne pusha adc and (bad) xchg pusha in mov xor test sbb jb xor and scas test mov fidivrl movsb int3 pop sbb jne adc dec mov mov sbb fcmovb sub sub jle test dec mov dec or fnstenv jbe imul sub into jno pop jp push cmpsl loopne dec inc clc inc lcall mov ret mov test cmp cltd neg test js push sbb push ja sbb or or js repnz adc push sbb fisttp sbb lcall inc add xchg jae adc sub loop in in rorb dec lock dec xor arpl hlt sbb clc outsb mov dec es dec js add pop or add sahf sub sub pop lret mov in jo push cmp xchg iret sub or mov adc hlt push nop gs mov addl mov daa cmc inc mov (bad) adc scas sahf xor out jno xchg loopne push dec in jle sub and inc cmc and xchg mov jo addr16 and add pop out sbb jno imul xchg cwtl or add push lock hlt inc xor mov mov pop aam mov pushf stos jp fdivp out push xchg mov sub fs and and fwait movsb cmp cmp add ds mov inc sbb pusha in and subl rorb (bad) dec movd sub cmc pop and mov add popf mov lret add xchg xchg pop push (bad) mov push scas dec xchg adc pop fnstcw mov fdivl shrl test and clc xchg xchg fadds xchg mov in mov and mov sbb push mov xorl inc rclb mov imul push push fcoml add shll cmp inc pop jecxz dec and into dec scas add insl pushf cmovnp in imul or push sub mov lahf pop fisttpll shl inc cli dec ja addb jp cmc (bad) scas data16 mov mov insb sub js movsb mov mov or sbb xchg lods push dec xchg and cmp dec repnz (bad) adc mov and dec mov leave mov add adc and jns xor ret cltd sbb xchg enter enter mov sub pshufw nop (bad) mov and adc movsl push mov rcr add pop int3 and inc cmp bound je xor test (bad) or faddl add xorl int3 inc (bad) je (bad) outsl jge in add je add inc cmp xor inc or pop push add sbb mov push and mov inc and and iret inc dec inc call rorb mov or icebp mov xor shrl push cwtl dec adcb pushf adc jns (bad) sbb or jae (bad) test ror nop mov adc add addps push cli add mov fldcw lock lcall outsb orb cmpsb cwtl pop xchg adc imul and inc dec ret and lret push dec inc push lea adc mov xor sub les xor hlt adc pop adcb pop es adc push scas stos xor adc or xor sbb movsb data16 push js mov aad hlt cmp bound js dec fdivrl les jnp mov adc test lds std aad sbb loopne hlt adc xor rcll adc push and test pop and mov mov sbb adc arpl (bad) div je popa mov sbb cwtl lahf (bad) ja dec ss mov push inc loopne mov fadds mov jp cwtl adc sbb gs or dec ds add popf data16 add push or add movsl and push out lds add sbb jl mov mov jl inc imul push mov dec in mov push jg adc fcomps xor jnp mov inc shrb add cmp loope mov sub inc test fwait prefetchwt1 arpl cld test loopew pop jns mov int call adc mov xchg push daa push arpl cwtl add das (bad) sbb sbb add fs mov sub inc inc shlb sub inc clc aam pop insb and out xorb cs xchg adc lods sub and fwait les stc idivl jo adc call cmovl cli add inc (bad) xor jmp lea xchg push into push inc add push mov je pushf ja xor addr16 and dec popf rolb das fdivrs aaa dec mov icebp fisubl lahf or mov add test sbb fsubs les test andb inc sbb xchg dec nop xor (bad) mov movsb ja sbb aaa xor and and icebp and xor pop sahf sub sbb mov pop jns rorb mov or push fistpl add ja xchg adc and inc add adc adc add adc divb add les inc mov outsb add dec outsl xchg and jmp lcall mov add loop ss sub mov or dec enter je mov inc sub or xor orl add in lods adc fcompl dec out mov test jae jl cmpl jo xor sub mov cli adc mov fidivrl lock add stos inc loope or sbb xor xor sbb mov jo jl out sbb loop add push fs insb shlb cli cmp pop lock push (bad) mov js jmp or rclb fdivs std push pop xchg outsl mov or or xor les call pop and pop in sbb shr cmp movsb sbb adc dec and dec mov xor push lock (bad) rolb test pop mov xchg mov sub std push mov fdivrs and jmp xor xor mov popf insb rol push (bad) inc or adc and orl movsb addr16 xor jns test hlt fsub adc outsl lods stc xor lock in jg pusha cmpsb dec mov les movsl xchg push mov leave jmp cld mov or or jle or jae add xorl mov in dec jge adcb cmp xchg subb mov aaa lods sub (bad) xor xchg add fs push inc js or xchg in dec dec hlt sbb sbb pop js lret adc aad push inc andb negb pop push xchg test mov xor or cwtl inc xchg test sbb push mov js stc test xchg pop mov call fldt cld inc sbb pop sbb pop jle enter lods fmuls adc (bad) and icebp sub inc cld jl in pop xor in xor dec hlt sbb iret (bad) push jbe push lods pop hlt inc scas dec pop pusha or or mov inc push add or js adc push lock test xor cs xchg adc rclb nop clc jo jg adc pop jle jl clc xchg add or add mov cmp cmp out mov sub add and scas lods scas std cmpsb les inc cmc in push ficomp dec or or sbb dec jg cmp iret call fistp inc adc or test in add out clc and test push add frstor cli pop movsb ffreep xchg (bad) flds mov cmc xchg fstps aas pop or jnp nop cld dec mov pop push enter in (bad) scas inc adc mov push inc cmpsl mov loop and lock mov test add bnd fimul mov mov and lret and cs adc inc adc push ficom mov mov add mov roll pushf and in cwtl or enter iret pop or leave jl or sbb xor mul sbb add clc ret xor cmp dec pushf mov js ja pop pusha inc mov loopne dec lock cwtl (bad) test adc enter sub popf sub sub adc mov and xchg add cmc negl idiv inc aam mov jp mov and test sub xlat push add sbb sahf inc lods hlt add mov inc push mov add in cwtl pop inc mov mov dec in xchg pop cmp jmp nop loope inc adc lea pushf jl (bad) popl inc adc adc and jns lock pop push sarl pushf inc (bad) inc enter mov dec inc cmp mov outsb (bad) mov add dec cmpsb cld lcall xchg add sub test xor mov push jp enter loop in lcall into mov fldenv stos (bad) ficom push lds push lock inc mov sub (bad) faddp add mov inc or popa sbb ror (bad) aad xchg push inc test fcompl xchg sub add inc adc xchg lea ja pop mov out cmp (bad) or jl mov jnp lods mov adc push or fldl pop insb push or js and into add sub nop mov cltd jge inc mov (bad) cmp pusha mov xor outsl inc sarb add mov mov divl (bad) fxch sub in stc jl push xchg pop dec push addb movsb add jne test incb int3 mov dec dec xchg cwtl dec inc cmpsl sub and mov lock sbb (bad) (bad) sar int3 dec cmp inc pop pushf adc repnz stos cwtl mov xchg rorb adc stos pop into fiadd mov (bad) cmc jmp pusha xor arpl outsl mov scas add addb mov nop push and shll (bad) sub xor aas out sbb adc cmp cmpsb jnp bound flds sarb ss jns and lahf mov jg scas mov jle mov and jg ja push lock inc dec clc jle sub and xor mov xor jo or jnp push in pusha jecxz js adc sbb inc pusha adc insb insl or sahf lods inc sbb (bad) addr16 pop inc inc xchg mov insb pushf pop test inc (bad) adc pop aad adc mov dec mov (bad) lock sbb sbb inc adc mov mov mov cld arpl and enter xor xchg mov imul decb (bad) js push and or xchg jmp mov cmpsb push or js and lcall add xchg jle rorb lods out push lods mov lcall inc xchg push adc push lahf popf add pop xchg sub inc shl inc inc mov addr16 jae popf stos inc push popa or push cmpsl inc (bad) ret adc jg lret movsb add movsb lock and ss xchg mov push xor xchg repnz pop scas lods mov add pop dec and xor data16 cmp (bad) hlt mov dec mov inc add mov push push xor xor push add loop mov inc rep popf and dec (bad) jo cmp mov xor (bad) xlat and mov jle jbe xchg sbb ds mov js and and call or pop divl mov push pop mov lahf or lods mov cmp in (bad) iret or jns insb inc (bad) push push addb pushf addl imul divb add dec cmp fistl pushf into in out lret mov mov sub or jge pop negb ss sub push mov (bad) lock xor adc cs inc or int sarl incl add add or popa cmp inc sbb call sarb push enter sub inc sbb outsl mov dec pusha dec push roll aaa sbb mov add sarb sbb or add aam cmp test mov push movsb stc mov shl lods jp orb xor inc inc push std call add icebp call sarb inc add (bad) xor mov inc xchg test inc shlb das pop movsb nop aam sbb pop outsb inc adc fsubrs daa mov lret mov inc cwtl in aam addr16 cwtl push and push mov movsl ror sub sbb sbb push repz sub adc cmpsb lret lock bound mov add inc add (bad) push scas lret lahf mov xor das in rclb mov and pop add or inc pop add mov call or pop push (bad) int3 out divb daa jp push aam pop rcrb lret lea adc sbb sbb dec aas int mov outsl and xor mov int3 sub add call lods jno mov loope insb add sbb loopne outsl add (bad) stc std and xor mov mov out sub add sbb or rorb out inc mov adc mov xor dec in pop ljmp test or or or sub mov jbe popa adc push das jae in or lcall jbe loope or popf das rol push test add push dec ss jp mov movsl notl push loope mov les mov sub pop out outsl repnz pop aas repnz mov jns cmp outsl call jns pop jb lret cmc mov in loopne adc cmpb pusha pop mov pop cmp add mov outsl outsb xor lds sbb mov sbb and in or sbb add test lea add mov xchg out mov imul rcrl push andl or (bad) hlt cmp arpl sub inc jp lcall roll mov dec test fwait xchg les pop mov or cli fmull negb xchg rcrl scas aam add jne and divb mov cmpl in xchg cmp and inc jns cmpsb cwtl or fldenv test cmp and cmpsb or fs or sbb sbb push dec fwait pop mov add push out ss andb loopne lods or loop ja sub lods cli rorb (bad) or js das adc adc dec aam repnz xchg daa or xchg sbb nop adc inc je pop jne xor xorb sub add loop pop mov ljmp sbb xchg pop imul fnstenv push daa mov xchg add dec mov pop sbb add mov jmp in subl sub sahf dec push mov sub inc adc inc jae cs cwtl cmc repnz loope mov jne idivl jl popa (bad) adc mov mov insb adc and sbb add pop adc dec mov (bad) mov cmc fbstp fs out in daa lea pop mov sbb cmp das adc (bad) jge pop xor or jecxz adcb dec xor inc out and outsl and addb add inc shl in add loopne xor sub in mov dec es cld sti adc xchg mov and popf sbb add outsb add pop xor lock sub dec mov jmp inc and mov or sbb mov aam test inc sub outsb xchg xor in xchg out mov inc mov and pop push add cmc xchg nop inc leave test jg aad mov sub push popf and mov rolb adc add pop shrl jl jno bound lds hlt sbb inc daa cld jp outsb sub or movsl lods jo jmp xor idivb xor or andl cmpsl inc icebp inc popl add xchg sub or int bound xor lret inc fisubl shrb dec insb mov js mov in lock add cmp cli xor (bad) hlt pop pop daa sbb enter mov adc stos lahf inc pop jmp add mov dec sbb (bad) aam lods mov cltd rclb push lret and xor or mov rolb adc leave push orb arpl leave mov mov mov nop imul mov pop push add outsb jmp aam loop add sahf insb and into test and xchg and ret add sub das subb pop inc cmpsb out xor sub sbb js add pop hlt mov dec pop mov cmp aas mov add fnop movsb mov add fisttp rcrb xchg daa ss les jb inc es mov imul sti lea mov ss (bad) enter shrl fisubrl push aam xor rcr or add cmpsl cmpsb fwait stc js (bad) scas add and out add dec inc cmp add add add icebp cmp or roll jecxz cltd pop lret inc xchg and push mov add ficompl push xor (bad) adc mov sub mov rolb or sub iret xchg rclb arpl popf add xor lcall add lods pusha lahf cs pusha dec mov pop jl cld push pop sub pop insb pusha sub cld mov dec scas push stos in push pop or xchg cmp add out jno bound sub fbstp dec insl cmp sub add and adc jnp inc (bad) jo (bad) daa or cwtl mov adc adc decb xor or sbb xchg sarb sub cmovl add les jmp or test adc xor ds rcr pop sti rcrb rolb lahf rcrb lds loope mov dec dec test daa in cwtl adc add mov sub or sub int3 mov or popa clc inc icebp sbb or xor or aad les bound fild mov or sbb and push lock sbb loop xchg adc adc pop adc orl stos add jne or pop fistpl dec mov xor movsl test adc push adc push in cs mov and jmp add mov push mov insl xchg add inc pop out adc cli add xchg push loop mov aaa in push out jge or in cmp cwtl into mov psraw pop xchg and sahf movl js sarb xor mov mov add clc clc push and jge lds cmc js cmpsl add lock lcall pop std mov popf fstl mov xchg mov add andb inc pop lds or and mov xchg xor rclb jae pop cmpsb pop js jecxz lret stos inc mov jg loop xchg cmp int3 js (bad) jo inc adc adc mov add jno hlt pop jnp add cmp lahf fmuls and add add loop mov rcrl clc cwtl pop mov mov inc outsl inc (bad) lock mov add ljmp ret xor adc arpl sarb sbb xor or and mov sub pushf pusha loop or je cs rolb dec test ja std inc add outsb pop mov add ret repz aad ficomp ljmp mov pop aaa adc aam mov add sbb xchg mov cmp pop paddusb push or inc movsb jae pop insl jae mov loop mov inc mov or test inc in pusha sahf clc (bad) push push or dec repnz inc push and popl dec inc jecxz (bad) mov mov push sbb int cmp mov mov inc and les js cmp and cltd cmc in adc jmp outsb add inc mov adc add pop inc mov sbb jmp inc xchg (bad) cld xor pop outsb adc mov cwtl and popa mov insb pop cmp mov pop mov popf mov mov lea jnp or pop andl in shlb es mov orb inc lret sbb pop fstpl loopne mov xor fnstcw add hlt jmp sahf std and inc ret mov lret or push add pop add repz add inc cwtl xor push cmpsl mov hlt mov cwtl add push fcoms adc orl and add pop mov scas movsb cmp or pop es cmpb xor nop aam mov mov push push test xchg add sahf inc xchg rolb pop cmp es xchg push sbb push cs loop pop push and add ljmp rorl pushf push or mov pusha js ss aaa or xor push xor pop jbe cwtl adc push mov fcomps dec mov hlt mov sahf pop xchg and xor (bad) and (bad) sbb enter ret fs ret dec pushf add lods sti scas inc mov cbtw int3 xor add int mov push sbbl call and adc les js cwtl adc sub divb add cmp adc jp sub outsl jnp dec sbb shrl cwtd pop loope cmp rcrl pusha pop mov and sbb loop dec outsb mov in adc add dec loope or loop pop sub inc xchg sahf popa shl imul in popa std pusha inc rorl xlat cli or (bad) mov pop dec jo jbe nop js add cmp fisubl inc sti scas rcl push rcrl xor cwtl pop add lds sbb outsb daa cmp inc jns sub fistl add lcall jmp test icebp inc xor lods in inc and outsb inc in cmpb pop xchg lret jbe dec cmpsb adc test jns jecxz push sub xorb cli imul (bad) pop or pop mov sbb in test sbb das push int3 add iret add sub push js les mov pop sbb push mov not mov insb mov push shr fnstcw mov imul push negb cwtl repz cwtl or jl add sbb pop add inc ss cwtl das out inc adc mov push stc and add (bad) lods leave cli movsb xor add xchg dec add mov pop adc dec in dec popf inc push (bad) and pop fadds je xchg es loopne jb push arpl push test dec mov cmpsl mov xchg pop add sar mov pop push mov loopne fdivl inc or ljmp repnz cli add test pop loop je adc rol xchg and in loopne or push add mov inc dec mov push cwtl inc enter dec mov in gs xor imul push mov mov gs imul jl sub ds or xchg mov call or pop ja sbb inc dec out add imul dec scas (bad) and xrelease inc sub fiaddl pusha or clc daa adc int3 andl jo and sahf stos inc cmp mov cwtl inc sub sahf lahf add stc pop and push pop clc dec cmpsb mov sub sbb js js mov jbe fsubrl inc jge push pop dec (bad) and xchg push sbb xchg dec add xor push ret lcall adc add push mov cli jae push into (bad) jl sbb scas and mov mov add inc popa mov sbb fidivl inc dec add hlt jp inc lods enter push dec mov jle inc insb shll jo mov into aam in push gs sbb pop fldl out adc dec test pop mov dec movsb sbbl cmp xchg lock inc enter jo pusha xor xor xchg and cmc int3 (bad) insl cmpb stos push and sbb movb int3 inc jl in lods shll dec lods xor and daa nop or inc add pop rol sbb int inc je push sub adc xchg dec addr16 subps clc and push mov inc outsb (bad) std adc mov push (bad) in (bad) les push sti jp cmpl push push ret hlt add hlt jnp enter mov sbb out rcll add fcmovne rorb push enter inc setbe pushf rclb jecxz sbb or add and sbb mulb pop repnz push sub mov cmp add xchg mov dec inc jl xlat movsb lret push movl outsb cld das mov jno push (bad) jae mov cs xchg test mov add mov shl sub call inc mov repz or mov push sub jbe adc add lds sub das (bad) leave and js addl cmc outsb jns adc cld pop enter pop ss pop xchg test loopne lahf popa and sub add xorl cmp push mov xor (bad) lret cs sub push sbb bound (bad) int3 pusha sbb push fimul test mov rcl mov dec or push imul mov mov xchg stc add fcomps fcomp jne in add sbb jno cs fs push push and loope mov add cmpsl or push scas stos (bad) fsubrs cs loop enter xchg and fmuls or or pusha in cmp popl add mov cmpsl jb mov or add in clc popf add mov lock int nop pop pop xor add in cmp and out fsub pop adc xchg or jbe cmp ds scas mov leave mov inc push roll outsb mov pop rorl cmp ss (bad) add mov fwait cmp imul cli popa les add cs lea cmp fbstp sub adc sahf in and xchg repz repnz inc scas dec cmc sbb xchg (bad) (bad) dec arpl inc dec lods sub ret imul inc pop xchg push mov out mov pop fimull jl jb idivb xor mov pusha imul sti pop mov testl addl adc jo jecxz je fs movsl jl mov add cld push xchg add mov dec clc das in fwait movsb ret clc outsl in add fs rorb fptan mov adc add (bad) mov xchg xchg outsb hlt inc imul xorl or popf cmp faddl int3 sbb mov dec shlb mov fidiv and sub or inc sti lret add pop push sbb scas jl repz lret lock adc xor lock mov loop es jmp mov xchg cwtl add inc push or push pop cmp sbbb xchg adc mov xor mov lahf fildl hlt mov roll fiadd push insl bnd hlt jb cmp adc push and and inc inc xor lds mov sahf loop add push xlat mov mov hlt xchg jo pusha lds inc sub lods push pusha cmp and inc pusha outsb fiaddl mov inc jae aad in sahf adc push xor add int3 lods sub cld xor jne sub insl std add psrlq loopne cli cmp pop imul sbb movaps fs xchg std loope and fwait mov mov pop sbb aas cmc add cltd lcall in add and and jns mov inc xor andb adc je inc xchg jno out mov xchg sbb dec lock pop adc xor shrb icebp sar add out mov rolb loop xchg push push mov pop (bad) or pop mov ljmp sbbb add jmp cmp jne movhps and sub mov call les push (bad) mov adc or dec fcmovbe or jno dec sbb dec xor stc cwtl mov movsl sub mov cmc mov and cltd cwtl and sbb mov nop lods sub xchg add mov cmp pop mov cld movsb lods pop add cmp mov mov aaa adc cmp sbb cmpsl sbb and mov pop mov (bad) and cs test (bad) rorb add js es sbb push add push push lahf add mov cmpsl mov (bad) mov add push push cmp mov xchg add jl inc popf (bad) int3 and add movsb outsb das dec addr16 push in sbb int3 pushf pop push add pop packuswb cmpsb sbb dec inc xchg cmp or in mov push nop or jo icebp inc add cmp pop (bad) out push in jmp in (bad) cmp xchg mov push mov lock fiaddl imul cmc xor or es xor xor add pusha xor in xchg idivl xchg push lcall loop aam add xchg popa xchg sti xor sbb cmp xchg imul ja or pop pop (bad) cmp push (bad) mov adc jecxz adc mov or jle add in test aaa sub mov nop mov adc in mov and mov adc les cmpsb mov nop mov push fisttpl mov pop add jl arpl insl adc dec adc dec sub mull test cs lret jo movsb mov mov enter adc mov adc cli loop add in rolb lods or mov shl cmp mov add sub (bad) hlt push xor pop inc cltd add inc mov lock sub in mov mov daa or adc dec sub push les sub add push pop pop data16 loopne add mov jns pop ret mov mov xchg nop dec dec jb addl int3 loopne add xchg mov insl sub out daa dec sbb pop movl ret pop sbb jge out dec adc mov mov mov and or mov jo adc jecxz,pn hlt nop xor (bad) insb push repz jl adc movb mov sub icebp je add sahf xor and xchg insb xor ljmp movsb fsubrl add dec adcl lock cmp dec shlb mov les jp adc pop xor scas or mov sbb jmp wrmsr jae adc xchg les mov and pushf adc sbb loopne jo add in xchg ffreep lcall sti jmp sbb mov ljmp add push into pushf and add pop push ja roll lret mov ljmp mov fimull and jp nop (bad) xor je sti pop lock sahf push inc mov xchg sbb fnop push lahf movb push imul mov outsb mov pop es cltd adc inc push add xor or outsl push mov rclb (bad) into sub lock xchg adc pushf je dec cmpsb jl pop jp idiv adc sahf push nop ror fdivr push lods push pop jnp push pop cmp loopne outsl mov decl xor push rol pop (bad) lods inc cmp sbb pop cld gs jnp inc jno aam or adc and pop cmp das fisub sub or in movsb inc add ffree xor xchg add icebp repz es mov (bad) lock mov cmp mov cmp add add rcrb daa out pop mov or adcl xchg ret push nop mov outsb inc dec sbb sbb pop es imul cmp imul push imul inc pusha pop adc inc lret insb lock push mov or orb add in sbb fisttp (bad) orl mov push and ret fisubrl xchg data16 stc outsb into test clc adc sub mov xchg xor sub iret sub in xorb stos pop pop pop jne xor in mov mov inc test das in lock jnp js fildl pushf int3 lret mov lcall nop mov pop scas mov mov lods scas (bad) stc push cmp pop sbb sbb dec add push (bad) xchg wrmsr mov out pop cmc inc xor test mov add inc (bad) aad push pop and mov push jne adc mov pop xchg hlt push xchg or and cmc push in push pop xor sbb lret out or mov inc ret add add nop ret xchg jns jg dec adc mov sbb iret adc or pop add stc mull mov inc jl add pusha dec cwtl mov cmp mov nop push (bad) and cwtl shl add pop inc jl inc or mov jno push popw mov test mov cmp cmp fwait les sbb adcb xchg add stos sub lcall or inc push (bad) jo sub mov add cmp movsb add sub sbb mov jp mov mov movsl in xchg dec sub add sub inc sub incl push sub sti xlat ja sub and mov sub pop inc lods add inc pop mov cmp pop orb in cmp push inc and bound popf and and dec xlat (bad) mov nop in scas stos bound cmp (bad) stc les inc push sarb je push cwtl mov push inc jae and inc scas cs push xchg pop clc call cmp xlat int3 or fcompl pop and out fisttp fs pop add loopne jnp dec and add cmpb and shlb cpuid xor mov ljmp push cmpb cmpl add shr loope sub fist pusha pop negl mov mov xchg adc int test xchg fwait in and in inc movsb mov push and jb fnstsw cwtl or cmpsl mov dec cwtl inc js jno ds or add cmp dec add loopne pop psubw add imul ss adc pop inc xor xchg mov add ror adc nop pop and dec pop fildll push in andb (bad) jle faddl pusha enter bound adc imul loope test aaa pop push lret loopne and ds movsl imul stos int3 loope xlat hlt js pop and movsb mov daa mov xlat test lret mov pusha jl in shrb lods pop jmp lea hlt lock lahf push call arpl pusha lods push add and sub enter push call cmpl xchg push (bad) sbb jnp mov or mov lods jge js cld test aaa add lcall call cld data16 jge mov cmp pop mov test mov mov enter and mov adc xor sub jns call add push add lds out js gs test inc inc faddl lods cltd sahf and xchg mov scas xchg sbb lea fsubs inc xor fs loopne jne or xchg lds xor or or cmp rclb pusha roll fwait cmp add les push mov das adc or xchg cwtl (bad) dec cltd sbb xlat insl and call xchg popa push sbb out adc mov cmpsl (bad) dec popa jge add xor add jb adc cmp outsl xchg fdivs sbb pop (bad) test sub sub sub cmp jns mov or and std repnz sub sbb (bad) cld sub xor dec nop mov dec sub push xor daa jo mov mov orb clc je fdivr fsubrp pop dec mov xor mov rorb jle outsb inc push mov mov cmpsl mov adc jl (bad) dec push repnz jl jb addl inc cmp test imul sub arpl cmp cmpb call push add adc test sbb pop pop mov cmpsl cmovo pop jmp push dec pop pop lock aas test xor sbb insb pop xor push mov or lock inc call sbb cmp sbb jle or test aam adc jle and in js js pop sub and sub adc nop cmp lds push in mov lahf fchs mov pop fwait (bad) (bad) or lds and mov jnp sub adc push xchg inc mov ja push and in dec adc outsb sbb lret pop inc and mov xchg fsubl adc je xchg test add dec aaa ja add mov mov add stos or lea fimul jge add scas xor lcall xchg xor xchg push fldl push jmp mov push push and or std (bad) or xor or dec popf inc xorb mov add into mov sub rolb dec rcr cwtl rcrb dec push xchg lret lea sarl and mov xchg xchg mov enter sbb sbb cmp aas sub sub sbb jmp xor lock pushf movb fcoml push mov mov hlt inc nop or or mov fbld faddl clc inc mov inc (bad) xor adc fwait test add aad ss in xor inc jne mov cld mov push orl loope mov dec fadds mov sub stos xor je fs dec add sub inc inc or cmp repnz lcall (bad) cwtl (bad) jl and mov es je add imul lods div daa pop repz inc add inc jo insl xor pop lahf rcr sti dec mov cmp (bad) sbb mov arpl or pop ret lret jmp les lock aam adcl push cmp pop add call xor inc sub int3 xor pushf mov push mov cwtl test jb ret push or cltd subb fisttpl xor add sbb shr mov dec mov xlat int in into nop enter mov stos ljmp pop insl mov or enter pop and push lahf adc fwait pop push push push or xor cmp inc inc mov sub fstpl add and push push fwait les mov fadd cwtl test arpl cmp and adc sbb xor mov jmp adcl icebp cwtl test jg push cmp cmp inc loop test stos pop cmp pusha hlt dec popa adcl repz xor aam lods dec test and mov push pop push xchg xchg or mov movsb (bad) xor mov call cwtl pop adc test jae xor ret mov or and das inc dec xor mov sbbb mov pop add inc hlt cmc das test je scas xor mov sub inc or ja or (bad) fs and dec jae mov mov pop and adc inc push sarb xchg jne and outsb and inc pop jg cmp pop into gs (bad) popa jmp cmp add dec jl and and mov (bad) push imulb pushf jl and or test push shlb call adc hlt mov pop repnz hlt leave cmp dec jge sarb hlt xchg popf push inc es cmc fdivrs pushf mov call mov mov pop testl sub dec jmp mov pop sahf push push ficompl cwtl cs dec bound and sub nop add jmp pop shl xchg idivl sbb jmp cmpsb dec hlt pushf aam jmp inc enter test (bad) lock add mov hlt cwtl push in add leave popa dec sub dec mov (bad) dec mov mov rsqrtps xchg pusha or js std add inc test push and xor (bad) adc fs add loop cld arpl mov sub test xor push add xchg mov add out loop pop data16 and rcrb inc push je or lods jae add mov pusha call pop push repz arpl lret xchg in xchg mov inc pusha adcl or addl outsb xchg sub gs pop (bad) add (bad) out bound push add push orl cwtl dec fildl push mov xchg ljmp outsb sub pop int3 push sbb insb sub add cmc cmpsb xor js add sbb mov loope test adc mov outsb (bad) xor add in mov or push mov and sub (bad) cltd rorl and pop sti or insb add push jno lret aaa mov add pop mov (bad) jb mov mov aad mov cmp int3 sub push push xchg jecxz movsl or sbb adc jno sahf inc xchg cld dec je mov sub insl push rcll sub pop xor adc lahf add xor mov xchg dec out jmp or movq sub loop lds loop or inc mov popa sbb jo dec and aam pop or stos sub sbb out sbb and arpl dec movsl adc xorl add adc inc mov out adc mov push sbb (bad) in add push aad and push push mov pop add sbb dec and and call inc outsb inc (bad) in adc stos push add lods and mov fidiv push retw mov ja sahf mov sub jae mulb movsb pusha dec out dec nopl push add add inc xor pusha test dec (bad) mov test test das pushf inc push cmp add movsb mov push pusha dec fidivrl sub mov scas (bad) insb das adc shrb push ja push dec add data16 adc and sub adc sub out imul jno cmp mov repz aam and or sub add pop xor fs and and les pop int lahf jmp cltd jl adc xchg sbb je push push mov pop icebp adc sub mov and or test call adc mov dec adc xchg pop add fdivrs pop sub jecxz adc jmp clc popl jae inc add inc aas jo push mov inc and stc inc imul and xchg mov or xor (bad) (bad) pop add data16 xchg aaa cld jl lret andb int push dec (bad) sbb sub fst or outsl nop outsb push mov mov inc dec stos jg push sub cmp mov inc push xor arpl adc aam unpckhps pusha iret dec add sbb les or sbb test mov inc jb and sub xchg (bad) int jg test adc sbb sbb pushf and aad test adc pop enter inc movsb or xchg adc jns (bad) mov or inc ja and xor pop lods stos call xor movsl fmull add cld mov add dec push insb mov push or fisubr add jne inc outsl fstl sub add jo jg adc int (bad) adc cmp (bad) cmp insb mov xorb lret add xor inc add lret xor xor adc cmp sub in ret and orb jno inc fistl pop or imul pushf sbb repz dec data16 pop jle pop ret lret repnz inc enter icebp or mov aam (bad) cli or jg add mov hlt inc in aam inc data16 repz or cmp lret cltd pop pop dec fwait sbb scas or jae adc sub loope and repz cmp movsb mov push or stc sbb fild jno rolb add push inc cmp pop add lds punpcklbw mov cmp add add bound adc outsb push xchg test loope sbb inc sbb test jmp dec or jne fcomps leave es and xor jmp jae xorl jle insb push mov sub add inc adc pop rcrb jle cltd xchg jp add sbb scas and (bad) (bad) cmpsb mov pop cmp mov adc jg sub mov int push loope imul ds push adc adc inc mov pop enter push push mov test cmp mov mov or add iret fcoms lock or movsl add insb jmp inc dec data16 test das push dec test nop mov pop or add ljmp jmp dec sbb jno movhps push xor mov push into imul cwtl push in xor xchg add fiadd repnz cmc rolb mov pop mov or dec adc jl arpl hlt (bad) adc jno test cld dec add jmp js cmp iret addb jnp lods inc dec sbb dec cltd inc call inc fucomp mov mov faddl or cli int3 int test setae push xor enter lock test dec add cmp hlt ja pop jp lret or pop into dec dec sbb xchg cmp ret pop sar popf push sbb mov mov adc fcomps pop icebp in add inc loopne lods adc call je rcr mov mov inc pop and (bad) mov xchg sub and outsl shll stos mov mov das mov mov adc pop xchg mov lcall je loop test aaa add test inc outsl in adc iret std lock xchg (bad) sbb lea shlb inc xor hlt cmp push push push ja add adc mov jae pop (bad) adc (bad) pop paddd pop in fcmovnbe ds adc adc push int3 repnz sbb std das xchg movsb test daa out repnz dec add pop add cwtl rcrl imul outsl xchg dec xor xchg inc insl jecxz call adc jbe push js lret (bad) out in jo add mov rcrl jb,pt pusha pop adc jbe or jns rolb int3 mov mov fabs add iret cmp xchg add mov inc cwtl clc loope mov push das mov jl aaa jle push adc add or leave push shl test adc popf add mov and ja pushl xchg int cltd sub mov fstpl pop add push mov push jecxz dec sub aam add xchg push sub or rcrl add push xor mov jne push add loop jge mov pusha call lret jo orl cmp fnsave rolb adc imul scas adc dec stos in pop xor nop inc adc cmpsb xchg ds lds movsb add shl mov and out cs add xchg sbb out addr16 pop sti push push arpl xchg popa roll testl sub out repnz pop loopne das subb and pop xor mov cli sub push scas in jmp aad inc mov test adc lds test add fsubl ss lret push (bad) dec xor (bad) stos mov cwtl cmp lret mov mov xchg push decl cs xor dec das cmovg mov jo pop fimull push push cmp roll mov mov stos or mov xchg iret adc cmp mov mov test add jae xor test xchg and popa outsb nop je test and call xor xor and insb mov sarb and xchg add test pop xchg int rorb sub xlat or cli bound lahf add rcr xchg lea push subb add cmp jnp mov out add mov add dec les into bound mov pop int3 cltd and mov pop xor and dec add pop mov mov loop leave je push outsb mov add insb fist cli subb pop push orb pop in add dec (bad) adc mov sbb add cmp inc cs icebp pop scas xor mov cltd jl adc sbb mov inc sub push mov inc xchg cmc inc fidivrl push sub or bnd aad and sbb push adc or jae and inc pop outsb fs pop pusha and mov xchg repnz mov sub or xor inc cmpsl pop or outsb cwtl cmp hlt and insl dec hlt pop jp sbb xor adc pop inc add leave push cmp mov (bad) or dec push loopne and (bad) jae dec xchg add lds loopne test iret inc sbbb push mov xor in xchg mov push xlat inc and pop and lea add std scas xlat jmp pusha fcmovu pop inc or push mov adc repnz and cmp std shr add add and and out lock lahf xor fsubrl repz mov dec test sub push inc add mov es and das lock sbb pop add jo pop push inc xchg add pop andl push adc ja mov add ret adc fsubr test xor and (bad) mov or dec mov leave dec add add or dec mov and inc cmpsl fldt js js cmp jge outsb cmpsb mov test aaa loope pop lret add fucomip inc mov add adc jbe stos int3 pushf push movl jae jg stc js addr16 sub mov add xorb mov pop push jb jbe cltd int3 add mov jg push push sbb pop adc cmp xchg dec outsl jge test add sub aad mov cs add popf jg cmpl insl decl mov (bad) jmp xor ljmp mov das mov adc adc imul pop ror push mov and mov rclb lahf fdiv inc (bad) ljmp std push mov add neg or jle adc (bad) cmc cwtl jo add add add pop mov push xor mov (bad) push pop pop pop mov (bad) adc push jne sub mov dec xchg mov lahf dec mov pusha scas jo jmp nop push pusha popa xor xor add pop mov (bad) ljmp pushf in xchg push mov pop test push adc or dec call je jbe int3 dec or add jae jnp adc aas mov pop dec cmp movsl sbb push sar and repz pusha ja data16 jl push and mov xor fwait subb mov push inc mov sub sbb bnd sbb xor xor or fwait movsl jne cwtl add and mov sub in dec data16 mov lahf xchg jl repz data16 or push kmovw and pop xchg lea pop pop mov mov lods push and lret mov adc fcoms aam fidivl cmp (bad) cli or xchg cwtl lret mov adc inc adc pushf push inc mov ljmp aas adc cld sub push mov push or jns dec xlat xor int adc jge add loop or mov stos in xor enter jg insl ss push std xor mov sub pop or addr16 idiv xor add pop mov jmp or adc or (bad) jnp (bad) imull or aas push mov sti jge sbb sub jne sti xchg push inc fiaddl sub jecxz ja mov imul jns pop pop inc fs push push push adc cmp adc aaa out (bad) mov int3 aaa test cmpb mov lea cmp xor adc movsb push cltd shll and leave or pop nop add xchg or xor pop mov add mov inc cmp in inc xchg xchg cmp and push int3 push mov je xchg mov xor xchg add enter mov xchg shl cmp jle sub andl sub cmp jnp mov ficom push adc mulb inc xchg push cltd add mov pop push gs push out jecxz sub outsb add inc into loope,pt dec je jmp test repnz stc int3 pusha pop dec fnstsw add push sahf cld rol pop lahf in decl cmp xchg jmp or or call pop sub push icebp mov mov addl sub adc push jg sub sbb pop jl adcl xchg push push push dec out iret jle or add push xchg fimul inc sbb add inc (bad) xchg jp add sar testl jle (bad) jno add pop push push push outsl pop fild mov mov fisttp cmp lds (bad) shrb fdivs xchg lea mov shl add repz dec pop add dec sub cmp and cmovge fnstenv out adc jecxz inc sbb xchg cli fnsave cmp lods adc ljmp xor cwtl int mov mov lock pop lock loopne adc adc xor cs xor mov pop sub shrl or xor mov push sbb pop pop adc jbe xchg push cmp push and inc or mov xchg inc stos test jle xchg or in mov fwait pop sub scas mov dec pop lock mov inc jecxz jo push push pop mov pop icebp dec lods mov pop jns push sub (bad) cmc cmpsb cmp lock xor int3 adc mov mov (bad) jg mov push popa bound shll sub ret mov das lcall jg in mov jle push dec in dec incb lcall xchg jle pusha push sub xchg pop or mov adc out add pop out pop xor xchg mov sbb jg mov xchg mov es lret sbb inc inc les jb xchg ljmp xchg lcall mov mov ret iret add jmp mov xchg lret pop xchg cmp or pop or in sub dec in inc (bad) (bad) andb roll push iret xor lret xlat insl aad insl push xchg and and jne test hlt adc (bad) fildll sbb cltd mov dec cmp (bad) (bad) and repz or mov jge xchg push pop jl xor scas pop jbe sub mov hlt cmp and push test cmp or outsl add sarl inc ficoml adc out push jo mov les aad sub test je push push shll jne sub scas pop xchg scas xchg out xlat sbb mov out push xor or dec sub ja incb push (bad) and lea mov jl pop or loope adc mov inc xor sbbl push stos ss mov sub adc or fdivr outsl fs cmp fs cmp dec fiadd and or jg addb mov sbb out insb jge loope jmp adc lret pop mov push test dec push and push push jg sahf xchg push inc movb imul rolb xlat pop call jns les lret dec xchg enter jmp push lea fidivr mov jmp jno imul mov (bad) (bad) leave or popa and pop mov adc push adcl jmp dec loop test lahf or sub add and adc in dec mov inc xor jmp pop sbb pusha mov call and jb mov bound push lods inc cltd into inc hlt fnsave jno xor (bad) push jg in mov out cmp mov xchg stos sti cmp push mov (bad) aas nop (bad) or sub push push dec cli mov and add pop mov sub cmpsb stos add inc ljmp add add pop out dec imul ror mov lods xor fwait or lds idivl cmp loope xor cmp mov popa andb inc pop inc test mov push add inc (bad) mov arpl and jno add adc sub and mov mov sub cmp add hlt outsl push clc sub cmp enter or outsb add sub mov outsl jbe sbb mov pusha push or sti cmp cmp addl cmovno cmpb insb lock ljmp je fstl fwait stos sub cmpsl iret jmp stc lret cmpsl out outsl and mov xchg out xor stos inc pop test xor push stos sbb (bad) dec sbb sub or test lcall sbb add cmp pushf stos stos inc sub test jge push adc jecxz or sbb pop inc mov (bad) mov mov mov outsb xor mov mov in cmp bound adc inc nop notb push mov mov ja xchg cwtl imul and das pop mov fimull push push pop movsl dec mov fisubl sub jge fwait mov loope and jp ljmp or add dec (bad) jns sub lock jp fimul dec scas sub xor mov dec sub test xchg lods les jns imulb or add mov es add sbb or mov dec movsb mov into cmp mov lcall pop mov jmp push in and adc cmc xchg mov cmp into or clc push mov inc movsb nop jp bound loope lods cwtl adc mov push int3 dec xchg outsl pop popf adc mov add mov js ds and pop js cmp or fdiv pusha std ret pop aas mov mov scas ja imul scas test mov imul xchg jbe pop (bad) not add mov push leave test iret jae cmp add jo jmp adc push pop xchg (bad) jmp pop orb adc dec pop sbb add add movsl adc lret sub dec mov cmpsb cs cmp xchg addb stos push add or jmp addl pushf and jg mov push out cli enter ret push adc mov (bad) sub pusha cwtl (bad) in mov xor outsl add push repnz dec add cmp out jno sbb imul iret sub cmp jp pusha imul in movb mov imul xchg in cmp subl cld aad dec cmp xchg ret pop cmp sub stc loopne jmp imul adc inc in or and hlt cmp and mov sub add imul mov pusha and add stos add adcb lea or xchg xor and sub xor clc and out cwtl cmp cmp jno aas jo mov push inc cmp or call pop push repnz fidivr add mov in pop pop jl cmp jmp push ror fcompl and cli mov push xor sub dec xor int fldl ror imul imul in leave add es pusha xchg rclb aaa xchg jg adc mov pop addr16 cmc add push mov cmp jg pushf jp and test decl add push clc imulb pusha test add mov (bad) icebp push insb lret or imul (bad) or andl adc aaa fdivrs in or cwtl idiv inc jo inc cmpl adc ss fsts notb (bad) hlt lcall jns stc adc or pop insb adc jl addl imul pop (bad) in jnp inc push push push in cmp sbb mov push adc inc and adc jno xchg xlat push add add es iret adc lcall xor add mov jg or repz insb loope ja sub adc or and inc mov mov mov sub fistpll ja aas leave or xchg mov fsubr outsl xchg dec push inc addr16 and nop cld jge jp stos cltd fcomp inc mov xchg or add push push stos pop daa sub ret adc loop inc mov sbb inc jb aaa dec pusha xor adc adc adc add stos mov pop cmp out (bad) cmc outsl arpl out dec mov pop xchg or fsubl (bad) aad xchg pushf xchg inc and mov es pop mov idivl adc cmpsb pusha ret pusha pop (bad) add rcrl daa idiv mov into jno mov jns jle jo add aas cmp scas mov icebp push add pushf cmp sub aas inc pop mov push pop adc pop or jp jo add mov (bad) sub jne sub fs sbb fwait dec sub sub mov ds pushf iret rclb mov subl add jne (bad) mov fildl mov and or add jne jns loopne and out add pusha lret ja aas and (bad) pop loop mov mov into mov ss inc and fistpl jmp mov lahf cmp (bad) mov adc fidivrl daa call int3 scas pop inc sub xchg notb or lret insb jmp add jg pop int3 add pop lcall pop inc xchg xchg push jb mov (bad) sub daa lcall adc mov inc jecxz mov scas dec xor addr16 cs sbb ficomp xchg adc je push hlt rclb (bad) push pop sbb and xor pop mov flds (bad) test inc mov adc shrb fidivrl pop daa add push mov jp outsb mov mov mov into push addl jnp jmp into dec dec pop xor pop pop das add mov gs in xchg imul add ret rcrl jg movsb and adc pop popl fistpll sbb inc pop divps pop inc xchg shrl dec push data16 lahf jb clc push sub imul cli testb add loop and add dec std pop lea pusha mov lahf shr adc push (bad) jne loopne add xchg lahf mov xchg inc js adc jle shrl mov out push and push rcrb sar add xor mov (bad) in or adc push dec cmp adc roll push pop mov outsl bnd xchg pusha add mov lods push adcb int3 lahf mov ficom pushf outsl adc ds or (bad) mov lea lods pop jge in fistpl or test test adc mov mov out sbb insl push jne out xchg cmp add push add xchg sub add aas insl jae lock push push jo adc push pop test orb enter hlt adc jmp xor or cmp negl rorl or pop cld dec push add mov pop cmp call pop daa xchg xchg cld roll cmpl inc daa dec xchg mov xchg (bad) movsb add adc mov mov sub xchg push xlat fdivs fs and test insl push push mov call idivl insb sub mov mov lods cmp mov lcall (bad) nop add (bad) (bad) pop dec (bad) push add xor push xchg pop or ret push sarb pop xor outsl loop (bad) pop dec ds ja (bad) fiaddl or inc es pop pop cmp pop push dec test addr16 push (bad) shrb mov xor jae jg je int nop (bad) mov lret aas or mov adc (bad) jle sbb mov sub (bad) loop in popa adc sbb or mov push imul adc pop and or cmpsb adc ret add fnstenv das adc pushf push xor jg mov rcll push (bad) es test test mov aas and mov mov jo jle sbbb lock xor jb mov and in add or push lock mov repnz pop test pop test mov xchg cmp inc dec test push ja (bad) stos pop ret loop pop dec xchg pop sbb and xchg andb fiaddl pusha es shr adc stos lcall fistpll add or movsb inc add push xor xor mov fidivrl rorb dec pop push inc cmp inc mov rcr loope jge mov daa jp mov add or add (bad) dec push add or jnp das aas push mov int fisubl mov mov clc mov test pop mov bound cmpsl addr16 sbb ja ret mov and imul push mov add pop pop sub addb loope lea mov sub stos je in sub ret xor das mov push xor or adc jbe push or mov rclb incl dec xchg mov popf jmp aad test sar in jbe xchg std jbe in inc dec jle push adc loopne sub in add rcrl lds push mov mov inc rcrl mov or push dec jp sub pop mov pop xchg jge xor xchg iret js fstpt mov shr mov dec leave pop outsl cld lret jg arpl or or push sub loopne lock add fdivl nop frstor or mov xorb aas pop lahf aam adc fdivs cmp jl and fisub mov push movsb jle push jmp inc and js add jnp sahf xor shr es push sarb push adc sub repnz pop mov cmp jmp adc push lcall mov and lcall rorl or adc push dec mov cmp and push mov mov dec insl out and jg das push pop dec stos sub mov mov jmp scas push inc pop mov xor fucomip cvtps2pi arpl push cmp lret sub jmp (bad) repnz cmpsl cmpsl aad in dec test dec mov add sti pop xchg adc outsl jp mov add cmp jmp xlat jecxz inc lret cld adc in repz bound (bad) mov lea pop pusha xchg insb sub pusha fcoms jmp and hlt sbb insb cltd cmp sarb cmp mov lret test or mov adc and (bad) loopne push hlt leave pushf loopne pop scas aad mov jle rcll mov cmp adcb sbb cmpl mov (bad) ss cmp daa xchg in xlat cmpsl (bad) mov in xchg add pop sub hlt lahf add or cld iret cmpsl pusha out lret dec pop pop dec inc add addr16 mov fcomi adc or das dec lea inc jecxz pusha mov sub add cmp fldcw pop cltd test pop push scas repnz lret add xor unpckhps jmp stos movsb adc pop lcall test push insb xor jmp mov push push or mov jl xor pop bound jmp scas sbb xchg push add push add test adc or pop lret push pop dec lds push add add push dec (bad) cwtl add push add xchg or push push shl pop jo inc add insb aas and pop cmp in dec pop test or mov jmp movsb adc mov cltd and add inc mov mov into sbbl addr16 push adc inc loop (bad) add leave cmp ret mov imul inc mov mov dec out jp je push dec std push mov hlt enter add push dec neg sub gs hlt movlps pop lods call nop ret and pop pop or mov sbb and jmp cli mov push inc pop sub add push mov and clc and and xor pop mov pop nop fsubs test add mov (bad) jbe jp push gs fcoms popa jl dec adcb lods leave pop cs or lar stc pop jp push add (bad) xor cmp popf add rclb push je xlat ficompl (bad) aaa sub jno add jecxz jle iret dec bound lock sub sahf inc stc cmp cltd les add push mov dec test adc in stos push (bad) pop add fdivrs or and pop int3 add sub inc fxtract pop repnz sar lock pusha xchg test ds push in mov pop mov cmp scas lods sti lods xor pop push test add pop ljmp sub pop mov xor les aad push scas pop leave cmp inc or xor inc push and sbb push push popf popa xor push std inc loope icebp dec fsubrs push push (bad) aaa sub jge xchg add cmc add rcrl flds cmp pusha push jae (bad) sbb lock ss jmp and mov stos in mov jmp jb ljmp xchg lcall and stc add or insb subb jge std and and sbb and push out adc sub mov outsb test dec out push jmp add mov add xor jl loope mov sub or out push dec inc adc adc rol and pop mov addb push into and pop mov movsb icebp xchg test out cli repz jmp les icebp push mov pop ret lcall loope xchg scas xchg repz push sbb sub jp or daa jl mov sub mov mov xor pop push push arpl out jecxz inc lods push mov and cltd test xchg js repnz mov (bad) loopne inc fs adc pusha rorl icebp pop call lcall pop repz xorl mov mov and jo inc sub imul cs pusha xor icebp pushf cmp addr16 lret pusha lret and inc popa push or cmp add int3 daa das mov repz and lock ret pop xorb movsl clc xchg and roll sbb rolb ret sbb daa negl movsb jne ja imul in (bad) mov xchg xchg mov jp ljmp inc pop add (bad) repnz xor sbb jle adc (bad) dec lea call mov jb jb and popl xchg repnz jnp cwtl jns in enter pop rorb sbb pop dec jmp sbb sub lret rclb push cmp adc sbb or iret mov fild push mov hlt lret test sbb push nop movsb mov push test ss pusha pop add mov push popf push mov add pop (bad) sahf (bad) fwait xor or inc jge lds lret inc pop push rclb xor inc mov inc vxorpd and add pop (bad) sbb into out add xor push push push inc sbb ret mov inc cmpsb cmp fisttpl inc outsl adc loopne xlat imul jge test push sti mov (bad) add ret xchg int3 aaa adc mov ret lret stos call mov sbb push xor pop stos (bad) jb call cli loopne pop arpl add mov pop mov adc xchg push lahf je cmpsl ret adc dec imul and andb repnz add jmp ja pop adc mov hlt (bad) jmp ror test push loop adc pop cwtl mov bound icebp add (bad) mov xor aas je pop dec push roll inc stos or jno or aaa inc sub sub pop adc scas mov clc cmp (bad) or in and sub push sub pop cld cmc nop push pop pop call push inc popa mov jne push xchg or sbb jo push push cmp lret stos sbb mov xchg adc pop sub xchg mov loopne xor adc aas fmuls sub int inc jp xchg test add cmp pop fildl mov daa ljmp mov cmpsb sti in jle loop sbb or (bad) clc rorl lret loop add lret lahf pop mov add fst or lret sti or std xor xor ret orb or sarl dec and jo and push jl cmp mov mov mov add dec add jle or and subl xor pop sbb sbb nop movsb stc mov mul mov sti pusha pop std sar rcrb loope xchg aas test mov and mov (bad) mov les outsl rcrl loopne (bad) je hlt loop int3 add and sub jg fimull inc mov mov pushf pop xor xchg sbb mov out jb ret and mov push data16 (bad) je add jns fstpl fildl shrb push or mov popa int xlat add movsb addb xchg mov dec ficompl sbb lods fwait aad mov mov rolb lods adc daa add into mov add cmpsb sbb test test andb in jns pop hlt pop xchg xlat or jns roll jmp arpl and cmp mov and jg xchg daa mov sbbl mov scas add test test add pop fwait xor sub cmp fidivrl dec sub cmp daa add in call enter mov and and mov sub cmp push jmp fstpl rorb lods cmp call dec sub jo and jl push loope sbb jmp mov movsb xor aad cltd test and (bad) or cwtl sub mov (bad) mov push cmc das add call into orl add jno inc and push lea rorb ret sub jns nop xchg jg sbb and xchg pop jge mov addb andb cmp stos mov jecxz xor dec rdtsc fwait xlat push add test dec loop dec jl xchg cmpsl sub fstps mov sub jno mov sahf or or adc sarl sbb or fwait aad cmp and sbbl sub daa and mov adc jmp rorl cmpsb int3 pop (bad) call jl daa das mov xor lcall pusha and icebp fcmovu jle in (bad) push rorl pop (bad) mov and sahf repz les push pusha xlat and rcrb mov cwtl fcom daa lods push mov shll clc mov mov dec mov add sahf cltd addr16 shr push nop mov sbbl insb mov add mov add (bad) cs and lds hlt es xlat cwtl sbb add mov roll add mulb mov and dec sbb rorl sub ja cmpsl addr16 sbb addr16 mov rol ljmp xorb dec (bad) xor jmp mov add aas or mov mov and sbb pop jno in add and test fstps or jmp add dec adc push fcmovb cmp add xor cmp and dec cmp (bad) add mov bound add jecxz inc mov in xchg call notb xchg mov cwtl rclb (bad) negl and cmp add scas mov fsubs scas pop pusha push ret mov imul rcl inc sub rcrb pop jne add les pop rcrb lods mov (bad) jg loopne scas pop pop add lea sbb dec loopne mov iret mov sti popa mov (bad) and add dec adc outsb shrb adcb lods push mov xchg push cmc cld (bad) int lock add popf or test les bound adc in add lahf data16 lock aam sub mov cmp sub in sbb sbb push sahf fucom fstps jle in call je mov fnsave add daa mov mov pusha imul fstpl in cwtl and and test popf jmp je xchg jno jbe or cmpsb add stos push rorb les inc sbbl xor sbb sub fsubs mov sbb xlat sbb cmp cmp xor and fbstp or adc jecxz test pop adc sbb mov ljmp add push (bad) loop hlt enter mov lcall test lods loopne pop dec out xor cltd dec mov cs and lret xchg xlat outsb mov daa sub push dec int sub and (bad) push fcomps movsb stos fmuls addr16 (bad) cmp cmpsb in sub loope add mov test cld test add pop gs cld cld cmp mov mov lock sbb jne push sub ss pop test jae mov mov mov cmp int ret or and and mov js cmp pop mov pop nop movsb add dec sbb pusha call test add movsb ret xchg inc in cmp aas adc cmp mov (bad) xlat aaa adc sbb and push adc add push aaa rclb icebp jle repz sub or mov and xchg std mov cltd lret inc mov imul add jns mov xor (bad) and add push cwtl fadds (bad) push divb add pop inc out xchg mov test adc lock imul sub loop (bad) test cs xchg mov cmpsl dec mov sbb xor icebp inc sbb negb lahf nop add int3 gs stos rorb adc das repnz mov inc (bad) xchg dec lods test fs imul push in cmpb enter add aam stc (bad) dec add lret fnstcw dec (bad) push mov mov out in loopne pop cmpb outsl xchg add mov and cld std xchg mov jmp jmp and or sub fcoml add mov sti out adc sbb mov loop inc jmp and or pop ss cld adc fwait or cwtl aam mov xchg pusha mov xchg cmp ret rol aad push shrb adc add fadds push test es es cmpb mov dec mov fs (bad) popf nop adc ds jl cmp fmuls cmp push add pop pop sub mov out and mov cwtl bound pop rol and add loopne push lock or or je fimull addb pop and adc ret pop cmp add xchg push pop std decl mov inc fcoms push adc incl jne cmp (bad) mov mov cwtl lea add sbb push mov rorl adc pushf sub test or add ret mov xchg jno int3 dec mov sub loopne xor pop fucomp js gs jl push mov mov jno add dec or rcrb add shrb xlat es jno test fadds in js pusha push sub and add mov sbb add dec fcmovbe mov orl jle cmc add cld repz jbe pusha out aas dec xchg (bad) sub sti cwtl add loopne in sbb push cwtl mov add stos call or jl add lret xor sbb daa sub mov stos xchg rolb sub jg std int pop adc cmp mov dec xchg aad jo js aam cwtl sbb mov xor repnz or loope cmpsb lods add xchg add mov adc sub cmpsb in mov push adc orb imul and lods mov test jl test xor shll sub jg sbb fcomp mov xor mov hlt and fild add data16 sahf and mov xor fs in add xlat mov cmp xor mov enter sbb mov sbb sbb int3 cli mov mov pop dec sbb mov movsb pop jbe push cmp aaa xlat xor std rorb or xchg lock jo cwtl or decb xchg loopne jnp in popl mov push and adc adc fild push mov and shrb lret push push mov add sar std das (bad) rorl sub adc add insb aas push xchg dec popf fsubl sub add sarl pushf rolb pop jo push adc xor and fdivs daa mov mov jo inc lret mov cmpsb adc sbb sbb rol sbb xor inc dec lods mov inc add jae popf jge inc mov jmp iret mov (bad) incb repnz pop sub cmp xchg push jecxz sahf mov sbb sbb mov out cmp lret add andb push cwtl fadds cmp xchg jnp inc xor mov cmp leave adc sbbl inc fsubr mov imul sti loopne rolb clc xlat popa mov fdivrl add (bad) jnp adcl mov cmp xchg ja add cli jb adc jle add cmp cmp push mov xor add xor push mov icebp lds das enter push std pushf xor mov push mov mov sbb adc lock cli jne fcoms mov dec lods inc enter lods mov aam das (bad) mov fs adc mov aad jg xchg add xor mov add fcoml int xlat and cli testl sbb cmc idivl and fdivrs add movsb or dec or je repz scas cmp test dec lods add fild or jge add sahf inc sbb sbb xchg jae pop sub adc mov in cmpsb or add inc sbb and mov fdivrs leave and dec jl or mov dec lcall and or mov xchg sahf dec clc add and cmp leave sbb sbb push or lds mov mov movsl shl loopne (bad) test shll mov dec sub clc add sahf push mov add out das test add insb cmp mov lds add in add (bad) and sarb pop jnp sub lea and mov xchg cmp add cmp nop dec sbb add and add loopne mov cmp jae jno jne stc ror addb js cmp aam rcrl inc xor aam (bad) loopne dec and call sbb mov inc mov mov and jo (bad) mov inc dec cmpsl lods sbb test pop cmp int3 jp lods (bad) enter es (bad) sbb jle dec push mov cli mov repnz popf decb add fwait mov jl cmp je in icebp stc and push decl push mov or fs adc ret jns add fisttp out adc mov xchg mov test xchg and sbb call (bad) mov out test mov nop xor int3 or inc mov add and aad loopne sbb insl add mov cmpsb push enter int3 hlt mov out jbe jnp xor test mov mov ret adcl add sahf lods scas or inc add sub xor sbb sbb dec sbb or add lahf dec cs pushf push or jns add inc cvtps2pd fidiv ss xchg fcomps jnp aaa mov add (bad) jmp adc cli (bad) std mov mov pushl cwtl in lea jecxz jg ficompl xor repz xchg inc out jecxz cmpsb movsl cld iret add orb test and and out sbb mov mov iret jnp dec inc test fisttp jne cli jmp clc jno out mov add push aaa clc jmp add aad mov inc shrb sub inc loope lods pop push mov mov test lea and std jo int shrb mov dec cmpb or cmp cmp or iret add dec jo mov mov jmp knotw jecxz add lock es psrad mov jl push orl (bad) push push cmpsb dec add cwtl sbb sub out dec jb icebp mov lds jo mov jecxz and adc aas inc icebp jge and sub or push mov sbb adcb mov lahf push aad lret xchg into pop loop xor push out push pop scas adc jle or nop jo clc rorl mov (bad) insl or xchg lods adc add push frstor mov push mulb add nop add outsb popa addb adc push mov xchg add mov push inc cmp int aam mov jb pushf xchg push ja xchg cmp fildl pop lahf dec les add fs (bad) sarb out clc cmpsb nop je test loopne subl ja dec or movsb int3 pop rorb orl push sub sbb xor jmp push jnp clc jne mov movsl (bad) movsbl jp jo test mov and cld lea out jns mov mov repnz mov mov cltd jbe out jo sti adc lds rcrb iret xlat or ljmp cmp aad xchg jg (bad) out xlat add cli dec sbb jle and and cmp or mov cli add adc inc push add pop cmp xor mov out shlb or mov addb jae mov icebp mov mov push js lahf pushf xor sahf add cmp jecxz add dec jle pushf inc nop add fwait into mov mov xchg ljmp or and sar outsl imul fmull adc add neg nop je call adc (bad) mov nop imul pop cmp cmp daa addb sbb fs or movsb add push xchg or mov push cmpsl mov pop push sub aaa jmp rolb and lret jg sbb cmp cmp test nop jns andb jae into sub add mov dec push sbb jnp repnz or es js or nop and adc das sbb ret lods test into inc sbb and add pusha add xor inc push nop jmp pop add mov jae adc cmpsb sbb add nop les jnp mov lds clc (bad) cmpsb mov movsb call mov jmp hlt movsl loopne pop inc mov roll inc in dec std stos leave mov or andl shll push add nop dec mov or cwtl cmc out mov jg out jae mov sbb mov sbb pop mov and addb cmp add cmpsb mov push push ret dec xchg and rcr or (bad) lret ror dec sub lahf mov sub pop lods pop jge cmp popf pop adc subb and jo dec ret sub or test in add cltd scas add sahf mov iret cmp sbb mov faddl adc dec lds mov (bad) aad mov ss out rcll ds xor stos dec popa fidiv aas fsubs pop (bad) movsb rclb add cmpsb sub mov lret sub addr16 lods add sbb xchg xor (bad) pop push cmp mov adc or rclb fild sbb fcoml and cli adc and and add jmp rcrl fidivrl add call sbb out mov mov ds cltd xor mov and sarb mul fs cld and mov movsl les push jo out jae push rorb sub add sbb inc pop repnz jo pop mov (bad) out xchg add xor je inc lods scas and add mov stc fmuls lahf js mov or inc push cmp int jl rep lods call (bad) repnz das (bad) js xor push mov or cmp mov cli add xchg xlat add dec xchg mov das mov rcl mov fsubl movsb add (bad) fadd sbb and dec add jae mov lret push int (bad) and jo lcall orl jnp xchg ds imull mov sub sub repz push cmp test mov aaa icebp das lret and fcomp jae add push mov loopne ficompl pop add mov mov inc loop ret mov mov test mov lcall out xchg xlat adc es loopne xchg inc xor and dec and rcrb (bad) rcll push push lahf pushf cwtl fildll sbb cmp and stos addr16 cld xchg pop leave mov inc and dec sbb vpmadcsswd call sti cmp test jb cltd add xchg fsubr daa mov test (bad) pop jle daa bound rol xchg lahf push mov test mov xchg out and mov pop imul mov enter jg pop test lds mov enter add push cld fstpt loopne lds dec scas aam mov sti adc or mov clc out and sub test fdivrl inc mov shrl and mov arpl test jae fs dec mov out sbb xchg add (bad) inc call pop push icebp shlb inc mov adc dec int rorb repnz pop iret jnp cmp sub sbb fcompl daa mov ljmp ja adc orl and (bad) adc icebp mov movsl (bad) cmp (bad) inc inc movsb and xchg and iret push cld pop cwtl aam enter mov xor lds and das xchg gs int3 lods and data16 shl out mov incl mov add inc int mov push mov add mov sub dec mov rcrb sarl cmp test and sarl add jae push cmp mov in and mov fs mov sub cwtl jge adc or add inc out cmpsl pop mov add inc int3 push inc mov das xchg mulb jne add sar push mov and or xlat mov or cmp push stos dec and mov aam sbb arpl jb clc dec aas movsb lods test mov pop shll rorb sbb jg sbb fdivr imul add jmp jae jle or inc cmp rorb jae dec aad adc je cltd sub fisttp xchg cmp loopne xchg lods mov sbb add mov push pushf mov movsl stc arpl dec lds push add mov cwtl fs or cmc sti sarb pop mov fsubrs ret or mov pop xchg imul daa sbb inc cmpsb add push leave nop loopne cmc or lock adcl push cld cwtl (bad) std rcl inc movsb and xchg mov rep pop js mov stc pusha lret or sub or mov mov push mov add roll sbb enter jo push sub (bad) or (bad) xor mov int je adc xlat dec add xchg xchg out ja and icebp and loopne cmpb pop add arpl xchg je add in in jbe lock add jmp pop js and loope inc fsubrl pushf pop or movsb adc mov mov add jl mov xorb fmul adc and add fwait cwtl sti cmp mov mov sahf int3 xchg sbb sub and cmp cmc test mov cmp in or add loopne pop clc cmp pop cmp sbb adc call sub out imul jle loopne mov inc fldl mov pop ja add jg sbb xchg add push pop and or dec dec add jns daa and sbb loop add xchg fidivrl daa pop cltd sbb insb add pop repnz cmp mov loopne and in or bound mov loopne dec int3 rorb inc subl fldt pushf test cli mov jmp mov (bad) ds adc adc roll pop push inc ficomp cmp and (bad) (bad) dec sub push nop les cmp mov pop sub adc mov mov mov adc (bad) nop mov pop push cmpb cmpsl add and mov add lods lock push xchg xchg mov imul inc movsb jo add lods mov js cmp sub into sar sbbb xchg adc xchg or test sub pop dec pusha rorb js mov dec shl push inc add add and pop rcrl hlt and sub cltd das mov in leave xlat dec outsb mov cmp add cli xor inc loop jo fild clc xor cmp add or sbbl inc inc sub lods mov movsb (bad) fmuls sub shll stos mov add cmpsb mov aam aaa add daa mov push mov adc syscall mov jmp jge dec sbb adc (bad) inc mov incb loop je (bad) lds (bad) sub xor test jo inc cmp pop add ljmp adc add mov pop js loop dec (bad) sub in cmp ret add and sub aad or fimull out mov xor mov cmp adc sub movsb cli push pmuludq fs push add outsb sbb enter cld pusha mov cld jnp call xchg xchg and cs les xlat add out and xor add ja or sbb roll push cmpsb jns cmpb jno lock sarb sub push fstpl arpl sbb rcrb mov pop loop pop je sub mov fcom adc xor inc xor add xor add int lcall cmp (bad) cmp pop dec sti inc xor sub adc sbb cli cmp (bad) mov cmp pusha or movsb enter xchg outsb sub push add stc mov nop sbb add sbb aas cmove jmp adc lods sbb mov mov sbb mov xor rcrb cmp adc or hlt addl ret xor push add mov pop push xchg mov test int shrb adc movsb stc lret cmp test xor mov loopne imul popf test pop lret jns add and and fadds push inc jmp push push aad leave cmp mov mov xor mov mov faddl xchg fdivs fisttpl cmp orl xchg cmpb fwait and fstp mov cs cmp jmp sub or add rclb sub test inc (bad) xchg sahf or xchg mov pop pusha setns pop dec pop nop popa xor jge xchg and ljmp les dec icebp cmp adc ret lods add mov incb js (bad) (bad) in ret or lcall stc shrl adc hlt repnz shrl movsb mov aam rclb je jbe jecxz xor adc jae inc aam movsb jg fcomps and add mov push add out inc push test sub ljmp les (bad) dec (bad) mov sbb movsl adc push jl push les sbbb jno repz jg xor cli mov mov mov adc sub sbb inc cmp ss dec and cwtl cmp faddp fnstcw rolb mov jp xchg fmull mov nop sub lcall dec lock fadds push push mov or mov fs add xlat add pop or mov fstpl add inc ret mov add out adcl cmp stc sbb call jae punpckhdq (bad) out xchg (bad) sti add inc adc in call in (bad) add (bad) sbb pop addb imul rolb fist xchg push mov add add out dec and or push bsf or mov je jge jl add cld sbbl sahf mov addb sub xor sbb lea cmp mov xchg mov ss sbb and scas je je and and jnp mov xor pop push push jno mov mov add mov mov push add leave adc mov cmp js pusha cmpb insb imul cmp adc jb and int int3 add js push aad ds jbe and or and and mulb gs mov xchg lods loop or jbe sbb pop fmuls and je (bad) icebp loopne in stos call nop lds and sub pusha add dec cld sbb aaa repz movsl xchg loop insb pop jb ret shrb (bad) (bad) lods ds mov sub movsb sarb test inc sarb push and (bad) js insb mov and mov add mov adc into mov stos ljmp sbbl and or cmp mov push pushf mov mov sbb adc ds add push insb stos das ljmp mov cwtl les inc shll aad faddl les or nop or adc or dec add insb addb mov lock jno js fisttp mov testl push pusha pop xor push inc adc push push jl arpl add jb push nop mov pop and mov lds fs add test adc ds loope out insl mov addb lods push sub je cmp mov int dec incl fadd icebp jo pusha jl in (bad) pcmpgtd push xchg sub push xchg mov ret and dec ljmp mov (bad) loope push icebp fs push push les mov mov cltd les adc xchg test fadd mov mov or push fist mov jb jle jmp test push xchg push int add push mov (bad) mov adc je pop addr16 lcall mov insb mov cltd std dec push ret dec out leave adc sbb or adc movsb add xchg pop ljmp sbb stos push loopne addl pushf (bad) in mov rcrb push xchg push mov adc insb mov shrb imul push add ret add mov sahf scas mov jo scas xchg add mov loop (bad) xor loopne sbb test pop add mov jno push loope aaa xor mov cltd iret xor xchg cld and jo aas test or cld mov orl cwtl pop (bad) jb call sbb popf mov out jecxz and add fs cld dec add cltd cs xchg push add std test or or scas sub mov clc cmpb jecxz add or inc fs inc sub mov je cltd subb push inc or popa addb (bad) adc pusha fnop pop imul jge cltd add push fisttpl add add lock cmpxchg mov pop xchg mov nop mov add mov rcrb shll xchg jle sbb nop xor lret xchg xchg arpl je push xor dec cmp add dec adc (bad) or pop or push sbb cmp push xchg loopne popf add icebp leave ja push jg std jnp clc movl pop jmp or inc cmp inc lret and sbb lock mov pusha ljmp dec es sbb xchg mov cs adc and aas mov push adc mov ss in add cltd mov and mov mov clc xor mov and mov cltd mov push (bad) repz insl gs out jns add clc push dec jbe sbb mov and lcall adc push inc xor movsb ds mov mov lcall mov mov add adc in es imul mov push andb cmp mov and pop test or fs test clc pop dec mov enter scas add mov (bad) and add mov addr16 (bad) mov push mov add mov push jp fsubr mov lds ds sbb mov (bad) outsb xor mov cmp sbb and push repnz in cmp enter fxtract fild nop xor cmpsb dec pushl clc jns add incb push outsl mov (bad) mov aaa jl cld test enter pop xlat addb lcall andl and and push mov pusha mov pop xchg sub mov xchg movsb mov jno in cmp inc faddl hlt cmp push add jnp xor shrl rolb clc adc inc pushf and inc mov xchg cmp dec insl cmp sub push daa mov push out add cmp add test hlt mov push cwtl out inc mov jne pop cmpsl mov lret out pop dec bound pop (bad) xor mov enter push dec flds jg mov test out adc out inc insb clc cmpb push aas add mov add loope push mov and nop push dec loopne pop imulb scas pop pop test inc xchg in add hlt dec push xchg (bad) movsb push add shlb lret mov mov cwtl fidivl mov jp add loope push push mov or mov xchg mov ror push testb in dec or leave rorl jl test or lret sub xchg leave sub xor or mov and lahf int (bad) adc lcall clc dec jg mov dec cld adc mov cmpsb dec mov lret sbb subb mov orb mov dec mov xchg int3 push push dec mov cwtl xor sbb pushf inc lods jbe pop mov add jl and dec call mov popa jnp adc (bad) lret lock mov fidiv add inc xor push inc add ss push mov fimul leave adc test nop dec add insb ss enter jl,pt add je push fcoms test js add (bad) jno ja mov mov pop mov inc daa icebp call cld xor pop fcoml xchg and xchg call dec push push ds pushf outsl push pop push dec and mov or adcb test ss xor mov or das mov xchg add and xchg arpl mov cmp push sub ret pop out (bad) jno sbb insl mov xorb call ja (bad) cmp fstl jmp pushf cmp nop cs mov and cmpl adc sub test enter jg scas inc cmc push fsubl rorl and mov mov push pop xchg jge rcll enter jb stos lret (bad) testb pop mov movsb mov add cld mov mull enter xchg cmp push dec or mov cs cmpsb xor aam psubusw test add inc mov pop pop ds xchg push dec and push push imul bound pop ret add enter and nop xor cmp cmpb andb test cwtl jg xchg arpl mov hlt push loopne dec gs mov xchg push in cli add scas xlat pop gs dec add (bad) xor add xchg push ds pop push add ja xlat icebp xor movsl mov mov test cld xor xchg lret pop ret popf cli outsb jno sbb (bad) and and je lods add lcall cmp pop add jae add mov in std movhps xchg sub mov hlt add (bad) xchg pusha es jmp xchg je push cli xchg fwait push push mov adc lcall mov arpl pushf (bad) or out outsb cmpl flds and mov xchg clc sbb pop inc inc mov inc mov popf adc enter and repz or nop or sub mov push mov stos (bad) ss clc inc and js push stos loopne push dec pusha add popa andb sbb lcall notb push inc adc mov sub mov pop push dec in inc cmp jno add xor sub mov int3 stos mov or lret imul push imul jo sarb imul lret mov arpl sbb add mov or pop cmp xchg lahf or lock xchg enter lods in mov dec mov add in pop out mov pusha xchg dec mov addr16 out ja aaa loopne inc push cmp mov inc aam sub add (bad) push mov sub aam add arpl or cwtl insb (bad) scas sbb dec test insb push mov adcl xorl adc sub mov and dec jo,pn or push pop jmp popa push movsl in add sub nop loop add lds sar ret push xor into and andb dec inc dec inc mov mov loopne mov mov fdivrl enter mov or cmp sahf cld adc push mov (bad) mov dec dec or pop and clc nop popa mov sub cmpsb mov bound pop add aaa out dec adc push sti adc shrb nop or mov ret mov cmp rep outsb sahf mov add hlt fldpi mov pop xchg (bad) mov bound loop dec pop aam nop out adc add stos lods cmp mov mov sbb scas lods test jmp fnstenv add cmpb out xlat and nop lods xchg shrb scas test fisub sbbb xchg out sbb push xor out scas mov mov xor loopne std leave cs insb pop jns (bad) jno jno cmp xor push jmp loope sub insl and adc lock xchg lock jno pop and enter add and test xor adc mov pop call cmp (bad) neg orl lcall sub movsb sahf push cmp mov adc xor inc into rcl push pop jg das je,pn movsb fimull jp pusha insb mov xor enter fstpl pop les pusha lods rorb js mov std enter out fdivs push fstl pop leave and insl gs inc xchg lods push cltd xchg icebp mull lret jno subb xor cmp aaa dec sbb xchg add in mov imul into movsl subb cwtl clc xor sbb and (bad) jmp sbb mov pop jge pop sarb in lahf out add loop nop and pop (bad) or test adc (bad) (bad) je imul (bad) loope push fcoms pop xchg arpl inc cmpl jo imul js adc or test loop cmp pop cvtps2pi orl nop mov xor dec mov test addb xchg sub in (bad) jbe add lahf xchg pop dec rclb cmp (bad) test xorl call jmp mov xchg cli andb imul and cmp pusha push and cmc add lock xchg pop lret cs in mov xor hlt or aam cltd mov add popa mov leave cmp add aam pop or dec or mov test clc add mov inc push and nop js xchg call sub sahf faddl adc push or call add pop subl adc dec sbb xlat jle mov nop or nopl roll ds outsb cld iret xor jmp mov loopne dec cmp orb call sbb dec fstpl push mov lret je inc shlb or call push sar gs cmp jmp mov movsl ret callw aad mov (bad) (bad) cmp add xchg nop mov mov jno test sub xchg push rol lahf adc and jne addr16 mov xchg sub adc xor cwtl lds fistpl stos incl lahf push mov flds sub inc push mov xchg outsl cld cld add mov mov cmc xorb pop pop inc ds pop pushl xor mov imul aaa rcr mov out fild mov cmp inc xor dec mov lahf xorb imul lods mov int cld mov sub sbb xchg push in std (bad) mov mov sahf pop lods lahf inc movsl push xor mov xor addr16 and mov dec aad fadds (bad) and cld dec push das aam mov enter mov fistpll cwtl sub pop insb jle mov loopne (bad) or and xchg or cltd mov pop and pusha cld xor aad loope ror xchg jp fcmovnb and push pop cmpl mov add test mov jecxz mulb sub mov in add lods xchg movsb inc adc pusha add js cmp (bad) cmp cmpsl jnp gs cld (bad) xor add add test or scas mov repnz push jo pop dec jl mov add mov mov movsb inc add stc bswap or popa and pop add loop movsb (bad) pop or out inc mov xor ret or fdivrs test add fcompl adc cs mov mov mov adc ret divb add push and and rcrb inc jo or cmc dec andb add out add adc mov push pop test lret dec sub addb ret and insl mov add out sub cwtl push and inc dec xor loop dec ret mov inc cmp loop shrb push jmp or sub xor adc sub and nop loop dec out add mov cwtl add or icebp movsb ljmp dec leave subb std adc dec rolb (bad) in jp dec xchg or xor add push fsubs enter mov popa lcall pop sub lret mov sbb scas sbb mov and cmp fcoml (bad) cmp add movsb sahf push or out push gs into jns pop clc pop dec rcll xchg jmp ret xchg sbb adc pop mov imul loopne nop push and nop in inc cmpsl add mov data16 or mov cmpsl jmp insb xchg mov enter cmpsb and and mov clc aad sub (bad) sub mov loop dec testl jmp repnz sub push cmp rcr push mov sub xchg je adc orl jnp sbb test std jmp test stc xor pop push add test sahf fs adc push or xor shlb inc adc push cmp gs nop xor shlb mov in xor fwait add leave xlat cmpsb add push dec cmp sub and pusha inc pushf fisttp push add mov dec iret dec pop mov mov fild rcrl loope aad xor shl xor add push rclb sbb xchg sbb rolb and dec or mov lret and enter movsb shrb push add mov cld fxch inc push mov jne scas into fsubl dec sbb nop pop push lock jnp mov shrb add (bad) icebp and data16 mov orl mov sub sub push add xchg lods sbb add sbb dec aad cltd sub cwtl orl cmp mov fisttpl push xchg add dec ljmp mov add mov lahf jo add cs push in xor aaa add lods in rcl pop xchg add push arpl mov bound test add (bad) mov cld mov xchg shlb imul insl lods es pop and in je loope jg dec clc scas cltd mov shr repz jae adc ret cmpl cmpsl add icebp xor jge lret mov adc pop (bad) mov fsubrp lods adc sub push xchg and orb sti add dec loopne jge clc adc sub jg pop pop inc cmpsl inc sub add add inc dec pushf popf and lea or mov pop ljmp jg add push cwtl int3 das dec jg jns add jge,pn mov adc fs int3 cmp mov dec lahf bound and xchg loop pop mov icebp adc mov mov and pusha nop jmp std je pop test shr xchg mov bound dec adc jo xor mov add test mov dec fimul add inc pusha xchg loop cld (bad) pop jo mov pushf loop and in or into mov fs add fdivrs pushf sbb adc mov inc aam sarb mov jo cmp out test dec push repnz jo push rol and xorl add pop fcmovne ds push jo push call rolb add mov movsb mov or lock adc push mov stos add mov cmp dec fs push xchg cs std cmp cld mov xor in or xor repnz sub sbb test fisubl enter push xchg dec or mov sub or pushf pop add stos test cmp and out popf pop xchg pushf add dec ljmp add mov mov xchg mov inc xchg stos mov daa mov inc xchg scas xchg add popa loopne int sbb pop dec bound xchg out mov add push lods mov push jmp fmul adcb mov add pushl or mov ret outsl mov cltd cvttps2pi xchg sbb mov (bad) mov mov nop xchg xchg mov mov in clc xor bnd add cmp inc push lock or cwtl rcll in adc pop and lods cmpsb clc push mov push (bad) loopne test fs inc cmp add sub mov mov xor add inc adc jl pop pop dec sbb mov inc adc and mov lds add jno scas xchg mov loopne xchg add mov nop xchg mov dec aaa rolb fistl (bad) mov and into insb mov ror outsb data16 pop lcall shl (bad) inc push mov in nop cmp push dec pop lea stos push sub inc mov mov add add call pop scas add (bad) int3 inc sub xchg cmp mov movsb add xchg iret aam inc lock add mov enter push mov xor mov mov xor gs mov loop sub dec int3 xchg ljmp pop subl add in add pop hlt sub daa push adc mov sbb aas cmp loop sub add and push addl orl and lods or addl lret sub add xchg inc jle sahf loop dec mov repnz loop shrl adc popf into sbb js into push dec push arpl xor in sub add gs aad mov (bad) js mov xchg lret es inc cld call sahf mov push add push loope addr16 fnsave cmp push adc mov xchg nop dec cld xchg mov insl movsl pusha clc divb mov adc cs and push fild mov arpl mov push repz insb inc and jl xor cmp push and call and cmpb add outsb loop push jecxz cmp test call gs cmp mov ret mov add cmp decb ud2 lods xor mov jo push cmc int add scas adc push jl loopne mov pusha and and inc mov nop pop or movsb and test and mov cmp mov jle daa or clc adc pop scas mov add or div (bad) cld jne or lcall and jo adc add push fs les das mov inc jmp add push push xor inc add fldcw sbb mov push fs mov dec push pop push clc stos roll hlt cld mov inc adc ja xchg sbb inc sbb clc xor mov popa and (bad) mov sbb pop xlat rclb sub (bad) dec add rcll mov cltd or cs loop add push fst fcoml push outsl dec ds pusha dec push or jg mov fcomp push push gs lods sbb mov pop gs les and rcrb add cmc pop ss enter popa movsb xor test je arpl mov in outsb add in fildll sub dec jne dec xchg mov in fadds push test jb push xchg popf add mov adc out xor daa nop push mov add mov cltd add or jl xor in mov mov ret xor adc inc loopne pop adc adc mov and mov add push push jle add push dec inc dec xchg in leave sarl jo (bad) into jmp test or call mov das jmp mov adc jle jns dec mov pop test mov add int3 stos dec adc add out xchg je fcmove in pop std add xor repz int addr16 mov fild mov cmpsb adc (bad) shl add fs jns mov call mov jo push out call insb push cmp les mov dec and xor push mov movsb sbb (bad) pop (bad) dec mov pop dec out (bad) pusha lcall mov mov out add xor or lods rclb jno push insb fmul ja sub xchg fdivr cmp and fnop sub inc faddl add fmuls add sahf mov les out cmp and inc cmp into addr16 adc push mov or sub push cld xor test cltd fs nop pop sub and pop fdivl sbb add ret sub js pop data16 (bad) xlat movsl adc mov dec ljmp dec in or push shlb fnstenv lret loop mov pop ficom push (bad) xor out or pop in addl nop nop xor add add imul in sub arpl gs pusha add mov push dec pop shrb inc add and inc jmp mov pop bound dec mov add xchg xchg sbb test fs cld std stos push int3 jmp lods and or and pop push sti jb add fsubrs mov mov add clc jmp add pushf add pop (bad) scas inc icebp and nop out xorb add orb adc in and mov add push std je jecxz sbb inc jo mov push lret add sub xchg aaa pop into test cmp loop ja mov xchg xchg mov or xchg pop xchg pop jnp sbb and call mov sbbb clc mov cltd daa mov inc in adcb lret add stos jno sbb lret mov and out xchg shrb cmp push mov mov adc and add cmp vrsqrtps or inc fs andb loopne (bad) pop stos std dec sbb xchg daa in add push fs imul push into dec xchg ljmp movsb int loopne inc mov add sbb ss jle pop cwtl int3 and cmp mov pop xor (bad) jmp mov sbb (bad) mov loope cmpsb jbe cmp sub inc enter inc pop rcr data16 insb outsb mov enter out mov daa int3 push in mov sti shl mov test cwtl dec inc pop inc add rclb jne in add icebp xor movsb and pop sbb mov add les mov mov xchg mov mov ret scas call xchg adc cli push sub std dec push xor (bad) jae loopne test pop (bad) mov ret roll or nop cmpsl add out sbb out mov inc popa mov dec adc mov add adc and pop into cld add jle sbb inc (bad) cmp stos jne or (bad) mov adc and (bad) repz test into add iret fwait add jecxz add xlat mov mov or cltd sub mov test adc rcrb je nop dec mov mov add lret repnz popa mov js mov add push and clc fild cmp push adc push cltd fwait or sahf scas cmp and xchg mov adc sub jmp ljmp mov jge or xor and mov mov mov data16 adc jo add inc ja adc or push scas cmp jns or in call mov mov sbb outsl pop ret add repz faddl ret ror les mov and out jl mov add jns adc push hlt inc pop (bad) xchg dec mov lcall sbb dec out add jle mov aam xor std sub and aad dec fwait adc inc mov clc jae mov dec xor cltd mov sbb xchg sbb pop fcompl and cmp xchg mov in add or xor xchg add mov jo cs cmp xchg pop and add push fnstenv sub add add push insl adc pusha cwtl sti add add sbb pop (bad) mov push xchg ljmp scas lds in sub shr jp int3 clc adc xor into dec mov shlb movsb lods add in xchg pop sti mov cmp cmp push sbb js adc cltd jle dec je dec mov cmpb cwtl mov lret js (bad) mov mov jnp dec sub insb and decb out dec loopne inc inc push mov int push stc pusha pop test push cmp lock sub mov call insb add rolb mov out ret pusha mov mov out in mov fistp add nop jae jmp add mov (bad) in pushf pop xorb fdivl stc movsl push and clc rorb pop lock mov xor ja lock mov add push jle mov das adc dec lret hlt enter je mov int3 cmp pop in sbb xchg test mov or dec je test add data16 cmp ret mov cmpsl mov add int push mov aam dec jne lock pop lods aam add mov push rorl insb scas mov daa mov aam test add jo or cli and les pop push pushf sbb sbb je adc push xchg scas nop (bad) jne adc xlat jns add test cmp in gs push add popa in roll mov adc mov lods pop pop push cs in dec inc js add xchg iret insl adc mov xor push pop pop jg fs push adc mov pop dec sub pop add fcoms call inc sub jne dec lods pushf nop mov cltd ds imul loop jmp sub xchg rclb jo sub cmpb jge xchg mov xor insl clc pop dec sbb pop or push mov mov loop mov outsb mov insb and cld add sbb loop in and dec leave nop adc rol (bad) out push jne cmp add or jl pop mov push jge inc int3 mov daa push rclb mov aad sbb addl jo sub add mov mov (bad) and mov jbe sub jns sbb add pop xor cmpsl jbe push sbbl mov mov adc cmc clc insl orl cwtl std dec jb add mov pop adc push jg mov nop orl or gs cwtl inc imul push movsb insl add scas xchg or push xchg jmp xor (bad) add mov add adc ret and add mov pop and rclb inc fldt cwtl jo dec nop sbb mov lods in rorb mov ds jae push xor mov xchg add scas push (bad) dec sub repnz jbe pop cltd cld dec repnz adc or jmp cmc mov adc mov adc add jns shrb ds out int3 imul sbb or fcmovnbe lods xchg pop out fcoml test outsb (bad) loope es scas and mov add (bad) dec pop or (bad) std dec mov hlt pop sub mov xchg inc adc bound jae fmull scas lret adc cmp add pop (bad) mov lret mov push jmp mov add rdtsc dec jae adc loopne cmp mov and add (bad) hlt xlat or dec jle leave pop call and cmp and sub fimull mov (bad) xor jno and scas les fwait (bad) rclb fstps lock fstpl mov pushf push pop outsb and sub ljmp clc mov xlat es nop inc dec inc aam xor pop mov xor ljmp pop push (bad) mov icebp movsb sub mov jbe mov test stc addr16 sub sbb pop mov cmp es dec add add cli loopne loop xchg jo dec sbb xor lsl lret adc fcomps dec adc xor movsb sbb push mov lahf out pop mov orl lahf test sub xchg hlt add jo movsb dec add fstl push push jb jbe pop cmp shr push sub scas push cmpsb enter daa scas mov pop cmp inc and ret inc add lahf lcall add xor inc pop loope sub inc jl cmp mov adc add shlb shlb hlt pop inc addb mov cltd adc sarb and sub cmpsl scas sar out ret and lret dec add pop sbb add mov lahf into add js les xchg aam ret xlat clc jno int xor out aad xchg das sti in or and fxch xor lret dec lcall jae imul pusha and lods fnstcw jbe adcl adc mov fnop adc scas or jmp loopne (bad) sarb dec mov pop lds xor jne adc sbb (bad) sbb fsubl popa push fstl dec and mov adc sub or jns mov pop push lret cmp mov add pushf mov cmp sub sub popfw leave bound jg pusha cmp xchg lods pop insl add sub sarb enter push pop pusha xor leave out or sub inc sub mov sub (bad) out js fadd js mov inc jns jp mov outsl pusha (bad) jbe shll push mov push mov push dec addr16 add mov sarl add pop sub cmpsb inc ja lods adc ror adc ret xchg rol int3 and icebp fcmovnb or inc aam imul in xchg sbb mov fiadd scas pushf fdivl cli ret ror jbe add fs ss adc cwtl stos andl out ret cwtl cs adc ss and lret ss and adc cmp pop lds or scas frstor mov jns jbe movsl and xchg add arpl in or in out mov cmp mov cmp mov adc or mov ja sarb add fwait jbe das cld popf jge fs (bad) mov mov cli stos imul jno or setge cmpb (bad) dec sbb dec icebp xor out xor dec xchg test mov or mov mov popf push xchg icebp inc cmp mov pop fdivs jle mov cmp push push mov dec test jl mov jmp mov (bad) lcall roll xor movsb cli leave push mov (bad) popa lock (bad) xchg add sub pop mov mov test js cmp aas addb sub and lock lods test scas pop push shlb subl xor ret fwait (bad) jne imul mov xor xchg push insb jecxz cmp mov mov jo xchg nop test mov add and clc cmpb dec jge cmp add dec nop push add fcomp aad push jecxz push push dec cmp js (bad) enter mov leave bound cwtl clc dec pop push mov fstps pop xor inc cwtl mov ret mov repnz ljmp add in rcl mov adc nop lock dec xchg test or dec and clc lods es jo push push inc dec enter add sbb pop jns hlt lahf in pusha imul out shrb jno sbb (bad) (bad) (bad) insb loopne outsl gs inc sub or xchg cwtl jo jp daa add dec cmp or push push fidivr leave add and mov cmp rorl hlt and faddp ret (bad) ror dec insb lcall int3 and pop cwtl sub into mov fldt stc out es test cmpsb int3 pop outsl fwait push mov stc test cltd mov xor cmp add dec test inc subb inc addb and xchg jnp ret cmp xor dec jl,pn addr16 pop xchg xor pop sub fwait add test mov or cmp add push push and cmp mov push xor sub push cmp aas or gs outsl mov fdiv add scas inc xchg insb lret test or fistpl sub aas in inc add pusha sub xor pop mov xlat loopne test adc cmpb je xor inc and and ss shl and pop ljmp jo cli sbb xor jns fcompl pop dec mov mov loope mov jmp popa addb enter jnp add fsubrs mov and aad push sbb mov adc adc mov or mov lods ja adc cmp (bad) clc imul add inc ficoml jg loopne cmp and adc cmpsb jl or sbb and and (bad) sub cwtl cmp dec add enter imulb mov adc nop add mov inc xchg ss mov pop mov push add insl xchg icebp cmp add adc std add adc push jo mov sahf lods add push cmpsl xlat shlw orb xchg icebp in or mov insb xor fdivs enter jb dec xchg cmp test loopne mov mov rcll subb xchg and jne dec enter xor adc xor inc in xchg fmuls and sub cli fistp outsb (bad) dec es insb rclb adc sbb test sub inc sub nop add mov mov int3 sub rolb popf enter addr16 or popf sbb adc out mov adc push lahf call dec push mov pusha adc mov rcll fildll faddl out shrl add sbb rolb ds test and into xchg mov inc in roll xchg out dec fldl andb nop jmp sbbb shrb test jmp fldl add and int sub add jg xor pop add shl sbb lea push imul lock mov repz fs dec xchg xchg adc push ja rcl inc fbld inc mov xor les or (bad) mov add lret lcall sub and sbb movsl or (bad) imul out xchg test std xor fld shl arpl adcl add pop dec or (bad) hlt (bad) gs leave mov or mov icebp dec dec add sbb pop mov adc mov lods or int3 jl pop scas mov cwtl nop or push add mov out stos add push sbb mov test movsb add xchg xor xchg inc sbb cmp cld push inc add mov js lods adc pop (bad) (bad) enter add rorb sahf ret xor dec mov clc add movsb movsl in cwtl dec mov nop inc push lret dec and ret xor cmp les lds ds inc pop add dec cmp fistpl push lds and xchg (bad) shrb lea cmp mov pop rclb arpl dec (bad) mov subl lahf loop shlb sbb sub inc lock jbe push scas xchg dec add push movsl mov and lret xor dec test jb shrb das sti in inc out adc nop dec dec jge pusha mov dec out insl cwtl hlt add xchg dec test mov dec pop pop shlb or adc fstpl push ret mov xor push and cmp mov cmp mov or push bound hlt xor mov aad jno pusha popf sub cld jge or sub dec push add (bad) rorb dec sbb xor add sbb dec hlt adc out loopne cmc mov js nop mov test mov incb xchg loope fs (bad) cmp sbb jnp dec loop andb pop mov les cmp test and mov test mov mov sub stc inc jl clc mov or and sub scas and xlat or adc dec js stc leave mov test jo mov mov subl push xchg test cmp mov arpl addr16 pushf pop adc and ds and mov push movsl add adc jae and lods mov mov mov lret add push je adcl mov jb adc adc repnz fnop adc or cld cmp les inc cmp mov cs out insl cltd jo dec mov push mov and data16 loope mov push rolb lret pushf xor sbbl into jb subb je push add mov popa jb add imul roll testb sub or fsubrs push (bad) enter pop into pop and inc jle es push cmovae scas jecxz xor fdivr sub or sbb cwtl inc jo test sarb sbb dec bound adc push ljmp mov mov dec dec loopne test cmp in jle nop jmp sbb loop xor jnp movsb sbb out icebp cmp in xor arpl and mov mov and loope das outsl adc mov xchg xor and les push lret dec mov adc stos mov cli mov inc add mov sub add inc daa lcall add in mov inc arpl or lds mov leave xor mov ja mov js pop jnp pop add jns rol add push push js pop test divl add mov int aad push pop push push mov icebp push pusha push (bad) xor push test push add jbe in call fwait lcall or pop xchg mov jo pop sti add cli push xchg fdivs lock adc scas mov inc sbb fisubl ret pusha mov mov (bad) fdivs fucomp sbb xor mov jo adc inc sub pop dec inc mov add ret mov test test push insb cmp fstpt adc and pop add gs fwait test daa mov hlt mov fmulp ds daa mov lods inc pop sbbb mov pushf (bad) mov and xor mov cmpsb xchg (bad) sub es dec pusha fimul adc pop andl inc jl test pop scas sub lret adc call and cmp pusha lods movsl cld add mov (bad) dec inc rorb jo inc dec jnp mov adc aaa adc mov cmp add ret adc int3 push dec ror and rol pop lods in adc jecxz push call sub inc cwtl adc xor xor sbb inc pusha inc pop js sti rorl sbb aam sbb aas lock push pop aam sub loop cmp leave movsb lods or push or dec pusha adc cmc scas icebp mov comiss addb bound mov push inc dec mov clc repnz inc out popf mov pop nop sub pop adc xor adc inc or popa jmp ds and mov incb outsb rolb mov hlt das (bad) nop jecxz push scas mov add mov and daa sub mov ljmp rolb jmp adc add and int push dec lods mov ljmp shrb adc test fcomip scas mov add push ret addb xor sub add inc ficomp mov in push inc jle add add add sbb js cltd fnstcw xor xor mov sbb rolb ds ljmp or xchg jle mov lods add mov ss ljmp sub xchg mov loop arpl insb mov dec jo cmp mov andb xchg sub inc sbb sub mov clc jl xor or ds pop pop xchg mov xchg popf loope jo inc cmp cmpsb enter sub sub mov cmpl stos sub lret sbb mov nop sbb fwait or jmp popf (bad) icebp cmpsl iret add adc dec or push mov out repnz in mov lods (bad) or or cltd jge movl mov push pop icebp ret dec add arpl add js sbb clc add xor pop (bad) xor mov es notb aas sbb add leave pop rcll sub jns neg dec inc mov fsubrs dec add cmp cmp pop push push xchg mov aas push pop or enter pushf cmc dec mov movsb add adc or xor add lret jp mov mov jne xchg ret xor and jae ja insb shll inc sbb pop cmp and add pop pop add aad mov int test fs sti mov leave decb inc xor mov mov (bad) jae popf cltd jl roll adc fistpl sub outsb add inc pushf popf icebp add pushf jns sbb inc arpl push cmp mov push pop movsb clc loope mov sub cmp sbb aaa je jmp stc aas sub ficompl and insl fs (bad) fisub dec adc cmpb xchg adcl or jb ficompl add dec add loopne les ljmp sbbb adc dec lods jmp test imul pop ljmp imul xchg pop sbb and sti cmp sbb call shl fs cwtl call or dec cmp pop cmpsl cmp popa sbb in enter je xchg pop or sub sarl or mov bound outsl les insb cmpsb or mov or sub cmp pop sbb cmp outsl mov jno movsb aaa sub lds lock ds pusha cmc movsb pop popf push (bad) std xor jns dec mov or pop pushf fsubs nop push shrb stos xor (bad) nop and adc jp pop xor lea mov aas test jae xor mov loope xor decb pop mov jo imul add sub ss cmc inc les pop mov inc pusha dec cmp dec fdivs or xor sbb in cmp lock adc fwait cmp (bad) mov dec xchg in jecxz shll dec xchg cmpsb in add pop iret je aam sub faddl insb pop in push js movsb and inc xchg jge pusha sub test nop mov pop addb fadds out cs mov repnz push rcr test mov pop cwtl add inc aaa pop dec rolb xor mov dec pop stos push dec lods adc mov dec stc mov jo inc test and and inc xchg lock xor jne js mov dec sbb and cmp test adc pop aas and fs or mov movsb arpl cmp fdivrs add movsb add fs cmpsb pop jmp rcrb mov mov and test mov mov into je (bad) stc push inc mov inc les push stos adc add cld push (bad) jo sbb mov xchg push jno pop mov lret stc add sbb jle ret add mov xor and in outsb add xchg lret mov repz xchg push int pop fistpll je sub push add mov jecxz cmp dec test pop mov pop add icebp mov mov jno clc out mov add and leave xchg push dec cmp and daa movsb orl aaa int3 cmp pop add sbb xchg xchg or (bad) inc mov pop xor dec push loope mov xor sub mov xor shrb and popf cmpb mov and ret push push movsb pusha jo (bad) mov mov and dec cmpsb fldlg2 push imul inc cld adc inc xor or std or adc jae test popf cld mov data16 sub push das (bad) in cmp (bad) mov popa jnp mov cmp out lds outsl in xor add jg loopne cld and push sub pushf jge mov dec fildl inc mov adc adc mov mov xor push pusha mov daa or mov mov stc xchg xor mov cltd nop and es movsb push sub and outsl decl and je (bad) int3 outsb ret xor lret and jne insb dec dec xchg adc enter dec sbb add push adc and push js sub mov cmp popf or test adc je je dec inc push xor call pop mov adc mov mov fstps adcl lods lds jmp popl int add push adcl subb push and xor cmp pop rorl xor mov cmp out (bad) imul mov pusha xorb or aam mov sub icebp sahf push lock mov push fsubs popf fs test xor jge or add xor not sub add (bad) les popf orb add insb (bad) jo pop loope dec push sbbb xor sub mov add push ja out arpl inc cmp into adc nop dec in xchg or lods pop pop ret dec addr16 ret or and inc push dec push push or pop xor and arpl and and pop dec jno cmp xchg sbbl adc cltd mov test ret jl lods shrb pop xchg pop adcl pushf cmpsb mov jmp adc jmp cli cmpb arpl enter mov cmp or gs sub mov cmpsb orb mov ret nop adc cmp push jge adc lods adc xchg push les jecxz adc insb sub jo mov inc out popf pop test ret push jo movsl sbb push pop mov (bad) add frstor lods cmp mov xchg inc or jge push dec cmpl stos lret mov sbb and ret jo cs mov push insb add pop or jno fs cltd push (bad) je sub mov jns fdivrl lcall add sub popa inc or ror dec (bad) movsb movsb push (bad) mov dec in aad pop loopne popa jne jnp loopne lods jmp jl and fdivr add add (bad) mov popa imul nop xor daa xchg add pop dec xor enter and (bad) jo insb fs xor ljmp cmpsl sbb dec add ret jb nop int3 pop out mov add xchg cltd fsubrl push push inc xchg xor mov pop jg and dec imul loope lret ret popf mov out push pusha out xor fiaddl ja and fcomps add add xchg mov js sbb push fdivr leave sub pusha and iret and fwait sbb cmpsl add call pop pop dec add mov and ja or rcrb cwtl call aas cwtl add xor mov pop or sahf or dec inc hlt push mov pop mov mov je xchg popa (bad) repz pop pop mov les or les cmp cwtl mov sbb nop cmp bound mov add js mov popf mov and enter xchg ret inc sbb test xor add stos mov sbb pushf lcall sbb ret adc and mov add cld popf and or add jno fs and push mov lahf mov push and jne mov xchg lds in add mov mov mov sbb cmp pop adc jne rolb or pop push or dec mov cmpsb cmp sub mov or mulb aas adc mov mov inc mov adc xchg and repnz inc push jne push or xor jae lods push pusha dec mov add decl mov xor and popa cs inc add and sub fstl leave xchg and icebp subb nop outsl in or popf les xchg repnz sbb dec mov hlt outsl fs add pop aaa std push pop cwtl pop sti adc mov push sarb add in scas sub leave add cmp arpl and and rcrl pushf cmp int3 jle insb jo jno dec jg or pop add or xchg icebp push cli jmp xchg sbb add enter arpl cwtl push add push fdivrl daa ss xchg cmp push push cmpsl inc int mov ds sbb xor sub jl push leave add push dec cmc movsl mov cmp (bad) sahf push imul jae pop in add gs xor emms (bad) test push mov push pusha fdivrs ret or outsl dec xchg push mov sub daa cmp mov pusha push pop or ja add push pop repz and pop and and xchg dec ror add popa sub push mov jb pop sub and outsl pop adc leave fwait pusha pop mov repz cmp int3 and enter mov je ja mov rolb insb outsb or in pop stos jge jno pop or cwtl ret add and (bad) mov xor jae jns icebp imul cmp lret orl cmp add int mov pop pop adc and dec movsl and (bad) fild fwait sub adc mov cwtl cwtl or mov xor fwait and loopne fdecstp fimull shlb test dec mov call push and test clc and sbb clc ret inc xor push lock push mov mov pop push je push cmp or lea or int3 dec arpl add xchg roll les add fsubrl add sbb mov mov movsl ret pop mov adc mov test imul and (bad) arpl xchg jo movsl add iret pop mov and ja or subb push ret je stc sub repz adc shld mov lahf adc cmp mov ret mov clc cmp xor jae xor fwait pop push xchg dec or lgs int3 test fcompl mov adc andb fldt dec jl fcoml adc or insl adc lods adc pop push push call (bad) cmp ret add cmp (bad) jl fdivrs adc mov mov adc test mov insb mov or xchg dec inc mov pushf mov sbb cmp xor imul mov xor push jns sub adc mov je test mov aam jbe mov mov je movsl dec dec fwait jge or pushf std dec adc loopew jae push imul pop dec inc je xchg mov jae orl or imul outsl (bad) jno adc dec xchg or aam and cmc pop jo addl sbb xchg mov add repnz add popf xor mov cmp (bad) push jl push dec mov mov in jns,pn nop mov mov xchg xchg xor pop loope adc or mov and xor add pop mov out add mov pop sbb mov ret adc xchg int3 movsl loopne rolb inc jecxz or inc sbb or push ret pop call js jno,pn ret sub mov push push lds fwait mov rolb cmp into push hlt and hlt inc dec clc xchg add sbb and mov cmp test or cmp sbb arpl imul inc ret bound ljmp sahf js dec adc mov jne xchg movsb push ret cmpsl jmp sub cmc or cli cmp cmp lcall pop adc inc add mov loopne and fiadd dec sti cmp lds test jno aad add add aam adc xchg cwtl xchg jle xorl add es sarb daa jle pop add faddl pushf js (bad) jns dec movsb cmp add adc pusha add lock inc jns pop repz lds lods jmp ds jno ret pop xor stc sarb adc addr16 pusha shr leave dec pop xor roll adc insb stc popa xchg fs add cmp and sub or cmp fwait mov jns fidivl mov pop je mov add fwait insb jg cmp les shrb pop clc add pop pop addr16 andl mov outsl pop fwait mov fdiv xchg sub stc mov and cmp mov sub fwait mov call (bad) sti popf in add jns and or pop inc push xor sahf pop cmp push and jbe int3 sub cmpsl mov add scas adc add xor addl jnp add arpl shrb pop or xor and mov and pop pushf sbb sub add pop in adc and es add xchg inc pushf (bad) repz ret les lods and mov adc inc xchg xor loope (bad) jp arpl call adc xchg (bad) mov int3 sub and inc cmp mov mov pusha stc mov mov clc cmpsb iret divl gs jp insb add jg xor gs mov cwtl or inc adc imul test push std dec push test imul lahf or and or inc pop add or popa rclb repz je roll cld inc in aas aad mov cwtl fmull inc insl aaa cld dec mov and fs shlb add and lds xchg dec cld push int3 imul andb out js js clc enter push sbb xchg pop arpl push adc sbb pop dec je dec lock cwtl pop hlt sbb test sbb adc xor add ret cmc outsl pop fsubrs or lret movsb je pop hlt add and or aad mov imul add inc cwtl sbb add or add xchg decl adc or jmp add dec fsubrs dec outsl and ret test and sub ss sub js and mov sub sub or nop push and rolb pop xor mov je add cli add cmp rcll rcr les mov pop mov cmp inc dec jg pop adc es add mov dec pop mov rcrb jle xchg bound lods fstl nop xor mov fist outsl enter adc pop js fiadd jbe pushf arpl mov ret popa ret sbb inc mov (bad) movsl add nop ficomp cld pop lret imul out fldenv sbb mov fadds or cmp add add in push inc aam or pusha out pushf fwait and inc push test sbb mov jo push cmc xchg or push or je inc inc stc jae movb mov stc xor fwait adc mov jno add ss pop out inc sti test add (bad) repz cld add or lock movb (bad) je icebp xchg mov dec enter xchg mov les sbb pop (bad) clc push xchg daa cmp and adc xchg mov xchg in adc call add pop ret call test fisubl nop or fcomp subb lret sbb add inc mov jo add jns mov sbb xchg push pop cmp push and mov lods lret (bad) enter sbb sub insl push (bad) fdivrs xlat add ret in frstor and dec cmp (bad) mov test and xor xchg dec in nop inc dec push adc pop or xchg sbb shlb ret dec je cld xchg push (bad) lret enter xor call cmp subl sub in iret adc add xchg and mov mov sub add sbb push jb sbb icebp adcb cmpsb adc mov pop (bad) lock xchg or add cmpsb addr16 or and jmp push out mov in jmp popa into jl mov pop pusha cmp mov les adc jns bound inc or xchg mov outsb sbb mov call pop adc rclb in or xchg jnp mov fwait push test jns mov jno mov cmp jbe dec test add add jno pop (bad) sahf adc or daa cmp pushf imul pop jmp jbe push and fsubrs ret test les dec out test ret mov adc mov or jne popf (bad) (bad) cmpl testb cmpsb int jo sbb add mov iret mov dec ror push cld and lods out mov sbb lahf ret pop cmc sahf test add xchg lcall adc pop popf pop mov mov dec jbe mov (bad) cs mov push add (bad) inc xchg subb leave test sbb adc push add add adc js jbe aaa mov inc pop sub mov out inc cmc stos xchg jno ljmp imul lea or xchg lods push sti add xor xor lods add adc test dec mov les xchg popl negb ja push or or or push cmp jne add or in add xchg test sbb sub add xor mov inc orb sub fildll jb rclb and andb mov jns jb xor inc xchg les jg add jp and jae int3 mov ror and dec and pop fiadd fnsave jecxz repz xor (bad) inc outsb dec add mov lret icebp cld mov mov inc inc icebp test je push loopne lret add imul nop add mov (bad) jae hlt jg fistl xchg dec aam and insl adc mov in les pop jg or add lcall lret add les fnstsw out pop dec adc imul push dec rolb pop cld paddsb sub jb dec pusha inc sbb dec cmp mov cltd aad js xchg add test mov inc cmp xchg push or movsb sbb sbb imul add lcall mov mov add add jg dec fdivl test and nop sub push push popf (bad) jbe push sub and or loop jbe inc popf add pop cmp pop xorl xchg leave sub mov push ret adc adc rorl imul mov stc jecxz cwtl lret sub adc jb js xchg rcr clc add mov mov push test jle cmp mov sti or add push in sub roll push cs push adcb pop dec mov aaa add sbb cs xchg mov inc call mov dec leave pop jno cld and sbb dec jecxz fs rorb imul xor adc push and inc mov xorps add daa dec sub sbb push xor cmp mov js add sub inc aaa les and adc cs add (bad) (bad) aam xor adc push sbb push subl mov or imul test push data16 xorl mov xchg test adc sub sbb cld mov add dec outsl jle int das nop/reserved mov and sub imul mov mov add das pop sub dec faddl push and adc dec lds test jmp jl xor xchg shlb fnstenv or pop add js loop (bad) movsl fiaddl sub ret push scas cmp xchg (bad) fcoml addb decl nop push pop pop arpl mov xchg test and xchg scas mov call cltd lock or push sbb push leave pop jp test dec mov cld xchg jge add sbb rclb aas inc movsb add add push hlt jge dec xlat test and add or jne inc mov mov out sbb dec add cltd cmp add pop (bad) out iret mov (bad) xor jb push enter lock repz mov mov or push ret sub cmp and loop xrelease xchg jo xrelease bound rcrb loop add popl push and mov inc jmp dec mov add and mov mov mov cmp (bad) pop push sub (bad) jnp aaa inc cmp cwtl xchg js add test mov lret mov sub or inc pushf mov pop loopne mov addl adc xor jl cli mov ja add add push jnp pop mov add mov dec xchg cmp jo mov sarl add outsb adc (bad) xchg loop add cld dec sub ds pop add inc inc clc addr16 inc add jmp push and test add dec out or pop mov sub ljmp pop leave add shrl outsl inc pop rorb cmc push les jo push sti in mov inc orb addr16 lcall jb xor fisubrl minps inc jle insl andps andb mov and and add dec sub pop ret scas sbb mov cmp pcmpeqd or pushf xchg add outsb inc das pop add jbe pop jl std mov sub scas cmp sbb sub (bad) fbstp inc mov loopne sbb push daa push mov in pusha test or push mov aam xchg pop xorps push inc ror jns arpl rcl xchg pop loopne jmp sbb inc sub loope mov fiaddl cmp and mov test jp pop add push ljmp scas pusha or test and pusha ss pop insb imul mov pushf shll inc gs push clc cs dec popa addr16 fadd movsb and lret or adc (bad) roll int3 add addr16 add push rdpmc lock dec mov cmp or dec loopne add pop jnp mov dec fnop movb add xor std xor cld mov loope aam push add test jo cld rolb and or sbb mov movsl add inc popa xlat mov sbb adc pop mov dec or pop mov bound cmp or pop cmp sbb add fimul adc jmp or jp mov (bad) lea out (bad) jmp and fwait negb aaa sub adc lea and cmp ds les popf pop rolb int3 add lcall nop mov in fidiv das adc bound push mov rcrl call outsl daa xchg xor das xlat sbb fiaddl cs dec mov in mov xor push es mov push dec mov xor ret add shl lds inc in push pop sub lea sbb mov and cmp adc dec inc adc add xchg add or bound sbb or das push pushf inc sub int aam dec ficompl xchg jae bnd adc or fcompp and daa push add sub push scas add (bad) mov imul dec add sub mov bound add jo notb arpl and add add push xlat and mov jge mov or lea les rcrl sub outsb aas pusha jmp mov addl jl js mov push mov es not jle sub xchg jne mov scas xor push jecxz repz pshufw push inc ss ja jmp (bad) sbb and arpl mov rcr dec push enter cltd mov or arpl add ja loop bound and cltd mov outsl test int3 mov and sbb loopne dec push or enter jne adc rolb jle mov pop add jecxz xchg into shrl cs add dec pusha (bad) or or pop inc or sub dec jnp aas adc aam outsb shrb addr16 inc mov cmp dec add sbb push dec push js int3 push and adc movsl dec xchg sbb jns and lea and data16 sarl jp ja (bad) push adc mov jne in or xchg scas adc sbb fisttp jo movb ljmp jp inc jmp xchg loope sbb or mov mov fcoml (bad) icebp add imul add pop push enter add xchg test mov mov loop add je pop add repz mov jno call shl mov fldl in mov jns jecxz or popa fwait add lret pushf inc clc popf cwtl adc aam or hlt adc jge pop in in sbb jns mov imul mov push lret imulb data16 mov enter rol subl es pop mov aad hlt sbb and jb hlt xor and fldl cmc dec lahf int lods sbb pop mov call add (bad) (bad) sbb rolb out (bad) sbb clc rcr cmpsl (bad) pop je pop jl loopne mov cs add push adc testl out dec adc scas add jmp push sbb fiaddl pop out or sbb and arpl xor mov and dec (bad) fmul clc mull dec fisubl or cld js lods and enter add gs lret xchg scas xchg adc add adc add xor ss in in pusha data16 test shll push leave out ss js pop push cltd insb jl sbb ja ret mov in fsubs xchg loopne insl lret je pop pop dec xchg mov sbb inc rcll xlat dec and (bad) daa add push cmp dec mov adc nop inc jg sub lea and aad sub cld sbb jmp mov pop push lret dec lsl inc nop mov mov xchg push push aam rolb adc dec xchg call jg pop mov jbe pmuludq (bad) adc sbb dec sub sub je push add sbb cmpsb push imul dec push mov sbb mov les add dec inc jp jbe aas test ss push sbb divl cmc push jo mov aas push jmp sbb or pop loopne pop pop push shl pop fbld push jl add sbb loope jno mov pop rorb inc xchg (bad) rorb cld mov addr16 out sbb fnsave hlt cmpb lcall and (bad) mov xchg (bad) jp mov js sub (bad) push xor mov and test rcr loope test mov cld pop add adcl cwtl jbe jns mov popa movsb (bad) push pusha adc push mov push test add int3 outsb mov xor jmp cmp or inc or dec jo add add and cmpb cmp leave sarb xlat pop jns out and aad jno and xor mov jno rorb mov adc mov push jae sbb loopne xchg jmp adc sub cwtl imul punpckhdq dec cmp mov cs add mov and ret js push loopne mov cwtl ja add in nop test aam pop in and cli js sbb mov add and inc add imul lock out ljmp add cmp arpl xlat es ds cli push mov inc pop push int3 insl cld enter xor add jecxz (bad) out or ds out push cld cmpsl add popf call notb xchg adc es sbbb inc cmp push les jl pop sbb sbb jno cwtl adc (bad) xchg mov xor inc stc mov xor xlat jb outsl inc leave jns adc lods ljmp icebp sbb xor popf xor sahf leave cld mov andl sbbb in arpl inc lods ss add (bad) cmpsb or test outsl test cmp adcl dec and mov hlt add push aad jns add adc jecxz sbb inc jb sub mov shr ret add loopne mov (bad) xor out rolb and out cmpsl inc outsb push jge mov mov (bad) jno cltd adc or inc call popa int3 adc and add jmp enter int3 or mov into push scas cmp add jne in mov and dec mov test imul repz mov dec jo mov mov cli cmp data16 sbb cmp sub sbb push jmp or insb hlt xchg call add pushf fsubs cwtl lret andl mov es sti outsb enter push add mov mov popf iret adcl ret jb sub (bad) push int (bad) mov addr16 jmp bound movsl data16 and inc lods test test arpl (bad) cld dec (bad) push pop and (bad) and arpl movl jb das wbinvd pop xchg popa mov xor (bad) hlt jecxz mov pop std xor inc adc ds sti cmpsl and xchg and xchg insb or mov adc repnz sub aad incl jno insb popa pop push fldenv je mov mov xor jle (bad) push aad fbstp pop pop add (bad) repz xor cmp arpl ja (bad) pop enter mov cmp or adcl xchg and mov inc gs add lods lret inc mov push adc lret sbb popa test inc add sbb (bad) push mov sbb add inc xchg (bad) out add ljmp add ds mov jge movsb dec adc imul inc inc sbb fstps in xchg (bad) out sbb je jge sub leave xor push sahf xor mov rcl and ficom push add xchg add jmp adc add cld and adc pop pop fist js jecxz les mov test pusha pushf and adc jg addr16 pushf pop jns nop cld add test sub adc push xor shll mov dec fwait lret cwtl dec fstps addl adc clc call add mov mov add mov negl je mov std popf adc cmp push push push stc mov flds insl jecxz sub cmp jae xchg pusha test adc xor add pushf ja cs dec cwtl daa and loopne mov icebp in mov dec jb pop and das jne inc mov xor xchg fs and mov icebp lahf mov clc xchg loopne in xor out pop mov lds sbbb lea sub add loop lcall jecxz aad push gs cld mov arpl push push test mov sub aam pop xor xchg inc js jle (bad) pop mov pushf clc popa enter testb in xchg and mov addr16 jmp bound push pop push test mov xchg aad add out inc pop popf lods xor popa jl inc (bad) repz icebp std (bad) pop push mov cld clc dec les xchg add add pushf and sub xchg pop mov ret add mov push mov ffreep (bad) jno dec das rorb mov or mov dec sub sub mov lcall adc xchg call arpl and xchg and jmp xchg outsb add icebp adc and add xor (bad) mov push (bad) mov xchg and ret out rcrb rclb add daa sti int mov add and xor scas push in stc push add cli (bad) cmc lea add das (bad) aas sbb cld mov movsb mov dec inc ljmp xchg xchg pop and or pusha rclb (bad) fsubs (bad) aam fmuls or aaa int3 push test jle fnstsw shrd and jmp js in jle add loop test cltd lcall mov jno sub leave mov mov subl mov xchg pop lods xor es push pusha rcrb cmp and mov xchg fcoml sub imul outsb push mov mov mov xchg mov nop mov lock push cmp sbb add mov das lret (bad) xor pop in sub cmp adc and je jbe mov jl shr add leave divl aam lods (bad) imul push into mov push test clc mulb jno push add sub inc add dec pop adc out inc testb addr16 jmp les scas mov aas leave (bad) lcall shlb add mov xchg add andl pop add fdivl cmp push dec movl inc push popf mov test mov mov and sti jbe test lcall es pusha arpl adc jb add scas jae (bad) push out jmp lea dec movsb fisub or sahf pushf jo call test bound fs mov jg (bad) (bad) jle mov movsb hlt push adc enter xchg sbb test loopne jg xor and cld mov cmp adcl or pop dec les mov or js and roll and mov rol add out pop cmpl (bad) or loopne (bad) mov dec stos loopne mov mov pop sub in lods adc test shlb es dec adc clc ja add jne pop adc lock cld fs dec sahf nop pop cmc xchg dec loopne lahf cli or mov lock sub xor mov rorb lret leave xor bnd fnstcw sti testl arpl mov add roll outsb add push movsb dec mov (bad) std add sub or or or jg inc cwtl and sbb or test add sub movsl xchg subb loopne push andb (bad) fcoms mov pop add mov add jo jne rcll in cmp mov enter mov jo xor mov enter mov arpl push xor lret push xchg int3 or daa (bad) mov clc xchg push orb inc outsb and pusha sub int3 push add cmp dec rolb mov xchg add sub xor ja (bad) pop xchg push mov mov cs cmp adc lods js pop mov sbb cmp lret inc cwtl adc nop sbb hlt sub repz dec push xchg test sahf call addb xor jge add sub xchg push inc es xchg cwtl inc cwtl add mov add jecxz test jo insl js stos nop mov or and popf (bad) lock add push xor into dec aad cmpsb mov out les cmp sbb mov inc push mov ljmp ret rcrb xor test add sti xchg dec pop (bad) dec mov sub loop aas addr16 add xchg shrl adc aas push cmp std pop mov gs mov sahf sub rcll addr16 jmp mov pop cmpsl push in adc add xor cwtl rcl shrb lret out dec rorl enter inc mov jge adc (bad) stos hlt jl add int pop test add lea cld sbb push push scas add fcoml push test lods add lahf jmp rcll and add or out mov add xor push std test fwait dec arpl in enter add movsl (bad) in imul bound lock mov sub ret cmp aam cwtl mov mov sub and sbb andl mov jo adc mov sahf lods pop inc jle dec ret nop icebp ds add fisubrl sub les dec into ss insb outsl cld add and daa xchg adc sub adc negl add aad je or jbe lea lods imulb mov xchg getsec pop jno add in enter pusha and sbb lock fdivs jnp movntps negl sub into or es rcll sbb pop mov inc add push xchg movsb jl or test jmp (bad) or add push (bad) lock xor and mov and fwait ja or sub mov andl mov movl dec xor or sarl dec rcrl xor push dec jmp cmp push dec mov leave (bad) mov or push pop lock dec push adc les push mov cwtl sub cmp mov test rcrl adc jl or lods add (bad) bnd jl addl pop mov or adc adc mov dec dec (bad) or lock mov push mov push lret cli dec (bad) xchg enter or add sub (bad) in popa inc adcl pop add jnp or push cmp sbb cltd xor std and shr clc loopne inc fimul out andl add add outsl cltd loope sbb fdivs (bad) adc or in or mov (bad) xor flds (bad) in call jo adc (bad) loop mov mov enter ret shl inc addb add pop push mov mov add sbb mov mov (bad) scas inc fstp (bad) mov mov js lea mov xchg mov inc daa test cltd adc pusha dec addb pop imul push xchg xchg in inc cmpsb hlt add xor mov loopne add scas or mov sbbb in xchg adc sbb and sbb add inc xchg repz cmpsb mov sbb or fwait mov mov nop push sarb stos push lods test rolb add sbb mov imul add pop inc xor mov push mov shrb xor and (bad) out outsl dec aad sub clc mov pop pushf leave adc roll mov mov jge add xchg popa dec cltd mov insb out xchg movsl and inc enter cmp jle jne mov inc loop test out add imul cltd inc and gs mov and dec xor cmp jns sub data16 lret sub or sub gs xchg mov and adc and repnz cli test aaa js lds mov test jmp inc (bad) cltd nop outsb (bad) push jns fwait (bad) rol pop rolb or pop fdivs outsb mov mov (bad) cwtl test in push jl push push mov clc dec idiv mov addr16 adc ret (bad) cwtl and cmp cmp emms cmpsb mov out lret mov scas sbb rol jno clc shll push mov clc inc ret test dec lret pop (bad) pop jl push xor mov pop cmpl ljmp lods pusha shrb push fs sub insb pusha xchg inc xor loop mov into arpl mov mov sub adc push or mov add mov test (bad) in lock sahf or jnp and nop push add xor adc (bad) push sti jecxz mov stos rol hlt xor (bad) add xchg mov les push add add divb add or mov add loop fsubs je pop mov xchg (bad) jmp fmuls loop sbb pop popf add insb inc xchg sub enter adc cmp add xchg shlb push mov sti and aas call lret add loope movsl addl jge fisub jp and jb push xchg nop inc jmp xor add xor xor and fcoml pop xor mov push mov andb xchg gs sbb adc xor outsl sub lss xchg shrl cmp rcrl (bad) jle mov jb imul daa test inc xchg data16 mov popa repz fadd mov push int3 inc movsl or xchg imul sahf aaa or clc sub cmp jecxz or xchg push mov inc cmp addr16 in aaa test enter mov pop lock adc xor aad inc jecxz (bad) enter sti cld sub push inc mov pop xchg gs sub rorb cmp add cmp adc cltd addr16 mov adc (bad) pop dec inc pushf imul push js cmp lds push dec ljmp push (bad) je add dec cmpb insb pop push and inc shrb (bad) jne cltd add fnsave xchg mov orb (bad) pop xchg clc addl adc add (bad) add mov (bad) je ds iret mov lahf pop add add rcrb je add sbb rolb jns test or ret movsl pop inc dec test loopne call mov jne orb sub cld int repnz test hlt aaa outsb pop nop mov test sbb add and rol inc inc leave test add aad push imulb mov icebp jle hlt or sahf mov lock mov fildl jecxz cmp ds mov aam jno loopne add cmpsl cwtl add jmp mov add (bad) hlt in mov rcrb stc adc popf inc cld orb fsubrl pushf fcoml rclb mov or cli je jns nop stc add mov add dec xchg pop and add or int3 adc aaa sbb mov add and dec and fs add ret mov scas dec sub cmp es in or pop mov rolb xchg scas in shlb test clc jns sbb cli push jne sbb mov popa repz pushf or cwtl mov mov (bad) hlt pop mov xor push inc xor (bad) sub dec jo pop movsl xor mov (bad) jp dec pusha pop xor xor jle inc add or push sub leave sahf mov add mov mov cmp sbb testl ret xchg mov inc leave (bad) mov test or xor inc adc mov pushf repnz dec popf xchg push sbbl mov stos adc lcall rorb add sbbb cli stc mov jns push jl xor popa stos cmp cmpsl or mov out (bad) flds bound add lret test gs xor mov leave arpl sub xor inc jo cmp cmovo rclb mov test jnp mov ret mov add cwtl fs out and (bad) mov sub and or pop outsb or jmp leave xor invd cmpl push mov and and pop ret rorl ficompl loopne call test addb in inc out pop jp sbb xchg or mov add or sbb out add je les into adc mov gs xchg cmp mov jo mov jl adc call cmp cwtl lahf mov jl negb out mov and lods nop jno stos pop cmp add (bad) push dec enter and add dec pop sub test add nop mov loop stos les int stc (bad) shlb clc push lahf icebp xor add adc jno jmp xor sahf bnd xchg push adc addb das dec adc xchg mov in inc (bad) sarb test mov pushf sbb xchg push enter mov adc mov pop rorl int3 dec mov iret sub out ja mov push add test add cli lods fwait and xor mov adc andl in add fcmovb push (bad) (bad) jmp sbb push in sub sbb rcrl adc xchg roll jno add movsl test jbe dec inc xchg jl xor cmp mov jno popf adc (bad) or add cmp popa dec sub pop jo int3 cpuid and sahf dec xchg stos and je sub jmp loopne push mov adcb popf sub or (bad) jmp xlat repnz shr xchg jo adc and ret hlt cmpsb add (bad) and mov pop xchg enter insb mov daa in jo mov jae xor mov sbb dec xor add push and popa hlt in (bad) dec cmp imul shl aad or fildl lret shll fcomps or nop inc push sub into dec inc (bad) mov lock dec xor test jb decl sahf pop and add lea xchg js sub xorl mov data16 mov repz cwtl add cwtl les call shll push decl inc fsub sbb push cmp mov scas cwtl stc dec andl pop mov add inc ja stos or inc and rolb or dec test add popf cmp call stos cwtl cmc int3 lods mov pop in jmp jb inc add repz loop scas cli enter cmp (bad) jle sar rcll lock sahf leave push push js push cmp out rorl adc lods jmp mov int3 in cld push scas les sbb adc pop push push and in test xor aaa pushf (bad) dec int insb outsb mov jns shr cwtl sbb test jns imul push mov or jecxz add outsb test je daa sti push and xchg cmp xchg lahf jne mov pop adc lods insb mov inc ret cmp fadds adc or mov sbb cli outsb add and aad loop (bad) mov in ss loopne cli or dec rcll mov adc sahf pushf popa adc push (bad) mov mov push lock out inc outsb hlt mov (bad) hlt stos xchg sbb and daa incb xchg (bad) xor push inc pop pop lret cmp push mov mov mov adc in lods xor pop nop mov loopne pop dec dec in inc mov addl xchg hlt xor stos push movsb popf sbb and push loopne push pop dec rcl fidiv pusha testl sbb mov dec jae pusha test mov cltd shrd add mov mov xor mov mov or xor cs mov sub ljmp inc imul je dec mov add pushf add leave pusha int3 dec sbb lret cmpb fcmovbe sub and jg xchg xlat adc mov pop popf push mov ljmp add ret push cmp into jbe jno cmp add dec outsl mov xorb call push sbb (bad) out and cmp mov xlat and das pop shl js shll sahf add inc jae sbb jl jnp sbb inc loop sub loop fadd or sbb and lret sub pop jno and xchg jo bound cld test es xor das addb out cwtl in jno fnstcw inc iret and stc ljmp nop call add (bad) js (bad) in lods (bad) sahf sbb out sbb and int (bad) and loopne iret add shr xor mov pusha ja test cwtl pop mov mov test xchg dec sub pop dec and inc cs out nop popa cmp jp js pop mov sarb adc daa in add int mov icebp mov loopne dec and add subl ret push (bad) adc and xchg nop dec lea and test or xor pop jl or cmc push lds sub cld test adc mov fdivrl or push dec and fstpl test (bad) loope and xchg shrb je jnp sbb lret lea aas pop notb mov xlat scas hlt fmuls or cld mov dec pop test mov add les test mov idivb and mov subl loopne shl xchg adc movsb adc lahf in cmp adc mov (bad) in mov sbb rolb push pop cli add dec in xor sub sbb pop (bad) (bad) cli push dec sahf aam popf enter pop imul andl jmp imul and mov pop push notl pop popf pop enter pop jae mov loop lock sbb loope cmp add add or hlt popf ret xchg je cmp xchg push add loope aam add in and lahf cld adc and sub add pop fidivrl pop push sbb dec ret lret ret mov les cld movsb add mov mov inc inc pop add pop xor mov add test cmp addb push jno lods enter mov in in arpl fisttpll or fwait mov mov mov dec cmp sti je pop add test in push add fsubr lods add xor in mov dec dec nop je int add xor mov dec push cld aaa int repnz sub sub add mov aad xor paddb mov mov pushf fsubs jl jle test mov inc test je sub sub pusha and add cmpl jno daa lock mov add pushf xchg je pop clc ret and ja mov fldl pop bound pop mov jo cwtl pop inc jnp or pop outsl jno sahf xchg rorl add push int ljmp bound add fisttp pushf (bad) pop rorb inc push shll movsl xchg test xchg orl outsl jb inc les sahf popa xchg (bad) out push pop mov fldcw sbb jo add jge mov mov sub inc fiaddl xor dec mov addl les xor adc or mov cld and cmp xor or in movl pusha outsb movsb xchg cltd adc sbb mov mov lret inc push das cs sub mov leave cwtl inc mov cltd popf jp dec into add movsl lret and and sbb fwait cmp lea cli es jae insb or call bound negb sub cmpl dec mov mov mov in mov cwtl or shl push nop lock push aad push jbe outsb add mov adc enter push pop aad orb nop pop and fldenv pop mov dec popf cli cmp cltd sbb les mov sbbb nop sub push mov cs dec je cld cmp add and scas xchg xor xchg inc jne stc push std hlt adc fnstsw jle decl and fs pop xchg (bad) cwtl xor in cwtl loop (bad) mov (bad) es add push andb mov clc adc je notb (bad) outsb sbb push aad sbb orb movsb and shlb daa rclb popa hlt das int3 test nop cmp pop cwtl push cmp std mov into nop mov rol mov xchg mov lret mov jb lret fld1 mov xchg push mov or in mov lcall mov data16 lea or cmpsb mov xchg or neg enter cwtl enter in sahf xor or push adc mov loope push sub addl mov xchg mov push jmp pop loope xchg int pusha and aam rorb mov lret adc mov sub cmpb dec in subb pop adc (bad) and xor fs mov bound pop lahf sti inc adc pop xchg lcall and mov repnz add ds add sbbl jmp shrl sbb mov test lahf mov sub arpl (bad) loopne in (bad) jns add mov fldl movsl (bad) mov cld int3 and jmp mov push call xchg movsb add sbb pop in rorb sub xchg pop push cs adc jmp xlat adc enter in mov mov nop ret cmp mov jl mov sub fs xchg xor mov add cmp push ret out imul roll adc push addr16 push pusha jbe subl push popf sub js popa loope xlat cli cmpsb je int3 lahf inc mov mov mov movsb jecxz test mov out lods sbbb add mov jnp or int3 hlt mov test jno sti inc insb sub xchg mov mov rclb cmpsb fsub orb and outsb pop add pop sbb add into jle pop ret loop loope clc jno inc sub lods jle add push add mov clc dec flds xchg xchg add clc fs inc sub clc mov decb clc pop int3 rolb dec mov lea xchg pushf call push hlt dec pop test mov fnop sub jae inc mov ret (bad) adc aam jg jno add xor push mov in add xchg ljmp fisttp adc mov stc lcall test xchg xchg or insb jno pusha mov add fisub pusha dec imul jne call add ds inc popa fsubrl cmp push div inc add clc cmp mov in mov mov ret call mov jbe clc jmp jns or lea cltd mov jecxz mov xor push push jbe dec lahf sbb or push or (bad) (bad) xor push mov shll (bad) pushf or and add lahf jg loop loop xor sub add test out movsb mov add mov je fadds add jnp icebp xor inc xlat and inc or gs jo add add mov and int3 fwait dec xchg or (bad) jge and fmuls push lock outsl inc inc sbb das pop out insb add cmpsl xlat xchg jbe add insb mov push pop cmp pop and mov mov mov xor or push mov enter push xchg dec ret ret rcrb push lcall pushf inc stc aad aam aam xchg jns sbb outsb fsubrs leave jl sbb or clc push mov xor in or popa push add insl mov repnz sbb xchg in hlt inc (bad) or decl int shlb repz add rorb xchg insl cld add pop out xlat inc add lea mov int out sub pusha jo lahf sub inc push test mov xchg rolb fadds movsl aam cmp mov push pusha cmp add loope adc leave out mov (bad) adc mull sahf das jo mov (bad) mov test mov add xor pushf test (bad) pop jbe push dec ret add adcl popf pop mov fsubl jp or lret popa jge daa push push mov outsb into add rol dec popa out bound jns cmp push mov daa xor shl aaa shrb mov into inc push and push or aad jno int3 adc enter adc mov leave inc sbb sarl mov loop cmp dec pop dec add push mov mov scas jbe lock push add jnp and es dec movsb sub and xor add adc dec cmp add mov adc enter mov cmp and js cs jmp je mov movsb insb jg clc and lock mov test mov mov jb lcall hlt sub clc mov rolb fwait and jg xorb addr16 dec and jp int3 and (bad) jg jae add adcb test orb and add xchg pushf jae loopne or popf sbb sbb nop push lock push sub arpl or jle test inc enter lock add call out mov add pop ja (bad) hlt sahf das popa cs or sub arpl hlt add out idivl ret push (bad) or cmp loopne inc add sub mov xchg gs lods scas push jne or inc jno inc outsl into adc mov jl lods adc adc dec (bad) sbb dec fildl cltd sub xor pop add jmp popf and push fcoms mov stos lods and sar dec dec inc mov pop scas xchg mov std enter add dec movsl movsb popf or nop in (bad) cmpsl mov push xchg outsl daa test iret sub push mov dec jle lods and or adc sub mov shll sub or negl les or ret fcmovbe xchg lahf xchg or xchg sub fwait loopne clc and pop outsb (bad) sahf mov cmp das mov jl add xchg push addb ret inc divl test mov cltd pop jl add and mov mov push xor pop add into dec mov add (bad) loopne inc pop or je jl pusha add test jnp jmp jae jo enter cmp movsb fmull arpl inc je (bad) inc mov xor jb loope call sub ret lods dec test call and lahf popa or jl mov (bad) ss test (bad) sub jns sub dec jmp jge arpl lods cmpl dec mov shll dec jmp pop and insb shrb in (bad) pop aad adc add lahf adc lods or xor lods js mov int arpl add iret dec cld hlt int3 add pop je mov je add enter leave jbe (bad) nop mov iret adc mov in loope add rcrl loop add stos pop test add enter (bad) out and mov push xchg xchg push mov dec iret mov mov cs adc or jo pop jbe xorl sbb xor sub cltd arpl jo and or hlt fstps test loope dec loopne xchg cltd jno rclb test movsb repnz pop das arpl cmpb call in sub jbe fcompl cmpsb add (bad) in sub jo insb sbb sub mov and sub roll rcll adc addl or mov nop call into xchg pop xor dec aas push adc push jne cli test push xchg push mov cmp in add lret pushl fcoml test mov and add or enter xchg and xor sbb jl jge cli mov repz lds or fs hlt hlt dec adcb push adc xchg arpl cmc dec jg sbb daa imul popf mov push ds xchg add inc add and and and adc or pop mov xchg mov aaa sub mov test leave shlb repnz add into xchg mov xchg mov sarb test adc mov lods fsubl jg sub in add (bad) icebp pop ds add xchg and push lea lock mulb push pop (bad) cmpsl sub mov icebp test jbe ret mov or rcrb leave sub ret movsb adcb insl fs fwait mov inc mov scas lret addb ljmp dec call daa jno add or daa hlt adc xchg sar jae and daa sbb (bad) mov enter and icebp mov xor jecxz or lret fs nop add dec enter out bound add nop test fmulp cli jmp stc adc fsubl or pop adc xor add xchg pcmpeqb clc push xchg add and push hlt pop inc pop je movsl cmc pop inc test sub loopne pusha lret or sub pusha cltd adc aad mov mov gs test mov xchg ja les popa (bad) pop lret je rcrl mov add mov inc test jb les push out push push (bad) add jmp pop les cltd xchg gs mov int out enter fisttpll jb fs pop cld fnstcw in rcrb mov dec push lcall mov faddl lcall and and add mov add scas fnstenv add xor decl push or paddusb ficoml pushf pop lea adc test les mov (bad) and add lret xor dec mov cld flds fisubrl fildll nop add lock adc sub pusha or pop mov lods mov stos push cwtl popf sub lahf or repnz test movsl push pushf ficomp aaa mov test add cli push pop adc xor or cmp add mov cmpsl loope loopne cltd fstl sbbb cmpb sahf stos insb subb dec xchg mov and lock add cwtl out mov dec sti in setb mov xchg mov enter adc cld arpl inc adc and push mov push xchg popa xchg lea mov sti (bad) dec dec in sub and rolb dec xor mov mov mov dec dec mov test add pop xchg push das movsl ret sbb dec out loopne out add std aam lea and mov cwtl push push out pop push mov les lret add jecxz mov sub rcrl int push je rorb fisub sbbb add out add lcall push cmp jle sbb xor fcmove loopne adc adc enter jle add push out mov hlt rcr cs cmp loope add push (bad) in pop (bad) mov and cmp ja xchg xchg push addb fwait call jle pop leave push frstpm(287 inc jns adc int movsb mov fnstenv out packsswb imul and adc inc out inc mov inc add xchg test fwait je add fisttpl jg jae lret daa mov pop mov and ret xor jo mov xchg add (bad) jns cmp out pop movsb fdivrs lds cwtl mov lret loop xor rolb cs pop rclb hlt int3 or fwait test repz stc fidiv cs das mov daa pusha add pop adc add push in dec adc hlt nop adc inc test inc cltd cmc dec addr16 xchg mov xor inc and lret in jno fwait cwtl popl push call outsl insb mov xlat jbe mov jnp loopne (bad) sub mov jbe mov jae cmp mov jae clc jbe pop add lock push movsl lret fmuls out cwtl mov shrb adc cwtl nop es adc or mov int3 cld int3 (bad) cmc xchg jb mov sbb push inc xchg push (bad) fisttp mov dec sahf mov sub cmp sbb (bad) xchg jno lods test popa test add inc inc push add mov cwtl sub aaa fisubr ds jnp mov and sbb push mov rol dec je xchg mov js xor cs add pop and dec leave cmp mov or enter pusha ret cld les lock push add call lret adc mov loopne mov mov popa mov inc add arpl mov stc lret and js movsl add neg clc mov inc arpl aad xchg call adc and dec mov je cld pop lahf sub push cmp mov repnz xor xchg add and mov and mov adc sub pushf das jae xchg fs mov lcall out mov daa mov add sbb xor call (bad) jb add ret ret andl mov insb xor addr16 fs adc pop jb pop xlat repnz bound js sub sub mov je jl in lock std jno xchg mov idiv pop pop pop mov add pop inc arpl xor popf jno pushf sbb movsl fisubrl imul sub push js adc jns add cli lds fmuls mov lock popa je scas fsubrs or bound pop sti inc xchg aas mov xchg and popf hlt mov js lock sbb sti add in dec test or ds stc and mov push popa push pop andl push cmp push adc and push jmp outsl add les das out in xor add fidivl andl mov xor sub loop or fmul fcoml pop adc mov shr (bad) inc inc mov repz lcall pop jb jno sahf stos add mov mov sub gs xchg test sbb inc jns cwtl xchg imul outsb mov insl aam mov mov and (bad) xor pop sbb add jo push add bound mov push rclb imul add xchg adc mov lcall dec iret lods es add inc inc and sar clc mov sarl lcall xchg cmp popa sub sbb mov test pop add lret inc jmp out dec xor adc daa sti loop inc ret and insl inc es movsb ljmp lods jbe mov pop sbb xchg std pop test add mov fs lahf xor cmp pop hlt pop call das sti cmpsb hlt jo jl add sbb mov pop dec cmp mov xchg mov lock pop daa cmp popa adc enter (bad) pusha xchg les and or push aam mov mov fisttp in jo (bad) ja add adc cmp push cmp xlat popa lods mov jo add cmp mov lea mov or add stc faddp hlt enter mov pop cmpsl jnp pop xlat mov fdiv movsl pop addr16 mov and dec sarl pop movsb les scas jno mov popf and xlat in outsb cmp pop mov inc (bad) in sub and mov ret push inc push and xchg xchg lock jbe mov xchg jnp cld mov enter shl pushf or popf jl fwait mov xor fnstenv cmp out adc dec prefetcht0 mov pop (bad) mov xchg clc in pop sub inc inc cmp mov popf ret ret sub loope cld inc xchg das enter sbbb pop imul sub (bad) out pushf aam cmpsb inc dec frndint add pop stc xor add fldl enter push jb mov fild int3 mov or xchg add pop mov outsl movsb add mov shrl add pop insb stos pop push adc jno or or adc mov pop sub or adc jecxz es nop jl negb test mov add movsl enter jp and sbb mov add add dec mov loopne sahf or cwtl ret inc xor repnz loop adc rep loop xor lods test js movl (bad) pop mov cwtl xor aam inc mov arpl sbb (bad) rcl lods and pop ss jmp and inc pushf inc pop out movsb mov dec sub outsb lock addr16 lea xor into add stos addr16 in pusha or inc (bad) jmp sbb add gs hlt mov mov pop inc pop inc adc adc mov adc fidiv fadd setg adc js add rorl pop aad mov pop mov add fwait loop rcrl and mov push call mov cmp push push cmpsb dec sarb add mov jle add out mov jo push fwait dec inc mov mov xor (bad) or out sub mov orb mov ds mull sub push imul push mov mov pop mov or rorl pushf fs clc adcb add fs mov dec dec fsubl lock push das push push cwtl pop (bad) sub xchg add jle and or pop mov xor inc cmc dec scas movsl push jns or dec repnz add fstpl pop arpl hlt add add popa lds jno add js xor push xor xchg sarb orb dec push mov mov fildl xchg mov lret sub rcr jmp dec movsb cmp push cld aam (bad) xchg pop inc nopl add xchg scas adc sbb pop sub xor and inc cmp mov mov xor in into add jae sub inc add mov stos faddl mov cwtl pop jno and sarb call mov clc sub mov xchg sub add call mov or ljmp add cli or dec ss dec add xchg movsb pop sbb imul jmp pushf xor xchg xor jne je push rcrl dec cmp add xor je pop dec push adc mov pop cs sbb xor lods ret shrb jg sbb and inc stos add push movsl rcll mov in fs pop push stc aaa dec mov mov and xor and sarb cs or loop and adc sti dec out les insl fmuls jmp push arpl bound mov sarl sub (bad) data16 xor in mov je je cmpsb or add mov pop or mov jno bound adc mov push in stos and sub rorl pop out das and jmp mov adc adc xchg ja,pt sub test stos xor push pop adc mov mov lahf out inc mov loopne lea cmp sub dec aam and fistpl js xchg (bad) lea imul stc shrl popa call xchg jle std jmp fisubl add or and sti xor xor jno imul cmp add pushl and and sub pop ljmp push loop xor fisttpl cmp mov aaa clc rol pop jp cmp sahf popa dec xchg sub es in test push push daa test js gs push pop jne fcoml mov mov and icebp pop sbb ret fstp dec fs mov lahf xchg icebp test mov out pop jo nop add das pop enter mov inc dec push addb fwait add mov inc mov pop addr16 fs pusha lcall mov testl mov xorb xchg pop enter (bad) mov jb xor or xor jmp fs add sbb sbb insl dec xor add dec pop cmpsl into je daa sar pushf les adc in push rorb aas pop xchg xorl repnz pop cld movsb test adc stos imul add mov movsl add int mov jl test and cld add dec xor or fs rcrb add es in std clc fwait add mov pushf das adc add cli (bad) aas adc movsb fisubr cmp std nop xor mov iret pop nop popf add mov push das mov or jo cmpsl add pop add push add add jbe das dec insl dec add mov xchg add (bad) mov je xchg shrl xchg cs mov aad push xor fcmovb jmp and cmp mov scas add and out sub mov pusha ljmp mov mov mov jnp mov add insb repz xlat or mov sbb mov or cmp imul pop loop aam pop test and cwtl pusha pop jle and das or xchg (bad) push sbb push xor enter daa cld cmpsl int pusha sub outsb add inc imull aad add mov cmp imulb in adc adc xorb jno jo pop adcb adc mov cmp leave lahf jge and and push add cmpsl mov cld in push clc jo push and or xor xchg rcl adc ljmp adc inc add gs (bad) jno jno jns sbb arpl add sbb inc fcomps imul lret roll mov xlat repnz lahf movsl nop jmp es mov mov subb in int3 lock xchg imul ret shr sar insb faddl jg inc jbe dec xor in es pop clc scas sarb jl and je rorb inc and mov test loop and mov stos xchg xlat xchg into pusha mov adc ds es in pop mov imul jg mov mov movsb and jne add mov xchg adc xor shlb push pop push add cld push test movb loopne pop outsb xchg inc out (bad) lock and mov loopne hlt test pusha repnz jnp int3 xchg jecxz aad cmp mov or push in mov lret mov dec add inc loopne roll orb or loopne jbe lcall popa popf jge rcrb je and push es stos add sahf fisubl adc or rcll loopne mov fwait rcrb cmp jns dec scas stc xor jg jnp jo dec add ret nop and cld xchg or add movsl mov sahf stos and sti jl mov inc push jecxz in xor or sub fnop lahf xorl repz aam add (bad) sub xchg mov cmp (bad) adc aaa mov pushl fmull aad xor inc add mov xchg loope psrlq das adc pusha push jmp shll paddq dec outsl xchg lret bound hlt adc ljmp popf mov mov xabort or jmp push push and cmp mov popf dec sub arpl iret (bad) out mov and nop fadds cld mov cwtl mov leave mov mov cld sahf arpl stc lcall jecxz mov add sub test sbb and mov (bad) pusha adc into pusha mov sub test add (bad) jge dec push mov das sti jno gs movsl int inc xchg and adc mov or pop push inc adc adc in add loopne mull push rol call and test sbbb sbb mov cmp jno sub adc fmuls insb or roll xor sbb test xor push push call pop ret xchg mov and sbb and ret cwtl mov push mov fs xchg sbb mov push sbb or movl mov cmp data16 rcrl pushf and pusha cmc mov popa lea rolb sbb ret mov inc push ret lock sbb ret dec adc (bad) xchg xor sub and push pop ret inc mov and ret sub mov (bad) test jmp les out jl mov mov fsubp aas and pop loop mov jmp pop xchg mov (bad) cwtl popa int3 mov call mov pop nop mov fild mov sti or dec lcall pop adc (bad) xchg mov xchg out add mov mov adc jne or xchg add push mov xlat xchg or adc pop ret and inc push ret xchg js ja add pop or out xchg jp repz mov test std jo cmp jge leave arpl add sbb addl sbb out test sbb ret and inc push ret roll andl ret adcb xchg outsb stc (bad) mov mov xchg mov jo sbb lret (bad) mov sti mov popa pop ret lret repnz sbb inc push add or dec testl sbb push shr into cmp imul xor add cs and add jl movsb xlat sarb (bad) shr lea jno pop scas jge add mov cltd rcrl ja adc sbb in call xor mov push inc add push push pusha sub cmp add icebp aad fs jbe clc xchg mov mov add and pop inc pusha or into popa (bad) adc sub xchg outsl sbb pop mov and iret and adc ficoml sbb outsl out push dec mov daa xchg dec cmp adc mov pop xchg shlb outsl adc mov loopne cwtl lods test jmp (bad) jmp jp (bad) aam and out in or mov aaa roll rolb into fcomps (bad) cltd mov ret and inc or ret xchg inc in pop sub mov mov mov jb cmc adc sbb add (bad) cmp sahf fucomip sbb cld or ds outsb or mov fisub mov mov mov rcrl sbb mov jle sub adc and add mov jbe mov popf in adc mov popa data16 or shll sbb or fsubrp iret push pop jbe sbb cmp sub or inc nop add lods or call sarb mov dec inc inc fnclex sbb dec push or jp repz lods test fcmovu add add fmull mov int3 loopne les cmp loope xchg xor add jb ret cld hlt dec sub popf pusha push jns sub sbb lret and add pop xchg mov andl adc sbb xor or loope mov pop mov add mov (bad) jmp dec inc adc or dec and xor adc inc addb nop jne rolb dec sbb faddl andb fnsave add ficompl sub sbbb xchg add rorb testl xor inc scas pop mov mov movsb mulb nop cmp and sbb or mov in sub sbb popa add aas jecxz jb mov outsl nop mov sub mov mov fwait loop (bad) je sbb cwtl pop in es dec adc adcb pop stos stc push call ja rorb pop push add jno mov mov mov les pusha pop mov idiv xor call in and repz call adc push add (bad) pushl in add out jmp mov add mov test fwait jmp fstp add mov jbe lock js push mull loope sub andb and test sahf ret jo dec pop gs jb popf push adc sbbb mov rcl loopne mov add rcr pushf dec dec xchg or adc jb or sub xorb (bad) or and xor or daa call lods leave rcr loope cmp movsb inc xor dec xchg lods pop adc nop fwait xor fist pusha sub das xchg lret mov mov xor add cmp and (bad) cld inc push mov or lcall mov push and (bad) or mov cwtl mov xor pop xchg call jb inc push inc pop inc pop adc xor cmpsb out loope and xchg push xor add cmp sub cmp nop xor add bound sbb fwait outsl int3 lods jle inc sub je xchg negl repz andl adc nop and cld ficomp xchg jbe stos inc inc pop mov fldl pusha rol adcl mov or cmp mov add rcll sub or mov and push inc push sbb xchg cmp push loopne pop cltd and fisttpl imul pusha push mov sahf sbb mov inc xorb inc icebp pop test shl ds cmpl stos pop (bad) mov ljmp sbb cmp mov fistp rdmsr inc xor fs outsl fcoms ret in popf adc mov jo sbb pusha xlat sub adc lds push mov add mov popa pop arpl outsb pushf js push int faddl pop add in or sahf cmpb cmp dec jns lods insl add or mov subb stos pop bound jne sbb jmp mov (bad) add data16 xchg adcb mov and xor out (bad) add mov in jno xor loope xchg out pusha jns pop cld add mov mov lcall in pusha loope adc add push add sub ret ret or daa fs mov add arpl push adc mov mov fiadd pushf push pusha mov xor sub add inc rorb pop jne mov mov xor (bad) mov lock sti jbe dec ficomp sub movsl jne cmpb push addb mov ljmp adc xlat add push ja push loop pop lock xor (bad) sub mov sbbb pop icebp ljmp arpl xor jp call add adc or cmp and xor cwtl adc sbb aas adc pop jbe enter push mov inc stos push scas int stos ret xchg inc push jne inc mov pop xchg jno rol negb sub (bad) test sbb out add or pop fs mov adc mov mov add sub push (bad) jns push sub inc bound mov dec popa sub lret xchg xchg push mov and test push pop js push popa ss lods cmp lret xor pop jo rclb mov lea enter or popf mov cmp loope (bad) cmc xchg lcall lcall dec loop hlt mov and sub out xchg mov jmp test jecxz lea add sub xor pop pop das sub mov fwait push xchg popf add push inc lock xchg xchg test popa jmp mov pop retw sub sub leave or sub or jp or xadd dec xchg push push sub (bad) xchg rcr (bad) xlat cwtl push xor adc add or icebp adc inc idiv jle pop xlat test popf sub (bad) pop rcrb dec add dec cltd iret popa or push adc jb loopne and enter sbb add adc cwtl jae add mov or dec dec pop in fwait mov adc mov xchg adc sub pop sbb adc and lret stc ds pushf aam push pusha rcrl lahf pusha addps xchg rcl and mov xchg sahf xor push (bad) add andb mov add scas lock (bad) aaa int loope loop jae add data16 cltd mov outsb inc fs ds xchg sbbb iret (bad) insb je out (bad) fldl2t (bad) divl or popf mov add enter sbb xlat mov inc lock daa add in mov testl and lock fwait sub pop stc sub clc lea (bad) rcrb repnz push clc inc xor pop cli into popf add test int adcl imul xchg xor negb pop (bad) mov loope sub rcl pop pop jo mov test nop mov add cmpsb add add rol mov stc xchg mov jae ret xchg adc mov jnp mov int3 adc and mov imul pop pop mov imul pop (bad) pusha inc leave add movsl idivl sub adc or mov leave enter push sarl lock mov add cs cwtl mov popf lods pop adc fmull mov add pop inc (bad) mov jb addr16 xchg lock popf cld sub orl movsb sub jg loopne adc sub scas push mov stc jmp xchg jle push loope call cmp movsl pop pusha nop fildl jl out sub lea xor xchg fsubrs repnz cltd jecxz cmp xor and xchg dec xor mov or mov mull jmp popa nop push (bad) fadds jecxz adc js dec mov (bad) xor test inc push fucomp bound sub jl inc (bad) mov stc mov dec and mov jmp pushf sub pop jns cmpsb mov mov mov nop icebp icebp roll daa ret (bad) dec mov xor out xor roll dec jno adc cltd les inc loope adc (bad) add nop scas adc add sti and cmpsl xchg sub pusha loopne lahf mov sub add jae (bad) jl popa test xor (bad) ljmp dec mov pop mov or mov testb dec xor cmp push adc (bad) push les call cmpsl mov out add lods cmp ret xchg jns orb pop xchg js mov loop data16 and add cmp call aam mov lret sub adc jmp mov add mov sbb enter mov aam sbb cmp hlt mov adc rep add fild or inc mov aad mov inc mov dec adc xor add mov lret nop dec mov (bad) ret out loopne pop stc add or sbb out add dec mov mov pusha out or lcall inc adc add scas xchg cmpsb xor in mov add jle andl and addr16 mov mov push insl lahf loopne sbb dec daa in cmp push rol mov add fild cmc mov lcall mov xorb jns or ja push cwtl cmp sub xchg mov rolb mov dec jge jnp push xchg mov pop fldcw add jl repz and enter xchg andb addb mov fildl xchg mov xchg sbb testl push xor daa hlt inc or gs loop (bad) push sub mov mov sub call imul je insl adc xchg jmp int push mov mov pop inc push ds iret pop es jl cmc das cmp dec xor aad test inc lea jg jle daa sbb push xor cmp scas sbb push mov out xchg fwait adcb adcl inc adc and rcl add daa xchg pop sub (bad) xchg sub into lods pop mov xchg jbe and xchg dec lret push jge das add ss add sarl sahf xor or adc cltd sub je adc jmp stos pop xor lds cmp out sub loop,pt and sub mov into sub sbb shrl inc push fdivrs add mov inc inc cmp andl adc (bad) cmp bound xor xor dec imul sbb dec add xor aam (bad) out add mov pop mov mov (bad) adcl cmpsl adc mov xchg cmc add nop xchg (bad) lock add std loopne ja adc xchg lcall fbstp pop xchg rcr mov jnp add (bad) mov xor loopne inc push pop jp aaa push (bad) xchg (bad) cmp roll popf (bad) dec push lret test pop std adc popa scas loope mov mov mov stos pop (bad) sti and fwait int3 jb xchg int in add outsb push and add mov inc mov cltd je lahf rcr lods fs mov push sub clc mov aas inc push (bad) rcll imul mov cmp in pop jne mov pop je fsubs out sbb (bad) fistpl jp (bad) lret add hlt or into mov xchg test (bad) mov mov adc popf mov xor sub or shrl sub cmp push lahf jno clc adc adc inc add sub cmpsb inc xchg jnp test leave xorl sub test lahf mov add cmpl mov add inc mov add jnp sbb add and subb pop cli add aaa pop in push and add jl pushf and or push iret mull arpl call lahf cmpsl sbb (bad) outsl and divb rcr adc mov add leave aas out sub xor mov add pusha xor adc sub out jno xor jne icebp jg jl arpl sti add fsts cli phaddudq (bad) and sbb pusha gs mov js fstl popf push pop out dec push mov push xor add (bad) ds in jno mov mov inc mov test push inc sbb ds mov jecxz out jmp imul cltd or add add and mov jae ljmp mov es addl stos dec add pusha mov sbb xor rclb and (bad) and dec lcall test loope sbbl call sub mov jno out mov or lock rcrb push and push inc mov mov leave shl call adc xchg aad pop push pusha add mov mov cmp add add stos sbb and (bad) jmp cmp rolb pop lea sub add sub mov push loop jecxz test cltd mov sbb adc loopne imul mov rcl arpl lods sbb cmp xchg (bad) andl ljmp loope cmp mov push jle daa xor adc call loopne shrb sbb push jg fstl mov iret xchg aaa adc xchg cmpsl xchg push mov dec repz (bad) icebp inc icebp sbb fadds push daa gs sbb jne icebp mov add popf das in repnz fdivl pop dec adc out lock mov lcall in add in fild jo lfs std imul lods out inc cmp popf jecxz outsb push pusha in (bad) or pusha push jl movsb add addr16 ficompl sub hlt xchg push insl dec int3 jb ja add pushf mov and push sti or cmp and sub or mov add push shlb mov cld test test dec ret in mov mov mov shlb imul stos (bad) ja js pop mov or fwait arpl mov sub and shll adcl mov pop ss rcrb nop cmpsb pop out rcrl push jle or fdivs xor inc nop dec sub mov add pop xor cmp push imul cwtl pop lahf ret add mov aam inc xor adc nop sub sarb push sub sub push nop add les subl in aas outsb add call cltd mov hlt mov mov adc jl lock jo jmp mov mov inc stc xor cmc (bad) and inc pop jmp pop add push sub test pop sub xchg xor mov movsb loope mov cs xchg pushl xor mov adc pop clc cli mov add (bad) xor scas push pop mov pop jmp jae push js movsb stc add mov xchg jnp outsl or fdiv repnz or test jle popa add sbb and pop cmp lds mov outsb inc add (bad) stos loope (bad) dec mov adc and pop out add or cli aas andl das sbb mov rclb adc shrl ja popa inc adc or xlat pop ficompl int (bad) xor or std cld int3 loop call add inc (bad) ret js mov stos in mov xchg inc push fstl pusha aaa xor out in (bad) rolb dec pop das pop fs add je mov and mov mov rorl push ljmp cli test shll and mov popf dec outsb pop or mov push xor ret cs mov push and mov incb mov adc or (bad) xor push std or xor jg pusha popf int rorb and movsb mov mov mull xchg test aad add inc lcall sbb or lret je pusha mov dec mov inc mov cltd (bad) inc in add adc sub push and lahf add js ret cmp sub out mov mul popa push mov int sbb inc sub pop loope pop dec pop dec add (bad) mov push push dec and in arpl or fcoms mov add in (bad) fdiv mov popf jle jae aas pop daa outsb jge sub adc in dec mov pop aaa enter idivb push adc inc inc (bad) adc pop and decb movl rcll test inc and add test popa xchg xlat fsubl xor mov jmp popa popf jo lahf cmp xor iret jo mov ljmp enter and mov test mov add mov add xchg sbb push dec leave dec sbb cli shr push stos enter or xchg sbbl xor imul loop fiaddl push jle std lea jge xor js xor jl push mov daa shl loopne push mov or pop or add call test cmp or (bad) pop push hlt popa mov cmp fsubrl jne push jae mov inc jmp push dec jge push maskmovq cmpsb lahf dec gs into push fnstsw xchg push (bad) cmpsl inc or (bad) je pop (bad) mov call mov jmp mull pop and or push mov loopne and mov lea xor mov add mov dec pop not loop iret mov jmp movsl jns add not or cmp jb negl icebp pop add and push jmp mov jmp js dec test mov jnp outsl xor jge push add push add inc divl dec pop addl sbb into loope inc or imull aas push xchg mov (bad) jbe cwtl mov rcll in and xor push jmp clc cmp out in mulb add aam cmp out inc es add add cwtl mov mov cmp (bad) pop lds (bad) xor fimull (bad) pop out divb cmpsl fldt inc sub push add lods pop repz rclb rorb xor mov imul sti pop push enter sbb sbb orb push ljmp inc xor daa add out xchg ds mov mov or (bad) sub rorb xlat cmp outsl rcr jbe arpl pop sub je mov sti (bad) cmp sub inc ret jmp (bad) jge xlat adc aas stos add cmp and dec add ss mov pop popa (bad) aas adc cmpsl outsb daa push jne (bad) xchg movsb pop pop mov push nop sub sarb add lods push add sub xchg adc or or rcll sub inc js pusha push adc pop sub mov aad ret sub (bad) mull out or sahf jo sub pop xor adc inc mov push fdiv add jle pop ds xor adc push sbb dec mov jne out jnp cld inc shl rolb cmpsb addr16 sbb lea pop les popl sbb sub or pop sub bound pusha inc sahf cmp popa sub outsl xchg (bad) hlt (bad) mov or shl xchg add xor in xlat sub and push into add in aaa push pop dec pop add jmp mov sub jae xor gs sub lock inc pop mov and scas sub pop mov lret push test xor adc nop outsl repnz sbb push push gs xchg sbb ds out pop insb add or push mull sub and cmp push cwtl pusha fstl add pop push pop mov pop dec jl mov int xchg mov push push inc push or inc mov fistpl pop pop popl push enter imul enter jge add aas mov or add out (bad) jmp addr16 ficom add scas pop mov adc xor aam out in pop test cs cmp jae mov dec cmp inc pop nop loop or adc lret adc add dec pop and aam push pop push nop adc dec jo movsb sbbb and or push xchg xor out lret inc jne (bad) mov and dec jns or sbbb pop sub dec into dec adc adc mov mov (bad) sub push cld movsb add or jns add add dec or push mov ret ficomp cmc int3 push ljmp into shl neg inc push mov adc mov je xor mov roll sub mov xchg insb aaa cmp xor fldl adc mov dec pusha pop in or (bad) push or fistpll daa pop dec pusha stos cmp sub jae sub jmp fldenv inc je xor out mov and pop xor lds sub fdiv aad dec add fldz mov lret pop push repz andb notl xchg repz bnd sarb adc int3 stc mov in mov mov add jnp negl sub sbbb arpl fnstenv outsl lret (bad) lods inc addr16 add rcl call sub mov dec repnz and jmp jl int3 xor cltd inc adc and cmp iret mov test neg loope scas mov pop and popa mov jmp mov sub push add lods adc loopne pop add mov mov adc and xor aad pusha cli xchg gs fnstenv push sti in icebp or adc inc stos or stc jl or jmp mov (bad) add data16 sub add xlat sub test adc fcoms sbb dec (bad) ss or test out test sub sub cmp jo inc ret cmc jnp dec cmpsb rorb fldt addr16 xor stc inc adc mov lret and pop xchg sahf push sub and nop or mov sbb mov call push sbb int3 inc pop mov xchg and mov jge test ret pop mov jg test aaa int loopne pusha es mov push jmp sbb pop xor (bad) pushf imul cs xchg and push push ja jmp add pop push sub in rsqrtps mov sub xchg pop add push dec jmp xchg lods adc adc fstl popf out push cmp xor push ret jecxz cwtl in je dec insb in (bad) adc sub cmp loop rorb push into inc sahf jno loope xchg jge and sub pop mov aaa mov push fadds (bad) jmp lock cltd js outsb hlt sub (bad) rcll mov push pop mov test add push inc imulb mov pop jo cmpsb mov pop sti mov and adc gs repnz xor mov lock mov push pop sub ljmp inc pusha jecxz ret inc inc lock js (bad) or (bad) insl not rcll jmp call movsb cmp lods es mov mov pop dec std or out pop mov mov (bad) jo loope add and aam add mov lods pop addr16 pop jl aad jmp loopne in jnp pop push movsl and (bad) add inc fcomps jmp ret sub pusha ja popf push xchg sub and pop push push push adc sub add gs sbbl imul (bad) or add call jg mov bound in mov lds push les xchg lods xor insl sub inc lret cmp add data16 daa add test jmp dec dec aad add mov fsubrs js push sbb fwait mov mov jp push inc cmpsb lods rolb sbb dec pushf or andb scas lods fistpl mov pop add push mov jl lahf cmp pusha dec add or jmp scas or pop daa mov sysret and clc popl in and popa cli dec add jo fbld pop clc ljmp and jae lahf inc repnz add rcll jmp into mov popf jbe addb cwtl mov int3 jo stos sbb loopne and add ret neg test adc in leave cmp push popf add mov push sub mov loope in add fldl ret push ja lods dec loope or bound xchg fwait add test push sub mov push loop dec add lds jge adc aaa sbb je sbb sbb or mov inc sub pushf hlt xchg rolb test out fidivrl pop lret and popa sarb jecxz (bad) pop cwtl lcall cmp push pop jns push dec mov or fisttp cld inc jmp adc cmp push sub fscale or or dec and add adc adc arpl cmp cmpsb nop xchg mov mov fldenv sbb aas xchg mov add int and (bad) adc inc into sbb lret jmp add adc jl imul or stos clc xchg jb pop jno sbb inc mov lret pop call enter and xchg mov jae mov adc dec mov xlat es stos cmp sbb les and je and inc pop test sarb dec pusha or out leave add adc xchg or in js stos and outsb xchg pop call add sbb stc shl dec call sbb subb jle and xchg (bad) add lahf ret jb pop and push jecxz repnz dec pop rcrb jo movsb push nop add insb pop xchg inc shll inc xor mov idivl sub in mov pop sbb cli (bad) inc mov dec pusha add pushf add addr16 idivb and adc cmp or and rorb outsl jg cmp mov test jnp or inc sti dec inc rolb pop aas add dec add add mov fisubr call aaa sbb mov push std les fwait sar mov pop dec cli inc in inc xlat jo lds and data16 cmc add inc inc add lods cwtl test mov imul jecxz dec inc or sub jns and cmc push and insl inc sbb lods ret and adc add shl ja clc test pop addr16 int3 mov jae lock pushf adc (bad) add pop and adc subb add jb out daa addr16 pop dec adc je push lcall sub lahf cmp xor add mov sub mov xchg fstps sbb jnp jp cld movsb test inc adc mov xchg sub pop ss imul pop sbb fstps jge add push dec cli lods dec mov add in in popa popf xor out sbb sti add or xor push in or test ds sbb sarb scas xlat adc add in lcall lret or rclb cmp mov lret fwait test and cli sub stos pusha xchg pop adc jae sbb and addb sbb cmp add jbe xor iret cmp (bad) das cmp cmpsl inc loopne xor or cmpsb jecxz loopne mov cmp pop dec loopne mov adc pop adc mov enter leave adc out daa fsts mov adc mov pop pop xchg adc shrb add xchg mov js pop or inc sahf mov incb (bad) jno les popa cwtl aad cmp cltd adc dec xchg inc lcall pop cmp jae ret cwtl mov clc lret sbb cmpsb add and add xchg orb inc in push mov cltd mov or shrb dec mov divl jno test dec dec add popf inc aad mov into inc adc fldln2 mov add sub loopne sub mov and lock outsb mov push mov test scas mov or ja add repz jg,pn push dec rcll mov loopne (bad) jmp xor loop jno mov adc dec ds add xor and rol push outsb push out jmp add (bad) shrb sub xlat mov arpl fwait sbb ret jecxz mov andb pushf rorb fiaddl add mov pop adc lahf mov leave test adcb sti or sub push (bad) in (bad) shlb pushl aam add add xlat scas sub cmp or push aam int3 les shlb xor out and and adc ja lea cwtl mov xchg fsts sbb clc je cmp jmp js sarb add out cmpsl mov loopne jb es cli je repz shrb mov dec push pop adc fist lods inc and jae xor and lock jae xchg stc loopne pop mov enter loopne and cs jl insl add or xchg mov int lahf mov add sahf sbb enter pop iret mov push cld or and (bad) push xor call ljmp jne gs mov jl andl push cmp pop cmp mov jecxz or jb jg and pop pop jae dec in bound js and leave shlb jg mov mov ds add and cmp adc add gs xchg mov jo add fsubr sub into adc shlb repnz jo add adc test jno sub shl subl lret hlt sub gs fildl lods stos mov lock inc pop pop push jmp mov xor shlb add mov jmp adc dec mov pop mov rcll scas pop and xchg lds push and stos sbb insl cwtl adc cmp push push adc fadd xor sbb sti adc sti pop cwtl rolb cmpsb adc (bad) aam and sub xor cld inc aas add je int3 mov jo add xchg test icebp jno adc test addb mov mov add add sahf shrl or int3 adc adc lret call rolb inc dec or sub test push das shrl inc mov roll es jo mov mov xor pusha sub lcall xor outsl cwtl cmpsl mov das pop cwtl adc cmpb and les add add in (bad) int3 push out lcall lret jmp add gs pop test cmp mov enter add xchg and add leave imul fwait rorb and xor cwtl fmul stos nop cwtl jecxz les repnz testb iret jl in jno pusha frstor or int3 dec sub sbb rclb lret sarb js jns push or dec cmpb mov ja add loopne push dec dec dec inc insb out sub xchg mov loopne add add push pop mov js or lret xchg sarl out fldt adc fs cmc ret push mov and push (bad) jmp jecxz ficompl pushf pusha inc pop rcr insb add test es dec xchg pop out fmul pusha lds push pop xchg add push aas xchg or or pop and mov roll adc dec les or ja mov daa mov add popa mov push iret add inc add (bad) and jnp pop adc bound dec gs lods push and sub int3 lods sbb push iret jns add test inc ffree in inc sbb mov sub (bad) xchg mov jl adc push popa loop mov scas roll movsb add sahf imul and xor sub das mov in (bad) enter gs mov jns mov insl in jecxz mov xchg sbb fucomp add loop std aad add sbb out loop (bad) mov jns lahf rol pop icebp pushf push push rcrl cmpsb imul sbb inc arpl add jno loopne outsl lods xor dec daa inc outsb nop or test add adc andb jle add cwtl and or les mov (bad) or mov inc sbb test aam add aad fimul mov pushf add push int mov pop xor out mov jo sbbb jb dec mov lret pusha lahf mov sub fnstsw add aam xor popa cs (bad) scas jae xchg in andl dec mov lds and fnop cs sub inc add rcrb xor fstps js push mov adc xchg ret inc insb cmp and in mull addr16 add adc loopne or int3 add (bad) mov push cmp inc roll cmpb fwait and pop push cmc add es cmpsl xor and into daa adc sbb pop inc in jle jo xor sbbb mov xchg inc dec sti scas in mov outsl add xor into repnz fmuls aaa pop sbb and adc mulb jecxz mov or or jae sub and out inc mov push mov adc xchg dec sbb lods xlat pop jae push rcrb (bad) iret push xchg pop jl dec rorb cmp mov test push cmp nop add loopne rolb inc fcom add sub cmp xlat xchg xlat dec das jo add enter lret push (bad) int3 xor jle in cmp mov pop sbb sub adc or fwait fs test xchg loope push sub repz pop mov dec cmp or mov mov xor xor bound mov inc sub outsl in and push xor pop popf jb and les imul mov fisttpll mov outsl aad and xor mov add sub int jecxz pop (bad) add adc jo insb sbbb or add enter out pop pop in jno push jmp push imul push and fldenv leave outsb (bad) shrb and enter xchg sub pop ds andb add (bad) int3 fcmovbe les or dec inc or inc lret stos pop mov inc enter mov mov add or dec ljmp xchg in aad fs add mov movsb test add cmc and jmp out or adc loopne inc fs lds mov dec (bad) in subb lret sbb add jp add mov add cmc hlt jno aad cltd (bad) lock ret lds in stos mov cmp add adc and dec mov aaa cmp jo jae dec pop jmp jae mov add inc xlat push lds jno daa hlt push mov lret loop repnz push push and xchg pusha bound jo jae (bad) in push into xor and push push rolb stos push fistl pusha push add test push iret int add mov out shlb lock and call jmp test fwait int loop add xchg js dec nop xchg inc fildll cmp insb add jns mov loopne and mov cmp popf cmc dec mov or fdivp dec inc or adc in fildll jmp out test das fsubl push add pop fstl xor pusha or sub push faddl dec xor pop int3 sub leave dec hlt mov inc mov dec push inc jo aas and loopne flds lods and or or nop add gs loope cmc lea loop pop cli (bad) jo out pop jl faddl js inc jecxz xor add in mov add jno imul cwtl test pop hlt call add xor push (bad) lahf mov push sahf mov pop out fcoml rcrl popf mov test cld stos loopne pusha push imul je add mov fcmovnb dec outsb in aas mov xchg (bad) mov mov stos sub fdivrs je dec xorl sub adc sub test add sub fcoml mov or mov jbe mov inc fisubl repnz xor jmp or bound xchg add dec push popfw aaa mov ja push movsb xchg cmp mov movsb or sbb jns jns sbb lods add lret stos fildl lds xchg jno mov cmp xchg out inc arpl jns mov add jo mov test push pop stos inc icebp js add sbb adc inc fnstenv repnz push pop mov test cli xor aad mov aaa outsl lock test cwtl lock lods bound lea (bad) sub adc aam es mov xchg mov add mov jl fbld shrb test stos roll mov push sub lds push pusha lods push pop xchg mov dec adc add sub mov lock and adc in repnz inc sub call and je testl call out mov sub cmp xor sbb inc add test inc mov call pop cltd (bad) add and jge ss cld jns sbb adc in mov push pop jae or jo push dec fs add xlat lret add mov add pop xor rolb jecxz mov imul jno outsl adc xchg ja dec (bad) lock and lret rorb test sbb push rcll (bad) mov and sub jmp loopne add decb inc mov aad sbb xchg mov lret pop int (bad) mov in cmp push adc inc or push pusha pop mov add sbb jge inc loopne addb in dec test stc inc ret add mov inc jns jae pop jl mov lods jns ret dec add in rorl sti imul pop ljmp jmp mov inc sub sub ss sub sti cmp jmp jbe cmp add in xor sub sbb clc xlat out inc push pusha mov sbb out jo cs jb xchg (bad) xor fsubl cwtl jmp lds inc sti call sub sbb mov mov adc imul add enter dec je or subl push pusha lret xor imul popa or mov mov cmp ss (bad) fisubr (bad) lock inc or cmc jl add insl jge,pn jb add ja mov mov add int add rolb (bad) dec out (bad) loopne scas mov test mov mov in and repz add pop mov aas cmpsb push gs shrb mov jae lock dec xchg out fbld ja in rcl jno pushf mov fsubrl add mov sbb jbe mov dec mov lea sbb push xor mov and add (bad) or xchg and les adc xchg adc mov and lods outsb mov mov jns xchg cwtl push push fiadd adc or push jge popa inc in xor mov in int3 sbb jecxz icebp push xchg adc cli mov adc cmc inc hlt cmpl out dec add xor mov and add mov jecxz dec sbb les cmp or insb jge sub outsl sbb sbb xchg xor mov mov mov iret clc rcrl das je and and es pusha pop daa andl adc insb pop xor test cwtl mov icebp or in push bound clc enter (bad) sbb pop arpl push fistp and add cmp or xor inc fbld mov mov sbb pop clc adc (bad) scas shrb sub push add (bad) mov mov inc add dec jno fsubrl les sbb add cs and add cld xor shrb addr16 cld lret mov (bad) fnstenv and inc leave fwait and testl fisttpll imul das jge xlat (bad) push mov cs (bad) ljmp pop fildl ja or addr16 lahf stc jae xchg sbb xchg push addb or add lcall sub inc cwtl pushf and loopne mov ret daa add les loop mov push fisttpl pop pop test xchg push out jo dec add int3 add call out int3 lods sbbb sub pop sbb and mov inc iret mov xor add or mov pushf pop ja xchg pushl mov push mov sti in mov pushf icebp or (bad) xor mov pusha fsubl cmp imul fiadd hlt add iret fsubl mov pop pop mov fwait mov icebp push dec mov je sbb js add mov lret dec dec pop sub mov adc inc mov or in jl add (bad) call add enter jecxz adc rorb nop test adc inc dec test fwait pop mov pop add shlb pop ret insl add rolb int jno cmp loopne inc and xchg xor push cmp cwtl rclb pop adc sarl loope cmpsb mov lret jno inc mov call xchg xlat imul es mov sub rclb push (bad) fisub lcall test jge mov sub in pop (bad) jae js inc xor lret test add inc (bad) pushf pushf sahf scas sarb in or xor sbbl add lret xor mov dec and repz push add pusha sub add dec and fs ja mov and call loope cs inc add stos cs push fsubrs loope xchg stc int outsb addb outsb jno sarb jno cmpsl inc int3 jecxz add scas ljmp mov popa jno clc in sbb js jmp push out insl pushf ret test sbb and xchg and xor clc push mov and dec and inc jo mov icebp addb push or sbb add pop scas insl add iret add loopne idivb inc flds cli or mov pop insb mov ret in lds fldenv push pop xlat jne dec xchg or push sub out add xor or and cmp in add add clc xchg push call add push cltd idivb ds and ret vpunpcklqdq mov jno shlb fcoml das scas sub adc xchg add xchg xor cmp fsubl push scas gs cmp fs cltd xchg jnp or push xchg cmp xchg sub jbe out sub push imul lahf imul push xchg dec mov loope push imul test mov jl cmp gs adc rcrb pushf fs cmp sbb adc repz add mov scas add sub jo mov into add imul sbb inc inc and adc scas (bad) dec sbb dec rorl or test push pop and add fistp fadds hlt pop pushf and adc and lcall in arpl movsb cld push int3 and daa push in push mov stos inc cmp mov xchg lret dec rorb fisub (bad) scas hlt nop jno mov jne or roll insl push leave xlat outsl or in push jo loop xcrypt-ctr cmpsl sbb mov clc sar lret jno sub arpl fs pop rorb pop pop mov sub xor mov adc or push loopne add cmp std sub fdivrl loope jl je rcrb js jmp inc in aaa (bad) cmpsl lock roll jle jae and pop dec (bad) jo jg push dec out inc fsubl sub cmp hlt xchg fisttpl pop xlat into and xorb loop jno fldenv aam xchg out xchg push jle cld adcl push dec aas in add and lods pop (bad) jno adc out addl push and in clc add or push mov and jle adc cmp shrl insl movsb sub in dec stc xor cmp jns jecxz jae inc mov lret sbb pop and adc aam adc in xor jne or adc jmp roll xchg inc ja je add jns mov hlt pop push sti jns inc push push int3 call loop scas mov inc in lock fsubs dec nop adc xchg nop cmpsb fdivrs jns sbb sti mov mov (bad) mov xor or lods push mov leave push dec mov ss aam cwtl cmpsb pusha lock add sub mov (bad) xchg bound (bad) clc push or sbb push aam mov div gs inc mov mov mov mov iret cmp icebp clc jno sbb jg dec mov adcl aaa dec and bound add popa jecxz add rorb gs mov add outsb lods out fldenv sahf inc add inc or and inc pop or and add cltd xchg inc subl lret enter mov pop fildl cmpsl in sub mov cwtl wbinvd in cs fxtract push add mov add mov add mov sub xchg nop in or mov inc loopne js fsubs push rcll lock mov push inc into lret popf (bad) cmp push sub xor push aas dec repnz add shlb daa jmp jmp icebp sbb add lcall jnp add sub ret jmp adc rcrb and xor out push (bad) mov adc jmp mov pusha sbb repz xlat push and test mov fsubl stos (bad) xor dec mov push and cmp xlat mov sub aas subl fsubrl dec data16 dec add push neg loop jo dec dec sub dec pop pop xchg iret mov jns shlb sub sqrtps mov adc pop cmp nop add rclb loopne dec popa lods push push add das clc and pop add lds mov in add lret cwtl int cld lods xor mov push and outsl dec aas loopne stos cmp fisttp stos add mov adc test lret fiaddl ret lock pop mov in hlt mov pushf mov sbb mov dec rolb les jo in pop fildl sar out and push xchg stos xor mov sarl outsl dec push cs mov add mov inc sbb aaa mov inc cmp sti mov lds mov mov std fdivrl add jnp lock outsl cmp inc jbe and sub xchg pop jnp clc aam and pop lock mov mov clc imul dec add cld enter push flds sbb push or lods loope nop cmp jl rcrl nop cmp jg or cli add stos mov dec inc or push inc sub fsubr mov sahf dec jae jns fwait mov and enter jae jl inc adc outsb addb call fiaddl cmp sbb adc (bad) mov cmc inc (bad) nop hlt add and fmulp fisttpl mov pop fisttp inc test std or adc (bad) jmp fmuls jl xlat into ljmp pop sti jae or mov stc arpl in repnz sbbl fwait int3 out stc cmp rolb js push or add idiv xchg test aam push (bad) pop mov imul rcrl adcb and inc lret pushf enter loope fwait add mov (bad) xor sub movsl cmpsl adc sub aam fadd adc mov fldt (bad) ja es xchg out mov inc shrb inc enter sti and mov jnp arpl and sldt icebp fcom stc jbe lock jae js push test add cmp imul or cmp mov or and pop (bad) int lds sub add stos inc (bad) test fs pop xchg sub xlat cld nop pusha movsl lods repz fldt inc sti ljmp pop ljmp pushf sub jl cltd pop xor jp lds loope add pop mov push mov dec adc push adc dec repnz adc fstp shl or sub les insb add cmp mov js push dec dec insl adc dec mov popa jnp and in xchg mov or add inc sub cmpsl pop inc fs xor in mov pop cmp xor loopne xor cmp std fistpll mov inc lods or xor or testl jl add add nop push cltd lahf mov push lock dec pusha cmp adc out sbb aam shlb push and icebp jb or fnsave add pop mov xorb loopne add dec adc dec jbe enter sbb sbb lahf mov sub clc cmp mov pop mov and jmp sbb add xchg xor lea push inc nop leave mov jg jmp inc adc (bad) push into sahf jl loop xchg jno sub push mov sub and push sbbb mov fsubrl in jb sbb dec xchg cwtl pushf stos jns xlat xchg pop and pop cmp cwtl inc rcr movl jge bound inc data16 (bad) push push repz jp movsb inc incb or enter ja jp pop mov out fcompl dec sbb add pop addl mov addr16 or ret movsl out outsb clc mov cmp jge add pop or pop faddl mov inc jg xchg cmp jne lcall cwtl cmpsb adc aas fcompl cmp adc les sub add pop xor sub arpl js sbb dec inc dec inc mov or in icebp sbb add cmpsb dec add lock movsb test out jl enter or push add nop jnp in add daa dec jo or jmp and js dec cmp mov in dec inc inc fstl lods and push and or daa mov out aas or in scas adc in outsb sbb pusha xor call add ficoml nop add sahf int push das leave jo xor fsubrs cld add hlt mov mov cmp lret jbe hlt js add inc or repz inc mov test es mov je or mov sub imul loop jo xchg sbb dec sub push dec in nop (bad) int3 dec daa call sub and push add insl xlat scas inc shll sub sbb mov push push dec lods push fs mov cmp cmp icebp dec stos daa je or fidivr add pop or int3 inc inc dec adc (bad) jo leave and mov dec mov mov fwait shrb int3 pop lds jecxz jno mov pop testl xchg pop sahf xchg dec cmp dec fmull stc mov xor test cmc icebp push or test loope fadds dec and sbb rolb rolb pusha mov add dec andb cmp or rolb clc mov jno fisubrl jmp mov and icebp dec sbb jne add jbe xor fsubs mov pop cwtl add mov scas insb dec mov (bad) sub add jno mov and hlt cwtl add imul push pushf fldt cltd test in mov into or pop js and mov jl rorb push push mov xchg mov inc sub jo inc add es mov cld cmp (bad) int3 clc bound ljmp cmpl fs jns add clc dec or int3 aam xor repnz repnz xor push sub or test loope sub push cwtl in pop mov (bad) lret test in das adc and std lods mov nop mov mov call push daa fstpl dec ja in xor add jns (bad) mov dec add fiaddl (bad) jecxz mov xor cmp aas (bad) enter cltd push push cli sar mov xchg mov jl pusha fs pop ja sub cmp mov mov sbb mov sbb out cmc mov jl sbb imul fisub fsts hlt lods cmc xor jns into lahf dec dec in jmp pop mov dec lock lock fidivrl push (bad) sub std or xchg push dec adc inc (bad) loope enter jge cs cltd sub insl sbb test dec jp iret dec inc xchg mov pop (bad) cltd hlt enter ss jmp hlt (bad) imul and pop bound cld pushf mov or sbb lods loope fcoms mov xchg jae js aas pop loopne in hlt mov jl cmp sbb dec xor add mov je (bad) jo dec xor mov das nop fdivs push sub push ret je add insb xchg add and or lret mov enter lcall lret (bad) lcall pop in les rorb lock add lret sbb into xor pop hlt add mov push push pop inc jg nop sub cmc jne ret les jmp jo cmp add cmc pop dec push adc mov cmp mov or cs or icebp cwtl xchg lea movsb add out xor testb jo mov das or rorb int lcall push (bad) lcall sub cs insl cmpsl fs inc jecxz inc pop sub leave add movsl or xor lods add dec mov sub int dec xchg loopne add mov (bad) hlt or jne stos jl sbbl lret dec adc (bad) or sbb mov mov jae add xor lods xchg aam xchg imul xorb popf ss stos movsl (bad) cmp inc push or jge push movsb inc mov orb push or add scas xor add pop popa or adc xchg and jecxz dec sbb xchg sub mov loopne jge add jbe dec cmp bound inc or mov clc std dec xchg les pop xchg inc push adc jns clc out sub frstor fs and sub mov push and mov or faddl dec xchg (bad) in and xorl fsubl inc add pop es cld adc clc xor add pushf hlt add and loopne push loopne push sub nop pop add add jno ja dec aaa rclb sarl add mov ret push cmp fwait daa addl sbb mov scas xor stos mov xor push push lahf cli add mov loop jno xchg (bad) push sub in pop ds xor cmp mov push xchg cmp fmuls pop insl lock subb xchg mov jp jns push loop dec loop xor jecxz (bad) in adc mov cmp jl push inc insl ja (bad) mov mov stc add pop sbb mull jns in and in jo or call xchg jno scas add sbb push jmp add or adc jno loop lods jnp jo mov dec push xchg sbb xor je add pushf push jmp xorb psllw movsl lret xchg in adc add aad sbb xlat sbb imul cld push repz test pop es jbe dec jb,pn jne and mov add inc or xor lea in in ljmp jg,pn xorb shrb and push or lods push mov cld push (bad) and lret xlat or cwtl loop mov xchg ret je andb stos std add out aam lret or outsb add out stc jle push and or aad (bad) push cwtl adc push fisub xor push jle add repnz clc and insb xchg xchg pusha enter iret mov stos or rorb add push stos mov incb pop imul add sbb cmp dec xorl mov scas push cmp sub gs add adc fldt add inc xchg cmpsl (bad) xlat into sbb xor sbb js loope jae shrl mov add mov xchg push in shr add mov inc in mov leave imul sub adc pusha mov mov sub pusha fsubrs in hlt mov das dec loopne jge mov cltd mov mov add mov inc sbb sbbb sub mov and add pop inc fstpl jl cwtl ss or fnstcw push sbb dec icebp mov loope cld sarl dec hlt or sub mov add xor sbb mov pushf or pop pop in fldenv out inc (bad) jo dec fadds sbb mov and loopne add mov mov mov pop jno es push pop cmpsb rcrb mov adcl outsb enter nop mov xor cld fsubrp inc cmp das mov dec inc mov add push xchg popa sbb fldcw inc sub stos leave in jnp pop (bad) xchg sbb scas sub lret sbb rolb dec push repz and mov nop enter arpl xchg outsl imul ds dec sahf push lcall mov sbb push fistp xchg push xorb sbb in iret xor pop mov jo add mov pop cmc pushf or shrb mov mov leave cmpsb or pop rorb aad mov and clc and (bad) pop jp pop outsb jno push push or mov or imul movsb add loopne push in stos inc pop mov and or es cld (bad) pop jecxz mov orl adc lock inc jae fsubl add das subl inc mov (bad) adc mov call fbld mov into cmp sub mov and mov mov loopne push into repnz push pop (bad) mov sub add test lods dec jo xchg cwtl int3 ljmp aam fwait cld movsb in jae dec cs je cmp xlat xchg mov loope or es mov xchg (bad) addr16 or xlat jno jno (bad) or mov scas lret sbb mov adc adc pusha or in test mov cmovp jmp rcll inc vpmuludq (bad) fimull lods inc leave cwtl cmpsb sbb repnz dec add in cmpb imul mov scas and cmp mov push loopne jnp jo cmp lds pushl xchg cmp inc add cmp test add daa das or lods jecxz push int3 jne sub mov jno add xchg fisttpll xchg inc loop add sbb mov and pop mov jle adc pop mov scas psubd movsl and arpl nop mov (bad) jo pop lret inc rcrb les stos jne (bad) loopne cmp xchg (bad) sbb jnp jae pusha popf dec add ss or sub dec cmp or and fsubrs mov mov mov (bad) mov lcall lods adc mov pop xor bound push ret js ljmp into add (bad) or fsubrs fcomps int3 inc xor hlt push subl push mov pop and mov adc pop in cmp lock adc leave fs cmp push mov add cmc dec mov pushf jl imul mov or add dec aam out loopne xchg (bad) xchg in mov dec sub sarb lret cmp inc in adc dec mov outsb hlt or jae jno jns sbb or in addr16 sub inc or pop adc cmp sub subl lea sub cmp sub sbb adc xchg push adc xlat mov mov mov mov lret cmc dec pop add rolb mov call inc sbb (bad) idivl add lret jmp stos mov jno fsqrt shll sbb jae xchg pop push pusha repz or das or add sbb and jle pop inc imul mov rcll data16 xchg cmp push or add cmp scas xchg adc cmc (bad) or dec addb sbb in pushf lock fildl sbb lahf mov lea xchg jae dec jge es or add sub mov cs mov enter mov mul or repz jp adc adc adc cwtl xor fmul sarl fidivr mov (bad) idivb add loope loop (bad) pop imul push add lock xchg cld into and jne add mov fldl mov sti icebp out loope aaa push es stc adc xor pop xor incb push lods add fwait push call mov lods mov fs xor sbb sbb and xor cmp rcrb cmp mov and rol mov pushf movsl fcoml jecxz movl dec or rolb or sbb pop and loopne xchg lods cmpsl inc or xor mov cmp add (bad) lret sbb pop repz aad pop (bad) and cmp inc in fs and sbbl inc sub mov nop xchg stc pop test mov adc mov (bad) stc in mov inc ljmp fiadd and cmp outsl movsb dec sub adc push fnstenv std into xchg test and stc pop mov pop inc dec and aam clc andb js dec add sbb ret or jbe (bad) in stos xchg inc out add enter (bad) sub inc cmp cmp ja push lea push xor sub cmp notb sub (bad) pop int3 faddl fbstp (bad) (bad) loopne test xor adc outsb mov scas dec nop cli into cmp mov jmp in in cmp cmpsl pop (bad) and cmp xor xor test pop fmull lcall or aad aam add cmpsl push jmp call (bad) or add push lock push and orl and (bad) dec xor push lret push lock and cmp movsb faddl mov inc sub sarb cli in or fisttp or test or imul js stc mov mov mov movl xor clc mov sbb pop cwtl out lcall mov and or mov pop add shr add cmpsl jnp jno add fisubrl std in or fmuls inc lods dec (bad) aas adc es add mov jecxz add rorb cmp loop or lock add mov push dec inc jb mov inc jne js stc cs movsb movsl xor mov adc loope data16 mov aas fistp push cmp sbbb pushf sub mov addl adc push les add pop stos outsb push jnp pushf mov insl loopne add fmull je dec push sub mov pop (bad) shrl cmpb loopne mov jno aad or fbstp dec dec jecxz inc mov mov and push sub outsl movsb shrb sbb sub add outsb pusha push movsb inc xchg sbb xorl loopne pop loop add cmc push mov sbb adc mov xor push jmp dec mov inc out cmp ret xchg and nop test mov (bad) push imul js lret xchg xor dec lahf (bad) sub lds loopne inc scas add imul adc js inc cmp push shrb push mov dec dec xor stos xlat jae int3 dec push mov mov pop xchg dec inc jne inc andl sub outsl scas xor out fwait jo lods add movsl imul jo sarb cmc jne scas xor cmp pop cmp inc inc jno pop jnp aam sub jno and mov outsb inc cld push stos mov dec mov fwait pop mov jbe shlb fadd dec pop insb inc pusha inc test call and push popf lock push push sub arpl jle cmp or fsts std flds jge sub push fwait test adc loop leave stos pop cmpl jne fadd mov cmp xor les leave stc or les lock dec jg add adc test (bad) lret jb add jecxz rcll mov cwtl stos sbb xchg adc mov adc lods aam or xchg pushf jns sbb adc outsb xchg mov daa ficomp xchg mov into (bad) enter xchg repnz imul push jmp cmp jne push sub imul or insb mov fsubl rolb gs mov jp or movsb sbb dec addl fidivl inc inc enter add lcall xchg mov inc sub push sti sbb clc dec sub push pop imul movb enter push pushf cli jg add cmp inc popf ret je dec cmp pop int3 push sbb mov fisubrl mov fsubrs cmp or ret (bad) mov inc fisttpll mov pop inc cmpsl shr jo mov sbb inc mov adc pop xor add jns leave mov icebp push aam je fsubrp ret adc add cld or mov (bad) sbb (bad) sbb add jle push es xor inc stos enter cltd repnz push mov les aas stos fildll lods add jl clc outsl icebp ror jmp add jae xchg in icebp je jno mov or movsl xchg ret stos mov cld add jle loope and movsl int inc cmc (bad) pop dec add mov dec or adc cmpsl lret divb pop xor pop (bad) rcl (bad) inc push sub jo subb repnz xchg xor cmp and sbb mov mov test mov sbb dec xchg (bad) adc jle inc push adc jmp xchg dec sub in lahf int3 or sub lret cwtl xchg nop pop movsl adc adc and mov xchg mov je cmp hlt or push movsl add cmp jae push inc inc (bad) cwtl aam add mov inc aad jg or inc jne add in das mov stos xchg jns inc sub xchg rcl rcr add sub inc stos mov fbstp aad jno lods push add jmp pop adc xchg loopne popf sbb fistp mov sarb andb adc jns inc ds lock inc push (bad) clc movsb and push mov pop sbb and cmp daa jle in insb pop add lahf jne push cli jns cmp and mov sub mov lret or aad mov leave orl dec test stos fwait cld ret pop loopne out in enter popf sahf cli popa dec push incl jno mov jecxz fadds xchg or cmp mov add dec or je and or mov sbb shrb int3 jne pop lahf jno sbb pushf movb adc lods popa sub cmpsl and xor lahf or inc out popl adc in pusha lods mov push mov mov fsts mov sti or add add mov fdivrs popf fucomip rcrb andb call sbbl add pusha mov or and jmp cmp cmc pop insb pop mov out add data16 fldenv jmp sbb mov add dec lock add in ud2 adc loop aam pusha dec lret pop mov and fsubrl out movsb sbb jmp hlt mov leave cwtl hlt jno push pop addl mov das fs sbb ja fcoms loopne cmpsb pop pop cmp inc mov adc jae push jns (bad) inc test shr ret in dec push add jo fldenv or pop add (bad) stc ret js shrl xor add cmpsb sub sbb dec sbb sbb aad in pop push (bad) add push lret (bad) adc adc cmp sbbl call arpl mov loopne lcall cmpsb ja scas xor dec ret inc jnp fldcw mov jl jecxz push int3 in addr16 mov mov adc add fninit aad push sbb enter nop sbb pop int3 and or xlat sbb add jb in jge and sbb aad fmul push rcrl loope dec pushaw add add push inc fstp testl je dec and or aaa add lods ljmp xor (bad) fbstp jnp add xlat fidivr fdivl push inc sti scas and loopne,pn repnz dec std xchg hlt xchg mov jnp dec sbb push pop cltd pusha mov enter pushf push fmuls call fistp outsl xchg mov cmp pop sbb cmp in inc loopne add call and and adc jge push jmp add push cmc jne mov shrl cli outsb lock xchg lds pop fsubrs mov out dec inc outsb xchg xchg pusha mov lret pusha faddl xchg in nop in and call jge outsb lods nop mov adc adc dec mov or lods adc pop or pop add fisubr stos or popf pop rolb adc ss out (bad) std cmp mov push inc xchg cltd xlat jp adc outsb (bad) mov cmp std repnz scas push rcrl test mov add add push in mov dec sub rcll gs xlat pusha push in add jle cli xchg incl or cmc jge fdivrl jns pop dec add inc pop cmp and sbb add add lds rorb movsb mov xchg cld movsb mov or and hlt xchg jns nop popa and or frstor call push aaa pop add hlt aas addr16 int3 mov dec adc adc pop ret xchg add (bad) in in (bad) stos int3 push aaa les ret adc mov sub das aam inc out jge push mov call pop add ret mov inc adc in jns inc popf sti call mov jge mov cld inc xchg add mov cmc inc outsl xchg test push xor mov stos push adc mov and add push mov es mov push inc outsb out rcl fcomps (bad) cmpsl add push lods (bad) jmp jno xor push out jmp scas push add jmp jge sarb imul (bad) add fs push cmc jnp dec fucom sarb fmull jg stc sbb dec sub lods add jno test push dec jo jmp insl ret pop das xor aas flds (bad) decl in fiaddl mov roll int ds sub push or cmpsl pop fildll cld pop movsb lods in jbe dec add test insb cmp sahf aam xchg addr16 adc lret popl adc pusha shl mov (bad) xor js add inc fstl inc mov leave xor xchg pop xor rorb dec lock mov add push fs fnstcw cmc dec sti push shl int jo lahf mov dec xlat mov add int decl push std dec adc mov clc push jne enter jg stos or dec addr16 int3 adc jge,pn add push push jne in xor inc mov stos sbb dec test and das mov pop lods fucomp push lock test mov push dec add pop ja add and cmp aam pusha js,pt fstps xor push pusha mov cmp jbe xchg xor mov add dec ficoml ja mov in push dec mov das mov fwait add cmc imul outsl push and jecxz popa sub jg dec sbb pop mov stc add and clc push mov mov push shrl in out sbb push outsl add out mov xchg pop xchg push push xor push inc popa add call je cld add pop sub jne jmp fnsave loopne fs loope sbb sub and pop adc rclb pushf add mov jbe pop test sub cltd mov hlt roll cli bswap mov or loop xchg movsl ja mov orl cmpsl roll mov mov loop and dec es cmpsb insb mov into xchg pop stos xor mov lcall stos or mov and jne mov stos in pop mov fwait (bad) fistp inc or jg jg cld pop or dec movsl stc push and mov push imul add add add test inc or jae xor push jmp push ljmp cli mov sub mov push or mov jp and pop repnz and mov xchg pop pop mov divl fimul std stos lods fisttpll adc es and jmp xlat fs mov add dec and imul jo movl movzwl xor and jo push lret lds mov int andb xchg cmp adc dec adc cld push push mov (bad) js jns or add push cmc sbb xor pop mov fild sahf popl xchg inc push xchg movb mov inc popl dec cs lods cld addr16 mov add mov ficompl dec xor push or or std pop lods sahf es push jb mov inc out xchg aam cmpsb inc xchg pop adc insb (bad) roll inc xor add leave call cwtl decl lds push dec xchg loopne nop popa or js fildll lcall sbb add pusha jne dec sub ret push pop mov mov push sub sti pop ja adc divb or int3 xorl push outsl push subps ror cmp cwtl aad in out pop in jg movl xor movsl and fsts inc jecxz dec dec movl fldl2t movsb icebp jmp pop (bad) (bad) jo and orl lea xor movsb cmpsb xchg pop push push es movb sti insl lea sbb mov cmp sbb mov push and cmp push (bad) outsl xchg daa adc add pushf push int3 stos push xlat (bad) push xor mov sbb or sti xchg (bad) clc jge lret jo add mov xchg cmovle mov xchg push cwtl (bad) mov dec push and sub fimul push dec (bad) mov mov out cltd mov adc cmc adc or or mov aam adc es test jb or jmp loop mov or jne adc mov cmpsb push pop pop sub sahf fadd pop fsts push cld js inc add ds mov sub xor and arpl xor mov push mov pop pop nop xchg aam (bad) pop jecxz pushl add leave loop mov and dec out and and shl or into mov push sbb xor cmp jle jge fs daa dec and xchg faddl nop fwait imul mov xchg or std test or sti jb add jo test addl mov and shlb push mov cmp ret mov adc ss jg loope sub fdivr or mov (bad) lock xchg add mul adc mov inc adc sub jmp adc popf les pop add push mov cmc and pop inc xor and (bad) cmp call add js call push push or add mov mov inc stos dec dec sbb pop mov xchg sub movsl mov inc xorl fs xchg sbb sub shlb repnz push jo inc les jmp dec rcl insl test and dec sbb pop or dec mov push lds add fwait or out mov and cmp push (bad) or xor test ficompl aaa andb scas test roll ret add clc sbb push mov dec stos outsb add jp loop daa sbb cld and xchg rcrl adc das cld push mov rorb icebp shll sbb sub aaa sti nop xor stc nopl add mov sub movb idivl (bad) cmp inc push push push (bad) jbe jp jmp jmp pop jnp mov jp imulb (bad) cmp test add arpl scas fcompp scas mov inc add cmc mov aam fisttpl mov xor add pop sub mulb add pusha sub pop lods mov jo aad scas sbb adc or cmp jo push push jo loope adc notl push pop arpl (bad) and or mov mov pusha adc push push cltd pusha jb xchg dec fdivr adc nop div rolb out sbb in or out sub mov pop orb mov sub imull dec or sub cmp (bad) or cmp or fldt mov adc mov jmp test cmp jo mov lds addb pop cmp pop add sub jmp in xchg and repz jnp or sbb loop pop out inc dec cld xchg aam addb inc rclb xorl pop in or insb les push inc das sbb stos inc inc xchg or add daa inc mov add mov imul std sub dec xchg pop bound xlat (bad) cmp cli enter orl shr (bad) push out inc pop xchg arpl sbb (bad) fiadd daa push xor xchg mov iret movsb fs (bad) push div add movsb push movaps add pop mov pusha adc dec inc nop rolb pop xchg sbb push shrl sub out mov loope in cli jle rorl sub enter xor pusha inc sub addb jae scas mov mov push fistpl xorl sub jle push sub leave lods add cmp jmp cmp out outsl fldl repnz and pop adc (bad) jmp mov loope xchg sub dec push dec jo dec rorl sbb das (bad) pop add push int test and js ret mov jp inc sub sbb call fidivr add inc sbb xor sbb inc leave or cli mov and nop push (bad) push sbb stos adc cmp popf inc xor and sbb pop push lret mov fadds adc and push pop mov cmp lods (bad) movsb cmc test mov sub add jns add orb inc movsb ficom imul stos in xchg mov xchg ljmp pop or sub pop push scas mov add jle mov xchg inc sub js fwait add pop adc mov jne push jno cs or xor jae pop jcxz push aam lret sbb push xchg mov les (bad) ja cmp sub mov cmp jecxz movsb fisubrl das in xor jns pop cmp mov jo push bound sbb (bad) gs jb add fsubrs add jb xlat mov and out pop (bad) clc fsubrl pop pusha mov inc mov popa sub dec lcall mov cwtl pop inc push dec fadds add adc sti cmp adc or and dec pop jo mov scas dec int3 jno pop out inc add sti adc push mov cmp mov std add ds xor cmpsl pop insl push pusha mov or pop xlat mov and shrl jno and shll push (bad) dec add pop sbb (bad) dec cmp adc jecxz mov add mov mov flds ret xchg mov ds push scas and pop (bad) cmp lret inc mov pusha mov xor testl and cld jmp xchg mov add ljmp sbb add insb mov add dec adc popf lods push es andb shrl ja sub test and push push cmp les (bad) into lods ljmp aad sbb dec repnz es lods repz inc add or lea lcall mov adc pop inc decl xchg scas pop push mov push push lcall addr16 ss jge test das ljmp xor sbb lcall and popf mov sbb mov jmp mov inc test cwtl inc mov jecxz adc pop loope mov sub pop iret cmp adc push nop and cmp jbe mov jg nop pusha jecxz mov sbb insl movsl sbb inc lods pusha dec (bad) jp adc adc push mov add jge inc sbb push mov xor push leave mov xchg in push loope and push pop jmp adc scas jo sub dec push int3 out notb loop mov and jne mov pop cmp mov xor movhlps sbb in mov cs inc call jb and mov or jo ret adc xchg sub or inc out shr inc into xchg loope adc loopne mov inc mov cmp adc sbb dec jne adc js sbb add push pop or sbb stc jmp inc sbb outsl (bad) out daa mov or jne int3 sbb xchg mull mov dec popa xchg jne and ret push mov stos and flds mov xor and xorl adc sub (bad) pushw and sti xchg and jmp loop aad and dec sub cmp inc and jl mov add or jp dec mov push dec lret mov mov movswl mov xor test mov mulb add cmp rorb dec rcrb xorl insl xchg popa jecxz ror mov mov xor add inc lods aaa inc jne fucomp test push jbe mov and sub mov ljmp jbe push addl dec mov out mov xor mov sub imul movsl gs sti addb repnz xchg or mov mov sub add jl add shrl sub inc add adc pop daa (bad) dec push test mov scas sbb inc xor inc add jae xchg pop jl push mov sub add clc sub arpl cs xor mov sbb cwtl repnz or inc push adc es xchg orl outsl out cwtl push cmp mov rclb cmc sub imul cs faddp push incl pop leave mov push pop ljmp pop mov pop aaa outsl rcll mov mov adc sbbb jbe out push inc add popf jp push pop adc jmp ss mov jne pop push (bad) mov lret loop push xor push push inc mov xchg sbb ja in and jmp mov mov mov add dec pop pop mov call ja mov jecxz sti pusha add movsb pop adc dec (bad) and jnp rclb loop sub jmp pop (bad) dec mov das xor aaa add mov out ficompl inc jg mov insb xchg xchg sub or xor cmp mov adc mov or mov pinsrw rcrb mov movsb icebp inc sub nop push pushf pusha dec xchg xchg mov mov pop nop add xchg hlt aam mov sub sbb sbb add xor (bad) lods (bad) enter pop and roll out push fwait rolb and ss mov dec inc addr16 enter sbb xchg les pop test inc test dec lea mov ret xchg sub and jo stos sbb add pushf sub (bad) movsl or dec clc xchg lcall xchg fdivrl adc pusha mov nop (bad) mov (bad) sub mov je test jmp sub lds pop add scas add sbb icebp es hlt and xor ljmp cmc mov nop je dec bound inc out inc mov jo mov loop mov pop jl mov dec cmpsl adc mov add fwait sub (bad) add bound divl xchg pusha jns xlat daa int iret gs repnz xchg popf je and repnz adc movsl push std xor sub das and mov push sub roll mov lods sub dec push push test xchg sbb and mov nop push add icebp dec insl dec int3 mov sbb xchg jmp or pop pusha jo sbb sub xor jbe xor dec outsb fldl test cmpsl fbld adc dec adc jecxz dec mov add imul lret mov es mov jle pop test cmpsb hlt outsb or push popa repnz addr16 lods ret mov movsb pop (bad) add mov (bad) fisttpll mov push adc dec nop lds mov loopne push aad xlat ffreep cltd scas mov cmp jns clc xchg testb cmp dec or icebp rclb dec clc jae mov xchg pop clc enter sbb repnz mov jnp or into cmc imul das sub mov xor or scas xor clc pusha jecxz addb add push pop dec testl mov and fiadd or sbb xlat jno aam (bad) sbb inc pusha nop and inc mov popa repz sub iret pinsrw mov sub test xlat fsubrl aaa mov dec and or pop inc sub mov pop (bad) in add jmp adc (bad) leave nop ja push bound fs in pusha cmp ret sbb add cld das sub mov add mov add negl or andl lret cmpsb icebp loopne movsb lds in add stc add add mov movswl decb adc lahf (bad) mov dec popa xchg add mov sbb mov cmp add idiv stc cld imul xor cmpsb push xchg (bad) mov loope outsl (bad) jo fsubr inc lock daa cmp ret mov fcoms test pop mov sub mov mov sbb adc xchg add popa push mov test mov rol dec mov pop js sub lods mov add ljmp cmc sub (bad) xchg addr16 and in into shrb inc lods fiadd inc fs push xchg test movsb cmpsl push insl inc loopne dec mov adc jne je std inc mov fwait in popf and test fcoml lret mov pop xchg add adc movsl mov lret cs jnp sub mov or ljmp loope in je jmp mov mov in jl pop mov mov cli jo add aam pop mov (bad) add xchg xor ficom push shr push push pop in or mov fldcw popa ret cmpsb ret sbb aad add fstpl nop or jns dec mov sbb push js add pop add ror xlat push les adc (bad) jp test dec xchg mov push into dec adc js pop nop aad mov clc adc popf movsb fs pop sbb (bad) hlt add fstps (bad) mov add std jl adc push sbbl in push adc popf mov cltd sub dec and dec sub test xchg icebp test push ljmp repz jle inc push enter mov pop adc (bad) idiv and nop jle loope stos mov cmpb movsl dec je add rol and stc pop add roll xchg mov and push add mov notl add mov jp dec and nop inc inc add sbb mov push mov jmp push rclb mov and add repz push or inc xor add jg movsl lret out add xchg sub xchg ss and popf jno popa in nop add fiadd mov cltd (bad) leave aam loopne pop fldenv and aam test mov or jmp jg lret repz ja dec rol jmp cmpsb add xchg xlat mov mov cld mov lods imul xor test aad sarb outsb dec and mov sub pop jmp pop mov mov jnp add lods sbb mov pop pop bound flds das sub dec out imul cli jne jmp adc test addb popf nop jg push jle div add cmpsb add push push push mov lahf pop testb push push jbe and test jp add (bad) lret scas ret dec push sbb or pop shrl mov pop sub xchg popa addb inc and jle in das lea mov movsb add adc pop ret push gs aaa enter idivl pop push xchg pop pusha push (bad) and out push or mov push xor mov repz xchg mov outsb ss popf or test aam je nop push ret sbb push push sub dec dec push loopne fnstenv add pop dec shll sarb dec int3 adc jl adcl and out jnp add in (bad) dec popa push push inc sahf pop push nop notb loopne out arpl mov rcrl popf insb jle mov andb jl cwtl fldl cmp testb adc push pop fwait loop adcb cwtl test daa fstpt push cmp push sbbb inc faddl in push mov sub xchg nop nop jns arpl xchg cltd or ss (bad) pusha popa mov daa lea add adc popa popf sbb push add add in xor push xor imul cwtl mov sub dec repnz add mov data16 mov adc sub and mov sarl jae push mov mov adc dec mov mov xor fninit mov push ret dec js out jl movsl mov fs cwtl lahf add dec inc cli and cmpsb sahf fiadd pop mov add inc mov xchg jge lods jo cli nop or push bound pop add fdivl outsl rclb es jo or data16 adc adc repnz cmp test pop popf insb arpl sbb add lods popa clc in js push adc (bad) mov adc shlb lahf sub jb adc movsb es lret lahf push aam (bad) xorps fdivl clc test push dec mov jbe push mov add cmpl addr16 lahf xor push pop mov adc mov imul std int iret adcl mov push or imul mov push jle cmpl sbb mov in addr16 pusha bound (bad) xchg insb cmpsl mov pop adc add push mov pop cs push xchg cmp sub and jmp aad stos and divps test aad loope fstpt leave scas dec repz adc test add in jne push stos nop jmp xor mov mov aad addl das pop push stos and sub push rcrl jbe lret or ljmp sub and mov push adc mov ss dec and sub add lods (bad) dec mov cmp pop fcomp pop gs mov int3 xorb (bad) cmpsb push loopnew xchg inc fwait push push insl add loop pusha mov lcall pop mov js inc dec push sbb movsb dec cld adc clc leave pop hlt dec clc dec popa test mov mov sarl cmp push push stc ret dec push sbb add inc inc mov pop faddl pop iret inc out xor mov mov push xchg scas add lock adc push cwtl inc je cmp test pop xchg mov shl push aad xchg or add mov xchg ss mov test cmp cmp leave jnp xchg xor test pop stos mov adc mov mov (bad) add ss pop loop xor mov sarb imul loopne sbb jle repnz push (bad) sbb or push mov out or inc inc mov push clc inc add fwait lods outsb mov rcrb ds xchg mov jae fsts jecxz movb xchg inc pop or inc out and es sub ja jg xchg inc std jns xor enter pop movsl loopne lea and out data16 nop jecxz lds int3 sbb cs inc pop nop and adc pop lds bound mov xchg pushf repnz xchg sbb sbbl pop kmovw mov loop add sbb xchg sbb push push sarb push ljmp out push xor sub mov data16 imul mov mov mov dec (bad) jbe in dec or out inc ficomp sbb dec mov jecxz adc scas add mov xchg adc ja stc das sub xor loope mov mov push pop mov fldl2t sarl lcall xchg mov icebp or adc into cwtl or or jbe push mov in add out out pop mov aam jle out (bad) and adc jmp daa ffreep fs push mov dec xor adc hlt pop adc andl mov mov jnp mov lock andl or pushf lret push push out out test mov mov add inc addr16 outsb test pop fdivrs add xor popf mov rcrb add fildl mov xchg ds dec fdivs mov out cmp add fsubrl mov popf sub mov mov shrb dec repnz mov mov fucom or mov add mov in sbb aaa mov mov jmp mul sbb sub add je lret out pusha cld enter pushf ret mov repnz test repnz je inc push into les adc cmc repnz xor xor clc inc adc jl inc pop dec mov inc mov les dec inc xchg sub jo xchg gs add add mov mov push xchg jle add repz push stos xor pop mov mov add outsb addl scas pop repnz ret push xchg mov push xor (bad) pushf fcomps rclb adc mov hlt add aas add fidivrl rolb mov clc ljmp add add jmp mov push call (bad) loop add mov jecxz mov add lahf mov shrb inc xor cmp sbbl mov fiaddl mov jno add mov push insl je dec aaa aad (bad) iret add and enter or into and icebp cmpsl xchg lret mov jg push push lret lods cmp sub add sti pop jmp test add sbb xchg enter push pop mov or fnsave loopne add jbe mov in dec daa orl aam loop lret push jmp nop std and lds jo pop lods or aaa jns cli loop gs mov roll adc stos cmp dec gs add fisub xor sbb add jp add test daa std sub and aam shll (bad) mov pusha mov sbb fcmovb inc inc pop pop inc pop gs daa add aaa dec int3 jmp push arpl jo cmp pop add cmc mov inc les fldl icebp sbb pop pop xor call pop jns movsl jmp mov xchg cmp popf aam mov sub xchg inc pusha sarl fwait dec mov fldt xchg js mov mov lock mov inc xor pushl divb lods xlat mov xor push xchg push shr push daa mov sbbl movswl dec popa mov mov int3 icebp jmp fwait dec ret mov rol add xlat sub jnp jbe sub daa rcrl adc int rorb test add sbb or cwtl fldenv and push jb add (bad) mov adc pop loopne push xchg out add jnp jb dec je mov pop popa pop shlb and or xchg cltd in xchg in inc fnstcw adc lods and push push push lret jbe add push mov push lret shll pop xchg out es mov loopne fldcw adc test push pop sbb dec pop rcrb mov pop cmp mov push js ljmp xchg sub xor dec or nop push repz sahf pop aaa shr (bad) pusha outsb and mov fsqrt xchg xor jae push xorl adc cmc je sub xchg cmp bound jg es popa outsb dec jo mov (bad) (bad) movsl int inc shrl push xor in pop clc jmp inc cltd scas sarb dec and stc mov repz cld rcrb and sub clc jno inc data16 jg add push push or repz mov mov xchg sbb xchg js xchg sbb sub adc bound lcall push pusha mov sub test add mov xchg dec pusha cltd fwait rolb push adc mov (bad) data16 pop and and orb imul mov xchg dec mov hlt add xor lahf mov and fist lods sub out movsl outsb sub popl stos dec add pusha nop dec add outsb xorl stc and and mov pop mulb stos cli rorb data16 pusha push add notb cltd xor fidivrl mov jno sbb std dec imul inc lock sbb cmpsl (bad) jno es les jns js,pt lahf aaa sahf push sbb jnp fcoms add push xchg movsb add insl das outsb pushf int nop sbb push jg dec add adcl sbbb push aam fnstsw outsl dec outsb dec add shrb adc mov sub mov ret push push add mov inc jge lret push loopne (bad) mov adc push cmp cltd push and aas shrl xchg ljmp adc es adc (bad) adc jecxz icebp je mov adcl cmp adc lock out xor decl in in and mov aad and sbb inc les loope xchg or in imul je aam fmuls adc pop mov adc adc test adc out loope mov add sar es pusha andl pop dec mov and data16 pop out testb popa mov jg mov in push inc xor aam sbb inc cmpsl add sbb jmp cmp in push xchg mov in inc rcrb cld xor lea sub loope push inc das adc mov loopne and (bad) jmp mov xlat pop loope cli cmp movsl cmp int3 cmpsl mov aas xchg cld stc mov push pop icebp movsb cmp into bound cmc mov and idivl mov xor or cmp and jecxz ss jb push pop data16 xchg test mov adc (bad) push add or inc xchg mov add (bad) cli and adc cs xchg mov (bad) outsb call push sub lock push push call add or jno test and movsl lds inc inc xchg into inc sbb je dec fadds mov lahf pusha repz and jmp pusha into cmp into jo or xchg inc cmpb xor lds add sub test lcall push jno xor addr16 xor xor dec inc pop add push jo repnz outsl in jne std xchg test or test bound adc outsl inc icebp stos ret mov pop rcrl sub fwait dec pop popf cld sub add sub (bad) cmc clc dec pop les mov andb (bad) mov and xchg adc (bad) mov inc add pop dec ret mov fsubs daa cld push xchg lret push aam bnd sbb jae add int3 scas xor dec xchg xchg sbb outsb and mov add out add jecxz adc jno mov sbb dec pusha loop add fmull jmp cltd movl std mov pop nop ret cld xchg dec push jns push push mov adc or mov mov mov adc ret push and add xlat sbb popf jae pop cli sbb pop int3 or pop add rcrl cmp add add loop jno pushf mov xchg ja cmp or es aam inc adc test mov ljmp cltd cmp push cmp decl or xchg jg jo mov test loop sbb aaa hlt jo pop push mov pop jmp xor stc pop mov popa jmp fisttp fdivrl and or cmp mov divb jns push mov lahf mov sub lret adc pop je rorl mov dec fwait xchg push in sahf loopne loopne,pn or adc cmp in sub jns dec push arpl add pop lahf inc popf sbbl sbb sbb push mov mov jmp or jg fbstp jle pusha repz sti xchg add mov sbb cmovg cld movups sbb loop sarb pop fsubr dec popl dec mov or mov sub inc mov pop adc mov out dec stc push test add (bad) and jb mov sub mov inc rorl mov vmovss inc dec loopne mov (bad) (bad) repnz aad xor and add aam loopne popa jb xchg adc inc and pop lea add cmpl mov ss add repnz sub xchg (bad) data16 repnz mov int3 cs push mov push stc xchg dec sub sbb scas je out mov jg outsb scas fsubs add pop pop xorb (bad) sub outsl xor test cmp sub sbb add or add cld arpl inc hlt push cli iret xchg sahf sub outsl push (bad) jmp jns xor (bad) mov cwtl ret outsl test xchg jmp test push push jle cld test shlb aas mov xchg (bad) mov push push pusha popa pop mov or mov mov add loope mov mov rolb push fstpt rolb add pop lret add pop cmp cli adc lret jbe (bad) or loopne inc addr16 cwtl sbb mov icebp movsb sub adc jmp xchg loop,pt xchg fistl mov xor adc fisub iret aaa xorb fwait out cmc xchg cwtl push stc maxps lahf les clc mov cmovle and inc nop or cmpsb adc xor lret and pop and xchg test (bad) mov rorb movsb nop xor mov pop push jo or push mov lea and or cmp outsl jle sub mov adc mov ror fimul mov popf mov pop shl mov pusha sub mov pop xchg adcb mov xchg inc mov or (bad) cld loope lahf lcall popf cli pop pop clc lret stos xor sub pusha fild lcall inc aam sbb jnp (bad) sub dec (bad) dec icebp stc xchg clc pop int3 popa push push imul adc sub and add lret or sti dec into pushf mov cld cmp inc sub roll ret cmp sub popf mov cmp add cmc rolb push add jnp jl leave call push inc test aam lock in push push int sub pop push cmp add movsb mov xchg cmp test (bad) outsb ss fbld dec xor add fs pop repz mov pop push and leave aad sbb ret pop pushf inc sub cmp push add jno movsb sbb inc add outsl aas testb imul add (bad) pop xchg jp cmp fcomps sub jno xchg mov jnp movl test push sub cld inc jno out add mov into jno inc divb push xor mov rcrb add cmp hlt push test adc inc pop in mov or enter arpl jmp outsb jo adc jecxz loope data16 push pop mov jecxz inc add xchg and mov ret (bad) cmpsb adc mov jecxz pop and mov in push jnp out das xor pop xor mov pop xlat or jge nop add mov add mov movsl (bad) icebp cmp and xor push cltd xchg push ds inc sub inc (bad) push sub adcb lahf mov sahf add mov std sbb add mov or scas loopne mov in push popa mov mov mov mov add and adc cwtl dec mov in or int3 popf add lock aam rcrb dec xchg pop fnstsw (bad) mov mov mov or cld mov push rol add (bad) testb dec add sbb push out push cmp in and jg mov cltd add xor jmp les mov mov sbb mov push sahf and or mov inc pop add push mov cld push insl sbb enter inc and (bad) mov mov sub xchg sbb mov sahf das test or stc or mov mov jno les mov mov pop xchg rclb popl lea sar push and jno xchg sbb xor dec gs sti fs lods in scas add push mov es xchg mov jnp das push pop jb sbb add push push inc or test das pop jmp inc pop add inc xor mov in add stos or ret dec cmp adcl imul mov sub (bad) xchg or cmc push mov decl add in xchg jecxz mov sbb stos sub lret mov xorb (bad) repz aad jle insb sbb or outsl push call push jle iret std fsubr pop xor mov add ror sbb dec dec movsl adc adc add scas push mov inc cmp xorl aas fiadd imul cmp lods lcall lods add arpl fcomps jecxz or pop add jbe adc nop xchg jg push push xor jp xor mov stc jle sbb clc xchg sbb mov mov fwait sub (bad) adc push mov xchg rcrl jg hlt mov push inc out or mov mov das push inc fistl popa push add adc push mov sub aaa pusha mulb and aad (bad) fldenv repnz pop adc jnp jne push inc ret subl dec popa fcomp push mov (bad) and pop into add lcall icebp shrb sbb test call test inc xchg xchg test std xchg cli lds xor add int3 bound sti data16 aaa pop pop cmp ret or add fimul mov cli pop scas inc jl push dec push inc nop or adc adc xchg cmp xchg mov add (bad) sbb cmc enter mov das xor movsl jns add push jge sub add sbb into inc xor add and push pop pop das and cmp (bad) fistpll xchg jge fist repz jl sbb push jo loopne xor js and mov jns (bad) mov mov out aam mov push (bad) cld outsl (bad) sbb mov or fcomps mov mov xor clc rcl mov xchg xchg push jle dec fbld add add (bad) adc add push pop mov test aas push jecxz fcomi cmp cs xchg xchg addl jge mov or push lret jg ljmp mov pop mov or dec xor mov daa xchg sub imul add or xchg cmpsl fs sahf xchg pushf xchg xchg repnz mov movsl int sub add les pusha mov xor jnp repz cmpsb push lret inc nop pop push pusha add pop push add hlt fcoml or xchg scas fildl mov xor popf mov idiv pop daa (bad) xchg push jno in and cld cmp xor sar jne jl mov popf shll xchg lahf in cmp push sub jl and ljmp cmc and fimull rcrl fsub lods jns pop and pop fsts or (bad) repnz je push add or scas xor mov fldl loopne outsl mov cwtl sbb fldl or int (bad) stos into adc mov movsl cmp cmpsb jmp mov loopne xchg pusha mov sbb xor push nop (bad) mov dec cmc in subb mov add xchg cmovp dec in in mov lock outsb in scas add pop cmp test add add dec ljmp fiadd inc push and push scas jno mov fwait push push int ret mov dec jns pop pop push out loopne pop sahf inc add mov cwtl inc push in push sbb inc addl sar outsl jnp popf mov inc or jns mov or addr16 add inc sbb pop repnz (bad) mov in loope movb push mov test mov das jb add jo jge jne data16 or xlat lcall jo adc cmc sub scas dec mov xchg cmp enter pop xchg adc pop insb fdivs add adc cmpl jns inc je or popf jnp jns (bad) popa daa popf insl (bad) shl adc pop dec or fwait mov dec fstps js popf lds mov pusha es pop popf mov std pusha mov outsl int3 xchg push mov js add cmp adc cwtl mov xlat or (bad) jns imul sbb jno adc aam iret add pop inc popf jne hlt mov and sub movsb jge or scas push jno inc dec lea loopw nop and or pop sbb aas fidiv xor sub inc jb mov cli xor addl scas jo (bad) xor cmc icebp pop adc mov enter movsl dec enter jae insb fisubrl xchg xchg lret push stos jmp insb inc mov inc cmpsb ret call inc andb out nop das cld mov bound shrl adc push and mov and repz mov add pop mov push dec jp push mov pusha sub mov cld lods sbb mov or pop mov inc push adc dec insl mov addl out dec mov cmp mov pop jb jae das cmp pop adc std sbb leave rcll mov pop mov add (bad) ja mov mov add jecxz xchg fnsave test mov push in cmp lods cmp imul icebp mov lods mov das aad imul (bad) jl and adc ljmp jo mov inc lea and dec mov jb fcoml jo aam jbe hlt into or mov popa cmp fldcw test scas cmp test jo push hlt (bad) out stos cmp fild xchg (bad) push or push (bad) sti sub adc (bad) jle lahf push int3 mov push push jo add and pop pop push fstpt mov daa and (bad) movsb dec mov js push imul in negb faddp mov addr16 inc jo xchg jne repz sar jo nop sub or or push movsl out sub fdivr mov cmc popa jno mov xor jno inc aaa inc mov mov sarb xor sub clc jmp adc add mov adcb mov or sbb mov and out dec mov sub (bad) testl push cli jo out aad mov (bad) mov pusha loop xchg lret jmp std stc sub cmpsb lock insb aam sti push jmp push adc add and inc in dec cli sbb pop scas and jle in inc nop push scas lea dec mov mov daa push fs adc (bad) shrl sbbl js add pop push out out rorb repnz mov das jns loopne add xor pop ftst jno mov sub adc imul fsubp add sbb (bad) (bad) imul add popf clc xor adc jno adc and es xchg add jns fmull cmp daa add pop adcl xchg rcrb dec push leave mov add inc add mov data16 outsb js sub sti loopne pop push lret repnz (bad) fwait mov daa pop xlat inc hlt sbb add cmp sti (bad) mov aaa (bad) mov xlat lods ffree jmp dec fsubs mov inc mov jge popa cmp jnp jecxz pop loopne stos adcb into (bad) adc outsb mov jle pop mov mov je ret or mov add xlat popa sbb mov mov and fisubr xchg aas mov and movsl sub push lock popa xchg int sbb add idiv add jl adc or pop (bad) mov (bad) cli sbb stos aam test jl adc mov xchg ror rcl mov and xchg lea and aas loop push dec test call adc xor mov mov push rcr in andb (bad) out push fild scas das (bad) dec mov push stc sbb adc and mov and or scas jmp cmp pop add mov test jno pop push add mov movsb mov cmp test cmp dec lods jmp rcr adc pop mov fidivl sub sub (bad) add decb push je bound jecxz xor sahf lea cs mov sub frstor inc fsubr xchg sub popf cmc or xor mov mov (bad) mov in jnp sub push xchg cmp mov mulb loop dec popf mov stos add mov test xchg mov stos pop mov scas ss daa movb mov movsb and loop notl int3 mov loopne,pn repz ss sub in sub and sub or ja sub popa push mov sub cs fs stos lret shlb sub add andb shrl mov cmpsl cld loop mov xlat sub and push push pop test repz stc add jb push out int xchg pop popa jmp out dec cmpsb arpl std xchg adc fcomps pop outsb ret aad test insb add cwtl stos sub cs fild ljmp jge sbb dec mov xor rdtsc ret add jne pop (bad) lret mov call loope add add inc negw loop addr16 push mov call dec pop cwtl clc test xlat jmp scas ficompl (bad) mov ds rcrb pop sbb repz adc jle push and sub clc inc push dec add fs add cmpsb dec sub fisubl ja repz data16 push movsl push jns sahf pop rclb out or mov mov xchg push xchg imul jl sbb ds cmpsl add icebp sarb mov add pop (bad) mov add iret push aad inc add lods sbb mov std and push push pop cmp push xor xorb ja adc popa das jo stos dec add imul add in and and pop and push pusha cmp or hlt fstpl xlat out add dec shl mov in mov pop inc pop dec ret jmp mov fnop xchg or sub xchg gs int flds ucomiss fs jecxz imul scas mov pusha jne sub nop mov mul dec push popa jle fdivl adc mov pop addr16 xor mov and mov mov dec test test and push add int3 jbe es jae and xor dec jno inc inc pop mov mov loope add mov cmp sbb mov adc add pop inc xchg and adc jae jo xchg jae lods jae add jns jnp ds pop xchg xchg mov dec fnsave in push mov rorl adc pop xor jnp cs popf jbe out cmpsl loopne jmp pop add push fcomi mov mov add sahf ss fmull and push std xor cld sub jnp mov outsb jg add dec leave sti dec and ret xchg scas je std inc test xor mov mov lret sbbb cmp xchg pop sub add dec in and insb flds mov es jl cmp add pusha cmc sub pop imul sbb pop jnp notb xchg ret xchg sti push lock (bad) (bad) fbld repz cmp fist pop inc mov subb fxtract and inc xor mov mov je fiaddl dec lea inc push pop jns das call (bad) dec lock scas sub lret jle sub add mov pop out lcall xchg inc push in lods xchg push add loop xor (bad) sahf mov fidivr sub dec pop and sbb mov cmp orb mov loope aas outsb push add cmp mov dec jne in fxch jl add push mov adcl add jnp fwait sub jge xchg stos je dec shr sbb jae mov aam nop push ja test xchg (bad) jmp push lods inc orb mov in xor push in jecxz,pt or push scas js pop mov dec cld push mov push aam fiadd dec jle mov push push mov inc mov scas bnd mov in mov pop sti mul cmp fdivs inc dec cmp test jg aad add adc jb mov dec jecxz pop mov push mov adc adc or sub popa xchg xchg mov and jo mov stos daa mov movl sub jmp cmp lahf xor (bad) jae xor fwait push pop xrelease jns or sbb sbb push data16 jno adc (bad) ja or cwtl out nop hlt adc pop or les jmp xchg xor int xor imul jle pusha mov push (bad) sub adc sub cltd loop pop mov xchg mov das cs iret cmp repnz subb xchg imul mov in jno pop aad ljmp jmp inc jle ret inc xchg sub lods in fcomps test mov or xor or cld add mov add xchg add lret sub loope xchg add pop mov das rcrb mov loop cmp inc push repnz sbb mov pop faddl mov mov sbb and push jmp sbb negl fucomip add push (bad) pusha and add lret mov sub frstor subb xor sub loop iret das or and loope mov add cmp push fiaddl cmc in dec sbb jle outsb xchg and ds scas mov cmp loop push or lcall ret in aas push flds push pop repnz cld xor sub push cmp pushf sub rcrb and xchg jae mov mov (bad) call rorb add jae cmp add xchg sub xchg enter aam popf mov push test sub testb outsl frstor or movsl push mov lods sub popf jl out jp add nop std mov pop pop pop adc cmc out mov mov jg or push ret imul jb pop xor mov fdivl xchg mov andb stos xchg popa add pop pop sub repz add loopne in inc (bad) mov lds jmp arpl repnz add mov xor iret add cs out mov pop sbb and or pushf pop xchg sarb fxch push xchg jle push lahf inc cs lahf int3 cmp or sbb aad addr16 popa cs out addl sub adc out pop xchg xchg add xor xchg popf nop cs push sub xchg inc push pop ret in inc add cs pop push popf repz adc xchg mov add (bad) jg adc imul imull pusha add andb (bad) adc test pop mov push lds pop cmpb dec or pop testl push mov xchg pop pop mov inc push cmp orb icebp (bad) dec add mov adc jno inc push push adcl dec xchg outsl xchg pop call jle push loop stc push xchg stc adc in cli jp pop fidivl mov (bad) rcl sub jmp and repz jo inc add adc dec lret leave mov pop aad cli add das mov repz cli out cwtl cwtl mov mov enter and xor xchg addr16 nop mov notb mov out arpl xor sti loopne pop popf roll cld mov jns and add and sbb pop add mov mov push fisubr mov mov push pop push cmp je pop inc and and pop in xchg push lds mov and faddl mov jno cs lods in lods dec scas adc lods faddl ljmp loope xchg arpl jle fldl push ljmp cmovo rorb ficomp lods cld add (bad) ja mov in popa inc or pop imul mov pushf or jmp sub add cmpsl mov jb or mov add or js xor push imul add dec shlb xchg jl dec fldl lret or rorl cld jmp (bad) pushf jo stc pusha add push mov lcall sahf dec or xchg sbb lret in pop lcall xor mov jbe jmp jo and (bad) inc sbb mov (bad) and roll rcr pop flds das shl (bad) shl jle ss push imul mov scas jg mov pusha cmp pop and idivb jp clc (bad) hlt mov jle add xor or xchg dec rol add inc sub repnz and add or and dec or mov pop clc gs xor cmpl mov sub nop pop (bad) bound test mov sbb cs aad jnp pop push cmpsb js aad pop rcll xor lods hlt dec (bad) xchg and ret lcall mov or lcall and or push xchg xlat add daa mov adc pop xor and and mov lds and shr adc test inc and inc xlat daa adc pop aaa loop mov and rcr jo sub inc push stos (bad) mov xchg push into fwait testb daa jg dec (bad) in jno sub push fs xor lcall stos (bad) pop fcom xor pop pop sub jae sbb ja jae scas bound jne test (bad) es dec negl enter xchg add mov lret inc je lahf les dec pop and lock push add cltd in fnstcw hlt sbb push dec out in pop pop jmp xchg adc xchg dec test shll iret jnp xchg xchg jae add push mov pop and dec popf ret out loopne xor insb push fwait jo mov dec push outsb sub fcoml addb hlt push inc xchg mov mov xchg cs out and cs or sbb repz setne pop inc (bad) mull daa cli cmp (bad) dec sbb arpl mov scas sub dec mov faddl jnp inc sub inc xchg xchg mov dec pop bnd push pop (bad) in dec or and fwait jmp stos faddp lds cmp test inc je push test add sbb aam cmp mov mov and and popa fildl mov adc xor push push mov js xor or jge movsb leave dec push daa call push in inc add mov mov and outsb mov or cmc or xlat add mov adc jge mull or add push push add mov (bad) pusha nop adc jo add cmc adc out data16 icebp hlt pushf repz popa add add data16 cmp addb dec std ret dec test add xor xlat cmp or das or jo in popaw out das dec or rclb fisubr xor (bad) aam dec loopne lret ljmp xor lret push insl es loope enter scas push pop lock jge mov movaps pusha shlb in mov lods (bad) inc inc xchg inc das and call add in popf dec add or jmp (bad) xor xor sbb xchg or and add pop mov out test std push mov cmp into imul sarl sbb call cld xor lahf mov jmp or test and mov leave add mov or cmp fdivrl movd insb arpl adc out in push push gs ret in adc pop xchg sub and adc (bad) mov ljmp les stos mov divl out movsb cld fmul je jb mov dec mulb icebp test popa jne cmp push roll jl xchg addl repnz popf jp mov pop sbb leave scas jle add ss lods jle pop outsl aam jne dec stos cmp out push and mov add notb add rolb repnz mov fnstenv xlat cmp stos test xchg pushf and fnsetpm(287 rolb stc in sbb pop inc mov int test sar sbb inc and sub cmp mov or adc mov dec sub sub xor xchg nop add and jnp (bad) xor xchg adc sbb int3 sub push ja xor daa xlat cmp mov xchg roll mov pop jae mov jo add lret push and fistl adc outsl xor sahf cmc push xchg cmpsl sti pop in rolb add dec mov lret add js fwait cmp js add mov xlat push data16 call stc or jg mov and sbb push add fsubl dec adc sti jnp add inc mov sub aas loopne mov xor mov or add inc mov xor add pop lds rolb iret and stos mov and or stc gs (bad) loope jbe popl add stos mov mov pop mov stos ds dec cmpsb mov jmp dec inc lea outsb addl add and sbb jae leave loopne jne out in int3 and cmp ret cmpsb imul shr mov xor mov jmp loope adc xor sbb push lock imul and jg shll int imul lock mov (bad) mov out pusha or test sbb insl cmp xor mov loopew aam hlt push mov jne mov mov add gs pop das push xchg sarl xor push mov (bad) fs popf jae fcmove in add mov pop bound dec scas add inc mov push fwait adc pop push loop add shll adc sub out loope jp adc gs pusha jge xor mov shrb push fdivrl movsb scas mov and loopne mov lods mov add popf insb scas dec mov xor jae in dec mov mov icebp addb jno inc pop les adc into add jge xchg hlt push xchg sbb ret hlt jmp (bad) mov and mov push bound test sub (bad) xor push pop mov push rolb pop jo pusha jge fistpll inc cld nop enter inc adc push pop pop sub add jno sbb fcoms push lahf fwait cld push and cmpsb (bad) or mov test push add sub int3 push pop mov scas sub js adc cmp xchg dec lods incb mov pop add in lea stos mov fs add clc rclb xor cmp push xchg js sub das mov arpl inc adc bound pop mov add mov or push mov inc std jle and jo lods add mov xchg push mov outsl in mov les enter mov jo and imul inc xor xor xor jmp xor adc add dec adc mov notb and pusha int dec add pop dec sub lea mov pop clc cmc dec lods not mov je add imull xchg popf psubsb mov and mov repnz pop cltd xor add ret add or push fildll sub data16 mov loopne pop cmp add cmp aaa push loopne xchg pushl xchg (bad) inc faddl gs dec sbb outsb cs jmp in aas mov imul sub mov mov stc out adc cmpsl scas adc loope aam (bad) imulb cmpsb int3 add inc and add xchg out pop sahf call add add push or nop (bad) jae ljmp sti inc (bad) not or mov aam in jge or fidivrl nop repz rcll pop (bad) (bad) sub and aad push mov pop int3 out (bad) in and cli sub xchg push repnz mov mov in inc dec xchg call rolb lods cwtl cltd mov shlb push lock fwait addr16 into add mov pop clc mov dec movups fsubl imul sub dec mov aaa rcl sbb mov mov popa das je jmp mov mov ficomp ret cmc pop addb xchg fbstp out jle jmp pop test jbe pop sub push (bad) int3 push fbld dec add cmp push int loope,pt insb or shrb add xchg sub jp jae mov jg xchg loopne movsl dec or (bad) ret adc scas push leave mov or js and loopne das cmp jmp inc mov hlt pop add dec leave cmpsl (bad) mov test xchg push lea sbb lahf inc loopne or pop mov add cwtl mov in lahf data16 insl add pop xchg add hlt lret pop pop push xchg icebp mov xchg mov ret test popa sub xchg jl jmp dec add xor in mov ret sub sub dec lret mov aad (bad) fcmovnb push xchg sub (bad) (bad) mov xor (bad) adc or mov xchg cwtl decl mov repz xor push sarb cmc or aam inc add rcll adc adc sbb pop or sub cmpsl dec adc fwait test add aas add or div (bad) pop cli inc add and push popf (bad) sub rcll pop aam sub adc mov loope sub fs mov loopne push mov (bad) mov mov imul mov add mov push mov or popf or (bad) xchg insl popa fs lret pop fisub sub cmp rolb and sbbl (bad) mov cmc inc pop add push shlb rcr loopne lret call jo xchg out cmc inc mov arpl stos push pop mov add notb lahf add lcall leave push jno inc pop add push inc fwait mov add xchg push or (bad) (bad) insl das pop xchg jno bswap sbb adc mov nop push jp das xchg rcrb push push jo pop adc jo mov es pusha push push pushf popf mov fsubs popa sub xor sub cltd jle adc mov jb cmp pop mov stos dec pop (bad) and stos imul sub das pop push test js mov stos mov add outsb jge dec xchg mov movsb adc push mov xchg pop jmp xchg and cmp push sbb insl imul andb in fist sub push dec jge ret pop stc bound adc add jno pop add rclb mov lahf stos jne mov loope pusha inc out add in insb dec mov repnz cmp pop loope and adc sub bound pop sti pop pop dec aam mov inc fildll pop movsl adc aas adc inc adc sub sbbl fidivrl mov cmpsl mov pop sbb push fadds push aaa xor adc add mov lods imul and repz and push out push aaa das pop sbb shrb lock mov mov sub ss xlat daa add pop aam jle adc add push in jmp xchg lret (bad) ja scas comiss ss sbb push xchg cwtl (bad) and loopne add xor fisttpll dec clc push or add pop inc add or sbb xchg pop loopne push cmpsl rorb adc loop hlt adc aas pop push push ljmp add rcr es addl push adc mull push push popf rol ja shlb ds out fbstp shrb popa out loopne push dec sub lret add (bad) popa add and call xor mov adc mov cmp leave jmp sub xor cmp ja mov into sub lea lret add test mov jbe adc movsl inc sbb jae cmp add mull dec rcrb pop fwait add adc push add inc pop mov or sub add cmp xchg lcall sub addr16 notl dec mov jnp scas pop mov inc cmp xchg xchg add fucomip and loopne or mov loop mov adc (bad) mov or xchg cmp nop das stos outsl xchg pop xlat sbb fisubl cmpsb bound out add fidivr and sub mov inc dec lret add lret rcrb pop xchg cmp scas mov mov stc das adc ss dec xor popa aam faddl dec cli sarb adcl and and arpl inc or aad ja sbb xchg scas xor dec xchg push push loopne pop pop mov adc add (bad) mov out and cs mov sbb jns mov mov and jns mov scas ja imul jnp es lahf or mov scas sub addl mov jge sbb dec lahf xchg fidiv add aas les lcall pop je or (bad) adc pop or mov jecxz jmp xor mov jl lods jle xchg jo xchg mov add jnp push pop imul mov test sbb add mov loop lods add add fadds les leave cltd inc mov addl add cltd add jg loope sub push dec into adc lret xchg or jbe pop push or adc or pushf cs imul sbb sbbb addl push mov cmp or ss repz inc mov cli inc or mov xchg push mov or pop push xchg lock cmpw (bad) xchg pop enter push and mov cwtl pop push push inc xchg mov xor mov jae (bad) ret popa add dec sbbl andb into or add shlb push call cmpl mov add cld add or (bad) jae add or add add push push mov jge lods jne add add mov push xor leave sbb xchg mov push xchg sbb jmp cmp stos inc or push roll push lcall mov jge mov movsl sbb std mov or mov inc gs cmpl test test xor lods arpl sbb cltd leave cmp cwtl lret sbb shr test add mov inc adc mov xchg adc mov add and mov shr or jmp ret (bad) rcrl pop (bad) and (bad) or or dec pop sbb mov push pop cmp clc or and es in cli lret ret jmp mov cmp push inc pop test in and push fwait testl or cli and adc enter sbb push sub and fisttp mov leave and jne add rorb (bad) insb sub push sub adc or sbb (bad) push and mov push jne sahf data16 adc mov mov xor pusha in jbe and (bad) cmp scas mov cmp xacquire adc cmp dec xchg stc mov or mov in decl mov and pop and int3 dec (bad) insb xor jecxz stc daa incl mov add xchg add jae pop lahf arpl aas cmpsb inc xchg mov ret dec and enter pop pop clc ret leave ret sbb lcall jl loope cwtl sbb mov imul (bad) push jnp cmp mov mov add xchg mov cs sbb cmp mov lahf test sti ja or hlt in add adc jge push cmp xlat mov and ja out mov add inc loop xchg lock mov push sbb jno xchg subl iret sub mov adc mov jmp ret xor sahf or xchg add dec lds ret cld add popa push xchg jo leave add or fistpl std dec cmp push push adc movsl xor add inc inc cmpsl sub roll jge cmpb dec dec xchg mov stos test movsl pop mov adc mov sbb mov cmovp fldenv sbb inc xchg mov fwait mov xor pop addl fmull mov mov test sbb fisttpll inc push shr push dec enter and xorb dec xor sub dec lcall lock add pop rcl mov xchg inc es mov xor or add fiadd out iret sbb (bad) adcb fsts pushf jnp addr16 test jecxz push and in mov movsl mov imul add xchg push popa pop mov into add inc sti xchg fs sbb das push (bad) mov mov lret (bad) nop dec (bad) rcr mov adc hlt xor cmpsl ds cmc icebp rorl clc and outsl fwait or or xchg or add mov pminub adc faddl insb push mov test in xchg sub inc jg adcb xor add stos bound add je cmc pop jb add sahf adc scas jg dec push xchg rorl sbb lods or xchg jl cwtl fisubrl bound xchg add cmp inc dec popa push or bound dec fwait jle sbb xor inc jecxz adc add mov lret (bad) adc mov or xor adc bound in ret addr16 shlb push add adc inc add cmpsl dec lds cmp lcall fildl mov pop out fnstenv pop fwait test lea mov movsb test lret leave jg mov and mov data16 lock xor js mov stc shrl sub pushf or outsl inc fwait aad enter add inc mov out orl lock pushfw adc mov sti lret mov dec cmp push clc in subl daa pusha movsb add js add in cli push cmp xor pop sbb inc ss push mov fbstp mov add in inc xchg add xchg insb push mov jbe test push pop inc sbb mov inc clc or adc inc lock xchg les loop fild faddl movl add mov cmp loopne mov push popf (bad) shll (bad) popf ror jg nop test xchg add cwtl das test jmp pop shrb sahf add dec and adc aam pop lcall in data16 mov (bad) adc popl out xchg or adc bound pop pop cmp and adcb adc mov or imul cmpl mov aad notl rclb push inc adc add in jl cmpsl mov mov adc movsl sub mulb push push loopne mov inc arpl in (bad) dec sub dec and movsb ss lret jo insb ds cltd cmp cmp adc in fs shlb push fadds roll (bad) xor push in cmp inc (bad) arpl rcl rorb fsts mov push (bad) jno clc test cmp jecxz aad cmp inc mov loope fiadd mov dec mov xor std lcall jns jg mov add adc mov inc mov in (bad) xor rorl dec or sub cwtl xor cmpb lahf enter fstps pusha mov stos fidivrl mov sbb test cmpsb seta aaa or enter sub js and mov xor push sbb dec dec push jne sbb jns enter push adc push and dec pop fistl jp,pt add ljmp mov out pop xchg xor or adc data16 mov jg add push adc fmuls jl push stos (bad) repz (bad) pop and imul jp pop jne sbb xchg rcr pop in add xlat fsqrt repnz cmp sbb test imul mov pop adc iret test dec mov jmp (bad) test in leave int3 std out inc insb xchg inc xchg adc jmp push and mov test push jl xchg pop mov mov movsl add popa rcl lret into lock cmpsl cmp in cmp pop andb add jnp divl add (bad) daa pop ror (bad) lcall aam mov in adc dec cmp push add dec stos ror push jne nop sbb cmpsb cmpl cmp subb fmull pop rcl or pusha aam add les push push cmp fdivrl push shrb push clc pusha (bad) jmp mov sarb repnz pushf push cmc stos mov pop push inc aam bound adc aam mov pop dec call ret inc adc jmp popa jl push xchg dec addb sarb and add rcrb nop cmp sahf dec xor push adc shll je aam repnz rcrl push pusha sub mov fstpl sub pop std aas add rcrb pop movsl orb mov mov pusha push and dec push movsb pop xorb mov shll xor add and outsl push add push subl lret hlt cmp dec stc rcll mov lcall mov cmp hlt add jg push lock mov or sub rclb cs mov dec adc add cmp cld jg adc xchg inc bound cs je sub stos stc xchg xchg cwtl nop add lock add sbb xor xchg out inc sbb pop insl mov mov outsl mov out lahf lret rorl fisttp sub inc roll cmpsb incl dec dec xchg push stc (bad) out out in pop (bad) in pop jbe jl sub mov pushf cmp or ret xchg test add mov in add mov adc mov add lods push xchg (bad) mov pop out xchg je sub ret cwtl andb fnsave lea mov push arpl or pop mov or sub xor sbb mov and sarl (bad) je ret test rclb (bad) jl cmp sarb loop dec mov sbb jno sub sub nop (bad) cmp cmovge faddp insl cmp add pusha add add or mov fst inc stos orb icebp push and adc mov lret lea xor xchg add test and icebp test inc cmp js mov sarb mov je (bad) (bad) rolb or jo push rolb pop and (bad) seto xchg rcrb movl or mov jl lcall loopne mov leave scas xchg jo xchg jmp leave gs (bad) setle cmpsl mov faddl push add hlt lcall (bad) in sub or fdiv shlb sub or add xchg nop jl mov sub mov cmp aaa jg fs aad cmp lret add dec insl movsb add or xor fstpt xor push loop add inc leave shl fistp jnp test dec daa insb test nop pop mov int3 pusha jg fiaddl sbb iret out cmp (bad) and ds fldl enter dec adc xchg push lcall sbb sarl insb push (bad) lds out sbbb mov repz dec push insl lods add jg,pt jecxz inc sub push fyl2xp1 leave add lea sub movaps mov mov add xlat fstpl cmp and adc sub cmp fdivs clc lret mov or scas xor dec je mov dec push int3 sbb into outsb pop inc add mov adc xchg adc add ja test je fsubs dec popl (bad) leave test adc sti popa xchg movsl addl pop dec (bad) jbe pusha add pop repnz lret push dec mov lcall inc jmp and shll data16 pop insl les jg into or xlat lea add hlt add jp inc inc clc xor in (bad) int mov pop pusha add in xor adc push xchg add sub jg outsb or stos test loope push sahf sub sahf or xchg adc (bad) repz pop cmp call add cmpsb cmp push test aam js mov cmc and mov movsb out lret sub cli insl or inc clc fadds arpl faddl test (bad) push sbb dec xor loop fs mov pop sti and fisubr into dec aaa dec call jecxz inc pop sbb nop sbb push icebp add repnz adc test sbb test mov out pop mov jne (bad) lock push pop psubsw and ds or insb pop imul mov pop fs xchg or rolb xchg insb push pop bound cmpsl pop jns gs aas fnstcw mov sub pop inc pop jg (bad) out ror and mov push popf jo out cmpsb pop iret js cmpsl mov lds mov cld pushf test and pop ljmp pop aaa call sub cmpsl add jmp and or out add sub sbb nop cmp sbb xorl mov jae pop pushf shl pop cmp xchg fiaddl sbb out aas hlt bound push nop mov pop mov rcll sbbb (bad) xchg add js ror adc dec add xchg dec mov jp scas push outsl pop clc lret add mov enter mov outsl sbbb mov push xchg jl stc loopne fistpl or enter ffree inc jne pushf es push xor lods sti mov addr16 (bad) adc xor or or insb call add orb push shlb pop andb ffree out pop cwtl pop jbe adcl out cmp popa mov insb pusha sti xor bound ror nop cli mov out movsb mov add xor (bad) pop push inc call ljmp pop add mov xchg (bad) and xor test pop aas loopne sub mov cmp popa cli nop sub or sbb sbb movsb cmp jae (bad) mov jne add xchg lret int3 or or pop add int or and insl loop pop imul adc leave pop insb (bad) xor add cmp xchg shrb call (bad) jno sbb or mov adc outsl xor jae out mov enter jle and (bad) out loopne int3 sbb out gs jg sbbb mov xchg inc jns or ss xchg push ljmpw in sub mov ds nop mov cmp jl add scas sbb insl add push pop adc outsb sbb sub sub arpl inc adc pop push pop sbb ja js mov jl out xor (bad) bound (bad) leave test add or push test sbb cwtl pushf (bad) movsl sbb jae xor adc lret dec dec or xor cmpsl andl rcr add sub mov push popa addr16 push pop mov cmpsl push test jl aad pop fucomip (bad) cld lock loopne ds sub xor adc xchg and jne sub xor push jno add jne fisttpl ficomp lahf adc ds fs xor roll xor and js les jp mov stc xor sub pushf push mov jns flds and xor hlt push clc mov rorb cwtl clc pop mov pop xchg andl jo pop mov in and sbb lods push xchg in inc nop test jnp dec pop movsb dec fldl add mov sub add inc cmp adc dec test cmp push push int3 cld and adc (bad) insb or xor adc pop or add jle cmpl mov test ret inc outsl sbb sbb adc sbb nop adc icebp fistp jbe das and cmpl sbb cltd mov jg push xchg ss mov enter mov pmulhw pop and add outsl pop ja loope or mov dec jne std cmp (bad) imul pop xchg add insl std dec out jns sbb sub lret aam clc dec sbb cmp pop cmpsb rorl xchg bound ror mov aad xchg mov mov call loop add adcl sub mov incl js jmp test mov mov roll in or pop mov inc mov sbbb dec fcmovbe dec mov or jmp push cmp les lds mov dec pop or xor inc lahf pop inc pushf arpl (bad) js jp cs mov cmc sub jnp add dec or inc aam pop xor and fld xchg in aam adc repnz push add ret loope xchg lods push xor cltd and movsb inc inc xor insl lahf outsl sub mov xorb fimul lret push (bad) jne (bad) xchg lods sub mov sub mov cmp add loop sbb push xchg enter xor aad lods push test (bad) arpl inc dec in or mov dec add (bad) sahf ret pusha clc push inc xor aad and mov sbb test mov fcompl rcrb mov sbb mov jne rcrb aad icebp ss andb sbb test add ret les and push add xor insb jmp mov or scas lock dec add add (bad) xor daa repz je adc pop pushf pop mov pop xor (bad) lock daa pop mov cmpsb and fcomps adc add pop shrb cld iret loope cmp add into pop push (bad) push clc roll daa icebp mov jnp mov add add out and stos arpl aam aas mov add cmp add cmpsl pusha mov loope (bad) call pshufw jl xor test inc shll lods mov fdivrs cs mov lcall popa inc rcrb pop movaps into out and lret cld scas xor test test les int or addb fwait xchg shrb popf add enter cltd add mov inc and shrl mov das cmc mov add inc pop es cmp cmp add popf rorb pop sub xor dec xchg fnstcw daa or adc sub popa or fisttpll pop dec inc inc xchg add xor nop lds mov sbb movsb cmp (bad) imulb xchg add pop rcl outsl mov dec add cmp je add pop pop mov add lret (bad) pusha mov add mov xor add xchg xor add xor aam push outsl cli sub (bad) in sbb (bad) nop mov dec aam pusha mov add and (bad) pop nop das test inc add aam mov inc pop mov out loopne dec pop sbb aas lcall lds xor and mov out shlb push or push loop repnz and mov mov dec shufps push cmp push test xor and scas rolb (bad) lods and sub (bad) cwtl sbb popa ret test pop adc and add cwtl pop call mov pusha daa pop test cmp mov jo mov push pop mov cmpb add fdivl movsl cmp cmp bound inc adc sub xor mov pop mov jne js xor pushl pusha add dec loope iret (bad) jne or fisttp push jp ret and fildl out lcall add push inc adc xor orb pop das mov mov and pop xchg cmp add mov push xor loop out sub (bad) out pop mov push mov sbbb and push sahf jecxz sub push push cmp imul pop dec add xor xor cmp loopne sbb add pop xchg adc inc xor mov add add push insl nop andps push stos add and fdivs xor add mov cmp mov dec cmp sarb lcall push xchg push sahf test adc add dec adc mov ss pop lock push (bad) sub loopne pop in cwtl (bad) call insb nop and movsb movswl push pop mov dec cmp xchg je xchg nop adc sbb sbb mov adc rolb jo gs adc fldenv or xchg imul sbb sbb test rcrl nop add movsl and lret clc in xor arpl mov mov insl mov dec test lock (bad) sbb pop mov mov repnz fcomp mov call sub out mov adc jne pushf xchg jge push xor xorl inc insl push and sbb mov mov jmp ret pop ret inc cmp (bad) xor fidivl or and mov or test and cmp or test mov push xor dec sbb push mov sti js xchg dec int jle xor mov xor out add mov add pusha imull add popf movsl inc push and pusha lret in dec icebp outsl jb push (bad) xchg aad rcll and sbb mov adc add mov dec add out jno lock add push cltd dec cmpsl mov leave xor mov pop mov popa dec cmpsb testl dec inc mov shrb add adc xchg add jae cwtl movsb xchg lea pusha adc and or mov cmp and dec push jo stc or and sub movb and mov fiaddl insb and add dec (bad) movb mov outsb int negl xor jle add xor fs test mov mov pop repnz fadds hlt add pop mov add or repz add xchg push adc loope xorb insl rcrb jmp stos rcrb mov repnz cmp pop test jecxz mov or mov mov cmp xor mov mov sub into push es or mov xor adc push test xchg xor sub dec (bad) je inc hlt adc mov data16 mov mov pusha mov cmp pusha roll mov nop xchg xchg rolb insb insl cmp mov mov add jg push addr16 xor add (bad) repnz sub or (bad) cmpsb out mov push dec adc xor add xor stos pop pop icebp scas pop push incb or dec or pop testl jg xchg movsb (bad) mov mov lds add fsubl pop add mov push pop lcall xchg push rorb push adc push or leave jo sbb jbe lods xchg imul sub repz in sbb pushf xor cs (bad) popf mov or stos clc jp dec loope pushf push fcomi ss or mov scas push jno add cli cmp lods add sbbb add mov les jo cmp inc (bad) pushf call mov jnp test iret (bad) movsb pushf or (bad) jo sub adc mov add and inc ja jg cmp and loop (bad) mov das pop add inc sbb flds movsb stos push fistpll ss nop je je pop test iret push cmpsb push (bad) mov sub add add push jb lods std jle divb mov inc jle xor clc pop sub jmp xor xor clc enter pop es pushf fidiv jle loop popf (bad) bnd xor and addr16 push andl loop aas repnz arpl mov imul or test daa lods xor call js push mov pop arpl add xor in mov das xchg cmp and and xchg dec out mov ret ja jecxz lcall call xchg pop mov and test dec nop pusha sub jno lock add cmp adc mov or shll addr16 mov xor xchg rcll cmp add loope and push sub jo gs mov (bad) mov jecxz test shrl mov adc in cmp push push lea pop xor jecxz cmp and mov stos push movsb lods subl aam lods mov jno push js or rorl andl mov mov xlat pop jmp dec mov test lahf lea sub mov lock aam pop add pusha pop push aas xor mov scas test mov mov sbb sbb mov or sbb insb inc adc adc inc test (bad) js dec jl or lret popa inc es jae sarb nop test mov ljmp stos cs addl pop fistp sub pushf dec or sub xchg or mov in (bad) cwtl shrl std adc sub icebp adc shrb inc arpl out xchg push adc and xchg push rolb les jmp enter insl arpl add xchg inc mov test movd popf mov sbb pushf pop cmp add or pop push dec push loopne movsb cmp and mov and dec aad inc or fs mov dec call insl mov jo stos cmp movsl add cld cmp mov outsl cmp cmp mov push sub add stos pop sub dec aam inc jg rol mov mov (bad) inc (bad) rorl mov dec jae push sbb push mov xorl push pop pop push decb xor mov push aas jle sbb data16 bound fcoms mov xchg jp shll mov pop pop adc push das add rcll js aad push addr16 xor mov adc or inc incl sub jmp flds cmp fdivs lea (bad) movsb call add xchg jge or call call sub lods ret mov aas adc dec mov outsb mov shlb sub repnz js inc cmp add mov das test aad add or jecxz,pn shl pop mov dec and out pusha inc fstl xor inc inc in clc sub and sbb (bad) fnstsw mov pop in xor (bad) push mov add cli lret sub xor mov mov xor inc fldenv shrb add js pushl push ljmp test fxch enter add jg jno pop stos dec in and fs (bad) mov push mov adc or adc out fstpt or pop sub add popf (bad) sub mov or (bad) sub dec add pop inc bound pop jo faddl inc enter test mov test outsl hlt das sbb pop addl cld rcll cltd roll push push inc xchg (bad) cs adcb add aam sub xchg pop add mov fbstp xor sahf or outsb mov add mov (bad) shlb lods sub cmp call punpckhwd sub jns fisttp ret je and cwtl pop jl adc mov adc rorb jne cld adc sbbb xorb sub mov cmp hlt popl lcall xor adc andl cld mov xor hlt mov bound shll mov fdivrs cwtl cwtl adc (bad) je xchg xchg inc test cmpsb or push add out cmp pand add inc jl jno add xchg fs iret addb and add lcall add add cmpsl add mov ljmp ds inc add bound add jbe das adc jns xor push adc mov mov add insl cmp xchg fsts jbe adc addr16 lock cmp cltd sbb rclb pop std add clc cmp pop push pop adc pop rol sub add inc pusha test loopne fs stc or mov inc mov andb mov or xchg mov add mov xchg dec adcb iret sub icebp rorb jns addr16 aad rolb add jecxz roll iret ret hlt mov orl test lea cmp pop and sbb xor out stc in mov cmp push xor jle add push cmpsl xchg mov jge xor pop and loope addb jl movsl push mov (bad) adc push add xchg dec sub add in imul mov nop cmp aaa (bad) movsb rorb loope subb push and mov xor sahf mov mov mov xchg push cmp or pop mov xor pop into lock (bad) mov jg push adc cmpsb add insb mov rolb xchg adc pop inc popa mov lahf mov test lods leave gs fistp lret push cmpsl sbb mov scas pusha cmp or xor dec xchg cmp pop sub and lock dec pop xchg add adc (bad) movsb xor mov inc xchg (bad) iret add imul pop lcall or ficompl divl dec fwait xorb add nop enter aas and (bad) mov lret push xor dec into decb push pop in push add mov or or pop jno lock addr16 cmp jl (bad) popa sbb sub scas adc or mov sub add das add outsb mov jns pop adc or dec dec mov xor std lock dec js push and rolb cmc dec cs sbb mov sarb lcall add ret (bad) xchg adcb lods punpcklwd sbb dec or adc cld shld pusha in pop (bad) outsl dec lods jo add cmp pop aaa add sbb mov adc inc dec xor clc xor sarb add xor popa movsb cmp mov add ret xor les mov dec add mov xlat testl pop jge push add mov call pop ja xor test dec jl dec jecxz or jns xor and xorl lods or dec push jnp lcall cmp (bad) nop adc add adc mov mov aad cmp jecxz adc iret sub push or xor mov jae cmp loopne inc xor bound lods test decl pop les or pusha or mov shl xchg ret (bad) out js cmp cs fcomip lods mov mov and out mov or xor mov mov mov test and push add xor lods jge sahf dec sub add sti pop dec mov aad pop rcrl adc jge test cli movsb add jne (bad) jl mov dec addb idivb cld outsl mov dec mov mov pop loope ss or adc cmpsb mov push sbb clc xor add xor cmpsb or sub loope and lods mov mov fidiv sti leave out clc arpl add movsb out mov mov movsl adc addl add mov pop push repnz push es hlt sub inc sti ja addr16 les ret push add or (bad) movsb mov xor and mov repz in push cld leave add (bad) scas pushf push pop cmp push xchg xor jno lret loopne and lea out inc jae lods leave adc jl into cwtl or mov into adc test xor xchg je call adc push add jne lock cltd (bad) jp xchg aad pop test fiadd push or fsubs cmpsl out or fistpl adc cmp dec lea test add mov and sub js out xchg dec and lods or push cld outsb sbb adc mov inc xchg or add les pop pop insb fiadd add fbld sub inc or jo addb add cltd xchg stos and cld sub dec or addr16 (bad) push add cmp add adc and xchg xor jns jp fild xchg (bad) add (bad) xlat adc inc fldcw pusha jo lcall mov and add ret clc or (bad) fsubl mov repnz clc ret jle cmp xchg sub divb popa sub jl nop push sbb mov test mov xchg sub xor mov cmpsl movsb mov dec test mov xor adc rorb cmp jb test add out nop inc mov adc nop nop add pop adc repnz or ret and adc bswap adc addr16 xchg xchg bound cld sub inc (bad) aam cmp dec pop pushf sbb cmp popa and test addr16 push xorb les lods add jmp call (bad) sbb in sbb popf iret les push mov or adc enter jg sbbb test inc and sbb incb mov add sub mov dec shlb ret or pusha and sarl int3 or stc pop push mov or and xor (bad) jo xor add movsl lcall (bad) adc addr16 sub mov rolb jns outsb (bad) sahf jns push sub sbb xor loopne mov lret popf in dec fbld pop movsb andl (bad) leave pop das jb and add andb sub popl adc cmpsl popf mov pushf push (bad) das xor or pop jns addb sub das or pop xchg cwtl mov push xor inc dec jb sbb pop loop enter add inc repz xor mov daa dec pop add push pop loope cmpsl sbb xchg adc or fdivl or movsl and setge ret test enter and popa sub lcall movsb aaa data16 cmp (bad) xor or xlat xor sbb xchg lret loopne pusha and xor or pop push mov mov or mov ja cmp loopne dec sahf xchg mov add pop icebp (bad) dec and or xor jae push dec add xor cmp (bad) enter cmp nop and xor jl add stos pop dec jl jae pop add mov inc in sbb outsl aam mov int3 mov dec aaa repnz sbb ja add xlat rclb mov xor test scas out inc cmp dec adc sub push cmp int3 fs mov inc pushf cmp push pop jnp repnz dec outsb in fmull jae mov sti add aaa out fsubrs cmpsb xor cld (bad) jecxz movsb xchg int3 mov (bad) mov js adc cmpb es or add jns mov xor cli xor jmp and sub pushf add divl cwtl lods inc mov popa sub std xchg dec add outsl (bad) repnz add es mov fisubrl cmpsl fcomp call pop jno xchg pop xor lcall call imul dec pop jns ljmp fucomp add lcall rorb loopne js pop insb mov addr16 push push lock dec pop sub insl repnz mov shlb pop stc push in xchg pop addr16 cld mov push and int3 xor lock sti pop cs call jl aaa (bad) icebp cwtl cmp lock subb cmpsl movsl mov data16 bound ficompl lret scas test aam mov pop enter shll cmp fistl or xor mov or int3 cwtl add add add fisubl test add popa push test pusha hlt mov jg pop push mov lods xor and jecxz dec aam fs les add adc sarb loopne int3 into adc push clc aam and lods dec mov xor aam xor xchg add popa (bad) pop lock sbb sarb add addr16 mov (bad) mov mov add std mov cmp inc jg jle faddl data16 daa dec clc push add sbb enter test add xor mov adc add addb sbb jbe and mov add pop addr16 mov js mov incb pop out and xchg xor mov jnp in popa or adc push and and pop fs les addr16 dec add (bad) or dec push sahf mov fdivl pushf sub into inc pusha repz popf cmpsb lcall xor mov pop cwtl adcb push jns es lds sub inc mov or sti dec pushf xchg stc test push dec lret mov shlb add andl inc dec add xor call mov sbb test or xchg adc adc add adc xor mov into mov mov xor mov sub add call pop xor lds movsb test daa lcall insb (bad) arpl pop mov leave data16 pushf pop stc push pop dec fwait xorb jb pop xor add sbb insl lods pop sbb bound int3 lret dec mov in cmp pop int3 cmp add adc addr16 dec nop insb xchg adc push push xchg je adc mov and ljmp and sub pop mov xchg aas adc add lcall fidivr xor xor sub push lods lods cmp lock push icebp xor cmp mov (bad) clc mov scas xchg cmp add pop pop fidivr or adc add phaddsw (bad) dec xchg xor mov orb ljmp sub and std push dec mov cmp add cmpsb mov push enter lcall punpcklwd clc mov test sbb add mov xchg iret jmp movd bnd and add pop push in neg pop test rorb enter movb push xchg mov add jecxz aad or add daa out mov add fnstcw cmp dec cld dec add and lods mov imul push test push out mov mov inc sbb outsb test or push inc aam pop add push scas xchg es cltd cltd push push sub push addb cld and push rcrb add push mov aas test aam mov cmp mov cmp and lret push pusha stc adcb cmp outsl push stos dec add push pop (bad) and movsb sub dec or cld rcrb inc sbb sbb lods loope inc add xchg repnz dec push (bad) xor pop adc mov mov add stos dec dec mov sub sahf cmpsl xchg neg loopne aam jg ds rolb (bad) push (bad) push or je es push mov add je div add adc jge (bad) hlt hlt lock inc cld push mov cmp jle jg adc paddq cmp cmp push packssdw clc ds dec lahf das enter stos bound mov cmp in mov sub insl ljmp inc fild pop es adc sub and sti push mov divb loope dec std and push fwait lods popa mov icebp pushf outsb call (bad) fldcw popa and inc test lods fs cmpsl mov fldenv mov jge xchg or mov xor pop adc je add push inc or xlat pop mov xchg fstl sbb xchg jmp ret cltd stc mov pushaw (bad) adc popf xor push mov lods and cmp push int sub dec dec movsl pop push das into cli or push adc test mov stos dec inc inc outsb jo add jnp adc ds xor lss or adc jnp fs and and sbb and inc jmp push lea jo movsb lock nop mov sub icebp mov punpckhwd sbb or mov and sbb xor scas dec mov pop mov out jne dec dec cwtl mov insb pusha dec (bad) sub loop push dec sldt int3 cmp push jl lcall cmp add sarl push daa dec xchg insb pop pushf test jae arpl cwtl push cld out mov test je xchg stos add jge in mov jle or and in dec push and inc cmpsb out je add sahf mov shr xchg icebp sub dec lock xchg dec cmp mov cwtl sub ret dec pop mov sub and push movsl push imul sbb outsl and sbb shlb hlt add aaa lods xchg notb adc ficoml or add mov negb jle mov mov or add push or fistpl jmp sbb inc and push pusha mov adc push xchg xchg adc adc and outsl ficom xchg adc xchg insb push or ffree inc adc dec popf lods mov (bad) dec mov scas insl inc cld iret push jg mov mov inc movsb xchg adc adc pop pop xchg and test out mov adc mov adc ljmp add cmp pushf add and arpl jb rcrb subb fnstcw add push jl add sub xchg add jp rcrb add adc mov in roll or out inc mov lods sub mov std cli push (bad) setbe dec rcrl jnp add (bad) das add stos stos dec aad mov mov mov xchg inc sbb push adc insb and mul (bad) fstl inc pop sti sbbb xchg aad dec pop pushf adc mov sub in add jae lahf push and add nop or pop and mov sub jne addr16 xor loop xor inc pop pusha add mov cmpsb mov cmp (bad) pop (bad) nop in push inc mov add sbb and stc sbb push xchg jo cmpsb fidivl adc rclb push lret push push push inc roll lods sar xchg les adc mov lods pushf push push (bad) adc shlb dec enter mov js xor daa mov lock cltd add lods scas push mov sub js cs inc inc andb add in jbe loop movsl arpl adc shlb push sbb fcoms iret and pop (bad) loop sbb xchg mov scas add test pop add sub sub dec js adc or pop push add fidivr push add xchg popf adc je xadd inc pop xchg mov call loopne inc mov and (bad) (bad) cld and arpl fwait mov fisubr add int3 ds adc adc add xor loopne cmp minps ret aad push stc add xor sbb cld leave testb xor add cmpsb lods dec dec fcompl js aad and cmp xchg in shl test jmp add and mov dec (bad) add outsb xor pop addb inc jmp fwait cmpsb mov sub ret clc adc xor test mov adc jb add aam xchg pusha movlps lahf add xor push imul or or xchg add inc adc pop stos ja andb push div pop (bad) sbb scas nop fstpt dec dec daa cmp push push xchg mov or aam (bad) push jae add add push inc (bad) cli jle loop adc add xchg push push jmp stos arpl xor lret mov add inc insl adc test xor xor cwtl (bad) dec lahf fs cmp push (bad) cmp dec dec jae adcb adc fidivr xchg push xchg dec xchg fdivrl pushf add daa into sub test mov js mov push mov icebp or and mov xchg cmp pusha xor leave lods bound into and mov sbb pusha inc mov pop daa ljmp mov fwait push pop adcl ret adc and push es test aam add push xchg lret mov dec inc adc mov mov int3 andb rcrb es lret sub push dec and daa push mov fsubrs jo imul pusha lcall aaa inc int3 dec sbb and or mov push add cli sub stos push dec iret push cmp test add xchg das add jne add cltd nop xchg outsb push push dec or cs lods add nop pop loop int3 fadds xchg xor inc dec leave or sub add in mov sbb (bad) xor and sub mov call inc inc test sbb loop and or pushf fs cmp ret mov lods insb xor jp call pushf xchg add push fsubl add mov xlat ljmp inc and add xor cmp (bad) fcompl dec subb add pusha sbb pop test add sbb inc dec pop jl shrb and mov and push adc rcrl lock test inc cld dec push pusha and sub add arpl cld jecxz or dec pusha nop addr16 and jnp add daa pusha fldl2t test adc cwtl scas push mov mov jmp rclb or sqrtps or or out xchg jmp add pop cs and fs and fdiv out add push sub addb pusha and imul xor cmp pop sub cmp xor add or and loopne addr16 sbb stc push mov push pushf es pop sub inc mov mov enter xor add mov les rorb jbe pop andb mov (bad) dec loop stos xchg stos add add jmp xor mov jae popa test cmp push cmp add pop and pushf mov inc fs mov ss jno loopne inc mov leave andl xchg add mov pop add js stos mov push pop clc in or sti or sub push xor inc xchg or cmp (bad) cld and pusha sbb test rclb dec add cmova outsb rcl jmp lcall xor mov sbb xchg push outsb add jmp mov (bad) inc in adc dec adc xchg cmpsl jg mov mov es fucomp pusha push popf fisttpl dec fnstcw (bad) pop pop movl jmp arpl movsb out icebp outsb push inc jg jbe mov jle adc cmp or sbb sti add popf setne push sbb jl push sub shlb add inc jg daa xor sub js or xchg xor pop mov cmp mov shr or dec pop xor pop in fmull lods mov adc pop add aas xchg cmp bnd jbe push mov fsubrl dec inc adc mov hlt nop mov xor mov add push std ret les test dec fdivr push test lds and les aaa loope sbb xor xchg xor mov sbb push fstl xchg inc gs push add enter xor into or test stc dec nop xor pop testl cs push test jp call fdivrl (bad) inc jg jno cmp sbb frstor subl mov inc xor aas add mov cmpsl mov adc pop xchg clc aam mov test inc enter retw add aaa dec add aad pmulhw xchg mov iret in sahf mov inc pop add cmp and or pusha dec cltd adc jns fs inc adc out out mov adc push add cld adc out andb mov sub or sub pop jecxz cmpb mov (bad) xor and push adc (bad) popf (bad) mov add je and sbb ds add leave mov in xor enter jnp xor int ret ds shl add pop aad push mov fadds xor mov arpl sarb ja nop inc inc outsb add sbb fs xor adc cmp jbe and iret dec mov xchg pop mov push insl fistp pop or movsb jae and scas faddl fbld ljmp lock xchg cmc gs stc or mov push mov push add movb add xlat add in xor sar les inc aaa xchg imul enter imul lea add fsubl int3 (bad) mov cltd pop adc fildl jo lcall push (bad) xchg push lds and fnstsw inc popa add cmpsl loop in push push add out adc enter adc insb jg mov into out xchg fs (bad) and xchg and xlat inc pusha inc xor rcll jne sub add push add andb es mov mov and xor sbb push add mov sti push xor add mov add dec push mov push add mov lret shll in xchg jo sti mov rcrb pop ljmp add inc les add sbb adc cmp in test add lock movsb stos sbb aam hlt inc imul loope shlb inc sbb add adc sub xor and xor sbb outsl gs scas mov add and out cmp (bad) lock dec xchg inc and lods add xor adcl inc repnz mov out andl push adc pusha inc rorl mov add sbbl mov (bad) dec and (bad) sarb (bad) (bad) sbb int3 push inc adc bound adc add cmc scas ds pop add inc bound clc xor imull cmpsl lret ljmp mov jb push fnsave mov mov adc addb dec je addr16 lahf (bad) sbb movsb push cmp pop pop mov sbb jae rorl bound add mov in sti and nop cmp insb mov inc lods movsl les rolb mov add and cmp fs jnp and out sbb enter push adc adc fcmovnb sub push pushf add lds xlat sub lea movsl adc inc and push lret sbb sub xchg mov jbe adc lds inc outsl (bad) mov and push dec mov fcoml test jne pop in mov fistp adc (bad) xor insl xor adc fs mov lahf pop add mov lret xor js test lds or sahf std addr16 jge (bad) or ret (bad) mov mov cmp dec sbb add std push mov add in sbb pushf xor dec andb mov rcrb imul inc lock xchg loopne daa or pusha les mov rcr bound inc xor pop arpl sbbl push mov repz repnz add or mov and mov inc rclb loopne inc xor xchg mov mov outsb xor fdivl mov xor in jle or ret jmp cmp sahf pop mov ljmp inc in or pusha inc push psubsw jecxz cltd or mov add loop xor orb aam cmpsl mov xchg mov bound ret and xchg xchg or dec xor pop jmp pop test mov in or rorl add fs mov mov ret fwait dec or cmp push pop dec add xor arpl cs xor inc adc add push int in ror mov lret push add fwait dec icebp xor mov hlt rol in shl add mov fcompl jmp or add add lock jl add ljmp (bad) mov add loope or and addb data16 mov xor push add popa pusha mov jb adc and sub mov ljmp arpl gs stos add stos add adc sbb jns add gs ret imul add mov jp out sbb jno insl test push xor insb andb xchg sub pop clc xchg push jo mov xorb in repnz stos push fsubs aas test sub add add lock mov add xor mov cs mov adc sub loop (bad) jnp loopne (bad) shrb rcrb xchg add xor jle ds test add lcall add jg orl xchg add in jno dec and xchg lods inc and push (bad) xor data16 adcl sub xchg mov int3 add pop loopne xor mov popf mov and and xor in push push xchg addl movsl lahf idiv push test adc aaa or xchg je sarb push dec sbb xor mov push movsb and lods jl and push mov negb scas in and loop movzbl sub adc jno push or pop roll and movsl inc add sub and add (bad) int3 jne test add and xchg (bad) and lds cwtl cmp push push test adc and mov mov imul or shrl and jb mov cmc or add push pop mov pop rclb and dec pushf sarl add add js ja insb test jno sbb (bad) je pusha rolb popf scas inc sti or mov js test and icebp add mov cli add scas sbb and sbbl xor sub ds rcrl and mov add fmuls cwtl aam int mov ret leave stos (bad) xlat add mov imul add ljmp push jnp scas add xlat test push cmpb dec in adc mov add or inc cmpb cmp (bad) cltd and jno mov lret (bad) and mov mov push (bad) (bad) lcall inc jecxz push orl (bad) mov rcrb xchg or insb (bad) scas test pop mov cwtl inc ljmp icebp fwait and pop imul inc xor or jmp lock mov sahf out add push dec cmp orb ds jne xchg push add and je cltd add xor sahf ror or sub fsubs xor cmp sub mov inc cwtl xor ret push xor fcoms jmp in mov sbb jae scas cmpsl outsb push add xchg jns xor push adc sub nop (bad) repz jecxz pop xchg adc mov lods hlt outsl mov add mov push sbb pop insl sbb rcrb xlat xchg add add adcl inc xor xlat aad and iret cltd ss and fnstsw and rorl pop adc dec sbb sahf push and push ret int3 and cmp dec rcll outsl xor and call cltd xchg and lods repz hlt inc (bad) je add out aaa enter ss mov (bad) xor xor fstpl inc push cmp ret aas das add outsl popa and aad aaa xor rorb or and add (bad) movsl pusha xchg xor hlt or xchg or or das pop mov xor sub jmp mov (bad) mov leave add push ds push xor (bad) das shrl fwait push sub push loope add fstps sbb pop ljmp dec arpl incb js mov jp shrl sbb sahf and cmp mov mov mov cmpsb mov xchg aad and out dec popa jmp sub loope push cmp enter xchg mov fxsave out (bad) cmp add mov add inc lock mov add adc xor and incb mov add jmp cwtl add mov xor xor rcll add sti jmp add and rorl add sbb pop and jl or cmp push sbb popa jl pop js (bad) negb or add daa insl and sahf pusha pop cmp imul std subb clc stc lret push cmovs (bad) pop mov lods enter ljmp pop xchg sub (bad) aad andb pop xor inc das lret bound or mov or adc pop loope sub jbe xorl movsl jnp or sub xor rcl pop mov mov push inc add arpl jo rolb pop mov adc sub cwtl test dec xchg mov pop sub (bad) xchg inc sahf adc or pusha mov mov or es rorb inc add pop adc dec outsb fildl out pop arpl and xlat mov fistl pop andl clc addl add xor cmp jb xchg outsl into leave and push loop push lods push and adc xor pushf pop mov test lock lea sbb pop fcmovbe adc mov adc shr (bad) push inc add cmp loope or inc mov push cltd push pop push lahf scas popa jno pop outsb jno lcall xadd (bad) pop rcll je add nop xchg and push push cs (bad) cmp lock or and or xlat inc ret dec loopne pusha inc rolb adc mov int3 test sub mov adc xor inc add rorl add xor roll pop (bad) mov add fwait test jg add rolb mov fsubl and xor iret pusha mov repnz add jge xchg mov add pop scas (bad) fadds lods out adc scas rcrb jns mov cmovp adcb add jae xlat jnp inc movsb mov (bad) dec dec movsb mov pop fs dec mov (bad) dec cld add aaa sbb iret add (bad) push mov out push aas out fucom adc and test sub cmp mov mov mov je pusha inc loopne loope aad dec pushf js cld push cmp sub mov jmp xor pop lret cmp add shrb add pop cmp dec sbbl cmp sub or mov mov adc dec fmull popf test outsl mov push stos xlat mov sub fimull cltd je lods mov pop ret cmc faddl jne pop (bad) aam enter fstl into subl mov cmp pop repnz inc mov push ja mov sub (bad) adc push cmp js leave add pop and pop es add clc or mov js inc push sub and in sub in or xlat pop cmp add mov dec cmp or push out push cld into loope sub (bad) lock shrl sub xchg xchg xchg insl add lret mov das mov xor add arpl sbb push sub dec movsb add fistpl bswap in bound aad add movsb loope xlat bnd fcom and mov push sub mov mov insl testb sub cwtl enter and outsl jno pop push or and in out and add mov add roll lock (bad) in out ljmp negl mov ret pop add popa fnstenv xor or subb push inc fldcw mov xor call test pop dec pusha mov adc adc dec jg jp dec icebp pop jnp or enter into test test pop leave push and mov mov or sbb and cmpl lahf cmp ljmp daa jno xchg or jo jne fcom jmp inc dec sub and xlat push cs aaa mov inc cwtl mov inc pushf dec mov and adc aad test dec repz cmp xor add ss adc imul loope pop in roll bound xor lods push mov (bad) test jo (bad) jnp mov mov mov add xchg imull out push loopne sahf add adc lock pushl stc push inc inc arpl add sub inc or jo sub lea and push pop not mov pop inc add test mov hlt lret enter xor cmpsb loopne inc dec aam dec add adc cmp sahf add loop cwtl sbb nop or or add cmp push sbb push adc push xor adc xor sbb movsb adc xor scas nop les in xchg mov xchg (bad) leave xchg and lds or cmp sub pop mov push and andl rcrb into lea mov jb ljmp add xchg dec fimul mov add ja pop aam add cld adcl dec add dec xor shrl lock lods (bad) fwait (bad) or outsb add imul add fmuls clc mov inc add or int enter jl cmp adc inc les idiv pushf and pop orb push xchg dec std push nop push adc mov xchg push sbb inc and or (bad) jl sbb mov and or icebp orb sub add adc mov or inc adc jo in dec or jnp add pop xchg test iret adc mov push and add insb test fisubr stc icebp dec lea add xchg mov call scas stc pop add add xor pop nop clc mov add jnp sbb ja psrad push mov push sub jecxz and lods cwtl fwait arpl inc inc das shrb lods gs fsubrs call xor xor sbb ds out pushf addl cmp fcmovnu cmc sbb pop js in jecxz arpl push dec xor fwait jnp enter gs cmp pop shl fldl2t rorl or xor cmp xchg sbb popf push fnstsw xchg call xchg xor jmp xchg mov mov ja mov enter mov loopne loopne addr16 data16 mov sahf out mov gs sub arpl inc cltd jmp adc loop enter call pusha or or and push aam mov sbb jmp lcall jo add clc add pop or mov xor push (bad) stos mov adc jl sarb lds dec adc or mov shll or movsb mov test (bad) mov setae jnp ret mov or xor stc aam and sbb push mov in into xchg push ljmp push mov jo adc shlb add fnsave add cmpsb sahf dec in xor pop mov mov dec loope adc (bad) jmp dec xor shr and push adc (bad) mov sbb out jecxz inc std xor leave add adc or dec inc cmp data16 pusha mov lds sub test adc test adc pop or gs and cmp jl out or std dec cltd cmp pop pop ret xchg add pop pop cmp lret mov push inc les add adc push or lea push into adc or ljmp imulb sbb inc out sub ja add fs loop push push mov imul iret (bad) pop xor adc cmpl push pop loop xor inc enter inc cmp xchg pusha cmpsb mov inc xchg xchg mov inc push mov push pushf and fcoml jecxz nop inc rorb rcrb pop je in inc cld iret pop nop cld insb cltd adc pop les jg jl xchg cmp nop add sub sti (bad) leave add inc or dec js fs sbb inc or pusha jo add fsubs xchg mov loopne inc rcrb or and xor add and sbb (bad) shl xor lods popa push inc jo pop adc lock sbb cld imul add call jae mov aad mov xor xor lock and cs lock xchg mov and in inc pop out in repz sbb aaa or xchg negl xor inc stos cltd rorl xor mov pop repnz (bad) sbb adc (bad) dec sub pop js iret fdivrp or mov inc lret shll sbb sbbb dec add imul sub int dec add mov dec lret (bad) pop inc mov push adc (bad) mov dec sbb loopne mov or std push dec sbb mov mov out loope dec les pop pop out push pusha mov push sub or cld add push pusha (bad) push mov pop loopne xor nop lock mov inc and mov dec or pop out mov cmp mov idiv int lea mov xchg xor cmp sub loope leave dec push and addr16 push pop adc sbb push pop sbb pop inc inc dec popa inc pop ljmp daa fadd int pop sbb pop and and push push arpl sbb sbb out inc stc mov xchg nopl jmp (bad) xchg adc cwtl or mov insl addb aad das sarl pop or je mov aam (bad) aam jno mov jl roll fs dec pop sbb pusha sbb pop xor mov mov inc inc pop inc loopne sarl test test faddl or pmulhw mov and mov sbb pop mov ljmp or xchg popa or or popf dec cwtl decb enter roll mov xor adcl lods dec mov (bad) imul sbb and xor pop dec add scas cmp (bad) leave and xchg dec out adc push repnz dec (bad) sbb stc inc sbb (bad) fwait pop mov out cld add mov mov pop inc add mov push and dec xor sarb add adc pop sbb lea or test (bad) mov sbb inc or xchg or popl cwtl push mov out mov dec pushf pop push mov pop lret outsb push sub fisub push sbb sub mov mov loope test fcoml sti packsswb xor dec sete aaa pop sub lock cmp sbb inc mov cld clc pop lret xchg mov or addl (bad) mov cmp or movsb ljmp push push cmp fisttpll movsl cmpsb inc (bad) and or mov cmp inc push arpl jl test jl add (bad) sti shrl lcall xor jl rcrl push and dec sub into dec inc andl push out push pusha cmpsl or nop add sbb mov or xchg inc push stos lss test or ja dec movsl out sub mov or sub pop (bad) icebp add iret std sbb cld inc (bad) and ja cltd inc or adc and and dec or mov pusha mov and sbb mov adc cld sbb mov sbb shlb xchg mov push adc insb inc pop dec enter mov dec mov int3 xor and add xchg clc fwait inc dec mov lahf popa add push and pop nop mov or and sbb test xor inc rcrb and push sub mov mov out enter adc rorb push pop mov in jl and inc movsl or int and cmpsl (bad) je mov movsl mov mov cs dec cltd xor pop mov xchg mov fnop sbb jle dec or mov add out xchg mov clc dec fadd xor lds clc inc rorb int3 inc in jo roll ljmp nop xchg mov jmp pop adc add mov lods (bad) dec xor dec cwtl add lods nop call je or sbb sbb push adc push or in pop dec (bad) and insb push mov xchg (bad) xor or mov mov mov mov xchg loop pop (bad) pushf int roll jge cwtl or int3 shlb add loope mov adc mov fnop add dec xor scas cmc cmovbe sahf loope xchg pusha js mov mov cmp push mov sbb rcr xor rol dec mov fwait push icebp pop mov mov dec clc ja rcrb and mov iret add out pushf mov lcall cmp es xchg inc mov mov xchg jno cmpsb pop and adc sbb inc cmp sahf dec add aam fistl mov lret mov cltd hlt addr16 aam aam ret pop shrb int dec rcrb mov imul jmp insl mov pop mov lds xchg ss lods fldl int3 ja pop mov out cmpl cld imul xchg push add cwtl lea or add add in jnp and and shr lretw xchg sbb and sarl add inc pushf mov dec push pop dec hlt mov push enter push test jae adc push jl test push xorl sub call rcl add push jl mov iret lock xor mov mov cli mov fs iret adc dec pusha push invd mov adc lea mov inc cltd aaa leave sub add xor or cmp ds loopne xchg pop lahf xor xor lea add daa ja mov lret mov fwait inc int3 inc and xchg lock insb xchg fs adc push int3 push and pop inc xchg cmp pushf into add sub movsl mov xchg ss inc test rolb addl or xlat mov pop or pop mov rolb (bad) push inc inc add iret imul pop andb test repz cwtl int3 lahf mov data16 pop or pop hlt adc and mov jmp clc sub pop inc test imul addb mov dec cwtl lods xchg dec int3 dec insb push je xorb lret lret rcl int fs dec test lods lock in push mov imul sbb mov or xor xchg lret mov mov cmp fild int3 pop roll mov pop sub xchg pushf inc hlt mov dec or insb mov jne ret sbb mov cld dec add hlt iret rorb js dec icebp or clc inc jns test jmp dec repnz cwtl or pop or sbb outsl push mov push pop ds push jo inc or loop pushf pushf sbb cmpsb adc shrl jne subl add test movsb or mov pop cmpsb add shll adc loopne lret add add add cmp mov std inc lock or and jns sti roll mov adc add loopne inc sbb add fld mov movsl adc adc fwait push repz push sub popa mov add xchg xchg jecxz push push aaa mov nop jae or add movsb ja es inc sbb push pushf cmp inc push xchg test dec (bad) sarl add int3 pop xchg dec movsb popa pop sbb mov xor pop adc xchg adc sbb or or loopne dec push xchg cmp je xor in sub js mov pop or jno js push pop xchg insb push jno mov push sbb aas loope cld jl aam loop push adc mov inc adc add or inc add sbb leave mov subb rclb je jecxz cmp add mov cmp sbb or cltd mov cwtl loopne cmp dec adc mov cmpb push rorl add stos inc pushf inc repnz sbb inc dec jne mov stos sahf sub (bad) andb js jns negl mov jnp adc or sbb mov sbb rcrb lock mov imull or mov insb inc push loopne fmul mov adc pop add or push pcmpgtd cld mov push inc aad orb cwtl aas add mov pop lea pop mov xchg mov stos dec inc mov dec adc inc mov adc fnstcw xchg mov enter js test pop test sub or lods adc add test pop push adc insb in add bound pop cmp xor scas or fs cmp mov jne push push add std movsb pop nop mov in mov xadd inc push sbb and cld movsb mov fnstsw inc in mov scas xor adc mov sbb adc sub maskmovq testl and ljmp test bound jecxz jae adc inc clc or dec xor sbbb movsb mov jb mov js xchg rcl adc or inc add adc and xor add pushf adc les jno push xor inc les push or and (bad) mulb push pop loopne mov adc divl xor je xorl bound and adc cmp ror loop xchg xchg mov loopne dec xor pop sub sub mov popa call jne adc fld sti std and arpl xorl pop mov nop pusha inc inc mov add int int3 stos rol test push inc adc pusha pop and mov inc and adc mov jne pcmpeqd add mov cltd movsl or adc jecxz add lock xor sbb cwtl fldenv jno mov loope or out jo cwtl mov xor test mov jo adc lods fiaddl sub adc inc mov sbb and or push ret lock pop enter mov adc mov mov mov mov std add nop mov jl jo mov cld xlat xor aad push leave (bad) jno sub cltd and xor xor inc add rep loopne int3 cs pushf mov loop sarb or adc pop (bad) cmp addb es adc push pop sub mov imul push jbe dec fs rolb inc or mov xchg xorb outsl cwtl dec hlt jl je add xchg ds and xor psraw pop push aam xchg jne sbb outsl mov test xor adc xchg inc rcrb lods bound mov inc jns or push outsl pop sbb adc repnz adc or mov clc jmp mov push cmpsb js xorl push stc ljmp (bad) or adc xchg and out mov les sti jns popf orb push add mov adc dec push add les add mov sub loopne add decb xor and cmp clc push mov mov (bad) ss addr16 xchg xor pusha push mov insb push clc or loope aas imul into cmp addl pop sbb add ss inc pop and and int cmpsb roll and cmpsl and jae xchg lock add sbb pop imul js push lret xchg sub xchg int3 test mov lods add adc frstor mov orl movsb xchg xorb sub test push js pop push and clc adc or mov fprem cwtl push aas jne mov sbb lcall xchg adc cmpl pop or mov pushf mov adc push mov stc or or jne pop pop dec xchg movsb and sti push sbb mov out int repnz mov adc leave xchg enter sub adc mov ljmp ficom in inc or adc sub outsb and xchg arpl or rcll mov xchg popf mov jns rcll clc subb jge sbb mov adc pop inc sarl or sbb mov sub loopne arpl adc (bad) dec push mov dec dec cmp mov bound negl mov insb js pause dec inc icebp and inc push cmpsb pop subl or je mov pop hlt push xor push test or jo movsl fadds (bad) or or push pop cmp scas xchg mov movsl sahf adc or ss push inc (bad) xor or inc add sub popl push pop jns adc fdivl out je push testl add fcmove push popf outsb push add xchg pop icebp xchg mov pop (bad) sub jle cmp xor and loopne lock xor adc inc push jb sbb lds int popf decl add mov and jno dec outsb loop pop (bad) push loopne pop or lret dec insl test hlt cmp aas cltd cs pop dec clc loopne shlb aad or (bad) xor std cmp test out inc (bad) adc cs sbb push insl mov stos jmp xor cwtl mov push xchg jne lods push adcb or cmp or push jns push lods jo test ss mov imul fsubp popf jb sbb lock sbb xchg adc loopne inc pop pusha mov pop mov or adc addl add xor cmpsb mov and iret pusha incl cmpsb xchg sub call and or xor mov sbb mov push pop scas int or ret or loope push xor xchg xor push ds roll and sub pop and or cmc ljmp dec adc mov movsb add mov push mov nop or push test dec xchg xchg sbb xchg shr or push xchg or mov jns pop adc jnp sbb mov js and adc sbb or jb fwait xchg mov inc fs mov lcall sub or xor sbb push xchg in in stos mov test add sbb jbe and push rorl sbb mov aas enter cmc movsl (bad) movsb mov mov dec out xor xor jle call dec mov stos nop add stc pushf movsb mov pop sub nop (bad) icebp test add add mov vpaddq scas stc xor dec inc mov bound gs and cmp jb inc add das push pop dec popf push mov mov lahf xor xchg mov jae mov cwtl jo cwtl gs add loopne les insl adc xor enter push dec (bad) jo fmul mov imul fadds (bad) fdivrl xor sahf test popa pop add stc xchg repnz nop enter popa mov xchg pop jns sub fistl out leave stos push cmp lock dec cmp pop or int3 out imul mov dec cwtl push faddl jp jae mov outsl inc inc test mov arpl cmc popf sbb clc adc lock jb mov cmc dec jo jae add cmp popa and mov xchg adcb or aam es sbb clc aam shrb pop mov xchg in loope xchg and lods in dec add push sahf fwait cmp movb xchg or jmp popa jns pop mov xor mov sbb add cmpsb pop lahf and mov cmp sbb jb enter add dec sahf out pop shrl xor and inc movsb pushf outsb add and jnp pusha mov loop jo es (bad) sub mov rorb or dec and xchg hlt addr16 dec pushf adc and and pusha cmp xor loope in pop lods cmp mov push or push push and mov xor hlt or mov outsl push dec test and xchg or lcall fcompl inc je sbb mov test and lahf pop call add add adc mov data16 or mov mov call add addr16 jne inc mov call sbb push lret inc mov faddl sbb (bad) rcrb mov sbb out add cmp sbb xor sbb pop fwait jo mov in cld push jle es xchg jo clc daa cwtl add fs xchg mov mov sub fsubs mov xchg pop pop and in add outsb faddl ret mov or jno fnstcw lock push out sbb ror add cmpsb push inc jmp movsb adc or les xor subl jne mov repz imul mov sbb cmp jns rcrb cltd add pushf inc inc mov dec in dec xchg push in cmp inc or cmp push jmp inc adc popa (bad) push cmp add sbb mov dec popa leave sbb xor jbe mov jb es in or inc lock enter cltd or pop xchg adc fiadd ret mov out pop lcall arpl add (bad) cmp out jb popa mov iret and jo sahf pop jo adcb lahf jns and call sub and dec inc adc cwtl enter xchg mov out ret sbb (bad) jl movsb mov popa mov dec out mov push xor nop adc push push add fsubl out fs aas jge ja hlt and mov xor mov lods add das adc popl xor push mov mov cmp add rcr in lods add aaa negb fnsave inc or inc stos int3 or movsb loopne lds push jl push ret add add pop xor dec in xchg fdiv push xor fdivl xchg dec jmp test or fucomip and mov xor sub push popa test test pushf inc lahf or xor and mov and cwtl push aaa les faddp add leave out subl fs nop repnz in stos xchg movsl int3 fxch fs xor add call repnz cltd leave and pushf adc icebp mov lcall daa fsubp push rcr adc lcall mov cmp push das mov dec insb test out lods mov mov mov test sbb out or sub clc sbb cmpsb mov into out mov pop insb and add addl sbb sahf xor mov loop inc and adc test sbb push sbb testb xchg repnz xor mov xor rcrb in dec add dec pop leave test data16 pop push mulb and or fdivs mov inc sbb in jp rorb gs loopne jb scas movsb inc es adc jo jb jl call adc cmpsb adc jmp sbb lcall nop lea dec loopne js push and test cwtl xor aam test mov aam leave xor add test rolb out push xchg es mov insb js pop mov mov in pop adc in mov inc mov daa push jle test cmp jno mov push fsub sahf (bad) and bound sbb ds push mov add out or js dec test and leave pusha mov (bad) mov sbb mov cmpsb xchg int3 insb push mov out je test cmc movsl xchg mov int3 xchg (bad) mov xchg xchg cmp int push dec pop repnz test (bad) mov push or fdivs inc or mov mov fs sub xchg fwait mov cmpsb or dec popf add pop pushf sub insl subb jo mov hlt scas pop hlt pop orb les add hlt adc mov repz and inc jmp lret cwtl push inc or in nop cwtl or or nop pusha sbb fisubr loopne test mov and sarb jo sbb rorb cmp mov cmpsb popa lods popa push push cmc dec fcoms or or inc xchg sbb mov js or adc inc xchg rolb sbb lds pop lock mov jecxz hlt xchg or subl notl loop ja mov shrl ss orb rcrb sbb into movsl adc flds pop ds and pusha pushf out cmp sti xchg pushf cmp adc jle nop and mov jno xchg insl xchg popa cmp dec cltd jl or mov sahf add (bad) cli xor in and (bad) lret je insb mov nop es fnop (bad) xchg mov lods or xchg jae mov adc mov enter pusha lret sbb outsb mov call xchg xchg xor adcl sub pop adc mov lcall inc rolb (bad) add (bad) icebp bound xor out movsl dec jp and adc movsb mov cli adc pop pop dec sbb test int3 push je mov inc xchg xor or push adc inc es (bad) mov pop gs cmp push ss pop mov or jle inc in aam sbb decb pop cmp rolb push dec jo xchg mov data16 push (bad) in incl mov icebp data16 repnz out fsubs xchg add notb es sbb (bad) and cmc insl push push les call popf (bad) rolb push test mov or pusha ss sub dec and bound sahf jo inc and dec cwtl xchg lock push call or and fisub or mov mov (bad) adc dec push enter cmc aaa mov fadd test jnp xor sbbl out or cmp sbb cmpsl adc jle and xchg dec shrl pushf inc push or inc cwtl fwait jnp and rorb dec inc add pop loope lock push add sahf loopne mov jns xchg sbb push push xchg loope adc repnz les sbb dec pop lock nop lea (bad) nop push xor mov mulb push js or dec pushf mov mov pop push xchg ljmp popa cld jne loop clc cmp sub or pop scas dec pop mov dec mov adc (bad) jl outsl aad repz mov jge push sahf out adc lods mov jne lds (bad) mov inc and sub sbb leave repnz sbb and mov sbb or adc push cs xchg loop dec cmp mov cmpsl inc cltd int3 add cmp dec dec xlat and mov (bad) daa xor cmp pop into inc adc dec rclb push cmp fwait and jo js pop (bad) insb pop mov pop push sub repnz ret add sbb pusha clc inc lock (bad) jbe fs sub pushl les leave enter sub stos pop loop or inc mov loop in popf test mov cld xchg push mov das push and xchg mov (bad) push nop mov inc (bad) clc push or xchg mov xor mov lcall jb cs mov and push cmp (bad) mov xchg ja sub jb orl push loopne cmp sbb aaa adc imul sbb mov or cltd lods mov mov lock fcoml rolb inc mov (bad) xor push mov sub adc add xor cmp mov in test in sub or fwait nop add (bad) jns mov lods movsb and inc jae push cwtl (bad) dec xchg mov clc add in and inc xchg rclb sahf push adc enter and jle leave inc pop adc sub movsb cmp dec mov es mov ljmp mov fimul adc test jo test int3 call into data16 fs mov stc aam jbe inc inc sub mov adc pop dec push mov adc (bad) rcr es xlat pushf or lds mov std dec mov mov add mov and in add sbb push negb jmp (bad) pop test dec orl or add (bad) and and and xlat hlt gs lahf insb mov mov arpl adc call sbb out enter daa pop rclb dec mov or inc or je test cltd mov fcmovbe lahf sbb scas test rcrl pop clc xor (bad) push in inc xchg cmp push sub and mov hlt cmpsb sub (bad) jecxz sub pop sbb pushf and je lock push stos nop out into fcmovb ds add mov add xchg add mov call dec sbb into jp pusha and ljmp loop test push rorb pusha jle mov cmp add inc faddl cmp inc and push in mov inc lods xchg jb adc cmp test cltd test mov mov nop xchg mov aaa clc js insb sub sub jae cmp add inc test sub loopne jbe adc ja push and addr16 dec fnstenv mov xor add loopne bswap xor cmc or lret and sub mov or adc pushf inc repnz daa js lret ficompl jp sbb ss cmp fimul les cwtl (bad) pop fcoms cmp test mov mov imul and dec add test outsb adc jp (bad) mov add or mov dec push rclb jns and dec rorb cmp mull nop and les lcall ds test mov lods fs mov out or movsb adc mov xchg into test inc subb outsl pop or pop sbb (bad) bnd push jo pop inc test lret sbb lcall ficom outsl adc and cmp mov fcoml or cs inc inc dec in and fs ficomp into xor jmp scas mov in mov data16 dec loope call loopne pop mov movsb loopne sbb add fdivrl push or adc xchg (bad) mov (bad) jno xchg jg xor cwtl adc fwait nop sbb sub dec hlt mov call jecxz pop loopne push mov sub adc push cmp jl insl into mov out cmpsb and and sbb push or stc test mov pop xchg mov and ror cmp (bad) add pusha test roll push inc xor pop or fdivrs test imul adc pop popl push or mov stos stos in mov gs test add (bad) fs xchg dec pushf rorb clc cmp mov jb cmpsb lret cld ror jne clc fstp mov and jae and sbb push xchg test and dec hlt cs and das sbb add aam fiadd inc repnz add test xor jb xchg xor or hlt adcl adc lods adc test aas jg lds adc mov pop inc mov xchg inc pop cmpsb pop rclb or jle incb adc stos fs fisttpl aam or xchg jno xchg das mov lock lds in dec and fdivs push rolb repz (bad) or xor mov out sbb hlt mov and (bad) or aas ror dec sbb cld dec mov mov fcompl shl or out mov cmpsb mov mov jo xchg popa sbb xchg add je icebp movsl jp outsl test pop sbb nop cmp xchg (bad) lods ret pushf add repnz jb add (bad) mov js sbb call cwtl mov add outsb xchg adc xchg sbb push sahf push xchg jns cmpsl pop cmp inc or sti dec mov jge pop bound (bad) sbb mov pop sbb add loopne cmp jle lcall (bad) dec cmp adc les inc and adcb or or daa cmp pusha and mov mov sbb or or xlat (bad) jne jecxz pop pusha mov out jge lds pop add fildl dec mov jle sub push test xchg inc nop xchg sbb jne and mov rolb and sbb fbstp mov xchg cmp test out or insl aam popf xorb xchg sub inc mov cmp sti xchg daa clc xchg fs rcrb xor stc pusha sub adc mov pop fs jl mov rorb fistl fs cli cltd dec push adc fadd and je pop xor movsb stc ret pop jecxz rcrl or mov shll adc jp sub test lcall (bad) inc test inc jno fnstcw sub and mov and mov push lcall sub lds jne shrb push and das loop inc js sub sbb xchg adc mov popa and adc mov jb and jo sbb ss test addb sahf mov or cld mov leave pushf add adc mov ljmp in test daa dec cmp nop dec adc dec cmp (bad) aad xchg and daa (bad) xchg add xchg shll lret pop les mov les lock pop test add cmc mov xlat or imul cld pop inc lahf mov call sbb mov popa pop jb cs repz push lods inc pusha push clc xchg loop daa (bad) xchg add inc mov shlb mov adc cmp dec cmp cmc and add loop mov clc sub dec hlt pop lods dec test clc fmuls cwtl clc loop lea lock mov and rcll mov xchg push lea jb les insl sub xor les xchg mov dec xchg mov (bad) dec sbb xor sub fs fistl pusha lds and sbb sahf lcall sbb sub fisubr dec mov xchg push cmpsb inc xor push roll jnp push mov fs mov dec enter mov pop jg mov enter lret push pushf rcrb leave lock xchg add movsb add dec mov mov sub push lock push in sub jle xchg jl (bad) mov aad out les push sub les les adc add cmpsl mov test jl orb mov (bad) mov push push je into add cwtl lcall pop xchg add and dec cli movsb pop jecxz cmpsb sub push rcpps out mov pop cwtl add dec or fmulp leave rcll data16 and sbb enter xchg xchg int3 fldt subl insb add fsub dec test das mov xchg pop es mov mov out fs add push pop cmp pop cltd cwtl mov jns aas and fiadd xor fdivs adc adc imul pop sub mov add sbb sub push mov fdivrs push test imul push (bad) sbb xor and lret popa mull adc clc scas iret sbb arpl fldcw addl adc (bad) (bad) popa jae addr16 dec lock inc test lods push cmpsl sub or jo and sub cmpsb jo pop (bad) outsl sub pusha loopne bound push nop and mov jo sbb cwtl mov sbb sub cmp fucomi dec dec outsl mov sub sub and in add xor push dec outsb movsl imul xchg pop (bad) popa mov push inc pop rorl adc add pop in or push sbb in adc mov sbb lods sub cwtl sti ret (bad) aad je mov das popa and lock dec and push or mov in loope add and popf mov add adc and ret inc dec xchg mov or jne loop enter arpl sub push nop rolb subb cld sbb call test cmp jecxz xchg add adc out push mov (bad) adc lret and insb fld call movsb sbb jecxz xor popa inc rol fsts sahf xor mov xchg xor je ja jbe sub (bad) sarb sub mov popf and lock xchg xchg mov (bad) mov subb push dec add mov popa and jb inc test in arpl inc pusha loopne cmp mov out fcomp adc xchg gs xchg mov call cmpl adcl mov aad aam (bad) scas push lahf dec cmp les call and add cli push adc pop mov cmp push inc les aas (bad) je jle and int stc or mov sub push int3 add cld (bad) add pop rcrl (bad) or ret and fxtract je dec rcrb testb gs aaa (bad) flds dec outsl sbb mov push push cmp stos clc std push sbb sub js test mov sbb hlt jle pop xchg mov setge sbb jecxz mov and jl lods jg sbb mov push inc imul sub andb jmp lret sbb mov mov jno push push out lcall popa in sbb shrl les add nop in cmp push xchg xor adc jmp mov or pop add add (bad) orb cli fadd push push lods or mov dec stos xchg test rcl hlt (bad) adc pop add cmp js adc inc adc sbb out dec bound sub leave lods fcmovnb stc mov roll mov xlat sbb pop jle xchg fs pop ljmp orl xchg push cwtl nop inc fsubl icebp xor and and je stc xchg scas jb pop rclb test inc idiv push es enter jno (bad) popf test sub outsb mov inc iret sbb and inc mov jno les (bad) shlb rclb (bad) sahf adc xchg (bad) daa gs int3 sbb mov inc cmp and cmpsb adc xchg jmp adc jb push ds push add inc in push lods jle add aad loope xchg fldl xorl outsl cmpl rorb sbb dec jno icebp inc lock bound mov lea (bad) sbb loopne or popa inc dec pop sbb (bad) mov adc popl mov xor andb pop pusha sahf mov hlt xchg pop inc in out (bad) or lret orl hlt out mov adc and xor pop cmp inc push flds sti sub mov sbb jl jl add xchg sub mov pop xor sarl iret add mov fsts jmp sub xlat idiv add lcall aaa xchg pusha xor rclb sahf ljmp mov popa xor fisttpll rcll ret in es xor mov and push mov push push inc cmp jb ss shr sub xor xor xor cmp cmpl icebp aas sub adc fnstenv and pop push sub test cmp sub or inc loopne push add cs mov cmpsb lock aam loopne pop loopne dec (bad) subl add and mov clc dec push (bad) add fsubl sub and in call popl nop enter sbb aaa inc jmp cmp stos sub inc and mov test inc aad divb mov inc or push call test shlb mov sub enter lea adc xor mov outsl nop rolb pop gs stos out and push sarb sbb mov hlt cmpb test adc adc enter add pop inc adc sbb icebp rcrl push fidiv or (bad) and and dec add add inc cld lahf lods outsl cs pop mov cmc cwtl inc test es pop push sub adc lret adc mov addr16 leave xor and lock inc xchg mov lret jne xchg mov ret outsl cmpl jo insb popa adc fadds and nop enter lret enter and in (bad) mov in je adc into aaa test xlat repnz and xor and sub xchg pop iret clc inc mov pop nop (bad) jle (bad) dec and out sbb aad and gs inc ljmp pop (bad) ja cmpsb aaa in cmp out mov cmpsl orb xor mov mov imul addl rol sahf inc adc punpcklwd mov push add mov lret or movsb loop (bad) sbb and out mov and sbb and stos ds mov sbb mov or je repz adc out pop sbbl popf jns (bad) mov push mov or mov add (bad) in or xchg mov cmp mov mov loop cwtl cmpsb jl adc adc mov jo xor add popf loope mov das into insl cmpsl mov out test sub loope loopne sub add je push adc (bad) repz inc xbegin and inc adc jo cmp in cmp insb xlat shr cmp cmp sub (bad) add aaa div or shrb cmp xchg mov push push jp insb and adc ljmp (bad) fbld or push lret cwtl adc sub sbb nop clc sub loope cmp iret mov (bad) loopne mov (bad) adc lds pusha adc ficomp xchg jmp dec inc mov adc lods push push dec add cmpsl (bad) xchg lcall mov mov cmpsb test lea enter shl mov xchg adc inc fistpl push int push mov enter cmp push cmp or ret xchg repnz ret mov les sub icebp js mov repnz xchg insb and add dec sbb mov push js xchg sub cmp mov cltd and movsb mov (bad) mov mov ffreep pusha lock jl dec xor js lcall dec lds lret shlb xor fcomps leave push sbb dec (bad) and mov inc repnz or mov cltd fwait data16 push and int mov adc fcompl mov pop (bad) hlt outsb xor sub push cld lcall pop or and jno inc orl fldt adc push outsb mov movsl loopne and push in outsb or mov push mov ss mov les or sti dec lock dec dec mov sub xchg xchg dec outsb pop mov daa fsubrs andl out insb pushf pop int3 mov aad lock call jo jb shrb clc xor mov in ret data16 pusha inc pop nop movsb inc cwtl and adc cmp inc insb iret dec rcrb lods push adc cwtl xor cs scas orb inc (bad) mov mov fnsave xchg sbb cwtl xchg adc and inc xchg push fs dec or or mov mov mov mov mov jmp addr16 ret inc mov pushf je ficoml inc xlat test sub push inc in (bad) out xchg adc cmp mov jbe pop push sahf push das inc cmp ds rclb fisttp adc dec fisub inc sar (bad) cld lret dec rclb xor xchg push leave pushl pop mov ret and dec add inc push push lods push and xchg push mov faddl ss or or hlt pop adc scas inc xor divb adcl and mov pop and adc (bad) movsb add test test imul xchg (bad) xchg pop mov mov inc cmp cmpb out lock insl iret call xchg sub xor jmp xor jecxz xchg push aam xchg add push or lds xor sbb and sbb fiadd add fbstp cmp adc adc xchg pop test xchg rcrl xor add cmpsb orl mov sar sub ret das andb xchg nop es pushf pusha (bad) mov adc dec popa inc sub aas mov cmp cmp call andl cmpsl dec sbb mov call fsubrl les int3 adc inc jo hlt dec mov add daa daa stc test inc icebp ja cmpsb mov gs mov adc push jo mov add stos push int popl repz mov (bad) lock call and sub xchg addb notb ficoml mov cld mov (bad) mov ret cs sbb mov xchg lock and mov lds and aad lock inc fmull nop cmp mov mov mov lock out adc leave ja aas pop inc pusha jmp sbb clc xor xor adc and out xor mov or stos mov cmc sub or daa inc subl jno mov push js mov ja stos sbb sarl sub jns pusha sub jb dec loopne pop cmpsl mov cmp mov add or cwtl int3 or fcompl pushf add inc out mov fs cmpsb cmp dec inc in mov test xor and cmp and mov xchg xor adc jno lea sub adc and imul adc xchg jl jb ret mov out out (bad) cmp and jo mov xor inc addl pop sub cmp cmp mov clc and sbb rolb mov and cld add jl call sbb fnsave mov enter outsl xchg or repnz in xchg outsb in add imul adc jnp adc cli out inc dec push or inc mov inc cmp jb lds mov sub inc or push xor add inc or add test mov scas lret jl arpl sbb mov xchg adc leave lret inc cmpl and jne xchg and lahf iret (bad) std lcall test in inc adc inc jecxz mov aas and or inc and inc or popl icebp negb clc jg adc cmp adcl hlt push stc adc daa movsl jge push mov mov jl adc mov mov (bad) adc adc out cmp add imul inc inc stos inc mov enter and push jnp sti nopl sarl ficom sbb inc and cmp xor and add std icebp fwait push jl test sbb nop lcall push adc pop or or sub mov cmp lock dec jb mov or out in insl stc cmp adc jb mov incl xchg and dec mov in fwait push xchg xchg (bad) andb add imul mov mov adc mov sbb mov jl xchg dec icebp in dec mov addr16 lock inc adc (bad) adc call adc outsl mul mov mov adc mov in insb or push adc mov add jno xor mov dec push lock rcrl sub movsb icebp enter and aad xchg xchg mov xchg test sbb cltd dec (bad) mov sub les push push clc push pushf arpl sub push and loope inc loope push and mov mov loop pop jg and add in xchg xor cld mov test or nop scas mov inc pop or dec push jg adc sar dec cld icebp pop js add mov orb imul test faddp or mov aam dec and repz or and xchg in xor mov adc icebp inc out xchg inc add sub insl jg push xchg inc psllw jo rcrl adc and push add dec mov add and add or sub inc iret sub xchg lret xor and fcomps lret add aas cld lret lcall cmpsl inc (bad) pop mov stc mov or xchg xor lock cltd and rcll je imul pop add sbb mov add call (bad) js pop and mov sbb (bad) inc clc (bad) bound jle pop loop and add inc mov and mov insb or jge fimull mov cmp adc lock daa ljmp adc das fbstp push pushl imul pop xor and sbb add push cmpl mov outsl pop lret fiadd shrl aad pslld push add ljmp sub add mov enter leave and mov inc inc rcll mov dec fiadd mov xor xchg test ds dec mul or inc xor push mov into cld dec xchg (bad) or xchg push dec aas jp xchg and ljmp pop lret cwtl add push push aad and (bad) push pop xlat into loope stos ljmp das xor stos xor imul dec mov xchg pop sti and xor fsubrl mov mov push addb (bad) ja jne int3 bound adc mov pushf pop leave rcrl mov rcll insl stc aam push es in (bad) adc cmp or inc adc insl mov nop inc ret or nopl push sub sub sub enter xchg inc add test adc or cmp repnz inc insb mov and inc sbb cmp clc inc test pop xor dec mov sub and inc or inc jecxz test (bad) inc or or and sbb and adc adc lahf push sub icebp inc mov sahf popa xor adc bound adc xchg mov push pop lock sbb fsubrs sub or push sbb and xor sub adc add and sbb push cmp jo (bad) dec mov mov sub sub or mov or inc test das and or inc and add and dec sbb dec xor lds shlb inc or inc or stos dec rorb adc ret push mov inc inc sub test fisttpll in dec mov js mov xchg fmull movsb pushf mov inc sub test dec adc ljmp sub add inc adcb push inc push stc test or adc xchg or adc xchg scas sbb mov pop test ljmp popa mov mov test scas enter leave cmp cmpl push iret gs xchg les and dec hlt scas mov adc call jmp add sbb adc mov or loopne or ljmp sbb mov adc xchg jle ljmp popa call loopne jnp test xchg (bad) cmp popa push ret (bad) and hlt mov inc sbb fxch mov addb pop or ds add push call std push dec cltd les mov (bad) ss push and pop data16 roll enter mov popa cmp addr16 push and inc ficom aaa (bad) sub xchg fdivrs or and add cmp and adc mov push add lret dec jmp mov mov clc mov (bad) ret inc inc jmp out add push popa aad and xchg inc les pop enter push push sbb add sbb adc sub pop (bad) repz inc cmpsb test push pushf loop and test ret subb push pop cmc adc test adc or (bad) ret mov adcl mov fdivl je xor sub movb out jp jnp arpl or pop mov add and roll es rolb ficoml sub scas pop pop jns sar mov imul ja fiadd jge repnz or mov les pusha test in test mov (bad) inc stc mov andl mov outsb cmpb xchg repnz adc sub inc rcr shrl xchg dec jl and movsb ja xlat sar mov mov int3 or arpl xchg add lods stos daa add icebp sbb cmp jns adc lret cmc mov cmp push inc out movsl inc or pushf xchg call mov jecxz mov ss das test xor (bad) lock and sbb jge aaa and in sarl or xor lock ja das cmp (bad) adc loope add movl divl addr16 mov std aad xor les insb andb cmp std jl pop add jp cmpsb (bad) add push mov xchg sbb mov stc loop (bad) and mov cmpsb push les mov repnz clc cmp cmp xchg push push loopne jmp xchg jne push lea loop sub jl mov ds jo push into mov push mov jmp pop incl repz stc mov adc rolb fbstp (bad) pop mov lahf pusha dec xor out js sub jmp or aad mov push jb add lock pop mov push cmp pop mov iret xlat fs jg mov xor sbb mov shll icebp repz adc xor adc adc push push xor rcrl xchg pop adc and mov sub push ficomp xor xchg adc ds sbb push lcall test push clc idiv lahf arpl pop xor add movsb mov fisub add mov in adc sub xchg add sub les fimul push mov cmp out sub add xchg add and leave mov add cli movsl xchg sahf pushf push movsb mov dec nop add int loop mov or xor lea test pop movsb push fcomps incl iret cmp or adc and cmp sar test pop push fcmovnb xor roll fcomps cmp xor mov jnp lods add fdivs shrl inc in je adc rorb test cmpsb aas or xchg test rolb rclb adc les test adc mov arpl clc lcall and mov and pop pop push es je int cmp or jle mov popa jmp or enter test xchg xchg dec mov dec call rclb lods pop jge sub fld jae cmp xchg cmp xchg shlb imul push cwtl add push and movsl add cli inc inc hlt and iret sub into xchg dec push adc fwait rclb call (bad) mov dec daa in das add rorb mov push repz xor or pop add mov pop add lods inc push out jmp ljmp roll dec imul mov int3 inc arpl je lds adc andb sbb in mov push enter rol jmp imul and add adc sarb jp jle pop icebp call rclb cmp cwtl push add add sub lret mov test jl cmp or dec mov enter lret and xchg stc loopne mov add (bad) xor add fldenv ja leave enter xchg pusha add xchg in int3 call adc add repnz mov push in push or jecxz (bad) mov sub mov mov xchg push xor data16 out loopne xor xchg push ret fsubp or cmp jmp mov add lods or rcrb nop (bad) ja dec repz sbbb sub shlb and push pop test cmp incb cmpsb gs ljmp insb into loope cli movsb or (bad) dec es inc mov imul pushf test mov or pop mov add and insl mov push mov adc mulb dec mov bound dec outsl push inc cmp test xchg dec add xlat dec jecxz lcall pop lea pushf je xchg andl xor jo jns mov das inc hlt pop mov mov add sti add fadds cmp daa inc cmp jne xor insb pop or insb (bad) xchg and lahf and sahf enter sbb adc loop or xchg inc and push rclb add dec inc ds sub jne shrl cmp pusha mov bnd clc dec xchg cmp lret nop shll sub adc mov cli test or mov loopne lods pop pop mov fdivr xor and dec fwait xor and cltd or (bad) repnz and fistpll adcl inc add fcom fmull adc adc jae clc adcl inc and cmp inc and or pop and adc xor sti rcll inc pop push std and repnz cmp xchg out xor mov subl adc xchg pmuludq add dec lahf rcrb roll sub addr16 mov xor add xchg adc or std or jno jae push shll and mov (bad) mov dec enter ja xchg cwtl xor xchg jl (bad) jo pop loopne push adc xor faddl xor sbb xor or adc cwtl push (bad) loopne add das dec sbb cwtl adc dec add dec repnz in mov adc jb add xchg stc in mov and jg mov mov (bad) rclb aam push sbb or xor inc or jno bound jl addr16 inc jl adc add add in pop lds cld ljmp and addl pop xchg pop mov mov xor out lahf sub mov rcrb popf sbb inc aad xor out das negl mov mov adc pusha inc cmpsb ds (bad) cmp fadds decb xchg pop push andb add and arpl or daa ss das cmp mov mov jne mov or mov in add push pop add clc in bound out test sbb or adc lahf push and push das cmp pop test mov sarl and test fiadd jmp mov roll (bad) adc mov movl push jl,pt addl popa cmp popa push jge dec mov call test jo dec out inc inc stos mov or dec lret add xchg xchg insl sub lock dec das adcl mov iret xchg insb mov loopne sub in cmpsb xchg fcompl sub pusha imul xchg xor cld test sub inc or push mov pop sbb pusha push mov mov and and mov nop or mov rcl sbb aas xor push repnz loopne mov xor push mov push and and movsb push fxch xchg mov mov inc popa xchg repz in ret dec mov shrb or sbb xchg lock adc mov insb sahf loopne sbb rorl xchg aam lahf xor shrl cmc add (bad) jo inc pop inc pop push dec inc (bad) and xchg inc (bad) test cmp fild ret pop dec dec push ret or pop clc or push add mov jge lret cmp das mov dec idivl nop js mov add sbb in sqrtps sbb test lods push xchg enter sbb xor pop sbb and imul sahf (bad) add (bad) je scas in dec add mov in add pusha arpl inc jecxz jmp jmp sbb std mov and imul cmpb ja test cmp fs lock pop in inc xchg jl adc leave into jae and js push (bad) sub mov arpl sub xor xor aaa mov pop sub xlat stos test clc sub cwtl pop push jo,pt sub test test mov add and sub cwtl sarl std arpl adc dec call dec int3 sub add pop mov and lret int3 cmp or rorb mov xchg and xchg aas shrb push adc push or push les lock insb cwtl into adc addr16 jle sub mov jo popf clc insb in or add mov add pop mov xor imul rorb jo int cmp add fdivs mov and fcomp inc cmp adc scas (bad) shlb nop xor gs insb or xlat out leave sbb adc adc call sub lea loop pop call scas lods cmp mov mov add xchg aas pushf les inc jns shlb repz stc icebp push inc leave call cwtl rorb cwtl and int3 mov lret mov and lret sub mov cmpsb daa cld clc movsb nop dec xor jmp ja push js idiv adc repz lahf scas push fnstcw out add loopne mov or fidivl cmp mov xchg push mov adc bound xor adc or cmp and add adc add clc sbb pop jne fcomps out pop inc dec cmp nop dec add incl stos lcall clc fldt cwtl add or pop xchg shrl add sub or pop cld push dec push mov and (bad) movsl xchg movsl and mov or addl adc add movsl addb insb xor and orb xchg pop or add xchg xchg insb scas sbb xchg ljmp shlb outsb pushf inc jecxz mov repnz (bad) adc aad dec dec ds adc cmpsb lock movsl fildl add loopne fmulp cmp fnsave jp sahf rcr fs stos test mov scas pushf push or sahf ret push call sub xor test nop in mov enter adc xor ljmp and call lahf addb sbb mov mov jg dec jno mov out mov sti push rcrb nop es fnsave movsl out fsubr add dec jae inc cwtl outsb pop (bad) or sub cmc test mov dec mov push mov push inc mov xlat dec xchg out cmp inc add cmp in cmc cltd js lock push lea and les add pop fs adc movl je mov inc pop (bad) mov arpl aad or jns jg popa mov add or and orl inc fisubl xor dec cmp add xchg pop mov loop push lock sbb sbb lea cs add cwtl sarb insb dec lcall or jb and cmp add inc sbb rol xchg rcrb or aad cmp sub insb test add test adc sar or adcb outsl xchg jmp add ror ja lds sub and xor and adc push xchg test mov jl add out clc or les pop inc aam or and fwait test cmp das mov push cmp adc cmp cmp or nop movsl pop (bad) mov movsb pop or cmp stos sub push xchg inc ret xlat (bad) adc mov iret cmp je xchg jno (bad) outsb dec test inc inc mov out and test cmp out xor dec jo mov or pusha andb (bad) pop test pop mov lcall cmp cmp pop xor or jns cmp fiadd dec outsl xchg push or pop pop pop insl roll add xor inc mov mov cltd pop adc xor das (bad) aam mov adc jl test mov and add ficompl faddl cli add cmpsb push xchg (bad) rcrb pop or sbb push pop or out cmpl cmp push sub cltd dec fdivr xchg aas xor roll sbb push sbb out and jbe ds stos jg add lods (bad) lock xor sbb sbb and andb in out pop jg test xchg xorl and mov inc cmp nop stc xchg test add sbb mov cmp and repz rcr sbb fildl xchg lds leave adc inc or insl push fxtract pop push or test fildl cmp mov fadds js add sbb mov mov mov test or xchg inc popa or add xchg fmuls push das cltd sub mov ret popa mov mov pop hlt jg clc push test or and sbb add inc adc ret inc mov lea je xchg (bad) shrb and jl popa push dec test andb or imul std fs outsl test adc rclb add fidivl test (bad) mov sub outsb fnstcw lcall aaa adc dec push out xchg add dec sbb jge addr16 or or sbb outsl or xor add jge cwtl stc xchg mov add (bad) add add sbb cmp dec jo add add jg popa out lock pop add or and mov and cmp cmpsl xchg out dec push cmp push or lock mov or adc push mov add pop rolb aad inc add bound add loope out mov mov or (bad) jecxz dec loopne (bad) mov (bad) and mov add movsb jg and aaa add outsb lock and pop sbb pop mov mov mov leave mov lds mov test mov lds test xor inc in mov leave sbb repnz add std ret test mov xor (bad) adc sbb out adc dec ret popa call pop mov int3 jbe mov test mov mov lret fcomps pushf and (bad) pop mull rcrb adc lahf (bad) jmp dec lds ret xchg mov adcb cmp add or fadds sbb sbb rolb (bad) lock bound add mov enter xor sub js mov mov add sbbl dec add xor loope inc nop xchg pop (bad) xor mov or dec xor cltd call push add adc cmpl cs mov stc or aas cmp (bad) daa addb sub and ljmp jns cmpb pop add scas sub sbb or jno cmp int3 clc push mov add aam aas jge in mov shlb sub xor inc and (bad) nop mov cmp mov xchg flds icebp and mov mov jg and int repz addl jmp bound mov pop les jb enter xchg inc loopne mov pop xchg mov inc xor cmp push dec xor pop outsb fadds lods sub test sub pop adc mov test inc xorb jg push inc or int3 call xchg jg add out inc test pop dec mov push mov mov dec xchg bound fiaddl shrb add arpl xor sbb and movsl adc dec gs push loop pop insl fmull pop sub inc cmp shlb jp ljmp mov or fsts rcl inc inc pop push pop or sub int mov lock jecxz push dec dec lret pop adc mov push push loope push mov pop rorl mov loopne mov lea adc ss lea divl enter xor loopne in xchg adc roll mov mov inc jno ror xorb stc and jg xchg mov fstpt and and push mov pop inc lds add xorb xor mov xchg pop daa mov jecxz aad sub shrl mov or sahf fidivr add sub mov add xor lret cs mov sbb lahf aas fwait push jl and orl mov fwait movsb nop dec or cli lea push mov and add dec in add xchg or add push subb jae inc movsl mov or or and dec xchg jl pop inc lods cmp int3 sbb mov or loope push xchg add adc aam xchg xchg cld nop pop out aad hlt sti or inc lods push mov lret adc movsl mov cmp (bad) test stos test jno sub xchg shlb and push pushf adc aam adc insl (bad) mov or add (bad) jns sbb fmull mov out lahf xchg icebp jecxz pop arpl mov int (bad) mov and adc cmpl mov fwait stos cmp lcall imul pop test xchg sub dec mov pop int3 and push arpl mov in add dec jae cmc ret adcl insb cmp jno or je daa aam fsts call pop pop (bad) jecxz arpl pop call es sub pusha or stc js insl sbb mov jg test and scas add movsl rorb xor out (bad) xor add push xor mov andl mov enter movsb cwtl xor repnz dec jne add and lret out mov scas rorb add int xor xchg sub mov push shlb or aam cwtl xchg push lret mov mov wrmsr inc adc popa push dec aam pop or stos dec test push ds xchg cmpl push xchg int daa bnd pop loopne pop test or push cmp insl and and add sub cmp push pop fdivrp add push in dec mov jl push lods test les cmpsl in add mov xchg mov ret loop inc add mov sarb cli push mov (bad) nop pop xchg adcb cmp xchg fs test mov shlb out cld xchg fnstsw dec sub popl jg fistpl je mov inc (bad) or test jo push pop arpl fdivrs dec int3 jmp sub in les jae xchg (bad) lock inc inc mov xor popa dec push insl ja and mov rclb xor clc jle sbb test sub lods mov add jl scas (bad) sbb aam imul jmp adc pop mov xor push dec mov fldl or xchg repnz ret or lret add xchg xor add pop pop adc hlt adc rolb pusha pop add or push push inc pop xor or xchg add adc add inc push xor fmull insl subb (bad) loope xchg (bad) xchg jbe dec push jp inc push xor xchg dec sub add enter mov or adc add pop fcmovb in and gs pop pop add push mov pop sti pusha xchg dec or enter mov add push mov loopne in mov inc in cmp push (bad) mov aam inc jno les jmp fsubs mov daa push fwait call jmp out sbb outsl (bad) pop add cmc subl out cs es (bad) out or popa mov das pushf aas sbb (bad) jb pop nop in or dec aam roll popf or cmp mov adc adc lods in add or fcompl mov push jecxz dec mov pop and sbb mov pop inc out adc or mov push mov jnp lock cmp movsb mov cmp std xor push flds pusha sbb push sarl push mov ss or loope out mov daa (bad) cld xor dec fs in popf lock mov jle xor int3 lea test int icebp mov in je push push (bad) sub pop addr16 and cltd rolb sti in push push aam fdivl sbb ficoml fdivs mov pop ljmp movsl ss mov jo xor roll dec sarb or ret mov push dec pop inc cwtl mov sbb xor push test pop or add jecxz cmp push inc and sub pop jo fild insl outsl add divb idivl aam das cmp adc fcmovnb xchg ret pop insl adc dec bound mov add test pop loope add xlat push or adc push mov pushw mov push mov sub mov add pop outsl ds sbb aad (bad) add rol lds loope mov sbb pop jo fdivr ret insl mov xor xor repnz outsl push push xchg jnp jg das xor add out push mov mov mov add jp (bad) shr inc fimull popl hlt (bad) pop cmp mov jno mov loop cmp lods or in cmp push (bad) mov add add loopne xor nop xor aam rorb mov jl cmp xchg call add dec add enter (bad) call fcomps insl in xchg mov loop xor cmp enter and sbb adc xor loope (bad) xor insl dec in hlt clc dec add sub pop insb adc call inc inc sbb out and and or in outsb xchg jp add mov adc jle pushf (bad) mov mov xor insl mov les or mov mov nop add inc fwait jo lock aas rclb or ret cmp xchg adc inc (bad) pop inc lods xlat data16 push xor mov roll dec jg jae jbe add adc mov or fdivr add xor cmp daa int add rol add adc fwait sti adc mov pushf stc adc lods sbb mov mov inc pushf test cld or xchg test call mov dec rolb shrl rcr outsb mov add daa inc mov loopne pushl sbb and mov push fdivr mov pop dec xchg repnz add add aad cmp mov cmpsl xor iret push sbbb rorb les cmp sub lock mov add xchg pop jb add lods cs dec hlt jmp pop mov or lock imul inc pop pop add cwtl rolb aas inc mov test push add mov cld gs jg loope xor xor loopne fs and adc in popa adc push lock insb xor adc cmp jecxz add mov xchg mov mov and pusha sbb mov push sarb clc mov push pusha xor jae stc imul (bad) jno les and mov xchg insl or xchg cmp cld jb clc fildl inc jnp adc dec (bad) popa lods pop out dec fsubrs gs test xor add jge (bad) hlt fcoms test pop mov aam addl int cmc in mov jl out out adc lret pop cld cld jno add pop loopne ret aam lcall xor (bad) sub inc das push or rcl popa fmull add lahf and data16 sbb cltd push adcb or iret out dec dec xor mov sbb mov insb in addr16 pop xlat sub or add fsubs loope pop nop mov jno inc sub cs mov add xor xorl pop or add pop and mov dec and jl xor jno inc push jbe fs pop lret js test xchg fs fsubrl sbb fdivrs push cmp addb in sbb (bad) fs fadds leave fistp or mov or out test movsb add das or pop adcl mov loope push jb pusha add rorl and sbb jo pusha inc lock lock inc xchg inc pop push mov pop out rolb icebp and mov adc cmp mov inc adc pop sub les insl inc clc test push test lock or je mov mov or scas mov cmp rclb gs dec xor rcrb jnp aad cld bound dec sub arpl pop jno clc rcrb and mov dec adc and mov and sub push xchg xor cmp push xor sub insl sbb cmp test test adc (bad) mov push xor out and lock dec movsl add lds fcoms mov xor sahf aam or lods add fadd (bad) lods pop jnp push push pop aad push mov adc adc insl xchg clc mov adc pop sbb and test inc adc jno mov sbb ds in (bad) or jecxz sarl fmuls add or mov mov inc sub inc xlat xor add js adc rcll in mov or add lret add fs jno (bad) loopne fcmovb add add jecxz mov movsb inc jmp cmp (bad) add sub jecxz lahf mov mov imul repnz jl add orb mov fadds bound mov (bad) faddl bound xor jmp daa push adc adc push in xchg es rolb adc mov aam add stos je ret push mov inc mov or mov or xor pop mov fmuls mov adc or loop rcl mov repz xor les jg add out sarl sub adc mov and xchg cmp scas insl push pop pop inc dec push out (bad) (bad) adc fcompl cmp cs cwtl add cmpsb es jmp xor inc add adc pop rclb push xor inc lock cld fisubl cmpsb and ss cmp call pop nop or rcrl or aam jmp or out xor or push sub jbe mov push xor lret mov or or xor pop out and into or in das and jno cmp pop add dec shll or push and pushf adc sarb push jb je out pop hlt mov and pop cwtl cmp sbb push dec mov add lcall gs dec push test test xchg xchg loope in aam insl (bad) hlt jbe add decl pop dec aam mov dec and xor cs add out add or or dec add or xor and inc lret add stc push icebp pop les cmp sbb add (bad) push and data16 dec lods rcr sbb xor faddl fildll pop cmp adcb dec in mov mov jp inc jle mov add ret sbb into cmp xchg roll jg mov adcb xor push ret test dec cwtl or mov inc or (bad) pusha cwtl aam lcall fisubrl adc inc nop sbb jmp pushf jg (bad) jno lods mov add fs sbb js jo hlt cmc add clc stc je dec and sbb inc jle clc cmp sbb dec int3 jnp add push lret jbe (bad) adc xchg rcrb pop mov lcall into cmp sbbl mov adc mov rorl data16 jae add mov pop push xchg lret fmuls pop mov orl mov cmp movsb mov andl je icebp mov jl or and push sbb sarb add cmp push dec mov jmp jno insb add (bad) dec test fsubr std add adc xor stc jmp add sub lea out ja add push pop push xlat pop push push cmpsb jp add and leave lock push ljmp push les sahf pop sbb pop adc xchg jno xchg xchg nop incb scas cmpsb push pop fidivl pop add push int3 sub xchg in add dec int lock or and adc stos popf fmull cmpl clc lret push les or jbe xchg push xchg sbbb mov mov mov (bad) and sbb xorb aas imul pop pop test arpl lods lret jne inc movsl (bad) cmp fimull mov jno test test sub (bad) xor xchg (bad) cmp mov mov add cs pop mov and adc dec jne add mov rcrb mov nop ljmp add jno push xchg sbb rcrb scas xor dec inc pop nop xchg aaa insl out inc shlb mov jbe into jo (bad) popa adc cli pop and mov cmp jle ds icebp in mov repnz fstl xor xchg clc dec add mov pmulhw mov jno in mov or nop movsl push cmpb jl sub cld jo xchg or ljmp fsub daa inc rcrb out sbb inc lahf mov mov sub mov sbbl je stos (bad) xor adc mov call and out shlb mov add mov xor inc lea mov iret mov xor inc popf mov add dec add bnd add adc xor test sbb aas or aaa js add pop call movsl pop cld dec mov and leave aaa xchg dec or repnz les and movsb nop jl shr test inc mov or pusha pop subl mov sti add nop jg and ds std inc loope out movsb and inc and ret xor mov call in inc sahf jecxz sbb ret out mov adc mov shrb pop in inc push test dec clc jl sub int sbbl imul jp hlt push in push cwtl cmp sub in or stos or mov add inc sbb xor lret sbb loope mov jecxz sbb mov xor daa lcall mov mov pop adc loop test int3 cmp mov mov les cwtl mov js clc out and loopne mov inc out push cwtl dec (bad) nop mov in xor push cmpsb movsb or out pop fnop mov movb and mov (bad) subl sahf or push cld xor insb roll loop shrb mov mov enter xchg test dec xchg test sub rorb cmpsl sbb add xchg (bad) repz dec orl xor cmp orl aam imul mov lods mov mov jo push and movl xor cmpsl stc cmpsb loopne sbb dec xchg push adc les out xchg inc xor jmp nop adc lds mov dec jecxz adc daa les cmpsl loope shlb xchg jecxz sbb xor push (bad) loop inc pop lcall ss fmuls inc adc push push shlb push in in cltd cmpsb cld add (bad) daa test mov push lcall add mov fmuls repnz pop jne or adc or out jne xor mov mov dec enter sbb add jo fisttp add xchg push mov pop and xchg dec jnp pop pop adc cmp mov xor (bad) jae add pop add jg mov pop push pushf fmull lds (bad) mov pop cld jns outsl rorl push mov cmp jo loop outsb cmc lock add push jne fcomip xchg ljmp mov mov or jl adc aaa mov popf fdivs mov jne stc adc push pop les orl sbb mov sub inc push adc rcrl cld test pop mov inc setle adc fcmovnu xchg jl jbe nop repz dec adcb xor pusha cmp jbe dec jmp cmp rolb adc push xchg cwtl orb shrb int3 cmpsb push data16 xor test xor sub xchg and in outsl fldt nop aas cmp inc jg repz call xchg mov jecxz mov test in popa scas xchg movups push mov push or lea lret repz popa or decb push hlt or cmpl popf push inc jl cmpsb pop shlb in or inc shl push enter ficom push push mov arpl push enter stos and lret sub fcmovnbe or or (bad) int3 mov adc test mov dec push clc adc mov sub test dec dec xor mov push enter orl cwtl sahf insb adc inc incw ret mov adc mov ret jbe and aam adc in xor add xchg xorl sbb pop sbb std push xor decb cmc cmpl mov mov pop add push loope jg sub jmp fidivrl ret lods xchg add inc test cmc imul outsl push cld pop cmp cmpsb pusha jmp mov inc mov mov xchg or add in mov loop adc int xchg adc inc xor mov decl arpl daa add and popa (bad) dec stos inc or xor imul rorb adc orb sbb mov sbb enter xor sbb sbb imul es call sub clc adc mov pop or mov add les sub or rcrl aaa cli adc scas call mov xchg add jno xor fwait mov jmp bnd ljmp push nop lods adc xchg push (bad) or xchg in fs aam adc and or mov in adc sti or xchg mov ret lds sub outsb daa and clc push xchg mov jl mov in cwtl adc test mov and cmc mov mov add or xchg lock test cmp inc adc rorb and pop and and (bad) jo jo sub gs pusha scas xlat sahf push js mov subl jae mov in and cmp out or shrl sbb fdivr and mov in lahf test add ret test adc stos sub inc inc or in mov push add in inc je sub pop aaa add or mov hlt andb paddsb out cld mov sub rclb out mov test sbb lock add out mov and dec sbb shl fs jns roll inc add cmpsl add imul sub sub or xor sarb cwtl pop mov sbb rcr jp js dec clc mov imul mov ds in mov mov adc inc mov add mov pop rorb pop and inc mov (bad) xor ljmp inc add inc aam add les pusha or mov push cld cmpsb movsb inc and call lock test (bad) movsbl rolb mov mov mov xchg sub mov in test or cld scas xchg jo xor (bad) je dec or mov sar dec movsl sub icebp push xor dec dec xlat loopne das sbb xor inc cmc pusha dec mov xor inc and or rclb out cwtl mov enter sub daa or add fbld push jl adc mov adc xor xchg popa outsb and mov and or movsb adc and sub pop nop inc popa (bad) pop outsl fadds inc test adc add fdivs or loopne (bad) (bad) push cmp dec and add cmp scas sub dec mov dec test jo inc sbb xchg iret les test ret pop sub add or jnp cmp or ror inc jp ljmp arpl pop jmp pop mov fmull or rol seto les loop dec or or popa mov push pop inc jb imul add shrb dec xchg cwtl jnp fsubrp sbb nop fldcw js mov jl insl mov push pop xchg or cld cmp xor pop pop dec add pop xor inc adc jo cmp adc push pop js jl push loop es mov push dec sbb sbb and xor cmp cmp xchg push sub in test ljmp inc aaa cmpsb pop test in add or jl xchg xor xor clc ret add or inc xchg fadds xchg andl pop or stos ss subl cmp fcompl call xchg aam pop cld jo in jns mov rcll sti mov mov subl xchg xor sub and push or xchg std out int3 (bad) fcompl xchg xor and dec and pop xor add adc je cmp lock mov dec jae lock mov inc mov or test sub sbb and mov movsl das and cmp inc imul enter pop cld jb mov hlt mov adc or xor pop and cwtl mov movsb popl fs cmc xor js mull ljmp cld int add jecxz and add mov outsb mov push push clc nop mov mov cmp sbb leave fistp cmpsl ret lcall mov jge xor sub dec dec inc or mov mov or inc andb push cld mov mov movsb xor insb fcoml imul in adc jae push int3 insb adc add mov push adc mov in or pushf cwtl fmull or ret inc scas sub inc push rolb push push sbb and and stc pop nop mov loopne add js adc xor add clc int3 cs adc subb xchg js es popa xor sbb ljmp aaa push push fcompl js or mov fstl adcl jl and mov jge call fisubl or rolb push cmp xchg or enter lods (bad) jo add pop fiadd mov dec in mov or push ljmp dec rcll cltd or lahf xorb adc fs jne jecxz aam and sub jno and mov xchg fs mov sub lea ret loope mov nop test adc pop jl xchg sarb outsb out or and enter dec cmp pop test repz push jp aas mov mov add ret adc pusha je orb loop sub outsl adc push nop sub repz aam push rolb and or sub add sub or push shlb repnz adc inc xor rolb push shrb les xor push pop clc std shr fprem sub repnz sub push ficom lahf xchg adc lret xor cmp jg pop and adc sub sbb nop pop dec test adc push jb arpl push int3 and sti stos (bad) sub out test test add mov ss pop jecxz inc lea pop pusha sub and arpl mov lahf outsb enter imul in aam dec cmc nop fmuls sub pop ret in mov loope add inc scas cmp mov mov mov insl les and fs push sarb pop and jge test and cwtl js sub dec mov inc cmp es in sbb xor mov test mov or or pushf jmp (bad) (bad) or sbb xchg adc and mov xchg test les cmp xchg cmp push and cwtl test inc aam fs jmp scas pop les cmp inc mov es dec push outsl or jno adc dec mov or sbb push jns mov and or inc adc addr16 stos xchg jne (bad) jo mov adc std sub mov sub xchg xor sub xor or cmp test test cmpl (bad) into gs sar push mov mov mov push test cmp sub xchg mov int3 (bad) push mov jle inc cmpsb add fldcw inc mov rolb cmp lds push pop pushf outsb movl jbe sbb xchg jbe ror arpl insb loop test test sbb sbb clc ret repnz sub add cwtl add scas mov mov and test frstor mov test popf dec pusha add pop mov add js pop imul cltd inc insl adc or cmpsb adc rcll sub sub and adc in (bad) xor mov nop jmp scas adc ss in scas lods push dec je or addb repz mov repnz mov cld in jl add jge adc fbld xor mov push and inc cwtl fwait inc shrl sbb nop add mov and ljmp pop in inc sub (bad) in and add adc inc jl mov cmpsb arpl subb jle cwtl push jo lods je push lods aad jno lods ljmp xor sub insb inc jl or test sub call adc movsb mov xlat jge mov add lret pusha jns push rorl or inc jl pop xor ja jbe push xchg adc or lods sub jl,pt jle push adc mov cmpsb or or add loope mov dec les pusha repnz je enter xchg pushf mov hlt jbe stos jl adc sbb mov push sbb push test cmpsl inc sbb dec inc popf inc adc cwtl test daa cli add mov js pop aas or fs adc mov cmp popa testl add aam rcrl leave pop mov fldpi mov pop cmp mov pushf mov cli rcl mov and insb mov clc fs push std dec or lea ljmp add push xchg xchg mov or js fs inc call sbb negb (bad) lret test lea mov inc dec cmp mov push add sbb aam pop xor inc adc enter sbb std or lea sahf lret inc add xchg fild sbb push jmp and mov and mov push sbb (bad) cmp or sbb inc inc and xor inc or lea inc push mov fdivrl xor loop test ret addr16 lcall iret adc inc shlb arpl push sub or inc push movsb xchg mov movsb inc imul enter and leave movsb sbb push xor jns dec sbb inc and inc xorl jb xchg out enter push inc rorb sbb testb ljmp mov and or data16 mov adc push daa enter clc inc jns sbb xor cmpsl cmp lea clc mov lret test inc imul adc cmp inc mov or lea pop in jl mov xchg sbb mov inc out pop inc fnstenv out dec lea in push sbb push and xor cmp push xchg js mov xchg (bad) sbb push popf clc cmp rorb mov sbb imul fisubrl pop mov fistl arpl xchg add dec shlb mov xchg ds fcompl and push clc adc sub enter adc shrb rolb sbb lret or mov and inc gs out adc aam rolb and or scas cld sub and and and adc cmp and or mov ficom ljmp movb xchg outsb mov pop cmp sub mov test add push mov repz aam and mov popl pop enter mov adc and pop mov mov in dec gs popl (bad) push mov (bad) fs adc and mov mov sbb xchg adc fdivr inc mov or dec mov in loope jo and push shll mov jmp inc and mov movsb xlat (bad) mov and mov mov lods push or push in js inc pop mov call scas lret loopne out or lcall sub cld mov cmp and movsb inc add push dec adc mov jecxz add mov pop scas cwtl mov push and and pop inc or jae xor add ret pop outsl arpl push xor inc pop xor lahf add scas aas inc icebp push mov test loopne test loop pushf pusha adc mov stos xchg or cmp and clc lds sbb and mov pop add lods cmp sbb nop or jbe int3 cmp add sub sub cmp pop pusha or into mov cmp jnp loop add icebp mov rolb aas mov or inc sub xor cmpsl les not xor test jp loope or test lock push cmpsl imull mov mov jecxz (bad) lock insb ret xchg add sbb int3 nop add loope fcoml aas xchg sbb add pop (bad) into imul and adc je xor pusha xchg sub pop pop xor and pop add push xor (bad) in fnstenv adc sbb pop je cmp push pop dec popa and sahf push inc pop test sbb xchg add add pushf repnz push orl les aam sti sub push push mov (bad) aas or imulb pop test mov out push mov mov or inc popa fwait aaa fdivr xor out data16 pop fsub scas movsb enter sbb rcll adc add mov popa add lock lods xor and insb scas dec or shlb or shl hlt mov aas add les xchg xor int3 adc cmp (bad) mov test mov add outsb add jns adc push addl dec daa inc pusha and and cmp cmp sub adc pop adc add sub or fistpll jnp jp xchg loope pop test aad (bad) fs adc sbb ja mov pushl popa test mov subb mov pusha dec xor sbb mov or rorb nop fstl jg mov cld outsb clc call out call mov inc lret lret add pusha or nop pusha jo stos cld shrl push add jmp jno lods sbbl popf push mov jl push ret les sub call mov add dec ds aaa stos add add mov cmp ficomp and cli sub nop and push test xor mov rolb or (bad) stc add sub out mov dec push adc mov adc xchg xor xchg mov cmpsb mov push jmp test nop mov movsl lret test inc (bad) cmp inc daa mov adc imul and (bad) loop sbb push add sahf push or xor jb or push shl jnp mov test mov xlat int3 add sub inc jne or sub inc iret addr16 hlt (bad) test add mov cmp outsl adc jno sub cmp sub dec xor add stos in shrb ret dec subb jg inc enter out or inc inc rcrb je sub loope push stos xchg mov orl mov cwtl popa xchg sbb sub addl ss add xchg pop fdivl repz outsb add adc or xor aaa add and mov call adc xchg rclb cmpsb xchg and sbb add xor and and adc ret mov loope adc inc cmpsl mov mov push int3 push stos test or xchg add sub test xchg hlt push and push jg cltd mov pop xor pop jle dec push test adc and movsb and lret pusha cwtl std jo jnp dec push in out add jmp cltd pushf fmull or pop movsb adc sbb adc and pushf add adc or mov add sbb and jl mov pop and xor mov inc adc sbb sbb jge add and aad aaa and sbb and pushf and lcall xor shl mov test stos hlt add (bad) xor add outsb leave pop adcl call pushf jae mov add jo or or imul lret roll lock sub jmp pop push cld push fldl and xchg fisub imulb int3 push add cmp push (bad) pusha dec lods sbb insl sarb rolb or jg add aaa xlat insb sub shlb dec dec mov or les inc lock cs nop dec sub add sub sub jne xchg (bad) mov fsubl call es mov test cld push and roll mov xlat sub mov mov sub add add out and pop dec push adc adcl or adc mov xor mov dec add push fs aaa std stos jno enter aaa loopne sbb aam xchg add or test pop mov mov or gs add push pop sti decb nop insb mov sbb mov lock mov jp leave xor lea sarb test sbb jge andl cmp ja pop mov xlat loopne std cmc in push add add pop mov subl loopne rcrl flds sub xor clc xchg sub and pop or rclb (bad) cs xor sbb leave push pusha (bad) sbb (bad) jl jl xor cs popa adc push mov mov jl loopnew push inc cld stos bound sahf mov addr16 test pop cmp add repz sbb cmp add inc sbb sbb fs mov xlat cltd iret pop scas push cmp ljmp push sub cmpsl enter push test xor test fcmovnu or and add xchg sbb insl pop dec add cld aaa or pushf sbbb call in dec nop pop shufps add push or aam insb adc movsl enter jge aad in adcb push aas fcomps jb test cld int push decb jmp fdivs sbb or ljmp enter shlb cmpb add gs subl in hlt sti add lds cmpsl xchg daa cmp mov mov add rcrl nop add pushw fs cli icebp inc push addr16 cmp in xor or push push int3 add and das or adc loope lcall pop (bad) fwait or sub xchg dec xchg push mov je ret orl loope dec mov clc adc cwtl in pop inc pop push xor push (bad) pop cmp push insb jno dec add jge mov add fs xor pop aad pusha pop adc setl cltd pushf adc pop int3 cmpl jo push mov hlt bswap subb jp stc lods or lock cmp popf push mov ss les add sub push and les add xchg imul test int test test push icebp dec sahf or jecxz sub mov fnsave popf enter jle xchg cmp loop outsb or cmpsl adc lock (bad) setp (bad) clc add add add jo (bad) lock ror leave cmc fstp (bad) test test rol inc fisttp sarb add mov or xor mov insb sbb lock sbb rcrb nop (bad) mov clc sbb loope sub cltd xor incl push loopne inc pushf adc cwtl test push fcoms insb mov adc loopne pusha je addr16 push adc pop rcrb mov sbb push lock int3 xor (bad) fcoml pop lods sbb das add dec fsubr push mov adc ds and add mov xchg add int adc sti sbbl stos sub cmpsb test cmp xor cwtl add xor arpl xchg insl sbb mov xchg sbb add sbb sbb or add xchg andb mov add xor loopne popf ret ds add ss test lock aas out gs dec and nop xchg jno lock dec loopne pop and adc mov arpl add js or sub pop sub js xor shl in cmpsl fdivrl loopne push push (bad) xchg or xor xor push inc xor or push or mov push ds cmpsl loopne ret test inc mov sbb adc ds scas inc inc mov cld enter fsubs mov or fbstp pop shll add push cmp pusha xor cmp add adc xor push xchg addr16 and mov nopl (bad) stc jne sbb scas or iret into push dec or mov sub pop (bad) int3 add push loopne push mov jmp sub lods and subb mov add enter push addl leave mov sub fcoms inc pop sar push and aam xchg pop add sbb inc sub inc add push and in test out (bad) push sbb pusha (bad) icebp (bad) cmp push imul or pop xor dec push mov (bad) leave mov push sbb das dec add dec outsl xchg inc mov inc sub sub and je repnz enter add lret out or add sbb and mov arpl or push les (bad) fmull inc pop dec adc movsb movsb sub and repnz rolb call pop cmp mov mov fsubl xor pop (bad) xor je std lcall sub add mov fisttpll sub outsl shrb mov lods or sbb push popa xchg mov rolb jle cmp out (bad) xchg rolb loop ss cwtl ret int3 pop fildl cmpsb mov mov (bad) xor daa je mov fadd test or mov or lods mov les mov jo rcrb add adc ret adc mov add out stos enter jl add imul add jnp dec lods inc add mov mov fnsave or in shl mov sub mov mov jno xchg add inc orl nop adc jmp add loop fcompl sbb push jmp sub sbb jo,pn xchg ds pop mov add push cwtl inc insb fmull sub mov dec jns leave dec pop loope sub sub dec cli add sbb sbb int3 sub pop (bad) mov neg push inc cli mov gs add sbb rolb call xchg insl bound mov sub pop (bad) repnz or mov push clc inc fwait inc mov or (bad) mov fisub mov ljmp lret push ret test xchg xor pop scas (bad) icebp jmp outsl mov xchg dec xchg (bad) (bad) out sub jle mov sub std mov pusha fwait (bad) lret xlat push sbb cmp pusha mov or call popa push int3 cmp fadd sbb fucomi and ljmp and ja jge cmp jnp mov or mov jo mov (bad) sub add insb nop das cld sbb aam dec and aad or push faddl hlt or sub js sbb xchg les cmp popf cmp mov push rcl sub cmp xorb rorl add dec inc jl iret pop repnz fwait out pop xor ja fdivs pop shll push push mov lock sub and push push cmp lods cmp cwtl mov add imul ljmp jle lods jae xchg pop cmovle adc imul mov add fldl test pop daa clc adc xor dec insl lea push daa mov sub and ret add mov mov cmpb cltd xor add add aaa push adc pop push dec xor dec cmp xor lret loopne sbb ret popf aad (bad) mov std mov movsb jo cmpsb push stos adc pop adc add addb sbb sub add ret dec sub add inc mov lods roll lret sub inc sbb jg insb js cmp inc xor clc dec icebp push mov mov pop xor sarb dec frstpm(287 aad add fmull lahf xchg icebp add pop mov or lock xor shld call sbb adc test je ret lahf xchg add enter or in mov or cs pop push pop cld shrb add decl inc shlb mov popa mov fwait clc push lcall movsb (bad) mov inc lock pusha (bad) dec push and rol fimul add jg rcrb and fildl cmp pop xor push push into inc sbb insl xor cmp mov mov bound xchg jle stos add adc cmp fnsave add push pop and outsb add loopne jo dec inc in jmp adc ret or roll xor enter cwtl les xchg jg jo adc sbb test xor imul int3 pop cld push imul out push leave leave aaa xchg sbb xor sbbb and pop inc push mov (bad) mov jns mov xchg xor adc push add aam mov test pop pusha adc add mov cmp push test jl out adc test bound pop stc sbb mov xchg push mov les nop add mov cmp aad outsl mov lock jb mov sbb add fs call stos hlt sub xor and push or lock test sub imul adc cmp dec xor rorb add push arpl and pushf shl (bad) ljmp sbb push aas sub imul call push cld push lahf inc int3 or or das mov sbb fistpll mov dec lret mov or sub subl xor repnz insb clc push dec daa insl fmull push mov out xchg cmp xchg sbb and adc rorl add mov sub in imul inc lods inc pop adc sbbb jge cmp or les push push and lret clc mov adc or inc mov pmaxub inc push push es push mov mov and cmp inc add sbb sub loope enter mov mov sub or rolb jns in mov call sub in sbb rcl bound shr mov adc sub jb adc adc int3 and or dec ret sbb test xchg nop les and out inc mov fwait cltd mov test gs ds xor movsb in gs aam fcomps mov xchg jae int cmpsl test loopne add inc push xor mov rolb sbbl popa and mov clc xlat cltd or cmp rol jno inc sbb dec call push test call xchg dec xchg push addb leave test mov loopne pop jb fsubrl (bad) in xchg clc pop jno xorl sbb outsl or sub scas and or and push adc push cmp test mov pop xor pusha inc cmpsb add popa into dec push ja lcall mov or lock not add popf add inc hlt add icebp or add idivl inc mov add nop pop jae sbb clc xchg add pop adc add rcrl std insl leave and in add or test adc sbb sarb mov int fcoms pushf add mov push jge das sbb sbb scas sub js cld out mov in adc pop add insb loopne test js inc adc repz in xor pusha jo cmovns das std dec cmp call add sbb pusha sahf das repnz sub (bad) jo loope dec fld inc or roll stos sti into add inc in fisttp push push addl stos stc push vpcomub iret adc sbb add je sub cmpsl or mov nop push test cld rcrl icebp dec aam mov fdivrs scas or call adc jl xor jnp inc nop ds push xor subl hlt (bad) repz or sbb cmp xor and xchg adc push jne into pop nop fistp icebp pop out (bad) aaa cmp or jg xchg (bad) je popl xor (bad) adc or xor fxch test test (bad) dec and mov jns pusha sbb push xchg mov pop adc sbb or add sbb nop mov dec shrl add lock ret mov xchg jnp push push push test or jmp mov stc outsb or in add push movsb aas cmp cmp pop ret adc dec iret fild mov inc les ss and pop in push das cmp cmpsb dec pop push add jmp xchg mov push push cmc jne sub sub and and ds sti add jne mov loope (bad) test push les xchg dec jns or add dec repz and inc add xlat push adc out dec pop xor adc addl adc leave inc cmp pop mov rcl es or add push adc mov jo into adc and dec sbb push ror push xchg aam cmpsl test cltd mov test inc (bad) xor mov test jmp mov rcrb xlat mov add xor fcoml nop xchg mov daa xor jns subb or or ret mov inc fild push lods cmp mov dec test jae call add sub xchg sub adc rolb jnp enter add in ljmp inc jge das and je push cmp adc (bad) adc pop add leave jle out or push (bad) lods cmp (bad) adc mov or or dec cmp or or add xor mov mov cmp and rorb adc repnz mov pop jecxz mov rcrb push (bad) mov or xor dec fwait lods sarb jecxz out jns rolb or dec dec and mov (bad) fsubs je add sahf idivb (bad) les and inc jp sti add int3 adc iret test gs fs fs test pop test and add stc iret push ss (bad) adc fwait testl (bad) out jmp push inc cmp and fnstcw sar xchg mov push and rcr cmp add clc jns lock adc nop push mov inc and mov push popf sbb xchg sbb out stc adc mov rcrb mov xlat xor rcll mov sub movsb add mov lds sbb in shlb adc daa icebp (bad) cmp fs adc imul lods adc or les pop push push fcoms add stos or add sbb arpl in push xor hlt pushf jl mov adc or les cmp loope cmp ret push xchg sbb mov scas data16 ret lods adc lods inc push mov xor xor mov mov sub add jne stos pop in es les iret lahf out add sub or scas adc repz sbb sub nop out or cmp mov out aad adc test pusha mov pushf add dec or adc mov clc adc mov mov shrb clc and icebp sub and into enter jno int3 cli movsl sub push enter out sbb push push outsl (bad) sti sbb outsb ret xchg jbe mov add inc mov int mov or hlt inc and push repnz or sbbb stos movsl cmp nop dec sbb add add je adc sbb mov lock cld adc xchg dec xorb outsb mov and jae adc jp mov (bad) xor call mov and fldenv inc js sbb xor add int3 std aam mov jns aad in (bad) and mov les pop aam ja add pop cmpsl movsb lcall das loopne cwtl jo xchg push xor jne outsl lret stc pusha or and inc dec inc or and mov nop adc aaa cmp test inc mov and dec mov xlat and cmp roll jnp call or add jae add mov icebp push subl dec daa inc dec out test fsubr xor push or movsb inc pop xor mov loop push and jns add and mov push and sub lock ficomp rcrl sub in adc leave mov inc fildl xchg adc jns jmp adc dec sti and or add pop inc dec or jp mov push (bad) sar add jae or pop dec insb jnp,pn xchg fimull movsl std push ds xor leave stc add pop add int3 pop xlat mov (bad) fistpll testl push jnp cmp clc mov mov or dec and aad sub (bad) cmc (bad) in add ret jns jecxz,pn aam dec cmp mov and mov rolb jns (bad) dec test mov imul and (bad) bound inc stos mov gs adc cmp hlt jle jns add idivb in xor sahf mov or je fnop scas (bad) dec jmp xchg pop add out jp out sbb dec cmc mov inc sbb xor pushf add and das or mov in mov add lcall xor inc xchg cmp mull (bad) xor mov cmp test xchg dec pop test inc mov lret or cwtl mov out fst fs jmp sbb (bad) or rolb add pusha add cmpsl popf xor into fisttpl xor sbb (bad) inc inc mov inc adc pushf mov sbbl lock mov rcrb loopne dec mov cmpsb adc orl lods aad test in test (bad) pop sub inc int3 or mov mov cmp jnp and mov mov ret andl les mov cmp inc call icebp inc mov faddl sbb xor mov fsubl add test fcompl add stos cmpsl leave ds mov pop cmp fcomi mov (bad) add ja xor es sub adc dec xorl pop dec shll addb imul cwtl push mov pop pop cmp mov mov lret pushf in loop data16 dec add mov dec mov add mov dec add dec mov (bad) ss dec and mov inc cmp add sbb clc jns stos adc xor pop add adc dec (bad) cld inc sbbb mov call mov xchg (bad) sbb jp jp pop push push and fcoml mov adc ss cli jns scas rorb repz jne je mov popa push sahf lahf cmp out sbb sbb add cmp loop or add fdivl shlb mov int xor add inc cmp pusha sub (bad) mov sbb insl popa xor pop adc mov shrl jnp sbb movsl xchg adc xor outsl adc xchg mov fdiv (bad) cmp dec sbb dec test inc inc pushf pop movsb push inc shl sbb lret push les push jb jg repnz inc jo add cmp mov dec sub repnz cmc mov sbb add (bad) xor push add rorl rorl lock sahf mov sbb sub mov (bad) add adc add cmp mov stc test sbb rorb test add mov mov test ja sub test jns,pt or mov sub lret cmp in xchg test test xchg dec xchg jae and add inc movsb cmc xchg loope out inc adc pop mov push test cmp push movsb lds mov test add fsubl (bad) ss push rcrb push dec test xor mov (bad) jno clc push pusha and out movsl (bad) in aas cmp add pop fimul mov push add jp or ss (bad) push or xor xchg das jl add dec cmp iret mov xchg mov sbb mov movsb cmp hlt adc or inc or sub push dec xchg sahf inc xchg fnstsw aaa inc jp cli movsb add add mov add mov aaa fmull mov push mov cmp add dec scas adc fwait jno xor cwtl sbb inc lods fbstp cmp roll jb jmp sub test loop (bad) sub lods scas lock pop adc adc xor sub les add les jns mov rorb jb sub loopne sub mov inc xorb mov sub pushf xchg jb daa nop cwtl in add mov sub dec test imul sbb dec lahf sbb aas loope cmp sub and insl out in cmpsb jb mov rolb es pushf add add cmp bnd add add pop jp fbstp inc add stos mov stos dec (bad) jae data16 adc in dec push js lods push nop pop enter jbe adc imul push push scas mov roll jge add mov out adc pusha test cwtl inc jmp or and xchg mov arpl add jnp cltd xchg roll sarl enter push pop inc sti or stos adc cwtl clc sbb popf lods jmp inc mov decl stc shrb jl dec daa sbb jecxz pushf push cmp addb mov adc add loop mov movsb mov cmp mov add imul dec push jo jnp nop xor pop pushf pusha pusha mov add mov dec int3 jnp cmp addb sub pop rorb nop nop test jb daa inc cmc push push sarb cmp stos fsubs jmp add dec jne add adc (bad) jae nop sub out sbb aam in mov mov (bad) xor lock sbb fs cmc push mov cmp jne mov inc jl decl adc jb inc push jge call outsb inc shr mov pop jae adc dec lea add mov adc scas push cmpsb insb inc ret xorb sbb test test nop adc lock inc xlat or lret sbb pushf mov loop pop cmpb cld mov jb add test sbb cwtl add push adc add cld stc out in outsl adc adc mov push rolb loopne rorl adc sbb xor pop pop rorb jp adc mov dec xchg cmp out dec push lcall mov (bad) mov mov lds pop sub add nop lret in xchg adc testl fsub adc je and pop pushf mov adc cmp add dec daa xor mov cmpsl dec add inc xchg xchg mov pop pop or push icebp mov ja add pop inc inc mov adc sub movsl xchg add xor sub loopne mov clc pop scas js cwtl pop mov and inc (bad) cld dec dec add and inc insl sti loopne push push je mov jae push jp inc pop mov jb mov shr call xor and stos clc sub add popa nop adc pusha mov xlat mov jb out sbb and mov mov xor (bad) sbb dec pusha repnz lods dec mov mov in adc sbb imul mov cwtl cmp mov fs dec add lahf roll sub sbb (bad) lcall xor je sub adc pop aam (bad) jns add (bad) ss add mov sub and addr16 testb push lahf mov imul rorb cmpl pop push dec out or call mov cwtl setb dec shlb test jb and mov mov inc in or or mov dec dec mov pop and into sub inc movsb add jno insb and aaa mov (bad) adc or and mov cmovb movsl xchg pusha jmp lock sub int jb pop sbb jno inc pushf jae cs fcoms insl pop jmp ret adc or inc push out jns jno nop xchg cmp inc mov xchg js jbe mov mov push nop/reserved into (bad) stos loopne call pop rorl push shl sub jbe,pn dec js add mov xchg xchg or pop xor mov or mov sbb inc fsubrl mov pop push int3 jb pushf adc adc push cmp les or dec adc lock and loop lods test aam jbe xchg mov add sbb add xchg mov shlb adc dec mov sbb dec daa bound fs in repz add cmp pop mov loopne mov movsb ret scas add sti and mov add push cmp loopne xchg inc jo insb add dec add outsb movsl loope add push or int3 subb dec (bad) xchg add adc out jb and sub mov mov cmc and jne add mov add push aam cli pop add sbb cmc mov dec cmp adc cmpl adc cmpsl push out dec add popf push lods pop pop loopne loope add rcrb ret adc add popf icebp cmc inc es aaa cmc mov jp or rolb icebp add lcall or or or inc test jno shr lock adc je into dec rolb jmp lahf push (bad) movsl jae pop mov movsb and adc daa in sub rcrb pop sar jnp jecxz inc sub fmuls jb and cld test add loop test hlt int sub adc or add dec sub sbb dec adc lea adc stos test dec aaa clc sub mov loope and inc inc adc enter or (bad) idivl mov add mov fld roll xor ja xchg mov mov iret dec aam mov push sbb mov je lods xchg daa push mov bound lods adc cli jno inc inc xchg push clc call and insb adc add popf pop pusha add shr sub in inc orb or add add pushf jg xlat daa loopne sub lock jb cmp push fdiv push mov mov push lret in adc or shr inc mov (bad) xor pushf dec nop add sahf push jns mov pop enter sub pusha push enter cld pusha and inc add xorl lods loopne sbb mov cmp idivl sahf fdivr mov jns inc loopne add insb xor jl inc mov cmp sub fistpll pop mov (bad) fbstp jl and faddl mov xchg add jl or add and adc and clc movsb jns add push loopne sbb movq push roll lock int sbb fstpt push add pop xor leave and aas seto pop js sahf test stc das les insb out cmp add flds loop xchg cmp aas sbb negl push mov add mov dec cli add adc clc jns dec dec fcoms notl mov jnp sbb es nop push add xlat mov pop xchg ss roll repnz (bad) jae or or rcr jne add or testb dec cli iret mov or out pop cwtl outsl data16 popl jmp adc mov dec cmp sarl mov call and dec bound in insl (bad) xchg sbbb and stc and test or adc mov and add aad in xor ja js cmp pop jge add mov xor jle xor fnsave fimull (bad) and push and adc rcrb or (bad) xor movsb iret sbb jno or xchg (bad) js arpl jns pop mov iret xorb add sub popa mov xor cld or add push xor data16 popa mov outsb jns lock decb sbb ror xor ds rorl cmp loope adc inc outsl and mov jno pusha or add inc in in jns fist rcrb inc xor dec movsb xor ljmp pop xor inc or (bad) mov fdivp test lret arpl fstps fimul or cmp mov (bad) mov sub and mov push shll mov mov lds cld inc mov xchg mov loop cmpsb xor and push mov (bad) paddq and loopne adc test cltd sub or or cs mov sbb inc dec ret adc cmp adc mov test adc xor insb mov cli adcb out sub test adc cmp or rorl ficompl push int mov icebp push mov enter and adc sub mov add icebp movsl sti and add and jmp dec push jns ret vmovapd enter mov push int3 pop push or fwait popa add stc dec mov xor and or mov repnz jb inc xchg outsl and sahf jmp scas add jg int3 repz mov or loopne cmpsl sti scas shrl mov inc jnp ficompl cwtl adc fcomps enter and xchg inc dec sub dec lcall or lret test adc mov les push rcll cld and adc or push andb subb adc (bad) add daa sbb (bad) insl add and test mov orl push cmp pop cmp jge or push popf (bad) icebp and add fstl insl or dec js loopne pop dec and inc fcom sbb (bad) adc mov dec test pop sub test add push wrmsr scas icebp adc pusha movsb jge icebp rcr adc arpl ret arpl inc mov xor add (bad) push imull es push nop xor mov mov xchg sbb lea cmpsl pushf inc aam shrl sbb (bad) push dec mov lcall and push inc adc mov dec adc stc push lahf jle jno idivb lret imul out push inc nop jne jb xor nop inc loopne dec mov stc rorl adc lcall adc dec clc repz sbb fs and inc push pop ror mov xchg pusha sub adc mov mov out loope mov sub push add je (bad) (bad) sbb fistpl xchg xchg loopne inc sbb in add cs mov xor adcl push push mov cli movsl cltd adc outsb in inc inc std pop xchg and ds cmpl push std (bad) mov jae stc mov int3 cmp xor sub int sbb (bad) push inc pop jae sbb pop roll add shrl mov xlat push std addr16 mov mov add pop rolb rclb out int inc xor gs mov cmp mov jae sbb leave int out xchg jns add and arpl arpl (bad) xchg out cmp imul sbbb sub or mov inc dec std sbb xchg xor repz pop movsl cwtl push and push fdivr add adc vcmpss sarl pop push inc and xchg addl xchg stos test xchg sarb add mov and adc sarb enter mov enter cmp mov adc or sti add (bad) bound or mov mov rcrl ljmp add sbb pop cmp xor pusha add dec mov lahf rcrb pop add pushf and push sub add add mov add sub pop jo pop mov aas es sbb cmpb outsb and shll faddp mov sub mov add (bad) nop fdivl push loope ret fild mov (bad) ret aas fwait imul mov xor pop subl push lahf add mull dec add cmp (bad) or or sbb and icebp clc adc lock fidivl pop add test push add cmp cmpsl fsubr adc sbb mov add fimull popf clc jle mov push (bad) cltd fnstenv (bad) lock cmp rorb push cmp stos fsubrl loopne imul and rcr mov test pusha or xchg adc test adcl rcrb add sbb mov xchg ret (bad) insb adc jl or xchg mov adc dec (bad) les push clts jl mov dec sbb dec cmp out leave dec ret inc xor rolb pusha ret fstpt stc add pop add sbb add (bad) xchg adc ljmp xor aam (bad) jmp loopne adc push ljmp sbb mov adc push or cwtl cmpsb stos jecxz pop in mov lret and aaa fsubl push popa mov pop push xchg add (bad) negl lds push mov or std les jl cld mov ret bound fstpt or xchg leave push lea ret pop mov shrb enter shrb rorl (bad) push in sbb repz push mov mov inc mov mov inc sub push loope sub inc movsb xchg ret daa lcall dec inc adc ret xchg mov lods push pop add (bad) aam mov sarb and mov (bad) pop popa xchg mov add push mov mov incl inc adcw add in test jno sbb movsl mov push je idivb sub mov mov mov add inc repnz bound test push int3 (bad) lret in call jns lcall fs dec jae sti imul pop sbb xor aam add dec mov jo mov fisubr mov nop andb pop aad or (bad) (bad) cwtl mov push cmovae js movsl les xchg inc std xor and insl les popf jbe adc mov mov (bad) subps xchg add jp call xor mov adc dec scas xor mov lret mov loopne stc je push pop lret ss inc jo movsb add (bad) outsb addr16 aas pop pop ds add xor popf out inc pop or adc dec mov clc scas or push test lock cmp fdivl je add (bad) ss mov or aas punpckhwd inc les mov xor push das push mov rorb mov push repz lock inc add cmp add or in adc mov add pushf add xor cli and pushf xchg adc xor (bad) jo adc mov pop and add xchg in ret popl shr xor (bad) add push js xor mov test stc bound cld jle test (bad) iret je push ljmp imul inc lock or push aad mov in (bad) and xchg jp pop cmpsb push sbb push dec nop fs push ret push les enter xchg fisubl shlb leave add mov mov push sub or rolb (bad) xor xorl push aaa test add out dec sub leave out jle inc js cmp jbe gs repnz lcall pop adc mov push ljmp rolb push mov push add mov push jno mov fbld sub add lret out imul mov push inc pop sub add add in sbb ss es pusha inc int3 mov inc loopne pop inc out hlt jle jnp add cmpsb dec mov cmp mov xchg loope sub and mov add ljmp mov mov pop insb rolb push mov nop adc es dec xchg lcall loope xchg jmp mov insl or stc add and and push mov inc xor pop or ficom adcb jae testl mov (bad) ret and cmpsb (bad) out aam fs popa enter or and lock add dec imul das ret faddl int rolb jge add cwtl pop cmpsb dec mov subb sbb inc lds aas add inc scas (bad) mov (bad) (bad) or pop nop push nop push mov adc or scas jmp push mov cmp popa pop test or cltd jge rcrb push lock adcb cmp call (bad) loope cmpsl lock sbb lock mov negb movsb pop sbb daa sbb or adc add fcompl pop stos xor test call adc pop mov jge pop shlb push bound es push xor xchg lret sbb es negl push mov lock dec (bad) jl mov adc mov xlat xchg scas loopne adc add scas cmp mov ficoml pushl mov cmp outsb lret and and ljmp push cwtl sarb in push imull inc imul nop or (bad) (bad) xchg sbb add and popa add push add lods push jmp ljmp dec sub xchg mov cmc or add dec cwtl cmp cltd orb in mov adc fild jae (bad) or mov loopne lret add cltd shll adc add jge in insl or add enter nop inc add test dec sbb or rcrb (bad) sbb cli loopne push sub (bad) fisttpl inc add ficompl sbb mov jecxz cmp add rolb jl int3 orl add lods int dec and imul pop pop (bad) pusha leave inc cmp push push mov and jecxz sbb add mov rclb cmc hlt xchg dec dec outsl ret movsb movsb shrb xchg jp lock lret hlt inc leave push xchg jo cmp shrb imul and mov or dec pusha rolb xchg mov je push and push jnp xchg lods shlb rorl add not test xor cmp fsubr push scas insl aas int3 daa cwtl push imull je lds inc adc pop out pop imul inc fcomp sbb jns,pt pusha cmp fisttp enter fwait popf sbb or js mov xchg and or (bad) (bad) clc call pop mov pusha pop or aad push add dec ret inc adc (bad) sarb fsub pop adc add push sarl imul push (bad) out pusha add xor popf pop pop out fucomp andl lahf (bad) sub inc cmpsl lock mov fsubrs mov adc dec inc mov subl xor test js or repnz pop ret cmp into andb inc adc sub pusha out aad loopne cmpsl xchg int fcmovu lcall ret daa inc cmp and or in add pop call mov mov inc nop adc push movsb add sub (bad) pushf adc add push mov mov pusha xchg fldl2e pop xor mov dec clc (bad) push jp sbb inc dec rcrl shl mov mov pop push mov nop fsts addr16 stc or add rorb fdivrl es jo jno adc or shrb mov pop mov aad push add in add fdivs mov push cmp iret or add in fild jbe cmpsb pushf xchg xchg jo int3 push in mov add rcr sub (bad) cmp push pop nop rcrb xor xchg jne popl dec insl xchg add lods in cmp sbbl mov pavgb popa xor cmp cmp int icebp jae leave nop test jl inc push pop flds popf xchg int3 (bad) mov adc in fwait xor jecxz clc outsl arpl add outsl cwtl inc inc test lock xchg in push adc lock data16 idivl jns jle and cmp loopne mov adc pop or and imul out push sub or add (bad) jmp cwtl (bad) and mov dec add cmc mov adc adc push ret loope divl rorb xchg sub mov (bad) fistpll clc adc or pop sub mov cmpb jae push (bad) loopne pop pop cmp decl in fdivrl (bad) loope lock push iret mov jp mov push clc cmp int cmp dec aas cmc add lods repnz leave and pop out movsl loope mov add jg cmc cmpsb dec (bad) bnd cmp push dec fistpll xor jg push xor or dec add xor jo add cmpb and push fidivr js aas es fwait jmp nop sbb mov stc adc mov inc test enter sbb add sbb pop ret lea fidivrl call push mov ret xchg dec sbb icebp out cltd insb test xor cmp std sbb aaa xchg push (bad) jecxz scas adc dec in sbb add cld insl loopne stos mov bound fwait sbb int adc roll push mov (bad) pop fmuls add lret mov aad dec out xlat (bad) mul repnz mov popf sbb cs push cmp fstps ss rolb mov lea sbb enter cmc mov mov or insl sbb inc call inc aam insb jecxz loope mov or add (bad) or cmp cmpsl dec mov sbb or inc mov popa insl js push (bad) or nop cmp jg push pop mov aas cmp test mov fcomps jp inc xor std mov pusha rsm xchg inc leave push gs inc std loope pop test shrb dec xchg loopne int3 add (bad) les test add nop mov inc pop pop push dec or js inc dec repnz ds clc mov inc out add rcl (bad) jnp lcall orl fldenv lock jle addl add int sti jne pop aas cli hlt pop cmp in dec sbb fs fiadd repnz lea add mov loop inc push fmuls sbb lock xor nop mov pop push xlat je inc cmpsb adc mov cwtl aaa sbb push jmp loopne add lods cmpsl inc loope add andb xor fldt enter loope in test cmp jl insb or loop out adc jg,pn push lret mov (bad) jb mov andb inc push pusha dec sbb push push in orl add mov fwait outsb nop mov mov dec mov icebp clc mov fdivs sub adc add adc mov add subl adc cmp les pusha pop mov insl dec shlb loope fxch cmpl inc fadds rolb jl or fwait stos test sbb (bad) push mov adcl mov pop cmpsl add dec sbb lds call out iret repnz pop add adcl add inc adc test sub outsl add jae dec push int xor insb cmp movsl (bad) jmp test add sub or sti jno sbb popa movsb mov enter movsb mov movsl lret (bad) rorl pop (bad) into stc sbb rcr outsb sarl add jbe or xchg cmpsl lret loopne sti paddsb push sbb js fdivrs push push mov enter mov inc xchg test or nop lahf (bad) lret pop lock imul adc adc push movsb vmovups ja popa jle mov ret or bound and inc sbb push adc push mov stc dec push mov sbb scas push mov test xchg push bound pop cwtl test push or ret xor dec je clc lret in and addr16 (bad) je hlt xchg mov add mov push jl movsb or push add fwait adc xor jae jne pusha movsl sub dec int3 push or (bad) in cmpsb sub int3 push mov shrb cmp pop aas pop in pop std dec jl mov sarb and or les les jo in out push lret sbb or mulb and xor mov xchg clc jl cmp xor jl (bad) and enter dec and and mul cmp dec mov sbb jp movsb in inc outsb push sbb dec movsb mov mov mov push lcall sbb in mov sub xchg pop cmp add into push loop loope or add lods xor mov jmp leave (bad) sti dec lods lcall mov test inc adc push adc addb rcr mov and and ret rcr (bad) cmc xor scas dec mov sbb and pusha andl xchg and or sbb add lret mov mov movsb fucomp mov xor sbb imul or nop jg inc verw cmpsl xor mov jb cmp push je cmpsl jne pop mov add and sbb popa lock cmp mov lock pop loope or cmp test pop cld leave js inc enter or add fldl pop or int clc or and stc aaa movsb je mov pop popf mov pop mov movsl sbb mov shll loopne cmpsl fcompl sub ds sbb andl xchg jno and and sub sbbb xchg pop stc push (bad) mov and sar dec xor jmp notl jbe and pop add test fdivs andb add (bad) icebp add or and cli cltd or insb pop adc mov xor pop pusha lods pop xor jo or and test dec loopne push imul (bad) jge xor std mov pop and orl push pop dec mov pop jae mov xchg push bnd faddl inc cmp xlat insb add xchg aas ljmp sub pushf inc pop jecxz loopne or add add mov leave jg inc and adc sbb add add mov jg mov or sub mov ret jl mov enter adc mov mov (bad) jmp xchg clc aaa mov sbb xor jbe lock xchg mov cmp xor adc lret inc cpuid xor xchg xor insl into sbb lock xor jl std add dec sub sbb dec gs outsb ss shrb call aas mov test xchg mov pop or push into test push enter test sub iret out adc mov into xlat sti xchg int cmpsl jno test test sbb dec or hlt sti cltd clc add sub mov mov pusha dec js push dec xchg inc push out cmc mov sbb (bad) and loopne call cwtl xor xchg lcall cmp cmpsl sub jmp orb cmp add pop loopne sub xchg hlt lret adc enter out cltd mov add jo jmp mov std sub add mov adc sub and and add pop shl cmpsb call cwtl mov add dec shrl in clc les (bad) (bad) xor dec jns xor xchg js add out pop dec lods fisttpl or addr16 dec inc mov push add sqrtps nop clc xor or push inc loope and int3 and stos fs dec cmp nop xchg adc sub pop push out add fcompl sub push cmpsb mov arpl push add cwtl jne pusha addl in or rcr pop cmp pusha outsl or jp loop loopne cmpsb or xchg in xchg sbb test sbb inc pop in xchg lock push mov pop mov cmp add je jns push loope mov aam xor scas or push sbb (bad) jbe sti std es sub pop fcoms add in jg movsl dec (bad) add xor adc xchg mov nop cmpb push icebp sbb daa sub cmc or ret stos mov inc add cmp mov and insl in jmp adc add push mov mov cmp int add cmc popa push loop sbb push mov popf add pusha andb clc int scas or jb mov test aam xor pop inc push pop sbbb or int test fsub arpl pop jo movsl xor std dec xor aad add adc lcall in and and ds ljmp xchg cli test xlat add add push movsb call or push jg in outsb cmp loope push sub cmp push pop mov push mov outsl adc inc in sub (bad) ror loop pushf adc enter in pop lcall mov or add subl inc add (bad) xchg or mov sub daa jle mov aas (bad) sub sub sub hlt rcr fs push js mov cmp mov int shlb cmp fdiv xchg cli push pusha inc xlat fdivrl (bad) fwait sub add int3 cltd enter sub loopne mov ret push sub jl sub sub lds push add push add repnz mov call fdivl jmp int mov inc pop push loopne mov nop sub add repnz fyl2x mov in add jp dec sbb loopne fwait pop cmp es cld push add mov cmpsb and pop pop mov (bad) les mov lcall or je loop ljmp gs xor call leave out jl jo fstpt pop daa (bad) xlat jle bound push rorb mov das in mov sub mov xchg xchg daa mov and push add das shlb rcrb cwtl ret nop pop add sti add mov cmp testb xchg test dec sbb mov cmpsl fwait cwtl push mov and dec adc fildll push or sub adc jne bound jae test dec pop cld orb movsl or xor push jae mov (bad) dec inc je mov jo add cmp lret xchg xchg clc inc jns or pushf popa mov insb test mov jne test repnz mov xchg enter jecxz call push js xchg loopne movsb add mov cmpb lock cmp or jge out jae cs stc add rclb adc add inc push out jb mov mov repnz cmpsl adc fiadd jg enter mov add push mov inc leave loopne and mov or aad ret inc mov or cmp mov fcmove enter int sub push loope cld xchg call inc mov inc dec in inc sti push xchg push mov mov xchg mov mov (bad) cltd pusha mov mov inc sbb popa xlat sub jo lds jbe push cmp jmp add push pop xor adc and push pop cmc cmp mov push test cmp addl lcall pop fs cmp adc push rcl and (bad) aaa orb dec sbb cmp dec orb or ja je,pt pop popa aaa shll inc mov jmp inc (bad) or lret and rclb pusha es push negl test clc (bad) jmp or rcrb aaa inc insb inc movsb and test (bad) xchg imul fcomps mov sub mov dec lods test fsubrl sub loopne dec dec xchg push sbbb cltd xchg sbb fistpll dec aam or cld dec add stos sbb outsb (bad) adc std sahf mov add insb push adc inc mov les sbb mov cld cs pop icebp adc orl in ret jns or sub enter lret ds or xorl dec sbb and rclb add pop adc lahf das pop repz ret scas push mov cmp xchg or pop mov inc leave jno sbb pushf add push mov pop stos xor sbb hlt (bad) nop sbb or jnp jge add test loopne comiss adc fs repnz lds es sbb aaa push push sub imul add mov mov cmp (bad) or mov adc addb pop leave xor (bad) sbb call xchg mov repnz fs add xchg insb das insl xadd or dec mov (bad) sub popa sti push cltd into pusha push arpl add dec adc sbb je sbb mov jns jae fnop pop push inc adc je (bad) pop cmovb add mov and invd das xchg in popf shr dec into add ret add mov inc mov mov xchg insl sub dec inc and or out or dec test add pop into call push rcl inc aaa add sub js (bad) adc mov inc cmpsl mul push pop adc and stos shlb icebp (bad) xor xchg jge enter imul sbb xor out sub cmp push cmp mul sarl sub ds push jo nop dec test jmp (bad) xchg mov inc enter decb dec add ja mov sbb inc aam nop add and jb jns dec nop mov in js mov sbb std movsl adc je xchg mov or inc adc movsb les incb fs cmp add arpl test push pop lret jns cli sbb push push xlat inc mov and xor add cmp cld mov and ljmp sub mov xchg xor or test (bad) pop shll scas mov cld xchg xor lret mov adc inc pop lods enter sub sub mov lahf ret dec cmpsl inc push (bad) movsb nop fs xlat mov cmp sbb xor add and mov dec or pusha cmp xor out iret divb loope push xchg test and int3 adc xchg loope jnp adc rcll addb mov cmp sub mov mov sub fstps pop andb jecxz xorb enter or mov sbb das pop pop xchg outsl fwait xchg enter and mov sbb cmp int push adc dec add push pusha lret stos adc sub call dec mov adc add sbb scas stc leave dec add mov (bad) rcl shl adc mov dec fcoml loopne lds (bad) inc push mov cmovp dec mov dec in not xor and lods xchg movsb jo in xchg js or mov dec int adc or cs and repnz mov dec dec xor movsb insb pop lret shrb push lahf lods mov add cld leave fcomps or jge sbb addl mov xchg fcoms push add scas ljmp cwtl imul jl in jnp push (bad) repz add out aad lea out pop sub mov les outsb jle imul push outsb nop push inc mov ljmp cmp jp cli jnp cmp test sarb mov mov repz fs call mov (bad) mov aam jmp or movsb adc mov and dec les adcl sbb add xor call in loopne fwait and (bad) insb imul cmp fsubs sti dec mov into sbb add mov enter adc mov cmp cs add add sbb aam push jnp xchg adc push aaa jo andl add (bad) enter pop dec fadds cwtl push mov add inc xchg int3 cmp je mov add sub xlat pusha les cld iret hlt fwait (bad) xor mov in test std adc fnsave inc dec push stc int add push out (bad) push dec jge add inc loopne andl push dec cmp je mov addr16 jmp stos int3 add popa dec mov daa icebp sub cs pushf adc adc or movsb mov push rolb clc sub rclb mov add xchg repz arpl rcrb add pop xor push (bad) clc js adc test mov and in je push and in mov test int mov pop adc lret and sets clc es les bound icebp add lods fist add inc (bad) push (bad) inc add repz cmp or mov (bad) mov mov ror popa and dec dec fcmovnbe mov push je dec xor push sbb sbb add jecxz adc sub push xchg add mov or and fadds xor test and lcall sbb stos inc pushf mov inc adc xcrypt-ecb cmpsl leave les lret andb and cvtps2pi pop pusha inc ja lahf hlt or lcall push sti adc cmp test inc pusha nop (bad) (bad) pop adc fdivl pushf inc adc xor loope mov xchg pushf (bad) xor or push dec add loopne bound js sbb add mov mov negl int3 cld or push mov sti cmp adc xchg ds dec call mov mov sub aam push ret push test xor add subb sub movsb pusha ret js sbbb jle icebp adc test iret adc mov sbb pop into pop dec xor sbb out xor push xchg push aam movsb mov jne cltd movsb mov mov gs sub cmc pop mov add add mov rclb addl xor and std loopne mov and jns jl mov pop lock add pop leave or pusha or insl xor and adc mov mov lods nop nop jl pop clc sbb push push dec cmp fucomip pop add stos sbb stos adc mov clc (bad) pop dec imul push xorb sbb sub pop (bad) pop rcr repz cltd cwtl or lock (bad) dec shll test mov cmp sbb (bad) mov xchg aas loope xor add mov int3 stos sarb push scas iret xor xor jbe push cmc hlt and dec adc push and pop add xchg inc jo pop mov or or int nop insb (bad) or dec into idivb nop jo pop rcll dec in pop lret sub sti push lahf (bad) push inc or jnp sahf cmp add imul push clc pusha clc sub or pop es xchg (bad) mov mov and lods adc adc cwtl lods xchg cltd add pusha call adc loope or nop push incb sub lahf adc mov inc add xchg xchg pushf or rol cmp cwtl cmp push push fisttpll adc notl dec clc sti dec jo nop ret sub xchg add push mov jae call ljmp adc xchg jl and xor push inc insl mov int3 aam add dec mov sbb jnp lret sbb call xchg fsubrs lods adc sbbb dec mov imulb or rorl dec pusha jl and add cwtl push dec mov mov and ret mov scas pushf test hlt sub sti out loopne call xorb or cld fwait cmc (bad) jl and ret add imul pusha mov cmc add shlb push je cwtl pop fadds movl mov and mov dec clc push inc or aas mov dec jp add mov divb add pop rorb xor xchg icebp lret call cmpsl cs enter inc dec popf movsb pop or (bad) pusha iret das test shlb fucom add push nop dec adc add lret stos jp sub cmp es and stc or js dec es xor jae mov inc mov mov ret incl fmull jne shr push jns pop out out add rol xchg jl xor int loopne xchg push fs and adc in das pop pop test movsb add cpuid mov mov hlt repz adc push xchg mov out in nop xchg dec punpckhwd mov pusha or aaa adc mov cs ljmp aas dec aam pop push sub rclb adc nop jl je das xor add aam add push loopne cmpl call mov mov (bad) sti xchg loopne add sbb int icebp sub mov add lahf or hlt ds les or test push add adc fbstp das mov (bad) cmc push popf add sarl dec add cmpsb adc out or lret push dec imul pushf imulb and xor mov lods ret cwtl rol sub dec jl adc adc iret in les cli sti jp or dec add into jle mov mov enter pop jb add mov (bad) xchg and add mov shrl fs lods shlb hlt and rolb mov add dec stc add mov pop nop pusha cs sbb adc xchg in cli and nop mov lret int3 int3 imul lea pusha cs add jl adc mov mov sub sti sub dec sub fadds stc or (bad) xor or xor movb ret les into pusha pop leave xor cli mov (bad) adc js in fwait rcr shll inc icebp dec and (bad) jno or pop mov es or clc add cmpl mov loopne jp repz add xchg sub (bad) (bad) out mov loopne (bad) pop lds and add mov (bad) rclb (bad) sarl jecxz mov in nop xchg cwtl test ret outsb orl push repnz (bad) loopne out movsl dec fwait add inc pop xchg fild imul jl mov cmp pop inc nop jg mov sbb mov jp int3 and js or pop sahf xor jl xor add and push sub in add and jmp mov popl or xchg push int3 jmp mov xchg incb or mov sbb dec inc add mov sbbl add push mov pop mov pop mov rorb out dec aam add addr16 pop mov in mov sbb sbb stos popa push call push (bad) out pushf movsl add and test cltd add aaa add imul stos mov dec es add out inc mov xor rclb test push mov jl daa call icebp inc adc ja adc (bad) mov jne add sti and inc xchg data16 (bad) nop rcl and xor adc add jmp arpl mov or pop pop xor jb add imul add scas cwtl sub add jge test test jno adcb (bad) mov mov or xchg sbb shll push fs mov loopne fistp push or pop outsb add movsl push jle inc jecxz je adc shll loope push pop mov and mov sbb add jno mov or in in adc inc cmp in xchg fcmovu ja cmp adc not add scas loop sub cwtl push add or jl xchg insb pop dec jg jnp mov add adc or orb jno add cmpsb inc rorb rcrb xchg cld adc jno sbb fisttpll mov lret aam push and fldl and outsb cmp xchg ret (bad) (bad) mov dec mov mov int3 push push lods sub mov dec (bad) shlb cmp test mov ret rolb shlb jle pusha hlt xor sub lds dec add lret rcrb cmpsl ds mov push mov add xchg call lret in lret out inc and icebp push (bad) leave nop je sbb xor or aam rcll call cmp dec fdivl cmp std push (bad) or xchg cmpsl jns js mov pop mov xchg push rcr mov lret loope cmp or in ficomp outsb jae dec push mov inc inc xor aad xchg pusha adc test mov popa cmc call (bad) out mov xchg movsb cwtl push dec jnp movsb or bound mov or xchg fisubr es decl push and jae jb ret dec orb inc and es enter xchg add into dec mov or in clc xchg repnz push jae das sub test adc and dec aaa pop add jne hlt push lds pop inc add out test bound push (bad) stos rorb adc ficom (bad) scas pop cmp enter mov lds or mov pop sub mov mov push xchg mov inc or jg push mov loope and jo sbb dec fisttpll sbb dec inc cmp scas and fsubl in shrl inc lock mov mov push or std adc mov xor cmpl xchg lcall add icebp mov enter xchg adc add cwtl das andl shll jnp add jnp adc jae and add xor push pop dec sbb jo jmp xor in bound push or adc xor and mov add bound sbb push nop repnz sub mov sbb mov in xchg call adc inc or cmp add rcr imul in enter sbb cs leave pop push bound outsb adc (bad) (bad) and mov pop and pop add subl and push xchg mov aaa fiadd sbb movsl sbb add push scas scas cli mov nop mov idiv inc hlt cli mov dec xchg xchg xor cmp hlt aam xor xor or bnd data16 adc cmp stc insb add lret inc mov xchg jp mov (bad) add sti lahf mov push mov add xor in movsl and dec sbb lahf cmpsb add outsl jb mov lea leave shl push mov pop cltd and repnz xchg adc push or and mov inc gs or lret push fprem inc add call xor es dec add loopne jne cmpsb andb fiaddl repnz test mov fmulp inc test add xchg inc sti push imul mov stc and fstl rorb fldt pop or xchg inc and push pop cmp enter sarl mov mov pop es shlb mov lds daa lret xorb mov test xor dec and or push (bad) pop stc clc fmuls xchg lcall adc jp xchg inc jae add leave fisttp imulb sbb notb inc lods leave icebp outsl xchg jae add mov add push mov call add jne aas cmp sar pop sarl xor mov mov in inc fdiv lret cli repnz add stos cwtl mov dec xor push push and mov push movsb roll xor push pushf mov dec lock push lcall mov dec mov add cs lock pop rcrb push push pusha inc orb sub sbb and jg lods adcb (bad) lea mov cmpsl push je loop iret or dec enter test call mov xchg aad inc cmpsl xchg loopne fcomps fsubs cmpl les xchg add (bad) repz mov and out outsl mov or call adc mov mov mov xor ds cld add adc ret rclb and push dec fs cmp test and cmp nop (bad) in movsl sub (bad) or test loopne add outsb aad xchg clc mov test mov add and or clc jl xchg inc mov lods icebp loope adc xor dec sub lea iret sahf pusha add fs cmpl xor test aam loopne pushf fs sbb and mov mov jmp dec sub sbb loop pushf jns dec cmp dec and mov shll and xor insl sbb cmc add mov (bad) inc cmpsb outsl add rolb rcrl bound ljmp pop xor sub je std jo lahf mov (bad) adc fstl sbb sti pop jo insl daa push inc repz mov je sub mov push mov ljmp sbb and mov div cmp cmp in inc adc sub leave push or jno je dec pop add mov push adc (bad) ret pop int3 xor es cld xchg xchg jae add inc std jo,pn inc inc cmp inc incl mov popf es cmc fs cmp icebp jp cmp mov jmp xor mov add jle daa aam in mov pushf clc out mov mov push test les or repz cmpsb lock jle je jne and clc loopne adc notl mov enter add dec jae lds adc add jo fcomps nop test cmp mov inc mov imul lahf out jne pop out add sub mov fcoms lea hlt (bad) xor icebp lcall bound out test daa pop mov or ss xchg pop sbb adc in (bad) xor aaa add and fs outsl adc cld xchg add lret sarb pop pop jbe dec outsb add sub mov push dec sub xor mov and test outsl dec pop int dec pusha adc jp pop inc pop enter nop jb add aad pushf fistpll imul sub sub xchg mov aas movsl cwtl pop pusha jg and cmpsb test jns rcr xchg adc cmp andb inc add sbb leave and sbb mov lret or icebp js xchg nop adc cmp call or mov sbb sub sbb nop iret sub addr16 hlt out orb xor jle pop outsb orb cltd mov mov lds adc test scas mov push inc dec or xorb imul cmp push loopne test lcall push (bad) adc push fisttpll outsb xchg xchg mov repnz mov mov and mov cmp insl mov out das dec mov sbb mov pusha jb xlat outsb xchg sbb mov sbb stc xchg js mov fnstsw into or jmp sbb jb pusha pop mov or add mov test push adc shrb xchg aad test clc cmp or cs adc fdiv add and popf ss cmp cmp addb sub xor sbb cmp loopne std pop jno inc movsb xchg int3 popa (bad) leave jae and out sub dec arpl (bad) lret movsb inc fsubrs dec call pushf addb into imul out dec cs sub ss or (bad) ds fsubrl and mov flds (bad) xor mov lods gs sbb rolb push mov push sbb clc sbb or shll leave in call inc cmpb or int out xchg call sub stc xlat and cmpsb into pop sub xchg and jnp push sbb push int3 ss inc addb repnz popa xorl ss cmp sbb mov mov pop sbb sub arpl sbb icebp dec mov mov xchg call shr dec gs adc cmpb gs jp sbb shl pop mov (bad) enter sub xchg call pop andl or mov je nop/reserved leave roll out lret add nop and test sbb rorl mov push cmpsl pushf leave test xor (bad) enter sbb les xchg or mov xchg call (bad) xor call scas out mov out and test add arpl push imul iret jmp test xor mov je sbb or stos xchg test mov je insb leave dec xor sbb (bad) cs inc nop lods push pop mov dec iret mov and loope xorl popa fldenv insl inc inc and adc addr16 inc lret xchg sbb sub add shrb lea sub test jb sbb add mov loopne nop adc push mov mov mov sti lods add in pop cmp mov data16 mov sbb pop jg mov inc sub mov inc sub xchg imul and loop and mov out hlt push mov popa and push mov fistp push and dec xchg add subl sahf inc add mov shll xorl xchg aaa add mov inc pcmpeqw jle mov (bad) icebp and or add jge cld movsb mov sub notb inc arpl dec movsb pusha push mov adc and push call lods push out dec push push adc or sarl add pop sbb outsb mov in movl sbb std jb leave inc mov xorb loope xor or orl or jg ss inc and add cmpsb xchg mov fs dec push cwtl adc sbb cmpsl and jne ret and je add jmp add test fdivrs (bad) adc adc adc add (bad) out push ljmp xchg loop and jecxz (bad) fdivrs mov lock repnz insl add imul and jmp mov or movsb les push les and mov in rcr push sbb mov fistl mov outsl test insb jne dec js or xchg lret push cmpb (bad) mov dec sub push aam add fimull add add test mov xlat nop sub ret and dec mov mov dec sbb (bad) push pop mov push addl pop mov fdivrl dec pop jb dec jp ds push outsl sub fldt rorl sbb into mov xor or adc lahf and leave add cwtl mov push (bad) stc jno pushf cs dec mul push sarb roll clc sub outsl jo fldenv jne push xor sbb mov or and or nop nop push insb cwtl jb fsubrl dec and add push cltd dec shrb sub add cs test xor pop pushf push mov inc dec dec push notb mov push aam mov sub sbb push jbe test and mov add outsb xlat jbe int3 nop mov xor int3 ds mov mov test inc mov push inc or aam mov mov inc jo pusha jo je mov inc sbb popa in mov push pop enter pop pusha leave adc (bad) in cmp pop jb inc sbb insl nop dec test jns cltd cld nop test cltd sbb aam sbb inc add out icebp xchg pop pop leave push mov and pusha mov push outsl xchg xchg cltd push xchg xchg sub jle test sbb les dec mov dec addb insb xchg andb mov shrb daa insb pop pop test sti out xor cmp inc dec pushfw adc dec push clc xor add cmpsl mov push xor or pop je add mov jmp adc adc cwtl and add mov test mov jl and out js adc hlt aaa insl dec sarl mov cs adc sub dec and lods outsb pop daa adc or push sbbl adc dec (bad) dec dec or js push fwait mov or int3 adcb sub mov insb dec out inc adc push mov and lret add adc sbb inc les inc sahf xor jmp mov insb sub je sub sub dec sub fsubl jge pop mov adc adc xchg sbb mov jo inc mov jae xchg mov and xchg mov fchs or je inc pusha mov data16 xor dec and mov andl inc sahf int xor inc cmp enter int3 cwtl insl jo jb dec out push jbe push loop inc cld hlt xor pusha sbb bound jg dec jne sub push dec mov addb or nop inc out mov inc push in call movsb ja xchg push jo aam xor dec xchg sbb sub and lods push dec cmp movsb pop and and xchg les or das jecxz adc push shrb es push test inc nop dec lea les les push mov add int3 (bad) xchg lods enter push mov fwait test repz mov add sbb xchg addr16 dec sbb (bad) jecxz (bad) (bad) inc mov mov ljmp ret mov xor shll sar hlt mov fdivs outsl jle cld pop (bad) and (bad) pusha test and jl dec enter cmp lock aas shrb sub cld test inc jae and xor addb shl sub in mov inc pop clc movsl outsl subb pop add mov shl cmp gs mov loope cwtl cmp aam cwtl test mov mov mov push aas inc xchg sbb mov xor leave sahf lock or js sub add mov fcoml adc lret mov mov add mov test fsubrs hlt pop (bad) dec adc test rclb jo es je js cmp jmp jge (bad) xor jo dec pop push aad dec sti mov jl inc (bad) fisttp (bad) jecxz and test push pop ret inc test mov mov out xor fisttp mov mov clc sub mov push adc pop imul jnp push push jmp xchg clc jecxz push adc add inc add xor add inc push add js rcrl (bad) jo pop lahf cltd out xor pop push lods xor cmpsb (bad) push inc sub adc mov add pop dec fcomps sub push or mov add popa pop mov jo sub pop sbb sbb addr16 xchg add mov cli dec inc jo xchg cltd pop push fidivl jp sbb jo mov cmp xchg dec popl mov or popf mov dec dec jne shrl xchg (bad) lds inc sub xor inc sbb das cmp add mov rclb or and out outsl jge jl and je mov sbb mov xchg clc (bad) int add icebp loopne pop or push jne aad cmpsb test or test xchg mov add lcall mov push iret je xor add or xchg mov xor (bad) out movsb xchg add cwtl jecxz pop add sti ljmp xor clc add pop and stc insb lock xor hlt inc xor (bad) sti cmpsb lds test cmc xlat dec mov xor dec or cmp xor adc pop xor int loopne mov add jle adc push mov mov xor mov clc lods add jge xor jle inc lods int3 pop add jns icebp inc loopne cmpsb add es fldenv hlt loopne sbb inc or mov mov add pushf xor xchg ficompl add inc or cltd test sub mov inc jp or movsl popa lcall mov repz add add pusha popf adc sbb out jl jl js js add stos sub inc test and lods xorl add sbb rcrl cltd stc out ja mov repz pop cltd jl jl sbbl cmpsb mov jmp int3 cld sbb mov add mov ror je xchg sub mov sbb adc xchg cmpxchg fimull test adc and adc add and pushf push push jl adc aas mov push insl xor and mov test dec jne lods jmp mov dec (bad) add (bad) js cmp or mov repnz and mov lea out insb movsb sbb and pop sahf je out or pop mov sbb pop shrl aad in icebp data16 mov pop adc call addb mov push mov sub cltd sbb sbb lods xchg test repnz pop sbb ds jl xor lahf pusha mov aas je les sub enter cmp mov adc scas in mov imul ror xlat adc mov add lods or enter adc in adc loopne sahf mov mov aaa cmp loope cmp mov es stc pushf push mov arpl sbb (bad) mov mov cwtl repnz enter mov jae test mov cmp xchg push push sbb add cs lock testb lock mull insb pop fdivrl movsb mov cltd push sub add cli inc xchg mov cs movsb and mov and nop cmc movsb add dec sar icebp in movsb pushf xor sar das jo and xor pop sbb mov inc inc sbb and xor adc lahf ja cwtl sbb and mov jno andb sti mov aad movsb in pop mov mov adc adc and test inc enter cwtl jmp or jl mov jl push jmp movsb hlt loope mov add leave mov inc add xor adc scas mov add xchg in rorb adc pop xlat add add mov lret pusha dec cmp loope int3 and mov cmp mov jb adc lock (bad) add scas sub xchg inc test es add movsb lret clc ret sub dec add loope pop scas jo hlt adc insl add int3 cmp ja sub or or mov call jb add jb pop imull cmp cmc cmp out pop dec add (bad) mov mov sbb or mov sbb lahf adc xor fidivl add and pop cmp and add adcb in ljmp sub mov sbbb dec jb inc loop je pusha and leave es add adc (bad) int3 cmp mov xchg pop mov fistpl push (bad) or cld cmpsb add add loop xchg jp call dec add test rcrl or jae fwait sbb xchg cwtl mov ror adc xor stos mov or lahf cwtl inc adc (bad) in mov push dec jb cmp adc sbb sbb jg pop pop in (bad) xor or push push jbe daa loopne pop orb int es inc mov mov aaa mov or pushf sbb inc xor andb (bad) mov pop inc loopne push roll nop imul int3 add cmp dec repz cwtl xor adc jecxz dec cmp jno and sbb insl add cs sub xor xchg xchg lock rorl ss xor sbb bswap das push mov add stos mov sub das or inc out push je add popa and mov cmp rcrb imul add adc cltd xchg sbb adc ret imul dec adc inc js loopne stc jnp inc jo (bad) out inc adc pusha inc and jae movsb and push cli (bad) mov out lret sbb dec xchg inc and pop xchg mov or xchg lock sbb fcoml (bad) fidiv addr16 lods xchg cwtl mov cmp loope repz adc and cmp (bad) mov clc in or mov push or test enter das mov push int clc lods les ss stc inc or push pusha in pop or out or js mov addb repz add scas pop test andb (bad) lods rclb enter xorl or es push cmp (bad) adc insb pusha or outsb jecxz gs incl nop push xor test xchg loopne movsb xor sub (bad) aad daa mov je mov sbb and lcall in cmp sbb pop and sub in mov rclb jl push test add fldenv adc loop dec or les mov test mov cmc clc movsl mov cld adc ret push and js pop js mov cwtl sahf bound iret sub aam call mov inc rorl gs mov lcall and stos ds push (bad) xchg sahf or das sub pop clc cmp test xlat mov sub je dec dec add lret jg (bad) in sub cwtl dec mov iret dec mov cmp lcall inc mov push pop sbb mov sbb adc xchg jmp or ret mov sub lods fs inc in stos jbe pop mov add cmp cmp add push lret mov mov imul mov out pushf das inc sub in bound cmpl iret push movb mov pusha in ja bound cltd cmp ret add and add lods gs outsb mov int andl inc mov or jp cltd adc fcompl sti and movsl xchg fcoml (bad) cli outsb shlb ljmp xchg mov packsswb push dec adc jo inc add jo sbb adc mov xchg fucomi sub push sbb nop rcl cmpsl (bad) inc push sub daa mov ds or jo andl in adc rorb loopne add mov cmp negb fs xor dec les test icebp or idiv jg fiaddl jnp dec pop jmp inc (bad) div xor cmp loope pusha js adc divb ds test cwtl test xchg icebp mov inc lods ret repz add scas and dec dec mov out scas fmull pop popf pushf xchg sbb loopne lcall xor mov xchg dec mov sbb out cltd mov jp loope dec rorb negl mov mov or cmp repz aad movsb sbb (bad) xor adc in popa push jae xchg fsubl add sbb fdivs popa add aad mov and dec pop push mov dec repz xchg cmp mov xchg ja sub cmp daa lods cwtl clc mov dec mov add add add jbe call xorl int3 sub aas lahf cwtl loopne cmpsb jns adc pop shlb mov and push jle hlt or fnsave mov mov daa jle sbb loopne cmpsl sub sub add add xor pusha push dec into aam jo inc mov int3 or test xchg loopne pop sub aas jb loop sub clc int3 in push adc push stos fistl sub cmp push rolb sub test or adc mov sahf mov (bad) mov in scas push adc xchg push and xor sbb dec dec cwtl orl mov ds sub pop in xchg loopne std pop nop in pusha jns cmp lock add hlt xchg (bad) in add xchg mov sbbb add push add cmp lods push sbb xor dec addl rolb cmpsl dec cmpsb add jl xor notb adc cli loope add cmp and add js mov and push loop cs mov inc jae pop cli push test and test (bad) test mov pop cmp fs subb or or bound add lcall add add or lahf pushf jbe dec inc mov add mov xchg icebp and and int3 pop nop mov push inc cli subl sbb bound adc cmc nop movsb les mov icebp popa pop sub jecxz insl inc nop cwtl add add mov faddl xor xor sti xchg les push mov rorb mov cltd in int3 mov stos sbb xchg sub sub push add out icebp xchg cmp insb (bad) xor shlb mov test lds movsb sbb test cmp sti jecxz iret xchg aas aaa and jns test clc cmp lahf and je push add (bad) cmp and or adc xor fs pop fwait push and (bad) out in in mov js cmp lds scas xorl push in aad xor jae in mov add cmp frstor dec mov xor xor inc mov adc mov xchg sub pop add aam mov mov rcrb (bad) scas or sahf gs sahf mul or ljmp push sbb test pop inc pop movsb mov lldt imul lahf jecxz pusha jmp lods into popa js ret and mov mov jo (bad) rclb or lods insl pop test bound xor sub stc or inc shll lret lods subl lret lds mov clc lahf arpl sub test in push ds jmp or pop xor test adc daa dec pop pop test push jae push cmp dec inc aas je xlat in insb pop mov test add inc adc add cmp imul jl out xor stos ds and push vpminub push fbld dec insb rcl lods in mov jecxz pop lahf loop out xor mov pusha jne xor fsubr loopne pushf faddl inc lahf rcr lds lret jo outsb mov cltd sbb jge jns or repz fsubl mov lahf lds sub add push cmp sbb xor mov jnp dec add adc test jns xor (bad) loope fldl (bad) (bad) icebp std rorb pop or js adc test mov adc ficom add movsb jae out dec test les add xchg insb ds addr16 sub push movsb and (bad) je les xor inc inc mov sbbl mov pop loopne lret xchg add mov inc out pushf daa fwait les dec outsl mov (bad) adc repnz dec insb add xor push sbb and fwait mov add (bad) adc cmc mov and xor ss pushf sbb push dec cltd add add mov nop lahf xor popa adc xchg jb add enter cli into pusha test adc lods dec pop push aaa hlt xor mov mov cmpsb loopne andl jb push in jo or pop push push enter stos push push add xchg imul dec add out cmp dec inc lret ds imul pushf pop pop pop mov (bad) out jp pop cmp sub add adc les ret inc xchg roll lock ljmp sub mov jle or out icebp mov sahf mov or pop xor pop int3 nop out cmp repnz and (bad) dec test add and enter jle adc mov ljmp cwtl insb lods mov int3 andl and xlat adc aad xchg fimull add mov mov and mov ret dec test or cmovbe jnp mov push pop add lea cmp xchg rcrl pushf adc cltd push dec xchg jne and jmp inc xor mov xchg xor clc enter repnz insb jno mov test les mov frstor (bad) xchg push scas sti mov push or orb out push dec push xchg fcomps sbb (bad) mov and lahf pusha xlat sbb mov inc lcall jbe outsb ljmp mov pop adc sub mov cmp sub popf cmpsb inc mov add jne rcll fisttpl pop popa mov ret nop fdivrs mov call or stc mov repnz lods or inc inc and xor sub push push idiv cltd dec int or cmp loope sahf add out sub mov pop cmpsb add flds mov aaa xor nop shrb arpl or adc pop or inc inc adc xor cmpsl push (bad) icebp incb nop sbb (bad) push js or ljmp dec add mov sarl sbb aas fiadd push inc pusha cmp cmp add pop xlat gs mov popf loope jo jp outsl stos push or and xchg and or and push fs stos rolb negb xchg push dec addr16 int3 dec cmp mov in cmp push add hlt sub fwait mov mov lods add xchg popa xor (bad) fadd stos push sbb mov pop pop push xor adc das add xor xchg cltd xor sbb mov jno in cltd cwtl js outsb pop mov je sbb and and popl pop clc js and loope jno cwtl inc xor adc mov jo in dec or fmull jle enter sub sub xor or cli bswap push pushf js push clc icebp add xchg scas mov push cmp mov adc pop pushf clc xchg push aas imul and add xlat (bad) mov fstpl mov inc sbb xchg add xchg xchg (bad) inc pop aad adc sub daa incb lods mov mov dec dec inc fsubrl pushf insb dec pushf push (bad) fimul mov or push push adc xchg inc outsb andl adc rcrb pop or out jae scas dec (bad) idiv dec iretw cmp repz sbb sbb push aas faddl xor sub test mov dec add and loope inc pop and sub popa cmp es pop rcrb adcl (bad) push add adcl leave sub pop (bad) and aad or fist xchg pushf popa out in outsb mov adc xchg movsb pop mulb icebp cmc and add add test call adc inc and jmp or pop jno adc (bad) jb ss xorb or jbe and dec pushf dec xchg rorb mov xchg xchg sbb sub lea dec addr16 or push or push es fwait add aaa out xchg and js arpl sbb inc sub add rorb fwait mov xlat sub jl (bad) imul mov mov ds and mov (bad) out sub add jmp push fwait (bad) mov inc sub or adc call push sub and stos or ret mov rclb sbb sub (bad) lcall push lahf imul adc pop mov sti sahf mov scas mov jnp adc test adc sbb jg sbb rclb inc mov es loop incl lods out xchg xchg sbb xor pushf inc jge arpl add xor rcrl xor repz inc add mov rcrl dec sbb cmp cmp inc sbb ds sub jbe jb and or jb dec push aam push xchg inc push add pop dec push shl out sub movsl xchg loop pop add add sbb rol sub or (bad) test adc cmp cmp stos mov cmp ja push mov clc outsb pop cld out mov nop add out sub mov fwait inc adc push mov in rcrl mov popa sbb int3 xchg fsubl cmp cmp mov cli inc sub adc inc ret cwtl js add jmp push ss push adc fs xchg inc inc mov xchg movsl lds pop test push mov (bad) xlat cltd popa mov outsb int3 xor pop daa add movsb and test cmp or or push dec adc dec adc add add dec dec mov cld and cmp add mov jge add arpl ljmp ja cltd sub out adc test mov out push mov adc test add cltd (bad) jno,pn loop loopne and push mov call mov xlat xor bound push cltd jbe jne inc outsb inc cmp adc mov out pop mov sub out gs call jmp dec adc fcoml xchg add jp or cmpsb imul std push test dec sbb es and fild add mov adc push leave sub xchg not fist mov add or add mov adc inc lret cli cltd mov jle add ja xchg or in pop aaa mov call int add add lret add iret mov xchg je rolb cmc scas xchg (bad) pusha dec call xchg dec (bad) sbb mov xor adc pusha mov or inc push popa mov xor movsl ja or jl rol adc inc adc xchg xchg xchg loope jecxz sbb sbb inc inc scas adc hlt push sbb pop loope and add je xchg cmp or cltd sbb xchg add and loopne aad hlt cmpsb xlat in (bad) or sub jo or adc xchg push shrb call add sbb loop sbb mov jmp mov dec es (bad) arpl dec mov lret pop push pop adc addr16 aad stos mov xchg and xor rdmsr and xor mov xchg or or push aaa fmuls lret sbb xor xor fnstcw (bad) sbb push lea popf xchg push add incl xchg dec xchg stos stos leave (bad) (bad) jo or int3 imul jb push dec js adc sub inc sbb insb jmp lock fmuls movsl xchg cltd dec xor bound push pop push dec xor adc js inc adc notl inc leave outsb int3 jmp test test xchg sub insl inc in jbe (bad) xor and int3 popa add xor push jno pop push rdtsc pop pop push cmpsb addb push pop pusha popa pop pushf push xbegin jbe mov aaa cmp sbb or jp lcall adcl addr16 ror pop sbb jnp xor fldenv shl push add (bad) scas std xor pop inc push mov and cmp (bad) jb scas gs add je add stc in inc push mov push pop test or ds xor mov jae mov mov (bad) cmp rorb (bad) scas ss sub fiadd or add adc mov in mov inc xor pop pop mov aaa push fs shrb sub add sbbb jmp loop or and sets lods add push loop aas cltd jmp cmpl push mov add add test loop xor dec add mov fist outsl sbb or pop inc cmp fildll pop and test out pop mov pop jge,pt xchg les (bad) aas cmp sub sbb dec cmpsl or add and ja jle sarl sbb dec push dec push ficompl xchg testb jo sub pushf lock push adc fcomps cltd inc or push test iret jno shrl cmp cmp popa xchg inc add sub ret and out and sbb pop xor xor jp jmp jbe xor (bad) adc cmp les sbb inc inc jns mov adc pop jl pusha pop dec xor push jnp jp xlat pop lea das push mov hlt pusha lods lods cmp dec push jnp xchg jmp cli stos shrl test nop sbb jecxz ret cmp int3 fs pop lahf sub sbb push mov aaa das push ds mov or inc dec add jg push mov sub pop fwait cmp push push call dec pop xchg pushf and in (bad) jno dec (bad) (bad) add mov fdivrs jae push pop test test test mov les push jno add ficom leave cld mov pop (bad) scas jbe int3 inc ret pusha (bad) mulb clc out jns aad xor dec or cli lret xlat (bad) mov pushf xorps addr16 aad xor pop xlat (bad) pop in pop pop ja fcomip cwtl xor adc js sub push addr16 decb pop add pop idivb pop and sub leave xchg jl sub xor xor mov daa fmul push movl shlb sti sub cli cwtl loopne repnz and sbb xchg pop insl sub mov dec pop pop in jae push outsb pop add cmpsb in shr sub bound loope jmp pop pusha push push cmpsb adc add push sahf add out or and insl lods fs pop rdtsc mov and or cmp popf mov pop pop dec pusha xor adc sbb push mov stc pushf dec fstpt xor sub ret cmp aaa push adc call xor ret imul nop ljmp adc mov pop push lods and movsl outsl nopl jnp dec cltd arpl push leave (bad) les fstps jg not and aas jmp ja add icebp add je adc pop push add sbb (bad) mov mov inc add out addb cmp sub pop test lahf push push popa pop and push aam pop addr16 sub xor jb rcll cmp xchg test (bad) in mov rcrl inc and imul adc pop cmpl or flds xchg jnp arpl mov mov in or cli jns add adcb or xor sub pop xor pusha aas fistpll or inc daa jg pop add rcr sahf lcall add std push push (bad) (bad) jo and (bad) cmp fdivr popf mov mov in gs adc push es dec add inc test pop aaa imul push sub aas shlb push leave out aad xor xor push fisub dec cmpsb push xchg sahf jmp xchg adc mov mov nop mov test pop pusha cwtl mov shll jb add push fsubs and jae not add out add jle popl dec std jae in cld pop sbb inc out int js je test pop xchg or loop movq or nop out loop jae adc adc bound sbb xor (bad) ja sub mov sarl in loope stc lods jmp or (bad) shrl add mov xor adcl pop push xor js add gs insl out cwtl sbb xor add mov and jge loop data16 or addl mov dec pop in push mov and mov aas mov xor mov mov and decl mov or stos pop xor pop pop aam pushf dec sbb nop mov adc sub mov pop scas icebp xchg (bad) jb addr16 add test pushf shlb out fadds (bad) lock jns or ret add (bad) lock jmp lds dec popf and pusha jnp xchg pop (bad) mov imul je loope sbb pop xchg lcall xchg mov mov scas fwait and xor pop popa test lds rorl mov int sub shll shll push es xor idivl mov adc stos pop sub cmp inc sub dec cmpsb mov dec (bad) hlt repnz xchg inc xchg pop ret jmp xor or inc sbb lds mov sbb push mov xor daa adc cltd adc mov pop dec pop pop add sub mov push stos divl cld or jbe adc mov inc adc into in push std test std push jg sbb xchg cmp and stos dec outsl data16 or gs push xchg cs ljmpw in and lret pop pop xchg add push push mov add pop xlat aas (bad) ja xchg (bad) sysenter add pop (bad) cltd xchg in jb rsqrtps or aas neg add fdivs mov pop or mov mov add pop lcall xor sbb push or pop in insb lds push loope int xor mov lds jmp pushf dec push pop movsb test mov hlt push (bad) lcall inc outsb loop movb in nop jbe (bad) shlb adc push adc imul cmc push jle adc xor lcall ror popa xor clc dec fstpl lahf jo movsb divl xchg lds in inc add daa inc adc dec mov leave enter or push int inc pop and sub pop jne jo out in aaa or sub or jecxz push icebp fcoml xlat outsl sub ja call out dec aas mov popf jmp pop xlat pop ret fs outsl lcall fimull scas cmpsb sub pop adc mov and rcrl movsb and (bad) push aaa jne pop pusha push sahf loop add jg andl adc pop jp xchg mov jns iret jne jg (bad) add jp loop popa ret fs xchg cltd sub scas sbb clc and test insl lcall push and ljmp sub adc mov mov pusha add sub imul mov pop xchg data16 out mov mov and mov add push rcrl mov jecxz xchg fld add (bad) iret xchg popa and leave rorb jmp pushf call out push push loop jmp inc (bad) sbb jg je push xchg add std mov jno inc mov std jp loope (bad) sbb aas mov and or add push outsl pop pusha out or jge flds insl dec push shlb adc rcrl mov xor int pop xor xor or out pop out inc in xor repnz nop lret mov add push sub mov rolb push outsb mov cmp dec loopne out xchg push sti nop leave add inc jge xchg push test jecxz (bad) test pop dec inc add or sub xchg xchg rcr pop ja dec push aas popa dec jge sbb dec dec pop fisttpl sub add xor mov push inc into mov inc cwtl fwait rcll xor jg out out test and cli les jle mov (bad) shrb sbb inc cmp ret fist sub or jle mov pusha push mov call in sarb or into repnz or xor dec lahf push imul int xor xor or aam push nop hlt mov xor jmp sub dec adc loopne pop and dec sbb shrb push lods jne add out dec fs pop cmp in mov add xchg add dec or mov mov lret dec push pusha vpshad or pop inc daa mov mov loope (bad) and push push pop pop addr16 jae push pop out neg aam dec pusha push loop xor and roll dec mov loope pop add xchg clc mov or inc pop js mov mov pop jb pop pushf arpl mov dec jp jmp add frstor mov cmp fcoml lahf jae jae je push mov mov insl xchg mov js inc sub push adc nop enter popf dec inc dec xchg lock or out out xor or add pop es enter fwait pop dec jl pop sub enter rep mov jne clc pop fldt adc lods nop mov in mov fstpl mov scas andb and ds mov sbb sbb mov popa (bad) push push outsb subb or ret rol xchg sbb add add cmp and xchg outsl fldl dec aas mov into sbb xor hlt add xor sub xor pop adc roll pop xor inc pusha pop pop jbe add push stos insb and jnp inc mov push call in rcrb push mov mov dec test mov jmp dec pushf dec daa insl inc inc push xchg stos jmp sub stos push fldenv lret (bad) jo mov pop push (bad) imul jns repnz in ret es pop pop sbb pop jmp add jmp cmp inc mov sub jnp adc cmc or (bad) push loopne sub push xchg ret bound dec add repnz dec jg dec and ret int dec dec dec add (bad) icebp test in and mov rcll jae lock pop sbb insl imull jmp pusha mov jne or xchg into push int3 sbb test sub inc addb jp jmp add jmp fistpl rolb push sub sub pop arpl dec ja loopne jge xor (bad) add sbb and outsb inc push and cmpsl push lods sub fsubrl shll dec lea push stos jo sahf mov add add pop sar test or jbe mov fldt push pop cs add inc aad add xor add cmp iret adc xor adc pop icebp sub mov iret pop pop jmp andl inc inc decl rcrl push rcrb pop out dec add aad mov cmp out (bad) divl cli movsl stos lea sub xchg add cwtl push add sub repnz jmp push dec sub ss sub (bad) movsb mov scas jnp mov xor add push sub mov fsub clc in mov mov mov lea loope inc or or mov sbb mov push mov addl push (bad) sub (bad) jmp sub push test jmp push xor push adc adcl push mov and wbinvd pop pop xor pop shl cwtl and cmc (bad) and push push jmp pop push jl lea xchg int3 dec sub js adc dec aaa mov es inc pop jecxz push push mov push lods mov cmpl cmpsb mov ja add sbb clc aaa and add adc call insb adc pop std cmp or mov ret xor or jge lods movsb loopne xchg fidivrl in add push push ja xchg dec push jne cmp push jmp dec pop data16 daa add es inc cmp popa push xor add sbb mov pushf mov pop je jae xchg cmp xor jae and cmp sub jmp mov ja dec inc add push int3 negb cs push movsb sub xchg dec shrl popl repnz cwtl xlat and add pop inc add sbb mov or jp sti sbb pop pop pop and jns or inc fs dec stos mov pop sub xor incl (bad) and push xor push and sub and rcrl xor dec inc mov add jb or or pop rolb pop ja sub iret dec and lcall sub or sbb sub push xor mov inc movsl pop add push push adc neg pushf xor and jle xchg pop aam add mov xchg add sbb dec cmp inc mov inc (bad) and jne sub add jmp sub ret pop aam arpl iret das gs cld mov movb aam add add and es mov (bad) fidivl jle xchg cwtl mov stos xchg rdtsc sub fs add insb daa lcall leave fstpl push mov xchg inc loop fdiv popa idivl xor sti sub jnp xchg sub pop test loope in pusha (bad) aam push sub or insl (bad) pop push dec popa xchg push fistl xchg jmp lret inc flds out fisttpll xlat mov popa aad fcmovb cmp pop cmp jae shr cwtl (bad) sub inc test mov cmp fild sarb dec jmp jne jp pop xor push jmp sbb inc push add push pop imul jmp cmpb jmp push clc push jge sahf iret sbb cmpsl je ds mov lcall pop cld aad jmp femms mov push cld or dec push aad jmp (bad) xor or jae in es cmpsl dec or cmpb sbb or pop outsl icebp and out dec mov dec pop cmp sub mov fldl add pop push in xor (bad) mov sbb imul xor dec add inc sbb dec mov iret or cmp xor inc or or jecxz test xor test ss push jge repz xchg sbb pop add sub push push sub push int mov (bad) pop iret or pop popf push test pop pop xor iret pop jbe jne jns fdivr pop sub lds jb std sbb mov or xor imul or syscall add pop adc (bad) jmp iret (bad) es jae sbb xchg push adc xor (bad) (bad) aam inc push shrb cmp test fcoms xor hlt add dec les movl jmp leave and jmp and ds test insl or rcrb mov or fidivl popa pushf inc jne xor aad jmp pushf mov das out push mov xor js lcall jge push or pop out mov rcrb mov xchg push xchg inc xor ret or fwait push dec pop xor add sti in js (bad) cmp pusha rcrb push shr or sub mov outsb shl or mov (bad) jbe sub inc xor sbb and cmpsb add sub add add push mov rorb sub inc or push test fildl rclb add dec and mov cmc clc inc add pop adc sbb cmpsb jge sbb std arpl jo addr16 xlat (bad) xchg out call dec xchg test lret mov mov mov lahf lea xor addr16 cmp mov push andl cld stos mov lcall and aam mov add pop adc sbb pusha cmpsb cmp cmpsl add lahf fisubl xor cmp lea mov mov cwtl scas jl inc loop inc push inc push sti mov pusha xchg xor imul fwait jns inc movsb push or shlb bound push add inc mov (bad) and scas adc das mov enter lea fldl sub mov mov push (bad) xlat loopw shlb push add sahf push sar add sub mov (bad) cld loop add sbb or pop notl or mov sbb add pop das inc nop stos sbb add adc test mov movsl xor jns jo or stos mov add add mov js add add push add out cmp popf mov pop sbb xor add add ret leave out xchg or addl js add in mov inc stos (bad) adc iret add xchg xorb icebp lods and mov dec jge cs lock sbb push movsb and add loope push loop dec mov xchg inc mov pop jmp mov (bad) inc and es scas loopne pop dec (bad) and push inc stos loope sarl or rep xchg sbb int repnz iret push rolb or jmp jecxz,pt add bnd decb call and testb popa jnp xchg test push mov and sarl (bad) roll clc pop dec test loopne ss inc and je sub in rolb ljmp add sbb add add and lods push xchg jne insb nop sub mov mov sti push loop dec stos jl sbb mov mov mov sbb lcall dec pushf lock jl je push in dec sbb adc and and mov inc notb (bad) xor xor and sarl push loopne les fs lea add mov jp sbb jne lahf pop push sub sub movsb rcl mov sbb pop lea (bad) cmc fs stos mov or sub adc sbb inc mov test jl push jle cmpsl add mov sbb xchg adc cmp test call ja push lcall or pop test pusha pusha or cmp loope xchg mov and add and imulb push or sbb nop xchg dec mov mov cmpsl cmp push add movsl add rorb hlt xchg sub in fistl out push sub mov inc ret dec stc and test push push jp loopne xor ja imul insl mov aam pop outsb push rorb cmp roll dec add repnz mov loopne inc fadds faddl shr (bad) cmp pop adc lock add inc je test cmpsb push push dec or loop push push rcrl cmp xor add sbb and stc mov add pushf push xlat rcll pop test push movsb and inc shlb jl mov sbb hlt push add lds (bad) mov dec cltd jne lea cmpsl xor and icebp mov les cltd push add inc cli or mov daa int repnz add aam jecxz fidivrl adc cs addl pop jo pop cmp stos xchg push mov mov out incb add xchg jnp cmp outsb cmc popa les push inc sub sbb adc cmp mov mov or dec dec js cld data16 sbb inc mov fdiv jo iret nop movsb add fwait lea in adc or jo and mov lret dec cmp hlt negl les add mov cmp inc loop jge out sbb cmp add movsb rorl add push insb loope sar test push push (bad) add lock roll and pop push xor inc aam sbb jae rcl xchg add les mov mov push add ret sub insb jo xor int pusha push jo sbb xor jecxz lock xchg repnz aam in adc mov sub aas or test xchg push xor popf into cmc add add ficompl rcrl sub or push aaa test popa mov xor (bad) shl clc mov add aas xchg js dec lock pusha stos pop ret push cmc lods cmp (bad) pusha xlat mov nop cld rcl xor mov arpl pusha popa sbb adc fsubl mov pop lcall mov rcrb or add cwtl mov out ret pop sbb loope add das into test inc xor aaa sbb dec fstl inc sbb xchg add call cwtl xchg add movsb mov add repnz sahf mov les or mov add cmp add dec cld mov aas add cmp in call push in add dec jecxz or mov loop mov lret mov cmp or mov add adc (bad) xor inc popa cmp mov insb stos mov or pop mov push lods call sbb and movsb and fwait mov push pop adc je inc jns adc dec xchg and fidivr jecxz pushf subb popf mov ds xchg pop std adc lcall inc dec add scas mov cmpsl aam or jl mov add and push test in sbb lods inc fsubl pusha and popa push aam std add adc inc xchg adc add fimull push lea lock cltd pop xor push ljmp cs xor sbbb mov stc arpl imul dec cmp sub xchg pusha or pop stos aas jge (bad) xchg dec mov xchg add xor and and rorb rcll and es mov fsubs lret mov test loope add outsl push push (bad) js loopne jns and sub jnp or mov push mov mov and je cmpsl push mov mov movsl pushf clc mov mov les leave out fstpl notl pusha pusha mov jne bound inc jo cmpb add jmp sub mov xchg mov orb out enter xlat and sub fcoms imul cmp enter pop pop in sbb (bad) and daa call int3 dec adc icebp mov push in ret lock xor enter aad push push repz rorb cmp mov (bad) adc shll xchg mov pop sub push les push xchg mov jp cld dec sub fdivrl les scas sbbb inc insl jp cmp sbb pop xor ret (bad) mov movsl sub mov and (bad) pop cmp mov pop lahf (bad) cmc mov stc mov sub mov cld fwait push adc inc dec mov or es das aam stos iret scas dec or sub les dec jle cwtl jl jno daa fcoml xchg and jo dec add out int3 adc sbb mov and mov cmp in arpl test push addb mov mov cmp dec and cwtl jne mov scas ljmp sahf nop mov test sub mov lea pop dec push xor scas adc push add cmp xchg call jl push cmp psllq cmpsl (bad) xchg inc ret fs mov add push fist sub and mov adc mov add and add dec push xor sbb mov mov inc xchg jnp add pop pop les add movsb push xlat iret xor xor pushaw mov add adc jno imul jno add pop adc or leave (bad) ds inc notb shlb jo add icebp ds adc sbb cs or andb jns jo call fwait push xor push adc xor imul fstps adc rdpmc add cmpsl mov xchg push bound ret divb or clc fildl add jp cwtl add jbe (bad) jmp test lods sub es sub bound mov xlat movsb xchg sbb call adc (bad) fadd adc mov lea (bad) push mov mov add (bad) out jns pusha clc mov xor js mov and dec or pop in xor sbb pop lods pop inc pop divb mov pop aam fdiv adcb add add jo adc pushf es mov dec inc cltd insb cmp ret pop stos pop dec and je xchg dec xorl and jns jle add into adcb rorl jbe inc das sbb icebp aad rorb stos lahf jmp mov lods cmp clc mov or cmpsl out sub dec fsubrs rcr adc lods lock in push popf movsb and int (bad) hlt adc sbb cs jo and sub cmc loopne popf xor xorb mov cmp adc adc push and mov xor lods xchg out popa insb enter aad clc dec mov pop lods mov pusha ljmp ret ror rclb ds scas test fwait lods add jp sti js je xor jnp dec push rolb cmp enter xchg rol nop mov (bad) xor adc hlt jo adc pop loopne je add (bad) and fsubrs pop (bad) nop js cmp fcoml xor mov and loop pusha enter or hlt fwait data16 call iret cwtl jecxz mov mov pop add fsts mov mov or add cli inc or xor fwait add dec cwtl xor mov int3 repnz mov and pop cmpsl jns daa mov jl adc xor and cmp inc call sbb or push insb and push add pop fisubrl das dec mov add push loopne dec sbb (bad) sub sub pop sbb shlb pushf dec add cmp sbb inc mov inc and add mov aad test push aas add cli dec cwtl rorb or jo adc adc dec and shrb add mov push addr16 in inc jae dec inc mov loopne adc out mov dec push inc pop add sbb adc cwtl imul rcrl jmp stos clc fxch sbb dec lock rolb gs mov or test sbb aam mov or fdivp mov hlt cmp mov dec loopne mov and mov mov lret push and jecxz (bad) in add imul fldenv sub push push xor jp inc aam mov int3 and inc pop xchg shrb mov xor arpl in gs xchg test (bad) sbb das jne sub inc cmc fldenv dec fsubs mov inc dec in xchg lock add inc fistpl inc test loope mov add sahf bound js dec sub add pavgw push cmc mov adc inc mov ret mov mov in push imul cwtl iret sbb mov pop sbb adc add inc xchg xor xchg sub pop jns mov xor (bad) jl ss push daa in int cmpsl shrb cs or outsl or enter loopne pop cmc add scas hlt clc inc ja inc fstps push xor inc mov rorb inc sub add fs push add jnp mov sarb xor or mov adcb ret cmp mov add cmpsl xor idivl fmulp mov enter xlat icebp movsl imul aam add das pop jg pusha xchg fwait hlt jnp sbb stc out dec inc pop cmp out add mov bound in push mov cmp or aaa ds cmp shlb out xchg addb sbb add ja xor jo scas pop js outsb cmp (bad) mov add mov push or jno dec rcr fdivrs loope dec adc adc xor jmp cmp push fdivr nop jl iret adc xchg mov xchg test test das cmp lods jp je sbb test mov and or xorb notl and (bad) mov cmp jp inc and hlt xchg rdtsc xchg sub push cmp (bad) pop sbb popf add sub push sbb ja das in mov imul dec das pop sub mov push stos dec roll shl mov (bad) pop xor popf xor jne pop pop test (bad) rclb mov jne and paddw lods add or or les push cmpsl je pop imul lahf jl inc dec xorl insb clc xchg push adc push pop dec call in mov mov cmp cwtl push ja mov int les adc or pop inc lea add push sub es int3 loopne cmp xchg mov add aaa jl mov sahf and (bad) outsb and es add fadd sub stos pop enter addr16 mov cmp adc mov xchg pop sarb fsubrl ret les cmp jge ret mov lcall and iret rclb add in sbb movsl lea rorb mov add insb sbb add lock or sub inc xchg mov test gs pusha inc loope inc sbb push inc pop mov sub fs sub xor movsb add cwtl popa dec (bad) lahf add int inc push add cli jno in add and dec pop pop push andb ds pop or pop imul cwtl fdivrs push jmp test outsl pushf fs aam adc mov aam mov cmpsl ljmp shr or add sbb cmp movsb les fcmovnb xor sub jb stc xchg sub pop hlt nop push test in orb in or mov pop clc fcomps inc cmp dec xor mov and std ficompl movsl lods mov xchg mov sub clc sbb fadds cmp xlat xchg cs sub or add cmp add jae sub push add mov dec lock or mov and into dec mov out (bad) dec and mov push loopne sbb cltd add ss (bad) jbe xor pop xor je lds pusha add adc enter jae add push gs inc cbtw inc mov mov shrd jle and adc scas stos orl mov push add or mull sbb sub icebp and test jl dec pop nop xchg push test into pusha cmpb adc sbb fs xor leave cltd pop ret jae push aad inc mov jo lods dec adc loop xor inc int std nop pop push mov dec mov or es sbb mov mov dec daa sub hlt adc add push add and stc dec cmp adc mov and push movsb call test lods xchg in push aas add enter add mov (bad) hlt and add add add mov dec add fmul js (bad) nop sbb shlb cwtl add mov mov add xchg dec fsub push test loop and repz lahf inc outsl shrl add enter dec sbb pushf add mov in pop pop adc mov clc xor adc mov cmp or mov sub mov cli mov pusha fiadd inc inc add sub in mov xor mov rolb aam leave sub or cmp inc pushf rcrb aas push and add inc std (bad) push xchg xor loopne hlt xchg out or cmp jo sbb push adc add mov adc cmpsb add aaa cwtl popa sbb lods aam icebp fwait push adc add aaa pop xor add xchg sbbl dec push mov mov dec and popf stc push or retw inc sbb and and rorb adc dec mov je add cmp or movsl mov mov dec jmp addr16 add inc sub (bad) roll insl pop dec nop sub sub sub sub cmp lret push pop (bad) lret mov mov ret daa mov push sbb mov loopne outsl sbb add popa push xor out negl into push or dec and inc out jno and sub mov out mov or and push fsubs xchg fadds imul nop xchg add mov jo inc jo adc cltd arpl fisub ret push or and sahf adc xlat mov mov test jl mov mov or int or push mov leave lods add mov aaa dec daa imul enter inc inc cmp xor mov nop les xchg pop lret rcll mov or mov cmp mov sub ss cmp jb dec cmc xor dec jecxz (bad) js inc outsb imul ds xchg orl ret ljmp mov add mov movsl and push les adc xor lock pop (bad) xchg add cltd jmp add push shrl nop stos (bad) sbb dec mov enter outsl lahf xchg es and insb sqrtsd rcl and mov and loopne out xchg fistp cmc popf sbbl mov lock mov dec ljmp (bad) and pop cmp int3 (bad) mov inc mov mov lcall aas lret push cmp mov mov cltd cmp jo pop mov fwait pop xor adc fbld inc jae pop jg in cmp fdivr ja shll sarl js adc add rcr jmp add pop in add inc jge mov test adc cwtl je or (bad) sub dec hlt jo add shll push cld sbb orb pop fiaddl fnstcw les in xor out push jns mov cmpb mov mov stos sbb adc aaa fadds sbb js add sub add std pop into mov das aad mov sahf nop sub pushf bsf mov cmp pop mov cwtl mov sbb or pushf ja pusha pop cmp adc rolb add les and inc xchg or mov movsb jb xor sahf bound enter add pushf (bad) decl push cmp jb add movl adc rsqrtps test mov add lahf iret in inc daa mov fcmovnbe pop in xchg (bad) cmc sarb xlat xchg dec xor (bad) xchg inc rol ret data16 sub in jb pop mov repnz push or mov xor and mov aas xor pop xor hlt ret add jecxz fldt xor or sbb cmp int3 xchg cmp push cmpb jl inc push mov movups out add or push or jns test rcrb xor dec bound lea push sub pop adc dec sub dec lods insb add jle and jecxz ret and daa or fldl mov mov nop adc mov add sub dec rcrb js cmpsb push push xor xchg inc (bad) stc pop xchg ss adc jns dec mov loopne sub push mov sti push in or sbb push pushf sbb stc es sub jne mov or adc movsl fildl flds jmp pop lea movsl nop sub cmc cld jo and je nop ljmp mov fs fcompl add inc ret rclb mov nop cmp (bad) pop pushf or mov bound mov aaa and or insl add leave pop lds std jno outsb adcb fcompl pop test sub imul inc sub mov insb add lahf cmp xor pop cmp mov cld cmp subb gs out lds loope push adcl fisub ja stos das sbb int cmp sub lds cmp sbb xor das inc or adc pshufw lea inc jp jno add das lods rol lahf add mov jge sbb leave std cld xchg xchg push push mov inc adc arpl repnz test or jnp dec xorb fnop adc cmp ret jl into popf inc aam in dec jp jno pop fnstcw stos dec sub push aaa xor add outsl cmpsl push (bad) std (bad) xor call mov ret mov inc xchg into movsb add mov std popa sbb cmc cld mov je push xlat (bad) faddp cmpsl mov fistp clc pop xchg cmp adc (bad) loopne and xor and and dec test add mov ja or cmc xor or (bad) pusha add xor pop adc mov push push leave adc xchg lock popa cwtl add mov adc or fs ljmp es dec fadds or ss xchg add pop add loopne cmp xchg mov cmp pop ret jo test push jl push jg dec add ret movsl mov js mov and pusha inc mov pop push popa jmp in inc jns (bad) jbe inc jle push orb scas test cmp fst and inc or (bad) aaa rclb fistpl mov divl arpl dec push sbb cwtl rolb outsb sub add cmp cmpsb test sub in fmuls xchg add push pop testb xor js dec sti inc push xorl lret call (bad) mov (bad) bndstx pop xor inc cmp or (bad) lahf dec test mov push push test jb sbb out sub inc pusha mov aas add adc inc add fidiv aam add and lds cs sub mov cld in roll ss inc fmul scas mov push in add call es dec daa hlt xor out movsb mov mov and add mov out lods push jmp test inc sbb andl adc mov push jo mov mov js sub lods jne inc es inc pop iret fmulp add cmpl mov lock popa xor bound clc inc sbb mov or xor fmulp or (bad) add shrb mov mov add pop sub lock mov popa (bad) mov outsb add mov push mov call popf and sbb lods sbb cmp jne ret sbb inc push and enter dec fwait cmp inc stos mov adc lock daa xor xchg lock push mov lock shrb test or shrb mov adc daa sub stos mov adc mov push call and pop mov push push rcrb add add in push sub arpl rcr mov lds sub lods es push insb push insb rclb sbb je mov lcall (bad) sbb sub sub or (bad) jle enter fcoms cmp mov cld add loope and xchg lret pop outsl mov int pop lods or xor push inc sub mov xchg jg mov aam dec nop pushf pop push jns orb pusha out andb mov scas and push call xor loopne shrb dec adc or out jmp dec mov stos or push enter push dec scas fistl dec sub pushf nop in loop push test ss shlb xor loopne add nop jo in and and and pop and jno inc cmc jg aad pop sbb inc or stos arpl and data16 sahf (bad) xor or divb cld (bad) divb fsubl pop sbb inc jno push add push pop shrb data16 cmp out add adc sbb push push psubsw out call push jnp cwtl and xchg and sbb and push xor inc inc jns or ret push mov or jne into or push pusha insl test fsts ret ja and fstpt mov add popa std iret cmpsl sub test or mov loopne mov (bad) aas idivb (bad) push xchg push lock das mov pusha add jmp je xlat aam mov mov lds mov loopne inc xchg es vcvttsd2si fs and add or data16 push sbb call pop jmp mov imul sub pop lds adc xor sbb call mov xchg pop jo and das ss rolb add push enter add popa mov push dec or sub pop in pop bound xlat pop in popf inc leave push sbb sub cmp and inc dec dec xor es cld push add lock and lret sub pop es mov mov gs and mov sub xor repnz jl pushl and xor jge jp pusha or dec pusha add subl or xchg mov mov push xor xor jmp inc jns std stc xchg inc loopne jge cmpsl jb lret xor sub sub clc add jecxz es sub scas and pop (bad) aam jae enter scas xchg xor inc cmp mov popa arpl sub enter and in popa rcr mov push cmp xor pop call jecxz insl cmp push cltd sub or sub mov and ds hlt je ljmp je sub sbb pop push xchg aas xchg add mov cmc inc xor add push sub mov dec add xor dec adc dec fstl or movsb inc sub test (bad) pop je enter bound fadd daa push (bad) or adc adc jo mov add xor fprem pop cltd js pop mov adc mov call test jae (bad) xor sbb and ret dec std dec movsb pop mov mov xchg fnop and cmp jns pop lds or es sub mov sarb pop (bad) mov insb sub test pop sbb lahf pop sub mov mov iret lcall and stos add lock jecxz dec dec or loop int3 popf xchg pushf js (bad) in adc pushf pop pop xor aam dec fiaddl pop xlat mov xchg into cs shr push movsb and sbbl sub call leave mov fcmovne push int3 and pop aas in clc lods stos pop pusha cmp sbb (bad) fwait jae sub inc bound shr add rorb loopne add (bad) mov dec pop (bad) dec pop dec and stos add int jl mov adc test sub das sbb adc js adc int3 mov push push sbb mov sbb mov dec mov mov push xchg std xlat aas cmpsl test push shlb rorl roll xor out jl add sub jno out dec js push insb jp int3 adc in mov cmp cld jae adc mov sub sub mov addb add dec add mov roll vcmpss and (bad) and xchg rorl sub sbbb movsb push lea mov test dec sbb dec mov xor inc push or pop jmp call mov adc inc fildl and int dec pusha and adc shll daa mov mov rorb inc or cmp pushf fcoml popf xchg je sub xchg push mov jle pop je adc bound fwait or or jecxz cs or push dec or adc test jle and mov cmp dec les push imul pop push mov jb sub les in rclb mov mov pusha ja jmp cmp fiaddl jl push fisttpll test and lcall xchg mov nop add mov popl mov nop fiaddl lea sbb and and (bad) outsl scas mov fbstp adc pop inc mov adc out sti rolb (bad) sbb test subb inc sbb in xchg in inc add cld pusha sub adc adc cmp mov cmp push dec pop int adc xchg mov hlt inc jns cld xchg jle inc das sarl sub xchg sub add pop in int3 cmpsl xchg sub dec inc push popa and ja pusha cmp mov jl fs shr pushf dec adc cwtl int3 dec cmpsb adc xor or xlat dec test roll rorl pop xchg dec pop orb cmp cmpl rorb mov ja sbb faddl dec pop push sub in add add ja addl and loope jle int adc lds xchg shrb insb pop jl add movsl cmp pushf xchg push icebp (bad) xor iret pop mov adc mov add bound clc out int3 stc pop mov mov outsl dec stos mov mov outsb mov cmpsb lods (bad) enter fwait or in add jno in mov mov lods dec xor mov lret das and dec movsl lock inc cli (bad) int3 push push fsubl xor cmpsb xchg push shrb dec xchg nop cmpb jbe mov push adc pop and js data16 mov adc adc mov fs rolb mov sbb test sub add ds pop daa lock daa xchg movsl sub faddl es lods sbb aas mov dec lock xchg mov fsubs jle sub pop sbb cld push mov movsb inc movsb mov pop cwtl xchg js dec out int3 dec mov pop add rcl mov je mov and add or mov mov or add and sbb stos cld xchg add sub in cmpsb call nop test data16 or cmp in sub or xor cmp daa push pop shrb inc std mov cmp lods push mov fmull jae adc xchg jbe xchg or mov push cltd adc cmp sub sahf roll fldenv int3 add repz adc inc cmp std push mov fmulp cmp leave sbb aam enter or sbb flds test stos jl push sub jnp movsb and add es add sti aam mov cmpsl dec xchg mov les rcrl jns add push imul adc fsubs adc fistl popa nop movsb popf adc or add std sbb or rolb ror push sub adc push add nop jnp test sbb lahf or jns (bad) lcall mov xor dec pop bound jp or xor movsb les jno les pop stc cli add or cmpsb sarl cmp std aad cmpsl mov inc call scas fwait out add ss sub and and xchg lds adc lods icebp jo xor xor in rclb test push adc sub and jo call fs hlt sub int or pushf (bad) testl icebp insl adc adc mov jbe xor rorb hlt add cmpsl test jbe dec or sub add push clc popa xor nop cwtl ds pop add cmc shr cmp nop pop cs enter push xor push aas dec xchg add mov jo lock dec ret or nop aad (bad) push mov add (bad) mov in dec fisub and ret sub mov loopne or sub outsb rorb or js push push les cltd cmp adc lds mov cmp sub repnz in inc fbstp mov shll lret cmp xchg movb xchg rcrl shll fisttpl (bad) push xchg clc dec mov push aas pushf test adc in mov repz sub rclb les inc or mov dec and add dec stos mov or (bad) ss xor push add sub xor bound adc push in movsl and and test popf stos mov mov insb stos jb dec in push push test (bad) mov and imul mov faddp xchg lcall (bad) clc xor inc aam (bad) out pop mov pop jnp in sub das loope jl pop mov dec dec cwtl mov cltd enter mov jg lahf mov arpl mov and mov out xchg xchg mov aam xor test push jno sub mov sub mov mov and lods test rcrb popf sub or pusha aam push call pop mov jp jae add fist xor rcll add add in adc (bad) mov fildl inc jmp iret push or imul call and js add fnop sbbl (bad) mov cmpsl add cvtps2pd es call add dec int loope mov lock fcoml pop mov mov push sub test sub fs push ss loope int3 pop in (bad) orl cld pop jb and rclb data16 adc xor int3 xor inc and lahf cmp repnz push fimull fisub pop daa test inc inc add and out mov adc mov (bad) test jb dec and int3 mov mov push mov nop push cmp sbb lods fsubs fnstenv adc into adc (bad) insb xchg jbe push pop pushf inc pop mov dec fldt xchg and pop loope dec pop cmpb popf imul mov sbb or (bad) call or sti sbb movsb push lret addr16 cwtl add sbb sub pop outsl das inc js sub rcl lods mov and mov and mov and or inc adc xor or cwtl add jns es mov outsl fwait and (bad) xchg lds out adc rcrl mov or (bad) sub (bad) or push xor testb and insb mov leave int3 iretw xchg mov sub movsl jae dec jno imul std dec pusha pop pop mov pop xchg mov dec inc jl test push xor fnstenv sbb rcr (bad) pop mov dec xor or ret popa loopne cld jmp cltd shrl fimul mov pop ficom add hlt roll les ret subl test add aam inc mov hlt cmp jb out and cwtl pop clc pop cmp je movsb cmp pop out (bad) out pushf sbb notl cwtl cmp je or and inc popa jnp mov sub lock pop jnp cmp jl mov pop cld roll movsb sbb andb adcb xchg xor fimull and adc cmpsb pop and (bad) mov mov shrl mov mov mov add pop and add mov rorl cmp mov sbbl jecxz leave mov jle push loop push enter and dec pop leave ret cmc (bad) lock icebp jne add rorb ja cmp pop dec add ret pop ficoml data16 jp lret xchg (bad) hlt ljmp cpuid les outsb ror fwait mov imulb fwait inc pop je pusha mov pushf sarl outsb test xor hlt arpl mov pop adc sub add std and insb lahf idivl aas mov xchg dec xor sub mov sbb insb enter adc call mov mov loop adcb (bad) decb push ljmp add shr iret mov clc xchg (bad) sbb stos mov ds mov testb jle outsb push je cmpb (bad) jmp adc das shlb (bad) aam mov mov outsb lret pop adc inc xor xchg daa mov add dec mov add gs mov loop addl mov pop (bad) sub les and mov arpl call out or cltd js aaa adc cltd mov (bad) cmpsb (bad) mov xor clc add outsl movsl mov inc hlt enter inc ret xorb js and loop and add cmpsb mov out lret mov xor test (bad) sub lods push shld mov int popf lcall inc sbbb inc je popa and fcmovb jmp dec lahf mov in lcall ds js adc fwait popa faddl lods dec sti cmc (bad) xor cwtl push mov loop stos pop inc cmp add inc mov mov push outsb pusha mov dec mov or mov fwait lea adc xor or (bad) xlat mov aad (bad) out mov aam jmp mov repz inc cmp push iret cmpsb and and stos pushf sub mov xor push mov adc punpckldq ficompl xor cmp add pop xlat incb mov mov adc (bad) scas stc mov cltd test xchg clc add outsl jmp repz mov adc notb push lahf xor aad cmc int mov mov lcall cwtl mov xor movsb and add dec dec or jno ss mov aam push xor hlt leave icebp out test and jecxz in call inc jl ja pusha movsl xor insl jns or sbbl add cli cmp add (bad) pop pop push xor cmp mov fwait push (bad) dec push shlb sbb sub xor aas add or lods icebp adc js sub xchg test add sbbl or or popf movsb fcomp ret les or loope mov mov out call push aas nop cltd test sbb inc enter fwait add or pushf push je mov xchg mov (bad) cld push push add lahf mov xlat fdivl lcall jg (bad) mov inc pushf sbb cwtl cmp mov je or nop rcrl sbb into push jno iret sbb (bad) dec out addb mov add ret nop mov xorb mov and cltd xor out pop pop or into add adc push insb add pop mov jbe test xor fadds in lret test dec outsb test inc push js mov xchg adc outsl mov mov mov insb mov loopne dec popf sbb add loopne xchg and push andb or pop dec adc neg loope dec adcb dec test adc nop jl xchg add fidivrl (bad) dec leave mov fs jp add aas fnsave and nop movsb xor push imul in jo cli add insl push jno lds adc dec dec jae nop jge add push and insl mov pop cmc mov repnz rcr pop cmp ja and test or add mov cwtl mov mov shlb fmulp js clc (bad) arpl mov pop fistpll and inc sub addb inc cmp sub adc in cmc jl mov inc shrd add dec push std test loopne int3 cmp or mov xchg push mov clc test (bad) mov leave dec add or hlt rcll xchg dec push leave repz xor push or outsl mov pushf inc mov or int3 mov or push mov xor mov xchg outsb mov inc shrb jl invd push (bad) int3 pop frndint test mov xchg jnp xor sub sub push fcomps or (bad) pop mov or xchg or sahf mov movsb add je test (bad) add mov xchg push insb inc jnp jns mov test pop xor xchg adc push mov fwait inc xor xchg xlat push and outsb lgdtl daa test movb popf sbb (bad) jae das and inc sbb test cmp jae pop xor push adc call cld sbb mov and int3 insb push mov or xor mov loop movsl and stos or mov loope add mov adc xchg dec test inc sbb adc pop loopne add js ds xchg pusha idivb pushf xchg in (bad) je or dec cli sahf js xor mov pop imul outsb movsl mov mov xchg push add sbb dec add inc cmpsl mov jo ret add jg lods out xchg test shl enter xor fiadd scas subl fsubrs or inc pop scas mov inc add movsb adc dec sub loopne mov or or movb aas cmp aad xor sub xchg xchg push inc mov les mov dec inc fmul aaa mov jb adc lea push mov add cmpsb pop mov adc mov mov jecxz dec or xor and mov push push and pop je add nop lods test shrb jno aad (bad) int3 mov xor loope add jo pop xchg bound iret call test add xchg pop xor pusha outsl or popl loope aaa out xchg loope jns and mov add pop mov xchg icebp jmp and push nop popf xchg dec enter mov pop jge mov xor in sbb mov push xor mov and or inc shr in js mov fsubs lock jmp loop out test fildl js dec and add repz mov sbb je pop aam les xor fwait out les inc int3 inc testb mov bound shrb mov lea mov pop js mov fwait dec nop add xor push scas push test test add test ficom cmp lods mulb xor ds inc dec lds mov daa test je mov frstor dec add clc movsl cli mov add cmpsb and mov push xlat in outsl les enter out call mov xadd roll mov mov dec bound mov pop add inc mov mov je loope add adc inc setno rcrl popa xchg rorl xor sub psubb add jo xor pop movsl jns ds inc add jl push mov cmp push inc lcall mov loop adc pop mov push mov test push or rclb cltd sbb dec aaa inc popf xchg cmp inc dec cmp rcrl lds fdivr or lods loopne add add sub rcrb add xor out dec xchg push popa mov inc fcomps js es int pop add icebp mov sbbb inc or fistl cmp cmp mov cmpb sahf mov sbb pop jo,pt les jecxz adcl or inc and adc adc lock enter sbb sbb lea out pop add cmc dec cld jb or in dec lret test cmc inc push subb add es loopne jmp pop loope cmp mov (bad) dec ss pop mov movsb cmp mov pop add pop mov xchg dec adc pop adc insb pop cmp or iret push add hlt in add les push mov imul in rcrb inc fsub push mov aad mov mov cltd push jne add mov push xor xchg fadds dec dec fiaddl bound (bad) enter xor sub mov lods and xchg cwtl int3 fcmovb xor mov sahf testl in incb add mov mov mov pop cltd add inc or xchg mov mov movsb dec popf inc mov lret cmpsb loop adc ret xor add test mov sub cwtl lds ret addl mov mov adc mov add out fs inc inc mov fimul imul arpl cwtl mov xor test xchg inc add cmp jne add lcall xchg jp sbb add pop push sar insl leave mov sub mov inc lods xor (bad) hlt or xchg lods pusha dec lcall les incl or ret mov ret mov xchg pop xor cmp je pop imul jno push testb cmp outsb stos lcall or lods (bad) mov and push das sub and arpl or add orl jns jo xchg cli sbb das js push cltd dec adc fcoml sub (bad) push inc cmp sub mov cmp pop mov jecxz rorl inc dec xchg clc jge cmp int cmp mov sbb push inc incl mov pop outsb add sarb pop mov add sub push dec add mov sub mov call stos pop adcb ds sarb in add xor add jne rcll add pop cmp add lcall icebp add mov add int3 or lret jmp mov mov add cmp shll jo xor add imul out shll add ret push fdivrs mov cmp and push pop cmc adc add cmpsb ljmp pusha xchg call inc ds testl sbb lods pop cli sub mov push push push and (bad) in xchg jge js xor mov popa int3 cmp and out aas dec insl cmp pusha rclb lods jnp fild or pop (bad) (bad) ljmp mov add addr16 add sbb insb rcrb repnz mov mov mov jle add xchg mov cmpsb cmp add in dec pushf stos mov adc lock addl sub mov enter (bad) sub or cmp out dec pop cmpl pop repz ds in cmp fiadd mov adcl (bad) ds int or push jno and bound sbb in push add inc add cld fcompl data16 or mov inc sub lea push out pop in mov mov sti lea aas push adc hlt pop add pop adc add ds out in faddl xchg test jecxz js xchg cmpsl cmc sarb adc adc ss adc aam (bad) nop cmp hlt adc movq (bad) loope adc mov or out or ljmp and and frstor lods mov inc shl dec mov push ret cmp leave in xor fdivs dec (bad) or insl sbb pop sbb fbstp rclb add and ret aaa sbb dec jno push push mov outsb rcll xchg mov sbb sbb mov cld add xchg jb xor xor inc subb push mov out test adc in cli add mov movsb add pop outsb dec adc pop cs sbb xchg inc stc or sub add xchg and cmp icebp loop sbb mov je and pop add div and sti sbb out xor pop inc nop les push pushf jo sarb loope cmpb inc or into dec mov and or mov imul les rcrb or add and dec pop and cld sub mov and test sbb popl xchg add mov insl mov and pushf stos mov cmp insb sbb pop cmc aaa and pop xor jae add cmp popa cmc add loopne icebp cmp jl out push push xchg push cmpl movsb pushf sub push or add pop and inc je add int3 pushf jg test mov dec scas jbe sbb and xor inc icebp xorb sbb and loop mov cmpl cmp cmp or pop add or push mov enter adcl xchg mov jb push sub mov jne pop sub dec xchg push mov jmp inc mov pop push sbb cmp jae cmp rclb shlb ret mov cmp stos jbe and sub xchg fiaddl gs and or cmp add jb call aad and push add and mov lcall or loope jg int3 fs lods ud2 scas sbb fsts movsb (bad) movsb add das or mov dec mov (bad) cli xchg sbb jbe sub loopne andl sbb lcall pop int3 (bad) repnz add mov ja mov jnp sub mov rorb jno cld dec pop adc (bad) popfw out data16 inc push mov mov jecxz pop dec es dec sahf mov push mov push shr and inc andl call adc imull xor xor fidivrl jb and push jmp in mov hlt xorl retw (bad) pop push sub int3 inc lahf fcoml jae pcmpeqw mov or pop add (bad) incb and adc lods testb in dec ja pop repnz pusha xor xor or add cmpps mov pushf add gs jl test jp mov or push nop (bad) shll sbb dec xor call ret movsb outsb inc test mov jb or adc int3 shll push sbb push (bad) push dec cmp mov push (bad) xor in inc xchg xor adc jae fs lds sub push add repz xchg test push gs xchg aad mov jbe inc push xor xchg push stos incl xchg add sub cmpsl (bad) rolb lcall les inc dec dec cmp addb das push arpl sbb or call pop mov ficom xchg test sub cmpsl pop xor jcxz loope loop,pt nop (bad) jno sub lea adc add popf dec and push sub in rcrl xchg in xchg pop sti dec jo popw pop or (bad) mov sub sbb ja call adc push aas lea xor inc movsl enter addb xor push in dec dec adc cmpsb aas xor sbb mov movhps arpl sub xchg fadds (bad) cli mov adc loopne test das int3 and xor push ja push add mov xor push pop fmuls and pop dec inc push push addr16 inc mull insb decb clc xor push mov mov loop js xchg movsb bound call sbb pusha call dec std pop inc sbb clc or aad xchg sbb cwtl pusha adc cmp es mov inc push mov int3 dec test add cmc fs push inc test lock mov push dec sub push es mov clc repnz mov mov push cmp add enter or adc push sbb out (bad) test pop cmp push imul mov and lret notb insb adc ss jmp scas rclb xchg xor stos add js mov push sub out xor es pusha sbb xor repnz cwtl int call shl cmp shlb adc add pop iret mov cwtl mov js xchg jmp in push dec call inc lahf push jbe inc add in lods iret inc push stos mov mov aas in pop imul and insl pop in pop and dec (bad) or xchg push rolb jb movsb xor cwtl mov sbb psubd add push outsb imul mov mov pop dec and sub xchg xor adc addr16 mov sbb pop adc mov icebp sub pop push int3 push xchg push sbb push out rorb popa loope jg shlb sub add dec xlat pop pop push sub stc test js inc add jle xor cmp leave sub and cmc cwtl push inc aas sbb push adc pusha sub pusha add call xor mov aas fwait aaa or xor sbb sbbl scas std lods fsubl pop test add lret jl mov mov aas jb push jno (bad) les push push xor repz add (bad) jge lods dec leave mov mov je mov push test aad js addps js es inc xchg add push sbb jns fidivl ljmp pushf outsl iret xor pushf xor jle sbb add or mov pusha call pop aas and mov dec pusha xor cwtl popa inc repnz xor pop xor test mov mov outsb lods pop sub icebp bound or rcrb ficomp add adc roll xchg adc addb pusha (bad) and mov adc out adc inc mov lods aas stos popf sub cmp enter cwtl (bad) icebp inc push test mov adc bound cmp xor jecxz mov mov sti shr mov hlt dec pop movsb sbb mov xor adc add cli or sub out lock in jb pop aas add scas xor mov mov push pop dec and (bad) enter pop outsl xchg loope pop pop cwtl (bad) aam int3 adc pusha and test in lods lret sbb inc pop fcoms sbb jne sti xorb sarb dec xchg jl insb mov nop stos sbb cmp mov imul cmp xor inc pusha test cmpsb xor push gs test xchg pop pop jno addr16 inc negl jle mov mov mov adc sub bnd subb dec adc pop jno dec and mov and ja add xchg jns mov adc inc add je mov and sub cmp addb int3 jecxz movsb xchg sub insl sub xor add lret rorb nop outsl push jae jnp loopne int3 es push add cmc or and mov psubusb cwtl js jns push sub cltd fcoml sar pop sub or push loopne js lods bswap or push push adc add sbb xor test dec (bad) dec (bad) pusha mov mov or stc xor jns call push gs rcr int3 and jae push mov add sbb iret mov dec jb movsb bound in mov add lret adc cli sub sub mov ja fsubrs stos mov out faddl and mov test (bad) popa inc cwtl nop dec (bad) sub ret mov adc fs add xlat xchg jmp inc mov push pop je pop cmp (bad) mov or loop je or rcrl fs jg dec push in add test or je jl add mov pop sbb jg (bad) mov adc add sbb fucomi mov or cmp add xchg or sbb sbb or pushf adc dec add inc pop mov dec sahf inc jg shll in jl cmp jge dec pop adc mov nop rclb stc and xchg test dec lock cmp xchg adc test (bad) xlat repz fisttpl add sarl and xor testl sahf cmp cli inc add dec cmc sbb push cmp push repnz js punpcklbw rorb out jl scas push arpl outsb pusha popa out or pusha mov push or add push jne xchg lcall aas mov test xor repnz dec cmp (bad) dec and je mov mov push adc mov out sbb int3 adc add and xor ret fwait jae daa loop and adc and jmp mov add xlat enter rclb pop sbb inc stc lods inc fstpt fnstenv ss and pop adc pop add jl les ret push insb dec enter xlat inc push sbb jae or ljmp fbld mov xor out imul popa cmpsl push cmc scas sub and sbb cmp cwtl push push sub js es push fmul daa xchg cmp xor test xor fdivrs adc sub adc dec dec outsb andb jb or aam inc sbbl ja std aas (bad) fnstcw mov test in sbb pop or icebp dec in add sti mov mov xorb xor dec js test cld sub icebp or and xlat and or and gs mov addr16 pop and fwait stos xor jns sub ficom out push and repz cmc and nop sbb mov mov mov cmp test cs ds lahf jne addl outsb cmc and xchg xorl pushf fimul in lods inc sbb js sbb dec pop cs inc fdivr or add mov mov dec in and ja popf mov call add clc dec call movzbl insl sbb and mov adc xchg lds int3 cwtl lods mov xlat add stos adc icebp sbb mov testl (bad) xchg int inc hlt rol pop decb pop add imul mov push (bad) push test inc push loop cmp xor adc xchg lods add stc mov push out repnz cmp cmp sub aaa (bad) sti mov out xor cmp mov or ret fdivs pop dec and jle add push data16 inc cmp nop jle inc push pushf cmp or and rclb dec stc nop push dec dec mov movsl fwait rorl in sub ret add in rolb js daa jno,pt mov or push push inc pop je xchg sbb scas or and mov les sub inc inc test pop pop sub (bad) push adc xchg push jbe cmp jo insb nop into jbe add ficom cmp or add and xchg es inc cmc enter rcl movsl dec xchg pop cmpsb aad lcall push jo test pop mov xorb and sub pusha adc fdivs xor xor pop mov nop fs mov je mov inc mov fldcw lock enter in mov jl icebp rorl in pop jge mov inc cld jne sub ljmp add repnz add sbb xchg (bad) cli inc push lcall andb adc sub adc (bad) out mov mov inc xchg jecxz or and fisttpll testb fisub (bad) mov pop iret xlat inc repz or imul lret movsb addb rclb xchg imul xchg adc lds das jg incl add push cmp setle add sbb xchg (bad) xor adc leave rolb popa cs xchg dec pop xchg push loop das shlb pop xrelease pop sbb sub fdiv pushl orl sub pusha insb repnz shlb and inc inc sub add stos leave test mov pop add nop loope rcrb mov cmp adc cmp imul cmp mov jl and or testb xor mov and adc and iret and aam test stos pop add sub or mov or pop jmp sbb jno hlt insb push adc dec mov negb cli pop and fwait dec adc bound cmc repz lret inc frstpm(287 cwtl loop xor xchg movsl pusha test out adc andb add jo jno xchg mov sbb es sbbl bnd xor leave test dec orb lds mov push push xor dec stos loopne subb leave or inc and lret push rol or orl mov add pop push lret push add sbb add mov fcompl jl sbb loope and fwait jo and adc je ljmp push rclb pop pop mov lock add mulb sbb roll pop stos fstl imul sbb fbld outsb pop repz push out xchg out jns repz int3 fwait add sub pop jbe jle add push jp,pn sbb movsl sbb add adc or dec inc xchg xor cwtl inc jg mov loopne mov xor jecxz add lods or xchg mov mov test push cwtl jg fstpl pop fidivr mov add je ljmp das xlat fnsave push je and pushf rclb stos rorl fistpll inc stc nop call setnp sahf stos mov inc xor movl mov pusha adc repz enter sbb pop stc mov pop mov frstor cmp stos push daa cmpsl fwait testl test into cmp mov adc stc (bad) adc setp pop insb sbb (bad) push sub mov loope jo negl iret int3 movsl pop and shrb (bad) (bad) dec xor jle push data16 jns sbb add icebp push jle andb push xchg and xor push lds jl or cmp mov push inc add rorl xor push add cmpsl xor pop out clc or mov inc mov loopne lahf cmpb dec xchg inc test xor jns nop lods add lock clc pop dec stc or movsl or inc inc les imul sub dec inc pop hlt cmpsl adc (bad) xchg adc sbbb add addr16 mov and pop inc push bnd jg (bad) mov test xchg repz bound fisubr ret and mov or (bad) lock in add inc jo mov sub (bad) sbb jg mov test insl dec sub cmp outsl push sbb and jl push gs add aad lock nop fdivrs and call cs xor add mov insb test fistpl cmp and movsb mov fdivr call pusha pop popa jo test or inc fstl add ss inc add xor jns lods dec push enter fsubrl test xchg cld xor cmp xchg test scas adc cmp notl or roll dec dec inc dec ret minps loop (bad) rclb or mov clc nop rorb push shll nop call mov cmp sub fwait into mov add sbb stos mov cmp sub sub inc pop add (bad) in jle loope inc or sarb pop mov pop test push insl movsb xchg int3 add push jb stc ficom lcall mov jp pop aas and call cli mulb pushf pop orb and sbb and add sbb js xor fnstsw (bad) mov pop and mov mov or cs or push aaa jo mov mov mov sbb pop sub cmp (bad) cmp mov outsl add adc mov loop sub imul push sbb les cs mov jo daa or add mov add or push lret mov pop test push out pushf push shll iret fs cwtl lock je dec das movsb enter fnstsw adc dec hlt call push add jl adc add push or sub lock test test cmp mov pop push fimull nop fisttpll pop das fisubrl push andb push pop push das test flds pop mov clc jns std mov pop add dec dec fisubrl mov add and (bad) jb je sarb (bad) lea test pop outsb add pop pop jp pop jns and ret lret sub and push sbb sub and xor xorb je inc and clc xchg cmpsb lods fsubrl sub xchg (bad) push pop pushf orl and leave mov inc jl rcrb pop or mov mov movsl add mull dec pop lods leave or sbbl jns pusha sbb push and clc add cmpsb mov je es test (bad) fisub jns jnp daa jmp insb or add jbe aaa and ds pop inc les rolb fisttp hlt sub cmp incb and dec adc add jg pop cld inc in lods add adc mov adcb sti sub imul inc push orb add xor sti mov jne pop lds fsubl jl sbb adc sti mov cld mov das cltd adc andl adc pushf in pop in add mov cmp sub sbb mov xor inc (bad) and pushf dec push cmp sbb jno sub push or push xchg and inc test jns add mov xorb sbb shlb sub (bad) adc pop adcb imul xchg insl sub mov sbb lods mov push inc insb pop pop or loope pop xchg inc sbb adc daa jl dec cmpsb cltd jmp repnz add clc sbb or bound push add inc dec or add fcoml stc in mov xchg adc jno push test mov xchg test inc cmpsl nop lock lcallw popf fs mov pushf inc insb xchg pop add fldl int3 outsb mov (bad) ret pusha int3 inc push add sub nop pushf mov jnp (bad) xchg adc repnz sub ds add cmp hlt or gs lret cmp xor iret and dec mov add loop push and ret xchg mul leave pop xchg int dec dec test xor imul or cwtl mov or es inc xchg fsts push push pop mov sub (bad) mov int3 clc int adc xor sub clc stc popa xchg mov xchg xchg test sahf rorb or pop mov mov movsb nop dec lret xor (bad) ss mov pusha mov cmpsl (bad) aam add jo cld (bad) mov movsl rolb scas int movsb leave sbb cmpsb jl push cs loopne shlb xchg (bad) adc test dec or add inc xchg add jmp packsswb mov repnz pop rolb stos jl add out mov lds xchg and xchg in jge sarb add mov push cmp out mov cli push repnz lock stos or decb cli je imul xchg push push add (bad) push test test in cmp and adc test mov sbb in int push xorb and loopne or lds mov or pop add loopne imul jne add rcpps cmp pop add mov scas push xchg sbb mov add xor aas test icebp dec inc adc add push jae call lods xchg cld int scas cmp or lock (bad) repnz vcvtsd2ss loope rcrl add mov sti out popa add repnz fist shlb and push call mov fcomps xchg dec jmp call lods shrl push dec lods pop rorb ret ret scas test push sbb cmp add pop xchg into cmc add xor or test push cmpsl data16 mov cli jns (bad) jmp mov sarb repnz jo cli push add lock scas scas iret inc out add add push movsl aaa hlt adc gs adc cmova mov add rcl sub cld add xlat xor push cld inc sti loope lock pop mov cmp add xchg fsubrs sbb dec sub sub rclb test fmull cwtl hlt add xchg data16 arpl lea mov dec add (bad) jmp pop inc stc js nop sbb lret test jle add sti add pop cmp push data16 test xchg push add inc jne jns lret cmp pop inc cli popa or popa mov sbb addr16 ljmp lods mov out pop dec test mov idiv shl nop repnz adc (bad) and xor add nop les loope test jno dec mov nop rclb xchg add lods add add out and mov movsb les and jecxz or inc nop add cltd and push (bad) negl lock inc and mov std mov repnz test cmp sbbl xor bound push lcall pushf into push xchg push or and aam mov dec pusha lods insb push dec mov stos mov inc pop push adc rcrb rorl (bad) hlt cmp push fs insb sub inc adc lods cli int3 gs and jo int3 enter lret dec push jo fdivs fadd and les test inc addr16 scas dec mov push sub pop cwtl fs sar pop sbbb outsb jns lahf imul mov inc les jnp rcll in xchg push mov jb add insb and sbb inc jnp add imul pop mov cli call sub fmuls rolb in xor cltd add (bad) adc rolb adc jb add ljmp mov xor hlt or pop jecxz add mov adc push shl mov jb sbb and dec xchg movsb imul and or or jp sbb dec std mov or xchg mov push or dec loope jne dec push mov rcrb popa dec gs jns dec aam (bad) sbb rclb cwtl movsl insl jno lret and add xchg mov xor cld push test and repnz xorb adc pushf pop push mov add das leave popf and or int mov pop add push inc add push or jne imul mov add sbb cmp test jo adc fldenv xchg mov dec xchg add jecxz fdivs pop xchg xlat scas sbb loope cwtl pop xchg sbb movsb in and mov lods mov rorb push data16 inc push and rclb hlt push adc sub iret in push movsb and inc cmp js adc sbb mov or add insb or push jmp dec movsl mov lods repnz aad cwtl jmp adc mov push nop sbb sbb inc out inc add daa jl cmp bound lods push into lock mov int3 dec push adc lcall loope cwtl lock (bad) sub cltd jl dec or daa (bad) popa rcrb xor inc in pop and inc mov inc or int or adc out add hlt push ret xchg fisubr or outsb mov pusha cltd mov push scas cmpsl daa pop and imul insl xchg and imul pushf adc push or jmp mov mov push mov (bad) mov in add cwtl inc lcall (bad) je sbb jecxz xchg sbb in add loopne or loopne loop mov mul nop popa test es cwtl inc mov xor and stc xchg addr16 jns ja mov pop testb dec repnz lods xchg fs push loop add in pop test xchg adc xchg imul (bad) sti add add in sbb xchg and xchg pop imul (bad) into mov dec adc sbb xchg pop mov xchg push ret mov xchg cmp sbb and popa sub xchg xor push aaa dec (bad) sbb cld cs add xor int3 enter clc cmp and add mov mov push add mov (bad) jg ret xchg rcl enter add data16 add jno dec test cmp adc dec out sub xchg rcr mov arpl test pop pop push sub xor dec add cmp out cltd cmpl fwait shlb mov add push lods in les dec cmp or or shrl or dec add pop jbe jge pop cmp cmp fist xor jb inc inc push push inc xchg lods add mov cltd mov stos sub inc and cmc push xchg iret adc loopne add (bad) cmpsb mov nop mov test adc dec lock mov lahf jg (bad) adc sub sbb sbb stc cmp adc mov add divl addr16 pusha push inc xor lea adc xor dec mov mov inc push cmpb cwtl or add scas mov test call or lds sbb dec mov jecxz mov bound dec xor sarl std lea lds (bad) sbb mov aaa (bad) jae into dec cwtl mov in inc mov adc test mov xor and and add mov mov scas pop or push gs js pop mov insb jecxz and xchg push in add xchg or and sbb fsubs (bad) mov pop push sub add outsb dec icebp imul xor xor loopne or lret scas sub add ljmp lods aaa addr16 add imul sub inc daa ss (bad) inc cmpsl and mov (bad) mov adc mov subb (bad) faddl mov lock mov fwait adc or adc sbb sub stc punpckhbw fist pop and mov xor push pop or nop adc arpl test mov push pusha xchg test mov dec pop ja sbb aam icebp lcall sub pop addr16 pop cwtl or inc or pop pushf js sub repnz out adc cmp mov adc adc xchg sbbb cld push loopne and lea inc dec cmp popw pop stos enter mov adc imul jp lds insb and adc dec fbstp js inc adc lcall xchg lock cmp mov push in fwait mov and jl adc fidivrl orb or xchg sbb adc ror in or mov mov xor gs roll je and mov inc test call inc aad xchg les insb and (bad) push add addr16 sbb push loop and loopne shrb mov (bad) loopne popa or sar into enter add mov call outsb add popa cmpsb dec and into mov mov cmpb sbb std stos (bad) dec xor jg orb xchg add iret out fisttpll push test mov mov sub mov add stos xchg inc and xor popa cli jno sub leave pop movsb dec push popa fwait in outsb add jne sbb push or inc in cmp mov hlt inc call pop dec mov mov inc mov test sub outsl out jle adc xchg add adc jno adc mov inc les aam mov push and mov rorb adc mov add mov cli testb (bad) test sbb stos cmp rclb sub add shll bound sbb incl sti sub data16 adc sub mov mov jns mov popf (bad) rorl pinsrw mov lcall or inc out fmull jns add pop adc jge in sbb ret shlb gs rorb push jmp push (bad) sub ficom mov les fistpll les and loopne mov mov call pop mov add jb add pop mov sub pop cmc in adcb xchg mov test (bad) push mov je sbb orb add leave das out push mov loopne mov sbb and adc mov out inc mov inc cmp mov adc push arpl or cmp pop mov mov test xlat mov cmpb mov (bad) aaa jge push dec int mov data16 lss out loopne lock or in fsubl xchg sbb dec les sub into pushf jo push and pushl movl (bad) call inc adc mov shrb or popa nop pusha aad inc imul out mov mov and inc add jae loop mov and mov cltd xor mov lods pushf sbb popa pushf outsb stc scas and cmp push push idivl cmp jp nop cmp xchg rcrl test pushf add faddl lods fdivl cmp test sub ficoml adc dec add nop nop mov int3 xor add mov jl jne cwtl pop shll jno add scas incb sub cs cmpsb cmp adc std sub jo and and xchg adc and xlat sub jae xchg inc mov cmp xchg std pusha xchg insb cli mov mov lret jle cmpb cli mov pop mov sub bswap aam inc lret fs fmull or enter push and push add sbb into push test rcrl insb inc mov push push and loop pop mov inc push inc mov imul mov addl cmp pop and mov hlt mov inc adc nop shlb ljmp int js lret arpl insb call mov stc dec js sub rcrl cmpsl test andb push jns in pusha dec subl xchg sub adc mov add add sub out pusha dec dec cmpsl xor push add jo jae test das push dec loope dec jo mov pop sbb mov mov xchg add aam sar push mov add ret test fildl fadds and in add push sbb add enter and sub xchg adc add lods in in sbb sub push das hlt xchg xchg mov lea lret xor cli jl cmp push pop cmp lock pop push xchg jg nop (bad) sbb les adc sar mov adc fcmovnb dec int3 add movsl and adc sbb dec cli mov hlt std (bad) fadd addr16 imul and inc xchg dec mov or loope mov push dec movb push mov inc test dec pop addb insl mov add sbb in push mov sub rclb pop ds cs test test adc and movsl (bad) pop add jle xchg jbe shlb xchg loopne mov and mov add hlt xchg ds push out popa push in xchg add fnop add dec adc aam rclb inc and fdivl hlt (bad) int3 enter imul aam adc or or push xchg jmp add repnz fisub adc inc lret dec push sub pop sbb loop adcb sub adc mov xchg add arpl or mov pop and aam inc and mov add push mov dec nop enter lods leave and lods inc dec cld sbb add (bad) and mov xchg and or andb fsubl fs es or popa push jle in adc lods es notb mov adc inc testl out in mov cmc pop xchg (bad) sub les pusha jne dec addr16 pop imul xor fild leave lea push or mov pop dec roll and shrb pop shrb popa arpl inc or in scas test pop (bad) hlt xor cmp push arpl jo xor repnz jo push dec jbe or xchg call (bad) lock add sbb adc cld add and push xchg xchg xchg mov arpl (bad) pop adc xchg lods std mov inc cmpsb add add aaa loop sbb mov pop enter add repz aad pop lods adc pop jg imul inc add inc inc test mov mov js js push pop jns das adc and addr16 push lock dec fdivs add popl lods clc xchg sub and mov fcoms addr16 test dec mov jecxz inc testl idivb sbb das stos enter repnz adc popa outsl jb inc push mov add mov cwtl add sbb sbb add subl mov fcomps test xlat xchg fimull in jle pop mov pop xor into xor je rcrb xchg sub add nop sub cltd in xchg subb or cmp fmuls in adc loopne pop loope sub call mov aam cmp gs movsb imul or jno jb sub test inc and inc xchg sbb mov xor nop fadd adc mov icebp xor dec cmp inc jl es (bad) jp cmp (bad) mov sahf je dec mov dec pop cmpsb (bad) rclb dec inc call inc push mov and cltd add icebp idiv xchg mov leave fildll adc add pop inc cwtl nop test (bad) cmp fwait pushf jno lret push cltd add aam cmp in inc mov xchg jnp imul clc add ret dec test sub ljmp xchg push (bad) fisubrl adc sub add inc popf push add push jno insl lahf or push jle mov pop pop add lods out jne inc pop clc cli add jg sahf sbb xchg and add lock fs out pop jnp je inc sbb add fcomps test popa fs xor ja jb in add fdivs xorb es lea jns add jg add cmp iret cmpsl test xchg sub or jmp pusha (bad) mulb (bad) sub dec lcall pop aaa adc pop xor add cmpsb das jl xor dec aam add loop ja fsubr xchg pop inc in jmp xchg dec stc add push adc mov push and call add push (bad) push xchg inc dec dec nop cmp es popf ret into jmp cmp xor idivb sbb clc les dec adc push add loope movsl pop and test push mov sub int orb cmc mov cmp jmp (bad) je adc or aas xchg or js jnp dec mov or jo mov add cmp xchg in mov lods dec jmp pop xor push cmpb mov push xchg xchg add pop mov sub mov or xchg sbb fs int3 in iret rcl and cmpsb inc repnz daa push cmpsb jnp mov (bad) xor jb fadds jecxz les mov adc inc pop adc test (bad) enter adc jnp adc xchg mov xchg push mov add enter in or js sbb popf adc xor mov xchg out add push add shl sahf ljmp dec dec cld ja sub movsl pop xchg in in add xor cmp push mov dec add adc add inc js or xchg jg pop arpl mov pop or idiv push (bad) mov add sti lock iret fmull xchg sbb aad aas xor push and js nop sbb loopne cwtl inc dec or aad push sub call stos out and in pop bnd adc sbb mov aas fwait cmp push dec mov cwtl mov cmp push cmp mov cmp jp add dec xor aad mov das jo pop mov mov add (bad) mov lock pop dec dec faddl lock push push (bad) fmul nop dec andnps repnz inc xchg and das lods int3 call movsb test sbb cmp xchg xchg push and and inc fcmovne dec test repnz movl loopne or xor and mov out sub mov adc or xchg xor roll dec adc shll gs mov mov scas fcmovb rcrl and nop lods cli in leave adc sbb mov int jno mov jbe mov or movsl cmp jbe (bad) lret aam int sbb nop orb (bad) dec inc ror sub jo roll and iret ret shrb dec notb mov loop mov add jno xchg xor cmpsb pop nop (bad) in and xchg inc pop add push fistp stos sbb add mov add lea andl add mov std test popf and mov pop int3 icebp sub sub push fs xchg nop dec or repz jnp shrb out add mov popa mov xchg xchg mov sbb scas adc push push xchg popa and inc mov dec lcall inc push mov rep shll push or jmp dec shlb in adc and lock jno add repz xor (bad) lock jno mov dec or fild jb faddl pusha cs test xchg inc add aas push xorl fs mov les sbb xchg mov add loope and xor int3 inc or arpl mov and mov push lret mov xor enter icebp push ret outsl push cli adc repnz or adc test mov xchg cmp rcrl mov iret push dec sarb and mov rclb dec loope add lret push inc inc insb add adc jb dec call loope add sbb add sbb pop outsl cmpsl cmp lods add (bad) out (bad) leave pop xchg mov dec xchg mov add sbb sub dec nop dec mov jle fild enter andl add hlt mov adc popa fs dec adcl pop ja add je mov jb or leave loope cmp sti gs dec dec data16 js push pop dec and in inc xor cmp in cmp mov test jp js or mov lcall fidiv jno sarb pusha je sbb dec iret push mov add cmp jne dec cmp cmp or pusha imul add add sbb dec push lock pop test call mov ja add xchg lcall in or mov cmpsl int3 mov inc daa enter and mov fdivs je dec cmp nop pushf es adc test jnp xchg push lds xlat inc lret xor daa mov pop push test sbb jmp jns lods sbb adc push in in sbbl js cmpsl sub xor dec push sub add in iret dec sub fs shrb lret xor mov cmp clc jno repnz jnp xchg inc xor mov adc dec bound add cwtl scas sbb or lcall repz imul shr xor fcoml mov cmp or shrl or aad jp fcompl sub add ja push and (bad) and mov repnz pushf or jnp and andl cwtl mov fs adc adc test xchg iret std mov lods aam es mov sbb mov xor push stos add shrl addb js jp (bad) mov jge outsb lods sbb mov add and xor in call pop scas mov xor fistpll rorl cld sbb add or mov sub ss test f2xm1 mov mov clc insl dec and xchg iret movsb add dec popf cmp repz sbb lods push popa xchg imul lock add xor int3 pushf xchg cltd inc loop popf adc push sbb daa pop jmp sub outsb andl add inc adc subb adc pop add fdivs mov jno pop sub and into cli cltd mov hlt mov dec dec or jp lods imul push out sub add mov push mov lret es add loop mov jo aam xor push pop add insl icebp adc push lock xchg call add scas add add push adc mov adc mov push dec sbb mulb aaa pop dec imul je out push dec or call add add insl repz or sbb loopne notb ljmp es repnz push clc bound adc ljmp loope or cmpb add jns xor jns adc imul call mov cmc hlt xor mov sub dec arpl mov push ja mov push das cs jo xor enter pop dec pop test loopne mov addr16 sub cwtl push inc iret out cwtl and mov or repnz rcr mov inc jne iret aam sbb mov sub inc cmp pop clc orl push (bad) int js int3 mov hlt sub add push jo fs dec cmc add stos and or xor gs xchg fmulp xchg lods mov and mov int3 lret arpl mov jb add pop push and dec and loopne cmp xor add in pop test and jecxz sub cmp fmull movsb enter scas or dec pop je mov fldl lds orl mov xor and daa cwtl loopne sbb inc ja cmp dec xchg mov or xor sub dec push adc int push lods mov sbb aad rcrl popa sbb ret sub mov jl leave inc or dec nop dec add jo shr fldcw and dec repz mov push and js dec insl pop adc dec sub je pop pop fnop mov (bad) je jmp das scas pop mov daa aad pop sub dec pop jmp sbb adc mov push or push sarb pop loope sbb xchg addr16 in imul jne sbb sbb pusha in push add lret or cmc (bad) out cmpsb bound data16 movsl rorb lods add std pop (bad) sbb outsl inc jns pop lock lret and or (bad) mov fnstenv dec (bad) jo lret or xchg sbb call test add movsl and sub aam mov rorb add lret jmp xchg xchg inc int and enter mov pushf xor sub dec add pop aaa (bad) mov ret sete clc sub mov rorb inc iret jmp jl loope cwtl add ja mov or movsb inc (bad) and sub fbstp and lahf inc mov cmp je mov sbbb inc enter pop push adcb outsl daa imul mov lods inc test xchg mov cltd push xchg out and ljmp imul cmp mov adcl pop cmp jb dec jbe or movsb mov jp adc sbb mov jne hlt mov xor vpsrlq adc test and je xor mov arpl mov bound les xor dec loopne rcrl mov mov iret mov outsb ds loopne adc les jge adc pop (bad) in mov jecxz lcall inc cmp outsl cmpsl loopne mov or adc insb (bad) mov insl lock pushf cmpsl xor dec xor in inc ret push and cld sbb jnp shlb cmp enter mov nop fild sbb (bad) jge enter jmp dec inc adc (bad) jae popa jecxz clc or pop mov jp movsl push sbb cltd nop cmp insb push cld push cwtl incb xor mov or pop adc pop push add sbb cmp sarb add sub ja xchg push ror pop jmp outsl sbb iret cmp or mov adc mov xchg mov cwtl add lds (bad) cmc jnp push push adc sbb sbb push lret (bad) mov test stos dec shl pop andb or sub mov lret pop aam mov xor imul aas xchg sbb loope xchg dec mov call addb stos and lgs and in and lcall lods add push daa lret clc out insb or in add mov cltd js repnz loopne lcall mov (bad) sub shlb sbb mov push or iret stc mov roll mov sbb int and push call xchg cwtl xchg add pop cmp cwtl mov push push call add mov (bad) (bad) js std xchg nop imul bound sub pop lret arpl jg imul les or sbb loopne pop xor out pop shl test mov pop je leave (bad) fsubrs and gs push inc mov or rorb nop add xor xlat jnp cwtl and adc test jmp adcb sub add xor or pop inc cmp jno cmp lods subb aas dec mov (bad) push xchg inc push std jmp mov cmp test or sub dec push pushf or es cld in lcall adc xchg xor sub sub (bad) pop mov dec rolb out mov je jb arpl repz rcrb scas stos js addr16 lret mov int3 mov adc sub stc ljmp cld add mov xor add mov xchg push cmp add (bad) in and lret pop fsubrs rorl sbb rclb dec cltd loopne call xchg data16 jb jne inc add nop sbb dec mov mov fcompl add sbb sbb cwtl cld sarb mov ja inc inc rcrb jp in loopne stos and loope inc jp add sbb in or adc int cltd cld outsb add pop fidivl out (bad) sbb loopne jo dec jmp fsub inc lcall mov dec aam scas pop mov dec dec insb add push push mov and mov pushf inc daa fwait pand insb pop mov daa mov adc popa cltd outsb pop push addr16 std jp add (bad) jg push adc adc movsl and fist leave rol sub (bad) pop or or test lods push fisubr daa icebp (bad) sti aad idivb dec dec dec loop push pop sub ret push xchg mov add xchg jge jmp pop mov cwtl dec lcall jg xchg mov xchg mov test lock sbb movsb pusha outsl add pop lods mov add push inc addl push cmpsb dec enter imul shrb sbb lret test mov add (bad) (bad) ficoml or mov lahf mov loopne xor and clc adc mov dec xchg loop leave inc ss pop dec cmc mov and and cmp insb inc insl cmc aas xor inc mov arpl push xor nop mov stos sub jnp (bad) in add insl rcrl mov cmpsl loopne nop test into call inc clc pusha sbb faddl stc ss cmp js cmp stos sub shrl xchg ret rcll stos jecxz sub and push repnz mov sbbl loope out mov test test add xchg cvtpi2ps insb cmp aam adc sub pop mov sbb test (bad) div cmp sub inc xor repnz repnz sbb sbb inc arpl jo test cmp mov xchg dec aaa push stc imul ja daa jecxz dec push test and pop cmp clc and mov add or mov lcall inc repnz in bound xor lea push push xchg mov in xor cwtl subb pop sbb das adc movsl lods bound sbb mov and pop stos movsl xor jns (bad) aas frstor in cli xchg inc mov lods in test or xor and adcb dec mov mov repz pop add dec out mov sar icebp sub mov insl test push push cli sub or dec test repnz stos stc and jmp add test es inc mov jl test inc cmpl jmp and popf push lret dec scas or not cs mov fmuls sbb fs add js lret xchg push in push movsl test dec dec xchg lods out xor add ljmp jae pusha unpcklps rorb (bad) ficomp lcall out pop inc pop jecxz mov addr16 and dec mov rcl nop dec (bad) xor pusha js or cli jns cwtl movsl fdivs sbb mov scas lret push xchg insb je pop repnz xor mov jle mov add pop lret lcall lock mov sub hlt jbe mov es push stos iret add (bad) xlat sub pushf pop mov test sbb cwtl add or (bad) xchg xchg cmp sti push xchg push push out xchg or imul adc aam fnstenv add jno jg inc rol cwtl hlt int3 dec mov or dec add (bad) mov andb cwtl sbb mov lcall jecxz xchg push add imul lock add pop inc cmp out (bad) scas sub mov push add pop ficom (bad) scas and jae ds inc adc add jp shlb in push leave rorb (bad) xchg add jg (bad) hlt adc test notb insb mov xchg lods mov push rolb sarb sbb sbb jo stc pusha out mov movsb rcrb nop dec inc sbb pusha adc sti rolb xchg movsb ret subl loope and hlt add cmp add mov (bad) insl jno cmp imul hlt enter sub xchg mov std test lcall lds mov sbb push xor cmp outsl imul add xchg fistpl add mov inc mov punpckhdq mov shrb loop jnp test gs mov imul mov pop cmpsb jo add xchg and inc jo sbbb mov or add dec adc loop,pt test les xchg xor jnp sbbb enter add loope (bad) lret push aam inc push push mov dec ror test sub ljmp lcall add test fcomps dec jae int3 pop lods add insb xor add cmp xor add or sub or xor adc in mov jno add das cmp dec mulb pop ds fild dec leave in xchg push pop or push lock ds add in insb lret or cmp and pusha dec sbb insl pop push inc dec int loopne jmp int3 pop sub add pop es outsl and adc mov sbb mov cmp cmp push shlb add pop jl add push pop sub int3 pushf add (bad) pop test add lret test pusha mov wrmsr xor mov lock pop pop or cwtl xor xchg add pop xor out mov pop adc addr16 mov lds scas cmp aam nop in nop pushf rcr out mov cmpl loope mov or add fildl adc shlb ljmp loopw fdivs or mov imull cs xor in xor dec testb xor into inc ror (bad) lock dec mov pop add cmp ret sbb inc add sub sbb shrl rolb adc data16 mul imul rcrl sub sti pop push mov jae add (bad) outsl aaa arpl dec add sub (bad) pop in mov pop or in nop rolb dec negl xor loopne mov pushf mov sbb push ljmp mov iret test call xor test pop add adc dec xchg loopne ret outsl pusha sub bound xor cli push cld xchg push movsb xor popa jl xor lods push inc pushf cmp hlt hlt push cmp pop sub inc cmp add pop add xchg aam xchg pop mov and cmpsl push (bad) dec xor aad xor dec mov int sbb int3 adc push dec cli push jo arpl aam cmp (bad) jno outsl and arpl jp shll sbb int push mov das inc dec lock push fstl add mov add das jg inc or xor fmuls clc xchg xchg lret ds js scas and push xchg outsb nop enter sbb adc fsubs push jp xchg add shrb popa dec and mov fmuls mov lock pop in es push mov mov xchg push push add pusha xor pop dec jne orl sub xlat inc outsl aas and out cmp push sub or jge push xchg cs push test loop mov adc xchg jmp and flds nop cmp and add push mov mov cs jo add jb dec pop ret push or mov je pop test pop enter nop shlb jnp (bad) and mov hlt les xlat and aad arpl pusha and add mov fnstcw mov adc pop rorl pop mov and jb je and xchg fs ffree cmp xchg add mov or ret out cmp add outsl xor mov push bound mov lret adc popa and jno (bad) into dec sub out and pop jne je ret jo lret test shll xchg sub ss subl push aam cld jecxz (bad) and std sbb push or ret sbb xchg notl dec mov test pushf notl mov push mov clc add mov cs xchg push in ret sbb nop lock in outsl jmp idivl popf fwait enter nop add and mov sbb lds jb inc jecxz dec insl fcoml enter les xor fucom call test pop in std stos mov (bad) divl dec in add add sub in dec mov or sub ret cmp inc adc fnop dec cmp push shlb cmp test sbb adc nop and cmp pop push in rcll ja (bad) sbb mov (bad) popf out cmp pop mov adcl or pop mov or daa je aam pop add int3 xorb push cwtl mov mov dec into inc js add push loope negb int3 in add lahf xchg pop mov pusha clc sbb das in inc test xor pop mov lret inc pusha sub (bad) leave and and (bad) std or mov mov and out xchg sub mov jecxz sti int in adc insl jbe mov into adc pop or pop xorb cld dec xor mov xchg add in sbb or and sti movsb lock ret enter add iret sub outsl and xchg cmovge add arpl cltd add ljmp fs or in jns (bad) mov xor ficoml push or nop jge pusha inc loopne adc aam jno movsb xor mov sbb imul outsl popf or lds sbbb mov jb inc jne sbb cmp stc push sbb xor sub inc dec push or inc add jns inc mov xor cld pop mov inc or sbb jle scas add mov inc lret add and iret and cmp test movsl dec and mov pop mov std nop xor pop orb pop inc sub cmp add idivl movsl pop xor ds aaa nopl hlt arpl mov sbb add sbb pop movsb or bound mov push lods sahf or mov out pop es jnp push pop dec fadd and (bad) hlt pop inc sub xchg and dec mov mov aaa lock xchg fist sub loopne adc mov cld adc loope pushf add inc repnz std or add xor sub rclb cwtl imul out ds or inc fmuls adc ds test int3 add add mov mov jl adc lds nop mov ret xor dec add adc repz rcr jmp adc pop mov push pop std inc pop int scas lea enter es outsl add xor cmpsb or xor rorl xchg cli sbbb dec mov add sbb adc pop cli inc shlb jge add popa xor cmp pop push add rclb and mov add or push sub das sub dec mov gs lret pusha add dec out and stos mov sub bt sbb push dec sub and cmp inc and das mov push cmp aam push (bad) xor jno dec cld cmc adc sbb les inc fs inc xor jae sub loope daa andb dec negb popa add fnstcw inc sub lea jnp leave fimull mov and loope jl imul xchg cmp (bad) cmpsb xor leave sbb mov lcall fmul pop mov pop cltd xor popa imul addr16 mov popa or adc sbb sbb mov sarl mov clc dec fcmovnb pop xchg and sahf xchg xor leave daa out push pusha jmp sbb cmpsl push xlat cli mov pop jns fs rcll xorb out push lcall pop sub inc test and add in xchg inc mulb int or aam hlt adc sub jmp leave sub shlb or add mov fidivl inc ret nop mov cmc inc jb add or aas in in pop fidivrl fcompp rcl dec adc icebp mov clc pop pop add mov add adc cmpsb movl or out test or sbb adc ret cltd add add mov jle add movsb pop or cmpb in aas scas test dec (bad) mov sub dec and pop mov cmpsb jl xor xlat add mov dec iret loop dec pop jns nop call lods popa jge pop pop call pop sub and ret cmp cli pop push push mov imul andb loop jp xchg jne xchg adc gs (bad) fdivrs and pop je or imul jne xor ss out jnp or pop sbb add and add and push aam outsl add sbb data16 add push rol sbb mov cmp mov jns popa mov dec outsl mov mov sub xor and mov or inc add fisubl and aad rcr xchg mov dec mov pusha sub (bad) pusha jne (bad) (bad) test xchg iret xchg aam (bad) dec mov stos and adc cld mov xchg cmp or push add sub pop mov sub imul lret loop adc pop mov mov std pop das inc add mov pop arpl pop xchg insb inc xchg shl int lahf sub mov pop les cld xchg mov mov xchg inc mov pop sbb sbb xor add rcrb cltd pushf add xor pop adc pop push fwait add fidivl arpl jl inc mov or out sbb jno jp mov pop add pushf cwtl std add enter les subb (bad) cmp mov bound cmp pop call jo xor or sub call push inc sub adc roll push std pop add adc pop jecxz or cmc push in or paddw movl xchg loope jp pusha gs cmp or ja mov add adc js add sbb xchg roll rorl mov pop add cmpl mov xchg or or sbb inc push mov and sbb sub inc pop sbbl xchg cmp pop mov jle mov mov jb xor pop xor add js push (bad) cmpsb test mov fsubrs add in jle xor sub insb jo mov jle adc xor jp pop popa aad shr jb pusha cwtl pop lahf inc xchg aas and testl sub pop add or push cmp dec mov add cs mov add lea mov jb sbb sbb stos mov js push test aad sub xchg aas cld pop das jne add addr16 rcrl ficompl xchg clc fneni(8087 push and xchg clc dec or shr add dec aad idivb adc jne addb sub xor test stc mov outsb inc int3 es sbb outsl mov push xchg addl add lcall int3 cmp lret test or push shl repnz inc add mov adc push test jns loopne add inc mov add jp stos gs push pop rolb mov dec incl pop xor outsb pop inc and or and push shld popf sbb jb movd ja mov pop dec and add and inc lea faddl ret mov adc cmp cld push out or (bad) sbb and jle and test lea insl pusha pop (bad) mov add sbb ret sub mov inc cmp add jmp pop sbb or pop (bad) clc mov jnp fild jmp push inc shl cmp lret ucomiss pusha push rcll divl and mov insb and enter rcll lcall or push iret ret jae inc in nop into ds mov push dec pop fisttpl sarl aas (bad) nop add dec in mov ficompl xchg (bad) jae cmp xor pop add in or push je rorl xor cmp lahf jecxz cmp add mov cld xor icebp imul js mov pop data16 and test jae cwtl js hlt xchg adc mov out mov js jb jl fidiv movsb mov jl inc push add ljmp lea in (bad) rcl fstpl sub ret push inc in ss xor mov mov jecxz adc inc pop pushf ds pop repnz push add add inc jb call push cmp inc dec add xchg mov add div jae imul fild out add pop mov add add jmp mov sbb in sbb adc fisubl js stc int3 roll push ret jp insl aaa adc inc xchg mov inc cmp test mov adc add mov cmp outsl push lcall xor xorb aam stc push inc or fildll and test jl dec mov pop int3 jne icebp aas ds adc dec sti adc jo or push in lock jno jge popa and jecxz xchg cwtl jbe jo lcall leave cmpb add cs test add mov sbb xchg or add dec mov push bound sbb and push pop hlt add ret push push cld adc movsl or addb mov out inc push sub insl push lcall clc inc mov nop movsb lods inc sbb pop mov push adc call (bad) xor mov ficoml aad aam jo out sbb rclb or scas add std sbb pop dec fadds adc jne int jl adc dec mov loopne lahf cmpsb add je insl mov add ficom (bad) enter fdivr inc scas inc jl pop sbb int fnsave and cs outsb jmp inc push mov push mov xchg call and mov int3 xor pop (bad) cli shll xchg xor dec add jge (bad) repnz jae clc cmp nop repz es pusha cmp cmpsl pextrw adc gs dec sbb pop xor fadd push test add or jbe loopne add push loopne lds cmp mov loop cmp xchg cmp dec pusha dec adc fsubrs cmp (bad) xchg push rolb mov or fsubl or jg cmp xlat add cs dec sbb or xchg (bad) xor mov push inc adc add and cmp pop neg fstpl dec enter cmp into lods pop jns push inc aaa mov mov sub push cwtl inc std or das dec cmp inc mov ljmp ljmp jae fs adc push pop mov fnsave mov hlt cs mov arpl idivl call sub (bad) mov (bad) cmp popf cmp mov cli orl cmp lods mov mov push sbb xchg loop sete dec mov insb lock push es lcall call movsb mov xor (bad) fwait push fisubl lods pop mov or or cmp pop into jge out repz addr16 pop aam push and add pop inc rcrb ret sbb pusha (bad) add fildl mov inc inc inc mov dec out pop je clc hlt fmull aad xchg push fs xor aas test push aaa add xchg add out fdivs or mov orb dec add ljmp (bad) repnz mov mov loop dec sbb inc nop (bad) mov adcl and pop jmp sub in cld int3 mov mov mov cltd pop push call addb enter cmc jecxz cmp or icebp rorb jno fsubrl fist leave data16 cmp loopne xorb mov (bad) cmp int3 add mov xchg jmp sahf fldl sbb lock add cmp into xor mov rolb dec nop or repz dec adc mov inc je out jcxz js hlt out data16 jb,pn or push mov xlat xor sub xchg je imul xchg dec sbb mov mov push push push movsb mov mov jbe add ret fimull push sub outsl dec push aam (bad) mov fsubs xor nop les roll pop bound int3 andl push xor and or xchg push adc and sbb fdivrl and call lds mov pop dec add xor cli fcoml pusha pusha sub pop dec cs sbb add jl xchg cmc inc xor pop add push jecxz dec or mov add xchg movb push xchg sbb sub xor dec pop dec rol inc jmp or mov cmp aaa cvtpi2ps sahf roll push push push xchg nop hlt push daa mov mov inc loopne std repnz loopne (bad) jne or add inc stc inc mov ret les sarb add sbb popa nop push xchg rcr sahf data16 push cmp sbb xor imul dec push mov pusha lock sti push pop cmp push aaa or jmp push and hlt pop pop aaa aam sub xchg test push (bad) mov cwtl fmul jns outsb ljmp mov add sub dec pop faddl inc add pop inc test (bad) imul mov push (bad) fstl and jg or arpl sti jno dec call jecxz int3 and addl mov cmp push lret and negl xchg xchg jge clc mov lea mov pop mov sub int jb cmpsb jno fwait lret adc xor adc pop dec dec dec push mov inc xlat mov clc icebp add lods test add movsb adc popf scas int3 sbb mov mov aaa add loope loope cmp sbb bound dec clc sbb dec mov fdiv stos in and adc mov sbb jmp (bad) lret or adc in popf fimul or sub inc aam (bad) movsb clc loopne add push add cmp into add sub inc adcb pop xor imul outsl repz loopne out aas movsb popa add das bound xor add and xchg xor setge dec jns xor dec nop out or ja ret mov sub cmp sub movsb or sbb dec hlt add pop jns mov or (bad) push sbb xchg adc mov ja roll sbb gs insl pushf or pop jnp iret mov add pusha addr16 pop ret jp sub fisttp sahf lds out sbb fldt and shlb adc or push sbb mov xchg add xchg hlt mov ljmp pop push arpl mov add adc pop repz loopne push (bad) hlt and incb add jge and imul cmp ds xchg enter test sbb or stc sbb add arpl adc enter mov xor enter add sbb mov enter add lods roll rolb mov aam add fwait adc mov jle adc add mov enter or es cmp jecxz test hlt push cmp sbb xor or mov add pop adcb sbb xor shl sub psadbw sub scas bound xor or mov sbb adc (bad) ror jne movb adc fldt or lcall (bad) js or test sub sbb cmp insl aad xor add std ret or fcompl and mov sbb nop scas adcl mov scas clc pop (bad) push xchg shll jbe in or cmpb in sar imul pop push xor ja jo popa and cli lds or bound add ror js mov gs daa int lock add int push cmpsl test sbb pop push mov test aaa xor sbb sahf incl sbb mov imul sub int3 addr16 or xchg test leave mov addr16 add xchg fsubrl mov (bad) jmp adc dec mov add xchg fisubl or xor mov out push mov push aam or mov and fidiv movsl lret and or test ds inc add mov js pushf je int3 add cmpl sub dec hlt std jp rclb ret push mov push ds inc fld mov (bad) lret cmp fiaddl std insb push add popa icebp sarb mov xor inc int3 push cmc and sbb aas jne xor inc test push fnop pusha mov mov mov jne es int3 add cmpsl enter dec int pusha rcrb fdivrs cmp mov orb mov ja jecxz sbb sarl loop dec movsb mov mov aaa push inc inc icebp loop js adc hlt fs stc push data16 mov cmp sbb mov and shll sbb mov mov aam je hlt sub iret jnp adc mov cmp out dec pop sahf adc add inc (bad) cwtl sub clc jge orl fidivrl cmp adc mov mov sub dec stos mov xlat and scas popa jnp add push adcb push aad sbb stc shll xchg sbb sarb (bad) add ljmp add jmp push or push sarb rcll (bad) sbb sub rcrb inc clc and push jg cmp or or popl and mov cltd je cmp add mov mov mov hlt cmp fprem xor int3 inc mov hlt xor iret aas icebp mov imul shll scas shl repz (bad) pop add fldl mov int3 popa xchg cmp dec pop les shll enter inc iret or scas std loope xor xchg pop adc (bad) cmc cwtl add lods mov dec pushf shlb mov (bad) push (bad) sbb sub jmp ja xchg xlat adc cld or jecxz stc cmpb jae lret or add mov xchg xchg xor cmp sub pop mov (bad) test and xchg int3 cs mov jp xchg or out mov mov out mov cmp xchg js push out call pop lret (bad) andb dec icebp std mov adc cmpsl push and push adc jne adc push mov nop lret pusha in mov pop jge (bad) adc push push jnp int pusha add or enter shrl loopne subb xor lock or and js sub and dec stc push add pusha or dec std cmc or push add cmp lods mov leave or daa xchg push or add adc push test testl or and pop loopne sar cmpsb in dec lock push nop push (bad) adcl xlat (bad) jns ret xor pop stos fsubrs xor adc sti hlt shr adc popa sbb inc jns adc pushf mov (bad) mov divb adc xor stos and outsl mov add fisttp fidivrl and jle sahf inc sarl call add fcomps add mov scas sbb push pusha add mov imul pusha lods ss dec add jo jle fistpll xor mov mulb add xor inc jo jg add mov cmpl mov adc mov in and xchg mov xor push mov lcall sahf and negl xor inc mov sub test sbb adc neg add mov aas pop mov imulb mov data16 stos and fcoms sub add into mov cmovns rolb (bad) mov mov push dec mov pop test sub pop je ja rol xchg dec jne or sub mov cltd add in mov hlt popl pop jl sub dec adc cwtl jne enter gs enter nop mov add mov sub dec fdivs in jg add aas mov xor pop cmp dec inc cmp sarl dec lods cmp addr16 push add loopne or in dec mov and push xorl aad mov xor (bad) mov add fs ds repz push push fldcw in dec stc dec add ja sbb add dec xor push rorl nop gs cmpsb mov andnps loopne pop insb sbb inc dec xor xor pop movl xor sbb pop add adc push jbe mov cltd lods inc adc cmp push cltd mov test mov inc in push inc flds ret enter in sahf xorb cmp mov jae mov or jno test and adc push cmpsl add outsl rclb sbb call les mov dec sub icebp inc (bad) out xor xchg xor sub jbe aaa add lods dec sahf ljmp pop mov pop adc pop (bad) mov dec rcrl add push jle add into loopne sub jnp cmp adc mov test in mov gs mov mov shlb dec add stc xor push or popa push mov movsl xor pusha in fistp je jl inc push rolb push add jae or sbb fldenv in push and lea out adc call aam movsb sarb dec pusha fiadd insb cmp add mov scas adc push push jge cmp lcall add adc push rclb push into movsb std ja or mov adc push imul pop cwtl outsb aam cmp rorb sbb dec mov fisubr mov (bad) (bad) ja sub dec and out in cmp shrb mov add repz jnp scas lcall mov mov insb xlat or mov add sub sbb push test cs xchg test aam addr16 adc cmp mov and repnz or lock pop mov cmp or add fnstenv dec test (bad) mov xchg fcoml mov mull pop mov test and rcrl mov cmp je and inc cltd enter cltd pop lods jmp stc fninit data16 fcompl fs mov mov sbb das movsl cltd sbb or sub pop fdivl imul sbb jne xor and popf cmpsl pop cld add fcoml rolb fdivrs lret or std and mov insl xor (bad) xchg dec fisubrl ret in mov xchg imul movsb in test inc movb mov iret inc movsb pop add lock js jae xchg or jg adc pop cld inc mov and enter mov ds push addl adc mov andb cwtl and lock dec add lcall test or or int3 mov add push or call je xor push cmp jmp cmpb (bad) bound cmp fsts movsb hlt js cwtl inc add sub fs leave mov mov sbb shr stos fisubl or xchg cmp mov outsb jg mov adc dec push mov dec faddl std push ret adc mov int3 add movsb xor push mov int3 enter sbb push rol adc xchg add cmp dec mov xchg int3 pop pop push cmp mov shr adc movsb inc mov xchg call push test adc mov (bad) xor (bad) fimull ss add or (bad) mov mov in mov rcll jno (bad) lock out sbb and lea push enter scas adc inc xchg icebp dec add adc (bad) out arpl sub mov out repnz sub test (bad) xchg insb hlt je inc xlat outsb adc cs inc loop add (bad) leave mov movsb test or and push sahf fadd enter arpl (bad) xor iret rol push pusha pusha dec add clc cmp mov stc add imul mov mov movsl fmull cmp jecxz and arpl rcl gs out out pop mov sub cmp pop hlt in jle lock or loope data16 js stc add mov push or dec xchg data16 arpl cmpsb call xchg xchg rol nop mov aam add lock xchg mov test enter loop fsts dec sbbl inc insb or pop iret mov and push sbb punpckhdq inc jnp inc cltd mov pusha (bad) mov push pop fstpt cs sub icebp or xchg pop mov mov inc into pop fwait jge mov test dec dec mov add dec lods or jmp in mov xor xor dec adc fsubrl aas and dec nop mov pop scas fidivl and push xchg ja fs sbb std enter and add push pusha push jmp pushf jbe add add incl ss cwtl cmp add and sbb dec and bound les repnz pop addb xchg pop fisttp cmp lahf sub inc jl repnz mov push test push sbbb jns bound rorl sub cwtl or and aaa lods ja push lock xor pop icebp addb add idivl push fnstsw push lea xchg xchg scas sub pushf sbb dec fwait push push pushf andb pop iret stos adc int3 mov mov or xabort jno adc mov and push cmp dec jne daa inc push sub and leave gs push jl inc push insb (bad) movsb add fsubrl xlat push aam cld mov inc sbb call or push es pusha jmp sbb inc movsl lret test sbb subb in add jnp into dec adc sbb movsl mov mov push insb adc les cmpb in stc or push sbb xlat aaa mov fnstenvs insb mov cmp and add out idivl imul sub sti mov out cmpb rolb ss jne and mov icebp ljmp fistl push std (bad) xchg mov stos aam int3 cmp xchg aas adc andb jo movsl sbb adc mov rcl (bad) dec subb pop add cld push and or imul push ror push push in aaa roll add fist xchg mov or dec (bad) icebp jb dec xchg jno pop into add adc mov adc rorb xor jecxz xor inc in mov push xchg popf pop movsl push test pusha push cmpb cmp add clc imul movsb loope das mov pand dec dec rcrl sub and test rcll test dec ds mov pop leave xor mov out stos sbb fisubr sub ljmp mov lods mov mov fs test dec cmp xchg cld pop aaa rcr and or adc sub in inc pop ljmp mov dec inc test jns dec sbb loope mov pop mov sti addr16 out mov add jbe adc repnz popf push sbb push dec lods inc adc add push call cmp test push pop ja mov push cld and mov and adc das xlat cwtl adc dec xor cld xor inc int3 into insb (bad) mov je enter mov jecxz or push sub test mov pusha (bad) adc push dec push movsl rorb sbb lret mov xor mov mov jbe mov jl scas inc loope add pushf mov mov fs addr16 xchg cwtl and push or add imul mov xor icebp xchg pusha mov add les fild xchg pop ja in and out clc sahf pop stos into imul push lret es add mov mov push cld jle xchg dec mov fwait pushf add imul push stos pushf test jmp inc add loope fstl cmpsl mov (bad) call jl orl fwait inc mov (bad) jo push daa push sub and jmp adc icebp pop pop mov adc fistpll push cld adc ja pop aam (bad) mov add inc inc arpl inc stos sbb pop mov stos pop add jne xorb pop test mov and popa pop lods loopne movsl and jb or sbb je icebp add int3 inc mov (bad) pop loopne insl and popf jg sbb dec inc sbb jl or nop test add add rcl inc orb and xchg js out mov adc cmp adc popa cmpb movsb or cld pop add rol mov cmp aaa adc xchg andb xor cmp adc stos ficom inc mov int3 insb nop mov xor adc frstor mov pop push imul dec mov std adc movsb jno (bad) sbb sub add add mov imul or cwtl add call pop fldl notb sbb add popa xchg mov jbe nop sbb xchg sbb ja xchg cmp sub mov or add pop jae or or arpl adc test (bad) add iret dec das xchg in rol test xchg add push sbb mov mov push jbe jge adc int adc lahf cwtl push mov (bad) xor loop mov jno cmp aam pushf adc pop jl add icebp in cmpsl pop (bad) cmc pop adc add xor sub lock jecxz push mov cmpsl icebp push adc cmp (bad) push pop scas add xor mov mov aam loop je scas repnz sbb (bad) divb cmp sub mov jl mov push setg jo xchg popa test and xchg mov sub sbb nop subb pop (bad) xor in dec loopne adc out and mov lock je in push pop dec repnz dec jns or jmp and cmp testl cltd rcrb or adc (bad) out fisub sti int3 (bad) pusha iret adc in fdivrl (bad) adc adc fsubl add ret adc fcmovnb aam movsb popf std leave xor jp movswl or sbb (bad) push movsl test imul dec ret sub push (bad) push ret jmp mov mov mov pop pop fsubrs sub xor es stc lock adc cmp cmp dec pusha ret sbb in fisub dec int3 sub fs inc jp and movsb cld or inc add (bad) pop pop mov call sarb fs or pushf lds insb xor jge icebp pushf aad lret dec sti int xor sbb std xor test or inc icebp mov dec nop insb mov test pop jae mov aaa arpl jb pop clc je cld or cwtl (bad) add sbb cmp pop jle jne mov and dec push insb cmp cmp (bad) or mov jp imul push popf xchg inc adc push inc fisttp mov push (bad) push inc stc jae mov rcr cmp and shll lcall cmp lods into and (bad) shll cld cltd adc jno inc sti loopne pop sbb xchg xchg repnz int3 inc cmpsb sbb ds lahf aaa mov mov add and cmp or fsts mov push loope cmpsb mov nop stc add popf pop pop fnstenv movsb (bad) pmovmskb pop add mov lar cmc xchg pop les push adc loopne sub dec pop sbb movsl rorb jmp push or insb loopne or mov and push insb pop or adc or push pop fcmovnbe (bad) add pop sbb pop jns xchg push or (bad) xchg sahf and mov nop hlt xor faddl sbb and add test and gs xchg pop aas mov sub hlt adc out nop add call add adc mov lods cmp and mov nop popf lret (bad) mov and adc add cmove inc mov cli pusha in sub idiv mov popa stc add out inc xchg cmp sbb mov and cmpsl outsb in dec push or insb mov inc dec (bad) jo lds and outsb and mov add sahf loop sbb in sub orb orl or inc scas adc or push mov test push adc cmp fsubl xchg mov xchg pop add dec pop push mov daa mov sub arpl mov jecxz ret lret (bad) adc dec xchg (bad) cmp (bad) xchg xchg test ret pop cmp inc push add lret and lock push mov leave nop push cmpb xor insb fadds inc fwait jl sbb mov pop test sbb cmp lds cmpsb push std outsl inc sub pop push (bad) jbe loop push mov (bad) rolb icebp dec roll test int3 inc test seto pop cmp jb cld lret mov fldt popa or dec sar adc xchg cmpsb mov mov mov fdivrs mov jb or sahf xchg out mov sarl int3 fs pusha mov scas cltd std mov mov xchg lret sub mov cs (bad) int3 dec cwtl mov jge fs pop dec adc loope and jae jo jo pop fildll mov pop sahf sub pushf mov cmp shlb jo jp cmp lcall and sub sub dec mov rorb rolb adc adc daa adc mov jb (bad) pop sbb popf mov sub cmp je push sbb js adc movl je and cli lea fmul cld ljmp daa enter dec mov jne nop in das adc cmp mov rorl nop add fnstsw jp popf adc std fs lcall add fcoms sub sub pop adc xor movsl xor dec mov insl jmp sub xchg int3 sbb nop or cwtl pop jb or mov lcall (bad) dec std daa pop repnz lods inc mov rcll ret das fsubs cmp ja pop adc mov sbb add xor lahf rorb out mov shrl fmuls mov decl out sbb lock mov (bad) cmp dec and adc fmul xchg imul mov pop cmpl cmp jne or cmp fildll stos scas sbb inc or lock add xchg rol pop add stos pop sbb or dec inc push jle add nop mov gs mov inc out sar popf add test rolb and jge ja in add icebp and xor punpckhbw leave inc pop lods rcr inc xor mov push jge iret imul (bad) mov pop dec fyl2xp1 pop jbe add mov aas clc std punpcklbw push jecxz nop icebp jae leave push ja std cmp loopne push out cmp insl push fisubrl lret cwtl loopne xor mov cmc sti shrb jbe clc fwait mov xlat je xor arpl pop test icebp add popa test out inc mov mov xchg icebp inc inc (bad) arpl pop push jb pop push xor add lea stos xor mov sbb sbb inc mov inc fisubrl or sti inc lods add (bad) shll xchg or (bad) repnz xor xchg push mov sub sub test popf fisttpll hlt xor jo sub adc fs pop sbb push cmpl les in dec call aas xor mov addr16 pop jns mov dec fdivrl cmp or sbb dec push xchg add aas inc nop sbb pop pop test icebp inc and (bad) sbb bound and fdivrs outsb movsl aad push fdivl idivl adc fildll and int3 mov in cmp mov xor sbb icebp and insl js mov dec mov xchg rclb imul sbbl xchg repnz sbb xorb nop sti adc mov je mov enter rclb sbb mov pop inc and shll fmuls jmp and imul insb dec xorb movsl mov mov add imul sbb or adc push pop popf sarb mov fisttp cwtl cwtl jnp push out jae xchg test hlt into xchg add xor cmp inc addr16 cli rorb add lret jl add pusha cli (bad) xchg out stc neg out cmp xchg in mov dec xlat cld and je jnp dec ss xchg jmp mov push add (bad) aaa mov jo adc xor cmp pop inc test push lods or push fs pop popa dec dec push loopne fs jne xchg push in adc mov sub cmp cld rcrb (bad) stc pushf inc jo imul ja xor push aam and cmpl addr16 (bad) pusha pop andl (bad) sbb out test in popa inc popa cli add xchg xchg out jge mov (bad) lahf pusha dec out or or movsl loopne fmul rclb lock xchg int loope popf jle xor jp,pn sub or lds sbb inc sar add (bad) adc and mov fadds push push xchg mov xor or leave popf mov push or or cmp imul and int shl xor std pop add hlt adc dec ret sbb out int (bad) xor daa mov mov mov inc fimul jae dec pop cmpb add lret sub mov or jle and add lcall in imul push data16 add cld fmul subl push adc or lds dec jge mov sub and push cmp cltd insb cmpsb inc mov xlat mov adc clc pop cli loop outsb sbb out pusha (bad) cmc or rcr inc xor jns pop shll arpl or or outsl adc lods rolb xor jl mov pop dec sbb (bad) adc sub test mov fmul cwtl and in inc repz pop cltd dec mov adc push dec jp in or loop jmp and xchg test push enter mov adc ss sarb xor int out (bad) fs sbb sbb insl xchg sti icebp pusha cmp mov add (bad) pop fadd fistpll dec aad test adc dec call mov dec and cwtl pop mov or popf ret pop lcall cmp andl cmp add push xorl pop les cs (bad) inc mov inc pop mov enter push je,pn insb sbb es mov test mov stc gs jo out jge inc imul insl es test add or shrb stc mov push popa aad and jbe xchg mov fmuls push andl insl mov add jns inc pop jne xchg jo arpl (bad) xor xlat dec pop shlb sbb adc xor ljmp dec sbb es inc sub cld and jecxz add push cli cmpb mov leave sub push rorb jmp or pop out (bad) int3 (bad) es ljmp pushf and popf bound pop imul fs and mov or aas xor mov adc loopne jecxz pop mov fistp mov pop lret and insb xchg lods mov sub push cmp fldenv cmp or gs xchg test repz xor mov mov test mov xchg (bad) cmp add sbb and and dec pop adc test cwtl add std imul imul or lods subb jmp cmp xchg xlat xor fucomi ja aaa mov mov clc gs aad (bad) sub dec nop shll cld lcall jecxz mov test lcall imul outsl sub cmpb adc scas or repz insb out insb pop or xor sarb cmp xchg pop mov pop cwtl xor shlb (bad) mov test lea mov cld mov mov mov clc lods call pop rcll lcall shl stc out enter pop cmp out jnp inc pop ljmp out lret lods shll push mov je pop (bad) call bound nop and inc popf lods mov xchg sarb jnp sub in mov roll fiaddl hlt and pop ficoml clc pop stc sub cmpsl (bad) pusha jp push push lret sbb inc sbb xchg in push jl add jne push inc pop dec sub xor loopne enter add rcrb and fimull pusha lahf cs andb pop icebp rol mov cli js daa lods push nop jl aam aas cmp rcr cmp dec sbb push or stc icebp cmp and sbb data16 fsubl sub xor inc sub mov bound sub loop negl in orb pop movsb dec inc movsb or ret inc in int3 dec pop les inc inc push pop or and and xchg mov test cmc loop sbb add mov pop push mov mov fsubrl adc nop cmp lahf lret add (bad) test add fnop les sub insb dec pop and push lods and inc call adc xchg push add mov mov js fmul nop mov mov sbb aaa fildll xor inc push xor rep jo int mov adc lcall out lods xchg cmp cmp pusha pop add movsb (bad) out cmp rolb jecxz pop (bad) scas mov leave ja mov pop xor movsb fs or xor ret cltd mov mov movsb xchg sub pop addb nop sbbb adc jle lret add lea cld mov and sahf xchg rcl sub adc sbb (bad) mov xchg insb jecxz decb rclb cmc jecxz cld jno repnz jp cmpsl aam pop sub bound add lods sahf pop adc sub push lret jns push inc adc xor test data16 js mov jge mov cmp add mov andl or ret fcomp mov pusha lock or cli pop inc les and cmp sub adc pop add sbb xchg push add pusha mull ret or test sub jne cli nop inc (bad) sbb je sbb jge inc lods lcall and shlb nop test mov stos adc push cld jmp dec cld xchg fs loope sub add push out punpcklwd rolb fidivrl shrb clc pop inc sbb add xchg sti lcall xchg dec mov push insl pusha pop jo in cmp push xchg in sub insb add (bad) mov in mov sbb pop ja sbb adc icebp lods mov leave and jle adc outsl add adc es test nop add or mov dec and mov and aas cwtl adc jl dec xor nop mov jb stos pop aad xor xchg sti repnz mov xchg (bad) lret xchg inc xchg mov hlt mov push or mov jo mov nop add mov add mov jp fmull loopne jmp subb and or dec dec push (bad) insb add mov in jg dec test loop add outsb jmp loopne test arpl movsl mov clc ret inc icebp lock pop sub pop jb xchg push (bad) inc or clc sbb icebp dec push pushf xchg rolb xchg cwtl movsl add xor or mov cs or leave test (bad) in (bad) movsb adc inc test cmp mov push inc mov and fmull xrelease xchg (bad) (bad) mov dec dec mov popf jo dec fs cmp (bad) repz push push movsb lods sub sub loopne mov ljmp pop mov jb mov push addl gs leave xchg jo test int push or fildl xchg xor lock mov sub mov jno add movsl in pop pop cltd mov cld pushf clc add cmp fiadd xchg xchg fs pop insb or pusha inc cmp mov pushf dec dec or pop xchg les fs cmp inc leave pop inc push push or push lods push pop sub (bad) mov pop push fmul test out pop xchg inc jae sbb xchg test call push jl ret sbb jnp jne and je cltd int3 dec inc add add lea enter cs and data16 or insb clc inc fmull lret mov ljmp sahf push cli xor (bad) mov jge cmp les dec inc adc pop mov daa rolb or push add divl ljmp out sub dec xor pop cmp pop mov aaa fisubl aad and fldenv js add idivb gs nop icebp stos fs sbb push pop add rcrb adc lcall inc push stc add sub pop mov sbb stc add shr push jo push ret xchg fstpl xchg mov es mull xchg aad jb loopne (bad) repnz sbb jbe (bad) imul sub adc lock cld mov inc hlt xor imul shlb call mov mov and jo cli add xor subb cmc or mov or mov fdivrs pop leave mov xor or or inc and std movsb add (bad) scas out enter adc pop jle mov adc in and mov or fimull mov mov stos jl sub xchg mov and xor mov xchg test inc dec sub es movsl jecxz out and add xor and iret adc cli fcomip call dec dec dec sarl pop hlt cmp (bad) xchg dec out pop mov mov ds in add xchg call lods cmp insb daa cwtl mov cmp mov push stos push lahf aam pushf faddl xor lret push or adc js int3 jl mov test and stos fdivrl pusha (bad) shr sahf out cli pop (bad) fadd loope js push mov mov pop cmp test in add testl cs dec jp insl jns clc aas dec xor leave mov push daa mov in inc mov add push ja add fistl and (bad) enter push mov es pop ss ret in fcmovbe hlt inc popf movsb or mov bound push cmp push addb mov lea xchg sub push mov lea inc loope mov pop cmp fcoms or faddl jle ss xchg pop pop xchg stc or call xor test cld add or xchg enter pop inc and xor loope outsb xor or jl adc mov add out sti pop pusha lock in and xor lods jns push (bad) hlt cld dec les adc cld push rolb sti test xchg movsb jno xchg adc dec in xor or and std repz fimull inc or rcrb je xor push and popa dec mov inc adc lret int3 pop jge dec std and shl orb xchg dec cmp xlat popf lods or stos xor jno sar mov xor mov cmp test xchg xor das and imulb jb nop jne cmovs fsubs mov rcrl mov cmp inc (bad) xchg and std and ja je xor clc pop stc divb cmp pop adc and (bad) mov jbe sbb lock fs pop pop js orl pop mov fcomp scas fdivs pop and sbb rclb mov fcoml rorl rcrb pop or insb out push push mov cli hlt test pop pop gs insl fs push clc adc iret dec and mov push insb xchg mov (bad) (bad) std xchg js cwtl test in test gs or jp add inc adc fidiv cmp mov movsb sbb xchg sti cmp add movsl rcl adc test flds fild (bad) cs mov jmp cmpsb aad add mov out cmp pop out cmp leave xor rclb mov inc dec jnp add or jae stos jno add xchg (bad) aas sub sbb cmp mov jne add mov ds inc loope out loopne test adc and repnz lods movsb (bad) add fwait outsb cmc add ds add dec je es jo icebp cmp hlt (bad) and popf scas pop pop add inc mov lret lds loop mov (bad) call aaa or sbb (bad) fisubrl bound add fstps cmc xor sub cld jae jno pop out mulb sub jo xchg sub cmp sbb stos inc adc jp mov js jo push cmp cmpb mov pop xor stc (bad) xlat add sbb add hlt jne mov cmp inc aaa ds (bad) fcomi stc das xchg mov cmp inc jno (bad) push xchg dec test (bad) mov inc add dec dec jmp popa inc shrl mov shr add sub sti shrl ljmp cmc push pop mov in fprem xchg mov inc addb rcrb and add cmp sub sub mov addr16 dec int pop mov rorl inc dec cmp jmp add lds sub cltd mov xor add adc pusha and push cwtl inc mov mov cmp cmp jmp mov mov cli stc pop adc pusha cmp sub inc mov xor dec mov cmpsl rclb jmp enter xchg and inc xlat inc push add sub inc loopne out (bad) pusha mov mov and add daa or inc mov dec mov adc or add fisubr sub in scas xor pop movsl rolb std fisttpl scas jge gs cmp lret xchg bound cltd test inc adcb or xor mov stos jno mov int3 inc mov dec adc xchg and dec test repz je cmp lds fsubrl push lods int lret dec in add xor std loopne hlt fs xor mov inc int3 jae and adc loop jb inc sbb and sbb (bad) movsb mov fs clc mov nop loopne push pop mov lret (bad) std add push pop cli andl adc (bad) mov mov pop loope or and lods sbb clc aaa movsl fstps divl test or mov lcall and and lret adc movsl push cmpsl or mov dec and test jb int3 xchg sbb fadds dec inc jecxz push pop aas sahf addr16 xor mov lret jno mov push and (bad) int3 inc xchg mov jge sbb inc jecxz aam fcomps (bad) dec cmp cmc or (bad) inc sbb test lret mov cmc mov ss inc cmp mov cmp dec sub push sbb in push fwait jae mov enter jl add out hlt or sti adc out xchg leave sbb fadds cmp mov jge jno scas jb add insb fcoml xor xchg xchg nop faddl and cmp pop push cwtl dec pusha pop cmp jbe mov push add mov xchg pop dec pop and mov enter lret cld pop push (bad) pusha pop lock xchg sbb dec addb jns test or and mov clc jecxz add lock (bad) rcll jmp mov aam lahf adc mov mov or jp add adc inc (bad) lock add xorl ljmp es (bad) or pop push (bad) cltd xchg mov pop sub sbb sbb enter and movsb stc inc and lret les xor ror ud2 outsb pop sti push sbb pusha mov ret cmc mov addr16 jne xchg mov test and popl pop cmpsb add out sbb negb aas mov dec call sbb movsb das pop jmp cmp push rclb sbb insb jne jo ret push cmp and loop xorb dec push sub outsl add pop jnp shr or or pop sub mov movl fbld int3 sbb insl add xlat and dec out xor mov and lea enter mov cwtl faddl into jge pop dec std and pop clc cmp add and divl loope fmuls loopne cli addr16 adc lret mov fdivl clc dec mov mov dec mov loopne jo dec js test je push or ds (bad) std ja add push out (bad) xchg inc aaa or add in addb aad in aam cmc popf (bad) rorb aas pop (bad) stos sbb cmp fild add les repz adcl leave in inc add add fimul or fcomps addb movsl scas mov adc xchg add add inc push sub pop dec add jbe cltd mov aam add in xchg (bad) xor add call (bad) sbb int3 (bad) outsl enter loopne inc out cltd dec or movsb sub add addr16 and add rcll pop enter jo pop cmp sub mov pushf inc imul pop sub imul dec jnp push adc add (bad) mov dec mov in sbb mov pop push scas aad cld jmp pushf push aaa inc mov hlt out enter (bad) mov out fs dec int3 jne xchg in adc add adc mov stos jne push mov xor ljmp sub icebp sti add pop and pusha out in insl sub lods sbb and cmc rorl test faddl adc jecxz xor mov dec notb mov adc inc cwtl or sbb add or ds stos ffree push xlat test pop nop pop mov cs subb add mov loope jns xor (bad) pop call add ja inc adc ds push ljmp (bad) (bad) cld xchg add dec fimul repnz mov sahf in sub fiaddl mov lahf inc or push push push mov push sub int3 stc pop mov jg in fdivrs movsl sbb lea outsl cmp test int3 flds aam add push and jae xchg cmp les inc and push rcrl mov pusha std pop cwtl push test pusha cmpsb mov pusha add inc out aaa adc jl in xchg fidiv popf and fsubrl mov (bad) mov pop add aam inc and or aas int mov add xchg and repz jo push ret or sarl add inc jl add lods bnd js inc fadds jge loopne push push adc movsb mov add jo xchg cmp test sub daa fst rcrl test jbe xor outsl (bad) hlt inc add add xchg inc cmpsb (bad) xorb bnd roll pusha mov add adc pusha pop sbb mov pushf adc (bad) or imulb fnstsw inc (bad) cmc popa ljmp sbb sbb je imul and cs enter or lock adc sub inc into cmp aam les (bad) or jl hlt sub test xchg aad lret and in xchg sbb or (bad) loop sbb push dec arpl or rolb jmp mov cld and inc bound push subb fcmovnb pop cwtl int3 add pushf and test sub rolb ja in pop jge fimull push xchg clc rclb cmc pop jb push xchg negb xlat lods and push fisubl js roll aam sub mov mov jge (bad) cmp cmpsb outsb mov sub mov jg fldl mov mov ret push scas mov jecxz xor fwait jle aas adc xchg call je push loopne sbb cmp and fs mov insl arpl ficompl pop add or push mov jl mov imul adc mov or mov lock dec add pop in mov (bad) jecxz (bad) xor ficom sub loopne pop repz cltd or lods mov mov nop or pusha or cmc cltd enter loopne adc in push rolb test clc (bad) addr16 lahf push and add mov in jne insb cli pop imul loope sub lahf insb js mov and xchg dec int3 rol jno sti sbb mov mov adcb pusha cmp and xlat jbe add clc fstpt cmp and sbb add cmp add dec mov dec or fsub js lods test pusha sub mov jge lock orb mov orb mov (bad) mov mov inc insb jo lcall inc js xchg mov jo adc push in je cmp fcomip or or pop mov pop jge mov jo test sub xchg outsl roll cmpl cwtl push mov decb mov add push insl xchg std sahf or push pop repz sbb add xor loopne (bad) jbe icebp xchg cmp or mov loopne out xor divl nop frstpm(287 mov mov sbbl ds jle test mov jns nop or sub mov inc xchg pop pop inc mov add mov or xchg stos js jg daa mov enter xchg lret hlt add int3 out fwait (bad) call add pop jbe pop add cmc pop inc cld mov pop add inc or push dec xor pop popa inc scas add dec test jp mov jge push out fsubrs push xor adc icebp inc inc test add lock lret js sbb imul pusha mov fbld loopne jns mov push lret orb mov rclb inc jno imul push aam lock sub sub shrl xchg mov (bad) leave lret jo loope jmp aaa mov fadd dec mov stc aas push call (bad) fdivrl stc add push xor lret lret shrl out mov adc fst jmp jecxz and clc loopne add or sbb dec mov daa add cld lret add push dec xchg xor aaa sub inc ljmp jb ds push bound dec inc faddl lock aad mov inc add lret pop cmc dec pop notb add adc nop pop out xchg jmp lock pop push ror test repnz dec add pop add jns lahf imul rcr xor pop mov pusha or lock incl es daa push mov insb leave and jns sub inc mov sti imul pop jmp and cmc repz xor push dec push lret adcl inc dec popf lods in popf xchg fdivrl loopne fadd and xchg in add add ret in dec pop or imul xchg cmp int3 push xchg sbb test (bad) xor mov aam mov lock stos pop ficoml loop (bad) jg pop pushf inc daa loop push and int3 or pop rol mov add push sbb incb fmull rorl shrb enter aaa and and mov bound mov jns cli pop rcrb lret fcomps mov sub cmpb sub sub push das icebp ret movsb or sub je (bad) mov xchg and mov daa ror and jnp insl cli cld pop pop idivl lcall imul loopne (bad) dec (bad) mov test jno fldenv fadds or mov movsb cli sub mov cmp inc adc rorb clc rolb or push nop mov notl or fcomp popa dec add imul mov loopne test pop fcoms pop ret loope push gs inc push nop mov fsubl fildl pop mov sbb xchg jge loop add xchg or stos inc nop cli lcall test std sbb or std fwait mov and mov cmp leave or add xorl and clc pop push pushf add pop push dec out dec dec add jge (bad) shrb (bad) add pushf (bad) fidivl xchg popa cld shr popa and pusha add adc cmc faddl xchg mov loopne test jae dec add addr16 pop or cmp push dec in cli faddl loope out (bad) iret jne outsb add xchg movsb dec or dec or mov nop loopne adc mov popl and xlat add jbe xor pop jb jno or push ret and mov idiv mov pop dec and (bad) loope sbb ret (bad) inc pop fsubs les test and sub (bad) mov add xchg and in insb add xor js or add testb in movsl stc fucompp xchg scas adc loopne pop mov mov xor pusha out adc and rcrl jle lea fmull inc push push ror inc pop sbb sub dec shlb add and pop roll cli sahf in in xchg xlat and push push loope and or inc add je mov xchg add (bad) jae adc sbb pop je add push and test shr bound mov xchg and (bad) pop rolb xchg xor xor add pusha jno (bad) je jbe jno mov jp popa std xor jb cmpb or je test add mov add push fdivr pop pop add les popl fsubrl mulb add jg insl add or movups lock fnsave add adc or (bad) add ds sub call mov push and loope pop cmp cld adcb aad clc push insb cmp mov xchg ja lods pop jl add into push or add or mov aad inc das push cmc mov xor lcall movsl or lods jg ja test inc rol icebp dec xorb pop js xlat xchg or push aaa cmc in fsubrs adc inc sbb adc sub and dec mov orl jb dec loopne cmpsb cwtl popa (bad) sub xor cwtl idivb repz fisttpll roll call sarb add insb cmp jmp int3 ja add stos or lret iret add mov test loope cli jle sbb in out movsl sub add lea adc add daa cmc adc int cmp mov ja gs adc add cwtl movsb xchg nop adc shrl cmpsb imul test adc pop imul mov pusha pop cmc sub pop cld add adc les cmpsb mov xor call (bad) cld or aam dec dec aad in push pop pop stos ja cmp sbb les in push test mov add push stc call cmc sub cmp push add and xor dec ret test loope js mov cmc dec dec push aad adcl or fnop mov xchg sbb cwtl and mov shr pop (bad) sarb inc sarb in cmp loopne aas sbb xlat cmpsb add pop decb sub movsl movb ret aam loop add gs mov jmp fldl sbb xor lahf addl sarl xor jmp xchg pop stc pop cli pop std push hlt subb inc rol mov add out pop inc movsb xchg xchg in in pushf pusha add and dec jnp arpl repnz jae xor rcll stos xor push or and adc xor cmp jecxz push fistl cmp and fwait nop into add dec sub rorb jb les out mov sub dec stc outsl adc setnp std or push shlb dec stos bound and movsl xor xor jns fidivl cs jmp stc sbbb arpl rolb insl outsb sub dec ss fsubl mov mov fstpl add push mov loope push or test movsb arpl fcompl jnp add lret (bad) shrb sahf pop cwtl enter loopne mov cmpl add (bad) add imul add ret dec push dec and add jb ljmp in sub inc add lea inc jge push ret (bad) movsb iret cmpb push fwait mov mov jb cmpsb inc popf adc dec loopne fiaddl push ret xor dec or pop add xor and test xchg je arpl sbb (bad) test xchg popa add cmp cwtl sbb nop adc scas dec push out xchg loope ljmp push loop sbbb sub lea es mov and dec sbb inc shrb (bad) ljmp sbb (bad) (bad) fucomip in xor mov loope mov mov popa xor mov add smsw clc add and repz fild jno call js (bad) loopne sub jo add lahf ljmp sub mov and ja sbb fstpl bts inc dec hlt es mov push insb ret shr sbb cmp pop adc adc add ret test testl (bad) out adc mov sbb xchg mov sub mov dec sub jecxz insb push testl mov and add js jbe andb lods jbe test add repnz lcall and mov add lock inc mov xchg fmul push notl mov xor lock scas jg xchg fs lods push out dec mov cmp dec mov and sahf or fcomip jno adc sbbb mov adc lcall jg loop (bad) mov sub fwait add pop mov sbb and push xchg pop inc xchg loopne xchg (bad) xor enter pop mov movsb lock dec (bad) in jo leave adc cmp ret jg cmp sahf xchg cmp lcall std ja sbb in (bad) jno xchg pop roll adc fisub scas inc push or pop and addb push (bad) cmp flds addr16 std outsl xor add and testb push mov xchg test xor inc jno mov add and fcompl jg xchg mov arpl clc push sbb xchg mov mov and or (bad) xchg cmp dec or in mov inc inc jg cmp aaa and sbb cwtl into dec or adc mov inc add mov cmp push add test cwtl xor adc dec fmul xchg or cwtl sub adc cmpsl add jb cmp sub stos out push (bad) mov and sub dec test ja adc or sub rcrl sub jo fisttp adc mov jl adc in mov adc jg sub lcall inc cmp les or jg mov out clc adc aam mov sbb add mov xor add and or mov mov push pop add add push sbb ds orb out cld fnstenv xor dec shr mov and scas pop or and js dec jp fdivl test pusha ret mov xor fsub cmp loop pop in incl js push push bound mov movsb or es (bad) jns adc clc ret xchg add call ds xchg imul add gs adcb add push xor cli mov push sbb mov mov cmp (bad) notl push push imul pop call js scas push pusha shrb mov jnp xor mov mov cmpb or xchg shlb adc sub mov jecxz add loop (bad) sbb movsl sub or mov push mov pusha (bad) lock int3 (bad) sub into xchg popf call scas (bad) (bad) mov xchg sbb jle push mov divb stos or push sahf jge lds cmc test mov mov sub push mov pusha test loopne push lock popa and or lds rorl cmpb add lods cltd or icebp pop ret jns or lds repz xchg push les pop pop sbb mov dec pop add adc and push adc data16 xchg lock movsb lea rolb cmp or insb (bad) add cmp in call pop dec push pop push push in mov adc jbe add cmp adc add test push mov test lds pushf mov (bad) movsl es rcrl aad daa enter lds add pop test push push push mov and push imul and push pop sub pop test rcll movsl jb pop inc or int3 jne inc cld or push or or or jl lock les dec mov shlb xor test add (bad) adc js push pusha pop xchg pop test jo int3 add push pop movsb sbb adc add fwait dec cmp jo lods push and test xchg add leave push add rcrb mov rclb mov test pop cmpsb std loopne push ss stc sbb add shlb test ss xorl mov fwait jno add (bad) and rolb push lods mov int pop pop push xchg xorl addr16 dec cmpb adc add cmp cwtl xchg xchg mov inc sbb xchg inc push sbb pop pushf xor mov push push add jle or out dec mov push shlb cld mov jno out dec outsb rclb mov push push (bad) push nop xchg cvtpi2ps add insb or add inc cwtl push lds inc push test rsqrtps shll out jle (bad) sbb pushf inc adc subb into mov cmp dec add stos imulb fdivrl sbbb cmpsb in cwtl and mov or pop sub pop xor cwtl adc add insb (bad) lock mov push stos add add imul add mov push int3 hlt jmp jae push repz and mov inc and cmp rcll add into inc inc fs inc shrl xor xchg push test push adcl out add push inc in (bad) pop jno push add lret mov (bad) ss adc sub adc dec pcmpgtw movsb adc loop jns pop lret push ljmp mov jge cwtl fstps mov fild rcll xor in and roll addb add cmp orb mov sarb adc jae clc lcall add xor outsw push inc push movsb jle and addl popa movsb add cmp pusha and push int jl pusha mov cwtl xor push jge sbb cwtl aam arpl dec or adc or out jns sbb jnp or aaa push ja cmc or test outsl cmp pop movsl mov cmp cmp add push call js inc push add mov add inc fstl movsl nop push add iret jle pop inc and ss mov out shrb mov subb jge dec dec out mov js inc pop push mov mov xchg mov in xchg push mov and jle (bad) mov adc mov call cli insb out enter js test (bad) bound or leave cmpsl je data16 adc rcrl subl push push loop sub pop add leave sbb and xchg test mov cld or jnp (bad) fcmovnu add mov add sub add cmpsl (bad) ljmp mov add mov sbb test adc mov sbb aas add xchg push pusha call ss rclb faddl inc fwait pop neg pop add outsb jg popa arpl in or inc in es mov pop sahf aam addr16 mov add shll sub cwtl adc or data16 test pop pop push fs hlt jae xor stos push cmc lret pusha push cmp xchg or sub jle int3 xorb enter push pop mov or xor cli popa (bad) jo pop inc mov lock xlat xor xor jge aad movsl push fwait xor leave mov fiadd add xor mov and jle or pop aas cmp out xorb sub bound test lods cmp add test sub hlt adc sbb or and in enter push iret mov inc xlat scas xor or jmp repnz mov and sub xchg xchg and add xor mov pop cmp inc lahf inc out sub mov add jle lods or sub push (bad) xchg add nop test lods xchg clc cltd add pop push jge jae mov les jne adc cld jns (bad) fwait repz cmpsl push es (bad) and push add ja xchg clc lods push adcl xor jae mov mov sbb iret ja into in jnp and ret and rolb enter and les sbb jg shll push loopne mov sbb xlat fs sub pop jae cmpsl stc movsl aas repz xchg pop sub (bad) mov mov stc cltd xor or mov sarb xchg jmp outsl and jge mov add mov aad sahf mov pushf inc or xchg popf aad and or data16 xchg mov aam fcoms xorb addr16 xchg test and iret or adcl push loopne mov add mov aam add test (bad) mov sar js (bad) sahf dec adcl leave add mov mov clc in call js popa cmpsl stos add dec push mov pop pop and sbb pop xor and adc and enter mov dec rclb in push xchg xor clc push data16 adc cmp (bad) xchg or sub or test pusha or xor jae xor pushf sub cmp jne adc in fsubl js fmull xor mov outsl scas add test inc and push les js or push dec call xchg fistl add mov cmp (bad) push sub lret sbb mov test or sarl roll nop mov dec mov xor mov int3 cmpsb call imul ljmp xor or cmp (bad) aas enter fildl mov mov jl sbb lods popa xor add jecxz mov xor inc adc jp pop test outsb xchg pop xor cli (bad) pusha push pop add scas push leave ljmp mov mov add ret mov sbb call les add sbb xchg adcl mov mov mov and mov mov lea aas inc sub fstps inc lods or test pop mov push outsl fdiv adc scas je scas xor and fcoml jne mov inc jnp jbe xchg mov xor mov push test inc xor xor fldl mov sbb aas clc jle adc cmpsb dec roll jno ret sarb and and popf inc cmp sub lods sarl cmpsl loopne aam xor add and in jne and lods push andl (bad) call pop fsubrl push mov inc jmp nop or lcall shrb imul inc or call test add or dec nop push and aas jle add mov xor mov and pop ret jno enter push fisttp hlt cmp sbb sbb cmp adc and lods mov jge shl dec xor jo aas push in lods inc cwtl cmp adc andl cmp out insl pop cmovg inc or adc and (bad) adc test fdivs mov add mov push sub cmp xor pusha push or in sub pusha psubusw or subb test dec jmp cmpsl sbb inc ror xchg mov sub out inc xchg cmc or adc shrl mov nop rorb lods stc mov xchg and add andl cwtl push nop add rcrb sbb je fiaddl loopne mov and fs cld or insl xchg or or fucomip js bnd mov fwait (bad) (bad) repz xchg xorl shr test xchg rcll call jmp pop js xor mov cmpsl pop add cmp inc xor dec fidivr and adc or jl sub sbb jge sub addb mov xchg (bad) sub sbbb shr jns cmpsb lcall inc fisubr or out lock jb mov in cltd pop icebp rcrl outsb xor loopne inc fistpl xchg (bad) repnz mov addr16 pop sub xchg jo pusha mov popa or (bad) shl call pop lods pop push jmp pop test add sub loop add push push cltd lret orl or dec dec insb inc sub dec jmp or mov xor loop mov add and test (bad) or mov push jns and mov shll mov pusha jmp mov cwtl jl xor rcrl rolb loop cmpb into lods hlt int scas aaa cld test sbbb gs mov sarb dec adc imul cmp or inc mov leave (bad) insb daa in adcb and inc adc xchg outsl and movsl into jp or xchg add adc les enter cmpsb int rolb cmp lret xor js jb adc fcmovbe enter hlt inc enter ss aaa loope loope fcmovnbe add sahf dec and clc adc dec and hlt out xor lock xadd ret test jne outsl test mov add clc jno mov jb lods out sub hlt dec mov mov in sbb movsb lock nop jne notl test fbld cmp cld push xchg aas sbb or nop sbb imul sbb jo push jg mov add xchg bound pop ret and or (bad) (bad) sub mov xor push fs or pop test xor cltd lock out mov rorb xor jg inc testb add imul inc dec stos xchg in push loope add popa mov cmp loope xorb mov pop cltd sbb sub sub (bad) pusha dec bound and mov pop pop mov xchg mov push add daa dec aam ss dec loopne adc adc dec int3 xchg jle sbbl cmpsb addl subb ds jl sbb aas or jg fildl pop lret les and mov ret sbb pushf sbb sahf (bad) cmovbe xchg xor movsb sbb inc pop xchg inc mov add (bad) xor aam push rolb lret adc or shr xchg xor push in mov in ret dec xor je and enter mov inc fcmovbe inc shrl ret out xor inc inc and mov xor imul js out (bad) mov pop les outsb push enter test je mov cmpsb fwait (bad) int3 adc fs into xorb enter xorl icebp sar xor lds inc (bad) and loop rclb gs xor dec fdivs add mov test mov stos lcall xchg cmp mov add add sbb inc inc andl push dec fs mov (bad) cli add test jge add push data16 mov adc pushf mov adc and xchg add dec mov jl (bad) cmp push icebp test cwtl push sub sbb in lock (bad) mov or aas mov sbb rclb push hlt inc in out inc adc scas inc test xchg mov mov push sub addr16 jle (bad) shlb movb fucomi stc call dec jmp rcrb lods cmp adc dec add loopne push insb cs frstor shlb sub gs int sbb int3 mov and add xor loopne cmp mov cltd mov jo in inc movsb or push mov mov roll pop fnstsw stc stos lock int inc inc or inc xor jb inc dec sbb clc jns addr16 sub dec aam xchg stos daa icebp mov mov and mov push sbb sbbl push into or pop pop cmp cli rep mov out inc mov inc and dec call jno rorb dec xor xchg pusha or or inc dec push sbb xor cmp inc js fistpl (bad) jg (bad) sti les movsb mov faddl sti pop cmp fdivl mov lahf xchg sarb loope sbb rorl call call add fwait jmp clc inc pop insb jns sub mov into jp xor pop xor loop pusha cmp and or sbb in mov sub mov je,pn inc jo loopne stc adc pop mov and shlb or fs out jge pusha sahf jl sahf jge in adc and out inc cmp in xor xor cmc or hlt cld ja pop pop mov push add hlt ficoml stos movsb push mov pop sbb cltd cmp jne stos dec (bad) hlt lret add out mov sbb test pop sub cmp repnz mov mov fadd adc sub sub movb mov fmull push mov (bad) jl stos and cwtl or cmp adc idivb dec ret push lock insl push push jl add cmp cmp push call mov pop pushf adc inc cmp in xchg push cld adc push ficompl data16 loopne mov xor dec lret push mov (bad) andl std aas cmpl jl adc dec sbb hlt test sub dec inc xorb adc mov inc rorl jae adc sbb daa pop nop xlat add mov mov rolb add sbb int3 lds sbb sbb xor es test dec pop add adc add aam jmp (bad) add jo loope rcl sbb or or dec add enter and loope mov sub cwtl sbb call mov adc pop or in dec inc mov mov cmpsb mov inc sbb inc xchg repz mov icebp cltd dec mov xor sub std xor adc dec or inc mov or loop mov pop push jbe (bad) sub fiadd pop pop repnz sub stos and inc push adc mov adc cmp cld mov inc pop jb add and xor add jo or dec xor mov sbb ret pop push (bad) faddl cmp cmc mov in rolb pop inc sub stos jmp sub pop in rclb outsb jp negb cld lock jle aaa insl in push pop xchg sub sbb jno xor sub cltd inc sub cmp jge adc hlt (bad) fistpl out addr16 andl fwait inc add cmp cmp pusha adc mov lds push fsubs fsubl (bad) or jo loop sahf fs (bad) and add test xchg mov mov mov test push or cmp add in call adc jo pop mov add mov add sbb movsl xchg add out ljmp lret dec adc mov add mov nop xor xchg pop adc push cmp insl jl inc loope cld push test sarb dec inc sub js sub subl mov pushf cmp fwait movsl cld or push or xchg xor cli rolb loop xchg inc cltd pop xor and fsubs xor fnstsw and sbb mov mov sbb adc ficomp test je shrl lret nop adc or jle in adc mov stos pop arpl mov sbb add cmpsb adc mov out push cld paddb jno jo mov adc or ret ja and add popa xor mov mov mov jo cwtl xor jne cmp push dec push leave repnz in xor imul jnp ret dec in aam iret mov adc jns mov add (bad) repz ror xor jg or icebp sbb adc mov movsb aad mov imul pop sar cmp fisub daa nop hlt push inc add repz int pop sub mov test fprem1 add mov das jo xchg add (bad) and inc ss (bad) jo pushf call bound or inc iret xchg leave in dec je adc mov and push psrld fsubr popl dec repnz inc jecxz fsubrl xor (bad) in in lods (bad) mov and les vpmaddwd hlt mov das and adc jecxz repnz add mov pusha mov and mov bound repnz dec dec addr16 adc fnstenv xor or mov test ret fcomps loopne (bad) int3 add inc add or adc fwait mov xchg outsl mov add xor adc sub push xor jo inc and mov scas fsubs inc mov xorb jnp dec enter pop aam jle xchg dec push movsl pop mov inc nop clc test imul sub fdivl dec es and (bad) mov jmp enter or jns xchg push icebp icebp inc pusha inc dec test notb jb and xchg arpl dec (bad) mov les in or and mov ret sbb sbb dec mov jl mov leave mov test sub pushf aad add fcomps ret stos loope push and add inc cmp rolb adc pop fldlg2 pop pop cmpsl and (bad) scas jmp add mov push mov dec sbb jo aam negb sbb xchg xor xlat and or icebp adc adc inc lock jl xor mov mov inc push sbb dec adc push add int xchg enter and dec mov enter push lods inc mov mov dec addl jge adc mov push or pusha jg imul test pop lcall sbb scas lods xchg cmp jb dec pop je cmp or aam lods repnz or add sbb jmp mov inc and mov add xor jbe mov fisubr or cmp repz push lods jmp and inc test or pop std jo inc les sarb cltd pop (bad) scas setle aam in mov sbb mov push fstpl aad shrb cwtl cwtl dec cmc xor mov test fnop int3 mov adc add adc sbb cmp pop in ret lea call xchg dec loop stc or xchg sub jne daa jl mov rolb pop loop cwtl sbb fwait xor mov mov movsb add jae das mov pop mov cli pushf (bad) xor cmp mov sarb sub jl aas xchg les dec repz and into jl add and loop pushf shrb orl add popa jl add and push add les inc lods stc out mov mov jb mov out sahf xchg pop xchg in sub mov js xchg add loopne sbb xchg out fisub out push addr16 pop mov push ljmp push xchg loopne cmpb aad push lods mov icebp out mov (bad) sbb adc popa ds pushf mov push hlt or addr16 out mov add sbb inc dec nop sub dec jmp inc jo sbb pushf loop rorl lcall mov adc in push call pop cld add (bad) lock push sub adc loope dec adc loop pushf lods cmp xlat lock pop sbb icebp adc sub pop add iret pop jmp inc inc enter inc cmp stos addl sti mov jo aaa stos push push adc push push dec jge or nop stc add pop add or loope xchg stos dec ljmp and add mov adc inc xchg push andb mov repz pushf out testb or (bad) cld and fiadd add roll jle dec inc stc sub test lds (bad) sbb jno out loope xor stos outsb dec xchg mov inc imulb push sahf fisubl pop loopne stos adcb sub and test mov push and clc dec or pop fwait stos sbb pushf incb mov stc pop les add push lret call or imulb movsb mov push sbb popa xor jnp cli jmp pop into pop sbb adc pusha mov pop jno cltd std scas add push rcll push cmpsb add sub popf mov dec inc jno add push stos mov or hlt xchg add ss and mov or push add xor lret mov adc and pop jecxz push jo arpl in cld dec pusha and sbb push ret add lcall dec loop sbb fidivl inc rorb pusha push cmp repnz inc mov cltd pop cmp pop push push sbb adc orl xor lcall cwtl stos stc adc add (bad) aaa xchg xor add and das fsubs (bad) sbb xchg in inc ret mov dec lcall xchg or test jne int3 lods js mov cmp fnstenv dec add mov xchg push test xchg xchg insb addl imulb pop mov xchg push shll mov and pop and fs cwtl add dec ljmp lea add test cmp pop xchg pop mov add cmp adc nop cmp pusha sub mov movb stc mov cmp adc xor or jl dec mov adc inc popf arpl sbb mov dec addb loopne mov sub push es std or les add push sarb cwtl in dec fmulp and add call inc dec xor ss pop iret sub jnp add mov or adc mov sub lods add cltd cmpsl mov mov fs jmp adcb (bad) (bad) and mov or cmpsl xorl push xchg xor (bad) cwtl je sbb and imul inc daa dec cltd shlb add mov arpl and daa nop pop or lret sbb mov add sbb xor xor cld out (bad) mov mov inc cmp (bad) les lods pop or into pop mov (bad) cmc push mov add xor frstor pop (bad) add rcrl or and xchg out mov decl push imul imul ret xchg je sub push fnstcw mov sub inc pushf mov scas jns and push hlt dec hlt add scas (bad) rcll add jns inc addr16 mov cmp pop adc push stc dec or enter xchg fmull push mov lret cmp push add fdiv cwtl sbb popa and adc jecxz and loopne leave fiadd push fwait popf inc pop add push add sub hlt add or push sar test loopne mov dec adc stos loop inc adc pop jl dec loop inc (bad) mov xor mov and test dec sbb flds fcomip cltd cmp mov jg sub clc hlt xchg cwtl cmpsl dec aam pop addb insl or xor les cmp sub arpl sub mov dec mov cmpsl jo test push mov psubb mov add bound mov xchg inc inc push lret dec iret inc mov imul fcomps mov icebp nop in pop insb test into in popa loopne adc mov arpl fsubrl jge jge in mov add push xor movsb lock adc or les add sahf push add dec push cwtl enter or dec lods pop mov push pop cmp test in rcll xchg pop and bound xor test inc sbb (bad) repz fdivs ficomp inc fstps in iret lcall test and mov pop lods stos dec mov push les dec push bswap int3 pushf xor (bad) jge nop popa push pop mov xchg xchg push adc arpl lock dec jmp subl inc mov jmp mov int3 jge sbb cld sbbl jbe (bad) in add insb or sahf insb add mov fcoms adc xor dec frndint adc cmp frstor (bad) inc xchg (bad) mov (bad) adc mov in gs add movsb cs mov or inc cwtl jno push lods icebp sub enter gs enter inc arpl pop lret testl pop xrelease push cwtl in pop push and movl fdivrp out mov ret or rcr jmp sahf pop test xchg pop in xor xchg loopne addb ja in inc cmpsl jge popf sbb dec dec (bad) divl sbb sti adc and hlt dec jo mov je xor mov in xchg flds sub xchg cmc xor rolb (bad) inc icebp iret in or inc test sub test ss rcll imul cli lods call push popf fs mov add movsb mov shl stos mov cld mov rorb add dec std pusha cmp adc or nop cmpsl inc dec jo push push jecxz mov jl in xchg inc jmp sbbb ficomp adcl push enter mov pushf fisttpl xchg (bad) push and leave push clc push (bad) pop mov adc in orl repnz cmp stc jo movsb jbe or jl and xchg push pushf push sbb jle test dec fnop xchg fsubs inc cmpb outsb xchg mov movsl xchg inc add sti (bad) dec stos cmp dec rcl adc cmp js sub fidivrl test inc fsub mov imul mov je aam test mov dec and imul jl dec adc dec cmpsb fdivl test fldt add sub sbb aad pusha sbb stos push push pop rcll cmpsl scas xchg jl inc in imul mov fbld add popf mov mov inc push repz sub jle push movsl test das push dec adc testb jns sub xchg ficomp push je lods add mov mov or mov xorl add cltd sarl add or push (bad) je pop or pop sbb pop stc cmp ficom lcall cmp mov cmp fild xchg or fild (bad) dec inc mov inc cs stos push dec sbb jl and in popa adc movsb inc mov or (bad) lock add not pop pop pop push leave lods cmpsl inc mov int mov pop jl je into aaa cmpsl pop mov sub test xchg loopne and add (bad) addl jb dec jmp xor call bound mov xchg mov in mov mov scas repz push xlat and sub (bad) mov push jno hlt pop cmpsb loopne pushf sbb jecxz outsl andb mov int3 data16 sbb movsb add (bad) cmp mov in shrb add repnz pop icebp cld rorb xor and lret mov push scas pop pop pop daa (bad) lret inc test sbb sbbb dec pop fstps stos dec call sub ljmp add (bad) and jns lcall movntq mov mov sub xchg enter fs (bad) (bad) xorb outsb push aaa mov add int3 add pop loopne aaa cmpsl mov adc pushf mov out xorb xchg add pop sub inc dec shlb sbb loopne inc dec stos scas adcb pop jo or mov sbb pop test lock add arpl iret adc and adc mov adc icebp je dec lods add pop cmc add stos dec in or gs xor sub add lcall dec inc js js aas (bad) push call loopne scas push sarl movsb xlat or test cmp fmul (bad) mov test out xlat jne out add dec jnp arpl mull dec push fprem and or leave adc addb sub jle fcompl dec dec jecxz jg inc jb add mov sbb ljmp mov clc and inc jecxz sub popa sub mov andl xor sub leave dec sbbb mov mov stc dec adc and or add enter in xor lods clc cmpsb sub sub jo imul inc and lds cli sbb pop sbb rorb insb movsl inc inc lods clc cmpsb cmp cmp pop dec jecxz adc aam fcmovb push dec xchg insb add mov mov cltd mov ret push push imul jo mov stos adc push popa icebp inc orb mov lock clc (bad) (bad) sbb jmp out les and lods xabort cwtl movsl insb pop scas and xchg add push outsl jp stc cmp push or add jne pop rorl sub dec clc das push or nop jecxz xor cmp shlb sub rolb out mov sbb scas lcall shlb add mov orb mov (bad) cmp into push clc stos adc adc adc pop pushf (bad) subb ret movsb aam sbb adc (bad) dec or mov xchg test mov cmp jl and xorl adc pusha and lcall sub mov xor xor pop push fwait clc es int3 aam add outsl lods xor pop adc fsubs fild imul mov arpl or pop out cmp ret push test div maxps push xchg loop popf jle and and lods sbb rolb or mov addr16 adc arpl cmp mov push cmp push lock inc inc fdivl and arpl add pusha test xor es dec or ja adc jbe cmp sub faddl leave imul or fmul jnp dec mov pop inc rorb sbb add cwtl pop sub and sbb cmp mov enter pop (bad) dec addr16 dec push push mov or jl mov fisubl push rcr ret popa or push repz clc and push inc cmp push sbb add ret in loope xchg pop mov lock sti xchg pushf daa gs mov adc mov xchg mov call mov or repnz cmpl cltd cmp out faddl jo jmp cmp mov add mov rorb inc outsl inc add and incl xor psadbw mov xor add add xor daa cmp adc inc call movsb cmp ja mov sbbl fs es add and dec hlt xchg stos add cwtl or xchg dec add lods pop push cli fcoms add loopne es dec dec nop add popa xchg (bad) sub jne fsubs mov fbstp xchg dec xchg ret xor pop out jle xor inc dec add jge popa sub add js repnz push add iret scas sahf (bad) fcoml jo pop inc dec pmuludq add loopne stos mov enter add outsb clc add cmp call in fdivs into mov cmp dec pop (bad) loopne lret pop or shlb mov push ret xor pop mov add add (bad) pop jecxz mov cmp leave fdivrl int3 hlt insb xchg mov sar xchg cmp jp sbb stos jp add or xchg inc adcl int3 inc notl into movaps cmp pusha or push sub mov loop stc adc sbb imul xor in jmp add or mov add ror mov movsb icebp push mov test addr16 adc inc add cmp aaa ljmp jmp add fdivs imul sbb in mov and dec jmp sub test sbb loopne icebp pusha xor mov xchg push mov test xlat cmpsl sbb push hlt lock (bad) mov lret cmp mov je gs jmp test adc lea or in sub nop cwtl jmp inc push decl xor push push and inc scas das dec dec enter rcll xchg rcl jp ficoml jl cmpsb test mov sbb jo cmp bnd and lock mov mov pop faddl xchg add xor pop ret dec push enter cmc call pop cli aam insl cld lret mov pop test sbb in mov mov je xlat imul cmp xchg iret sbb inc test shlb dec push add mov push and inc sbb test cs repz xchg or jnp xor pop pop scas int3 test cmp or ret test add mov or sahf icebp (bad) cwtl stos xor xchg pusha daa jnp push ds pop data16 and dec and test ret jle jl jno lods sbb repz jns js dec xchg pop push push mov jbe addr16 leave inc add push or push sar push aam popf inc adc dec in enter inc add add loope popf loopne icebp (bad) rcrb or pop les mov icebp lock ja jmp adcl shrb and add in push aaa pop jb pop int add or fstpt xor adc jecxz lahf int3 test mov fs repz xchg loop leave pusha adc and test xchg insb mov mov dec rcrb fisttpll mov push cli xor mov icebp movsb pop cltd js adc fdivl cmp mov pop pop test or repnz loope xor je jl xchg jne cmp cmp out pop or cmp stos add dec (bad) push pop sarl adc mov incb lods fxch add push cmc xlat or jp and out or int3 adc paddw dec xor jae jbe cmpsl daa add inc push pop repnz test jg push stos inc pusha je,pt fdivrs ret mov cmpb push stos imul add scas gs mov sbb lahf fmull push jns std add sub out or shlb jae add roll inc iret pop and or or xlat mov aaa lock (bad) push pusha jge nop dec xchg stos (bad) mov jg pushf test shrb arpl mov adc adc fisubr fucomp cmp in push add dec jg sbb loop test jl mov enter or jmp notb add sti jnp iret xor sbb mov cmp loopne rorl lahf (bad) mov movsl rcrl arpl add or test out int jo pop and arpl fdivrp fstpt daa test push pusha xor into jo add dec negl ljmp pop or in cmpb add or cmc subl mov mov and add pop cmpsl ret pop test or loopne rolb leave sub pop negb leave movsl mov arpl mov jmp pushf add in outsb out and xchg enter or fwait in dec and test pop mov mov mov jne out push lock lea cmp bnd jl out je jmp cli add in sti sub in cmp push xchg rcl clc jmp push adc cmp out mov cld cmp xchg inc aam pop xchg mov mov es adc cs cmp jne (bad) daa jge sbb call sbb mov lds jg and dec jae or dec fsubp movsl je sub pop add jle movsl pmulhuw sarb js pusha nop lret or loop test icebp loopne push add dec xchg push add mulb push add jl rcll mov sbb jns xor pop add and outsl fstpt xor push push inc fisubr je in pusha fwait popa in xor lret xor inc dec jmp or aam push dec sti call mov lods loop leave jne enter inc fs pusha icebp jae mov pop jle inc push ljmp jo sub and loope mov inc shlb mov dec insl icebp add pop popa loop mov xor push sbb movsl xchg int3 (bad) push lock add xlat dec pop sub in sbb cmpsl cli int xchg dec test inc dec cs sar (bad) addr16 fbld push sbb dec mov (bad) mov xchg pushf add mov add fcoml add repz xor movsb fldt clc inc push repnz xchg notl cmpsb inc jge movsl pop or cwtl sbb hlt mov push push and or cmp popl and and out fwait cwtl xor push inc mov xor mov fdivrs shlb and jae ds out ss cltd xchg adc adc mov xchg mov mov jns add push scas sub jne pusha pop mov in push pushf add mov mov mov (bad) das ret jle fadds adc or inc cs enter mov xor (bad) jno xchg cmp test das sbb adc ljmp adc fmull pusha pop cltd cmpsb js push lcall pop loop addl inc pop mov movsb mov daa int pop inc daa outsb loopne xchg mov aam in or push ret xchg xor fbstp pusha dec dec testb pusha mov iret ret loopne cmp mov lods data16 imul push inc lock or add in xchg loopne xor ljmp dec jo mov insb jb add ret cmc mov xchg cmp (bad) movsb sahf cmp or out inc and jo pop push mov push shlb push add xchg loop fnstcw (bad) lret shlb dec xchg sub or and mul stos jo jne and not pusha inc xor sub jg xchg (bad) jo lret xor sbbb daa test and ljmp inc cmp iret xor or roll and add pop pop jns adc sub mov aam adc into mov movsl je adc or fwait test fsubp sbb sbb inc dec add push add out xor stc negl cmpsl add int3 mov jp dec jp pop ds clc pop test or push dec cwtl les add pop cmpsb ja imul jl aaa cmp add rcrl push sbb jnp hlt lahf dec or jmp add int inc nop mov pushf in out arpl xchg or xlat add inc enter (bad) lret dec rorb imul cld test add mov out and js sub pusha xchg mov inc pusha mov movsl aaa jbe xchg jl scas adcl pusha lret cmp clc je jne add jb cltd pop fwait cmp add or mov aaa pop push and push pop mov fsts lahf arpl popf and add addb les ja adc leave dec add in inc lods in inc insl shrb add xchg add jp pop adc addr16 mov inc sbb lock inc popa sub jo (bad) loop rclb sbb cmp adc push add pushf loope clc ljmp call pushf push xchg (bad) mov add jmp rorb add int les add dec imul nop mov add movsb push lock je test pushf pop lods iret xlat add mov les mov sti mov jns dec les jg dec push or insb xor adc out adc in and mov sub mov mov and (bad) aaa imul daa mov fmuls decb dec les inc mov (bad) roll dec mov sti mov jns repnz inc add fisttp shr inc mov xor xchg adc mov (bad) jns or jnp mov sbb xor xor sbb adcl jl test cltd push add lret cld add dec pop jecxz adcb mov idivl sbb add pop mov and or and push cld jecxz push and mov cld pushf add cld (bad) leave sbb mov cmp add les je inc daa movsl add fisttp push and imul pop adc adc fs or mov or dec or roll or jae xlat sbb pop popf jb mov inc sbb add sub enter dec mov pop adc data16 mov inc add ds cli inc mov test cmp outsb pop jecxz xlat sbb test rol les cmp mov (bad) jl mov push sub push mov mov stos cwtl xlat cwtl js xchg push or (bad) emms xchg (bad) dec add dec mov jecxz add inc jmp sub hlt cmp aam (bad) or inc es sbb mov mov mov mov (bad) icebp fisttpll ror jbe xchg cmp add dec ljmp (bad) in jle xchg dec cmp in les aad add jl sub mov (bad) xchg test mov loop mov adc or push or or mov stc xorb ret push add or dec pusha rclb adc test or ljmp add adc push dec pop xor movsb loope mov sbbl pop lods adc dec nop (bad) negl mov imul or rcrb mov pusha jnp pop push cmp jo inc adc add dec das sahf dec pop mov lret push cmp cli inc aam mov mov les inc ds stc bound cltd sbb adc inc gs and and in shr sub push xchg add mov adc jl bound je andl roll lcall inc in dec inc or lods xor cmp rolb aad jo shll xlat pop add pop xor icebp pop jl inc js andl shr pop mov inc or popl das movsb pop clc jg jg or loope imul andl es jmp pusha leave es inc in push sbb and dec sbb inc rorb mov jbe loop sub in sub orl mov repz test sbb (bad) mov aas mov mov je mov rcrb jmp inc outsl pop sbb sbb xor repz adc andb pop jo mov jns cwtl cli inc xchg add pusha add adc int (bad) lock fs jecxz lret add outsl add lods insl lcall hlt jo and loop,pn enter xor cmp lret inc adc add and pop inc push sub mov sarl cmp xchg (bad) push adc xchg lret cmp pop xchg mov adc sub pushf jle mov cmp xor movsb jo cs add add add mov adcl inc pop cmp out add add (bad) cs pop mov mov or popf xchg xchg jo dec out (bad) jge add fnstsw lret inc sarl pop add xchg test sub sub add iret and push mov pop xchg push push (bad) nop pop cmp add aas mov inc in pusha or in xchg push cmp pop aaa pop dec sub arpl push mov mov mov sbbl and or inc subb iret xchg or and nop cmpsl fwait pusha mov jl pop sbb sub dec inc jb xchg jl nop rcr sub into or addl (bad) jno lea fsubrs and sbb cmp pushf popa enter fbld mov mov popf std mov mov add xchg jnp jbe pusha mull cli sbb orl (bad) popa cltd sub std xchg or mov add pop xchg loope hlt add add mov inc insb fcompl int3 fiaddl mov jae xchg adc mov mov notb cwtl xchg inc xor pushf (bad) push in repnz adc push inc pop and jge fwait mov (bad) mov imul (bad) jnp imul dec sub gs and js out sbb scas push fnstenv sub xor sbb les lods icebp test int3 xor add jae icebp (bad) scas push movsb and ja pushf das mov xor dec mov test push adc les ds pop lgs add cmpsl arpl iret pop ljmp lret xor and pop pop iret mov decl addr16 mov mov pop popf outsl sbb lods mov sub movsb lock xchg dec cmpsl sbb test decl rclb movsb cld or cmp or add xchg mov mov test mov daa push add inc adc xchg test and pusha add ror mov je ja into rcr xorl or mov jle nop mov sub rclb cmp or andb sti mov lock and cmpsl fcmovnb cmp jmp mov mov out or mov mov sub dec jecxz sarb xchg pushw dec mov andl icebp incl stos sub inc movsb ds sbb and js dec sbb pusha or cltd mov fldl (bad) cld out sbb stc movl daa add xchg cs xchg add pop hlt mov mov adc xchg sbb add test mov jecxz dec enter or and inc addl sbb orl add inc cmc aaa ljmp dec xchg xorb cmpsb pop dec (bad) xchg push and adc jo pop inc mov popf dec sbb aam js cmpsl mov or inc outsl (bad) je push stos cs aam mov adc push xchg test mov mov pushf and adc mov xchg pusha add sbb mov inc mov adc pop popl lret ja xchg insb cmpsl jns add aaa mov push mov loopne pushf imul les test push test adc sub sbb outsl imul or pop and mov or je pop or and rclb fisubl xor pushf mov sti cwtl lock int3 push push jnp test xor mov dec clc mov xorl sub or mov push sub orl cvtps2pi xor inc jb push mov mov xor sub jl mov loope or and xchg stc adc or mov xor jl sbb lahf adc pop xchg and movsb mov jl mov mov push les test adc cmp je mov (bad) sahf in imul mov outsl add fs cmp mov ret xchg jge and jge fnstenv ret push mov in cmpsb mov lret scas je scas bound adc push and add in jmp pop (bad) and (bad) or stos test sub mov dec lock mov jns fstpl mov cmpb (bad) js adc movsl push rcrl sub in jb or add lods aam movsb mov pusha xchg sbb push dec mov ds stc lock add mov add mov inc mov and fiadd xor dec imul xchg inc pushf pop add leave inc movsl dec mov cmpsb (bad) xor andb insb or inc dec roll push popf stc xchg mov ficom pop add dec rorb mov sub xchg je and lret mov mov aaa orl cld mov or in mov cs or lahf out xchg pushf lahf ljmp movsb negb mov test cmp fbld mov add dec daa call sub aam dec mov mov mov jne jo add mov jo cmp add pushl daa cwtl mov fdiv push dec xlat sub sbb dec dec hlt repz cmp data16 sbb fdivs je add xchg repnz cltd scas test fstps cltd mov pop jo xor insb scas jo fiadd or into stc dec adc cmp or loop stos jae jne dec dec inc lock jno adc add les inc fs mov adc mov jo lret aam mov out jo sub xor test js push enter and aam (bad) mov cmpb adc xchg (bad) mov in leave cmp sarb lock or dec jo enter lods mov lock and test mov les fwait or xchg mov stos mov xchg cmp data16 clc cmp lahf (bad) xchg mov mov adcl sub stos fs (bad) imul xor loope pop imul add cmc inc nop scas ss or jns mov adc cltd mov mov testb push ds push add call lock cmpsl dec and add mov shlb je nop roll lahf dec xchg or repz pushf push mov out gs jle (bad) add insb mov daa js cmc jb mov subl sub andb mov mov adc adc dec and mov cld pushf and inc mov or mov adc push ss jo sub add mov and idivl mov xor adc je fsub loop hlt jmp enter jecxz pop inc sub stos ss daa test test aam push aam jl mov jo lea fdivrp test and (bad) stc or add add ja repnz mov cwtl sub shll dec xchg mov lcall or sub stos test mov lock inc pop cmp sbbl mov in stos push cmp dec scas test xchg mov mov std aad add and (bad) lock xor xor pop test nop sub adc scas mov outsb xorl or lods out shrb rorl cmp mov jmp jmp test jae fs add push xchg (bad) xor scas pop cli sub nop inc pop mov (bad) mov dec inc repnz insb push adc negb stos xor dec push test dec inc or adc pusha sahf jnp roll rcr aam imul sub rol sar imul mov xchg popa lock and stos or test shrb call movsl add push into inc shlb jl pop dec mov pop repnz or sub mov int aad call xchg shlb lea mov test add sub cld jnp add pop sub jle faddl mov test push frstor add xlat pusha mov adc icebp add pop (bad) adc lods dec or mov popf nop loopne adc mov dec (bad) mov out ss xor cwtl cltd fwait movsl std jnp push js repnz int mov or mov movsl or pop lret lock adc adc call rorb xchg daa inc pop stc cmp clc aas aad xor cmpsl cmp mov lea push push cmpsl fsubs lods jae dec push jo out xchg stos add repz or and push mov push rcrb mov (bad) sahf cli jle cmp or jle pop lahf fldlg2 or jmp cld and xchg daa rcr sub or gs xor sbb adc lods sub xor xchg sbb push push daa inc xor test push mulb divl adc and movsl and push in hlt xchg enter sub xchg or lods loopne aaa pop mov mov addb fmuls and pusha jp js sbb jae leave mov xorb mov xchg xchg icebp lahf js mov mov daa fcmovnu lock fdiv imul fist xorb cs mov (bad) sub cmc sahf inc rcrl inc scas mov push jle nop cmp sbb fbstp xor sbbl cmc pop mov adc mov cmp push xlat loop xlat sub cmp aad insl mov into lods sub hlt nopl sbb bound adc and xor repnz xchg adc add int popa adc sbb xchg cwtl rol pop adc es add pop mov add hlt cmc psadbw mov add pushf mov mov js (bad) (bad) or xchg xchg shlb aaa or push popf loop jl in sub shrb je push lock ret sbb inc add lea out push inc mov sub dec jbe mov rolb add xchg and push mov or sbb adc add or jle add xor fstps inc adc dec xchg je push fisttp mov dec nop icebp mov clc dec (bad) cmp aad jno jmp xor add sahf jmp out fcoms adc add push pop es sub lock cmp pcmpgtd push cwtl jno aad pusha sahf (bad) xchg push mov dec dec mov out dec sub xorb sbb call adc pop xchg or das dec mov push push sbb push sarl push dec xor mov xchg push sti push cmpsl or add ffreep mov push test sbb test xorb addr16 and icebp fildll test pop lods xchg jmp cli (bad) decb lock add mov cmp mov sbb add xchg (bad) xor push cmp lret inc mov dec jo add adc icebp hlt fcoms add movsb mov adc push cwtl scas sub add xor lret adc js xchg sub mov adc repz psubw inc lods or sbb popf faddl sbb and mov psubb dec adc xchg cwtl loop addr16 rorl and pushf daa dec xor (bad) or mov cmp aam lcall setge packssdw mov dec mov add aaa test sbb mull je sarl cwtl aad inc pop pop add inc sbb and imul rep push fwait xor loopne xor test adc mov xor inc test inc fisub andb push or cmp dec ss in and mov or outsl popl fdivrl out inc fwait mov mov mov ljmp pushf test pop nop fadds nop jae in add mov not pushf int3 adcl clc pop dec jecxz add (bad) pushf scas add iret negb cmp add test shlb sub add jne dec loope xor lods test or shlb sub rcll inc xchg les xchg add ret std cmp or jmp or enter push fs lahf test jmp mov xor xor cwtl pushf rcr sarb fcomip jecxz add or push xor push mov loopne push or add or out sbb int3 cltd cld xor push sbb push xchg or pop enter xchg shlb movsb mov ja xlat push and iret arpl xor lods int xlat add les rcll or cmp (bad) clc push mov xchg and bound mov enter add xchg xor in pop push jg cmc add inc add por ret and add clc decl add xchg add loopne nop flds sbb into push push movsl mov push mov lcall mov hlt fs call rolb jmp pop pop add test jmp dec add repz mov pop xchg add jle cwtl fwait jnp pop dec xor aas inc sub fdivrl imul xchg sbb mov hlt mov pop daa jmp sbb sbb add sbb stos and mov add subl test shll shrl cmp pop add push xor (bad) sub push sbb mov sbb pushl cwtl jo xor mov or sub add push call push and inc sbb shrb pop fbstp pushf xor sub je pushl or (bad) push inc sbb (bad) xlat xor dec adc aaa jecxz js ret mov push lahf inc xor adc (bad) xor fiadd adc push in int scas push (bad) inc (bad) jo ret xchg ret push and xor jo daa add jge clc sbb mov mov stos xor adc rorl fwait loop mov xchg jb adcl test xchg sbb mov jg imul xchg (bad) mov add inc lahf push pusha das push xor daa or mov movd dec negl bound call les adc add loopne mov pusha out cmp je roll rcrb enter push mov dec sbb inc sub sbb stos xlat adc adc lea (bad) icebp xchg (bad) rclb mov or sbb movsb cmc and stos cmpl lods sub adc xchg in inc subb inc orl data16 sub adc dec mov jp dec lret in popf and push and push jb arpl cld and add push (bad) jno xor add jp dec fcmovne inc add xchg nop dec jg adc mov sbb xor lahf mov cli mov (bad) nop and es fsubrs and fldl dec push fdiv pop enter or inc xor or adc lds sbb cmp into imul cli inc ja mov subb loop adc aaa and add pop jbe add mov add pop and add sub repz add in add push flds jecxz mov mov push cmpsb xor lcall mov (bad) js add mov adc or inc lcall in (bad) rcll and lods and es sub inc mov push pop fisubrl or pop xchg (bad) iret mov adc sbb dec cmp movsl jecxz dec nop enter or nop jb push fsubrs cs or jp pop sbb inc lods dec lcall and cmp dec shlb loope add (bad) or es jl or pushf inc es sbb or jo imul stc and arpl mov mov (bad) jne inc hlt cmp jae and pop pop add adc repz jmp xchg sub sbb cltd add cmp out mov xchg hlt jb adc sahf push push push dec mov adc sbb pop or and mov xchg push clc ret mov stos ret adc push rclb jns aaa jle mov sarb leave sub sbb push or shrb es jl xchg mov xchg adc sahf (bad) cmp psubusw lcall nop cli cmpsb add adc or test adc jp cltd insl xor lret sbb and lcall popa lods popl or call pop jecxz mov subb add in (bad) push sbb or lods xor push nop push imul dec push dec hlt fadds xor xor mov dec sbbb add and cmc jno or and xor sub cmpl mov popa adc and or insb jl stos test rcl xor (bad) jb leave aaa and mov (bad) and cvtdq2ps mov pop dec adc and in sbb inc add xor jb push clc xchg sub cld ds (bad) jbe cmpsb (bad) or cld inc adc dec aas push cld xchg pop sub push es cmp (bad) inc dec dec in orb xchg mov add clc (bad) nop ds xchg and loope mov outsb je cltd testb inc insb adc inc fsubs lcall in or cli cmp add inc mov aas fimul imul mov xor sub mov ds cmp pop push adc or imul mov arpl nop xchg loopne lcall sbb push movsb push sub sbb adc insb xchg add add xchg xor cmovne adc cs add lds add stos mov int3 xchg mov push mov mov sbb lcall push cmp pusha les mov scas test fcoml pusha mov std nop movsb or xchg cmpsl rorl push xor and jnp xchg data16 inc dec mov xor pop mov stos adc js mov xchg (bad) cmc pop insl adc js fcmovu pusha test (bad) test call pop in dec push sbb and test insl lret adc rolb test dec inc adc adc ja cmc xor adc repnz and and and xlat fstps sub pop int3 push adc mov gs cmpl or push movsl xor add xorb adc xchg sbb and push shll or je jle push inc ds or test jb push enter movsl xchg bound test xor ret lods or (bad) and adc aaa push and pop sub xchg int or (bad) xor jge lock loope cmpsb lock cli adc aam dec inc add jns push (bad) add (bad) scas mov and add xchg dec add mov inc and mov mov pop add cwtl lea xlat sbb das and jp xchg loop repz mov adc xorb sbb and sub in (bad) sbb repnz in xchg daa add out in sub sbb push inc inc sbb insl or and pop cmp loop add push je cld adc aas mov dec dec jg or pop ljmp fildll jnp add xchg add int3 fild cwtl dec adc cmpsl (bad) cmp cli hlt enter push pop fldt add sbb lret and mov fcomps das adc (bad) or neg jb (bad) jo xchg or (bad) adc cltd daa dec dec cwtl add dec jae cmp in jo dec push int3 lock pop push jb inc push fistl int std jmp add and mov aaa cmpsb dec add sti cltd add mov add push and dec into call out pop movsb and lods push fwait inc dec add test dec sub pop add (bad) int3 das pop stc sbb sbb fisttp jno add inc cmp and inc jno rcrb xor orb xor push push cmpsb push mov xor repz add cltd mov sbb push jo sub add mov xchg cli sbb (bad) mov push and and add nop pop push sub mov mov and les out ror cmp insb scas sar mov lods add cwtl rorl inc jb pop xchg sub adc jbe cmp push push cmpsl lea test test pop imul or les pushf mov repnz sahf add add hlt sbb mov mov orb int3 sub dec call (bad) mov sbb jmp daa aad bound add push rorb push or (bad) xor popf pop inc inc les cwtl mov mov je jno enter pusha dec and mov js,pt jnp add popa xchg sbb xchg int3 pop or adc inc mov arpl mov push or push cmp loopne pop movswl out dec fdivl pandn inc dec jecxz lret and sbb or mov iret jp add push test pop in pop hlt and jae in inc addr16 mov jp add sbb and sbb xchg addb adc mov or int3 or inc xchg and or adc push push push in push cld xchg push dec arpl fmull pop subb dec popf cmpsl jb loopne repz mov pop add orl out shll and inc pop xor (bad) int3 imul lret enter push sub movsl sbb cmp rcrl out outsb xchg int or or xchg (bad) mov dec and pop mov fstpl cmp scas xor lods pop out sub addr16 add (bad) dec imull or adcb rcrb pusha cs scas dec lock push nop xchg inc jne loop int mov lahf movsl or cwtl add mov xor cwtl scas push dec sbb adc dec or xor adc sub pop (bad) xchg jo adc ficomp inc jge pusha xchg xchg mov into shrl out and test insb fstpt xorl mov add and jb cmpsb sub aaa mov and rolb pusha fistpll cmp push push mov jbe add cmp addr16 push adc test inc lcall repnz jo mov loope fldt cmpsb push xchg rcl sub stc iret test aam movntq jmp sub cli cmp add or mov dec sbb xor les push push mov xor pop push xor daa aas lret inc lret cmpl and test sahf push add jle mov push fisubl sbb push inc xor mov jo mov loop add ret pop insl jbe cmp xor scas inc add mov aas mov cli mov push add or sbb push outsb test fist int3 mov and inc push or jp pop jl pusha jb xchg dec and jg xchg mov pop (bad) xor inc popf in jp cmovp and or (bad) fdivl push adc xchg mov xor xchg push sbbb sub dec (bad) loopne sbb (bad) movsl int3 or xor dec stos fbld aad loopne sub loope inc adc pause push mov jg add push add and out loopne scas xchg inc cmovno cs mov xchg lret gs cmpsb or out adc test roll fwait mov xlat sti mov outsb test int inc mov sub nop scas or or stos lods cmp (bad) xchg test (bad) push nop xchg jecxz es mov movsl inc lahf dec sub inc jl loopne add aaa and mov xchg loope jge mov cmp pusha push cmpl out sbb add cwtl jl adc cs adc int3 mov cmp sub repnz fs jg mov dec or xchg dec in js movsl icebp mov mov pop xchg xor adc xor xchg adc xor adc sbb push insb mov mov mov pop in scas clc lds push dec lahf dec pop jno inc (bad) insb rcl bound shlb int3 call jb pusha push push and pop pop push pop repnz loop xor or scas roll rcl in pop add fldenv add orl push shrl jg mov push mov dec cmp lahf push inc jne pushl ret pop je pop jmp (bad) mov (bad) jp mov notl data16 js push and xor mov add push mov add jbe push aas outsb fisub out pop add fiadd pusha jle sar enter lock sub test push add mov cmc pop sbb call add jns push shll inc or pop push pop and outsb inc sub push push pop addb sub shl lahf push push add jl icebp cmp sti add pop dec dec test push mov jbe or mov sub daa clc jmp imul inc mov (bad) flds jecxz or push pop mov jmp cmp sbb sbb mov aam ud1 test pushf and add push add fcomps add mov cmp or negl pop adcb sar jge xor push add dec fdivr sub aaa or inc int3 push sub xchg outsb sbb sub fsts dec aaa ljmp mov test out add dec pop push adc insb leave pop push push mov out pop test lcall push mov add mov (bad) jg dec xor stos (bad) rcrl push jge pop dec dec pop inc popa sbb out inc adc mov jmp enter push in nop divl fisttp aam bound pop pop (bad) or xor jecxz jo (bad) adc add push jbe xor adc sti insb inc add dec push sbb cmp jge add adc fisubr (bad) mov mov test fdivl sub aad or jg mov fild cmp data16 push dec ret mov mov push adc xchg add xchg adc mov adc or hlt push dec cmp data16 dec mov push xchg lock or push push pop hlt pushf imul mov int3 sbb inc mov lods dec out loopne adc inc cwtl xchg subl inc pop and addl inc sbb call movsb faddl ret push fldenv in jle fcmovb repnz jns stos add sarb adc inc xchg mov or out xchg jp add xchg rcll mov mov push mov bound nop enter je xchg aaa cmp scas sarl pop data16 jnp jl and sub insb push pcmpgtd pop mov aas sbb inc inc xchg dec addb xchg orl (bad) ds push jbe mov es outsl dec add xor xlat mov in movl and push push pop es dec aas dec rol repnz xchg push xor jo ret xchg mov and daa aad push adc add and inc out dec push add push add mov add pop push jg rolb sbb cmp pop ljmp roll in orb adc pop pop add scas add sub add call leave orb pop push pop mov inc or rorl push pop cmp test mulps pop scas adcb lcall test jbe push leave dec add or xorl pop push pop inc fmuls stos stos xor mov insl sbb pop mov pop hlt xchg add add xlat aad out jne or sbb inc sahf insl (bad) cli adc movsb (bad) stc and mul add and in jae rorb pop aad lret in pop jo in mov shll or ret stc jle mov pop lcall sbb pop orl popa data16 push adc inc ret das mov push sub jae or addb and or mov pop add ja out lea je rorl adc popa pushf loop xor xor adc les ljmp sbb and jge lahf add sbb mov sub iret push jle or leave push aaa cmp repz jg or and addr16 sub xor push jo dec adc push sub pop sub jg xchg xchg pop add or andl pusha pop (bad) leave xor adcl and cld push shr and fwait gs mov ds in add rcrb and sar mov pop outsb inc xchg adc mov adc push pop lea fisubrl (bad) inc adc ljmp idivb adc je or xor int3 ret pusha sahf add sbb pop sub push outsl xchg jb lods les xchg repz mov xor dec sub (bad) nop or push sub adc push loopne xor outsl jle clc imul arpl jecxz jnp jmp je mov jne lahf push call insl rcrb xchg push mov dec fs fldenv push mov pop fsubl jp jb push dec push xchg jns daa inc (bad) jge xchg push not and jge sub lahf add pop pop dec mov lds xor mov mov or or movl push and cmp adc adc xor sbb cmp flds movsb and xchg mov jb push push popf repnz push inc enter nop in dec test sub jmp loopnew loope mov fs xor int3 mov add or xchg sbb (bad) ljmp sub dec outsb push pop sub loope push sbb stc pop bound xchg xchg lcall pop pushl dec inc pop add add add and outsl sbb pop jl jbe jmp fadds xor xor pop adc ljmp lds nop mov sbb jnp and mov in push adc pop mov dec neg loopne loope xor mulb leave es dec sti push xchg or pop call addr16 decb and sti and and (bad) fsubrl adc xchg (bad) mov loopne das in cld dec clc (bad) sbb sbb mov jl or nop fdivr add dec pop cmp inc sbb jne push sub push sub push adc shrb icebp jg iret aas mov fisubrl (bad) idiv and jp or add pop or or jbe push push lock stc out insb nop xchg mov mov push cwtl sbb add jle fisttpl fcmove loopne mov outsb mov mov pop cli xchg pop mov pop xchg loopne out mov pop insb (bad) test cmpsb arpl xchg imul add dec sub sub cmpsb mov gs movsb mov push lret mov ja enter pop repnz popl lods fidivl or pop in pop pop inc ljmp mov jno pop pop aaa or push pop xchg pop push adc andl cltd add add jmp mov pop adc movsb push and xor and pop sub jae scas outsb jbe add or jge inc adc push push xor push xlat outsl arpl (bad) cmc fadds dec or mov mov inc pushf add pusha mov mov movsb leave sahf mov push lret idivl dec loop jae leave imul insl scas push push dec adc in out mov movsb jmp jb push out push xor sub mov adc sub pop lea xchg jnp mov inc stos push inc sti push pop add (bad) (bad) pop lods cmp xchg ret sbb stos adc adc xchg call push pop gs or push pop das movsl lea or adc cmc popa add mov or test gs cmp add cmp pop das adc dec jne xchg sbb in aas or cmc push cmpb stc jge push jge out cmp or adc cli mov adc pop inc push push sub lock dec dec addl mov mov dec xor inc cmpb int3 orl xor cmp push sub jmp sbb inc subb mov add pop and cmp pop addl aaa and push push push movsl stos and adc jmp adc xchg push movsb ds pop jnp,pn cmpsl fwait outsb movsl test data16 mov fbstp push xor in add and call cmpsb sub jae or pop fs mov mov (bad) int3 (bad) xchg lcall add inc mov add enter int push jne sbb fildll in push mov jbe sbb xchg adc pop sub xlat lret int je push push dec jge fs daa loope pop les add pop or neg xchg add pusha popf and int cmp mov icebp or mov mov inc dec cvttps2pi ss mov add rclb sub shl icebp and sub inc add shl ljmp inc gs out mov push mov daa cmp xchg add or jno mov lcall add jmp add jg insb (bad) inc dec loopne mov jb jmp call push and lret add xchg jmp jmp rclb add into jbe or inc shr fcomps call pop inc push jbe inc and movsl out (bad) or outsl add nop inc dec gs cmc cmp int3 push adc shl sub sbb add sbb adc pop sub sbb dec inc add mov stc sub sbb (bad) fisubl push stos fucom (bad) inc (bad) fisub push jmp sbb fisttpll add sarl inc sbb sarb addl aas pop out in es arpl ja andb test pop push dec push addr16 lret das sub push pop sbb cmpsb inc add cmp push pop lret dec ret mov add push jne xchg add sub jg push add mov lods ljmp notl push push add add fcompl adcl pop xor mov sub adcb (bad) dec aaa inc popa das push lds push pop xchg sub cwtl stc imul mov sbb sbb inc or lcall push fild sub dec add push into pop mov or jns dec pop push into arpl insl (bad) jmp imul push add sub pop pop xlat sahf sti push sub scas adc fmulp pop fldlg2 jo xor cwtl or imul jmp cmpsb sbb repz add scas mov stos mov sub mov sub xor add dec lret pop add mov orl in or pop jmp xor enter pop push push adcb or mov rcrb mov pop rorl sbb xor inc cmp sbb (bad) jmp aaa push cltd ja xchg pop xor dec push mov xchg jmp adc mov insb ror pop inc inc sbb mov sbb sub mov dec xor pusha sub adc push cmp fcmovnb lods dec pop push subl jbe fdivl movsl les mov test mov cmp cmp in inc mov jae sbb (bad) mov mov jmp dec push xor xchg jno xor fwait mov mov ret pop push and pop cs add mov lcall test lea adc scas push mov add pop dec xor pop jmp add inc scas sti and jnp push fmuls or inc fucom add jmp add jle not rolb push push mov ficomp lret mov int adc ljmp inc push fdivl jmp notb scas adc mov sub ljmp xlat pop push test pop fisttpl xrelease into sub add les sub push add jg cmp mov add repnz sub in das lock rcr push mov es sub lcall dec sbb inc push dec addr16 test xchg sbb std sub add mov (bad) mov sti pop add push dec jmp xchg inc fnstenv push cmc pushf jbe jle inc outsl mov xor push es jbe jae fidivr sub pop clc sub das pop mov xlat xchg out cs rorl bound and popl lret push lock push in push js add jns ss add pop sub shr xchg and push mov cltd and dec in cwtl inc repnz callw mull clc adc sbb jmp ja ja and cli inc in add sub lcall pop push sarb add mov mov push mov or rcrb add sub mov mov mov inc mov sahf cltd mov pop sub pop inc xor and mov push push cmc inc pop push idiv sbb dec out lods std adc xor test dec xor push or cmp cwtl mov dec jmp jae fwait inc hlt pop mov loope add stc push ljmp (bad) ret xchg xor aad jae push xchg xor or (bad) ret mov add imul sbb adc cmpl adc pop popa xor dec pop ss jle xor add pop and sbb daa movsl push fs xor xor add add inc or mov movsb jl push adc add cmp in add add add sub notb add in aaa ret outsl pop add cmp xchg dec lcall leave out shr movsb mov or mov (bad) push insl daa sbb js mov push jb (bad) repnz (bad) pop les xchg fsubrs and xor es out xchg jno imul repz push mov push mov xor sbb call jb daa xor mov inc mov push inc push loope push ret jp pop sbb and mov dec jno mov sbbl jbe es cld sbb sub sub aam or xor nop idivl pop je xor pop test and lods daa sbb sarl pop cmp jle fnstsw enter mov pop dec push daa and mov lods imul xchg aas inc jmp mov lods and incb mov push call pop fidivl jmp enter and insb sub pop gs jmp imul push pop dec lret in mov imul (bad) ret fwait inc sub mov fs and (bad) popf sbb fildl push mov push ljmp inc es loopne lcall ljmp loope xchg add pop push cmp sbb cwtl sub dec pop lret int inc bound push push mov inc and xorb jnp push jmp mov or cmp les pop xchg imul dec arpl xchg sbb add cmpsb dec sbb pop and xchg xor int3 mov out addr16 nop test jmp pop add jecxz or or jecxz mov int sub pop xor push mov add call mov xchg and aam nop adc dec add shlb add mov mov jmp push add (bad) loopne xchg add sub loop and std push xchg nop shrd jecxz sub clc flds xchg ds out int3 add icebp cmp mov scas mov xchg lahf dec xchg aam lock into cmp (bad) mov popf loop inc push lea push sbb mov jb sub or addl sub popa pop int3 daa mov add (bad) cmp cwtl push jecxz test test mov or mov loopne mov (bad) xor (bad) je add jmp in xchg pop outsb iret and sbb popf xor ds jo orb pop mov mov sub sub aaa loope lock pop clc pop (bad) je or xchg in and add sbb loope aad fcompl aam ss mov adc stos (bad) jbe add fnstenv sub outsl sbb mov mov les movl mov push sub push inc mov and mov arpl ficoml xchg adc rol rcl or fist aaa adc inc xor icebp or or pop mov add sbb xchg icebp sub jp scas pop (bad) test pop clc mov add cwtl in xchg cmpsb fdivl cltd rorb fnstenv push add push dec pusha push push push xchg xor scas insl pushf sub xchg add pusha lods gs ja jle xor push bound lret addb clc mov sbb mov xor (bad) sbb leave pop adc sbb mov adc push cmp jo inc rorb das lret (bad) push or xchg cwtl xchg adc les mov mov test mov sti add out or adc jns fs imul outsl xchg nop cmpsl lret test sarb push out sarl adc pop cld sahf es jno xor add mov jns orl push push mov (bad) into dec shrl shrl inc sbb (bad) js and mov mov sub add add lods call popa xchg lcall pop inc fwait cmp jl pop xchg sbb add lock cwtl cmp cmp mov imul jl or stc xchg jnp lods stos insl jmp or pop icebp decb daa mov sub test adc inc inc subb outsl cld insb dec xchg sbbb lds fcompl call or push movsl xor jnp xor add push clc cmp sbb dec cwtl xchg jp popa ja shl jno sbb push push and add repz dec roll or adc rclb adc aam pop mov cwtl add mov rcrb arpl mov and dec inc das cmpb jns or fmuls bound int3 dec or fmuls ss or adc add dec roll or outsb out rorb pop int3 je fcompl pop xor inc push in cmovg sbb and call nop loopne lret push es or mov cld or pushf jge jecxz (bad) out adc out icebp cmp rolb sbb push shll (bad) jno subb enter mov (bad) xor movl dec sarb sbb add rclb cwtl jl xchg in pusha xor adc stc mov pop xlat testl xchg lds imul push pminsw (bad) call out and fs call and dec add fsubp adc cli fisubl sbb sbb jae add or xchg addr16 push mov mov sbb sbb xchg (bad) nop enter arpl pusha mov fnstcw add test frstor loopne lock cmpsb xor jbe and adc dec mov dec or mov out sti shll pushf mov xlat dec cmp mov add mov fimul inc test ret cmp add enter fcoml sar cmc cwtl out es push js mov enter xchg bound add daa sbb ja nop jp scas xlat cmp loopne dec add imul or movsb arpl test xchg mov inc xorb cld js adc sub and sbb mov mov push sbb call add dec in sti dec lea mov test mov (bad) test inc gs clc repz enter fbstp adc ss mov add popf push out xchg sub cwtl les xchg sub xchg cmp mov mov adc lret mov inc xchg (bad) xor stc test and stos insb and add push popf xchg mov and jo add cmc fsubr ss iret or add jecxz pop lahf inc add in or and test add in je (bad) in inc cwtl aam pop mov cs push mov ret bound notb subl adc (bad) mov sbb scas adc add add jb mov aas mov mov dec fisttpll mov pushf adc je cli outsb loopne ror fs pusha inc add fistp enter pop js mov js adc jge rorb fstpl add and pusha popa sbb cmp dec pop inc je xchg adc inc insb popf adc jl repz mov sub enter faddl dec sub xor and adc inc mov (bad) jmp xlat add subb inc pop pop add xchg outsl fnsave and sbb xor aaa dec out xor leave mov mov jnp push mov cmp xchg fisttp mov addr16 cld sub nop xchg shrl int (bad) jo and pop xor or test lods sub movsb daa mov dec adc cmpsb outsb fdivr push pop xchg lds (bad) mov dec int jle mov call (bad) mov (bad) pop add ret int aas lcall mov lock sahf xor or popf nop add repnz (bad) mov add leave pop xlat push mov fs fs mov (bad) cmpsl lret sub pop push repnz or xor cmpsb cmc pop enter pusha ret push inc daa push sbb or xchg sub or adc adc adc jp adcl inc bswap jae pop sub mov dec pop add cmp decl sub in test pop mov nop xor xor flds jne mov and add adc xchg pop int3 in insb add iret add stos mov xchg fcmovbe cmc pop pop mov movsb mov in pop dec jge sbb push mov js jae adc xor sbb out mov cmp ds cmp push xchg dec ficom jb,pn rcll sub sbb inc into and push divps test je add pop repz mov mov cmp (bad) and pushf add xchg (bad) pop cli addb adc lock scas pushf inc fs mov xchg mov and dec test add jo jmp mov ljmp fldenv and (bad) mov push jg xchg movsb (bad) scas or pusha or enter or (bad) lret clc and or cmp ss xor nop push push push add popf add push xchg jnp or cmp pop inc fs in add mov sub ss or dec std pop mov mov subb inc (bad) rclb push cmp push dec pusha insb dec pop bound inc and jbe mov push cmpsl xor aam xchg (bad) push inc add xor daa in or push enter mov sub mov push adc xor mov adc xchg xor (bad) jne mov jns mov and sbb fdivr jbe lahf dec sbb push xchg lcall fwait out pop xor sbb mov push sub sub test cld or jb add xchg push cmp in clc in add ret jecxz or xchg push popw push xchg dec xor imul mov lahf in sti pmaddwd lods and add in ret pop jbe and add sbb or push add mov adc push mov xchg testb push jns mov popa push sub sti sub test adc pop les ss je push add xlat das movb loop mov btr repz (bad) push stc mov dec push test and popl loop xchg enter rclb fidivrl mov inc loopne or in adcl jbe sub or leave xor mov sbbl sub add mov test sarl cmp sub mov inc test loopne dec dec arpl rorl jae xor js js das sub inc (bad) out xchg xchg cmp sub test out xor test sbb lods jge rclb iret or xchg pop xchg loope test add loopne mov cmc xchg (bad) push mov cmp sbb ficompl pusha gs add mov aas pushf pop push lds mov mov sbb inc push or movsb imul outsl loope push sti in shrl dec clc je cs xchg and icebp sub iret sub les push js mov and xor rorl inc daa into or xor push cmpsl popf mov aam xor and dec jecxz das mov pop mov xchg lret loop jo shrl stc mov ds add jmp pop mov pop rorb dec scas xchg aam mov loopne xchg loopne repnz or mov or lds adc dec sarb mov add mov aas mov pusha cmp mov nop setae fcoms jo sbb js in dec sub int fsts sub roll enter adc and xor or lret mov jae adc pop add dec mov fwait xchg xchg dec pop mov adc imul mov push fcomps push xor test and push mov mov popa pop cli cmp sbb mov out aas int3 sub and mov fistpl cmp mov call or add gs add repz addl cs xorl jge or lcall adc sbb rcrb dec add test pop adc and jl rolb lret pop pop incl cmp dec mov jns or inc sub pop push xchg movsb sub xchg fs dec jne jbe pusha adc jl ret and gs fldcw mov or dec mov mov dec mov adc cmpsb movsl decl je or es loopne adc test test pusha xchg test lods mov cli sub inc jo loopne rcr add inc dec loope jno andb sbb mov xchg mov call push into imul aam test inc xchg pop sbb dec mov scas stos adc cmp or push dec ret jno add leave add scas mov jp and mov nop add pushf bound sub (bad) loope xor popf mov xor pop push pusha sub mov xchg or sub mov jge mov ds sahf add test lods push outsb pop xchg push jo sub adc cmp add xorb and mov mov pop push xchg add xchg or and sub insb pop fistl mov push pop xchg rorb sbb lds jp ljmp or jl rolb mov xchg adc add inc je loope dec add movsb mov dec xlat stos jecxz push in sub sub mov stos (bad) mov (bad) fist ja std dec pop fmull cmp scas add xchg (bad) leave pop ror jo jo sbb xor pop scas jo stos lock add mov xchg mov cmpb pop andl in add dec ffree xchg leave js mov pusha add push inc xchg rcll sbb sbb jecxz mov jo mov nop jl xlat xor mov mov in dec les jmp stos add push ret out sbb pushf mov (bad) sti fwait nop enter jbe dec jae jb xchg mov adc (bad) nop and loop jecxz insb fadds push push or and popfw mov stc cmp and subb push cmc pusha xor ds lds in mov fwait or in bound call pop dec clc icebp pop shr fisttpl pushf repz mov stos hlt int3 pop or and cmp lret jl popa cmp aaa mov xchg hlt dec subb xchg insb adc stc loop (bad) inc jecxz es pop bound js fmuls ljmp std out das (bad) jae add mov sub bound jae mov xchg adc je out adc imul movsl add stos push cmp gs ss jb,pt iret add or icebp leave rorb seto add mov pop sub cmp mov loop xor repz pop daa sub add mov fcoms int3 adc cmp inc mov jp and or jns add das mov pmulhuw pop and mov xor push lcall loopne stc push loopne les sbb (bad) push aam dec ja add daa pop mov insl icebp rcl orb cld jmp add jle pop add add out aam inc mov (bad) fcomps fmuls xchg ret xchg test cmp test lods and and mov mov adc shrb int xor in cld or ret mov fs dec nop movsb adc cmp adc dec leave cmp cmp pop pushf cmpsb stos mov jecxz sbb sbbb or out ljmp adcl or test lahf lods push cli in incl call pusha xor sbbb sbb add xor test sub iret aaa outsb nop es pushf cmpsb int3 pop je jmp xchg or (bad) loope cmpsb lret and xor loop add push jno mov mov loop dec imul ds jl and test fs aam lods mov rcrb mov sub in ror shrl roll pop cmc push sbb cli or inc call fist dec aam int3 inc lock in add adc xor pop mov xor ja dec pop xor pop ret popf fldt mov mov sub sahf lods push gs add inc xchg fsubrl jle push in inc test flds mov out mov sub inc loope test xor and dec in mov lret pop cmp sbb fistpl or arpl pop adc add daa sub mov cmp pop nop loopne sahf jb xchg sub fldl lahf xchg adc test mov add icebp mov jne pop es xchg sbb ret lods js xlat and cli gs orb jno lods xor aas push xchg xor bnd jle add dec (bad) mov mov lods add fidivr out shlb pusha xor dec cmp stos add mov call cmp js hlt or sub out or pusha mov add lods setle movsb mov xchg mov sbb push hlt sbbb test sub lds add es xchg mov push add push inc test jecxz rcll or aam cmp movsl pextrw pop mov sbb sbb unpcklps and mov inc inc sub or lret mov mov fildl (bad) rorl cmc adc leave out outsb inc jl sub sbb and sarb and ljmp lock and mov (bad) repz cmc pop mov sub sub add sbb sbb xor sub stc cmp sbb inc je pop scas mov add sub adc adc lods push dec dec ret mov lahf sbb pushf lea and xchg fldt push cmp or xchg ret repnz add ljmp rcll lds icebp leave (bad) out xchg lcall inc loop push xchg imul xlat dec lret add pusha adc add mov sub pop xor loope mov stos or nop cmp int3 addb cmc int push (bad) test dec inc jl sbb add push inc fadds ljmp or mov sub xchg push pop mov loop pushf jl add sbb sub (bad) in sarb mov sub pushl test cmp cmp jge inc cmc mov mov pop xchg and (bad) lret mov jle in (bad) ret sub xor xor xor lret or repz pop xchg into and push cltd lret mov push pusha arpl xchg icebp mov lods push pop lock cltd add pop lea pusha mov ret cwtl sti and xor or test add xchg adc pop inc mov mov adc loopne lock or lock add jnp jp gs push test mov ljmp xchg xor in es and jecxz in dec arpl mov push add aam ja mov hlt dec push adc aaa ds popf in or gs mov outsb pop adc dec cltd pushf adc loopne lock js sub cmp cmp xchg cld cmp jo stc pop sbb sub mov xor inc sar cmpb or call enter mov les xchg pop pushf lret mov inc sarb xchg fwait pushf dec push lock xor mov lea (bad) mov pop enter clc mov mov aam xor or mov mov lods dec or stos jp stos mov arpl cmp fistl (bad) (bad) cmc nop aam pop adc xchg mov hlt dec dec sti (bad) push dec inc mov iret fcmovbe movsl mov pop pop add cmp daa cwtl sbb scas inc mov mov lods stos xor and mov and inc (bad) mov and lods adc inc adc sbb out fsubs sahf scas lret cs test sbb adc fistl jmp ret xor add aad cmpsb mov lds pop (bad) adc stc cmp dec scas lcall or cmp rorl repnz in popa test mov xchg and jecxz or mov roll or clc lcall rolb test mov xor mov inc enter in cmp mov jg gs mov shr lods dec sbb push pop rorb or sbb pop sbb dec (bad) (bad) jno add cwtl dec lahf rolb jnp mov aas lock adc lock pop mov in mov bound jo out test and rclb jecxz xchg (bad) mov aam adc adc roll add stos aas imul xor loope jb popf (bad) stos data16 mov imul jnp add mov shll inc into jae test in xchg sub inc adcl push lods and fwait xchg stc push stos mov pusha pop xor pop aaa push fdivl or pusha movsb lea add and mov rorl insl push sub aaa xchg bound nop andl dec mov add loopne pop test xchg je mov stos lods dec cmc clc add pop shl nop rclb push stos mov sub jne inc and xor mov xlat or movsb jmp push mov or push and out outsb xor jno test and xchg jl adcb sbbb jns das aas lea mov add movsl jmp jp mov pop add leave addr16 jne gs fsub dec enter je imul (bad) aas mov bound jp push xchg or sbb xchg (bad) js add push aaa sub lahf cwtl cmp or jmp push in jne fcom mov or push aaa mov mov lcall jae or or arpl cmc pusha rol (bad) xchg in add pushf sahf push or xchg sarl push add jb scas outsl add aaa and sub push xchg outsb mov and ss divps push aas popa in icebp dec xor nop jle sub adc lret xor ffreep mov in nop cmp aam nop or call push push add pop and andb xchg mov xor pusha outsl push ret pop xor clc add mov mov out into pop and push mov std jae add or or and push cmp dec pushf cwtl cmp xor and mov push add jns inc in inc push mov add mov shlb adc push dec pop test stos xlat test lret jne or mov rclb mov mov stc dec enter xchg and add push out add repnz scas xor aam bound pusha adc sub xor cmp xchg xchg xchg lock cwtl sub sbb hlt pop push add cltd lods orb and (bad) lea lods push sbb cmp sub pushf push adc mov leave repnz or stc (bad) mov pushf (bad) add test loope cwtl sub adc add push or pop sub cmp jne aad add cmc xorl or lea push ss sub out movsb pop mov push pusha lock cmp pushf inc pop cld jae nop movsl add xor popf test jmp and jge loope daa imul add movsb cmp fnstcw cmp or xchg cmp pop add xlat inc or insl dec xchg movq push or paddsw and mov lock xor xor xor bound mov adc dec stc mov in inc sbb test lods mov xor dec sbb jecxz iret fstps repnz sbb sub cmp sarb daa lea addl dec dec xor (bad) les call sbb rclb inc push push mov xchg in loope jns jge xorb add and push (bad) rclb or lcall sbb push add inc es adc and sub mov push dec jge les test mov test mov inc adc dec hlt mov mov mov jge jl or loopne pop sub jl pop int cmp pop xor and cltd sub mov sahf fcomps orb popf pusha cmp mov aad mov or xor pop std adc sub and fsub pop cmp cmpsl xchg sub sub or insl push mov imul rclb mov sub imul mov add (bad) arpl cmp or into add jp icebp test push out test pusha push xchg add jge jnp xorb sar bound jo mov adc enter sbb imul clc sub mov outsb icebp cmpl dec lods pop out cld inc test (bad) cmpsb popf cli add dec out fs jecxz add and adc adc xchg addb aam jae ds xor sub cmp in add sbb ds cmc or fcompl cmpl mov data16 je or mov test and pop shr decb nop jl lret dec mov ss inc xlat andb (bad) andb nop (bad) mov jg cs loopne xor inc les jmp aam mov and pop add mov inc mov xor inc dec mov inc and (bad) ja loop jl loope out loope cmp add and ja adc arpl and icebp cmpsl xchg orl lds mov or jo adc rorb adc adc xor adc cld mov mov jmp call and push and add mov push mov add inc (bad) lock (bad) popf mulb pop inc jnp jmp loopne inc add cmc jo loop pop fbld loopne mov lods insb adc pop loop out fdivrs sti cmc lret xchg insl aam mov fstpt stos pop test scas out and vmread dec lods pop data16 adc push jle dec jmp inc push insb inc cld inc xchg adc mov lock add sub mov push xor or lods adc adc add aas add repz orb pushf sub sbb movsl aam pop mov mov pusha ljmp sahf inc and cld add and add cmp xlat mov rcll push adc mov push add inc rolb rclb pop test sub or roll inc ds out mov fcoml dec iret xorb shrl add cmp jne or movsb sub faddl and out add or icebp insb and mov daa inc aam or int3 or aad mov cmp xchg mov pop mov pusha or stc pop push xor mov in mov pop xchg inc das fadd add subl xchg dec xchg or (bad) xor or cli sub mov rorb or sbbl xchg sbb pop stc sub add call jns add mov cmp inc outsl insl xchg cmp push enter into js inc out add aaa inc xor rol xchg push stc fs mov fimul es cmp and mov or cmp sub (bad) movsb or cmc add adc pop (bad) stos sub add dec add jb lods test fdivrl mov (bad) cmp daa test aam bound jnp xchg mov nop add movsb inc in aaa pop rcrl cwtl or sbb aaa xchg int3 popf and add sub add notb call dec cmp push or dec pop (bad) jbe outsl loopne fbld daa nop sub and adc movsb cmp or in or mov or loop ret jns adc sbb movsl lcall adc add maxss or push adc mov add mov clc add or mov jle mov dec loopne xchg and sub mov pushf (bad) or cmp test and lock (bad) orb sbb push es and add mov fmuls mov out movl je,pt gs or pop pop test inc rolb cmp ljmp sub push and lcall push dec jl negl xchg insb rclb mov fstpl cli adc leave movsb or mov xor pop xchg xchg adc mov xchg aas add imul xor mov clc xor add push sahf inc cmpsl mov pop mov cmp xor inc add iret mov pop xchg jns cwtl js call pusha xor adc stos inc fcmovnb (bad) repz das jge or mov pushf nop test (bad) enter jge andl xchg pop adc ljmp pop ret push inc (bad) sbb mov in pop nop and cs xor popa loopne xbegin nop cwtl sbb fisttpl imul sub adc or pop adc fldt insl cmp loopne int jp or leave add and add adc push fnop push movsb mov test push xor bound xor rcll or adc out jo cwtl popa js xor adc imul lock mov push xor lock mov pushf mov test stos sub in subb sbb lods jl add xchg push in add js add std add imul adc lcall and lret (bad) call mov int icebp or inc pop add pop cmpsl inc add mov lds mov cmpsb sub xchg int3 repz jbe jae and xor out xor sub lret mov xchg xor decl push pop mov out jo cld test add cmp mov xor xchg clc movmskps aam repnz sub pop adc mov inc leave wrpkru xchg cltd test push adc pushf xor aaa xchg xor into xchg mov mov sbb iret test je addr16 ljmp xor idiv loope out jg mov sub mov sub dec xchg test add and rcrb add in mov cmp xorb xor push or xchg push xchg cmp adc enter mov xchg leave test push (bad) lret sbb mov dec adc push xor inc leave xchg lcall mov adc add test xor ljmp ss push sub jnp cld dec rcll cmpsb xor mov in test cmp nop mov pushf cltd clc mov or in pop adc or xchg int3 jecxz and jbe and mov inc psubq hlt stos in (bad) std lds cmpsb ret pusha xchg mov stc mov sub inc rorb psrlw popf cld sarl leave pusha adc add jl or add ret mov dec rclb dec sbb cmp xor std xorl jnp and jns add sbb mov andb inc push or pop pop jl bound add push add mov loop sbb xor sbb (bad) leave movl mov cwtl push inc inc add ficom rolb jmp pop int sub les punpcklbw jnp xor adc out adc fwait inc pushf test xor cmp add mov scas lret xchg (bad) xchg pushf or cwtl es sbb xor lock or mov jbe xchg mov cmp add sbb pusha mov movsb mov clc dec icebp jl adcb add push (bad) in sub pop cmp adc mov xorl cmp push push adc sub mov mov xor (bad) xor sbb clc or nop sbb pop or es movsb jl add push cltd out mov stc dec sub rol dec insb out jl dec add aad divb dec xor or lods push pop (bad) cmpw or push jb jo mov jg cli es pusha mov sbb insb add enter enter xor mov adc mov mov mov loop adc xor xchg lods jmp push jle xchg xchg mov xor dec xchg aam mov dec mov fiadd fwait std cmp mov push clc push jge xorb mov lret add cld int3 cmpsl add lret xchg cwtl mov sub icebp mov cmp ret pop dec add add rolb add mov cmp adc sub push or or sbb divb mov roll and mov xchg gs pop inc jl out mov fucomp add mov aam or mov fcoml aam pusha sub push lahf pop cmp leave pop xor mov mov adc cmpsb or xor sub and mov aam std sbb pop shll into cmp sbb push xacquire iret mov lret push cmp add sub and sub addb mov and xchg aad pop push xor push mov int3 sub cli pushf loope xchg jns inc sub push mov and and mov mov sub call mov xchg push push sbb or imul mov dec or push rcr jecxz mov loopne mov jp mov mov adc xchg dec popf (bad) push std cs cmp es in add jae scas xlat adc insb iret sarb xchg hlt add mov add jo sbb jle rcrb push and (bad) push inc fmulp xchg cmpsb sbb or adc add push rolb ds xchg out (bad) jno test or add lret add cmp push fwait push fiadd adc inc in in call cmp inc xor xor mov dec lock mov add pushf fwait xchg lods ss and daa mov into mov movsb push pusha sub pop lret add jae xlat adc sub add adc xchg (bad) iret dec cwtl or inc out xor es pop cld jge xor mov cld sub mov cltd cwtl and mov xchg jl add cmp adc xor dec (bad) sub cmpsl clc js mov ljmp and imul mov fidiv pop mov negl inc cmp mov cmp stos sub je mov mov insl into mov scas insb adc test mov shlb inc and jb add nop (bad) mov dec fstpt and lock lcall leave mov mov cld xor test jecxz add out in jp mov sub cmp mov add lds pop std scas cmp mov lds test rol or sbb je sub aaa (bad) mov js push ret sbb push push add cltd cli sbb cwtl clc push or pusha in mov mov cmp pop sahf sub (bad) mov scas mov sbb cld dec mov addb repz dec rcrb or dec inc dec es clc imul lahf xchg and dec fstl stos and pop xor push daa movsb sbb rcr adc or and pop mov adc idiv lock (bad) xchg xchg jmp into out or xor hlt call mov push bound inc sub push dec sub dec jl mov mov in cltd or cwtl sub shll push jbe pop fcmovb or inc push ja dec into push inc xchg cmp les pushf lds inc stc mov lock mov sbb popa loop lcall adcb lods (bad) mov mov inc dec or test and (bad) loopne mov cwtl scas cwtl add in or xor bound push jns pusha out stos sub push or lods pushf fstl fsubl gs test int3 sub lret mov adc and add add xchg out adc cmp mov popa or xchg or pushf add fwait cmp mov and mov int3 xchg lock dec xchg xor scas xchg inc mov pop in mov inc mov shll push dec or cmc or fs dec clc ror push es mov outsb fidiv and aaa push jno sub jnp push pmaxsw add mov (bad) mov fnsave test adc adc pop pusha enter mov adc scas xchg xchg (bad) enter nop or push shrl insl loop mov sbb add and es stc add ljmp idivb and repnz adc daa xchg test inc mulb lds stc mov sub xchg cmp (bad) xor (bad) mov out call adc or inc adc es nop adc pop into out adc sub out gs and and imul jno mov lahf sub xchg inc push movsl xor lcall (bad) negl sub dec cmp addl mov jecxz mov nop lcall loop sbb dec into testb dec fwait xor cli jno sbb lahf adc int3 cld push int sub dec pusha stos incb outsb clc in add jnp push jbe cmp mov mov aaa test adc ds es add loope xchg shr fidivrl adc (bad) fmull mov cmp lret (bad) mov add jge aam cmp fcoms pop or cmp push aaa xchg jmp and push inc jo xor test xchg adc pop sti and imul cmp jl cld cmp sahf or mov mov into sbb mov xchg in xor mov mov test xchg xlat mov enter pop xchg dec mov outsl mov in mov clc pop xchg (bad) adc fwait xor xchg sub inc pushf fwait mov hlt cmpsb cmp sub sub or and push cmp inc insb test mov ret pushf sub push gs call and adc mov jg jns adc mov and (bad) sbb xchg nop aaa inc pushf jo aaa mov icebp lea or cwtl pop sub inc mov push mov and popf rolb xor loopne cmp xor adc cld adc leave loope xor or xor and pop xor js xchg sub test dec scas mov fmul dec aad inc mov mov iret pusha cmpl mov sub cli pop test add mov push repnz test mov clc pop lods mov sub sahf inc repz push push sub dec cmp fs lock mov lcall ljmp or or inc movsb push in jo add ret pusha fmuls mov test cmpsl pushf pop dec sbb rcl (bad) into mov insb mov test leave cltd or mov lock or in test xorb rorl in mov pop inc pushf add jl pop lods sub mov mov add dec jmp cmpsb sbb mov add int3 mov mov lret rorl fsubp rorb and mov add sahf les lock shl mov xor pop xchg add arpl mov std and cmpsb xchg xchg out loope cmp rcll inc sbbl sub into pushf lock (bad) je add daa mov lds mov std and mov cmpsb xchg or pushf roll out push insl lret inc mov or mov popa adc inc xor addb inc pusha cltd fiaddl sub jecxz pushf int3 mov push sbb outsl xor fxtract pusha xor sbb repnz clc add or lret push inc add es inc nop or adc adc nop (bad) pop cmp jge cwtl test add cmp or inc adc hlt test stos xlat loopne rcll int3 in add adc sbbb psadbw fist loop sub call inc or and fsubrl fdivrs (bad) dec mov shll mov xor int3 test mov mov inc inc xchg pop out or movsb movsb nop mov xor fs mov pop xor outsb rcll enter andl hlt lock adc (bad) mov push imul or mov mov cltd dec pop pushf pop add sbbb movsl mov rcrb popa fldt lds aad dec push mov inc lcall dec sbb add jl push (bad) ljmp aam or ljmp cmpb enter push mov sub pusha mov pop rorb and xchg nop jl addl adc mov pop pop jo pop cmp push jmp add mov sbb inc sbb sbb lock and and pop xorl out fs xchg xlat or or xchg push pusha xchg xchg insb and dec xchg fs gs popf mov in cmp mov lcall mov mov or add xchg lock mov xor xchg pop xchg shlb xchg sub das nop mov pushf dec lods mov pop mov enter sub adc jb push shlb pop and mov (bad) push push dec cmp in and (bad) mov cmp pop scas push and xchg adc push or lret add add push sarb test lds sub orb mov outsb loop test and jbe sbb mov rorb (bad) stos jmp shrb and cmc mov and insb mov or adc inc in inc xchg fdivs dec pop je xor dec movsb pop add nop test lret sub pop mov xchg mov or inc sub and adc mov call or dec xchg mov xchg add scas mov lret ret sub gs push js sub das loopne inc jle add xchg cli stos cwtl stc inc jp or rcrb mov std lcall mov mov push cs fdivrs or xchg dec add xchg cs in mov cmpsl (bad) lock sub mov sbb sub mov in ja mov sahf xchg pop or jl inc cmp stos sub ret aam fmuls and inc adc insb xchg sub mov inc cli dec dec xchg xchg pop add sub and mov pop lahf fcomps cld inc dec cmp daa push lock jo ret mov je (bad) or mov add push add jae sbb test and mov jl mov dec or lock aam mov scas mov es mov mov (bad) cld out push gs fs es and cmp nop add sub or clc clc cltd test aas dec insl lret add mov lock pop or sbb (bad) lock subb pop fcoms push mov test pop push std sti fildll xor loope (bad) jge adc idivb adc sub adc sbb sbb subl sub jno add data16 ret or stc xor (bad) cmp (bad) ljmp cmpsl lods dec test bound push jl mov rclb ja add and (bad) adc mov lods in out add enter ss push mov cltd or mov mov je dec lods clc clc outsb sahf fldcw push cwtl or or lret adc add lea mov jl subb (bad) mov push jle add and jae (bad) cld jle in and data16 sub fs ficoml add repnz andb lcall ss push jbe insb (bad) jecxz adc sub test xor cmp push mov shrb mov mov loopne xor and loopne xchg nop ror jp adc adc inc pop xor inc and xchg call (bad) mov pushf mov fiaddl mov push dec add lods xchg popf ja add repnz push and xchg mov shl xor fcompl pop add enter (bad) push sarb lds mov cmpsl xchg and movsl mov rorb shrb rol jb add fistl jns xor mov mov push xchg sar ljmp adc cltd hlt lret or adc adc pusha sub cmc jbe xchg lock or dec xchg pop mov roll push xchg fwait les push pop pop subl out mov mov aam div out adc rcrl adc push xchg pushf add inc (bad) mov inc inc mov inc mov popf rolb pop jae mov mov mov sbb mov push mov mov push aas jo lret pop stc push or je call mov push xlat pop jge xchg rclb jl mov out push cmp enter add es insb add lock xchg jp addr16 cmp std stc cmp and adc test dec dec mov loopne xor push je sar adcb cmpsb fwait mov popf test xor push les inc xorl ret jns xchg mov push dec adc int3 cwtl mov cld inc or outsb jnp pop mov add pusha push (bad) mov push push pop int3 out pusha scas test add jne cs adc add sbb adc cwtl adc int3 sbb dec or mull (bad) fs sahf xor mov mov das sahf in xor pop dec push push sub xor push xchg cwtl call (bad) out int3 and (bad) push push sub bound pusha mov cmp inc sti xchg mov enter pop adc (bad) mov and imul ja mov mov mov rolb daa xchg inc xor pop sub cmp clc sarl fiaddl sub add (bad) mov jne pop les push std rolb pushf dec (bad) add aam cld add inc dec cmpsl fwait mov aam push pop pop ljmp mov fs cmp mov inc stos xor in or push sbb je out and jo sahf test push inc and out mov in lcall clc pop add cwtl lds insb mov and fmuls cli in clc cs push xchg aad pop test mov shrb sub lret in inc cmc or push movsb sar sahf pop add mov mov popa lahf inc fwait addr16 and arpl xor jns and jecxz push sbb sub shlb inc addr16 sbb fwait icebp les stos or aad adc dec add int aaa repz vmread jmp subb or (bad) test sub adc and add push aaa out enter pushf and mov mov (bad) xor cmp jb sti rolb sub loopne je scas adc inc sub movb xor call pop lret xor dec ficompl fcoml std insb push mov subl add pop fsubrl xchg adc aam mov neg mov imul mov mov pusha movsl popa push shlb js cmp test add xor mov aad add fwait loope (bad) fcoml stos fnstenv or fs push mov add call stc dec loopne pop aad (bad) movsb sti testb pop imul lods mov pusha xor insb pop sub insb adc lds pop push mov (bad) mov jb orb and xchg dec xor add xchg xchg xchg add sarl (bad) mov adc (bad) sub movsl dec test jecxz dec adcl xchg cmp insb pop test mov test js xor aam jo hlt dec mov xchg (bad) imul ret and dec js pop outsb sub add xor xor sarb push add cltd add adc and xchg andl mov and fmuls inc test (bad) fnsave imul mov mov lahf into jbe pop iret dec xorb jp push and das dec adc repnz inc out loopne push das mov call pop pop mov scas jnp enter mov push gs add inc ljmp pop push popf and xchg sub pop aam pop insb or and popf loopne xor adc xchg adc cmp daa add mov daa mov (bad) adc hlt mov xlat mov mov add pop cld adc push or cltd nop and mov (bad) xchg les sub and add mov je loopne mov or std inc rcrl jne mov push loope lods setl sub jle add mov stc sti mov cmp sbbb pop xchg jo adc loope cld sbb or shl cmp or pop xchg sub xor add cld lods sub add mov dec loopne sub daa pusha fildl cwtl mov add leave mov fucom sbb scas push or adc int sub push sub fcomps daa mov pusha xchg mov sbb pop and mulb cvtpi2ps mov adc mov (bad) push imul add mov xchg pop xchg les jns xor inc cmp inc pop das gs lock push cmp repnz push jno mov (bad) jno lds or sub lock stos mov xchg fnsave push lds xchg or ret stos xchg enter cmp push xor cmp addb frstor or cmpl sub idivb push loop xchg sub push xchg scas mov lahf or mov sbb push push movsl inc pop (bad) mov xor loopne lods in push stos pushf sub or mov ffreep nop js xchg add test push aas mov (bad) js repnz inc and xor lods dec adc js jecxz and out ret (bad) nop orl mov lods adc cmpl inc jo enter push je cmp jbe mov cli add sbb adc cmc push mov adc int3 xor push cmp fwait xchg adc add enter cmp add (bad) lahf and mov add mov das lea mov mov (bad) jbe push fwait in icebp cmp add and pushaw add addr16 add mov jl add add push push fmul push cld ss push inc movsb in addr16 lods rcr ret fnstenv sets inc pop lret jae or scas cmp inc repz adc subl adc dec sarb and push mov sbb mov add xlat or loop adc mov fmull movsb nop sub push mov lahf xlat dec pushf mov and cmp cmc jns dec fsubs rorb mov xlat lret dec (bad) sub pop out mov add dec add das sbb sti (bad) sub and jge inc or mov xchg xor vpsadbw lcall hlt loop pop push inc mov mov aas xchg xor ja lock add jo std cli (bad) cmp sub mov pop add jmp enter pusha dec mov xchg popf push and repz repnz iret inc or imul adc test lock or movsl call push add or cmpsl ja es sarl push mov js and cmpsl xor sbb scas sbb or roll icebp lods and nop out cmp sub (bad) fnstcw popa sahf adc fadd cmp pop inc add das arpl es add dec fwait aaa sbbl mov mov sbb xor scas popa pop or in sub in mov test or xor inc nop test call psubsb add movsl in lahf jl cmp xchg pop inc mov xchg (bad) jae cli mov push cmp inc or jl inc push push dec in js xor sbb cmp push mov or das and popf xor sub and sub test mov or push jmp pop xor pop pusha jmp repnz movsb and outsl xorl das pushf call inc movsb (bad) dec data16 insl out cmp and dec pop sub bound xor and int sub or cltd frstpm(287 pop push add inc push imul out flds (bad) pop pushf or inc jae (bad) cwtl or sbb and and add dec setno mov in test cmp imul sub mov push add rcr aaa scas inc lock test jnp push std push repnz (bad) (bad) and cmpb movsb and push adc (bad) mov (bad) jo out pop add fmul adc inc aad (bad) mov sub clc iret mov lock mov adc (bad) adc (bad) mov add xorl inc jae pusha nop add inc cld fisttpll sub xlat xorl test cmpsb lock and or inc and xor (bad) in clc cmp divb xorl lock mov cwtl inc push pop or inc test mov or and pop pushf cmpb adc fbld pop in mov movsl mov inc fadds mov xchg push pop cmp mov addr16 lds push daa mov add imul hlt add in or jnp std mov je xchg push iret jno inc sbb push add jecxz test dec pushf pushf xlat add cwtl mov sarb add pop out or add lock mov stc mov sahf and stos loop rclb loopne in xor rcl pop test mov imul sarl push ficom loop cmc mov addr16 movl andl enter cmp sti nop rclb and fmul in je fnstcw nop pushf xchg cmp jl test inc nop hlt add insl push dec out adc mov xor jecxz clc or xchg adc push pushf sub rclb jb je mov push add ja xchg cmpsb and aaa (bad) adc sub add jg inc cmp mov nop inc test aas rcrb std cltd mov sub add adc adc cs cmpsb mov add insl bswap sbb icebp (bad) lods in jnp (bad) xchg es or push push repz fst and fcoml xchg add xorb mov sub sar add movsl test add and push dec test or or mov fsubr outsb mov mov adc iret jb aas mov mov sub xchg adc or mov sbb int mov jl imul outsl sub loopne push rdtsc jae stc cli popf inc in dec aam mov xchg xlat jg and adc popf cli push xor add int (bad) sub lret test mov jl adc inc mov test sbbl xchg and add ret add fiaddl stc push inc sbb test jl addl xchg out add rcrl icebp mov xchg ret push push sahf jecxz pop mov cmpsl shlb mov cmpl xchg rcrl jnp adc lock push xchg mov push jns sbb in pop mov cmp mov cs js mov adc mov addr16 stc mov add push cli hlt inc xor push test jbe in fmuls push test leave add rorl push mov roll andl scas sub int lea out cmpl repnz nop push mov lea push and ja fs pop lret fbld push inc jbe mov sub test rcrb xchg mov cmp aad and pusha or call iret inc xchg and or cmp dec inc xchg (bad) cmp mov stc xor icebp inc loopne lds andps mov cmc mov xchg in sarl inc enter push or in js cld rclb add mov repnz add ljmp push mov loope rcll adc mov xor lcall and dec xchg jl pushf mov xor add insb and and das lods inc mulb lea sbb in xabort add jecxz or xor cmp or mov loop ljmp push cmp push addr16 movsb (bad) mov add dec push mov sti stos test gs repnz pop roll fimull pusha enter push fildl cli movsb adc popa xchg fsub inc rolb adc dec lea enter arpl int3 clc adc sub mov (bad) lahf push rclb arpl dec push cmp ret xchg jl or movsb mov mov icebp mov sbb (bad) int3 or mov add mov sbb push nop sbb xor unpcklps add repz nop sub adc orb or rclb jg dec ret rolb call inc xchg mov out int mov stos es popf mov push and jmp xor fildl and ja cmp fldenv daa adc roll push addr16 or (bad) xor xchg js jp mov pushf out sbb fs or adc bound mov xor sub mov dec add inc or repnz in dec adc add int lds jo cld add sbb cmp pusha enter ret xor mov sbb inc es enter fdivrl or xchg mov js or loopne sub and lock mov jb xor fs adc lahf flds mov out dec call lods das jno sub nop and pop mov (bad) lret sub add push push push divl xchg sub add xchg dec xchg push (bad) xor insb mov push test mov xor scas mov push and lcall add dec mov pusha xor adc dec (bad) jae enter bound sub sbb call aaa dec and or data16 sbb test repnz cltd ror or (bad) orb (bad) rcl addb addr16 dec adc mov jmp xor push add fsubs cwtl push mov mov add lret push fst dec mov xchg push sub push in add cmp and jl sbbl adc and jns and add cmp inc mov shlb mov nop or jno or loopne insl lahf jo shlb mov popl das dec test fs jl xorl jnp in cwtl sub scas xor jmp push movsl and leave pop dec jo mov js imul jae je pusha test add stos mov movsl mov or add jo test scas jecxz mov iret add std push pop dec sbb push and sahf (bad) xchg inc fadds sti cld lock or mov mov das dec or jo pop daa inc or cwtl sub push xor xor and and adc push mov xor test test add out pusha stos loope dec mov and cmp jg,pt add rclb and adc lds add imul mov mov sbb adc loopne repnz cmp cmp cmp in or mov std lock nop push and and inc mov cmp xor push sub jmp das stc ret jbe mov clc add imul (bad) sub cmpsb sbb cmp sub dec cmp movsb xor cmpsb pushf add cmp jnp and pusha xor push inc outsl pop push jg add psllw mov pop lock add iret and stc mov and pop fbld dec sti stc or rorb push sub cmp sbb jno mov add fldenv jge pop (bad) stc mov add xor rolb mov sub icebp jae lret (bad) sub lcall xor pusha push mov mov xchg hlt jge xchg js and jno test inc rcll add pop in add rolb ret jl add ljmp sti jo arpl out inc mov add andb jl,pn add mov and jecxz outsl jne add js dec movd dec add in repnz test test sub cwtl addb cmp and sub and scas adc or xchg push mov addl testl inc jmp pop adc and sub sbb xor test sbb out lds mov add mov xor insl sbb adc mov xchg imul jle pop icebp mov xchg clc push xchg and test xchg lods jnp add lret push popa or mov add sbb cmpb cmp (bad) xor inc or (bad) and and mov pusha sbb inc push mov lahf or xchg xchg les das mov popl xor adc push sub dec mov aam iret adc cmp scas out xchg push mov loopnew mov cmp shrl (bad) pop xor cltd rcr dec add sub push (bad) mov add in xchg and sti jb sbb dec cs xchg cmp xchg jl inc dec add in vpsraw cmpl imul loop fs mov sub xor lahf xchg sbbb inc mov adc imul xor add xchg jecxz and pcmpeqb (bad) xor pop ret push xchg addr16 mov lock mov adc sub (bad) jbe sub cmp add mov (bad) adc fsubr or adcl es push popl in xchg pop popa inc fdiv out mov bound dec or push pusha imul lcall inc pusha fstps add push lods mov rclb addl or or cmp leave addl and adc fldt int imul jo push sub add jnp imull xchg dec gs adc mov and pop out xor fwait add in add mov push subb (bad) jge shlb dec xor imul faddl int adc mov push add add mov or xchg cwtl pushf ds add push mov loop lcall clc xchg addl dec or cltd pop mov inc nop pop and fidiv add push jbe add sbb fwait pop jns js outsl enter dec test lret in and (bad) lcall (bad) mov add (bad) fnstsw addr16 xchg sub sbb push pushf mov out and pop enter add xchg in inc inc sub or xor ljmp es loopne and adc push sub test shll adc push sti mov sub jno pop lret adc pop int3 dec pushf inc jg mov stos lret imul xchg jns sub shrl rcrb sahf mov popa or cmp cmp pusha mov mov mov xchg subb mov pushf (bad) or aaa roll adc ret add fild mov push push sub xchg xchg add sbb lret test xlat sub dec scas rorb add add xchg push add (bad) sbb push jl add fildl mov daa in add sub outsb push loopne adc mov add xor inc cwtl cmp mov or lahf xchg pop dec cmp adc and jecxz lret cs cmp xor pop push mov aaa jne mov pop imul xor fldcw iret mov icebp jl ja jge pop loope push iret sub out adc push jecxz or jmp xor cmp push add repnz ret sbb sahf sbb sar arpl and and add push (bad) jle inc pop add xchg aam int3 push xor mov pop or popa pop jb ds addr16 jmp rorb data16 out push mov out addl int3 add adc mov or jo sub nop mov push pushf cwtl push sub sub call aas xor push dec xor cld outsl push (bad) jo imul lods pop add xor js push pop movsl (bad) cmp loop jp add das stos arpl icebp les cltd data16 movsl dec mov into addb bound ljmp test (bad) push mov in and sbb or mov jb inc mov xchg clc pusha (bad) ror push rorb mov mov add push mov dec cltd ss adc add xchg xchg iret cmp sbbb fdivr movsb cmp daa add fsubrl jmp pop push loop pop push andb xchg int sbb (bad) inc dec jnp adc jp jno adcb daa stos sbb sub imul out xor cli add adc add insl sub out mov xor stos adc arpl cmp push add push js in sub shrl stos mov dec sub adc mov adc mov inc push xchg repnz or add cltd out pop rorl arpl insb mov push imul add mov add stos scas or lahf test and jo in or (bad) daa leave movsb add dec je fisttpll aam mov dec xor jecxz sub mov inc je inc push xor and mov inc mov dec sbb inc jl scas mov push (bad) test sbb outsb iret pop aas inc add pop xor rcrb repz adc shr out inc rclb aam cmp mov sub mov loop out adc sbb mov fstpl in add mov add insb pop repz and fcom test es loop movsb mov push setl jg mov das mov or add sub sbb test in fsubl data16 ljmp pop movsl adc out push outsl insb subl aam sbb aaa insl inc xchg rcrb je repz call and out mov and mov jnp add sub jo add paddd std xor dec test add mov cltd xor add ljmp add loopne test cmp sub cltd out in jne jno add dec (bad) inc lds lret sub icebp (bad) ja xlat add cmp out cmp out adc xchg inc lods mov jne insb mov nop in jbe sub test add movsb xchg xchg mov (bad) dec cwtl js nop rcr dec mov sub mov clc imul ret insb dec js (bad) sub and jg repnz add pop jnp dec enter mov icebp mov call add ja shll sub jns jnp out hlt xor daa sub xor outsb xor adc leave popa sbb xor dec dec pop and test sub lods jo cmc mov xchg adc and mov push mov add pop pop orl xchg js push pusha ds outsl testb imulb lahf push movsl cltd xchg lret andb mov add (bad) sub sub xor jo and push js add add loop adc push xchg test ret test fstps test bound cwtl xor inc push ss mov mov (bad) movsb or fdivrl xor jnp bound js lods add repz dec add inc fldenv mov mov test repnz sub stos insb mov xchg movaps mov and sbb mov rcl add push dec gs and mov enter fsubl or jl jmp in lds add and clc xor ret sbb jno inc xor mov nop dec pop sti jne shlb in ja sbb inc mov and repnz add or xor mov lods fcoms movl dec repz mov pop (bad) add cld scas jae gs lock or pop adcl mov add sbb (bad) mov cmp cmp and xchg add sub mov adc xchg jge xchg xchg mov mov and ds fsubs inc js shlb jbe clc push or mov xorl add inc pop movsb add mov jbe pushf pop push cmp sub aam notl or mov adcl dec push jb aam ret cmp or or add stos and add repz lcall and dec mov add add lds pusha or shlb sbb mov call sbb stos fcomps sbb jmp les jge dec sbb and test xchg sub xor into mov lock inc ret push imul aam xchg loopne out push pushf or in addb aaa es xchg add or or movsl inc mov stos std test mov aad cmp xchg repz gs in or mov cmpb cltd out mov pop leave iret inc out pop shr mov hlt add mov inc sub (bad) into sub outsl mov andl mov or js int3 pop in das mov out je pop adc adc (bad) lock movsb or in jae mov andl cwtl push push sbb aam dec fs or mov xchg jne jae repz cmovl jns notb clc mov jp or mov sub jle inc mov xchg mov fs rclb inc dec fstpl sbb pop dec sti add mov push test pop pop stos call pusha movsl fs mov add sbb dec mov add add test adc sbb add mov xchg add je push mov dec push inc pusha nop nop enter (bad) (bad) movsl je mov add xchg dec popa repnz add pop movsb push mov push jo fcoms pop add sub xchg sub mov add add pop stos and add jp mov jbe leave mov jnp rclb out pusha push cltd ja push repz icebp mov mov (bad) je cmp lea push and (bad) jecxz jo jnp subb jge or sti adc popa mov mov push mov je outsb sbb dec or pop stc push lods out jl fbld (bad) fnstenv arpl sti mov loop push mov nop inc push mov pop cltd jp sti pop in sub add inc mov lods add sub pushf push stos je add lea push xchg imul dec pmuludq dec (bad) cmc clc jmp std pop push cmp out test pusha cmp jno sub mov repz aad gs push ja push mov push nop push ficompl sbb arpl repz adc push sbb repz add mov jmp jno rcrl roll outsl out test push faddl in push jnp sub jl add stc notl cmp jnp mov add shufps or sti cld fisttp fidivl cmp adc add test jmp or fadd or lods imul push (bad) hlt jno mov and inc ficomp pop add pop xchg push or adc insb jmp xchg js jmp js fwait movsl push mov dec adc adc stos jle add std pop and movsl fildl cmp mov out in xor sbb sbb jns jecxz scas mov cmpsl xchg xchg add push cmp cld aam inc aas jae push sbb sub imulb adc sbb pop pxor add nop and xor adcl hlt repz pusha jmp adc xor ficoml mov cmc mov js jmp add sbb leave addr16 andl call pop add mov add hlt rolw inc imul adc add jae xchg cmpsb push hlt mov inc or pushf jmp pop or dec cmpsb outsl sbb lds fmuls push inc ret push dec int3 pop test adc jnp fs mov xchg xchg loop lret push scas mov cmp rorb pop cmpsl or adc push repnz cwtl mov inc add mov data16 outsb jl sbb in add add mov push and popf fldcw mov push push add fidivrl pop and sar call xchg jecxz ret mov xor jnp add push (bad) cltd aaa shlb cmp inc ja out add jmp pushl scas fs fisttpll cmp das nop add or cmp lcall shr mov pop fmull dec fisub es repz rcl rcll cmp push dec add adc mov add dec add aam pop (bad) mov orl int3 mov lea cwtl sub sti push test pusha push scas lock imul icebp fdivl out or xchg pop mov pop fbld pushf ljmp inc test jge mov dec pop mov sub loopne push pop jbe and out jmp popl mov dec lods shll jp jecxz addr16 jns xor enter xchg lock ret dec scas adc dec cmp pop mov outsb test mov sahf jo (bad) (bad) or and lods das xor inc ret clc adc cmp push lahf insb (bad) out add pusha test dec mov dec or aam loop dec sub push aam rorb test std push inc aam mov add call adc xchg in addr16 test stos add (bad) in inc nop adc lahf jo and hlt xor mov out pop movsb xchg or adc sub inc loope test or andb and sub adc pop dec adc sbb popa jecxz mov adc xor inc jne dec lret outsl xchg loopne je adc dec into lods and jb xchg lods xor rclb jno jle pop pop (bad) out xchg adc jo cmp aas jp mov mov and jo xor ffree lret out pushf pop loope and mov bound ds lods jo test dec mov xor and iret cmp jecxz and dec rclb hlt xor push andb or sbb and aas aad (bad) in adc test out les dec jl fdivl or sub mov xorb dec out subb fwait push pushf ret or add or cltd (bad) sbb in add pop push cmp mov movsb adc cld dec adc cs mov add enter jmp lods adc add xor daa mov es stos mov pusha and iret outsl subb mov mov adc add pop push sub adc sti and pop mov cwtl jl imul shrb or loopne jp fldl cmc test adc int pop sbb cmp jbe or xor mov lret in add (bad) lahf add into adcb fsubs (bad) inc mov xor add pushf jge pop (bad) push mov adc and jl ss pop push adc fmuls mov repz sbb mov push adc mov add mov outsb xor hlt and movsb and insb sub aas mov push and stos adc xchg inc rcrb sbb lahf sub push (bad) mov jp sub add sbb rcll ljmp imul jecxz inc inc jge sbb and cmc icebp pusha mov or sbb cmp mov cmp idivl push xor sub fist adc test call into sbb mov pop es mov test add mov lock fnop sbb jnp js xor and nop enter enter call sbb int3 pop pop add test shrl inc pop or rcrb push test fistpll js pop adc leave (bad) or imul mov aaa addl sti and aad rcl clc cwtl dec xchg mov out add push (bad) rclb aam pop xor mov push subb sbb and adc pop clc mov push sbb xchg fdivr testb dec dec mov xchg inc push dec pop (bad) mov pusha and sbb rcrb push fsubs adc fdivrs pop aam sbb mov mov push xchg cmp jae js std add adc test dec pop add data16 aam les xchg dec nop add sbb sub jp add push dec test xchg arpl call and in bound xor and add hlt cwtl xor (bad) notl sahf xchg movsl (bad) clc cltd and xor pop sub add ljmp xor inc popf enter les rcr and xor dec cmp and inc xchg in or cmpsb ffree movsb insl sarl mov jle (bad) fdivrl cmpl ret cmp or mov or sbbb cmovo nop enter sar push stos nop movsl nop bswap push mov outsb les add and sub scas clc adc add pop test ljmp push shll or fmuls mov sbb mov mov lock pop addb mov jl cmp jnp inc cmc or fldenv jo in popa xchg inc sti int3 mov push lahf xchg push std push add adc jecxz pcmpgtd repz adc push nop mov sti dec pop cmp push aad inc inc sub and aas inc lods pusha insb sub xor mov mov repnz cmp cld (bad) movsb gs addr16 mov add mov fwait (bad) (bad) push cltd lock cmpsb push jne mov add add push stos inc les push cmp jo xchg pop inc es push add push jo std decl push mov or xchg paddq sub lcall or push dec stos adc mov test fcmovu mov clc push sahf inc (bad) mov nop popa add lahf imul int3 dec cld lret add jbe pop sub add dec test orb xor dec pop jg (bad) pushf popa in idivl scas nop pop test sbb ret inc or sub push push (bad) in add push pop and in push push clc fcompl call imul rcr cwtl cwtl add cmpsb add xchg pop scas cmc add fldenv dec je inc push into test scas popf add mov dec jecxz push sub dec aam popa jnp add jmp mov mov xor sti push pop or or dec inc and loopne fistpl ret sbb iret adcl cli mov (bad) xor dec lock add js sahf dec rcl xor (bad) pop mov add dec hlt insl pusha into pop dec rcll cmp insb cmpsb jo inc push xor in mov (bad) out lock (bad) aam and xor jbe test lea add arpl test dec enter xchg pushf fimul cmp pusha js inc adc fisttpl xor pcmpgtb push gs scas add add (bad) or mov push loope push clc lret xor sbb or hlt bound pop movsb int3 call ljmp sub outsb dec punpckhbw imul fdivp add nop call aam push cmp mov pop sbb mov adc les (bad) into mov rolb add sub push mov push notb in les or jle cs je dec in call fiaddl (bad) lcall or cmp lock aaa or jns xor subb dec fwait cmc or inc shrl xor andl test out test sbb adc int3 xlat inc int fsubl popf cmp dec es sbb xchg pop hlt add and in adc mov xchg outsb ss int3 xor add ljmp pop enter add xchg jp mov insb mov pop nop movsb sarl lods add xchg cmp mov sarl (bad) jo add add xchg (bad) or pop sbb fnstenv xor inc mov pop arpl sub mov dec nop enter add enter mov mov rcrb jmp pop loope inc hlt add add inc enter mov ret jge sub cwtl pop int3 xlat in adc mov add mov or mov (bad) cwtl lock sarl pusha mov fs push rorb insb stc shl int or cmp jo jmp pusha lahf adc adc aaa lret test leave dec arpl push and cmpl xorl jnp or mov xchg inc mov push adc add movsl pusha ja js mov les and stos fs insb sbb in sbb and hlt xor sub pop testb push cmpsb rclb in fwait rcll push dec popf xor fsubl cwtl jae or pop add pop jg add icebp mov inc dec inc mov jo les xor lcall mov ffree inc fcoml pushf dec adcl and popa out mov je add movsl fsubr adc lret ror add cld pop movsb divb add pop push push pop xor popf stos popa rolb push xor mov (bad) and icebp xchg add xorb (bad) lock pusha cmp push cwtl insl mov ret sub dec inc xchg lret xor movsb mov mov add inc sub cmp mov xchg adc xchg fsubrl nop add int3 (bad) jl xchg leave ss lods adc sub shrb add clc ss imul pop and mov stos ret fiadd hlt (bad) pop inc sbb int es dec (bad) mov imul push mov and inc pusha loop pop inc inc pop lods subb add inc mov fcoml dec mov cld sbb push xchg dec push pop subb add cmp dec rorb push les inc pop push mov adc fadds mov sti ret sbb push out movsb clc add stos pop bound ds (bad) clc cmpsl std pop mov in and (bad) rol loope clc push clc xchg test fimull les or mov imul lret repnz out and push adc mov je xor add dec (bad) cmp repz pop enterw cmpsl cmp push pushf xor push jae xor mov (bad) int3 push mov loop mov mov push ret xchg xchg inc adc add inc test jge test mov cld in pop int3 ljmp loope xor cmp add shrb jb and les xchg enter test cmp cwtl fcompl mov lret repnz orl mov sbb inc push push fcoms int3 xchg addb cmp mov jno add movsl push mov sbb mov fcmovne shrb dec inc clc add and inc aas (bad) add sub or mov adc cmp inc lret test pop push orb cmp pop sti cwtl dec (bad) dec mov (bad) sub adc sbb xchg or test inc nop je cmc out xor repnz add mov cmpsb js adc aam and test push fisttpll in add cmp iret leave test jno fnstsw movsb mov push (bad) fcoms jg nop and pop mov mov fsubrs push cmp jne push in cld push bound mov mov pushf add jo and add aad mov adc lret fdivl jb and in lahf fcmovne pop sbb sub sub inc add dec outsb aas daa insb push mov inc insb shll and insb in xor xlat std out sub and int add in inc les ret and movsb lds mov dec fwait mov stos add dec xchg mov (bad) mov push cmpsl bound sahf cltd add xor push sbb xor mov fidivrl pop shrl cmp jo or xor xor (bad) mov and lcall push xchg mov xchg test mov push insl xor adc pop daa push mov xor shrl sbb pop inc cmpsl mov jns cwtl mov dec push pop sub or and pop add sbb cmpl lcall dec add orb or call xchg stos add pop fwait xor in fsubrl and cmp or addr16 jl cmp inc cmp mov inc (bad) adc xor mov xchg or adc popl sub bound sbb loopne sub jg inc pop call push or sub cwtl or or ret sbb ja jmp pusha nop inc rclb lods sub jecxz adc aam add mov sbb orl adc push add add loope subl push sbb jno inc pop mov enter pop or mov pop sbb lret add mov mov daa nop mov and pop loopne icebp dec movl scas dec pop js fwait push sbb mov iret and add fisttpl out data16 je xor sub es into add ljmp adc pop loope push add push xchg lods mov sub xchg inc mov pop jo jecxz mov out (bad) rolb xor pop out inc in xrelease inc pop mov jmp pop dec adcl dec adc push pop adcb adc pop rclb sub test (bad) jae das mov add sbb fmuls adc fsubrs sahf mov call stos daa fisubr sbb inc cmpsb or add or pop movl add mov and mov add jp cltd or xchg enter mov test popa add cmp mov inc push mov mov inc mov inc cmpsb in pmullw xor mov and inc ret mov daa jmp cmpsb rorl xor adc pop add iret fnclex xchg inc sarl inc xchg pop mov arpl pop cmp add cmp dec loop adc push daa xchg subb inc mov je add fwait or xchg add ror leave test rol ljmp pop and nop lcall dec pop data16 mov add dec sarb js js add inc jmp sub mov iret sbb incl mov push aaa pop push lock add adc pop pop adc or lds mov push inc sbb dec (bad) xor inc mov sub sub sbb scas or lods xchg mov sub jae add inc (bad) lret xchg stos lcall adc jg inc mov pushf pusha lds fdivs mov cmp negl pop rcll rolb sub cmp sub xchg or mov cmovge mov insl mov les je add shl movb test add (bad) int xchg cld push stos add mov nop cmpsb (bad) xlat and add cmp jae add nop iret imul mov add mov add sbb cmp cmp sahf (bad) gs sarl sbb sbb mov jbe repnz lret mov push iret inc xchg loopne xor jl fldl sbb inc ds ljmp adc stos xchg jb mov pushf add and mov mov inc and fs les xchg xchg iret adc dec pop and rcll push loop dec lods sub cmp rorb cwtl lock and mov dec inc xor sahf cmp pushf in and dec leave (bad) xchg mov out pop lret pop sub mov xchg loopne stc mov cltd push xor push and add repnz outsb xchg lea fadd fwait data16 xor xchg mov adc js iret arpl mov cmpsl mov ret je adc mov and fs das or jge loop lcall mov or dec mov ret add xor mov xchg in xchg cltd add mov cwtl and mov mov adc or aas nop mov int xor pusha sub nop loopne out xor dec (bad) in add ret and mov push jmp ss ret daa dec jo pop je les mov leave and inc clc mov jo xchg and (bad) xchg xor jl inc int or xor movl nop adc pop setae sub or aaa sarl inc push dec mov lock pop mov lahf xor rolb inc call or push mov dec inc call or jg pusha add (bad) fidivl push xor push adc enter ud1 sbb fnstsw mov mov fwait insb add scas sbb inc mov pusha inc inc lret aas (bad) and rclb cld lcall inc fwait jmp add arpl dec call xor dec andb movsb cwtl sub add call push int daa pop and ljmp add repnz aam cmpsb add inc das movl outsl push inc ret push jge orb and hlt enter add push inc test pop fnsave imul jo cltd add loop pushf add jecxz insb adc inc andb loope push test and in push inc sbb pusha cwtl lea xchg mov sete push push bound add and dec mov nop and lret imul ljmp add nop add mov les bound pusha xadd and pop add xchg add cmp mov pusha mov mov xlat out cli xor pushf push or fldenv popf les or imul jns or jb les jle and shrb add (bad) or pop and dec into test iret scas sub or push nop lods leave ljmp movl xor loop out nop test xchg push lcall add xchg popf std data16 out lods inc cmpb lods verr mov or ljmp daa mov lret mov shlb or push pushf dec adc mov xchg leave adc or dec shll enter outsl xor das push and jnp push mov loopne push test inc mov imul rol mov repz aaa lods cltd inc lea stos daa outsl std lahf jns ret add dec addl aad call cmp jge lds call mov push mov repnz cmp dec jmp and or dec mov jge inc push cmp insl pop and or inc cld dec inc stos or in jl mov ds repnz or cmp inc or add movsb pop fistl cwtl jecxz nop loopne dec cmp call xchg inc mov ret xchg push in in popf mov pop (bad) out cmpsb sarb add sub aam test and xchg loope dec or inc sti push mov sub mov mov pop addb cmpsl fiadd pop dec inc (bad) or or mov xchg aas or mov sbb vmovaps sub cmp inc int3 outsl je mov mov xchg xor push nop into mov loope pop xchg mov in aam mov ficom cli xor push es lds cmp int3 lock inc in (bad) add jae push mov daa ret testl rolb lods or cmpsb (bad) flds mov cmp call pop (bad) push or adc and out sbb mov sub inc loop add nop shrl xchg or xor sub rol dec inc test xchg testl hlt inc xchg dec jno adc xor jo or mov dec mov mov movsl test xor je add mov rorl je and out iret in popl xor xor je dec pusha rorl faddl and mov mov xorb mov je sub add jbe ljmp call sbb rorb addr16 adc mov lret mov push add adc xlat or sub xchg mov rcrb mov push lock dec enter enter pop ljmp xor lods pop mov fwait xchg push and rolb pop jg inc pop lret es loope adcb in push mov add add push sub and and js mov push or xor jge rol or icebp cmc mov les test lods inc cmp xlat and inc lods xor faddl ljmp mov js inc popa push es push push add sub repnz outsl sbb cwtl or mov int3 sub add push vpshuflw push idivl (bad) shrd inc sub push push imul scas mov and shlb inc pop movsl je xchg xorl (bad) stc pop dec sbb ja xlat dec push inc scas or add aad ljmp sahf push xchg scas in rorl inc cmp out sti fcmovnb es pop subl inc sti test xor pop loope scas sbb lahf (bad) or add and jno outsl jbe push nop sub out add cld inc subb loopne adc add jg adc and iret dec and bound stos mov outsl dec adc sbb nop pop add je push add jge test add sub dec les ljmp xchg sub (bad) jns adc dec mov cmp fs mov add or add aaa imul xchg cmp cmc rolb int scas xrelease xor ror sbb and pop jo or test sub loopne sub inc lock or mov leave sub scas jnp and sbb mov out pop out cld add pop pushf push adc and or sub movl push lea sub push jmp push mov pop pusha push scas in (bad) rcrb mov fcoml push mov add cmc mov sub jae aam nop add sub subb mov cs add mov or sub nop cld ret cmc (bad) mov add push dec pop push sub push lahf popa or push dec in ljmp hlt and int3 mov and inc add jb cmp movsb or inc loopne scas xchg dec cmp and sub xor mov es std mov fist add inc gs out shrl adc pop push and add or call xor add repz xchg mov jns add pushf movl pop movsl pop aas and fnstenv cld xor dec adc push sbb clc inc add arpl mov inc pop adcb stc outsl daa or inc nop and adc sti inc or pop cmp pop xchg jns dec add pushf sbb loope add mov bound inc aaa jno add insb add fsubr inc pop inc or jbe imull pushf fmull and sbb or dec pop or mov (bad) mov add in fwait outsl ret jbe add fmul mov fs aas in inc dec mov sub cmpsb lods call insl inc dec push dec add inc cmp xlat mov add pop add lods les sbb inc nop cwtl push int test push insb mov std (bad) idivl jle and ds out (bad) or sub push and test pop sub fldcw or pusha andb jmp bound mov pusha dec nop sub add sub add xor dec sbb std fadd pop dec mov outsl and rorb cmp dec popa xchg and sti stos adc popl rolb xor jl pop cld adc add popa sbb js enter fwait and inc jno add cmp and lret xorb cmp popa out adc pop pop les adcb mov add lods aam push rolb push xchg fadds clc push and lcall lds cwtl mov ljmp int3 push call add movsb xor cli aam xor aaa inc jge lock push jge mov jmp or mov lods inc xor leave pusha inc shrl jp dec add ret lock cwtl mov imul in or mov aaa pop andl mov mov aad enter pop and lock cmp jecxz sbb (bad) cmp dec inc add out or sub mov jno pop popl xor inc jge jae punpckhwd pop push shll sahf mov std mov nop sub mov add push mov aas scas leave add imul ja or pop movl negb xchg rol adc rolb lds (bad) scas push inc xchg aas mov push adc cltd cmp je nop inc mov std inc and fistpl inc dec or pop je adc push xor mov test fcoms inc xchg sub dec add daa pop cli rolb cwtl inc pop xor sbb dec inc test icebp inc push lods sbb adc test nop imul dec popa int3 fdivr adc add ret loop faddl stc sbb inc loop aas cmpsl mov aaa xchg shll lock sub add mov pusha bound add xor add xchg ljmp shrl mov and cmp mov fisubrl movl sarb jl inc call scas out imul add sub dec xchg lock in in push mov or and xlat call notl call push les dec xchg nop roll scas cmc fildl movl dec fdivrs add lret sub jl or jmp cltd xor xchg mov lret mov in mov pushf scas pop clc (bad) adc fmull and test jns jg fstps shr mov cmp push push jp rcll mov and test rorl pop adc jl cs inc push xchg jo roll repz loopne push pop xor add les andb sbb dec ret cmp lea or fmuls add and stc int3 inc cwtl pop fnsave push aaa leave sub adc and cli and mov in inc cmpsb push and jp inc call stc sub lea mov jp or mov or (bad) xor cltd stc repz and xor jb xor cmovbe imul jecxz popf sub mov dec xchg hlt mov movl shrl outsl scas inc int3 pop inc call pop inc sub fs mov dec add pop jo dec outsl dec pushf and add test hlt inc dec pop dec dec sarb push mov lods sbb aam lcall or dec outsl stos push add jbe in mov scas jg push in out adc inc fcomps mov data16 mov mov xchg test iret repnz adc jl add cmpsl pop push jecxz (bad) stc pushf adc and sub add or (bad) jno ja push imul add sbb push add fidiv insb dec sbb mov fistp and jecxz dec xchg clc cwtl adc add lcall pop sbb daa xchg ror inc pop mov je out mov and lret movups inc inc xor arpl ds or mov inc das xor outsl sbb es xchg adc mov adc into mov std sbb cmp lds and mov test addr16 inc insb lcall inc sub (bad) je cmc push js popa aam pop or or stos sbb push jecxz sarb jl psubw pop jo lret inc pusha nop outsl out insb jecxz dec push xor jns sub mov xor fcoml aam es mov cmp movsl lods lret or mov ret scas pop test rcll and mov push or ret lods dec hlt and or into mov data16 out movl pop lret mov xor jnp call pushf sub test inc sbb push pusha cmp cltd dec mov fcmovu clc add clc mov jbe and in rcll pop push paddusb xchg rclb stos push and add jl jns scas nop adc inc pop lds and inc jl cmp pop loope inc push je dec scas dec xor enter nop lahf inc imul roll aaa (bad) pusha add pop cmp bound push inc sub jae pop push add ret (bad) js mov scas jmp dec inc lods pop les lret add push sub mov sbb inc cmp js aaa lods les hlt pop adc imul pop inc cmp adc pop jge es fs xchg jl jnp cmp or imul jno jge fsubs enter lret mov in pop ss mov shlb jge popf outsl pop inc sbb and cmp loop xchg mov or pop mov sub cmp adc repnz in mov add outsb or ret insb dec inc jl (bad) inc scas add sub cmp arpl xorb cmp lock add (bad) test sbb out mov mov jle data16 or and test jbe subl (bad) scas imul or pop ret cmpsb mov lods int3 or pop xchg sti loopne cmp cmpsl add test add lahf xor ret adc xorb mov fisubl in push or push leave add jle jecxz sub iret sbb xchg jns pop mov fcomps lods and xchg je test cmp and test sub pushf outsl fnstsw hlt popf pop movsl mov imul (bad) lock std cmp out xor jmp subl add in jecxz add adc cmp fildl xor test or xchg add xchg pop xchg and add mov outsb dec clc mov mov test push loope or mov mov inc mov add cmp cld lods or adc adcb arpl or cmp ds movb popf or rclb add lahf adc jo add dec adc scas push ds into rorl and fimull pusha div adc in jg add andl jecxz xor rolb jmp mov mov sub repz aam imul add dec fistp inc cmp fsubrs std mov int adc loop sub imul sub pop or adc add jecxz icebp jns jmp sub mov add fcompl xchg dec flds jno pop lea xchg pop sbb or jge and mov or mov cli andl pop in dec cmp test inc sbb add push popa aam inc adc add and insb adc dec add test xor dec adc lock mov (bad) jo iret cli jae cmp shl sti lahf sarb push push add cwtl cmp jae cmp lcall lds shlb sbb repz out pop insb cs inc stos sub es lret add rclb add test inc insb aaa and jns pop (bad) not cmp inc jb pop and pop shrb pusha or and sbb call test outsl lock add lcall adc inc fmull xor cmpsb adc enter fcmovnb pop loopne sbb in push fist sub add sub cmp add out jbe or loopne out repnz mov pusha or jmp inc pop and clc movsl test inc add iret xchg test clc push ret ss mov and add or enter jbe fsubrp pop sub das cwtl add mov inc adc test sub add and fsubl iret mov jno jl into mov clc inc test sarl mov pushf clc cmpsb push cmp bound dec xor pop js mov sub mov sbb mov push scas jne add and lret nop push lods xchg rcrb add outsb and sbb movsl fistl mov daa inc (bad) movsb addb dec lods cmp repz adc and out ja sub movsl hlt adc pop scas clc fsubrs xor lock mov aas sbb xchg lock and adc pop clc cvtps2pd lea (bad) adc pop inc add das cld in idivb push adc cltd cmp add mov or xor call adc (bad) aaa mov je add movsb mov rcrb sub lock movsb aas cmc ficomp pusha and jge xlat xchg xor adc and js xchg js inc dec movsl sbb sbbb in dec cmp add push arpl js (bad) out mov lcall shll mov or mov orb shl fistp xlat mov pop repnz xchg (bad) push add call andb fisubr or mov fnop rcl adc push add aad popl fdivs cmp std sub add repz mov sbb xchg (bad) mov outsb and aam mov clc inc rorl add mov sub idivb dec (bad) clc (bad) cvttps2pi jl xor cwtl mov ss and nop pop mov fwait push and mov dec jge in add or cmc mov insl adc rol pushf or push sbbb dec nop push mov jge repnz add rcrb xor stc inc mov pcmpgtd in mov mov add roll (bad) cltd pop scas (bad) leave lcall scas add xchg scas mov push mov and push cmp in test sbb movsl jmp enter inc and int3 xor jl adc aas and aad fsubl or (bad) fidiv sub sbbb inc mov jl lea les sbb sbb lret pop add jl je inc xor inc add cmp movsl mov and int jns cmp adc out sub mov cmp (bad) jo divb sbb jae cmp rolb sbb add add leave mov pcmpgtb adc unpcklps jl test push imul pop enter push fs adc mov xor orl mov pop rorb loop or out push mov call popa (bad) jl imul fwait pop test lods scas push cld pop negb aaa push js mov sub mov dec jmp stc cmpb pushf jnp add or hlt (bad) shll addr16 add pushf jecxz or lcall mov adc sub xchg aam cmp add outsb data16 jl sbb nop pushf add mov test sbb popa sbb repnz push and imul popa std in aas or adc call sub in test push add pop repnz in xchg adc in and in add lods outsb scas call rcl pop sbb jecxz inc addr16 cwtl jle add pusha mov outsb jo add je mov xor in das or in imul mov mov fisttpl dec hlt lcall aas mov fwait push jl aad clc inc ror fldl sahf jge scas lret psraw ss mov enter rclb dec or fmull mov jns cmc shrb sub and mov int3 hlt rorl incb fwait inc add insb test sti adc cmp dec mov dec cmp add lcall push push xchg stos fdivrl stc dec inc inc or fsubp mov mulb repnz sbb mov outsb push fbld or call cmp mov mov jo lea outsb loop xor and jl mov out add dec xchg adc dec mov leave fnstsw sbb add or lock xor mov mov adc dec in and test je xchg insl xor dec in dec outsb and adc test clc mov mov cltd lret xor sbb mov adc cs jae daa add inc ljmp aam je sahf iret orl mov roll subl repnz clc mov pop push stc cmp fwait or pop mov pop or imulb push push push inc stos add mov fdivr jae cltd rorb sbb jbe sub add mov add cmp dec xchg sbb xchg clc clc sub nop lods add mov pop push mov dec inc push adc add daa out jne xchg fadds sbb fisttpl (bad) pop hlt test enter es jb add pop aam jp mov sbb xor cmp enter cmpl cmp loopne adc pusha dec mov out add lret or out (bad) xor xchg jbe pop psrld je pop mov dec cmp push jns (bad) insl sahf pop mov incl xchg andl adc sub or mov fisubrl in add addr16 lds jo mov jmp xor or or adc test adc or and jle and mov repnz mov pop xor mov shr repz int3 in xor fisubrl leave icebp movsl and push or call xchg mov insb pop jnp push mov (bad) and cwtl call in add xchg mov or pop adc adc add mov add psubw call jmp (bad) and test rolb dec mov mov cwtl adc sub lds adc sub push add cmc fidivl pushf js add (bad) icebp jl ja in xor mov es les dec xor add shlb loope add add addr16 aad cmc cmpsl xor push stos jle test jmp or dec shlb rcl daa fildll cwtl cld out cmpsl div add js inc sbb push cltd mov rcrb add pop and test xor mov fistp lcall or hlt mov sbb or jns clc rorl sbb imul add es inc hlt mov in xor call cmp sahf and ficom add insl sbb xor sbb mov popl push add xor repnz mov fdivs jo les shl in cmp inc mov daa adc xor insl sbb mov inc stos adc data16 addb push xchg mov scas mov loop sub ja push lock test xchg test mov mov mov bound or mov adc cmp rorl movsb or mov or cmpsb or push cltd sbb lret sbb pusha dec and add out cmp add dec add mov xor jmp lds dec daa add mov out add mov push jae ret sarb stc int dec jno sar clc xchg jmp int3 add sub sub cmp test and pop push adcb test cmp popa in mov mov xor call sahf loopne sbb and sbb inc sbb outsb negb dec adc and inc add decl lock fmuls (bad) js adc pop aad cmp out inc (bad) loopne add jno dec arpl dec jge push lods jl pop jno pop jecxz and xor das add in int3 mov ds or fcmovnbe fisubr inc push mov mov scas or int3 dec addr16 add mov loope mov or jno (bad) pop add pop movsb pop xorl ret sub sbb lret repz jns jne mov mov sub adc out mov aas repnz jge pop fwait cmp mov and mov (bad) sbb xchg add imull or fsubs sub push lcall (bad) xor and or jp mov xor jne ljmp jl mov and mov sbb or or insb add lock idivb pop loop pop aaa movsl or xchg xchg mov jbe (bad) lods mov add sbb sub rorl inc inc icebp cmovne fnstenv mov sbb push inc fcmovb les jp rclb xor and push and iret push call iret rcrb cmpsl xchg dec sbb pop add push push pop xor jmp lcall and dec pusha pop and push add adc in aas mov adc fdivr xor ficoml cmpb adc lock bsr jnp aas add nop jl cmp aad shrb sbb mov push mov pop int and loop sbb adc add add dec repz sbb dec lock int3 mov sub dec adc cmp in dec xchg popa mov pop jne dec jns nop js and imulb xchg movsl xchg sbb (bad) xchg xchg and testb dec jno (bad) stos dec sahf and test lahf xchg stos pop repz push je mov repnz or dec pusha pop add inc (bad) push add loope loopne push or dec mov cmp test cmpsl mov xchg mov ret daa mov or or in iret adc std stos dec mov pop lds dec in lret adc xor xchg cmp pop jns pop js sti inc add loopne jmp cmp pop dec insb outsl adcl jle dec (bad) les incl lahf iret ret sbb shrl jb insb or xchg loopne mov nop add or mov cwtl clc mov aam cmp or add pop orl sbb in in stc mov rclb inc clc xchg negb push mov mov xor cmp pop lahf scas jae rolb dec xor cmp in add and out mov mov push cltd sbb add call rolb lock mov or or lret call es je and pop lds xchg lahf test push (bad) or call push mov mov (bad) jbe jo int3 sbb sbb xor outsb cmc add out inc cmpsb sbb cld add ja xchg add lret xor sub mov ficomp mov pop and insb xor dec insb leave gs mov sub dec jle lods sbb mov add sbb sar enter mov lret dec and sub arpl pop add sar push in add mov add ja test dec into icebp in lea mov push js (bad) cmp and xor (bad) in xchg enter xor pause nop inc popf mov jno das or lcall test adcb mov loopne aam ret push push in mov js aas aam dec adc test daa stos enter leave push hlt add negb mov cmp push jp stc int3 cli dec mov jns sub sub psubq cli ret mov sub jno jle loopne lahf pop adc shrb clc mov aaa push (bad) sub fdiv pop push fucomi and loope inc or out or jae pusha push mov or cmc mov add repnz fcomi add (bad) cmp sbb lret push push mov pop xchg movsb mov pop and add cmpsl gs das fsubr push xchg psrlq inc pusha pop repz lahf add int3 jae cmp aaa arpl adc or movl test add or mov icebp mov int3 pusha mov push jl hlt add jle sahf rolb xchg js and cmp jmp jne test xor mov (bad) mov mov (bad) loop jmp pop test imull xor addl push and fistpl test jne call loop in sbb add icebp mov cmp push pop sbb xchg jae sar push icebp movsb jne or sbb sbbl mov rorl inc adc and jbe mov sub or iret (bad) cmp lcall add jle test mov sbb xor scas add (bad) lock stc cltd and sbb add xchg mov adc cmpb inc and xchg sbb bndstx push add fnsave dec repz mov jnp inc mov jmp orl mov xchg xor fmuls or mov fsubs cmp popa pusha lock push cmp and adc jecxz adc icebp push nop andl pop test cmp sub push add lea push mov push or mov adcl push add movsb cmp jmp repz dec add push and adc sbb inc add mov add sub xor in imulb adc jle std cmp loopne movsl scas jecxz ret aaa mov lahf xchg pop adc jmp (bad) or cmpsb (bad) xorl xchg mov test ja push or cmpsb add (bad) or inc aam dec sub scas mov repz inc jg add (bad) (bad) (bad) in or aaa in gs add push cmp cwtl mov add nop cmp adc sbb or sbb movsl and (bad) xorb mov aas lcall push (bad) loopne nop loopne pop adc jno or jnp mov xor and pusha hlt jmp and mov (bad) fstpt and sar mov (bad) adc push push inc dec push mov pop or imul adcb inc out ret dec adc test (bad) and dec push mov push js sti xchg jnp sub or ret call inc mov les aas or sbb (bad) xchg push cmpsl test jmp inc das add dec push imul inc int3 idivl in add and mov adc xor bnd dec pop cmp loopne enter repnz jnp xor (bad) in bnd popf pop lret add prefetch cmpsl dec add and adc inc sub dec outsl aas fsubl sbbl jnp idivl xchg lahf inc xor or cmp add cli inc pop je push add or add cltd pusha pushf jmp test xor gs jb das (bad) mov je cmp xor lods pusha lahf push and dec cmp dec loope sub test or push lahf test in (bad) insl or and pop sbb adc ret add mov fldt xor cmpsl in sbb xchg scas shr aam movsb jmp mov add cmp push fildl inc iret xchg ljmp (bad) xchg add out (bad) lretw dec lds popa fdivrl xor xor jle aad hlt negb or inc mov rorl je cld out mov mov or mov or mov sar lret sbb add les push cmp int3 mov pop xchg cmpl add je bound cltd xchg adc add cmp (bad) repz push test pop inc icebp fsubs push push shl xor aam jecxz cmp pop cld lahf dec push orb jbe push enter je mov jae xchg dec add outsl imul loope mov sarb cmpb rolb sahf mov push int3 insl ret (bad) outsl push mov adc faddl lret dec das out dec adc sbb lods pop push aad cmp dec cli enter sub test add dec mov in mov jnp das fidiv xor mov imul lret or cmp push push (bad) out push das jecxz into outsl or pusha fildll add add xchg dec mov push fild pop or add jo rorb (bad) pop sbb mov outsl gs (bad) adc orl push repnz out jns test aam std inc les subl gs (bad) mov push xchg inc jo mov mov or mov aad adc pusha adc cmp mul lret fisub inc dec sub push sbb cs dec testb jge cltd inc add dec cmp out insb push dec test add fwait jl insb push cltd add (bad) ja dec dec mov xchg aam pop cmp adc mov adc (bad) jno test xor pop notb insb push add mov aad sub lods dec push es stc or aad out (bad) pop in push sub push mov sbb stos lahf add mov enter and in stos movsb or and sarb add mov add sub push jp add fcomps (bad) int3 adcb rcrl insl pop test rclb sub aad std lret (bad) in in insl (bad) xor call add inc xchg lock mov nop je jmp mov outsb gs dec je mov push subl rol cwtl mov pop (bad) mov outsl clc xor (bad) and call mov mov aad cmp lret outsl mov sub and or sti (bad) xor ret scas sbb popa mov xor dec sbb lret bsf push mov pop les loope (bad) add aad dec add xor mov hlt enter mov dec push (bad) add fdiv loope xchg nop shlb add jns iret mov pop sarl clc or jl test (bad) into int3 add pop std stos sbb xchg ja or jne xorb push sbb push lret add and dec popf test mov movsl ret rcr out pop and fiadd and or cld mov (bad) mov add mov ja push nop lcall push lahf popa jae push in mov and xor inc into fldcw mov stos and mov cmpsb scas and js or pusha bound add and and insb loope fimull ljmp addr16 mov cmp lahf movsb and adc je fcoms roll cmpsb cs xchg scas int3 into mov jge mov daa rol xor dec or push sub lahf push lock fs outsb mov jle cmp cmc inc das shrl ds inc shrl divb dec out sbb mov neg or orb or sbb adc sub loop lret inc test aam mov pushf aad outsl adc pop inc orl lahf sub iret mov mov cmp cs mov add loope ret adc pop and inc popa adc and js dec push pop insb cwtl test pop push jmp push cmp xor inc jo cmpsb mov cmpsb mov in loopne cmp out cwtl subb inc ss sub mov nop push js inc push ret loop add jno inc push int3 jnp mov nop inc lods lods or sub jge adc jmp dec lret jo sbb xchg xchg addb sbb popa add jmp xor dec mov push xlat aam inc mov push push nop add jle jo dec sbb ss mov mov cmp aad sarb outsl not pop pusha js xchg inc subl aad in jmp adc push rcl clc dec add mov xchg inc fcoml test aam enter mov or and mov push adc enter decb movsb sbb (bad) rcrb inc inc pop dec (bad) mov jmp push sbb fimull ljmp mov imul inc add repz mov addr16 movsb add scas sub call sahf sbb inc or fstpl adc dec dec push pop and sahf jecxz incb (bad) ds adc pusha mov push popf sub or pusha dec push add inc clc sub mov lock pop out les inc cmp mov popf and and jecxz sbb mov sub jp mov dec or and mov mov outsl aas pop pusha sub add add std mov jns add push or je icebp rclb and movsb stc mov sub add test es add adc test pushf or pop fcomps jg inc adc sub add fwait or cmp xor repnz lds leave push sbb cmpsl out and sbb sbb andb sub sti xor icebp inc xorl dec adc (bad) xor dec enter inc adc adc push sub je xchg test fldcw rolb sahf sbb add dec sub jae adc mov sub sub adc addl inc push cli loopne sub dec add and dec les mov test outsb and push test dec js dec add call je push and xor cmp addl subb push daa pop fcoml pusha out xor (bad) cmp aaa lret mov add rclb mov stc mov or mov xchg lea shrb jmp cwtl repnz mov or ret push mov sub cmp inc sub sbb add xchg ret jmp inc dec icebp sbb sub sub cmp xchg stc inc call jne xchg mov (bad) and test or add mov std cli jl clts jnp cmp xor in fldl mov mov nop cmc jle add push push jns add negl das add jo out add cltd inc xchg sbb adc fisub add mov mov stc or mov inc rorb sbb fdivp mov add inc dec repz fcmove movb mov aas mov push jb xchg pusha adcb rolb add loope test cmp cmp (bad) loop and iret cmp xor aas arpl add cltd mov or cmpl mov xchg mov cmp add push and inc pop add sub xchg cwtl xchg fstpt inc je push imul xchg inc hlt mov jns mov mov dec and sar pusha aaa sbb xchg popf imul insl mov mov push sbb shll push cmpsb and sbbb mov sbb adc push outsl inc mov lock rcrb pop xchg fildll outsl andb dec push xchg call adc add fisub ss test sbb lds push add and adc add jbe sub add lea add arpl or fist cmp or sub or xor add jns imul or xchg rol push js pusha (bad) and dec xor cmpsb xor cmp dec mov add stc inc jae and push and mov add mov add inc mov push add addr16 add pop adc jo mov andl addl call adc pop push jnp push scas mov mov test add xor or test mov sub mov sbb arpl test adc xor in or mov stc dec mov pusha loopne mov test pop notl imul inc pop fucomip push fnsave ljmp inc fnstenv ret mov stos dec and pop or cmpsb imul mov xchg aad lock movsb or inc mov pop inc aas out into pop (bad) (bad) mov add daa adc mov (bad) pop mov pop mov int3 and ljmp orb pusha add cwtl inc insb push rcr inc mov add test jl push dec in add arpl mov fbld and loope or lods out xor push in test mov rolb lahf fcmovnb int nop push dec and adc inc out fistp repnz xchg lock fstl or imul mov mov xchg arpl or add dec xchg dec pop outsb inc fidivl hlt negb jl rclb or push pushf inc add mov out ss cwtl lds clc (bad) lock xchg sarl mov aam lock push in addb push or in or test xchg (bad) or mov pop push mov or inc xchg dec jnp bound cmp sahf mov add lea cwtl inc nop mov cmc add pop test add insb push (bad) clc dec and fiaddl pop (bad) xchg gs add jmp aaa adc fcomps dec add xor addb outsb mov xchg (bad) mov dec xchg sub sbb subl jo sub rcrb mov dec outsb imul inc add pop (bad) js lods inc mov xor mov sbb (bad) fs dec add int3 sar ja xor mov rcrb or in xchg pop cmpl mov mov mov and mov jno add ja and aam cwtl in inc loopne xchg mov jl (bad) sbb mov cwtl sub lods add gs call pop insb test lahf ror pop or lock and add cmp arpl add adc ffree push in push mov add and cli inc fadds dec dec pop call inc inc pop mov shrl es call stos adc and and inc inc fs pop push and mov and pop adc add mov outsl orl (bad) (bad) in sti testl and or (bad) xor addr16 and sub out je dec cld mov nop mov mov into es adc jge xor push push push jmp test and sarb (bad) add jne sbbl dec ds out fistpl roll push mov add mov shrb sbb in pand js add addr16 jo out pushf add pop loopne xlat add jecxz jnp,pt bound ret ret movups sub test add stos sub add adc pusha jns jo leave sbb jns sbb sub inc push rcrl jecxz add jo roll out xchg jae fiaddl call xchg jp pop add shlb add fdivs cmc mov xor pop push rcrb in mov add int3 sub mov adc test adc clc ffree ror nop jecxz cmp sahf lret movsb xchg subb xor fisttp mov in cmp add scas (bad) push mov cmpsl or mov xor aam push pop push add or pop jle add test scas scas arpl and mov cmp int3 xor jl mov sti scas inc roll lods cld cmp add fildll add ds rclb roll jbe outsl sbbl inc flds xor mov pusha or pop pop pop xlat imul adc shlb push subl (bad) mov push ficompl cmpb pop adc int3 and pop add sbbl inc (bad) adc dec add cld jmp jg push sub mov inc arpl aam mov (bad) stos push jo push xor leave (bad) int mov cmp leave mov cwtl push (bad) loopne xor lahf push movsl sbb (bad) lods sub cli fisubl and add enter add mov mov addl adc adc fistpll test pop fiadd fwait bound clc fstl addr16 dec aas jb (bad) mov in xor (bad) pusha insb je fnsave add sbb or addr16 test repz xor sbbb cwtl dec xchg lcall xchg pop and cmp add nop cmp into mov loopne pop cmp sub xchg loopne add jp and mov rcr sub xor aas decl bound mov jnp and stos es int3 rcl iret call addb sub adc cmpsl dec fadds inc dec dec dec add insb rcrl cmpsl or mov or fist xchg sbb sti and add add sub leave fwait mov rcrl outsl and leave add and or push cltd (bad) adc incb adc (bad) leave dec mov sahf pop cmp adc cmpsl orl pop popf fcomps adc cmp dec clc outsl mov push add jge xchg sbb or pushf cmp lds and xlat push pop aam sbb das in mov xor insb nop jo cmp add push add cmpsl icebp movsb fptan pop add cmp sbb nop add cmp and aas repnz adc inc jb adc pop out pop adc pop sbb adc or mov jl add bound add jne pushf add jp add loop mov mov das dec pop mov imul test jecxz mov icebp mov pop int loopne lret sub and cmpsb xchg push bound mov cmpl and int3 clc cmp sbb and pop jo call clc push pop pop movsb in add lret push and sub push dec popf pop adcb mov (bad) call add mov cltd jne push es fwait adc mov aad lea arpl hlt fwait (bad) cld cmp sbb aas and xor nop pop pop fadd aad cmpb or mov out cmp aas pusha xor rcrb and inc add cmp sub scas add mov out or clc mov (bad) xor iret insl adc outsl nop fdivrl fimull (bad) scas cmp jecxz cmpsl and nop sbb out push mov pop push cmp leave push aaa test add fidiv push mov subl push call mov addl mov push fild sub inc or fwait pop sahf je push (bad) adc push leave push fbstp sti mov movsl mov or and mov dec push popa fcompl cmp cld icebp out addr16 cwtl loopne inc loopne loope push or or les out pop (bad) xor pop jge add gs pop sub (bad) jo test clc lods jl int3 cmpb pop aas xlat mov cmc in jl mov add bound jmp jg imul and fsub add imul add enter andl insl scas sub movsl insb mov (bad) fdivrl add ss enter sbb xor xor movsb adc fnop adc cmp push mov add gs outsl cmp or and inc and sub ror mov bnd imul pcmpeqb mov or cmp loope cmpsl mov xchg rorb nop scas fdivrs and fs add ja add inc stos xchg test xchg push mov sub into testb out xor lock movswl cmp dec pop xchg or push and int3 push adc sub leave orl mov mov loopne add iretw add and xor pop shrb arpl inc jns sub sub loope pop pusha cli add mov sbb mov in mov (bad) cmp cmp popl je dec (bad) jb fwait jmp xor or enter test adc rcll push cmp ds shl add adc test lock (bad) pop test xchg fidivr push mov mov popf push addl or add repnz sub outsl (bad) jmp or stc xlat add out fstpl mov popa cmp add mov out inc outsl sub adc nop cwtl fcom fiaddl mov arpl mov xor push divps mov ljmp sub add mov out leave xor dec (bad) stos roll push insl add jp (bad) in mov mov pop mov xchg and roll lcall nop mov sub test xchg jl mov jmp adc icebp pop aaa add call nop push or lret arpl dec in mov fincstp mov aaa ja mov outsl cltd faddl jmp xor add lods mov nop or xchg je popf adc js inc int or das out addr16 cmp inc rcr (bad) cltd adc push sub rclb mov call or out sub test sbb lcall fwait or int3 repz sbb push jo sti add xchg hlt cmc aad inc adc (bad) mov mov and xchg adc push stc dec or jns adc add jnp cmpsl aad test add lret xor movsb or and xor subb sub sbb js xor rcll pop cltd les push sub test scas sti testl mov or xor (bad) movsb jp add call cltd pop jnp pop dec sub rorl repz adc pop nop sub mov in pop iret push xor mov icebp xchg cmp xor rorb and test pop xor cmp mov and mov jle sub testl cmp fnsave je push xor pop stc mov sbb adc or mov test add mov lods cmpsl and in ds xchg out inc in cmp adc push sub mov adc (bad) pop in xor push mov adc sub les push push rcrl xchg mov push adc (bad) cltd sub add ds (bad) xor pop jno lock cmpsb mov pop sub pusha dec jp mov adc push sbb pop dec xor mov add mov cltd or mov xor add rorl sbb hlt mov jl cmpsb mov push rcll movsb sti sbb (bad) jmp arpl adc jb mov adc sbb popa lea aam fildl out push ret inc dec dec adc lods or mov add mov dec inc hlt rolb adc test pop sub scas mov cmp sub sub adc (bad) jo mov fmuls inc gs pop es (bad) mov inc mov add fdivrl test mov les (bad) and sub adc mov mov adc mov adc sub cmp negl (bad) cmc or repnz adc adcl sub loopne enter jmp mov xor or lret inc div mov call repnz pushf add dec inc test inc repnz clc insb or out inc sbb pop add mov ljmp jne in rcr mov ret pop dec or mov add jno adc cmpsl fmull pushf rclb lock pushf orb push jmp cmp int adc lcall stos push or dec fdivrs mov xchg or fild fldl xchg jne sub pop cld (bad) in jbe inc sub push hlt add jmp fildll arpl mov lock popa out repnz (bad) xrelease jno scas xchg push or lods std adc daa xor mov jo add push fsubrs scas test test jno lahf bound add or push cltd cld push cwtl push es pop loopne enter repz out (bad) inc sarb pop sahf xor lahf add mov add mov sub iret cltd or fldenv or test inc insb mov sbb mov mov and inc in mov add mov cli aad enter scas inc data16 pop mov add pop adc lea (bad) jl loope arpl pop jle pop inc and mov in or out cwtl add je je divl adc (bad) stc stos mov sub fcom js incl fs testl jae rcl or or mov xchg cltd aas cmp mov shr add fs sahf test add pop ljmp pusha lock mov cwtl mov in fiadd sub lea add test jo push inc scas inc btr cmpsl fidiv ljmp adc rorl gs pop xchg dec enter push mov inc test mov sub rcr or adc inc lods aam fwait and mov and enter loope arpl push popa inc push and xchg hlt sub int3 cmc sbb mov push repz pusha adc mov xchg jne mov mov push enter push mov roll xor mov xor push adc xchg mov adc clc add add and adc adc sbb cwtl sub into or xchg push xor outsb sahf inc mov xadd push and xchg rcl popa scas and das pusha mov dec xor add clc inc mov pop sub pop in xchg cwtl adc add push sahf hlt pop mov push test mov arpl jl xchg cwtl mov add push mov popf test dec dec or push pop pop inc sbb test cmp stos mov add arpl leave je mov add or pop xchg and push out mov xchg nop mov add popf mov mov add lds pop int3 shrb add mov dec inc or push mov cmp test sub inc sbb in dec js lea inc andb pop in inc pusha cmp out test push xchg cltd js icebp mov or orb inc cmc adc cld nop and or and (bad) or sub mov sub xor add and adc xchg dec inc notl insb aas shlb adc (bad) mov mov arpl mov lret xor push xor stc jl cmp test sarb jae arpl int3 jne sub mov sbb adc scas sahf or les cmp dec xor cli inc cmp xchg pusha mov xorb test cmp jl jmp pusha test mov (bad) bnd in add mov lahf enter clc scas jg adc xor rclb rolb or test pushf repnz enter add mov fnstcw add gs incl mov scas cwtl dec sub mov adc sub adc out hlt add sbbb add ljmp pusha gs xlat push adc mov mov dec sbb pop mov mov addl repnz dec mov (bad) mov cmp ret add insb cmp mov loop rclb sub out jl add sub pop test cmc lods je pushf loope jae fwait mov or mov or lods roll fimull inc fcomp mov sub push inc xchg fild mov mov jns shrl pop in inc xchg pop jne inc ds sub pop mov js cmc inc and or pop push push mov and (bad) xchg cmp push shrb mov or gs inc inc dec push in cmp adc test out mov xor test fcmovnbe add aaa pusha mov adc xor cmp daa sub loope adc movsl out or mov je ret je push mov fcoml nop cmp test add cwtl pop cli xchg paddw xchg sub js mov sub aaa call (bad) mov push ss xlat or push dec sahf dec inc dec data16 int3 loope rcr pop lods or js (bad) dec pushf and add mov push push sahf or add pop mov mov pop jnp jl js mov xor sahf fdivrl mov push pop hlt inc in add xor (bad) sub dec jecxz inc insb fldl mov inc adc fsubr push xor pop lret jo (bad) cmp out inc jmp push dec jo add (bad) or cmp loop sub adc aam adc xor sub test mov mov sub (bad) fdivrs xor scas jmp fwait loope adc dec add sbb adc stos cmpl jo scas aad call test cli or jne push daa (bad) hlt or add rolb and loopne cltd lods mov nop mov mov pslld sbb or loope add pop pop add shll cmp xchg mov jle les sbb mull pusha je pop fnop jae sbb ficompl scas inc lds lods lcall dec shlb cmpsb je fcoms pushf arpl (bad) mov fisttp push scas loopne mov xchg add sub mov lahf sub adc mov inc lock fcoml xor je add adc repz inc or aam int or cmp inc mov rolb add mov pop sub xchg or pop stos or movl je push and rcl cwtl cltd adc push push in int3 std loop and jmp or add or and js xor bound lds mov mov in cmp lds or jae enter add or pop daa cmp add pop movsb xchg mov cmp mov pop test scas and mov adc add or arpl cmp loope arpl sbb or int jmp pushf or icebp in testb add hlt push (bad) repnz adc mov loope inc adc pusha stos pop mov lds popf push aam push inc xor ja xor or mov xchg fwait arpl andl in and cmpl push and cmp rorl mov cwtl add lahf les adc loop ret and sbb dec mov and add mov loop adc xchg and cmp loopne or roll add dec push add mov das add or mov push add sub int lock sbb dec pop aam movlps sbb (bad) das mov (bad) xor and lret cmc mov pop cmp and popf clc add in mov ret ljmp and ljmp mov add dec jo push sbb cmp mov (bad) mov test add dec add int3 jo add jbe rolb push mov (bad) aam iret or sbb pop movsb or jg cmp push movsb orb pop mov inc xor fisubrl mov cwtl dec sarb stos lret lcall push mov cwtl cmp sbb push xor fnstenv jae fwait enter aam in xor rolb jb jno add push cmp aaa sub movsl dec cmp add add mov outsb je icebp sbb and cld push push (bad) iret or out mov or cmp push loope add (bad) lea and push fmuls pop leave pop and push jg cs and loope sbb and lcall xor in jl jge adc push repnz cmp into or aad push pusha xlat or shl jge mov lahf cmp rol (bad) roll dec adc jl cld adc pop push movsb les or out adc movsb sti inc in js sub add push dec data16 adc sbb cmp into pusha add inc xchg (bad) sti push dec rcl xor adc mov movsb mov mov in call pop js xchg addb push mov mov sub add stos push ret movsb fsubs fucomp imul (bad) enter rorb push pop mov push jl cmp dec add mov mov add fsubp lahf jno mov add pop aam add aaa out push sbbl iret mov or hlt (bad) sbb add pop fistpll fidiv es popf dec lock mov push jns aad cmp mov add xchg leave mov add (bad) xor in pusha int3 cmp ljmp push sub mov push or bound rorl std jge fcomps lret mov adc xchg call push and sahf xor loope (bad) je and inc aas ficomp push add (bad) decl xchg in test mov ret sti pop mov nop fldl mov cmp fstps inc mov movsb pop movsb add pop xor jl test sub add fucomi cmp into cld pusha cmp add pop mov and adcl and pop ss mov jo das jmp iret inc sahf imul mov cli inc mov fwait loopne adc and dec add mov push adc inc fadds dec fbstp stc add stos mov cmp lret or adc sbb (bad) pop imul jae out and out cmp cltd cld xchg xor out int push fcomps arpl repz xchg (bad) idivb nop mov pop pop mov dec sar loope xchg divl dec shrl cmc mov sahf sbb fdivp or std adc jle add ljmp lcall clc or add pushl push jnp sbb xchg mov mov xchg adc xchg xor adc roll ljmp vpsubb pop xchg frstpm(287 xor pop and lret or dec test dec mov push in push enter cmp inc rcl sbb test mov ror pusha (bad) into inc push mov icebp push mov cmp cmp (bad) imull inc fmuls or dec hlt es or outsl dec lea cmp dec aas pop add pop inc insb cs popf mov les mov imull inc add push jle arpl das popf dec add pushf mov mov mov movsb mov adc push push les inc jge inc sti and inc ret xchg fadds in jo sub cmp pop jne jb dec cwtl insb or mov mov adc loope xor xor pop adc dec mov jnp jp pusha (bad) test pusha out cmp nop ret out (bad) inc (bad) cwtl hlt andl push dec sub sbb int xchg out clc mov stos mov xchg cmp fistp xchg or ret mov inc iret jb add dec (bad) popf jo sbb push outsl dec lret and pushf add xchg lea and push nop or xchg insb (bad) mov cmp jae adc add rolb push addb xchg clc add mov adc sbb push push loop int3 sub bound sbb mov add test jb mov cltd je mov outsl xor cmc inc xor mov and add adc dec and sti dec adc es add cmp js jno add or inc scas xchg andl sti jecxz and add cmp fs inc popa es enter adc mov or dec rcrl push jno cmp pop lock mov dec mov xor imul fs aad cs xchg jo out leave lcall cmp mov xor dec mov push inc test les pushf xor pusha (bad) push inc repnz inc add mov jo int3 dec add push and mov cld xor lock adc jns xchg dec aam aaa and inc (bad) jp andb cli xchg je inc push mov mov add or fs loop push adc loop add cli push xor imul push and cmp xor mov pop pushf dec mov add pop mov add nop nop (bad) mov addr16 and loopne sbb cmpl call push add sub mov dec jg cmp fldl outsb mov (bad) adcl loopne cmp and pop fsubr je adc inc jge sbb mov cmp fcomps pop (bad) outsb add push add incb scas or les add cwtl mov mov jns and inc mov mov add dec jno sbb mov dec add jmp adc in push mov loopne xor fwait mov rorb xorl (bad) out dec aas adc add add inc xchg sbb movsl lcall insl out adc or sub fidivrl push jmp push sbb mov in add aas cmpsb (bad) fucomip adc cmp xor in inc adc add mov fisub stc call ljmp xchg jl jno add fnstsw addb hlt jle pop ds and and in dec orl ss fs in enter jbe sbb xchg repnz mov sbb pop out and (bad) add in cmp addb and lcall xor sbb int3 add xchg sbb xor and in dec mov je add inc xchg mov pop push mov mov in dec (bad) imul gs arpl insl popf push mov (bad) push or movsl push add popa icebp les fadd (bad) sub dec test ds xchg sbb mov inc push jns sub (bad) add inc and xchg inc pusha andb push adc push push push (bad) xor stos test enter jb xor call cmp mov sub movsl lods jg add push push cli jnp and inc push enter fs mov xor dec pusha or fs lds popa sarl push fisub push enter lret mov mov bound xor pop bound test add or sbb mov stos sbb push add and or int3 gs call in or mov cmp xor test mov pop imul rorl inc mov and in and inc lock cmp xor or in mov daa ret addr16 pop fstl jo mov push jno mov pusha in or mov dec pushw std adc insl add lock add stos fnop add xchg int jae pop fs xor mov aad add pop mov inc adc test nop sbb pop sbb adc cmpsb inc cmp and push or int3 add shll mov mov outsl add sti xor inc xorb push cwtl mov pop and mov outsb push imul fs dec cmp insb popa inc jl ja inc loopne loope cmp sti xor add ret mov insb pop hlt cmp mov ror popa scas pop and adc xchg in push dec or mov leave jb fs adcl arpl es or cmp sub stos pushf add jle mov and add call adc (bad) repnz popa pushf adc inc or dec (bad) push adc cwtl cwtl pop jns lret jbe xchg inc jo sub aas or push cwtl adc push inc mov in cmpsb add ljmp imul dec pop sbb dec mov add bound inc xorl cmp and imul xor add push outsb sbbl aas rcl gs and push sbb and inc xchg xor adc in adc mov icebp (bad) jnp mov mov inc andb (bad) sahf cld loope dec dec in mov add push ret pop fstpt add nop hlt or mov fnstsw jge sub adc out mov pusha push sub mov leave cs cmp xchg insl pop hlt bound cwtl mov add mov dec fs inc imul dec lea repnz movsl add mov outsw andl xorb or pusha and rol push push lock and pop cmp adc xchg pop xchg loop cmpsb adc pusha repz hlt push pop push mov insb pop dec (bad) or add xor inc lock gs adc mov dec mov scas add sahf pop push mov adcb pop scas ret mov xchg cmp mov lods push mov divb movlps jmp movsb xchg dec test movntps dec enter (bad) jns mov or mov mov in dec cli dec sub mov lock dec mov cmpb or lcall insb scas add add lds adc sub mov dec stos imul pop pushf sbb push mov lcall ds add dec out sub jmp mov roll adc jae push and shrb mov fdivs sbb enter add out cmp es ds add (bad) sub push add push sbb aas inc xchg imul jo mov pop sub inc sbb rclb cmpl rorl inc out test das pop or test fwait test mov cmp mov pop push mul repz xor test (bad) or mov sbb adc mov cmp sub lock sbb inc add out icebp (bad) sbb ret loopne stos movaps jmp or or jno push roll das xchg rorb imul test int into and rcrb cmp cwtl fcoms repnz and xchg loop add les add sub sbbb sub call cli add cmp mov sbb sbb cltd mov and movsl add adc pop jmp ljmp add mov cmp lcall popa enter xorb rcll test push aas dec subl js push mov xchg sbb loop sub icebp clc add jecxz push jne test sub push js add (bad) dec cmc rorl faddl nop adc push mov fnstsw xor jecxz outsb sbb pushf add xchg mov (bad) inc clc cmp add jno in push andl mov push repz push and and jge add lods xchg add and mov xlat lcall add sub loop jecxz fwait add roll in call (bad) pop pop add loope jno stos outsl sahf in add jns leave jo xor mov je add mov and add push xchg psraw adcl test dec xchg jle mov jne mov fsub daa lret push insl xchg adc or int adc pop or (bad) fildl jo mov lock add cmp enter xorb mov cld ss es jb shll dec inc clc xchg or add or hlt add jle lret cli mov inc dec add out aaa mov xchg push int3 (bad) and and ds jecxz mov flds test fistpl xchg jo aad clc sub sub dec cmp outsl add xor add mov sbb ficomp rclb into mov add lods add sbb cmp dec sbb js std push mov loope add dec add (bad) addr16 ficomp andl xchg fcom push pop add sbb cmp mov sarl mov lret push cmp cmpb adcl push in in pop int add mov sar adc add push adc xor mov loop out sbb xchg (bad) push (bad) mov fildll addl xor xchg cmp mov and add cmp dec mov pop xor mov pop push std and xchg sbb andl cmp sbb push add add jne or andb mov add jmp mov aam adc subb pop jl adc arpl dec adc lahf dec sub mov mov and cmc inc xchg dec test sub loop push jmp test push rclb mov sahf pop push mov cltd sbb push pop inc sbb dec xorl ret test sub lret mov cli add sbb pop push and sbb mov mov cld adcb js add mov mov inc jl aaa movsb xor and nop or lods adcb gs fs mov mov jo inc in jmp xchg and or pop aam cmp dec dec jge mov loop mov sub jmp xor pop stos adc loop mov sahf push movsb sbb shrb jno lret fs mov xchg adc insb push push adc and push mov add dec mull rclb jns add outsb push sbb cltd inc pop jo cli hlt adc mov dec cmp lods icebp add (bad) add std cltd mov rolb rolb sub mov ficomp inc mov (bad) je pop add cwtl rep jbe push lock xor leave cmp lock push insb mov out cmp int3 std cmp xor mov scas sbb mov loope inc or lcall icebp sub lods in mov xor add or or cmp rcrb cmc decb (bad) loop pop fadds orl popf flds test aad gs in push divl add and test int3 roll mov add dec fs inc cltd js mov push int3 push test ja fidivr lcall xchg cli inc addl push pop push rolb mov cmp gs pop cwtl popa addb es lret mov adc push hlt adc insb mov add imul sbb mov rol and xor mov dec ret adc dec lods add imul adc sub sub incb pusha push sub add cmpsb daa nop test lods sti out ds outsb mov orl mov mov mov repnz inc push push xchg xor cmp push adc cmp cmp xor adc add adc enter cld (bad) lcall (bad) sbb in aas sbb fcmovbe sbb or rorb mov lock scas loopne sub adc and or (bad) mov push mov insb adc clc or sub ja (bad) xor or xor xor into shlb xor aaa add jne inc bound les fcmovnbe jns add movb int3 mov cmp mov iret and adc movsb ret inc sub rol or int3 call mov shll sbbl scas cltd lods add popf fcoml subl iret xor sub push inc dec inc or mov adc adc push pop mov (bad) dec lret mov imul add int3 mov adc pop rorl add jns sbb fisttpll sub add lock call test mov pop in or and bound data16 std testl ficompl or subl dec imul loop call stos mov dec or (bad) fsts and sub stos enter cld out fistpl sub dec lods mov int popa push jno ret je sub adc lea add jns test cld mov pop fisubr dec int3 dec cmpsb add (bad) loope push (bad) xor test push movsl mov adc or push dec outsl sub jbe sbb iret js fnclex dec jl stos mov cmpsl pop pop and pop jno mov jmp lock arpl push aad mov push dec mov add mov inc js and and or (bad) jno or and je inc pop clc in push int imul adc mov inc lret mov popa mov jecxz nop and mov dec pop fisttpl sub es shl jnp in xor sbb in rcrb sbb popa fdivr (bad) xor nop out mov fs dec les jl lretw adc dec xor add fcomp (bad) in push mov push stos xchg inc leave mov dec cmp test sub mov rolb dec cmp jl lcall pop sbb mov push cwtl ds scas (bad) gs rorb fmull inc rolb inc orl enter lea xlat xor das sbb movsb push or pusha bound loopne or jmp cmp jne or shlb ljmp or ret ret xor sbb pushf mov add cmpsb in stos jecxz inc mov jl pop (bad) pusha dec lock leave mov push daa mov push int3 mov mov jo cmpsl cwtl adc and xor or (bad) dec enter mov cmp xor sbb iret xor sbb repnz push xchg dec imul xchg pushf and cmpl jmp bt addb push pop dec dec sbb pop push mov jne das sbb scas cmc sbb movsb pop fwait or ljmp ds sub xchg mov add cmp push jne sbb cmp add add and jno jb xchg sarb mov xor scas std cmp sbb and fmull mov sahf inc jg add fnstsw add fadd sbb xor stos cmp adc or mov gs vmwrite mov faddl out sbb cmp mov loope or sbb sbbl add and popa and inc shl mov xlat inc jns movzbl or repnz add cmpsl sbb or sahf sbb jp and mov mov add mov fs sub inc cmpb jne lahf daa fidivr cld xor inc jbe sub (bad) xor cmp or out iret addb sbb cmpb fdivrl mov sub mov js pop loop je pop jbe in les cmp sbb addr16 mov mov imul jl lods call mov (bad) ror jge fnop mov movsl dec fsubs sbb (bad) roll xor pop adc shrb jp fcom mov mov inc sbb inc or push push out scas inc (bad) jo test mov in clc mov sar loopne je pop sbb and xor pushf dec rcl mov push addb test stc test fmull xchg scas (bad) pusha aad sbb call lock mov scas add cmc movsb adc or jg daa or call es lret xchg cmpsl notb sarb jle xor roll add imul push sbb mov fwait shrb push aam icebp cmpsl and gs das mov aaa mov inc mov es or jmp jp repnz in mov push subb push pusha mov add clc inc mov cld mov rcrl ds and test decb sbb mov sub shrb sub iret xchg out xor add movsl jg add xchg add into lahf jg add mov xor out dec mov test sti add int adcb lods in pop aaa rclb xchg xor int3 arpl add or push lahf nop push jl and xor pop (bad) in shrl dec jmp cmp sub ds addb leave loopne pop add and pop mov dec sbb sub ja cmpsb push mov xchg add out lock push mov (bad) or sbb sbb and jnp dec mov push test dec cltd inc outsb mov add stos (bad) jne xorb sbb int3 ja mov push push pop adc push enter lods sub push jg out out hlt flds and ret repnz xchg fldl test ret lds jg add inc adc test stos repnz mov sahf ret push sbbb movsb int xor (bad) loop add sbb imul xor fsubl pop mov and out test push add inc aaa rcl int fs push xor jne je jns sub lods outsb jmp push or pop lods dec (bad) xor test cmp dec mov hlt xor rclb xchg insb adc cwtl dec cli aad movsl in ret daa ds es loopne ja sbb mov jl push enter pushf jno mov add xor adc into jo sbb int3 adcb lret fstps addr16 mov scas in jns (bad) dec bound nop orb xor or ret lods pop adcl add push xchg movsl outsb (bad) xchg clc mov add adc out add repnz clc test shrb add xchg add cwtl cmp add mov xchg or adc mov pop (bad) pusha enter adc pusha sub push out fldenv mov or push inc fcoml adc dec xchg adc dec xchg adc dec dec fisttp mov add icebp std lret gs dec jl xor roll lods adc cmp inc jl mov cmp push cwtl inc or rcrl enter mov mov mov imul lret ja and mov nop lret inc lcall shrl (bad) gs inc pop add icebp (bad) cmp imulb in (bad) cmpsb popa in aad addb imul (bad) lock test fsubrs stos sbb daa cmp inc or lcall add (bad) js or xchg mov (bad) fcompl sbb and inc scas pushf shl lds push (bad) or fisub out cs xor popa shrl outsb xor xchg pusha cmc mov xchg clc in std imul push cmp popa clc lret enter jecxz mov dec add mov and dec pop xor lock fistl aam (bad) and sbb xchg sbb push mov cmp dec loope ss inc jo xchg xchg mov pop dec nop pop mov mov hlt and jl mov jno xor xor xchg loope lret lds dec add push dec fimul js pop mov cmp inc shll (bad) sbb das xchg cli imul ja call test and ret push scas int3 imul jg xor and jl jnp push mov xor iret enter mov (bad) or iret and movzbl in inc clc loope and xorl xchg push enter (bad) sub inc mov repnz and ret jo xchg xor and cmp mov addr16 testb and shrb jg add repnz imul or xlat xchg ljmp push lret or add xor sub add add xor pop lahf fadds add mov jae jge add mov mov mov repz aas lods add scas mov test mov push mov popf jo dec (bad) sbb pop pop dec or imul aad call push mov imul add rcrb (bad) enter xchg test cld adc int3 mov stos add (bad) mov fmul push add lret xchg add pop insl push lahf cmp popf add pushl jp add imulb add cmp in pop loop test clc pushw lret push dec insl andl sbb iret or and fs insb sub xor push dec mov add xorl inc inc ja insb jne or into js add in mov adc dec loop cld and andnps mov and nop call cmpsl popa cmc mov mov jecxz sub fstpt in stos dec icebp outsb add and jnp xchg xor cmp out int mov shl inc xor mov or decl add jno xor xchg cmp lret push ret adc loopne push ja sub fwait xor or out pusha add and std adc lcall rorb xor mov lret lret dec xor imul call ss push into lods outsb mov shlb mov push sahf jb push loope xor movsb sti or or or lds mov xlat lcall jmp dec mov cmp lock lea and xchg shrb inc push add into sub inc rorl cmp jg adc shll add sahf imul or psrlq cmpsb xor adc es jbe sub pop stos push cmp rcrb aam adc add add mov pop xor out mov or mov (bad) enter rcr dec push gs nop dec xor (bad) subb pop and cwtl lock or mov sub ja sarb push dec ds jno mov ss mov enter or adc mov jl jle adc es mov adc rcrb shrb dec push lcall shrb fmuls sub mov popf lahf es aam in xchg aaa push movq shl sarl popa pusha int3 enter push dec inc push cltd into popa push jecxz test mov or cwtl push (bad) repz mov ds decb add test stos dec mov insb in (bad) xor mov rolb dec sbb adc loop adc inc sbb addr16 sub sahf and fdiv jo sub push mov mov inc add ds pop adc pop xchg loope rolb add jmp jl add adc cmp lock pop push dec and inc cmp incl addb daa stc stc (bad) mov loope out nop or jb sti add and cmp mov cmpsl sub sbb out pop mov sub fcompl andl pop push lcall push rorb add pop sub dec sbb (bad) pop mov xor verw add sub xchg lret daa fwait test push fnstcw mov test iret pop rclb push and nop sub or xchg lods nop dec pop outsb cmpsb dec cmp js les jge inc xor push fadds mov add jnp jge mov lret jecxz mov stos insl xchg pop xchg popf aam int3 mov xchg jbe clc dec push pop les and mov fdivs jae jp aas stos aas push mov (bad) ret dec mov pop in add sub pop shrl inc adcl fisttpl ret push aam sub or lahf cmp sbb lcall les dec mov test leave jb sub xchg sub dec cmp mov cmp push rorl mov or mov cmp push cmp fnstenv mov push inc rcrb movsl xchg ja inc roll sub mov les lods push mov popa stc pop loopne nop inc xor js arpl fiaddl or sysenter and add mov test jb add stos fnstcw cmpl sub add push push cmp loopne lods sub mov sahf xchg nop pop jns add fsts or inc mov cltd adc xor lcall mov pusha loopne mov imul lahf mov sub jne push and in lock mov pop fwait push inc jle in insb inc fcomps cltd insb push rdmsr add in mov mov mov pop nop sub popf test dec cmp daa add ret (bad) sbb and sbb xor std lret pop rcrb stc dec loopne cmp sahf and xchg cmp cli test mov into adc and inc pop and mov mov mov sbb sub cmp mov or and sub jne and es lock and loope dec test rep push test mov pusha inc (bad) leave sti out dec add mov pop inc mov add adc inc aaa aas cmpsl mov push adc xor outsl sub sbb insl jb xor add dec add and leave pop in inc and data16 and aam cmp call push jae cltd push mov mov push fucomip shll add cmp jb les xor clc mov hlt add inc sbb je mov lahf mov cltd in inc sahf sti sub push xchg popl push test movsb add adc dec fdivrs int add call nop sub popa dec js and aad sub push and addb dec test test test faddp pushf add rolb mov sbb and sbb mov add mov rcrl mov xchg out inc scas mov and pop xor out in cmpsl dec jbe lret ud2 sub add clc lret mov adc sub sub addr16 daa bnd add dec and mov push nop and nop add push iret clc lahf or arpl xchg int3 aam inc and pop in and add mov hlt inc ljmp push fistpll subb stc push cmpsb push (bad) loopne xor rol jo test sub sub fs (bad) in cmpsb cld adc and insb adc mov xchg (bad) pop add fldenv sbb sub push js push adcb mov fisttp and aam and imul pusha and dec and aam lahf sbb or cmp xor mov sbb bound cmp mov xchg push xchg jecxz loop test mov pusha negl ljmp mov or xor mov inc and mov aam cwtl push adc lahf decb pop scas pop movsb addb roll (bad) dec out push jecxz shrl jb das es (bad) mov cmp gs stc adc (bad) mov sti lahf sub faddl mov hlt popa push cmc lock nop push scas lret pop pop mov incb (bad) pusha xchg mov aam pop mov test sub mov imul fadds mov add loopne cmp mov sahf jl test add call inc enter aam (bad) outsl mov cmp jp repnz arpl clc (bad) les or out stc xor add addl mov add adc test and sbb adc aaa outsl pop dec xor or xlat leave sub es cld shlb stos test rolb cwtl xor stc xor pop pusha loopne jg add mov dec xor jmp xchg pop popa not sub test loopne pop into call notb cmpsl loopne ljmp loop add jb sub or mov shlb (bad) cli std stc adc xor push ds aaa mov adc inc dec movb ljmp mov mov test cmpsb sbb add and lret movb bnd and push rorl dec dec add cmpsb mov cmp pop mov outsb cmp mov push test mov xor cmp xlat mov in inc mov (bad) add or mov movsb enter rorb mov pop bound mov sbb fdivrl sub pop sub push fs jns inc (bad) xor sbb sub dec xor cltd out cmc scas add or mov jbe arpl into adc cmp test movsb cs ds or mov outsl leave loop fs inc lods inc mov roll push pop dec imul test mov pop xor add ds inc mov dec mov ret mov add inc push mov jp gs and xchg jbe jns js pop inc daa loopne dec pop ljmp adc movsb inc xchg (bad) xor sbb pop cmp inc cmp and mov lods ficoml mov jo shl das or or scas mov mov mov mov xor mov cmp adc push jbe int3 inc popf pop sbb cli adc pusha sub lock mov push pusha cmpb pop int sub or insl or inc dec and ljmp cltd push mov dec loopne adc das aas jne pusha inc (bad) mov mov mov cmp into add (bad) movsb cmpl scas cs pop xchg jb fsubl hlt negl adc pop gs pop jb stos add test cmp jns add aaa or pop in mov xchg push (bad) cs loopne adc pusha sti (bad) je mov movsl mov jle adc into or cwtl (bad) repnz or loop mov (bad) or push in mov aas jecxz (bad) or xchg pop pop daa cld enter mov adc or jnp fdivrs cs leave or or sbb sbbl test mov data16 or movsl test pop jnp mov lea ds sarb (bad) enter add test loopne or add jle les je add jbe sbb sbb cmp adc fstl pusha push mov test inc add mov pusha aad inc jbe jb jle int3 inc lods fs add mov rorb xchg ret add mov clc arpl in add (bad) dec sbb add les jno,pn nop xor or cltd imul push inc mov out cmp add adc push std ja add lret arpl cmc and cmpsb mov xchg in add pop cs sub lea mov fs xchg xchg add (bad) pop mov jb data16 rorb ljmp and arpl inc adc sti ja pushf push vmovlpd (bad) dec test or xchg std inc push jecxz loopne and or pop rcrl xchg push ret gs adc mov inc call add or cld add bound push pop and ja,pn repz cmp mov clc test nop hlt and jg (bad) sbb xor sub rcll push add inc call enter mov push mov or xor ret loope popa sub or adc and xchg mov sub dec push lods mov shr add loop arpl (bad) test pop mov xchg mov stc test xchg inc stos jge dec in and jmp dec mov aas lea cmp imul inc scas out xchg lea and sbb xchg pushf stc add mov sbb or sub nop push xchg jge movsl and jl xor dec mov sbb iret dec (bad) fildl dec popl xor cmp stos mov gs in jnp or test pop jae dec jp xor add mov aad add mov inc shl and stc dec hlt or call dec adc es push scas mov xchg dec nop nop mov dec js adc push fcoms fs push fldenv pusha or inc add sti or cld push pop jge or popf push gs sub xchg std fs xchg xchg or mov or push nop adc cmp push xchg or cltd inc push nop test xor nop cmp mov insl mov popa cmp test add or inc test xchg xchg rclb insb and mov or mov sahf and lcall sbb sub pop push adc cmp (bad) jne sub push dec rorl call xchg in dec mov out jne lock xchg lds pop test out mov cmp add cmc push dec or sub mov fbld in mov cmp cmp cltd loope dec or push mov arpl mov inc test mov sbb sbb sub adc lods adc nop adc loope bound movsl call loopne mov add fistp nop mov pop mov or dec cld dec loopne lret repz and jl or es add mov adcb cmp test in xchg aaa dec inc inc jbe cwtl je leave ficomp je sbb pop cmp or dec mov or (bad) inc mov popa xor jl and stc adc inc mov add test pop andl xchg jae cs fmul hlt aas popa inc add jp push (bad) push repz in dec icebp ret enter das push les data16 or push dec (bad) (bad) xor test lret mov lea inc pop xchg pop pop mov mov das xchg popa push (bad) and scas or cltd xrelease adc xchg cmc mov xchg cmp gs inc cmp hlt and or and adc inc faddl or mov lret into cmpsl xchg pusha inc mov cmp stos cwtl or js fs incb mov xchg andl xchg (bad) xchg sub (bad) mov inc in and add ret sbb add lds add insl les add rcrl sub dec (bad) jne mov inc cmp mov push mov push mov mov mov outsl ljmp dec mov cmp add test pop add mov insl gs int3 or ret mov js iret inc lods adc xchg and movsb inc and (bad) call sbb dec inc pop adc mov mov cltd and inc in push mov mov mov jae add cld cmp ret loopne dec inc inc inc xor mov add mov and bswap insb xchg ret inc and pop daa inc jmp pop and add phadddq mov outsb div and mov pushw add xchg loop add pop popf pusha jbe dec fnsave add insb (bad) nop fwait inc aaa add jnp int3 and popa repnz add add xor stos subb jl insl sbb sbbl call jecxz (bad) lret jecxz dec sbb add imull add rcrb in dec adc clc inc lock ja sub xor and popf aad (bad) mov cwtl js jno test pop adc mov pop lret push sbb add dec or xor dec inc and mov sub add std xor push les lods mov xor pop enter xor mov mov xor (bad) int xor daa add and lcall sbb mov fcoml rorb or push pop mov mov and stc add (bad) cwtl fildll scas inc mov or push movsb inc or mov test add lods int3 push pop lods cld clc xchg or mov sbb clc and mov mov sub int and test les and xor rclb std loop (bad) xor addr16 negb lea popa or idiv aas movsl adc xchg xchg mov cmp pop (bad) lcall dec stos mov sbb js cld jg mov add dec pop or and xor mov pop pop sahf stc adcb xchg nop nop cmp repnz loope mov das fs lea pop push sub add dec jg push pusha mov xchg mov cmp xchg movsb sbb sarb and pop mov adc pop cld or aam or dec xchg addb pop add mov pop adc add push out icebp xchg cmp cs cmp je xchg in int3 insb mov out subb adc inc mov or or aam mov rolb mov test mov lods and mov iret xor rorb mov les lea pushf and ja loopne lret dec jb mov test mov or and cs repz jns outsl frstor dec and pop and js hlt nop lock test inc call push jae mov js or mov fs stos (bad) mov imul adcb or mov pop rcrb nop or xor imul das add push inc sub add in xchg adc loopne adc xor or dec fmuls xor sub mov test int3 nop fs and mov adc pop lcall bound fs movsb adc jne sub enter inc cld mov flds pop pop or dec push pusha mov (bad) icebp mov je das cltd mov pushf faddl andl jp xor mov sbb rclb lock or pop shrl pop je mov lret cmpb das ja sbb jne jmp mov mov sub jbe mov push adc nop sub gs mov jecxz or jb pusha pop sbb cld cmc inc add push lea or mov push ret dec sub out xchg or jb inc movsb add mov rorb jecxz jns push shll fmull inc test dec (bad) mov mov and les push outsl push mov inc jae dec sub enter cmp das jle xchg xor loopne push jnp inc pop popa lret jb icebp faddl pop bound jo xchg mov mov orl das and (bad) push out mov mov enter loopne jp test xchg orb icebp imul mov jns and pop int3 push lcall arpl std push cmp mov ret sub adcb push xchg jl ds mov ret orb rclb or repz mov sarb lret leave and push enter mov and rorb dec loopne xor clc loopne fmull mov adc or and xchg aad loopne cwtl push and pop and nop adc inc pop sub pop pop inc loope or add out xchg clc xor or push scas mov fidivrl shlb mov fild sbb adc or js pop xor mov and (bad) jmp data16 or sbb (bad) repz mov popa (bad) pop jle cmp adc pop xchg pop add test push fsubrs add nop loopne mov (bad) mov mov push bound scas decb xor lcall fwait iret jo push push stos int3 insb test lods and shll jb cmp mov sarb and xchg jno jl pop mov adc adc and jmp sbb xchg or mov aad mov jno push loopne sbb ret push jecxz cltd dec inc nop movsl cmp sub sub cwtl (bad) xor mov jns push lods roll mov pop mov or (bad) mov mulb bound cmp and xchg mov add (bad) push sbb mov out push or mov dec inc lods push cmp and or movsl lods mov es push adc std pushf lock pop push cmpsl lret adc in and mov (bad) push pop repz scas add xchg aam int3 int3 mov adc xor cmc popa sub ret lock (bad) aad cmp arpl cmp xchg dec loopne insl xor add movnti fildl jns push xor push dec cmp add into dec add jmp sub pop loop lods (bad) popa add je xor in out (bad) cmc and addr16 outsl inc shrl inc xchg xor hlt pop inc roll add fstpt xor scas test dec call jns daa mov add xchg adc test lcall stos and pop xchg add or jae lcall xor sbb and sbb jb xchg subb jbe sub fwait pop inc shrb add fnstsw outsb pop lret pop stos imul add mov jecxz movsb mov jo inc sub fimull mov je ret xor xor clc ljmp repnz in mov mov push pop sub mov or (bad) pusha popa fwait cmp call lahf dec sub mov sbb adc xor and in in and mov in icebp sarb sub mov nop cld xor cmp fidivr imul dec into lret outsl add sub add xchg psubusb pusha daa push cli xchg ds cltd mov mov dec sub and dec subb in scas cmpsb adc pusha mov repnz fwait ss xor xchg sbb outsb dec int3 mov imul scas sbb sub cmpb imul jae arpl adc loopne sahf lods cmp xor cmp cmp les jl xchg cmp mov sbb arpl in jle (bad) sub xchg les repnz add insb lds aaa pop stos fidivrl pop adc add xchg jo add jmp or fwait lock shrb xchg inc jge cltd or sbb mov adc xchg sbb cs push xor (bad) ficoml add test fs (bad) cld jge push mov out mov xor jnp inc or fwait outsb inc fcompl add (bad) and xorb add in ret fs insb inc aaa jmp jne push jle or cmp add lods push pop cwtl adc cmp in aam fwait pushf inc lcall adc lods mov mov sbb mov inc cmp push (bad) pop xor sti mov cmp stos sub addb jae and adcl nop mov push sub rorb cmp mov icebp inc mov call das adc test outsb (bad) jl inc adc add int xlat jecxz and sbb push test push inc dec pushf sub mov adc nop in xor addb addr16 push js pop add sbb in pop add mov xor add jecxz add ljmp or mov leave add dec aas lret ja push popf pusha iret dec dec ljmp dec mov pop out lods icebp xor cwtl lock xchg push ret jb cltd add mov imul add cmp inc mov pop in adc in add or sub mov jecxz popa dec mov inc cmp insb loopne mov loopne push xor imul shlb dec fisttpl aam push add cs or dec dec cli inc or outsl mov pop insb mov les cmp add add xor scas aam jecxz movsl or add inc loope nop call sbb jae stos add aaa mov mov sub or mov ret or xor js cld xchg rclb inc add jae hlt aas sub mov lret cmp pusha push iret or setae (bad) aas adc sub sbbb shl popa adc andb ret aaa adc stos fisttpll pop fimul ja sbb call (bad) lock rol xor in daa in add push int adc rorl jo mov pop sbb push or loopne mov cwtl lods pop jne or cmp js add sub pusha les sub fistpll ret jecxz mov call js mov adc ret mov mov les jo xor popf push add jae insb je andb mov cmp popf mov clc sub mov mov pop add or xor aaa repnz or mov push and fdivrl sbbl sahf jp dec rcrl sbb aam in sbb inc scas and and adc rcr aam loopne and xor faddp or adc repz clc adcb fdivl push test clc insb mov pop pop or mov xchg js cmp les and jns add xchg repz dec incb jl and or jno mov cli orb jo mov pushf mov sub mov inc js xchg push jne add dec inc add sub test pop adc xor or test jmp in cmp test push inc mov mov pop dec add push or xor lods cmp (bad) sti cmp pushf sub push ret or clc cmp jo mov imul sti les adc int xor mov lahf adc js lock pop jo inc hlt ret (bad) shll xor mov xor sbb jecxz xor (bad) jo or mov mov dec call and xchg or jmp sysenter fldt dec shlb add sbb xchg sub or aas xchg sbb mov and dec lret sub cli dec add xor add xor or inc xor xor push sbb psllw add push lds mov jbe push adc scas mov sbb xchg or cmp pop mov mov fsubs jg gs mov nop add pusha into pop pop mov insb xor mov push push push adc mov or pop stc or jns mov mov mov inc cmp andl fs fadd xorb pop push mov imul lods in xor idiv in push shlb gs mov sarl sarl mov lock xor sar scas hlt cmp cmpsb movsb inc pop cmp add in std adc (bad) xor inc andl scas and test dec int and mov xchg and (bad) std mov lods stos ss rcll and cmp and push movd inc xor lock mov leave cwtl jmp pop (bad) jnp fiaddl cmp dec leave and pop test cwtl pushf add (bad) xor mov mov and xor rorl pushf dec jo pop addr16 add xor push and mov (bad) (bad) jmp aam sub in and ljmp dec lcall iret cmp lods dec mov and push sub (bad) or dec push je fstpl (bad) repnz repnz add jmp test xor (bad) pop mov (bad) ss das aam sbbb out pop out dec cmpsl mov and pop sbb add pushf xchg in loope adc repnz or push mov or and fnop dec cmp sbb hlt mov je cmp sub sub nop push test pop push push sub push adc push jp sbb and add jbe cmpsl mov aam loopne movsl jb or cld or roll add adc gs xchg cwtl add int mov mov fidivrl sbb sbb xchg lods andl lock jecxz jbe sbb adc jge push in push call imul cmp mov (bad) mov pop gs sub int3 inc xchg pusha cwtl xchg (bad) lock cwtl and out adc ljmp ss pop repz leave or js xor sahf add mov adc cmp mov ret and sar xor outsb rcr sbb cmp sbbl sub shlb pop jg cmpps sarb jmp push cmp bound and and das test fwait popf jg daa jb sbb mov mov jmp dec dec xchg inc add sbb and cwtl aaa call into das mov or arpl xchg test mov sub and out test jo or or out mov out dec add adc dec lock insl pop call mov push inc mov std mov clc outsb dec imul sub jl mov dec outsb (bad) call sbb mov inc add loop stos nop add push add mov pop dec lods cld add sbb sub test loop jg inc insl cmp andb orl rol mov sbb test pop push pop stc in out test push add lods mov ficoml jae inc js pop stc sub rorb shrl mov int3 add arpl mov or nop and sbb sub jmp inc cmp enter adc adc scas adc or ficom inc or sbb dec inc shll inc out inc test insl xchg clc mov add lds cmp rol add or mov jnp or (bad) negl les and xlat adc out sbb notl or dec int (bad) cmc rcr and cltd or adc loopne outsb int test mov add pop aaa and push (bad) js (bad) imul lods xor inc mov das sbb add aad pop xchg add xor dec loop cmp mov ret enter and das test nop shlb push clc lret or in mov sbb add cmp mov cmp dec pushf xchg into lahf mov xor (bad) add sbb dec push jae or clc dec pop movsb xor xor cltd es repnz pop cmp mov cvtdq2ps push out (bad) out sub mov xor or mov insl dec jo loopne leave xchg add cmp jp pushf out loopne xchg jae ret push and roll (bad) shll mov xchg inc or add jno xor loop adc hlt mov movsb inc (bad) jo and add and sbb adc xor mov xor out dec sbb jmp add aas xor cld out sub lret test xchg xor xor xchg mov lock ljmp mov loop and mov xchg sub leave push adc loope loop enter jle sub fstpl (bad) mov clc jmp sti or test rorb into fs adc jae mov sbb pop adc mov or call inc adc add push daa bound adc dec and mov popf test mov dec dec movsl and (bad) mov mov sub subb xor add pop mov dec pusha sub rcll cmp scas data16 dec aas push rcrl in loopne aam jl lock xor xor rolb (bad) mov add mov cmp add and add dec push call shrb dec scas or add (bad) pushf dec cmpsb aam in or les xchg add xor movups lods sar andb xchg add pop add mov xor cmpsb sbb int3 std pop jae popf and ret sub (bad) push add add or in push add mov xlat out fucompp cld cmp push test pushf and rcrb sbb or andl leave rcrb mov adc inc je xchg stos or out xor cld dec test daa cld or pop xchg dec lret cmp lret add test xchg test mov mov cmp adc pop jae add push fdivrs mov pop or (bad) std xor test add test (bad) xor aam pusha ret push inc sahf out rcll or mov ds and add bound inc sub add or push add inc mov test int js add loope dec dec orl sbb subb push pop (bad) or push es loopne xchg push add fs in out xchg pop sub sti pop aam sbb cltd ret (bad) in (bad) lock mov fisubl test push (bad) fbld dec mov popa insl aad je inc ds mov and push sub fiaddl lret arpl xor testb aaa jecxz setl stos stc sahf push pop rolb adc dec (bad) xor gs imulb pop pop mov xor fsubrl push xor or mov ficom add mov roll addl mov push cwtl test lret push test movsb push push dec loop push adc push mov push add fldcw or lret jb sub es pop mov cmp push test scas bound cwtl lea (bad) adc sub nop or arpl cmp pop cld jbe add pusha shl stos jp cmp insl and mov repnz ret push cltd sub add fwait repnz adc loopne and add pop or jne pop das push or or pop pop shlb push rcrb jo call add leave adc in cmp icebp push andl cwtl pop fidiv cmp ret in addb stc test sub add xor fldenv xlat (bad) js loopne xchg xor imull cmpl inc cltd push and pop cwtl dec clc sbb daa notl inc hlt mov arpl icebp repz aas fcomp insl xor add xchg int3 loop add xor mov dec rorb nop outsb add or cwtl fistl mov push add stos mov and addb mov js pop and test notl add push pop and mov leave fnop test inc aad mov push rclb adc comiss push loop fwait pusha and cs adc ret test jb sbb cltd push add xor test push adc pop adc mov jbe sbbl and cmp lods mov fcomps xor push add popa je imul sbb movsb push mov movsb add pop movsb outsl in out mov jno and (bad) or call dec js inc mov adc xor or xor push js mov push add inc lock fisubrl adc je mov xor push aam adc or lock pop lock mov ja aaa es popa loope and (bad) jo insb inc cmpsl pop mov notl pmulhw jl cmpl jmp (bad) popa ja popf sbb loopne and jge pusha test xor add mov and mov mov xchg fmul sbb lods sbb add das cli add popf jns out pop xchg jl js dec add push mov jge xor dec mov xor int3 sbb and push (bad) ss dec addr16 push cmpsb imul xchg (bad) gs pusha push les dec and aam aam cld ljmp xor lock dec (bad) je inc adc call fs and fldenv adc cltd pop adc out int add pusha push push addb pusha nop sub lcall (bad) int dec prefetcht2 or inc xchg lahf (bad) and mov push das repnz and into out push ljmp and fwait mov into movaps addb mov push mov addr16 sbb testb push ret pusha gs or cmpl test mov pop adc into in cld mov ss sub xor mov nop inc and fnsave sub sbb mov xor sub cmpsl and fistpl out ds lods test lods insb adc in and loop sbbl pop lret fstl or dec (bad) into fldcw repz rol sbb lods int3 push mov xor xchg sbb pusha sarb or sbb cmc cld repz push pop mov push mov inc lahf dec les test xchg movlps and pop dec test add and subb repnz pop sbb or adc mov test imulb fs adc mov pop push and dec dec jns sub pop sbb inc dec cwtl ret pop xchg insb inc into xor push mov pushf or dec sub or add in nop nop outsl daa xor mov xor gs or dec (bad) dec push je fmuls mov xor xor sbbb les sbb jmp js mov shrb jns sub adc fbld call gs sbbl data16 sbb and test push xchg xchg xor and sub test clc sahf mov call leave xlat and inc movsb jno repz rcll xchg aam in pushf leave (bad) and or inc cli add int3 icebp test and rcrb mov dec dec in ret or loopne pop outsb adc lods test pop es loopne inc push hlt in mov jo test add pop adc jmp cwtl in and pop adc push adc stos xor adc loope mov ficom lret xor imul loope and pop clc sub and xor inc mov or and ljmp mov sbb inc add movl sub les aad sti push popl inc lea cld fcoml or (bad) mov cmpsl dec cmp fstps and (bad) push (bad) popf test cmp push repz imul int3 adc rolb sbb (bad) hlt mov fiadd orl ret and and dec cmp jno lea adc insb inc adc adc js or and (bad) pop sbb andl lahf sub xchg mov xor push push adc or pop stos sbb jns dec or adc lcall adc loop mov loopne push jl or lret dec jl sbb pop in push fcmovbe ds js cmp xchg stc das ror adc add scas xor push cmp aad imul and sub add int outsb and in sub dec das (bad) xlat (bad) scas fs cmpsb js (bad) xor dec pop lea cwtl lret pop nop sbb inc ds sub jb add stos in leave mov xor or ja adc outsb xchg and shrb add (bad) xor int in ret mov int3 mov mov ljmp sub mov faddl push popf pop out pop adc adc imul push xor or push cmpsl in pop mov push mov test push sti cmc sub xchg jmp das adcb daa (bad) push cwtl mov int mov and test jmp mov std mov orb mov cmp mov sahf dec rolb cmp sbb mov sarl sub sbb jle and mov add jns dec data16 mov aas fdivrl pop ret mov lret loope loope xor cmp loop xor xchg decl jmp jge loopne jb add clc stos xor xchg cmp lahf shlb mov data16 push xor sbb cli in add and inc sahf ljmp test add sub cmp mov sub popa or mov xchg add xor sub aas adc js and out (bad) cmpb mov xchg lods dec in data16 in pusha adc add cld lcall aam sub mov xor nop sub push sub adc into lock dec jae or adc pop mov cmp xor outsl dec cmp enter adc cli insl mov adc lock push pushf or subl aaa pop fstp add aad popa loope dec psrlw inc xor and mov xchg mov and adc mov mov sub fadds rolb lods jbe fs enter lcall pop add fs add cwtl add xchg mov or les xor sub icebp gs cmp lahf jle push mov sbb or cwtl mov xchg shrb addr16 test or lret mull test or mov js subb int3 push dec data16 mov inc add sub and inc rclb cmp cmp rorb or ljmp adc xchg popf outsb std test je ds test add mov inc add pop cmp mov mov or dec cmp mov mov mov push imul hlt push cwtl inc negb cmp pop pop loope (bad) into xchg loop (bad) (bad) ja (bad) sbbb cltd mov jl add adc push test mov push push dec (bad) mov or sbb pushf xor stos repnz jne adc dec pop (bad) fwait dec lcall leave mov push dec in mov adcb xchg inc push sbb loopne int xlat and cmp sub mov pusha dec mov outsb or pop repnz divl test icebp xchg ss int3 push dec in adc addb pop mov pop fisubr and xor or cmpsl insl xor sub adc xor pop push or jo (bad) sbb or (bad) mov in je sbb test cld xchg clc leave mov and or xlat movsb adc int imul dec dec and cmp pop adc lock andl xor mov add mov pop in add fidivl pop mov sarb mov and dec js fdivrl (bad) loopne pusha movsb xchg aaa or cmc das movsb rol lahf fs mov mov push outsb fdiv pusha in jg mov js add pop (bad) jecxz icebp aam add into add push cwtl xchg xchg and xor sub add (bad) or in xchg hlt mov sbb inc jecxz jno sbb sahf ds das lods xor ficomp out hlt lock add add push lcall je leave mov cmp aas cltd into xchg and imul test addl clc xchg jge xchg pop ds decb jno ret popa add insb test sub sbb lods xor mov (bad) mov lods hlt dec pop adc push inc jl sbb cltd lret add ljmp jae pop aam in sbb repnz (bad) mov and cmpsl cmp sarb in xor adc sbb jo push mov and or jno outsb pop adc jge enter call jecxz and (bad) xor mov shrb sarb jge subb mov inc loopne mov add mov or in add int3 int loopne icebp mov fsubrs xor xor popa cwtl jo stos add add adc dec jge mov pop mov (bad) pop pop jl xlat adc dec int xorl insl js push inc pop add jl pusha fwait mov in int xor add add add dec jne cwtl stos xor sub sub inc add dec xchg (bad) jbe sub push lret xlat enter incb jmp add jg popf push push xor jns shl or (bad) and test test add aas shrb mov ds sahf pop adc lods cmp cmp out xchg sbb mov loopne xchg das dec in rcrb inc xor mov pop lods inc cmpb loopne stos loopne inc push rcll sub push daa dec cmp add rorl sarl lods mov dec add cmp lods (bad) repnz lcall in or std add sbb sbb call push and jle add (bad) sbb test xchg es pop jp cwtl stc repnz push mov mov sub cmp add je pop add adc test sbb ljmp cmpsb inc leave or cmp pusha adc hlt or and outsl enter sub inc mov aad in sbb sbb icebp pop xor sbbl rorl adc pop addr16 in and insb insl hlt in mov xchg adc shrb lock or mov xchg ret fs mov std psllw mov sarb mov stos in mov dec xor mov or fildll into dec cmp inc sbbb inc sub aam jne icebp inc movsb mov mov push dec jo test jo sub xchg cs (bad) dec and adc inc js adc sbbl test and lods aas jb add sbb jno,pn or lods enter je pusha loope add movsb pop stos sbb and mov xor xor adcl xor hlt aam js add frstor or pushf pop (bad) daa pusha fsubrs loope add fwait cli int jle mov scas icebp xor stos nop pushf vpavgw hlt or arpl pop hlt adc in sbb push push cmp mov jae add mov inc (bad) add ret xor out cwtl movsb sub mov fs mov popf adc cmp (bad) ret add sub lods xor decl jns sbb mov push fistpl push mov lds push aas mov sub mov mov sub ror lods std (bad) and mov je into loopne rorb sbb add mov or orb pop push into xchg xor push cmp push push and push dec push out add mov in rolb or push push nop sahf sub xchg mov movsb mov lret ja andl leave and dec jle push jns push mov sub push rclb addr16 (bad) and dec outsb sub les fs and xor push mov or stos mov cs lock pop pop dec xor dec addb cwtl loope mov inc andb lock ret cmp icebp fs pop addr16 xlat ret jnp mov call mov fsubl adc mov jbe jmp pop add push and push mov in and mov bswap inc fldenv cs mov add xchg cli out clc loop (bad) pop push fs sbb xorb aaa (bad) out mov or add xor les addl mov and gs (bad) and inc adc jg sbb ret aaa mov sbb testl les in mov and jno int3 add aaa stc mov sbb sbb dec sub shrb xor push pusha ret push test xor js push add mov jb cmp sub iret pop or and aas pop mov push addl sub pop pop rorl out cmc mov mov les repnz and xor jecxz pop pop xchg sub xchg jns (bad) mov insl dec rorb test or fsubs daa and mov popa and das add aam sub mov pusha test test mov aam jmp fcomps test add cmp and xchg or inc or add cmp sub inc lods pop fcomps mov sub mov pop (bad) dec cmp pop mov ret sub xchg aam push jge out sbb call ds push lret mov movhps sub test dec call or add fldl cli addl mov pop cmp insl cmpsl inc int adc sbb gs mov flds mull outsb adc xor jmp imul xor sbb pmulhw cmp lock daa and xor fstpt (bad) jne mov ret movl xchg add add lret and and cltd jb cmp xchg or mov adc add testb enter pop int inc popf inc adc loopne mov and mov call push pop dec push cmc call dec inc sbb or mov mov push test iret add adc mov xchg push insl xchg in push dec and add js dec mov mov insb jle into (bad) and ljmp repnz sub dec clc mov and jae icebp popa cmc add loop out xchg add call add cld inc sub pop jb,pt push jne mov adc sahf pop inc push sbbl xchg into rolb nop stos pop aas and fbstp je shrb and roll iret cmpsb add xor inc test mov sub and xor sub dec mov mov and add je mov enter and mov push sbb iret cmp lods sub test int jo pop outsl sbbb js in je sub push fsubrs or jge addl inc add je and add js add mov movsb int3 adc push dec jmp xor mov into loope shr (bad) cwtl add enter push addb ljmp jg lods cmp sbb rorb mov iret jp mov mov data16 scas sbb add into adc mov sahf testb test negl test sahf lea cmp pop or inc inc call test es dec and sbbb pop stos sub jnp sbb push fidivr adc mov lcall ret adc or imul call push push leave adc add add rcrb jl enter mov xor and cmp fisubrl (bad) das shlb mov stc lea mov xor cmp push jle and nop xor or pop popa xchg mov mov cmp cld push jo add pop adc mov inc clc mov xor xacquire cwtl jb dec pop decl push jo cwtl nop sub lret lcall jmp mov mov and add adc lea inc lds nop mov sahf push int3 loopne hlt add int sbb push mov rolb xchg cmp dec xor ljmp icebp scas add push (bad) add pop jnp add add fnop insl hlt out or rcrb mov std ret mov xchg add cs xchg lods popa push mov gs subl mov push je mov jmp js or ja add sub xor stc and add out sbb adc icebp xor or divb mov xchg addr16 enter jp dec pushf sbb adc rolb rolb fisub dec out and es push push push and test loopne ljmp pop into mov mov sahf aam rcrb dec movb fldcw cmp push pop xor mov pop lock xor loopne cmp mov dec add mov mov xor arpl ret mov js sarl scas mulb leave (bad) sti add pop pop sbbl inc pusha mov jge or rclb mov and mov mov add mov adc pop push and data16 sbb ficom inc out into mov pop jg nop jl add arpl (bad) inc pushf jbe cmpsb loope add pop jg jp pop add je sub add in lret jne or mov add stos cwtl xchg or xor or sbb adc jg cmpl add push pusha sbb jae add fisubr jg rcll call xor jne mov movaps add sub push jge mov (bad) sub rorl inc insb iret test sub xor pop mov dec js or cmp push repnz and cmpb faddl jmp sub add inc add push out pop or pusha (bad) shlb pop push movl orb inc popa stos cmp sbb jbe dec add es and push xchg mov sarl add imul add cmp cld push addb jo mov inc sbb (bad) imul adc bound cmp jge lock addb cmc add xchg and mov add sbb (bad) in xchg sub sbb loop xchg fmuls shrb cmp data16 or sbbl xchg cs int3 add bound pop enter pop popa lahf cmp ds mov add mov push mov pop hlt nop jo pop push or loope orl ds mov test mov sub xchg cmp or xor sbb test test pusha jno daa and repz cwtl or mov push inc pop or adc lods fs repz cwtl (bad) rcll data16 cs add cli push or push inc adc mov mov adc sbb dec addl (bad) cmpsb shrl mov fcompl and and sti and add daa add sbb xor jno xchg xchg inc movsl or pop sub and nop xor dec mov xchg (bad) push sti test addb pop test mov imul pop aam dec add adc bswap shr dec add ds out fdiv jns stos sbb in adc popa addr16 jle test fiadd inc push xlat loopne test arpl addps (bad) jp sbb adc add lret in add fcmovu dec js aam or mov push add dec cmp pop hlt enter mov fsubrp int and rcrl adc daa pusha sbb dec add loop mov or cmc shrb movsb mov mov sub dec pop and sub mov and xor and mov sub or pop xchg or add or xchg nop fs movsb dec pusha jo jp das flds (bad) gs and inc jo add jl in jae int3 mov and (bad) mulb pop mov jg adc incl add xchg mov dec ds ja gs mov mov or pusha dec xchg or arpl or insb add sub pop pop sti jo mov xor cmpb and adc sub adc jo and insb in dec test (bad) sbb jo pop aas dec cmp pop arpl arpl or push fwait add dec scas fwait je in dec (bad) (bad) adc js xchg or add and fistpll int inc mov pop lods or orl stc push cmp enter mov inc and xor adc adc daa mov popa fmull sub mov in or jg orb push (bad) ds movsl loopne lds adc daa cli add out add xchg sub pop pop sub sbb inc in inc cmp mov cmp cmp mov sbb jp fs add cmp es fs xor rcrb jns daa push dec scas add mov jno inc test test bnd dec pop inc add sub push push jo cmp rclb xor cmpsb clc pop push sub push dec (bad) mov cltd repz (bad) mov or dec bound or je mov and xchg lret sbbl test and mov test andl push adc xor or dec adc push (bad) push xor inc test adc add jge mov movsb test call loopne xlat adc out test sub fs xchg ret and cmp sub xor call sbb and adc test pusha add cwtl xchg hlt xchg popf shl hlt adc and sbbb push leave inc push dec pushf xchg push jbe inc test inc mov mov cltd push bound xchg clc (bad) cwtl in clc lret in push decb leave adc or inc test and or dec or mov fstps dec pop xor sub pop add jg hlt je or add dec (bad) es add pop jno int3 sub push addb adc mov xor test mov dec adc ljmp cmp (bad) and je sub mov sub adc or loopne pop push cli add mov xlat add cmp xor sbb jo leave into pop add jb add data16 dec inc or jo mov push (bad) xchg jne mov inc jo inc mov lcall (bad) sub and adc lds xor fwait jl cwtl push test or jno jp stc out loopne (bad) aas mov mov pop mov adcb sub xchg adc inc mov pop xor ds loop add in jne cwtl test mov cmp leave xorl or or outsl xchg mov repz push rcl enter pop fsubs push je sub cmc mov xchg leave cmp add mov das (bad) rclb sub pop cmp sbb dec sbb hlt add rcrl and rcl add outsb sub adc push hlt mov fs into push mov xor mov or je rcr mov xchg mov sbb add and push xor mov int add or mov add cltd push les jle in add mov jmp push and add add bound jo (bad) pop sub adc mov push push gs mov ret jne inc add pop push push je outsl xchg lock jo xor inc pop jp pop push test adc xor mov mov xor xor mov mov dec xchg cmp or hlt test pop dec dec outsb sub lods ret popf xor pop mov sarl xchg dec and push sbb mov imul loop sbb add int3 xchg and (bad) cld dec cmp add jl and mov test mov push das cmp rorb pop or push and sub cmc pop js and cmpsb sbb addr16 test daa outsb inc orb push jmp jae lods mov push jmp lahf add inc test in or mov out add jb push xchg add lret movsb mov push pop pop imul mov push pop sbb pop scas pop mov jne cmp pusha js sub mov jmp sarb sti push stos xor jne or pop or and push pop pushf add stos xchg out movsb cwtl sub int3 js mov cmp (bad) cmp xor call cld fs fcmovb (bad) mov add xor cwtl (bad) or imul (bad) jb mov push inc pop dec sub inc sbb addl cmpsb push sbb sub adc pusha mov push js mov adc add movsb sar mov mov hlt pushw add and scas adc inc insb rclb jle (bad) aas sbb loopne sbb cmp lods fldl inc in es sbb jne je fildl ja lock ja dec add jmp repz jne xchg orb andl (bad) sti jnp lret rclb jne mov enter cmp pop stos or xchg pop popa subb icebp cltd int3 bound stos add jmp (bad) dec pop loop jns aam pusha push dec add lret (bad) or mov js mov in sub movsb push adc add insb (bad) enter sbb imul movsb popa lods nop and jecxz cmp inc adc sti (bad) ds jle in jns xchg cmp xchg or inc sub add in and cs aad psubd add dec mov das xor add xchg add lds pop (bad) add aam bound dec or cmp and addl fbstp test xchg pop inc lahf add push mov sub adc movsl adc dec cli xor add cltd pop pop add mov xchg sahf add mov (bad) add xor add pop (bad) rol cmp ret add cmpsb iret sub das sub addr16 cmp insl add pop out xchg cmp add pop sahf js or aad cld xchg rorb adc adc faddl rcrl pusha xorb mov jl or push data16 mov lret and jne and jnp cli dec mov xor xor fldl imul sbb outsl stos pop enter jno ffree lock addr16 inc ja repz in test test cltd cmp and repnz pop arpl rclb sub repnz les pop add ja push enter (bad) fdivp mov mov add pop add inc jnp mov cli in test stos mov inc shr mov pop cmpsl cmpsb sub xor add mov imul outsb (bad) loope inc or icebp mov (bad) mov stc das xor cltd adc adc xor cwtl xchg add call inc ror jo movsl roll nop and mov clc and repz pop test cmp aam es call push cmp add addr16 lds or ret or sbb lds or sub cld negb rorb clc inc inc and mov mov or or inc pop sarb dec lret xchg jl push mov sarl pop les mov pop or cltd in fisttp add mov clc push xor aam add stos ds adc dec nop lods inc inc adc out test test adc (bad) in test and hlt add xchg cltd sbb xor sub pop mov int3 add mov and (bad) jno xchg rcr dec ror xor clc insb or and sbb mov mov add testl mov je rclb add xchg push mov pop sbb sub xor cs sbb add cld add outsb mov fmull int3 dec dec and (bad) aam loopne movsb add inc dec shlb (bad) sub inc cltd push cltd fsubrl push sbb adc in ds enter fdivrl test shl daa subl cltd adc icebp mov push fxam stc jle dec mov pop pusha xchg xor mov ret fmuls adc push int3 jns in ficomp les mov xchg jge or ds ja iret ret and jae negb stc add cmpsb xorl stos mov cmp repz push push popf push pop addl clc das and sub test jno or pop addr16 cltd mov je adc or mov outsb les insl lret add xlat add imul pop mov pusha add push mov dec inc add jae pop mov mov fmul add xlat nop into xor in lcall mov sbb pop mov popf add ljmp dec mov lock inc push scas cmpsl or int3 shlb or pop mov lods jo aad popa enter orl lahf lock js push xlat mov sbb sbb mov adc mov xlat jb sub inc adc pop jmp add notb in jae mov pop add lret test pusha out aaa dec lea rcll and or mov enter add subl add orb mov das jb ja add rol or xor add movsb pop jne mov jmp sbb lods sub jb fmuls sub pusha add psubq ja xor in adc ret (bad) call (bad) or (bad) repz push add loope clc scas xlat aad or adc and outsl adcb enter fwait js mov aad in mov test jae jge ja mov bound fcmovnu repnz dec jecxz loopne fsubrs adc inc das out scas leave icebp mov xorb mov fstl fwait scas inc iret jb inc adc and mov cmpsb or xor and and add inc dec mov stos jg out xchg (bad) mov outsl lock and jecxz or xor push pop lods test in clc das les test sahf push add push mov add xor push (bad) ja lds aad sbb pusha fist imul inc andb test cli orl ljmp mov adc or jb and sbb std stos dec (bad) cli mov jbe jo mov push popf pop adc fisubr pop lods mov adc inc cltd js test rol inc mov or cmp stos inc lds pop inc les mov adc or and mov lcall stos idivb jg xchg movsb or pop adc cmp sbb push push jb test ja arpl adc xchg adc mov dec pusha add add and push inc push rcl scas cs sbb out cmpsl mov dec xchg xor call push xor sub and loop iret ret jnp sbbb ljmp add call mov xchg bndldx add xor cwtl fdivrl add sahf sub fidiv inc adc dec and mov ja xchg mov shlb popf idivb test cmp cwtl addr16 pop in fistl sub push mov faddl or dec adc pop inc lcall sbb enter xchg adc push add mov nop js or jp loopne or xchg mov cmp sbb pop lds fdivrl xchg leave orb xor es pop inc add xchg fadds cmp rolb es jmp adc lahf fsubl mov inc nop call sahf (bad) jns in std nop dec leave repz int3 mov lock jbe sub or jp orb and adc pop loop xchg or call call ljmp xor and push dec inc fs adc push rclb fcmovnb popa pop pop mov cmp push mov jne (bad) pushf shrl repz aas out and inc or cwtl push (bad) hlt js push jg adc (bad) mov push mov and mov cmpsl inc jb add addl lret push sbb mov nop add cmpb (bad) inc int xor pushf sahf sbb fstpl pop mov and xchg int (bad) jmp daa jne and sub (bad) das add or sbb inc add jmp xor dec sbb add xlat lcall or inc jb mov pop sahf aaa cmp xor mov (bad) sub push inc movsb lock cs add cwtl add pop fwait mov in add lret cmp inc pop sbb popa insb adc and fsub js lods shlb lea cwtl jb dec test inc xor clc mov add or xchg jo sbb and mov inc js lea jmp and xchg (bad) pop stos push add insb xor stos inc enter push xchg jo lcall push cmp ss hlt adc lret test jae roll push jbe cmp imul lret sbb xchg ja add in insb imul cmp sti pop (bad) ror and dec mov in rcrb (bad) or repnz sub or jmp loopne dec cwtl nop cmp nop pop data16 jns ljmp jle test inc lea fidiv mov divl js (bad) mov xor pop je push lret jnp mov or xchg sbb mov cmp mov (bad) (bad) std ficom sbb stos fistp int3 das add lahf pop popa js adc dec imul (bad) and mov sbb lods ja cwtl in es pop push jo repnz ss mov (bad) mov ja gs and sbb cmp mov dec cmp push lock push cwtl dec mov sbb test icebp mov fdivrp push jmp jl ret (bad) orb sub pusha or add test call lret jmp mov in jl outsb jmp push fwait mov jg js add leave aam mov add enter lret cmpsb adc popa inc sub lahf xor dec mov add in push imul (bad) lock dec xchg addr16 loopne xor sbb add dec jno repz loope (bad) arpl mov jns push jbe ret mov add xor mov fwait rorb out jo lea or add jl push jns jge sbb out sarb ror xor (bad) call pop or mov pop or nop jmp std loop add std mov fnstenv ja rcl lret cmp pop addb (bad) add xor outsl mov sbb or inc xchg sti add lock mov pop add aam mov or mov icebp stos pop repnz adc xor incl imul xlat jge sbb divl mov mov ret pop pusha cmp imul je or mov cwtl inc mov xor or js pop and add pop adc (bad) push daa cmp xor in add out or clc sti bswap pop jmp subb sbb pop add pop sub lock inc (bad) dec daa inc iret out xorl cltd pusha or mov and test add adc rcrl inc pushf ss clc sub jne lds ljmp mov mov cmp lahf pop fcoms adc or push sub cmp add mov xchg aas and xchg push dec jnp add fdivs or in sarb js inc cwtl hlt aas or push push or add loopne adc jb add ret push sub rcrb js pop enter mov mov inc sbb shrb pop add leave int3 pop add dec test (bad) fmuls jb fstl inc imul fwait push loope sbb loop addr16 faddl push js in int3 dec cmp addb add js neg jns fmuls add mov pop sarb loopne add fwait insb fisttp test daa inc nop pop or adc add adcb push insb mov imul and add sbb imul ss mov cmpb in mov js fsubs push cli nop add out jmp cmp daa icebp enter or (bad) mov lds mov sub bound daa insl adc js jbe outsl cmp add mov fwait mov mov in cmp sub adc loopne outsb mov pop mov lahf adc lea jo pop arpl lret lahf add ljmp sub int3 xchg loopne jne outsl inc adc mov nop es or xor clc sub pop lea add jmp cmp dec xchg dec aas push add movsb (bad) jbe (bad) xchg xor out repnz jno push and add mov dec sbb and xchg outsb js push cmp pusha and xor add loopne lock inc push aad add je stc not add roll xor cmp cld adc icebp or and fs pop outsb jecxz insl or and mov aas xor loop,pt sahf mov sbb add js mov push add (bad) fnsave jae aam cwtl outsl and mov ret push jns rorl pusha or cli xchg (bad) inc stc aam inc cmp mov adc sbb add inc or out cld dec loope add dec fdivs cmpsl dec pop push fisubl js pusha cwtl push sahf add stos pop dec inc daa dec or xor orb test testb inc inc mov nop pop imul dec inc adc or inc dec es dec hlt add icebp (bad) adc in popf testb xlat jns or add add pop sub nop sub mov js lock sbb dec mov push adc add adc je fimull cmpsl movb lcall dec clc adc pop inc add xor sbb adc pop hlt jl cld test sbb mov and and xchg les inc and or push ds test mov notb pop adc or or xor or and pop imul das in adc pusha add mov test push divb push pop shrb fnsave cmp outsb fsubl push cmp pop push nop ret mov jns and mov add inc sub std sbb cmp inc dec push sti nop xor mov cmp fdivs push jnp test inc cld fmull xor add mov out rclb cmpsl jbe add roll pop outsb clc hlt inc inc test leave clc stos add mov std adc push jo cmc sti sub cmp inc add in pop inc movsl pop mov repz cmp daa adc loopne xchg lds inc push and dec scas movsl popl pop scas mov daa and jo cmp lods cmp inc push popf sbb test xchg xor push loope and sbb jge xor lea push pop jmp cld pop lods dec (bad) and aam mov aad sbb sbb push or jae rorl mov mov hlt mov adc sar xor push sbb stos or popa or and push inc imulb nop mov js pop clc adc stc xchg cmp sbbl js mov push aam int3 add pop hlt test rolb cmp sub sub ljmp imul and lcall push pop mov fdivrp cltd dec add rolb dec xor jo sub cmp dec mov out dec in pop xor mov push (bad) cmc and lock call or inc push dec addr16 inc mov jo jae mov in mov inc cwtl incb cmc insl mov push sub mov hlt adc es rorb enter xlat stc in flds scas sub test fwait outsl adc and loope xchg (bad) inc sbb sub js outsb xlat shlb mov add enter or and out mov (bad) adc mov push inc push mov xchg inc or add je mov and test pop nop add xchg pop cmp jmp test push cmp lods and inc insl sub sub inc sbb repnz push xor ret add pusha ret inc add jne sbbl or push push add and out mov pop jmp sahf mov lods cmpsb add idivb pop adc mov inc mov mov test call shlb popw or cmpsl (bad) movsb jo js loop (bad) lock inc outsb ret jns int3 xor enter push movsl fimul add in pop cmp jno adc mov orb pusha lods jnp repnz in mov stos pop jno add repnz nop fsubs cwtl push jp or mov push xchg pusha call shrb lods or mov stc add push fdivs sti data16 or js push push add icebp cld rolb cmc out sub xchg aad in adc addb test inc mov or and lods and and pop pop mov add stos cwtl add sbb fadd jae mov dec enter in repnz xchg add sub les leave and mov sub fldenv push loopne cmp and dec out dec sarw cmp inc mov adc mov mov lea adc push lahf ret add sbb jne fsts ljmp cltd jns push pop add iret aad adc les fidivr ret loopne cld and mov add pop es cmp mov outsb test (bad) cmp adc push mov inc loop fmuls xlat and fsts and xchg je mov insb jns pop pop rcll and cmp and xchg mov test pushl cmpb iret and pop test and xor pop push adc add add dec dec push and cli pop mov or (bad) sahf shrl xor or aad in ficoml xorb das cmp inc push repnz add (bad) or xor dec xor cmp and repnz push inc call jne dec insb bound or xchg inc jo mov iret cs dec jo jge jle xor lock xchg adc add cmp enter fistpll xchg sbb dec mov pop and adc cwtl int xchg xor push fmull add bswap cmp and xchg pop mov cltd shlb outsb jg push add mov mov push jno pusha sub and fs mov add xchg cwtl stc xchg jo addb inc xchg mov outsl jg sub pop mov jo fiadd xor add jecxz xchg and push loopne add inc or aas cmp cmp pusha adc sbb add aad mov jo and test out push fcomi xor add std mov xor lds movsb sub xlat sbb out bound fistp add stos cwtl add loopne loope add mov sub sbb sub in inc mov in add loope fsubrl sbb out (bad) jmp adc jbe mov pop je gs cli loope add movsbl cs mov and popa push cmp sahf je sbb gs mov test into inc push shlb jl movsb add dec cs sub xchg push push adc cmp mov cwtl and or and movsb mov xchg cmp int3 frstor pop and cmp mull mov jl add jp scas fcmovnu or (bad) lret cmp push mov push movsl fistpll repnz shl popa clc sub pop fisttpll jo or jns,pn mov pushf loopne mov cs enter setb jge xchg addb stos xchg in cmp mov pusha ds add adc (bad) (bad) in mov lcall jl out mov add or std enter jge sbb add push dec lods (bad) jmp sbb call lahf shrl loopne push add push roll lret or pop int3 mov xchg ret popl (bad) mul sti je add sub inc loope jmp mov add add gs pushf mov xchg sbb add (bad) mov add jg lsl mov push cwtl js add push pop ds aaa xchg sbb (bad) add pop xchg notb pop mov mov lock nop idivb ret andb push sbb sbb pop cmp cli pop adc aam sbb stc xchg jl push bound sbb (bad) repnz in adc sub je cmp cld ljmp arpl aas add push mov fistl in jns add jp push sti notb int3 cld roll repnz sub nop inc int jnp push pushf insb push mov jb fildll add mov notb or test or dec lods xchg pop cld push leave nop pop or mov mov ds js inc mov cmpsl cwtl jnp movsl and add add pop fs xchg xor cmp aas divl test push sahf je push shll add jle add or (bad) mov pushf push fisubrl add mov mov cmp xchg bound push out xchg mov sub and cmp fcoml add cmp pop xor outsb mov add call sub xchg inc push xor test sub pusha jle adc xor jl cmp jno mov xchg shlb in push idivl sbb hlt int3 lret sbb fwait pusha ret and imul or call inc jp or fs dec sbb daa mov cwtl test inc mov movsl fwait sub push add mov pusha mov pop aam movsl (bad) mov ja dec mov out add je jle outsl mov pusha mov sbb inc (bad) decb in lods aaa jg mov cmp stos dec xchg push xchg jae ret jo sbb jle xchg dec test (bad) jno xlat test jbe hlt adc dec jg add mov mov mov add mov mov jecxz int cmp adc test movsb or push add imul arpl cmp push in cld xlat jg jne add pop mov je incl sub lods or cmp lcall ds push je and int imul mulb add inc jmp (bad) aaa sbbb mov mov jmp jae daa dec sbb sub mov mov das and sbb and (bad) mov jg mov lods xchg movsl xor icebp cli mov sub (bad) xor mov and aas xor or sbb add lods imul push les adc jl rorb dec adc xor xchg inc xor pop inc mov jmp sub inc sbb sub cmp sbb popa (bad) xor mov jbe (bad) xlat hlt adc idivl mov mov jecxz add in popf pop sbb clc push (bad) adcb jo fstpt push xor mov add pop js into jg push (bad) stos xor pop xor jae or mov mov jo mov pop jne testl mov loop add cld outsb pusha nop icebp xchg mov or cld and xchg cmp mov pop ds adc xor test (bad) pushf push inc add and mov cmp mov popf inc or mov ret cmp push outsb or dec dec cwtl adc and mov jbe inc and or adc test push hlt adc fsts in add or jle mov push xchg xchg inc fcomps cmp paddusw push cmp jmp xor adc and pop cmpl popa ret fisubr cmp xor in inc inc aaa xchg fcomps ljmp in rorb xchg lret and nop lods shld loop mov jno add pop aaa jle lods loopne push mov rolb pop lods rclb sti inc cwtl jno mov jecxz xchg or add aaa inc pop popf mov int push inc lock popa or or movsb mov and call bound popa hlt mov les and jbe sbb imul adc sbb inc loope insb mov lock cmp into int mov aam addl add xchg enter jns and push cmp mov in dec fcmovnu dec int3 add adc int ss push adc xor inc shlb xchg add (bad) movsl fdivs out inc outsl push cmpsb int mov mov (bad) lea push enter dec or sbb mov movsb add pop (bad) jle or adc inc pop inc bnd or mov adcb jge in sub mov je test inc inc pop movsl lods jp mov add xchg lock jae repz ljmp hlt adc mov sub cmp mov loop mov add sbb mov sub pop adc dec movsb or push mov test adc in (bad) xchg cli (bad) loopne sub rol in aas jmp or add push int3 scas shlb xchg in add and or or loop cmp push jmp add jae cli cs shrl cmpsb push adc pop xchg mov push and ljmp ja dec add sub inc cmp add add int3 mov in add jo (bad) adc call mov pop mov mov stos jge cmp sub add subl or mov sub dec nop push in adc divb inc xchg add mov (bad) or dec cmp mov inc cmp orb cmp enter and stc fsubl test cmpsb jle xchg loopne xchg mov mov dec mov add cwtl pushf jl rcll mov and add jecxz mov and and out (bad) fs mov or push nop (bad) ljmp pushf or ja mov jnp xchg call daa jmp xchg push or mov dec je or and sbb sti roll lds or inc mov inc sbb testb adc test and adc and or lods or test dec test jg dec or push sub mov shrb mov and adc insb cmp mov cld (bad) js inc loope add push andb enter xor mov adc rcll cmpb xor and mov dec call push (bad) xchg mov test stc jo jmp push test mov mov stc movsl dec (bad) and adc adc ret sbb cmc push push mov and add (bad) and ja xorb xor mov cs push loopne dec addl pop inc es adc out mov sub int adc jns movsl nop leave jl and insb push adc add ret pop dec sub mov test roll sbb arpl jp fs (bad) sbb cwtl adc and pushf xchg adc pop sub mov push cmp sarl hlt pop jne,pn jle or and sbb jnp in mov xchg adc movsb add xor nop or xorl shll daa fucomi dec nop and test add xchg mov and dec clc mov add loope cli repz dec fcoms fwait xchg cmp call js loop in lcall and mov inc je jg pop mov sbb sub add movb fs and sub xchg aaa shrb xchg movsl xor inc or xor aaa xchg and mov add adc js dec sbb (bad) ds inc lods mov and mov call or mov mov jns pop movsb xor add adc xchg mov aaa cmpb xchg sbb sbb and jbe test push pop add xchg mov hlt adc out jno cmp sbb mov test imul fidivr lret add in cld mov fistpl cmpsb or imul dec push pop loopne jbe std jl push in xchg mov add sahf mov iret sbb fwait lods add fwait sub adc insl and fldcw adc lods leave out decb jae cwtl push sub out push lock jecxz add loopne,pt adc add and add jge add pop scas scas jg and pop pop ja test push or inc popf and movsl je ret adc scas aad and movsb iret cmp adc inc xor add add lods in aas jecxz push dec std add sbb fcomps add add pop xchg popa mov adc xchg in xchg jecxz add das stos add lods sub sbb jmp nop xchg add scas dec (bad) incb (bad) loope sub cmp inc inc test jmp bound jae adc adc mov test iret or xor xor (bad) rcrb add cmp pop add andl dec jl les pop in jo (bad) and push sbb enter pushf and cli in punpckhdq cmp (bad) lock sbb push aas (bad) pop xlat and mov sbb sub xor dec fdivrs cmp push js inc movsb add xor loopne add mov mov das aas cmp sbb cmp pop mov ret mov mov adc adc cld popa mov mov add and (bad) jp mov lahf in and (bad) mov mov sub addl or loopne icebp test (bad) mov mov mov and mov mov dec mov pop dec mov add mov out jns movsb rol movsl fbld inc (bad) mov inc pop dec mov stos jg sub pop sub add mov inc or nop inc sub inc mov fsubs mov inc sub insb jae xor and dec push xchg shlb add ds lock cwtl cmp out inc xchg ds add gs lret js out bound mov in add in mov adc mov loopne aad and out adc ds nop add dec inc lret (bad) jecxz es imulb push fiadd pop xor or inc pushl faddl cmp add mov std inc in pop repz inc rolb cmp aaa lods or (bad) fcomps fsubrs adc and adc xchg lret loope ret (bad) push pushf les test test add mov mov cmp add pusha addr16 cmp pop lods into or xchg mov jo mov push cld loopne cmp jae dec xlat (bad) (bad) pop inc (bad) outsl sbb mov cs test lret loopne jle aaa inc and insl (bad) or loopne out sbb inc or inc pop subl pop sub mov pop add sbb dec and ret dec jl es add jge dec sub mov rclb xchg (bad) add jns (bad) (bad) rcr inc or aas andl fildll or test mov xchg addr16 mov nop andl jle adc mov fild (bad) xchg loope mov pop enter cli push pop shlb mull loopne ficom lock sarl mov addr16 lahf and pop jb inc lock sahf add push (bad) ficompl fs add imul jp arpl pop add jnp sbb adc xor pop xor sarb add outsl mov dec sarb dec je add in cmp xchg nop and add nop (bad) and add (bad) mov cs xor push inc lcall lods pop pusha sbb xlat nop fwait dec add inc in fimul (bad) loopne cmpsl lods xchg and and inc (bad) add cs es test xchg clc xchg rorb es cmp scas paddd xor lods add pushf and jb cltd iret std xor xor pop dec xchg add mov outsl sbb (bad) fisubl cmp xchg add pop push and in cmp cmp mov in mov fs sub or sub cmp or xor inc sbb xchg push jecxz xor adc lds sub and xchg insb adc or mov xor jmp add adc mov add and fwait cmp sbb (bad) pop test and insl jnp mov outsl inc mov cmp sahf and xor lds jp sbb les inc nop out arpl or enter mov test in add add (bad) add jae enter jns add dec mov add mov stos jo and fs xchg adc xor push xor xchg rclb lods mov push xor out jae test pop ss xchg (bad) pushf add cmpsl out lods ret pusha xor mov pop pop xchg inc or and aaa mov out push mov adc test pop mov or aam sub inc or pop mov int lds enter pusha dec ror cmp xor fist xchg les loop nop in inc cltd (bad) xor stos mov xor push pop ret xor nop cmp arpl xor dec adc fcoml rolb xor jne add cmc mov add inc xor add mov ret xchg mov lahf (bad) xor shl jle inc mov je mov push (bad) in pop repnz jp add imul cld dec roll movsb xchg out mov adc add stos (bad) or enter jmp or inc add (bad) nop xor sub fwait mov mov mov pop aaa pop adc sbb out cmc shlb test mov jmp cwtl or sarl nop or mov sub cmp sbb jne je mov mov jno xchg mov cmp and xchg rorb es mov popa les cs pusha push xchg inc mov inc jb gs pusha mov and popa sub sbb leave fistpll xor inc inc popf mov outsl pop mov and pop push sbb out test inc movsb inc dec je sbb push xchg add adc cmc cmp sub jmp lods (bad) mov dec lock add jl pop add pop sub adc cli js mov fdivr cwtl dec int3 mov lods adcl pop jg (bad) (bad) jmp xor nop jo pop add movb jno pushf push push cmp xor fdivs arpl loopne push inc cmpl push cmp dec ficoml adc push add add cld inc adc fs cmc cmp pop lock loope in adc mov adc insl movsb sbbb push mov sbb mov adc test rol mov cwtl fdivr cltd dec (bad) int3 push pushf mov inc fdivrs pop cmp push jg or cmp pop stos enter stos or or clc adc inc ret mov lea lods fwait push jle mov rol and (bad) adc sub les fcmove in and rcl dec mov inc xchg adc add inc ret xchg mov or add push fs cmp mov mov cmp fsubp lds sub test gs add dec dec jo jns xorl xchg xor test inc sbb and xor or adc and loopne pop or jmp mov call fs pop add lcall js sbb js data16 push add jp (bad) in shrb cmpl xorw mov (bad) cld mov add xor add add mov das loop js push fnstsw or dec int3 or les adc cmp pop loopne mov mov cmp xchg jbe das leave jb orb xor pop lods push sbb dec push pop sbbl mov mov jge repnz aam lds mov mov daa jno adc add push xchg sbb pop inc inc add inc nop push lcall jmp or ss add pop or icebp add fisub loopne ffree push add loopne xchg add inc dec cmp lahf addl (bad) call cmp xorl pop adc xchg pusha sahf xchg xchg mov insb add fs loopne inc rol js xor mov xchg xchg loopne call sub add dec clc dec pusha and push mov pop daa sarb incb sbbb in es xchg (bad) pop int3 push js out dec pop nop xchg adc loope adc lock inc and sub push out shlb mov lock mov addr16 hlt add aaa jmp cmpb nop pushf rorb iret cmp jle add xchg fs sbb jbe dec shl or xchg or and add lcall or cmp dec and dec je xor add cmp ds jge adc mov pop jnp push mov bound jbe or xor push sbb out lahf rorb and loop mov in xchg sub in adc test xor insb out push fmulp add mov jo rcrl popa mov jae,pt or pop add pop cmp dec xor lods pop testb fs stos push xor pop mov push clc jp inc mov packssdw pop notb mov movsb push adcb add mov mov int3 dec sbb int3 mov inc pop daa sub add sarl test add je pop (bad) xchg mov nop xchg pop cmp js mov inc ds bound je and mov xchg lcall push cmp push fisttpll lock push cmp in mov mov inc sbb push lods xor ret and iret nop sub out dec sbb jge dec out test lret mov push in push push add push repnz pop aad cld mov in add mov add add and (bad) testb xchg lods popf cmpsl sub stc clc adcl in (bad) pushl add lds cmp sbb add ret sub pop adcb mov and ret add notb cmp sub stc add mov jecxz sub xor cmp aad add push cwtl out pop stos outsb loop push jb cmp add xlat add cmpsl invd stc cmp xor sarl cltd add (bad) xor inc stos lea sub in sbb mov xchg fs add repz adc out xor pop sbb mov stc andb xchg pop nop and arpl xor inc lcall outsl gs (bad) add (bad) idivl push out cmp shrb xchg sbb jecxz sbb inc push pop fadds sbb mov mov fiadd arpl dec or jns mov ja jg mov js sub divl aaa cli pop or shrd add (bad) jno sti shrb dec inc ljmp cmc cmp sub icebp loopne ret inc mov call adc shr mov dec in pusha (bad) mov in lds cmpsb dec pop xor xchg mov divb xchg je push mov push mov cmpl cmp dec pop lock in add xor mov push jp inc inc insb shrb sbb xchg mov dec je nop cli dec mov leave pop inc cwtl fsubl inc fsubs cli jnp jmp push test gs rcr cltd mov call lods inc out mov inc cmp xorb or scas adc sarl mov lds add and jbe stc mov in addb inc add sbb mov cs mov nop sahf add and aad cld push jl scas into ds and loop (bad) pop fucomi gs fadd jns jp push dec push loop push xor add cmovo jp out jg dec pushf outsl lcall pop js cvttps2pi cmpsb add push icebp fildl mov xor sbb adc (bad) inc mov into push jb sbb sbbb push pop add aaa adc repz ja call imul cmpsb (bad) mov cs mov add (bad) test std mov add jmp ds sub and xchg sbb adc (bad) jbe (bad) push mov add push adc pop pop ja aas sub and insl or (bad) in enter scas pop sbb add xor push sub ds jae cmpsl dec sbb daa pop loop call pop mov icebp mov add sbbl inc jae sarb adc mov movsb jnp and sub dec mov dec or fmuls add adc dec decl xchg sqrtps cmp add lret jne mov insb dec cwtl pushf xchg adc sub mov orl dec mov ljmp dec nop inc out pop inc add cli push fmuls pusha mov ret xchg xchg push insb cwtl decl add inc push mov adc ljmp sub out push dec stos sbb ficoml and add xchg inc add xchg dec dec je rol and mov push push cmp mov jge lret and add scas mov add cmp mov aaa xor xor outsb push jb add (bad) mov push cmc dec add adc jno inc xchg lcall inc mov jg cmpsb ljmp dec scas pop jns loope adcb push loop sbb fyl2x rcrb adc fst pop push fs nop out movsb (bad) test inc xchg and cwtl int3 and dec add sti leave arpl ss pop mov pop adc push in lea sbb xchg cmp aam sbb daa (bad) fldenv ret xor loopne popa jl outsl push sbb mov enter and rolb push add mov and aaa cli push xchg popf add std imul adc inc xchg xor aaa int3 (bad) cli hlt loope insl push scas jg add (bad) xchg mov repnz pop (bad) cmp mov mov dec push adc psubq and jl jge push aam dec cmp test xlat cltd mov fs dec xchg enter xchg in add (bad) mov xchg adc push int3 nop lcall scas xor add cltd jge sbb daa add mov jno les jl in ret (bad) xchg jge shll mov pop mov jbe and lds dec outsb mov test add (bad) sbb loope andl dec or dec mov andb mov sbb movsl xor push add aaa mov cmpsb fidivrl stos or insb lds push push dec das jge mov dec imul sar (bad) xchg add rclb inc mov fldcw (bad) sbb addr16 and lods mov or push sar es push push in sti push pop add mov add fs pop pop adc nop inc je and add jae adc mov orb add loopne inc sub clc inc in adc inc add add enter xor daa sub jl les adc cltd mov cs sub push (bad) xchg jb fcoms enter xlat pop xchg adc roll add jecxz sarb sub adc push lock or outsb popa and roll stc cltd mov sbb data16 popa pop dec sub inc cwtl aaa jle pop mov scas inc pushf or iret jo add out stos add inc push or sub sahf lods and js lea idivl movsb or dec les cmc or inc sbb xor push jp (bad) push (bad) jg test ljmp mov and pop mov dec cmp cmp sbb jp adc popa pop mov ror adc add js sub ret jmp scas cmc dec into sahf sub scas fild in jl dec fsub add xchg jae inc call shll pop movsb adc add mov enter sub and or loope or lret add std mov dec out nop les jmp push pop (bad) and (bad) pusha inc and popa jge js add dec cmp divl pop sbb (bad) xor popa fs push jle and dec or test push xchg push fwait loopne sub xchg lret pop test or inc push fstps mov dec mov inc jne,pt clc pusha mov insl or popf pop movl mov add iret call aad (bad) lret (bad) jae sub icebp dec push test adc xchg out xor push inc xorl and shrl movsl (bad) (bad) sbb addl mov adc mov pop and jle add adc cld bound mov inc out divps lret xor movsb jo add xchg scas addl mov mov jnp and add add mov add xor adc pop mov pusha dec out mov andb test aaa push and pusha cmpsl mov retw and insb (bad) push jns and adc insl js lods daa fs jmp call les cli (bad) pop cmpsb mov (bad) call fnsave mov stos push mov mov test pushf or ja push xor imul dec push mov rcll add or popa cmc cwtl nop pusha push jmp ja push cwtl and mov lret lahf mov test pusha (bad) into dec sti imul add in jo and cli dec sub ret mov popa mov inc andb dec xor sub (bad) movsb or rolb cmp sbb xor mov out enter push push and rolb mov ret mov adc mov into cs adc aaa add push xchg sub push out and mov or cmpsl xchg nop sbb orl daa push nop pop add test fsubrl leave mov push jns and xchg arpl test adc imul push add test xchg xor mov adc pop repnz cmp nop inc js push mov (bad) lcall in sahf add rcll inc repnz mov (bad) cmp jb push bound mov loopne cwtl add sahf ljmp add mov bound lcall stos push aam mulb pusha insl pop add pop js adc push pop call xlat test sbb loop add inc imul xchg pusha and xchg movsb inc push adc js dec addb add fwait in lret int add test pop test (bad) nop (bad) loopne fld sub mov (bad) test repnz sbb hlt pop bound jp clc (bad) xor jae sahf jl (bad) je repz sbb cmpsl fcmovb jne mov push pop add (bad) jp xchg (bad) out or and add insl xor mov jp jmp inc aad out adcl add add add cld jp outsb (bad) xor in add mov (bad) sahf and rcl out jg clc (bad) arpl out mov xor (bad) nop jno sub (bad) mov xorb xchg cmp mov adc xlat stos xchg push push sti ljmp insl push movsb push pop and add (bad) jne popl and shrb pop adc or (bad) jo nop sahf add dec (bad) shll sbb inc rol cmc data16 testb js jno inc adc ljmp roll or sub push adc insb jge repnz lahf add bound mov jp fsubs and aam rcr push jns inc adc vaddsubps push lods nop pop xor mov test fisttp dec ret test mov dec fnstsw repz insb adc cmp and inc add iret (bad) loopne mov out insb aaa sub adc fcomps icebp and popa (bad) and cmp or xchg adc fldcw js pop inc and lods inc push add or fimull xchg inc sti pop sahf leave jnp fild movsb data16 mov dec add mov ficomp dec bound sbb ja and pop cmpsl scas (bad) push mov enter ss pushf adc cmc push dec mov push lods mov cmp fdivs stc adc test in cmp add inc add jp mov leave xor or test arpl (bad) push fdivp cwtl mov add insl scas fwait out test out aam mov (bad) mov mov pop lds (bad) outsb shr and mov (bad) pop das lock add aaa jp pop mov add lods xchg fstl out add pop out fsubl mov in in xor inc popa movsb (bad) xchg pop repz or sub icebp adc out dec arpl lock push cmp std cmp cli test fldenv inc push xchg mov sbb jp loopne fcoml adc add popf inc mov and cli xor (bad) sub sar aaa adc mov add js test orl fisubr adcl jne push add bnd xlat nop add add ret jne aad test sub aas xchg pusha inc shrl dec dec xchg sub fadds pushf push in jmp ds push or nop inc pop mov add leave jno lcall jo lock aam (bad) add xorb xchg bound jo sbb dec test in push sbb hlt push insl hlt sbb sti in (bad) loopne add xchg dec adc sub jp mov cmp mov lret outsl pop mov clc jo or jmp adcl xor (bad) jb mov dec sub pushf je lcall push test shr sbb push add inc sbb jmp movsl fwait stos add int3 inc aam dec popf (bad) pop add cmpsl push add add repnz lea sub in xchg jle outsl mov jecxz std xchg outsb ret ja loopne insb jnp or test ret xor sub cld xchg pop fadds dec xorb and jge mov adc add inc out jecxz xor dec pop sub cmp fdivl rcll inc lods (bad) fstpl movsl hlt bnd mov cmp out es rclb pusha and js sti sbb xchg nop adc sar adc add cmpsb nop ret (bad) pop test add sbb ja mov test add sub mov jge outsb cld xchg pop add test dec (bad) stos test add lcall sbb bound push dec out push cli in push aam xchg js aas mov push ja xchg insb add cmpsb dec jns or aad mov js and add mov inc gs and jp mov dec movl lret clc sbb pop pop (bad) (bad) jo mov and mov cmp jg add cmp out add xchg sub push adc fimull cs sub loop cmpsb xor mov cmpsl ljmp dec inc sbb mov mov outsl push in dec xor push add sub xor sub lret add push jo fadd adc (bad) xor scas inc out push mov sbb adc push mov enter in mov dec sub dec cs and push mov icebp dec inc mov and add mov fcmovbe test shrl mov test fsubl movsb adc cmp lahf jae adc pop mov adc sub pop pop add mov sub sbb lods adc pop sub jnp and and hlt and bound pop add dec ret sahf aad jns or les jo pop adc dec mov xlat cmpsb test out cltd sbb aaa inc pop add pusha dec jo jo je and push or add int mov jo sub sub inc and in cli xor out and rorb mov ret jo push mov mov vcmpsd dec hlt cmp jns cwtl stos in iret fadds scas stos cld jl jne add scas imul insl add movl inc mov aad inc sub cmpsb push adc test mov jo sbb jl out and in data16 and pop faddl enter and out lds aad cmpsl cli mov mov xchg in add mov je and lods in xlat pop subb ret js cmp cmp loop les add cltd dec enter movsl sub add (bad) fdivr popa xor adc pushf or or stos inc sub pop and bound push dec psubb xor adc test cmp add xchg (bad) xor cli cmp mov cmpsb jge push in fildl jo dec add popa dec push enter fcoms test xor push inc mov pop xchg cltd das dec xchg add xchg jg fcompl xchg adc cs adc add dec (bad) iret or adc fsubrs or in sub fmuls je pop push aas xchg cmpsb int int3 dec mov dec mov add shr jo push nop sbb sar xchg popa ss xor aad push lods add cli rcr test mov pop out test sub pusha sub sub movsb or lods inc shlb add or or add gs dec add inc sbb sbb add or sbb call sbb clc xlat xchg xor pop roll jp jl divb (bad) inc enter (bad) inc in fisubr mov (bad) fstpl mov add adc lret out loopne ret hlt in cmp orb (bad) dec jmp add std xchg inc stc xchg lock mov pop add xlat ret jecxz add in mov inc dec mov and mov hlt in out adc lds pop xchg out push or std mov adc pusha (bad) jge mov push test fcomps loopew adc jne or movsb (bad) pusha cs jbe pop mov ss jo je into movsb test cmpsl (bad) rcll inc pushf dec sub add push sbb sub cmpsb push divl jbe push pusha jne,pn jl mov pop cs push xlat std xchg outsb adc mov bound inc shll fucomip std les in sbb or push or xor cwtl ffreep cmp ficompl out pusha ja push aas sar jp push dec sbb leave fwait cmp rcrb dec bound movsl sbb sub sub sub cmp jmp add enter out in xchg clc xchg and xor push fldz inc sbb push test inc movsb cwtl add sahf or ss mov dec loope sbb mov add je rorb and call fucom mov pop andb addr16 pop repnz sbbb mov out loope xor scas in pop adc stos sub cmc inc fs enter and jp insb rcrl mov repnz adc inc inc fdivl xchg cltd inc pop lret pop or nop scas dec pop imul clc call movsb pop sub adc inc inc sbb xchg and cltd (bad) in xor sub aaa fnop add test cmp (bad) push add dec sub mov arpl movsl add test int3 xchg bound scas xor inc jl xchg mov test xor lods add or loopne call cmpsb push xor and dec pop mov sbb faddl repz xchg ret add mov stos rcrl daa inc mov xchg inc icebp lock pop lock js add jmp push jge nop pop xchg cmp outsb and into add sbb leave dec or mov subb mov xor jge adc iret pop lret mov cmp inc icebp add cmp divb add jg xor add ja mov lahf xor enter in fnstenv gs xchg sbb pop addb or aas mov mov mov lret pop cwtl mov arpl out ret pop jmp pop das std push (bad) xor cld mov loop add cli (bad) xchg aas add add and cmp stc pop sub pop sub pusha xchg inc addl push and pusha hlt xchg sub jne add push sbb pushf stos mov cltd mov pop and pop or or inc add outsl dec int xlat sub mov add push sub sub add lret mov ret fadds or pop lcall xlat testb mov push clc sarb fiaddl add mov xchg or mov pushf inc imul push fstpl (bad) test cvtps2pd popf out cmp cmp inc (bad) mov jns push insb push mov clc fstps push mov or push clc ret dec std stc cwtl pop fcompl dec add in sti out dec add cmp movsb jge ret push fld in mov xor icebp repz (bad) int3 mov stos adc inc ficoml aad test and xchg or sub or and cli (bad) and pop push xor sub jecxz ja xchg inc mov mov mov fadds xor jo aad cmc sub call pop out mov xor inc pushf cwtl aad jnp mov and es add mov xor sbb cmc or mov loope mov xchg repnz inc mov fldcw or add add mov xchg popf push scas xchg add xor movsb addb mov sbb add sti jecxz push xor (bad) xor nop add and jns fcoml add sub leave add loopne fwait add or pop cli sub adc cwtl in (bad) and out in loopne jl out negl int3 (bad) cmc push pop xchg add enter inc jns dec fnsave and out xchg push jg insb cmp fdiv out sbb push jne push adc push jl add mov cmp repnz inc loopne lods mov add add xchg adc or hlt mov enter or pop int3 sbb adc (bad) xor or test adc push inc fsub (bad) stc xor (bad) push push mov (bad) mov (bad) sbb sbb mov push mov mov inc pushf sbb inc and movsb mov pop fnstsw pop add ljmp rol stos pop scas jl dec push and push out xchg mov movsl add test inc cmp add xor test cwtl mov cmp mov push call jno mov popf stc push and add jp test pushf inc cmp das or stc rcr push js and add lock add sub jmp inc je xor nop adc call mov pop popf fldenv (bad) mov mov xor imul clc or in pop xrelease lea lods xchg mov pushf lahf frstor stc xchg cmpb pop test and inc js out adc (bad) fsubr dec jo push xchg inc inc xlat aam adcl jb sub add add and and push inc sbbb repnz or mov lea inc (bad) mov or fadds arpl ret cli add sahf or rclb inc xchg stc hlt in or cwtl les test and jmp cltd enter mov scas adc sub and fnsave mov jb clc add dec sub pop rorl (bad) in and es xchg outsl scas dec add out pushf ret popf hlt (bad) and (bad) lret into sahf repnz dec bound add hlt xchg or faddl cmp mov and xor mov insb inc push daa cltd inc loopne pushf adc jl hlt xchg or shrb fwait lock jo xor pushf add inc adc or or xor sbb sbb adc push and rorb into pushf cmp inc mov mov fnop and xlat add xor sbb sbb add pop pop push clc or push pop inc mov inc and mov xor dec lock xchg add outsl inc pusha insb popa push cwtl add aad mov out pop push andl lcall fwait mov inc out sbb sahf add gs add les scas hlt lds insb stos mulb xor push lods sbb sti and pushf jmp push push or ret inc xorb in or mov or mov addb outsl sub jmp cmp cmpsl sub xor inc pop or and stc popf arpl es mov add push xor push inc hlt lea pop outsl mov orb xchg ret push jnp mov or pop idiv add lea push sti leave pop aam test xor js dec dec sub xchg xor (bad) jnp add rcr mov xor ja mov test movsl add cld or jecxz or add cmp (bad) int3 jge inc inc or out mov aad pusha pushf push push pop ret adc in mov mulb add xchg ja pushf out lods or icebp in add test ja jle pop sbb or mov add push stc xor sbb mov and jecxz mov jnp test bound loopne xor lock test enter cmp mov loopne push cmp rorl mov or pushf sti pop add xorl sub inc cwtl shll fwait sbb in rep lret dec aaa adc push and mov mov xor add in inc dec mov mov sbb inc mov push test cmp jmp xchg cwtl js lock frstor lret pop nop test stos cmp into inc outsl jns jbe fcoml lahf mov sbbl push out jp fld mov clc inc jl sbb add mov add clc jb push test js popa sbb pop add xor pop test add in testb out (bad) cld inc mov out push sti xchg cld inc mov inc xchg pusha pop test cld jo push add movsl pusha jg pop adc xor jl sbb loopne and mov ret xchg and mov xor push fadds rcl pop pop jno (bad) div xor call xor mov pop nop movsb mov mov xlat xor and fidivr loopne cmp and push fdiv xchg add pop ror add xchg andb mov adc add add cmp insb cli pushf mov (bad) add sbb or push jne and or lret mov (bad) jne data16 or cwtl push js aam sub mov flds shr loope cwtl cmp aam add pop add mov hlt dec sbb push je xlat or je adc cwtl push in adc inc clc push cmp loopne pop push xor add push mov cli mov rolb lods adc push jle pop imul mov and jecxz mov or and push test les cwtl mov push xor jge add loope pop test (bad) insl sti jo mov pushf mov mov xchg sarb add loope add in mov xchg xor out cld add cmp adc inc xorb jne movsl mov push es popf inc dec insb cmc je push and iret or pop add jne inc int or and cwtl mov or repnz add inc outsl dec pushf test or (bad) dec xor push sbb xor popf pop push iret adc dec in loop test sbb jae (bad) fcomp adc lret gs mov jno mov mov add sub jbe pop sub cmp add xor nop jb mov bound mov push xchg jo loopne movsl lods add loopne,pt jge outsl dec xor and in call pusha cs cmp push jge clc bound xor stos popa xchg notl and sbb mov nop mov repz call cmp out mov cs out cmpsl add scas xchg cmp sbb (bad) push lods mov mov jl in imul popf mov movl mov outsl cmp mov or or int3 dec add repnz xor lcall adc popa and or jl pusha pop sbb push mov int3 push ret mov adc or xchg adc sbb or jle ljmp and add sub or pusha mov (bad) stos mov add jbe icebp cmp outsl adc fisub into or sub sub std call and sub mov mov mov xchg lock add lods in std push pop ud1 and xor (bad) sbb fadds stos jb or xlat xchg ror add rolb push sbb cs cmp mov jb mov adc cmpl aam xlat rclb add fneni(8087 mov out ret push mov cmp jo xor mov add pusha nop hlt jbe dec outsb mov cmovae cmp in pushf push adc add insb mov (bad) xlat arpl jne in (bad) jo lea xchg enter pop push out fstpl jmp jle jp stos sub xor nop mov nop adcl add mov cld movb push add push or sbb ss in dec mov jecxz cmp dec cmp add dec icebp or test stos or jl lea pusha fmuls mov out mov lds cmpsb leave imul int3 and or xchg dec movsb adc jmp mov rcrb and xchg cli dec add mov dec mov rcl nop sbb mov pushf pop add popa add dec mov pop lahf adc sahf xchg lret mov inc add cmp push test cs cmc add fsubl js jg popa data16 sbb test popf or stc sarb mov movsb inc or pop add xor inc adc sbbb pusha rcl and sbb sbb inc pop (bad) pusha push test add icebp pop and mov aaa gs add repz cs aam jecxz je rorb add dec push sbb ja inc push xor xchg call or arpl ret inc loop mov add shll dec fiaddl pusha ja mov ret in push jns bound inc sub adc (bad) insl xor mov add fisttp sbb cmp das sub mov lea sahf jb mov sub add mov pushf (bad) in sub push mov pusha cmp je mov mov test pop pop inc or out push mov add jl jecxz push movsb decl dec arpl out and cs and mov clc add push lock jbe inc nop or aaa test sbb jo sbb pusha fcoml mov mov das add scas and mov adc daa and ficoml and push inc lock pop mov (bad) sbb int3 fs jge xor scas sub fwait sbb and dec mov bound pop adc je adc push seto jle add dec mov sahf mov xor arpl push mov cmp les add add push lods fstl adc push sbb add sti push xor pop nop push add lret or icebp sub push stos or rolb cmp stc jae push scas add adc call es lcall aaa aam jae pusha nop call pusha sub (bad) xor fildl in movsb sub mov mov js les sbb xchg out xchg ret cwtl icebp scas stos push push add push pop inc or mov test mov mov cld sbb dec push push pop or or dec subb pop cmc and jnp mov mov cmp adc (bad) push sub xor mov repz inc add sub cmp jo popa lahf sarb add andl je insb leave fwait jo adc fldenv mov lea sub test lock inc flds sbb mov xchg inc add daa cmp adc pop bound fmulp xlat jl sub div jo add and cmp cmp adc jne inc lock pop jle rorl sub jp add add icebp sbbl inc add cmp add fldt (bad) lea mov xchg lods mov repz add push xchg loopne enter inc sbb pop pushf or xor div flds cmp mov insb and add sahf inc daa cs lret sub cwtl mov dec mov dec setle mov cld leave cltd test cmp dec lock imul and add addb pop (bad) push fsubs pop (bad) stc xor ja sbb adc jg add int cmp sbb dec inc lock jl nop inc mov or mov ficomp jb push xchg pop jbe cwtl int lret nop int3 sbb dec inc xor loopne or aam (bad) or sarb mov cmpb pop fs sbbb sbb sti add push jbe popa mov cmpsl jp or test test imul xor pop pusha dec lret mov xchg jl in xor std imul int3 fsubrl (bad) (bad) or leave or into iret pop cli mov jmp pop scas hlt pop xchg movsb sbb inc (bad) fcomps mov loop or out xor rol mov sub push push inc jmp add mov jl xor jle mov jge xor nop and sub add addr16 insl mov pop insb cwtl add pop outsb push inc int3 sub inc adc mov mov dec jnp cmpsl loop xor pop dec push and cmovp clc xchg add mov enter (bad) xor or sub jbe sbb cmp std inc pop add push jae notl adc adc nop add inc jo lret sbb lods jne mov pop mov js xor xor adc inc sbb sbb push mov cs enter lret xchg and pop add (bad) pop or iret add push rcrl inc cmp mov sahf pusha sbbl and dec ljmp imul insb push xchg (bad) mov pop imul lret out mov out add cmpsl scas push mov inc mov (bad) cli loopnew adc push inc or hlt faddp adc mov add cmc mov sub and (bad) (bad) xor cli and mov (bad) pop jp pop ja and cmp adc xlat pop fs (bad) test mov dec sbb mov inc jo cmc sub cmp imul jo sbb and cld xor pop xchg popa push mov ficompl pop fisub dec xor (bad) sbb iret insl adc mov das jb pusha add test pop or je push xchg fiaddl (bad) out outsl popf (bad) adc cmc pop push dec addl movsb or in in stos mov cmp dec xor sbb dec and scas add and lods or cmpsl (bad) lock arpl pop inc add dec adc pop add ja test popf push (bad) jno fidivl sti push add test stc rcrb (bad) jbe fisubrl dec adc dec mov stc test pop pop fmull std or push sub shl cmp pop cld xorl adc push pop jle movsb adc icebp xor cmp imul pop leave ja xchg test mov pop push jb or jo lahf adc test add mov add mov pop insl (bad) jmp pop push dec subb mov aaa shr fistl imul pop xchg arpl enter push mov push cmp jl ds adc (bad) sbb stc (bad) mov (bad) add rcl pop push and insb fmuls hlt lods xor aam and mov pop movsl jmp sub nop sbb push cli lahf add into outsl (bad) mov jae mov mov cmpb stos dec mov clc fcoml rorb cmp mul push or ja fild add push pop push (bad) inc iret lods cmovae cmpsl cmp and or andb mov adc cmp adc cs loop lods je or into jns or add div pusha bound in icebp insb push in shlb sub mov sti and stc les adcb addb and push and mov cmpsb add enter sbb out dec int3 pusha pusha test fiaddl ja nop inc call dec decb and dec fsubrs mov jns mov out insb adc xorl push adc cmp sbb fdivs sahf mov cmp or dec out (bad) ja jo adc or sbb in lds fsubrl icebp cmp insb and adcb ret cs (bad) push mov sbb add mov push mov nop jbe ja fidivr xor sbb add xchg cmp cmp sbb jb dec dec xchg shlb or cmpxchg push push mov add jmp jbe jecxz pop ror xchg fdivl cmpsb rcl add mov fcmovbe push test jg icebp popa xor mov orb sbb or adc icebp arpl orl jl ret in mov xor mov dec enter cli mov inc sbb je add xor nop in (bad) pop cmpsl or cli inc int3 js mov cmp ja das sbb fstl insb mov test ja jbe mov pop addb and push mov enter mov mov cltd and lcall dec lods and cmp call les mov cld imul stc test (bad) je xor push add mov icebp cwtl mov insb mov inc cmp xor ljmp jmp jbe in dec push arpl mov (bad) (bad) mov pusha cwtl js adc (bad) cli add jne movsb adc loop fs jnp gs sbb mov cmp call in or std mov add sub mov addb hlt mov fsts mov mov add imul pusha sbb test nop xor fnstenv or fiaddl fcomps cmc jmp (bad) outsb push andb push pop xor out sbb in push loopne repnz dec dec mov fidivl or adc dec add push push push imul iret adc loope inc shll sbb outsl add ror xlat adc mov fs scas xchg fnstcw pusha clc push in insb cmpl dec lods fcmovnbe cmp in mov or xchg mov xchg push test out lret roll inc loop sub add adc dec cmp cld bndstx mov mov mov aas fcomps add in out xchg adc cmpsb add inc aaa mov add sub outsb push and xor sbb icebp icebp jecxz adc sub mov mov inc aas push dec mov dec (bad) sbbb xor das xor lods push inc xchg xchg cmp push lods cmc sbbl js cltd nop inc aas incb call push cmp inc (bad) lret add sbb fdivs stc mov xor inc movsl out aam push loope gs (bad) cld jge inc or fisub ljmp shrb pop xor das ret mov push inc cmc adc cli jne inc lock push js mov xor ret and jae es mov in sti and mov ljmp enter cli push enter add cld or lods xor and sub nop (bad) mov fcmovbe mov movsb cmp or testl lock cs rcll orl es nop cmpb nop in add push pop fisttpll dec and dec sbb xchg test pop ficompl mov jl and and inc movsb lahf jnp cmpsb xor xchg fcoms adc int3 add add adc sbb insl mov (bad) adc adc add and adc dec ss sbb fsub adc mov or aaa fsubrp test pop push fwait or push call gs pop push shrb jmp push dec jae inc je fwait sti insb fistl dec mov mov out repnz adc cli mov test (bad) and or call test jle xor cmp (bad) dec mov addb mov adc js clc stos imul (bad) loopne dec push fs int3 jecxz jb and and js cmpsl enter add outsb (bad) rol pcmpgtw lcall adc ret mov outsl mov adc xor add inc bound xlat mov mov and mov push hlt nop adc out aam loop add cwtl fstps add push and cmpsl jno sbb push sahf movsb xchg cld inc cli push test or xchg add xor mov mov loopne dec adc das inc movb fsubrs or clc fiadd fs stos loop lods cld loope inc (bad) add add mov lret add mov mov mov push cwtl fcompl daa aas add ljmp andl icebp stc sub inc test movsl aad add movsb cmp adc movsb push popa aam xchg mov push fs loop mov jl and int3 pusha push testl out xchg dec cld dec cmp sbb nop in negb arpl ds fidivl mov mov lods out lods xor mov leave inc mov adc or add andb mov call or add lahf stos mov subl push add pop aas loop cmp shld push dec mov and push or and and sti add mov add mov mov mov push or cld pop repz lahf ja add in adc pop out rclb mov adc add push mov in les adc call fwait cmc insb dec scas push push das cmpsb cwtl jg js push mov adc shrb cli aam pusha setne mov xor daa ljmp xor sbb and cwtl fdivrl dec push mov jns popf loope sbb dec outsb add xchg fcmovnbe fxtract aaa jae sbb outsl iret les xor jp add mov js pop add pop or inc rol xchg (bad) xor sbb (bad) add pop js jecxz adc mov adc jge xchg sub or les add mov js sbb xchg push sbbl rcll mov inc movsl scas fidivrl add scas or fnsave push add insl xor or xchg lods cwtl sbb and fldl mov cmp push mov repnz mov in outsb iret aas or jae icebp cmc add inc mov cmpsb mov xor test scas test add adc xor inc sub ss xor sbb and shlb jbe out addr16 xchg xor and dec pusha gs rcr loopne add inc mov sub lret orb arpl mov add (bad) fisubl adc sbb add or pop mov sarb xor int3 add iret std aad xchg add imul (bad) jno rorb scas mov mov out mov mov mov mov cmp pop pushf pop jnp mov cmpb sub ja push adc pop das out (bad) imul jge rorb neg mov sarb in aam add es outsl bound hlt addr16 test add jnp les test jbe stos adc sbb (bad) add mov sub std subb sbb adc push (bad) incl cmp ret jno mov pop in movups (bad) clc cmc sbb getsec or imul jno add push dec popa pop adc xchg inc in or sbb or fsub sbb bound or dec imul cmp xchg jl aas popf jbe pushf nop fs xor ret jnp inc aam xor xchg mov gs popf adc push mov ds pop lea es fs or xor aaa out dec add sti and insl imul in inc hlt and mov sbb fcomp and or push mov fxch test outsb jbe lahf sbbb daa popf mov add adc (bad) xchg mov xchg jl push popa xchg jg jecxz jge in (bad) add inc sbb incb mov popf add mov pop xchg sbb push sbbb push dec in add inc cs push pusha xor mov in adc jl push adc and into add push xlat cmp add adc cs xchg imul push shrb es lock addl ss add jle dec mov jo xor sub or adc pop dec repz pop adc cwtl add nop movsb fstl xlat imul test scas ja ret icebp sbb mov jl or and loopne add adc mov cli adc adc xor arpl insl cmp jle pop je jo jmp out xchg std add xchg sti pop dec dec rolb add repz hlt test nop cmp leave or bound fidiv icebp (bad) and dec adc and jbe enter inc add fnstcw out dec or bound push jmp leave movsl add push add mov jl sbb mov in sbb add cmp mov ss testb scas out push out mov addl jp mov sbb and lock ds and jmp pop cmp hlt cmp push (bad) roll add in cmp adc repz into lret push xacquire and add (bad) dec jnp mov mov add into push and sub push hlt pop popa dec test inc cmp cwtl pusha adc daa sub or outsl shl and clc push (bad) cmp insb ja js cmp daa addr16 cmpsl xor xchg movsl push add jp dec add pop or js or sub jbe sahf cltd add rcrb rcrb dec fbstp and inc push ja cli add movb cmp js rcr and xor loope add mov outsb mov ljmp and stos jbe (bad) push sti ds fild fdivl add push sbb addr16 insl stos inc test loopne mov mov push inc and cmp jge push (bad) or je jmp mov lods pushf out out lea (bad) movsb shlb dec xchg aas inc jp xchg cvtpi2ps hlt xchg add jo jno or add dec mov ret sbb cld dec and inc in stos pop decb into and add mov aam insl adc xorb (bad) aaa mov add mov jo (bad) popa mov xor push mov pushf mov add scas or ret pop pop jns in add dec (bad) lret hlt mov bound pop je fadds xor inc xlat and pop jo (bad) cltd inc add cli testb inc scas sbb imul inc xchg pop inc inc mov iret pop xchg fidivrl add mov mov pop add out cmpl push dec pop mov xor stc add sbb movl push rcl mov xchg inc mov jecxz addb mov pop adc cwtl in fldl inc sahf cs adc push pop int cmc jo es aas roll xchg dec mov (bad) mov mov cld jg cmp add dec daa loop jmp aas inc cmpsb into out sbb lock dec test ds pushf xchg push and inc adc jnp in adc mov loopne imul adc sbb sub mov mov call add inc data16 in xchg jb shrb movups mov sbb push stos fidivr mov and mov inc pushf sub cmp cmp xor sbb gs lea insb add push add mov adcb popa xor mull (bad) cmp in mov aaa mov js or push cmp cs icebp dec cld mov xor test xor lds fwait insb add pop jne adc or loope scas add roll adc enter push adc std mov ds jb (bad) jae jno inc push jg cmp sbb cmp fadds push (bad) les pushf jnp pushl fnop int3 icebp dec sbb cli pusha mov fstpl insl mov xchg add jo test hlt into ret mov add rcl sub enter xchg fstpt lds in sub fwait mov test mov shll repnz mov popf push add out xchg sub xchg push jg std cmp add (bad) in stos leave push ret nop in xchg mov mov int3 xorl mov lock sub sbb xor icebp and add imul nop sbb cmp inc not hlt icebp movsl lods and imul xor or add mov adcb push inc mov add and pop jne loope xchg sbb mov and push cmpsl sti pop imul sub xor pusha adc sbb inc ret add dec xor push jbe mov pop lahf lock or inc icebp shrl adc or loope push sub mov sub push outsl out add lret aam addr16 push pop hlt dec rclb xor subl and jp stc fsubl mov inc aam (bad) xor mov mov add ret in lock and or inc test adc dec add movsb xchg es push mov mov add mov les ljmp loopne (bad) xlat loopne xchg jmp ja std addb hlt adc in decb roll xlat mov das imul mov notb push push clc stos xor mov and mov sarl dec add (bad) loopne add push arpl sbb add jge jl pop mov cld fisttpl loopne add pop in and xor add jp cmp mov sarb mov and pop out dec mov sbb iret cmp mov jno add fsts inc pusha (bad) arpl imul jnp dec pop sbb int jb push sub or lret clc fcompl repnz lea rolb pop leave add mov cmp call add test push rolb mov add add sarl jae fcmovb dec ljmp or shlb pop jge mov pushf jnp or push sub ficom and push data16 js adc sbb add and test test movdq2q orb push rolb add xchg inc outsb jnp mov and adc mov addb addl or sti test fcoml mov inc loop pop loopne mov push fist scas xor mov std testl and hlt stos push inc (bad) adc iret jo pop sbb orb add pcmpgtd (bad) icebp fdivl xorb push xchg int3 xchg imul and adc loop aad add adc cmp ds cmpsl xor mov dec xlat sbb jmp fmull scas and lret daa pop jo fcmovb xchg js xchg xor mov jo cmp cmp aam and push add fucom test adc cs fld jno mov add std xor mov fild push add cmpsl shll inc and dec add popf jge xor mov push inc or inc fadd pop and push les sbb dec adc lock outsb das movsb fdivl sar jp les push sub add lods mov mov push mov addb (bad) sbb data16 insl lds gs cld repz add xor add ds stos mov xchg fsubs js movb sub arpl aam dec mov inc pushf hlt add lahf adc clc movsl push jne mov xchg setno les movsb (bad) push adc add jle jne add add rcr in jecxz sbb pushl pop add jl sub adc fldt addl lret test push cmc xchg dec lgs mov aas mov rolb in xchg adc bnd inc (bad) sti push out inc clc xchg mov push mov jnp faddl (bad) cmp sbb adc mov test dec cmp push adc sub add adc lret cmp mov lea les mov jl and mov loope jg out add mov xchg cld cltd mov cmpb push add sub decb test pop and sbb ljmp push jl cwtl in dec ret dec in xchg mov loopne or shll aas test and ja cmp add jecxz push (bad) cmp xor sbb and mov and add add sahf dec ret jnp (bad) mov pop fcompl adc xchg cltd inc push lcall lea and cs add mov jns je adc lret xor mov in pusha daa add inc notb ja inc xorl cmpsl repz pusha mov jo adc call repz stos pop sti push push mov adc add dec dec jle cmp icebp cltd add xor pop mov and ja in lret cmc int xchg cmp and aaa mov rcl dec stc cli dec inc ficompl mov xchg xchg jns or popf in mov mov mov or js xor cmp cmp call fstps pop mov pusha jg (bad) dec scas in js sbb push adc add fnstcw lock test idiv jg rcr enter out ljmp (bad) jae (bad) xor scas or xchg out mov adc add dec sub jle sbb jp xor xlat call lock pop nop js fnstsw rorb andb fsts jg jecxz mov jmp mov xor lahf xchg fs mov dec movb mov adc pop hlt xchg fwait lret add test in xchg cmpsl mov faddl test adc jb lods cwtl mov push fsubr xor push movsl int dec hlt fistl add cmp xor xchg loope xchg nop xor int3 push sbb dec or sti add pop in jecxz xor loope pushf add add mov cs or cmp adc ds loope and addr16 pop (bad) cmp pop stos mov cmp repz add push cmpsb jp movl js mov dec stc push rorl test add outsl and adc divb push adc (bad) arpl xor shlb xchg mov fimull mov bound outsb push in or cmp cmp push mov adc loopne inc or dec je dec fs mov lret iret cmp aad sub popf sub add push jbe add cmp inc or jb adc clc ret jne add leave mov scas and cmp sub or test les loope aam adc mov jne dec pop inc loopne xchg icebp cli lret pop fwait loopne rclb or sbb (bad) movsb (bad) sti adc int inc inc lahf adc daa cmpsl adc (bad) dec push mov stc lret repnz mov icebp clts pop mov pop xor (bad) and outsl cmpsl sub movsl dec in dec mov and or mov cmp outsb xchg mov sbb in adcl add cltd jb in inc pop pop xor in cltd mov dec pusha inc xchg push in (bad) jmp pop sub lock not dec push mov lds xchg call cld enter lods add push lahf mov lea xor jp nop out repnz mov or adc sbb add mov test stos or xlat fcoml cmp mov sbb lcall in pop sbb inc pushf add iret xor pop mov and pusha add mov or fisttpll cmovp rcll add adc sbb sarb xlat pop js mov push test roll cmp xchg inc sbb sub (bad) mov loope pop cltd add and and loopne sbbb in mov and outsb mov hlt xlat orl xchg and adc mov call addr16 lds add lock sub xchg inc shl sbb (bad) push andb setno add jmp or (bad) fsts frstor add mov mov add rcrl insb adc jb xchg hlt jns pop and inc andl imull (bad) cmp jne add cmp pop mov mov mov push arpl fisubr add sbb (bad) sarl add fstpl mov and cwtl push push lea in and add or dec add mov jp rclb sbb jle push data16 mov add inc (bad) mov pop pop push fsubs popf dec adc ds sbb adc adc cmp rcrb pop stos pop inc orl jnp mov or (bad) dec dec out inc fcoms cmpsl in add pop scas pop aad pusha push lret cmp jns sbb fnop add jo and or push and push daa add adc pusha adc pop mull mov xchg loopne enter cs push fs and lods add int push mov das xlat xchg cmpsb pop repz sbb cmp pop icebp add fisttpl jo ret jno push lods inc xchg in js scas or scas cmc les mov and int in xchg add push push cltd pop insb mov or ja dec scas jl pop pop out push cmp arpl lret (bad) push or (bad) sbb ret and (bad) les sbb loope stos mov adcl ret rorb add js xchg stc loopne in add call sub std stos cmpl sahf add xor daa jge cs push pop add je sub scas add mov (bad) cmp les xor and fsub daa pop subl pushf imul sti shrb les add mov iret outsl fstpt adc add sub repz push rcrb int3 adc mov and add fstl or cmpsl orb addr16 addl add inc mov popf dec add mov mov shll push add mov push xchg mov test jo pushf sbb mov pop dec add dec pusha loopne jbe add hlt rcl cmp mov xchg data16 mov cmp xor cltd adc sub or xor fmull int3 (bad) cwtl inc idivb add jns inc pop pop sti (bad) into mov push (bad) loope mov push enter push std insl cmp inc add add sub lods add movsb adc ret stc jo push repz mov xor adc (bad) mov push dec add push or xor inc dec and mov cwtl or push add pusha cmp adc sbb xor add xor leave xor ud1 test jbe or orl mov or (bad) mov scas lcall add jo,pt and xor call or inc inc mov jo add sub xchg fildll fnstenv insb cmpsb cwtl and arpl ja push cltd sub add inc mov mov sub test call jmp or and inc ja inc mov cltd (bad) addl data16 mov (bad) jbe rcll xchg adc mov add test dec in or add cmp jl out push ljmp xchg add std adc add jg pusha lds fcom add sbb or dec lock mov orl call mov pop incb test je cmp dec dec sbb xchg push xor andps nop rorl xchg xor cwtl cmpsl xor jmp push dec clc dec inc mov push sbbl outsb adc jae inc stos push cmp lock sbb and mov add sbb aam jnp and xchg mov add xor test cmpsl jge inc pop lods xchg negb mov or jmp pusha adc insb push adc mov in add add clc les xor cltd clc mov mov jmp adc sbb test (bad) ret pop mov xor jno fs sbb insl ss cmp push add pop fistpl add inc loope gs ljmp pop xor add mov pop pop add mov mov jl lods sub ret loop adc sbb in inc push leave or adc enter cmp add adc leave inc jae dec or xlat xor sub push pop repz call adc fdivl hlt jnp aad outsb xchg ret mov mov adcb sbb xchg pushf pop negb imul or mov call adc int addr16 and test add jns cltd es add sub sar arpl cmp add lret xchg imul jg lock bound rclb sahf (bad) lock rolb sub arpl ljmp (bad) call insl andb jp cwtl cmp sbb cltd push add xor stc xchg inc mov inc xor xchg test out ret or xchg push jecxz testl fldl pusha cmp pop add sub xor jecxz xchg mov rcrl push adc jo and shl in jg lods push xor adc (bad) fsts adc dec push stos rcl fildl int3 out inc add loop lea sbb lods mov pop daa jnp pop mov jae mov and xchg insl cmp add push adc clc inc test push dec add imul shll sbb mov sub push mov clc popf mov cmc dec in add mov out jl xor sub jo arpl inc mov dec add jl adc add movsl mov rorb fiadd sti and inc push adc iret mov add jecxz enter pop gs pop xchg sbb dec arpl pop imul or xor mov cmp add or negb je pop daa add adc push add mov sub and or out or xor cmp fild xchg movq sub xchg mov mov and push push mov and push stos xchg sub xor xchg jp and inc mov loopne cmp jnp pop xorb mov ret cld sbb mov lods pop mov pop js call adc push ja inc sarb int3 push push inc jne gs xchg mov arpl jnp xchg ds call push dec inc pop add popa dec inc add xor andb iret test sub lock mov lea xor mov aas mov rolb in int3 cmc out adcb aaa and dec inc and add adc inc inc mov cltd mov loope lods and popa mov enter jg mov inc xor mov jg adc or stc adc and (bad) cld rolb or add pop xor std fs sbb mov addb test dec enter mov inc mov dec test and (bad) lock adc popa (bad) cld or and or xchg cmp fucomp or lahf sub sub cld sbb xor mov dec add mov mov pop cmp push mov jl ds or loop sub fidiv mov hlt add test sbb (bad) or (bad) movsl xchg and loopne and cs rclb cmp pusha mov mov sbb and adc xor rcrl sbb scas lods xor cmp and dec pusha xor sub lret inc cltd popa pop test pop pop add push add pop mov imul cmp jno push mov cmc ret (bad) cmp jbe xor loopne pop addl cmp jns clc test jo push mov mov xor (bad) push or cmp cmp add loope sub inc ret lret aaa or mov pusha push pop inc cmp (bad) in add xchg das cmp inc in sbb push aas push xor adc jp fcompl mov add xlat push push adc or jno fmuls push js stc pop addr16 pop sub mov dec aam adc add fild and mov call sbb and push rcrb ret pop or stos sub (bad) cmp cmp xchg push pop mov (bad) cmpl push sbb pop push lods repnz cli sbb loopne or js mov or (bad) adc insb or sahf loopne sbb cmp add ljmp arpl mov mov (bad) mov dec pushf xchg es movsb mov add add dec cmp sub (bad) adc add (bad) fcoms pop (bad) shlb (bad) adc mov xor pusha arpl (bad) push enter sub pusha clc (bad) lds ss pusha mov xor add sbb or pop icebp add and adc mov enter lods pop dec push pop push int3 sub sub mov jo mov fmull adcl in sub (bad) sarb adc pop mov loopew add inc jno sub sub adc pop xor xor jae inc add enter cmp adc sub imul nop mov cli dec clc aad mov xor jb rcrl cmp out adc fistpll loopne,pn faddl dec stos dec das loop out (bad) inc pop pop roll cltd mov push push jmp xor dec ror cmp adc push negl xor xor rorl and loopne lahf push jno icebp mov xchg push inc insb clc pop sub rcrb sub pop gs xor xor jg dec push adc je loope cmpsb icebp jbe stc ds sbb loopne jno push xchg or xchg mov and push addr16 pop (bad) and ret stos in gs enter mov sub cmp mov mov dec jb call call rclb pop xor and or add add inc movl cmp push ret out add and xchg lret add imull int3 or (bad) jns fcompl or pusha push cltd sbb nop push notl or cli or add push mov pushw mov mov test push pop dec jae dec fmul and add (bad) fwait xchg pop in rcrl stos mov pushf test push xor xchg sub je adc cmp loopne icebp lret cmovs xchg mov add cmp cmp std xchg inc leave and and mov gs pop or in add lds jmp es imul inc adc lock adc dec push jo (bad) jg lods push pop xchg add and ret mov mov sbb clc pusha xor sub or data16 mov jae sbb xor aam jge sbb in pop dec cli cmp fwait dec add (bad) sbb fs adc dec xor and scas loopne inc cltd dec inc stos ret cmp adc sbb xchg add in and push cmp xor mov dec cmp push outsl gs push mov mov fidivr hlt xchg mov cs je mov sub or cld pop pop and inc rorl leave add pusha mov jo (bad) std rcrb pusha dec gs add arpl mov add mov adc test inc sbb jo sub inc cmp mov mov xor (bad) cmc mov adc jmp les mov das loopne stc fdiv (bad) mov xchg jl sbb or mov test mov pop cmp fildl dec std hlt add enter inc dec or sub jb fimull outsl add jg loopne (bad) xor push xor in push xchg xchg test add sub pop out in inc lods adc or inc or or mov xchg nop (bad) mov adc dec pop sbb xchg lock adc sub mov push mov in xchg fistl push sub pushf clc jge add stos in ret push movsb lds mov mov add mov aam pop jl xchg push in std add and sbb mov add lret xchg push lret add lds push pop lea add sub pop add sub xchg adc mov ds les mov inc enter add adc jns sub sub ljmp rcrl pop add jp push fildll pusha arpl mov push cmp sbb xorb leave bound lods dec mov mov cmp pop sub jbe pop sbbl add pop bound xor and pop add dec mov mov adc loopne test add mov into movsb shr jge loopne pop lods decl lret cmp (bad) imul in mov lahf test addr16 stc ds mov or repnz push sub sbbb cltd add aam mov adc dec inc mov xor rolb (bad) mov jecxz fidivrl sub add ret seta mov pop fnstsw push mov or inc push mov std cmp xor (bad) and add jbe jge mov add test cmpsb arpl mov call pop movsl call call xchg adc js fadds (bad) lock add ja mov cmp mov xchg iret les std jl xchg mov int3 add xchg cwtl or jmp adc movsb call pop jb push xor add cmp xsavec fs int pop pop xchg int3 imul or fcoms lea clc push (bad) add test mov push mov and nop sub test mov adc ret adc insl push xor jl outsl std popa pushf out xchg clc add repnz imul enter push push pop add sbb mov dec pop inc adc nop and imul cmp insl or add cwtl (bad) aas dec shrb add dec mov lcall add in fmuls dec aaa cmpsl lods and push add jno jg clc push stc xor push xchg call movsb popa (bad) adc mov dec nop pop pushf inc mov jb inc xchg mov xor addl test in imul int3 insl and outsb push dec arpl jo int3 fwait test ficom imul bnd lret mov sbb and push push or enter mov push sti rorl adc nop lret js inc adc movsb and jge add lcall cmpsb push push adc (bad) scas in mov add ljmp js add jle dec popa mov and xor in jno pop nop mov pop add dec (bad) imulb xorb shrl and in add jmp adc and pop xchg pop mov jge sbb in sti cltd jecxz cli cmc pusha cmp xchg xor sysenter fwait mov and shrl cmp adc lahf fwait (bad) dec add or mov sbbb lahf jnp clc out scas pusha and xor pop inc pop (bad) sti adc adc sbb inc inc bound movsb test or xchg cli and inc push loopne and (bad) push push xor (bad) adc shlb (bad) fist daa cmc cli in xor ror push adc sbb or cmp lcall fmuls add jle lret (bad) add sub xor repnz xor jp lcall test xor jo fdivrs push stc mov jnp pop lock sub daa je,pt mov ja (bad) mov movsb cmp dec inc mov ljmp pop cltd adc icebp es shrb fldl push int3 mov ret andl sbb fchs rorb dec (bad) out in add imul add mov outsl push or (bad) sarb jo es es mov aam imul repz mov arpl adcb test push add xor jmp fldl (bad) push and ss mov addr16 mov add repz jnp xchg xchg xor std sbb mov js adc pusha sbb inc sbb je pop rorb adc not fiaddl clc in xor loop aas inc dec lods shr pop js jb js rol adc sbb lods cmp and xor mov ljmp pop mov sub jae jno orb mov ret cmp jbe iret push cld sbbl stc andl mov cltd lock lea and xchg jo inc (bad) cmpps jne sbbb in sub add inc in sbb shll repz inc dec lods or dec or in push icebp and cmpb cmp loopne inc icebp xor jg movsl int3 mov in add fs stos push lock mov rcrb sahf lods (bad) fdivs dec fmull dec adc or sbb add push xchg sub and sti sbb inc sub in jl movb cmp jl sbb test out push sbbb add mov sahf pop cmp adc addr16 pusha push jnp push mov dec incl add notl push js stos (bad) cmp mov push iret or or xor add jne inc pop test mov xor xor sbb pop pushf (bad) (bad) xchg xchg orl add aam (bad) mov iret adcl or into xchg pop mov xor addb pop in ljmp or push cmp pop lret and je sbb adc (bad) sub inc and mov inc cmp dec lock int3 pop adc jg add xchg shrl loopne cmpsl jp or js subb mov mov in sahf cmp sbb mov add test test add pusha aas outsb ret pop xchg or or push inc mov cwtl clc shll test adc dec imul mov sahf and mov xchg and (bad) cmp int3 cmp and mov mov and xchg (bad) rclb or bsf jecxz sbb push or cli repz mov or clc sahf sbb enter pop sbb sub xor js add sbb push sti ss cmp lea xor leave mov mov mov mov inc lahf jae inc in mov cmp movsb je jecxz mov dec jns push lock mov xchg mov add into mov or mov in sbb push shlb ljmp add adc xor sub loopne mov je add jp adc adc xor cltd add cmpsb jge inc adc (bad) sub (bad) adc jo add stc sub test push lods jg add repnz jno cs call nop add pop push rolb js and sti loopne mov or xor js cltd cld adc or enter pop adc add add cmp dec (bad) xor call int or in or aam mov scas jge push out xchg add fwait popf adc cmpsb cwtl int3 sub dec andb or mov sbb sbb ja ss pop adc sub and or mov sbb pop fchs or faddl lods (bad) call adc loop jge xchg adc iret test sbb sub fisttpll and cmp or adc nop dec inc push pop and mov cmc loop aaa mov insb out subb inc jno push jl sarb ds fildl and jo nop dec loopne mov mov test dec or out push ja cmc cmp (bad) adc xchg add and sarl stc mov adc jns xor popa adc je,pn and adc mov call dec ds ficomp je shr mov ss jle cmp and out mov cmp push inc adcb sbb ret pop (bad) rolb jbe and add aas (bad) sarl (bad) jno fdivp and out out cmp adcl cmp test in into add push add sub jnp push dec jo add xchg je sbb subb test xlat and imul mov xchg mov push and popl cmp cmp pop or lock outsb mov xchg sbb adc data16 sahf in sbb dec xor bound and lock je stc js rorb repz sbb lock jl dec std cwtl add jle test out sahf cmp xchg sub or mov negl jns xor nop xor call add dec jl andb mov push cmp ffree (bad) sbb inc xchg jle push add movsb int3 jg mov mov pop add sub sub cmp mov rcrb cmc les (bad) or data16 cs pop js sub test mov add testl dec lea xchg add imul sub push into insl les push rolb inc sbb repnz push (bad) fcomps cmp add daa sbb in add push addb insb dec pop fadds outsl xchg decb dec leave sub push mov xchg sub mov addl (bad) lock add sub mov sbb fldt dec and icebp or movl mov pop lock cmpsl jle add push nop jecxz adc mov or in pop jno inc xor repnz sub insb add cmp push mov adc jo movsl lahf cmp jg shrb mov dec mov mov test ret xchg je pop xchg mov int3 dec sub adcb (bad) jns dec mov xlat sbb and sub cmpsb jns add or (bad) and xor push pop cmovb cmpsb jg mulb xchg push js xchg jle jl out rolb into add pop std push mov jmp mov xchg and xchg and (bad) or jle sahf add adc push fwait or insb cmp add hlt test add pop imul inc cwtl push int lock cli push cld mov outsb fadd mov nop mov add pop push adc lods sub push jb add div xchg mov cmp add (bad) imul push mov int3 aam les mov sub jns add add ret nop jo rolb js jl je dec hlt pusha outsl ljmp movl pop jge push mov sahf ds inc push test dec sub pop test adc xchg inc xorb push mov mov (bad) lock mov mov push lock jl mov je nop loopne fs mov cmp lock inc ficompl and fwait jle add je push add rorl mov push jnp cmp movsl loop lock adc jbe cmp rcrl push xor in push adc insl or dec xchg mov add xchg jae jns push movsl add jbe xchg xchg cmp ds and (bad) lock or add jecxz mov sub (bad) repnz mov popf add and pusha loope jmp mov push leave in xchg ds sets imul or xchg pop jae jno xchg or dec dec mov pop lea and sub pop test mov iret cmp cmp adc insl ds add cwtl int mov sbb insb repz ret add pop pusha inc and sub inc pop add sbb (bad) pop (bad) cmp mov jle inc in add mov cmp jmp jmp mov out shl add inc mov xchg mov rorb xorb sarl (bad) mov les fsubs cli aam cmp jle dec pop fcomps add cmp and xchg adc stc xchg pop scas adcb adc mov orl and or adc push push cmp sbbb adc gs leave scas into sarb fsubrl mov dec cmp aas and jae xchg loopne sbb ret fmuls sbb inc fwait mov adc mul aaa aas loop xchg cmp push out add cwtl dec and pop mov inc (bad) or in add mov inc int aaa cmp rclb fdivs das xor ds mov lock fs andl call icebp fwait mov call cwtl pop push add dec std in je xor xor push enter or jno outsl or andb aad std dec cwtl mov inc scas addr16 out add aaa dec pop push adc dec jge add or je fcomps lcall mov fmull ret dec mov aad lcall cmp sbbb mov sbb fdivrs xchg das imul mov add mov cmp rorl rclb in sbb jo mov push addr16 rorl add or cmp xor add cmc xchg push popa push add sti pushf cld add mov mov nop jp inc mov xorl test sub xor imul and shl je lds sub shl dec and sbb les aad sbb inc push sbb push clc call or jae dec cmp flds inc lret jp mov dec cmpsl push bound jo ss cli rcrb jg dec lock jecxz xchg xor jno push and jb dec daa push jnp pusha (bad) pop add lret mov dec jae xchg mov fistpll cmp cwtl add sbb xchg jo inc jnp mov lods dec add cltd sub ja ds cmp (bad) mov pop test jbe dec pop push cmp sbbb pop mov and push (bad) jns and xor dec xchg cmpsb add pop xchg add push mov adc test int3 clc roll or add jno ja orl sub mov getsec fildl ss lock lcall insl pop out orb mov cmp push cmp add loope or or inc mov mov (bad) out and gs jae inc je lock cmp repnz or das pop cmp add sub and or es pop xor mov push test cmp add subl jl and cmp push mov and jnp add inc adcb ret in arpl movsl sbb add es decl rcpps mov icebp shlb in xchg mov xor lret test jl xor test dec pop fs add lahf jnp ss cltd mov cwtl fsubrs inc (bad) mov mov xchg mov icebp sub lods push mov sbb mov hlt adc or rolb cmp and sbbb push cmp stc push out push stos xchg sbb jmp test sbb mov mov push pusha out popa xchg dec jp sub xchg imul orb (bad) xor in fwait cwtl test cmp jne xor or fsubrs leave cmpsb jne xor lock cld or icebp cmp pusha lahf add roll sarb and sbb cwtl outsl adc jbe jns xor mov sbb sub xorb mov xchg test adc and je push and das push outsl rolb ss pop xchg mov fwait daa sub sub je xor push add imul out daa push inc cwtl pop mov rol repnz imul ret mov push xorb and or mov or and cmp xchg pop cmpl push or dec xchg add xchg xchg mov mov out jo dec xchg add pushf mov push jmp xchg call xchg jle out movsl lock and shlb xor mov mov test scas insb ss icebp jno loopne add rorb cmpsl jbe adc or mov adc jnp dec out rolb mov nop or xchg add das push and xchg add or and push cmp mov and icebp aam or and xchg xor add jne les or and add (bad) push jl pop sub sub or iret xor leave dec call sbb push adc (bad) sub dec or xor outsb inc xchg xor cmpsb xchg cwtl aam pop xor push and lea dec cmp jecxz add mov out mov ret lods add aam push js xchg mov cwtl in adc (bad) ss mov mov mov jnp adc int3 xor jo test repnz sub nop inc mov xchg aad lods cwtl js mov xchg (bad) mov jae ljmp or outsb mov sub cmp sbb insl imul fiaddl mov push xchg xchg je int3 add cmp scas imul pop mov inc xor inc les in cld fsubs test push pop or test pusha rclb fiadd sub and in mov mov sub je push cmpsb ret pop ss into add outsl pop out call mov mov fsts rolb pop lds in dec ss xor jo push pop mov push inc jae push adc (bad) fimull jns adc add adc test imulb outsl lcall adc xchg and mov (bad) (bad) js xor or clc dec dec test dec xor out xchg lods mov sub dec pop call ljmp cmp in xor imul ret (bad) ficompl rolb or imul ss adc fs adc faddl and xchg xor pushf (bad) test cwtl adc inc dec push negl ja cmp mov dec fdivs enter in or sti lea fimull inc or sbb nop faddl inc mov jecxz out mov aaa pop pop cmp xor test je cmp adc clc sub jns movsl add pop xchg aad cmp cmp fs or inc lcall movsl push dec pusha mov popf dec adc push jns adc cli and mov out sub cmp clc mov lahf add (bad) insl imulb (bad) call xchg add hlt xchg jp stos jle sub add sbb jb mov inc mov nop pop add jo out imul js mov stos mov pushf push data16 fs pop mov add jb push jecxz and add adc mov xor inc jbe iret in add lods in imul adc rcll xor mov je adc pop push sbb add adc pop jno cmpsl (bad) jo push mov in pusha sub inc clc mov mov cmp aad mov loope add mov inc push je or jl iret and mov mov mov xor pop push push xchg lret aam adc inc adcb ret addr16 int3 inc (bad) and adc shrl mov imul pop sub inc rcr in add cmc jmp mov (bad) jne enter pop and lds sub ja fmuls add cmp dec mov xor add scas xchg in lock push enter adcb pusha pop mov (bad) in ss adc lds test insl cs es sbb pop jns pop mov and (bad) icebp lock mov int3 add mov push ds cmp sarb xor xchg insl ret jae lahf or push clc jnp mov pop int3 adc add adc pusha iret cwtl les dec mov push call adc test call sbb lea cmpl mov scas add movsl loopne sub icebp cmp and add int pop fsubp mov pop gs (bad) xor enter mov enter push scas hlt push push xor dec or jecxz mov loope push or loop ret sub add xor xchg dec adc aam out nop mov push xor xchg or mov aam in xorl add inc lock and xchg jo fadd iret ss push pop inc and pop repz mov shrb mov or mov dec pop ds and add (bad) and or push xor sti sub dec popf xor icebp pushf jmp or ds (bad) xlat rcll rclb and inc mov out add jno add hlt inc loope addr16 aam clc pusha dec adc cmpsl cwtl aad cld (bad) nop add or loopne or pop js push lcall mov or push sbbb test pop (bad) mov pusha test jns divb arpl or les pop ret bound test adc stos (bad) clc nop push add xor movsb or xchg test movsb or in mov sub cmp xor jl adc inc sub sbb dec pushf or popa outsb add js add dec dec jo and iret pop dec ds push jge fild movsl add add add jo movsb inc inc xchg lcall mov and loope mov in rcr je je add lods fistp sub sbb movsb sbb bound out ds mov aad sbb fistpll inc ja or in mov popa or stc jns adc scas in fist jl jl push cmp add xor pop or and jae mov ds sbb das stos add dec cmp lds shll data16 sbb or xchg addl (bad) or cltd mov add sub sbb pop push and pusha sbb pop dec dec sub jb jbe jmp inc push mov add (bad) dec fstps rclb xor stc sbb mov aad movsb je adc and (bad) lea jle jmp inc push xchg mov or and jne daa addl sti jbe inc xchg arpl push cltd sbb adc add cmp xor je jne mov lret pusha insl or rolb add inc nop add scas insl sbb jmp in adc out sub inc in stos or insb ret inc push xor popa jp or mov dec pusha popf punpcklbw rcr pop jmp mov mov mov lcall mov xorb dec aam fisttpll jl jp dec shlb add cmp mov add insl js lods psubw outsl mov in out adc sub rcl pop movsb xor or push das adcl out adc mov inc inc icebp lods lahf enter in cmc icebp xchg fnstcw add jecxz sub jmp add dec adc sub push call or pushf xchg mov mov out or inc xchg inc arpl or mov andb lock jb or add inc scas sbb popf xchg shlb pop dec push insl adc xchg push sub inc cmp add pop es fnstsw add cmp pop inc mov mov popa js ret add fs dec rcrl push aas mov popa int3 popa (bad) ja xor push pop int sbb cmp addr16 push xorl aad shlb nop xchg in lret push mov inc out sub or popa sbb and push in pop jle (bad) adc pop add mov xor rcr movsl into arpl subb pop push aad (bad) adc fimull scas cs dec adc add inc rcrb les mov xlat stos cltd pop out xor cmp aam push cmp and das addb dec jbe shlb lahf add ljmp mov xor in loop orb xchg jecxz std pop mov add mov stos mov cld js lcall cmp inc add inc decb push fiadd nop fcoms xchg test mov cmp insb mov and or ffree cmp rclb sub sbb sub mov mov adcb inc mov dec divl push or and call out mov fcoml (bad) mov sbb and out js inc push mov pop lods adc sub dec les xchg loopne add stos xor out rcrb jb inc fldl cwtl add and mov jecxz or fcoml ds icebp mov ja daa add push dec dec xor popa call outsl aas inc xchg rcrl stc mov popa xchg mov add mov iret pop push fistl inc cmpsl loop movsb rorl jns test clc fldcw mov lcall jno pop dec sub out test cmp imul loop add in mov add out out inc or leave and paddsw jo xchg or stos pop or cmpsl sub in dec push cmp xlat or sbb adc push loopne or in add stos aaa test push jp cwtl out inc push mulb sahf sbb or mov incl mov xchg aad sub mov mov mov loopne insl loopne repz fcomps adc mov roll enter (bad) cmc sbb divb dec or popa jecxz and or popf pop clc (bad) je stos dec popa push mov dec mov in hlt bound pushl mov (bad) popf add repnz jp push cmc dec pop push and addl push and imul push and add fstpt in mov add mov sub or xchg adc (bad) jo mov fwait push mov and incl lods pop ja jno add idivl mov xlat mov popf loop les ror sub lds and ror and imul fs xlat lock iret and xor push les in xchg sbb xor mov sbbb (bad) push push in jb aad and imul lods adc and sbbb inc rcrb dec push in adc mov pusha fdivl test add xchg out or adc pop xchg fstpl jg pusha call mov repnz add cmp test mov loopne vmwrite outsl and imul je ja xor inc lock insl sub popa mov mov sub inc push lea into push and call (bad) mov add loop inc adc test scas and out xchg add pop mov jae mov jo repz es add js add addr16 fcoms jo imul add jae cmp dec add push xor in inc xor sbbl in add std dec add repz or pusha lahf and add ffreep mov cwtl adc jge add cmp dec sub pushf and popf xor hlt jae jo test mov dec or or inc imul in addl lock jmp mov mov das icebp xchg fistpl and scas mov ds clc mov rcrb jmp add mov call outsl pop sbb stos sub in mov out and jp das inc pop hlt sbb xchg sub leave mov out dec sti xor mov pusha outsb lods sub ret hlt mov pop test mov add jle fcoms loope popf xchg pop sbb push mov jl call push mov adcl mov in sub jge xor sbb out push pushf sbb andb clc mov (bad) mov mov outsl inc cwtl jmp cmc add shrb mov ljmp inc rclb pusha (bad) push or arpl adc pusha cmp push test and jmp push inc bound adc mov outsb subl add or out nop jo icebp dec les mov pop add jecxz mov and pop and jle clc stos je test inc dec add jp cltd int movsl mov add stos mov jp xor rcl and mov mov bound jmp sbb scas and push movsb add loop xor notl inc sbb jmp push push movsb aam inc xor jl jg or out xchg adc pusha cmpb fadds pop (bad) cld stos jae add jo imul (bad) xor add xor push xor push and scas or out ret mov js sbb inc in repz push movsb iret sbb cmp add scas push lods add rcrw repnz fsubs push dec shrb icebp lock adc push fildl (bad) add sbb dec test add out and sub jl xor and dec and mov xchg add je stos add nop inc stos push add movsl mov pop add scas (bad) jbe pop daa push sbb test addr16 addb and cmpsb push es mov aas jns xor nop dec fnstcw jp cwtl xor cld and push dec rcll lret fisttpll xchg sub lods stos (bad) fadds or popf push adc or (bad) ja sbb pusha dec jle mov jno inc cwtl pop sbb movhlps int3 inc mov jb adc mov jno dec jne inc std jle xchg jecxz jno sbb call jne cmp rcrb sbb xor (bad) ja sbb sbb cmp paddq pop or mov sub dec or jo and lock pop mul fsubs and movsb ret xor sub fdivr mov xchg fisttp in pop xchg xchg dec lret test jg sub xor nop ficomp std aad dec cbtw cmp sbb divb loop scas pusha andb push push popf hlt inc cwtl or push outsl data16 dec sarb jmp rcrb xlat (bad) cwtl sub loop roll lret push add out in leave mov stc ljmp adc scas push hlt out fnsave dec arpl ja xor inc cwtl test push pop push add inc jns xchg jle test xor aam in dec mov pop add or push cmp push inc inc add mov or adcl loopne mov xlat arpl mov dec inc repnz pusha jl ss (bad) jns mov pop mov (bad) insb clc inc or repnz jmp xchg (bad) sbb rorb stc push mov push jp cmp inc and push fmull pushf in loopne lcall out es adcb xchg ljmp into outsl xchg mov (bad) in stos dec xor jo jl or shl mov les sar add popa dec insb sbb loopne clc jne iret sbb jmp cmp in pop or mov idiv cmp (bad) mov loopne mov mov or add out cmp roll hlt lods fist and xchg addr16 imul push mov hlt out loopne jne hlt mov cwtl mov arpl adc std lds sub and push xchg dec pop iret loope or lock or pop lods sub mov or ds and adc sub fnstsw pop and lock clc or inc andb pop mov in sti mov lret push push and fdivrl sbb xor xor push cwtl mov sub stos pop bound nop pop (bad) ret add push push mov flds outsb sub dec je rolb lret lods test jl push cwtl out xchg icebp and pop cmp in pop push or or jg push mov and sahf call sub clc lods cld dec pusha mov gs mov or test ret cmp mov sbb mov les rclb leave pushf lret or mov push cmp and jg ret pop mov sub rolb xchg cwtl adc loope mov inc clc jge cmp mov sub rcr ret cwtl sbb addb nop inc adc and movsl leave sbb sub mov mov imul jg push push adc adc js out (bad) in add mov test mov push lret cltd idivb sahf incb jae add sbb and pop cld pop inc and call or adc xchg push mov sbb addr16 dec (bad) xor sbb adc lret inc subl add xorb movsb push push movsb or outsb mov adc xor xchg fs ret pop or and mulb and mov or lret add xor dec icebp std push bound andl scas or and adc sarb jo fs and aaa mov mov pop addb add ret fild xchg int3 xchg shlb push test pop (bad) das cmpsb imul into orl scas sbb pop test out xorl addr16 mov call inc je sub push inc push mov adc mov cwtl mov mov push rol clc and insl add cmp incb push lods cmc (bad) mov inc popl sti rcll sbb fsubrs mov or ja xchg jb mov sub (bad) mov xorl lock into sbb test and mov popa mov push cld adc dec ret nop movsl mov lods and stc push cli mov movl test push add dec fs cmp xor insl addr16 sti loope (bad) (bad) sub (bad) jmp sub dec fnstcw or and cld adc cmc rcll stos mov adc mov xor or or pusha mov fcmovne inc stos inc mov push jae adc pop and and cmp adc icebp test xchg pushf pop xchg setle cmc addl add mov mov pop mov nop adc and fstpt push rclb add mov mov or bnd mov inc hlt add mov pop xchg (bad) test sbb push adcl adc pop push inc lock pop pusha mov pop out push add lds movb adc ljmp mov jp push push test inc ds (bad) loop and aad or add push inc iret movq rorl mov clc (bad) and and pop hlt in adc jle and out cs jne fisttp inc dec bound push and imul xchg clc push psadbw or mov jl adc push xchg mov pop lcall jb xchg cmp push sbb and mov xor or addb jmp dec data16 cltd inc pop adc stos je sub pusha lods xor and adc movsl sti inc adc les or jmp sbb lea jae mov shll jl rcrb loop rcl mov ds jae xor movsb test orl es imul mov andb pusha mov test into pop and add andl pop add scas xchg cmp loope add movsl or pop aaa (bad) sub pop inc ds add mov or test jge loope in sbb pop test push or addr16 cmp mov inc cmp aas pop dec add mov add mov mov (bad) leave jmp jg pop or mov and clc jbe shrb jp out dec pusha add outsb pop add scas sbb and or clc fcomps and loope call push pop fldt shlb xor xchg and jge faddl push clc loop test mov or xchg jl add sbb addr16 enter add xchg ljmp pop add jne push push pop or push roll icebp stos xchg inc jmp mov cmp lods sbb xchg test fsubs jbe dec lods adc fs cmp and inc add scas push cs call addr16 (bad) movsb inc hlt xor sbb lds outsl ljmp imul dec ret adc jns push fcompl push scas int3 or jge add (bad) add lods or xor sbb adc add xorb inc mov sbb dec fadds add in inc add sub outsl jge pop loopne ja or out subl mov fnstenv sbb and xchg add adc aam sbb sbb leave icebp jl imulb (bad) jmp popa sub pusha push cmp xor test cmp inc adcb std call add arpl enter adc sub fisttp in sbb (bad) add add fmull dec int add mov cmp rolb hlt add xchg adc cmp cmp mov add cmp es jge xchg push xor in adc and jecxz sub ja mov push inc test pop add xor std mov jg mov sti cs add add add sub in sbb das int test andl subl add fsubl fimul cmp inc jnp (bad) fcmovnb (bad) cld fnstsw jecxz sbb mov cmp leave mov and sub or les std aad push rorb sub sbb push sub fsubs andl xchg sub arpl or sbb mov pop and scas hlt imul nopl repz cmp fwait xor mov sub lea std adcb std out mov cs and wrmsr daa push das dec fimull orb movsb je sahf push jnp call mov fwait xchg (bad) add pop shrb cmpsb jle adc icebp in xor cli and add push and fisubl test add mov inc add push inc sbb pop add loope add adc inc mov and pushf test or jecxz cmp jbe enter lea ss jge ret pop fisubl pushf roll insb cmp fstpl add (bad) xor (bad) sub imul test roll fnstcw loopne std xor sbb and subl mulb jl loopne shrd or push adc and jp adc out push js outsl mov sti flds fcompl hlt aam mov add and add or mov test enter fdivrs mov or fwait cmc icebp and and iret adc cmp loope mov inc mov pushl jo and mov pop aas es inc dec enter and adc jo lret add push push fs dec xor pop adc or xor insb sub mov pusha jno sub rorl cmp insb int3 loop pop add xchg daa pop sbb popa add or into mov cs cmpsb test fiaddl mov in xor xor xor add pop je xchg add cld bnd dec inc push push jecxz fdivrl mov incl lods adc jmp enter shr js hlt jl mov xchg insb mov pop sub jg add icebp inc xor rclb jge adc nop pop loopne sub push faddl inc addb ljmp insb xchg int3 xor cmp mov push pop mov arpl movsb aad loope dec and (bad) xor dec xchg insb mov enter cmp xchg inc ret mov mov enter (bad) jne jae ljmp xchg ret mov mov outsl stos (bad) cmc and add push xchg rcl add inc movsb mov cwtl adc xchg ret clc insb cmpsb mov mov fcoml push lods dec cld xor cmpsb in jo add xor insb sub push repnz mov sbb js add dec or cmp mov pop cmp (bad) cld sbbb sbb cmp mov pop add jle xchg add loope push out nop or sbb adc int3 loopne hlt cmp mov jae (bad) mov sbbb dec or imul push cmc pop adc inc add cmp or les arpl lahf mov aaa cmp pop and xchg rcrl mov cmpsl sbb or mov cld loopne and lcall xor cwtl sub and aaa cltd cld add mov clc xor lahf ret scas ljmp pop xchg pop and std mov mov pop sbb orl cs mov je lcall sbb jge repnz jg and sub dec out outsb loopne bound fs cmp pop inc dec fidivl subl test cmp (bad) sub add rcr add js mov mov adc inc xchg sub add (bad) and insb add jb sbb lds fidivrl pop cmp jge mov pop pusha add fs push in cmp xor (bad) add rcr ljmp adc xchg xor cmp pop xor pop sub jecxz xor push nop aam sbbb xchg xor hlt sub bound cmc movsb adc mov add xor sahf iret imul xlat jl cmp (bad) pusha pop frstor nop cwtl sub jmp addr16 js and xor push cld or add jno fisubrl cmp xchg adc es jae mov inc add pusha les test movaps add push xchg fsubs add cmp roll xchg stos jnp add dec lds fstps sar repz in pop ja,pt dec xchg sbb es in pushf inc (bad) and mov fdivrs in adc sub sub into andb cmpsl pop or and or in and adc (bad) imul dec mov dec add push test loop or je adc dec sub data16 sub aaa mov mov and fcmovnbe addb insb andl jo aas cmpsl cwtl add ljmp cmp (bad) leave inc jecxz jns (bad) loop pop out or xor mov rclb pusha pusha (bad) mov sub fxam cmp test out add add sahf repnz jns jl add pop and cmp dec sub adc fldcw outsl cli sbb mov push adc xor icebp hlt mov sbb icebp inc push xor and jno addb xchg adc ficompl add shlb add jo loope cmpb rclb dec and pop js ret stc dec fcmovnb add fistpll or sarb rcrl aam nop sbb inc loopne jg push dec shrb xor and push or cwtl cmp roll xchg data16 and add and mov jne pop push (bad) jmp add mov test nop mov push adc into jle rcl sar pop sub loope and inc popf mov jo loopne lock aaa rcll or je dec add sarl cmp scas inc pop cwtl popf cmc sub mov push lret cmpsb (bad) cmp decl enter adc sbb pause pusha xor scas mov daa push cli ficom inc dec int fdivs in int3 pop add sub cld inc mov insb lret or mov pop cmp mov lds mov divb rorl adc push insl sbb shrl lock test cwtl popa push xor mov mov rcrl jge or xor inc or pop (bad) push loope add imul dec or je cmp sahf jmp mov xchg pop push and fcom push push push rclb mov sbb cmp push lds into inc nop xchg dec or add aam or (bad) hlt (bad) sbb mov sbb in mov pop jo mov shl mov aaa and and inc test cmp xchg addb mov and jle jp mov or fidivl sub orb cmp inc lahf mov xchg bound repz dec and bound adc shrl repnz pop stc cltd mov add out and repnz or mov cmpsb ss or out hlt adc out and in test dec sbb mov imul sbb out or in js add (bad) jp sbb xor mov xchg iret inc sub push insb jp je xchg push sbb rep push jo xor ret dec inc mov mov sbb mov xchg fimul pop leave jmp mov and pushf dec cwtl xchg xchg mov push mov mov lock jo movsb inc addb jle sbb xor xchg pop and sub cs or pushf and pop pusha je mov xchg nop add push jg lds xor rcrb jecxz inc (bad) clc cmp rclb xchg rorb xchg sub add mov rclb or mov les sbb inc sbb mov mov sub out mov or cld dec (bad) shr add mov fwait push add dec push mov adc fwait xchg and subl movsl jl inc adc or mov leave xchg add (bad) shrl inc sarb cmp or out mov inc (bad) sbb pusha jl adc (bad) mov fmuls add fild test add add inc add cmc dec sub enter or shlb loope lods mov add loopne adc add jecxz and leave xchg jl xchg (bad) xlat and (bad) push fsubs pop and push nop aam in lock inc xor inc pop scas xchg and push adc push stos add and hlt pop jmp testb push lea mov sbb (bad) push aad push pop orl jmp mov pop enter andb icebp (bad) call (bad) imul clc mov outsb mov repz inc inc xchg mov fmul sub add inc fidivrl popa pop test out std fcomp xchg stc inc and (bad) mov inc push add sbb xchg dec movsb xchg sbb push jno test jnp lahf sub sbb sahf jg xchg lods add mov or inc push les mov push mov add mov loopne fcoms xorl pop pop loopne int scas arpl pusha jle and cmp xor adc les in xor (bad) cmc mov movsb cmp pusha int3 jl in cmc incl inc mov add and xchg in in or jo sub into movsb mov loopne sbb and mov nop hlt jne nop subb sbb and addb pusha popl mov add fwait mov mov add aam pusha repnz test and loope pop pop lea popl jnp cwtl pop faddl dec push icebp lods in sbb and rcrl cs and push cmpsb jmp mov and lahf rorb icebp test iret xchg call push pop insl scas xorps add les lds or inc in add (bad) imul dec lret dec mov cs jae pop sub mov push add fsubs cld (bad) loopne shr and (bad) clc mov mov mov repz and inc or mov popf (bad) sbb loopne push and pushf icebp inc push enter or mov dec add and leave and pop add mov (bad) inc dec mov xchg ret imul mov xchg add movsb and dec adc and dec add inc rcll jle clc test pop andl nop loop jl jno fcomp jne lods xchg cmp sbb mov jo nop add cwtl test pop stc daa jno pop mov aam outsl jne or add loop adc lods push adc add mov adc push jg aam xor add xor jnp lea dec or icebp addb mov (bad) cli mov mov shlb pop jge inc xor stos push xor push and out adc pop pop sub popa (bad) xor scas clc mov pop mov adc inc push outsl call in fwait or icebp push mov (bad) mov sbb pop inc cmpsb mov dec andb in ljmp enter mov sbb rolb insb imul imul out push (bad) inc sub inc rcll dec xchg and int3 dec addl (bad) enter bound inc rolb lock jl or (bad) mov aaa fimul insb jmp (bad) (bad) jae test je imul xor int3 (bad) dec call je (bad) push or pop icebp pop inc popa ss mov sbb (bad) movsb mov je xorb cs repnz inc sbb xchg cmp dec lods jmp adc push iret or mov xchg clc cmp add out add add or mov icebp and dec or dec cmp out or mov xor subl add jns clc iret add out mov cwtl into dec dec or (bad) and dec inc cltd loop js std pop (bad) pop movsb adc nop inc jo les push adc or mov mov inc imul insb push mov adc adc test nop lods or test jb dec mov sub fisubl repnz add aam inc jo or or imul mov test addb add movsl enter imul sbb sub jne mov fwait cwtl push imul iretw inc outsb loopne inc jns pusha cmp mov lods pop ds repz inc push movsl out jp add imul adc (bad) mov sub das roll cmp outsb adc stc push xchg hlt add or add sbb into cwtl and inc rorl xor repnz aad sbbb and fcmovu mov loop mov cmpsb dec into sarb fwait popa inc sbb xor iret or or scas inc imul shrd pop or jnp or je into xor cmc push xor sbb add bound mov cld add lock xor fbld lods aam fnstsw (bad) add sti lcall add sub add mov andb and pop inc rclb dec ret xchg std iret jns add and je mov cwtl add roll adc stos into or iret inc mov push (bad) hlt popf clc lea cmp cmp add mov scas lret pusha cwtl out inc daa or dec sub (bad) cltd mov add jmp xor out cmpsl loopne pop mov sbb je test inc or dec and add jbe inc add fidiv dec mov scas notb repnz ret in ds out cmp iret dec xchg pushf xchg mov fist lock add lret or jb push stos cwtl and cmp inc mov sbb push push mov dec dec js rorb ja hlt or add in sbb subl mov mov xor (bad) or (bad) adc add call sti clc push mov (bad) sbb lret aam das xchg aas lods cwtl icebp movsl push add ror push jle sub mov add dec bound xchg jge push and roll mov xor jo in adc xchg sub sub xor and (bad) jno sbb inc sti and inc xchg rolb lds adc or es push dec in sbb pop and ss adc mov cwtl enter int3 push aad mov mov inc jo aam icebp in stos xor adc mov sbb adc mov rolb ja imul add dec add xchg or inc shlb scas pop inc in clc sbb add inc cmpsb out (bad) iret rcll adc and sub mov add mov test sub pop out xor out cmp int3 mov jbe shr mov inc add inc (bad) insl pop mov in rorb jl xor loope test ret or sti dec jo xor fstpl add lahf inc mov push jbe addl or or or je mov pushf dec pop or repz add xor push arpl dec and cmp pop adc (bad) (bad) cmpsl push inc nop mov push fs add iret (bad) pusha or mov aam or clc mov (bad) mov add out clc inc add sub mov and je out and rolb push or pop mov sbb rcll clc push pop sub pusha in adc pop shlb add mov xchg push add push out pop xchg jo ds mov mov (bad) ret push xchg adc lods test push sbb aas call mov cmpsb idivl sbb cmp in xchg pop test cmc nop xor lds mov jo or int3 pop movsl movb xchg (bad) mov adc pop daa insb fwait xor cld add je xchg inc add mov or push add push stos repnz mov aaa xor or xchg lahf pusha mov mulb jp push out dec rol jmp icebp mov mov (bad) call out mov or roll xor ljmp inc int3 std or out arpl sbb add xchg adc mov adc pop sbb pop mov call and add or icebp mov and in and mov subl and xor push stos or (bad) daa scas int3 data16 pop enter add lock mov out xor xorb push iret pop cld nop inc add fld pop xor mov daa nop inc nop lea cmp rol xor in mov push cmpxchg xor xor add out pushf into int3 mov jo add jnp ret ret popfw mov sahf rcrb ret je lds lds and lods pop fadd jo cli add mov test out xchg pop call fadds ja or xor dec cmp pop or mov xchg push aam jecxz rorl (bad) icebp popf out xor ljmp push lahf jne pop xchg cmpsl je call jnp mov adc jecxz rolb in loope mov xchg popf ret and pop aad inc sbb xor jnp and movsl inc add adcb xchg aas push xchg loope rolb dec mov mov (bad) iret in add inc pop lods cli pop aam add jge in shl inc cmpsl enter push or mov repnz add aad mov sub std rorb pop lea in mov mov imul (bad) and aam push clc sub adc cld dec or jnp mov mov out (bad) xor nop add addl inc mov hlt or sbb jecxz out test fdivrl pop add lods shlb or mov add and sbb dec xchg xchg cmp popa (bad) inc sbb mov cli enter loopne or ret subb mov cmp add sbb sarl out adc fcompl das addl push xor xchg loope push loopne in or out cmpsb shll xlat inc xor shlb and jbe into arpl xchg pop loope lsl fisub cmp add jnp add cwtl add and lret push or and std add cmp mov test sbbl adc mov cwtl aad xchg jae adc sub jbe fiaddl sbb and sub xor jg or (bad) test xlat into mov push sub lea inc mov xchg pop int3 and pop sub add inc repz out (bad) mov ret jne cmp pop rorl jecxz enter arpl (bad) setge punpckldq jp rorb dec in shl lret je cmpsb adc loop ljmp (bad) cmp mov and stos or inc out jmp (bad) sbb aam sahf pop fstl test mov mov les mov iret dec sti call lret adc addb xchg pop dec sub or add cmpsl adc xor inc jmp xchg add pand add jne mov loop jge sahf mov add inc addr16 mov inc pusha mov fwait les fmull xchg lret loope leave in movsb xor pop mov aad mov lretw roll inc loop and push xchg cmp repnz dec pop hlt sub cmp inc xor jo adc xor adc enter inc aas add jg notl (bad) sbb add mov push dec pop fdivrs std xor or push out jecxz cld cmp or je and stos pop out sbb js shl testl mov adc mov xchg dec add inc pop mov inc push pop add int xchg lods sub vpaddsb jp mov adc int3 popf rolb inc js adc cwtl cld add jnp mov or mov add add jae mov cmp lods lret nop fdivs pop cmp icebp sbb push add xchg push js push es test push (bad) jecxz rcrl jg or and add shlb in xorb sub sbb cltd add xchg adc push xchg sbb xor mov lock and xor dec cmc (bad) and xor data16 aad flds fidivr adc push pushf or pop es sti fisttpll test push rolb in fcoms add imul mov sub cmp rorb insl sbb cltd aaa int3 and insb mov test enter fwait out pop ds pop ror adcb sub xor adc sub addr16 inc mov jmp mov call adc and dec stos cmp adc mov pusha iret push mov movsb hlt loope cmp inc dec pop jecxz stos sbb sbb and jmp fsubrp and or add dec mov add aas mov push and inc jo lret cmpsl cltd inc ret xor imul mov xchg jl cwtl cwtl jne stos divl mov das (bad) aaa pop mov in cmp mov dec repz cli nop jo pop test mov dec and int3 cmp sbbl lock dec adc add mov fmull loopne addr16 cmpsl push sbb push ds imul pusha jle cmp mov mov test push or adc add stos jecxz sbb gs lret jo add ror faddl or pop incb sub das jbe icebp pusha sbb pop icebp dec insl add mov jbe,pn mov jecxz dec shrb sub dec dec mov jno inc js sti push sub cmp or pop adc shrl mov loopne inc cmp mov aam icebp mov pop dec leave and ret fsubl std sbb jo pop (bad) call xor stos lock mov cmp jnp fs insb mov and std test xor cld pusha pop xchg jno scas xchg mov out js lret (bad) xchg fcomps xor pusha in cs cmp sbb push bound inc fprem1 lods rclb push movsl push in int jecxz sbb and sbb mov lret sbb xor fldenv mov sar daa sti dec js add xchg sahf into (bad) dec add repz daa mov mov mov js add xor cmp pop into cmpsb jge push jg orl and xlat xchg into and and push sbb adc add insl inc adc sub mov mov cmp and (bad) sahf lahf bts loopne dec fldt sbb push xchg cmp fs push push dec push lea add mov cmp pop cltd fisttpll dec or arpl xchg and aad lcall xorl add insl push movsb lcall xchg int3 ja jae test mov std mov jo (bad) mov jae xchg cmp or popf ja cmp inc test mov jl pop out mov testb cmp mov dec invd inc mov std popf mov pop imul test jno shl sarb jp and loop je daa outsb xchg (bad) clc jecxz es add xchg cmp inc adc rol in gs (bad) rorb mov sub loop and xor mov pop stos inc cmpsl repnz jecxz test adc add lret loop lahf push int3 fstps icebp or inc popa xchg dec pop repz xlat lods adc ficoml inc ds icebp add jbe popf data16 sub das mov jbe or rolb ja add or add pop lahf sbb pop add pop jbe xchg bswap xchg mov pop icebp lods outsl ja andb repnz sbb outsb fstpt je iret popa and ficom sub xor ds inc push scas xchg pop and or stos or inc out icebp or sub mov sbb out sub dec pop mov add cmp aam bound dec dec or clc ljmp cld fstpl hlt or xchg fidiv xor stos mov and add mov jno repnz pushf mov pusha adc add iret jb jle icebp or dec sbb dec ljmp pusha mov jns and mov add adc loop cli stos add xchg mov aam cmp into sbb push xchg mov mov jge ljmp imull xorl or mov push (bad) in ljmp or inc stos add lods jmp adc cmp jns xchg rorl testb push ljmp sub in cltd clc std xor dec mov adc add movsb inc inc dec lods sbb cmc fcmovnu xchg shr into fsts shlb sti and ret xor add aaa repnz xchg sbb inc add imul pop adc nop enter jmp pushf icebp inc nop and sbb and lds arpl fildl scas mov imul cli cs lret clc or scas jo mov or ret imul adc pop and pusha mov mov bound es shlb mov xor xor pusha (bad) xor sbb jbe lret lods sub or loope mov push push popl pushw fsubrs popf lods xor pop sbb sbb push xchg (bad) fsubl adc aaa mov add into ss xor outsb in pop sbb add sbbb (bad) (bad) or sub add sbb fwait aam or mov push hlt push mov push das cmp mov andl (bad) pop mov pop inc jl sbb pop and out sub in add bound adc pop adc xor loop mov or add lock fstpl sub loop (bad) mov stos sbb jns pop hlt xor cmpb ja mov out cli add add ss add inc das sub mov sbb and js fld1 xor test or mov xor inc cltd or mov xor xor inc fsub nop mov xchg mov cmpsl lods inc sub sbbl cmpsb repnz xchg fadds jl outsb jbe sub sbb mov fisttpl lods dec nop subb je xchg xchg adc xor cmp cmp imul jb popa add add jp and add add inc or das jno xorb out (bad) rclb or int into and stos sub test push dec cwtl sub or sbb adc arpl add mov hlt andb or cmp adc clc repz xchg loop fmuls jo inc xchg or out adcb out and inc cmp sbb arpl test push mov movsb (bad) into add das out lret cmp adc je mov rorl adc aad add mov sub (bad) in popa aas inc add and pop and sbb jl dec loopne xchg scas push lods les sbbb shl daa pop cmp rcrb or adc ja or mov movsb mov adc aam test jmp push sub add cmp lods cmp xchg sub mov add jo jg (bad) clc inc push push add and (bad) mov push in cmp (bad) cmp subb and stc adc add xor mov daa mov add adc cmp mov mov int cs stos inc or jge andb mov mov mov and call push adc xchg cmp push into aas aad pusha enter test or adc push cwtl mov sub arpl stc sub fisttpl pop mov inc cmp fs ret movsl xlat cmp cmp and add out shl inc push aad loopne mov test aaa xor or test clc loopne mov inc fstpt shrl sbb jge cwtl dec clc popf mov inc cwtl aaa mov orb enter nop fstpl push sub and add ds mov jbe movsl xchg jmp (bad) push push add out icebp ja and ret jle clc lods mov outsb pop inc add aaa mov fcomps mov cmp sub mov lock jg repnz dec xor in clc sbb add lahf jmp add cmp sub and add cwtl pop test dec inc out xor or mov add cmpsl push cmpsb xor aas or es and (bad) jnp test icebp rclb inc sbb xchg cwtl inc in adc sub cmp xchg sbb jg add adc mov add cmp pop inc cwtl sbb add jp scas jnp xor clc and rcrb daa loop bound inc and sbb test and push (bad) aaa les div (bad) loopne mov lods outsb mov fs fwait and (bad) std xlat dec clc jg or inc and add mov add adc sbb mov pop cmp xchg outsb cli xlat add mov mov and or enter add lret pop leave xor and fisub lds adc xlat xchg and and add inc in add (bad) sub sbb fisttp mov addl fidivl xchg push or sbb fadd or out test scas xor jp lcall flds adc or dec add pushf les adc push orl cli (bad) push cmpsb rcrb sbbb inc or aaa in push inc lock popf cmp sbb test push pusha loop add push fadd mov rorl cmp inc rolb repnz mov jmp mov cmp mov xchg test pop lods addr16 (bad) inc shll dec js push mov fistpl and loopne inc and sbb movsb (bad) divl (bad) lahf push mov cmp cmpsl mov test push xor cltd add add and loop adc mov int3 inc aad add xor mov adc mov loopne lcall jge popf cld xlat adc mov xchg je (bad) jae testb and mov push sub imul jno inc fdivl push and cwtl movsb sbb push mov xor mov cmpb lock sub push inc mov xchg outsb xor cwtl mov movsb xor adc adcl xor and add negb pop jno adc sub daa cmp sbb push push adc cmp cwtl xlat cld fimull cmp add sbb gs add ficoml push add fistpll sbb add andb cmpsb xor sub sub cmp sub push int3 nop inc add fs jnp pop cmp xchg mov (bad) shll or (bad) adc addb cmp shlb cmpsb scas std aaa out mov mov xor das jge push xchg aaa sub xchg fmuls mov push popf and daa inc fcoml inc lock mov add fs popa xor ds movsb dec pusha or nop call jno sub dec movsb add sbb inc mov xchg pop rol pop jb xor lret jecxz or inc push xor cwtl xlat inc add add sub lahf scas inc lea add mov jge cmpl fwait jg lock xor dec frstor jbe shrl cmp push add push and mov pop and adc cmp outsb rorb sahf xchg add fwait xlat stc fimull cmp push fisttp sbb lock sub leave xlat adc daa movsb hlt mov push pusha add fldl xchg mov (bad) rorb or jns ja lods (bad) loopne jmp dec adc sub (bad) xchg inc lock cmp sahf mov inc in adc in adc xchg jmp dec add ljmp jo (bad) or or inc adc int3 push xchg mov jae pop aas lock cwtl or (bad) xchg test jno inc xor loope aaa ljmp mov sbb and jmp outsb inc mov lahf adc and mov cld push jno,pt clc mov mov and dec es in add mov xchg fsubs adc lea lods mov aad cmpb scas rol push pop loope inc pushf xor movsl cmp xorb and and call insl loope sbb jp xor fimull pusha enter jnp aam xchg pop cwtl mov add lods add das pop cmpsb push jmp cmc test in xchg pop pushf psadbw cmp dec and iret xor pusha dec and roll push and shll cmp pop mov add int adc fs jbe adc xchg adc mov adc pop pop dec xchg xchg and dec pop (bad) adc xor shll push sub xor and fsts into adc add push push mov add or push (bad) enter xor adc es and enter adc aad jmp scas dec lahf push sbb mov inc mov mov adc and push nop test arpl mov enter les loop pop mov stc inc loopw pop nop frndint dec xchg mov test in aas adc clc imul push cltd pop sub lret jbe mov stc popf xor nop in inc mov pop add cwtl and shrl lock insb xorb push or mov (bad) cmp add cmp fcmove xchg jnp add xor loope out dec adc pop aas xor adc mov roll shl fstpt add out push adc ds inc popf sbb out push je xchg daa inc lock lods add aam addl inc xlat test xchg getsec adc jmp add adc enter adc push and push pop jo add into ss jge or xchg pushf xor fidiv xor push cmp inc adcl jne push xchg int3 pop repz dec sbb fstps xchg xor arpl jp push sub xchg add lea push mov mov dec mov jns out lock mov and shrb push (bad) ss icebp inc and xchg das mov and xchg test in test add icebp dec or jae add sub mov dec scas sbb mov gs inc mov test xor rcrb dec cmpsb adc aad and sbb lds dec inc mov enter xchg or das leave cltd sub adc jge adc ror cmp hlt fucom push (bad) mov push and jo ret xor add push xchg add fcomps bsr inc es popa xchg imul push hlt xor stc insl sub rclb or push insb notb xchg xor int3 cmp dec movsb or movsb mov (bad) sbb xchg jp mov push or mov fistpll std add mov stos fwait (bad) insb cmp sbb sbb divb int in (bad) and mov notl lods jp int3 (bad) mov pop nop movsb add mov stos fadds mov or and mov jb cmova lahf pop cmpl pop mov sbb inc add pop shrb (bad) fwait lods dec sub push or add mov nop cld pop xchg leave add and inc stos xchg mov cld cmpb fwait mov jp pop mov dec push add ss xchg dec ss mov or cli test jg sbb mov or scas bound pop pop mov rcr cmp mov test push rorl add inc out (bad) dec xor ds mov push sbb pop sub sub sbb pusha movsb mov cwtl dec imul imul repnz je sub adc rcll aas adc mov clc cmp add cli inc repz cld add test popa in popl xchg js loopne fwait add jg sbb mov add es cwtl (bad) sbb insb add or push or in sub mov or xor mov lahf push add roll loop add jb ficoml push lds jle addr16 xchg fs jae bound mov xor cs lret movsl adc stos xchg loopne pop dec stc loopne ret sub push mov xchg dec test add inc mov add xor adc pop and push cmpsb pusha pop in cmc rorb inc outsl je adc dec (bad) fcoms arpl and inc insb dec cmpsl adc cli sub mov pop inc sub dec notl dec and hlt enter inc in pop ret inc inc xorb cmp cmp addr16 sahf andb jo add ss xchg daa dec insl test mov popa xchg sbb push enter and jae and sbbb mov addb xor addb xor dec or inc and pop xchg addr16 mov adc pop or test sbbl push jnp out mov cmp add dec cmpsl cltd mov and in add jae shufps int3 imul add jg jo imul stos rolb or mov cmp xchg out adc add pop sbb push ja shll sbb and aad inc mov fsubrl sti in adc lock out push in jmp xor subb cmp sub fs or sbb push xor sub cmp ficoml cs in pop pushf cs lret pop mov pop push mov dec xchg icebp xchg and xchg push xchg push lret test xchg sub fs cwtl int3 or js lods lcall and movsb add sbb mov xorl jns xchg xchg lock test fwait scas xchg pop adcl xor aaa cmp sti push xchg xchg push mov sbb rol sub mov loope push mov adc xchg push mov inc rorl (bad) cld and dec mov dec sub xor xchg int and addr16 dec sub dec dec dec nop inc sbb xchg xor adc add icebp test movsb insl push shlb xor lods push jo sbb into xchg test (bad) lods fs psrlq adc pop test cvttps2pi out xor loop mov xchg pop dec movsl adc cmpsl sbb push (bad) mov or add ljmp rorb popa mov mov insb sbb push or pop adc adc stos sbb sub xor xor add loop push mov xlat (bad) arpl lret (bad) pop lds (bad) dec mov jmp cltd add in mov adc repnz pop shrl mov cmp dec pop lods fwait mov mov sti inc int3 inc (bad) cwtl xor jg push pusha pop dec adc add in lods jp fwait xchg add dec insb add dec aam subl adc in pop adc ret or test jg sub test jecxz lods add xchg pop mov iret pop repnz outsl inc test mov lds and xchg cwtl add and or lods je or sbb xlat icebp adc std add aad jecxz cmpsl (bad) in add pop add rclb mov sbb xor lods cld xor cli mov pusha int3 loop cmp js cli cmp pop and mov add jmp mov add sub and push sbb int sub test cmp pop xchg imul push xchg dec add cltd push and inc mov jmp add in sbb adc and fcoml and xor cmpsl arpl or add mov add push add pusha jge adc cmpsl mov in jp add mov cwtl fs add sbb call nop cmp pop test mov jg inc sbb je cmp mov stc sub cmp lret inc jl adcb fwait mov and insb mov cmp mov pop shrl adc add cmp mov enter cld and sub int and lret dec pop and sbb inc cwtl addr16 mov xchg fwait sbb xchg icebp mov push mov xchg dec loop adc ja aam adc or (bad) jo add shll in test fist inc cmp add rol or (bad) bnd enter xchg jg cmc xor mov in fcom dec mov ljmp test ja int lock xchg scas lcall xor repnz dec call and les pop and faddl mov scas or pop ljmp xchg lret sbb lret (bad) xor xchg mov inc les xlat lea test jo dec inc mov jo dec pop push pop push xchg addb stos xchg imul clc dec bound int3 inc bound add sbb inc sti imulb sub movsl ss mov pop jne fistp ja add pop mov out xchg push mov es xchg sbb imul pusha jl sbb lock add dec sub mov add xchg sub mov xchg les loopne test and (bad) cmc jns or cmp loopne movsb xchg dec cmp aad sub inc jo sar or adc adc js sbb push xchg inc mov cli (bad) xor divl pop xor pop mov fist dec sbbb mov arpl sub enter imul jg or pusha test hlt add push sbb loop mov jl xchg add inc divb push cli mov lret add pop mov adc ret fcoml cmp scas mov outsb ss clc pop test add std cmp sbb push movsl arpl sbb mov xchg call test push xchg inc xor jmp or or mov test mov addr16 push inc andb cwtl das add dec mov sbb or adc popa mov js rclb lods loopne dec movsb jp rclb jl testl jl addr16 jb or iret loopne jo addr16 sbb lock add sub rorl les adc lcall loop or and adc add adc stos add jl sub (bad) aaa test ud2 push imul jg call xchg cli fldenv cmp test xchg add push (bad) outsb leave in outsl aaa orb out push cmp loop xor push pop loope lret mov jl jecxz push popa xchg inc xchg add dec insb inc sub mov and jg push jne outsl add (bad) popl lods add lret fsubs add out testl imul test dec nop xlat (bad) pop sub add jns,pt dec das push add jne jmp dec sbb adc fldl lods enter loop loopne mov fdivrl pop outsb pop aas mov popa gs mov pop push addr16 jl sti adc or jmp cli in push loope fdivl push daa jae add sti icebp sub (bad) mov pop jl and (bad) cmp ja in mov xchg inc adc add pop clc enter or jg sbb incl cmp orl sub add mov lcall xchg xor ds jle push xchg movsl lods jl lahf pop aad cmp and out in and add adc cmp add mov lret add adc mov lods loope rclb psubsw pushf add push ret ror inc pop ds add mov and cmp jae or repnz cmp jae jmp test mov xor cli inc cmp cmpsb jnp jmp test sub scas js sub inc enter add jmp lock cmp nop sub pushf push mov and adc jno add pop repnz mov xor popf mov popa xor sub sbb js fnstenv mov fdivs fstpl xor hlt mov (bad) outsb push sub jo sbb andb inc cmpsb jo addr16 sbb imul sub sbb mov cmp pop sar pop pop pop xchg or inc pop aas add test xor mov ss sbb xor adc adc ret (bad) push sbb xchg mov int pop test aaa mov add cmpsb dec inc (bad) or inc pop cmp cmp out mov mov mov stos fadds push ds ret xchg clc je add cld inc push xor cli out add cmpsb adc mov add mov mov jecxz add inc loop add dec and add (bad) jge inc sub sbb cmp or jg sbb adc mov sbb xor sbb and jl loope popf adcl in cli pusha cwtl xor inc clc push sbb lea pop mov xorb mov or or in mov call mov mov or js aaa and incb dec adc cmp mov push lea mov lds adc push inc enter xor pop cmp mov dec sub test push inc call inc scas sti fwait xor popf pop mov test aaa mov insb xchg and mov xorb add cmp mov sbb pop add out adc lods cld pushf sbb lds dec mov xchg or rorl dec jg add nop inc pusha dec hlt pop and scas and push movsl pusha sbb movsb sahf xchg xchg sbb or pop dec jns sub clc push sbb mov adc pop jo cmp pop nop inc xchg or push fs push rclb sbb hlt sbb mov inc bound mov fnstsw sbb and push adc cltd lds and sti or adc hlt or iret pushf inc xchg mov lcall shrb scas xor cli cs fisttpll sbb mov std (bad) ds adc nop fsubs cmc push pop mov and inc in or (bad) cltd mov jno xor in adc subb mov js mov sbb pop mov cmpb mov data16 dec mov sbb inc movsl mov (bad) hlt movsl mov jecxz,pn out xor pop (bad) rcll dec mov push push sbb loop loope lods outsb rol sbb push je xor loop dec or adc gs hlt fist lahf mov nop xchg push repnz mov mov hlt inc or add popw pop outsb inc ss cmp sub ret clc mov (bad) mov es inc sub push fsubrl adc insb test rolb xchg negl mov xor cmp mov loop cmp repz (bad) mov mov sub xor insl rcl addr16 xchg ret mov shrl int mov arpl mov fs xchg aaa ret sub jl aam rolb add mov and push sbb adc sbb mov pusha jne and inc sbb sub test stos and sbb das xchg add std fisub pop jo pop lock adc xor and fildl jb lret cmpl nop add jns mov loope mov or sub xchg push mov les inc pop add sbb loop cmp and lock dec fistp sbb sarl sub dec or fs xor pop mov push and mov jg adc mov popa mov loop and sbb or lea inc jno xor (bad) sahf xor icebp cmp cld pop movsb add adc rolb sbb imul xor dec icebp xchg jo add inc sub sar jno sbb rorl loopne dec ficomp add scas call js inc add cmp fiadd rcrb repnz stos lods mov out mov xor and cmp adc addl inc aaa ret js push xchg fsubp loopne icebp adc rclb adc push pop ret ja add xchg dec dec push mov test cli push push mov icebp cwtl jnp (bad) icebp jns pusha lods mov dec adc cmp out adc cmp roll rclb or pop or pop push xor aas add inc int3 inc mov lods scas ljmp or fidiv add shl inc adc mov push mov fimul inc xor adc andb addr16 add pop mov add sbb sub movsb adc bound loopne cmp dec mov es mov cmpsl leave test push or adc xor inc fs jmp or push popf dec mov jmp or add push pop and imul push js or lods xchg sbbb in ret xchg pop cmp movsl pushf mov mov enter imul xor lock pushf movsb and shrb rolb mov xchg pop ret and push dec fisttp rol ja fs arpl add mov dec popf and pop push inc mov sbb or insl or pop or mov cmp aaa (bad) fild dec ret mov repz mov inc jp lret or and sub inc lock jnp test mov adc and mov lock pushf clc js mov insb mov sub pop lock popl das mov negl aam adc push mov adcb jb inc fwait std mov xchg add add adc sarb aad stos mov insb add jmp inc mov lods je add mov js cmp addr16 (bad) nop or aas adc cmpsl xor pop and scas add mov test clc push wbinvd xor xorb bound faddl loopne test shlb movsl enter sub mov stc test test and cmp add fcomps (bad) loope inc adc dec lcall add inc dec cmpsl or mov xchg pop ja mov sbb dec jnp jns push adc call push mov push xor in push in inc call cmp add cld xchg add adc add push adc inc fistpll xchg adc and clc fmull push sbb div adc icebp push gs loopne sbb lods js pop inc mov fcmovnu leave jnp aam jecxz ja (bad) or cmp push cmp cmpb mov add inc pushf js sub rcl inc cmp push mov dec cltd push hlt add faddl add mov mov xor adc (bad) fiadd test sti cwtl add addl add xchg pop decb leave inc (bad) clc push roll outsl inc das or cltd mov cs add repnz in xlat nop pop and mov sub rcrb ja sbb test pusha cmp mov fmuls pusha cmp inc inc les hlt xchg pop add sbb idivl and and int js dec dec mov xchg inc mov out sbb (bad) pop add mov repz inc pop imulb imul adc sbb outsl xor mov xchg or fbstp add add out test mov int test bound adc push sub inc (bad) xchg inc sub lock shl push xchg xor xchg mov popa dec add fisttpll or mov faddp pop es or add sar pop mov sbb call rol fs loopne jnp lods push cltd mov fcoml cmp sbb sub mov push in lds call dec or test sub subb and sti mov (bad) lock jo scas lds add gs ja inc xchg add mov addr16 sbb mov ljmp (bad) and pop mov les inc sbb add std adc add lahf jmp lret cwtl cmc fwait mov into outsl add loop and aas je add inc and es lret pushf add add inc xor mov push push mov inc dec daa adc int3 add fwait jo lret imull add add or popf pop push in pop xor inc daa add push mov sub movsb add jo inc adc pop repnz loopne imulb flds add mov xor das push add lret outsb mov call jl pop add outsl (bad) rcrb pop cli int jecxz or sbb inc adc nop addr16 dec insl mov xor add xor imul dec xchg sub mov fs inc mov xchg je pushf inc cld outsl add insb ret xchg rcll mov mov add dec dec and lahf jnp aaa sbbl incl pusha mov mov add cmp popa xchg xor pushf aad jne (bad) int3 dec inc clc adc cld out xchg xor jecxz cmp fcompl fadd cld addb dec pop mov leave enter xor in push xchg pusha scas nop mov cltd outsl ret xchg xchg dec adc iret mov insb inc or je or add pcmpeqw sti pop (bad) enter lcall inc nop push add nop loope xchg add jl mov adc add or add adc pop daa nop mov push dec add bound add mov out or aad add mov mov rcrb mov push inc addr16 syscall xchg cmp and add push (bad) rcrb inc shlb std inc data16 ljmp push dec imul or cmp idiv cli sub xor cld fdivp fwait pop mov movsl bound add mov add sahf push popa mov fs adc into out notl xchg cmp int3 lret mov dec jbe adc sbb adc sbb push in clc addl inc dec test pop xchg mov out cld inc xor mov sbb ljmp mov xor pop ficoml sub xor adc cmp push adc incb outsb cmpl pusha pop add inc lds or mov in mov cwtl je or sbbl clc mov out xor push jecxz xor ror cmc (bad) mov or sar pop dec jne cmp in pushf cmpsl addr16 pop pop and xchg and cld mov adc test clc lret inc push mov imul pop inc fs (bad) push adc inc inc cmp les in mov les mov mov mov nop xchg mov dec and lock out add push stc adc in mov dec arpl cld push sahf sarl pop dec test jecxz pop or fmul fidivrl (bad) sbb add mov jnp test add xor cmp xor mov popf addr16 sub out add in or pop nop in stos adc loop dec add add add sahf xchg mov jp push cs add xor cmp xchg rclb inc xor jno arpl call sbb js cltd add jns mov xor lods mov pop pop and mov mov cld lret repz jo mov (bad) arpl pop in or add and xor sbb sbb jp mov cld xchg jecxz dec nop inc cmp mov xchg sub call loopne add in rolb nop mov push in and adc inc push mov stc (bad) xchg add jecxz cmp cltd mull xlat scas pushf add mov and cld dec fwait call sbb adc pop mov sub negl and and movsb sbb jecxz stos movsb pop jo inc lcall sub (bad) mov mov test out mov sbb repz dec mov cltd sub add pop imul cmc or xor test push call and mov dec loopne push cmp fdiv test sbb pushf and ljmp sbb stos pop xchg pop loop call mov mov cmp loop enter xchg test rolb adc adc repnz sbb mov push push outsl or add or icebp hlt scas sub sub jmp nop push lds xor mov or and repnz adc dec add adc push and add test addr16 movsl xchg ret push or xchg popl cli pop stc bound adc in sub inc sbb dec out je iret pop pop sbb dec xor aam js mov inc or xor and outsb pop mov xchg mov mov mov add movb pop fmull dec xor loopne dec add push mov (bad) lret test mov in pop jge sbb pop mov mov xor jle mov mov bound adc pop jno add inc in test call addl or ret js dec test add adc xor jo mov or addl sub dec (bad) imul jecxz xchg aam movsb pop aaa jnp rolb inc bound or jecxz push pop add mov movsb mov movsl fiadd bound jmp adc bound or movsb mov mov lahf push pop pop ds mov or jecxz mov loop adc dec add add test or inc or outsb mov icebp xor nop clc pop jl mov inc iret or or ret cmp mov push jbe add push fidivrl lret data16 or jbe in jo add sub (bad) dec lds lahf jo es inc ds loope and jp adc pop out and shrb jnp loope pop rcrl sahf mov and arpl or mov stos mov inc pop dec add inc das mov xor popa lods iret or adc xor pushf xchg popa inc std ss add hlt sbb cmc xchg pop cmp out or jo in sbb mov add mov in pusha les pushf shl mov pop or adc data16 addb mov xchg into add pop push fsubrs add jp icebp cld add or call addl pop test add adc call mov fs add mov imul jnp lret push mov xchg daa mov nop test test call mov jb leave adc and fisttpll adc adc cld or xor add mov outsl ret sbb pop sub in mov aaa sub (bad) push push pop cmp push int3 or insl call sti repz pop mov push jo gs jg jo clc or push add sbb arpl ftst jecxz addl je jecxz dec movsb sbb and loope add xchg add enter add psubusw fmull mov jbe int3 ret out sub and add cmpsl fwait and mov dec jge sub lods and inc or or jecxz push mov jl test pop mov mov gs add or mov test dec mov mov nop cs test and addr16 xor push dec rolb adc mov xchg jle leave mov or xor cs in movsl lret jo movsb data16 aad je add arpl sbb rclb inc je and sbb xchg addl cmpsb xchg pop mov in inc lahf outsb lea inc xchg sub jo clc or fsubl xorl loope mov add cmp and sbb lds mov pop es mov jae lods jmp faddl xchg pop hlt loop subl cltd push cmp and mov popa fs js pop xor sub es in mov push repz xlat add in cmp sbb loopne and adc outsl test sbb mov add push arpl xchg out mov xchg sarl add call push mov add push lret or jne cmc adc andb and in test call lret mov push test push xlat push test loop mov outsl sahf push jae add or pop mov add jno pop jg into xor je add mov sub mov outsl shrb jo add imul pop pop pop icebp inc inc xchg hlt test lret rcll cwtl pop sbb repz pop stos xchg add mov decl test stos sub push scas sub das push mov in cmp test push out cld sbb (bad) lods ret mov xlat jle cmp mov cwtl or out addb push add mov add loope or jmp dec or or (bad) pop std push loopne cmp pop sub mov popa nop test (bad) adc push dec xor adc sbbb pop iret inc add push cwtl or sbb add mov fdiv push cld and out add insl lods shll inc and mov xor nop cmp lock call xchg cmp push add sbb shrl arpl fsubl in mov sub xchg lds lods sbb rorl gs xchg mov dec sbb test add in outsb mov adc repz push imul mov jle xchg out add je lret aaa ja and stos jge push insl sbb outsl add adc push dec add add fwait loope add mov jno adc xor pop imul pusha inc xchg icebp sub stc loop inc loopne aad int3 (bad) in cmp cmp addb ds jecxz lret sub loopne add jp repnz lret es outsb jl arpl add out push mov lock cmp stc dec and adc push add data16 xor push add test sar and nop clc push jmp pop das inc loopne psubsb stos and enter outsb adc jns xor and fmull add add mov jmp loopne lret and lret add insl js push scas or cwtl cld add in outsl mov loopne sbb dec imul in add or adc mov xor push icebp and push add call stos sarb bound add pop cwtl mov dec jo es add bound adc jno push dec mov add in loopne jo push pop out lret inc test dec inc cmp negb sbb movsb mov add cmp cmp adc test sub mov sub add lods rcrl inc popf push mov xor mulb mov mov sbb xchg dec sub sbb imul movsb pop mov mov adc xor imul aaa add adcb push mov ds xor inc mov movsb jnp imul pop fmull daa sti sbb or popa shll int sbb xchg cmp dec push aaa (bad) dec lret js xchg iret test add sub add mov jb sub cmp mov js fmulp adc fsub inc add mov call and in daa mov xchg cmp outsl (bad) insl xchg clc test add and sbb lock int3 dec and add mov rcrl scas xor cwtl (bad) cs ss sbb loopne shrl dec or sub cwtl dec mov lret loopne test and sbb and adc clc dec push imull movsb test loopne sbb dec xchg into pop xchg hlt cmpb test ds sbb aaa fstl mov pop cwtl imul jae add ss mov rcrb es and xchg rolb test nop insb adc mov imul add push sbb das mov or cmp mov loop pop pusha nop loopne pop adc jb mov pop adc sbb out push mov inc js mov pop outsl fs sbb pop xlat push test push out mov outsl jmp ror cltd push out and out dec push out (bad) bound mov and outsl add fldenv (bad) or movsb cs inc js rsm test inc pop cmp push push mov (bad) rcrl push xor mov xchg push or cs je shl sbb dec orb and or push js xchg mov loopne dec cmpl push js loope scas inc insb int3 inc int cltd mov das xchg leave cs mov xor movsb mov outsb bound fsts div enter cs cltd pop aas or adc sub lea loope je andl daa cmp es adc inc add push add sub sub dec lea fmuls cli push fldt js mov jo sbb push add jne or in mov jns push push stc pop loopne movsb test out rcll popf ret mov and sub mov mov and inc xchg xchg clc and mov pop (bad) inc inc pop mov rol inc iret rorb or in add dec add mov jl pop push and aas movsb mov aad aaa clc jl adcl add mov sti add xlat inc push jo shr syscall cmp inc or hlt push fcoms sub arpl adc xchg inc jb adc fsubs sub iret int3 mov jae addr16 (bad) sbb inc pop mov sub repnz in test push les adc push hlt lock pop subb push xchg xchg pop cld (bad) jno jmp lret adc add int push adc add jmp push dec popf lret xor pop movlps dec std add jge adc xor test and inc les and mov push add bound movsb cltd aas (bad) ds arpl aaa mov repz pop ljmp xchg mov test mov adc add xor arpl mov stos push outsl adc notl pusha test out inc aam jbe xor out mov sbbb inc sbb addr16 jl jecxz aas das add int sbb lahf add in add or and out addb fsubp (bad) loop loopne add dec cmc fwait stos push es xchg sbb jecxz jbe loopne loope je xor or add lods fldl icebp hlt rcrb sbb inc or jo add jb out jecxz jne and pop jo addr16 ja scas adc enter pop enter or (bad) hlt cmp pop sub test or outsl ret int3 adc sbb pop out ret jge dec push pop adc loopne,pn call or push int insb pop xlat xchg int3 push add xor pushf dec dec rclb add sbb add fcompl or and sub push jno inc push xor add dec cmp in stc out leave add nop rcrb test xchg pop dec call mov fwait dec mov mov loopne pop sarb pop pop push mov insb adc dec lock dec loopne xor push test nop call mov lret (bad) dec dec fs popa loopne add or add das lret (bad) jne mov jno or inc inc mov add sub scas sbbb test in popf rcl sbb add (bad) push ss jb iret xchg xor lea cli inc pop loope adc nop pop in sbb scas aas dec mov jne fs jb jp lea fcoml enter scas rcrl inc in add push and cmp sbb mov fstpl mov push jo imul int3 dec cmp inc push mov pop aas les mov add pusha ds cmp inc outsb push add add (bad) pop xchg pop test adc mov mov jbe pushf push and jle pop ret sbb lock inc (bad) push out add adc xor hlt rcrl out add and dec add add push sarl test aam test add dec adc add adc jae or pop push inc lods cld addb scas adc aam or pop inc mov push add sub pop popa sbb lods push shrb out arpl sarb add dec mov push mov push rclb jns enter push enter inc idivb or outsl push mov add rcll popa add jne add jecxz cwtl fbld cmp add fs xchg sub (bad) dec into imul lahf aaa sbb inc sub insb push add inc (bad) (bad) nop test jl fmull rorb sbb rolb push ret jae add out jb xor xor push dec sbb popa call pop std (bad) sbb add into add cmp pusha imul jae cmp scas add out clc repz sbb cwtl or (bad) dec adc push test into push ret (bad) jno ret cltd mov scas adcb jle into mov jmp jge xor aas cmp xor aaa fdivr mov mov xor adc adc jo cmp adc pop mov std adc cmp pusha cmovs xor js adcb push mov cmp or pop sbb leave (bad) adc cld mov or push jg inc adc push in lcall test cmpsb pusha push nop add test out mov xchg pop leave adc inc push xchg add sbb jns cltd push mov mov jp,pn add and push test out sub rolb inc pop movb push jae fsts cwtl js clc sbb dec imul je jb and inc add push aaa and mov jmp adcb (bad) fistl or add xchg or sub loopne mov les loop sub push push and mov jne nop push xor sbb push inc mov jno mov clc fdiv xchg adc clc repz push popa jae mov clc incb adc testl stos inc loop data16 stc mov mov mulb mov add out or or pop lock jns clc lea push cmpsb movsb jb ret sub enter mov and or loopne sub add loope inc stos insl rolb push jmp imul or test cmpsl mov dec jb add out lds mov pusha fisubl test (bad) adc xlat lds inc fiadd lcall (bad) cmc rolb sbb sbbl inc jg and fild (bad) adc (bad) cmc adc pop mov jg mov repnz imul and (bad) adc add push test fbld add arpl sti xor aam lret icebp shr push inc mov lods mov dec inc ljmp xchg addb jne cwtl add cmp (bad) loope flds scas mov es mov sbb mov cmpl push xchg mov jns inc or sub xor mov mov adc rcrb sbb mov lahf loope push clc aad lock and push ret sbb adc jns loope leave jo test addr16 add scas pop adc int3 hlt cmc or mov jbe sbb test std icebp loopne popa push mov push add sahf jl icebp ret fcomps sarb dec and add pop add pop xchg adc mov jne push xchg test xlat rolb sub idiv sbb and in xchg sub pop add leave and inc xchg xor cmpsb mov jmp dec aas scas lods pusha mov popa pop lods sbb fbld push in inc push push lea sbb sub adc cmp sub (bad) roll xor xchg add sub aas cmp sbb adc leave mov dec mov call adc fisttpll inc cwtl cmp adc xor fistl mov pop add push cmpsb movsb xchg pop add out lods push shlb add lock xchg mov add nop push imul add cld mov test mov cmp cmp and nop int3 loopne push imul jl mov and dec mov add pop inc (bad) sub add gs xor xor aad sbb dec mov es test add movsl inc leave jno mov inc loopne nopl fmull out cs sbbl add mov push cs cld cwtl cwtl mov or stos and add cs sbb push pop aaa dec fnop jo add sub mov pop xlat rolb lds xchg cs stc cmp (bad) adc mov int3 xor mov stos cmc cli clc sbbb sub loopne bound fldenv add inc xor hlt or push fild cmpsl xor nop add int inc sbb and mov push daa loope dec pusha mov cld insb mov sbb mov fmuls push adc cwtl add add (bad) lock test cld mov push adc movsb dec mov adc nop int3 jge xchg or sbb nop imul movsb aam ret addr16 add push mov (bad) sub pop hlt add or mov xchg pusha and add push enter mov jp add imul add fsub mov dec pop mov movb mov rclb or movsb cmpsl rcl pop inc add xchg into fwait add push sbb es js (bad) mov loope lock add scas sbb lock std imulb test sub sub push mov enter push add les enter clc out int3 fwait in cmp mov adc cld push and adc jb lock (bad) fsub ret mov cmp inc or das mov adc inc sbb add int3 dec mov push jl or aam xor rcrl mov movsb loopne scas jle test adc xchg inc ljmp mov jb jl add jb pop mov mov and enter or xchg or dec cmp add jb fldl sbb pop imul test jecxz rcl test lock add jb xchg or fdivs mov xlat rclb dec repnz int3 pop adc dec fsubrl loopne mov pop enter scas add mov inc test add adc push or loopne test push fs push adc sahf dec add (bad) mov mov cwtl adc inc lds mov in daa mov mov je ret sbb in cld imul ss and sub push push pusha repz sahf fildll add mov cltd test and rclb (bad) loopne cmpsl and clc mov ja add add pop or cmpsb mov xchg or sbb sub mov repnz push xor mov jno cld test mov jmp sti mov pop dec push (bad) fdivrl mov xchg lock or (bad) mov sub jg push adc sub nop cmp rorl sbb repz mov mov mov pop push or bound pop push pusha mov or mov sarl and or nopl aas adcw test fisttp daa loopne and mov inc and loopne dec dec fsubrl test mov lods cwtl nop add cmp and adc or hlt mov fsubrp push insb push adc mov mov dec cmp sbb dec xor mov inc sub dec mov cmp loopne movsb mov je shll add and mov xchg shll leave lcall xchg pop pop aas mov adc push sbb dec dec mov cs in cmc add in test icebp add mov aam sbb and mov jno mov and push pop imul push (bad) and imul (bad) (bad) mov in movsb add add pop out aam ljmp mov mov sub sbb mov (bad) mov hlt cld add push mov (bad) xor rolb test aas add loopne addb mov loop sub lret js daa cmpsl mov jmp fs or mov inc xlat loope dec clc jmp les dec ret andl icebp pusha inc mov pusha xchg add call ljmp int sbb add mov fmul icebp sbb mov scas mov adc jns je cli mov xchg enter nop arpl sub in pop out leave adc inc dec pushf push sysexit movsb fs sbb adcb mov jns ds (bad) je push push mov mov enter jl mov int3 dec lods pusha ret add mov sbb nop clc sbb stos adc mov mov xlat (bad) enter mov lods out add inc lcall and movsb repnz jl mov inc add hlt orl or movsb cmpsl sahf in xchg ffree sbb adc dec ret mov add test add cmc ror mov xorb js sub or mov dec mov adc mov in shlb add fnstenv add in and lcall add sbb es jg xchg loopne dec dec call mov and imul and in mov mov mov add pop clc loopne mov jg add pop imul inc push xor pop fwait add add insl outsb cmp xor dec fsubrs fwait sbb and add cmp repz pop ljmp lods ja jno add (bad) or js test repz popa (bad) cmc loope add adc lock push repnz add mov xor test push (bad) jne dec or add rcrb lock jecxz xchg decb lds int mov mov jne push pop push lock repnz sub add mov out or jecxz mov push aas push add cmp cwtl dec dec adc dec sub adc ss mov sbb adc in pop popa mov xchg pop aas and pop inc mov pusha cmc push jbe sub pop icebp add pop icebp mov inc out (bad) or add xor or sub mov movb mov sub mov insl subl push jp imul (bad) dec and jo xlat loopne jp or out cmp or and mov movsb gs sbb pop addr16 pushf sbb movsb test loopne lds das nop jae dec add (bad) jl int3 sbb int sahf mov jecxz mov clc cmp mov pop stos mov add fsubl rcrb mov imulb or (bad) ret std js add in (bad) pop push xchg sbb sbb jns in adc cmp pop mov add jbe or pop cmpsb add mov mov jns int ret or sbb cmp inc mov jecxz out jl or cmp adc adc jl dec mov and sub xchg dec in ds or repz loop movsb int3 fsts and push or sti adc push and sub in push mov (bad) cs mov xchg xor rcll dec push push fwait inc js mov in lock stos jg loopne inc push mov inc dec inc popa push cmpsb jns leave sbb aad pop pop ret adc out xchg cwtl movsb ret mov clc sti sbb adc scas jg cld inc and jl sbb lahf mov and inc push dec (bad) lahf or (bad) xlat bound data16 js jg sbbl and and add ds add and xchg dec imul mov push dec sbb and test push es xlat mov ss push test les cmp add add aaa mov add pop cld xchg or adc loopne rorb clc aad sbb movsb jl dec in xor pushf jbe jb test test add adc dec nop fisubr mov (bad) loop pop mov push jb (bad) xchg in scas add movsb pop repnz mov xchg inc push addb shl xor orl enter xor or mov nop cwtl add add imul loopne xor aad push andb pop or sbb call and aad push jl rcll or sub clc add (bad) cmp movd sbb or mov scas cmc and and out jb sbb stos sub cmp adc lret addr16 jbe lcall mov jl mov xor push or cmp and mov inc cld andb icebp dec sbb cmp repnz pop jg xchg add loop inc repz or mov adc mov fldenv inc rcl ljmp push jbe sub test bound push mov xor fcoml pop (bad) adc sub jo jl call dec sar or add enter gs inc stc pop bound or (bad) imul sbb fstps cmp das xlat sub xor cs sti jmp xor or (bad) mov adc push pop inc xor cmp mov or insb dec lock fiaddl ss push scas fsts loope adc lahf jecxz mov xchg cltd orl mov int3 clc lods outsl bound xchg rorb loopne dec leave mov cmpsb cmp mov mov xchg and mov xor cmp loope inc inc adc add lock mov insb mov inc pop loop fldcw pop push and cmp mov je into sbb lcall xchg mov or ss sbb xchg xchg lea jg sub dec add xor nop add jecxz cli mov jle cmp push punpcklbw loope incl int sti and stc test add xchg add sub sti inc sub fwait add roll mov inc (bad) mov sarl js xor adc test push sbb lcall sbb mov cmovae sub pusha push inc xchg call nopw addb aaa (bad) insl rclb mov outsb xchg nop adcb xchg out add sti mov add dec hlt xlat or mov mov cmp sbb cmpsb mov aad (bad) jbe push inc shlb rolb lret lcall negb push loopne pop int3 (bad) xor xor aas and sbb into ljmp stc out pop sarb and or and dec dec push add xor lods inc push sbb pusha add pop inc mov insb adc inc push out jbe and fs xor test lods add xchg (bad) pop daa mov xchg les sub jbe xchg push rolb fsub dec add test or call or sbb call or sbb add push mov adc push inc or push lods add xchg orb jb add das mov cwtl les cmp mov ror push lds popf test (bad) jl xchg pop xlat aam mov js xchg add sub ret mov (bad) add xchg push dec fmul cs test xchg out xchg sbbb sub mov movsb cwtl jl mov outsb add ja sub add mov (bad) js and pop pop mov dec outsl lods lods faddl enter int3 shl icebp adc mov arpl lock je jge xchg mov movsl ss inc push test jle fildl push mov xchg push sbb test std (bad) lock mov mov mov push pop lock push adc (bad) imul add hlt adc in jl decl xchg jecxz push cwtl jo xchg test pop mov jae mov add ja xchg shl fidivrl stc add insl jp lods jno jecxz mov cld js add stos mov (bad) int3 sub dec push sbb mov and hlt or imul add data16 sbb movsb cltd add add int3 mov add pop fisub stos or mov cli jb inc repz and jbe jno or or sbb pop mov lods js inc xchg rolb pop push clc test inc sub adc xor lahf pop mov inc shrb (bad) or mov sti sti mov or pop loopne mov xchg rolb inc pusha mov enter push out sbbl fwait mov test call dec daa (bad) clc dec out pop push cmc lret (bad) loop jo mov adc dec cmp xchg test out loop add mov lods jmp push seto mov inc jmp movsl imul scas loope xchg mov or rorl xor xorl push pop xor lahf cli movsb insb cmp sbb mov or add loopne sbb cltd insb inc and adc or pop std mov mov je test into mov and pop inc dec enter test sbb stc and add stos scas sbb ja xor xor cmpb cmc movsl jecxz and mov sbb pop sub jbe pop arpl xchg aaa popl sbb pop mov lret mov mov cld cmp mov and test push dec lea xchg movsb aam scas pop movsl pop inc inc test jmp cmp cmp mov movsb hlt push mov jb push clc inc jns jle test ds mov pop dec test pop push fiaddl xchg hlt movsb adc gs addb push movsb jo and sbb mov mov add push inc cltd add test pop mov mov ljmp lods add jecxz sub mov addl adc adc fcompl sub hlt inc xor adc sub adc xchg xor inc dec xor mov push jo lea inc adc sub pop rorb dec pushf out cmp cmp cwtl add jecxz inc jmp enter jnp sbb xchg in stc xchg lods add scas std lods dec jmp mov loop push cmp pop add pop add or popf push jb movsl es rcrb popa jo mov out cmp push cwtl sahf mov movsb xchg mov cmp push or dec cmp push xchg shrb add mov mov pop dec je dec stc or and out cmp aam push push (bad) nop jecxz outsl lea call int jmp pop mov push repz scas sub inc inc and movsb popa pop mov insb call dec xor push aad jae mov sarb mov cwtl into mov sub mov rcrl add xchg shl jbe mov mov add push dec or bound push dec pop ret into pop add lahf (bad) je sbb sub andb push add jmp or dec fldt js mov jmp sub mov jb (bad) aaa add push pop pusha mov dec jae or and orl xchg mov dec ror imul inc loope inc mov insb test cmp mov rorl adc sbb dec hlt adc or enter test xchg pop fs loop fs mov adc movsb push inc jb mov push les mov test ds push jbe dec sbb sbb inc je sbb adc jge (bad) mov mov add repz adc and insb jo add lcall xor add int3 repz sub call test les push dec xor leave aam mov pop pushf data16 jl pop xor xchg push test add mov or add inc and fstpt out push xorl xor pop outsb push pop add add jecxz mov or add xlat ljmp xchg adc push mov insl cli lahf inc push ljmp loop jle stc xorl push fcmovb push (bad) ljmp fidiv or sahf jae jecxz repz push jp js addb ljmp jge mov cmp sarb push fnsave lds insl sbb nop in mov out add loop push push ljmp loopne imul xor out sub sbb inc mov hlt lcall add or lea jo std jecxz cmp jb xchg iret dec push push mov adc test rcrl aaa and loope xchg push mov mov (bad) out or loop lock rcrl or dec inc call rorb mov dec sub push fstps push and mov pop decb daa rcrb and cmp or hlt or xchg test add rclb mov sahf inc xchg pushf hlt xlat xor ja pop mov (bad) push lds inc iret xor loop sub add test xor sti cs addr16 xchg repnz les and daa add xorl inc sbb add sbb dec lds popf xchg xchg mov add fimul xchg shlb rcrl mov fstpt adc push aad sbb pop lods sub inc iret icebp scas push mov inc jae in lea or jbe cmp push mov cltd adc sbb add pop mov js add push or and jo arpl add jecxz pop mov mov loop sub push lret pop jae add es popl shlb in adc mov sbb arpl rclb add dec imul push movsl sbb shr rolb call stc rcll ret cmpsl ret insb out push dec mov jmp subb movsb cmp sub repnz mov push mov test sbb inc cwtl (bad) roll fsubrl je mov xlat (bad) lret sbb inc cld jo cmp fidivrl or mov loope add mov mov sti cmp in dec dec stos add imul dec sub adc dec dec ljmp inc mov add inc aad fwait and or popf aaa (bad) mov add cmp jg mov inc pushf add and cmpsl (bad) push add jmp push inc add shrb movsb add pop mov add and daa xor pushf mov sbb (bad) cmp jge push xchg fs ret (bad) jl imul pusha push ljmp xchg and mov jnp shr je mov xchg sbb add sbb unpcklps mov xor inc imul push sahf pushf lahf sbb cmp mov xchg fninit imul mov dec data16 push ds mov mov orb rolb jnp call sti sti jno push xor aam je inc bound jnp sub cmpsl leave dec xchg add mov mov insl or sub push push dec mov icebp sbbb sub xchg scas adc (bad) and lret jl loope or mov sbb xor pushf nop out in cld out clc jmp lds stc or cltd mov repnz insb and rcrl pop repz and fadds add jb sbb add (bad) scas mov pop nop mov jle mov outsb scas in jns push test add push addps fiadd in adc into je aam lock push fiadd imul sbb sub dec mov push jl jmp push jae roll repnz jo add scas mov add cltd and scas movsl sbb jl pop loop outsb add mov and cmp data16 fistl pop push add or add pop (bad) fstpt pusha cs popf add mov or shlb pop int3 sti cmp sbb es adc xchg add xlat xchg insb in xchg movsl pop pushf and into jp sarb and enter pop call or aas push mov stos (bad) fsubr inc iret (bad) icebp pop call inc rclb dec mov movsb pushf mov mov sbb shrl gs mov mov mov leave sbb xor (bad) xchg mov out movsb fs (bad) nop add iret pushl push push mov and or dec mov (bad) aam sbb lods adc scas bound jb add hlt movsl mov add pop jl rcrl xor cmp xchg js jl loope jle pop add inc adc xchg cwtl and andb push rcl sub pusha or in xchg fsubs cmp shrl dec out scas les mov lret sbb (bad) inc test mov pusha imul jecxz sbb add aam add inc hlt rclb inc add jb lcall mov xchg or add (bad) mov dec and jecxz xchg cs mov stos cld enter popa js jo add push jns xchg addr16 xor cmpsb and jl mov (bad) mov add gs xor inc mov popf adc aas mov pop enter mov mov push pop and add add rolb inc mov xchg sahf arpl cmp cmp add cmc cld lcall sub inc xor or mov pop stc loopne dec arpl lock push fadds jno iret jo add test cli repz mov rolb loope icebp push icebp lock jns ret ret sub or cmpsl shrb pop jl adc dec cmp lret and jns jle ja popf dec xor xor movsl pop inc sbb insb and cmp cli push and int3 rcrl jl adc xor dec cmpsl mov jb sub xchg mov sub add or ja icebp sub cmp xchg push mov fcoms inc subl popf rcrb add repz cwtl jo gs or (bad) lock pop push nop ljmp push dec xorb stos cmp mov ja sbb int3 pop and in mov push inc sbb add repz ret cltd adc mov pop fs add and mov dec fnop leave es repnz push add aas add cld adc call jbe add jo pop inc mov adc add test aaa ss or dec adc sub cmp pop les cmc je leave push pushf pop imul jge xchg cmp icebp add les loope xorb xchg or stc ret and cltd setp add add imul add ljmp cwtl stc jl sub mov outsl sub pop nop push jae enter (bad) icebp icebp jno or inc pushf sbb mov icebp nop add test push sbb outsb insl sahf adc mov mov or (bad) or dec out sbb add loop lds dec push xor adc dec js pop push jnp add cmpl fsubr xor or inc and inc or push sub mov test idivl add cs ds andb mov inc sarb push rorb add lock adc sbb ret jge popa dec push fdivl movups (bad) lock bound sbb addr16 out pushf popf or jl xor and (bad) insb add mov repnz or call movl repz loope sbbl push inc adc add je popf add push leave nop pop rcrb nop push mov push loopne mov sbb jne cmp mov stos sub mov inc daa sarb push pop xor lcall addr16 lcall cmp xor xor push clc ljmp sub mov add repz add and and bound fadds xor xor int3 sbb xchg les cmp or push loopne push jl loopne fiaddl ja jno test inc stc pop mov test stos mov inc sub add jnp outsb pop mov lock (bad) xor xchg pusha add mov sub dec ss pop inc loope mov sbb lock in add in inc dec add adc hlt push test aam in add cmpxchg push pop pusha add or mov sbb addb sbb jp adc xchg push or imul nop icebp add rcl stos pusha push imul sbb bound mov adc and push je in sbb fwait imul arpl fsubr and inc nop mov movsb adc lret mov xor out std add pop dec cli add js outsb icebp mov xor xor movsl gs cmp adc fucom mov outsl in repnz pusha cwtd xor leave push shll fucom add lea fcompl sbb push call dec repz sub jb xchg cmc cmp imul push mov (bad) fmul cmp mov or mov mov imul fs cmp adc repz xchg mov mov sahf (bad) xchg outsl push mov push lar aaa fs lret imul dec int3 push push stc xchg mov mov mov adc add iret pushf adc pusha inc cmp cli xor or ss cmp mov mov ret push (bad) or push sti orl rcll push pop mov mov xor adc add dec shrl bound and push ljmp mov or cmc ret in push enter clc sub std or fsubl sub nop into adc inc rcr jbe and dec lock out hlt mov or jbe movsl dec xchg xchg and sub mov add test inc jno add lcall popf aas add imull dec cmp adc sub in nop in cli shrb lret mov sub insb jecxz rolb fs mov cmp in push sub add inc mov pushf test fiadd cmp mov mov js sbb pop mov inc mov jmp cltd adc pop add insl sub outsb or push ret loop xchg daa test push jnp nop in pop xor and sbbl loope (bad) mov mov xchg dec orb xlat mov fsubrl fwait ja and test cmp xorb fsubp mov add test test cwtl xor pop inc jl sbb fdiv push xchg rorl lods xchg imul stos cmc lret dec loopne pop fmull dec cs cmpsb rcrb stc jl shrb test dec into mov xchg cmc add sbb fmull push xchg cwtl mov add pop sbb cmpsb lock dec vmwrite push outsl insl add jo (bad) dec push add mov mov stc test add cmp mov mov xor or insb fs int in dec push sbb xor stc mov imul cltd je lods pushf sbb mov and cld push add or jb,pt je imul dec adc jno clc mov sub dec arpl and push lock push sbb imul inc les push int3 test aad mov dec (bad) xchg add add add mov and in (bad) ss add push sub mov orl or or dec enter stos loop out sub fisub jl dec cmp add jne xchg outsl add leave push add shrl icebp push and ss dec sub mov or loopne fdivs add xchg push push cld testb inc inc adc mov sbb dec shrl pop imul inc add mov cmp pop jo dec sub adc mov call repz xor add ret fmull cmc popf sbb push dec sbbb test mov inc mov (bad) pusha lcall xor lret and ds cmp sbb cmp xor or push dec (bad) add ret js lods xchg mov fdiv jle push cwtl mov lret sar mov jnp pop outsb sahf adc push rcr hlt sbb sub push hlt cli and jle xor or add lret jl xchg cmp adcl rcrb js mov call loop xchg call fmuls hlt out sbb fnop or xor push mov push gs add nop call xchg addl pop pushf bound add rclb or sub add sahf imul stc xchg push add imul adc lret add cmpsl sbb mov add (bad) adc pop cmp push mov jmp adc test cs pusha push dec xor cmp or enter sbb add cmpl mov movsb cmp xchg push pop inc push addr16 pop sub or add sub pushf adc xor cld xchg lahf add mov scas mov iret xchg bound cli add loopne outsb push or adc clc andb or push xor add add (bad) hlt lret int3 adc mov stos dec mov addl es mov js push test int3 xchg xorl cld call cmp jbe shll faddl movsb aas pop ja loope push test add push add jg shll sbb setae or cmp loope cmp inc jo mov stos push pop jnp add jge inc mov es add into addr16 clc or pop loopne out pop fiaddl inc pop test rorl out ja add inc gs jmp (bad) ds add mov add or inc lock pushf icebp addl test add pop jae mov (bad) sub aaa pop sbb jle into stc push loop xchg outsb xchg dec cmpsb push fistp mov cld add mov (bad) cmp scas add lods mul and imul fsubs mov add popl loope xor lods dec add mov push add lcall or adc out push pushf add add cld and adc in in sbb xor sbb ret test cld mov lds cmc test movsb xchg or mov push and ficom andb cmp push test mov outsl mov sbb adc or push mov cmp push sahf and push inc mov inc sub out mov jnp xchg lods sub sbb cmp addb add lea xchg xchg mov mov cmp outsb fdivrl fldenv mul test lret add mov lret (bad) js dec xchg sub test jb add xchg inc add push inc push lods pop mov test add xor movsl cmp sar scas (bad) cmp xchg mov rcrl cld sub sbb loope iret das pop mov hlt add mov or add sub jmp mov sbb jge ret mov test incb add inc in and jbe outsb fnstenv xor dec inc xchg int addl into rolb das jge and mov inc push icebp loop js xor add jle sahf mov mov cld leave adc xor dec mov aad mov sbb pop fisttpll clc add sti xchg mov add dec out aaa test pop ja pusha add inc mov sbb cmp jno sti sub dec jp aas (bad) pop sahf inc loopne dec mull inc jbe sbb int3 dec adc and jnp in add pushf test adc add sbb xlat pop inc adc pushf sub or push lret test scas enter test lcall sbb (bad) sub pmaddwd leave jecxz cmp and add or (bad) jae add push push cwtl cmp out insb xlat dec and add pop idivb ja xor inc sbb pop out sub cmp gs pop xchg jnp adc add sbb cmpl sbb out cltd or fnstenv je mov mov insb fdivl pop adc in stc lds iret sbb pop or lea imul cmp adc push jmp xlat movsb loopne xor push jnp mulb or or cmpsb sbb or or sti or mov push mov adc xor adc or loopne sbb sahf hlt incb pop and fcoml sub xchg push pop sbb dec pushf jecxz and mov (bad) xor xchg xchg or add sub xor mov or add xor stos ljmp cmp cmc push pop lock test clc (bad) jbe daa pop movb lret in and push mov movb adc psubw adc in xor adc pop je pop inc cltd cmp cmp mov in inc inc outsb push inc stc cmpsb inc add dec bound push lods cwtl leave nop call cwtl aam lods push rolb xchg loope ds mov ret add ret and popf sarl mov rorl xor adc in fild and pop pop imul inc hlt cld or xor mov adc mov test sub add add or rorl js mov aad icebp and pop or mov rcrb jo (bad) sub ss jb dec je cmp subb adc (bad) ljmp cwtl fbstp aaa (bad) or mov cmp inc addb fs dec test mov testl sub xor add aas dec push push mov mov inc in and sbb add mov mov dec sbb inc xor out push bound add pop mov out fisubr jmp stc bound insb add sbb or cmp sahf test mov loopne (bad) adc pop cmp cmp and fcmovne in jno xchg push add jns (bad) fmuls xchg fdivs inc mov push and cmp bound (bad) and sbb jmp sbb push movsb push out xorl dec lock xchg (bad) xor stc pushf jns push adc adc and aaa mov inc jns jl inc mov cwtl inc andl (bad) in add pop es dec or mov lock inc lods and xor in mov xchg scas pop push mov stos into fcomps xchg cld pop xor shrl pop rcr add push pop sub xchg enter cmpb std jle sbb ja adc rolb cld sub pop and push test test popa dec add cmc and sahf cwtl stc sbb jno dec fcomps lret fisttpl inc add out sar stos test add xchg shl mov popf rclb (bad) xor mov and sbb test mov jo mov inc mov add popa aad jns push pop int addb std mov push pushl lods add lock lahf stos add out inc push or add jl subl mov icebp pop lret mov insl inc mov (bad) les and mov pop shlb jo loopne sbb push test add leave and pop test add aaa push arpl sbb or inc or fstl test int3 ds xor clc and aam jb or push cld lock adc sbb lcall mov lret stos cltd sub and (bad) mov shrb or pop movsl or push (bad) pusha adc push mov add lcall add imul mov pop inc addb mov cmp fisub or fcmovu add inc and xor js push inc dec out xchg adc daa js test loopne mov xor mov push lahf incl cmc je dec or lods mov sbb in push in push sbb mov xor mov aam sbb dec jge mov int3 adcl gs movsb sbb xor inc mov mov sbb or clc clc mov or push mov push sbb sbb dec adc mov push scas test ds cmpsl cmp loopne mov fcmovnb test loope cmpsb push aam dec hlt add push add test jl or lods mov xor pop or jle fcmove mov dec add lods dec push scas add push push dec or iret mov arpl add xchg inc or push xchg std push test sbb add and lret out adc enter jg sub sub add scas out add xchg add les inc adc imul add push les test mov sub pusha mov mov add lcall pushw and mov mov push dec icebp arpl dec cs push xchg or call inc rorb xor mov (bad) xor push mov pop adc mov pop cmp mov loopne push adc push loopne sbb ret xor push out addl sub (bad) add add cmc and adc cmp popa push jl push je cmpsb jbe fs out jmp idiv add xor rorb adc lret andl add andb orb lods jnp cwtl popf movsb mov or xchg sahf xchg sub aam push (bad) lock inc inc jo add xor sub arpl jae add lret adc mov call xor xchg jnp icebp adc ds test in inc mov test fstpt fild cmp mov adc and cli jle xor sub test xor int3 orl xor cld (bad) add call arpl loopne add fnop and inc ja add adc dec push popf add dec xor and push ja pusha jecxz ljmp fadds xor dec hlt cmp popa cmp fwait inc mov fwait callw jns mov and inc and adc clc loope inc adc sub adc push and test sbb lock aam dec js xchg push loop inc (bad) mov pop rol inc scas push ja cwtl int3 fcoms test icebp pushf and or pushf xchg nop add adcl add adc je push scas std inc add sub sti and mov in mov pusha xchg push add cmp sbb mov leave cld repz mov xor add stos std jbe sbb sub shlb into mov inc fimul outsl fidivrl pop enter sbb loop mov imul test ret jbe and std mov cltd or ret pop orl jle and lds pusha pusha pop imul mov push dec pop push stos jo cmp inc (bad) adc or cmp or sbb mov in jno and jo std dec and push (bad) jo call inc jecxz jle,pt xor inc test mov cmp jecxz addb dec push cmp xchg sbb inc cwtl sbb int3 jns leave and jns adc pop xchg inc adc mov adc mov es test pushl and jne clc (bad) pop rclb inc mov add pop mov mov or pop sbb gs mov stc test dec push popf or xor dec fcomps mov out xchg adc adc fwait mov jae call sbb mov xor dec mov mov decb inc es or cmp xchg inc and and in popa cmp and rorl mov test insb add cmp push sbb add jne,pt cmp mov mov cmovbe and mov xchg sbb inc cwtl dec test and mov out jb (bad) mov adc addr16 add imul fs xor sub fs xor loop cmp sbb or xchg in mov sahf and (bad) cmp in mov add lock fiadd pop or sbb adc sub out jecxz adc push xchg inc test into movsl idiv test jle fimul das in push pop push lahf ret xchg imul sbb (bad) xor mov mov nop lret std mov je jl nop xor fstpl loopne and iret inc adc push push loopne xor push jo or test push js dec pop cmp mov xchg lahf adc inc div adc dec rolb out jo hlt and cwtl dec je out push fisubl test loopne cmp adc mov xchg jle dec je mov xchg fild pop push sub sub sub inc insb xor lret inc sarl sahf add insb push lcall imul (bad) in add inc lods mov push nop insb rcll xor pop call or inc imul je cmpsl cld es scas inc sarl xchg nop rcr ja (bad) sub mov shll mov mov (bad) std and and add loopne cmpsb inc (bad) mov push std sbb pop shrb push (bad) xchg add add pop sub rolb sub push pushf addb js push clc mov cld add mov xchg cmp pushf lock and mov push add add fiadd jle adc and movsl dec add xor adc or rcll jle xor inc push xchg daa pop (bad) fs xor pop (bad) jmp add xchg in pusha mov repz es sbb pusha shr push xor test mov repz int3 or loope sbb out les mov xrelease enter sysret or aas movsb (bad) sbb push dec inc and or xchg aam dec mov cmp xor jo je xor xchg jo orl push inc test push (bad) loope jl loopne or mov push xchg enter movsb add jno pushf pusha test pop mov adc adc dec imul adc test test mov je sub iret dec sbb (bad) xlat movsb jmp aam push mov fsts xchg pop or mov cmpsl sub or sub dec or ret xor xchg mov xor lds mov adc orb dec jns xor pushf mov pop or icebp mov rclb push arpl pusha test sbb test jl xor addr16 out dec cwtl jo cmp and mov sahf push mov insb jo dec xor stc cmp movsl mov add sbb mov push adc fldl add add clc jl aas xor and test sub inc sbb adc pop aas xchg call daa jns xchg (bad) je xchg fisttpl fmull outsl xor sbb (bad) or dec dec movsb inc inc jo leave xor push sahf lock sti mov mov aas add jo and xchg push and cwtl or and mov adc in adc dec push xor xor cmpsl inc xchg ds decl hlt mov loopne dec mov ret xchg mov xorb mov popa push cmp mov dec push mov test pop pop or js push lods inc lock sub in stos in pop repnz fmulp data16 or sub sbb and add shll mov jne push es andb lea xchg shlb dec cmp ret aam dec outsb mov adc sub iret cmp ret mov push sub ret and inc pop bsf sbb mov loop pop push mov and add mov or adc push js xor rcl (bad) jmp cmp imul or jbe sbb std nop fadd xor fisttpll js fwait and and inc sub adc ss js fist mov add test cs je rolb ds daa inc rcrb xchg les adc xor dec dec pop push xchg inc sbb (bad) cmpsl aam cmc and add (bad) sbbb orl ror jno adc mov dec invd loop or inc rcrl out fiadd pusha dec cwtl or push push cmp inc dec add cmp bound dec popf loopne test subb popa push aaa add je cld push loopne sub imul enter adc inc and adc jo outsl mov xor and sti sub lock sub and push pop (bad) cmpsb nop mov sbb ja adc in mov push loop test lock adc popa inc loopne or sbb in mov push xlat sbb dec jo mov jle dec movsb xchg insb mov fwait pop movsl sub xchg cmp or sahf or xor stc jne ret (bad) and pushl les outsl xchg insb or mul adc ficomp les enter mov adc nop mov adc mov rorl pusha enter movsl dec add pop inc push and shll daa lds mov nop push (bad) (bad) or rol and add je outsb push lods xchg xchg insb mov add pop jo sbb or orb jno push out nop jns adc mov rcl sbb mov or mov sub mov leave or insl sub call iret sub xor pop mov cltd dec xor mov inc or mov out sub jne decb xchg sub jns or xor push xor cmp push je xchg adc add ds pushf add push cli mov nop jl xor jle adc js xchg sub pop adc dec sub int3 or mov insb (bad) mov adc jmp test mov cmc and sub push or and cmp inc aaa or sbb std inc fadd xor (bad) les iret nop and fwait add xor sbb popf dec pop es xchg lds orb inc cmpsl mov or jo or rorl xor nop sub xor or sahf or in popf xor jle sub es (bad) adc adc push inc or dec add mov test mov or daa inc popf sahf push lea cs dec inc mov bound sub inc push jg mov mov lret mov popa pop cmp mov inc cld jo sub lods mov jle add pop std out inc es dec inc fs dec popf push sub sarb pop les mov push sahf mov test add (bad) and push mov sub fsubl jo jo cmp dec adc jg sbb add push jle iret orb nop push jle xchg test pop push pop push rorb cmp test mov or xor adc and dec pop xchg sbb push inc add cmp cmpb outsb add into fmull mov sub sbb add add dec cld mov bound push setl and inc sub fisub enter es jo or iret jo cmpsl nop loope inc cmp xchg inc push xchg add enter jo xor je pushf bound (bad) xchg add adc pop mov mov xchg mov pop or mov mov cmp add xchg pop add (bad) lock push mov xchg push sub adc mov scas lods dec or (bad) addr16 jo int3 xor jl out loope xchg cmp loop push push and dec dec and test mov sub sub sbb mov je mov sahf sub pop pusha dec cmp test adc inc loopne lock nop std add les enter orb mov xor daa sti add xchg or hlt loop pushf or dec and je jae or and test sbb cmp inc jle or add fs inc pop shr xor sbb test mov enter outsl sbb int ljmp inc mov inc shlb ret shrw popa mov sub shrb or dec lock xor dec jbe int3 shl ds sbb stc add sub fsubrs cmc adc sub xchg add dec sbb dec js fs lock mov xor cmp xchg mov and cwtl enter cwtl (bad) loop jmp add out (bad) adc fdivs sbb or mov or fbstp test adc or or (bad) sbb or aaa push xor or lret or dec adc dec loope jl adc xor and mov push xor mov movsb mov or leave movsb test shlb jmp cmp fs mov push push mov inc ret jmp je dec hlt shll jo rclb sar or inc mov adc clc dec xor loopne or out mov arpl enter inc pusha dec dec dec shll or jg aaa or add or inc nop pop sbb orb insl adc cmpsb sahf and mov pop ds xchg test jl lods aas pop fwait icebp dec add dec add je lods incb inc fsubp pop ds dec mov jb sbbl arpl and push inc cwtl cmp loope cmc inc push mov lods mov fidivr sbb dec rclb sbb jo mov sbb xor cmpsl adc mov lods sahf (bad) lock mov adcl inc or xchg sub cmc adc mov (bad) lock mov ret sub hlt les push test sbb cmpsl mov push (bad) rcl lock push ret mov shrb hlt shlb jo xchg cld mov pop jge xor lods fdivs test js sbb decb xchg or sbb fidivr adc adc xor pop jle or ret xor xchg xchg push jns and adc (bad) pusha and xchg popa inc daa aam ljmp jge add push (bad) mov dec adc lods jo mov test adc adc xchg cmp bound dec jbe movsb add sbb les add lods xchg cmc mov dec sub lods pop adc inc pop adc xchg aaa inc clc rol iret nop xchg pop sub or loop js inc mov xchg mov inc add jne xor or ds pop mov mov adc cmp pop fadd ret (bad) mov mov loopne mov ret add or xor sbb (bad) cmp push dec sbb cltd hlt lret push and mov loopne xor mov xor sbb in or shlb pop mov sbb aam (bad) dec jge loopne mov dec sub icebp cmp push inc adc jp sub jle or jg lock push pusha js repnz xchg lods sbb hlt xor xor dec dec enter enter aam xor sbb lds test adc add shlb leave cmpsb sub (bad) lea xchg or insb sub mov jmp leave jae sub mov push inc hlt in xchg rcrl lea xchg movsb lahf fiadd add jecxz pop (bad) bound xor jp push inc stos jnp out test pusha jmp sub jno pusha add mov xor adc imul add fwait add mov push cltd mov cmp mov mulb aam loope test xor loope push sahf adc adc sub (bad) lods adc loop std loop sbb jae in xchg push mov js stos inc xor lahf sub insl (bad) ja hlt add mov or mov loope aam decl xor loopne xor fiadd adc lahf (bad) cld xor test js clc mov mov or (bad) lods or pop mov mov (bad) dec lea xchg enter mov mov and pop cmp push sbb sbb mov inc insl cmpb xchg jecxz jg loopne imul adcb or (bad) js push or push inc dec sub cltd fisttp mov xor adc or adc aas and les ficom pop xor sahf push scas add add xor (bad) out (bad) inc mov lret les push xor mov inc pop add push sbb mov sub int3 cltd fimull mov inc rolb pop (bad) mov xor xor dec imul push cmp cltd sub xor pop xchg sub repnz loopne mov xor xchg mov push inc or je mov (bad) sub int3 shlb test sub loop mov cli add insb and mov or inc jg mov js jae add dec jno (bad) fisubr mov push cmp adc inc or (bad) aam (bad) rdtsc jns ret mov (bad) inc xchg dec xor pop adc movsb or or or ret mov inc movsl enter stc cmp push adc in mov subb sbb pop hlt push loopne add (bad) and xor xor jmp and js or sahf and cwtl sbb cmp cwtl add sub loop xor mov pop push push xor imul push scas cmpsl addb outsb add nop sarb rcr jno sub mov jmp les scas aaa rorb notl or add add test add cmp daa add adc sbb add add inc and int push pushw push pop push andb pop sbb push adc aaa jne lock adc adcb xorb arpl inc jle adc pop push cmp jno sub ret test or xchg pop xchg sbb adc insl push jb sub call dec dec test sub popf cmp cltd mov xor clc test nop xor dec dec int3 adc ja testb add lods out jae lea sbb inc mov add push in sub xor and xchg loop push les testl inc and add xor mov sbb mov pusha push dec pusha and mov loopne or bound or adc shlb jns add add add sub adc into (bad) jb or jecxz sbb dec test dec popa punpckhwd sbb dec enter nop (bad) or inc in dec ja and enter cmp add enter ja sub or sbb or xor (bad) out jno mov xchg lods fnstenv enter pop fadds inc inc cmp ds xor dec and inc orb je gs or insl outsl sti sub sbbl mov aaa fwait lock jbe inc movsb (bad) cmp add jno inc mov push negl je jne hlt add add stos adc pop xchg xor adc mull int3 xlat lods push or int and lea jg push bound out inc mov fidivr dec or xor loopne repz out fimul sbb cmp fcmovnb adc push push inc mov idivl or xor mov add add ljmp xchg outsl and or and mov mov sbb or and push call sub jo test mov xor insl ljmp hlt movsl jo je adc adc cmp adc cs lods sbb cmp rolb add roll in imul (bad) push out push inc je fsts movsb popf adc or cmp out lock inc movsl dec pshufw xor int pushf adc jge mov adc push js xchg insl pop xlat imul inc mov mov lods rorl xor mov insb xorl sub cmp jp push add in aam leave insl and imul mov xor and rcrb pop movsb hlt push or arpl xchg (bad) sub inc test sti inc and gs mov or mov divl push adc add (bad) into ret push or sub adc add pop dec js addr16 mov inc sub orb (bad) rcrb jmp mov je mov or or ja xor popf mov xor and cmp or push add js movsl ja and gs enter xor mov dec repnz cmc cmp mov inc jg xchg jnp lea cmp hlt movsl add je jp cwtl lcall xor cwtl sbb or rol out mov mov sarb in fstps int shrl stos or inc mov dec sub add call lods mov jl cmp or xlat cwtl fsubl mov in xor dec pop fcoms pop dec jo jae andl and movsl sbb or pusha repnz jl call push aaa sub xlat fs push adc (bad) daa mov and xor push pop cwtl ja mov adc mov xorb mov jg add or cmp sbb or xor and xor xchg cwtl and addl adc cli pop sub add sbb inc iret or mov fadd xor ss in (bad) ret pop fiaddl or mov fwait cmp dec sub mov js jns rorb mov lock clc xorl int fmul sub push popa adc (bad) or dec mov fstpt cwtl push arpl pop inc xor xlat add jnp popa adc push fcomps and lock or add xor addr16 sbb adcl or gs sbbl lcall mov or sub enter and mov int3 fcoms cmp adc jnp push and inc pusha push sarb mov push andl data16 sbb or sbb cmp jmp mov push mov dec pop add dec adc in pop dec and jns mov inc test fidivrl cmp add lods sbb or xor add mull lock push shrb adc adc arpl dec test or lods or test inc cmpsb xchg sbb pop xor adc arpl aaa jno adc cmp loopne les in xor and xor ja dec mov mov mull pop pop or loopne xchg (bad) mov ja add inc and adc adc into jo dec mov cltd jno int3 or push in push andb aaa rolb (bad) xor or or or les add add adc pop inc dec clc dec mov mov and mov cmpsl or mov mov (bad) sbb nop dec les aaa data16 popa add pop dec push mov or movsb mov rclb imul inc hlt aas and je stos shlb and add dec jo mov mov or or xor adc mov xor jnp xchg cmp add add xor xor fcoms xor cltd and xor cwtl sbb sub or jg inc xor int3 sbb and sbb and daa push fadds or mov xchg jl sub sub push xchg sub sbb aaa cmc or mov and test jne cmp mov or test in inc adc fs lahf and adc sub mov cld inc sbb inc and adc and sbb les mov push mull lock iret mov pop mov adc push adc mov retw sub or sbb jg sub adc dec push or pop push dec nop sbb dec sbb push in xor fisubrl (bad) xor lret mov or inc mov test push es sbb mov addr16 les ja rolb (bad) insl adc dec add into or fiadd mov lcall xorl or add mov push mov sbb xchg cmp ret mov pop loopne jl inc imul int3 and and dec sub aad jns fsubs call cmp xor or icebp push inc (bad) or adc popf or fmull (bad) std jne lods pop fwait loopne and xlat cmp divl or and sbb mov pusha cwtl sub or sbb inc push inc sbb in or mov outsl or mov and add and loopne sbb and shlb (bad) pop xchg or jne aaa dec icebp sbb clc mov adcb dec adc in iret loopne test adc add mov adc loopne dec cmp test testb cs cmp push addb sub addr16 mov data16 mov shlb je dec pushf movsb aas sub mov sub or addr16 sub sub pop popa les push adc mov stos (bad) in sub and lea xor jo lds loop lea xchg sub dec repz pop sti in jno aam dec (bad) mov adc push cmp pusha inc mov outsb jnp xchg mov insl ffreep cmp xor (bad) mov sbb push dec add dec mov cmp pop les push shr xor xor dec (bad) xor call push sub xchg cmp xchg test sbb (bad) enter pop aaa dec cwtl icebp cmp lock push jecxz fstps lret enter (bad) push fdivr ret and adc lds jl adc pusha pop push mov sarl jl idivb insl mov notl rcrb adc sbb pop sub lods (bad) xchg mov cmp pop cmp inc mov mov ret jns rcrb xchg add pushf into rolb (bad) mov in in pop push add aaa xor insb shrl adc cmp popf (bad) andb or lods loope fwait xchg adc insb xor sbb xchg add jnp cld or dec cmp xchg adc orl sbb mov es mov jmp jnp add pop adc sarl pop movsb sub xor add pushf mov pop xchg jecxz mov cmp dec test jns push inc mov pusha push repnz dec and inc jo cltd cltd fs repz add (bad) mov add mov out je or xor or pop add mov mov or sub push adc (bad) dec add insb pop sbb adc push bound jnp addr16 imul test insl sub and xchg mov add jl dec jge adc test sbb sbb or lcall or jmp lods mov inc or push es inc push sub xor push stos sbb mull and dec cltd xchg pushf and ficoml and pop lret hlt cmp xor cltd dec and xchg test aaa nop push and orl lods ds inc mov adc push adc sbb or fiadd xchg ret push xchg and lods xor mov int3 push pop push dec mov or sbb fcoms push inc rclb ss mov and dec mov sbb sbb and sbbl or dec adc ret pop xlat sbb or mov xchg int subl cmpsl out les push dec cmpsb sbb jle pop aas cmp das jg (bad) sub call nop clc pop xlat repnz mov imul pushf push dec cmp aaa jge inc lods cwtl or adc (bad) leave mov inc pop sub adc adc jne loopne xchg or adc out inc out add jle adc and add adc xor aaa cmp push pop das leave cmp adc pop pop and lods or (bad) and pop jno xor daa mov (bad) lret mov cmp and not or insl push das fdivs inc adc mov data16 sbb sub (bad) pop divl dec hlt jo mov lock fwait popa cmp cmpsl ds cmp adc mov xchg adc pop fnop (bad) pushf js dec and repnz jnp sldt sbb sbb popa sub sub mov fildll sarl and xchg sub dec sub add mov inc rorb stc aad fwait sbb or and xor out sub fimul cmp and lods and inc dec add test mov outsl (bad) cld cmp and or push sti and xlat or add (bad) shl add jmp cmp repz mov (bad) sub iret movsb mov push sbb push sbbl adc aad nop inc fwait push cwtl or popf shrl bound mov fadds cwtl mov sub addl rcr repz adc adc (bad) call inc int3 test or sbb or popa cmp and mov cmp push inc mov adc and popf or mov mov mov xchg xor test adc scas sahf sbb or inc xchg nop xlat or shrl push faddl insb lods sahf call and das xor add jno repnz push add mov jno enter and or jg ret enter loope shrl xor adc insl dec in fisub pop inc ja and shll xor jae loop or xor int3 inc cmc or sub shrb sub fs inc rcl test adc pop int3 jl push (bad) push or or dec (bad) sub mov sbb or sub cltd sub xor mov mov add inc dec xor (bad) les int3 mov test and push movsl ljmp aaa adc or sbb or inc push adc sbb xchg sub sub pop adc inc lds push cld lock (bad) dec push jecxz lret sub adc sub add sbb loopne xor js adc outsb test insl adc dec push lods push xchg jecxz cmp adcl jnp xor jge push dec and push pop sbb or cmc repz inc negb loope cmp xchg or mov jmp inc fsubrs stc subl cltd and daa adc in leave loopne gs adc cmp xor mov dec sub inc cmc xchg mov or and add sbb in sub (bad) shlb or mov mov xchg and inc sub cmpsw call das pop aaa and mov (bad) sti mov adc pop xor xchg push (bad) or or sbb mov mov pop pop inc jo les lods je and mov int3 jle mov sbb int3 mov popa jl xchg adc pop adc mov jno cmp adc mov pop psraw pop jmp mov lds or ja dec aam imul int3 pop sbb mov cwtl mov subl cld mov (bad) push mov mov movsb push add mov inc lods jp inc push fstp std mov shl or popa mov sti inc nop loope pop les cwtl in or call add xchg xor inc mov ljmp in daa jmp push inc push or sbbl or add jnp addb sub xor and dec inc xchg inc and js cmp test sbb in and pop and insb xchg push jp test mov fsubs jle adc loopne lods xor or aam bound imul mov mov pop xorl mov andl sbb rol xor adc popa pop in std std xchg iret movsl enter push jl push xor dec push mov xchg and adc mov mov xchg push pop or or mov loop shl mov add inc out dec test or rcrb mov mov adc lock dec xor fsts arpl xchg mov dec sub cwtl sbb out insb push inc enter dec loopne cld inc and xor cmpsl sub test dec addr16 cwtl stc dec sbb jge xor add rolb scas in adc adc mov sub xchg adc cmp inc jo sbbl movsl and (bad) jae pop and adc mov mov and jne mov adc sbb pop inc mov inc adc and (bad) mov lock pushf push pop lods ja mov cmp insl or shll and jo in or pop mov inc mov pop jo inc xor push nop aam pop sahf and jg push inc enter cltd mulb clts xchg mov mov subl test popa sub sub xor and dec cwtl js cmp add addl movsl hlt inc mov sub stc sbb sti inc loope and adc jo in ss sub test push adc and and pusha (bad) out test xor sub sbb inc and mov (bad) rcr or lods push orb mov mov je rol or adc adc int3 adc cmp (bad) mov sub out push mov adc add or cmpsl adc pop jl sbb inc or popa jo mov xor addb and mov das push or mov stos daa cmpsb xor mov movb push inc xor js adc and cmpsb push in pop enter cmp fs jp addl adc xor or mov shr seto enter loope xchg jo fwait or insl mov xchg or ror xor xor pop mov cmp jl mov push sub inc mov lea xchg rol cmp repnz stos (bad) adc or js sbb in (bad) or xchg cmp or cmp rorb and and popf and sbb icebp xchg cwtl addl rcll cwtl xor icebp pop (bad) std inc add inc and sub lods xor inc mov loope add rclb fildll out mov or fdivrs and or cmp inc push and or in adc addl sahf movsb clc aad pusha adc dec push cli sbb xor insb or mov mov dec or xchg ret lods mov lock xor int3 pop sub xlat add mov dec or push addb lds aas dec rcll in mov nop (bad) or pop adc xchg and mov mov or xchg adc push lds sbb inc test xor rorl popa nop cmp das or nop test lret clc mov adc mov cltd or movb scas enter add jp dec xor push cmp stc add popf ljmp sbbl sbb push adc mov push aas inc inc add ds push insb xlat dec cmp or (bad) or (bad) gs bnd cltd push mov cmp jp xchg iret push lcall adc nop add push popf add imul push roll clc or sub inc jp xchg push movsl push clc popa in xor inc inc jmp mov cmp inc fcompl push inc xchg add (bad) in adc je popa inc jge jo pop xlat cmp xor dec scas inc fstpl jb mov fwait dec subb sbb dec test cmp es movsl mov add ret jp lock cmp outsb lret js xchg sub pop lods daa fwait inc rol stos inc cwtl int3 nop lret pusha inc or inc adc stos cmp (bad) dec cmp lcall push leave add std inc cld add stc aam cwtl cltd jl push cld add test enter jp ret add sub test xchg and call or push lock adc cmp or and dec add sahf (bad) (bad) xor fs popa leave adc push lret and adc inc sub mov adc xchg add inc dec js fadds lcall inc fcomps jmp xor js sub push cmp push xchg stc cmp xchg push dec subb cmpsl inc inc push (bad) sub dec jl cs pop and xchg adc mov sbb into clc cmp mov pushf inc fmul mov xlat sar and adc popf int add mov rcll fwait lods or add pop (bad) stos mov adc popf popa add xor addl pop dec in rcl push out add cltd adc sbb lcall sti xorl out mov testb test test and add incw into clc pop imul jmp notb cmp and outsl add inc fs fimul mov sbb adc xor or andl addl rolb xor adc aas push cld sbb int3 (bad) loopne lret daa xchg ret cli xor dec dec add xchg mov sub stc sbb cmp xchg sbb cmp xchg mov ret aas ds (bad) adc inc or sub jb xchg add sarb lea nop mov and pop aam sub add js mov subl add test or test pushf int dec sub setns pusha jnp scas outsl adc push js enter movsb mov je les pop cltd adc fcmovb nop cwtl es bound dec inc imul dec or mov mov mov mov ret push nop add fcmovnb push sbb hlt xchg add mov imul jb mov js out pusha cmp aaa inc mov adc (bad) sti or mov and sbb inc cld add dec mov test ret scas push dec addr16 jl or stc pop jns adc xchg iret xor aas clc leave sahf xor ret sti sub add sub and push es xor add ret lahf sbb daa movb pop adc enter stos ds out in sub mov stos mov mov push loopne jle aas aam xchg xor ret fadd mov push (bad) sub cmp add pop pushw aad jo ret inc dec jmp pop jno xchg xchg iret pusha fdivrs enter mov test add push inc add lahf popa pusha mov fadds adc rcrl push add mov test xchg into lcall imul ja xchg pop xor sub and mov incb adc gs or in enter repnz xor mov inc enter ret cmpsb push inc sub popa (bad) jno sub xor sbb loop and lock lret scas mov (bad) in add enter xor arpl inc dec mov repnz sub andb dec cmp lock xchg cmp adc es mov jecxz sub cs add push imul xor sub pop jl imul mov in cld sub mov dec sub add fldt xor iret leave jbe sbb push jo es sub nop sub mov cmp push xlat es popf cmp ljmp (bad) ffree push mov cmp sub inc aaa mov sbb add jbe mov (bad) xchg in xchg inc inc xchg cmp gs jno push xchg movsl adc enter data16 jmp mov sbbl out sbb add add xorb pop stc insl clc dec inc add jl loopne mov add jo cld and and (bad) adc stc mov mov and cwtl cmp add mov push pop mov gs add xchg cmp cltd dec aas pusha std test pop test xchg stc cmpl dec dec pop adc mov ss push clc and and inc mov add mov pop xor data16 mov lds adc push mov xchg mov mov mov mov xchg jbe popf cli add es fs test clc xchg js jl sarb jg stc mov and inc mov adc or int out jno sub cmp pop xor pop inc jecxz,pt jmp push add add rcrb fiaddl roll jecxz sahf aam and mov xlat (bad) repz add and lcall xchg cmp or das mov xor and sbb push or mov aas push enter loope jl fbld ljmp pop push push dec int add inc ja mov push and scas rolb mov cmp call stc or lds sub lock adc enter xchg stc mov cmp sub add mov ja lahf adc cmp rclb mov mov outsl ret test mov adc fdivs out addl add sub cltd xor cmp lcall or cmp add or incl insl xchg loopne xor test mov mov xchg movsb add lods dec inc mov lods jnp or faddl inc or xchg mov jns rorb mov popf test jno dec mov cld pop xchg sub addr16 sub dec in cmp pusha fmull inc or push add clc mov mov inc mov pop xor push inc cmp xor enter mov inc daa movsl xchg loopne xchg daa sub xchg test ficompl dec inc sub adc mov sahf xor or inc inc rorb ljmp inc dec rcrl xchg add adc aad leave inc push sarb add add pop in and loopne int3 dec xor inc push loop imul adc (bad) roll fldt and js fmuls push mov clc pop je and (bad) xor test pop lahf clc sbb sbb pop pop jns add add push push mov popa adc cmp add ds pop jno add in fnstsw ret sub cmp cmpsb lods js sub mov pusha xchg jns dec add cmp pop inc mov popf cmp sub outsb xor rolb xor and shrl add stc icebp repz xchg and mov out inc sub aad in je xchg insb dec mov xchg iret inc int jo mov lods or arpl pop mov xchg jo daa lcall cwtl push call lret aaa clc push lock dec mov push (bad) adc inc nop dec pop push mov or add sbb sbb stc (bad) jo add dec adc and popf rolb cld inc les insb pop add and stc cmp jmp sub jb add or jbe push call mov jae,pn rorl or pop sbb mov (bad) push lahf in hlt je lods or in gs out sbb int3 add jne test inc loop lock fisttpl ret repz mov mov jns clc sbb jg jbe mov push add cltd and arpl cmp mov sbb sbb in inc mov sub fnsave add mov sub ds add js jb aaa sub sarl add cmpsb enter adc dec shr sub xor ljmp mov enter sti out subb test aad sbb pop jns aaa sti sbbb ds cmpsl popa sub mov enter adc add inc test in pushf fiadd shlb add add sub imul adc xorl fbstp fiaddl or sbb xor outsb lret sahf xor mov js jmp aaa aad jo adc inc shlb pop inc rorb pop sbb inc mov or lret add jle call mov ror pusha add add xor dec icebp add aaa sbb test and pop or mov je popf addl pushf push sub (bad) add jmp inc into or push enter pop add insl dec mov pusha imul cmp mov push sbb adc push fistpll pop dec pop sub pop ret xlat and scas mov ret sub cmp xchg pushl xor loopne aam push cmp add xchg pop test (bad) stc pop xchg das je mov insb sub out inc jg mov leave mov sub (bad) sub call out (bad) and xchg outsb push push repz jecxz outsl orl int3 lret pop in sub nop ss sbb clc cmpsl push jl sbb mov add sbbl loop decl or loope inc es dec xor cmp lock scas sbb jge inc lahf jns or xor ret addl icebp sub movsb out or cmpsl push cmp push in dec cld dec out adc xchg or fisttpll add pop pop push js adc sbb fcoms (bad) es push pusha lock xor ror adc cmp sbb or pop push xchg ljmp enter dec mov pop add mov push mov mov or mov bound sbb in sbb (bad) push mov add enter push push pop fmull push lods jne adc add movsw repz js mov enter inc insl sbb cmp in jmp sarb and add mov clc mov mov cmp or sbb and insb ljmp daa and add dec into adc ja add stc and sbb dec mulb fsubs inc add fcmove pop add stos lods cmp daa rorb pop mov pavgb out mov lret cmpsl add aaa sti loope add (bad) (bad) (bad) mov add repnz dec cmp sbb add or push repz cmovp dec sub fs jp addb adc push enter popf pop aas sub in lretw inc sahf mov pop (bad) repnz or and or daa mov icebp inc loopne dec outsb xor cld subb mov inc std xchg mov shll and sbb movb dec xor push cmp mov xor cmp sub push lret orb xchg cld jl bound lods adc sub out test out dec mov ret jns shrb daa fdivs mov mov mov (bad) nop add in or imul icebp cmc cmp inc cmp aad cmc push cwtl push dec xor adc add sub add mov pop sbb push adc sub sbb inc pop shlb rorb das in jae add inc (bad) rolb mov (bad) stc dec lods adc add mov js pop loopne,pn or in cmp cmp and scas and stc add inc add adc movb push push lcall mov cmp mov lods inc cmp es pop mov push mov std dec inc adc adc test mov in add add dec lock andb int3 mov ss add inc push leave cwtl inc in and adc mov inc add add jno sbb sbb stos dec ss mov jnp cmc fsts mov data16 and sbb cmpl rol out jns adc inc pop pop xor add cld mov sar push cmp movsl push stos enter add in cmp (bad) dec xor xor xchg sub adc sbb cmpsl sub sbb xchg jle adc cld mov dec add aad cmp and adc lret dec or pop jae dec int fwait enter push xor nop stc xor or cwtl adc push pop fcomps jle jnp sub dec jl scas push out shrb jl or pop cmpsl add pop js adc mov leave cld add scas lret dec shr addb or aad andb ja js cmpsb test sahf xor sarl into sub in push iret (bad) dec add test xchg arpl pop pop cmc xchg jb std stc jb sbb add add (bad) cmc rol dec hlt or xor (bad) xor add aad loop popa aas int3 pushf xchg add mov (bad) sbb out push add je jae in adcb xor hlt dec mov sbb ret cmpsl vpmullw mov xor inc mov pop sar adc xchg roll adc out dec sub popa add sub xchg data16 inc pusha test mov aad add cmp pop fild fcmovb sarb (bad) imul pop flds test push iret fidivl cmp addr16 (bad) bound in add cmpsb or iret xor stc adcw scas sub cwtl adc or rcrb add xor mov sub push lret call (bad) mov (bad) aam add imul leave jbe mov and cmp jecxz pop pusha xchg in adc add and mov iret jo add add pop push mov sti add add mov adc seto add (bad) cmp or iret int3 and mov add je nop mov sbb adc dec dec cwtl push cld aam (bad) lea add into iret sbb add or xor (bad) fs aas adc aaa nop inc pusha js lds jmp push jne (bad) pusha pop mov repz adc mov gs inc inc xor dec imul mov inc push and aaa xor cmp fidivrl movsb mov inc jno loop mov inc inc push xor adc add sbb pop add pop pop adc inc sbb mov pop add jle mov xchg js test (bad) adc add orb sbb int3 jecxz push and rcrl xor mov sub xchg sub sub cmp (bad) cmp add mov out mov push ret lcall inc sbb jbe lock mov (bad) mov add stos add aad in addr16 pop sahf (bad) jp (bad) xor lock mov cmp dec rcl jl sti aam dec xchg sbb arpl andb je sahf movsb push add (bad) test xlat inc add inc in cmp cld sarb xchg nop rcrb mov mov mov es adc pop (bad) mov mov or and mov iret lods add push scas int daa aas add out pushf jmp mov movsb xor push aaa test lods into add jne rorb add xchg mov adc dec mov pop fdivr jnp push shlb push ja mov jns (bad) or or xor fsubl mov mov cli shll adc mov test (bad) shll (bad) js inc lock test loope jl rorb in add mov movsb lock pop out pop add lods ret mov mov adc data16 (bad) mov into add (bad) cmp psllq dec and faddl and cltd inc cmp adcb bound and add pop push (bad) mul push xlat dec lea std mov sub add mov (bad) mov lods nop sbb rcrb aas add xadd or sbb add rolb cmp (bad) xor iret cmp push mov (bad) iret xchg xor mov dec push sub les pop mov xor mov sbb insb (bad) sbb or inc and pop xchg xchg sbb std dec mov rorb adc lcall mov inc mov or xchg and sbb xor dec or scas xchg mov push js and (bad) stos sub and ficoml push add pop pop fisttp and add lock cwtl xchg lret pusha fcom adc mov (bad) or jg pop or (bad) sub push mov out dec mov in add cmp mov xlat adc pop push push ja push inc push xchg add leave xchg stos inc cli popf mov add sbb jg mov je movsl sbb sti rorb inc pop imul lea pusha sarb inc das movsb loopne pop shrl sti xor adc adc stos outsl gs aas pop repz fadds mov push imul ficom adc and and ss shrb imull (bad) lock psubb pop dec or test adc fdivl sbb stos jl aas adc scas rcrb add jge fldt or jo pushf sub sbb xchg mov sbb fcoml xchg clc adc add mov or ljmp stc iret mov mov sbb (bad) mov xchg (bad) (bad) pushf adc dec pop sub jmp mov div dec jmp pop xchg test roll ljmp (bad) scas lods sub (bad) sbbb out add jl cmp dec mov call mov sub push mov test dec sub push in test jnp inc add and add push or cli loopne jns mov push sub clc dec loopne add int3 cld adc mov mov and sub pusha add testl ss mov mov ljmp enter inc sub pop jo call add add jp addl sub xor xor dec (bad) dec ja adcb cmpsl pop or and mov dec add aam mov addr16 test inc jne mov mull cmp mov add arpl mov cmp icebp fsub add lret pusha add (bad) aas (bad) xor adc sbb mov push stc or inc clc or dec sub push cmp jmp int3 subb mov rolb add idivb sub ss sub push jmp xorb or push ds test xlat inc and xor mov xchg xor sub adc inc enter nop ljmp rcll inc ja dec aaa sbb mov leave sbb sbb call push stc fildll js test jnp mov mov shrl pop fsts out cli pop inc fidivr enter inc (bad) int3 mov dec test cwtl add cld mov adc ud2 push mov xchg insl and dec repnz sti mov jp jo xchg sub cs mov or pop (bad) cmp test inc outsb or jb lock and or jl sbb push pop mov fidiv cwtl dec cmp mov out enter pop adc nop rolb cltd lret andb (bad) xor leave aad mov push mov adc adc mov jo,pn mov (bad) mov (bad) pop adc rcll inc xor cli sbb sub cmpb idivb pop pop xchg push sub (bad) fsubl pusha sub (bad) add pop cmp test out xchg scas adc inc cmpb lret mov test sub adc xor (bad) cmp or adc ljmp jnp xor or ret cs jl pop in adc or sbb incb adc inc dec pop push lock mov addr16 test int ds insb add inc js add mov or andb xchg adc ret int3 add push jecxz rclb jp mov rcr inc inc repnz ss cmp mov adc jmp call lahf dec add xchg daa fs cld int3 add std mov lret push fdivl jecxz lahf ficomp mov sbb in push mov call mov je and mov jp (bad) mov xor imul fiaddl fcomps pop sbb aas in fildl in pop cwtl fcompl (bad) addb stc hlt adc mov ret pop jmp sbb loopne fidivl add leave icebp mov inc push add sbb (bad) mov cld cmpsb push mov xchg cs push pop dec add adc inc sbb (bad) icebp sbb in pop dec repnz sub add nop push movsl cmp and cmp and cld inc add mov cmp jae push cmp cmp xor and pop adc jno add sbb xor cld dec mov add out push loope add inc mov fs (bad) aaa push faddl dec sar mov lret sbb cwtl dec sbb flds sub flds vpunpckhwd cltd jne mov and scas inc push xchg pusha sbbb mov pop mov int3 sub dec mov add cmp inc add mov cwtl mov xor jnp lock xchg add pop dec pop lods cmp and add shr push loope add xchg sub xor in nop xor pop adc (bad) xchg mov pop mov das int3 xor xchg mov fidivl cld mov mov cmpsl dec or inc xor adc push out pusha stc cwtl sahf test sub repz or mov mov mov push (bad) insb mov mov cmpsl sub mov adc or xor in ss add adc inc rclb in push jmp std adc cmp add xorb shll add adc lcall push or inc push std cli sub fwait jns push add imulb mov lea add icebp loope mov add out sbb loopne movsb cltd xchg jns inc sbb jo sbb andb dec sbb jno add into or movsl xor addb jo mov adc insl pop mov ljmp mov (bad) sti sbb mov fisub mov xchg add std stos imul js pop je clc add mov and adc add sub repz adc add sarl rorb imul sub fsubp (bad) in inc rolb fwait call mov xor es mov cmp mov add push xchg mov and insb push add add cld and ja repz out nop nop sub sub add ficompl push scas out cmp and lock adc jg jnp pop mov jno (bad) inc dec push inc cmp inc push ljmp mov movups xchg dec mov incb push in adcb and sub mov xchg dec adc mov lods (bad) hlt push sub adc faddl flds loopne fnstcw pop xor lds aam shrl xlat nop sub fistpl test sbb fsts cmpsb or adc jnp push dec xchg jmp or popf clc cmp jp inc cmp divb (bad) adc mov movsl dec mov fs xor mov imul pop outsl mov call mov or push pop inc add mov push repnz adc imul movsl mov or sbb dec or inc sbb jo sbb mov dec cwtl insb push in ret popf and pop and mov cwtl or lcall add loope lock or cmpsb xlat orl or or psubusw andl push fld stc push dec (bad) cmpsl sbb jle pusha dec popa shlb inc xchg test dec sbb (bad) enter mov or loopne aas mov sbb loope sbb jns fs cltd fwait or inc ja mov in movsb test xor fstpl jmp mov inc test sub inc stos mov imul sti lock movl insl push xor pop cwtl aam push add xor adc and or stos and stos sub subl xor test and jge adc mov js je adc xor cmp mov movsb mov sub sub mov loop cwtl mov in mov push aaa cmp mov fsubrs aam inc sub mov add pop sarb or mov cmp and je (bad) jle push leave cmp in mov jp adc inc enter (bad) mov add cld cmp notb sub xchg xchg push movsl sub lahf stos fmuls pop int3 and rclb ret mov loope add subb (bad) lods add in cmp movsl ljmp lcall sub add pop or and mov repnz roll scas loopne xor adc and mov lods pusha push sbb (bad) (bad) cwtl sbb dec add mov push fwait mov cmp addb xchg cmc add sbb je sbb in int3 dec rcll cmpb xor sbb sar adc mov and mov add jmp movsl add mov mov jno or dec pop mov sbb push pushf test add flds lret fisttpl out loopne fcoms aaa add and testl enter into int mov rcrb push es fnstsw add ficoml lds daa leave add lahf dec mov add jecxz inc pushf and xchg push or and add mov push adc daa lods xchg push cmp xchg int3 movsb dec adc pushf nop/reserved into mov sub out xor jns pop mov pop pop mov scas add out push inc cltd sub xchg dec or nop lods mov test mov jns (bad) (bad) xor sub notb adc lock xchg es rclb xor inc push or add loopne fldcw cmp icebp inc cld xchg ret adcl out test xor inc jno (bad) xor outsl add sub xchg dec cli xor inc jge push xor out or pop inc add lods scas das test sbb mov repnz (bad) and testl jae push repz adc outsb stos repz add adc xchg sub jo pop adcl rcll push hlt sbb adc lock jno pop cmovnp out xchg jmp xor hlt push into pop sbb xchg ret or (bad) pop sub or (bad) fwait cwtl test out adc ret shll movsl xor les fdivrl jo xor pop or xor movsb xor add cmp cltd mov inc sti sbb (bad) adc popf test adcl ja sbb add shll mov adc out mov pop pop add mov out hlt test loopne ljmp cli scas pop cmc mov sbb movsb movsb add cmc (bad) testb ljmp pusha sbb in pop (bad) icebp addl and scas rol (bad) jge and add rclb lahf jmp repnz push push loopne outsb fwait pop orl push and jno xor (bad) jns nop dec mov fdiv inc aam dec fmul sbb sub pop add pop jmp or inc subl (bad) notl repz add testb icebp je xlat sub add cmp repnz cwtl jg and lahf movsb pop nop test lods sbb adc pushf push movsl test dec test test sub cltd movsl mov clc test loop dec fcomps dec fsubl jge add sub xor imul xchg out pop mov outsb inc xchg pusha (bad) ss lods call fiadd dec cmpl sbb xor out pop add dec mov fsts push icebp dec in arpl lock add adc andl xchg mov nop cmpsl cltd pop cli cmp out jno repz push xor inc lods or sbb jmp in push xchg cwtl ja loop pusha imul jge pop rorb mov stos lock test or imul bound pusha xor push xchg mov xchg mov inc aam test cwtl sub xor xchg add lcall popf cmp cmp cmp and shl insb mov jle ror outsb popf out pop je cmp xchg dec dec xchg (bad) les mov xchg stc add sub mov jo pop cwtl icebp hlt add movsl lahf lock push and imul bnd adc sbb or lock add mov sbb sbb (bad) add ret and jns mov inc out adc inc sbb es add sbb push loopne cmpb jo dec lcall ljmp cmp pop sbb sub inc push mov mov xchg xchg xchg mov dec test int or jmp mov jmp xchg outsl nop rclb in mov mov mov aam stos adc roll inc xor jmp jnp or ja rolb adc outsb jecxz xor jo or nop clc and sub add out jno sub cmp or orb add add popa and add pop adc push fs ret cwtl (bad) ficom ds pop xchg pop and sbb inc xchg loope in sub adc sbb and add insb xchg stc les int3 enter lcall aam sahf pusha outsl add enter inc pop fs (bad) negb adc mov (bad) test xlat (bad) cwtl rolb ljmp loop add pop xchg push mov mov adc push mov bnd add fsubr xor xlat add out mov cmp iret lock mov outsl xchg (bad) fildl push enter repz ds andl mov andb jle (bad) ret dec pusha js push arpl inc testb cmc nop inc popa in cmpsb dec mov (bad) int3 cwtl or pop adc shr pop pop mov sub stc cmc cmp push popf xchg test xor cwtl loopne mov xor xor mov adc std jmp push sub xchg stos mov jbe mov mov xchg add clc dec les lods sub push test int3 xor xchg lods test nop sub mov add xor jb sbb (bad) fsubrl and mov xchg mov clc rcl sub fldl test ficomp sbb dec in xchg hlt jecxz cmp paddusb hlt sbb add ficom push rclb mov les push adc inc jecxz sbb cmp add shl xchg stos add clc out call pop leave addb sarb pop out add pop lahf pop xchg add sub or clc call jp pop cmp adc sahf mov dec xchg in jae push xchg lcall xchg loope add hlt call in adc dec cs add pop hlt imul addb push outsl add inc pop pop xor (bad) xlat mov add sarb scas adc and push and and mov add test pop xchg sub or inc push clc jecxz popf test pusha or sub fild jae xchg xor stc out inc pusha and add out inc fidiv adc stc push mov push xor xchg push or mov push xchg sbb movsb xor mulb lods sub addl (bad) push sub sbb sbb call sub or frstor negb cwtl xor dec xchg pop xorb xlat cwtl cmp in add add cmp cmp jo xor push call pop fwait aam jns es pop clc rcr push fs out in mov or pop pop or pop mov pop cld test sbb push sbb mov mov cmc inc push cld add xchg and rep mov daa cmpsb add int3 popf mov rcrb pop add inc leave adc cmc cltd sarl or pop xchg movsl pushf mov lock and adc dec pusha cmp das les fmulp add sbb pop loopne jo add ret daa sahf pop or imul movsb adc add leave data16 fwait mov push dec sub inc ja and add out add lods xchg arpl push adc in test jle cwtl dec icebp and arpl pop adc loopne add lock cmc jge or nop (bad) jg add fwait (bad) mov xchg add lods push xchg ficomp jns hlt xchg faddl dec loope and adc cmp push in cwtl test xchg out dec inc jno cmp xor xchg aam faddp xchg repz or psubusb es lods out adc hlt push cmp jae add push xchg jb or insl mov and mov sbb stos aad mov fisubr (bad) jb lcall cmp notb adc (bad) out mov in pop in inc cltd mov inc add aad ret cwtl add lods push cmp scas les test rolb cmpsb add mov es pusha inc push lcall out fimull fiadd inc mov loopne add out xor or mov in imul jne inc push fs (bad) hlt xor dec orb add sbb (bad) add cmp ret les dec daa xor jmp add lret stc loope dec mov jmp pop out xchg or (bad) xor int ret ret loopne in jae add lret sti cmp mov add jmp dec jecxz push pop add (bad) and mov sub add (bad) push sub push or rorl call mov push mov lahf pop rorb and sahf mov dec and lock lods mov sbb xor cmp enter lods mov mov jbe fcmovnb add sub fldenv mov push adc or add sub stos inc sub scas push scas inc add push pop xchg mov sbb sub test outsl lret jl sbb cld out mov in or xlat scas cmp push fldt and adc imul movsl test xchg loop jle loopne and lahf inc (bad) or aam add (bad) and add cmp fnsave adcb sbb fmulp and cltd sub lcall push jp cmp int3 and add out addr16 rclb ret icebp lea xor stc push loope je shrb je test insl xor sbb shld es shlb cmp (bad) in and sbb mov sub mov inc lods adc sub mov add push inc adc mov imul xchg movsl sbb ret frstor push out scas pop and sub lods pushf fwait push and mov stos aas loopne enter lds in add and sahf cmp frstor dec pop or sbb stos test push inc cwtl data16 or loope lret int and ret xchg add cli out sbb xchg pop sub and iret subb inc andl incb enter push xchg mov cmp test daa (bad) push push mov les mov dec rclb scas cmc push mov add cmp mov (bad) xchg sbb out leave cwtl outsb mov mov xor jns mov add push in or stc sbb push or push add outsb adc mov ds call jo fnop mov pusha mov sbb sub sahf repz in inc (bad) loopne orb dec leave rorb pop cmpsl xchg mov nop rolb repz mov inc adc jnp mov add mov (bad) jnp push cmp cmp lss jg pop jle xchg adc (bad) sub mov xchg and js fs mov mov xchg adc mov cmp leave loope xlat lret insb in rorb inc sbb stos aad inc rcr mov pusha cli int3 rorl or inc and lock add addr16 xor (bad) fwait shlb rcrl rcrl movsb loopne mov mov mov sbb out cltd and cmc add outsb inc (bad) mov pushl fsubl add mov int3 sbb cwtl (bad) adc xor mov xor pop (bad) aam mov (bad) into es movsl lock gs fimul aaa lock test arpl lds sbb enter loopne stc lods add mov add xor add es iret xchg repz (bad) paddusb adcb or loopne push icebp loope xchg adc add lret push nop test call aad outsl inc test (bad) or mov inc mov pop cwtl fdiv push aam faddl add jp lods xchg inc mov or jle out jg mov mov andl mov mov lods negl scas xor xchg cmp xor pop fcompl and setno and lods cmpb outsb sti clc lret clc dec pusha push pop add and stos mov lock xchg or ficom sub and inc dec pusha (bad) xor ret cvtdq2ps enter clc (bad) pusha imul jne mov pusha rcll add aas test xchg fdivrl inc movsb mov dec mov mov mov add pop push clc out fldl2e ret add pop clc insb mov xchg js jl dec add cmp jle sbb inc add pop or xchg out stc cld push popa pushf add xor mov sti pop pushf and mov jb mov xor xor lods add cmp pusha mov pop add push test rclb or mov rcr rolb add add pop or clc xor out inc push add test hlt rclb add pop movsb imul mov sti sub (bad) xor aad mov shlb mov lea clc (bad) push push shrl repnz cwtl (bad) pop adc jns (bad) call push (bad) jae gs push (bad) clc add sbb mov sub mov pop and xor push sbb mov sub sbb iret les (bad) jno cmc xor pop negl mov pop pop test outsl jmp dec and or mov lret pusha push icebp rol and call ds lock or (bad) fldt dec xchg and pop das lret xorb add and (bad) mov bound xchg aaa loope mov (bad) jae or je xor lock cmpsl xor in add test push xor (bad) stc add mov (bad) idivl add cs push sub icebp in test adc jge dec in int3 jmp push jl mov and pop jne sbb inc aaa ficom sbb fidivrl shrb mov push mov bound add test (bad) clc push mov and in mov mov or mov shr ret or push jl es movsl int push (bad) cmpsl pop add and pop add sub cmc and out and or or adc mov popa leave jo jge jbe mov xor sub pop add sbb jnp les ret cmp int3 or add xchg gs mov xchg jge pushf mov outsl xor add sbb in and sub jmp pusha push and inc push rcr icebp and mov mov xchg sbb stc xchg sub fsts mov jae jo xor out push add add repz ror fwait push mov fcompl test jb push mov popa ljmp stc and push adc jnp or (bad) lock call jp or repz sbbb mov bnd or pop xor mov inc jl pop cltd lods xor dec mov nop jle push mov adc xchg inc in pusha adc int3 call and sub sbb jl enter push push push mov (bad) clc mov loope jle jne es sub pop orl mov dec fsubrl and dec cs jl add push mov lret pusha subl push cld sbb rcll inc xor lcall sbb cmp sbb push dec cmp adc ret mov mov xchg mov sbb mov or fcom nop rcrb lock push dec fcompl push dec pop adc mov cwtl add rol sub dec andb subb movsl jae or adc push pop (bad) test imul inc jge (bad) mov pop loopne mov aam add clc xor stos js jp jb lahf pop test mov lods in xchg adc and cmpsl jmp (bad) adc daa mov add and dec add jmp sub cmp xchg je mov xor (bad) loope pop lahf xor dec and arpl sbb xor push hlt pop test cwtl mov (bad) popa cmp xor jge pusha ljmp mov push je push enter adc les loope test jmp or xchg roll mov lea xchg scas stos pop das mov xor (bad) sub fsts inc dec or adc xchg dec mov xchg mov js sub cwtl push cs mov cmp mov pushf test jnp mov mov dec pop mov inc nop faddl add jnp lock ja inc sbb sti xchg xor and out or shlb adc lock jns adcb inc add xor add fs add xchg pop repz mov das adc loop push mov dec push push icebp cld in jnp pop adc and mov hlt (bad) mov enter test rorb mov and add add xor ret push lock pop es hlt add jecxz pop cmp cmp rclb jp mov ds lcall sub test dec sub rcll scas sub (bad) cwtl stos mov sbb je jmp add mov jge rcr adc inc lret add fstl pop enter add leave repz aas out test inc sbb int3 pop add mov scas pop jnp sub push jno sbb nop inc popa in mov add in push xchg adc or inc je jae fnstcw divb pop add mov and mov int int3 es mov inc (bad) stc cs inc sub nop fcomps jo push push jno inc sub mov int std (bad) ja loope pop cld out in addr16 pusha or push mov insb adc ljmp insb fisttp andl push sbb stos popa in mov adc das mov mov fcom test cmc dec inc inc inc jl add imul mov mov rorb in call out adc dec dec jmp or lcall or or adc mov jg mov add nop mov sahf mov test cmp push mov in test dec pusha sbb mov insl mov loop dec aam push add or and mov inc push rorb inc cwtl test pop ss daa test (bad) xchg leave pop insb mov mov cmp push xchg pop lock adc test (bad) lods test jo jb fsubrl and and pop mov test rolb (bad) xor fs cmp cli addl mov dec repnz (bad) inc sbb in add cwtl fmuls pop nop les stos inc or icebp aam call (bad) call in (bad) cli add fcoml or ds nop movsl mov je js jl lret pop loop (bad) add add (bad) xor pushf xor leave and xchg add pop pop add rclb and dec jb popa push clc out mov iret dec push and (bad) cmp inc or xchg add lock rcrb es fnop inc mov inc imul sbb pop adc inc xchg icebp arpl xor sbb dec inc in push add mov out and and add or or pop adc add (bad) xor adc cmp xor inc xchg js inc dec cmc push test and push push cltd lock les inc das test xor js mov rolb add imul lea insb mov and mov insb xor add test add and xor sub cwtl call addb mov sahf dec loop xchg pusha sbb popa (bad) enter pop cltd loopne jns loop sbb cmp sarb out mov inc fs js cmpsl iret mov ja add jo adc adc add loopne add mov xchg push add mov push push adc mov adc push rcrb sti out pop in lock jb mov inc dec mov movsb mov sbb cmp mov dec xor enter adc inc mov dec xor dec mov dec data16 mov sub pushf (bad) lret jge faddl or adc lret mov xor mov add call mov movsb pinsrw pop dec ret in inc dec data16 xchg pushf in lock cmpsl push aas nop psubd inc xor and inc xlat lock add adc and in add jp or sbb cwtl sarb dec pop xchg lods (bad) add inc inc aad loopne and mov test shl jmp test mov shlb (bad) (bad) cmp out mov adcb inc add sbb and push push push sbb (bad) mov adc mov loope shll shrb sbb adc or mov or adc leave (bad) mov and jmp dec aam push cmp movsl js add xor jb mov adc aad and mov rol inc mov jo add mov xorb int3 (bad) dec push pop jne (bad) test cmp fdivrl mov push lock cwtl test insb cmc sub ja sbb stos int mov nop loopne inc fldt sub and mov cli mov add add pop sbb xchg call sbb int add mov mov inc loope xchg and in fsubl dec adc mov or pusha add xor ja sahf adc (bad) mov dec imul dec out (bad) mov loopne push pop lahf xchg inc or add cmpsb and push sub stos lahf jecxz mov fistpll addb xor sub aam xchg pop or mov add add lock cmp adc cmp fdivrp xor scas and (bad) adc in (bad) add mov sbb nop lods jl cmc cmp dec add mov cmp aas and stos ret inc or lods ret inc mov xor dec jns adc jo dec jbe pop fiaddl fcoml or fldt (bad) jle xor adc and bound xchg inc stos (bad) xchg aam push rolb xor mov cmpsb movsb sub inc loope sub pop pop cltd mov mov in add add mov es shlb outsl arpl call sbb cmp mov jp nop insb add or and inc adc outsl movsl dec enter rcl mov call and mov bound jg mov in fnop in addl or movq add into and pop imul adcb or xchg xor sub or dec (bad) leave call cmp inc sub xchg dec leave or in aam subl je pop insl or cmp fsubs and aam and mov test and rcrb jb mov mov sub mov adc sub fimull aam or and push fsub sub ret mov add inc lods or xor sub add mov jecxz mov sbb add cmp mov int3 or pusha or add jno push jae mov pop push jmp int3 aam cmp pop sub push or les lods fcoms pop lea dec xor push insb adc mov pop imul ljmp push sti pop cli daa mov orl push shlb leave cwtl dec mov ljmp mov dec xor arpl inc add mov ds pop adc jns js dec lea orb push or add insl dec adc and xor add or fmull pop inc outsl add cs je and inc int3 or mov in dec push or sbb rolb bound or add dec sub and mov inc push push std dec cmp imul mov scas add add (bad) pushf adc insl add (bad) or imul (bad) out stos lods leave subb nop fsubrl xor sti pop sub loopne push pusha mov repnz pop xchg add test sbb rolb das pusha inc adc cmp xor add ret push add rol xor adc push mov fmul test in sub fild in sbb add xorl jns fistp dec jo je adc ss nop daa sbb leave xchg dec mov cmp fs push testl cmp add hlt push jae or xor xchg mov push and pop sbb and adc cmp dec test add jnp mov mov icebp sub pop pop (bad) rcll rcrb push inc lods push or (bad) in cld jecxz add xchg fcmovu sahf stc add es mov add cmc adc sub sub js xchg sbb pop jbe xor and pop cmc fdivrl ret mov dec sbb mov call cmp pusha and popa aam mov adc dec mov popa nop inc mov jecxz daa insb dec enter hlt inc pusha add (bad) xor sub or (bad) data16 inc aam pop cmp arpl mov ljmp pop pop dec and inc mov or pop test dec adc imul rol nop loopne dec imul add adc xor nop daa push cmp dec mov fs pop lea nop js mov sbb dec add inc push xorb pop (bad) jb pop pop add (bad) mov dec or movsb xchg inc and iret imul lock mov push es int3 sar mov lock je sarb and jo jp adc (bad) mov loop add pop xor jo mov fs insb add test inc mov lods ret mov add clc xchg dec shlb lds sub mov cmp imul add fadd les pop imul cwtl mov push push scas push ret enter jl push aam lcall mov mov cmpsl sbb int3 push pusha pop sahf jmp or test incl sbb cld pcmpeqw imul sub movsl inc clc jp rolb push fistp jb mov mov gs xor pop inc push test int3 sbb ss xchg loopne add mov aam and pop inc rcrb ss xor (bad) adc out sub push stos pushf xor cltd pop add sub and mov aam or out xchg scas add outsl in add fimull clc call inc push pushf adc cltd add inc enter cwtl fistp add pop cmp add xor add lret in fisttpll aas cmp mov pop test sub dec std lods mov pushf pop aad push ficoml ljmp xchg inc adc or add test call xchg adc aas shrb xor xchg int3 lods mov test mov cld inc (bad) xor sub mov push cmp push lock inc push ss or je sub xchg leave or loopne jge in rolb and jns call pop push movsb add push fsub cs ss mov xchg int3 push aad and xchg lock jno dec mov enter push orb arpl push roll sahf dec mov popl mov (bad) in or xchg loopne ljmp cmp dec add or test cli addb les fs pop jp nop imul leave popf and cmp (bad) insb xor int3 sub dec fnstsw lcall mov das sbbb lahf call and jl pop cmp stc add cmpsl das lock add mov in aad daa jl adc dec jle mov add ja and pop addps add xchg std ret bound or pop jecxz or rcrb xchg cmpsl mov out dec fldl enter jnp mov add addr16 dec aas xor movsb mov orl mov cmp add sub sbb lock dec scas cmp lock nop mov cli push or sbb mov js (bad) mov popf xor inc insl xchg jge or rorb push xor int3 adc in add nop cld jecxz push push mov movb inc inc mov pop out jl adc sub jns push mov sarl and int3 pop jmp inc pop push or ja addr16 xchg mov dec and (bad) aaa add dec push pop lods rcrb stos iret add dec adc sub dec out sbb and addr16 (bad) jecxz fdivr fmull or adc out xchg push daa and in icebp repnz out inc cli mov sub in pop sbb jno mov adc arpl xchg (bad) rcr push adc cmp rorb rcrb push sbb (bad) jno int xor pop fsubl mov movsb int3 inc or inc mov clc xor fidivr sub jl andl add ds push jl push pop adc push pop dec inc and mov je mov outsl inc inc mov cmp bound mov inc mov stc sbb add mov sub lock (bad) xchg (bad) cmp push add andl lock sub lock aam and lea jle mov cli js xchg insb pusha mov mov (bad) int3 jo push sbb mov call push shrb in or mov jge test pop and xchg push jecxz adc lcall sti mov or xchg cmp dec clc addl jne sbb adc std repnz test out pop pop adc test xchg and in jecxz dec adc test mov and loope rorb add add (bad) adc inc imul out push js enter jecxz jb shrb inc fwait test jns sub jl adc sub jecxz or mov adc loop jno or push sub cmp pop adc jg push sub cmc iret es cmp mov sub test int jl adc (bad) push es les pop add fsubrl mov dec mov repz xchg les data16 mov movsb mov xchg clc loopne (bad) test (bad) xchg mov sbb iret mov (bad) les adc pop push jl mov xchg shrl add addr16 cld cmp inc andb fisubrl popf xor pop sbb enter popa or (bad) mov add bound ljmp and pushf push stc inc and (bad) repz cmp pop inc bound sbb fs push aad clc add sub into cli push sub adcb push mov mov lods clc cli bound pop inc add and shrb out (bad) pushf dec clc inc and cwtl in iret mov icebp insb jl movsl clc orb cmp (bad) xchg insl cmp jecxz lods cmp icebp sbb xchg dec and repnz jl inc scas aaa and nop push cmp jo lods (bad) xor sub sbb xchg (bad) sub xchg clc in cmp adc iret repnz sbb loope (bad) push movzbl dec clc add mov jl loopne mov inc adc (bad) jno jl ds sbbl jl cmp push inc sbb leave xor imul sbb sbb int3 cmpl push push icebp outsl mov rcr call mov aam sbb daa hlt xor dec mov inc jbe add push sub cmpb pop in mov rclb cmpb cmpsb add addr16 add movsb push xchg sub pop lret inc scas add das loope cmp aam js push cmp dec mov mov ss aas pushf ljmp cmpsl (bad) and insb movsb add inc subb int pop shl add push outsb push mov int3 sbb dec mov int ja xchg xorb insb pushf inc ja fcmovnbe test ffreep sub and das inc jne test ss mov push mov xchg nop lods sub cmpsl ret pop clc xor rclb (bad) aas push mov mov add ss jecxz ljmp mov sbb adc lret add enter les xchg adc add cmp and inc dec (bad) pushf add call std and mov pop loop add nop mov test or imul stc pop push pusha xor imul mov add arpl (bad) int3 fwait movdqa out int3 mov iret cwtl pushf imul lret adc cmp shrl inc (bad) cltd test in rorb add add fisttpl andb inc jo icebp mov pop jne std int js out (bad) fldz cmpsl and push fidiv test arpl inc xor (bad) pop or sub aaa inc movsb mov and lret push fldcw jg mov and bound sub inc mov push lret add call adc out add incl push in mov and ret xchg cmp int3 aam adc cli cmpsb and insb loopne pop push push xorl pop addr16 mov call sub mov movsb mov fnsave add adc pushf mov mov nop rcr push sub insl int add std mov mov fs mov ss enter sbb cmc (bad) (bad) enter mov xor (bad) jbe bts push jae clc xchg fadds xchg or add jl sbb cmp lret mov movsb dec cmp jp bound cmp rcrl repnz and mov inc mov insl bound test add pop mov jl or in bound fadds push cs add shr dec mov push cmc pusha and push (bad) pushf les push sbb mov cmpsl jne mov leave mov sub jo addb xchg inc mov adc or inc (bad) cld jmp loopne cwtl aam aad dec mov add adc das mov sbb and ja lcall cltd sbb mov sbb rorl je xlat aam xor adc mov inc aam push (bad) fs cli xor and (bad) pop push adc xor push pop clc orl dec sbb dec jno sbb leave sbb or ret push stc lock sbb subb pop jae aaa dec scas pushf pop (bad) pop and mov mov or pop enter cmpsl xchg rcll inc dec pop add dec dec push lahf fisttpl sahf out dec jmp fnstcw dec int cld cwtl adc sbb dec cmpsb mov jno leave push xor mov (bad) addr16 adc lds inc xor xor icebp inc add inc mov cmp push adc add test cmp and dec push xchg ret jle cmp ret and lcall inc mov ds sub ret test mov mov inc xor aas (bad) and les xchg and adc fmul and add out ret cmp sbb clc (bad) xor nop mov int3 bound std adc fstpl imul sbb mov int3 or ds inc cwtl sub push xor nop adc cmp lds adc nop cmp and lds push insb lcall jmp int lods cmpsb mov movsb and aam je sbb mov adc insb les nop lods testl and aam test les faddl lock mov int3 ret add mov lods test xchg jg or xor sub pop and or fisubrl push aad add ret pop push adc loope xchg les jae test xor fadds dec jo inc mov dec or loope out cmp and adc and sbb or adc rolb repz pop adc xchg repnz dec mov cmp gs loop and mov mov enter pusha add cmp or cmpsb xchg adc loop sub xor cmp bound push hlt push andb out int3 ret pop adc or cmp and adc (bad) mov xor adc les cmpb and jl push and int3 sbb repnz je adc and (bad) jp sahf mov fs and inc (bad) lock nop and xor (bad) sbb orl inc add mov sub cmp push test mov and dec js mov push (bad) das mov test push adc push and adc shrb jl cmp and xchg rorb or and mov sub lods cmc inc rorl adc add sbb mov pusha (bad) out pusha lahf sub adc test xor cltd push dec sbb jmp fldt xor jns mov cmp outsl xor adc insl jns pop aas lock mov cltd imul lret outsb mov (bad) rcrl or cmp sub lea push pop mov mov data16 (bad) cld cmp adc out rolb xchg (bad) lods movsb popa pop cmp add into das add mov xor jnp rorl push mov add jg pop cmp enter push sbb fs mov test push (bad) sub mov lods sub cltd sub push adc mov (bad) aaa mov and sti lea (bad) mov rcrb pusha xchg xor sbb out adc xchg cmp add rol shrb (bad) std scas sbb ror sbb and pop mov add test sbb or add cmp loop inc and lret orb mov adc (bad) fldl mov or cli arpl mov push sbb gs mov and mov int inc out addl ret add clc xchg adc add adc or not add and out inc mov movsl dec lahf outsl xor sbb xchg nop inc and adc add cmc outsb mov jb sbb jmp ret add sub cmpsb mov dec push out (bad) mov mov add cmp add sbb mov mov outsl fcmovnbe push addl addl pop inc cmc test xchg xor aam adc sbb pop and mov adc pushf lock adc add std adc jg inc xchg outsl sub xor dec xchg jno add pop inc and mov xor rcll dec mov popa (bad) lock dec sub mov fisttpl inc push scas hlt enter xchg lcall push sti push (bad) push fs mov xchg or inc imul mov adc add and xchg lods sbb (bad) fidivr xor xorl mov inc or pop cmc sbb in movsb adc adc lret das jmp addl sbb imul push aam loopne ljmp les and sub xchg rcl rcrb mov mov imul enter aas pop or xor addr16 pop add inc pop in mov int3 arpl cmp xchg adc or xor xor adc push and fs mov mov mov nop fildll pop mov and fistpll mov data16 sub fidiv jno and sub add int3 nop and adc xchg xchg int3 adc adc leave push inc loopne int3 and jecxz mov sahf nop xor inc loop push data16 mulb xchg or jne ljmp call inc mov mov pushf dec jns adc sub (bad) cmc add (bad) fisttp sbb push lea or push call push xchg fsub and je mov mov or inc pop xchg add pop adc rclb fmuls (bad) dec addb ret out mov imul jmp and mov cwtl add dec inc int roll sbb sbb std adc rcrb je and rcrb jno adc xor xor iret rorl les push rolb and or (bad) sub hlt nop adc xor out imulb mov jp fwait add loope jne fs loopne sarl and ds mov xchg mov pop push inc mov pop cmpsl sub add outsl cs lea mov and movsb insb por and xchg sti or jns test add push lcall jae add cmp pop jo arpl outsl mov jae lock xchg clc and inc jg add inc clc icebp mov repz ret add in stos not cmpsl lock jns mov call add imul hlt out dec mov test lcall lahf push adc xor pop fbstp dec pop push insb lea dec into mov dec inc xorb mov lret sti adc adc mov pushf cwtl or popf adc icebp movsl jle adc or or or pusha insb pop sbb add sbb call add or adc and fsub das cmp cmp add mov out add addr16 mov cld inc sub add push pop cs xchg and out inc or ljmp inc lock ficomp dec adc mov aad pop clc adc adc inc inc ret (bad) pop insb cmovae cltd add shlb mov cmp xchg add push lcall pop sahf fdivs mov and loopne das dec pop (bad) nop cmpsl andl out add (bad) std iret mov shrb and je add jb xchg rcrb add movsl fisubrl lea push adc adc lock add mov imul aaa negb adc out fwait js mov adc cmpb adc mov sub fisub adc popa inc scas sbb lret xchg sbbb cmp cld or arpl push in cltd movsb std in push xor fstpl pop push add rclb jl push popf mov (bad) fmuls lock xchg jl cmp incb sub mov test enter xchg and mov and add sbbl inc notb adc dec out add pushf out test test sbb inc add sbb or nop push mov add orl or jmp (bad) cmp popa push scas mov sub push test inc fmuls loope jmp stos rorb inc sbb inc lret xor adc insl push xor jo lahf mov mov imul xchg mov test test cmp and (bad) pop popf out sub mov cld bound (bad) icebp and mulb push loope xchg (bad) in xor xchg nop inc and cmpsb (bad) arpl clc addb jl lock rolb sbbb test cmc mov popa aaa rcrb mov repnz adc push and cld pusha xchg mov add pusha dec mov sti imul add pop add fwait popf mov pusha adc fs adc and cmp add es mov or and shl xor inc or std shlb push and xorl adc xor cmp (bad) dec push inc jge mov fisttpl pop add xor sbb xchg bts das or add lea mulb add inc fs cmpsl imul je fsubp sbb push xchg xor movsl mov sub mov inc test nop push (bad) mov cli testb cli jl add jge das inc rcl loope fcoms and adc and out inc or jmp and cmp add pusha dec mov xor andb mov mov cmp add scas sbb or sub mov push sbb mov sbb nop dec mov call sbb cwtl pushf push lea mov or arpl pushl jbe je cmp mov test mov sub sbb cmp mov xor lcall add add loope pop jl sarb stos movsb (bad) mov xchg and push add pusha (bad) loopne mov ja or push js add dec ret inc jl (bad) ljmp push in pop xchg xchg ror sbb jnp das (bad) sbb rclb or pusha call int pusha sahf clc das push xchg xorb sbbl mov ret enter jo add dec xor jo add cmp sahf inc loopne and sub dec (bad) mov push pop inc xor and clc loop popa sbb cld ss rcr inc jo pop sub xchg mov sti int3 int hlt xor and inc in pop (bad) ds addb push push mov sbb xor das stc test mov clc mov loop popa add and push or sbb xor inc je xchg movsl stc push add rclb loope jbe add aad jne rsm fiadd or and cmp push xor dec mov xor xchg add push loope imulb popf dec jo adc dec pop popf mov popa or and or push mov pop add xchg and sbb fsubr xor pusha add push test fimull push push (bad) and sbbb sbb lcall mov and cmp inc loopne,pt add rcll out loop movq stos rolb jo leave clc test lds stos into dec push xor push mov mov push xlat jno and add js in cmp (bad) fistpl pop sahf add adcb nop out popa rcr and push mov sbb xchg pop sub imull mov xchg mov sub call xor lea int add jns popa test cs or test gs mov adc ss adc call or test jl sbb cmpsb out arpl push mov push (bad) pop adc inc test add sub sub sbb xchg cmp nop int3 sahf cmp and pop or int3 adc and mov fcoms fisttpl mov or inc sahf insl jp adc addr16 mov sbb or or mov xchg xorb fsub xchg ds push dec rolb lods (bad) xor lcall xor jge movsb sub xorb subl mov jne and test arpl hlt xchg and mov mov lea sub subb lcall xchg add adc jle,pn push cmpsl popf xor scas cmp (bad) dec jbe outsb repnz jae sub lods mov in loopne test sbb movsb and xchg sub or xor pop sub mov scas cmp xor cmp xor mov lods or fmuls sub inc jne sbb clc xlat pushf add push fildll popa lock add sbb ljmp dec sub aam sub xchg mov pop inc and push test clc fwait push pop mov inc xor pusha cmp mov loope lret idivb (bad) pop xchg icebp mov call mov loopw adc jmp in loope fsubrl ret pushf out xchg adc jbe mov dec xchg iret inc repnz jge int3 mov or arpl leave xchg bound mov pop aam push test addr16 popf subl jnp inc pop cld stc sub push push add rorb outsl xlat repnz inc and sub inc mov mov sub loope sbb xor xchg loopne xor adc mov adc jno (bad) push fcompl sub leave push sub push sbb nop inc and call pop lods loop push shll in cltd jno js cwtl rol incb test sub jno sub add and mov or mov dec dec test ret pop sub sbb (bad) out (bad) and and add inc jmp fstpl lea jns push adc loope or sub add cmp clc push mov pop or mov cmp fisubr sub add lods cmp add or jp int sti popa aaa aam add ds push pop mov or fsubrs int3 (bad) sbb icebp cmp xorb or movsb push or jmp icebp call notb sarl dec lret mov push imul data16 loopne push push add in sbb movsb movsb pop dec addl sbb fmull lods and das mov add inc call lods mov adc imul rolb xchg inc adc stos add add xor in pusha je add cld push jns clc mov inc add dec sub xchg add lcall lods add (bad) dec hlt in mov and dec ucomiss stos jmp sub mov xchg xchg inc rol repz gs cmpsb js pop xor and pusha sti das sbb ja test idiv add sub pop int3 loopne push stos pop scas inc cltd es xor in and add adc sub xchg sbb shll jp pop pop int3 lahf mov pusha push pop mov test sub mov ret sub shrl movsb and and ja jne cmp dec adc mov sub and je sbb fs cmp insl add mov inc mov inc push cs mov int add push std pushf nop xchg pusha nop aam movsb add xor fwait jle cltd or mov mov cmp andb adc sqrtps sbb sar mov enter sub mov sub add gs loop jle add cmpsb fnstsw jnp xor movsb aas push inc add loope xor xor push inc pop pop sbb add cmp dec or les nop in push add fisubl call add xchg (bad) push or out adc mov pushf ficoml mov (bad) jo cltd lea xchg addr16 test nop aam outsb xchg mov sarb pextrw sbb int3 push adc add pop sbb fidivr cmc cmp sub inc xor add xor add cmp sbb push xor aaa ja pop lahf jnp pop xchg mov mov pop adc and push mov or push shrb adc arpl inc mov xor ljmp mov fldt xor rcrb (bad) jnp cmp mov sub or ret daa loope data16 adc pop or iret mov jnp mov or push jecxz fldl inc mov movsl rcrl es movsb rolb fimull orl rcrb push hlt cmp add fsts and xlat scas mov pusha jo adc add push inc (bad) call mov flds or jecxz in rcl mov cmpb nop add aaa sti add mov cmp cli pop nop rcrl xor push (bad) push mov ja insb and rcrb lcall fneni(8087 jb cmc and bound insl dec add sbb outsl jnp cmp mov adc loope dec (bad) mov jmp push and pop ret inc ljmp adc aas popf mul xor xchg cltd roll stos cmp and movsl jo add xor loopne dec mov add in mov lret add sub int test (bad) jno popa lret add ret dec rcrb ds (bad) test mov rolb mov pop sub or dec mov xor inc sbb cltd movsb jp xor mov adcb call mov in push or and outsb or pop ds or cmp je add dec adc iret mov cmp xor jb inc imul into xor fnstenv fwait inc clc pusha ret or fsts mov mov pop adc repnz test hlt loop scas or push mov stc or loope loopne insb xchg add cmp push mov jle jbe (bad) jl push xchg out push and adcl add add push or sbb and cmp add enter imul add imul pop jl insl mov test jge hlt ror jns mov adc add push mov call add js mov bnd push mov sub push add adc fsubrs xor dec add pushf stos insb sbb rorl xor call xchg xchg sbb lock push sbb cmp out mov add lock add dec movsb cli or icebp xchg xor jo add popl shr enter cmc adc ss or nopl cltd mov push inc xor mov in or and push xor sbbb cmp in movsb add lcall sbbb leave scas mov pop arpl or xchg xchg or add jecxz imul clc leave sbb cmp sbb imul cmp lret pop jg add and popa xor (bad) (bad) or and jg add push or pop daa xchg (bad) scas fldl scas jb jno int enter cmpsb (bad) push mov insl jmp pop inc mov pop mov xor mov mov lret pop and jno lgs pusha lods pop jnp imul xchg adc mov fwait les (bad) xchg cltd shrb inc es movsb jno call pop mov jmp xor add icebp rcrl cmp cmp nop xor lret lods push xchg rolb rclb jl push fimull mov ficom fldenv adc movsl aam rcrl add jnp jno inc sbb flds call aaa mov xchg and je test out aas mov xchg pop rcrl rolb iret nop pop (bad) aad in and push cmp rolb (bad) shrb movsb push rorb sbb add mov mov out xchg fnstcw into push cmc movsb aaa adc push and ss inc mov or pop jns rolb mov movsl add xor int3 cmp pop mov sub iret lahf jecxz ror aad mov mov (bad) dec mov or sub pop mov and iret dec (bad) les cmp cmp (bad) mov cmp hlt add add dec aam rolb xchg lcall in adc pop test add mul mov imul pop je add roll inc lods (bad) insb sbb add push in sbb loopne int scas add mov inc loopne xchg mov adc cmp add mov out xchg cmp sub test sti sbb cmc (bad) xor test cmp mov loopne fs xor andl cmpl and sti nop cltd cmp xor inc shrb test ror lcall push sbb shlb sub push pop fdivr out inc aam js push insb mov push (bad) inc (bad) icebp push mov adc inc fcmovu or mov aas add inc fstpt xor lret mov stos jecxz addb add fst pop sbb sbb data16 loopne sub mov pop mov jne push dec ja add add and add mov mov ret dec (bad) cld mov add push mov test lret xlat push loopne mov ror inc xchg and or fadds cmc xor push cmp (bad) push jecxz es mov and scas add daa divb das leave sti loopne jg and sub add loop mov push fs sub out xor pushf add jnp pop stc lea push pop xor hlt mov xlat loope dec pop adc sub inc mov add (bad) daa xchg rcll test mov aad pop fistpl rclb jo loop arpl add aas pusha add jge int or mov popa ret scas push cmp insb pop jne pusha lret pusha fcomp dec mov mov mov jo adc jns inc mov inc insb add jg sarb pop test jno pop dec and in cmp sbb add in cs mov inc fisubrl rcrb adc out add xchg xchg push shr rcll xor cmp push cmp fdivrs xlat stc clc add mov sbb adc and sahf inc jns jae pop xor pop sbb insl mov lcall mov xchg add mov xchg or aam pop mov lcall js add insb or mov fcoms outsb das insb pusha push add and mov xlat mov and xor into mov dec sarb movsl lret (bad) lock pop xchg addb inc test mov addr16 das aam andl xor pusha stc in or pop outsb mov adc add push jne xlat repz add xchg cli in sub (bad) xor dec dec push mov shlb rorb inc xlat popl repz lods push lcall sub xchg inc in sti xchg loopne std outsb pop jb push inc and adc add pop inc cmpb adc insb xlat push and pause xchg and add (bad) sbb stos (bad) pushf nop in sbb cwtl fdivrl popf ds add pop xchg imul movsl (bad) add jns and das pushf cwtl adc (bad) push push mov inc movsl pop xchg jns jne inc xchg scas mov das out push in add fidiv cwtl add daa adc mov jl test push mov test icebp notl addr16 (bad) fstpl xorb aad or mov pusha iret jl add lcall adc pop mov orb sub adcb les push jmp in ret cmpb lock (bad) aam sti cmp sub fdiv jb cmpsl outsl adc in adc inc es jge add xor adcl popl int3 sub inc cmc pop push xlat add mov add int3 and data16 mov jne add fsubr mov popa ja jae sarb add xor inc add sahf stc jge pushf and adc add dec adc pop xchg cli and jo iret mov mov rclb mov adc (bad) jl pop (bad) into rcrl cmpl fwait inc or sub pusha (bad) xchg rolb and popf shrb or fs les cmp fsubp xor ljmp daa pusha adc push lahf loop jnp nop jl int push mov add adc sub and xchg sbbb and popa dec lods sub xchg or push iret (bad) inc pusha jnp mov int movsb mov cmpsb pushf test mov cltd cmpsb addb cld test imul fs arpl mov daa jae mov gs adc and lods lock or push js inc xor cmp or ljmp (bad) xchg pop mov lds mov add adc test popw insl inc scas add dec adc out pop sub imul in pop push movsl popf mov inc adc adc pushf add mov pop push insb lods dec push xchg loopne dec (bad) xor xchg clc or add cmp fisttpl ds mov in pop andl jo fs (bad) xchg pop mov and aas es sub add pop cmp inc es call loope rcll sub xor arpl popf xor loop rclb push or mov and movsb sbb jnp inc sub mov xchg push and mov in mov and xchg dec js sub add inc test outsb cmp and or shll inc sub ja xchg add sub mov js outsl sub or push (bad) cli xor out add and data16 bound jbe xor dec (bad) in and imul mov pop add leave ds (bad) add push imul mov mov sub xor xchg add xor push push inc test fisub out shrl aas or dec mov mov pushf or pop xchg loop rcrb fimul adc sub or push in adc stos xor mov inc int3 mov xor popa arpl jl add sbb inc push clc (bad) ja mov stos add push pop mov int xchg add xchg stos dec mov xor mov and and jae mov add adc push and stos and and js mov xchg out je es sbb and pop add pop push adc xchg sahf or into pop clc cmp les hlt dec dec cmp cmp xchg push fist insb in xchg mov xchg pop rolb jns fadds rorl and stos cmp or adc add cmpsb xchg adc insl adc nop sub aam sub outsl add xchg cmc jb shrl mov push inc and nop nop cs test es mov add es push push xchg repnz dec mov aaa es add gs push dec (bad) xor dec mov add sub shlb or pop dec fisubrl inc adc jl les ss push mov xor out out sub jmp mov mov iret pusha push pusha xchg lock pusha mov scas rorb adc xor xchg pop imul lods movsb stos pop mov into push adc cmp loopne les push pop mov shlb and dec add push movsb push jo xor test iret sbb add pusha inc vpshuflw pop (bad) or and lds daa cmp into fdivrl nop iret enter and xor xchg (bad) pop out fiaddl pusha adc mov dec xor dec mov lods inc jns jg loope pop lcall cmp lods cmpsl pop sbb ds xchg scas push mov adc loop test and fistpll jg andb pop add hlt inc jl and push sub mov xchg cmpsl xchg loop imul or push push inc add and mov andb jns (bad) cmp sbb mov pop int into call push pop cmp push jl inc aam dec add add xchg rol sub mov jle push push gs je pop adc dec jne mov pop lds les outsl add sbb xchg movsl loopne inc xchg pop mov je push ja push mov scas add or push in xor sub cmp pop lds xchg in push add mov add adc pop adc and nop fdivrs xchg mov dec add into test movsb dec push push add cmp lods cmpsl fwait jno adc add lods push and cmp ret and fdivl bsf push lahf dec mov in sahf adc in bound cltd stos push enterw or cmp or jg adc pop addr16 xor push into lods int3 arpl mov sbb lods push pop jl sub lock or adc jle adc inc (bad) idivb lods cmp jg (bad) mov sbb repnz outsb mov in push add inc es cmc add cmp test aaa stos sbb xor pop or and mov push jp or push je into xchg lahf in adc cmp mov int3 add push (bad) das movb xchg dec xchg mov clc add push xor cmpsl mulb sgdtl lods inc mov inc xchg add call test pushf add lret mov (bad) push outsb jo add or cmp mov rcrl jp jo or ss dec add cwtl and aad jo push jbe je addb stos nop movl adc and sbb (bad) cmp cmpsb imul or xchg xor loopne mov push sub fimull movsb or (bad) bound add lods push cmc loope xor sbb and pop rorl pop rolb mov inc testl aad inc cmp outsl cwtl jle ss loope inc faddl push repnz mov ss add cmpsl lcall fmuls sub in nop mov orl fsubrl add (bad) jno subl sbb (bad) pushf daa mov mov (bad) or mov iret ljmp (bad) (bad) icebp add mov call aas push jb sub pusha mov mov ja inc cmp xchg sub scas dec repnz or loop adc lock jge push add aaa ret xchg add in cs cs jmp add adc jns push push mov and insb inc orl stos ret in dec add rcrl add xor ds outsb in add iret lds lret lock add (bad) pop loopne sahf js add push pop addr16 adc mov xor faddp add inc add in fld aas jl adc jnp push scas mov or jmp push add ds push mov adc les mov ja icebp add decl loope rcrl adc mov mov xor add ret aam push in xor cs xchg or sub movsb mov enter call ret ficompl je aam roll cmp je and ja inc das (bad) (bad) cmp inc adc sarb push sbb xchg rclw push pop stc add push pushf mov dec lcall ret pop jmp popa jnp xor roll mov cmp fild imul call fwait test push add loope sti addr16 inc push (bad) sbb rol (bad) lock mov and sbb loopne mov inc push sbb sub add mov xor arpl sbb add aam out xchg add inc add addr16 xor fwait ds mov rolb mov fs lahf dec jmp inc xor lcall jns add xchg cmp jns inc sbb add push imul shlb sub testl aas mov loopne cltd add sub cmp mov sti clc daa pop imul xchg sbb cmpb jg add (bad) pxor add inc and mov push cltd (bad) inc and xchg (bad) pusha push mov test stos movsb or (bad) mov je lret rcrb icebp in or rolb xchg push int3 adc popf mov sbb mov stc add sbb idiv (bad) iret adc jbe test mov bound jg movsb popa int3 pusha cmpsb and inc push aam push and inc push repz push pop inc sbb xor push or jp pusha adc in and sti cmp cltd jns adc (bad) and push sahf mov push mov cmp or inc inc push sub test in aam cwtl lock push ficoml cmpsb push add cltd cmp mov icebp add add adc inc retw test out mov pop xchg adcl sub rorb mov mov mov or xor sub and lock fwait adc jo xor (bad) int3 clc mov js pop enter dec nop dec adc push xor pop mov inc sbb aad mov xchg out or (bad) dec xchg int adc dec dec ret mov adc rolb cmp jp enter fsubr nop ds std add mov mov js movsb xchg adc mov dec xchg es mov jmp mov in pop mov mov clc inc es inc clc mov cmp inc clc mulb xchg mov pop mov mov sbb cwtl insl mov clc and fs jmp in fwait dec in jno or adc push call jnp lods ret cwtl rorl jl shr inc sbb and in mov mov sub cwtl pusha sub mulb cmp lahf cmp push cmc addr16 push (bad) dec cwtl cmp or dec mov jno in scas inc or dec gs mov dec hlt andl mov shl mov lods pop sbb sub jge push in xor and xorb mov and (bad) call and cwtl adc aaa inc gs xchg orb inc test shrl pop mov jp addr16 add dec out xchg outsb ja xchg adc call xchg imul sub and (bad) gs and inc ljmp pushf and sbb roll sub add xchg pop add or (bad) mov stos nop jl sub adc jno insb (bad) rorl dec xor and test imulb loopne fcomps add sbb push adc rclb adc adcb faddl inc arpl jge cs mov sub nop mov lock sar push bnd sbb test push popa dec out ret jmp je cmp in fisubrl flds or lret rcrb les shrb or xchg data16 hlt pop jo sbb ss xor mull outsb push mov and mov sub dec add jne and rolb mov pop push inc call adc (bad) pop cld inc insb and mov add push int jno jl add insb in cwtl xchg pop (bad) mov mov popa gs call (bad) lock and enter mov jne xchg (bad) xor fsub cmpsb negb mov mov hlt add ret mov sahf mov cmc inc add in std enter lods or (bad) dec fadds lds xchg cwtl add test rorb mov cmp std pmulhw add enter mull mov cmp enter outsb cmp inc loop imulb mov push pop outsb leave lret add js rcrl inc add pop bound cltd xchg loope cli int3 (bad) and pop add xchg inc cs loope inc faddl xchg or loope shlb ljmp mov testb mov inc ljmp inc mul cld inc add mov lds mov clc adc inc mov adc test div add int3 pop in dec shll sub nop push mov adc enter in jl xchg call and sbb testl test pusha test inc arpl and adc or xchg jbe dec push loopne inc pushf loopne xchg test pop in inc ljmp ds inc fsubrl jns ret inc sub in xor ljmp test add and pop aas push pop sbb mov addr16 fsubrl add loope sub adc pop in movsl push add mov popf dec sub loop add jne sub or imul cli pop lret mov push or inc dec fwait pop sub lret adc push mov stos lods xchg mov (bad) xor cwtl dec mov xor xchg ret aad pusha je xchg push add lods and mov (bad) movb repz pop shrl cmovns testb dec cld sbb pop add adc nop cs test (bad) mov inc xlat jp fcomps mov sub test add xchg push aam js fdiv xchg bound adc mov and pop mov ljmp dec pop inc cwtl aad or jmp jae pop cwtl mov mull push dec or sbb pop push jp stos orb pop fistp add xchg xor (bad) fcomps imul xchg xor and daa mul and int cmp xlat pop pop les idivb pop fsubr add cmc jle xor sti es dec jl sahf fisubr cmp push mov push jge out dec fs pusha enter sub push std dec mov divb xchg pop or loop outsb cld jge dec inc xchg add push or les pop mov jae adc (bad) mov lock in dec test fs es nop add xor int3 movl add xchg sahf dec jno dec cmp shll idivl push loopne jg fiaddl or mov call mov push lods mov dec adc xchg movl sub cmp xor cld ret sub inc or dec cltd mov sub push push shll rorl loope jge push aas imulb ret inc enter inc cld or aam or jb std loopne inc sti nop fs (bad) cmp inc push add cmc clc jne add pop aas mov mov xor mov cmp pop xor scas dec mov or call mov repz inc in nop test jl push daa enter jmp push xor call dec add data16 fisubl mov push in xchg inc add xchg xchg fidiv inc xchg xchg mov dec adc pop roll inc aam les sbb push out pop add jecxz sub jg int add clc notb mov xchg fidivl dec and test sbb inc sbb xor inc pushf in push sub orl daa out inc aam pushf in lahf or xor enter sub in push fwait je pop inc xor xchg adc stc mov pop xchg out scas sahf xchg sbbb xchg mov test in sbb mov cmp jg and ss dec dec mov in sbb add pop loop rorl mov cmovns mov mov (bad) dec xlat imul cmp xor or mov sbb adc subb pusha hlt sbb xchg push pop daa ja adcb mov xor push addb pusha sar out lea push (bad) or decb lret adc enter add mov out mov xchg or mov in jb out stc push call add fmuls loopne inc add jb cmpsl pop push and aaa call arpl or sarb (bad) imulb push mov adcb arpl shrb (bad) movsb add mov mov add shrl repz loopne sbb inc cmp ja aam push xor fistl inc sbb and nop mov es xor nop rclb bound and mov cld jmp fbld cmpsb xchg mov scas push adc cwtl jo jne dec fnop xor outsb pop and inc es add aad dec mov rol adc mov sub mov add ret lods int3 mov sub sub adc jae sub test pop jmp dec cmpsl and in mov pusha lock cmp stc lret std dec dec push cmp inc pop push roll lock xor push std jl push ret add and mov adc shrb push mov inc xchg cmp cmp mov adc add mov loope push hlt inc pop les (bad) out push sub and sbb ret fwait loopne sbb cmp cmp hlt mov pop pop sub inc or push pop clc push (bad) mov mov je je jl add sbb insb (bad) xor push mov cld inc sbb in scas subb sub mov and inc jg (bad) sub out mov mov mov std (bad) icebp xor fcomps add xchg aas cwtl xor xor cmp jo mov inc lret call push cld push adc jae push repz shll imul jl imul mov mov cmp inc and sarb lea test fist mov aaa xchg nop mov and xor adcb sarl sub dec enter pop add decl les loope push inc xchg mov inc push or (bad) mov nop add insl pusha mov dec adc mov aam fadds mov mov clc or movsl pusha pusha xor (bad) jns movsb pop inc or loope xor jo push test int cmpl or fwait mov cwtl adc pushf or add fistl inc dec test add dec fwait push mov fs pop mov inc xchg jmp lret or add cli mov adc mov xor xor fmuls cmp pusha sub inc mov and movsl jnp xchg or jl ja movsb cwtl xor sbb inc mov mov (bad) fwait xchg scas ljmp leave pushf push and push and ret sbbb repnz lods add inc stos clc jns mov enter push add mov test push mov decl mov push popa add out dec jb orl sbb xlat arpl mov jl mov mov lahf test sub clc sti add jl (bad) aas cld sbb push (bad) cmp enter cmp add movsl push fcmovne push push xchg pushf mov adc ret jne and push es add cmp or pop pop inc mov jl in add testl sub out mov cmpsb mov jnp insb cld cwtl pushf sbb or xor sub jmp scas aam dec push xorl xor clc out out dec bnd or icebp inc nop adc nop dec or mov add and fisttpl test add jns and shlb insb adc push ret add scas es cmpsl aam xchg lock mov repz lds aas mov dec lahf mov xchg jl je or dec add jp outsl lock outsl sarl lock inc sti sbb jecxz or and scas je je sti mov cmpsb and mov mov cld xchg lods inc jae adc (bad) and mov ficomp dec cmp cwtl adc adc push out mov pop adc add fs jae jle push mov inc mov and pop cwtl and test adcb pop sub add das scas jo testb dec cmp imul inc add in hlt das in scas add lods adc sub push cmp or sub mov add cmp adc mov lods add fild or clc aaa or xchg add insb mov mov lahf (bad) or (bad) xor cmp stc pusha sbb int (bad) mov cmpsb cmp (bad) scas add cmc mov add mov into xor (bad) xor push insb popa lock jno xorb cmp dec mov xor mov stc push test sbb movsb mov push xlat sub ds stc int3 xor fbld cwtl jl jl sbb inc jo add or push call xor push clc bound orl dec subl and mov dec insl mov mov sub scas lret int3 inc xchg push in push je xchg adc push add mov add cmp jl push in adc (bad) movsl movsb pop pop psubsb cmp pop scas inc packsswb fcoml mov xor sub movsb sub adc pop or cmp push mov pop imul jmp push xchg cmpsb lahf subl fs push xchg jno xor add push push mov or inc mov lcall or insb movsb faddl cmp push sub adc mov sbb cmp pusha scas jp lods call or add add cmpsb cmc (bad) push shll inc jmp imul outsl sbb pop aaa mov cld fistpll sbb mov dec test mov xor scas dec insb sub stc dec inc push cmp sahf or jbe xlat sbb xchg xchg ret nop mov rorl adc mov pop sbb mov inc ljmp fs sub push mov add fisub lock pop lar mov clc pop or cmp jge inc inc jnp je xlat pop mov push fcomps ljmp push pop pop cmp data16 hlt sub cmp (bad) inc jmp mov pop mov xchg or pop jne add in mov push femms inc mov outsl xor in pop (bad) out mov dec pushf inc push and sub nop pop (bad) hlt or pop xor subl and aas or ss dec lods and lods dec test push insb cmp or stc mov pop jno xor leave pop scas cwtl and lock lock daa insb push or mov or cmc add mov aaa shrl sub xchg sub repz into jns inc cmp sub pop ja cli sub fucomp jno addb ret xchg fdivl add jmp xor inc inc clc lret cs lret add int3 dec lea or les mov xor and push dec pushf nop (bad) cs stos scas add sub shll hlt mov cltd rcrl or in and rcr push push pop jmp mov jp pop ja push pop aad add in cmp insb cmpsb xor cli pop stc sbb lea call mov or cwtl push sub ss xor pusha sbb pop jbe rcrl mov shlb andnps out push xor dec dec je nop inc sbb (bad) or inc mov inc daa js std nop add sahf cltd dec add (bad) stos sti into push lds jne add sub cs push mov inc mov push inc xchg add sbb scas push ljmp xchg (bad) aas fldl mov or dec lock add add mov (bad) repz adc push adc adc sbb fdiv pop dec jg sbbb push fwait int add dec and sub popl pusha ja pop adc mov movsl pushf mov xlat cli mov adc fbld add mov clc movsb loopne or mov ret xchg (bad) dec xor scas inc movsl out mov dec cld outsl pushf popa cmpsl mov rorl int and leave fadds hlt add pop xchg (bad) jle push call mov pop dec ror cmp add jbe scas sbb shlb sbb sub push push scas add mov (bad) cmp or add add xchg jbe out push cmp mov pop call mov sub sbb mov pop dec cld pusha subl out push lods xor cwtl sub inc enter mov sub loopne rclb push (bad) dec ds jg push and cmpb icebp jne push push dec jo popf rcr push and and das sbb mov ss add pop negb push jp daa xor jbe mov dec jnp inc jno dec cltd stos psubsw scas sub jne pop push orb repz sub leave fs fildl jmp add loope mov add int3 rol cld outsb je sub dec js sub xor dec pop adc add or pop ret shrl or popf jb hlt xor and fadds pusha xor jb js add jmp and orl (bad) in dec add shr fstpl (bad) (bad) in mov movsb jle sbb mov bound push scas call cmp adc xchg xor fdivrl scas or push and dec or add xlat (bad) mov add xor mov mov mov (bad) xor aad jns dec sub mov mov cmp add xor repnz or adc push arpl test bound adc xorl arpl cmp pop push add xorl mov xlat jle test inc inc shrb mov (bad) adc dec mov adc push and scas int3 xor pushl xchg mov adc je push mov ds xor xor loopne xchg jno,pn mov add cmp xor mov roll inc add add and cmpsb xchg imul push negb mov das movsl inc lock ret gs rcrb mov js cmp dec push inc add sbb dec es xor and and and add call enter push hlt mov ficom dec xchg add (bad) push fisubr or inc hlt mov cmp mov and dec test mov pushf xor divl insb xchg inc mov push outsl add ret mov and inc lea mov bound cmpsb stos enter jo or pusha push gs ret dec pop jmp mov hlt inc cltd cmp add sbb rcll mov lcall js xor jecxz dec xor jl pushf xchg ss and pop fsubl add dec dec dec in test cmp rclb push pop push push sbb pop sub ja bound fcomps test je add push lea fsubrp or sub mov dec inc in inc and mov xor mov and fs pop inc test dec fsubl sbb dec cwtl xor inc fmull or sarb scas push js test das fwait add mov xchg jge adc call pop int (bad) fild pop aam push dec push jnp and mov and fadds daa loopne (bad) inc or das movsl pop rclb clc lods add scas mov js push rolb (bad) or pop push add aas or fcmovnb pusha js js xchg (bad) adcl push or xor outsl jae (bad) aaa xchg stos nop mov and (bad) cmp test enter adc push mov ss rol mov adc adc xor adc repz pop adc movsl add dec das (bad) pop or test out fnop dec rcrl push add dec push jno dec orps inc nop xchg mov cmpsb clc mov int inc aas in (bad) xchg adc mov jge mov inc iret xchg data16 inc xchg enter add jo pop cmp dec jns and test rolb cmp dec pop mov sbb xchg les or sbb cmp jmp cld add fs gs into or add dec imul lcall lock call pop dec jbe and dec push mov cmpsb cmc cmpsb lods inc outsl sahf and dec call push xchg dec adc ss popf or je nop cmp lret aam mov xor inc xor aam add mov aam add arpl add mov xor inc fmull add mov pop jl push push xor stos pop jecxz jns pop in inc mov cmp aaa jl dec stc add in lock add je pfmin mov outsl std pop jecxz dec dec push or cmp loope movsl bnd add dec int arpl ss sbb ret inc dec adc add rorb in xchg xchg cmpsb adc adc (bad) cltd mov mov jp hlt or (bad) std mov aam in jecxz and jo push mov orb jle rcl in movsl mov in mov mov mov push nop dec cltd xchg leave jl sbb call int xor es aaa insl arpl adc fwait push dec in cmpsb push movsb dec sub sbb push push (bad) jg xor mov ja nop adc dec inc test dec sub repz and sub or inc mov pop insl imul sub inc adc (bad) or cmpsb or call data16 push inc enter mov pop sbb pushf add inc xchg adc or push mov jb pop jb add ss stc out hlt cmp pop and pusha and jns push stc repz lods xor sub jbe jnp pop pop xor xchg jno dec lock ret xchg movsb hlt fsubp clc adc push sar inc cltd clc in clc (bad) xor (bad) mov and sbbb mov cwtl sbb pushf ret mov dec mov nop mov pusha cmpb scas cmc adc test dec add cmpsb cmp lcall (bad) mov inc scas xchg xor bound sbb and imul mov mov (bad) in call xor push push cmp mov call add xor add imul fmull cmp dec int3 sahf inc inc pop pop dec fsubrs fcoms gs lcall xchg xor rolb ds jo in adc and insb mov mov outsb mov (bad) mov (bad) mov jle ja xchg repz mov push nop push dec in inc sub push call outsl push jl mov dec daa adc and (bad) or mov into cmpsb lock lcall call cmpsb outsl sub inc pop das aas nop or sbb jp popa sub sbb fdivl mov or xor jp mov pop lods mov aas xor dec adc pushf std int3 or dec lea addr16 mov pop cmpsb xor fisub mov dec test mov cmp nop cmpsb fwait cwtl push nop test xchg push inc mov (bad) das xor add mov pop pusha jae push inc inc inc cmp adc push adc das xchg add xor add jno add mov or cli dec fadd jecxz push mov or mov clc jle push data16 pop js (bad) out push (bad) mov cmpsl cmp es lret imul push cmc or mov jle mov jecxz jo mov sub pushf adc fistpl sbb add jns add je or inc sub or add jge add inc xlat push sbb dec push cmp push mov add lds pop mov das mov pop mov cmpsl iret shl fisubr imul add shrb js pop in aas add cmp roll leave dec (bad) lahf mov rclb add jecxz push aaa pop lret test inc pop sbb xlat enter pusha mov sub adc ja lock push ds fwait movsb pop mov sub out cltd test fldcw movsl mov stos pop adc sub arpl pop in mov int out cmpsl pop sbb nop xor adc push enter xor push loope jne or pushf pop adc jge pop popa jb test add mov and cmp and inc xor lds mov cmpsl xor lret ret (bad) (bad) (bad) inc and cmp sub dec push cmp sbb sarb addr16 cmp rcrl inc cmpb mov xchg inc mov sub cmp mov cmp lods lahf sub ret and es mov mov insl in add jg pop (bad) out add insb add cmp xor mov add pop xchg and and xlat stos (bad) imulb aam and pop mov stos lcall sub icebp add cmp inc mov out sbb mov xchg cmp in push add mov sarl les xchg xchg sbb mov nop insl dec les add out mov testl out in bound push add or adc orl int3 test pop adcl mov shlb sbb push xchg or in sbb adc add sbb jl push mov cmp dec ja or nop add insl ljmp cwtl cmp lock xchg mov and lret adc stos fldcw (bad) adc daa mov popl push ret pushf out jmp mov clc out fwait add or mov rol pop dec (bad) int3 adc in mov lods daa je dec test out mov add jns rcrb mov add push (bad) jmp pushf mov es stc cmp add test insl add fbstp loope sbb inc cmp add lods mov xchg sbb mov and add pusha add push sbb pusha fcomip xor mov movsb cmp adc outsb popl (bad) pop lds add ljmp rorb dec lahf in out test mov inc lock or push jp add mov lahf inc add xor cmp jb insl div mov std add rcrl dec sub dec js ret in add fwait inc pusha and push hlt inc aam movsb xchg enter sub adc mov cmc rolb dec or cmp or xor mov in sbb inc mov call mov in js pusha jo (bad) adc inc xchg mov push (bad) xor into cmp cmp aam adc or xchg push out hlt push jo jnp aas add xchg test xchg test les sub addb xor daa rorl mov sub jae jne push mov imul clc add insb mov sub pop xchg jmp popa adc ja fsub fwait sbb dec in or andb outsl jg add js jecxz push in sub add push and fsubrs sbbl pslld lea fistl push shrl jb mov cmp or adc vmovapd jne sub mov or inc call mov divb xchg add fldl es add pusha jle pop xchg sub mov jns jge xlat mov shll and out sti xchg clc int xor cmp pop cmp add in adc outsl daa out and add pop fcomps aad lret jg rorl pop cmp mov fwait test test add cs and enter out mov add fmuls cwtl js jmp pshufw imul add or dec dec mov lock or lret add (bad) insb inc cmp and xchg fidiv data16 jg je mov sbb sub push push inc in mov adc cld mov bound mov adc int3 cltd lret dec jbe xchg mov dec jb sub rcrb mov aam pop inc push ljmp out repnz add jmp clc or and ss pusha add mov test mov clc fcomp jle repnz pop push mov xor cmp icebp add ja inc sub je pop pop out pop fnstsw adc enter and inc mov push loopne lock lret jns inc adc cmp stos mov lea adc dec or push add (bad) inc mov inc data16 mov or ss add or popf inc and mov lahf xor (bad) mov mov cmp add adc jmp xor mov rorl cmp sahf lahf js or mov xor dec pusha push ja fdivrs lock mov rcr xchg ret xchg mov cmc mov inc mov popl or pop cmp lret lahf aad std cmp bound and jp addb fdivl test movl sbb mov add or out dec xlat movsb mov xchg add cwtl mov and test pop dec xchg pop mov sub pusha popf cmp fmuls test subb fadds insb pop test je cltd adc sti mov popf or mov or adc fldl add fidivl fsubs adc or in into xchg mov cwtl xchg mov adc movsl jmp ror loopne adc sbb add mov cwtl or mov jmp getsec pushf loop (bad) (bad) cmp pusha and push adc ljmp test adc xchg pushf add cmp and std lds add aad mov ficomp add or push jae in loopne fmull xor test and incl mov aam or rorb pop add mov hlt clc ljmp sarl aad pop xchg adc inc hlt add rclb inc sbb jae sbb pop pop sbbb xchg addr16 jecxz mov jnp sub mov sbb out and mov jno (bad) cmp add les jl add sti adc (bad) aas mov push sub clc mov sub ds ja fsubrl or lcall dec enter jle ds rclb sbb pop push push pushf lcall rorb mov mov (bad) sub jns add lock frndint imul lea aad sahf mov add mov into or dec xor mov (bad) mov pop sub pop sbb and call call add fwait loop cmp mov lahf xchg shrb es push and push inc push jbe loopne mov and push pop in (bad) js inc sbb sti pop insb sbb xor (bad) mov and inc xor arpl sub imull xchg fdivl xorb stc xchg sub fcoms mov cltd xor insb sbb cmp int3 or dec pop and push test test mov out mov dec dec mov push pop divl inc mov xor dec xor add pop pop dec push cwtl enter hlt add or xchg xchg jae inc bound aam pop cmc dec test stos mov pop mov mov dec nop addb daa sub fsubs lds cmpsb jg sub inc adc adc ret cmpsb (bad) mov stos cwtl xor lahf sbb inc clc call insb push pop dec iret add jge cld call push pop inc lods and les cltd call pop and pop adc jno jmp mov jne adc stos xchg pop jno push gs jmp pop call rorl and adc dec or mov loop dec or into jecxz negb dec aas (bad) jbe insl xor inc ja mov sub pop or mov pop jecxz push adc lock cwtl add icebp xor pop sub movsl in pop jl pop sbb or icebp enter jle push shll arpl cltd cs pop adc pop out int3 add or stos add mov jo test daa (bad) aaa enter je adc pop push sbb push pusha inc (bad) nop lods aaa push pop pop pop xor or sbb imul inc and mov out sahf dec sub adc fadd enter lods xchg adc xor incb or and hlt ret add xchg test stos mov js,pn jl jl xor js pop or ljmp mov cmpb or mov and loop cs test lock (bad) mov mov subb jo add add ja inc xor cmp cli push fmull mov sbb clc (bad) popf test hlt aam sbb add mov xchg aam dec aam mov jno inc clc sbb jg enter fldt in sbb je add idivl add test cmp rclb outsb jb xchg cs fsubr cmp subb out dec shrw nop dec or sub out xor mov jns push mov and jecxz iret add fnsave pop mov pop sbb push sbb stc jmp dec adc sbb adc lcall inc in jmp or imul sbb movsb fisttpl shlb push jle dec cmp sbbb adc enter jno jnp inc sbb ficoml aad dec cltd pop dec ficom (bad) xor loopne int3 fdivrl je adc pop pushf loope add push xor inc sub dec lret idivb push aad mov and dec or cli pop mov fwait lret mov mov push cli pop int mov (bad) and sbb inc pop das pop in add mov mov dec andb fdivrs pop pusha jle add sbb xor and mov shrb sub mov sysret dec adc addr16 fcmovne test out rcrb and comiss adc mov add fidivr mov mov dec movsl nop add mov fwait mov sbb test mov jg mov gs mov mov in or lock dec dec mov insl hlt xchg add cmp xchg cmp pop inc ja or add cmp and dec jmp add ljmp aaa nop or jle mov nop adc xor sub push pop adc inc lea or movsb mov add outsl jmp push add xor xor fbld add sbbl (bad) jp add bound movsl (bad) xchg mov add adc (bad) out xchg mov pop (bad) jo fs dec int3 dec add push dec or nop movsl sbb adc rcrb imul mov xor add jo je mov jg push sub push lcall push cmp lahf js add jne push adc jbe (bad) les add xchg dec mov dec fwait jns sub xor mov or bound das (bad) push xchg enter ja push in push inc ja lods mov sub (bad) pop mov aas dec roll push out xor sahf mov adcl pop and xor inc push fidiv sbb loopne jmp cmp xor mov jbe sbb mov int3 and and sub (bad) and xchg test ret mov adc and rclb add aad push (bad) lret cwtl xor pop in add imul jle cmp xchg sub loope and mov pop cmp add adc loopne xor orl jbe jmp fisubrl mov mov xchg jle mov mov shrb fwait add js sub and push mov push sbb out mov jecxz out sub mov ret outsl and dec insb add popa adc pop xor mov xchg mov jae sbb mov shlb test adc adc xor cmp jg and inc shr jecxz into mov in xchg xchg insb sbb cmp add mov mov or outsb pop mov xor sbb pop xchg nop add cmpsl call dec fwait lret cltd inc mov outsl push stos mov mov cmp popa fucom cmp add mov sahf jl jmp lret inc mov out je mov shll lds pusha insb repz leave aaa sbb or push adc sub jle cmpsl mov jl test xor iret jmp ljmp dec lods lret xchg pop jb in dec xor mov sbb or xchg sub (bad) test add push test aad push sub xor xor shlb bound lock push xor pop and sub leave mov push mov mov adc dec aas rolb lods inc push sbb sti lahf repnz xchg (bad) dec xor mov sub adc iret ja xor sbb inc xlat mov and pop xchg mov lcall jbe int add jecxz ret pop inc sahf inc cmp mov je enter je mov sub add pop fcoml mov or add mov push push dec insl push test or inc sysenter push xchg push cmpsb pop sub mov js loopne rolb pop rcrl in rclb enter push bound fdivs fsubp stos rcrl aaa inc sub lea inc fs add scas mov insb or je enter mov test hlt xorl fcoms and mov xor add jbe inc mov adc dec je dec and out jno,pt pop xor jo je fcoml in nop add arpl mov xor insb or cmc loopne out notb jb icebp jecxz dec sbb add pop pop out (bad) les loope test sbbb mov lods inc stos movsb mov mov bnd xor pop lret test fist cmovs push dec inc and (bad) leave lods jns pusha xor dec enter lods adc test mov xchg in xor es push or jle movsl jmp test int mov lock sub cld loopne pusha mov sbb ja stos les mov mov fcoms orb adc jmp mov mov mov mov or xor pushf cwtl cmp pop sub mov push push mov jp mov xchg nop lock xor and push pop ss or daa mov cmpsl bound mov adc add loope mov pop mov and cmp out fwait jo and push fiadd (bad) or icebp imul pop (bad) test inc mov cmc dec and adcb add test add inc mov fldenv xchg dec add sbb jne lods repnz aad dec insb fcomps pop cmp mov and out inc or mov sbb adc and fldenv lds lcall (bad) bound inc fsubrs add out push (bad) xor mov pop mov mov xor inc mov xchg lods and mov jno fs mov xchg ret jecxz test dec dec and cltd insb pop enter cwtl insl adc mov inc cs aam dec ror xchg lods cwtl dec adc sbb sub mov adc push lock les push popf fbld loopne or sub loope loopne nop mov push sbb inc mov push push out cmp je adc mov sbb insl and xchg adc pop mov call les cmpb push ret out std xchg xor and mov dec loop or mov mov loopne rclb sarl std xchg jnp jge adc adc lods xor lds adcb rolb les adc inc mov shlb and jbe or xor dec inc and pop leave add push jecxz addb or jmp sahf lock dec in sub mov cmp test ds sbb xchg fwait add xor add pop mov hlt loope lods and pop jbe,pn add (bad) jmp inc mov loopne int3 pusha xchg out leave js cmp xor dec call cwtl (bad) mov pop add setb fcoms testb sub bound rcr cltd jns or je into ficomp push addb add xor fwait mov out cmc inc adc push movsb mov mov mov mov push inc mov into dec (bad) call sar cmp addb cmp loope add jmp lock std lock xchg movsb pop rorl mull or or jo pushf push in pusha push xor lods mov scas xchg and add xchg bound imul jmp pop adc mov divl xor outsb dec inc je adc pop push or jbe mov (bad) mov mov sbbb adc nop xchg add inc lahf adc add sbb dec jae adc add ss push loop xchg dec push icebp addr16 pop icebp sub jmp fildll stc add cli push push sub les pop adcb mov xor fs xor lret xor dec jg and mov (bad) lret repnz mov cmp sbb or add jne fdivs rolb dec rorb adc mov (bad) inc scas test in xchg add (bad) sbb fnsave adc jg pop dec sahf aaa mov push rep cld mov test and andb xor cltd nop or lds les pop adc aas int3 pop aam add pop int3 or xchg pop ss int3 int xor mov loop gs sub lret outsb add inc mov add sub enter lret pop and pushf adc cmc fstps push sub cli mov jle insl popa in movups loop mov outsb or mov dec add js adc cmp loopne fisubrl test sbb subb into popa pop add dec add xor pusha mov adc in gs lret test inc xlat rcrb sbb nop add jmp mov std dec push pusha repnz and andps dec imul jge sub dec pop inc and add sub fsubrs (bad) dec dec fsts add sbb insb scas cmpl mov pop fcompl into frstor cmp mov out mov repz pop mov add cltd dec js lret and stos xlat lods iret cmc sahf pop add push xchg push es loopne cwtl imul sbb out js or xor sahf jno jns sbb icebp pop xchg lret faddl inc daa rcrl dec cmp fimull push add mov scas lds add pop lcall roll mov dec pop push out push and hlt ret mov fldenv int3 test pop aad cwtl mov aaa push int3 xchg cld mov xor clc xchg stc dec mov mov lcall int3 pop xchg pop bound repz inc ret xchg lock nop popf or cmpsb lret jp (bad) int3 test stc xchg sub mov in mov jae cmp or jbe sub addb idivl int3 orb mov dec lds sub or repz mov adc push lcall data16 mov inc sbb inc xor movsl cld (bad) push shrl cmp xchg nop mov cmp stc dec hlt dec mov add rorb rcl jg pop and leave (bad) and mov add xchg aaa add adc int hlt and stos sub jo adc and mov dec add fnstsw add movsb pop nop sarb mov push stc mov push sbb or leave push push sbb ja jle (bad) sub and inc sub stos mov or push mov movsb inc ljmp adc (bad) ds xor aaa jmp in jle xchg daa jecxz xchg mov ja adc mov fldenv imul dec pop cltd or dec popa js jno enter mov pop pushf fcoms xor push inc jmp adc adc sub adc jecxz push xor es mov pop sub ja push sbb adc adc pusha fcomp out lret xchg outsl xchg test pop cmp inc push xor icebp xor pusha dec or adc fdivs cmp pop out mov cmp push scas pop xchg or cltd add icebp shr dec sbbb cmpsl in adc insl jb cld nop sub fcmovnb cmp mov hlt or lcall inc (bad) pop mov ja mov fbld dec add repnz xor rcrb adc sbb or xchg cmp in xor aam stos jmp inc loopne mov push pop ret lock add xor xor pusha loop sub and push ret cmp ds sub xorb xchg test and and sub xlat add mov test out cmp daa subps adc adc or movsl push xor subl adc out xor inc push inc popa sahf xor xchg inc add lds mov adc or mov cmp add (bad) sub movsl jbe cmp inc in outsb scas sub xchg sub outsl movsl mov cld cmpsl inc cmp sbb or sub push shrl lret je or rcr je outsb jbe push mov or mov cwtl fild in add pop add add incb shrb das mov inc mov ds adc inc pushf lods nop sub lcall dec cmp fild dec mov add div in mov insb inc dec mov cwtl jp popf inc cmp lock mov add jne sbb out add aam scas or test icebp add lods andps add push lods xchg push jo push test aas scas lret je int cld cmp and cmp inc cmpsb xorl adc xor fmull cmpsb test js sub push ret (bad) popa enter mov je adc sub movsb inc jns lods insb lods or xlat in adc ret sbb clc or cwtl add xor dec jo rol hlt ds int3 rcll inc cmp scas inc test inc add pop cmp rolb xchg lods or lret sub inc test push and inc push addb xor in mov ja add pop daa jmp xchg and leave int3 in mov add pop jns sub movsl fcmovne in push add inc int3 enter mov cli inc jl mov inc add cwtl int3 cmovo cld add or xlat pusha std mov pop (bad) gs mov ds sarb inc sbb inc cmp pop sbb dec mov inc cmp push sub cltd xchg aam add jns dec stos sub sbb sgdtl adc dec sarb orl pop pop iret test and (bad) pusha lds mov inc rclb push int pop orb and push fs jle push addr16 leave sbb inc lcall bound fsubrs lret pop add xor orl (bad) int inc lcall cmp push xor xor arpl add sub pop stos rep loope test inc push (bad) js add add or dec pause xor dec popf or cmpsl push js (bad) adc jo and scas adc add jmp mov test add stc inc sbb sub aad and add (bad) repz pop jno mov cld jge add adc jno add ja xor adc sub xchg int3 loop aam or mov in movsl (bad) std leave insb sub mov cmp xchg and dec mov rolb sbb lea lock sbb dec fadds cmp jo pop rcrb mov cld cwtl dec js inc pushf movsb dec inc dec (bad) xor xor or mov dec js lods cmp pop ja lds arpl dec (bad) in and dec sub cmp dec (bad) loope mov lds clc push add lods jo jns sub mov pop lock inc dec or cmpsl cmp push pusha sbb jo inc rolb and pop je imul xchg out add pop jns pop iret pop dec xlat fadds test movsb mov cmp xor push aad movsb pop cltd inc pop lcall vmovupd mov or call mov mov popf sbbl movsl jmp cmp and push mov outsb pop pop into (bad) xor pushf mov add xor mov outsl sub call int mov mov hlt cmp cmp ja mov gs leave xchg adc xchg cmp lock pusha inc clc cmpsl xor test fcompl inc fisttpll cmpsl fs xchg mov (bad) in rolb mov shll enter movsl pop lret movntps inc lret push rclb and lods test rorl and (bad) sbb add lcall sub xor xor push cltd (bad) enter and fldl and xor or mov xor xorb data16 pop lret inc xor add fcompl das sbb or or xchg test jne adc pusha pop xor push arpl add fs xor lea ja,pt pop xchg mov bound (bad) jbe setne sub nop adc pop (bad) sub sub imul mov decb pusha insb dec jo add inc fs adc or mov jl dec test outsb pop fimul push lret mov and dec iret leave mov or pop pop xchg dec into push test add imul dec jb xor aad mov jo sbb test and ret es jg int jo and psrad shr out and mov jns or xor xor outsl or vpunpckhbw lods lret adc dec test in daa movsl sbb adc jb add outsl push or lea add gs mov adc test add fmul shrl push (bad) jl mov cmp mov clc or cmp cmp xor loop insb or pushf mov popa (bad) inc lcall out ret jo mov xor in add lcall movsb mov lods repnz rolb (bad) jae dec sub testl int3 adc xor test js or dec jbe add push dec int push jmp jg inc adc rcrl jl data16 dec lods enter in inc pushf mov inc cmp enter push jno,pn mov sbb pop jmp les sti mov jmp cld mov xor jno lock out fnstenv mov lock out cld mov add mov add popf sbb in xchg cmc add cmp pusha test xlat xor js push jae add push xor pop adc cs hlt push add int3 (bad) cmpsl mov inc out adc add xor xchg cs arpl data16 add cwtl hlt in int cmp sub push adc int3 and and lret add xor push adc pop mov and push dec rorb mov and sub fsts mov cld sub xor lcall xor mov and loop mov cmp fsubrl mov dec sub or xchg hlt (bad) js fadd lds fldcw lock push adc (bad) xor loop pop gs jmp dec push enter mov (bad) rclb mov jge,pt sub push int3 mov mov mov movsl sub adc or xorl sbb lods pop mov adc mov loopne push adc or dec mov xor jge add mov scas xchg sahf pop fmull mov les cmp and dec xlat sub rclb stos mov arpl sbb bound movsl pop cmp lahf loopne cmp sbb add loop pop and ret ror jno cmp loopne cmpsl popa and pop ret adc pop add cwtl lret or add sbb ficompl dec inc adc orl loop movsl ljmp mov or cwtl pop enter fs (bad) mov stos cmp pusha pop inc pushf pop jae add out in push mov mov jp and jne push lds sub or inc push cwtl clc jb adc pop mov int adc add and aad enter in xchg add lock nop lds repnz es or dec pusha adc dec loope adc and add jmp js or les movsl jne or das scas mov pop and sub mov inc stos popf fnstcw testb push pop (bad) in mov outsb fnstsw (bad) sar or mov mov or stos inc inc xor repnz jne mov outsl fbld cmp mov test (bad) dec std pop enter cmp in adc xor pop xchg mov loopne,pn fiaddl fsubs add test imul or cmpsl cmp and je xchg adc test dec dec faddl or popa out fs adc add sbb rolb xlat and loope call lods pusha or loop fcomps and inc test rcrb sub insb adc dec in sub cmpsb dec and dec in insb aas jo xchg test mov (bad) sbb dec (bad) in mov cmp call adc js inc and sub dec xor clc outsb dec lcall cwtl test and (bad) adc inc pushf dec rcrl add imul cs add sub sbb movsb (bad) xor add xchg (bad) adc jmp cmp xor sub aas scas dec mov mov out nop add ficom popf add cmpsb dec aaa and js and sub push dec mov shrb fyl2xp1 in (bad) sub pop pop push or inc in lret inc mov insb add lea mov mov pop mov test std or sahf push mov xchg lock test addr16 xor mov in fmuls les es mov xchg cli imul (bad) idivl inc add movsb popf es aas sbb xor pop inc and andb sbb stos ja pusha mov test fisttp popa fsubrs fsubl rclb loope int out lock jns in push mov add cmp mov (bad) int3 mov adcb push imul pop loopne scas jno lock push dec jle push cmp int pop pop (bad) pop stos adc inc adc xor movsl loope push les xor cmpsb sbb fild divb mov out jl fdivs sar fistpll add mov xor mov and lods mov movsl negl and jns add nop sub pop mov lcall outsb outsl insl add movsb clc push rolw or push into mov fadds mov nop add loopne test cmpsl add push and jbe mov mov add xchg sbb push fdivrs add js ret stc mull adc xchg or icebp stos xorl clc jl add aam loopne add aaa daa popa in sbbb out jmp pop inc cmc jmp add in dec in mov and popf insb pushf dec loope mov or out xchg mov dec add fadds xlat (bad) pushf hlt push inc or inc clc in mov add imul psubw daa mov jb leave and mov dec or leave jp sub fldl jl enter dec pusha dec xor loopne insl or xchg cmpsl stos adc xor clc dec inc push cwtl movsb js add adc xor sbb inc fsubrs add idivb push add outsb push xchg mov add mov dec mov mov mov fstl or cmp clc add or je mov ret cli mov pusha cmp and and ds sbb pusha inc adc inc cmp sub stos xchg dec jecxz ret mov jmp xchg and rorb out cwtl sub lods dec jae mov lahf and push dec xor fildl movsl dec cld mov (bad) or sarb call jne jl dec pop add and movsb shlb mov add inc and insb and jae push scas jle in push cmpsb lock out and clc pop adc xlat add in subl jno jo dec int3 mov adc mov sub mov or jl pmaddubsw xchg sbb mov dec mov add add cmp add push and cli fstps inc xchg subl mov je or push inc sub mov pop add mov add into adc lock inc cld add sbbb push or in mov xchg loop pop sub adc imul or js dec rclb xchg fadds in and mov inc cld shrb add ficompl pop xchg pop outsb pop and jnp sbb imul ljmp and stos out push js addr16 adc nop rorl hlt mov stos push in addl pop je jno movsb push rclb and sbb and inc int3 in jns mov imul cmp adcb out and ljmp outsl inc dec add clc xor repnz pop jns add nop sti fstpl dec jmp dec js add mov or mov lcall loopne in shll mov mov push and push push ret aad (bad) sahf xchg jae fcomip fucomi mov (bad) mov sbb mov je push push (bad) icebp push add (bad) push cwtl cmp or setbe lret inc loopne sub or insb mov cmp leave jge aam test or dec pop popf mov in dec inc push out lock cld in scas add and push inc xor and insb mov add popa dec rcrb or pop mov js sbb fildl jb repz and and jns pop lods add stos xchg rcrb cmp add pop jl cmp insb cltd push mov add xor pop fisub push loopnew or fcoml sub adc jmp mov lock insl shrl pop lods aam inc sbb xchg mov xchg out orb and outsb jne pusha add xchg out pop icebp add imulb xchg dec push push mov enter insl pop jae mov lret adc popf clc or jecxz in add mov lea jnp ret aas sbb jecxz dec add insl js fldl subl xchg shr jnp push (bad) and icebp or add pop sub xlat mov jno or fadds inc out rcrl jg andl sbb dec sub sarb int jecxz ret inc mov mov push pop loopne and pop add sbb (bad) cltd loopne lret adc add cmp nop pop adc rcrb jp inc fs loop out mov xchg fcomi add scas jne out cli pushf add and sbb clc movsl mov add cmp mov xchg cmp scas pop and dec xor xchg add (bad) xor add inc js jnp xor adc dec dec daa sbb imul push ucomiss xchg xor pop pop rcll add xor icebp push dec sbb adc test daa int3 xchg imul xorb pop xor dec arpl and sbb cmp rorl faddl or mov jno ficomp movsl cmovno mov xchg sbb andb xor or and pop dec pop inc (bad) shlb aas je test aam lods (bad) mov dec add insl mov add mov adcl mov sub or addl rcll dec cmp inc jp cwtl dec adc test mov push pop pusha sbb xor dec loopne enter adc test loopne bound sub pop add adc pop adc dec lea movsb cld mov lcall push inc gs xchg es imul sbb fdivrp add cmp iret pushf xor mov rclb or movsb and fcomps add xorb xchg stos mov ret add dec jne aaa repnz sbb push pop add aad xor int3 popa out lock mov lahf js add (bad) repz mov loopne push mov out pop inc inc cmovs loopne mov loopne int3 cwtl movsl sbb fwait sbb pusha (bad) add xor fbld xor out mov notb outsl addl call push scas add sbb and pop push outsb cmpb jge sbb arpl sbb xor add jbe je fadd add push fbstp cltd fstpl push lods dec into or scas pusha pushl cmpsb daa or and or or push idivb iret es mov xlat fcomp shrb (bad) in (bad) xor xchg mov ds mov popa in mov addl xor and stos gs xor xchg adc fildl enter or xorb pop xor pop sbb (bad) xor aaa flds or movsb pop sbb pusha xor addr16 les mov inc pop add mov add dec jo push cmp add (bad) loop js negl hlt rolb repnz lret dec add je aaa jne pcmpeqd sub cwtl fsubs add or das lea xor or push adc add fabs xor mov leave xor xor out sahf xor movsb dec push mov and nop or and mov mov push out fistpll mov mov inc jnp fdiv dec push or enter scas adcl subb fmul add inc cmp xchg add (bad) addr16 add int3 mov fs mov sbb push jne push hlt sub sti push lea popa lock dec xchg jo mov add add loopne add loop ret cmp add fcomip out imul arpl add int3 add popf out repz sbb mov pop aaa push sub les mov inc add pop and xor sub test push divb lock nop pusha push sbb adc or lret jb add fwait int3 mov pcmpeqw pop mov add sahf out cmp mov (bad) dec push dec rcr jo sbb xor or andb repz cltd in das add mov insb inc mov leave jl mov pop add add movl sbb faddl mov jp stos pop dec frstor and mull push daa test (bad) or loop sbb stos test and adc es lods add push jo adcb in fdivrs jl jae jnp les rcrb fyl2x sub cmpl mov mov add or int3 (bad) mov dec xor and pop imul push adc int aam iret add pop jb lea dec mov imulb push pop push scas add and mov dec or lea lret enter adc and cmp je stc add adc fs add cmc shlb in stc (bad) nop or lret xor pop js mov outsl lret scas jl (bad) (bad) stc cli fdivrs sub sbb jo test sbb mov mov int add negb add pusha or xchg xor cmp dec lock pop mov mov and fs rorb test xor and add fsts adc add fdivrs leave stos add or cmp or xchg ret add inc sub mov into pop addps mov mov adc add xor cmp push add jle mov lods jg mov add (bad) jge add orl pop and push imul inc enter dec adc sbbb adc mov push popa les in inc xchg insl roll test test add pushl cmpsb scas ret test mov out mov mov in inc popa popa ret movsl cmc push int3 or stc nop sbb pop rcr add sub xor je cwtl cmp inc test mov es jnp enter jo inc frstor cmpsl into push jl mull mov sbb jo pop arpl cmpsb push cmp cwtl add pop pop es and out jae and or addb dec dec cmp pop xchg in movsb clc sbbl sbb in cwtl fsubrs sub aam dec xchg into jle mov xlat das jmp (bad) repnz push jno xchg xchg mov leave cmp inc dec push (bad) jo mov sbbl dec andb add add sub mov and mov cmp inc loopne or faddl inc insl lods je (bad) jbe dec fistpl inc lock jge add hlt xor frstpm(287 rolb enter and cmp cmp mov push repz and adc sub push dec (bad) fsubl bound testl xchg dec (bad) ja test aas add enter mull mov nop sub dec adc or dec je das add lods sub pop xchg les and sub inc outsb sti push ljmp pop pop das clc adc jne jnp and inc in fcoms stos xchg add jle sub xor pop add jge fcoml pop cmp pop test addl andb mov lds movsb stos int3 shll mov je pop mov test jo cmp pop in les ret popa push add sub sbbb hlt andl cltd popf or rclb jmp int3 bound popa in mov je jo test nop adcb pop dec and push leave addb add mov inc or imul imul je mov xchg cmp mov push sub outsl movsb add popa push sti or adc mov or adc adc push sub mov xor pop pop inc out pop push fsubs or jno test push pop insb mov pusha and jae rep and jno jg jo sub and dec lods ficomp and ds add xor mov pop ljmp ja mov push add outsl and mov mov mov and cmp andl push lret inc arpl jo lods scas adc mov adc jecxz sub out dec cmp stc pop (bad) or call sub and push pop pop in (bad) pop shrb nop add push xchg mov punpcklbw scas js and cmpb (bad) inc (bad) fadd enter rorl cmpsb adc js mov cmp sbb fmull fcomp jo daa dec pop or sub mov sbb pop rcl mov jmp fdiv add aas mov add push and in lahf mov std xchg shrb and js jmp sub dec fistpl dec add fadds push cmp xchg test and sub bound add jl and mov test add push adc mov dec or cmp ficomp fwait pop js mov push stos lock imul jns sbb pop std or pop mov add sti mov mov (bad) lock mov loopne aaa dec jp push movsb inc mov mov mov add cmp movsb adc cmp addb mov add sub add push pop out mov nop mov shr inc jmp and dec sub xchg add jmp ja out adc xlat popa test cs mov mov lock pop adc sub xchg ja int3 mov inc in out data16 into neg add scas jl enter cmp xor addr16 mov pop mov (bad) cwtd enter sbb addr16 jecxz xchg pusha jne insb sti xorl jl cltd sbb sub popf mov inc mov enter lock insb add fdivl ret add sub jl xor xor cltd scas xor jae popa inc xor scas jae outsl sti pop add and inc inc mov xchg lds roll cmp and xchg add cs add movsl add dec add hlt xchg add jno dec clc lahf (bad) mov imul cmpsl sub sbb dec inc xchg jle sbb outsb cmp mov mov imul or mov int3 or shlb mov ret lods mov push add xor (bad) sti or stc fdivrl pop aaa fwait jmp shrb jp push mov pop scas push lcall jno (bad) or mov adc sti lods adc xchg cwtl or subl aaa insb jns add out repz adc orl push adc add sbb and mov cli popf ret test mov add clc outsl icebp in dec dec add flds and lcall jle xor mov mov daa les cmpsl jg stos sbb ret mov in dec push aas jns mov jne adc outsb popa add mov clc (bad) in pop setne pop add lods sbb adc push (bad) insb sbb add ficom push push add pop adc add es xlat xchg sbb and add in stc fwait push test pusha frstor jns into adc adc or pop sbb mov ficom popf scas loopne pop insl add mov xorl add ficompl xor push rclb (bad) lods test or jo add movsl test cmp movups lcall push xor sbb rorb arpl cmp stos cld fidivl xchg (bad) sbb rorl add xchg lea fbstp in mov jnp das sbb xor repz or and in iret pusha sahf add movb inc mov mov std jns out adc or iret xor sahf cmp ret andb mov loopne sub fadds and das nop jmp inc mov out jl xor pusha adc sub imul push cmp and or dec je pusha lock jp adc or pop inc popa jo xchg mov and test repnz inc pop loope sub enter pusha xchg lret mov or frstor or pop cli mov cmpsb adc dec adc jnp clc cs icebp or mov jnp push dec call mov rcr cmc adc ljmp inc lea divps insl out cltd mov arpl adc dec aaa xchg scas pop sarb jmp rorb mov or add inc repz mov fs xor or adc mov test pop dec push cmovg mov sbb adc and ret or rol add mov js lcall jle dec call in dec mov xchg sbb pop mov add adc push cmp int3 stos fmulp and adc es inc xor lret test subl movsb pop mov loopne xchg mov cmp adc or iret out icebp push mov test ficompl pop dec jns dec push cli cs mov push ds pusha add mov mov fwait into xor and arpl mov int3 or jle push lahf hlt sbb out (bad) dec loopne loop push add and js xor xchg jge or addr16 enter or or in je iret xor outsl flds pop ss (bad) or pusha lcall mov lock movsb pusha and dec xchg jg add pop clc loop stos cmc shl push sub insb test leave cwtl jbe repnz and mov (bad) out jbe add xor add inc add add in mov nop (bad) xchg aam cli iret lds cli aam cmp ret enter rolb xor imul lret add jmp test mov xchg mov clc outsl jne std add sub xor loop test add outsb je out cmp jecxz jno jns cmp push fnop sbb mov dec ds js pusha je mov xchg fcmovu orb push (bad) jo xor mov mov and cmp push and or pop mov call adc lcall imul jns not sbb pop negb loopne inc js xchg inc jmp adcl icebp xor mov and scas mov mov or mov dec popa xchg and mov in call xchg popf loopne or and addb je adcl jp add mov imul div mov xchg cltd (bad) fcoml loopne lock pop add paddsw inc ljmp rclb (bad) hlt sbb test (bad) mov pop pop pop pop mov mov and inc movsb rcll js mov jge imulb pop jns testb fisttp popf lcall add daa add dec mov jnp add in xchg sub xchg pop or jno movsb flds xchg push cmc test arpl mov sbb (bad) mov nop clc add in repz dec adc push js mov pop mov and cmp push cmc and insb clc nop xchg or stos mov jo in xchg sbb test push mov xchg test dec loopne pusha mov hlt adc or xor push imul loop mov mov sbb inc lea hlt je push dec pause xor loopne pop clc cmp add aas xor adc and cltd orl fbld test push adc dec repnz or mov stc bound xchg inc js xor jl popf test insl je jno lods lret aas xchg cwtl outsl out add xlat add test jmp leave mov sbb (bad) fistpll and lods adc mov push aam jo call test adc in adc jne adc lret inc sub addr16 nop cli popa xor cmp add mov adc or lcall ljmp and mov cwtl cmp aas xchg lcall inc push clc jo jns and adc jmp fldl sub xor mov addb mov insb (bad) mov sbb mov iret inc pop out push bound or mov enter mov loop sub inc imull test xlat xchg lods add mov shlb rcrl push aam inc xor adc les jle or mov dec std sub outsl push outsb xor add inc jno cmp in push stc (bad) jo js and (bad) mov nop xchg lcall scas lahf pop sbb mov push repnz xchg les adcb xor js pusha add add mov in or push mov xchg inc aas call fcoml pop xchg sbb dec inc in mov and pusha xor or pushf dec (bad) push aam mov mov push sbb mov fnstenv add stos push js test mov lds push shlb pop lds or rcrl call mov mov out and add fsubrp ret loopne mov stc test mov dec les rolb loopne loop cld dec call add adc push inc xor push jo movb ds repnz xchg jmp cwtl mov shlb or add cmp out xor call loope imul mov adc nop int je sarb call daa pusha inc pusha je mov sahf dec cs negb mov imul call mov test pushf push movsb add push add sbb int3 (bad) roll rclb mov les push fmuls lock stos add sub pop std imul mov xchg int shl imul mov push sarl mov cltd and in sub sub and bound mov mov add mov dec and mov push fsubs mov aas pop (bad) out nop add adc insl cltd mov push addr16 insb and mov sub arpl xor aam mov pop ret xor dec xchg nop mov movsb pusha jp xorl dec jo scas out mov clc xlat adc outsl dec mov movsb or popf dec fs pop add loopne enter sti int mov adc mov inc mov into int3 pop or adc add dec mov pusha mov mov lods mov cld push pop add stc sub jb sub xchg add imul inc cld sub push and or mov mov stc arpl or sub inc cmpsb dec cmp call scas test adc in add into cmp push shrl xchg mov adc je push jl pop adc add ja xchg mov jbe add js clc mov push jnp pop add ror lea nop pop cmovnp mov iret or mov mov adc cltd xlat js stc clc pusha sbb inc cmp jmp (bad) xor sbb add or pop dec or scas repz or mov sbb xchg movsl in sbbb aas pop sbb test addb and mov add cltd pop jle and xchg clc adc (bad) pop push push xor push mov lret lds xchg add les jmp pusha push or incb hlt mov mov cvttps2pi (bad) int3 lds addb xor ret push cwtl cwtl jb or pop ds scas data16 sarb enter adc jns je (bad) dec out lods scas adc outsb adc mov icebp clc add stos fisttpll mov sbb lds rolb outsl enter jns lcall test (bad) push or js push ret paddusw jle xlat jo ds (bad) mov jo int3 sub shll test jbe sbb add jl notl popa lahf scas push mov imul xor shlb and xor fldenv stos bound push xchg in sub pop xor adcb push push test cmp test adc xor sbb add xor jo and fsubs sub (bad) pop xchg push pop jge (bad) lock in popa add arpl lds push nop ss mov cmpsb mov jecxz pop lods loope sarl xor adc (bad) and pop (bad) or pushf cltd mov lahf push xchg mov nop (bad) add adc mov iret les test insl push jo sbb adc push xor es test and jbe or xor data16 adc push mov and loope fmull test adc ret test out sub xor sbbb xchg push call or cmp jp add and in pusha insl idivl add mov lock lret push or add push xor sbb jp add add pop jbe mov aas cmpsl sub sahf out inc pop cmp adc inc int sbb jns cmp jae es int3 add or xor jmp mov lcall lcall fcoms fdecstp push xchg dec push mov (bad) sbb inc pop sbb pusha or push mov clc stos in sbb iret roll pop xor add or or ja fcomip fist icebp inc dec adc and mov jl cmpsb mov mov sub pusha call cmp push ret enter adcb test fs out add mov mov push mov movsl fidivr ret adc insl sub dec ficom xchg mov pusha adc add pop imul or subb imul adc sub cmp pop and mov xor mov jg sbb mov sub pop adc xor sub dec xchg stos aam adc or pop mov sub and je rcrb lea arpl adc call push dec push mov call jo stos jl push mov icebp adc movb dec jp lea nop lods fdivl test pop xchg add jns and movsb pop jl push push test insb cmp (bad) push mov ja mov push add add iret jae jns sbb lock pop mov adc add mov xchg aad jae mov mov dec (bad) jl add pop adc aas in (bad) sbbb and dec loop xchg pop add sub cmp xchg add or xchg push incl cwtl es scas adc rolb or push mov push in data16 push inc pop pop or pop (bad) mov dec add xlat and leave push mov pop fnsave pop nop mov jp pop (bad) test arpl out xor pop xor add pop mov mov inc fstl mov mov (bad) call dec xchg (bad) test mov add in inc cmpb popa add fild arpl pop or xor cmpl sub cmc out in add shll test xchg pop cwtl sbb lock icebp adc xor lods or ficoml or jmp pop pop lods nop sbb imul test popa inc enter loope sbb out inc sub xchg sub mov adcb inc or mov inc mov sbb sbb fs lret dec fdivs addl sub add push xlat shlb or and add int3 dec pop jbe (bad) or invd mov jge dec add adc inc sbb loop pusha push sub sub je je mov fbld out inc sub cli shrb nop rolb jecxz adc (bad) xchg test stos xchg in xlat test add loope push fsts push std push adc pushf loope rol movsl fmuls stos add xchg bound out mov or push and adc mov test cmp xor jp (bad) or fistpl js or (bad) xchg out int3 add pop mov jecxz outsl sbb xchg cmp rol arpl cmp das out notb xchg jnp mov add jae xlat fcoms sub int and movsb rorl mov adc inc rcll addr16 stc out sub and cmp cltd les mov mov and pop sub pop cmc dec loope fsub xor loopne lret loopne pop mov rcll xor mulb jmp cmp int3 shll in es lahf or (bad) xchg inc insb xchg add fistp (bad) dec nop add ret adc nop in jbe cmp dec xor add in iret mov call fidivr add inc ljmp mov js sub les loopne mov sub in pusha adc xchg es nop add adc (bad) inc adc inc imul add xor nop jo js and or mov push mov sti inc lret lods pop ja sbb and outsl cltd pusha xchg popf and or sub mov add movsl pop leave adc das in fldenv inc mov ror insb and adc pop imul outsl sahf cltd push sub xor scas lcall push aam pusha cmpsb sub sbbb sub test test js adc and pop sbb pusha sub dec rclb insb xor hlt push sbb es out loopne cmp lods movsb mov or dec loopne lea sbbl xchg add int3 orl dec outsb scas add cmc jmp push (bad) outsb mov pusha sub icebp xchg mov pop xchg adc (bad) and sbb aam addr16 int3 fild sub xor test adc scas (bad) push mov movb imul (bad) mov js loope xor out repnz jo dec lcall or or jmp add arpl jo xor cmp sub pop inc dec mov sub xorl mov aam mov adc leave loopne enter lock fildll bound sbb jo hlt pop inc or fbld dec pop add sbb and inc clc dec and pusha sub push es sub cmp cmpsl fisttpl sub jbe fimul adc (bad) fldl sub ret jbe test test mov xchg jecxz loop pop insl test mov scas inc subl data16 arpl pusha int jb add loop in movsl push sbb (bad) outsb test stc push sub dec jb pop ss les jbe adc dec hlt mov or and nop add fidivl xchg inc pop test fcomip loopne shlb dec and jp jne adc scas into fstps or fidivrl stc int stos js add push mov sub jbe xchg add pop adc push add outsl sub xor aaa ret mov in std cmp cld int3 mov sbb add mov inc popa lock add fnstsw aas mov pop inc ljmp push mov mov mov cmp sbb cmp sbb jb add push dec adc clc mov inc add pop bound xchg stos call inc cmp pusha jo add out test call jae push (bad) and sub dec daa mov pop jnp pop js and mov add in idivb add outsl xchg pop cmc xor rcrb jmp es rcrl int rolb push fsts or xchg js and push les stos lock sbb cmp (bad) icebp (bad) mov sub movsl rcl jno outsb fcomi adc and jmp dec arpl (bad) call adc pop mov data16 or pusha add movsb stos add dec or push ss inc inc addb loope jne cltd jbe push popa ja mov loopne xchg push lods push shll inc mov inc shrl mov popf lods dec inc cmp inc loope cmp mov roll loope fs test xchg in mov fnstsw movsb push sbb dec or or sbb enter and sub xor sbb mov push js shrd dec cwtl cmp loop push push cld lahf pop jno mov je (bad) in pop les cld add xor test and test rorl in mov adc dec sbb enter jae ret aad adcb sbb fidiv adc testl jl adc lods fist mov add mov popa std imul and mov movsb or iret inc lods inc mov push loopne add mov push daa enter stc mov jns fs cmpl or imul add or jne sbb and push add jle sub lret loopne cmp rcr (bad) sbb add sbb pop cmp pop and xchg sub call jecxz adc loope add mov xchg js jl add jbe,pn push enter xchg test into xchg xor xor fwait dec orl pop (bad) inc enter sbb mov push in xchg lret sub push pop setbe pop add pop shrb add es dec add xchg add push xchg and xor dec add pop andl inc nop popa and mov pusha nop and cli negl push xorl (bad) stc in lret or sub inc scas xchg jo push push jg or jne jmp push and xchg push jns insl lock or inc push push and test or sbb push dec sbb pop pop cmpsb ret insl add and nop rep inc add cld inc pop pop mov int3 xor mov leave iret arpl adc cmp in mov scas xchg clc cwtl mov add push mov add adc pop mov rolb mulb shrb cmpl mov and mov pop test cmp fcomps xor adc and repnz dec add mov push fs test iret imul or dec nop enter lock (bad) sar xchg insb aam jae subb cmp subb xor dec les test and xor sub xchg add test push mov out fistp (bad) add sbb xor out (bad) cmpsb sbb jnp or in push pop xor push add sbb andl sahf cmp bound icebp loope dec push add mov mov inc push cmp popa push pop pop cli sub (bad) and xchg inc xor lock sahf repz dec cmp sbb xchg xchg push xor mov (bad) lcall and iret push push mov mov mov pushf sbb je es stos or pusha xor fsubs shrb cmp dec pop xor in or cs rolb lods (bad) jmp fmuls lcall clc mov test sbb shr stos jb imul add sub cmp inc push fs sub adc pop test sbb js mov dec add add test fmul adc mov dec mov add scas push fcom lret fldenv jmp ret sub pop push cmp mov xlat or add and dec bound insb les jge sub xchg and or arpl xchg pop cwtl cwtl mov mov cmp pop lahf sub dec sub sbb and or xchg pusha loope add adc and js (bad) imul into jle mov xor push mov pop push add lock jg jae (bad) (bad) out inc fsubrs xor mov pop lock test xor fmuls or xchg sub dec fstpl arpl popf push add cmp sbb lahf sbb loope sub or in movsl mov inc xchg add push (bad) roll ljmp (bad) int inc pop jo push xchg xor mov and andb add inc dec push mov push inc mov daa push or addr16 xlat and call mov sahf mov loop test push jae mov and or pop push (bad) or adc and enter (bad) ja mov mov push and lods and cmc mov cltd sbb and adc aas mov mov xchg sub add nop push inc sub mov sbb cmc sarl push mov and pop dec pop dec and loope adc cmp push mov adc adc aam add push fxch dec scas sbb adc cwtl jns and adc push (bad) xor pop jb xchg fs in int3 test jecxz aam dec cmp xor xor test add xlat in lds or mov push push aad popa pusha adc mov popa pop pushf sub push test int3 sub inc adc lock mov in clc out test mov loopne dec pop adc jg pop cmp adc mov outsb adc mov mov pop adc xchg cs cmpb sbb add add jbe xchg insb or fild and adc stos cmp xor adc dec pushf andl js gs neg add fnstenv inc mov sbb mov sbb mov imul test xchg outsl cs stos inc inc xor loopne pop cwtl pop sub fisubrl fwait std aam and insb stc dec push mov mov (bad) (bad) popf add xor scas sbb aas push dec pop lea sbb (bad) loopne adc icebp or cmp or hlt fstpt andl dec mov push (bad) rcrl mov push repz mov add inc test sub xor sahf add pop fstpl sbb inc mov rcrl mov dec lcall mov sub aas sti mov int3 mov cmp je je arpl and or lahf sbb or inc or push lods test and pusha inc fdivrs mov ret aad in insb mov cmc mov mov mov test sbb int3 ja lods paddq test mov add jl push push outsl mov pop add cltd test pop in lods or mov jecxz test xor inc cmpsb (bad) insb pop push jle mov je aam clc aad xchg add pop and leave fiadd pop jge insb pusha push loopne xchg negl mov imul js pop fwait sbb in jno je add cmpsb test xor js add gs add ret xchg pushf stos std adc xchg faddl (bad) call jmp mov jb and insl sbbb mov push aam xor enter inc inc mov rolb cltd enter pop fwait cmp repnz sbbl xchg cmp fwait jl arpl and ljmp imul subb and adc ss cltd dec in mov xor and jmp aad js enter pop dec sbb into mov scas add hlt sub xchg dec xor and idivl mov add shrb and cmp aad inc cmp loope sub lock jmp mov add adc sarl sub or sbb movl inc loopne pop push movsl cwtl lds push add jmp mov cmpsl cmp cmp push or push xorb mov dec lahf mov xor jg or dec inc dec adc or fwait daa cmpsl sbb dec sti add pop sub repz dec movsb add loope imul aam push data16 dec popa (bad) and cltd test mov dec mov add mov inc xor cmp adc and mov mov and add jg inc insl test adc sbb or cwtl or aas in mov cmc js add int3 (bad) loope cmp and jge outsb jb and rcrl dec push in xor dec cmp int3 pop inc push adc xor and cmp mov (bad) cmp cmp iret mov mov mov pushf and cli and arpl scas out xchg int3 mov rorl rolb push add rcrb mov add jl stos lret dec in mov int3 stc pop and mov jl repz or das fisttp repnz xchg adc loopne mov jbe push xor dec add mov cmp data16 cmc int3 xchg lcall popa push dec and jnp adc rcrb xchg loope enter mov sbb mov int xchg stos aad cwtl or (bad) cmovns jmp test inc aas or mov add scas mov mov je cwtl push pop in cwtl rcl mov and cmp add and in sub or or shl xchg add cli jp sub or cltd adc jae push shll stc cwtl mov pop push or inc mov (bad) mov mov jns pop inc dec sti stos inc cld add push add popa mov dec add popf pop push push aaa sbb pusha lret mov add loopne icebp or mov stc sub pop pop sub aad mov and push add outsl adc pop cmp push xor mov jno outsb shll cwtl pop adc fcmovu mov jb dec mov jge jne sub mov sbb std and inc pop cmc xor dec dec repnz iret mov add and xchg dec xor push adc sub inc add clc cmp xor mov dec cmp andl sub inc jbe loope in or add cmp add inc push test add shrb (bad) jno das int adc mov roll adc sub data16 or rcrl fsubs cwtl aaa or fdivs add fmuls imul adc loopne jno jp jns add mov aam mov pop jmp clc pop mov movsl and add in or push and cmp push push jbe (bad) loopne and lret fiadd and push lods mov mov fnop add repnz popf mov and dec cmp popa sub dec dec hlt pusha inc push add or (bad) xor sbb mov sub and cwtl clc xor nop push sub cmp pusha mov imul add dec mov fcom repz mov mov sbb add rorl and sbb (bad) or and mov sub jle dec and (bad) out pusha or div adc or mov inc cmp or inc andb mov jecxz aad push mov add lock inc movsb dec and add sbb pop sahf mov sti fdivr push xchg add dec fcoml pop or stos iret xlat mov sbb loop add cli adc sbb movl sub or sahf pop out dec add fnstsw in ds cmp les mov add sbb sub ljmp (bad) mov rclb inc pushfw add pop sub add add mov mov or pop add inc mov add adcl stc ficom out adc add push pusha (bad) pop or insb add adc shll lahf (bad) xor or fadd add leave xchg cmp jbe or sub fmuls (bad) and jp cmp js aas cmpsl dec jnp sub pusha mov cmp lret add mov inc sub nop inc rorb aad dec cmp add mov mov sub imul imul dec data16 test stc mov ja pop sti stc jmp inc in mov lret rdpmc into jmp js ffree sbb jl daa jp add inc incb xchg inc mov sbb dec xor add mov movsl mov mov in add push lahf xchg je icebp push mov or (bad) xchg loope sbb test push cmp dec sub aad loop mov mov add in dec leave jo inc or movsl pusha push pop aaa cmp add mov cwtl xchg or pushf sub adc add pushf mov inc add jae cwtl cmpsb rcll xchg xor (bad) cmc xor cmp rclb and (bad) lea mov mov sub xor and popf push cmp cwtl add data16 stos inc dec mov test jno add push bound nop cmpsb sarb jnp out fildl (bad) imul outsb adc iret or mov xor mov add cmp jmp rcll push or (bad) sub jl add (bad) mov je xchg mov in inc mov popf insl iret mov fadds (bad) adc mov in sub push jo add add repz jl,pn decb dec lea cld lods arpl jp sbb or sub xor data16 xchg lret and xlat jnp (bad) fisttpll (bad) jp adc jns add jnp dec jns (bad) pushf add bound pusha aam or push push mov jl add jg jp fisubl add or icebp out int3 pop roll loope imulb cltd sahf popf jno sbb leave pop cmp sbb add fiaddl nop inc repnz mov dec jl jns add add fsubrl jns mov out cmp imul add inc mov add mov in xchg jl enter lods in test les add cmp jp add addl xor adcl mov fisubr imul cwtl popf pop mov (bad) and sub ljmp out gs cmp pop xlat and and xor dec sar sbb fwait (bad) mov sbb ds mov xchg adc cmp or jg adc dec or mov add xchg arpl dec push jno sub jecxz subl and pop orps (bad) pusha scas insb je xchg or xchg hlt test test sbb push clc ds pushf xchg mov xchg jl pop aam or jo (bad) mov mov addb rcll call push jnp rolb aam xchg lret push test into cmp add adc int3 es cld xor mov sub aas nop and das inc cwtl add sub mov inc mov pop mov mov adc add mov insw dec rolb or mov dec adc cltd xchg (bad) cld and jno sahf mov pusha cmp mov and pop call sbb pop xor fdivp scas cmpsl adc xchg mov or pusha mov push dec rcll in add stos inc fdivl (bad) emms imul lcall pop mov add repnz mov jl adcb and movntq xor sarl lahf pop jo xchg add rorb jle (bad) adc adc sbb jp and arpl pop pusha dec stc hlt add das (bad) jb jp cmpsb mov pop xchg xor push pop fildll pop lods sbb inc (bad) pop and or int3 inc mov popa fildl pop leave fdiv repz es insb or fbstp push and rcll jl adc rcrb inc pop push xchg or cmp add jnp pop (bad) lcall add mov nop mov cmp adc jecxz pop rolb ret mov sub sub dec jmp xchg add jnp ja (bad) push xor add cmp popa sbb inc mov add xchg lahf mov add cmp add xlat mov js daa push mov jns lahf stos mov cmpb ds add es dec jnp ja xor add lret cltd push adc push mov testl lret lods sbb clc and sbb mov xor and pop test sbb outsl inc xor out aaa sbb pushf cmpl in jo mov mov pop arpl aad jno sbb test outsb stos ds mov lock popf cmp cmp pcmpgtb xchg push xchg insb mov mov incb inc (bad) cmp xor cmpsb xor pop test xchg cmp stos imul sbb fcoml (bad) xor jl push jg lea mov xchg jnp xorb cltd aas ja add enter cmp add (bad) mov and fdivrp sbb movsb sarb push aam push xor ret jg add pop inc fcompl xor fistl push mov dec enter imul sub add add addr16 shr xchg addb popf ss sarl adc xchg and addb or adc or dec cmp mov inc add incb mov scas outsb lock aam loopne and and lahf fldcw out mov enter pushf add push ljmp or inc add mov arpl inc cwtl test andb pop fcoms push cmp pop xor and cmpsl pop or dec jns or xor and lcall mov cmp roll test mov adc (bad) js pop out inc push iret loope fimul pop (bad) je pop jno in call dec cmp pop ss add rolb orl rcll int jecxz dec add or call dec sbb xchg pop jecxz lcall sub sti add mov sub xor bound push cs push icebp pop inc in pop sbb push ret jns xor sbb cmp (bad) lcall test pop sbb jne pop push pusha mov adc inc adc mov js push mov or xor jnp add pop xor adc dec inc or and daa jo mov pusha and incb jns mov sarb cli jno or cltd xlat or dec ljmp mov add (bad) inc lods andl aad and (bad) popf pop bound xchg xlat lcall inc pop push (bad) cld lret sbb mov and sbb lret xor inc mov in mov mov add xor (bad) ja pop cmp push test pop ja sub pop lock and fisub jmp repnz add pop mov add mov add mov test adc popa sarb out int jl mov mov (bad) mov movsb rolb adc and jle jp pop adc sar lret clc cmp pushf int3 in daa aaa (bad) js adc jl jns aam inc xor sbb cmpsb rcrb mov xlat or (bad) or insb mov xchg mov jg stc inc nop dec mov fnstsw xchg inc mov mov sahf xchg stos cmp and mov andl xor jno ficom cmc push sbbb fwait dec lds mov arpl push je ljmp addr16 ret jo push fnstsw cmp jns mov adc into mov add inc rcll mov and dec cltd inc add icebp aaa mov sarl add add dec call lea add pusha adc stos cmp jno mov xchg add dec lock pushf add dec mov lea push push add cmp add mov test xor mov mov sub xor mov jmp fildl into enter sbb mov (bad) xor and insl pop sub dec mov or (bad) cmp add test rorb int3 or ja and imul and cltd mov cmp sti sub or adc add cld jp or pop jl xor sbb add fsubl xchg jnp sbb adc pusha dec inc call or fldl pushf or loope jecxz mov fcoms cmpsl enter add call fs cmc fidivr addr16 or rolb ja (bad) jae add xor lcall dec jb rclb adc or xchg adc dec in in mov cmp add sbbl mov insb and pusha (bad) and scas into inc js dec add ljmp pusha loopne mov lock jno inc xor je push aas xor sub js lgs pop push rolb jl lock fsubrs les push push cwtl mov sub inc or mov lahf xchg loopne (bad) cvttps2pi adc mov inc es push (bad) push lcall inc adc inc je push mov testl add or dec out movl adcb cmp cwtl xchg xchg add or leave push cmc imul adc scas ja add xchg inc clc xchg rcll mov or add fxch testb xor popa lret adc push or in cld xor dec xchg in dec or repnz popa jnp dec fimull hlt fisubr push sub stos cmp addr16 out jp movb lods cmp adc xchg adc fs pop inc ror push repz add cmp call rorb mov or add cmp push pop insl in clc add in cmc or jnp cwtl pop iret out add jecxz insb ljmp out dec xor add mov lds jecxz add nop xchg jmp add sbb dec cld xor cmp adc loopne cmp push sub inc pop mov pushf jle push rcrl push add into (bad) or in push lcall dec or pusha int3 mov dec ret jl inc jl std lds pop add add stos sbb std out loopne jnp sbb xor jg ljmp bound xor sahf cmpsl icebp aas add movsl ds or imul add (bad) imul adc mov push faddl shr or pushf and jl nop xchg (bad) add xor cwtl add sbb cmpsb pushf jb pop add (bad) mov inc add cmpsl xor enter add push dec push jb in dec xchg mov jno mov sbb out out ljmp add cld dec jle adc sub int3 and pop sub inc rcrb mov subb fistl sub divb loope sbb pop add addr16 inc outsb loope adc cs pop adc mov pop test adc push sahf fnsave mov add jbe lcall push jo test outsl adc cmpb sbb cmp add imul xchg je or fs fs pop std cmpsl scas ret xor and ret inc push gs addb push lods pop je loop data16 sbb jp scas pop loop pop push mov or mov int popf mov call rorb xchg sbb loopne jno in add mov mov inc push cwtl xchg mov jno aaa dec fsubs mov or cmp inc or xor add jge out pop mov loopne test or add std test addl lret int shlb cld int3 pusha jno or (bad) pop push xchg and push leave bound pop mov pop add pushl cld xchg movl mov mov paddb xchg jmp sahf push inc cmp mov pop pop es cld dec push adc ja aam les mov adc (bad) push cwtl sbb add pop jno ret fldenv xchg shlb int3 add xlat in adc jecxz (bad) mov push cmp inc push jns mov or aaa push or lock int3 das in pop imul push mov add test add mov inc xchg sbb push orb mov mov dec imul lods sarl pop xor adc add test shr jle,pn nop or dec das mov addr16 pop cmp add and xchg xchg pop icebp mov push push insb orb xchg mov (bad) adc shll into mov mov mov scas scas sub dec mov imul enter sbb popf push push int rorb cmc (bad) ja cli pop rcrl jecxz or and mov or pop pop arpl and add icebp inc jl cltd xchg lods icebp andb daa sub jl mov mov and mov mov inc add mov (bad) sub daa sbb mov in jno or cmpl mov imul pop adc xchg roll push sahf add add jo adc sti or push js and mov aad mov sbb xor jno and lret sub pop cs roll cs out mov dec push das mov dec scas mov jbe cmp jo lahf adc push leave iret das add js pusha push and inc add inc mov mov loopne mov add cltd nop lods dec xchg adc jmp and enter and add lahf sbb es mov xchg pop push (bad) push rcll movsb pop in or mov test push sahf and addr16 sbb clc xchg sbb in rclb or add jne cmp or shll xor fwait mov cld mov lds add int3 sbb pusha cwtl dec add cltd fwait les repz lcall (bad) mov test in aas jg xchg add ficompl je push xor adc pop and mov jb int repz xchg imul inc dec (bad) mov insb or les pop das push ret rcrl pop lcall sbb add inc outsb dec mov and xor jne push mov sub jb mov inc dec add call jl lea or push cmpsl add mov xchg adc add mov jp lods jge pop mov rolb aam dec push je les mov in pop icebp inc (bad) pop xchg sub lahf xchg pop and xchg dec pusha add inc push cmp cmp or jo or cs xor add mov jmp iret ret xor int sarb pop pop rorl and sub sbb enter push dec dec fistpll jae add notl xchg adc out xor jo test sahf adc sbb add pushf ret pushf lock js nop call xor add out popl jnp inc jecxz pop sbb push or cmpb arpl xchg mov bts push das add sbb cmp push loop cmp mov test mov inc mov adc mov jp or pop inc fildl in add das xor cwtl cld adc scas test in ret int3 cwtl push (bad) mov enter cwtl ds pusha pop enter adc pop movl and cmp mov bound push fwait in add mov cmc cwtl dec push cwtl das jg dec nop in add std cmp cwtl pusha push add stc lret or fs add xchg sbb mov sti popl insl enter pop mov loopne test and test pop mov push hlt mov js add and icebp add fidivrl add leave out add shrb add andl mov imull popl sbb mov and lods iret inc sub pop adc insb pop adc push add and push mov lcall pop adc pop sbb mov test js rol dec add jne mov fs shufps lock cmc mov in add pusha sarb add jmp in sbb push add popa push mulb jmp add sbb lods pop mov mov push rcr rcrl cs inc add mov xor inc mov call enter loope rorl fldl jecxz call jns sti ret stos into and and inc mov pusha (bad) pusha adc imull arpl dec xchg shll and rolb xchg or cld jbe mov into add ror xchg vmread icebp sub jae push xor jmp add cld addr16 xor lock add inc imul in shrl add dec jle rcrb nop pusha ret xchg xchg test add cmpsl mov pop add and dec cmp insb pop add mov and out call loop nop rorb rorl notb mov xchg (bad) jnp (bad) hlt xchg sbb jp pop out xchg jp ds adc cs push std push xlat rcrl lods add dec jg mov sub mov sarl adc mov lret lret out (bad) jmp mov out ss bound sub add or in daa inc inc xor adc sbb les pop loop (bad) (bad) loopne sbb fs cli sub dec and loop dec mov and lods roll inc cmpsl int push or xchg fdivl in adc push scas push add or out cmp faddl pushl add nop pushf adc xchg push sbb jl mov sbb inc xor mov inc cmp add jnp xchg pop in es addr16 inc icebp dec cmp lret adc lahf icebp push test in (bad) jg push jge nop testb adc sahf and scas and push sbbb mov and inc mov and pusha lds loope and test sbb cmp inc adc rcll pushf mov add (bad) hlt mov jle cld mov mull jbe pop (bad) fadd push mov adc (bad) xchg int3 scas fisttp or xor sbb or fsubs jne insb inc xchg mov lds movsb mov or adc rolb push jg add adc sbb sti sub sbb sub out andl fwait mov pop sub mov jge mov xor pop mov gs add mov jnp pop fbld adc (bad) inc pop das add lcall add xchg push or imul add xchg push (bad) je fldt mov xchg sbb int3 pop leave pop and fstpl adcb jbe add pushf fwait push in mov icebp dec pop push pop dec sahf popf inc mov push mov xchg add arpl sbb rorb jmp push insl cld xor mov into inc cmp pop pusha inc mov out ljmp fsubrs stos mov add jl or push cli push andb mov xchg push add sahf xchg mov add xchg scas push cltd xchg mov xor roll xchg add mov sahf je push (bad) fildl std dec or ljmp jge dec add adc add xchg sub adc mov sbb add add daa rcrl and in pop loopne push nop es mov mov rorl mov mov mov xchg push lods fdivp pop test mov insb add movsb cmp push mov test stos mov cmp nop in daa lret shr imul enter mov lods test mov mov ficompl aaa or xchg push push test add or cld movsl and loop or mov jno rclb int3 jg push lea inc jg jbe,pt divb and pop andb (bad) xor cmc in aad jne movsb mov add xchg jmp adc pop sub rorl push mov mov repnz mov outsl mov mov fs mov add lock push and push arpl xchg cld scas int3 add out push cwtl mov (bad) push add sbb pop enter adc ss lret je adc insb int3 mov call sbb mov or cmp xor (bad) les sub mov cmpsb cmp pop add pop sub out (bad) mov popf mov pop mov jl (bad) int dec pusha cmp mov mov push dec repz rolb add in outsb fsts xor and adc daa and into js add add repnz dec or divb pop fsubr arpl subb dec mov inc movsb pop xchg add and xor xchg insl cli rolb mov mov and inc or xor pop dec jg icebp and arpl mov add and aam and int inc pusha sahf pushf cmp call pop (bad) lods push hlt rcrb dec adc insb or sub sbb or add sub test lahf adc in add pop pop adc ja xchg add ds cwtl outsl add push arpl mov cs add mov lret push arpl jecxz dec shrb jmp cmc jne movsl sti add push mov and add aam mov lcall adc mov lea and out xor mov inc std lahf nop and mov int3 lret scas (bad) call arpl pop cmpsl imul xor mov adc xor leave cmp pop test jbe test add (bad) (bad) jno sahf xor dec or (bad) xchg jl mov mov xor in ja add scas mov mov dec sti jne js pop daa lock push add mov (bad) bound les jo loopne movsl hlt mov dec mov nop mov pop out inc jl adc xor add cmp xchg es lods cwtl mov ds mov jmp inc test mov add or xor popa arpl rorb cs pop push mov push pop add nop out mov mov xor sbb cwtl add test adc add sbb aas jb pop or gs rcrb adc add push (bad) cmp xchg fidiv push xlat jp xor prefetchnta jns cs mov inc mov pop ret xlat sub dec or cld mov nop mov dec es jp enter adc pop mov and adc xchg movsb mov rorl add sbb incl push fadds scas pushf xor (bad) sbb pop es or cld es sub hlt sbb dec add push bound and test les inc adc push dec jle je pushf mov xchg daa iret and dec into pop dec negb je push pop lds fdiv pop add outsl (bad) xor fbld rorb add mov mov add xlat inc leave inc loopne mov mov nop cld sbb enter loop push jg cli into add jg or adc imul sub test dec and pop push (bad) fnsave fdivr fmuls pusha sbb rorl cmpb imul cld shrb jo mov je add adc and mov sub xchg es (bad) fadds aaa mov or movsb and xchg cpuid mov add rclb jp jmp loopne loopne mov int scas in test add iret rcl mov add call xor cmp push repnz popa call and push repnz inc loopne add xor lods add cld jnp sbb int mov xor mov data16 stc loopne pop fs adc mov lahf test or mov inc and sbb xor mov ljmp stc add jp push ret xor (bad) fcoml push add mov pop lret out jns mov push cmp mov (bad) cld mov or fwait psubb xor fdivs aad add sub add mov and mov adc push leave sti dec daa xor adc scas popf sbb xor jp xchg dec xor pusha add pushf pop clc test jecxz popf inc js sub inc rorl inc lods push test or or cmp add nop mov out sarb (bad) mov mov jle mov sbbb adc add pop ljmp add hlt mov mov mov adc rolb and popf rolb pop inc (bad) mov adc lea (bad) into add jno push xor loopnew daa jmp adc leave negb imul subps rorl enter test movsb cwtl lds shrl adcl add sahf jg push lret jo hlt sub push jnp andb arpl fisttpll call jle sbb bound mov js or mov or mov jns lods mov fbstp popf mov lret test test add imul mov lock or in pop mov andb iret mov movsb mov inc cmp adc clc adc mov jbe jp adc sub pop clc test pop mov add dec fcoml out movl fadds sbb add cmp or pop pop push xor (bad) inc add lahf (bad) nop cwtl pop adc adc test xor icebp push stos out sbbl dec cmpsb mov add notb mov test sub cmp (bad) aaa daa call in pop jns lret aad or push sbb mov dec cmp imul jno or test xchg ss push sahf add pop bound add (bad) jno bound xor push sahf lahf addl inc lret add rorb and jns,pn adc je movsl add icebp outsb in push xor pushf lahf xchg loope mov mov in push add add sub pavgw aad jbe inc repz jecxz push shlb or xor adc orl pop icebp push dec or lods xor adc arpl les into ljmp addr16 repnz cmp add xchg pop dec sub mov addr16 iret or or fdivrl adc add rclb jg loopne call adc outsl xor mov pop lahf or pop xchg or stos fcoml lcall or movsl sbbl or sub bound in (bad) push adc add (bad) out shrd push push or arpl sbb push and in xchg mov loopne pusha lea orl dec or cltd test es jl arpl dec xor inc inc les fldenv rcrl enter mov out test mov das movsl test cmpsl pusha jns orl stos mov xor mov (bad) ljmp popl pop popf call add sbb std scas repnz leave icebp dec jmp (bad) cmc xchg ret jo (bad) jo sub insb jbe (bad) mov pop repz popa or add add add movl pop pop or int je shrb jl sti mov je push clc popf lahf jb repz dec xchg out mov pop mov ret ja daa pop inc inc fs and inc jo or fisub fs dec pop add je (bad) mov and jge jns dec add inc cmp in sub fnstcw and les js inc jnp add pop xchg frstor jmp push dec mov into rorb xchg ret mov es add cmp and insb add mov mov movsl jecxz pusha adc fstpt add pop add push adc in movsb test or add imul movsb les cmp xorb out nop cmp jnp and adc out rorb sub sub in aam fnstsw push jl push imul inc pop movsl aad inc inc je fnstsw daa mov in push push mov cmc jnp push dec addb sbb dec add push pop mov mov sbb jae dec xchg push nop add shrl (bad) add jl dec repz lock je adc orps fsub shrl daa mov stos pushf insb add (bad) adc cmpl in je cmp jle cmpsl inc add add cld mov test xchg in int es rorb call cmp jl lcall aaa adc les daa mov add movsb mov pop pop mov push (bad) or test fs jp and les faddl jmp jmp mov inc add sbb mov add adc and lcall shr pop push inc icebp aam inc fiaddl (bad) mov xor push push fisub jno xlat (bad) jo ljmp cmpsl daa das fsubrl add cmc lds test dec sub push repnz jmp xor enter add mov adc push (bad) mov js dec pop (bad) add mov add sub test sub cmp inc setbe (bad) cmp shll sahf xchg cs fwait adc sub scas xlat add cmovge (bad) mov pop in push mov jecxz int3 jle in adc enter negb or jl xchg dec pusha cmp stos add dec lcall test add add push daa cmp and lods (bad) rolb fdivs arpl cwtl add sahf mov inc or add and and cmpsb fiadd mov inc or fistp lcall sub push mov ficoml pop addl imull lock push xchg rclb dec cs ja add cmp mov aaa or test or les fs add inc or aad push push mov rorl xlat addr16 cmp daa pop dec in (bad) cmp testb fs rolb jmp icebp imul popf sub fs jp mov mov out repz fstp and arpl jnp pop or adc adc add mov pusha (bad) mov lahf int sub sbb push popa cmp inc inc cli jbe jle ret add pop push aaa add push nop or les sub rolb popa or je pop jns add mov and out mov xchg jnp jle sbb sbb adc jle or into call js or aas add or (bad) push in xchg pop pop dec stc fwait add push mov cld add lret sub inc popf rcr addb add mov out nop cld dec mov or mov adc shll test daa gs jp add fcmovbe sub xchg sub fdivr testl xchg push and push loop stc cld inc rclb xchg and outsl xchg push pushaw pop jnp loop rcl addb sub (bad) sahf adc jbe sub lret jmp add (bad) fsubrs (bad) out push jae lock fwait in sub inc xchg cwtl and daa or add adc pop sub mov xlat out xchg addb adc or inc inc mov adc sub cwtl and pop dec xchg cmp inc mov dec mov icebp rsqrtps js xor xchg pop lock lcall adc add outsb fisubr loope mov pop push pop in dec cmp dec xor adc xor mov xchg add les test adc or call xchg out add fcomp pop fs movl or fidivl sub inc scas int3 or icebp sbb xchg xor out add into add or xchg pop push or aaa out pop add mov cmc push scas sbb lock cmp aam lret (bad) lods mov hlt hlt inc je stc adc and cmovp jbe and sub shrl int3 adc jae ud1 cmpsb jg add or add loopne jno xor xchg sti call bt mov fcomps je mov xchg loop (bad) sbb sarb (bad) sbb xchg pop or mov inc adc in mov aas fsubs dec lret cwtl jb adc fnstsw sub les cmp insl test push jmp inc sub push or ljmp call insb push sub dec jo pop sub dec xchg push fs pop cmpb adc cmp mov adc pop add inc jp xchg das xchg adc enter cld pop mov sbb add and (bad) (bad) and sub dec lods adc test test clc lahf dec xor and adcb imul and xor int3 outsb adc sub fistpll push cmpsl push add stos std and mov cmpsb arpl fs cltd das cwtl jo xor inc xor xchg push mov lock fmull pushf inc inc cmove outsb mov mov mov outsl add or dec mov cld bound and sti adc pop dec cmp or add nop cmp aas add sub inc mov add call add jp or pop jnp aas mov daa dec js pusha pop mov mov xchg xchg mov hlt add inc test xor lods dec subb shrb add popa bound ret rep je or pop dec add (bad) clc mov add jge dec std bound mov cmpsb shrl cli pop lret add sub cs push push pusha xor xchg in test add add int3 dec dec add hlt mov or and fstl jp rorb jnp jne cmp add rorb (bad) push jo mov test push orb cli or sub xchg aaa cmp sbb xor or out push enter hlt add stc das mov add pop pop (bad) mov call push test cmp adc push imul dec pop mov mov add adc nop pop dec call out jne mov mov inc add mov add stc xchg adc add push push mov test add dec xchg push lods add loope mov xor mov fcmovne push sti rolb or jne aam ljmp ret inc or scas sbb jo lcall (bad) lock push int sub aaa add mov lret lret adc push xor xor insl add mov dec in mov out mov loopne cwtl js sbb ds pop stos add das add aaa sbb rolb push mov add dec adc add jl push fmul add and cmp adc xchg test xor (bad) iret pusha lahf adc push mov dec dec mov add ret adc mov lcall add xchg mov call inc lcall adc outsl in mov pop adc mull cmp mov or lock out add pop les cwtl bswap xor add xchg or adc loope add test cwtl pop inc add mov mov sbb ss add jge and cmp or imul mov test add nop je lods adc orl xchg cwtl (bad) adc and cmpsb xor scas xor mov imul pushl es dec sbb xchg les push lds sub or sub add das test add xchg orl in fstl sub adc fisubl cmp scas dec pop movb imul subb js pop insb std add pop dec out add (bad) add and mov and in (bad) rcl (bad) sub insb mov inc icebp aad jno or jb test add add pop shl cmp nop mov ret add orl xchg cmp insb in fdivl push mov aaa mov mov mov mov pop mov mov mov mov add add add add add add add add add addb add add add add add add add jmp jns ljmp pavgb sub fild cs fadds sub xlat add sbb add outsb add mov pop inc mov inc sub add out cmp int3 add add add add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add add add add add add add add add add rolb add jmp jns ljmp pavgb sub fild cs fadds sub xlat add sbb add outsb add mov pop inc mov inc sub add out cmp int3 add add cltd add add add add add mov add add or add and mov add pop lock add add add add push jp add add add add add add imul add add add push pop add aam add in add or add add add add add (bad) incl add incl add jecxz add movl add pop add clc aas add cld aas add clc pop add icebp popl add movl add incl add incl add add add add add add add add add add rolb add jmp jns ljmp pavgb sub fild cs fadds sub xlat add sbb add outsb add mov pop inc mov inc sub add out cmp int3 add add add add incl add incl add incl add pop add fcomip add fcomip add fdivp add fdivp add fdivs add fdivp add fdivp add fcomip add fcomip add rolb add incl add incl add or or add or add add add add or add add data16 and dec inc inc push js in popf jns sbb popf lcall fnsave es and (bad) add inc mov and mov pop xlat or leave adc js clc jns mov jecxz loop pop test ljmp pop fstl mov xchg adc loope nop test ja out (bad) out idivl xor aad aad jge jge push je jne jnp mov (bad) iret pop add adc dec push push mov sbb scas div insb jbe lods lds rcll or jmp or and add inc mov inc hlt inc inc hlt inc mov and (bad) push pop sub push rcr mov cmpsl addr16 fcompl cwtl insb cli fdivl add mov xor rolb loopne sarb jle mov (bad) sub popf aas add pop pop ljmp push imul test mov add repnz xchg mov add lcall push add bound addb movsl fbstp push fisttp sbb mov xadd mov xchg lods add je mov push lock xchg fldl jo mov jge ja xlat xlat lahf push xchg or adc dec fnstenv sub xchg (bad) cli iret inc xchg insl mov mov daa scas pop cmp sub shr hlt pop out out mov aam lods push dec out (bad) lods jmp fisubrl inc lret add loop add xor add dec gs scas outsl and inc dec xor mov out xchg int insb xlat (bad) mov mov sbb push sub lods lock jbe or add into mov pushf in cmc arpl push jb fdiv cmp add mov mov test jg and andb cwtl fadds mov mov sub jns movsl outsl jmp stos xchg add add int3 movsl ljmp or out test cmp jae out imul pop xchg jle pop subb mov jo or mov jecxz mov xor add test flds and (bad) dec je stos aam stos jb (bad) call xor pop pushf push inc lahf jno xchg and pop xor pop out xlat jg sbb movsl mov in js pop xlat inc jl loop xor inc dec xor push aam pusha and add mov movl scas mov xor jle out jbe sub mov mov xor pop fist (bad) flds push clc fild out fidivr clc (bad) xchg or add roll xchg sub push and arpl jge cmp add jmp out cmc add push addr16 (bad) mov mov insb cmp jns test adcb jnp inc jp clc stos add xchg rclb xlat imull or es push aaa (bad) leave jmp fisub push into lcall mov mov dec add punpcklbw je mov push xchg push test fisttpll je sbb push xorb mov das jmp stc mov adc cltd mov in aad insl sub mov jmp add in cmc dec bound or jae push add in ss sbb lret cmp pusha or bnd ret fcmovne out or adc je xor (bad) loop add dec sahf mov dec mov jb push inc es std adc dec mov mov je andl sub add mov iret jmp stc xlat das popf fisttp (bad) mov cltd icebp stos adc dec aad cmp pop add fwait aad repz jp jb aas sbb (bad) cltd adc movl push mov out and fwait in add dec xchg dec sbb into sbb int3 xchg jmp push mov xorb xchg into aas out notl inc adc cwtl or test cmc aam into (bad) fldenv mov cmp mov xor mov adc (bad) jno add (bad) and stos bound aaa and cmc cmp mov inc (bad) sbb jp mov jne das sub fimull adc mov dec sub hlt inc ret stos iret jno or loopne cmp jmp dec mov fnstsw cmp mov (bad) sub jg stc shrl dec mov pop movsl arpl ljmp ljmp repz iret insl jg inc push aad inc arpl jl or or shrb mov fcomps xchg dec sarl fidivr mov jge insl outsl add fidivl jp push cmp in jge pushw (bad) dec push and or bound xchg iret lods pop clc or fnclex shl push cmpsb cwtl xor movsl pop inc pop cs pop or mov jecxz bound iret aas adc or test stc aas jnp ret movsb insb scas cs xor pushf stos sub pop fildll pop pop inc pop cwtl ss push push shrb rcll fcmovnu pushl jg mov out das add outsb cld pop cwtl popl mov nop pusha sub fbld aas aas mov jecxz pop push pop jno div mov test movsl and add rcll (bad) mov push pop cltd je les jecxz ljmp jne (bad) mov sbb (bad) sub jne,pn jg (bad) jg push fs pop mov mov or pop jmp jg jns dec mov add test jnp sub std and pop rcll lea clc repz stos push lods xor sbb out mov lods fstpt push mov pop test pop add cmp dec ljmp cli sbb andb cwtl enter inc pop mov pop pushl clc xlat lea mov sbbl xorb push inc stos or and or xchg mov sub cmp xor mov add fnsave adc sub in cmp pushf mov xchg call out jo lahf mov jmp push inc mov cli cli (bad) push and or mov addl jg addb gs stos mov cmp ret aaa add ds inc add jmp jg imul jne add add es xchg add inc (bad) or movsl ja mov jb xor in jle rolb cld jae push cmc mov ja adc stc int mov (bad) xor add rcrb shlb adc xor mov arpl pop leave les test je rcr mov mov pop jb jp mov dec jbe or mov into out movsl aas fldl mov insl sub and pop pop (bad) jne push call add repz scas xor cmc pushf icebp add (bad) sub inc rol xchg pushf mov mov fcompl lret sti jmp adc fst push aam lds mov sbb pop cmc stc jb add mov mov (bad) or and sti cmc aas pop sub adc sbb out mov in pop jo (bad) hlt leave adc dec pusha mov andl insl jmp dec into repz (bad) cmp (bad) cmpsb mov cmp rcll aam lret icebp inc aam mov pop push push (bad) lret data16 mov (bad) mov pop fdivrs push push popa lahf ss scas xchg add inc (bad) cltd nop add or loopne cld (bad) pop jne xor sbb pinsrw es xor jp (bad) hlt xor add add xor ds cmp jne jae ljmp out pop add xchg enter fistpl inc xchg jl (bad) sti pop sub xlat aaa stos ds lret pop add add fistpll outsl mov into out inc xor inc dec xor add out xor scas inc cmp daa popf or in ja or ret mov push or inc fistpll imul imul je add and mov out aaa pusha aas es xor out std aas mov add iret stc cmp jbe in pop add fistpll dec lahf insl jne fs std lret jg addr16 outsb pop (bad) mull xchg add inc (bad) sbb (bad) stc mov loop or (bad) push jmp fcmovnbe bound and ret fwait stos sbb out jnp xadd ljmp push mov rorb xchg repz je icebp add fst out xchg pop jle addb jbe,pt je add pop scas outsl stc cmc pop pop add faddl lock rcr pushf mov add rcll sub cld push sub movsb out push aam dec test and xchg add jp cmp pop sahf jnp inc std out call aaa cwtl fimul sbb jl aaa add es lret aad push popa sub pop add cmc sub xor mov movsb stc or cld cmp mov add roll lds decl mov mov pop ret xchg pop or pop add inc imul decl (bad) sbb repz jle xchg cmp fisttp decb push xor jno pop std in in push ss movsb pop mov adc pop rcrl aaa add out pop imul xchg sub pop addr16 or adc int3 push repnz sub add negb mov ds (bad) fnstcw out adc iret sub rclb loopne movsl cmp dec shl pop loopne push les mov mov jle cld jae mov int xor ja or mov outsl (bad) mov xor (bad) and adc inc sbb inc movsl jl fisub outsl mov jecxz test aas dec jns sub ljmp mov jne sar js out pushf adc inc les iret push out mov loope mov ja movsb mov aas (bad) jmp scas sub jle aas xchg andl pusha dec into add andb test pop mov pop aas incb (bad) (bad) xchg adc push cmp and xlat and out (bad) les lret popl dec pop mov scas add into add push addr16 xor jg cmp rorb iret add insl ret (bad) cmpsl dec cmp pusha dec into add pop push js xor dec in into mov xor outsl enter call cli aam mov stc (bad) jbe imull lock call push xor sbb adc fimul push sti sub cli mov fs jnp jle xor inc dec xor pop sbb mov adc or and (bad) dec cmp xor testl or scas fstl fwait repz out (bad) mov fcom add sti hlt aaa add xlat dec add cld pop jmp scas iret dec mov jae aad das leave add or or jmp sbb arpl insl aaa fldenv out int3 xlat stos into mov arpl rorl in fiadd jbe push out stc dec (bad) push outsl mov popf mov (bad) xor push xchg or (bad) std sar add cld jbe pushf insl dec in addr16 out pop mov mov int outsl add mov je push and or je loopne out add fstps js and lea fstpl fwait jnp mov into dec jae lahf jnp cld enter cs add gs sti scas push loopne aaa jle adcb arpl out pushf scas call or cmpb aaa cli out clc inc add (bad) sub testl or iret fldcw iret lahf shll and add repz jp ficomp jne mov mov pop or mov fildl inc stos pop ret mov mov pop neg push je push and or stos push stos stc (bad) xchg mov cld jmp xchg or mov cmp aam add mov xor jae cli lods push jle jmp push mov ljmp xchg jbe shll sub or mov pop add mov scas push mul dec sahf aad and repz cmp out ds cmp mov xchg fwait dec gs mov or jnp stos dec subb cmp add rcll decb lock jmp stc insl mov pop pop jno,pt cmp lret (bad) aas add into jbe cmp aad ficomp mov andb negb cli mov mov add xchg (bad) adc sbb and das jns sbb (bad) fsubs jns dec stc outsb push cmp jb xchg cli scas mov test push je loopne lahf pop arpl sub leave out stc inc jmp lahf aad inc pop (bad) pusha mov jecxz das mov lock mov mov mov jle inc jmp adc iret jmp fimul aam fwait mov pop sub jg mov jge int3 js imul out (bad) testl dec stos push stos fstpl out jns dec leave add enter js inc (bad) popf pushf into outsl jmp sti xchg fistl push cld cli push orb out sub dec xchg pop xchg aaa lods mov or mov mov pop push and repz pop add jmp (bad) out aaa pusha (bad) loope cmp push sbb push mov mov pop xor dec (bad) pop out sbb (bad) sub inc sbb jl cltd jle rorl (bad) mov inc pop xchg ja imul (bad) imul repz push jno aad test mov out xchg mov jo cli or stos test fidivl pop loope outsb xor stos mov movsb and test or dec std addb icebp or mov out cmp sbb rorl loopne aas sbb out pop imul add inc (bad) sub pop rclb push out dec jg fwait jecxz push dec je (bad) mov sar in lcall sbb pop sbb into inc jp aas std fmulp mov mov rclb mov pop in fistpll aaa rorb (bad) mov or imul mov in add sbb ror cld fidiv xchg sub out fistpll imul int push (bad) mov aas hlt addr16 cmp push into jbe jmp repz icebp inc repnz or cmp sub (bad) xor lea jmp popa lcall jbe in push lahf fwait xor stos aaa bound insl add cmpsl aas jecxz sarb aad cmp (bad) sub add rorl std test fwait movsl mov aaa je cld aaa push movsl add arpl cmc sbb jle mov shll aad repz pop negb mov sub test sbb add test sub pop scas jp pop clc jg cmp jle dec (bad) mov (bad) lods pop leave add rcll mov xchg in rcrb mov mov sbb mov stc cmc mov divb movsl gs inc iret sbb (bad) push cmpsl and cli push jp xlat adc push (bad) int3 insb sahf cmp int3 (bad) mov (bad) cli jae out mov adc stos out cld into push xchg mov outsl jnp out outsl nop or adc int3 push aaa pop mov (bad) pop test lea xor xchg ja arpl test hlt cwtl mov cli (bad) mov pop mov push sbb fdivrs mov fwait cmp stos push push std push aad pushf jbe sti repnz lret (bad) and sti inc push fwait int cmpsb (bad) and sub xchg in mov push inc dec iret data16 xchg add inc (bad) sub push pusha mov pop and adc cmpsl xchg in out jmp imulb fcomp jns (bad) cmp sarl or mov xor in insl mov lods push mov xchg fistpll mov dec out pop ljmp push aad pusha mov movl mov test xor push pushl repz cmp repz adc enter stos mov iret xor jp xchg movl push or add sahf movntps call outsb push push xlat test jge cltd pop inc iret and call jg ret xchg jp sbb xchg rclb jb jl idivb movsl xchg movhps pop bnd xchg dec adc inc adc int3 push je scas mov mov fistpl or pop lods lods lea sub mov jmp out cwtl xchg jl aam pop call push cmp jbe test int3 xchg xor int loop and gs jno add and xchg dec addr16 cmp ljmp daa fdivp sub jmp or add add pushf sub fidivl and cli push sti sar pop jl out mov ljmp mov jae mov lcall jb xchg push jecxz mov test fidivrl dec jmp sbb and jle cmp outsb push pop js sbb add imul (bad) jmp cmp div push popf fistpll scas jmp fidivr scas repz mov gs hlt jns shrb inc lds mov ljmp loop lahf push push test xlat dec xchg add adc xchg rorb and (bad) lcall jle stos sub jbe movsb mov jg pop imul in cld jns mov int3 popa cmp push and xlat aaa aad cmp ret mov aam stc sub xor and push sahf es aad adc jl inc lcall mov ljmp mov (bad) xor add or js dec mov call jg (bad) into cmp xor pop orb add jno xchg neg sti fistl jmp aam stc rorl sub xor jae int or mov mov test faddl rcr jp add push lcall push xor add push jns push lods xchg repz sub pop inc fdivs popf xchg (bad) (bad) pop cmc adc push cltd jns out sti and dec inc pusha push mov jne add xchg shr in test into push or mulb movsl (bad) popf dec mov mov xchg scas loop dec fwait dec cmpl test icebp pop inc and jg pushf or xchg cmc jmp cs and loopne xorb sbb stos dec sub lea outsb add or data16 mov jmp push lahf xchg pop cmp lret lods adc lods loope jne (bad) rolb xor out inc jge and push jo mov fstpt jns in push out sbb xchg fbstp cmp negl add pop jl xchg ds lods sahf aas inc movsl hlt cltd push pushf or cmp fbstp test std cld fsts (bad) call int cmp loope add call and aam cmp pop add jae ret hlt lds push push pusha xchg cltd stc notl xchg aam mov push (bad) mov mov pusha inc sti push aam stc jae jg jns or adc dec loope subb add pusha insb std icebp pop jno inc fmul imul or andb pop movsl (bad) aam stos mov into adc fdivrl into outsl cmp fmull jns jae iret jb cli mov xor inc dec xor sbb cmpsb inc pop mov dec loop aam cmp ret sub (bad) aaa call push xchg gs add push jmp scas push cli insb jge lods mov jle shl inc mov stos out jne push repz out xchg out sahf push pop inc xor inc dec xor stc sub inc jmp mov xchg (bad) dec aam imul pop push aas jo xlat xchg ficomp into add cmp sar mov sti arpl xor js push adc std sub stc sti pop jle and mov loope jmp das mov pop leave add roll adc inc xor outsb imul test xchg mov scas out in mov test add and repz jge,pt aas out sub mov ja iret and cli mov (bad) mov loope imul add test and lock mov rclb mov jg mov mov cmp sahf push inc call scas adc push pop fisttpl cmp push popf fbstp sahf aaa ljmp fbstp call add add stos xchg mov add pop add (bad) mov inc (bad) enter and int or or js xor iret shrl cmc imul lret cs aam push cmp imul cmpsl push das out int3 int sbb jb daa mov xor incb leave add rorl sbb xchg lds subb cltd aas hlt rcrb cwtl jle jns jge fcomps in mov cmp xadd (bad) stc cltd jp pusha pop inc pop aam jae cmc int repz sarb imul pop clc (bad) and pop into fisttp jb jnp jne jp ss mulb sbb ss popf pop pop dec inc aad mov pusha cli cltd out add out mov stc call add inc ret ljmp dec mov repz jle rclb mov fwait jmp ret popf repz (bad) xor xor jnp fistp sbb aaa cli iret mov inc adc dec pusha push loopne sbb xor test xchg mov pusha and fdiv mov xlat std rolb jl movl push (bad) sbb mov adc int in sub insb mov lcall fcomps xor daa push das out dec (bad) push pusha pop fnsave xchg mov jae cmc add add inc (bad) or cmc and ss jno test out pop mov addb or js jae cmp repz push xchg ficomp jg (bad) hlt (bad) lds push mov fwait (bad) dec lahf pop add mov pop ljmp mov loopne adcb cmp adc mov movl aad push lahf push xchg (bad) push ds daa add xchg stos sbb push mov jo loopne dec add (bad) aaa mov mov stc xor repz (bad) popf idivl mov popf fisttp xor in xchg add inc (bad) or push add mov sub pop das fdivrl add jle aad mov fidivrl mov push add sbb mov adcb stc adc xchg push pop lods lahf aas scas mov cwtl mov mov aaa iret push mov lret in cmpsb ror xchg pop outsl hlt jge push pop mov (bad) (bad) push loop out sub js add inc (bad) or insl subb mov mov jp scas jmp mov jno rclb repz pop std sahf lahf jmp add out aad xor inc mov into add mov lods ljmp (bad) out add xor pop jg pop sbb push imul lret add push dec add js sub xchg or adc dec call cmp mov jmp sti jp jle (bad) sti ss fdivp pop add movsb stos aam lret mov popa out add divb jbe std add lahf stos xchg repz cmp add sar add dec cltd xor ret lret neg pop dec je lods (bad) arpl decl pop cmp jg push ja cmp pusha dec sahf xchg outsb movsl fdivrl add int ljmp lcall rorb js add test sbbl add je sar push xchg mov rclb repz aas (bad) fdivl test test lods xchg repz push mov and mov cmp mov push sti cmpsl or jcxz and xchg add inc (bad) mov jp pop cmc addr16 cmp neg das mov sbb popf sbb jge add std mov mov mov fstl std pushl dec lea lea inc into lahf (bad) mov push cmp cmp out insl mov iret cmp std pop outsl fistpll mov jecxz push hlt dec push and or mov je push jo sbb fs ret adc fisttpll sar pop scas mov call insb push lods out int aam mov leave add lods mov inc enter mulb push ret ljmp in pushf or jno mov jg int push mov add or dec inc inc push hlt cmp jmp hlt hlt not sti imull cmp mov add inc (bad) mov jg icebp inc lods add push out cmp inc pop das sub mov nop mov jp jno imul pop (bad) or xchg pop (bad) pushf fisttp cwtl aad daa int iret jno pop jo push lahf add push decb inc xor inc dec xor or lods cmp jne int sti or test enter xlat pushf or ret jns cmpsb mov adc dec pop inc jmp loopne fwait add dec mov shrl fcmovbe pop andl mov cmpsb scas inc shll or adc dec xchg or sub add mov dec jge and or mov add inc stos (bad) pop arpl xchg pushf mov int mov xchg fistp cmpsb adc add sahf add pushf fistp cli sahf mov jl out in add cvtps2pi lock clc scas std pop push leave add roll cmc lahf mov jecxz push iret stc sub aam xchg dec cmp push (bad) cmp cmp dec in pop jno das mov cld jnp cmp or jp (bad) xlat stc out out sahf mov outsl imul jle loopne cmc fwait mov ja push leave add rcll and into outsl clc mov popf imul add mov mov push (bad) push (bad) aam mov dec mov (bad) jmp add mov jno pop jg out test jb mov xor out ljmp int fistp test xor lea fsubp xor rcl mov add int push stos add inc aam dec lods cmp mov dec cs or xchg pop push popf jg out jecxz cmp mov sti mov pop test push lahf cltd (bad) pop sub mov fistpll pop or cli (bad) fisttp stc push and imull or adc cmp (bad) cmp jnp add (bad) aas stos add cmpsl inc adc pop jge stc shll cmpsb jge scas stc mov jl xor gs insl out clc lods ljmp mov roll loope (bad) ljmp jle jp or subb pop pushf lds scas int loopne jg mov and dec or or mov add xor stc mov imul in movsb pop ljmp pop xor push lahf jle fild mov outsl call or mov ret out sti jg icebp xchg js sahf pop add outsl scas pop (bad) mov aad rcl mov hlt arpl sbb shrb cmp jg cwtl iret (bad) sti fucom jne and adc adc add mov repz jnp pop mov ret jl mov jg mov mov push popf push jae ficomp stos hlt fcmovnu rcrl mov cmp jg pusha mull lar jne fmulp aaa call lret sar (bad) popf sub mov mov jle pusha lds jnp lods pop cmp cld dec je int3 clc aaa and xor test arpl lock dec add test in ds or or ss rorl cmp (bad) push jecxz cmp sub out jmp shrl sbb stc int ret xchg add inc push jae loopne stos es pop sbb push fisttpll inc stos scas sarb movsl leave fsub stos jecxz cmc cli sbb jns mov xchg cmc ja lret (bad) repz out lret add mov and adc add scas mov mov cmp repz pop pop mov pop pop push xchg and mov test lcall sub xor pushf fbstp jne (bad) shlb (bad) sub add test mov out adcb mov (bad) sti popf mov fimul push iret (bad) sbb or push (bad) jle sahf mov xchg fisttpll aad (bad) inc aam ds loopne outsb sub mov arpl (bad) (bad) int3 fidivrl (bad) xchg mov jmp in imul cmp lcall or repnz xor jns enter sbb andb cwtl dec add add imul pushf or jge test ds out add mov add jle xlat stc pop ret or adc dec sbb add mov push mov push repz pop pop decl pusha pop int3 sbb pop rcrb stos movsl iret jno add and aas xchg push and dec xor insb pop pop cmp dec andb mov aad adc sub rcll lea inc or cmp in aaa fucom mov or aas add and or xchg in pop push into jns inc addr16 inc adcb les xor std push mov jle das cld mov loope xchg mov pop inc xor inc dec xor shlb mov dec push popa cmpl xor pop shl lods ljmp and or enter movsl aaa add jmp adc popf mov aad xchg jg jg popf fbld sbb add and lcall push sbb into nop pop rcll lea jae mov dec pop cmc jnp push pushf fbld sbb add and lcall or or cli mov ljmp iret out inc xor inc dec xor mov inc and mov pop add push sub sub inc cmc data16 test and dec push and or xchg mov inc mov imul add mov lods sahf inc sub adc cltd aad ret jnp push insb mov aad repz adc fdivp pop add daa scas mov out pop add mov pushf sub iret pop push leave daa gs stc or add (bad) out out xchg out aas out sub push cmp pushf sbb fisttp nop mov jnp jbe jae bound jge (bad) jne pop add aaa ss icebp fldt incb pusha mov nop fstp sub cmc lahf test add fdivrp test test icebp jg pop shrb fwait leave out pop lds cli jb adc push pop fidivr mov or dec xchg jae leave add rcll jecxz xchg push mov push xchg int3 cmp add ss and adc dec lds lahf jg test mov pushf fbld sbb cmpb jb fucomp fwait out in cld js out ret xlat scas sahf push shr cmp push sahf dec adc jno push xlat (bad) jne add fdivl jns (bad) ljmp xlat adc insl sbb or aam aas or jecxz inc hlt pop jae jmp mov pop jge cmp shrl ds jb add lods fwait push sub jae out cld jecxz in jle add add adc add mov mov imul xlat scas mov mov jg jb aaa lret pop add rorl sub andb subb jle das jne cld data16 iret mov xor inc dec xor cwtl mov lahf mov outsb pop jae pop inc push jmp cmc mov mov stos mov movsl jl pushf pop add (bad) sbb push rorb pop mov jg lock xor sbb (bad) std dec push and or out loop sub call push notl daa lahf mov inc in cli sbb jns cmp divb push fidiv pusha sub push sti addr16 in iret (bad) sbb cmp je outsl repz pop inc addr16 jecxz fild call loopne jmp movsl lods push add cmp inc mov into cmp in stos idiv xchg jle mov (bad) xor inc add (bad) fstl mov sti push mov add rcll icebp imul rclb out inc push cli outsb pop cmp inc stos in or jmp push lahf mov xchg inc lahf icebp rcll in lods test test mov fistpll add in (bad) dec iret (bad) test jp ss (bad) nop pusha stos xchg add jmp xchg mov jns insl pop jae sbb sbb repz cmp xchg and dec lcall (bad) and fdivs add (bad) cmp add aas xchg push pop sarb and or (bad) int3 pop lret jp ss aam sbb mov sbb cmpsl sahf jl xor mov sahf cmp inc mov xor test jg cmp adc push push xlat cli sub lods add (bad) in mov mov jg push test or add rcll cmpsl mov xor cld or pushf imul add xchg mov dec add pop jp movsb push sub push pusha cmp fwait sbb cmp (bad) push adc movsl ja jne sub repnz push jnp rol shr dec push hlt outsl pop clc leave scas jle inc leave cmc int movsl cmc dec push and or lea mov xlat mov cmc ljmp rorb add ss add xchg cltd xchg xchg lods pop pop lret sti stc sub aad daa sbb add jge or (bad) mov cmc dec push and or jge pop stos mov mov mov call adc add loop mov mov cmc dec push and or incl add dec push jl add add dec inc dec inc scas inc pusha (bad) sub add xor add pusha add add add add add add add add inc add inc add inc add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add add add inc add inc add inc inc push inc inc inc add inc add inc push inc inc inc add add add aad pop insb shll pop imul push insb aam pop insl (bad) mov xchg jp insb (bad) push push gs or add add inc add inc add inc inc push inc inc inc add inc add inc push inc inc inc add add add inc add inc or inc or inc add add add inc add inc inc or jl pop imul pop insb aad pop insb aad pop insb aad pop insb aad pop imul pop imul pop insb aad pop insb aad pop insb aad pop insb aad pop insb aad pop insb (bad) negl into rcrl xchg pop imul pop insb fadds inc inc inc add inc or inc or inc add add add inc add inc inc or inc add add add add add inc add inc add add add inc add inc or inc inc or inc inc add add add adc push je push jecxz insb sar pop insl aad pop insb (bad) lcall (bad) lcall lcall lcall iret lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push lcall lcall aad pop insb (bad) outsb pop insb (bad) adc add add inc add inc or inc inc or inc inc add add add inc add inc push inc inc inc or inc add add add inc add inc add inc inc add inc inc add inc add inc or inc inc or inc inc add aam pop insb aad pop insb (bad) fistp lcall lcall int pop insb sar pop insb aad pop insl (bad) lcall (bad) lcall lcall lcall into lcall into lcall lcall aad pop insl (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insb aad pop insb aad pop insb aam inc inc inc add inc or inc inc or inc inc add add add inc add inc add inc inc push inc inc inc add add add inc add inc or inc push inc inc inc add inc add inc or pusha lods sub insb sarl pop insb (bad) lcall lcall lcall lcall int pop insb sar pop insb aad pop insb aad pop insb aad pop insb (bad) lcall lcall into lcall into lcall lcall lcall lcall lcall lcall lcall int pop insb sar pop insb aad pop insb aad pop insb aad pop insl aad inc inc inc add inc or inc inc or inc inc add add add inc add inc add add add add add inc add inc inc push inc inc inc push inc inc inc add push pop imul pop imul pop insb aad pop insl (bad) lcall lcall lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insb (bad) lcall (bad) lcall lcall lcall into lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push lcall lcall lcall lcall jmp inc inc inc add inc or inc inc or inc inc add add add inc add inc add inc push inc inc inc push inc inc inc push inc inc inc add (bad) add aad pop insb aad pop insb aam pop imul pop imul pop insb aam pop insl (bad) lcall lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall aad pop insl (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall negl pop dec pop popl inc inc or inc inc or inc inc add add add inc add inc push inc inc inc push inc inc inc push pop insb aad pop insb aad pop insl (bad) lcall (bad) lcall lcall into lcall into lcall lcall lcall (bad) lcall lcall lcall lcall int pop insb sar pop insb aad pop insb aad pop insb aad pop insb aad pop insb aad pop imul pop imul pop insb aad pop insb aad pop insb aad pop insb aad pop insb aad pop insb sar pop push lcall lcall lcall lcall negl pop inc inc inc add inc or inc inc or inc inc add add add inc add inc push pop gs negl aad pop insl (bad) lcall (bad) lcall aad pop insb aad pop imul pop imul pop insb aad pop insl (bad) lcall lcall lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insb aad pop insl (bad) lcall lcall lcall into lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push lcall lcall lcall lcall negl dec inc inc inc add inc or inc inc or inc inc add add add add add inc add inc add and jmp imul pop insb sar pop insl aad pop insl (bad) lcall aad pop insb aad pop insb aam pop imul pop imul pop insb aam pop insl (bad) lcall lcall (bad) lcall lcall int3 call sar push (bad) call (bad) call (bad) lcall int pop imul pop imul pop imul pop insb aam pop insl aad pop insl (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall jmp inc inc inc add inc or inc inc or inc add add add inc add inc add inc inc add add add aad pop insb aad pop insl aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall lcall (bad) lcall lcall into lcall into lcall lcall jmp lret decl mov out rcl in (bad) fsubr dec shr pushl (bad) gs lcall enter into lcall lcall lcall lcall lcall lcall lcall int pop insb sar pop insb aad pop insb aad pop insb aad pop insb aam inc inc inc add inc or inc push inc inc inc add inc add inc add inc inc or inc add pop insl aad pop insl (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insb (bad) lcall (bad) lcall lcall lcall into jmp int3 ljmp hlt cli (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc stc stc push hlt hlt (bad) stc stc stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push repz ljmp mov lcall int3 lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push lcall lcall lcall aad pop insb aad add add inc inc inc add inc add inc inc add add add inc add inc or mov loope insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad pop insl (bad) lcall (bad) lcall aad lea out push cmc cmc (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc stc stc push hlt hlt (bad) stc stc stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp call enter mov pop imul lcall aad pop insl (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insb aad pop insb aad add add inc inc inc add inc add add add add add inc add (bad) jbe imul pop insb aad pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad pop insb aad mov cli std (bad) std std std push cmc cmc push cmc cmc (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc stc stc push hlt hlt (bad) stc stc stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc stc cld lcall pop mov pop push lcall lcall lcall lcall lcall lcall lcall int pop insb sar pop insb aad pop insb (bad) outsb pop outsl xlat add insb aam pop imul pop imul pop insb aad pop insl (bad) lcall aad pop insl (bad) lcall aad pop insb sar pop imul pop insb sar pushf cmpsb in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std std std push cmc cmc jmp out (bad) mov mov (bad) (bad) mov call mov lock stc stc stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call popa mov pop push lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push lcall lcall loope insb fadds pop imul pop insl (bad) lcall lcall into lcall into lcall lcall aad pop insl (bad) lcall (bad) lcall aad pop insb sar jnp aad lock idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc stc std pushl js lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad imul push hlt clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push hlt stc pushl sar gs imul pop insb aam pop insl aad pop insl (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop imul pop insb aad pop insb (bad) lcall lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) jmp (bad) call aad push hlt hlt (bad) stc stc stc (bad) (bad) (bad) (bad) (bad) cli sti std call insl (bad) lcall lcall into lcall into lcall lcall lcall lcall lcall lcall decl cmc clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec shr call lcall int pop imul pop insb aad pop insb aad pop insb aad pop insb aad pop insb aad pop insb sar pop push lcall xchg inc inc inc add rorl aad pop insb (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall aad lea (bad) (bad) stc stc stc push hlt hlt push idiv lcall insb (bad) lcall (bad) lcall lcall lcall into lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar xchg sahf (bad) div stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld cld std incl addr16 lcall into lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push rcll mov add add inc inc inc add ret and insb sar pop insl aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall aad leave iret icebp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc stc stc inc lret pop insb int pop insb aad pop insl (bad) lcall (bad) lcall lcall lcall into lcall into lcall lcall aad pop insl (bad) lcall (bad) lcall aad pop outsb sar enter stc stc stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc (bad) in push arpl lcall lcall into lcall into lcall lcall aad pop insl (bad) lcall (bad) lcall aad pop insb (bad) notl mov add add add iret inc pop imul pop insb sar pop insb aad pop insb (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall aad div cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push lcall lcall aad pop insb aad pop insb aad pop insb (bad) lcall lcall into lcall into lcall lcall lcall lcall lcall incl repz (bad) stc stc stc (bad) (bad) (bad) (bad) push hlt cli call mov lcall lcall into lcall into lcall lcall lcall lcall lcall lcall rolb inc add add add aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall (bad) lcall aad pop insb aad pop imul ja aad std std std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp outsl (bad) lcall lcall int pop insb sar pop insl aad pop insb (bad) lcall (bad) lcall lcall lcall into lcall into lcall lcall (bad) lcall lcall jmp fdivr out cmc push hlt hlt (bad) stc stc stc (bad) (bad) (bad) (bad) ljmp sar imul pop insb aad pop insb aad pop imul pop imul pop insb aad pop insl (bad) lcall lcall lcall push add add pop insb aad pop insl aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall aad pop insl (bad) lcall decl cmc cmc (bad) std std std (bad) (bad) (bad) (bad) call xlat in lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall aad pop insl (bad) lcall (bad) (bad) fcomp cmc (bad) stc stc stc push hlt hlt (bad) stc stc stc incl imul pop insl aad pop insl (bad) lcall lcall into lcall into lcall lcall aad pop insl (bad) lcall jp add add add add mov (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall (bad) lcall (bad) call cmc cmc push cmc cmc (bad) std std std dec iret call lcall lcall lcall lcall int pop insb sar pop insb aad pop insb aad pop insb aad pop insb aad pop insb aad pop imul pop imul pop insb aad pop insb aad pop insb aad rcl repz (bad) (bad) (bad) (bad) stc stc stc push hlt hlt incl imul pop insb aad pop insb aad pop insb aad pop insb aad pop imul pop imul pop insb aad pop insb aad pop insl (bad) xchg add add add add mov (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall (bad) decl std std push cmc cmc push cmc cmc call aad call sar insl aad pop insl aad pop insl aad pop insb sar pop push lcall lcall lcall lcall lcall (bad) lcall lcall into lcall into lcall lcall (bad) (bad) fcmovu cmc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc stc stc incl imul pop insb aad pop insb (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall mov add add inc add aad pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) (bad) jnp (bad) (bad) (bad) (bad) (bad) std std std push cmc cmc (bad) (bad) in lcall lcall lcall (bad) lcall (bad) lcall aad pop insl sar imul ljmp ret jo call sar insl (bad) lcall lcall into lcall into ljmp fdivr out lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) lcall int3 lcall lcall aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall iret lcall lcall jl add add inc add shrb aad pop insb (bad) lcall lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad popa jno (bad) stc stc std (bad) (bad) (bad) (bad) (bad) std std std push hlt hlt (bad) js mov lcall lcall (bad) lcall ljmp (bad) jmp idiv hlt hlt hlt (bad) stc stc stc (bad) in out idiv fs lcall (bad) lcall lcall lcall into decl std std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push clc sti lcall vsubsd pop imul pop insb sar pop insb aad pop insb (bad) lcall (bad) lcall lcall lcall lcall into push inc inc add inc add int3 inc pop imul pop insb aad pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad int repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std std std inc lret push popa mov pop imul pop insl (bad) lcall (bad) js (bad) clc stc std (bad) stc stc stc push hlt hlt push repnz insl js lcall (bad) lcall (bad) lcall (bad) jmp (bad) call fsubr push cmc cmc (bad) std std std (bad) (bad) (bad) (bad) dec int lcall sar pop insl aad pop insb sar pop imul pop insb sar pop insb aad pop insb (bad) lcall (bad) lcall (bad) lcall lcall lret inc inc add add add shll pop imul pop imul pop insb aam pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar xchg fwait jecxz cld std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti sti cld lcall pusha mov pop imul pop insl (bad) (bad) jl (bad) cli cli std (bad) (bad) (bad) (bad) (bad) stc stc stc (bad) out out icebp ljmp mov lcall (bad) lcall aad mov jmp push cmc cmc push cmc cmc (bad) sti sti cld decl aad pop insl (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall (bad) lcall negl shll inc inc inc add add add or rcrl iret lcall into lcall lcall (bad) lcall lcall (bad) lcall aad pop insb sar pop imul popa jo (bad) (bad) idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc stc sti call pusha mov pop push (bad) jge fdivrp sti sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push cmc idiv jo mov lcall aad mov std (bad) (bad) (bad) (bad) (bad) (bad) std std std push cmc cmc call aad lcall sar pop insb (bad) lcall lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad pop insb (bad) lcall rcrl aad pop insb aad pop insb aad pop imul pop imul pop insb aad pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop push (bad) jg (bad) div cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld cld std jmp arpl sti sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli cli cld pushl sar imul mov out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push cmc cli (bad) jp sar pop imul pop insb aad pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad pop insb aad pop insl (bad) inc pop insl (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul sahf cmpsl loop cld cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp out call (bad) jnp (bad) (bad) stc cli cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli cli std pushl lcall (bad) fstp out (bad) stc stc stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld cld (bad) lcall insl aam pop imul pop imul pop insb aam pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop imul pop insb fadds insl aad pop insb aad pop imul pop imul pop insb aad pop insl (bad) lcall lcall (bad) lcall lcall lcall int test cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out call mov push repnz (bad) std std std (bad) (bad) (bad) (bad) (bad) cli cli cld pushl jmp (bad) jmp jmp hlt (bad) stc stc stc (bad) cld cld (bad) ljmp insl (bad) lcall lcall lcall into lcall into lcall lcall (bad) lcall lcall (bad) lcall aad pop insb sar pop push jecxz push jl inc inc inc add inc add add add jb insb (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall lcall aad pop insb sar pop push call icebp sti (bad) (bad) (bad) (bad) jmp out call sar xchg push icebp hlt push cmc cmc (bad) std std std (bad) stc stc cld pushl (bad) jno (bad) in out cli (bad) stc stc stc jmp out call insl aad pop insb (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad pop push jb inc inc or inc add add add inc add inc add inc inc add imul pop insb aad pop insl (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul jo xlat inc enter fdiv lcall sar ja fdivr div sti push cmc cmc push cmc cmc push idiv pushl (bad) lcall (bad) (bad) fcmovnu idiv (bad) leave out pushl xlat lcall int pop insb sar pop insl aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall fistp adc inc inc add inc inc push inc inc inc add add add inc add inc or inc push pop insb aad pop insl (bad) lcall (bad) lcall lcall lcall into lcall into lcall lcall lcall (bad) lcall lcall lcall lcall int pop insb sar data16 lcall pushl (bad) div cld (bad) std std std push cmc cmc (bad) in in repnz lcall (bad) jmp fdivr pop insl (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad pop insb (bad) lcall (bad) lcall lcall lcall into lcall into lcall lcall lcall add add add add inc inc inc add inc add add add add add inc add inc inc push dec pop xchg adc mov pop insl (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push lcall lcall jmp fdivr int3 (bad) repnz (bad) idiv fucom cmc inc lret ljmp insb aad pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall mov inc inc inc add inc add inc push inc inc inc push push mov insb aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) jmp xlat jmp xlat lcall aad pop imul pop imul pop insb aam pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into jmp pusha lods sub inc inc add add add inc add inc push inc inc inc push pop imul negl aad pop insl aad pop insl aad pop insb aad pop imul pop imul pop insb aad pop insl aad pop insb aad pop insl aad pop insl aad pop insb sar pop push lcall lcall lcall lcall aad pop insl aad pop insb aad pop imul pop imul pop insb aad pop insl aad pop insl aad pop insl aad pop insl aad pop insb sar pop push lcall lcall aad pop insl aad pop insl aad pop insb aad pop imul inc inc inc or inc inc or inc inc add add add inc add inc push inc inc inc push pop push push pop insb aad pop insl (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push lcall lcall lcall (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insb aad pop insb aad add add inc inc inc add inc or inc inc or inc inc add add add add add inc add inc add inc add inc push inc dec pop adc int3 push pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop imul pop insb aad pop insl (bad) add add add add add inc add inc or inc inc or inc add add add inc add inc add inc inc add inc add inc push inc inc inc push pop imul jmp insl aad pop insl aad pop insb aad pop insb aad pop imul pop imul pop insb aad pop insl aad pop insb aad pop insl aad pop insl aad pop insb sar pop push lcall lcall aad pop insl aad pop insl aad pop insl aad pop insb aad pop imul pop imul pop insb aad pop insl aad pop insl aad pop insl aad pop insl aad pop imul pop mov inc inc push inc inc inc add inc add inc or inc push inc inc inc add inc add inc add inc inc or inc add add add inc add inc push inc inc inc push push gs mov pop insl (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall aad pop insl aad pop insb sar pop imul pop insb sar pop insl aad pop insb (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall aad pop insb aad pop insb aam inc inc inc push inc inc inc push inc inc inc push inc inc inc add inc add inc add inc inc add add add inc add inc or inc or inc add add add inc add inc push inc inc inc push dec pop xchg adc push pop insb (bad) lcall lcall lcall into lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall lcall lcall lcall into lcall into lcall loope insb aad pop imul add add inc inc inc add inc push inc inc inc push inc inc inc push inc inc inc add inc add inc add add add add add inc add inc or inc or inc add add add inc add inc push inc inc inc push inc inc inc push pop imul pop insb aad pop insb aad pop insl (bad) lcall lcall iret lcall iret lcall lcall aad pop insl (bad) lcall aad pop insb aad pop insb sar pop imul pop insb sar pop insb aad pop insb (bad) lcall (bad) lcall (bad) lcall loope push mov add add add inc add inc push inc inc inc push inc inc inc push inc inc inc add inc add inc or inc or inc add inc add inc add inc inc or inc add add add fadds insb aad pop insb aad pop insb aad pop imul pop imul pop insb aad pop insl (bad) lcall (bad) lcall lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insb aad pop insl (bad) inc pop imul inc inc inc add inc or inc or inc add inc add inc add inc inc or inc add add add inc add inc add inc inc add inc inc add inc add inc add inc inc add add add or shll pop push inc pop imul pop insb aad pop insb (bad) mov mov aad pop insb aad pop imul pop push rorl add inc inc inc add inc add inc inc add inc inc add inc add inc add inc inc add add add inc add inc add inc add inc add inc add add add inc add inc add inc add inc add inc add add add inc add inc add inc add inc add inc add add add repz iret iret add stc icebp rolb movl add add cmp add adc add sahf add add js add cmp add addb add add loop add add add lock add pop add clc add add add add add add add add add add or add add add push add rolb add pop add rolb add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or add add add sldt loopne add add add lock add pop add clc add add inc add cld add add arpl add icebp add popl add add add addb push add ret rolb nopl add loop add popl add icebp rolb movl sti push add sub add and add inc add add add add add add add add inc add inc add inc add inc add inc add inc add inc add inc add inc add add outsb fadds inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc or inc add add add add add inc add inc or mov push pop insb aad pop insb aam pop imul pop insb aam pop insl (bad) lcall repz insb aam pop push lahf pop imul pop insb (bad) or add add inc add inc or inc add add add add add inc add inc or inc add add add inc add inc add inc add inc or inc inc add add add push pop insb rorb pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall icebp pop insb (bad) mov push inc inc inc add inc or inc inc add add add add add inc add inc or inc add inc add inc push inc inc inc add add add add add inc add inc or imul pop insb aad pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall out pop insb aad inc inc dec add inc inc or inc inc add add add add add inc add inc add add add inc add inc or inc inc add add add aam pop imul pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall mov inc inc inc or inc inc add add add add add inc add inc add inc or pop cmpsl or mov pop insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall mov pop movsl or inc or inc inc add add add dec add imul lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall mov inc inc inc or inc inc add add add inc add inc add add add fs insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall pushl sar fwait mov aam stos mov lcall jns call ret lcall lret lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall bound inc add inc or inc add inc add inc push pop push aad pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall (bad) jnp sar aad in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld cld cld push cmc cmc (bad) cld cld cld (bad) (bad) (bad) (bad) call xlat in pushl (bad) call ret lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall aad pop insb aam inc inc inc add inc add add add inc add leave xchg pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) jmp cli sti push cmc cmc (bad) cld cld cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld cld cld push cmc cmc (bad) cld cld cld (bad) (bad) (bad) (bad) (bad) cld cld std lcall fs insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall mov add add inc add add add (bad) or icebp pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld cld cld dec shr call test (bad) js fdivr xchg popf loop int3 shr (bad) cld cld cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call vsubsd lcall (bad) lcall (bad) lcall lcall into lcall icebp pop insb (bad) or add add add add pop pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) pushl fcos out lock cld cld cld (bad) std std (bad) lcall insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall call cli cld (bad) (bad) (bad) (bad) push idiv jmp mov lcall lcall (bad) lcall (bad) lcall lcall into lcall push add add inc inc inc add lahf pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) (bad) mov cld cld push cmc cmc jmp insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall jmp cld cld (bad) (bad) (bad) (bad) pushl lret imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lahf inc inc inc add inc add rcl pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall aam repz cld (bad) (bad) (bad) (bad) (bad) ljmp lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall aad in icebp (bad) cld cld cld push icebp clc call ret lcall lcall into lcall lcall (bad) lcall (bad) lcall roll inc add add add cmc pop imul pop insb aam pop insl (bad) lcall (bad) lcall pushl sar cld cld cld (bad) (bad) (bad) (bad) (bad) mov insb sar pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) (bad) mov cmc cmc (bad) cld cld cld ljmp (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall repz inc inc add add insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) (bad) jg (bad) cmc cmc cmc (bad) cld cld cld jmp insl aad pop insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) ljmp cld cld push cmc cmc pushl lret lcall (bad) lcall (bad) lcall lcall into lcall lcall lcall add insl xlat add insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) (bad) jnp (bad) cld cld cld push cmc cmc ljmp imul pop insl (bad) lcall lcall into lcall int pop push iret lcall lcall into lcall pushl (bad) (bad) (bad) cld cld cld pushl (bad) lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall add inc inc add cmc pop insl (bad) lcall (bad) lcall lcall into lcall jmp (bad) cld cld (bad) (bad) cld cld cld dec shl call ret lcall (bad) lcall (bad) incl shl call (bad) ljmp insl (bad) lcall lcall into (bad) (bad) cmc (bad) (bad) (bad) (bad) (bad) sti cld std lcall leave lcall into lcall lcall (bad) lcall (bad) lcall lcall (bad) repz inc inc add inc add rcl pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall call fdiv (bad) (bad) (bad) (bad) (bad) cld cld cld (bad) jnp sar push lcall (bad) jmp cld cld push cmc cmc call insl (bad) lcall (bad) decl cmc cmc (bad) cld cld cld call aad lcall lcall lcall into lcall lcall (bad) lcall (bad) lcall roll inc add add add lahf pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into decl (bad) (bad) (bad) (bad) (bad) (bad) out out idiv outsb jns lcall int3 jmp (bad) (bad) (bad) cld cld cld lcall insb aam jge fdivr hlt cmc sti (bad) cld cld cld push cmc cmc decl insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall popf inc inc inc add add add pop pop insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into inc int (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push cmc stc jmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jge push idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc lret pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall push pop insb (bad) or aad pop insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall jmp sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jnp int3 jmp cld cld (bad) (bad) (bad) (bad) lcall xchg fdivrp cmc cmc cmc (bad) cld cld cld call fcomi jmp xlat lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into repz fs add inc add inc add lea (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall jmp iret (bad) mov std (bad) (bad) jge sar mov cmc cmc (bad) cld cld cld lcall xchg loope sti sti cld pushl jno lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lea inc or inc add inc add inc push pop lds pop insb (bad) out pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into pushl (bad) push cmpsb out cld cld cld push cmc cmc call js (bad) js fdivr pop insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall out pop insb (bad) push inc inc inc add inc add add add inc add inc or imul pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall pushl fdivr mov in pushl (bad) aam pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall shlb add add add add inc add inc add inc inc or insb shrb pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall movsl inc inc inc or inc inc add add add inc add jbe pop insb sarl pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) mov inc inc inc add inc or inc inc add add add inc add inc add inc add jbe pop insb shrb pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall lret pop movsl or add add add add inc add inc or inc add inc add inc push inc inc inc add add add add add inc add inc inc or imul pop insb (bad) out pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall out pop insb aad inc inc dec add inc inc or inc inc add add add add add inc add inc add add add inc add inc or inc inc add add add add add inc add inc or lds pop insb aad pop insb aad pop insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall icebp pop imul sbb add add add add inc add inc or inc inc add add add add add inc add inc add inc push inc inc inc add inc add inc push inc inc inc add aad pop insb aad pop insb rcrl pop insb aam pop insl (bad) lcall aad pop insb aam pop imul pop insb aam pop insb aad pop insb (bad) or inc add inc push inc inc inc add inc add inc push inc inc inc add inc add inc add add add inc add inc add add add inc add inc add add insl xlat add add add inc add inc add add add inc add inc add add add inc add inc add add add add add jp mul add xor add cwtl add or add pop rolb add add add add addb add add add add add add add add add add add add add add addb add add add add add add cwtl add or add (bad) into inc add idivl add add add add add add add add add add inc inc inc add inc add add add inc add inc add inc inc add add add int pop imul inc pop insb (bad) inc pop imul push arpl add add add inc add inc add add add inc add inc add inc inc add add add inc add add add inc add inc or inc add add add mov pop pop insb aam pop insb aad pop insb aam pop imul pop insb aad pop insl aad pop insb (bad) repz imul pop insb aad pop imul or inc add add add inc add inc or inc add inc add inc add inc inc add inc add inc or lret cmp insb aad pop insb aam pop imul pop insb aad pop insl (bad) lcall lcall sar pop insb aad pop insb aad pop insb sar pop insb sar pop insb aad pop insb sarl inc inc inc or inc add add add inc add inc add add add inc push inc inc inc push pop imul pop insb aad pop imul pop insb sar pop insb (bad) lcall lcall iret lcall lcall (bad) lcall lcall sar pop insb aad pop insl aad pop insb sar pop insb sar pop insb aad pop insb aam inc inc dec or inc add add add inc add add add inc add inc push pop push outsb pop insb aad pop insb aad pop imul pop insb sar pop insb aad pop insb aam pop imul pop insb aam pop insb aad pop insb sar pop imul pop insb aad pop insl aad pop insb sar pop insb sar pop insb aad pop insb aam inc inc inc or inc add add add inc add inc add cmp sti pop insb sar pop insl aad pop insb aad pop imul pop insb sar pop insl sar jge aam xchg popf aam xchg sahf xlat (bad) jnp into lcall (bad) lcall into lcall lcall aad pop insb sar pop insb sar pop insb aad pop insb sarl inc inc inc or inc add inc add orb aad pop insl aad pop insb sar pop insb sar pop insl aad pop insl aad mov repz (bad) (bad) (bad) (bad) std std std push div (bad) std std std jmp call int3 lcall enter aad pop insl aad pop insb sar pop insb sar pop insb aad pop push push inc inc inc add add add iret push pop imul pop insb aad pop insl aad pop insb sar pop insb sar cmpsb scas out std std (bad) push div jmp jmp lock leave out jmp in (bad) std std std (bad) std std (bad) lcall push aad pop insl aad pop insb sar pop insb sar pop insb (bad) push pop insb (bad) mov insb sar pop imul pop insb aad pop insl aad (bad) mov push idiv (bad) std std (bad) jmp outsb sar pop insb sar pop insl (bad) jmp aad mov cld std (bad) cld cld std (bad) jnp leave lcall sar pop insb aad pop insb aad pop insb sar pop imul add add push mov insb aad pop insb (bad) lcall lcall sar pop insb aad aam hlt (bad) stc stc stc ljmp insl aad pop insb aad pop imul pop insb sar pop insl aad pop insb aad lods mov (bad) std std std dec shr lcall lret lcall sar pop insb aad pop insl aad pop insb (bad) repz arpl sub imul pop insb aam pop insb aad pop insb sar arpl (bad) cld cld (bad) (bad) stc cli cld jmp int3 lcall lcall aad pop insb aad pop imul pop insb sar pop insb aad imul (bad) cli sti cld lcall enter sar pop imul pop insb aad pop insl aad pop imul pop insb aad pop insb aad pop imul pop insb aad pop insl (bad) pushl fcos div idiv out hlt lcall int pop insb sar pop insb sar pop insl aad pop insb aad pop imul pop insb sar pop insl (bad) (bad) call div ljmp int pop insl (bad) lcall lcall sar pop insb aad pop insb (bad) inc pop insb aad pop insl (bad) lcall lcall iret lcall pushl (bad) sti sti sti jmp call leave lcall aad pop insb sar arpl jmp lret lcall sar pop imul pusha outsl aam icebp repz (bad) std std std ljmp leave lcall lcall (bad) lcall lcall sar pop insb aad pop push cs insb aam pop insb aad pop insb aam pop imul pop insl aad icebp repnz (bad) sti sti sti (bad) jnp (bad) lcall ljmp fdivr hlt cmc clc push repz bound lcall incl sti sti (bad) out lock lcall iret lcall iret lcall lcall (bad) lcall lcall lret sub imul pop imul pop insb sar pop insl (bad) lcall lcall iret pushl (bad) (bad) jmp in jmp ljmp (bad) cld std (bad) push idiv jmp leave ljmp fcos ljmp ljmp insb aad pop insb aam pop imul pop insb aad pop insb aad pop push or add add mov imul pop insb sar pop insb aad pop insb aad fs jmp out (bad) (bad) (bad) (bad) jmp loop ljmp lret cld (bad) (bad) cld cld std jmp leave jmp in (bad) (bad) (bad) (bad) jmp out jmp sar pop insb sar pop insl aad pop insb aad pop imul pop insb aam add add inc inc inc add push pop insb aad pop imul pop insb sar pop insb aad pop insb aam outsl jge (bad) (bad) idiv repnz jmp int3 push cmc idiv cld cld std ljmp into push icebp idiv fcmovnu icebp pushl (bad) pop insb aad pop imul pop insb sar pop insb (bad) lcall lcall (bad) pop inc inc inc add inc add xchg or rcrl lcall sar pop insb sar pop insl (bad) lcall jmp sar xchg mov xlat (bad) clc clc cli push hlt cmc jmp int cltd mov sar pop insb sar pop insl aad pop insb aad pop imul pop insb sar pop insb aad push gs add add add inc push pop push aad pop insb aad pop imul pop insb sar pop insb (bad) lcall lcall iret lcall aad lcall lcall sar pop insb aad pop insl aad pop insb sar pop insb sar pop insl aad pop insb aad pop imul pop imul add inc add add add inc add inc push pop push jb insb aad pop insb aad pop imul pop insb sar pop insb (bad) lcall lcall iret lcall lcall lcall lcall sar pop insb aad pop insl aad pop insb sar pop insb sar pop insb aad pop insb aam inc inc inc or inc add add add inc add inc add inc add dec or int3 jb insb aad pop insb aad pop imul pop insb sar pop insl aad pop insb aam pop imul pop insb aad pop insl (bad) lcall lcall sar pop insb aad pop insl aad pop imul pop push outsb pop imul inc inc inc add inc or inc add inc add inc push inc inc inc add inc add inc push pop push aad pop insb aad pop imul pop insb sar pop insb (bad) lcall lcall iret lcall lcall (bad) lcall lcall sar pop insb aad pop insb aad inc inc inc push inc inc inc push inc inc inc add inc add inc add add add inc add inc inc push inc inc inc add inc add inc push dec pop xchg or push pop insb aad pop imul pop insb aam pop insl (bad) lcall lcall lcall repz insb aad pop imul dec push orb inc add inc add inc push inc inc inc add add add inc add inc add add add add add inc add inc add add add or int pop insb aad pop insb aad pop insb shrl mov add add add add inc add inc add add add add add inc add inc add add add sbbl add add add add add add addb add add add add add add add add add or xor push add sbbl add add add add add add add add inc inc inc add inc add inc add inc add imul pop insb rcrl sarb insb aad pop imul pop imul inc inc inc add inc add inc add inc add inc inc add inc add inc add inc add gs movsl pop imul pop insb aad pop insb sar pop insb sar pop insb aad pop imul pop insb aad pop mov inc inc add inc inc add inc add inc inc add inc or xor jmp pop insb aad pop imul pop insb aad pop insb sar pop insb sar pop insb aad pop imul pop insb aad pop imul add inc inc add inc add rcrl pop imul pop insb aad pop insb sar pop insb sar bound (bad) jle sar jg aad pop insl lret insb sar pop insb aad pop imul pop insb aad pop mov inc inc add inc add cmpsl pop insb aad pop imul pop insb aad popf cmpsb loope icebp repnz (bad) (bad) (bad) (bad) stc stc stc push hlt stc lcall push lcall lcall sar pop insb aad inc inc inc add sbb sti pop insb sar pop insb aad xchg lahf (bad) std std (bad) pushl jg pushl (bad) scas mov (bad) std std (bad) call insb sar pop insb aad pop imul pop imul pop imul pop insb aad pop insb sar pop insb sar ljmp lcall lcall lcall lcall (bad) mov jmp int3 lcall lcall lcall rcrb aad pop imul pop insb aad push (bad) (bad) sti sti sti incl imul pop insb aad pop insb sar pop insb sar mov jmp iret lcall lcall lcall jl insb aad pop insb aad pop imul data16 (bad) cli cli sti decl insb aad (bad) mov incl insb sar xchg popf loope std std (bad) jmp int3 lcall lcall lcall jle imul pop insb sar pop insb aad pop imul xlat fcomi (bad) (bad) in jmp lret call aad dec int3 in gs (bad) fucom repz (bad) in lcall lcall sar pop insb aad pop insb rcrl (bad) sbb sti pop insb sar pop insb aad js fdivr hlt cmc cld pushl aam dec shr (bad) mov cmc sti (bad) js fcos pop insb sar pop insb aad pop imul pop imul inc inc inc add movsl pop insb sar pop insb sar pop insb aad je xlat call shr dec int lcall adc lcall lcall lcall movsl inc inc inc add inc inc add mov pop insb aad pop insb sar pop insb sar pop insb aad pop imul jns fdivr js (bad) pop insb sar pop insb aad pop imul pop insb aad pop insb shr pop gs add inc add inc add ret insb aad pop insb sar pop insb sar pop insb aad pop imul pop insb aad pop insb sar pop insb sar pop insb aad pop imul pop insb (bad) xor inc add inc inc add inc add inc add inc inc add mov pop insb aad pop insb sar pop insb sar pop insb aad pop imul pop insb aad pop insb sar pop imul pop imul inc inc inc or inc add inc add add add inc add inc add inc add inc add sbb pop pop insb aad pop insb aad pop imul pop insb aad inc inc inc add inc add inc add inc add add add add add add add add add add add add add add add add add add xor add add and test add add add add add add sbb add add add add adc add add add add or add add add adc adc add add sub add add add add add adc adc add add sub add add add add add adc adc add add sub add add pushf add add push add pop add inc add push add dec add pop add dec add dec add add add add add add add add add add add add add add add add add add cli add add add je jb imul inc add insb add dec add data16 add (bad) add add add add add add add add bound xor add sub add add inc add insb add inc add jae arpl jb imul imul add add add add add imul push add jb jae imul add add xor sub and xor sub and cmp sub and xor add add pop add add insl add imul add arpl jb imul add inc add je outsl add je and jbe xor and push add jb imul cmp and xor sub and xor sub and cmp sub and xor add add inc add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or mov cmp jae gs bound js insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and insl popa outsb imul jb imul xor ds je jne je outsb outsw and insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and or and arpl imul and and cmp gs gs gs jb jbe insb gs or and and and gs gs gs js arpl imul insb and gs cmp outsb jbe imul and inc arpl jae cmp jae and cmp jb jno gs gs js arpl imul insb ds and and jb jno gs gs jb jbe insb gs or and jae arpl imul cmp je jne je outsb outsw ds fs outsb fs arpl or and gs outsb fs je jae gs bound or and and jae gs bound fs je je and gs xor and outsb popa insl gs jb jae data16 push imul inc outsl insl insl outsl outsb sub jb insb jae and jb imul xor xor xor and addr16 addr16 jo outsl arpl jae jb jb push je jb cmp jo bound dec gs outsl imul and xor xor xor arpl xor ds popa jae gs bound fs je je ds and fs outsb fs je jae gs bound or das fs outsb fs arpl or jae gs bound push push push call int3 pop mov inc sub sub add cmpb jne movb mov push push push push call add mov pop pop ret push mov push push push push mov mov shr mov mov test je xor add add dec jmp pop pop pop pop leave ret aad jo ret lea mov loop cmp cmc xchg dec imul adc xchg in jl push xor or xor push subl pop add sub neg sub mov push pop pop dec xchg push negl pop shl push mov xor pop push mov sub pop mov 