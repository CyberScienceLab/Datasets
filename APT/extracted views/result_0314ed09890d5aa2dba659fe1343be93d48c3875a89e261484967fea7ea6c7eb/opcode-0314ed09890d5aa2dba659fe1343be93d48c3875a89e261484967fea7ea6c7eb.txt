call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov add push ret add add or or or add add push mov push push push push mov cmp push mov pop jl push pop xor div or decl std add movzbl adc mov shl or mov fwait in inc call xor inc add packuswb sbb and adc mov (bad) incl cld jne test jne movb jmp pop push shl dec movb jnp ja add cmp add ret shr rorl outsb pop push add add add insb mov pop mov pop leave ret cmpl fstpt jle mov pop rcrb jl mov adc mov adc adc sarb rcl or adc jb repnz inc pop daa push or or mov inc jmp jnp ret mov mov push mov (bad) or add adc (bad) jne push invd mov (bad) pop lods cmp mov into mov or xor in sub dec mov outsl adc (bad) call clc or push outsb call jle cmpb je jnp push jb cmp adc adc cmp adc push ret (bad) mov je dec sahf and sbb or outsb cmp jmp xor ret ret (bad) mov call mov mov std push push push jnp sbb sarb je (bad) fstl sub and je xchg dec jmp sub mulb or jae pusha es test jmp test fcomi outsl pop cmpl and and adc insl xchg adc add neg sbb inc mov pop mov (bad) cmp ja xchg and xor enter rolb mov mov xchg cmp jb ret data16 fidiv and push and inc pop xor mov jbe pop movsb mov mov jge sbb sbb in or mov (bad) jbe mov lea mov pop or jge test add jle (bad) sti jae jae push push jmp gs mov out fisubr xchg and jle mov sub lahf lock fcmovnu mov push cmp test cmp jbe inc push push sahf or xorl out aas (bad) sub mov clc add (bad) imul add add mov sub cmp jge xchg mov es rorl fisttp sub pushl mov mov inc xor add cmp cmp ss addr16 jmp mov add in sbb mov fistpl inc sub xor mov mov or fcom test movsb and xchg add cmpl fadds nop test shrb int cmp sar outsb jnp rcl cmpsl cmpl mov mov imul (bad) fild je mov push mov xor pop mov push repnz or fwait adc negb repnz push inc out pop out fidiv addl gs in jo adc inc push add leave adc push or out sbb insb mov test mov sbb mov push mov push hlt mov xchg and rorb inc adc sbb mov popa cmp mov fbld jne mov add xor mov adc fstl dec test (bad) xor adc (bad) movsl lds add sbb xchg loope (bad) aaa mov test es jb push add mov (bad) jbe inc sbb cmp sub add (bad) mov push push ss jbe cld xor cmp fmull pusha popa mov xchg aam adc les ja (bad) sbb add mov in push sbb std (bad) shrb outsl int jbe mov imul jo insb clc push pusha sbbl (bad) jae xor je mul pusha mov dec hlt daa lods pop pusha push push jg aam rolb js loope jne clc add add cmc popf mov cwtl test outsb push incl push mov shrl jge sbb pop inc dec andl mov mov aas rorb cmp adc sarl cmp xchg out mov pop mov inc add xor in out push push xchg das loope sbb adc sub cmp sub jge xchg dec (bad) pop mov xchg mov lret jl add (bad) clc adc lock mov fisttpll cld push pop (bad) push pusha xor jnp imul fmuls fsubrs mov lea decl mov xchg sarl and adc sub add sub mov (bad) xor lods push mov fwait insl cmpl btc dec sar and xchg shr cmp cmpsl aas test or dec nop addr16 mov mov psubw and nop xchg mov sub xchg sbb inc adc dec dec mov test inc nop movsl add cwtl push movsl (bad) xor lods pop mov mov in jge fbld add incl add mov mov pushf inc add or cmpsb or (bad) movsl adc cli push into cli lods ficomp iret (bad) imul xor or mov cmp pop or in negb sbbl sub xor mov jle inc mov cmp xor mov mov lods cli pop or inc mov ret pusha (bad) adc bound cmp add stos in mov inc jne lar mov mov or adc cmp je popa inc inc cmp jl jmp call sub xor out pop data16 jecxz add sub loop sbb ja daa jg into in sub push insb popa jp push out insb loopne (bad) inc push in out lea imul into jmp data16 daa adc or movb mov mov jbe push out xor outsl xor push mov jle cmp and nop mov add push lea cmp test aad or (bad) lea fldl sar jecxz stc inc xor pop and dec pop rcl cmpb out jle or js add push push or sbb call sub test ret pop rcll outsl mov push lea fldl jl addr16 js jns adc sub pop sbb jp push orb pop pop imul adc addl lods ror pop pop push orb mov sti insl adc outsb jle bound inc and loope hlt pushw pop xorl call sub mov push xchg and sub pop arpl xor int and push cmp cwtl jne sbb cwtl sub fwait addb out imul andl sub push add in sbb push sub and cmp imul or jnp add sub jne push mov or xchg dec inc je mov leave pop inc ja push aas je addl popf push inc loope add sbb decl cmp inc mov sbb mov xchg popf (bad) mov push add mov sti push lea loopne arpl (bad) out mov call shlb testb sbb adc ja andl mov rclb rclb test inc js dec lea push xor loopne (bad) jle sbb mov add sbb cmp jae or jl ds and ja mov dec push out lcall imul rcrb jle lea jg in inc lea test mov push and int sub dec add rorb loope xor ss outsb xor repnz push out mov push xlat pop mov xor cmp sbb sbb push roll add je mov pop faddp lods cmp adc loopne subl mov xor shrb mov mov mov orl fmull sub adc add cmp sarb add lock xchg int3 cmp xor adc mov cmp pop push push out push add pop cmp push or outsl mul roll jb mov ret inc pop fistpl icebp andl inc sbb xor sbb xlat pop adcb or repz add fstpl xlat jge dec mov pop pop jmp lsl push or sub sub sbb pop iret inc icebp dec fstpt push jge push mov mov add xorb popa push add fiadd jne mov sbbl or dec mov push or (bad) fiaddl sbb aad pop rorb aaa or sbb flds mov inc fmulp lds lock pop fs addl je loope lock out jb adc push adc cmp lret sbb jge adc jmp setle adc xor adc popa nop (bad) or andb adc push push rcrb rcll push in adc sbb ret inc sbb xor daa ficomp inc std mov pop inc jae or gs dec (bad) lds inc or inc pop adc adc dec adc div cld or xchg fcoml (bad) xchg mov sbb ss mov xchg mov shrl sbbl xor insl (bad) pop orl pop mov xchg test sub jmp or mov push inc ret push jne xor adc loop inc cmpl xchg rolb fcoms aam sbb not mov int3 out pop mov adc add dec jns sbb rclb push inc cmp bound das inc push repz mov fs push sbb rcrb or sub ljmp iret (bad) in ja mov adc imul ja data16 add out sbb pop push sbb mov jmp and xor jo push push insl xor cli push jg xor or and xchg insb arpl in mov cmp or cld xchg int3 and xchg sbb pinsrw mov add add rcll mov inc sbb (bad) pop sub push push pop mov sbb test push repz lock sbb sbb push push (bad) aam or ret (bad) adc mov data16 fnstenv int movsl ror cmp je mov sub add or call xlat inc or mov movsl pop pop roll push or mov xchg sub push pop cmc jmp cmp adc inc inc push jne das (bad) dec insl push inc pop and push imul mov sbb and int cmp inc (bad) cmp pop orl roll jecxz lods fsubr adc daa inc lea pop inc je fldl2t jns rolb pop fdivrs jl pop movl adc repnz and shrb clc adc jl loope inc ljmp jmp movsb and sti add mov hlt jbe push jg int3 adc js loopne stos insl or jnp nop inc sarl pushl sub jl sub mov call fnclex mov dec in ds inc cld dec xchg test arpl lds and push adc aaa hlt pop push adc xchg popf vcvtdq2pd push imul adc sti sub push lret adc loopne clc sub xor repz push push mov push sub adc jmp inc addb jnp add jne push or mov inc push lods popa mov int lock loopne push leave xlat push xchg xchg add add mov mov enter enter lock in adc jl in inc push lea mov bound push push mov pop imul adc aaa xchg sbb cmp mov int3 inc leave mov mov (bad) fnstsw test fnstsw stc or outsl hlt push sub je (bad) jae sbb in aas pop xlat repz cwtl lock lds roll pavgw xlat pusha shll push or add sub push mov mov ss sbb adc jle push imul mov cmp xchg cwtl add sub dec xor push jl jno outsl rcrl mov (bad) xor (bad) xor movsl (bad) ljmp or rep cmp or fimul adc inc push popf xor (bad) pop ret data16 fst (bad) fiaddl out push xchg push pop (bad) in popa rcrl inc dec adc jle jmp or subb mov test test mov or pop loopne (bad) mov push push insb dec jo imul and and repz into pop subl and push push (bad) fidiv pop jns pop xor dec les jne orl fdivl adc insl mov sbb pop xchg and inc mov imul psubsb mov adc push add lea rcrb inc (bad) pop movsl add mov xchg mov jg in pop sti pop movsl (bad) pop sbb mov sbb push add mov decl mov mov arpl dec icebp inc mov (bad) or lock aam (bad) flds or je and sub je add loopne aad or jle loop movzbl inc jmp call inc adc inc cmp fs out (bad) adcl inc push lea and mov mov inc lea mov add fistp roll clc add cmp dec xchg call mov std (bad) in cmova xlat sarb add cmp incl dec add imul add test cmp push mov add push push cmp pop popa jmp cmp movsb (bad) jno sub push xor push lea xlat test icebp or cmp je cmp je add jne std je pop inc rol or inc clc adc int or aad jle adc sub adc and in lret jmp inc mov push fmuls and mov ret add (bad) jo mov fildl inc dec mov mov cmp mov jl (bad) mov sub cli ret stc push jne mov inc push popa push push out dec adc incl push push inc mov ret test adc adc mov jge mov fistpll insl push mov push or cmp outsl ret cs sub push fsubl cmp mov mov or adc pop mov jb outsl int cmp or push jns mov pop pop push sbb xchg pop jle push or (bad) jge xor xchg adc mov sbbb lock add xchg dec mov or leave or xchg mov adc adc clc adc pop mov std and out fld fucomp fnstsw test jp fstp fld1 fsts xchg cmp jns mov fcomi fs mov cs lret jmp loope in adc shrl adc jae pop or mov add sbb mov jmp (bad) mov incl fmul fcompp jne je sbb aam xchg mov push loope adc mov jnp jo mov add and jl pop mov jg test in lock mov add ret jb out adc sub cwtl add pop mov leave out leave xchg xlat mov add mov cltd push xchg mov pop jg xchg sbb sbb les dec lods xlat xchg cmc cld sbb fidiv adc push outsb mov pop jp cmp xchg fstpl pop mov or cmp xchg std dec sbb movsl mov add xor jnp iret or sub add les scas or and add std pop (bad) push add adc rorl cmc mov test std in das push push xor cmp mov add push sub fucomp and (bad) call das xor pop leave (bad) jge cmp ljmp (bad) aaa add dec add cmp scas fs pop ret mov and mov add sbb add leave cmp nop lret outsl xor loope leave test jle push lea inc test add fstl xor mov xor hlt je push in xchg cld add aam (bad) dec cmpsb inc cmp movsl push out mov shrb adc shl add or mov lahf jae jg mov pop push (bad) mov sub enter popf imul push cld fcompl jg jmp push pop jecxz loopne and pop notb xchg push fsub jl mov je fildll pop fsubr adc sub test fs incl push in test xor jge pop hlt je imul imull sahf adc jne les mov lock lcall (bad) mov (bad) adc lods fild adc into push mov pop push mov pop fldl ss inc sbb movl lock test sbb jnp repnz pop (bad) mov call cmp shrl popa fbstp es adc aad xorl faddl loopne addr16 pushf fstpt scas sub je dec je add dec jne mov pop jmp or jmp or push jmp jb or in push inc or mov sbb scas sbb add dec mov push push outsl cwtl rolb dec pop sbb scas clc shll (bad) sbb sarb movsb cs sbb and xor inc andb ja add addl pusha imul xchg repz and or jo js push loope mov add es mov jmp sbb unpckhps negb adc fadds sub push mov or data16 adcb shrl adc pop xor mov stos mov lock push mov mov sbb outsb (bad) jle xor pop aam enter decl dec js or push lea jne arpl push es or xlat pushf mov xor dec mov jl insb out sbb clc dec les adc sub xchg cmpsb lea inc popa fs cmpsl les je cmp jb push and adc or insb and (bad) push jne out or lea fimull cmp fmuls pop mov push mov sbb inc mov dec push insb push (bad) mov sbb (bad) mov enter push mov inc dec pop xor (bad) add test xor or dec fbstp es cmp or cmpsl test popa lea xlat sub popf adc pop lods pop or and js js push push add or pop sbb sub pop mov les std mov rorb and outsl icebp ss push add arpl fiaddl test add xor inc mov mov je ljmp dec add jne xor sbb stos mov or add les push ljmp adc inc jl or mov sarl scas sub test xchg mov xchg and or inc add mov sbb adcb dec mov push nop inc xchg (bad) subl add adc in (bad) mov cwtl pop adc cmp into or test movb out ficompl push orl shlb jmp (bad) (bad) aam ret jmp push and add push sbb leave add sbb loopne push test or fadd jo push (bad) inc sti mov leave scas test inc add incl pop sub lret inc push (bad) loopne and into dec sbb lds cmp sbb push jno mov xchg add xchg popf jne sub dec int3 and pushf lds xor and sbb sbb lea test loop push test pop mov and fnop add add lret mov push ss push mov or icebp (bad) or stos xchg fcomp loop pop adc push jo sahf loope les (bad) sti loope and shrb (bad) push lea add jg inc sub add push movzbl dec inc fsubrs jns push pop sbb iret sub push xchg xchg xchg ret push out push out imulb fsubl or xor or xor pop or mov push adc lea dec loopne test mov push pusha cmp out or movsl push add rcrl jo push pop (bad) xor movsb sbbl push add or push cmp cli add movsl adc pop sub sbb push aas sbb push lea fiaddl or or jmp mov or mov js (bad) in mov je aaa fisubrl mov sarb inc je adc xlat aaa mov inc cmp push test xor sbbl and ud2 pop mov test push popaw divb pop push mov imul adc (bad) popf jne mov imul or and enter or and fisttpl or es arpl mov lcall cmp add sbb cmp and mov pop push add clc xchg or lods mov or add xchg jmp cmp and inc push xor aas cmc push mov dec cmp cmpsb mov leave inc bound mov add fldt lret rcl aam aad adc (bad) imul insb mov cmpl mov push sarb dec in fiadd mov mov dec xchg or je add ret int3 or push mov insb out lods insb sbb add ret fidivrl int3 jge sbb sbb fistpll insl orl inc pop mov mov add mov adc xchg and push mov xchg add cld cmp andl incb lea push push adc push jmp cmp cmp fs inc loopne dec mov jno sbb add loopne fisubr (bad) and (bad) fisttpll xor cmp mov pushf jge stos adc mov add imulb push pushaw (bad) jbe xor push mov arpl pop stos and rclb pop fadds mov push lods inc lods sub and enter imul mov push sarl xchg insw outsl mov and in or enter fnstenv or sbb cs sbb and addl jno outsl mov or test scas insb (bad) xor push cmp (bad) cmc (bad) imul cs or pop add push lock in push ja lods add movb and cmc mov or push sbb aam adc out pushl push int cmp push jbe sub sbb mov push cmp adc or or in jnp incl loopne inc sub fmul dec sub clc stc lds and push loop inc mov es (bad) frstor and add sar inc shl ffree test or and pop adc jg cmp jne pop (bad) pop jne fisubr push nop jne add jmp sbb je nop cwtl and nop xchg sarb rolb mov add sbb pop inc stos aas cmpsl incl icebp push je jg je cmp jl push fcoml xchg insl mov fcompl rclb add jo loope cmp mov rolb test push cmp cmp popl daa xor push push push push movsl pop lds xlat cmpsl pusha sbb shlb daa fldenv pop cmp cmp push roll xchg inc in jne push xor daa insb clc sbb mov sub mov mov sbbl les add push push movsb clc cli adc test inc lods jnp push jge mov inc add aaa ret movsl jp test or (bad) mov pop es or inc push sti cli lods stos pop dec push int mov adc or or mov sbb dec adc dec add sbb jo inc ja lea sub adc push push push lds push lds mul push jg (bad) dec and cltd adcb push cs fwait pop cmpl jle xor pop or ret cmpsl psrad inc setne xor pop outsb stc inc imul dec stos pop mov dec mov mov sub jne mov fnop sbb jbe xor jne add imul incb fidivr push ja sub sub ljmp mov bound aad icebp sbb push sbb cltd sub push sar push or and mov xchg sub push in or popa mov hlt call push clc insl mov inc xchg add lea cmp or inc add bound dec fildll fidivrl or jb inc es insl sub je or lds or outsl sub cmp jl cmp (bad) decl add mov push mov jmp and push fadd xchg jne jg cmpl subl add jns dec movsl pushl mov fadds clc pop ja movzbl push ja jge test push mov stc call jmp push jmp pop sub push es (bad) add add add add pop lar mov push add add add add test add test mov cmpb je inc popl cmp push or push in in aas and cmp or mov faddl int mov adc (bad) mov jl mov leave add rorl jle pop mov mov out (bad) push jb lods in insl adc mov loopne imul out and cmp cmp sub pop inc imul push sbb inc cmp jle mov sbb or in cmp jmp cmp dec cs cmp outsl fstl insl sbb add in cli push mov aam push pop mov out mov movl inc push out das rep and int3 cld add mov hlt loop insl in add pop push pop lea pop and inc push fisub and std jge cmp pop (bad) fadds or or jl aas inc pop or adc fwait ret (bad) enter cld ficom arpl ljmp inc adc (bad) lods jge sub mov pop push sti mov cmp sub jbe sbbl scas orl out xor mov into jmp jge jp jl xor ss ret je mov cmp je sbb sbb pop mov pop or inc loopne std fsubrl decb adc neg (bad) xorb sub jae cmp pop jne jnp jg loopne fs ret fs mov mov jne (bad) sub movb and loopne std xor leave js xor pop (bad) adc call dec mov gs mov addr16 xor lods cltd dec cmc or add (bad) or cmc sub call inc sub adcl jmp mov out fcomps pop xorl sub mov pop adc sbb sub subl mov adc inc add loop std shlb push std push push mov aad jne (bad) es mov pushf lds fwait dec inc fistp and inc fstl repnz or popa (bad) in jbe adc and je (bad) rclb sbb pop ja rolb das pop sbb add push aam cmp mov out (bad) test mov sbb add push scas dec inc lods push mov outsb fildl fistpl and jecxz lock cmpsb inc (bad) (bad) outsl jge ja jb cmp jae xchg or fwait cmp sbb xchg (bad) mulb mov xor ret in push dec jb sbb add adc adc and aaa or mov arpl pop lret je pop pop inc pop lea and lods inc (bad) sub fucomi sbb pop adc popa sub jne cmp cwtl sbb dec out daa pushf std cmp or aaa andl or cmp cld incb dec jmp mov ljmp or or loope cmp push fildl mov mov add xor adc clc into sbb scas jmp sub lock or das add in add xor (bad) je je push dec dec mov xchg xlat cmpb (bad) and ret jmp mov out push enter mov lea cmp cmp pop or outsl pop mov adc mov add inc int je mov xor add and adc pop call mov movlps xor fildl in pop jne mov jne and adc mov fisttpl xlat jmp mov out sarb ret ficom cmp xor inc pop xorl loop push hlt mov push fsubs add push cld test sbb out and add pop adc ss pop or mov mov dec dec sbb push loope mov push inc adc mov bound lods pop push aad pushf push push xor stc mov cmp sbb sbb and push sti dec sbb das (bad) (bad) daa xchg addr16 pop xor mov insl sbb mov mov test call push pushf mov or dec sbb lds and or cmp push cmp clc out sub jl fdivl push add add ret sbb push das adc ja popf jbe push mov xor inc in testb lahf xor push call pop js inc dec je out in or mov (bad) insl sbb push cmpps out mov pop incl nop pop or push dec push sbb rol pop pop mov add insb inc pop pop in or cmp add push lods pop mov out cmp jge and xchg iret clc push jmp test xcrypt-cbc cmpsl push outsl loop and push and aam clc mov jae pusha jmp dec lea jns jo ss inc jp push das loope and inc or pusha and xor push cmp xchg mov mov pop shlb push xor pop in jmp inc xor arpl lds and fildl mov jno mov push in sub mov mov inc loope dec loop mov add push rcll push jbe add pop mov aaa loop adc or sbb adc incb ss xchg adc jg push fiaddl jmp cmp add cmp in movsl cmp and adc pop pop pop jae notb dec and jo mov dec and push xor mov jns inc addr16 aaa enter in stos or gs pop xchg movl sub arpl mov push and pop shr mov lds jmp or mov mov sbb (bad) cmp stos out sahf fs rcr incb mov clc push pop xor nop arpl add add xor (bad) push jmp and add dec shrb inc add (bad) jmp add add add sub mov sti sub in shld sub adc sub adc sub and mov push adc adc inc mov jne mov cltd adc dec and (bad) sub add pop lea call insb add shlb inc mov push inc in ss cld push mov jae adc fldenv xor add cli push push cmpsb cmp or sbb pop in inc lea jle lcall push mov cmpxchg jmp xor orl mov aas hlt (bad) pusha mov pop xor imul lahf cmp aam das dec mov cmp adc jmp dec fnstenv sub dec xchg mov call (bad) adc push mov clc or dec push xor push fildll aad add sbb pushl cmp fadd sti add inc lock jg dec push mov pop pop add fdivrs add push add add adc mov push cmpsb sbb sbb cli add push cmp or (bad) je mov sbb mov insb dec sub mov es sbb dec inc (bad) adc ljmp vphaddbq inc pop movsl movb inc pop mov loopne lock fs inc or clc adc push scas cmp popf pop sbb xor or xchg or or push push rol popf lods add (bad) rolb out orb pusha fnop outsb pop and inc push lds fidiv roll add mov inc mov aam cltd or or pop clc in sbb ss xchg insb divb add cmp add (bad) or scas push and in (bad) je cltd and add cmp enter in and add jnp and je or je add dec push cmp pushf jg in outsb add cwtl fwait lret jnp xor icebp add imull loop jno cmp xchg push mov mov xor pushf ret lcall add mov je push jne push inc pop lods or pop inc lods sub push rcll mov sbb f2xm1 popf sbb clc adc lret (bad) ffreep mov into push aam pop rclb push jmp inc push jns inc mov mov push fiadd or sub xor xabort flds mulb adc add adc lds mov inc inc pop in sbb dec test pop and popw xchg and fs imul jnp jns aas hlt je inc add enter xchg nop and add push cmp dec or mov push jg and test jae mov jne sbb sbb xor add push test add push sub cmpsb mov lea dec stos inc and ficomp add and cmp sti test lock mov cmp mov xchg xorb push push push sbb outsl inc mov mov out enter jmp aas add pop inc mov pop cmp rorl adc jo or mov or sub lock stos pop cli sbb xor (bad) outsb (bad) or adc (bad) and dec cmp push pop pusha add ss fiadd add out and repnz jbe cli inc outsl rol jmp lods call pop push jnp out push add sub lods or sub scas je cwtl popa sbb (bad) lret xchg sbb mov push inc inc jl or xor scas (bad) aas fs sub mov or loopne pop and lahf jae or (bad) or cmp add xchg mov out xchg mov cld ds mov pop and cmpsb push data16 sbb sbb pop pop imul fs jno xchg addr16 insb subl test in jg adc sub lock or xor push push in fldz push jmp cmp fsts nop push in sub enter enter je,pn xchg cwtl or jne push add push push or pop adc xchg push inc xchg or xor fimul jne or in mov add or in mov int3 jb rclb rolb pop xlat inc mov mov cs xorl adc or pop push enter mov mov les push inc and push xchg push call call push and (bad) and dec mov sub cmpsb dec inc mov movsb add push or sbb sbb inc inc jb call add mov mov inc sbb sbb or aas fucom and pusha mov sbb fwait mov rcrl pop incb add sub cmp popa sarb or inc lods pop sbb cmp add push push add cmp mov jmp das dec mov movsl leave dec mov or inc xor out mov push push adc orl pop push hlt push jae mov mov cmp sbb in push idivl setb or ja data16 nop push inc js sub test test ret add pusha dec pop es scas xchg adc mov pop movb gs xchg or sub lods xor aad scas daa lea adc fdivs mov jo xchg sub idivl jmp sbb mov pop xor aaa cwtl lret push loopne adc pushf in or roll (bad) sbb pop sbb pop mov push add dec cmp jbe mov jl lds mov add add (bad) inc inc cmp cltd mov and cmp arpl pop lret or outsb fildl mov mov mov add pop inc sbb add jle loopne push or mov fwait or xor call xchg mov adc push sbb sbb aam mov mov pop mov sbb inc shrl fisubrl lds rorb loopne or or pop or movsb add lea add cmp rcll ret cmp sub (bad) mov and pop out push add add pop or pop pand and (bad) test cmp pop fadds add dec add push sbb and movsl and dec faddl insb push pop je add push lods rorl add sub (bad) scas cmp or (bad) inc add mov scas fcmovnu and mov movsb callw lock stos add iret pop pop test jg inc pop (bad) testb inc add ret fnsave or sbb xor (bad) neg and and push push inc pop mov loope or cmp testl and lcall jmp inc out cmp add pop cmp add push push out add mov mov inc test inc sub mov cmp mov ljmp mov mov jge jnp add inc ror sub fs out fs stos sub scas adc xor jl sub fcmovne and xchg inc sbb pop fdivrs aaa fs cmp in push das mov xor setb or xchg push mov mov and movzbl xor mov (bad) adc scas sbb adc mov stos ficom push add add mov les lcall fistp shlb jbe mov cmp or sbb add cmp int add add je cmp xchg out sbb adc add xchg int orl bound xchg mov mov (bad) js loop pop (bad) (bad) mov aaa jp inc std pop xchg mov insl add ss aas add mov or add lea das ja jp xchg sarb jmp mov outsb jne mov adc adc xchg inc addl xor scas push int (bad) aas or push adc inc pop xor icebp daa setnp dec int adc add enter aas das jo jle inc lret je mov push xchg xor clc add push mov je or sbb nop inc mov add pop stos cmpsb pop in cmp mov adc fisubr mov test pop inc add fisttpl mov popa cmp addl or adc sub push cmp push inc jo ret cltd add push dec push push xor jle hlt xchg lods cli (bad) in adc ffree call dec (bad) std sbb jl or xchg je ss adc push or push jo push push adc inc pop insl in lods mov sbb cmp adc add les sti sbb push push inc inc dec les ds adc adc cltd cmp pop mov push pop test or xchg push inc insb (bad) or mov pop push add lea incl push mov iret jne mov add mov and pop lcall stc add jne int3 fcom std cld cmp jne adc pminub pop push mov jp aam add lods adc mov inc ds pusha negl icebp pop and insb pop pop inc in xor cli daa inc lods or cmp mov les cwtl loope mov xor aad dec mov rcl gs jnp inc mov add and and sub cld outsb lret lea popa loope push push outsb add inc and arpl out mov lea mov sub test mov or mov xchg and rclb pop cmp out or movsb hlt add nop inc cld pusha or xchg xor stos insl lahf mov loope cmpsl pushaw cli inc or mov xchg mov adc arpl or push fcoms cmpsl test popa popa or sub movsb xchg rclb mov clc test xor pop test loopne out inc or xor call shrl dec les dec pop addr16 (bad) xlat jmp sub in sbb cmc sbb sub xchg xor mov addr16 jbe pop jg or inc imulb pop add jae pop pop inc mov mov mov mov scas lock jbe insb sub cmp xor nop pop xor pop dec ss mov and or std push daa xor ja xchg repnz call adc push cmpsb sub jp faddl add outsl push lret add addl jns mov je pop xchg jmp lea and push xor pop xor xor dec mov fadds outsb sbb push xchg pushf in and inc test xchg mov dec add cmc lods test xchg sbb stos sub sub fmuls test add adc sub mov sbb (bad) mov add dec enter pop add test popa inc pushf mov cmp insl adc push stos cltd jae add test adc sbb mov test mov cmp xor jne cmp and sub push jb cs in xchg in mov ljmp movsb roll add cmpsl or dec cwtl ficom dec inc add adc fstp movsb lea jno push sbb ficom push es mov push and rol push fstl stos je add inc nop inc mov dec mov loopne addb xchg fucom and inc mov or ljmp cwtl sub add mov fisubr ret sbb mov or adc push les gs jb insl cmp movsb cmp sbb push enter and mov pop sub adc ljmp cmp mov rcrb (bad) and sbb cmp xlat pop popa push add cmc js adc dec fistpll cmp cli test sub xlat xchg push xchg add sarb pop or pop je clc (bad) xchg insb cmp aad mov add pop push push into outsl test nop or daa lock jo xchg push shrd sub mov out or cmp add xchg add shlb (bad) aad addr16 cmpb call (bad) adc inc daa pop sbb fsub lock and adc loopne or arpl addr16 rorl cmp divb js hlt je shrl cmp pop xlat or or sbb mov and pop push popl inc add decb jecxz inc insb push roll faddl lds ds mov and pop cmp push fsubrp xor xchg push mov pop pop xor cmpsw adc inc test jnp xchg ret jb rcll (bad) je mov jge mov (bad) je mov cmp loopne or (bad) pop cmp add mov sbb adcl test repnz subps sub fistpll js pusha or pushw xor dec fs push lods mov ss inc mov cmp mov adc xor or jbe mov outsb inc or jae pop daa dec mov (bad) pop push mov mov push inc out mulb pop dec sbb fs adc sub or mov sub jne lods testb dec lret scas and push sub xor cs mov inc (bad) loop es jne xor add movsb sbb test or fstl pop mov sub push bound push dec push cmp xor mov lea inc add sbb sbb mov fnstcw push xor mov pop pop aas adc adc add cmp inc test cmp js test pop push mov notb decl mov stos sbb movsl xchg mov xor lea or outsl add dec push lcall nop loop sarb ret jne (bad) fisttp out push fild je mov mov lods jmp dec clc or test aad push push pop push arpl in xchg (bad) or shr add push pop push xor ret fadds inc and pop inc inc roll adc xchg cmpl popa mov sbb mov dec nop mov mov push bnd jne add icebp and mov jne stos sti loopne stos mov adc popa jnp in push pop push mov mov mov jle push mov cmp in push pop call cmpl (bad) je xchg mov cmovp push add add stos fldl mov in ret fcoms cli jecxz aaa inc data16 mov imulb shlb outsb add lods mov or pusha jnp test and lds jae leave push lcall jg outsl outsl or pop mov imul add idiv mov imul cmp jg mov lea inc in mov xor or add sub push cltd pop imul jae clc stc test jne xor cmp js jecxz add loop mov pushf adcb icebp ret adc arpl mov imul bound add jmp fisttp lcall xchg cmp pop add mov pop divb pop xor add nop icebp je pop xchg mov mov add test inc fisttpl inc pop mov add or and xor dec (bad) lock xor ja aaa jecxz popa dec adc je in cmp mov (bad) add ja push adc push push push and add push flds xor push push sbb adc adc push sbb ret inc adc mov jnp pop push mov loop add mov mov les or sbbl xor adc inc dec ret add xchg mov push add push xor push dec mov adc push rcr je ljmp ljmp push rolb je popf jo dec cmp sub inc jno mov sub push and xchg or cmp pop loop cmpsb ret mov stos leave hlt das fbstp mov or ficoml dec inc dec pop xchg mov test faddl outsl add test or push mov (bad) mov xor xchg mov enter test or sti adc enter dec popa or jecxz xlat mov out ror and ja add lea sub jne pop sbb popl mov sbb push and lret fistl mov xlat aaa add fiadd push push push notb push xor push jb sbb adc xor (bad) pop or or push data16 mov cmpsl xor add (bad) mov xlat xor add jb push dec data16 jae pop xor add icebp inc sub or or inc adcl flds jbe adc daa and sbb pop mov sub pop in xor push adc jmp ja lods adc push mov lea inc out test add push icebp iret call mov dec popf test mov aam (bad) jge jg je inc sub adc jl sbb sbb sub repz jl lahf bound mov (bad) adc pop push mov push scas sarb inc sub cli push scas sbb sub and and lds inc jmp xor add addl orb cmp lods add sbb (bad) icebp add mov mov fisub into inc sbb ds inc mov jns int3 xor cmp jne jmp sub loop and test mov cmp sub rcrb lea inc rclb (bad) mov jmp jmp add aaa lcall cmp mov push rorb arpl adc adc adc loope ljmp dec push lock fldl adc popa pop sbb int3 adc add or clc jno push mov xor mov leave jo xor xchg add add mov aam je mov bound jle mov pop jno push je mov arpl (bad) je push push adc aaa adc imul xchg mov add adc adc inc dec adc dec inc pop and outsl movsl mov jg adc mov dec jne hlt in sbb xor xor in roll sbb mov jnp mov (bad) outsb inc mov jne or mov pop add fwait in adc int xor push and ja test mov out aas pop repnz rolb call and or stc add adc lock xor pop mov lea ret push add push enter cs daa cmp fimull sub add mov (bad) in sbb ja in lods add mov aam inc inc mov or pop inc adc pop hlt jge leave adc inc add clc iret push push cmp adc jno hlt inc add clc push cmp sbb xchg add scas push push mov xchg es outsb cmp scas jno cmp nop scas or mov xchg je inc scas cmp mov cmp push mov or inc sbb sbb int cmp xor mov xchg add pop cli inc mov jge push pop pop cmp push cmp xchg mov sbbl dec mov xlat push and pop ret push and push push pop add xor fmuls aam mov (bad) popf cmpsl sbb fcomps fimul sti inc add fs les push adc push sti inc outsl aaa mov pop jo addb insb add rolb push add or iret es sar xor lock icebp test push inc adc xchg cmp xchg shll add arpl dec xor adc mov shlb pop lret pop push push add xchg mov or inc lret inc mov inc test xlat das aad sub jae push mov cmpsl push test sub je test out in push (bad) clc lods repz inc loop ds bound jge lret es stc push fldl adc outsl mov insl mov (bad) pop mov push mov aad lret rcll pop mov rolb les xor add mov cmp sbb lods add test or in jns invd mov sbb cld add jge outsb dec mov jg mov mov mov push mov and xor push mov add add mov sbb stos adc fdivrs pop popf pop sbb flds cmp push cs pop lea inc mov test xchg rclb cwtl lcall add dec add or sub or push mov jnp push sub add jbe js sti imul inc ja and jae inc jle xchg fimul incb test jne cmp orl sbb adc dec aas or cmp pushf call loopne push pushf fsubrs (bad) add mov aas jle scas pusha fs mov mov aas jmp pop or je mov pusha add inc or inc pushf call dec leave outsb pusha lret push lea orb mov or rcrl repz xor cmp pop jbe cld outsb imul lea or push adc and outsb lahf xchg sbb jge adc ret stos faddl lock cmp jg aaa cwtl cmp mov mov nop add fwait mov xor push negl popa pop fildl mov mov ss aaa in sub jae or lods inc outsb sbb lods dec adc pop fmuls push mov popa aas into mov and nop add or cmp pop mov mov cmp je lods push adc or mov clc pop clc call ficomp notb out mov mov dec adc xchg mov push mov add nop sub push push or dec and pop inc (bad) jbe sub movsb and mov fldcw fstl or push lret dec movsb fmul adc push (bad) cwtl idiv add (bad) xchg out loop or sbb push pop shrl lods or jge pop push cmp pop and mov sbb cmp inc inc xor mov out jg mov (bad) and scas jge mov mov push adc mov fnstenv loopne mov fld inc or or jmp inc stc movq mov dec adc scas in call push rcr sbb push not and out (bad) sahf fcoml dec push cmp repz (bad) pop outsb pop outsl cmovl flds add push sbb insl xchg cli adc or aas push mov push mov mov and push push adcl sub movl ds adc jecxz or cmp mov dec mov mov cltd pop stc or ret pop jbe lea xchg sub cmp lcall jbe dec inc mov add sub clc sbb add push and loope inc sbbb push je sbb mov icebp outsl sbb (bad) (bad) mov push adc jmp and sbb sarl pop ds xor mov or mov or mov (bad) jmp loopne add div test je movl into xchg rcr pop xor fcmovnu clc test xor pop sub cld arpl sbb push push ljmp ficom dec (bad) std jne mov xor shrb add and dec inc add scas je sub push popf adc dec or or or xchg insl ret cmp or or jae cwtl in loope fadd fldz mov or jp or outsb mov cmp cmp nop orl loop add mov or or cwtl mov xor xor dec xor test data16 inc fs mov inc inc mov push mov pop ret mov je push xchg insb movl lret dec inc xor sbb xchg dec adc cmp cltd in mov add rol pop and mov lods adc xchg mov pop sbb jbe pop insl dec xor push js mov and and bound add in ljmp add or sbb sub fst ja movsb out add xchg sbb rorl pop sbb sub jnp xchg or lcall push cmp add lsl pop inc inc rclb sbb xor push xor jo mov js cltd cmp add xor sbb or cmp add inc xchg push ret cmp push push inc dec xadd or (bad) ficom and cmp jge mov add xor add jg arpl or cmp jl add xchg jne jmp jbe popl mov sub (bad) int mov jns imul aam pop push push inc mov test popf cld mov outsb sbb loop pop mov shl mov jp mov dec and add sbb mov rol push loop test test fmuls xor stos add loope ljmp dec sub push cmp icebp sub mov in push push cmovle sqrtps or push push dec adc xchg or inc orl or cmpsl push xor dec push cmp cmpsb imul cmp jg test add add mov mov mov inc (bad) push inc fiaddl mov test mov inc xchg pop dec into cmp cli das rclb push je mov icebp je cmp jno mov push add je ss mov aam sub mov dec adc push lock mov inc mov sbb push and sub add fmuls xchg and stc mov shlb or inc or or adc xchg add fist jl sub or add cld cli jge out in jl out pop add sub cmp frstor sbb lock jl or cmp jne mov int cli mov pop mov fwait mov leave shrb jne mov aas jl or enter rol jmp sbb sub add mov xchg or sbb enter movsl shrl cmpsl flds mov imull lret push ljmp loopne inc mov int push ss pop inc xor push mov sub pop xchg sti dec push push push fsubl lahf jnp pop loope mov shrb ret adc adc shlb je sbb dec add ffree pop cltd pop mov mov or jmp arpl push pusha xor mov aaa or mov push (bad) or add push fiadd jnp or out aaa inc mov cmp jne fmuls in mov add ljmp es data16 sub out dec (bad) push push pop sarl rep mov and rep lock stc pop addl cmp or sub shr pop or (bad) jo xor or and mov cmp push cwtl pop adc lret cmp (bad) jo add cmp xchg stos inc inc das scas test lcall into lds adc lods mov mov pop mov adc ja sub mov das push pop inc (bad) mov (bad) jbe xor pop mov (bad) ret insl arpl cld flds or movsl sahf fstl movsb push mov (bad) pop jno repnz pop pop js adc fisubrl pop or jno sub pop sbb xor push (bad) rolb mov cs fisubl push hlt popf shrl cwtl test das mov sub jno aam (bad) arpl je inc mov push pop jnp lcall adc xchg lret pusha adc inc cmp add mov ds in mov push xor insl sbb cli xchg mov std pop ret pop push out loopne pop inc dec sti mov cld and dec inc roll xor cmp mov adc jp scas dec or fnop fiaddl ss pop cmp mov imul js or mov mov mov lahf sahf jb add (bad) fildl pusha add dec je jo pop (bad) dec test push lods outsl mov fld sti cmp xchg fdivs insb push ja jge jecxz jae or lds push add pushf es adc add push mov loopne or push and or mov aas (bad) mov adc insb jl fadds add rcl pop movsl out dec stos dec xchg int (bad) (bad) fs and aam sar clc in inc mov and shrl xchg rorb (bad) arpl inc enter shl push push pushf rcrl lea dec push jae call pop mov dec cmp std rorb rcrb ret pusha into rclb fsts xchg cli icebp das aaa adc sbbl mov pop repnz and cmp or insb jnp or mov (bad) push std dec insb adc clts lods sti aad pop mov push (bad) and mov lds sub or jb mov int cmp add pop enter call inc push sub sub mov mov cmovnp lds sub adc cmp push in lds adc dec jne call inc loope pop push adc dec add pusha stos inc sbb xor dec stc add and insb lea xchg jae ja jmp incb jb push xchg dec push sbb mov jg sub out in aaa mov adc cmp divb mov inc loope inc icebp mov push push xlat pop lods ret cwtl fdivrs fldenv ret (bad) jne push sub mov inc and cmp pop mov push push (bad) movsb push insb int xor or sbb push fsubrs lret mov out or add dec nop push psrlw add cmp or pushf add andl push jb and arpl jle add pop shrb ret jle or and cli pop pop loope pop jae es cmp ret push pop mov adc mov lock push xchg push ja mov sub push mov push aas (bad) dec enter lea inc scas push out inc (bad) lds jmp inc push and daa add sub (bad) xor outsl cmc jb dec sbb mov mov test cmp (bad) xchg mov neg or mov adc pop xor ret addb xor pop xchg sub xlat leave mov js mov mov sub cld test pop pop inc stc cmp sar ret inc sub inc inc pop or xchg xchg cmp out inc dec int3 mov or inc sarl dec inc mov mov data16 xor jne pop nop sub enter fldl rcrl mov mov test outsb test test push mov push sub pop pop cmp inc movsb nop aad add icebp insl loope test cmp (bad) std movsb lret mov sub pop out fldenv dec cmp jno mov sti ljmp dec nop mov (bad) pop lcall lods push cmp lods fnsave (bad) (bad) fisubrl dec mov loopne sub push jne loopne or pop jecxz add cmp adc pop icebp push cmp dec adc push in mov inc jb cmp pop shrb ret or jmp sahf lret rorl (bad) add fldcw jmp insl (bad) popl lea dec lock insb out mov push nop xchg jmp roll push insb xor add add sbb inc hlt dec inc add cmp jle add sub inc sub or daa negl or inc cmp dec cmp insl mov inc adc jne or in inc push xor pop push inc push cmp or hlt lret jb add sub fcmovnb mov jle cmp jle cmp jge xchg or mov jne aam inc sub push mov mov inc or lock mov dec sub push (bad) xor mov lds cmpsb (bad) scas xchg pop jno mov mov lds mov test movsl sbb dec add (bad) sarl mov fs movsl cs xchg sub sub inc pop or je je enter (bad) jae mov mov add je xchg inc (bad) adc and insl outsb jbe pop sub test fucomip int xor xchg insb mov mov pushf lea lcall scas scas clc dec stc sbb add sahf sbb push cmp mov push push fdivr fistpl (bad) mov mov (bad) enter push jo xchg or pop adc cwtl mov inc cmp push jne (bad) imul pop test mov (bad) les stos jo mov rol outsb data16 push imul pop push cltd fmull cmp mov push mov add xor cmp sub sub or adc daa pop jb xchg jne add lods xchg push adcl pop push pusha dec out lock add fmul mov xlat fs (bad) je dec nop gs cltd shld or sbb add rorb mov inc or data16 cmc mov shrb jg or sbb sahf adc shrb sub push push loopne mov (bad) mov inc sub lahf call push inc dec mov push cmp sbb and add sub cs jmp roll push push out or jle push sbb ficompl jo inc xor jae (bad) fisttp or inc cmpsb inc and ljmp dec sbbb adc and icebp push push aaa aad outsl stos adc aas dec sub icebp pop iret mov sbb cmp mov push push nop xor sub andb lcall sub adc lods push les xor xchg sub push out ja cmp xor and dec (bad) mov cmp cmp sub popa or ret dec pop cmpsb pop fisubrl push sbb loope ja inc jae mov sub sub (bad) mov sub fstl mov dec jne or aad jae adc jg js addl pxor dec xchg pop dec xchg aad loop lds jnp jne out or inc xor into jmp aaa rcrl and enter test mov add sbb xchg arpl sub movl pop shr shr sub pop (bad) mov aas lret xchg out (bad) pop test sub or jne cmp sar pop pop and mov push mov push or (bad) fadd rcrl das ss push inc pop call add stos jg sbb std and ret fildl push idivl jnp jnp mov dec repz daa popa inc les (bad) mov not jecxz push jmp add cmp negl imul int3 dec sub add int add sbb faddl hlt sub ret cmpsb pop ds test or (bad) jne cwtl jae adc jl xor mov xor jg xchg mov jne mov mov aad push test (bad) xor cmp mov cli dec lret push in imul lock (bad) mov mov jmp xchg and pushf mov or pusha push ljmp (bad) in add mov inc in lret mov rolb bound dec sbb mov push lock (bad) jo loope xchg inc push sub pusha addr16 sbb pop adc push jae mov mov adc pushf xchg xchg lret or mov mov movsl mov pop insl mov xchg pop mov cmc jg ror out fdivr loopne cmp je insl mov dec push sbb jmp add mov push pop out (bad) in push movl push add mov inc test pop jp add ret push cmp adc cmpsl push sub dec xchg mov inc (bad) mov (bad) fisubl mov adc adc scas dec or mov add addr16 push mov xor mov shll cmp (bad) xor xor mov or dec and addr16 and movl js add inc jae vpackssdw add sub popa shrb push xor add jae loop mov jae divb daa dec out push in or or or sarl lds mov jo scas push rcl mov inc int3 clc adc fsubr lods jae lret mov mov outsb cmp jnp cmp int add xor adc pop sarb clc or rorb jae sahf bound mov jb (bad) lret xchg sti ja or scas and add push adc lret (bad) negl cltd pop in and mov adc or push add inc insb inc js jne ret mov adc mov ja lcall ja cmp (bad) loope jne lcall cmp mov pusha add inc lea or push shrl sbb mov push add push inc or push sbb insb and or jl in push xchg sub mov jp push or pop pushf push movb dec and add mov mov xor dec lock push or iret mov dec pop push jo pop xor inc jno ret sub inc nop shrl inc nop call das pushf sub push adc dec inc jne pop es pop jns arpl jl adc inc fsubrs add mov arpl jae iret mov into stos mov push push pop mov mov mov add ret faddl fwait or es iret inc ror inc imulb push cmp out jecxz (bad) std leave outsl sbb pop lret repnz dec sbb push dec inc mov ljmp dec leave xor add incl mov aaa imul inc sti (bad) or sbb dec inc inc dec dec popa or or inc inc sbb out adc and cmp shll mov mov xchg rcr enter fnstcw (bad) popa inc inc das mov dec fstpt inc fmulp int icebp mov sbb push push push push adc in int cmpl ret lods leave inc inc add scas lcall mov push mov popa rcll dec pusha frstor (bad) shll push xchg ror iret dec push aam sbb std xor cmc push xor cmpsl ja inc xor shlb xlat clc fldt inc push imul mov inc and xor jb aaa dec movl add scas sbb mov lcall pop pop sbb lret mov shll cmp dec or in add in nop mov push daa pop mov push xchg dec inc or movsb push sub nop adc (bad) jecxz lock aas int3 pusha jge cwtl lock xor jl push lcall aaa mov pop xor cs mov inc shrl inc outsb out push push data16 and adc mov das aaa lds insl and (bad) mov ds or pop inc sbb pop pushf mov push inc dec push mov or mov mov lea add sbb add test lods jge mov mov cmc push mov add sahf scas pop rclb sbb mov push clc xor push push inc sub push and sbb adc and rorb sub in aas xchg inc cmp movsb into out add cld lret pop ret imul cmp cld fisubr jb mov jl (bad) imul shr aad fcmovb loop aam ja adc icebp aaa or add in xchg stc repnz in inc push cmc div nop inc push cmp stc cli inc push cmp sti cld std dec insl out (bad) incl dec fs dec xchg mov mov adc hlt dec mov add jge cmp div fdivrs xchg or nop mov and or das cltd add sub push andb adc xchg mov cld rolb test mov add nop ret out outsl mov je sub movl fwait jmp (bad) add mov data16 push xor and in dec repnz fsubrl dec push mov and (bad) addl rolb (bad) push mov adc testl jae mov fs (bad) dec ljmp ret incl inc bnd inc out sbb sbb push or sti mov mov or mov mov push mov dec adc inc cld in lods shrl mov sub pop shr sti insl (bad) outsb push xrelease pop pop popf nop inc jmp popa ret shll add inc adc jl inc rorl testb lock mov pop jecxz adc or mov mov mov je push shll push xor pop stc fsubrp inc mov rclb pusha insl in mov sahf mov fisttp mov pop stos push mov mov in or clc shl xchg mov xor cmp mov mov push xchg cmp sbb dec iret jmp popf fs xchg jecxz mov xchg mov rorb add cmp jge test and sub movl xchg or ljmp stc std pop add sbb jne cmp pushf jnp divl lods cmp mov push or in (bad) aaa add stc jbe stos test faddl dec std mov cmp ja jmp lea (bad) aaa lock lea cmp ja sahf je ret push mov xor pop cs mov aas sti nop iret or lea jle loope loop sti cmp enter mov mov push mov cmpb enter xchg or lahf repz sbb sub rol aas mov ret bound dec (bad) bound jecxz xchg jbe or or inc mov inc mov mov (bad) sahf cs jecxz push ret (bad) sahf push loop or shl into loope mov and inc push jge rolb pop mov lea push or mov pop xor je ror mov or sbb cmp or mov dec rcr push fsubrs xorb sbb leave mov dec add xlat fisubrl arpl cmpw xor sbb fsts inc mov mov test push add push push add ret sbb sarl testb cmp add inc dec ja adc xchg inc push mov pop or subl add push test inc fldt mov cltd jns fcom sti cmp jl push sbb scas jl dec adc bound push jae xor loopne mov mov xchg jle adc mov xchg adc mov pop in fadd mov mov cld sub mov add div add mov push arpl das cli cmp jb mov or mov (bad) xchg cmp rolb insb mull aaa dec scas add add in pop loop lcall add insb insb data16 sub lods das dec cmpsl jbe div mov and loope scas pop pop sub cwtl add scas sub aam mov das add test cmp nop insl sub xchg or mov popf mov fisub and mov add cmp jb jne mov ret add ja inc adc imul adc jb jmp mov shl mov and mov jmp cwtl push seto mov pop addr16 xchg loop add arpl sub adc push mov pop ret add bound mov popa sbb (bad) cld sub fimull mov adc mov add inc cld imul adc mov popa mov (bad) les or ja insl inc cmp inc cmp jle fidivr inc mov jl pop cmp jg inc outsl mov inc mov into jl stc sub adc movd or orl movb xchg and fidivl add mov (bad) sbb mov adc xchg sub push aas stos xchg xor push imul lcall and test pop xor jmp imulb adc adc add out add (bad) mov popf add pop mov fwait inc add xor and cld dec xorl repz decb jne cmp (bad) fsubr sub out fsubrs call (bad) mov mov or fstl pop pop pop pop test test xor jmp orb add and push lea push sub push mov cs data16 add shr (bad) dec arpl jne dec aam jp bound sub in in jmp js rorl leave je pop push dec or imul fwait and sub pusha jp sbb cmc or mov mov jne pop pop lea inc sub (bad) or xchg js cltd or add adc dec bound sbb and mov dec mov jmp or jbe jne dec loopne add or out xlat inc adc (bad) jne dec dec (bad) cmp pop mov add js lds cs or inc or insl adcl push pop mov lahf adc mov lea in shrb jl dec jmp (bad) out mov outsb cmp jge add mov push pop cmp add frstor aad pop xorl shll pop or loop mov cmp sub or pextrw add sbb outsl es fidivrl pop pop fcompl inc sub loope mov sub je or ljmp fs in jle dec or or xor mov (bad) loop mov mov xchg xor adc ds pusha pop jle aad popa movaps adcb sbb add adc adcb cmpsb nop and hlt mov cmp in inc xchg add in das mov mov pusha xor pop pop sbb jp je and xchg xchg stos mov test daa popf xor pop sbb popf mov (bad) mov sub xchg lahf xor inc pop push jmp arpl add outsb js xor cmp sub jl stc jmp imul mov or jmp in cmp xchg add lods inc test frstor mov (bad) push jle push pop jge xchg dec andl inc mov imul js pop adc mov or adc xor icebp or inc mov push xchg mov fs into or outsl and dec mov pop add mov mov out cli mov mov test sbb sub jo jle ret add add pop in cmc repnz cmc add cmc xor mov push add xor add xchg or xchg add mov xchg mov adc neg add adc jp push xorb fucomi ja mov sarl xchg add jecxz sub or dec aaa dec loop mov cli jmp mov sbbl pop add sbb test test or adc or or es sarl loope dec cmp and sbbb cli pop leave je leave enter (bad) shl das nop push push je and or add inc lret test out cwtl cmp sub inc pop arpl xchg add fnstenv adc lcall testb popf push loop lea mov int jno fsubl jo inc popf add cwtl sub popf push test loopne inc aam adcl pop mov pop dec notl cmpsb cwtl lret or mov mov dec lret jo lods sub js fsubs jo imul adc fstps ljmp xor fidivr lret mov sbbl jmp push or dec cmp pop mov fistp iret shr jno mov jno jne lock mov jp cmpsl or mov popa push fidivl sbb addr16 xchg lds les rolb iret inc scas stc pop push xchg out sbb mov mov loopne outsb add xchg push lock fildl scas jmp lret ja mov nop push xor mov lea inc add inc (bad) out pusha cmpsl or pop lods inc lods test cmp xchg (bad) mov lods inc inc shrb (bad) mov xchg xchg jle mov dec jne push sbb jns sbbb (bad) mov (bad) pop pop jge mov imul inc sub inc xor out add xlat pop add add setbe mov into (bad) fildll ss movb icebp and and pop decb (bad) shr shl dec in lock pop pop ret add push rolb xchg rcrl push pop mov add mov subl inc roll je xor sar dec push fildll xor or dec pop sbb add outsb shrb cmpsl xor adc aas js sbb sbb xchg fldenv stos arpl je sub add mov inc not push mov adc not push inc mov mov imul push and push dec int3 pop lea in (bad) imulb mov mov dec jle lock add pop ret (bad) adc sbb adc fsubrs dec push push and and mov add scas lock dec cltd data16 or dec mov jmp mov push inc inc push and dec add and adc dec xor cmp data16 mov add orl inc popa or jle test sub pop or sub adc mov push subb or mov inc and sbb mov mov mov mov add or test mov xchg insl xchg add xor inc mov mov cltd push and cmp shrd outsl lahf test sbb sbb dec mov cmp push inc sub icebp imul add test (bad) aaa mov or fdivrs in sub jl dec mov push rolb mov out jmp fsubs (bad) jae std dec test rcrb aaa adc lds mov or out repnz test mov sub push mov jo adc and jae pop icebp jle shrl ds rorb scas fcomps pop mov pop lods test je mov js fucom shld add lods lea push mov and sbb cmp dec ss test scas and inc and mov add (bad) jge cmp jmp jb fisttpl je jl je cmp add fsts inc loope adc jb,pt cs flds pop mov enter add mov nop test or and jg jae (bad) pop jnp push iret jmp sbb jnp pop lods dec pop (bad) jb cltd jmp aaa inc inc lcall scas lahf addl aaa sbb and xor push inc rcll cmp dec je push mov mov notb shrl inc int mov lcall mov cmp pop sbb adc cmpsl aaa cmpsb add sti (bad) adc sbb mov mov adc ja (bad) fistpll pop jne pop fcomps xor fist add push fmuls in mov push adc ljmp (bad) ffreep add andl movl cs jmp push mov push xor imull push inc sub sbb pop das mov mov xchg adc inc dec int3 mov fildl orl push push mov mov dec push dec das push mov dec ja add mov push sti fistp pusha cmp cmp mov push ret dec fs mov in lahf xor int pop and cmp pop or fstps and add and sbb aaa dec outsl loop in (bad) incl add aam addr16 mov xlat xchg fadds push ds adc loopne inc add stos xchg js lock push aam jno push (bad) and push imul push lock or scas push or call cmp and push dec adc cmpsb push lret mov cmp push sub inc sub jbe enter (bad) lret pop dec cmpsb fisttpl push cmpl pop or cmp sarl mov cmp nop add aad stos mov or mov pop (bad) lods mov mov imul imul test cmp cmp neg mov push lea dec mov jne cmp ss sub mov pop js mov add mov add rorl inc je shlb repz jmp rcr std (bad) mov sub dec sub xchg jne fcomi hlt cmp mov jbe add pushf sub mov sbb lea sub js push in push (bad) test repnz lods or xor mov add and jns mov mov sub aaa neg xor adc fildl dec sbb dec in sbb loopne jle jne fstpl mov iret mov je adc aad sbb sbb mov xor jb (bad) adc sbb ja inc cmp jb sbb xchg or cltd dec push mov cli iret xor xchg sub into inc mov pop fwait push aam test add (bad) cltd add lea sahf pop mov push add jmp outsb andl inc daa add cmp fisttpll movntps scas mov inc sbb push jno add pop mov add inc add push popa push dec xor cmp aam inc add (bad) lea nop out sub out std loop xlat (bad) mov (bad) jle add mov out scas mov lds pop sub adc mov cmp and outsl add imul out xor push add jb fcmovnb lea xchg inc dec mov je sbb sub add je mov lret push xchg xor insl and and (bad) mov dec adc sub sarl pop clc sub mov je jmp cmpsb loope mov adc cmc test loope sbb rorl ss fsubr notb fldl movb stos jne fiadd mov cmp jae dec mov rolb pusha xor jmp jbe and lods add push shl mov ret mov inc xor and orl enter aad lcall mov push test jno test pop sub mov lea loope sub test (bad) ret in lods je clc shr pop jne cmp fimull fdivr mov dec and (bad) je mov pusha aas repnz sub sub cmp sub sbb std rcll dec fbstp jmp ret sub pop and inc push inc mov dec lds and arpl jo sbb js pop leave push mov mov add jb outsl loop and inc sub rolb sub ret push call push or pusha or or xor or cmpsb sbb (bad) (bad) clc xor mov push push iret les fdivs add push xor rolb roll cmp mov and and sbb test mov xorb fisttpll jne (bad) test push push dec jne daa jmp popf cmp lea sbb push hlt pop aad lock add dec sub inc sbb hlt push jo xchg (bad) sti jne mov repz mov adc and jge push pop push sub dec into add sub and scas or fimul sbb mov push xlat movl fist movl ret mov sahf mov xor in inc ss push test in mov jbe ret mov fistl popa call jmp in je adc mov sub add mov es testl (bad) dec cmp in inc (bad) inc ja mov xchg dec aam xchg pop mov cmp xchg lds dec sub std mov mov push inc xor (bad) notb pusha sti pop add mov inc aaa mov add scas push inc push jnp cmc xchg push inc xor mov push adc lret xor cmp mov mov jl movsl loopne sbb cmp push pop or dec mov mov push inc (bad) cs mov jno dec jns push inc sbb cmc or jae sub dec rcrl movsb push js or sub inc push pusha mov push push and sbb dec fisttp adcb pushf enter cmpl jb mov out and sbbb pusha sbb lea je incl dec add ljmp sti test jne add dec jnp add pop add add cmp call movl xor mov xchg pop movsl mov mov movsl popf xor xor inc xchg iret lcall jmp jp arpl ret jg fimull ficomp or jmp push mov sub xor pop jns jae mov (bad) mov jmp cmc push jb mov out cmp jbe sub mov mov fnop pop inc inc dec jne je jbe cmovns imul jmp push mov adc fstps aaa xor pop mov out add nopl jp loop jb andl jb push adc xchg enter mov adc stos orl es jmp add inc or adc lock lods mov fstpt jae or push mov mov sbb add push mov inc or add ficompl rorl mov dec adc and popa das add (bad) pop fcmovnu ret add jb sub pop mov enter push add inc pop inc mov pop adc sub add loope push (bad) dec push pusha imul pop jecxz adc jbe cmp loop pusha ja movsb xchg cmp cmp insb fnsave out out (bad) pop pop mov add std pop divl jne pusha cli scas jle push add sub and mov lret ficom xor or loopne scas js pusha enter inc aas jne sarl fcoms add sub push add mov mov mov add add pop mov sbb xchg int3 lea and add cmpsb andl jnp xlat sbb sbb dec idivl add dec (bad) jo pop mov imul in lcall hlt clc clc daa fsubrs lea add insb mov hlt int3 add in fsubrs xor adc leave xchg mov sbb adc adc sub mov or cmp test insl clc in ja jmp jmp inc xchg stc sub dec xlat std sub or xchg adc out cmp mov pop lea stos or sub and mov xor (bad) imul imul and lock sbb xor push cld mov pop sbb dec (bad) xor adc or or test fwait and insb mov add jmp sub add test and mov int3 add (bad) imulb push pop inc movsl insl mov pop mov movsb gs add inc test test xchg jb mov adc popl jmp sarb faddl adc jae mov push rep pop or ljmp out ret int3 mov fmulp push pushl insl sbb in bound fisubrl (bad) in outsb jmp lea cmp js sbb das add cmc pop jae mov fildll mov jb push adc and dec push call push push inc or pop loop (bad) mov and pop mov mov add adc dec sub adcb adc mov push es pop in rolb add out aaa push sbb push push inc mov push enter cmc dec neg es adc test xchg arpl out mov lods inc mov sub ret out iret push pop pop push cmp outsl dec das lock dec ret adc cmc movl push pop ret rcrb sub loope es ds sbb ds sahf inc sub repnz ljmp or xchg loop add or out enter dec push mov and movl pop test psrlq mov inc push inc sbb jae mov aad adc sbb and cmpl push xchg rolb rcl pop jp lret cli enter or adc movsl mov cs and sub arpl add decl (bad) pop fisttpl push cmp adc movsb cmp test jne daa push aam mov cmp mov pop or xor setne inc jo jne subl fistl or sbb mov xchg adcb dec lahf dec rorl inc fdivr jmp cmp jae mov cmpl add xor push pop sbb scas sub pop adc ret (bad) inc inc dec pop loope dec fidivl pop movups sbb fstp cmpb in testl adc mov mov flds imul or (bad) sub xbegin adc movsl ljmp add adc mov push cld std add adc mov pushl push clc push mov dec cld push (bad) jo das cld les sbb subl mov push sahf inc clc jmp add clc test xor or cmpsb dec popa loop rcrb cmp adc cmp (bad) and in loope push mov fldenv jne xchg out outsl or and mov je sub out fistp sbbb out xchg out xlat or push js dec (bad) xor jo pusha pop push dec fiadd nop xor insb vshufi32x4 add add xor loopne (bad) mov xor xchg sub inc or xchg xor add nop inc and icebp (bad) je pusha pop in in add cld nop fdivs push or adc icebp fistp ret inc add add insb icebp fist lock jo (bad) jb test jg add loope dec rorl or or sbb rolb subl cmp mov or jp adc mov aaa pop inc adc insl stos fimull dec push mov cwtl dec mov aad or push cmp out fidivl cmp je push xor sbb sbb lahf call mov add jo dec pusha mov add and int add add add scas mov push or xchg pushf rcrb add flds leave add lea dec and push push xchg pop xchg out (bad) pop (bad) jb or fs inc or dec dec dec es out or or or add pop or (bad) loop or xchg adc or or mov mov push lcall packuswb cltd ret adc popf dec pusha fstpl xor dec sub int add and and adc imul out adc (bad) sbb ret add inc fmuls adc es out fs adc add push push push inc cmpsb mov pop pop (bad) xor or sbb inc mov sbb add add mov sbb jns popa int sbb xchg cmpsb jnp je sub sbb (bad) je or sbb sbb pusha push push inc clc punpcklwd pop xorl ret sub mov pop orb in add xor in mov xchg ljmp in jno cld jmp or repnz rol lea je mov dec aad in in and mov dec dec shl out pop adcl sub jge sub push inc pusha dec jmp add dec es jmp fsubs lret jae (bad) in in in dec inc mov in and or cltd ret jge out mov cmp lock es out fs and pmulhuw dec inc repnz std cmp mov repz std hlt xorl xor dec adc xor jg xorl push pop jae (bad) (bad) cmp adc and push clc dec adc xorl xchg or pushf ret sti mov ja cld je cld sub movsb jmp add std nop cmpsb imul je mov jmp inc test sub or push shrb jb or add ss neg test jecxz jecxz lea hlt xchg mov fdivr add mov test xchg sti out out leave add out outsb call adc sti sub gs dec mov jmp or nop jmp dec (bad) mov add enter js adc and out out out dec push xchg push pop daa lock cli or xchg cli mov sub jmp dec test push dec enter stc mov imull adc imul dec xor xchg stc out clc iret or (bad) adc and push sti dec mov cld add cmpl xchg adc adc xchg stos repz fild cmp mov loop cmp jecxz (bad) test divl mov out out popf dec pusha dec (bad) out test dec inc mull divl sti imul ljmp mulb scas sub mov pop pop inc pop xchg (bad) mov sub out out cmp dec enter and sub notb (bad) repnz push inc cmp and dec enter mov gs div or cmp and fmuls sub mov clc xor adc sbb jecxz stc xor mov or cmp imul push hlt lods mov and (bad) mov xchg xor hlt decb or pop jae xor (bad) cmc dec jge outsb or adc out jbe aaa ret loope loope loope loope adc fadds dec enter repz lds and in enter push jns repz dec push inc das mov sbb repnz repnz mov jmp push das mov jp repnz rclb sub mov sbb lods pop pusha jns bnd in (bad) add inc loope mov jns mov adc imul dec xchg push and icebp push icebp and pop inc (bad) sub add jp push gs add jp lock pop pop and outsb pop sahf pop fmuls stos pop pop or jne jp xchg jne push lock xor mov pusha or sub pop cmp test sbb xor (bad) scas jne sub add sub jae and mov in es inc pop inc pop push add int3 add add stos push cmc (bad) add mov das sub neg mov inc push push mov jne test xchg mov add sahf inc and fisttp jne scas dec sub mov inc inc aaa cmp mov push inc add cmpsl push add por add add sbb jl or addr16 shlb in clc jl mov cmpsl fadds or add pop (bad) dec push je xor into (bad) or mov incl fildl (bad) pop sub mov jae mov add clc (bad) inc push sbb enter add ja add std or je mov push (bad) xchg cld pop mov or jne iret and (bad) mov push arpl loop mov push mov cmp mov pop jne mov push push inc call fstpl mov pop cmpl or or xchg shrl ret push push add lea addb dec decl call rcrb sbb inc lahf add divb push fidiv icebp clc cltd pop imul mov xor lret sbb inc ds sbb adc stos xlat add mov test or out jg add jmp dec hlt and addb test push fadds mov add or cmp jge mov leave sub fildl rcll (bad) push pushf adc outsl adc sub es jl loopne (bad) sbb pop popl dec daa mov and frstor add add and jle mov adc jae test pop push add test lret mov or je jno and sub jge sbb mov jle or jle jmp xchg in xchg dec aam push hlt cmp push xor mov das or add mov outsb sbb adc adc xor mov mov sub and adc jmp jbe push lea lods mov or sbb pop (bad) or and testl ljmp pop icebp mov add dec sbb rclb jecxz ja stos aam xor mov mov (bad) lock cmp std jno aaa push sub add xor dec outsb and inc inc adc fldl (bad) adc ja pop add fcoms or dec cmp push push out adcb sbb or push scas test xlat push fnop test dec push sti and jne adcl daa cltd adc sahf and adc jmp adc call in sbb cld mov and js adc or xchg xchg pop inc cmp mov call (bad) stos fsubrp add or std adc xchg test or fwait out aaa jg or adc test jmp daa int3 push jle fs sub push or int3 orb add pop add and lods gs std add outsl push add add and (bad) jg add jg jg outsl inc mov outsb push jbe jle sbb jg mov ja jg lea out mov mov xor or sbb orb adc ret cltd mov in sub lret clts adc xor cli ss mov mov push icebp or jne or pop jg mov adc icebp push add rol push push sbb or add test dec outsl adc pop inc shrl roll fsubrs adc fstps outsb (bad) lret rep sub push inc fdivs mov xor in jmp cs pop or adc lds sub and std pop popa jmp ss and out jge loop andl jle imul mov add fistp mov ja out add lea jl push inc inc repnz (bad) inc push inc inc inc out inc sbb pop movl test and push hlt adc sub fstpl and (bad) rol or adc dec inc cmp push sub mov jmp lods add lock jo js mov push inc xor pop outsb add (bad) test jb xchg sub push je add rcr or and fbstp ret cmp lock ffreep cmp inc adc jl sbb push push pushf cmc cld adc sbb inc mov inc sub sub fdivs out adc mov xchg adc test mov cmp cmp mov int3 jbe pop push sbb rcrb jne push mov shll es (bad) add push in mov (bad) repz adc mov add dec jbe add pop loopne cltd xor pop test push jbe test cmp fs mov sbb lock add xchg push sbb (bad) outsb leave sub or pop jmp mov pop or sbb pop xchg cmpb enter inc mov ret mov inc js cs mov sbb ja sbb movups out adc add pop add je sbb or add mov pushl push pop mov pop add add mov cmp xor xor ljmp aaa dec push sub stos je cmp add subb sbb (bad) xor push add mov lds push jmp add imul dec subl xorl pop scas push popa or and push mov or xor inc push daa fs dec pop cmp leave adc dec jle adc out je ret cmp xor cmp adc push add mov inc adc insb and testb push mov aas fildll stos out mov pop or sbb inc cmp sahf sbb jne (bad) mov or and je and cld mov cli xor jmp push cmpsb or adc cmp adc sbb and inc mov sub cmpl or and push inc or out shll mov jmp push shll and jge mov pop cmp pop lods xlat adc pslld sbb sbb insb adc mov push push mov cs mov les nop add popa adc push jmp addr16 push push int3 cld out incb adc cmp push sub test mov sarb add (bad) cld leave andb mov mov xor lds inc add and sub incb int3 adc mov push or mov fild ljmp mov aad cmp cmp adc xor stos pop (bad) cld sub mov (bad) enter xchg mov pusha cmp je push lcall inc mov js or les xor xor xor adc adc sbb adc push rorl add inc int push sub int mov in int3 push mov mov mov add pop adc roll jb pop loope add add or xor rorl jmp ret lods add cmp cmp xchg loope aas cmp pop das inc sbb jbe lods fimull adc movb sbb lret add pushf (bad) or inc cmpsl or cs fwait in bound mov adc (bad) pop add adc xor ret and repnz mov inc xor push push aad mov mov hlt push mov pusha das mov divl push cmp push (bad) push push inc or adc ret pop std jnp cmp cld cmp sbb aam mov pusha pop or es add inc or xchg bound pop or and cmp mov cmp jb movsb ljmp jbe and cmp je push int3 aas mov (bad) jmp adc ficompl and xor or dec sub or imul push mov leave sbb ret or and inc pop jl cmp and add mov push mov insb in repz sbb add or cmpl pop push ret pop and add mov adc add lea sub push outsl je pop loopne loopne es xor push adc inc cld incl lea mov dec push loop pop cmp push aas push mov push add (bad) jae xor jo call jmp sarb jl fstpt push add xor mov je mov or inc pop stos push push jp test add imul jb das add je lea sbb mov fcoml push push rcl inc inc jbe mov jl jg adc mov push sti adc je xchg xchg push aad sbb jmp test imul (bad) cmpl inc push imul push add scas pop pop add ljmp mov outsb jbe cmp enter adc adc and in fnstcw cmovnp out cmp add push lret mov scas push and xchg outsl dec add out pop mov adc sti ja inc das pop mov push add push xor mov mov jmp mov add cmp je dec jne cmp push cmp rolb outsb dec jmp pop out push sbb iret and lahf inc adc xor adc or pusha pop call push pop cmc loopne xchg sahf add push pop iret cmp std jne out push sbb jno push mov jo or subb stos lahf add push jmp push mov push xchg out jg mov or (bad) jae add push gs jae add xchg sbb or xor out test sub xchg cmp rcrb dec pop inc pushf and xor pop pop loopne adc jns (bad) mov mov jno lock add lahf or (bad) (bad) (bad) jle adc lock ret fstpl inc sbb cmp test pop outsb imul push pop add int inc jmp rol (bad) std sub es sub ret or mov dec rcrb mov hlt sahf and adc mov push icebp imul add and popf mov add add jle stos add pop jo sub mov mov inc cmovb test adc cli das mov mov inc dec adc push lea and (bad) mov jae mov push lea outsl and mov imull cwtl mov std jg ss mov movb pop mov mov aaa mov cmp ja out xchg or sbb push out mov inc (bad) mov lods (bad) fmuls add ss push jo into sub push pop adc cmp push xor fs pop inc and insl rcrb and stos (bad) test movzwl ljmp adc add mov adc je and mov daa jmp movb shr xchg jg inc enter mov lea fistp lea cmp ja dec push pop rorl addr16 cli adc and and stos (bad) mov repnz inc cmp pop jg mov lea xor pop xor add add into clc mov outsl cld jo sbb pop mov jl inc andb mov pop and js lea push (bad) push stos enter and inc push bound and mov mov or inc nop mov mov push cmpsb push sbbl insb mov add add push pop or pop or push jo jmp mov pop adc adc rorl sbb mov or pop sbb les sahf and sbb ret sbb dec and mov add fisttp test fisttpll push mov push or mov mov in scas rol xor or and cmp or mov test mov lret xor dec dec call adcl (bad) mov adc (bad) pop mov jnp jae jbe mov out push iret dec pop fstpt (bad) mov test or dec inc incl leave mov xor inc imul dec mov mov xchg jmp mov ret inc push fldt xor sub xor fidivrl lods sbb inc cmp jbe ss ret incl cmpb (bad) mov loopne test scas add cli loope divl mov xchg movl push mov or mov roll sbb mov inc inc inc dec push mov and or rcrb ret add negb out mov pushl inc push mov jg or inc dec jne mov push push pop xor push outsb pop push sbb jnp mov xlat enter sub xchg outsb pop pop cld notb test nop sub lret test pop test (bad) mov aam sub inc in pop addr16 stos js ret push jl add add pop pusha inc add fidivr mov je add mov jbe (bad) cmp push scas cld pop push push and push (bad) cli mov mov mov pop call repz lods test testb push cmp jns inc push rcr mov addb mov adc clc add xchg arpl add inc jo inc jmp sbb idivb mov mov jmp cmp aaa inc lcall adc mov mov adc jmp mov sub mov push mov sub aad mov dec in aaa sub std adc mov sub shl inc movsl lds xchg loopne enter aas pop jg fnstcw or sub or cmp adc inc lahf (bad) subl fisttpll pop (bad) mov pop mov xor les mov adc pop rorb push sub adc or (bad) and mov cmc push pop sbb les sub addr16 iret pushl jae imull push arpl cmpl lods xchg pop jle test outsl mov sahf inc add insl dec inc and (bad) jne ja aas pusha ret push push call xor repnz or mov mov inc rorb insl mov add jg push loop add adc fdivrs loope dec adc insl jg push mov and inc lods push and sbb lods imul push rclb cld call or pop sub stc lds inc or ds cmp and xor sbb jo inc add aam mov add movsb clc test pop ds xlat pop adc xor dec jo and sbb shlb (bad) mov mov sbb lea dec mov js call push inc xor and outsl cmp mov inc mov adc mov aaa enter jle inc adc dec and sbb lret jne pop mov xlat pop stos insl cmp das add or stos dec xchg mov push popa inc and test or insl mov and mov call inc mov inc lret add xor ja subb jle push out cs mov pop jb lea mov jne jne ja pop dec fmull xor int3 jge shlb ret ret or and mov (bad) shlb insb hlt push cmp add adc push imul cmp arpl lea inc fistpl roll stos adc testw inc or je dec sbb and jbe dec or mov fsts sbb cmp daa subl hlt mov notl add push mov inc rorb or push arpl xchg ret mov add insl shrl push out (bad) das cli fistl pop dec pop cmp bound jmp mov xchg aaa sbb pushf dec xor cmp js aam fmul (bad) in or adc stc nop add sub mov xorl sbb cli (bad) or pop insb push push fistpll outsl sbb inc not jle pop loopne cmp rclb loope movl push out jg mov inc sub lcall and hlt jno aam lcall bound in mov pop add scas lock and nop sub sub notb das mov je dec es mov inc sbb (bad) (bad) fistpl (bad) inc mov jge jp push lds ror sub mov gs push icebp ror pop test xor aad (bad) (bad) aas add xor stc sub in imul pop adc jns and stos mov add pop cmp call shrl pusha or pop cmp adc pusha enter fidivrl add popf mov enter and imul ss inc adc jne je xadd push shr mov (bad) insb sbb or test cwtl adc fadds sbb aad int mov sbb xor xor jno push inc imul and push pop pop out push test dec ljmp das mov dec std add cmp cmp sub ret rorb jbe pop lods push adc add sbb mov jle rorl sub pop stos sbb inc adc sub adc ret mov jbe pop jle cs cmp and dec negl (bad) cmp jne adc add adc loope pop fistp jne mov push ret scas sti orl push pop xlat (bad) outsb add dec xor pop add mov pop into adc fimull push mov test push decl pop fimul dec or frstor jecxz sbb push and mov fmuls subb pop mov scas in dec ror dec js sti and or add cmp and push mov adc lahf or cs and xchg and dec jne and mov fdivrl jb add xorl jbe mov mov inc pop mov aaa lret (bad) jo jno xor mov or fimull aas sti sbb adc add scas add mov shr mov loope add sbb leave aad add mov add add pop lock add mov push push inc unpcklps in insl mov lahf jge mov pop jbe or out cmp (bad) stos mov aam inc aas fs sub push das inc loop xchg mov mov xchg scas sti inc sub pusha daa push stos inc sub and pop pushl push add ja cmp dec sti mov js orl mov push movsl pop (bad) inc and adc push pushl mov fimull push mov test lahf jp adc jbe jne push mov or popa add mov inc cmpb pop mov push pop or push cmp push or imul ljmp and inc mov stc add sbb (bad) pusha push or xchg cmp jne (bad) jne xor adc ficom pusha testb inc in daa mov test cmc (bad) jg mov add xlat jge imul mov andl scas xor inc sbb nop cmp jl add jbe roll cmp fwait daa fs or mov nop ror aas arpl orl add test cmp ret jb jle jl sub sysret mov pop and (bad) mov nop clc mov clc mov mov test stc cmp adc mov mov xor mov push mov cmp ja je jo,pn inc mov les add notl xchg test and shrl jp mov pop inc xor fs cmp loopne xor out mov iret fcomp jno mov jmp (bad) pop mov push cmp add push popl iret cmp adc dec bswap inc push jmp test mov xor das hlt mov sub je push push push sbb mov (bad) (bad) and cmp jne decl out or mov xor add ret and stos ficom dec insb mov loope cmc or add repnz push addb xor sbb and ja jmp incl sub push xchg lock mov dec ret push inc dec adc sahf mov cltd or push mov mov xor sti and push mov lahf add inc incl js add add sti ret mov cmp push xchg repz jmp sbb sbb lahf mov cwtl sti add movsl push inc inc and lods es test push push jbe cmp inc orl (bad) xor mov jl pop inc ror jne lret std push xchg outsb insb je mov inc outsb sub or je fcmove mov in sub fdivrl jmp sbb inc daa and mov adc leave sub mov out add pop sbb arpl clc int mov mov mov shll xor xchg rorl call jge and dec cmp int3 aas jae loopne outsb inc jl pushl mov add pavgw jo repz int sarl push push xchg icebp test mov mov inc cwtl sub and sub ja loopne cmp push (bad) fcomi aaa scas and lock sub adc and ja int mov sub and lar rcrl insl int3 fdivrp int add or jne push mov pop and sub push sar inc push and sarb sub adc outsl push (bad) push cmp sub js lret and adc pushf or add inc shrb (bad) and jmp xchg add jne inc inc stos push jge fsubrs sbb test jge inc int negb jne add js imul add in hlt dec xor and inc movsb and sub sbb push push adc mov das inc and sbb or cs fldl push (bad) fadds aad das jmp jmp sub je sub add pop mov pushf add push cmp outsl jae push xor mov sub int3 js les (bad) into pop fcmovbe insl cld mov lea adc push cmc arpl jl mov or inc sub pop (bad) lea inc loopne fs mov addl sub pop or xchg pminub xchg adc ffreep jb jmp dec jg (bad) aas jl jmp or add stos jle pop mov cmpsl push add je mov pusha mov test or sub fmull jne ljmp add out add push mov add mov mov in scas mov jbe bound jp subl stos fdivs into repz xor stos (bad) stc fdivrs andb (bad) dec subl mov add ret add cmc push push fcmovnb push push imul stos daa xor ds push jg inc jmp movb xchg push mov xchg pop daa movl fistp incl lock dec cmpsl adc lea cltd push xchg insl lock push mov or sbb mov leave imull push mov leave aad mov (bad) push aad les idivl mov push xchg sbb pop mov cmpl add push scas or out add mov loope ds sub mov aaa xor dec mov repz push adc adc mov mov inc or mov or push add dec out mov outsb lock cltd or shrb mov mov clc jge mov xor lock cld and pop fadd inc sub js std push xlat fnstsw test lock jnp (bad) pop pusha pop pop pop mov cli call pushf cmp cwtl add fmuls mov add xor js jecxz add cmp ret add and addr16 test rolb inc in dec out pop loopne gs or adc jle add or fcoml and pop add xor pop out add xor pop push mov pusha jmp dec or add mov lods hlt mov (bad) jmp push sbb push pop jno jne pop inc adc or popa mov ror sub push aaa nop call push outsb xor dec push jmp shrb sahf sub xor xor sub rcrl fistpl icebp inc or into add pop pop int3 sahf mov xor push or movl add mov push sub add (bad) jae inc jl add xchg inc mov sub adc jo lods or add dec mov xor inc adc add test outsb sub scas and aam test rclb xor (bad) or das cmp dec mov jns js test cld shr iret imul add sub push stos adc test inc lods loop aam inc or ja (bad) sub ret sub lcall jne sar dec cmp fidivr pop insl sbbl push inc wbinvd (bad) mov jae mov jmp dec add shll pop mov andb jmp jae negb mov mov inc test les pop or add pop or adc or jne add xor clc mov cmp sar sbb fdivp insb pop stos cltd fiadd xor rcrl adc je addl mov and and jg loopne out and add data16 push dec loopne mov sbb insb mov inc scas dec dec dec or inc inc and push jmp or or xor insl out or mov and js mov add pusha mov mov dec paddd inc mov jae cmpb adc andb xor je sbb pop inc cmpsl or jmp pop rorb adc arpl (bad) push jmp test mov lret add repz clc loopne popf insb rcr fildll add adc sbb inc adc sub shl add insb mov xlat push mov xor cmp or mov sbb aas mov les push adc dec adc pop add adc or insl mov jo pop adc adc in in pusha jecxz mov adc dec adc adc (bad) hlt (bad) ja inc sub add or xlat inc mov aas and mov mov rcl push mov jne xor popa pop jae hlt jg push xchg lock shl cmp insb rolb not adc push jp push dec pop dec movsl sbb push lods fsubs es scas mov fiaddl sti movsl fldenv ret adc jbe push in mov fwait addl add add (bad) aad mov add rclb je mov (bad) sarb sub dec imul js (bad) std cltd pop mov inc mov (bad) pop pop rorb jne push sti sub mov stc push or adc cli dec lea xchg movsl test (bad) ja loop rcrl inc mov dec fildl pop call mov pop jae jge xchg movl movl addr16 jne add fiaddl lea push mov xchg or xchg (bad) fadds sbb inc inc mov ret (bad) enter test dec inc push js testb sbb not and pop daa and jp adc push push mov xlat sub and int shr mov xchg dec cmp movsb and fisttpl jle sub ret sub aam fstps sar ret mov jbe dec mov xor sahf pop inc adc fistpl arpl test data16 fcoml sbb sbb fisttp dec mov out mov mov jg jns sub add ss movsl add add add dec adc inc xor pop push in sti mov insl inc xchg pop aas or int dec dec or cmp jne inc pop adc in imul sbb inc iret mov imul sbb dec cmp xlat mov cmp ss jbe xor or mov sti adc mov mov cmp and data16 jge pop icebp xchg ss xor test (bad) mov sbb rcrb inc cld int3 rolb mov push sbb dec dec decb movsl pop xchg into out dec outsl ret jo dec dec push insb inc loopne add or ja ja jge sbb add test cwtl icebp mov xor dec mov dec add fildl cwtl xchg mov popa test adcl mov out loope push into setns cltd test jns dec mov test sbb scas push pop ret fidiv js mov add loope lcall pushf and jge movsl pop pop sbb mov orl or je lret push mov (bad) icebp ftst xor ss cmp adc (bad) cmc or test jae xchg jb push jne in jnp push pop and mov sub fnstenv jmp lods je xchg mov xor sbb lock ss arpl cwtl and inc mov or xor sub fisttpl add fistl jnp push mov cli sbb subl ret cs and iret jne movsb ss pop cmp inc push out aad movsb xlat jmp imul sarl pop push push pop xor or leave and or hlt fadds and test ret std dec ljmp mov decl aaa movl in and inc mov decb jne xchg in cltd jmp jmp cmp mov pop sub or adc jae aaa aaa clc adc mov or add imul jb pusha xchg pop xchg or fcoml frstor xor or sbb or sub or sahf or stos mov pop (bad) out or movb into rorb jne add (bad) or aam xchg mov (bad) jne cmp pop insb dec cmp add add cmp adc sub mov push pop std sub movsb std sub and xor hlt add mov in push loopne dec je mov xchg push clc lret in pop jo inc insb gs test cmp dec or push push cli push loopne add mov mov pop xor adc or or add nop fwait insl pop sbbb out jb adc mov add push and jae push lock sub bound xor xchg pop (bad) fisttp xor pop adc xchg fsubrl sahf push sti subl inc pop aaa sbb add mov movaps (bad) stos dec loopne add lret pop add sbb sti rclb fadds (bad) mov xor push insb and mov and pop mov adc lods popf clc sub sub je push popf shll cmpsb add sbb jge cmp clc pop testl adc cmpsb jmp sbb cmpsb sti pusha rcrl clc fildll rorl add mov ss fnstsw in cmp add or adc adc or sar wbinvd movsb call cmp jno mov test dec add repz jo daa jo dec push add add pop mov xor pop in dec mov sbb dec cmp jns addb jne testl dec je push add sbb ficom daa add jnp jne dec adc cmp inc add xor mov push push imul sub fiaddl or pop aam add xchg xor dec scas pushf sub sub not (bad) pop sbb or mov push jmp cmp insb and push in jmp mov and push add sbb dec subb int in rorb or enter pop (bad) adc inc fcmovbe mov xchg mov pushl or movl push inc rcrb (bad) or cmpw fisubrl add cmpl or add add push dec and add add dec je push cwtl or jbe push stos outsl jne int3 cmp jb or push pop ss jb ret sub (bad) jb addb outsl addb sbb sti sbb mov clc pop adc dec jno push or and add cmp dec cmp sbb add dec mov pop or out add mov mov mov ret and dec or rep shll ja or mov pop sub or mov sub pop sbb jmp sub dec into add sub fcmovnbe push stos mov and add add push jmp (bad) sti or jo and mov mov add push pop lcall sub ds push sbb mov (bad) jmp pushl mov lret dec orl dec subl test push je dec je mov xor mov scas mov push mov add sti jmp mov xor loopne xor mov add mov cmc cmp stos mov jge or or pushaw xor jge or fcompl sti add sbb add inc sbb mov pop movd pop dec jbe rol inc fs insl mov jl and or clc cmp add ret faddl mov sub sbb cmp jmp lock push and inc inc pop fidivl push movsl jmp sub sbb or mov or jne cwtl enter mov xchg push xchg or xor mov xchg or rol out enter xor and test insb pop xor push loopne add je repnz push popa add pop mov fsubs adc fmuls ds inc add or movsb scas or adc mov dec test pusha jmp fisttpll mov pop repnz cmpl adc bound sbb mov (bad) aam pushf jne repz push and or mov push push push push add jnp sub aam (bad) and cs xor outsb daa (bad) (bad) test xor jbe lea test mov push push or mov pop mov test inc add mov fs out jg popl inc pop in inc add adc xchg jo pop je mov dec xor and sub pop fcmovnb imul inc or and xor add (bad) adc pushl add sub mov rclb mov mov xor push call pop pop cmp test add sbb mov jp cmp push rclb push repnz mov mov add xor xchg push mov lds mov adc cmp jge cmp mov inc sbb mov inc rorl out test sub xor sbb and mov in adc add add bound popf bound mov inc and dec push mov inc or mov add push call cmp imul fidiv xchg jb push imul das inc out pop push mov popa outsb jmp mulb mov leave pushl cld mov addr16 mov dec push pop adc xor les jle je mov lcall xorb js popa jae lea xchg test js xlat inc or push xorl adc sbb pushl pop or sbb fs adc ss and fs inc push and sub inc push sbb xor cmp sbb dec inc or sbb inc pop dec push sbb push push pop sbb pop pusha fs inc push push push sbb (bad) xchg dec adc xor and leave and and xchg pop movsb test and or sub push xor cmp dec fcoms jecxz adc mov pop xor cs push aam push test adc pop enter sbb sbb sub rorb and stos or nop add movsl cmp loopne cmp xchg inc dec jne je mov mov pop xor inc mov sbb mov inc mov aaa jb lods pop add lock bts test addl xor jo outsb mov sbb jmp jae jge and andb adc add push outsb xchg adc ficom inc scas aas jge loopne pop fs aad int3 push jmp sub rorl roll xor jg jp inc rcrl adc and or aaa (bad) outsl out cmp out mov jne or sbb lcall adc add dec add (bad) mov clc mov icebp lea stc mov gs lea push lea sbb and xadd lock add push (bad) (bad) daa pop xchg xor lea mov push xchg mov push lret or inc push pop or dec int3 das test inc fneni(8087 add sub sbb sub pop mov mov mov jne addb adc xchg subl cmp push pop pop inc fwait jle cmp es ss add subl aaa cwtl stos pop pop fdivrl std or clc adc ret out dec ret inc push es movl dec ss rcrl adcb push push aaa xor rorl jg mov mov int3 mov push xor push enter push fisubrl test pop dec aam mov add and (bad) cmp sub add mov inc and pop mov push and push add (bad) loopne mov jo imul andl push sarb xchg stos push lsl fldenv clc rcrl or (bad) dec cmp pop cli or push in testb or push loope cli in (bad) mov push or pop and or add sbb stos or add sahf adc enter dec shrl pop cwtl xor adc aam add adc jb ja scas inc jne pop sub jmp js mov (bad) testb lods sub arpl add xor test mov imul mov mov add pop les jge add fwait sub std mov or cs pop iret add adc sbb add cmp push add dec or add mov mov std sbb mov inc mov add inc (bad) hlt push testb imul sahf lock gs test push and or mov fidivr mov jp ljmp in cld xor mov sbb lock stc movsl mov inc fbstp add pop leave insl add movsl jl scas jle and mov add or lods test (bad) pop stos add push adc push add rcrb adc sub and mov adc add add add call and sub scas cmp cmp lret aaa adc mov sbb mov mov dec push sub loopne jb pusha inc test adc js sub jle push roll dec jae ja ffreep daa frstor add jbe jl xor adc sbb or pop xor push and add fildl mov aam add fmuls shl jne negb ret mov imul add add or jmp fcmovnu xor add cmp (bad) push xor shrb fwait (bad) cmpl into and add rorb pusha sbb test test dec or inc add repnz cwtl pop or adc xor dec cld sti nop push sub add (bad) out and adc es mov pop mov xchg push cmp leave (bad) push lea xchg dec sub rolb shrl sub sub sbb mov or add loopne mov jl pop or mov pop inc mov or (bad) mov bound repnz cmpl ficoml cmp addl hlt mov aad lods pop or mov or scas pop pop pop pop adc adc loopne adc push xchg mov xchg les cwtl lcall loopne xchg sbb (bad) pusha jmp test (bad) push dec or adc push mov jl fdivrs pop (bad) mov jp push pop jnp push sub or jo jl shr rcr or jne divl das and out jb inc imul mov jb cmp jbe dec sub sbb add adc test fimull mov adc btc iret (bad) lcall frstor and cmpsb sub jle jb or add pop dec or sub adc inc pop insb pop nop into mov (bad) nop add stos mov jns adcl xchg push (bad) or dec les mov pushw xor lret add jl add and ret mov mov inc jle adc adcl cmp cltd push mov lret and xchg mov lcall mov mov inc jmp cmp in pop call add add adc xchg xor fcoms or aaa rorb sub and jae push out sbb pop adc and inc xor add mov cs add imull mov imul dec mov aas sub or or test in movsbl sub sbb jmp add mov dec popa cmp push ja sbb mov cmp mov xchg add mov or pop sbb daa and cltd mov (bad) insl push loope scas pop mov test mov aas jg sbb adc cmpl sub push jbe popf cmp add gs je mov and imulb data16 or (bad) notb fcmove insl inc mov sub mull cmp push nop mov cmp inc dec (bad) sub inc or mov sbb jne push enter pusha mov fist push fldt je jmp mov mov pop es insb je decl ds jb cmp ja or dec testl ret (bad) cmp mov push mov incl jb idiv rcrl cmpb add aaa bnd push arpl mov adc test (bad) test mov ret shl pop rcr push or and add inc stc xor test mov lock xor cmp add xor (bad) roll mov jne (bad) pop push sub inc cld inc imul (bad) ss out shl fstps push pop out adc faddl aam xchg sub iret dec out push std cld jmp push add inc ret inc push out loopne or mov mov or imul enter aaa mov int3 sub add or int jns scas push cmp jbe clc add dec dec mov mov add loop repz push adc loopne roll jmp cmpl adc inc loopne sbb add mov sbb pop or add xor shrb (bad) ss inc (bad) push sbb pusha add add cmc loopne sub mov sub dec xor test push mov cs gs push or cmp add push mov inc cmp cmp lods inc cmp xor xchg (bad) sub sbb popl xchg push lcall xor (bad) test jbe mov mov push cmp mov pop xor mov mov or add pop inc dec push movsl sub and lods pop sub adc sub mov mov add jb push add (bad) aam popa jae or rcll outsb inc mov dec add add inc push (bad) cmpsl cmp in pop push sahf addb mov call adc sbb pop (bad) xor mov cmp xchg cld imul fs push loope or je sbb inc and mov (bad) sbb insb jmp in xchg add add mov or imul in pop movsb cs jne arpl sbb add inc pop sbb sbb or arpl and insl sbb inc pusha push adc arpl mov jmp jmp adc inc dec or mov jge cmp jle and decl pop adc add xchg inc inc mov cs loop cmp clc repz or shlb pop cmpsl or mov data16 xor dec rolb add addps dec (bad) pop ret sbb cs or or std icebp out push and mov cmp mov stc mov inc cmp xchg push pop js lcall cltd sub jns loopne push xor (bad) shl out adc push hlt fiaddl cmpsl inc pusha ficoml lret inc cmp inc call or jecxz incl push push add fisubrl mov jecxz or mov xor or push inc add pop sbb sbb mov rep mov or pop jo push mov ficomp add cltd (bad) mov (bad) mov pushf mov xchg or add cmp cmpsl stos inc xor pop inc xor push mov xchg mov negb sbb mov ret mov mov aam inc and or sub sbb mov das hlt ja imul push push lea out test loopne rcrb pop sbb mov dec js push sahf jb cltd jbe add sub add push push aam aaa movsb jne in (bad) jnp (bad) orl (bad) jno push je fild mov mov cmpsb pop fs pop cmp or xchg add adc pop push xor leave pop sub xchg jb sbb add add pop adc inc mov add pop (bad) movzbl jmp ds ret sbb clc xorb push mov sub movsl or push inc sbb add mov repz pop pop add stc leave ret jo mov sub sub insl aas adc inc pop jne test dec xor mov xchg gs add sbb int call fdivrp mov sbb cmp pop jne dec fildl and xchg mulb (bad) add test dec jp mov inc and ret out je xor arpl jbe dec jbe cld std inc sub jmp lea sbb mov or mov lock (bad) mov pusha push in dec xor call aad xor outsb push cmp adc pop cmp or stos pop xchg nop sbb (bad) or daa mov sub fidiv xchg cli cmp add push lock add sub lods in ret lret jbe add mov es je shlb xor xor mov push rol movsl fimul mov cmp or add scas leave xchg adc cmpl mov jp add adc sysret sbb pop in mov cmpb shlb hlt push test inc aaa add dec inc insl rclb lret insb sub push push push sbb inc popf xor cmp shll cwtl movb mov or sbb jge,pn jns lea add jne jl cltd push pop imull cmpsl sti incl push mov (bad) or xchg push pop mov testb cmp mov inc add jno xor lods adc sbb cmp sub ret in add int push add xor fisubl les sub call mov outsl popa mov jbe fld xchg test xchg adc jge push lods mov pop (bad) or push out push xor sbb mov xor push lock fcoms cmp aam mov jmp or push movsl fstl and shlb mov dec add jbe sub cmp (bad) sarl push fsubr push jne jl xor sbb icebp gs xor imull enter clc call add in outsb popa xchg cmp cmp (bad) outsb sbb pushf cmp (bad) pusha push xchg pop cmp add adc incl sbb lret pop je ret adc xchg add pop mov mov pop add or fimul xchg sbb cmp dec push in pop flds cmp rcr add sbb dec and jl add add jecxz clc insb push add mov aaa cmp xchg dec and add xor inc pop clc loopne adc xchg adcb or dec xlat sbb fisttpl jecxz inc in inc neg sbb jecxz jge or jg ret daa mov (bad) jne mov jle xchg outsb adc setbe add and sbb push push xor inc cmp or and and jmp sub fimull mov push adc ret mov push hlt ret push add imul jle mov mov movswl mov and add push push (bad) repnz jbe add push lea test and aad andl shr cltd mov fisubl mov nop sbb or push push cmp movsl jbe lea decb insl add xor out cmp jbe aad pop push dec pop add xor les mov lods or fnstsw in mov jecxz mov jne and xor jo pop test (bad) fmuls and sub mov or cmc jb push sub or sbb cmp mov js js mov and jb push inc and aas add add pushl push scas (bad) sub pop add push jb sti jne jmp fs mull pop or or or jno xchg and adc sub fadds sar push fisttpl rorb test sub lods jo shll mov add inc cmp loopne outsl cmp xor mov nop pop outsb push adcb ja loope inc test or ror or xor adc mov add sti out es add xchg pusha jl or adc or push ret push mov or sbb or dec mov add dec add push inc loopne mov adc xor mov sbb lcall mov lret outsl push insb mov mov cmp mov sub lret jbe mov fldl stos shll mov sub sahf mov mov mov jmp lock cmp pushf sar jl loopne rclb sub rcrl jl add mov pop sarb ss jno push fldpi sbb push les or mov andl xor test call add pop add sbb jne and mov adc bound insb or pop add je shll arpl xor pop sub pop ror sbbl and dec sbb xlat add lds stos cltd xor inc jnp popa adc sub fldl or call faddl mov or (bad) adc add xor mov aaa cmp addb movl fcomps mov mov orl inc xchg or test rcrb adc pop cmp xchg pop and push push fwait (bad) adc and fildl add pop call mov test push add test add inc movsb push (bad) in cmc add inc loopne cmp in mov pop cmp adc test mov add sbb or or push jge stos cmpl repz icebp jae mov mov xor outsl test sbb ja jl mov add shl dec or xor sub jns je enter inc push mov fdiv add cmc sbb mov (bad) pop pop adc sbb add or or push loope imul push fmuls cmpsl loop mov cmp addr16 js cmp mov insl xchg or jne and adc decb sub xor std (bad) test addr16 movsl and cmp mov xor rcll mov pop stos xchg pop push loopne movups push (bad) and mov movsb or stc rcrl xor fwait or sub adc inc sub mov cmpsb inc mov inc add sbb mov mov dec add outsb or push push jg xor push inc cmpsl mov lods push in mov jg jmp sub pop jl mov mov or or dec stc mov hlt add mov loope sub (bad) ret jmp inc adc sub orl cmp dec mov push cmp inc int3 add dec les pop lock mov sub xchg or inc rcrb mov jno push adc mov sbb test mov jb and and popf addl jle inc jno cltd dec dec pop pop adc les jae les push or inc add cmp dec mov push push insb inc adc pop cmp in hlt in ss test push adc mov leave pop or inc xor jmp mul fisub adc fmull add dec push lods or jmp cmp into cmp inc shll aad pop jne sub mov ret ficompl and pop push sub loop test loopne push fwait icebp sub adc dec push stos test addb or push push xchg test jo cmp inc js (bad) sub or sub out stc ja (bad) or outsb jnp lret repnz pop adc test mov rcrl dec std or addr16 jne call sbb dec inc ss inc cltd fbstp mov (bad) pop push jg and arpl out jl xchg std mov push jmp cmp jne cmp shll je inc and jbe push push jmp sub aaa subb sbb and fild mov in shlb aam add push lock es pop and add sub cld xor or dec adc push jle ret pop fs dec je dec jne or inc or ja in push pop and pop jge sbb xchg inc add or (bad) sbb cmp loopne imul add and inc inc mov pushl lods and adc popa add xor std jp jb xor outsl inc or or push mov sub ss xor movsl iret mov push fiaddl add adcb movb lea arpl (bad) in pop je cs and xor jne inc in mov add icebp jmp push or lds mov adc xlat xchg and inc mov sbb push cmp jl iret jg add pop test adc outsl outsl loopne hlt out push cmpb sub inc pop push mov fsubrl shll call sbb loope scas (bad) pop jb mov stos cmpsl adc push mov dec xor pop mov outsl dec add ret cs enter mov push test add mov inc jp bound movsb lea std or test add (bad) loopne int push add lods dec lock movb add xor jne bound nop inc (bad) or and fcmovu outsb and addl sub subl or sub loopew,pt shlb pop jle rcrl and push call ljmp push lds pop mov mov sbb push add and (bad) orl out xchg cmpl mov or cmpl jbe add in xor cmp lock or pop fsub jae jmp mov cmp jg orb inc jmp enter insb (bad) lea scas adc jle adc mov adc mov xchg push aam das add add and or inc push sub inc jl and test je hlt adc xor sbb jp jbe sbb lock outsl jge cmpb pop adc hlt xor inc adc lods jmp pop and adcb lcall xor add and lret aam and push push mov and pop in nop testl or jo and (bad) adc pop inc jp out add mov pusha icebp adc clc push aam mov add or or ja mov mov push dec shlb dec loope dec lea fistp or add add adc xlat je cmp adc (bad) add or inc and fildl fiadd inc add movsl js ja push inc push subl pop fdivr push (bad) jmp and ret push sbb js mov sub fbstp mov pop adc daa in push rclb inc (bad) je out push pusha mull push lock call in jmp fildl sbb lods sbb rcrl dec orb mov rcll rclb dec or insl add dec cld lea ss xor fstpl cs ret inc lods add adc pop (bad) enter and xchg aam pushf dec push push or adcl dec inc jne sub inc push xor dec lea (bad) or not dec inc or pop xchg test les fbstp (bad) rcll jb push push mov pop testl ja sub dec inc aaa sub and adc pop test pop jae or push sub aam inc add pop dec (bad) xor mov pop test aaa test sti shlb sub jns mov aas (bad) jb cmp test cmp fidiv push xchg cmp nop mov add pusha and lock inc les clc xor jmp (bad) jbe setnp xor inc cmpb and nop adc xchg mov rcrb push adc lods loopne aas push lods shrl add loop sbb push jo xchg mov mov sub push inc and sub pop inc or adc sbb push add xor add mov insl inc stos or jl (bad) ret (bad) inc enter sub jns and push adc jge sbb mov xlat xchg or loopne fstp out lea or aas adc mov mov cli dec cmp jle inc mov jno inc std adc add mov shrb push push mov lods sub add imul fs loop dec sbb pop add or add xor stos adc pop and jl xor push std inc mov or ss cmp test fcomi ror or mov in push nop pop lcall inc test xchg pusha push scas cmp cmp push pusha test pop loopne add insb push aad aad mov std pop insb (bad) or call popa cmp sbb jno inc mov jle mov fistp mov ja pop add xor fild sub jne repz adc add push mov adc xchg inc arpl sub aaa loop or out ja inc adc bound fistl mov adc std xchg data16 sti fidivl dec in into sub ficom adc pop call inc add out jnp adc mov push enter dec sub push pop movsl cmpl jg cmp inc hlt add ret or push inc outsb rorb pcmpeqd sub inc mov and sub test ja sbb push test les insl mov jle mov mov mov mov inc inc xor cmp pop dec sbb jmp adc mov xor cmp mov push sub inc inc leave cmp fsubrs mov aas push cwtl adc mov jg sub enter inc cmovo sub cmp mov push mov adc fnstcw mov inc sbb adc add cmp sub dec mov and mov push and sbb sbb dec es push pusha adc mov lahf arpl ud2 or or shl test ds push ja adc lret flds rol dec add and leave add or loope or mov add insl adc aad adc adc or mov mul enter adc jne mov movsl movsl movsw sbb push pop add out inc lods inc bound mov mov and sbb push inc lds add or andl arpl mov incb loop inc inc mov sbb jbe les inc out cmpsb and sbb push cmpl sbb inc or sbb lds (bad) sahf sbb sub in mov fcomi sbb sub jns adc adc pop sub adc fisttpl dec jns sbb icebp popa adc pop sub fildl fistpll lods rcl ljmp dec lock shr add or push ret adc imul cld lock orb je hlt aaa ds imul mov sbb cs jmp cmp je das mov jmp cmp mov push and sub sbb rcl mov call adc mov xor mov inc jl dec imul and xchg dec or push outsb lock push inc push sub imul sub dec add ljmp mov inc xchg jne or std jmp test or dec lds xor sub stos stos push stos pop jae push aaa jle adc add mov call push adc add sub roll cwtl add hlt jns dec test inc lea pop ljmp clc roll add push fldl sbb shl not test subl mov (bad) or test jmp mov mov pop xor dec or inc push sub adc sub popf cmp stos inc in lea loop jg push jg cmp and push or nop jg mov push adc push in je sbb jae mov sub mov mov jnp and xchg mov jge pop pop mov mov add in push mov std cmp and stos inc hlt test and fmuls (bad) (bad) mov sub mov sbb sbb rol loop sbb adc lea add jle adc sub (bad) mov sub mov lock out test mov adc shl incl xchg add sub mov mov pop adc sub outsb or xchg push and mov mov adc dec lods jb pop or fdivrs adc adc adc mov mov xchg cli xchg mov pop add push scas loopne lcall call dec jns push mov mov in loope fidiv pop (bad) adc pop lds mov cmp sbb push inc sbb push sbb into xchg mov mov mov jg andl stos add into out aas insl ja idivb iret and test test adc lock scas jge add nop rolb and shl leave neg sbb jne xchg push or (bad) lock or inc addl fwait or mov cli test lahf push pop leave inc xorl leave and lods cld sbbl inc add and adc inc cmpsl ficom mov das or add or jl stos inc inc xor mov xchg add or mov mov cwtl jge xchg gs xchg test mov sbb pop inc pop outsl rclb dec mov jno push lods add inc rorb inc sti mov or jmp xor mov or xchg sub lock xor and in mov in jmp mov mov pop mov add (bad) push push cld movsl xor call push mov adc mov sub into jmp popa orl por pusha fidivl push call js cmp sub std movsl in cmp jle jle cmp or xor loop push fsubr pop or dec push flds push pop or adc mov popw jle sti xchg lods xor cmp jg repnz mov cld ret sti mov ret mov pop or or jge inc pop aas int pop rcrl cmp dec add pop and dec cmp and fucomp sbb or jge jmp adc insl icebp outsl inc add add and xchg mov lods jae push push pop mov movsb sbb adc xor notb imul orl pop pop or pop adc clc iret fisubl xor jbe mov outsb pcmpeqd je push insb ja insl je je pop mov rcrl test and add or adc mov jbe cmpb jl incb dec sbb xchg imul or or and stos sbb and adc mov cmp mov or jecxz mov ja push (bad) or int3 pop rcrb icebp ret outsb popa mov sub hlt mov mov popa test int3 lcall or add lods inc nop daa or xchg sbb mov mov in (bad) cmp stc insl (bad) in or pusha cmp mov lock rclb aas mov xlat jmp jg xchg les ljmp lods sarl add (bad) sbb addb mov jno (bad) mov cmpw sarb nop jb mov cwtl mov mov pop mov cmp mov xor lcall sub and lock cs addr16 stc mov xchg sub lea repnz or (bad) std mov mov or enter mov data16 pop inc testl fcoms cmp stos xchg cs sub enter and dec add adc outsb push rolb push popf dec enter fisubl das cwtl xchg pop mov adc cs loope (bad) dec and add loopne pushf jle rcll je les push mov mov or add (bad) pusha mov lret das shrb or ficoml mov std testb mov je jb addl sub insl mov pushf pop mov aaa nop inc inc loop dec test jg push nop sti mov or iret fcoml sub sub fisttpl hlt call gs jmp (bad) or mov ljmp mov pop das mov adc jg or adc aam or add rcrb pop push push fcom insl mov fiadd pop sarl pop shl jmp fimull inc aam sarl addl test ja and rcr fsubrs loop add nop sub sbb stos jne or sahf jge push mov fisub inc push cmc or or dec (bad) arpl sbb dec (bad) arpl dec outsl (bad) xchg or pop mov jno add lds mov int loopne lods fstpl mov (bad) insl js movzwl jne pop test cmp or das jno pop sbb jg sub jmp add or inc jl or js jno test xchg jo add sub in inc or mov mov (bad) ss mov sbb cmc cmp jb loope dec cltd push pop mov out or stos mov xchg push push insb orb lret and subl dec movb add (bad) xor rcl rcl aad jo xor xlat fcomp (bad) fstpt (bad) adc scas dec xchg je movb jmp add insb dec shl push fcomps adc sub or fdiv enter fstp and sub add add daa cmp xchg mov pop adc mov add jecxz div dec cwtl mov or inc mov push mov adc sti (bad) rorl bound push jne push ljmp gs push inc icebp nop mov xor push and jmp push push mov mov repnz leave adc rcl inc test clc xor test or mov mov mov mov icebp neg mov jne imul data16 cwtl shrl or scas pop adc test xchg xchg push int3 pop sar sub add and push inc fucomp mov loope mov aam xchg out imul push pushf arpl dec addr16 mov push sbb mov and sbb inc test adc mov add push (bad) bnd mov or adc mov mov xchg xchg xor xchg (bad) push cmp inc notl mov mov rolb fsubr and sub mov jb adc adc push dec shlb mov in int rolb (bad) mov jle push in pop test ret pop fucomi lods mov jne mov repnz mov xchg nop add pop inc ss stos pop out nop adc arpl test lods xchg mov mov mov (bad) add jg push nop out add pop mov jge lret hlt lock rorl cli cmp out or or add push sbb push adc xor mov neg mov popf inc mov lock insl scas stos inc jmp or push mov mov pushl lock and idiv repnz idiv and inc idiv div int pop sti sub (bad) loop or pop out ljmp loop,pn mov hlt loopne call int3 imul call les sub mov popf mov jge repz xchg jo and shll xchg mov pop dec insb fwait or repz pop in jo .byte call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov add push ret or or or or add add push mov push push push push mov cmp push mov pop jl push pop xor div or decl std add movzbl adc mov shl or mov fwait in inc call xor inc add packuswb sbb and adc mov (bad) incl cld jne test jne movb jmp pop push shl dec movb jnp ja add cmp add ret shr rorl outsb pop push add add add insb mov pop mov pop leave ret cmpl fstpt jle mov pop rcrb jl mov adc mov adc adc sarb rcl or adc jb repnz inc pop daa push or or mov inc jmp jnp ret mov mov push mov (bad) or add adc (bad) jne push invd mov (bad) pop lods cmp mov into mov or xor in sub dec mov outsl adc (bad) call clc or push outsb call jle cmpb je jnp push jb cmp adc adc cmp adc push ret (bad) mov je dec sahf and sbb or outsb cmp jmp xor ret ret (bad) mov call mov mov std push push push jnp sbb sarb je (bad) fstl sub and je xchg dec jmp sub mulb or jae pusha es test jmp test fcomi outsl pop cmpl and and adc insl xchg adc add neg sbb inc mov pop mov (bad) cmp ja xchg and xor enter rolb mov mov xchg cmp jb ret data16 fidiv and push and inc pop xor mov jbe pop movsb mov mov jge sbb sbb in or mov (bad) jbe mov lea mov pop or jge test add jle (bad) sti jae jae push push jmp gs mov out fisubr xchg and jle mov sub lahf lock fcmovnu mov push cmp test cmp jbe inc push push sahf or xorl out aas (bad) sub mov clc add (bad) imul add add mov sub cmp jge xchg mov es rorl fisttp sub pushl mov mov inc xor add cmp cmp ss addr16 jmp mov add in sbb mov fistpl inc sub xor mov mov or fcom test movsb and xchg add cmpl fadds nop test shrb int cmp sar outsb jnp rcl cmpsl cmpl mov mov imul (bad) fild je mov push mov xor pop mov push repnz or fwait adc negb repnz push inc out pop out fidiv addl gs in jo adc inc push add leave adc push or out sbb insb mov test mov sbb mov push mov push hlt mov xchg and rorb inc adc sbb mov popa cmp mov fbld jne mov add xor mov adc fstl dec test (bad) xor adc (bad) movsl lds add sbb xchg loope (bad) aaa mov test es jb push add mov (bad) jbe inc sbb cmp sub add (bad) mov push push ss jbe cld xor cmp fmull pusha popa mov xchg aam adc les ja (bad) sbb add mov in push sbb std (bad) shrb outsl int jbe mov imul jo insb clc push pusha sbbl (bad) jae xor je mul pusha mov dec hlt daa lods pop pusha push push jg aam rolb js loope jne clc add add cmc popf mov cwtl test outsb push incl push mov shrl jge sbb pop inc dec andl mov mov aas rorb cmp adc sarl cmp xchg out mov pop mov inc add xor in out push push xchg das loope sbb adc sub cmp sub jge xchg dec (bad) pop mov xchg mov lret jl add (bad) clc adc lock mov fisttpll cld push pop (bad) push pusha xor jnp imul fmuls fsubrs mov lea decl mov xchg sarl and adc sub add sub mov (bad) xor lods push mov fwait insl cmpl btc dec sar and xchg shr cmp cmpsl aas test or dec nop addr16 mov mov psubw and nop xchg mov sub xchg sbb inc adc dec dec mov test inc nop movsl add cwtl push movsl (bad) xor lods pop mov mov in jge fbld add incl add mov mov pushf inc add or cmpsb or (bad) movsl adc cli push into cli lods ficomp iret (bad) imul xor or mov cmp pop or in negb sbbl sub xor mov jle inc mov cmp xor mov mov lods cli pop or inc mov ret pusha (bad) adc bound cmp add stos in mov inc jne lar mov mov or adc cmp je popa inc inc cmp jl jmp call sub xor out pop data16 jecxz add sub loop sbb ja daa jg into in sub push insb popa jp push out insb loopne (bad) inc push in out lea imul into jmp data16 daa adc or movb mov mov jbe push out xor outsl xor push mov jle cmp and nop mov add push lea cmp test aad or (bad) lea fldl sar jecxz stc inc xor pop and dec pop rcl cmpb out jle or js add push push or sbb call sub test ret pop rcll outsl mov push lea fldl jl addr16 js jns adc sub pop sbb jp push orb pop pop imul adc addl lods ror pop pop push orb mov sti insl adc outsb jle bound inc and loope hlt pushw pop xorl call sub mov push xchg and sub pop arpl xor int and push cmp cwtl jne sbb cwtl sub fwait addb out imul andl sub push add in sbb push sub and cmp imul or jnp add sub jne push mov or xchg dec inc je mov leave pop inc ja push aas je addl popf push inc loope add sbb decl cmp inc mov sbb mov xchg popf (bad) mov push add mov sti push lea loopne arpl (bad) out mov call shlb testb sbb adc ja andl mov rclb rclb test inc js dec lea push xor loopne (bad) jle sbb mov add sbb cmp jae or jl ds and ja mov dec push out lcall imul rcrb jle lea jg in inc lea test mov push and int sub dec add rorb loope xor ss outsb xor repnz push out mov push xlat pop mov xor cmp sbb sbb push roll add je mov pop faddp lods cmp adc loopne subl mov xor shrb mov mov mov orl fmull sub adc add cmp sarb add lock xchg int3 cmp xor adc mov cmp pop push push out push add pop cmp push or outsl mul roll jb mov ret inc pop fistpl icebp andl inc sbb xor sbb xlat pop adcb or repz add fstpl xlat jge dec mov pop pop jmp lsl push or sub sub sbb pop iret inc icebp dec fstpt push jge push mov mov add xorb popa push add fiadd jne mov sbbl or dec mov push or (bad) fiaddl sbb aad pop rorb aaa or sbb flds mov inc fmulp lds lock pop fs addl je loope lock out jb adc push adc cmp lret sbb jge adc jmp setle adc xor adc popa nop (bad) or andb adc push push rcrb rcll push in adc sbb ret inc sbb xor daa ficomp inc std mov pop inc jae or gs dec (bad) lds inc or inc pop adc adc dec adc div cld or xchg fcoml (bad) xchg mov sbb ss mov xchg mov shrl sbbl xor insl (bad) pop orl pop mov xchg test sub jmp or mov push inc ret push jne xor adc loop inc cmpl xchg rolb fcoms aam sbb not mov int3 out pop mov adc add dec jns sbb rclb push inc cmp bound das inc push repz mov fs push sbb rcrb or sub ljmp iret (bad) in ja mov adc imul ja data16 add out sbb pop push sbb mov jmp and xor jo push push insl xor cli push jg xor or and xchg insb arpl in mov cmp or cld xchg int3 and xchg sbb pinsrw mov add add rcll mov inc sbb (bad) pop sub push push pop mov sbb test push repz lock sbb sbb push push (bad) aam or ret (bad) adc mov data16 fnstenv int movsl ror cmp je mov sub add or call xlat inc or mov movsl pop pop roll push or mov xchg sub push pop cmc jmp cmp adc inc inc push jne das (bad) dec insl push inc pop and push imul mov sbb and int cmp inc (bad) cmp pop orl roll jecxz lods fsubr adc daa inc lea pop inc je fldl2t jns rolb pop fdivrs jl pop movl adc repnz and shrb clc adc jl loope inc ljmp jmp movsb and sti add mov hlt jbe push jg int3 adc js loopne stos insl or jnp nop inc sarl pushl sub jl sub mov call fnclex mov dec in ds inc cld dec xchg test arpl lds and push adc aaa hlt pop push adc xchg popf vcvtdq2pd push imul adc sti sub push lret adc loopne clc sub xor repz push push mov push sub adc jmp inc addb jnp add jne push or mov inc push lods popa mov int lock loopne push leave xlat push xchg xchg add add mov mov enter enter lock in adc jl in inc push lea mov bound push push mov pop imul adc aaa xchg sbb cmp mov int3 inc leave mov mov (bad) fnstsw test fnstsw stc or outsl hlt push sub je (bad) jae sbb in aas pop xlat repz cwtl lock lds roll pavgw xlat pusha shll push or add sub push mov mov ss sbb adc jle push imul mov cmp xchg cwtl add sub dec xor push jl jno outsl rcrl mov (bad) xor (bad) xor movsl (bad) ljmp or rep cmp or fimul adc inc push popf xor (bad) pop ret data16 fst (bad) fiaddl out push xchg push pop (bad) in popa rcrl inc dec adc jle jmp or subb mov test test mov or pop loopne (bad) mov push push insb dec jo imul and and repz into pop subl and push push (bad) fidiv pop jns pop xor dec les jne orl fdivl adc insl mov sbb pop xchg and inc mov imul psubsb mov adc push add lea rcrb inc (bad) pop movsl add mov xchg mov jg in pop sti pop movsl (bad) pop sbb mov sbb push add mov decl mov mov arpl dec icebp inc mov (bad) or lock aam (bad) flds or je and sub je add loopne aad or jle loop movzbl inc jmp call inc adc inc cmp fs out (bad) adcl inc push lea and mov mov inc lea mov add fistp roll clc add cmp dec xchg call mov std (bad) in cmova xlat sarb add cmp incl dec add imul add test cmp push mov add push push cmp pop popa jmp cmp movsb (bad) jno sub push xor push lea xlat test icebp or cmp je cmp je add jne std je pop inc rol or inc clc adc int or aad jle adc sub adc and in lret jmp inc mov push fmuls and mov ret add (bad) jo mov fildl inc dec mov mov cmp mov jl (bad) mov sub cli ret stc push jne mov inc push popa push push out dec adc incl push push inc mov ret test adc adc mov jge mov fistpll insl push mov push or cmp outsl ret cs sub push fsubl cmp mov mov or adc pop mov jb outsl int cmp or push jns mov pop pop push sbb xchg pop jle push or (bad) jge xor xchg adc mov sbbb lock add xchg dec mov or leave or xchg mov adc adc clc adc pop mov std and out fld fucomp fnstsw test jp fstp fld1 fsts xchg cmp jns mov fcomi fs mov cs lret jmp loope in adc shrl adc jae pop or mov add sbb mov jmp (bad) mov incl fmul fcompp jne je sbb aam xchg mov push loope adc mov jnp jo mov add and jl pop mov jg test in lock mov add ret jb out adc sub cwtl add pop mov leave out leave xchg xlat mov add mov cltd push xchg mov pop jg xchg sbb sbb les dec lods xlat xchg cmc cld sbb fidiv adc push outsb mov pop jp cmp xchg fstpl pop mov or cmp xchg std dec sbb movsl mov add xor jnp iret or sub add les scas or and add std pop (bad) push add adc rorl cmc mov test std in das push push xor cmp mov add push sub fucomp and (bad) call das xor pop leave (bad) jge cmp ljmp (bad) aaa add dec add cmp scas fs pop ret mov and mov add sbb add leave cmp nop lret outsl xor loope leave test jle push lea inc test add fstl xor mov xor hlt je push in xchg cld add aam (bad) dec cmpsb inc cmp movsl push out mov shrb adc shl add or mov lahf jae jg mov pop push (bad) mov sub enter popf imul push cld fcompl jg jmp push pop jecxz loopne and pop notb xchg push fsub jl mov je fildll pop fsubr adc sub test fs incl push in test xor jge pop hlt je imul imull sahf adc jne les mov lock lcall (bad) mov (bad) adc lods fild adc into push mov pop push mov pop fldl ss inc sbb movl lock test sbb jnp repnz pop (bad) mov call cmp shrl popa fbstp es adc aad xorl faddl loopne addr16 pushf fstpt scas sub je dec je add dec jne mov pop jmp or jmp or push jmp jb or in push inc or mov sbb scas sbb add dec mov push push outsl cwtl rolb dec pop sbb scas clc shll (bad) sbb sarb movsb cs sbb and xor inc andb ja add addl pusha imul xchg repz and or jo js push loope mov add es mov jmp sbb unpckhps negb adc fadds sub push mov or data16 adcb shrl adc pop xor mov stos mov lock push mov mov sbb outsb (bad) jle xor pop aam enter decl dec js or push lea jne arpl push es or xlat pushf mov xor dec mov jl insb out sbb clc dec les adc sub xchg cmpsb lea inc popa fs cmpsl les je cmp jb push and adc or insb and (bad) push jne out or lea fimull cmp fmuls pop mov push mov sbb inc mov dec push insb push (bad) mov sbb (bad) mov enter push mov inc dec pop xor (bad) add test xor or dec fbstp es cmp or cmpsl test popa lea xlat sub popf adc pop lods pop or and js js push push add or pop sbb sub pop mov les std mov rorb and outsl icebp ss push add arpl fiaddl test add xor inc mov mov je ljmp dec add jne xor sbb stos mov or add les push ljmp adc inc jl or mov sarl scas sub test xchg mov xchg and or inc add mov sbb adcb dec mov push nop inc xchg (bad) subl add adc in (bad) mov cwtl pop adc cmp into or test movb out ficompl push orl shlb jmp (bad) (bad) aam ret jmp push and add push sbb leave add sbb loopne push test or fadd jo push (bad) inc sti mov leave scas test inc add incl pop sub lret inc push (bad) loopne and into dec sbb lds cmp sbb push jno mov xchg add xchg popf jne sub dec int3 and pushf lds xor and sbb sbb lea test loop push test pop mov and fnop add add lret mov push ss push mov or icebp (bad) or stos xchg fcomp loop pop adc push jo sahf loope les (bad) sti loope and shrb (bad) push lea add jg inc sub add push movzbl dec inc fsubrs jns push pop sbb iret sub push xchg xchg xchg ret push out push out imulb fsubl or xor or xor pop or mov push adc lea dec loopne test mov push pusha cmp out or movsl push add rcrl jo push pop (bad) xor movsb sbbl push add or push cmp cli add movsl adc pop sub sbb push aas sbb push lea fiaddl or or jmp mov or mov js (bad) in mov je aaa fisubrl mov sarb inc je adc xlat aaa mov inc cmp push test xor sbbl and ud2 pop mov test push popaw divb pop push mov imul adc (bad) popf jne mov imul or and enter or and fisttpl or es arpl mov lcall cmp add sbb cmp and mov pop push add clc xchg or lods mov or add xchg jmp cmp and inc push xor aas cmc push mov dec cmp cmpsb mov leave inc bound mov add fldt lret rcl aam aad adc (bad) imul insb mov cmpl mov push sarb dec in fiadd mov mov dec xchg or je add ret int3 or push mov insb out lods insb sbb add ret fidivrl int3 jge sbb sbb fistpll insl orl inc pop mov mov add mov adc xchg and push mov xchg add cld cmp andl incb lea push push adc push jmp cmp cmp fs inc loopne dec mov jno sbb add loopne fisubr (bad) and (bad) fisttpll xor cmp mov pushf jge stos adc mov add imulb push pushaw (bad) jbe xor push mov arpl pop stos and rclb pop fadds mov push lods inc lods sub and enter imul mov push sarl xchg insw outsl mov and in or enter fnstenv or sbb cs sbb and addl jno outsl mov or test scas insb (bad) xor push cmp (bad) cmc (bad) imul cs or pop add push lock in push ja lods add movb and cmc mov or push sbb aam adc out pushl push int cmp push jbe sub sbb mov push cmp adc or or in jnp incl loopne inc sub fmul dec sub clc stc lds and push loop inc mov es (bad) frstor and add sar inc shl ffree test or and pop adc jg cmp jne pop (bad) pop jne fisubr push nop jne add jmp sbb je nop cwtl and nop xchg sarb rolb mov add sbb pop inc stos aas cmpsl incl icebp push je jg je cmp jl push fcoml xchg insl mov fcompl rclb add jo loope cmp mov rolb test push cmp cmp popl daa xor push push push push movsl pop lds xlat cmpsl pusha sbb shlb daa fldenv pop cmp cmp push roll xchg inc in jne push xor daa insb clc sbb mov sub mov mov sbbl les add push push movsb clc cli adc test inc lods jnp push jge mov inc add aaa ret movsl jp test or (bad) mov pop es or inc push sti cli lods stos pop dec push int mov adc or or mov sbb dec adc dec add sbb jo inc ja lea sub adc push push push lds push lds mul push jg (bad) dec and cltd adcb push cs fwait pop cmpl jle xor pop or ret cmpsl psrad inc setne xor pop outsb stc inc imul dec stos pop mov dec mov mov sub jne mov fnop sbb jbe xor jne add imul incb fidivr push ja sub sub ljmp mov bound aad icebp sbb push sbb cltd sub push sar push or and mov xchg sub push in or popa mov hlt call push clc insl mov inc xchg add lea cmp or inc add bound dec fildll fidivrl or jb inc es insl sub je or lds or outsl sub cmp jl cmp (bad) decl add mov push mov jmp and push fadd xchg jne jg cmpl subl add jns dec movsl pushl mov fadds clc pop ja movzbl push ja jge test push mov stc call jmp push jmp pop sub push es (bad) add add add add pop lar mov push add add add add test add test mov cmpb je inc popl cmp push or push in in aas and cmp or mov faddl int mov adc (bad) mov jl mov leave add rorl jle pop mov mov out (bad) push jb lods in insl adc mov loopne imul out and cmp cmp sub pop inc imul push sbb inc cmp jle mov sbb or in cmp jmp cmp dec cs cmp outsl fstl insl sbb add in cli push mov aam push pop mov out mov movl inc push out das rep and int3 cld add mov hlt loop insl in add pop push pop lea pop and inc push fisub and std jge cmp pop (bad) fadds or or jl aas inc pop or adc fwait ret (bad) enter cld ficom arpl ljmp inc adc (bad) lods jge sub mov pop push sti mov cmp sub jbe sbbl scas orl out xor mov into jmp jge jp jl xor ss ret je mov cmp je sbb sbb pop mov pop or inc loopne std fsubrl decb adc neg (bad) xorb sub jae cmp pop jne jnp jg loopne fs ret fs mov mov jne (bad) sub movb and loopne std xor leave js xor pop (bad) adc call dec mov gs mov addr16 xor lods cltd dec cmc or add (bad) or cmc sub call inc sub adcl jmp mov out fcomps pop xorl sub mov pop adc sbb sub subl mov adc inc add loop std shlb push std push push mov aad jne (bad) es mov pushf lds fwait dec inc fistp and inc fstl repnz or popa (bad) in jbe adc and je (bad) rclb sbb pop ja rolb das pop sbb add push aam cmp mov out (bad) test mov sbb add push scas dec inc lods push mov outsb fildl fistpl and jecxz lock cmpsb inc (bad) (bad) outsl jge ja jb cmp jae xchg or fwait cmp sbb xchg (bad) mulb mov xor ret in push dec jb sbb add adc adc and aaa or mov arpl pop lret je pop pop inc pop lea and lods inc (bad) sub fucomi sbb pop adc popa sub jne cmp cwtl sbb dec out daa pushf std cmp or aaa andl or cmp cld incb dec jmp mov ljmp or or loope cmp push fildl mov mov add xor adc clc into sbb scas jmp sub lock or das add in add xor (bad) je je push dec dec mov xchg xlat cmpb (bad) and ret jmp mov out push enter mov lea cmp cmp pop or outsl pop mov adc mov add inc int je mov xor add and adc pop call mov movlps xor fildl in pop jne mov jne and adc mov fisttpl xlat jmp mov out sarb ret ficom cmp xor inc pop xorl loop push hlt mov push fsubs add push cld test sbb out and add pop adc ss pop or mov mov dec dec sbb push loope mov push inc adc mov bound lods pop push aad pushf push push xor stc mov cmp sbb sbb and push sti dec sbb das (bad) (bad) daa xchg addr16 pop xor mov insl sbb mov mov test call push pushf mov or dec sbb lds and or cmp push cmp clc out sub jl fdivl push add add ret sbb push das adc ja popf jbe push mov xor inc in testb lahf xor push call pop js inc dec je out in or mov (bad) insl sbb push cmpps out mov pop incl nop pop or push dec push sbb rol pop pop mov add insb inc pop pop in or cmp add push lods pop mov out cmp jge and xchg iret clc push jmp test xcrypt-cbc cmpsl push outsl loop and push and aam clc mov jae pusha jmp dec lea jns jo ss inc jp push das loope and inc or pusha and xor push cmp xchg mov mov pop shlb push xor pop in jmp inc xor arpl lds and fildl mov jno mov push in sub mov mov inc loope dec loop mov add push rcll push jbe add pop mov aaa loop adc or sbb adc incb ss xchg adc jg push fiaddl jmp cmp add cmp in movsl cmp and adc pop pop pop jae notb dec and jo mov dec and push xor mov jns inc addr16 aaa enter in stos or gs pop xchg movl sub arpl mov push and pop shr mov lds jmp or mov mov sbb (bad) cmp stos out sahf fs rcr incb mov clc push pop xor nop arpl add add xor (bad) push jmp and add dec shrb inc add (bad) jmp add add add sub mov sti sub in shld sub adc sub adc sub and mov push adc adc inc mov jne mov cltd adc dec and (bad) sub add pop lea call insb add shlb inc mov push inc in ss cld push mov jae adc fldenv xor add cli push push cmpsb cmp or sbb pop in inc lea jle lcall push mov cmpxchg jmp xor orl mov aas hlt (bad) pusha mov pop xor imul lahf cmp aam das dec mov cmp adc jmp dec fnstenv sub dec xchg mov call (bad) adc push mov clc or dec push xor push fildll aad add sbb pushl cmp fadd sti add inc lock jg dec push mov pop pop add fdivrs add push add add adc mov push cmpsb sbb sbb cli add push cmp or (bad) je mov sbb mov insb dec sub mov es sbb dec inc (bad) adc ljmp vphaddbq inc pop movsl movb inc pop mov loopne lock fs inc or clc adc push scas cmp popf pop sbb xor or xchg or or push push rol popf lods add (bad) rolb out orb pusha fnop outsb pop and inc push lds fidiv roll add mov inc mov aam cltd or or pop clc in sbb ss xchg insb divb add cmp add (bad) or scas push and in (bad) je cltd and add cmp enter in and add jnp and je or je add dec push cmp pushf jg in outsb add cwtl fwait lret jnp xor icebp add imull loop jno cmp xchg push mov mov xor pushf ret lcall add mov je push jne push inc pop lods or pop inc lods sub push rcll mov sbb f2xm1 popf sbb clc adc lret (bad) ffreep mov into push aam pop rclb push jmp inc push jns inc mov mov push fiadd or sub xor xabort flds mulb adc add adc lds mov inc inc pop in sbb dec test pop and popw xchg and fs imul jnp jns aas hlt je inc add enter xchg nop and add push cmp dec or mov push jg and test jae mov jne sbb sbb xor add push test add push sub cmpsb mov lea dec stos inc and ficomp add and cmp sti test lock mov cmp mov xchg xorb push push push sbb outsl inc mov mov out enter jmp aas add pop inc mov pop cmp rorl adc jo or mov or sub lock stos pop cli sbb xor (bad) outsb (bad) or adc (bad) and dec cmp push pop pusha add ss fiadd add out and repnz jbe cli inc outsl rol jmp lods call pop push jnp out push add sub lods or sub scas je cwtl popa sbb (bad) lret xchg sbb mov push inc inc jl or xor scas (bad) aas fs sub mov or loopne pop and lahf jae or (bad) or cmp add xchg mov out xchg mov cld ds mov pop and cmpsb push data16 sbb sbb pop pop imul fs jno xchg addr16 insb subl test in jg adc sub lock or xor push push in fldz push jmp cmp fsts nop push in sub enter enter je,pn xchg cwtl or jne push add push push or pop adc xchg push inc xchg or xor fimul jne or in mov add or in mov int3 jb rclb rolb pop xlat inc mov mov cs xorl adc or pop push enter mov mov les push inc and push xchg push call call push and (bad) and dec mov sub cmpsb dec inc mov movsb add push or sbb sbb inc inc jb call add mov mov inc sbb sbb or aas fucom and pusha mov sbb fwait mov rcrl pop incb add sub cmp popa sarb or inc lods pop sbb cmp add push push add cmp mov jmp das dec mov movsl leave dec mov or inc xor out mov push push adc orl pop push hlt push jae mov mov cmp sbb in push idivl setb or ja data16 nop push inc js sub test test ret add pusha dec pop es scas xchg adc mov pop movb gs xchg or sub lods xor aad scas daa lea adc fdivs mov jo xchg sub idivl jmp sbb mov pop xor aaa cwtl lret push loopne adc pushf in or roll (bad) sbb pop sbb pop mov push add dec cmp jbe mov jl lds mov add add (bad) inc inc cmp cltd mov and cmp arpl pop lret or outsb fildl mov mov mov add pop inc sbb add jle loopne push or mov fwait or xor call xchg mov adc push sbb sbb aam mov mov pop mov sbb inc shrl fisubrl lds rorb loopne or or pop or movsb add lea add cmp rcll ret cmp sub (bad) mov and pop out push add add pop or pop pand and (bad) test cmp pop fadds add dec add push sbb and movsl and dec faddl insb push pop je add push lods rorl add sub (bad) scas cmp or (bad) inc add mov scas fcmovnu and mov movsb callw lock stos add iret pop pop test jg inc pop (bad) testb inc add ret fnsave or sbb xor (bad) neg and and push push inc pop mov loope or cmp testl and lcall jmp inc out cmp add pop cmp add push push out add mov mov inc test inc sub mov cmp mov ljmp mov mov jge jnp add inc ror sub fs out fs stos sub scas adc xor jl sub fcmovne and xchg inc sbb pop fdivrs aaa fs cmp in push das mov xor setb or xchg push mov mov and movzbl xor mov (bad) adc scas sbb adc mov stos ficom push add add mov les lcall fistp shlb jbe mov cmp or sbb add cmp int add add je cmp xchg out sbb adc add xchg int orl bound xchg mov mov (bad) js loop pop (bad) (bad) mov aaa jp inc std pop xchg mov insl add ss aas add mov or add lea das ja jp xchg sarb jmp mov outsb jne mov adc adc xchg inc addl xor scas push int (bad) aas or push adc inc pop xor icebp daa setnp dec int adc add enter aas das jo jle inc lret je mov push xchg xor clc add push mov je or sbb nop inc mov add pop stos cmpsb pop in cmp mov adc fisubr mov test pop inc add fisttpl mov popa cmp addl or adc sub push cmp push inc jo ret cltd add push dec push push xor jle hlt xchg lods cli (bad) in adc ffree call dec (bad) std sbb jl or xchg je ss adc push or push jo push push adc inc pop insl in lods mov sbb cmp adc add les sti sbb push push inc inc dec les ds adc adc cltd cmp pop mov push pop test or xchg push inc insb (bad) or mov pop push add lea incl push mov iret jne mov add mov and pop lcall stc add jne int3 fcom std cld cmp jne adc pminub pop push mov jp aam add lods adc mov inc ds pusha negl icebp pop and insb pop pop inc in xor cli daa inc lods or cmp mov les cwtl loope mov xor aad dec mov rcl gs jnp inc mov add and and sub cld outsb lret lea popa loope push push outsb add inc and arpl out mov lea mov sub test mov or mov xchg and rclb pop cmp out or movsb hlt add nop inc cld pusha or xchg xor stos insl lahf mov loope cmpsl pushaw cli inc or mov xchg mov adc arpl or push fcoms cmpsl test popa popa or sub movsb xchg rclb mov clc test xor pop test loopne out inc or xor call shrl dec les dec pop addr16 (bad) xlat jmp sub in sbb cmc sbb sub xchg xor mov addr16 jbe pop jg or inc imulb pop add jae pop pop inc mov mov mov mov scas lock jbe insb sub cmp xor nop pop xor pop dec ss mov and or std push daa xor ja xchg repnz call adc push cmpsb sub jp faddl add outsl push lret add addl jns mov je pop xchg jmp lea and push xor pop xor xor dec mov fadds outsb sbb push xchg pushf in and inc test xchg mov dec add cmc lods test xchg sbb stos sub sub fmuls test add adc sub mov sbb (bad) mov add dec enter pop add test popa inc pushf mov cmp insl adc push stos cltd jae add test adc sbb mov test mov cmp xor jne cmp and sub push jb cs in xchg in mov ljmp movsb roll add cmpsl or dec cwtl ficom dec inc add adc fstp movsb lea jno push sbb ficom push es mov push and rol push fstl stos je add inc nop inc mov dec mov loopne addb xchg fucom and inc mov or ljmp cwtl sub add mov fisubr ret sbb mov or adc push les gs jb insl cmp movsb cmp sbb push enter and mov pop sub adc ljmp cmp mov rcrb (bad) and sbb cmp xlat pop popa push add cmc js adc dec fistpll cmp cli test sub xlat xchg push xchg add sarb pop or pop je clc (bad) xchg insb cmp aad mov add pop push push into outsl test nop or daa lock jo xchg push shrd sub mov out or cmp add xchg add shlb (bad) aad addr16 cmpb call (bad) adc inc daa pop sbb fsub lock and adc loopne or arpl addr16 rorl cmp divb js hlt je shrl cmp pop xlat or or sbb mov and pop push popl inc add decb jecxz inc insb push roll faddl lds ds mov and pop cmp push fsubrp xor xchg push mov pop pop xor cmpsw adc inc test jnp xchg ret jb rcll (bad) je mov jge mov (bad) je mov cmp loopne or (bad) pop cmp add mov sbb adcl test repnz subps sub fistpll js pusha or pushw xor dec fs push lods mov ss inc mov cmp mov adc xor or jbe mov outsb inc or jae pop daa dec mov (bad) pop push mov mov push inc out mulb pop dec sbb fs adc sub or mov sub jne lods testb dec lret scas and push sub xor cs mov inc (bad) loop es jne xor add movsb sbb test or fstl pop mov sub push bound push dec push cmp xor mov lea inc add sbb sbb mov fnstcw push xor mov pop pop aas adc adc add cmp inc test cmp js test pop push mov notb decl mov stos sbb movsl xchg mov xor lea or outsl add dec push lcall nop loop sarb ret jne (bad) fisttp out push fild je mov mov lods jmp dec clc or test aad push push pop push arpl in xchg (bad) or shr add push pop push xor ret fadds inc and pop inc inc roll adc xchg cmpl popa mov sbb mov dec nop mov mov push bnd jne add icebp and mov jne stos sti loopne stos mov adc popa jnp in push pop push mov mov mov jle push mov cmp in push pop call cmpl (bad) je xchg mov cmovp push add add stos fldl mov in ret fcoms cli jecxz aaa inc data16 mov imulb shlb outsb add lods mov or pusha jnp test and lds jae leave push lcall jg outsl outsl or pop mov imul add idiv mov imul cmp jg mov lea inc in mov xor or add sub push cltd pop imul jae clc stc test jne xor cmp js jecxz add loop mov pushf adcb icebp ret adc arpl mov imul bound add jmp fisttp lcall xchg cmp pop add mov pop divb pop xor add nop icebp je pop xchg mov mov add test inc fisttpl inc pop mov add or and xor dec (bad) lock xor ja aaa jecxz popa dec adc je in cmp mov (bad) add ja push adc push push push and add push flds xor push push sbb adc adc push sbb ret inc adc mov jnp pop push mov loop add mov mov les or sbbl xor adc inc dec ret add xchg mov push add push xor push dec mov adc push rcr je ljmp ljmp push rolb je popf jo dec cmp sub inc jno mov sub push and xchg or cmp pop loop cmpsb ret mov stos leave hlt das fbstp mov or ficoml dec inc dec pop xchg mov test faddl outsl add test or push mov (bad) mov xor xchg mov enter test or sti adc enter dec popa or jecxz xlat mov out ror and ja add lea sub jne pop sbb popl mov sbb push and lret fistl mov xlat aaa add fiadd push push push notb push xor push jb sbb adc xor (bad) pop or or push data16 mov cmpsl xor add (bad) mov xlat xor add jb push dec data16 jae pop xor add icebp inc sub or or inc adcl flds jbe adc daa and sbb pop mov sub pop in xor push adc jmp ja lods adc push mov lea inc out test add push icebp iret call mov dec popf test mov aam (bad) jge jg je inc sub adc jl sbb sbb sub repz jl lahf bound mov (bad) adc pop push mov push scas sarb inc sub cli push scas sbb sub and and lds inc jmp xor add addl orb cmp lods add sbb (bad) icebp add mov mov fisub into inc sbb ds inc mov jns int3 xor cmp jne jmp sub loop and test mov cmp sub rcrb lea inc rclb (bad) mov jmp jmp add aaa lcall cmp mov push rorb arpl adc adc adc loope ljmp dec push lock fldl adc popa pop sbb int3 adc add or clc jno push mov xor mov leave jo xor xchg add add mov aam je mov bound jle mov pop jno push je mov arpl (bad) je push push adc aaa adc imul xchg mov add adc adc inc dec adc dec inc pop and outsl movsl mov jg adc mov dec jne hlt in sbb xor xor in roll sbb mov jnp mov (bad) outsb inc mov jne or mov pop add fwait in adc int xor push and ja test mov out aas pop repnz rolb call and or stc add adc lock xor pop mov lea ret push add push enter cs daa cmp fimull sub add mov (bad) in sbb ja in lods add mov aam inc inc mov or pop inc adc pop hlt jge leave adc inc add clc iret push push cmp adc jno hlt inc add clc push cmp sbb xchg add scas push push mov xchg es outsb cmp scas jno cmp nop scas or mov xchg je inc scas cmp mov cmp push mov or inc sbb sbb int cmp xor mov xchg add pop cli inc mov jge push pop pop cmp push cmp xchg mov sbbl dec mov xlat push and pop ret push and push push pop add xor fmuls aam mov (bad) popf cmpsl sbb fcomps fimul sti inc add fs les push adc push sti inc outsl aaa mov pop jo addb insb add rolb push add or iret es sar xor lock icebp test push inc adc xchg cmp xchg shll add arpl dec xor adc mov shlb pop lret pop push push add xchg mov or inc lret inc mov inc test xlat das aad sub jae push mov cmpsl push test sub je test out in push (bad) clc lods repz inc loop ds bound jge lret es stc push fldl adc outsl mov insl mov (bad) pop mov push mov aad lret rcll pop mov rolb les xor add mov cmp sbb lods add test or in jns invd mov sbb cld add jge outsb dec mov jg mov mov mov push mov and xor push mov add add mov sbb stos adc fdivrs pop popf pop sbb flds cmp push cs pop lea inc mov test xchg rclb cwtl lcall add dec add or sub or push mov jnp push sub add jbe js sti imul inc ja and jae inc jle xchg fimul incb test jne cmp orl sbb adc dec aas or cmp pushf call loopne push pushf fsubrs (bad) add mov aas jle scas pusha fs mov mov aas jmp pop or je mov pusha add inc or inc pushf call dec leave outsb pusha lret push lea orb mov or rcrl repz xor cmp pop jbe cld outsb imul lea or push adc and outsb lahf xchg sbb jge adc ret stos faddl lock cmp jg aaa cwtl cmp mov mov nop add fwait mov xor push negl popa pop fildl mov mov ss aaa in sub jae or lods inc outsb sbb lods dec adc pop fmuls push mov popa aas into mov and nop add or cmp pop mov mov cmp je lods push adc or mov clc pop clc call ficomp notb out mov mov dec adc xchg mov push mov add nop sub push push or dec and pop inc (bad) jbe sub movsb and mov fldcw fstl or push lret dec movsb fmul adc push (bad) cwtl idiv add (bad) xchg out loop or sbb push pop shrl lods or jge pop push cmp pop and mov sbb cmp inc inc xor mov out jg mov (bad) and scas jge mov mov push adc mov fnstenv loopne mov fld inc or or jmp inc stc movq mov dec adc scas in call push rcr sbb push not and out (bad) sahf fcoml dec push cmp repz (bad) pop outsb pop outsl cmovl flds add push sbb insl xchg cli adc or aas push mov push mov mov and push push adcl sub movl ds adc jecxz or cmp mov dec mov mov cltd pop stc or ret pop jbe lea xchg sub cmp lcall jbe dec inc mov add sub clc sbb add push and loope inc sbbb push je sbb mov icebp outsl sbb (bad) (bad) mov push adc jmp and sbb sarl pop ds xor mov or mov or mov (bad) jmp loopne add div test je movl into xchg rcr pop xor fcmovnu clc test xor pop sub cld arpl sbb push push ljmp ficom dec (bad) std jne mov xor shrb add and dec inc add scas je sub push popf adc dec or or or xchg insl ret cmp or or jae cwtl in loope fadd fldz mov or jp or outsb mov cmp cmp nop orl loop add mov or or cwtl mov xor xor dec xor test data16 inc fs mov inc inc mov push mov pop ret mov je push xchg insb movl lret dec inc xor sbb xchg dec adc cmp cltd in mov add rol pop and mov lods adc xchg mov pop sbb jbe pop insl dec xor push js mov and and bound add in ljmp add or sbb sub fst ja movsb out add xchg sbb rorl pop sbb sub jnp xchg or lcall push cmp add lsl pop inc inc rclb sbb xor push xor jo mov js cltd cmp add xor sbb or cmp add inc xchg push ret cmp push push inc dec xadd or (bad) ficom and cmp jge mov add xor add jg arpl or cmp jl add xchg jne jmp jbe popl mov sub (bad) int mov jns imul aam pop push push inc mov test popf cld mov outsb sbb loop pop mov shl mov jp mov dec and add sbb mov rol push loop test test fmuls xor stos add loope ljmp dec sub push cmp icebp sub mov in push push cmovle sqrtps or push push dec adc xchg or inc orl or cmpsl push xor dec push cmp cmpsb imul cmp jg test add add mov mov mov inc (bad) push inc fiaddl mov test mov inc xchg pop dec into cmp cli das rclb push je mov icebp je cmp jno mov push add je ss mov aam sub mov dec adc push lock mov inc mov sbb push and sub add fmuls xchg and stc mov shlb or inc or or adc xchg add fist jl sub or add cld cli jge out in jl out pop add sub cmp frstor sbb lock jl or cmp jne mov int cli mov pop mov fwait mov leave shrb jne mov aas jl or enter rol jmp sbb sub add mov xchg or sbb enter movsl shrl cmpsl flds mov imull lret push ljmp loopne inc mov int push ss pop inc xor push mov sub pop xchg sti dec push push push fsubl lahf jnp pop loope mov shrb ret adc adc shlb je sbb dec add ffree pop cltd pop mov mov or jmp arpl push pusha xor mov aaa or mov push (bad) or add push fiadd jnp or out aaa inc mov cmp jne fmuls in mov add ljmp es data16 sub out dec (bad) push push pop sarl rep mov and rep lock stc pop addl cmp or sub shr pop or (bad) jo xor or and mov cmp push cwtl pop adc lret cmp (bad) jo add cmp xchg stos inc inc das scas test lcall into lds adc lods mov mov pop mov adc ja sub mov das push pop inc (bad) mov (bad) jbe xor pop mov (bad) ret insl arpl cld flds or movsl sahf fstl movsb push mov (bad) pop jno repnz pop pop js adc fisubrl pop or jno sub pop sbb xor push (bad) rolb mov cs fisubl push hlt popf shrl cwtl test das mov sub jno aam (bad) arpl je inc mov push pop jnp lcall adc xchg lret pusha adc inc cmp add mov ds in mov push xor insl sbb cli xchg mov std pop ret pop push out loopne pop inc dec sti mov cld and dec inc roll xor cmp mov adc jp scas dec or fnop fiaddl ss pop cmp mov imul js or mov mov mov lahf sahf jb add (bad) fildl pusha add dec je jo pop (bad) dec test push lods outsl mov fld sti cmp xchg fdivs insb push ja jge jecxz jae or lds push add pushf es adc add push mov loopne or push and or mov aas (bad) mov adc insb jl fadds add rcl pop movsl out dec stos dec xchg int (bad) (bad) fs and aam sar clc in inc mov and shrl xchg rorb (bad) arpl inc enter shl push push pushf rcrl lea dec push jae call pop mov dec cmp std rorb rcrb ret pusha into rclb fsts xchg cli icebp das aaa adc sbbl mov pop repnz and cmp or insb jnp or mov (bad) push std dec insb adc clts lods sti aad pop mov push (bad) and mov lds sub or jb mov int cmp add pop enter call inc push sub sub mov mov cmovnp lds sub adc cmp push in lds adc dec jne call inc loope pop push adc dec add pusha stos inc sbb xor dec stc add and insb lea xchg jae ja jmp incb jb push xchg dec push sbb mov jg sub out in aaa mov adc cmp divb mov inc loope inc icebp mov push push xlat pop lods ret cwtl fdivrs fldenv ret (bad) jne push sub mov inc and cmp pop mov push push (bad) movsb push insb int xor or sbb push fsubrs lret mov out or add dec nop push psrlw add cmp or pushf add andl push jb and arpl jle add pop shrb ret jle or and cli pop pop loope pop jae es cmp ret push pop mov adc mov lock push xchg push ja mov sub push mov push aas (bad) dec enter lea inc scas push out inc (bad) lds jmp inc push and daa add sub (bad) xor outsl cmc jb dec sbb mov mov test cmp (bad) xchg mov neg or mov adc pop xor ret addb xor pop xchg sub xlat leave mov js mov mov sub cld test pop pop inc stc cmp sar ret inc sub inc inc pop or xchg xchg cmp out inc dec int3 mov or inc sarl dec inc mov mov data16 xor jne pop nop sub enter fldl rcrl mov mov test outsb test test push mov push sub pop pop cmp inc movsb nop aad add icebp insl loope test cmp (bad) std movsb lret mov sub pop out fldenv dec cmp jno mov sti ljmp dec nop mov (bad) pop lcall lods push cmp lods fnsave (bad) (bad) fisubrl dec mov loopne sub push jne loopne or pop jecxz add cmp adc pop icebp push cmp dec adc push in mov inc jb cmp pop shrb ret or jmp sahf lret rorl (bad) add fldcw jmp insl (bad) popl lea dec lock insb out mov push nop xchg jmp roll push insb xor add add sbb inc hlt dec inc add cmp jle add sub inc sub or daa negl or inc cmp dec cmp insl mov inc adc jne or in inc push xor pop push inc push cmp or hlt lret jb add sub fcmovnb mov jle cmp jle cmp jge xchg or mov jne aam inc sub push mov mov inc or lock mov dec sub push (bad) xor mov lds cmpsb (bad) scas xchg pop jno mov mov lds mov test movsl sbb dec add (bad) sarl mov fs movsl cs xchg sub sub inc pop or je je enter (bad) jae mov mov add je xchg inc (bad) adc and insl outsb jbe pop sub test fucomip int xor xchg insb mov mov pushf lea lcall scas scas clc dec stc sbb add sahf sbb push cmp mov push push fdivr fistpl (bad) mov mov (bad) enter push jo xchg or pop adc cwtl mov inc cmp push jne (bad) imul pop test mov (bad) les stos jo mov rol outsb data16 push imul pop push cltd fmull cmp mov push mov add xor cmp sub sub or adc daa pop jb xchg jne add lods xchg push adcl pop push pusha dec out lock add fmul mov xlat fs (bad) je dec nop gs cltd shld or sbb add rorb mov inc or data16 cmc mov shrb jg or sbb sahf adc shrb sub push push loopne mov (bad) mov inc sub lahf call push inc dec mov push cmp sbb and add sub cs jmp roll push push out or jle push sbb ficompl jo inc xor jae (bad) fisttp or inc cmpsb inc and ljmp dec sbbb adc and icebp push push aaa aad outsl stos adc aas dec sub icebp pop iret mov sbb cmp mov push push nop xor sub andb lcall sub adc lods push les xor xchg sub push out ja cmp xor and dec (bad) mov cmp cmp sub popa or ret dec pop cmpsb pop fisubrl push sbb loope ja inc jae mov sub sub (bad) mov sub fstl mov dec jne or aad jae adc jg js addl pxor dec xchg pop dec xchg aad loop lds jnp jne out or inc xor into jmp aaa rcrl and enter test mov add sbb xchg arpl sub movl pop shr shr sub pop (bad) mov aas lret xchg out (bad) pop test sub or jne cmp sar pop pop and mov push mov push or (bad) fadd rcrl das ss push inc pop call add stos jg sbb std and ret fildl push idivl jnp jnp mov dec repz daa popa inc les (bad) mov not jecxz push jmp add cmp negl imul int3 dec sub add int add sbb faddl hlt sub ret cmpsb pop ds test or (bad) jne cwtl jae adc jl xor mov xor jg xchg mov jne mov mov aad push test (bad) xor cmp mov cli dec lret push in imul lock (bad) mov mov jmp xchg and pushf mov or pusha push ljmp (bad) in add mov inc in lret mov rolb bound dec sbb mov push lock (bad) jo loope xchg inc push sub pusha addr16 sbb pop adc push jae mov mov adc pushf xchg xchg lret or mov mov movsl mov pop insl mov xchg pop mov cmc jg ror out fdivr loopne cmp je insl mov dec push sbb jmp add mov push pop out (bad) in push movl push add mov inc test pop jp add ret push cmp adc cmpsl push sub dec xchg mov inc (bad) mov (bad) fisubl mov adc adc scas dec or mov add addr16 push mov xor mov shll cmp (bad) xor xor mov or dec and addr16 and movl js add inc jae vpackssdw add sub popa shrb push xor add jae loop mov jae divb daa dec out push in or or or sarl lds mov jo scas push rcl mov inc int3 clc adc fsubr lods jae lret mov mov outsb cmp jnp cmp int add xor adc pop sarb clc or rorb jae sahf bound mov jb (bad) lret xchg sti ja or scas and add push adc lret (bad) negl cltd pop in and mov adc or push add inc insb inc js jne ret mov adc mov ja lcall ja cmp (bad) loope jne lcall cmp mov pusha add inc lea or push shrl sbb mov push add push inc or push sbb insb and or jl in push xchg sub mov jp push or pop pushf push movb dec and add mov mov xor dec lock push or iret mov dec pop push jo pop xor inc jno ret sub inc nop shrl inc nop call das pushf sub push adc dec inc jne pop es pop jns arpl jl adc inc fsubrs add mov arpl jae iret mov into stos mov push push pop mov mov mov add ret faddl fwait or es iret inc ror inc imulb push cmp out jecxz (bad) std leave outsl sbb pop lret repnz dec sbb push dec inc mov ljmp dec leave xor add incl mov aaa imul inc sti (bad) or sbb dec inc inc dec dec popa or or inc inc sbb out adc and cmp shll mov mov xchg rcr enter fnstcw (bad) popa inc inc das mov dec fstpt inc fmulp int icebp mov sbb push push push push adc in int cmpl ret lods leave inc inc add scas lcall mov push mov popa rcll dec pusha frstor (bad) shll push xchg ror iret dec push aam sbb std xor cmc push xor cmpsl ja inc xor shlb xlat clc fldt inc push imul mov inc and xor jb aaa dec movl add scas sbb mov lcall pop pop sbb lret mov shll cmp dec or in add in nop mov push daa pop mov push xchg dec inc or movsb push sub nop adc (bad) jecxz lock aas int3 pusha jge cwtl lock xor jl push lcall aaa mov pop xor cs mov inc shrl inc outsb out push push data16 and adc mov das aaa lds insl and (bad) mov ds or pop inc sbb pop pushf mov push inc dec push mov or mov mov lea add sbb add test lods jge mov mov cmc push mov add sahf scas pop rclb sbb mov push clc xor push push inc sub push and sbb adc and rorb sub in aas xchg inc cmp movsb into out add cld lret pop ret imul cmp cld fisubr jb mov jl (bad) imul shr aad fcmovb loop aam ja adc icebp aaa or add in xchg stc repnz in inc push cmc div nop inc push cmp stc cli inc push cmp sti cld std dec insl out (bad) incl dec fs dec xchg mov mov adc hlt dec mov add jge cmp div fdivrs xchg or nop mov and or das cltd add sub push andb adc xchg mov cld rolb test mov add nop ret out outsl mov je sub movl fwait jmp (bad) add mov data16 push xor and in dec repnz fsubrl dec push mov and (bad) addl rolb (bad) push mov adc testl jae mov fs (bad) dec ljmp ret incl inc bnd inc out sbb sbb push or sti mov mov or mov mov push mov dec adc inc cld in lods shrl mov sub pop shr sti insl (bad) outsb push xrelease pop pop popf nop inc jmp popa ret shll add inc adc jl inc rorl testb lock mov pop jecxz adc or mov mov mov je push shll push xor pop stc fsubrp inc mov rclb pusha insl in mov sahf mov fisttp mov pop stos push mov mov in or clc shl xchg mov xor cmp mov mov push xchg cmp sbb dec iret jmp popf fs xchg jecxz mov xchg mov rorb add cmp jge test and sub movl xchg or ljmp stc std pop add sbb jne cmp pushf jnp divl lods cmp mov push or in (bad) aaa add stc jbe stos test faddl dec std mov cmp ja jmp lea (bad) aaa lock lea cmp ja sahf je ret push mov xor pop cs mov aas sti nop iret or lea jle loope loop sti cmp enter mov mov push mov cmpb enter xchg or lahf repz sbb sub rol aas mov ret bound dec (bad) bound jecxz xchg jbe or or inc mov inc mov mov (bad) sahf cs jecxz push ret (bad) sahf push loop or shl into loope mov and inc push jge rolb pop mov lea push or mov pop xor je ror mov or sbb cmp or mov dec rcr push fsubrs xorb sbb leave mov dec add xlat fisubrl arpl cmpw xor sbb fsts inc mov mov test push add push push add ret sbb sarl testb cmp add inc dec ja adc xchg inc push mov pop or subl add push test inc fldt mov cltd jns fcom sti cmp jl push sbb scas jl dec adc bound push jae xor loopne mov mov xchg jle adc mov xchg adc mov pop in fadd mov mov cld sub mov add div add mov push arpl das cli cmp jb mov or mov (bad) xchg cmp rolb insb mull aaa dec scas add add in pop loop lcall add insb insb data16 sub lods das dec cmpsl jbe div mov and loope scas pop pop sub cwtl add scas sub aam mov das add test cmp nop insl sub xchg or mov popf mov fisub and mov add cmp jb jne mov ret add ja inc adc imul adc jb jmp mov shl mov and mov jmp cwtl push seto mov pop addr16 xchg loop add arpl sub adc push mov pop ret add bound mov popa sbb (bad) cld sub fimull mov adc mov add inc cld imul adc mov popa mov (bad) les or ja insl inc cmp inc cmp jle fidivr inc mov jl pop cmp jg inc outsl mov inc mov into jl stc sub adc movd or orl movb xchg and fidivl add mov (bad) sbb mov adc xchg sub push aas stos xchg xor push imul lcall and test pop xor jmp imulb adc adc add out add (bad) mov popf add pop mov fwait inc add xor and cld dec xorl repz decb jne cmp (bad) fsubr sub out fsubrs call (bad) mov mov or fstl pop pop pop pop test test xor jmp orb add and push lea push sub push mov cs data16 add shr (bad) dec arpl jne dec aam jp bound sub in in jmp js rorl leave je pop push dec or imul fwait and sub pusha jp sbb cmc or mov mov jne pop pop lea inc sub (bad) or xchg js cltd or add adc dec bound sbb and mov dec mov jmp or jbe jne dec loopne add or out xlat inc adc (bad) jne dec dec (bad) cmp pop mov add js lds cs or inc or insl adcl push pop mov lahf adc mov lea in shrb jl dec jmp (bad) out mov outsb cmp jge add mov push pop cmp add frstor aad pop xorl shll pop or loop mov cmp sub or pextrw add sbb outsl es fidivrl pop pop fcompl inc sub loope mov sub je or ljmp fs in jle dec or or xor mov (bad) loop mov mov xchg xor adc ds pusha pop jle aad popa movaps adcb sbb add adc adcb cmpsb nop and hlt mov cmp in inc xchg add in das mov mov pusha xor pop pop sbb jp je and xchg xchg stos mov test daa popf xor pop sbb popf mov (bad) mov sub xchg lahf xor inc pop push jmp arpl add outsb js xor cmp sub jl stc jmp imul mov or jmp in cmp xchg add lods inc test frstor mov (bad) push jle push pop jge xchg dec andl inc mov imul js pop adc mov or adc xor icebp or inc mov push xchg mov fs into or outsl and dec mov pop add mov mov out cli mov mov test sbb sub jo jle ret add add pop in cmc repnz cmc add cmc xor mov push add xor add xchg or xchg add mov xchg mov adc neg add adc jp push xorb fucomi ja mov sarl xchg add jecxz sub or dec aaa dec loop mov cli jmp mov sbbl pop add sbb test test or adc or or es sarl loope dec cmp and sbbb cli pop leave je leave enter (bad) shl das nop push push je and or add inc lret test out cwtl cmp sub inc pop arpl xchg add fnstenv adc lcall testb popf push loop lea mov int jno fsubl jo inc popf add cwtl sub popf push test loopne inc aam adcl pop mov pop dec notl cmpsb cwtl lret or mov mov dec lret jo lods sub js fsubs jo imul adc fstps ljmp xor fidivr lret mov sbbl jmp push or dec cmp pop mov fistp iret shr jno mov jno jne lock mov jp cmpsl or mov popa push fidivl sbb addr16 xchg lds les rolb iret inc scas stc pop push xchg out sbb mov mov loopne outsb add xchg push lock fildl scas jmp lret ja mov nop push xor mov lea inc add inc (bad) out pusha cmpsl or pop lods inc lods test cmp xchg (bad) mov lods inc inc shrb (bad) mov xchg xchg jle mov dec jne push sbb jns sbbb (bad) mov (bad) pop pop jge mov imul inc sub inc xor out add xlat pop add add setbe mov into (bad) fildll ss movb icebp and and pop decb (bad) shr shl dec in lock pop pop ret add push rolb xchg rcrl push pop mov add mov subl inc roll je xor sar dec push fildll xor or dec pop sbb add outsb shrb cmpsl xor adc aas js sbb sbb xchg fldenv stos arpl je sub add mov inc not push mov adc not push inc mov mov imul push and push dec int3 pop lea in (bad) imulb mov mov dec jle lock add pop ret (bad) adc sbb adc fsubrs dec push push and and mov add scas lock dec cltd data16 or dec mov jmp mov push inc inc push and dec add and adc dec xor cmp data16 mov add orl inc popa or jle test sub pop or sub adc mov push subb or mov inc and sbb mov mov mov mov add or test mov xchg insl xchg add xor inc mov mov cltd push and cmp shrd outsl lahf test sbb sbb dec mov cmp push inc sub icebp imul add test (bad) aaa mov or fdivrs in sub jl dec mov push rolb mov out jmp fsubs (bad) jae std dec test rcrb aaa adc lds mov or out repnz test mov sub push mov jo adc and jae pop icebp jle shrl ds rorb scas fcomps pop mov pop lods test je mov js fucom shld add lods lea push mov and sbb cmp dec ss test scas and inc and mov add (bad) jge cmp jmp jb fisttpl je jl je cmp add fsts inc loope adc jb,pt cs flds pop mov enter add mov nop test or and jg jae (bad) pop jnp push iret jmp sbb jnp pop lods dec pop (bad) jb cltd jmp aaa inc inc lcall scas lahf addl aaa sbb and xor push inc rcll cmp dec je push mov mov notb shrl inc int mov lcall mov cmp pop sbb adc cmpsl aaa cmpsb add sti (bad) adc sbb mov mov adc ja (bad) fistpll pop jne pop fcomps xor fist add push fmuls in mov push adc ljmp (bad) ffreep add andl movl cs jmp push mov push xor imull push inc sub sbb pop das mov mov xchg adc inc dec int3 mov fildl orl push push mov mov dec push dec das push mov dec ja add mov push sti fistp pusha cmp cmp mov push ret dec fs mov in lahf xor int pop and cmp pop or fstps and add and sbb aaa dec outsl loop in (bad) incl add aam addr16 mov xlat xchg fadds push ds adc loopne inc add stos xchg js lock push aam jno push (bad) and push imul push lock or scas push or call cmp and push dec adc cmpsb push lret mov cmp push sub inc sub jbe enter (bad) lret pop dec cmpsb fisttpl push cmpl pop or cmp sarl mov cmp nop add aad stos mov or mov pop (bad) lods mov mov imul imul test cmp cmp neg mov push lea dec mov jne cmp ss sub mov pop js mov add mov add rorl inc je shlb repz jmp rcr std (bad) mov sub dec sub xchg jne fcomi hlt cmp mov jbe add pushf sub mov sbb lea sub js push in push (bad) test repnz lods or xor mov add and jns mov mov sub aaa neg xor adc fildl dec sbb dec in sbb loopne jle jne fstpl mov iret mov je adc aad sbb sbb mov xor jb (bad) adc sbb ja inc cmp jb sbb xchg or cltd dec push mov cli iret xor xchg sub into inc mov pop fwait push aam test add (bad) cltd add lea sahf pop mov push add jmp outsb andl inc daa add cmp fisttpll movntps scas mov inc sbb push jno add pop mov add inc add push popa push dec xor cmp aam inc add (bad) lea nop out sub out std loop xlat (bad) mov (bad) jle add mov out scas mov lds pop sub adc mov cmp and outsl add imul out xor push add jb fcmovnb lea xchg inc dec mov je sbb sub add je mov lret push xchg xor insl and and (bad) mov dec adc sub sarl pop clc sub mov je jmp cmpsb loope mov adc cmc test loope sbb rorl ss fsubr notb fldl movb stos jne fiadd mov cmp jae dec mov rolb pusha xor jmp jbe and lods add push shl mov ret mov inc xor and orl enter aad lcall mov push test jno test pop sub mov lea loope sub test (bad) ret in lods je clc shr pop jne cmp fimull fdivr mov dec and (bad) je mov pusha aas repnz sub sub cmp sub sbb std rcll dec fbstp jmp ret sub pop and inc push inc mov dec lds and arpl jo sbb js pop leave push mov mov add jb outsl loop and inc sub rolb sub ret push call push or pusha or or xor or cmpsb sbb (bad) (bad) clc xor mov push push iret les fdivs add push xor rolb roll cmp mov and and sbb test mov xorb fisttpll jne (bad) test push push dec jne daa jmp popf cmp lea sbb push hlt pop aad lock add dec sub inc sbb hlt push jo xchg (bad) sti jne mov repz mov adc and jge push pop push sub dec into add sub and scas or fimul sbb mov push xlat movl fist movl ret mov sahf mov xor in inc ss push test in mov jbe ret mov fistl popa call jmp in je adc mov sub add mov es testl (bad) dec cmp in inc (bad) inc ja mov xchg dec aam xchg pop mov cmp xchg lds dec sub std mov mov push inc xor (bad) notb pusha sti pop add mov inc aaa mov add scas push inc push jnp cmc xchg push inc xor mov push adc lret xor cmp mov mov jl movsl loopne sbb cmp push pop or dec mov mov push inc (bad) cs mov jno dec jns push inc sbb cmc or jae sub dec rcrl movsb push js or sub inc push pusha mov push push and sbb dec fisttp adcb pushf enter cmpl jb mov out and sbbb pusha sbb lea je incl dec add ljmp sti test jne add dec jnp add pop add add cmp call movl xor mov xchg pop movsl mov mov movsl popf xor xor inc xchg iret lcall jmp jp arpl ret jg fimull ficomp or jmp push mov sub xor pop jns jae mov (bad) mov jmp cmc push jb mov out cmp jbe sub mov mov fnop pop inc inc dec jne je jbe cmovns imul jmp push mov adc fstps aaa xor pop mov out add nopl jp loop jb andl jb push adc xchg enter mov adc stos orl es jmp add inc or adc lock lods mov fstpt jae or push mov mov sbb add push mov inc or add ficompl rorl mov dec adc and popa das add (bad) pop fcmovnu ret add jb sub pop mov enter push add inc pop inc mov pop adc sub add loope push (bad) dec push pusha imul pop jecxz adc jbe cmp loop pusha ja movsb xchg cmp cmp insb fnsave out out (bad) pop pop mov add std pop divl jne pusha cli scas jle push add sub and mov lret ficom xor or loopne scas js pusha enter inc aas jne sarl fcoms add sub push add mov mov mov add add pop mov sbb xchg int3 lea and add cmpsb andl jnp xlat sbb sbb dec idivl add dec (bad) jo pop mov imul in lcall hlt clc clc daa fsubrs lea add insb mov hlt int3 add in fsubrs xor adc leave xchg mov sbb adc adc sub mov or cmp test insl clc in ja jmp jmp inc xchg stc sub dec xlat std sub or xchg adc out cmp mov pop lea stos or sub and mov xor (bad) imul imul and lock sbb xor push cld mov pop sbb dec (bad) xor adc or or test fwait and insb mov add jmp sub add test and mov int3 add (bad) imulb push pop inc movsl insl mov pop mov movsb gs add inc test test xchg jb mov adc popl jmp sarb faddl adc jae mov push rep pop or ljmp out ret int3 mov fmulp push pushl insl sbb in bound fisubrl (bad) in outsb jmp lea cmp js sbb das add cmc pop jae mov fildll mov jb push adc and dec push call push push inc or pop loop (bad) mov and pop mov mov add adc dec sub adcb adc mov push es pop in rolb add out aaa push sbb push push inc mov push enter cmc dec neg es adc test xchg arpl out mov lods inc mov sub ret out iret push pop pop push cmp outsl dec das lock dec ret adc cmc movl push pop ret rcrb sub loope es ds sbb ds sahf inc sub repnz ljmp or xchg loop add or out enter dec push mov and movl pop test psrlq mov inc push inc sbb jae mov aad adc sbb and cmpl push xchg rolb rcl pop jp lret cli enter or adc movsl mov cs and sub arpl add decl (bad) pop fisttpl push cmp adc movsb cmp test jne daa push aam mov cmp mov pop or xor setne inc jo jne subl fistl or sbb mov xchg adcb dec lahf dec rorl inc fdivr jmp cmp jae mov cmpl add xor push pop sbb scas sub pop adc ret (bad) inc inc dec pop loope dec fidivl pop movups sbb fstp cmpb in testl adc mov mov flds imul or (bad) sub xbegin adc movsl ljmp add adc mov push cld std add adc mov pushl push clc push mov dec cld push (bad) jo das cld les sbb subl mov push sahf inc clc jmp add clc test xor or cmpsb dec popa loop rcrb cmp adc cmp (bad) and in loope push mov fldenv jne xchg out outsl or and mov je sub out fistp sbbb out xchg out xlat or push js dec (bad) xor jo pusha pop push dec fiadd nop xor insb vshufi32x4 add add xor loopne (bad) mov xor xchg sub inc or xchg xor add nop inc and icebp (bad) je pusha pop in in add cld nop fdivs push or adc icebp fistp ret inc add add insb icebp fist lock jo (bad) jb test jg add loope dec rorl or or sbb rolb subl cmp mov or jp adc mov aaa pop inc adc insl stos fimull dec push mov cwtl dec mov aad or push cmp out fidivl cmp je push xor sbb sbb lahf call mov add jo dec pusha mov add and int add add add scas mov push or xchg pushf rcrb add flds leave add lea dec and push push xchg pop xchg out (bad) pop (bad) jb or fs inc or dec dec dec es out or or or add pop or (bad) loop or xchg adc or or mov mov push lcall packuswb cltd ret adc popf dec pusha fstpl xor dec sub int add and and adc imul out adc (bad) sbb ret add inc fmuls adc es out fs adc add push push push inc cmpsb mov pop pop (bad) xor or sbb inc mov sbb add add mov sbb jns popa int sbb xchg cmpsb jnp je sub sbb (bad) je or sbb sbb pusha push push inc clc punpcklwd pop xorl ret sub mov pop orb in add xor in mov xchg ljmp in jno cld jmp or repnz rol lea je mov dec aad in in and mov dec dec shl out pop adcl sub jge sub push inc pusha dec jmp add dec es jmp fsubs lret jae (bad) in in in dec inc mov in and or cltd ret jge out mov cmp lock es out fs and pmulhuw dec inc repnz std cmp mov repz std hlt xorl xor dec adc xor jg xorl push pop jae (bad) (bad) cmp adc and push clc dec adc xorl xchg or pushf ret sti mov ja cld je cld sub movsb jmp add std nop cmpsb imul je mov jmp inc test sub or push shrb jb or add ss neg test jecxz jecxz lea hlt xchg mov fdivr add mov test xchg sti out out leave add out outsb call adc sti sub gs dec mov jmp or nop jmp dec (bad) mov add enter js adc and out out out dec push xchg push pop daa lock cli or xchg cli mov sub jmp dec test push dec enter stc mov imull adc imul dec xor xchg stc out clc iret or (bad) adc and push sti dec mov cld add cmpl xchg adc adc xchg stos repz fild cmp mov loop cmp jecxz (bad) test divl mov out out popf dec pusha dec (bad) out test dec inc mull divl sti imul ljmp mulb scas sub mov pop pop inc pop xchg (bad) mov sub out out cmp dec enter and sub notb (bad) repnz push inc cmp and dec enter mov gs div or cmp and fmuls sub mov clc xor adc sbb jecxz stc xor mov or cmp imul push hlt lods mov and (bad) mov xchg xor hlt decb or pop jae xor (bad) cmc dec jge outsb or adc out jbe aaa ret loope loope loope loope adc fadds dec enter repz lds and in enter push jns repz dec push inc das mov sbb repnz repnz mov jmp push das mov jp repnz rclb sub mov sbb lods pop pusha jns bnd in (bad) add inc loope mov jns mov adc imul dec xchg push and icebp push icebp and pop inc (bad) sub add jp push gs add jp lock pop pop and outsb pop sahf pop fmuls stos pop pop or jne jp xchg jne push lock xor mov pusha or sub pop cmp test sbb xor (bad) scas jne sub add sub jae and mov in es inc pop inc pop push add int3 add add stos push cmc (bad) add mov das sub neg mov inc push push mov jne test xchg mov add sahf inc and fisttp jne scas dec sub mov inc inc aaa cmp mov push inc add cmpsl push add por add add sbb jl or addr16 shlb in clc jl mov cmpsl fadds or add pop (bad) dec push je xor into (bad) or mov incl fildl (bad) pop sub mov jae mov add clc (bad) inc push sbb enter add ja add std or je mov push (bad) xchg cld pop mov or jne iret and (bad) mov push arpl loop mov push mov cmp mov pop jne mov push push inc call fstpl mov pop cmpl or or xchg shrl ret push push add lea addb dec decl call rcrb sbb inc lahf add divb push fidiv icebp clc cltd pop imul mov xor lret sbb inc ds sbb adc stos xlat add mov test or out jg add jmp dec hlt and addb test push fadds mov add or cmp jge mov leave sub fildl rcll (bad) push pushf adc outsl adc sub es jl loopne (bad) sbb pop popl dec daa mov and frstor add add and jle mov adc jae test pop push add test lret mov or je jno and sub jge sbb mov jle or jle jmp xchg in xchg dec aam push hlt cmp push xor mov das or add mov outsb sbb adc adc xor mov mov sub and adc jmp jbe push lea lods mov or sbb pop (bad) or and testl ljmp pop icebp mov add dec sbb rclb jecxz ja stos aam xor mov mov (bad) lock cmp std jno aaa push sub add xor dec outsb and inc inc adc fldl (bad) adc ja pop add fcoms or dec cmp push push out adcb sbb or push scas test xlat push fnop test dec push sti and jne adcl daa cltd adc sahf and adc jmp adc call in sbb cld mov and js adc or xchg xchg pop inc cmp mov call (bad) stos fsubrp add or std adc xchg test or fwait out aaa jg or adc test jmp daa int3 push jle fs sub push or int3 orb add pop add and lods gs std add outsl push add add and (bad) jg add jg jg outsl inc mov outsb push jbe jle sbb jg mov ja jg lea out mov mov xor or sbb orb adc ret cltd mov in sub lret clts adc xor cli ss mov mov push icebp or jne or pop jg mov adc icebp push add rol push push sbb or add test dec outsl adc pop inc shrl roll fsubrs adc fstps outsb (bad) lret rep sub push inc fdivs mov xor in jmp cs pop or adc lds sub and std pop popa jmp ss and out jge loop andl jle imul mov add fistp mov ja out add lea jl push inc inc repnz (bad) inc push inc inc inc out inc sbb pop movl test and push hlt adc sub fstpl and (bad) rol or adc dec inc cmp push sub mov jmp lods add lock jo js mov push inc xor pop outsb add (bad) test jb xchg sub push je add rcr or and fbstp ret cmp lock ffreep cmp inc adc jl sbb push push pushf cmc cld adc sbb inc mov inc sub sub fdivs out adc mov xchg adc test mov cmp cmp mov int3 jbe pop push sbb rcrb jne push mov shll es (bad) add push in mov (bad) repz adc mov add dec jbe add pop loopne cltd xor pop test push jbe test cmp fs mov sbb lock add xchg push sbb (bad) outsb leave sub or pop jmp mov pop or sbb pop xchg cmpb enter inc mov ret mov inc js cs mov sbb ja sbb movups out adc add pop add je sbb or add mov pushl push pop mov pop add add mov cmp xor xor ljmp aaa dec push sub stos je cmp add subb sbb (bad) xor push add mov lds push jmp add imul dec subl xorl pop scas push popa or and push mov or xor inc push daa fs dec pop cmp leave adc dec jle adc out je ret cmp xor cmp adc push add mov inc adc insb and testb push mov aas fildll stos out mov pop or sbb inc cmp sahf sbb jne (bad) mov or and je and cld mov cli xor jmp push cmpsb or adc cmp adc sbb and inc mov sub cmpl or and push inc or out shll mov jmp push shll and jge mov pop cmp pop lods xlat adc pslld sbb sbb insb adc mov push push mov cs mov les nop add popa adc push jmp addr16 push push int3 cld out incb adc cmp push sub test mov sarb add (bad) cld leave andb mov mov xor lds inc add and sub incb int3 adc mov push or mov fild ljmp mov aad cmp cmp adc xor stos pop (bad) cld sub mov (bad) enter xchg mov pusha cmp je push lcall inc mov js or les xor xor xor adc adc sbb adc push rorl add inc int push sub int mov in int3 push mov mov mov add pop adc roll jb pop loope add add or xor rorl jmp ret lods add cmp cmp xchg loope aas cmp pop das inc sbb jbe lods fimull adc movb sbb lret add pushf (bad) or inc cmpsl or cs fwait in bound mov adc (bad) pop add adc xor ret and repnz mov inc xor push push aad mov mov hlt push mov pusha das mov divl push cmp push (bad) push push inc or adc ret pop std jnp cmp cld cmp sbb aam mov pusha pop or es add inc or xchg bound pop or and cmp mov cmp jb movsb ljmp jbe and cmp je push int3 aas mov (bad) jmp adc ficompl and xor or dec sub or imul push mov leave sbb ret or and inc pop jl cmp and add mov push mov insb in repz sbb add or cmpl pop push ret pop and add mov adc add lea sub push outsl je pop loopne loopne es xor push adc inc cld incl lea mov dec push loop pop cmp push aas push mov push add (bad) jae xor jo call jmp sarb jl fstpt push add xor mov je mov or inc pop stos push push jp test add imul jb das add je lea sbb mov fcoml push push rcl inc inc jbe mov jl jg adc mov push sti adc je xchg xchg push aad sbb jmp test imul (bad) cmpl inc push imul push add scas pop pop add ljmp mov outsb jbe cmp enter adc adc and in fnstcw cmovnp out cmp add push lret mov scas push and xchg outsl dec add out pop mov adc sti ja inc das pop mov push add push xor mov mov jmp mov add cmp je dec jne cmp push cmp rolb outsb dec jmp pop out push sbb iret and lahf inc adc xor adc or pusha pop call push pop cmc loopne xchg sahf add push pop iret cmp std jne out push sbb jno push mov jo or subb stos lahf add push jmp push mov push xchg out jg mov or (bad) jae add push gs jae add xchg sbb or xor out test sub xchg cmp rcrb dec pop inc pushf and xor pop pop loopne adc jns (bad) mov mov jno lock add lahf or (bad) (bad) (bad) jle adc lock ret fstpl inc sbb cmp test pop outsb imul push pop add int inc jmp rol (bad) std sub es sub ret or mov dec rcrb mov hlt sahf and adc mov push icebp imul add and popf mov add add jle stos add pop jo sub mov mov inc cmovb test adc cli das mov mov inc dec adc push lea and (bad) mov jae mov push lea outsl and mov imull cwtl mov std jg ss mov movb pop mov mov aaa mov cmp ja out xchg or sbb push out mov inc (bad) mov lods (bad) fmuls add ss push jo into sub push pop adc cmp push xor fs pop inc and insl rcrb and stos (bad) test movzwl ljmp adc add mov adc je and mov daa jmp movb shr xchg jg inc enter mov lea fistp lea cmp ja dec push pop rorl addr16 cli adc and and stos (bad) mov repnz inc cmp pop jg mov lea xor pop xor add add into clc mov outsl cld jo sbb pop mov jl inc andb mov pop and js lea push (bad) push stos enter and inc push bound and mov mov or inc nop mov mov push cmpsb push sbbl insb mov add add push pop or pop or push jo jmp mov pop adc adc rorl sbb mov or pop sbb les sahf and sbb ret sbb dec and mov add fisttp test fisttpll push mov push or mov mov in scas rol xor or and cmp or mov test mov lret xor dec dec call adcl (bad) mov adc (bad) pop mov jnp jae jbe mov out push iret dec pop fstpt (bad) mov test or dec inc incl leave mov xor inc imul dec mov mov xchg jmp mov ret inc push fldt xor sub xor fidivrl lods sbb inc cmp jbe ss ret incl cmpb (bad) mov loopne test scas add cli loope divl mov xchg movl push mov or mov roll sbb mov inc inc inc dec push mov and or rcrb ret add negb out mov pushl inc push mov jg or inc dec jne mov push push pop xor push outsb pop push sbb jnp mov xlat enter sub xchg outsb pop pop cld notb test nop sub lret test pop test (bad) mov aam sub inc in pop addr16 stos js ret push jl add add pop pusha inc add fidivr mov je add mov jbe (bad) cmp push scas cld pop push push and push (bad) cli mov mov mov pop call repz lods test testb push cmp jns inc push rcr mov addb mov adc clc add xchg arpl add inc jo inc jmp sbb idivb mov mov jmp cmp aaa inc lcall adc mov mov adc jmp mov sub mov push mov sub aad mov dec in aaa sub std adc mov sub shl inc movsl lds xchg loopne enter aas pop jg fnstcw or sub or cmp adc inc lahf (bad) subl fisttpll pop (bad) mov pop mov xor les mov adc pop rorb push sub adc or (bad) and mov cmc push pop sbb les sub addr16 iret pushl jae imull push arpl cmpl lods xchg pop jle test outsl mov sahf inc add insl dec inc and (bad) jne ja aas pusha ret push push call xor repnz or mov mov inc rorb insl mov add jg push loop add adc fdivrs loope dec adc insl jg push mov and inc lods push and sbb lods imul push rclb cld call or pop sub stc lds inc or ds cmp and xor sbb jo inc add aam mov add movsb clc test pop ds xlat pop adc xor dec jo and sbb shlb (bad) mov mov sbb lea dec mov js call push inc xor and outsl cmp mov inc mov adc mov aaa enter jle inc adc dec and sbb lret jne pop mov xlat pop stos insl cmp das add or stos dec xchg mov push popa inc and test or insl mov and mov call inc mov inc lret add xor ja subb jle push out cs mov pop jb lea mov jne jne ja pop dec fmull xor int3 jge shlb ret ret or and mov (bad) shlb insb hlt push cmp add adc push imul cmp arpl lea inc fistpl roll stos adc testw inc or je dec sbb and jbe dec or mov fsts sbb cmp daa subl hlt mov notl add push mov inc rorb or push arpl xchg ret mov add insl shrl push out (bad) das cli fistl pop dec pop cmp bound jmp mov xchg aaa sbb pushf dec xor cmp js aam fmul (bad) in or adc stc nop add sub mov xorl sbb cli (bad) or pop insb push push fistpll outsl sbb inc not jle pop loopne cmp rclb loope movl push out jg mov inc sub lcall and hlt jno aam lcall bound in mov pop add scas lock and nop sub sub notb das mov je dec es mov inc sbb (bad) (bad) fistpl (bad) inc mov jge jp push lds ror sub mov gs push icebp ror pop test xor aad (bad) (bad) aas add xor stc sub in imul pop adc jns and stos mov add pop cmp call shrl pusha or pop cmp adc pusha enter fidivrl add popf mov enter and imul ss inc adc jne je xadd push shr mov (bad) insb sbb or test cwtl adc fadds sbb aad int mov sbb xor xor jno push inc imul and push pop pop out push test dec ljmp das mov dec std add cmp cmp sub ret rorb jbe pop lods push adc add sbb mov jle rorl sub pop stos sbb inc adc sub adc ret mov jbe pop jle cs cmp and dec negl (bad) cmp jne adc add adc loope pop fistp jne mov push ret scas sti orl push pop xlat (bad) outsb add dec xor pop add mov pop into adc fimull push mov test push decl pop fimul dec or frstor jecxz sbb push and mov fmuls subb pop mov scas in dec ror dec js sti and or add cmp and push mov adc lahf or cs and xchg and dec jne and mov fdivrl jb add xorl jbe mov mov inc pop mov aaa lret (bad) jo jno xor mov or fimull aas sti sbb adc add scas add mov shr mov loope add sbb leave aad add mov add add pop lock add mov push push inc unpcklps in insl mov lahf jge mov pop jbe or out cmp (bad) stos mov aam inc aas fs sub push das inc loop xchg mov mov xchg scas sti inc sub pusha daa push stos inc sub and pop pushl push add ja cmp dec sti mov js orl mov push movsl pop (bad) inc and adc push pushl mov fimull push mov test lahf jp adc jbe jne push mov or popa add mov inc cmpb pop mov push pop or push cmp push or imul ljmp and inc mov stc add sbb (bad) pusha push or xchg cmp jne (bad) jne xor adc ficom pusha testb inc in daa mov test cmc (bad) jg mov add xlat jge imul mov andl scas xor inc sbb nop cmp jl add jbe roll cmp fwait daa fs or mov nop ror aas arpl orl add test cmp ret jb jle jl sub sysret mov pop and (bad) mov nop clc mov clc mov mov test stc cmp adc mov mov xor mov push mov cmp ja je jo,pn inc mov les add notl xchg test and shrl jp mov pop inc xor fs cmp loopne xor out mov iret fcomp jno mov jmp (bad) pop mov push cmp add push popl iret cmp adc dec bswap inc push jmp test mov xor das hlt mov sub je push push push sbb mov (bad) (bad) and cmp jne decl out or mov xor add ret and stos ficom dec insb mov loope cmc or add repnz push addb xor sbb and ja jmp incl sub push xchg lock mov dec ret push inc dec adc sahf mov cltd or push mov mov xor sti and push mov lahf add inc incl js add add sti ret mov cmp push xchg repz jmp sbb sbb lahf mov cwtl sti add movsl push inc inc and lods es test push push jbe cmp inc orl (bad) xor mov jl pop inc ror jne lret std push xchg outsb insb je mov inc outsb sub or je fcmove mov in sub fdivrl jmp sbb inc daa and mov adc leave sub mov out add pop sbb arpl clc int mov mov mov shll xor xchg rorl call jge and dec cmp int3 aas jae loopne outsb inc jl pushl mov add pavgw jo repz int sarl push push xchg icebp test mov mov inc cwtl sub and sub ja loopne cmp push (bad) fcomi aaa scas and lock sub adc and ja int mov sub and lar rcrl insl int3 fdivrp int add or jne push mov pop and sub push sar inc push and sarb sub adc outsl push (bad) push cmp sub js lret and adc pushf or add inc shrb (bad) and jmp xchg add jne inc inc stos push jge fsubrs sbb test jge inc int negb jne add js imul add in hlt dec xor and inc movsb and sub sbb push push adc mov das inc and sbb or cs fldl push (bad) fadds aad das jmp jmp sub je sub add pop mov pushf add push cmp outsl jae push xor mov sub int3 js les (bad) into pop fcmovbe insl cld mov lea adc push cmc arpl jl mov or inc sub pop (bad) lea inc loopne fs mov addl sub pop or xchg pminub xchg adc ffreep jb jmp dec jg (bad) aas jl jmp or add stos jle pop mov cmpsl push add je mov pusha mov test or sub fmull jne ljmp add out add push mov add mov mov in scas mov jbe bound jp subl stos fdivs into repz xor stos (bad) stc fdivrs andb (bad) dec subl mov add ret add cmc push push fcmovnb push push imul stos daa xor ds push jg inc jmp movb xchg push mov xchg pop daa movl fistp incl lock dec cmpsl adc lea cltd push xchg insl lock push mov or sbb mov leave imull push mov leave aad mov (bad) push aad les idivl mov push xchg sbb pop mov cmpl add push scas or out add mov loope ds sub mov aaa xor dec mov repz push adc adc mov mov inc or mov or push add dec out mov outsb lock cltd or shrb mov mov clc jge mov xor lock cld and pop fadd inc sub js std push xlat fnstsw test lock jnp (bad) pop pusha pop pop pop mov cli call pushf cmp cwtl add fmuls mov add xor js jecxz add cmp ret add and addr16 test rolb inc in dec out pop loopne gs or adc jle add or fcoml and pop add xor pop out add xor pop push mov pusha jmp dec or add mov lods hlt mov (bad) jmp push sbb push pop jno jne pop inc adc or popa mov ror sub push aaa nop call push outsb xor dec push jmp shrb sahf sub xor xor sub rcrl fistpl icebp inc or into add pop pop int3 sahf mov xor push or movl add mov push sub add (bad) jae inc jl add xchg inc mov sub adc jo lods or add dec mov xor inc adc add test outsb sub scas and aam test rclb xor (bad) or das cmp dec mov jns js test cld shr iret imul add sub push stos adc test inc lods loop aam inc or ja (bad) sub ret sub lcall jne sar dec cmp fidivr pop insl sbbl push inc wbinvd (bad) mov jae mov jmp dec add shll pop mov andb jmp jae negb mov mov inc test les pop or add pop or adc or jne add xor clc mov cmp sar sbb fdivp insb pop stos cltd fiadd xor rcrl adc je addl mov and and jg loopne out and add data16 push dec loopne mov sbb insb mov inc scas dec dec dec or inc inc and push jmp or or xor insl out or mov and js mov add pusha mov mov dec paddd inc mov jae cmpb adc andb xor je sbb pop inc cmpsl or jmp pop rorb adc arpl (bad) push jmp test mov lret add repz clc loopne popf insb rcr fildll add adc sbb inc adc sub shl add insb mov xlat push mov xor cmp or mov sbb aas mov les push adc dec adc pop add adc or insl mov jo pop adc adc in in pusha jecxz mov adc dec adc adc (bad) hlt (bad) ja inc sub add or xlat inc mov aas and mov mov rcl push mov jne xor popa pop jae hlt jg push xchg lock shl cmp insb rolb not adc push jp push dec pop dec movsl sbb push lods fsubs es scas mov fiaddl sti movsl fldenv ret adc jbe push in mov fwait addl add add (bad) aad mov add rclb je mov (bad) sarb sub dec imul js (bad) std cltd pop mov inc mov (bad) pop pop rorb jne push sti sub mov stc push or adc cli dec lea xchg movsl test (bad) ja loop rcrl inc mov dec fildl pop call mov pop jae jge xchg movl movl addr16 jne add fiaddl lea push mov xchg or xchg (bad) fadds sbb inc inc mov ret (bad) enter test dec inc push js testb sbb not and pop daa and jp adc push push mov xlat sub and int shr mov xchg dec cmp movsb and fisttpl jle sub ret sub aam fstps sar ret mov jbe dec mov xor sahf pop inc adc fistpl arpl test data16 fcoml sbb sbb fisttp dec mov out mov mov jg jns sub add ss movsl add add add dec adc inc xor pop push in sti mov insl inc xchg pop aas or int dec dec or cmp jne inc pop adc in imul sbb inc iret mov imul sbb dec cmp xlat mov cmp ss jbe xor or mov sti adc mov mov cmp and data16 jge pop icebp xchg ss xor test (bad) mov sbb rcrb inc cld int3 rolb mov push sbb dec dec decb movsl pop xchg into out dec outsl ret jo dec dec push insb inc loopne add or ja ja jge sbb add test cwtl icebp mov xor dec mov dec add fildl cwtl xchg mov popa test adcl mov out loope push into setns cltd test jns dec mov test sbb scas push pop ret fidiv js mov add loope lcall pushf and jge movsl pop pop sbb mov orl or je lret push mov (bad) icebp ftst xor ss cmp adc (bad) cmc or test jae xchg jb push jne in jnp push pop and mov sub fnstenv jmp lods je xchg mov xor sbb lock ss arpl cwtl and inc mov or xor sub fisttpl add fistl jnp push mov cli sbb subl ret cs and iret jne movsb ss pop cmp inc push out aad movsb xlat jmp imul sarl pop push push pop xor or leave and or hlt fadds and test ret std dec ljmp mov decl aaa movl in and inc mov decb jne xchg in cltd jmp jmp cmp mov pop sub or adc jae aaa aaa clc adc mov or add imul jb pusha xchg pop xchg or fcoml frstor xor or sbb or sub or sahf or stos mov pop (bad) out or movb into rorb jne add (bad) or aam xchg mov (bad) jne cmp pop insb dec cmp add add cmp adc sub mov push pop std sub movsb std sub and xor hlt add mov in push loopne dec je mov xchg push clc lret in pop jo inc insb gs test cmp dec or push push cli push loopne add mov mov pop xor adc or or add nop fwait insl pop sbbb out jb adc mov add push and jae push lock sub bound xor xchg pop (bad) fisttp xor pop adc xchg fsubrl sahf push sti subl inc pop aaa sbb add mov movaps (bad) stos dec loopne add lret pop add sbb sti rclb fadds (bad) mov xor push insb and mov and pop mov adc lods popf clc sub sub je push popf shll cmpsb add sbb jge cmp clc pop testl adc cmpsb jmp sbb cmpsb sti pusha rcrl clc fildll rorl add mov ss fnstsw in cmp add or adc adc or sar wbinvd movsb call cmp jno mov test dec add repz jo daa jo dec push add add pop mov xor pop in dec mov sbb dec cmp jns addb jne testl dec je push add sbb ficom daa add jnp jne dec adc cmp inc add xor mov push push imul sub fiaddl or pop aam add xchg xor dec scas pushf sub sub not (bad) pop sbb or mov push jmp cmp insb and push in jmp mov and push add sbb dec subb int in rorb or enter pop (bad) adc inc fcmovbe mov xchg mov pushl or movl push inc rcrb (bad) or cmpw fisubrl add cmpl or add add push dec and add add dec je push cwtl or jbe push stos outsl jne int3 cmp jb or push pop ss jb ret sub (bad) jb addb outsl addb sbb sti sbb mov clc pop adc dec jno push or and add cmp dec cmp sbb add dec mov pop or out add mov mov mov ret and dec or rep shll ja or mov pop sub or mov sub pop sbb jmp sub dec into add sub fcmovnbe push stos mov and add add push jmp (bad) sti or jo and mov mov add push pop lcall sub ds push sbb mov (bad) jmp pushl mov lret dec orl dec subl test push je dec je mov xor mov scas mov push mov add sti jmp mov xor loopne xor mov add mov cmc cmp stos mov jge or or pushaw xor jge or fcompl sti add sbb add inc sbb mov pop movd pop dec jbe rol inc fs insl mov jl and or clc cmp add ret faddl mov sub sbb cmp jmp lock push and inc inc pop fidivl push movsl jmp sub sbb or mov or jne cwtl enter mov xchg push xchg or xor mov xchg or rol out enter xor and test insb pop xor push loopne add je repnz push popa add pop mov fsubs adc fmuls ds inc add or movsb scas or adc mov dec test pusha jmp fisttpll mov pop repnz cmpl adc bound sbb mov (bad) aam pushf jne repz push and or mov push push push push add jnp sub aam (bad) and cs xor outsb daa (bad) (bad) test xor jbe lea test mov push push or mov pop mov test inc add mov fs out jg popl inc pop in inc add adc xchg jo pop je mov dec xor and sub pop fcmovnb imul inc or and xor add (bad) adc pushl add sub mov rclb mov mov xor push call pop pop cmp test add sbb mov jp cmp push rclb push repnz mov mov add xor xchg push mov lds mov adc cmp jge cmp mov inc sbb mov inc rorl out test sub xor sbb and mov in adc add add bound popf bound mov inc and dec push mov inc or mov add push call cmp imul fidiv xchg jb push imul das inc out pop push mov popa outsb jmp mulb mov leave pushl cld mov addr16 mov dec push pop adc xor les jle je mov lcall xorb js popa jae lea xchg test js xlat inc or push xorl adc sbb pushl pop or sbb fs adc ss and fs inc push and sub inc push sbb xor cmp sbb dec inc or sbb inc pop dec push sbb push push pop sbb pop pusha fs inc push push push sbb (bad) xchg dec adc xor and leave and and xchg pop movsb test and or sub push xor cmp dec fcoms jecxz adc mov pop xor cs push aam push test adc pop enter sbb sbb sub rorb and stos or nop add movsl cmp loopne cmp xchg inc dec jne je mov mov pop xor inc mov sbb mov inc mov aaa jb lods pop add lock bts test addl xor jo outsb mov sbb jmp jae jge and andb adc add push outsb xchg adc ficom inc scas aas jge loopne pop fs aad int3 push jmp sub rorl roll xor jg jp inc rcrl adc and or aaa (bad) outsl out cmp out mov jne or sbb lcall adc add dec add (bad) mov clc mov icebp lea stc mov gs lea push lea sbb and xadd lock add push (bad) (bad) daa pop xchg xor lea mov push xchg mov push lret or inc push pop or dec int3 das test inc fneni(8087 add sub sbb sub pop mov mov mov jne addb adc xchg subl cmp push pop pop inc fwait jle cmp es ss add subl aaa cwtl stos pop pop fdivrl std or clc adc ret out dec ret inc push es movl dec ss rcrl adcb push push aaa xor rorl jg mov mov int3 mov push xor push enter push fisubrl test pop dec aam mov add and (bad) cmp sub add mov inc and pop mov push and push add (bad) loopne mov jo imul andl push sarb xchg stos push lsl fldenv clc rcrl or (bad) dec cmp pop cli or push in testb or push loope cli in (bad) mov push or pop and or add sbb stos or add sahf adc enter dec shrl pop cwtl xor adc aam add adc jb ja scas inc jne pop sub jmp js mov (bad) testb lods sub arpl add xor test mov imul mov mov add pop les jge add fwait sub std mov or cs pop iret add adc sbb add cmp push add dec or add mov mov std sbb mov inc mov add inc (bad) hlt push testb imul sahf lock gs test push and or mov fidivr mov jp ljmp in cld xor mov sbb lock stc movsl mov inc fbstp add pop leave insl add movsl jl scas jle and mov add or lods test (bad) pop stos add push adc push add rcrb adc sub and mov adc add add add call and sub scas cmp cmp lret aaa adc mov sbb mov mov dec push sub loopne jb pusha inc test adc js sub jle push roll dec jae ja ffreep daa frstor add jbe jl xor adc sbb or pop xor push and add fildl mov aam add fmuls shl jne negb ret mov imul add add or jmp fcmovnu xor add cmp (bad) push xor shrb fwait (bad) cmpl into and add rorb pusha sbb test test dec or inc add repnz cwtl pop or adc xor dec cld sti nop push sub add (bad) out and adc es mov pop mov xchg push cmp leave (bad) push lea xchg dec sub rolb shrl sub sub sbb mov or add loopne mov jl pop or mov pop inc mov or (bad) mov bound repnz cmpl ficoml cmp addl hlt mov aad lods pop or mov or scas pop pop pop pop adc adc loopne adc push xchg mov xchg les cwtl lcall loopne xchg sbb (bad) pusha jmp test (bad) push dec or adc push mov jl fdivrs pop (bad) mov jp push pop jnp push sub or jo jl shr rcr or jne divl das and out jb inc imul mov jb cmp jbe dec sub sbb add adc test fimull mov adc btc iret (bad) lcall frstor and cmpsb sub jle jb or add pop dec or sub adc inc pop insb pop nop into mov (bad) nop add stos mov jns adcl xchg push (bad) or dec les mov pushw xor lret add jl add and ret mov mov inc jle adc adcl cmp cltd push mov lret and xchg mov lcall mov mov inc jmp cmp in pop call add add adc xchg xor fcoms or aaa rorb sub and jae push out sbb pop adc and inc xor add mov cs add imull mov imul dec mov aas sub or or test in movsbl sub sbb jmp add mov dec popa cmp push ja sbb mov cmp mov xchg add mov or pop sbb daa and cltd mov (bad) insl push loope scas pop mov test mov aas jg sbb adc cmpl sub push jbe popf cmp add gs je mov and imulb data16 or (bad) notb fcmove insl inc mov sub mull cmp push nop mov cmp inc dec (bad) sub inc or mov sbb jne push enter pusha mov fist push fldt je jmp mov mov pop es insb je decl ds jb cmp ja or dec testl ret (bad) cmp mov push mov incl jb idiv rcrl cmpb add aaa bnd push arpl mov adc test (bad) test mov ret shl pop rcr push or and add inc stc xor test mov lock xor cmp add xor (bad) roll mov jne (bad) pop push sub inc cld inc imul (bad) ss out shl fstps push pop out adc faddl aam xchg sub iret dec out push std cld jmp push add inc ret inc push out loopne or mov mov or imul enter aaa mov int3 sub add or int jns scas push cmp jbe clc add dec dec mov mov add loop repz push adc loopne roll jmp cmpl adc inc loopne sbb add mov sbb pop or add xor shrb (bad) ss inc (bad) push sbb pusha add add cmc loopne sub mov sub dec xor test push mov cs gs push or cmp add push mov inc cmp cmp lods inc cmp xor xchg (bad) sub sbb popl xchg push lcall xor (bad) test jbe mov mov push cmp mov pop xor mov mov or add pop inc dec push movsl sub and lods pop sub adc sub mov mov add jb push add (bad) aam popa jae or rcll outsb inc mov dec add add inc push (bad) cmpsl cmp in pop push sahf addb mov call adc sbb pop (bad) xor mov cmp xchg cld imul fs push loope or je sbb inc and mov (bad) sbb insb jmp in xchg add add mov or imul in pop movsb cs jne arpl sbb add inc pop sbb sbb or arpl and insl sbb inc pusha push adc arpl mov jmp jmp adc inc dec or mov jge cmp jle and decl pop adc add xchg inc inc mov cs loop cmp clc repz or shlb pop cmpsl or mov data16 xor dec rolb add addps dec (bad) pop ret sbb cs or or std icebp out push and mov cmp mov stc mov inc cmp xchg push pop js lcall cltd sub jns loopne push xor (bad) shl out adc push hlt fiaddl cmpsl inc pusha ficoml lret inc cmp inc call or jecxz incl push push add fisubrl mov jecxz or mov xor or push inc add pop sbb sbb mov rep mov or pop jo push mov ficomp add cltd (bad) mov (bad) mov pushf mov xchg or add cmp cmpsl stos inc xor pop inc xor push mov xchg mov negb sbb mov ret mov mov aam inc and or sub sbb mov das hlt ja imul push push lea out test loopne rcrb pop sbb mov dec js push sahf jb cltd jbe add sub add push push aam aaa movsb jne in (bad) jnp (bad) orl (bad) jno push je fild mov mov cmpsb pop fs pop cmp or xchg add adc pop push xor leave pop sub xchg jb sbb add add pop adc inc mov add pop (bad) movzbl jmp ds ret sbb clc xorb push mov sub movsl or push inc sbb add mov repz pop pop add stc leave ret jo mov sub sub insl aas adc inc pop jne test dec xor mov xchg gs add sbb int call fdivrp mov sbb cmp pop jne dec fildl and xchg mulb (bad) add test dec jp mov inc and ret out je xor arpl jbe dec jbe cld std inc sub jmp lea sbb mov or mov lock (bad) mov pusha push in dec xor call aad xor outsb push cmp adc pop cmp or stos pop xchg nop sbb (bad) or daa mov sub fidiv xchg cli cmp add push lock add sub lods in ret lret jbe add mov es je shlb xor xor mov push rol movsl fimul mov cmp or add scas leave xchg adc cmpl mov jp add adc sysret sbb pop in mov cmpb shlb hlt push test inc aaa add dec inc insl rclb lret insb sub push push push sbb inc popf xor cmp shll cwtl movb mov or sbb jge,pn jns lea add jne jl cltd push pop imull cmpsl sti incl push mov (bad) or xchg push pop mov testb cmp mov inc add jno xor lods adc sbb cmp sub ret in add int push add xor fisubl les sub call mov outsl popa mov jbe fld xchg test xchg adc jge push lods mov pop (bad) or push out push xor sbb mov xor push lock fcoms cmp aam mov jmp or push movsl fstl and shlb mov dec add jbe sub cmp (bad) sarl push fsubr push jne jl xor sbb icebp gs xor imull enter clc call add in outsb popa xchg cmp cmp (bad) outsb sbb pushf cmp (bad) pusha push xchg pop cmp add adc incl sbb lret pop je ret adc xchg add pop mov mov pop add or fimul xchg sbb cmp dec push in pop flds cmp rcr add sbb dec and jl add add jecxz clc insb push add mov aaa cmp xchg dec and add xor inc pop clc loopne adc xchg adcb or dec xlat sbb fisttpl jecxz inc in inc neg sbb jecxz jge or jg ret daa mov (bad) jne mov jle xchg outsb adc setbe add and sbb push push xor inc cmp or and and jmp sub fimull mov push adc ret mov push hlt ret push add imul jle mov mov movswl mov and add push push (bad) repnz jbe add push lea test and aad andl shr cltd mov fisubl mov nop sbb or push push cmp movsl jbe lea decb insl add xor out cmp jbe aad pop push dec pop add xor les mov lods or fnstsw in mov jecxz mov jne and xor jo pop test (bad) fmuls and sub mov or cmc jb push sub or sbb cmp mov js js mov and jb push inc and aas add add pushl push scas (bad) sub pop add push jb sti jne jmp fs mull pop or or or jno xchg and adc sub fadds sar push fisttpl rorb test sub lods jo shll mov add inc cmp loopne outsl cmp xor mov nop pop outsb push adcb ja loope inc test or ror or xor adc mov add sti out es add xchg pusha jl or adc or push ret push mov or sbb or dec mov add dec add push inc loopne mov adc xor mov sbb lcall mov lret outsl push insb mov mov cmp mov sub lret jbe mov fldl stos shll mov sub sahf mov mov mov jmp lock cmp pushf sar jl loopne rclb sub rcrl jl add mov pop sarb ss jno push fldpi sbb push les or mov andl xor test call add pop add sbb jne and mov adc bound insb or pop add je shll arpl xor pop sub pop ror sbbl and dec sbb xlat add lds stos cltd xor inc jnp popa adc sub fldl or call faddl mov or (bad) adc add xor mov aaa cmp addb movl fcomps mov mov orl inc xchg or test rcrb adc pop cmp xchg pop and push push fwait (bad) adc and fildl add pop call mov test push add test add inc movsb push (bad) in cmc add inc loopne cmp in mov pop cmp adc test mov add sbb or or push jge stos cmpl repz icebp jae mov mov xor outsl test sbb ja jl mov add shl dec or xor sub jns je enter inc push mov fdiv add cmc sbb mov (bad) pop pop adc sbb add or or push loope imul push fmuls cmpsl loop mov cmp addr16 js cmp mov insl xchg or jne and adc decb sub xor std (bad) test addr16 movsl and cmp mov xor rcll mov pop stos xchg pop push loopne movups push (bad) and mov movsb or stc rcrl xor fwait or sub adc inc sub mov cmpsb inc mov inc add sbb mov mov dec add outsb or push push jg xor push inc cmpsl mov lods push in mov jg jmp sub pop jl mov mov or or dec stc mov hlt add mov loope sub (bad) ret jmp inc adc sub orl cmp dec mov push cmp inc int3 add dec les pop lock mov sub xchg or inc rcrb mov jno push adc mov sbb test mov jb and and popf addl jle inc jno cltd dec dec pop pop adc les jae les push or inc add cmp dec mov push push insb inc adc pop cmp in hlt in ss test push adc mov leave pop or inc xor jmp mul fisub adc fmull add dec push lods or jmp cmp into cmp inc shll aad pop jne sub mov ret ficompl and pop push sub loop test loopne push fwait icebp sub adc dec push stos test addb or push push xchg test jo cmp inc js (bad) sub or sub out stc ja (bad) or outsb jnp lret repnz pop adc test mov rcrl dec std or addr16 jne call sbb dec inc ss inc cltd fbstp mov (bad) pop push jg and arpl out jl xchg std mov push jmp cmp jne cmp shll je inc and jbe push push jmp sub aaa subb sbb and fild mov in shlb aam add push lock es pop and add sub cld xor or dec adc push jle ret pop fs dec je dec jne or inc or ja in push pop and pop jge sbb xchg inc add or (bad) sbb cmp loopne imul add and inc inc mov pushl lods and adc popa add xor std jp jb xor outsl inc or or push mov sub ss xor movsl iret mov push fiaddl add adcb movb lea arpl (bad) in pop je cs and xor jne inc in mov add icebp jmp push or lds mov adc xlat xchg and inc mov sbb push cmp jl iret jg add pop test adc outsl outsl loopne hlt out push cmpb sub inc pop push mov fsubrl shll call sbb loope scas (bad) pop jb mov stos cmpsl adc push mov dec xor pop mov outsl dec add ret cs enter mov push test add mov inc jp bound movsb lea std or test add (bad) loopne int push add lods dec lock movb add xor jne bound nop inc (bad) or and fcmovu outsb and addl sub subl or sub loopew,pt shlb pop jle rcrl and push call ljmp push lds pop mov mov sbb push add and (bad) orl out xchg cmpl mov or cmpl jbe add in xor cmp lock or pop fsub jae jmp mov cmp jg orb inc jmp enter insb (bad) lea scas adc jle adc mov adc mov xchg push aam das add add and or inc push sub inc jl and test je hlt adc xor sbb jp jbe sbb lock outsl jge cmpb pop adc hlt xor inc adc lods jmp pop and adcb lcall xor add and lret aam and push push mov and pop in nop testl or jo and (bad) adc pop inc jp out add mov pusha icebp adc clc push aam mov add or or ja mov mov push dec shlb dec loope dec lea fistp or add add adc xlat je cmp adc (bad) add or inc and fildl fiadd inc add movsl js ja push inc push subl pop fdivr push (bad) jmp and ret push sbb js mov sub fbstp mov pop adc daa in push rclb inc (bad) je out push pusha mull push lock call in jmp fildl sbb lods sbb rcrl dec orb mov rcll rclb dec or insl add dec cld lea ss xor fstpl cs ret inc lods add adc pop (bad) enter and xchg aam pushf dec push push or adcl dec inc jne sub inc push xor dec lea (bad) or not dec inc or pop xchg test les fbstp (bad) rcll jb push push mov pop testl ja sub dec inc aaa sub and adc pop test pop jae or push sub aam inc add pop dec (bad) xor mov pop test aaa test sti shlb sub jns mov aas (bad) jb cmp test cmp fidiv push xchg cmp nop mov add pusha and lock inc les clc xor jmp (bad) jbe setnp xor inc cmpb and nop adc xchg mov rcrb push adc lods loopne aas push lods shrl add loop sbb push jo xchg mov mov sub push inc and sub pop inc or adc sbb push add xor add mov insl inc stos or jl (bad) ret (bad) inc enter sub jns and push adc jge sbb mov xlat xchg or loopne fstp out lea or aas adc mov mov cli dec cmp jle inc mov jno inc std adc add mov shrb push push mov lods sub add imul fs loop dec sbb pop add or add xor stos adc pop and jl xor push std inc mov or ss cmp test fcomi ror or mov in push nop pop lcall inc test xchg pusha push scas cmp cmp push pusha test pop loopne add insb push aad aad mov std pop insb (bad) or call popa cmp sbb jno inc mov jle mov fistp mov ja pop add xor fild sub jne repz adc add push mov adc xchg inc arpl sub aaa loop or out ja inc adc bound fistl mov adc std xchg data16 sti fidivl dec in into sub ficom adc pop call inc add out jnp adc mov push enter dec sub push pop movsl cmpl jg cmp inc hlt add ret or push inc outsb rorb pcmpeqd sub inc mov and sub test ja sbb push test les insl mov jle mov mov mov mov inc inc xor cmp pop dec sbb jmp adc mov xor cmp mov push sub inc inc leave cmp fsubrs mov aas push cwtl adc mov jg sub enter inc cmovo sub cmp mov push mov adc fnstcw mov inc sbb adc add cmp sub dec mov and mov push and sbb sbb dec es push pusha adc mov lahf arpl ud2 or or shl test ds push ja adc lret flds rol dec add and leave add or loope or mov add insl adc aad adc adc or mov mul enter adc jne mov movsl movsl movsw sbb push pop add out inc lods inc bound mov mov and sbb push inc lds add or andl arpl mov incb loop inc inc mov sbb jbe les inc out cmpsb and sbb push cmpl sbb inc or sbb lds (bad) sahf sbb sub in mov fcomi sbb sub jns adc adc pop sub adc fisttpl dec jns sbb icebp popa adc pop sub fildl fistpll lods rcl ljmp dec lock shr add or push ret adc imul cld lock orb je hlt aaa ds imul mov sbb cs jmp cmp je das mov jmp cmp mov push and sub sbb rcl mov call adc mov xor mov inc jl dec imul and xchg dec or push outsb lock push inc push sub imul sub dec add ljmp mov inc xchg jne or std jmp test or dec lds xor sub stos stos push stos pop jae push aaa jle adc add mov call push adc add sub roll cwtl add hlt jns dec test inc lea pop ljmp clc roll add push fldl sbb shl not test subl mov (bad) or test jmp mov mov pop xor dec or inc push sub adc sub popf cmp stos inc in lea loop jg push jg cmp and push or nop jg mov push adc push in je sbb jae mov sub mov mov jnp and xchg mov jge pop pop mov mov add in push mov std cmp and stos inc hlt test and fmuls (bad) (bad) mov sub mov sbb sbb rol loop sbb adc lea add jle adc sub (bad) mov sub mov lock out test mov adc shl incl xchg add sub mov mov pop adc sub outsb or xchg push and mov mov adc dec lods jb pop or fdivrs adc adc adc mov mov xchg cli xchg mov pop add push scas loopne lcall call dec jns push mov mov in loope fidiv pop (bad) adc pop lds mov cmp sbb push inc sbb push sbb into xchg mov mov mov jg andl stos add into out aas insl ja idivb iret and test test adc lock scas jge add nop rolb and shl leave neg sbb jne xchg push or (bad) lock or inc addl fwait or mov cli test lahf push pop leave inc xorl leave and lods cld sbbl inc add and adc inc cmpsl ficom mov das or add or jl stos inc inc xor mov xchg add or mov mov cwtl jge xchg gs xchg test mov sbb pop inc pop outsl rclb dec mov jno push lods add inc rorb inc sti mov or jmp xor mov or xchg sub lock xor and in mov in jmp mov mov pop mov add (bad) push push cld movsl xor call push mov adc mov sub into jmp popa orl por pusha fidivl push call js cmp sub std movsl in cmp jle jle cmp or xor loop push fsubr pop or dec push flds push pop or adc mov popw jle sti xchg lods xor cmp jg repnz mov cld ret sti mov ret mov pop or or jge inc pop aas int pop rcrl cmp dec add pop and dec cmp and fucomp sbb or jge jmp adc insl icebp outsl inc add add and xchg mov lods jae push push pop mov movsb sbb adc xor notb imul orl pop pop or pop adc clc iret fisubl xor jbe mov outsb pcmpeqd je push insb ja insl je je pop mov rcrl test and add or adc mov jbe cmpb jl incb dec sbb xchg imul or or and stos sbb and adc mov cmp mov or jecxz mov ja push (bad) or int3 pop rcrb icebp ret outsb popa mov sub hlt mov mov popa test int3 lcall or add lods inc nop daa or xchg sbb mov mov in (bad) cmp stc insl (bad) in or pusha cmp mov lock rclb aas mov xlat jmp jg xchg les ljmp lods sarl add (bad) sbb addb mov jno (bad) mov cmpw sarb nop jb mov cwtl mov mov pop mov cmp mov xor lcall sub and lock cs addr16 stc mov xchg sub lea repnz or (bad) std mov mov or enter mov data16 pop inc testl fcoms cmp stos xchg cs sub enter and dec add adc outsb push rolb push popf dec enter fisubl das cwtl xchg pop mov adc cs loope (bad) dec and add loopne pushf jle rcll je les push mov mov or add (bad) pusha mov lret das shrb or ficoml mov std testb mov je jb addl sub insl mov pushf pop mov aaa nop inc inc loop dec test jg push nop sti mov or iret fcoml sub sub fisttpl hlt call gs jmp (bad) or mov ljmp mov pop das mov adc jg or adc aam or add rcrb pop push push fcom insl mov fiadd pop sarl pop shl jmp fimull inc aam sarl addl test ja and rcr fsubrs loop add nop sub sbb stos jne or sahf jge push mov fisub inc push cmc or or dec (bad) arpl sbb dec (bad) arpl dec outsl (bad) xchg or pop mov jno add lds mov int loopne lods fstpl mov (bad) insl js movzwl jne pop test cmp or das jno pop sbb jg sub jmp add or inc jl or js jno test xchg jo add sub in inc or mov mov (bad) ss mov sbb cmc cmp jb loope dec cltd push pop mov out or stos mov xchg push push insb orb lret and subl dec movb add (bad) xor rcl rcl aad jo xor xlat fcomp (bad) fstpt (bad) adc scas dec xchg je movb jmp add insb dec shl push fcomps adc sub or fdiv enter fstp and sub add add daa cmp xchg mov pop adc mov add jecxz div dec cwtl mov or inc mov push mov adc sti (bad) rorl bound push jne push ljmp gs push inc icebp nop mov xor push and jmp push push mov mov repnz leave adc rcl inc test clc xor test or mov mov mov mov icebp neg mov jne imul data16 cwtl shrl or scas pop adc test xchg xchg push int3 pop sar sub add and push inc fucomp mov loope mov aam xchg out imul push pushf arpl dec addr16 mov push sbb mov and sbb inc test adc mov add push (bad) bnd mov or adc mov mov xchg xchg xor xchg (bad) push cmp inc notl mov mov rolb fsubr and sub mov jb adc adc push dec shlb mov in int rolb (bad) mov jle push in pop test ret pop fucomi lods mov jne mov repnz mov xchg nop add pop inc ss stos pop out nop adc arpl test lods xchg mov mov mov (bad) add jg push nop out add pop mov jge lret hlt lock rorl cli cmp out or or add push sbb push adc xor mov neg mov popf inc mov lock insl scas stos inc jmp or push mov mov pushl lock and idiv repnz idiv and inc idiv div int pop sti sub (bad) loop or pop out ljmp loop,pn mov hlt loopne call int3 imul call les sub mov popf mov jge repz xchg jo and shll xchg mov pop dec insb fwait or repz pop in jo jb or xchg repz mov and push or xor stc and adc fdivrs mov add mov mov push lods and pop jns data16 push xor cltd inc popf jo push cmp sbb mov fistl movsb mov fistl xchg inc xor popf clc add sbb jle push cs fldt (bad) leave or sub dec mov inc or (bad) nop lods add repnz test jmp fisubrl push mov inc sbb sub enter xor dec (bad) ss push bnd inc or dec icebp mov arpl lret das pop sbb xor in mov (bad) pop ss mul mov imul xor push fdivs sub in ror add ret adc daa and addl xchg movb inc ja cmp dec inc out (bad) jmp inc popa fcmovnbe adc push adc test out adc xor push out pop mov dec das and call movsl int or or jge fisubrl xor fiadd push xor xor fsubrl insl sub mov cmp mov xor divb xchg sbb cld lea xor fsub push or insl scas adcl loopne mov jecxz add pop pop add mov add jae sbb push (bad) or push mov adc stos sub jne movsb adc push (bad) (bad) or rolb lock push mov sub stos jno (bad) jae fadds sahf push aas push or fs pop mov addr16 sbb dec xchg jp ss cmpsb cmpsb xchg shr test add xor pop push fisttpl push aaa ja movb dec cmp jae add mov clc cmpsb add adcb test pop (bad) inc add mov dec pop enter xchg cmp testb int and ret and add push add mov inc insl cmp sbb lahf in cs enter or adc jp stos iret ret add div or or or (bad) sbb push mov loop mov je into je out insl push lds or or mov std cmp or sub jmp or push push (bad) sti push fstpl and lea mov cld mov pop sub push add dec or mov pusha iret or cmp ret xchg bound insl sub js mov xchg xchg cmpsl jmp inc sub add (bad) in out cmp popa or pop xlat mov ret repz ret or inc push add fnstcw push xor push pop pop repz dec aaa lret adc add cmp icebp pop add andl pop and sti and mov fsubl (bad) mov cmp lea test aad or int mov push cmp add cwtl xor je add mov ret pop push cmp ret push cmc sub push add cwtl rcll insb add sbb pop jb fcmovb jae pop adc add mov add in rcll xor push movsl mov test repnz or mov scas pop mov sbb test jns pop data16 outsb xchg or mov add add pop into cmpsb jnp hlt mov mov pusha mov pop inc pop int push addr16 shlb mov mov inc sub or mov inc sub xor xlat and inc pop jg rorb xlat mov or lcall jge daa add lock adc mov inc push mov lret test ret xchg test (bad) rcll nop inc mov xor xlat (bad) mov lret ret adc (bad) xor cmp push inc js popa inc adc (bad) add push les sbb or adc mov mov add adc (bad) mov add xor ja adc rcrl inc pop mov mov in mov in cs jmp mov pop pop lock and or cmp push adc mov pop xor sub sbb (bad) in mov je ja or imul je inc test adc mov test movsl stos push push cwtl orb xor addl lock aas mov insl aam xor cmp mov fsubl js pop sub fisttp ss cmc or lea sarb push (bad) dec cmp mov mov mov inc cmp dec or lds insl sbb mov add fmull sub mov xchg iret shl mov xchg sub notb loope adc dec je jmp pop loop xor pop inc xor add and jnp xor orb push xlat xchg test fsubrs shr adc call pop adc jb push push push cmp add mov sub in inc inc loop and cs cmp or das inc or or aam mov clc mov addr16 pop adc aaa add loopne mov in mov sub adc mov rclb in mov nop inc dec xor dec add mulb pop (bad) negb pop add or adc pushf xor mov push fldenv pop rol lret out or js pushf or xor fcoms call in or loop dec (bad) xchg mov xchg ret pop idivb adc sub cltd in mov mov adc pop adc or dec in sbb or mov add (bad) cmp or sub push ljmp ljmp sbb cmp push add push in push add xor push jbe shrb add test add jnp xchg aaa pop or add xor cmp fwait int mov xor cmpsl and mov inc push push or cmp lea pop cmp adc out xlat or (bad) push or sub ja enter inc mov jmp add inc mov adc cmp inc mov mov add in mov cmp push adc cmp or and mov dec enter mov push scas cmp push and xchg (bad) push and pop xor mov das jb ret adc inc push fldcw push aas das cmp int xlat ficom or add les test call or push and lea cmp jle popf loope fildl lds clc andb sbb (bad) xor dec inc push stc and idiv and imul add pushf mov fdivl stc jg arpl jmp fs (bad) cmp daa add or adc sub mov xcrypt-ecb cmpsl int3 xchg cmp mov sub mov call mov xchg iret gs adc cmp enter cmp sarb std jle movl jne gs ret enter cmp (bad) mov cmp or inc das popa and repz fst mov sub rcr sbb rcl sahf out dec call in xor jno cmp jno adc fdivrl jno and adc and ret and and leave shlb call xorl adc mov xlat mov and mov push adc andl mov sbb sbb repnz sbb lret pusha sbb add inc and roll xlat mov mov dec jl repnz sub xor fdivl mov dec push imul cwtl imul mov jecxz inc jae cvtpi2ps dec in inc flds or pop out sub in rolb nop and (bad) (bad) insb popa je and add inc outsl jo jb addr16 xor pushl xor xor dec gs outsb sub and imul xlat std mov inc add or rcrb mov and and jmp faddl add inc sbb mov pop addb adc fisubrl add or scas add or mov adc add jg cmpsb imul xor imul add add add add das or nop or nop or nop add mov or nop inc push cmp add or sbb or nop or add repnz insb fwait jnp adc pop or or out or or imul xor shrl insb in sbb (bad) xor pushf pop fdivrl jl dec (bad) xor add dec shll mov (bad) xor xchg push (bad) xor xor or dec shrl stos push sbb xor lcall dec (bad) xor push xchg (bad) xor shll cmpsb data16 dec (bad) xor xchg push (bad) ss xor (bad) xor push mov (bad) xor shrl scas outsb out push dec (bad) xor sahf pop fidivr mov xor add dec shll mov (bad) xor xchg push (bad) xor xor or dec shrl test (bad) xor cltd pop fnstcw mov xor add xor shll dec (bad) xor xchg push aad mov xor (bad) xor or xor shrl dec (bad) xor popf pop fnstsw xlat xor adc adc add jmp (bad) xor mov jae lcall or imul imul imul cmpsb imul imul imul cmpsb imul imul imul cmpsb imul imul imul cmpsb imul imul imul cmpsb imul imul gs pusha xor (bad) xor push xor (bad) xor rorl push xor cmp inc and xor push xor add xor xlat inc addl ret and arpl or lea lds add add or push xor (bad) xor push push add cmpsb sti dec rorl sbb adc imul sbb xor std add add or or nop or or push xor push prefetchw je adc adc adc and sbb sbb xchg or sbb push xor ret adc pop icebp fnsave pop adc adc adc xchg and adc xchg and sbb xchg adc add add sub or push mov dec lcall cmp pusha push mov mov test orl xor or sarb call mov outsb sub jb and and insb gs wbinvd stos out mov rcll add sbb and xor cmpsb imul pop push cltd cmpsb andl push add add (bad) rorl mov and cmpsb imul aas cmpsb imul add add cmpsb imul subl add insl xchg mov in test add imul outsb and arpl je outsl outsb cmp pusha jnp test mov insl imul arpl gs outsl dec dec jb das in idiv dec inc push dec inc dec xor cs dec dec mov gs inc insb nop mov sti jae jb gs push gs popa insb jne inc std aaa push pop inc insb insb outsl push and inc js je jb scas in mov insl jae cmp xchg aad (bad) test lods stos gs stos stos movsb bsf push inc or sbb and and (bad) (bad) (bad) jmp daa sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc outsb add dec dec dec dec dec dec dec dec dec push push and pop pop pop pop pop (bad) loope sbb pusha popa bound adc push insb insl or jno jae jne ja jns jnp jge jg cmp dec mov fsubrl dec loopne sub pusha push dec dec push push adc jmp das add dec dec inc push pop dec dec inc adc mov stos add (bad) xor clc pop jno jo insb imul jae insl popa mov imul inc insl mov je and outsb pop sub adc push xor jb jns daa (bad) pop jmp insb jns or inc sbb ss mov and je pop daa pop fstpl push sbb insl and insl ss or push push insl and lahf imul or adc jne jne jmp dec fmull data16 bound push jae insl bound jne mov dec and jbe and mov imul push das adc out mov and addr16 outsl cmp and sub mov into lods ret (bad) std mov outsl pop push insb insb popa outsb xchg sub insl movsl imul insb jb sahf mov or sub cmpsl popa xchg insb xlat or outsb push inc sbb outsl jb stc pop in inc dec ljmp divl ret movb gs push ret gs jbe adcl sti gs pop jae or cmp (bad) out mov fwait xor lahf jbe jbe pusha fs xor cli pop or (bad) into insb gs orl daa aaa jecxz imul aaa ss or or aaa xor test jne mov leave sub xor pop imul mov and sub fsub push (bad) and pop leave divl outsb jmp jbe jae sub inc and movsb or popf fistpl repnz insl jbe push push mov insb test xor mov fadds test (bad) hlt icebp push adc sub jo xor enter xchg (bad) loopne out out sbb pop and bnd xor adc (bad) xchg gs fildll jae dec push fisubrl mov pop int mov sarl mov push imul inc sub cmovl daa loopne outsl fisttpll sub jo addr16 ret subl add xor cmpsb and mov popf movsb dec adc jb jg gs pop mov popf inc outsl cmp fs xchg jne add test push add add add pop add enter add nop add mov (bad) add add popa and and jbe leave add add test add add add flds add add sbb add fild adc sbb add add xchg add add add (bad) decl lods addb xchg lea xchg xchg xchg xchg xchg cwtl (bad) (bad) (bad) lcall sahf lahf mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov mov ret (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fdivr (bad) (bad) (bad) (bad) fcmovnu fstp fnstsw loope jecxz in out jmp out out lock repnz cmc div clc push stos lods (bad) stc cli sti cld std (bad) call and adc jg inc or xorb push pop mov test fst mov add or add das adc or push add daa push xchg std or add jbe dec lea or adc inc pop adc push in dec ja mov mov pop mov inc jo pop insb out imul adc dec fidiv inc sbb addr16 push mov dec inc inc aaa jns stos push jnp aas cmp and cwtl fs inc inc pop or mov movsl adc push pushf jl je mov push jne dec sub sbb cmp rcl out das daa and repz rcrb ret dec bound or imul cld pusha daa dec inc insb and cmc add outsb mov jae inc jo fldenv and pop fsubr inc jb jns adc enter xor adcl sbb sbb push test fs cmpsb add ja cwtl inc in pop push pop dec jo and je jb insb push pop sbb jbe jb daa mov sub dec fs pop cmp xchg shrb jbe pop and sub xor sbb pop rolb sub pcmpgtb or and dec ret mov cmovp fldl sub xor sbb aas mov testl xchg ja pop (bad) and xchg fistpll push push dec jnp dec add call and push fs dec or sbb add movsb xor inc mov test imul mov out sbb mov mov adc xor jb dec mov popa add sub fsubrs aas mov adc or pop pop je outsl inc fsts test sbb (bad) fsts or je xor jl es add je jbe add sub xor es xor jle jae adc sub sub xor ds cli cmpsb jmp cmp pop and sub es jne or sub sub pop outsl ret outsl jo cmpsl cmpsl and mov add dec dec ds mov pop and daa pop pop (bad) mov mov loope push or sti je or pop jo ss fptan insl (bad) or or xor adc or and pop dec jge int ds ja sub dec (bad) je cwtl out add pusha jge (bad) xor dec inc xor in (bad) xor (bad) pop loop pop dec sub pop jbe sub and rcl and sbb fwait cmpsb imul dec shrl hlt lock call in fnop aam (bad) xor ror enter xor (bad) xor mov lods test xor shll (bad) xor nop mov dec (bad) xor pop inc xor cmpsb jmp in add lcall add test pushf mov imul jmp add scas mov test mov push cmpl inc gs push mov std js ja lock outsb pop push cmpsl jb xchg adc xor jae mov inc arpl push bound mov imul mov lahf inc outsl js add fimul inc push movsl adc xchg popa ret sahf movsl lods sub cwtl xor loope inc push sbb mov loope test inc dec push inc addl call add dec adc xchg aas popa adc sbb cwtl pop popa hlt pop sbb sbb add stos paddusb add dec add jmp mov mov push arpl (bad) fisubrl add aas insl imul mov or adc add inc test add jne mov addr16 pushf scas jbe insb (bad) sub (bad) adc add inc jno (bad) (bad) mov push jns or pop cwtl insl andl jns inc mov cmp pop das inc mov sbb xchg sbb or pop lods jb or jo (bad) lea or jbe add decb mov jnp push movsb aad add cmp add pop cmp adc imul popa mov fistl outsb jnp jnp add ja cltd daa dec and or jae adc call outsl daa jae (bad) push adc imul xor sub lea popa outsl add outsl jo outsl and xor add (bad) push flds lea imul xor scas jmp sbb add xor outsb jnp insl loope or jmp inc inc jmp das inc and sub jne out inc mov pop push or add pop mov mov (bad) jae add cltd sub pop movsl mov ja iret add and jne add cmp cmp inc add jne xor inc cmc repz popa fstl jmp pop xor xor das inc pop inc lds xlat jne xor dec lea out jne insl outsl ja leave data16 (bad) popa lret fildll pop leave arpl aaa ret jbe insb sub or loope add fildl dec xor outsb in addr16 daa jns mov (bad) and pop popa sbb jge inc dec add inc pop jae in dec jns mov insb or in fs xchg nop cmp add inc sbb mov jns dec enter dec das pop sub les (bad) xor dec or jg xor divl imul inc mov movsl sub xlat insl jg lds jns (bad) pop add aad adc mov xor lret add mov xor sub fs test inc mov addr16 insl ja and outsl hlt icebp and jecxz das sub lods fistl jbe push add or mov add jo (bad) icebp flds popa (bad) mov push dec jmp fld push ss adc shlb cmp and cmp and cmpsl je mov rorl je dec sbb or daa data16 sbb or ds or insb mov jne mov push test sbb and daa and sub les jne jae add xchg or pop and adcl mov xor pop cmpsl dec add insl popf push lods sbb push sub xlat lock dec cmp inc and fnstenv add insl jge loope sbb push pop ja call pop add rolb cmp pop aaa push xlat push dec xor push or push insl pop dec fwait lds inc pop (bad) mov imul sub pop mov int3 dec sbb xor and test xlat adcb outsl outsl lock xorl out sarb dec sbb arpl fsubl and test sbb push add inc das ja add (bad) lea jno inc aaa mov push push mov pop inc mov xor (bad) icebp pop and dec loopne pusha cld add je das push add orb je je lods aam insl test inc cmp arpl je push inc mov sub in push add push fwait adc or movsl gs pop and push dec popa outsb fs xchg cmp pop or adc adc or sti arpl xchg rcll adc cmp aaa or (bad) arpl xor outsb fadds cmp aam mov pusha cld decl inc mov adc repnz inc mov xlat jae jg and and and add lret mov jne dec xor cmpsl dec (bad) test sahf and sub jmp adc lret popa sbb pop xlat jne xor arpl gs push or gs mov dec or imul int outsl sub mov dec imulb push cmp inc xor inc cmpsl add bound mov inc test cwtl mov in xor sub xor add push inc jge add xor push jnp add imul dec roll nop rdpmc cltd dec add and add loope adcb jbe arpl (bad) lret js push pop mov lahf xor sub rolb shll mov and xlat sbb js dec cmp sbb cmp inc call pop sub lret xor pop xor std sub aaa insl sbb jo xor inc sub loopne xlat mov cmp jno mov lock imul xor pusha pushf mov arpl xor dec nop lods push mov insl jg cli push out push out inc push addr16 inc repz cmp scas inc push dec add mov test adc xchg and push pop mov sarl pop fcomps xchg push ret add xchg sbb dec ja pop inc xor insb pop pop imul mov add roll pop add (bad) iret push ss adc pop inc stos lcall add add add add xor push loop mov jle push loop (bad) incl dec jae pop cmc mov outsl jb gs gs or outsb je xor ja stos push dec jne das add inc dec (bad) std xor push dec inc dec pop dec dec inc add (bad) inc pop push push inc push fbld mov push fidivr mov dec cld outsl (bad) cmp arpl jg popa push pop bound pop add sti jmp aam inc outsl je jo bound add test stos lret inc incl push mov (bad) adc jl adc pop jmp test pop inc add xor dec pop mov add paddusb pop jae mov pop sub add pop mov dec push add sub iret fwait pop mov pusha jecxz push xor or fadds xor mov jne (bad) daa mov push dec sub inc enter popa roll (bad) and pop nopl inc add out ds int or inc xchg popf enter inc addr16 or sbb adc pop adc pusha xchg jnp or daa pop mov mov push inc pop in xchg sbb and icebp and inc daa mov out sub test jne fadds sub fisttpll enter lcall jnp jg cmp pop dec sbb dec pop cmp or call pop pop and sarb dec pop cmp rcrb test and loopne lret and sbb jge sbb notb mov inc (bad) aaa in fs add and clc nopl or inc dec push mov dec jne xchg and and add add xchg and pusha cltd mov or pop adc add rcrl out and xchg sti and push aas adc xchg adc adc add push ficom js mov push jb push xor push test shl xor repnz sub mov das addb xchg xchg jo jge inc or lods out aam inc jb cs sub push xor out pop and das push pop movl add pop inc jo xor and mov leave sbbb loopne scas outsl mov enter imul leave and fucomip or inc jmp xchg sub mov xchg add sub (bad) ja enter pop aaa add and cmp dec (bad) js jmp jns ret fisttpl or add push insb sub ja (bad) jns pop inc jns scas xor mov cmpsl inc jl addr16 inc sarl jne orl sbb adc or pop adcl cmp mov push fstps xchg dec lods inc add xor push inc shrl and push adcb fwait sti mov and or das pop lea aad in fs pop jbe push cmc sbb ja and lea roll jp fistpl shrl adc insl gs outsl fs and bound test imulb sbb es fbstp popa xchg stos outsl inc outsb jns push sub mov pop call insl bound jae push outsl jb bound das jae add sbb jbe jl iret (bad) xor mov jo pusha add sub sbb out popa push std jnp stos lods jbe mov data16 mov jae mov imul inc adc sbb das sub ret sbb add cmp cmpsb mov add clc mov pop add add ret dec (bad) pop adc adc pop pop out sub pop add insb das push sbb mov jmp pusha inc add or pop (bad) jne pop adc push pop jae pop pop mov jo xor push sbb pop pusha pop and insb mov pop mov insb mov push inc pop loopne push pop mov pop sbb nop push push pop sarl pop sarl push push pop adc push sbb pop sub mov or insb nop roll dec pop lock mov push add push pop adc insb mov mov sub je mov push sbb enter roll insb fs and test or test inc pop call jg pop pop sbb inc mov cwtl xchg fwait or pop cmp fcomps pop pop insb pop sub orl mov dec or clc jg pop push ss adc mov orl jmp or pop and orl movsb lar (bad) inc or in pop pop pop fsubs pop sbb xchg incl fsubs or aam pusha orl sub rorl fdivs sbb pop hlt jg pop push pop xor (bad) mov xor jbe ss int3 fsubs decl pop popw es in xor xchg mov push sbb in jg pop roll insb pop pop push pop pushf incl sbb pop jle ds fcompl insb mov lcall pop outsb pop cs fs push mov sbb cld call and push adc cmp sbb pop xor ret push sbb and mov mov pop addl xchg lcall sbb mov xchg pop insb mov imul pop fsubs add mov pop mov ss ss pop bnd or jecxz adc dec sbb pop xor push sbb and or pop inc pop ljmp pop sbb rcrb pop fcoms pop sub or pop pop dec sbb cli jmp dec xorl ret pushl shlb pop xor (bad) incl and cmpsb sysenter fsubs pop addl pop out fcoms pop xchg orl cmp (bad) pusha orl pop push cmp mov lahf mov dec roll push pop insb mov movsb pop pushl aaa aas sbb into jmp daa pop fsubs push scas pandn ss pop out lcall or pop sahf (bad) jg shlb pop aas pop fdivrp outsl or fsubs das pop mov rorl pop dec pop (bad) sbb dec inc mov loope sub dec xchg mov fs icebp leave sbb xchg test fs mov stc lds in dec xchg test sub int xchg sub popf fldl std ret sub dec mov mov sub mov xchg jmp sub dec fisttpl xchg mov dec xchg cmpsl xchg xlat sub dec mov xchg mov sub dec xchg lahf xchg push icebp dec cli jg lahf push pop out add dec pop movups add ja cmpsb sub mov jne mov scas add lcall lahf add cmp andl aas inc push sbb add sbb in xchg sbb push popa daa xchg add jb leave and or jb out add loop fmul push and xchg jae test les jne mov mov dec ss inc jb inc and jns movsl js leave adc je pop mov popa fbstp xchg mov arpl add push inc orb sbb sti js outsl push pop incl add and lsl aas jg inc jno mov shl jmp adc enter aas inc push mov stos push inc adc add xor cmp sbb sub or add add mov push rorl add or arpl mov push add movsb (bad) pusha (bad) dec sahf sbb pop cmpsb fild mov fnop iret loopne inc jle test shll (bad) or ja or mov iret mov stos mov mov neg aas mov (bad) push ficompl pop pop fisubrl xor addr16 loopne rcr fsubp nop xor faddl xorl popa add cmp aas and (bad) (bad) fiadd lea pop mov inc das pop push adc inc jmp jg dec mov sbb mov push ret and sbb pop fadds or cmp idivl adc adc nop roll and sbb xor push sbb pop push pop pop jnp rorl jo fsubs fbstp push das xorb pop (bad) pop sub push test add sahf cmpxchg push sbb pop inc push sbb into pop xlat dec dec inc rcrl pop addr16 (bad) push sti or or inc adc xlat inc jnp push ss pop mov pop adc (bad) push mov pop adc fnstenv xor pop pop sbb aad negl je sbb cmpsb jmp push pop pop lock adc subl inc cmp pop js sub jns sarb pop scas sbb inc cmpsl fadds add mov pop xchg add xor (bad) into fs push in add fs push xchg xchg xchg or scas inc sbb and orb sbb test add das push sub cmpb pop inc add cmc push add mov mov cmpsb fnstenv dec or add cld loope jmp add call loopne int3 sarb test mov lcall lcall push mov dec inc xor cmpsb imul into insl in loopne add add cmp pop lods xchg mov pop (bad) dec add jae or inc cs addr16 inc (bad) jae jo lock ds push lahf ljmp sbb pop inc inc adcb xor dec or imul add repz dec xlat xor xor dec insl lods inc loopne add cmp jge daa roll xacquire pop pop insl mov add add (bad) (bad) (bad) js in push pop push xchg fisubr (bad) ss divb pop pop loop mov insl (bad) (bad) (bad) (bad) in xchg lcall push xlat pop dec outsl fwait mov (bad) mov xorl test (bad) incl lahf inc popa mov dec jmp scas sbb xor (bad) (bad) inc cmp ss jne fistpll add mov jle sti jge iret ja stc cmp daa cmp sti (bad) (bad) (bad) jnp mov sarl push and cmp shlb sahf mov add (bad) (bad) jg lods (bad) push mov lret mov dec sbb or loope mov stc (bad) (bad) (bad) incl xor pop test loop mov into lods lock xorl nop loop (bad) (bad) decl aad or push notl fs inc inc insb fstps pop push fprem xchg (bad) (bad) (bad) lcall jge popf insl pop icebp frstor lds sub fildl pusha in mov (bad) lods cmp sub (bad) ljmp movsb xor jae gs dec xchg inc and xor in jp xor lock ljmp push push mov or faddl les (bad) (bad) (bad) incl cltd call jmp mov mov xor pop fdivrs push (bad) (bad) (bad) pushl ret (bad) repnz pop enter hlt pop imul aas mov in hlt (bad) (bad) (bad) jmp movsb (bad) cld push push stos xchg jbe rcll pop lcall gs cltd inc dec (bad) (bad) (bad) lcall js in xor in repnz adc fmull xor mov mov in (bad) jmp jb cmp data16 push ror in aaa pop sub ret out (bad) (bad) (bad) decl fs dec addr16 xor fucomi std mov mov pop into lret mov (bad) (bad) pushl adc divb dec mov pop pop xchg aad pop enter push repnz movsb adc and popf adc mov cmp push xor cmp (bad) pushl xor nop in or leave jns pop push xchg into lcall push inc call sbb fadds sub into pusha (bad) adc mov lret pop je mov (bad) (bad) lcall test cmp sub addb int cmc out adc push (bad) (bad) (bad) (bad) clc sahf adc outsl and lret jae and out mov fdiv jb mov jne push (bad) pop pop (bad) (bad) (bad) in and push pop xor sub data16 adc daa subl jge (bad) (bad) jmp cmp push ss insl in mov cmpsl lea (bad) inc faddp nop lea decl std repnz adc pop sub lret pop add (bad) outsb loope gs sbb aaa mov sar sbb mov outsl (bad) (bad) (bad) mov das or out cmpb pop add add push in notb sbb (bad) push push xor jp jbe loopne push cmc pop lea arpl xor (bad) (bad) lcall ret adc cmp push jne push cmc or hlt push sub sbb xchg sahf mov int cli (bad) call inc icebp dec push add cwtl pop mov sahf mov dec mov jno clc sbb xor jle mov push test rcll sbb divb lods cmc cmp (bad) cmp fistl cli cmp jg mov xchg bound adc cmc movsb (bad) (bad) (bad) decl xchg cmp sub stos scas enter push xchg cmc mov mov data16 or rclb inc dec sub cmp sub pop in dec push push cli rcr push inc ror idiv (bad) lcall jno les jmp (bad) mov mov repnz xchg (bad) sahf in push sub jecxz (bad) jo pop cmp push bound xchg dec inc aas sbb decl mov mov (bad) dec shrb das add xor (bad) xchg rorl jle lea mov xlat xchg insl shl and jg test loopne icebp addr16 jae add jg mov insb push sahf pop jbe test scas xor dec or or ret addr16 xor mov test inc mov fsubl push mov inc or or daa fwait incb (bad) mov lock jg adc jg shrl fwait xor dec int jae (bad) (bad) pushl fcompl (bad) (bad) es test mov (bad) jne imul xlat int3 (bad) (bad) ljmp bnd xor arpl push mov cmp xor (bad) jg pop and push sbb and cli inc in stc pop adc ljmp push rclb mov fdivp jge (bad) (bad) (bad) push fstp imull mov and subb and dec loopne mov sbb ret icebp call clc aad scas mov xchg xchg dec outsb mov loop inc je lret gs movsl aaa pushf cs (bad) decl mov dec mov lock repz xchg fistpll (bad) jg mov cld jp push push pop mov jle mov sbb jecxz imul incl (bad) ljmp dec xor lds in sbb push jno lret fwait notl (bad) cld (bad) (bad) lcall sbb je xchg je jo inc popf fdivrs adc inc popl mov daa cltd push push sub gs out out jg (bad) decl repnz (bad) fstl and inc dec gs mov test mov cmp sbb push ss ja pop xor icebp xor jg loop rcll std mov ret scas pop (bad) int3 mov cmp (bad) je call mov icebp and xor (bad) mov aaa (bad) call insl push imul mov mov test outsb push pop jmp and mov mov jnp push mov popa adc pop jl mov dec push int3 mov xor or in (bad) (bad) decl jle repz (bad) and arpl ret mov cld outsl std push cld adc aam fisubr mov (bad) (bad) in mov std add or xchg dec mov sbb sub imulb call cs stc sahf and scas fstpt sbb xor xchg in pop add pop jg jle sbb icebp jns pop sub sarl out out dec mov pop pusha jge xor or (bad) (bad) lcall jno add xchg jp in jmp in daa ss or mov sbb dec incl pop stos in push imul (bad) out or adc add (bad) ret das lock fimul leave mov push into subl (bad) (bad) (bad) pushl leave movsb lret and xchg gs loope mov sbb (bad) (bad) and dec cli (bad) (bad) incl sbb sbb ficom jb and int in sbb (bad) (bad) ffreep and xchg pushf jle push xlat shrl dec (bad) (bad) jg faddp sti jmp gs (bad) decl dec xorb mov aad add out in popf movsb push mov dec xchg cmpsl mov sub (bad) (bad) inc iret push sub cmp clc adc xchg adcb or fild sar sti push and mov nop popa in mov pop lock cli decl sub loope enter les (bad) (bad) (bad) call jb cwtl mov sahf cs je rolb mov sub adc (bad) (bad) jg hlt mov pushf lods ds xlat and cmp arpl sub (bad) (bad) call (bad) push js sbb or in add ror nop and sar (bad) incl jbe and jnp loopne ljmp icebp (bad) mov imul cmc xor rol call jmp xor xchg jae js mov pop rorl fiaddl int3 push and xchg push or pop mov push (bad) fildll lock insb pop adc xor xor dec fidivr (bad) (bad) (bad) out mov test out push icebp mov pop arpl dec leave push mov jg pop clc pop cmp xchg adc out dec sub lret (bad) (bad) (bad) inc pop mov fsubs in add test aad cmp cmp jmp push jns cmc test or insb and lret (bad) jecxz daa dec das std (bad) das xor add lcall daa lds leave push (bad) (bad) (bad) (bad) (bad) fist out stc xor cmp cmp xor decl lret test test fsubrs (bad) call dec (bad) es pop adc push sub lahf or ret cmpps mov mov inc mov lahf adc les bound hlt decl or call (bad) (bad) or mov mov idivb jl movsb adc nop call pop test mov cmp aam mov and (bad) (bad) fstps pop pop sub shll and push adc (bad) jmp fcoms inc sub sub fcom rcll dec mov int3 (bad) (bad) mov mov jns iret pop out int xor gs cltd xor (bad) dec mov xchg pop xchg and cld push dec stos xchg clc daa inc cli aas jg loopne lock std inc sub shrl adc add sub int3 repz out repz jge cmp rol sahf mov (bad) (bad) jnp iret cwtl out jge jecxz xchg jb (bad) push jl std ret push or xchg outsl std mov ds xor aas jle (bad) idivb repnz mov mov imul pop pop ds jnp pop jb (bad) mov cmp paddusb inc cld fisub clc ret leave xchg xor cmpsl xchg out out fildl fdivrl je xchg mov (bad) (bad) (bad) call pop loope (bad) adc mov lret inc xchg loop push or sub dec lcall negb or mov cmp es je (bad) call iret std or mov add int ss (bad) (bad) (bad) (bad) cmp mov or in push jg inc jle clc out or xchg jle sub (bad) (bad) cld cld stc stc repz iret iret lahf lahf aas adc (bad) ljmp aas add scas fwait xchg inc fwait int jb add pop mov pushl push movsl mov mov aam hlt (bad) jl push gs adc sub jl xchg enter mov jno stos mov or and push dec repnz xor ss jmp (bad) sbb push clc adc test inc ljmp ljmp dec fimull daa xchg and mov adc icebp push pop loopne call movsb mov xchg popa fildl jl (bad) (bad) mov jge push leave repz sbb cmpsb in sub sbb dec adc mov push into cmp jno sbb cmp add adc rcll leave dec fs inc jns sbb pushl test adc icebp xchg add jns (bad) pusha (bad) (bad) (bad) call add mov sub cmp cmc cmp add pop xchg cmp (bad) das std jl imull sti dec stos cltd ljmp (bad) jmp and add lock jb fwait adcl push das mov inc int3 mov xor hlt decl push bswap notl xor (bad) lcall jecxz sbbl mov push add xchg (bad) jg pushl (bad) into push cwtl movsl sbb mov imul and jns rcrb (bad) decl cwtl mov stos mov dec (bad) push inc push mov mov and push dec mov in rclb sbb (bad) ljmp push sbb cmp imul pop loop lea rcrb (bad) fucomip push jp leave or in add aaa and add pop xor jne jb and in iret and sub pop cs pop push stos test scas inc mov iret xor data16 loopne pop mov sbb lret adc clc dec enter mov cmpsb loopne cmp push in mov repz pop ljmp hlt jne lea (bad) (bad) (bad) fistpll jne mov pop xlat mov sahf push loop jno leave scas mov scas push or mov sub pop int3 jno stos and outsl mov mov pop pop sbb imul cmp aaa (bad) idiv les sti aad xchg ss xor cmp (bad) mov xchg outsb je lahf sub cmp pop sub icebp cmp inc (bad) (bad) lcall cwtl ficom sub insb fwait mov push dec sbb ljmp std push in mov shld or pop mov hlt (bad) (bad) (bad) pushl add xchg lret (bad) mov and test shlb xchg pop mov decb enter add jo out (bad) fdivs ret fdivr enter lret insb clc and (bad) mov dec (bad) (bad) (bad) decl mov call or sbb rol fnstsw push data16 stc jns ss pushf cmp push fnop decl xchg decl or arpl push cmc into mov cmc (bad) (bad) (bad) jmp mov (bad) fcomps mov pop xchg push sbb sbbb jecxz pushf inc inc jo ljmp in add jo dec std lcall mov aam pop sahf adc inc loop cli pushl inc push rcr adcb jecxz out cmp dec lcall inc xlat push push pop add fisttp (bad) cltd test ja rclb mov jmp inc insb push push push rcrl sub std (bad) incl dec sbb mov lret xchg sbb and pop ljmp into (bad) pop ja cmp pop sbb sub lods mov jno outsb (bad) (bad) (bad) incl rcll call mov inc cmc mov js mov cmp icebp push mov push loop outsl lock dec and arpl ss ds sbb jbe and (bad) (bad) lcall inc jp add orb movsb cmc lahf or push ffreep jbe mov mov push mov mov (bad) mov ja inc mov xor push (bad) decl dec inc fistpl arpl popf ret fwait subb (bad) cmpsl pop int (bad) out pop xor sar xchg jno hlt (bad) (bad) mov push notl mov cmp adc in sub call mov dec (bad) xchg cltd nop add and shrl shlb (bad) pushl mov mov pop add sbb dec dec add lock jl or push das lock lcall jp sub sub nop stos mov pusha inc mov shr add dec fucomip lods jmp jmp cmp add sbb clc (bad) (bad) incl out nop cmp notl xchg rcpps or cmp add popa xchg or ljmp (bad) mov mov lahf add jnp flds jb jo jnp pop loopne jmp xchg and push movsb out xlat mov enter sub or mov xor std pop outsb cmpsl int3 cli cmp mov cmc mov dec xchg lock incl pop call imul inc xor (bad) (bad) sbb loopne pop fisubrl mov dec (bad) adc popa cmp aaa rcr add adc ffree lcall sar popa ljmp int (bad) flds jge mov (bad) jmp push inc fcmovnu mov sub sbbl ss dec cmpsb movsl lahf push roll aad pop loopne inc dec daa je push ret xor adc outsb leave shrl (bad) jmp pusha test enter mov xlat lret and push fnsave mov push aas mov outsl xor movsl pop stc sub shlb call (bad) ljmp insl push xchg jne push push fsubrs push push sub je popl lret fdivrp (bad) (bad) incl sub xor xchg aam outsl lea sbb mov xchg outsb clc rcrb ss stc jecxz in ljmp mov jno (bad) incl mov dec jnp (bad) pop fnstsw add outsl std (bad) call or andl les inc ret push test (bad) (bad) (bad) inc scas pushl push mov mov sbb imul mov jp sub jmp xchg int3 (bad) out xchg mov add or lcallw (bad) xor mov push fimull js (bad) (bad) incl push push (bad) mov mov addl mov mov fs (bad) (bad) xor ss or xchg ss pop fdivrs sub mov or cltd sti add daa lcall out movsb dec fldl xchg sarb jo (bad) (bad) lcall sub inc adc sahf adc mov adc fmulp iret sar cli ljmp test push or mov push stos push xchg mov call jae (bad) push mov push dec lea cli mov push adc fst pop inc sub pop insb lods jl data16 std lcall pop mov lds lods arpl sub xor shr mov (bad) (bad) decl sti fist stc xor pop push cli xlat fsubs xchg ss repnz cmp cmp in dec dec daa (bad) and and movsl outsl mov fwait aad push xchg pop and (bad) int3 sbb and inc push xchg mov test sub push decl cli add (bad) jo outsb test add xchg jge and cmp (bad) pop lahf lods (bad) stos push push rcrb (bad) call adc jae sbb pusha pop mov cmp das mov xchg add loop stos call sub cmpsl aam lods fdivl mov inc loopne (bad) (bad) fbld and adc test fmul cmp mov aam ja mov (bad) (bad) (bad) mov sahf inc aad jg jne hlt repnz bound bound leave pop ja cli outsl std pushl fldcw mov inc adc call sahf iret rcl call mov int cmpsl push test xlat idivb in out (bad) jg xor push dec push jae mov mov mov push ja,pn syscall sub inc (bad) mov lea mov cmp inc iret sub fcoms lods ljmp scas or xchg cli (bad) (bad) mov repnz nop mov int paddsb repz adc scas (bad) hlt clc or jg push push icebp test xchg enter mov add das cld pushl sbb lds dec sti mov xor and call inc pop mov mov xchg imul mov inc (bad) or (bad) (bad) mov (bad) aad test dec in rorb xor cld mov mov mov dec in aaa int3 aas pusha cmp add mov outsb (bad) jne,pt inc stc hlt jmp lock (bad) dec jl out cmpl mov xchg pop push sbb (bad) lcall mov pop xchg test lret (bad) mov cmc sahf pop aaa enter dec pop clc jg mov xor fsubrl xlat jnp lahf xor hlt idivb (bad) (bad) (bad) call inc mov lret sti add scas sbb ret push sahf mov pushl loope pop push dec pusha lods leave add rorl divb sbb (bad) incl dec pop mov sahf jo adc negl push add aas push dec dec cwtl out (bad) (bad) (bad) jmp pop pushf push mov add mov jae ja into jno add or sbb mov xor (bad) (bad) mov add rol jne inc cmp pop sarb xchg pop inc ljmp out mov imul xor sti rolb jns pop loopne decl (bad) xor xor jns mov cmc in inc insl in xor (bad) (bad) inc jp les decl sbb mov inc sub sub fsubs (bad) lcall mov outsl (bad) fmulp rolb hlt das rol inc clc lcall (bad) (bad) insb lahf xchg (bad) mov aas imul je xchg xor cs (bad) (bad) lcall cli fcmovu in popf loopne clc out and xor lcall dec mov (bad) decl imul ret sbb (bad) inc cltd cwtl imul js idiv ljmp daa dec xor rcl js call rcll cmp push (bad) (bad) (bad) in xchg mull rcll jae jne add les popa pop (bad) fucomip fidivr in dec lahf lret inc cmpsl fwait data16 mov into pop (bad) (bad) lcall add (bad) fisubr movsl bsf rcll mov jb pop push dec aas jl pop loopne incl lock jns into test fimul (bad) call xor lret pushf mov int3 cmp cmpsl push les daa inc push stos aam xlat mov icebp inc pop lret and dec pop cmc ja (bad) lcall lods mov aaa and shll aaa fcomp or ljmp pop and mov movsb js cmp fadds lods pushf in (bad) mov add mov xlat xchg (bad) mov inc xor add pop outsl adc in mov nop adcb (bad) mov sub (bad) in daa int3 inc push dec mov and mov sub adc pusha ficomp in (bad) lcall jo add or add pop jmp pop lcall outsl sbb sub mov mov jnp in add decl test mov xchg loop xor pop mov pop mov or xchg outsb (bad) (bad) xchg cmp addr16 jmp dec test mov push out adc cmp add mov pop sbb cmp lods (bad) jb xor push aam xor jmp (bad) (bad) (bad) ljmp mov dec pop fstl inc pop jmp sbb (bad) (bad) call sub sbb cmp push mov das inc scas cmp dec lcall loop mov fidivl lahf mov fstl out inc (bad) (bad) (bad) pushl push into loope mov out jecxz std mov imul or stos (bad) (bad) incl push mov mov push out pop pop cmp idivl das pop mov jmp movsb repnz cmp adc rcll mov enter test lds call xchg push orl jecxz popf in in pusha (bad) (bad) (bad) fildll hlt xchg inc rorl adc loope test lret mov rcrb lea rorl mov repz aaa daa popa inc fistpll push aas negl pop dec jno push ds xor (bad) (bad) inc ljmp popa push pushf and pusha cwtl cmp test push out cwtl and (bad) movsl incb adc sbb push mov and pop mov aaa cli add inc fs mov add inc in cmp rcrl jp sub or jg jb in ss push xor adc mov cs cmp loopne call out cld xor jmp cli or fnop (bad) ljmp movsl addr16 pop push and jae inc inc inc inc mov das js rolb addb cmp or test mov mov add (bad) fsubrs gs mov jmp mov enter (bad) movsl rorb pop std lcall aad mov pop mov fiadd cmp pop aaa jp ljmp (bad) pusha push mov leave out fcompl (bad) mov aaa sahf mov adc fsts sbb xchg inc mov (bad) (bad) mov mov cli negb fs gs shrl and aam nop (bad) scas cs jp mov aaa inc lret cli push mov mov call mov shl and rcl shll jge ficoml jl sbb add and into rolb sub push nop loop sbb arpl (bad) (bad) (bad) jg adc (bad) and addr16 out loopne (bad) cld sub jmp cmpsl addr16 pop xchg out mov in push cmp repnz inc out in sarb push pop nop push lea jge (bad) lcall mov fucomip fnstsw jae ja mov push sbb popf dec outsl pop imul in pop cli les sbb rclb jg aad sar push sbb xchg xor or pop cwtl cs (bad) (bad) cmp ljmp xchg mov sub outsb push lds xchg fnstenv mov aam (bad) incl addr16 in mov mov xchg add xorl cs sub fwait pop or push fwait push cmp rclb dec xchg jnp mov das push iret sbb lea adcl cmp (bad) (bad) jg std mov aad sbb cltd jne (bad) mov mov xlat fnstenv (bad) (bad) (bad) ljmp jmp xor sub pop popa flds cmp add or lcall sti sahf dec out cli (bad) (bad) jmp (bad) flds xlat xor xchg jge sbb xchg inc outsl (bad) (bad) decl adc sub cmp dec das dec rorb arpl (bad) dec xchg ds pop push mov mov mov imul notb sub mov adc into stos jb jp (bad) (bad) pushl ret lods int jb pop imul rcl or push fwait sub adc fildl or data16 loop lea inc lds popf push add mov or xorb jo pop cmp (bad) (bad) cli mov ljmp jae sub daa mov xor je shlb mov push int3 aaa (bad) outsl icebp fsubp lods (bad) xor sbb dec sarl imul call clc outsl or (bad) aam addr16 outsl add push xchg adc ficomp and inc outsl hlt mov cld ds xor and cwtl mov jbe clc (bad) push orl jle lcall adc fnop js mov xor sub lret push dec mov push (bad) lret xor outsl fstps sahf stos adc sub pushf add jge mov add inc add imul mov dec xor sbb xchg fucomp fdivr out push inc mov or stos pop jp (bad) call mov push inc lcall inc jg (bad) pop xchg icebp outsl xor orl or insb ss repz inc stc (bad) int3 imull (bad) outsl hlt (bad) ljmp addr16 idiv divl sahf int3 add jle scas lods roll clc (bad) call cmp imulb out (bad) jmp out out mov je,pn pusha (bad) lods (bad) lcall mov pop xor ljmp rcl loopne ret test mov fildll roll imul loopne loopne (bad) mov pop push sub and sahf insb into pop les cmp pop xchg pop ret icebp rorb (bad) mov and sar ds lods pop clc and notl in ret or clc into mov mov call fidivr dec std xchg push ljmp cmp jp into roll (bad) (bad) decl int pop aas pop mov push pop nop push or std jnp outsb mov test pushf scas push lods sti (bad) (bad) (bad) mov arpl or lods mov fwait mov subl sub (bad) (bad) jg cmp pop test repz loop and in in test (bad) (bad) (bad) mov xorb in addr16 icebp pusha mov and inc add call mov cmp scas push adc inc add xor inc (bad) (bad) (bad) incl pushf jnp popa push repz negl jns,pt cmp shrb sahf enter xchg cli (bad) ljmp and mov stc fadds xchg in push call cmp pop testb and imul push dec pop pop jae pop aad loop inc daa pop ret push push pushf sub mov xchg scas push sub cwtl mov and xor mov push test add mov pop test aaa movsl (bad) jg repnz test dec and jle push (bad) out mov (bad) (bad) (bad) jp hlt jg push mov subl jae repz or jae add or loope outsb movsl cwtl lret sub adc adc ljmp icebp dec push pop (bad) jnp outsb imul loop adc jne fsubr mov pushl cwtl clc sub lahf stos jp sub xor pop dec (bad) in movsl mov mov js leave ljmp lods sbb sbb cli mov (bad) and and daa dec pop jmp insl int3 dec sub (bad) (bad) (bad) decl loopne (bad) mov xor mov (bad) mov (bad) adc sbb pusha stos cmp pop aaa ja in call push jl jge fidivrl jmp imul mov (bad) dec adc adc mov xchg lea xor adc mov mov ljmp cmc aas in stos push xchg fnstenv lcall pop mov call rcrb lock cli or cmp lcall mov in ja pop imul sar aaa cli decl sahf mov adc pushl inc jge dec dec fidivl lcall xchg div mov cmp pop ds (bad) icebp adc or je lcall pushl xchg clc loop mov jb popa sbb popf pop dec sti mov (bad) (bad) (bad) lcall es pop xchg xor mov push mov push (bad) (bad) fcmovnb (bad) jnp add das mov rorb repz mov or in add sub mov call lods je (bad) decl std and or je inc mov jne mov arpl (bad) (bad) call or rcr dec push daa lret std aaa pop repnz out adc jo add or push call lods bound jp ljmp aad cmc mov lods dec xchg aas inc push push sbb test pushl xchg mov (bad) shl movsb fmulp cmp mov scas fisttpll (bad) (bad) lcall pop cmp mov push cmc in subl arpl mov adc lcall mov scas lods xchg scas dec test shlb lret lret mov idiv (bad) jle push insl cs mov pop pop and aad mov out add jl xor loope and in (bad) xor pop fstl fisttp mov cmp ss mov ja adc jae inc sbb fildl and nop das cmc fistl stc mov cltd pop sub pop add in hlt into and lock out imul inc neg in (bad) mov adc in lock mov xchg idivl pushl mov add and add pop hlt sti repnz jbe insl fcmovnbe add mov das pop dec lods or (bad) decl lea enter cltd cmc inc xchg daa push xor lods (bad) fisubl movsl push aad lret jl mov cmp int3 (bad) (bad) decl pop mov push push (bad) clc sbb cltd aas cmpsb test xchg jo fwait sti test bound pop or or or and xchg ja mov jno push xlat ficom ret sbb mov testb xor xor cmp cmp test loope cmp decl iret adc sub mov inc push and cmp mov clc repnz jg (bad) (bad) decl aaa pop in adc mov insb sbb mov pusha and jg sahf in jbe pop ljmp inc cmc push mov aad xor fisub push es es mov mov (bad) (bad) fbld enter gs adc sub cmp mov jo fldl adc test xor mov cmp mov xlat rorb das out (bad) lcall daa dec xor iret ljmp xchg repz mov inc or jns pop loop add dec xchg xchg mov mov jecxz pop cld (bad) lcall (bad) inc mov inc jmp push cli cltd jo or xchg dec mov (bad) ljmp mov jo push or (bad) dec mov ja test xchg pop out test (bad) (bad) (bad) decl outsb pushf adc jbe or int3 mov xor stc insb xchg mov (bad) call push bound jns push pop adc mov lea inc and fiaddl (bad) jmp dec cltd jb jno fwait rol jno mov cmp pop pop cs insl jbe les jp (bad) jg (bad) mov lods pop push push mov pusha imul mov (bad) incl xsaveopt inc ljmp call mov and (bad) call ss lods loopne sti dec inc in andl mov shl insb dec sahf (bad) (bad) decl sbb push push push push dec push sub fwait cmp inc sbb jg out and rclb and sbb jnp cli or xlat xchg mov ret mov dec mov xchg mov adc arpl bound cmpsl jns (bad) sar (bad) sahf repz mov push repnz fstpl insb leave jnp popa les cmp cmp pusha aad add (bad) (bad) mov hlt lea jb mov daa inc popf es adc nop (bad) (bad) lcall loopne cmpsl or add in test sbb cmp out dec inc fnstsw jg or jmp mov cli (bad) arpl (bad) (bad) (bad) (bad) call lds pop fwait jno (bad) lea (bad) xor fdiv jbe or dec mov imul sub out (bad) (bad) mov and idivb out test or dec popa sub lock inc inc imul or pop (bad) xor jmp inc repz pop mov xchg test push mov mov cli inc dec movsl sbb or (bad) fistpll lea dec aas push in scas mov lret in sbb jle insl aas cmp add loope (bad) (bad) andps pop pop lcall ljmp popf jp ret xor out decl cld leave mov pop daa into dec push inc fnstsw fldt inc in mov xor (bad) (bad) (bad) pushl cwtl add sbb dec les xor test mov in pop (bad) popa ficoml add pop ja adc lock inc arpl stos push mov cmpsl mov sub and aam and jmp inc inc fdivrs xor es movsl sti adc (bad) jg jmp inc lea mov dec mov loope clc sahf test js (bad) ljmp insl pop adc mov mov ss sbb mov test pushl push push loope sbb sbb or jecxz incb sbb lods (bad) adc fs (bad) (bad) call dec jo pushf enter pop data16 jge jb insb imul or and ljmp lret mov cmp mov fsts sbb int3 xchg lea adc sbb xchg mov rolb cld ljmp dec xchg mov sbb or (bad) mov sahf test into out mov in test cld mov in mov pop add add (bad) (bad) lcall ja fwait mov jb stos sub mov clc call jbe pop push pop loopne xchg cmp popf inc pop pop aam sub add std ror adc xor in and inc repnz pushf inc mov js adcl sahf xchg inc sub mov push push je push pop cmp test andl ljmp push and in push je shlb (bad) (bad) decl pop cmp enter fcomps xchg xor push (bad) jbe mov sbb xchg clc pushl aas xor aaa adc repz dec push pop dec adc (bad) lcall add push push inc lret cmc jmp cmp cmc into push pop icebp (bad) (bad) (bad) (bad) jns jp int push popf ss add into fwait mov sub call int and mov mov mov jb jbe out pop sub push (bad) pop call jb rorl ljmp pushf xlat (bad) (bad) (bad) mov mov jmp jnp xchg xor mov mov jbe xchg ljmp ljmp adc nop xchg stos insl loop and push fwait shrl pop inc (bad) (bad) (bad) decl cwtl inc aad cmpsl mov sbb mov bound sbb and add lcall fs inc daa jnp xor scas mov cmp inc push add (bad) cs inc pop movsl icebp shll aad mov and fstpt loope mov (bad) incl xchg fidivrl mov fcoml out jns insl test push add pop (bad) (bad) decl dec (bad) fsubr (bad) inc xchg mov pop inc push lret add inc dec movsb mov stos stc mov mov or xor xchg nop add xchg xor arpl (bad) inc lods stos xchg frstor data16 xchg and inc fwait sbb (bad) cmc push (bad) mov pop movsl sub loopne gs jnp push mov outsl ljmp jle insb aam shr pop jb or jge (bad) (bad) (bad) incl xor sbb and cmpsb sahf ss (bad) in mov adc ret loopne call (bad) xor ret cmc insl fsubrl sbb mov cld pop jle outsl xchg repz add scas push das icebp add pop pop mov sub mov (bad) jmp jns pop cli fcom aas cmpsl and and cmpsb and add pushl ja icebp mov pushf sub aaa xchg xchg imul or sub in rorl lret gs int daa inc sbb dec xor cmp jo out jmp mov cmp push xlat push adc jge sub sti pop add cs popa jmp loopne ljmp notb cli rcll clc jmp xchg loopne incl cmp pop cwtd cmp imul das std mov out mov jmp repnz frstor and pop call push dec mov mov add test jmp xchg xchg insb add enter mov adc (bad) jmp insb adc adc nop inc inc jae dec cmpl inc jle (bad) (bad) fbld ja nop sbb jmp jg and adc push pop jno mov call imul mov jns pop inc enter jb jp fiadd cli (bad) mov mov sbb ljmp lods jne adc jge sbb or xchg mov sub mov mov cmc cmp mov int movd ret in (bad) (bad) (bad) lcall daa and mov mov rcrb (bad) lea mov aam (bad) mov inc xor jge inc xchg aaa dec test (bad) lock popf (bad) push sub and pop inc inc push sbb (bad) mov or or adcl popf aas adc lods incl dec hlt push adc pusha xor inc sub inc mov scas dec or dec das in sbb divb popf fimul sub rcrl std (bad) in imul fiaddl mov stos jecxz sti (bad) mov bound xchg (bad) fisubr scas sahf repnz insb push add loopne (bad) mov sbb ss leave in pop push jns and xchg cmpsl cwtl lahf dec push (bad) (bad) (bad) (bad) roll in std imul mov cmp fnstsw (bad) lcall test sahf js xor aas and test rcr pop lcall mov popf jne inc jle sbb mov call (bad) mov add cmp pop push sbb mov negb push mov cld (bad) incl inc movsl adc xor cs hlt movsl std (bad) decl mov mov jbe sub cld movsl inc lods (bad) shlb adc push (bad) pop mov sbb mov les lcall and dec xchg sub insl xchg mov ror mov je pop (bad) (bad) (bad) jmp fildll mov jnp ret in mov sub fiaddl push or sub mul lea movsb call xchg and push mov sti lcall into in outsb jae sub out sbb fsubrl sbb call incl dec sbb pop cmp xor inc out inc pop es call mov cld or test xchg jo jp cmc mov enter mov jmp jl inc cmp sbb xchg jecxz adc imul aaa and loop and sbb jno jbe or ret std (bad) fistp dec in (bad) rcrl clc ljmp push call sbb push cmpsl test and (bad) (bad) push ds repz xor (bad) and adc lcall les jnp xchg jp,pn mov fucomip ljmp dec popa pop lret in hlt pop stos mov daa rcrb (bad) incl (bad) mov or sbb outsb push and out fstpt sarl in mov mov mov imul cli jns loop sub inc mov movsl fisub rorl lcall jmp fisttpll sub xor inc int fisub (bad) (bad) mov les xlat lods fwait mov aad pop and (bad) pushl iret pushf or scas or sbb cmp inc in add ljmp and (bad) pusha fistpl hlt (bad) (bad) lcall mov and sub and or aaa cli (bad) mov adc aad or sub cmp xchg mov stos add jl push aaa clc (bad) lcall fcomp xor fbstp mov xor push pop pop cli decl jg movsb sub mov jmp int3 ror mov (bad) decl sbb test hlt popf shrl add adc xchg inc mov (bad) (bad) mov mov or pop rol inc fwait insb in (bad) jb nop ss mov mov jne mov cld mov in ljmp enter xchg pop pop pop pop xor rcrl jecxz inc mov outsb mov jg mov inc insl xor mov dec sbb or daa aas subl aad popf xchg arpl (bad) decl cmp je iret xchg aas sbb aaa rorb mov xchg cli jmp inc stos jbe pop xchg les xlat mov xlat and stos sub out jge sbb adc aam lret sbb sbb (bad) inc aad test and jnp (bad) xor repz cmp sti xchg out or stos jg jbe mov mov sti int3 lods nop aad (bad) (bad) (bad) push ss cmp cmp popf mov in cmp pop sarl adc cmpsb rol and push (bad) (bad) pushl adc cmp or fwait int3 inc jno lcall sub call push and adc push mov loopne stos cmpsb mov in test std lcall in mov pop pop inc mov aad jne mov adc in (bad) ljmp xchg cmp xor add jge pop inc sbb fsubr lods jle (bad) arpl (bad) and repz cmp mov mov repz push cltd sahf add jmp push push mov and cmc daa movsl sar mov sar jmp out dec push sub push repnz mov (bad) call push jle fwait mov stos aas and (bad) rcrl jl sub lcall mov movsb test loope shll pushl clc ljmp push iret roll push push adc pop mov popa idivb out pop mov or xchg xor push in (bad) call incl pop call (bad) mov pop lcall dec lret xor fisubl adc rcl in push jae push mov push enter ljmp shrl add daa inc xchg sub (bad) (bad) stos mov (bad) ljmp jo lods xor sub popf scas push and rorb (bad) (bad) jle push mov (bad) das pop mov (bad) jle (bad) decl insb sti cmpsl push jecxz cmp aam mov xlat sub aad cmp adc mov lcall rorl dec lahf jno mov fnstsw fnstsw loop cmc lcall lock xchg (bad) (bad) mov pop insl pushf mov push inc push repz sbb out test daa aam loope jmp sbb or mov xchg ret pop (bad) jno sub cltd std aad ljmp pop add mov repnz insb pop mov sub (bad) mov bound stos lret idivl pop les loopne cmp loopne (bad) (bad) call insl adc sti in inc xor es mov add jno xchg imul xchg (bad) decl test pusha mov adc mov or xchg sbb lcall aaa js and sbb (bad) notl jge xor fdivl and inc movsl (bad) (bad) test mov rorb mov cmp jg dec xchg lcall (bad) mov movsl adc aad (bad) ljmp inc aam or and push mov jle push or bound mov incl (bad) out inc fcompl xor sbb fucomip lds mov sbb xchg and pop aaa stc (bad) mulb sub pop xchg xchg fiaddl cmpl sbb inc jae (bad) (bad) call pop in mov xchg es dec pop int xor call mov jmp inc (bad) push stos (bad) (bad) lcall outsl and pop (bad) or mov xchg xchg cmp xchg lock sbb das add pusha aas movsl and aas scas or incl (bad) ljmp sbb push fwait inc enter rcrl cmc or jmp arpl (bad) sar pop dec (bad) jle cmpsl imul or mov inc (bad) (bad) (bad) lcall int3 imul inc pop inc inc xor sbb enter xor mov (bad) lcall js movzbl mov sbb addr16 aaa fistpl aaa das icebp das cld stos fcomp push subb icebp inc ja,pn aas add (bad) (bad) (bad) cmp jnp (bad) out aam mov outsb andl dec mov dec cmp int xchg cmp jmp xchg gs (bad) adc xor xchg mov lcall or rcll imul inc ds enter ljmp (bad) pop and add cs dec es xor sti loop imul and aaa mov jno stc lcall dec push int3 xchg dec and add lods mov shrl addr16 lret cs push fadds pusha gs in (bad) mov mov push and out lret (bad) repnz mov (bad) (bad) clc pushl insl xor les adc data16 cmp sar add ret push jb stos call (bad) call sub movsb xor outsl jl push movsl adc mov sub sbb icebp (bad) (bad) (bad) ljmp aas sbb push movsl (bad) cmp stos mov jp test into pop push xchg aad incl add (bad) inc fnstcw mov scas jne stos sub loopne jge aaa (bad) dec call xchg aam and inc mov out mov xor jae call or fidivl and inc (bad) fs (bad) jg out xor insl popf cmp sbb fsubrs mov (bad) fnop and pop sub jl jge push jecxz les loopne pop clc (bad) (bad) mov dec mov ss adc sbb push in push outsb lret pop mov cld pushl test xchg int3 pop fs mov jge add (bad) (bad) (bad) inc (bad) sub xlat test mov shr xor scas call mov lret scas sbb jg in cltd imul cli cli and pop or jb sub mov push outsl cld (bad) xchg xchg leave insb mov adc decl cmp dec mov lock (bad) or lcall (bad) (bad) call sub out cmpsl (bad) xchg nop lea fs push mov sub pop fwait jnp dec jo xor insl (bad) mov jo fmulp js xlat outsb cmc das std sbb in ret cmc stos push cld lods cmpl decl decl mov loopne xchg pop inc cld (bad) decl stos arpl outsl mov pop cld iret imul mov xorl mov (bad) xor add push sub shlb sbb nop inc outsl hlt (bad) call inc nopl pop dec mov shrl mov call out int xor push inc ror (bad) into (bad) (bad) ljmp inc mov test into adc (bad) out aas or mov call (bad) (bad) incl outsb fbld jle,pn nop scas incb sub stos mov add push dec add insl loopne pushf xchg and icebp push mov mov shl (bad) (bad) (bad) cmp das daa mov pushf out into sub lret cmp cmp inc jg adc jnp (bad) mov add leave xchg mov cmp sub lock sti sbb mov cmc out pop mov mov push cwtl (bad) mov (bad) decl dec mov (bad) or popf js in sub in sub (bad) (bad) (bad) push push pop icebp xchg pop mov lods push pushf sbb aam (bad) fsubl jno sub les add out shll jge (bad) mov ljmp out stos adc (bad) and (bad) (bad) (bad) fxch aad fcmove push out push jo xor punpckhwd cs xchg xor xor lock jns nop icebp adc popa jecxz sbb ljmp push mov sarb sub or popf inc xchg out or inc fdivs rol es lcall xor aaa daa (bad) lret sti add xchg test jg ja lret ljmp xchg xlat stos xchg icebp dec and dec cld call jmp push (bad) aad out icebp and mov jmp push popa mov fwait imul jg cmp add movsb cmp pushl or push cmp dec pop fucomi jo and outsb popa (bad) fmuls sbb dec pop cli add push dec (bad) cwtl inc hlt dec (bad) aam jle sahf ret loope jb mov xchg (bad) ror cmp (bad) (bad) ljmp sbb xchg mov lret insb mov out in je call mov cltd dec mov fldpi aad mov jp insb pop or cmpsb ljmp hlt ljmp adc or and scas add add sub icebp jnp mov xchg push adc iret (bad) into repz jecxz dec pop adc cmpsb and cmp xor (bad) mov dec lret popa (bad) movsb insb cltd cltd lahf pushf dec pop push and (bad) incl int xchg scas fcmovne xchg (bad) jmp (bad) call cli inc fwait mov aaa mov mov cmp arpl (bad) decl fcmovnbe pushf lret das adc stc stos xor repnz sub (bad) (bad) decl jp stc adc andl pop xchg mov or jmp or mov inc add sub (bad) je js lods call (bad) fbld xor sahf notb push mov sbb mov fdivrp (bad) (bad) incl (bad) add and lahf lods (bad) mov pushf ficomp push jne mov rcll shll add js mov sub rcll test dec sub stos jg (bad) pushl add in cli add ljmp sub incl das cld jno sub les xor fisttpll pop loop decl dec xchg add nop or pusha add push cmc decl push das cmpsb pop mov (bad) bound inc sbb outsb movsb push add lock incl pop or fwait mov pop loope dec loope stos xor std (bad) mov das mov push sbb inc leave sbb (bad) (bad) call mov cmp pop pop jp and xchg fwait inc cmp jecxz lea dec cmc ljmp nop jo insb dec cli inc arpl jno imul add xorb xchg lods notl into pop fisubrl cli fnop xchg pusha push inc negb shlb push outsl lock ljmp mov mov lcall jg or lea push pop test sub pop or cmp loopne pushw out xor and ss sar (bad) fnop loopne inc fwait xchg inc jmp and dec scas push pop xor cli jno or scas mov (bad) (bad) pushl sub lret pop rclb mov push adc jns cmpsl cmp insl cs (bad) pushl clc sahf shrl sbb icebp aad clc stc sbb dec sahf adc adc decl je adc jbe bnd adcl out sbb (bad) (bad) mov sub pop dec (bad) mov xchg sbb or pop rorb inc inc (bad) (bad) (bad) push imul pop in mov or jae leave cmpxchg jbe jge adc ljmp jae ficompl rclb icebp push fiadd xor sbb push push pop or sbb out push scas jg leave mov push add enter and adc mov (bad) decb stos call ljmp jbe xchg int3 das sub (bad) jg loopne subb sub bound jnp adc insl inc js les mov js mov mov xchg mov mov (bad) cltd add add cwtl pop arpl ret leave mov andl or lods mov push jno loope push gs adc (bad) jg or cmp sub hlt jp mov ret and jg push test inc cmpsb mov fldt inc clc pushf lea (bad) fildl loope scas push sti sbb out (bad) in adc jecxz aad je sbb or out pusha and movsb gs (bad) mov mov stc inc dec std mov das cmp clc (bad) jg insb aas dec jb and jno mov shlb cmp pop jg ret mov nop pop into test (bad) push out and outsl jae sub push push sti mov fsubs (bad) (bad) jmp pop aaa or stos inc xchg adc pusha push in mov xchg xchg mov adc jo pop jl (bad) (bad) (bad) cmp shrb lret daa jo mov add outsb and iret les sub xchg inc inc divps pushl xor jecxz outsb popf cmc sbb or push mov aaa push je int3 outsl loop clc (bad) jg xchg jecxz test ret idivb inc scas and push mov pusha test loope aam (bad) lcall cmpsb push insb rolb sbb insb adc gs mov adc sub xchg pop mov std js jo (bad) pop inc cmp and stos hlt add inc out (bad) fcoml pop inc jl insl cld jmp test movsb (bad) ja call xor xor ds (bad) call xlat and std add add lahf cld insb lret data16 arpl (bad) inc sbb xchg cmp xchg ds xchg cmp pusha or (bad) cli das jle popa xor cmpsl insb adc pop cmp jb ficompl mov and mov jecxz lcall cmpsl and movsl (bad) call out sahf mov loope cmp jno fistpll add (bad) (bad) cli xchg es and jmp and xor imul sar (bad) mov mov sbb jb jbe insb je or (bad) (bad) mov add pop push iret pop mov jl inc in out imul dec faddl xchg test insl xchg gs fildll daa (bad) mov int (bad) (bad) (bad) lahf sbb fildl call mov dec das push jecxz (bad) ljmp ljmp inc jns adc pop call das push cs mov js cld loopne dec fdivrl call clc call das loopne jnp cmp sahf dec lret je shll ss adc int3 and (bad) call fisubrl push loopne test ja cmp in iret dec out sar (bad) inc mov inc sub push jns in test (bad) cmp jle scas ss lods inc add push lcall xor or nop addr16 (bad) das std mov in aas pop clc pop jle sti mov pop jb cltd gs (bad) (bad) incl frstor cmpl movsb or sti mov dec jbe cmp jo or push sbb push loope and inc xchg (bad) outsl cmc ljmp (bad) inc lds or mov inc pop sarb dec mov inc xor inc das pushl lock mov add int pop pop mov xchg or fiadd (bad) outsl add ds or pop and cli sbb fdivs sti dec cli (bad) xor (bad) stc fwait (bad) ljmp leave leave decl fwait aaa std dec xor int addr16 cli scas add (bad) (bad) ljmp jl (bad) xchg sti xor cmp or iret mov shrl jnp jmp out negb jecxz jp (bad) js stc jbe xlat in xor (bad) mov mov pop mov dec jmp test mov call cld jb xchg loop test push jbe mov mov (bad) (bad) (bad) lcall mov add movsl xchg jae jmp cld dec mov mov pop xchg xchg mov fucomip sub sub je jmp adc and (bad) (bad) ljmp stc es pop mov rol fldcw sub mov xor adc jmp xchg inc inc sub fcmovnb ret pop or aaa fisubl dec dec int fcompl inc (bad) in adc pop cmp jmp lcall repnz (bad) decl sub cmp dec pop leave test imul imul (bad) jg lcall add mov ficoml (bad) push gs add fildll adc das cmc jmp or pop lds sbb jge lock call in adc bound dec cmpsl mov (bad) je (bad) call outsl dec stc imul lods popf in inc and mov jp pop (bad) (bad) (bad) (bad) fucomip clc or mov cs jge cs mov cmp add (bad) jg in cld jno mov mov (bad) push das test sbb pop cld push fbstp cmc jnp xor dec or (bad) decl ss (bad) mov sbb repnz mov jmp pop cld ret (bad) mov repnz int mov (bad) pop inc icebp dec xor xor lahf pop cld (bad) (bad) out jns push xchg les dec xchg loope pusha ja daa pop or mov cld pop ljmp aas bound mov outsl cmc ljmp xchg fisttp sub mov dec pusha jl rcrl xor mov adc inc push lds test add xor fcoms jnp jg call es or test (bad) (bad) pushl mov mov sbb out add in mov jmp inc jbe sub jno test aad pushl mov in cmp outsb jge hlt mov (bad) ljmp scas (bad) jmp mov das aaa je stos cmp (bad) (bad) mov leave jmp or icebp test and fcmovnu insb movsb jnp inc loopne (bad) push scas lock push xor in imul xchg (bad) mov rcr jl cmp jae or fstpl lret add ljmp incl and outsb push leave lret dec lahf sar addr16 fidiv ljmp (bad) ljmp in int imul je push (bad) roll xor inc rol (bad) jg pop in pusha insb fdivrs test shrb dec jno,pn clc repz imulb and jmp push out insl jl xchg test aam loopne int3 mov pop cmp cld mov ljmp mov bound or fldenv adc outsl cld (bad) mov xlat call imul cmp ret mov mov nop mov adc pop insb clc dec cwtl jo pop xlat and pop mov sbb ljmp add aas mov (bad) iret pop jle (bad) out inc mov arpl (bad) (bad) ljmp (bad) icebp pop dec pusha rclb cmpsl sbb fcomps mulps ret mov es leave adc xor xor daa cmp addr16 push sub dec loop cmp jae sub mov (bad) (bad) cmp test mov daa sti dec in mov loope arpl inc pop loopne sarb pusha lods movsb pushf or int xchg (bad) mov in mov movl fldt xchg cmp insl out (bad) (bad) (bad) jnp xlat jnp lahf in pop out adc les cli sub call xchg popf mov repnz and jecxz mov sti sbb mov pop (bad) (bad) (bad) lcall dec add xchg ds sbb mov hlt lods jbe lret test hlt fimull push popf dec popf (bad) out icebp or inc push icebp mov idivl push mov sub enter pushl inc jmp or xchg popa jnp (bad) mov lret (bad) push (bad) mov pop xor js (bad) pushl in xchg xchg jo push arpl dec mov int adc je mov fisubr jge lods mov std fnsave shrl adc sar jns bnd fist out fwait mov push sub fs incl (bad) ljmp adc sbb xor ljmp rorl (bad) nop out aad inc cmc ss jnp test mov test in pop daa out (bad) lcall jge movsb jo data16 lret and lret inc add rcr cmp xchg clc sbb and push jns outsb mov and mov ljmp icebp jmp cmp fld out pop lea fsubrp leave in push mov sbb stos adc (bad) (bad) mov ja add scas movsl pop loop inc loop in cwtl stc mov lods cld mov xlat pop cs mov sahf gs adc (bad) (bad) in or lock imul adc bound pop (bad) fnop jmp push js jmp (bad) mov enter adc (bad) call mov jl rolb outsl fwait scas sti aaa lret mov ljmp jmp jecxz cltd fcoms stos fidivrl xchg (bad) (bad) incl into jne (bad) or add xchg mov pop popf xchg (bad) (bad) pushl xchg (bad) xlat cmpl (bad) test mov lods fiadd xor fwait fwait arpl (bad) mov dec cltd xor mov add adc xor push hlt mov fcoms add lret mov mov or test std lods out or inc iret xor sub mov lret ljmp lock lahf xchg pusha inc jo ret outsb movsbl decl cld inc adc mov adc movl les mov mov jg lcall int3 dec jo and sub xor lahf inc push dec aaa jecxz (bad) das cmp in and mov shrl cmc (bad) (bad) jg call push (bad) shlb stos loopne ljmp mov mov out and cs mov xchg incb (bad) pushl xor fnstsw aas sarl fnop push mov xchg inc fnstenv xchg arpl cmpsl into mov pop xchg mov pop int3 dec jle sbb into out lock decl inc leave inc int scas xchg jle ret mov xchg js incl (bad) cmp jp dec mov pushf mov mov scas ret fbstp mov pop cmp cmp pop rcll adc pushl (bad) rclb add insl stos roll pop ret sarb mov lcall mov mov sub sub mov (bad) (bad) call cmp adc xor lret in xor (bad) data16 (bad) (bad) (bad) cmp xchg icebp dec pop mov fidivrl cli lret push orl out mov lret (bad) call (bad) jge std aad or adc mov jnp xchg jge cld jecxz shll ljmp fisubr int loop dec (bad) incl lahf push jo iret xor out fldl bound (bad) fistp scas cmp adc add inc fsubr xchg sub out or sub (bad) (bad) fcomip sbb stos jecxz inc stos ljmp mov pop add incl lock popf (bad) jne outsb cltd repnz (bad) pushl cli loopne movsl mov jmp jl add add (bad) and add daa fbstp jo push adc loope jecxz idiv (bad) (bad) (bad) jmp pop dec stos scas test and pushf mov mov jnp test decl push or adc (bad) ja insl mov or mov in jecxz (bad) (bad) call in shll call or pop xchg pop xor (bad) jg jg aam fwait mov ja mov pop xchg push add fadd fstpl outsl shl mov push and mov (bad) outsb push insl pushf xor (bad) inc and push adc jp push cmp jg jp xor jecxz incl cmc (bad) mov roll sbb aaa clc outsl (bad) cmp movsl fmul fsubr mov or data16 cmpsb sbb cwtl aad test (bad) (bad) (bad) jl,pt xchg sub hlt mov pop dec cwtl pop dec sbb mov mov add (bad) (bad) (bad) call lods adc sub xchg pop cmc aad mov repz fsubr cmp in xchg dec sarb jmp jns or ja ljmp popa imul (bad) decl sub push stos push mov lods sbb (bad) imul addr16 (bad) lcall push mov ljmp xor bound mov sti xchg cmp ljmp jmp push sbb cmc cmp in (bad) aad imul sahf jns mov pop loopne adc jge mov push mov xchg sub mov push sub (bad) insb add insl pop jl ss repnz sahf jmp icebp outsl pusha dec jmp jl out push lret inc pop pusha (bad) das jno xchg sub je lcall (bad) (bad) (bad) fcomip mov xor push or mov shlb xchg pop loop movsl jno mov clc (bad) add shrl hlt in pop insb pop (bad) push cmp lret or mov (bad) pop xchg lods cs lcall ja cmpsb (bad) mov icebp out push push sub and pop add fbld jae mov jne aaa add jg das incl insb in push js sbb pop jge cmp sub pop sub addr16 inc inc insl sarb (bad) out sub fs orl push jo sbb jp fadds std (bad) (bad) incl fistp adc jnp pop leave pop or dec inc jo mov fildll rol in push mov cmp outsl ds inc mov adc jmp loopne push (bad) (bad) (bad) jg xchg pop inc roll lea adc out and (bad) jmp lahf clc and push aam out addr16 or dec pop mov lds andl or adc mov int3 pop push adc hlt xchg outsb xchg int3 loopne fldz cmp pop jb mov mov repz sbb sahf pmulhw push add rcrl (bad) xchg in cwtl cmp sub movsl lock rcll fsubrl (bad) push pop sub push mov ljmp xchg mov icebp adc (bad) cmp jp (bad) arpl (bad) (bad) (bad) jmp in call incl xchg or popf and loop scas dec hlt push (bad) pushl sub sub mov sub in (bad) fiadd das into pop flds xor xchg fmuls repnz pop (bad) jg inc fidiv mov and popf jno fwait sarl pop jo fucomip (bad) incl sbb ret mov jg pop jns popl mov outsb js jg jg adc mov lcall adc (bad) (bad) stos mov cmc adc xor jp (bad) jl jmp jmp sub pop ljmp popa and iret pop xlat fwait jg (bad) mov cs dec repz dec jmp pushl cli pop and pop xlat cmpsl and into sbb ror les sub (bad) (bad) (bad) (bad) sti adc push sbb hlt sarl fidivl pop movsb jg (bad) outsl iret into test loopne lods rcrb mov pusha mov in pop inc mov mov fdivrl adc cmc out icebp (bad) (bad) jg lret aad lahf pop mov loop mov int ja es fadds (bad) test jge incl clc stos dec js push or (bad) (bad) ljmp jp pop cs popa (bad) xor inc and fstps movsl fcmovnu dec mov cmp mov cwtl addr16 cmpsl xchg stc pop fmull add pop clc decl mov sub aam cltd mov inc mov jg popa cmp pusha lock (bad) (bad) pushl pop fisttpl xchg add dec popa pop insl cmp cmpl call frstor loopne das fiadd outsl sub mov fcoml decl fdivr movsl mov dec cmpsb mov xchg nop addl ljmp icebp pushf movsl xchg iret sub (bad) ret ret pusha jbe (bad) (bad) (bad) call lods fcmove (bad) in xor xchg out push repnz inc loop mov movsb dec push cmp (bad) decl in push jmp mov mov fs (bad) (bad) (bad) jmp cmp jb sub pop cvtps2pd aam sub les inc jg push cmp out cmp mov lods mov movsb outsl std (bad) jmp inc dec jl xor je push fstl cmp (bad) mov fisub out mov into cmp in push jg (bad) call xlat push cmp int3 xor lcall icebp mov fs dec (bad) (bad) (bad) mov scas sarl ret jno pusha xlat arpl xor jo (bad) sti push or (bad) (bad) (bad) mov adc inc push std (bad) dec lock pop jle mov lds lea daa jmp lret cmp clc lods outsl lock pushf add xor and pop iret and mov int3 (bad) mov mov lods add sbb decl jae jmp xchg dec (bad) inc aaa xchg clc pop clc push dec mov adc std addl shlb imul movsb push scas mov xor (bad) or (bad) (bad) (bad) incl xor pop add push inc mov push mov mov data16 sbb push cld mov (bad) pushl hlt jl sub loopne mov pop fs (bad) outsl clc jge xor add push dec pushf sti sub push das hlt (bad) mov clc dec fmull xchg icebp mov mov movsl (bad) inc (bad) outsl mov inc mov out xchg out pushf icebp xchg inc (bad) mov fmulp push clc mov (bad) aas rcl push out (bad) out daa cli pushl dec insl mov jle out mov jnp sub xor fwait cs pop ss inc repnz xchg fwait imul inc pop mov adc mov push insb inc jg hlt cltd mov mov sbb aad mov dec push add jbe (bad) xor xor sbb jmp jl movsb jmp ja fmull fs loop lea icebp out mov ljmp testb jg push push ret add lahf cmp ret and push ds jne cld ljmp push inc mov lods stos ret jmp repz and mov push inc movsb mov mov sub fcos pop clc (bad) inc mov js (bad) clc xchg js add into add loope data16 xor sub fs add mov les push push jg inc push movl and clc add daa pusha hlt test lds sbb or jl cmpsb mov std jmp xchg (bad) (bad) jg adc subl hlt roll add std cmpsb push out sar mov and dec insb psubw xchg xchg loopne dec (bad) (bad) mov adc cltd mov aam movsb popa paddsw outsl cltd cmpsb push (bad) ljmp call sbb sbb mov mov dec sbb cmp sub (bad) (bad) (bad) decl cwtl xchg jmp scas mov jg jge pop pop outsl subb cmc mov movsl incb mov push pop lods outsb in fbld push xchg sub or (bad) (bad) (bad) call jle pop movsb (bad) jmp insl mov cmc cli sub cmc popf xor stos cltd test lea (bad) lcall dec cmp lds push in inc test add mov fisttpl and jg inc repnz inc xorl xchg pop jp out xor decl jnp aaa lock or jl mov fdivs rorb outsl pop jne ja mov loopne inc lock xchg scas ljmp fwait jb leave mov test fs imul (bad) decl (bad) jb loope pusha lcall mov mov ljmp sub aaa ljmp popa dec std nop xchg lret jne pusha dec adc (bad) lcall bnd insl popa add or iret adc imul xchg mov outsl add pop stc movsl mov dec mov jno inc out cmpsb adc xchg popf test (bad) (bad) (bad) pushl je lea and (bad) xor rclb sbb addr16 ljmp jns xchg cmpsl mov inc (bad) sahf ja dec xchg push jge dec test (bad) lcall adc xlat mov dec dec mov cmpsb pushf (bad) push or ret lods mov pop cvttps2pi pop (bad) push stos inc sar arpl sbb outsb std or rcl iret in dec mov rclb inc cmp fucomip or leave loop imul mov jns pop (bad) (bad) jmp loopne xchg pusha jle fisttpl xor xchg xlat push lcall pop mov popa mov in mov push and jg pop pop lcall das imul push into cmp lret pop mov loop decl (bad) push pop lds sbbl pop lds ja xchg (bad) ljmp aad sbb mov and mov xor das mov icebp cmpsl sbb mov push mov (bad) incl in mov lock xor mov lods pop call incl pop jge aas or scas psadbw (bad) call and pop pop enter mov mov pop imul (bad) lret jmp int (bad) cld out lahf fdivrs stc (bad) repz and (bad) in pop cli (bad) lcall add xchg push xor jns data16 ljmp dec cmp inc iret cmp and ret mov das (bad) fldt stc and es aaa iret outsl inc sub loope or add (bad) mov shrl jp push push loopne xchg lods fisttp (bad) pushl stos mov pop sbb cltd lret scas jecxz add pop std (bad) mov fstps les push mov ret sahf mov cld test icebp mov pop sub rolb pop xor (bad) (bad) pushl out push push push cli push lahf xor pop sub out xchg push mov inc das std jnp jns out inc jp sub add sti outsb xchg xchg (bad) (bad) call in jp mov in jbe mov insb and mov loope test (bad) sbb and hlt add xorb mov mov das cmc (bad) decl in pop in inc push jbe mov imul sbb dec icebp xchg add jecxz in mov subb int jl inc jns sub ljmp pop (bad) (bad) inc mov daa fldlg2 cmpsl xor xchg (bad) jbe push mov and and (bad) jg fwait test fisttpl cmp scas adc ja mov lods mov stos inc (bad) (bad) ljmp dec mov xchg mov cmp dec (bad) (bad) (bad) ljmp and xchg mov mov movsb mov push out repz fstpt sti cmpsb sub mov (bad) fucomi cli movb aad inc daa push mov push and lea mov rcrl shll inc pop dec mov adc xchg pushf lcall lcall or xchg mov mov (bad) mov add fcmovnb (bad) (bad) pop cmpl imul outsb push ljmp dec cmp xor pop clc sbb fcmovne (bad) je mov sub sbb lods fdivrp call lret and cli sub das mov jo xor pop jmp mov mov loope sbbl andb repnz or (bad) jmp outsb pop jecxz push cmp imul mov mov aaa mov movsb (bad) call clc ret pop adc jne mov xchg dec pop push test sub sub pop icebp fcoms or (bad) lcall mov cmpsb inc leave in mov xchg test fmulp (bad) (bad) (bad) cli pop ljmp xchg jb pop pusha or mov stos push std in (bad) and push imul mov ljmp or push clc call inc mov insb cmc xchg jle outsl decl call stos cmpsl stos repz or jno fimul aaa fnstsw (bad) incl mov dec or mov das dec enter decl inc xchg mov add xor sub push push mov cmc pop les out mov stos jne icebp inc mov sub xchg rolb (bad) (bad) ljmp repz jle adc mov clc test mov in stc (bad) movsl xor jnp add add mov lret cs ljmp mov leave ljmp jns mov push push rcr cs pop add mov cs sbb dec jbe (bad) (bad) (bad) ljmp and and dec cmc pop xor adc mov loopne sub xchg (bad) lcall lods dec in mov add lea add insb popf fcmovbe mov jg aaa push sbb and test call (bad) ljmp adc pop or repz pop repnz inc (bad) incl lcall mov jns pop aas mov or addb sub mov lcall (bad) pop mov (bad) fistpl jmp push xchg jle data16 xor cmc dec or inc lea xor hlt outsb mov inc pushl (bad) jg inc jmp mov imul loopne mov inc cmp xor call enter mov aaa jmp popa (bad) mov in adc ret popa rcl in mov mov lret (bad) (bad) (bad) incl fdiv icebp inc xor test repz rcrb jns and add pop mov adc fbld mov sti (bad) (bad) ljmp hlt lahf popa xchg add and loopne pop and and call enter sbbl inc mov clc mov and lods inc adc and sub ljmp faddp or fsubl pop pop cmp test xchg fild test mov cmc (bad) (bad) call cmp ret or ja add adc mov ss incl je inc ss stos mov lods pop subl mov and mov xchg incl inc push in mov push xchg mov nop rorb add decl outsl xor or add pop (bad) (bad) (bad) aas mov fwait gs sub jl sub push push sbb test (bad) (bad) fstl sbb adc jl aad xchg mov cltd cmp inc es (bad) (bad) incl test fwait push (bad) insl mov xchg repnz inc sbb lock push adc mov or aam (bad) ljmp inc push lock push popa or sub shrl mov sbb dec rorl rcl push jge sbb ljmp movsb push test jmp gs or sub adc in push dec ds stos mov sub mov inc pop push sbb sbb aam call xor mov mov std aas add pusha adc inc ljmp das (bad) push mov jg sahf (bad) adc sbb lea cmc imul test mov mov mov mov rorb dec jb (bad) inc das aas add sar (bad) jmp inc pop hlt mov pop xchg insl push and arpl adc xor call clc mov testb ljmp mov les ds and xchg push dec pop mov mov (bad) mov ret or add into mov dec fisubr into mov hlt (bad) out das cld lcall mov push add adc (bad) lcall arpl (bad) incl sbbb xor add push (bad) jmp ret add adc aam sbb jg pushl xor mov or or xchg mov (bad) push (bad) adc std test movsb test and xchg imul (bad) (bad) decl enter lret leave addr16 mov dec mov jecxz adc or insl test mov push mov push push adc xchg inc jp push sbb cmp cmpl outsb les sti jg ljmp rcr (bad) pop mov mov rcrl scas sbb inc mov mov fyl2x movsl pop loopne std aas imul xor mov imul cmpsb shlb jbe sub mov cmp pop lods decl ljmp inc int dec rclb inc setp and (bad) (bad) dec xor lods push ficomp xor xchg push in lds mov shrb insl mov sbb jge,pn movsl test xor sub pushf and adc out movsl or mov jp pop rorb fmul in add push inc insb call inc lcall lret push out rorl repz (bad) decl dec push arpl inc and es and imul jnp mov (bad) (bad) (bad) ljmp lods mov pushf inc lods fsts pop cmc push leave cmp jo popf pop fsubs pop ds das icebp (bad) (bad) js outsl dec in inc fldt inc mov out dec ljmp dec repz aam clc lcall sub inc and dec sub add outsb add add pop aad add sarb sub aas test cmovle pop outsb cld popf mov je sbb jg stos (bad) pop jne (bad) ljmp call in cmp push mov (bad) sub (bad) (bad) mov roll bound sbb mov xchg (bad) xor pop ret test jmp insl add sub flds aas inc push loopne or (bad) lcall enter popa xor adc cli sarl (bad) lcall pushl cli clc mov imulb (bad) lods punpcklbw mov mov dec popl jle lea cmp leave add idivl out sub (bad) xor mov out cltd cltd xor addr16 (bad) call cli or scas inc xor push test and aad push das rcrb mov or and and int push adc jle push pop (bad) dec cld call popf mov (bad) loop inc mov addr16 (bad) jg ret imul mov dec lahf cmovl sarl dec (bad) jg push xchg and jb aam jbe jns push ds push imul out or aas bound popa lahf out in roll cmp dec cli insl push cs (bad) (bad) (bad) lcall arpl scas iret sar xlat pop jne cmp or (bad) lods push arpl xchg ja push cwtl xchg in (bad) (bad) (bad) push xchg stos cmp xchg data16 sub sub pop xchg cmpsb es (bad) (bad) call xchg popf dec pop sbb addr16 mov testl dec rcll (bad) mov ja jne sbb bound push outsl mov std or movsl orl dec push ret lret out adc pop mov ljmp push aad stc jb dec dec adc dec cmp aaa cmp (bad) mov cld dec push (bad) mov xor cmpsb add xchg sti popa test (bad) (bad) (bad) (bad) mov adc cltd mov addr16 and xorl (bad) loope std dec addr16 xchg hlt (bad) (bad) incl arpl xor test xchg jns xchg (bad) mov fwait (bad) (bad) ljmp (bad) sbb add aas outsl mov jb inc sbb sub fisubr jg ljmp std loop xchg aad (bad) push cltd insb stos sub or inc mov (bad) (bad) lcall add mov aad mov (bad) int loopne or lea jno inc lds leave out cmpsb outsl stc pop lock incl (bad) int3 xor jle adc cld mov pop call incl push lds hlt nop adc push adc and inc jp and decl std roll iret mov adc loopw ss ljmp (bad) (bad) call out mov cltd mov dec in push mov cpuid jne push out push outsl hlt (bad) fistp adcb pop sbb push and xor icebp (bad) (bad) ljmp push mov popf orl out mov sbb inc jg jg jne scas pushf shr sub dec addr16 or enter or das std pushl mov leave pop xchg pop jecxz stos cld mov cmp jne (bad) mov fs icebp add or cmc std pop clc lcall pop xchg xor pop stos jmp lret mov int xor (bad) lcall cmp scas test jle pop xchg jecxz aas mov add pop ljmp rorb shrl xchg test subb (bad) jg jbe ss push test dec adc rolb pop stos aad sti dec jae repz insb mov fiadd dec (bad) (bad) (bad) incl add xor fstl pop push ds mov decl inc ret fs cltd movsl fisttpll sub loope pop mov (bad) jbe lcall jmp push aaa inc repz (bad) xchg cmp rcl or (bad) (bad) (bad) lcall push outsb cmp xor (bad) shl sbb mov stos in ficompl ret mov (bad) mov push (bad) jge das adc mov push jmp xchg adc xchg pop loop aam pusha lock mov add mov jae pop lret dec sub imul fs clc (bad) (bad) mov cmc mov pop xor insb cltd inc adc mov or (bad) call jmp xor or cmp jle popa stos movsb dec xor test (bad) (bad) (bad) (bad) fucom inc inc jno mov icebp fs cmpsl pop dec inc jp stos cmp or jle inc push les cmc mov leave neg outsb call loopne fistp inc mov pop outsl cmc (bad) (bad) ds dec add pop and adc dec int (bad) cmpsl loop pop (bad) (bad) (bad) decl pop dec frstor enter and stos jl in xchg fnop adc push lock (bad) (bad) xchg and inc into cmpsl mov cli sub push mov decb pop notb das std mov inc pushf pusha fdivrs scas sbb cltd out sbb cld movsl loop dec jg outsl icebp adc or popf pushf xor jbe inc arpl (bad) (bad) lcall jle mov mov xor push mov sbb mov jns mov xchg fnop push pop push dec insl push dec scas jmp dec in insb (bad) jg (bad) mov lcall rolb sbb (bad) or cmpl mov repnz cmp clc outsl jl mov mov and pop movsb and jmp bound xor xchg cwtl push mov pop loop sar je cmc lcall leave pop in pop lods (bad) (bad) (bad) jmp xor inc and xchg inc inc or test dec scas lock repz cmp adc (bad) mov std lcall cmp out cmp sti adc mov (bad) (bad) pushl mov sbb add mov (bad) lret rcrb and call mov xchg sbb cmp jae call rcr inc inc into movsb inc mov bound cmp (bad) (bad) pushl cmpsl mov test cltd lret out test push lods (bad) pop lcall (bad) fildll jne outsl add enter or call js push push pop push bound (bad) inc addr16 mov aas arpl mov test arpl (bad) (bad) pushl xchg std cmp stos hlt adcl and pop out js cli sub (bad) popa cltd add (bad) addr16 jg sbb lds adc lea dec or (bad) call jmp ss cltd adc inc sbb and lods lret ljmp cld incl pop (bad) fcmovu cmpsb mull popa jmp and lds mov mov mov fiadd sbb call and mov inc adcl xor movsb push pop fnsave (bad) decl xchg adc cmp clc and add rorb push (bad) (bad) (bad) jmp add mov push push shlb sbb sbb xchg lods andl jge fs and lcall xchg push lds movsl ss stos mov and pop mov je sbb cs cwtl icebp ss fcoms movsb incb xor decl fwait or call insb std push mov addl (bad) lcall fbld add out xor (bad) (bad) fist xchg push lds push cli mov (bad) jl std nop xchg mov add int shrb ret push cmc cli xchg cli das and add or mov (bad) jno jle pop adc out dec add or (bad) (bad) mov loopne dec xlat popa pop xchg cmp (bad) cli insb popf es icebp gs (bad) (bad) (bad) jg in jl fmull dec mov in lds mov insb add sub es mov and mov lds mov cmp jbe es ficompl scas cmp sar and xchg movsl pushf divl mov out rcll lock push lea lret inc jl icebp ret inc mov xchg pushl sbb dec inc je (bad) mov xor sbb (bad) in out inc adc jmp hlt cmp adc dec (bad) fcompl stos cmpsb loop cmc pop mov test dec mov push lahf imul hlt mov mov sti popf push mov and decl jae pop in pop adc rclb gs push jl jg das sub arpl mov dec or mov push push sub mov ds repnz stos adc pop push decl jge cltd mov (bad) int test out lods (bad) (bad) (bad) call aam jbe lods and aam inc add notb setno pop mov xchg cmpl adc dec jb mov inc ss aas in fnstenv fdiv or (bad) fnstenv xchg (bad) (bad) ljmp rorl and and push jg popa pop arpl push insb aam cmp jno fs xor (bad) or rcrl mov out in xchg push loop (bad) jg adcb or mov cli cmp mov cs push lods (bad) incl negb scas orb mov test in adc jge xor clc (bad) (bad) jmp in dec adc or pop xor fdiv into out out inc sahf cmpsl ret pop or mov pop stos fdivrs mov push sbb jbe mov mov adc (bad) push mov cld lods mov add jae push and pop aaa xor pop clc mov dec inc in leave imul fdivr sbb mov test dec imul out sti ja adc mov push scas mov mov lods jno incl xchg sbb cmp (bad) adc clc (bad) jg add pop and jo scas fstps jl les jmp pop mov stos xor out and and (bad) (bad) clc scas adc sub add dec jno dec lret mov mov xchg mov inc cli or dec cmp push xchg inc inc (bad) (bad) (bad) (bad) (bad) ljmp stos xlat push outsl inc pop addb pop xchg xchg fcmovb push jle test mov outsl mov decl mov xchg mov pop ret mov cmc mov iret xchg or scas jmp or movsl (bad) jg or push out push addr16 inc cmp sbb outsl insl add std (bad) lcall sub jbe sar push fsubrs jmp jp sahf mov in icebp decl push icebp sub aam loope lret jo js repz mov or mov std pop or jne fisttpl push inc ljmp (bad) (bad) mov sub addr16 int3 cmp iret add or (bad) lcall repnz arpl call jmp test adc in pop mov mov jmp jne movl in arpl call and das movsl lock std stos sub inc decl mov fdivrs adc jg data16 sbb incl cmp jl,pt cmpsl add jb leave jno js stos test hlt (bad) (bad) decl rcrb xor addb sarb add insl aas mov lods dec fdivs js push sar (bad) pushl xchg call push sub inc out popa push jp stc inc inc mov mov sbb mov fnstcw stos mov subb ss hlt inc lret pop cld mov int3 ja sbb push push fstpt mov inc push push pop subb mov in iret aad sub (bad) ljmp mov or pusha xor and and mov orb (bad) sub pusha fistpll les xor lret test decl in movsb lcall cmp call sbb push sar leavew out ss ljmp mov (bad) mov fwait mov mov lret (bad) (bad) call xor sbb ficom add push sbbl pop imulb pop (bad) jle arpl mov pop fwait sub and (bad) ljmp icebp pop mov xlat aad pop loope push pop jnp popf push xor (bad) (bad) (bad) dec scas push (bad) fwait int xchg jbe xchg xor cli vmload stos adc add push out push (bad) jmp cmp (bad) fildl mov mov dec test (bad) or cld (bad) lcall jbe dec pop xchg sbb inc push xchg divl outsl xor sub add inc sub and xchg mov into mov stos mov jg adc dec cmp mov sarl call (bad) cmp daa lods pop sub xchg push in mov movsl mov fnstsw inc lcall mov push test lret decl mov outsl (bad) (bad) lcall sar nop repnz jo xor dec xchg sarb jg test jle (bad) (bad) popf mov mov scas xor stos jmp (bad) (bad) cmp test or or jo sub leave dec jb mov dec sub out std jg or adc (bad) idivl (bad) (bad) ljmp gs push mov (bad) mov cmp mov pop sbb sbb dec cwtl sti sub mov xlat lds das iret mov hlt int fs dec es cltd icebp jo jg pop jle mov xor lock adc mov ljmp inc in mov sub popa fsubr cmpsb xchg insb mov jge (bad) push (bad) (bad) (bad) call loopne and sbb pop add int push push pop fisubl mulb adc cmp negb mov insb or call ljmp push jg lret scas aad mov add fidivrl fiadd in push ljmp lds and sub and imul ljmp imul stos push loope mov aad pop push push cmp mov mov ljmp rcrl bound push and (bad) (bad) dec inc insb pusha iret pop cltd je ja insl pusha pop scas dec ljmp daa mov sbb dec adc out or ds cmp mov (bad) jg push pop dec cmp dec call lods mov push (bad) std cmp ljmp aaa stos mov stc jo gs sarb mov iret push adc (bad) cli je lret stos inc insl pop or ljmp aad jle sbb in outsb cmpsw cld outsb hlt (bad) (bad) lcall push inc mov sbb pop shrb jmp push test (bad) decl inc and push adc ret and xchg sar inc (bad) pop cmp aam mov test inc std (bad) (bad) mov lods dec (bad) (bad) sub mov adc dec inc cwtl lds (bad) fistpl out fidivl scas mov mov xor int3 mov mov cwtl out push push ds test pop mov add add jmp fnop push lock xchg call push jns mov adc dec sbb jg adc push ror outsb lea add (bad) mov mov cmpsl insl insl in and scas inc and jl push (bad) (bad) cmp cmp (bad) jmp pop xor mov inc mov test pusha int es (bad) pop out push mov or ret outsb jbe cli mov outsb test sahf ret sbb into call movsl (bad) fisttp enter idivl sbb mov fistpll movsl xchg pop clc aaa decb popa into (bad) jecxz lret popf mov pushl mov mov mov cmpsb mov push jecxz insb cli cmp (bad) inc cmpsb push inc xchg sbb adc and and fnstsw decl inc and sub jp and fwait cmp mov daa cmc (bad) pushl dec xor mov std scas hlt sarl hlt pushl cli mov insl cmp push push jns jns pop js or ja int3 xor ret pushf cmp pop or outsl cld imulb cwtl jmp jns pushl mov push xor incl (bad) call lahf dec xor jg mov mov scas cmpsb add jle mov outsb push (bad) lods sbb arpl fisubrl cmp cmp (bad) (bad) decl mov mov xchg dec cli dec mov ja popa loope xchg push and xor adc je (bad) xchg pop sub push out mov mov xor (bad) (bad) dec jge sub inc addr16 in pop sahf enter (bad) ljmp stos cld cmp lahf jne jg sub out imul call jmp je xchg lods mov test cmp movb mov pusha shrb ljmp out and xchg decb les lcall mov or adc cmc sbb and push push and or int3 aad jp sbb pop cmp (bad) mov mov mov ret jns adc lea xor mov int (bad) data16 and in push js pop js leave lds loope push xchg sub gs std (bad) incl lahf mov loope and push sbb subl ljmp sub or test mov (bad) nop sub das fsubl lods test (bad) pushl jl inc pop dec aam or test (bad) pop add (bad) (bad) (bad) push and mov adcb xor fimull adc push xor sub decl jb sub pminsw cmpsb push inc mov popa outsl adc dec lds (bad) ljmp dec jo pop push adc roll cmp pop cs scas or pop sbb (bad) mul push inc andl inc (bad) (bad) ljmp adc ss sbb or push gs loope (bad) (bad) push cmpsb or push sub adc adc mov jg jg int3 xor jmp mov xor js (bad) out mov jp jo (bad) das shrb xor jecxz sbb out (bad) (bad) fnop dec mov cmp (bad) lods in ret (bad) fdivl push sarl add cmp mov jb pop jae test lcall in dec mov (bad) (bad) (bad) decl lds out insl out stos push pop xlat lods shll dec repz mov jmp ret jg outsl hlt mov lcall mov pop jecxz mov sbb (bad) inc sarl push lea inc mov test jae ret inc sub (bad) decb mov jl in leave stc imul lret cmc sbb sar incl dec mov adc pop mov cmp icebp mov add xchg jmp es push jno aas sub ljmp cmp mov (bad) pop test sub push (bad) push std sbb lcall add fidivr int mov xchg or sub incl pop pop imul add mov pop or sub push lcall (bad) ljmp enter psubsw std out mov dec jmp addl es dec adc mov stos hlt or pop (bad) (bad) call lahf test xor fdiv dec dec lea fs outsl xchg jo xchg gs sar fnsave jbe push or xor ss jno push outsl (bad) jg jmp pop or mov mov pop addr16 push outsl cld outsl cld push call sbb jmp imul fimull lods iret cmp sub and lods rcll xor mov and mov sub (bad) das lock adc scas mov dec fstpl pop stos adc xchg sysenter add add jb rcr hlt bound movsl imulb data16 (bad) mov mov (bad) jl jae inc movnti fstpt jecxz loop jg xchg cmp add mov loope popf (bad) cmpsl (bad) cmp jp scas addr16 (bad) sub std dec or mov (bad) (bad) jg out mov or arpl gs mov ljmp cld xchg or rcll in clc scas addr16 stc push pusha (bad) (bad) push push fnstcw push ficoml inc mov fcoml rclb fistpll adc sarb test lods xor insb xor add inc cld (bad) (bad) (bad) in cmp test invd movsl xor fnstcw inc (bad) xlat inc xchg pop sbb sbb cmp (bad) jnp jne inc inc mov and (bad) fbld test test iret xor xchg mov or out xor test sub lretw cmp pop test call jns fs and cwtl sbb cmp fadd scas lods jg pop add (bad) pushl insl jno adc pop fidivr into fcomps pop outsb (bad) mov jmp nop (bad) mov aaa in imul lcall (bad) ljmp (bad) xchg pop pop sub push jecxz xchg ljmp sbb ljmp test enter mov clc xor sub (bad) mov les lahf inc clc aad or (bad) (bad) (bad) ljmp xchg jno sbb popf ljmp pop test push test cld popa bound dec hlt xlat (bad) mov push push mov jmp (bad) aaa jecxz push xor mov pop sbb jns in or jmp out or sub mov in jae (bad) (bad) sarb (bad) (bad) lcall mov in sub jecxz decl pop jl repz rcrb loope aam (bad) mov mov pop test loopne,pt fidiv push dec cltd mov ljmp cmpsb (bad) push es int sub movsl xchg clc (bad) call sbb push out xchg arpl or jmp (bad) xcrypt-ctr cmpsl popf dec in (bad) (bad) pushl es mov mov movsb mov rclb lret imul call daa roll cmp lcall pop mov jg add inc xchg xchg or lods das add dec das icebp jmp dec movsl int3 fs push mov into mov (bad) lcall mov fnstenv dec jns or js mov jne shrl pop xchg cld cld decl inc ret or (bad) jge (bad) incl pop dec push push mov push push and push cmc lcall or inc push sub pushf xchg ljmp cmp test and imul pushf insb adc pop (bad) (bad) mov (bad) rcrl mov inc push pop adc cli (bad) jmp je mov jno fdivrs lods jle dec push pusha fiadd pop cli (bad) jg cli loope push inc fsubl daa push fimull sysexit sar pop push mov mov fsubrs (bad) incl js lahf nop jnp xchg add pushf xor outsl repz push call pusha pop xor and xchg dec test hlt pop (bad) ss mov fisttpl mov push and decl (bad) out in dec pop shlb mov daa inc xchg mov jmp cmc imul xor jne stos or mov add mov push adc aad sbb (bad) ljmp adc push adc lods pop xlat pop pushf pop ficompl je jns mov fldt and lods loope rcrl dec rcrl ffreep and jge std stos mov pusha nop test sbbb movsb shlb rolb call xor loopne jge loope mov (bad) push xchg popa cmp sub subl mov push mov sbb in sbb popa pop cmp scas adc (bad) mov sub dec repnz imul shrb jbe lret lds lods in xor sbb push shrb dec add int3 mov mov inc (bad) int3 pop sahf pop (bad) (bad) mov fbstp mov adc ficom nop dec out jo in (bad) (bad) (bad) ljmp and lahf lret add sbb or ret jmp test (bad) jp (bad) call enter (bad) in xlat mov mov clc dec mov mov mov adc pop je (bad) ljmp clc pop cmpsb cmp mov comiss sbb (bad) insl and pop fs (bad) (bad) (bad) jnp mov loopne outsb xor scas push jae aaa cli lcall pop sbb fwait push imul sub sahf icebp loopne mov push mov aaa sub cli (bad) jmp cs sub std pop lock sbb or addr16 cmp dec push call jnp std inc call cmp dec out jbe cmp rcll (bad) call das sahf je and xchg clc outsb repz rolb leave stos in adc sbb sub inc push xchg icebp or mov into (bad) ljmp std inc mov push es cmp rolb mov hlt dec push cmc call movsl xchg out out mov cmpsl fucomip pushl sbb mov mov cli (bad) (bad) decl movsl dec jnp cld je cmp and in xor es push cmp movsb xchg clc lcall mov and xor fs jno test jmp mov push rclb outsb jg (bad) incl (bad) mov jecxz leave mov movsb adc aas inc sahf cmp xchg sub ret dec pushl lds xchg int3 (bad) movsl mov pop call or dec sti lods xchg add daa xor mov daa lret jo jmp (bad) pushl adc add cmp iret ljmp (bad) pushl add add sbb gs push fcoml loope xchg push (bad) (bad) (bad) js and sub jecxz jbe mul pushf pusha aas cltd xchg (bad) (bad) (bad) lcall popa ja test inc and cmc aaa call clc cmp xor hlt dec aam in pmaxsw xchg pop leave rcl (bad) (bad) (bad) lcall mov mul or jne rol add je cmc push js,pn pop xor mov mov cmp sub mov cmp lcall ss sbb cltd movsl test call and sub in inc aas outsl cld das icebp fs inc std push inc sub pop push sbb call (bad) pop addr16 bound test sti bound repnz ss sbb dec dec lahf and stos (bad) (bad) jp iret dec js dec sbb xor lcall lds xchg fcmovne adc movsl sbb das inc addr16 (bad) (bad) decl dec (bad) add inc push pusha pop mov lahf scas (bad) stos mov cld jmp lock mov mov cwtl leave das jle das lock jp fcomps pop xor xchg cmp fyl2xp1 or aas loope mov jl pop clc (bad) dec mov jnp loop cmp adc mov test pop add push sub dec lar clc xchg sbb and mov shll xchg fsub repnz (bad) (bad) pushl mov mov movl xor icebp adc cwtl add jg mov int3 cmp insb adc pop sbb in push sub add dec mov loopne andb mov inc into loop jae enter into pop or (bad) lcall in xor mov out popf xor fwait rclb ret lcall dec mov and adc jns mov (bad) cmpsb mov lahf in pop push pop shlb aad loope and or (bad) (bad) ljmp mov sub mov rorl jecxz sti sti or les cmp negb push insb cmpsb adc sub jmp sub pop scas pop or popa (bad) (bad) (bad) decl pushf mov insb test andl mov aaa pusha add cmc cmp lcall out pop push imul out or mov mov dec mov (bad) lcall cmp lds push jmp push rcrb flds jl (bad) testb hlt popa dec iret mov xchg jns push cmp (bad) sahf pop jp (bad) (bad) jg fisubl imul arpl std cmp je adc (bad) (bad) lcall cld xor cmpsl fcmovbe ljmp sbbl mov decl mov add mov xchg sbb xlat jae (bad) (bad) (bad) lcall cmc cmpsl push ljmp sbb fs jg popa ror jg mov xchg cli adc dec int3 pop sbb stc jmp cld or add mov adc (bad) dec (bad) notl out call mov loopne imul inc push add bound popa (bad) lret xor sbb inc inc sbb or and pop push bound sub decl jle push in scas repz push popa sub xchg fsubrp jmp leave fdivr fnstsw decl add rcrl inc lcall jmp push (bad) outsb sub sbb inc fistp loop sub mov dec xor (bad) (bad) lcall lds or fsincos jbe adc jno cwtl stos pop jae lret imul iret add cld inc lret cmpsl mov pop (bad) pop loop xor mov mov mov out mov (bad) decl addr16 or lcall lds mov sbb adc cmp add pop insb cli call mov in xchg cmp lcall pop and mov mov cmpsb xchg dec (bad) stos or cmp stos lock lahf das mov adc outsb testb subl bound lahf jmp jle or js cmp mov mov mov fisttpll fldl push (bad) (bad) (bad) (bad) mov (bad) xchg pusha dec cmp cmp dec fisub sahf or (bad) (bad) call jp loop popa jno stos xchg std sub insl call mov call (bad) mov pop inc sbb inc js (bad) lds add (bad) mov mov pop pop sti gs mov add push in pusha cld mov insl cmp incl push push stc pop jge (bad) sarb mov add (bad) (bad) call stos insb add mov flds sbb sarb sub (bad) jmp fisttp (bad) inc mov push pop movsl jns ljmp rcll and (bad) (bad) mov and jbe fldcw pusha out (bad) or lret fwait orl lock (bad) mov add adc leave push dec sub mov sahf incl xor bound mov stos sbb mov mov in mov imul add out inc popa icebp ja scas pusha in insb inc out loope sbb pushl sbb xor jle loope insl adc (bad) (bad) (bad) cmp sbb cltd cmp sub cld pop jno jmp inc mov (bad) pop lea inc mov push ja idiv (bad) decl mov fwait pop mov in pop jno lret stos jp vmovhps (bad) (bad) ljmp jnp bound xlat stc pop ret add push dec imul jle gs (bad) jl push add adc xor adc scas inc or mov out fs movsb mov jecxz out jmp addr16 flds (bad) ljmp cmc aaa mov popf jae dec in pop mov lret jno inc fs cli ljmp sub sbb and das push out xor mov cmpsb mov pop and fstpt (bad) (bad) (bad) jge arpl adc dec lret cs mov loopne pop fcmovu repz fmuls jp cmp adc ds je int mov ret int3 xchg ret (bad) out dec cmp mov (bad) fisubrl popf mov mov jp or and loop movsl loopne xchg decb insb sub jg mov sbb mov lahf in pop out xor or pop mov sub insb or push popa sub std call movsb mov imulb pop fisttp mov jbe sub jno sti pop pop add push out insb push adcb jge (bad) (bad) (bad) call mov jb jnp fcomps loop pop insb adc loopne movb push (bad) (bad) (bad) call out imul cld xor jo repnz test inc (bad) aaa clc fcmovnu lcall cltd test add iret (bad) pushl clc movsl hlt outsb daa cltd xchg call or ss (bad) mov sbb sbb cmp lahf bound jp jns or push decl (bad) push push icebp lret cmpsl push ja sbb repnz test jl icebp (bad) (bad) jmp sub lods xorl test pop jmp adc xchg stos test inc outsl pop stos arpl xchg test repz (bad) (bad) (bad) fiadd sub sub xchg mov push dec pushf sbb movaps in nop sbb (bad) outsl je stos fsubs rcll or cmp adc (bad) (bad) (bad) pushl in push movsl stos xchg cmc sbb repnz test loop pop dec xchg push add jg mov push mov js insl jg (bad) (bad) dec push push sub xchg bound jne mov rcll call (bad) (bad) (bad) (bad) (bad) mov cmp cs aam xor push mov push (bad) arpl push std (bad) (bad) push jo fcmovnu loope push jg out mov lret xchg nop pop test push inc inc jle mov jmp mov push or xchg sarb sub (bad) incl mov mov pop mov (bad) ficompl pop xor call ds cmp add ret gs fsubrl in jb scas or or jg jne in add push jp out lahf stos mov test (bad) (bad) (bad) cmp pop (bad) test scas sub (bad) in jo ret pop out inc in lret leave jno (bad) (bad) jg inc push add orl test mov je,pn das xchg inc add rcrl ror addl (bad) repz add loopne xor popa xchg das std movsl (bad) repz fwait and test sbb test (bad) decl mov dec mov fsts mov test pop xor mov (bad) pop inc popfw add decl cld adc arpl sub pusha adc shr mov push jmp call (bad) call bound jecxz out fs mov add popf scas stos jnp lock jl outsl std (bad) jmp dec hlt fsubrl mov push mov ret fidiv xchg pop mov shrb enter (bad) je cmp inc sti (bad) jg pushl jle test test xchg adc dec std out pop sub push inc and arpl and lds (bad) jg adc sahf inc sbb lea dec (bad) cmp sub decl add adc cmp xchg ljmp aad cmp or stos (bad) ljmp jp xchg push js sbb nop xor mov push aas lea add cld (bad) incl rorl cmp lret mov shrb insl std pop lods (bad) jg call jns cmc mov inc (bad) cli test pop fnstcw xchg (bad) push (bad) and clc rcr ja ss inc add cmp test jno mov (bad) (bad) mov dec xchg cmp roll call (bad) call call lahf notb inc out sub push test ja add xchg cld xchg outsb lock mov mov lcall outsl and stos push (bad) or stos jle mull aaa nop enter sti cmp dec insl (bad) decl sub lods shll data16 xchg fmull (bad) call imul mov je xor dec mov mov pop clc roll adc sti adcb sbbl bound in int (bad) (bad) pushl push xchg mov jecxz push pop (bad) mov iret push xchg mov repnz xchg (bad) (bad) mov xor sub sbb dec stc mov dec inc xor aaa clc mov shll mov (bad) (bad) (bad) (bad) mov push push jne or jb cmp inc mov ret or jb mov (bad) (bad) jmp dec push mov sbb outsl pop mov hlt bound rcrl stos stc xchg ja mov cli (bad) decl pop jnp jbe aaa bound lahf outsl fcmove movsb (bad) lcall xchg mov test (bad) lret push in je or (bad) (bad) adc sub popf xchg cmpsl nop dec inc mov mov fwait mov in (bad) lcall ljmp pusha adc popl (bad) sbb and aam pushl push or (bad) ljmp loopne mov xchg loop xor leave gs jle (bad) dec sahf je call faddp repz mov mov sar mov dec mov lea (bad) jle sub xchg es dec xchg sub (bad) (bad) (bad) jp fist cwtl cwtl (bad) dec outsl push push setg fidivl das int3 insl sbbl std push mov lock test lods adc jg aam jg adc mov add sub xchg dec dec (bad) dec (bad) (bad) mov fwait sub arpl lea (bad) ds ja xor (bad) jmp mov fcom and fadds ds lods bound push (bad) (bad) sub out pop adc or fistp call aaa pop repnz jl in clc mov inc (bad) pop ljmp or jl out mov iret mov stos fs inc scas pushf sar ret (bad) dec mov repnz bound cli fisub ljmp mov pop in mov arpl xchg mov mov mov adc decl push fcoml pop jle imul ror dec (bad) lcall fstpl (bad) mov push test jle cmpsb jle dec mov dec push push jmp scas pop in arpl icebp outsl insl lock mov adcb movsb sub push push and jle in add jns aam jg jmp xor or in out mov mov lods decl mov add jp dec adc (bad) jg dec fnstenv push cmp dec mov sbb lret jge push sbb (bad) decl cmp psrld sub push movsl nop mov cld (bad) (bad) (bad) (bad) incl dec dec ljmp (bad) rcrb lods sub mov dec fmull (bad) dec sbb pusha sti nop outsl mov dec cmpsb xchg add lock jo jno aad xchg sub sbb sub adc (bad) mov data16 jns pop fisttpl lcall int call jmp (bad) idivl lahf jb call jge sbb xor bound mov ljmp das inc test or mov dec add sub rorb scas loope test pop lret mov loop cmpb push xor pop das sbb adc in movsl pop cli stos pushf lods cmpsl pop jle gs push jo xchg arpl jmp xorb stos test inc add mov sub and lods (bad) jg int3 cld (bad) ljmp (bad) xor vpavgb sub dec push sti jge in jns or mov mov adc push sbbl or (bad) ljmp icebp pop loope es jb and fwait imul incb inc lahf jge pop clc pushl pop ret mov cmp mov xchg and (bad) mov clc scas ljmp mull clc in sbb lcall int3 ja (bad) (bad) loopne jae cmp or mov xlat loop mov hlt add in pop in fcmovnb mov jne aas push or xchg xor lahf (bad) scas or cmpsl insl pop push jne popf mov (bad) sbb js mov mov insb mov mov xchg negb fcos (bad) ljmp pop fmull mov pop les adc test xchg pop (bad) das cmc cmp scas add mov add sahf out cmp inc (bad) hlt popl lret out cwtl movsb cmpsl mov ficompl addr16 jp push mov idiv pop mov into lahf dec stc ds jl sbb fiadd mov pop cld (bad) jg das cld mov rcrb (bad) jo jecxz mov xor mov movsl dec mov sub xchg mov jnp xlat mulb and push scas outsb cmp push in xchg (bad) mov js mov imul jae push mov and push std or mull adc or fistl jge sub ljmp hlt jg pop cmp sub mov stc xor lock or ljmp enter add sahf or jecxz cmc adc in (bad) (bad) (bad) lcall data16 or nop (bad) arpl imul sub mov inc in ljmp mov stos sub shr push outsl xor mov (bad) call add pop in xor xlat sub cmpsb loop pop xchg jl (bad) xlat or lret and (bad) mov fs mov pop inc lods lds pop jecxz mov divl das mov lcall pop (bad) sub (bad) (bad) (bad) incl repz vpshaq push mov or xor adc jg incl pop lahf fwait mov adc rclb cmp pop adcl or movsb mov (bad) jg jge push or jnp cmp mulb popa dec sahf int3 outsl aad (bad) (bad) cmp movsb adc bndstx fmuls push push clc sbb movsb (bad) xchg push je pushf out icebp mov pop loop incl mov push fistl adc push or lcall sub pop test xor data16 mov mov push (bad) dec adc mov (bad) pushl sub fs cmpsl roll jmp jg dec mov pop adc les sbb rorl fbstp sti loopw mov push (bad) scas sub in inc xor out (bad) (bad) call add movsb dec test cmpsb dec es push push inc pusha xor add sub in (bad) (bad) (bad) ljmp or and mov test push fucomp es ret cmp (bad) and inc mov or cwtl xchg push and or mov outsl test lock pop pusha xlat clc adc xor (bad) (bad) incl imul lret cmp std xor fisubr repnz cmc push rcl cmp inc int mov (bad) (bad) incl xor sbb sub cmp cmp xor sbb (bad) (bad) (bad) mov cmc test cmc xor ljmp andl dec inc jne rcll (bad) dec xor or cmpsw lods data16 jne in fisttpll hlt ss (bad) call add or rcl leave in es lea arpl mov incl push cmpsb ret scas xor (bad) mov cmpsl xchg and mov repnz or daa addl mov jmp sbb outsl fsubp bound inc mov or (bad) decl jnp lea pusha subl in cwtl mov inc sbb adc (bad) jge push xchg jae (bad) dec mov int3 or call push inc mov inc jmp (bad) js jl pop sub jle lods (bad) (bad) jg add sbb aad popa das shlb divb (bad) jg mov ja mov movsb adc and sbb xchg in jg lock idivl loop cmc lcall das xchg (bad) aam (bad) (bad) ljmp mov fnsave std ss or aad rolb bnd int xor clc (bad) (bad) (bad) fisttpll pop adc cmc mov jle (bad) insl jp cmp (bad) cmp jno (bad) (bad) (bad) fistpll mov andb fisubr push xor daa cs jb sub mov roll (bad) (bad) jmp aad enter cli das (bad) dec aas push scas xchg ljmp xchg daa pop mov in (bad) call test dec cmc xchg xchg pop mov (bad) rcrb sbb out aas pop dec or jge out popa mov test mov in decl popf pop jecxz shl (bad) pushl les jg xchg dec lcall or add xor sbb jg decl (bad) (bad) jnp adc cltd push sbb sbb cmp ds rcr lds (bad) ljmp push sarl lods rorl ja mov arpl lods pushl ja (bad) int jno or ljmp outsb (bad) (bad) (bad) call pop jns gs cmp fdivrs mov sahf test ds jns fcoms pop xchg (bad) (bad) (bad) dec pusha mov enter push pop mov shll push in xor mov loope (bad) ljmp addl xlat in call (bad) add sbbl sbb cmpsl push push jns adc inc fdivp sar mov mov and call cmc (bad) fildl sbb and xor fwait sub xchg sbb nop mov (bad) (bad) inc push sahf add rorb sub xchg insb imulb call xchg scas push pushf xor fisub inc sbb and mov jecxz adc bound pop std (bad) mov (bad) (bad) pushl dec imul loope (bad) lretw jbe jne rclb jne (bad) incl loope inc xor push or out lea movsb enter lea (bad) decl arpl inc nop nop ret push mov ljmp xchg sar (bad) incl xlat jmp jmp arpl push fistpll xchg leave call (bad) mov and jne sbb inc dec (bad) fsubs jmp (bad) incl add int cs pop sbb cmp xchg test pop call out pop jg push out ret xor xchg es jecxz dec (bad) adc add pop test enter jo mov sub int xor (bad) jmp out mov push ret mov jmp (bad) (bad) (bad) mov inc inc push or test jb jbe sub test sub push inc ljmp repnz rol es sbb hlt rsm mov lds lods (bad) (bad) (bad) ljmp nop sbb stos dec sub mov add mov stos pop sub inc fsubrs (bad) (bad) jg push mov cmp ret mov in mov ret insb xchg xor cmp sti (bad) (bad) decl jl push push lcall mov push cmpsb pop inc fistp jp xor mov (bad) (bad) jg push push lahf push add inc leave jmp imulb mov sbb rcrl jmp icebp dec add test adc jno clc (bad) (bad) (bad) jp mov push pop (bad) mov adc jne xchg pusha pusha (bad) out inc stc scas in sbb (bad) (bad) (bad) fildll mov mov movsl in fxch xor mov jbe inc push ror (bad) jg ljmp mov nop mov inc mov mov sub stos ljmp lcall and xchg pop add std xor (bad) call (bad) mov pop mov dec iret js ljmp dec xchg push xor (bad) (bad) incl or scas xor pop repnz sbb mov leave mov bound sbb add imul jp or das out lods pop xchg add insb mov aaa cli jmp cmp cmp aam inc mov fsubrs fs pop std aas cmpsb inc dec roll fidivr mov (bad) pushl fucomi dec pandn push imul (bad) out dec pop xor std pushw test mov inc rorl pop xlat inc or sar adc aaa mov sub xchg add push inc jb (bad) ljmp (bad) pop sarb into xchg (bad) repnz sahf push mov sbb scas pop std jo sub and sbb mov pop stos pushl xchg push cmp clc outsl std aad jns dec lret (bad) stc aas and out adc decl sbb out pushf repnz ljmp lcall sub repz jno inc (bad) jno sbb (bad) (bad) call jg add inc push loope fisubl test in mov shrl pushl (bad) adc push xchg fsubs pop cmpsl mov sbb mov ljmp cmp dec pop into cmpsl das pop ljmp dec pop jnp mov cmp jo push jge (bad) in jg loope imul je lret sub sarl mov call incl dec mov pop or dec sub (bad) (bad) push inc mov (bad) outsl stos cmp notb sbb cli popl pop call aaa and sub cli (bad) cmp (bad) fdivs call iret xchg cli lock pushf xchg fdivs sub (bad) pushl scas lods xchg or stos pop test push lock hlt (bad) and scas (bad) or mov (bad) mov insb mov fwait popa xchg stos es mov clc incl rclb pop xor scas in inc (bad) in movsl das cmc sbb rorb add in arpl mov pop aaa push xchg push jno push arpl xchg mov call xlat and adc push xchg xor xchg (bad) (bad) incl pop xchg (bad) orl push lea call (bad) (bad) into mov adc xor add loopne sub push push std (bad) (bad) (bad) jns insb push mov mov push subb test insb mov sbb sbb jg or sbb pop xor mov stos push (bad) adc (bad) bound jge cmp in (bad) mov rcrl mov lods clc or clc imul sub sahf push (bad) mov xor call xchg cmpsl in repz jmp icebp mov mov pushl jnp jnp xchg or imul cmp sahf inc mov mov (bad) mov mov rclb fimul or xchg lret push pop dec jg (bad) ljmp dec mov orl cs insb xchg mov push nop cld mov add or adc push popf xchg sbb pushf xchg dec pop xor call pop std xchg pushl mov popa push mov lods je jmp aad imul adc sbb lods enter xlat jb call jns cmp into inc xor cwtl ljmp lcall dec inc data16 sub adc xor movsl xor jg movsl dec dec aad (bad) (bad) lcall dec jb popa fwait xor jae ss test adc into jg push mov cmpsl aam cld outsl cld aaa clc lods cmpl sub jbe xor mov outsl sub sub in wbinvd pop cmp (bad) (bad) (bad) inc or pop mov stos test lea (bad) xor adc or (bad) (bad) (bad) inc (bad) out sub daa inc mov pop cwtl sub enter xchg (bad) mov repz (bad) (bad) (bad) fstps iret inc rcll into nop rcll mov adc das mov test cld pop xor ljmp std fnstenv pop sti test and xchg mov cld sbb mov in ljmp cmc mov insl movb and fcomps movsl inc cwtl mov lock call test mov push cmp aam shr je mov das stos add fstl cmpsb test dec movb clc add (bad) ljmp xchg mov cmp (bad) mov jnp lock f2xm1 lock (bad) (bad) lcall inc jp pop sub stos test test cmp mov repnz sbb push mov dec ja dec mov pop movsl aam cltd (bad) (bad) ljmp mov out mov repnz into sub inc cmp int das add xor or call sbb jecxz and sbb shlb (bad) mov or pop (bad) sbb fbld inc fild fnstcw shlb xchg sub jae sahf fucomip call int3 and cs add xchg jg (bad) mov jno add jb push jge dec mov stos xor (bad) (bad) decl cs aam out stos inc repz outsl mov pop or sub lea (bad) fwait pusha sbb xchg loope pushf mov adc mov push fmuls std mov fldcw sub (bad) mov in mov (bad) adc pop xor add or mov or mov adc lret aas fs xchg adc call movsb arpl or sbb push fidivr inc aaa mov inc mov sub bnd mov addb pop lods fsubrl push cltd mov (bad) jmp sti jns test jp imul aas cmp imul push or ret push outsl arpl (bad) (bad) lcall xor cltd (bad) push push xchg test mov inc jmp sub sbb incl sub inc push dec push dec fiaddl mov push push in mov push int3 negl out (bad) jmp les push jg ror (bad) push aas mov xchg mov jo push add test ret xchg sub mov call cs xor cwtl adc pop lcall in mov mov jge lds add jae fs stc je and pop ss mov sti arpl aad loopne pop jecxz (bad) lcall rcrl inc cmp cld daa fstpt mull mov (bad) jg mov and cmp mov inc mov xadd in adc sahf xchg jg and in adc and push ljmp add mov xchg das jge inc gs cmpsb adc xchg inc push fisubl incl les leave out fs mov xchg jne dec mov shr (bad) mov cs dec lods (bad) imul (bad) (bad) fild mov adcl mov sub mov jg jb sbb popf or push mov jo mov (bad) pop out arpl sub ja mov shll mov xchg pop imul popa addr16 inc xchg push jg mov shl div mov xchg push xor mov mov mov insb call mov pop imul sti adc jl aam rclb (bad) lcall daa adc or dec imul out or leave out mov (bad) (bad) call aas sbb stos xchg cld negl or mov (bad) (bad) lcall mov (bad) lock stc sbb sbb sbb lret and adc pop mov jmp mov add (bad) imul (bad) decl jmp iret adc push sbb lods push jmp int and test mov ss (bad) call std push mov dec (bad) out xor jp hlt ja xor and (bad) (bad) (bad) call cmpsl stc fist mov aas mov fistp sbb fsubl es mov cld lcall in dec orl adc and jmp sti rorb loop cmp ret jmp call jg lds and stos (bad) fs loope jne mov inc call jg (bad) push out inc push adc sub dec pusha stc pop and (bad) jg (bad) mov test dec movsl cmp int outsb xchg das jo scas xor jmp and in pop das jle lcall fstp xor and (bad) (bad) jmp loope mov ret inc mov gs lock xchg data16 xor call pop mov les dec jns pop aam ret faddl push in inc mov xor xor jl (bad) (bad) (bad) decl cmp sub in mov out insb add xchg pop pusha aas jle (bad) (bad) mov imul push xor dec inc aam xlat fsubs in jg push mov mov jp fsubrp sub js inc (bad) (bad) (bad) ljmp sub loope imul push fwait lahf insl nop jle std mov pop or hlt andl inc mov enter test pop lods daa mov add loope sub mov sti ljmp cmp jg dec div jb test add xchg (bad) mov mov pusha and (bad) (bad) jmp inc repnz insb mov push dec sbb (bad) leave mov jecxz bound das jno call or je mov fs push xchg incl arpl add sub loopne push test in (bad) lcall mov (bad) (bad) cld push aas inc (bad) out je ja inc icebp add mov loopne (bad) (bad) (bad) decl cltd or lret push cmpsl or int3 mov dec inc insb jle aam pop cmpsb (bad) (bad) jmp add inc xor lahf in push mov (bad) (bad) jmp adc loop cmpsl js rorl fnstcw inc mov sbb movsl in push mov subl (bad) dec scas fwait push sarb sti sahf mov lret fldl sti mov lock jmp iret jbe in insb out cmp pop loopne fistpll (bad) pop push pop (bad) push int das jl (bad) ljmp int3 in cmpsb cmp int xchg push lcall ss sahf (bad) push xchg mov (bad) or iret pop (bad) cmp pusha js (bad) (bad) (bad) (bad) jns fiaddl insb sti sbb add cmp arpl stos sub nop lahf ret int3 repnz adc pop mov mov pop sub push xchg (bad) (bad) ljmp out sbb xchg jae mov cmpsb jns sub add inc sbb push test orl popf int xor dec jl jmp xchg and mov inc daa jg dec (bad) mov cmp andl (bad) fucomip pop xlat jno out pop add in shrl test sbb sbb lcallw bswap push pop jae xor adc sub cmp fldcw mov jmp pop mov add (bad) call (bad) xorl int dec je mov cmp call jns lcall js inc mov mov cmp (bad) jb jge (bad) (bad) call stc cli add pop sahf inc je loop cltd stos mov cmpsb or ja pop fisubr fsubr ljmp mov ja cmp dec add inc lahf movsl clc test ss ds and hlt xor paddw (bad) (bad) ljmp addr16 scas jno sti mov sub outsl cmc call data16 addr16 pop mov pop ljmp (bad) sbb (bad) (bad) call push mov and adc pop push dec inc lret dec cld mov ret ficoml arpl loope (bad) jmp xor xor sbb pop ret imul xchg (bad) mov (bad) lcall xor mov push jae (bad) (bad) decl mov jae pusha (bad) xchg fmull add mov int imul mov imul xchg ljmp daa push (bad) (bad) (bad) ljmp pusha insl subb rcrl add mov mov sbb (bad) decl leave or mov ffree or nop scas enter mov lock pop or call push mov push (bad) dec inc sahf and add call clc fbld lcall jo arpl aas jl xor rcll cmc lods (bad) push inc sahf call xor adc mov xchg sbb jne jmp int3 aad mov (bad) jg jmp mov shll aad test mov shrl scas (bad) imulb xchg es pop sub cmp repz and cmp (bad) jmp push enter fldt mov iret aaa dec imul xchg popa cmpsl imul ss xchg xor dec stc (bad) mov add scas adc add mov lret nop jg (bad) ljmp (bad) mov inc xor imul cld mov mov (bad) inc ret orl ds mov inc loopne (bad) (bad) decl mov (bad) ja push mov sti jl cli lahf jmp sub adc lahf (bad) mov decl rolb pop cld xchg mov popa xchg push loope sbbl inc sbb enter mov lds mov cli xchg xor (bad) or and jmp xor sbb pop pop addb ficomp std imul (bad) call adc adc adc adc adc in scas loope decl push mov mov and cmp inc mov (bad) push sub dec inc roll sti sub mov sbb jae sub (bad) jg lods test pop das out fsincos cmp lahf mov add add jnp cmp movl or aas fiaddl out mov loope mov (bad) mov mov test stc int dec and aas xor test icebp (bad) pushl (bad) cmp pop cltd incb add jno les (bad) jle clc (bad) call jg or jecxz mov jl pop dec mov (bad) fnop mulb adc dec and jb jg (bad) lcall lcall into adc rclb xchg ret clc (bad) (bad) (bad) pop (bad) jae push lock pushf lahf xor cmp es fnsave lods push pop fistpl (bad) (bad) (bad) ljmp jmp push add jae lods cmp cltd lcall testb fucomip movsl and in jns add repz scas decl push jecxz add call fldt (bad) lods mov mov sub cmp sbb jne jge and adc adc (bad) ljmp andl icebp push inc mov cli cmp jg (bad) ljmp stos divps add mov rorb or js dec nop lcall pop cmp xchg push stc cld sub jle pop ret stc xchg xlat lods rorl ljmp jns std pop or aad mov (bad) push addr16 pop cli (bad) ljmp ret lds call cwtl cli andl (bad) pop inc mov sarl popa decl xorl (bad) sbb sub movsb out lock (bad) (bad) call xor inc mov xchg lods aaa mov jge push movsb dec push sub lods shrb push decl std (bad) call inc enter adc hlt (bad) (bad) lcall call pop mov cmpsb jae cltd in pop ss or xor (bad) ljmp cli add push xchg sub push inc push push cmp mov ljmp inc adc jno cltd std test mov rcl inc imul js test xlat rclb jnp lods or popf clc lcall hlt (bad) or xor into add pusha xchg dec jb shlb outsl (bad) mov and movsl jge dec add adc scas xor adc sub pushl clc (bad) cmp pop aad adc aam out or sbb mov sub sbb outsb push add fdivl adc (bad) (bad) (bad) mov sbb (bad) movsl insb into (bad) mov push mov sub pop push (bad) adc add pop sahf outsl sti adc push jns in xchg xchg (bad) aam cmp mov cwtl cmpsb cli mov cmpsl dec icebp and xchg mov pushf arpl (bad) (bad) lcall jg adc subl repz mov (bad) mov inc (bad) (bad) push jnp cmp mov mov stc xor and jg lcall ljmp push or fdivr (bad) js (bad) jne repnz sbb mov icebp dec (bad) lcall dec data16 lods out mov rcl sub dec adc daa jle icebp sarb cmp fidiv cli cmp call inc stc in sub xchg ret pop movsl (bad) adc fsubs insb or (bad) incl cli sbb jnp mov mov cmc (bad) adc cmp rcll lock pop xor ljmp es std xor mov jg clc test mov clc push (bad) (bad) jg call arpl xchg dec inc mov std icebp sti adc out jnp test aas cmp (bad) (bad) mov adc cmp shlb movsl cmp cli fiaddl leave (bad) out notl imul jmp cmp sub shrl jno daa rolb adc inc pop sub aam dec xchg cli test test (bad) cs jmp in in incl insb pop dec pushf adc xor adc dec push pop rclb (bad) (bad) sti lret or mov out cmp adc outsl int3 push loop dec push mov ss fsubs test pop (bad) cwtl mov aaa inc cmc or in and xchg inc push stos or add jg std inc xchg dec mov int3 dec xchg shlb sub jno cs jle xchg (bad) mov jae (bad) leave adcl jg cmp and ret mov cmpsb xor shll cmp adc inc outsb adc pusha test jmp push or cmp add push xchg pop incl mov (bad) (bad) jg icebp aam lea (bad) xchg (bad) aad pushf push aad subb fsubrs pop mov xchg inc (bad) pushl dec in loop pop add andb bound incl lcall dec (bad) pop into iret add (bad) xchg mov jbe cmc sbb jmp popa sarb lahf in lods adc dec das lods ret (bad) mov dec (bad) repnz fnstenv ja in mov frstor lcall sar and sbb jle popf xchg push pop cmp ljmp xchg cmp outsl scas mov dec lods mov jl adc and sub out lods mov (bad) (bad) (bad) ljmp mov ja mov lcall push std cld pop stc cmpl push mov mov shrl mov dec arpl push loope xor mov push mov out sub (bad) (bad) (bad) jmp ret js adc sbb mov dec cmpsb loope mov mov fbld jp aaa mov lcall dec dec or call mov loope stos lea adc sub (bad) jmp test dec call jle mov imul add xor test popa cmp add push mov jp (bad) push mov clc (bad) fsts xor cwtl mov dec fisttpl mov hlt mov or mov jo (bad) (bad) decl mov cmpsb pop pusha xor in sbb push xchg lret and fstl sbbb cld (bad) (bad) incl jg (bad) lahf rcll xor scas dec add pop push fidivl addr16 loope pop pop outsl cld adc adc xchg sbb aad mov push or (bad) aaa mov dec xor pop sub sarb fucomip pop mov je iret mov lahf jg and (bad) xchg repnz (bad) bound (bad) (bad) (bad) incl into jne mov mov fistpll sbb jno (bad) push mov mov push fs scas cmp int3 xlat (bad) mov das mov rcr pushl mov cmc jae jmp rcl cmp stos mov pop clc (bad) call push mov mov in mov add mov aaa cli jmp mov and imul incl inc (bad) inc xchg stos in mov ss cli push decl mov int dec cmp and xchg pop jno sbb (bad) fidiv lret je scas sub popf mov outsl lock icebp jne jns adc mov js cmpsb es outsb (bad) lcall or jb stos std xor mov (bad) shr push movsl call push sbb leave or cmc sub add aad shrb clc fscale mov je adc mov mov aad xchg and orb push dec adc stos scas dec mov inc stos repz pusha inc mov adc fistp aaa xchg cli ljmp sub and imul (bad) (bad) cmp mov inc dec mov lods mov (bad) jmp push (bad) (bad) (bad) call mov das pop mov mov mov (bad) xor ficomp pop jbe add (bad) mov push std push xchg sbb (bad) add rcll jle jo dec xor mov ljmp mov pop push test ljmp ljmp (bad) fisubr adc dec cmp stc xchg lea (bad) (bad) (bad) stos std stc mov sbb scas sbb cs leave fist call pop cli ljmp pop push jg push sub out std (bad) jg enter jae fs cmp lcall push push xor loope loopne pop push cwtl outsl jmp fsubl jg mov sub fwait outsl pop jbe repz das and inc cmp clc sbb jae sbb mov scas pop xchg imul mov movsl int3 pop sub pop insl call inc add leave shrl and fdivrs jg xchg leave dec xor push cmc decl movl dec mov jg mov lahf (bad) push mov add mov (bad) (bad) mov xchg imul ficompl sarl push lds insl dec cmp insb sub cmp (bad) (bad) jg enter sub (bad) inc call mov add and out and ss pop popf adc jae ret rcrb xor ljmp sub sbb sub aaa roll cld incl stc imul into jb push outsb scas cmpsl pop pop das push clc outsl inc cmp loopne test enter std call xchg xor xlat ret (bad) xchg (bad) xchg jne (bad) (bad) (bad) (bad) jg aad add cs mov jecxz pop lock jno sub inc bound mov mov daa dec jg xor test push aas notl int3 lret lock xchg in pop scas data16 mov out lea (bad) mov ret ds sbb gs or aad cwtl jecxz pusha (bad) (bad) (bad) (bad) decl xlat imul fldl or (bad) outsl push xchg lea push mov lods stos decl (bad) call js call jmp push mov mov add nop clc lea push cmp add jg (bad) cmp arpl mov fldt adc mov dec push icebp nop cs in fcmovnu (bad) stc out cld or jns scas push insb sahf fcoms push mov fwait bound dec jb cmp cmp (bad) call adc das xchg fsubs je icebp addr16 (bad) (bad) (bad) lcall shlb pop inc dec xchg scas cmpsb inc (bad) cmc addr16 rolb (bad) (bad) mov out dec es (bad) fs cld cmp es fs or ds sahf movsb sar mov sub mov inc int3 fdivs or xorb mov call adc push call inc inc outsl (bad) jo mov and xchg (bad) pushl inc xchg movsb inc shrb cli inc std fild call xchg es adc cmpsb (bad) (bad) (bad) in add (bad) out dec mov fistpll inc xlat fmull out add push fbstp push mov (bad) cmpsb jae add lea (bad) (bad) ljmp inc mov mov call rorb idivb sbb (bad) mov inc sar das loop dec mov jbe jge sahf imul sar (bad) ljmp ljmp adc lahf push les inc loop (bad) fisubl pop jno lds pop movsl incb xchg push adc fnsave and ja dec mov xorl push xchg jge sbb mov jecxz clc clc repz cmpsb aas fadd jae pop (bad) (bad) jg clc test ficompl mov int3 (bad) aaa inc mov mov decl add mov std ss mov (bad) and loopne jbe outsl pop out pop xor mov ljmp or xchg pop jg or clc pop adc or pop imul jo push pop call jg xchg aaa jo fstp xchg jo pushf (bad) aad cld ljmp pop xchg pop cmpb mov dec lahf mov (bad) mov dec bound jl inc idivb imul sub add mov aad push mov push cld (bad) (bad) pushl scas dec inc repz stos sbb ss sahf mov pop mov pop jp inc iret pop push sub lahf mov cmpsl fdivl pop cmpsl idiv outsl inc jp sbb ror sbb mov (bad) incl jmp jp mov leave sbb xchg sahf dec pop inc iret fildll pop xchg ss xor inc inc cmp (bad) (bad) (bad) (bad) cmp xchg dec push les adc push and dec or hlt add mov or and inc inc add and or push mov inc inc mov push inc mov adc call into cmp (bad) jg sti pushf repz cmp jne jno fldcw ret int3 push pushl sbb (bad) loope or (bad) lock (bad) lock mov (bad) (bad) (bad) jmp push xlat popa clc push xchg pusha clc or rol push xchg ja mov incb popa add (bad) xor pop int ret xor dec jno push pop loopne dec rorb ret sbb ret mov dec xlat inc loopne xor mov (bad) jmp or out lock test adc jle dec adc popa sarl inc (bad) fmuls ret jecxz sar pushl mov insb das lret test js sub or ja std dec ret pop cmp ret and insb popa sbb mov xchg xor mov or arpl pop ret inc jl popl jp xchg push or (bad) pop sbb add lret (bad) mov stos aas (bad) loope mov mov inc popa cwtl test mov and sub pop mov cmp es pop or adc call jg push flds xchg xor stc mov aas or mov (bad) (bad) (bad) incl cmp fwait push insl jge pop jbe adc push aaa xchg test popa ljmp incl mov add cmp stos mov daa jbe jo call sahf jl (bad) sbb aas adc (bad) jg adc (bad) (bad) repnz jnp mov mov cmc jmp ljmp call add push sbb jp test xor push pusha push inc (bad) in (bad) jg sbbb or andb xchg sub and cwtl sbb inc add and aaa clc call shrb dec adc xchg movsl cmpsb add add decl push fwait clc add sbb jg loopne add rorb loopne mov add pop stos xchg push add loopne add subb imulb push add or cs bt mov inc or fcmovnu push xor sub inc and pop (bad) and cs add push sbb add add rclb fnsave fcomps subb incl add add xor mov xchg test enter aaa stos inc pop add daa xorb movsl not dec add rcrb (bad) push aad xor mov inc incl (bad) (bad) mov add aas mov mov sub shrb (bad) (bad) inc cmpsb subb add test pusha xchg and pop add (bad) mov add xchg push es push movsb call jns inc movsb nop rcll dec rclb xor jp xchg dec push mov test xor xchg loopne test adc sar (bad) cli sbb cwtl sub and in sub sahf xchg xor (bad) incl ljmp lea rorl dec cmp (bad) (bad) mov and popa sub and jo ds adc sub push xor das sar loope push incl sbb and xchg and and and and sar rcl cmp mov ficoml dec pop fabs xor (bad) jg js subl xchg mov ja clc pop stos and ss test js inc mov ljmp push imul es cmp lahf mov test (bad) stc push cli roll add nop in icebp xchg aad call lods push push pop and mov sub nop fwait xchg pop xor sbb call jmp pop or xchg mov add fistp (bad) (bad) dec in add sbb and mov aas repnz pop mov pop ds nop and mov das push paddd jle es adc lea loope (bad) decl inc adc xchg les or inc and jge push aaa sub mov dec add mov ret lock mov xor (bad) mov push mov icebp fnstsw inc inc sbb mov je mov sbb cltd bound sbb mov mov jmp ljmp mov xchg in sub pop dec or lret stos notl sbb imul data16 outsb icebp pop bnd and and aad dec out push push and fwait ja ds (bad) mov sub sub (bad) repnz adc pop sub xchg das adc (bad) (bad) (bad) mov mov in dec xchg testl jp add les lods lods lods aaa (bad) pop std lods insb or lret fcomps cmpsb push dec lret leave (bad) lcall aam enter enter sub les pushf lret popa cmp incl dec inc adc out and ficompl pusha cld add les sbb test (bad) mov leave xor sbb daa (bad) xchg cmpl xor inc pop (bad) (bad) (bad) (bad) jmp dec xor popa and or ror pusha sub clc dec pop fistpll (bad) out stos jg pop push sbb jo add sbb arpl and or scas and (bad) lcall arpl push xorl stc xor inc mov inc dec sub add mov sar (bad) cmp mov (bad) dec sti pop out pop xchg sbb adc jnp rdtsc clc jg mov xorb aad (bad) xor out in add mov ds xchg or mov call dec lcall mov mov (bad) add daa mov andb lret (bad) fidivl add mov or inc in (bad) (bad) (bad) decl scas fistl rclb xor or dec sbb cmp sbb pop mov cmpsl jb insb mov es dec or xor ljmp (bad) (bad) (bad) call int3 pop mov push dec (bad) jne mov push mov xchg negl inc xor push cwtl rcll xchg lock mov imul dec je (bad) (bad) (bad) jle mov add xor data16 mov adc cmp jg inc (bad) jns mov sbb push xchg add hlt jmp xchg mov xchg jbe jno rorb ret xchg shr fldl js adc jo scas or and stc cmp mov (bad) (bad) (bad) push cmp mov pushl mulb inc push aaa sub nopl add jecxz (bad) ljmp push daa mov jmp fcomps lahf inc or lcall inc add imul mov mov pop xchg xchg jmp (bad) (bad) jg (bad) ljmp mov push clc pop sbb out imul ss call lcall jp mov inc (bad) test mov ret test jo stos and and rcrl and (bad) mov sbb adc fnstcw orl dec cwtl int3 in pusha mull dec sub dec xor adc decl insl mov movsb or repnz mov (bad) (bad) in jno and cmc int adcl add es sarl pop and notl cltd lret cltd sbb gs pop inc cld (bad) fdivrs jle ficom scas jg mov mov iret inc inc daa dec and add pushl clc (bad) sti jge in out cmp loopne xchg adc adc pop lret or mov inc dec or daa (bad) mov adc js sahf inc (bad) decl xor fcomp iret xchg adc dec call lds jg jmp js add dec pushl mov fbstp sbb sub or insb pop rolb (bad) (bad) call or cld fdivrl (bad) mov mov xor pop jecxz cmp (bad) mov lcall data16 data16 lcall (bad) (bad) lcall (bad) mov add xchg adcl in xor (bad) (bad) lcall pop xchg hlt mov pop lret imul and and loopne inc mov sbb iret cmp mov push pop sbb gs add (bad) adc popa add mov ja in fwait out mov ljmp icebp (bad) out pop rolb loopne adc sbb adc enter jg incl mov popl lret and int3 jecxz cwtl nop (bad) ljmp jge loope pop outsb and and push pop or sbb ret xchg xchg loop adc push lret (bad) (bad) (bad) fistpll or push mov aas mov or mov xlat jae pushf lret pop int (bad) (bad) jmp es js ret or adc push push mov mov mov in outsl sub sti xchg (bad) (bad) lcall or inc in and xor and cli clc adc mov or rorl pop in lock lcall std add fnsave daa bound in mov (bad) (bad) (bad) jmp xchg add push or out repnz mov popa or add push mov mov in pusha xchg int3 into inc add cmp dec sub add inc (bad) dec xor push lods popa repnz icebp (bad) or jg (bad) (bad) stc jp (bad) cmp jp cmp xchg (bad) je mov cmc es add scas cmp pop roll xchg mov cld (bad) call lcall lods pop (bad) in jle pushf xchg shufps xchg div decl xor add lcall add addr16 (bad) (bad) ljmp mov push mov pop xchg lock inc add fs sub sbb (bad) (bad) (bad) (bad) mov std incl adc xor mov inc mov push outsl lock jl jge std daa (bad) insb inc scas sbb xor xchg sbb adc pop call xor xchg clc jg inc dec in fbld pop pusha faddl (bad) (bad) jmp mov aam loop test stc lea movl in push nop mov insl insl (bad) pushl pop mov movsb je or pusha pop lret jg jae (bad) sub (bad) (bad) (bad) (bad) out das add shlb add sub fcmovne nop xor mov ja incb call dec add dec adc sti inc jle (bad) (bad) (bad) call or in dec dec add les stos xorl push push sbb xchg aas and lock (bad) mov adc cmp (bad) scas lahf aas and xchg inc femms or mov les das xchg das adc mov adc dec push mov jbe xor jnp sub jg (bad) (bad) cli dec stos add add push sbb mov add sahf jae jae sarl cli (bad) (bad) call push sarl and scas jg xlat mov lahf and clc arpl mov (bad) (bad) fistp cmp rolb bound orl repnz sarl jg cld mov sub mov xchg add in cli lcall jns sub xor jg (bad) cld (bad) (bad) push pop inc incl jl mov adc push mov popa insl inc mov sbb (bad) xchg add js cmp mov std jg push and sbb sub mov (bad) call jg jle movl mov adc mov (bad) (bad) sbb nop pop movsl enter add pushl add add fwait mov fucomip (bad) (bad) fnstenv bound add or inc xor rcll (bad) (bad) cmp (bad) mov cmpsl mov (bad) sub inc (bad) cmp sub xchg sub pop pop lods xchg les pop pusha test xchg ret lcall push mov mov xchg popf sahf ja call scas push jmp (bad) mov (bad) in push jmp pop aad orb fs movsb mov pop mov pop clc outsl push aam xchg (bad) enter fsubs jno fistpll pop push mov fmull mov (bad) outsl mov test dec or or cmp push sbb mov cmpsl xchg mov icebp (bad) mov bound add mov inc addl outsl (bad) int3 add (bad) sbb addl (bad) xor dec roll incl mov sbb (bad) xchg int pop or test ret (bad) xor adc jne stos js sub adc (bad) pushl repz and addl pusha cmp jg pop or sub bound ss fcomps (bad) (bad) push ljmp sbb insb (bad) idivl xor xor jecxz inc arpl (bad) cli mov arpl push js,pn les add mov pop mov (bad) dec push out lcall out (bad) jg add xor imul out xchg sbb (bad) (bad) call pop pop pop jno (bad) out fistpll mov jg repnz out pushf sub (bad) jmp fwait into inc add push cltd dec or (bad) je sbb dec loope jg inc dec es insl test adc fstp xchg mov add cltd jecxz (bad) (bad) ljmp cmp mov test pusha mov pop fstpl cmp push in out and outsl std (bad) dec xor dec jns leave mov insb leave inc scas rcl gs xchg lret (bad) (bad) ljmp pusha sub xchg sub and or lret in sahf pushf push sbb add call add inc xchg movb decl mov and leave adc movsb add arpl add add jae or in jmp int3 jae push ret inc out push push mov jo pop and mov cmp jno cmp (bad) (bad) (bad) decl mov sbb gs addr16 jbe pop inc push lock fs push cvtpi2ps pop clc lcall or mov mov jo or inc or adc sbb aaa cli mov cmpb lds negl xor mov (bad) (bad) mov jae out test jb data16 inc in repnz in or rcr (bad) dec and lods psrlw pop jg out and sbb in (bad) xchg push or cli cli inc mov dec popf pop jecxz decl xchg inc and call out push leave cmovo and add cmc cmp repnz call int fwait notb fstps sti (bad) jg fistp nop jle inc fild adc mov mov add in nop jl cmc sbb inc jle (bad) jmp jl xchg outsb test mov mov mov sub (bad) lcall sbb ds out ficoml stos scas xor outsl fildl or addr16 pop sub sbb (bad) call in std addr16 or stc (bad) aad cmp push scas jns sbb mov aam mov dec mov je sbb gs xlat sub (bad) push add jne call (bad) add add movntps fsubs mov in sbb sbb mov rorl xlat inc mov inc mov mov hlt dec sbb out or jge je scas nop rol adc adc repnz jae adc pop outsl pop clc das cmp inc repnz xchg cmp (bad) fcmovnu outsb sbb sbb jmp mov sub push decl mov std push dec and ds cmp push mov clc jge fnstenv (bad) ljmp pop pop xchg popl mov in dec mov xchg xchg imulb cmc decl es stc sub lar jg in push aad std add pop xchg xor addr16 into fistp jg mov aad cmp ret leave cmp jg rorl push mov fs add outsl (bad) shrl jg and mov leave insl and setb inc repnz and (bad) mov pop and test int3 and inc out in add ret mov clc popf xchg daa iret or dec cld inc sti incl adc jecxz push aas ds mov (bad) cli fisttp pushl mov scas push (bad) mov xor inc mov xchg lcall and add fs xchg (bad) das hlt (bad) fistp (bad) loope sub out js decl in stc fildl jmp das (bad) ljmp inc imulb das cld pushl shl sub xor shlb jp add mov add lea mov aaa insl shl xchg stos cs adc ljmp cld pushl aad push pop in lds mov iret xchg fildl aad sbb push adc icebp outsl fstpt int3 xor das hlt jl ds (bad) repnz jecxz ss pop mov mov add mov or outsl or out jno out pusha mov std push inc iret sbb pusha arpl dec sbb jg pop clc mov popa push jnp inc cmp rclb or inc popf je jle mov cld mov cmc adc dec xchg jns pop sub push test ret das test mov cmp fucomip call or sti add cmp cmp xchg das test dec pop decl cmpsl inc hlt adc adc dec ds (bad) (bad) mov xchg addr16 dec mov xchg mov and or mov (bad) xlat and pop clc mov call cmp in push decl imul cmp push mov incl adcl repnz imulb inc push inc cli addr16 insl cld das std adc call pop in jp cld sub sub fisttp stc jnp outsb hlt push sbb aas adc aas push mov pop fidiv in xlat test pop sarb std aad sti outsl mov out bswap bswap dec push jle test mov mov sbb cmp sahf lahf or scas sbb lea cmp loopne test sub aaa insb xorb call ror push sbb fisttpl repz pop push out xchg std stc pop push xchg sbb lds mov outsb adc out adc arpl or jp ror movsb outsl cld decl sbb push (bad) aaa test xor sahf lahf lock repnz mov imul lahf add mov or idiv ljmp jbe mov and (bad) in aas test stc ret and mov in add mov fstps pop or mov notl lret addr16 hlt ss sti add push adc jl lcall push stos mov xchg inc stos inc das sub sub lcall sbb std lea mov aas pop and push jg loope fistpll outsl test out mov sub cmpsb inc mov (bad) insl loope jg mov (bad) push pmullw and push (bad) movsl outsl sub jmp (bad) nop sar (bad) dec dec inc je inc mov sub mov lock pop cli cmpsl and mov pushf sub xchg cld mov loope jnp decb xchg daa int3 push add jecxz mov pushl inc iret xchg pop nop jge xlat add add mov mov ljmp divl xor pop clc decl hlt ljmp fidivr mov (bad) dec (bad) jne arpl mov jmp pop sbb xor les push lret pop or out into push jns mov adc (bad) mov call sar shrl call inc stc inc sub jb test icebp lods lahf cmp push fstps add inc (bad) mov or loopne adc mov movsl (bad) add or test push inc stc mov ss ljmp jne push cld jmp decl je sbb in scas imul in push jmp stc ja lods iret addr16 test add mov mov cmp cmc (bad) (bad) (bad) mov jb mov adc jp in addr16 inc loopne (bad) rolb lcall arpl cltd cmc lcall fld cmp mov cmpsl loope scas mov cmp cmpsl xor lods sub clc jmp fidivl aam jmp iret pop and test stc dec stos or (bad) inc imul repz mov cld mov cmc push shrl jcxz add jbe push push scas and movsb sub mov (bad) jnp outsl hlt push mov rcl and (bad) sbb ljmp fcomps movsl push jae cmp push pop in jo outsw mov xchg push pop shr (bad) jg cld mov ja dec mov popa out lods pusha mov iret push js mov mov out nop and cli (bad) jg cmp std or (bad) jge popf push cmpsb (bad) ficomp add repnz cltd jns ljmp js or sbb in inc or pop inc leave lods (bad) ljmp gs inc (bad) jp enter in or adc sarb std lret adc inc loop sub lock push lahf mov inc push iret dec sub out sbbl mov test push loopne lret adc xor rcrb std aaa cli add mov mov rolb das insb std shl jb pop xor into mov mov add pop clc fwait (bad) or jg jecxz cmp add mov cmp rol decl jae cltd jl pmulhw mov and add repz pop (bad) add cmp mov jo xchg jp fs test test decl adc or leave into and mov shlb cmp cmp pop pushl xchg inc fsubl mov incb ret fadd add xchg jg inc dec dec or in mul fadds enter sub adc adc inc shl mov lcall xorl jbe inc les or push jns xchg push cld pop push push pusha negb inc (bad) hlt addr16 (bad) (bad) decl jge adc or adc rcrl fsubs push cmp pop out imul jnp cmp or jmp lds sbb push and and mov or and incl lret (bad) in add (bad) mov adc cmpsl adc (bad) pushl mov inc (bad) xor jno push in jg dec dec and mov insb mov push inc pop push movsb cmp xlat cmp sub call adc jae addl into jne (bad) inc pop add aad ficoml pop popf rcrb push inc das out pop fs (bad) (bad) (bad) in out push adc cli sub mov inc mov shlb xor cli jp adc scas hlt xchg cvttps2pi popa mov and push add lcall test fsubrl outsb stos (bad) mov sbb test imull stc mov xchg xchg adc or xchg clc jmp adc jg hlt add inc and fdivl add pop lahf in lods mov or mov cmc sbb pop clc call nop push test nop stc leave dec sbbb jo xchg cld xchg xchg int sub add adc mov sar aam sub inc cmpsb test loope lretw fucomi ret inc and xchg xchg (bad) incl cmp cmp pop int3 jge and out mov int pushl addb push inc hlt mov in fs adc cmpsl jg iret cmp js inc into adcb in lret and sbb (bad) (bad) pushl xor data16 ss fisttp mov add pop pop push in (bad) (bad) cmp (bad) mov adc jmp sub ss xchg push mov (bad) mov mov mov mov sbb inc clc pop inc inc sti ljmp hlt adc lcall std (bad) mov fmuls add push mov imul sbb cltd mov das loop mov ljmp (bad) (bad) ljmp lock popf js inc rcl lock sarl cs mov or popf lea pop daa sub std cltd imul out sub fnop jmp dec or pop stos or xchg ds jns fsts iret sub add jno adc inc and add jno orb jmp call and or mov jb (bad) mov mov lea cmp xchg mov push nop fstl bound std pop clc xorb dec test xchg jb rolb (bad) in lcall fisttpll mov lret mov fiaddl notb jmp inc jne hlt in mov cmc mov hlt dec and aaa clc (bad) cmp add cltd (bad) lret sub in mov fwait sub aas in xchg divb jg lods ljmp and cli push in xor imul jg mov insb mov inc fs fidivl call (bad) jmp and or cmp push xor push je adc popa ds lods popa cs add (bad) jns (bad) mov dec out xorl sbb daa push (bad) (bad) (bad) inc dec and adc cltd lods jle pop jg lods ds sbb adc (bad) adc les lahf mov decl hlt daa adc inc repz and negb or mov jb pop mov movups (bad) (bad) mov adc les mov (bad) jg sbb cmp enter cmp dec (bad) call jl push or xchg ss in add pop cmpl or pop mov lods push jg stc test (bad) or push pop and adc add hlt and int3 dec scas xor fucomi or jge icebp inc (bad) test push jg push push arpl cmp cmp pop cmc bnd cld aaa (bad) jg aas cmpsl adc xlat mov (bad) (bad) pushl or mov and and orl sbb mov pop mov cwtl lods cmp jecxz or or loop das adc lea xor and testb push jl dec rol (bad) stc cmp adc jns mov popf std icebp scas stos (bad) jl cmc lahf out sbb xchg enter insl cld sub pop js rcrl inc pop pop hlt pushf ds jg (bad) incl pop jge lds push sbb fstpl mov xchg shrl in adc push inc rcll add test push pushf loopne rorb and (bad) push push rolb add outsl cmc test or ss sbb (bad) ljmp and cmp push jle mov cmpsl sub lahf cmp stc pop negl mov dec je icebp call mov mov pop pop out test clc push aam mov gs jle adc sub (bad) lcall mov sbb adc xchg in call movl or ret inc icebp push (bad) aaa push jb cmpsl sbb test lret cmpsb cmpsl dec adc in xchg scas mov xor aaa or movsl (bad) (bad) fnop mov pop mov jge or cmp fcomps fistl or jg pop dec imul and pxor scas sbb fisub ds (bad) jg fcomip aam jns stc cwtl mov insl pushf addr16 pop popf push sahf aaa (bad) pop cld (bad) in mov aaa outsl int cmpsb dec add pop loopne sub inc push shrb jp pop and insb movsl (bad) (bad) decl repnz jbe popf test ja out xchg cmp mov cmpsb sbb enter (bad) in lret sbb rorl jne dec fcmove adc das aam mov inc sarl jb inc out in jae sub pop dec std dec push mov (bad) jmp add (bad) (bad) (bad) jg (bad) push jne fxch mov adc rcl push jge cmpsb xchg test mov pop mov fnstsw sub fs mov (bad) lods lret sti (bad) (bad) (bad) mov jne aam scas pop mov cmpsb cld pop or inc dec dec pop mov (bad) (bad) ljmp cmpsl xchg sarl arpl pop pop addr16 add jle out push pop xor (bad) decl data16 cli jo lcall pushf mov ja pop xchg dec incl jo ret daa inc mov mov inc lods fnstsw mov (bad) jg dec stc (bad) mov out jae mov mov loop sub sbb push push dec imulb xor pop jle push mov or out repz jae push sub leave sbb mov outsl jno call (bad) (bad) out mov lods mov jp adc ja (bad) mov (bad) (bad) mov adc sub xor repz arpl mov sbb scas mov (bad) push stos imul js (bad) (bad) ljmp inc lahf jmp fnop cmp xor movsb ffree ja std xor call jecxz or mov xchg lret add lods xor (bad) (bad) lcall scas push and push push dec jecxz mov push icebp and insb adc adc jg loop inc cmc mov sahf out cmc mov fadds (bad) (bad) (bad) (bad) mov ror or xor cli (bad) fistp dec lahf stos dec or inc lea sti (bad) decl cltd mov lods fidiv cmp (bad) xchg dec popf jne cwtl mov xlat hlt subl push push jge jne inc sub (bad) lcall xchg xchg pop nop sub popa adc test pop mov out push std lcall sbb cwtl jnp rorb (bad) ljmp sbb in cli cmc mov xchg outsl sbb dec jg into insb mov lcall and xchg popf cmc pop jbe (bad) ja inc popf dec pop fmul mov (bad) fwait test cmp mov and jg mov cmp loope lret sbb scas pop jge imul sub and xlat mov jns cmc rclb bound cmc (bad) decl ljmp arpl ljmp lods mov div cmc aaa clc jmp sbb cmpsb mov jno mov insl loope vpsubq xchg cs add lahf push mov imul (bad) jg sbb loop mov dec sbb mov aad in mov push dec fsts cs (bad) (bad) jmp sbb push out push lret loop movsl sub cmpsl outsb (bad) lods in mov sbb adc (bad) jg out stc int3 or add cmp sahf or cmp (bad) (bad) jp xbegin mov pop dec in mov jae pop fdivrl add pushf scas adc xchg inc mov ja jg mov push pop out jne ja enter pop popf leave mov or inc aad xor jns aam inc jnp push push scas cmp int pop loop call test xchg gs dec mov push leave mov cmp cld or jns in icebp xorl movsb leave (bad) dec sub xor cmp das call fsub sti jl inc mov mov outsb jno (bad) (bad) (bad) fldt sub in (bad) ror cmp sti setno cmp (bad) (bad) (bad) (bad) ds mov jge mov cmpsb ja or fldcw cmp loop jl (bad) (bad) (bad) jg fcoml cmp lods sub mov push jmp dec dec mov jb inc mov idiv (bad) lcall push out sub (bad) mov mov sbb cmp imul cli incl jne xchg cmp pop outsb repnz std pop std (bad) mov ds jl push ljmp enter jg incl stos mov lahf and and aad (bad) daa (bad) call insb xchg dec scas in jnp imul aad insl inc jge (bad) (bad) (bad) jmp dec xchg and cmp pop ja insl mov cmp push imul ficoml (bad) xor sbb sub cmp and xor push das aas add (bad) ljmp mov push mov push (bad) inc lret (bad) xor outsb gs sbb adc (bad) ljmp addr16 cli mov sti ss adc outsl cmc call xchg xlat call ljmp push pop stos sar sbb or sub in cmp (bad) (bad) (bad) push cmp or mov mov push cmp push xchg adc (bad) add outsl lock push imul jge mov loop std fistp add pop mov and (bad) (bad) (bad) lcall aaa jne sbb jp lret add (bad) jg ja test or cmc mov mov in je movsb mov (bad) mov lret pop dec jg inc ja (bad) (bad) fild xchg icebp rcl lea cmc push (bad) dec movsb xchg imul pop xor mov mov outsb (bad) push xchg pop mov incl lock sbb pop mov push shr mov repnz mov add dec mov stc cwtl or test rcll (bad) (bad) jg je xor mov sahf arpl push lret push sub adc add (bad) decl int mov int mov inc sbb hlt (bad) ljmp push lods inc jg sti inc (bad) cmp inc and test (bad) (bad) (bad) mov mov ds mov scas and mov jae mov (bad) pushl (bad) movsb cwtl mov mov lods cmp leave cmp fcompl stc mov (bad) (bad) pushl mov xchg push sub jb cmp push stos push ljmp dec lods iret es into adc (bad) (bad) fistpll out xchg lahf (bad) out testb leave outsb sbb push fistl ret dec jle mov jno jne out pop out push dec iret (bad) fucomip inc jg out adc push xor jo xchg mov cmp jp cld (bad) incl lods cmpsl icebp mov in sub addr16 dec out mov gs pop adc xchg pop data16 lods ja jb (bad) (bad) pushl and vunpckhps popa outsl aas pop (bad) in cmp mov enter fisttpll push cmp bnd gs (bad) (bad) fcmovnu jnp int3 jbe adc mov pop out int ljmp incl int3 loop fdivr xchg addl leave lea cld test (bad) ljmp jb dec in fstp jmp cli and push mov (bad) or dec jnp push fisttp (bad) out xchg arpl repnz and (bad) (bad) jg scas push scas or mov mull pop fidiv adc mov mov fs cli outsb pushf push mov mov (bad) (bad) jmp inc inc xlat fnstcw fs and aad icebp pop cmp xchg xor cli sahf outsl cmc incl adcl pushl (bad) (bad) call jbe cs mov cmpsb insl enter fwait into sub and jge (bad) call (bad) cli clc movsb ja mov mov pop aam sbb cmpsl push cltd je push cmpsb ljmp cmc (bad) cmp cmp enter sti (bad) out mov jno sub daa (bad) mov cmp (bad) inc mov idivl mov and sbb jbe inc fwait es cmp sti push test add xor ror cmp mov mov fisttp icebp sbb jbe es jge movsl fimul clc lods (bad) mov lahf femms xchg xchg daa insl lock movsb add ja jg inc or jg (bad) call add fs ficomp repz inc pop mov jmp (bad) pushl into mov mov push push jae rep cltd mov xchg pop loop imul mov std push cmc scas xchg daa sub je mov (bad) loop int3 mov jmp push pop iret jbe pop cli das lock push insl pavgb push jecxz (bad) (bad) call imul loop rcrb xor cwtl cwtl lock pop adc daa push out inc in cmp popf aaa or ja push (bad) dec jae stos push pop out cli xchg sbb ds mov (bad) in repnz fs out imulb std adc xor add (bad) (bad) (bad) jl mov aam lods mov std pop mov sbb cmp mov ljmp and (bad) mov mov push frstor out decl jae mov jge xor outsb jae mov sbb (bad) jmp inc (bad) cmp out cmp dec or lods (bad) fs imul loopne nop jnp rcll lods or mov pop xchg in loope and in rcrl jg ljmp enter mov in aad or shlb sub xor outsl paddusb push sub ret push int (bad) (bad) (bad) in ror mov pop push je hlt int3 dec lea cs in in ljmp (bad) das dec cmp jns ss ds icebp (bad) pushl mov cmpsb inc fadds cmp jbe jg (bad) (bad) call mov dec mov clc mov dec jmp js (bad) fbld cmp (bad) incl aaa jl roll stc sahf ret mov loop jae lahf sub jno call mov (bad) dec movsb gs pop (bad) push dec push jns mov mov mov inc lock sbb sbb stc jecxz mov sahf pop popf mov call add cmp scas shrb stc aaa cli (bad) mov adc pop xor jp lds in (bad) (bad) (bad) ljmp sahf sahf xor aas stos stos je adc and push inc jecxz iret adc hlt fsubl push div (bad) (bad) ljmp pop outsl in daa scas jg dec mov lods lods or mov (bad) test mov (bad) lcall pop xor loope mov pop fwait adc jp hlt jbe (bad) (bad) decl arpl lret or repz mov ret in and call pop cwtl inc pop mov fsubrp lods cmp pop shll dec cmpsl fstps pop ljmp mov arpl ss ljmp hlt push outsb jbe das mov mov push sbb cmp aas (bad) or (bad) (bad) pop loop mov mov int mov add mov pop inc cmp cmp dec pop pop push fmuls (bad) mov test imul (bad) addr16 pop mov lret sub ret lcall xor xchg or fbld clc divl idiv mov xor das cmc std (bad) xor push in mov push inc push lds jnp xlat jne sub pop cli call mov movsb repz mov lea cmp out pop mov incl call sub mov lret mov mov into push pop jl leave mov mov std (bad) (bad) call xchg cmp data16 mov (bad) mov jae mov (bad) (bad) ds mov (bad) push popf xchg inc clc xchg mov cmp (bad) decl and mov push inc imul leave in mov imul mov ss into outsb js daa push inc cmpsl cmp sub iret mov outsl icebp sub cmp add leave jg mov je mov lcall fistp add lahf cmc ds (bad) (bad) jmp std fcompl jl mov out gs push (bad) into test adc pushl cli call xchg xchg dec lods in mov stc repnz mov sbb out in (bad) lcall sbbl repz jns dec scas loop sahf jns mov mov push nop (bad) mov mov cmp sbb js lcall in fcmovu mov aaa (bad) inc xlat jo sahf jbe lahf jmp jl rdpmc das dec and ljmp (bad) (bad) xchg cld sub xchg movsb ss lret mov mov fs sbb (bad) mov and pop lahf aas lret xchg ds repnz adc adc (bad) in cltd scas xchg je cmp push outsl mov or sub push xor repnz push or in rcr xor mov mov outsb stos fnop xor cmp inc jmp in dec lcall mov add scas adc mov dec sub xchg fistl push imul hlt pop mov (bad) sbb or dec in scas imul push in mov push xor mov fs mov iret jecxz (bad) lcall mov and pushf fs jmp pop imul cmp mov or fnstsw jg imulb pop dec cmp (bad) in rcll xchg stos mov mov mov call stc (bad) call (bad) dec (bad) in aaa test cmp bound test sbb imul jb jb mov out cmc adc loope icebp movsl popf xchg ljmp xlat pushf xlat or mov dec cmp pop push gs push pop jns fistpll bound (bad) (bad) fnop popa scas cmc aam xchg mov inc mov jge (bad) fdivs iret pop clc (bad) (bad) lcall mov jmp stc (bad) or xchg je ljmp inc jne enter mov je cmc pop scas and inc rorl lock ret clc outsl lock xor push jnp insb lret pop and incl out fdivs jb ret add xlat push mov pop sar (bad) fcmovnu iret add int3 jle jle xchg scas vpsllq mov push cld sbb ljmp push clc cli loop cmp add inc cmpsb out push test add insb dec test push inc sbb xchg lea adc daa and jecxz add lds push (bad) pushl jmp or out out add push insb jo cmp or lea test (bad) mov out sbb (bad) jmp fdivrp sbb sub xchg cwtl fs popa sbb bnd and aaa (bad) (bad) call aam hlt xor cmp inc cwtl push ds popf dec test (bad) pusha out jmp out out out mov sub adc ror nop loopne sar (bad) (bad) (bad) mov adc sbb shll mov (bad) ds cmp inc (bad) inc pushl jmp out push or shl and cmp rorb test dec das pop sbb sbb sbb mov (bad) mov lret aam push int fiaddl test cmp inc insl mov fwait push or addr16 add cwtl negl addr16 jg mov stos push and sub (bad) (bad) (bad) jle jbe mov cltd inc jo int lret hlt sub stos and add std lock pushl std repz pop jmp add pop ficoml jno push lea sbb and pop ja pop and js mov or (bad) (bad) (bad) jg ror jmp (bad) mov fimull mov movsb in les cs clc mov outsb push mov outsb lods test sub (bad) (bad) ljmp cmp sbb (bad) repz dec mov jae mov mov pop pop (bad) sti call decl jp lret jecxz aad movsb movsb jne push cmp inc sbb clc (bad) jg dec jne cmpsb stos sub pand sub jae inc into imulb cli jmp fcompl cmpsb mov jmp sbb das insl popa dec or xchg lret (bad) out mov (bad) (bad) (bad) jmp dec loop aas jbe (bad) pop test and das pop xchg pop data16 xor (bad) fcmovu mov ljmp out clc pusha dec mov pop push lock xchg cli and repnz mov push imul jns repnz jmp dec lret and outsl icebp (bad) ljmp iret cmpsl outsl fisttp std jnp aaa sbb in pop mov push ret out (bad) (bad) decl fdivrl inc xchg addl fwait std std out sbb (bad) (bad) decl or scas lods cmc cmp stc ret pop rol loop push out mov loope jns test rcrb mov pop xor std xor popa int scas sbb shll cs loop outsb ret sub insl mov inc test in sbb ds mov cmpsb fwait pop test xchg incl scas pop jnp pusha sti divb (bad) adc mov sahf jge push push (bad) (bad) pushl in and cmpsl mov xor push pop lahf mov std ljmp lea (bad) sahf pop aad data16 repnz fwait jbe nop pop mov push mov je xor call dec (bad) lcall cld ja icebp mov xor outsl dec mov mov outsl lcall lods rcll fbstp lahf fs popf out jp pushl cmp fwait cmp outsl lahf pushf jo push or xchg into sti sahf sub dec cmp jbe cmpsl mov call sub cld mov dec sbb add test pop jl jns insb shlb xor push mov lods jae mov jl addl pop mov xchg cmc xchg outsl jge pop leave rcl xchg fildll fidivrl test clc mov sub mov mov nop dec (bad) (bad) (bad) inc pop cmp mov jne or jg ret sub dec clc jmp jne lock repnz mov popa and je fimul loop cmc stos jb (bad) int mov lcall fistpl xor call out fcoml push pop mov mov (bad) (bad) decl pop jp cmp cmpsb js mov addl sub pop mov fucomip (bad) incl xchg leave fcoml loope shrb inc (bad) mov pop (bad) inc xor icebp jecxz dec lret std lock sti inc cmp outsb test imul iret in fcos lock dec insl (bad) scas inc mov mov clc das hlt xchg and pop push push jecxz sbb and les jne repz mov or sub das decw mov pop push (bad) mov jb push pop pop ja and (bad) (bad) cmp out dec test mov mov iret pushf mov dec stos jmp mov xchg data16 sub ljmp pop lock cmp cmp outsl popa pop cld pop sub (bad) (bad) decl ds pushf clc and addr16 jg loopne sti aas (bad) mov pop fbld lcall mov adc clc repnz mov iret cli pop icebp movsl ljmp stos mov out pop or (bad) decl cld jl mov fildl push ret pop fnstsw mov shl ror aaa cli (bad) lcall xchg mov imul xlat test xchg sahf jg (bad) (bad) (bad) lcall xchg jae aam fadd cwtl mov iret jge mov rorl test fidivrl (bad) pushl test stos cmp sarb cs adc call std xor adc pushf sahf xchg pop les dec das daa lods or in popf leave pusha lret outsl std call and imul cmp call cs sbb mov ja add fwait or (bad) call cmp jg mov hlt test jg mov mov mov (bad) ret movsb inc pop mov mov popf mov shrb in sbb or addl sbb xor (bad) jmp cli mov movsb dec mov xchg pop fstl inc add fdivr frstor aaa fwait xchg mov add shr jle lock cmp data16 pop imul mov (bad) cmpsb daa dec (bad) cmp push iret int3 lds jmp or repnz call and iret mov jno jl jg mov xchg cmp (bad) (bad) (bad) lcall lods xor mov cmpsb pop cmp push mov cli mov (bad) cmc arpl mov cli (bad) jl fistpl xchg loop sbb imul das hlt mov into ret inc shrd (bad) sbb jl hlt stos xchg (bad) ljmp (bad) aam jg mov mov jnp (bad) xor (bad) (bad) ljmp sbb pusha mov lahf and stc imul aaa daa pop jns idiv or (bad) incl test (bad) dec outsb mov aaa sbb rcrb mov lods aas jecxz jae sub ljmp jle mov cwtl ficoml jb fstl jns jmp fstpt (bad) call std enter xor enter xchg stos aas sub or (bad) lea mov or movsb aas xor jb icebp hlt insl mov fwait cmp push dec pop cmp xchg sub addr16 xchg adc push jo sahf mov jno cmc (bad) mov xor int xlat loop mov cwtl out xor lcall outsb outsb insl sub xor sbb out push (bad) lcall jb popa push loopne mov scas xchg jns imul mov xchg mov fild in mov ja dec mov enter jle mov push mulb cmpsb inc adc (bad) out mov xlat sbb out repnz (bad) (bad) pushl repz cltd jb test xchg xchg ljmp cld (bad) inc jecxz mov fwait jo xchg xor fldcw adc mov and xchg push (bad) fcmovb fwait aaa sbb ss mov fsubl ficoml (bad) (bad) jg mov rcrb xor aad je mov xchg ja (bad) (bad) decl xchg es jge insl outsl icebp int3 out (bad) xchg test xchg jl jo (bad) call xchg stos mov cs (bad) push mov es ds jg mov decl push dec push sbb insl fcmovnu and addr16 (bad) (bad) (bad) mov sub jp sbb lods mov push or das mov loope mov push fstp pop insl mov loop outsl incl cmp imul cli cwtl hlt rcrb ljmp lcall push mov (bad) lret aaa jmp mov arpl adc daa push (bad) (bad) jg mov jle popf sbb mov insl fldl fwait insb repnz (bad) (bad) (bad) incl cmp mov mov test stos mov jb imul fdivs add icebp insb aas xor (bad) (bad) in mov push orl insb push jno,pn fldl mov test ret stos in js jno dec pop imul xor (bad) call fstl cmpsl pop pop sbb jmp loope cmc pop cmc xchg (bad) call (bad) dec ss pop mov idivl bound sbb ljmp fcomps fistl das jg lock mov jbe pop jmp (bad) adc push dec (bad) (bad) (bad) pushl fbstp aam pop push subb mov cli and mov popa das mov cli (bad) fldt push cmpsl insb sub (bad) jge (bad) ljmp cmp pop std loopne xchg jnp inc lods mov jno mov aad std loopne sub cmp (bad) jno in (bad) (bad) jmp xor (bad) leave fisttpl mov sbb cmovp pop lcall jmp cmp jecxz movsb icebp xchg das das adc cmp cld fcomps and jo or lcall push cld dec mov imul daa gs (bad) ljmp lock int mov stc stos hlt sbb push shr inc cmp decl ja pushf pop (bad) repnz mov dec inc cld (bad) cmp (bad) (bad) lcall pop call pop icebp mov std mov test mov pop clc lods push (bad) jo pop pushf pop sbb jmp dec icebp xchg out mov call xchg test xor pop dec sahf mov stos push (bad) (bad) outsl aas push push mov fwait push cmpsb int xchg jge rcrl or (bad) lcall (bad) aaa insl ss pop mov mov dec (bad) xor test sub (bad) (bad) (bad) into (bad) sbb cmp ljmp push push xlat fstpt rol xchg clc push pop fisubr aam lcallw lock (bad) (bad) (bad) call push xor pop shrl es out dec sahf jae cli mov imull das cld popf test mov sbb dec (bad) mov push (bad) jns loopne dec loopne in fcompl jg dec xor xchg (bad) (bad) ljmp test dec fs xor jnp daa (bad) idiv mov (bad) aas inc packuswb push (bad) fnstsw pushl sub test ljmp cmp incl xchg fstp aam or xor (bad) (bad) in mov jge lds pop push jne in mov mov add pop cs push stc (bad) (bad) lcall adc cmp icebp sbb das test mov ljmp mov scas lahf jp out pop jnp int imul (bad) out mov incl cmc mov sub mov in into je aad es scas jmp adc mov js fstl lds lock test iret sbb lds hlt pushf xchg mov rcl push xchg and sbb xor cmp pop cld lods inc enter in nop imul mov and fisubrl pop push clc jg xchg mov jge ret inc xchg jmp jg mov ja adc push ljmp cmp mov mov (bad) jg (bad) std mov ljmp push pop data16 mov and leave push add in dec and je pop xlat loopne out lcall lods daa push cmp xor cs test outsl insl insb dec pop idiv outsl jns jne gs js jb jo,pn jo and jo add add je ljmp push push je out andl push push push das xor or add push aam cmp stos (bad) outsl sub sub orb or adc lret sub neg outsb cmp jp insb mov xor (bad) (bad) in cmp push add jne and cmp or pop fcmovnu push jb cmp and sub repnz push push jl imul cmp xor xor mov jne jne push xor push ja call inc imul lock loope outsl sub popa outsb cmpl in jne sub cmp pop xor and gs les jnp adc adc fnop inc cmp jo imul sub insl insl adc sub sub mov push dec push dec sub sbb xor or aaa sub aaa adc pop cmp add adc and add int into int3 jb and cwtl lods and mov xchg lahf je lsl mov cmp and aas or jge mov mov mov and add int aad pop adc (bad) in (bad) push add adc adc add push add mov ja jmp jg or lock rolb test les ljmp adc mov pop pop pop pop and dec add adc int3 clc rorl (bad) (bad) jg leave lcall dec lcall or inc mov decl sub jb rolb add mov out mov test jge cmc into std cmp fidiv cmp mov cld pushl xor (bad) push adc cmp mov out outsl icebp (bad) jg sbbl jmp adc ds jl repnz jno mov ret cmpsl pusha mov arpl pop cmp lods enter lock (bad) fistpll dec repz ret push push xchg icebp pop sbb out scas mov lahf rclb cmp mov decb lahf cli iret (bad) mov dec mov adcb fstpl clc (bad) ljmp adcb xchg fnstcw sbb xor jae dec jmp xchg mov add mov cwtl push lods dec idivb pop xor fadds jg mov push mov lods andl test jae push cld pusha fcomps add adc movb call out shlb data16 or add sbb sbb push fimull test shl sbb pop std aaa mov (bad) xor xchg cwtl sti or fildll faddl (bad) (bad) mov div jg das pop out adc xlat cmp mov mov push sbb (bad) fild and mov imul ljmp (bad) fnstsw ret clc lahf or ja (bad) fisttp (bad) fcmovnu cmp inc inc mov jg lods (bad) call mov ja (bad) icebp lahf pop loop xchg in jbe fmul out xchg insb (bad) (bad) fildl mov dec mov fwait outsb jmp inc fs mov inc and ja (bad) (bad) (bad) ljmp enter popa popf add stos scas nop dec mov enter mov in outsb hlt sbb outsl jg jmp dec mov enter and jb sub push (bad) (bad) fbld xlat jle mov mov mov (bad) repnz (bad) (bad) jecxz in or fisub (bad) pop (bad) (bad) (bad) inc dec xchg call fsin push xchg pushf std les test imul pop cmp jg call xchg cmp cvtpi2ps xchg repz stos jb sbb xor mov xchg cmpl pop scas sub sbb mov (bad) mov pop movsl aas daa (bad) pop pushl (bad) pop mov push add push rcll cli in cmpsl jge lods (bad) push lret ss lods insb (bad) lret fstps insl push loope sub shll cli cmpl (bad) cli mov xchg dec out jbe addr16 xchg ljmp cmpsb lods mov inc dec mov or icebp call clc mov ds push add dec std xchg add mov insl xchg mov insb xorl xchg mov mov (bad) mov popa loop in notb pop lahf (bad) and mov imul sbb or mov (bad) mov fs jmp dec insb push (bad) sub inc gs mov addr16 (bad) pushl or sti in inc aas add and sbb ret ds fs (bad) (bad) incl (bad) je aam jge repz dec insl out adc sbb std push lods jecxz inc jno (bad) (bad) jg (bad) daa (bad) cmc or xchg in push fsincos and or ljmp cmpsb push add mov push stos ret xchg cmp sbb (bad) (bad) (bad) ljmp outsb or inc fsubl mov add insl test imul (bad) incl sub (bad) pushf in cmc push inc push mov add sbb das cmc decl in adc bound mov sub push xchg daa sar dec mov movsb add inc test xor dec cld and incl or dec and inc stos cmp (bad) (bad) push das (bad) popf inc cs outsb mov dec aam jge hlt inc fcmovnu mov add or xchg cmp and pop xchg jmp dec adc insb aam xor cmp xchg pop xchg push mov jnp bound ljmp fidiv in jecxz push xlat inc pop popa in sbb sbb sub lcall (bad) jb rcrb cwtl mov sbb (bad) ljmp mov adc adc repz xchg xchg shlb cli (bad) ljmp xchg xlat (bad) jmp xchg cwtl push mov xor add fnstsw imul stos mov aaa mov push cmp jmp (bad) push dec hlt dec mov data16 fcmovbe or sub inc jg test (bad) call sub jae aam adc enter ret push (bad) (bad) add cmp pop aas mov push adc inc loop adc and mov cs add dec push insl dec jnp mov pushf push cmp and pusha pusha mov hlt (bad) (bad) ljmp icebp (bad) outsb xchg and jmp pop push fwait mov aaa mov and (bad) (bad) (bad) ljmp fistpl xchg (bad) rol scas jmp lea push imul les into cwtl push jo push or test jmp cld (bad) jmp or push repnz inc cmp ret inc push dec inc mov and (bad) incl int3 inc int sub ss sbb xor mov (bad) (bad) (bad) pushl push lods sub in adc or cmpl insb sbb jnp ret jne pop ret xchg add outsb test fs (bad) repz mov cmp mov (bad) out push popf out lahf sub mov inc jno into mov (bad) (bad) in decl pop fwait dec cmp cltd or lret es andl add adc lock pop pop aas imul or jmp push dec xlat sbb into pop mov jg or or cmc lds sbb test lock sbb jge xlat jl (bad) xor leave mov inc push rclb sub cltd and mov incl ss or inc daa sub mov lds imul js sub mov icebp mov fildll aas push (bad) mov lds mov js pop call (bad) scas sbb dec jae imul xorl lcall lret push pusha push pop stc add cwtl xor jmp sub imul mov cli ljmp decl movsl cmp jbe ds out jp adc lds adc movsl (bad) aad and xchg imul xor jae repnz nop (bad) jg dec scas clc mov xor dec outsl (bad) leave enter xchg xor outsl hlt out xchg popf mov mov pop mov gs dec addl mov pusha ret insl pop xor fst shlb or shr sar mov test mov dec mov inc add and das enter xchg lods (bad) (bad) (bad) (bad) jge das mov aam lds or push dec jp mov imul cmc icebp mov in (bad) jg enter addr16 out xchg daa jp xor inc pop mov je (bad) (bad) (bad) (bad) (bad) jl mov (bad) aaa mov icebp push jge inc or jbe dec test push test adc mov mov cmp or out (bad) (bad) (bad) fist (bad) aam leave repnz rorl ds cld cli push cmpsb or out adc fdivr pop mov adc inc pushf (bad) pop xchg rolb push push mov push pushl xchg cmpsb xor inc dec (bad) dec aam mov cmp jg and cld mov dec ds xchg (bad) (bad) jne das push cmp mov inc and mov and ret dec outsb lcall jecxz ljmp xchg clc inc cltd mov push xchg popa cmp scas xor sub (bad) ja push mov xchg add pop cmp xchg mov out and cwtl mov or jb xor xchg mov inc cs test adc out lret (bad) dec mov sbb add mov ds sbb pop in lock (bad) mov pop jo in sub mov pop jno stos dec popa mov mov in (bad) (bad) (bad) (bad) mov cmpsl pop ret adc and ds dec and mov xchg ret dec lret jg repz add mov xor aaa rcrb xchg (bad) (bad) jmp mov jae mov or sub xorl cld incl pop sub add sbb sbb (bad) (bad) (bad) ljmp out xchg dec or and add push sbb sub jmp mov cmp mov rorl cmpsl lcall aaa add in sbb and mov jg jg xor cmp cmpsl add or add or (bad) (bad) pushl mov mov aaa fs jl mov inc xor sbb lahf sub iret rcr (bad) call lods rcll shlb fwait push mov iret clc mov jecxz (bad) (bad) (bad) pushl mov xchg jbe rorb jecxz cmpsb adc lahf jl movsl or push mov (bad) lcall (bad) into xchg mov call mov (bad) mov mov cmc out into inc pusha lret rcrl ror mov (bad) (bad) call dec mov (bad) xor int mov es sahf bound je jg ret add imul inc ljmp and pop cmp jl outsl cmp adc ja (bad) (bad) lcall jb cwtl push xchg scas mov jmp inc or decl mov push mov je xor (bad) (bad) (bad) (bad) fimull jmp and pop or leave aad jo dec roll cld roll xor sub aas scas inc sub cld jmp ss cmpsb cmpsl push (bad) (bad) lods into shrl adc cmc (bad) ljmp mov push fnstsw xlat pop inc add (bad) lcall cmc nop iret movsl push test test xchg cmp inc scas cmpsl popa stc inc jl imul (bad) mov notl js fcoml jne dec push mov sub mov and cwtl and dec jae leave sub pop adc iret popa mov (bad) pop ficomp xor mov and int3 cmovno add cmpl (bad) sbb (bad) decl dec sub or scas stos pop sub subl push push or sub call dec and pop cs dec inc mov jae scas push push sub dec mov xor fstpl aaa andl out inc and rclb inc jecxz push jecxz (bad) pushl mov nop scas xchg sbb cmp jnp shll sub add adc xor mov mov (bad) les (bad) jmp add popf push sti std ret rcr inc cmpsb mov cltd mov scas pushf jo imul mov mov das hlt mov mov mov push pushf mov sbb aaa xchg add aaa (bad) (bad) cmp or sbb aas lar sti or idivb add xchg rorb enter or add jb call xchg cmp aam mov mov adc lret inc inc adc cli lcall mov je sub xchg (bad) inc mov add stos jmp xchg xor (bad) (bad) incl ret jecxz dec xor jnp push jae roll clc or repz movsl sbb roll rorl call and push aas or pop lcall (bad) pop lds test xor lods dec insb out stos ss fdivrp (bad) (bad) jg enter dec sub rcll outsl stos leave sub dec sahf mov inc (bad) (bad) js xchg mov and jl jl and cmc adc adc (bad) (bad) ljmp xchg push test cmpsl ret out sarl push jb lret mov push add (bad) mov dec das push jb lret aad test jl and (bad) (bad) (bad) fbld sbb loopne jb inc sbb inc and call mov es adc mov mov pushf adcl mov lods (bad) or into aas (bad) jb sbb and fs (bad) (bad) (bad) jg mov sbb test push mov icebp fsubl adc or fwait sub fcmovbe (bad) decl xchg test lret addb mov pushfw frstor test scas or (bad) jle lds push xor fidivrl jecxz (bad) (bad) mov pop adc scas inc push mov fcomp (bad) or fs (bad) decl ljmp push dec fwait and in sbb clc or dec inc push test stos (bad) (bad) (bad) dec mov pop xor aam push rclb bound aam cmp scas push mov cmc sti sub leave pop aas aas adc lahf subb addl inc (bad) xchg adc lcall (bad) jns inc mov (bad) (bad) call gs aam orl sbb sbb cmp in xor pushf leave xor cltd push adc je push fbld mov sub repz popf mov dec (bad) (bad) (bad) incl outsb stc sahf cmpsl and test jnp stos mov adc popa in sub and dec push cmpsl loope sub cld adc shlb pop cmp cwtl dec cld in (bad) ficomp movsl push insb push or xlat and mov mov (bad) lcall add cmp add das dec cmp mov loope (bad) (bad) (bad) (bad) call sub nop lock fild (bad) es pop test bound (bad) (bad) cmp mov notl jo aas dec push pop adc add xor rcll call ljmp imul cwtl sub cwtl adc mov dec or out stos jle scas cmc and pop adc (bad) mov fsubrs jp inc push push inc sahf jle jmp lods (bad) (bad) mov (bad) imul jle popl or push add ret idiv test inc je lea xor pushl mov xlat lret repz je mov pop aad (bad) jb jns adc bound xchg cld ret pop xor cmp in lret sub jg dec data16 cmpsb rclb hlt push jge (bad) incl scas lea xor mov lock (bad) jg or inc xchg js jp pushf mov jnp lods push mov add mov adc imul out xchg pop dec pop sbbb push jg call xorb sbb mov mov mov push xor repz faddl enter xor outsl push mov cmpsl ja ret enter pop clc (bad) pushl (bad) lret iret imul ljmp imul in cli int3 mov xor fstl pop mov mov loopne mov push add adc lods xor (bad) incl adc cs (bad) xor cld xchg sarb cs mov (bad) (bad) lcall dec xor (bad) add or or cli mov sub push das cld lcall xchg cwtl repnz xchg jb mov xor jno mov dec dec insl mov rcr test inc (bad) (bad) (bad) pushl add push (bad) sub sbb inc add stos pusha icebp outsb nop rorb pop outsb pop jb (bad) jg incl inc lods stos sahf inc inc je hlt mov mov incl (bad) ljmp push aam loop push jmp decb jecxz ret mov jae adc clc add push gs outsl mov inc mov (bad) fwait ret and jmp jno mov scas sub es add outsl hlt call into pop xchg mov pop adcl pushf push jmp xchg (bad) (bad) lcall cli or push movsl (bad) out xor mov push lea ljmp aam lahf aam xchg arpl xchg jno xor inc dec add xor xor out je mov daa enter dec das xchg cmp decl cld dec (bad) test sub popf lahf imul outsl hlt mov mov pop push sub add sub pushl (bad) ljmp add loope cmp cmp lcall mov cmp out jb mov ds xchg push lock (bad) decl adc addb adc sub xchg lret (bad) ljmp test repz (bad) aad outsb push std std fadd (bad) lcall mov jnp inc or movsb xchg inc dec xor and lds (bad) (bad) mov fs lret add fsubrs pop lds xchg ficoml sbb mov in pop sub pop pop mov ret xor mov mov lcall xchg or psrld lods (bad) cltd pop sbb stos sub push mov sub jae xchg sti mov xchg lcall das push push bts nop movsl cmp jmp sbb mov std loop pop mov movsb clc ret inc pop xchg add fbld jp es popf nop ljmp incl jns jne loop push cmpsb push cmpl cmp lcall scas mov mov stos inc insl lcall je lea or mov aad popf outsl mov pusha jb xchg xchg mov mov int3 bound jmp lods xlat out fs jge das cmpsb cmp icebp stos mov out push (bad) (bad) fnstcw out adc mov sub cmpsl push aaa out sbb mov pusha pop pop test push sti arpl and outsl and xor xchg dec outsl mov sbb rolb pop dec xchg push pop ret fnsave xor mov (bad) (bad) (bad) jg insl ret cmpsl (bad) or pop insb (bad) dec loope test clc cld jecxz js mov jns (bad) (bad) (bad) ljmp stos jge jp xor (bad) div std mov xchg jo xchg fcmovu push ficoml ljmp dec aaa out repz fdivp dec js orl cltd xchg mov mov pop clc ljmp xor adc adc xor stos lock adc into imul inc fistpll les xchg cmp lods mov push decl push push push jl push iret jmp push les inc pop lret push sub negb aam push sub adc call fwait js aam xchg mov pop ljmp jg les dec add out fdivrp (bad) (bad) lcall jns in repz sub pusha fist mov lahf mov jmp sar sub mov push dec out movsl in fldenv (bad) (bad) (bad) ljmp mov movb push lock movl fnstcw jg push stos xor sarl mov jle inc scas push adc loopne fmuls icebp rcrl jbe cmc dec jle jg (bad) push aaa mov movsb adc xlat sarl nop mov imul data16 imul jg jmp nop stos cli fs mov out pop shrb stos mov (bad) (bad) (bad) inc in jp imul cltd jle push or or xchg mov int3 stc dec jecxz jae test (bad) (bad) (bad) ljmp outsb xor insb mov shrl (bad) enter ret xor xchg leave adc ret or (bad) jg inc pop inc cltd rorl mov pusha push scas xor shl (bad) (bad) (bad) incl xchg insb fldl repnz inc mov ret mov aas rorl cmp mov lret in pop hlt mov jp dec (bad) pop jp int and cmp movl andl ds mov sbb out cmp loop cmp (bad) lcall sahf fwait out lea pop aam ljmp adc (bad) jg (bad) clc (bad) sarb leave decw sti adc testl mov test push pop jb popw data16 lahf icebp sub xor mov jecxz hlt (bad) fildll and imul scas je nop sub (bad) test in and jae pop xor add adc sbb incl ja jo mov iret inc imul rcrl dec jp mov (bad) (bad) incl fldl xor ret and rorb mov or cli pushl push ret (bad) jmp pop dec lcall (bad) jg mov mov stos sbb ja jle lret and loopne mov pushl sub insl mov xor pusha dec pop es (bad) lcall cmp adc mov jmp popa xchg xchg lahf aaa sbb jno jle add sti fucomp push push xchg push aaa (bad) (bad) mov inc push xchg int jg ficompl subl or fild stc mov sbb arpl scas xlat sub (bad) push or insb cltd mov das repz lods jge adc lea adc sbb dec (bad) pushl ja sbb arpl out adcl bound test (bad) imul mov into lds xchg and (bad) ljmp js add sub or es fisubl (bad) incl cmp stc add push jp xor lea xchg addr16 xor in icebp (bad) call shrl out lea mov cltd clc dec ljmp cmpsb or out pop (bad) insb inc dec xchg mov (bad) mov mov fistpl dec mov dec cmp ja inc (bad) (bad) jg push xor push or pop or incl mov add jge pushf pop clc (bad) decl pop jge fbstp aam push mov imul dec mov pop xor shlb jle xor xchg clc leave and lcall inc outsb push out mov jno jg (bad) mov pop stc inc stos hlt xor aad jnp sub scas dec xor xchg lods lea mov dec mov fiaddl bound call push (bad) fucomip fcomip xor jecxz mov inc movsl adc inc mov incl les pop push cli dec dec dec push (bad) jmp xor xor and dec std adc mov ljmp dec nop out cmp les out cs (bad) xchg push mov cltd (bad) ds lahf icebp (bad) (bad) decl xchg inc imul adc rcll aas xor sub push mov (bad) mov pop lock fcomi xor in mov test mov fild inc jae xlat fisubl push cld call inc ret jge stos test addr16 xchg outsl (bad) (bad) jmp jb jae push dec mov push cmpsb inc cmpsl pop or jns jae mov (bad) fucomip and (bad) mov (bad) jae push push aad (bad) lcall insl (bad) mov xchg sub ja jmp lods mov sbb pop dec mov pop repnz inc jns insb outsl repz sbb cltd mov add and loopne ljmp or mov (bad) out pop (bad) ficom insl dec leave pop jle iret jge xor mov xor daa sahf push js pop decl stos xlat aas mov xor decl call mov aaa aaa testb cmp aas cmpsl push push ret icebp (bad) decl fisttpll jmp aaa cmp jb and cmpsl ret fisub stos fidivl sti (bad) (bad) (bad) lcall xchg rcrb pop and cmc repz aad fsubrs cmpsl cmp push (bad) (bad) lcall fcoml add lods add clc push adc int push push jmp decl cld dec inc mov adc add data16 in mov mov inc mov (bad) ljmp inc push dec adc fimul xor (bad) (bad) ljmp mov jb mov bound std ds sbb push imul aad sbb pop das cld outsl mov cmp xchg jbe xchg sub ljmp sub jecxz sub add xchg shl sahf xor pop adc (bad) jmp out jne xor popl pop pop fisubl leave mov inc mov int xlat andb outsl aad outsl test or enter or call dec cmp lret ret orl sbb (bad) (bad) ljmp sbb jg jg push sti mov cmp les push (bad) (bad) incl sbb cmp cmpsl cmp je dec (bad) (bad) mov jnp call (bad) in push in (bad) jbe lds cld ja fcmovnbe (bad) cmp dec xchg (bad) jecxz (bad) (bad) jmp pusha jge fidivrl push mov test or and (bad) mov shlb leave mov or outsl mov pushl or gs daa jae cmp adc movsb push stos xchg jo movsl insb pop (bad) cmc popa mov push cmpsl dec xchg mov std jg cld jl iret or inc stos das inc or fnop clc or push fs ror or test sbb call jno loopne cmp rcrb icebp (bad) mov cli loop jmp repz mov lea popa adc ret sbb imul int3 addr16 xchg push lret imul jo add scas ror push jmp jmp inc xchg xor add call (bad) (bad) (bad) jmp xchg lea test cmp push pop push fstl cmpsl test not pop inc (bad) inc hlt (bad) (bad) call adc xchg push pop pop movsl out icebp loope and or cwtl cmp cmp (bad) stos mov je outsl push cmpsl in sub imul (bad) incl inc pop xor mov mov jb dec test (bad) push xor xor mov ret fcmovb xchg out or lock fcos incl jle cmpl inc stos push sbb leave shr mov add movsl jb (bad) clc inc mov jmp mulb jecxz mov jmp jae dec rorl or mulb subb mov cli cld rorb std (bad) in or vpackssdw mov adc out lret jge mov outsl test in push mov test xchg nop xor (bad) shr (bad) jg cmpsl fsubr (bad) and dec outsl test mov jle dec lret pop loope ljmp dec into jmp (bad) (bad) (bad) jge mov sub mov add inc jle seto and les cmp fildl adc mov cld sbb repz push popf jle (bad) mull add lds xor mov sti add sbb ljmp pusha icebp (bad) xor xchg test roll pusha sbb decl jo push fsub negb jp xchg imul xlat shl mov xchg mov insl scas xor loope jmp add jmp sub jle adc push inc pop ret add cmpsl mov cmp push dec cmp femms sti sar (bad) lcall or std cmp outsb dec adc xor ja pusha cld or sbb (bad) call icebp push sbbl mov bound xchg push (bad) lcall clc sbbl dec std (bad) (bad) inc xor movsb and jle outsb insl stos cmpsl mov mov aaa popf dec (bad) mov mov shll out cmp or ret mov jg (bad) and and xlat jo xor das push test and xlat mov test pop cli fyl2x and ds into pop mov mov cmp cmp pop cli (bad) call add cmp or rsm loop cmp ja adc cmp cmpsb fsts xor (bad) das adcb dec pop lcall (bad) mov pop in adc lret dec ficom mov (bad) cli push and adc xlat pusha jl repnz pop mov dec testb ja jl repnz cmp pop pusha cltd adc mov (bad) lcall jo leave pop imul pushf add int3 xchg (bad) aaa sbbb aaa cmp (bad) (bad) (bad) mov lock test hlt js int3 int xor sbb outsl cld shl dec push imul mov jle (bad) (bad) (bad) lcall push test js xchg into mov loopne pop push loope sub and mov out pop inc and lcall ss inc scas or lods xor imul jbe aad xchg or mov jns stos jg bound mov cmp jg jg mov dec popa aaa xor and and std repnz andl clc and scas imull arpl push (bad) jg pop insb pop pop pop push jns ret inc mov (bad) mov dec xchg push lock push popa clc (bad) (bad) fbld test int3 daa adc or push lcall pop (bad) cld test out daa and (bad) push jno arpl dec test aaa pshufw call add fmull mov arpl inc mov push mov leave mov adc or jmp (bad) call xor jge loopne ja push repnz and rcrl add outsl xchg lahf inc push inc pushf mov insl jne popf cmp popf cwtl clc cmp (bad) (bad) jmp xchg push lock sub or push fcmovnb inc hlt push fisttp cs sti dec int3 shrl aaa cli outsl hlt call stos dec frstor decl ljmp jmp fdivrs and dec test aaa mov cmpsb imul inc xchg inc xchg pop pop mov (bad) (bad) mov loope iret sti repz sbb (bad) imul scas jb cmpsb shr sub (bad) mov sbb insb rolb dec cmpsl inc pop lcall das hlt and out je dec inc adc shr rclb std sub js cwtl aaa mov fisttpl (bad) ljmp repnz mov sub xor sahf ficomp jmp mov (bad) jg or outsb arpl mov arpl xchg xlat xchg xchg addr16 cmp add (bad) cmp push fcmovne pusha fcoml xor das push out cltd orl xchg cli (bad) jmp popf ret testl lret jnp jp inc jecxz lcall cmc fidiv mov sub add adc jmp ss scas push add imul push pop ja mov mov mov push pushf pop fnstsw cmp icebp push cmp stos add add cli ljmp shrl pusha mov dec jns (bad) sbb rcrb mov aad or pop repz (bad) (bad) mov aas mov daa jns and (bad) adc xor fmuls and fmul stc scas in (bad) mov or and out (bad) ss jmp rorl sbb lods shr or inc inc daa jbe data16 jp fisub in pop loopne jl xchg fistl jmp jecxz rorl xchg insb fdivrl out (bad) scas movsl fwait pop popf mov cld (bad) inc fs fstps sbb fstpl adc (bad) lea (bad) ljmp sbb jo dec jl adc in or dec dec movl in imul (bad) (bad) (bad) (bad) cmp mov sub jge fcoml dec test mov lret test pop push push add jns hlt (bad) decl xchg cs mov push aaa adc ljmp cmp jno and dec ret daa daa xor mov or daa pop pop inc sti scas push nop xor data16 repz push xchg clc or mov (bad) mov xchg sub repz inc insl test jmp push neg inc cli push pushl and cmp cmp and icebp adc and (bad) mov aaa and scas fcmovbe orb call mov jle mov movsl daa fldl sbb loopne cmpb (bad) (bad) ljmp mov mov lcall pusha mov jg (bad) ljmp (bad) xor lret inc jle les pop mov jbe pop pop out lret cmc lcall outsb (bad) mov lret out sbb lea sub mov mov inc (bad) mov push movsl adc sub mov jmp dec jb (bad) lret rcl ret pop (bad) mov (bad) (bad) (bad) call and cmp dec add pusha sahf das mov sub cmpsb ss sahf (bad) (bad) mov and and mov ja jecxz (bad) (bad) lcall test pusha clc ret fdivrp xchg pop decl push jg sbb or inc mov (bad) pushl cmc mov jo push cld mov xor movsb jns xchg mov dec adc leave add push nop cs out js fidivr pushl mov jecxz and jns mov loop adc fidiv add and loopne jno stos jecxz jb xchg push mov (bad) (bad) jg inc call or xor cmp dec inc out push dec push out sahf mov jbe push out subl pop loop jo (bad) aad mov dec or fsubp (bad) (bad) jge aam pop lea xchg cld adc out (bad) xchg pop pop mov jg jmp lods fsub sub mov pop pop fstpl leave fstpt stos sub jge xchg and insl sub outsl cld pushl sub jb frstor jb shll outsl (bad) jg sbb sub cmp mov sbb pop fs mov ds or fidivl shrb jg inc xchg mov xchg mov inc add mov mov add adc nop (bad) decl mov add inc std pop and mov mov (bad) ljmp adc iret and dec aam adc (bad) (bad) call lahf inc xchg push jg cltd incl and ror jne es test dec (bad) lods (bad) inc push fild aam dec ret xchg lahf mov add lcall movsl xchg mov mov jle (bad) cmp mov cmc ja add out stos pop call and mov leave (bad) decl sub into mov (bad) rolb psrlw xor icebp push clc xor xlat adc xor sub dec test (bad) mov or lds push mov rorb loopne incl ret xor mov sahf push outsl push or pushl repz stos cmpsl pushf outsb mov scas (bad) lret pop mov sbb lcall call lods mov stos sub ret push pushf xor adc push int3 (bad) push mov mov cmpsb insb mov insb mov pop xchg icebp loopne xchg pop fcompl call sub dec std lcall xchg das and lahf sarb push dec (bad) jae pop pop jl lcall ds ds push pop mov shr scas ljmp (bad) ljmp scas pop sub xchg adc out pop mov dec add lcall cmc (bad) movsl insl mov rcrb ds aad popa popf icebp dec sar (bad) ss hlt (bad) rolb mov jmp sti fprem fucomip (bad) mov in jmp jp adc xor cmp xor (bad) (bad) ljmp adc jle movsb outsl jae or in dec pop xchg lods fwait call dec sar (bad) (bad) jmp or add xchg mov mov sbb adc push repnz or (bad) decl xchg lds gs sbb push loop shll push push sti (bad) (bad) jg cli fs sbb stos mov imul icebp fcmovnu push shrb inc sti jno dec mov js je add lahf insl decl cld push pop xor sbb (bad) lds lods rcrl std shrb fistpl rcrl sbb test fsubrl iret pop das jo jmp cmp (bad) in insl mov sar pushl mov mov cld orl xchg xchg xor lods ljmp push mov add cmp (bad) cmp cmpl std and push add cmc sti jmp cli hlt adc fsubrs (bad) jg push push sbb cmp inc test pop jno popa push adc (bad) (bad) inc push sbb icebp xor ljmp add ror divl push divl ja fisttp jle clc pop or (bad) (bad) jle clc jge sti (bad) idivl das scas pop cmc pop cli lods xor dec mov xor (bad) (bad) lcall insl fiaddl fisubr sub rcll add mov inc xchg pop sbb jg mov fwait xchg test idivb xchg out jb incb (bad) in cmp jno rcrb adc push outsl add dec cli je (bad) std xchg adc cmc loop xchg jp push ljmp or aad add jg decl mov adc mov push jp imul out xlat push or icebp lea push push pop femms incl mov les lods jecxz popl mov stc sub lock inc movl (bad) mov enter je pusha sbb je (bad) roll (bad) cltd icebp insb outsl (bad) mov xor addl test ret and (bad) (bad) jmp xchg jne sub std cmp mov insb fs call das testb pop push jl outsl ret movsl stos jle sub (bad) divl lock lods dec inc repnz pop or (bad) fbstp or xchg push (bad) xor mov or push jg or mov outsb jbe sahf sar (bad) (bad) lcall stos sbb mov daa or out inc mov in outsb mov mov in mov lea pop (bad) (bad) (bad) (bad) out mov xor in jmp jecxz inc stc fucom mov pop jg (bad) fistpll dec add mov jbe jmp add (bad) jmp mov ret mov (bad) jae daa lock lcall std fist or (bad) das pop lret cmp pop ret das dec cld pop loopne sub stos sahf hlt jns inc fcomp xchg xchg xlat inc jmp outsl (bad) decl xchg (bad) stc loop mov or loop data16 mov sahf inc jbe call jb or mov mov and pop ljmp ljmp daa xchg addl push mov dec jecxz mov adc (bad) mov pop aas ficom and mov test jge jns cli adc das fisttpl dec dec mov mov fistpll mov (bad) (bad) stc push out sti xchg jns aaa push iret or stos mov sub cwtl inc icebp mov repnz (bad) cmpsb xor add icebp pusha stos stos fwait adc jmp (bad) jg inc jle mov adc inc jae sub hlt or lock lcall inc icebp loopne or mov les aad inc inc sbb mov lea mov subl mov jmp nop or sbb sbb rcrb mov leave hlt dec popa push pop (bad) jo and or cmp out (bad) (bad) mov cmp dec les aas xor xor and cmp dec fisttpl dec lods cmp int3 jb ljmp pop lods ret (bad) cwtl inc push inc stos sbb xor test jno fisttpl call cli les jl mov dec cltd jns sub lock cmp jae push stc jge outsl out into sub inc je sbb push jmp sbb cmp push imul outsb popa vsubpd std (bad) hlt mov lock mov mov aaa cli jg and mov adc ja cmp mov dec add (bad) (bad) decl test pop lret fimull mov loope (bad) (bad) lcall (bad) lret sbb or push mov adc sbb cmpsb xchg out mov incl (bad) mov enter out loopw dec xchg push dec cmp (bad) shl icebp jg mov and rorb (bad) ljmp dec stos jl jge push inc aad mov jno add lock call test fbld je dec inc jp rclb mov incl dec xor jo test sti arpl fistpll imul hlt ja cmp cmpsb lds lahf and jne adc mov pop push inc sar push jae (bad) mov fmuls (bad) mov test lret test pop sub xchg imull jg lods mov repz dec pop int3 mov xor pop ljmp (bad) hlt aaa (bad) xor push aad dec adc bound mov call push mov dec cmp cmpsl inc aad push inc (bad) pusha jp (bad) (bad) decl sbb aaa xchg outsb jns pop cld mov dec stc repnz outsb sar (bad) incl cld and adc stc mov sub mov test lock fmuls (bad) (bad) (bad) ljmp pop xchg mov xor pop jmp dec dec push cmc fstpt in sub fimul jo push rcrl ljmp pop jo ret jnp jmp inc incl (bad) jbe xor cmp cmp incl cltd or push (bad) sbb inc cmp sub lahf lcall call mov repz in xchg (bad) (bad) (bad) mov sub out mov mov jnp in jge lcall aaa clc cmpsb cmp sub in jae cmp sti and dec lret inc mov mov lods mov jge or mov clc mov mov clc loope test test pop mov popa movsb sbb adc fmuls dec arpl ret add sub xor nop add fildll mov pop cwtl push cli jno jns mov (bad) (bad) (bad) inc or popf push ret fdivs mov gs fisttp es push sbb sar ja or dec jl xchg (bad) (bad) mov (bad) mov jb arpl mov repz and outsl outsl jl (bad) lods push daa scas cltd lret and (bad) pushl push jmp mov mov pop sub dec getsec sbb mov add jmp or mov mov call (bad) ljmp mov dec (bad) repnz pushf cmpsb mov add sub (bad) (bad) (bad) jmp jmp sub inc dec jns mov inc lods lods ret add add inc popa (bad) (bad) jg lods icebp faddp xor mov les inc and (bad) lcall popf jae mov jge repnz ror test call (bad) (bad) lcall leave es cmp add movsl adc ja dec fwait (bad) int mov scas cmpsl das imul js push insb jle add (bad) (bad) mov add aas jae lcall sbb sub xor in push shrb dec mov dec pop mov pop cmp (bad) (bad) decl js inc mov or inc xchg sub push pop sub mov cli ljmp jne imul xchg in pop icebp dec (bad) mov fwait add mov inc adc xchg adc adc xchg (bad) mov leave lret sub sub adc int add jg push decl nop test push push cmpsl cmpsl scas jb incb dec fs lds shrb cmp sbb mov (bad) fcoms xchg adc push jns lods (bad) push call sbb mov jle adc mov pop pop sub mov pop inc shrb push movsb ja push pop jnp mov pop lock add add test (bad) ljmp insl dec sahf in push mov mov int sub mov jp mov add hlt lcall dec or jbe cmpsl test jp repnz xchg clc mov addr16 fildl movb out out lcall inc jae sbb stc adc pusha dec iret icebp test sub call je ljmp mov adc xlat cmp (bad) div popf in roll js cld (bad) (bad) sti imul mov (bad) cs insb xchg xlat loopne loope cli incl pop cwtl pop (bad) enter jp xor fwait pusha ret push std ret mov (bad) adc cmc (bad) lret dec imul repnz and or cli pushl jo xor and aas inc mov fnsave mov insl mov (bad) decl push fwait popa jl mov mov cmp jle xchg lock mov incb xchg pop or fisubrl call sar mov adc jno add pusha and insb imul call pop clc stc and cli xchg pop fmuls loope pop scas inc ret pop (bad) inc mov pop mov lods jg or push mov push and inc sub shrb add (bad) lcall ret push and les int3 (bad) dec das lock das negb inc loope adc sbb add jnp add cmpsl mov adcl fsubrl sbb adc in cld (bad) (bad) jg cmp lea aaa fldt xchg aam cltd les popf in (bad) decl rorl mov jbe shlb pop xchg loope mov not mov mov call pushl add jne stos aas ret (bad) or pushf (bad) fwait jp call jecxz neg icebp or xchg push pop cmp incl sar cwtl add pop mov xor push xlat xchg clc incl std lods push adc enter je pop test jg inc mov in mov out and mov inc jecxz push push pop clc (bad) incl popf ds add pop lds repnz (bad) aad pop dec jecxz jp lock (bad) fldt dec push insl inc jmp mov jecxz mov nop (bad) (bad) ljmp stos inc mov popf adc lret adc es in mov (bad) (bad) (bad) pushl mov aaa jecxz outsl cmovp leave clc sbb (bad) push mov enter jmp jp pop int3 xchg pop jl imul (bad) xor sahf scas xor call pop or push sbb stc or inc jno push mov mov decl lahf cmp sbb popa cmc push (bad) jmp mov (bad) fstpt into mov push jecxz lahf (bad) cmp pop mov adc xchg (bad) (bad) (bad) lcall stc sahf das rcrb cs adc pop je aam outsl adc popa lea xor inc mov jne (bad) incl pop or jp pop inc lock icebp mov (bad) (bad) ljmp mov pop jns push jbe loopne pusha lret cmp jmp mov fwait dec decl mov inc ja add adc (bad) loop decl (bad) (bad) cmp stos rclb jae mov stos cs pushf aaa (bad) (bad) (bad) push ds andl mov pop repz mov stc xchg je aaa push das hlt (bad) ljmp inc test jae out ret mov (bad) jg call cmp xchg sub xor jb movsb sarb inc ja inc (bad) jmp sbb scas out xlat fisub and inc inc cmp rcll ss pop mov adc mov mov pop mov jp out loop clc pop add jae jge sbb (bad) (bad) incl aad mov and mov cmp push fst out push stos pop push (bad) lcall jo mov jle jecxz adc faddl fldenv (bad) arpl test (bad) mov xchg mov dec fcomps fist movsl inc (bad) lcall sub push fdivs cmp rclb xchg clc (bad) (bad) call sub xchg inc push cmc cmp cmc jg test (bad) xor lret addr16 jmp jmp (bad) in and notl pop adc cmp cmpsl call xchg mov and mov mov jl or sahf xor sbb xchg mov jmp (bad) lock push movsl (bad) mov mov jecxz ret repnz fbld push inc in pop and add cmpl js mov jecxz push (bad) (bad) mov testl hlt inc adc cmpsb pop xor outsl cld das cld (bad) push mov and addr16 dec outsb lock in push insl das mov jg (bad) fidiv add les insb shr dec jae (bad) clc mov xor mov sub lea jno dec pop cld (bad) call js outsl into cwtl jp dec std out xchg into repnz jge mov enter das decl cld outsl push mov adc ljmp xchg out (bad) (bad) pushl clc shr loope sub sub insb xchg cmp adc in fs xchg test sub push jo (bad) (bad) (bad) incl pop es mov adc xchg sbb cwtl pop addr16 call push rclb call jns push sbb in sbb inc xor les enter cmpsb adc mov mov call inc in das jno add nop enter jmp cmp rcrl test pop and out pushf or mov pop test jg faddl jmp xchg mov call sbb mov fidivl jle push ljmp lcall inc repnz push jmp push sub sbb outsl pop jl,pt push popa std lcall lcall jns jnp pop fcmovu jl xor xor sbb (bad) decl fdivr mov and dec or mov cmp jnp or push push mov mov (bad) (bad) fistl jecxz xchg sbb sub push dec pop push in test call cli (bad) js rol jnp xchg dec dec cwtl test in jp xor mov (bad) xchg or js xor xchg mov mov (bad) jg dec dec push mov pop push movsb insb sub mov push mov (bad) lea or imul out and pop aad leave mov rcl inc cwtl sbb aas out adc (bad) pushl (bad) pop pusha pushl push add out out fisttp call push insl push fisttp mov inc inc lret rcll inc mov (bad) (bad) (bad) fstl mov jmp ret fimul adc pop push adc inc jle inc cmc int sbb sub push popf cmp pop (bad) xchg (bad) (bad) (bad) mov xchg cmp (bad) xor mov xor (bad) cmpsl fmuls pop mov pop stos cmc (bad) mov pop push xchg inc fcomps enter std (bad) decl pop jl pushf sbb fwait mov ficom jo push mov incl push mov cmpsb or pushf pop popa lcall call sti sti inc dec lods mov jmp mov hlt into (bad) pop negl push and xor fwait sbb (bad) mov lret mov adc roll mov std dec std (bad) xlat jecxz cmp pop int3 loop call aas push ljmp dec push jo and adc cmp mov sub xor test (bad) (bad) (bad) mov mov cmp imul xlat sub sub sub and pop loopne xor loopne xchg leave jbe cmp das das add (bad) incl (bad) rclb mov and adc enter mov cmp test pop les ljmp ljmp sahf pop xchg movsl lock pop jns movsl stos ret pop loopne mov and (bad) lcall aaa imul dec int3 jno ljmp lods mov ljmp imul subl lcall (bad) decl sub lret mov loope popa push and mov stos ss mov pop ljmp mov leave ret dec cmp mov subl (bad) lcall std mov xor or insb cmpsl nop ljmp loopne test ljmp aas mov int scas dec fldl hlt lret (bad) (bad) jg aas cmpsb xor dec mov pushf andl subl in mov push frstor add xchg (bad) (bad) (bad) (bad) in in dec push jb lock and aad mov in arpl lds adc pop xchg movsl xchg or ljmp lock xchg inc pop sub push sbb addl adc jle or mov mov add rorl xor fs shll mov ljmp lea stos into sub aas cs hlt mov mov popa loopne aad dec loope adcl es std mov mov imul mov fmull push and push mov lret push rolb mov fcoms out or decb or or cmp data16 daa push (bad) ljmp lock hlt cmc nop push mov push js flds (bad) popf adc test das cmpsl outsl xchg (bad) ja js gs shrb sti gs or cmp out push sbb enter sti aaa cmpsl jmp fnop mov pop jmp mov pop or inc cld fs jecxz (bad) (bad) jg mov push ror loop lock movsb imulb mov push std leave jmp (bad) (bad) (bad) (bad) jge hlt shld mov clc cmp fdivr mov jnp lods mov out nop add incl cmpsb fcmovnu sbb inc or lahf push cwtl or ljmp add fwait dec dec adc push and std push jnp pop loopne push pop je loope push add cmp jmp fcmovne jmp pop cmp ficomp sub cmp xsaveopt (bad) stc std add (bad) (bad) (bad) out das push add jns adc dec add pop pop icebp scas orb (bad) jbe pop mov push fcompl cmp notl sahf mov lea (bad) cmp cwtl and sahf push into jg jg push les pop out out incb incl pop ja sub (bad) mov jmp repz jne inc movsl xchg or mov cmpsb sbbl add and mov (bad) bound hlt in add sbb pushl stos out (bad) jecxz cmc jne or jns sub sti call cmp mov cmpsl clc adc sub aas std test test das icebp sbb push or (bad) mov pop mov in sbb fdivl ret (bad) dec incl pushl in lahf push ss jmp fbstp (bad) es (bad) (bad) pushl (bad) jnp lods (bad) (bad) jo mov pop pop push mov mov ljmp cmc (bad) jg mov sarl pushf lock (bad) mull lret ljmp adc push inc dec mov mov insl shrl pop js incl mov stc cwtl cmpsb stos or packssdw lcall (bad) imul fs jae fbstp mov mov outsl hlt push fcmovnb iret das clc imul sbb into lods adc arpl (bad) or std jg (bad) mov xchg imul dec out stos test mov popf (bad) (bad) push xor daa adc xor push (bad) jmp pop mov add inc mov xchg inc icebp jl dec cmpl inc out imul (bad) (bad) jg shrl js js push call not xchg add orl sahf sti int sbb pop mov outsl hlt jmp inc cmpsl out jmp lret add loopne inc inc push sar jle rorb (bad) jbe inc pusha mov cmpsb pop (bad) inc mov or xchg sbb push das add add fcompl incl out pusha jle test push mov jmp and (bad) aaa jl pop (bad) js sar cwtl push fistl mov ret pop push ja outsb add in push lock insl out fnstenv sbbl ss lcall leave mov cmp adc jne xor icebp cmpsb insb inc dec mov outsl icebp sbb pop jne add push or inc xchg clc pop fcoml aas inc (bad) lods jl mov ret ss gs (bad) inc sbb mov cmp mov push imul add add decl cld mov andl fistpl cmpl inc or fild jb mov sbb cmp movsl mov sbb lcall fdivl jg std inc daa pop pop and push cmp xor mov ss ds mov add dec stos repz rcr incl enter aam mov or inc sti or or clc dec test jno mov mov mov cmpsb add xchg push jmp pop mov test and cli cli adc (bad) (bad) mov cmp jno hlt mov dec mov cmp je sahf xchg mov (bad) and aas xlat lahf lock add std (bad) (bad) call and ljmp adc hlt jle fldt jle enter in mov cld ret sar lcall js or add sub in aas add pushl clc mov shlb punpckhbw arpl and adc mov js std out push outsb insl insb int decb pop push pop mov loop fstpl (bad) sub jae (bad) lcall inc iret dec scas adc or pop xor js in pop (bad) (bad) (bad) decl js (bad) or jb loop ror outsb daa rcl or out iret icebp sbb cmp pushf (bad) pushl cld es outsl push cld iret clc jmp (bad) das lock popa xor xor incl xchg ret xchg out inc stc jmp pushf xchg push xchg mov push repnz (bad) lahf (bad) (bad) and mov das inc lea or jmp addr16 icebp jg fucomip dec add mov loopne add fucom jle out push mov push jo cmpl or pop pop in inc or pop fsubrl cmc jg shrl (bad) mov dec or cli call cmpsl dec dec loopne (bad) jae lret pop push or jnp imulb adc lret loopne (bad) (bad) in dec subl sbb push fmull repnz test out pop jo idivl mov out lret lahf pop sbbl sarl lret (bad) (bad) (bad) jg ljmp pop adc ret shrb xor xor (bad) pop cmp (bad) inc les leave xlat dec mov scas mov ficom (bad) jmp loop fwait out int cs pop mov aam pop cli rorb scas pop jmp lcall pop popf in lret jnp fidivl sbb sahf mov mov shr (bad) incl (bad) out loop cmp xchg xchg mov sub ficomp stos jbe (bad) mov lret or jl pop lock (bad) (bad) (bad) dec fcomps data16 xor lds jp gs (bad) pushl sub js sub imul iret xor add mov ja lret push scas int3 data16 (bad) fstpt enter pop add dec test mov test cld xchg pop loopne sub mov iret std sub mov jae clc mov xchg inc loope add (bad) ret pop xor cld mov (bad) (bad) push sbb outsl fcmovb aas repz xchg inc incl xchg call jl mov (bad) jmp jmp std or mov add lret add xor (bad) ljmp rorb cmpsb fsub (bad) (bad) cld pop repnz jg fistpll jmp decb cmp (bad) (bad) lcall js sbb in clc iret les mov ja sub std cmp mov clc rorl ds inc (bad) clc mov lahf (bad) in loope loop (bad) in sti aad inc pop jnp xlat dec cld out aaa clc pushl (bad) loope addr16 jge mov ljmp lock popl lret cli sbb sub (bad) mov (bad) (bad) (bad) fistpll jge dec sahf cli sar pop mov clc shr xor clc das insl lahf jl sti (bad) (bad) cli pop sti pop aas incl cld fistl ja std sti mov popf mov cmp cmovg add (bad) (bad) jmp jmp sub (bad) jg out pop or inc dec add xor loope mov loop icebp outsl aad sti dec test in or fmuls add push push adc mov (bad) jg inc addr16 pushf dec pop sub cs repnz rorl movsl and (bad) (bad) (bad) push pop push js rorl mov js loop jp shrl mov xchg shll mov cmc arpl push lahf test pusha sbb and pushf add mov (bad) (bad) jnp imul imul pop fs or ljmp jle (bad) gs ret hlt jecxz lret int out (bad) (bad) jmp (bad) cmpsl faddl push push mov xor cmp rclb pop das pop xor lock cwtl mov outsb (bad) xlat push in xor inc inc aam add mov test outsl sub pop inc cmp les int mov fisubr andb mov movsl lds mov cmp negb inc (bad) jmp (bad) repnz add jle mov testl push pop repz jle mov data16 in (bad) call push vmovddup and aam ja lret xor (bad) (bad) (bad) ljmp sub or adc lcall mov or out test dec xchg or pushl pop pop test push pop dec call jne pop and (bad) fisttp mov (bad) jno imul xchg (bad) call (bad) jge mov data16 leave mov sbb dec and mov (bad) ljmp fistp pop push push push iret cmc out inc flds mov lcall shll (bad) mov cwtl loope int sub jge jle xor jle loopne xchg pop outsb ja sub or push adcl xor das push pop outsl aad xchg fidivr nop cs fistpl repz sbbb xorl out sarl mov cmp (bad) ljmp ret sub ds faddl lret int bound std pop mov pop or jp movsl fadd std movsl (bad) (bad) ljmp mov into adc push add stos fwait adcb jns loop std mov or idivb cmp outsl or aad mov add (bad) fnop mov stos or xor fistl xchg or jo mov roll test sbb aam pop cs mov inc lods incb xor xchg lock sar jge and mov cld or cli nop hlt lds adc sar mov test xchg insl push jecxz popa out adc adcb cmc push jns add mov lods (bad) jne add add popa push sub call lcall les test and jp pop or fcomp jp jns push push scas outsl sbb (bad) (bad) pop popl inc sub inc push popa lcall jmp mov je test shr mov lcall inc pusha orl (bad) call or jp push ret jle lock (bad) cmc cmp mov and jmp push ficom cmp insb nop ret xor lea test inc add mov push mov clc inc (bad) inc dec mov mov xor pop cmpsb mov cmc xchg or dec cli popa jg jle or je cs jl (bad) mov stc hlt stos pop sbb dec mov jp pop std fwait daa (bad) call add je mov pop scas std idiv add sbb sar push and sbb outsb sbb sarl decl or mov inc xchg ljmp jno (bad) mov adc nop insl repz dec xor cmp cld jecxz repnz jl aaa clc (bad) jnp mov xchg pop (bad) jno es mov xchg rep and mov xchg outsl jne sbb (bad) (bad) xor clc fcomi inc ret cwtl idivb (bad) push (bad) cmp xchg cmp mov mov dec out xchg rorb xchg push popa mov call sub (bad) mov xchg push andl cmc out sub adc and cwtl stc or out or xchg or ljmp (bad) mov outsl xchg mov mov sbb ret jge pushf xor or (bad) decl popa cmp push cmp inc cli sub cmp (bad) xor (bad) (bad) lcall in sbb sbb jbe popa sub (bad) xchg fs pxor ret int3 popa jg (bad) call in lret into (bad) cwtl mov fwait mov sbb outsb cmpsl fisubr (bad) (bad) cmp int3 out movsl inc loop stos add lock ss mov test mov (bad) icebp jmp cmp mov xchg or pop or clc xchg push jbe pop dec push fcomps adc jo sbb les pop outsl hlt call and jl lcall shr in (bad) (bad) (bad) call pop add push add or dec movsl inc jl stos pop lods xor in (bad) (bad) (bad) (bad) mov push rcr mov or daa (bad) idivb out popa pop mov pop (bad) (bad) call xchg push fwait push pop pop xchg ljmp in mov cmp xor cmp xor movsb push dec add adc dec addr16 leave popa pop stos int (bad) (bad) decl mov lahf and mov (bad) add test or mov sbb jg cmp add (bad) (bad) out pusha and hlt adcl dec dec data16 sub mov jno add aad sub add sub xor xchg cltd inc add inc movb call lds sub pop sbb (bad) sarb (bad) (bad) in pop mov je cltd mov pusha pop imul pop pusha inc xor jp std cmp jg je shrb (bad) pop ret imul pop test xchg pop addr16 or popa imul sbb or rolb pop std (bad) (bad) jmp xor rorb std dec jns lds rcll jne (bad) (bad) (bad) decl xor lret out adc mov and repnz adc aaa (bad) mov cld decl mov xor (bad) lods xchg jmp in jge ljmp pushl sbb pop mov lret jle mov dec ret push dec cli test incl lds cmp rcll stos xor arpl ds mov repnz push out gs out mov lcall cmpsl popf les call pop icebp idivl sbbl push repz inc sub (bad) xor (bad) std cld mov push test out xchg jg das stos mov cli lea lret ss push lret ljmp std sti aas fidivrl shll test or clc ja mov stos stos cltd mov in xchg jmp mov pop pop test jg call leave inc pop aas fsqrt jno std call fstpt mov sub jecxz push out pop cld pop pop das std outsl (bad) dec out mov lcall xor ljmp call in (bad) mov jecxz sub psrlq out mov mov (bad) fist ja (bad) aad push dec xchg outsl jecxz loope nop popa dec dec std (bad) push and push lret sbb xchg aaa inc sub movsb movsl lea aaa jecxz pop incb aam jns stos push ja gs stos dec int (bad) decl fisubrl aad aaa rcll push aas mov (bad) xlat jo shl stos stos std outsl cmc xor pop mov cmc loopne cld (bad) (bad) lcall das mov ds jle movsl pop (bad) lock lret incl (bad) or fcos mov jge movsb jge in inc add xor cmpsb cmc sbbl jecxz (bad) mov sub or jg pmulhw dec nop stc ds xor jmp cli (bad) call sub jnp mov mov mov test jo sbb mov popf jne push (bad) mov sbb push pop add loopne enter sbb push lahf (bad) (bad) (bad) incl outsb push mov loop cld int3 adc or adcb xor mov sarl (bad) cmp xchg gs or ficoml mov (bad) sar outsl lock fdivrs scas dec jnp xor outsl cli pop pop mov sarl xchg mov loopne outsl lahf mov push adc fdivl add pop std (bad) pushl push movl xor push notb (bad) (bad) (bad) (bad) jg xchg pop pop call cltd or push das arpl outsl mov cmp in add jno (bad) (bad) mov into sahf or pop jle rcll ja aad push mov loopne cld bound out call sti sar arpl stos lahf cmc or mov cld aaa nop push sbb cltd cmp jle int3 inc jle pushl add stos leave sti (bad) jno lds lea push ror jnp (bad) fucomip sub insl (bad) or (bad) lods ljmp (bad) (bad) (bad) jg inc mov lret hlt mov lock test lahf jo ret fnstsw lods or lock daa or test data16 jnp fnstsw fbld imul mov push mov bound (bad) (bad) cmp mov pushf repz pushf (bad) pushf cltd repz int3 icebp outsl cmc pushl and mov and cmp jno loop and fucomip mov adc out sahf pop aas notl jb mov xchg mov (bad) jmp rcrb repz cmp insl push arpl jecxz (bad) incl arpl cs lods pop pop (bad) cmp in sub call jg pop pop enter cld mov adc lcall std inc cvttps2pi rcll cltd add xchg mov loope (bad) (bad) (bad) inc test mov cmp (bad) fdecstp fldz fsts jg adc jmp iret int3 (bad) fs in test lcall rclb divl int3 pop push pop mulb mov jg fcmovu fdivr decl out aam adc (bad) lcall sub push ds mov mov ret add xchg mov (bad) call mov push adc jecxz or jecxz (bad) inc movsb cmpsb sbb ljmp mov fstpl dec xor loopne mov jae fbstp imul pop icebp mov pop jl mov (bad) (bad) (bad) fildll in mov adc xchg add pushf sub mov xchg xor aaa lret ljmp cmc pop in pop pop lret fldcw adc dec dec xor decl or inc jne mov loop inc cmp mov rcll popf mov shl jp fsubrp outsl std jmp mov (bad) movnti push hlt xchg popa add or or (bad) jns add lock inc push xchg pusha aas pushf test es (bad) mov sbb (bad) decb pop adc ret lcall cmp fldenv or mov add adc mov in inc add aaa cli mov sbb pop inc jg es mov (bad) lcall xor mov es add jle xchg loopne js (bad) sbb sar fistl enter lods and cmp cli xor (bad) (bad) lcall cmp ret fstpl pop aas xchg roll lret ds inc incl aad jbe sub cmp sahf mov pop adc mov sar (bad) clc inc aam push andl data16 push sub aam (bad) (bad) (bad) mov fimul and mov cmc ja jnp pop xchg xor or cmp out push insl push (bad) into testb std add mov (bad) (bad) fdivrp sarl ljmp inc adc mov out or cmp (bad) jg sub fistpl jge stos inc push push add loope js fimul (bad) jge or subl movsb cmp arpl jmp or pop xchg sbb (bad) jg xor sub adc or pop dec adc bound in movsl (bad) (bad) (bad) incl cmc xchg pop scas lret mov push sbb mull int3 xchg mov push hlt pop call push icebp out ror or into rcll pop cli imulb mov push (bad) add pop popa pop (bad) mov ss (bad) aam jne push cmp lret ljmp xor shlb hlt mov dec cmpsl push lods mov push sbb (bad) (bad) (bad) jg sub jge flds or mul test loope stc push sahf int fnstsw jmp mov jns (bad) div mov div (bad) (bad) incl mov ret mov mov pop sub inc test cltd jmp pop inc movsb sti ret cld insb jg aas lret aas loop repnz clc and adc cmc inc or xlat push jo xchg (bad) ss adc and das hlt jg (bad) je in sub pop cmp pop sbb or call dec xchg mov outsl sbb mov (bad) push mov outsb movsb fistpl push sub lods mov jle lods je pop (bad) (bad) (bad) call or mov lcall xchg sub push cs lret push inc xchg push call jne,pt std cmpsb lcall jnp jmp and add lock cmp je imul test jl (bad) mov push fldt lea pop jl test mov xchg push (bad) mov (bad) cmpsl mov jno mov jecxz js icebp jmp pop sbb cmp inc ret (bad) ljmp dec sub jbe faddl imul sbb sbb dec aas mov jbe xchg (bad) (bad) (bad) jg jmp push insb aaa mov mov test movl test push lock cmp fdivr ljmp add adc popf stos add fnsave clc decl mov mov sarl xchg les inc pop mov ljmp (bad) xchg jns dec in cmp int3 cmc adc mov (bad) (bad) (bad) (bad) (bad) dec and jmp jae int3 xchg add add addr16 pop mov (bad) ljmp push pop mov shr arpl pop jge xlat dec ljmp push (bad) scas aad mov stos outsb aam or inc mov xor or inc adc ja dec inc push and inc push mov dec dec ljmp lods (bad) sub xchg jo mov aam adc (bad) (bad) (bad) fbstp ja mov sub aad cltd or fsubs xor in pop xor test mov fistpll add scas (bad) sqrtps cmp repz mov dec roll cmp adc repnz xor sub add mov dec pop xor add icebp cwtl cmpsb sub jmp push inc daa insb push fidivl mov test jecxz mov mov mov push xchg mov and fstp push out popf mov jg (bad) inc dec les adc orl and and sbb and daa inc inc (bad) les lods jno adc fadd loopne cmp inc jl popa (bad) (bad) (bad) mov out jl (bad) jae mov cmp inc add sub test (bad) fwait scas add (bad) (bad) inc lret mov pop sub sub js out push test (bad) jmp dec mov in adc xchg (bad) mov loopne sub test fdivs pushl aad push cmpsl decl jp add mov pop (bad) mov scas sbb (bad) (bad) mov insb into dec lahf and mov int and pop loopne (bad) cmp xchg repz dec out cmpsl dec (bad) int3 bound sbb (bad) mov push repnz sbb insb stos xchg sti inc data16 icebp xor (bad) (bad) jmp xchg or and ret push xchg xor stc call scas inc mov pop icebp mov (bad) out or (bad) in (bad) mulb lds xor clc mov ljmp out push xchg push cld push fiadd lcall jg mov and idivl lds dec xchg jg and mov inc in and push xchg xchg pop adc int xor outsl push (bad) insb dec dec or mov cmpsl ror sub rorl mov test jecxz ljmp pop mov lcall in lods xor and jmp or or je ljmp mov jne loop leave jns popa aad cmp push mov scas xchg pop out pop jmp (bad) incl push (bad) nop sbb push mov insb pop mov rcr (bad) jg outsl loop sbbl pop jne rorl mov mov jmp test cs pop push jo cmpsb mov call sub stos call (bad) dec adc sub xor aam (bad) lcall or xchg mov mov cwtl aam cwtl imul mov (bad) aas xor hlt jne js loope cmp add notb push inc lock inc dec popf add idiv xchg mov dec lods lods (bad) push mov cmpsl mov push mov mov out xchg adc shrl cmpsl stos cmp xchg pop imul pop mov sar adc push lods outsb test pop fnsave call (bad) ljmp imul push sbb gs js fistpl lea push negl cmpsl sbb clc and lcall dec adc inc sbb sbb push sub inc ja fmuls loope jae hlt in pop cmp (bad) mov xchg ja,pt unpcklps xor sbb repnz sbb decl push xchg jp pop mov outsl add gs scas mov (bad) (bad) call jns cmp jmp and movsb sub mov push dec scas push or (bad) jp pop push sbb in push dec sbb xchg (bad) (bad) (bad) call js insl and cmp nop sbb pop mov xchg mulb mov pop cld and cs cmp inc jbe and mov pop push xor and test and (bad) (bad) decl jp and add adc pop int3 pop (bad) shrl lds push repz jmp (bad) (bad) inc cli dec fadds in (bad) test push inc inc adc jecxz jbe fidiv jl inc in fsubrs dec loope dec arpl push call add and adc cwtl mov decl adc pop jbe cmp mov and sub mov pop aaa aaa mov jge pop out lahf jg lcall out push mov jnp xchg jl cmp xchg xor incl ljmp dec hlt mov ja out mov lock jb xchg dec (bad) (bad) (bad) jmp sbb xor outsl into push std daa in loope xchg adc xchg mov lcall ljmp cs imul (bad) (bad) fldl (bad) std cmc or push int adc push fiadd mov fldcw jl adc jae sar (bad) call adc (bad) xor fidivrl jge movsb cli in sahf sbb (bad) (bad) mov mov pushf adc aas arpl mov dec add call or or (bad) aaa arpl jge xor cmp jae loop pushl (bad) dec (bad) int3 jmp push mov mov mov push scas pop mull shrl jno ja sti (bad) (bad) pushl pop loopne jo mov sub sub pop lock (bad) (bad) mov mov or aaa icebp in mov inc inc loopne aas mov dec cs or out dec ljmp cmpsl push sbb jne jg outsl jecxz (bad) cmc cmpsb in loop (bad) call insl mov xchg gs outsl lods xor pop pop scas pop dec pop cltd movsl mov outsl icebp (bad) (bad) mov fcoml enter fs sbb call aad jg fidivl ret ljmp out sbb pop into idivl mov psadbw pop fistpll idivl sbb ljmp jmp mov and jo sub ret dec mov (bad) (bad) mov xchg cmp jge pop inc sbb cmpsl mov xchg popa (bad) (bad) pushl out xchg sub stos mov sub xchg (bad) out fwait (bad) jne xor jne jg or fnsave pop jecxz xlat fldenv sub jle sbb inc std jmp adc stos test (bad) jmp in insb xor push jne insl lret jo int in sti add ss push xchg dec sbb pop cli das fsubrl mov mov fcmovnbe test sbb out adc (bad) popf in jo (bad) jl push push arpl dec dec in add lods dec call push (bad) decl loopne lock dec lods movsl cli sti in aam or and repnz das fisttpl call add stos lret mov incl lret jb dec cmpsb nop stos jle scas icebp sub push adc push out das cmc jmp (bad) out adc cwtl xor jmp gs pop push div (bad) decl add divl into mov aas imul (bad) mov fdivp jb or pushf pop sbb jae or push cld (bad) (bad) (bad) jg out jno ds xchg frstor leave sub adcl mul xor push pop mov mov pop fildl pop sarl das stos lods inc stos jno leave imul (bad) in int scas dec (bad) dec xorl test mov cmp leave pop add clc (bad) ljmp mov clc sbb mov cltd mov or movsl and cmp int3 ficom lds ljmp inc popf (bad) and outsb pop lret mov pop and in pop addr16 lcall jae dec inc arpl push outsl fld dec adc jg idivb jmp loope lcall jns popf test sti (bad) (bad) (bad) (bad) (bad) jl fild inc sub push das out pop jno mov int3 xchg inc pop or pop outsl cmp sub push sahf mov and dec out cmp lods test mov (bad) adc in in push aaa repz xor gs enter sbb incl dec fisttpl popa sbb sbb mov sub sbb pop clc call out pop lret mov jbe lret xor xchg (bad) mov fbld jns scas (bad) aas sbb xchg adc ss mov addr16 jmp sbb cmc sub (bad) cli dec aam in sahf adc inc mov addr16 in xor sti push cltd cmp push adc dec mov ret mov dec sbb (bad) (bad) fildll negb adcl loop lock aad (bad) jmp dec (bad) mov shlb js pop je popf cmp lcall push jp lods xor jp in stos subb pop ret dec fistpll andl mov daa (bad) (bad) (bad) mov cmp inc mov inc push jo imulb mov push jg fildl pop addb mov cli mov sub gs xchg (bad) (bad) (bad) fcomps mov int mov (bad) arpl js xchg push xchg ficompl fisubrl (bad) (bad) mov mov fwait xchg cmp inc mov aam pop mov and (bad) (bad) (bad) js std sbb sbb sub push xor sub dec out call mov (bad) (bad) (bad) (bad) jmp les cmpsl push popa xor mov stos movsw mov xchg popa adc mov popf pop push inc ficoml in jecxz sbbb sub xchg push mov (bad) mov jnp add jno dec sub std mov sahf stos icebp add lods (bad) decl aaa fiadd lock mov xchg sahf imul mov cld (bad) xchg leave ret outsl fidivrl std (bad) jmp ds jge in das out std scas or adc cmpsb shlb shrb stos ja jne fcompl insl out cmp pmaxsw dec pop icebp xchg (bad) lcall cld outsb mov dec addr16 cmp in and xchg and xor and (bad) (bad) (bad) call and xchg xor add mov mov jecxz dec inc imul icebp lcall repz pop jb sub outsl jbe adc jg push dec (bad) fwait xor (bad) jg mov (bad) (bad) (bad) ljmp orb xchg xor hlt push lods fimull dec rorb mov mov fcoms out xor (bad) pushl sbb jecxz mull lahf dec cli xor sbb mov adc decl jl hlt jns inc es aam mov adc jmp fsubrp ljmp addr16 (bad) jecxz and dec pop mov ljmp (bad) lcall mov aas pop pop subl (bad) hlt jnp sbb inc (bad) pushl ss adc cmpsl mov xlat mov lret push sbb sbb in inc xchg shrb sarl scas dec in (bad) ljmp mov loope (bad) and pop sbb adc mov iret ja flds (bad) (bad) (bad) (bad) cld ja pop (bad) xor mov repz fsubrs vpunpcklwd in push mov (bad) decl test mov add in je arpl (bad) jmp dec xor jno mov lods mov in or inc sbb xchg test out jecxz cli decl fwait fwait dec xchg shlb inc jb sbb inc paddw (bad) call or inc inc mov inc or lea ret dec je leave inc aaa dec mov bound mov or push sub mov (bad) push jmp xchg imul (bad) pushl mov add lcall mov cmp push bound mov enter lcall xchg insb int and mov sub ljmp incl lret lret mov dec mov push stos rorl test insl rcll incl into hlt fcomi out jno iret push mov dec out add loop idivw dec ljmp cmp in mov and into iret sub dec sti (bad) (bad) decl dec lods test dec xchg jns repnz push mov andl test pop (bad) (bad) jg lds push mov adc sbb hlt fildl add inc shrb call stos jae adc (bad) outsl (bad) fistpll shrl or mov jg cmp jbe (bad) decl sub sub in mov sub inc inc leave mov test xor loopne jmp int add mov cmpsl fnstenv (bad) pushl mov lea in dec dec add test rorl jecxz mov lcall adc std (bad) mov cmpsb movsl mov (bad) lea pop loop adc outsl je ljmp hlt dec or and out int inc push mov test (bad) incl dec push lret pop jno aaa inc dec jno or or cmc movsl (bad) (bad) push dec sbb mov jg ljmp cmp xor in pop (bad) fsubrl test pop leave push ljmp popf jno outsb lahf and and cli mov and call (bad) ja mov mov flds inc dec xchg push inc ret call cmpsl lret pop fnstcw dec mov je test push loope inc dec cltd jmp rcrb jne mov ret imul adc xchg sbb jl (bad) (bad) (bad) decl xor or (bad) adc jbe notl pop fsubrl pop add (bad) (bad) jg mov xlat outsb fildl popf or mov mov cmc xor cmp mov xchg inc sub pop fidivl stos mov repnz jns out and (bad) pushl dec icebp (bad) (bad) loope lock jecxz jl gs bound (bad) ljmp (bad) sub leave sub int3 mov dec adc (bad) dec mov xor jp test test addr16 cmp (bad) and das push (bad) jg out push push add mov dec idiv pop jb iret mov jo mul or notb ljmp dec loop icebp bound pusha cwtl add dec inc sbb mov add adc jno (bad) pop into aam mov imulb adc cmc lcall and xchg pop pop mov inc inc jle mov xor bound jae outsb divps or or insb (bad) jg mov stc jns and add aaa clc push pop mov push sar and pop fwait push fisttpl (bad) (bad) (bad) mov add dec mov (bad) fcompl pop (bad) mov jne cmpsb mov sbb mov test leave cs lds jns pop js jno sub xor sbb addl cmpsb fs lock (bad) (bad) incl mov inc inc aam (bad) (bad) popf in out stc into cmp std repz (bad) cmp xor xor mov add mov sub lahf aaa mov in aaa loop (bad) jno sbb jns cmp sbb enter lds pop or mov xlat adc xchg in stc lret mov adc fs addr16 (bad) decl stc in and mov dec mov (bad) call push mov add mov xor or cmp xor in push add (bad) bound add leave int3 subl cmp push clc rolb push or inc cmpb push bound gs ljmp cmc lret (bad) xlat xchg in mov scas in and addr16 sti mov (bad) (bad) jnp sub repz xor cmpsl loope in icebp cltd inc mov (bad) (bad) fiadd sbb push roll or mov inc mov (bad) call lret std push inc lret test ss pushf fwait jle pop jmp repnz (bad) fisubrl aas sahf cld lods cmp fistp pop pop js test push mov (bad) lcall mov sub out dec hlt fiadd and xchg jae jecxz cli aam fildll mov cltd jo mov mulb pop or (bad) (bad) mov aas mov or sub leave cmpsb ljmp xlat or add cltd aaa rcrb ja push mov iret or lahf and xor mov fsubrp outsl (bad) incl push loop pop xor lahf push mov and mov inc test push ljmp jo stc xor mov imul fs sbb (bad) xchg (bad) pushl shr rol push xor arpl push stos clc xchg sub (bad) (bad) jmp outsl mov adc adc push cld pop adc sub lds push outsl pop pusha mov (bad) mov ljmp jle popa cmp inc (bad) lcall aas mov sbb sbb popa gs add fildll lock loope movsl rcrb jmp decl cld loop ja sbb cli push cmpsb add cltd and mov movsl or xchg xor dec std xchg xchg mov xchg pop adc xchg xor loope add outsl ret push out pushf enter (bad) aam out dec xorl mov imulb push repnz sarl (bad) pop fbstp fmul jb push mov insb cmc (bad) push in jle lea add inc je and lret jmp sahf mov jbe mov sbb xor into (bad) js test pushl in add jge daa dec dec fimul and xchg jmp fcmovne aad (bad) (bad) (bad) push cmp cltd fwait dec leave cmp xchg decb (bad) ja sti mov xchg fwait std ljmp hlt decl inc sub stc imul stos dec xor shrb scas jmp in mov insb cmpsb ret ss insl (bad) lods xor xor (bad) mov sbb mov loopne add add push call stos shrb inc adc inc aaa add cmp (bad) lcall fiadd push test leave or inc in dec or adc push (bad) jecxz loope (bad) call dec mov sub xchg lret rcll sub orb cli enter mov je xchg jmp add cmpsb sbbl or cmpl scas (bad) (bad) (bad) call xor pop xchg jmp clc mov mov mull push sbb and mov (bad) (bad) incl in xor jmp pop jl dec dec mov sbb xchg pop jo fwait pop sarl pop aas jg sti addr16 shlb xchg dec pop sbb (bad) (bad) mov jnp mov les sub mov dec mov mov and in hlt xchg call or mov or movsb mov leave dec xchg cs jnp movsb clc call das pop mov dec sbb sbb ret (bad) (bad) call nop mov (bad) out mov or sbb (bad) leave (bad) push mov jbe daa cmp aaa mov fstps xchg xchg call dec std imul inc leave xchg mov repnz jmp mov xor out div scas pop call imulb mov pop pop adc jbe jecxz sub ljmp lcall mov xchg hlt adc jp cmpsl cwtl xor jbe lret mov or cmpsl ret addl push aam stos add push mov and and and push xchg arpl and and fnstsw das jns push pop push and fstpt (bad) jae xor pop jo lea mov mov push and inc jae or mov pop cmp popf pop pop sub xor sub sbb and cmp pop push push aas int jae adc stos insb push sub sub add sbb adc or dec out or cwtl sbb sub jns arpl mov outsl dec mov sub imul in dec (bad) and das inc xor inc gs outsl xchg mov or push in and add (bad) mov dec incb pop push fwait in add cmp inc xchg insb jnp scas ja push sti sub pop imul insl std or add int3 fs pop jae jno sub and loope mov jo fs addr16 out mov jp jbe outsb cmp xor insl dec add and (bad) fcmovu add mov push test mov dec push push lea jge es push push inc push push cmp mov xchg xor ja push out mov cld lcall (bad) hlt push xor cmp mov push movsb mov aad mov rclb jl jle (bad) (bad) incl sub mov sbb dec jno repz test ficompl jmp (bad) (bad) (bad) call aam movl imul std in leave mov add insb push pushl psubd or fistpl imul icebp or shl add aam dec std test cli test (bad) (bad) ljmp cwtl mov (bad) leave mov lods jecxz fdivs jne fild or shrl lods xor cmp ficom push xlat enter mov and mov cltd xchg cmp movsl mov sub mov (bad) and or jg jg dec push sarl jbe jno add sbb call aad mov mov movsl in insb aam call xor aaa (bad) (bad) incl jle cwtl push loope or insl or in out pop test call imul sbb xor dec lahf inc xchg push insb jnp (bad) (bad) jmp or (bad) fnstenv adc mov mov bound or ljmp rorl popa mov into sub (bad) mov mov inc movsl fisttp xchg fsubs shll push (bad) (bad) (bad) jg cld fldcw inc mov sarb add in add pop dec or cmp cli (bad) pushl push stos inc add adc or and test or mov (bad) lcall stc ficomp leave fldcw and xlat (bad) pop cmp mov cmp (bad) (bad) (bad) ljmp cmpl or mov lcall ljmp fildl (bad) (bad) incl or test fs ds or or push in decl xchg daa mov cli mov or xchg (bad) mov incl inc push imul xorb sbb push imul (bad) pushl aam loopne rorl int3 dec ffree fistpll (bad) out mov pop aad mov call xchg shll push repnz pushl addr16 mov aas dec ss fisubrl or std dec sbb scas (bad) dec cmp jp inc ret out pusha fist addr16 mov jns incl mov mov ss push xchg ja mov das mov inc or das es cmp lds or sub mov cmpsl call ret (bad) mov sahf fldcw ret das mov in pushf mov add ss (bad) (bad) (bad) (bad) jmp addr16 jb push add adc mov jnp sbb xchg or ljmp and fisttpl aam sbb aam clc mov push cld mov mov ja outsl ja mov out clc (bad) ljmp jo (bad) lret pop or adc sahf gs scas (bad) clc sar imul (bad) ffreep insb push js or push addl mov cmp cmpsl notl pusha rorb lcall loopne dec fisttpl pop (bad) fldenv fild (bad) (bad) push cmp aaa push scas mov fidivr mov jmp repnz lret (bad) (bad) decl mov add push xlat int push ficom fldenv jp,pn mov jg (bad) decl les sbb xchg sub aaa mov call (bad) out sub add add and insb mov test jbe insb and out mov pop ja push pop cmp adc add stos push jne pop cwtl add and inc ret fistp add jne inc cld lahf xor negl or mov fadds mov jns lret push mov or or jns daa inc pushf or ret mov in cld nop adc mov aas incl leave sbb into sbb rorl sar (bad) mov test lds std and sbb addl aad lcall inc push add (bad) mov adc mov (bad) incl js inc outsl (bad) loopne jmp test mov cmp (bad) decl inc mov popf sti jmp stos push cwtl out jecxz repnz cmp test pop stos cmp (bad) (bad) (bad) (bad) incl aam imul loope jp iret inc gs (bad) xchg push cmpsb scas mov or addl dec pop inc in xchg cmp xor dec cmpsl in decl or lcall lock (bad) (bad) (bad) decl pop mov and stos xchg clc repz mov subb fwait xchg and lods std decb and add sti aas jg mov mov pop fs lea (bad) lcall aas ret rcll sbb pop pop mov icebp aas rorb and cmpsl out aas (bad) lcall inc cmpsb mov scas add aas xor aad mov (bad) (bad) (bad) (bad) std std into popa test ja stos in das dec pop loope les aas xchg les jne int mov lcall cmp push mov xchg aas and (bad) loop mov jp popa push pop sarl (bad) pushl pop aas xlat out das lea mov inc and movsl jmp jg (bad) (bad) (bad) ljmp aas jge mov inc rcr push arpl int3 and call cmp jp lcall jmp cmp mov cmp xlat cmp mov sbb jmp xchg inc inc pop mov jne fldt cmp jno shlb (bad) out dec nop pop cmp lods inc push fisubl xor adc mov sub dec in ss (bad) call scas into imul faddp jge call mov xchg cmp and andl dec lcall jge loop cld fildll enter fmuls jae inc test nop mov xchg and stos dec inc push push push and xchg stos fs push push push xor dec inc push xchg push and xchg push fs push leave push xor push rclb push clc jg adc mov add je imul mov mov (bad) outsb fs gs in xchg lea push push imul and sub push or and mov push gs fs or std mov out push insb jae jb insl jo inc inc push imul adc outsl addb fldt dec outsb inc inc lock inc xor outsb mov or dec or push ss fdecstp jo insb das arpl inc jb or (bad) jbe mov (bad) push sbb mov or gs mov insb daa arpl fdivp pop adc gs xor add cltd js mov jp mov insl or push fmulp dec cmp testl popl inc and sbb adc inc jne cmpsb push push jg pop dec jne gs or xorl inc or in (bad) fildl adc adc imul push or imul leave mov jbe sbb and fs inc fdivrl jae push pop je fstpt inc sub (bad) iret dec outsl mov mov jl or lcall push insb pusha pop push gs loop jg pusha sbb fs cmovge outsl jb xchg fsubl push or and cmp loop,pt sbb mov adc out dec outsl jne in mov into ficoml pop (bad) lcall push andps mov popf sub orb xor fnstenv daa dec popa insl gs mov (bad) xor push dec inc rorb inc ret (bad) add dec inc daa or mov mov addr16 ja push je push outsb ja outsb pusha shll jle push push outsb inc jae jae sarb test sub pop movsb push xchg lcall dec mov lea ret inc add xor mov cmpsb inc jns push imul cmp inc push (bad) xchg mov test mov imul popa je test lret pushf add test fsub pop jae push sub call fidiv shll (bad) mov insb gs sub jbe jle dec call fs sbb inc test pop (bad) scas out fdivs sub inc sub ret or ret push je shr aaa inc push call arpl add inc rcrb outsl ja push jl jo mov (bad) dec and adc cwtl push mull or imul adc inc jae push jne jns add ss or inc aas in ficoml or jnp outsl jns or add add jl sti pop add cmc inc sbb sarb adc inc sti ret pop add mov imul inc dec lods xor test and sub es or test or js bound pop lock mov or insl outsb je or cmp sub sub es push enter or or or inc push mov push loope sbb pop push (bad) push adc mov leave mov insl rcll lods jnp add push inc push jo,pn mov adc cmpl mov popa inc add jb arpl ds sbb outsb pop pop imul pop sub adc adc scas popa sbb inc adc (bad) icebp imul (bad) jp shrb inc push xor mov nop sub test adc sbb mov push imul cmp clc mov sub inc arpl mov ja or nop (bad) mov fisttpl insb repz adc cmpsb adc popa sbb mov lret mov out loopne adc ss pop dec gs sub push ret std mov push pushw inc or xchg imul ret adc smsw mov bound imul jae jb push lods enter mov push push subl jge (bad) icebp test push inc pop mov jo sahf gs aaa mov jecxz rorb adc aas jbe bound jp pop mov outsl push ss imul mov add pop lea mov mov dec dec inc sbbl or test mov jne por movsb or push outsl jo popl add je int3 push adc sarl and push dec or outsl jo stc fs adc outsb sbb arpl add cmpsl aam jo je loope mov mov (bad) xor lock rep dec push popa test add addr16 insl lock cmp sbb or cmp gs insl or sbb adc mov arpl mov (bad) lds popa jns icebp adc outsl pop lods dec mov out mov inc arpl xchg sbb lret mov (bad) pop add je or lret adc or lret mov add xchg or mov inc push hlt push push push xchg xor jb inc pop imul push cwtl push inc add (bad) aas or aas push rorb loopne add or or xlat mov add or sarl xor cmpw jmp add adc (bad) add mov push add (bad) les jno push rcll or fmul mov mov cwtl sti mov pusha cs pop add adc pusha add or inc cs sbb stc nop pop push fildl jae xchg or jmp add add sarb sbb or add add add add add add pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa lea push cmp jne sub jmp 