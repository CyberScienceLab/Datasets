inc mov or xchg cld xor lret adcl sbb jmp lods nop leave inc mov mov notb lret cmp push sub mov or cmp (bad) in push nop sub sahf dec push jbe adc mov xor cmp leave lret sbb mov fcoms mov jmp sbb mov xor test in es sbbl push mov inc mov iret inc aas adc cli aaa mov jne xor out push loop lret push lcall loopne call outsb sbbl add ss fsts iret push mov xchg ljmp (bad) jnp imul inc scas mov push cmp pop cld dec cmpb leave movw lea jmp jnp pop fsub inc push int3 adc dec roll jg add and add xchg popa (bad) and push pop and roll aad pop pop std adc and cmc repz fldl jle (bad) push pop pop cli dec and aaa xchg ljmp add int3 insb mov cwtl les jmp push mov xchg lea xchg pushf mov pushf movzbw lea mov mov lea mov push push movb pusha pushl ret jmp cmp inc push lds inc aam hlt js dec lea movq adc and sbb addr16 mov clc jbe rcl es inc jmp andl inc lods stos out clc sbb lods aaa adc and xchg pusha xor mov imul imul in inc fcomp xor push data16 fwait popa xchg (bad) mov adc ja ljmp pop loopne jne cmp mov mov jo pop dec lock mov cmpsl lock push sub and jnp add jmp push sub mov push jg dec and in iret push call mov sub clc call add ja jbe dec outsb push jb jo jb dec gs fs push inc ljmp fwait cmp rcrl cmp sub jo sub or ljmp jns sub into jns fcmovu mov (bad) pop ret sbb movsb pop lods data16 mov and sub outsl sbb mov sub adcl adc movsb and int3 push (bad) xor jo,pn inc in sub stos pop jo dec push frstor rclb (bad) xor stc dec mov insl add sub movsl sub cmp mov (bad) jno shrb lret out push cltd repnz mov mov sbb (bad) idiv mov outsb mov and pop cmc roll pop cmp or les in adc add mov int3 dec (bad) cli decb (bad) sub xor insb fwait pop ret or adc or stos xor out repz loop adc xor pop rcll hlt daa shlb sti lock fild xor mov loope mov pop add push xchg es xor (bad) sbb in and or cwtl add ds adc popa jnp mov test idivb cmc cmp cmc xor bt sub clc test not movb stc xor lea jnp push not pusha stc bt clc rol stc mov push not push pushw popfw push inc call cmpb jmp cmp jnp loopne push inc sbb notb add sbb push add or clc mov fimul dec or jns inc int test pusha mov inc sahf push fstpt sub pop std dec fldenv bound cwtl imull (bad) xchg adc test das (bad) test and (bad) adc jb gs loopne imul lcall ret pop cmp cltd cmp data16 push lods cld or outsb jbe jns imul pop repz or int3 mov loope push jo xlat icebp push fs xor sbb xchg addr16 sbb (bad) stos push inc adc adc jl cmp fmuls (bad) jl pushl jecxz pop imul outsl push lcall adc adc mov or sbb jns adc (bad) inc mov shrd add aam push inc and test push cld lcall mov xor arpl dec mov push sbb xchg adc dec mov fucomp xchg adc aaa and test pop dec lds arpl inc sub in popf lock pcmpgtb repnz xchg add ds or icebp pushf pop fcmovbe or fildl repz xor or jb xchg gs and je cli hlt push inc movsb xchg test imulb pushl sbb pusha dec inc (bad) je ljmp push sbbb mov out ds or pop call add mov cmpsb sbb cmp cmp cli add loop push inc (bad) mov sbb sub mov sbb cmp inc loopne add mov cmpsl dec (bad) popl movsl repz iret scas std cmp inc sub inc aad std pusha repnz (bad) js dec loopne adc xchg jg repz mov jo repz imul jnp jnp jnp dec and mov mov inc (bad) (bad) pusha divps loop es mov (bad) lret cmp ffree and sub pop fisub fistpl negl adcl je mov or movb mov repnz subl loop pop fist inc push arpl inc mov mov mov add mov inc push dec xchg flds sbb jne rorl aas jne test sarb int3 sub nop jns dec push or lods cmp cmp rorl sub lcall add shl mov adc push or mov scas mov mov stos lods xchg repz aas jb adc pop stos inc in popa mov push lock cmp pusha ret shrl dec (bad) jge adc jg mov inc (bad) jle rcrb mov or jmp xchg xor push incb scas mov add add sub scas das popfw push pushl movb inc jmp inc into fildl in inc push xchg or je adc inc mov cli sub push push ljmp jb (bad) inc push adc mov insl call add stos test dec or jecxz sti pop sub mov movsb push shlb shrb and out lods aad add xchg adc mov jns hlt mov repnz push leave outsb mov nop xchg inc mov mov mov fsubp jno cltd fdivrs mov dec cmpsb push fldcw mov insl xchg sbb aad pop inc cwtl in inc push push dec enter cwtl (bad) dec scas sub pop inc mov insb mov push xchg je fnstsw test clc inc enter lea adc mov jns mov jl xchg adc in cmp xchg sbb das hlt mov bound xchg and cmpsb mov scas (bad) sbb xchg inc movsb addr16 pop insb lret push in test ret pop push cs mov out ret adc pop psubb je fdivl xor arpl add xchg mov and scas push popa and out in inc push sti mov mov push and push mov pop push xchg movsb xchg add pop (bad) (bad) lret ds pop idivb fdivs dec cmp push mov mov mov std adc popl lret pop adc nop gs push (bad) sub mov xchg mov pushf xor lret xlat pop test pop sub xchg add dec sub inc inc inc push sub jae test add mov xor pop outsb xchg cmp sub lds jb out inc sub or addl popl and out pop cltd js dec lcall pop cwtl mov pusha int push inc jmp add lea adc or mov xor dec scas (bad) jmp dec xor lret and adcb lret bound jg repnz mov addr16 push lret and push mov fildl js push xor xchg (bad) dec clc push int3 inc jb xchg lahf or and (bad) push leave jecxz (bad) jns inc jmp imul inc cltd xchg xor adc jno dec mov cltd jecxz mov out jmp adc test fnstenv inc inc test cli adc mov mov mov xor call loope adc out inc push aad mov outsb pushf jb inc dec mov loope out out lret sti add gs or out ds or dec mov rol add inc mov add cmp jno daa inc rol xchg fisubl cmp iret jbe orl sti pusha mov or inc xchg or arpl scas jle gs lcall push jmp and sbb insb mov fcomp xor jmp sti cmp dec or outsl push mov out dec mov in ja mov sbb mov or (bad) jle fs mov movsl into inc mov push jmp xchg fdivs sbb es mov xchg mov adc mov pop (bad) cmp dec xchg movsl xor and cmp scas test pop movsl or cmp pop xchg sarb test rcrl fcoml pop mov fisubrl pop or mov imul sbb cmc add cld stc xchg cmpb lods and mov jo and dec mov sub clc xchg (bad) je add loop cmpsb in (bad) jmp and aam adc add add push movl pushf mov pushl mov lea jmp pushf cmp mov pusha lea ja jmp movsb enter inc push ja sbb cli adc sbb rclb ret popa jno pop aaa mov (bad) (bad) popa add lock mov lret push je,pn pusha aas out mov dec lahf arpl push dec (bad) scas aaa mov push and jge daa push jno mov nop cmp out mov dec jecxz imul or (bad) mov into sub mov mov pop mov dec cli sahf (bad) pop (bad) popa outsl push in mov icebp cmc push or mov rcr cmp cwtl andl mov or out push sub mov adc mov add pusha push lea call pushf jmp dec mov jmp cmp mov adc xor inc jp push in cli dec scas jg jp push test and loopne lods push push lahf jns into fdivrs jge (bad) dec fidiv dec shll xor mov jnp xchg push dec push (bad) out (bad) lret pusha mov cs faddl fistp push add std add movl fwait ret push jmp aas iret dec imul lahf arpl or sbb inc es pop ret pop cmpsl pop mov add (bad) icebp jmp mov jecxz fucomip mov and jp jmp mov or aam pop sbb xchg int fs sub mov dec sub iret add sti mov cmp xchg icebp or inc inc jbe jp insl xchg mov pushf jg ret xor add sub pop ficom out mov xor lds das add sub add ja xchg decb divl addr16 inc push or (bad) xlat pop daa jge test inc add or sub in mov or pop adc pop jnp cli inc add xchg mov push inc js inc inc ljmp stc xor xor or ss daa dec mov jb mov inc jl frstor lcall fcomip rep cmc lcall push sbb adc xlat fidivl jle out xchg enter add add dec push std xchg je std ret adc cltd outsl adc fsubl xlat sub fidivrl addr16 cs sarl pop jmp insb mov sub inc mov popf js lea jae bt cmp pushf lea ja mov inc pushf not jmp sub mov mov jp clc cli inc jle mov or lret jp push xchg inc loop mov gs mov xchg add sub sbb sub aad pop (bad) or lcall mov push push out sbb icebp mul inc mov or addr16 movsl inc sbb vmovddup cmp mov jno or data16 pop ljmp jbe and rorl outsb lcall stos or je jo jne jb dec outsb outsw inc add mov jae jb xor fs insb add iret aad add pop cmp add test cmc inc push and xchg sarl xchg dec pop mul jb dec jl,pn mov and adc mov xor push push outsb std loope sbbl sbb sbb fnsave scas sbb mov mov repz (bad) (bad) and inc cmc lret jg in push xchg xor (bad) test ja jne pushf mov test mov push mov or adc push dec (bad) xor jb xor cwtl sub push jl in lahf pushf idiv gs sbb add jg add pusha mov pushl mov lea ja not inc pushf inc rcl sbb sub rcl xchg dec pushf shld mov rcr mov cmp call jg pop xchg testb sahf xchg jb orb dec jle outsb push mov pop pop push mov test aaa out out dec or in test pop mov loope jecxz repnz xchg lcall jnp lret das icebp cmpsb insb test dec and scas mov addr16 imul test aaa iret push cmp nop and dec push dec mov xorl mov jmp repnz mov dec push ret iret mov pop jno loope out jb ret jb rol (bad) xor or mov sar je scas pop cwtl jle fimul dec push push inc push inc dec push cs insb add inc push xchg icebp sbb loope dec push jnp pop pop pop dec jge cmp rorl pop cltd lods jns les inc orl fidivrl and push dec insl fmull mov (bad) dec add pop loop xchg insb push ljmp sbb cwtl or (bad) popa dec out cmp clc fdivs scas mul movsb mov (bad) pop jp shlb dec loope and cmp cmp movsb int3 push cvtps2pi les push jae mov insb in mov es lcall insb std mov push and push sbb js inc js daa inc imul bound sahf negb add sub aam call movsl sub pop dec push cmpsb add testl cmp pop leave jno out cltd aas sub aam cmp push in mov push pop dec and repz addl cmp dec movsl mov (bad) inc testb mov repnz dec jae push scas cmp (bad) mov mov cmp (bad) (bad) imul adc xchg ds and int and fwait mov outsb outsb fstpl fidivr push lods insb mov mov mov jecxz xchg cmp dec orl add mov inc (bad) add sub sete mov neg xadd and cwtl mov inc clc bsr rcl shr movzbw mov pushf pusha or jmp lock (bad) lock push push adc shrb (bad) rolb aaa jg jmp idivl adc dec cld xor lods jmp dec sbb jge pop mov pop incb jae lsl dec mov stc sti out js (bad) mov xchg jb push negl leave sub mov or mov mov icebp jle ljmp mov push lods int3 adc pop cmpsl ljmp sub mov sub and fsub sub icebp pop sbbl pusha sti push jne cmp or adc shlb pusha lea jne ror test data16 (bad) mov add bswap sub shr xor mov push movb sub test pushl popl cmc call pop cmp icebp inc push (bad) jb push incb lret mov push lahf pop jmp xor leave mov pushf xchg cli dec out aas jp pop ret mov enter pop insb xchg add jo xor fbld push adc and jecxz pop and fucomp cwtl fild add cmp outsb mov adcl ja or je dec fs inc mov dec jmp adc mov cld adc push jae and cmp mov lods out lret lods fcomip lods or fs fstpt icebp lods adc popf mov pushf (bad) adc out or icebp lods adc jno jmp lea call stc test test sub jge push lea jne call mov inc push mov in mov push add call scas fisttp or dec mov push add addl enter add stos ljmp bound sarb jmp pushf enter shrb fwait pusha and nop xlat and out mov jnp jl insl fbld mov push mov push popf movsb fwait mov push push icebp dec out pop into mov fsubl std cmp popf and lds cmp pushf movb call xchg add repz push mov mov xor outsb mov mov je add and pushf daa test adc in imul fistpll add sbb sub jmp and mov nop sub clc adc dec js pop xlat lcall stc xchg cmp add test inc sub repnz xor push div pop fidiv fdivrl lret out popa pop gs mov jns and jnp fistp (bad) loope adc inc das xlat dec inc pop mov test xchg add stos sub ds shl pop mov jne sahf les lahf hlt and sarl cmp fstpl sbb test inc xchg test stc jmp cmp mov push pushl lea jb push cmp push mov lea jae bsf adc lea mov jmp in daa repnz inc push pop hlt loop mov jecxz pop pop dec scas sbbl outsb outsb sub out push pop adc pop jge andl jno push popf jno and cmpsl pop lret mov pop (bad) pop push push inc std push push dec cli pop jae cmp lds in in aam pop rcrb push test add xchg sub test xor mov pop and adc lcall lret pop sub jae jle aas cmpsl lods or sbb scas sub cmp imul sub int dec imul add cs or unpcklps js xchg mov jne push mov xchg and jecxz sti pop sub jo movsb jno rclb test xor call jb repz leave scas (bad) leave dec jno xor or pushf mov jo pop aas fldl adc sbb imul lret dec jo pop inc xchg jnp (bad) out aad sbb jecxz hlt cltd jge fstpl mov lcall inc (bad) pop xor xchg popa mov dec jecxz arpl das mov les xchg push xor xchg dec ljmp xchg leave adc mov lret lret cmp test fsubs dec dec xchg into jle sub and incb nop or test xchg or sbb inc mov sbb add push mov dec icebp push scas xor mov push pop sbb (bad) sbb xchg fs dec call int sub sbb or inc inc jno ljmp and xchg and sub in dec out jbe xor xchg fsts pop subl out outsl pop arpl test inc mov pop xor jl mov or aad mov mov daa ficompl push and adc inc add fs jno push movl call jmp insb (bad) arpl incl jne and adc (bad) imul cmp xchg pop les bound popl out insl insb lods cmpl sub leave xor cmp in mov mov (bad) int dec loopne fcomip lock push mov cmp xchg stc sbb loope fnstcw lcall add mov xchg jbe fwait es sbb sti mov xor xor sbb push loopne in stc xor mov and lods aaa mov out test pusha cmpsl pop inc (bad) in lahf push fcompl jb mov movl pusha movw push movl push movb pushf pushf lea jmp mov push mov adc std adc xchg out sbbl inc int3 lret xchg lret ret imul jle fstpl lods adc iret push push test mov sbb movsb popa shr movb mov cmp dec call imul jp cmp or mov jg and jbe cmpsb fidivl or pop call jb ljmp jbe add ds mov push pushf fwait loop push lahf add cltd dec adc pop mov dec cmp pop jmp cltd xchg imul cmc pushf negl and adc mov sub in jle mov mov inc xchg clc inc push lret xorl sub pop lahf xchg and mov repnz sub popa cltd (bad) fldl or pop lcall xchg jmp jns ds pop xor inc or shr mov push jno imul dec outsb nop gs out adc cld jns adc rclb jne mov add pop xchg out mov adc aas add arpl cmpsl push pop inc subl into cli push inc lods add add adc lret pop mov leave repz test mov lret push jmp pop ret mov pushf les pop mov push daa (bad) loop js add or pop ljmp test movsl enter lea inc mov adc sti cltd sub push adc in ljmp sbb aas adc and pop loope xor dec dec cs insb add push inc push dec xor cs insb add add je outsl fs gs popa outsb fs gs add add fs je push imul fs call pushf lea jmp jnp test inc push xchg cltd fildll dec rclb sbb dec pop dec mov pop bswap in cmc fs cwtl outsb dec ds das inc and dec add pop xlat cmpsb nop cmpsl dec xlat mov (bad) jo cwtl mov jecxz divb ret mov sub aad sbb or insl mov mov add (bad) out push fistpl cmp mov out and xchg sub mov ss shl xor aaa in mov ljmp popa mov cmp cmp cld outsl hlt xchg push cs out mov (bad) popf movsb leave jl mov mov and sub inc sub test mov inc push in xchg dec mov mov outsl pop pop inc push add inc ret bound (bad) push mov mov arpl cmp adc inc ret push nop outsl (bad) or mov imul adc notl jne or jae xchg jno rolb ret sub sarb sbb fist and cmc pop mov push pop mov shrl (bad) jbe mov mov xchg scas and pop int3 mov (bad) xlat fwait jecxz fisttpll xchg sub stc mov (bad) add inc push pop aaa jecxz xorps decl imul or jnp movl sarl mov jne int mov data16 mov cs mov rclb clc cmc add mov jbe xor negb iret int imul or sbb fwait jae into pop lahf movsb jbe aas test cld in fdivl (bad) jge mov fmul push adc and inc sub cltd dec push (bad) std mov or je popa call mov and mov rclb lcall test iret adc add push sahf cmp mov daa out cmc and test icebp adc cmp xchg mov (bad) es push lds add mov rcrb xor mov lahf notl inc imul and and or cmp popa dec mov outsb pop push fistp inc jle scas cmp and arpl in push jmp movsb jge or fwait stc push orb and popa popa call cmp or jl mov aaa mov inc aaa mov outsb sbb movsl mov jb push es jle dec xchg xor fimul shl cmp inc pop mov xchg add outsl outsl insl mov adc cld cmp sub dec sarb xchg out pop sahf in fdivl inc lds xchg xor leave test fwait mov shrb mov pop scas sub pop lahf lods or in mov scas cwtl out cmova jg pop and jg popa jo out iret (bad) in insl mov cmp add adc imul arpl (bad) dec (bad) ja cmpsb pop aas iret popf lahf leave (bad) cli shll aam loope sahf xlat pop fdivl iret pop mov push pushf mov push mov mov pushf pushl ret stos pusha lea jmp add inc gs gs dec bound arpl (bad) rolb add dec dec dec inc push cs insb add xor cs insb add xchg mov add inc and and cmc push movl movb pusha lea jmp or sahf inc push inc push sbb mov cmp mov sahf sbb sub pop into jl sbb mov inc xlat out daa popf xor adc repz inc push daa dec fidivr std leave dec cmc repz inc jge mov jecxz or mov (bad) in data16 sbb out mov xchg icebp inc pop mov es (bad) or je mov insb cmpb mov mov mov jl mov fdivr pop mov scas dec sbbb jae mov mov push push addr16 rcrl jl idivl pop jmp adc test pop inc push pop sbb stos je cmp or es stos cmp xchg in mov inc xor stos fstl lods mov sahf dec out pushf test mov mov sub (bad) insb push outsb (bad) fcmovne je push sbb jp adc mov in pop pop call mov adc aam push cmp (bad) das inc (bad) lods and repnz adc iret xchg bound fisubrl cltd popf xor data16 idivl in ja mov lahf fs mov pop enter sbb ret xchg mov push aad push pop and jbe cmp aaa mov cld out lret push xchg lcall movsb shlb push push hlt and test push dec mov cli nop add fmuls adc jle sbb or add js dec inc imul xlat outsb scas sbb and sub or add in jmp repz iret cmp jmp mov inc xor stos outsl adc (bad) in dec adc xchg add sbb loopne mov ljmp imul clc and cmp mov test mov jo xor xchg sti cmp loopne push shr iret cmp xor test es notb jo jl cmpsb sahf mov push loop jbe rorb add sub ljmp mov cmp aaa adc stos pop cmp adc fisubrl push mov insl cwtl pop mov popa in into stos into pop out outsb sub sbb (bad) adc clc imul std push outsb xchg and mov inc repnz cld outsl mov insl and dec loopne ret pop rolb je shrl fnstsw sub mov (bad) sub dec imul xorb add or mov fild orl jns adc in xchg rcrb push push test iret sahf popf mov cmp out jmp iret cmp testb sbb movsl rcrl push call pop aad xlat push arpl fsubrl clc icebp gs std pop in lock mov int3 daa sbb out fstp jnp jae (bad) adc jmp pop cmp xchg mov fs xor test and cltd leave push lods and cmp call add add in push add add scas push add add add add add add add add add scas add pop add (bad) scas add sarl add add add add add add add add add add add add add outsb arpl add outsb arpl add jae popa insb insb add jb imul add jb imul xor push outsb dec outsb jae popa insb insb add dec popa imul add add sbb xchg mov xor ss fmuls cmpsb flds pusha push adc jmp out in cmp cmc add sti imul jnp lret sbb inc mov pusha das push mov aas mov lret mov in cmpsl cwtl sbb inc push inc sub dec mov cmp repnz cmp (bad) imul dec fistp pop push lahf maskmovq idivl push and mov push shll (bad) push jge aam out (bad) xchg inc fcoms mov mov data16 (bad) imul push mov add sub mov sahf stos sti dec jecxz aas (bad) xchg adc or aad mov pop sub rcrl arpl mov test or aaa jg cmp ror out inc daa push cmp ret and dec pop pop dec call adc dec sti jle mov and cmpsb out test pop scas sub test xchg lea clc pop mov flds lea xchg arpl inc push inc (bad) lods std stc cltd jge adc inc pop add jne (bad) out xor je fldcw pop enter sbb std add sti pop jg out aas jg outsb insb cmpsl or aam sub les cmp mov cmp imul or shlb out xchg pusha or insb sbb lods ret shrl shr (bad) fist dec sub ret bound sub add dec insl jo jb outsl outsb popa je push gs data16 jmp mov mov test add pushf clc clc push mov clc test movb lea je bt pushf stc call push push inc push dec cs dec dec add sbb pushf rep not pushf pusha mov push pushf push push lea jmp pusha movl lea jae setle mov mov rol mov add mov cmc test pusha sub jmp push mov push fbld fidivl xchg (bad) and (bad) or fmuls hlt jb dec jo jnp out push mov cmp pop int3 sbb repz jmp push test mov xchg add cmpsb (bad) clc (bad) inc and xchg or and les inc mov inc adc fwait push pop push sbb mov cmc push jne sbb jmp and sbb sbb or arpl mov imul add jns and dec bound xor add dec outsb je jb outsl arpl fs js push add add push call cmpsl test push icebp push outsb cs stos dec adc into bnd rolb pushf (bad) push test es es sbb cld mov cwtl mov inc inc outsb jb insb jmp aam call xor out xor mov or popa mov test dec sbb cld cwtl aas insl in lods rorb jg xor stos (bad) push pop insb or repnz inc push fs adc xor movsb push ds xchg je sub jbe ds and mov (bad) push sbb scas lds imul jmp xchg std or fdivs inc inc mov push sbb jmp sbb popf lock in adc and pop sub sbb pcmpgtd cmp push lcall lods out add roll or mov shr rcrb movsl sbb dec imul int pop rclb (bad) repz repz es adc push rorl inc push mov add test xchg roll xchg lcall sbb push stos ret stc jno push mov stos in mov insl and in ror dec cmpsb mov ret pop cmp or ret adc test xchg jecxz js adc pop enter test adc and aaa cmp (bad) aas sub inc dec add call loopnew jmp imul loopw lods dec xor repnz cmp mov loope call jmp test push mov daa roll rol adc (bad) imulb inc mov and popa cmp and scas jg jae sub jp (bad) jae and enter inc addr16 popf mov and lods sub push arpl iret mov xor jae xchg push pop into pop jl sbb icebp bound popf inc sub cmp xor cmpsb stc adc push and or ljmp mov and popa xor mov adc xor adc popa or je lahf pusha jae sbb cmp call add in mov cmpsb xor leave jle dec push or add pop call push and lahf repnz in xor leave or pop push and std adc adc sbb adc xchg xchg fistl xchg addr16 adc dec sbb inc rcl jge jno push push lods pop or leave js push popf jns sbb outsl std movsl sbb es dec addb jp adc pop (bad) mov outsl aas push leave fs lcall dec addr16 out stc mov lds (bad) jno sub adc call bnd push mov fldl lret sbb jnp (bad) lods sbb inc vrcpps xchg xchg jns jno dec call jmp inc push inc mov dec sbb ret (bad) and xlat pop push repnz cmpsl rcrb and pop adc daa lcall jae sub dec mov (bad) pop xlat out inc xchg mov cmp push cmp mov pop movb cmp adc add mov xor sbb mov pop iret addr16 fiaddl out and push inc or push jecxz aad leave loope inc mov cmp dec or out dec add shrl sahf sahf int push mov xor cmp fstpl sbb inc push jg out imul pop mov icebp loope repz out inc lods dec sarb xchg aam ret push or popf xor inc sarl and mov adc push in fadd lods jecxz cmc push (bad) sub mulb mov push repz daa pop daa loopne (bad) mov sar cld jae pop stos xor cwtl in mov sub stc mov pusha sahf out pop inc mov jp lock rcr cmp mov mov pop scas shlb decb inc insb xchg out divl push data16 mov pop dec jnp sbb xchg lods or dec sbb ljmp fdivrs les int movb xlat mov test add lea ja bt pusha stc imul cmp push stc add pusha mov pushf lea jmp hlt cmc ss inc push mov out and ja mov daa scas jg ja repz aas cmc into mov inc push push test adc or mov fcoml sub cmp dec and xor ficoml sub fs lret lods mov test int3 sbb insb xorl mov xor dec fcompl xor inc negl imul addr16 adc mov scas ret movsb push mov push push add lods lret in mov inc int3 (bad) aad rcrb push (bad) jo call movaps lods jno mov (bad) sbb lea jne call call pusha movl call dec stos jae adc push mov add xchg push movsb sbb into movsb add sbb and out pop mov add push and pusha int3 jae outsb inc lcall cltd cmp and or dec idivb mov cld pop sarl sub std cmp mov stos rcll in les cli sub insl fidivrl imul gs pop jns and aad cmpsb daa (bad) push dec mov xchg (bad) addr16 loopne jecxz mov pop jo inc inc mov inc mov inc adc lods jp mov test sbb cld push stc xor test bt cmp push sub test pushl pusha not test call repnz cmpsb sub mov sbb inc je cmpsb pop stos xorb fiaddl (bad) xor and xchg cmpsb ja sahf mov loop test adcl jge subl jnp jae mov iret xchg sub push idivb add test push shrl or movsl out (bad) jb call das in push pop insl aas lds loop lret and mov pop adc in test rorb or xchg dec ljmp scas xchg sub pop mov aas out rol sbb data16 adc outsl int clc imul inc fsubrs int3 aaa cmp cmp add je outsl fs gs imul add inc push mov fsubs in add xor inc test lock (bad) cmp mov aam dec jnp fwait xor jecxz push pop mov or pop dec stos or icebp push xchg pop ret xchg mov mov out cs cmp add iret pop into mov fldt or test inc push push lock ja (bad) sbb addl dec push xlat inc mov les dec mov fstps xor scas in xor lea cmp jne dec lods fs jmp pop add imul xchg fnstenv cmc adc call inc push imul pop outsb mov add and fs in and xchg stos dec pop sub das or mov in iret sbb cli or cmp mov out sbb aam sbb bound es ret push cmovne mov call adc ja sahf fs xchg aaa mov or xchg (bad) pop adc orl jmp xor shl mov add es pop into mov inc stc dec rol jmp movsb pop and cmp jl in pop xchg addr16 ds adcb push fbld xor inc rclb rcl stos lret jbe add jl adc jae dec lea or sub sbb sub (bad) aad sbb repnz (bad) cmp les xor fstpt pop inc dec dec adcl repz arpl cmp pop fldt push sbb cmpsl stc add cmp mov gs aas jp inc mov scas lea inc cmpsl into push iret (bad) inc cld das inc pop sarb fiaddl sub sbb adcl enter popf cld out xchg std dec mov or add pop aaa rcrl out out popf and xor push lods lods mov mov and fs jae push jmp add dec outsl popa fs imul add push dec aad std aad movsl lds inc fnstcw jnp (bad) stc jmp mov (bad) mov (bad) sbb push dec jbe sbb test or push mov mov lret or fcomps mov sbb rcr cmpsl ja test mov adc pop mov pop mov sbb jns pop cli jae xchg jnp test into notl add loope mov add pusha aad lods pop (bad) xor outsl in in cmp mov xchg jb faddl cmp jp and jecxz sarb fwait outsb (bad) xor cwtl sbb sub stos xorl stos cmpsl (bad) icebp shrb clc mull pop lods cmpsb aaa int3 dec dec sbb aad xchg into sarb add flds cmp ja lahf (bad) out xor test mov mov sub cltd lahf and mov sub add pop sub loope ds inc push or push pop flds sbb clc or add ret dec jp stos cmpsl std outsl jnp or test aaa pop aad std pop daa fnstsw loop (bad) cltd in stos cltd inc cmp mov fldcw add jge mov jg sub jo mov ds adc and cmpsb mov cmp xor jle in mov fmul insl push inc fistl not pushf call jmp nop pop push xlat adc mov jno sbb std sbb in dec fnstcw cmc sbb pop (bad) xchg jecxz mov ss or das ret push cld lock or out iret cmp call jle xor fdivl xchg outsl rorb adc inc test xchg js mov mov cli inc jg lods cld daa rolb jns stc push jns jp popa add jae fcomip cmp adc mov mov jo cmp or push addr16 pop pop (bad) xchg inc test call lea jne aad adc pusha sub movsbw lahf pushf mov add sar pushl add test mov movw stc test movb lea je jmp call stc (bad) mov cmp push mov lods enter jle fisttpll and xor dec (bad) mov ljmp sti adc push sbb pop mov cmp sub jmp fwait incl and and and cmpb (bad) rolb icebp cmp icebp imulb sbb jbe enter fadds push jns,pt aas mov push ja pusha push stos (bad) insb lds xchg cltd loope dec or or fwait jno stos mull (bad) rorb and sbb cmp stc xlat ds jmp mov mov (bad) repnz pop push sub dec mov arpl inc jb add inc push jb pop pop fdivrl pushf pop clc es lret pusha mov push adc fadd mov test js mov xor out mov mov adc lea jg jecxz add and sbb popa adc xchg inc movsb push lret jo stc sub cmpsl js fmull hlt sbb cmp call stc in into xchg jo xor fdivl mov inc (bad) jg dec mov or ljmp lcall and pop xor lea inc cmpsb and sbb push scas xor (bad) jg imul add fildl cwtl mov iret dec mov imul xchg pop push mov cltd sub sbb das ficompl test bnd adc jp adcl mov mov inc mov xchg pop cmp mov mov inc std les push data16 mov jno,pt mov sbb dec js add cmc dec fwait mov popf xchg jmp mov add paddw call push pusha mov pusha mov lea jmp lea ja clc imul pusha bt add pusha push mov movl lea jmp hlt push pop ret push (bad) dec jge sub vmulpd popf test jl repnz inc mov pop and mov dec mov imul in fildll or outsb jle,pn fsts mov mov popf lea jae les es jne adc loop cmp lods out add movsl adc ss in (bad) stc or out cmpsl nop stos xchg push (bad) mov in mov clc push aaa ret sub in imul and xor jg xchg shlb (bad) lret cld fisubr cld and jne bswap movb movzbw not push jmp out or add fmuls int3 xor (bad) xor rdtsc outsl pushf (bad) push mov pushf ret dec cmp or out or aaa int3 mov int3 pop (bad) nop inc movsl sub int into adc fcomps fnclex xor stos jno jns push push jns push in call xchg xchg sub xchg and push in std sub pop or (bad) xchg sub sbb ss inc decl sub push popa (bad) cmpsl add fwait and mov add (bad) or mov xchg add or jo outsb push hlt outsl scas xor test cwtl jne lock add jmp pushf pushf lea jae pushf push movw pushf lea jne call test cmpsl xor inc push movsl ds shl dec (bad) movsb int3 mov in cmp and mov movsl inc push aaa jmp mov or out mov jle fstps pusha mov cmp pop out lods int3 mov inc xor (bad) jae adc inc shrl ljmp fdivl (bad) pusha add out (bad) and mov cltd jnp mov lret pop pop lret cmpsb insb faddp and adc shl or jl scas and fsubrl mov in sbb (bad) fdivrl mov dec sahf sbb shrl adc mov sbb bound mov pop andl out movsb pop daa in xchg xor jne lods mov dec fisubr shlb mov out int aam lea in push jb adc xchg pop pop mov jmp imul mov mov adc sbb jnp cs sbb push je int loop xor test test mov cld js sbb jo xchg jmp push icebp jl sbb (bad) stc pushl test call push shlb out lods int mov pop add sbb pop inc movsl gs mov outsb pop mov push sarl xchg sbb adc mov lret and and mulb test xlat aas lcall lret mov cmc (bad) xchg (bad) adc and lods sub test jnp daa cld push (bad) outsb int (bad) jmp xchg mov mov pusha popf testl mov mov cmp xchg add lods repz mov mov push out inc cmc bt cmp pushl lea ja rcl sub rcr jmp add add mov setne pusha lods mov push pusha push inc sub jle push cmp xor pushf call and mov cld and mov mov addr16 push ja test xchg das sub cmp popa jl repz add jp (bad) mov and mov adc xchg pushf cld add mov xor rcrl jo jmp inc fild mov jne xor mov mov out xlat outsb les pop xchg bound inc aad jns lods jno imul cmc mov inc out jae aas scas stos js sub fstps je fimull xlat push fdivrl adc out inc push shrl inc mov adc xchg adc mov in (bad) cmp push addr16 dec in rcrb sub xor test lret cwtl repz and or inc push jb jmp (bad) std fstpl push lret repz sbb mov mov or out mov (bad) jnp in mov fdivrl imul dec push mov push and push xchg outsb (bad) clc push call adc nop loopne add mov stc add and cmpsl imulb mov inc or cmc xor xchg sar sar xchg mov setp pushf mov call xchg out rcrb inc push (bad) (bad) jae das out stc sub mov mov adc shll int jge fbstp sub ror pop stos mov nop inc (bad) es cmpsl jecxz jl out in jg (bad) ja loope pop psubq dec mov mov lock rcll adc std mov push leave push xorl int3 cmp jns hlt xchg inc outsb xchg xchg (bad) insl out iret rorb ss fcmove int push mov adcl sbb mov lret lret ds mov pop jo jae and push lods pop cmp divl std and cmpsl pop or sub adc jo jae test lods dec int3 inc mov imul dec add in xchg mov add (bad) push int (bad) jge cmp enter adc push negb xlat (bad) push sbb jle ret out ret dec mov cmpsl loopne mov jg repnz pop (bad) loop lcall push mov jno xor pop mov inc bound aas (bad) jge inc imul mov push cmpsb push mov push dec rcr out jge jg movl ror clc imul add fisubl jne push in data16 mov sub addb push scas jo inc pop std jns incb shlb les jno mov inc inc mov jo rcrb cmp pop cmp out push in jo mov mov inc rorb mov jle,pn pop fldlg2 imul mov xchg push jo xchg inc fbstp hlt aaa inc and (bad) adc mov inc clc add jle mulb (bad) test pop mov (bad) pop add or adc dec lret pushfw or add mov jmp jecxz jns or loopne and aas push sahf dec jb lret (bad) ja mov loope inc xor movsl sti add rol out test (bad) pusha adc lock xlat cmpb dec xlat cwtl movsb (bad) add idiv adcl xor jnp ljmp and jle xchg jbe stos jg jmp aad xchg push movsl bound out jne addr16 xchg test (bad) cvttps2pi rorb mov sub push scas lahf (bad) pop lods test inc cmpsb fiaddl rorl cmp inc out or into pusha push jle cmp mov jl ret xchg cltd mov jge mov std data16 nop pop adc xchg stc cmc hlt sarb test stos push push mov cmp in mov cmp push push fisttpll pop dec scas inc (bad) mov mov push in cmc cmc in in mov ja out xchg or and mov pusha or out adc mov test test add icebp push loope sti pop add xchg sub and jbe cmc mov lea btc neg add shr pushf cmp xor mov inc push mov add bsf bsr movl shld test bt mov add bt cmp push jmp mov inc push es mov fnsave mov imul std lahf call mov push shrb out cs add fwait ss add test adc pop cltd and clc mov dec lods sub sub jp test std jb ss push jge push pusha push adc xchg lods (bad) push clc pop data16 (bad) test divb jg inc imul and stos adc mov shl sbb add insl out stc xchg (bad) test and fnstsw xchg lret cmpsb sbb mov add (bad) cmpsb fidivr jmp inc push ds mov sub xchg xor mov pop add or fdivl adc cwtl dec mov cmp movsl aad movl mov or sahf sti je cli mov in mov js sub test dec nop lock (bad) pop scas ja jmp std int3 stos pop movsb pop (bad) in loop in hlt dec add cmpsl loopne cmp dec and aad xor xor adcb inc xlat xchg out sbb sti cmp cmpsl lds xor adc lods (bad) daa xchg jge xchg xchg pusha cmp add pushl stc cmp mov add adc or mov clc test cmp pushf movb jmp outsl scas mov and imull loop mov out lods hlt and push mov pop repnz shl mov repz cmp arpl test sbb scas xchg ja pop mov xor mov mov mov jbe push int3 ret lret pop dec fdivl xor js push pushf (bad) ja and cmp sbb leave repz subl sti not clc stc cld je popfw pushf push pushl push inc pushf pushf adc movb pusha pushl ret ret aaa sbb cli sub inc insb jp and add outsb inc rolb aam js or dec xchg mov bound insl xor popa push pop adc cmp pop lods pop sbb fmull ds ret out xchg in lcall mov inc sbb ss lahf push es loopne cmp dec (bad) cmpb std stos (bad) stc mov xor xor aas faddl arpl aas jle jmp mov icebp or out enter out (bad) push incb ds stos sub add inc push jge sbb and push data16 xor ljmp mov xor (bad) (bad) ss mulb shrb loop adc jno xor or (bad) int3 sbb mov add es bound dec aam inc (bad) xchg push sub testl lret adc sbb mov js scas xchg sbb mov (bad) pushf xlat xchg xor add ds inc int arpl jno sbb sbb in sahf cmp mov xchg mov jns dec jle ljmp iret in jo jmp loop sbb inc jl mov sti dec rorl stos xchg movsl fdivr mov push in inc sub or imul jne pop xchg push repz mov das push adc adc hlt push fidiv addr16 push push push jecxz push add ds (bad) in push mov arpl cmp push ret mov jns aas cmpl dec pop push xor sbb mov insb out dec add mov mov stos cmp xchg mov cmp (bad) xor sub inc push cmp movsl mov and insl in std mov fwait jg push sbb pop (bad) cmp or xor mov aad pushf lods outsl popl xor pop mov sti cltd ja mov ficompl aaa xchg out and int jb pop test add xor mov inc stc test adc decl sbb in xor xchg push dec push in out pushf ljmp lcall es (bad) shrb std push jbe sbb das scas cld adc shl outsl add xchg inc fstl inc sub in mov or jmp mov (bad) push pop mov jp cltd add jle fcoml pop insb fbld repnz mov xchg decl rep not not mov push movb lea jmp pushf mov lea lea pushf mov pusha pushl pushf pushf pushl ret lea je pushf adc push lea jmp jmp jle mov sub lahf xchg inc lds mov daa lahf xchg inc lods add ret (bad) into (bad) loop mov and dec (bad) sbb das xlat das lahf notl adc pop push insl add fcmovbe out cmp mov sub dec sub xchg and inc pop insl imul mov cli outsl or scas cli repnz jmp mov repnz pop mov aam sub out mov outsb cwtl sahf les mov and inc rorb ljmp rep arpl xor imul cmp popl loope xor lock subb iret mov xchg aas rolb outsb push js ret and mov ja cmp sbb pop add into pop imul push in jb repz inc mov bound hlt aad test nop rorb (bad) jbe lret jo xchg insb pop inc leave push fisttp stos arpl popa mov notl jno pop sti and or (bad) mov dec mov rorl inc inc setns mov mov pusha lea call jmp call outsl or push xchg rorb add jne imul pop (bad) fnstcw adc ret jl ret mov mov ret pop sarl jno and xchg lahf cmpsb push adc xor xor cmp cmp stos out dec jl (bad) xor aad sar push jae out jbe pop jmp aaa mov call add js or cltd and aas popf xor dec mov cli test outsb dec imul lret sbb sbb cmp in ret (bad) xchg js cmp lcall pop stos (bad) sub and je cmc stc sub push call lea jb clc bt cmp push call call mov stc jmp loop int das inc push inc sub inc stos cmp inc (bad) out mov insl jnp out mov jns,pn int fldcw push xchg test pop jmp rcrl cmc pop aad decl popf fisttpll adc cli pop mov jo cmp stos jmp repz bound pushf add inc sahf sbb insb mov push xchg inc mov data16 sbb sbb jnp push mov (bad) sub out gs sub xchg pushf xchg data16 test lcall fidivl push push cmp sti in loope jns in (bad) pop stc fldenv push lods cld std in push cmpsb sbb mov mov dec and das jmp imull sub test xor fs xchg cld push outsl stos icebp add dec cmpsb xor cld aas movsl sub jp xchg stc dec pop movsl jmp movsl pop dec jb fsubrs mov loop lods lds fstl mov in xchg mov mov into sbb inc push cmovbe sahf out pushf (bad) aaa stos xchg jl sti ljmp jb (bad) scas lock push clc imul push fxch loope cmpsl rcll imul cltd sbb enter sub stos aam add push pop clc and xor cltd adc push repz insl iret push push cmp popf pop pop xor les mov mov push jge int3 add loop jmp inc scas adc das pop (bad) dec cltd sub (bad) or shrb cwtl push sub stos cmpb pop das insl iret push inc xchg test pop xor add mov mov inc pop mov inc mov out xor sub inc and cwtl andl imul rcr add xchg push shll sub push inc ljmp inc ljmp mov mov in jae adc pop inc scas into mov inc out (bad) test test leave dec push mov dec loope test pop add loopne adc lods outsb adc gs jp mov inc dec fist xlat jge out pop outsb les push jecxz push sub popf fnsave sbb dec jo ret aad mov pop add bnd pop loop cltd or jg outsb inc mov fdivs loop pusha pusha mov movl mov push mov movb movl pushl ret mov movsbl pusha mov lea pusha movl pushl pushf jmp mov pushf push lea jmp cmc shrd cmc stc mov bt pusha clc jmp clc sub bsr push bts movzbw mov lea shrd bts pusha inc mov not cmp dec pushf add bswap sar shr pop ror mov call mov inc push push fcompl mov and adc mov mov test add mov jge std or cmp xor or mov sub popf (bad) or xchg mov test push xor hlt lea mov mov in xchg jae sbb imul lret shrb or cld add insl testl cmp cmpsl jecxz lret push icebp ds loopne mov (bad) mov pop iret inc mov push test popa jl push cmpsb (bad) cmp arpl push aaa sub push mov test adc xchg jmp pop js and inc push jg ljmp (bad) cmp push inc pop mov add push dec stos and faddp jb push cmp dec adc or ja ror xor rorl sbb inc mov movsl hlt lcall repnz (bad) jmp pop subl fisubr lods jne das dec daa fs push aas push fild sahf out or adc das jmp cmpsl xchg xchg cwtl fdivrs imul xor rolb dec inc daa inc sub inc jmp shll lret jp jnp sub pop bound xchg add out push icebp add (bad) ja out idivb push iret data16 push fistp cmp into out mov mov mov inc pushf (bad) (bad) or adc pushf lea call pushf jmp xchg push in pop ret repnz mov adc or out daa int3 xchg out add fistpl sbb adc aaa dec sub jo flds clc xchg enter stc rcll inc mov pusha sahf fisub mov add rclb adc test push (bad) xor (bad) out movl stos in aas hlt xor (bad) enter and push push pushf jns and fcomps mov dec ljmp enter cltd push jmp jl sub push add ror mov icebp xlat aas ret push cmpsl (bad) or out popf jge or pop xor and test pop inc inc outsl mov mov add sub pop out pop roll sbbb adc pop jb loopne xchg cli jmp lcall cli (bad) push cwtl arpl push push fcmovnb sbb xchg cld adc jae cmp cmp clc jb push dec and add cmp add push sti cs ljmp cltd scas jecxz cmp add mov pop pusha sbb or xor mov sub lock addr16 pop or mov jle test xchg mov jle fsubs mov jge aaa cmp pop mov inc push aam mov outsb sub sub icebp leave lret xchg add icebp mov fstl imul dec push dec inc iret push insl imul bound (bad) xor movb cli jae mov xor (bad) and inc mov cli into jae sub jmp (bad) imul cmp lret add das out inc mov dec pusha mov inc in push mov pop sti or jle jp lahf cs push inc jno push xchg sub in cmc dec and add xchg inc push adc push and push sbb dec mov sub mov adc lret loop dec scas sub iret mov scas xchg sbb mov xor cmpsb jnp adc cwtl cmc inc dec inc dec in pop inc mov mov rol stos psubusw jl and push mov mov push sbb cwtl mov xor jg and jnp cli std imul inc aad lock ds fstpl cld jo pop xchg decb sahf arpl jmp jecxz stc inc push orl (bad) pusha lcall scas and pop ja mov cli xchg popa add lds jns sbb jl ret mov jno inc imul sub add decl add pusha clc call and or movb jmp lea jae bt cmc cmp call mov inc push mov xchg loope pop sbb push add ficompl out inc lret clc les jo ds scas mov lcall jb mov aad cmpsl loope ljmp aad jnp movsb inc bound push pop mov or pop add lods mov rcr jb jno or mov mov dec popa xchg cli dec fsub inc dec das (bad) std sub clc xchg mov dec (bad) jmp outsl test cwtl pop sbb or test pop lret cli mov push pop jmp push leave fsubs (bad) in repz xchg mov iret and ljmp sub dec pop sub imul das jl add popa insb inc insb insb outsl arpl lea push call xor push or jbe in shrb pushf outsb pop xor push pop cmp jo inc bound fld sbb mov rorb jns jbe xchg inc clc or inc mov cmp dec dec cld (bad) mov mov loop sub lret fwait rcrl xchg rol (bad) ja test bound push adc add mov xor fs cmp mov push fwait (bad) js lock adc xchg mov aaa xor and inc pop pop lods sub shll ds push fcomip sub stc stc sub inc leave push (bad) (bad) rdmsr inc push push cmp mov jbe sbb test inc jo push dec mov sbb pop sbb (bad) push jmp mov jp cs pop fwait loop add or sub xchg ljmp xor mov jp and sbb dec sahf pop lock mov xor mov into jecxz pop sub pop inc add in ja dec cmp jno loop fcmovu (bad) jne sbb jno (bad) stc adc jae xor mov or push fistpl mov (bad) jbe add push (bad) or or lods ficoml inc (bad) add daa jge lcall inc mov inc adc fisubl pop add push mov jo hlt repnz push adc add xor inc lcall (bad) hlt adc sub pop pop into stos mov loopne mov int (bad) sub nop iret push pusha jg mov ja jno (bad) xor mov lcall sub sbbb jb push mov xlat pushf mov inc jge xchg out fsts push stc sub repnz mov jle lea iret (bad) dec ret ret adc or or test test add add inc and xchg jns jne gs stos dec push xchg out sbb test push jne mov out cmpsb dec xchg imul inc movsl sub jb dec loop sbb xchg loop lods outsl into cmp in and ss sarl xchg aas jb sub xor (bad) iret mov call pop scas es jb test fldl bound sbb or xchg fnstsw mov pushf jmp add cmpl fsubl jno outsl ja push subl sbbl lcall dec mov (bad) xchg xchg push jns in jno dec popa mov sub mov lea repnz lods fdivrl call push int3 sub push es push js push adc insl popa addr16 insb insb add inc dec dec xor cs insb add ds cmp push inc enter hlt es push fmull jp fidivrl push mov call inc cmp xor dec jnp sbbb ret adc cli scas shrb std dec lods xchg pop mov pop mov movsl inc das mov mov inc leave sbb sub pop sub in andl jp mov inc (bad) mov push or jbe cmp sahf scas shrl out xchg cmp adc iret mov mov sahf cwtl cmpsb dec cld cld imul push mov jl insl lahf out or adc dec out daa mov in pop roll pop cmp xor clc not call adc pushf mov movb lea jmp not add mov mov call pop mov pusha movsbl mov jmp call jmp push sub call sbb dec cmp inc push dec call lcall push (bad) je add xchg (bad) jae sbb imul (bad) std (bad) (bad) (bad) data16 add movsb gs out lock or inc mov or cs mov (bad) sbb lcall xchg cltd fistp mov xchg rcll or inc cwtl aaa addr16 rcrb aam jns xchg aad adc in xchg mov mov mov add fwait push jecxz out add cpuid sub mov jmp scas stos repnz flds fs xchg insl (bad) pop and ds push outsb push sbb (bad) adc movsb push fs rolb cld xor xchg or (bad) mov pop sbb test jns jmp repz int3 push aad xchg out (bad) fucomp inc inc fwait test fisubrl les ret push fucomi xor fadd mov jl lret shrb dec lods xor sbb negb or je call shlb (bad) and inc sbbl sbb aad (bad) mov xchg lods pop das jp aam out movsb jnp int3 in fcomp js ss sub cvtdq2ps mov jp,pt pop out pop mov loop ret stos xlat pop mov cmpsb lds dec cld pushf lea jae call lea ja dec dec inc call pusha pushf mov pushf lea jmp pop aaa inc lcall (bad) xor sub mov sbb (bad) sub hlt enter clc jle out cmp lods cltd (bad) and daa jns dec std xor imul (bad) mov pop sbb dec pop nop mov jmp mov mov lods loop xor and add xchg cmp popf cli cmp insl mov push addr16 sbb xor jp push mov (bad) ss fcmovb xor test jne mov mov incb (bad) jno jno pop scas sbb arpl pusha sbbl in fdiv or int (bad) lret cmp imul cmp jle adc (bad) add mov push push mov jmp mov aad sti fnstsw fimul in js insb jno and (bad) mov out outsl dec push mov push or cltd (bad) jo (bad) mov leave cltd mov pop sub add data16 mov movsb leave sub out jp (bad) cltd (bad) jbe or call push leave out mov xchg enter mov (bad) (bad) and pmaddwd test lret pop in insb nop inc or clc xchg xchg mov dec inc rclb fs je push pushf bt cmp jmp jg mov pusha cmpb mov jmp push push pusha adc pushf movb pushl ret call call push adc int3 cmp pop movsl mov mov mov lcall rorb arpl je les cmp pop mov mov call cwtl mov icebp xlat mov addr16 sub in lock jbe push cmp mov or cmc inc push jns outsb cli cmpsl mov data16 jo mov ds lds or dec lret or daa ljmp enter stos adc cmc adc out pop jmp bound pop jae addb inc push in repnz shrb dec scas daa out scas jmp xor sti cmp push pop and jnp call add jp lret daa push push test aas hlt lahf addr16 cmpsl pop xor ljmp lret js cmc js inc pop stos inc push mov sti fistp cmp mov negl idiv add scas push int enter es cmpl iret inc and cmp xor inc iret ret inc mov sub fcoms ds imul (bad) popa sbb or mull out out loope xor out sbb les xchg push cmp dec jno loop cmp pop sbb sbb jo push jp pop mov int3 or mov das push pop lret int and jl pop stc stc repnz mov flds jne in mov cmc aas mov mov xchg mov ss adc push ss dec push adc mov xchg xchg push jmp in ret sub test xor mov fcoms stos jo daa out scas icebp sub ljmp push cs sbb cli xor les (bad) cmp push ret cmp xlat push sahf or sbb sub mov jecxz fistl cmp rorb test add mov push sub dec sbb pop xchg lods aam out sbb adc sub rorl cmp cmpsb sub or ds out inc outsb jg fs push scas stc xor test or adc scas cmp lret jmp mov cmp shrd mov mov xchg xchg or test aam sbb and addb mov inc push and cmpsb xchg hlt push nop ss jo cld push and cld (bad) je fmuls out stc and and movsl lret fs mov xchg mov adc testb testb mov xor fisttpll pop outsb pop cltd mov push xor test js mov dec das sahf xor lods jno xor jle std adc push jmp cmc cmc out js dec xor lret xchg xchg push push lods add xor add xchg inc mov xor leave ljmp pusha mov scas sub mov add popa fldcw arpl fisub (bad) faddl fnstcw mov dec push push arpl das das das test dec add addr16 stc test dec (bad) fstpl dec std dec push and and js sub mov lds inc add pop lret push ficom int3 sub fsubs add stos (bad) xor (bad) lock mov mov push pushf xchg lahf adc mov aaa cmpsl adc mov dec ja iret mov movb sarl out test add rclb dec jp jmp sahf sbb push mov mov mov add dec push lahf pop cmc dec lea mov icebp leave sbb popa dec pop mov xchg stos (bad) sysexit sbb lcall cmc xchg aam inc push pusha int3 xchg fstpl pusha jmp movsb lret inc movsl push inc cs nop jo adc stc push out xor push into in inc mov shlb in inc jb incl gs or xlat aas pop aad lea ss mov inc sub and cmp repz pop ret das mov pop pusha jle mov push fistpl jno dec fildl push or or iret xchg sbb jmp and pushf sbb xor stc test mov cmp mov repnz (bad) cmp mov pushf call mov inc push imul rclb cmpsb xchg or call jp ret mov cmp cmpsl mov push sarl dec cmp xchg lds sub and aas insb pop pop jecxz in mov loope xchg cwtl lock mov movsb xchg mov rcrl dec or cmp sub dec rolb sahf mov and sub pushf xlat jge and cs xor mov pusha pusha mov add cmp fnsave (bad) adc push push dec mov dec jg mov push andl imul adc lret sbb nop sub push and jl cmp ljmp ret lret aam fisubl pop clc addr16 je loope lret cld sub mov cwtl cltd (bad) mov insl fwait popa pop stc add cmp (bad) mov pop out push fimull add jg mov mov mov dec insl repnz outsb xchg add aam xlat add mov or cmp lret and push sbb movsbw pusha bswap mov lea jmp push stc movw mov pushl test add cmp stc cmp stc test jmp xor arpl jnp popa mov cmp dec lds jae xor stc stc add data16 adcl jae mov mov addr16 sub jae clc adc aas pop cmc outsl flds lods fcoml inc cld jb std push pop nop sbb cmc dec inc mov fisttp mov pop cmpsb and roll jg jno out mov xchg dec cmp movsl sbb loope loope icebp clc push or imul xor inc ret jo rclb (bad) pop mov or fdiv add dec dec stos jne hlt dec xchg xchg arpl enter je inc push pusha mov jb test pop js inc loope add jns fs cmpsb mov xchg call into scas sub mov ret dec pop mov dec push mov sahf dec imulb xlat leave mov dec jle cmpsl into sbb daa mov mov repz fwait xchg add aas dec mov push ret call mov xor loopnew aad cmpsl cmpsl (bad) loope xchg push adc push pop fisttpl jne mov sub movsb mov pop lret jle sbb mov repnz test rcr dec test jo and inc fimull push inc inc push inc push sub gs or jp jle nop bound es push mov add cmpsb (bad) scas jle movsl loopne jns daa cli xchg test inc push sbb xor add push icebp sahf inc iret scas cltd xchg mov data16 icebp std ret fwait and cmp roll ficompl inc loop pop scas push add (bad) or (bad) jno pop jae gs fnstsw cmpsb mov or sub pop adc inc inc push push int3 pop cwtl push sub out lcall push pop xchg mov es or push mov sbb movb xchg pop in repz dec (bad) repnz and shr and std jb mov pop fwait and xor pop sbb sbb roll stos pop in jbe shlb testb mov add int3 bound xchg add movsl jmp add xchg cld inc scas repz test sbb pop or mov add cmpsl adc lret mov jb lret jp push mov sub xor aas lret jae popa test inc out xor dec stc inc add shl dec dec pop stc push xor xchg cmp aas scas in call inc push xchg dec push (bad) fs mov xor add xor in push addr16 inc xor xchg negb pop test cmp loopne mov add fcomi sub cmp mov xor rep scas mov inc adcl xchg jg mov test fucomi pop test jg sarb icebp xchg dec test xor mov xchg cltd or pcmpeqd movsl sbb hlt mov (bad) ja imul and mov aaa pop mov adc sub xor add jae loope xchg stos insl mov out jae mov adc popf xchg cmp sub out pop xchg subl mov mov test cmp or mov adc out push (bad) pop imul adc dec and sbb sbb add pop cmpsb adc repz ja pop lret cs loop push sbb fdiv push repz insb adc lcall icebp xor mov lods push cmp mov push cld jge js stos adc inc imul jl mov mov shrl orl (bad) (bad) lods jno gs mov mov ret (bad) and mov or rep into jno repz or jp out inc dec xchg daa sahf jne leave mov dec or adc xor and ja push inc stc loopne xchg fs pop xor movsb sbb ret pop lods or fnstenv cld push loope imul lcall adc dec enter data16 enter fsubrl dec jbe cmpsl and loop movb aad ja cmpsb xchg add push lahf dec pop mov xlat and daa adc pop jno hlt loope mov or ret lret sub push ja in mov mov lods pop fnsave push addr16 push mov bound sbb mov pop xor mov push jbe fcmovu dec das stos ret jb leave cmp mov scas adc add test pop aad cmpsl mov and loop lret sub int3 sub sbb mov arpl pop adc mov neg and jge sahf dec in dec cltd sbb xor adcl jp shufps dec or cli (bad) jb icebp sbb cwtl imul cs mov test mov stos mov ljmp mov jmp dec fnstenv pop xchg pop push pop push fnstenv adc out xlat xlat vunpckhpd test dec push pop cld adc in pop out push in jno cmp mov incb imull or and loop inc (bad) jb (bad) imul subl vmovaps cmp jmp or xchg mov cmc cmp outsb (bad) lods jb data16 jbe sbb xor sbb scas pop push push les xchg and fidivl xor outsb rcrl ljmp or xor push push inc (bad) push mov xchg push loope jl push xor sahf test sub sub adc dec mov dec data16 movsl enter xor pop jb xchg lcall push lods outsl loopne sbb int (bad) repz (bad) lahf push cs lcall sbb and xor pop dec inc push add jnp pop aas shll (bad) pop (bad) pop fisttp das out xchg mov jmp mov rorb xchg fnstsw test loopne jge mov and and push mov or mov stos or fstpt lock ror cmp pop sbb lds lods dec jae jge nop jb fadds test cmp mov pop mov pop (bad) xor pop in jl leave dec mov and cmp lods call pusha pop lds inc (bad) dec adc push pop sbb enter xor mov xor mov xchg fiadd or cmp jmp jmp call lea lahf call push sbb inc dec inc push lods mov int pop scas pop add mov xor cmp and andl (bad) jle aam xchg jb cs (bad) into xchg gs lret jo jecxz xlat pop fist adc loopne jmp loopne adc movsl push cs push cwtl pop pop jmp pop (bad) cmc pop (bad) bound mov push dec jecxz gs lock cmp in dec sarb fs cmp in mov xor out notl dec nop icebp call jnp xor lahf push ss mov dec scas (bad) (bad) mov adc movsb lock out addr16 fadds jge mov out shrl xchg sub dec jg add add cmpsl lock test add cmp (bad) sub lret hlt pushf sbb pushf xchg mov daa mov inc push pop inc add mov movsl mov dec lock loope fimull jae in mov mov pop pop xchg pop mov mov push lods outsb add xchg insb adc bound fsubrs in outsl cltd mov adc dec jo jmp lret push push mov xchg jp mov jge mov jne (bad) stos cli inc mov dec lods sbb and stc insb cwtl dec adc lea adc shrb cli add lods jns inc push out in lret inc fdivl subb stos jg push cmpsl inc (bad) push inc jno xor loopne mov or loopne je icebp and fiadd mov divl aam and adc jecxz int xor push dec sub mov sub push inc cmp push mov (bad) jg add divl push clc push cmp punpckldq sbb add rol xor and out xchg pop adc adc xor addr16 xor mov aaa gs push dec dec push inc push dec cs insb add dec push rorl push mov sub daa cmp dec fldl decl es flds es mov das in lock push arpl scas pop (bad) cmpsl xlat das sti repz outsl das jne push xchg xor outsl xchg adc rclb clc push lds mov das aam out in cwtl (bad) imul sti cmp loop mov sahf mov (bad) lods push clc pop pop jb outsb add pop mov and jg add jno sahf cmpsb imul lcall dec sbb sbb stos lret lods and mov popa lret and aad icebp xor addr16 dec jae mov mov movsl mov sti inc movsb jbe inc xor cwtl xchg in ds or (bad) xor inc insl hlt mov test lods roll mov xchg popa fldl cmp (bad) lret outsb scas (bad) xchg jo aam lods (bad) (bad) mov addr16 fimull test stos push xor xor adc and clc insl mov testb shrb test cltd gs mov sub iret mov ljmp inc mov push adc test sub test insl and push test in inc sub daa out je add (bad) rolb jne pop (bad) daa int3 pop loop dec or movsb mov adc push dec xor cmp xchg mov lret imul jp or add mov and rclb mov lcall jnp cwtl jmp cld adc lcall cmpsl mov addr16 xor pop mov jge shlb sbb icebp cli mov inc push xchg and mov bound scas insb mov mov xor int3 sbb jns mov mov cmpsl ja inc xchg mov push idivb call (bad) push mov stos adc mov mov test in (bad) loopne pusha push inc push je aad jmp cmpsb les aam call mov xchg mov adc or fiadd inc jle stos jns imul lret insb call dec adc test sub push icebp es in ja mov das jne rolb mov xchg jnp adc loope or mov hlt jae and push sbb aaa (bad) cmp adc cltd (bad) or add mov lret xchg (bad) daa mov sub add and loopne andb pop into popf cmpsl cmp pop lea rclb sub cmpsb dec push cmp test xor sub stos sub enter sbb aas test add inc iret pop pop jl cmc sub and in push inc mov xor adc cmp or rcll das adc jbe lock add dec cmp cmp or loope arpl ds ds std push push es in adc push lods sub or mov jae or lea jae test push test movw cmp mov jmp lds sbb push (bad) mov mov enter mov std xchg lds call push jns cmp fucomp add test dec dec (bad) jnp push xchg pushf mov mov inc push add jno mov hlt jae xor or jns aas sbb sarb (bad) js sub call pop pop jp cs mov sub push outsb leave hlt fdivrs nop in jmp hlt inc das sti pusha sub sbb fwait sub daa sahf inc lock push push (bad) pop fwait cmp loopne mov dec cmp popa xchg in dec out (bad) int fpatan pop xlat mov cs xchg out push inc push cmp scas arpl scas outsl scas jae imul aaa xchg (bad) xchg test cmpsb pop popa lods (bad) push add cmp mov (bad) push test pop out ja sub loope movsl nop dec (bad) adc cmp je jge lds adc push les jns fistp dec jmp cltd mov mov adc add cmpsl adc test popf jecxz in dec (bad) gs sub and cld repnz mov fidiv adc mov outsb xchg repz mov jmp inc stos cmp lea lea je call sub adc lahf hlt and pushf add out add cmc add xchg adc xchg (bad) shl inc jae xor push mov push mov movntq and out (bad) rorl dec (bad) inc dec repnz (bad) lcall pop popw push popa repz pop gs cmp int sbb pop cmpsl mov jmp xchg push xchg xchg mov and push mov adc aaa in xor stc bound mov or sarb in xor cmpsl loope in lods ror push (bad) js outsb pop repz jge adc xchg push adc repz subl int pop xor mov (bad) mov fmuls push push jo cmpsb fnstenv stc idivl lahf outsl lret and mov stos dec or cmp aaa push fisttp aad jnp mov xchg lcall call out ds pop out (bad) mov pop fiadd push (bad) into sub push test or std inc test gs pop push lock or leave pop call xchg xchg xchg cli xor pop rolb dec popa jle fwait lea sbb pusha scas pop lock test pusha sub pusha push lea call push pusha call lea ja xchg pop bswap jmp call cmp jmp adc push pusha aad call stos je enter dec push stos js inc inc push cld mov hlt xchg push popa jp int3 fwait add and inc loope cmp adc stos mov pop je test imul ljmp or (bad) sbb aas cmp popf xchg lret lock out cltd fsubrp pop adc ficom add imul cmp push dec mov jb cmp dec call clc inc in dec sti sahf aad xor sub fs pop push inc push lret push sahf aam inc movsb and add jp out xchg test in cmp push mov mov sbb sub mov push test scas adc outsl mov out push sub mov jbe das or sbb sbb orl leave aam pop gs sti add out out mov add (bad) push mov loopne cli fidivl adc (bad) lock scas (bad) lock jg xor adc icebp add dec loop rcrl outsl lret int3 xchg add ret sbb inc mov fbstp das xlat lea jbe ror shr jmp pushl popl call shr mov push clc call loop cmp mov ds fs bound sbb in inc sbb scas shrb add pminub aaa and and enter cmpl cmpsl sbb and addr16 push push lea fs inc movsb inc and sub pop cmpsl add (bad) sbb push pop sbb popa pop cmp orl and push lea js cmp orb mov xchg dec jne movsb mov mov jmp jp test gs mov movsb aas pop int3 ja and dec imul cmp push hlt cli pop enter mov inc jne push ja push adc insl pop cmp jge pop adc and xor arpl jbe pop push sbb jle inc dec xchg (bad) push lds loopne pop cmp das add cltd cmp dec adc jmp add push je inc insl jo dec inc add and pop inc push dec (bad) sub add fmull sbb aas lret sar jmp jb imul (bad) in in inc dec xchg push or cld lcall jg pop mov out in (bad) push out adc pop es cmp in sub push out dec add decl and adc mov mov xchg fucomp mov repnz or lahf pop pop inc push inc sub out pop insl or pop xlat cltd or push mov test mov xchg mov test push xorl out pop fwait push movsl and sub mov test push das ss push loopne les ja bnd out mov outsl negl mov inc add mov sahf inc or mov outsl insl pop mov sub xchg mov fwait mov cmp inc mov (bad) out jmp mov jae lds aas mov or dec lahf mov loopne (bad) push dec ret inc mov xor or movsbw btr mov jmp pushf stc movzwl add shld clc sub ror mov jno add pusha clc jmp inc cmc xchg or aad mov pusha mov bt mov bts mov jmp mov inc push jns xor repz iret loope fldl or icebp dec mov lcall mov aam popa ret jb jb mov lods mov pop xor clc stc inc cmp ss or dec jns cwtl rorl popa test out jg fwait outsl into push iret pop jecxz pusha sbb adc cmp popf jle jecxz (bad) xchg (bad) in lods aam (bad) mulb jns push sbb pop loop push fs cmp jge mov in xchg repz call jbe fdivrs fadd rclb test roll and mov jno mov sub xchg daa fstpt push mov ljmp cwtl push pop cmc lock push and out inc scas pop inc mov adc shrb or add and mov pop xchg mov jp pop aaa aaa out xchg incb mov inc (bad) mov sbb add (bad) jno jb cmp cltd cmpsl movsb pop push add sbb jecxz pusha cmc xor lea push pusha inc lea call and clc pushf add sub call insb js cmp push addr16 sbb into cld les int3 push nop ss out mov xor xchg cmp pop sbb jno adc xor xchg subl jns sbb sub lcall inc loope loop push cs sbb test outsl pop push fcmovnbe mov mov mov sub pop push or lret sbb push push jne jns pop sbb in outsl add loop rolb fimul jae push std insb pop ret jge sarb ljmp inc popf pop inc push ret mov cltd imul (bad) (bad) pop xor push adc lock les fwait push push jmp jb out push fldcw add loop xchg aas mov popa fisttpll jecxz xor clc fcomps and cld decb sub js fcomp dec sarl xor iret rorb pop aaa mov data16 sub jp repz movsb cwtl push clc cmpsb (bad) xchg or mov adc pop fadds mov push cmpb inc push in jp adc aas testl and imul popf sti pop mov call sbb (bad) cmc pushaw jnp jns mov shll fnsave ds sarb mov adc insl lcall mov and gs insl fsubr push pushf jp out jns mov or or jbe push cltd in dec mov mov addr16 inc adc lods xchg popa (bad) add arpl stos out es mov repnz and stos sub cmp pop in xor (bad) dec popa xchg daa ficom lock test cmpsl sub rcrl push mov subl cltd test sarl mov loopne and push mov jecxz int testl cmp add dec lret sarb (bad) pop mov xor xchg aas xchg add loope mov adcb cmp mov in jmp es mov inc or cmp mov cld jbe cld mov mov sbb fildll loop fldenv and adc pop or fsubl adc push jmp add inc jb popa je inc outsb jbe jb outsb insl outsb je insb outsl arpl imul pop dec fmull push mov adc xchg movsb loop ljmp mulb sbbb rcll fdivs enter push daa lds jo pop movb movsl pop cmp movsb icebp rcrl inc lret bound xor add sahf jge jmp call cmp sbbl (bad) mov dec shl mov lcall mov jo test xchg std sbb scas scas outsl enter cwtl mov push pusha xchg xchg out inc sub imul rorb sub push stos push movb lea jmp pushl jmp and xchg (bad) lock push xchg push shrd setl mov pushf mov shr xor mov cmp sub lea pusha lods mov inc inc neg ror shr xor rcl rcl sar mov sub not ror adc not adc neg xor not bt pushf call pusha jmp lea jae pusha cmp test cmp movb jmp inc sahf dec lret pop inc push xchg lcall jg outsl adc (bad) lods push aas outsl mov repz cltd rolb mov xor gs sbb les testl imul pushf pop mov into sarl ret (bad) jnp jae es push xchg cmp push dec jno mov adc xor dec cmp test insl clc push sbb add and jp xor pusha dec out mov adc mov jl mov add inc js je jb arpl jae pusha inc not xchg inc lahf sub mov pushl jmp dec sub mov inc push mov sub andb jne (bad) xchg fimull mov dec sub xlat xor adcb mov or leave push orl insb and popf sbb sub sbb cltd gs jp pop fs jae xchg insl scas sbb pop arpl sbb (bad) sbb jl bound or inc lock and adc fisubl dec insb int3 out cwtl lahf sub sub push add cmp jle in mov dec or mov into push mov xchg sbb pop lret push xchg and mov pop out lods insl xor arpl jp xchg testb xchg int3 sti xchg push test push and sub icebp sub adc mov sbb mov lds fcmovnbe pop and jo nop or in mov (bad) addr16 int3 mov daa xchg adc pusha xor call enter lea (bad) jg push insl mov xchg jae pusha xchg jecxz mov pop fcmovne push in push jle (bad) dec ljmp add aad push popf jb int3 fnstcw xchg mov (bad) or daa gs call loopne jmp fcompl xor loop outsl out mov jae mov jb cmp pop scas cmp mov inc push push cmp aam lret (bad) scas fisubrl jmp xchg cltd loope out stc insl popa loope jno lcall pop inc bound and ljmp xor add iret push mov fwait daa pushf cmp pop push sub mov fcmovne cmpsl ja gs scas push lods push insl aaa outsl add jbe rorl dec test (bad) clc push push (bad) ss les sbb mov and ss adc daa xor xchg lock out xor push and xchg hlt loopne adc rcl negl and jecxz add add jae pusha fistpl lea jae jmp lea jne lea adc call inc inc dec xor cs insb add in jb inc push sub js in and test inc xchg pop es pop enter (bad) fmulp loopne lock mov bound dec out ljmp xor idivb lret jbe push ds insl push test fldt sub cs (bad) loop (bad) and push fist pop cmp jl data16 jl mov jo sub movsl popa jge mov jl in ja adc daa dec int3 or movsl lds aas lods and in push xlat jne adc jae adc pop mov fist inc xchg push lods clc stc push not pusha call mov inc push xchg std sbb sub inc leave sbb adcb rcll push mov aad cmp jne cwtl jle (bad) aad ficoml and cmp fs mov inc lret iret jnp pop fisttp or mov stc inc xchg add icebp pushf jle test insl sub adc mov int3 imul stc cmp hlt into cmp sbb ret pop xor cmpsb xor sbb les out xor pop fwait mov dec enter ret inc ljmp sbb lret shrb notl push lcall inc outsb jae jb add inc push pop or inc test xor xchg ds (bad) cmp jb pop sahf fs incb xchg daa je psubq (bad) xor cmpsb (bad) or mov dec les jo (bad) or mov pushf ja dec mov inc pusha xchg imul jnp mov adc stos aam cs mov call lock insl out cltd test adc dec jb out adc ds movntq out (bad) jae std hlt adc mov jge fucomip lods inc mov push pop cmpl push pop test (bad) (bad) inc adc push dec cmc mov ja push and jno sub (bad) fs out cs fucomp xor std jl and int3 jle inc sub scas xlat ds xor sbbb in sbb inc or sub inc sub test mov push cmp out mov lock cmp mov fidiv mov and daa mov jp int jae xchg ja adc xchg cld or imul sbbl shlb adc xchg jmp jp sbb pop xlat jb sub jbe imul mov push daa lea call bt cmp pushf call xchg test bound roll ja jmp xlat pop add lret in mov push pop pop gs mov push xor cmc add mov movsb pushf fs rcll int3 adc lds pop daa out fistp clc outsl subl mov js add ja add cmpsb movb add sub mov stos fidivrl lods das xchg ss xchg ds mov aaa xchg aaa add pop push sub (bad) pop lea sub adc imul jl aas xchg (bad) insl sahf mov push loop ja dec or adc xor or mov stc cmc popf jns sub push cmpsl jg dec pop (bad) cmp test jl or inc dec pop push sbb dec xlat je pushf sahf add mov jnp fisub push dec fist gs popa mov sbb xor mov push inc arpl fdivl adc cli mov out jnp mov inc xchg mov incl nop fdivl pop lods enter fdivs in cli jno or jge jbe sbb lea jae pusha pusha mov pushf lea jmp test add jmp jl imul inc push mov xor inc leave sbb or jp into xor test push data16 cli in mov lahf scas push (bad) or sbb movsl aad das rcll pcmpgtb cmp iret lahf sbbb sub and push fidiv mov ja cltd xchg subb pusha sub xorb jge sti imul mov sarl (bad) inc inc repnz out cmc sahf or out mov sbb mov cs mov xchg xchg push loop add cs hlt jb repz push inc push dec xor cs insb add repz push mov loop cli nop loopne push shll pop mov cltd outsb cmp adc stos push into jae mov sbb pop lahf lods lea dec cmpsl mov dec aam jne mov pop pop mov inc (bad) jp ja pushf daa fmull orb pop sarl push add lods and fadds jbe jle hlt sub xor dec pop mov inc mov cmp fidivr inc fildll dec mov jg fsubrl push add jo roll dec (bad) stos (bad) ss loope adc inc add xchg inc fsts (bad) subl (bad) fldenv and int sub push leave sahf in iret mov lahf negl das dec lahf xchg xchg dec hlt aaa cmp xor aam loope aam jmp insb repnz mov aaa mov dec pop pushf (bad) lods cmpsb cmp enter and mov push aad std cmp out push inc mov in or leave call mov dec mov push cmp fs addr16 mov into aam mov aaa jno into xor mov mov fsubrs inc (bad) xor sbb sbb in jnp lret add push dec test mov mov pop pushf cmp pushf jmp push push mov not jmp icebp or ljmp push imul stos imul cmp into cld adc jl add pop aam mov fbld loope mov mov aad mov fmuls and enter (bad) xor (bad) leave fbstp inc pop push xchg inc cmpsl clc mov cli sahf (bad) (bad) mov pop loop dec mov test sbb push ds fwait dec scas inc pop int3 jnp sbb out rcll fadds add mov rclb push ficomp lcall movsb pop cli inc sub add push sbb outsl inc push lret xor cmpsb mov inc push inc nop outsb aam clc loop into in mov mov xor inc shlb add sti mov pop stos mov hlt cli bound push adc inc (bad) sub andl push or nop pop scas or push jmp jecxz into icebp dec insl iret (bad) and lcall xor or cmpsl int3 pop testl pop test loopne adc xchg cwtl or in jg mov adc es cmp lods mov pop inc sub cli pushf mov lea je pushf jmp jo scas jp inc push and mov (bad) imul add cmc cmc inc (bad) (bad) lahf fisttp inc ja xchg hlt mov cmp push lret lcall sbb xor sbb ja jae sbb (bad) push push cmp mov add bound or dec or inc fwait mov cmp dec js adc and repz repnz mov xchg clc add xchg popf orl pop sub dec inc outsl xlat (bad) incl popf jge jp add inc stos sub psrld rcrl adc add out pop insb sahf push mov lock std std mov xchg insb and xor data16 ret jg sub pushf mov pop xchg ss loop pushf in jge mov adc dec inc or aam pop rolb shrl adc test fisub add mov (bad) cmpsb push cmc addr16 cmp inc nop enter roll and movb pushf push pushl ret call sub push pusha mov call add inc gs outsl fs gs imul add dec inc shr out (bad) jmp call fcompl mov je ja push sahf repz aam jns (bad) jb mov mov mov dec push sub movsb dec cs lcall push inc mov inc dec (bad) pop sub push add jge mov daa or pop int3 popl add push jecxz dec xchg and es and js mov cmp test dec pop lods cmpsl cmp ss cwtl pop dec pushf daa xchg and cmp xor jge ss aad (bad) (bad) mov sub adc pop outsl lahf adc cwtl movsb adc mov mov ds pop inc test add adc and jmp sbb jb inc push in cmpsl (bad) pxor pop out (bad) jne imul fstpt push and notb cld inc data16 (bad) xor mov adc cmp subl mov cmp aas mov outsb xchg sti dec imul and loopne inc stos (bad) imul mov jmp inc lcall pop fsubrl dec fstpt sub pusha mov sbb push mov aaa dec add inc leave dec mov sarb aad sub sub ss js or movl (bad) fdiv imul push int3 cld cmp int stos stos andb mov jo ljmp insl into xsha1 cmpsb into je push mov fldenv lret xorl repz dec aaa jp inc mov cmp addr16 insb cmc iret repz xor movsb pop in gs scas les mov out adc aas fdivl mov gs sub test repnz enter popa cmc stos shlb inc mov dec cmp les lds push and xchg adc mov mov rcll pop test addr16 cmp dec (bad) shr (bad) aad lods movsl and out mov sarb shrl mov dec mov test cmpsl shrb in out sbb inc jnp lods cmpsw lods sahf jo out (bad) jae call ret daa aam repnz sub jbe fistl loope repnz lcall jno push ret jge jno cld adc mov mov adc mov mov outsl add adc aas stos mov adc and mov adc jecxz and inc aas stos mov dec imul pop lret aas mov sbb xchg xor mov cmp pcmpgtb xor xchg push fistpl enter add mov xlat mov shll inc mov fimul in movsl mov cld ljmp or ljmp add and jbe lret stos cmp mov icebp cmp fsubrl aaa (bad) (bad) out stos int jg mov inc cmp push lock (bad) push add pop mov or cmp aad mov and sub and pop out inc icebp or inc pop movsl out lret add popf cld mov data16 cmp call out or push in adc or sbb movsb pop das fsubrl xchg push mov or icebp fldt inc sbb movsl mov jns dec lret cmpsb lods jne mov jge mov sbb sbb pop fsubrl xchg cwtl jb negb les pop shll rsm pop xor arpl fbld movsl sbb imul int3 clc pop push mov (bad) push test sti pop add rol mov stc call pop cmpsl mov jg push cmp add dec scas mov out and sub cmp ret and and lret cld inc xlat mov sub push outsb fdivrs xchg hlt push mov fwait sub repz mov or aad int inc jmp dec mov cmp movsb call bt jmp sarl popf push sbb sub cwtl daa clc xchg lods jle loop sahf inc sub sbb fldcw iret in jo in sbb xchg fimull adc out jnp (bad) fwait pop dec fstpt add wrmsr pop (bad) mov jl or xchg fist inc js hlt (bad) mov sbb fwait sub (bad) mov or divl xor mov shrl dec aaa int3 mov lahf add lret adc push dec and movsb adc loopne,pn out inc add icebp and (bad) mov out push mov out icebp xchg rcrl aaa mov cmp je mov into ja push mov jg xor (bad) lock jne mov loope (bad) dec cmc jecxz dec jne test push jp pushf outsb int3 pop lods jo and add fistl leave inc jnp adcb or jle,pn lret inc daa pop fadds cli pop loop jp imul jl and pop xchg insl sbbb cltd lea ja push (bad) jmp inc imul xchg push sahf (bad) mov add (bad) divl jb gs push ds outsb int3 push adc mov mov xor inc push in cltd rcrl sub push mov add push and xchg shl fldt cmp adcl (bad) xor std add (bad) pop fisubrl in stos jp mov in std jne leave push test sarb sub fdivrs in sub jl pop push ds jnp mov or mov pop aam sub mov mov and sarb jne sub jne,pt (bad) and mov pop push pop mov pusha nop aad xlat jl jo push aas jp xchg rcrl or jae inc movsl cmp xchg lods pop xor sub inc fs sbb lret adc jo jecxz push lahf inc push xchg xchg cmp bound jmp dec xchg cmp (bad) popf (bad) je adc mov in adc push cmp mov adc jecxz mov dec mov pop mov sarl outsl outsl push roll out int or sarb and sbb cmp or rorl arpl sub shrl add lea in subl sub jmp out and xchg (bad) xor test stc sub pushf pushl jmp dec sub daa jno push xor pop push fcom cwtl hlt test (bad) lock scas push pop pop jno mov test jns xchg mov sbbl push add adc lods cltd mov jbe xchg lods fstpt xchg adc push lret aad and push xor or xchg shlb jo fsubs sbb mov movsb mov movb aad pop shl xchg xchg push sub leave cmpsb in push dec aas push insb pop adc push in enter cmpsb sub loopne addl lock lock mov or fs jne btr mov mov pusha pusha cmp pushf call lea je setnp add ror and inc sub btc btc shr rcr shr test mov data16 repz lret shld add shr jmp add add xor add stos ss aaa pop aaa mov cmp cmp cmp cmp cmp cmp sub cmc or add add add insb add add xor xor jo iret xor xor xor xor xor xor xor xor xor in aaa pop cmp fwait cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp sbb fidivrl icebp ds or xor cmp imul in aas add add add js add sbb adc das xor sbb xor xor xor pop xor mov xor aaa ss ss ss ss ss ss xchg ss ss aaa cli aaa in cmp cmp cmp cmp cmp cmp cmp cmp scas cmp aad out push ds add add add add push xor xor xor xor xor xor jo fdivl xor xor sbb xchg test xchg icebp cmp cmp cmp cmp add movsb ds push add sub add imul xor xor dec xor test and cmp int cld cmp cmp cmp aas add add add add daa xor xor xor lods ss aaa dec aaa mov repnz loop out cmp cmp cmp adc inc jne,pt mov add add add add je inc xor xor xor xor pushl int3 ss aaa (bad) jp nop cmp cmp cmp cmp cmp push ds lea add add and lcall xor xor xor xor jbe mov or cmp mov cmp cmp mov add nop add pusha add add xorl push xor in xor (bad) fbstp jecxz out jmp out aaa repz divl sti aaa pushl add pop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp lahf cmp cmp cmp cmp cmp cmp cmp aas add add (bad) pop ss movsb ss ss outsl aaa nop aaa lock inc cmp cmp cmp jbe cmp cmp mov mov cmp loopne (bad) cmp jmp aas add aas push mov call add add xor xor xor push xor xor jl sub xor adc xor xor xor xor cld ss aaa insl aaa xchg aaa fwait aaa movsl aaa scas aaa mov mov aaa (bad) aaa jb mov (bad) cmp cmp cmp fdivrs in sub aad push cmp into ds sbb add add add mov xor add and das xor inc xor pop xor je jg test lahf xor pop ss stos or adc push aaa xorl aaa inc cmp cmp cmp cmp cmp cmp cmp cmp mov cmp movsb cmp pushf ds mov ds sarb stc ds aas cmp aas dec aas push aas push aas pop aas pop aas pusha aas stos aas mov mov mov add rolb add add and sub xor xor xor xor xor xor xor xor xor xor xor dec xor push xor cmp sub add add add test add dec cmp push cmp pop cmp cmp insl cmp jne jns jge cmpl lea xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp jnp cmpl cmp std cmp or adc adc sbb sbb and push jo je js jl loop in or (bad) adc sbb sbb cmp aas mov aas lods aas mov mov mov lock add add xor adc adc sbb jae lods xor xor xor xchg xor xor xor and cmp inc aaa dec aaa test mov cmp cmp cmp cmp cmp jns xchg cmp cmp cmp cmp jno aas cmp cmp add add in add add xor xor inc aaa push cmp popa cmp jno jge mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov fidivr in cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov cmp dec ds ds ds ds je,pt jnp (bad) mov nop ds ds cmpsl ds ds ds fnstcw loop in ds adc pop aas inc aas gs push add add add mov add push xor (bad) xor xor xor sub cmp inc xor data16 xchg xchg xor xor xor xor xor xor push xor jbe mov xor aam in ss aaa pop aaa jl cwtl aaa mov cmp cmp jne scas cmp cmp cmp cmp cmp cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp cmp aas push aas add add inc add add xor adc xor xor xor xor xor in cmp cmp push cmp popa cmp or nop aas mov aas add add add mov xor xor push xor xchg xor xor xor xor cltd xor xor xor bound push xorl mov xor xor xor xor xor xor xor jg divl adc and pop aaa mov aaa xor cmp dec cmp and mov sarl push cmp cmp cmp jb mov mov cmp cmp enter cmp lock cmp pop ds or (bad) sbb inc aas push aas jns cmpb aas lods aas mov aas add add add xor xor jno jge cmc xor xor xor xor popa xor xor xor xor xor xor xor xor xor xor xor xor xor mov xor jge (bad) lods ss ss imul aaa jmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp stos cmp ds ds xor add add add les pushf add and xor aaa fs jno jge lea xchg aaa mov aaa loopne repnz add adc cmp cmp cmp cmp mov add fidiv lock xor xor xor (bad) xor lret xor xor xor xor push xor xor xor xor xor test loope std xor mov xchg aaa mov aaa mov fnstcw in pop cmp fstpt out in cmp out adc xor cmp cmp cmp cmp cmp push and dec ds outsl ds ds xor gs cwtl aas lret aas add add add add add xor data16 xor xor adc pop xor xor cmp xor xor xor xor add addb js add or adc xor xor xor xor xor xor xor xor xor xorb xor add or or adc adc sbb cmp inc ss ss ss ss mov lods ss mov mov mov aaa les enter cld aaa add add or or dec cmp cmp cmp add clc add add or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor loopne in call cmp cmp cmp cmp cmp or adc sbb and sub xor cmp inc cmp dec cmp pop cmp fs jo je js jl cmpb cmp cwtl cmp movsb cmp mov mov mov cmp int3 cmp fdivrs in call cmp cld cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ds ds ds ds ds ds add add add (bad) aaa aam fdivs fdivl loopne in call aaa dec cmp pusha cmp cmp mov mov movsb cmp sarb loopne in call cmp cmp sub xor inc cmp cmp push cmp mov sarb cmp cmp cmp cmp cmp cmp adc adc sbb xor inc cmp pop cmp cmp cmpb cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp dec cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc sbb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb and push cmp push cmp mov cmp les lock or or adc sub int3 fdivrs clc ds and xor push aas pop aas jl mov test mov aam loopne add add add add or sub cmp pop xor xor xor xor xor xor xor cmp inc xor xor insb xor xor xor xor xor sbb sub dec xor xor xor xor xor or and sub xor cmp dec xor jo jl pushf xor (bad) xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor xor xor xor xor xor xor xor pop xor mov xor fdivs adc inc ss ss ss ss ss mov ss ss in or adc sub xor dec aaa push aaa jo nop aaa mov (bad) aaa lock adc xor dec cmp jo nop cmp cmp cmp cmp cmp pusha cmp cmp xchg cmp sarb cmp cmp cmp cmp cmp loopne add add add sbb cmp je nop xor add and inc xor jl cwtl xor xor nop aas add add add xor add xor xor pusha xor push ss js jl xorb mov mov nop ss ss ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add or sbb sbb and and sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa lods aaa mov mov mov aaa and xor inc cmp pusha cmp cwtl cmp test xor xor cmp cmp inc cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp or sbb and sub xor cmp pusha cmp sarb cmp fdivrs add add adc add cmpsb xor xor cmp cmp or add cmp dec aaa add add add add (bad) cmp cmp sbb and add add xor into xor xor xor jne sub jne getsec lret cmp sarl stc cmp cmp mov cmp push add add add add push xor mov xor xor jnp (bad) xor xor mov cmp cmp cmp cmp les icebp cmp cmp cs cmp cmp cmp movsl aas add add sub pop xor imul cmp xor xor enter jp test adc insb cmp cmp cmp bound mov jge fstpt xchg cmp ret add add add cmpsl xor xor xor or aam xorl out xor xor sub bound mov cmp mov aad jb cmpsl ds mov add cmp xor daa xor loop jnp (bad) ss aaa xchg aaa (bad) aaa push cmp cmp cmp cmp cmp xchg add add add stc xor popf xor xor xor xor xor xor loope test in xchg cmp cmp in in cmp clc cmp cmp fidivrl dec aas loope add add push add add test xor xor xor xor cld xor mov cmp cmp cmp imul fwait cmp cmp cmp fwait cmp add aas jge scas aas add add dec add add cmp mov xor movsb xor xor xor insb aaa in xor insb cmp (bad) cmp cmp cmp cmp cmp cmp mov aas add add add inc add add xor xor xor xor ss sahf aaa jne cmc cmp jne ret cmp cmp int3 cmp cmp cmp xchg sarb add add add push add add xor xor xor xor or xor scas xor push aaa mov cmp cmp cmp outsl cmp hlt cmp cmp cmp cmp cmc fistpll add add add dec add add xor xor xor outsb xor xor xor dec aaa js mov loopne and in cmp cmp mov cmp cmp pusha cmp cmp cmp gs aas add add inc add add lea or loopne popf xor pusha xor xor xor inc aaa test bound mov cmp cmp cmp cmp cmp sarl aas into aas add add add inc add add xor xor add push xor xor xor jno push aaa xchg aaa data16 cmp jns enter pop ds ss pop aas mov loopne add add add push add add xor xor xor xor xor enter push xor or aad out aaa dec cmp cmp mov into cmp les mov cmp jg mov in aas add add add add xor xor xor cwtl xor push xor xor adc mov cmp sub (bad) cmp xor cmp cmp cmp cmp cld ds stos aas add add add pop xor xor divb outsl xor xor xor xor pushf aaa mov enter pushf cmp mov cmp cmp cmp mov add add and imul into xor xor popf xor test (bad) xor xor xor xor lds fnstenv and push aaa mov or cmp iret cmp cmp cmp cmp jo dec aas add add add add add les inc xor add add hlt xor xor xor xor xchg pushf ss aaa sbb inc cmp cmp cmp scas cmp xchg cmp cmp cmp cmp les cmpsb aas add add push add add xor xor xor xor xor xor xor xor movsl ss aaa xchg mov loope sub mov cmp (bad) cmp cmp cmp cmp jnp adc mov adc push add add xchg xor xor xor xor xor adc inc xor mov xor xor xor xor xor and cmp dec cmp cmp pop cmp cmp cmp cmp cmp add add add push add add xor xor xor divb push xor xor xor xor and sahf ss and pop aaa sahf aaa sbb xor cmp imul stos cmp cmp cmp cmp scas sarl pop aas mov xor dec add add xor xor cmp aaa cmp cmp mov cmp cmp cmp cmp cmp cmp hlt cmp cli mov add add add xor mov xor xor sub dec xor repnz xor pop aaa xchg aaa aas cmp cmp int add and cmp cmp cmp add add add pop xor (bad) xor xor xor xor xor les xor movsl aaa (bad) cmp adc (bad) cmp cmp cmp cmp cmp ds ds aas scas aas leave aas add add add add das xor xor xor xor xor xor xor xor dec aaa scas aaa dec cmp cmp cmp cmp sarb cmp cmp cmp cmp cmp cmp cmp add add add add xor lods xor xor xor xor xor xor xor xor popa adc insl aaa (bad) cmp cmp cmp mov addb add add xor (bad) xor xor movsb xor xor xor xor xor xor xor xor nop aaa pop cmp jo cmp mov add cmp cmp cmp cmp cmp xor add add xor xor xor xor xor xor loop sub cmp inc aaa (bad) aaa inc cmp mov jbe xchg cmp cmp bound pusha ds xor mov sarb mov add push xor in xor xor xor xor xor repnz adc outsl cmp cmp jo xchg cmp cmp cmp cmp cmp cmp or jno movsb aas add add add xor pop xor xor xor xor xor xor fbstp pop xor xor and mov cmp cmp cmp cmp arpl cmp cmp cmp push mov iret ds ds aas movsb aas scas aas add add add sbb add pusha xor xor xor ss add rol inc shr push call lea jne sub das sub xor and xor mov jle add (bad) lock bt not mov test cmc jmp ficoml mov xor push xchg jb sub pusha out data16 sbb jnp outsl xchg xchg inc cli xchg fcomps jmp lods dec cmc or adc and test inc mov cmp cmp or pop cli stos fucom cmp dec mov add je sbb dec pop jge jne mov mov cmp push add (bad) daa (bad) lret push inc inc sub pusha insb push pop or pop cmpsb pusha movsb adc scas mov jno pmaxub cmp leave insb ret push jmp and out adc mov jnp xor roll fs pusha push inc lea xor xchg aad rcl sbb lahf mov sar jmp loop push mov mov fidivrl insb or jge out in or pop out sub push push push (bad) das inc mov xchg cli xor (bad) cmp inc insl cmp adc ret dec dec fildl mov and mov ljmp sub sbb cmc and push sbb inc fidiv mov pop add sub and aam test mov xchg mov into lahf js dec pop pop push xchg push adc push cmpsl mov aad (bad) add sbb lods add inc pop daa push pop out xchg dec cltd pop bound and pusha lahf mov or test (bad) mov xlat inc xchg inc arpl push push jbe xor mov and mov cs js rcr or (bad) push xchg inc push or push inc jmp imul lods test mov incl jmp pop push xor jo cmp int3 xor dec xor dec int bound cs loopne ret adc xlat push out or and dec sbb rorl jne (bad) sbb or into (bad) sub mov fsubrs rcl jbe fcomps jle push adc fist sbb insb add nop xor push pop popa xchg jo fsubl sub jmp aam sahf imul inc movsb movsb inc push mov mov imul aam std out test pusha jmp or mov jmp les push cs mov mov xor cmpl mov push arpl popf mov dec call subl lcall or test pop xchg jns les insb mov pusha or sbb loopne outsb std push sbb add movsl enter cli cmp lods daa mov xor cmp xchg pop rorb sbb ret mov sbb inc push add hlt push hlt mov cmp outsl pop test cmp outsl out fsubrs mov xchg or imul ret jno lret xchg les sub outsb aas stc or mov sbb xchg sti adc or and cmp pushf mov out jno jge das fiaddl add sbb sub dec imul out loopne push daa pushf add inc loope xor out sbb mov jne nop sti adc lret jnp mov loop xor sbb push stos cmp mov call fdivrs movsl push or std xchg inc push mov sub mov pushf data16 xchg mov shlb stos push into push rcrb xchg arpl dec mov mov mov negb mov push cmp pop pop (bad) jnp push xchg sbb popa (bad) pop ret xchg add mov iret push pop jbe mov or aam adc movsb nop outsb push cmp push ret jnp fnstcw mov dec int lret jnp jns sub test mov in nop or insl sbbl mov ret mov into (bad) in daa inc hlt movsl addb or imul ds add jns push ret mov and xchg inc push test aas pop imul mov cmc add in adc jge adc pop add movsl sbb test pop xchg fadds movsb repnz jae mov (bad) xor mov mov inc fdivl pop xchg pop pop inc aas inc mov sub out xor jmp movl add jnp out mov push push or cmp jp adc jne and cmc fs add data16 pop lret or xorl pop in fs push sub sbb mov icebp pop mov mov xor sete add clc sub or or mov clc push bt shr call cmp lret adc mov xchg nopl or leave dec test adc popf cmp bt inc fsubl movsl sbb add inc mov shlb push gs pop and xchg xor add xor js (bad) (bad) jbe fbld popa clc lds ja cmpsb and push pop mov inc xchg pop popa jl stos andb loopne adc cmpsl add loopne push mov lock jecxz jg adc jecxz ljmp sub cmpsb cs fwait xchg and cs aam lods rol xchg (bad) icebp sbb lret lea shr bsf mov sbb cmc mov pushf mov push mov bt xor push not pusha inc cmc test xor jmp pop insb rcll push (bad) sbb jmp int mov or sbb pop or push inc sub movsb rcl push daa mov in pop mov xor in imul mov sti push lods dec (bad) fwait ret aas lea add in jno xchg jl lret mov pushf xchg inc fcompp jo mov mov pop cmp pop lock cmp sub sbb xchg inc push or imul or pop fstps ljmp clc xchg jl out imul adc inc mov popf int popa pop shrl add or lock popf sbbl and gs les jns les pop repz mov ss cli les mov aam popf jno lock lods cwtl iret loope sbb pop jle sbb inc cwtl pop jb (bad) and je pop sub xchg xor js sub ror mov je mov fincstp cld push adc pop adc xlat pop and sbb rcr es and mov int3 imul push popf mov rclb and out stc inc mov pusha hlt imul call mov mov push mov lea jmp aaa mov inc cwtl add cmp mov pushf test clc cmp test push movb jmp lea pusha mov jmp jbe test inc push pmuludq cmp xchg jmp and insl movsl inc pop in mov ret jns adc fidivrl rol add mov jmp es or mov or ret adc inc int sbb push mov push mov push xchg push xor cmp outsb icebp aaa xchg pop xchg push mov sub cmpsb lea shl push pushf and (bad) push pusha add daa inc sub sar inc aad fist mov popa pop scas push cld push fsubrl push sbb xor arpl ja inc (bad) xor inc inc cvttps2pi jl hlt sub stos int aad lcall outsl cs inc popf push sarl ret push cmc pop xchg or push inc push outsb xchg inc push xor (bad) mov inc dec mov div add inc sahf and and mov je clc mov out mov int3 inc xor sbb cmp dec xor dec repnz ljmp adc cmp insb jnp fwait cmovs mov sub daa aad pusha popa repz mov inc movsb lcall popa mov push aad mov das pop pop es enter mov sbb enter push and lcall fwait test push stos pop mov add pop add (bad) out js (bad) and shlb adc movsl jge or imul mov mov sbb jmp int3 lahf out add or and jo je les push cmp (bad) and out dec ss add pop popa ja sbb bound sbb repz popf pop mov les dec dec in cmp out iret add out outsb mov rorb outsl testb cmpb push je das lock dec push inc xchg jle popa mov ja pushf push pusha imul bt call mov jmp lea je pusha pusha lea jmp add push push push push jne jb push jae jb outsl imul call cmc test test not movw clc test pusha xor pushl cmc movw not mov rol pushf not jmp lock sub add orl das inc add add mov push push add aam inc movsl jo pusha das das inc add add sbb jg inc add hlt or leave xchg (bad) shrb das inc add add jno add das inc add add sub lock add loop mov das inc add add inc les test das inc add add add sub add addl mov inc add shll movb add repz dec sub add lret sbb cmp sub (bad) jmp dec cmc adc jp mov das das inc add add mov inc add add sub mov das inc add (bad) fistpl lods mov es add add mov sub add xchg and das inc add add cmp inc add fidiv sub das inc add add lahf das inc add add push andb add add int xor xor inc add add mov xor inc add (bad) pop mov fcmovu cwtl xor inc add add adc rorb add mulb clc das das inc add add xchg jl mov sub add jge add inc pop xor inc add add jmp and clc pop imul inc add add loopne nop xor xchg das inc add add adc add add cltd or je inc add out push and (bad) or das inc add (bad) fwait decb jp dec xor inc add add roll addr16 mov inc add in cmp add inc add into inc js xor out sub add imulb lods fcomip sbb inc add fiadd popa in ja das das inc add add pop lods cs mov inc add cld mov cmp mov add (bad) out and cmp das das inc add add imul add add mov das inc add add stc cld mov mov sub add movsb cmpsl xchg lcall ja add lods and mov and or pop cmpsl in dec (bad) mov popa jle (bad) rol sbb std (bad) adc ss mov and cmp mov jmp push pop jg adc inc push xchg call addl xlat popf popf dec lods sub cmc lods jecxz lret xchg mov pop les pop aas pop or rcrl mov xor jmp sub inc jg dec add lods xchg adc sbb dec push (bad) stos jae sbb fdivs outsb sub and std push lret sub fisub (bad) cmp shlb push in add and dec stos fxtract cmp js sbb sub push lods pop and pushf adc ret daa push adc sbb inc mov (bad) inc rolb jmp sub lret dec cltd inc push pop push add hlt or dec jl xor push test pop lock into push in call mov shr (bad) repnz mov cld sub add aam ss in popa xchg fdivs pop (bad) jmp mov shll jp movsb enter leave or (bad) jno ljmp shlb add sub imul or add jbe mov jecxz cmc and pop inc xchg imul insb lods jbe jo fistp xchg fwait movd mov jbe push insl jmp das scas imul ret or dec mov aas insb jg jbe and cmpsb pop xor addr16 push sub push mov mov and dec in pushf test add sub aam pop pop mov fstps push ds cmc lahf adc dec cld in fstpl cmp ja add xorl jnp add inc dec loope mov mov adc repnz xor sub (bad) lcall push xchg xor push std (bad) in out loope push mov lods jmp cld push (bad) lcall sbb jno lds lret loope cmp repz jno ljmp addr16 cmpsl aaa and xchg frstor xchg or mov mov fsub mov xor xlat inc mov adcl idivl icebp sub orl out out (bad) dec or pushf pop push out fstpl xor cmpsl inc sub (bad) and (bad) cmp nop xor pop mov adc (bad) inc mov dec inc sbbl push add cld cmc (bad) adc in popf movswl and test popf imul test cwtl or repnz shrl inc mov loope ljmp out clc push ljmp cmp adc and fidivrl rclb jp ljmp insb scas ret dec mov (bad) sbb push test je mov or mov aaa inc adc lods jbe testl cmpsl into daa je mov fdivs and shrb mov pop lods sub cmp add sbb lea ja pushf mov lea jb push call jne (bad) push movsb inc push or subl push imul andl (bad) dec cmc mov jae sbb push jmp stc jmp popa or cmp aas (bad) and mov nop test gs lahf (bad) stos push cmp cmp lretw push push leave aad sbbb pushf div dec (bad) mov pop pop inc sbbl sbb cmp cmp or cmp jmp sbb cmp loop movb mov jae dec sbb sbb (bad) fdivrs mov imul test sub inc dec aad xchg and frstor lahf or cltd mov fs lcall movsb jb xor outsb in dec mov fcoms out (bad) xor mov xchg (bad) sub push push mov jb pop rcr inc mov incl inc push dec xor insb fcmovnb mov cmpl rol push xor xchg xchg push repz (bad) jp xchg scas cmpsb loope mov out nop mov and pop mov out cmp push icebp sbb xor add inc mov mov hlt inc testl movsb lea push xor out pop aam in js pushf cmp lahf cwtl sbb inc clc loop pusha lea call cmc cmp call test out cmp shl mov mov cli ficom mov stos ficoml faddl mov jl jo add subl xlat into xor add in cmp scas je dec sahf cmc jp pop adc js adc mov and inc icebp mov int and xor lahf xor mov addb lock imul stos fyl2x jmp sub cltd sbb xchg mov or lret and negb stos mov daa mov dec std and fildl push rol in ds jecxz int3 sbb cmpsb and mov fsubrp int3 fcompl clc pop les pop pusha xchg in jl,pt stos (bad) ja adc add mov mov fnstenv mov mov and repz icebp pop pop in xor fist pusha or or adc dec ja xchg push push rcll sub inc sub inc nop (bad) mov mov inc outsb add sub push cmc push repnz (bad) mov add mov jg inc adc lahf mov in sub inc mov sub cmp add push in jo sub dec mov fwait js scas outsb push cmp popa call jae pusha cmc xor push pusha pushf lea call pusha lea jae cmp jns push sub mov mov lea jb call push mov jmp push sbb push cmpsl inc push sbb int or or or roll pop push mov inc sub cmp or push movsl push pop in inc mov test jae inc mov (bad) scas mov pop pop inc das out mov mov fwait es dec cmpsl jns clc psubsb and lea adc movlps mov (bad) pop stos or jle jmp pop mov sub jecxz daa and xchg in cmpsb pushf pushf inc cmp aaa addr16 cmc xchg mov ret cmp mov mov mov adc dec rcrb or stc add mov cld dec rolb hlt loop pusha cmp xor in int cmp xor hlt ja out pop mov xchg and cli jle pop (bad) push ljmp (bad) (bad) dec cmp pop out pop out sbb lcall rcr xor je and rorb jl pop add imul imul test jo in pop mov cmc cpuid jnp sbb and push es dec ja add jle adc sbb cli adc test mov dec cltd or add (bad) pop mov aam scas and cltd sbb xchg push cmpsb popf jo xlat dec adc lods mov push pop movl pushf pushf mov lea call or sub mov inc mov sbb xor imul (bad) daa cwtl daa dec movsl aad (bad) lds cli add push mov in xor adc pop jmp xor push in sub and (bad) jae mov sub mov pop lods and jbe mov cltd nop into pop mov xlat (bad) pusha (bad) and call dec jo pop (bad) or arpl pusha mov push in jle lret rcll jbe cmp push or lret inc (bad) dec fildl or dec sti inc clc bt call inc lret dec popf mov sbb mov outsl scas push (bad) cmp jnp jle sbb lcall in jp jb pop dec cmp je divl repz lods inc push cli add test mov imul rorl in lret ds mov mov or into jbe vcmpss mov (bad) cmp xchg pop shrl add mov xlat xor xchg sub insl test mov sbb push jne bound repz lods add mov fiaddl dec out daa or or add and addl and cmp jns jne pop popf jne cmp mov jle fs jo psubw dec adc xlat rcrl jg (bad) sbb pop jae pop insl adc stos pop call mov xchg add aad pop andw aaa js push dec addl lods div in sbb and mov mov test mov in inc inc dec cmp mov lahf fcmovne inc mov sub fadd cmp popa xor inc sub test cmp push push mov inc jb or fidivl aaa mov push cld sub rclb in mov jecxz jae sbb ja gs ror lss aaa mov out adc js ds mov adc sbb dec out xor push ret pop leave jge negb jnp pop aam js push pusha inc ja dec imul pop mov push ja mov dec pop clc and xchg push inc test jecxz nop or (bad) scas jg (bad) cmp xchg jne pop xchg repnz ljmp sti pusha dec cmpb fstl adc cli adc lods inc push rcrb xchg inc adc adc gs imul mov lret (bad) xor cwtl sbb icebp add xchg mov adc lahf insb push push es and cld mov xlat mov jbe rsm in push dec xor out push push push repnz and push mov loop jmp mov fs cmp les insb push clc clc push fbstp adc pushf aaa lock mov xor cmp cmp and pusha or cmpsl int3 push out sbb sbb cmp jae outsb int mov dec not inc jmp xchg mov lods inc push push in popf xchg push dec scas push ret cmp jno jge dec mov xchg out sub out mov pushw xlat data16 mov aas rorl xchg adc ljmp lahf popa aad push movsl fs mov lds mov sbb push stos leave dec push xor pop enter nop outsb in jl jmp in push sbb jns jne and lcall test and jns shrd cltd add out adc pop into cmp shrb push jae negl in cmp dec mov mov data16 or sbb ds repnz fistp incb xchg les inc movsb outsl into divb ljmp dec xchg inc dec iret (bad) sub iret popa movsl sahf cmc adc mov inc pop shr (bad) in dec addr16 inc or int in mov sub jb clc inc push test outsb inc jg fwait int mov in ja (bad) fild pop sub push divb lret cmpsb je in ss adc (bad) cmp inc out roll leave push and repz test scas out mov (bad) and mov push inc mov imul mov push and push icebp xor cmp and in in dec inc ret push cmpsb addr16 mov mov out test in lods lahf inc fidivr imul xor loop pushf in test repnz or mov out adc cmp aad jl out call pop pop xchg mov sarl pop movsb cli dec push adc mov dec loope dec cmp xchg les mov movsb leave push inc rclb sarl inc in xchg add rcrl gs xchg shll (bad) pop daa jnp inc mov and test jg cmpsb mov fdivl negb int3 or push repz dec push fwait push sar lods adc aaa adcl cmp ret popf das scas divb ds aam cli or or out lcall sub ds jmp xchg scas inc push add cmp jle and jo jbe adc inc test sub xor xor sub aas out call pop rclb mov pop add fwait or jb insb cmp xor pop jmp lock lret std cmp xchg xorl mov loopne pusha pusha jmp push or call sbb aaa repz cmpsb (bad) jmp xor or fdivl jle add icebp pushf xchg in sbb sahf in and stc mov ror aam inc cmpsb push test mov fsubs (bad) sub mov jno pusha aam test or mov lea jae call outsl push mov inc push add out inc out insl pop xchg in sub or or cmpsb fildl inc mov rcrl mov pushf imul jae sub fimul mov fmuls js mov rol test cmp cmpsl xlat in push add fidivl imul cli adc ret fwait mov test in push mov shll mov fcomps pusha in ja mov fs sub mov insb mov add and pop fbstp or jns psubsb test in cmp xchg add dec (bad) mov dec aam add mov aam cld or popa or shr jnp testl adc pop sar and mov int3 xchg (bad) loop mov or xchg in xchg inc mov ds xchg lcall in into sub addr16 js pop out xchg adc jo mov dec pop mov das adc mov sti mov lods in push ret mov jecxz xchg or pop fcoml enter jmp cltd fmuls jno push xchg push push rcrl xchg cmp adc xchg out xchg mov (bad) bt test add movw pushf lea jne pusha call add inc outsl inc jb popa je inc jne add add je gs imul jmp adc stos inc push push enter sub insb push add cmc or mov add push inc inc push fldenv call pusha mov cltd or fldenv sahf dec int3 cmp sti rcll int3 inc lods cmp pop bnd or fiaddl jecxz dec int3 loopne clc rorb push daa dec rcll push xchg inc stos inc push push stos push stos jo jl dec hlt add in push mov add jmp pop data16 dec rolb ljmp lds push int cli dec fisttp adc mov xchg adc aam dec imul inc push ss inc es jb inc shlb xchg jle mov adc jp mov sti shlb ljmp je push pop imul bound push daa push mov pushf daa in cmpsb jg sub shr cmp sbb ja (bad) loop cmc pop ret dec dec loope aas repnz cs std ja pop and loope or (bad) pop in sar rol mov cmp sub je not cmc shr jmp pushf lods push pushf pushf inc cmc xor call lahf pop cmp stos inc push je xor mov pop or jns jge cmpsl xchg fist test add pop insb mov outsb and lahf jne adc push cmpl sar jecxz add sub sbb repz cmp xchg sub jns jno pop ljmp mov add push add sahf adc pop gs out push push sbb sbb imul jns jae mov push mov or mov mov push mov lahf std push push push pusha pop test fcompl inc mov lea pop inc inc jg or fwait xchg mov hlt xor mov push adc int3 cwtl inc dec (bad) xchg mov loopne in lret lret outsl stos push mov push inc ss out arpl loop mov daa xor push and inc lock push ja dec lret aam inc fnop rcrl imul dec mov pop sbb mov loope pop out mov cmp and pop mov test (bad) xor sbb cmp add cld dec mov aaa xchg sbb mov sbb lods mov push mov aas (bad) push mov stc inc popf sti adc adc rorb cmp call fbstp cmpsl (bad) xor dec inc mov enter add cmp mov (bad) fidivrl (bad) xor fwait adcl rorb mov sahf jo test (bad) mov loopne pop cmp lock rolb jb xor or (bad) negl cmpsb mov mov rcrb lcall xchg xor mov dec pop inc mov inc inc jne or ja in jbe add scas lds mov je add pop xlat adc rcrl pop pusha or dec leave jmp mov add call push lahf add int3 enter repnz lcall fcomps mov adc xchg nop inc repnz cmp in or ljmp loope xlat ret xor dec int3 xor out xor mov rcl leave cmp daa test jo sbb mov or call mov shlb sub js xchg and mov jb stos out sub xor and frstor xor (bad) adc xchg pop aad pop mov iret push dec push pop pop lds sbb mov push sub mov mov pop pop int3 pop or sbb in cmpsl leave pop pushf (bad) lock dec ret (bad) scas add jne in jns iret lcall adc dec popf push and cmp daa inc push (bad) mov icebp fsubrl fdivr pusha mov lock mov xlat repz and sub test pop cwtl call ja jns imul lds dec cmp add adc adc cltd jecxz cmpsb xor and out jg fisubl es ret jb push push inc mov popa hlt sbb andl cmp mov in push mov arpl push test xor push out daa aaa das cmp lahf jle ds or inc cld cmp xchg sbb push mov dec incl repnz cmpsb fwait push jle ja add jp loopne out lret arpl inc dec loope push int in addr16 pop dec pop pop loop (bad) out aas mov popf sti ja pop sbb call push loop xchg test sbb mov sub in repnz ret sahf hlt xor aam lea mov lret sbb jne sub ss add arpl aam jp jo data16 shrl (bad) in daa cmp mov test call repz sahf clc into mov stos fisubr dec mov (bad) (bad) fbld xchg sub pop and add dec fisub mov daa out in test aam sbb (bad) mov ds leave test or rcrl cld adc stc pop mov idivl jo sbb iret push decl ja sbb test dec pop cld test adc aad fs push mov cmp dec mov stos popf arpl arpl mov sbb jge int3 out (bad) ja ljmp mov clc leave ja shl mov ficom (bad) hlt stos icebp push mull ja mov lock cltd ljmp cmp pop sbb aam push std jnp mov and pop push std arpl adc ja fisttpll or rsqrtps or imul pushfw jo (bad) xor arpl ja mov cli and arpl ja stc in loop dec js loopne pop int pusha fstps xchg (bad) and or sarl lods adc sbb pop sub loop adc popf push iret mov dec sbb xlat arpl ljmp scas iret xchg push iret das push add mov mov andl add sbb add into xchg push cmp test aas or add push loop cmp xor int in xchg mov (bad) fistl hlt mov sbb daa enter dec out sahf (bad) jmp sti insb mov cld mov popf clc sbb lock push loop push fadds iret mov lock fdivrl jecxz sbb xlat dec pop add dec je call into imul inc mov iret lea popf push (bad) xor aas outsl or (bad) out fisttpll pop repnz out push in push fidivr push packsswb mov lock jle fild popf mov aaa stc ret scas popa xchg jo (bad) cli ja popaw adc inc test fmuls sbb jns sbb pop mov cli mov outsb add add in pop add jecxz add cmpsb int3 push iret inc dec xchg sub stc scas push mov subl into ret aaa adc sub fwait into mov sbb dec scas pop data16 out iret pshufw inc aam ljmp push push push aaa and cs dec inc outsl std push aas jmp arpl lret adc sbb lea pop out cmp xchg add arpl test clc scas out insl sub js in jle fsubl arpl (bad) aad xor fnstenv enter (bad) das sbb arpl negl pop sahf push out (bad) int cmp in or clc fcomps sub lcall and add lret leave (bad) dec or in push jge outsb adc in je out cmc add sbb repnz sbb jmp adc movsb fadds decl loop cmpsb aas xchg sahf adc fiadd loop outsb loop or mov frstor repz push aam sbb bound lret daa or mov xor add out adc push add hlt and ja inc cmp pop iret ficompl movb frstor ja cmp mov pop push sub scas add pop ficomp out ja cltd lret ds call cld fisttpl fidiv fsts and and add sahf test mov pop xor rcrl movsb xor mov (bad) cmp into mov mov cs nopl nop sbb sbb loopne xchg into dec hlt arpl stos adc jnp movl cli jecxz clc jbe jge sahf lret popf aam dec loop (bad) je ja cli neg hlt mov ficomp xor fisubr loop lods xchg jo inc sbb mov adc (bad) or xor (bad) test mov dec pop lods (bad) jge ja in sbb jbe out xor js into pusha mov push mov push pop cli test ja js (bad) sbb int subb popf or notl fstpl cmp arpl rorb xor pop rolb add xchg add xchg cld notb emms mov add inc aaa sbb idivl das adc mov push inc cli push sbb ja fiadd xchg or xabort loopne sub sbb int pop arpl pop or pop (bad) jle test imul jo sbb add loop (bad) and xchg mov or (bad) fdivr test jne psrlw push add ja idivb push lret mov cmp jge flds arpl jge cmp (bad) ja orb arpl out pop and shll aad (bad) arpl outsb push jge xchg movsb repz test inc jmp nop mov rorl addl mov xchg fisttpl ret pop pop pop (bad) loop ds dec jle adc in out xor jp xor frstor loop xlat aad and lcall les push push mov (bad) sbb pop mov or push xor loop,pn inc ret xlat fstps bnd outsb sbb dec test popf ja sbb cmp in adc push xchg cld pop push pop mov cld dec sbb adc ja cli cli sbb add dec movsb xor mov in iret inc pop sbb lret test pop xlat cmc loope arpl adc aam out jae mov and fdivs aaa pop mov ret jge mov les rcr sub sarl cli cmpl mov test or cli test out mov cmp (bad) xor inc aam sbb add out adc loop ret mov les dec popf sbb jb outsb push lock in mov out data16 pop rcrb daa shlb ret (bad) out arpl call jae push cmp cmp in sti fnstenv push pop cli cmp ret test sbbl inc mov (bad) lcall sub mov pop xor adc out lock iret sahf loop add inc jmp imul dec call and ja pop cmp test jmp mov scas push push and ss sbb int out mov mov sbb in add ja (bad) stc call sbb sbb mov sub les (bad) jno in notl popf jecxz jns jbe call adc ja ljmp repnz popf lods aad add xchg mov cmp ja lcall (bad) push sbb test push ljmp jp adc popf push fcomp cmc cli sahf jge ja and leave mov icebp test fcom mov cmp push jge push cmp mov stos sbb inc hlt iret int out cmp outsb mov or push and ljmp pushf cld jmp les movsbl shr cwtl clc outsb jge jb lods adc pop push xchg repnz movb aaa fcomps aad incl push add outsb xor pop frstor lea lods fcompl jno rcrb pop daa sbb lret cmc or data16 add dec test pop cs cmp pop and lds lret xchg arpl popf jge mov mov stos fildll insl test enter fnstcw mov sub test fprem stos repz hlt jo pop pusha pushf xchg pop sbb lock mov aaa and ss sbb stos sahf cmpsb fwait mov popf mov sub cli sbb jmp adc lret pushf in ja dec test fstpt data16 shl adc fiadd and mov pusha sub aas cli ljmp or insl dec fcoml push push jmp aas pop fst inc sub arpl mov negb sbb inc add or push push fidiv bnd mov repnz cmp lods sbb or xchg push iret inc jle dec repnz sbb add lea ret adc pop jle inc insb jmp jp pop test jge xor inc push push inc xchg sarb mov ficomp repnz (bad) mov cmp mov aad add ja insl dec scas push stos cmp test mov mov lcall push xchg lock dec es dec pop stc adc xchg sub fcompl ret repnz xchg rcr leave ljmp mov lods inc popf inc inc fadds cmpsb aam outsb imul add adc cmp pop pusha cmpsl fdivr sbb movl cs mov popa inc inc (bad) push or fisttpll int and and or lahf loopne sbb xchg dec fsubp lock pop (bad) outsl bswap ja inc cmp outsb dec mov dec jbe dec out stos rolb xor push ja push sbb inc pop inc pop popf inc adc sbb enter jmp pop sbb mov dec sti popf mov push cltd arpl fdivrs jge subl xor enter (bad) push jge jg pop arpl mov jle sbb rolb test ds add (bad) aam mov add xchg ret fsubs std aaa xchg stos into sub dec rcr ja sbb cmp mov xchg test lcall dec pop ret cli push iret add (bad) mov (bad) dec jp fmul inc xor (bad) dec mov pavgw pop fnsave testb add xor aas and lret cmp sub into xchg jecxz cli roll pop push jge mov dec jae scas sahf ja inc jp and outsb clc or stc xor push adc mov inc outsl ja push cs pusha sub push mov jo mov mov mov jl inc jge test sbb ljmp sarl pop enter push and test or je add adc aaa in stc adc pop and cmpsl mov stc pop inc les testl pusha inc push mov je roll sbb or sub xchg repnz iret cmp sub outsb pop pop arpl cs sub aad inc je push arpl (bad) ja sbb sbb mov and lea mov pop fisubr sti test ja lds jbe daa jnp int out mov cmc shlb aam in xchg mov ja sbb and iret adc iret pop push fimul mov lds jnp mov adc mov mov fstpl push ja and out aam loopne pop and pop jae mov mov arpl jge sar jecxz cmc rcll mov xchg cmc (bad) arpl xor mov fnstcw xchg test js aad pop (bad) mov test repnz jb ljmp inc pop sbb cmp fiaddl push and lret dec mov ja cmp out pop mov mov shrb and jno fisubl loop fsubs xchg popf cld in mov out pop ja fldenv add push sbb mov (bad) inc repnz add jp and mov mov aaa or aaa fs inc pop sbb inc inc push loope or inc cmp add mov pop mov pop nop push add addr16 leave stc sbb dec add sbb cmpsb (bad) (bad) test mov push sbb movsl or adc clc xchg jecxz (bad) dec loopne ja cmc scas dec cmp ds movsb jg je mov leave push into sbb push shrb mov inc dec sub ds cmovl (bad) or cli fsubrs mov insb jp sahf outsl clc das xlat out ret lock idivl xor aad or dec dec les dec sahf out mov push cs xchg xor jg or test jge xchg (bad) notl (bad) push jge sbb adc stos lock jge (bad) dec xor adc xor xchg xchg push pop movsl rorl into (bad) fisttpll mov (bad) stos fildl dec pop pop in loop xchg push movsb bound cli lret bound xchg out pop xor in arpl jmp loopne fbld movsb sahf mov push addr16 xchg sar in imul std int3 mov and cmc pop xlat lock inc add adc mov fnop mov (bad) iret (bad) (bad) int3 or test leave dec push (bad) jecxz jecxz inc mov cli inc push std ja psraw icebp jns xchg movsb mov mov xor or xchg xor cmp pop (bad) aad pop gs arpl pop in hlt ret sahf loope jmp jns or cld inc je popf clc push mov cld fs icebp xor cmp std out aad lods std popa fidivr and adc lock sbb insb lahf sbb test in fdivrp mov pop enter cmp mov pop adc das outsb divps fild fidivl sti xor pop push insl sub insl adc mov jb popf daa ja inc dec popa test push inc pushf jne adc popa mov std push into repz popf icebp dec sahf xor or push out xchg lods insb mov iret ja adc mov je sti sub sbb mov enter xor (bad) in es push fs addr16 loopne,pt sbb aas ljmp inc ss or lret cli aaa or nop es push fwait push das mov or fwait into pop adc popf outsb scas loop pop inc in (bad) and sahf std lahf outsl push jl mov sahf out outsb mov in mov call dec jl jge inc pop (bad) mov jg mov aas fstpt lods scas fdivr sti int3 cmp fmuls pop adcl cmp ds add fsubrl push pop adc or icebp dec push mov sbb jbe xchg (bad) pop push into test es loop push ficomp rcr mov add cmpsb and xchg pop flds pop jmp lret mov ja xor inc mov aaa in pop or inc popf pop inc sbb lcall push lret arpl fidivr leave xor fs das xchg pop arpl rorl cmp (bad) mov std pop ja stos arpl test faddp dec xlat sbb xchg loopne leave dec fstps cmp lea jge testb and in arpl mov popf int3 mov mov jle std arpl sub xchg adc out aam nopl (bad) push cs jae dec add (bad) iret pushl (bad) cmp jmp sbb dec pop push xchg mov ucomiss idiv arpl (bad) lea cmp mov or nop lods sbb ret xor mov push sbb in push out test (bad) enter movzwl repz loopne dec pop lods cli ja mov push shrb popf es jle int3 cmp mov stos xchg shrb pop into gs mov in dec divb mov int xlat sti stc movsb push out je out jl push push pop sbb xchg or mov sbb test sub and jb xor cld mov aas jno cli push shl mov out mov xchg fild or dec popw cmp or in jge sbb fsubs and mov mov mov icebp cmp push aam or pop (bad) push arpl daa popf jae adcl es fnstenv pop xor out test mov adc loope mov ftst or mov jb stos ficomp xchg or cmp arpl shr test loopne inc dec push (bad) std clc fisubl pop movsl into (bad) mov and push dec sub jb or (bad) outsb testb mov ret jmp (bad) addr16 ja out psubb inc add sbb rcll (bad) push arpl sbb mov (bad) idivl pop xlat pop pop cld leave add inc sarb jge xor mov mov xchg jecxz pop or xchg adc orb arpl sbb loop or (bad) mov mov jge frstor das hlt mov inc or test xchg cs jmp or add hlt mov adc dec jg jl lahf int ljmp das leave cmp adc lahf addr16 jp jge push cmpsl xchg cs xchg sub movsb fwait dec in mov mov daa sbb out out mov loop inc push (bad) or mov call test rorb push je incl int3 pop xlat orb (bad) ja jae or fdivrs negb in fcom push fwait mov cwtl push pop push and hlt cmp cmpsl dec sbb sbb pop adc ficomp neg mov into ja jle (bad) xor movsb setp sti sbb cli aaa into sbb pop mov movsb outsb repz and xchg arpl or lea pusha mov fnstsw adc ret imul jae int fcoms add pop hlt xchg inc mov fdivr jecxz push movsb jge lea out scas xor out les jge xchg test xor sbb jp stc test sahf sahf mov mov add (bad) stc insb sahf mov push (bad) fdivr std lea mov or ds dec sarl lcall int mov ret popf mov pop mov test mov push fdiv out std rcrl mov or hlt inc adc ds incl or fidiv push jb jle or sahf xchg call aad mov in scas or test cmc sbb in les (bad) push aaa xchg or (bad) mov nop push push (bad) adc mov pop lea fdivrp std fcomps or enter push adc cwtl sbb lods mov cmp jmp adc enter sub mov call mov lods xchg xlat sahf fsubrs mov into (bad) nop push (bad) cmp (bad) sbb std mov out std mov xor (bad) scas xchg dec mov dec js dec sbb jle cwtl add arpl or and mov xchg or aam dec ret in lds push lods popf (bad) jnp pop mov dec sub mov mov clc aad int3 add or negb jge test push arpl popa icebp das mov ret sahf adc int sub fisttpll scas adc daa in rcr call js xchg sbb push jge les mov data16 sbb ret (bad) in cli aad clc out std xchg scas arpl lock mov vrsqrtps out shrl cmp lds mov (bad) mov test cmp add pop loop sub and scas jp leave (bad) loop ja add arpl insl test pop xlat aas mov pop xor ja pop adc adc cmp push jmp punpckldq js vpsrlq push dec mov popa icebp dec loope mov mov xchg or pop movsl lock clc or aas sub pop arpl xchg inc aad mov mov arpl cwtl cli jge scas cltd dec adc fldenv inc or sub jge inc jecxz inc inc je xchg ja js jge push dec fcomi aad pop arpl es mov leave cmp xor mov pop xor ficomp and (bad) aaa sbb neg icebp dec shrb mov leave xor xor rcll (bad) jae and jnp ja stos jo (bad) adc mov adc hlt xlat addr16 mul sbb push xchg movsl rorb rcll popf cmovle mov jle fildl inc cmp jge stos jns (bad) jae mov stc or icebp xchg icebp scas pop sbb test jmp fcoml push or je sahf fistp adc dec jae push cmp sub add adc jb aam sbb cli popf lea pusha push lods arpl sub cmp mov leave pop in mov test adc xchg ja and mov or xor or or dec fmuls lock cld orb shrl call mov stc pop popa test nop aaa mov fimul mov mov in and mov or push inc xchg jge ror jns sub in jae je ficomp movsb push mov lret popf scas enter cmp or push je arpl sbbb das fnop adc out loope icebp (bad) or icebp fbstp enter fidiv outsb insb mov imul push sti rcrl jnp sbb hlt aas pop (bad) pop enter jns popf cmp sub or or stos lock jo test pop fisubr loop std movsl jb pusha add (bad) icebp push dec imul fidiv lds int mov cs iret jg scas or push jnp and scas adc sub xor fistpl sahf push dec pop mov xor push sbb jge adc movsl and mov cmpsl jno dec dec sarb mov repnz (bad) push lods mov hlt (bad) cwtl cld scas fcoms mov (bad) imul xor out scas mov arpl mov jge (bad) into sub fiadd add aas mov mov in pusha in mov sahf mov add lret sbb outsl xchg nop jmp test test pop out js loope lahf sbb xlat sahf push into jge,pt jbe lods cmp jno lock leave xchg sbb imul movsb (bad) stc sub push sbbl adc cltd (bad) js or mov or ja jge (bad) xor stc dec lea push popf mov xchg pop iret mull dec je movsl inc lock xchg jmp stc je cmp push adc hlt mov (bad) jge xchg mov popf repnz xlat mov fldl mov xchg cmp cwtl sbb mov test push mov das or outsl in in in xor (bad) hlt ja stos xor jl (bad) stos aam hlt ds inc in xchg adc dec xchg add cs jns cmp loop paddw cld in mov mov (bad) push pop cs sbb popf xor popf mov sbb hlt movsl push clc andb imulb xlat inc inc dec (bad) call popf or je jecxz ss adc mov cli mov into outsl fidiv push popf leave pop push jnp mov cmp clc into out sbb dec sbb jb aam lret jmp or lahf add int sti cld in fadd fnstenv push (bad) jge sub mov sbb jl out push inc inc xchg add mov xor ret mov sub fs inc or lcall (bad) push mov xchg push aam dec push icebp lods outsl jge repz mov clc push inc jnp loop aam mov clc sahf jle pop ja daa out ffree arpl in jecxz movb das sub adc dec dec push out pop push cltd gs xchg sbb notb negl (bad) fdivs out sbb iret inc stos jge jne mov pxor shll loopne std fidiv lahf or push arpl jno popf ror loop fsubrs xchg push cli dec or mov cwtl dec sbb (bad) jmp dec notb dec mov adc sub faddp arpl je in push pop rep rcr mov cld rorb das and fs mov mov push cmpsl popa aad test add aas ret clc xor test addr16 xor fs dec sbb cmpsl mov popa sbb mov roll jge ja and push adc out jle lds xchg dec (bad) adc cmpsb jnp or lahf ja add fdiv dec add mov mov int3 xchg cmp mov jno jp adc out fnstsw mov jne jle aaa add fcos cld sahf pop or push mov mov mov adc popf popf dec mov leave pop pop mov aas dec ficompl fidiv or mov int mov mov mov leave (bad) mov sahf bound rcrb pop test cmp push mov adc arpl jne lods aas iret fsubrs insb (bad) outsb lea sub cmp (bad) inc (bad) adc push cs push lods pushl sbb arpl lahf xor or jbe popa mov jecxz loop mov xchg test inc or pop mov daa rcr adc jmp loope gs (bad) push fsubs sub pop inc test jge std enter test paddsw std pop push repnz lods cmp arpl int loope into fmuls icebp pop sbb adc dec sbb in mov into movhps xor add rclb rorb jg sub push out arpl enter fistpll loopne testl cmp mov hlt add shll popf sbb div popf push and cmp in xchg fdivrp push dec popf push xlat mov out sub pushf pop scas xchg popa cli adc addr16 out jmp and mov bound out cmp adc cltd cwtl mov push in pop push les (bad) mov jl movsbl stc mov cld add jge sub cmp test call (bad) aas ja sahf mov lret in pop gs xchg dec cs add jbe xor lods pop leave ja xchg adc repz decl popl lea pop sbb mov sbb (bad) stc ja lret jo inc mov inc push or daa cmp lds or jecxz cmp sub sti test clc and arpl cmp scas ja push jecxz jle adc mov fnstcw adc or mov in test cltd rorl mov in int3 mov xchg fs lods into pop add xor mov je test xor jecxz ss enter ljmp xchg adc push les leave cmc xor sbb arpl lahf and je dec negb (bad) clc out icebp arpl jmp mov fsubrl add xchg jge test mov arpl cmp js rcrl jbe sbb push mov outsl outsl xchg jne psubd test pop cld imull lcall mov repnz sub jo incb (bad) pop in or mov adc les push ds sub aad lea aam xchg xchg xchg in in cmp jge mov movsl hlt mov or and dec clc cmpsl pop das popf xor out dec pop loopne jbe jae jge inc rclb push mov mov sbb cmp aaa mov popf mov add out mov (bad) dec xchg shlb data16 add out push adc scas push xchg adc pop xchg push lds or fbstp mov fsts sub cwtl ja pop and dec fmul clc sub test das add leave xchg lcall addr16 rcrl or adc jmp xchg push sar jl leave push ja mov mov (bad) cld xor mov insl mov movd cld rcl inc int or fnstsw (bad) pop adc add push test dec mov ja cmp mov test (bad) sub push sahf popf pop pop jbe or nop push mov stc pop sahf mov inc outsl (bad) outsb (bad) or outsb inc sub imul sbb outsb or pop clc inc sbb pop pop mov xchg les insl sahf cli (bad) arpl aad or add cmpsl addr16 test ja cltd sub dec mov push ja fwait or mov dec in les ja jo gs jne or rcrb stos jmp outsb ljmp dec xor push test add mov or jbe loopne cmp jne sarl or out repnz nop sbb mov sti sbb imul push and clc add bsr jmp aad cmp push loope lea push xor push xor cmp cld push push imul mov leave pmaxsw mov (bad) mov ret sbb jge (bad) push mov ret mov roll jmp sbb pop out imul cwtl repnz pop into and out sti add or xchg add push in sahf das sahf arpl push inc add in add mov mov in lret jno push rcll lock aaa popf xor pop xchg movsb push add and pusha dec mov mov adc clc pusha jge inc inc pop loopne std (bad) jae (bad) pusha fidiv icebp inc sbb push aaa push ja lahf testb mov wrmsr mov int fcoms and sbb xchg mov mov aam add push cmpsb dec adc dec sbb test test add pop pop pop and mov sbb (bad) fiaddl iret je mov loopne or cmp ss xor ja cmpsb xlat in (bad) arpl adc sarl inc cmp add test cld ds mulb outsb cld or push sbb jle cmpsb movsb aaa lock mov adc jle xchg push mov pop in jecxz pop pop mov mov lret idivl leave push cltd cmc test in outsl xor cmp sbb xchg repz sarb push iret sub sbb mov or or fbstp or aam test arpl pop sahf adc test rorl push pushf ret popf mov sbb pop inc mov mov les aaa popa fsubrs and ljmp cmc (bad) icebp xor xchg pop popf xor or xchg stos hlt popf orb mov ds push jge das addr16 jmp stos call fistl pop cs mov call jno mov mov rcrl fs imul and ret into mov test cli sahf mov pop into aad mov sbb popa add sbb repnz mov or lret call test repnz sbb arpl push pop jge add jmp dec test or in cli push jmp rcl out (bad) cld dec arpl pop repz (bad) out pop (bad) add pop jmp inc mov fs bnd jnp mov ljmp xchg in pop loop mov jmp sbb (bad) into aaa jbe mov insl inc adc push jo aas or lea stc out jbe inc cld mov fnop sbb mov mov mov std inc or add (bad) (bad) addr16 mov mov mov push fwait roll push and test nop in in mov cs into adc repz push mov (bad) clc lods iret nop sbb aam out sub test fisubl or push rcl jne dec mov in lret lea bound out mov or shl dec cld xor lock out lods sbb sbb dec ja (bad) cmp lahf outsb mov or icebp sbb sbb push or jge add out arpl cmc cwtl scas test cmc adc or out xchg pop adc add inc sbb mov pop or enter pmaxsw pop sub mov push mov jae adc xchg aaa mov (bad) and inc arpl outsb lcall jge repz (bad) ja xchg test das fisub fwait adc add mov and stc les decb imul test pusha inc mov lds imul sbb jle bound or sbb mov in xor add cmpsb stc outsb add sub jns cwtl das pop adc es push sub out push sahf mov out arpl addr16 jge icebp dec jmp mov cmp ds push push scas inc jae adc add add xor sub popf aam out fadds cs iret cltd mov mov pop xchg cmpsl xor into cli and jp cmc cmp xchg orb shrd or bound cmp test je lret xor mov into xor mov mov les (bad) (bad) (bad) push mov aam xor dec sub xor mov adc divl xor lock arpl rcr jne popf sahf cld rorb mov lret (bad) ja inc sbb shll pop fcomps adc mov (bad) push add insl cmp int adc adc fnstcw leave mov popf das sub call iret test xor push inc repz sbb mov ret mov inc adc flds push enter (bad) mov adc aad (bad) aaa imul cli sbb loopne dec movsb adc out jbe pop (bad) arpl stc (bad) jns pop icebp test mov loop fdivrs add lods fnstenv aam outsb push sbbb adc std (bad) frstor push movsb and pop xchg enter jle idivb mov fwait adc inc stos (bad) pop push sbb sub sbb (bad) into push je fucomi leave nop in pop (bad) sbb inc gs nop (bad) and jge loopne (bad) cmp faddl (bad) mov pop jbe or into les xor subl lock (bad) jo pop inc in cmp mov mov in adc fiadd jmp inc (bad) jno or outsl add shrb rcl inc cld arpl fwait dec imul fbld xor dec cs jo cli sbb bound jecxz add jno dec loop int cmp mov outsl mull dec ficompl fist aam mov jge ja xchg pop stc push jp mov shlb ret add ds jne mov push rcll rcrb cmpsb adc jge fnstenv inc jnp pop into jge mov in clc (bad) mov (bad) mov (bad) cwtl push testb repnz and mov mov arpl std cmpb cli jge sub and adc pop enter lea (bad) arpl (bad) sub loope movsl xchg mov (bad) ja mov or rclb repnz push pop enter fs inc push lods lock aam push push push stos or and cs jno jb sub mov icebp mov js sub adc mov (bad) cmp popf iret xchg das add or lahf cmp adcl ja xchg mov adc lcall dec add (bad) ss jo dec test cld test adc call push mov push idivb adc lds adc dec repz daa and fsub push mov xor pop cli xchg ja mov xor and fnstcw ja jno or repnz pop (bad) xor pop mulb test mov fcomps jne adc pop shrb call lret inc pusha jp adc pop sbb push cmp frstor mov clc add lea ret lods fisub pop icebp nop jbe mov arpl xchg hlt fcmovne fnsave in outsb mov push fs inc int3 fstpl dec in lods ja leave and shl mov aam pop aaa add sbb sahf cmp es push push je and hlt push mov loopne pop movsl fnstsw jne lcall in nop and movsl sub add andl pop and adc jl jecxz pop pop inc fcompp movsb das xor push xchg into sbb sbb out arpl push adc clc inc cs push cld sbb popl push push and int3 and test data16 outsl pop mov jne mov jo dec add adc loopne fdivl or js and arpl sbb sbb or pusha jg adc mov cmp xchg push jge ret xchg and loop int3 or jnp cwtl sbbl insl pop icebp ret xchg (bad) clc dec add xchg cmp cmp cli arpl into cs data16 test jno,pt mov adc sahf inc lock mov ja pop sti out mov dec sahf ja lret push outsb lahf xor sub dec pop arpl ret sbb js ja adc enter dec push jp xor mov fnstcw lods call sbb stc push int movsb stos std xchg test popa test das int3 mov cmpsb (bad) loop imul mov push push mov popa mov mov ret fsubr stos out cmp fstpl jge cmp (bad) mov sbb (bad) popf and gs andl sbb xchg or pop add loop sub or popf inc and (bad) pop cmpsb arpl mov (bad) ds sar shrb fs xor or loop (bad) iret mov leave inc jle ret sbb pop sbb adc mov (bad) cmp push aam xor js mov js flds stos and daa pop pop jecxz sbb push inc lods cmp int3 sub pop fsub loop inc lock (bad) or mov cmc push mov (bad) ja fstpl movsl and cmp dec (bad) movsl incb cmp cwtl cmp sarb or xor mov jno out test xor add jnp lods xor (bad) push push add push das jns test sbb out push lock test dec mov adc sbb mov cltd mov out stos push in mov (bad) call xor or rclb ja sti call sar clc mov (bad) xchg (bad) and rcr inc xchg in cli xlat sbb mov sbb adc lret xchg inc pop pop jge pop dec inc sbbl arpl push mov inc push fildll add pop push push lret (bad) scas xchg mov push out sub dec mov data16 mov arpl xchg sub cmp imul cs push in or aas nop and (bad) testl push test fiadd mov adc icebp xchg push mov les ret push scas (bad) insb les and cmp and test fdivs (bad) mov jle sbb sub xchg pop xchg loopne (bad) push mov sti pop test mov ror mov lea push out pushf add pushf cmc mov fldt jo enter repz out frstor sahf adc popa loopne ret bound bnd les mov fsub int add stc adc mov inc aaa or insl inc stc icebp into jbe inc add jae insb mov fdivl push mov adc popf sbb cltd add ja mov or jp mov out les ja sub das outsl xchg fstpl test clc cltd ret fisttpl add je cmc stc das push xlat ja add aam jl movsb pop je inc mov pop shrb nop outsl fcomp mov jecxz pop dec insb int3 icebp aad mov enter push or jo sbb cmp push lcall cmp aad or addr16 call or shr mov insl js xchg xchg enter inc push mov arpl pop lret (bad) ja jge dec ret dec add inc push stos cmpsl pop outsl daa (bad) mov (bad) cmp pop push out jge dec dec in scas cld in movsl inc mov imul xor jne lcall adc and dec aaa test or fs mov dec inc arpl dec dec cmpsb and mov je mov dec fwait xchg mov dec push jecxz cli repz sub shll mov ds nop and mov push or hlt push insl mov adc and ret call xchg stos sbb jbe dec (bad) pop into pushf sub adc mov scas outsw arpl adc dec adc jge inc (bad) cmp mov aam jmp arpl push les and lods mov gs and sub mov push clc in xchg jg lods push aad mov jle or imul fwait icebp fdivrs insl xchg pop test jecxz jle jg lock cmp mov (bad) pop add cmc adc int int jns imul xchg mov jg push cmp mov xchg lcall (bad) xor push fnsave jecxz insl pop in sahf cmovge push insl sbb shr dec out xor movsb mov push ds or into imul and lea cmp vsubsd frstor push ja lret insb sahf xor lret pop leave cli cs cli sbb je xor mov cmp dec push ja lds into aad cmp xchg push jmp iret out lret test dec test inc pop sbb mov inc mov jg or jnp cli popf push jmp movsb sub mov fs cmpsl inc loopne shll push sub aam pop or or iret push dec out cmp ds dec icebp (bad) jne inc mov (bad) hlt incb ret cmpsl popa sahf aam arpl jne add or adc xchg popa mov insb pusha add popf test mov movsl mov adc aas insb sbb sub aad push cld sub stos loop mov aam mov mov iret mov scas int xchg js test cld mov jbe call scas mov jecxz outsl lds sahf aad add je pop testb cld (bad) mov mov repz adc fnstenv inc (bad) lods into sbb xor (bad) jb add cli test int3 add (bad) in fldenv cli mov into movaps cli std dec out ja insb push sti cmc fistpll mov fadds pop cwtl adc mov ret or loop pop cwtl mov cmp (bad) xchg mov sub sub bnd popa dec mov cwtl xchg jae ret mov mov mov push xor xor out mulb mov movsb ljmp enter push clc mov test jge xchg repnz fmuls pop stc ret adc rorb clc cmpsl mov push fisub jle cmp stos dec sahf cwtl cmp fucom xor repz test fildll in pop cltd mov ret pop aam dec xor add fist jge push dec xlat inc xchg cwtl mov sub mov pushl ds jle xchg sub or push add or cli ja mov xor mov jge push popa push xlat xor add stc add dec rorb xchg (bad) aad scas pop mov cmpb jecxz sbb jnp or shl (bad) dec ror push and repz adc sahf xchg pop cli arpl mov imul rol inc sahf fisubl adc ja into lea scas mov dec mov xchg jle (bad) js adc movsl xlat std lea sti and sbb mov into lock stc xchg pop push adc sub test int mov mov adc in push or push sbb jbe out xor or or in jbe mov sbb mov int3 pusha dec int3 repz nop imul cmp inc inc or inc mov cmp dec sub scas jg lds outsl enter or jmp pop push into int3 into sbb in dec lret cmc fadds hlt (bad) int3 stc sbb adc cltd or idivl idiv jecxz mov mov lods fdivl hlt iret decl jge ljmp inc (bad) out shlb (bad) mov fcmovbe (bad) pop (bad) push arpl adc mov in mov arpl imul pusha mov gs movsb (bad) out mov in lret fwait out test mov fcmovnbe fcomp out mov mov mov push (bad) ja pop and mov stc (bad) shll pop dec sbb jge jl mov xor (bad) or retw pop aad mov cmpsb rcrb inc loope (bad) ljmp push push xchg lcall in es cmp dec xchg out mov out or outsl mov aaa (bad) aad aam cmp rolb mov ja xchg ss push out xlat sub int3 int3 pushf cmp movb (bad) out outsb sahf rclb fsubr mov xor and dec xchg push test bound daa dec jnp adc inc and outsl icebp fwait inc icebp xor arpl in pop pop and (bad) adc pop mov add out xor pop push dec cmpsl outsb ror xor loope jne add ds and inc in inc add ficom cmpl or jl inc enter mov (bad) fcomps pop xchg mov push sub cs sbb xor sahf or das insl dec stos or daa mov fisttpll ret jne sub loope jae inc jae cmp sbb xlat pop cld inc pop xchg mov pop stc and les cs popf sbb cmp dec fadds movsl xlat xchg mov sbb fistpl pop adc mov jb jae repnz mov xor addr16 lds popf pop mov pop jb or sbb in popf hlt mov mov stc xchg fnclex cld mov cmpsl psubw sahf mov gs jne in cmc sub adc lds outsb arpl lcall sub pop pushf addr16 mov daa jge shrl pop ret cwtl mov cs push xchg xchg fmul shrb sahf sbb mov loopne mov test or fidiv leave jns add adc stos ja jns cmp push in js mov ficompl mov or sub xor repnz pop test push fcom lods cld sti adc push cmp pusha rorb ja pop mov pusha mov or adc bound (bad) xor sti pop out sbb aam sbbl arpl add rcl fsubp mov lea xor xchg ja mov out mov pop mov add push shr pop iret ja sbb ja mov scas push cmp inc das cmpsb push pop scas mov in push fs mov out sub lea adc cli pop mov ja lahf pop insl push pop cmpsb (bad) sbb push pusha loopne jmp cmpsb or (bad) incb sar push xchg (bad) cmp repz push cs fsubs sub add (bad) mov jecxz gs lods sbb add lods fnop (bad) ds (bad) call loop xor sarl jge pop leave rolb movsl ds fwait loopne ds xor clc mov xor outsb out popf xchg sti outsl mov push adc pop rclb (bad) int into push mov rcll test ret push cmp in xchg pop mov stc or sahf push jmp xchg ljmp arpl lret dec ret mov cmc in jne arpl loopne outsb mov xchg adc and sub fldl out fdivs in fcoms lods cmp add out fnsave sbb cwtl xor cmpsl dec push pop cltd jle lahf xor sahf adc loopne mov adc leave out bound std je (bad) nop popf lahf iret insb leave pop inc mov xchg push mov pop adc mov ror ja adc (bad) mov int test cmp aam mov jnp mov out mov cld test push out (bad) fstl mov sbb ja and xor mov push inc dec (bad) cld dec ficompl xchg iret fidivl inc cltd jb clc xor adc and mov addr16 jecxz cltd nop fldenv icebp sti and push jle mov jge adc mov (bad) repz in cmc negl mov aaa push es xchg xor (bad) jb rcl mov mov ja mov out fwait xchg add cmp fnstsw lea int daa cmp xchg cmpsl stos adc or int and adc iret enter sub and mov and popf sarb iret movsb push or pushf (bad) out insb aas nop in mov mov movsb (bad) int (bad) push pop sub fsubrs rcrb push out (bad) mov jg and jp push mov add push inc in clc lahf sahf push ja mov sbb push sbb dec rorl dec arpl mov adc cmp add mov icebp ljmp inc sub jbe push (bad) cld jns arpl push sti bound xchg mov test jge cmp in inc fsts adc add rcrl adc arpl add xchg ja push dec mov es (bad) jb in sbb loope push dec sbb pop sbb mov out pusha ja aad cwtl lods add cmp roll mov outsb or popf and hlt in pop adc int3 daa fcmovnbe mov cli jbe mov insl xor cmp mov mov cmp mov mov fistp pusha cmpsb push (bad) outsb mov pop daa enter dec dec pop into cmp mov mov xchg mov sbb lock adc jmp int3 ss rclb aam sub (bad) mov (bad) cld arpl in and mov (bad) icebp bound cmp inc cld cld pop sahf inc xor add rcl mov mov ja into push push cmovle clc pop and pop (bad) sub or scas jge mov icebp int3 and sub lea push enter jl ss jge,pt fistpl xchg jae test mov xchg ss dec xchg xor xorl jecxz or nop pusha mov xchg mov mov pop xchg test push cli mov (bad) or add fadd movsl push ja imul xchg xor dec adc inc test (bad) test jbe cltd push icebp mov or xchg inc iret addr16 pop add lea stc inc adcl push mov movntps repnz cmp arpl out dec test push out mov mov (bad) mov hlt pop mov pushf pop or shrb lods sbb sbb pop pop icebp pop push roll in cmpl das mov pop in adc and sbb and dec add inc ja sbb test or lgs sti movsl bound inc in fdivrl mov inc fnstcw movb push and xor (bad) in std lock int clc in push push jge fmuls dec pop cmp cmpsl loop movsb pop push test pop add sti movsl cs cmp xlat arpl pop jle pushf sbb jge ljmp sub ja pop mov fmull std fildll adc xchg cmp or pop aam cli lock sub (bad) xor and jmp jbe lahf cmp mov add std outsb rorb push pop fstl sbb scas push adc adc data16 rorb insb (bad) shlb arpl lcall test mov cmp in xchg mov dec xor add push ror (bad) leave dec xchg outsl test stc imul es int in lds pop mov adc xchg data16 mov leave gs lds (bad) push push inc fisubl mov mov inc xor add push std pusha fs sbb xlat jge add repnz mov test packsswb mov push int3 jg out ret xor lods mov adc andl mov ret cmp je std jno scas or push (bad) outsb mov sahf jge aam cmp and les (bad) jnp dec lds mov mov sbb cmp mov in fdivs xchg lcall das rcrb pop fstpt mov adc (bad) ds pop data16 out cli js xchg cmc and ja adcl mov mov hlt fdivs lea mov incl mov into (bad) repz clc xchg stc stc mov push pop mov sub dec aam pop and jbe (bad) add ja enter fnsave lock iret or clc fcomps outsl pop movsb in sahf sti aam mov iret or sub popf ret mov cli leave adc pusha xchg (bad) sub xor arpl outsl (bad) mov bound loope nop sbb lock out pop mov mov pop out pop outsb mov loope sbb dec dec jo cmpl add ja (bad) (bad) les scas add cmc nop fs ret (bad) dec sbb lcall sbb jmp pop sbb xor fwait insl shrb leave roll mov mov and inc ja mov in hlt mov out outsb ja sub lea jnp das pop lcall cmp pop push in fs in cli mov cltd or and addr16 mov lcall mov ljmp mov pop and int3 out lahf adc ficom mov mov cmc sbb std out mov int clc sub mulb push mov cmp push xlat sti mov mov leave out mov das jmp arpl mov aas ret xor int3 cwtl iret jge pop fdivs mov sbb arpl call add push jmp insl cmc (bad) mull xchg cmc in inc or outsl iret ret repz pop mov push mov int (bad) stos sub dec xor cmp xchg cmp sbb loope ret dec ret in stos inc js iret mov and fcmovbe addr16 push mov sbb mov sahf mov sub xchg inc jo xor push jno sbb call mov (bad) or sub aaa jge in push jns fcoml or ja or mov xor mov into sbb push adc (bad) sbb jge aaa ret jnp fscale loop add mov ja movsl push loop mov mov movsl insl adc icebp xchg jecxz cmp hlt aaa fcoms or mov jne imul sbb mov or mov leave ja xor mov arpl (bad) lret outsb and data16 mov mov dec xchg (bad) fistpl push test js call mov arpl xor cmp enter jp pop inc fnop fwait push outsb xlat and jno fistpll jg sahf adc jge (bad) (bad) divb (bad) jg int push out loop repz jo in jecxz mull dec (bad) ja mov add xchg cmpsl ljmp sbb aad (bad) mov pop mov pop xchg fsubs outsl (bad) push mov icebp xchg ja fs inc pop jecxz dec pop arpl inc dec lahf cmpsl mov pop jnp outsb dec sub sbb add cld imul enter jmp pop pop loope stc push movsb lahf in xchg in clc (bad) dec or insl out cld mov cld test inc mov sub out iret xchg cmp adc pop ss xchg repz lret fwait mov ja mov jl sub out popf fdivrs ja pop je dec (bad) hlt icebp push push and dec xchg adc lahf out (bad) push xor fcmovnbe cmp push add xchg mov cs int pushf stos ret xlat xchg adc sbb inc jge mov xor or and js xchg mov mov stos jge adc add inc (bad) mov (bad) es xor cmp es jg int3 rcrb nop add fsubrs arpl shrl inc bound lret iret js pop popf int js je dec test out aad insb mov adc jb or (bad) mov mov inc notl push popf pop aad clc sahf fldcw sub ret arpl out jge mov rolb xor mov sub je sarb sub int3 lea mov lock outsl pop (bad) sub mov dec bound lea icebp aad fdivrl lods ja scas or insl stos xor (bad) repz aas shrl mov nop jae outsb inc stc push jle les stc js fs mov dec fcom add push xor add movsl adc mov mov lods push mov cli xchg cmp push mov xor arpl add idivb loop jo lret push ds dec xchg cmp (bad) push inc enter in adc cld in cmp in mov repz jns test pop inc cmp and bound dec sbb mov mov js cli adc sarb (bad) test je aad out mov js hlt mov jae roll inc push in pop mov mov jae push xchg fs (bad) repz jne (bad) ja mov xor shrb and hlt int imul in in jb popl fsubrp je (bad) add jo xor mov add imul aam xor pop popf fdivrl out int3 jl jg push jge pusha shl out sarb les insl jb xchg jmp or (bad) (bad) ja jo pusha push mov daa mov aad aaa mov push sbb es xchg movsl sbb pop jmp adc and scas popf jge push xor jp sub sbb cmp bsf dec fs jne sub outsl enter aaa mov jecxz inc push je sbb fistpl int3 mov pop out lods jb pop mov stos int mull jb cmpsl push loopne dec mov lea and dec into cmp pop jbe stos push lret (bad) aad ja movsl sbb pushf pop mov (bad) sbb outsl rorb outsl iret jno and xor jmp push mov pop add xchg inc lahf std pop shlb lret jecxz fnstsw ja imul mov add arpl sub lahf stos enter jl in push cmc arpl sub vcvtdq2ps mov fsubl cmpb (bad) cmpsl (bad) push fdivs xchg jb add ja xchg add jge ficomp push push lock jae xchg push xchg jge and test inc notb ljmp stc ss mov and ds jo adc dec push cmp xchg (bad) add vorps mov test add ja ficompl adc mov jns mov cli push insb inc push fnstcw jno jle in and cli push mov xor jbe mov inc (bad) push jmp or outsb aam bound xchg mov push lock into sub mov arpl mov mov xor bound rorl iret testl into jge pop (bad) out sarl xlat sbb aas jnp scas dec lods hlt cs push jl adc scas (bad) xor xor mov lods dec pop scas out dec rclb jg mov test lds (bad) cmpsl jmp popf aaa pop lret int imul push arpl pop pop push inc or (bad) sub xchg (bad) stos decl and insl sub sub int3 into hlt adc adc (bad) std ds inc or call (bad) or clc mov adc jge sahf fwait mov mov nop pushl jge (bad) mov ficom icebp aad (bad) loope pop cmpb fwait mov jp stos mov rcr (bad) in in jb ret insb push leave pop pop sbb xor push std mov jnp push (bad) cmc test jmp push ss repz lods aaa pop sbb cmp hlt popf sbbb addl mov push lock rclb pop xor and roll jno adc adc cmpsb repnz inc or aad xchg mov pop cli cld xor int3 in mov cs push lods outsb and mov outsl or mov cli test outsl mov jne jmp fsubr sub in testl icebp jae sahf adcl (bad) inc cwtl loopne fdivs ret pop pop mov push jge notb xor cmp xchg xor sarl jle fs aad enter push lret mov sbb hlt mov sti fsubs std popf pusha mov lods roll scas imul mov cmc jbe dec (bad) or dec arpl or in cltd xchg pop push repnz arpl jge cld rolb jp inc nop out pop ds mov sahf clc inc mov aad rolb pop into popf pusha adc shll vmaskmovdqu leave imull push jge cmp shl ds movsb repnz fist leave dec ja dec mov inc fisub and mov or adc (bad) mov jp iret adc jl jge fldl mov push arpl adc ret adc sahf out gs (bad) std sub movsl inc ret sbb lret mov fwait or xchg fsts sbb pop xchg sub roll lock in jg es aas repnz pushf fcoms inc add sti dec mov xchg fdivrl xchg rcrb push lret popl (bad) popf ret (bad) rcrl cwtl add repnz dec xchg arpl dec add je jae stc orl jbe mov and popf stos test imul mov xor iret and mov outsb in mov adc pop lock sbb cld outsb mov cltd xor aad inc jmp call ja cld idivb ret in bound push (bad) ja clc cmpsl xor cmp adc pop rcr roll inc std iret loopne daa cmp mov push leave add adc sbb mov lds lea sahf xacquire cli sbb cltd fidiv pop sti es hlt push dec out xchg sbb in loope or into and mov (bad) lahf jne xor rcrb pop ret (bad) sti cwtl adc pop arpl mull jmp sub add fmull fisttpll aaa test (bad) add int dec ja adc adc cli jne inc (bad) ret ja ret outsl mov fidiv xchg inc xlat (bad) repz int js out (bad) gs jne xchg or mov adc aad outsl xchg (bad) push and or enter aaa (bad) mov pop sahf (bad) arpl cltd push lods pop fistpll mov mov in aas out push push inc add and mov xlat dec arpl cmpsb rcl add and jge (bad) cmc dec ficompl ds ss sub add call pop imul jecxz lods mov es cltd dec mov xor jge in ror into jg lcall sbb syscall mov call add jge push cs pop lds (bad) add xchg mov fstl sbb outsl mov imul mov outsb or jge aaa push test mov and ja in jne dec jle inc (bad) sbb xchg mov cld sahf test adc jge rcrb pop (bad) xor fimull xorb jge idivb mov or rcl push jne fs sbb test push sbb push (bad) mov cli push adc rcrl push xor or movsb sbb adc enter fcmovnu xchg ja cmc xchg mov cwtl xchg xchg aaa sub out fsubl lods (bad) cmp (bad) sub ja sar out push and icebp (bad) test mov jmp loope mov xlat mov dec or push adc jecxz imul aam cmp add and inc adc cli jle and sbb js mov test ja mov ret sub and scas sub pop fwait jge leave cli mov mov mov pop cmp sahf stc sub (bad) and dec arpl mov fnsave notl ss mov push mov adc clc sarb aad leave cli lret mov mov dec pop loop dec mov sbb sub mov cmpsl popa sbb ret rorb push and fmulp in lods fmulp xorb mov aam dec mov xchg sbb mov imul jg enter ret or movsb push test outsb add or mov sbb mov sub xchg xor jns in in mov (bad) movsb stos jge add lods in xor jno pop or cmp fild sub in mov (bad) jne and in adc sub ret xor push int3 lcall mov fdivrs sbb mov mov jne aad fwait (bad) icebp ja add xor mov (bad) jmp sti pop scas call push xor or mov divb loope test jge pop (bad) fisttpll jno add push add xor imul pop xchg (bad) jle mov mov (bad) je jns adc call movsl ja pop sub cmc push out fcomps cmpsb mov fisttpll cli insb fisubl loopne push fstl scas aam sbb adc jae insb jge ja cmp dec cmc test popa mov ja jo (bad) sub pop dec test mov cmp icebp pop push stos mov mov xor mov lahf push cmpsb jae xchg in mov and jbe iret (bad) es sti mov mov lcall xor or push mov and mov pusha sub frndint jmp or push adc in push aad in and sahf xor sbb pop pushf subl inc xor pop int3 bound xchg sub xlat push cld (bad) mov pop xor adc lret out jno cmp (bad) xchg dec pop xor into popf test jbe mov adc pop dec insb cld sbbl jb scas ja sub (bad) fadd mov (bad) sub and sarb jp sbbb sbb sbbl cld cli out sub movsl cmp mov es imul cmp mov out sub ja sbb push push (bad) sub mov inc push fldcw repnz (bad) xor jno fsubl sahf in and imul ljmp jae xchg mov adcb lahf push fnstsw pusha aas jp mov std rorl adc inc into iret adc sahf mov arpl jnp fs es lods out xchg jno imul ds fcompl mov aaa xchg or adc (bad) addl (bad) std idivb repnz lret add mull out std lods in lods ja aam pop mov jecxz fwait mov add push cli arpl daa mov test sub mov leave sbb scas ret cltd adc (bad) push int3 pop and xor add xor in ret mov andl test adc cs inc fsubp rorb pop test bound add test (bad) pop or push mov pop sub and xor (bad) gs xchg pushf scas mov jge rolb sti aad sahf xchg sub jge cmp rcrb sub xchg cltd push sbb (bad) fstl adc jge stos push leave jecxz mov or (bad) sub jns jg enter cmpsl mov (bad) arpl xor scas xor arpl data16 arpl cmp dec pop ljmp sahf enter rcl cmpsb frstor sbb std clc inc dec pop xchg lods dec rol push lock or cli mov sbb insl into (bad) inc jmp push xor rcr lcall mov inc arpl xchg (bad) (bad) arpl (bad) loopne cmp aaa or jecxz sub (bad) ja in (bad) lret fcmovnu lods or and jae jle sbb arpl aad fdivs mov sahf and cmp shlb xchg xchg cmpsb into xor sbb adc mov sub or xchg mov (bad) fidivr mov pop pop push call je pop mov mulb add inc sbb pop sbb aam dec adc sti iret cltd mov test jge hlt bound addr16 (bad) ja stos hlt push sub cwtl das inc daa rcr pop adc outsl lea imul ds fidivrl sahf inc xchg mov adc dec add in fimull pushf out repz int (bad) fwait and (bad) test jp icebp mov test push (bad) ja sub cmp push cwtl call ficomp jne lcall sahf mov or adc cmp inc ss or jae jg (bad) emms push scas iret mov push sti lods lds (bad) or xor sub jl xor in xlat imul out icebp adc stos or (bad) ffree pop (bad) mov test mov xchg and in cmp ret cmp inc aam arpl sub outsb pusha sub es xlat mov (bad) pusha push pop (bad) rcl or push (bad) push mov mov aas movsl out test movsb dec fsubr and neg ja out mov or fmuls cmp sarl push mov fmuls int3 negl cmp sub stc sbb aas loopne mov jge cld int3 xchg aas popa ret js jno adc js and and (bad) adc icebp xlat sub aas mov sub mov dec movsl mov push imul fsubs jae cwtl inc jae aad mov adc in add adc jle cmp outsb rcr push hlt adc mov bound fdivrl mov pop mov movsl stc std aam push jae test sbb adc cmpsl sub jb repnz xchg push cmp jno mov sub ss js mov imul inc lea arpl imul lret jbe test pop cmp (bad) mov out mov adc cmpsl sahf add jge xchg mov outsl mov test push rcr cltd out fwait push jns mov xor in shlb lds hlt pop lock nop sub or pop jno cs mov lock fisub idivl mov and push xor sahf fmul add cli sbb dec cmc iret mov or xchg out sahf pop fs jnp test mov jne xor js jbe lahf aam popf dec fsubl dec fstps lods out and cmpsl mov or and je pop popf ja mov cwtl test jge push fnstsw sbb lods add mov clc hlt or fnstsw mov dec mov aad cmpsl sbb dec loopne dec push in xchg loop movsb pop add cs jecxz lret adc int sbb pop dec daa mov mov cwtl lea stc push jge into mov inc loope (bad) clc fdivrs fsubrp pop cmp mov (bad) fcoml aas bound sub imul repz icebp repnz fs and (bad) das add cld in stos (bad) neg add int adc dec sub mov mov dec and inc sub (bad) aam jbe inc push xor mov ror addr16 dec repnz ja adc inc in call enter lret lcall aam fdivrp fnstcw push cli sbb data16 pop into push xor aaa push in sbb popa stc xchg out dec rcrb test sti and icebp (bad) in shl call pop mov mov cmp repnz pop sbb push cli xchg (bad) mov div mov pusha js jnp ja mov cmp pop sbb les inc sahf inc lret shrb stc cmp hlt fimul cmp add cmp fnstcw lods sbb fmulp sbb js mov or or and movl pop or arpl cmc sbb xlat aam rcl cwtl iret cmp loopne adc repz xor inc jns and jecxz jne outsl in outsb sti push pop mov push xchg cld in cmp lods mov ja dec dec call repz repz xor (bad) js into ja add cmp arpl repz gs fildll ret xchg add push out jo ja outsl jle fist push out push mov jge,pn lahf ss and inc je xchg int mov dec loop pop popf dec xlat cmp mov or cmpsb mov sarl outsl jae imul insb aas xchg and (bad) pop and sbb sbb out std jl fcmove ret dec pop inc mov repz shlb adc fnstsw clc out or repz fwait xchg nop gs fadds fldenv jbe rolb shlb lods ja push jno addr16 mov push pop inc lock popf repnz mov and mov arpl sub mov in xchg aaa jle int3 aam cltd cmova loop arpl jb lock mov xor in sub (bad) repnz adc xchg nop and xchg mov dec out push scas inc divl or xor sbb add rcrl (bad) mov xlat sub xor jg jecxz push pop pusha popf mov (bad) in and (bad) xor lcall pop (bad) inc inc adc mov rorb lcall test xor dec test aad and aam dec xchg cmpsb adc ja ljmp (bad) dec dec loope fiadd fnstcw mov mov out mov xchg sarb add add das (bad) jns sahf ja stc into xor pushf jns iret fucomp lret cwtl (bad) arpl and mov loope lret sar aas lret ja ja pop xchg mov out sub leave test stos in test mov push (bad) clc ror jp (bad) lods ja in push pop mov inc in cwtl jnp rcl push out jge aas data16 ja loope pop vpmaxsw xchg and mov xor int les (bad) repnz fimul repnz push ret in repnz jo push ret adc popa mov and jl outsb ds inc xlat je push lods orb pushf inc loope jg sub mov dec pop in (bad) jge push jno cmp inc cmp xlat jns jae sbb push xchg loope cmp dec sbb shrb sub shl cmpsb xchg mov out mov arpl cltd mov js lret movsb test ljmp dec out pop and pop sbb movsb adc imul shl add push jge lret inc jb fistpl fwait cld into test ds leave and or pop sbb mov push jmp jo sti outsl in fdivrs or out cld lock adc push sar jp movsl push int mov arpl adc push dec jp xor pop gs les dec negl mov in xor outsl icebp cld addr16 jecxz lret mov rcrl lods push and fisttpl in sub (bad) cmp and (bad) ja stos mov adc xchg into leave and stos adc mov (bad) nop inc push aaa bound gs mov (bad) jo pop cmp lret mov fs repnz js pushf jno xor mov pop jb roll fcomps clc pusha das arpl stc test push ljmp mov repnz insb movsl outsl aam dec (bad) jno imul mov inc jge stos pop nop jno pop popf in loope int mov mov add mov lret lds cmp icebp sbb clc mov mov ret pop fsub ja je aam pop std lahf rcrb (bad) mov push mov push jge xchg and rcl (bad) jo lods movsl xchg push repnz mov fnstcw ja in mov int3 sub fisttp bound stc sarb push (bad) mov movsb push insl ss jne xchg or cltd lds push sarl in xchg packsswb lock push fistpll movsb movsb pop ljmp aaa xor or je sbb add std and and dec insl xor icebp popf push imul les pop jb jge fmull fisttpl jae or xor jmp pop mov outsb cltd out xchg cs idivb sbb mov enter and jp and adc outsb xchg cmpb (bad) mov jge (bad) (bad) xor std and mov jae ds ds stos loop or dec jge jmp xchg (bad) mov jbe jno pop in sub out idivl jecxz mov fmull dec mov enter aam test pop cli jns xor xchg insl enter and lahf jecxz sub xchg js dec cs pop jge xor push mov das repnz arpl or movsl (bad) mov cmc pop mov push dec sbb mov sub rcll mov mov inc fistl mov sahf dec push sahf iret leave insb jo or push leave cltd push cmc fmuls push jne cmp mov bound (bad) mov or pop adc sub aad push test mov (bad) fdivrp cmp cmc cld (bad) je aaa dec fmuls movsl popa stc hlt or xor mov push mov nop daa popf lret arpl arpl call lea mov inc mov sbb test je ret pop in sbb repnz and rorl xchg iret push push stc adc adc lret xchg mov xor and sarb pop daa and and sbb test cmc mov leave ret mov test or or icebp sbb int mov add outsb rol out dec data16 jmp clc inc add xchg jp pop and int rol fsubrs adc mov mov ja dec mov sub (bad) insb pop test loop xchg pop cwtl es pop ja cmp js je movsl scas mov sahf add pop xchg int3 mov push mov int ds cli push cmp incb into sahf data16 (bad) mov xor ss jne arpl xor jns xchg jge cs xchg or mov (bad) popf test mov mov pop jb jle pminsw lahf iret sbb lock xchg pop add mov test jge ss mov xchg in es loope call or cmpsb ffreep faddp fwait stc out sbb cwtl xor pop pop or inc dec movb jmp fisubl in mov add mov aaa dec dec cli mov mov les out cmp add lods insl cmp ds push push jge incb xchg xchg fcmovnu push fstpl push ja or popf jo pop imul or ja adc andb aad mov adc cmc adc mov cmp movsl jge je xchg (bad) in test cs mov icebp cmc in inc or stos test pop jge loope cmc jg push push jle jge (bad) divb xchg mov xor repz xchg dec ror and sahf ja mov cld out test stos mov arpl inc sub in daa jb sarl leave pop push xchg inc pop sahf mov sub rcl jb mov pop movsl inc (bad) push ftst sbb leave ds (bad) hlt adc inc mov lea push fnstcw push cmp stc mov (bad) arpl int3 xor mov jl scas xchg mov aad fadd xor mov dec pusha out scas cmc fstp inc arpl popf push sbb leave push sarb fdivrs enter sbb jge int3 push cmpl jns shll xlat in notl sub outsb call and arpl jnp sub mov lahf (bad) mov call dec (bad) or push mov add jne mov xor rcll xchg fidivl std ret sbb ljmp std and adc fwait push (bad) push xor push mov call and imul cmc repnz xchg ja xor jnp add xchg (bad) shrl (bad) out sti (bad) xlat test fmull out sbb fadds rcr inc sub pop popf xor aas or sbb and mov lods in popf mov jb or mov loopew xor inc sahf out mov dec sbb cwtl arpl jecxz mov cld ljmp or adc mov jecxz add pusha pop inc sub mov lods ret push fwait data16 push aaa or sbb notb int lret sti fnsave in cmp dec pushf fisttp xor inc out pop mov mov inc push dec dec push jb lock jnp pop ja cwtl mov rorb sub push adc sbb fdivrl inc adc mov push mov jge pusha jmp ja jmp shl lret (bad) (bad) mov nop xor inc push insl jno xor fidivl fmuls jge xchg outsb out cmp in add (bad) fadds inc mov pop leave jae ja shll mov fldt hlt inc push and fstl mov (bad) in push xchg cmp inc fadd lcall arpl and sub mov mov ret fisubrl ds mov sbb add cltd add push sbb sub add xor into dec bound pop pop dec lret pusha push test fdivs and out mov mov pop data16 sahf adc lods push mov addr16 jno sbb dec and ret std pusha test mov cmpsb push ds ja push mov lods std shl mov xchg scas sahf fcomps cwtl sub xor xchg jp repnz xchg or mov sbb ja aad std cmpsb push fisubrl xor (bad) ficom xchg ja fcmovbe push xor scas insl movsl push dec sbb fisubr cwtl aad int xor daa in inc inc or hlt repnz push xchg jl movsb and xchg aam cmc mov push adc fcmovb sar push out movsl test xchg fwait sbb aas int ja imul pop dec les cmp das inc test push jle (bad) jb jne lea jae lret mov sbb bound cli cli inc ficoml jmp imul pop cs add pop iret xor in cmpsl mov push jno scas ds pop jmp std fisttpl popl lods cld sbb hlt (bad) aad outsb sbb arpl lods xchg in out pop cld (bad) testb mov sub inc call sbb adc push mov scas in sbb pusha cmpsl fsubrl jmp ss std cmc in lret ficom cmp test int3 adc dec in mov pop shrb xchg push pop roll ja lods and mov or fmuls and xchg jno les insl push add aad stos repnz mov mov add cmp cmp (bad) aas adc push std ja pop (bad) idiv push jno fisttp daa aad xchg adc and mov loop xlat jno fistpl sub mov pop push add adc jae (bad) icebp popf lods cmp mov rorb testb clc fsub cli xor fs rep xor mov add (bad) in mov sbb cli aas lods dec int3 sbb mov in ficomp orl push inc daa sub jge int imul (bad) lods idivl mov xchg mov arpl xor mov adc ss (bad) sub fmul repnz call xlat les mov adc cmc and mov jae mov bound jge cli rorb inc outsl leave push push pop sub jmp mov cs orl into sbb sbb inc xor (bad) sbb out outsb mov inc movsb inc xchg (bad) nop les imul pop andl (bad) mov dec push jge mov ljmp add inc call xchg xor and imul sub out rcrl fwait gs sub push popf daa sbb ja jbe fwait or and lock (bad) shl mov (bad) xchg ds test sbb icebp pop test add aas push cmp push xchg stos ja stos pop icebp mov jnp mov or in adc ja lods in jge xor out (bad) scas dec pop (bad) arpl add std int pop or jecxz or test repz xchg ljmp sub dec sbb das sbb (bad) mov aad adc sub into and sahf pushf adc (bad) mov xchg iret adc lea jecxz sbb enter pushf push inc frstor test aas (bad) mov mov clc jecxz,pn stos jecxz sub add adc sbb negl push int neg addr16 sahf aaa mov rorl push xchg xor leave fdivrs ja int3 decl bnd bswap add jge push push add fidivr les sub cmp out pop je flds jmp and (bad) adc (bad) repnz (bad) and cld repnz or out push mov xchg inc cs sub neg ja pop xor pop arpl (bad) mov out cmp sbb data16 popa movhlps cmp imul xor push and lds pop das movsl int inc leave scas test sbb test or enter or pop es lock dec arpl cmp add sub dec clc inc lahf push scas mov je clc repnz cmp js arpl out dec mov outsl pop push movsb cmc push jge mov cld (bad) popf sbb in not jg xchg dec mov pop loopne ja std stos cltd or push lahf movsb jecxz xchg bnd add f2xm1 jmp sub loop iret sahf inc jg call or dec xchg jo jecxz cmp xor ret scas and stos jg push test push pusha rclb and sbb daa int stc cmp rorb (bad) outsb cmp lahf (bad) fcompl repz push sti repnz icebp fmuls jle pop sub or adc sub push into mov mov jo insb mov adc ljmp insl dec jns repnz jbe dec cwtl jge mov (bad) (bad) jo sbb lods jne sub sub clc or sub (bad) (bad) ja in and ficomp inc mov nop js inc loopne xor stc aad xchg sahf in cmpsb cli xchg in mov xchg mov push lods fsubr test lret sbb (bad) sahf pop stc and sub cmp mov xchg movsb sbb mov aad push inc push outsb jge pop loope and icebp sub xchg daa pop les pop cmp sbb scas out xchg cmp dec (bad) stc in or cmpsb push jnp test dec cmp xor cmp or rcrb arpl adc sbb cmp xchg fneni(8087 scas test dec sbb adc pop ja in testl fcompl test mov pushf insl mov dec mov and mov push ja cs frndint shlb inc sub inc xchg cltd xchg bound sub mov pop xor push xor imul pushf mov stos cs inc std gs push cmp adc aad adc sbb sub inc int in pop sub aaa add mov out cmc sub jmp lea insl loopnew jns lods loope sbb cmp loope adc jl push xor cmc es movsb dec push jno pop xchg fs cmp inc sbb movsl push mov adc arpl jbe jb cs daa dec cwtl in ja int3 jns pop stc xor in xchg xchg leave leave jge mov (bad) pop and push xor popf lds cmp push cwtl xchg fucomp inc or adc cmp nop jbe shlb mov test mov sub jcxz mov inc (bad) ja dec daa or out fldcw movsl xchg jge daa xchg insl enter fs sbb cmpsl adc push inc lods sahf enter fcomi pop push cs mov ja into jecxz sbb sbbl push mov aam mov xor or nop out hlt sahf pop add fnstcw test mov into popf dec emms pop fldenv cwtl sar cltd xor push push cmp jbe jae arpl scas xadd pop fildll mov or sbb aaa push mov mov rcl pusha sbb and pushl pop sbb lcall sub outsl mov sti push push mov mov mov popf fnstsw push xchg ja aaa dec pop icebp jecxz mov fimul sti mov pop fsubrs lcall and rcrl ja cmpsb pop fcomps ret push fildll lahf mov aam stc xor fwait cmp adc shr outsb or aam notb mov stc insb sub sarl adc loopne aam and jl cltd imull sub mov (bad) repz push add out outsl push and leave movsb sti clc jle ret jo cwtl jle imul jbe xor loopne,pn shll daa test and jnp stc add jnp nop dec negb xchg loop or es arpl mov lret mov jl (bad) jmp jae mov dec inc div negb int jns sbb test lds (bad) mov lods in (bad) mov into ja fdivl je pop ja xchg test movsb lods push aam mov push loope xor daa pop iret (bad) (bad) mov std and test cltd push xor scas arpl lock lahf ret jl (bad) imul ja popa cld js (bad) mov mov enter fcoms push lret leave imul mov (bad) (bad) (bad) mov push mov int xor ror int add jnp loopne insl popf xor std cmp xchg ficom bnd sub adc ret jae cmp clc pop fdivp and sbb push push xor inc pop ja fsubp pop in adc xor std arpl sbb push mov mov outsb xchg repnz shr repnz push aaa mov int jge loop pop (bad) ja mov rorl xor popa in aaa rorl xor faddl cmp test popf in mov (bad) push and add push aad push dec adc sbb adc and mov add mov xor add mov mov jae inc push or ret cmp dec lods add adc popa mov cmp jle pop adc (bad) int3 fmuls xor jg fwait leave fstp dec adc push jmp pop adc jmp ret cli adc mov stc cld mov pop push cld push jg xchg lea sbb movsb add add js mov and xchg divl enter shrl or leave xor sahf (bad) fwait mov sub aas out jno (bad) push les jecxz movsb jo mov jmp iret loop cmp arpl and dec nop ret xor leave xchg mov ds mov jge mov nop arpl out movsl popa lods sbb (bad) xchg movsl sbb xor jge dec jnp sub xchg mov fdivrs and push lahf jns insb jecxz pop call aam cmp pop jns out pop lds cmp in mov fildl imul xchg inc ret cmp xchg sbb mov pushf lea data16 lcall sub pop (bad) or ja repnz (bad) mov aam adc cmp cmc push dec cwtl sbb in inc out adc push adc ss add ja stc mov (bad) into and scas loop inc leave jle mov out push ss in fnsetpm(287 lds pop mov inc cmpb hlt mov fisub pop dec (bad) test push sbb in xchg imul enter dec movsb (bad) jne cmp jge sbb mov fyl2x mov arpl and and shl into stc stos and adc adc leave xchg fs push icebp mov mov mov ret je jbe xlat loopne adc mov int3 out mov ficom imul loopne mov lock jg push out int3 fiadd in ret push stc (bad) mov icebp clc fwait stos iret pop pusha mov aam (bad) arpl daa jnp push fdivrs push aaa lods pop ja test jp inc (bad) inc dec out mov out shlb int3 leave je mov or xchg jle mov js iret cltd loop sbb xor adc dec lods jecxz repz fiadd mov cmp sbb int sbb and jge pop (bad) pop adc and in aaa add mov jae ja xor stos test test hlt sbb jge fwait pushf insl hlt sub (bad) clc inc (bad) pop ja aas iret cmc fcoms cmp add cmp arpl sbb jl pop insl (bad) pushf cs hlt aad push shrl adc arpl pop or cmc adc out in arpl add mov jg fdivr data16 adc cld insl xchg and push xchg (bad) or es lea insb pop inc das leave stc rcrl dec ja push adc push jae or jbe mov lock (bad) and test cmpsl (bad) adc dec mov (bad) mov (bad) jge shrl into in mov or sahf daa dec or arpl int3 jle test arpl fistl cmp frstor add cltd sub xchg jge cwtl sbb pop pushf mov mov call cltd and ljmp loop repz xchg mov mov cli sbb xchg sbb mov cs jge int3 fldcw leave jb xchg jno insl out cmp cmc test jl stos movsl js emms jno mul and adc inc push (bad) ja cltd xchg xor push pop lds rol mov aaa arpl mov mov xchg mov jp test add andb bound int out in and cwtl arpl (bad) ss lret push pop and (bad) ret das daa jecxz add xchg test mov adc sbb jge sbb mov iret pop lcall dec mov fsts ds cs arpl ja pusha push push mov mov ds push sti decl (bad) fdivrs push cmp dec sub outsb ja in (bad) shrb xor pop aaa fnstenv adc addr16 push add cmp arpl pop sub push and push sbb clc insb or xchg pop in mov lods cli sbb loope aam adc ror imul fiadd add fs pusha mov or inc push mov push lret popf ja mov sub dec in aas test arpl stos xor test mov rorb fmuls cmp fwait out push cmp adc push call push ret inc enter adc call fdivl jle xor fldcw mov lea jnp subl push fstps into push test mov dec adc sbb cld fcom jge (bad) loop (bad) stos (bad) and jecxz aas insl (bad) mov daa jne mov mov fsubs adc inc adc rcrl arpl dec std adc inc int3 add test aaa xchg mov mov (bad) loop (bad) fwait ss sbb aam dec icebp pusha repz add lods jge pop subb daa pushf jns and fcomp call xchg jo cli hlt into mov movsl leave clc mov leave mov dec popf andl xchg lock adc frstor lcall or dec leave pop ds add fstps cli push pusha mov ret dec in sbb mov dec ja sub (bad) ret xchg jbe jo divb mov cmp mov inc repnz loopne insb jmp sub fimul mov xchg mov lock inc dec push data16 popa ficomp adc movsb mov mov jne xchg cmp pop in and mov test (bad) and ljmp cmp sub pop arpl pop xor cmp cmp mov cli mov sti mov jge outsb ss or imul push xchg sub imull fcomps sysenter xchg inc cld xor ret (bad) test cld pop fistpll and adc add arpl out iret cwtl add xchg imul ja xchg negl or (bad) mov pop iret repz jne pusha popa or adc inc push ja sbb mov out (bad) daa mov les out add les ret add arpl dec std sub in or mov lea arpl jmp mov lcall inc in leave movsb (bad) fidivr xchg jmp or pop pop and pop mov xorps pop dec add jge jne mov arpl cmp sub dec or jge data16 inc and jne sbb mov push push (bad) sbb dec push aam sub cli popa ss cmp and push xchg pusha clc inc cmp dec lods jb mov push icebp pushf sbb clc mov push sarl js lldt aaa push test (bad) push sbb icebp xor push xchg dec mov cld jnp mov arpl ret out leave sub popl jae or inc xor into sub outsl and and pusha and les call xchg aas (bad) aad jge (bad) arpl les xchg daa ret jecxz fsts popf cmp loope (bad) mov push test adc xchg mov loope in inc repnz mov push out jge cli outsl pop mov int3 lods stos movsl stos lret cld sahf ss or mov jg arpl das lea adc sub mov jnp imul stos add jmp ljmp adc aam xchg out ret in mov iret pusha popf bound jnp adc addr16 and (bad) and iret or arpl rolb into incb into popf pop dec mov loopne pop sbb pop insl ds out scas pusha fs xor (bad) fimul bound xchg mov cs int3 push popf fcomps ljmp int3 sbb out mov sbb (bad) sbb lret sub (bad) addb push aas pop roll sbb jge push data16 aas out popf adc jge loop (bad) loope lods test negb repz inc test jge daa out arpl mov and and sub sbb sub xor into xchg inc mov fistpl push outsl pop dec shrb movsb pop outsb clc mov or fisttpll push enter scas jb sbb sti aam pop scas inc roll jbe imul icebp xchg test cmp xlat enter jbe aam test (bad) lret adc scas mov sub loop clc mov mov xorl xor push ja out push sbb sbb fcompl (bad) icebp jl aas out push xor in jb dec add data16 lock fmul xor jb xor sbb fisub test (bad) popf pop loop add mov sbb ja pusha in jl popf inc and jns sahf jecxz aaa jne out cs es mov push sub mov (bad) or mov scas jmp testl das lahf bound inc pop push jp dec adc sarb popf push fs inc repnz pop jmp add stos xor lds and (bad) cs xor lahf lods mov lret jge mov or lods rcrb in inc xchg icebp mov fs flds pop outsb pop movsb roll clc movsb jno cmp adc adc xchg cmp mov popa (bad) mov cli or outsb or enter sbb int sbb cmp mov inc clc loopne cli test xchg repz xchg fcomps orl mov ja iret aaa fimull sbb movsb cmc ret lods (bad) pop push into xlat seta aas cmpsb push xor inc lods inc adc add scas cli cmp pop cld int fs mov cmp es dec popf in imul cli ficomp sbb push mov hlt ja inc inc (bad) hlt sub (bad) xchg mov pop leave nop adc out xor pusha loope into inc js push int lea outsl daa (bad) cld repz mov sub cmpsl mov mov or cld sub cmp mov jl cmp xchg jp push push test sub mov push push les es arpl jge jge mov cmp sbb or sub adc adc dec ja jae mov xchg xchg testl into rolb xor sbb call or dec je pop jge adc or pop fcoml mov jmp mov gs ljmp test cmp daa clc lock mov dec push fdivrs int3 xor popa cmc clc imul jp pop adc out mov xor stos pop mov fs push mov mov cmpsl lds mov push inc sti dec ret outsl pop adc cmp xor das dec sub add rolb daa sbb inc stc fnstcw jno sbb mov not mov popf cmp mov sbb stos adc (bad) mov push xor (bad) cmp rorb jge test int3 mov sbb add mov and sub movsb loop inc je stos pop (bad) (bad) into sub or scas (bad) dec cmp stc jmp testb pop cli outsb mov add add dec loope adc pop push (bad) xor push xor dec neg sub (bad) cmpsl sbb xchg outsb or lret test out bound dec movsb faddl ja insb or test adc in (bad) pop cmc mov cli cmp cmp cs sub xchg jge pop sbb or dec xor test mov push mov scas mov notl sbb xchg cmpsl in int3 xchg pop sbb ja mov sbb into movsl xor lret fwait in packsswb xchg scas cmc sahf pop popf fidiv mov arpl pop cmp out ja jl fmuls jge ret sbb rorb pop mov int3 or popl (bad) movsb mov movsl fiadd aas dec lods (bad) cltd push inc or movsl das dec jmp int mov in insb xchg mov cld mov mov jmp mov outsb stc xchg icebp xchg pop in push xchg xchg mulb mov jo stc je mov hlt xchg sbb into sarb shlb test fsubrs add imul into push arpl outsb call je adcl stos xor int shl jbe pop test push rcll jge outsb inc push (bad) ja sub jl stc icebp mov or mov push dec out repz sbb sbb (bad) pop insb jbe jbe andb sbb inc jbe pop push jmp or stc and adc sbb cld inc ds fwait inc xor mov push das testb icebp mov icebp inc shl jns ljmp dec push arpl adc aad arpl fmuls ret lret mov lea std inc je pop dec sub and lahf scas imul in flds cmp sti imull inc out push mov xchg fimul adc sbb (bad) repnz sbb rolb (bad) shll daa mov jns jg out out xchg jo leave lea out into jbe pushf push fnstenv popf and push pop pushf dec lods jo cli fistpl loop or popf mov scas push insb out arpl test adc mov lcall (bad) mov fsub (bad) (bad) push mov cli cmc sarl push jo inc pop les in push mov cmc push ret xchg mov js pop mov out vpsubw aas (bad) cmp jp stos clc lahf imul cli push arpl je loop iret cmp outsl clc mov push das je mov out pop sbb inc jle jbe xchg gs pop mov jp shr ljmp sbb cli cld sbb jle mov loopne arpl mov test shrb pop fistpl ljmp repnz xchg aad jl pop xlat (bad) (bad) fsubrs sbb frstor xchg call sub push in and push jne out nop sub add scas push push lret std push cmp into xchg aad decl and jp dec mov ficoml xchg sub dec mov (bad) sbb xchg sbb fcmovnbe or xor repnz or pop cld aam jl shl mov repz pop (bad) pusha or inc xchg pop mov inc adc push ror push fdiv mov lea (bad) (bad) xor push out insb ret or cmpsl int inc movsb and aam and pop leave out ja pop fnstsw sbb out mov les mov pop fsub pop cmp repz fisub ss mov push cltd sbb sbb add (bad) cli (bad) movsb adc sub adc imul jge xchg cmp or sub cmp arpl adc (bad) les (bad) into xchg sbb mov in lret sbb jle bound push mov inc test mov das or addr16 das fdivr add inc fadd sbb pop dec arpl int xor rcrb icebp ficompl cmp lds lret pop imul mov mov test cmc cmc ja cmc idivl adc mov clc test mov mov sbb mov jns repnz mov jge leave dec sbb into je fsts jl add cli sti dec dec jbe out icebp push xor cmp daa stc jl push scas test mov repnz (bad) jge (bad) popf xchg cmc ret lods fwait mov mov arpl jnp push in cmp je and adc aam push or insb out mov mov mov lahf sub jmp in xchg mov cmp rcll ficomp mov (bad) icebp push js shl sub mov stos lcall sbb adc js popf leave pop adc adcl lahf fwait bound sbb mov lds mov scas push xchg jo pusha hlt arpl rol fidivr pop push mov lret xchg (bad) loopne (bad) loop popa lods push enter cwtl xlat sahf arpl push dec ret fcom lock mov or jo pop sub xchg and or in out xor and xchg (bad) fdivs es pop mov lcall xor mov fwait lret cmc pop mov and sub aaa jg (bad) ja (bad) mov out test sub xor (bad) and enter repnz ja mov loope ret cmp push inc stos sbb push incb mov jle jle stc mov and in ret jl push movsl pop mov insb movsl xchg out scas cltd fisub adc int3 mov lret out (bad) ja cltd js jecxz sub cmp lea popf mov cli pop or nop mov sub idivb lods iret push xchg lods mov lahf (bad) es int3 jne leave test (bad) into sub or arpl adc sahf fcoms jge cltd in loope pushf (bad) inc nop push mov or xor push or test push dec xchg (bad) repnz fwait pop or xor test ficomp loopne (bad) cmc xchg movsl pop (bad) xor sbb (bad) mov adc lret clc push jecxz call dec adc mov sahf addr16 sbb insl cmp mov test xor ficoml cmp mov cmpsl bound into push movsl and fdivrs (bad) arpl nop testb inc xor in mov jg sbb sbb or and sbb popf ja mov jno push cmp int3 sti neg dec or mov xor and jns and jle jge pop mov mov mov jecxz adc or scas mov mov push jle call rolb icebp call arpl xor ljmp push pop int or mov sub push or inc jl inc ret and xorb (bad) fnsave bound int3 popf cli dec lods xor je jbe pushf popf mov rorl test sub sbb jl js std and rorb cli gs sbb mov mov cmp cmp jnp dec pop fisubrl rcl add test xor xchg xor xor iret jb popf in jp sahf repnz xchg leave sub add or test daa icebp popf outsl sahf and xorl jl shlb or and movsl push adc push pop arpl dec push sahf lea fyl2xp1 inc xor movswl aad mov outsb pushf stc pusha adc sbb jbe hlt insb lds (bad) pop pop in out loopne mov jo cli fmuls test out jge cmp inc clc test add test aas mov fmuls out cli shll in push dec addr16 mov cld pop xor and enter fidiv test push adc or pop fdivrs imulb (bad) fidiv xchg xor xor and jo jo xor inc notl jns cmpsl daa or jl (bad) mov loopne jo fincstp xor dec ss dec sub lahf loope out pop rorb divb lret mov rcll xor or adc jecxz ds daa xchg push fstp jbe jge add push arpl xchg outsl std jns add (bad) das cmp mov rolb inc ficompl mov pop int popf mov adc ret popf les cmpsb adc pop jle or jg push jl inc dec mov push rcrb jne and cmp aam mov push and lahf fnstsw sbbl ds push dec (bad) lock or xor int3 cmp jo xlat add and dec sti insb mov adc pop ret enter cmp data16 xor jp push xchg mov jge loope push sub fldt mov sbb mov mov lret xlat sub jns inc leave mov xor mov mov pop jp mov movsl test jns mov add sbb xchg cs sub (bad) mov pop cmc pop cmp mov dec jns fs mov repnz loop (bad) movsl dec mov push out lock iret lea mov dec popf adc fnsave nop cmc test je and push arpl mov push adc jo test jb sub clc ss or mov mov jno cli jl nop push ja repz dec inc mov test sub xor es xchg int cmp sub cltd inc adc stc test push arpl fcoms jae ss and in js pop sub mov cmp sub loope add sbb fs out insl sbb mov (bad) cmp inc test dec mov pop jno (bad) mov lcall push nop jae mov nop ret and adc mov (bad) loope add sub pushf dec lret mov dec das pop jmp mov (bad) mov push dec inc sbb sahf dec jmp inc ret sub jmp subl fld sub gs in sbb inc scas cli sarb adc aam adc aaa mov fdivrs movsl mov ss mov xchg jne ret lods ret loopne (bad) or sub dec ja loope push jno or cmp add sha1nexte push (bad) cmp ret clc push in cmpsb pusha adc sub hlt aas pop cmc xor ret (bad) jg xor aad pop push add inc xchg stos push aaa or and fimul rol mov stc out sahf jno gs cmc cmp pop jae and push data16 sub dec in rcr movsl sub or xchg push jae iret cld dec es xchg in inc and cwtl sbb pop jg sbb xchg push cwtl mov sbb sub jb shll pop shlb daa cmp add lcall (bad) test test push cli rcrl and ja xchg inc cld test mov cmc sub popa sarl outsl xor and push jle,pn push ss or jb cld lods int cwtl jae out fs iret subl addr16 pop pop mov (bad) ja aam dec sbb rcl ja pop outsl movsb dec adc jl cli or pop xchg push add flds nop pop nop push rcrb cmp inc push ret mov into mov inc jns test (bad) xor (bad) daa cs jge imul pushf dec xchg nop pop shl das cmpsl outsl int3 loope in arpl xor cmpsl mov xor sub mov or (bad) push ret adc clc add call fildl aas scas ret adc test pop cmp pop in pop (bad) ja mov fsubs push iret mov je repnz jbe dec cs jmp stc popf shl cli cs lret les adc sub add (bad) lea ds add xchg jo (bad) arpl icebp and icebp enter sbb dec arpl shrb inc shlb sahf mov loope out xchg ret cwtl (bad) mov xchg rcrl xor push and ja sbb add mov xchg lea std fwait and outsl push lret call ret shrb xchg icebp pop cltd inc mov jl sbb push cs test push (bad) jb gs out mov icebp fidivrl mov inc jp xor xlat mov ljmp and jge (bad) lds sti adc cltd hlt inc movsl movsl mov xchg outsl sti dec jns and inc sub shl out xlat mov (bad) sbb mov mov ljmp ret xor cmpl stc das cli arpl and mov pop ret xor shlb add ja xor testl popl push xchg insl (bad) pop mov repz jg (bad) in push cltd sti ret daa in popa sbb mov mov jne add mov xchg bound ret add sub je pop into iret dec push cli jle dec and jae (bad) mov lahf jo test lods cmpsl scas outsl lods xor fnsave jle pushf add cmp imul clc test jg dec les into lds outsb cli cmp aad frstor (bad) cld add lds pop mov lea sbb push mov in pop and mov mov and loop shl inc je sahf pushf in or mov jge das xchg mov fdivr outsb clc int3 (bad) (bad) sti xor clc in test lods push popf cmp cmpsb lods mov repnz xor lret sbb sub push aas rclb fcomi jno (bad) sti push adc mov push and xor push enter xor daa cs cmp and imul cwtl hlt test xchg push sub mov or or pop out loop xchg fldl popf sub arpl lods add adc (bad) andb push cld lock in pop or popf sub dec sbb cli adc or ds mov in std js aaa or in in arpl int inc imul clc jge mov fimull jge scas mov adc (bad) iret scas hlt sub enter xchg rorl inc xchg sarb stc sbb adc dec or scas out mov ja push test jle icebp inc cltd inc adc jecxz test pop test push (bad) fs sahf in fsubrl sbb ja jmp (bad) stc arpl popa int adc pop and arpl jecxz push pusha ret dec jbe sbb sbb fistp mov mov dec mov rorl rolb mov jb mov ljmp mov repnz insb movsb push mov mov mov or fildl adc cld in push or fsub pop movsl nop hlt pop push ds popf mov rcrl and mov cltd (bad) inc jecxz ja in rclb scas fisub jae sbb fisub or sbb fdivr repnz repnz mov or out mov sti mov sbb jno mov push cmp push js sub test or jecxz pop ret nopl add inc push arpl xchg cmp sub nop mov loope sub repz addr16 mov enter (bad) or sub pop popf (bad) pop (bad) gs sub insb ljmp and divb jns jo mov js cmc rorl add mov mov adc push leave mov jg mov imul adc dec mov and fidivrl lcall cli mov nop fstpl fcom popf jge loopne rcl cmp xlat cmp sbb jmp lds xor and out mov push inc xchg and xchg (bad) dec mov stos (bad) ficom jle (bad) add insb negl push sub sbb fbstp adc cli shrb and or jbe xor aas dec mov mov arpl lret test push cld cli dec xor cmc stc (bad) inc jo and fmuls sbb jg xchg rorl jge fwait out rcrl arpl ja mov xchg std in in out int push mov (bad) xchg or (bad) pop and and fxch rcl push push jge pusha inc shlb sbb out push (bad) ficomp es cmp emms sti xchg arpl test insl inc lods lock sbb or mov dec sub insl or sub fstpl inc rcrl inc dec inc and push jne iret mov mov cmp cmp fidiv xor inc das xlat adc pop mov pop cmp lcall int sbb loop or push insl je mov sbb (bad) in inc fadds push or mov jmp out sahf pop les outsb lock ret ja push add jge adc adc sub inc rolb (bad) es push stos popf jnp push leave push and arpl scas xchg movsl ror outsb push push ja (bad) aad xchg inc gs arpl xor out (bad) lea cmc les lcall data16 scas mov push fmul aam (bad) sub add fistp and (bad) ja xor and shl aam call or xchg pop (bad) lret enter ss sbb mov push in mov sbb inc idiv lods pop outsb push test adc adc push daa ret inc cld arpl xor push cmp cmp push lret test jmp mov sub xchg jne (bad) std push mov push (bad) sarb popa icebp inc (bad) ja adcb jne jecxz fdivl sbb inc jmp ret ret mov mov push (bad) (bad) or rclb xor push outsl je std dec sbb arpl clc inc lahf xor pusha mov enter dec out ja sbb pop ret pop mov arpl hlt sbb cmp das cmpsb sbb scas inc in sbb out mov int3 aas (bad) (bad) rolb enter aaa sbb jge cmp pop aas popa pop cmp ljmp push aad out mov pop inc sahf (bad) adc (bad) repnz adc out call push and std xor mov ret ror cli push xchg clc cmpsl fistp clc push ja mov or mov clc notb lea das rolb outsb or call xchg push loopne adc shlb inc xor mov dec push xchg dec ret or add (bad) leave mov popf jns mov arpl imul jl (bad) jmp stc je lods or hlt mov loope in adc xchg push cmp aaa inc sub sub lods jbe mov cltd repz adcb and add arpl sbb in ds test xor lcall ljmp mov and cmpsb and popf mov rorl xrelease fistl not jns repnz dec dec mov icebp imul jo lret popf add mov xchg sahf repz fmuls dec bt in popf ds mov add pop sti jecxz sbb outsl push or xchg in sarb addr16 iret pop xor or pop jge xor iret jbe xchg leave aaa adc fwait push icebp xor movsb xchg bound test jg push jge sti sub arpl rcr (bad) lret lods sbb test fbstp arpl inc jge lcall fsubrs in insb xor pop pop lods (bad) rorl cld push fstl shrl jge mov nop popf cmp sarb fdivs cmc outsl (bad) adc or fild out mov aad lea cmp in pop pop dec pop imulb mov ret icebp cmc das pop iret add xor hlt addr16 scas lret ja enter out cmp lods cmc dec sub mov fcoms push ret (bad) jg outsb lahf sub jo ror nop insb mov test enter ljmp stos cs shll loop mov out sbb cmc loop pop gs or cmpl ret inc hlt les (bad) repz pushf mov inc pop jl push movsb xlat push aas lods jns cmp or sbb push pusha mov jb mov leave push push jp repnz jns push int3 push mov ss mov sbb dec xor movsl fsubp stc lcall xchg cmp sub sub call scas push or arpl (bad) cmpsb lds and icebp sub inc sub pop mov ja jmp and xor ret insl (bad) aas and adc or clc iret sub dec scas gs fcomp add adc ret inc pop mov arpl hlt jb adc scas out cmc jae (bad) sub xor out ja enter fisttp add add les (bad) clc out jge lods xor adc int3 pop mov (bad) push push arpl dec lret movsb mov data16 repnz and dec mov arpl dec push mov pop add xor dec jne ficompl cmp jo xchg push popa mov sbb jo push ret (bad) stc xor sub or jp mov std loop mov xor adc ret jne and inc xor pushf jb inc sub pop add out int3 sbb aas xlat push repz iret inc lds pop xor rclb ret rclb frstor mov bound and sbb pop addl jl bnd sbb repz sub repnz outsb xor ja insb lret cmp cs fildl or push mov dec cmpsl pusha push inc in xchg mov dec sbb (bad) (bad) icebp or or adc (bad) fld cwtl ja adc shrb inc inc stos popf out aad sahf pop imul mov jle and insl repz mov mov arpl cmp cmp (bad) push rorb lock out (bad) pop add in (bad) xlat add and pop xlat mov mov gs mov clc mov cs jbe jae rorb sub jne arpl call rolb cmp sahf sahf add dec and pop dec adc popf mov mov push pop arpl bound push jnp roll popf clc xor mov clc jmp cmc xchg sub add mov shr push aad sbb and cltd faddl ja stc int3 jle daa cmp pop (bad) pop add jbe lock in add sub adc (bad) xor iret dec or stos ss push xor (bad) lret sub test in pushf dec cmp rcll cwtl lret arpl std jns shrb add ja lea cmc test cmp ja push (bad) sub xchg jge xor dec aad cs into scas (bad) loop pop dec loope adc enter aam sahf int3 xor mov push xchg mov rcl das ja int push jns pushf push lods fdivrs jmp add fnstsw pop jl imul lds add out std cmc addr16 (bad) fcmovu add adc push adc jbe int3 bound dec in cltd and (bad) hlt in adc push ja xchg lret repnz out fadd sahf lret cmovge push or sarb ret mov arpl loop mov xor js xor mov lods cwtl add test push in int push and movsl ds jb inc movsb jns cmp and push aas mov inc addl scas fstpt lds or pop pusha out lds out hlt es push adc lahf cmc cmp adc sub xchg int push ja mov adc pop add mov push stc pop sbb mov shll sub fs (bad) jge adc jne fld and push outsl sahf or sub leave pop mov cmc iret pop repz nop sub jle rcll sahf stc clc cmpsl stc (bad) bound sbb cmpsb xor or lea test int3 mov inc out dec jge inc sahf jno mov int3 (bad) repz mov inc addr16 scas nop (bad) leave mov add (bad) sti pop ja daa cmc fs jo push mov and pop cmp ja mov mov lods mov xor mov push or inc push sub imul jno dec push jge dec ljmp pusha or (bad) cltd adc dec mov sti push je or inc pop addps dec shlb movsb (bad) xor add inc iret mov push fcompl pushf cltd cmp sub xchg rcrb cltd jnp aad jecxz pop or sub roll xchg inc shrl int or repz js dec mov xor hlt mov add inc xor or and xor outsl in push sub ret sub lahf stc dec push xchg mov pop lods in arpl cmpsl and cld (bad) in shr ds jge lods mov mov and adc aam les mov dec jg ja out sub add or adc ret js inc or aam push (bad) out ja outsl out aad mov loope lcall lds out adc mov cmp repz aaa test (bad) push cwtl inc or jno addr16 xor popf push mov adc adc sub adc adc pusha sbb inc dec push cmpsl xor (bad) in and xchg jl icebp fisub in add pop push icebp xchg push xor lret (bad) arpl mov pop ja ja or in arpl into imul xor mov shl stc nop repnz cmp dec mov or jnp jl call data16 test test cs inc pop mov jbe adc xor daa into mull pop hlt jg insb popl push aam push aaa loopne (bad) and into test add adc cmp (bad) cmp sub push ja int mul push lret xor test jmp jl std fldcw xchg rcr je (bad) (bad) or sahf loope dec mov sub (bad) sub sub in pushfw inc cmp mov mov xor pop cs mov sub sbb (bad) ss xchg rcr pop xchg sub loope (bad) hlt or sbb (bad) jge sahf push lods pop push mov push push aam repnz int3 push ficomp and or cwtl out mov sbbl sub fidivrl int add dec out push xor jmp pop out aas fildl pop mov add ljmp in (bad) in pop mov push xchg repz movsb inc pop (bad) sub pop pop and bound lea and cmp popl inc sbb movsb sbb test popf add (bad) fadd mov lds loope insb add ja sub nop jg push iret mov imul mov or jle sbb aas add mov dec icebp cmp stos and inc jb incl in fwait xor mov lods aad scas mov sbb in mov push aaa cmp out mov push outsb and dec cli aam add aas ja in enter jne adc jno in fwait mov xor push jge push or cltd lods jo pop push xor jo xor sub dec jp and leave or mov bound and inc mov into std arpl push jge (bad) cmc mov dec (bad) ja mov pop sbb or or push inc jb daa dec leave (bad) andb jg pusha jbe aaa mov xor les add inc pop mov mov (bad) loope aam jp sbb mov xchg fwait cmpl popf inc xlat arpl xor sbb mov mov dec mov arpl fdivrs inc mov movb cmpsl adc jge mov push inc sub adc aaa ja aaa sbb mov cmc xchg cli cld cld fistl lods jecxz movsl imul xor orl lret cmc adc mov loope loopne jo inc je cmp push add xchg mov out push xchg inc test loopne bts stc push shll addb sti cmp cmpsb daa loop inc repnz pop lods movb dec xchg jp lods daa and and mov fucom testb pop jge mov sti scas xor or xchg mov ja es jge pushf stc lret xlat and int loope insb jp mov jge (bad) mov bound aam add test and sub sahf insl inc push pop notb (bad) mov jb das xchg arpl sub fiadd jne clc dec push mov leave push dec ret sbb gs bnd mov movsl enter std pop push cmp divb pop aas jno stc pop fisub mov jge push nop insb add rcrl cmc lods stc inc int or lahf sbb sbb xchg push xchg lds insb scas (bad) movsb lods xor mov popf (bad) gs aas pop cli call push shlb push adc or cli dec cli enter mov int3 (bad) inc xor popf jge dec mov cmp mov add mov push sbb hlt sbb jae (bad) imulb cmp in movsb mov popf int mov shll add jbe mov imul pushw or jecxz sbb arpl sbb inc lods mov jmp ret movsb push in xchg inc orl aam pop rcrl enter dec arpl lret aad and xorb sahf mov jecxz decl icebp mov ljmp mov mov (bad) mov arpl cmpsl mov cmp aam jae loope out aaa fnstenv fucomp xchg bound repnz sub pop xor sub mov add cmp arpl andl movl or push daa out icebp xor mov xchg shlb adc xor (bad) aaa aam es lret pop mov and or rclb jb insb fwait sbb add xor icebp push fcmovnbe into xor cmc mov xor fimul imul xchg mov add or idivl sub bound jo mov jp mov mov fdivrl int3 js hlt arpl pop jecxz xor enter adc pop sbb or pop popf fcoms cmp loopne xchg mov ja jmp and xor xchg add packsswb call mov (bad) leave push stos out movsb (bad) in inc rcrb sbb xor arpl xlat push pop dec jns push daa popa gs mov inc pop ljmp repnz lcall (bad) ja xor lods xor enter push mov jg pop test add mov arpl and cli and lods bound xor pushf ret leave push add fdivl (bad) fsubs aaa jbe push dec or xchg xchg (bad) mov and xchg jno js cmp push cs jmp in out rorb out outsl adc pusha pusha rcrb or mov jp inc int3 jle mov mov inc test and sti loope add xor push pop cmp sub adc neg adc pop ljmp arpl push insl lea cli mov mov push addr16 aam bound fdivrp lock int cmp icebp mov inc out mov sbb jns add fdivs sub lock icebp sbb loopne mov idivl xor nop rclb shr add mov sarb faddl ja mov push in sbb dec push sahf mov cmpsl arpl inc stc sub jge add mov or int3 test (bad) out mov xor aas das repnz pop inc pop mov xor adc daa pop loopne loop aas mov mov or aaa lods sub fsts push ja sbb out loop jmp outsb xor pop iret movsb adc and xor je sub mov push pop inc repnz in pop ja pusha repnz clc (bad) mov push sub adc in addr16 inc int cmp sbbl add loopne clc iret dec pushf aad dec add xchg xchg mov xlat in cmp push jmp movsl dec cli (bad) xor inc in mov out std jbe lret dec les dec xor in leave lcall jmp mov sbb das jne leave cmpsl dec subl mov mov pop xchg jecxz addr16 jge jno mov arpl xchg movsb inc xchg ss rorb sti adc mov dec add or xor into mov int3 dec adc xchg roll adc movsl or imul ds and loop stos shrl fwait xchg (bad) push loop ja mov (bad) (bad) mov clc push je and dec xor jae,pt xchg leave ss rclb fisubrl cmp orb arpl ja shrl sub pop fnop icebp arpl cmc add lods out enter jg scas lea add fidivl stos movsl loop out sbb loope dec push inc mov adc adc (bad) (bad) or nop ja pop inc sbb inc scas push ja int3 scas stos mov push popa cltd arpl test repnz ja pop xchg sub mov cli pop adc in cmp popf add cld fsts insb add mov and jle xor aam dec mov jg insl (bad) out (bad) arpl jno lods fsubrs or fiadd and jb fwait out hlt addr16 sarl mul sub insb cltd inc js sub iret fildl (bad) ret inc data16 jb add aam jbe enter enter arpl stc jmp in js icebp sub jnp xor pop (bad) mov inc sahf jge jns icebp pop dec dec cmp stos pop hlt ljmp cmp fs ja ja adc mov les and lods mov fadds hlt push and jmp ucomiss fcom sub or or rcrb test in sbb mov jge jne mov sbb testb imul in ja rolb cmp std inc fidiv push jge rclb dec push mov stos mov push stos rorl mov mov pop loope sub dec aaa outsl mov jge (bad) popa xor sbbl loope imull negl out repz fisttpl sbb dec ret xor mov ds hlt rcr push push repz out mov mov sahf sti jge mov leave clc inc lcall scas and xchg pop jns popf or cmp pop lret push mov mov iret das sahf mov cmpsl xchg push dec jmp xor cli shll sub mov aad inc out test testw rcl shrb adc jmp shlb sbb push (bad) xor imul mov outsb jbe ret and sub and (bad) (bad) iret push bound cltd (bad) imul lods fildll adc jge imul shlb mov sti and xchg (bad) stc int sbb out out pop lods imul popf and mov popf dec ja (bad) sub or add adc ja mov jl lock fistpl aad (bad) shrb inc cmp mov cmp push lock sub mov scas pop mov jl (bad) ja add out jge addr16 inc rol fmul sbb lods testl dec rorb jbe into gs mov push push or cmp jle dec sbb add aas jecxz arpl mov mov mul movsb and mov imul nop test loope or mov fisttp sbb sub repnz enter jge dec ret (bad) arpl leave ja adc nop pop fdivl nop icebp int push push inc cmp popf sbb and push push pslld cmpsl sub mov sbb mov mov ljmp and xlat js movsb les icebp fnsave jg int3 cmp sbb popf xorb (bad) es punpckhdq jl jle mov std sub jge out (bad) cmp les or and mov sbb mov push pop leave pop mov ja (bad) icebp push test sbb adc mov repnz aam sarl rorl adc mov or adc hlt daa mov xor xchg cli adc rcr (bad) aam and pusha test mov and jno aad in pop stos pop jg nopl jge scas or mov jnp ret cmp es jle mov jp adc addb (bad) cmpsb xchg ds sbb mov or pop cmpsb (bad) cmp xchg (bad) repnz arpl jl xchg (bad) sahf mov fdiv ds orl (bad) xchg jmp (bad) xor aam arpl cli mov pop xchg rcrb repz test and xor jge stc pop mov les ljmp jge aad dec popf arpl in aaa cwtl packsswb push sbb ja das lea arpl adc add and nop sub mov inc mov movsb ljmp sub sub cli ja dec pop inc (bad) int mov inc mov sub je call rcrb cli dec ss (bad) fcmovne xchg sbb stc xchg mov and lret or mov repz dec mov cld mov imul jp cwtl mov popf movsl fstpt jns stc (bad) into clc sub jge mov mov cmp jne faddl or popa and sahf test and push dec test test and add sub pushf pop repz (bad) mov xlat sbb or ja mov pushf mov movsb xchg jecxz jns dec and or add jo push fs aam roll in fstpl lea addb aad or jp rcrl adc je lret cmpb mov jae cmc fistp sbb popa sbb arpl or dec mov stos sarb sbb ja mov jo cmp hlt je mov cmpsl lock leave int3 xchg daa ja in pop stc aas test arpl ficomp sahf lret in push add outsb xor (bad) push les and jl push fimul outsb xor (bad) out jmp sti arpl aad lods dec mov pop test mov leave scas push dec lods sti sbb add dec inc sbb stos mov and pushf stos js outsb and or inc xor and rclb jle inc mov sub dec xor mov das and les mov and stos test inc dec jmp andl xchg shll mov xor mov fldl or decb cmc push push xor (bad) mov dec push fcomi adc xor pop sub les inc mov pop nop sbb mov xchg mov or push lea aaa fadd mov lds lcall (bad) sub ja push push arpl jbe fiadd dec std (bad) fldl2e mov aaa mov in sub sahf mov ret cmp arpl xchg leave sbb repz jecxz je aaa cld mov lods inc sbb repnz stc sahf mov into mov jle adc ds dec aam cmp cltd push hlt test or aam ja jge mull mov mov mov xchg jge fdivrl dec xchg int sahf mov mov (bad) (bad) psignb mov (bad) es mov ret sub and sbb dec or mov or pusha aas xlat mov icebp sbb scas fbld ja (bad) in jns js inc loopne rcll push and dec pop imul fdiv cmc sbb xchg sbb dec movsl xor sub inc mov dec imul jle mov mov cmp and mov and fidiv icebp cmp or pop aaa (bad) lret out in aas ds lcall cld int3 lds pop sbb sbb cmpsl or adc mov xor lods je (bad) dec xchg sbb mov call divl aas or and sub cmc sbb lods mov xchg cli ja add into adc outsl adc rcll inc imul fisubr fdiv adc ret cmc and mov jl icebp (bad) xchg or fs xor pop dec mov (bad) iret pop lahf dec gs xchg jo jne xor sub jecxz pop cmc dec popf pop repz cs jg jp in cwtl mov adc add (bad) xor loop or addr16 rclb inc xchg popf mov in ret push ss pop (bad) aas (bad) cmp push fistpll jnp stos mov pushf or add and mov push xchg (bad) mov test xchg fsin inc sbb xchg imul inc into aas push inc push inc xchg into pop enter jmp mov sbb sbb lock ja fwait hlt push xor sbb pop push jge sbb daa (bad) arpl fimull cvttps2pi idivl sub (bad) sar cmp inc arpl nop sbb and xor cmp pop cmp jmp xor push (bad) push sahf insb lea mov rclb je js push or arpl iret fistp int3 xchg and sbb insl mov inc stc jmp adc mov mov pushf loop mov insl in jns in (bad) xorl out push inc xchg inc jecxz pop movsl leave add (bad) sub or testb mov arpl in out pop cld mov push push lahf orl lcall and sbb lods movsb clc movsl dec xchg scas int3 (bad) in sbb and cmp dec daa xor sbb pop (bad) je jb hlt fcoml (bad) mov pop inc lds lcall popf xchg mov cmp push leave je sbb insl jno popf mov jnp cmpsl mov dec nop sbb inc std sbb in mov and (bad) js in or adc cmpsb sbb pop ja in jle sbb enter push pop xor movsb xor mov lahf mov mov mov sbb mov fmul popf nop sub jbe and scas xchg fs xchg idivb mov mov mov jecxz mov rolb popw ret jp ja cmp lahf push jae sahf cmp dec jle arpl aas dec int3 or sub mov movsb jle test jge aam cmp dec jl je mov dec aad pop or jo push pop call or sub xchg push adc add dec jae push mov sub cmp mov pop xchg imul int3 aad push cmp std xor das cltd (bad) loope and jo sbb cmpsb add adc sbb aas (bad) pop mov dec inc (bad) adc sbb mov adc sub aas xlat xor inc lcall pop (bad) jo mov pop mov push fnstsw lds or sub xor rolb push and pop rolb mov dec mov sbb in adc cltd mov daa jbe test cld (bad) jo fidiv test ds dec mov push loope in out push dec inc sub mov mov push ja xchg mov repnz cmc test ret pop cmpsl sub mov push popf inc push add sub ret mov bound dec inc aas (bad) push insl clc dec jb repz cmp es adc inc adc movsb lret clc jmp mov mov sub imul mov fsubrs nop adc dec or (bad) push rolb call std outsl fdivrp or xor (bad) fcoms jmp lods (bad) icebp sbb dec or xchg inc adc loope sub int3 inc adc adc (bad) mov arpl pop ja (bad) rcrl stos mov ret mov aaa mov emms imul jnp out ds shlb invd ja int3 push xchg xchg decl mov into jo repz es sahf ss iret int3 xchg cmp lahf icebp cltd xor ret fwait ja dec gs sbb push jecxz adc cmpsl sbb push movsl (bad) sti sahf pop repz pop push push mov and test mov loope inc and movsl lds es mov inc sti jns dec aaa sbb jge push and jp or pop repnz mov mov fs divl mov sbb cmp mov arpl adc lock movb addr16 mov inc ss je (bad) (bad) mov xlat (bad) data16 (bad) insl inc stc fcomps icebp push lods fstl jle adc sbb xor cmp mov test dec jns or arpl or hlt lcall lods xchg out in pop test or mov gs aas sar popa add push dec std (bad) mov lds sbb clc bound or inc lret loope xlat mov div or mov or sub cltd jmp (bad) mov cs dec inc jne dec and jge aaa cwtd in add rol pushf fcomps and and lock (bad) xlat push pop out sbb pop push and jno aad cmp fnstcw arpl jb jp dec movsb jno sbb in jne sbb push jge xchg in test aad mov xchg ficomp fcomps sbb push xchg dec icebp lret daa (bad) sti arpl leave jo popa aam insl push mov test jge dec xchg arpl dec aaa ljmp leave xor push insl bound cmp jae incb cs cs sbb setp not arpl decl mov xchg adc jl sbb mov sarb bound or xchg jecxz out in add add fwait and mov in and adc (bad) je nop adc pushf stos pop ja sbb jbe mov pop repnz pop jne or arpl imul push jge enter insl in test aas (bad) pslld cmp lret (bad) lahf push push loope aaa les cmp sbb (bad) ja mov jl cwtl pop addr16 test add divl mov cs sbb push jnp sar popf call popf mov jo cmp xchg jne arpl outsl rcr out rep add call in aad and nop pop cmp xchg shl ret and add jo out or mov int add cli (bad) test adc inc shrl add inc adc push dec (bad) into leave sarb paddsw jecxz add and cmp ficomp in clc push lret ja cmp loop inc aad bound inc hlt jno sbb jcxz enter pop cmp (bad) sbb popa sbb aas (bad) scas dec inc popa mov xor frstor gs cld out ss data16 shll scas ss (bad) sbb out mov cmp cs or mov int3 xchg repnz add aam and mov sub adc mov sarb cmc mov dec (bad) mov stc fisub sub jbe xchg fsubl fadd sbb jge cld pop dec and and (bad) push mov (bad) bound movsl dec jp pop lods push inc dec cmp xchg (bad) je mov cmc aam lea jo rorl push mov rcr pop shrl sub dec mov or into pop mov lahf jb (bad) fmull (bad) inc pop xchg ja (bad) xor test (bad) ss jle arpl adc in mov cmc mov pop std das aam fst mov lods mov xor cld (bad) jo das dec push cmpsb mov test or (bad) movsl pop sbb movsl cmc fmulp dec loope cmp push (bad) ja mov and sahf pop mov popa dec or (bad) add push and lret (bad) js repz xchg mov sbb aad sub rcll shll mov das pushf pop and decl aam (bad) pop lods test mov bound in cli pop arpl xchg pop jne std dec fmuls out pop xlat inc fwait sbb push push cmp push mov call in pop or xor repz shl mov xor or xchg and sbb adc mov leave sbb jmp rdpmc jge popf add bound sub xchg jno add je faddp cmp movsl lret (bad) fdivr inc in mov dec or (bad) rcrl mov dec stc jae xlat lret clc (bad) inc sbb jmp int test gs insb sahf add mov (bad) aam popa and sub sbb nop scas push aam ret popf cwtl and add or pusha icebp nop in movsl gs fs pop mov stos push and dec test pop pop ja mov pop fadds xchg jecxz insl and (bad) aas ja push dec mov sahf xor int outsl mov test jecxz push test sub icebp cmp or cmpb ret ss mov mov xchg fimull adc jg jae ja sub and jecxz leave and (bad) sub xchg inc push stos push imul rcrb testl ja jae mov popa idiv fdivrs repz mov push sbb dec lret fsts sub inc lret push js mov sub out lock add dec dec hlt sub scas sbb ret mov (bad) in (bad) (bad) icebp cs or (bad) repnz sbbl xchg pop rclb lds aad lea pushf cld mov test adc pop dec pusha dec push nop hlt push aam or add call jb push fimull out jge or or ss jp movsl pop stc in inc mov movsl mov mov fiadd fist addr16 cs lods xor addr16 dec mov adc mov lcall xor mov (bad) mov test sbbw mov fwait out arpl inc mov lret inc and jecxz sub add fsts dec cld insb popf add cltd ja out les lods lea dec mov push xchg mov jb mov mov pop fs add sbb aas lret jecxz xchg push pop pop sbb push xchg mov jg dec xchg push xor outsb aas and xchg push loopne jge add mov movsl fstps movsb sub pop push nop push mov push (bad) jb push out rcll bound cmp cltd xchg pop nop dec rcrb movhlps sbb cmpsl xchg jl cltd hlt push cmp or rclb arpl cltd int add pop inc mov outsl xchg push inc pusha dec arpl in push (bad) cmc mov stos or sbb and push (bad) sub fisubr cmp push mov pop mov sub inc popf jl outsl lods movsl and out pop jecxz in push pop mov lahf es jnp aam adc sarb pop cltd shlb sbb out arpl adc jge aaa loopne lret stos and (bad) mov shrl mov daa xor arpl jbe and stos xchg pop repnz dec push push pop (bad) adc inc hlt clc or mov xchg sub int (bad) or mov pop mov dec push call cltd mov es dec jmp shrl shl xchg loope hlt aaa adc divl jne (bad) aad data16 dec cwtl test jnp mov xchg sbb xor push dec push mov psubd imul adc mov mov das outsb int3 (bad) call lret dec in ret xor push xchg shlb in nop add shlb add ds jg ret outsl iret (bad) add xchg lea dec (bad) xor movsb aad cli fcoml (bad) mov stc jnp cmp inc arpl test sbb icebp mov adc and (bad) iret push mov in or in (bad) xor add push cmp arpl bound xchg mov lock pop lods cmc cmc sub in adc fidivr or sub lods adc aaa sbb lds cmpl mov (bad) pop cltd add imul sub in dec mov jecxz fistpll std sbb ret lods mov in cmp sti and (bad) movsl imul rorb sbb sbbl cmp mov fucom or adc push adc mov cli jne stos pop pop mov aad movsl jbe mov xchg adc ret pop or and mov mov inc ficomp arpl sbb mov dec mov add (bad) rorb and mov xor test jp cmpsl cltd cltd ja xchg insl fiaddl insl test movsb adc ds or push jl fcomi add cmpsb repz cli rolb xchg inc fwait ljmp mov cmp test adc or rorb hlt ljmp sub pop (bad) leave mov push out push pop cmc dec add push in ss ret push push movsl outsl or inc in jno jo rorl push ret rorl data16 push and and add arpl adc inc js sahf dec mov xor adc ja sub test daa mov fnsave mov lock pusha aam out lret repz mov aam add movsb or and cmp (bad) mov in out ja repnz addl xchg movsl ds cmc mov mov pop xchg mov aaa sbbb outsb mov push add xchg jecxz add sahf aam push loope in mov not out push addr16 xor push lcall dec jge sbb scas push (bad) adc cld (bad) aaa insb add addr16 in pop sbb ret popl dec roll mov mov xchg cli pop xor mov jge mov fisub repnz sbb repnz mov xchg outsb ja pusha or scas imul fxch into (bad) and pusha or (bad) out or arpl ljmp andl clc bound in and mov push pop pop inc push aam add inc test dec mov add ja fistpll fldt jnp sub aam adc fwait imul test sub (bad) daa mov xchg and in mov packsswb lret jp rorl lods inc in and mov cmpl inc push inc sahf pop fcomip jp pop sti push stos fstpl (bad) fisubr dec xor ja dec clc mov data16 adc mov in inc repnz inc int and clc sti pop sahf inc (bad) ja lods mov pop mov ret cmpsb test ja test cmpsb insl sub mov jae cli and mov daa and cmpsl std xchg ja cmp rcrb stos sahf push ljmp mov bound icebp push mov mov pop call mov je jbe add sub stos jg popf mov out add adc (bad) mov in adc out jge bound sub mov jb in aad loopne aam and nop leave xchg fistp (bad) data16 mov mov mov pop mov sar inc xor jle in lods cld mov adc test stc cmp mov outsl clc inc sbb ret xor lret ja xchg sub dec jae iret mov (bad) in xor bound dec mov out repz sub int jns push (bad) daa xchg inc and es in adc (bad) jbe mov ret mov bnd sub sub fs sbb jle or mov repnz daa pushf cmpsb or leave clc repz xor aaa xchg in lea push mov push jbe (bad) decb xor out jnp aaa and clc mov cmp push in dec xor idivl js sub mov (bad) into fdivl cs xor movq sarl arpl or cld sub jnp jl dec jl cmp ss jae cli dec mov in icebp mov jo fstpt cmp jg inc in out je mov mov fsts int3 dec xchg icebp jb pop adcb popf pushf lods sbb pop pushf push idivl dec dec cli out (bad) cmp (bad) je rclb lods popf jae in (bad) test int3 inc xchg pop outsl test int fimull mov inc sub jge sbb and cs inc out cmp add stc out dec pop stos (bad) ja movb inc mov lret (bad) aaa and push js popl pusha mov mov pop movsl push cmpsl sbb jno lea stos mov stos (bad) jo outsl clc add out movsl and pop ja cli icebp sub call jp inc mov mov add push test inc pop nop push test xchg stc insl outsb adc outsb out icebp cmp (bad) call adc lea je xchg xchg ror xor mov xchg inc and cmp cmc enter xor (bad) int mov xor fdivr adc and fnstsw arpl mov popf fldenv xor adc mov lret data16 loope adc sbb ja cmp xchg dec std mov add nop repnz fsub sub in repnz in mov in mov mov arpl inc enter repnz add xor fadd pop fidiv mov mov push in sbb inc adc inc loope std mov dec insl mull rorl adc test adc cmp push and push fmul in cmp es sbb mov pop insb xchg cmp mov jno push xchg stos mov mov shl dec jl fcmovne lds in xchg ja jb mov imul insl hlt mov inc pop xor scas arpl mov cld fnstenv incb xchg iret stos sbb dec mov mov mov or mov ja jns add loopne fdivrs cmpsl or and xor jb pop in xchg dec push call es inc (bad) fidivl or add sbb test cmp (bad) inc sub adc add ss or stos les sbb icebp xor lds popf call popa mov inc ja mulb xlat inc int3 sub and test and aaa (bad) repz test pop mov and ja jle or or and xor icebp iret add xchg and and xor xor jp push (bad) adc sbb (bad) mov js dec sub gs pop ret sti ror push mov (bad) pop mov and xlat lret pop mov jge xor mov daa xchg sbb js (bad) in mov jo sbb or rcl mov pop inc xor aad (bad) push cmp test mov mov jmp or pop insb mov test ja mov fisttp pusha pushf or jge test dec and mov and add dec mov pop dec aaa or pop fwait lahf (bad) rcr inc xor xchg stos add test adc jb rorl lcall icebp inc gs xchg inc enter mov adc call scas aaa mov xor xchg inc inc leave int3 cmc ljmp adc cld mov cmc cmp adc sbb dec mov sbb xor bound sbb cwtl mov test pop push ret arpl adc in test mov loope push iret or add add rcrl xor adc cmp out jle mov leave or ja popf pusha inc aad stos push pop push bound pop mov pop dec arpl xor push ja gs test fisttp sarl pop ljmp rcrb out mov repnz into mov adc lds into (bad) and xchg push daa popf scas dec (bad) icebp mov mov jge xchg mov cs loop pop test cld jecxz push push add cmp ja (bad) imul into lods xor aas daa aad pusha dec jle pop (bad) mov ret aad inc insb cmp nop fstpl dec shrb fdivs and addr16 mov out je popf (bad) (bad) xor pop or xor insb cli sbb xlat dec mov mov mov xor insb push test cmc xchg leave out dec leave and std je sarb pop pop in mov cwtl jb pop and adcl adc bound gs cmpsl icebp jge repnz pusha mov xor inc test in sti xchg add adc fisttpl xchg add cmpsb ja mov pop ret stos pop push mov ss mov pop and adc mov clc into sahf inc sbb pop neg je sbb ljmp ja cmc pop test popf sub push dec fnstsw dec xchg or push sbb pop jae arpl popf add push iret stos mov jo xchg adc mov in movsl mov daa lds lret xchg lea push sub pop arpl mov xor add xchg pop or ja arpl mov push fldl addr16 ret adc iret outsb into leave loop xchg pop and push fsub sbb mov push ja vpinsrw (bad) inc dec push push add xor dec inc out loope cmp bnd es mov leave pop push movsb dec dec xor fdivp jecxz dec cmc jmp rol rorb add inc xor push sub push sbb arpl sbb imul int xor jp (bad) (bad) jecxz jle inc movsl out daa mov mov or (bad) ja mov push jp sbb adc jg pop (bad) xor es ja nop push push ret xchg cli sbb out fs mov rcrb aaa jae mov sahf loop mov std aam jge cmp mov cltd or pop leave xchg mov cmpsb das push ret mov jnp mov aas and out push fimul leave mov lahf xor sub inc or cmp int dec sbbl xchg clc push arpl pushf cmpl repz xor cmp xor aaa dec sub (bad) cli sub clc sbb out (bad) or sbb pop in push sub std and in ret inc hlt and pop push or push ljmp sub testb gs (bad) cmp inc fwait ss xor xor dec push ljmp cld into mov aam xchg and push cmp jo arpl pop xor (bad) leave cmp sbb movsl sahf shll xor dec push and sub cwtl shrb es outsb shl je gs shrb push sbb pop in push mov push popf into loop in lcall sbb add in cli nop fiadd sub add push pop clc insl data16 dec out arpl sub sbb fstps fnsave (bad) out ja popa lods inc dec (bad) push and mov (bad) popf fstps mov cltd out mov push shrb sub jle into mov shlb lret push push push aaa sub or adc cmp scas arpl fist or adc in dec popa frstor pop aaa mov dec in mov loope push dec adc dec add dec addr16 movsl cmp or push sbb pop das popf pop hlt mov adc daa (bad) setp pop call jae test (bad) dec sbb sbb add in pop sbb popf pop xor (bad) stc xor sub push jge ret jno (bad) pop out ja fwait and lret arpl aas ja int3 pop mov roll sbb adcl shr or xlat dec and rcrl addr16 pushf inc mov and sub pop ret pop jnp movsb fnop int3 lds scas cmpsb inc decb hlt (bad) stos jp leave jne mov mov jle daa cmp mov xlat push sub and dec loop xlat (bad) ss jo pop mov xor sbb out mov mov ds add cmpl jge std push and fild sahf push xchg popf inc and int test push mov fwait jmp sub lahf push fdivrl insb sbb jmp aad pop mov pop std sub jne or push cmp xor jns in cmc jp ss mov daa dec xor cltd jae xchg lods ret repz cltd ret jecxz ss iret (bad) movsl jb mov test mov ja loope mov in ss push jb popa add push cli add mov or pop mov jnp sbb leave test aad les cmp (bad) fwait movsl insb push or les push fucomip es pushf xchg movsl mov pop in incl mov adc lret pusha enter sbb xchg scas hlt aam jbe jecxz mov mov cmc popa xchg sbb and jae cmp or call xchg inc cmp push or ja (bad) ret jp xor outsb test stc cmpsl sahf movsb popf test pushf leave fnstcw icebp aad in out pop scas dec and rcrb movsl out xor mov cltd idiv cmp mov xchg (bad) jmp jb popf je dec cmp ljmp cld (bad) push imul in shr jge and inc aas or gs xor adc cmc addr16 sbb jge int jge dec movsb xchg insb repnz mov loop scas pop popf cmp and fisub xchg sbb sbb dec (bad) in fwait out lcall sub dec imul mov and pop dec call inc mov ds push push dec dec iret mov jge out aaa jns jl (bad) (bad) dec sbb clc dec and fsubrs dec mov push cmp jnp fstpt fdiv out cmp scas pop sub test xchg sbb add mov std leave bound sbb mov dec cltd imul aad and or in inc push jge pushf ror lret ficompl imul push and (bad) in das sahf or jge into (bad) std (bad) shl fsts das xchg sbb (bad) jecxz cmp ja dec ljmp clc xchg int3 pop push cwtl pop fcompl insb faddl ljmp mov pop inc fcomip int3 push mov sbb es cwtl out adc call sahf add push xchg jp sub (bad) or mov mov add push mov mov ss fcomps into xchg cmp jle sbb mov mov movsl pushf shrl lds sahf aas push repnz sub mov (bad) movsl das inc (bad) aaa das sbb (bad) loop (bad) test push mov fldenv (bad) hlt cltd sub in arpl pop mov dec xchg sbb out rcl xchg adc das push test insl and stc int jb bound or mov sbb je mov (bad) (bad) out push clc jl dec and push shrb mov add and xchg test movsb (bad) mov (bad) insl cmp push dec scas jge mov lret popf pop push cmp ljmp sub or arpl sub rclb cmpsl test (bad) cs cmp xor or fldcw push jae and sbb xchg cmp jno dec aam addr16 sbb arpl xchg add mov fstp dec add les sbb dec jae sbb clc scas mov xchg mov mov mov subl and push out loopne std lret mov mov push fldl outsb pop sbb int icebp insl cld jmp adc sub pushf in push adc push mov loopne adc xchg out mov imul lods lret lock lret incb mov in pop popf jecxz cltd push ja stos ret test add das fs inc mov subl mov popa push jmp outsb sub mov push push wrmsr dec das loope jmp notl mov xchg les lcall (bad) add xchg idiv sahf add arpl lret pop dec pop cmp cmp arpl cltd sahf pop jae aad std rolb int mov mov idivl loop cmp int push mov jge cltd add push mov loopne adc lods add or in (bad) das clc or (bad) pop xor xchg rcll or fcmovu loope xchg icebp sbb scas ja push es cmpsb jecxz icebp xor arpl aam mov adc and mov loopne gs dec loope hlt and xchg or ret js leave (bad) jle mov xor shll inc lock or in bound mov adc test and aam mov mov push jp jbe lret iret sbb add sub add rcll test jcxz mov in out (bad) lahf dec aas out btsl leave inc mov sbb stos lea push or inc insl packsswb jbe sub dec (bad) hlt pop js push inc jecxz call (bad) push adc inc (bad) mov ret in xor and cmc xchg sbb cwtl xchg aas mov adc mov stos add data16 mov jne and (bad) jge xchg mov (bad) test mov sbbl xlat dec push dec iret aam fsubrs push cwtl loopne push fbstp ja jne sbb jge add pop iret out cmp arpl ret jmp in shrl cmpsb mov add inc stc xor mov out push cli dec push dec cltd lea psllq jge push xchg sbb jns testb inc les xchg or cmc xchg mov cmp (bad) ljmp sbb mov xor dec jg test pop fstpl pop popa lret (bad) or adc jae mov mov test ja pop dec inc inc jns imul pop add stos xchg xchg fisttpll mov in lods pop and pop adc jns loop jo inc mov hlt sbb dec popa aaa enter cmpsl mov ja mov xor sar lods xlat addr16 pop call jge jmp cmc movsl inc test aad push lds adc jg sbb in mov fwait je aad ror jbe and dec fwait in aaa movl arpl out test ror pusha jg in movsl xchg jns leave pop fsubp repz or aad loope mov sbb xor cmp mov ret arpl (bad) gs push ja add imul dec cmp js into pop cmp adc xor and sbb inc (bad) addr16 add clc pop cmp cli push ja cmp roll lcall mov mov jns movsb dec sahf jno xor add js frstor popf fldln2 test shrl stos arpl (bad) mov call cmp test ret or mov ret sbb cmp faddp inc dec xchg and mov jae out ljmp mov push clc hlt gs or outsl jns (bad) sub add cmpsb inc ja inc jmp inc adc fcoml xor push jge add (bad) push call jecxz scas arpl in or shrb stos sbb pop mov cli setae xchg xor dec es mov sub mov in aas mov push dec or cmp mov mov sar dec pop popl dec rcl mov add adc mov xor lds adc jge outsl in mov sbb mov cmpb iret vhaddpd clc aaa pop lahf movsl movsb inc adc loope inc sub ret pop clc (bad) out scas cmp aaa ret pop aam mov or dec test push lea test gs pop lahf insl sub or xchg adc adc cmpsb pop mov xchg out arpl mov sar pop xchg sub cmc jecxz adc lock xlat mov pusha xchg xor (bad) or mov jnp mov int outsb jnp and add or cld adc adc mov push icebp inc aas push jno and sbb add add push je xor out mov jecxz (bad) fidivrl mov loope or pop (bad) jl repnz mov aas mov fnop cwtl fdivrl loop stos cmp leave push bound xchg fisttpl xchg xchg test push jge cmp cmc imul test push adc aad addr16 cmc cli cmp mov mov shl xor mov call insl ficom or hlt pop ljmp and arpl add sbb xorb mov mov jp sub push (bad) out out sbb xor lret rclb sahf inc into inc ja repnz mov and jge sbb add aas xor pusha sarb addr16 hlt mov fwait push aad loopne rol lds add xor mov (bad) xor cmp mov (bad) mov out enter roll adc push lret pushf aaa jge lahf dec push (bad) std mov bound popf enter fdivr xorb xor jmp ja loope dec or cmp (bad) lea insb add pop jne mov jo xchg sub test xor pop pop jne pop pop test mov jge push xchg jb or (bad) int3 test dec adc cmp mov add leavew xchg lock insl xchg dec out mov dec stc fcmovnu jle and insl sbb (bad) push subb out cmc jne pop cli ja inc fsubs andl mov dec mov pushf push pop and shll mov sbb les popa pop stc xor push ja (bad) mov call mov (bad) pop inc cmpsl sbb jns mov mov mov stc add sub mov push in jecxz push pop arpl or sub mov mov mov jle cmp in push clc dec dec mov (bad) addr16 (bad) (bad) ja lods repnz enter in std and pusha dec pop fcom arpl cli (bad) fnsave sahf stos mov scas fmul or or add aad cli fldenv movsl xchg bound or decl push jge pushf (bad) cli or add inc or test or fist xor adc push jae mov arpl loop jle in insb out call xor cs movsb and xchg cmp (bad) or ja cmp push add mov cwtl fcmovb add inc adc push jle leave leave (bad) push lea cwtl or mov ret jle pop les xchg in mov lahf or jo out popa xor (bad) push push pushf pop aam popf call (bad) lds into jge sbb sub dec orl scas push daa xor cs lret das sbbl dec xchg stc xor ja int3 movsl insl push clc pop test add cli or lret lock mov clc cmp and mov scas divl push ljmp repnz jle pop or jp xor aad mov pushf sub rorl arpl pop sub mov or xor in inc cltd adc add fs and outsb lods cmp ror cs imul movsb lock and or add jae xchg inc sbb jo pop mov push loop bound pop sub out aad in sub movsb and mov add nop dec icebp adc clc fxch ja push mov aad popf dec cmovno (bad) (bad) lock adc push adc push stos sbb jb (bad) mov and mov mov push scas fwait mov mov add (bad) pcmpgtd pop xor dec mov sbb into mov in popa push sub cltd mov adc cmpl (bad) and xlat pop or cmp push popf pop jg add rorl arpl call les xchg in push fcmovnbe and rorl loope sahf dec arpl loop,pt dec (bad) lock add js rcrl insl enter (bad) mov sbbl ja std cwtl jns pop xchg cmc xchg arpl cmc pushf clc mov movsl rorl arpl mov test cmp lds jge jns loope sub icebp mov aam jo fidiv push sbb sbb and mov mov inc mov fdivrl mov jb jp ret daa pop movsb shlb mov leave mov mov adc mov xchg or out jmp or stos xchg movl inc shl into pop cwtl sbb call dec pop mov or pop mov imul int3 cmpsl les push imul leave mov arpl inc jecxz inc repz mov in lahf or scas pusha push sub daa outsl sahf cltd or fcomi ret and cmp addr16 into test adc adc scas aaa ja popa pop pop popf aam rorl pop ret xor sbb aad (bad) arpl pop cmp sbb test ja fcoms cmp cmpsl loop mov arpl push test pop add add xchg add lods mov cmp aad hlt repnz movsl inc mov sub int xchg sbb lds sub das sbb pushf sbb pop pop sbb dec pop pop mov shrb inc and mov mov cmp (bad) fmul pop loope pushf cmpsl cmp sbb adc scas inc mov leave jl push addr16 cli and push pop xchg jp (bad) or repz xchg (bad) (bad) add je sbb rcr xor stc loope or pop aas and ret mov pop rcr das scas jno add jmp xchg or xor std (bad) frstor push repz ror jbe cmc aaa push dec jp (bad) mov push adc out mov loop dec pop icebp insb rcll xor mov imul and sub jl xchg ret or mov or fisub mov or push stc jl mov adc (bad) adc mov mov pop jle mov xlat (bad) xlat ficom rcrb adc sub push cmp cmc fisttpl fisubrl pushf jle jle push mov bound lds dec dec loop rorb fdiv movsl cltd rcrb adc cli ja jo lea xlat xor out jge pop vunpckhps je dec xchg in dec push lea xor cs dec out loope outsb (bad) test imul dec insl cmp xchg add in and in add pop out insb jecxz popf (bad) out push rcl pusha push cmc sub fbld fisub xchg popf outsl pop (bad) ja mov das (bad) ss jge inc xchg ror pop ja popa mov mov xorb jp data16 push sub pop jge or ja rcll aaa jns icebp leave cmpsl adc mov fidivl ret push movsb fimul jge add and fidivr je jecxz sbb fdivs jmp add fcmovbe (bad) xchg bound or subl xchg ret stc imull push ret aad pop adc iret mov adc (bad) adc in cmc loope loopne cmc dec lock cmc je sahf xchg clc pop (bad) xor mov or aam push aam mov aam jae xor pop lock in mov xchg mov mov dec mov in pop add mov and jne adc loope out inc cmp movsl ljmp idivb and movsb mov mov sahf cmp popa adc (bad) sbb insb fimul adc loopne test cwtl sub sbb fimull test arpl pop iret dec cmp sbb adc into mov punpcklbw xchg mov sbbb mov sub add mov xor insb mov cmp or mov pop (bad) lds decb in push jnp repnz (bad) lock sbb xchg int3 mov add pop sti jno insl jle fsubrs cmpl xchg add out ja imul jge stos aaa lret jns gs ja (bad) sub mov and mov (bad) subb jne jno mov pop (bad) stc sub mov dec sub test dec popa aas xor imul aad (bad) out in mov test push aaa cli cs fs inc xchg fwait sub arpl add bound ret sbb lods adc or sbb out ja jnp jl fadds cltd mov jo nop fstpl pop popa sub stc sub adc (bad) aas pop inc rol push mov and jae in or repnz lahf cwtl jno cmp scas mov inc jns cltd ss sub aaa arpl sub clc popa mov mov ja icebp pop and clc and outsb xchg adc movsl dec clc into das (bad) and (bad) in sub jecxz adc inc hlt sub pop xlat jno or or out mov inc inc dec ja lock cli push dec int3 dec push xor xchg cli adc (bad) in daa je aas stc cmp inc inc adc jnp jge jg ja (bad) aad int3 insb mov pop fstpl arpl (bad) cmp jbe add jmp push xor incl into (bad) int cmp dec jne ja jecxz in jge cmp and sahf xchg dec ret negb pop lret xor pushf cli icebp xchg je nop hlt mov loope inc iret bound fistpl pop xlat loopne dec lret fsubrs inc push aas stc xor mov or lret mov sub (bad) sahf push (bad) outsl pop mov out jl inc negl cmp subb aam xor arpl jae repnz xor dec xchg pop test add popf jb sti mov arpl mov ja dec (bad) (bad) and jo and adc insb cmc sbb out or xlat mov int cmc lea mov ja test gs pusha sahf sub push arpl dec xor ret lock in jmp adc iret mov jle mov xchg pushf int3 sbb (bad) pop cmpb add xchg sub test mov push sbb jnp adc sbb arpl sbb adc sbb push subl pop xchg in in xchg lret sbb ds xbegin es adc pop insl mov add test outsl push push push adc cmpsl cmpl jns push lahf pop pop jecxz les out xchg std aaa or push mov pop loop repz sbb cmpsl mov mov into jno or aam mov and (bad) jbe fcomps shrl pop mov lcall add rclb add orb js stos stos push jo idiv mov xchg es scas pushf int fsubrs fst aad js sbb inc repnz sub into loopne mov pop enter out cwtl sahf inc sub scas cmp adc fdivrs jmp mov cmp sub adc daa pop push hlt fisubrl mov rorb mov fildl insl les pop sbb cs out mov inc xchg ficoml lret sbb (bad) hlt sti xchg xchg dec mov sahf or (bad) push into xchg mov adc es xchg push imul add jne pop outsb loopne cltd fwait or jle adc push and mov xchg pop push addb xor or jecxz outsb movb push call xchg call and dec enter test fistpl sbb not imul adc iret xchg adc inc ficompl bound (bad) popf out or jnp subb push and (bad) mov mov pop push cmc xchg cmp loop sbb js dec popf or notl (bad) out jge mov push add scas aam in scas addr16 fidivl push (bad) enter sub push popf mov test push scas and jge and mov push xchg out loope lret mov test les and pop negb sub (bad) inc lock test mov enter add cli or sahf fnsave into xor mov sbb pop enter xchg scas test insb shrb push sahf sub inc mov aad or (bad) push (bad) xchg sbb in lret sub pusha (bad) shlb jge sbb push fs mov cld hlt enter cmp pop js ds mov adc mov xor cmc imul xchg push or adc lock mov call sub pop pop in sbb push cwtl cmp fdivl iret stc or (bad) jmp and or rol mov sbb int sbb pushf dec xor popf decb mov and into cwtl fnstcw cwtl cli mov popf icebp mov inc inc sahf daa jbe es sub push pop push js sahf pushf mov jbe sbb (bad) push jle in sahf mov push movsb js cld xchg fsubr jp mov (bad) jne add in (bad) stos shrl aad rcr leave scas cmc adc push sbb add int js js lock lea cltd stos pop jle pop and mov add push or xchg dec and push pop xor aad sahf push mov xchg out pop cmp pop mov sbb fidivrl mov jg mov push cmp push int sarb mov adc je stc mov daa dec dec pusha mov stc test pop mov aad pop negl stos pop into jp in out pop xchg fcomps arpl fsubl je push mov mov sub mov test mov out jbe and or xchg mov pop jno or dec mov xchg ret inc (bad) pop sub jmp rcrb scas and test in cs fisttpll mov loope mov inc imul (bad) std mov sub jecxz pushf cmp or mov pop sahf mov fbstp outsb nop mov mov pop sahf mov sub pop outsb add insl in sbb xor mov pop pop enter sub stos sbb gs add cmp xor or fimul push pop inc addb dec fisttp push dec jmp lock lods push add or sub mov jp xorb sarb cs push (bad) in es std push das into or jge jmp sub pushf (bad) aaa mov sub into pop push jo or cmpsb pop ja pusha call mov mov inc ror inc cmp xchg lods jb mov dec mov add pop fnstcw adc xor xchg mov pop push mov (bad) or outsb (bad) repnz or jmp pop pop stc adc jnp outsb cld stc xchg fdivr push in mov mov mov adc cmp sbb cmp dec dec or loop negb les lods call jbe mov push js sbb int mov sbb test sahf sbb xor or pop or fdivl or mov pop inc cmp push xchg lock sub in (bad) fildl sbb fcoml cmp ret daa mov sub call nop cwtl sbb add xor sahf cwtl stc mov jae mov pusha lods (bad) ljmp aaa imul xorl loop ret cmp push into mov dec out shrb sbb dec pop mov ja in or mov cmp pop sbb pop mov pop pop stos cmp popf mov lods push jg mov sbb xor sub addr16 or leave inc sub cmp push xor sbb push or push notl movsb xlat mov and fadd mov cmp test popf dec jecxz cmc mov mov dec lock inc cs rclb sti push into push sbb push rcl sbb fistpll pop inc push ss sbb notb cmp cmp mov enter cwtl test popf jg jecxz dec sub idiv mov pop push fcoms add mov (bad) cs fidivrl push push sbb push out addr16 adc lret mov cltd movl or div aad js mov pushf jns dec ror out sbb jbe xor mov sub scas cmpsb mov push inc pop and pop add ror mov inc pop pop sahf and pop cmp push jbe mov mov sbb dec repz ljmp and jge mov ljmp fistpll pop jmp je push mov or (bad) (bad) loop sbb or mov sub imul fdivrl stos stc aas mov adc mov cltd adc push subb fisubrl call cmpsb idivb lods sbb jp add shll pop es sbb nop nop mov mov aaa outsl push decb or je xchg push bound and push aad rorb sbb stos fisubrl push push and sub push adc pushf add lea pop push mov lods cmpsb inc pop lret or xchg sbb rolb pop mov fadds jae cmpsl sti push pop (bad) in xor sbb add push inc (bad) xchg pushf aas push test loopw push ss sub fiaddl mov addr16 addr16 ljmp sub pop push pop sub xor adc sbb fprem fs fiaddl dec xor ss push daa jmp mov pop mov dec mov aas rolb (bad) out out in lea (bad) xchg lods stc cltd or inc dec and inc es (bad) rep push pop adc clc xchg add xlat cmp xchg adc in fcmovbe (bad) xchg fcomp out (bad) rorb test cmpsl sbb sub nop out xchg repnz dec shlb (bad) mov adc mov les sbb fs lods mov in pop aad dec fisubrl fstl push dec dec (bad) mov push bnd gs fcomps lods addr16 mov fsts js or das int out sahf sbb cmp push in xchg sub das icebp pop test outsl rol in repz or sbb push jno fnstenv (bad) push pushf fdivr dec jmp dec lds sub xchg mov mov in mov fcomps mov sub push enter cmp mov (bad) dec jbe out adc sbb enter (bad) jecxz add cmc jns fs or test lret pop std test push sti lods icebp (bad) push int add pop sub fbld (bad) mov ja adc ds fidivr outsl fmull xor into shl push pop fcomps push xlat xor and mov sbb into fildll pop sbb insl cld fsubl pop fcomps push inc adc pushf outsl fdivr inc or cli addw loope push fdivrs mov stc cmp xchg insb js fcoms jbe mov out outsb in out inc sar (bad) mov je adc call mov and dec sbb les fs (bad) stos aaa xchg pop sbb rcrl outsb call xchg push iret xchg mov cmp xchg pop (bad) sub lods mov (bad) mov (bad) mov sub stos or push sbb mov std or dec push mov stc mov faddp push or lods (bad) iret sub or dec (bad) push rclb hlt jge adc pop sub adc mov pop mov mov pop mov mov inc cmp push pop scas addr16 fs popf insl (bad) add sahf mov dec mov push pop rclb push gs scas jle add ficomp and adc (bad) jecxz sub jle pop sbb mov call inc ficomp and pop push push imul mov clc in or dec (bad) addr16 movsb ja pop enter call push mov jg (bad) popf in decb lcall and test push leave outsb inc fsubrl jb out gs cltd stos sub outsl pop sub ret fsub push lock aam xchg or (bad) or mov inc push (bad) jmp sub mov jmp shrl outsl jecxz stc or pop mov dec ficoml dec dec xchg push dec lcall pop pop into mov imul sahf in pop push fs push jmp mov or mov xchg mov popf adc xlat cmp mov add sti leave add cld mov les sbb icebp shrb clc fldt cmpsb mov xor popa cmp sbb push mov in pop mov add insl mov push jnp add or inc xor or or mov pop pop xchg sbbl mov push test xor and xor cmp pop insl push ret mov push dec loopne sbb daa and jge lock fnsave or aaa pop mov cmc ficompl out ret (bad) lock lret sbb adc fmuls push add fnstcw test pop push pop push jbe dec pop test repnz sahf sbb int aaa addl (bad) pop and pop rorl into popa sbb pop sbb cmp in (bad) imul test jp or fcomps decb ljmp cmp enter xlat jb dec (bad) inc call insl out jl ja ficomp jnp push scas aad mov push xchg enter test mov add jecxz ja pop repz sbb aaa cmpsl (bad) mov push jl add mov push cmp cld outsb xchg cmp nop mov xchg sti pop iret xchg (bad) dec push fcom pusha cmp xchg das mov ror loop and mov mov cld mov int scas sbb daa cmc xchg inc mov xchg inc cmp sbb cltd jne fbstp sbb into inc (bad) jl cmp scas sbb mov add in rolb xchg mov xchg push imul dec mov or movsb loop add pop push cmp fidivl and add jne lods sbb sub je hlt test dec scas (bad) lock (bad) test sbb pop ljmp push imul sub xchg imul imul pop js data16 (bad) jns fwait mov cli stc pop push jno sub jae sti enter push xor scas push or enter sub popf sbb stos fdivrl adc pop mov (bad) rcl insb lods repnz cwtl mov je inc mov push clc xchg (bad) mov mov (bad) pop cltd cmp divb mov call lds or jmp sbb sub push nop jl mov sub jmp jmp pop add cs aaa or std xchg xor mov or test fdivl xchg out dec es adc test imul test stc out pop jb mov mov mov imul fdiv add mov je jge push out aad es sbb cli adc pop dec in les add jae or flds mov clc addr16 sbb fcompl rol aas pushf push cld in cmp fistp jl xchg (bad) mov test sti or push sahf sub (bad) jecxz arpl and mov sbb add cld pop mov icebp mov stc adc sahf lret cmp mov xor sahf ja int push jp pop mov jbe cmp sub inc push fdivr sbb mov adc les mov test sbb sub jecxz orb dec adc or xchg cmp push sbb icebp pop daa std pushf cmc jmp es xlat mov sub popf (bad) movsb mov ljmp repnz and std js aad xchg je aas ret insl sbb aam faddl mov jno sarl sbb repz mov mov xor call pop add mov icebp clc sbbb fildll insl test and idivl push adc jecxz mov xchg scas sub movb add dec xor jae xchg lock pushl push xchg (bad) mov mov sbb and fwait cmp or stc push pop iret adc rorl mov push mov sbb rclb rol pusha cmp lods jl jg (bad) aam lea out je and lods nop push jnp mov fstpl mov sub hlt cmpsb pop js mov clc pop les push movsl stc push icebp repnz cmp sbb mov cmp outsb (bad) sbb (bad) popa in call andb leave pop es aam lods or call inc pop sbb dec adc pop insb into push mov mov ret jbe dec loopne ret into lods lods add iret sbb es enter in jae call out (bad) xchg aam cld daa fidivrl int cmpsl push in fwait mulb fisubl inc pop repz adcl (bad) mov jbe daa pop mov dec fistp sahf sbb mov push mov daa push pop or fildl xchg popf jnp and sub fmul insl data16 mov and push pop cmp (bad) push mov shrb or sti or (bad) xor fisttpl mov ds lods push or push insl iret mov (bad) les sub std mov dec shlb out mov nop sarl pop flds sbb and std or addr16 push dec mov sbb lods mov mov push fmull sbb add sahf push adc fiadd mov gs mov fildll cli cmpb aas pushf sbb and pop add cmp mov xor popf mov sbb push push cltd lods mov jle sbb pop mov sub mov jecxz mov out or pop in or cli mov sbb sbb mov sahf (bad) lock inc mov into cld dec pop or movd mov outsb cmp fnstcw xchg movsl jle mov mov subb in cmc or sbb adc xchg pop pop in jns jb mov ja call jno jl in push popf loop cltd push sti jmp pop insb mov repnz push pop frstor imulb inc lret std rcrb sub repz cmpsl push lods out std js dec cmp in movsb dec invd shr xchg inc sar cmp andl sub mov repnz lods sbb or fstpt les test sbb push adc inc xchg mov jno (bad) lds test divb xor js or add or inc notl popf cs pop dec aam mov call pop test lods jmp mov xchg sbb mov pop jl jmp stc dec sbb mov pop push mov in incb xchg std ds aaa push cwtl cmp sub mov int bound adc push dec dec gs pop pop in arpl jg adc ror push cwtl hlt or add jo out jecxz pop std test and es cs mov not push inc stc jmp fs ja xor arpl std add in cli idiv mov pop or cs xchg mov push js fmuls sub into call outsb sbb mov rol inc cmp insb pop sbb (bad) and dec mov test mull jb mov aad pop (bad) jo (bad) fisubl and sbb jge fsubr pop stos daa sbb inc insb inc inc dec in mov jbe je ds cmp lods insl xchg push emms mov loop gs xchg scas or call mov dec adc lock or sahf mov sbb and pop out js nop rorl sbb xor fnstsw enter xchg fcoml cltd rorb movsl lea push xor popf gs jbe xchg mov xchg inc loop,pt stos lock fisubl adc fnstsw push cmp outsl ljmp sbb fimull cltd ss mov push mov lea daa pop in push push push lret loopne fcompl sahf mull jg push sub adc push sub sub mov sub xchg sar mov push cmp inc and (bad) mov je fsubrl xchg repnz mov imul lcall mov cwtl or cmpsb cs pop sub fmuls lea clc in std or push mov sub or repnz lods mov xchg mov or jmp stc aaa sbb jne mov fcomps repnz (bad) mov or popf lods xlat arpl jp fnstsw and pop dec in loop mov mov jns ja pop dec push mov sub call xlat sarb (bad) mov bound (bad) cmp pop mov adc fcomp stos into mov movsb test pusha sbb fwait dec mov int3 ret dec fstl mov sahf jecxz ljmp sbb dec call or fimul adc xchg scas call repnz outsb xor je or sbb sub sub sub sbb jbe cmpsb pushf in mov test mov aas jp ficom sub mov and pop push or in dec std cs and loopne std sub aad xor inc or std or insb sti fnstcw (bad) arpl fsubl stc pop mov mov push sbb push out pop jge mov imul into jb test mov nop push repz cmp dec adc movb and or nop pop repz daa (bad) pop and mov sbb jge (bad) divps lcall out push dec mov or mov cmp fild mov or pop or (bad) sub mov cli push ja push in sbb jmp inc call arpl stc push or xor inc sbb rolb std aas or adc call pusha sbb pop cmp cmp or pop cmp and mov xchg sub (bad) insl sbb pushw xor imul cld jo mov test mov fldl2e pushf daa sbb imul xchg dec ljmp inc push push add movsl pop mov sar cmp mov in test (bad) cmp sub in popa push es js cmp mov loope dec push popf popf (bad) lea xchg data16 and aad xchg ficom inc sahf mov out lret aaa mov pop push mov enter std cmc int dec sbb lods or jg mov dec xor cmp xor xlat push push fisubr adc sbb add sahf sub or sub or jb outsl (bad) pusha add sahf push stc push or inc sbb mov jbe xchg pop in repz mov fldl into repz stos add xchg rorb mov aam fistpll outsb push mov or sbb data16 lock xchg mov imul mov (bad) pop cmp xlat pop lods fidiv push into dec sbb push sbb lcall pop icebp or pushf popa stc mov cmp lock pop les cmp mov xor ficoml rclb repnz popf xchg fucom (bad) daa popf movsb and xor lret push xchg or test adc push movsb cld ljmp cmp pop mov mov pop and rcrl clc dec fwait push lock or in js inc or mov mov mov lea adc cmc dec orb add dec lock das xor xchg add inc aam inc int3 out sahf dec sbb je xor dec iret aas cli inc bswap testb ja les adc sbb outsb add xchg sub nop mov fbstp jmp stos pop cwtl mov out dec jg cmp mov loop cld clc andl mov push or lods and mov mov (bad) (bad) sahf repz ds jns add inc repz mov jmp mov pusha mov jns loopne inc (bad) rcll xchg std cmp outsb int3 jp test in and push pop xlat xchg xor adc xor jp jle push add cmpsl movsb (bad) ja pop push repnz in pop sbb int lods jmp cwtl out imul pop test addr16 sbb daa pop jbe cli mov xchg repz cltd sub xchg ja sbb fs insl fcomi cs push mov xchg frstor mov out add je rcll push xor sub and (bad) call cli (bad) icebp cltd mov push (bad) jp ret pop sbb leave or cld mov push xlat out cwtl int push aas adc mov insl push adc sub and mov out out sbb mov pop in mov mov stos pop (bad) push or xor daa sub rcrb push pop scas pop (bad) pop push add aad push and mov ljmp rorb loop cmp dec mov push mov xlat mov loopne jbe,pt xlat loopne test loopne xchg out jo pusha pop mov xchg xor (bad) mov jecxz lcall pop or ret cld sahf fidivr imul and rorl outsb jle mov insl std jg adc es or clc (bad) push lahf pop inc cmp dec xor addr16 in fistp and inc jmp dec js xchg clc repz xchg mov jecxz lcall xchg push mov mov push jge js scas xchg mov mov sbb loope cmc in cld not lods rcrl rolb scas pushf pop sbb fdivr out mov ja ljmp dec sbb test xlat fsts jne std sub mov (bad) jl xlat push jae das inc mov std addr16 in xchg or mov ss add jle incl call loope mov pop cwtl rcll xor (bad) js popf sti vunpckhps dec gs fdivp adcb imulb sbb cmc rcrb into clc jecxz test ds ret and out mov call mov cli cmp je in adc sti add popf loopne inc add lock (bad) (bad) fild in jg push std mov sti jae int (bad) cmpsl or (bad) std push lea jg mov adc add sbb lret xchg sbb popa pop fcoms dec push mov jle das mov sbb dec ret daa fcomps lods push popa pop insl and mov pop or sar (bad) jmp xchg sbb movsb jecxz pop notl out dec xchg into fidivr pop popf push in jg (bad) ss test cmp (bad) sub push iret push stos popf push in imul or lds ja sub cs push push push inc dec mov xchg push test movsl cld sub loop add outsb cmp adc sti xchg lahf jbe ret jb scas (bad) dec mov outsb sbb dec lea pop xchg sbb (bad) pop repnz mov sbbb push mov rol xchg sbb je push adc xor pop into in xchg out sbb arpl jge cmp xor in sbb mov add jbe mov mov dec inc or mov bound sti jmp push lea fiadd into mov es sub lret ss jp js or ficompl pop ficomp sarl cld pop lds lret (bad) cmp xor mov rcrl sbb addr16 add xchg pop mov js shll fnstenv ds je or orl pushf das into inc mov mov mov clc test xchg paddusb pop pop push hlt in mov daa cwtl sbb or or push mov insb sarb sbb dec mov rorl stos into lcall addr16 cmp fmuls cli jb xchg out rcrl popf dec leave sub push test push lods mov mov mov lea cmp (bad) into mov std mov sbb fdivr ficom mov in decb test sub xchg fmul inc mov daa aas in mov scas icebp adc xchg dec adc stos adc xor inc add xor mov pop loope xlat mov cs or dec mov or movsb pop (bad) sbb xchg repnz jmp cmpsl popf in popa adc lock test dec push cmp dec sbb pushf inc push push jle pop mov mov pop xchg repz in mov push push test pop xchg popa fwait mov sbb (bad) cmc fs xlat js fcoms mov jae loope enter (bad) cli in (bad) mov clc popf outsl push notb xor cmpsl sub popf dec bound cli out enter das std test outsb push or in push sub lods xchg stos setbe enter cmp fcompl mov xor arpl shll cltd sub or fadd iret rorl fnstsw mov jle fistp pop add add push jb adc inc in cwtl js mov jle shrb popf nop adc jb insb mov sarl jge fstl aad hlt in sbb xchg js shlb xchg cltd scas pop and xchg js jb mov mov jbe sub pop mov cli fwait lods (bad) sbb or arpl mov sbb push xchg xor add adc cmp scas ficomp mov cli mov xchg pop aam rol cmp ror adc push aam ficom xor jg sub cmp pop add es xchg stc mov cmp cltd push push pop inc mov sti mov inc enter fwait dec push loope outsb repnz push pop popf fimul sub nop push xchg cmp cli inc fidivr lahf inc imull or popf test jae (bad) popa inc repz addr16 push nop sar sbb or dec mov shl (bad) or fcomps and jb cwtl cmpsl mov sbb lea dec out (bad) aaa xor push popf imul and rolb (bad) cli dec ss ja dec cmpsl or mov add jecxz sahf or mov rcrb push scas insb fstpt xor xchg shll dec sbb loopne andl mov jbe je shr push sahf hlt or mov push sbb and test mov sbb fisttpll (bad) sbb cmpsl sbb dec mov xchg jo or pushf cmpsl sbb cli jno push sbb scas pop inc gs mov xor sbb jns pop cwtl inc pop daa (bad) mov jo jecxz sub popa in cwtl push add ret and xor push aaa or add imul fnsave rcrl (bad) xchg outsb scas mov bound mov outsb dec mov (bad) cmp into or fstpt sbb add outsb into mov jmp pop (bad) out lods dec jmp repz sahf push loopne pop dec aam mov btc dec cltd adc gs cmp mov adc (bad) mov and ss mov nop int negl and lcall or adc lods jle sbb lods xor xlat inc cld mov push jae xor divb sahf dec cmp adc push leave ret inc push sbb jmp fsubrs in (bad) lock mov test xchg in jbe sub mov movsl hlt (bad) out push or push dec (bad) xchg lock outsb push mov adc popa cmp jp mov and adc div add lods test xchg add ljmp xchg lods cs (bad) xor sbb insl scas dec in js stos mov sti push ret pop dec out push jge clc lret mov loopne inc into mov dec pop test jecxz enter or pop test cmp into outsb xchg push mov push rorb sbb add sbb mov clc pushf fsin in (bad) jae sub cld mov (bad) add sbb xchg mov jne mov cli mov insl dec add mov pop cmp mov mov mov cmc mov jmp iret or sub and xor int3 decl outsl in cltd addr16 adc xchg fsubl mov fwait sub mov js int ss push add cli add hlt scas into bound or fcoml daa enter xor inc js adc std push xor (bad) jne mov pop add pop mov push ret lods out mov xchg fs (bad) lea test mov xchg popf dec adc lahf cmp dec or sub sti cmp test sbb pop stos push je cli aam cmp xchg int int popa sbbl or xchg fdivrl fcomps cmp or pop (bad) xor (bad) mov gs js fstpl pop xchg out or lcallw call mov ss add sbb movsl sub sbb cmp data16 std pop add cmp fisub sbb jle and out fdiv cmp mov mov aaa jle ret mov ljmp insl ja nop into cwtl sti xor rcrb and std fmull cmc pop pop test xor jecxz mov mov adc mov es cmp test pushf mov enter jno aam cwtl aas mov and loope pop pop adc in adcl cld xchg repz adc push iret xchg cltd lea (bad) push sub mov sub cwtl pop (bad) (bad) leave test lods jge mov rcrl jle test (bad) popf insl imul pop sbb pop testl das fs sahf xor add mov ss clc mov fwait cwtl push ret fdivrl mov push pop imul sub mov cwtl sahf mov cmp dec mov repz (bad) (bad) xor outsl lret pop arpl std pop mov sub push iret or inc pop (bad) pop into popf inc push add cmp push orb stos sub mov daa cs push in and decl pop pop mov sbb test aad js aaa and fsubp mov sbb cmc lret sbb dec sbb xchg sub popf push cltd jge loop mov fcoml popf repz icebp mov mov fsubr hlt or lock xor repz mov push add cli xor pop xlat popf fcmovb cmp (bad) aaa add mov pop sti dec (bad) int3 adc out (bad) dec repz jmp popf add xlat push mov mov in mov add (bad) aam stc js cwtl mov pop push push ss xor outsl xchg xor aaa pushf cmp sub daa or in mov movsb out (bad) lret aaa mov loopne cwtl loopne outsb ret out push das or rcrb or pop aaa sbb ds out cmp push dec bound or pushf int3 insl outsb lods pop jmp jge push popf movsl sbb (bad) hlt sub pop (bad) out jecxz jnp out and rcrl mov adc jl cli xchg rclb mov pop out sbb xchg ds pop repz mov cltd or cmp into adc clc sub dec mov je mov mov mull sbb (bad) sub push jle fistpll (bad) jb xchg push (bad) es mov stc adc xchg jno jns jg fcomps lds dec mov in dec movsl subb int test push outsl addr16 mov mov jne pop testl or (bad) jbe and ret and cwtl stos add lea mov pop pop int aad cmp push xorl clc adc outsb ds imul sub cltd adc xchg xlat jns ret xchg sbb (bad) scas jae or lret or jp imul data16 daa jno mov inc push mov outsl lcall xor arpl push pop popf and mov lock push xor ds jmp nop jp xchg push jbe mov or out dec nop pop push js clc movsl mov push cli and popf fidiv mov jle into outsl add mov ljmp cmp jbe call inc imul cmp jb mov aam sub and pusha mov pop sti sbb mov mov jp mov cld rclb and pop outsb popf shlb mull mov (bad) sbb mov mov push xor fdivrs and xchg add lret sbb mov xor call fstl adc sub cmp in (bad) push lock sub pop jle mov pop cld cld cmp jmp mov lea xchg dec sbb mov add push cld fistpll mov (bad) inc mov lods sahf fucomi add push test movsb orb in outsb fucomp cmc pop out fimul sub inc (bad) sub leave lods and dec sbb mov (bad) int3 sbb dec sub mov cs bound push cmpsl xchg aam pop outsb fstp jle dec mov xchg gs mov js call clc sbb repnz dec xchg xchg arpl jle or adc fisubr jnp lret jno scas pusha add or pop daa enter subl xchg cmp into lret fwait enter dec out xor lret jecxz outsb (bad) sbb ds mov es cmc or pop popf sub neg jmp push xor stc sbb lret cli popa pop test push cmp inc pop popf clc jp xor popf insb repnz test cli mov lea push stc fmul cmpsb jns pop js ds dec sbb and outsl mov les fcmove dec mov xchg sbb cld outsb or (bad) repz out push (bad) outsl stos das pop fwait lea mov ds rcl adc mov fldcw mov pop xlat fisubr (bad) es cmp dec xor subb adc cwtl cmc jp jle or (bad) cmc jmp sub fdivs rcr mov popf fcomi stos push std outsb test mov pop jae nop in enter jo push jae fdiv lods (bad) mov sub or insl adc out jb inc aaa jae (bad) and pop rol out and jne or nop pop in cmpsb daa mov int jnp inc std pop cmc jns push mov jg jl lret inc out cwtl mov rcrb lret out insl mov jle jo scas test aam imul out pop addr16 pop push push add sbb dec out push push mov outsb out es (bad) enter jnp gs into mov or xlat popa rorb nop xor lret and inc mov je ret icebp out call data16 movsb pop insl sbb rorb fisubrl cli shr xchg ljmp (bad) dec addr16 pop xlat inc aaa sbb ret mov lods jle pop fimull cli test jns jnp pop cmp xchg mov sbb push cmp add mov iret int popf xor adc dec (bad) xchg pop out xchg ret dec ds pop movsl mov cld and loopne xchg pop mov int enter fmuls pop dec lea jl mov xorl lods mov test push push mov out pop push sbb shll mov dec movsl (bad) adc pop cmp and mov aaa cld add loopnew mov sub fdivr adc sub push rol les test jbe,pn (bad) sbb lods jo fucomip xor jns add loope insl sbb movsb inc pop outsb mov cli bound pop xchg sbb xor adc xchg clc lods jg push jecxz push push xchg dec or out pop icebp cmp and in mov lea (bad) cltd jl sub jle dec (bad) fisub lea inc stc sarl aaa push adc sbb popf xchg rorb pop sub mov pop dec scas sbb jmp mov lret fsubrl loop movb mov xlat (bad) add (bad) inc aaa fsubrs sbb add add lock sarb stc sbb xor sarl xor aas popf push pop pusha rcr dec lret inc pop cmpsl push jle jecxz call insb fnstcw mov popf pop inc pop jl inc mov pop sbb sub sub or test pop in sbb shr cmp sti adc imull mov add nop pop cli (bad) mov pop pop (bad) insb lret mov adc dec popa cld cmp clc in cmp add sbb pop popf pop sbb push xchg sbb inc icebp push std jp sbb adc add mov lret adc and (bad) sbb dec aam jne popf add icebp rcr xchg je clc out cmpsb cli jmp out and es dec mov mov cli es adc pop popf jp and dec or push jae ja je (bad) jns push popf push ret push sahf outsb inc js mov sub out int std dec mov pop xor addl loopne insb mov aam out cmc xchg call sahf enter pop sbb add popf daa cli lahf jge shlb pop js mov cmp ficom gs call (bad) jno test lods or push sbb es sub or xchg pop pop cwtl es or insl adc ss std mov repz dec pop pop sbb sub popa arpl push cs outsb add mov divl cmp sub jp outsb mov mov cltd cmp mov xchg mov and xchg mov and push sub mul mov push jb dec mov enter pop or cmp push enter js sub (bad) jle pop mov sub dec or aam fdivrl loop cmp (bad) jge pop pop sbb inc cmp dec or mov ja mov add cltd and pop cmpsl dec (bad) je test dec (bad) and xchg test pop dec mov mov xchg loop pop aaa cwtl sbb jle push popa inc inc (bad) repnz pop xchg push (bad) pop daa push and jge ja cmp aaa inc xchg icebp pop pop in ljmp mov mov push out int push rorb push cli aaa fldl cmp cmp js stc xchg dec cld cmc sub repz insb pop test test mov in pop or jo idivl sub mov test or cmp cwtl movsb or jle or jge lcall testl incl (bad) cmpsb fdivrs adc mov or xchg fnstcw xchg outsl mov pop mov mov fldcw or repnz push (bad) (bad) out push int push add and pop add mov dec push sbb cmp xchg test adcl rorb je les test in mov pop push lods adc and sub push (bad) add jnp mov ljmp daa shl std mov or jecxz fcomps jle fcmovu popa mov push mov cs pop push sti lcall loopne mov lock movsl mov mov inc test in add adc repnz das pop cmp roll ret sbb (bad) insl inc clc and (bad) stos popf jle inc cmpsb rolb (bad) mov pop sub popl test jecxz lea lods rorb outsb jle pop sub ds cmp aad in into inc pop addr16 hlt aaa xor sbb jle ja inc fidiv popf in mov push push lcall out or mov xchg cmp adc xlat cmpsl (bad) jo movsb cli ret mov lock hlt pop add xor mov push mov in decb xor lret je xor push add gs lods repnz aam popf mov out sahf fadd rcrl loope sub cmp scas sbb mov ds es sahf mov (bad) iret aaa jg push dec cwtl sbb sbb testb repnz or popf mov lock cmp lds xor rcrb push xchg (bad) outsb cmp mov add and cmc hlt jge out cld mov dec testl sbb cltd jbe out test or lods fbld insl mov mov push push in pusha add in call push xor mov lcall or mov inc rclb aam push fisttp fsts cs insl es mov out push cmp mov and std or pop pop int cld adc pop cmp pushf add test sub mov imul sub lahf xor lods pop out add or frndint pop ret adc sbb xor out and popf fdivrs repnz (bad) mov daa sbb xor testl push loop inc mov push popf lods jmp (bad) fwait push cmpsb repz rorb sbb or aam mov sarb iret (bad) sub push loopne fwait and scas mov adc mov xchg lods jae pop jle sbb fidivl pop push jnp lods mov mov repnz loope and mov pop sub jmp mov xchg inc mov (bad) addr16 and cs sub cli ja pop in sbb rolb adc std sbb jp js loope loopne dec mov cltd test stos in std jp subl cs ret cmp pop aas or inc popf xchg and xchg jle push jo,pn mov (bad) or dec aaa adc inc fadds out inc jl test mov sbb mov and push mov fiadd test cli jmp push xor mov (bad) iret mov out sbb insl jge pop movsl popf mov jle dec je fnstenv and out scas gs push out in stc pushl push sub (bad) (bad) mov fdivr and inc xchg popf popf push fisttpll into loop cmp dec popf call inc (bad) pop popf sub mov xchg push leave nop cli data16 test loop pop dec cld push pop mov jae aam and or out test mov lods cmp sbb movsb sub dec outsb add mov test push mov int mov cmp dec sbb cmp mov dec cs inc push subl pop add push inc enter sbb shlb inc lahf add sub popf negl cltd sti notl in adc sbb pop pop arpl stc cli lods sbb inc test pop add jg popf xchg lods pop daa sub icebp leave pushf add mov pop addr16 mov pushf jge in iret test or cmp sarl pop mov jb sbb clc mov mov stos or push lcall sbb pop jp jno bound sub mov pop notl in arpl fs lods popf jge out fsubrs jno mov sbb fdivp lods jmp (bad) mov mov sub sbb inc add jbe push mov lods (bad) aam ret lea xor mov out lea cmp push sub imul dec int lcall cmp xchg inc in pop in or loop ss pop inc push pop mov jl,pt xchg mov xchg icebp xchg cmp iret push scas rcr mov push out mov sbb scas inc mov inc ret xor addr16 or ret in xchg stc or rcrb inc sti jle inc jne pop mov or mov rorb sbb arpl lret dec fs xchg ret adc mov mov mov push dec mov aad daa sbb shlb mov ja pop and adc sub sbb or (bad) mov push popf mov into ficom aam ljmp das aas or add dec or outsb push lds cltd cmpsl jge sarb push jbe xchg (bad) sub mov es ret jmp lret mov sbb push out jg sbb std jg push nop (bad) (bad) mov popf mov (bad) and adc mov aad les sahf hlt xor pop imul pop xchg mov out add pop sbb mov and push repnz out sahf sub inc movb sarb jle cmp inc xor bound and sahf stc lahf ja pop push cmp cmp and add jp pop xchg cld idivb sub mov daa outsb (bad) or or or xchg mov rclb pop pop inc pop repz addr16 xchg scas ret inc sbb push mov mov repnz xlat jle ss xlat lods push sub add sbb adc inc sbb aaa mov push in lea jb xchg sub in inc lods sbb xchg (bad) out aam (bad) lret pop call cmp rcrl ljmp dec mov mov adc mov ret imulb push shl insl jo sbb mov das rclb rcll inc add pop or xchg inc xor imul ja in pushl pop lds out fcomps imul fisubr pop add cmp dec lods mov or pop repnz pusha out int insb sarb loop mov sbb aad out call pushf inc cmp sahf dec inc add xchg or pop cmpsl stc push jb daa loopne sahf fxch jnp popf dec push mov cli int3 add fimull xor push mov ret dec sbb xchg mov sbb stos fbstp lods (bad) mov and gs sbb imul pusha inc fbstp mov or movsb pop jle xlat addr16 cltd dec or (bad) mov and pushf mov ljmp pop in aam pop add mov rcll pop popf std push jae pop adc std cmpsb push or jle cli cmp dec fist std xor aaa dec repnz or push jno jnp,pt je jae and mov int cmp and xor xor rep ja test cltd xchg pop push movsl xlat hlt in cli scas roll aaa or (bad) (bad) call (bad) or ss xor es aaa fsubs addb adc cmp (bad) jb in call pop xchg xchg aad out mov bound scas push inc aad clc jns sbb and andb rolb (bad) jmp jo sahf cmc xchg stc dec mov mov mov js adc mov mov cmp sub inc mov mov in cmpb lret mov xchg mov fcmovb insb lea pop mov xor and andl mov sub cwtl clc fisubrl call (bad) add sbb rcl xchg pop pop or sub push (bad) clc mov dec push sub adc mov idivl xchg push jge pop scas sbb or pop xlat je insl mul jno or repnz mov or mov or mov push rcrl stc cmp pop fistp dec mov (bad) roll xchg sbb cmc repnz notl mov sub fisttp or nop into xlat sub mov pop sahf dec sub (bad) sarb add mov (bad) push je jg xor xchg jbe xchg test adc ret adc or or call sbb popa pushf or jb xchg call mov insl mov cmp (bad) loop pop pop add icebp cmp sbb jle jecxz cmp jle or scas cmp stos pop pop pop rorb movsl out aam or mov enter push (bad) fbstp out test and push scas dec fdivs mov call inc push pop mov sbb jle sbb ss daa inc lahf repz and and push mov xchg cmp xchg mov lods jg cmpsb mov xchg mov and adc or in or push pop add movsb (bad) cmp std inc jecxz ret int3 rclb outsl stos scas mov popf test and add call pushf push mov sahf hlt subb ja sar mov aaa cwtl mov movsb mov cltd movsl popf insb xlat lock js mov inc sub cli mov dec xchg ret in mull and in push dec mov in fstl fistl rorb pop imull (bad) dec insb mov sahf addr16 lahf sub sbb sbb std mov repz sbb sub sti push outsb nop popf or neg icebp stos adc test dec icebp push sub addb (bad) mov pop and xchg xchg dec mov sub (bad) arpl es addr16 mov mov inc out cmp shlb call ss cmp push dec in add xchg sbb pop sbb sub insl fiadd in jmp pushf loop ljmp dec adc sub jbe enter loopne mov cmp jo or xchg cltd dec xchg loope test add stos jecxz fsub lret push into out outsl and out push push push mov or cwtl xchg sbb test aas jg push mov jecxz ljmp inc xor sub pop sub repz xlat cmp inc addr16 ds sbb xor in int sub cwtl push and sbb (bad) mov ds mov jmp dec push sar pop cmpsb fs repnz and lret in inc mov dec ljmp sbb fdivrl leave loopne ret mov mov jne shlb es or cwtl jle cli mov into out into mov push push insl mov mov stos sbb in (bad) movsl das repnz aam fld sbb mull mov cmp fs jecxz pop ds ficomp scas ss popa (bad) pop xchg mov xor xchg push fptan ret cmpsb mov lock and sub cmc (bad) sbb iret dec mov push or inc outsb data16 mov and ds dec mov bound dec bnd les sub dec push nop pushf xor mov aaa out jns pop sub icebp loopne push (bad) jmp jo inc outsb cs sbb mov pop mov (bad) insl rcrl xchg loop stos xor popf pop adc movsl into lds fsubr sbb (bad) call lds dec cs cli mov mov adc (bad) aam int sbb outsb repz sbb inc loope push scas cwtl mov and (bad) popf lea std fistp test and pusha inc pop sbb pop rorb and in cmp jae pop sub cmpsl jle,pt xchg addr16 sarb jne jge or lods mov sbb cmp mov adc insb call (bad) cmp adc clc pop je xchg add loop sbb pop addr16 xor sub (bad) dec add sub fldcw or stos jp xor outsb add stc je or pop xchg push dec sub pop decl repz xor push mov test mov push push mov xor les lea jle test pop lret cltd push aad sub mov test aaa out or aad pop lea test push cmp mov loop push push xor cmp cmp adc lods adc ficomp mov cwtl sub cli mov or enter in out pop lock fcomp notb mov cmp mov outsb add mov pop addr16 repnz into sub test stos in add cmp push sbb into xchg mov push mov lahf add xchg mov add (bad) nopl cmp sbb cwtl jns dec adc mov incb in inc pushf into xchg fdivrl pop mov cld pop je sub sbb pop lods scas pop test jle xchg push (bad) popa daa jmp (bad) sbb ret (bad) js xchg add cltd dec shl call push mov pop push sbb fcomps sub jno into in add test xorps cli jp mov sarl pushf add jg or sbb std inc mov aaa push sti ret sub add or in arpl xchg push or mov push mov pop (bad) fucom loopne mov push data16 out xchg mov cmp mov daa push es dec sub les push xlat jo sub jl dec popf (bad) dec pop mov push lds cs hlt or ja dec sub sub pop (bad) (bad) jb cmc daa out pop popa xor out test cmp mov les fildll cltd sub cmp cli sahf mov out mov push test loopne cld add cwtl mov mov add fstpl add pop insl inc int3 mov out and sbb imul repnz cltd leave pusha xchg sti sub mov cmp in and cmp jns mov inc xor mov cmp pop sub call mov pop jle xor push int3 mov mov stc aas lea bound pop mov xchg inc (bad) sub and mov fldz sbb divb sub pop add call js mov sar out in xchg jae rcrb cmp in repz dec (bad) add or pop fnstenv mov xchg xor push loopne neg movsb add xchg or out mov out sub or lds fldl lea lret mulb mov pop sahf mov mov ja mov xchg ret les pop dec push cli out out lcall movl adc (bad) jle aaa jp aad shlb pusha mov xlat sbb sbb jns add pop sbb outsb sbb stc cs sbb imul ret push push mov push xchg or pop in insl mov sub sahf xor pusha push adc sbb andl push fstps test call push aaa stos mov aam enter cmp cli sbb into push cmp add in ss mov cld inc aas add xchg into lret mov pop pop sub or mov bound icebp cmp das repz mov or mov (bad) (bad) aad ficomp loope mov mov push in hlt mov xchg lock std cmc mov cmp xor cmc xchg in inc and out xor push (bad) cmp (bad) add mov jg les adc test cmpsl callw push addb outsb add inc loop sub idivb lods cmc in cmp cli mov fcomps mov inc call js imul mov fmuls sub test pop daa gs lahf clc xchg js daa or or lea pushf daa sub push push mov pop int lret or (bad) (bad) mov mov jge dec sub decb mov lods stc jge pop push popa push out notl test push or sub aad push pop mov clc dec xor add fistp (bad) mov or push std aaa mov sub mov pop pop idivb mov dec jg push stos push xchg push (bad) cmp mov and cmp pop cmp push jcxz cmp sahf inc cmp lods mov push hlt mov les stc sbb in pop or out add or fsts or js or in sub call popf rclb bound push loopne in and fimul in les sbb in sbb mov ljmp fisubr icebp in jbe movsl or sbb pop and dec push jbe sbb hlt sbbb fstps fcomp in mov cmp or fstl jns mov out xchg std sub push jne pushf aad mov pop lahf movsl aas repz outsb mov xlat call inc aad inc sbb xor (bad) mov test sbb xchg popa dec mov jle pop scas xor push movsl out call add shr push dec insl clc or mov mov add jle push xor add in shr pop mov mov push loop and cmp shl mov ds or push test xlat mov sbb push sbb cmpsl mov mull out or and or les push mov mov pop mov mov cmp pop js add pop jnp aas inc andl rclb bound cs jno clc inc pop sub xor int ds pop mov (bad) or cltd pop into push rcrb adc lods mov xchg xchg cwtl jns sub xchg mov or pushf insl sbb sbb pop sbb scas add dec (bad) xor add pop rep adc xchg add push mov aaa es xchg imul ja out mov js sti push cltd jg mov jge sbb and pop daa mov neg fistp cmp lret in daa out dec or fwait jle add jno fsubr jbe mov rcll js pop inc jmp fwait je xor mov inc cld pushf xchg sbb jae lea shr jg pop clc sbb aaa jae push jne or aam mull xchg cltd jbe sub xchg xchg sbb push jp mov imull or std or ds fs pop movsl mov out add fistl or mov sbb call push or mov xchg scas in popf inc xor fisubr push cltd cmp ja xlat add mov jl int in (bad) mov pop pcmpgtd mov stc pop lods add fidivl pop sbb test mov push cmpsl xor leave call cmp adc push xor inc cmpsl sbb cmc dec dec popf pop fdivrs int popf pop push ljmp push arpl mov ret cs stos imul sub push push aaa imul rclb cmc push pop mov sbb xlat jl pop lret jb (bad) jge cwtl jnp sbb adc mov xor or rcrb imul std inc push lods cld (bad) ljmp movsl mov push xor insl ficoml push jno test repnz je pop pop call xchg mov test dec mov sbb outsb xchg sbb pop enter out rorl pop or lock ds (bad) aad xchg pop inc cs mov cmpsb cmp adc mov sub out jne repz xchg bound mov push loopne and push loop dec adc mov jns mov (bad) sub cmp mov jb addr16 push mov cmpl js jecxz popf loopne lods std hlt shrb mov or mov clc les add stos test dec je dec (bad) (bad) in (bad) or xchg push in sub jle push in jge or fs outsb in out daa mov pop popf sbb mov mov nop pop out or lahf dec xchg jo jge cmpsl mov insl arpl lea flds add xchg xor fstps sbb push rcl lods adc loopne (bad) sbb js sbb (bad) out std push aam pop lock loopne lret out or sbb xor clc sub push sub lods and (bad) mov cli aam call add ljmp bound ret cmp and cwtl or pop jbe jnp fdivrs icebp cmc jg sahf sti mov cmpsl movsl addr16 push jl addr16 and or fmuls pop sbb int3 decl adc enter dec dec push es adc cmp sbb xor push dec mov jne into mov fs jbe mov fcomps cmpsb stc add test adc jecxz cmp push jle push imul out repz mov insl daa addr16 mov mov ljmp pop dec scas outsl sub in jl (bad) cltd sub push (bad) push jge rcll cltd out das testl add dec stc popf popa gs dec or (bad) push mov xchg adc xchg into xor mov mov push xchg pop sbb pop int add popf test sub cli xor mov and xlat stc mov pop xchg cli bnd mov cli push add adc insl pop push push push outsb mov mov test in add sahf cmp das xchg jg or mov addr16 mov xor push outsb push loop hlt ret mov or inc cli sbb subb scas sbb mov mov push or andl test or pop push mov and cs dec and sub sarl or out jmp data16 pop mov arpl in mov xchg addr16 daa std notl pop ds fcmovnbe push in ja stos add mov add fisubrl divb popl das pop pop sub sbb xchg mov push test lock sub adc xchg jg loop fcoml jecxz pop fstpl mov movsl ja insl sahf pop sbb in pop inc sbb mov hlt pop inc sahf sub js cltd aas mov stos jae frstor mov jle lret ds lahf jecxz sbb cwtl outsl jae out xchg mov gs sti dec out popf pop pop into jg lret xchg sub inc pop fidivrl adc xchg lods pusha cmc mov imul (bad) lcall fnsave mov mov fidivr push xor in xor sub lea pop cwtl (bad) jb int3 pop xlat sbb mov popf or lods (bad) mov push out xchg xor mov or jg aaa and mov or fnop mov enter dec mov pop push xchg jnp rcrb cmp push jb adc pop inc mov bound push xchg pop push repz pop (bad) push jle or repnz pop pop (bad) inc ja push out or mov pop jb lods js or xchg mov xchg push rorb sbb pop mov xor dec aad pop jno lods fstl xchg pop adcl add aas fwait mov test mov cmp sbb sti cltd xchg sbb bound and loop in stos ret pop xchg bswap dec sub mov lcall jbe into int ret out sbb inc movsb fdivrs test mov push xchg mov sub (bad) push loope (bad) ljmp sahf jb or (bad) mov sbb in ficom pop mov dec mov roll xchg or adc out negl mov mov sbb popl push mov pushf or ficoml or out fdivrl outsb sub pop mov sbb xchg in push decb xor ja jno mov jmp cmpsl inc jb or mov adc std scas out idivb sahf push add stc jg push xchg sub sbb scas je jge cmp sub or scas (bad) pop sbb rolb sbb das xor hlt jb inc (bad) cli stos xchg repz scas fwait fs mov mov mov mov scas aaa enter push fcmovnb aad pop mov loope (bad) mov mov cmp mov sbb loope mov xor fstpl jne loop pop xor sub or pop out push fdivrs jle cwtl sahf dec mov out fmull sti lds mov push (bad) mov loopne xchg lds jg cli jge (bad) xlat mov jle daa pop pop cmp jb sbb loope lods jg or sub cmpl mov mov jge push sub jg lea cmp out sub in cmp sbb xchg push (bad) icebp jb fldl push lods sbb loopne jae cld xchg lret mov in out inc sarl arpl sbb int3 and aas mov xor fmul or jo es rorl sbb es cwtl mov add ficomp cs lea push inc je mov fs sbb int ficompl cmp mov push test test cwtl popf lds out mov pop mov les xchg dec loop sbb cmc pop (bad) jns sbb nop sbb xchg cld sbb jg pop xchg mov pop pop or jmp dec cli mov data16 jg (bad) pop arpl mov dec jmp push ja pop push aam dec jnp dec lea fwait iret push fiadd adc mov push and adc or shlb mov (bad) add sbb push lock mov ds mov pop sbb pop pop adc push fcmovne mov and cmp out bound mov rcrl inc sti mov inc scas inc dec push adc mov jecxz std popf dec push add xorl add jo (bad) lods add jp push inc das iret cmp loope cwtl lods jno mov adc jge push push int3 xor les test sbb gs mov add pop (bad) neg or sarb push sbb or neg fwait dec cli mov lcall lret push push ret pop xor mov push jle in decl lods pop mov pop add add xchg add inc dec sbbl call sub leave pop jnp xor pop cmpsb push popa cltd stos mov mov sbb (bad) pop cmc fistl push and adc movsb sub push xchg sub cli icebp mov loop add xchg jecxz loop imul or fstl dec hlt popf push inc in xchg sar xchg push out cmpsb pop push inc ljmp xorl jnp push cmp pop add sbbb cwtl enter and push scas shlb add stos xor inc jmp xchg sbb push (bad) and mov pop mov xchg pushf jo stos nop shr pop out xchg popa js cmp push fdivrs or or scas jne dec cli xchg jmp dec inc push fidiv cmp sbbl (bad) mov jno inc xchg push scas insl mov fsubrs dec pop sarb mov faddl and pop scas inc rcrl jecxz mov int3 push add mov dec rep fs inc mov and out fstpl sbb je notb imul in or (bad) mov outsl lahf xchg cltd add push lds (bad) into lret xchg or lret mov sbb icebp aaa sub cli sbb and push (bad) cmc sbb and addb (bad) popf adc push inc imul add lods (bad) push adc pop out push es mov inc push outsb (bad) das cmpsl adcl push mov mov nop in cltd mov push loop jge scas int push mov (bad) movsb js in inc cmp sbb fcomps mov cmpsl aas inc sbb fcos xor mov adc add lods jle mov sbb push and adc jg dec xlat cs push adc and push push sbb xor push hlt gs mov mov push inc call ljmp out dec jb outsb addr16 std sbb in push loop inc pop mov mov lea ja and cmp popa jne xchg (bad) pop (bad) dec pop xor lahf fild mov imul xchg sbb das mov (bad) clc pop xlat push push push mov and adc jle aas into mov push jns out fisubrl jg cmp xchg pop pushf dec mov or push pop sub push push pop and jbe test dec repz pop (bad) push jl add cmp adc rorb pop xchg pop fild push and adc loope ss fcomps (bad) or addr16 int jnp jns ret inc adc repnz test inc push scas adc or aam pop add scas fsubrs dec dec and js push jle add push (bad) jl sbb push pop inc adc push jo daa in lcall fdivs or sub mov mov dec sbb sbb xlat ds sub bound push or push out adc xor ss loopne mov sti insb popa addr16 loop push jge cwtl xchg xor cmp sbb stc jbe std fsubp fadds xor xchg pop push sbb (bad) fsubs jmp adc out cwtl add push test mov cmp fisubrl mov imul pop aaa fs adc lds pop aas jmp or cmp xchg push (bad) pop and cmp dec frstor sti mov xor lods mov push pushf lods out mov inc imul or or jmp add jae pushf push hlt sbb cli push pop xor stos cs scas xchg iret std adc rol ja push cmpsb loop call pop sahf lcall mov xchg push push add (bad) adc inc mov mov outsl fdivrs cmp lods imul push sbbl sbb push dec in jb in xor push cld jno in stc je push inc xchg inc push andl add pop mov push mov and enter arpl push je shr xchg nop stos mov add push jae scas pop into and or pushf testl jo daa (bad) icebp push in cmp push jb mov jg out pop scas push or jns test fldpi xchg adc push fidiv jg pusha xor lods jno popa pop push scas ret les jmp mov push jge enter cmp loop lods push das sub (bad) aas inc mov lcall dec (bad) outsl push sub jne pop sub pop cmpsb (bad) lahf scas mull adc cmp js mov fwait xchg cld inc mov mov or add mov out shr pop lret push cmp out xchg cltd sbb add push pop daa hlt pusha pop sub sub out inc push icebp sbbl push mov push ljmp stc cmpsb dec in pop adc push ja sbb push push out int aam push mov (bad) push lods sbb sahf clc inc dec sbb aas es pop xlat xor push popa daa outsb add xor and scas push jne cmp cmp push dec xchg test test icebp ficom je push pop leave push mov adc push xlat jl loope mov pop movl cmpsl test fldcw scas cmp push jle add rcl orl adc enter sub in push call cmp push push push sbb cmpsb pushf mov gs push pop add and inc dec outsl cltd in stos mov ret adc inc (bad) jns add push rcrb out (bad) xlat js adc mov (bad) je cmp sbb push pop bound sbb xlat inc sub fisttp and repnz mov ficom (bad) push push das mov lods (bad) push clc insl push sub mov ret fstpl push dec fadd into pushf cmpsb popf push jns nop mov and lcall loopne or pop lods sahf and mov push fdivrs test adc lahf lret outsl fldcw pop pop push stos push dec xor pop pop push adc mov adc aam fcoms push jo mov outsb push insw sbb inc jnp cmp sub fcmovbe out or or mov aam repz xchg das lcall or jo iret push xor jnp sbb or jp mov inc xchg pop mov lock pop adc fistl lcall ljmp shlb and sbb nop jbe int and push mov in dec xor mov loopne push xor in jecxz push inc mov sub xor xchg int3 mov cmp xchg imul ss push (bad) dec cmp loop ljmp cwtl mov mov mov mov clc sbb mov and lods sub xchg add int3 mov xchg dec aaa xchg mulb pop repz pop or outsl movsb dec xlat in mov jno loop (bad) lret fst inc enter jg pop mov jl push xchg inc icebp fld std push push xchg mov and (bad) js push sub add cwtl das (bad) in push pushf enter inc xor push cli js xchg push pop popf jge sub mov or xlat jp xor jge hlt pop inc pop out ret sbb mov cmc and aad inc push gs mov in imul inc js pop fmull clc push cmp stos aad imul jno cmp push pop lods ja dec rcrb mov in xor mov dec pop repnz cmp addps rorb sbb pop pop incl xchg pop es fcmove push arpl push ja stos aaa aas jg lods xor jns and pop mov insl jnp lcall loopne (bad) lock cmp test xchg incl sub mov adc or cwtl adc insb mov imull into leave aaa push mov jno push inc push scas psubusb and push das add cli jge push mov ljmp out xchg cmp push fwait (bad) jecxz adc dec mov add sub push pop int3 push lds xor push mov mul sbbb dec sbb push adc mov scas push or xchg push and fsubl jge mov mov loop es add inc cmp xlat push jae pop fcmovne out mov hlt xor iret xor sbb xor das inc ss push mov (bad) std data16 dec lods imul mov dec adc push pushf mov mov hlt lods mov fldcw out movsl je or mov inc xor push sub addr16 pop adc pushf repz push and push cmp push test mov push xor mov mov and push in dec cld fst add lods push lret lds inc jb mov or dec inc ss mov pusha pushf add cmp or inc test xchg test (bad) sbb push push repnz mov push inc lret sbb sbb hlt sub add pop call xor push out push outsl (bad) dec fs xor in sub xchg xchg adc push repz jmp (bad) lea cmpsl das jg std jle push pop lock xor mov cmp (bad) jl jle lock (bad) icebp push out das cld sub sbb cmp aas push fs xlat fdivr mov cmp into gs or (bad) push call and xchg xor adc pop jp sbb cmp or jb movsb pop sub jp scas daa ds add stos mov and xor pop outsl add sbb arpl lcall pusha jecxz outsl sahf jle sbb (bad) aas sbb push adc divl addl jge xor and and jl fnop add test mov sbb das pop push cmc in mov cmc int3 loope jnp rcrb push push loop sub add popf cld inc push push cs pop and cmpsb push out jecxz sub xor test or clc scas mov adcl arpl mov out enter xchg mov inc fdivp mov cltd outsl pop xchg cmp lret fs sar in js ja sbb popa cmpsb dec jge mov ja cmp adc cwtl mov lods pop jle mov repz leave cmp fnstcw aas mov test ja lea lock mov dec pop lock bound (bad) pushf xchg rorl (bad) sub mov fs out insl icebp push cmp or ljmp rolb pop loopne je insb xchg imul jecxz (bad) lret jge inc negb pop dec push in in inc notl clc or addb adc push in gs pop sbb mov pop arpl jb (bad) out rorl dec dec inc or (bad) adc ljmp cmp xlat inc sbb ret fdivrs mov rcrl and cmpsb repnz and ja jno movsl dec popf inc push pop iret aad scas mov sbb ja adc push dec insl jns mov fcomp pop xchg sbb fisttpl pop mov test lea ja out iret neg adc xor dec fcompl mov dec mov and sahf push add fnsave hlt dec movsl xchg sbb (bad) xchg lods inc aam lret repz mov (bad) loop pop sub xlat ja bound mov ffree inc jo sbb mov insb dec jle aas xlat jnp cmp arpl jge in jg fdivl imul in ja cltd push cmp adc fisttpll xor sub sbb in sahf cmp and pop mov and dec jb push fisttpll pop int pusha xor pop outsl dec int mov pop and repnz (bad) mov (bad) and lods (bad) fsubs (bad) mov or mov lods lds std jmp fidivrl push cmc imul (bad) push sbb sub inc mov pop stos clc daa out arpl leave mov ja jecxz inc das xor fdivs ljmp ja int3 insb pop repz cmp mov bound rcrb je inc ja shrb repnz mov popa fsubs test test loope and nop adc adc cmpsb es ret adc js cmp sbb sub shll aas in inc lcall mov ljmp lret icebp jmp dec movsl jnp in (bad) aad dec lcall enter fs mov cmp stos push lea cmc jnp push pop and fcompl pop push sbb mov cmp inc leave js pop xor sbb lods adc jnp ja pop jbe shll pop add test jge (bad) rorb iret das arpl test mov mov arpl stos lea mov jecxz mov jge sbb lods dec emms icebp dec jl jns pop jae or and cld sub fwait in xorl ret into sbb push sub outsl and dec inc out in jl push dec jne loopne movsl aas mov mov pop inc int3 fsubs xchg mov cwtl jnp push out fstps pop xor arpl and repz test (bad) sahf nop clc sbb sarl xchg pop and fsubrs xchg inc adc lods inc xor int popl rep loop sahf mov mov pop popf dec dec push (bad) clc mov vpsllq aas in sahf jle loop divl outsb fst arpl or mov mov test mov test add arpl enter repnz xchg out jnp test jle mov int sbb pop xchg pop mov pop xor (bad) loope pop pop xor incb (bad) fdivr (bad) cmpsb sub test (bad) repnz ret fprem1 ja lahf sub aad push xchg and add dec jg aaa xchg gs js push test pushw sti adc mov sar (bad) sbb add sub mov dec (bad) jnp adc xorb shll jns (bad) aaa or sbb inc sbb push jge inc mov mov inc outsl arpl ljmp lret cmp stos scas mov push mov and cmp int3 pop mov adcl sahf fcmovbe bound fwait sahf lahf pop clc xor jo sarl insb negl (bad) lds sbb aad cmc adc repnz test in adc mov xchg jecxz push jno sbb enter sbb jno movsb xchg popf je inc imulb aad idiv mov arpl cmp dec jle and sub cmp (bad) jb out and adc sti xchg mov idiv arpl mov (bad) int3 test gs jo popf pop aaa arpl int repz mov test jle jecxz mov fldt mov mov aaa ror dec enter aam adc jl loop int3 sbb mov icebp sub or jge ljmp daa out sarb dec or mov clc sub xchg rcll ljmp pop lock push shl cmpsb ret rorb jo jae insl clc adc xchg jle adc stc repz test gs adc xor clc dec mov jns lods outsl sbb jg push nop add (bad) out sbb lods jbe outsb mov push fcom into (bad) cmp lds sbb adc mov int3 mov mov shll pop leave arpl js rorb (bad) outsb fs hlt mov test inc aam or jno fmull sbbw test movsl sub adc fstl mov and in jo push cld arpl sarb dec ret dec mov in lcall sub aam inc scas xor fsubs scas dec mov pop arpl jmp popf (bad) fldl2e movsb js loop in lcall rclb and adc jno xchg cmc mov and rcr mov lock fmuls sahf adc les lds int3 inc mov mov xchg push neg sbb mov jns mov (bad) mov lcall nop sbb (bad) cmp lret xor out and (bad) into sbbb ds stos test adc ja popf sbb fs test in cmp ljmp std lods pop push xor enter arpl xchg (bad) into pop nop sub adc nop daa lods mov inc in repnz sbb mov stos mov xor pop int3 push arpl fidiv sti sahf vmwrite test lea sbb push lods int enter ja pop push out push in mov sbb popf fdivs hlt mov loop mov inc int3 movsl jle pop xor mov in sub push loop mov sti mov cltd dec pop inc lods in nop mov jge fiaddl movsb movsl push pop xor not cwtl adc cmc scas lcall repnz sbb in mov test stc sub mov push and ret fmul ja mov fwait icebp push or out fnsetpm(287 push repz mov add hlt rclb sbb shrb aas rorl arpl jns ret sub cld rolb cmp jge mov mov inc scas mov (bad) mov rcrb faddp out fistl dec cmp shrl mov rcr imul jp sub mov outsl lcall cmp cmc cmp xchg rcrl aas xchg in mov mov sub adc jge popf stos inc and into arpl jne xor insl adc ja xor push fcom add stos or mov (bad) xlat pop sub out jge sahf or sbb scas gs js (bad) dec adc xor loop pop jae mov adc arpl pop sbb push sub inc sub xchg add sub xchg lcall dec mov jb mov sub pop sbb aad adc andl (bad) ja mov cmp mov dec inc adc out mov adc lea mov and adc iret xlat pop sub adc enter lcall cwtl pusha outsl inc out out dec stc cmp leave cs rolb adc std add xor pop loope rcll xchg jge lds (bad) into cmp out fildl nop and pusha (bad) cwtl out and jb adcl scas jmp cmp pop enter in jmp xchg fiadd pop aaa push xchg (bad) cmc or sbb ja xlat ss in mov jge (bad) scas test sub (bad) aad int or sbb and fdivr ja daa xor cmpsl (bad) bound jge out push inc jge jmp cs sub sub xchg out add and or dec mov sbb pop adc lods dec cli inc push sub sub ja or jl out mov arpl pop les xchg or ja int sbb and adc popf mov cmp mull inc jo fsubl pop leave stc xor xchg inc inc sub pop cmp addr16 fnstcw jle and or inc insl leave ds sbb or repz jns xor fidiv jl repnz mov ja lcall int3 imul sbb or or fnstcw mov push pop ds jmp arpl mov pop clc test hlt in xchg jecxz or and das pop xor cwtl jmp cmp mull icebp and and insb push sahf (bad) push jmp popf adc and ljmp sbb mov stos stos out in ja xchg xor scas xchg inc shl pop mov cmp pop insb ja jb leave fldenv nop dec mov adc mov imul imul jnp push aas mov daa icebp mov adc push icebp (bad) call cmp xor inc bound mov sbb pop or xchg dec insb popa push push (bad) int mov imul pop icebp xor std lods outsl xor cmp pop in sub inc call jae mov popf mov sub push lods lods mov jmp loope xchg (bad) xchg iret data16 cmc out rolb mov mov adc mov push bound lahf pop sub mov dec inc sahf sbb icebp cmp xor push stc test repnz pop fdivr push lods push loop pop fnstsw test xchg or not sahf inc mov mov cmpsb jns lods xor and leave fwait push in and or inc fsubrs pop lea xchg popf repnz lret test outsl lods popf in dec xchg aad repnz jbe xor add adc int3 imul scas fdivl incb xor aas push mov pop lahf mov xchg adc cld mov or in cmp fcomps mov das rorb rcl ljmp mov add inc test sbb push sbb xchg std and mov cmp lahf xchg or arpl fcmovu jae pop sbb in test ss lds mov cmp sbb rclb fld cmc std (bad) call pop mov ds jle adc ds jge repz mov dec mov pop xchg mov inc pop push and jbe rcrl (bad) lds or add outsb loop daa push pop inc and xchg ja inc aaa sub test xchg push fdivl fs add and jmp leave lcall out arpl out fs mov mov jne and in addr16 pop ret xchg add pop inc bound leave je test hlt arpl (bad) cli pop arpl jge pop (bad) and dec cld fidiv loop movsl or aad sahf ret mov ja leave jmp std add jnp pop cs and mov (bad) out pop enter and test imul jne add xchg jmp lret arpl sub imul fsubrs mov std pop push enter xchg cltd xchg jecxz or (bad) movsb fdivrs (bad) pop divb mov popf inc ja jle mov dec add into scas arpl lea div movsl jl insl sub cwtl int3 xchg cmpsl jo arpl add ret jp cmp std sub (bad) popa loop xchg int inc jmp test bnd or jne test dec sti inc jg mov and in xor imul mov out mov test sbb std fiadd add cmp imul dec jnp inc sbb arpl andl sub xchg lods xchg fcmovu xor pop mov mov leave dec fs fisttpl ss loop dec imulb and lret cmp out add lods sbb push dec bound subb cwtl jne (bad) sub xchg fcomip sub gs cld push jge inc xchg mov stos idivl mov sbb lcall jno mov (bad) mov cmpsl lea fnstcw sbb inc outsb mov xchg pushf mov jnp sar sahf jecxz aam dec or int3 scas and sbb arpl pop and cmp stc jo hlt pop mov sub mov ss jo clc imul xchg add addr16 inc fs mov aad lahf addr16 pop sbb (bad) mov movsl jle and sub out (bad) repnz dec rcll mov stc or enter xchg sarl leave cld pop lcall sahf ja call jmp sub cltd dec mov push or inc push xchg fwait scas int3 xchg les add push mov push pop fstps lods fildll clc lds push dec adc push or sub aad enter xor in xlat ja dec adcb xchg xor fidivr dec icebp mov pop xor push test call lds or stc das popf add sub jnp mov pop xchg add xor lds mov ja mov push in xchg hlt add jb daa sub loope test jg push popf dec nop mov lods add (bad) jo daa (bad) sub push mov (bad) fdiv cmc arpl jg in ja test sbb push (bad) daa lcall and xor gs outsb jnp loope fs cltd (bad) adc jb pop cmp push dec mov xor fisubr push push cmp jno mov arpl rclb jecxz out pop aas sar test pusha nop popf add xor scas xor bound es inc cld (bad) repz (bad) out sub cmp shlb sti mov clc scas clc enter sub outsb xchg push cli stos xchg jo mov stos aad push jge and xlat (bad) (bad) adc cwtl mov repnz pop push (bad) (bad) iret leave push jp outsb outsb test test dec call mov ds out jecxz jno jl mov or int3 xchg push lock push lahf lea dec add add cs (bad) test ss pop sti push fdivrs sbb inc lods inc jne mov xchg cmp push cmp mov test arpl into (bad) sub mov mov stc push and ja js dec xor or pop add (bad) leave lret clc sub arpl in sbb jne loop jo test lods dec pop or loope dec call pushf xchg pop dec push iret arpl mov mov roll roll icebp pop cltd jmp test pop loop movsl pop jnp (bad) arpl ret jge dec std mov xchg mov sub jge bound add pop neg or mov fsubs pop fdiv pop stc ja addb or popf push xchg (bad) ja jbe push or loop,pn pop push pop xchg fistl pushf loop repnz or or push xor (bad) lahf gs mov and sbb test cmpsl dec mov push push jb ja dec xchg lahf cmpsl stc or icebp cwtl out clc stos sahf pop push mov in jns ficomp xor imulb leave (bad) jns fstpl jne push shl arpl sub jge arpl mov mov jl or aas xlat xor pop sub or loopne xchg dec ss out push nop dec (bad) ds jae imul jmp mov sahf sub and mov fwait cmpsb xlat rolb or es (bad) call fisubl (bad) repnz dec ret pop fimul sbb push mov cmp leave pop push test rcrl std test iret cmp (bad) push pop outsl mov clc into lods cld iret int mov scas aas mov dec adc (bad) push dec push jge addl jns out xchg jl xchg fisubrl cmpsl adc scas arpl stc je aad (bad) in xchg cmpsb repnz aam inc add (bad) jmp lock sbb cmc subl mov ljmp lods dec add das adc stc push mov lcall test in sub or sub ret imul stc and fisttpll movsl push sub out add cmp mov out arpl or sahf rep ja gs fwait pusha sarb push pop jecxz jbe in ss or les sbb (bad) mov loopne sub repnz mov daa icebp mov ljmp pop lret push jnp rcl sbb mov hlt loop mov (bad) xor jl gs xor fcomps push mov push nop inc inc jb pushf add and or int3 test push shlb mov cmc cmp add addl mov (bad) push sub adc shlb sbb cli jg dec in push stos fabs je jns or and add or je push fadd rcll in outsb arpl (bad) lock lock ja jp dec inc fprem jbe sub dec push imul mov lods mov flds xor lcall push pop enter ja inc cmpps sbb out jmp loop sahf push mov (bad) sahf push or das mov arpl xor addr16 pop xorl mov xorl stc jo cmp and dec loope mov pop adc sahf movsl sti outsb push arpl sub in imul popf scas xchg call xor push cmp and call in inc lret pop aam jmp les ja int3 jl test ret bound ja,pn and jl mov dec xlat popf pop dec mov fildll and or stos dec cmp sub push icebp in mov adc mov rorb dec iret jae jle mov (bad) clc xchg out add arpl (bad) je cli in mov cmp xchg dec outsl mov int add sbb mov loopne lahf repnz int fisttp ret mov and fstl mov dec cli xor xchg mov rcrb mov repnz leave out arpl add mov mov or (bad) xchg outsb out loop add inc mov dec mov ja sbb js lods adc adc mov sbb jae aam lea in ljmp push pop add jo mov repnz ja pop test imul mov push and syscall xchg pop les adc lret pushf out arpl jge jnp sub inc jmp (bad) mov pop idivl std inc sbb lods sub jg pop std push mov mov fmuls jge xchg push out repz imul dec (bad) out lods hlt movups movsb sub cwtl aam fidiv mov or ret or aad cmp dec xchg inc jmp inc data16 xor inc imull sub out adc jge leave lret incw mov outsl jg xlat push movsl jbe jbe and fwait push mov push addr16 xor adc pop loopne frstor gs jecxz sahf and incl lock int3 adc out sub xorl dec pop sahf addr16 and ss mov mov sbb negl (bad) fistp or arpl mov (bad) adc movsl icebp and arpl push shll in pop leave movsb adc push repz nop out fstl inc mov (bad) xor int loop lds lahf or cld push or lea pop movl and (bad) movsl (bad) and movsl orl clc inc push leave dec and in pusha test mov pop or push cld sarb adc sub (bad) xor dec pop push jmp sub in cmpsl xchg xor rcl jg decb ja and aad out fs mov jb inc jnp inc out lea fwait inc stos mov mov bnd mov inc mov and or jl inc in xchg sbb sbb mov cltd cmp dec push mov leave dec aaa lea sub pop (bad) sbb aam (bad) clc rorl and insb (bad) (bad) jno add xchg mov adc subl mov (bad) js repz notl dec pop lods lods daa les stos dec scas repnz mov jge out loope das dec cmc in mov inc cmp pop xor pop lcall rcrl cltd mov int cmp arpl and data16 and test arpl push daa mov xor roll ja subl jecxz out adc ret cwtl push sub push leave enter pop adc add pop jnp (bad) lea sub enter jae inc push push arpl xlat sbb push popf mov pop sub cmc xor rcll xchg mov push push jns int sbb inc sarb pop xor jmp or and pop or arpl icebp mov sbb sub aad xchg jne fstl gs and or jge mov insl ds sahf mov jg rcrl xchg pusha in test (bad) xor cld int3 adc push (bad) mov push sbb (bad) cmpsb cmp popf test pop stos aad cmpsb jle adc add in rcrb dec sub jecxz pop js cmpsl add push ds xor outsb loop cld stos and fwait or orl jmp mov data16 pop fnstsw add sub lret sbb xchg jb,pt pop dec sub pop mov fisttp pop nop loop mov mov in test pop sar std or out xchg fist xchg xor jge lea (bad) iret dec lahf repnz and ja imul in lds pushf inc lea clc or fcomi xor jno jnp dec dec enter and push xor cmpsl xchg in jge js das dec and and sbb jge cmp mov mov rorl arpl jae dec mov cmp mov rol push rcll into or pop sahf cmp fstpt sbb in jl push ja inc loop jge aaa push pop (bad) arpl imul lcall jle dec mov mov mov sbb (bad) and les xchg dec std int jns or mov frstor mov not sbb (bad) mov hlt and pop aam sub cli mov lods dec iret lret lds sbb xchg cmpsl adc rcrb pop push mov dec stos mov mov popf pop or aam cli xchg jge pop (bad) fdivr out push rolb mov mov mov xor mov aad fnstcw ficomp jle andl xchg lcall mov cwtl add movsl in lock push dec add xchg dec inc sbb jge jle and stc pop cs push iret gs mov pusha xor and push pop xor and sbb arpl loop loopne fs ficom pop das (bad) call shrb es xor js sub iret cmc test sahf rcl dec mov mov xchg mov outsb scas mov loop ret ja mov stc inc shll movsb in seto or dec or lcall push sahf and mov scas (bad) lcall lea imull lods mov xchg add push inc push (bad) scas cmp imul ds adc outsl outsl inc shll es jns sub out stos (bad) in adc pop ja mov cmp lret cmp in or or jle mov mov fldcw jecxz aam popf add ja xlat out arpl push popa dec mov cmp aaa mov sti cmc mov insb add adc out jbe push arpl inc pop dec arpl pusha call jbe mov dec fnop sbb mov cmp aam inc icebp into push in insb mov stc mov mov xchg push (bad) stc dec push movsl cmp test and inc sub adc xchg leave adc enter (bad) jg in jl inc fnstsw pusha clc dec into xchg sbb push xchg arpl and arpl mov jb or push xchg out inc int sub fs or sub pop lock xchg mov arpl loop add lcall sti (bad) pop lods ficom enter add int3 inc mov cmpsl xchg xor cmp mov popf cmp xor imul inc cld cmp mov mov sbb ret fsubp out fstps adc cs push push cmp jp iret mov add sub std mov (bad) in ss inc gs arpl movsl or mov sahf fcompl inc push jno daa loope pop xor in xor or mov (bad) ja xor ljmp and pop mov jae orl icebp icebp jne outsb jns leave ret (bad) loope pop clc jo jmp outsb in inc adc jge faddl addb in jb mov adc xor sti pop ja iret aam les cld mov adc add mov push jno cwtl (bad) popf std sti sahf test jns jle sbbl push call xor dec mov mov insb jno mov mov iret hlt sub in roll sbb adc sbb inc (bad) mov cmc mov and mov popl cs pop or mov dec daa loop add fnsaves pop or (bad) adc mov pop imul sub addr16 (bad) (bad) in push lods mov lods arpl xchg in ljmp sbb push cmp dec aad std flds addr16 mov mov add or das jp or in out and or push in fsub dec outsl adc mov mov xchg les adc nop jns out aas movsb (bad) jno ret xor adc or xor (bad) rorw xorl mov lea movsb cmpsl push inc adc lock daa cwtl sbb (bad) movsl inc sbb sub repz adc clc xorl sbb sbb imul scas clc repnz lret incl out aas dec mov mov arpl sbb lcall push jbe jl jnp test xchg adc sub push repnz xor int in adc ffree jno rorl test rorb or loope dec outsb pop jg mov stos pop cmp fcoms insl cmp icebp mov nop scas sbb inc clc ja jge (bad) mov push scas mov mov inc mov lods sbb dec mov sbb push jns,pn scas scas push stos push xchg cmp and pop sarl sahf and aam xchg nop cs jns fsubs sub loope jl mov xchg clc mov inc out mov rorw jg (bad) (bad) cmc push xchg (bad) xor add sahf scas mov outsl pusha pop and fwait inc (bad) pop sub xchg rol xchg clc cltd daa jbe jns icebp repnz xor push std jge in xor in dec (bad) and and das outsb cmpsl (bad) repnz sahf mov add pop xchg jmp (bad) or test out ds repnz add aam out jmp xlat mov cld push mov arpl (bad) int clc scas sub cmpsb adc mov jl int3 or mov ss loop sbb adc and testl sub sbb insb repnz jb sub movsl aaa mov push (bad) jge ss dec and sbb cmp rcll mov mov jb mov test mov dec aad add mulb inc data16 push insl or addr16 add mov inc and lea ja xlat int3 ds pop dec sub cli pop clc in mov hlt mov mov hlt push leave sub in jno call icebp cli push aad movsl fmull sahf adc ja into (bad) outsb or jo add arpl sbb enter mov mov outsl movsl cmp push cli outsl mov adc mov cmp out outsb test xor pop lea mov mov add fxam das lock mov bound test rcrl ja add add test dec add adcl sbb aad jno cmpsb fsubr (bad) movsl pop dec out pop in push jno clc in movsb outsl (bad) jecxz jno pop fldenv adcl adcl sahf cmc mov out (bad) pop add outsb cli mov das jge dec fs xchg sub push or lods push (bad) pop mov pusha rcl insl lret enter or xor xchg mov dec jmp and bound or fcoms scas sbb rclb sbb add sti mov andl add jnp jmp ja aam shll and and and jne icebp ja xchg pop xchg mov sub dec add pop idivl cmp inc das cli arpl (bad) cmp cs loopne xor insb nop mov arpl adc ret sahf push cs sahf sub dec loop gs int3 sub sbb push arpl loop fdivrs movl mov cmp pop push sub pop dec dec sahf pop cltd jmp loop out arpl xor setb fdivrs pusha in adc jne fsubp arpl pop (bad) enter sub xchg loop (bad) cli repz ja sub adc lods jnp popa inc arpl and jge lods mov imul adc push popf pop jb or xor loopne jp in sbb in mov sub mov mov stos (bad) xor and test insb cmc push add lcall jg ret lcall loopne fwait add sbb inc xor mov ficomp jge cld xchg dec xchg test adc data16 out dec add dec mov bound (bad) inc mov lret pop push sbb push dec dec and xchg sarb bound xorb (bad) ja in push sahf out repz mov loop call jbe movsl aas (bad) daa in scas pop mov sbb cli adc cs add movsl sbb mov sahf mov pusha mov mov xor je js ja data16 xchg cwtl dec int3 sub clc and push mov ljmp pop xchg add lods jb push (bad) jle add aas or scas icebp sbb outsl add clc lea pop pop cmpsl arpl cmpsb dec pop in sahf rorl hlt imul cmp and jmp adc int dec test jp sbb inc sarl push into ja sbb pop mov sbb inc popf xchg in fdivl mov mov shrb mov subl jnp test inc push ret in sbb (bad) jne adc lods in xlat mov mov mov jb mov ja icebp call (bad) sahf (bad) fimull sarl setl decb movsl nop fsts cli xor scas gs aas lahf adc push xor push pop xchg pop jno fmull sub out mov cmp sbb push mov arpl and cli pop sahf push push jnp (bad) in lods rol xor push adc lret xor imul cmc adc in scas xor mov lret (bad) xor lock (bad) (bad) or sub fisttpll jne outsl and repnz lods adc sub fisubl icebp pop xchg aam pusha shlb jecxz popf mov xlat jge inc push and (bad) (bad) push mov dec (bad) arpl movsl dec das cltd test ja fild inc jp push xchg roll and dec mov (bad) (bad) aaa stc jecxz mov dec rcrb into ss scas jne or stc imul int cmpsl fild lcall pop jge (bad) jno jno dec pop arpl push outsb mov pop pop hlt lock out rclb xchg pop ljmp jle push pop test inc outsl pop sbb ja fs scas sahf pushf sub push out int3 xchg push dec fs mov add imul inc mov jno inc and xor and cmpsl sarb fdivrl jnp add repz aaa dec add scas arpl mov scas push imul xchg push cmp (bad) ja xor jo and scas sub dec fiaddl mov sahf xchg xchg outsl sub clc mov sahf jg ds or cs sahf mov icebp test andb lods sahf je js xor push adc es add into push push jge in cmp mov test jl call int3 test clc lahf fnstenv xchg cmp lahf fisubl stos ja push jg nop in outsl es fidivrl mov dec lahf cltd sbbl mov pop jge fiadd in inc cmp arpl sbb loopne xchg mov jo mov sub dec shlb sub leave test mov jo inc pop int lea jo jnp call adc out add repnz cld mov (bad) outsb pop pop in jb sub cmp mov and xchg or ja pop in call test push mul (bad) outsl xor xor jmp in rcrb push xor xchg (bad) outsb (bad) dec gs dec fcom and mov mov xor das stos push stos push fild xchg aas cmpb pusha xchg mov lock xchg das jp mov and in and ficompl and mov sub call push mov cmp sub xchg std jo mov push (bad) ja dec std scas push in pop dec xor mov jo mov cltd adc in sbb lods add inc movsb sub cmp dec jnp repz out ret jl dec fldenv cli push jge bound push movsl mov push arpl inc ss lret out or mov fstps in outsb subb mov mov mov mov mov imul mov dec ret rcl jnp imul jg repnz or and std sbb stos mov fs sub sbb test xchg jecxz jno dec testl fdivrl (bad) lcall xlat (bad) incb xchg fimul ret push loope jne sahf cmp mov hlt mov aam dec decb cmpsl pop bound jp cli jmp mov mov movsl stc or into faddp stc xor pop push cs pop cmp jnp xchg test enter (bad) scas sbb ja out mov pop imul sub stos leave lret gs add (bad) fdivr inc mov jmp dec sbb dec lret add ret ret xacquire xchg add pop rorl mov xchg pop (bad) imul dec je mov push into xor lret dec jecxz sub mov mov (bad) in or (bad) ja inc push mov xchg jno xchg lock ja xchg cwtl and cmp add es cld sbb ds jl scas mov sub xor sbb insl sahf sahf sub jecxz adc js xchg pop and fsubs cmp pop adc or add pop pop jmp mov pop cmp ja mov push (bad) nop pop or popf fcos loopne jp cmpsl xchg popa mov or ret mov (bad) stc cmp dec pop int3 ja sub shrb negl bound cmpsl mov mov xor (bad) jecxz xchg or nop jo dec repz das ss aas inc fdivrl iret dec jle enter sub in int3 inc push jbe and fsubs and mov mov insl push adc mov aam ret or int3 xor mov mov inc into je adc inc ja popa (bad) mov mov and (bad) loop imul mov cli hlt cwtl jl dec movsl adc lds (bad) je iret jecxz (bad) ja push icebp arpl or cli adc xor sarb ffree mov loopne into loop inc cmp add mov outsb cltd jb stc lahf jp pop dec xor sbb fnsave mov dec out arpl and cmp mov and (bad) hlt sbb roll inc into xabort test flds jg xchg push ja sub hlt mov dec and jns ss xchg jno loope nop sti (bad) int mov xlat fildll push (bad) fnstenv dec pop in jge pop fwait ja sub sbb outsb daa enter into add xchg sbb sub xchg iret mov lcall lods and in (bad) ja sub iret jle dec xor enter shrl mov mov and jge or fisubl (bad) cmp dec ficom jecxz adc sub int3 hlt adc andl in out ja push cmp lods sbb inc sub scas aam ja out mov (bad) pusha push sbb movsb imul sbb (bad) shr add sahf inc movsl or lahf ja shrb (bad) fs loope mov daa stos popf cmc sbb mov je xchg sub cmp sub cmp mov inc ja movsb fisttp lock inc mov test out or sahf (bad) or or xchg mov call mov inc popa dec (bad) jmp mov cmpsb nop les or in imul int3 mov and sahf arpl idivl repz pop (bad) fidivrl pushf bound pop add aaa bound jno ror inc and mov cld or les cmp sbb cmp ja loop mov sti (bad) push pop std rolb ljmp mov mov rcrb aam add sbb sahf shr test mov dec in mov rcrl sbb xchg jge arpl hlt inc call sub xchg (bad) mov cltd pop aam mov mov loope inc (bad) ja pushf divb icebp loop jnp aam xchg jmp push (bad) lcall repnz das scas int dec fistpl stos lcall adc adc add out fs pop lcall jecxz movsl test je shlb sub mov ret pushl lods inc adc or dec lahf (bad) ja jns sbb xor jle xchg or xchg addr16 push idivl sti daa (bad) add or add xchg push fs dec xchg dec jg cmpb es cmp ja inc mov add scas push ja xchg cmp lds push lock stos aad jo jmp loopne inc dec push and std and test fdivr in xchg (bad) test sub pop cs or jmp jge ficomp or jns pop lds cmpsb fidiv sub push rolb (bad) xor and (bad) jle pushf inc sbb outsl shll pusha stos outsb push cmpsb mov xor inc imul femms sub daa mov inc push leave das inc popa sub add sub ficompl std rcl ds fstpt lods mov dec std orb jo je cli and out int and arpl (bad) out cld sub (bad) stc cwtl inc adc faddl push dec mov andl jmp fcompl mov cli lret stos ret fs test cpuid mov xor sar sub add out into arpl mov ds ds cld mov ror aam and sub or mov xchg xor js out rol int3 pop cltd das stc add sbb fsubrs int sub (bad) icebp dec cmp dec pop mov out stos bound (bad) or inc sub xor push jle mov leave clc icebp dec sbb fmuls (bad) push ja outsl cmp adc mov cld inc jno,pn xor sar dec gs loop (bad) (bad) std out fisub fldcw fstpt cmp cmp lahf into cmp xchg popf sub mov sahf mov (bad) popf fsubrs jg cmc (bad) sub mov bound xchg xchg jle stos lret xchg push fdivl adc decl xor divb stos pop int3 leave das jecxz sbb jae jbe imul (bad) mov leave sub jb std nop bound push push rcrl ret xchg enter pop and cs sub popa popa pop xor jecxz push dec dec stc test sarb loopne jbe andl mov popl stos cld lahf sahf push jge inc mov lcall ds add aam cmp data16 add jge jae dec notl aam imul mov in ja mov bound pop shlb test cld add icebp xchg dec mov cmc jb lods jmp fs jne (bad) popf cld push inc ss insb test mov out cmp pusha bswap jae int mov adc mov (bad) (bad) packsswb mov pop mov xor sbb dec outsl pop push arpl pop das cli std add iret psubusb roll xor inc push push adc xlat scas push aas xchg (bad) enter (bad) ja add pop mov lods cli arpl pop nop aaa in push cmpsb int3 inc cmc insb mov cmp mov in jbe pop jbe dec (bad) mov mov loopne jl fcomps lds push ja xlat mov pop pop inc jo mov inc lcall addr16 xchg int3 cs dec adc add bound dec fdivl push dec xchg jno testb (bad) push aaa sub lret jge push out (bad) mov push jle mov sbb arpl scas int3 insb hlt pop jl push sbb sbb cwtl jle jmp push gs ja and repnz aas jne mov arpl sbb jl xor push lods bnd (bad) and push jne or int3 mov mov xlat popf fsub aam inc push dec mov inc adc imul (bad) cli or push cmp lcall push dec and push aad sahf xorb push pop cmp add jnp sub out xchg femms jbe mov ja mov adc test outsl arpl movsl cmp subl fdivl (bad) fstp and outsb cs into and dec in das (bad) int3 sbb pop cmp aaa cmc clc fwait (bad) repnz xchg mov xchg outsl aad (bad) test or scas call ficom mov mov iret btc pop arpl mov xchg stos mov test int3 mov pop and sahf in int3 xor mov popf je xchg fnstsw and rorb sarl pop xchg xchg clc out jbe aaa jg sbb (bad) dec std add xchg cmovns ficom dec adc fmuls inc sahf jbe mov out nop negb int3 scas (bad) jge les cmpsb dec (bad) test mov popf inc xchg pop xor push enter xor popf sub and into mov add ja mov ja sarl imul (bad) pop loopne pushf jge (bad) or xor or xchg sbbl mov (bad) test ret sub faddl and push fwait cmp cmp push in sub and jae imul mov or push cmc mov sti cld ja adc push (bad) loop cmp or xchg xchg movl xchg insb or test xor pop outsb call push cmp mov ja sbb jl out (bad) mov (bad) lea std popa test inc aas sub push lds test mov clc (bad) leave or je jo mov (bad) push jge pop outsb sub cli ret xor sub xchg inc js xor inc mov roll jge mov cmp aaa ret ljmp ret and (bad) push adc fcoms shr adc shll sub scas sub es and in loop call out stc (bad) mov (bad) mov lea std int xchg popa call or jp cmp xchg cs jle arpl jmp push mov test test mull arpl test fwait pop sub xchg xor inc jge js jmp cli out xor adc mov push sub jle push dec inc push jns cmpsl leave jecxz jle lret ja pop scas int fs fisttpll mov enter sahf sub sub xchg xchg dec pop out fs call ret or or lods mov jmp pop notl lods pop shrb pop adc fadds sbb scas in xchg ficoml dec popf decl push subl mov clc sbb mov das icebp pushf loopne add mov out sbb outsl fs das mov daa bnd daa add push arpl aam push rcll mov jmp mov jbe jno lock push cmp jecxz fstpt pop pop adc pop (bad) jge push pop push jmp mov sti ror sbb sti mov rorl sub cmp int3 jle stos hlt arpl pop and sahf aad jl aaa sbb call cs jns std cmp out mov (bad) sbb push jg shr mov dec jge loopne jns jle call (bad) outsb adc (bad) inc scas push mov les leave jle sti sbb (bad) xchg in xor or mov fcmovnu push cwtl rclb mov jg adc js inc fnstsw sar push test xchg push (bad) fsubs out jge push cmp arpl (bad) not out adc cwtl in xor cmp pusha addr16 sar (bad) repnz aam mov dec mov push mov icebp testb sahf cmpsb ja or enter call sbb (bad) leave aas sub inc gs and cmp aas pop test or mov inc mov mov je jle sarl dec js orb rorl pop test mov push loop dec cltd adc xor mov (bad) std cmp leave arpl in sarb fadd aam lds dec and ja fidivr out pop movsl addr16 fnsave shl pop xchg in lods flds mov pop jge cmp cmp adc loope aad jl data16 xchg ja jge mov xlat sahf dec les std mov lds mov ja in fs mov and rclb je scas (bad) out sub pop mov push dec jbe (bad) cmp mov sarb or fimul jecxz jle pop sbb sar daa scas out fisttpll stos mov adc mov (bad) in push lahf sub dec cltd iret push ret xor hlt (bad) sub pushf sub pushf psubw (bad) sbb inc mov sbb sbb arpl add pop mov xchg xchg sbb jge cwtl xor inc inc (bad) add js mov mov fdivrs or add scas push mov jb movsl adcl dec icebp and ret (bad) loop cld push stos rorb popf adc jnp pushf inc pushl imulb dec loopne mov stos int3 mov jmp (bad) pop fdivr and es inc les gs incb (bad) jnp mov mov lret fidivrl push sub (bad) and (bad) xor pop stc fnsave or add cmp cmp cmp ja xor push movsl fsubrs jle (bad) ja mov mov fdivrl xor mov daa (bad) sbb pop adc or in movsb ja fisubl cs repz lret (bad) (bad) inc jmp daa popa popa xchg loope jle jo fdivs cmpsb arpl aad dec pusha es je ret push icebp mov push push (bad) jp aaa dec pusha adc sub sti pop jno ja jp jecxz mov sbb and test nop push (bad) ja fisub push cmp adc cltd or stc dec fstpt add xor stc dec inc pushl cli jl xchg push pop ficom jle outsl jo addr16 pop arpl sti mov cld lods imul cmpsb out cli sbb rcl adc jp lods adc shlb xor js lock icebp mov jo push aad push out mov insl xor enter dec dec mov stos inc sbbb dec mov push jae out (bad) icebp jge outsl xchg stos sarb adc repnz pushw cld xchg fisubr popf sub dec je mov mov lret rolb cs sbb mov es and push addr16 cltd (bad) rcll mov popf das xchg mov test stos das adc cmp jae jle pop out mov push aas jbe (bad) dec sbb pop ret mov arpl and inc push adc gs insl in mov ja xchg and push jge mov cmpsl insl mov push fcom sbb fcmovnu and int3 xor dec sahf in adc stos inc xor leave inc jl lret or cmpsb gs dec (bad) daa iret push test stos push loopne scas push mov fdivrp sbb (bad) ljmp dec and sub dec xchg add in cmp sbb stos stos or in jb sbb jge das (bad) insb daa mov push dec testl ja jne xor stc movsl popl aaa pop cmc sub sub pop rol imul popf movsl jo cli fnstcw jns jge jo inc xlat stos add (bad) jns in mov lret imul mov ljmp mov sub bound push lds mov push sbb mov adc stos xchg push int jb sub repz (bad) jo in ja push std sub ret rsqrtps adc int3 push and cmc scas out xor in inc fs test sub pop pushf in jno adc and dec (bad) outsb cli sub dec sbb push cmp in mov imul es adc add adc mov outsl sahf adc push aam movsb cmp test outsb scas or leave lods cmp dec rcll dec jl xlat ja cmp daa into push xor xchg push pop rcll (bad) (bad) ja fsubl add js sahf lcall arpl push dec cmp popa and cld mov mov std pop mov sub jp adc cmp cmp sub mov jns jb jl push sar cmp pop orl push icebp mov xchg add inc repz add jmp je jmp test xchg xchg mov ljmp (bad) and jne (bad) mov push push in xchg push add arpl add mov cld inc jne cmpsb jge mov mov rorb rcl mov adc ja jg mov and fidivrl popf sarb mov or xchg mov out subl mov orb xor imul shll sahf xchg sbb mov insb mov push lcall jbe xchg clc iret xor rcrl fwait mov inc sbb and jge dec cmpsb (bad) out popf and mov jl (bad) sbb push jo fstpt xchg mov and push fdivrs xor leave and pavgw push push cld push ret mov dec jbe (bad) jge mov xrelease clc xor mov repz ja pop xchg bound gs testl or gs nop iret sahf xchg lahf mov and inc test (bad) mov imull or ja loope lret cmp xchg ret nop cltd mov jb or jb push jae lcall inc inc out or rclw movsl jge and adc mov mov jb inc jbe sbb xor inc or and xchg (bad) mov (bad) jg or mov sbb and jns cs push es lea lret pushf lret dec ja xchg int3 lcall pop (bad) mov lret dec xchg pop or cmc jmp and xor jns aas dec mov aaa (bad) hlt subps frstor les push iret ret pop pop xchg ja ds shlb pop fucom daa xor adc mov inc ja push movsl inc pop cltd (bad) lods ret cmpsb aam or andl icebp std mov mov cmpsb ljmp push hlt mov xchg fdivrs jns lea ja push in test push add xor push jnp mov xchg popa xor inc repnz fdivrs inc cld sub jnp out adc hlt adc lea cs adc or sahf mov out loop lods cmp gs mov aas dec arpl loope je adc mov int lock pop ss (bad) stos movsl lods data16 ja inc addr16 fsub pop xor cs fldl push sbb dec out out stc aam into dec aaa in roll sbb mov sbb jecxz and xchg test (bad) pop mov mov mov add push jae dec scas dec lods je pop push push cmpsb sub ja ljmp (bad) rol mov jno add inc and add addr16 out int3 les (bad) fiaddl jl sbb (bad) and (bad) xor js inc or in pop adc inc push pop popf lods lock cs (bad) ja sub mov leave pop stc dec stos jno sub scas test lahf out out push xor arpl sub sbb test push fdivrp cmp sbb sbb addr16 stos (bad) pop popf ror adc mov jg addr16 sub jne pop add (bad) ja leave sub lret push (bad) cli or jl push pop movsl popa std inc push call aad fwait and jnp stc ja (bad) mov add lds in sti out adc jge sub js mov (bad) mov dec xchg in push sub cld xchg dec mov imul pop bound mov hlt sahf mov mov dec std stos jmp lds xlat jmp in add sub orb ja loopne pop or adc loop arpl cmp aad insb jge cli jbe stc or pop pop xchg inc inc pop xor dec or aad ja dec rcr js or arpl mov les das ja std lea bound xchg push scas (bad) mov arpl loope arpl xchg xlat test xor int xchg loop pop pop sbb xchg out fs cmp add outsl add sahf es cs mov stos xchg fcoml fldcw stc aam movsl dec or gs iret push popf mov (bad) aas fs mov jl cli mov adc loopne mov cmp jge push jne pop jmp mov mov fnsave jge imul mov jns or lahf cli push fdiv mov push cmp jg jle cmp arpl out sub lock imul sahf fnstsw cs in adc emms or cmpsl stos or push pop jl mov mov sbb jge xor das dec ret testl ds adc inc adc fwait sub cltd ja leave jns adc mov das jae cwtl cmp (bad) and nop mov lea push loopne fistpl or fcomi out inc adc push sbb mov sbb (bad) sarb je es daa aad inc jae hlt lcall sarl pushf outsl int (bad) out jecxz aas mov xchg sbb ja leave cmp aas inc xor jae hlt mov test shl jnp ret jge mov push pop mov pcmpgtb jecxz or mov adc add lcall cltd (bad) ja enter (bad) xchg iret inc push cwtl call cmp adc lea std test (bad) adc sub cltd jg cli (bad) dec outsl sbb sarl subl xchg mov push jmp notl jmp xor mov fsubrs jnp xor ret jbe xor and mov push psubw mov xchg clc popa or fs dec in int jne dec lahf movsl or mov xchg mov xchg (bad) icebp jno mov xchg or xor arpl (bad) jb (bad) insl pop adc push push insl flds pcmpeqd cltd mov into aad xor push jb jge and popf or ret pop insl pcmpeqb daa lret sbb xchg xchg into dec (bad) out test into negb fisub jo xlat xchg adc out dec movsl test aam adc mov jo out imull rcl or fisub insl add inc xchg movsl xchg cltd arpl jbe inc ja aad and stc mov out aas adc mov sbb fisttpll loop mov imull out (bad) push cmp shll and addr16 fwait push lret aaa popf int3 inc cmp pop push (bad) mov in jp mov mov ds ret pop dec lret fnop jb jb cli jge insl rcl and and sbb int outsl roll js nop mov jae adc adc push sub test pop insl push aad ficompl jbe push jne pop jg jge adc mov ja insb and sbb jns out and cmpsl push (bad) pop adc cld sub aas test cmp call stos (bad) xor cmpl shrb ljmp jge fdivl (bad) stos test jl int3 adc xlat inc push jns les xchg pop dec xor sub xchg mov rclb xor in int3 incl xor icebp andl xor test mov jecxz fs or mov jge shll sub insb (bad) dec lods or out sbb jp mov ljmp mov mov xchg jo pop inc xchg sbb fcomps repnz cmp lds lcall aaa addr16 lea outsl out mov movsl mov das loope sbb (bad) fmuls and setns mov jge sbb mov outsb jecxz sbb test adc fildll inc (bad) repz repnz movsl pop fcmovnu addpd cmp repnz mov insb (bad) (bad) or int dec sbb mov jge mov mov icebp push (bad) inc les pop add stc fstpt stc adc push scas cmp inc daa out ja mov aaa js mov and xchg test in sahf cmp sbb sub arpl mov (bad) insl imul in jbe lahf jne jae dec xchg lock mov adc in in sbb push dec fcomip (bad) out call loopne pop arpl lret pop add loope sbb xchg ja (bad) nop sbb daa repnz or pop xchg dec movsb repz dec incb push lock push fdivr push push or aad pop aas lds and aas ret pop mull and dec and jns jge aaa pop push mov (bad) inc and pop ret mov fs mov lds decb xchg jecxz stos lds adc icebp and arpl dec push cwtl cmc loop les add movb lock xor pop dec hlt in out les and pop xchg cs jge adc lcall adc stos mov (bad) ja inc or dec lcall scas adc mov jge sbb lret mov cli mov aam outsb aad xchg jne (bad) xchg adc push (bad) sub fs mov sub (bad) (bad) xlat in aam mov xor cmpsb jge call adc cmpsb fdivrp mov cmp fbld adc cld pop jbe jecxz ret (bad) adc (bad) into in pop fidiv out jg sbb jae mov jecxz mov xor pop xor mov mov mov cli cwtl push arpl jg sub lahf mov ss mov xchg xchg add and mov aam mov cmp sbb leave mov jne adc or movsl and xor cli push adc stc sbb xor rcrb cli xor int cli or repnz mov fistpl ret clc fsubs push cld mov dec xchg add enter adc inc add xchg in (bad) ficom and mov mov sbb push sub out aas leave jns pop inc (bad) mov inc jle (bad) repnz lea jge je frstor repz js or adc fiadd or dec push mov inc adc (bad) push fsubrp and push into mov cli test jnp mov push int3 mov incb adc insb aam sbb sub mov scas (bad) mov out rcll push jge scas pop daa cwtl int3 mov sub push in dec es sahf add out rcl das in lret push dec xor call or (bad) jg mov add sbb and ds rclb push jne dec or mov cmp and call push orl sahf stc das ds js,pn in and in cli clc lods ret xor (bad) add arpl and fxtract push aas mov cld in mov cmp push mov mov xor scas in push sub pop pop jne ret jp movsl jg or pop popf mov or dec fsubl cld fidivr pop cld shlb (bad) jmp les jp xchg ret clc adc arpl and push jge mov push in mov xchg dec and jecxz pop xor icebp (bad) xor pop fdivrl aaa mov push and add ret or fcompl (bad) or iret stc out popf outsl clc sarl xor mov test lods mov ljmp xchg push fcmovu or push loop aas insb sub ret xor into mov sbb lea stc int (bad) dec rcr ss outsl enter jge out nop lea (bad) (bad) mov arpl incb inc xchg pop out cmp negl jge jno push gs adc and mov cli mov je push jbe mov sub divl adc rclb (bad) mov pushf sahf ja jge cmp arpl and add mov into or lock cli fisub cli cmp xor notb leave push out inc dec insb jne lds bound (bad) mov lret clc ss fimul xchg call outsb add push inc stc inc and adc sbb insl pop hlt into mov sbb jmp adc popa fwait mov in pop outsb movsl adc xor jge push inc jecxz pop ja repnz xor cmc std mov gs pop adc cltd jno arpl mov xchg cs imul jns push (bad) xor sbb jnp (bad) push cmp data16 mov arpl aaa sar (bad) mov rcr out sahf mov dec mov and adc div ja mov sbb mov adc aas (bad) (bad) movb xor push mov mov lret clc push (bad) cmp cwtl mov cli cmp mov pop mov cmc adc adc cli sti or arpl cmp or pop insb pop jb (bad) js iret sub mov push jle int cwtl repnz jl cwtl insl push jmp ljmp ja push mov out in pop lock daa outsl hlt xchg cmc je cwtl rclb lds inc or push stc pop cmp nop mov sub mov loop pushf sbb call cmp les xor push outsb xor add mulb add lods mov cs outsb adc cwtl and lret cli mov or insl pop fdivs cmc sub xchg pop (bad) loop movsb fwait sbb push xchg stos jne lea insb inc mov mov int dec cli fidivr int3 cltd arpl xor test cmp lods call iret mov (bad) cli call cli (bad) aas (bad) sub adc jge pop jo jl xor ja pop (bad) (bad) dec arpl sarl icebp jg shll cltd mov cmc loope push jno testb daa mov dec mov aaa adc cmp pop in jbe shrb mov lds lahf fldt gs adc adc repnz jg idivb in add scas iret lods ret out adc and scas enter adc xchg xor imul jb add repz fdivl mov xor adc lods addb test lea insb push jecxz jbe and lret adc fbld lods in enter sbb sbb mov loop jb xchg test repnz pushf push or (bad) arpl and pop push lret mov fistpll sub jmp out andb (bad) leave and xor jecxz imul pop adc iret jle sar ret ds push sti sub push pop das pop stc int cmc popl add repz jge rorl sub and xlat cmp cmp in test (bad) mov jnp rol clc dec shrb repnz data16 (bad) movb fildl sub mov cmp call adc mov insb iret lcall nop arpl mov push mov leave adc jle lock outsl popf fnsave dec std mov xchg arpl ljmp (bad) ja mov jae in push dec cmp pushf mov pop (bad) negb push sbb adc and xor divb mov mov mov test push push (bad) clc insl and mov cmp repnz mov jo ret xchg mov inc push sbb (bad) jp iret nop fsubs pop enter ja in stc (bad) mov jle sbb inc cli adc test in hlt (bad) jo jl xchg sbb out cwtl or mov jecxz sbb push sub pop dec sbb outsl or and movsl fcompl ja cmp mov mov xor imul mov fstpl aad rclb mov pop cmc (bad) stc xor in push int cmpsl std scas xchg jge jne mov ja rol icebp in in jae jle (bad) cmp aaa sbb int xchg inc popf inc out cmp xchg fadd mov adc and inc rcl push adc repnz arpl adc iret cltd int3 jp pop (bad) test and xchg bnd mulb push pop popf insl pushf sub movsl aaa add pop test repz cs ja sbb movsb sahf ret lock in ljmp push adc sub add arpl adc sbb ja jnp mov mov movsb fs testl cmc adc jle mov mov arpl xor sbb jnp xchg int3 cli ds rcl mov fbld and add sub sbb push sbb jno cmp (bad) push arpl mov mov scas arpl pusha shrb movsl repnz (bad) push push sarl (bad) out push ds xor icebp and xchg add aad mov sbb ja push (bad) or push mov outsb and dec inc dec push push push das xchg pop sbb sti pop mov xor sub jb leave enter ljmp jge sub cmp ja cmp add arpl pusha sbb mov sub xor sub push fstpt or jo pop (bad) mov sahf arpl jnp pop sbb lret xchg (bad) cmc outsl mov test leave and addl aam xor pusha add pushf xchg jbe mov test push call jmp dec lea cmpsl sub fistpl inc add arpl fidivrl mov fs mov xor shr clc mov or call jg cmp fcompl in lods cmp mov test pushl xchg add (bad) pushf mov lret (bad) inc adc xlat out sub jne outsb mov add mov mov or (bad) iret (bad) mov jmp push xchg inc add test and out (bad) dec dec jo xchg xor mov sti ret in jge stos scas rorb arpl ret cmp mov rcll or inc pop dec xor das in (bad) jle iret push jge repz inc repnz repnz aas xchg add mov sub xchg dec aam jae (bad) or dec ja emms in arpl xchg mov loopne aam enter aad loope fs rorb pop rcll inc orl inc mov into xor pop arpl addr16 adc pop pop aad fs in jno jae pop icebp push pop or cwtl lahf and leave (bad) xchg mov push cmp mov jns test (bad) adc jg arpl mov xchg negl clc jmp fmull pop sbb or (bad) and ja and inc jge mov xor sbb ja mov mov sub mov mov mov push mov xor ja and aam (bad) arpl clc push fcomi (bad) xor xchg ds pop test xor (bad) fdivrs pop arpl ret mov (bad) imul adc mov enter jle jge pop add cmp icebp movsl clc mov sub bswap cmp xlat outsb leave clc lea push sbb stc cld out fmul jle test (bad) ja adc mov mov in sti cli cltd push inc sub sarb aam dec xchg sarb pop dec dec outsl scas movb cwtl cld sbb push xor in sahf aad sbb add fldenv int3 adc add jge testb mov dec adc sarl daa adc mov rcll fisubrl insl ret repnz loop rcrb lock pop sub ja push test push xchg ljmp in xchg arpl movsl fsub push lds stos xorl cmp ja ds xlat stos xor jo xchg add arpl fwait insl mov out sub out ret test orl push xlat push cmp cltd xchg fldz loop pop mov jnp mov rclb int in aas iret test mov cmp jg cli pop cmp mov mov rcll rcrl jns or movsl nop rcr cmp ja addl mov (bad) divb ret push arpl leave sub push push mov sbb nop or cmpsl xchg fcoml cli addr16 xor negl lods mov js mov shrl lods push dec aad rorb cmpsb mov adc aas das scas jge repnz fdivs mov fdivr nop jg scas sti push sbb pop mov daa gs lcall je add stc mov aad (bad) cmc pushf and and jge mov bound gs jge stos dec mov mov sbb mov jo fisub xchg xor xor xor jo mov mov jge test stc or mov or mov imul idiv pop add cmpsb jb jge fcomps in push into jecxz gs popa movsl sbb mov jns dec cmp outsb mov mov xlat arpl (bad) pop jns,pn (bad) test (bad) cmp outsb ja in call sbb xchg (bad) mov pop aas sub lahf jecxz arpl xor mov jno and lds pop pop rorl cmp mov scas js sbb (bad) adc mov clc js cmc mov jo xor test aad dec jae icebp add xlat mov mov jae push jge and arpl pop or clc mov rorb addr16 mov int sbb pop aas stos arpl mov stc xchg ss ret shll mov repz and cmp mov add mov mov arpl sbb lret imulb (bad) jae les cmpsb in repnz mov xor (bad) dec loope repz cs ljmp xor jmp fdivrs xchg in cmc cmp inc in lds sar hlt (bad) pop fsubs adc test push cs and lcall scas cwtl in adc ret lea dec (bad) arpl and rcr pop adc sbb pop sbb mov out stos repnz nop mov jnp stos mov fisttpl xor add in sbb cmp dec fcmovne int3 test nopl ja xchg bound in gs test sbb repnz hlt int3 movsl mov insb out pushl loope add mov jge dec (bad) roll mov hlt dec pop adc data16 cmp ja pop xor sbb (bad) arpl adc out test (bad) insl aam xor push test int3 mov xor popf daa mov add sahf cmp adc sbb sub jle sbb dec std aaa mov xor bound das dec dec pop es jmp push cmpsb xor loope xor sub arpl rclb ret enter jnp ss mov movsl fldt (bad) dec inc fst cmp adc cmp or mov add imul outsb adc bsr cmpsl movsb nop sbb popa ret cmp (bad) xor data16 jle lds sbb test nop sbb (bad) mov loop repz ja sub mov out or ja jne adc dec lret jp push aam hlt sub pop sub enter pop xchg ja jg adc cmc std cli mov sar xor (bad) and in into ds jns cmc pop lods stc test push int3 cmp test adcl sub mov mov sub push (bad) fisubl (bad) cmp loop add jnp push push pop and jg mov lcall lods (bad) leave test (bad) arpl add incl ret pusha sbb fldenv out das fwait sbb pop add int shld sbb xchg mov call sub pop push cmp mov or insb arpl bound data16 cli fcom mov pop push dec mov push pop sbb lods sub lcall pop push mov cld pop outsl dec push lret out xchg sbb ja mull rorl daa int sbb imull nop loop aas push popf fmulp add fdivs ljmp and popf xchg xchg (bad) loop test ja cmp sub iret pusha push stos (bad) jecxz test mov pop sbb iret lds shl add add sbb cli push ficomp arpl fwait leave push int3 je mov and ds das fldt sarl loop cmpsl outsl aam and not ja jmp sub push sub ja add add sahf lods xchg scas xor sub clc pop pop rclb (bad) xorl xor in ja cmp (bad) cmp sub test xchg mov arpl (bad) out lods lock mov and push fwait mov gs test loop dec push push sub cmp cmp mov mov cltd test fs pop in xchg aaa clc add arpl fstpt ds cmpsb into into stos ljmp pop or inc lahf (bad) fsubr adc mov pop cmp sbb in aam xor mov sbb rcrl mov lret jge sbb mov int dec push nop rol inc push imul dec mov mov mov sahf gs jge sbb inc js inc and into repz lods inc dec movsb (bad) shll xor dec insb cmp lcall shll jge repnz and mov mov mov fmul ja test push fisttpll in add (bad) xor arpl or lret lea jbe adc jecxz pusha xchg pop daa xor pop jge in fcmovnu aam outsb shl ja arpl loope aas iret ljmp movsl ja insl xor jle,pt mov adc iret push sub arpl sarb leave inc nop add pop bound adc mov pop mov in inc adc sbb mov out leave movsl add inc aad imul clc lea xchg fsubs push dec push into mov add push push jge inc ficompl push gs call pmaddwd pushf lock mov pop or loop cli packsswb sti mov je and mov push sbb dec (bad) lahf in pop push (bad) jns dec and into mov adc jbe xchg xchg adc adc hlt jg xchg (bad) icebp jbe cmp js mov jl push sarl gs fdivr popf aas stos test outsb lds dec (bad) repnz and jb or nopl adc mov faddp mov dec adc push inc loope inc mov xchg mov mov cmp jge xor mov add cld lds or ja rclb mov or (bad) daa data16 imul lcall inc pop pop cld pop dec add xor mov sub sarb (bad) mov rcrb test into roll (bad) ljmp negl ja (bad) xor imul iret jecxz inc or loop xor sub fcomps movsb xor xchg xlat (bad) into sub sbb subl xchg jne icebp cmp inc cli sbb in inc ja jecxz fwait xor pushf xor pop arpl sbb mov push std fsubr mov jb lods popf sarl inc mov push iret dec push jge negl insb cmp cld rol sahf cmp mov jns jg cmp loope popf bound adc les pop sti mov (bad) push mov jae leave jns sti add cmp shl mov outsl cs pop stc sub or sbb jne mov xor clc mov sti mov aaa in dec jecxz push push incb (bad) or arpl mov cmpl sbb pop lock push jmp push (bad) sti in insb push je or pop loop mov adc dec ljmp push mov sub xor dec adc adc jle aam sbb jb jl inc jecxz jge (bad) xor push rol or cmp ja test xchg adc (bad) dec cmpsb jg gs add shl jb sbb add mov jge sub std int sub outsl fdivrl pop push out mov pop jb xchg or cmp or push add ja mov pop sbb icebp mov jnp fsubl jp push (bad) mov out ja push mov inc in stos loopne pop or xor inc out adc mov enter (bad) pop jecxz push cltd xor cmc lret js sti (bad) xor rcr divb test aaa std mov add aad cmp insb xchg xor inc not jp cmpsl ret cmpsl iret cmp fisub jmp mov push sarl push add daa pushf in jbe push pushf icebp (bad) or pop jp lds iret cltd adc outsb (bad) (bad) mov aad sub add push (bad) leave cmp mov jns sub aas in leave cmpsl test add and aas or int gs unpcklps add arpl lods mov push mov push or cwtl loopne fbstp mov jno popa dec test aam fdivs or ja lods xor (bad) jb gs mov movsl and mov inc or addr16 mov imul aad fstpl sti cmp push add test mov mov fs inc outsb in (bad) xchg mov cmp and sub and jp test scas inc xchg pop fcompl sbb mov sbb ja xor imul int3 (bad) mov mov out cwtl or loop adc loope or fs sub jecxz dec mov arpl sub int or clc ret pop inc icebp sub sub cld cwtl scas cld fimull xlat push mov sub insb test jnp cmp movsl scas push jae push jle into dec hlt lods mov scas jo pushf push (bad) out sub ja push js mov es jns scas add push sub mov push shl out add cltd xor ja push xor cmpsl jo imul inc stc ret xor nop xor sbb out sbb adc cli arpl aam (bad) pop int push pop and rcl cwtl (bad) ja icebp dec clc jge push int jl call fisttp sahf jle outsl add and ret cmp adc cmp ret inc mov mull pop sbb lds sbb pop adc pop push push inc aad pop test clc inc dec push mov push mov repz pop je pop arpl test mov cs (bad) add popa pop stos push (bad) and xor sahf out arpl mov (bad) lret repnz pop push repz push and jge add (bad) mov scas xchg popf mov (bad) mov pop push loope mov shrl adc imulb or stos adc xchg mov ror std cmp xrelease cwtl or dec dec jg inc (bad) xchg mov (bad) cmc lcall in lahf (bad) cld adc inc inc movb stos addr16 and insb arpl mov enter rcl std mov sbb mov or jecxz and add cmpsl push movsb push arpl in cmpsl sub out xchg and divb fisttpl mov pop or stc adc cmc hlt pop aaa push fcompl dec rcr adcl sbb test or (bad) call sbb mov pop lea cmp fbstp ret mov cli push std adc ficom and dec mov inc icebp fs repz imul ja movsb pop jecxz mov enter mov test mov jecxz popf dec pop sub lahf popa adc sahf pop jb inc push ja mov or popf fsts pop (bad) ja (bad) mov into cltd cld push repnz lret push popf jge cmp mov and leave pusha (bad) and ret and mov lret xor add mov (bad) mov inc fsubs arpl fisubrl mov push gs fbld aam lods lods mov dec mov jae popf out sbb add push test lock jp mov insb dec inc push sti inc stc adc idiv sub sbb mov jnp jle popf inc lock push xor jmp mov stos push sub call or and push sti ss sbb mov jp xchg mov jecxz cmp or sub fs mov (bad) jge out sbb int jnp xor aad pop loopne sbb inc (bad) jnp xor out fldenv sub ds bnd adc std les sbb jae loope mov inc jae mov out scas int3 gs loop xchg repz enter mov inc mov inc mov cld sub jp jno jl daa (bad) (bad) shll popf dec mov sti mov (bad) dec outsb xlat xor popf fidivr js sbb fildll push mov push jge pop out lods xchg sub loopne rcrl xor dec mov mov rorl cmp sarb jnp outsb ss daa jno sar (bad) and arpl in jae and (bad) ja fistl outsb test aam pop jmp loope outsl or in aad push in pop pop ja push or xchg mov in cmpsl fnstcw push add fildl xor popf or push cs ds fstpl xor in cwtl iret out aam mov bound movsl dec cwtl jae clc mov xlat popa out in push loop pop ja and xlat jns cld mov mov xor jge shrl test jecxz outsl arpl and addr16 in imul lods adc movl sbb mov jge ljmp adc mov fldl pop xchg fcmovb mov (bad) ss pushf arpl popf mov sbb test pop mov dec lods xlat push jle pop dec lods pop dec xchg xchg xor xchg ja jns dec jb lret and fstpl bnd mov mov jmp mov pop aad sub xor cmp push xchg mov icebp adc xor scas es insb xchg dec loopne or mov push out pop or int fst shlb cmpsl fs push out mov int lock hlt sub movsl (bad) scas lahf pushf aam lods jo shrl lods in sub push adc pop idiv (bad) test shrb pop mov mov cmc add push ss out mov das jge ss inc out pop mov ja mov sbb jmp int data16 popa fwait gs pop popf and sbb cli xchg jge jecxz cmc adc push mov jle fdiv dec shl icebp nop xor lret push arpl sub repz cmp ja add sub pop and pop into icebp popf jo cmp (bad) add ds fldenv dec inc mov mov adc fwait movsb cmpsl sbb jne dec mov insl inc scas sub fwait (bad) ficomp lods and ja add lea sub iret gs movsb push sub insl nop inc mov enter outsl mov mov out aad push jo (bad) shrb mov shlb leave sbb mov fmull insl (bad) (bad) sbb mov push mov loope,pn iret fs ja loopne (bad) imul push add xorb pop and popf outsl dec inc pusha sbb jne mov jo fldcw pusha jno push add out and test mov add jno test jge mov and jbe pop add lret mov lcall movsb ret jae mov cwtl mov icebp clc pusha jp cmp cli stos cmc sbb jbe xchg scas sub or push mov in cmp xchg push jp jnp jle sbb jno sub nop cmpsl (bad) pop sub stos push and out adc inc arpl fcoml ret (bad) clc lcall mov push or iret lahf mov loope adc sbb inc cli adc push mov cli clc add cli fcomps sbb ja mov adc push ss xchg mov cli arpl xchg adc adc js cmc cltd sub ljmp sub outsb mov push jno cld (bad) fistpl cld add sub sete pop pop pop popw cmp std sub xchg sbb addl cli arpl in outsb imul stos clc mov jmp dec ss daa adc or pop ds dec jmp mov cmpsl cltd mov gs fcmovnu test jns in pop mov push push loope les fwait mov sti jge bound xor out mov xchg aad jae pop or fwait mov jl lcall inc xor sbb arpl add dec scas mov push cmp add xchg sarb xchg push jbe mov pop and jmp fadds repz je outsb in stc scas push arpl mov out lcall mov test aaa mov xor icebp pop and pop ds loop jle fisubr lahf inc jg in pop mov int3 (bad) int hlt ja stos daa out pop arpl aam cld mov clc and je pop loopne in movsl mov push loop sbb mov test jecxz push jb scas fstpt arpl sbb jmp adc mov ret das mov add movsl leave (bad) aaa jl jo ja cltd jge (bad) sbb lods push fnstsw cld nop aam loop paddq movb icebp mov repz mov fadds mov mov stos (bad) sbb jnp (bad) test arpl and cli push mov sbb push jbe icebp dec pop out popf jge ret mov mov push leave push fnstenv popa fsts jns ljmp inc cmp push xor ljmp je outsb popf fdivr mov fdivs insl dec mov imull lods inc test int3 adc arpl mov mov push or xor dec or mov pushl sahf dec mov popf cs out sbb lret icebp sbb aaa out lock leave add add and (bad) stc mov or test test sahf movsb or out and pushf nop lods data16 rorb hlt (bad) pop aaa ss xor ss icebp jge lret hlt xor (bad) popf aad aaa addr16 push jge xor jl es test daa pop popf adc clc fnop pop pop xor jbe mov (bad) mov or add ja jo (bad) jno (bad) mov mov lds lea mov and pop inc mov xor mov lock and call push push aam (bad) pop sub push in fidiv (bad) push mov or add fucom mov in outsl jmp bound mov ret sahf out add in lods xchg stc leave adc pop jp or inc roll pop test xor cld das leave mov loopne mov jecxz sub xor shrb xchg std jge (bad) fs and mov cmp insl daa mov rorl adc mov fisubrl (bad) sub push jecxz aaa ss mov ja xor rcrl or push dec pushf xor dec jge ret mov jp mov (bad) pop neg xor dec add aad mov bound fistpll out dec inc cmp jge sbb pop xchg xchg in js inc icebp fwait lea cmp mov or dec test test outsw stc (bad) push pushf jle call and pop push in call roll push push sarb adc in and jno and sbb stos mov dec into lea and lret mov sbb adc jecxz rorl pop rclb sbb test xchg ja mov sbb lods out mov and (bad) push into test and rorl faddl or ret or mov repz ficompl jecxz jno jge inc push and inc scas rcll test mov out (bad) xchg and test (bad) stc push adc xor lahf mov setns dec push jno xor fmul pop repz push loop xchg adc push jge popf ja jl in fcomps adc cmp dec jns jne (bad) add adc mov lods pusha mov jnp dec test mov imul lret mov push addr16 xor mov pop push rcl ja lods lock adc cwtl std outsl push mov push cwtl jo xchg xchg push inc lods subl inc insb stos xlat jbe (bad) sbb mov out jge lcall and aam jmp fdivs bound pop xchg jg int3 arpl aad cmp mov ret lods or sahf cmpsl lods jecxz jecxz ficomp fmuls push inc loop pop in cmp inc adc dec sbb outsb cmp std cmp jecxz sbbl push bound xchg (bad) ja jo pop mov test cmp mov mov sbb xchg leave gs (bad) clc les pop test xchg mov jmp aaa jno test sarl or inc push mov lret adc push sbb (bad) push mov (bad) mov sahf (bad) nop mov or cltd add cmpl inc mov (bad) xor (bad) ds pop (bad) imul inc or arpl dec and out mov in int3 outsl xchg ja mov sbb (bad) int3 mov dec mov lds or sub xor jge dec inc popa and jbe movsl in enter cmp cmp mov cmc sub dec pop jno mov test (bad) inc cltd repnz stc sbb cwtl bound jno mov or out push arpl mov pusha fnstenvs in adc incl notb adc sub lcall insb pop adc leave fsubrs sbbb pop out arpl jae adc sbb add xchg cli pop fnstsw and jb int adc cmp or adc je xor aaa mov aam inc and add push outsb push ja mov nop lods sahf out out aad adc ds adc fisubrl push sub call (bad) sbb mov jnp jecxz and popa adc adc outsl jmp inc nop repnz pop out jge cmp aad call inc mov fcompl cltd arpl js jg test adc (bad) jecxz pop ss nop fsubrl cmp insb or arpl (bad) adc lods je,pn mov pop and daa (bad) xor dec popa loope arpl and pop xchg test add or push ja mov dec and inc inc sub xchg jno push cmc in jge in stos test dec pop out insb in xchg push fsubrs lods cmp iret aaa cltd sbb jbe jne mov push jp pop test cmp js (bad) (bad) test jmp mov divl jo mov (bad) fsubr jnp jo (bad) adc aas (bad) arpl add cmc in adc movb gs sarl lcall stc mov dec inc inc cwtl fisttp dec mov test sbb mov addr16 push mov ljmp imul stos inc (bad) int cmp mov test cli int out fidiv fstpl and and pusha addr16 push inc fdivp test jge cmp sti sbb mov fcompl iret xchg push cmp dec sbb ljmp xor adc loop js cmpsl fistpl and in pop push test leave mov das in cwtl jo cmp js pop jge,pt rclb dec repnz bound mov outsl push push test (bad) mov inc lahf mov js cltd out mov xor test sbb and cmp sbb out cld mov lret call push dec ja daa scas jns stc bnd push and (bad) vmulss (bad) add push pop fdivrl (bad) adc mov fs xor bound movsb adc arpl xor xchg out fsub sti clc xchg sub in xchg push adc outsl mov jmp mov jp ja or lods mov std roll ret and je aam iret hlt std arpl movsl leave cmp push or xor push (bad) nop and cmpsl sub push addr16 shll jbe (bad) repnz pop enter lods adc ljmp xchg incl arpl add xchg push ja int lock xor or mov cmp pushf lods test arpl sbb xor cli or ret aaa fsub adc dec mov sub arpl push sahf int or dec and jbe repnz pop insb push add inc and (bad) jmp push in movsb mov loopne jecxz sbb xchg sbb jge inc pop cld das in jne or mov aas lcall mov (bad) bound jecxz pop dec in adc insb (bad) push pop add push and or (bad) popf int3 push push adc (bad) outsl pop rcrb pop lahf cmpsb cli mov jo push fs ss mov lret mov movsb out adc add mov adc ja (bad) (bad) mov insb ss loop mov dec lret dec lds pop and sbb jge push jb sarb in aas and hlt sbb lods cmp in cld rcl (bad) aam mov xchg movsl inc mov xor dec mov sbb mulb adc jae,pn xor mov mov dec sbb sbb jmp loop inc lret fcomp aas ret arpl xchg call mov or pop nop xlat cmc sub pop imul fadds push scas or sbb hlt adc pop in mov push dec mov movsl and popf cmp ror decb (bad) sti test into pop nop sub mov nop cmpl daa push and adc push mov mov ss cmpsl push arpl int3 adc mov test jae sbb and pop ja ds sub icebp sbb or imul push out xor jmp add sub xchg add cmp cmp fcoml mov aam pop loope or mov adc jg dec icebp fs mov dec popf mov test call jo ljmp das cltd pop lods mov stos rclb lods out inc ret ffree push aam adc mov inc sbb xchg lock fsts pop outsb ja xor (bad) loope sbb ja stos push daa xor mov scas outsb mov or roll stc and popf and sub jmp pop adc cli aad adc mov movhps push mov arpl cltd int push sbbl call test ja jae xchg cmpsb imul hlt ret (bad) pop sub pop lods xchg andb (bad) xor pusha (bad) push jne xlat push xor stos fmuls jge adc mov inc into icebp dec or outsl inc xchg or aad push nop test es inc arpl and mov jg lods inc xchg pop rolb pop (bad) sarl fisubrl push popf rolb xchg mov popa (bad) and test das call xor adc inc dec arpl mov sub xor repz adc in ljmp popf jge jp sbb mov push cld and mov push or dec fcomp or int int rcl leave fdivrp scas loop les fsubs lds leave lods lcall cwtl test or adc fdivr roll add or mov or iret xchg cwtl push stos es mov dec in arpl adc cltd xor adc sub jl,pn mov xor push (bad) sub fistpll pop stc leave mov popf fnstenv pop xchg add jge xchg or addr16 lcall jp aas or imul inc gs sub loope (bad) scas in out mov pop sub add mov xor sub pop iret in lods mov aam mov mov (bad) in in xor xchg out jo leave into out rcrl mov jnp out aad out mov not arpl shrl scas xchg adc ja sti test mov in xor add inc dec or xchg mov (bad) imul or pop ja inc dec mov movsb (bad) sbb cmp mov lods inc and jge lret cld pop popa aas in lcall popa in sbb (bad) divl ret sbb jo inc arpl int cmp and sub out (bad) lret popf mov sbb rcr xchg int3 scas pop ficom push jo jge jb (bad) pop sub sbb std dec sbb outsl mov xchg push orl clc mov insb ja jecxz and push mov xlat xor mov movl bnd lcall stos lods loop sahf push xlat int3 lods pop sbb mov add stos sbb pop leave adc scas add mov (bad) clc repnz mov cmp (bad) loop outsl les je xlat fnop fcomps rcrb bound mov and push lock (bad) (bad) dec pop mul arpl inc mov pop or dec les jns jp pop loope inc xchg mov or ja adc fist sahf lret sti clc sbb int cmc fidivrl cmp (bad) clc fwait or dec flds xchg or push push mov or (bad) test dec jmp jmp push add cmpsb ja push adc push (bad) cmp fimul mov mov mov movsb adc leave rcrl sahf jge clc and xor cmp arpl lret lea mov sar pop dec cld rcrb inc aas and sub mov dec sahf mov (bad) fadds neg (bad) aam inc sbb fdivrl adc xchg cld insl adc cmpsl cli lea ja inc xchg mov in dec dec shrl lds mov (bad) test int3 jne push jle rsm cmp test cmpsb or xchg gs in ss sub call dec mov stos push das das push notb add mov (bad) rorb loope adc scas xor pop insb (bad) sti jno mov cmp std inc adc test fadds xchg adc add aaa mov out jl add popf std ret repnz pop movsb scas aam into aaa mov sarb test (bad) mov cwtl jl fwait bound loopne push add push pop xorb and and test add enter cs xchg enter (bad) and sbb shl mov add mov and sbb push mov int test mov (bad) arpl mov mov fildl fistp pop je and inc arpl jmp jp dec mov lcall jae ja ficomp js pop add rorb jne (bad) flds ja push add push sbb shl push fcmovne fsubr xchg mov iret pop sbb pop sbb push in mov (bad) lahf jle fldl out (bad) adc sbb or cmc add lret sub mov add sarl loope fs lahf jecxz inc pop aaa xlat lds popa inc adc sub jo jno pop in daa jne sbb adc fs xchg negl aas (bad) flds rclb ja popa jae xchg out push dec (bad) std int in (bad) ss mov mov sub push test xor (bad) fidivr es mov (bad) adc ja loope sahf pop arpl stc stc test cmpsl shrb test vsubpd xchg push or (bad) icebp xor mov add or call int3 mov inc les fmull sbb jae xchg jb rcl xor xor mov mov mov sub pop adc cmp pushf mov lcall pop jbe dec rcr fisubr dec pop icebp cmpsb and sahf jns mov and add fsts imul fdivrs jp aad int3 xor jl ret loope jge int3 lea insb xlat jns or mov pop repnz sahf mov jns jno leave ja lahf lds sbb add push into imul in movsb inc xchg and dec mov test xor int3 xlat (bad) xor inc or adc mov mov bound mov xor in popf ficom or and inc jg lret sarb scas inc push (bad) inc jmp sbb lock addb shlb ljmp fsubs xor scas nopl pop arpl sahf push sbb mov pop sar or inc adc pop push pop popf into sbb sbb mov fstp unpcklps out sbb jmp int xlat data16 inc mov lcall cli push mov aas movsb in mov and into test jge (bad) xor xchg enter lcall out push jl arpl test xchg mov jecxz add in mov pop adc xchg and test jge flds xchg mov mov into iret pop jae cmpsl pop ret mov daa fistpl enter lock loop roll mov jbe cltd mov pop sub push ret subl push es jnp popf sbb ja in mov into aad popa fmuls mov pusha mov (bad) xor ja cmc call fcomps sbb enter mov shrl (bad) aam cmp push lahf adc frstor sbb addr16 lahf (bad) fcmovbe pushl (bad) fdivs sub bound push mov (bad) std popf stos dec bound loop add cmp cmpsl xchg out popf rorl jbe xchg rol xchg dec out dec sti mov js ja mov (bad) negl in into sub lea pop adc fisttpl fcoms test jl sub and pop adc shrl push cmpsb fnop insb inc push or enter xchg femms lds dec pop push (bad) gs adc arpl bound ss xor mov xlat xchg jecxz frstor mov lock rorb cmp adc cmc adc xor push adc rcrl leave jg mov aas sub mov iret cmc sbbl movsl mov pop imul clc sar scas nop lahf iret push jae dec mov shrl cwtl std pop cltd jl and or add ja fldcw xrelease in in cltd dec sti jmp cwtl rol cmp outsl mov in pop pop fst mov repz lock outsb jecxz into aad mov clc int mov imul loopne jb in (bad) mov jle in arpl mov xchg xchg pop adc movsl cld dec push outsb popf inc inc mov push arpl lahf dec or (bad) rorl ja test inc lea jle inc insb sbbb cmp jnp and aad ds or inc mov mov jl cmc repnz dec xchg jmp or in mov and icebp or push pop (bad) ret xchg ror dec ljmp mov call cmp popa push shrl popf sbb push push adc mov and sub jns push sub pop push dec xchg push sub aas xlat pop adc clc add jge js,pt pop push ja lods sbb jne ja lods xchg add cmc xchg popf adc cmpsb jle stos fnop imul push lahf call (bad) lock inc lock pop jno in pop mov dec mov xchg inc sahf xchg inc cmc in sub pop jb pusha sub sbb sub iret frstor sbb call (bad) jecxz movsbl ficompl (bad) inc lea inc inc jmp cli cli (bad) ja andb sbb mov mov push push pop loopne mov mov xor leave repnz mov in push rcrl xchg lock xchg sub inc nop cmpsb jle fidivrl mov ja jnp rcrb xchg insb push je pop fwait mov inc mov xor xor xchg int cld ja xlat (bad) xchg jge mov mov stos mov inc and xor push ja mov push movsl addr16 jg jge jge mov mov ds fadd repnz xchg das nop jns pop cltd aas xchg pop enter in cltd jbe fidivr jae fwait popa addr16 adcb pop stos int3 outsl jae pop imul cmc jbe and add ret adc in outsb dec test aaa call push std rorl (bad) xor xor in dec push sbb mov push popf test sti cmp jne mov sahf lods out and mov imul lahf negb jl jp jge jnp add in cmpsb sub xchg fcoms lret sub mov xchg jnp mov jge mov push pusha xor or xchg aam or jmp (bad) jae cltd push into (bad) jne jo ja dec pop and out push out xchg or inc mov aaa ja iret pop sub cmpl lods cli xor rol sbb cmp sub cmp mov or leave popf xor jge dec (bad) mov push pop inc cmp fisttpll push xor dec jl mov lds test push fs inc lret popa popl adcl sahf xor or pop leave popf jecxz cmc cwtl (bad) ja push icebp aaa push leave pop in mov dec int3 cmpsb cmp pop in cmp in sub (bad) cmc (bad) mov pop fstps ret cmpsl imul sahf (bad) repnz ja pop dec jb lea (bad) ss aas test inc inc lock pop insb mov fdivs repz sub push and movsb jge out xor mov (bad) int3 xchg push (bad) fs dec stc pop cmpsl jb test bound insb pop leave dec pop in add push loop adc popf shll adc pushl sub fimul push push mov std idiv (bad) pop stos out (bad) ja or mov (bad) or or sbb inc and jno push fnstenv lret mov adc testb add sbb jp push arpl cmp stos mov (bad) sbb (bad) aad das sbb (bad) repz outsb sub loop arpl and jnp jae call movb pop pop aad rorb fwait pop (bad) jmp xchg ror lds (bad) icebp mov sahf xorl mov mov ljmp arpl loope sub cmp xor ja pop pusha arpl mov (bad) sahf (bad) cwtl and nop push inc fstp (bad) popa cmc scas adc mov and sbb mov jge sub mov or mov mov push push cmc cmp pop mov jge les ja push lea loope stc ja aaa repz xor push loop sahf and (bad) incb icebp bound stc lock jecxz jle test ffree lret mov mov mov adc outsl movb (bad) or mov int dec ss test (bad) ja test jge lods icebp iret popf xor frstor scas jp push loop lods or popa sub sbb cli les stos pop stc enter and daa (bad) popa lret hlt jmp jne mov xchg or iret fstp ss sar pop fs cmc cmp out imul xchg test and test imul cmpsl test imul fnsave xchg mov push (bad) rdpmc popf int mov pop adc rclb sbb xor out push jns inc movsb das adc add inc out lcall aad jge aaa dec cli cld sub adc mov add pop fdivs sbb mov daa fldenv mov in adc (bad) int dec jmp jmp or mov push rcrb dec push mov sarb (bad) ja (bad) sbb or mov mov decl hlt xchg test jge sahf ja dec mov mov lahf out arpl out or xchg sbb dec mov or mov add xchg xlat xor in xorl pop in lods or add push jge inc jle inc test arpl (bad) push insl mov dec nop lea xchg lds (bad) rclb popf push jl rcl sbb aad ret insl cmpsb addr16 aaa mov test or pop jge jg push lds and in dec sbb and inc pop xchg aam bndldx imul push push inc inc in mov repnz dec dec inc cmp xor (bad) unpckhps cmp jmp and pop inc test lcall push xor insb mov sarb test push packsswb and mov dec ret xchg arpl pushf into sbb ja sbb int enter inc test out pop int faddl lcall sbb fisubrl jo scas arpl mov imul (bad) rcll push jge ljmp daa in xor js fs adcl xor or pushf fs loope (bad) shrl or cwtl iret cltd js aaa loopne adc sub pushf xlat adc shrb add push fmul in in ja pop jne xlat mov pop cwtl push int3 icebp sub movsl jnp addr16 mov push fld1 leave adc and jno lret jo inc jge push ja add jae fnstcw imul arpl fldcw fstps adc jp cmpl add dec popa nop or push popf (bad) gs sahf mov fxch mov push in pop adc mov ret fsub icebp sbb cmp icebp mov ret popf xor idivl inc jmp outsb fs push jge pop push jb movb xor popf cmpsl sbb jge (bad) leave lret int3 (bad) scas pop or push jb imul imul test mov in push pop pushf aam out repz js jecxz adc lahf inc add adc mov pop enter mov xchg mov push arpl sub cli xor inc mov or test clc sar jne mov dec mov das inc outsb xchg mov cwtl and sar aas xchg (bad) cmpsb push inc jecxz arpl sub inc jge lods inc aad push mov out cli sahf sarl sub or faddl or (bad) xchg add xchg or or (bad) aam iret or outsb (bad) xor imul pop arpl dec scas xchg aam addr16 push xchg jo xchg test and mov (bad) lods sub fiadd mov movb xor cwtl sub pop mov adc je stos push popa std (bad) int3 ret sbb cmp lods mov cltd ret inc jle ret sbb inc mov fxch fbld pop ret adc bound push out jge and lods jecxz into push int3 mov je xchg and es xor cli mov (bad) cmc sub mov and lods push sub loope push add or out sbb fdivr pop mov mov adc out mov lret lock xor sub int dec rorb mov shlb lods cli cmp sbb (bad) or into and (bad) adc int hlt mov fwait mov pop fldl sbb aaa xor and jbe mov mov xor mov repz ror out or fsubrs adc fs arpl lret out enter pusha xchg dec and sti sbb stc in lods push jmp enter inc sbb add ds daa dec movsl (bad) push add outsb mov mov sbb arpl les popf hlt dec test cmp inc int mov and cmp cmpsb or xchg lock jnp inc icebp iret jl ljmp cmp push out cs iret jae scas push inc movsl into sub jge pop ret daa mov xor clc push int push cld mov icebp and cld or push ja push fisubr in xor inc jp out sti stos jecxz test jb or popf xchg mov adc cmp lock inc adcb dec or cli pop xlat mov ficomp lret or lock inc cmp dec iret jbe rcl pop sub outsb movsl cld jmp and aas fs test jge out push and jg mov dec dec xchg (bad) push cmp js inc bound arpl push (bad) xchg jmp mov (bad) jns sub (bad) sbb hlt jbe pop sbb (bad) mov hlt mov cwtl fild test pop sub leave insb (bad) mov ja xlat mov es fdecstp mov and popf or in jl mov mov mov dec jge mov pop sbb jbe and inc lcall stc rcr ja adc pushw das mov and movsb cmp loop inc enter nop push push push arpl mov and dec dec cmpsl jl ljmp and jnp movsb (bad) insb int3 cmpsb vmptrst jge cmp adc ja jb aam hlt scas (bad) jb icebp fsubs sbb jle popf sar jle lock ret dec mov lock lahf hlt fadds neg jmp fsubr xlat aad test stc lock ja clc in mov lds mov pop stos icebp fcom inc jg sbb mov mov sub cld jae pusha les push dec mov push std mov roll mov and jo pop lcall mov adc pop push mov add movsl dec (bad) cmp repnz push lcall sub cli out in inc mov lods and lahf (bad) pop arpl inc mov mov in into sub sub hlt inc ja jmp push or fs (bad) jns pop sub imul or xor add jp or mov jcxz xchg nop xor xchg call add jo mov out cld mov sbb xchg roll jecxz lock cmp mov pop jge,pn into mov mov into dec cmp in jb in (bad) cld (bad) sbb mov jbe xor test push xchg xlat repnz leave fnstenv rcr ja xchg lods jp cltd xor cli idivl ret fsubs fs mov bound loop ja jecxz sub xor jecxz mov aam fadds xchg add jno ja mov fsubrs fwait adc or popa arpl push xchg arpl popf jl aam mov aaa std pop pop xor ficompl cs fs lret pop scas jbe lcall pop pop push dec stc xor jl ds mov int (bad) cld loope fwait aam jnp add push sbb clc ja jmp je ret xor mov fs mov scas inc mov outsl call movsl test pop push sbb out mov xor rcl lds (bad) ror stc push das rcr cmp sahf jb mov cmc or roll lahf into ror gs cwtl adc in lods (bad) adc adc icebp pop daa dec iret insb out out sbb xlat (bad) in outsl mov hlt mov cmpsb xchg stos xchg inc mov in (bad) jnp fidivr and lea insb loopew sti cmp mov add add dec sbb hlt push adc adc jmp nop jo or mov rcrl jo xor push shr test aas iret (bad) pop les or jmp jecxz mov pop dec ljmp stos cli in add adc sbb fsts and or jb das clc lcall gs jno rolb inc out (bad) or pop xchg in popf dec int sbb jge mov clc ja jmp (bad) dec imul ja (bad) jl jge sti enter fnstenv stos dec decb out mov into xor (bad) lock cld push fs into add fisubrl jbe (bad) push mov rolb push mov sbb push mov test repnz movsb (bad) dec ret dec out loop sbbl test mov cmp and and scas jb jle orb push xchg adc sbb pop movsl adc add int push (bad) (bad) enter pop mov fcompl adc sbb ds pop sbb xlat in frstor lret shrb unpckhps inc sbb out or cmpsl out push inc ret pop popf shrb scas shrl and jae (bad) shl std sbb hlt cmpsl xchg jle icebp fdivrl add or sbb mov sbb push cld add xchg inc pusha int gs insl jle aam mov dec pop (bad) sbb fsubr push jno dec fimul or mul jmp aam outsb jns sahf push fiadd push push imul push xor sbb mov (bad) rol testl std fsub inc or pop pop adc push adc xor push repz or incb outsb lret mov leave mov xchg pop push push loope rolb sbb push popa xchg adc cmc and pop add dec mov cmpsl sahf cmp pop mov mov pop sbb lcall adc ret sbbl fistp sbb inc js xor push cld pushw add aaa lcall sbb adc dec rcrb pop xlat adc pop cmp out fcoms sbbl insl decb cmp ljmp aaa in scas mov mov jp lods ffree cmpsl inc add stos mov adc ds add add je popf fwait xchg loopne add mov cmpsl cmpsl scas lahf stc pop clc inc rclb xchg into dec pop movnti adc out and jle pop add (bad) fmull push add imul xor cwtl cmpsl bound mov xchg in cmpsl xchg aaa test dec or test rcll cmpb xchg addr16 xor loopne xor psllw loope add sahf cmc je dec icebp wrmsr sbb aaa pop pusha pop adc and xchg ret sahf cmpsl push fiadd ret dec pop mov sahf xchg push cmp inc (bad) fldl xor rolb fwait add andl adc sub rcr pop mov dec hlt sub out mov sti cmpsb mov push test fistl pop in sbbl bndldx mov mov sub pop fcomps dec and sub jae sbb pop push add lcall jae push or in adc jmp cmpsl xchg push stos mov adc jle cmpsl pusha pop clc mov pop sbb imul pop negb xor xchg insb jae mov adc jl adc push sbb insl loopne iret movsb (bad) xor adc mov cmp mov push xor es stos dec outsl push jl jle movsb stos adc inc sbb push rolb insl sub inc (bad) xchg adc outsl adc sbb (bad) xchg push pop fwait in test jo push popa mov fs lock or mov hlt (bad) shr pop repnz jns ss dec push jg sarl ret sbb cmp cmp xlat sub dec push pop xchg xor pusha pop es push push andb fdivl je xor mov push out lea rsm inc stc push arpl mov jmp and loopne bound ss in push sbbb (bad) and or adc push icebp loope mov mov lds ja ds push into adc sub nop push adc inc outsl cmp movsb loope lret mov push fisttpll add cli adc into xchg insl push and fwait stc push jbe mulb loope dec xchg jecxz mov ficom lods out ficomp ss add xchg popf cld insl fucom mov ss or dec stc cmc test mov inc cmp push ret adc sarb push popa cmp xchg dec cmpsb xchg mov outsb daa push xchg mov push nop jmp cmp repz ljmp mov mov pushf pop xchg (bad) outsl dec idiv stos mov loopne daa cwtl (bad) sbb rcrb icebp push add (bad) dec add rcrb ljmp push loopne push mov push jge push and xchg add xchg push movsb and fstpl scas xor cmp subl lock mov mov (bad) (bad) adc add shrb push mov out (bad) loopne jnp cmpsb inc push rcll sbb (bad) mov ja add xchg cli mov ficompl cmp jmp pop push dec push sub bound xchg inc mov ficompl mov aas adc xchg ja pop mov scas mov popf push mov pop sbb ss sbb pop jp lock lcall add jg jmp adc push test jle dec push mov sbb enter mov mov pop in sbb pushw sub xchg xor hlt or mov xorl sbb inc xchg push (bad) test pop fs aaa push mov std (bad) sbb clc and ficom (bad) call or js movsl dec mov aad fisub pop sbb loop mov ja ret jg into mov mov ljmp push loop add fisttpll jb dec mov (bad) cmpsl push fbstp jp shll pop es xor push in add push std adc int3 jnp cmc add xchg xlat insb movsb push pop sub cmc adc push dec imul push push in loopne iret sbb sub add inc cmp fsubrs push push dec xor cmpsb xchg pop and cmp or or xor fwait mov popf mov ss insl (bad) mov pusha stc loope movsl stc fistp lea addr16 sbb out (bad) ljmp mov mov sbb mull sbb fisubr xor repnz arpl lret fmulp jg cli movsl mov ds lods cmp lods fcomps es les ja je fidivr and aas push test pop push pop ds xor and das sbb push aas sbb loope add test pop out fcomps es or mov out sbb jg sub or icebp mov push jbe cmp cmc mov cmovns lret cmpsb pop xor (bad) xor (bad) sbb sub lock push iret sbb jp andl (bad) jge pop mov xchg adc adc xchg aaa push xchg out fildll mov ds test sbb xor pop mov mov sub rcrl (bad) loop mov in orl ret fist pop fdivrl add dec jae inc xchg mov insb in pop sub mov push (bad) xor out repnz sub cld jae dec mov adc test pop xchg push es push cmpsb push aas out jg daa sbb into cmpsl loopne mov mov dec sbb push std (bad) shll inc pop mov mov pusha sbb xchg push incb xor dec movsb bound xlat imul jecxz ret fadds insl add inc ficom out push pop mov sahf push sbb clc enter insb pop ficom sahf in imul pop mov and xchg mov lcall sbb sbb sub dec ss sbb adc cmp faddp mov pop jnp xchg or ficomp mov (bad) cmpsl push or mov cmp subl ss sahf aad jg sbb sahf inc iret sbb call out inc jecxz jmp sbb cmp (bad) pop sbb std xchg push stc enter ss xor ficomp psubb std mov (bad) out add pop stos xchg xor (bad) xchg faddp jae push cmpl cmp jne test xchg test cli lcall add pushf adc jle sbb inc dec (bad) push in outsl jns push loop jp in mov dec jg push or std pop icebp push cmp popa cmp inc sub xor xor push loope mov xchg fisubr sbb call add sbb cmc or mov mov push mov not pushl mov jmp aaa ret js mov fidivr sub push xchg mov add shrb sbb push call or movsl pop sbb mov add lds adc es inc je jp jns pop es adc imul jo lcall and xchg inc dec cmp repz push adc xchg mov imul out in sahf cmp and pop pop jp jnp mov mov inc aaa mov or and subb mov cmpsb sub sahf xchg xor dec jb dec xor jp inc push in ja outsl xor or inc jne add push adc stos dec pop inc add pusha bound popf orl adc call outsl inc jg jnp pop xor out jns lahf cmp out lea icebp push pop push dec (bad) cmp cmp pop cli sub pop rcll popl adc sbb (bad) mov inc inc (bad) test (bad) out pop loopne pop les mov mov pushf push pushf pushf pushl ret add pop mov aad repz mov xorl mov (bad) das mov insb stc je inc ficoml mov sbb mov sarb sub pop das outsl lahf ret ja cmp push aaa mov idivb xchg imull outsb or test ret dec cli push xor dec and loopne enter cs sbb mov in jecxz fnsave aaa push sti shrl push in pop add gs jle call sbb ljmp push adc push jmp lcall xor sub lods inc push jno adc enter shl mulb sub xor add js and push data16 (bad) aam cs fstl xchg fcomip xchg push inc xor repnz cmp call cmp and sete lods jmp in dec std push test add mov add jno (bad) je jmp push push addr16 pop jmp cmc out add mov pop mov xchg out xchg int3 or and notl dec sti jp lret in das mov outsb stc add lock or lock add add test add add fwait or add add xchg loop add add add lock add add mov add js add add add add add add std add add add or add add add add or add add bound add (bad) fs add add add adc add std add aaa adc add xor add add add add inc push repz stos push fimull nop cmpsb pop sbb les cmp xchg xor mov out jge pop jg dec add sub scas push cmp (bad) jno ss jae notl notb sub out (bad) lock inc out repz daa clc aaa dec mull pop imul fbld mov xlat mov loopne outsb outsb dec fmuls mov int3 outsl cmc pop lods and xor dec cmp cmpsb aad add test dec or outsl fwait sub daa mov in inc push lock xor add stos xchg xchg fst mov jns mov rorb cmpsl push adc scas ss mov or inc mov mov dec shll inc pop mov mov popf cmp cwtl (bad) je dec or jns mov addr16 nop incl cld push push fmuls xchg lods dec cmp mov (bad) int3 xor dec (bad) insb xor mov out or mov dec ljmp sub pop mov ja jecxz sub sbb repz inc push cmp push roll lods xor pop ja fistl xchg outsl xor testl ret into mulb push adc push jmp adc push les jmp fs add mov cmp cmpl jno xchg outsb or lods aaa mov dec xor ss inc out insb add push lods scas es nop cmpsb (bad) mov rcr (bad) int3 (bad) ss cmp push outsl xor cmp add xchg pop es mov mov mov aad pop mov scas jbe pop mov xchg ret pusha std cmp fisttpl and or ljmp pushf mov rol pop or (bad) sub mov mov cwtl movsl dec call sahf in bound (bad) ret xchg xor jnp mov xchg fdivr popa adc cmp pushf shrb jo cld or push sub and ret mov pop pop std dec pop push mov jo push testb sub ret jle push mov iretw jbe or add cmp hlt fwait or pop lret (bad) mov (bad) daa popa mov sub sub cmp push lock mov ss cld mov mov mov cld insb xor add es cmp xor push jmp icebp (bad) das out in sahf adc fistpll ss mov sub sets outsl outsb repnz cmp dec lock or push ret loop dec inc stos aam jmp jp out imul sub (bad) scas int3 pop cmpsl xor or hlt out sub jg lcall inc or push mov add arpl mov mov mov jo sar cmpb mov pushl movb lea jne adc sub pusha mov stc test add bt jmp sub call mov inc push sbb pop fstpt ljmp fbld divb mov sub test pop out mov sub pop cmp rcrb dec pop lods dec and pop and movsl outsb lret jecxz and clc push inc pop cmc cmpsl fmull lods xchg inc dec inc dec jno and mov out rcr (bad) mov das ja add xchg pop cmpsl in loope (bad) aam push mov add push gs push mov stos cmp sbb push out outsb stc add push lds mov les mov stos inc push xchg clc adc movsb mov push adc hlt lcall push mov lret lea xor or mov into (bad) stc nop iret icebp loope rcll xorl adc cwtl jno popf adc pop sub add and xchg stos stos push js xchg iret fild adc mov je sub leave jb ljmp sbb mov cmp xorb or cltd xchg and pop rcrl mov jae xchg insl jne inc lds and xchg xchg scas cmp jmp add inc sbb mov push imul jp aam or sbb push add call add sar shrd mov adc dec setnp shr mov stc cmc bt repnz call lea jne jmp mov push test add adc setge arpl (bad) (bad) stos enter mov out xchg mov fsubrl mov popf jecxz jp or and pop or dec ss xchg sub sbb subl stc (bad) out push lahf xchg in xor inc jnp cmp negb fnstcw ret pop fadds xchg fimul jg fmull mov mov ss lea xorb sbb mov data16 jp sub lds mov test xchg push stos insl data16 adc aad inc and sarl inc push pushf pushf lea jmp test stc not stc shr jmp mov cld push cmc fwait pop and sbb push mov mov mov out and ret xor adc mull xchg inc nop add sar loop push scas loop mov int3 dec loop enter jnp pop loope cs sbb cmpl cmpsl xor mov lods dec enter xchg xor pop or das inc lret (bad) cmp cwtl mov sub lret mov inc cmp mov data16 sbb mov and xor stos inc mov cmp and lret mov fadds repnz cmp mov jne std xor add (bad) jle jbe out push push ds mov ljmp out arpl (bad) ljmp ret adc jns dec dec popa push (bad) mov bound pop fmuls out mov sub adc pushf cmp or subl in das jle cmp add cmp mov jno movsb out int inc roll pop dec cld mov xchg sti mov ret pop jo mov xor frstor mov cmpsb mov (bad) repnz cmp pop or push faddp std out xor pop outsb xchg inc push mov cmp xchg (bad) je call push imul std insl mov xchg movsb ret xlat int3 mov or (bad) jne mov push sbbl aaa mov dec fsubl dec mov fwait sbb idivb sar push or ljmp xchg loope pop test mov mov cli push add adc rcrl popa enter cmp pop aas jmp cmp mov push mov gs xchg sarb pop xchg mov add popa mov jle,pt mov cmp sbb insl dec ret inc stos push scas cs pushfw popw pushf push dec mov pushf call mov lea jae jmp pushf repnz pushf pusha lea jne pushf setp pop movb cwtl jnp push push not jmp pusha call imul out mov test je (bad) sbb test (bad) cmp mov inc sub adc ss rclb mov pusha jl lret mov dec in test add out cbtw lret mov fmull mov or xor pop pop std stc mov sbb pop cmpsb aas (bad) in pop cmp pop fcompl push inc jle push or insb dec cmp bound pop fidivl imul pop push adc scas add jmp or cmp push adc dec and cmp lock call or stc sub inc push jae sbb mov sbb loope xchg sbb lods ss hlt and add das fldt shrl mov push cltd add and cltd inc mov imul xlat das insl dec aad xchg in iret arpl push inc (bad) xor aad scas add fsub mov stos repz xor pop jl iret mov pop pop jge imul stc ss fistpl lea iret xor cmp ret or push (bad) nop and cmpsl daa mov push mov add xor xchg fwait jmp pop test jecxz jnp out inc fimul rclb popf jns dec outsl cli iret adc xchg test jns and fsubr int3 lock test xorl popa push movsl fcoml jp in push adc fcmove jecxz or in mov sti dec inc arpl and insb mov xor jns jb cmp pop push push out cmp mov sbb test xor hlt push (bad) das add and push out jbe mov jo adc scas test push enter xor outsb icebp cmp and inc aam movb call dec into pop mov mov int3 cli adc jp and lcall sahf out jb mov aad mov inc sub das jmp test std sbb test jbe (bad) pop xchg nop fnsave inc sub cmp ret leave sbb (bad) mov mov mov mov int3 xchg scas add ja or test jae cmp in loopne jge mov mov insb xchg mov data16 mov iret movsb mov rclb nop loopne sub cltd sub gs in add ret std push mov mov inc movsb pop mov mov xchg lock fstpt ret push push pop dec lods (bad) jnp mov outsl dec mov aas xchg and mov mov insl pop push add mov inc push pop xor pop stos xlat scas xchg xor adc testl and sub fstps clc enter jne pop push mov pusha pop inc inc inc gs fsubr (bad) aas mov ror mov or mov dec adc pop fsub clc inc int dec mov (bad) mov stos push push and or inc add push pop pop push push push stc push fiadd cltd or cmp mov jp (bad) movsl inc loop xchg and pop xchg lea inc cmp pop mov push xchg lcall cmpsb ljmp mov aad in sbb ficoml mov or out xor jbe imul ret xor data16 loop stc add pop aas test pop arpl mov jno mov cld cwtl cmp inc adcl outsl push (bad) dec mov pop fucomip popa lcall sub pop pop push fldcw gs dec fcoms mov jbe (bad) in xchg sbb adc adc xchg std and shl jp aad jns and jecxz mov rclb mov add jno sub mov sbb jae add mov push fidivrl pop or jge fs sub push mov inc xchg (bad) jnp xor mov push in pop insl fldl jnp inc fwait pop xchg scas mov in cmp pop aam mov stos adc cmp out repnz or mov out push jb pop (bad) push pop ja in cmpsb fdivrp sbb stc in icebp pop and add test lret mov sbb lods or sti aam xchg mov aas das ja out add pop rolb xor mov icebp es movsl cmp lcall ja inc and out adcl sbb negl push les add inc inc adc testb cmp stc not stc rol stc pushf mov not stc clc movb push shr pushl jmp add pushf movb pushf pushf lea jmp push scas clc sbb pop adc sbb lds jmp jns int push cltd gs sbb pop insl jns (bad) loop mov ds cmp sbb cs scas cltd lea xchg sbb mov out pop dec fmul gs push adc popa inc sarb add negl into mov insl dec scas dec mov loope adc jb pop mov mov xchg aam xchg int adc leave pop mov (bad) sbb (bad) sub jno iret sbb insl add leave sbb (bad) jp sbb or cmpsl cmp gs sub sub push dec adc test mov push mov jns push popa push push sbb or mov or sub fucomp mov mov or js mov arpl xchg push and dec cmp outsb mov pushf lea mov xchg stos push jp sbb add push loopne adc xchg push or (bad) push mov std add out xchg inc cli out imulb subb (bad) loop mov fcmovbe orb mov fiadd sbb out aad mov push inc movsb popf mov mov pop (bad) scas mov push lods dec add (bad) rcll sahf xchg sbb or test fidiv lea in sahf lret loopne mov cmp jns cli mov sbb cmovp cltd xchg xchg lea jns jno imul pop push dec inc inc cmp push sbb add push stc cmc icebp in jmp (bad) ror leave (bad) mov lret push or leave stc dec repnz cmp push push decb cmp lcall je add xchg daa (bad) sbb cltd js add add pop sbb pop mov jmp push xchg inc jae ja mov neg test call push movsl fist mov lods push (bad) pop and mov ficompl sahf push outsb idiv jle mov cld addr16 (bad) cmp in (bad) (bad) mov std out notl in (bad) dec mov push or (bad) sbb jge lods (bad) int std or (bad) jle into std (bad) loopne push rorb mov (bad) push les xchg or (bad) pop mov xchg jge int in (bad) mov outsb les out in fisubl enter xchg xlat les xchg cmp push fcom sub les sahf clc aaa fmul add call aas xlat pop fidivr fs mov cmp lea (bad) dec rorb xchg std (bad) mov jb test or mov mov mov in sbb sahf or mov xchg clc adc nop pop in popf out push (bad) jae jns das xchg sub test sbb xchg lea daa and in fisttpll and xor icebp lea imul mov imul sahf sbb mov adc dec mov cli testb add xchg (bad) cli push xchg adc (bad) sbb fmul sahf arpl push sub push push pushf stc cmp call test pusha sub cmc bt clc cmp jmp setns or jecxz mov les or fmulp xor pop (bad) mull dec push xor jns xchg std xor xchg pop rclb shrl mov sbb push popa jnp mov pop xchg or sub imul rol dec movsl scas or inc ret dec pop clc loop push int3 lcall adc mov popa lock pop repz cmp lret and xorl clc cmp cmc js inc jmp inc iret add frstor pop inc sub in pop mov push rcrb mov dec loope fisttpll out inc push jno (bad) xchg mov and xchg pop fwait data16 xchg outsl and add push jno cmp inc push cmp pushf mov push adc clc cwtl outsb inc movsb mov xor mov mov or inc in mov cs adc or or adc les out bound add xlat outsb adc ficom jl das iret sahf and sbb jbe (bad) mov mov leave sub movsb jbe xor push leave pop mov stc cmc or enter push sbb add ja pop (bad) xchg and inc cld adc jbe add jl add rclb test fidiv call lret sti jnp inc push outsl es rcr shrb pop xchg sbb xchg fldenv jmp mov mov mov pop lret push push outsl repnz out repnz jno xor dec fcom les mov dec pop sub mov fldcw push clc insl enter jnp cmp cwtl std fcoml cmp xor xchg test xor xchg cs fldl push or cmp rcr frstor das in adc out jle (bad) push int cmp push hlt loop ja inc mov cmp xchg mov sbb push lds jb mov ds (bad) in (bad) sbbl in inc push or pop mov xchg jb clc mov pop popa nop sarl push sarb int test mov sbb inc xor lret fidivl out mov push jecxz or push lods ss cmp cmp adc (bad) dec pop call popf std mov add jno jo jp lcall and adc std mov mov fwait add and ss adc leave cmp jb mov je sbb mov jmp (bad) fistl fwait ret jae sbb out add fist add jne test push mov std adc pushf aaa pop mov and sub (bad) out adc in scas std adc enter mov inc inc jmp icebp cmp add jne cmp push mov adc insb les xor sbb sub loopne inc rolb mov loopne clc data16 push fimul popf mov and std push (bad) test cmp xchg je add pop xchg sub ss imul (bad) xor into ret mov iret push push (bad) xor in int out mov pusha ret sbb cmp mov loopne sbb inc (bad) jns arpl pop jmp gs pop stos dec cmp imul imul out or push into push loope iret cwtl add add imul outsl hlt or outsb cli fdivp call mov call test inc push and ja xlat ja fbld mov roll mov adc jmp push pop push ljmp cmpsl sub lcall lret cmp rolb outsb hlt sub push ds clc subl cwtl inc loope ret ljmp cmp add adc inc gs xor xor jne stos xchg jo jo pop (bad) js xor iret sbb lods mov mov or fdiv mov pop loop andl adc push lock mov inc xchg jle leave push or int push ficomp mov inc inc stos jg inc cwtl add sbb xor fwait outsb (bad) in inc mov mov push adc sbb out decb ds dec mov sbb xchg hlt cmp test lahf mov or jb scas mov inc cmp das movsl ds mov (bad) mov add mov mov movsb push std mov dec sahf or in adc pushf popf hlt mov add mov inc mov fisubrl mov sbb int3 sbb push fcmovbe pop pusha (bad) jecxz dec loop int3 loopne int add and add test or stos mov push jecxz jb sti addr16 pop insl std and imul sbb leave test mov stos negb push push and and dec dec adc mov mov test imul mov jp sarl adcl test xor lahf movsb xchg lea addr16 cwtl inc loope sub cmp inc dec cld xchg aas xor outsl push cmpsb xchg push mov cmp rorb adc xchg lcall sbb pusha or dec test popa push or push sahf movl pop pop mov xchg jg cmp sarb negb cmpsb (bad) fs movaps push push pop aam nop pop into jno daa imul xchg negl jno sti ss xchg mov jns push jecxz lret dec std cmp cmpsl out sbb xor mov and fldcw test daa pop pop ret dec popf sbb xlat es aaa mov sub pushf aaa (bad) pop mov mov sahf outsb cltd xchg mov sbb (bad) mov and cmp inc fnop aaa mov lds inc push push jl inc xor mov addr16 test xchg and fildll aas pop push enter pushf push cmc cwtl mov nop pop dec clc test or jl mov mov (bad) sub addb bound sahf push mov fldl ja sti push clc push sti sti sub or mov jnp cmp dec repz notb sbb testl gs cwtl pop arpl rolb jle add in movsb adc stos mov or outsb (bad) cmp out lret enter cmpsl fbstp add daa scas andl mov cmp sbb fildll mov imul pop scas ss push ja mov loope mov sub sbbl jge (bad) leave jbe sbb out mov xchg adc nop std adc jg adc mul add xchg sbb xlat cmp cmp xchg xchg call mov lahf pop cmp lods lahf mov aaa test xor mov mov leave cmpsl dec and sub mov sbbl mov out leave or inc in push shlb mov and mov and es test pusha lea je call btc mov clc push add jns cmpb call pushf cmp pushf pusha push lea je jmp dec rcll inc push xchg ficompl outsb movsb outsb mov sbb lods and pop (bad) aaa daa popa mov mov clc sbbl dec sbb or popa and fimull das cmp out cmp inc cmc push inc xchg fwait ja jl ja fs fistl bound xchg lods or and cmp ljmp pop sub inc adc dec call btsl bound dec sti push lods fs xchg ss mov xor cltd sbb (bad) call mov call mov call and xor xor push sar pushf lea test movzbl sar sbb mov bts btr call ja mov ret inc push cmp mov bound test xor popf xchg lock ss je jne jb mov insb or jbe fs insb bound pusha xchg in or inc jmp std enter icebp mov lahf scas std cmp icebp xor or fnsave outsb out outsb sti aam xchg popf adc pop ds pop lods fisttpl xor add push out xor gs lea and mov pop push fcompl lds pop push insb shrl sbb scas fbld jbe cld cs ja (bad) mov lret aas in or lods movsl mov vmread mov sahf xchg lds push pop mov sarb repz jbe fistp test test lods push push mov cwtl data16 sbb pop mov cmp dec ret xlat push jae out jae and je and popf push int3 lods bound loop dec jns out xchg adc ljmp push (bad) add sub int3 insl lods mov mov jne sub jle adc xor fs int rcrb push icebp daa (bad) or and bound jo (bad) gs jecxz add xor xor dec out das add or inc fwait add adc push jmp call or fcomps inc push into push roll ud2 dec ret fwait jmp cmp inc pop push push mov pop test inc pop push sub nop xchg push push add movsb les add jae (bad) xor fstpl imul sbb push hlt inc jle pop (bad) popa arpl cmp pop xchg xor cmp in test jnp xchg xchg shlb int3 imul inc ret les push sbb jne sbb push int3 bound and popa pop and cmc das cmpsb out imul xor rcrl test bound clc lods ret rcrl lods in inc sbb icebp jg adc dec cltd and adc xchg mov (bad) sbb repnz jge cmc in xchg data16 into push push or xchg sbb shlb (bad) mov insb sbb leave (bad) cli pop mov mov pop divb clc mov movsb push mov stc sub adc push or sub mov jnp cmpsb jmp pop jmp mov cmp enter dec out outsl into inc push (bad) or pop and ret mov jl div (bad) jo dec enter clc cmp inc pop aaa fistp cmpsb lea and repz stos pop jno inc sbb push pop mov push lahf adc mov ja popa jl jg addr16 inc hlt aaa adc cwtl mov test cmp jecxz sub das jno jg mov sbb (bad) ljmp mov xor push mov and dec dec sarl cmpsb in (bad) (bad) imul jle int lret jle xor cmp mov rcrb push pop ds call std incl test ljmp pop and xchg jg inc add xchg cmpsl inc push dec jns sahf aad jne fimull aad cmpsb xor adc mov outsb jle hlt push adc cmp mov shl lock mov js into push sbb mov mov cmpsb push lret jmp mov repnz xor nop dec out cs call arpl push mov jp mov enter and lock gs test and cs mov ja and mov cmpsb aad add dec cld fwait (bad) lock and inc push repnz movl les push popf xor push es addr16 stos daa neg daa inc leave jp movl inc and cltd test fcoml mov fsubs mov mov fadds stos lret arpl lods cmpsb test add into pusha outsb mov push lret (bad) pop lods mov stos pusha (bad) sbb inc movsl in fistp or jp mov (bad) mov mov add adc fisub fisubl pop mov rcrl notb stc arpl jecxz xor mov inc mov cmp cmc jle add (bad) cmp xchg bound and pop xchg add cld xchg pop push push jg pop insl sarb dec std cwtl shl sub pop jno mov mov inc insb mov icebp and inc push xor xchg sbb dec rcrl maskmovq icebp lret ret popa test rcrb fs int3 out jp adcl jge jae add xchg lods in sub mov mov xchg push jbe push hlt movsb cltd imulb lods jbe push xor sbb out mov pushf and mov outsl add xchg mov popa clc into jle rclb pop xor fldenv sbb cmp aas sahf mov mov xchg jbe cmp xchg pusha movq dec inc jmp xchg ficomp fs and mov aad ret imul pop push fisubl sbb imul loope or mov jg decl sub outsl div xchg cwtl in mov xchg xchg sbb adc stos fldcw xchg ljmp add inc push (bad) sbbl mov xor mov inc push iret push xchg xor test or cmpsb xchg add mov xchg xchg arpl cmp lock insl mov bound mov xchg cmp int3 xchg xchg push mov jecxz xor adc roll iret mov je cli dec cmp fwait lock mov xor inc jl enter jno rcrl mov add pop mov push mov pop fnstenv push movsl dec shrb lcall xchg out cld sub cmp or inc gs aaa and cli pop cmpsb push stos rorl inc push xchg lcall int leave cmp mov das daa inc rcll fs repz into movsl pop lods jne cs idiv out cwtl insl int3 cmp pop sub jg xchg push xchg xchg imull gs cmp sbbl scas pop arpl rcrl roll data16 insb push (bad) in cmpsb xor sbb cmp and loop dec pop aaa mov arpl xor xor mov mov xchg icebp mov (bad) ficoml dec push (bad) call andb push push (bad) push aad sbb rol fisub xchg and lret inc push lahf nop mov xor pop lods or daa out (bad) icebp icebp stc xchg dec in jmp fcomi cli jle add lods les sub adc daa stos flds jae xchg mov push add add sti sub movsb mov bound pop cli mov lret dec mov imul in loop out xchg jg pop (bad) movsl push notl out addl mov mov repnz sbb dec test inc (bad) push aas iret and pushf lea je stc bt sub pusha pushf cmc test cmp push lea ja bt imul pushf stc add movb pushl pusha lea jmp lea je ror mov shrd ror data16 repnz xor rcr mov stc call lret ljmp cs fsub inc aam (bad) jbe pop inc push scas mov mov inc scas and cmp jg lret dec fcmovne ret sub movsl sub cmp lret sti sbb sti daa outsb jo inc push add mov inc out dec in loop data16 mov sub enter pop ret nop xchg sbb adc movl mov aam push stos jae xor dec and xor sbb mov dec sub mov rclb scas xchg sbb xchg sbb push popf pop lret adc outsl lret and (bad) fldt shr xlat cmp sbb adc push push xor xor fs insb add test fsubl mov rol mov add (bad) lock jp jmp jmp lret xor xor mov pop scas imul outsl nop push call sbb mov std sub mov aas inc xor dec (bad) mov mov in sbb or add arpl ret mov fbld add das gs dec pusha mov in in and test in jecxz int3 adc mov lret mov mov mov insb test (bad) stc lahf sub mov xor push cmpsl je pop pop loop dec stos cld mov mov test (bad) cmp dec in lock fild mov scas std jmp pop pop jl (bad) inc push (bad) or jns imull decl mov cwtl pop and push xor add roll aam stos stc insb icebp or js stos or ljmp jl or dec (bad) pop push in std add or aad inc mov lds pop jge dec test imul arpl sbb inc aas (bad) xor mov frstor dec xchg mov pop and sbb mov xor icebp inc push (bad) pusha leave addr16 lahf push jmp icebp sbb cmp or and mov out and pop out xchg xor push add test test cmp jmp mov adc mov pushl pusha pushl lea jmp lds pop sbb gs stos adc out cmp out jecxz pop loopne pop test in sbb cld (bad) loop mull or xchg add xor sub cmpl and sbb out sbb pop pop sub jp,pt scas sbb inc xlat pop push int ljmp xor push in push push scas push xor push or in sbb mov into jb adc das sahf add sbb cmp mov push jnp (bad) into fdivrp dec mov pop (bad) mov jg repnz pop cld mov jnp sahf scas lock jne push in mov fstps jb add or jmp movsl pop ja sbb daa xchg dec lds (bad) fist push out clc (bad) xor pushf inc jnp push mov scas out dec inc sbb lock test movsl pop aam mov outsb faddp or incb inc sarb sub cmpsl mov call addr16 inc rcrb rcl jmp psraw into sbb clc cmpsb ficoml clc into fimull clc neg (bad) pop dec adc sbb in xchg inc cmpsb sbb add mov add ja inc jo lods (bad) sbb ret push push cmc xchg push pop stc cltd (bad) arpl mov sbb push dec adc cmc mov jnp repnz js dec notb jge xchg pop inc jbe xchg negb out mov stos push inc add xor jbe push push es ja mov sub dec sahf pop xchg dec sub idivl cmc sbb in mov or icebp (bad) out add insb jle lds pop mov dec adc pop xchg (bad) cli add ficompl add sbb (bad) xor xor add inc std lcall pop scas rcr fisttpl out sbb add sbb scas mov loopne nop jmp and cwtl push cltd and push cmp ja ja stos sub loop in jecxz movsb jg xor mov push push add clc push ss sub test add xchg mov mov sbb ja xor push mov xor lret mov repnz fcmovnb (bad) sub aam sbb in jmp psubb mov cmpsl loop xchg in in pop jecxz (bad) xchg in push notb adc outsb aam repz or mov test pop (bad) mov dec pop cmc into popa lock insl jle dec int shlb daa jnp or pop adc pop lea jle lret push jnp fimull adc in or fnsave ja test mov adc jl clc xor mov adc cld ret aas jle mov pop or or sbb (bad) jge into vpmovzxbd in imul sbb or mov and xchg adc sbb call adc cld mov clc mov sub jecxz jle into fdivrs out sbb mov adcl adc or inc fs jp adc pop or adc sbb and cmpl clc or dec or std lock outsb sti push sbb test jecxz push idiv and adc pushf imul (bad) pop cmp fimul cmp arpl mov jp adc popa xchg aad push rcrl sbb sbb sbb pop adc inc cmp mov add mov (bad) out leave mov ja ds je out scas loopne jne mov negb imul jne xor mov (bad) dec into inc sahf gs pop adc aam cmpsb nop sub sbb rcrl push aam push andl loopne in sub inc mov mov pmaxsw stc add fstl push (bad) push iret aad push mov popf push mov or leave push push fnstcw es xor fstp or jge mov in push pop add fsubs daa (bad) (bad) push pop mov ds cltd sbb adc sbb nop mov aad ficom adc rcl or enter sub (bad) mul out add dec add jne and push mov fidivr movb in push inc (bad) mov jge mov push or stos incl pop out and cld loopne ljmp sbb dec ja,pt xlat inc (bad) xchg lods push sarb arpl sbb in cmp pop out loop cmp push addb or add or jl les dec (bad) out adc xchg (bad) cld pushl ror pushf test xor mov lods cmp or dec inc popf push add pop fcomps hlt sbb les fist mov inc mov ja pop mov jge in xchg fldz insl ror sbb in test lea repz daa popf cwtl test xchg imul and sbb ja aas loopne fistp or adc jne aam mov jmp shrb adcb mov jl push fst or ja xlat push sbb arpl mov or jae adc cld mov (bad) adc call cwtl xchg insb xor (bad) pminub fwait jge (bad) cmp xor jns outsb mov (bad) xor enter and push push ja fcmovnu jne fidivrl add std sub ja std fisubl out negl psubusw std (bad) roll lea push jmp loope fimul inc add xlat jnp test mov lock icebp sbb mov mov outsb adc or or dec insl fucom jp mov sarb fdivrs (bad) iret jecxz cwtl mov stos sbb mov add out pop adc popa repnz dec add cmp mov cmp sbb imul pusha and cmc enter (bad) sahf or sbb add cs (bad) aam add jge sbb fs dec mov or mov mov jecxz cmp or mov ret stos aaa mov mov shl cmc mov outsb (bad) or lods inc sahf xchg (bad) popf lock lea lods adc mov cld sbb add iret std daa sahf negb mov out sub push sbb push add out repz mov cmpsb pop iret sbb add xchg add cmp sub xor das jo xchg and arpl in and ja sbb cmp mov mov outsb jle sahf (bad) clc mov (bad) (bad) outsb xor pop pushf push cmc cmp (bad) sbb jbe sbb test jno rep sub (bad) ljmp hlt xor orl pop inc test js cs lea outsb scas and push test mov push cmpsl fstp fildl lea sti add hlt dec dec shlb pusha pop adc ret (bad) aam cs fwait outsb jmp stos mov stc aas (bad) xor push and push jge rcrb ljmp or ja ret lods jecxz mov enter xor adc popf xchg mov loop into bound rcrb in pop cltd enter jl std daa push int pop jae shlb (bad) ficoml out mov xchg and xor or into jae loop xor addb dec ss rcrb jg scas lea mov mov cli into adcb jle movsl adc idivl int dec pop mov sbb andl inc xchg pusha stos or or in mov pop mov cld aaa jge jns inc adc mov imul lods sbb sahf push pop mov test xchg std mov shll (bad) fimul movsl fs pop clc mov lcall stc adc test mov mov ja xchg mov mov imul test jle mov in xchg add (bad) fdivr jnp ja js mov xlat xor in incb mov les cli and je (bad) jnp (bad) push xchg push cmp je jno ja hlt push pop mov jge push clc push xchg inc lret pop inc idivl mov mov sbb dec repnz adc xchg push lahf jnp aam sub dec test movsb repz das mov in add xor jo scas ja pop dec jne and aad jnp,pt loop push aad lret sbb (bad) sahf rcrl js lcall pop ds mov js push xor mov fnsave out jge cli xor mov in paddw sbb lock or out aad imul lcall lods enter ror pop xor pop into xchg rclb inc lret addb push adc or sahf leave push pop (bad) into dec lcall pop push fwait mov imul lcall in sbb icebp push xchg push fldz mov lods adc test aam dec lcall stos xchg roll sbb fnstenv or xor (bad) in mov fimull sahf repnz arpl mov cmpsb push fidiv pop adc fwait adc adc inc iret or mov and mov mov rcr mov lods in fiaddl xchg mov lcall clc je add cmp cmp inc jl mul incl inc (bad) mov lea inc add dec adc or (bad) adc fimul mov pop jne fcom pusha adc frstor sahf aaa outsl rcr jge inc call lds (bad) leave loope clc loop mov and or fild add loop add xchg cli cwtl imul into push dec inc lea mov repnz popf lcall aaa popa es (bad) ja into call push into or mov pop mov (bad) pop pop icebp fs xchg ja adc xchg jne jge ljmp adc and mov mov lcall sbb adc and mov add and jns ss lods sub mov adc call jnp or push (bad) jle mov stos mov cld aaa stos inc movsb ja shrl movsl push in insl pop lea add mov js jl into pop pop enter push movsb mov sbb fs pushf sub cwtl inc (bad) lds cwtl push jle out movsb out adc (bad) scas stc (bad) xor addr16 mov mov push dec inc jle ficoml mov (bad) sbb push ficomp cmp nop and jo inc cmp cmp std clc sbb push scas repnz rcrb mov out add sub or repz data16 fucomp movsl scas rolb sahf shrb mov fsubl aad mov loope into and ja adc stos clc std jl jp lcall pop or (bad) (bad) cmp xchg inc movl xor push out pop xchg test jp inc inc or xchg test aaa sarl in out negb jne sar add or in hlt lods (bad) and jne (bad) cwtl jae jl or pop les aas sub sbb cwtl xchg push lods test ja stc sub xchg rep push aas xor dec xchg imul in push inc mov add xchg sbb jne rcl dec mov enter gs mov mov mov lcall fs pop pushf je dec adc dec loop add hlt cld mov out in enter lods xchg clc and call sbb aam subb push jbe (bad) cwtl iret push ja sub mov aaa push data16 fimul lcall add sbb cli dec xor dec negb test fldenv xor xor ds jp nop cli ja mov scas sbb jp outsb dec adc push cs dec out jge fimul dec jnp mov lea testb out sbb movsb rclb cmp pop and frstor pusha xchg std dec push adc fidivrl pop sahf inc jne scas sub jae leave lea imul daa jbe imul dec lret add lcall (bad) scas add enter fisttpl mov lcall icebp jge cwtl cmp ja xchg nop (bad) jne (bad) jle popa out mov (bad) fldcw adc push test ljmp adc clc mov popa stos pushf or xchg xchg mov push ret sbb pop gs std sbb or leave mov aad mov xchg cmp jne lods mov push pop lea lds and sbb cwtl test sahf in add xchg aas out mov fidivrl int3 mov ret fisttpl jecxz push and rol test mov in pusha cmp rcll sbb ret imul push jb mov fimul lret inc xchg aad in ds movsl outsb adc fwait cmp fidivl enter xchg pusha daa ret sub xchg mov clc les aam cs add scas push add decl out dec mov or push aaa add mov jbe (bad) scas hlt outsb adc adc hlt ja call cs jbe pushl test xlat sbb pop push mov push frstor adc pop enter pushl sbb xchg aaa les ja mov mov arpl lods out jo into adc aad std push in mov cmpsb out in das pop mov out ja test adc cmc lea sbbb lsl cmpsb xor fdivrl cmpsb inc xchg jge jp adc lahf les inc mov push mov aaa enter add cltd not in inc ret mov dec xor jns add pop adc aaa jne hlt and mov loopne into xchg add sub out cld or or fcmove jb mov cmpb adc lea push or subl ds or xchg lcall dec xchg fisubrl movsb sbb out bound rcll xchg movsb pop es bound cmc jp xor cld les jo (bad) (bad) rcl daa rclb stos or test jb out lods pop lcall ja jb push xor adc and nop pop mov (bad) jb sbb inc out adc jle or clc imul outsb pop ds loopne add or adc cmp outsb testl xlat dec pop mov scas adc loop in xchg cld js push enter xchg sbb out mov (bad) loop hlt fdivl dec inc mov mov pop push fistpl xchg or inc std sahf or hlt shrl or mov ret inc xchg xor jnp mov (bad) ficoml xor fstl push dec sbb jb mov fisubrl pop scas mov mov shl jns sbb rolb cmp mov push dec dec lea push sbb fstl (bad) xchg jns shrb out or xchg mov pop bnd push mov jge test add lret andl push lock bound rclb cmc jns pop jle fistp movsb jp mov (bad) fimull xchg pop jl popf (bad) push cmp push das in jnp xorb in push and fstl out mov sub (bad) mov push mov nop fbld scas (bad) test mov lcall adc adc pop xchg es dec inc sbb (bad) or cmpsb push fdivrs and mov std ds or loope test dec adc fwait in sbb xchg iret xchg mov loop xchg adc movsb mov into fstps fcomp pusha mov or decb (bad) fisub xchg loope cmc decb cld das sbb in jle xor mov in push jg out loop cmpl dec into bound inc (bad) repz or add movsl decl (bad) (bad) xchg or (bad) lock in add xchg aas out jnp inc out (bad) mov mov out xor xchg aam shl push inc inc icebp in or jl insb fs lds rcrb push jg mov js jae ljmp aam push fstpl xchg push or in fdivp or inc push scas sbb fldenv add or cmp or loope aaa and mov inc scas sbb mov int loop xchg adc mov arpl sbb push sub dec ds in scas sub jle sti cli and int3 sbb lcall cmp jle test int push je or push pusha jb jle mov add sahf mov pop (bad) aad sub push lcall xchg in (bad) out cmpsb leave jle mov mov ret cwtl mov adc push (bad) sbb lahf jp and xlat push mov (bad) add jnp pop orl arpl fistpl pop clc cmc test fimull mov and jbe push bound notl pop in (bad) stc mov sbb (bad) clc push adc inc or out in add (bad) or ficomp add lahf iret sub mov inc xacquire rcrl ja push out enter in movsb push xchg xlat pusha jb xor push xchg jge leave mov lret rorl lcall xor lea adcl insl ficomp sbb leave cmp xor js jge div vcomisd dec push mov cli clc repz in mov dec in (bad) push cli je out (bad) push loop sub mov inc ljmp clc scas in aaa mov push fisttpll mov fldt (bad) fcoms mov push push adc push clc push sub ja leave adc mov jp cmp xor dec pop std aas jge xchg cmp orl aaa test enter sbb std inc addr16 sub pop fisttpll push mov sbb ja jns negb add push mov in leave lods jle repz cmp jo sbb jbe mov rorl lock sbb fwait dec dec and (bad) xchg aaa jb dec bound test iret stos (bad) hlt inc sub lahf into (bad) jbe cld push icebp xchg notb xchg insl pop lock add ror andnps bound lea pop jae rclb cmc sub pop jns push pop loopne lock jb xchg sbb cmpsl or hlt jne mov inc ret nop cmpsl push sbb dec or push arpl or dec cmpsl into sbb sub or sbb insl push mov mov mov loopne cld sbb ret ficompl sbb adc sub roll ja call adc push mov sbb jnp movsl (bad) mov sbb ja pop adc adc sub mov out (bad) in or aaa mov loop pop ja aam mov std rcrl movsl xchg push enter or jp rorb dec scas scas xor pop or aad or or ficompl aaa push pop push notb xor clts (bad) mov pop add sbb cmp jbe es in (bad) sub jnp add sub adc mov jb dec or setb jnp mov mov cld add xchg push dec rorl push icebp jnp or sbb adc pop mov pusha or or rcl movsl clc mov fstl sub mov dec or fsubrp rorb (bad) sbb pop inc int mov adc cwtl into icebp jns fistpll push popf sbb aas rol test pop cwtl test iret sub loop or cltd test ja add hlt pop ds adc ret push inc add ret iret adc lret xlat dec arpl mov mov pop lock jge hlt repnz or mov or pop cli jl xchg insl push push xorl ja add (bad) inc ret popa sbb repz decl mov jle call mov outsl outsb mov and pop popf xor das push ret sub icebp jle fwait dec add dec bound sub sub inc scas or mov mov in jecxz adc (bad) gs inc mov xlat (bad) inc sarb adc leave stc rcll inc push loop fidiv addr16 adc cmpsb sub into inc cmpsl sbb loop pop and fstpl adc enter nop icebp push inc scas aaa jo aaa sbb dec jb sbb add test rolb adcl xchg push jns cmp sub in mov pop and add ficomp int3 int out daa sbb xchg rcrl test mov movsb push rol jg xor (bad) sub rcl pushf mov sarb fucomi adc adc sbb fnstsw sub ud2 push adc ja jl gs lcall or cltd inc adc fstpt xchg dec pop lret bound xchg push mov inc inc decb jo sbb mov movsl mov sahf xlat in fidivl pop orl xchg jmp vorpd mov add outsb mov in fdivrs mov ja jecxz roll fcompl (bad) fcomip sub aam xchg push xchg push cmc xchg nop push jb dec adc lret sarl cmpsb fcomi out mov dec dec mov inc sbb cmpsl daa mov js xor lds (bad) add into or adc rorl inc out sar les divb jl bnd fst in cwtl pop clc or lds xchg lods in es rcrb int mov (bad) idiv inc enter ficomp cmp or fmull dec sbb roll lods lcall nop gs push aaa xchg insl mov cmc test fwait loope out mov xchg push or dec ja sbb jle pop cmpsb sbb enter xor in (bad) dec outsb xchg mov dec mov pop aam cwtl out xchg lcall fwait pop lds adc sbb or mov (bad) (bad) push roll pop mov push test inc clc rolb cli sahf fbld sub xchg push scas or cmc jecxz mov dec outsb cmp ficom (bad) sbb add adc fs xchg adc xor inc push pop in push pop push jle dec sub dec test push out xor stc rolb mov inc out repz add and pushf mov aam jno jmp mov jge inc hlt pop jae int out enter jl xchg rolb nop les inc and cmp add repz pushf vmulpd xchg mov faddl stos (bad) arpl aas add aas ror ret pop and jmp xchg loop fwait call jo add aad mov fadds pop (bad) clc xchg adc out inc push adc ja dec in clc xchg xchg das inc (bad) or jmp pop rolb push pusha hlt inc sub fidivr test or fsubr notl cmp sub cmpsl scas popa std jge add lret mov sbb sbb and add jne mov rcrb cld test rolb lods sub pop cmc add sbb lcall ds adc cs sahf mov jmp mov mov or lock adc pop jb jne movsb sarb incb jge (bad) shl aaa jbe fsubs adc dec js inc inc or inc and out xor push and lds push fdivrp aam aad out stos inc adc loop add fstl and lods push loop xor push jae imul sub lahf aam into jne xchg inc cwtl and pop jnp loope out jecxz mov xchg or sub jb das (bad) xor cmp cld xor push ficom loop push mov jno jge pop loope xor xchg pop sbb push mov loop and (bad) mov out mov mov or cmp sbb xor pop dec rcrb bound add stos cld hlt ja,pn jecxz daa pushf (bad) push jae dec add cld or (bad) fwait cmc jns and ja xor fcomps jge or ret sub fadd sbb push popf je lahf xchg test jne dec cmpsb enter aam mov scas daa adc pop dec or int3 adc mov fs or dec or fimull sbb fdivs dec sahf pop mov xor cli ja add adc test (bad) shlb incl pop outsb mov mov pop movsl (bad) xor push (bad) loopne adc js sbb sbb dec mov adc add pop es pop repnz sbb and dec cmp sarl mov imul (bad) rcr gs pushf int jne cmp pop (bad) (bad) push inc jmp mov or jnp push iret in jne push or into xchg jbe ret push imul inc cli out pop mov testl jno and sbb ror add or mov mov addr16 lret cli aam cmp cmp cld pop jbe (bad) in mov xchg (bad) xchg and sbb dec in adc push rcl movsl pushf cmpsl dec inc push leave add mov push xchg fistp mov jns rcrl jle jle es mov mov popf mov adc xchg sbb xor push repnz test push loope bound xchg in push and (bad) xor enter push fst (bad) xchg in dec iret into in sbb lds cli clc ficompl push dec mov push adc sub lods out rcll out cld aaa cmp pop cli pop dec mov push jne xchg mov push or pusha into loop call add mov pop iret cmp adc sbb jle fcmovu adc mov dec leave add mov or aaa icebp ds fsubs cmpsl aaa (bad) jns in jb push jnp movsb fist mov shlw notb out (bad) adc (bad) fwait dec ja xlat xchg aas mov clc mov ja push fbld xor mov pop clc push or sbb in adc aad xchg and rorb iret pushf jns sub addr16 test repnz add jl scas lea mov mov xchg fdivrp lock std clc icebp jecxz mov xor xchg ds sahf daa incb in bound mov jo mov imul out xchg test mov insb mov mov sti (bad) sbb (bad) mov cmpsl ret lds jnp test add cmp ljmp push adc stos xchg test xchg push sbb jne cmp fimul or mov push inc pop mov pusha cltd sbb std scas xchg add add popf fimul pop pop cmpb sbb neg add dec data16 icebp icebp out (bad) clc sbb jo lea cltd fst in in inc push add mov shrl dec adcb dec test cli sbb movsl mov arpl cmp sub push lcall roll or (bad) jb out (bad) sbb push lock cmc in cld push test out test dec add mov mov jp call dec sahf aaa or int3 (bad) aam xchg out (bad) in clc pop pop int3 pop sub mov adc sub and xchg (bad) jo fidivl rcr mov je and test sarl (bad) enter jb xor push adc push testl ds inc (bad) and and inc sbb pop daa mov jl mov sub inc lcall aas dec cli xchg push insb in es adc rcrl rorl fcomip nop scas ss lcall push movsb roll aad mov aas pop (bad) pop rcr daa mov hlt jno jne cmp or mov sbb mov add sbb ds mov (bad) idivb icebp cli les out mov mov dec outsb dec push adc pop mov scas lret cmp out lret loope ljmp pop mov lds inc sbb jbe (bad) cwtl xor sbbb jo enter jge cmp mov sub adc pop xlat shll test std mov sub es scas popa push cwtl xchg pop dec lods roll idivl lea fcoms not dec push jbe (bad) gs lds loop movsb push jns cmpsl aaa lods stc mov xchg dec mov push sahf sar ja mov pop (bad) sbbl sub xchg cwtl imul mov cwtl (bad) popf jno out in ja jge xor push imul das dec pop lea cmpsb test jl push fwait fs mov fstpl hlt test jb std insb (bad) clc xchg call pop lods cli sub fmull (bad) adc rorl cmp daa pop mov or and movsb cmpsb lods faddl arpl adc pop cmp and push popf cmp decb push sbb cmp cld sti movsl xchg (bad) ja adc cmp frstor and fs sbb inc (bad) prefetchwt1 nop std insb cmc jle fxch rcrl inc or ret repnz or and inc mov adc push xor aad shrl test ljmp mov push daa xchg int3 mov enter push sbb jne les pusha or clc lret xor into mov xor mov mov lcall jecxz dec mov movsl mov imul adc push outsl push outsb xor mov push sarb int pop add insl lcall sub jbe dec loop ds mov aad std mov mov clc sbb aaa lcall inc es sbb push xchg ret cmp into jle (bad) fxtract loop push das xor push decb ja adc mov daa les sar clc in lods sbb xchg nop cmpsb jle dec mov adc push ja loop hlt inc mov jns cld and push mov mov mov inc jp mov data16 testb bound inc divl xchg sbb movsl mov mov (bad) xchg je inc add das lock loop stos out (bad) lea jle mov repz cmpsl and (bad) jmp xor jnp and fs sbb fnstcw dec mov daa lret ljmp idivl test icebp sbb jle pusha jb pop xorl ds rorb mov punpckldq (bad) loop jle call cltd and xchg pop rclb insl clc fmull out arpl fnstenv fisttp pop dec dec sar adc add mov mov fidivr ja ret sarl addl dec repz ret mov scas add push mov stc pusha test sub mov push clc ja sub and fadds xor sbb push dec rcr (bad) jmp fnop or sbb mov or and or or dec jbe pop adc pop enter or pop mov int pusha hlt call pop (bad) jp rol sbb push loope pop jo jb cmp orl (bad) jnp cmp and (bad) adc push int mov mov mov dec mov ds dec sub div std lea mov bnd and xor adc cmpsl mov fdivrp sbb push push aam decb add test addr16 daa ret test jbe dec pop aad (bad) cmp mov in cli out jge movsl mov scas mov loop or mul sbb and jno enter xor ja test cmpb bound xchg adc out push lock sbb mov je (bad) fdivs dec adc insb addr16 lds (bad) and cmp repnz push or jge lcall push repnz loopne inc jge jno arpl or (bad) pop pop cld ja push pop xchg pop sbb or pop inc hlt fimul cmpb nop jmp pmullw clc fisttpll add (bad) fsts ds (bad) xor fiadd adc mov mov xchg aam adc push mov pop push aas add fstps jp dec jle mov xor sub add call jle mov fnstcw outsl jl adc or xchg cli loop adc (bad) hlt push mov jnp (bad) sub adc rol repz lock outsb push inc daa sarl xor inc int3 sar pop push cmc xchg (bad) mov sahf sbb fwait pop sub lahf add arpl ja cltd jnp push mov stos pop xor test push dec dec out mov or and inc push push push pop jge in call mov sbb repz arpl stc jecxz mov xor shr jg lea divl push dec pop stos dec gs neg jge mov leave xchg sub lret into das je jmp faddp into sbb jne xchg ljmp and pushf aam mov roll or icebp fidiv adc pop insb into mov xchg push out add sbb adc pop lea mov jge sub rcrl rclb sbb sub adcl xacquire ja mov dec subl xor lcall mov sbb and inc lea jle mov pop outsl push mov decb xor inc pop hlt stc push sub jle into rorb cmpsb jp push fisttpll icebp add js (bad) std lea mov adc mov in out mov xchg in jle adc std jl inc mov es pop add leave dec xchg pop push (bad) cs pusha fsubl jp cmp inc outsb insl out sub in dec aam movsl jmp xchg fisubl outsb push (bad) je icebp fucomip lods push fcomp (bad) int popf push out xlat out cmpsl add mov xchg fadds roll dec adc push pop add mov out jne scas inc in mov lock pop mov push lcall sbb jno lea dec inc sub pop les mov (bad) sub in adc sbb bound sbb into fdivrp add testl sbb dec pop cmpsl repnz xor pop xlat lret cmc mov ret adc mov stos pushf ljmp add inc or loop sbb (bad) ss test xor or addr16 mov inc int3 data16 sbb mov scas inc cmp lods jle push xlat dec jnp and sahf mov dec xchg scas test xor (bad) mov loope into sub inc into bound fadd xchg out jge aad (bad) (bad) in mov jo adc daa mov adc repnz ljmp mov xchg and ja jle bound jnp push fiaddl mov pop in test dec popa cmpsb push sti push fstp ss int or popf or xchg sbb dec jb adc insl ror std in aam adc les and in dec (bad) add mov lods push cmp fidivl sbb sub push pop repnz pop or (bad) fnsave fildl addr16 jmp push sub jns scas cmpsl jecxz insb psrad mov sbb pop sbb outsl cld stos xor push cltd jecxz sbb fnstenv jmp cmp mul inc jl push fwait push mov cmpsb pop (bad) pop mov dec sar js das fldl into add ja negb sbb pop ljmp inc jmp or lods addr16 mov cmp clc xor sarl insl out andl adc addb mov pop mov ds cld dec mov fist (bad) out stos addr16 push int3 mov mov insl mov pop xchg in xchg cmpsl lea mov inc daa je cltd aad je loopne push ffree push pop incb (bad) into (bad) shlb dec out push out inc xor cmc loop pop test sbb lds nop add mov popf shr push mov push sbb xchg cmp stos movsb xchg scas aaa ficompl scas jp cltd hlt sub (bad) ja push cli pop inc and push sbb jo sbb dec inc mov testb cs std lret scas orl sbb mov and cmp fcompl fwait jno and xchg pop out jbe aaa aam mov ds jbe dec ret loope xchg lods in mov negb mov inc adc (bad) jp (bad) fmul xchg xlat aad fdivrs add push (bad) cmpsb (bad) ljmp std inc imull cs sbb mov lahf dec cs xor (bad) int sub (bad) xor (bad) out loop ljmp push jbe (bad) mov fstpl xor cli int3 aam icebp push add jne push test (bad) nop push out inc fcomip or (bad) loopne lock xchg mov nop jl lea out mov mov std sbb pop sbb sub aas xlat daa test ss or out xchg loop pop (bad) cs icebp xor seta jno dec adc gs sbb xchg pushf pop jle icebp push push pop sbb lock ljmp push pop test ss push in cwtl idivb in stc in mov adc aaa xchg out idiv cmp xlat pop std xchg fiadd lret mov adcl and int mov jle fidivr sub mov loopne sbb fist movsb in pop pop inc mov push inc pop mov outsl jecxz scas cmpsb loop xchg xlat (bad) mov ja sbb icebp (bad) enter jne xchg mov dec sub inc inc cwtl sub dec xchg fiaddl or idivl (bad) cli jmp add into std lock mov mov into sub lcall or (bad) sub not dec cmp xor pushf fidivl (bad) stos sub inc sub pop jbe jnp mov in or and sbb xbegin push ret add cmpsl fidivl jle (bad) mov in push mov lahf scas (bad) jmp std cli xchg loopne adc push push inc cmp pop icebp push mov insl fld ss popf and cmpsb sub jl mov ret push lret int3 aas add inc cmpsl popf cld mov in lea sahf jae cmpsl and jnp movsl (bad) jno insb iret dec std xor sbb cmp dec out pop (bad) mov aaa jnp outsb jp ds or (bad) pop aas (bad) jge mov insl out jo cmc or andl jo fimull mov cli push or (bad) jge or xchg or adc dec rcll loopne jmp dec fs sbb out les popf mov and mov and fcomp sahf xchg push int3 push mov out and fnsave ficompl (bad) jge lds outsb aad arpl mov mov (bad) adc aaa repnz rcrl sub xchg add fdivr (bad) pop testl stc sbb pop sbb (bad) and lsl std push mov insl ja xchg lods or addr16 ja loop js push jecxz jne mov (bad) fadds js repnz loopne sbb (bad) daa or pop imul sbb (bad) mov retw mov inc jbe or lds adc xor mov and aam jns flds adc fcompl cmp sti inc xor in repnz jle fcompl addr16 das cmp or ja and push rorb push xchg jge cmp xchg mov fsubrp fucom cwtl or mov rcrb cwtl dec mov imul jp mov fcmovu push add jge sahf cmp fwait cli sub aad and adc pop shrb dec dec mov out ficoml mov mov or enter cmp pop mov jns les fldenv pop inc repnz pop call mov adc push and cwtl dec jne out shrl sbb inc ja test inc dec push and jp std inc (bad) xor push addr16 inc adc and push mov cmp cmp shlb ja pop rorb leave aaa mov mull outsl arpl ja popa out push dec or fsubs mov mov sub xor and dec scas addr16 std pusha push frstor cld or xlat push or gs sbb lahf rclb es cmpsl xchg ret lahf jne aam sahf add shrb rcrl pop sbb cli loopne mov adc mov loop aam into add and adc addr16 mov call daa into iret dec outsb add les xchg push out into mov xchg in rorl out mov xchg jne cltd cmp aad fnstsw sbb fnstsw sub jnp fidiv cmc pop mov xor fimul rcr dec js out pop in sbb inc lea inc push dec sub test gs mov lret jns mov jae sbb dec xor adc addr16 repz mov movsl inc mov iret cmc ljmp outsb js sub rcl mov test pop xchg mov mov movsl push notb mov fisttp cld inc je inc or std ja std test sub xchg inc sbb fdivl or lahf or js mov or aas cmp add mov pushf (bad) cwtl dec cmp ret data16 leave cwtl xor (bad) js mov jnp cmc push (bad) cs (bad) movsl sti sub inc sti jmp add int and fisubr push cli cmp adc rcrl push ljmp ret jbe jge mov sbb sbb mov es mov insl lods mov mov pushf in rdmsr cmp cli shlb mov sbb mov xchg and fstp addl shl mov test ret clc lock jb aad aad (bad) aaa cmpsb in ja,pt mov hlt cmp mov test sub in shrb lea (bad) mov mov fdivp adc xor ds pop aad dec jp sub cs ret aad push cs stc rcll jg push jecxz pop pusha jne,pn scas decb push push push loope repz pusha mov out test fnstsw xchg xchg daa inc add repz into cmp inc jle fsts jno clc cmpsb in clc xchg clc das mov mov les sub ret cmpsb (bad) mov (bad) sbb push sbb (bad) push xchg jnp ja clc xchg mov outsl mov fwait addl test mov mov jno mov arpl fsub fiadd out ja push enter scas push stos sbb dec lahf sarb cld out sbb aad cmpxchg and xor hlt sahf pop js fnstsw arpl in fisttp pop xchg (bad) mov pop notb or cmpsl adc cld xchg xchg cmpsl jg mov imul das (bad) pushf and xchg ja fidivr ret dec imul int3 pop adc ret push clc sub mov sub cmpsb cmpl mov in stos cmc mov fs sub sub cwtl andb popa add dec jmp leave xchg inc (bad) out aaa push xchg lcall pop sub dec ficom jge,pt mov out mov jno les nop mov or jns adc push xlat daa call stc mov (bad) cmpsb or jnp ljmp pop insl inc mov repz xor cmp out bound sbb dec pop sbb mov pop test dec jmp jae (bad) hlt cmp adc jge mov das scas xchg inc pop movsl fcomi rep aas neg push mov and adc jae (bad) aaa inc aaa pop jl (bad) (bad) or mov jp lret and mov mov mov scas xchg add repz jle pop (bad) fimull je cmp mov adc fbld test and cli jge iret dec push nop loop inc dec or fstpt aaa mov out aaa or add and scas cltd aad js rol lds cmp or (bad) int or mov inc leave lcall test or dec sbb cmp movsb pop insl jb cmp popf out (bad) or cld out ljmp lea jl dec mov outsb das push leave push dec je pop mov jae mov or adc fisttp adc cmp and int (bad) aam push loop repnz add adc inc jnp pushf pop clc jnp stos jp xchg xchg sbb xchg xor sti inc jg adc xor push aad dec mov cmp pop mov mov loope movsb popa cltd gs mov bound jg nop ja bound aaa int3 jnp inc push ret ja fnstenv or adc into call sub xor xlat xor loope pop cmp inc lcall inc ja mov cmp pop sub in xchg xor push (bad) sbb pop pushf cld lods jno in lods ja adc loopne lcall inc jnp pushf fistpll iret add aaa or ds pop cmpsl mov psubd mov std cmpl imul jno sbb clc ja std pushf into mov xchg add aaa adc mov jle int dec (bad) sahf mov xorl rorb popf mov push cld mov sub aam rcl sti sahf or jle mov (bad) into mov push mov inc fcomip mov mov lods jp xchg adc clc or inc fsin loope in cmp data16 (bad) mov not loopne mov mov and out mov das sbb imul xor push jnp dec push out mov je movsb dec cmpsl push xchg sahf outsl mov (bad) pushl clc or jae out test jo cmpsb jge mov movsb out push cmp arpl cli mov cmpsl xorl add sub lret (bad) stos sbbl popa clc pusha push les decb outsb push dec xor out fcmovnu (bad) inc rorb (bad) xor jle nop or xor ret xor (bad) icebp lcall mov out sahf (bad) idiv (bad) or jne (bad) adc bound push divl adc dec fwait in xchg js rorb inc cmp stos sahf aam or (bad) lds dec push and inc sarb inc sub add xlat out (bad) jge mov jl out (bad) cs sub xchg or test shrl (bad) and lds insb icebp push mov or or pushf adc ds push inc fistpl push lods sar ljmp inc daa mov rcll jge aad inc shlb pusha out jge mov into dec push ljmp (bad) lock fidivr repz cmp lods sbb dec js enter test (bad) add les mov (bad) loope (bad) jl xchg (bad) dec jl pop lret stos push (bad) mov stos jp adcl jp mov dec outsb insb ljmp pop repz jne xor inc xchg enter lea dec adc jge jb mov cwtl and dec add sbb mov in xchg (bad) push add pop jecxz (bad) fcompl jmp adc imul ja push or ljmp push jge dec arpl in sti lock or lcall adc aaa adc test notl mov enter xchg cwtl xor mov or repnz fiaddl adc ja lea dec out push mov mov stc inc mov les and jae inc cmp fstl jbe dec data16 and aad lea lcall mov hlt jnp test cmc xor sub inc in cld add (bad) mov ss out ja (bad) push dec sarl outsl push (bad) cmpsl sbb idivb aaa jnp push pop push ja dec daa ret lea daa mov jl mov inc lea in test and movsl test std pop ja push ja fwait int add mov ds jne mov cmc inc push test sub hlt sbb cli es call pop mov push lret xor (bad) leave sub data16 sub fmulp (bad) aaa cmp aam mov cmp es sub push sbb shlb outsl rol imul test cmc push (bad) cwtl cmc lods lcall divb and rol loope scas fdivrp cmc ja test ret icebp scas jb xlat pusha scas mov cmc in pop cwtl ds les jne mov cmp dec lcall mov or xchg or dec add out cmp mov aam xor cwtl das into xor in pop ss (bad) repnz adc aam stos jecxz mov hlt out stc shlb aad jne jecxz push movsb enter xchg movsb dec mov mov test arpl std (bad) incb fstpl jp test je push cmp mov pop fld xlat pop stc outsl add movsb fwait lock adc sub sub mov sub fidivr dec mov mov sbb dec or cli scas or insb xor outsl jecxz xchg popf jle xchg sahf sbb scas and clc je cmpl add cmp rcrl (bad) sti out push stos ds repnz sub or sub sbb add cmp push lret jmp cld outsb add sbb (bad) in mov pop jns mov pop popa in lea or or ret xor in xchg mov enterw stos jne pop xchg jle sahf xor adc sub push (bad) test enter inc push lret lret pusha in cmp js jle ret jle (bad) dec ja mov mov out outsb adc add loope (bad) iret imul inc adc cli (bad) in sahf xor imul pop sbb fadd mov pushf hlt sti lods out jg or (bad) xor cmpsl inc stos jmp mov insl xchg xadd jnp dec and je jecxz xchg ret ds adc jae lea pushf or lods ficoml lret fs loop in fnop mov leave aaa (bad) repnz adc aad aam mov sbb idivb mov jb cwtl add adc (bad) mov (bad) mov (bad) xorl mov mov nop cmp scas aad test jb adc dec cmp cmovl je std cmpsl repnz sbb jae dec pop aaa cld cli ja loope xlat in mov hlt iret dec cli rcl dec mov mov xchg cld inc (bad) (bad) xchg sub dec repnz in mov jbe mov add inc jne push dec enter pop or xor lea enter mov push add aad jecxz cmpsl sub loopne fyl2xp1 shlb pop icebp ja rcrl xlat in inc leave push jbe ds pop in (bad) jne aas insb cmp sub push sbb push sub int3 sbb aas in adc push stc ds or or sbb loopne lret clc test push inc out sbb jnp sbb (bad) movsl cli cmpl notl mov leave std (bad) adc mov in lret sbb and sahf adc push xor jns pop dec or lods in call dec push mov fisttpl sbb push xchg into lcall adc mov lret (bad) fisttpl out dec pop cmpsl push sahf inc sub (bad) jo rcrb adc add jle jmp adc dec add mov out into lea pusha sbb std addr16 in lea mov push scas mov inc rclb fisub xchg out inc int3 fmul xor sahf push repnz jnp mov aaa cmpsl pop adc cwtl mov stc adc imul test dec les (bad) fdivrs (bad) (bad) jle (bad) addr16 xchg mov or pop add mov decl (bad) xchg ds std mov insl rcrb aaa pop lods xorl push ja or pop lret ja fcompl enter imul and insb jp lea cli dec pop mov imul fs xchg sub pop pushf insl cmc ljmp jecxz lea add dec ss and lret jle jmp jge in aad test out aas loop les aam cmpb imul xor test out mov in cmp mov pop and sub pop ljmp fisttpl les test adc mov sbb and (bad) jne mov (bad) dec add sti scas xchg and xor aas cmp jmp leave dec or push add pop (bad) mov rclb fsubrp movsl rep mov js cld fistp rorb fistpl fstpt cmp cmpsl dec cli loop cmp xchg cli xlat xor push pop fbld aam addl push iret pop stos dec pop in and popf jg aam (bad) shlb in shr dec inc adc push (bad) cmpsl jne clc popf out test lcall stos (bad) mov and sbb sbb cmp sbb xchg pop fnstsw adc insl fstps mov shll shrb movb xor dec enter adc sbb adc jbe addr16 call test enter loop insl arpl ret pushf mov imul and push les aam test cmp jne sbb dec mov jge les out in xchg mov cld aam rcr scas cmpsb mov jnp adc xor jge cld pop xorb inc mov sbb push xor cmp stc stos sahf inc sub mov cli pop adc or das cmp jge loope or fnstcw xor pop inc daa jp hlt xchg dec xor aas fisubrl xchg or rclb or fldenv (bad) mov scas jp sub push cli cli repnz cltd xchg mov cmp pop (bad) cmp movaps dec dec push and push int pop les mov (bad) dec icebp nop or cmp pop movsl imul (bad) jmp pop pop push pushf xchg xchg test jno aas mov stc fsts mov out les xchg nopl cmpsl cmp int3 adc xchg (bad) hlt jnp jo out adc pop (bad) mov sahf aaa add ret mov mov xor ss (bad) mov sarb lcall call adc push push notl cwtl stc das xchg mov (bad) cld xchg cmp loopne in adc addr16 adc aaa ja xchg jnp repnz repz je pop mov fnstcw push rcll add fwait dec mov adc add mov jnp daa sbb stos inc jnp mov jge xor cmp call (bad) not or mov mov or rcrl push xchg xchg arpl adc jno in sar sbb mul daa insl les lods mov mov dec outsl in pop (bad) mov jne rol fimul aad cmp lcall fwait int mov ror pop xchg in sub (bad) and or pop rcl negl test hlt and inc lock or lds sub add divl pop sub pop lock ds xchg cmp dec test paddb jp mov or sub mov imul enter movsl fwait mov ljmp dec xor jle mov or fnstsw movsl mov cwtl clc ja jo dec (bad) hlt push sahf out sbb add or pop jns jne xchg mov mov and inc pop rclb es stos sbb cmp add mov mov icebp adc push mov xchg mov (bad) adc enter xchg inc dec insb (bad) imull loop dec mov cld pop sbb out cmp iret imul mov fildl inc jle lds imul cmp push testl je test ret inc pop lock mov inc or fldl adc mov pop pop loop inc adc test ja iret mov inc add mov jae pop xor daa xchg or test jp (bad) popa xor mov mov ss sahf call sbb and aaa mov mov jp repz mov fld jne push push dec sbb jge mov (bad) pop lcall dec fcmovnu mov ja xor cmp inc enter or cli ja cmp call cmp mov mov push (bad) out out addr16 stos ja inc or cmpsl xchg ja lret std in push out bound xorb pop pop mov pop cmc inc xor add lock clc cmp mov mull inc ret out xchg push les jp div dec jno jns or xlat sahf test adc dec xchg mov inc (bad) jbe mov jns cmp jmp out or in stos sbb imul jmp cwtl xor adc or adcb call aas (bad) ja sbb mulb scas aas dec insb inc lcall into hlt sub jp pushf in dec ds not js (bad) mov jg sub call pusha fidivr push mov push pop or and and lcall rclb pop add outsb lea adc lds stc jmp adc inc mov mov stc xor fldenv jnp mov adc or sub mov sarl (bad) xchg push (bad) sarl (bad) fldcw adc into pop adc stos out xorl ja cmc sub mov insl inc lea imul push mov cmp jnp hlt (bad) push ja test pop (bad) rcrl mov jno test roll adcl fstpt ds dec inc not sti das xor or adc aaa xlat daa adc sub arpl (bad) xchg int push pop (bad) or ja test loop jno stos rcll lret int3 out imul outsl xchg mov (bad) xlat or or mov xchg xor mov mov pop in mov call jnp rclb (bad) inc bound les add lahf xchg mov addr16 or stc clc jg in ficoml repz std mov cmpsl mov scas and in fisubrl addr16 push pop clc movsl inc (bad) ljmp cld push loop popf mov jae rcl outsl dec and cltd aam push adc mov pop (bad) leave mov std in les addr16 les cmp enter mov sub ds mov loopne fcom lods cld loope insb in fs aas lods mov shlb push lods add popf lcall pop shll addr16 lcall scas sbb sub xchg push cmp jne enter dec jbe cmp sbb int3 into jle jmp iret icebp mov sbb divl lds rcrl inc lods jnp (bad) out (bad) (bad) fstpl outsb gs pop pushf add (bad) stc mov int sub add lock add push es sbb add push dec ds sbb jle loop stc les mov cmp int3 rolb cmp fnstsw and lea repnz fwait je (bad) outsl rcll xchg add rclb ja adc fimull adc mov setle lods int mov loop push adc incl adc orl or (bad) cmp xor mov cmp cld js cmpsl or jno or push fnsave fs out (bad) dec (bad) stos in pop out xchg mov pop sbb (bad) ja lret and push xchg std mov in ds push loopne enter jne int mov sub in pop jno out jne xchg lods sbb aas mov push lock dec add or stc (bad) (bad) imull cli (bad) mul jne lahf or imul (bad) (bad) lods cld std xchg jne cmp into xor xor pushf dec mov dec in jb jnp ja mov stc mov ja mov scas and mov cmp sti adc jp mov clc xchg and adc pushf enter (bad) idivl cwtl sti in or leave stc sub fiadd roll out or push gs ret mov jb jmp inc movsb pop lcall daa jne push pop (bad) pop push or xchg popa mov sub pop fcompl xchg lcall fcmovnb shrb repnz ret (bad) cld and jno ljmp jmp adc data16 cli stos lea mov lea pop stc leave push pusha mov xchg popf fidivr cmp pop insb (bad) lret std lods adc dec xlat fidivrl ficoml sbb mov mov gs xchg data16 mov add stos pop mov xchg cld dec push in and pop cltd stos jge in mov lret cld cmpsb lea cmc jle and xchg sub (bad) cld sbbl jmp lock stos mov (bad) mov mov decb iret xor test pop jno mov or sbb out or ljmp mov xchg jbe mov clc movsl xor pop sub popa mov into sub mov jnp or add das movsb out ds (bad) cmp mov add jg jb lock sti out and into inc aam repz jp aam enter lea mov xchg add mov icebp ds jl cli clc mov out std (bad) ja add push scas push inc cmp nop subps scas adc data16 into sbb (bad) out xchg sbb sbb imul (bad) pop cmpsl xor push outsb fisubr and test mov push add push out pop loop add movsl dec pop (bad) or ret popf sti repnz push dec pop cmp dec out add add dec or xchg or fild clc test and dec push ja test addr16 dec cld outsb xchg pushl jmp enter negb cmpsb (bad) stos (bad) in sbb out inc fnop sub inc pop add adc out or push das inc insl (bad) insb loop xor xlat ja pop or add or rolb out sbb push mov sbb xchg sub sbb mov int3 lcall lods in addr16 xchg fcmovu sbb fcompl adc out loopne cmp lcall enter mov xchg mov or add out jmp pop std pop fidiv shr fstps xchg push out or inc adc (bad) jo inc arpl pop lcall mov sub stos push add test cmpsb mov out jg sbbl add push aaa ss or mov (bad) out (bad) push into mov ficom fwait fs daa xor add push popa adcl in jbe ficoml jmp out fdivr mov sub push xchg fist bound add pop or xchg push repnz sti push popf bound cltd xchg imul xor fs jae,pt push aaa inc cmp mov pushf int fs lahf icebp push xlat cmp aas (bad) leave cmpsl inc pop out and cmpsb push jmp jge das fiadd pop hlt pop imul gs push or cmp mov jae mov push aaa sub dec int mov push cmp sbb cmp push bound pop pop int3 sub adc sbb loopne mov loop fist xchg cwtl fsubl push (bad) dec mov mov pushf lods pop shl out in sbb jbe sub push jle lods push test pop cwtl loope js popa call jg pop push daa lret adc pushf outsl push lods incb js es lods xchg dec dec ss cmp lret jbe cmp add xchg cmp fidivr fidivl jbe adcb jne minps (bad) xchg mov aaa das lcall adc mov xchg jb sbb mov out or mov fidivr icebp inc into lds cmp addr16 scas (bad) adc cmc cmp adc loope std test ret xor arpl insl push sbb out (bad) xchg loop add adcb mull (bad) ja (bad) push add scas xor es sbb sarb (bad) ja,pn nop jmp cmp mov push out out xor jl inc fsub dec xor mov push mov leave pop fdivrp gs lret inc into pop ss sub xor leave js jne ljmp adc push (bad) push ret iret inc cs test adc gs push stos lcall sub dec push and (bad) cmpsb outsl dec push fisubr mov mov mov sbb fwait mov mov mov mov lock and sub and inc hlt adc pop loopne xchg inc (bad) not lret dec jle loopne mov rcrl testl pop fsubrl out or xor test into fildll rclb push (bad) jp stc pushw push cmp (bad) aam pop mov xor push sbb ret rcr nop cltd ret out xchg and adc ja fs js mov push sub jle mov (bad) (bad) jnp lcall aam mov xchg and in xor push aas sub add add arpl jb xor imul dec mov dec mov stos cli mov sbb aaa add jnp push std add pop hlt xor push aas xor xchg sbb in jmp fisubrl mov pop mov (bad) sub mov xchg cld push or ds push into cmp jge cmp mov sbb jle sub push or xchg outsl mov movsb in imul cli or mov xor jnp ja frstor ja ja test movsb repnz push dec test inc stc sti xchg loop lahf int roll mov ljmp mov lcall js pop jne arpl push cltd out mov insl mov int ljmp xchg jne aam inc rorb mov add inc stos push xchg movsl push mov sarb js inc add outsl mov mov mov mov (bad) fisttpll (bad) aad clc xor push ss gs (bad) adc test (bad) sti mov sbb (bad) mov fnstsw push adc std inc sarl cwtl cli call dec mov mov sbb arpl pushf jbe inc xchg icebp repnz sbb shl repnz push jnp xchg pop (bad) shrb or daa decb jns das std fstp movsb jbe std cmp mov sahf aam or aas testb cmpsb decb fimul enter mov loopne arpl jbe icebp rcl clc repnz jge push int3 sar adcl mov popf or jnp stos jge and mov out jle inc mov jmpw cmc jle jl sub and mov cmc sbb stos inc (bad) aas cmp inc cltd loop jge push mov xchg loopne add sbb xchg mov sub (bad) std into xor ret adc stos or ja adc jne sarl sbb pop mov mov mov adc cwtl sub jge mov sub lock or mov sbb ja pop (bad) inc test and mov or push ja dec rcl lea mov push cld xor add xor or (bad) fcoms or loop iret xchg mov in adc loope add or shl or xchg push sbb loopne and and lds push sub push mov and js mov aaa dec imul (bad) mov les push arpl xor jge out fdivp jnp and lret leave mov inc test pop xor loop call add jge or sahf scas xlat sbbl push cmpsl sahf xchg push push call fist aaa xor in lret adc mov cli (bad) ja mov into std mov lret jp les mov push dec cmpb lds aaa adc nop pop pop lods movsl mov jmp jecxz js stc or cmpsl push xchg fimul dec (bad) cs add test cld mov out inc and push bound addr16 jecxz aaa sbb mov imul xchg pop mov sbb imul fwait xchg push int3 jge inc ljmp not ja mov cmp adc daa sbb xlat inc and rcrl ja ljmp (bad) lret movaps xor mov mov lahf movsb lret into xchg mov (bad) sbb ja pop (bad) sbb out push mov lds mov aaa fcmovnbe inc adc (bad) xor adcb les adc and jle ret jmp inc pop std ret bnd and adc fimul jge xchg ja dec sbb mov out sbb jp rolb jbe movsl sbb lds cmp (bad) push cmpsl into outsb adc dec pop mov jno (bad) jbe clc jge or pop inc xor push movsb fdivr add insl push sub clc mov push pop fwait divb ret mov push bound mov fcmovnb rcl cmp jg jge jge or adc jmp mov out mov xorb fs inc lcall pop insl mov cmpsl gs push push sti out dec push push test fcomps mov ja cwtl loope add lods lds jmp in push mov in cmc lret and out jb repz adc lcall jecxz cmpsl outsl pop fidivl inc (bad) std out or (bad) ss andl popa dec pop dec pop dec jle stos jge stc aas hlt or (bad) les testb mov push les adc daa jecxz pop (bad) xchg xlat fcmovb clc mov cmpsl xchg xchg push negl (bad) mov xchg jmp das sbb ja dec arpl out lret jne imul adc xchg mov sub or xchg daa push rcrl sbb push cmp aaa mov lret in jb jno add ret jbe cwtl sahf jge mov shrl les popf sbb mov (bad) lock cmp cmp (bad) dec addr16 das cld push mov mov xchg shrb es addl in push pop cmp cld adc sti push les sub es or push mov jnp add push into sbb sub sub push in jne pop lret rcll jp decl push cmp cmc mov sub hlt repnz cli inc fstp push iret mov sbb add mov fdivp movsb add dec cmp movsl (bad) xchg int3 leave in sub sbb xor rorb push icebp dec loop aad inc pushf or ss sahf pop pusha fnop movsl cwtl xchg in cmc and dec in inc push (bad) cmpsl xchg in or inc imul inc adc subl repnz in sahf xchg xchg cmp ror insl xchg lock leave xchg ja dec or lock in int adc icebp cmp aam lret sbb mov sarl insb std jbe mov lds jns scas inc outsb call mov inc and ja inc push push inc out aad cmc mov or cwtl out outsb icebp mov bound dec fnstcw xchg mov test jno jecxz aaa notl mov xor das and ret cmp out push repnz and cli es sub pop push (bad) mov jne test push pop in or movsl and (bad) into jle xchg (bad) sub jbe pop push adc les sbb mov inc cli je test mov iret sub inc inc adcl pop mov aaa mov jp push hlt cmp clc roll dec cltd pop bound int and mov fcmovbe pop lea or inc dec insl std dec or mov fistl jns lods mov add int3 push cmpsb scas les pop xor loope xchg add push popa or inc sbb std jge stc (bad) mov push jnp pop pushf div test jbe jnp jns xchg test icebp dec sbb ja lods adc mov loop lods fsubs mov mov inc jno cld movsl adc lret sbb dec es jnp clc stc loopne or imulb mov enter fwait inc mov test xchg out ja dec in and mov mov lock (bad) push int3 cmp push inc xchg fdivrl dec and and sahf push jg adc fimul jl data16 mov and idivb adc mov clc (bad) divb (bad) sbb sbb lahf jg mov mov lcall es (bad) pop movsb mov adc dec adc cli mov pusha dec xchg add dec out xor sub add pop mov and pop mov xchg inc outsl inc push test je mov aam jnp rcrl dec fnstenv fstps mov push call jl push out jnp jge push int mov xlat (bad) sub nop cmp sub jge jle mov fimull mov int3 (bad) adc (bad) inc rorb cmp xchg push fisubr mov or out loopne lret js mov sti (bad) sub or mov xchg push imul add imul or cmp inc mov sarl aaa icebp xchg pop inc outsl cmpsb xor xchg jnp pop inc cs sbb (bad) sub ret fnstsw fwait cwtl movsl stos mov sbb stos daa popf sub fildl bound push xchg sbb pop jmp pop (bad) jo mov test test pop divb popa lock push xchg adc pop (bad) dec popa pop fcompl out cmpsb pop imul inc pop jne push fnstenv jnp adc outsb mov shl inc xor icebp push sbb imulb movl les test loope add sbb or movsl cmp int3 sub imul testl adc mov add gs into sahf ret arpl xchg mov cld lods rol cmpsl outsb (bad) std jbe iret sbb (bad) idivl in mov (bad) and sbb push mov add into or or addr16 push mov nop inc or (bad) out fdivp mov ret iret cmpl pushfw int3 inc subl fcoml (bad) (bad) ljmp add jge into fdivrp stos cltd ja jp jg push mov jg mov inc cmpsb aaa popa mov push imull push leave adc lret dec jecxz bound pop lret pushf xchg mov jbe lea das push pop and push test xchg sbb push ret jne add aaa xchg outsl (bad) adc movsb ret jne idivl pop pop dec cmp push jne cld adc getsec cmp cmp daa outsl push pop mov sbb sahf cmp inc jle pushf jmp jecxz (bad) sarl lcall pop pushf push stc push xchg idiv push hlt lods fstpl imul addr16 clc mov aas fldenv jmp int3 jne cmp gs mov popf xlat iret mov ja adc adc aas cwtl jne mov out in popa mov std incb cmp std and xchg das push movb and and or mov js inc adc lea fisttpll dec lock fiaddl addr16 pop jno push xchg cli test fmull call popa jne mov xchg (bad) outsl pop mov shr call fisubl xchg ja addr16 inc and pop mov (bad) ja insb cli fisubr sub sub lret mov pop and cmpl cmp add or outsl inc pop add sti mov add fs jb pop enter ja mov jmp aad test push xor push or clc xor movsl mov inc pop xchg jno scas mov test add adc lret arpl adc aad pop push and ja fidiv mov lcall neg jmp pop (bad) (bad) sub dec (bad) xlat or insb xor adc setp fisub clc xchg or cld rcll cmp xor movsl out adc xlat aad and mul leave ja outsb fiadd mov scas mov notl pop sub scas pop mov dec push sbb and mov dec xchg pop sbb movl mov out sahf cld sbb jge sar pop ja dec push cmp cmp nop (bad) sbb jb sbb mov into push mov ja push dec xlat sahf sbb mov aam cwtl cli fimul loop dec (bad) xlat xchg outsb jmp push mov aam leave sub fldcw xlat roll inc dec mov push dec or jmp add mov (bad) out mov cmpsl ja pop cltd mov bound test lret cmp (bad) ja in fdivrs sbb ja outsl sbb jbe jle scas sbb mov decb int3 mov pop sahf in ljmp movb mov lds nop fstl inc sub negl dec and push imulb cs ds fisttpll iret dec inc ret clc cmp inc incb and ljmp scas sbb push movsl push mov cs ss mov push push xchg scas movsb mov add pop and ja push test les sbb adc or xor (bad) hlt sbb dec cmp push pop inc pop adc out out push sbb sbb sbb movsl (bad) or pop mov xchg lds test cmpsl out sbb int out ja ja cli hlt iret dec jns div or add add jbe push push out ret lcall mov sahf jne and add push pop dec mov pop jbe cs add dec aas cld testl adc sbb sbb arpl dec push pop jl pop idivb outsl xchg push mov push call repnz mov outsl mov push mov out call aas or lcall and pop imul int (bad) jne and repz or addr16 jnp xchg sbb lods adc in add ja pop jb add xchg pop inc fnstenv mov std sbb sbb mov or adc fdivr (bad) test xchg xchg xchg repz or push mov (bad) dec shlb daa fwait cld enter lods fs jp cmp or or sti jmp sub es jo enter imul mov popa (bad) jo leave dec jno daa add pop and jae xchg mov popf or push push fbstp adc inc cmpsl pop push (bad) scas loop sub movsl push insl mov sub xchg fcomps dec (bad) cmp out and cwtl adc push sbb pop rcrl jae pop jle enter push add and cmp mov sbb les aam bound adc xlat jno fmull movsb loope cwtl negl push lds sbb decl (bad) jle pop test mov mov xchg int3 fcmovnb lretw or outsl mov inc dec ror push std or (bad) (bad) jno push pop les test mov sbb jg jnp test and mov push push jbe inc xchg aaa xor mov dec daa xor clc hlt jge cmc push ja pop aaa sub xchg (bad) jno pop push xchg lods sti pop and inc fcompl lahf jnp xor int ja xchg sbb fsubp ja out jno into adc or push sub xor mull ret jmp mov iret daa outsl or cmp pop or mov pop inc add lcall loop push ja sub sbb mov jg stos push pop or jge lret cmpsl xchg mov xor push dec out es ja dec dec inc fmuls call sbb cwtl fsubp push lcall cmc stc fnstcw sti xor jg cmpsb pop arpl mov push jnp cmpsl loopne movsb cmpl mov inc jmp out or (bad) pop mov and daa jle ja test push xchg mov jnp mov jg or ljmp arpl lea push inc aam rcrb jg int3 std in cld mov (bad) loop push mov push mov pop jb push scas sbb mov (bad) stos push or xorb (bad) fstps lahf add xchg ficompl clc arpl aad mov push jne mov push mov add fnstenv mov dec mov mov out sbb sbb shrl sbb ret adc xor pop inc dec cli aaa loop cwtl nop xchg add mov (bad) xor jg cmc movsl mov clc dec or stc cli dec adc xlat aad push jp je mov or stos or push push sbb xchg stos push pop fdivp pop fist and fimull popa (bad) aaa cli xchg ret out push clc add out push mov dec or jp outsb cld xchg cwtl pop incb mov cli mov and mov (bad) cli call dec in (bad) lea dec in in neg ja or push xor aaa xor push out or mov out repz xor xchg cli (bad) or je std negb std out push push pop mov jbe (bad) scas js outsb add dec pop loopne sub mov xchg daa inc in ret fimul (bad) jne xlat adcb fisubl clc jb fst mov movsb mov cmpsl std adc insl xchg mov fsubrs push mov add aam leave dec shlb fdivs icebp ds pop out sub stc push push (bad) jns sbb (bad) cli test jle in lret scas xor or iret mov test mov test loope jb mov cli dec xchg clc je cwtl cmp inc mov clc or jb mov jns push pop jmp jecxz sub repnz sbb sbb adc stos test add daa cs nop nop popf and xlat lods xchg jg pop mov dec sub push testb mov push mov push cmp arpl popf or dec (bad) mov aas sahf mov mov jb cmp aad cwtl cmp data16 xor clc adc int3 mov ja sbb pop mov data16 dec stc xchg ja data16 xor xchg and cmpsl mov inc jecxz mov (bad) jg jnp stc pop add dec and xchg mov ljmp call les in jle clc test push ja bound aad int push fucomip mov gs ja inc test (bad) rcll mov ja or xor pop add idivb jmp jns jge iret nop cmp repz or aas push test aaa cmc push repnz jecxz xchg or data16 sbb cmp bswap leave mov or mov push cmpsb test out xchg pusha pop push xor lods addl sahf xchg lret test inc mov xchg stos inc rcl mov jno dec or int lret (bad) mov ret xchg or std mul lods pop insl xchg lcall push jne mov push push add shl inc and cmpsb mov push and xchg rcrb pop sbb (bad) mov pop push ret lcall pop inc sub imul pop push xor inc dec inc sarl pop or cmc mov push arpl (bad) mov add out (bad) sbb inc mov pop cli test add (bad) iret ret mov clc pop xor xchg out out lahf xchg cmp out fdiv or mov xchg out fsubrs leave call and mov mov cmc push repnz fcmovb cmc mov (bad) (bad) dec hlt xchg xchg shlb clc daa jo sbb (bad) shrl lret mov test ret and lcall ret pop cmp or mov dec adc addr16 pminub bound push jb (bad) dec inc les dec hlt pop lods std cmpsb xor test xchg cmp lar jb xor mov jmp (bad) popf or sti into aaa mov icebp ja jl arpl xchg flds dec push (bad) jb fsubrs jne lret gs fdivrs sub jg std lods or sub ja sub sub aaa lods sub or pop arpl iret ret clc outsl xor ret inc rcrb lods notl addr16 or jp ret pop lea lcall mov int3 fisubrl mov pop notl shrd mov bound fiadd pop test adc sbb pop dec mov cmc fdivrp adc xor aad push mov mov dec cld je clc lcall loope sub mov or iret mov les dec sbb ret and add in inc int pop dec inc xchg cld adc mov mov pop dec mov xchg mov push xor sbb jb dec jb push es aam or jecxz mov arpl out mov dec dec jmp out dec adc outsb xchg mov add mov push repz test cmp sub stc ja rorl cld mov adc and ret cld addr16 (bad) cmp xchg arpl jge dec lcall es push xchg roll das cmpsb pop xchg das imul pop scas and sub ret and out mov (bad) cmp or popa pop sub jae xchg cmc aaa or (bad) push and clc shll scas stos clc ficomp cmp mul mov movsl aad stc outsb daa (bad) ja push jnp add mov ja fs stc sar movsl mov sub leave lea fsubrs xchg mov fwait inc daa or aaa mov mov (bad) and pop cmpsl dec push mov inc (bad) adc sub mov (bad) xor outsl scas and sub call inc add ret adc inc dec xchg pop out mov movsl sub test iret mov js cmp mov xchg add pop and jle pop cli addr16 (bad) cmp mov repnz sub mov or add and je clc lcall loope sub in jns push push nop xor inc xchg das inc inc or add clc pop arpl in jmp lds lret mov sahf fisub adc sub cli arpl lea sbb or mov lds and cs aam and mov cmp or push iret mov js add rclb imulb pop ret inc jmp pop mov or repnz xchg jae mov lahf incb mov out or dec xchg inc out inc stos mov dec cmp ja test add daa adc xchg loop lcall xchg dec inc jge inc mov or dec add and into and mul sti add (bad) xchg fiaddl or adc xchg adcl xchg pop leave lods push rorb push in insl (bad) jb fs pop decb cmp iret mov sub xchg push arpl negl fildl add dec mov sub in jnp movsl or adc in mov cli arpl xor or cmp xchg stos (bad) pop fwait push mov sahf lret lahf sahf fs sahf sarb nop scas or (bad) mov notl sbb push fsubl clc daa xchg out fidiv cmpsl fsubrp xchg xchg dec sahf hlt mov push or pop movsb jecxz lcall into pusha lds imul fldt add sahf fimull or movsl mov sbb sub pop and inc out push setge pop fs sbb add ja sbb ss push inc xchg mov loop fdivrp jb rcl sbb fucom sbb into pop mov push lea shrl lret gs jb test rclb fdivs xchg in mov das pop ljmp inc adc add out lea iret dec test ret mov or mov ljmp fisttp (bad) dec jo popa jns push movsl je test subl mov (bad) sub (bad) into repnz sub fimul les dec jp mov mov pop dec je out sbb inc push mov fsubrp fcmovu jnp mov into out jnp mov repnz push aam or jg ret mov inc (bad) push add mov loop jmp dec mov pop or adc add or adc std push lcall js and fildl or ficom addr16 sub jl js lds add sbb jp mov mov aas jmp out bound jnp mov push sub dec add inc test scas inc sbbl sbb cwtl stc lret push aam mov sub adc and stos ja cmp leave out into pop sbb (bad) jnp test into aam xorb sbb mov jge popf adc notb in mov jp xor sti ret cwtl out push lock shll rcl lds lods lock adc push sti sti push cmp cmp lock push (bad) sbb cmp fwait (bad) jle stos add mov fwait xchg push sbb sbb notb sub mov sbb inc jmp add xor xchg cld cmc daa test mov ret sbb aam adc pop test adc daa lock lret push xchg aam pop pop mov sbb push adc enter cli xchg pop test (bad) pop pop inc add cli or (bad) dec mov mov test xor js leave dec pop mov sub lcall sahf mov cmc mov test push out out push mov push lods pop orb cli or (bad) ja push in push push aam ljmp jbe pop arpl hlt dec push add jle inc sbb push sbb les jbe (bad) mov sahf insb push or xchg adc cmp rorl jle mov outsb std jne sub jbe adcl outsl sbb dec lods ficom sarb jb xchg movsl cmp dec xlat (bad) ja inc (bad) lret fimul fs add xor into lcall or out sti fsubrl cmp nop sahf aad adc fmuls aam xchg lcall mov sub xchg (bad) outsl add sbb lea xchg xchg (bad) push xchg mov jl pushf (bad) jne int cwtl sbb mov stos rcrl push jb mov cmp dec fidivl outsb rorl inc test add adcl push mov js lea in out mov mov jne jl xor jl mov or ja mov mov add jnp mov notb mov pop push mov out addr16 int3 fstpl push cmp mov add jmp mov rcrl int3 dec xchg std insl pop out idivb inc mov xor mov (bad) movsl out mov std pop dec push mov xor popf jns xor je sbb cs std push push push sbb sbb mov (bad) xor mov iret ss (bad) (bad) pop adc dec shr sub xor xor hlt sbb mov mov push xor mov hlt clc jle out arpl push sub (bad) pop add in pop je int3 sbb xchg cmp cld pmuludq and nop xor rdmsr lock cld leave mov clc out push test push push sbb out mov xor push jmp adc push mov fidiv into sti inc cmpsb add pop cmpsl stc dec jns xchg ljmp ret jle sbb loope nop daa push mov lds movb scas sub inc das loop or fimul hlt cmc lock outsb dec jne fisttpll ja mov sbb fs cli fdivrp arpl das decb push sbb xor outsl faddl in shl lret repnz or ja lods xor movsb xor adc and push pop xchg rclb das or cld inc aam lcall pop aad xor je cmc and inc xchg mov cwtl inc or shrb xlat sub in lret test fisttpll cld adc jnp xchg int3 (bad) cmp xchg out mov mov movsb sbb fild sbb pop idivb arpl pop push push (bad) push sbb pop and in or pop and fdivl jle push nop divl lret in pop jne,pt (bad) aam or (bad) adc mov pop xchg cli sar mov cmpsl mov dec ljmp movsl (bad) ss add xchg mov add ds loope int dec jb fisub jbe jae pop fnstcw cltd sbb pop dec aad (bad) movsb or jnp and xchg push push jg fwait xchg cs aad outsl mov aad stos test test jno outsb add lods sub (bad) insb (bad) pop pop cmpsl (bad) outsb mov pop add gs mov lcall (bad) pop mov add (bad) dec sbb inc fnsave mov das insl push cmpsb fldcw xor sarl les divb lret outsb mov jnp arpl add ds test xor pushf mov sbb dec fiaddl jle or cs cli mov mov cmpsb popf repnz enter iret clc xor push xchg std test mov ljmp mov mov sub loop insl cltd aas aad inc add xchg daa jecxz lods and int3 sub clc cwtl rolb dec or dec mov jnp jne adc mov sti cwtl mov les fadds in or dec movsb dec and enter sub ret mulb movsl stc mov sahf mul rorb sub lea or arpl imul mov or mov gs out jge clc lea shlb rorb inc fldt daa and hlt aas or lret aaa pop repz add pusha push pop cwtl andb or decb jp xlat test ffree cld mov ja addl pop xchg sbb adcl adc mov loopne mov pop das cwtl lock cltd (bad) lock (bad) xchg mov pop xchg sub ljmp aad sbb mov ror jnp push adc js ficom mov cmpsb mov xchg in sbb pop mov out jg loope mov loop pop lret sbb sbb mov dec and wrmsr (bad) adc repz and fimul or (bad) fisttpll adc in std std dec in repnz push iret loop push out dec aas xor dec scas inc push mov iret pop in outsb push cmc dec jns push sbb push clc jnp notb adc fidiv test aad pusha lea scas sbb sbb dec pop mov push mov leave cwtl jae divb in ret cmp loope movsl ja lea clc pop test ficoml test lea adc cmp add push lea add pushf or mov std cmp cld sbb inc xlat push loop std or in ja lahf lret (bad) sub mov loopne push rorb pop or jo xchg lret jmp xchg jp jl push icebp (bad) pushf aam or jl outsl jb push rcrb or add mov sbb or mov xchg mov shr fwait (bad) nop sbb addr16 mov in test mov fsubrl add shll (bad) push outsb dec adc std test js add loop inc cli ljmp mov mov pop das or (bad) xchg gs dec adc cmp test push stos dec movsb rcl ffree sbb sbb and add into sbb (bad) fldenv lds pop sbb aas push push dec pop and (bad) mov ds js out testb lret or add adc xchg dec mov loop loop push imul (bad) std pop cwtl fsubs xor ljmp pop imul sub fcoms xchg jne loope mov dec pop push add in push mov sbb imulb or ja incb icebp mov dec xchg cmp repnz push sub sbb shl sbb dec add xchg dec push sbb lret push cmp sub add pop jb rorb sbb add arpl into jg mov pop ficomp scas lret sbb fcomp inc sbb into xchg hlt sbb ficom and std push into add sahf or mov lcall ret jno ret fucomi push push jecxz sbb push repnz pop jp stc and inc or push divb cmp lods xchg lret sbb push ret jb fs sub data16 ja sti mov mov call mov mov (bad) add aaa xlat add lcall sahf jp test fnstcw push fs out out xchg les sub sbb out inc inc xor popf repnz clc or add add aaa lds add mov leave sahf fs lock fsubs jns sbb in push sti lock bound and push sbb mov repnz jle cmpsl inc clc sbb and sbb sub fisubl bound call daa mov repnz lret pop xchg ja adc rcrb jge inc mov mov pop out mov add cwtl pop sub mov std rcrl imul mov dec adc sbb stos mov out push xlat dec dec (bad) negb sub pop (bad) fisubr outsl mov dec scas push movsl mov mov daa outsb xchg mov popa cld out jg into lock mov outsl imul and stc xchg jmp fisub xchg xchg xor xor pop (bad) int adc out and (bad) and pop dec xlat pop (bad) xor push jle mov xchg or push test fisubr into inc push fcmovu (bad) pop sub mov in int repnz fdivr inc jmp adc xlat pop outsl add movsb xor adc rcrb into sub out out add push fisttp mov out cmpsb pop mov ja sar (bad) jbe stos sub fcmovu inc fisub lret jecxz xchg cmp or fsin (bad) loope cmp add std sbb testl xlat xor dec daa outsl or js xor outsl inc sub test les roll lret mov mov push das inc daa pop push arpl cwtl mov into adc negb sbb mov and roll xchg movsb xlat mov jnp stos and and push loop adc sub mov jnp cmp hlt subb dec cltd fdivrl cld xchg stc ja (bad) aam fstl cmp fcomps nop scas les das dec pop xor add mov imul pushl push xor dec sbb into lret pop inc fisubrl lret mov test ds loop lods fcmovu cltd stc into lds arpl fldenv pop out dec mov sbb ret adc and push sarl popl loop dec inc mov call ljmp lods mov into jns pop (bad) sub adc jnp ficom pop inc lahf xorb inc dec outsb jns inc pop stc andb push add ss jle jb cmpsl in mov xor sbbb adc and in jecxz pop mov stos aam (bad) mov pop dec std push xchg cmc push dec jbe push movsb xchg decl sub or out (bad) push scas mov fidiv sarb gs je mov lds jg mull pop into xor push ret rcl cmp add or add adc inc xlat pop out push sbb aam push aas adc cld push mov add (bad) jo xchg je dec dec lahf inc cmpsl (bad) xchg mov dec cli rcll mov lock (bad) inc mov sbb sub lcall clc xorl popa jo mov into cmp (bad) fidiv mov ljmp mov cmp insl push fdivrp (bad) ja or cmp fwait push or jbe sub repz adc test mov sbb aas pusha xchg mov jle jne leave adc pop cmp stos mov test dec cmp in aad add mov sbb mov jg in adc bound ljmp ja xlat sub jns dec out aam mov out out iret sbbb jns iret test cli lret cmc sbb jecxz mov stc or scas mov cmp xchg adc (bad) ficoml xchg inc loop and cmp jbe aaa mov push sbb cltd lock loope (bad) (bad) add cld add pop push (bad) mov push push push into aam pop cmc ljmp out adc inc add cmp jmp jp add sbb cmp cmc and lock das and jge mov mov (bad) sarb xor mov faddl or mov sbb and sahf jg sbb xor ja aas in cmp jmp movsb mov mov test (bad) and mov push mov ret jmp or sbb pop xlat ret mov adc lds add ja paddw pop jge into test cli imul xchg nop shl sub out out adc insb in pop inc lods cmp popf js fwait sub push sbb pop push jne loope stos fldl inc iret jno pop je in mov mov jmp mov mov fidivl lret dec mov das xchg cmp (bad) sbb xchg mov idivb sbb sbb ret push cmc shrl outsl mov cmc lahf fcmovu pop and cmp cmp mov hlt push mov aad lahf push loop outsb sbb sub sbb mov xchg scas ffree and jnp mov mov ja mov jnp xchg sbb fcomip shrl jnp and aaa mov adc out lret ljmp fs adc mov mov adc movsb ret mov bound call arpl fcom (bad) xor dec cmp mov daa lock mov into test mul ljmp (bad) arpl inc adc push and cmc and or xor dec out add popf test push sub in and add icebp sbb jge ds bnd ja dec fs fldcw jbe adc push mov sahf nop scas nop lcall add test aaa ja jbe sub lret inc out rol cld clc and repz in daa dec aaa pop iret xor cmp pop notb push in in jbe insl out enter scas xchg ja in or xchg xchg jge aaa pop cld aam and test in xchg push adc fmul (bad) lret test out and fstpt movsb cld rclb (bad) mov push add imul add mov jmp push jmp inc jae add cs mov sbb mov xchg pusha cli lods sub mov ficoml test cld bound mov into or inc in loop dec xchg roll and cmp dec pop clc sbb cmp lea xchg push sbb push sub (bad) dec lcall cld sbb cmp mov ror out sub arpl inc insl mov nop dec fmull icebp not dec (bad) mov sbb js in (bad) xor push mov movsl jne mov sahf ror cmp cmp cli rcr lea mov (bad) icebp js sti cli in sub mov xlat (bad) xor bound adc out idivb and mov negl or mov sub xchg pushf in pop and jae fcom dec iret adc into mov sub cli sub js add cwtl movsb (bad) xchg mov sbb add movsb (bad) data16 loop (bad) into ja push (bad) pushw xor xor lock push push fidivl push out loopne clc lea loope daa sub xchg xor imul lret sahf sbb or repnz pop inc sbb outsb les (bad) adc ss add jns into jne insb mov adc adc dec sbb outsb rcl int mov mov loope mov push in aam arpl fsubs (bad) sub loopne,pt nop daa jb mov jge ljmp fstpl scas sbb push rcr insb out add jne sub ja aam jns push test add sub dec rcr cmp pop xor xchg iret mov mov in fldl push lret fisubr push lcall xchg nop add (bad) mov scas clc add mov test or out and or mov hlt stc xchg jle leave push mov test jle jmp cli daa xor sarl in popa mov jne repnz inc jecxz adc mov loope mov dec or rorl sub lcall jge lods push test in xor (bad) mov xchg mov push inc out xchg in gs pop push inc bound xor sbb cmp dec outsb data16 call (bad) faddl fucomi lods ffree jecxz testb jne push lahf jle xchg repz dec bound cs xchg adc out sub sbb data16 xchg jmp mov lcall push aaa mov adc movsl adc mov iret cld xlat push sbb mov ret in xchg ljmp dec mov mov jno cmpsl pop push sahf mov mov push (bad) popf repz repnz sar pop xchg dec push jecxz xor inc andl outsl sbb dec mov aam gs (bad) popa mov repnz and mov shll lods popa mov clc inc popf clc and jp cmpsl movsl les aas pop (bad) aam pusha fwait out sub push cmc dec pushf fmull inc mov jbe out std imul push dec mov add inc ljmp cmpsl push or dec pop mov dec cli push cltd mov mov xor out add mov ret or fdivr cli mov (bad) jge jne adc mov loop jmp or cld test jmp jl call jg data16 (bad) adc icebp or ficomp xchg add outsl fstl mov lcall cli mov aad mov out dec cltd pop out lcall xor pop or fsubrs (bad) mov cltd dec int3 movsb fdiv std je pushf rolb (bad) hlt sbb or das test insb push dec sub mov add sbb mov xor data16 sbb out (bad) pop push inc xlat enter into dec mov div ja push jne mov xlat scas (bad) mov aad fidivrl dec mov fdivr push scas push in push fwait repnz scas add sub jno or into je (bad) stos cwtl mov sub popf lods add sbb mov shrb jg jecxz aaa and sahf cmpsl sbb mov imul mov ja sub push sub pop ja (bad) in xor xor adc js mov (bad) std cmp jge lds pop jnp test push add inc outsb loop push (bad) sahf lods cli xor out (bad) push jnp adc add or sbb das clc sahf cwtl lret push cmp add inc or ficomp cmpsl xchg sbb sbb pop jne (bad) rep jnp out leave lds mov fimul cmp mov out and xor sbb lods outsl leave inc sbb jnp pop out aam and sbb or add (bad) notb (bad) pop cmc pop (bad) frstor jge xchg std dec dec mov xchg data16 cmp enter push jp inc arpl mov add cmp add popf cli sub and sahf sub cmc (bad) (bad) jnp pop pop mov gs nop or movsl sub in aam lcall add fisub rclb xchg xor fcom adc sub add loopne sub or fxch mov add sbb ljmp dec gs cmp or leave mov bound jno pop jge in lret push aaa clc cld sub jb jb add sub lret push fidiv aaa cld stc mov jo push data16 adc je outsb sti inc (bad) fildll int shl mov mov aam cwtl add xor push in adc push out ja,pt cmp and xor nop fimul aas sbb std adc mov daa ss (bad) jle (bad) cmp adc sbb in add fisttpl int3 je aaa fldt into (bad) lret ja insl outsb pop jnp xor daa sbb rcll movsl lcall cmp lcall sbb or mov aad jp test clc sbb dec fwait adc clc clc fsubl pop push movsl loop cmp adc cmp je lock fmuls cmp fmul scas fcomi divl xchg cmc mov rclb xor push je sbb or out inc sub fidivrl mov jecxz push pop rcll sub sbb inc aam push sbb fiaddl jne mov pop xchg (bad) or mov xchg add movb pop adc cmp mov stos hlt fisubrl dec xchg decl ftst push daa xor inc and pop lods aad outsl xor mov aaa mov cmp sahf ret push inc mov adc cmpsl aam fwait in out adcl push jb jg lods (bad) shrl push enter mov inc add in aam ds negl das mov aad mov outsb adc out ja fcoml jne add dec lcall fstpt rcrl int3 aad lcall adc jge mov pusha fidiv push push mov or jge mov aam adc (bad) or out test mov nop add addr16 hlt pop clc je xchg push sub lock dec cmp jmp or outsb ja ja cld stc lea push xchg mov fcmovu test ja xchg popa mov xor out dec fstpl ds fimul dec jle sub pop inc mov mov fidiv xor dec popa and push nop in test dec les mov sub sbb cmc aad shld add or into xchg mov adc mov cwtl push dec (bad) ja js jne loope cwtl or add cld (bad) jnp popa fisubrl push popa (bad) xchg dec jb lock out push sbb push dec pop sbb pop fiadd add jnp rorl das jge faddp fldenv and mov pushf lods jne pop rolb stos cs mov pop mov jp jp xor repz rorb cmc (bad) push pop enter scas repz rclb daa jae lock dec or push mov pop inc movsb repnz fidiv ja xchg pop mov add mov pop push pop or add daa mov mov fsubl jo jge sub loope icebp ret xor cmp sub test sbb test or sub sbb push adc dec dec (bad) hlt or push mov sbb jbe push (bad) push or divl sbb pop mov data16 pop dec adc stc daa (bad) jp int3 (bad) pop cmp xorb pop in jp hlt adc jge sahf int inc xchg lcallw movsl rcll sbb sub jne popf inc push popa ljmp sbb (bad) clc call cmp sub lds (bad) clc bound ficoml ret sbb cmp (bad) int mov xor dec lret mov stos roll (bad) jge sbb pop gs in mov aad mov add lcall push add jmp dec and sub inc mulb test (bad) xchg sbb sub jle pminsw sub out jb (bad) mov (bad) lock rcl sbb and xchg and push ret cld loop cvtdq2ps (bad) dec data16 les (bad) adc adc lock sbb push push sbb jmp (bad) jb adc inc adc in fidivl sar mov in sub in xor pop mov cli or int sbb lock cmp fs (bad) xchg not fiadd gs outsl xchg push adc (bad) mov negl cmc dec pop pop inc mov (bad) test cmc in push (bad) push lcall pop jnp mov dec inc aam icebp lods sbb mov inc adc pop sahf popf add xor into jbe mov icebp (bad) outsl adc sahf aaa inc lcall sbb js sbbl insb xchg data16 jp stos loop xchg ret (bad) adc and push dec mov pop (bad) sub mov sub out sbb fldcw cmp ja xchg mov mov mov push mov mov imul movsb fstpt add test out jnp xchg mov fwait adc cmp (bad) cmp or in or (bad) jge xorl fistp inc push add pop ficomp jns fwait mov push ret jmp sbb out sahf les js sbb inc pop pop jnp xor stos sbb (bad) stos in push jae decb imul adc pop in rolb sarl fucom fs add dec outsb ja inc adc xor aam adc in daa xchg inc pop into mov fucom repnz out (bad) jno sub inc stc lods test aam sbb aaa stc xor mov jle fnsave mov dec dec mov add ret cmp push jno mov fstps jo iret dec mov or push push adc mov sahf fsubrs pop scas push loop mov jl pop and cmpxchg lock mov or sbb xor out xchg cmp (bad) test (bad) mov sbb stc sbb pop (bad) stc push push cmp push xchg popf jmp out clc ss push pop inc adc inc cli push sbb test aas jne push mov add ljmp fstpl cmp pop test lock (bad) int sti ja sub call out and and and mov iret jp jge in movsb mov add sbb lcall scas (bad) rorl aaa hlt int push push add negl sub xlat into xacquire ficom jb mov clc sub dec xor movsb cld hlt push shlb push inc aas fdivrs sbb mov daa into sti mov and (bad) int xsha256 cmpsb push add ljmp jmp dec mov into cwtl outsl add fdivl aam jecxz add inc loop pop es mov lret in outsb push ljmp clc or sti or jo out std into cmp jp call adc and sbb mov pop scas or clc or push mov dec aaa mov mov aam inc jbe adc sub out adc arpl sbb add inc (bad) mov lret sti inc out and shll es lcall add fmull push inc cld ficompl das pop pop outsb xchg idivb daa (bad) (bad) notl xor loop insl enter lcall pop daa jno negb or arpl cwtl inc xor ja dec rol (bad) ja lret push pop insb fld inc loope pop fstpl dec leave idivb or sbb je ds xor jp adc fcomp lds push inc cwtl lods out sahf aaa enter push cs dec cmpsb sbb sbb mov negl mov aad push pop je out aas xor in xchg mov es dec (bad) or xchg lcall lret (bad) cmp add aaa push lock cmp cld aam in mov cmp cld or xchg xchg aad push add sbb (bad) or (bad) xor push fsubr out sbb xor cmc jl push sbb sahf cmp movsl clc xchg push fdivl out arpl pop dec inc ja pop dec sbb pop in mov frndint xchg mov mov sbb js jp (bad) notb push repnz inc repnz dec repz add pop scas arpl stc cmp sahf xchg adc cmp jbe push cli lahf (bad) pop jnp xor lds loop add fstpl ret fiaddl icebp pusha pop xorl xorl sub mov clc lds add xchg xchg arpl movl aaa jle loop sub aam fmulp movsb divb ret aaa sti cmp subl test jno xchg mov xchg lret push pop decb mov mov pop adc mov idiv push jns sub data16 gs sahf mov int and (bad) repnz adc (bad) (bad) dec insl inc mov idivb sbb cmpsb (bad) push cld add pop daa ja pop iret lock fildll xlat adc test or mov cld push or or dec add jo pop add rorl add arpl push mov inc xchg xchg inc aad movsb mov hlt cwtl fstps out or jne fiaddl xor ja js sarl out and and mov inc and add ljmp imul mov push out push arpl clc pop cli cld mov cmovge add jg or mov xor jo flds push (bad) ja (bad) jmp adcb (bad) dec std das js xlat inc lcall aad sub (bad) shr (bad) idivl into adc fsubs mov fadds test in ds shll clc lea jl mov jbe push push ret (bad) lds nop data16 cmp jle or shrb (bad) or les ret (bad) jnp or mov mov out addr16 fiadd hlt into sti mov sbb (bad) cmovnp nop (bad) hlt movsb popf lods cld adc lret into push push iret mov loope adc push leave pop add mov xchg xchg push cld das sbb dec stc mov sbb rorb sbb sbb or lcall pop mov and inc lahf and sbb dec movsb aad dec inc (bad) adc mov add mov sbb cmp clc out jnp adc or incl in mov xchg lea fistp cmp rorl scas push sbb sbb jnp dec stc test xor push pop pushw cld jb sbb scas data16 pop lea jnp add sbb sub xor sub mov push sbb popa aad stos dec dec lea cli cli pop push outsb sbb in jb out mov (bad) jnp arpl shr push adc or pop sahf loope pop aad adc out push mov dec dec mov fnop out xchg push mov and hlt ja xor mov pusha lcall jge mov pop pop xor inc cmpsb es adc pop paddsw mov xchg repnz cmpsl add fnsave lahf adc mov data16 xlat aas jo hlt jmp cld xor cmpb aam clc or fwait push adc test imulb jp mov clc das pop cmp rcrb sbb je into mov lock cmp mov test orb xlat arpl xor cmp or lods sahf fcomps (bad) xchg (bad) (bad) xchg push pop mov std or add mov lods xchg mov sub jmp ljmp sub cmp mov inc (bad) (bad) fisubl into cmp push push push jge (bad) sub cld aam scas int3 pop fcompl mov cltd add idiv add inc inc fadds (bad) sub loop fdivp jmp xchg mov mov inc mov mov fildll cmp into popf clc ficomp aam stos mov (bad) (bad) in adc jecxz dec xchg rcl int push rcll jle adc mov aaa in clc repnz pop inc cmpl insb shll lea xchg cltd imul adc nop inc (bad) jb push adc enter jne aad (bad) pusha movsb xchg (bad) lock add cltd inc inc or in rolb xor bound sub rol shll xchg xor lcall mov mov call sbb sbb push stos neg lock fcmovu pop lret sahf (bad) xor clc daa les mov jo cli or sub aad mov lods dec mov cld mov into aam out cmpsb adc sbb mov xchg fisubr fldcw jnp ljmp (bad) xchg adc jnp incl fstpl xor push xor xor lock stc sub mov jl scas repz test lcall and push ret jge sahf clc sahf ja xchg (bad) mov mov mov sarl add dec js aam lods xlat mov inc ja sahf jecxz xchg or xchg mov add cld data16 pop gs (bad) lock ljmp push loop or mov test lods pusha add sbb fimul or test sbb ds adc jnp dec add adc lret repz daa or test or aaa dec (bad) ljmp mov jo je lea adc in das xor icebp and pop mov test cmp lods add mov push ret fldl adc lcall decl push sub (bad) out out mov and sbb xchg pushf cltd aam scas and add rcrb xor cli leave ja add mov pop lret imul inc jecxz (bad) mov int3 jb arpl add lock pop sbb stc cmp lock mov outsl mov push xchg lock xor cld aaa inc outsl stos pop nop call sbb (bad) dec xlat frstor inc xchg scas xchg inc sub cld or adc mov std sub push and in out dec or inc insl fsub mov cld pop and icebp adc cmc dec inc push pop ja pop icebp arpl out add stos push pop repnz add mov pop xchg pop jae (bad) sahf sbb sub fidivr mov sbb pop push mov dec xchg jno pop pop xor jne jge fdivrp lahf (bad) or jmp lret in adc xor adc pop fs ljmp push sub mov mov mov gs add daa and ret xchg rorl lds push push jecxz daa (bad) test add jge daa and fisubl cld add in out xor in movsl jge aaa ljmp ret push pusha in arpl xchg mov adcb push fcompl push pop add mulb adc aaa or movl bound sub push sub lock mov and (bad) (bad) icebp push mov popf inc hlt jg call in jbe dec mov inc adc (bad) stos nop into or lret lock lcall repnz mov aad inc (bad) (bad) ja in rcrb sub (bad) jle sbbl sub call jne adc pushf mov lcall push cmp ret mov pop xor or add aam push repnz (bad) ja add mov lods lea dec cli cld adc daa int xchg add cmp decb (bad) in add mov pusha test hlt imul lahf outsb (bad) int3 xor test xchg add (bad) jno inc popa sub daa fs or xchg movsl xor lahf mov cmp or sahf jl xchg inc stos cmp jnp xchg adc cltd push push lcall add pop mov scas pop outsb push in clc add xchg sub push jb xchg xlat in out fs xlat adc ds in popf faddp mov aad enter inc call aas and inc aam les lea lea popa add inc out sub mov add ret ficomp (bad) int std (bad) jle loop xchg out icebp add sahf mov jle shl ja in outsb push sahf mov pop ret or (bad) or dec call fsubl rolb or std push pop add mov bound add insb cmpsl cltd cmp add in test jae ja insl jmp mov xor test je scas add (bad) dec sbb pushf popf (bad) daa int3 into mov sub sbb add xchg fistpl xor fcoms pushf (bad) jge in jge sbb sqrtps pop or std cmp sub mul in adc mov loopne push clc xchg (bad) cld dec call aam cmp pop xor mov test jmp (bad) xor adc popf sub dec testl into cmp sub loop nop (bad) ja stos push sbb add push add jb pop enter dec stos sbb hlt test xchg (bad) fadd loop jbe fbstp mov sub notb push sub mov pop (bad) xchg pop pop lock movsl sti dec notb (bad) pop mov xchg stos adc dec sub dec sbb mov aaa or or adc mov jmp xlat lock add ret les mov out pop sub sub push add in (bad) cmp pop notb dec adc or cmp push call add movsb leave sbb (bad) mov adc data16 out (bad) xor (bad) repnz mov enter inc mov push push xchg es push jnp (bad) adc pop leave ja shrl out jbe fcom dec (bad) rorb push sahf inc adc ljmp add fnsave mov adc bound je sub pusha add or lcall (bad) or mov mov aam mov sub sbb inc lea add sbb out imul ja xchg fwait cltd mov (bad) mov fisttpl sahf in sub xchg add pusha jns aam mov scas mov stc sahf das pop xchg int3 (bad) rcr mov daa push pop je sti sahf adc xchg flds sbb sub mov das xchg ficoml and leave adc inc add rclb sub jge sbb ja xor (bad) or sbb test sbb and cmp xchg rolb stos jnp outsl fsts mov inc pop lds dec xchg leave out or nop or test or rolb (bad) xchg dec ljmp enter (bad) jnp sub iret dec (bad) sbb popa in (bad) and test fldl pop cmpsl dec shlb arpl cmc out shr ds mov sbb mov xor cmp arpl sub (bad) adc shll sbb add fwait aad xlat jp shl push test popf fisubr sbb or xchg pop pop add dec and pusha xchg orl xchg pop sarl ljmp xchg pop ret arpl loope (bad) stc sub push lods adc inc out sete mov add or mov lret (bad) jae ljmp or pop xlat ja in xchg adc mov and (bad) mov pop fisub inc jg jle mov mov sub out sub (bad) call add cmc fwait cmp cmp sub sbb stc in dec out add fisttpll cwtl idivl mov and data16 movsl xor sub negb mov or (bad) add dec loop cli adc push aam push loop cli push inc adc push jo in jp and pop jle lds lcall push test mov mov int3 out and in or add aad lods mov (bad) aas xor test aaa dec enter ficomp add push in test stos push jb mov sahf jl into sub inc sub std dec decl ds shl mov jbe mov xor jb adc insb add push jmp mov je aad sub jecxz dec insb cld add xlat sub or and xorb mov xor adc bswap rcrl xor (bad) fldl int3 mov hlt add cli dec xlat pushf or add and (bad) push incb xor push xchg dec mov sbb icebp fidiv lods or sbb pop inc cmp dec add loope xor mulb pop pop sbb (bad) ljmp cli repnz (bad) sub dec mov sbbl lret mov into push bound sbb cli test push sub jge sbb (bad) xor dec or stos or adcb in fmulp sub adc mov test loope pop repnz sbb jp inc mov mov ja mov into hlt sbb sbb mov je or pop stc or sbb add fisubr sbb cmpsl jbe mov hlt jbe jnp adc sub repz fiadd (bad) jl adc push mov or inc (bad) ss lcall push ret (bad) inc push sub dec mov pop daa or inc lret iret inc xor mov xchg push in fs pop jnp xor sbb test (bad) out cwtl (bad) jle cs push ret mov mov aad xchg shll pcmpgtb in mov mov mov dec fiaddl nopl mov jne jo (bad) (bad) mov jb sub push sbb mov lods sub mov (bad) orl mov lret sbb mov std fmulp cmpsl iret movsl push jns mov jo sbb mov pop test clc fstpl mov mov push lods mov ja mov (bad) in or mov mov rorl add dec jnp mov sbb inc leave sbb pop jge loope (bad) push rcrb aam push adc and mov daa into ss inc outsb out xor inc push xchg in lret pushf std sub sub ret stos jne dec pop stc cmp mov loope (bad) mov into into out or cld adc rorb lret or fstps aad cmp or cmp mov ficomp cli out cld insl repnz (bad) mov leave fld fnstsw xorps ljmp jecxz out mov adc fprem jge adc enter mov into outsb push mov xor dec dec das mov inc pushaw outsl test arpl ja out adc test (bad) ljmp in or push sbb fbld lock es jg je add push mov push sbb lret sahf (bad) dec roll cld iret in cmp lea outsl cmp mov push jp mov in jecxz sbb jg xchg fsubs adc pop insb xchg xchg insl out aad adc xor in popf incb sbb lret je or or sbb pop sub (bad) mov add aas out adc xor push addr16 mov mulb or sahf or rep insb or sbb jecxz mov faddl mov pop cmp and sbb lock idiv (bad) pop mov sub mov push inc das int in pushf into test push jnp sub cld fstpt sub push push jnp rcl sbb loop jnp xchg loope std loop or arpl (bad) enter or out arpl enter (bad) mov or insb mov jmp fsubr xchg imul xchg incb adc cmpsl insb dec xchg pop cmp ret jmp mov fs adc jle shrl or negb popf movsl jle add es sbb addr16 outsb loope pop test (bad) or cmp sub mov lods mov sub xchg ja pcmpeqd js fildll sbb mov mov leave xchg cmc roll ss jecxz into scas cmp or jp cmp lea ja ljmp sahf imul jle xchg in dec pop divl dec xlat andl jge sub push jg movsb out sub sbb (bad) cmp mov dec add pop xchg lods or adc add push inc xchg or sbb stos std mov cld xchg xor std (bad) mul dec sbb into out out pop push mov mov icebp mov clc pop js and cli mov std (bad) notb test arpl movsl (bad) mov daa data16 lret pop (bad) idivl inc push aaa jb lahf ftst xor mov cli push jbe cld je or into fldl sbb cld sbb mov mov mov jecxz cmp pop subb rcll in inc dec push mov xchg dec push mov out push loop ja icebp push cld in insb inc add inc jbe xchg sbb inc and (bad) jne pop inc inc (bad) cmp cli ret fs fnstenv jecxz lahf imul push xchg sbb jns pop add fldt lds leave jge aam inc push or jmp adc cmp push nop or cmpsl negb jne jl inc sti sahf (bad) rolb in mov xchg cmpsb cld push rcl mov adc mov stos test inc jno mov inc adc lods push inc jle jb in mov (bad) adc ja sub inc mov add jle movb pop mov push arpl daa sbb jge loope or insb and adc (bad) mov cs add pop jp ds lret adc lods aad into dec in or (bad) dec ja mov cwtl popa add ljmp sbb or outsl rcr imul (bad) into jle mov xor sahf out push test aad (bad) xchg aas repz dec cli add ja ds idivb test stc sbb dec jp daa lahf in leave mov pop push mov push sbb stos adc out dec add jnp lret inc sub jecxz inc mov hlt fdivrl lret adc shl js (bad) mov xchg data16 pop mov fcomps dec inc mov out xchg sbb push mov or sub pop mov lods setno mov (bad) pop sti jo jecxz cmp dec mov (bad) cmp leave out push cmpl icebp aam jnp mov sub xlat shlb pop lock sbb test xchg aam cmp aaa jb pop out jns push adc fucom js pop dec jnp or andl decl stc adc out jne sbb cmc pop mov into ja out pop arpl and mov pop jmp scas cli ret aaa std test out mov hlt fmuls in (bad) mov mov stos or mov cwtl sub test (bad) sub mov cmp and dec into test add (bad) cmp into add fist stos enter aam sub int shrb sbb dec adc sbb sbb mov add add and and and mov and inc das jbe negb sub std mov loope cs push or dec mov mov icebp or inc (bad) hlt or cmp push outsb loopne into pop outsb mov sub pop jmp pop out jge clc in ljmp setp dec or in shll out jle cmpsb daa lea aad imulb xorl jae pusha out dec fnstcw sarb in arpl inc and (bad) (bad) adc lods mov int adc lret lea or into lcall push inc cli in push cltd mov into push mov out inc adc cld sbb nop mov cmpsl icebp fstps pop add daa (bad) ja ret cli bound iret pop out mov aaa cld sub lret jnp lods mov push (bad) jecxz push js mov sub jae js xchg out mov xorl push loope js or adc mov fmuls or adc xchg xor dec push mul push mov push inc icebp or add cmp cmp add mov cwtl in jle hlt adc outsb and jnp addr16 mov (bad) aam inc push es or loope test es push hlt sbbl decl jl (bad) and repz mov scas scas mov pop loopne sub leavew xchg jle mov jb les jge lock ljmp in or fnstsw xchg cli add sub das hlt (bad) dec jae or clc cmp lods inc lahf clc pusha push js out mov ds test xchg mov arpl jl pop push pop rcl scas mov mov dec pop push lock ds and xchg sub and sbb pop inc mov (bad) nop mov adc std aad mov arpl jno out mov loope addr16 mov add push push xchg in out (bad) mov clc ja adc aam insl pop int3 cmp xchg cltd pop sahf sbb loop add cmp push inc leave ja pop stos jl mov popa popf test ds out ja shll mov xchg sarb push in push out outsb fidivrl mov xchg or imul sbbl xor int cli xchg imulb sbb scas stos sbb sbb dec clc leave inc mov xor xor xor xchg (bad) int3 pusha (bad) negb divb cld aam push jb adc mov imull mov pop (bad) xor mov pop jb (bad) fnop push cs in jnp inc sahf cli mov std rorb lret out lret jmp inc pushf mov sub add jne or fildll test jne aam fcmovnu test xchg cmp xor mov cld sub add sbb int or push xorl (bad) mov loope xchg pop and mov lea call popf pop jl inc (bad) fildll cmp dec lcall pop (bad) jne add and xor xchg mov jp adc ret rolb inc stc nop jge leave push pop js jp add ja rorb push loopne insb jbe pop mul adc adc mov jp rorb dec stos scas in and arpl in std mov inc jle and pushf (bad) mov outsl scas in jne cmp lods mov push aas in jb (bad) push xchg std xchg xor xchg xor sbb or dec repnz out sbb add push clc inc push mov pop or jb pop (bad) jle pop leave (bad) or mov adc cmp xor adc or sbb fidivl xchg insl jp mov dec xor roll std or into sub inc movsl les sahf jl cmp lahf jb pop ficompl mov xor pop sbb fld adc cwtl jle or out ficom pop scas fidivr and scas cli aaa jb mov scas or icebp jo insl addr16 fcomi dec lret loop mov pop or mov push dec xchg sbb jge lcall push sub jle jge xchg jge push jnp fstps add sbbb xor popf xchg (bad) lahf cmp xor daa ret or jmp dec or jbe (bad) iret adc xchg out adc xor hlt push and jnp jecxz negl mov andb xor fidivrl int stos ss lock xchg pusha ds mov pop repz cli cli cs fnstenv push push scas sbb or (bad) clc mov cmp cltd dec into ja movd pushf test lods xorl out rcrl add ds sahf xchg mov fs sbb adc cmp cld and jb iret pop test leave sub push cmp hlt cmp jge sarb dec mov outsl add in jmp (bad) hlt mov sbb (bad) js push mov ds lcall or daa cld (bad) out xchg shrb js (bad) loop ret mov vpunpckhwd jmp pop xchg je,pn sbb sti lea or out (bad) cmp int3 sahf lahf ljmp mov or inc add push add cltd push cli insb sbb jns,pt inc loop jp pop aam mov test pop (bad) ja xorb rcrb jecxz popa or sbb out fild into movsl push sbb add pushf mov jne cmpsl (bad) lahf pop cmp cmc mov cmpsb xchg in sbb cli or sub sub or mov ret add and outsl jne movsl or sar punpckhdq inc das cs cmpsb add nop cli iret jmp ficomp in pop and push mov xchg pop cwtl sbb mov add bound jns or dec cmpsb insl das jo in sub push push push xchg add pop and inc mov fbstp pop mov out add out out ret sbb sahf mov cmpsl sahf cmp movsl gs into sub outsl pop dec add setbe add fcompl add fcmovnu pop aad push fsubrs lret pop sub movb or stc dec jg mov cs leave iret lahf dec loopne rcll (bad) (bad) mov mov sub scas scas xor arpl dec and add movsl add or ja stos das mov mov inc sub icebp (bad) jne (bad) push (bad) cmp inc mov hlt popa mov ljmp cli adc inc rorb in push xchg xor xchg jnp fcom mov mov cld fmull (bad) in test sbb jns test sub adc xor das dec sahf imul jg imul xchg or fnstsw hlt (bad) bound and clc push jo and cmp clc pop cwtl mov (bad) rol test (bad) in test cwtl jno xchg lods imul cmp test adc push jnp ja mov push shl (bad) lock cmpsb (bad) ljmp adc arpl mov aaa bound int aad ficomp int3 ret cmp inc cmp or push push sub dec movsb mov jmp cmpsl jmp add xchg stos gs (bad) rcll jmp inc inc in mov push dec mov stc ds ja push mov test divps std and sub lea aaa sbb repnz lcall add cld sub pop jle rcl push sub gs mov out jecxz mov lock setno mov lods mov mov inc aam and (bad) sub jl and stc pop push (bad) scas or imul (bad) cli adc sbb cld push dec adc nop sub jecxz xchg psubd js xchg dec lcall enter sub push hlt jmp sarl lret cmp and scas cmp loopne call and mov add ja adc pop daa es jge aad xor mov (bad) hlt jne (bad) sbb sub aad test xor push inc loop sahf push push adc push xlat aad cmp inc mov inc popl aam xchg js add ja pop jle,pt aad (bad) ficomp sbb (bad) and jge mov xchg aas mov popf dec pop fldcw mov cmp movsb push ficomp ds or mov mov and push mov daa xlat sbb hlt fistpll int (bad) xor in jmp mov out jae (bad) jne pop call add outsb loop push dec rolb (bad) daa push addr16 adc decb jnp or and movsl jno jmp mov add (bad) pop and into dec cmpl or cmp decb or setl decb jbe,pn cmp cld (bad) outsb add xor nop sbb rorb std setge add jbe mov mov or push popf divps jge sahf add insl and add cmp xchg aaa fsubrs xchg flds push adc xor (bad) repnz (bad) clc xchg (bad) mov jnp and adc mov xchg xchg mov adc js sub mov adc idiv fisttpll pop adc cmp outsb lea inc add xchg xor clc or repnz or (bad) out inc or jecxz aaa fisub mull or std js push xchg xchg mov mov or mov into xchg gs adc sahf clc jmp mov adc pop lcall ds repnz sbb lcall stos fstpl or std mov repnz cmp mov or je popf lret repnz es mov ja mov repnz loopne xor xchg mov (bad) xchg push (bad) sar pop (bad) mov pop mov dec scas js lds bound outsl fimul cmc (bad) cli xor dec aam into push daa push jae mov fistl push add push (bad) cmp add scas xchg call cmp cmp sbb sbbl pop fcoms mov dec clc pop aam jae in in xchg leave into or xor dec cmpsb jb repz (bad) dec insb cli xchg or jnp mov sbb xchg (bad) neg and test inc push pop shlb cmc imul (bad) lds outsl outsl dec popf fcoms (bad) int3 ja bndldx loop push mov cmc int3 pop mov pop cmp sub push std mov ficomp push fmuls fsubr cwtl inc aam aad cmc mov add out sub rol push sar int3 sub inc push add inc sbb inc sub pop pop lock jb cmp mov jnp outsl xor pop idivb (bad) ja jo push minps push and daa (bad) pop nop sub ret jne fnsave and mov movsb lret ret pop pop push cmp mov imul mov mov mov cld (bad) or je adc cld adc flds mov push mov pop push lods repz movsl decb and int3 (bad) or outsb sub add jge (bad) xchg mov into pop sarb lret stos lods mov aam ds pop fnstenv cmp lods inc adc (bad) or (bad) mov fldenv mov cmp push jnp (bad) std fldenv xchg mov sbb iret out inc add enter mov push inc decb mov xchg sub loope insb or lret xor cmpsb insb (bad) mov aas in jl outsl mov jp cld cmp lcall push jmp scas jnp inc push inc inc pop xor movsl sub clc jge sbb rcrb and mov (bad) loop mov aad dec jnp add fwait nop rorb mov sbb sahf movsl sahf lss cld sbb insl sub mov ja pop fs inc bound xchg cld jne (bad) or cmp scas jg arpl ss icebp jnp xchg lret mov arpl ljmp add daa mov mov sub mov int in push sbb scas pop dec or aaa outsl aas mov mov (bad) push cmp xor (bad) into sub jbe jae sub adc sub pop clc loopne in in loopne jnp and inc out cli push adc xor sbb or dec sbb dec cmp rcll and push push push imul or or or cmp sbb adc (bad) into jnp pop xchg mov push and mov sbb inc scas dec lcall inc dec sub fst mov movsb imul stc push fcmovnbe sub das mov (bad) dec inc mov push mov push xchg movsl daa push adc in dec (bad) loop jae jmp cmp (bad) syscall fxch lds in imul or lock icebp cwtl jecxz cltd add bound leave cltd jl gs sub dec xchg cmpsb out jnp cmp outsb into sub push fsubs mov sub or mov jnp or push adcl mov (bad) int lea mov mov mov mov out sub push cmpsl and adc mov repnz mov adc into mov cli adc insb xchg and mov into (bad) cmp outsl pop rorb mov lahf repnz lods mov into ja push dec cmpsb fstpl jnp mov add movsl sub xor sub js pop test inc je adc cmp movsl hlt xchg rolb push sbb jns test jno jl or rcrb and or jmp or jle jmp insb clc mov sub notb mov fidivrl fstl and mov hlt sub movsl and push or inc xchg push add sahf dec les rol xor pushf mov test ja shlb mov mov xchg test (bad) andl pop push push xchg adc nopl xchg aaa dec dec test jnp dec les adc inc inc cltd je in loope (bad) or jo into in das xchg xor repnz mov sbb sahf push imull add xchg xor mov push scas fwait inc push movsl jg xchg sbb push xchg mov ret push jecxz (bad) dec cli icebp inc mov mov sub fnsave test cli aas insb insb out xor xor push scas add cmp cmp jbe push and arpl out mov mov test mov cs dec adc lret mov sub lea xchg lret xor adc mov pop jo scas fisttpl xchg mov or sti rcll inc leave dec fs daa jne aas mov mov jnp loop mov repz lcall inc iret orl popf lea lods xchg pop adc add xor in int3 dec push cmp mov fs sbb mov popa mulb inc gs rolb jmp cmpsb mov fdivs push adc and mov cmp (bad) xchg mov out push or lret xchg dec scas adc inc pop sub das es lds sarl xor pop jno (bad) fadds arpl arpl jbe mov enter (bad) push imul inc movsl jp lea lret cmp pusha sub arpl addr16 aad push mov mov outsb (bad) or xor adc dec cs push test xchg jle adc lcall xchg xor adc loope test lret push sub sbb scas add iret test push fisubrl repz push dec subl lret or xor dec ret or lods addl xchg push pop xchg add (bad) mov mov insb ficomp in inc std hlt fisttpl xchg and jge adc rorl scas mov sbb iret aad cmpsl (bad) (bad) lret (bad) sub adc int xchg adc pop (bad) mov mov ret inc std push lea insl test divl inc mov xchg lock push push ja out mov addr16 lcall adc imul or push fisubl incb stos movl jmp or xchg or mov ja xor sbb xchg sub pop aas mov (bad) mov xor sub in mull or jmp jbe (bad) cmp or or fisub push aas lret stos pop into dec repnz mull xchg pop fcmovnu fdivr ja adc iret jle or sub nop inc jle mov pusha mov cmpsl lock je stos pop sub pop faddl add xchg mov pusha jg xor roll mov jle push push leave leave pop push xor fimul (bad) xor xchg std xorl les sub adc lcall lss xchg inc or pop push rcrl hlt cmpsb frstor arpl and sbb pop push movsb les int3 popf dec push xchg clc push cld cwtl jbe xchg (bad) mov das jno enter fidivl push jbe push xchg sub mov xchg fisubl je es arpl add loopne les scas lahf push in xor psubsb add mov in pop or movsb jbe sub out pop scas or int into add push shrl mov cmpsl out or lock xor pop cmp and sub mov pop xor push mov xchg mov popf (bad) outsb mov xlat test jl negb xchg push dec int3 out jp dec push xchg sbb pop ret nop mov fsubr ret in enter pop inc jbe sub or add decb jne out push inc (bad) mov add mov inc lds adc sarb xchg adc jo iret push push cli pop pand outsl add shll sbb mov hlt cli add xor popa (bad) sti pusha hlt ja xlat cltd cmp dec es movsl mov jae (bad) adc jns and mov xchg call mov cmp aas mov push push outsl ficomp imul int (bad) sub xchg mov mov and ja jmp cmp jmp movl pusha mov push pushf lea jmp add inc gs outsl fs gs imul js add mov lahf dec push jno aam ret cmp insb lcall nop jmp push xchg push cmp mov mov sbb in xchg shr nop movsb or into ret or imul fisttp and cmp repnz adc jle pop (bad) jl or jmp iret js xor mov pusha jmp shll notb push push sbb jb push lahf dec push jecxz mov shlb mov push in in iret jmp int3 clc aas cld jge insb jl cmc or orl mov inc mov and leave xor nop into (bad) mull xchg inc jae out nop mov shrb stos push jo repz push and mov ja sti pop hlt add jno lods in sti in push sbb (bad) sub cmp cmpsb int mov pusha adc lcall push sbb int fcmovu out mov or push jns inc cmpsl scas les clc jg out jns jnp sub jmp dec int xlat push xchg jl mov mov dec mov cmpsb cli out shlb cwtl dec push or bnd loopne rcrb mov push cmp mov les mov aas in bound fwait dec jbe cmp mov lret or pop popf pop std lret jecxz in sbb sub scas mov pusha sub xchg fwait es jecxz cmp pop movsl cmp js js out (bad) dec sub jne push arpl jne rcrl pop imul shr push or test xor sahf aad mov and scas insb sub popf cmp xchg in push cmp test mov ss xor add outsb jl inc cltd dec push sbb lods repnz mov sahf loop test sub push ss nopl addr16 dec jne xor mov fwait aas scas mov xchg push mov into je enter xor test inc aas push mov (bad) mov sub mov out dec movsb pop xor push jb incl sbb and sbb or jo mov nop mov jmp or pop jp jge int3 repz lret adc xor sti or mov in jae or fisttpl aam dec int mov cmp xchg push and adc or xor movsl ds add xor mov lcall cltd icebp or (bad) jo (bad) ret mov jecxz rcr mov cwtl xchg pop movsb iret xor fs and push lds inc scas adc or or push and sbb ret mov pop rorb outsb mov dec fs inc int add inc cmp daa cltd xchg mov jecxz xchg or aam imul jge xor mov mov xchg mov add add adc mov icebp cli test push jp mov jno sti xchg mov sub sbb pusha outsb jp jb xor loopne jl call cwtl fsubrp iret xchg mov jl adc std cld dec fsubl jbe pop push out fnstcw inc and mov ret data16 mov inc ss xor pop jae xchg jecxz sbb xchg ds bnd mov fcompl add and int3 mov sbb adc pop in loop jmp adc sbb fldenv push dec fistpll lahf rcll push xor or movsb lock inc cs je (bad) out cmp lds into dec add pop imul mov mov sub jae pop inc arpl dec push fs jg push sbb aaa popa addl mov mov sti adc jle rcl stos cmp push testl push cmp push pop mov leave (bad) or jbe and inc ret in fistl sbb dec fcmovnb in int dec aas rorl pop gs jbe and (bad) lcall rclb pop add cmp xchg ret nop sbb leave push fcomps fwait cld push (bad) cli sub lcall cmc dec fwait lcall arpl xchg cmp repz sbb lret sbb or push sbb mov inc or (bad) imul ja jnp mov mull inc scas out std xlat push daa aam int3 pop pop imulb pop test mov push scas pop cmpsb jne mov leave xor xchg and rorl push pop cs dec mov pop fldcw or jp fnstsw lods sub mov test mov stc mov mov fstpt and imul xchg lods movsl lods sub xchg fnop cld mov fisub cmp mov adc adc and or or hlt push ljmp xchg enter pusha test dec cld jmp pushf lea jne aam aad btc (bad) lock push ror aad mov sub shl add (bad) lock mov pusha push test pusha lea je pusha pushf sub stc cmp jmp push lea jne push stos movb pusha pushl movb lea jmp test jmp and cmpsl movsl dec push clc imul fwait mov cmp jge or in add aad cltd xor dec mov xchg mov loope out pop cltd lods sub stos adc cmp sub push mov iret mov sahf test (bad) sar insb sub pop sbb into ljmp fwait sub cmp lods adc or push pusha mov pop mov adc push shll cli iret pop mov jmp or push leave inc das test xchg lea sbb cmpsb cmpsb enter outsl testb ds sub push (bad) in loope mov mov sub js inc pop push mov cmp test sbb inc cmpsb push dec dec mov lods dec pop pop mov or cltd std insl test push lock sahf sbb mov xlat xor cmp (bad) sub push inc or dec ffreep pop notl or dec fdivp adc andb xchg pop in daa pop in jmp int3 push xor insl jmp stc lret inc sub xchg jno jb in adc jl add loop cltd lcall notb incb sub fcmovbe sub and dec push sub movsl (bad) mov or ret daa mov mov lds pop js rolb lahf es cltd jns cmc pop fisubl push mov xor jg pop int3 sbb mov pop into enter xor data16 out inc ret pop aam popa rcrb inc fidivl mov outsw xchg cld push mov push or pop jl inc sbb sti rorl rclb push shr sbb movsb lods hlt adc dec and call lock fcompl ja pop push mov lock pop xchg jnp push cmp loopne pmuludq push push inc push xor cs insb add mov xor jle clc jbe xchg js cld lret clc not inc push dec inc es add mov aad int3 rcll mov cmp sarl ljmp jle lock pop and in sub and or (bad) dec mov cmpsl lret outsl or sub adc mov sbbl jge into xor mov cwtl jle jo push xchg jmp imul mov fild lock repz sbb cmp jmp sbb pop sbb mov xor loop xchg mov pop iret jb sub mov dec pop lods das mov add mov ror inc popf call push xor dec mov pushf jp cmpsb add pop ret pushf mov xor inc pop cmp in jle loop add sub push in cmpsl das inc mov sub loop lret test pop pop sbb hlt popl enter ljmp inc pop aas push xchg jb lock push lcall lock push lock inc push jae and pop (bad) lahf xchg int3 scas mov mov popf repz sbb jno sarl shlb pop in insb mov iret push mov outsl mov sbb mov jp out fstpt iret xor and jns dec mov cmpsl jg ja jge xchg mov pop (bad) xor test loopne cmp bound jp inc lods xor lcall cmp imul iret ret das in and sahf xchg stos test jg push add adc cld lock popa stos sbb in (bad) jg jp cmp pop push ret ret or pop fimull inc data16 mov adc add xchg xchg xor aam adcl mov pop lahf pop xor jmp adc ret mov int3 dec lock pop rcl mov inc cmpsb mov add jge or das add lret xor sbb sarl mov mov (bad) cmp pop into jns adc icebp mov jg (bad) mov mov add loop in (bad) mov xchg sub push movsl fcompl mov mov push ret fisubr jo add sbb lea jmp lcall ljmp and fwait mov sbb or test repnz into mov mov jecxz or (bad) je jnp sbb lea je call int roll dec push rorl sahf loop mov fcompl lock shrb xor sbb push mov out stos adc cmp jno leave xor ss into (bad) cwtl mov mov loop mov sub ds cmpsb adc and adc push imul (bad) xor add push ljmp sub stc or imul cmp jmp xor lcall push or in pop inc cwtl mov and loop loope rclb push xchg dec fsubs sub cwtl outsb xor je adc push fs lret je bound daa (bad) repnz inc int3 and push rorl insb jecxz add lret pop loope sub xor js jne dec out sbb dec hlt inc sti sub fcmovu pop jne cmp pop xchg ss ja popf aad jecxz es sub sbb sub add mov je sbb sub inc mov xchg xchg pushl in dec idivl adc das repnz imul cmp adc push mov loopne clc js adc hlt lcall rcrb in cwtl pop cmp inc mov inc sbb add and mov sub and test hlt mov mov push andl scas cmpsb call js dec (bad) imul sub (bad) xchg xlat (bad) (bad) cs pop jno jnp inc inc mov aam lea dec push push andb sub xchg cmp lret mov popf mulb testl lods dec push and out and icebp sbb test das inc ret fisubrl push mov into mov adc add addr16 sbb cmp adc bound inc ljmp xchg jne dec mov mov push sbb pusha clc cld pop ljmp inc stos test not ror add mov cmp and pusha add mov mov lea jmp insb pop cmp push fild cmpsb sub mov mov mov test mov sbb sub inc lret xchg inc add mov inc (bad) pop repnz (bad) fstpl pop inc sub fisttpl mov mov pusha sub cld lods push pop movsb bound cmpsb add aas ror fsub jnp insl xlat mov pop arpl cs mov aam dec push mov ss stos sub sub inc stos xor pop push mov test ds adc inc shrb (bad) sub imul mov adc dec mov cmpsb pop inc xchg jg cmp jb movsl add push and pop mov popf jge mov dec sbb cs movsl fwait jo roll sbb sub sub int3 xchg frstor pop mov lret sbb jecxz jmp pop or iret adc mov cmp gs and mov scas (bad) jge dec push test xor adc daa rcrb dec enter xor push push fwait scas push ja repnz bts sub test sub mov clc push sub jmp cmp push xlat dec mov (bad) push mov in jp out sub jp lret int3 fcoms xchg (bad) scas mov adc loop jle jo or pop xchg cmp inc insb xchg push sahf inc cld call mov mov pushf mov ss nop pushl dec sbb add call imul mov insb mov inc (bad) pop xorl jle ret sub sub add addr16 or (bad) sarl jle enter mov loope bnd aas cmp out aas divb dec std jg or call (bad) ret lock xchg int3 movsb data16 push xchg xor fdivrs fmull adc clc call inc test pop std (bad) pop jmp sub test (bad) jbe push pop fcomps mov mov (bad) lods dec std lods or test aas scas mov sbbl sbb mov xchg ret mov jno xor fwait cwtl or xor pop jnp popa mov sbb aas xchg cli xor xor pop cmp inc or ljmp pop and sub add pop dec pushf push shl push jmp mov rolb test push pop xor mov mov or cld push fs nop clc fcompl xor pusha xchg fldenv psllw sub ja out pop lea in in sbb out cmpsb dec inc (bad) ljmp dec dec mov or xchg push add rep fnstcw push add mov (bad) loope or add stos repz sahf push pop dec mov inc inc popa loop xchg jb iret push jle pop fdiv push pop xor jp xor mov daa fcmovb (bad) xor push jbe push (bad) jno pop in push and movsl ret mov pop aad test ss popf test cmp repz cmc sbb pop fwait cmp (bad) jge push fs inc jnp mov adc jg xchg repnz loopne aaa xor frstor adc and add rcr mov rcll add cmpsl mov sub pshufw dec data16 sbb (bad) dec mov iret cltd int push sti xor adc loopne inc inc inc mov fidivl sbb or icebp cs hlt add add pusha rcrl fnsave sbb fs call call lds push push jmp aas xchg xchg xchg (bad) and inc push fnstcw cmpl cmpsl mov cmp cwtl les inc lods fidivrl xchg cmp in mov add out aas mov std push mov aaa inc jne data16 sbb popa jmp aam add das inc fidivl loope sahf adc bound lea lods xchg and test lock xchg cmpsl pop lock adc jmp ja add sub sahf sahf or mov push in in adc add lret jecxz das stos mov xor mov fsts sti loope pushf cs xchg push or and lods aaa mov mov (bad) pop fldt ret outsl and jae xchg xorb ret (bad) lock (bad) jno mov xchg inc outsl int lcall imul pop lcall sti cmp dec ljmp sbb and jmp mov dec (bad) ss cwtl jbe je int3 inc and dec cli xchg cld and call pop mov xchg movsl add ret push loope dec mov dec add icebp (bad) je lods out or inc sub aas lcall xorb inc stos fdivrs cmp fildll scas mov jg icebp imul (bad) hlt pop dec out outsl xchg or fcmovbe outsl outsl lret movsb jle jmp das mov cmp lods roll lds cmp movsb les out or mov mov je cmp stos leave push push jae mov push dec les je or cwtl adc std jmp in cmc mov push fwait (bad) notl in jmp int3 shrl mov js push push popf outsb xchg repz jo xor fldenv dec mov jmp cmp mov es aad outsl inc pop adc loop sbbl or lds hlt mov mov xchg mov pop loop ds mov xor jns add movsb ss sbb mov movsbl mov mov mov lea jmp clc test inc mov push (bad) dec int adc inc xor shll ret lret fstl xor inc and test rcrl sti (bad) xor inc mov lcall add xorl sbb xchg cmpsb adc mov icebp pop add (bad) (bad) repz add mov mov dec lods push push mov jbe adc push adc xchg or and mov cmpsb repnz sbb ror dec outsb popf push ljmp (bad) dec xor cmp mov adc pushf sbb lahf fidiv lret and jns dec mov inc pop mov rep pushf mov call push orb push mov (bad) xor roll das jmp in pop iret int jecxz shrl dec pop jb xor mov mov mov add daa pop cmp and push fmull pop stc pop push int3 sbb (bad) ds mov sbb adc out push lret mov xchg test xchg jmp jle loopne cmp push notl rolb dec loop or mov cmp jp ss mov or jbe adc imul faddl repnz sbb and and and add add addb add test add add fwait or add add xchg loop add add add lock add add mov add js add add add add add add std add add add or add add add add or add add bound add (bad) fs add add add adc add std add aaa adc add xor add add add add add mov and adcl pop repz push pop push loopne fs (bad) cwtl (bad) cltd ljmp (bad) rorl fs dec rclb adc std ret xor pop sbb add cmp subb mov mov jg rcll mov xor mov add jg jne ficomp imul add lods aam adc test repnz dec cwtl js call pop mov push (bad) dec rcl cmc data16 jle pop xchg in xchg inc mov jne les lret jno jno repnz add mov inc add sub jno fst sbb or cmpsl call mov or jle mov push xor xchg mov das popa mov push sbb (bad) jb adc fwait push pop cmp adc and mov lret aam out xchg xor in or dec push lret or cmpsb xor lock mov popa (bad) outsb lea mov lcall dec jle mov mov mov dec xchg data16 test cmpsb test jb arpl fbld lcall sti inc nop subl pop cmp repnz (bad) inc xchg icebp cwtl cmpsl mov bound inc cmp jle inc jl fdivrl addr16 (bad) outsb adc mov andb lods cs jbe xor pop or imul (bad) int3 mov pop (bad) pushf jno xchg testb xchg out stos sub fild sbb mov mov xor jno mov cmpsb mov lds jp loope and cmp add movsb jb movsl cmp mov lahf push std ljmp gs xchg test add push dec in mov pop xor push push push sbb mov loop loopne std mov imul popf inc ret in cmp cmp dec push mov orl push pop inc dec mov adc pushfw add pushf push xor out xchg (bad) enter fistpl sbb pop xor pop mov call mov pushl cmpsl adc jbe sbb fildll rcrb fs jb sbb pop xor inc mov (bad) dec inc (bad) ror out ss mov ds jmp inc pop icebp mov mov das add dec faddl stos sub or or pop leave loopne jns mov mov mov stos fnsave dec out push mov in sub fldcw loop inc jbe dec xchg cli pop xchg sub mov cwtl pop cmp clc stos leave out icebp movsb nop fs push mov mov in fisubrl (bad) je cmc dec pushf inc mov int movlps inc sbb mov call mov (bad) repz inc mov repnz test xor mov leave and mov xor add cs loopne adc int mov adc andl sbb or cli outsb ljmp mov or dec mov orl and lods (bad) mov jbe andl fs test fcoms push push stos imul xor sbb cmp xor mov inc cmc cmpsb cmc lock inc sub mov addl enter add fwait js sahf cltd popa inc ljmp dec push add mov mov aaa lock iret jl fstps insl loop fs stc push fcompl inc push pushf ljmp test jle dec sbb scas add and loop cmpsl ds out jae lods cmp in or sub sbb pop data16 fwait insl sub mov jp ficomp jnp push push or adc int3 es orl sbb ljmp testl es fs fwait cmp or push sub ds cmp pop test inc fisubl sarl pop push fmul xor aaa (bad) pop mov xchg xor cmpsl leave cmp stc mov add into int enter push ja pop mov xchg lods int (bad) insb push lods xchg cmp dec adc fsubrs and mov shrb xor push cs ss je push xchg xor and rclb out jp mov hlt cmp mov mov mov mov inc js push xchg push das or mov adc in in test lret lret adc popa pop sbb ja (bad) pop js out (bad) mov pop xchg mov aaa pop hlt pop pushf insb shrl sahf addr16 das cmp imul xchg inc add lcall cld test pusha sbb (bad) insl int3 fldcw fisttp (bad) mov push adc repz sub pop pop push int3 mov nop icebp (bad) sti sbb sub sahf lods lret data16 sub ror xchg cmp (bad) push mov cmc dec adc (bad) jmp jnp pusha lret cmp rcrb call int sub out int push jae cmpsb pop xchg loopne and pop out int jno mov aam push mov jns pop arpl sub cmp cmp cmc push push sbb cmpsb xchg nop lock test lds sbb pop jb mov xchg xchg adc add out pop andl in iret pop cmp hlt (bad) cmp scas cwtl mov mov mov leave sbb scas fadd fild shll scas push adc xchg jge cs jnp cmp pop mov push loop mov mov and sub jae mov lahf lcall and gs add add hlt mov pop fadds inc jae mov cmp sub jl in push daa notl inc push or push outsb mov xchg int3 out jle loop and xchg addr16 dec jbe mov and xchg loope dec or add and ret lods sbb pop jl dec cmp jecxz fwait mov adc or in out inc jl push stos sub fnstsw inc das leave inc leave or lcall imul adc cmp loop inc sub jns loop es andl jecxz mov pop dec stos push inc pushf pop jo outsl bound das int3 mov je inc adc dec into mov ficoml inc push adc arpl mov std insb loop mov negb jle mov or movsb inc push inc in mov aad add (bad) jae mov and inc fs add lds fwait into jne test xchg or xor jo (bad) pxor outsl das rclb push mov fidivr mov xor clc cld sbb push rcl jb (bad) dec and pop mov dec xchg and push mov in into dec push inc dec (bad) mov test mov or test add call jb cmp pop popa or xchg call push fcomip push and out xchg fs or push ss aad imul push mov mov lcall syscall testl jbe inc mov outsl fs int3 xor clc fldenv leave scas adc adc stc cli dec (bad) int adc sbb les jmp mov mov aad and lret mov fimul (bad) fadd xchg fdivl aas (bad) or rclb stos xor xchg mov pop outsl jne sbb sub enter and pusha cmc mov inc test nop lcall aam jp jae xor in push sub sub pop jo bound rolb lds insl jg aad xchg sbb iret and pop adc es (bad) jns out jmp lret xor inc pop adc outsb scas mov (bad) scas fstpl pushf and cmp fiaddl (bad) stc cmp sahf cmpsl pop shll mov push pop xor in aaa push mov pop and dec pop mov call scas inc xorl aas rclb adc pop aaa cmp sub int (bad) arpl jp into ja jae insl jnp jnp pop (bad) int cmp mov les xor sbb jg test add scas xchg pop (bad) aaa xchg xchg sbb jmp xchg mov cmpsl subb fs das mov aam in pop out or mov and (bad) mov pop out out mov add shlb movsb ja sti test jnp inc imul je sbb cld cmp out or stc das (bad) xchg cmp cwtl dec pop cmp pop ss gs test sbb pop adc out clc js out in mov sub xor fsub jns bound cmpsb ret leave jae movsl sbb ljmp out xchg enter mov xchg mov ret stos inc dec pop out (bad) fistpll test jae repz addr16 cli pop data16 mov (bad) shrb jo scas adc lock sbb sub cmp sbb stos pop or scas lret flds les stos inc pop paddusb pushf sub outsb shrl out movsb sbb (bad) sbb mov dec dec rcrb jbe mov hlt and jmp xor xchg (bad) call jg test (bad) push dec sub jb mov adc adc jbe data16 sub mov sti pop aas testb cmpb sub inc insl int mov ds clc push pop mov int3 add cld insl clc fs rcrl inc dec xchg adc jg lret inc pop addb pop call mov lret inc pop call pop mov cmpsb mov xchg inc and sbb and push (bad) (bad) inc leave jg and dec jmp mov fisub mov bound lock and adc add vmovdqa inc xor xor pop push dec mov movl sub jle add daa dec and dec gs test push xor sti ret xchg js jnp adc lret (bad) mov push gs fmulp mov into ja mov insb cmp sbb jo inc sbb (bad) aad cmpsl sbb mov insl inc mov data16 xchg jmp or xchg (bad) mov mov cmpsb mov xchg xor repz pop mov xlat incl sbb mov cmc aad xchg sub xchg imul lret idivb pop jmp or pusha repz lds movsl lea idivb xchg lcall or dec out sub mov mov shrb lea or into push mov and mov sarb xchg aaa daa js xchg jbe pop popa loopne nop or fadd ja mov icebp dec nop fsts cli negl dec xchg push pop test and nop pop pop fildl lods fmulp (bad) insl lds add adcl jne out xor stos adc or test mov or adc push repz pop je shlb push addb add mov jge test sarl je aad rcll icebp pusha inc jne outsl pushf into add push jno jmp xor add push xorb cmp push dec aas sar lock push clc xchg or sub jne inc out fadds sub jbe fs jmp scas mov das mov ds sarl cmpl xor xor push xchg sbb pop or ret adc mov jle mov addb lahf leave mov inc ss mov nop mov adc lods mov out inc or mov sbb lret imul fcmovne xchg ret and fiadd add add loopne add push push movb pushl ret adc call movzbw movzbl movzbw lea lea movzbl jmp bt repnz pushf call push jle loope dec push cmc mov adc jp dec je push cltd mov mov push imull iret inc lock mov pushf or and cmpl mov rcll bound inc mov mov mov add adc (bad) sahf push push push and icebp pop pop std jae imul gs ljmp adc sahf in mov add push xlat adc aaa push mov dec sub imul in pop cmpsb aas fisttp sbb sbb cmpsl jl mov add (bad) stos push iret in pop sarl dec jecxz pushf lea jae test pusha cmp pusha lea ja inc not call bswap mov or shld push das ror neg data16 cmc mov dec aaa shl sub pusha bt mov pusha bsf setno not mov shrd clc mov bt call jmp not ror rcr ror not rol setg setae not setb not pushf setp setne jmp sbb mov pusha (bad) repnz je sbb or shr cmc mov add mov pop mov test push push clc or pusha lea je cmc push or pushf jmp dec inc push dec inc dec xor cs insb add dec push enter push xchg xchg pop dec fs (bad) loopne cwtl (bad) cmp xchg inc cmp adc mov mov dec pop xor scas ds addr16 cmpsl fnsave push fildll in or mov sub cltd jo jl cmp sub xchg cmp mov ret ret test xchg lds jge addr16 inc jecxz cmp jnp or adc jne or sbb xlat adc add push fidivrl cmpsb cmp loope das cmp ja js add in subl or inc repnz pushf pusha xchg mov jmp loope cs rorl testb repnz mov scas ljmp pusha mov inc mov push fcmovb lcall pop lret pop (bad) icebp mov xchg dec daa fildll out fwait xlat scas test into dec cld scas ret imul and jecxz push cwtl sub addb nop call pop mov ret cmp sub xchg add push sti jge outsl adc cmc bnd sahf pop push jecxz push popf cmp dec cld dec sbb mov lds lods sbbl xchg xor and icebp inc aad xor dec rorb jmp mov xor xor cmp out xor outsl fwait sub (bad) bound imul xchg adc xlat cmp pop lea sbb lods std sub pop outsl cmpsb adc sub (bad) lods cli rclb xor mov jne imul in adc sbb bswap aad shr or jbe and push mov mov ret dec xchg push cs and push jmp and (bad) loope or push movsl es dec push shrb daa jns adc loopne divb push pop incb mov leave sahf rclb loop push push jb jmp jbe adc repnz fidiv popf bound xchg shrl xchg dec aaa mov pusha xlat (bad) mov cmpsl and (bad) dec jns jge dec loopne jno dec jnp in lret rorb ja mov ret cmp add inc push mov mov in dec mov pop dec jle sarl rorl cltd lea jne push or adc cs (bad) pusha data16 sub cmp xor mov fadds out std divb and lret sub jle and test sbb dec adc shrl imul add test cmp fs mov shrl lds inc jb pop push dec stos cmpsb stos pop sbb bound daa sub lret scas cs int sub jne jge cltd aad ror sbb inc lods push movl lea call call jle popa loope dec push mov mov dec jge sbb mov dec mov das arpl add movsb mov cmp mov movsl jne push mov andl cmp stos jno cs lea scas orb sub cmp stos fstpl and or xchg (bad) testl mov repnz test lret mov xor add lds push shrb or mov and xchg push and outsl and jge mov mov lret enter sbb mov mov and lea mov and stc push outsb std int3 cmp out outsl cmpsl mov mov xchg cmp orl cmp enter movq popf jmp outsl scas repnz mov xorl xor xchg cs ljmp mov test xchg cmpsl mov xorl outsb iret cmp sti (bad) or or and jl jo fwait ds and pushf dec mov imul mov fsubr xchg loope or jae dec cmp or and sti fwait div leave fcomip adc sub xchg xchg imul jmp pop adcl xchg ljmp lret jbe call stos push call call neg bswap sbb mov push mov bt cmpb mov push lea jne btr lea bt clc sub add lea pusha mov setge sub rcl clc add pusha xor and mov movb call rcrl fimul decl jbe push or rclb mov or cltd lahf pop maxps int inc cwtl fiadd dec clc sahf mov adc mov je lret xchg ljmp loop push pop push xor pop adc test dec fstpt xor lcall jne ss mov enter add pop in call or push sub push (bad) icebp fdivrl cmp imul add movsb pop pop mov and jg lds inc into mov in inc push push inc sahf lcall xchg rcrl or add dec lea jne pusha jmp clc cmp xchg or neg mov cmc sub pushf pusha pushf jmp jo add fisttp sbb jmp push or adc mov js fcomps and push xor push lret dec addl sbb xchg arpl push notl ficoml xrelease icebp xor push scas push mov mov pushf push inc xchg das inc int3 and stos dec stos xchg std ja pop mov (bad) mov dec ljmp inc cmp sbb in iret das les mov mov pushf add mov imul cwtl inc jno cmp cld ljmp dec andb movzbw mov mov lea jmp in adc fmuls int3 push addb sub mov pop push pusha jle xor dec stos cmc cmp sbb jbe dec leave shrb xor int xchg mov scas dec adc bnd dec mov or inc pop cmp repnz loop scas adc addr16 pop popa arpl out test imul pop ja loope test dec mov dec loop lock adc fdivrs dec push jmp bnd call adc inc xlat in test and rcl btr mov cmp test pushl pusha sub call mov pushf mov lea call pusha jmp sub imull sbb cltd mov mov xchg mov movsb aaa aaa std or hlt push mov sbb adc mov sub push lcall or je out repnz cmp jbe pop into mulb lods js cmpsl (bad) push aam mov push (bad) bound push lea and dec pop push mov cmpb push es icebp loopne mov jae in lods hlt inc sub (bad) fidivrl hlt sub push repnz (bad) mov inc fnstsw xchg es xchg bound inc cmpsb pushf fadd stc sub mov push test outsb scas cmp ret ds or mov sub mov sbb xchg mov cmp hlt mov sbb pop push es (bad) pop outsl push inc cmp gs push push addb xchg popf popf (bad) jle xor call stc sbb lcall sbb inc (bad) shll stos xor and dec push xchg in sub gs int3 push dec call pop nop fsts jl mov add dec popa imul jb inc imul jns popa je inc js jae jae inc dec push inc push dec cs insb add xchg adc add mov shr mov data16 adc dec push dec es fimul xchg (bad) je call push adc ret cmp push stc es stc repnz out push in (bad) aad sbb ja fisubl jnp (bad) xor mov dec (bad) push leave xchg xor ss bound jmp xlat rorb xor test test lahf cld push imul enter ds js dec aaa inc pop cld inc xchg xlat sub jp push (bad) jmp jae (bad) mov adc inc das (bad) aas mov jmp dec outsb popf js aas out add add loopne mov pop call jl xchg cli sub dec rolb fisttpl mov mov jno pop xor jg imul mov rcrl out icebp lret or fistpl cmp in sbb mov fdivl xchg data16 pushf fwait jns push aam mov cwtl movsl pop fildll scas outsl and addl movsl pop aad pop ljmp mov or inc in sbb jp inc pop in xlat xlat xchg mov xor push jl ficoml lea push lods mov xchg jno inc push stos xor movsb aaa insl enter adc jecxz add je xor or jmp add int3 in push xchg es mull and sub mov repz (bad) iret mov lds push mov push fs out fbstp pop shlb or xchg (bad) jp (bad) in out call cmpsl pop sub mov cmpsl pop dec add aaa je fdivl (bad) jne adc jb out cld inc leave jb lcall xchg sub xchg mov mov mov imul xor orl add sbb iret in out add (bad) insl pushf clc pop lea fstps push and repz int3 xchg (bad) mov cli imul js arpl gs add add xchg popa call jmp or push iret xchg sub test out in mov add pop fsub and outsb adc cmpsb dec mov dec mov icebp ja add inc sarb cwtl jecxz adc mov mov mov fs inc ret sub fucomip lods cmp or lcall mov scas xchg jg imull js cli daa dec mov xchg mov dec mov add mov ret sub pusha cmpsl int xlat mov pop and push inc or push outsb stc cmp sub xchg test push popa mov adc fwait imul ja sub and and (bad) je add push pop xor rcrl sub out sub out shrl dec testl inc xor dec add sub sbb dec addr16 in rorl addr16 lret push lods lds int3 cmpsl imul outsb cmc sbb stc dec js lds inc or pushf xor add std push mov jg pop sub or mov imul or jmp (bad) lret mov nop mov dec (bad) dec push test cmp xchg sbb pop stos fimul xchg int std std sub jmp cmc dec roll sarl lds enter ljmp lea inc out cld and push cltd adc mov inc cmp frstor jns xchg or pop fs out repnz sub jmp pop jae leave adc or arpl xchg outsb fdivrs sbb pop xor pop cmp push fucomp (bad) mov mov aad fidivl jp (bad) fsubl insb lahf test lods dec adc lret lahf mov sar aad scas adc ss (bad) and movsl idivl cli loop add jge iret es or adc push stos adc inc and and cmc jmp movsl jns xchg out push jns sbb in push pushf xchg movsb inc adc xchg int3 inc fs fiaddl out cli out loopne xor inc test loop sahf mov cli add inc cmpsb loopne lods sbb orl cli fdiv inc xor push mov (bad) jl (bad) dec and sub ret xorb loope cmpsb cmp or pop inc mov repz popf jbe pop sahf add test ljmp scas pop mov (bad) jmp mov xor call pop (bad) mov fwait pop pop sbb sbb out add arpl ljmp adc inc int3 popf fmull fs call jmp push inc mov xchg sbb inc mov push leave popa das out pop sub dec cmc sbb dec mov nop dec inc inc and leave sub data16 sub add call repz jmp imul or (bad) mov aas sbb fsubrl mov ffree nop or or orb in (bad) fcoms imul sub fsubrp movsl scas xor mov scas push push ds (bad) xlat fistpl push leave stos sbb sub aad pushf popa cmp cmp add in mov inc add dec mov int or jno aas mov js push adc lea push pushf jmp pusha call push pusha jmp gs mov dec push xlat mov push mov push sti aaa push mov les aam lret dec out or mov enter lods sub mov push dec ret jecxz rcll sbb aas xchg fisttpl hlt add jp dec rcl lahf cmp pop lcall mov bound dec scas repz stc orl pop idiv (bad) cmp sbb les fistp and in mov xchg jno clc or (bad) stos inc dec inc lods mov pushf sarl fbld mov fnstcw incl aaa jno sbb in shlb push test aas xor mov jbe push inc mov xchg out lds addl ss or jbe jle xor outsl xlat jno mov loope mov aad in cmp pop lods addb shrb push mov adc fldt enter in cmp out lea jno in sub inc cmpsl jecxz cmp call push cmc pop lods aas inc sbb in push dec mov push adc cltd add clc call scas js xor dec push and ja std fst out pop xchg or mov in or push shll jmp fsts ret sbb js fs fadd pop orl add aam lds sub aad popf fimull les push inc pop inc mov loope mov testl pop jne adc (bad) xchg in icebp sub inc pop dec jns leave mov lret push test (bad) iret push jle in in mov sbb addl into data16 loop lock repnz popl mov xchg mov mov nop test pop xchg stos fnstcw mov mov aas clc lahf divb dec mov movb movl pushl pushl lea jmp mov dec push repz jbe cmpsl aaa sbb in or sub dec xor scas jae addr16 jle iret xor mov xchg daa add sbb mov pusha sub dec out xor mov xchg dec push cmp add pop js aaa test in aam fcoml cmp popa mov das outsl add mov mov outsb leave and jno fnstenv lds ss aaa mov daa fisttp push or inc (bad) jbe sub incb test sub mov ret dec add lcall sub cmp fwait add fwait popf xchg fistpl pop call addr16 pop aad notl test xchg push int stc add or cmp lock ss enter jecxz jnp push push sahf ret xor jne movsb pushl mov xchg je pop lods mov add jl or arpl xchg mov stos mov sbbl and stos xor data16 push or xchg loope dec insb (bad) ficoml mov xchg rclb push in dec push or dec test cmp xchg imul shrl leave pop pop cmpsl aaa jmp mov inc daa push call int jecxz idivb cmc sbb cld enter fidivrl lcall std or hlt lret sahf repz push outsb std in outsl pop cmpsl cmc outsb es aas xchg mov dec (bad) or mov in mov fdivs int lock push mov pop mov mov jno push stos (bad) nop sbb dec sub out add mov lods lret push add std sub jmp icebp ss (bad) aam and outsb lds pminub dec push dec inc push xchg jno cmp jmp stos (bad) cltd cmpsl in pop and (bad) dec in inc mov xor or in rcll xor stos repz xchg mov ret and dec inc xchg push jo adc test (bad) jp mov out push mov dec and fldt insl xchg push cwtl sti inc sub sti pop gs and xor mov push fnsave les sbb pusha cmp mov divb imul mov sub (bad) and sbb inc inc inc out push outsl decb orl lds sub div mov andl call fnsave (bad) xchg int fistpl pusha and mov (bad) xor lods push pusha mov bound data16 loopne adc mov pop idivb rcl push sbb test jle sub jp pop js popa lods cmpsb push push mov mov ja or incb jge repnz repz popf pop xor iret out inc repnz imul push cmp adc outsb mov push mov inc jne out (bad) test push pop mov push adc mov mov pop leave das sub add es (bad) test dec mov inc leave nop fdivrl mov movw call mov lea repnz cmpb adc arpl cmp fidivrl rcll xlat inc hlt push sub lds sbbb pop rcrl lahf xchg xor mov bound push ret adc movsl xor mov ficompl push daa or xchg lods xchg mov sub outsb mov jbe cwtl loop sub add shrl iret inc xchg add daa mov loopne or stos fiaddl js inc adc call and lret jmp jmp adc fstpl xor pop out jae enter mov xor scas (bad) dec in pop jno mov dec aaa lret rcr fsubr push inc or inc sahf add mov ljmp cli clc xor mov pop jecxz decl pusha xchg adc xchg out dec jle sbb sub push mov push sbb adc push lods fistl call cli adc jns sub out push repnz xor jle out dec (bad) mov and dec aaa imul nop clc repnz xor push (bad) push sub lods cmc test stc test xor pusha dec jmp push lock std std lea addr16 mov ret jp push (bad) lret and or adc pop pop ss rcr sub loope dec dec mov push ret out sub cmpsl test dec addb (bad) xchg push out aam scas stos inc stos mov mov inc jae enter xlat inc pop pop fwait dec jmp cmpsb mov cmp xchg push es cli sub dec or or adc and aad iret test jno mov mov inc xchg dec (bad) mov ja mov adc sub test dec scas scas jns (bad) fcoms arpl fldt xchg repnz sbb mov hlt popf pushw out out push pop and gs ljmp test sub mov in adc xor pop aam in mov sbb adc rcrl inc nop arpl pop stos idivb je jle dec (bad) push mov mov aas dec (bad) ret lret mov (bad) fimul (bad) jne and pushl jmp jmp sub dec push and je les mov ss faddl mov mov xor pop mov inc movsl and rol out mov pushf mov imul xor sub jl aad mov clc movsb jo xchg scas xor pop aam loopne pop call xlat out test subl jl mov cli adc test and (bad) or scas dec or dec xchg fldcw inc ret arpl das rol fiaddl sub inc mov gs adc pop mov in je mov dec shrl jp sbb adc push fs mov and adc out mov aaa aas scas clc xchg jge outsl sti pop testb and rcl add (bad) repnz xchg mov and xchg pop je pop cs cmpb push shll ds jecxz daa dec insb orb cmpsl cmpsl xchg scas movsb sarb out idivl testl das add mov mov inc xchg and call jmp pop adc push jbe xchg sbb js and cld mov sahf aaa mov xchg out mov sbb das out sub ss push pop dec push add rep lds outsb cltd icebp stc inc dec mov out pop xchg call (bad) loop xor sub xchg in jo sub scas out jns imul or ss and pop sbb push cmc sahf push clc and xor cs shrb pop mov adc (bad) leave test sub jge dec sbb adc pop lcall mov popa js jp add cltd jg js mov sarl inc out mov adc pop (bad) stos arpl ret inc inc outsb rol mov aaa jb sub dec loop jle mov ss lods subl cmp push lahf jp pop mov sbb icebp lock ja mov cmp outsl ljmp lods mov fwait adc loope cmc dec push lods ss mov push hlt mov addr16 lcall aad xor and cmp dec mov sub idivl xchg test adc lea mov inc and push adc iret aam std jecxz jmp mov lock cmp xor lock aad add aam outsb cmp xchg xor rclb or outsb test lods pop daa push ja xor in iret jae int out js scas xor call movsl pop cmpsl sbb mov push fcmovu inc mov xor pop mov push jle,pt test fwait jmp jae or fs jae stc clc cmp jnp pushf pushf pusha lea ja inc inc inc jmp pusha movl jmp jmp pushl pusha lea call push pusha push lea jmp clc or out (bad) dec push mov dec add add jle hlt xchg and je enter mov or fisttpl xchg add adc inc icebp divb jl imul xor pop (bad) lods dec leave push cltd xchg shr int3 inc loop stc xchg adc mov mov xor mov scas and leave js imulb sub cld sahf out inc add repz cpuid repnz popf xor or lea jne jle int sbb xchg xor push dec pushf inc push lds cmp imul sub movsl adc add aaa jle inc insb cmpsb sbb sti pusha (bad) jg inc pop mov (bad) dec push enter sti and xchg rorl mov and jae das cmpsl rcll enter enter xor xchg mov push push es cmp sarb mov add or addr16 mov push cli sbb inc xchg test cmpl sub je mov mov cmp xor lock arpl testb cmpl xor and and repnz fidivl insb lret push hlt xor cmp dec pop pusha xor rcrl mov lock push mov push xchg mov out push (bad) je fisubrl cmp push (bad) push cmp mov jge leave pop xchg jge cmp int in jno and xor pusha inc ret adc adc add xlat insb fldt in push mov fnsetpm(287 gs mov lds scas sub xlat out xor outsl les mov push mov add lock mov and loop icebp sahf loope js mov pop jecxz xchg ljmp and fs je not sub inc add sbb mov jmp dec mov add jl mov dec call ljmp in test cld add cmp push add pop mov aas imul in inc mov sbb jo pop out push (bad) out jo popa (bad) popf dec and push ds pop in movsb bound rcll test insl outsl nop test testl nop xor xchg daa ret lock arpl icebp movsl mov iret movsb dec add mov xchg add or pop push sbb jbe sbb jne add add cmp sbb stos loope insb mov mov jnp icebp dec push (bad) xchg jne and or xor (bad) lcall dec pop dec xchg (bad) push sti (bad) test mov in cmp test pop dec aam xor mov das xor (bad) sub (bad) js dec popa or cli jmp sub pop push push mov insl dec sub jge das clc out arpl sub adc in fistp sub outsb xchg es outsb cmp jo push pop nop push push les xchg outsl btc xchg es loopne mov jae out test cmpsl fcoms sub test adc repnz push mov out std cmp lds xchg cltd out aad and ficomp fisubl stos cmpb mov mov ret push stos ret sbb dec fmull xor (bad) xor cld add movsl fistp adc incl mulb rorl insb lcall xchg std stc or jl cmp jno mov repz dec and ss mov xor cs je push sahf and push fisttpll pop divb mov loopne pusha ficomp fsubrs mov gs mov movb cmp xchg in sub mov mov push leave mov repz push mov sar sub pusha jg xor mov sbb jg adc jne call ret adc (bad) fisub add xchg je jge mov dec xchg dec out mov scas push lods xchg push popf aam lds inc idivb dec sbb jae pop dec dec xlat xchg push add mov adc xor into into add sbb mov push adc iret cmpsl inc inc jmp inc mov daa xchg dec lcall adc ss dec add fs movsb adc jmp adc popl ret mov std and xor sbb inc loop (bad) jno sub es es fildl sahf loopne repz push gs add and stos ret daa out loope fbstp dec cmp inc mov mov mov movsbl lcall xchg inc mov mov sbb dec push or push fdivs sbb outsb inc je in pushf mov xchg cmp pop ss std adc into cmp mov cltd call pop pop rcl in cmp aas and cmpsb (bad) dec mov (bad) and insb call dec stos mov xchg pushf adc loopne sub lods shrl push mov sbb lods test (bad) lret xchg mov fisubr (bad) outsl bound mov mov jns std stc xchg push gs fldcw addr16 cmp push xchg inc test daa cld add sub decb jae pop lods test (bad) lock icebp and mov xor pop out and sbb ja or cli cli fsubp cs cmpl and cwtl (bad) repz dec mov in push mov and ficomp in cmp dec xor dec in mov sarl inc sbb cld rclb adc jle add push leave ffreep pop decb cmpsb stos xor les (bad) xor xor jb mov dec push lret jo xchg push test call mov mov inc xor int3 aas hlt dec jno sub cmp out mov push inc inc jle (bad) dec mov push enter dec jmp pop and push jno adc outsb test push fnstsw out clc lcall or dec jb cltd jno cmp xchg popf pop push ss mov mov in fs ret add popf movsb add cmpsl xchg push imul jne fwait popf pminub cmpsb jb cs mov push push in inc add (bad) mov xor fwait mov dec loope adc pusha pusha mov jnp sub jo mov jecxz dec push push adc outsl cmpsl fistpll test fwait dec scas jl sub jo dec clc scas stos sbb sarb cwtl jb dec push push inc mov or xchg lods dec pop and jp mov add mov and in or cmpsl and (bad) lds orl ret xchg loop stos push cmc xor inc inc inc shll pop add adc mov into or dec and or and add inc xchg decl cmpsl pop cmp ja xorl or push sbb in cld std dec enter dec ret pop test jnp mov adc test fdivs xorl subb aas sbb adc adc cmpl cmp ss jbe insl lds sub test and dec jmp inc insl mov pop sahf mov mov test leave mov ficoml fildl and xchg mov std push mov sbb in sbb iret push and dec popf pop or int3 jmp jl add fbld and jae pushf lea jne push pusha stos movb pusha movb push lea jmp into mov stos clc dec push cmp popa pop mov jl out mov pop pop mov xlat test pusha mov (bad) jge std (bad) (bad) pop add xor add ss push lret or in jbe push cmpsb mov ds push xor cmp fnstcw xchg test test pop insl lds adc (bad) push leave repz push inc inc add mov and and loopne ss mov lea in addr16 add sahf mov lret jo sbbl jae cmp pcmpgtb and add fidivl xchg cmp mov and lcall or cmp push sbb pop in pop jno jne addr16 push hlt push stos fdivrl or xor outsl movsl pop lods ror test test arpl lods (bad) cmp mov scas sahf adc cmp mov arpl icebp cs scas mov (bad) xchg adc stos xor inc mov push leave mov mov fist neg jne jbe xor or mov addr16 add jge int3 mov mov xor scas dec stos xor inc push pop flds jne enter xchg lret ret push jle sub (bad) incl push push xchg stc dec push jnp adc cmpsb test mov add fsubs repz xor int sbb cwtl aam aad inc sarl out (bad) xor fistpll or shll pushf stos (bad) sub repnz cmp cmc pop or dec subl pushf jb adc mov sar (bad) notb jo push in es ret aas adc stc mov lahf mov ds leave cmp inc dec jnp adc mov and leave leave mov outsb xchg lret movb movl jmp adc sbb fcoml add shrb ljmp inc into dec xchg mov dec cmp xchg repnz or scas nop xor jnp outsb push adc in add data16 xor dec stos js mov (bad) push aas push imul or or clc mov mov push popw jp cmp mov sub in outsl pop fmull leave jb or repnz sub nop inc nop lods mov xchg mov sub jo jg jmp fnstenv rcr cmp jg xor jno xor outsl jg fldt pushf call iret push or aas stos rclb jb cmp inc sub jno xor popf pushf pushf lea call pusha adc pushf jmp bt clc sub sub jp push not clc stc bt clc xor stc stc not cmc rol lea jae not pusha jmp jmp push call sub movsbw not add rcl setno shr mov rcr dec neg mov cmc test jmp (bad) jecxz icebp div fdivr ljmp call cmp cmp call add add test add add add insl roll add rorb inc test add add add les add rorb dec test add add add fimul add add pop add std add sbb or pop test add add add pop add add pop add push or imul add enter xor or jno pop add rorb jge pop add movsb or inc rorb test add add add inc arpl add add add add add std add push rorb xchg test add add add mov rorb popf test add add add sub add add add add add add rorb lods test add add add mov add add add add add add rorb mov add add add add rorb add aam dec push mov push mov je jmp pop ret adc xchg int and arpl xchg inc ret cmp mov jmp push lds fidivl jmp outsb adc cmp clc adcb sub push inc test sub inc jo mov or (bad) (bad) call lahf adc call shl inc jo popa pusha nop jne sub jge (bad) xor inc mov loope repnz outsb sbb add out adc xchg mov (bad) pop jmp js or jmp fimull and xchg insl popa xchg fs jae xchg call add jp sub jmp call bt cmp xchg bt shrd sbb shr mov call lds out dec push jo xor repz lea xchg (bad) and gs mov inc sub scas push mov je sbb sub mov stos push bound or and pop arpl lret sbb dec loop aas or xchg shrl add fiadd dec in fs movsl fwait adc iret addr16 pop fisttp fsubrl pop xor xchg insb sub bound xor mov or gs mov mov outsb mov popa (bad) leave das dec cmpsb cwtl in jae pop adc fisubl inc sbb lods out add mov push fimull mov jg adc (bad) mov pop dec push jl or stos mov mov jle add lods pop pop adc adc fs nop or push leave test negl adc pop mov mov sbb movq and push movsb adc dec das pop mov stos sub mov imul pop inc in inc les or push add xbegin adc mov jmp jno loop in (bad) mov lahf pop popa dec push mov rclb xchg jo in fs fwait mov gs xor xchg lret xchg sub scas inc sub pop adc pop fucom addb aaa mov cli and repz or add lea ss scas in enter dec test push lds push fdivrl scas aas push int3 clc push rorb pop mulb (bad) mov pop jmp ds dec ljmp mov arpl sub in or lods sub cwtl sub cld addr16 or jae lret inc sub scas mov xchg lea stc jo fwait mov into push push int jae mov mov (bad) sbb (bad) sarb rolb xor pusha lahf lds addr16 inc in fwait cmpsl dec sbb jo pop je movsl inc dec cltd cmp je ret adc add xor cs mov mov es dec iret add nop sti xor aad daa pop adc adc mov fisub push clc dec pop mov incl push push scas sbb mov push hlt ret int3 cmp cli ret test cmp push sbb jno ss xor dec mov mov push mov pusha (bad) jb cmp daa je mov sub pop ljmp jecxz pop scas pop sbb data16 arpl fstpt fsubrs icebp cmp fldcw jns repz jg repz inc add push repz jp (bad) add sub pop repz push fmuls push arpl sub push test dec and jo push cld push cvtps2pi fnsave jae dec fs sbb dec push mov adc mov or outsb adc es lods test clc xchg mov movsb xor imul gs jp je add xchg movsb mov fisttpl or sub jb sub jns gs dec in lea sub inc test (bad) negl (bad) cmp sbb hlt fmuls outsb pop jb dec dec push cmp fisubrl sub outsb out push fistpll adc cmp jl add add sbb mov hlt and fs ja bt push imul clc cmp add pushf lea jmp ds inc add aam mov mov xchg int movsl push rorl movsl or pop arpl repz or or adc mov out testb scas ljmp repz jl aad sub push test or add pop icebp ret (bad) inc mov sub or into aad mov js inc in lret inc jo and icebp jecxz xlat jne adc mov cmp fs mov push cmp addr16 or pop xchg add pushf push lea jmp mov call xor inc xchg add leave mov je pusha (bad) cmp mov xchg stc adc adc mov dec mov fcompl sbb out in (bad) nop call data16 sti add (bad) push ja xor pop popl cmp mov std push dec mov loope test popf add fstps add fistpll in icebp jle jb sbb and (bad) jmp fisubl mov pop mov adc mov add xor mov sbb xchg mov lret rcr xor bswap pop movzbw pushf xchg pusha mov lea mov pushl movsbw pop mov call pop push adc dec out push data16 sbb push add ljmp push insl lcall inc imul jg or mov pop adc add xchg dec jle xchg or push (bad) rclb test push pop mov adc cli jge or mov fsubr mov and test scas mov lret and pop mov lds or loope adc cmp sahf rolb lock xor xor or and cmp mov or sub scas clc out jge fidiv (bad) jg jno loopne inc enter xor cs adc cld mov outsl adc xchg call dec jo adc add in xchg ja xor add dec adc xor mov push or mov lcall rcl sub push mov cmp ficompl es stc or push roll lcall fs jne inc cmpsl pop sbb adc sbb in add loop dec mov roll outsb push mov pop push ljmp (bad) mov add push lea movsl cwtl cli arpl scas and jae pop jns nop mov pop mov in icebp mov push sbb adc jp jae jno aam mov nop adc call push cmp inc (bad) jle mov outsl sub icebp dec jb cmc pop in out jecxz sti push cli mov inc add test out int3 sahf cwtl cmpxchg push pop mov cli pop adc adc xchg cmp icebp pop and loop adc ret jmp jae mov push (bad) out cmp shlb lods mov loop push cmp xchg imul xchg push jne int and iret stos xchg fs mull gs in mov pop mov xlat cmp cmp xchg leave pop out pop xor add jbe xchg arpl jnp cmp fidivl push and dec push js sub xor das pop push dec xchg push addl cmovno push lret dec repnz jns or push mov test out addr16 push incl es rcrb add jle mov cmp sbb xorl push mov test ret or stos icebp je popf sbb push push jne mov add and mov test or decb cmp or (bad) add into (bad) mov and pop sbb pop push repz sbb (bad) mov (bad) mov xchg insb mov (bad) mov jle fwait xor push (bad) imul xor mov pop test jle inc mov aas add js rcl dec (bad) push popf out push jg fild sbb pop test test pop add std cmp lahf push out xor add jg,pt sbb or (bad) mov popf sbb scas add inc out push and sub mov push adc outsb (bad) push push fnstcw repnz movsl pop sbb push sbb mov cmp jbe aaa add imul cwtl sahf jnp push or and jp mov cmp sub je sub ret cmp inc sbb pushf mov sub mov cmc sub jg imul out push add sbb mov and mov and (bad) pop dec sbb mov mov call test notb rorl pop test xchg jno cmp mov xchg lods mov lea addps jns jae dec push (bad) pop std out sub decb insb cmp jns cmp push sahf xor ficomp push fidiv outsb cmp push inc push sbb scas xor scas lea sub es dec push mov divl mov pop dec adc es push insl dec push ja adc pop cmpsl stc jle or loopne ret mov inc adc jl mov mov sbb decb gs cltd dec insl pop lea push cs nop push dec sbb mov xor pop out insb adc pop je inc out call fmuls and mov sub sahf repz addr16 popf push jo,pt nop test cltd push inc shr or sbb ds jge scas bound jae std mov imul lret lahf movsl data16 cmp jp jmp ljmp adc or sbb sbb dec sahf stc jmp ficom mov sub push int loope mov icebp xchg xchg insl fmul sarl sbb insl mov sbb push testb sbb int add sbb adc gs jecxz stc mov sub push push mov fcompl pop ss outsb dec leave aad aad mov mov lock negb (bad) scas or ljmp popa aad imul fcom sub cmc out adc pop cli push add cli cwtl xchg enter clc orl xor mov cmc push das push test test mov cltd ljmp arpl pop stc test fidiv rcrl fisubl jnp clc sbb mov or scas imul mov adc aaa les or xchg aad jg in add push add or add outsl pop nop (bad) hlt or dec dec out fadds dec sbb dec push outsb pop adc fimul push (bad) push dec push or mov push movsl mov notb mov insl mov xor push loopne (bad) not (bad) (bad) mul cmp loop fadds fcomp inc dec push out xor cs mov add cli add dec nopl cmp inc imul pop test lret mov outsb fsub lods push mov in jle (bad) mov add insl mov sahf jae enter (bad) push cwtl (bad) insl push mov fsubs popa ljmp js call (bad) into mov int imul lret jo jecxz xchg xchg cmp sub adcl inc ljmp mov pop out out xor add int popf adc jbe xchg sahf rorl out jmp popa inc adc pusha push or jge dec fist imul ret pop sub mov mov mov dec mov shrb scas dec scas in jle push in inc jns sub push bound rclb xchg je jl or mov ss mov ljmp add cltd mov adc in fisttp jge stos pop pop mov xchg xchg ja jmp enter std imul mov (bad) mov pop adc (bad) int mov xchg test mov hlt test cmc ds bswap lea sbb push (bad) mov mov push in scas (bad) inc pop sub inc popl ffreep insb std xor pop xchg fmuls pop stc dec daa roll jnp imul call dec push pop cmp cmp push stos (bad) pop aad fcoms and aas cmp push mov cmpsb xlat push jmp ja mov loopne cmc push mov push addr16 ds inc in jae cmpsl jg inc push mov lds push mov gs les stc mov jae movsl cmpl fscale outsb mov ds stc out sti fsubs or or dec inc cwtl out push ds jb dec aad push jb push enter xchg or es jp mov popa out jbe popf mov xlat add out cwtl sbb sbb mov cli ficoml push ljmp std fnop push in fcmovbe xchg js rcr in ficoml fdivr mov sahf xchg mov pop aam scas popf in (bad) sahf mov xchg sahf push cld or xchg xchg in cmp pop les cwtl in (bad) sbb adc dec test daa lock adc or mov cmp xchg cli push mov neg (bad) mov push adcl mov xchg imul jecxz es xchg mov je (bad) in dec iret add gs mov jp and cmp jle push adc jle popa adc pusha push jg or adc lret cmpsb sahf ds mov pop cld shr jmpw rol popf jge inc adc cmp cmpsl or and xchg mov or imul (bad) outsb shrb push mov (bad) cmp gs (bad) mov jge inc sbb or push in inc push into fsub mov fcmovnu or xchg inc jbe icebp mov cli sbb mov mov sub insl dec mov lret cmpb ja pop test lcall into mov std sub or dec sub lea std mov cmpb push dec stc dec pusha jp ds or rol mov fst dec fdivrp jmp out mov fidivr jge lods add sbb imul adc sahf jmp popa adc xchg stc mov xchg cli scas or xchg push pop xchg in inc pusha out icebp loope in cli repnz pop call orl mov sbb jns fucompp cltd xchg xchg jge add dec mov repnz ret ficomp in fdivrp or or dec std aaa dec and or push int xchg into rorl int negb jmp rorl (bad) cwtl clc adc (bad) pop jle mov sahf cltd sahf adc dec xchg loope jne sub roll insl cmpsl or xchg std jns aas iret add fs test mov cmp (bad) into fsubs adc and ds lea icebp popf int3 sbb mov jmp jns cmp jge mov stc xorl or imul mov pop jns repnz gs rorl push enter mov sbb fstpl cmp aaa imul test sub xchg mov jmp mov xor aad outsb fadd fidiv je jge inc pushf and mov test mov sahf adc inc xor sub push dec sbbl (bad) cmpsl inc inc test or dec stc jns loopne aad jbe sub dec imul popf lock xlat fdivs pop (bad) mov (bad) sbb inc mov sbb inc lea les clc adc push (bad) pop jo cmp rclb pop in push jo (bad) stc fdivrl jb sbb lcall sbb push loop aas or add scas cwtl into roll sub scas mulb fwait movsb decb push jb jbe fwait cmp ja dec push cli and outsb fcmovu cmp push fimull es jge clc out sahf push stos bnd mov std or sub (bad) es stc cmpsb or mov jge scas mov movsb andl mov dec mov jns fnstsw mov lock aam (bad) ljmp out push outsb lea pop push mov addr16 jle mov imull cli dec les in (bad) or jge lods sahf push hlt test (bad) cli or (bad) mov std dec les mov scas out mov std out (bad) (bad) xchg push sbb mov std push les ja xchg mov std xlat (bad) out (bad) or (bad) cmp push call mov xchg incb mov cli or (bad) or movsb and cli xlat (bad) out pop or (bad) sub les (bad) sahf xchg mov pop (bad) in mov daa int3 (bad) idiv dec fs (bad) cli pop xchg fisttpll test rcrl lea inc shrl leave cli push stc or imul scas sub mov mov mov mov fadds test jmp push cmp rcll mov int sbb adc or add (bad) cli div out ljmp ror lret push mov stos cmpsb mov xchg mov push jbe outsb push bound push push push dec dec inc inc cmp xor sbb add icebp push in jmp aad push int (bad) mov test and cmp jne jno imul push dec inc inc cmp sub push sbb add lahf fisubr sbb hlt cmp and mov sar add mov mov shr xor sti pop imul (bad) fiaddl cmp push dec xlat hlt sbb repz sub adc in lea bound mov sbb push sub xchg jge jp push std sbb jle push hlt das add xchg push daa jo and (bad) into adc lods lcall (bad) push lods push imul fcomp sbb adc hlt add in lock call les rcr enter mov test mov nop pushf mov js push jo push inc push push pop dec xor dec cmp xor adc sub add bndstx repz mul push out sti out fucomip xlat ret push iret fcmovnb mov lret mov push scas mov xchg sbbl fwait xchg mov push outsl jnp push pop imul dec pop inc xor dec aaa and das cmp adc sub stc je jns push leave aad sbb shlb sahf cmc sbb mov in leave xchg cli scas and (bad) dec gs or fsubr notl test mov lock jp mov sti mov push adc mov ficompl or enter xchg pop pop cwtl push adcl test add (bad) out push push push fisub sub and fdivrl repz js pop lea pop cli call sbbb sbb cmp ret int imulb cmp push (bad) sbb sbb ds mov adc lea dec fs or insl lock mov popf sahf ds xchg inc clc cmpsb jp fnstsw pop push dec pop mov fstl dec fstl (bad) call fistp mull xchg in and clc pop xchg or lds scas pop cwtl jo mov inc into adcl mov adc aaa lock push jb xchg ja or addr16 fistp or jl push popf (bad) inc in or popf daa or les std cmp loop xlat and push outsb lcall (bad) scas push or dec test sahf mov or std popf sbb pop xchg idiv popf imul pop pop imul push inc scas xchg lcall push sub cmpsb ficomp lea dec cmp mov loop adc les lcall add push pusha out les push in int3 lret imul add pop push mov ds push push push rcrb adc add ficomp pop test jp push cmp imull mov test push xor je push cmp add pop xchg fstp or add jbe and sbb push sbb cs push pop dec fsubp jne movsb aas push and loopne mov push push xchg and xchg fist rcrb (bad) cmc pop cltd loop xchg (bad) mov mov ret cld bound int3 out js nop seta (bad) mull pop sbb mov inc pop lcall fidiv dec in and gs cmp mov fdivrs cli pop pop daa mov pop in pop popa cs xchg xchg int xlat dec notl les rcl pop popf clc xchg pop aad outsb pop out inc gs pop in std inc test int pop xchg fstpt out clc xchg mov scas ficomp xchg and pop mov insb fadds fdivs into push push out adc xchg test imul into or push (bad) enter mov adc or adc outsb (bad) push cli pop push scas ja sbb ds add mov pop imull mov adc scas push aas mov (bad) xchg dec je cli sahf pop and insl into cmp les push decb add idivb jb jge xchg push clc or or insl (bad) mov xchg xchg cs in into loop xor insb sub sub js (bad) adc sahf out add (bad) dec push (bad) (bad) xlat fmulp mov cli negb (bad) xor sbb dec addr16 sahf std (bad) idiv cmp aaa daa call cli clc ja adcl pop outsb adc push sar xor cmpsl dec pop addr16 xchg fmuls dec sub jbe ficoml out in xlat sub (bad) std mov es sahf lods in xchg in int fsubrs (bad) pop add xor enter mov or movsl lcall mov js sarl or loop sahf pop in lock sbb pop out dec add xor sahf hlt push sbb or fidivr add aaa xor in xlat aaa lock pop mov daa xchg jns pop fldl in cmove sahf repnz imul rcrl scas jp (bad) in and std cmpl inc fisub xchg pop (bad) (bad) dec cwtl ret push clc xlat or out dec adc std add xor dec cmp fwait inc js out (bad) cli pop in (bad) test inc xchg out lahf das lock add lock mov dec out insb dec sbb out or ret imul mov sub popa dec dec pop imul mov fildl std pop stc int sbb frstor jecxz and push fbld mov mov sbb gs popa pop dec push xchg xor rcrl push pop lods inc push cmp inc leave adc adc sbb jle scas add daa xchg lret (bad) enter popf call add mov pop test push push call lcall fcmovnbe pop outsl push loopne jne push inc dec scas adc orb dec sbb rol mov push mov mov cwtl lds push cli ficoml (bad) js call mov cmpsb in jg mov push mov xchg sti icebp push call mov lods ficompl (bad) jmp mov jl mov push mov pop adc je gs addr16 pusha (bad) not std fldcw sbb loopne mov pusha push enter or adc inc push mov add cltd loop movsb pusha bound cwtl push lret aam add ret mov lds cmpsl movl lods (bad) stos mov push cmpsb xor rolb push and shrl pop data16 rcrb in fscale xchg outsb push inc cli orb xchg xchg or (bad) notb std out and in (bad) lds push sbb xchg ss fisttpll (bad) dec mov mov aam mov rcrl cli negb jecxz push movsb (bad) xlat fiaddl cli adcb cmpsl mov mov dec nop pmaxsw sub out (bad) scas mov pop aam sbb (bad) cli inc xchg adc dec (bad) adc push xchg (bad) or pop add (bad) sahf mov les test pop ret mov xchg repz (bad) inc mov std mov jne cmp xlat js fidivl cli mul mov (bad) dec neg call cli data16 xchg sbb (bad) and pop (bad) or in (bad) insl mov std loopne test js and in fidivl push mov out std and (bad) (bad) das faddp jmp lea (bad) std mov enter aaa xchg jns or inc movsb add mov iret or movsb cltd mov push roll mov sub sub rclb stc pop cli (bad) mov aas clc out ret fisubl les ficompl jo sahf out or (bad) mov or (bad) cli scas pop mov aas sbb xchg xlat xchg pop or (bad) clc sahf out rorl cli js jge int sbb mov bound scas or mov jle inc mov xchg or add sahf insl pcmpeqw cli xor ret inc push test xchg jp (bad) fisubl test or call or int3 (bad) incl push sbb xchg cli out or (bad) repnz std push (bad) (bad) xchg ret and loopne or cmpsb pop cli fs fstpl rcl into push das aad imul ficompl sbb std es push add aad lea gs cmp jp pop ja sub push add mov loopne push inc mov push scas insl dec inc add push clc and mov sub outsl sub add sbb dec decl insb mov fdivrs dec aaa cmp jns adc dec js dec add and outsl sbb cmp jae addl mov jbe push push add es sub push xchg je push dec push xchg fwait (bad) sub and add pop lds pop adc es push fidivrl into push and xor add in inc sbb cwtl cltd mov push mov or mov out rsm sub jno mov cld sub fild imul cmp push divb lret sbb lds out push divl dec mov push insb outsl jbe inc sbb das push push lods and daa xchg push std sbb sub fidiv or mov aam test pop cmp ds int fmull nop and push nop out (bad) pop push bnd push adc fcomip xchg pop ja push and rcrb inc mov pop test sub cmpsb insb mov in (bad) sbb and fistpll popf inc mov or cmp into stc jae pop mov popf in bound lret push mov xor and add push popf ficoml scas aas out les push push cmc xor sbb in jnp add push push sahf inc push shufps jo imul lods stos mov mov xchg pop lock in arpl stos outsb ror fisubr movsb cmp mov sar push (bad) out adc xor push lock mov daa cmp outsb ds ss cmp and inc addl int jo lods pop shlb popf sti mov insb mov cmpsb cmp and add fdivrs (bad) or push sub cmp sbb (bad) fcoms mov pop sub insl fist inc inc loope aam lret (bad) das cmpsl add push (bad) outsb push inc andl cli imul gs jg sbb out cld xchg adc cmp enter loop inc inc pop dec fs push cmpsb pop mov push leave roll adc lods out mov mov dec fwait xor jnp add mov add dec or jae fwait and icebp sub push mov inc add push ss adc or inc or cwtd xchg rol aad lahf bound lcall movl stos add and push adcl negb push push cs (bad) movsb jp rorl lret adc mov jae in push lds mov (bad) jge push rclb pop popa push mov and lcall xchg push xor xor push and pop mov push lods outsl in movsb mov outsb add dec icebp push push jl rcr add lcall test pop mov cwtl stc sbb mov and add pop jne mov sbb cltd add mov jecxz cmp mov aam adc in push pop (bad) xchg dec pop or rcll in xchg inc inc pop pop jl (bad) out adcb fistpl pushf mov into adc lret daa mov outsl jl sbb add out int3 rcll dec cli cmp push repz mov and lock ret pusha ljmp scas push mov inc inc adc scas push cld add xchg cmp push inc mov mov enter mov xchg mov adc out fwait jae mov adc hlt mov sub add push sbb lret push mov ds push lods dec xor scas (bad) xor sbb dec stos neg adc push sbb mov les icebp sbb inc cmp mov loopne outsl mov cmc or aad adc jne aam pop sbb push add hlt int lods push and int3 push movntps pop cmp mov (bad) pushf pop aaa into push dec pop xor adc push bound push xor pop aad push js inc stos push or jle xor cli es lcall (bad) mov xor push push je push push sbb inc jmp xchg ds push push clc add sbb scas out mov push (bad) push cmp push test jmp jb negb push cld arpl push insl mov jne hlt or ret mov mov out lahf add popf sbb sbb sbb leave xchg sahf rcll (bad) cmp call add dec (bad) cmc cwtl nop sarb xchg cltd jnp sub shll xchg cmp mov in in push inc dec es das (bad) mov out lea popf imul dec mov jbe mov add rcl ljmp inc popf pop mov pop (bad) cmp test add push shll fmull popf test push xchg les or add and adc mov jmp pop (bad) and movsb mov nop fiaddl jecxz cwtl icebp cwtl inc jb push pop inc fisub std xlat mov inc xchg test mov push scas testb pop push sbb ret sbb ja (bad) gs jg push aaa arpl xor bound scas lds xor mov push or pop ds add aam clc ljmp std dec mov add scas xor inc lods add sub push rcll dec adc push xchg popl pop pop xchg pushf adc xchg mov sub push pop rol shr (bad) popa push push pop xor daa mov and inc jle cmpsb (bad) (bad) mov push mov (bad) out aas clc pop push adc lret mov out sbb jno add xlat push sbb (bad) push or outsb add fwait inc xchg push imul movsb mov loopne push mov add mov stos lea add in sub mov es mov int3 inc mov (bad) movsb pop push pop rolb es popf adc or sti pop out pop addr16 (bad) jle cmc cmpsb and inc fwait sbb xchg jns mov test aaa mov cs (bad) cmpsl test pop iret mov sti repz outsb imul je lret sahf xchg popf das mov or jnp push pop push and (bad) fidivl fwait pop and bnd je push sub jbe push push das idivl push in mov mov into imul dec cmp addr16 push and outsb and cli and mov or inc sub clc add jns jecxz push inc fiadd stos sub add daa xor and pop mov cmp push fnstenvs lea jmp add stos lods hlt mov cmp sub stos push call test push jnp xor jle sbb jae adc in adc popa stos cmpsb adc push push mov cli je mov sbb sbb sbb cli aaa push xlat inc mov dec mov pop push cs in add push gs or cmp sbb xlat add xor imul add pusha mov push aaa pop call insb loope ss mov jne push cltd push lds mov xchg and adc and xchg movsl jg mov fucomp adc xor sbb fnstcw fistpll push addr16 les add jns dec push jae das clc push push sbb insb fldl rcrb ds xchg femms push faddl sbb xchg xor out dec mov cmpsb push int fist mov adc adc inc xor sbb aam push and add xchg push lods cmp int3 arpl (bad) mov adc jl (bad) lcall sahf pop pop sarl insl cmp repnz and push mov mov or insl (bad) mov dec push pushf jg es xchg sbbb dec push jo dec mov cs nop test xchg adc orl lahf lods lods jge pop xlat cwtl ds jo int3 fimul push (bad) cmp ret addl repz fsubr test adc mov sahf inc push lods or pop aas fidivr fimull sbb xor xchg and push imul sahf adc cltd sbb js es test adc imul clc stos sbb push or outsl adc mov mov in mov and xchg push jo test push xor sbb pop sbb or cwtl mov dec les mov cmp push outsb clc loopne push test push movsb adc mov rcl fadds xlat pop lods pop cmp sbb push push xor push mov lods pushf dec out sbb xchg ficom js ret push popa cmp (bad) or pop mov adc xchg outsl out push xlat mov aas iret int3 mov cmp mov jg cwtl sbb in xchg pop sbb mov adc stos scas jo push mov and push mov mov fisttpll jl add sbbb clc enter mov mov popf test inc push xchg dec lret stc sbb mov hlt jno jle,pn ja pop inc stos dec cmp pop mov push xchg mov inc lea sub jp dec leave sbb cld pop inc jmp dec mov aad int shl push scas fimul mov add negb mov xchg push push cs mov cmpsl push (bad) xchg (bad) das jge sbb out data16 push ror sub inc mov pop push scas xor fcoms jle out cmpb das push sub push (bad) xchg and pop add push pop xor xchg push repnz add (bad) lret mov rolb adc mov mov xchg push mov xchg mov add push sbb pop jne and jae shlb lret sti mov cmpsl sbb mov pop inc cmc jge movl mov push stos xlat mov jnp sahf out mov in js push rorl cmp mov sti es sbb popa xor out out or push and (bad) push jb (bad) adc push mov ds insb xchg mov loopne xchg stos inc cmp cmc imul xchg out adc sbb jne sbb lock outsb int fld push xchg bts add cmp mov push cmp pop daa dec mov push inc ret add lea mov push fwait dec int enter mov sbb push mov xchg push inc push pusha jp sbb dec sub cmp jl loope,pn pop cmpsb push je push sub out mov jge sahf mov xchg mov mov push pop jnp mov leave push aas sbb in sahf mov push (bad) stos xchg fidivrl ret push inc ret mov mov (bad) xor outsb and out lcall inc push dec scas insl sbb xor sub cmp fcompl ficomp push sub pop pop push mov and fistl add adc cwtl dec sbb push dec stc or mov dec pop (bad) loop push jp sahf or add push pop flds pop push std lret les scas jns and push lock add stos loop ficom inc loopne and imul cs pop ss iret push pop cld xchg scas xchg mov pop xchg jns push imul std inc stos sbb pop (bad) int3 xor repz fcoml (bad) cmp leave rcrl add jbe mov enter dec rcrl dec (bad) int movsb in push and mov jnp fsts xor stc mov dec repnz or cld add push jbe lock pop test rol mov idivb (bad) lods jb and pop std or int add cmp movsl pop pop jne cmp loop out arpl or and or add xlat (bad) popa push add push mov in ja cwtl (bad) sub sbb es sahf xchg add in or cs test fcoms push movl cmp or pop push (bad) jl xor or fsts int or out cli (bad) jl out shll mov cltd test add inc std leave stc cmp ljmp dec push shrb int3 or jb movl cmp push and pushl in pop adc nop or out cli sbb sbb or es or popf icebp pop and mov push fldenv sbb sub or inc je nop add xlat fstl imul mov jnp pop mov test les sub mov push adc mov std fiaddl mov popa test cs fimul push outsl sbbl push into fnstenv jle lcall sahf mov stos addr16 push outsb inc adc and test pusha pop ja sbbl pop push out jecxz dec jns out mov cli sbb rolb xor pop add add mov and add (bad) fs xchg adc cmp xchg mov movsb lcall add push mov xchg pop arpl xor hlt popa mov push out cli mov push pop mov jle sub dec mov (bad) cmc xchg add xlat inc or jecxz pop aas add aad arpl xchg sar push int3 fsub sti jb sbb (bad) mov inc out int3 arpl mov (bad) into push popa fstpt sarl push mov std test sbb jecxz maskmovq divl xchg scas pop mov arpl cli or ds push pop inc inc iret cwtl jmp addl pop pop xor pushw popa pop push mov cmc scas scas jecxz push xchg repz movsl xor mov sbb dec cmp jnp sbb add jge or adc add js addr16 add cmp cwtl push dec test sbb in (bad) data16 (bad) xchg sub cmc push pop jl add push push in orl mov sbb pop dec xor js (bad) scas nop jno push pop int and aas push lcall sbb in add push mov push add aaa out pop sbbl not xlat inc cmp scas ret jecxz jp les adc leave iret push fdivl int push or jmp cmp xor dec cmp push jmp dec sbb inc push push aam movsb scas cmpsb mov fdiv sbb cmp icebp push inc adc sub mov outsb (bad) xchg push mov cwtl icebp stos lds int xor sub cmpb add push jne popa push ljmp lcall pop out push subl fdivrl ret pop out cltd and scas aaa push pop push dec mov mov push bound jecxz mov sub lods dec mov test in and test cmp movlps mov negl loope pop (bad) jbe outsl scas push lret xor inc pop push inc cli or jnp jg push (bad) lock jbe sub inc cmp std and aaa pushf cltd stc test pop cmpsb xor jmp loop push push hlt jge inc sub sbb loopne outsl mov lret addr16 hlt inc sbb inc addr16 xor vmovlps stos icebp out jle and and and (bad) jl fstl add ds xchg cli xor loop mov dec and xor repz sti nop mov ss adc cli es and (bad) xor test mov test or ja int cs orl out mov insb or and cmp dec add test jo mov mov inc ret pop cmc stc arpl dec add mov stos adc and xor inc or sbb cmpsl inc xlat add dec push out pusha mov sbb jge dec dec mov xor inc shll fwait push fwait mov inc xchg ja mov mov inc scas add or mov ret test les xor arpl imul in push jecxz ja jb pop ja out call out xor call push cltd popa adc add xor shlb in dec adc sub pop lods lods aas in dec mov cmp jmp lret inc pop sbb mov pop sti ss aam cmpsb xor test outsb xchg cmp jae mov sub push out adc pusha movb lea call push pusha pushf lea jb pushf pushl ret testb xor mov pop pop ret adc subl (bad) push and jb inc out in push je jg xor xchg fwait mov add faddl loop lret sub or lods nopl rol shll inc test sub jecxz sbb cld push sbb ljmp sub leave sti push dec jns ljmp cld (bad) xor add popf mov stos int3 cmp fwait add inc xlat out cmpsb fiaddl loop inc push push adc mov add adc (bad) ja data16 repnz adc adc insb inc sbb cmp jecxz lss sbb jns cmp push cld repz ret jecxz jmp add sti flds cmc dec fstpl xlat imul fildll lods mov xor fisubr shlb aad jp cmpsb jno lret mov sub or pop mov jb xchg jo (bad) movsb hlt iret mov and stos jle rep and pop rcrb jmp inc and (bad) (bad) sub pushf sbb lret int test xchg ja fsubs fs out (bad) hlt addr16 or mov xor cmp or clc and pop hlt ja inc into rorl cmp (bad) aas out aad aad jmp mov jno inc out lods jge sbbb les xchg push pop mov cs or cmp mov shl jmp jno mov lock lahf mov sub das daa imull enter outsl inc out das xor cltd cmpsl sbb (bad) in push nop mov test test jp mov mov xor mov jno out mov cli sahf xchg or (bad) lret or cmp imul mov xchg jg (bad) and xchg cmp imul mov lds mov dec pop int clc cmc imul clc cmc cmc add pusha push push pushf lea jmp jecxz (bad) movups jbe and dec add or outsb mov sub stos addr16 (bad) xchg pop mov adc sbb mov jne arpl or ss fdivrl hlt roll sub sub pop cmpsb test dec inc mov push (bad) ja mov sbb repnz out xchg enter xor push iret cs dec ja sub mov mov (bad) inc fs (bad) lret jb das (bad) adc bound es fsts movd xor mov fidivl into jae leave out (bad) hlt cmpsl mov mov popa jge fistp orl pop clc faddl xor lret cmp and sbb aas dec push xor jp and mov jp into adc jo jle (bad) adc (bad) sbb cwtl das mov xor test inc cmpsl push inc lods jle pop inc (bad) or in mov push hlt stc sub add into mov pop aad push xchg scas adc add mov fsub xor ret ror xchg adc mov insl fstl repnz into rolb (bad) lea push sbb aas (bad) divl dec rol or and aaa gs cmp fmul sbb bound inc xlat xor dec push pop fiadd out dec push mov rorb (bad) add int3 shr shrb aaa (bad) (bad) andnps (bad) push mov cmp jae aas jmp scas mov stc adc testl adc sbb test repz mov outsb xor iret mov and push leave cli daa ljmp jmp pop xor leave xor cmp arpl or (bad) lock inc test cmpsb pushf idivb shll pop add inc ja pop lea push cli inc pushf add or repz mov lret (bad) mov jae and mov jmp loope push mov dec push push test cmp je sub cld jmp add (bad) cld insb sbb cmpb dec adc mov add jnp imul cmc not cmp jb push enter insb rclb add mov iret jp fbld fwait js xor scas fnstcw adc pop shll pop lds jle adc sub jnp mov loop loopne fldcw pop xchg out iret dec rcl fucomip sub cmp (bad) cmp and xchg dec gs inc pop mov mov add pop jb inc test jnp imul cmpsl leave add cmp inc fisubrl mov and mov cmp lods bound cwtl mov cwtl xchg out mov push adc xchg mov cmp leave iret sbbb jnp inc mov rorb sbb imul add push xor mov (bad) aad cs out in xor or test movsb sub or mov addr16 fs jae dec inc xchg mov pusha mov pushf inc setae mov call dec mov call clc xchg sar mov jmp lea jl call pushf pushl bt cmp movl lea jae push movb call stc xor push cmp or jns xor mov pop (bad) dec sti or fist xor push shrb out ret clc mov mov loop ljmp fcmovne jne divl mov or xor jnp cli lea (bad) mov das out fldt mov (bad) xchg lock jge cmp fdivrs dec add addr16 push (bad) jae jns xlat adc xchg push mov inc mov adc shlb (bad) jo shll jo xorl pusha push push mov push dec outsb scas adc (bad) out test das pop lret mov jmp movsl lods or mov fildl aam cmp cmp call jbe lods js dec push daa dec loop push in enter loop addb jbe xchg mov cld sub loop test sub xlat fdivl bound jae mov daa lahf jae test mov (bad) push xor (bad) int xchg call aas cmp mov and xchg xor push xchg iret mulb and lea cmp add jle in lods sti pusha sub pop fwait imulb dec (bad) mov or inc jo or das lea mov arpl (bad) hlt call shrl fist (bad) jno in mov loopne incb shrb and in (bad) call mov outsl cmp xor jp sub jbe sub mov lret call push fiadd xchg testl cmpsb push loopne (bad) mov and sub rclb mov mov adc cmp push rcll cwtl aas inc inc pop mov xchg outsl push repz sub xchg mov jg outsl (bad) popf fbstp pop mov dec jo add (bad) mov jne mov test stos jmp clc xor ficomp mov loop icebp and pop movsb iret push lea orb inc dec push cmp inc ret inc or or or xchg sub sub xchg (bad) or inc cmpsl scas std cmp and sti push mov test mov mov dec add je movsl fild pop mov or adc push jecxz daa aas scas stc sbb mul ja fildl mov ret out dec call xchg sbb jb jno aas pop mov jns in dec mov push jmp pop mov popf xchg fadd iret sar nop push push push sti jno jecxz (bad) pop repnz xor (bad) mov and mov lret push loop imul adc or or jmp pop sbb fs out mov (bad) iret shl push scas pop mov scas jo movsb into or push das ja out xor push movsb shlb sahf ret cmpsb js daa and cmp or sub inc pop pop or sarb push bound es xchg sarb shlb jmp inc lcall (bad) popa arpl pop sub xchg and (bad) and repz bt mov cmc clc pushf cmpb jmp movw jmp pushf movl movw pusha movw push lea jmp mov clc pushl cmc cmp add pushf pushf pusha lea jmp jmp mov pushf popl lea jns pushf push pushl pushl popl pushf mov movl pushf lea jmp pusha sub jmp jmp bt sub mov mov mov mov mov push pushf lea jmp divl push mov push mov push jmp pushf pushl popl pusha pushf push lea jmp pushf popl call mov mov lea jge pushf push movb pusha lea ja popl pusha lea jmp rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp movb call mov jmp jmp mov pushf lea jns push jmp test stc bt sub call pushl add pushf lea jo push pushf mov mov lea jmp lahf aaa xchg mov btr sub mov clc clc bt add pushf mov mov pusha lea jmp jmp shrd inc mov jmp call ror aad xadd ror mov adc bts jmp cwtl mov pushf mov mov pusha pusha mov push push lea jmp pushf pushf mov pushf push push lea jmp mov movzbw setbe not mov bswap movsbw bswap mov seto pusha xchg lea xchg lea setae setge mov xchg lea lea push push repz popl xchg pushl mov bswap xchg push mov movsbl mov push inc rcl rol movsbw push call mov push movb push lea jmp lea shr xor rcr shld movzbl cmc inc cmc sbb lea jmp pushf pusha mov mov pushf pushf lea jmp jmp cmp stc add pusha jmp call pushf popl pushf pushl popl pushl lea jmp mov push call pusha mov call pusha aam add mov pusha call call pushf pushf popl pushf jmp clc pushf clc add jmp sub jmp jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp lea jne stc push stc sub pushf call mov shr setle xor mov lea jg pushf pushf sub stc shr mov mov pushf mov pushf pushf call jmp push pushf push pushf pushl popl pusha pushf pushf lea jmp push mov pusha mov push jmp call jmp mov jmp pushf mov movb pushl pushf lea jmp mov call bts sar rcl movzbl add btc pusha movsbw add bsr add movsbw add jmp add pushf mov mov pushl lea jmp mov pushf jmp mov call jmp bt xor movl jmp and btc shl mov rcr bswap inc sub shrd movsbw add inc mov inc bswap rol cmc rol inc inc adc call sar add xor bswap rol movzbw mov call inc neg mov cmp clc add push pushf pusha jmp jmp lea jo push pushf mov jmp cmc jl daa not notl aas mov push stc test sub jmp stc add lea jno mov pushf lea jmp bt xor mov push bt cmp bt sub jmp pusha pusha pushl popl push movw movw lea jmp bswap add lea push pusha cmp jmp pushl popl movw lea jmp call push mov push mov lea jmp bsr inc mov test add pusha pushf pusha lea jmp jmp mov bt or movb lea je stc push pusha pusha xor pushf jmp mov call pusha pushl mov jmp pushl pushf mov pushf movb mov pushf mov movw lea jmp mov pusha jmp pushf pushf inc pusha decl movw pushf pushl jmp shl bt shr pushf pushf bt call call pushl popl push pushl lea jmp pushf lea jo popl pushf pusha movw lea jmp clc test btr rdtsc call dec btc or mov push add mov clc add jmp bt bswap lea jae stc xor bt pushf sub jmp add movw pushf pushf pushf popl pushf movw call push shr lea jle mov jge push pushf popl push pushl popl movb push lea jmp call btc btr cltd mov btc pop inc jmp cmc movb rol push call pushf mov pusha jmp call push mov pushf pushl mov mov pusha pushf mov mov push jmp inc clc shr mov sbb call jmp neg shrd movzbl shrd sub jmp pusha mov push mov lea jmp pushf mov mov mov pusha mov call call pushf mov jmp call bsr neg adc notl dec mov cmc call mov push push lea jmp cmc cmp add call jmp pushf jmp movw mov pushf pushf pushf popl jmp clc pushf ror push mov lea mov call pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp not clc bt not test pusha cmp and pushf movl jmp pushf popl pusha mov pushl popl push push push pushf lea jmp pushf pusha mov movl push movw lea jmp jmp mov pushl mov mov pushf mov pushf lea jmp movl jmp mov pushf jmp bt xor push jmp mov pusha lea cpuid cmp sub push stc cmpl pushl pushf mov pushl pushf mov jmp pusha mov call pushf lea jmp or call mov push push jmp stc bt sub jmp pushf push pushl jmp bswap mov neg adc sbb mov pusha shr dec call mov call pusha mov call pushf pushl popl movl pushf movw pushl lea jmp mov pusha push lea jmp mov mov pushf mov pusha mov pushf pushf jmp push pusha mov pushl mov pusha mov jmp mov cld call jmp mov inc clc pushf neg call test xor test sub movb mov pushl movb lea jmp not pop cmc neg pusha or pushf add not cmp add sar lea not mov clc movw sub push call mov call push mov mov mov pushf mov pushf mov call add call bt shl sub mov add shr add mov cmc call pusha mov call mov call jmp call mov pushf pushl pusha pushl lea jmp pushf popl jmp sub cmc add jmp mov call pushf jmp mov mov ror (bad) repnz call push pushl mov pushl pushl pusha pushl ret pusha push movl call cmc xor stc stc mov bt test stc add pusha jmp lea jge push mov mov jmp lea jns pushf mov call mov pushf pushl mov movb mov lea pop lea lahf mov pushf mov lea xchg movsbl not mov not mov movl pushl ret cmp bt sub push push jmp inc setno neg pushf pusha ror call jmp pushl popl push pushf lea jmp mov pusha movb mov pushf pushf mov call mov mov push pushl movb lea jmp jmp pushf push pushl popl pushf mov movb lea jmp cmc cmp shr jmp jmp movw movw mov call pushf xchg jmp sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call xchg jmp pushf mov pushl pushf popl pusha jmp ror mov movsbw pushf mov movb pushf mov movb pushf call push pushf mov pushf pushl ret mov mov movb pushf jmp movl push mov push mov mov pushf mov movb mov push pushf movb lea jmp movsbw mov pusha pushf mov jmp movl jmp push lea jp pushf pushf pushf pusha jmp jmp pushf popl jmp jmp mov call cmp sub call pushl popl pushf pusha push pushf lea jmp movb jmp bt clc and push pushf popl pushf pushl pushl popl push pushf mov lea jmp push mov pushf mov call jmp push push movb pushf mov lea ja pushf mov pushf push jmp ror movb jmp inc push push mov pushf lea jmp cbtw or sar lahf mov neg not mov push clc stc stc sub stc shl movl mov pusha mov mov pusha pushf popl pushf pushl popl pushl push movb movl lea jmp bsf bts rol mov jmp pushf mov jmp pop pushf rdtsc shl pushl popf pusha mov setl pop call call mov pushf jmp movb mov pusha pushl mov pushf call call call call inc pushf clc bt add jmp mov pushl call shld aam call pushl push movw pushl popl mov movb lea jmp mov push push movb lea jmp push push mov push pushf lea jmp pusha mov mov call mov push call dec stc rcr ror btr lea jmp movw mov pushl mov pushl lea jmp clc lea jno add pusha jmp mov push mov pushf lea jmp mov movw pushf lea jmp mov mov pushf mov pushl push pushl lea jmp jmp push mov pushf push push mov call jmp btr daa mov sub shr rcl mov call jmp pushf popl push jmp cmc pushl popl test call clc add push pushf clc neg call add clc clc pusha shrd pushl mov call xchg cld pop mov pushf cld lea call mov pusha push push pushf mov call adc push jmp mov pusha call pusha push pushf mov mov push call add pusha movb pushf lea jmp push push push pusha mov movb pusha lea jmp movw pusha pushl popl push movw lea jmp das mov cmp pushf lea stc cmc clc sub movl bt add pushf stc clc mov neg stc pusha jmp add pushf stc shld pushl mov pushf mov mov pushf push movb pushf popl pushl call pusha mov pushl jmp jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp pushl popl pushf push lea jmp cmp mov cmp add stc clc stc movl mov movb sub call bts shr pusha mov cmc bt sub mov test clc call mov pusha pushf movw pushf lea jmp call push and pusha pushf pushf popl lea jns push pushf pushl popl pushf mov lea jmp pusha pusha lea movl jmp push mov pushf call push pushf popl pusha mov mov pushl popl push lea jmp mov pusha jmp push mov jmp pushf mov push lea jmp push mov call movzbl push inc setge ror rcr cmp or sub btc btr test xor lea jnp lea inc bswap inc rol add cmc lea movzbl push pushl mov bt pushf call pusha clc mov bt clc clc push add movb call push pushl popl movb pushf movl push lea jmp push push pusha pusha call jmp mov jmp mov mov pusha mov push mov mov pushf mov call pushf jmp call movw jmp mov pushl lea jmp mov pushf lea jmp pushf pushl call mov pushf lea jmp pusha xchg call push push movb movb mov pushl mov push jmp movw movb movl pusha jmp push jmp mov push mov lea jmp bt ror bt clc cmp sub cmp test cmc mov bt sub jmp pusha mov pusha mov pushl mov pushf mov movw push lea jmp jmp rcl rol or mov bt pusha add mov pushf sub cmc pusha call movb mov pusha push lea jmp cmp sub call btr dec shl bt mov stc test add call sub call call xor cmp xor call btc mov call neg bt bt test cmp add push lea jo pusha push mov push pusha pushf pushf pushl ret or movl stc xor lea jae pushf inc call pushf movb mov movb pushl lea jmp movb pusha jmp pushl popl mov pushf pushf lea jmp shl pusha mov push mov mov call movsbw btr ror mov adc dec cmp mov bt sub cmc test shl pushf jmp call not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp mov movb stc pushf test and stc stc mov stc cmp pushf push pushf lea jne (bad) repz jbe xchg movl lret setp mov pusha movw lea jmp call or mov push pusha lea je call mov jmp push call add add pushf jmp mov jmp bt clc test xchg cmp mov call movb jmp sub stc sub jo push mov shr pusha call cmc cmc add call pusha pushf pusha pushf popl call pushl popl pushf pushf lea jmp jmp lea pushf movb pushl push mov pushl mov lea jmp shld mov jmp test pushf sub pushf pushl mov pusha pushf mov mov pushf pushf lea jmp pushf neg cmc call call cmp shr pushf movb mov push pushf popl call cmp neg neg add sets xor rcr add rol dec add jmp call push mov pushf pushl mov pushf pushf movb lea jmp movl mov jp pushf mov pusha jmp mov call jmp rol movzbl push add pusha pushl inc call daa push bts mov clc stc pusha xor pusha test pushf stc neg pushf pushf dec test jmp mov pushf lea jmp call pushf mov pusha lea jmp pusha mov mov mov pushf movb lea jo push pushf mov pusha pushf pushf pushf lea jmp movl mov call push rol mov cmp cmc mov pushl call push movb call shrd not mov stc bt stc add pushf mov jmp cmp sub call call jmp mov movb push push pushf lea jmp bt add mov push pushl movl mov push pushf mov lea jmp movzbw mov cmc (bad) icebp add loope dec add mov or add test pushf cmc jmp push push inc jmp mov push push mov movb lea jmp add pusha pushf mov movl call push call pushf jmp mov pushf pushf mov pushf pushf mov lea jmp mov call cmp sub pushl cmp push cmc sub call push movsbw pop lea push jmp pushf pushf lea ja clc mov clc bsr aad lea shl sub sub aad not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call call mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp xadd ror bsr rcr mov sar cmp add neg not xor xor jl lea neg not sub adc btc add cmc (bad) testb bts add pusha ror mov btc add shrd jmp jmp push mov ror btr sar bsf add add xor lea bswap cmp sub bt mov cmp pushf jmp mov pusha mov jmp jmp shld mov movzbl mov bt stc pushf call call mov pushf mov lea jmp lea jne or jmp pushf mov call lea jbe mov pushf lea jmp mov movb push lea jmp xchg stc clc cmp mov bt movw pushf sub pushf mov jmp pushf lea jnp push pusha pushl push pushl ret movw pusha mov pushl movw movb lea jmp mov pushf pushf push lea jmp mov push pushl mov pusha mov push jmp ror add pusha mov mov call pusha mov jmp call pushl lea jge push mov call aam mov pushf seto sub mov clc cmp pusha cmp add push pushf mov call mov call mov mov push pushf lea jmp jmp mov push movb lea jmp call bswap call call push pushf pushf push mov pushl ret call call inc dec movsbw lea xor movzbl stc bt pusha call mov pushf jmp daa mov dec mov pusha jmp out mov imul mov imul or imul mov test out int3 mov out scas mov imul enter hlt mov out jl imul (bad) mov out mov imul pushf movsb imul mov mov out mulb imul xor mov imul cmp imul mov fwait imul xor imul mulb imul mov imul xor imul repz imul mulb imul mov imul jbe imul xor imul mov lods imul inc mov out cmp imul xor cltd imul pop fwait imul hlt mov out pop cmpsl imul scas mov imul enter test imul imul out int3 mov out cmc stos imul ja imul and mov imul xor imul pop mov imul jbe imul add out lcall imul cmp imul int3 mov out push stos imul shlb imul and imul mov mov out pop mov imul mov imul push stos imul cmc cltd imul (bad) mov out push stos imul or imul cmp imul inc mov out (bad) mov out fsubs imul scas mov imul shrb imul imul out adc imul outsl mov imul xor imul xor imul js imul add out jl imul int3 mov out outsl mov imul mov cmpsl imul mulb imul adc imul ja imul js imul test imul ret out jl imul xor imul cmc cltd imul repz imul outsl mov imul push stos imul cmc cltd imul outsl mov imul fsubs imul out mov imul enter jl imul mov mov imul (bad) mov out mov mov out mov lods imul xor imul push lcall js imul ret out enter pushf movsb imul lcall imul fsubs imul mulb imul jl imul outsl mov imul andl out ja imul push stos imul xor imul xor mov imul ja imul xor imul pop cmpsl imul enter lock imul mov mov imul enter enter cmp imul test imul ja imul shlb imul jl imul (bad) mov out ret out mov imul shlb imul mov mov imul adc imul push stos imul shrb imul hlt mov out hlt mov out repz imul repz imul int3 mov out lcall imul enter mov imul push stos imul int3 mov out (bad) mov out andl out push lcall or imul or imul mulb imul jl imul cmc stos imul mov mov out adc imul int3 mov out outsl mov imul xor imul and imul inc mov out mov mov out xor imul mov cmpsb imul mov mov imul xor cltd imul mov scas imul mov imul mov imul jmp pushf popl call mov push pushl ret call neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc xor not push setno rol dec shld not bswap or pop shld xor bswap jp sar bt xor pushf shl shrd rcr movzbl add cmc bts sbb lea add btc call call movsbw bswap mov lea mov js pusha lea jmp pushl mov pushf mov mov jmp push jmp mov mov pusha pushf pushl ret stc call mov not mov pusha mov jmp and lea jno push movb pushf mov call pusha mov movb mov mov pushf lea jmp call call test movzbl call xor neg movzbl cmc call mov pushl mov push pushf mov push pusha lea jmp pushf pushf mov pushf lea jmp mov pushl pushl jmp mov call call call movzbl lahf lahf mov call call pushf pusha movw mov push mov jmp call pushf pushl pusha mov jmp decl pusha movb lea jne pusha pusha lea jge mov pusha lea jmp stc sub cmp jmp mov pushf lea jmp pushf call lea jne call pushl popl push pusha push movw lea jmp movl pushl popl pusha pushf push lea jmp stc cmp mov sub jmp movb mov jmp call push xchg lea mov mov jmp pushf mov pusha pusha mov lea jmp ror clc clc call jne push mov pushf lea jnp pusha movb mov mov jmp push pushf mov pusha pushf mov jmp mov pushf pusha pushf pushf popl movb jmp mov jmp push pushf pusha jmp not pusha cmp not push cmc sub jmp mov pushf mov mov jmp movb call add push push pushf call stc mov pusha call add cmp cmc std pushl popf push lea jmp call mov pushf lea jmp call mov stc call mov movb push pushl pusha lea jmp pushf stc sub call pushf mov jmp lea jne push push mov pushl push pushf lea jmp dec add add imul add leave add std lret loopne add and add inc add lods outsb add loopne add adc add add jns add lods outsl add loope add adc add inc jo add add lods jo add jo add jno add add jns add mov jno add jno add jb add add ja add mov jae add jae add jae add je add add 