xor mov jle jl and lds xor enter iret push shrl cmp sub stos pop cwtl xchg mov add (bad) cmp test dec mov sub pop clc or jbe lahf ss mov fildl (bad) sbb jbe sbb cld adc sub arpl jle jle fisubr xchg xchg add pop sbb lahf (bad) arpl pop ljmp rorb xor out or hlt sub xor mov xor loopne sub push movsl mov in arpl fs enter mov inc movsb and cmp inc sbb jmp test mov scas push aas arpl in jno out cmp cmp inc mov stc xlat xchg inc and mov mov push push inc dec push cltd jmp out mov sbb shll xor or jo push push movsl enter sub xchg add jge cmp into mov into leave add int3 subl add lea rorb lods dec mov test fcoms add adc and mov cwtl mov push jb mov dec iret sbb pushf in ret jb mov inc inc mov jecxz pop cltd std push pusha and inc or mov pop int xor lret (bad) xchg out out (bad) pop mov jecxz aam add mov pusha xlat adc dec jge pushf scas xchg sbb inc jns aad mov dec shll lea or orb dec aas xor or bswap repnz or repnz pop mov sti imul rcll lcall repnz into ror scas loope js and test mov jmp shr sbb push mov jbe dec jns and jmp je mov inc fwait mov insb fistpl pop sti push and daa mov xor mov xchg sbb out orb fimull mov jecxz inc arpl push mov or inc jne (bad) les test icebp inc jmp mov or in (bad) or push inc sub call mov push xchg pop and jl inc jns inc lods test sti jns in leave lcall cmp xchg ljmp bound fwait dec push push adc dec mov add adc mov or jne divb jae sub cmpl nop test test inc mov gs and xchg lcall test jns ds leave lods stos sub cwtl cmp insl adc xor mov das cmp daa cld cld mov movsb inc mov inc sub and clc jecxz call cwtl gs mov (bad) lock cmpsl push decl adc (bad) outsb jmp lds aas jnp pop sti sti insl je cmp jg inc out dec shrb mov mov cmp je outsl into jb addr16 jge ds xor (bad) jle out push mov or xchg pop push pop pop xchg inc inc jge aaa fistp push daa setbe enter add mov ljmp rorl clc mov jo mov call cld sub cmp dec cmpsl movsl in repnz mov aas xchg mov call push in iret pop daa out data16 movsl gs jg mov bound jle mov or jg outsb cs lods insl sub sub stos imul jg push jmp pop test shrb adc pop scas das jns inc in outsl xor xor ljmp pop jns inc les jge push mov imul in repz aas jns sbb push jle lahf insb aas pop dec daa push pop jle mov sbb (bad) and aas add mov gs cld and dec jmp mov xlat mov fistp xor ret sbb scas mov add clc jg jbe pop dec aas in cmp mov push cmpsl faddp jg adc cmpsb mov pop bnd leave jg dec (bad) out mov push jg xor pop popa flds loopne or pusha push bound scas es jg adc in cmpsl lret jg push jbe and hlt xor insb aaa inc pusha mov inc pop scas subl sub rcrl mov inc mov push push lret aam adc jg xchg pop repz sar jg pop xlat ljmp jg mov mov mov nop ret and or pop cld (bad) push cmc jg mov das mov cmp xchg mov xor xchg inc insb add fbld fnstsw popf test cmp and mov lcall inc pop push or dec xchg dec clc xlat cmpl daa push mov pop cwtl adc sbb xchg inc (bad) ficomp test mov js and mov (bad) mov je test xchg jae lock jmp adc bound scas jg and fdivl xorl lds jg hlt pop xchg js dec inc mov js or out fwait xchg fdivrl sub adc xchg fisttp jbe (bad) pushl jg movsl sub jg lods jbe out addr16 mov dec int mov xchg adc jo bnd cmpsb je aas cld jg movsb js jbe dec pop sti setg sti dec sbb push pusha aas jg xchg popa ljmp imul data16 or lods push cwtl xchg xchg jg test jne fwait popa jno hlt jg sub or daa je aam ja adcl xor inc ljmp aas inc and hlt fldt stos jae ret jmp pusha xchg pop push push in mov ja sarl les fstpl (bad) adc push incl jg pop mov jg inc mov arpl adc out cmp pop gs popf mov mov xchg sbb insl mov cli fistpl and out pop das cmpsb dec xchg lea mov cwtl sub (bad) jg (bad) gs xchg and lcall mov jl pop or mov mov notb adc mov aam add shrl (bad) xor pop cmp jns mov push and inc mov jg inc cmpsl pusha push mov hlt fbstp fdivrs inc jg dec sbbl sub enter pop (bad) push mov popa pop sbb push icebp not xor pop mov mov jl jecxz nop mov dec pop jne and dec mov loopne fiaddl push jg (bad) lea jl lret aas sahf add rolb loope mov subl add dec (bad) jg xor cmpsl jg aaa or lea pop ficompl push jnp (bad) out sarb cmpsb jae out bnd pushf mov xchg inc xor inc addr16 (bad) mov pop jg lcall jg cmp sbb jg out fistpl test leave and (bad) insl xchg add pushf push (bad) loop div jg movsb xchg (bad) incl push inc outsl gs adcl es sarb mov iret lret xchg lods jg mov cmp and push mov lock gs sbb jg push dec cli xor pop push out out jg fmulp fcoms inc leave aas adc inc mov cld arpl and add pop int pop jno (bad) push xchg cs mov or jg inc push push out jg cmp add fwait sbb pop jg xchg xor iret jg mov adc jle jnp out inc pop rcrb test cwtl test dec (bad) and repz mov xchg add and insb cmpsb mov aad movb fiaddl leave cwtl out inc jg xchg push lret scas loopne icebp gs inc push jg sbb mov mov out pop lea shr pop sbbl std jg fadd mov jg xchg mov cmc add inc jg insl shrl scas in repnz scas out xchg pop lods xchg pop jmp and mov fwait icebp dec not push adc mov aas pop stos rcrb cwtl das add mov adc fwait jg lds mov ljmp ficompl iret mov addr16 fnstsw jge cmp pop jbe lds ss pop es jecxz add push fcmovne (bad) into cmp cmp mov inc inc out pop jg stos sahf and push and lods jo je push mov sub ja,pn fcoms sub aas xchg mov (bad) xchg push jg mov sbb pop cltd push sub mov adc lock pop in jno test inc inc jg dec mov mov lods xchg inc popf scas mov cmpsl push push sbb nop into lds lock pop loope das test lahf pop not adc into jg stc pop dec and dec push frndint add (bad) fstpt loopne push in sbb stos mov and xchg mov xor mov cmp and sub jg dec je push sahf sarb fldcw nop (bad) dec daa pushl outsl dec fldl add sub pop mov add in dec bound mov addr16 pop pop stos lea jg pop cmc cwtl lods sub and inc xor jg (bad) sbb xchg jbe dec or rcrb jg xchg lcall add lret push xchg in inc (bad) push mov jg sbb call and adc sbb js sti test cmp mov lcall sbb fnop inc mov cmp mov pop pop subps lds loopne pushf (bad) aas push xchg bound adc repnz mov dec sbb (bad) xor cmp pushf xor xor test aad lock jg push mov jg clc sbbl lret jg mov nop add aad xor sti leave adc loopne mov push dec inc arpl add int3 scas sub cmpsb jg je or ret js lret mov aas push or push jg pushl xchg dec out mov or cs and outsb jbe jns xor adc mov jg shr inc push call xorb lock jg xchg lds ret inc cwtl mov pop fs mov xor jecxz add outsb popa jg mov xchg push (bad) into inc lret ljmp push jae idivl adc pop jg das popl or inc jg push and sbb in pop sbb add mov push mov xchg add sbb sbb (bad) clc cli stc (bad) jg popa aad push dec enter dec xchg lcall lods push and jg lahf lods mov aas mov sbb inc xor jg mov adc jg in (bad) cmc fiadd ret mov aad jg adc or sbb arpl cwtl es ds lret mov adc jg je shrl cltd xchg js cld xchg sub mov xor in out je sbb jg mov scas cmc mov movsl int clc push jg mov xchg aaa inc dec test mov and adc outsb inc repz pop cmp pop (bad) cli jg sbb xchg lock jg cmp pop sbb leave mov std xlat dec dec test inc movsb add and cmpsb sub jmp xchg test imul stc pop fdivrs jno lods sbb jg sub stc pop imul mov push jg cmp mov xlat add dec inc and or mov movl push sub push mov jg sbb jne jg jmp mov and sti and add mov add fiaddl stos push dec xor inc mov addr16 pop push sbb dec jno xchg dec in outsl and xor dec sti cmpsl cld mov ds mov sbb mov pop inc adc mov jns in or aaa mov test pop ja fildll fimul js mov sti inc dec popa fdivrl xchg out mov sub inc push inc mov mov mov insl out int js or fmuls inc push push arpl (bad) push xor dec jmp pushf jbe cmp movl sbb mov out ja jg mov dec fwait add insl xchg cmpsb jae cld adc aas push popl or (bad) adc sub adc repz movsl pop (bad) rolb jg ret pop push hlt mov dec lret pop in inc dec jnp insb dec pop jg scas hlt adc inc dec repz enter loopne stos cmp fcomi ja repnz jg mov (bad) jb roll mov outsl scas cmc ret in (bad) data16 mov dec jge mov aad cwtl rcr leave jg pop xor push ret pop bound mov jg cwtl push in push inc cmpl imul repnz sbb jg mov xchg adc adc mov aas xor je jo and mov adc cmp cmp mov int3 pop or iret rcl inc repz fisubrl xchg jg mov ret adc (bad) das jg xchg movsl pop dec jg push fisubl jg pop loope mov mov add cmp jno (bad) cmp xor jmp xor cltd adc (bad) mov xor int3 push aas sar jne out orl mov mov scas sub mov mov lods sub jg sbb scas sahf jg or jns jno mov pop ja idivl (bad) jne xor jo jg cmp addb mov or xor sbb mov ljmp hlt add leave dec sub sbb aad int3 dec push clc jg or add mov addr16 jecxz popf jg jb pusha mov js cli dec fisttp jg (bad) fldl fisubr and mov push lahf jg fild imul inc cmp je mov xchg inc jg ret jb pushf adc mov push mov fsubs mov aam aas xor jl stos cmovge cmpsb fnstsw data16 mov aaa (bad) dec aas add cld stc sub mov mov sti and imul dec mov jg in push and daa and fisubrl in jg inc data16 xchg bound push adc jl inc and sarl dec inc jg ss push sub aas mov (bad) inc jg shlb cmp jg dec mov ja inc cmc mov cmp dec negb fldenv bound push loope push xchg pop add ja pop lea (bad) push stc dec jb dec pop scas mov imul mov dec jo out lods loopne test xchg divl mov xor pop mov inc adc scas and jb (bad) jns mov out jg dec ret cmp jl push xor jg xchg ret pop xchg out insb mov sbb (bad) sub pop je sub lock xorb cmp push ror lds jg sub sti mov ficomp outsb std lret insb js pop or inc outsl adc dec jg ret ret jg rorb imul xchg and jmp sbb aas ret pusha (bad) addr16 les sbb lahf or add add xor shlb sub mov sub push adc negb cmp jg lahf data16 cmp nop jbe or push je sbb pop int3 pop (bad) and push pop call jg (bad) inc push je sti test adc dec pop adc aad mulb (bad) mov push mov lods fdivs in jmp icebp cmpb cmp sbb mov inc pop inc in pop sti jp cmp xchg sub jg ror push add pop or xor xchg inc pop mov mov rcrb inc dec mov pop cld jg dec jno mov (bad) in mov dec push rorb pop sbb and insb mov jne sti push xchg push nop jg jbe mov mov insb jg jno dec and imul mov (bad) or (bad) cmc popa jb stos mov push mov notl push pop leave sub (bad) icebp add out arpl mov popf jg mov repz add out sub call and inc jge test inc out shrl add jnp inc xchg mov push scas movl les (bad) pop add addr16 inc adcb dec cli int dec ds sarb xchg xchg push addr16 nop cld xchg ret (bad) jg sub jae or fs inc neg sbb insl stos push popf mov xchg pop or jae out jg xchg mov repz add xchg mov sahf cs popf push pop stc aas mov or mov decl sub mov pop sbb test inc pop std lret out pushf jg jbe mov jle fwait out outsb aad xchg dec jg js inc dec sub jg and xor xchg jg pushf jne ds fcompl ja cli sbb stos dec inc push and lahf aam lock jg push clc lcall arpl pushf jg sbb cmc mov (bad) cmp pop mov sub xchg aam jnp add lock pop jg test out or js sti imul (bad) decl icebp loop (bad) leave jg jae pop sahf je popf jg movsl movsb cmp in sbb jnp mov stc xlat cltd jg scas push dec fidiv setge pusha pop or aam adc in fsubl testl mov jl dec outsl call mov inc mov fist pop xor (bad) outsl jg ljmp mov lret int3 jle jg mov scas in repz cmp les ss js and add xor cltd adc fstpt sbb enter pop std cmpsb inc lret fnstsw jo aas jg call mov (bad) pushf stc outsl mov push dec inc mov mov jns call enter aam (bad) jp int3 icebp inc int adc or in cmpsb repnz outsl mov fwait jnp lock mov out (bad) aam aaa jg mov pusha loop aas mov addr16 fsubrl (bad) pop mov cwtl inc stos aas rcl jg out mov mov rcrl mov xchg lock mov (bad) jns mov popa fildl pop repnz lds imul push xor jle lock and cs or mov jbe xchg push (bad) repz mov cli (bad) int outsb aad lahf inc dec mov stos fisubrl movsl mov mov dec out push popf loope add inc lea pusha jmp gs daa xor adc push lret pop sahf cmp rcrl mov out fnop mov add nop rolb mov out out scas add std rorb push ret push test mov les mov (bad) js loop cld mov or jno inc repnz xor divb ja fisub out xchg and icebp or mov ds aam mov arpl (bad) arpl imul imul xor ret dec sbbb add pop mov add int push add int3 xchg fstps test pushf orl sbb inc (bad) icebp pop fimul inc push lcall and js dec lds adcl and push mov push ret cwtl loope cmp pop xor cltd adc stc pushf (bad) jne fsub jno push and in shl cmc push mov cld push add addl icebp inc push sub cmc mov push pop jmpw (bad) mov insb es fdivrs fs add mov leave mov inc sbb movsl xor inc or jg lds (bad) xlat push stos (bad) pop sbb push sub fldenv fild out dec mov mov nop lods or or ret jmp aam (bad) adc test jnp test bound fs jae push call aad mov test shl jmp push lea jae jmp dec inc not pushf pusha mov inc ror rcr xchg bsf movsbw mov sbb pusha or rol mov clc cmp jmp lea jle pusha movl jmp mov push mov inc lcall outsb rcrb es push mov adc iret loopne nop pop push data16 inc mov rcll fadds loop inc stos ja cmp mov push inc mov dec (bad) inc mov cmp sbb sub inc mov and mov (bad) mov aaa mov in push adc and out jmp shll int3 pushf push and or call and mov (bad) push pusha pushf dec jne add jl arpl daa dec mov iret pop jg mov dec fildll sbb dec push inc pop pop xchg dec popa imul and popf movsl jecxz loope (bad) outsb xor mov insl ljmp jl and sar pushf mov push dec and inc lea lcall pushw loope loopne cld pop in xor mov jae inc lahf mov out fwait mov adc les inc into jnp in inc jns movsl outsb in les xchg data16 add insb sub faddp daa xchg jl sbb iret lahf call xchg fisttpll out pop rcl aaa mov sti negl les roll mov or pushf das scas pushf jmp add clc call movsl dec jmp dec push inc fld xor add or flds or mov mov fxam mov push pop cltd push lcall decl stc push sti les nop jno cmp jg lods inc imul mov add or jge out or and pop push fcmovb mov push test ds adc bound xor lcall sub push fs getsec inc call xor in jecxz popf cmp push xchg cmpsl mov mov mov cwtl retw mov jmp push movl jmp push xor jmp or call lea je bt pusha pusha cmp movl call lea jle pushf movl pushf call jmp push lea jae pusha rcr mov inc mov push mov test cmc xor jmp fmull inc cltd fs pop insl cmc add shlb fwait sub jb ja jns fucomi jg repnz mov or call out leave lods setno jo cwtl mov lea pop or ljmp adc mov sbb mov mov (bad) xor mov lock cmp add cmc inc xor push addb outsl mov sbb cmp cmp cltd (bad) call sti jns pop fistpll adc xchg cld xor movsl call je popa sti ljmp dec sahf (bad) jne testb negl push inc mov faddl pop popf xor mov inc mov (bad) or pop (bad) (bad) xchg rclb push xor add xorb pop adc (bad) repz lret xchg sbb jp cmp lods jb imul ds cmpsb test fs out cmp push lock std std popl dec ret jp mov lea fs pushf mov pop add xor sub mov shrl dec dec push and aam pop leave add in sub test inc std cltd and dec fs inc sbb in xchg push jbe hlt xchg pop mov lds test fldl xor inc add fdiv pop jg and (bad) jae cmp ljmp mov push insl bound (bad) lods imull in mov lock xlat into sti and xlat shlb mov repz pusha mov je inc or sub sub adc mov out mov mov pop xor ss (bad) lods aaa fild mov sub pop xchg xor movl lock push jmp daa fsubs dec push inc leave aad sbbb mov shl mov push dec call jmp mov outsl push nop int3 outsl or ret jno bound cwtl jbe push cmpsb dec mov ss mov mov mov outsb xchg js xor aaa xor push and cltd lret mov push lea push out in pusha push inc jno std insl loopne dec int js out jb (bad) jns sub (bad) mov fnop jl xchg aam nop xchg sbb pop adc int (bad) or cmpsl push mov cmp in icebp arpl jns stos and pop jge pop call pop jb lock shlb and mov in cmp out jo dec mov xor les jecxz cld and pop mov mov (bad) pushf mov add jmp jo stos push push pushf sub mov call lea je push cmp push lea je pusha push lea jmp jmp movl movl pusha jmp pushf mov movsbw pushl mov lea mov lea pop mov push pusha call push pushf pusha lea call pushf pushl mov bt sub jmp xchg push movl call jmp clc sub bt pushl pushf movl cmp movb push pusha jmp or pushf push lea je pushf cmp lea push pushf pushf pushl ret mov jmp fsubp sub push push inc add pop (bad) (bad) stc xchg mov and and or fidivr mov call rcrl testb xchg (bad) sbb mov (bad) in adcb push outsb fstps mov mov (bad) movsb xor add push aas xchg lds add stos mov addr16 mov out out call mov movsb lds inc stos icebp jnp mov xchg leave and mov xor mov js adc xchg shr mov xchg in xchg orb xor loop (bad) in js dec mov mov and lods les daa lret pop mov stos mov push dec int3 lods fldt in jae xor (bad) (bad) jae push imul sti or xor mov push inc sub outsl jno mov cmpl mov js xchg sbb jae (bad) mov cwtl xor push ja adc lret xchg loop cmc insb mov add cltd jmp outsl jns pusha mov jne inc add jnp mov insl mov mov (bad) ja mov stos clc xor divl cmpsl aam repnz loop stos pop int ds or bound (bad) out push daa or mov loopne addr16 pop fbld aaa and add es jmp xchg out mov jmp and jge shll add dec fnsave cli xorl pop fdivl xor xchg rcrb lods (bad) jbe cld pop scas sbb (bad) std insl push es lods fnsave add mov xor dec mov outsl lods scas xor stc decb jg mov push scas test fs int3 xor push sbbl (bad) push hlt fs fmuls test sbb fcompl mov xchg mov sbb dec dec call (bad) mov mov xchg call push into mov sub jmp cmp mov xor and xor aam push push inc push xor cs insb add dec mov xor movsb orl jge adc sub (bad) sti enter js xlat sbb rcrl repz and imul push insl test xor jns mov cs (bad) jl cmpsb pop inc out cmp andl movb cmpl inc push daa pop int push pop rol inc or lods jb pop (bad) sub cmpsb test std push mov jb mov stos aas push push inc lret cmp or mov cwtl push sbb clc (bad) push lahf imull mov push js daa pop sbb pop xchg ret and xchg inc in pusha push add dec popa cmp test or into scas mov loopne sbb mov call pop sub mov ja call ss popl push sub adc cmp repnz je insl lock rclb (bad) fsts (bad) pushl pop fild sub inc in imul push cltd mov inc sub push and aaa and sub mov test roll add insl pop xlat pop pusha insl ljmp jecxz insb xchg inc jno enter bound mov push pop and test sub fist mov xor sbb push sbb int sbb mov lods insl ret rcrl gs or jl mov enter inc and inc lret lea pop aaa orl adc fiadd mov add dec jmp das dec sbb mov shrl xor out sbb (bad) out notl sbb mov ja movsb mov out aam jae pushf or test das sti adc xor movb stos movb movb push lea jmp jmp mov lods pusha pushf movw not movw call rep pop not pushf pushf mov push push pushl lea jmp sahf mov js jg dec sub js pushf cs pop icebp push std inc xor jbe jmp jge ja pop ret sbb data16 add jae cmp in dec lock xor xor jg,pt mov add movsl scas inc mov dec (bad) mov add pop dec add inc pop inc pop idivl ds insb jbe int push cmpb test movsb mov (bad) and xor mov scas out addr16 call mov push xor jns lods movsl jle fs outsl sbb or sub mov adc std mov gs mov sbb ss gs pop stos lcall sahf fstpt ret xchg sub int fdivrl inc rcrl push imul inc adc jge add ss prefetch or dec or adc addr16 jae sub jp (bad) jns or or inc push mov les out addl add pop xor lahf push jg add mov dec push fnstenv sar sub add sub mov lahf (bad) insl sbb mov pusha jl js sub jl push cmp inc pushl (bad) fwait (bad) xchg imul mov mov (bad) push pop std int out mov inc sub lcall sub fimull in pushf push int mov sbb pop jge fnstsw scas add cmp cmc or js dec and in data16 outsl add pop mov add adc mov ror lret push mov xchg into sub dec data16 outsl cld rol stc push (bad) cld sbbb dec dec rcrb incb gs adc jg mov mov int jbe mov imul sahf add pop (bad) out mov fwait inc addr16 xchg jp lret popa (bad) addr16 push sahf icebp faddl push sbb decb mov bound push aad xchg add mov je pop inc in in jnp jno sub pusha sbb jb jae js and inc cmc inc in xchg dec (bad) nop into pop (bad) pop rcrl les push adc xor repz daa jne repnz cmp add cltd gs js jnp rolb xchg (bad) out and push movsl ds cli (bad) pop je pop std pop outsl int out jbe cmp in (bad) sub mov fsubr in stos cmp insl xchg cld ja aaa mov ss test push cmp xchg lret adc sti mov rcll (bad) dec ds aas js loope push (bad) jb jle pop push push sbb iret pop mov int mov movsl mov fwait cmp or jbe mov aas ljmp fidivl into insb sti dec dec (bad) mov dec mov pop enter inc aas repz adc movsb or insl or mov jnp imul pop xchg incb ss dec add sbb adc outsl or and pop insb jecxz xchg jp sbb mov pop xchg xchg push pop xor aad jl into ljmp fisubrl sbb std push dec cld xchg cmp fstpt les inc aad pusha addr16 jge sub ret in test pop pop sbb decb xor add inc fsubl add sub repz sbb mov sub insl in sbb icebp fdivrl lea xchg jae cs pusha daa dec out jl dec popf outsl js orl mov pop mov jmp outsb add push out sbb je jmp jo ds lret (bad) mov inc ret xchg fstps sbb dec repz scas sub dec jg dec gs aas je scas out je jo fisub sub stos mov cwtl adc sbb jno add mov outsb push mov mov into jno cli mov dec lea push sbb ds mov mov jb or and into outsl push push fstl mov and sub scas xchg mov pop jg jl add notl in insl addr16 jno xor (bad) (bad) pop fwait sbb or addr16 shrb outsb and (bad) mov sbb (bad) pop sub and (bad) pop lods mov dec sbb cmp jae add xor add mov cmp mov bswap add pop lods loop inc pop (bad) lods outsb (bad) (bad) ja xchg add dec rcrb pop and ret jecxz push add sbb dec push test into scas inc inc loope stos xlat ja or sbb pop push inc cmp addr16 leave dec add ljmp pop (bad) sub jns pop call popf xchg in cs pop and (bad) xor lods mov sub add jae divb ds inc pop jge jo jns gs xor inc dec cmp mov cmp mov loopne jle xor xor add jo mov jg in sub out inc mov pushf das imul inc xor xor add xor outsl push aaa movsl add inc into mov add mov fimul das imul pop jbe or fsin int popf push cwtl ja fmull or hlt (bad) insb lret loop mov stc std xor movsb jle roll dec push sbb jo ds popf cltd inc jae ret mov jge pop fimul dec (bad) cmc mov cs mov inc push pandn add cmp insb pop lods add add ret cmp popf adc (bad) dec or mov jmp scas dec sbb outsl mov inc xor std jg or cmpsl icebp add pop hlt cmc test xchg jl jno inc jns daa inc mov popa mov scas (bad) cmp sub (bad) loop outsb nop shrb mov mov icebp jb notl xlat push ljmp sbb test cli adc je leave jnp fsubs add mov hlt pop repz jp lret mov and add adc push xchg out mov jns inc cli aam outsl in cmc addb push test inc (bad) mov adc mov sti add inc addr16 stos insl insl sbb loop push mov fucom push jno (bad) cmpsl loop pop push mov jbe je sar cmp add pop adc lods xor ja mov add cmp sarl inc lret inc pop xor ficomp push jg bswap sti sbb jg push mov sar cmc sbbl ret push bound inc pop mov test mov (bad) jl int3 push jge mov into std std jne clc aas push or xor dec or popf in push jp addr16 pop ds scas sbb xchg icebp add sub sahf fimull test xor pop aas scas rolb std sahf call cltd push outsl jmp add orl jae pop pop rorl jecxz test add jle incl jmp cmc test mov sub insl push lods mov sar pop pop mov jnp cmp sub jo cmp (bad) xor mov sahf pop xchg ss xchg pop pop sbbl xchg mov jle (bad) jnp push cmp pop fiadd inc mov or incb mov mov pop add out push cld sbb dec sarb xor dec jne mov lcall dec in cmc test (bad) jnp pushf cwtl jo shl pop xor dec or sub push xor inc mov sbb sub or push push pop push das jge,pt cmpsl inc lea test inc jnp gs xchg add cmp inc jl inc pop jns leave and (bad) mov adc aad (bad) nop pop lcall pop sarb addr16 mov cmpsl jns mov ds jmp xor jp add int3 outsb aam (bad) pop fcompl fcomps inc pusha and pop icebp scas pop jnp cmp jns mov push sub adc or shl sub mov add xor jno (bad) (bad) inc xchg jp sbb test fld sbb imul mov inc sub gs mov dec fcompl stc inc test (bad) cld add sub xchg xor jl pop nop dec insl add or sbb pop insb cmp jl pop (bad) gs lods dec inc sub push adc pop or lret shrb rclb repz jb sub (bad) lret out sbb push sbb pop nopl cld cmp xchg inc daa (bad) fisubl fidivl (bad) sti mov stos sbb xor and fisttpll (bad) hlt cmp push push dec or ds imul in sub mov sub mov cli (bad) mov push cmp adc jbe addr16 imul inc pusha stos testl inc cmp push push sbb pushf clc push imul push repnz mov mov inc cld add xchg or pop nop sbb test mov es push pop lods jno loope mov (bad) pop mov jne gs insb arpl xorl xor xor pop mov addr16 dec fidivl push cwtl push cmpb fdivrl pop push or imul inc sahf int xor pop push jle pop mov and inc outsl pop inc addr16 pop pop pop inc ret add scas ror jns add in enter jge std adc imul pushl addl int3 jl dec add pusha jae gs jns sahf leave push sbb jnp pop cmp pop dec fisub push inc outsb fdivr pop lret lcall ror arpl lret xchg push jecxz in je cmp ja mov in xchg (bad) jecxz sub push aaa push inc les (bad) xchg sar push movsb jb loop add andl ja sbb add sub mov outsl in loop gs in mov fs in outsb movb cli xchg cmpsl mov add imul enter xor aaa mov pop (bad) mov repz aaa js bound aas push push sahf repnz fs dec test stc pop or dec jne dec inc test loope push and (bad) pushf inc jae (bad) add mov loop mov imul in jge rolb dec cld sub outsl jne addb nop loop cmp xchg pop sbb add out movsb mov out jp data16 jge mov xchg mov mov add je lret arpl push jecxz dec jg gs xchg pop pushf xlat (bad) repnz les or fcomps push dec mov cltd roll (bad) repz das daa push pushl xchg inc cmc cmp add mov inc enter or rclb sahf jne and rclb call add repnz xor imul mov cmp js dec int3 pop pop xchg ffree dec addr16 xchg in popf cmpsl mov and and lret jno xlat and lds ss lds cmp xchg push add jg jl pop jp xor lds mov iret (bad) xchg xor cld inc pop inc mov add ja mov mov pop pop cmp jl js sbb xor adc pop sub push jb (bad) fimul sti clc sbb imul add push add gs inc scas scas cmpsl bound add jno mov cmp sbb add sar inc loope push jmp or add repz in fdiv repnz lcall add bound add inc push pop gs iret cmp mulb insb mov sbb push ds sub mov or or mov aas data16 scas andl and inc data16 dec out jl aas fucom aas inc lahf aas xchg jle sbb jae out pop outsl jecxz outsl es outsl arpl xor gs pusha jl and sub jb aaa je lahf in cmp jp mov pop std jns mov scas bound sub lods daa jbe xor and ljmp and dec jle pop pop cmc jne pop arpl jg pop or fs loopne negl jno dec in popa pop pop pop pop xor insl in jnp jbe nop out jns sub push insl pop sub pop imul out jnp pop sub addr16 jb cmc addr16 push gs jnp fsubrl dec jle aaa jae imul ja jge imul jnp jp sub nop in gs dec arpl push insl dec jno pop dec jmp pushw dec bound pop cli sbb inc inc mov mov jb dec fsubrl jae inc das inc cmp pop jne push jl dec push int3 push aaa data16 pop imul cld lahf cwtl pusha jb in dec pop js pop mov jle cmc gs lcall inc jb es cmp fcomps cs ja pop push or pop push sub push pop jno pop fdivrs pop or fsubrs pop sbb jne dec xor mov cmc ss add sub pop cmc jp pop jbe xchg js mov repnz imul popa movsl push jb ss outsl popa pop insb cli add jnp loope daa outsb add stc dec rorl add inc pop adcl data16 add mov push nop xchg les in bound xchg in ss push aas or lock inc lret fcmovu insb lds icebp js mov push imul jbe loop orl inc inc (bad) push sbb lret jno lds leave iret in outsl iret mov aas sbbb dec mov hlt jecxz push cmp iret mov cmp xchg cmpsb lcall cmpsb (bad) push pop ror enter sub add into sti lret inc inc dec imul lea xchg lret and pop gs cmp push addb mov (bad) stos mov jl ror xchg cmpsl inc negb push inc xchg and sub lods rclb push jl sub mov shll sbb sub in dec jge jl arpl scas cld cli lods imul mov cmpb daa push lods mov jnp les jb inc scas jp pop and mov insb pusha bound (bad) push lcall mov xor fsubrl mov jp orl gs ljmp sbb push in lret lcall in lret or movsl push imul lahf lcall incl adc jecxz (bad) gs (bad) (bad) cmp jle jg sbb sar aas enter lds jae (bad) int3 cmp lods jle ja push mov jge mov jbe mov andl jp push outsl insl and cli add cmp ljmp cmp inc pop ljmp fldt jb sar jae ficomp lcall insb cmpsl and hlt add inc pop pop sbb outsl repz loop push out test ss mov outsl insl inc cmc xchg lock gs (bad) aaa sub jge (bad) gs cmpsl pop loope outsb call jno mov ja pop mov fidivl xchg mov sarl les cmpsl mov xor push mov lcall (bad) pushf adc inc sub jnp ret pop lds push jb jmp inc ljmp aas and repz and mov icebp ret in stos lds gs add dec repnz and outsl mov mov and fmulp lea outsb inc and add loopne mov fwait sbb loopne cmp sahf jle add jle arpl add xlat adc inc and lahf xchg jae cmp pop jbe dec outsb dec sbb std inc fldl ja les enter aas int3 aad scas mov rorb fbstp add int3 pop stos (bad) pop into insl inc dec mov mov ficoml push or xchg cmpsb rcrl push xchg jge jb pop cmp bound mov fistl push ja mov sub dec inc call cmp or ja aas push fst ja push insl adcl pop add xchg push add nop cwtl push adc lret sahf outsb mov mov jle jmp push inc xor xchg adc sub jb jno add fldl pop icebp out stos xor std cmp ficompl sbb aad (bad) jp aaa negb adc dec adc lods ja adc add mov test outsb mov out dec shll add sub pop adc mov add mov ret fsubrl mov int lret jge add dec inc std ss fistpll or jne mov fdivrs push pop das cmpsl add fcomip fs fs pop mov add xor dec notb jp cmpsb sub stc outsl add sbb (bad) mov aad cmc lods jae sti cmp dec pop mov ja mov jmp dec cli push and inc bound (bad) push les lret or les sub into subl or daa and mov xchg cwtl paddsw push fmull jno out jmp cld adc jle push pextrw mov loope out lds inc mov push cmp fisubrl insb sbb sub clc pop das and pop (bad) pop in rcr inc (bad) pop and das pop movsb jmp or ja mov (bad) out jmp jb stos addr16 (bad) ljmp xchg pop mov pushf push daa sbb cmpl jg mov pop fcmove subl and jno mov dec lret jne cli outsl pop stos dec cmp pop fisubr mov aad pop arpl data16 inc push or ds (bad) mov mov jbe pop (bad) in leave push add mov rolb cwtl add (bad) lds sti pop jnp into sarl fiaddl pop test jle inc inc nop int mov addr16 pop dec add or and fldl push js add movsb inc dec xchg adc inc sbb push hlt or nop xlat jb rol bnd ret (bad) negb aad jge ret dec insb adc ljmp inc cwtl jns stos cmp in ljmp fisubl stc jnp (bad) xor or jae mov scas mov push pop jge les enter ljmp jg jle add in inc dec ljmp addr16 mov dec in dec jg gs scas adc push jbe addr16 fs loop lret cmpsl imul (bad) adc out jo fcoml xor ja fsubrl imul pop push and push in movsl pushf xor push test sub aas gs cmpsb fsubs add mov pop je mov adc cld push mov (bad) loopne out hlt push xchg inc and int fiaddl jle jne stos insl sbb outsl push or pop mov add inc ret dec adc xor sarl fisubr insl sbbb imul mov test push repz mov jge in ja shl cmp inc ror inc jmp mov daa jl cmp lcall cld xchg les ss mov jmp ja sbb or jnp pop dec in sub or fldt or pop sub jge,pn insb xorl in jle xchg jbe pop inc outsl inc addr16 push cmp bound into dec xacquire (bad) adc ffree ss adc push mov sbb jae add jno and out stos and mov xchg (bad) pusha jp ret jecxz ss cmp pop mov xchg xchg aas xlat inc push or insl and inc xchg je push gs cmp (bad) jmp dec xorl mov (bad) int imul loop push add pop daa push out lock sbb mov out mov jno ja mov lea xor mov ds rcrl inc push add ljmp int dec nop and insb pop sbb add ret lea xchg enter insb jge cs cs repnz shrb push (bad) fnstcw sbb push (bad) into imul mov les add insl add sarb jnp xchg pop lretw hlt sahf mov in jg ljmp cmp ret lods fwait pop pop inc popf faddl mov push ret xchg (bad) mov (bad) aam mov mov jae or rclb mov add add mov addb push add fwait sbb mov (bad) xchg repz xchg fstpt pushf ss push add decb push jae outsl (bad) (bad) icebp ss push and gs mov aas xchg mov lret aaa sbb (bad) ss loop push xchg jbe jg xor mov negb sbb insb mov dec inc imul jb push or push dec adc je test cwtl and mov jns or fidiv cmpsl mov jbe jmp int3 xchg push inc dec stos outsl xor imul sar push gs (bad) pop out sbb adc std mov mov mov jae jl repnz add clc adc cs cld jns std adc push iret xchg jle jns cmp scas mov iret xchg fs inc cli mov cvtdq2ps sub pop dec lea rorl movsl pop dec add inc ret pop aaa addr16 xor gs jmp stos sub mov sbb cs leave push inc sbb jl scas cmp sti insb mov jg outsl aas incb jns mov push sub cmp enter jo xor in std jmp cli insb pop and ljmp push popa outsb cli mov mov jcxz fwait aad imul repnz out or popf lds xchg mov call cltd mov ljmp aam (bad) stc aas (bad) iret in jp jge adc bound or ss push jno or dec out jo pop mov jae pushf clc pop sahf andl xor xor mov js ds push adc outsl sbb sub xchg push jb fdivrl xchg test push iret lret jbe pop addr16 add mov dec add imul (bad) cmc sub pop gs lret mov dec iret imul in scas (bad) xlat push jge idivb into pop popf sbb (bad) leave std mov xor test addr16 inc xor or pop enter cmp jbe sbb sub mov jle iret int3 sbb jmp adc lahf mov imul cltd stos popf mov mov jle sbb aaa jnp stos add (bad) (bad) mov mov push cld repz fwait jno xor jl outsl into (bad) hlt dec addr16 add lcall (bad) lods mov jno fidivrl xchg lret gs jne cmp cli iret push jmp ret jae ficom rolb pop jmp pop daa xor ror sub jl frstor add jbe mov adc mov rcrb lret subb sbb pop pop bound (bad) mov fbstp jl sub inc das inc jae nopl mov mov push movsl lret (bad) sub jno xlat cld into push bound ja jne mov cmp aas (bad) dec push mov mov lock movsl xchg aaa sbb jmp mov sub cmp jmp xor inc jo sbbl pushf stos out int3 pop lock in stos std jle add andb inc push addr16 ret rep xor movsb mov jl gs (bad) dec (bad) pop nop adc das insl or jno imul movsl fisub push jge lret mov icebp repnz cmp ds neg das sahf add mov pushf bound gs fldl ret lcall jg jp sbb rorb mov gs scas pushfw pop jge xchg insb daa loop and je ja scas mov imul fs inc mov xchg jecxz jbe addr16 leave sub pop andl loop jb lahf dec push mov insl sarl jnp push repz sbbl cmp sub and imul or iret or into inc ds iret out pop jl aas gs sahf cld sub pop sbb popa lret sub das fcmove inc insb jne lret decb cmp ret cmp jmp add cli xor jge mov orb and inc inc (bad) js out inc push les jbe sbb aad fwait jns pushf push inc cwtl insb sbb aas adc cmp mov icebp jbe pop jg or push fildl pop test subl push and jle pop scas jnp jne fidivl push mov cmpsb mov push lcall shr ds in cmp mov mov dec xchg aad negl js mov rcr outsl adc out lea push sub cmp sbb bound or ficompl lcall mov or mov out jp sub pop shll in cli daa pop jb jbe mov fnsave in jge mov xchg add xor fsts mov nop sub mov xor pop pop mov addl test (bad) ljmp xor mov div stos fidivr sti mov faddl sub jno out outsb xchg lcall fsts push jl sub (bad) sti or sub cmp iret or cltd outsb stc mov add or sbbl jmp repz fbstp pop jbe pop subl daa inc pop jne into je sub add or inc sbb imul adc cld mov push inc adc (bad) mov and jne dec adc lods imul inc cwtl jle call aam outsl mov bnd jns outsb daa jbe addr16 (bad) sbb sbb scas inc leave sbbl repnz ds pop mov add cmpsb pushf xor mov decb inc pop ror adc cmp xchg mov fdivl cli jle sub gs repz idivl dec imul mov loop (bad) sbb sub inc sbbl xor (bad) insb sahf in into or xchg pop push ja jge xchg das sahf test fiadd insl ds mov sbb cli mov jb shrb test xor jl pop outsb or mov mov push pop inc aad inc dec pop pop out xchg push jo sahf (bad) mov add rol add in jge popa inc mov es insl mov ss ret mov sub mov jae jns mov outsl and cmc xlat lahf outsl jno jp xor ljmp mov fidivl add dec popl sbb cwtl add inc mov sub pop mov (bad) jbe (bad) jmp les pop aaa sahf jnp in jecxz (bad) addr16 dec repz lods jg loope ret jae movq jbe xchg sub scas mov ja outsb pop gs cmc jmp inc mov js jnp and lea cwtl daa inc aaa sbb sub aam mov clc addb or dec cmp sub gs sub sub addr16 dec mov in cmp out cmp rcrl je,pt xor (bad) mov (bad) fs call mov jge sahf push (bad) dec pop test stc jg leave sbb in jb sbb cmc sub ss cwtl pushf scas mov iret cmp jb cmc shr (bad) insb cmpsl clc push outsl fnstcw aas cmp xchg sarb jl xchg add add lods mov cli sti and pop aas dec (bad) cmp and sub (bad) pop add int3 pop add gs loope sub mov inc sub gs std addr16 adc cmpsl push push in sahf aam dec aas lcall push cmpsl jg (bad) or stc add lret jge adc pop out das dec icebp aas jbe jnp,pn ljmp mov cltd jmp lods fisttpll stos pop adc out mov insb aam push gs psraw inc lret ljmp adc outsb mov (bad) cwtl jne inc xchg stc pop sbb fwait lcall pop (bad) gs cwtl and popf jae,pt inc pop pop es cmp je mov mov in pop ljmp inc out push insl into adc popf (bad) icebp cmp mov add push ja loope inc (bad) (bad) inc insl fwait or mov scas icebp in gs mov pushf inc jno out imulb fimull push out ss mov fs cmp add sub pop xor xchg enter and xchg jo icebp sbb cld (bad) incb not sbb sarb fidivr sbb push stc mov dec inc fldenv ret ljmp outsl fimul fxch push pop push mov lea pop jae int xchg sub mov enter (bad) aas push jmp inc or insb mov pop lods aas cwtl or imul cmp popf into xchg sbb pop stos test pop mov (bad) mov pop mov xor push mov sbb daa lret iret mov jne mov scas out xchg ljmp (bad) ds inc pop clc stos jb sbb std rorl mov fdivr add jne xchg and push jp es aas fcoms jo popa lcall xor mov xchg xchg mov cmpsb out mov outsb mov addr16 loopne adc ds out (bad) stos pop inc aam and fisub inc subl cmp movsb and gs xlat inc mov out jb xor add or aas jns pop and (bad) int (bad) lods pop jne push call push (bad) xchg jnp je push fistpl jb cwtl xchg aad jp std stos or cmp lret pop inc gs ret inc add jecxz in fs sbb cmp mov mov jb push mov mov addr16 cli mov test jmp sbb in mov ret and xor pushf outsb jno aas (bad) lret mov mov sbb lcall xor test adc int3 popa jae mov pushf imul mov incb icebp in iret ss imul std mov enter jo or push les jbe mov addr16 imul xor mov push dec push jnp xchg outsb dec mov xor or sub pop lods (bad) (bad) aaa xchg popf mov arpl je,pn mov sbb fwait (bad) (bad) mov pop add hlt mov fwait and scas outsb aam jb gs jae jno lahf sub jle jmp lcall cmp add sti dec cmp and insb movsl popa pusha xor imul aam rcll pop sbb sbb dec es fs lcall xor mov dec (bad) inc (bad) gs outsb mov mov or call pop je fnstenv daa add in xchg js xchg into insb dec das sbb out std in mov js cmc imul mov aas repnz sub andl cmp ljmp in call cli popa sbb lods jle jnp push pop cli inc out sbb popf arpl pop sub jle dec iret ret pop push cmp dec aaa and js movl (bad) pop cmpsb inc cmc and mov pop dec gs ret outsb repnz aad sub jbe test es jae jnp jp add jge rclb cld adc cmc ret clc mov or push aaa insb fiaddl add jge mov cli add in cmp ss popf or pop xchg jge jne sahf mov dec (bad) cmc test repnz push incb dec insl aas or clc dec ljmp cmc leave dec push ljmp leave sbb xor mov mov mov xchg adc std pushf adc xchg and ss pop dec pop jbe jne inc xchg rcrl pusha jmp ds pop add popa jp adc jae add inc pop das roll aas push iret arpl dec je mov pop roll sub in xchg ret lock inc adc inc or imulb aad push xor xor fdivr cmp (bad) xchg pushf inc leave inc mov (bad) mov jl scas push mov into and cmp pushf add pop mov (bad) inc mov je shrb or dec xchg xchg or cmp es pop jp ss xorl (bad) jg jne and xchg popa and imul mov jbe xchg lret jno gs dec cmp mov js jns jne jno cmpsl int3 or and cmp lods jle pop lods int leave pop clc lock inc mov repz js stos insl (bad) mov pcmpeqb jnp imul je rorb sbb addr16 jns sbb ja lcall rorl leave ja inc lcall lods sahf pop pop and in stos pop (bad) inc xor cmp aaa sbb lahf mov sub and fwait jb jle shrb rorl sbb popf nop sbb ja xchg fiaddl in sbb pop pop fdiv push arpl mov inc xor lods pop mov pop aaa stc dec shrl inc hlt dec cmp mov jbe adc gs fdivr ret inc shlb rcl add and push pop sbb xor out idiv pusha (bad) mov sub test mov test lcall xchg ja ljmp (bad) call js cmp gs shrb mov mov cmp aas insl pop gs out ja ret data16 or add mov imul pop mov adc cmp or or in adc pop ja jmp add cld test sbb gs sarl imul push lea cmp push scas mov inc js daa xchg and push aaa fidivl popl mov add and faddl (bad) sbb imul mov inc dec adc test pop jae sbb mov mov mov repz jae mov int3 xorb adc (bad) push pushf jns or cmp fstps div xchg pop jp loop movsl test fcmove das pop jge gs pop mov push adc push addr16 aam cltd aas jb nop test stos fnop lds or mov jne insl jecxz das mov ja data16 gs push scas xchg pop push mov cli xchg fildll popa fs inc stos pop xchg repz out ret inc sbb stos divl movb pop xor jle sbb cwtl cmpsl stos lea das inc push mov ja,pn mov push cmp cs jle and jg jle daa loopne cmp in push call push xchg stos popf outsl dec sbb xor vpshlw mov jge andnps insb or cmp dec push jno jg xchg leave adc push or das movsl inc ficoml test cld in jae mov gs (bad) cld pop (bad) mov and mov iret adcb inc push in push insl pushf push es inc push push or jbe add decl repnz sbb push add lahf lock jne adc jno pop mov decb cmp push sbb dec jle sub out xor push test adc ret mov sbb jne pushf lock dec jnp aad lods push ja std jecxz mov ljmp lods in pop cmp ljmp enter js or es or xor scas gs pop (bad) dec les and inc cld fnstenv stos jg xor data16 rorl movsb jmp shrl movsl fpatan (bad) test push fstpl pop adc and out les test arpl push lcall dec pop cmpl ds dec add (bad) xchg imul mov fiadd imul push mov fmul add in push int adc gs jbe push jns,pt add lea rorb jb dec mov dec add cwtl adc pop cmp mov pop call ret hlt repnz mov insb repnz dec insl fstpl test pcmpeqb rcr inc out lcall imul mov mov movsb or in repnz rcl xor push jecxz mov cltd pushf outsb and arpl sti sub and in mov jl and lea mov call dec imul push push push cmpsb (bad) cmp mov addr16 inc je lahf pushf sbb sbb add rol aad cmpsl cmp pop adc scas xor add (bad) jne fwait cli les cmc popf push rorb sbb loopne sub sub pop mov fisub xchg dec or je movsb jnp out cmpsl sbb jp sbb sub mov pop cli ja sbb pop addr16 (bad) int sbb jno push inc stc mov mov roll cmp jns pop enter xor jae ss mov addr16 or mov lods jmp push aam push je or jl inc stos xchg mov cmc add loop movsb inc cmp sbb inc pushf gs push add cmp repnz jp adc out mov cmp mov jae fwait jecxz dec les xchg ja dec cli xor sbb dec in cmp mov adc iret (bad) xchg mov pop (bad) jno xchg and nop jb inc push pop mov mov adc cmpsb sahf mov (bad) enter lea xor out jnp pop (bad) ds loopne pop and pop daa mov cs pop mov add lods movsl mov pop push aas add test lahf push inc and mov stos out dec les mov in cmp or ret ss movsb or adc cli inc inc shlb std insl jmp mov lods inc outsl push test mov aam mov xor ret mov push into add addr16 rorl inc (bad) cs jo and adc jle jecxz insb or outsb lcall test mov add sub push cmc sub fwait mov push push out scas add fs pop jmp or pop push repz jnp cmp clc mov sbb jecxz sub jne xor out outsb outsb mov cmp xchg inc mov pop push sbb inc push cwtl sbb mov clc add scas das out (bad) jne fwait jo ja jecxz mov xchg into movsb int sbb sub lret divb mov xor stos add std ret test test jbe lock into jno fucompp lahf cmp test sub mov pop push neg stos mov mov cld iret loope cli mov lahf mov dec aam std fsts pushf (bad) imull lea sub test jno push mov in and jnp je (bad) dec inc cmp fsubs jg in mov pushl mov mov (bad) push mov pop adc inc aad (bad) pop lock mov dec sbb decl pop out outsb nop movsb cli push icebp lods stos xor mov sub mov pop push xchg (bad) jns pop add mov mov sub sbb cmp lods jo gs (bad) mov sti lahf gs mov inc pop sarb sbb gs mov lcall inc iret adc rcll push ja xchg push fidivr or mov inc sbb fidivrl std add out in ret mov push nop sub imul jecxz xlat push ficom jle outsl roll sbb insb or sbb ljmp mov cmpsl ds adc pop mov sbb movsl das xor add push adc xlat popa mov insb flds (bad) sub jp cmpsb aaa mov dec push xor out fidivr push xchg cmp push aas insl gs adc pop out outsl sar stos pop ljmp cmpsl mov and xor shr js xchg jo pop lock (bad) aad pop test mov inc aad in sbb xor mov leave push pop pop (bad) mov sub scas test dec pop xchg xor cld (bad) xor aam sbb and sbb cmpsl dec push repz nop insl mov mov (bad) jg mov cli ficompl jbe adcl (bad) sub push mov test inc jne adc push addr16 aam push push push mov daa call outsl jbe mov pop lods adc sbb lods sub and jb xor inc xor jl xchg push test hlt lods cmp sub das pushf les push je,pt (bad) cmp adc push outsl mov xchg xchg jnp ljmp xchg pop inc pop leave mov and pop aaa dec xchg fs mov xchg sahf xchg push xchg mov mov aaa loope dec jno sbb add test xchg adc inc jle or das dec inc repz pop or enter pushf out jns cmp movsb xchg pop adc inc mov int3 xor flds cwtl add popa addr16 js adc (bad) test mov sbb gs cmp cltd call xchg into (bad) scas lcall cmp popf scas dec dec pop leave cmp dec call push fildll and shr (bad) dec aaa dec cli inc jo int3 bound mov loope cs inc push xchg mov push aad fisubr xor jae ret inc (bad) movups sbb pop jecxz lods popa jl test sbbb enter mov cmp pop (bad) lret std arpl ja xchg pop xchg (bad) fbstp dec push insb and mov jle add jecxz dec pop sbb xor jl jle jge adc sbb pop leave scas sti inc js dec adc inc mov shrb dec adc add add daa decb and pop push sbb cmp sbb inc out pop cwtl ja push cld jo mov lret cmp ret mov pop iret lds icebp outsl add jo jg (bad) or and inc jge arpl jge mov idivb add imul scas enter (bad) ffreep push mov (bad) insl aas outsb mov fucomip sbb pop sti test (bad) std sbb rcll ret sahf push leave es mov push js aaa pop or and inc je sbb pusha push jo stos jb xchg xor jb lods sbb mov lret int3 aas dec sub jg int3 gs mov sbb cwtl int ret jmp mov mov pop xchg and cmpsb out cld dec iret aaa ljmp lret jecxz cmc call push fiadd sbb dec sbb in xor cmp add sqrtps inc cltd cmc ljmp lea sub rol lock sub push xchg push or adc add jge fcmovnb pop aas jne lds cmp push inc mov add out adc mov fwait sub imul test mov das das ficompl jge add popf or pop push cli mov inc mov mov jl rcrl jo or push scas mov idivb push mov outsb out std jge or pushf mov push mov inc mov pop sbb les and dec addr16 jno (bad) add cmp jle jae lret or enter add repz lods jno jbe popf ja,pt adc leave push neg shll aas gs cmp pop insl int3 call mov inc sub test mov ret adc push push lods jmp push ret cld add jns gs adc ret cmc and je loop jo icebp repz jp arpl push test jmp xor dec push push lret imul inc insl push sub and out xor xchg sbb out stos add in (bad) pop mov cmp sti sub add ja rorb or xor or mov rorl jmp sbb loop repnz adc call xchg addr16 lock cmp xchg mov scas das mov xchg stos inc push jbe iret sbbl add adc in out mov lcall fbstp aad cli mov push cs fiaddl sub pop mov repnz out or imul pusha adc adc adc pop lahf and and inc push push outsl adc int insl push xchg sahf xor add js jle dec mov ror xchg push add clc sbb dec inc mov add ljmp aam dec adc fcompl stc movsl aaa sbbl sbb add repz out add adc push mov mov xor pop je loop sbb loopne adc mov cmpsb popa ret xchg and imul lret pop cmpsl arpl xor loope dec add (bad) and scas mov jmp popf stc xor push enter (bad) pop and sti imul cli popf or gs dec sbb and push jle pop inc cld icebp test addr16 je adc in test push cmc or inc fimull sub cmp bnd add sub sti mov imul sbb lock inc dec cmpl addr16 roll insb imul sub insl cld pop insl gs out xchg pop rcll stc js xchg lods (bad) ss sbb gs movsl mov enter test rorb xor outsb pop sub jne sub mov inc movsb lods mov jle jle cli push gs (bad) mov add sbb lods inc popa cmpsl in mov xor cld or mov or scas pop pop in jecxz and inc mov cltd fild sbb out mov lahf adc pop push xlat jbe ret ja movsb dec std xor push or adc mov stos in sub movsl test adc mov add pop gs xchg push pop push inc pushf cwtl pop pop lock jecxz lds jnp jae addr16 (bad) bound fiadd inc push mov js jnp dec xor push and push lahf notl mov (bad) push cmp push lret push or cltd add mov int3 mov rclb loopne lock rcll (bad) xchg stos jb test push jle add (bad) pop xor xor xor dec sub pop stos sub add pusha jae lcall adc fcmovbe inc mov loopne jge imul ja leave jnp sub jae xor aas pop xchg insl das cmc in inc jo xor adc push leave in stos rol (bad) mov push and jbe or mov add cmp or pop mov mov jecxz ucomiss sbb mov sub inc mov adc jb cwtl push je cmc movsb in cli add ljmp or push pop adc ficompl push fstps mov push stos mov push movsb arpl mov adc jge cmp out fidivl and fwait and cmp sti dec and sub cli imul xchg arpl pop outsl outsb jno jmp push dec and add out jb push lahf push jns add pusha repnz (bad) repnz outsl call adc jo mov cli pusha insb cmp inc sahf inc decl pop aas inc imul dec (bad) mov sbb jnp or jmp jns jmp cs pop cmp orl rclb test fsubrs imul xchg sti pop push int3 cltd in jp and pop cmpsl xchg in jbe pop cmpsl imul sbb sti inc loop add pop mov xor sbb adc dec sarb out dec xchg inc cmp jle or mov cmpsl mov lcall cmp inc adc add iret jmp cmpsb lret or cld ljmp les push xor or ficom cltd fbld dec repz repz add shl push pop xor ret ds ljmp fnstenv outsb add fcmovu imul pop sub mov mov xchg sub dec xchg inc xchg pop scas xor pop adc sbb clc ljmp jae cmpsl scas mov xchg (bad) jno add jp cmc add rcr fsubs insb sbb mov (bad) pop sub add movsb push pop jg dec mov push mov mov jbe je ljmp xor fwait xorb inc xor sbb push movsb pop push js inc push outsb out icebp mov mov imul sbb adc push sbb cmp pop sbbl dec pop and icebp int3 pop ret jl or sbb add and pop imulb pushf ret pop push adc sbb incb ja aas lahf push dec stos inc xor js xchg mov ss aas xchg push loope lock xchg push nop xorl stos mov pushf inc in test pop pushf clc cwtl call mov aam pop xor cmp shl inc pop (bad) lock inc (bad) ja xlat ss cs ja insl rcll sbb movsb gs jl xchg hlt push sbb out les in add aad xchg cli jne dec out sahf ja cli rcrl sbb not push lods jbe scas mov xchg hlt sub (bad) jle rcr nop inc xor add pop mov and lods jnp xchg jb (bad) popa inc dec mov pop jl xor lods push inc pop cmpsl cli icebp leave cltd cmp repz jge (bad) mov (bad) xchg gs cmp js (bad) jbe loope inc sbb add push sbb inc pop cmpsl add push pop pushf insl adc push je popf cmc jns add xchg jle xchg repnz imulb pop xor cmp lahf ja les dec push hlt inc or inc out mov fistpl or push gs and sbb outsb jp or cltd lea sub inc jp (bad) jmp out jle fwait mov movsl mov fucom fcomp popa cmpsl pop movsl push pop push and gs adc or dec mov cld call jl xor nop bound loop jg add pop ficoml inc call mov popa add jp cmp or inc pusha fiadd pushf inc std jnp pushf sbb insb or call icebp xchg xchg or xorl daa pushf mov mov stos mov cwtl cli into fisubl in jo mov push mov loope sbb outsb jl rcrl js scas mov out mov negb js jp add or adc (bad) out out lahf cmp scas ja pop ret dec leave jo lods push repz adc aad (bad) mov cmp mov jle (bad) lods gs mov xor and in sahf jnp xor aas mov int3 push mov jp mov test push or mov push in ds lret cmp fstl pop std insl pop push or adc mov rorl mov ljmp pop xor stc adc jno nop loopne lahf mov aas inc mov dec outsb push into pop or test adc mov inc mov xchg lret jl cmpsl add sbb xor mov push arpl sbb repz inc repnz fidivrl cltd fimul pusha les cmpsl inc outsb (bad) cltd mov cmc mov pop gs mov int jae mov push add adc ret mov adc add xor cmp add out lds xor jle xor imul jg js stos jbe insb inc dec mov mov push inc fwait and xlat lock dec shll ss and or adc addr16 sbb (bad) xor stc outsl lcall aas jl pusha pushf fisubl inc lock add daa cltd push movsb jno xchg call jns mov negb insl imul imul imul (bad) adc enter fisubr popa in cs cs and sub icebp nop jns ljmp test jecxz mov les cmpsl xlat push in xchg lods cmp adc pop push or rorb imul cmpw jns enter pop ljmp stos (bad) pop and ljmp ss ficom ja pushf into mov sarb adc mov rclb gs (bad) hlt dec xlat xchg sub add inc xor push cmc cmp xor repnz jge aad dec je in gs xor dec xchg (bad) lcall ds cmp loop cmpsl inc xchg aam dec jle movsb add cmp inc sbb add (bad) dec mov jno hlt jbe ljmp mov stos aam std dec or jbe stos ljmp lds (bad) push mov pop sbb sbb mov mov mov or daa and or addr16 xchg mov loope sub cmp dec fwait add dec addr16 push mov add je cli cmp incb xchg xlat (bad) fdivrs in sbb push cmpsl adc adc add rcrb pop lahf inc das in xchg aaa aas mov cmc jl jmp sbb fnstcw xlat movsl lods or dec mov (bad) sub aas ss mov hlt pop ret xchg and shrl sbb add int aas addr16 sbb movsb jge add ret fdivp and pop inc or jae inc inc jnp jae mov inc or out jg mov push xchg adc inc push rcrl iret nop daa cld push or pop add fiaddl insl aas scas lret into inc lcall dec fs je rcl addr16 dec xchg mov std (bad) lret test jno test xor push loop pop mov pop push icebp mov xor das mov divb int3 cmp jne,pn xor outsl sarb or das repnz stc into js mov ss lahf jb push pop jnp in push jbe cmp xchg insb mov add jns and inc xchg test dec push add hlt cmp stc jge (bad) into addr16 fimull movsb or rolb pop adc in sbb aas fistp cltd daa push das inc jns hlt ret jge (bad) inc mov jge push or jne loop mov ja or adc mov lods sbb movsb lret or pop sub or mov sbb sub (bad) jo xchg incb push inc scas aas jge test jl jo mov push mov push xor pop out sub mov jae jns in jno push addr16 fistp add cltd push (bad) jnp cmp adc sub cmp ss stos push mov or jl and (bad) mov adc into nop jmp xchg push aaa iret test jb inc cltd adc ret ljmp lods sbb lods add in rcrb test xchg outsb das loop push mov sbb and cmp pusha ja cmp outsl mov testb xchg xor and sbb jecxz pop push lods lgs ret icebp sbb dec xchg inc fldt fwait mov inc int jmp mov pop dec pop xchg pop pop (bad) sbb aad pusha out pop jmp add jb pop test fwait jne push inc jb mov fsubr jle cwtl xchg fistpll inc rorl cwtl in into push jp shr jb xor fnstcw gs sub push pop lret lock mov shrl inc adc std orb fs sub cli notl int3 inc cwtl mov loope dec stos je inc and jns fdiv xchg clc test and cmp loop sbb fistpll push mov ja sub test ret add jns sahf movsl sub out sbb fbstp je push dec cltd arpl gs sarl pop dec mov insb add xchg dec popa push and push repz cmc cmp mov (bad) int stc add cmp int fidivr sub mov (bad) push or fild sti sub inc lahf jae inc add pop mov inc jo add inc gs fbld in (bad) aam sub imul insl add ret pop inc mov fistl inc mov daa add (bad) lret sbb call mov and fcom outsb xchg aas imul or mov gs cmp xchg lock sbb pop jnp fildll inc sbb xchg rorb call (bad) jl inc sarl or inc adc adc cmpsl jle test sbb jb or mov shl outsl test jb je push xchg dec mov jle ficomp (bad) test aas in pop push and add sbb (bad) in hlt mov cmc shlb movsl xor cmp inc xor fisubr ja pop adc outsb pop sub dec pop fnstcw and ja (bad) cmp aad jge dec mov pop or sti inc xor push mov (bad) xchg jmp insb out pop push rclb rcrl add adc sbb jae mov or adc shrl sbb or bound mov fcomip movsb jmp out jnp lds inc cli fistpll jns or out leave in and pusha adc clts int3 repnz lahf sti xlat fwait mov int test rcrb cmpsb pushl mov call sbb rorb jge sbb (bad) int push adc gs repz mov xor xchg ljmp rorb (bad) adc imul jmp inc lahf inc sbb xchg imull sti xchg add adc (bad) mov scas outsb sbb push adc ja loope stos repz sub xchg dec in iret mov pop xlat ret xor dec out sub sar inc out cmc push sbb jae push push stos lret dec fsubrp dec mov sti inc sub cmp inc scas fidiv jecxz fld cli and test rolb lds jae repnz inc and out je lret mov inc jnp mov ror pop sbb jl popa push pusha add sti dec cmp rol xchg and xor rorb pop xor push mov ret scas cld sti icebp repz sbb adc insb sbb mov lods stos pop test ljmp mov je aaa jns iret or gs inc push rorl push std outsl cmp and push adc sub sub fist lock jl sbb push dec insl mov or pop adc scas clc ss cmpl sbb loope stc xchg in mov or notb (bad) (bad) gs iret ret (bad) cmpsl push clc outsb shlb mov jne adc mov fidiv inc cwtl pushw stos lret sbb addr16 xchg xchg mov push cmp mov push xor loope fldt jbe jo push test dec ficomp lret hlt lods cs daa jns mov pop add sar pushf inc or rcr pop rorl mov add add adc int3 sbb ret cmp push mov cli cli clc inc sub pop push lret push or test jl (bad) xchg (bad) aad dec cmp push ja add jb jl inc pop dec sub jecxz push inc loop add sbb jnp rolb mov lret pop xchg lret lcall cs test (bad) xor mov cmp sub mov push js loope orl stos out ds mov push jo (bad) and or xlat xchg movsb inc sub mov dec js outsb mov dec push fs adc push pop mov lahf in pushl dec icebp leave rcr xor rorl cmpsl add xchg loopne imul mov pop lahf add cld movsl sub daa mov out push ljmp pop cmp mulb popf ss lea es cltd insb ret jle lds push lods std cli inc hlt aaa mov shlb sbb push (bad) pop (bad) bnd inc mov xor sbb pop loopne cwtl pop gs mov sbb enter fwait mov cli mov loopne mov or inc lods outsb jnp mov adc lea imul bound sahf hlt jns nop addr16 lea xchg lret jmp cmc test xchg mov fsubs and mov in loope jo mov std gs les gs fidivrl adc push imul int pop mov test cmp cmpsl (bad) mov ss imul and push cmp sahf lods adc data16 pop pop sub sbb mov add cli push (bad) bound add lds cmc mov shrb addl gs xor or sub or fidivl jmp sub pop jb push cltd (bad) fcmovb imul adc loopne pushf loop (bad) fildll lods add inc outsl cmp mov cmpsb mov xchg jge cmp sbb and sbb stos jns xor mov mov and daa stos or mulb pop enter jp fdivl inc stc dec adc js rcr or xchg cs call add jle fisubr test cwtl adc out (bad) ficoml das push addr16 scas aam outsl sahf mov mov push inc xchg fidivr mov add sbb outsl xchg and xchg add insb aaa mov sub sub xchg lcall jle notl add into mov int3 sbb fdivrs test xor std aas pop movsb fmuls adc cmpsb inc adc xor add nop and mov pop vcvtps2pd clc xor inc test adc add lods adc cwtl (bad) out (bad) rep mov outsl sub pop aas ja inc ficomp movb pop jne fisttp inc sub add pop data16 ja (bad) adc cmpsb cmpb add adc inc jl pop gs inc icebp addr16 inc and push jno lahf mov flds fmull (bad) dec (bad) pop (bad) sbb imul mov sub outsb loopne fldt push cmp (bad) subl ss inc fmuls stos push repnz mov xor inc inc das stos lock pop sarb pop jp inc dec and je outsl cmp in fdivrs scas (bad) sub dec jmp jp stos gs nopl xchg or clc jge cs iret xor hlt pop add call outsb cltd inc fidivr lret imul cmp jle sbb pop xchg repz inc enter dec (bad) push lock xchg and sbb adc xor add iret scas daa (bad) cmp roll ljmp mov rol stos subl ljmp adc pop in leave test pop ret fwait or insl imul sub dec test test jo loope int or jl leave sub (bad) repz daa inc pop add or dec in repz outsl ja,pn dec pop gs test rcl out outsb jb pop mov xor enter stc ljmp cmpsl xor mov dec push stos cltd sub lods fsubrp imul cmp rorl mov sbb std push stc add shlb lods outsl repnz sub adc jno sti gs mov jp pop test pop add lock ds mov jle (bad) arpl and add repz adc inc fstps cli inc dec jp rcrl xchg xchg pop rcr jbe mov jb outsl pop dec fisubr test ficom push jge ret inc ja mov adc loop in push inc (bad) jnp jae adc bound (bad) dec xor inc push pushf jmp pop jnp jmp (bad) ja jnp pop out stc push adc pop dec lahf jge int3 lock leave orb fisub pop add gs mov jmp mov aam sbb arpl sub sub xlat repnz sarb (bad) jle mov cmp inc jo xchg add mov cmpsb cs add std jne push xchg loop xor xchg hlt in mov and adc rcrb shl sti (bad) sbb push xor insb cmp push insl xchg jmp lahf sbb jmp adc rol (bad) jns add in les je enter dec or mov dec push inc (bad) sbb jae aam sti adc shrb sbb pushf int scas and pop dec (bad) popa je (bad) es mov aam lcall xor xor push jl addr16 lock mov mov jbe cmpsb fisubr daa adc pop fisub dec into mov add ret addr16 ja xchg in cmp push lods fidivl mov faddp inc jge push ret fstpt aam add bound gs lods int out pop loop jbe sbb push gs je ljmp ja je insb xchg imul lahf sub stc sub lods (bad) jb adc add out push mov dec mov enter xor imul ljmp dec xor mov cld stc cmp shrb inc in push insb leave pop dec add mov jae cli lods imul inc xor (bad) sbb lcall test adc and inc mov or push lret jle mov xchg inc cs idivb inc jp call ljmp inc imul cmc push movsl push les insb or xor xor inc icebp jae jge xchg pop pusha dec jle sub popf push rcrb sub jne nop jecxz mov scas jge int jle mov adc mov ja sbb jae pusha pop sbb (bad) pop pop cmp xor test mov mov and cld xchg inc jnp sbb sbb sbb mov data16 lret ss push mov and inc sub mov mov xchg fwait jl js rcl xchg lret arpl ficoml popf push and jmp inc adc mov dec fldl inc mov (bad) or rol out rorl pop sub push pop or std out mov mov mov lahf pop jecxz shrl aas (bad) (bad) pop mov xchg mov out mov jp mulb or test sub and out fisubl and push (bad) lock push mov or pop dec xor es add jmp xchg movsb mov lret lret adc ja iret mov cltd mov mov jbe jmp ss (bad) jns xor jno inc aad mov sbb pop push int3 imul push lods push xchg sbb sbb and sub adc inc jbe cwtl mov pmovmskb mov jl add and aad cmp in loope mov inc inc fild ja fs icebp jnp dec cmp pop in lret inc or push sbb icebp ficoml das ss xchg pop mov bound sub js repz xchg ja push adc ss sub adc (bad) xchg jns push mov rorl adc addr16 adc jb rclb sub jle push dec jnp xor ret xor cmp mov or xor shll lods dec insl and unpcklps jecxz movsl pop jge gs sub out xor test add ljmp dec ds int outsl jg jge add (bad) sbb in adc add xchg add popa sbb mov popf sub cwtl lock push aam fnstcw inc aaa inc pop subl pop sbb xchg jmp cmp divl addr16 sub in cwtl andl out push pop gs jo (bad) push dec mov popa insb lret jnp fnstsw mov ja push inc test lds imul push mov dec shl cmpsl sbb aam dec xor dec jo cmp fs fs sub pop fiaddl jne jmp add je ss stos or mov mov add jecxz mov cmp push mov add adc pushf dec aad gs mov pop out mov pop imul jae daa pop fs (bad) pop mov dec repz (bad) enter jmp jb dec ds sti and mov test ljmp jnp pop pop imul pop ja sub mov mov (bad) xor frstor mov adc jae popl rcrl addr16 in or cmpl jecxz and lods aam jae outsb gs pop movsb xor jp mov test outsl pop gs fs push xchg dec ljmp hlt ret data16 js inc mov jns push ss jl stos outsl lock lock ret xchg cli fimul in fwait lret pop jns mov lock mov icebp add in adc sahf ja add mov data16 lock int3 jmp push xchg pop and inc repnz test test inc gs xor jnp mov ds jae fsubrl xchg push int3 adc cli add je std mov bsr ficom cmpb push addr16 ret cmp gs add and adc insl aas gs fstps mov lods outsl add cmp std jl int adc int3 add iret sub cvtdq2ps dec imul mov jge out (bad) or pushf inc imul insb push sub sbb cmp aas sub lods adc test loope jle xchg or mov aaa daa add mov mov inc les int out (bad) dec test loope loopne (bad) xchg xor dec mov lret int xor inc pop stos or jno in aad call mov adc jg xchg mov pop fwait ja rcrl lcall je,pt xchg rcll hlt dec dec pop xchg mov push inc ds mov ret jbe (bad) daa sub mov cmp jl out andl jg lret out (bad) and add ss xchg fs cltd push hlt pop xchg daa mov cmc in or jle daa rol pop jge pop mov cwtl in repz imul sub dec sbb arpl jb es daa scas lahf testb add out (bad) mov mov iret dec mov lret out fisub mov ljmp js sbb pop push dec push stos push sbb fsubrs cs and lods aam xchg sarb push ljmp add outsb fldl xchg mov lds inc xlat xlat ret dec lods movsl mov in (bad) mov test jnp inc loopne xor imul stc mov sub ljmp js jb xchg mov mov sub int ss mov rolb mov loope cltd mov xchg xchg adcl fadds push popl cli pop (bad) (bad) lret dec (bad) pop xor cmp mov into nop cltd cmpsb dec mov inc mov pop addr16 cmp cli clc lahf cmp xor xchg adc cwtl stc test insl pop xchg rcll jns addr16 rolb or aaa (bad) jge lret aam adc jbe daa scas pop xlat fstpl negb ficompl insl pop jle sbb sbb inc ret push push iret jle lcall pop addr16 inc out aaa and cs xlat call sub or sub mov push or push mov and mov cmpsl jno add mov dec insl jmp mov lds fild cli aad out push ss jle insl pop mov imul sbb push imul cli xor mov pushf pop pushf push ss lret add adc jp call imull add (bad) ljmp jno xchg lahf leave inc je jmp inc int3 xchg outsb and iret push imul mov (bad) stc push inc mov int aam cmp push or je out dec outsl test mov in adc push lock sbb ja test add mov addr16 repnz inc fisubrl int3 xchg mov jmp stos out aad pop xchg jo mov jb push add mov das (bad) fs add pop lret adcl ds inc sub xlat insl mov mov in std ror nop bound pop adc in mov div cmc and ja or outsb mov int3 adc test jle pop or int3 add sub cmp decb addr16 rcrl fldl2e divb repz add or pop es inc aad push dec fwait jp roll aad int3 pop gs (bad) push outsb aad cmp inc inc cltd mov lret daa pusha mov sbb lods movsl movsb (bad) lcall test repnz sub push sub fidiv push pop jae inc gs lret bound addr16 inc push outsl gs pop insb js jecxz mov inc pop ja push fs dec (bad) out pop (bad) cmp incb (bad) sti add sbb jo cli in sbb mov aaa mov popf inc mov int3 in data16 (bad) inc cltd aaa es lods mov sbb xorl cli mov pop shll and pop hlt fcompl imul outsb jne push dec gs test adc pop pop push add mov jnp jg and push jge jo sub mov jbe xchg jge out jle js pop xor push dec outsl sbb loopne imul in pop je xor lahf or cmpsl sbb scas bound (bad) or aas pop int pusha repz das jmp xchg ss pop adc inc test sti push test cmp push push add inc pop andb xlat out add mov adc stos cli inc adc dec jecxz lret dec scas mov sbb inc fimull subl adc dec sbb shll cmp sbb or add pushf mov leave shl (bad) mov or iret movsl into cmp mov and ljmp sub xchg pop repz xor mov inc pcmpeqw pop inc pop mov sbb out daa fisubrl pushf shl cmp aas in cmp test js pop (bad) mov adc xchg sbb add nopl push sbb jne je xor int3 orl mov jle lret imul add adc xor daa aas inc scas mov mov in xor nop aaa (bad) inc mov lcall and aam test in jl push or aaa jno int out push or sbb test les xchg lret les pop cmp ficompl aaa pushf aaa lds cmpsl (bad) push xor loopne stos add add test leave (bad) outsl jle sbb xchg data16 cld mov arpl sti pop mov adc adc xor add sub (bad) jns jno sub push in (bad) mov and fucomip push mov mov stos push rcrb pop rcrl inc xchg add jo mov jns pushf repz idivl push sub into adcl pop pop inc mov mov (bad) in pop push jae in faddl addr16 jmp cli out or add xchg in imul jl push mov scas subb repnz cld ljmp inc sub fiadd inc fwait xchg add subl mov and dec sbb cs mov jbe gs pop dec subl mov mov clc pushf pop inc cs push inc movsl sbb add mov lock pop sub fwait pop (bad) jle gs daa dec call aam cltd pop pop push pop imul out push add adc pop add jle data16 adc imul mov dec sti in mov sbb xor addr16 outsl mov inc dec ja push lods pop call fidivl gs push cwtl imul pop ja ret mov dec divb outsb in sub add sbb stos xchg addr16 sbb lea rolb dec sub (bad) jbe ficompl iret loop inc sahf test jbe xchg or movsb call adc add gs test adc jmp jbe mov or insl lods jae int3 push sub cmp mov inc bound mov call ss (bad) adc js ss (bad) in inc into out (bad) fadds sub xchg test lds mov scas push cli loopne jnp push jmp sub cltd ljmp adc in xchg out into push inc in aas lods cli pop push aaa push ret inc jp adc mov or push fsub rorl (bad) rcr xchg add xchg mov inc imul ja in sar pop imul int rorl xchg inc push outsb (bad) mov lods fisttpll cmpsl (bad) jmp mov cs or sub lahf jge or je pop sbb cmc pop ja movsb and mov rorb cmp xorl subl ja gs leave adc pop fcmovne push stc les shrl imul incb dec jp xor imul push repnz ss xchg cli fcompl sub sbb ja sahf add lcall cmp mov jb push dec ja cmc test aas pop adc das and cli inc push mov dec jae cltd in push mov cmp mov xor es (bad) mov push cld addr16 mov test push inc sub dec pop enter enter int jb bound push daa xchg enter inc out stc mov pop pop lock mov jae sub ja sub iret repz inc pop sbb ja mov sub es push pop push cld andl lret ret int xchg ja inc xor jbe js dec mov mov pop and dec push sbb mov add ds pop adc lea jae xchg jnp inc xor fcomi jno inc or push or xor inc invd mov cltd lds jecxz xor nop adc in mov add pop mov je repz cli testb inc inc fmuls mov mulb ror call and xchg fninit (bad) mov lods add gs lret jecxz movsl sarb mov mov mov nop pop sbb cmp ja lods sub and cli ds dec popa pop into lcall push mov inc mov (bad) xchg jo insl lock mulb xchg mov mov imul push jo sbb out cmp cs rorb xchg jbe pop fnstenv leave lds mov push cs push adc pop jmp fisubl adcl mov cmp pop aam add sarl adc add push push out sbb pushf pop in cli mov push mov cmp or divl dec das add xchg aaa dec jo outsl jmp insb gs adc rorb push ss jle scas or das fiadd insl dec sub or aad sub pop push add adc and dec dec out rolb push cmpsl jmp in mov ret ja imul jl (bad) cmpsb cmp mov push jne cltd inc inc or addr16 gs mov arpl push call push iret stc es jge aad test aaa jmp sub adc xchg mov adc (bad) gs lods decb imul mov dec pop lods sub sub mov and ss mov (bad) mov adc jnp or repnz out inc stc sbbl push push jmp into cwtl mov or iret mov xchg mov adc rclb mov xor insl pushf cmc in cmp in mov scas jnp jp test popa pusha in pop add ret addr16 add mov mov xor add or imul shr add iret push int mov call (bad) jmp pop lret sbb sub adc sbbl daa cmp inc out xchg das xchg mov sbb cmp xor xchg test jnp lods pop push dec decb pop popa aam iret movswl add fwait popf inc pop call inc std leave (bad) jo insb pop sbb inc push rcl cltd pop jecxz pop sub (bad) lea add mov push mov outsb cltd out jg dec scas adc movsb sbb (bad) sti sbb lea mov pop je and sub adc scas adc sub lret cmp in pop push jg xor aaa sbb jl out push sub cmpsb inc pop neg sarl cs out int3 pop lret jg xchg fidivl cmp scas jecxz pop movsl in push jg into pop outsl and aas mov pop pop dec std jge mov pop incl jg loopne push or lods (bad) jbe (bad) dec sub mov popa aas pop jmp or sub aas inc adc in int mov jg in (bad) sub mov bnd jae push mov xchg fisubl push jg into or stos int js lea jge jle mov or jnp and jg popa jmp hlt jbe cmp sub xchg cmp sarl hlt adc xlat sub testl insl inc xchg push inc adc push out jge repnz cmp in jg jmp push jg das cwtl add dec mov jnp in ja jnp mov arpl bound insl mov jge sub jg lret inc cwtl jg test adc xlat add or inc in jmp jne push pop jl gs dec push out mov insb js cs mov push dec into fildl out and imul mov jg imul mov jmp pop jbe pop dec sub lea enter mov cmp pop sbb aaa jg fidivrl vcvttss2si push and leave dec aas fwait int jae orb cli mov sarl popf into mov mov dec decb jle or outsl fbstp and pop jne in pop jbe jae jmp mov gs std lods pop jae cmp xor xlat je xor jg cmp bound or les int inc mov lret pusha js das jns mov (bad) or into ja aas pusha das xlat stos dec push lahf inc jne insl sqrtps test mov sub pusha xor pop inc jg stos inc jbe dec imul and jg in sbbl sub shrl mov aad inc ss insl nop pop int popa mov pop dec lods jl insl test jne jg sub mov sub rclb jle mul jnp outsl cld push scas inc cmp jbe stc and (bad) outsb lcall (bad) jbe cli insl jg movsl pop sub pop (bad) imul adc repz xchg pop add jg pop fmull (bad) add js jg push xor adc dec push mov out xchg mov call lret mov jg fisub aam outsb dec (bad) loop lret lret jne xor adcb cwtl jns loope push push test adc mov fwait push (bad) (bad) repnz ss jg subl jg out dec lods cmp mov pop gs adc jecxz xor mov xchg test (bad) dec mov scas pop mov clc cmp fsubl mov repz test push inc xor jg test xor xor mov xlat or xchg aas cmpsl daa mov add inc xchg cmp pop dec scas jns cmp leave xchg xchg dec mov aad lcall or and mov inc mov sbb insb mov jmp dec popf stc das dec addr16 out aam jnp pop or jnp pop int pop jmp je ds ret jg pop xor imul nop jg aad sub mov xchg adc test aas dec loop push popf addr16 mov dec pop jl jecxz insb jmp adc (bad) mov mov mov mov fimul xchg add hlt push pop mov test pop and aas mov and jnp (bad) xor mov jo addb shrl dec xchg push rcrb or mov cmp pop or push jnp sub lds in test mov jg and xor mov aas mov inc fnstsw lcall loop sub push jg adcb mov cmp mov (bad) jg jno rcrb stos add xchg call cld test adc sub adc dec std jle mov xor div das sub mov cmp add in pop aas or dec adc ja std xor fisub sub sub jg outsb vmaxsd xchg jg mov fiaddl push jo or sub xchg xchg mov ja sbb xchg loop xor inc jg dec (bad) in cmp xlat mov lods lods jae iret dec inc sbb jecxz xchg (bad) out clc orl jo adc add jge jg sub outsb xlat jg mov ja (bad) test sbb adc fwait std les sbb outsl lret dec and adc pop mov jg jecxz adc out mov xchg add jg jne std mov in mov xchg (bad) addr16 add jle aas lahf and mov add adc std mov sbb pop (bad) mov sbb add int3 insl sub js pop or dec xchg xchg out mov test (bad) mov xor adc lock int jmp lods lea dec inc cs inc jg imul in into sbb pop xlat jg add pop (bad) bnd jae pusha pop sbb jge xor push inc jg jae cwtl clc cmp sub jp js popf shll push xchg inc hlt push cmp adc lret lods out jmp adc fisubl imul cmp jg repz ret dec xchg add imul loopne ret jg test stc xor adc mov lock lret test pop (bad) cltd ficoml mov xorb dec es pop icebp mov push daa stc je pop ficompl adc or scas add xor jg xchg xchg mov push out mov add dec pop lret or (bad) mov and pop test (bad) js mov dec lahf in ds xor outsb test insl jp aas jg fcmovbe xchg and stc jmp mov mov adc dec sub int jae mov movsb out rcrb cmpsb dec sub repz insb mov add int3 push fiadd mov test lds fsubrl jl mov sub jnp (bad) cltd faddl mov inc sbbb mov push lods push dec xor addr16 push cli xchg repnz lret xchg aas cmpsb mov fist pop cmpl jmp mov sub mov je out arpl dec sbb testl dec inc insb mov loopne loop sub pop (bad) lods jg mov mov (bad) cli push daa adc addr16 push les adc sahf cltd loope pop jae pop adc sahf sti stos movsb ret adc jg sub std dec mov jg mov stos mov cmp cmp adc and jae push mov or mov cmp test mov inc xchg sbb jne pop test add cmpsb adc add rol ds adc mov int or cvtdq2ps mov pop cmp pinsrw test incb or mov dec insl jle (bad) repnz mov stos gs sbb sbb jnp test aas mov into push sahf ja scas push lret rcl (bad) mov test outsl push outsb (bad) dec mov jg das in dec mov push sub lret ss mov jge pop outsl or pushf pop jge jg shr mov cmp or mov push cmp cmp jmp mov push xor sahf push mov push (bad) lock test enter hlt jnp pop or in test aaa inc inc mull mov in (bad) cltd cmc mov mov fs insb into push inc dec push mov sti fcomi ret loopne xchg loop xchg mov icebp ficoml jp popf cwtl and pop push xchg stos xor jle aam or idivl in adc push cmp cmp test add add add push push cld ja cmp xor sbb aad jg nop insl cmp jno inc adc nop mov scas cmc pop cmc cmp jbe test ljmp dec mov xchg jnp test lods xchg mov stos js test cltd sbb (bad) nop icebp jno xchg fs lahf outsl sbb lock (bad) push lea repz jmp out inc or xchg jbe dec xchg aad jge dec pushf jbe std imulb mov je lret add lret inc xor mov cmpsl inc ss xchg inc jns loopne arpl mov repnz rorl push fwait adc lahf push xchg arpl adc loope xchg xchg or dec cmp add sbb and sbb and aaa mov adc mov mov in sbb mov ljmp fsubrp je roll dec sbb rcrb dec test cmpsb push dec or shrb pop add jmp negl fidivrl imul fxch sbb cmpsl or mov jae enter int3 xor mov cmp xchg scas and scas jb push inc xchg (bad) fdivp xchg mov es mov pop jo fs add pushf add xchg dec push cmc mov pop je mov xor xor int xor mov sub sub outsb out sub outsb dec dec sub sub fnstenv lahf in std xor call repnz pusha lret push movsb xlat and pop add jmp (bad) sti sub adc inc int3 or mov sub push add mov mov cmp clc ja std in cmpsl add aaa cltd push test mov mov lea add cmc jmp push (bad) pushf inc enter xchg mov xor fstpt dec int3 jmp ret loopne mov test add pop stos mov fcmovnbe sbb add mov das jne sub outsl int push inc test addr16 pop loopw push add into pop aad mov insl fcompl mov xlat xchg stos sbb push jecxz push xor mov add push jge jne or clc cltd jge stos decb mov xlat lock out adc test (bad) jb push xor jmp mov inc sbb leave push inc loop inc lcall push push inc outsl test xchg les fwait gs (bad) in imul mov (bad) in in lods mov fdivr aad das inc mov mov sbb outsb push adc push mov fldt roll jae lods icebp add sbbl mov mov add aaa dec mov pop add push push dec arpl mov add cli (bad) sbb adc and es or pop gs jbe sub (bad) out pop adc adc sub sbb test je adc insb pop lcall inc outsb fmull stos xchg pop xchg fsubs push and sub fstpl add pop data16 dec xchg stos jbe jecxz insb pop sub jno shrb and das pop popa icebp je xor sti push lcall lods mov mov jae pop movsb xor adc test pop xchg jecxz pop (bad) mov inc dec jp mov push inc jle cmp mov xor jnp sub ss xchg xchg or jo jns mov jecxz pop mov nop xchg add xlat (bad) (bad) cld add add and ret jnp mov fisttpll lods ja (bad) mov push mov mov and loopne ret push xor sarb adc fs cmp fwait outsl clc xchg sbb stos aam imul lret fcoms fisubr sub jo push movsl lss aad lret jae xor or pusha jae xchg cmp pop addr16 inc pushf inc push or xlat or push inc sub mov adc fadds jl shlb mov pop je,pt mov cli pop lcall xchg cmp xor (bad) lock mov pop push shll jmp cmc aam popf xchg cltd jns movsl or adc lock jge push add cli xchg imul push out loop daa push dec pop popa movsb sub jmp pop sub lea pslld std mov inc pop xor inc int3 jne xchg bound jle jge push scas mov jmp jo pop jne push adc sbb add sbb gs cmpsb sbb jbe leave data16 or push call pushf mov pushf pushf pushl ret jmp sbb and aam inc fsubs sub mov lea or popf ret fucomip frstor mov jle bound push cmp mov mov add pop in out scas nop mov inc scas data16 sbb xor bound ret std mov push pop cld movsl xchg scas (bad) (bad) js hlt ds sarb and inc push push dec and scas sysenter cld dec cmp pop sti imull inc mov int3 jnp in xor bound cli lcall fidivl pop jge in pushf mov in pop sub mov int3 in in les movsb push xor (bad) hlt add sbb or push mov pop inc mov ja inc mov sbb sbb xor or xchg lods bound pop sub das (bad) push fwait pop data16 inc lret cmp and stc or xor sbb xor cwtl mov lret jns test inc repz jle aad sbb cmpsb aam adc cmp out xchg clc cltd and gs (bad) push jg pop sub push pusha sbb push sub jns notl xchg das xchg inc xchg subl in fdiv dec lock mov movsb fadds scas fisttpl sbb (bad) xor imul enter stos xchg fisubl aas lea jno jnp lret lahf xor sub jg jo xor int pop push (bad) mov add dec outsl popa fs imul add xchg fisttpll add add add add add add add pop sldt add add sbb add add add push add add add str add fistpl verr mov add rorb add sldt add add and lcall inc ret adc mov mov and xchg mov mov into jge pop ds mov dec cltd pop jp cmp decb or pop jbe cwtl mov sub jp jne js jae mov fldt dec mov pop dec mov xchg add (bad) insl push jmp pop xchg jl pop jmp push jp sub inc rolb xchg xchg hlt lds xor adc nop outsb out iret int popf (bad) dec lahf cmp xchg pop cmp fcomps mov push pop cmpsl icebp popa xor jmp inc in add aas lods addr16 inc add push xchg push mov sahf jo xchg cmpsb mov mov out pop dec ret cmp jmp je push sub adc inc je outsl mov and sti xor cli in mov pop (bad) iret in sbb push (bad) rorb fwait std fwait imul sbb nopl out mov sbb add mov jne ja (bad) jp push pop stos push or sbb dec lock lret mov dec push xchg jg (bad) les jnp (bad) lock inc mov jmp push int fcomip (bad) add inc push (bad) int3 bound mov clc test imul and sti mov or inc adc (bad) aad fimul in cmpsb jnp gs popa mov (bad) dec stc xchg and scas test fldl xchg inc push jg iret or lret ficoml inc arpl cli sbb inc adc insl dec mov jb inc dec xchg in dec push loope je test ljmp add (bad) pop (bad) cmp jg pop add lret lock scas jge,pn mov xchg insl ja fdivp imul mov sbb loope sub jae int3 addr16 sbb inc in xor fdivr (bad) cld clc mov and ret pop push or ss mov sub sub jmp xor mov cmp sbb xor loope mov test push test and xchg leave jp jns push mov fnstcw pop leave dec sbbl or scas dec mov outsl imulb jmp mov orps pop in push dec sahf cmp or mov clc mov js pop aaa lret sbbl xchg pop pop pop lcall imul mov xchg mov xchg push je cltd fs xchg in outsb das lahf insb ljmp punpcklwd mov jge sahf cmc popf mov popf pop iret mov shrb jbe hlt cltd les out aas cli idivb iret and in dec call je repnz daa inc pop sbb sbb and dec xor inc inc bound (bad) in pop mov mov test xchg inc outsl add icebp push jp cld cmp in cmp push mov add aam ja fldcw xlat bound daa and sti and and loop mov das push or je fs jnp cmp sbbl push push pop pusha data16 mov rclb add sbb in pop call js xchg aas andl std nop repz popa nop (bad) inc mov (bad) ss push dec insl imulb xor lret adc in in dec pop addr16 movsb xor imul fucomp push (bad) (bad) mov push insb push cmp add enter mov outsl push out jno shrb add sub insl pushf fisubrl jb lea xchg sub mov test movsb inc and adc cmc out xchg mov ret aad aas inc nop (bad) fldenv mov movsb fucomi dec adc int fdiv popf mov sti mov push sub decb test out xchg movsb pop sub dec or xchg cmp jmp mov call sbb ret adc (bad) shl sar ffreep mov xor cmpsl pushf inc fmul fstl or mov jbe and jnp std js clc push rcll loope out xchg out dec xchg flds jge pop pop aas xchg jnp mov mov addr16 jecxz lods xchg in data16 in mov sub jmp sub xchg jge iret cmp xchg pop jle jnp fldl movsl jp (bad) (bad) push mov add sub shrl inc dec sti cmpb inc mov mov les xchg insl jmp mov lods adc lds pusha arpl ljmp int3 xchg dec insb adc outsl jle xor xor sub inc icebp xor sbb sbb fimull jbe add push pusha xlat popa and fdivrl inc adc dec data16 es imul dec popl in or and cmpsl mov xor fdivrp push lcall xchg ror out jno xor and mov ljmp jp and jge jbe addb and (bad) enter ss xchg lods adc and iret mov dec lcall ret bound mov xchg sar jne add mov pop push outsb dec (bad) dec pop data16 shl insb pop ds js aas pushf test rcrl lods int outsb pop pop mov pusha shll sbb pop jge dec enter inc cwtl push addl rorl sti bound jns lahf dec mov and push idivl movsl imul dec out sub fnstsw mov or push icebp push adc dec aad cmp push xchg ja push add lods xor mov inc pop push (bad) mov jl inc (bad) sbb mov aad shll inc fsubp lea sbb fs mov stos xchg outsb ds sbb test xor popf adc and scas jae inc fldt xor mov popa hlt jnp (bad) fild mov out pop push or clc gs and adc shll lods sahf dec adc movsb add mov fldcw fisttpl mov mov inc jbe xor and stc cmp xchg test lahf jns lea push cmpsb jbe lods mov jp dec hlt cli cmp mov fist in mov add test ds pop push lods or dec xor cmp idivl or inc mov into bound jge adc mov dec fcompl les std xor push sub cbtw xchg rclb jp pop test test and xor mov inc or inc fwait dec sbb scas mov addr16 inc lods mov pop jmp sub incb inc and jo aaa xchg mov push nop sbb loop mov popf lcall int push ficomp sbb pop xchg (bad) xchg inc lret jmp jp bound rep sub fcmovu andb sbb sti mov jno cmp dec inc out and or push cmp push inc iret xor mov and mov cmpsb xor push int es jmp stos mov movsl jns and notb or mov in and cmc add mov jnp inc mov dec and dec mov rclb in pop cli das mov test mov push inc pop push aaa push jns pusha cld sbb mov pusha fdiv xchg fcompl roll es dec lods and out rolb mov dec gs ljmp arpl or in jge mov outsl rcll fwait mov aad jmp (bad) leave js aam sahf mov jno cld lcall jmp rcl pop dec mov popf inc and loope jecxz js push xor call bnd sbb push adc jg das cltd add pop sub sub jns sub movsb pusha fnstcw and enter cs sub push or or leave call lret lods mov mov je lods pop push cld nop or into in sbb (bad) adc (bad) cwtl jbe rcrb ret mull push jo stc int3 push push rcrl inc lahf dec pop negl xchg xchg cmp lret inc stos mov (bad) jo cmpsb in mov pop adc pop call adc or sub rcll cmc test lds cmp jo leave loope (bad) adc inc cmpsb pop daa scas lea packssdw pop cmc mov idiv pop mov bound lret mov les pop xor or mov pop imul jmp and pushf pop mov leave mov pop ror std (bad) sahf std xor ret mov cltd in (bad) rcrb and adc rclb cmp cltd lcall popf or push outsb lcall cltd xchg sub arpl jecxz,pt lods fwait sbb cs xchg push mov add popf sbb sub das dec int push jno mov xor dec lahf add sub or adc out jle xchg bound popf xchg pusha adc test sub jl cs mov dec mov mov dec (bad) mov inc ja in (bad) aaa and mov fldl jb mov pop sbb icebp iret adc out mov adc popf xor ret and push notl rorb scas mov xchg and xchg imul arpl and sbb out jbe decb mov pop fcomps dec popa jo pop inc sub out pushf sarb adc addl jo je jo (bad) (bad) mov push lds xchg into and js imul push je cltd ss lds out mov dec jne roll fdivl pusha ja (bad) imul test pop push fisubr in outsl xchg ja mov mov fildll pop enter or push sbb mov mov mov popa mov pushf dec or dec add roll test or aam cmp outsl imull (bad) mov jl pop mov lods mov adc cmpsl cmp ja mov sbbl xorl and mov int3 adc cld je adc js or xor icebp sbb and dec mov stos cmp lods pop lea sbb leave lret dec fmull fistpll push loopne stos xchg lds or xchg fadds jmp shl lcall pop pop mov ror adc xor ret xor (bad) mov jbe mov sti inc daa out xor mov insl and and gs nop xor sarb jl je jns push jae add popf cld aam aad cmpsb fs outsl jnp (bad) pop mov xor inc xor inc mul adc jge ret or sub jecxz xchg add outsb adc mov sqrtps xchg push test test orl into std xchg mov add cld add aam xor call call pop mov insb mov and loopne and test or dec daa xor pop popf adc sbb lds in inc cmp sbb ds jns mov insb push mov ror xchg lods fstpl pop jnp inc mov jp mov stos (bad) loopne sub in xorl sub mov jbe inc sub xor in rcr ja sub mov ret push popf in hlt mov fs jle out inc aas cmpl test mov lods lods repz ja mov outsl test cmp fsubrs adc adc or sbb adc pop hlt pushf add ja fmuls pop ljmp (bad) mov out push and fwait das push lret dec enter cwtl add jne arpl fildll and and inc rorb xchg nop les pop lret push lods add xorb pushf mov jmp sbb fcmovnu loop fimul scas out enter push push (bad) fs aas cmpsl repz repnz scas mov and pop ret sbb jmp cltd js lock mov add fstl push testb and int3 pop enter pushf or cmpsb lods sbb mov fsub test hlt mov (bad) mov push aas sahf push (bad) lock test push sahf xor es mov mov adc sub lock sub lea scas cmp gs push lret lods pop je jbe jl or jbe sti mov mov dec mov clc push sub xor in xor pop fisttpll add mov loopne ds push mov jmp mov add xor ret scas in fadds hlt xlat (bad) (bad) pop int3 push cmp jbe cmp jne nop into (bad) jbe push xor sub bound push out int clc sahf stc jae mov and xor fiaddl add ds dec dec outsb cs sbb xlat or and or or pop and dec jp jne std dec sbbl repnz test jg cmp aad dec pop mov cmp add or cmp pop fs int xchg sub pop dec cld mov popf sti movsb lahf cmp leave cmp mov sub fwait aad cmp cmp (bad) mov fcmovb fstl dec cltd stos inc dec imul mov add pop mov push inc mov pop call and mov out lret stc out idivb jle or sub out loop in es (bad) lock (bad) cmp lods mov stc shll stos lock pop and lea sub and adc sbb movb stos jns dec sub popa xor mov xchg add and or ret or inc adc push cmpsl cmp dec movsb out jmp xchg cli test sbb lods inc mov inc and or ret decl cmp repnz push lds sub lock push inc or add jmp ret stos enter mov enter into stc dec cli dec and ret xchg mov out push insl loopne xchg sahf cmpsb aad xchg mov and and push sub imull popa aam adc scas ja or loop int pusha dec mov xor dec dec (bad) jmp ss ret shrb jmp sub adc push imul fstpt lahf adc mov pop call push addr16 jo pop mov inc sbb popf mov pop cmpsl xor add add outsl call lea je stc cmp call lea jne push inc push inc pusha lea jmp pusha jmp lods dec lahf inc icebp push inc push push out icebp stc lock out mov movsb scas xchg and (bad) sahf pusha jp in cmp data16 outsl adc dec jo mov mov push jp mov xor mov notb jl lods dec les mov jecxz rcl jo cmc in adc nop (bad) mov frstor add push and (bad) pushw (bad) jnp dec mov sub and rolb jmp andl add cltd insl iret jp xchg push std jl pop and jmp xlat dec or xchg push mov mov lods ja cmp pop fcompl and mov and shlb cld add lcall enter sub ljmp jb out mov inc iret shrl int3 sbb mov mov movsl (bad) cmc mov cmp push out xchg js ss int (bad) jmp gs sub (bad) aaa fist and divb sbb cmp mov cmp repz ret xchg sahf xchg jnp sysenter xchg inc out or adc add in aaa add arpl sub cmp fcomi sarl and imull xchg les stos mov outsb cmp jb jae in rcrb repz pushl arpl lcall inc scas lcall rclb mov (bad) sti cmp shl xchg mov rorb mov std jp mov pop fimul pop imul pushf les pop xorl fstl (bad) fsub in es cld out mov push ret cli jb sub add push aad or movl loop push shl inc mov jmp pushl lea call call jmp jno out xor push inc daa outsb mov pop cmpsb popl xor xchg and jb inc arpl add sub nop sub lock mov xchg and pushf (bad) mov mov insl push into xor shlb push mov or cld imul into ljmp add ret lods cmp out push fabs insl inc jmp lea outsb jecxz out and into (bad) mov and jle ss adc cmpsl loopne mov shrb test out test dec mov js jmp or gs adc mov je xlat or push inc sub mov decb dec jb loop xchg add pop mov push jnp jbe jmp mov gs sub clc pop xchg push out xchg (bad) and jge ljmp jge jne mov lods pop mov mov jnp dec sarb or adc dec je jecxz aaa loope (bad) testl test cmp xchg repnz adc pushf jb std mov mov (bad) add (bad) pusha cmp enter mov pop out ds push jo (bad) sbb jo push dec rclb push or notl out sub aaa jmp les mov popa inc test ljmp imul jno std push inc pop sub (bad) cwtl pop dec cmp jmp or (bad) cmc (bad) mov fildll xchg add push lea add insl mov outsl mov cld sub arpl into fucom daa cmp cli arpl push repz fistl push sbb jbe gs mov cli pop rorb cld int test push icebp push ficomp loop mov jp mov lahf cli mov ret adc and in clc arpl in xchg loope movsb cmp mov pusha popf stos sbb pop (bad) cmp push lea ja call call cmp push mov push inc mov clc (bad) cld mov repz mov mov and xchg jnp,pn jnp test test ja lods test and fdivr int3 mov push and add xchg pop dec pop in es daa cwtl sub xor adc loop or dec scas mov push rorw hlt js repz xchg inc or ds lock rcl xchg and outsb es call repnz fwait pop mov out aas rolb jmp out mov add push adc cld pop sub iret jmp repz cwtl shlb jbe hlt es faddp cmp stos shll jbe lock mov test les cld icebp add arpl add add bsr setg btr test push push btc call cmp pusha mov sub iret in xchg repz cmp push sbb dec jo add pop out mov lock sub add lds ss push scas xchg int adc mov daa push ja mov adc js and push mov mov and pushf adc test push (bad) adc pusha pushf lea jmp pushf not stos setle setl mov lea pusha lea call jp pushf pusha lea jae push call sub clc cmp call shl pushf pushl lods pushf push not jmp movb mov push pusha pushl ret pushf pushl cmp or call into add aas ret mov jg push jl inc mov cmpsb xchg leave jo mov ret xchg imul aam cmpb (bad) add mov or pop cmpsb lret and xor jg lcall popa test lret and jge jecxz add jge icebp lds push loop pop call in cmp mov mov mov stos pusha lods sub call ret lret lret xchg js pop dec sarb jnp push and xchg cmp jns cwtl jp cld xor int mov mov jecxz adc xor jnp test mov lret stc xor push (bad) jo pop mov aam push fcmovb adc outsl cmc sbb jle inc enter jmp or idivb cmpxchg pop lock push (bad) fadds and enter clc shll ret xor cmp sahf mulb add pop clc ret sub jmp cmp sub push nop push pop mov sbb mov push inc lods pop dec sub icebp jns leave sub mov shll dec inc pop and scas push inc push sub fldcw pop rclb (bad) fbld or add or push adc jmp mov ljmp imul in and mov or rorb fs lea and push lea out cmp mov shrl fildll adc pop fs jl add or xor hlt (bad) and and stos jo xchg lods sbb outsb mov and call push call rcrb inc cmc add fs mov movsl popa mov outsb adc mov or add (bad) jb mov loope dec xchg cmp or inc adc cwtl xchg (bad) nop add push ret mov in shll mov cli jp sub or mov xchg mov and jge dec mov pop pusha mov cltd pop (bad) lcall icebp cwtl and in add mov outsb leave push push or fs (bad) and xor sub adc fisttpll jns in push (bad) repz jmp scas jo outsb sti push inc jp mov mov cmp (bad) iret cld ret in mov pop (bad) mov mov test cmp mov push js mov out daa scas jae jne sub cmp arpl lret fs mov lea or inc es icebp pop ljmp lahf jae js xchg xor call cld inc sbb jp add jg or pusha lds xchg sti push inc pusha sbb mov sbb pop (bad) cltd mov fadds cmp cmc jns fimul insl dec es jmp int3 pop mov (bad) sbb pop mov mov or add aaa jle cmp cli out mov gs mov jne popf fnsave ja pop jns icebp mov aam lea pushfw or sub divl iret add cmc pusha mov popf jae or pop pop xor fnop inc jnp push sbb outsb lds lea (bad) jle xchg mov inc test out inc pop ret jmp cmpsl dec add inc insb xchg mov stc dec jne js (bad) icebp mov (bad) fdiv es iret or jg xor (bad) jae pop mov and (bad) (bad) mov sbb mov xchg inc pop test xchg (bad) into pop fiadd push adc lcall xchg dec pop jl hlt mov sbb add dec xor xor jg mov div adc and aam jnp fucomip insl repnz stos adc insl push push sahf cmp cli push jns inc insb pop sbb mov push lea stc rcrb insb mov rorb js xchg mov andb adc jl es xor std addr16 add in cli mov fwait dec imul icebp bt or jmp loope addr16 out lcall inc push (bad) mov cmp pop sbb push mov rol mov popa test mov add dec imul jne insb jp sbb mov pop je jae fcoms cmp xchg add sbb out mov mov sbb cmp sub lods jns xchg fs inc (bad) mov mull stos test cmp test inc push movsb sbb pop hlt and adc mov add jnp and adc das or jo imul fs jb call cmpsb fwait (bad) pop inc (bad) or mov push xchg ret jne cmc fidivl lods (bad) mov sbb je pop shrl mov add pop aad xchg sbb adc (bad) iret pop and jns lahf sahf cmp (bad) movsl mov mov and xchg push or adc xlat (bad) lret lods lahf push negl jecxz cmp push sbb (bad) (bad) popa jbe in into in lret and xchg pop fwait andl (bad) sub popf arpl dec inc dec jecxz cld or add das xor push int3 icebp add xchg dec mov pop xchg (bad) idivl mov mov push mov ds in vcvtss2si shrl notl jae cmp test lea jbe pusha pusha lea jne pushf mov pushf lea js push pushf lea jg push push call test clc add push call cld pushw popfw movw inc push lea ja adc pushf pushf push pushl ret push inc pushf setae not mov movb movb jmp add pushl movb push lea jmp call pushf pusha push mov setge mov not pushf lods bt clc sub clc push clc pushf xor jmp mov pushf pushl pusha lea jmp bound repz pop inc leave imul (bad) dec sti pop outsb mov call pop mov lcall aad jecxz push popf jo sbb (bad) push cmpsb jb sub sbb xchg jge loop in push jge xor pop or lret pop rcrl inc (bad) mov insb xchg loop stos mov mov push (bad) out lds sub sbb sub cmp add add clc cmp push mov lea jb bt cmp jmp rol mov stc shr call sub bsf mov stc or push lea je neg bts (bad) testl movsb fildl sar shrd sub sar xchg bswap shr (bad) testl xchg shl add call setne mov stc movw pushf not call lea jne push pushf pusha not pushfw popw jmp mov call pusha pushf xchg push push call mov pop inc es addr16 sbb (bad) jg and push daa clc nop fwait adc jb sarl xor mov pushf in sbb lds mov adc sbb inc loopne mov mov ja push scas int3 (bad) or push inc int or adc sub sbb ret mov add pushl sbb cmc call cld mov xor cmp and pop inc xor repnz cmpb inc inc lods daa xor mov pop repz and adc (bad) aad sbb test xchg es jae jbe cli pop pop stos or jnp cs push movsb mov imul (bad) adc dec ret sbb add push loopne dec daa sub (bad) jbe adc loop sub sbbl add test push or out popf into pop lock jmp adc push ret lret icebp push addr16 pop sahf pop mov push loope and xor mov incb int3 leave rolb inc mov aas sbb inc test dec cmpsl push sub popf add fs call cmc clc cmp js cmp push movb pushf lea jae cmc bt cmp jmp push rol call movb neg test pushf push stc not cmp sub pushf test cmp cmp pushf not lea setg movzbw jmp lea ja pushf imul push add push push pushf lea jmp inc stos arpl ss push push (bad) dec xchg shlb fcoms adc stos mov mov jnp push jae push jg push dec push in jg inc push sbb cmp xchg dec sbb (bad) push or int mov xchg sbb es daa and jbe mov or rcll loop das (bad) das mov push cwtl in and mov jnp xchg and mov call nop outsb ret (bad) push in stos adc sub xchg mov fwait or push icebp adc dec (bad) push (bad) setns movzbl pop movsbw pusha mov pusha movzbw mov jmp js aas rorl inc es jo sbb fs jl sbb cmp int3 and or lock test iret or cmpsb dec jbe js inc lea data16 add mov and mov in xchg int3 xor mov cmp adc adcb push and f2xm1 sbb repz adc inc sbb jbe adc mov and jmp mov jnp xor aaa pop mov (bad) pop add adc or int xchg cmp dec or cmpsl xchg xor lods lret out das or jl sub mov push push lock std std mov xchg xorl sbb int (bad) cltd adc pop das ss (bad) (bad) cld or adc inc xchg and aam push enter fldcw adc test jno jp jle fs inc notl in xchg push inc mov adc test mov (bad) insb pusha enter fisttp loopne dec or sub mov dec pop jl,pt or jmp add add movsb scas xchg (bad) cs sbb xchg jo int dec test leave lock leave dec icebp scas dec mov fstl (bad) mov pop dec stos and arpl pushl mov test in lods push xor adc das sbb xchg jmp test loope int3 fistpll hlt out dec xor clc adc popa lret fwait lods and sbb add push daa jae mov cld dec lea push repz adc daa in stos js fsubrs xor mov out dec lea test mov into ss xor mov or in or imul ja rol ss test das ss daa test fdivrs jg dec (bad) cmp imul jb pop iret bound lds out pop xchg jmp push dec jns push mov shrl mov cmc or mov jp cs (bad) cmpsl dec enter add and mov cli or fimul push push xor stc dec ja add aam fiadd out fstp fsts pop dec fisttpll jo sbb (bad) xchg mov cmp cmp xchg mov ljmp ja mov or lods pop popf pop cwtl jmp ljmp loop (bad) adc sahf adc lret cmp cli adc and push lret pushl xchg sbb hlt (bad) jbe shr repz arpl imul push pop and xor fidivrl xlat cli jns (bad) divb pop aam stc push ror add pop cmp xchg jle pop inc inc out jp add jl imul popa pop pop outsb pop cltd add leave sti dec xchg dec jo addr16 jmp lret xchg mov ret imulb cmp mov stos mov frstor sub mov (bad) (bad) mov arpl mov jge iret inc jbe stc sti lds jp dec cltd sarb dec sub or jnp rcrl scas xorb sbb into push mov (bad) mov out xchg into pop add jo jne popf or out loop pop enter mov mov roll aaa lahf insl insl fwait mov xchg ljmp and push pop inc mov lea jmp pushf pusha movl push movb lea jmp lea jne shld mov pushf mov add call mov test pusha movzwl add bsr adc mov pushf movb call sub pushf inc mov arpl jge or stos ja jnp,pn lods data16 jp jb outsl jns test outsl sti sub hlt js jg sahf dec jnp shll fcomip mov jg mov stos jle js imul (bad) mov (bad) out mov and jge jl std jl arpl jns inc fdivp mov jp dec fistpll jecxz cmp mov mov loope jno (bad) fwait in cmp in insb fstpt lret inc clc das mov dec sbb sbb aas fdivr out pop inc and mov int jge mov in jl sbb sub xchg or inc mov stc mov in mov into std jl lea add mov das jle push dec sbb jl jo jne mov fwait jnp dec sub jae sahf add cld aas and and jg mov adc pushl pop jge jl insl cmp pop jl imul std sahf ja mov push arpl das sub jbe stos sub aaa jge ljmp clc mov test into jbe adc ja bound fsubr mov out dec mov jns mov pusha cmc jp clc mov mov jns arpl jle imul stos aas push xor je pusha les adc imulb pop add or sbbb loope inc jl pop mov jl js inc mov in insl fwait ja gs mov adc cmp cwtl sub sbb inc imul aas rcll divb out push pop scas dec jae mov pop or in jp jbe aas aaa adc pop gs jnp xchg imul js adc test mov jo lea cmp aas jp cli aas cmp (bad) jnp inc hlt loope mov int addr16 out mov push pop mov pop cmc jbe cmp jge adc ljmp sti push inc mov jne gs aas imul sub inc insl data16 mov aaa aas test in jp cmc rcrl ret jne,pt sti pop mov aas sub imul or sbb mov mov insl fsubrs jns lds lahf fisub sahf pmaxsw adc lea stos push cmp fdivrs cld sbb inc ljmp cmp mov lods hlt (bad) cmp cmp lods test aaa ss outsb and mov imul decl adc xor or and pushf push fcmove and inc imul inc cld pop insb cld cmp sbb cmp jg inc cmpsl out or test dec jl clc adc add push or addr16 inc push addr16 nop inc test mov cmovo fistp int3 (bad) cli inc pop clc inc (bad) repz mov xor test jnp add sub lahf dec add mov sbb jnp icebp lds imulb add jge or mov ds xor jns test pop fsubl jle mov outsl fadds jb loopne fcomps mov scas or push jb sub (bad) je sbb xlat jp sbb mov push push or xchg stc add pop pop ficomp push jle push jge mov cmp push lret imul ja clc sbbb outsl jmp pop mov sbb and fmul setno cmp (bad) jnp popa roll mov sub inc pop aaa inc mov push mov mov out lahf test popa mov pushf dec pop pushf cmp push jbe cmp jnp fidivrl das lea mov mov xor ret cmp pop stos xor in add out minsd aas and sarb pop pop cmp cmp cmp mov and jns pop sahf repnz repz inc hlt pop dec jge inc mov insl inc (bad) hlt inc lea les dec inc test sbb push addr16 inc sahf and (bad) sti sbb sub gs rep cmp sub icebp inc fimul dec jne fadds sti pop mov cmp int3 dec and sarl ds test aam (bad) sub repnz xor mov ja dec or sub push popf decb mov iret cmp inc dec mov and (bad) inc test jne incb xor into jl ja xor xchg mov test mov mov mov sahf sbb stc pushf xchg test ss rcrb fucomp (bad) ja outsb dec mov loope insl cmp aas jle lret mov xor cli jmp add jmp and mov sub jo outsb sarl cmp pop mov jp mulb jbe js pop sahf jl mov dec cmp sahf dec ja in lods jno (bad) divl mov lcall fdivrl pop sub test mov jl outsl fisubr xchg dec sub jbe lret imul dec jle icebp (bad) clc sbb cmc jp mov (bad) prefetch test data16 or insb cli shr repz adcb aaa cmp (bad) cmp inc pop test call (bad) jne lea aam daa jg add pop lret imul jns clc scas mov push jae xchg into push repz cmp xchg fdivs jl in xor jle js xor mov jns cmp jnp data16 data16 jbe jp pop out divb into mov (bad) xor mov push loopne aas mov fs (bad) pushf lea xchg jno rorb dec das sub push lret aaa jecxz out (bad) xchg cld and (bad) xor jge into cli fcmove in data16 jl lcall dec andb jle mov sbb into jb imul shrb (bad) cwtl je adc jb cmp sbb daa sub xchg mov pushf dec mov std lods fisttpll sbb arpl pop arpl rcll mov repz add movsb into je sbb bound xor lea sbb jl cmp xchg mov and fsubl cs jle cmp cmp pop jg jge sub pop sbb jp mov push addps dec jge dec jle mov jl mov jge lea inc pop sahf fnstcw cmp jae lods repnz les adc mov negl sub (bad) mov jle sub int mov mov fwait pop int3 dec sti daa into sahf adc fstpt push add fsubrs (bad) icebp fwait push loop das stc jmp and and or loop jge aam das jnp sarl in jno and dec jge mov pop dec rcrb cmp xor int jl cmpsl sbb pop mov pop outsl (bad) and test gs jns imul pop jmp dec stos loop ret sbb lahf aas pop or push jno loope sbb push je push jnp cvtpi2ps xchg cld (bad) es (bad) scas xchg mov jl,pn cmp repz repnz cli dec push adc jnp push imul push aaa mov sti sub lfs dec fcompl sub incl mov mov mov push movb jae xor mov imul rcrl adc jb or cmpsl aaa jg das inc test ljmp ss cld imul scas mov mov inc inc xchg jl cmp pushl adcl in idivb jge add dec imul add sbb mov sbb mov ja mov es sbb ja and push popf mov jbe clc pop dec imul or dec mov mov lret inc sub inc add out mov ret inc data16 inc jmp imul sub pushf xchg stc dec inc inc xor lret cmovg fcmove cmpl xchg inc mov jmp (bad) (bad) cmp fstpl int cmp inc pop stc ja mov adc and cmp xorb push inc jle sub jne imull (bad) add cmp int icebp push and outsb jnp aas pop lods in dec scas mov or push lcall insl pop in (bad) jb outsl adc orl inc cmp call jnp lret inc out and ss or lcall pop fstpt cmp adc lcall ficompl test mov inc jmp shrl (bad) mov ljmp or xchg cld xor stos push mov mov out adc mov (bad) sbb fldenv pushf in inc (bad) cmc (bad) fistpll pusha xor pop sahf mov jno xlat push rorb dec jnp dec sbb push divb cs insb ret jl mov lea mov mov push pop pop mov cmp addr16 clc sar outsl imul dec data16 je fsubrl push inc mov cmp rcrb nop insl das xchg (bad) dec push cmp push sub jp push jo ds and pop mov or fstpl xor sub mov dec xchg ret (bad) rorb cs in lods sub push mov cli mov jmp dec mov sbb jns dec mov jne ret bound mov jl in (bad) cld inc or (bad) pop sahf into jne and pusha pushf mov aam cmp mov jns aaa je push imul std mov bound ror inc mov jle push lods (bad) fnsave jge and sub out std and dec mov and frndint sub les inc test jl loopne add ds lahf and pusha add add iret jbe cmc gs xchg inc icebp dec mov mov sbb adc orl cmc outsb cli addr16 inc test repnz sbb repnz inc mov (bad) pop in movsl dec xor push mov jle add gs or add es inc push xor cli in je insl mov and jo jne push cmp imul and mov pop jns das in sahf adc mov imul and push hlt mov cmpsb and lea or ret test xlat repnz jno dec daa arpl sbbl aaa mov pop jbe sub mov cmp lcall mov mov jl cli or mov cmp cld or dec cmc mov sub outsb not (bad) repnz mov mov mov jbe mov aam lock mov or sbb lcall outsl int3 test aas and cli gs ss (bad) stc mov ds jne insb mov inc addr16 push mov pop cmp lret dec dec cmpl pop aaa xor xor in cmp mov dec fnsave ds pop ss out push negb scas adc mov adc cli sbb (bad) cld inc jnp push dec gs jne cmp ds push cmp jne cmp push jp dec mov stc inc pop cld in ret dec ja inc jbe je adc sbb aaa cmova addr16 es mov and mov into sub mov add push cli sbb dec ds aaa dec add popa adc sar mov imul cmpb and sbb mov je sarl or in xor xchg das add jmp xor xor xor push lods mov and inc ja scas in stos dec push loope repnz jae,pt mov jle xor cmpsl jl ja push fsub cli out outsl lea pop dec dec mov aam cmp xor sahf ljmp gs mov dec das xor mov mulb sti repnz test shll dec pop push inc aad lock xchg jbe xchg ja jbe fs inc inc jne iret je cmp add imul outsb pop jecxz sub or or or pop mov int dec mov mov jge cltd or je pushf icebp push lret inc mov cmp mov lods mov mov insb pop out fsubs adc repnz pop pop into mov roll in mov (bad) fdivl and mov and mov mov int insl xor imul mov sub xor (bad) stos in outsb sub or aaa add jnp mov out lahf in adc pop dec clc cmp pop xor sub aas stos mov scas cmp in cld inc in pop jnp mov xor inc ss cmp mov test sbb mov pushf (bad) xchg aam addr16 test pop cli inc pop dec pop add (bad) dec xor bound jmp mov scas jns jp or imul popa pop sub int scas popf jg inc scas (bad) mov inc or sti js arpl inc imul sti add mov aaa scas aam fwait cmc sahf mov std cmp and stos inc pop cmp cmp call pop sbb dec sbb ret stos sarb add sbb bound out jae jnp and aas cmc jle jge test xor bound mov sarl inc test sahf inc std or inc sub xchg outsl push mov xchg xor dec jge scas mov ja stc cmp cli jae mov sub arpl xor sbb sub out jmp popf pop mov sbb sub gs pop mov jb rclb push pop xchg jnp pop pop sbb adc adc popa addr16 sbb mov sbb push arpl push fs cs push mov ss cmp mov in pop or jne fwait js add repz lea es (bad) push ret jl inc pop lds mov orl stc (bad) jbe cli mov repnz fadd xchg fiaddl cmp add orl push out stos or sti outsb in ljmp xchg add js ljmp (bad) insl xchg loop test call mov mov jl testl cmpsb mov sahf popa mov mov jp ja lcall mov cmp mov xchg pop mov lock adcl inc mov (bad) jmp or xchg jle jne pushl and outsb jbe sbb mov (bad) std mov pop fmuls aaa xor or sbb mov push jno mov fwait lcall cmpsl xchg sub sbbb inc push imul nop iret insl (bad) mov push rcrl int mov jp in push inc imul fnstsw testb and inc in add jle aam xor jne icebp mov bound std lea and dec jl mov and test mov (bad) cmp cmp jo or jbe (bad) adc ja (bad) push test push fdivrl lods jl mov (bad) loopne jbe xchg xchg dec inc push jae fdivs dec push jge jne jnp repz adc insl into jo cmpsb movsl fistpll sti idiv sbb pop jnp pop pop cld push dec xor std imul add nop jg,pt (bad) mov push insl (bad) jle cmp mov (bad) fisubrl mov cmp adc jae mov pop je and test cli dec mov neg and push mov ret sub call sub pop jne pop test scas lret jno jl add mov sarl mov jge and arpl das and pop mov jle mov sti or ds int das mov sub xor xor push aas dec (bad) sub cli shl sub mov popf push xlat sub cli xchg cld mov mov sbb mov inc inc ret in scas pop jmp push xor mov outsl insl push xor (bad) in or inc scas jge mov cld ja mov inc jb inc insl pop xchg scas cld loop idivb shrl push push adc sbb sbb dec and pushf mov sahf (bad) mov xor decb jle cwtl js jl leave mov sub insl xor adc pop sub push cmp in test stc sahf xor push bound sbb pop outsl jle jp pushf xor imul aas outsb and fild xchg gs icebp inc dec xchg pop inc xor test sahf push sbb mov mov test leave pop mov xchg xor mull out mov adc cltd test push inc cwtl aad call movsl mov dec inc sbb data16 jne imul pop sub scas fdivs jnp and lods sub ljmp or int dec inc adcb popa sbb mov dec sarl stc insb (bad) xchg push fistpl inc add jb sahf xlat or xor jns lods loope,pt popa iret insb ja fmull jnp mov sar sbb dec pop jno fyl2x jecxz jle stc inc outsl mov ss mov push jnp jle pop loope mov scas cmp in xchg inc push adc (bad) fistpll inc push push ffree xchg mov cmp jbe mov outsb mov jne gs and aaa jp mov pop adcl hlt ds insb jbe int3 shrl jge dec pusha sarl clc jo and scas add fildl mov push pop pushf jle (bad) ss and cmp daa idivb rorb cmp shrb dec jge jmp stc movsl inc or fwait test bound push jbe cli adc mov mov ja,pt out jae outsl jnp pop addr16 arpl das out pop add out das dec and test out bound loop js xchg insl sub mov in jo mov and (bad) out pusha xor ja dec aaa jno mov ljmp jle bound xchg dec leave jae mov ja (bad) cwtl sbb lock aaa ja add sub imul inc mov add in xor or loope pop inc mov or mov fcomi add push jnp out out sbb adc push xor inc mov out and inc sbb jl xor test mov leave js loope daa xlat lahf xchg (bad) stc (bad) adc hlt jecxz ss fdiv mov and es lds xchg in (bad) cmp cmp in ja jecxz and (bad) or jnp jge lock jl sbb pop push inc mov cmp jae xchg jecxz add inc lret std sub sbb lods xchg xchg sub lret jle (bad) lods xchg xchg xor addr16 outsb test je cs pop lock ljmp mov sub js add or jbe (bad) aas syscall dec (bad) push inc (bad) cld mov nop sbb mov idivb jbe pop sub jl cmp aas push pushw jp jl sti and jb sbb ljmp js cmc stos sub mov dec (bad) pushl xchg jmp out les and push cs adc push ret ss dec add hlt inc xchg ja icebp mov ja jne cmp push mov xor jnp pop sti jp dec dec pop aaa mov pop dec pop mov mov gs ret lds out subl int jmp mov out mul outsl mul imul repz lds ret inc movsl push jg stos inc mov sbb pusha sub movsl push xor inc repnz mulb in mov mov add test das dec repnz xor mov test inc mov xchg lahf pinsrw inc xchg std push and inc fistp cmpsb jnp pop test adc jecxz,pn loope sub sbbb shrl xchg pop cmpsl fimull mov add aaa jo push xchg fidiv in cld dec mov lcall cmc lock sub stos adc push dec pop sarb mov dec and icebp aas cmp jl inc push cmp dec in insw addr16 sub xchg sarl mov cmp mov pop outsl ss or xchg pushf dec outsb fisubr gs xchg imul push mov push dec push sub xor cs add lods cmp sub stos (bad) jl,pn daa sbb add sbbb jmp ret dec inc in sub xor mov mov adc (bad) inc mov test jmp (bad) outsb push popf mov pop or push mov or ja pushl ds jl std mov dec ds (bad) iret jp pushf xor std imul cmp sbb je (bad) incl pop les jmp loope aam mov ds sbb push arpl mov (bad) mov out lret into mov mov mov andl or jp clc inc jo sub ljmp jp jo pop mov xor sub dec pushf and neg test popf mov cld or mov pop bound popf mov or push imul sbb fcoml pop mov pop imul repz gs ja stos inc jns dec inc iret scas and jns mov jmp pop adc dec jb (bad) frstor test pop xchg cmp push xchg or dec out push negl in aam popa lret repnz inc push stos cmpsl add test inc mov inc pop sbb xchg repnz out pop loopne jnp inc push ret jns jp scas out and cmp scas out or and scas (bad) out mov push cmp les inc scas jge ja into hlt js sbb pop lds dec xor jle inc popl jno dec movsb fiaddl xchg mov es pop test popf lods (bad) lock aaa inc xor jbe jg and mov and mov test addr16 (bad) fidiv jle sbb ljmp in xor xchg adc sub jnp mov sti adc inc (bad) fcmovnb aaa inc ret iret stos mov nop adc sbb mov je js xor cmp xchg cmpsl sbb mov iret dec xlat sahf push cld decl scas shll pop fs cmc enter mov adc and imul push ret push push sbb xor sub imul gs xor ljmp push data16 lock aad xchg imul cmp cmc bound sar sbb loope sbb mov push sbb jle mov push scas (bad) out cmpxchg idivb ja push data16 sub test lods popf xchg jle das icebp std imul fs enter dec inc ss xchg fs (bad) std jnp jp cmpsl out repnz push jbe pop sbb je,pn mov cmp jle push lock mov ret aas jne cmp sub mov ss jno lret dec jae test aas jecxz jmp pushf (bad) scas stos sub jo lds ljmp jnp sub sub mov jge les clc push and and rorl out inc (bad) repnz pushf hlt insl inc inc aaa xchg (bad) push sub jge lret sbb in orl imul gs out notb imul jle xchg pop push jne push rcrl push lock dec fwait sti std mov cli loope das rcrl push xchg fwait pusha ljmp push js xor test stos adc pushw jnp xor add jecxz mov mov xor nop arpl fdivrl push cmpsb cmp sub imul sbb pushl mov xchg sub aam cmc aad or push inc mov push cmp fldenv sub adc pop push cmc add and and insl in out sbb or leave pop lock pop pop out inc js dec daa mov pop loop inc xlat xor dec mov jb cmp js push and popa push jmp xchg cmpb stc test dec hlt test ret hlt ficomp xor xor punpckhwd xchg sbb aam imul mov cmpsb lret sub add aas fadds jge in push dec pop inc aaa repnz sahf outsl ljmp sbb jbe imul push mov rcrl aas xor mov or fstpt idiv fwait cmp (bad) pop ja mov int test mov out sahf imulb fdivp lods out pop repnz in sbb js in (bad) jo outsb negb fstpt sbb fdivrl jmp jae mov mov (bad) mov sbb sahf mov stc scas mov add cmpsl test imul inc rolb push mov xor pop mov jns cmc in mov insl inc fcoml pusha fisubrl push int das aas ljmp cmp push or push xchg dec and xor inc push xchg push jl outsl adc popf stos aas push mov jl mov xchg cmp mov int3 mov inc sub or sub sti mov gs jbe (bad) push (bad) imul sub fstl les mov xor pop cmp int xor inc push inc mov int3 mov mov hlt jbe xchg cmpsl pop in mov dec ja cld sti andb mov mov (bad) mov xchg js mov jae cmp jp push jne imul cli std xor adc ret jnp sub cmp dec inc sbb mov gs ficoml gs pusha (bad) pushf (bad) das jo nopl sbb js mov popa mov cmp sbb leave adc jecxz mov mov adcl (bad) and js clc jmp mov je dec outsb cmp shrb and or push lea popa or lock mov inc (bad) dec dec sub jbe bound xor (bad) insl ret rclb sbb lret movsl xor imul push in movsb ljmp fs jmp xor icebp adc xor repz into and dec xor hlt lods stc jae or cli imul repz jle mov mov xchg sbb mov pop push mov sbb dec repz dec push mov (bad) in scas mov xor aas insl out jb sbb inc cmp pop rcrl mov and mov or sbb jmp mov (bad) push mov mov das call jbe pop jmp sbb pop mov mov test cmp sub jno lock loop in inc mov fcmovu pop adc cmovo std inc sbb jle adc sub pop mov and add cli xor cmpsl xor mov add insb incb add mov mov std test pushl cmpsb mov ljmp jp fbld lcall sbb jle pushf sub jge sub sub and aaa je push cmp cmpxchg sub clc (bad) mov shrl popf mov pcmpgtw in sbb mov mov mov or mov outsl rorb dec pop arpl inc mov xchg cmp jb shrb jp leave push test inc mov cmp mov sbb jnp or cmp fcompl and (bad) xchg out scas pusha scas add sub push cs inc cli mov adc sub inc jne lods cli pushf jns dec int cld pop call push mov push ja xchg sbb mov ret jle lds pop sahf lret dec enter jmp inc lods iret pop sub and inc inc out aaa lret sbb jg loop xor test icebp das ret xchg pusha sbb adc ret test ds pop outsl jle pop cmc sub xchg fsubrp mov pop loope mov inc and inc bound aaa sbb jecxz hlt test pop push rcrb xor aas mov mov loop fisttpll push movsl sbb imul jge pop repz out addr16 aad lcall (bad) adc jecxz and outsb js dec mov dec cltd loope stc (bad) jbe cmp mov cmc cmp pop xchg xadd std or fistpl cmpsl outsb loop push aas mov and out dec jge fnsave jne lock ja mov push lret sbb lea adc adc fwait and fwait das lahf jmp rolb fiadd sti mov dec sbb cld jmp cli cmp jno enter and dec mov push sub hlt mov sbb rcl sub cli add xchg aaa das iret aam cmp fnstcw out das mov pop or arpl dec sbb (bad) repnz imul imulb movsb mov movsl mov dec mov in orl std jo and add pop inc cmp pop and cs push cmpsb sbb in xlat sub jle dec icebp mov iret mov cmp lahf jmp shll mov mov out or jnp mov arpl push pop jp fsubr std in cmp sbbb mov mov cld mov xor out push inc pop jp sbb cmp icebp dec ss cs pop inc sbb dec push inc push insl cmp mov out dec adc gs pop enter mov xchg cli mov cld pop jbe push (bad) sahf sti xchg add jp jne clc sbb jge adc jne or ret scas hlt xchg scas xor sbb xor sub mov add jne push aad xchg dec sub js aas inc stc mov movsb outsl adc jle add mov iret jae mov rcrl jge leave cmp dec jmp in mov and daa mov xchg or jp sbb hlt xchg jl cltd mov test and jae ffree jmp add jae stc mov xchg dec dec mov and cmc test fistl xor xor ficompl push fiadd mov mov and ja sbb movsl xchg cmp outsb jle xchg jle pop int3 fstl mov leave fistp jge cmpsb out lods pusha mov sbb xchg adc jae stc pop mov aam ja sti inc outsb cmp push test mov mov test (bad) mov add xchg sahf push mov insl and or or inc and dec xchg test jle test sub js call (bad) outsb and std pop pop mov daa inc cs jp mov out jge aas push (bad) mov jle outsl jl xor leave out cmp cmp sub bound xchg jp (bad) out mov jb xor pusha std int pop add inc cmp sbb push dec and hlt sub (bad) cltd pop mov sbb xor jl repz fisttpll add imul pop jp cmp mov and ficom popa repnz iret popw inc lret scas insb loop push xor pop cli lret subl mov (bad) mov mov dec out mov cli mov ss (bad) dec insl jo xor xchg sub call cmpsl lds dec jne dec jbe mov mov push push mov out cli pop jle add pop cmp and add push jbe das jge int imul xor mov dec push movsb xchg cld iret ss loope cmp outsl adc mov and push push mov xchg ds or or cld pushw jl mov jmp mov or lods lods xor xchg std or outsb pop js lods int cmp rolb inc lods ds jns adc leave outsb fsts iret push outsl cmp and push pop cld mov xor push inc xchg incb pop cld mov jmp (bad) jae pop and jl sbb pushf xchg jp and pop imul add fldt xchg rcrl sahf rolb cli seta jnp adc das push pop add or dec dec movsb cmp in or outsb cmpsl js sbb decl popf cmp sbb jnp cmpsl pop cli push insl fmul and dec jns and and bound jbe fincstp or enter aam insl xchg xor pop scas hlt sbb adc repnz cmp dec out mov iret out rol and lea popf ja push outsb test ds xor fcoms shr jle xor add fcmovu xor aam sub gs (bad) stos jo ss pop jle cmpsb in mov es mov fwait stos ds mov mov inc leave aam xorb arpl (bad) mov cmp addr16 pop stc bound stc mov idivb loop arpl stc xchg mov ds shrl jge and mov cmp push (bad) int int in add mov mov outsl pushf loop mov sub mov jge inc shlb pop push outsl loop jo,pn sub clc int je sub xchg cmp stc pop dec dec dec mov in push xor bound jge outsb dec pop std pop sbb sbb pushf ljmp mov xchg movsl imul mov cltd or pushf cmp (bad) (bad) out (bad) and in out fidiv aas sbb inc inc dec mov push test mov (bad) mov (bad) mov addb subl xor pop mov test in inc sbb fldenv repz pop push insb nop xor movsb or or pop cmc jae dec imul ret mov pop mov inc inc stos sbb pop sbb sbb adc dec mov dec inc dec inc out xor dec pop in push aaa inc outsb inc jne fstpl inc xchg ss pop fs jnp ss pop bound aas mov fdivrs dec sbb dec dec cmp clc sbb mov ss mov (bad) out cmpsl cmp pop adc inc sub xor push inc cmc hlt ds xor jmp div mov lret or insb cmp mov test mov dec adc jnp lret xchg gs mov ds push and rclb mov ret sub stc aas iret push jecxz adc mov sbb sub push mov push and cmp movq add cmp and sti sub inc pop testb push dec addr16 shr (bad) in sti jge sbb sub inc sub mov std push pop cmpsl enter push inc jle mov jmp outsb xor aaa inc jle adc cmpsl dec xor (bad) push jp rorl sahf and jle pop ret jnp dec push jnp xchg inc jno ds pop sbb aas mov or push add clc daa jnp dec ret out imul data16 in cmpsb int3 mov push push imul ret xor mov insl inc (bad) cld insl and aaa jge mov mov arpl add add mull sub stos push fdivrl jns mov outsl mov or cmp pushf dec mov mov js mov insb lods cmp inc and (bad) lods outsl jle stc decl lret mov sti pop inc cltd dec mov mov out jnp (bad) cld pop mov movsl sub jl stc out or mov xor lea je adc imull aad outsb out cmp sbb sbb fdivl mov bound push sahf fildll jne loope cmovl loopne mov pop jae call cmp popa test adc lods sub push insb out cmp negb jnp lret test sub push (bad) fnstenv sub dec test rcll xchg xchg (bad) and scas icebp test les fwait xor adc test push sbb (bad) outsb push ret adc and jmp or mov stc mov into push stos inc sbb dec xor cmp jp sub and push jnp push fldt add mov aad dec inc jnp cmp fcomi pushf xchg fwait inc lcall test aas pop xchg sub dec cmpsl iret jb ljmp push test (bad) dec cmp mov cmp xor cmpsl nop gs or (bad) (bad) jns ds sub pop mov mov (bad) das pop cmp fisubl in mov call cwtl xor cmpsl das sub call push repz lods in insl leave mov add (bad) out inc and mov mov aas jge ja popf lret pop fdivs out pop ss fnsave outsl or mov gs addr16 repz daa push imul mov mov pop shrb ss mov sbb xchg xchg lret jp clc dec vcvttps2dq ret inc cmp fs int3 mov inc inc sahf pop aam jmp aaa inc imulb stc adc in cld in bound call aaa inc jge mov lods dec (bad) add xor das cmpb push jge jbe js sub jp scas movsl dec cmp lock movsb pop mov in into aaa jl je jp mov (bad) outsl mov pop outsl jbe cltd push movsb bound ret and mov xor mov out jbe outsb cmp les inc aaa and cli (bad) bound js xor mov cs or gs ja add jne cmp daa ret add jae sahf add sbb add jge imul sbbb test xchg addr16 or popf cld push cmp (bad) imul repnz pop inc mov vmread pop addr16 cmp addr16 out jge push push or sub mov hlt mov ds cmp push in inc sub mov mov outsl dec lret subl inc cmpsl das pusha adc pop pop cli testb es xor aam jp fidivr (bad) sub push aad dec dec int3 jo and add xchg dec xor jmp push adc jbe gs mov add je jp data16 push sarl daa lret or pop sub lea pop gs das sbb rcrl cmpsb ds mov pop jmp jae push in dec mov jge jp push stos sub jb jb pop xchg repz pop add bound dec les dec adc mov (bad) shlb mov (bad) hlt insl jnp lods psraw iret mov pusha or and lea mov int mov incb mov test repz sarb aam das daa inc gs and rcrb sbb movsb rolb add (bad) stc sbb inc aam (bad) hlt sbb add mov ljmp insl (bad) mov jle cli pop std in inc ret pushf pop sub je pop jle sahf (bad) ljmp mov pop stc sbb lret addr16 jle out jmp (bad) (bad) out add mov pop cmp mov (bad) loop fcompl ret jno sbb std int outsl mov mov jae cmp outsb mov ja mov or out push pop or dec inc pop imul aas stos inc sub scas mov js and rol out lods mov add hlt out jbe gs xor jl je mov cld pop sub cli push mov pop cmp jne cmp and cli ja sbb test das mov mov nopl in sbb in mov into pop (bad) sbb jp int mov cmp das scas inc mov cmc sti inc jle inc insl rcrb cmp cld clc pushf mov pop out rcr int push push iret fisttp mov ret adc popa cld aas add push xchg lods sub jle mov or hlt ja jns jmp sahf inc sahf movsb mov das push repz inc jbe pop adc push dec repz mov cmpsl aas mov push mov (bad) and stos outsb adc mov pushf subb inc repnz stos sub cmp inc hlt test mov cmp sub jne xlat icebp cmc lea pop push jno insl (bad) cmp pop mov (bad) and ja xlat push mov or pop cmpb fdivr bound mov xchg int cmp int3 dec test out sbb add add psubd ds jp adc lods divb call pop and inc xor stos dec int imul mov insl aaa gs sahf jmp fxch out inc mov mov pop test lret jb std in mov inc stos sub jp lods mov je movsb add std pop sub pop test pushf jne sub adc push cmpsb sub jne ja ljmp push cmpb pop int inc adc dec adc jo cmp out aas lea lea test aam dec jae xor mov inc add xor dec pop jns dec push push dec mov das pop repnz aam data16 (bad) jo jne mov sbb in out test add pop sbb cmpsb dec into iret dec xor inc loope das fwait ret shlb mov into leave sar clc jl or jge test leave outsb jle push int3 loope sahf or les sbb mov xchg push rorb ljmp dec pushf and fnstcw cmpsl xor inc push bound add in push out jno xchg movsb cs xchg inc push inc sbb in push shr and pushf dec bound faddl out sbb inc test mov mov pop stos jge stc icebp cmp jae mov (bad) es xor popa lods scas push loope ds jle push stos stos adcb aas jp test xchg (bad) pushf mov std stos pop pop mov cmpsl dec cmpsl scas push ljmp adcl rcrb dec mov mov inc out and xor inc mov add test (bad) cli daa adc mov xchg bound mov stos fild insb and push cwtl in jg dec (bad) (bad) xchg cmp cmpsl inc scas jne sti imul mov imul ss in int aaa pop cli int3 sbb inc dec (bad) lea (bad) sbb in shr das (bad) pop out out int3 cmpsl push es lcall test jb mov int inc sbb push out add mov push mov shlb std es xor inc push pusha xchg test fsts lods sub (bad) mov xchg call adc mov pop and jl adc into aaa push mov inc inc call (bad) jnp mov aaa push adc mov sbb cli jmp cmp jbe inc fidivl and test (bad) cld sub insl dec ss ficomp pop in and (bad) xor sbb fcoml jg jae imul push shrb mov pusha (bad) aaa mov sbb fisub jbe sub dec jmp sahf fwait outsl sub cld scas dec cmp mov jae cld jge mov sub shrl sbb sahf inc scas invlpg dec jae mov pop clc pop or jns addb clc jle add (bad) and mov and push out fiadd mov fistpll inc jl insb les js jne test js sahf inc mov dec mov fcmovnbe add shrl xor cmp xorb in pop cmp xchg push jo inc js pushl jns dec sarl xor mov sub cmp jns ret push je es (bad) pushf jle lea pop mov mov sub xor jns mov xor ss adc mov mov mov mov xchg aas mov imul mov mov push std and fldl and in aad xor and mov faddl lcall cmp lock fdivp andl lcall mov je repnz (bad) inc mov xchg repnz pop push jb (bad) aam shrb stc lahf shr mov push mov (bad) bound enter call and adc pop iret repz pop push mov testb lods dec push mov mov dec mov push sub divb mov iret sub aad pushf jmp ret xor xchg adc pop mov mov add mov mov jnp lods js xor add sub push cmp cmc sbb sub pop jg ret mov mov repnz ds insl inc mov std mull pop sbb pop out movsb cmp jne cmp dec push sub mov xor cmp cltd (bad) aam stc outsb push push jp jmp cltd add xor repnz repnz cmp jge fucomi pop mov pop pop pop mov push fidivrl lods je inc xor or jno mov (bad) mov mov dec fcomps jae decl test mov mov add frndint mov fbstp pop js lds fsubs lea out fcmovbe test into and or push fs repnz test mov test cwtl repnz lods es into popa cmp cmpb cmc dec dec int arpl xchg cmp lcall inc scas jnp iret lods pop fldl test arpl lods inc (bad) stc js dec pop mov pop mov mov data16 jl cmp dec fiadd cli mov jg,pt and fimul cmpsb inc mov int dec pop mov cmp pop imul cmp jae cmp ss addr16 dec sbb pusha pop mov pusha outsb xor and and mov dec mov xchg sub cwtl mov aas in dec out xchg push imulb repz or dec insl test pop cld pop adc add mov xor jmp (bad) sbb rclb push sub and pop inc xor arpl cmc lret outsb test (bad) neg pop fadds mov imul inc in pop push inc cmp (bad) cmp dec jle sahf ror stc out dec je test ss xchg push clc test repz jne cmc mov cmp in xor push enter repnz push mov pop add loopne lods xor daa inc sbb sub inc lods jae mov or jp fadds pop dec xchg jmp inc jo stos test rorb ss or cli inc xor bound daa in imul cld mov sub repz fiadd mov pushf (bad) dec imul cmp test sub scas leave xor int3 adc les (bad) mov and pushf mov mov mov (bad) cmc inc dec cli inc cli xadd inc adc xchg cmp or dec jmp cld sbb (bad) mov testb inc jbe inc sahf into jle add in and and dec lock aas popf ljmp jl jno mov fisttpll andb in push jnp mov adcb aas (bad) jp fisttpll scas or inc cmc add xorl mov loopne jp inc das outsb sbb out push push dec sub cpuid adc bound lea adc scas mov xor inc mov adc jp xlat imul xor mov sub push xlat pop mov mov inc sbb cmpsl aas cld ja cld stos inc cmp in cli into adc xor xor cli inc mov cmp fistpll push (bad) (bad) adc js (bad) jp cmpb inc dec ljmp xlat pop adc data16 sbb imul jl jecxz inc dec (bad) sbb mov repz cld pop cmpsl test test in cmp cli and movsl jl lea std mov xchg das xor clc jae scas (bad) dec bound push lret call add mov pop je insb into bound int fdivrs jge jle test mov divl cld imul and push bound inc adc fs pop jnp (bad) imul hlt loope mov scas inc push push push xchg imul pop xchg iret in mov or fsubrs push fldt mov in repz lcall and dec and daa imul enter lds cmp sub push xlat fdivp jbe mov (bad) jns ret jmp pop fisubr imul mull (bad) pop repnz mov and xchg sarl (bad) xor xlat ja cmpsb sbb jmp test ror xor mov arpl loope sub xor jbe sahf mov sti inc jmp (bad) push in mov sti cmpsl nop es shrl mov fistpll scas xchg or loop xchg mov push jle and xchg inc inc std push jg push pushf rcll repnz xchg mov jge dec (bad) mov (bad) (bad) pop rcll setg sbb scas in fcmovnb ret repnz out imul or in push mov out sbb test stc jo (bad) (bad) xor sub dec out in inc outsl pop mov std mov mov addb mov (bad) out xor out stos inc pop xlat or jmp inc sub loopne out mov lea int dec imul inc stc pop out dec adc cmp xchg js mov bound stos jne xlat adc mov inc sti fsubs popa out fiadd ja xchg xchg jno fs jae lods aaa out xchg and sbb mov mov mov roll fwait cli mov inc insl xor pusha mov jb dec dec and stos inc push (bad) jle rcll and cmp outsl xchg aas jge test cli mov xchg in dec pop outsb dec pop jle aas mov test dec sub jge push stos andl movsl mov xor mov ja outsl decl jae push mov aas bound xchg mov xor mov push inc daa inc fistpll or mov in test add rorl cmpsb jnp int insb mov inc aam add pop mov hlt inc push pusha mov push cmp (bad) jae test mov aad imul or std add jns inc mov outsl out lock dec mov in inc push sub insb sahf rcrl std xchg push add mov mov jmp adc jl mov pop and pop aaa pop dec out sarb pop xor jns pop pop js pop outsl jns fucomi in ja lods push mov jnp mov sbb pop jbe push dec jp jno dec inc (bad) out jle and jl pop dec js pop outsl outsb dec fildl jns pop dec js pop outsl insb dec fucomi push je repnz repnz std out pop xor pop js push cli outsl jge fucomi cmpsb ja lods push mov jnp mov pop scas and push js cli jge (bad) mov sahf movsbl je mov add or mov je lods inc mov inc or in jnp xchg enter (bad) or push daa dec stc sbb neg jnp pop pop mov sbb lahf not push rcll push pop scas pop aaa push cmp es stos out out xor jl dec outsb testb repz aas sbb ja insb pop test (bad) mulb out cmpsl jne mov jnp dec outsb aaa sub jne ja (bad) xor je aas and shrl cmp mov push mov cmp lret out mov in enter add aad pop out jbe mov daa mov subl sub pushf addr16 ja test data16 ficomp push fildll jmp movsl jp (bad) in loope sbb lea lods pop decl mov (bad) in mov xor push out mov popa out shrb sub sub mov mov js mov js and fnstcw sub xorl mov jb (bad) dec sarl inc mov jne pop scas xchg jns push mov and sub inc enter mov push decb cmp push aad cli push lds dec lcall out pop lods push ficompl dec lds jl jae inc push cltd popf (bad) push pop adc lods cmp pop outsb pop jno adc insl pop dec pop and popa add cmp aas cmp sahf and jmp jnp cs sbb pop and jmp aad sub in jmp xor jnp xor push sub pusha cmp sahf leave nop cmp lock jns pop mov fisubr jmp das sub xor dec fstpl divb push into cmp mov xchg in cmp pop lret pop jnp pop outsl negl xor sub pop loopne imulb (bad) outsb pop mov (bad) cmc movsl repnz sbb sub jmp cmp jp rcll inc pop cltd notb imul scas jle jne lahf pop ss pushf mov pop (bad) (bad) ljmp lods sahf aaa insl jl mov jbe mov out and std enter xor stc std pop add outsl pop test stc pop add push test mov ja mov fstl lret test inc data16 fildll sub cmp pop insl ret insl mov and int cmpsb sub mov fwait xlat call or imul fiadd fistpll scas jle mov add (bad) (bad) sbb insb imul inc sbb cmpsl jl jo cmp jae aaa ss push iret sbb insb aas lahf xor jno jns adc push insl pop sbb dec pushf subl aam and pop les hlt add test push and js roll ds pop rolb test jbe (bad) lds cmp fisttp jnp pop jnp iret push push xor int or mov mov leave dec bound popa mov jmp sti outsl stc mov or ljmp jge (bad) cmpsb int3 aaa aas (bad) in (bad) xchg sbb jb xchg jno cwtl cmp add in in sub push xor xchg fistpll lods mov incb mov rcll pop ljmp inc nop or pushf leave sub push cmc pop rclb add adc cli daa mov push cmp loope lds testl pushf (bad) ja in into push in fsts cltd imul mov pop aad cmp in sub and sub (bad) aaa out lret sbb add int3 scas mov (bad) hlt adc jo mov lret in cmp std fdivrl rol jl (bad) inc jge iret sbb (bad) mov lret aaa sahf xor mov test shrl push mov pop dec and adc jp mov mov clc (bad) fstps loope mov dec nop jbe jecxz hlt in ja fs lcall push popa pop cli in ss test mov bound xor jne dec (bad) xor out push push pavgw dec les pop adc mov int cmpsl imul loope fwait xorl mov add jp pop mov fucomp mov mov aaa or bswap mov push mov cmc fsts int mov outsl sbb jle (bad) mov jge jnp push jge ja or ljmp cwtl push sub aad inc leave idivb jns sahf sub push icebp test jbe std daa ja add je or pop lret jns sub loopne mov gs or ror or jne adc mov lock sahf push (bad) mov imul and mov lods in add push mov sti jmp movsl gs lahf jle fbstp ss stc jo mov call jmp inc mov adc stos loop pop fistpll jne arpl jb fidiv test sub mov rcrb lods dec xor sub (bad) lea test cmp add jne push (bad) mov mov mov pop cltd inc inc jae add sbb push loope,pn mov sub inc push mov lret jmp push pop pop gs add stos mov mov and ss sbb (bad) fbld add aaa cmp jmp inc push je or mov aam pop mov roll add aam in std sbb sbb mov jnp xchg inc stos jns stos cmp notb mov sahf int lods pop ret sbb xchg (bad) enter in xchg arpl mov sub aas cmp idivl xchg pop sahf dec add mov dec cmp and stos xor aaa jbe rorl divb sub ja lock dec push outsb dec nop xchg test aam sub sbb inc das cmpsl (bad) jb pop mov in mov test cmp (bad) loop cld mov dec int es std jge mov shl incb insl call ds test pop enter pop std lret mov jno jge sub aam fwait mov or pop aas mov mov xorl std jle pop call adc pop cmp jbe dec mov jnp push xchg mov gs add out inc adc repz (bad) imul dec stos jns in jp je in dec push xchg aaa outsb dec sbb in aas adc xchg jbe dec (bad) fidivrl lds lods cltd cmpb jne ficompl add bnd cli aad inc negl outsl jp pop or mov jge mov out xor dec ret mov mov jns pop dec cltd dec mov out xor dec inc outsb mov faddl ljmp popf outsl and sahf arpl push xchg and add test jb dec pop nop dec adc into scas subl jno jne xor mov inc xor sub data16 (bad) jo pop or add icebp xor mov jb inc outsl xchg data16 in mov xchg outsb lea lret fsubrs mov mov arpl sbb shrl mov dec sbb sti outsl aad jbe inc xchg cld std lret sbb ret loope stos hlt sub je jle es push int3 pop in fnstcw scas pop mov dec push fdivrl pop test inc (bad) fmuls lahf cmp nop test pop popa jbe add sub ror mov fdivrp (bad) cli enter ret loop test int ss and cmp cmp fnstsw int3 nop je out cmpsl add clc lds insb inc int cmp mov test orl inc lods int3 inc mov jno jbe js cmp push xchg outsl or mov jnp fisubr and jbe jo adc lods lods sbb inc shl test inc imul (bad) fildll adc cmp repnz dec aas mov cmp cmp inc sub in jne adc jmp mov xchg outsb into es fisttp jle daa (bad) mov pusha pusha repnz mov adc push int jge sbbl jp mov cli js arpl inc cmp imul jnp cmpsb in ss dec js and jbe (bad) shlb jmp call lods add xor cmp sub aaa ret inc test popa xor or lods mov cld mov xor lea test (bad) or lock inc jno cmpsb mov (bad) jmp inc bound ret xor nop dec xlat arpl xor lods fldcw loop repnz fistpll into pop lea inc add mov mov gs jp test cmp fldl mov in loope rcrl cmp adc cmc aas dec insb mov cmp push cmpsb cmpsl stos mov daa adc xlat cmpsl repz or or out and mov int xchg ret jg fcompl xor push mov cmpsl jbe insl outsl loop (bad) popl jo jl sbb insb xchg jp adc ss lea adc lock ja je lea imul (bad) not xchg push inc dec lods sbb mov (bad) stc mov in xchg sbb and les pop push mov push push adc sub aas xchg (bad) aas or rorb sbb jmp jnp jecxz adc js in ljmp xor aad (bad) lods rcr stos call inc ljmp inc cmp fildll jp mov (bad) mov xchg (bad) ss mov xchg insl mov xor push xor xchg cmp clc mov add mov xor jmp in sbb std inc dec xor mov addr16 loope sbb xor test jp pop mov aam sub out sbb jnp pop jmp inc scas xor es adc mov dec push mov loopne fnsave jns mov xchg (bad) fldl sbb mov repnz repnz fsub stc sub data16 mov repnz adc fwait mov xor or pop lods lea flds int3 xor pusha xor mov pop lea ret pusha inc pop pusha outsl adc std mov mov lcall mov push adc mov lods cli add cmp jnp lock popa stc pushf pop test sbb push in test insl push push fcmovnu inc sub jmp fdivrl push lcall aas mov test enter fdivr xor jne cli mov dec ja or repnz mov pusha aas leave jge,pn outsl (bad) in pop ja lods jno add shrl jge repz push xchg int mov mov loope sahf ss adc inc (bad) sbb inc pop pop xchg fdivrl or inc mov mov inc loop (bad) xchg ret push lods (bad) scas scas mov mov sti or je adc jl outsl xchg cld mov cmp ret pop sub adc mov jp inc cli sahf or inc lds jp cli lret cmp inc movl inc std inc test cmp subl pop jl mov jmp mov mov jno push in jnp push aaa test cltd mov ds add dec test add ss bound add jle jmp sub cmpsl stc cmpsb rcll inc xor cmp mov push (bad) bound adc (bad) in test test sbb fsubrl ret sub les push cld and cmp mov push (bad) pushf inc aaa mov mov mov jge add jno sub arpl out mov cltd stos inc dec inc dec pop xor fldenv sbb mov (bad) cltd (bad) mov test punpckhdq idivl sbb mov jp das jbe add mov mov mov fstps (bad) repz outsb or mov pop stos outsb int3 and lods sbb push mov mov leave jge fsubrp into cmpsl jp pop leave pop push pop xchg sub insl andl (bad) rclb out and enter mov stos imul sub xor and imul mov inc stos push cld mov jb (bad) cli loop arpl mov mov pop mov dec push inc (bad) dec pop and or mov xor cmp cmp fdivp pop pop sbbb xor decb imul js lcall insb insl ja mov dec aad pop std imul icebp andl pop inc ljmp jns mov xor scas mov or icebp imul lods add dec pop ja xor and sbb add dec pop mov and mov dec push inc enter dec xor push cld and loope gs repnz in xchg call push pop or das sbb and loop fs (bad) jle (bad) cmc faddp mov test and jle cmp pop maxps insb jns push sub data16 lret int or inc mov jl and inc mov mov mov inc jl jle (bad) in pop jne out (bad) (bad) imul jae cmpsb fdivrs aaa pop sahf (bad) (bad) jg loop mov inc popf in inc inc (bad) nop jbe xlat fwait imul ss rcrb test ret lds inc jne pop bound outsl insb add int3 cli mov pop pusha jae pop ljmp push call inc lock or mov push push jnp cmp lds mov add int stc mov ret jnp lea sub cltd out adc lea pop jmp cmp rclb inc cmp fdivrl mov cmp pop or lcall fwait loop (bad) aaa xor adc into fldcw jne jl sub pushf js adc loop push xor and jbe cltd lods mov sub add popf mov mov das dec jns mov lret popa stc mov jle jge and (bad) insl mov cmp ret cmp cmpb shr mov sarb sahf xor (bad) or mov ret sbb insl fwait pop push frstor fdiv sbb jmp insb add fsubrl pop mov adc fs or inc push sbb dec adc pushf adc outsl xchg imul clc inc jae pop lahf push inc stos cmp dec and inc mov loop mov push addl sub jg mov or xor int3 pusha mov (bad) enter insb and jl mov mov test adc inc lret call mov xor arpl jnp sbb push xchg jne mov cli adc dec xor gs inc repnz push ja jle inc in cltd in popa and mov std mov mov cmp int or sbb jno aas jne and mov inc dec cmp negb pop inc je fiaddl cld shll loopne sbb stos (bad) jo pusha cs jnp xchg jecxz ss je insl fisub jne mov mov inc outsb push dec int3 data16 xchg or sbb jmp into dec dec push or lret subl xor cltd aaa jno and (bad) insl ljmp int push add sub mov dec dec sar push mov push jne test cmp lods aad cmp jmp add jne jle jne bound mov jle (bad) jnp cli inc rol cmp divb mov mov in jle jmp add jmp jnp test sarb jl cmc jp inc lret aas push mov stc mov aaa repz mov xor cmpb pcmpeqw outsb inc adc pop pushf fdivrs cmp std inc ds adc fidivr lods cmp cli add std and (bad) repz mov iret sti dec (bad) (bad) jbe ds int lock addr16 mov dec dec push cmp ret xchg ljmp and bound push xor push xor push xor mov sub pop fidivr fistl push cmp push cli pushf ss dec pop and addr16 and in jge push lahf sbb mov and add pop outsl jp bnd jge add or inc jmp cmp stos cmp xchg insl add cmp cwtl mov jl pop jp lahf dec dec or in leave adc out mov or faddl push jge cmpsb push shlb js sbb inc popa add mov aaa hlt sahf mov mov sbb or adc jne ss dec mov adc push sbb add divb call fs cld mov call scas cmp sbb cmpsb test (bad) push fist cmp in cmp outsl inc mov fisttp jge jae,pt cmp dec ds inc fisttpll andb (bad) int3 (bad) repnz jl lcall insb pop or stc repz jmp sbb aaa (bad) dec insb into jp jge cmp xor push fdivp flds outsl dec into repnz iret mov jle push pop pop mov lods movsl and outsl mov cmp cmp std push stos into lods push and jns,pt mov sbb cmp sbb rorb inc inc sub imul and push out mov dec dec sahf sub into xor imul pop add sbb pop xor xchg stos jo test mov fstps jno sub cmp xor xor add std out inc mov ret flds mov in mov test pop xchg rdpmc loope inc int3 in fwait in out jmp fstps cli xor jb popa aaa jno push scas aaa ret and (bad) jnp inc xchg push sbb fisttpll push faddp jmp mov inc imul adc pushf jmp inc dec cmpsb jmp mov add lods stos mov push ljmp call cmc lock inc cmp in cs lea lock sti xchg loop mov mov xchg imul jae incb test cmpsl or lods fisubr dec or inc sub outsl pushf mov lods dec jle sub mov jge inc sub (bad) test (bad) out mov push pusha jg lds inc or adc mov jnp outsb jmp xchg imulb inc (bad) jp jbe cs or cli cmp pop cmpsl cmp addr16 cmp arpl xor push (bad) jmp mov mov push cmc push aaa pop jnp inc jnp int sub ret mov iret and int sahf xor cltd fwait mov add lahf inc popf out inc mov dec int3 call (bad) mov pop cld loopne adc or push imul push jnp repnz sbb jl dec sbb jp ss cld xor push mov scas push mov push xor jno sub push outsl mov dec mov cmpl mov mov aaa mov dec test sbb outsb repnz (bad) shl cmp into dec sbb orps push ja pop pushf inc les push and dec jno into dec and jae bound rolb mov out inc cmp inc cmp pop movl stos dec sbb mov lods fs jl lock jecxz and inc js push (bad) repz stos dec cmc mov std sbb cmp jns fist mov or push push jmp inc mov sub int arpl mov fnop faddl inc (bad) (bad) or movsl dec sbb daa xor (bad) and mov xor gs mov loope ret mov jecxz (bad) repz or add add or fldcw daa pop decb inc cwtl or addr16 mov daa cld das and pop jp (bad) lret mov and (bad) mov mov test mov sub or xchg in and (bad) dec mov ja mov push push mov es xor jle mov repz jp push jne rorl xlat movl fcompl cmp sub popa push inc scas jae dec loopne inc xlat jae clc jns cmp dec cwtl jp (bad) pushf bound cwtl test pop cmovno jmp add dec je pushf inc mov aad rolb cmp in and enter dec sahf fcmovnu aas pop loopne and arpl sub inc mov lds test das sbb adc std nop (bad) push pop cli push sbb push movsl mov popf dec pop mov lods bswap scas jbe mov iret dec xor push mov dec sahf mov mov movsl jmp ljmp and lcall adc inc jle ljmp mov insb dec cmp out adc add cmp xchg sub outsl bound sbb ds repnz or push test mov xor aas sbb cmp lahf sub dec mov gs push je cmp aaa (bad) push lock xor ja pop test sub fdiv inc pusha cmc add lret les sub arpl std or mov pusha xchg cs jge pushf stc out jle lret or or cli cli std pop cld cmp cmp lahf sbb mov sti pop pop mov out mov dec cld sub je jge int3 aas cmp (bad) daa lods mov and sahf xor mov mov jnp cmp inc and mov mov add jmp imul fs jge aaa sub inc sarb mov ret sub es ja jnp or das dec cmp and push jle sub lea test jle mov jbe (bad) dec in inc inc inc popa lds inc adc js inc test sub ss sub jp inc pushf jns sbb xor inc imul adc cli or inc jle and and or xor dec iret jp jmp xor push inc imulb stc ss ds jge mov pop clc mov clc push loope cmp notl in (bad) sub adc inc jmp pop stos lea jge mov in dec mov or pop clc sub std rorl push jl sub jle fbld pop sub adc jb sub imul in test xor jl add mov out mov mov cmp pop lods outsb pop jle cld add pusha aad ret hlt push fimul jns add bound xor jne and mov xchg and dec pop lret pop jnp add int insl jb pop (bad) pop cmp or imul adc jno (bad) ljmp test fdivp fcmovb scas outsb fdiv push and ds jmp gs sub push jb or xchg sub sti push ja hlt mov push insb ds in pop or and mov hlt push inc jae testb stos push pop mov jbe sbb test scas inc idivl fstpl inc sub mov loopne jmp dec cld imulb outsb inc divl pop jp das jnp or mov arpl jbe jno pop ss pusha bound or mov int sub pop (bad) into ror inc test pushf das xchg mov mov stc fld hlt cmp call inc mov aad sub mov stos sub and jns ret imul (bad) mov push mov or inc push dec cltd mov jp pop call cmp cli mov js outsl imul fldenv jp jno push cmp pop pop pop pop (bad) stc mov aad sar jbe (bad) cmc pop inc jb (bad) fsubrl sahf test sbb mov jle outsb cmp dec inc inc cmp push pop fcomp test enter jecxz push insl jle std imulb ja (bad) cmp jp jns js,pn inc push popf sbbl shrb aad fisubr inc cmp sbb jmp mov call stos icebp mov subl in ljmp pop push pop and push iret dec xchg enter outsb xchg std mov cmp jns lret adc enter jbe xor imul mov cmpsl jl pop push mov jp mov and mov wrmsr dec or jg loopne,pt dec shlb je clc test dec jle mov push mov stos sbb add outsl dec xor pop int3 scas adc add cmp test aam sub sbb ficom (bad) ljmp sarl pop mov test (bad) in mov jbe lcall pushf dec outsl fsubl mov pop insb out cld gs gs ja imul outsl (bad) cmc add mov stos xchg rorb into (bad) jle icebp movsb dec sbb or je jnp mov ret (bad) cld sbb dec sub std in loop jnp,pt pop mov aas mov xor pop cmp std add bound cmpsl lods sub jmp adc out adc lods mov frndint push cmp cld dec mov jns in je xchg and (bad) in mov bound sub xchg jp pop pop addr16 xchg cmp gs or jnp rolb out jns dec inc mov stc add mov xchg xor inc inc (bad) hlt mov and mov jle test add rorb repnz add mov push imul mov xchg loopne sbb dec push ljmp jp inc jge arpl sbb cmc pop std imul cmp sti ja cs jge (bad) icebp and js out cmp inc inc sub push xor movsb or mov push push iret jnp jne dec jb fnstenv sbb stos ds inc test (bad) enter movb (bad) jnp and jns push fs mov push sbb sbb (bad) xchg inc push jbe mov cmp in ja adc inc fwait dec and je xor pop dec fisttpl jecxz pop inc loope addb lds push xor pop push arpl dec sub and mov bound push ret mov scas notb out jnp (bad) stc dec cmp jno,pt dec pop lret test je mov into loopne mov fs cmc jp jge or cmp mov outsl decb mov jl lods sbb enter mov fsincos aad push pop add aam movhps imul mov pop mov sub push aas mov mov dec push dec jnp in rcrb add xor or and outsl inc bound mov and out in das enter push lret dec pushf jns in lret lods in cmpsl imul dec sbb add fdivrl dec push iret mov jno inc inc stc outsb addl mov leave (bad) sub movsl in (bad) mov lcall lods scas xor sub sarb cli ss cmp imul negb inc pop out cmp dec (bad) pop mov int int out cmova orl jnp and mov xor je cli jle repz mov mov cmc ds mov inc je mov jo mov lods (bad) int3 sbb cs mov jl jle jnp (bad) jle clc cmp jge cwtl push adc xor pop outsb jl xchg mov mov imul mov add insb mov jne mov ja in scas mov scas negb ja test inc test mov cs fwait pop rcrl xchg inc cmpsl mov movsb mov je das add pushf sti jns lods aad imul sub icebp pushf jb mov imul std push cli dec and sub and push ja xor mov enter and rolb jne hlt popf mov push cmpsl les inc testb (bad) testb mov incl dec sub xor testb mov mov std ss ljmp imul pop daa jle ret aaa stc xchg pop inc rorb mov mov clc jae test std mov test rcl xor scas ljmp das imul or sbb test push movb jae mov mov pop mov and sbb mov jl into bound jp push jno push push jns outsl arpl pusha test push jl,pn push jo push xor fwait ss ss outsl inc mov in push data16 cmp cs orb xchg mov mov pop movsb ss sbb add sub test mov sub xor mov sub pop fwait pushl sar mov and pusha adcl mov pcmpgtd jle repz mov push mov mov mov jnp mov or lret in test cmp push stos jns,pt inc jl sbb cltd inc mov incl push cltd inc xor sbb scas fidivl dec add push mov mov xor test (bad) jecxz jle jnp jno adc mov cs jmp xchg mov (bad) cmp pop and aam outsl xor icebp imul sub jg sub (bad) xor int3 js inc jle in mov inc pop cmp cmp subl mov mov ljmp popa into sti and inc xor sbb jns xor icebp lods (bad) xlat aaa clc jle xchg or ljmp ds iret mov xchg (bad) mov pop sbb pop sbb push loopne mov mov das adc cwtl fstpt arpl aas insl out clc cmpl add js mov dec pop or lret fstpt sub dec jns movups movsl mov inc fstpt mov lcall mov inc out or in gs in into jbe inc add sub jbe cli cld orl pop repz pop xor xor inc adc popf xchg add inc mov dec mov push mov cltd inc cmp sarb xor dec add (bad) jmp push dec cmp pop xor ror sub out fwait mov outsb jbe insl mov insb test fadds and cltd cmp dec add or gs jbe or dec dec mov addl lds sti cmpsb mov mov sub jmp mov mov jp mov cmp (bad) loop lock sahf jmp shl mov gs into jnp iret in lcall sti inc mov push inc mov add gs mov sub jle push pop stos or mov cld mov sbb jecxz mov into push mov mov shl stc aaa mov mov int add loope cmp cs push je dec mov sbb in mov lods dec xor js add sub mov push scas hlt dec hlt das push jbe inc or xchg sbb dec jns jp jnp outsb jns (bad) jp sub mov and sub cmpsl outsb mov mov aas std mov mov sub push frstor push into mov dec dec jae mov xchg add pushf stos (bad) add inc jge mov js mov cmpsb imul jbe ja inc imul mov pusha xchg push (bad) fs add movl lds movsl add pop lahf sahf dec pop sbb test jns dec out sti push cmp std and push sbb jnp jle ret ja in ss cmpsl mov ret pop dec sub ficomp xor insb xor jmp inc mov pop inc mov jle jne cmp cli je and pop or dec sbb push sbb xchg repz ret fimull cli loop rcrb pop sahf les ret arpl stos dec adc (bad) jae mov mov inc mov mov cld outsb or jge imulb test cmp ret imul push movsbl fnop cltd xchg decl (bad) rsm pushf dec mov xchg pushf or daa cld addr16 lock sub inc or push cmp inc mov cmp xchg cli inc cld (bad) jno mov xorl dec (bad) scas fwait mov jle mov and ss call jge lds pop dec ja test ret mov out incl cmp lock bound mov mov idivl mov (bad) mov mov sbb sub mov xor arpl jno outsb and mov jl pop shufps mov cmp add push mov jns cmp insb lea cmpsb add popa stos mov mov or lea mov sbb pusha cmp out cwtl (bad) cwtl cmp mov xchg lock ja lret inc push lcall mov insb mov and leave cmp push (bad) mov addb and imul outsl pop inc lret sbb inc inc popa pop test xchg add ret pop stc orl jl xchg cmp leave lods mov (bad) negb test orl call add sub push js xor cmc dec xor lea mov mov seta push lods jmp jmp push insl mov jge inc jle mov (bad) (bad) setle idiv dec fdivr fdivs andb jp xor xchg movsb int3 sub sub xchg test stc push push adc lret das insb xchg stos leave loop in xchg xchg ja loop inc inc cmp push (bad) lea jmp push add inc jmp jns (bad) inc sub fxch inc sbb sbb mov mov aad mov jb int3 and pop push mov aam cs ljmp incb dec sbb lods jmp xlat les or jb jle les rol and movb dec push stc jmp mov lea mov clc pushf test sub call lea ja stc pushf add add pushf add jo stc bt or jmp cmpl insl cltd mov xor sub pop vmovupd jno push cld add aam sub cmpsb pop sub and sub dec fyl2xp1 adc (bad) sbbl daa mov pop dec pushf fwait je jnp pop pusha cmp sub insl mov ret lea sete movl pop lea movzbw lea pushf call adc pop inc rcrb fisttp sub orl adcl fwait aam sbb dec icebp mov and lret mov data16 insb sub mov fwait mov or popf dec jl fnstcw inc pop aam add int3 roll int3 nop inc je mov xchg jp inc fnstenv xchg pop jo into cld in cmpb sub dec sub sti cld and or lods mov jnp xor mov rorw and divl sub dec mov xor or aaa lret fsubs xor inc and loop lea call pusha lea jae jmp movw call ljmp inc or seta rorl iret push push popa cld cmp pushf pop xor clc (bad) sahf inc xchg ljmp sub out mov daa or lret cli (bad) push popf int add jno adc int3 and test jb iret scas cmp (bad) cmpsb cmc int mov push cmp mov or or ret pop outsb repz sbb jmp or cmp (bad) adc jne,pt sbb mov ss inc scas test std or add cmc or imull xor mov repnz xchg push add popa jnp cmp mov cmp dec adc aad xchg dec (bad) or mov (bad) stc and (bad) call pushf jmp aaa mov das jns inc or sub rorl lods jbe orl cs imul ds ret and inc push dec (bad) xchg out push jmp mov jbe pop dec or inc outsb mov jne popf jecxz outsb inc lahf xor ret push xor insl mov ja add push adcl cld add je jo cltd jmp inc jne jl adc inc cltd sarb xchg xor lret jmp bound xor imul mov div inc cwtl aam stc pusha mov js mov dec stos cmp lret sbb sbb push push or mov add xchg into (bad) (bad) jmp jmp push pushf pushl lea jne call pusha pushf pushf movl movw pushf mov movb lea jmp jecxz jge jp inc fwait loope out fsub les cli sub mov aam fnsave aas insl adc das lahf repnz ret mov mov mov mov cli inc and popa enter mov xchg iret pop scas test call sahf ds call ja inc mov lcall push cs push in (bad) cmp mov movsl dec cli int lcall je fs dec jns (bad) mov inc add stos rorb mov mov ja fstpl pop int mov sar jge inc inc cli xchg out (bad) pop inc sbb push add imul movsl dec jl sbb (bad) jne push xor mov ret sub adc mov movsl inc imul out cmpsl sbb mov lods xchg test pushf jl js pop sbbl jbe push dec (bad) pop sbb inc jnp ja adc mov inc (bad) cld aad adc movsl adc cmpb push pop jnp pop jp ss mov sbb pop and push fdivl mov xchg mov dec sbb sbb and (bad) (bad) insb ret imul hlt outsl cmpsb adcl jl ret pushf jmp test add (bad) out mov mov leave jmp mov test inc jnp xor inc pop lret jmp mov ss xchg jae pop xchg (bad) daa sub jne lock frstpm(287 test cld and jg sbb ljmp repnz push jge dec js movsl repnz je test cs pop cmpsl js pop pushf push into outsl adc jae dec mov pop sbb pop std dec cld outsb sarl ljmp insl mov adc mov adc fcmovbe and dec cmpsl pushf mov pop test jmp sub xor push xor dec decb jg cs sbb inc in inc loop adc out jle mov mov fisttpl aam outsl xchg add decl add bt add jnp pusha add pusha push pushl lea jmp pusha mov pusha mov lea pusha call xchg enter pop inc cmp mov jbe add inc into out and xor push gs mov push insb out push mov (bad) icebp out pop mov dec outsb test xor xchg cmp mov and scas sub sub sub fwait int3 sti clc cmp mov xor roll notb add jns adc push add fldl adc fwait call fidivrl lock push adc gs sti ja mov shrb add scas adc in xor sub mov sub adc loop je fdivs adc outsl stc sbbb movsb movsb out add jbe dec fs (bad) or add fwait (bad) mov gs jae lods les repz hlt xor divb and cmc sbb hlt pusha lea jmp lea ja xor pusha xor (bad) lock sub mov add dec lea add mov mov cmp mov not adc not mov call call jg (bad) decl inc jg in in sub std addr16 jne sti scas cmp js mov int3 jnp jle sbb adc loop add jp cmp add fwait cmp sub jnp icebp in jl push lret xchg dec pop cmp std mov aas neg mov decl mov lahf pusha ds aas pop loope cld mov push pop push scas adc pop push push xor das mov xor std mov and repnz sbb jge out jg (bad) or mov out fsubp stc mov ss mov xor icebp mov xor jg outsb cs lods insl sub sub test cmpsb es gs and mov sahf pop push fstpl ficompl pop sbb (bad) xchg push push aad push jg aam xchg push adc xchg jg adc into mov int lea int3 lret or mov enter jg push lds jg (bad) inc add addl mov inc (bad) sbb mov inc cmp pop adc mov pop mov cli aas das sub jg jp (bad) enter mov ljmp jbe jb add cmpsl cmp enter dec dec xchg fidivr adc inc scas inc mov (bad) fdivl dec decb gs pop les inc xor jg sbb es jo cmpl stos call test or xor ljmp jg out pusha sub rcl push jg cmpsl fldcw test cmp lret pop adc mov jnp mov dec inc adc gs jg fsubs jnp inc pop cmp (bad) sbb pop cwtl (bad) adc jnp mov mov clc push push fnstenv and push jg xor mov or clc dec loop outsb jp jg lea pop pop xor or movsl adc mov mov jp add pop push pop or adc xchg mov (bad) jg inc adc jbe cmp movsb xlat adc ja (bad) aas fldl loopne mov cwtl aas sbb add lea insb aam cli fxam mov js inc push into shrb jg ret das jp iret jg adc jg pavgw push xchg dec sbb aaa mov xor lahf mov es xor push jg je push mov std out mov pop rol mov jg pop cld mov lcall jge lods hlt popa jg pop sarb stc sub jg inc cmp cli orl insl stos lea pop xor jg fcmovu pop xor test arpl arpl cmpsl dec jl dec mov add xchg and or sarb jae mov sub aaa mov pop jg cmp mov or pop and stc mov les pop fdivs cmp test ret jg aaa pushf sub sbb push jno dec push or jg pop sub in int jg mov inc cltd jno aad cmp fcomps fmull cld inc mov pushf sti add adc daa lahf mov mov mov jg mov (bad) jo push das loope jg clc pop movzwl mov repz sub mov rol mov mov sbb stc pop mov and and mov or pushf outsb fistpll xchg sub lcall arpl out pusha lods mov std mov ss out inc or inc dec adcl outsl aad push in jg push sub lret push cmp in out aas push or push lods add mov mov dec xchg inc push fdiv pop push xor jnp gs imul jg jns jl out adcb pop pop mov jle and push jecxz cmp fiaddl dec push push mov pop push cli loope mov jg inc and lea aas in jecxz lahf mov je mov ja and (bad) fidivrl jecxz pushf dec adc scas jg test std pop jg mov cmc mov inc sub or push sarl into jmp fs rol (bad) sbb in stos data16 js outsl shrb addl cmc inc gs sub mov jne fistp xchg add out cltd sarl add cli (bad) fldcw insl push jns fnstenv add popa data16 xor lods int pop dec mov rcl lahf (bad) nop (bad) loope push inc jg insl imul out lock outsl loop test jge inc inc stos jg lods mov packssdw (bad) mov (bad) (bad) jae lahf cmp or ret jg lcall jg xor sub orl jmp ljmp add pop je jbe pop lahf xchg jnp inc addl into jne ret nop dec jle jg xor inc outsb es fidivr inc rcrl pop sub movsl imul push rcrb lods jmp in sub pop sahf arpl jg inc dec imul lret mov aas mov jg fmull or fldl xchg jo mov movsb cld push jg repz int3 jge jp sbb xchg outsl xor outsl cmpl in mov jg loope (bad) push insb push pop jg movsl jb (bad) dec imul (bad) pop insb xchg out add jg,pt pop sarl push sub fbstp mov jg imul popa (bad) jns lds (bad) sub or jno stos mov mov ss jg (bad) or jle aas jg,pn cmp aad push cld shrb sub jns mov ja outsb loope mov in sub mov jg (bad) repnz mov (bad) add jg mov lahf inc movsl ret sbb push xchg stos jg mov lcall out sub jno test addr16 ds mov cltd aam test mov adc sub push or (bad) sahf std dec add push xchg inc adc jg dec pop aas lea push xor sub or jg in sub jg push aaa lret mov jg das add js pop pop das pop or mov jg pop inc fs add mov rol outsb fwait jg or (bad) sti jg xchg into adc mov and inc imul mov jo leave add push in lods jg dec and aaa aas sarl call popf push or jl pop cmp call inc dec jne xor in fs push push lods lret dec jge cmp mov mov outsb push sbb push dec (bad) push sahf jg or mov insb sub das and je lret dec movsb cmp incb xchg cld outsl or lds sub cs (bad) jg xchg push jns xor dec scas and pop sub adc out outsl and push mov add das jg dec (bad) xchg test or mov cld cmp cmpsb roll xchg ficoml das sub jg sbb mov aas or lret std sbb jb leave jg and cmpsl jg lret jle aaa pusha jg enter insl ds mov xchg pusha pusha cmp lcall les js xor dec cmp jg pop ljmp push sbb (bad) or (bad) push stc scas mov cmp popa ret pop sub jmp ljmp lahf jnp aad out pop jg jmp test rol sti jbe sbb imul fidiv lock stos push jg or shl lds pop rclb jg push paddsw mov scas jle dec mov test mov push xor cmpl (bad) (bad) in repz jg and and jge mov pop ret sarl jg jbe push cmp dec inc ja pushf inc jg sub pop jg in (bad) data16 jp adc lcall xor mov test leave inc push in add push mov jbe inc mov (bad) pop aas ds fwait adc lock cli je daa inc pop sbb dec jbe sbb and pushf mov pop mov or jg imulb mov stos pop aam add aam push sbb jg fsubl xor mov into sarb shrb insb or ljmp (bad) xor push push push jg mov movsl add loop dec stc push push mov in or sub pop cmc jg push cmpsb xchg mov leave add jno jl jg push jnp sub sbb jg dec cmp add into jg pop mov jg sbb lea mulb out push jns jg mov in xor imul xchg add test cli jnp mov mov test lock push or jb ss add add pop sub inc cmpsb sub mov mov int3 inc ret xchg in lods sub dec cmpsl ljmp (bad) popf mov js pop push pop add and mov outsb inc (bad) divb pop jg cwtl inc adc xor scas fdivrs loop daa test jp cwtl loopne jg rolb adc push xchg (bad) cli push push out inc pop arpl ja addr16 fidivl icebp xchg pushf sbb mov cwtl out sti (bad) fnstenv add inc out jg insl aam popa and lods add mov inc ja mov pusha jg jge sar test mov pop jecxz jg lret (bad) dec jmp fsubrl inc mov mov mov stc dec loopne jg jb xlat fisubl enter into inc push lods add jmp lcall add rolb inc imul aad dec aas mov dec call out sbb sbb xchg push fisubr jg push xor (bad) das frstor jg adc sub mov (bad) sub cld push pop lods jg (bad) scas push jg sub lods and ljmp inc out sub sahf lret lods mov test push jg jne int3 xchg arpl (bad) cmc and and imul jg repz scas mov in aas xor dec pop test jg sbb out lcall inc jg push iret movsl out test sbb adc fwait jg ror fdivrs jg (bad) pop jno (bad) xor out mov es fmuls gs and into jg imul jg cli mov ficompl dec mov lahf dec mov int ret shll xchg and push and mov lahf aas ret jnp aas jae fdivrl insb imull push add (bad) sbb (bad) cli in inc cmp cmp fdivs fbld sub dec pop mov les jg loop int mov fidivr lahf cmp jg stc icebp in pop and sbb cwtl push (bad) (bad) std leave stos sub xchg dec movb ss fisubl inc jg std sti cmp in scas cmp mov inc ror and mov push xchg std mov (bad) cmp test je jg in outsl cmp push cmp jg add mov fist push in in mov lret cs jmp jg pop int sbb aam jno add icebp ret add test (bad) jg ficom rol mov inc imul push add fucomi or jg mov jp aas (bad) (bad) mov sub loop sub inc pop pop cmpl cmp ss cld adc xor sub push arpl cwtl lret jg xchg iret ljmp jo lock sub popl or xor fidivrl push adc ret bound out mov inc push lcall in testl aam js cmpsl loop jg lret mov lods jg and xlat cmp in mov lret xchg inc jg shll pop jg into movsb add xchg mov jmp push dec pop idivb pop xchg fwait jns std cmp inc jg repnz stc ret jmp xchg (bad) jecxz cmp xor xor (bad) mov js fldt cmp jl xchg loop jno inc test cmpl ss fcmovne push push sbb shr fst lcall xlat stos fstps pop jne add inc jg mov cs test fnsave lea (bad) mov xor cmpl cmp jg cli mov mov jo adc push jle mov (bad) jne and mov push (bad) stos jmp add mov dec add shlb out dec pop fstpt popa iret aas (bad) dec mov hlt jg inc enter mov inc jl adc lea mov mov sbb push push lods inc adc xchg lahf adc jae cwtl xor mov out fcoms out out xor mov inc lcall aam hlt pop adc xchg stos xor mov fmull and mov sbb xor xlat aam adc jne pop jno fcoml push inc jg inc lret pop test mov adcl pop fidivr icebp push fs sbb xchg jns or sahf cltd sbb jg je icebp xor cmp in push cld pop inc or mov push ffree mov cli adc (bad) hlt inc push dec cmpb dec inc add (bad) mov sarl mov aaa and sbb push dec jnp dec cmp jg mov push decb rcrb push sub jg dec push repnz daa dec cld jl nop push mov xchg sbbl mov xor and scas pusha push or movsl inc out xorl mov cmp mov jg std sbb cmp adc sbb adc mov mov cltd pop jb (bad) push jno cmc les mov incl cmp iret jg cmp mov adc gs cmc inc push push sbb and fidivrl xor jns inc fprem1 aas mov stos imul sbb adc cmp lcall cmp mov inc outsb dec jne jg and pop sbb inc add jge or mov mov lcall mov shrl aas gs mov jle push dec xor jg lods fcmove cmpsb test test push and and jle imul ja aas in adc sti pop cmpsb mov xadd and xchg mov jg and or jg (bad) je pop push xchg loopne mov fbstp cmp mov and mov notl pop or (bad) arpl ror push dec inc pop and xchg xchg clc or (bad) cmpsl pop jg loopne or add cmp cmp iret xchg fisttpll into lcall mov add sub (bad) dec je adcl lea test fistpl mov jl arpl dec jg rcrl loop adc jbe cmp jg fiadd fdivrs loope jg add adc mov cmp lds out dec fidivrl xor enter inc dec mov mov aas adc xor fdivr idivl mov jg sarl bound aas adc dec inc pop or fsubrl push sti ret sub cltd inc sbb sub dec ds mov pusha fstpt fcompl and gs jg lret pushf push mov jp push movsl inc movsb fisttp (bad) and inc scas out test ret mov sub imul outsl lods imul xor ss imul sub decl xor pop xor jmp int push sub icebp inc rcll movsb xchg addl negl jg dec into pop ja push sahf jg pushf ss (bad) dec daa sti icebp or je nop cli leave inc pop add lahf inc sbb popa mov sbb jg ja lock pop sub ja inc mov mov scas and jg xor or (bad) mov dec insl adc xchg insb mov xor adc leave fiadd jne loop push mov jg mov sub sbb (bad) push jns jg or dec negl aam push pop dec (bad) aam jg inc mov (bad) out and cli fdivrl stos mov stc pop bound inc xor jns aam repz push sbb aam mov jnp jg test (bad) in inc cltd jl push push ljmp mov out or movsb mov pop sub adc push outsl (bad) popa cltd jmp add jo sbb inc or cmp cmp shrb cmp fiadd jle ds pop int3 jg xchg xchg (bad) xchg loope adc inc pop sti mov outsb dec dec test pop pop outsl and loop movsl cli hlt jg fmulp sbb xor inc jmp in mov lcall mov pop fs out (bad) call xor inc hlt aam sbb lods les jg xchg ret pop pop mov jns (bad) out cld pop lret xchg cmpl out mov cmp (bad) (bad) pushf mov out xor aam dec outsb icebp (bad) mov aas sub clc lods addl ljmp (bad) leave mov out xor in mov std or jle mov jg in ja popf push imul scas sub push sbb out (bad) aam in add sbb clc jg xchg in sub push lcall inc repz mov sbb and jmp and cmpsl pcmpeqb pop fdivr adc aam and mov mov jle mov sbb pop stc inc jb clc aas int3 in fs and jg jp,pt pop mov pop jae add push adc lods jg cwtl pushf lock push movsb insb or cmpl in test sub cld pop xchg xchg add jmp adc fucom and and aam roll mov dec pop aam aas jnp push imul cmp adc add (bad) out cwtl sti cs jg or sbb shr pusha lret mov pop dec push mov fs cmpsl idivb and mov add adc aas sahf clc mov lods pop clc push push jg test or and ret gs push into mov hlt jg test sub or mov adc popf popa test xchg jno jg xlat repz aam mov repz cli jl icebp lds cld push xor cmp iret sbb neg test jg xchg mov mov jo inc mov or push dec lods and orl hlt jg stos dec jp fistpll jg int3 sub adc push cmp pusha js lea sbb sbb inc sub mov jg xor lds in lahf jg and pop jg push pop test push push outsl push add push pop and aaa push (bad) outsl aas mov sub int3 jg mov arpl pop call out cmp jg out push push push (bad) mov xchg pop test sti dec in sub popa sub insb mov push mov idivl xchg daa jg sub test mov aas jns pop xchg sar in cmp sbb movsl pop and ret cmp bound mov jl inc lret jg div cmp insl sub jge rcl add das insb shll push fmuls mov jg inc iret stos dec inc fstpt push gs mov je jg outsl cmpsb decb jg addr16 or sub jo fldcw cmpl bnd inc mov (bad) sub xchg test insl es jg int3 outsl push movups mov lcall jg,pn sahf movsb xchg dec (bad) (bad) jg (bad) adc aaa fldl sub pop dec inc mov fcoml popa lret aas or js inc cli scas out (bad) int xor add lea sti hlt add je (bad) in and mov xchg or fistpll lock xchg adc jns imul test cmpsl mov in sub inc rclb jg loopne mov xlat imul aad sbb jg inc mov popf jle,pt mov dec push pop rcrl jp jg jg int cmp fwait mov out xchg pushf outsb ret jg divl xor out sub jg insl hlt jne xchg popa or jp adc push das mov hlt jg out mov lcall loope mov push gs inc out jg imul xchg adc mov or enter jg popf dec push inc sti adc jg (bad) cmp jg lea jno jmp (bad) movsb les ljmp js out dec aad mov dec (bad) dec ret adc xor xor test pusha inc jg jne dec adc rol (bad) cli mov sti jg jns,pt hlt lock movsb cli dec (bad) pop xchg xor repz push push sbb dec fbld cs aam add rol std lods jg add add insb (bad) jg sbb frstor dec out inc cmp jle fldenv jg in sub insl sahf cmp or jg ds pop xlat adc loope mov scas pop pop sbb mov sbb scas mov jg inc sub (bad) in mov int push jg and (bad) cli ret cltd ds lods (bad) jmp shlb lock mov inc (bad) and mov loopne mov lret and jno ret pushl and aas mov and inc ss ret stos and xchg jecxz jmp cmp cmp iret add or jle cmc call inc sbb sbb (bad) int ja fnstcw jnp inc outsl popa mov and mov and push fcoms aas sbb xchg ret addr16 cmp xchg jg inc sbb mov jmp jg vcvtdq2pd pop hlt loope test ja push dec cmpsl jnp mov ficoml lcall add mov in adc jb std (bad) push pusha adc or mov add cmp adc es mov fstpt mov or shr cs xor movb lcall insb jmp adc jg sub (bad) cltd aas cmp xchg jns push js pop inc sbb jg push sahf xchg xchg orl fs loope call jg and je add mov std (bad) pop push andl add inc mov sub ds cmpsb or jmp imul outsb jo pop pop subl and ret bound jp jg add decl cmp mov sti push enter cmc xchg mov cli jg in or adc dec mov mov test dec dec shll iret mov dec jle jg mov fldt fs movsl insl xor cmp imul dec jg inc decb xor sbb (bad) cmovle outsb and jg mov mov mov loopne fwait xlat (bad) into inc jb inc out inc dec ss stc add cmp loop lock push cmpsb inc movsb mov pushf test sbb ds rcl ja mov fnsave setno jg sti xchg adc jne sahf int out pop dec arpl mov mov cmp and scas fnstcw mov sub jo jg push mov jg sbb stos jg out jmp jbe push mov xor sbb outsl dec jp outsb xor cmp pushf adc sub aaa cmp mov movsl scas ja stos fwait dec adc push data16 push push btc sarl dec js (bad) cli push fisubrl insl scas jnp (bad) jg call int jg repnz pop icebp pop jg sub mov jg scas mov mov outsb mov in jge sti shrl ja pop dec aas imul inc iret jae xchg adc lock jg bound dec out push pop mov test inc jg jmp xchg call out mov cmp jl iret lahf jmp fs leave cmp mov notl or mov sbb jg insb ffree add xor imul jle (bad) pop xor mov xor pop or pusha (bad) mov iret mov pop dec xor jg and jo mov aaa cld mov mov push inc lahf sbb lcall mov (bad) pop push xchg xor das xchg sbb pop jno movsl dec xchg je shrb add (bad) mov sti lods xchg xchg jg insl loopne sahf cli test aas xchg adc sbb bound shll sti pop jmp outsb xor aas and mov jae dec and sbb dec xor inc pop and ss mov pop lds (bad) repz les gs sbb mov xor xor jg xchg (bad) sahf push pusha jmp push test rorb js jnp push movsl sti insl jg enter xor mov (bad) or sar jg jmp push lods adc pop jg scas das imul pop and xchg jle mov sub ds (bad) jo mov ror xlat mov repz lret pop inc mov jg or (bad) leave lds sub xor ss pop out lods jae push repz push mov in sarl mov dec inc lea push ret xchg mov inc jg inc sbb sbb push xchg jg push jnp push loop incb pop outsl xlat mov sbb mov sub cli mov in inc cwtl rcrb xchg dec or adc xor loop (bad) jg (bad) into mov scas or les in and jo addr16 pop pop fstpt call adc dec sub push in jg cli xchg push push insb fistl mov sub and jg dec mov jg fbstp dec jg sbb fidivrl xchg lret push lods push add jg rclb mov sarb or imul pop xchg jg or or clc push out pop or addl mull pusha jg das enter jge mov jno call sbb outsl out mov mov cmp push out mov inc jg (bad) sbb mov mov mov fwait jne inc jle push sub sub mov jb data16 push out jg (bad) aad mov inc push aas ja dec inc (bad) jg add inc push mov inc sub cli or add xchg and aaa adc addr16 xor mov cmp stos sub inc inc or jnp mov lcall cli and incb adc jle lcall pushf jmp ret icebp push ja inc scas xor inc and lods push inc mov ret sbb test cmc data16 jg push sbb inc es xor in (bad) call dec or pusha cmpsl stc loope pushf mov or sub rcrb cmpsb shrl bound rol aas xchg sbb add bound mov or pop mov mov mov movsl mov cmp jg sub ljmp xor or add pop mov lods les inc jl pushf ss adc ds loope mov xor movsl pop mov pop iret cmpl (bad) test pusha dec sbb jae in sbb xor (bad) loopne pop xchg sub dec mov jecxz movsb xor xor fdivl sbb lret in rorl jg int iret popa pop enter push idivl jb insb shll enter inc mov push mov stos jg and je mov sbbb jg aaa mov cmp or jg xor call push sbb testb jno jg cltd xchg pusha mov fwait xchg xor inc jle xchg jg mov jo inc mov or mov pop inc out fstl cwtl mov inc addl or adc adc adc sbb add aas fist jg inc push add and aas sbb popf mov lcall lea push push int3 mov jle mov test and xchg xchg dec cmp clc jg sarl cltd jg jge (bad) mov sahf jg jp ljmp outsb repnz out insl push inc and xor (bad) dec imul adc jns push das pop jg inc shll cs pop iret and cli fnstcw std pusha mov jg xlat adc outsb mov and sub jg mov aam jg mov (bad) (bad) cmp out inc cmpsl stos mov mov and inc imul lret out xor (bad) or inc lahf cs popf push imul in movsl xchg movsb dec (bad) fsubs add mov jg ljmp jle rolb lds out push xchg outsb stos aam mov mov xor (bad) jnp loope jg dec in outsl mov jg mov je sub aaa out add pop jns cs aam mov cmpsl lret lret xor insl fsubr or inc mov jnp push clc dec out or dec mov sti mov insb ret pop dec pop cmp xchg repz add mov mov inc outsl push inc (bad) and dec scas outsl mov and jg mov data16 sub jg dec lock cld lret sub int or jg and (bad) test setbe jg lret push cld jge jg cs inc dec lcall sbb js mov mov and pop inc lcall pusha ss jge (bad) scas inc hlt sti mov push out aas mov ja sarl ret fcomps jae mov inc in mov into sbbb pop xor xchg push pop leave pusha aaa les jne push add pop and cmp push idivl mov push scas negl jmp pop std cs or adc popf iret dec aaa in aas inc nop fwait jg add sbb mov or sbb mov dec das sarl push repnz mov js scas rcrb jne arpl and jge les and popf and in mov mov dec fcomps jae inc sub mov pop jg cmp jg mov mov and add adc ret lea adc jg lret mov jbe jg js iret jecxz sbb repz sub sarb push jg xchg and or adc sahf push inc sbb mov mov jg std scas or push in sub notb jg fsubl mov xor jg shlb (bad) jns movsb sahf clc outsl push (bad) mov je fs jo push notb adc cld nop push jbe adc (bad) inc aam mov shll mov mov je mov jmp push ja xchg test jo pop orl (bad) push dec call xchg and popf bound jg shll mov and pop sbb and addr16 xor es push xchg cmp arpl sbb add pusha cmpsl scas jmp bound bnd dec and or dec inc cmpsl jg lods js adc jg stos xor loop popa jecxz lock jg dec in cmp sub jg jns sub lahf leave jg jno sbb iret outsb lods loope inc jns jg xchg or pop jno xchg pop xchg stos popa test dec es add mov in gs iret mov sub sti mov mov pop xor mov jns push push jg cs (bad) sub cltd and fwait std push arpl fs rorl mov mov or test imul sub xchg int jg push lahf lret or lock dec xchg and cmp sbb jecxz jg das jae and dec aaa adc jg shrb jmp icebp mov ds add dec push lock (bad) xor add test push jg jne out cmpsb sbb or sub pop jg sbb ss scas mov jb mov hlt jg push push sub icebp ds mov dec inc popa push pop push insb mov xor xchg scas cmp and les jg pop mov in stc sbb aas bound mov xchg inc addr16 or int3 das cmp stc aaa push mov (bad) jg adc call adc push jmp (bad) mov (bad) outsl push xor xlat inc dec inc fild (bad) or loop sahf adc sub mov pop pop and push ja sbb (bad) add jg jecxz mov jne pop les insb out and sbb in and ja (bad) cmp jg lcall push push jg jp in ja pop jg lret stos xchg loope scas cmpsb push jg dec test mov and or xor ficompl mov or mov jg repnz mov cmp mov fldl xchg xor pop in (bad) out ret xchg imul nop aaa inc sahf xor jg pop leave stc in adc insl jo push lret (bad) (bad) jae inc jnp les jg rorb push mov stos mov enter outsb jg lahf xor (bad) pop popf lock adc fnstenv loopne jg nop inc cmc int mov pusha or js int3 insl jle sbb (bad) push mov (bad) xor dec (bad) (bad) daa lret push jg not dec sahf int3 mov sti ja pop pop outsl test inc imul addr16 mov pxor push (bad) nop mov mov jg jl outsl cld pop dec xchg bound cmc imul out stos test insl jg fbstp inc jg mov and lcall jno aam ret or mov xchg push mov imul jne dec aad popf in mov inc and cmp jg or pop push push out sar imul jg and iret jg adc stos or jo dec mov lods ror jmp jg mov jp (bad) add dec sbb jg popa inc (bad) icebp hlt mov das pusha pop mov xchg ds aaa cmp cmp lcall mov daa bound jg and mov jg add iret int3 test fnstenv out pushf imul mov sahf (bad) imul cmp lcall out jg jb bound jg mov out dec cld push lahf scas mov lods pop fxch aad pop out and or and out jg jo enter imull mov jg jns insb les sub xor out dec (bad) jne,pt jle ss mov jg mov pushf or sbb inc and test add sub hlt stos cwtl mov cmpsl repz or mov jnp stc daa pop adc and xor jne lds jg xchg mov pop pop mull push jg cltd cmp ffreep jg cmpl and adcl pop scas movsl mov mov arpl mov ja lods cmpl sub jae cmp push add mov test jg xor popa outsl jg push sbb inc xor adc (bad) rcrb add testb inc lds imul sbb inc cmpsb adc mov jmp aaa insb jg cmpsb xchg xchg pop movsl jg push mov lds inc xor sub out mov js pop inc pop out jg fisttp aas pushf xor jns nop inc ret push jg push fsubrs mov sub (bad) mov jo ljmp arpl jae fsubrs jg addr16 sub jl pushf mov fsubr jg push in ljmp aad iret cmpsb mov push mov push fidivr aas push cmp dec xchg mov jl push fstps jg lret and sub jb and aas inc dec pop das xchg fidivr dec add loop ret push (bad) (bad) outsb xor xor cltd jg,pn ret xchg jg les and sub (bad) fsubrp jno dec sub out pop aam fsubl cmp loope rorb add insl xor xor jno cmpl dec and inc jg or out out aas mov jg (bad) cli sub insl sbb clc aad xchg jg test pop dec inc xor and (bad) and test inc jnp fmul jg push xchg movlps ds jg mov call cld fnstsw out imul mov mov adc inc loopne jg incl stos jg push fistpl (bad) mov jg inc (bad) dec stos or jg cltd ret xchg fnstcw pop inc dec cmp inc into (bad) (bad) jo mov push add pusha std dec gs jg (bad) aaa pop jecxz les push call pop push aas sbb js adc sbb jg sarb jg push adc dec pop pop fistpll mov lea jg pop mulb (bad) in pop mov cmp jg push fistpl shrb in (bad) jg imul and outsl cli fstl lcall ja cltd xchg inc popa adc inc mov imul je xchg push mov or adc mov mov (bad) inc daa jb and nop dec sbb insb push mov imul pop push int3 ds jl jg adc cmp sub rcr sbb jg test in mov cmp rcr mov pusha jp inc repnz test dec into cmp les xor jg cs and jg cmp ss adc xchg bound js mov lock mov mov dec cmp xlat stos push jl repz es inc in aas jg cmpsb (bad) rolb lret jmp xor dec arpl (bad) jg jnp pop insl in sbb jno in subb ret aam sbb mov jae cmp mov fildll xor mov arpl cli jge push (bad) dec dec outsb in mov jg mov push mov sarb imul xchg ret mov iret ret ljmp xchg std movsl sti jo (bad) fidivrl pop mov lods or addr16 pop xor xlat enter pop pop jl pop cmp mov dec imul push pop test push imul xchg add xchg inc repnz pushf popf jg jbe (bad) add xchg sbb add cmpb add cltd icebp mov addr16 mov insw inc mov adc test stos cltd lret xor int3 imul lret std test jns push mov push ss sbb mov and jg rolb dec cmp jg xor int and xor cmc inc js xchg or pop jecxz pop adc sbb jo mov mov add xchg lret inc popf adc fnstenv sbb mov fs mov rcrb pop inc (bad) or lcall ss jg clc sahf xchg cmp inc into lcall enter in push repnz jg roll jg mov push adc mov jmp aaa imul sub jg dec mov ja fildll sti popa shrl jg sbb (bad) mov push aam xor out adc aad adc mov lods add leave ret inc in sbb (bad) lock out xchg mov lret gs and in (bad) mov inc dec (bad) jns das data16 mov adc movsl pop xlat (bad) mov sbb push ret pop push jbe pop jg dec mov jae pop (bad) gs scas test sti jnp pop push ja fwait sbb push jg arpl outsb loopne out jg push lret xor xor pop sti fstpt pop pop mov and aad mov aas push mov outsb push sub xor nopl jnp cltd xor and adc int3 dec push sub jg mov addr16 jg add and int jg pop jbe cmp cld push or dec xchg dec xor js cltd lea mov dec int hlt lret mov dec sti popa decl xchg and push mov scas push jne aaa mov and out xchg jl outsl outsl push mov mov mov inc test sti fldenv bound repnz lcall mov pop ret fnsave push jle jecxz inc cmp in jg into popf inc adc cmpl out sarb xchg sub mov dec mov enter cmp in inc aaa mov xchg dec sarb fistpl sub push jg cmp adc outsb dec adc les imul xor ret and jg pushfw (bad) xchg mov sub (bad) adc arpl insb fs dec sbb adc lret jg xlat jmp jg push fcoms rol out cld jg iret out loopne cli jmp xor or jle jl lret cmp fnstsw inc popf in (bad) pusha push daa and mov scas inc jmp add push inc jg jae mov shll or cmp dec pop mov xchg ret pop sbb aas jmp mov dec fcomi mov add shrl (bad) or je add push lcall jo lret notl jg sbb (bad) loopne dec and es sbb ss fnstcw movsl lret pop push mov stc jg push aad pop jge dec jg mov insl pop cmp int xchg outsl mov cmp mov sbb jle dec xor mov jo out jg sbb fidiv jg aam cmp inc xor pop dec imul in outsl or test pop pop (bad) enter xchg pop cli xchg sub data16 adcl dec into jnp add pop jg sahf shrb sub cmp ljmp inc jg lods inc sbb cmpb out loopne test adc jae jg ss mov sti or (bad) xor push add pop in mov inc mov cmp es out ja int3 sahf push jg out lret test aas insl add (bad) push adc mov jg bswap stos pop shrl lock sbbl fidivrl cli clc mov mov outsl fwait add add add movsl dec and inc lea mov lods aas bound in sub inc jmp std (bad) shrd pop out xor pop popf imul out push mov mov jg jle ja push stos dec (bad) clc out push add sti mov pop outsb pop fisttpll cmpsl cmp inc adc and mov fnstcw xor negb inc cltd xor sbbb push clc sub mov jg int3 xchg xor or xchg mov pop push jmp iret mov addl inc jg push movsb cs int (bad) jg std pushf (bad) mov pop scas adc xchg (bad) fdivs outsb sbb push add or shll jg imul push fmull sbb cmc mov cwtl fistl aad inc stc cltd std jb lcall popf or (bad) idivb dec xchg fcompl inc mov pop jg cld cltd and mov pop jg sub mov mov out popa movq or addr16 jno std dec fist push sub mov cmp jg or mov das jg sub cli mov fwait orl test jge ja pop insl iret cmp clc mov outsl test out push jg cmp adc add in and mov mov mov dec stos scas jl pop xor lock push sti movsb ret cmpl dec cmp adc rorl jle mov pop lahf dec push hlt mov mov cld cwtl adc xor inc fwait or xlat test stos jg popa inc pop repz aam push push sbb push mov mov xchg adc pusha add add cmp sbb je push fs xchg (bad) repnz push shl inc jl mov idiv mov and sub add mov dec int push test mov aas pop mov sahf push std push dec lret jnp jg pusha lods (bad) sbb xor aam pop dec push sti jecxz mov popf dec in jg mov stos lret mov dec inc aas faddp dec (bad) xor cmp inc fnstcw das enter lret mov xchg lock and sub or sbb mov gs enter lret push jnp punpckldq mov inc xchg cld jg into xor inc sarb stos out psllw jg in fs mov loop in or dec fcomip jg lds shr xchg (bad) aas imul xchg arpl jmp jecxz fstps lock mov cmp push jg frstor or pop aam in call push push daa les cwtl sub and jbe,pt in es cmp jecxz jg scas mov add mov or hlt mov lret pop pop sarb into xchg cmp mov les dec dec repnz mov push sti dec and lahf jle imul out pusha fcompl sbb mov stc cwtl orl mov sbb shrl or out (bad) add (bad) mov je xor stc push mov sub sbb (bad) es jg lcall jg repnz add loop jnp (bad) dec mov sub xor shr out pop divl lret jp pop dec jne adc mov mov pop out push cmp jb add add push and pop repnz pop pop push fsubrs repz sarl push or or mov add jae cmp std clc jno sub mov pop dec aas (bad) int mov outsb mov jle add or mov jg inc cli shl scas test jg leave int jae add jg ja adc add jecxz dec cmp or xchg aas rorl jge dec out inc mov and addr16 sti loop sahf imul add gs cmpl mov call cmp pop cmpsl ficoml ret sub iret inc dec jg sub dec jg ljmp jg jecxz jge stos mov jg (bad) lret adc inc inc adc movsl cli jge inc scas aas mov cmpl pop mov dec push pop jo mov jb sbb inc adc jg push movsb or add mov mov lea jne dec fnstsw pop cmp jp stos fisubl jg insb lock ds jg (bad) nop enter ja fwait push sbb cmp add fistpl enter mov pop mov int3 mov push insb pop rcrl jg rorb jne cwtl aas addr16 adcl out mov cmc rorb adc inc cmp xor fldt sbb push sarl and pop inc dec pop pop sti aam pushf pop lods rcrl test andl mov mov outsl pop jbe stc aas test stos dec adc jg mov xorl sarl jo dec sti jg pop adc loope out (bad) mov mov sarl jmp inc mov jg sarb popa jg test pusha fdivrs xchg add xlat pop lds adc mov push jg fimul ja dec mov ja mov aad sti pop nop std icebp pop arpl push into fstpt loop stos jg push popa mov cmp pop dec xchg push sarl aas repz and push arpl mov aaa mov hlt loope into fs xor sub mov mov dec mov pop push jb cmp push pop fisttpll cmp mov cmp xchg add mov pop fstp daa pushf xchg jg cmovno xor pop mov (bad) cld stos shll icebp mov adc aaa arpl orl add imul push notl ja outsb test jnp mov outsl sbb mov inc mov jg inc sbb not lds stc lods pop adc inc mov insb ja sarl nop stos pop cmc inc aam in mov aas inc mov jo test leave jns popf mov cmpsl sti ja repz nop loopne or push mov lahf in jg and ja sub adc ljmp push mov ds es dec jg fnstcw test jg sbb xor mov insb cmp inc sub out (bad) flds mov aas and int mov loopne xchg (bad) lahf ja push out cs jmp js gs fs data16 cli xlat and neg fwait inc inc ljmp insl test push sub andl loop mov xor (bad) jne sub rorb jg lock and and jno lret outsb push sti xchg popf cmpl mov out jno or cmp or sbb inc pop int3 mov dec mov cmpsl jg add stos psrlq sahf cmpsb divl xchg ja jg mov pop sahf jp mulps jg add inc ds mov xchg fwait bound jg pop fxch (bad) aam adc cli rorb inc loopne aaa pop repnz bound pop lock hlt jg jo mov mov fwait push outsl shlb push jg adc cmpsl jg mov ficompl stc jmp adc dec push cli jg and adc mov addr16 and fidivrl outsl dec int inc dec and stc xchg jg pop fwait inc ss sub mov jg or mov push inc xor mov mov in inc dec sti sarl lods bound inc testb dec mov popa mov jae xchg jg imul jg xchg sarb mov sub jg xchg ja das cmp stos mov jg stc (bad) or sti cmpsl imul adc mov xchg (bad) and and jno push jne and dec xchg in jbe mov jg (bad) mov dec out add in inc jno jg in icebp lds sahf inc mov cmp or xchg rorb (bad) mov jg clc ds cli jmp cmp xchg hlt adcl jae adc jg cltd jge and repz stc rcrl aas mov test add insb out xor jbe cs jg out or (bad) repz mov jg jno std repz pop notb stc and pop mov lds push mov scas shr pop pushf add loopne fbstp js mov jecxz stc pop jg gs pop pop clc scas jg sbb inc mov repz dec out mov jle sbb andl sbb scas pop mov mov pop inc fs jae enter insb or lds fsubs insb mov addr16 ja js or push jb sbb jg pop add and push push xchg je xor jp inc pop xor mov ja push sti aam scas sub and sub xchg or inc push jg mov push or and rclb jg mov adc jg mov inc jne fwait or mov pop pop inc repnz dec pop js idivl das lea push jg jno (bad) enter mov lret push or iret outsb loope lea repz repnz into outsl sub outsl xchg push cwtl and inc pop mov movsl stc mov push pop jg,pn xchg outsl jp mov adc or bound pushf mov inc xor push xchg jg pop adcb sbb jg outsl pop dec sarl push lods shlb adc enter jg mov mov scas pop cltd daa insl sub pop test pop sahf mov ss fmuls pop or xchg inc decb sbb mov pop ja aaa jg sub jp into add jg jle xor push xor pop jmp stos inc mov pop xor repnz loop aas js mov dec inc ljmp stos (bad) enter test (bad) push in pop loopne outsl rolb std dec (bad) adc imul cwtl scas xor pop lods push arpl cmp pushf movb insl xchg daa das mov inc push ljmp add roll leave out push aas jmp dec out xchg jns dec std dec fwait dec cmp lahf sbb daa mov and mov dec ds sbb inc sahf icebp and inc in clc out (bad) lock fdivrl jg jge out movsb cmc xor jg sub into jg push (bad) mov cmc mov xor insb loopne jmp idivl xchg jg mov (bad) in xchg call std pop cmp jg ficoml sub out xor add push iret dec mov jg add mov push (bad) fnstsw adc pop sbb das mov jb jg in popa xlat les jg sbb je aas jb add int clc loop loope cmp ljmp add (bad) mov out dec pop jne lock sbb inc fwait add stos xor inc and dec cmpsl push sub push into nop shlb push jb test xor pop jg ljmp jg xchg (bad) pop push sub pop sub and jg add in inc cwtl sbb lods mov (bad) bnd insb or je inc adc xabort jnp ror jg xor cwtl jmp xchg int scas xor loope mov xor xchg fdivl loop push (bad) jae jg push push lock jg popf test aas cmp mov mov es jp pop in cld dec jg and mov mov loope cmpsl xchg push jg repz xor pop push mov push cmp jne push cmp pop hlt adc or jg les mov mov pusha jg lret jb mov test fmuls in popa iret aaa jg dec mov jg pop cld xlat pop adc cmpsl jg (bad) pop gs (bad) jmp outsb andl das xor lea cli loope addr16 sub mov xlat lds sahf repnz or test je inc or mov mov pop aas lea fs sbb imul mov jg leave loop xlat gs or sbbb cmp jbe pop jg lea stos jg fs std lcall pop (bad) jae pop jg or adc frstor mov or pop push gs sti jnp push sbb jg mov mulb out jecxz jg adc int enter in xchg scas (bad) sbb daa (bad) stc or (bad) bsr es pop add or cltd loop jg outsl and stos rorl (bad) repz jg xchg pop je (bad) jg xchg cmp daa and aas lods bound mov mov dec test ja jbe daa adc in les cmpl xchg mov add ja xor jbe fdivr into loop mov jne push push mov jnp mov std push icebp sbb inc xor jnp push and sarb fmull sti push xchg outsl out rcl repz shr pop sbb jae push in jg fisttpl ret xchg add lahf pop jg pusha call (bad) jg mov sbb adc jb cli cwtl setbe dec mov mov and aaa sti add movsl popa mov add jg inc testl mov adc ficom test jg ds jbe mov in movsl dec je mov mov mov (bad) adc jg cwtl repz inc (bad) jg pop cmp sbb rcr shl (bad) jbe dec push jp inc jg xchg push test pop and adc mov and mov jle push cwtl pop xor rol dec repz cmp push and push fisttp jg in pop xor mov xchg das jg pop push scas xchg add mov (bad) outsl push cmp push add ja mov out jns enter jg cmpsl inc stos fadd sub cli lods addr16 notl jg inc jmp lods jne and jg xchg ja in push mov cltd dec fadd rol aas cmc dec in sbb xchg mov dec sbb cmp into xorb adc dec jg repnz (bad) aam (bad) mov (bad) dec sub mov stos mov xchg fidivr sub xchg (bad) outsl fimull fmull mov in (bad) mov inc loopne jno add add (bad) pop out xorb and (bad) mov leave adc and negb mov imul inc push jg (bad) sahf xchg cwtl push roll shrb fildl mov (bad) sub sbb adc inc cmp pushf pusha xor jg fs inc daa push mov or mov mov dec jmp mov movsb jp jg pushf je stc pop (bad) cmp inc mull mov icebp adc jg fs aas stos sub out stc cmp xor sbb lock sahf aam popa sti mov adc xchg mov repnz jg in enter lea push pop inc mov mov push repnz jg mov mov jg mov xchg aas ret cmp pop mov sub (bad) cmc jg jo cmp insl adc mov (bad) sub push (bad) push aas dec adcl dec (bad) xchg jg cmovp sti cmc mov add fs repz sub mov sarl mov and stos cmp das pop xor jg and dec fnsave stc flds jg sbb pop sarl fsubrs inc cmpsl test (bad) cmpsb cli stc hlt clc cld scas and fcomi sub gs jg jnp aas jecxz jb jg aam mov cltd mov dec outsb or and js mov sub sub repnz gs iret scas cs xor mov (bad) (bad) pop jb ret repnz cmp pop ja fsubr push div loop test rolb pop pop push jg (bad) push push lret mov and cmp popf dec jg jge pop pop out adc xor jp daa xchg lahf out (bad) jne js out jg lret enter mov cmc inc aas (bad) imul push cmp pushf ljmp (bad) loop in test jg and pop cmpsl cmp pop mov outsl inc pop aad cltd push mov add aas adc jnp (bad) aaa jns xchg out repz outsl in arpl inc cli sahf cmp jg movsb pop mov mov test dec sbb in pop or ss jno movsb and jg mov or aad pop lods ja mov jg scas movsb shll nop xor rorl pop xchg clc cmp adc lret movsb rclb lds incb cltd push xor dec mov jg ds out nop sub jg fisttpll repnz or cmp jno js cmc mov jg xor pop push mov movb pop or cmp or insb (bad) cld or cmpl (bad) ja jp lods jg daa jmp inc decb sbb push int3 out add popf sti decl stos cli int push ss cmp in push and (bad) jae mov cli push mov addr16 (bad) or movsl pop mov mov sub sbb (bad) or or jg pop lea cmp pop jg jmp mov cltd add leave daa jg sub jle ret lods dec dec jg push pop fs sub in lock pop jg dec stc sar cmp imul mov pop mov popa jg (bad) xor (bad) jg (bad) push push jg push pop xor mov jo mov add hlt push push mov gs dec popf xchg sarb pop add aaa dec mov out lahf and adc shl jg fimull xor std lahf pop pop fistpll jbe mov jg popa or lcall (bad) dec ja mov jg lock clc cmpsb mov mov inc sub cmp or push out mov pop popf rcrl popa jg in aam xor jl (bad) fidivrl mov xchg mov clc loopne push ja mov push mov es dec jg xor rcll dec inc jmp inc movd inc mov and jg rcr gs mov lahf hlt stc cld push cmp mov jg adc sub lock jg loopne push and jg (bad) xor pop jg bound push ret repz repnz xchg mov daa adc das sbb int je xor jg mov jg pop arpl push dec mov jg mov cs adc push mov ja mov ret push enter inc jg in ds test mov cld das cltd loope ja push into add test data16 xchg sarb sahf adc lea mov jg mov call jg test sub (bad) jne int pop jmp sbb cmpsl mov and (bad) mov xchg sub addr16 (bad) push sbb (bad) jg xchg es fsubs (bad) adc orb inc push mov inc mov jg mov or jg clc push idivb xchg xor add ffree cmc rcrb and inc xchg in mov mov jne xchg sub stos stos (bad) sbb xchg jmp push push mov sahf jg (bad) ja inc fidivr mov and fs jg jecxz lock xchg sbb jg cltd jno jnp sti xchg add imul ret jg leave imul adc mov mov jg inc decl xor stos test xor fs jns insb aam cltd push lds into cmp sysenter imul dec data16 or xor les loope neg lods pop lahf mov push xchg lcall dec push ret xor mov xor cmpsl lds out mov insl ret arpl xchg jae sub pop jg sarl push and jg inc scas cmp adc push fsubs pop push jecxz xchg pop mov cmp js inc rcrl or aaa sbb mov pop adc adc in xchg idivb cmp sbb or lahf ja xorl jae dec or jg movsl or jg shr dec sbb fisubl insl movq or jg mull jge xchg jg bound push pop mov sbb inc cli xchg cmpsl mov push das dec adc les js insl jb sub jne enter pop stos lahf jae adc decl outsl mov sub negb jg jb fiadd mov and pop add cld outsl test mov xor push adc aas xor cld leave inc sbbb out sbb jno jg push jp jg adc movsb (bad) mov xchg (bad) in cmp jg cltd inc sbb xor push jg jae cmp shll paddd xor lods xchg xor scas repz jg mov xor and ljmp mov mov outsl or xor lds sahf (bad) ficompl jmp (bad) sbb arpl incb inc dec insb or jg repnz mov (bad) and pushf sahf out or bound (bad) pop jg cld sbb cmpsl sbb adc fcomps jg ret jo mov (bad) mov jae jg outsb scas fbld push inc jg repz sahf push and pop out mov add imul mov or aam xor movsl lret sub negl jmp mov outsb mov push (bad) jns sbb sbb aas dec repz mov cmp mov stc mov (bad) dec mov add out mov jno or (bad) (bad) out jg adc mov pop outsb mov cmp aas inc jo xchg cmc dec movsl lret pop inc cmp pop sub mov jle dec lea pop out pop mov xchg jg xchg rcrb jbe cmpsl jae inc std mov mov cmp jecxz sub jg xchg ss shl fistpll jns fadds fwait adc nop pop test push push sub repz push sahf ficomp ja jmp lea lds jg or add das lret xor ja leave popa test cmp fistpl ds jg (bad) sbb jp or xchg (bad) pushf dec jle fdivl pop loopne js jg adc or mov inc xchg lret xor lret mov (bad) jbe enter cmc not std data16 mov mulb decb sub dec je movsb imul push out mov iret daa pop std pop dec mov xor mov pop movsl cmp or dec cmp jbe repz adc (bad) xor jg lret in lahf jnp jle push sub and jae add loopne push movsb rolb jp fwait xlat xor mov mov sahf inc shlb push addr16 jp movsb sbb and add dec xchg cli xchg addl sahf fimul das stc or xor and sub mov add scas jg cmp test cmc push (bad) xchg sti cmp fwait mov (bad) xchg and jl rcrl aas jg mov dec cltd in sbb mov lret jg pop data16 js stos jg movsl ja fidivr into pop rolb xor mov mov dec (bad) jae stc fisubr xchg and or xchg ljmp or mov add jmp int adcl sub ljmp jp pop movsb jno cmp lods jg test xchg dec mov pop inc aaa ds fwait inc jg sub enter push mov sarl sbb daa cmc jg stos fwait sub push aas decl xchg dec dec dec dec mov lret jb je fs loope sti das cld mov inc loop cmp mov sti push loope aas jne out xchg (bad) in pop dec jns jg adc aam and lock xchg cmp inc sbb inc mov bnd push xchg cli add shrb and xor adc outsb jmp cmp movsl jb sarl loope mov jg mov lahf and insl out movsl popa or dec (bad) test das inc ret jg mov fistpll xchg inc and testl mov jg int and jecxz adc shrl ds push test cmp mov jmp jl sbb jg jno scas inc adc (bad) xchg mov fildll mov sbb mov addr16 inc add jg das cmp pop jp lock mov jg push lcall mov lods jg outsb or mov in inc mov push icebp mov jg push mov (bad) loopne bound sub jb mov add push jg fildl push pusha mov fimul dec in dec pop ss idiv pop in out outsl jno sahf and adc iret inc pop mov dec (bad) cmp outsl leave jnp int3 in and xchg jno dec mov les xor pop repz mov clc push jg cmp xlat std jg aam aas adc les jg popa mov jne cltd mov jp addr16 or dec decb icebp inc shrl or lret lods push mov lret lods push and imul stos xlat cltd dec repnz sti jg rol pop jae andl shl mov test jle sub incl subl scas xchg jg sub (bad) loopne cmpsl jg or das push inc sahf lock push pop (bad) mov pusha push (bad) add inc lods jg inc dec (bad) mov inc jg xor sub add jg sahf cwtl loop cmp jg in mov jg inc mov jg repz pop cmp insb mov inc ja das fiadd cmp mov leave mov pop gs or orl fadd push push pop or lods pop cmc cltd out stos loopne aas ret cli push lock (bad) cmc std xor jnp and mov sti jg xchg sub adc push mov cmp insl lret lock jg mov (bad) mov (bad) ljmp rcl loope jg push insl dec pushf idivl mov mov jle (bad) ror aas and pop mov dec cld jg test jno xor cltd sbb addb stc daa jbe xor iret mov lea aad mov hlt or mov adc cmp sbb mov pop sub mov cmc rol or lock xchg aam jnp mov fwait dec outsl addr16 popl jae dec jns cmp xchg pmulhuw jmp fistpl pushf adc push push sbb cmp insl pop push mov mov push add das adc adc (bad) jne addr16 repnz lock scas out repz fnstsw push ds jg sub std not pusha aas xchg xor (bad) in sbb dec add jp ja mov mov je push jg mov outsl sub iret cmpsb jp pop in jle xchg lods add jge sub je movsb xchg std xor mov dec pop mov notl outsl lds jo sbb cmp sbb pop arpl xor dec pop xchg jne and mov sbb sub jg mov or jg mov daa jp dec loop idivl outsl icebp fsts fisttp aas ss jae xchg ja (bad) mov adc jo jl cld dec add mov adc clc push jnp dec scas pusha jg loop outsl stos test in jl push inc or adc lods add and out fdivrl inc sub xlat aas or in mov jnp sbb mov in or adc repz cmc fbld sarb push jg dec adc adc in jg inc cmc mov mov insl dec cmpsl aam mov jecxz out ficompl outsl stos pushf loopne,pn mov pop push xchg das clc inc int jg enter inc cmp les jg mov fmul das (bad) lcall mov cs jg loop outsb out int fwait js sub inc mul loop scas xchg daa pop sbb dec fdivrs xchg sub mov or sub gs test lret or mov shrb lcall sbb repz rolb jg pop rcll aas loop aam push sub push movsb cmp dec (bad) dec and inc add mov and imul cmp stos lret lea sahf push aaa and imul pop movsl (bad) or mov cmp pop data16 ljmp and cli jg sub inc outsl mov xorl jne jg jmp pop jg cmp jmp scas or jg cmp pop fsubrl mov xchg sbb fidiv mov push mov mov push dec ljmp adc ret lcall ja hlt mov insb and mov xor ds leave jg out lret mov mov jb adc imul cmc jl pop cmp sub or dec (bad) mov sbb or pop les cmp in ljmp imul sub and mov flds mov aas sbb (bad) into ds (bad) adc jg leave sub add pop gs ds add push and jg push add shll mov sbb sbb aaa les pop and (bad) jo or (bad) mov pushf (bad) test outsl hlt addr16 mov fidivl jg loope in fdivs aam mov sbb push push xlat mov pop jg sbb rorb mov mov jb dec push aas jno sbb mov mov sub xor mov sbb inc mov movsl ret cmp lods cwtl or out mov jo inc adc dec or cli cmp jle jg nop xor mov pop and jg push sub mov mov test int3 cmpsl jno mov loope (bad) push jle lahf fwait xchg sbb mov mov push dec jmp sub pop jg and out or mov movsl and xor sbb lods testb lcall arpl xor inc jg sbb push jg cmp dec push test inc fdivs mov sub and loopne enter frstor std es jg into dec fisubr movsl scas xchg cmp push or (bad) cmp jp mov rcrb jg repnz ds loop inc or mov and push pop insl fnstcw xlat dec inc les fs push loop lahf loopne or mov cwtl ret adc js sarb (bad) mov jg dec cmp jg jns mov stos or inc lret stc jg pop mov or jg add jnp dec inc ret inc popf jg icebp push loope mov cmpsb and pop or xor in sub cmp mov mov cmpsl mov adc xor pop sub je pop jle jmp fsubr dec jg icebp cmp push sbb mov es gs sub mov mov jae cwtl jg dec jp pop push sbb dec imull aaa aas ljmp jae xor fisub mov icebp stc xor mov mov setbe jmp jg add popa cmp pop pop cli sbb stos dec add test cmpl adc jg jl sarb pop loopne je xor adc daa mov sti xor pop jg adc add (bad) sbb jp mov outsb jns push xor xor ja movzbl stc sub ss jg das int3 out inc lods push js shll push mov mov cli imull mov adc insb pop test lds in daa sarb pop add push jp xor int3 mov xor sub inc rcll loop push lahf cmpsb jge insb jg lods fldcw cmpsl leave jg push jecxz adc jge sbb cs bound add jg icebp pop pop mov fadds in popa inc jne jg test in push cltd add mov xchg jg mov dec lds jecxz stc jg pusha push cmovno cmc inc mov and sub lret sarb mov mov xchg aas scas inc sbb xchg test mov or jecxz xor lods jns test rcrb cld pop jg lret mov outsl mov mov push mov pop insl and gs mov test push in pop mov mov and or mov idivl adc mov in rclb or dec jle pushf out in push jg cs test ret jg daa sti xchg pop adc jg fistl mov faddl sub addr16 push int jg enter (bad) push sahf jg xor cwtl lahf jle bound push imul jg jp pop sbb dec jo pop pop and in lcall std jg (bad) jo fnsave mov inc pop pop push xchg mov ja mov push in mov xor adc jns sub push mov jg sbb icebp jg mov arpl mov fiaddl pushf jns pop and mov test mov lods test pop pushf or or adc shr aas or scas and cmp call jns mov xor jg mov je (bad) into jg test cwtl clc push in mov mov pop jl adc jmp adc jne sahf push pop arpl or movsb mov ret lods mov jae add jg pushf loopne out das stos add fbld lahf lock pop fstpt out lods inc jo clc incb jp or cld loope (bad) out jg aam sub sbb push in or xchg jl mov cli mov ret jg push mov jp sub inc mov pop jge adc jg leave mov push add std lcall jb test or data16 xor pop cmpsb cmp arpl mov or pop mov dec jg xchg orl repz outsl fs test xor leave fldl adc jg iret push pop test dec insb insl dec addr16 xor jg mov je mov aas dec dec (bad) sarl pop es or ljmp push mov or in cmc mov jne jns jg das mov imul pop test into clc jg sbb dec xchg mov je ljmp ja or pop xchg xchg in lret js pop (bad) xchg lock dec ljmp mov cld sarl push popa adc aas daa sbb pop in pusha add pop dec push icebp aas out cmp cmp pusha aad and iret cltd xchg ss (bad) mov outsl jle outsl push cmp push insl lea ljmp sbb shll in jle js inc mov mov in scas out pop xor out push into daa jge lea cmp fwait stc les out mov aas stos fldl add mov sub jnp stos cwtl outsb mov bound in push mov ss inc fnstenv mov fcompl cwtl or sub inc (bad) out test jne ljmp dec in mov addr16 or xor outsl cmp int testb insb mov mov fistpl jg les pop jg adc and push pop imul jg fcmovnbe mov mov in push xor sarl mov add xor jmp scas dec dec pop mov sbb mov mov data16 inc ficom push out insl adc xchg iret test cmpsl cmp pop pop outsl gs push xchg lcall pop sub add push push jg les stos popf lcall dec mov jg ret xchg mov inc sahf push int idiv mov cmpsb gs (bad) in jg ja pop and out jg add subl aaa mov out jg add inc sub cmp cmpsl mov inc lods add test imul mov pop loopne fnstsw and sbb pop add cmc fstpt lods or (bad) mov pop movsl mov or aas dec sub arpl xchg fisttpll jmp push lcall mov inc dec xchg pusha scas (bad) ffreep sbb fidivl cmc pop mov xor sub pusha sub and in jg and jmp iret (bad) push pop enter jge fadd outsb mov aas jae data16 and push hlt add mov mov cmp movsl ror xchg jg insl aaa mov pusha in mov inc adc dec sbb inc xchg lahf dec jmp mov ficomp and ja mov mov jg daa adc and inc mov jnp dec push les cmpsl cli inc jl (bad) sbb movsb repnz jmp xorl dec lcall and or pop dec sarb cmp jg aas inc fcompl sbb loopne dec push out xchg (bad) dec jg insl rorl xor (bad) cs mov xorl or cmp inc sub dec mov fisubr jg pop iret lods js mov jg mov pop jmp mov add lahf stos dec (bad) in or push push sbb dec xor or sbb test jp push jg mov jmp popa mov aam inc out in outsb and lods aas inc sbb mov mov jle jg push insb loopne or add arpl sahf sahf sub scas dec mov lock mov divl cmp test sti xchg jbe js popl cmpsl fistpl pop lret (bad) dec int3 push jns hlt sub cli popa inc mov xchg adc sarb in mov addr16 push dec push sbb ss mov cli mov xor (bad) dec mov lods inc les (bad) icebp sub insb push mov in push mul mov (bad) mov ds mov jg mov lods enter jg jbe xchg cli fistpll mov xchg push push cs cltd dec jg stos cmp xchg jno arpl cli push int3 shll or mov dec jmp adc mov inc ret inc out js enter test jmp hlt cmp or aas lret loope jg push inc mov jg imul or xchg mov rcrl xchg inc lea test arpl sbb jnp in or jg and jbe stos jg mov lods jb push push xchg loope pop xor jo xor xlat (bad) jg sub inc dec aas pop adc dec sbb je xchg addr16 pop mov push int3 sub push das jmp out jnp bound jne stc and fcomip jg add icebp xchg push sti lcall movsb pushf pop aaa inc xorb aam mov fldl sub imul jg (bad) adc test mov in pushf jg pop ljmp imul push mov sbb cltd inc lods and jg insl std xchg pusha pop lods fdivrs sbb xchg in pop pop mov repz fisttpl mov stc cmp ret jmp loopne in xchg aam push xchg fdivs dec pop mov cltd test test bound int jg cs sbb js adc jg cmc pop nop xchg dec mov scas jg lret lock mov sbb fwait adc aas leave repz ds jne push pop jno fistl js inc ret imul js dec adc dec push add mov inc jne jg in cmp pop jg mov orb je fsubrs call repz aam xchg call lret popa je sub adc adc mov xlat pop stc stos lods pop jg and jg jmp mov jg xorl popa or popl and (bad) jae pop jg add mov cmp das cltd sbb mov sub and daa fdiv xchg push aas jns inc popa addr16 (bad) jg and mov loopne inc aas sbb sarb lock popf pop lret add inc inc inc mov adc pop sti icebp pop negb dec mov jg cmp inc adc or adc xlat in mov jle push outsl pushf jg outsb mov pop gs xchg push sbb and loope leave xchg ss (bad) aas scas cmpsl ljmp arpl dec cmpl outsl cs les jbe,pt fucompp jg idivl jns rcll mov (bad) in xor mov push arpl jb push (bad) leave jg ret or rorb test je aas sbb int3 fnstcw and mov pop (bad) push jle out fcmovnbe (bad) cmp and push outsl jle nop dec std jnp sti cmc outsl sub inc aas scas push adc sbb loopne mov sub or cmpsl push jg lahf push ds inc mov rcrl sti dec jg mov inc lock mov aaa adc or xchg cmc stos sub pop mov jo insl inc mov shr xchg (bad) pop push dec jg dec push movb inc pop jg cmpl lea notl js out rorl ret pop adc pop sub clc cmp aas std jb daa nop or dec add push mov enter inc je std outsl xlat fdivs mov mov or inc pop dec sbb cmp lds mov push sbb xchg (bad) data16 loope jno outsl cmc fmuls flds mov jg bnd fild sub ja test ret icebp addl and jg stos leave push stc or pop or test movsl xchg jg out lea sti adc cli fldt xchg ljmp ret push push or xor ja mov aas (bad) xlat ret mov dec cmp add jge lret cmp leave mov lds fstpt add movsb push sub jecxz mov jg dec imul add cs mov shrb mov jg dec mov mov jmp jno es and and notb imul insb leave bound scas iret es (bad) daa mov rcrb fadds (bad) mov jg xchg inc cmpsb lock sahf dec data16 push inc jg push xlat lods jp mov cmpsb jg jge jl xchg mov jg fisubrl lock pop stc loopne cmp dec jg sarl inc cmp jg cmc cwtl or hlt rcl add loope sahf inc pop push (bad) push jo outsl sbb jg (bad) fidivrl jg (bad) mov sbb and idivl pop mov fisubl idivl js mov adc aas cmp push arpl scas idivl mov mov and or adc xchg in pop jg scas pusha or daa bnd lahf in add fsubs dec push push dec ret jg idivb push jg xor les xchg push jg mov jg xchg xchg pop pushf test mov orb inc cmc testb mov mov mov sahf and (bad) push jae dec lahf jg or xchg lds add xor mov mov or jg ret push in jae dec (bad) mov jo sbb nop xor fdivrs scas sahf stos adc pop mov sub pop jge ljmp push shlb xor inc jg in dec sub lea add jg repnz sub jnp jg or cli fstps scas mov (bad) xchg test pop sar pop and enter mov jb lods jg and xor and jno mov ret dec inc cli lahf test dec sbb dec xor jg jbe clc adc lock aad and mov nop dec loopne dec dec aaa jg add mov out jge jg pop pop xor mov mov and jg add sub popa cli jg decb and in adc loop ja dec jg and call or pop xchg cmpsb mov adc gs jle sti push shll push push loop push xor ja movsl jmp xor mov shlb pop jg iret mov inc jg popf in cld je dec xlat jg lahf xchg mov pop ljmp out fsts sbb out xor fwait sti lret and dec jae stc repz shl cld add fidivrl sbb push stos mov pop (bad) jbe mov lods mov xchg jg in push (bad) aas pusha fdivrs xor popf mov xor andl outsl xchg lea ret adc ror mov or lret adc test mov ret sub sub mov popf pop mov jg repz or iret sub rclb (bad) jbe lahf ficomp push in xchg movsl ja sti dec aam jle out xor or fs cli test push jg in mov sub ja jg lds ret dec pop mov mov lcall mov jbe test jg push or nop loop dec cli bound insl out loop mov bswap xor into decl int3 jg and sarb daa mov aad les jg daa push int3 fdiv outsl dec inc mov (bad) jo xchg mov adc aaa mov add dec in sbb (bad) mov clc dec sbb jg or xchg cmp cmpsb jp mov inc jg inc call sti mov mov jnp movsb mov mov dec popf fistpll jg loop xor (bad) mov cmp mov jg fistl fdivr ss cld fwait sbb pop daa pop bound mov inc ret dec sbb sub push pop and sbb or jg arpl xor sbb pushf shll movsl jecxz leave jg and push loop bound (bad) stc mov mov sti mov and addr16 enter pusha and std jg lods mov add jno mov dec mov sub xor std inc sbb pop jg add jo and jg mov mov jg dec repz arpl jno jg push sub pop inc cmc cmp scas jecxz in xchg lcall xchg ds and cmovne or jge addr16 sbb jmp rcl jp in xchg jbe jb inc hlt ja clc lock push xor enter sti movsb and adc sbb and xchg jno push pop jns jne jnp sub mov sbb add adc sbb xchg lea movsb movsl es dec mov lret addr16 jne or xchg scas cmp jg mov dec sub or jg ljmp js inc (bad) test mov pop jg in mov mov fucom repz es cltd xchg cmp jg,pt add sub cmpsb jl pop push mov xchg mov ss push nop jne mov enter (bad) jl int3 inc mov mov out sbb push adc sti ja jbe push mov jns jne add inc mov push popl mov pop jg in (bad) out adcl stos fcmovnb outsl push mov lock jg inc push adc jg bound mov jg pushf xchg mov inc cmpb ja pop xor jg pop mov (bad) jg (bad) xor add pop or pop fs cltd cmpsl shrb (bad) dec stc jbe outsb sub jg lret adc jmp movsb out imul and mov jecxz adc std xchg (bad) aam jmp lret scas in loopne jg shll and addr16 pop pop inc mov sbb xlat xor repz sub cmp adc mov dec scas das jg xchg fcomi loope pop sub cs jns mov mov or insb cmc jg pop jno lret int jb sahf in pop mov jg or mov cmp jp call ljmp outsl mov in pop inc data16 leave jg push mov add lcall sbb xor aas inc fs cmpsl pop push addr16 jmp jo repz ja and imul xor arpl push ret mov in mov jbe in inc addr16 adc lods push jg rcl movsl cmp mov inc inc adc pop dec lock leave push sub sbb popa push test push jg mov pop fadd int ja (bad) pop adc js aaa xchg jnp inc cwtl idivl aad dec mov jb inc or or inc outsl jg adc mov mov sbb (bad) test popa pop jg jmp xchg mov rorl jno jge mov testl lahf mov push sbb jg movsl xchg inc dec cld mov jg repz sub push pop jns mov cmp mov dec mov jg sub cmp bnd push adc mov xchg lds push jg aad aas in test fidivrl testb adc and iret xchg rorl pop pusha inc jg lods pop cmp je inc jg,pt roll insl mov mov jg xlat enter shrb je mov cwtl (bad) nop fstpt push mov arpl outsl mov jne sub ret adc out jnp sub test jg sbbl je add jg sbb mov roll push sahf mov sub dec mov out jg es sahf mov outsb movsl sub loop push std xchg aaa jb int dec fisub pop lods ds mov lcall cmp movsl xor mov scas adc pop mov jne adc and std cmc ret mov scas xlat jg loopne push dec ja pop xor adc out mov gs mov xor lods pop clc dec and int inc (bad) aas dec divb lea cmp frstor jbe outsb xchg dec je mov in xchg stc mov jns (bad) mov (bad) dec jo stos jp inc jg outsl int cld jae jg pop in in pop cmp xor dec jecxz pop lock jg mov xor jb lret addr16 jg (bad) dec mov imul shrl jg adc stos inc mov jg mov push lret in cmp insb mov cmc mov imul push mov cwtl mov inc call stc aaa mov lock (bad) mov shrl inc jg enter inc mov (bad) inc loop push add sub push cwtl rorl addr16 add push hlt js xchg sbb mov or pop mov (bad) dec cld mov mov push xchg xor jg movsl xor jg and cmc xor jg xor (bad) xchg (bad) sub pushf inc push xchg jg mov or shlb fbld sub lahf (bad) cwtl sti mov popa inc in pusha repz push xor jns and fstpl pop test enter xchg mov sub add cmpsb fdivs mov scas cli or int3 pop lret outsb dec sub sbb and repz (bad) pop lods sbb cmp sbb sub rcrl mov mov stc jns sar or aas adc cmpsl xchg cli faddp ja or cmovle jecxz xor dec lahf ja push int3 push cmp jg mov mov jl sub or inc ss mov out iret xor adc mov sarb testl or push mov repz (bad) cmp lret mov mov sbb dec incl les arpl jg dec mov (bad) sti scas fildll inc dec jle out xor jg fcompl dec jg aam (bad) pop sbb stos movsb mov mov push jg scas xchg cmp add push pop lret scas or (bad) mov sbb sub jg and aaa inc push pop jg mov mov daa popf jne in test in fsubrs outsb jnp mov sub adc add sub arpl cmc cmp outsb and scas mov pop and fs clc adc fbstp sarl dec sbb addl loopne arpl jg add push mov or dec sub in nop (bad) jg fsub in jg push xchg and lret jg xor push jg (bad) adc out pusha jg push or sub (bad) inc push mov mov sub cmp jg adc stc xlat js loope popf push test xchg ljmp stos js jg inc (bad) in pusha adc pop inc jae cmc hlt je leave and pop ficomp clc mov loope xor mov (bad) ds mov xlat xchg inc clc inc jg outsl repnz mov dec jo dec inc leave cmp andl addr16 jns push mov jmp pop dec jnp push pop lds imul add fucompp pop int3 pop fdivrl adc cmc mov jg sub add add out xchg sahf fidivr inc subl pop mov push sbb icebp mov loop,pn mov pop jae fisubl push jg sub ljmp cwtl ret rolb fiadd loopne jg sub push lret lods jle test jbe jg addr16 hlt and inc dec push sbb fmul jecxz push icebp xor cmp jbe xchg mov into inc lret out dec and int xor (bad) xchg dec ds mov mov and jo pop sbb cmp jg loop es lahf jnp jg xor mov (bad) cmc je lret jge mov jg int3 add (bad) sub lods cmp mov outsb sbbl ljmp push test pop addr16 ret jg shlb inc inc mov sbb mov scas fimul loope cmpsb testl inc scas rcll jg lret sbb inc (bad) jg gs cli mov add cmp pop loope sub dec data16 push lods jmp jns pop jg push inc inc test mov jmp jg leave ret repnz mov pushf and rorb inc push popa pop jg test and sti ret ss and fcom mov into jg cld subb iret idivl inc pop out int3 sub push pop aad mov (bad) jl push mov popl jmp lods lahf mov outsb call and lret (bad) xlat jg aam push leave fcomp inc aas mov xor adc mov inc das or aam mov addr16 repnz popa sbb lahf sub mov aam xchg jg inc sub dec js or addr16 and jg fxch cmc in hlt jne aam mov xchg jg jle push push pushf cmp or int3 cmp and and popf xchg jb mov in lods lcall mov loop jecxz jg pop sahf inc mov lds scas jg push dec xchg ret bound (bad) cmc out add dec jg dec call jecxz stc shrb pop xor or mov jg int push aas mov sub outsb push add daa jg xor in jo adc push dec fstpl faddp pop dec ret ja (bad) test test bound mov cli ljmp pop dec sahf cmp je ret pop rcll fsubs (bad) lret (bad) rolb imul fidiv mov cmc jge or jb jae push fdivp jmp xor lods jg,pn pop ljmp sbb hlt jae stos or pop or pop lds cmpsl aas mov xchg mov rclb jo sub jg jl popl and mov (bad) in clc (bad) add xchg lea insl push push jle lds push ret cwtl (bad) mov mov fimull insl pop xchg mov rcrb mov xchg pop adc pop dec push or pop sti int3 int lea dec sbb aad mov (bad) fisttp inc push jle arpl and or repz lret mov add inc and (bad) out cmc mov pop jg out adc jne dec mov loop lods sub sub sbb pop sbb lds shlb in sbb xor mov push adc aam lret jg jmp mov jg inc mov and cmp int es dec repz dec mov pop mulb cmp ljmp pop mov in sbb cmp je jo inc xchg mov es dec call jle pop mov push dec and loopne cmpl aas and sub pop jg jb loopne mov ss sbb or jmp imul jg lret pop cmc and jg insb xchg les (bad) mov dec mov xchg clc mov push dec hlt or push (bad) mulb push enter iret or jg insl mov inc dec pop xor and mov ret xchg aad and dec stos outsl cmc adc cmp cmpsb shrl scas int lahf aaa pop (bad) cmp push imul imul rcrl dec in out (bad) xor mov pop cs loope push (bad) mov ja sbbb jg or cli jae xlat xchg (bad) dec jg pop jecxz xor inc fsubrl je dec jne ds cs lea pop and pop jle mov xor inc or leave mov rcl jg mov xor dec cmc loope jge inc (bad) js mov xchg sti popa inc pop or icebp gs loope rorb sbb mov pop xor pusha add sub mov popa (bad) jb movsb aas pop push ret iret push xchg ja pop jg out lcall insb xor mov mov inc and das pop clts dec pushf ss sbb jg out sub aad jecxz or dec ja mov fiadd imul arpl xchg sbb push sarl ljmp dec pop sahf je jg stos adc dec roll sti jmp repnz mov sbb stc jg xor daa (bad) dec loopne mov lret push push mov in pop fildll pop jg insl or sti rclb mov fildll inc mov pop stos das xchg lahf pop jg mov mov mov dec orl xchg mov gs cs jp scas ja xchg xchg jl jmp mov dec xchg pop pop inc ss lret (bad) lcall outsl insl inc mov mov fisttp mov (bad) sti ljmp cmp sub jg pcmpgtd cmp pop loop dec add jg cmp jg inc jnp inc inc (bad) jg push mov js fnstcw aam adc fimul dec cli add push insl decl mov mov dec pop sbb lods mov inc imul repnz cmpsl das ja or movsl add out outsl test repz ret jg in jmp mov pusha or push jg dec add int inc lea arpl jg cmpsl out jmp mov (bad) xlat lahf pop jg push xchg mov fucomip stos jg adc dec pushl xchg mov jg adc mov xchg shrl jg scas les push or jg int imul fisubl jg out enter inc jg fnstenv mov scas in jg push aas sti cli pop cltd loop jnp adc adc adc inc jmp mov mov test js adc pop sub xchg push inc xchg sbb jg arpl push jg lods jae dec push cmc lea mov pop (bad) xchg sub imul out mov btr and xor lods jg jmp sbb jg inc cs push cmp insb mov nop add je pop rol xor jo pop pop xchg xor jo test xor mov jg (bad) push lds push aas insl add es dec adc jg pop inc out in or sbb lea sti fldl dec dec in or lods outsl jns push aam dec dec xchg push pushf imul inc das (bad) out inc int add mov hlt (bad) push add (bad) jo negb mov dec jg mov pop mov jg xchg mov push xchg dec (bad) outsl (bad) cli inc loop jb dec mov or (bad) jg daa pop mov jg ss cmp loopne cld arpl adc xchg aaa dec push js cmp mov inc lret repz mov ret inc push dec dec mov add int mov addr16 ja std aad sub xlat loope movsl cltd mov test dec scas and aas aam clc fwait mov push or xchg aas scas cmp fwait inc xor push in jg sbb nop bound sbb int3 pop jns std xchg icebp stc push jg lret xor cmp inc pop (bad) push int3 xchg cltd pop cmp jo pop js push push ja cmc mov push xchg push xor inc jg dec pop mov out sbb jg out add jo,pt aas lcall inc insl imul pop add in jg push xor fiadd pop jge aad sar jp jmp sub mov mov jg cmp fistpl das lahf jg mov push mov lods dec in mov jg test push (bad) pop add xchg mov and (bad) jg lcall mov dec lds jbe xchg mov out pop inc lods test xlat popl dec (bad) mov movsb pop jg push push xchg ds jg into jo sub jne cmp fxch adc (bad) jg test mov and imul loopne scas push test std les adc js inc xchg fsubs jg or movsl jg mov jge jg jbe inc push inc xor jg xchg fisubr mov and imul cmc sub js mov inc mov jg adcl je popa jg pop adc hlt fst jg insb inc mov jg jno cmp (bad) push jg or xchg aad jg int3 jb hlt sub push mov popf mov dec sub push sbb jg or mov lret sahf enter jns or test dec cltd sti cmpw mov or mov cmp push jno or in adc nop add push sbb ds pop fmull cmpl popf jg push rclb ljmp mov out mov hlt jg movsl and or fwait jg decb mov ss stos inc cltd jg mov rcl jg sahf and dec mov cmpl popf sarb xchg pop loope cmp sub jo pop mov and fsubrp movsb jg sahf jae les popf aas clc (bad) mov imul or jg jle (bad) cmc daa test jg sub mov jg mov jmp add xchg push das les pushf push test add int ret gs jno push iret repnz mov sti rcrb xlat xchg testb test push jg cmp mov cmpsb add jg jno inc push repz jg push xchg test jg adc sbb roll negl mov dec add pop cli inc mov cmpsb xchg and pop push insb inc mov mov inc jns pusha jg scas xchg cmp sbb (bad) cmc sub jg dec in add insb roll mov fwait jns outsl ret or xchg jg cmpsb jb (bad) mov jg dec mov lahf add popa movq add pop and dec (bad) jge mov test jg adc stos scas (bad) mov mov push xchg mov (bad) in jecxz or je add pop sarb std (bad) es dec mov and mov aas push std or jg and and lock in icebp dec cmp outsb xchg lahf mov bound cmp ds add jno (bad) jg lods pusha mov out cmpb ds int3 or arpl dec outsl movsb scas out push jg test (bad) xchg out mov add lock and xor dec push xlat das jl pop jge inc and adc lcall insl mov jg and dec rclb pop ljmp fcomip jg sub push cmp mov (bad) ss ja inc gs inc jnp pop cli xchg lret jae sub jle fstpt je pusha loopne mov ja mov mov ja lock pusha nop scas mov jle cmp lds aas cli add pop dec jg daa test mov jecxz adc jg dec add mov mov mov nop mov popa pushf cltd sarb int3 out mov mov fwait jg ja and mov jg mov imul mov ss int3 push cmp push jnp jg fcmovbe inc cmp daa data16 inc fstp jg in das iret ds push imul jg pop out jecxz std cltd jg xchg adc dec mov popa pop jge xchg stos ret js test sti leave pop jg call cwtl mov dec mov adc sbb aam inc test (bad) sub jg add fnstcw and aas pop push call outsl (bad) sti inc add or insb jg es xchg loop jg gs lret inc aad das jne pushf push jg je (bad) sti gs test dec stos and movsb cmp sti xor (bad) popa (bad) mov addr16 push loop (bad) jmp outsb add push outsl xor jge (bad) cmp mov jns or sub jg jbe mov ret aas insb and dec sub jae dec inc pusha jg aad gs jns and jg inc cmc repnz xor lcall jecxz dec jne jg and fwait push jns jg inc pop and (bad) mov out cmpl aas jg mov data16 adc jg insb imul inc orl jg lret lea out push mov sbb (bad) adc push idivb cmp xor xor mov dec in cmc jg mov icebp sbb je int3 jp mov xor pop (bad) inc mov shrl aas dec movsl loop enter cmp and adc xsha256 cmpsb aam adc and mov pop ss cmc repz jg dec sahf lret negb inc add add aad jg cmp mov mov in xchg jge clc aas bnd push mov (bad) and cwtl mov xor les daa scas sarb loop add (bad) cmp jg (bad) or aaa jne les xor inc pusha sbb fidivr or rclb mov mov mov insl daa adc push jg and sub sbb xor js xchg push inc and int3 cltd cmpsl jne pop dec pop push jg iret lahf push in movsb pop arpl jg loop aad sub iret insb jg cmp clc mov xor enter (bad) xchg rolb jnp imul lock (bad) mov test mov imul bound loop pop shrl int3 and ret outsl jg les cmp mov mov xchg jp jg sub mov cmc push mov cltd popa popf jg out out and mov jb lock or pop mov in ds cli and xchg mov rolb out movsb cltd rcrl or push test (bad) push lods ds pop xor fistpll push cmc sub and fdivs jbe int3 add stc (bad) imul jg scas add mov pop aaa (bad) cmc push daa (bad) das jb push shrl insl dec aam addr16 push cmp adc mov fisttpl xorl fmull mov inc adc pop stos imul jmp mov jg mov cmpb xlat mov movsl int3 mov rorl mov sub out test jg push mov pop test fdivl add sbb dec repnz divb jle in jns push push pop ss mov stc out inc repz insl jg arpl je push mov push aaa cltd mov pop (bad) jg scas adc jg in nop clc imul xchg aaa xor inc mov outsl jo das pop cmp jg add pop jg movsb int3 scas imul push dec stos pop mov mov in add mov cltd fnstenv loope or (bad) aas and jne nop pop add dec sarl test mov cmp into lds and pop popf nop in sahf or rcr mov and repnz movsl (bad) imul dec cli jg in idivb jbe mov mov mov push dec inc dec mov mov xlat adc xor mov jg jp mov push cmp js gs pop iret mov pop sahf xor jb mov cltd xchg fnop mov lods stos mov cmpsb loope cmp sti fadds jg jb js add mov xor icebp jg rolb idiv int3 scas and and data16 cltd sbb roll cmpsb adc jg in lea lret jg jbe cmp fstl nop push xchg sub xor movsl scas sbb pop std dec mov in pop pop inc jne ja (bad) jp mov mov xor jnp add xorl (bad) cmp or sbb xchg jg xchg pop or icebp jg push xor push repnz add sbb cltd insb sti add jl cs inc inc mov dec cmp xor inc jg adc enter gs sbb sti ja mov push mov (bad) mov sub jg inc (bad) fimul loope pushf jg inc adc out imul jp or mov dec or or scas dec lods cmp dec iret outsb (bad) cmc cmc mov xor jo mov pop dec jg das (bad) cmc pop sete mov xor inc lret fiaddl xor cmp scas js mov pop aas (bad) and sti call sbb scas mov leave xor and lcall enter pop sarb out clc pop movsl adcl jae xor adc dec les arpl dec decl addr16 rcrb imul xchg jle sbb xchg sub jg scas int3 sbb pop out jg pop loop adc lds mov jle inc mov sub or mov xor inc jg lea xchg cmp negl dec pop xchg cmp imul shr adc jg mov cld sarl cwtl hlt or inc mov jmp cmpsl data16 cmpsb popf inc js out dec int dec push jg push push mov pop xor ret pop sub dec les push iret jbe sub inc push (bad) jno call inc cmp inc mov fild mov stos add xchg xchg pop jg push jo loopne (bad) cli aas cld mov dec inc (bad) pop mov xor pop cmp push js mov pop cmc fcmovbe stos or scas popf ficom jg aas repz (bad) jb mov iret popf dec mov stos js imul data16 jg test popa faddl insb (bad) xor imul inc hlt shl jg inc sub scas and sti jecxz fcomip xchg xor dec sub outsl fnsave pop test mov mov cmpsl jg adc mov jg push popf pushf push and or jl jg aaa sub gs (bad) popa push jg dec not mov imul ss pop push fnstcw pop jne pusha negl scas jg mov das mov loop jp jmp fnstcw push mov arpl idivb imul in cmp mov mov sbb pop or sub aas js lods stos hlt pop lds adc int3 xor rorb sbb jb aas inc xor loope dec inc add push (bad) ds inc imul stc dec mov jns dec add pop les xchg inc lahf movsb dec mov jg repz (bad) fisubl cmp sbb add ret push or sbb icebp pop push dec (bad) mov aad jg inc cmp sbb mov in ja loopne js mov jg jno mov mov push (bad) insb pop fbstp and jge pusha jne loop stc jg dec xchg pop mov pop jns mov and cs mov xor jg adc stos stos es outsl xor rolb loope and fwait push jg call mov enter (bad) into data16 aas sbb inc fldt iret dec stos lahf mov jg xchg sahf push fwait lods into inc inc clc mov mov mov mov insl xorb jb pop mov xor adc jmp pop cmpsl jle arpl mov imull push out js,pn sbbb push pop test mov cltd pop js fs mov movsb lret push cmp int3 fcomps insb decl jmp dec jnp ret mov fdivp stc fldenv nop xlat scas lret std jno arpl cmp leave inc sbb mov pop mov push call adc pusha ss push in dec inc mov dec jnp xchg mov mov add in pop mov sbb ja or pop and or jae sub loopne pushf mov test push jg ja (bad) push mov popa push pop int3 pop orl popa out fistpll xchg fiaddl mov fadds jg mov mov adc es icebp xchg aas cmp fadds jae jle dec cmc pushf fldcw or inc rol jnp push pop (bad) ja xor jle add and jg int push test hlt into jg pop pop add mov sbb mov jecxz int aas jg cmp lahf sar mov cld jnp jo push (bad) xor aaa ss mov psubsb cmpb jg mov pop sbb mov mov inc cmp push cmpl test sbb stc or pop mov cmovae sub adc out xor or outsl int lcall dec lods popa lret mov dec andl sti cmp or xor mov inc jp shr add adc jo pop jbe add cwtl insb fwait jg iret jae or mov adc pop mov and aaa pop jg sahf mov adc scas inc lahf inc aas adc stos pop pop outsb pop dec pop loope aad mov jl cmp rorl ret mov inc (bad) hlt lea adc sub cmp xchg out repz mov xor sti mov test aad adc sub fs sub pop mov leave adc mov mov mov xor or scas dec arpl jl es cmc sbb jecxz lcall insb jo push sahf sub (bad) xor mov jg inc lds jg pop or pop lret sub in and xlat dec mov add ds push jg ret pop dec ss jno icebp mov cmp push stos inc out and push jo test mov ret cld ffree (bad) jns jg ja xor adc jmp fiadd and jecxz push pop cmpsl jg cmp not xchg jg cmp mov inc int3 jg loope shlb jge and jg mov pop lret sbb les or sub push imul test popf bnd cmp jg sbb lahf fwait jg cs pop nop sub lret jg lret jge cwtl and fst es jg mov add jg (bad) push ret jg andl cmpsl jg and and pop arpl jg sbb jg lock pop cs iret pop jg mov push sub mov lods scas add mov daa clc sub mov push fcomp jmp push cmpsl inc xor jb (bad) aaa xor movb jg inc jno push mov imul inc jmp mov mov dec jle jo jmp lret dec popa mov lahf mov pop inc and jg xchg sub lea cmpsb lods ss stos aas nop jg mov mov in jg cmpsb leave dec sub jg inc loopne mov es sbb mov cli cmp push sbb sti imull dec test and ret dec sub sti xchg xchg push ljmp mov jmp cmp ljmp lahf (bad) clc jae xchg push mov mov lods fisubl push aam out adc jg or incl bound push push in out jle pop out rorl (bad) jg xchg js push sub hlt jg sbb jne cld clc and ds pop into movsl stos xchg jg cs insl sbb fsubl stc jg adc and sbb stos or jne cmpb xchg icebp fmul loopne inc inc jge and cltd ja adc testl ficom jae movntps idivl sub inc imul mov pop nop adcb outsl aas rcrl jb (bad) sub jg mov lcall jae pushw jno movsb jg jne pop mov in stc mov push xor in inc jg lret fnstsw cld fsts sbb or xchg das int popa dec jg cmc sub (bad) xchg pop xchg cwtl outsl mov aas imul and push (bad) loope es cmc push mov pop jmp popa jg xor push sti ja push repz sub sub imul dec aad adc pusha adc call sub cmpsb pop jmp in inc pop pushf sub cltd mov pop sahf mov ja mov jecxz cwtl push jg mov dec xlat fidiv cli hlt or jg lret (bad) lcall mov jg gs mov jg lea js es push nop loope popf pusha clc xor sub mov push push cmpsl mov push pop pop add sbbl cmp outsl push xor cmpsl sbb dec jne jg fldt ja jge pop jg fdivp cs lea pop fsts sub outsl adc loope inc (bad) out mov mov enter sarl push mov insl jg xlat lds xor or test shr jg mov xor out xchg inc mov mov sub (bad) push cmp sbb repz notb movsl inc lret push jae bound in (bad) inc xchg jg cmp fld lret mov mov test sarl cs push (bad) and jl inc int jae jg (bad) (bad) iret cmp sbb cmp mov pop mov jg lods mov jb jge scas insb test test movb lds cmp pop js xchg int jg cvtpi2ps stos fsts jg xchg push cld hlt repnz arpl mov mov mov add pop call jne mov xchg jg dec femms ror (bad) out (bad) sub and scas xchg insb push sbb mov subl sbb xor jecxz push or pop adc pop pop loope jg (bad) push (bad) or xchg lcall iret jp xor xchg dec aas or aaa add popf inc (bad) xor int outsl les cld push lret mov stc mov jg and mov jmp jle push xchg (bad) repnz push xor jg lcall jg xchg inc dec leave sbb cmp push push lds jns mov pop fnstsw scas imul xchg mov jg ljmp mov popf mov addr16 jl test pop xor pusha lods sti pop ret pop mov push dec xor add rcrl cmp xor sbb mov ds push pop mov and pop clc jne jg test in dec jb xor ja int3 insl and mov (bad) sub xor dec dec mov dec and adc dec jmp mov imul sbb (bad) cmp sub cli (bad) jb pop pop sbb sbb jg fildll mov fdivs dec push pop fidivl jg notl jg rol jne int push jg stos push fcmovne mov jg sub test lret insb ret dec sarl js imul and sti adc jg arpl inc push enter xlat add inc iret jg add push jg ljmp xchg inc inc add int push loope gs mov mov movb mov jecxz sti add inc into sahf mov mov sub pushf cmpsl pop sbb aam inc les dec mov aas setl pop js dec stc es les (bad) jg jns incl xchg cld nop mov out stc inc aas fmuls jae sarb pop cmp les jg in (bad) push xchg push idivl scas inc mov sub arpl cmp (bad) popa aaa jno lahf push and inc pop jb mov mov jg xchg or ljmp mov arpl mov iret dec sahf shrl aad lahf or mov sahf xlat add jg scas dec jle jbe xchg out stos cli cmc inc idivb in bnd sarb out add push jle pop insl xor ss pop mov jbe iret push addl pop lds and in movq xchg jge jg push add jnp sub add pop ret pop inc dec out popf jg imulb cmp inc mov cmp je adc mov mov (bad) or pop jns insl aad pop out jg pop mov mov mov adc (bad) mov out jg mov cmp inc mov dec mov sarb fisttpl xor sti jmp mov je loope jg push xor dec cmpl xchg stc fimull cmpsb popa int movsb hlt and icebp arpl inc mov je or les pop dec sbb fldt jnp bound sub mov cmp xchg sub sub jg lea repz jge addb mulb mov fdivrs add jg (bad) je and loope jg mov and in repnz sahf loop jg push fcmovnu lea push out mov jge lds or das jg call repz mov lahf sub lock add jg ficomp pop mov (bad) in and loope inc int3 daa mov sar xchg adc xor jle or sbb mov cmpsl cwtl pop push xchg rcrl xor mov pop arpl ja mov pop xchg mov inc mov dec jg out jbe cmp mov roll jmp jg inc lret in and pop mov and add jg dec jnp je fcomp mov sarl sub incl jg push adc in lret cmp pop stc enter mov push mov jg pop inc (bad) sub popf jmp jmp ret sbb cmp pop in das adcl iret add cmp imul sarl dec lret popf jle outsl jg push hlt mov xor pop pop dec push cmc pop mov jg xlat int3 mov (bad) outsl ret and cmp push push das mov jmp pop cmp dec push cmp outsb rorb pop fistpll fwait aas (bad) inc push (bad) jae push ja lods mov push aam push stc je add adc jo mov xchg js jg cld inc or or mov push test outsl push push dec mov jg and jb (bad) jg jns add sbb lock xor (bad) push sahf arpl mov and popa adc jge es enter jg push test lret pop jg mov rolb mov adc xchg into sub leave aad icebp push jno sahf xor sub outsl mov mov sbb jg cmp lea inc and pop dec and ds clc push jg cmp insl push shlb mov mov lahf dec aaa je pop cmc jle sbb pusha rcll stos outsb fdivrs cmpsl pop sub mov stc or mov lret shl imul xlat stos lock dec aas cmp sbb adc jmp enter sub mov divl (bad) negb iret add je jg repz pop ss xchg aas subl jg iret mov bnd or call push jo and xchg jmp jg cltd gs fwait dec (bad) mov add mov sti push jmp test arpl lock (bad) (bad) jg cmc cmp outsb jg call xchg aas xchg sbb fisubr lods inc add sub inc pusha jno mov mov pop cmp push sbb ret cmp lahf jg jnp dec mov or pop or xor call nop mov mov out fistpll out pop push pop fsubrs loop jg aaa inc stc bound jle shlb ja jae cmp push add mov mov mov cmc xor loopne imul test outsl stc lods imul mov cs fistpll xor lods in pop pop inc sub cs (bad) fwait jg fistl dec xor fistpll fmul jo mov jae outsl or xchg stos (bad) lock adc mov xchg in jg add pop shl ror popa dec mov aas mov ljmp and aam (bad) and pop mov inc add sar (bad) stos mov aas adc cmp pop mov jl jg jns push jnp rep jg sub push jo int (bad) loope das (bad) jns stos jg and mov cmp jo mov push jne dec stos xor lods sub or popa add inc std xchg dec sahf dec and leave in icebp fdivrs push inc ss pop int3 pushf sub jae repz pusha or sub xor push movsb jg cmpsb dec in lock inc jg addr16 mov jge in mov ja and push sbb jg scas icebp cwtl add jg andb das lahf scas jle jae xlat dec cmp js out mov dec mov shrl jg cmpsb aad jne,pn mov ja popa xor jg int andb das lret fldt push xor jp inc les adc pusha and aaa mov dec dec xchg rorb leave fidivl (bad) enter inc inc cli xchg add mov addr16 or aas in mov mov push and xchg mov xor arpl jne movsl jg ss das push (bad) cmp repnz lods sbb mov dec jno lahf jg clc movsl adc dec cmp loope jg mov sahf pop pop rcll mull xor push mov rclb jae (bad) sti pop sub dec pop fidivrl jg pop lds mov ficomp or mov out (bad) sbb ljmp inc cli mov aaa mov fisttpl sub inc and mov mov lods nop mov ds shll jg cmc iret push lret pop jg daa lahf clc aaa cmpsb add repz cmp loope (bad) sub pushf xor inc dec push shrb jg (bad) mov push mov js ret lods add mov pop dec jg ja add push xor jg push das add aam mov das inc cmc scas and mov cmpl in es jg pop add sub iret jle jge mov mov dec jg lcall ds les mov cmp sub lds pop call xchg cmpsb leave dec loopne mov mov ret jle out stos iret cmpsl pop pop xor add mov sub outsl and add ds and push jg or mov js sub flds sbb daa mov lds jg loope push push scas cld and in cltd data16 outsb jmp out aas xor and xchg lea jl mov add or lds scas mov repz jg repnz mov sbb cmp (bad) push cmp test jg push xchg insl loop lea (bad) lret jnp mov mov mov cld mov mov scas xchg dec mov (bad) out push xchg xchg push and popf stos loope xor push in mov push adc sti outsb repnz rclb mov jg sti push arpl mov mov cmp jg xchg pushl xor jae jecxz xor call sub mov mov insl push sbbb cli fcom sbb xchg jg out and mov and (bad) mov scas mov mov or push sarl lahf rcr aas jmp imul dec push outsb mov pop popf fwait ret pop mov icebp or cmpsb lahf jg cmpl xchg mov inc lcall jg adc and les lock std pop mov movsl popa cmpsl xor scas and ret xor sbb fadds or les loopne push call lret xor out sub jno imul xchg les pushf popa adc inc and fwait mov jg arpl aad loopne mov xchg push ret dec (bad) push in cmc pop jg lret adc mov push leave push subps faddp adc jg mov repnz xor sub std ret jbe jne jg inc xor cmp sub xchg lret jg bnd push xchg test pop pop fsubl out (bad) jbe pop or xlat jmp arpl push push outsb mulb push push mov idivl xchg push adc jmp (bad) xor pop test xchg iret scas xor outsl sub jg jno es jg sbb mov mov rcrb sbb bound mov rorl imull push mov dec fmuls push sti mov pop adcb in leave dec mov aaa cmpsl sahf mov jg (bad) call dec aas fldcw adc sub ljmp adc stos and mov mov sahf pop dec lea push dec xchg inc jg loop repnz mov into push adc mov inc mov xor mov and insb inc pop push mov or sbb faddl bound es call pusha out imul pcmpeqb pop pop xchg mov fsubrp jp pop dec push test mov mov push jmp (bad) sbb push hlt jae xor adc imul mov xchg adc jae add lret pop lahf jg in ficom add cmc add lcall mov mov mov inc je (bad) lret pusha adc inc jp movsl jno into nop xchg pop mov pop mov enter mov add mov test outsl mov rolb jmp inc fstpt in or push sbb sarl and stos imul xor scas (bad) pop jg mov rclb jg mov mov push or sbb shlb cltd or jne outsl jg das mov sbb jge ss imul stos mov jg cmp insl fisttp push and jae daa pop push adc jmp lods mov push sub stos pop int3 jmp mov xchg movsb cmp and push push outsw jg dec pop ljmp adc pusha and dec mov clc in lahf cmp cwtl out data16 aas and loop test lods inc add mov jg push repnz jg out jmp add jb pop daa sbb cmpl xchg pop jg dec shl stos in inc jg mulb scas jmp aas cmpsb loop mov inc dec jg jnp cmp jg inc (bad) cwtl jno cs or popa xchg sbb rol mov sub in fcompl cmpsl mov pushf bound ret mov enter jecxz int in mov out mov jg nop dec es jns test inc or mov adc call aas js add adc inc (bad) and jb aaa mov inc out aam test mov pop jo (bad) out jmp pop (bad) cld lods and jg dec mov add cmp insl in adc cli iret jae jg inc mov push mov dec stos inc (bad) jmp fs mov jge push xor sub push mov mov xor popa or add push sarl mov pop push sbb jg sub inc ljmp (bad) int mov xchg adc jg lahf aas sbb mov dec cmp insb lea (bad) js data16 mov push mov mov adc mov adc lods lock mov addr16 sarb insb out push ss dec in decl jl test repz or pop xchg inc inc je jle or js (bad) jg lret idivb jg cmp mov jg fstps pop push cmpsb cmp xor sub fdivs jg arpl fucomp test sub mov test mov fdivs xchg jg mov jne jle and or imul pop (bad) in cmp xchg mov or xchg fmul sbb jg repnz (bad) pop arpl adc nop jge pushf cmp aas add dec jg mov inc repnz addr16 xchg inc inc jmp sub xchg sub jg sbbb out inc mov and aas cwtl push int3 bound pop jecxz subl jg add loop mov je pushf pop pop xchg ficompl mov loopne jg jb les push jmp sbb dec xor fcoml gs les inc sub jg repz aad inc imul add xor dec jle aas add xor iret pop push mov dec sbb adc dec gs stos arpl dec or mov mov sahf jg push idivl jg repnz and xor or inc mov jecxz and jg add push loopne leave mov inc aaa cmc idivb les daa inc jg cmp mov and int leave outsl jg push xor push nop mov es test pushf pop dec and jg ret jge cmovbe repnz or movsb (bad) pop jg ljmp inc popa roll pop testb addr16 mov inc pop jg add mov pop jecxz hlt push lahf pop dec jg cmp sub test add mov out cmp hlt push lret (bad) jno sub dec out lea pushf jg movsl push aad mov push and jg stc cld push sub sub and xchg movsl (bad) int3 mov cld mov sub add inc xor xor jmp mov data16 mov ret jg cmp fidivrl mov sbb inc imull add jg (bad) inc lcall insl mov pop mov daa popa jo (bad) pop mov cmp adc adc fwait mov std jg xor jl jg aaa scas cmpsl xlat lahf sarb dec sub dec sub sub cmp lahf mov or jg lods mov fcmovnbe sbb bound jg push cmp in ret xor push cmpsl xor jg xchg mov bound jg rcl rcll xor jg leave scas or mov dec inc or cwtl mov cmp add out jnp sahf int3 cmpsl jg out sbb mov in arpl sub mov dec jne test lcall out fisubrl cmp bound mov lods inc cmp jb fs xlat pop fdivrp push mov scas sub das mov push addb jg popa jge pusha cmc dec fdivrl or adc jg pop add dec mov pop sti add push mov sbb pop out xlat cmp (bad) jg xchg and sbb xchg cmp andl (bad) and int3 jg adc sub lds lock jg pop xchg (bad) (bad) insb int3 cmp jg scas movsb push ret mov push cmpsb xchg sbb stos jg pop pop or jg in mov cmp xor mov dec push add pop pop mov mov mov and lret sub mov insl inc xor inc jo pop push jns jno cwtl call cmc cmp (bad) movsb xchg dec js shll or mov sti mov out jp sti dec popa xlat sub mov add test inc cmp andnps iret jg fs aad add mov imul (bad) mov cwtl inc sub jmp hlt (bad) mov aas pop pop les lea mov jg cli mov xchg dec inc add adc xor sahf imul mov jg test inc insb fstps jg out jo cs jl jg imul mov dec pop sbbl js push jg sbb imul repz jg test fisttp xchg cmc push jg sub sbb enter subl cmp xchg and mov add aas pop xor ss dec outsb aaa xor scas repz in xor shll adc ja shr movl jg inc outsl jno sub (bad) mov popf add jl jg mov mov jg and addl jnp xchg xchg jg xchg pushf aaa sbb int3 xor sbb cmp scas or mov and sbb andl in and arpl mov push mov cmc pushf stos mov push daa out xchg lcall inc dec outsb add push add mov adc add push and cmpsl jg (bad) inc mov (bad) nop xchg sbb loope leave jg sub aam out outsl fstpl mov add push mov sbb xlat and jg jno aad or loope sbb add cmp jg dec in shrl mov pusha insl xchg inc push and lods push xor (bad) nop es mov out push in subl imul and dec or inc in push jg out inc xor lock or sub rorl lds div adc jg sti js cs pop aaa jg (bad) loope mov cwtl (bad) cmpsb ret icebp mov ret inc jmp jg das fsubrl mov fnstcw test in stos aas pcmpeqw inc jnp jg out ret inc and jmp mov jae ljmp push mov fidivrl lahf xor cli mov push jg repnz stos rol jg imul xlat fs data16 xchg addr16 (bad) pop jg or ja cmp xor sbb inc insl into mov sbb lds sti cmpsb ja jmp sub and add inc xchg (bad) dec jg out pop mov push add adc mov mov loopne fildl int3 sub mov adc and (bad) mov jno adc mov jg push push and (bad) push jg inc mov jg enter (bad) pusha jg mov insb push sti movsl repnz aaa outsl push ljmp arpl sbb dec jg or repnz (bad) sbb ret xchg test cmp xor bound xchg jnp,pn dec mov ja ffree xchg cmp test xor jae stos and push aad (bad) push clc cmp mov (bad) dec pop jle idivb cwtl mov fstl push les jg pop int3 inc add mov repnz sbb xchg je cmpsl xchg jg test rcr push adc add cli adc jg jo sbb movsl (bad) xchg jg ss call push dec pop jecxz or push jg sub sub test jae xchg jg push push out rol xor jg xor in out inc and sti mov int push push mov (bad) xlat inc dec cmpb xchg movsl out jl jb sbb js mov cmp mov std mov xor dec nop sbb dec pusha sub rclb loop cmp dec push push sub add push lds into cmp jg add je in inc aas jg and std (bad) cltd aad jg and or jl jg add pop js push push jg sub and das mov ret inc push pushf sbb sub mull jg jns fisttpll divb mov movsl out popf push jg (bad) pop dec dec popa mov cli lret dec (bad) xchg jg mov jg sbb dec jg scas jle mov sub inc fdivl push xchg xor loop lahf (bad) fidivr inc addl ss movsb jg imul clc xor mov jg xchg lock lods mov movsl jl adc mov pop aas mov mov dec stos ja cmp or into cld and push fwait jg jae mov mov scas jns pop xchg mov mov jle push aaa cmpb lcall pop and push int3 mov sarl (bad) xchg add fs or cmp fisubl adc xchg imul jg xor push aas adc fcoms sti inc decb mov sub fimul negl mov jg in mov jg enter add dec hlt add push mov and addr16 jae,pn mov loop hlt inc mov jno push jg inc rcrl mov (bad) jp mov inc sbbl jg movsl mov imul js mov mov dec into repnz cs aas jmp or addr16 aas loop movsb je daa das sbb pop mov jg sub jge add sarl jl dec arpl xor jge in nop and jg stos or jle mov mov scas out push bnd lods loope xor pop call sub je in scas sub fcmovnbe and cmpsl roll imul lds cltd inc fdivrl push (bad) clc fdivp in push xor cmp jg dec pop ja dec xchg sub and xor jns add push mov adc in adc xchg js les sub cmpsb mov push and xorl xchg mov lret cmpsb inc adc (bad) push fstpt or and popf mov lods jmp xchg in or lret cmp aad sub push jg push shll pop push cmpsb mov add cmc jno mov jo in stos sti rcrl sbb test fnstenv mov sbb inc xor and xor cmp lods lahf ss jg das test outsl out (bad) or (bad) jg and ljmp imull cmp in sarb or rolb pop jbe jnp out pop arpl (bad) leave xor jg xchg cld loop xchg arpl mov jne in sahf jmp jg arpl (bad) mov cs push pop stos adc bound xor jbe mov sahf xchg xchg mov pop dec pop mov (bad) jecxz push inc jle bound fs les or cmp ret push mov jmp push sahf jge cmp cmc jg mull jle insb pop ds mov inc jge and inc xor fistpll pop pop loopne sbb pop insl dec clc fwait pop daa jg push cmp inc mov mov fbstp scas sbb jg mov inc mov jno push push pop jg sbbl ja and inc jnp pop pop movsl inc cmp adc jmp les sahf pop sysenter fldt pop mov jg lahf xchg jnp xchg (bad) mov or jecxz cmp jg cwtl jmp data16 xor adc mov outsl stos inc outsb mov jg aaa cmpsl or mov (bad) incb jg add pop xor testl pop jg (bad) repz push loope sbb pop clc jg adc lahf adc pop (bad) mov jg inc mov jp out sbb cmp and mov into aaa push (bad) dec incb out sbb mov lods js add jg rol jb jnp lahf jg gs bound in fcomps push rcl jle subl loop jmp pop int sub call dec cmc mov and dec test dec pop int scas lock sub dec or mov jg enter xchg outsl out imul cmp sbb ss pusha adc out or or pushf jg cmp (bad) dec fistp repnz movsl mov jae ss inc jg movsb addr16 add adc mov fs loop pop mov pop cmp jmp jl in cmp mov sub add pop push icebp fsubs sahf aaa dec xlat xchg xchg jg sub je vmaxps fsts imul jmp cmp jg mov sbb and push pop dec stos std and mov lret iret mov mov push inc int add cs jg xor test mov jg inc std sub (bad) insb scas rcl mov jg push xlat cmp push (bad) sarb push bound fsubrl jg cli pop fsub mov jg imul mov xchg mov mov iret sub adc sbb dec jbe push inc mov jmp addr16 ljmp sbb ret cltd mov pop add pop not mov leave push fwait jg test lods mov xor jl xchg and mov cmpl ffreep jg cmp cli and outsb pop jg test cltd test cmp mov lcall hlt aas add xchg push stos int3 dec add mov repz cmc ss je cmp jg gs imul jle push dec (bad) cmp mov jg test inc mov dec mov mov sbb cmp push xchg jg mov jg movsl popa inc xor imul sahf test mov inc outsl jmp fidivrl lret fxch mov jg inc cmp xlat jg and push jae sti in jg repz outsb fs mov inc aam into mov cmp xor incb jg das fist jg enter inc pop xchg movsb pop rcrl xor mov jg jmp fwait push inc fstpt xchg xor inc push jg ljmp jg out sbbl iret sbb ret and xor lods aas xchg inc mov inc sbb scas jp and or negl int3 pop (bad) jmp mov jno mov inc dec mov mov inc or push jg mov mov pushf jne pop dec mov out (bad) cmp xlat pop dec mov mov into call adc push xchg xor sub xchg jmp movsl mov (bad) sub lods add aad sub iret (bad) hlt movsl js inc or loope cmc dec pop jl pushf cld lcall or daa daa inc push stc jg ss rclb sarb adc add mov and aas les pushf inc inc test xchg nop jg test cmpl inc stc mov aam jns packsswb je cmpl clc mov outsl inc mov pop lock adc push imul mov aas adc mov cmp stos dec push mov mov fdivp int3 rcrb insl mov enter outsl loopne add in push ljmp fisubl enter sbbl js pop inc popf sti mov push pusha fimul sbb mov mov pand cmp mov inc (bad) in jg ss mov and jg pop sub jg adc xor dec in mov cltd ret repnz dec iret jg adc shll outsl jg push rcr daa scas cmp add mov pop imul cld repnz fdivrl push sbb mov dec cltd outsl adc mov or inc or xor push dec popa outsl aas js scas cmp imul lahf in iret sti pop mov movsl ret jg movzwl jg int or pushf jg or mov shrl push popf scas jns repnz pop sahf sti and sbb data16 mov pop or iret lret and xchg aam subl jg ljmp sti ja test cwtl or std (bad) lock mov pushf orb jg sar jne sub fistpll pop dec xchg push jbe and repnz push das dec adc out jg push mov arpl ja jns (bad) out outsl add popa jno faddl fstps stos mov popa and dec ds scas sbb mov movsl xchg push lret add dec dec daa jg jecxz mov jg scas jnp loop (bad) jg dec nop int3 inc adc mov jmp fnstcw imul sub repnz xchg mov pop jg (bad) insb pusha das dec jnp sarl inc jne mov insl mov inc inc xor push sub fs jl out mov xor sbb pusha jg in cmp loope jg aad imul jg gs mov mov pop mov movsl jo aam add addr16 mov xor and (bad) lcall xor dec sbb xor fisttp ss jg test je (bad) (bad) push xor jg out mov fwait jg leave mov int ret int3 pusha rol out repnz mov aad cwtl mov push push mov pop fimull push fisttp and mov pop or and xchg (bad) push mov fidivrl and ret push pop int3 loop mov cmp andl in jg pslld ret jg xchg cmpl pop xchg lds add popf dec imul mov push jns add adc lret sbb je hlt inc jg aas scas popa sbb fidivrl imul mov mov inc lcall jg push dec jecxz pxor jg test xorb mov leave jg cli dec std jle adc lret push roll orl push sub loope pop fcoms and mov into dec stos mov addr16 ljmp mov loopne pop rorb mov je xlat outsl adc (bad) jg pop cmp mov and ss inc jg sbb xchg jae fdivl mov js and outsl int jmp fnstcw mov add xchg pop arpl cmpl fdivrl rcl popa xchg jg rcr adc add jae jg cmp push stos mov xor push xlat jg xchg pop pop jnp in insl sti out movsl loopne inc pop mov sti jg pop xchg add test fnstcw (bad) lds add pop xchg outsl jmp xchg xor jg mov xchg mov outsl mov dec out cmc sbb push adc xorl jg jmp xor negl ja cmp (bad) xor (bad) and xor lahf int3 push stc sub cmpsl fcoms mov arpl add push pop push mov push jg mov lcall aas pushl (bad) jno jg nop icebp xor sti inc fs cmpb out je mov inc jge sti jle test mov andl test (bad) mov adc subl rcll mov cli mov mov std jg repnz ds xchg jg mov jo xchg je cwtl sahf imul and push and jg fisubl sbb xchg sbb jg mov jge cmc jecxz mov push dec add inc cmpsb jg mov xchg js pop clc jge lea cmp mov pop stos fisttpll inc jg loope add arpl lcall aaa jg clc lahf mov sbb add inc insb and push popf nop cld mov cmp dec pop ss mov mov sti es rolb mov test sub inc bound inc sbb fisttp xor dec ljmp cli pop stos addb fbstp dec xchg or sub inc or xor sub inc ret lods jg ret loop sub pop loope jg addb and fadd in pop mov add jg mov dec push mov pop xchg sbb xor gs or or addr16 pop jg xchg jl test dec loopne mov jae jg add jg cs mov adc mov int3 push inc (bad) cmc xchg mov jmp addr16 inc lds cmp mov daa mov jne xchg pop leave (bad) arpl call ds adc paddusb pop push push ss mov loop inc lret je jle jg cmp and aad mov sbb stos dec mov xchg xor jno jg mov jg or jmp sbb sbb or das loop repnz pop mov jg leave dec xchg mov push imul idivl sub jg pop repnz push cmp lahf lret cmp pop mov cmovae mov pop test lods push mov fcmovb xchg sbb inc hlt jg test das jg sbb stc (bad) fldenv push out add jmp inc cmp sub mov mov dec mov test adc in loope (bad) mov ss pop out jg push dec into jns shrl in inc inc jbe (bad) jg pop pop or mov cli dec test insl mov cwtl jl adc inc mov in lods jae xchg mov and jg stos vmwrite out mov mov mov lock repz add inc (bad) pop into cld es outsb addr16 jg xchg jmp xchg popa cmc mov mov inc arpl jmp cmpsb pop xor jg imul aaa (bad) xor loope mov popf rcll fisttp jge pop repnz mov push pop sbb mov sarb rcll pop cmpsl or je xchg sahf imul pushf dec and xchg aas cmp test xor aam jg mov or cmpsb out push test cli (bad) jg lods out imul mov pop and push pop cs fsubs andl mov cli rcrb shrb jmp jg adc pop mov jg push and ss mov adc mov mov jg ja ss mov shl in mov and mov cltd sbb push int out sti in inc push outsl fs jecxz fwait jg jmp popa int je jg bound jg sahf inc fldl lcall sub in iret call inc (bad) pop aam lcall scas jg shrl das imul mov rorl push aas add lahf popf dec add les sbb mov push push mov adc inc mov lcall xchg fwait movsl imul pop push mov adc pop sub lret mov sbb (bad) cmp lret mov out stc aad mov jl fsts jno dec xchg jg xor fadd mov jg test add inc fnstcw jnp mov fistpll push fsubl mov jno paddb and jae xlat jg or pop in push push loopne jg mov in jg aaa xchg fistpll pop (bad) insl sbb sbb in add scas popa mov shrb and sti adc inc stc outsl push sbb fcomps dec popf inc push fstpt fs jb or out pop mov (bad) arpl clc call mov jg xlat mov loopne pop xor or (bad) jae pop push jg add mov sbb mov ret pop rcl das (bad) ljmp pop sahf inc cmp cmp pop ret mov dec sub fs fwait jb syscall popl cmpsb lret jnp xchg aad cmc sbb cmpsl jle out scas jecxz jg aam sbb popf jg adc cltd stos scas adc sub lods jg mov frstor fcomi scas jmp jg pop or subl pop test std sub jg pop pop fadds insl push jne mov stos add stos lods or mov and pop xor cmp jg dec and repz jg lds jg xchg xchg and dec jg out push dec jmp mov js mov jecxz movl (bad) rorl xor mov pop pop cmp cmpsl pop mov dec scas inc into idivl cmc jge fidiv stos cmp int3 xchg aam jno or sar gs push adc inc push mull (bad) outsl fcoml xor gs mov sarl push das js mov adc test add in cmc cld pop insl into jns gs dec int3 jbe mov test (bad) daa mov mov (bad) inc in pop addr16 fwait aam scas out pop sbb and jg shrl push fucomi and insb imul fist jno (bad) xlat bnd sbb lds or mov imul mov pop sti adc movsb insl aad aas push adc out or ja xchg jg enter les and js sbb fdivr ret jg movsb push nop ret mov dec jg lret jl add (bad) sbb dec fisttp push insb xor aas (bad) je mov popa jg outsl js aas cmpsb push into out stos mov (bad) dec out jg in mov sbb das mov aad sub dec pop xchg repz mov jmp jg shll xchg jg pop fisttp push insb cmp clc jg xlat jl cs (bad) jp add sbb lret lahf scas aam xchg jg dec outsb cwtl pushf pop rcrl (bad) mov add cmp dec (bad) aaa or sbb push add mov add aad bound inc pop addr16 les mov ret mov dec inc loope,pn jg sti and js push dec (bad) sbb pop hlt insb fildll dec divb cmp push jns pusha aaa jg in cmp xchg adc loopne pop push mov (bad) jbe inc inc mov mov and sub inc lock jbe mov jg int shl fimull jg (bad) lret call les or add jg inc sbb or add (bad) xor xor mov lea mov pop pop sub sub mov or sahf inc gs jns fsubrs mov push pop cwtl push adc dec movq hlt and xor jg push xchg movsl jge mov iret sub push cld dec icebp jmp loope jg test mov jg mov fwait inc jg jnp aas push mov xchg out pusha std xor xchg mov lahf push add jo imul sbb pusha sarb ficom jg cmp mov jg js (bad) data16 jg call push mov mov adc sbb gs (bad) bound adc xchg inc sub lret js outsl xchg inc or mov and jne bound jg mov ljmp aam sbb push sub mov jbe pop or jle mov inc pop jo push cmpsb and (bad) mov mov repnz push into sbb sub mov (bad) arpl mov cmp ss test inc push mov jg jbe cmc xor fucomi bound xlat mov mov addr16 mov inc fmull mov mov lcall (bad) adc lahf jb push mov scas jbe lret (bad) fist jg nop fstl mov in mov jg mov sbb and mov repz xchg sbb popf scas push fisubrl mov push jle popa jg pop xor clc or push mov (bad) aad inc cli pop jg add mov jg xchg mov stos sbb sarb ja bound and jg fstpl cmp arpl test lods xor sub jg push cmp jg mov mov or cmp in mov pushf sub jg push lock jg roll jg fsubl fidivr adc lods loopne ret mov jg sbb shll xor pop add adc ljmp dec push idivb in (bad) repz addr16 add rcr sbb jg inc lcall sub btc (bad) nop pop inc pop addr16 jg sti xchg cwtl lock cs mov jp jg xlat jns neg fildl popf xchg cmp repz jg aam (bad) leave or jg dec jns mov rolb lds stc int3 pop in or jg pop (bad) xchg cmp std fdivrs dec mov mov leave sub pusha pop xchg sub jle mov sti inc fnstcw push push pushf mov xchg mov jne lcall mov or stos cmpsb idiv jg (bad) sub (bad) aas int push cltd cmp jge or iret aas leave arpl add add (bad) imull out jge dec and fiadd stos jno int3 add mov or mov pop mov leave inc ja scas cmp scas mov jg fsubs mov dec mov lea jge xor push stc xchg jg (bad) loopne lret js std xor leave or push jae sub bnd xchg gs dec aas mov fsts rcr dec dec inc jg movsb mov cmp insl lret adc mov test test ljmp lods xchg lods (bad) aas (bad) in xlat imul mov adcl jg je xlat adc pop inc or inc mov jg push int divl pop aas in adc clc aad push insb pop inc sbb adc shr dec pop mov jmp (bad) cmc jg xor jg imul in cwtl xor lods out popa stos insl (bad) jg rorb int3 cmc loopne xor pop inc sub pop mov shlb pusha int cltd xchg roll scas popf in mov jnp sti gs (bad) adc (bad) or add inc jg sub cmp lret fisttpl popa imul or and jg inc dec popa cmpl jns mov (bad) mov (bad) clc fidivr cmc int dec stc and jg dec rcll pop xor mov sub aas scas shlb pop sub dec mov jg adc inc xchg icebp lea dec jg test jg inc xchg mov in mov adc daa aas (bad) ja arpl dec outsl fdivrl inc pop das cmp ret sti jl inc pop bound (bad) jbe test mov lods mov mov cmp mov inc stos jg popf ljmp jmp cmc into mov inc jg,pn inc outsl in pop and jg push push adc daa cmc pop push sbb fwait sbb pop adc push and jg inc add pushf lock pop int xchg mull push mov std mov jb stos add mov fcmovne sahf fistp sti dec xchg iret je or lea test cmp sub jg mov push jo fcomps enter inc or dec (bad) jl mov xor jg lcall jg xchg xchg jg fnstcw push mov sahf iret adc jae fbld mov jbe scas xchg pop inc mov scas push inc and mov lret insb inc dec lcall push inc jp cmp les add dec xchg xchg frstor jg sarl sub add mov push hlt pop movsb inc dec xchg shlb push mov test ljmp lods call sbb mov jg xor data16 (bad) stos push jg xor test cmpsl sbb add cltd arpl aas mov and cmp aaa jbe ljmp movsb xchg jne mov leave arpl pop mov jg sub in add stos fs inc aas cmp add cmp inc xchg aas sub leave xchg xlat inc jne jg mov adc decb clc bound cmp add or (bad) push mov ret mov mov fistpll jle inc and jae xlat lods subl mov cmp inc cmpsb lahf cmp mov mov jg push icebp hlt adc jg mov pop sbb ljmp loope jg (bad) pushl mov pop sbb arpl inc fstpt inc jmp int3 sbb jg xor inc add mov jg test jg jae ja loope push jno loopne scas loop das mov sbb jb xbegin fstps es adc outsl xor sarb mov daa lods daa out cld ret pop rorl jns int3 push rcll scas jae sahf cmpl dec fmull int jg addl sub sahf mov jg sbb out mov test shrb outsl arpl mov ds jg xchg fstps dec add add pop (bad) mov xchg aas movsb xlat add pop inc push jg jb jo es (bad) cmp pop test jg push jb sbb (bad) bound popa mov ficomp push cmp jg stos sub ljmp xchg and mov test dec inc pop (bad) roll pop dec (bad) jg pop cmpsb loope (bad) fsubrl jecxz mulb andb push imul add jp and fbstp mov jmp imul jmp cmp scas jg lahf icebp aam or inc sti sti and lds jne xor mov ret sbb jo pop xor dec xor xor jg cld add aaa xor mov xchg inc scas xlat pop sbb push (bad) push pop cmp push ja sub clc fbstp xchg dec mov jns fisubl jg cmp pop jg (bad) iret std jmp adc adc into sub js je repnz aad lret (bad) jecxz popf adc sub and inc cmp pop inc scas cmpsb fnstcw mov insb lahf aas les dec (bad) lret cmp mov fucom fistp pop int3 xchg test push and jg jmp pop lods mov cmp rorb int3 pop in test (bad) ja sub jb lahf into xchg push nop ds cmp jle push jg (bad) fstp shll fwait sbb dec aaa xchg call jg xchg push js sbb fsubr and repnz jae rcr dec out push push push inc jg xor std out hlt cmp mov lret push fmuls mov xlat jne add add xchg movq das push mov push out mov loope jae cmp jg addr16 push adc test jg test sub mov fwait xor notl cli jg popa mov mov sub mov fdivrs out mov pop jg xchg or jno and aaa inc jmp jg dec in insl xor out or mov fidivrl jg adc loopne jg lock sti inc js dec jg in rorl jg mov aam cmp in xchg inc xchg inc jno mov mov jg mov hlt int3 jne les cmpsb dec js push mov imul adc lahf leave and mull and pop loop cmc jo mov inc mov and push jg fisubrl xor jg jne scas push xor ljmp sub sub int3 mov push add pop ret mov scas fdivrl fsts out inc cmp sti jnp inc insl mov mov pop pop xchg jne mov in pop cli jg es (bad) shr jnp sbb sarb daa call icebp jle es fistl cli mov push test sub inc jg xchg rorl jmp inc adc out xchg lret in js mov fdivrl hlt call int std cwtl fsubrs adc roll mov or (bad) in jg std int mov mov outsl mov adc sub ficomp in loopne pushf mov stos inc cmpb add xor insb mov cmp lods pop xchg dec jg cli inc fldl cltd jg jne shlb pushf fisubr mov sub jg push dec jge xlat rclb dec cmpsl cld sub mov mov sbb jg ficompl mov aas add cmp jbe rorl fiaddl cwtl shlb jg pop outsb push mov hlt icebp jg mov mov rorl lahf cmp pusha js push mull and leave jnp mov or (bad) sti cmp fldt sarb std sbb lahf cld sbb sets (bad) jg sahf fisubr mov call dec sbb ficoml xor es dec mull lea imull aas sub cmpsl (bad) mov movsl jae xor into adc aam (bad) jecxz ret (bad) jmp mov cmp mov xor xchg push jg sbb jb jae jg push xor insl mov xlat fwait jmp jne or mov mov xchg pop or pop add mov outsl pop pusha sbb sub or pushf or hlt or repz cmp pop adcl iret loope shrd jg lret xor aaa mov adc and idivl adc dec pop movb mov dec shr loopne ljmp sahf ss jg xchg mov in scas decb ret fnstenv aam lds push repz jg jb sarl dec sbb je xorb add insl movsl xchg rolb bound lods xor inc sarb inc gs outsb rol xchg xor inc pop mov fisubr (bad) jg das cmp jg ljmp popa jmp cmp xlat adc nop xorl sub dec sti loope add lea mov mov cltd push and adc dec scas fidivr ja jg aas push xchg (bad) (bad) dec pop xor mov jae outsb icebp fldenv adc ja out cmp sti adc adc mov mov mov imul xchg mov int3 fildl push mov mov and inc jbe (bad) scas cmpsb push lahf test push aad sub aam jg iret aas dec cmp mov ret jg lahf and jg aas mov mov std jg mov fsub jg stc stos sahf sbb inc mov mov cs jle pop add inc mov mov inc dec notl jns xchg imul mov lds push xchg push mov xor inc xor push stc jg sbb jg repz or dec (bad) (bad) adc fdivs sbb mov repnz inc stos mov push lock jo jne sti cltd push jl cli dec je data16 cmp sub push push adc add push jg clc sbb mov mov inc aam sub lcall imul push scas outsb (bad) jg rcl rcr bound arpl mov cmp mov sbb and dec in insb fmuls xchg mov dec stos mov mov sbb push movsb ret mov xor mov mov push mov and and push mov call shrl cmp adc (bad) inc push jae push push jg fdivrl movsb jg sbbl jg leave jle sub pop aas mov (bad) repz fwait dec pop pop (bad) in and ficompl pop ret gs lahf movsb jg push inc mov aas scas in aas push iret pop jno popf leave dec adc xchg xchg cwtl lods sbb test add mov lods outsl dec mov jbe push inc jg mov fwait jg call mov loopne cmc dec (bad) mov data16 jae mov jg out std in sbb mov sbbb lock jg mov dec xlat aad out rorl lcall mov add jg nop addr16 (bad) jg lods loopne fs xor push inc imul out mov pop sbb lock mov ljmp push adc test or xchg xor cltd das cmpsb jp movsb inc jo jg jle sub (bad) jg fadd dec inc cmpb sbb imul mov (bad) mov adc xchg mov sti dec add idivl (bad) mov push and scas iret dec pop leave out pop push or lods and ss adc mov adc (bad) insb das and in mov scas jg and cli out inc insl mov adc mov movsl mov insb cmp rcr (bad) dec inc sahf mov js je jg ljmp stos jmp dec int jg adc imul addb sti loope,pt sub xchg cmp jg cmp out jg popl stos imul aas and pop adc dec pop mov sub pop jl jg outsb push imul cmp mov xchg data16 movsl add mov negl (bad) jmp nop aas mov mov inc mov mov inc out jae cmp aaa aad jnp jg test outsb jno adc sets fs repnz insl test scas sbb mov fcoms mov ja cmp sbb aam cld add or jecxz rcrb scas insb or adc jg sete mov lahf pop cs enter jg ss scas inc loopne movsb jg sub fisubr xor pop jnp jg pop test push adc jo loop cli inc push hlt aas adc mov add inc inc add fisttpll cmp adc xchg fsub sbb nop jl sbb inc test jle mov nop jg pop ss sub add mov mov cmpsl lea cwtl pop push jg push fs sbb jg jl add sub jmp popa jb aam push sbb push addr16 movsl lahf adc dec in sub push add xor test pop jg call sbb and pop popf adcb add loopnew (bad) ja pop mov lahf (bad) into jg cmp lock mov push mov inc les jno add pop stos sub ret push fs mov dec sahf lahf daa push jg mov or jg cmp das jg insl sarl mov pop inc rol push jg jno push je fcmove jg adc stos (bad) iret cmpsl push jg cli dec sbb jg les add mov and push arpl jg sub sbb fwait adc (bad) push mov add icebp stc hlt xor pop loop cmpsb and fwait jnp,pn jg (bad) xor daa pop jge xlat (bad) dec mov lods test mov dec jo adc pop jge mov cmpsb dec rcrl ret xor xor out sbb cs imul pop (bad) lock mov movsl pop clc cli adc in jmp cmp leave jg lods cmp inc test xchg shl les inc pop xchg jns,pn aas inc cmp lahf sub pop addr16 js movsl sbb jne xor fisubl out xor jg jbe iret push test mull outsl lods or mov xlat sub sub push aad xchg mov xchg pop insb popa neg sti pop and sbb cli pop fildl cmpsl lahf pop jne lcall pop lret sbb or adc inc into lock cmp push sub inc jg cmp mov add aad sub aaa inc fbld cmp arpl push pop or xchg mov cld mov cmp sbb inc push fdivrs dec test js sarb dec jg test mov jg sub into mov push push movsb inc test les sub sbb jg sarb (bad) mov aaa cmp test pop loop jmp mov sahf xor xchg xor pop (bad) stc inc mov loope jg add push dec mov jg jecxz mov jg std sti cmp push lods jg mov adc inc mov pop rcr test mov and jg or inc sub arpl test insl stos xchg mov cmp jg int icebp sub jns outsb add movsb jg sbb pusha jb pop inc jg cmp sub loop fcomps bound aas jle sahf ljmp flds jp mov les sub sarb addr16 das xchg jns xchg or xchg and cs in inc les inc mov int xchg (bad) fiadd fcompl leave cltd jg call xchg add scas mov jns aad inc addr16 cmp inc jg imul mov ret cmp lods rcll popf js inc test or int3 popa cmp pusha iret mov stos sub das adc cmpsb jae out push inc pop cmpsl mov mov pop sbb push push aam mov sahf jg (bad) fisubr repz cld (bad) jg stc test xchg les sub cltd leave into adc enter (bad) push mov xchg aas sbb nop jg push test lock mov cmp sti push xchg push stc cmpsb pop or xchg lret xchg pushf (bad) std insl jbe jg push into stos pushl mov jno jg jle je jne lock (bad) xchg sub or pop cmpl sbb js lds mov arpl rorb bound mov lds inc ret dec bound inc test stc or fsubs je sar mov or mov inc jg push xchg lea push enter pop es xchg sar sbb mov dec ds notl lahf pop jnp loope adc sbb xchg mov adc outsl sub push jb dec lds (bad) jg sub add and sub sar inc addr16 jmp pop stos mov popf push pushf sub in addr16 mov and jg or rol mov faddl jns stos cmp dec jp inc add movsl in fwait inc jg mov pop je subl xor mov loop pop inc inc dec sub jg adc push mov and punpcklbw popa mov mov sub xchg (bad) mov pop outsl inc bnd push xchg mov dec dec gs xchg and push mov les xchg fadds jp sub jg push fnsave inc mov sub xor popa jg ds xchg xchg inc add mov and es pop jg lret (bad) scas rorb (bad) test xchg pop orl inc ret jg and mov and cmp and xlat stos pop daa sub in fisttp add insb subl cltd jg jl dec sub lea mov xchg gs jge xchg jle inc xor jg and and js xchg and adcl hlt sub pop jg cmp aam and sbb push jg cmp mov test pop faddl mov dec dec pop imul jg into mov sbb pushf loopne pop or mov negb sbb and lret dec scas call loope fimul enter sbb xchg lret repnz (bad) ja and sti sbb jns adc dec inc push fwait ds ss or out icebp push sti dec inc cwtl lods addr16 mov mov xchg push (bad) xchg dec in pushf sbb sarl mov or movd push mov cli mov xor mov and push out lahf sti xlat jbe divb inc (bad) cmp add out sbb cmp xor nop mov aaa cmpl shll push push pushf inc xor or ret insl push pop test jo lds stos jecxz add pop jg pop ljmp (bad) mov test cmpsl out jbe scas sub mov cmp and pop (bad) (bad) inc cmp out jg inc xor inc adc or jae lods les fimull icebp sahf ds or jg and lahf pop push jecxz icebp (bad) in jg xchg js fisubl jg mov mov jg test add icebp xchg dec stos or xor inc leave fnstsw jg dec xchg inc (bad) in adc jg rorl stos pop rcl hlt leave (bad) mov jg adc sbb fbstp (bad) mov fnstcw mov lods enter jg push bound hlt mov adc inc mov jg inc jbe xchg xchg fldenv and je cmp jne jg out hlt inc push into xchg ret mov out jae dec sbb rcr sub fwait mov push fs dec cmpsl pop jg leave ds ljmp sti stc cmp test ficompl outsb xchg or push insl jno mov scas mov mov cmp add subl jne loope xchg fmuls mov push push push push cmp aas scas adc pop push mov jne jg lods cld imul cmovo and push mov (bad) mov sti sbb jmp out sub adc push andl divb scas mov jae fstps mov idivl push mov jg and mulb or lds jno mov ljmp sarb mov enter pushf (bad) pop mov fs nop icebp lods jg notb loope dec ss aaa mov les data16 push ss jg shrl xor adc cmp mov or jno (bad) popf jecxz stc (bad) jg xchg lahf push sub and add jg test dec mov pop clc sbb mov pusha jnp popf push cmp push fistl aas pop daa or jge xchg pop lret lea jmp push rorl lcall dec mov imul push mov mov push and ss push fiadd push push mov popa jg orl jg sub xor jg out lret sub (bad) or jo rcrl inc ret fbstp jns xor pop mov movsb incb out popf cmp or sub jbe jg xlat sub fdivrs into inc out jnp xor cmp xor movsb inc push leave jg mov hlt push mov dec pop stc pop push (bad) push ret lret fnsave push cmp jl out and sbb cmpsb cmp fcoml nop dec jg sbbb mov mov sbb scas mov adc xor test cmpsb js nop lcall push imul jg out in ds push mov daa fldl mov lods jnp sahf mov mov jae dec inc sbb mov push pusha cmp sbb imul imul movsb inc jnp mov ss dec lret mov rcll roll (bad) mov xchg vmovdqu negl jg mov cmc push and mov inc inc js dec dec outsl sahf cmp icebp lds subl aaa jae je call inc xchg inc std jg fisttpl call je (bad) fcoms addr16 cltd mov pop (bad) movsl outsb imul jecxz xchg dec jmp rorb pop sub inc lcall arpl pop sbb add push cmpsl loope dec inc orl jno decb out xchg mov mov jns cwtl stos pop cmp pusha pusha jg sbb push stos sbb xor or rcl dec fsubr and jg mov cltd scas repnz sti or call xor (bad) jg stos lret xchg dec jg fcmovb sbb pop fsubrs and (bad) mov fstpt push insb cwtl idivl dec xlat pusha or jg in imul mov mov mov xor jg xchg ss add jg in push sarl test and dec nop jg frstor mov sti sbb aas fmuls imul jg jge lret sub iret rcrb stos jbe das out push add out and and fwait sbb push shrl je mov push push aad jg (bad) jnp out jp jg out inc leave loopne (bad) mov js inc sub mov (bad) cmp jle aas (bad) into jg push aaa (bad) dec call jg add popa push aas mov mov dec dec sub inc xchg inc sub dec fcoms and jg jmp xchg jg sub dec mov push sti ret adc sbb out test pop in jecxz popa jg push (bad) push and pop jb sbb icebp les sbb jg leave push mov cli (bad) nop inc int3 jg xchg in jg or jecxz subl js stc lahf mov cmp push clc testl sbb aas xor shll pop orb jg or fcoml and pop jnp mov js movsb or loope cmp dec sbb mov pop in xor mov push iret test jae sti ror jg xchg roll outsl adc fistpll insb shrb lods dec dec insl adc cld mov jg leave xchg xchg sarb pop push jae add jg popl mov inc outsl jg inc es push int jg lods repz fbstp jecxz ds loopne jg ja (bad) inc lret scas call incb lcall mov jg and call mov adc cmp insb pop adc sar nop pop sub mov leave jge jg xor xchg sbb jne clc dec aas scas cmpsb inc test jge dec je jg pushf ljmp jo arpl or jg mov lods test xchg sub (bad) xchg call xor in cmpsb mov fs iret (bad) mov xor stos lods mov jg fdecstp or dec mov call cli mov sub jge or jg xor xchg aaa mov jne adc call jle jg adc pop shll jg cmp cld adc push rcrl lods mov sbb mov dec jg out dec cld imul loopne mov pop jg or lret jge jg call imul mov jg push lea jg adc pushf clc mov sti push xor sub dec push (bad) jg in imul adc and cmp mov fsub clc pop mov jb pusha pop inc lds pop shr jg repz cmpsb mov leave jg addr16 insl and in sti mov out lea arpl and inc mov ds arpl jg out adc adc test push fcoms sub push sti xor call pop mov scas popa test fcmove sbb movsb mov push mov jne jg push fs pop push jg jae hlt enter dec push shrl or out pop add inc lods cmp subb (bad) hlt sub (bad) out jmp jnp jg push or scas push jmp in aas fidivrl dec jbe (bad) mov mov stos dec pop mov adc sbb arpl repnz inc push push jno (bad) ja cmp mov pop rorl out test push mov jg add lds mov mul jnp fidivrl pop adc jg jmp dec repz mov sub xchg jg dec ret jnp add imul sbb inc sti mov cmpsb repnz into loopne test sbb lods icebp mov dec mov ja inc (bad) push je test lret and xorb sti mov cmp loope mov sub push xor mov mov mov out pop rorb push mov dec push pop int cmp out outsb pop loopw insl (bad) fnstsw sbb outsl in (bad) sti mov stos fcompl popa (bad) mov xchg mov arpl dec push or in je xor xor mov dec cmp sbb insl push aad out sub xchg jg and jb fwait sti out aad jg mov inc out mov (bad) cmovo outsl sbb jg mov jle jg add adc adcb icebp inc test aas imul xlat jg push testl jg and push adc movsl cmovbe pop jg (bad) out or xor jg push ss lea push xor cmc aad mov or movsl jg cltd je push scas adc lea sbb mov addr16 insl sub fistpl shll pop jg jb add out dec int3 or push js fimull cmp outsb jg sbb add sub pop movsl ret mov xor xor lahf inc dec mov (bad) jnp pop jno jg (bad) sarb push es jg ss andl xchg xchg mov fstpt cli dec pop es (bad) test imul bnd inc cmpxchg icebp mov outsl cmp jl jno mov mov mov sub inc and pop (bad) popa jg test jne jle mov in xor xchg insl daa jg push push test xlat test mov xchg sub idivl pop subb leave loope fistpll jb (bad) cmp ds jg out addr16 inc cmp rol fs pushf push or imull in or or mov jg fdivrs and jnp pop add jg pusha dec sbb mov popf cmc dec xor dec cmpsl xlat cltd xorl lods imul cmc negl inc shll adc mov inc push cld push push mov sahf jg lea (bad) jg cmp (bad) mov push mov cs xchg ds jae inc inc jg in fs mov cmp mov push jge add jg mov mov stos les lds pop mov or das mov mov addl enter rorl clc push in (bad) lea sbb add inc xchg addr16 add lock push lds jg push addr16 pop sbb scas jg add jo ja lods lea mov frstor fs add aas jae vpcmpeqw jg push inc xchg xchg cli push xor lahf inc dec mov mov lods mov add leave out insl push jg sub jno dec and aam mov push int3 dec inc movsb and test stos outsl lret sub fidivr test in inc pop (bad) int3 pop (bad) jne mov mov jg insl stos (bad) xor test test imul fimul jo and int insl fidivl (bad) sub jg mov daa jp insb outsb aas in lea sub inc scas dec add and (bad) addr16 outsl xorl sarl add sarb inc mov lods aaa pop (bad) mov push inc (bad) stc dec mov mov out jg add mov jns xor push cmp call jl and ret jg cmc sbb loope cmp jg jp or dec xor lcall aas stos or data16 insl dec and aas add ss in pop pop sub nop xlat dec les jg dec cmpsb clc aas adc gs sub xor jle outsl pop dec popa fnstenv cmp lahf (bad) repnz xchg inc popf aam jg call mov mov dec fcomip mov mov scas inc push test pop dec fistl mov mov sub inc push popa jg stos mov jp fcompl cmp mov mov push mov outsb jmp or dec pop sub lods in out or xchg and sbb sub test add in sbb jp mov lock push ljmp pop out in (bad) adc scas loopne jo fstpt xor stos add test int3 mov fmuls mov dec sub mov jg out push mov jg imulb psllq ret in sbb pop mov or xchg mov lcall dec mov inc dec ss jg sub add sub mov jg cmc mov aam inc jo sub adc jb roll xchg aad movsb mov cmp push push test mov sti scas (bad) mov outsl push jmp xchg sbb outsl push dec ja in dec jg outsb jle jecxz mov jno shll jg leave jns sub fwait pop mov xchg or in mov lret inc (bad) mov cmp jnp mov pop in dec push fmuls sub test jg lahf pop pop xchg dec ret add and xacquire add jg xor movsb repz mov adc add lock sbb js jo jg hlt xor pop cmp jg xchg fdivl push ficoml and pushf aas nop or inc mov jne sub call dec fidivr jecxz dec jnp mov out jg mov aas xchg lock pop mov lods inc sub jg test sub popa adc dec ja jg and and inc ljmp lret xlat push push out lret adc pop pop (bad) dec xorl (bad) (bad) sar test fxch cmp sbb lds lret pop stc mov ss nop scas fistl push pop daa adc lret cmpb inc xor inc cmp test (bad) or jg jl xlat add jg js lds sarb out test (bad) hlt stc dec popw jg push enter xchg mov add ljmp jle pop adc xchg pop cmp js xor dec in arpl int3 xchg sub jl pop call jge xor pop inc paddsb pop cmpsb jg rcll push cmp sahf call xchg ds es inc inc xchg jo sub (bad) ljmp push jle add jg adc mov ja enter jg jne (bad) in scas jg sbb jb cmpsb jg out lock ror aas xchg movsb mov mov sahf mov pop (bad) lds notl out (bad) stos fcmovnu push (bad) cmp aam mov cmp outsl orl push out jae dec sbb sub or dec in mov or mov xchg inc scas jg imul mov shll loopne (bad) outsl jg sub addr16 xchg push scas sbb imul jg inc lea push outsl movsb out pop addr16 mov fidivrl push stos dec inc lcall sarb jae (bad) pop adc lea jp xchg sbb int mov cmpsb sub fbstp leave cwtl and mov pop rcrl jg out or in xchg cmp iret sub pop pop push mov mov mulb xor cld push jmp pop jge mov clc xchg mov js mov dec push inc push push add jg mov (bad) dec cmp dec pop mov cld (bad) pop stos loope inc jg rorb sbb fbld es jae insl outsl jb mov xor bound cmpb call jg into xlat cmp sbbb cmp test pop mov (bad) pop jg mov fild pop daa cmp xchg imul test jne xor fidiv jg xchg js fcom dec cmpsl jg push xchg loope mov jb stos cmpsb cld sub stc popf mov jg mov sub cwtl loope mov push jmp hlt pop pop das jmp pop scas sub pop pop jae inc ljmp pminsw (bad) loope adc movsb (bad) incl jle xchg fiaddl sub mov cmp stos jg pop push jno das lea inc dec fidivl mov sbb sarl push jg int3 xor repnz pop sbb rclb jp jg and cli xchg int3 cmc sti fsts cltd pop xchg mov and fwait in imul inc das jg lods dec and out fidivr pop outsl sbb jg sbb icebp jbe (bad) imul addl jg daa loope imul jg in pop and mov and push inc sub dec push fistp add cmp outsb jg lock sub sub add mov xchg hlt imul cmp bound stos push xor scas xadd aas lahf cmp mov inc jg xchg dec fildll add mov pop inc jns jg shrl push ret jg cmp pop and imul mov xchg mov ljmp fstpt add cmp popf or push icebp sub mov jnp jg mov loopne jg ret dec jp push jg imul add cmp and jae aas test push shr inc mov jg mov jo push idivb and inc jge xor jg jmp ja dec pop push jno cmc pop add mov pop adc mov call and pop aas push add (bad) sbb js hlt pop dec or pop and inc jg mov test outsl loop mov fisubrl and test (bad) call xchg in (bad) pop aas push add ds dec fbstp jg in je std orl icebp cmp inc decb adc dec push test pop int3 pop daa aas mov mov in dec pop ljmp add xor sub mov pop or xor cmp jg movsb dec xchg push lcall rclb jg lods jle push aad aam fildll jb mov and data16 loope,pt inc lret out outsl dec inc add and arpl das cs jae xlat jg dec mov mov inc mov xchg pop ret test pop xchg sbb outsl cmp jg add aad mov pop sub lods das shlb popf (bad) adc es lahf hlt ja pop or sbb out mov mov fwait cmp test jno in (bad) lahf dec sti shr ja jl xor ds push popf into push pop inc frstor fnstcw add sbb jg pusha cmc ljmp roll xor ja xchg mov push out fwait (bad) jg cmp cmp jg and ja js push insb pop jle scas fbstp or jge and divb mov sub jecxz cmp out jg or mov pop clc stc addr16 xor adc jle lods sahf pop bnd push popa or stc sub lds pop divb push or adcb lods adc (bad) cltd call push or incb jns stos dec jg mov popa in cmp push sub jg lea movsb push mov jp jo push push stos jg fisubr jae fdivrs dec push insl test into sahf ficompl sub adc ds bound ret jg icebp xchg jl aam imul fwait enter addl cmp flds push jg and shlb out loop cmpsl lret jg mov mov loop aas push rorb into push jg push loopne loope shll sbb inc dec or mov push (bad) fcomps sti pushf (bad) push sbb xor inc dec test xchg repnz icebp jo adc sub jnp cmp iret mov bound jg cli jbe idivb mov (bad) repz inc mov fldenv jns pop fsubr icebp dec add popa popf add pop lea xchg dec push mov in mov loope addr16 sbb ss ret lret jg jno dec negl inc lret xchg xchg lea (bad) out (bad) cmp (bad) lods rol xchg inc xor ret cmp add lret dec movsb push mov cmp jg sub sbb pop test enter dec lret jg cmp or mov fbld fsubs push pop rdtsc mov jg jo ds pop (bad) imul push aaa mov fchs pop scas push (bad) xor (bad) loop sarl arpl int push loopne aad mov xor cmp xchg push mov aas in (bad) stc mov pop inc arpl jg repnz hlt js fistpll cs jle repz leave int3 jg inc sbb es add adc in (bad) add sti dec xor mov int3 xchg cmc cs inc ljmp test dec dec add sbb in cmp jg ret add sub jge inc icebp cmc das jg cmp mov (bad) fldcw pushf pop xor fdivrl ficomp (bad) jg mov push test sar adc in jg fld mov mov aas xor sbb push sub loope pop and imul es cmpsl xorb jg dec and push call sub dec dec fnstenv lods mov imul (bad) jg pop and jne xchg jle lahf mov bound jbe in jg pop push jb push clc or inc mov lods lock push mov jno inc loopne repz stos push ret sub call jbe pop cmp jg fsubrl xor jg std cmpb dec scas sub hlt scas jecxz add jns loope (bad) mov push dec sub inc (bad) mov mov enter mov jg movsb out mov aas sbb rcrb inc push jg clc mov sub aad jg dec out add in dec dec ret pop inc lcall xor je jg add pop out dec pop push ffree sahf xchg jbe jg nop jle lods and jg jp insl or xor fs add jmp pop jmp xchg sub mov and xchg pop out ret cli mov sub addr16 (bad) rolb (bad) jg xchg and pop aas popa data16 int3 jp dec in js je push mov mov xchg cmp jg inc lods adc ret rcrb jl (bad) push test pop lea sub testl and mov jg in xchg cmpsl out xchg pop lcall imul xchg fbld jg push add pop jg sub daa fldl addl cs cmpsl arpl cmp out push test test push jg ret dec and jbe outsb inc inc ret add adc add pop mov inc ss sub mov sbb push add icebp jg adc test das fcomi cmpsl mov into xchg and ss lcall sub mov pop lret out add mov pop dec push sub aas mov cmpsl in pop jns adc jg cld inc addr16 lds icebp aas scas mov or mov mov ret cmp arpl xchg fcmovbe mov int (bad) mov aaa sahf adc dec stos jg popf mov stc js cld lds cmp jg inc loop mov fcompl jg fcmovnu cmp into clc repz fwait add aas bnd int3 push loopne jg fisubr sub imul fbstp sbb sub jg cmp jbe aas jmp gs dec adc orb stos mov repz mov xor pop repnz pop xchg mov subl jg xor xchg mov outsl (bad) (bad) js xlat imul cltd out ss les adc (bad) cmpsl popf dec cltd xlat lds sahf add arpl jg xchg xor lret mov or xchg rcll mov stc add loope sbb push add jl lret scas imul mov pop pop mov cmp mov movsb outsl add push pop ret icebp jg pop or xchg sti push dec movsb adc adcl (bad) aam add (bad) rcrl sbb xor (bad) cmp mov (bad) mov mov lahf jg xorl cmp xor insl jg fistpll push sbb loop lds pop pop sbb lods adc popf ret jne jg stos pop add leave pop adc push (bad) pop pusha inc mov aaa (bad) xchg stc lea push jae sub aas cs jp adc pop dec (bad) mov sub int3 push shl pop cli cmpl movsl movsb scas decl jl mov cmpsl mov sub in cmp inc push add mov pop xlat pop pop and mov mov add xor mov scas leave in lods pop and push gs cmp inc sbb sub mov stos jno or mov jg mov add les dec int3 cli dec sub dec movsb xor ret pop fildl rol inc addr16 mov push cmpl into jns jg push mov jg xor sahf icebp mov mov pop pop clc jne pushf jg mov mov mov mov fbstp xchg das pop aas or out jecxz ja lcall test push cmp pop xor loop idivl sahf mov sbb inc psrlq or jg sub or pop jg and ret pusha mov int3 jg sub arpl sub inc shl sahf enter pop jnp cs rcr test pop icebp dec jge loop jl stos jle xchg dec ds out das fs pop pop sbbb xchg push xchg inc sbb stc or popa jg mov jne adc es lea mov pop jns (bad) sti and iret jg (bad) sbb ljmp cmp sub push fldcw test insl mov sub mov sti test cmpsl call idiv int3 test popf loop cmpsb dec das add ret jg,pn std cld icebp mov and pop adc jg outsb push dec dec (bad) stos jg or call and jg fsubp dec sbb dec jbe inc (bad) pushf inc jg pop lcall or les movsl mov jp mov arpl mov icebp outsb out cs aaa in adc jg mov pop adc mov jp imul es mov pop loopw les jg clc xchg lds fnstsw stc fcompl jg push mov dec jg jo popf cwtl lret cmp dec push pop xor aad jp cmp insl lods int xlat shrb xchg inc jg pusha sarb sub jno nop pop inc mov or adc cmp mov pop je roll insl push mov dec xor mov fs aaa lods outsl jle push add nop push push cmp adc add addr16 bound or int3 popa cmp lods jg aas (bad) sahf dec ljmp or out push adc (bad) js mov dec sub push xor int (bad) (bad) loope add sub jg negl dec loop mov sbb inc scas mov push jg cmpsb jl xor loopne jg sbb adc mov or cmp cmp pop jge das cmp jg xchg out push stos jno pop pop rcll mov mov mov cmp inc xchg frstor lods outsl jg and scas xchg jo mov sub orl sub xchg (bad) xor loopne dec jg mov sarl jg xchg xorl out cli jnp xlat mov or jb js jg mov mov jg mov adc jno (bad) xchg pop and mov ret xlat mov jbe stos cmpsb jle fwait jg push mov addl xor jmp mov mov mov cmpsl pop adc loop jg xchg xchg ja pushf fcmovu sar (bad) push movsl in push pusha pop jle mov jb xchg sarl jg movb mov dec inc mov fstps and pop jmp adc mov dec das mov jg add add adc push mov es sti xor negl stos scas mov call das xchg jg,pn or jmp lds int3 aam lea fcmovnbe dec sbb jg insl cmp jno jns inc jne xchg or jno loopne movsb les (bad) mov pop jae and xchg mov mov sub jg stc movsl xchg jns mov mov sbb cmc and roll mov cmp pop dec mov xchg inc mov test add inc loope movsb jg call mov dec mov jg inc pop dec cmp enter pop hlt pop mov sub push push mov test sub jg jo mov cli pushf decb add sbb jns push lods in jg cmp sarl and shr dec add push out xor dec pop or push outsb test dec test mov xor and pop jl adc dec jg push push dec dec shr mov inc cmp lahf scas add test xchg jb scas test jp add lock add dec sbb inc pop inc test mov jg rclb fidivrl cmp pop mov dec jmp lcall push dec rolb jl icebp mov and xor lahf xor test cmpsl push fsubs or xchg mov mov stc (bad) dec xor (bad) xor outsl pop jbe mov cmc ret inc xchg push flds test mov push les adc and mov or call add mov or jg dec pop shlb aas inc xor incb pop mov insb rorl ret dec std jo sub movsb jg scas roll jg pushf or xchg iret or add pop jb sar decb add jbe mov pop jg (bad) mov dec (bad) cmp inc xor imul jnp xorl mov imull (bad) test aaa jnp inc neg jg addb cltd fsubrp jg push lahf outsb sahf pop adc push mov ficompl push fidivr int3 mov jb jg cltd inc xchg pop ret stos mov enter jae divb movsl bound stos lret icebp adc add xchg dec mov aas pusha mov and mov inc xlat loop (bad) cmp inc out test std mov pop xchg dec movsb inc mov mov in notb aam jg pusha (bad) cwtl imul cmc pop inc (bad) mov push stos ds imul outsb cmp xor sbb add push scas jp daa jg jb lret jl jg or mov dec (bad) aaa jg cmpsb cmp mov mov mov cmp mov add ficom (bad) xchg mov mov mov sahf mov outsb mov push jg,pt ret adc imul aas push jle cs xchg jg int3 call adc movsb insl aas push js setno mov push mov es mov aas inc les ret test and lea dec adc pop (bad) or outsl fstl loopne mov jg test dec aas jmp das cmp jnp push int3 inc mov mov mov sbbl add jg pop test lcall std fdivp pop mov dec jg (bad) ss or mov jo,pt adc repz sbb or mov imulb jg xor ljmp pop mov pusha sub jg int3 je in rolb push mov hlt loope scas jg cmp lods or cmp or sti imul dec scas stos cmp sti iret lret scas push test dec jg fiaddl js mov hlt (bad) mov or xchg cmpsb jg dec ret shrb aad cmp mov jo mov dec pop jg repz insb icebp enter sub lret cmp stos scas jg cmp (bad) jae xchg inc xchg add jne arpl addl xor pop je scas popf xchg dec fadd repnz or fnstcw cmpsb pop dec sbbb aas jg mov fldl js mov imul sub add (bad) mov icebp pop lret jge sub push lea jg fdivrp cmp pusha sbb outsl or cmp xor mov jno pop mov cmp shrb lcall and jns ljmp dec lret stos (bad) out mov adc inc icebp sbb jg push inc loope xor test int into movsl and ss or mov pop outsl cwtl pop mov inc push adc lahf inc jnp jp jle imul hlt mov adc jg cwtl jo lret sub pop mov ja out cmpsb dec sbb pusha sahf lahf into mov mov mov mov fsubrl xchg mov scas js push jae roll jg and in inc fsub dec loopne jg push arpl fstl dec jg in scas pop lea stos in jno out mov jns arpl inc scas jo movups nop int3 pop sub scas inc jg gs fild pop cmpsb add mov lahf mov clc cmp push cwtl rolb enter in int loop push mov movsb stc add rolb outsb jae sub pop loope popa stc pop inc jg (bad) icebp lcall or adc mov add jg ret sahf or push cld mov and inc gs aaa les sbb in out jg mov (bad) xor or enter pop out sarb mov je aas mov jg add inc mov out mov lock xchg jg push or mov pop jle call and mov pop cmovns pushl mov dec ja imul sbb into jg inc xor jg pop cmp add sbb hlt dec out js andl pop fwait sub push aad ret xchg lea push sbb pop (bad) jno,pt cltd in out pop jo add cmpsl xor into jp bnd push push mov jg sub xorb cmpsb and jb jbe rol lret jg test fnsave xlat repnz adc add or adc inc dec sbb in repz push xor add lock pop jge xor daa jo jg sub sbb inc jg xor adc out jno lds dec xchg (bad) loop insl ds and sbb lea or (bad) add jne aam jg fs xor jg repnz fmull stos lea and scas fisub jg mov dec sub imul shll out arpl sbb ja mov stos push cld jg sahf inc or and jg imul pop jg jo out js ljmp mov popa add out mov cmp clc addr16 aas or mov push xchg dec dec adc add push xor fcoml add sub ss inc stos jg ret roll push jg sbbl fs imul pop lea jg and shrl xor mov outsl sbb cmp mov mov jbe insl xor jecxz jg fsub fwait push shrb mov push xor mov inc xchg mov cltd call sbb repnz cwtl outsl and jg dec es jmp (bad) lahf mov xchg mov pop inc add push addr16 push leave jg cmp add jg pop inc lods aam lcall push adc (bad) dec mov fwait sarl xor lahf and jb adc inc into aas push pop xor jg cmpsb pushf ss jo xchg ret and inc add inc lods int and jo outsl jns jg out int3 aad or push loop xchg pop icebp fdivs movsl jg xor test in cwtl leave cli cmpl out dec jno jg mov ss loop and jg les repz add inc pop jg sub add jl dec sub jg and mov jg or arpl xchg and pop stc notl and pop push xchg add mov test ret mov mov sti adc xchg add lcall pop sbb cmpb jno icebp outsb out jae cld jg inc sbbl adc sub xchg test adc mov jle mov push shrb jg (bad) cmp (bad) imul adc jg xchg das inc jne push call stos ja inc shl jg loop in cmp sub xlat push sahf loopne mov mov enter mov jo sbb add xchg jg mov push lods sahf ficomp jg mov mov and test xchg aaa xchg (bad) das mov dec add jg sbb sbb inc pop push into dec pop lea lods jg mov and mov in jle les xchg sbb xchg inc jne add push jnp dec cmp outsl ss jbe fistpll loopne in test jg neg and jle mov add mov pop sbb jnp popa jns mov mov mov addb outsl jg daa pop xorl aad push add add dec jle pop jnp je jg int sub (bad) stc ret pop push adc fwait pushf mov loop outsl cmp clc jg push push test cmp rcll fcomps dec push cmpsb inc mov sub sbbb push jg andl js dec mov sahf mov adc push loopne mov jp mov popf xor sub adc cmp test adc dec sbb cmpsb enter inc inc mov shr push jbe ja inc mov jmp stc push inc andb and ds inc sbb stos xor xor stc mov (bad) std push ret lea idivb or loopne jg movsl inc shrl mov (bad) ss mov jbe pop dec addr16 inc sub ret outsb push push or dec fs std movsb push push jb pop jg adc imul dec rorl test sbb out mov sub add ret fwait scas add pop aaa outsl in sti test dec push cmpsb test data16 mov mov (bad) mov dec int imul std mov aas icebp mov inc (bad) ficompl xchg pop jle sbb mov inc icebp in push add out test inc jno sarb and lds xchg jbe arpl lock pop dec loopne or aam push daa aaa out mov inc jg push xor sub xor pop push cs popf cmp jg adc aam out or push inc out clc jg mov push or dec xor test pop cmp scas xchg out adc xchg cwtd out xor cmp jecxz inc cmp push inc fstpt mov jg mov and sub aas ja daa mov ljmp out push fdivrs mov or movsb inc pop mov inc jg sbb ret es cmp stc stos sub pop inc (bad) cli pop pop aas xor lahf pop xor or fistpll pusha cmp loopnew maskmovq idivl dec dec lret mov cli mov xlat jg push imul lds jecxz nop mov add inc dec mov pop idiv add jno adc xchg lahf lret test loopne pop in push or mov insb lock jno aas push lea nopl mov inc pop (bad) cmp dec fdivs or ds jg std es jecxz sbb adc inc (bad) or dec pop push into or (bad) mov in out mov mov dec cmp push insb sbb push (bad) xchg and jge popa sti das mov sub test jmp enter xchg jg cs adc call rcrb jo es jp dec sbb pusha xchg iret scas mov test cmpsb lcall add mov shrb (bad) mov int sbbl or jg (bad) inc popa xor mov clc inc jecxz loope adc jg xor ds icebp rep jp ja or inc mov dec cmp gs ret mov xor jns jne lcall fucomip fistpl jg (bad) jbe sub push es mov into push inc dec jne mov jg xchg xor mov fidivr fmuls addr16 xlat (bad) inc scas xor ljmp lret lods push aam popa or sbb sub inc pop mov mov mov je mov aad cmp rcll jb xor ss fistpll fwait cmc cmpsl pop std dec cmpl jmp xor inc bound fisubrl adc jbe push or dec sbb cmp mov dec adc cltd in pop mov loopne loop lahf mov dec cmpsb dec mov lock dec jge or jg mov icebp jbe push xchg inc cld mov (bad) mov sti aam aas jb test js cmp mov push fbstp in inc inc jae push dec outsl inc les mov iret jg and dec movsb (bad) sahf ret scas jg cmpsl (bad) cmpsb pop out stos mov sub jl add lods xchg push jg jbe mov aas dec jp mov dec inc insl iret aas mov js push popa or movsb cli and mov sub pop hlt js dec mov jg pushf mov adc cmpsl xchg fs cmp lock movsl and jg add cltd xchg sahf mov dec popf mov jg pop inc push cs jg iret inc lret and ss inc arpl cmp sub jg daa push cmpsl xchg xlat das push mov and sarb test movsl mov mov pop (bad) enter fiaddl arpl adc mov jl mov scas xchg dec push addr16 jg inc test add ljmp mov dec pop jg mov jecxz jno aas push cmpsl rclb mov test clc or mov cwtl xchg jg pop orb sbb test mov inc jg xchg (bad) xor mov mov ljmp repz pop imul mov imul jo jg and lret sub mov cmpsl imul stos sarb push int or aas mov pop addr16 fistp push daa sub pop sarb pushf sti fs stc mov push cltd sbb xor sahf mov mov and pusha fdivr pop jno dec jl sbb jg test mov lret xchg sbb stos mov movsl scas lock xchg sub cmp mov popa movsb jg sub mov mov jmp jg gs push out push jg inc add and sub jg shlb ffreep (bad) jg xchg mov adc out (bad) imulb add es jg mov or push inc cmpb ja clc insl pushf mov pop xor sub sub adc sahf repz lods jg je out and or out nop shlb arpl sub addr16 sahf sub jg packsswb aad adc inc jl sbb mov sbb xchg out test scas imul loope pop mov test jg cmp inc mov rdmsr jg mov bound in sbb jbe fldt aaa sti add sti imul stc pop mov xchg jmp test in mov add addr16 mov dec loopne jg scas outsl loope xchg inc adc lret pop cmp inc jns xor fstps jg push sahf lods outsb sbb dec jecxz mov jo aas pop pop inc imul dec movsl fimull mov and dec mov setge std fs in mov scas dec pop int3 mov rorl cmp mov add jnp lahf jg or jg repz inc scas and jge lods in subb and stos jg std mov push das in mov cs cltd mov ja jb daa cli jg push sub dec cmpsb inc lock test mov mov sti push outsl (bad) sbb pop mov out ret repnz jmp imul pop sbb and movaps sub jg sbb mov jg push das inc pop add and call cmpsl sbb lret mov mov push pushf jb push fdivrl dec push sahf mov cltd loop jg mov mov jg and push pop pusha lods out adc mov mov pop out inc inc pop mov cltd sarl dec fiadd add cwtl jg inc arpl inc mov mov imul js fnstcw divb and lret xchg es push sub shll pop xchg sbb icebp mov dec insl sti jo ljmp dec jg rolb adc or stc dec jp sbb jg scas mov sbb jo cmp dec (bad) mov sbb mov jg mov lods push lret and jns pop xor and dec add xchg adc jg (bad) repnz lds dec lock cmp in pop daa mov mov mov jg (bad) push ja int std mov jnp pop idivb pop retw rclb sbb mov fcmovnbe enter lods fucomp lret push inc dec push enter lea lret or xchg ret mov dec mov jno insl enter inc imul jnp pop jg inc xchg cmp fildl outsb jl jae jg jo mov jg mov mov out mov sub xchg pop push dec add jae cli xchg int3 jl sarl mov cmpsb push jg idiv in fiaddl sub lcall in mov cvtpi2ps dec mov xor lret les inc notl jg frstor xchg sahf adc and stc addr16 fidivrl shrb test idivb imul push jg inc and push mov sbb mov loope mov popf divl stos dec jmp adc addr16 popa das (bad) jg pop mov push jg inc repz push bound xor imul inc iret mov loope rcl je jge movsb cmc push or aas push stc insb pop dec jb jg dec xlat rclb jg mov jnp jo pop outsl dec jns insl test jg inc adc loopne jg push inc inc stc loop fdivrl loopne push jno ja push aaa fistl mov les repz xor add sti in or andb hlt clc insl jbe stos inc cmp jae xchg mov jmp ror cmp jae lea mov movsl aas jg cmc ljmp out cmpsb mov iret dec idiv push mov addr16 xchg ret paddw addr16 jg pop dec push mov or jg popf popa fs sub sar andb pop aad dec jg ret xlat (bad) gs clc decb mov sbb icebp jg sbb outsl inc mov sbb add jae jno dec lcall stc rcll mov push negl fcmovnu mov xor loope pop jg push test jg lcall jg out mov loope je cltd and inc jmp in jg xchg iret inc test ffree jg call rcrl bound pusha mov loopne dec icebp add mov imul or mov mov xchg and loopne mov cld mov (bad) lock loope dec in mov jg or mov ret or push jg lcall add pop dec ret cmc push in sbb mov scas int fild dec cmpsl test sub push cwtl ja insb inc sbb sti dec sbb mov pop addr16 inc dec jg and cmpsl cmp fistl jg sbb add mov fstpl mov inc outsl lcall leave subl sub in int3 xchg das mov sbb mov jg cmc mov cld es in adc aad insl mov mov or test mov mov aas add inc dec and pop cmc and jg ja dec mov xchg rcrb mov pusha mov jg push loop dec jmp push (bad) sahf mov and aas int cwtl sub jg pminsw jg cmp push ffreep xchg out inc testb sub push movsb push rorl adc jg fwait ja inc cli popf xchg jg mov pop sbbl ss aaa fcmovb sarb pop jmp mov jb dec sbb movsb inc jge js inc push fs jne pusha and cld xchg ret scas cmpl cltd inc lods cs mov insb mov or push inc imul dec je pushl aad jg icebp inc pop das sti (bad) mov outsb aam lcall adc ffreep fsubs dec jmp and repnz nop call mov inc pop test ss xor mov mov dec dec mov adc sbb js ss jg mov cmc imul jg int3 out jecxz dec sub jg aad sub daa cmp addr16 jo sub jg div cli jle pmulhw addr16 jg pop aas lcall ljmp jg mov out inc (bad) mov adc rolb jg stos popl jg mov sub jg ja push lahf imul sub xlat cmpl (bad) aam sbb or push cmp aam mov es inc lds dec push jle pop jecxz out rclb pop push lret jg clc ja jg call (bad) bnd out mov pop add jg cmp fistp cmpsb jl pop test jne pop pop jg fiadd jge mov das mov xchg idivl cmp pop jmp and cmc mov push cli inc xchg daa jo ja jae jb lret cmp mov stos int3 scas mov add pop loop pop lock (bad) jg xchg mov mull mov (bad) repz stc scas push sub fldenv cld dec mov xor test inc in mov or cmp xchg pop inc mov rorl adc jl jg sbb mov pop loope jg (bad) out (bad) xor loopne inc je (bad) fucom jg cmpsl sub (bad) mov into inc cmp xchg mov or test divl fldl mov loop rclb dec add dec inc xor scas jl ficom xchg add test lods fldl cmp (bad) popf inc loop dec pop scas mov dec jnp mov hlt les call sub aad add lahf lea jbe sahf sbb push mov mov fwait or ret push (bad) daa inc in jg add mov push push pop jg xor cwtl mov hlt sub cmp inc arpl sbb rclb pop jno mov int cmp repnz mov cmc (bad) mov stos inc cltd jg arpl mov sbb jo adc sub call jg (bad) fcoml mov xchg subl cmp mov loope sub xor jg jle cltd pop lahf aas cmpb adc cmp jmp xor enter pop push lds mov mov and mov inc pop test inc push insb xor jg and jp or (bad) mov sbb shrb dec xor pop jg mov aad jg push addps insb xchg jg cmp adc mov out xlat decb xchg or sub nop lods pop lds in mov inc pop popa iret pop or test xor out aas dec jg inc add mov pop push xchg jge inc mov cmp or int jg sbb mov cmp fldenv jno orl add sbb (bad) dec adc sti xchg sbb mov cmove inc rcrb std popa push outsb push and sti scas inc pop test and adc into fisubrl push icebp (bad) jg push ljmp lock mov pop repz mov mov jae mov cmp mov jg xchg and cli and iret mov pop mov xor popa inc xor call testl cmpl (bad) mov xchg mov sbbb push test bound outsl mov sar movsb xor jg stc leave jbe jl mov add adc push jg ss pushf add pop jg mov repz sbb push cwtl pop dec dec and (bad) pop jg mov les cmc mov mov bound xor adc ds (bad) sbb hlt jg pop mov pop loope add aaa stos push push clc push aam jns adc add jmp push cmp fildl jo sbb jg (bad) call adc mov cs dec jg jns mov push jg sbb es push and add mov xchg sbb and bound pop hlt lea fidivrl aad or push out rcrb mov popf (bad) iret jnp lods inc add sub insb ret jp lds icebp sbb jae push sub mov rcrl pop stc mov sbb lret (bad) repz jg test xor sbb lret pop mov in jg icebp lcall mov (bad) mov jnp loop outsl jecxz (bad) iret push xchg jg mov shr xlat jg mov pop lock cltd pop gs mov or sbb adc xchg adc stos xchg cwtl imul push cmp cmpsb outsl gs out or out fcmovnu adc adc arpl xlat ret inc mov bound shll add jbe push test mov addl mov pop mov cmp xchg ror outsl mov dec cmpsb insl inc rclb push mov rcrb in inc pop sarb (bad) push hlt jnp inc dec jns bound gs inc lods loopne idivl sbb into nop lcall lret cmp xchg outsb jle xchg rcrb adc or mov and jg or icebp in push jmp out mov mov insb mov and and jbe jl mov push xlat mov mov das aas push lds or adc mov xchg dec adc mov nop pop push add sti jmp dec and push popf ja arpl jecxz jbe cmp mov leave push or mov xchg imul push sarl insb push (bad) jg in adc mov test cmp and (bad) xchg lds dec lcall js adc push in cmp pop ljmp jg pop cmpsb loope xchg test xchg or ret jp cmp mov jp leave sub imul iret pop pop in xorl jg pop dec dec popa ljmp popf cli sub scas xchg xor push dec pop push daa mov fwait jg adcl pop les ficoml sbb lret and push mov xchg or xor seto fidivl insb adc inc fwait pop sarb pusha ret jg scas call pop scas out pop cli (bad) xchg sbb ficomp (bad) adc jg dec add js xchg mov dec cli jbe adc jb cmpsb data16 cwtl pop jg mov cmp jg sub test xor sbb xchg adc fisubr jl dec push sbb cld add jp ret aaa pop cmp adc xor inc (bad) cld mov xchg xchg add cmp cmpsl mov inc je out jg in clc fisubl les and nop roll and fwait inc jg test imul push xchg jno sti jg mov sbb (bad) dec lret push jle or adc inc insb mov (bad) pusha dec fprem mov (bad) jg (bad) jno or cmp adc sub jg and mov xchg imul cmp (bad) jg mov in adc jbe pop leave sbb stos fildl jg repz movb or push clc dec sti leave cmp mov xor aas fs inc cmp (bad) scas pop call inc jbe sbb inc addr16 icebp cld sbb rcr movq jmp push jl les in add sbb jg std mov int3 lods cmp xchg jg imul mov pop ret inc sub and add cs jg loop mov mov inc cmp test in movsl js cli lcall (bad) icebp add adc jg imul lods mov xchg mov das jg flds in (bad) jl mov jmp xor jg ret in cmp fwait add lret es jne xor jg (bad) shrb adc jg (bad) lods mov and add inc jg ljmp mov movsb lret mov pop aas fisub dec sub dec test (bad) ja mov loope pop sti pushf aaa push in pop mov icebp cmp in aas jnp or mov ljmp jg pushf and push push nop loope js pop jg mov test add bound inc mov out jnp or jbe sub dec jg inc mov ret adc stc xor and jno mov push mov xchg push add add call leave in jmp push stos jg xchg and mov stos cmc mov fisub sbb loopne pop jg inc push into xchg xadd cmp adc div call jg inc shrl dec mov idivl xor aaa push insl inc bnd mov sbb in jge hlt push out jo or orl inc inc rorl jb mull cmp dec xor leave sub push gs push sbbl (bad) jg enter sbb push xor and pusha lret and cltd mov mov out adc and xor call push or pop aaa xchg or pop aad adc add pop cmp xchg sbb ret push movsb (bad) and mov in push mov inc in popf stos test subl sti jg jo cmpsl or inc inc roll loopne jg adc pop popf and scas lea push aam inc pop jns xchg fnstsw jg mov movsb sbb sbb add mov stc out xchg (bad) pop add dec jg cli xor gs lret jle sarl jle (bad) jg shl jnp push push imul xlat aaa stc (bad) xor mov lods (bad) sub cmp sub mov fcoms or ja push add insb add repz nop inc push xlat jg std test pushf jg and adc out mov jg loop enter cmc inc adc push shrb jg inc arpl jl jg mov test out cmp and sub out jecxz mov pop cmp jmp inc outsl fs xchg pop lret popa (bad) jns and (bad) cmp xlat insl negb jg pop push movsl push xor cmp (bad) into mov and mov xor hlt sbb cs les xchg inc add sbb inc scas lret (bad) stos jg or push jno cmpsl jg inc sbb pusha pop aas mov idivb dec aaa adc iret xchg or jmp lret dec add adc outsb popf sbb and lahf pop das xchg push jle jg hlt and idiv in jg enter pop stos cmp js lock mov jg pop repz (bad) enter dec push cmpl icebp jno jg shll aaa loopne jg cmp xchg mov mov (bad) into stc push imul cmpsb (bad) scas popl sbb cltd scas adc enter sub add adc jg xchg dec adc xor jecxz mov push add jg dec (bad) fwait addr16 or scas rol in call xor fstps inc pop sub pop inc mov jg or pusha and pop mov sub dec mov add popa inc dec test movsl mov repz addr16 es mov (bad) or mov xor inc or sarl out dec xor scas and push daa fs xor add add mov inc inc mov sarl jg mov xor aas dec adc (bad) xchg dec in jg adc shll test push or xchg imul mov or add mov and jg ss mov stc mov sti pop mov lds sub out mov test nop jecxz popa sahf mov sub rcrl add sbb push stc jg pusha out out mov jmp outsl add pop in data16 popa and test repnz jg adc xchg push adc jg cmp and cmpsb sbb data16 sub mov psllq push inc jg and or push rorl inc xor pop lods jl aas inc dec bound cmpsb xchg insl push jg xchg divb jg lock jns ja jg loope add pop (bad) jp fcmovnbe pop ficom mov pop jno xchg push das dec sahf inc dec add jp pop push sbb push outsb mov hlt pop jg fmull mov mov cli lods and jmp in into jg mull repz jns loopne dec outsl dec xor loope mov getsec ds repnz push out call jae add enter cld mov aas mov adc repnz push xor or pusha imul add xor dec inc lcall jecxz daa mov ja push mov cmpsb das aad and pop inc adc inc mov lcall and ds enter aad push inc mov insb xor xor push mov ds es xlat sub jg,pn add repnz dec pop punpcklbw out ss ljmp js arpl mov or xchg outsl mov pop ljmp in jo mov sti int3 insl adc pmuludq cmp insb (bad) lcall jg mov (bad) movsl jg sub cmp testl jg ljmp mov xor test stos dec push (bad) jle mov cmp aad dec pusha idivb add cld and mov in repnz (bad) jg pop in out dec mov mov aaa inc ret nop inc jg ret and mov shll stos les jae pop jmp and in mov jns inc lock out insl out lods jg pop dec repnz and ret (bad) imul mov outsl jg (bad) int mov push add adc ret addl dec jmp mov mov hlt loope jg js fimull dec or and jg jae cmpsl sbb xor ljmp mov push push mov pop push jp (bad) inc xchg cmp scas add push ljmp test popf test mov mov jg xchg in rcll jg xchg dec xchg icebp pop mov fild and push fmuls dec or mov add or mov (bad) dec incb test jg mov loopne sbb aas adc mov sbb inc inc jne inc lods xchg jg cli or imull xchg inc inc cltd jg mov aaa fidivr and adc shlb pop stc mov stos pop mov sub jg pusha lock mov push inc nop popa xchg mov jo mov xchg cmp adc pop sbb cmp bound xor aas (bad) and inc and sbb pop jg fnsave pop ret mov and adc call arpl fdiv sbb xchg mov push jnp xchg push leave jg jge lret add mov (bad) int3 ret add sbb jg and iret push dec stos js push jg push fiadd add push and fcmovnbe jg mov adc scas in pop dec or sub cld jg xlat out adc js sub test ds aam fiadd pop push jns jno mov call adc enter xchg leave sahf loopne data16 (bad) test ftst xor cltd out sar stos add fnstsw cs or pmaxsw xchg ds mov pop or int xchg int3 sahf jmp inc paddsb lret in cmp (bad) dec dec sbb and fidivr cmp or xchg xchg sbb add mov aas out jo insl add inc loop sbb movl xlat out test mov data16 sbb jp fistpll insl jae loope xchg inc daa inc pop scas jno pop mov push ficompl cld (bad) jg push dec push add or mov sub pop (bad) jno cmp push dec dec stos in xor and pop daa cli std xor bound in mov xchg fdivrl das pop pusha mov mov (bad) lcall jg shrl jl lcall cmp dec mov xchg jg in mov test push sub hlt repz les xor aas sbb sarl mov fiadd pop push jg fdivrl xor jmp jo fnstsw je mov push pop out adc jg pushf bound cmp jg adcl jg imulb sbb inc scas mov adc mov jl jecxz mov jbe xchg dec jg mov je jg ds dec imul lock pop fwait pop jmp aas sub (bad) bound cltd dec aas mov lods cmp mov pop loop mov fdiv mov ret imul cld ljmp cmp pop or push lock dec pop in or mov jg push jno outsl aas inc subl insl xlat mov enter imul ja adc cmp dec mov sahf popa in hlt sub pop push push add sub imul add add std lods push xchg push jg gs mov xacquire pop out mov cmp test push subl into repz fistp popa jg insl pop sub xchg in mov leave inc cmp mov cmp cltd cmpsl pop ds jg bound and add jg stos and cltd (bad) fadds inc jno mov movsl lds sti jns mov xchg or jg stos aas sti xor addr16 int3 adc dec jg popf out iret fdivl mov and cs mov sti adc mov aas popf pop test adc aas jae cs or push inc loopne jg jbe mov push fistpll inc and bound jno fs outsl addr16 jg mov sub push sbb lcall inc jg or je jg scas and ror mov push test jg sub mov rorl cmpsl pop inc gs ret jb and pop ffreep jg or sbb jg and mov jg dec xchg (bad) faddl stos jg and xor pop cmp jle adc push nop pop stos fstl jno pop stos mov mov (bad) je loop lods xor adc fstl jg in out js mov push divl leave dec sub popa insb jl gs add dec int3 push jp or and push or push or sti push xor sub pop sub inc xchg or fstl jg add repnz pop es stos and jg lods and sarb mov mov test in xchg inc lds adc dec cmp sub sub jg ljmp jg stos xchg xchg loopne cmp es sbb les mov mov xchg imul lock leave or test loopne jg sub jae pop jl pop test (bad) scas add ffree lods loop xchg in adc adc jl dec jp sbb cmc cmpl outsb xchg mulb adc add mov js pop mov sbb adc ss or (bad) cmc inc mov jg push push in andb cmp xchg sarl mov and or arpl push aas jg push push mov cmp cld outsl fistpl ljmp or jg inc icebp sbbl loop sbb aas xchg or ja aaa faddl jnp xor cwtl jg js cmp mov cli jo dec push xchg or add jg js lret xor mov push and loopne and mov (bad) jg adc popf sub jae xor jg xor test loopne jg and ja lea mov fistl (bad) insl sub ret cmp loop xchg leave imul lret addr16 in sarb in fildl cmp mov pop sub out mov xor daa test dec or mov rcrl fwait imul mov add sbb lods jg xlat stos xor adc sahf (bad) nop xchg into popa inc (bad) ror add push xor pcmpeqd or pop sti cmpl pop mov jl push push dec fs xchg lret js sub mov jno pop (bad) jg pusha xor icebp dec outsl ja inc sbb jns dec aas aaa addr16 jl xchg orl sarb jns jge sbb (bad) ret les jp fisttp or insb out leave add mov pop popa lods mov xor rcll sbb adcl inc dec jg (bad) call pop daa nop and ss xlat xchg adc scas jno lock aaa inc inc dec (bad) jg inc test popf jg (bad) gs add sub sub pop fadds push jg push pusha out aam xor lods enter mov and jg ljmp inc lret scas inc lds test xorl nop fistpll je call lcall pop popf jle xchg pop add fildl inc stos mov ficom xor mov lcall mov clc das dec jg mov test jb jg in cli icebp sti sub jnp xchg cmp cmp sahf fsubr mov jge push mov mov in fucomip out mov jg sahf sbb sub test ret jg fiaddl mov adc mov popa pushf leave lret fsubrs jmp aas lret lods and cmp arpl movsb jg cld aam pop sbb mov mov addr16 not xor out dec ljmp mov lds addb mov pop adc sbb jo mov sbb pop inc xor xor xor push sbbl stos stos jg add sub popa mov ret leave test lret ficomp ja mov in repnz ljmp cld pop ror ret cmp push and repz xor cmp mov repnz loop cmpsb movsb mov push aas mov dec and pop jg or jp mov outsb sahf insb call pop aas loope loop loopne push lahf xor scas adc ljmp cmc sbb scas jg mov add mov orl pop aas ds andl int3 inc jg xchg sbb mov leave fwait dec xor jg stc sub sbb cli push mov aas jecxz push xorb arpl jg jle aam arpl pop aaa mov das mov enter sub dec icebp fwait je cmp push stos ja pop clc imul aaa dec adc lret push push adc (bad) sbb lods mov push jg mov hlt addr16 jge mov xor les es loop add pop daa clc lea mov in (bad) xchg stos out add test int add cmp (bad) outsb ja or inc sti out scas push jno imul out lea cmp mov dec fstpl sti mov pushf jg dec pop sbb jg loope into xor sbb xchg mov (bad) loopne mov add adc pop mov jg js push leave imul jg (bad) (bad) fsubr dec and mov gs mov js xor add lcall into sbb cmp sbb mov xchg aas jae pop ss outsl lds push sbb push insl jle jg pop dec xchg xchg (bad) ss jecxz fist aas (bad) jnp mov mov mov dec jg cmp pusha xor aas inc inc aad fldl fildl and jg rorb push xchg or push xchg rclb mov rcll sbb push lods adc mov out ret jmp dec test dec shlb jg xchg jne cmp and mov rorb divps ret rolb xchg mov fs inc mov test cmp fisubr test mov jg xor jno mov mov fildll mov jbe ret push inc mov cmpsb sub addr16 jg sub sbb jmp jbe xor jg (bad) jae add jg mov int3 loopne daa movsb jg add cmpl cli insl jbe outsb adc and in mov and jg mov std (bad) jg roll dec mov mull ja mov jge mov add ss fnstsw aas jnp mov std and cmc add mov xchg mov cwtl rorl mov lods sub push inc out cmc sbb jg mov aad jle xor cmp icebp adc dec or dec mov jg xor fstpl xor clc mov add mov xor xchg xlat out fidivr fs sub js ss mov xchg dec (bad) fsubl ror jg mov push insb loop jg and mov outsb addr16 aaa mov ret pop sbb push lahf dec mov sar xchg mov push jecxz mov out mov jnp jae cmp fwait dec inc sub sbb pusha repz jg mov andb mov movsb pop into (bad) out cmp and pop xchg (bad) jg ret aad sahf pop aas fimull in dec in dec inc pop cmpsb cmpsb jl in mov inc sbb sub mov sarb xor or addr16 jne fsts pop xor pop jmp hlt pop fisubl jg inc xor lds (bad) (bad) push shr in jp jecxz cmp mov jg dec ret lahf mov pushf arpl fmul xchg test idivl xchg adc ds cld clc mov arpl pop jno pop loop idivl cmpsl cmp test loopne jecxz addb test jg dec dec or rcrl and mov inc push out mov dec arpl adc inc daa mov gs jg and push ficom mov jnp in out push lret jg stos mov xchg sbb jnp das in std pop or (bad) js cli (bad) pop enter (bad) in xchg fimul pop adc sbb jg mov pusha (bad) lock mov sub in adc jno sti scas rorb add sti test loopne loope outsb jg push aas add bound push xchg es inc mov xchg pop sub test hlt sub pcmpgtb and jg or daa aam jg xchg in mov push jo jbe fwait xor jg scas pop js test out mov into loope cmp (bad) lret pop scas in gs aad sti mov push cmp fwait mov shrb dec and cwtl jg mov add cmp std inc stos lds imul fdivl jl and (bad) shr jae cmp inc clc cs push (bad) enter mov inc and out jg outsl sbb subl cmp sbb xor or mov push xchg xor jg ljmp (bad) mov scas movsl jg mov or add mov pushf jg fbstp push (bad) stc insb xchg cmc jg testl pop (bad) repz test add jg (bad) jmp mov push mov (bad) imul xchg dec inc pop sbb mov jns cpuid jg xor aam push sti cmc mov scas pop pop jge fs sbb jg (bad) cs lret cmp dec mov fcmove imul aaa addr16 jg mov pop insb lahf movsb aas stc mov imul inc cmp test dec mov sbb idiv push pop or mov ja jl (bad) hlt dec inc addr16 seto jg jle push xchg mov hlt mov std or mov pop mov jg gs xchg inc lods lret (bad) xor sbb les in inc pop jg stc cmp xlat into jg repnz mov sbb xchg dec and in or pop test dec inc (bad) cmp int3 pop mov mov and push stos jg js mov fs je (bad) mov push cwtl les jg fbstp xor adc imul (bad) int3 fildl lea inc mov out xor and aas aaa mov push loopne jmp jecxz pop add pusha cmp or jle fnstsw add repz cmp push int3 stc call (bad) sbb pop stc jg pop bound adc loope cmpsb jg cld inc dec cmp jg push repz adc xor adc xchg stos jg xchg lods (bad) in pusha inc cmpsb jg out pop int3 cvtps2pi xor into add dec mov (bad) sub icebp mov mov ljmp adc jbe mov mov push pop adc notl and int outsl inc in add sub inc jg call loopne mov addr16 dec outsl fs adc pop mov nop (bad) dec jle (bad) loopne inc pop xchg push xchg adc jmp iret fwait cmp push jg int inc mov jo mov bnd cmp outsl out fidivl xor or and (bad) leave (bad) (bad) decb insl jbe mov fimull mov jg sub sub mov movsb mov cmp xchg dec add incl jg cmp pop push xor ss add sub mov mov lock mov jge jg mov les ret sub dec pop (bad) xchg mov xchg enter sub add inc push sar jg push jmp enter shll jb call aad jg fldcw ror cmpb mov jae leave cmp cli aad loope push mov sub jg jns pop jge rcrb inc fstps pusha mov and xchg cmp js inc jmp (bad) adc adc out inc mov mov int push jg decl out cmp sarb (bad) data16 repz push mov and xor es or cmp lds sbb jg xor sbb jg leavew push push push dec pop jg pop std cs popl adc sahf cmp add dec cmpsb stc mov jne lds int xor sub add ss and ja dec mov inc dec sbb cmp pop stos das int lods push (bad) inc cmpsl popa imul bound clc pushf push inc movb jg popf mov mov fbld mov xor add ljmp leave stos aas xor xor and decb mov dec jg aad jo movsb inc cmp rclb and push into or mov mov roll dec add scas push push add cmp outsl cmp and sbb and out adc pop xchg dec xor mov ds mov cmpsl push aad dec dec es push movl insb pop dec mov fwait gs jg cmp std mov leave pop sarl in iret push in push add xchg aam imul aaa dec std jg or sahf pop (bad) xor add pop ficom in sti or jae push cwtl int3 mov mov test loope fs ret test jg test xchg sbb mov div cmp pop sbb imul add mov ss jg add sti mov outsl and pop push jg cmp fsub add mov popa mov jge test in xchg pop cmp xchg jg push mov push (bad) sti divl jne leave mov popf jg add pushf fs loopne pop jo (bad) dec or movsb repz push sahf adc mov lret stos cmp or dec and jg lods cmp xor cmp mov dec test rcl pop push fs (bad) sub pop add int3 outsl sahf imul jle xor in jg xchg mov cmp cmp mov mov mov mov inc mov fcmovb std pop data16 jo jae stos lahf arpl test sysexit outsb push adc xchg popa lcall or jae xchg xchg out (bad) push movsl insl xchg or sbb bound jg iret cltd or fbstp dec jg je outsb pop cmpsl sub jg bound pop jg cmpsb repnz pusha fwait inc icebp paddsw xchg inc rclb insl out jg cmpsl sahf pusha adc imul lods shlb or cmp mov stos jns js mov push (bad) aaa jg jle daa inc adc push jg rep sub add or mov push push cmpsb cltd inc dec jg mov adcl loop jg test mulb dec jecxz out adc xor pop jg mov lahf call pop (bad) ss mov lcall in jg mov sbb xor (bad) sti sarl push xchg pop frstor cs mov pop push rcrb mov addr16 jno jg dec rcrl jg lret pop push ljmp and leave shrl aas jl inc rcrb xor jg,pt sub mov mov fwait outsl jmp inc xor addb daa cmovne ret xchg jbe iret xor xchg push pop (bad) xchg pusha clc xchg divl decb mov mov or pop mov jp dec ficom dec (bad) testb in or (bad) sub cmpsb or iret inc stc aam lcall ljmp jg loopne mov jg fisttpl dec jg jle loope fucomp push mov push inc xchg insl fwait lods ret aas pop dec and xchg in lahf mov mov jg fnop or inc ficomp cmp pop (bad) outsb call push movsb rcr in mov stos inc sarl enter dec jno mov push lea and pop jl mov mov mov movsl cmp adc (bad) cwtl pop cmp scas sbb or pop cmc aad add ss popl (bad) loopne xor adc push std inc xor lret mov aas pop test rol movsl sahf fisttp mov jg mov cmpsb arpl movsl add bound ret fnsave outsl imull xchg mov and sub lcall push in stc jg frstor scas xchg std inc pop jg jmp push loop lahf push loopne jg xchg stos or jno cmp int3 bound add cwtl push arpl aad and cltd jg mov xchg xlat jg mov push jg inc pop sbb loope inc jg sti add mov jecxz and gs cmpsb push in sarl (bad) sti add sarb inc cmp and popf dec (bad) imul jne shll jg orl insl gs adc and and sub jnp in stc pop jmp mov rcrl adc pop push sbb fsubrl sub mov and ficompl jg mov (bad) es test pop jle mull inc pop push mov shr int inc jbe or inc xchg inc pop insl clc jg pop cmp (bad) in jg jo movl xchg xchg out test jle loope jg mov xchg dec sbb les dec dec out enter mov insb decl mov jg popa clc sub mov cmp dec loop mov clc lds mov or jg fcomps dec stc or sbb jmp andl xchg pop pop ds lret inc sti jg xchg decb sub ds ljmp rolb jg or xchg imul in int3 sub iret inc hlt jl pop cmp inc add addr16 xor or cli sbb add dec pop out cltd (bad) xor sub loope and btc push lods pop xchg xchg pop jp stos or insl mov mov pop out pop mov inc sbb xchg mov mov lahf leavew cmp jg fsubs jno push pop std and or mov mov inc mov popf dec arpl lahf jg add mov outsl pop add jns inc mov sbb pop icebp lods xor pop push push inc jbe adc mov in idivl pusha or and adc (bad) (bad) jg outsl pop mov test xchg (bad) hlt mov adc dec cs xor jg sub aad shlb jg and pusha jg fild pop jg push loope mov mov (bad) in mov pushf lret ja idivl aas call mov hlt jg mov adc mov scas jg iret ljmp mov jle cmp and js xor push jo ja sbb mov fiaddl lock mov jbe fnstcw cmc mov mov jg bound std push ficom pop sbb and (bad) sti inc ljmp xchg sbb cmpsl jg mov popa sub mov cmc popf imul mov sbbb out lcall in sub xchg or sbb cmp push inc addr16 jg leave or sub cmpl cmc rcrl push imul mov scas fwait jg insb scas jae mov mov ds sub mov nop sub jecxz movsl pop sub jg popa or cmc pop lcall dec sbb push mov xchg dec scas mov inc push ja or icebp pop jg xlat sbb jbe inc movq mov ljmp jg cmc xlat daa or add loopne es inc jg fldenv xchg jg jae mov push mov inc push mov push imul or sbb jg mov loopne aas std lock cltd pushf popa jae sarl mov adc lret sti adc test stos and mov imull addr16 js mov mov mov fidivrl mov (bad) int3 dec sub sub pop pop inc dec cs arpl test vmovaps cmp sbb xchg lcall pop sbb dec ljmp daa dec sti xor hlt out xor mov pop movsl enter inc hlt jg or repnz inc std pop dec jge fstp xor push add movsl mov add ljmp sbb push dec inc outsl push es mov out mov fsubrl dec cmp leave popa jb (bad) sti cli gs sub mull mov repz inc adc dec std bound mov inc test pop push aad cmp test icebp in test jo repnz dec jmp jp jns xchg jg mov add lret test mov dec out clc push scas jg out mov movl pop jmp jg outsl pop cwtl dec jae jl sahf mov mov jg inc dec jle mov jg and popa std fwait lds jg push sub int3 xor cmc inc mov movsl mov test shl pop pop inc push inc adc push cli sbb scas les test jle adc jg dec ds roll clc repnz and fidivrl in sub cmpsl push addr16 inc imul jne lcall add loopne test data16 stos nop push xor (bad) mov sub ja dec stos ds jg xchg jle mov cmc sti mov xchg insl test (bad) adc orb jg cmp and cmp inc aas mov sub jno mov lret es inc adc jg xor rorl int3 jg popf cmpxchg mov jg jno pop push jo jne out adc (bad) jb loope rcll push cli pop sbb xchg push negl jg (bad) jb cld bound insl cmc cmp repz enter mov test mov adc mov or push jg les ss mov mov mov mov push sti push mov xlat sub ds dec int repz mov dec (bad) xlat and pop cmp mov jmp out sbb jl jg scas stos outsl sti jg dec aaa mov in push sti jae pop add pop cli add push imul sbb cmp stc lds xchg push lret addr16 jl mov pop jnp xor hlt (bad) out jae adc cmp inc jg dec ret imul (bad) popf stos or pop negl pop mov adc pop adc jg je movsb add cmp out add xor xor dec xchg push dec jl (bad) jg ret or loope insb popf outsl mov jae adc pusha cmp pop popa mov je jg lret scas mov jg in jae cld mov lcall xor sbb adc mov push pop enter int3 (bad) fnstsw xor lock aas mov xor les jg data16 mov or jg shufps jnp aaa jg mov jecxz nop dec jg pop sbb xlat leave xor aas hlt sub sub jns das test mov mov sar xlat repnz jns outsl jg xor jg pop lock inc stos shrl cli adc loopne fnstcw or imul je into hlt pop dec inc adc (bad) push sar mov add pop dec xor or pop jo jb push mov push mov jecxz and mov fwait jg add xchg test fistpll cmp sbb jg (bad) int jbe (bad) mov clc lock (bad) and or jg incb sbb jg pushf test mov scas orl mov aas and dec stc xor xor push mov enter inc ja push inc lcall and in pop dec xchg mov cmp stos push fdivl fiadd sbb sarl xchg shl rcrb jge add pop inc mov loopne out lds push add mov jg jae inc pop mov xor jg (bad) jg mov xchg sbb ljmp (bad) jg insl add test mov int decb (bad) xor gs push or hlt clc jg xchg int pop cltd add jge mov pop inc repnz add fnstcw arpl push mov stos jg ds mov pop gs mov cmp in aas mov je jg mov daa cmp adc xchg jecxz fistpll push dec mov jg sub push mov mov inc je mov push sahf push mov and jae pusha jg icebp inc cmpl push std fidivr pop sub pop jle cmp add push in jae ja inc jg jo sub ss negl clc dec push scas out mov add rcrl cmc mov mov mov xchg inc outsl sarl jg lds xchg rorl dec dec mov pop cmc adc dec lods jle inc fcoml cmp push dec shl gs dec mov arpl sbb jp dec mov sarl mov jecxz jg xchg leave or ljmp enter inc roll jl nop sub movsb jo scas in jg ret dec mull jg pop sbb (bad) mov mov add mov lea xchg xchg sbb pop inc adc dec enter jne mov xor nop test mov jg mov add or sub jae jg dec in pop js fsubrl push repnz (bad) jg mov pop cld jg wrmsr addb adc push pop jg rcrb aas jle (bad) js leave jo js repnz aaa into mov push push lcall dec popa cmpb out and inc (bad) jge sub ret dec lods pop pop jg imul jg (bad) mov cmp hlt pop jg dec cmc mov out pop mov jo push xlat inc xchg dec mov mov jbe jnp fcompl outsl fsts push pusha inc jle jg and jae dec or jg mov dec cmp sbb or jns js mov loop enter loopne xchg (bad) mov fnstcw test sub scas (bad) mov inc and nop aas (bad) xchg vpbroadcastq jg mov loope jg adc arpl sub int3 aam jg lock inc adc clc in insl xchg inc add lret fildll sti mov or adc adc and je push jg cli jecxz das xor jg xchg movsl sahf jne pop jg sbb xchg mov orl jl jg sbb (bad) jmp imul dec xchg mov sbb pusha cmp ja in adc aas sbb xor mov mov inc or sub pop scas ror (bad) pop push mov jg nop add jecxz (bad) jg fisub jg,pt sbb mov mov dec xchg push out lock or inc sub jg mov cmp cmpb jg fs ficomp pushf and nop jbe ja add sub jg push daa test mov inc inc pop scas sbb mov pop ja andb in call leave aas loopne sub inc xchg mov push cltd icebp jg out push popf int3 cwtl (bad) (bad) mov push and (bad) call stos push cli mov fcompl js cli pop mov inc sbb lds inc hlt inc out pop mov pusha mov jp jg fsts or lret xchg pop jg cmp inc out lcall cmp int3 cmp sti lret cmp aam (bad) pop jg in mov inc jg stc fwait arpl xor bound xchg insb or and and mov push sti out sbb pop imulb (bad) cmpsl rol mov insl jg js jecxz fadd xor inc sar mov les and cs ret cmp jg ret fldl test das xor out lahf fimul jp jg adc add inc adc fwait push or (bad) fdivrl add push add jg hlt push xorl sbb pop jne mov inc rclb loopne aas ret (bad) aam lahf cld dec dec jg ja decb mov lahf sbb js movsl sub jae push fldenv mov mov jb add adc les push jg in mov inc jg (bad) sti loope lea outsl mov fistpll and mov repnz stc xchg jg or sti imul movsb pop mov aas cmp nop and jae jne sarb andl ljmp lret aas fldcw inc cld inc aam fdivr outsl mov sub jno das add into jg sbb pop cwtl sbb aam sbb lret ret sub loopne pop (bad) aaa leave and call inc jle fistpll in (bad) pop cmp fldl push fwait cmc adc jg andl mov lock arpl mov test and popa sarl pushf xor cmp push and fnstsw push fwait shrl jg movsl push mov add mov pop sbb ret lods call push pushf sub push sarb lods mov test xor loope xor out scas adc and mov xor nop jg gs jl inc inc mov lods ret test rorl dec das iret pop pop rcr imul cmp fisttpl jg and inc insb outsl fistp mov inc loop (bad) xchg inc jg lods (bad) xor int3 cld xchg into stos mov icebp jg jb and mov and mov push jg dec dec push dec push imul lods std pop paddb sbb lret lcall jg xchg jno mov mov push pop rclb ret scas or dec mulb dec imul rcrb push bound movsl jb pop stc (bad) repz push jl imul xor enter les aam cmp pop addr16 popa mov jg mov sub dec jno cmpsl jg ljmp cwtl rcrb cmpsb push pop or inc insb mov aam aas dec ret push dec jnp (bad) adc lods lret in or int cs std (bad) (bad) mov pop push push sbb out jg pop xchg xchg das mov fld popf mov mov sub and mov clc pop jne xor (bad) dec in mov cmp add pop adc jg push mov jns das pop test faddl fwait cmpsb cmpsl inc jp out jl out jg stos inc jns loop fistpll mov push dec fiadd jg call adc add pop adc mov setns mov cmc mul mov jnp pop in xchg push adc aam cmpsl jg push fstl jg scas and cltd lods ret push cmp pop (bad) mul xchg jae mov sub push movsb jg dec lahf pushf cld gs fdivrl repz sbb out (bad) mov xchg lcall mov (bad) out dec push push cmpsb daa pop sub and outsl inc sub test cld (bad) mov jnp in cs lahf dec (bad) jg jp stos in ss xchg sarb jg cwtl int xlat ret jp push xchg inc jg jle push hlt inc cld jg lea sbb (bad) in dec into or jno dec push insb ficom pop ds push daa pop and jp imul sbb push lahf add and rcll cwtl dec in jg jmp test aad jg lods mov jo (bad) jg loope cltd pop lods mov jg mov stos pop mov jns xorl add fstpl inc fisttp xor inc pop jg cmp push ss jg mov lcall sti int3 xor and repz es jg cs fs jg and inc jg jns,pt dec loope adc dec push or jg sub push xor adc roll jg data16 rorl insl sarb jg orl push aas sbb xchg sqrtps ret mov pop daa xchg add lock push jae imul in sub inc in ficom jl push or pop or xchg jg inc adc push (bad) (bad) fild mov mov aaa xor sbb pop inc pop mov jae xchg jg pop lcall fwait and lea cmpsb xchg push in jg in sbb fadds and mov adc or push cmp mov out sarl dec mov scas sti push mov push or add lods (bad) pushf jg cmp cmpsb cmp push jmp pop jl inc xchg mov pop mov jg fsubs cmp cmp sbb adc out shr sahf xchg push mov data16 sbb push cmp out in cmp jo sub gs inc lods popf lahf mov lea push sarl cmc jae jg lock mov jg mov loopne or mov sub push xor and and addr16 mov call dec mov repnz jg push ret lea inc jg lods xor mov outsl rcl cmp dec jg and pop es inc jg pop cmpsl adc mov mov loope push inc jg sub negl fmull xchg fldcw jg (bad) pushf or ss gs adc xchg inc sub ljmp sbb cmp or dec pop lret (bad) (bad) dec push cmp xchg push scas popf push (bad) mov jo jg cwtl mov jg in push xchg sbb dec call jg (bad) pop pop cmc repnz sarb jnp jecxz jmp pop cmpsl mov cwtl inc test loope mov movsb jg mov jecxz mov jb nop lods sti jno in out dec fild ret push jo fnstcw fs jg jb push push lret mov sub test jg stc ret add div popf add inc mov or int3 repnz sbb (bad) iret pop sub mov in ret jg inc and jg call lahf sub inc cmp adc movl mov in (bad) enter pop xor jg jnp pop xchg cmp and (bad) dec jmp mov and cli iret mov xor mov xor mov popf pop ja mov push jmp cmc (bad) movsb mov popf pop sub jg (bad) jae mov jg mov xor jg pop jne jns lret lds jo mov push shrb inc mov ret mov cmp je xchg cltd lcall (bad) int3 dec sarl scas or jg cmpsb sbb (bad) out mov call aam das sbb jle outsl fbstp jmp jg cmp adc jg icebp pushf mov jo xchg dec lods das adc out xor std mov aaa lcall cmpsl ret hlt (bad) inc and jmp pop jg out push lcall lods cld jne pop addr16 jg cs jge inc sbb stc mov jnp mov dec rorl mov ljmp clc jl cmp (bad) repnz hlt cltd push sub xor lods imul cmc hlt out sbb jg pop fmuls jg std leave pop pop adc jg sbb cli mov jecxz dec xchg mov sbb (bad) xadd mov in xchg mov adc cli xor sbb xchg mov jg dec xor jecxz jg outsl loope or pop dec jg enter testb jg cs jae subl shl and inc aaa les in push popf sbb and mov and jle outsl pop shrl orl jnp movsl mov push jl mov xchg daa leave jg js call jg mov movsl jnp xor mov int pop push ja cmpsb test les fnstcw inc lcall mov nop mov jg or stos scas stc scas out jg and arpl sbb les jg loopne pop jnp sbb inc ret mov in inc ret xchg jg and sahf and sarb dec push out incl test adc jmp mov pop cmpsl outsl dec push rolb loope jg sub rclb test mov dec adc sbb pusha cmp sbb hlt fwait lcall (bad) adc push dec enter push movsl xchg xchg lret lods mov es mov std mov push cmc mov ss jle (bad) jecxz inc pop pop mov sti dec jae scas fidiv pushf xchg jg sbb xor (bad) and rcr jg pop xor mov insl mov pop aaa lea push jg jp mov mov ds nop test mov cld and cmpsl std or popf pop ja and scas sarb jmp adc fwait sbb js xchg cmpsb or sarl sub aam mov xorb push add popa hlt mov jg stos leave fwait jbe jo jg loope sti push push push sub lcall das jg cmp in (bad) xor push mov jg push sbb xchg and (bad) mov pop ret hlt lret imul lock xchg icebp shl sahf sub mov jg cmc in xchg jg sti dec mov jg dec xor rol mov mov mov dec sub (bad) mov cmp dec dec push jle sti fisubr imulb jns je dec sbbb jb dec xor clc ret push movsl mov insl jg sbb sbb jg jbe adc cmp ds fnstenv ret mov arpl in inc repnz push pop out adc fs icebp addr16 clc xchg pop jns aaa xchg in sub and jg xchg pop fild int sbb popa add pop xor into and (bad) ljmp movsl xchg jg push jl mov lea enter roll fildll mov outsl mov jg mov vfnmsub213sd stc jmp inc push jno,pt or xor les aaa mov jg xor xchg and pop aas or inc popa cltd push inc jl jg fsts dec jg adc push pop adc sarb faddl dec dec pop in sti jae rclb jg fwait lds inc idivl cmp pop mov jecxz rorl push lock adc push fdivrs push mov scas imul mov jg xchg ror push or sub jo sbb sbb inc aas cmc subl sub (bad) insl lcall xchg mov mov jmp jg inc adc lods mov jg jne xchg cmp aas cmpsb imul inc negl rcrl fadd sti cmpl adc sub pop adc ja cmp test (bad) clc (bad) jg cs inc pop jb hlt jg sarl ret push out jl jno mov movsl (bad) jg pop aaa inc lahf push fwait xor es xor add cmpsb mov mov pop pop mov push jg cltd add or cmp mov (bad) leave ss movsb jg inc xchg lock mov mov (bad) pushf xor and fsubr mov cmp (bad) xor jg aas pop insl sbb jmp xchg (bad) ljmp (bad) mov jno (bad) push ljmp out xchg dec les and push jg sub fwait and adc jo leavew fs push aas jno aaa or mov mov aad push scas leave mov lret add inc jg in xor and lock popa jae dec test jg mov mov (bad) lret push fsubl and insl es lret xchg inc hlt and lock xchg sub int3 sahf test int jg lcall jg mov repz cmp cmp ljmp xchg dec sbb clc fbld into jp (bad) and (bad) cli or inc mov jg cld lods xor mov js mov add sti sbb jp mov mov insb push add or xchg jg xor mov jg or stos pop cld inc mov repnz inc cmp aas dec xor arpl sub mov push lahf inc setne mov and inc iret adc dec sti cmp clc add xchg ret jg mov xor (bad) insl jnp negl scas push outsl sbb xor pop mov and data16 ja sti jnp xchg insb jg cmp and jg mov push out mov outsl push sti pop dec mov insb inc add jle ljmp sub jg outsb cmp cli pop push jae fs push push daa inc jg mov mov aas lahf ja jbe lds daa pusha inc pusha xchg inc iret jg dec cmc pop mov push cld ss insb loope jg pop mov clc movsb stos inc ja mov cli in pop cltd aas mov aad and lahf adc pop in sbb leave lock stc ja test lret sti fnstenv lret vpandn rclb add addr16 xor jg iret sub rclb cmpsb imul jg or loopne bound xchg push repnz jg popa pusha fldcw ds int3 jg sub mov cld pop xor cmpl mov xchg outsl addb (bad) pop fisttpl ret pop jg dec jo repz sarl pop pop sub jbe or push mov lods add pop mov cmp jg sub (bad) in dec pop jg stc nopl push jmp test jae andb enter and inc mov in mov lret gs push mov ljmp adc and test mov fdivrs loope xchg inc pop adc mov test scas adc and sbb andl cltd dec aad bound or dec popa call sbb js les (bad) in xchg lods arpl jg push aas lods jg scas and jo test push inc outsl fnstenv and push aaa pop dec jg mov inc notb push add add mov idivb rorb mov sub je dec ret or adc pop stos push add jg outsb jnp into mov xor jns push (bad) enter add fdivrl aam outsl cmp or and xorl test les pop jns mov add test loopne or fwait dec cmpsl pop jo aas mov loope jg stos clc push lock sti jmp push outsb inc jg inc and pop aas adc aam ret push jg fisub cmpsb xor cltd (bad) xor pop stc xor and mov jecxz inc cmc inc mov js scas out jb jg cltd in mov xchg jg loopne loop push dec stc jg stos rclb lods jp and pop mov pop mov push fs jl mov mov jg enter pop aas loope and popf dec xor dec pop or cs pop sbb push mov and push out sbb gs imul out or jg inc das sbb cmpsb arpl std insl or jo xor les (bad) ljmp mov pop pushf mov and mov mov lcall dec jmp add into out adc les or nop test in jno xchg jg mov push pop xchg jg gs ljmp imul clc xchg sbb xlat faddp inc stos mov enter std jae xor mov daa adc test jg inc andb adc (bad) jne dec jg icebp jns imul mov xor mov andl jg cmpsb pop les cli shlb popa out add loope lds add stos stc mov pushf fdivs mov loop adc mov mov pop ss pop cwtl jg cmpl xchg push jg push mov in imul insl std cmp or mov (bad) loop cwtl dec call push js pop jmp mov fdivl inc push pop rorb lret shlb jg cs lret push jmp xor inc mov iret inc cmp mov push adc or xchg dec (bad) outsl fstps mov push pop arpl adc or test icebp jg jl sub xchg fadds mov (bad) lock jg frstor call dec fcoms ljmp and mov cmp xchg das sti adc mov addr16 (bad) outsl ret gs jb mov scas (bad) ja inc in mov fistl dec std enter xor push notb pop add in repnz push ret fnstsw je jmp jg outsb xor inc mov popa fdivrl mov push push or pop and jg xor out jl stos scas pushl jg test sub xor or hlt rorl mov les ljmp pop jmp push fidivrl imul dec mov and jg jb cwtl (bad) mov repnz dec iret dec xchg scas lcall jae pop mov test jg mov xchg sbb push nop jg jae inc sti mov outsb sub out and jne pop jg insb enter push ret loopne jg pop dec imul (bad) jl mov imull pop adc movsl mov int cmp aaa jg cmp inc std jg mov xchg jg xor add test xchg sub mov jg into or mov lods test andb pop and jg int3 jge pop call add (bad) jg inc rcrb js jg jmp pushf xlat iret mov fbstp fisubr mov xor je clc sub (bad) mov cmp sti jb cld imul xor inc pop (bad) rcl shlb dec cmp leave ds (bad) jg mov test adc mov lret xchg lahf outsl iret gs jbe fs sarl (bad) lahf or pop mov ljmp pop (bad) mov inc lret xchg aas dec lods xor ja loop adc cmp cld xchg cwtl xor inc mov mov sbb pop aas push dec pop (bad) loope int3 push scas aam popl pop clc mov sub fistl stos sub in jp push arpl fbstp and adc mov (bad) out mov sarb movsb push and pop lods stc xchg fwait outsl add adc sub push mov push in inc lds jg aad imul bound mov xchg mov jbe mov adc gs repnz inc les push xchg ret fdivrs cmp bound popa jg mov pop xor arpl pop inc dec lods dec js jg aam xor sarl sub repz rcrl jecxz sarb jg icebp js inc daa lret nop jg sahf lods fcoms in add pop jg mov jnp divl and jg push fs xchg dec pop testl int3 leave scas popa xchg js cmp mov or ja jg fisttpll leave repz jmp add ss ljmp lods rcll arpl ret and mov jbe fcomi out jg movsb or pusha ja (bad) mov inc test jg jp insb dec sbb jne (bad) lock mov (bad) aas out adc xchg dec pop or es jg divl mov nop insl addr16 popf pop out mov pop sub adc sub call mov sti ret out push xor (bad) mov out fdiv test fsubrl sbb sti roll mov pop mov pop mov (bad) idivb sub sub mov jbe int3 add push enter (bad) pop in and sbb inc lock jl dec mov xlat jnp divb xchg jp outsb test jg out cld push jle fisttpll push jg xor pop jg dec out xor adc jg insl ss cli aas sub cmpsl pop lods jg jge cltd push in mov mov mov jp inc (bad) subl xor jg enter cmpsb jg lret lret pop push jg mov adc jg fwait lods test jbe sub jg mov sti dec dec test adc in rorl pop sub jnp jg or in out cli mov add sbbb jg inc dec in das or test add mov xchg mov sbb inc push push and pop jg (bad) sbb ja sbb mov clc jg andl inc test mov div cmp jg push sbbl pop inc movsb jg (bad) adc push dec mov lret (bad) sahf xlat cli xchg mov negb mov mov imul movsl and xor sbb mov lea repnz xor mov loop mov dec out mov sbb push cmpl jg adc cmpsb (bad) imul jg lret xchg inc xchg fidivrl ret inc (bad) xor fisttp icebp movsl sbb popf ds fwait cmp (bad) lret test xchg jg mov mov push fimul (bad) jg popa xchg pmaxsw mov add mov js jno,pn jne jg push jle jnp push cmc cld jp jg push cmp xor xor xchg (bad) ljmp sbb jg popa adc inc xchg jg add mov jg (bad) lock push lret hlt push add aaa sub dec push ret sub jg fcmovnb icebp neg xchg clc jg or sub std ss xor lods out pushl pop add es iret dec xor pop cmp cli mov lods push sub dec and push inc xor or or (bad) movq cmpsl sub pop inc mov mov divb xchg jg fistpll mov stos repz or xchg sub add loop inc xchg push pop popl aam push mov outsl sbb adc fidivr cmp and int sub cmp insl ja icebp jne mov or sarl mov mov pop inc add in popf stos xchg sarb sahf dec jp and mov lret xchg lret inc inc fwait insl shlb add push inc aas cmc jle clc xchg ret add adc inc mov mov popa jnp (bad) sub jg cmpsb aas sbb (bad) insb enter xor lret dec mov inc push nop loopne mov xchg leave ds jno arpl clc sbb sbb xor or out lahf data16 jg jmp jb push xor imul inc mov inc mov inc or lds fidiv movsl sbb pushl xchg dec mov jb jg repnz sub add add into inc lods push dec insb sbb inc (bad) loopne jg (bad) aam scas sar jo out pop mov sahf rcrb dec mov jp lods push or (bad) push and mov xchg outsl push jle jg shlb out scas mov aas add pop int3 mov jg and push jg pop lods mov and inc mov cmp inc cmp pop pop lock movq movsl stos xor mov sti add jg cs or fcompl gs imul and mov and mov pop inc fdivrs ja pop jle sbb or mov int3 mov aaa pop sarb adc pop addl mov jg adc insb xor pop ss cmp nop inc mov xor cmp clc fimull lock jg bts dec in (bad) push dec sub jg scas les jg out or aas xor lret mov cli insb ja js int fucomi jecxz shr loop mov popf lods inc addr16 mov fnstcw pop notb dec or jge int fdivs jg mov clc aam jnp inc push jbe cli lret in and jg mov mov call sbb outsb cld das lods andps ret jne mov push jg imul (bad) lock dec sub int xor rclb xchg stos (bad) jb cmp je pop mov movsb outsl (bad) mov dec jge aad out nop jg std mov daa jo mov shrl scas jg cs cmc and adc jg nop push dec jle pop cmp mov lock mov jmp pop psubq jg mov mov jg xchg jb xchg cmp sarl inc jg shr loopne cmp aad add lcall dec sub jg push dec and outsb cli xchg xor adc fdivrl and jg in adc scas lret xor (bad) xlat inc jae jo or cmp ds dec or inc jo mov test mov push push in flds aad (bad) repz sbb and xchg enter ljmp test mov add arpl fildll scas in cmc mov cmpsb pop fnsave push jne jno or fcmovnb cli pop lret jg inc pop push mov nop (bad) into mov dec inc xor pushf jg sbb xchg cmp cmovg xchg jle inc lea dec fdiv jl mov arpl cmc adc jp ja fsubp add and mov fild jae jg push pop mov lock les sahf cltd sbb inc jg pop pop dec and js aaa dec jg and movsb cmp and fnstsw outsl and cltd aas jg pop popa lock and repz pop data16 aas leave movsl pop mov lods ret mov jo (bad) (bad) xor pop jnp aas daa (bad) fnstsw pop push das call lahf sub cld mov js xchg jne dec std out push js jg mov jp les dec cmp mov mov push jl out imul inc dec pushl (bad) or ret es dec jmp in add jae cwtl rol and jne out inc jg xor cli xchg jg adc in inc push fidivr or int pop jg sbb cltd mov pop addl jg xchg adc xchg fnstenv aam mov sbb add idivl fstps outsl lds jg data16 in sbb xchg (bad) mov jg bound icebp js loope mov push cmp stos movsb lret cmp cltd mov inc and es aas fisub imul xchg dec mov mov paddb pop jg scas mov cmp inc fnstcw in mov insl jne pop aas (bad) aam xchg sub push adc jg std (bad) out fs sti pop or cmpsb jbe jmp mov xlat cmc inc lds jle cwtl cvtpi2ps arpl inc sarl mov pop inc jg pop getsec mov push sbb pop pop stc push inc sti inc jnp sub mov aad cs jmp jbe pop out lods pop jbe jmp (bad) dec pop xchg nop xchg jmp fdivs dec mov fcompl mov xchg aaa push jg sahf in (bad) stos cmp mov lret testl ret dec and jl loop pop iret out sbb sub jg jmp cli popf insb (bad) loope popa cs adc outsb inc sub movsl jg push out (bad) cld std inc das and pop orb (bad) call mov inc leave mov fs sub int3 inc mov jg ret pop rol mov or mov sbb jg mov iret jg imul cli lcall (bad) mov fsubrl xchg bound jbe sahf (bad) mov (bad) movsl sub jg (bad) ds xchg gs daa mov inc mov inc inc mov add stos jno push jg xchg jo push dec movsb (bad) mov cmpb (bad) pusha jg cmp clc push mov xchg push lods cmp xor fsubl and idivl (bad) ja push jg outsl iret insl pop xlat (bad) push jg push pusha aaa sub sar aas lahf test push shrb jg cmp fdivrs jg cld adc xlat xchg push xor (bad) fsubrl aad pusha push sbb ja xor pop in data16 jae imul cmp test mov pop cltd out mov push ds mov hlt arpl incb (bad) sarl inc dec inc add or dec cmp jg lret add mov sbb xor cmpsl or (bad) xor ja push push sub andl push sbb in pop (bad) fwait pop aas ja cmp cld mov jnp push loopne inc out jg cmp mov pop cmp and add das push icebp fwait sti pop aas (bad) loope mov mov or adc mov jmp push lret jg insb gs adc xor jg ljmp jg loope push inc dec out ljmp aad cld sarl xor mov adc test mov lret into push or mov test mov xchg sub mov js xchg inc add movsb fnsave mov in pop inc lret popa jb lret scas sub ret fdivrl adc mov push cli pusha jg lock xchg lcall xchg jl daa shll mov mov push jmp mov sahf test sub in movsb push xchg loopne popa push cli xor roll xchg adc dec pop fidivr pop stc imul call xchg sbb pop mov jg lahf imul xchg mov sub in jg sarb jg inc jnp aad in cld jg add and bound adc jg in imul testb mov sbb mov push jmp outsb jg stos roll and cmp mov mov and insb lods bound jg push cltd mov and ret jmp fdivrs clc jg push push test jg rcll add pop mov jo cltd dec ficoml cmc fildll andl fsubrl mov cmp rcll jg mov lods sub pop mov push xlat add dec fcmovne and jg or sbb in pop dec loop leave mov mov inc and sub sbb fbstp xor jge pop cmp jg push dec or xchg pop cmp icebp add mov xor cmp jbe hlt loop fnstsw inc mov jg jle dec and movsl jno push dec gs fldt mov inc ss loope imul jmp test push arpl pop scas mov outsl xor jno fstps ret mov cmp mov cltd imul sub sbb dec xor lcall fnstenv push jg inc pop out decb jno out stos mov and cli xchg adc inc jl lds and jg or pop and mov fisttpl mov and addr16 jg and sbb jl pop repz jae icebp jae xor pop imul jg iret or push lahf adc pop cmp jp jg add inc jns rcll lea loopne sti test icebp xchg movsl xchg iret jg sahf pop pop mov push jge gs cld cmp mov out mov cwtl rclb (bad) pop sarb lds dec movq mov sahf xor std in xchg or fs jmp pusha mov mov sub inc add cli inc push jg lds js push xchg bound orl push in je xchg pop cld sub int3 cmp scas mov in fnstsw adc mov cmpb dec xchg pop jns adc dec pop push imul cmp (bad) leave jg fldl jg out aad aaa inc lods stos jg xor into in loope js xlat pop dec pop out lds jo and incb mov mov cmp pushf (bad) stc add mov jecxz leave jle sub jg (bad) out aad push or add sarl out ret cmp mov cli rorb jg xor xchg sarl xchg jg jns out loope stc jg call rorb aad push nop and push push jle cmp add loope daa mov sbb cmp leave push dec jmp xchg push jmp (bad) sbb jg aam mov xchg ret test addr16 scas aas dec outsl pop mov xchg jno mov dec repz push mov sbb (bad) fidivrl and mov xlat jg out pop ja in jbe pop push and mov xor fstpl movsl mov ret mov xchg sbb fisub popa mov pop or jg jno dec aas and mov pop jecxz lret mov test aaa icebp mov adc cmpsl lea push xor push adc data16 add xchg rcl adc je pop scas mov xor pusha lret cwtl lret jg (bad) arpl ret out jno xchg pop fwait pop rorb fisubrl pusha out inc ss out enter insl hlt inc js lds xchg mov in pop data16 add shlb inc (bad) ret jg push mov insb mov and andb pop lahf jg (bad) fist jbe stc mov sti das les aas out fwait int3 popa or mov xchg xor push pop cwtl sarl pop sub inc (bad) pop addr16 je xor push out pushf ja sahf lahf jg (bad) adc and push leave movsb addr16 mov out cmpsl addb jb ret ror jg and lods mov mov mov inc jbe cltd aad add jg les jg aaa sbb stc jg aas fidivl jg and and mov mov pop jne jg push (bad) sbb sarl in sti dec out das fadd jg pop dec in popa sub daa jg and xchg jne adc jg cmp ffreep lock idivl sbb adc dec bound jg mov mov aas mov jno enter add mov mov dec and cmpsl push inc js adc (bad) rolb adc jg mov pop push rolb test mov hlt (bad) ja fwait jg daa in scas push cld push mov inc (bad) push pop sahf ja jg (bad) and or push cmc push ja jg pop fimull mov sarb sub jg je inc stc ret jle ds nop outsb lret and pop jg aam adc push call mov dec jb or test inc (bad) push and jg aas push add ret jb in jl mov cmp pop mov jg test and hlt divb jg mov pop jmp std jg mov shrb leave jmp aad jg mov push jecxz std call xchg pop sti (bad) pop jg xor pop dec jg dec movsb loope mov jg orb aas pop (bad) hlt xchg lods les sbb pop adc fwait adc jg insl fld xchg mov pop pusha push jg pop ds xor pop into ds or iret jg jmp (bad) cmpsl sahf cmp rcr mov cmp into pop dec mov fwait mov jne scas ss sbb mov xchg aam aad inc jg xchg subl jg movsb jb pop cmp sub mov mov mov jle mov xchg adc mov push xchg ss shlb and in scas fsts xchg dec sub and addl push dec fstps std inc jo mov aas xchg add dec arpl arpl jmp mov bound pop jg push sarb hlt jge or add adc or inc or cmp lods lock push pop xor or inc lods daa scas aad jg jp add popf adc rolb in jg outsl jne subl jg adcb jg cld mulb sti outsb addr16 bswap mov mov push out lods jmp jg xchg mov in test pop repz inc adc pop jg out je lods cmc test aas inc lret jno lods dec cmp jg roll sbb hlt (bad) movq add shl push fadds enter xchg jg popf xchg jo or shrb cmp push xchg mov xcrypt-cfb cmpsl addr16 test bound mov dec pop insl sahf fs cmp into fmuls es ss jne adc cmp pop ret mov adc add and fistpll test push xchg repz mov sbb imul ds gs push cmp inc push pop int3 xchg xchg adc bound cli in dec pop mov loope dec fistp and jno dec pop xchg iret or addr16 jg push push cmp jg push sub push mov pop icebp test notl mul outsl push mov jg fwait jmp ret mov push inc js inc dec jg ja and jl jg sub call cmp ss dec cmp arpl lahf (bad) les ja rcrb push pop jbe inc xor and dec dec imul cmp mov mov in (bad) mov mov mov mov (bad) lock ja xor jmp js mov lock and pop lret inc xor jb sub inc iret xor lahf cmp leave mov sub mov ret cltd push and cmp adc jl fnstcw lea imulb xor mov sti xor jecxz out int3 mov les sbb fisttp inc loopne jg fildl cli adc dec shll lahf outsl jg popfw into lock or andb repz jg (bad) xor push pop jg add xchg jg jl sbb pop mov jg,pt stos push xor cld add push xchg xor les push lret fs (bad) jg out mov dec fsubr jg (bad) and lods scas mov dec outsl add cmp (bad) mov scas mov loope lret hlt fistl rcr dec jg int scas xchg cltd jl jg sub (bad) mov xchg and mov out and mov addr16 sarb jle xor sti sti mov into in in pop mov jg popa sbb xor (bad) push outsb scas mov loop cmp adc pop mov mov jp add repnz idivl mov movb adc mov and jg push mov testb testl es mov gs hlt push out dec jmp mov outsb ret arpl mov adc xor insb mov xor arpl mov pop ja jno cmp jg adc loop inc pop int3 js cmp pop mov inc in test sti mov cmp adc or fist pop ljmp pop data16 dec call and pop jne aad dec pop sarl ja add outsb insl mov ret fcoml mov ss mov and mov out mov in test mov hlt bnd pop lea mov or pop fcompl sbb out scas enter pop jno lods mov jmp jg inc pop ret push cmpb lods mov sti repz mov push jg xor add out push outsl push test and pop mov xchg inc enter int test out scas xchg pop xchg stos mov xchg jg sbb push movsl out popa sarl ret pop cmp jg xor jne adc rorb push jg push (bad) movq daa cmp outsl and mov insl pop sti fcmovnb mov icebp int3 imul sub cmp andnps addr16 in inc and dec (bad) jg push aaa das inc jg stos sbb mov enter mov xor cmpsl outsl dec and fs jne and lcall sub dec mov mov dec cli ds in cli lods mov jg mov mov sti jg inc pop xlat or decb mov ret jle pop sub push cmpl pextrw and clc mov ret cmp sahf fwait aam fiaddl lock push into les mov xor jmp fs nop push jg in inc imul das jg inc leave stos push cwtl fildl adc mov add jg ss sub push popa outsl int pop test fisttpl or scas mov xlat xor add jg pop je cmpl mov scas dec loop jg mov (bad) hlt mov push pop push pop xor testl insb jg push mov jl ret xchg jg jecxz lcall inc sarl stos jmp jg inc sbb jg push cmc int iret mov sub mov sub fbstp mov aad push shrl jns pop mov inc out mov shrb add dec popa mov adc pop int inc jne jg in xchg mov or pop push lods adc and jbe mov inc aaa cmp pop dec push cmp sti cmp jg push lods scas outsl fiadd (bad) jo inc inc xor or lods cmp arpl jg mov popf cmpsl mov cmp lods jne pop fwait cltd imul inc sub lods lret test push or adc fs jg lods sub jp xchg dec jg xchg incl movb push sub jl nop in sbb mov xchg cmp aad cmp jo imul dec les shrl pop andl scas jb xchg dec lahf push les stos sub aam std sbb sbb push mov movzbl mov and xor mov and movsb ret call out mov aad mov fistpll inc lahf sub dec adc xchg (bad) mov les add jecxz cmc inc aaa jg jge mov jg push cmp jg test (bad) mov shlb add jb (bad) mov leave jl stc pop addr16 dec mov pop mov sti xchg mov sahf mov jne dec (bad) xchg jae jg int mov xchg xor jg cmp aas and imul icebp pop push inc dec sbb adc push rcrb pusha jg les imul and outsl scas loope lret cmp imul movb inc sbb pop mov and out dec jg push jb xchg fcompl jg repnz test punpckhwd sub cmp pop mov cmpsb push jg mov popa jg stc push roll jg sbbb add mov mov mov fimul stc (bad) (bad) lea ja jg mov add sahf jno pusha inc (bad) jns enter sub insb imul dec lods test add idivl jle and stos mov xor rclb and mov imul inc pop inc dec jg scas lock mov fistpll jp loopne push inc dec jg ret cmpsb pop ret out jo pop sahf mov push lods lock mov sbb sarb data16 lods ds aam jg ret fwait add or mov fisubrl test jnp sti xor mov aaa dec int3 stc push pop pop out mov arpl out add outsl cmp jb or nop adc lret or xchg jne mov mov aas enter push dec rorl out mov push cli mov fcoms sahf inc test stos movb sbb daa jg shrl in mov scas cmovs cmp fwait jg sbb sti mov aam push adc mov push mov ja and jbe sub mov sub mov push cmp lea push mov dec mulb mov xchg jg pop orb mov mov enter mov movsb jbe push pop idiv inc jge lahf dec cmpl leave cmp (bad) sarb stos lret outsl aam cmpsb mov aas adc pusha xor (bad) addr16 leave pop jg push mov ds stc mov mov outsl cli arpl jg cld pop scas xchg inc mov cmc push add xchg cwtl jmp inc out xor shr fcomps rcrl xor inc xchg jg mov movsl cmp sar das cltd aaa mov or sub xchg hlt mov xchg mov xchg jg cs nop cltd sbb cmp mov jecxz pop mov out dec lods xchg lcall mov icebp mov loopne int3 adc outsl mov sbb cmpsb add int3 mov jg inc pop jae and cmpsb mov dec out gs sbbl subb out mov insl das clc and xchg add add mov sbb sbb mov aam lock pop aas mov sbb ja inc add jg lret loopnew call fs mov rcl adc dec jg mov stos bnd clc push scas dec adc xchg aas sub fidivr mov pop mov mov test je sarb add mov fmull cmp adc inc int jg jo out in test insb mov jg sub dec mov mov dec addr16 fnstsw cmp negb push push call mov pop and sti xor fistl jne xor jmp jg xchg sbb ret mov orps lds jg cmpsl jae cltd aas cmp ja gs fmulp and addr16 inc lcall mov jg test mov nop xor sub cld jg jl mov pop jge jg add fidivl in and xor or sahf inc mov pop and test mov xorb pushf mov add sti data16 je sbb hlt das add inc fadd repnz sub addr16 add mov pop sbbb mov xlat dec int3 mov mov cld jbe inc mov lea cmp cmc dec and sub mov pop in fwait addr16 dec push jg frstor (bad) in push je jl push out xrelease outsb loope jg mov pusha lock mov jg outsb xchg stc xor test sti cmp pusha ja ljmp dec xor jg push dec xor in mov test and (bad) fildll sub psubb shll and jmp push aam cltd adc adc pop and loop subl sbbl (bad) mov xor mov jg aam stc nop and subl dec inc popa movsb imul sahf stc pushf jg mov stos xchg jo lahf addr16 push int shl jg mov das ja xor mov or movsl stc add jle jg mov popa add dec in jg fdivs rcl cmpsl pop ja sub test sub repz jg xchg cld dec mov leave add in xchg in jp dec loop cld lret sti sar pop jg mov mov das imul (bad) stc xchg jmp jecxz out lods vmovdqu ficom jae outsl cmpsb inc jno sarb cmp call jle pop jg (bad) (bad) sahf push or jg repnz imul popf cwtl jno or out xchg jae inc es push out sub jo push call ret push sete (bad) bound test (bad) pop iret fistpl sbb mov mov js (bad) cmpsl sbbl adc fwait pushf cmpsb pop stos sbb ds insl xor sbb or inc and frstor in inc pusha dec jecxz pop mov jg pop sub xlat fidiv jns or adc pop or jg xchg mov neg leave (bad) cmc jg call mov sub jle xor sbb adc mov das adc inc ljmp outsl js xor pop iret xchg sarb insb sahf push dec es jg push sbb (bad) imul adc lods aas bound mov and jg mov mov jg daa jb (bad) iret jne mov push lret push dec mov test inc jmp xor inc mov add jnp fwait mov push mov jmp inc lods mov in mov imul cmpsb xor mov mov mov jg cmpl cmp mov push in and jmp pop test (bad) cmpsl or jo mov mov mov adc inc shrb test inc fnstsw fbstp ret das ret jecxz pushf xchg add inc ror jns cwtl lods (bad) adc jg outsl inc adc inc mov pop imul ret iret mov cli jg pop repnz adc daa inc adc xor jg cltd jmp mov testb inc out xor mov int3 jno jmp repz js sub sub lahf jg push cmp sub bound popf divl lods adc mov jle jle divl mov outsb mov (bad) push (bad) xor add dec mov pop jg push mov icebp add adc out sub jg popf (bad) das and pop jg lods add mov and std jecxz jg inc repnz mov jns pop pop push pop aaa mov cmp lcall inc jg jnp data16 addr16 (bad) nop cwtl add pop aas ret jne push aaa add fs arpl pop out jle sahf xor arpl add (bad) jg mov xchg jae fnstsw call pop cmp lock leave clc cmpsb loope cwtl jg and xchg int add sub aaa out scas pop jg pop (bad) dec inc jle mov mov jg xor sahf lea mov int3 sti leave addr16 outsl mov mov pushf outsl arpl cmp adc xchg push outsb pop lock cmp lods inc xlat aas jg arpl push xor add xchg xchg icebp lret inc jmp jmp jg fisttp mov in pusha cmp add mov sub pop daa xor ja dec dec mov jg enter stos jb jg jl aaa mov repz push push outsl and sbb jg inc cmp jmp dec push mov dec pop mov jle out das jb and dec sti test pop jg cmp fs aam mov fisub test ds cwtl lret pop jne (bad) insb jg adc add jg fiadd dec push xchg fucom aas mov test pop adc xor test sub jg lcall gs not inc aas lahf cmpsb icebp jp nop push dec xchg lea dec dec mov mov mov outsl jg add mov mov rolb ds sti loope jp aam dec das and add loopne mov (bad) iret cltd sahf pop je jg cwtl xchg outsl or jbe dec test mov addr16 pop jg jl xor daa fnsave sahf js dec pop jg icebp je inc xchg jg or push push out cmp jno jl inc fs mov inc (bad) mov jg rcll outsb xor js inc jg lods adc and test and repnz and fs fwait inc retw mov pop int jmp jg xor fcompl mov iret jg pop out call (bad) jae movsl data16 scas sbb pop mov dec jbe inc aas stc (bad) outsl clc mov mov mov lods push sti push iret mov jne je in jle ja mov jns push shr mov jg fisubr inc jle es jl lea jmp jns sub add jb (bad) call (bad) mov pop jmp mov fiadd mov inc adc mov jno repz xchg sbb btrl or addr16 or popf sbb cmp cmpl pop inc sarl out add mov scas push rcrl movb add ret sahf aaa popa push mov sar jg in sbb jbe cs jg lahf movsb clc std mov ss (bad) mov and sahf sub ret push jg jns rcll jecxz mov movb lcall leave xchg pop jg or and je adc pop mov repz (bad) dec xchg sar jb lret add xor or push adc sub inc lret cmp add jae outsl mov out sub aas cmp cli stos out mov subl mov jg mov cmp mov mull jg and jg dec inc adc das push jg pop dec rorl xor and xor mov (bad) sti xchg mov mov jle icebp pop push sbb scas rcrl mov inc call stc push or (bad) test pop cmp jg pop mov push inc jbe pop jg (bad) mov jg jne and in sti shrb jns fdivrl sub push lret add stc xchg and cmp mov dec jg dec mov add inc sbb mov addr16 aam dec sub aas jg xor pop outsb cld mov jg stos (bad) adc jb jg xor les and push in dec xor pop movsl arpl push adc mov push mov ja push xor xchg mov push adc jg inc pop lcall out or jbe jg push outsb cwtl (bad) jp cmpsl jl xchg adc add jne into fdivrl (bad) lea pushf xlat inc (bad) mov adc mov jmp inc (bad) xor loop jge jbe push clc dec outsb jb lret leave mov rcrb dec aaa jg aad cmp xor gs xor into leave cli je aas cmp loop outsb inc dec sub ret xchg fs test out aaa fisubr dec push and inc ds dec mov ss xchg mov jg iret or (bad) sub sarb inc inc mov adc jle stos pop sub inc (bad) popf fcomps or aaa pusha lahf mov inc jo push pop cmp mov subl loope call push adcl inc xchg xchg imul pusha lcall jg into (bad) fcomps mov enter xor mov nop add xchg pop cmc addr16 test pop pop int sub (bad) movsb cmpl jle iret mov jg mov loop cmp pop pop mov rclb (bad) push sub mov jle lret adc jg fcoms pop lods and mov inc jp sub or in jo jg pop pop jne outsb movsb (bad) jg (bad) stos pop sbb jg add pop mov lret (bad) mov adc inc jg into sahf sbb rcl mov and fisttpll (bad) pop mov mov sbb mov jg pop mov xchg dec pop jg dec imul jg scas pop gs push insl aad cmpxchg and push and jle fistl lds loopne ja js jp outsl sub mov imul jo shrb xchg popf icebp arpl add jg repz stc mov dec (bad) sbb outsl dec gs jg ret idiv popa or aas fildl adc mov fidivr push mov push mov jg (bad) lret fs mov mov xor sbb aaa cli ss rorb cmp jg repnz adc scas lret (bad) pop dec xchg dec in fldt mov dec mov fsubs in lods shl mov xlat dec scas (bad) jg lea sbb and and cmp scas push lock add jg fstpt cmp cmp lods xchg jg mov mov jg (bad) loopne jo mov dec hlt bound fstp jmp adc jg xor jp leave cmp cwtl call sub shll push outsl sbb jg mov rcll addl insb out mov mov ss pop enter aam mov adc fs or push lock mov gs inc outsb inc popa jg sub xor jb inc cmp aad out into jbe jg out int cmc cmp jg jl sbb cmp dec sbb pop cmpsl fbstp das jg mov jno jg or cmp mov jp or jl xor mov iret cmp add lock pop sub xchg pop addr16 fdivrl sub fnstcw pop gs jg cmp sbbl push jg test inc fwait lret (bad) je cwtl std lahf outsl mov loopne mov inc mov jg pop lods fnstenv test int3 push fsubl jg sub xchg roll push scas push pop inc or mov mov push adc (bad) lock push (bad) jno je scas testb (bad) pusha and sbb jg fwait sub rorl or mov mov push data16 insl sbb lahf das jg jns and jb sub mov lcall divb sbb rclb imul cs xchg pop ret mov fs push push repz mov inc inc jne or jg inc mov cmp nop cltd popa mov adc xor dec push cmc inc hlt mov mov popf push dec rorb enter neg pushf sti (bad) dec fs push es adc fwait xchg icebp jbe adc fstps xor jge jecxz add (bad) repnz xchg dec int sahf out push xchg mov add bound cmp stos add (bad) fs adc jle push sub leave jns pop je rclb jg jbe aam and dec aas out ljmp mov jp,pt inc rol push or mov mov aam shrb mov adc jg shlb jg jl ja fistl jg lahf sbb pop pop mov scas loop pop inc shrb (bad) out sbb jg xor (bad) jbe pusha adc fwait jp push mov mov repz popf add loopne loop cld mov jne xchg (bad) jno jp in jmp xorl (bad) dec in fsubp lods xor jg mov sub jp insb js mov int3 pop mov jg cmp test mov dec bound pop aad cs adc push ja ret movsl (bad) mov sbb lahf aad into cltd dec jg gs inc xor add loopne and clc or jg in jb pop in jp push xchg jg outsb push push push repz sbb cmp xor loop out and imul pmulhuw jle push rcll mov mov dec outsl adc jg daa les js xor mov pop add jg icebp dec dec xor push push dec and mov mov pusha add xchg dec push test pop pop add js lea inc js jmp popa fstpt ret divb push mov fiaddl dec (bad) js mov shrb jb jg sbb lds add adc pop ret sub (bad) jg loop rcrl cmp push inc jecxz push loopne (bad) (bad) jg push mov in mov and inc in or scas jle cltd fbstp into ljmp sub adc or xor jmp mov dec out inc inc sub xlat ds cmpsl jne mov insl inc xor cmp or push mov cmp xchg sbb push jp dec cmp pop dec test imul rorl dec mov adcl sarb mov pusha jg mov sbb sarb shlb in or jg sbbb int3 cmpl jbe lea repnz push xor push es jmp jne mov mov ja cmp or incb or jb adc xchg mov mov shrb dec push mov xchg (bad) lods les sub aaa pop sbb jg fisub movsb jg inc pop adc jl push lret mov push xor in insb cmp jg jmp add in jg fisttpll jg dec xor ds sub lret or fcoms imul pop outsb shll cld sbb inc xor mov jg jbe rcrl jg add (bad) pusha pop nop jg pop push popa ss fdiv aas into add stc cli push add and xchg pop inc dec mov aaa ss xchg or rdpmc rclb loopne aaa cmp xor mov push mov or (bad) jg into imul shrb jbe in pop jg cmovb jg add inc lret mov popa jb adc jg mov cmpsl inc scas repnz dec mov jmp pop and call hlt insb jl js (bad) cmpsb pop push push fist jmp cmp mov cwtl mov jg push stos and sbb shrb jg hlt imul bound xor mov xchg inc push fldcw jg daa outsb psubq and int mov out push lret add sahf inc int3 loopne xor sub jg add fwait inc mov adcb pop adc mov or icebp out adc jg mov pop call out (bad) dec mov (bad) nop push jg jbe adc push std js clc xor insb jp cs jg push icebp jge add jg pop imull je test jg add mov inc inc adc mov adc xchg aas jle mov addr16 jp movsb inc jg dec dec fnop jl int inc out outsl inc fs lods je jg xchg sbb xchg xchg out and stc std int (bad) jae jmp (bad) jbe jg sbb in hlt fwait lea push lret mov dec icebp push xchg hlt aas jbe stos pop dec jae inc lahf fbstp mov add dec cwtl insl jg mov mov jg jns popf rorl mov cld dec mov xor push pusha (bad) scas sub lcall add jne inc dec sub stos cld cltd push ret add sub rorl fidivr mov mov ja jg push sub fisttpll jg test mov decb pop jge fadds or lret jo pop mov and jg xor lret test push mov cmp jge dec jb dec sub or xchg popf mov jg sbb mov cltd es hlt mov sbb dec pmulhuw and (bad) xchg push xor push inc xor daa add mov push jmp jl mov fldt xchg rcr pop jg mov cmp add xor fcmovb sar lret jg dec test daa sti xor jmp add ja push sbb dec cld xorb xlat cwtl lea fistl rolb xchg mov fstpl lods aas clc (bad) xchg into jg lahf cmc jp imul sub xlat mov popa aad add shrb pop (bad) jg sub imul dec xchg lds or je lahf lret push insb js jg push push cmp negl jg xor js inc mov pop insl rclb mov inc repz sarb add sbb (bad) sti push mov ja call inc xor cmpsl jl and adc mov pop adc cmp pop jne adc pusha jg adc outsl enter pop inc pop push push fwait mov dec arpl jg inc jnp cmpsb lahf cmp adc ljmp or lods xor jg sbb ret push jg sbb int3 mov push pushf push (bad) ljmp pop push add xor lea jg mov mov jg fwait push push xchg (bad) jg push pop jb push mov test sarb mov cmp jl push pop outsb outsl leave jg mov outsl js inc popf mov fldenv inc in sub adc pop (bad) mov mov push leave cmp inc cmpl mov ss adc les in imul cmpb lock xlat dec je popf jg enter add dec jg fmull xchg mov pop les loope jg xchg mov jl xor mov stos push jg in pushf inc mov outsb fwait inc fildll test jg inc xchg cmpsb mov mov and lahf fcomps int repz xchg outsb fildll cmpsb test xchg jg xor xorb test push mov or dec cli jb jg adc mov movsb loope cmc pop stc out sbb add arpl cmc adc arpl cmpsb fdivrs jae push sbb add dec bound loopne imul xchg jg pop cmp js cmp sub leave add lahf inc mov fidivrl lret aam or mov xchg xchg push test push jle es (bad) lock popf (bad) std jo cwtl mov jg xor bnd jne jg or mov push (bad) cwtl add repnz mov and add fwait xlat jne cmp sbb sub jg dec jl mov cld fidivrl adc lret inc xor rcrl cwtl leave inc mov pop ds adc mov jg fcomip imul scas inc idivl add lods sahf jle fldcw jg rorb pop cmp jg xor mov das jle fdiv push sahf add gs sarb notl mov lret push xchg js dec test jg mov push jg call sti test sub adc push leave mov pushf cmpsl jg (bad) aaa and out jg aad out mov add mov jg mov cmpsl (bad) pop jg (bad) pushf sub cmpl mov mov inc pop mov push push incb clc rcrl jl jg mov std jno,pt test pop xor sub movsb outsl sub je dec in add mov mov mov sahf scas pop mov ret test in xchg mov jle pop xor cmp jg xor push add jg push loop or dec jg fucomi cmp and sub (bad) mov jg or call jns xlat jg or in out xchg in pop add popa jg pop and int ds jg xor das jmp lcall dec sti aas or bound out pop lret mov aad push aas outsl and xchg xchg dec lods addb sarb mov jns xor mov cmc into std jg enter push jge jg jl repz xchg mov mov js push subl jno mov xchg lahf dec xchg lods xor inc mov mov (bad) enter test (bad) mov mov (bad) arpl shrl pop pop cwtl jge mov popf jg repnz mov jg std and mov or adc sarl into xor arpl xlat mov mov jg andb jg (bad) push cli data16 sarl mov fwait xchg jg fbstp mov add repnz int jns test std arpl insl and in lret mov pop lds mov adc sub jg (bad) xor push dec mov call and lfs pop or js adc call cwtl outsb jmp mov imul jp inc sbb data16 add push aas or sbb pop jecxz (bad) mov mov inc lcall and inc stc fidivr (bad) in outsl imul jg inc movsl xchg xor mov cmp dec mov dec mov push orl mov ljmp jg fnsave imul and jg inc add mov clc pusha push cmp lahf pop dec or inc (bad) jae mov add repz lods or loopne sub mov inc fmul test dec test lea cmp cmpsb cmp repz and shrb cmp push mov (bad) lods test call shrb push es pusha fiadd mov outsl insl dec jge mov in and inc push mov pushl mov mov fstpt or xor xchg enter push jg jp bound or int inc jl je cmpsl mov sub sbb (bad) stos in ficompl pop cmovp outsl scas ret adc push jg push xchg dec aam adc cmp lea jo jg divb xchg test pop pop sbb dec jge test aas jmp fisub xor dec mov (bad) or adc lea jo pop sub cld dec jp fcompl outsl pop mov outsb xlat jne (bad) pop jg mov addr16 (bad) or imul sub fidivrl test ret inc lret gs imul inc lahf mov and cli lret jg cltd inc (bad) pushf add jns push je mov jg fsubrl scas mov mov ja mov inc push jg lret jns inc push cmp inc adc out leave (bad) mov cmpsb imul and arpl mov jecxz cmp and jp add or dec pop xchg jg das stos xor popf and inc sbb loop dec jg test pop adc rep jle cmpsl lods xlat xor sbb jns idivb (bad) jg adc pop test sbb out mov add stc jg cmp lcall test clc addr16 jecxz jg rorb mov lea inc adcl cld mov mov (bad) ja into jne jg lret mov mov inc inc mov push cmc jbe mov dec mov arpl lahf xchg cmp lret outsb lods jg movsb cmp xor jmp hlt jg out rcl cmp out int3 ret inc (bad) and rcl clc repz inc nop in and scas mov jg jle hlt ss mov pusha fiadd xor push repz jg cwtl test out dec das int3 sti or ja arpl adc fld sarb cmp psubq mov repnz outsl lcall push les loop inc sbb jg inc das imul test mov dec js test ja test jg inc cmp mov test cmp std in jg cwtl cli mov es test mov pop fistl dec fwait aas idivb or aam subb fstpt sbb add ret cmpsl (bad) cmc jg pop iret dec xchg addr16 lods jg adc loop (bad) aad jecxz add pusha out jg jbe imul and scas or sbbl push cltd jg aad xor add andl jle adc imul mov jg repz jg xchg mov xor xchg nop sbb in jecxz stos in out aam test mov insb jne test jg inc xor pop ret push mov fsubrl cmp (bad) insb (bad) or in push ffree into aaa jno adc out inc or push daa xchg rcl and mov dec in out (bad) mov leave lret and inc loope ljmp rclb push dec ficompl xchg xlat jg xor scas cmp test jg xor loope ss xor pop fild push mov push es cmc fdivrs iret mov (bad) jg push push aas pusha stc sub inc xchg orl pop sbb fnstsw push decb xorl cld jg mov and lods lds shl outsl (bad) and mov xor jg jo lret popl dec shll mov rcrb sahf stos daa xor (bad) jle jmp idiv fisubrl xchg imul mov (bad) mov add in jg aad mov jbe ljmp shlb or mov inc or mov lcall xchg ds or int3 or xor jg negl cmp nop insb jg (bad) int mov jge jg pop mov push jg push ljmp push or mov inc fbld jo adc lock lcall test test in jg hlt shlb jg arpl (bad) pop inc dec jg insl jns ffree insb int nop ja inc jle aam mov cmp sbb cmp jae jge fdiv push aaa daa leave mov sub dec mov sti test lods push popf mov lcall dec jge adc aad jg mov iret pusha mov add pushw jb push in jg xor je jg sbb xchg and push push jecxz jp push or insl adc and mov inc into pop jl (bad) sbb cld jg sysenter aas pop (bad) les xchg xor cmp into (bad) dec cli int jne sbb mov mov jg adc icebp aas xor xchg xor fldl2e jae jns hlt loopne scas imul xchg jg dec sub xchg xor fstpt or mov sti xchg inc mov xor lret jg xchg pop sbb repnz jg add shlb jg mov xchg fstl jge int inc dec negb and xor sub cmpl fistpll xchg mov pop rolb mov aaa rcrb cmp pop push mov (bad) fdivrl cmpl jle or mov lds dec ret jno lea loopne jmp jg addr16 or jb jg add scas es sbb dec pop outsl sahf das mov imul xor js ja test or (bad) idivb or cmp fistpll pop mov lcall cmc inc mov imul (bad) mov leave scas ja (bad) mov cmpsl outsl xchg mov in sti jmp dec les movsl jg icebp aam xlat in (bad) mov xchg xchg lock jecxz push gs mov cmpb pop fbld bound jg push inc ret add roll jg sub inc addl je daa in jg js dec lcall push hlt enter mov add inc aaa loop sub and mov ret ret add xchg adc lret (bad) sbb mov dec outsl xchg push xchg sahf in repnz repz jo (bad) mov dec or repz gs xchg hlt sahf mov mov inc jg jle mov arpl test cs push jg lds add aas dec ja adc and ret adc shlb push adc cmp outsl xchg jle rolb (bad) cmpsb ja or jno mov idivb cmp stos push pop and jg lods mov xor stos test (bad) sub cmp jno xchg and loope add fcmovnbe xchg jg pop push mov and mov inc cwtl jg lds mov pusha fistpll fisub mov mov push imul sbb iretw mov cs jg rcrb jle push jg insl mov xor repz lods xor jnp bound jecxz mov scas xchg js aas rorb ror mov sti test outsl pusha jnp mov addr16 iret xchg in subl scas adc sahf cmpsb lcall jg xchg pushf and aas dec ss inc cli push mov pop mov gs out je cmp inc and sub dec (bad) jg cmc mov jb pushf jg outsb lea mov jns nop (bad) out cld dec sub (bad) or xchg iret js test hlt aas mov xorb sub jg and addr16 mov dec xchg dec lds scas adc mov cmp inc push lds bnd lret xchg cmpsl and nop out inc or cmp jl inc xchg mov aas fsubl push dec adc inc mov stos xchg sbb (bad) xchg int pop or mov jne xchg in inc cmpsl in inc add sbb jge cli aas ds adc stos jno jbe jg inc pop movsb inc loopne jecxz pop mov pop leave (bad) mov mov test mov adc mov lret and jne jae cmc xor jle jle mov mov mov stc jne fs jnp lea sub popa jg xor clc bound (bad) mov jg mov scas sub xor test lea shrb cmp xor dec jbe mov sub adc pop sar mov in lods in dec jno jge mov sub sarb xor icebp pop inc add jns inc out jg adcb and jg mov jbe or pop jp sub mov arpl scas sbb push sbbl repz push push (bad) xor inc cmpb fs mov ss popf insb push or mov cli cmc fldl mov xchg fwait inc mov cmpsb or (bad) xor dec cld scas xchg imul and push jns fidivr jb jbe ljmp fbstp xchg out pop addr16 jmp xchg movsb mov adc pop lea lock mov mov push inc xchg icebp jg lods inc jb mov pop jg sub fcoml outsl jl mov psrlw (bad) leave mov cmp jg data16 push jg notb cmp and out popa push gs inc push sarl mov dec mov aas inc popa push xchg in dec outsb xchg or shr lret (bad) jle fldenv inc push jg jecxz dec data16 or mov mov js or into add mov sbb movsb addr16 or shrb stos jg das dec cmp dec mov mov fs sbb mov jg sahf test push jg pop mov pop icebp adc or inc les mov sub sbb jg and cmp pop into jg add adc xor xchg or in xchg fldl (bad) mov add outsl mov cmp aas roll jg pop pushf sti out pop sbb mov gs faddl (bad) mov pop mov aaa pop xlat jmp jg cmp mov arpl jns dec jg jae pop jno mov inc test fimul mov (bad) out scas mov jg loop jmp aas mov int jae cmp add scas mov xor pop jbe jb lret jg mov pop and test ja loop add ret mov push mov mov repnz cwtl jg aam dec out pop arpl fidivl add or loopne in fcom jnp or (bad) or push addr16 jg dec out push jmp dec push cmp jb jg dec dec imul scas loopne dec enter jg movsl je xchg ja fwait jg sub jge add cmp mov sub loop xorl nopl inc aad jecxz xchg aas add mov sti orl loopw mov mov cmpsl leave pop (bad) call ds push test neg mov jg inc sub lds push fcmove pop out test mov mov pop adc ja gs loopne out leave mov (bad) sbb cli daa jmp push (bad) pop shrb push mov sti arpl inc clc jne ja cmpsb xchg push fwait cmpb (bad) xchg jg mov or out xor ss ret sarb js into sahf sub daa jg lods push mov jo lds pop push js cmp mov or in pop mov mov insl xchg negl or std (bad) pop jg xor mov xchg jae mov push outsl dec sbb ja lea aaa popf cmc (bad) or mov mov icebp inc out jg and xchg mov (bad) jg dec fstl mov sub pop cmp je jne ja sub mov xchg and adc test idivb mov ret push (bad) mov scas repz jmp jg fmuls sub cmp mov pushf push out add dec jne add jg inc dec push aam les je jg mov jg or nop push jg dec into in jge cmp shrb test inc add pop pop (bad) insl or daa push hlt cmpsb mov jg jne cmp inc dec jg mov and jg xchg or jae jmp ljmp jg ja (bad) mov test in xchg cmp jg mov es hlt mov mov icebp imul enter sti imul (bad) cmp jae ss jg rclb jg and stos xchg cmpsb push scas (bad) rclb jg fimul (bad) sti xchg mov adc cmp xor insl jg out add push (bad) mov xchg jg push into icebp loopne ljmp in adc add cmp nop dec mov (bad) mov xchg jl mov mov test popf fisttp xchg bound jb loope xchg inc sbb dec out sarb in dec mov jg data16 xor or jle dec (bad) sbb xor jle aas adc add (bad) notb cli (bad) adc ljmp jne inc xchg sbb imul inc stc pop dec jbe push xor pop push cmpsl adc mov imul cmp mov jg (bad) jmp or xor arpl test mov dec sarl jle orl mov pop pop loop add das fdivl imul xchg jnp js jg or insl adc imul mov mov negl outsl push mov and sbb mov push ret loope sti jg mov rol jg addr16 lcall in popa stos dec push mov dec stos (bad) mov and imul push mov lods push mov scas loope lods inc xchg movsl mov mov sarl xlat pop dec jnp sbb sti aad sbb ja fistp cmp imul call cmp repnz mov mov jp mov ss into (bad) aad test xor xchg jg pop repz in fwait test add scas jg push stc popf pop xchg fnsave notl pop push sbb sbb xor out outsl mov ja pop adc jg aam repnz push or xchg in dec je stc sub bound adc insb (bad) hlt jg xor aam pop into imulb call ja push aam addl in pop mov je mov xchg xor add pop bound jg test jno mov lea dec call pop mov (bad) lock das dec jg out fcomi jno scas aas add xor loope inc mov pusha cmp lret lahf or jg (bad) mov int stos aad mov mov jmp push pop out lahf (bad) mov jnp jne repnz outsl dec mov vcvtps2dq mov lods jg jmp dec je,pt std test movsl inc push loop jg js in les jg out out add imul jo adc jne,pn (bad) pop pop insb mov stos and jno outsl jg popf and jo mov lds rolb in (bad) push scas pop repnz jp (bad) je inc jg test aaa pop inc (bad) daa jg push les xor test jg (bad) movsl or clc aas xor mov sbb inc addr16 push outsb cmpl js ja test push movl mov dec xor ficomp sbb std inc xor dec xchg and inc add or icebp push cmp lds dec jg mov xchg (bad) mov fsubrl stos into je mov lock stc repnz (bad) jb cli jg das test push jg pop mov jmp xchg dec jl ficom mov adc fcmovnbe adc push (bad) mov pop imulb mov out sub jns pop aam xor xchg mov jle fmul sub test cmp and add dec out repnz pop cmp cli inc push ja fiadd adc repnz fs mov mov pop cmpsl stos inc inc aas mov cltd outsl rclb mov pop fildl jg inc aam xor push jg rcrb jns fwait add scas in mov mov out jmp pop xor pop ja or dec xlat hlt sub sbb pop jg pop mov push lahf daa loope xchg sbb add lock pop outsl loopne cmpsb xchg insb mov xchg and fsubs inc in jae add call adc (bad) int3 mov mov jo cmpsl sbb jnp (bad) in jns incb push in sub jmp cltd dec in sub in (bad) fcmovbe outsb jl dec add nop mov adc push jg dec jmp inc fldt mov xlat out jg scas inc (bad) call lea adc es (bad) (bad) lret jmp or jg xchg sbb xor xor mov mov mov pop dec out test sti movsb fnsave jns test arpl jg xor (bad) and sub or sub and jg in fidivl jecxz jg icebp mov data16 xchg or cmp repz lods scas ljmp dec cmc jg xchg xchg push ss mov pop lcall add fstps mov fisubrl std jg popf xchg dec mov movsb mov jo pop sbb cmc insb xchg mov dec jg or (bad) mov xchg loop xchg shll loope lods adc test mov repnz xchg pop jmp es movq xchg fnsave cmp das push imul dec nop scas sub outsb add inc mov mov stos xor push inc notb jb jg jmp rcrb push sub in aam in jg jne push inc or ret push jl enter inc outsb pop (bad) insl xchg mov lock shrl pop sub sbb ret jbe ljmp (bad) mov xor mov movsl jg (bad) mov mov ds xchg dec xlat or jg jo lret stos aas add mov push (bad) out sbb divb mov and repnz xchg or jbe jns lea movsl dec cltd outsb or and lret rcrl enter xchg push and inc mov adc jg mov mov jg cmp stos mov cmpsl mov inc inc mov orb inc int3 leave ret jg into cmp cmp push push (bad) mov (bad) push mov aaa and sbb pop mov cmp fdivrs cwtl (bad) jge inc ja jns imul sub adc mov lcall int3 add incb xchg data16 jo sbbb xchg aas add out mov (bad) outsl jp into sub cmp jg push in (bad) mov jg mov leave lds add pusha ss andb lcall mov movsl jnp lahf int3 (bad) jne cmp jo test mov push jg das or loopne leave push pop repnz out mov addr16 push nop sarl mov out add dec adc mov jg xchg mov repz xor mov push std inc fnstcw aad adc call adc mov inc (bad) jae aas (bad) xor ss movsl inc pop pop jg adc push (bad) jbe loop jo sub loopw add fildl lds push lret sub (bad) mov xchg or xor jns outsl add dec ja cmpsl inc jge xchg stc rclb sub mov fld mov gs repz adcl lahf stc das jmp sub in bound andl jg cld mov call sahf cmp pop dec sub mov into inc (bad) pop popf jg jge sarb jne mov mov jae mov adcb inc pop mov outsl mov into aaa or push in inc jp and outsl mov jg cli mov les xor mov adc add push out fadds push mov jno iret jg ljmp mov push lahf ja dec sbb jg rolb xor cmc mov jg std movsl push and push cmp sti pop sub iret mov or mov loop cmp and cmpsb lahf push jo scas xor mov cmp arpl mov sub sbb repz mov ret dec stc test bnd or sub jg ljmp les jg dec push fistp into jbe aas addl pop cmp jg in adc fidiv push idivb or sbb gs mov (bad) mov insb mov aas repz cmp adcb xchg aaa jg jne jnp and push jg cltd repz sbb dec sub jle cmp cmp test mov clc fistpl sub inc jmp scas xchg pop mov fsincos push cmp rorb fsubs popf pop xchg imul cmc add or push (bad) mov aam pop sti mov add das repnz mov pop pop push jae jl imul mov ja pop add cmpsl mov sub mov nop leave sub and jbe and jg mov lcall inc jae cmpsb sbb dec dec mov leave push add clc pop aas ret scas dec mov jg repz pop xchg fsubl push jge xchg jg sub ljmp minps in jmp icebp jg mov movsl aas jg outsb in imul cli gs into jge mov inc loopne in jg popa stos repnz mov in mov int3 push pop jno jg jmp mov adc xor jg mull push cmp fwait iret jecxz sbb jg loope sub (bad) (bad) cmp icebp stos std jg push (bad) cmc fwait ds xor leave dec popf pop pop fneni(8087 dec std insb (bad) fmul aad popf xchg imul jo prefetchwt1 scas pop jg adc mov loop cmp jg pusha pop sub cmp jg test data16 aad (bad) aas lahf jno inc aam jo cmp push orl dec xchg jecxz xor adc jns bound adc in shll arpl xor xor jg dec je push jp jb push std aam test inc addr16 and rclb in jg mov jns mov fmulp jg inc adc inc fnstsw addl loopne rorb mov jl jg lds xor scas insb xchg jg out in or jg jns lds pop jb add les jg dec int repnz mov adcl (bad) or lods lea push aas bound daa sbb jae,pt cli pop push outsl sti pop out stos add sti cmp rol or add or sbb add cs insb push inc jg (bad) aaa imul jb mov roll scas jg test stos movl xchg jg xor push (bad) cwtl xor jg pop lahf inc inc adc aas fsubrs (bad) lock inc in inc mov les or jg notl (bad) addl fs cmp jg mov orb jg sub push xor cmp notl int repnz (bad) out test clc dec fcomps jg jle inc sbb cmc mov jg dec xchg mov ja loope,pn xchg mov and dec jg mov inc jg sti xchg fisttpll xchg dec jg push xor jns fs and inc (bad) popa sub shr aam jg push jbe mov int3 pop pop lret orb mov lea das arpl push mov mov inc les aas adc push inc xlat mov jo outsb emms push push (bad) sbb insl rolb push mov jns jbe mov cs ss cmpsl push cmpb aam out sub jg pop mov jg xchg pop (bad) repnz jg mov inc jnp sub cmp mov or jg mov rol arpl pop fdivrl lret mov push ret cltd jl lds fsubrs js pop (bad) jmp sbbl repz jg push sub dec fs jg mov cmpb pop test pushf and cmpsb repz mov test inc or and imul mov movsl xchg pop sbb cmp leave clc arpl mov adc inc jae aas xor push dec jnp jg push sbb inc jns out movsb jg insb lea pop fistpll fidivr mov cltd xchg fs insl pop add sbb adc out add jmp sub aad mov and icebp cmc cmp dec out ljmp aas sti pusha or (bad) (bad) jg fistpll dec pop sub jg cs mov lret sub das cltd lret pop jg mov fiaddl xchg pop add pop jg adc pop push mov lcall cmp cmp jno cmp lahf jge cmp mov mov jns xor leave (bad) add mov stos inc sti inc jg adc cs mov jg mov outsl mov add xchg pusha pop mov adc fnstsw pop jg and stos jg scas into (bad) (bad) or xchg pop stos je push movsl sarl test psubq popa arpl or dec lret fistpll movsb and sbb jg std sbb sahf mov stos jg movsl scas jae add std jg sub popa pop jns scas sti jne repnz push (bad) nop jbe jg (bad) adc push sbb in dec insl pop jno lds jg addl pusha jg xchg jmp inc scas push addr16 sub cli mov es hlt dec cmp jb dec sub js xorl (bad) stc pop aas mov xor ja push xchg adcl repnz loopne mov mov or push leave xchg push (bad) xor jae out jg mov add adc jmp pop cs enter loopne jg (bad) lods (bad) mov iret jg push shrb inc data16 cmp sbbl popa jg inc push aad sub scas xor xchg jg cmp add xor (bad) xor dec mull pusha jne or repz insl (bad) mov xor out popa mov mov xchg movsl pop push imul int3 inc movq addr16 push pop es mov fbld push das mov adc jg cmp nop in arpl pop adc (bad) pop outsl jl (bad) lea pop fdivrl cld jbe pop or sbb jae ficomp and jg sbbl push mov pop jae jl adc fwait push ja and pop mov sub (bad) jg xor xchg (bad) mul (bad) in mov jle jg pop dec (bad) jb pop outsb aas xchg xchg lcall insb dec cmc movsl fdivs pop jg cs and lods jg pop push outsl (bad) push data16 pop clc cmp jne std test add adc jg js repnz (bad) in jg xchg (bad) clc jl sbb dec loop jg jne xor jg push jp inc mov mov and movsl jno xor mov and jo in bnd jmp cld inc push xlat jg aaa jbe movsb mov inc jg call addr16 jg sub shll dec aad jl xchg fsubs imul and lea jg cs leave add xchg jg fstpt add cmp push push inc mov aas popa adc mov repz push sbb imul inc ret rcrb mov or inc insb mov pop sub fistpll icebp pop (bad) jmp cmp or jnp xor scas xchg cmp fwait mov and jbe jp sub push daa dec bound out inc daa mov in stos fild inc jns outsb sub pop push push test negl jp clc jg cwtl add cmp jg pop outsb popf jg,pn cmp and fs mov xor and lods jg pop xlat pop push or ss mov repnz pop mov inc cwtl in pop fbstp jg (bad) movsb push lret mov out and in jae adcb sbbl add nop jecxz or lds shlb jmp mov jg sub dec lcall dec sbb mov hlt inc dec add jg inc mov pushf adc xorl cli mov jg push jg bnd push cmp out (bad) daa inc incl adc dec dec add dec push mov jg not pop fwait jecxz xor sbb pop sbb aas lea mov sarb inc (bad) cwtl cld pop movsl jg mov test xchg pop mov int3 mov pop cmp jmp ljmp mov push (bad) loopne jg push add pop repnz jg adc jae stc movsb jg ror mov and int3 jg xchg test pop mov xor (bad) lea mov cli xchg pop dec xor mov cmpb lret inc pushf jg push dec add cmp (bad) push shlb xchg aam bound roll and jg daa inc inc lret or enter jmp and lcall out mov cmp mov repnz xor mov in push dec jmp jp xor les jg ds sbb add ja repz lds leave scas addr16 aas xchg (bad) push test insl mov sbb outsl mov fstpt cmc out (bad) into mov lock mov lea sbb scas push (bad) cwtl fs in aas jg std pop repz jg mov dec push js jg pop fmull adc mov pop pop stc jg cmpsl mov inc mov lds mov cmpsb addl dec jg push out and sarb fisub shlb nop mov mov mov inc inc aas jns (bad) push jo repnz hlt in cmpb xchg (bad) jno test push test adc dec inc scas jecxz test inc loop scas pop sbb lahf inc inc pop icebp push mov dec es rclb push jmp adc sub jo data16 xchg xor (bad) and push xchg xchg mov cmp lock mov jae mov test or jg inc ljmp jp sbb mov jg pusha movsl popa inc cmp (bad) sub movb ret inc mov lock rcll dec sti xor cmc jno xor insb vmovdqu sbb inc jg xchg dec add mov or cmpsl jg sbb in jg adc pop dec xchg dec jg mov inc jo stos les jg js sti fidiv lods jmp pop pusha jge pop inc out vmovdqa mov jl and ret inc loopne jg imul repz lock jg daa lcall sbb mov out add cmp push test (bad) cmpsl and inc mov imul sub popa in pop dec jg test out xor sbb clc fidivrl (bad) xor xchg jg mov add repnz jg sbb rcll ret pop sub jg pop stos test push shl mov gs mov nop in lea cmp pushf pop push mov mov adc push pop xor popa test jo mov mov loop and jge aaa lcall lret lret mov ja adc idivb scas mov jg cmp sbb add sbb dec mov jle mov (bad) sub outsl jb mov loop aam mov int3 cmp hlt pop std ret cmp and xor push sub mov cmpsl dec and stos mov fidivr add jbe cmp icebp xchg scas pop pop test cmp jl add rcll inc mov in inc jg popf loopne jge cmp out pop or jg lods and jg jns add mov cmp mov jg mov fwait mov je xor or mov and rolb pop push js mov insl fs stos pop jo and xchg jne jg (bad) repnz das ds or lcall outsl mov push mov dec ja mov mov xor or mov dec (bad) cltd lods pop cmp nop js push lret fsubs into fcmovnb (bad) sti scas jns scas outsl ds push insb adc out icebp pusha push jg cmp adc jp jg mov aam pop arpl cmp (bad) fcmovbe iret sub ja test pop push pop sub jg push mov add jnp jg mov fstpt testb dec std (bad) jg cs sar jnp adc pop adc dec xor inc insl sahf outsl xor ret xchg (bad) mov cmp insb ja fidiv or sti pop movsb lds sbb fldenv arpl or (bad) aas xor lcall dec mov jg or pop jbe data16 cmp pop pop and mov aam sbb (bad) sarb jg and outsl imul stos arpl es movsb rclb xchg mov cmpsb jle jl mov mov iret jg clc mov sbb ljmp xchg mov test je cmp xor aas mov fstpl jg dec push cli js mov jg test jg lods and (bad) test js rol outsl stc xchg add out jg jno lds jo movsl jp cmc fwait data16 xchg and dec in mov push pop lret in mov jg (bad) adc and imul lds insl push into mov mov neg hlt pop xchg (bad) repnz mov je sub and push in lsl aam leave je sbb jl push dec clc (bad) repz sarb cmp lods mov mov leave jb jg scas dec xor movsb sahf jg add jg add lcall xchg subb xchg lock mov jae test mov cmp insb inc shrl xchg jnp push pop add inc xchg nop jg stos pop inc stos mov mov add hlt repz xchg jmp dec out adc test sahf popa outsl jge cmp pop pushf mov xor in sbb inc jg xor jbe (bad) out or jb pushf sbb push jg in and lea push nop push mov imul pop inc mov adc insl movsl jmpw jg lcall jg test aaa or out mov cmpsl lods lds adc repz rcl pusha pushf push fnop fdivrs mov popa fwait jbe aam jg xchg movb inc push adc cltd (bad) jg stos dec adc jb arpl mov mov dec push sahf fsubs loope mov jno outsl jmp lret jg cmp lret dec push jg addr16 shrb jg (bad) mov dec mov push sbb cmp mov outsl jb rcrb jno jg dec xchg mov sbb les sahf arpl push xchg into ret mov aad mov jg adc dec test std jg pop aaa daa loope out sti shrl fldcw push imul sbb xchg (bad) pop outsl mov jp adc (bad) jae jg ds lods add jbe shll push mov cmpsl and jg cld jns out or jg dec std pop mov jg jge push push aam push fiadd std mov and roll jg inc jae push stos or decb ret lahf push mov jg outsl out jno mov add imul lret aad push pushf dec pop cmp cmp or test jg sub xchg mov out pop inc lea cmp je scas dec xor jg lock or popa xchg mov loop inc enter push mov jg xchg fwait cmpsl lock mov rolb repz loope dec inc jl fs jg popf mov sbbb xor inc lret jg (bad) mov xchg push int3 xchg jg mov sub mull and stos xchg pop inc mov das pop xchg dec cmpsl bnd scas mov mov addr16 (bad) stc push test aaa sbb cmc jg xchg fsubrl popf aam (bad) sbb and jecxz and stos imull imul push or mov cmc lods lahf dec sub mov aas push shll jnp (bad) (bad) mov dec pushf pop iret lock jg repz dec int3 pop pop mov in mov and aas movsl push add push adc aam je imul aas lock ds inc loop push sahf sub sti out fwait dec push xchg jmp inc mov ja aad jbe mov in cli and mov adc lea push orl mov jno xchg pop sub xchg pop inc loop inc pop jg xor mov sub inc jge mov std cmp ds xor dec iret mov loopne push sar in in (bad) pop mov pop pop fsubrs leave xchg jg mov cmpsb jbe loop jle xor iret xor mov mov les add dec xor pop fcmovnu movsl lock ret test adc lret insb jg xchg sbb arpl mov xchg in das pop dec or shrb icebp iret stc jg scas (bad) mov jne sbb pop pop push push jg outsb pop mov lret out pop mov std jg outsl (bad) (bad) frstor mov (bad) mov pop adc jb xchg mov insb push and xchg vsqrtss and loope cmp scas lret insl push push repz enter cmp ja push (bad) jbe lds inc aas rolb hlt fstps jg inc das mov cmpl and inc jg push xchg mov cmpl sbb sti (bad) mov out mov push xchg jns jg out cmp js mov mov fist aas inc icebp mov xchg and inc (bad) dec out mov xchg das mov pop jg stos push sbb and insl inc fmulp jg sub pop test push (bad) jae and insb (bad) popa rcrl jne sti addr16 lret outsb pusha pop cmpsl in xchg xorb nop mov inc les fildl cmp mov test add outsb jp jg push xchg jg push test clc cmp leave mov (bad) out stos pop jmp xor jb dec jg pop and lahf sub into lock jg movsl jne and sbb mov ficomp push ljmp pop out inc cli aaa mov rcl cld adc ret fxch mov mov dec inc dec repz ret jnp inc xchg adc jg and inc dec addl pop enter je xor and push push sub mov jno dec cmp add fs in push or pop adc repz add dec jg repnz or or jg loopne cmp fdivrs xor fistp cmc pop adc je cmp jg ret pop dec in (bad) jg cmp pause sbb or mov flds sbb pop jg insl and or xlat sub js movsb jg sbb xor adc jae add (bad) or jns loope (bad) jb dec ds scas addr16 outsb out clc jg xor stc jno cwtl push inc bnd push push add call jp fstpl loop jg dec outsb addr16 leave movq xchg std cmpb adc sub loopne add dec imul pusha xchg jg shrl test out push cmpsb adc ret pop xchg add test inc jg sbb dec mov (bad) xchg xchg lds push dec mov call ljmp popa into jo jo loop (bad) cmc rolb jg or fsts out push adc jg hlt loop and inc arpl fcmovu rcr inc ret push cmpsl or cld jle mov push mov (bad) pop jg mov sbb int jp ss ret incl mov mov mov jg sub cmp jg stos fsubs inc mov xchg repz sti popf outsl test cmp aad pop and fimul addr16 xor xchg (bad) sub aad lahf mov ficompl pusha xchg movsl dec gs jg scas push xor adc test mov (bad) pushf xchg (bad) xor imul pop jg xchg loope leave bound jg cmp push xchg adc jbe add pop stos in jg xchg outsl mov inc insb fstpt nop js adc cmp mov pop test (bad) in jno ja (bad) je jg loop cmp in cmp push out jno jne pop add xchg inc mov mov test cltd or into adc wbinvd mov decb imul add test jg sti notb adc lock test into cmovge xchg cltd dec jnp sti jns push clc push inc mov int pushf out push mov pop pop cwtl test add aam sbb jg xchg nop test (bad) mov pop fwait inc orb lods pop (bad) jbe xchg jae fsubrs pop loope sub and aad jge jb idivl push add mov insb xchg (bad) xor cwtl in cli jg mov call mov out cmpsb xor sbb repnz and dec (bad) int jg iret shlb js cmpsb je roll dec clc lahf push jg ljmp jg pop push mov pop fisttpl ret adc jnp dec ret dec mov push sub es insb dec test pop jg dec pop pop pop and cmc insl (bad) sbb mov arpl sbb jmp nop adc inc or pop inc js jg and push outsl adc or jg mov mov daa cld stc (bad) clc dec pop dec sbb out inc lcall fwait aas push dec cmpsl negb cmp mov jmp fcoms into pop xchg ret inc sbb add mov cmp jg mov fildl xor cmpb lds jg jmp in repz jg mov (bad) pop outsl imul lds imul sub rolb jg inc xchg push mov aas loopne sbb jg fisttpll idivb stos cmovns push jg mov and jne roll fsubrl add adc push dec popf jecxz movq adc popa aas mov int add inc int3 movsb mov push xchg out ljmp js cmp mov jg adc xchg inc setg inc aas stc sub jg adcb das decl aaa adc xchg dec shl or popa dec ret (bad) cld and or ljmp cmp jg xor sub jg test or fmulp xor mov push adc push daa dec inc push aas push add inc inc sub addr16 jg cmp imul movsl mov push loopne pop adc or sbb add cmp nop popa push aam out pop and ds aam dec rolb sub (bad) push xor mov (bad) lcall jo push inc xlat loopne rorb xchg js out pop jg sub add dec int push mov std pushf int3 jmp les or je mov in icebp dec cmc mov and xchg gs mov in rcl scas idiv inc adc lods mov stos pushl data16 mov sub jg (bad) inc jge insl cmpb and push push loopne jg mov (bad) int sti insl jg dec enter lods aaa jg subl jle aad sub (bad) sub jmp nop bnd repz push jg pushl xorl inc jp sarb jg iret inc jmp inc mov dec add push (bad) mov or jg mov pop jo jae sbb popf imul insb mov stos cltd pop daa cs inc xchg push pusha (bad) jg cmpsl in dec into mov imul cmpsb or sti jne sahf push dec push (bad) xor cmc mov mov jno in mov imul sti push aas mov add and cmp (bad) scas movsl bound pop jo dec pop add pusha jmp in addr16 push and sbb inc mov mov loopne or push dec jae sbbb repnz jle inc mov jg aas cmpsb lods mov jecxz test lret mov cmp push dec push sarb ss loopne adc inc cli xor dec mov in adc (bad) in jg mov cmpb jp xchg (bad) mov push and mov into cmpsb xor jnp sti fs ljmp scas arpl or imul (bad) mov add inc jle jecxz mov pusha mov mov push cmc pop inc xchg cmp das inc pop mov push popf cs scas and leave cmpsb cmovge pop mov movb push popf pop in push xchg rclb dec lea (bad) jg xor rclb ljmp jg mov (bad) pop fwait xchg sarl incl jl adc out scas jno cmc in das fimul inc insl mov sub push scas lahf cmp int jp addr16 fbstp add dec clc pop (bad) mov out cmp mov jp aas mov cmp inc mov leave sub push jmp mov inc lea je daa inc jg jecxz mov xlat adc (bad) into mov add xchg add in or popf jg lret sub arpl aas stos aam mov leave jmp inc sub jg popa int3 or dec push push dec xor mov out pop arpl xlat movsb fimul push inc fstl pop jmp inc pop jg cmp iret hlt mov lds mov push pop fidivrl jg int lds adc jg cmp jmp inc dec jg into inc sub mov mov fcmovb pushf popf jg scas mov push mov add mov movsl inc mov add xchg mov cmc fsts pushf mov inc jg mov je add ljmp addr16 xchg (bad) mov mov outsl pop dec inc mov jg addr16 mov lret mov sub jg xor xchg mov es pop fcoml xchg rcrb and jg inc sub aas jg mov int3 push jg addb jg cmpsb sub fistpll out jno sub repz cmp aas mov sbb jg,pn je xchg lcall pop add sub xchg les and js xchg jg pop aam repz movsl icebp xchg mov ljmp dec fwait jg cmpb jg xor mov cmp and ss lods sahf mov jmp test sbbl loopne popa in aas xor adc shr add lcall loop jg cmp pop pushf mov sub push mov push negl gs jge or mov cmpsl push jb dec add jg pop popf nop outsb sub lcall jo outsl jg clc xchg lock div xor lds dec jg or jg jp sbb jg add dec jg lret inc mov out or popf test movq inc mov sti stos int3 or xor cmp icebp sub lret mov aas rcrb cltd or inc (bad) push xlat cmp push jg test pop (bad) jg mov xchg inc call les or aas aam pop sbb mov push jg cmp (bad) cwtl lahf sbb (bad) aaa mov jg cmp daa lcall loop xlat mov js adc orb jge jg pop mov add pushf or xchg cld mov aaa jae and or movsl aas mov loop lods mov (bad) outsl or inc push leave jg pop fs push cmc mov xor lcall dec dec jmp daa je cmp xchg pop je imul icebp jg mov movsb clc push mov lods xchg mov dec inc ljmp rorl sbb mov jl ret push mov mov jle popa fmuls fildll push gs cmp dec or ret (bad) inc movsl jg push jp xchg xor stos jg inc sahf insb sub dec sbbl and mov call sub mov (bad) jge xchg pop js cltd ret fstpl jg scas cli or rep xor push dec loop and test add jecxz xchg inc or sbb (bad) cltd mov pop out lret jg enter ds cmp mov push lcall sbb js xor fimul ret aas in lods or inc outsb pop ret insb mov pop rorl pop jp aad lods ror dec pop pushw enter jg jp sub lahf xchg pcmpeqw (bad) jo sbb lret movsb or jg fistpl mov mov push bound mov push orl lcall scas jg dec in mov push sbb insl loope push fsubrl jg iret xchg sbbl add mov out inc push jg mov sub addr16 xchg testl or jg xor lahf es in xchg mov inc sbb pop or dec mov out (bad) push mov out test pop aad jns adc mov jg insl aaa jl cmp in loope outsl pop dec adc jns sbb push mov jl mov fidivr into pushf inc mov les jg test mov fwait insb (bad) xlat xor jg xchg jmp pop pop iret outsb jg orb mov sbb sbb jg mov jecxz mulb popf out and jae adc dec cmp inc sub dec scas sbb nop inc or ror (bad) dec add insb dec mov push mov movsl and pushf cmc mov and pop (bad) insb data16 shl sahf (bad) xor les andl gs lods (bad) aad sub mov push stos mov pop sub addl pop pop cmp xchg aas notl sub adc jns (bad) cli in dec idivb aaa sbb or rclb rcrb jg jp int mov adc pop push mov out xchg sub cmp mov or shlb pop imul xor lods arpl sub nop enter xchg movsb xor jg es and das lds sti (bad) xor cmp lods insl sub sub push jg les movsl enter mov xor xchg loopne ds pop cmpsl jo jae (bad) repz sub jg cmc cmp push and je mov shrl jg jo pop mov fcmovu mov mov inc dec stc or dec out ds repz jne cmp rol jp pop sbb idivb push icebp mov addr16 lea push aad cltd push pop insb xchg jae loope movsb test fidivrl lds or adc ja jbe outsb jg pop les cmpsb jg call xor imul push jae mov pop stos push pop out fdivrs push int scas mov push fidivrl push aas sti cmp fdivrl xor js add xchg jp fs sarl inc out jg mov jns loope jg pop pop mov sbb sub xor out jg test xor scas jg subb aas movsb js (bad) aaa rolb inc jg lea and xor sbb or jg ja inc sbb pop fbld js movsl mov jg push or mov repnz adc jle sti insl in xchg js push pop int3 js sahf out jg ja jmp mov add cs outsb or push or (bad) pop jge jmp cmp sti popa insl test es push push jg jmp (bad) daa fiadd jg outsl xchg fildll jb cli push mov pop pop pop mov fidivrl cwtl fs dec incl xor cli xchg inc cmp mov mov dec dec pop (bad) xlat mov jge jp and cmp xor sub in inc nop jg out add cltd popf jg and dec in imul dec and iret or mov sbb icebp adc add data16 sbb or dec arpl dec push mov fisub aaa (bad) cmp mov shrl push and (bad) push push inc (bad) jecxz andb loop pop push dec mov mov jmp es or (bad) or cmpsl js jmp stc adcb pop jg inc in test push xchg mov loopne sarl (bad) sub cmp nop mov into pop (bad) jne jg sbb repz jg xor popf dec int3 dec out cmp mov out test ds insb lds jg xor mov pop out mov clc arpl dec fiaddl jo call js xchg jg xor lret ret mov sbb sarl or pushf and or jg (bad) into mov mov ljmp dec add int inc imul mov pop out dec mov cmp pop in mov fadds jg and and cmpsb pop sub or movsb push insl pop (bad) mov adc cld rcr insb test jg imul insb jg aas stos das sahf stos leave std jg lods xchg (bad) jne sbb aas aaa mov inc or jg mov ja jg popa bndldx loopne sti jns xchg fstpl xchg cltd mov insb push out pop mov sahf leave loopne sub sub cmpl mov (bad) imul mov sti test dec or dec js push jle cmc lahf pop lock int cwtl jg sarb pop jg call stos jae fwait mov mov enter pop arpl lds ret mov in fbld add sti and scas fdivl dec push ds scas adc lock testb pop dec in js jg fsubrs mov aas mov arpl lds sbb jg mov int3 outsb sub inc push jg stc stos mov jg stos and jge lret outsb jecxz dec jg push std pop adc sbb add mov xchg jg dec pop int3 sbb movsl aam scas pop sub test xchg mov addr16 les dec cmp jg mov addr16 jl xor dec sub jbe ja and or (bad) mov xor or pop jecxz mov pusha jl xor jne push lahf mov inc inc mov nop inc (bad) inc and ror sbb xor insb mov adc push pusha lahf jg and or loop gs cmp push jg mov icebp inc jg jnp (bad) popf mov jl addr16 sti imul lods add rcll mov (bad) fildll jg test loope mov pop sbb jge mov fs jno mov sbb movsb xor ljmp (bad) xchg xchg cmpsb push push inc dec jg mov out clc xchg sub add (bad) mov sbb leave jg add jne loope and jg (bad) xchg cmp pop jg aaa stos loope fidivrl dec dec enter pop int3 mov push cmp loop lahf jg insb jae (bad) and ror cmp in bound mov adc mov test and cli and out fsubs jg ss mov rcr orl adc jg lret out sub fs fcoms es sub cmpsb gs mov mov push mov es and daa pushf jg push jnp xor or gs test adc notl xchg jg add pushl inc jg mov shrb dec icebp and mov dec push push dec lods arpl mov shrb test aas movsl clc pop rorl pop jmp mov and xchg stos scas neg data16 lea sbb int3 aas mov and addr16 fstpt ss arpl mov call jg ror push (bad) (bad) jg sbb mov dec and jge ret inc mov adc imul add dec jle xchg and inc mov hlt cmp dec sahf gs mov pop inc sbb iret jae loop inc in xchg je fdivl sbb pop dec ds mov dec mov lret cmp arpl push xor je cmpsl jg mov mov ret in fbstp add push (bad) std aas insb dec or inc add jo pop popa inc iret jg lock rorb insb ret jecxz lahf pop inc das mov push push dec cltd (bad) jg xchg sub mov sarb inc mov jg pop fcmovbe sub es jo mov gs jg arpl outsb add inc jo outsl inc cmp jg insl mov cmc add mov fcoml xor rcll stc data16 xchg push push inc rcrl insb inc mov pop inc clc test mov addr16 xchg adc jg pop incb mov arpl lret aaa or sbb jecxz add or xlat adc pop cmc aas sbb push inc cmpsl (bad) jg xor ja inc or mov shll dec jp lock sti loop dec les add jg,pn mov dec xchg mov inc pop (bad) enter pop mov ret jg (bad) fidivrl sub xchg loopne push clc iret dec and (bad) jg cwtl daa pop pop insl xchg mov scas movsb ja (bad) enter pop jg pop or jmp and popa add (bad) sub cmc test iret mov movsl push jge in dec rcll inc mov mov (bad) or out jecxz add scas fwait jp loop rcrl push inc aas clc xchg das (bad) jle inc fldt push rcr cmp inc pusha dec cmc dec xchg jg push dec stc mov add jge sbb fdivr push jbe cmp lahf jg sbb hlt outsl push and lcall clc sbb adc xchg ret shr ficoml add jg or xchg (bad) outsb stos sub jg lods hlt fildl clc mov dec xchg addb add cltd rorl xlat xor cmp mov std mov scas jmp mov test adc push dec repz jmp icebp iret push pop bound jg or add xor (bad) jg jmp movsl sbb add dec insl add (bad) push add cmp push repz clc mov dec push sbb cmp fsts xorl in inc add fdivs jne xor cmc cmp sti or and pop imul pop mov (bad) negl mov arpl ss ficom out push aas (bad) cltd leave movsb mov jg dec clc int3 ljmp or mov js lahf lcall or loopne adc mov jg fwait push lret cmp les push inc push repz xchg xchg mov sbb in sub jnp jg inc out cli mov xchg outsb jg add push jmp jg icebp sti int3 mov out iret jg mov mov popl rcr fidivrl stc push data16 arpl lods jg test mov jg sub dec js hlt jg mov fiadd adc movsl sbb mov fdiv mov mov sarl arpl jo js ja add inc test jg mov cs dec sti sahf jae aaa outsl lret stos sarb outsb push sbb pop xor xchg pop adcl lods insl jg inc imul (bad) stc (bad) mov aam or cmp cmp subl sbb fstpt mov mov addl int3 mov push cmp sub jns fstpl fldenv push fimull pop xchg ret ss in mov daa add xor pop fs shr insb dec or jg leave adc test jg iret fdecstp sbb and and push movsb imul and push pop insb jg add hlt mov mov sub sti into addr16 sub ja inc (bad) int mov xor inc push xchg and jg loopne dec mov leave cmp hlt inc jl mov popf push insl std fistpl mov lock divb cmp jle jp jnp in aam repnz jb sahf push fwait lods jecxz (bad) (bad) cld xor jg inc les push lods pop pop xchg imul adc inc cmpsl popa jg inc mov lret jg adc fstps jg inc (bad) pusha or push pop stos insb sub scas ffree sahf mov add mov push loope nop scas repnz int mov jg cmp pop xchg into or loope mov mov mov jg mov sbb cmp jg jge in lock xchg inc jg mov loopne aaa (bad) cmc sbb cmp clc sahf inc xor not dec mov jg and push inc or cwtl push test or je ret fstpl dec aad pop out jg xor jp ret push pop inc cmp into pop dec lods xor or push push inc and fild xor test aas or pop dec cmp mov jg push sbb fstpt loop ret dec pop mov imul inc xor jbe xor inc lds (bad) jnp mov inc push dec divl js jle push movsb insb ljmp into fcoml popf mov jl rsm movsl imul jns push and push aas gs pop int lret push ljmp sahf xor mov jle jg push mov jg insb cmc jae lea fwait xchg loopne jg and dec cmpsb jg into push sbb inc push sarl push xchg rorl in and jge in ljmp push call dec out mov adc jg xchg cmp xchg mov nop bound push and ret int fdivr lods jg sbb cmc mov xchg xchg (bad) pop sarl lods xchg repnz mov lds loopne cs pop sbb jg inc aas rorb mov (bad) adc jg push mov jo sbb sahf stos outsb add mov mov sbb scas mov lods adc idiv sarb repz inc scas mov das int stos hlt sarl jg fisubr dec xor xchg lods pop je int dec jg xor or dec imul add negl (bad) add (bad) idivl movsl dec adcl pushf mov dec or iret xor jl dec sbb pop xchg test idivl pop das push clc and ss pop stos dec jno adc in (bad) add jg mov sub xor mov out pop cld sbb mov mov (bad) add sbb adc jo sbb popa mov adc xor mov cmp nopl jg xor test imul (bad) fstps xchg mov hlt or outsb fiaddl push push dec cwtl mov sarb adc gs pop push popf aam pop xlat adc stos jg or cmp rorw cmp stc test aad add sahf mov or jg dec in push jne mov dec std cmp xchg push dec jmp pop mov mov div arpl and add fidivr inc dec fcomip movsb push stos jg mov xchg dec xchg jg psubsb mov into pop xchg lock scas call out jg fwait xchg lcall pop loop xchg push daa push jg ja std lea lock adc xchg iret mov cmpl jecxz lret movsb jg nop ds inc mov iret mov jle adc jne jg ret dec pop std mov mov mov bound sub ds stos in jg add (bad) sub mov ja jge cmp mov (bad) sar cmp repnz inc jg jae jo fldl jg (bad) loopne jno (bad) fistpll stc cltd mov sub jg fcoms cwtl cmp mov inc ja adc dec aas iret in inc outsb stc sub pushf jg pop out (bad) mov jne and imul push fwait jg incb test push (bad) aas xchg ljmp (bad) rep shlb lahf xor dec stos push jns jg jne,pn lea mov jecxz push aas dec std aas cwtl adc repz sub outsl decb xor nop imul andb jno (bad) jg cld jmp jg scas push mov jg mov push scas cmp or int aam in pop mov push ljmp and (bad) sti adc inc iret xchg jg mov or lds outsb insl sub js repz cmp sub jg repnz add jg mov stc jnp lock mov (bad) into shl inc jg mov aas fstpl cmc fwait jg daa mov sbbb cs xlat movsl inc lcall jp mov fs cmp push pop cli mov pop jnp adc movsb jg pop loop dec int3 and mov push flds adc out and pop loop dec repnz jl stc sbb jg (bad) addr16 xlat pop mov sti pop sub dec stc cld fisttpl add jg pop stos pop dec mov cmpsb sarl lret mov nop jo mov das or push aas add shl sub sub movsb xor add bound cmp ret (bad) addr16 aam or lret popf jg add (bad) aaa pushl and mov cmp ja pop cld and gs aad and jg sbb scas or ljmp pop push lahf into lods cwtl scas and sub in mov mulb push int inc mov inc mov xor inc push mov mov push ljmpw sti mov (bad) mov sbb pop xchg outsl push pop push sbb or pushf jge,pn push dec jle mov xlat mov xchg jg push cmpsl loopne mull jbe sub jg rolb fcmovnu inc aas pop mov jg push stc in addr16 cli aas dec in jns out mov dec inc in mov mov dec dec inc mov push xor inc mov mov mov pop pop scas (bad) gs js in outsl fstl lds jg push push or and jb imul jnp (bad) mov pop daa mov add jo imul std aas (bad) cmp iret ja inc push sarl icebp fs mov lret jae mov pop jg (bad) and push cmp inc jg mov jne sub leave out xchg scas adc pop pop pop outsl rol pushf idivb dec int3 pop push rorb outsb jg (bad) sub out bound int xor loope (bad) repnz out or add rcll dec js jmp outsl mov jge push mov push jle pop mov out cmp dec cmp lahf inc fidivrl insb ret cmc jns imull rorb out rcr (bad) jg pop sub into adc jbe dec call pop pop pop (bad) cmp cmpps cmp mov cmp inc out shlb lods push fcompl mov dec fldcw sbb and fwait jl mov in mov jg cmp pop jle into pop and mov or jb pop loop sbb sar sbb nop adc (bad) (bad) mov std cmp ja jg fnstcw jg add sub mov repnz rcll daa sahf inc mov jg cmpsb iret (bad) mov jg mov sub jg mov mov clc fcmovbe ljmp cmp push mov das and push imul cmp inc xor rorl mov pop insl push jle add mov add push (bad) ss or mov pop sbb jns mov push aas popf (bad) mov dec aad mov mov (bad) incb movsl sahf mov push push xchg daa jg xchg cltd and push pop dec sar jb bound in lret ljmp cli mov xchg ja sbb movsb loop cmp mov mov inc mov dec shlb pop mov sbb cmpsl movsb aam mov loop jg xlat jp jecxz push jnp xchg cmpsb or pop mov add jp jg int3 pop jae add mov sarb sbb cli loopne push in dec add add lds cltd imul fistp xor cmpsb inc jb cli aam inc jg jmp cmp jg mov jg imul jae mov test pop dec push adc outsl mov jg jae test or and mov adc pop or mov add xchg popa aam xchg add scas jg cmpsb pop push pop dec (bad) push jg dec cmc sbb push pop fstpt jo (bad) repnz mov jle xor ret xchg or mov push in arpl jg pop or mov xor jg pop xor (bad) stos xor adcb dec mov inc jg je mov mov jg push stc lcall into jg sbb mov enter stos cmp jg aam push pop stos sub push test scas add imul sti xchg or orb mov dec inc sub sub (bad) sti (bad) cmpsb jns jno jg out mov and mov add mov mov cmp xchg inc add popa rol cmp lea and leave arpl (bad) jg sub (bad) jg adc sahf jg stos daa add push sub cwtl cmpsb lea imul add imul inc sti push and sub sbb dec or jbe jg movsb adc sbb push fwait jg ds push aas leave sub cmpsl push jo inc xlat cltd jg jp (bad) rep mov xchg or jo test and push aam mov mov xchg pusha xchg jg js out adc gs dec ds xchg icebp inc mov fidivrl cmp push mov adc push je fldenv jg ds repz push rolb inc pop mov push mov dec icebp sub or loop lds aas in mov jle dec sub pop push push aas pop push or rcrb mov push mov mov jg mov xor mov outsl idivl push dec ficom inc ja das xor sub pusha mov repnz jnp out mov xor push lock jbe gs jg inc daa xchg pushf or push xor (bad) dec lods test add daa pop jecxz jge jg test scas dec xor jg (bad) icebp addr16 outsb loope jg dec pop and fdivrp iret je and addr16 jmp or push sub add les lea jg cmpsl mov loope fcoms test (bad) es pop sbb incb sti stos int3 push movsl inc jo pusha lret mov outsl fmuls xchg mov ljmp jg jnp add out mov xchg shlb inc call bound faddp mov out mov mov jg and imul jns inc cli xchg into mov jg xor fnstsw xor jo xchg sub pop mov or lods or jmp cmp pop or and push xchg cmp jg mov insb xchg mov (bad) xchg ja fidivr loope incb mov sbb push jg xor (bad) push xor in mov and sbb dec cmpsb pop es negb movsl jae fwait jg mov repz jg inc test shlb ds imul mov outsb jnp scas les ja je jg rol out pop ret fs idivl xchg jp outsb xlat pop jb cmp (bad) mov jg fmull add dec mov adc xchg xor mov jmp aas mov dec xor sbb jg push jmp push mov insl imul bound jg pop jno loope lret cmp (bad) push inc cmp sti or scas dec js (bad) out sbb jl scas fs mov xchg movsl add inc jg mov xor (bad) inc add inc xor ret mov dec push fwait inc neg in inc jg addr16 adc or push dec aaa inc jg push pop repz sub fcmovne pop sbb aas sbb xchg out dec pusha adc hlt cltd dec arpl imul cmp push mov jg sub insl dec out or dec ret push pop lea (bad) mov out sbb sti lods outsl pop rcrl fisubl jo sub fstps cmpsb pop and arpl jnp ret mov enter lds jne dec sub cltd pushf push shrb cmp mov xor ret inc mov bound jecxz mov pop dec repnz aas xor jg lahf cmp or gs fwait hlt (bad) fidivr roll scas push jg adc mov stc stos int jg mov mov ret aas aad (bad) dec dec xchg push jae or jo or cltd pop jg lcall mov icebp xor cmp sub jle enter mov dec imul (bad) jmp jo ficompl mov sti push hlt stos int mov mov ds in push jg in mov loopne inc ljmp xchg cs adcb dec jecxz add aam fs jle jbe cmp dec stc jg lock jecxz data16 andb jg sti mov jns in aam pop fdivrp xor adc pushf jp jg aad pop ja subb pop xor ret pusha dec outsl sarb add fmul hlt mov (bad) mov cmp fs inc push ret or cmc fidivrl sti or jno (bad) repz jne jg arpl ss push jg sbb lahf pop mov add ljmp sub jne je lcall aad lret loope cwtl jg mov lods movsb push pop loopne das call push jg inc repz (bad) out lds lcall cmp ret dec and mov dec pop mov lret push push jg inc push sub xchg mov in stc xchg xchg (bad) pop cmpsl mov outsl jmp and or in lret dec movsl jg inc sub adc lahf aaa jg (bad) mov out and jg enter cltd mov mov push loop mov jle int3 sar das xchg incb scas jg jne or rorl aas stos (bad) lea add inc sbb testl mov pop loop fwait ljmp not mov jle scas ret dec insl fisttpl dec adc clc adc push pop push in jp mov out lods fistpll xor jg cmp xor call orl push mov inc push ljmp jp pshufw xor pop pop dec sbb jg xor or pop idivl int jg or icebp jg testb adc cmpl pop jg adc sbb in imul xor movsl sub iret mov mov data16 arpl jg mov xchg cmp or mov sub pop loope jns jo in decl sbb lret mov fnstcw jb add ss je jg jno mov bound jns xlat mov ss and push ja imul and inc pusha out popa cmp jnp (bad) cmc dec std cltd scas ljmp aaa std iret idivb jg rol pop cmp inc jmp or xchg jmp mov leave and js push push jg fs mov aaa lock dec sub cwtl jg inc cmp inc jg inc mov add xchg jg mov test jg int outsl ror popa les or inc xor cld jae jbe pusha pop jg je xchg push mov xchg cmp sub out mov in inc or jle psrlw dec imul inc fnsave sub addr16 fdivrs adc fs dec aas mov mov add jg stos xlat push push xor insb jg jae aad jns test enter lret sub xchg push mov jne mov mov pop jg rcll shrb mov jg (bad) jnp das and jg stos daa (bad) add jg sbb xor ret push (bad) push push jns arpl aam mov lock mov mov sarl mov mov std js cwtl jle aad and jmp cld mov int faddl aad jg mov outsb jg cmpxchg js mov pop sbb jle add sub jg inc jne xlat scas inc es je and cmp sti lods outsb add push inc jecxz movsl mov pop sbb mov jg dec cld les insl mov lea (bad) pusha mov cmp icebp cmpsb outsl enter cs jg pusha mov add xchg push sbb jbe and mov dec dec mov out test xchg or push adc addr16 mov and popf jg inc jle adc in insb mov ja pop push outsl (bad) adc jg sbb mov repz ret lahf loopne out sarl (bad) xor loope outsb mov and hlt out repnz stos pop push or jg clc inc mov inc ja mov mov jae dec cmc sbb xor mov sbb fiadd or pop gs mov mov dec (bad) lods jno ret and push xor inc fdivr jg push mov adc inc xor bound push out dec es and std outsb stc jb lcall jns sbb fs movsb mov jg mov fstl mov arpl sbb popa adc test xor and sbb inc dec scas lret in or mov nop mov pop jg (bad) test mov push add aam and push add pop dec imul ficoml lock mov ja out inc lds jg jns cmpsl push cmp add mov hlt aad xchg mov add xchg add cmpl das or jg jmp ja mov dec cmp lret js add (bad) rorb popa xchg cmp jg cmp jmp or sarb sbb jg sbb add cmp ds (bad) mov ljmp and inc (bad) mov movsb movsl int mov jne push and push dec mov fidivr mov cmp adc dec out clc push and inc xor push mov cmp nop and into outsl pop out xchg test adc (bad) (bad) jg pop dec sub mov pop mov add int pop pop out jg pop or mov mov cmp arpl xchg icebp pop mov (bad) out mov repnz clc jg hlt call adc xchg cmp into jnp fcmovnu popf pop adc je cmpsl outsl mov inc jg ja adc inc roll sti (bad) repnz in clc mov leave stos jae mov push xchg sbb popa add or nop fdivs jg lcall jg (bad) repnz lret insb mov out xor jg into popf pop sbb iret imul xchg scas outsb fstpl mov jg,pt lcall jg sti clc (bad) cmp inc stos push nop jg mov imul aam les subl aad jl push cmp mov incl pop lods push or sbb jg mov and jg adc jne es xchg or cmp jg in dec int3 cmp inc ss jnp and or pop daa (bad) mov xor add adc imul pop jb lods (bad) loop jg sbb jg addl xchg test fwait jg fucomi or lods xchg pop hlt jg jmp pop cmpl inc xor mov cmp rcll mov movsl stos gs xchg pop mov ljmp dec jg and popa out mov push jnp mov adc je xchg lds pop mov pop or jg stc cmp adc decb push and or mov adc sbb inc fcoml adc leave in ja iret fcomip loop mov addr16 into pop andl lods push popl out xlat mov aas or scas fwait inc hlt xchg push dec pop (bad) rclb inc aas ds aad xlat fbld dec pop jb xor ljmp inc adc xchg fisubr in mov sbb jecxz jg push scas mov mov pop inc xchg ja test movsl mov inc mov jno jg push push andl mov decb data16 mov outsl jg sub iret cmp xor add jae inc push or pop and test jbe ja dec adc aad sbb scas jp or int aas mov aam push (bad) pop xchg inc xor mov mov jg push (bad) sahf ret lea lret add stos jne sub mov sub sbb scas sub push aas xchg cmpsl rcrl movsl arpl lret sti jecxz lods push mov das dec jle aam jle nop fdecstp push rcrl pop sub jg jno and aaa or inc push dec (bad) mov lock stos or mov nop sub iret dec xchg dec ss cmp pop (bad) fistpll push jl lcall js push out xor and mov push add sbb popa sub xlat data16 xchg xor fidivr aaa (bad) out sbb mov mov dec jecxz push inc add les pop jp inc pushl stos mov cld jae fisubr neg jmp fcmovnu dec and call ret jo pop adc xchg mov aam adc sub jg repnz mov or sub mov cmp cli mov jg and pushf les or addr16 mov nop jg mov inc jg in inc rcr cs inc cmp (bad) loope scas jns pop jg rorb mov sbb repz sahf xor loope mov inc jns call dec xor mov jg dec dec or jnp xchg jg es mov jae xchg jg fisttpll sbb cld decl lods stc aam jg idiv dec leave test jg daa sub incb outsl mov pushf inc dec push int push cli insl mov enter sub iret mov cmp lods fild (bad) insl addr16 jg aas xor push pop jg lahf jns in sbb scas push jo clc push fdivs pusha sub mov sahf push dec cld and mov stos dec push fidivrl arpl jg in cli mov pop push jns adc ss or or and js cmpsl ret push out mov mov xor pop out mov jp lea scas divl je mov ss (bad) lahf gs outsl push mov adc aas sub cmpsl lods pop adc outsl lcall mov pop push xchg and inc movsl cmp mov mov dec xor jbe xchg jg pop sbb add gs jg sub and hlt ret mov pop jmp (bad) mov push jb pop int3 or lahf jg push jbe (bad) pop mov inc cmpsl jg xchg stc inc test jg icebp jge xor stos dec jg jne inc xchg aaa pop js rolb push outsl das jg mov mov jg in imul jg mov scas in jecxz jmp and cld xchg cmp jg push mov inc (bad) outsb push cmp pop and xchg sbb popa ja (bad) cmp sti repnz in arpl sub int push in fnstsw jg sbb ljmp xchg mov pop pop xchg dec jg in (bad) and (bad) aas sub cmp aas cwtl sti cmp hlt subb adc loopne stc dec adc mov pusha addl cmp mov lcall pop xor ror cmpsl jg rorb aaa sbb pop cmc insb jge aas das loop sub daa mov dec push xlat jg push mov fmuls sbb sbb lcall dec jp cs fchs jg pop add sbb iret aas push (bad) lret inc mov dec (bad) mov mov fucom inc xor aas jg xchg mov mov inc add pop aas cmpsl inc (bad) jmp in sbb push pop mov and and xchg jge mov xchg pop inc dec cmp push jg lea add sarb enter in fcomps xrelease lock (bad) (bad) jg pop push stc mov sti jg jb sub jg je adc xchg mov mov cmp xchg in jg sub insl sarl jb xor repnz jg push mov mov call cmpsl popa aas xor fldcw lea push jno (bad) aaa test aas call arpl dec mov icebp std mov movsl pusha lret dec mov jne aas ljmp out pop cmpb loopne mov pop push adc addr16 pop scas cmp xchg mov leave ljmp jg mov aad aas sub insl and jb jnp and mov std jg fadd jl,pt lret jl jp scas jp inc mov int3 roll lock jp adc cmp (bad) or (bad) cmp arpl lods sti xchg inc xor and and cmp cmp cmp pop or std jo add rorl fdivrl mov cmp fwait dec sub add push int scas mov sahf mov bound mov arpl inc dec sarl icebp push (bad) mov (bad) (bad) jg push cmp sti mov jg xor cmp test sub cltd das imul outsl movsb in cmpsb xchg inc jbe int3 xor mov xor push jg or adcl fdivrs and and sbb movsl or inc jg lock add push in xchg jg mov std xor sbb inc jg cmc adc ret xchg je push into mov loopne jg aam lret mov jmp aas xor and mov movsb jg mov or mov jg sub mov fwait cmp lods adc cmp or rcll sbb cmp gs pop push lret add cld out inc push sub mov nop mov stc pop jg cmp push imul in lret and xchg jg jle push lahf cmp (bad) jne,pt daa pop (bad) jg or adc sti popf sbb mov xchg fsubs mov or pop (bad) jae mov cmpsb push push xor loope adc movq mov and mov addr16 inc push dec shll xchg jg pop adc data16 std xor xchg jo xchg jg inc mov rcrl (bad) adc jb (bad) ja aam je aas popa jmp call xchg pop and or and mov xlat jnp movd out xchg mov cmc xchg add or add push pop insb daa loopne push jl gs scas jg insb imul adc inc cmpsl mov mov sarl outsl xor jg mov xchg loopne loop lret and pop mov xor jg mov aam pop (bad) jg rclb mov insl outsl or (bad) push or cwtl ds mov push cmp cmp lret aad sarl mov ror pop pop cmc mov ret sub outsb fisttpl or adc jbe fsubs xor cld pushf loope jg out pop push push sub mov rclb enter sahf or test jo mov mov dec jp or mov ja addr16 mov int fldcw dec adc jg dec xor push jg (bad) pop mov jg fnstcw sbb xor outsl mov int3 mov addb xchg scas mov (bad) repz inc add pop (bad) jecxz sbb addr16 fs mov and aas xor (bad) lods nop mov call inc cmp (bad) ss sub stos jg andl jg sub fcmovnb sub scas or aas push js dec xor pop push (bad) ret push test pop stos inc jno (bad) mov cmp cmpl jae aas jne js dec xor inc idiv jg push cmp out insb jo into adc sahf test fdivrs js dec mov ja and push mov add inc (bad) jg cmp (bad) xor sub pop lahf sub xor mov xchg bound in cwtl jns (bad) in sbb inc mov jg xor jg fcmovb mov jl mov aam js add mov push jg test shl pushf fs inc lret push xor icebp lea lahf jno cld and sbb int3 fdivr out add inc daa cmp push sbb pop mov lods scas repnz movsb mov mov or ljmp push xchg lds (bad) and (bad) call stos inc mov jg incb lret push dec cmp inc repnz dec mov aam hlt jno push xor cmpb shlb xchg pop jg nop ret fucomip xlat jg imul orl push push pop in jg or xchg push xchg jg loopne xchg inc decb out insl rcrl lret mov sbb daa out inc outsl jg jecxz cwtl mov sbb mov rclb test sub push lcall jae mov pop dec push cmp mov mov jg or lcall jecxz ja popl ret jg lret dec mov outsl in pop in mov nop jg xor push cmpsl mov mov dec jg divb mov (bad) mov jo inc pop fldt sub jg (bad) rorb cld jg push xchg addb pop arpl dec xlat xor loope jg sub flds mov iret sbb push lea ja mov mov mov or sub inc imul call xchg fs push dec test andl jl pop rorl or js xchg in rcrb mov pop (bad) jbe pop into jg inc jle rcll icebp inc outsl adc notb stos cmp xchg cmp mov movsl ljmp push js aas and clc inc test pop imul cmp insl jno test jg mov loop jg das or mov jl fimul xchg mov jno (bad) mov jecxz jne jg test mov adc push into and pop insb ja dec jns push jg jl in mov sbb cmpsb ret mov fs dec nop xlat jg dec jle in inc push lret mov cs jg les jg ret sbb pop inc inc stos push inc cwtl inc stc inc les jo bound adc push (bad) test add jg les mov fdivrl or aas jmp nop sbb (bad) repnz ret test rcrb jbe add mov or jg push cmp movsl aas (bad) leave (bad) xchg jg imul or (bad) dec jg add jecxz lea inc sbb inc xchg les inc repz push jg cld (bad) movsb lret pop (bad) sarl hlt iret in bound mov cwtl pop arpl push outsb mov imul jae imul aam push cli inc lock cmp xlat in mov std xor arpl repz ljmp hlt add cltd inc pushf jg enter pop (bad) out jg mov inc dec scas lds enter jg mov inc in loop mov aam icebp sub mov pop data16 pop jg inc stc push div outsl push aas out fistpll bnd fwait iret int3 sbb xchg inc jg push lret dec sbb cmp sbbl in loop inc fidiv cmp out pop in jle es mov fs mov cmp xchg (bad) mov test imul dec inc insl push cmp jecxz mov addr16 nop aaa (bad) mov mov mov sub mov jg mov xchg or sub fistp mov std stc outsb sbb mov scas cmp adc or jg adc sbb sbb mov mov cmp push jno fdivrs fimul jg repnz mov fcmovnu jg stos push cli sarl pop movsl mov sub je and jg lds nop xchg jg fdivs xchg jg mov rcr es cli sahf mov mov cmp scas aaa pop pop sub push push (bad) in mov mov fisttpll push mov icebp outsl pop js pop jg add aas rcr push mov addr16 lock mov and sbb lods sarl jne popf mov push cmp or and loopne test aas dec aad outsb pop sbb aaa out lock pop xorb aas pop loop sub jecxz dec sub xor sahf jg pop pop jnp inc inc mov push bound imul push (bad) jg mov push cmpb jbe movsl (bad) lret jg fidiv xor push jg push addr16 xor ffree outsb and imul add popf fstps mov jg mov xchg jg inc aaa addb imul gs push mov inc or pop shrl inc fisubr and jg test sub jg insl test xchg cmc cmp fdivrl sbb fcoms sbb pop cmp xchg das js add jge mov pop sbb xorb push pop ja xchg sti fstpt sbb aas fwait and adc imul ljmp inc fistpll ss mov mov bound push jle call dec xchg (bad) sub daa fyl2xp1 movl out jg je mov stc and out mov jp out mov unpckhps jo jg dec or jg sub or and andl dec add lods mov mov dec push inc inc sbb jg hlt push std sub xchg dec (bad) xor lods sub outsl bound test cmpsb mov mov stc cmpl jg jge cmp mov mov outsl push cwtl jg and fwait ret loopne aaa mov cltd jl inc aam add lods jg dec sub bound pop or popf insb insb cmc idivl in and mov pusha ficoml sub movsl scas cmpsb push iret jg imul sarl rolb scas jnp (bad) jg mov sbb inc push mov fbld scas and sbb pop mov add jnp mov dec pop stc (bad) jg outsb outsl (bad) jo (bad) std jg jmp enter in stos push mov dec int3 push repnz hlt pusha xor cld sbb sti dec inc mov fstpl and sti jecxz xor pop mov mov aam lods lahf dec ja fnop mov lds xor sbb add test jns jg cmp dec insl lock jmp cmpsl gs xor jg mov in int ss pop pop sub lcall shrl lock jb fisttpl test in jne cmpl cmc jg jno pushf xchg pop jg push ret or or ss pop cs dec cli js and cmp sub ret jmp jmp jg adc sahf lods jno push pop add pop loopne jg iret push int in sarb jae xor xchg xlat xchg (bad) divl pushf pop adcl sahf repnz mov sti cmp ret cli fcomi dec mov add sahf cmpsl add pop sti incl insl mov lahf cwtl arpl lea sub int call pusha mov (bad) lea inc cmc fild sbb cmp jg jecxz pushf cmp jle js lcall out jg ljmp jne mov pop shrb push jg lret inc aad mov (bad) jno sub imul jg in aad pop jg int push jb gs mov or addr16 xchg mov xchg cltd adcl or jg adc mov inc ret mov mov xchg sub aas sub test jae xor into jg int3 jnp dec cld push in test push mov and fbstp adc dec or inc jae lcall aas je roll push outsl lea mov dec jle daa cmpsl mov inc sti popf mov xor aam in push jg mov xor ret jmp fsts sub fadd jge,pn jg add add lds subb and test data16 push add xchg add test repz mov sub scas xchg movsb test mov jb add movsl pop push xor (bad) jg adc mov cwtl divl pop dec inc dec sbb sarl inc dec ja xchg movsb xorl and jae roll mov in arpl sub mov add push cmp jo hlt mov test xlat fs mov in xchg fisubr movsl sub rorb clc cmp sub cmpsb lock jg add jge lods and mov adc cs inc dec cld je enter adcb inc mov push cltd sub mov jns shll scas cld dec xchg ret xlat xchg adc cmpsl jmp pop cli jbe or adc add mov rcl cwtl popa inc pop iret das jg mov xchg cmp jg mov mov (bad) xchg add stc jae or in mov dec jg ljmp inc jnp (bad) or sub mov (bad) lret fdivrs mov fstl inc mov in and cmp or sbb addr16 inc jmp sbb add xor push dec cli jg (bad) sub mov mov aas lret add sbb jb inc ja aas push fcmovnbe (bad) mov xchg or pop and out mov ljmp dec negb jl mov fistp out pop sub iret jge outsl jmp jg lret (bad) cmp cmp lods leave (bad) mov xor mov mov ret imul rcl push mov inc xchg imull jg add sbb arpl jl into int3 pop aas push mov jno inc movsl cmp sbb outsl (bad) pop sahf xchg mov jns mov pop cmp jmp inc mov mov add out leave xchg in imul cld sbb out dec sub andb xlat or jecxz jne adc inc bnd add or mov jnp lret xchg add xchg pop adc sub lea jno xor (bad) sub cmp inc push cmpb mov push mov sbb (bad) cld lcall push jne inc imul cmp stc call mov push (bad) mov movsl aas adc insl mov mov jg mov rcr jg dec ds imul shl js cmp out loop fiadd jg add ret pop jg jp xor test pop ja sbb aaa lock jl in jno cmp jg dec dec ljmp jg push xor add mov mov inc loopne jg ja out (bad) stos and ret cltd mov jg cmc cld scas and xchg repnz imul inc sub insb sbb fwait int3 mov pushw clc mov movsb push jmp jg jne xor (bad) outsl inc frstor pop jg loope imul sbb fmuls (bad) (bad) jns cmc inc incb push fstpt (bad) dec sahf push mov push or inc inc push mov iret dec push std shrl sub adc mov pop pushf xchg jg mov (bad) pop jle mov mov pop test add jg aad insb mov jg hlt jmp inc cmpsb jnp push pop je out jg inc pop mov mov outsb sub mov mov or (bad) pop out push daa cmp (bad) lock cwtl push rorb mov sub ja inc cld repnz in fnsave cs (bad) xor mov fiaddl insl or and sti push roll in push jg mov add pop pop xchg clc js dec jg jns mov add out sti out (bad) dec pop jno cli sti push das push scas pop loop or sarl mov jae push out sarb push inc lods aas fbld xor mov scas jg dec or insb sti jno dec mov adc cli pop xchg pop pop dec jg jp jae mov shrl adc jg (bad) out repz cltd stos jg and xchg jg or imul adc test xor je (bad) inc jns sti inc dec mov mov cmp jg incl bnd push into stos sub nop add dec jp adc push mov cwtl or push jg (bad) into pop sub push test cmp jg hlt es imul pop negl lds jnp xchg sbb into aad sarl ja pop sbb xchg pop add ss ja dec insl call xchg jo les ficompl dec add jg (bad) in lahf cmp leave pusha jo jbe in movsl mov test data16 xor mov pop ret cli out xchg jg outsl aas mov rcrb add xor push pop jo imul mov test ja push out mov fsub ret dec dec out mov js add mov sub sub (bad) aad push sub adc jp mov hlt fnstcw outsb (bad) stos xchg inc fist (bad) mov sti mov dec fnstcw nop je ficom test fildl xor sub bt adc sarb fwait mov pop (bad) mov test fs popf pusha xchg jg adc (bad) loope mov mov out insb roll std xor test imul ja pop popa mov sub shll xor inc jg mov (bad) cmp cmp (bad) (bad) lret jmp vmovdqu or mov xor in sub outsl dec into xchg mov es loop test fmul inc mov data16 pop or ja idiv arpl pop dec dec jno push js adc jg pop leave in add rorb (bad) jbe data16 (bad) stos movsb inc cmp outsl jg pop mov cs cmp pusha lds jg out jb ja mov add mov dec cmp int mov xchg adc or cmp jg in scas imul and pop cmp jmp xchg dec call les jge rol push xlat pop mov sub (bad) fiadd mov adc dec xor inc (bad) xlat outsl or sub out or mov es xor aas and fdivrl rclb push dec jge adc dec lods ja mov gs movsl pop sbb push inc push and jg iret arpl jg push (bad) xchg lea jl xor mov mov shll inc or imul mov pop call jg popf mov xchg lds (bad) jg enter pop insl fldl jg nop mulb push lods dec jg cmp (bad) sub mov and lret jg sub movsb ds ljmp jg cltd push or arpl jg test push sub mov std aad add repz outsl xchg adc lods xchg sub inc sbb (bad) jg xchg ret jae mov stc jmp stos and push mov jg fisub ss lahf lods inc jae enter cmp sarb mov jg les and enter or pop dec arpl sbb roll inc int3 jg stos (bad) add pop mov cmpsl imul and sbb xor jg dec sub int (bad) jbe jne xchg pop inc xchg test xor stos jge test push outsl imul arpl jg in jl dec popf (bad) xchg (bad) int xchg xchg dec sub inc and push insl jp sarl out jb mov xchg les or push ljmp mov jnp dec mov or cmp loop loope rcrb cmpsl pop test push sub mov insb ds and test dec pop stc jg cmp adc jg ss lcall subb push xchg mov push or ljmp icebp out outsb fdivrl mov dec dec mov adc repnz jbe aaa jg andl xor mov jo les inc ljmp popa outsb std sub (bad) je xor xchg lret aad cmc scas enter or jg (bad) js movsl cmp lods test inc mov pop and das stos xor sbb data16 lock and mov mov ret inc inc adc jg push rcrb ret lock orl jbe inc and js mov popf jno mov data16 add fimull lods mov sub enter lret imul jmp jle add sarl dec push jg mov daa mov add push xchg test dec test cmpsb jmp in lret lods inc fbstp jg inc imul xor jg leave sub aas test dec inc ds jg cmpsl cs fistpll jg stos adc cld dec jg push popf sbb mov push in bound (bad) jg mov sub jo push scas mov sti push jg jmp and dec (bad) xchg das jle mov cltd gs pop jns sub pop ret or jg test xchg jg repz mov inc rcr sub in cmp movsl (bad) mov add inc sub sbb idivl add mov jns and mov push in xor jg adc dec bound aam xchg pusha or das mov push stos adc mov xor dec repz arpl (bad) call jno inc mov sub jg lea inc or add sbb add aaa xchg jmp leave adc sub out inc lret pop mov outsl loop lock jle xor call mov (bad) imul adc out ljmp inc xchg jo cmpsb incb outsl stos push sarb inc aam jo lock negl aas into loopne ret mov loope jo repz cltd fmulp sbb cmp in mov rcrl rcrl xchg jmp mov pop jbe stos push pop push and cld mov jecxz sbb inc or dec add dec je xor jg fiadd mov mov xor cmp fild lock push imul loope jg shrl popa cmpsl lret (bad) jg icebp leave mov loope scas jg mov mov mov sbb mov push roll in dec inc mov in aad and fs inc push leavew lods (bad) mov jg push sarl inc mov sub cwtl mov stos (bad) jo jg push loop pop ror and clts aas jae sub xchg ret sbb ja mov sbb out jg cmp sub push idivb daa pop pop xor dec decl jg mov pushf xchg (bad) dec sti sub in movsl or mov xchg dec jg ljmp jg inc scas or jg cmp fildll aaa xor jg (bad) xchg and mov shll arpl mov mov jno jg dec sbb in rorb mov xlat cltd clc jg orl jg pop jnp jge sub faddl lcall jle or lahf sub and dec dec adc sub cmpsl fs jg loopne test inc sub pop stos mov mov lahf sti jg enter in push fs xchg cmp mov sub mov popf cmp add inc cli insl fimul mov mov mov rcl jg jo xor cwtl xchg mov pusha push jg testl jbe mov in dec cmp mov cmp mov ss adc lcall jg outsl mov mov add mov jg aam data16 hlt sub push xor mul jg fistp popf mov adc and or inc sub cmpsb dec sbb cltd aas outsl cmp lock inc mov cmpsb movsb pushw insb sarl test out xchg mov jg pslld out jl jg pop mov jle fmuls mov ljmp and addr16 jecxz ds arpl ret mov dec add xor test push jno push jg clc jp pop aaa mov ds mov cmpsb sub add push or fldcw pop js cmp pop in test jg mov dec pop jg es mov cs (bad) sarl xchg or out cmpsl repnz jecxz adc in loop pop (bad) iret push mov mov jp popa mov push inc jg or xchg mov pop cmp sahf push gs (bad) mov inc lock jae sbb jge pusha outsb xchg pop aas call cmp mov mov leave fsts xlat jg mov das ljmp adc push aaa fidivrl jns pop cmp xor jne icebp out cli push cmpb lods jg test popa les (bad) pop jge xchg sarl shll cwtl adc aaa pop into mov sti inc fnstsw xor lods jae clc pop in test jg jl xchg sbb cmpsl xchg ja aaa cld hlt cmpb ds jbe call in rcrb jo adc ret jne lods sub leave dec outsl sub push ds loopne cmp pop pop icebp cmc dec sahf inc jg push pop dec mov push add ret insl cmc fs jg xchg into arpl test in sahf inc push mov lods push arpl icebp mov fldt cmp add outsl jg sub jl inc add outsb cmpsb lahf lods mov addr16 roll inc insl inc loop stc mov rolb jg xor push mov jg aad std inc lcall push dec das inc push jg test pop jl inc xlat js fs adc mov push fcompl push pop jg (bad) cwtl ret movsl cmpxchg dec dec jg or lahf mov and mov push mov outsl or into stc pop jg lcall jg (bad) push sbb jg sub ja dec push mov cwtl cmp arpl loopne mov push outsb gs jg pop and js mov popa daa and bnd icebp cmpsl decb inc push mov clc and inc bound ljmp jg insl mov fidivr cltd cwtl adc sti xor ss enter push jg jb inc (bad) jl mov mov pop ret push and sub inc mov in into sarl pop mov test push xlat dec or and and ss lock mov js ljmp fidivrl rolb xchg stc jbe cmc jmpw das addr16 xchg out test add in pop mov jg xor lock jg add xchg jg xchg into (bad) push inc js (bad) sub divl pop mov cmp testl (bad) mov test pusha xor jg dec jns cmc sarl ds pop add mov call jle inc (bad) mov pop and xchg insl sub sbb ja inc jg mov mov and ljmp pushf icebp aas shrb xchg pop je inc dec das sti cs movmskps dec xchg or fimull repnz jg outsl insl loop sahf inc lock mov movsl pop lea ss jl mov out test and jg mov mov jg aam je pusha aad jg sub push (bad) mov adc lea xor jg push sbb fistp sbb jp dec xor push dec dec (bad) pop xor fisub outsl loopne sahf arpl outsb jg mov mov (bad) push jg (bad) inc xchg and (bad) add push inc cmc mov push dec or in sti dec es in lahf mov lret mov pop mov std add and lods test es out pop sub jg sub sti (bad) int3 mov jg div mov sbb scas pop lock sti fs (bad) dec or jno jg adc xchg call stc mov sbb xchg xor hlt jg (bad) in xor ja lret mov test mov xor push jle jb sbb pop cmp mov pop jg cmp jg dec gs mov int3 insb (bad) mov cmp sub xchg rcrl lods adc sub stos jg and push xorl fldcw int (bad) fisttpl adc add adc dec adcl jg ss adc xor push push mov (bad) mov push jl ret jg test js es jg dec and fwait lock jg inc cmp pusha mov aas pop dec int3 dec addl movl mov sahf divb aam adc jg mov and sbb add dec ss lock pop outsl and inc jno inc adc mov (bad) dec inc les mov pop in sub push mov sahf mov jl jg pop push xor aas scas xchg (bad) int fstl dec pop lods sti push xor ficom lock movsb sti int3 jg adc test daa das add mov ja test inc mov pushf sbbb dec add push loop cwtl and lock jg (bad) jae jl test inc into arpl jg test out ds mov sti mov dec pop add add jo push adc divb sub std lcall jns xchg lods lods outsb shll mov xchg jg ds (bad) adc rorb add push call push insb push jg xchg inc dec divb out mov mov mov sub (bad) lock cli stos sub add aas jno pop cmp xchg ja lret mov das mov xchg cmp aas xlat rcrl loopne dec pop push mov dec pop xchg sub cld jg adc push jg outsb or fs in repz jb pop outsl jns test cmpsl lea add mov mov adc pop or xor dec inc daa cmp jg jns std mov push jl xor xchg add adc stc jg (bad) mov jg fcoml stc push (bad) dec popa cld scas jmp add push rorl mov fildl xchg push cmpsl sub por jg popa cmc mov jg or (bad) mov push jg subl jg leave mov sub sbb or fildl push jg fwait shl mov pushf rcrb mov mov sub jg in ljmp sbb dec lret add jmp jg xor ret inc ret and test lea push push sub loop jmp inc stc sti jg sub js mov loop dec rclb and ret lcall (bad) sarb mov cmp aas pop xchg dec das sub dec enter out in dec xchg dec jg (bad) cmp mov adc mov hlt jg call adcl sub inc sbb rolb push pop mov jne inc mov fnop adc xchg out mov sub in or sbb adc aam (bad) aad add js mov jg movsb ds pusha sbb fdivrl and jmp insb test pop jg add dec inc jg jecxz xchg push scas shlb stc data16 fldcw cld negl adc adcb pop jg dec in notl into pop jg cltd dec ss mov leave divb sub outsl jb mov add test mov cmp leave cli arpl fmuls jg ss push mov jb xor cwtl jle dec inc mov test jns xchg xor shl jnp ljmp push aad mov sub dec test xchg fidivr dec mov add mov mov jp mov ss push call std icebp in push aaa mov xchg cltd xlat xor mov cli or mov jg sub out jg jo pop adc or sub call jno inc fisubrl xor pop xchg stos push fisttpll gs dec adc cmp mov stos jg jnp xchg into int3 jp (bad) fldt sysret add mov xchg inc and out es xchg cs jg insb add mov xchg cltd repz ds jge push (bad) sarb imul mov data16 jg mov jg gs out mov test jg clc sbb ret sti jmp and push mov mov test mov js sbb cmpsb dec shrb loope in lds pop sarl movb sti jg (bad) add xor push jg jb cmp mov sbb jge cli arpl jae jno and (bad) repnz test js cli mov je mov (bad) mov dec in sbb dec sub fstp jg pusha sub adc jno cmpsl mov movsb popf arpl fnstsw es fwait cmp jg imul sti mov add jg and cmpsb push mov adc mov std outsl in push movsl inc vmaxsd and pop or outsl lock scas aad jbe mov jg jecxz push sub cmp jg cmpsb outsb das testb mov mov inc imul pop pop loopne or jg xor add lret mov xor outsl mov inc dec sti lret or jecxz in cs ret scas push (bad) and clc sarl jg mov gs dec adcl add in inc jg mov (bad) mov data16 ss pop and andb fistpll (bad) icebp fldt ss rcrl cmp lret and push xchg in aad fs ficomp cmp pop xchg aas inc cmp cmp popf or dec out and jg dec outsl xchg xchg fstpl jg insl add jg in outsb dec addr16 arpl mov mov sub outsl mov das jg mov divb (bad) jmp xchg repnz mov push inc xchg cli jg add cmpsl add insl pop mov hlt xor or mov jg je cmpb jg int3 popf and xor xchg jg fiadd test jge jnp lods fcomps cmp test mov adc cltd enter jg inc xor xor jg (bad) cmp mov loopne and add cmp fs icebp iret test out or lods rorb cltd xchg sahf inc mov inc cmp mov ss mov inc jl ficom xchg sbb sbb lret xor bound jg or mov jbe inc pop inc jae mov mov flds xor and jmp jg jo mov enter dec adcb sti inc jecxz aaa fwait mov jmp push js leave sti test fistpll pop cmc jg xor scas mov jg sub cs cmova (bad) pop leave or push add or imul cmp jne jge add cmpsb jg mov fsub jg loop fnstcw inc cmp insl aam insl cmp out xorl js inc jg fild dec arpl mov fsubrs jecxz,pt hlt add pop pop push push std jg adc dec mov xor jg and xchg rsm orb push dec aas sbb (bad) jmp xor pop jge insb xchg fidivr rclb cmp popa pop inc sub imul call imul cmp stos fs lret mov insb shrl mov cmp xor sbb ljmp arpl jbe shll into daa cmp ds push or pop or sbb dec push aas into cmp xor aas push inc stos jno (bad) mov out call lods test ljmp jmp sti jg sbb cmp cmp pop fldenv sub push lods dec adc sub stc adc sub clc mov jg daa push es adc jecxz mov cli inc xor xchg jg inc pusha aas jmp mov stos ficompl fwait cmp imul (bad) cmc adc jecxz inc sub arpl or out (bad) mov loope jl (bad) jg insl loop (bad) cs mov push pop or popf mov sbb dec test push fcomps (bad) inc dec fildl jg insl adc aaa push in sarl icebp dec cmovnp and aas mov and dec (bad) hlt popa in jg or test jge lahf pusha push xor mov adc add in cmp addr16 jle dec xor jns jg adc dec mov ret (bad) fwait lret mov jmp xchg mov es icebp adc jg nop out jp xchg movsb adc xchg or inc je jg mov bound gs jo (bad) pop jl mov jg lods stos mov insb cmp xor sbbb mov mov jo leave popf cwtl push xchg and adc (bad) insl push idivb cwtl lea fidivr inc adc jne jae and inc xor push imulb cmc gs inc mov fcmovnb loope aam in stos incb test pop sbb fisttp fbld mov loopne insb add pop inc test aad xchg int3 dec leave cld into sub mov mov cmpl jg xchg or jg in mov lret mov push dec lea jno jg in fmull insb jg stos cmc cmp cmp inc das cld adc int dec lea and jg (bad) les test xor in jge inc dec adc je inc iret pop lds ret jg push notb xchg daa (bad) jg xchg aad mov sub mov jg popa xor sbb aas imul sbb fldlg2 or rolb mov decb push mov test mov cmp jg or popf cmc test push (bad) pushf aas dec les and and push jg lods mov lods jg cmp jbe out add jg lds mov jg mov sub mov icebp movl test addr16 mov loopne daa jno aad dec (bad) movsb jg pop (bad) cmp and imull mov sbb lahf je insl js and pop sbb jg jp data16 cmp stc pop arpl test rcll in xchg jmp (bad) mov sbb ret les imulb cmp into rorl (bad) xor out dec sbb cmc idivl mulb js ja dec pop mov fisubr ja and sub push enter add rcr push outsl lds and (bad) jg jo cmovne or mov insl xor test mov mov cmp cltd mov popf and jae inc nop daa sti mov ja xor mov das sbb inc ds jp jge movsb push mov xchg push test (bad) mov push inc jg scas out fstpt inc mov jg xor or out cltd popa mov cmp pop and sti mov (bad) and cltd push dec sbb jae aas movsl dec mov jmp std jg mov aam jg mov and cmp (bad) outsl popf rorl pop mov icebp mov clc jg push inc sahf rolb mov ja lret in call pushf mov leave mov in js jne lea pop inc push popf es jg aam mov out cmp cmc jg or sub mov cltd dec pop mov xor inc pop mov jno cmp jg stc loope cli in adc jns into mov adc jg les bound xor jb lds hlt and push jg push les push adc (bad) int pop movsl popf mov lods pop xchg lret inc mov lcall mov es dec out pop je pop pop mov je mov sahf mov idivb bound mov or aad xchg pop sbb pop cld cmp rol and push loopne dec push popa into (bad) mov pop arpl jg dec sub and cmp mov xor pop (bad) jg loope lods mov xchg divb dec fnop nop xchg add aaa pop dec inc std das mov in pop push imul jns clc pop loope push jg rcrb popa je cwtl (bad) jg aam aaa xor std lock sub aas mov mov arpl pop jg imul push aas cli push cmp idivb les icebp jnp push repnz cmpsl xor insb cmp adc mov mov sbb jg mov ss jg jnp adc hlt pop jg cs xchg mov movsl leave pop fwait inc push cmpsl dec jg mov jnp xchg cmpsb sub test jno mov mov add in sahf int3 inc out cmc pop sbb or mov cmpsb idivl sub ror movq inc adc jg mov fs aas jg enter sarb jg lret cmp cmpsb push in mov stos push push not ret aas lds mov test dec sub notl pop outsl dec incb sti movsb jg aad je sbb js ljmp aam sbb enter pop and mov jecxz mov sbbb jae adc jmp int3 push in mov data16 sar mov mov mov sbb pop lahf push imul xchg into insl mov lea push push xchg push jl pop xchg jbe or cs push gs mov mov iret (bad) dec jg mov sbb stos cmc int3 das jb cs jp seto (bad) fstp js ljmp jg adc adc jp pop xor lea cmp adc mov xor jg imul mov push cmp mov fcomps inc mov cmpl inc (bad) stc dec sub inc mov dec int3 mov jg cmp jl imul ljmp mov dec cmp and icebp cmpsl js insb push pusha jno repz mov mov jg lods call (bad) out xchg cmp cmc mov cmp mov and jg ret jb lcall lret scas dec loop add imulb test cmpsl pushf cmpl cld pop lds nop mov xchg jp sbb mov mov popf stos add fwait out mov test lcall push xor fnop cli mov jg mov cld jg test and les cmp dec push pop test jbe cmp stos sarl stos dec mov sbb sti lcall bnd jg adc sbb rcll sub xchg daa inc and dec div mov cmp mov jecxz inc ffree mov in pop fisttpl and cmp cli add sub and and xor add js xor jg (bad) lcall push mov std push mov xlat mov jg arpl cmp cmp sub pop out decb inc add adc cmp and ja inc mov loope jg jp adc mov js mov cmp cmc mov (bad) lret xchg movd out mov sahf dec andb xor loope and fisubr xor in js sbb cmp jg or pop loope and test xlat into sub outsl (bad) sub fwait jg jbe sbb jg in cli sbb addl cltd adc xor inc jns pop mov adc dec out mov repz xchg jg push xor xlat pop push pop mov pop popf adc inc push popa pushf jg add or hlt and out inc push loope or jg inc lret mov fidivrl adc mov cmp xor mov fisttp xchg mov jg and ds test scas mov cmp cmpb inc fs je and cltd aaa fdivp mov dec add mov gs jg jge cld fsubl sbb clc (bad) mov cmp jg addl pusha out dec into add popf mov cld outsb sar lock mov mov mov movsb movsl pusha jg jl (bad) imul dec cmpsl push (bad) adc clc (bad) mov ds bound insl lds jb aad inc iret push insb mov les outsl roll add mov jno inc mov outsb mov jg das lret jg push push lods into and sub je lds inc inc mov fwait (bad) pop dec mov addr16 xchg arpl scas inc lcall xchg clc mov jg das sti mov jg sub std inc mov push xchg pop jnp sbb dec jl mov es xor pop pop sti pop jge push outsl popa pop loop push mov ret mov push jg aaa mov xlat sbb movb jg sub sbb inc xor pop sub mov dec mov lahf jns jg xchg jecxz jle arpl sbb cwtl jg xor lret mov mov mov ss cmp jg out mov lods jg fdivrl cmp test adc fcmovbe add mov sub or pop and lea jg imulb das mov mov push dec bound sti iret mov push fmuls sti adc cmp inc cwtl and insl mov jg jne jnp and jg lods xlat movsl pop push inc push jg out sahf lret or xchg cmc je ss pop pop adc test jg mov mov lahf fnstcw pop inc jg movsl ds sbbb jg mov cmpsb imul pop sub jg lock cmp pop in dec jg das jno lods lds cltd inc lret repz jg cmpsl rclb sbb jo inc ss (bad) mov pop jle out xor xchg arpl cmpsb or lret sbb add fucomi push pop xchg and dec cmc mov jg fdivl pop hlt gs movsb jmp inc push data16 (bad) or (bad) cmp xor repz shrb popf ja je adcb jp call aaa pop cltd mov dec enter fstl jg (bad) mov not push inc loope inc sbb mov or dec xchg cmpsb jg adc jb cmp mov lea imul fimull out xchg xchg clc repz loopne jg ds mov lcall pop in icebp lock jp dec loope or cmc jg loopne fstps mov iret mov add out push js or xlat out loope sahf in cmp dec fisttpll pop negb dec sub lds adc popf xor xor mov mov dec adc fmull shrl jg push push enter sti test push xchg sbb jg scas and aad pop inc jg push inc test mov loopne jg scas mov lds mov (bad) arpl pushf jg (bad) iret dec lods stos cmc push jg imul mov cs dec add (bad) xchg mov repnz inc out push data16 (bad) lods mov cmp inc jo cmp stos and lods and inc sub mov les and sbb jg push fcmovnb push cld hlt rcll sub popa pop pop mov push jg mov and jg jo and sbb int mov or jp inc pop test mov mov pop and imul cmp pop push inc push pop mov sti jg cmp lcall rep mov fisubr dec sti mov pusha inc adc (bad) outsl sbbl fsubl pop mov ret ja gs bound lahf pop cmp mov push pop jg jmp fstpl scas ss inc mov mov add cmpsb pop (bad) pop push jno sub cli xorps cmp or dec out add adcb stos out dec leave jg fildl sub enter jg fs adc ret xlat sti adc into add cmpsl clc jbe mov mov jnp lcall outsl inc (bad) mov mov js fiaddl jecxz mov lds ja repnz aas out rcrl fcomps test aaa je push int3 jg sarb insb jg in dec mov jecxz loopne mov jae bound mov jg fwait dec xchg adc inc sbb int3 cmpsl ja daa (bad) outsl add inc mov pop adc and mov lock popa movl pop jg (bad) xor jg lret jns pop dec jg jecxz aaa out jae,pn inc mov xchg aas sbb adc test icebp inc jg and lods jne (bad) out push test xor jg aam rcll sub jg jnp call mov gs (bad) lods push push cmp jg adc add push jg inc outsb cld arpl leave jg push pop repnz out xchg xchg mulb cmp sub pop mov leave jno imul ljmp mov adc je insb xor mov mov jle push and xchg jo push inc lds mov ja push outsb aas ror pop sub fdivrs mov mov and (bad) loope jg sbb xor data16 dec cmpsl iret cmp jge mov lods cwtl or repz jg sub (bad) pop inc pop jg shrb pop iret subl sarb fisubr mov xchg inc cmp cmpl jbe into xor sbb mov jg mov dec sbb sub outsb roll jne cmp and adc jg dec inc xor mov jns mov sbb inc out test sbb pusha jg lock fnsave push and mov jmp cmc imul or dec mov xor (bad) jg mov ret xchg jg idivl (bad) lock add arpl (bad) adc and repz cmp aas jecxz adcl mov fnsave and xchg mov hlt loopne loop sbb sti mov or mov xchg mov lret in or idivl jg mov fisubl inc push (bad) dec into jg push aas or or repz mov (bad) jnp les fsubs outsb lods jg insl mov or das lret jg iret cmp mov push jo imul sbb push or xor stos out xchg (bad) xor bound pop lcall xchg fwait movsbl adc cmp xchg xor or loope dec sub mov xlat cmp iret shll jg push leave xchg test in aas xor ja fidiv jg and pop xchg mov push jg js addr16 icebp adc and jle jg in inc int3 mov xor fistpl ds lahf rclb mov push mov jp jg inc mov jg (bad) cmpsb jg mov lcall jne je nop scas add test cli mov jo adc mov rcl (bad) out push xor push adc adc pop mov add push mov lea mov sbb inc inc mov jge sbb scas out and std mov adc loop out mov cltd jp sbb jns popa mov xor pusha es push std jb scas jmp pop dec xor test pop add add jg xor jle outsb push fsubp mov jl and dec clc cld or xor hlt mov jg add pop mov fwait dec pushf ja imul sti jg mov sbb aas cltd fcoms inc sub dec ljmp into xchg and scas les pop ja push jg pusha sbb stc sbb push jg cmp add mov or mov dec stc jae addr16 jg xor lret sti add jg or cwtl mov and aas daa je sub xor ja mov insb cmp mov push cld popa adc lahf jmp loopne and sbb gs adc pusha (bad) mov mov xor mov lret outsl stos cmpsl ss mov pop jg xchg shrl push das in xchg mov inc jg add and call pop cmc and stos out sbb adc (bad) dec inc mov cmpsb sub fidiv push mov rcrb add js pop gs cmpsb je in mov fcomps pop fmulp arpl out or or aas xor jl push pop jg jle rcrb ja js stos in fcompl xchg cmp negl rorl pushf cmpsl out test jg sbb mov xchg jne sarl jge dec pop sub and mov and push popf jg jmp js sahf push (bad) jg enter cli cmpsb popa jg sub lods jg scas insl movsb or out fdivrl aaa sahf mov imull mov icebp add out std jbe pop xor xor mov inc aas cmc mov add sub mov pop xchg addr16 cmp (bad) aas imul (bad) pop clc pop sbb cld leave lock and shrb jg push ret clc mov fdivr mov push dec xchg cld push push test fadds dec (bad) fnstcw inc movntq cmp leave jg sbb orl ljmp push adc loop sarl sbb lods ljmp je mov cwtl stc jg and (bad) jo outsl or dec jae shl out shlb add jmp fnstsw subl xchg mov aas ficompl cli mov add sub jg test pusha sub xchg and (bad) cmp cmpsl (bad) jg jo mov sti nop mov ss clc jg add loop jg scas xor into pop mov repz jnp jg sub jb lds movsl xor out outsl std xor jl add and push mov mov sti mov adc mov jg loop gs insb int daa pop iret push lahf (bad) xlat pop mov mov pop pop dec xor in in mov int3 mov aas inc mov cmp jg sti fistpll push jg shll ss xchg adc repnz jle sub jl mov xchg jae xor jg dec rolb jno (bad) pop inc add in jmp jg dec ljmp fdivrs dec sbb iret out jo popf das (bad) jno and xchg aas add jg xchg mov sbb test loopne dec xor ds add jnp cli (bad) lock inc outsl outsb push mov mov sbb pop and mov negl ret into push mov addr16 and pop arpl lock mov inc outsl add cmp scas pusha nop xor cmp mov jg mov sbb jg das or sbb pop cmp mov (bad) lock xchg dec xor sub ljmp inc push pop jg repz in jg dec ja cld das adc (bad) mov push push add scas jge std das dec enter js xorl lea std xchg adc (bad) jbe dec andps rcll xchg addr16 push mov (bad) outsl mov mov mov popa inc mov int cmpsl jge pushf test push adc cli scas and (bad) dec jg lock out add nopl jg and pop cld xor mov ljmp in iret bound adc out call jg lret stos gs cmpsb int3 std jg or sbb mov dec pop mov add mov outsl xchg mov imul adc jg mov push jl jle jg xchg add sarb aas cld lods jno pop mov dec mulb daa stc loope mov test cwtl xor xchg lea lea push add xor out repnz cmpsl std lds jne push popa negl jg mov add sarl mov xlat stc ljmp push shrl imul jnp and aaa inc jg push sub and sub insb (bad) (bad) inc mov ret (bad) sbb loopne jg pop incb jg fistp mov sub add fimul (bad) out jg ret and mov sti enter lahf scas jg or add nop (bad) xor xchg pushl xchg jg es push enter adc inc jg and push xchg stos inc jg xor insb adc subl in mov cmp xlat scas and jg jl or aas adc ltr or test into rcr pop addr16 mov mov inc xchg insb mov gs mov pop fldlg2 jl jg dec push lea cmp mov mov mov pop inc movsb pop data16 aas insb cmp stc push (bad) adc lds arpl jo cs mov fist arpl fs jg mov jmp add test cli (bad) pop inc int3 dec cmc sub adc fwait or adc lds jns xor mov insl push imul enter xchg lea ret push jg scas ds pop stos sti sub dec xchg cmp inc inc sarl (bad) repz jno pop jmp incb jg push fdivrs loope jno lcall data16 daa testl aad and aas fldl2e movsl sub inc dec and (bad) inc jmp mov rcll mov jg clc jle test xor sbb cmpsl fadds dec loop cmp jle xchg or inc jg cmp movq mov mov sub cmpsl bound or mov (bad) mov dec call or dec jne push xchg jg bound outsl lock lcall movsl rorl jae or jg mov push lcall pop jnp dec inc idivl cli pusha dec call jae push sub xor movsb sub push dec inc pop fimull sbb (bad) xchg lahf xor ja aaa repnz out jg and mov jg and aas (bad) or insl imul fmull cmc dec xor aas jl cwtl xlat (bad) (bad) mov inc (bad) adc hlt aas (bad) xchg and xlat mov push jp jne dec sarl (bad) lret inc outsl inc jg mov jge (bad) icebp sbb fdivs mov jl pop and mov adc loop mov inc lods jg and (bad) mov jg mov jg mov outsb js lea frstor fcoml (bad) in lock enter push jae leave ljmp loope stc (bad) mov pusha (bad) iret stos dec xlat mov push jg arpl cltd stc mov jae or pop (bad) jb jg and fisubrl cmpl hlt sub xor ljmp mov lret cmp xor mov mov jns out repz imul jg mov inc addb push cmpsb mov dec jle in addr16 push mov sti shll jo aam mov mov push xchg jg (bad) mov jae aas lret add add add mov cmp idivb xlat in pop jg les outsb jg imul mov push aas sub or dec sbb xchg add stos mov jg std scas out xchg push mov or outsb sub lret jg push scas clc out sarb call sub aas ds jmp mov mov mov mov pop inc push push dec mov mov adc push (bad) dec (bad) cmc jg lret jl (bad) and popf xor mov jg das pop jne jmp scas jne lock inc aas adc mov push or xchg xlat or dec arpl jg (bad) stos pop cmp and xchg mov mov subl (bad) lea add mov das sarb mov or xor xchg mov jo cli add mov sahf xchg pop pop jbe idivb int3 sbb jg fdivl test xor (bad) xchg cmp mov mov dec sub or cwtl ja stos mov push lea fmuls jo stc push lods dec mov dec cmp pushl outsb adc in into loopne sbb mov pop cld cmpl jae and notl jmp adc sahf mov mov xchg daa in test cld xor cmp and lea imul ds push jg cmp lret sbb aas xchg fadd fisttpll das add arpl fisub adc lods sub and push ljmp sbb sub pop mov pop dec mov out or and in jg cmpsb movsl mov loop jg aad ret out mov hlt lea decl sub mov cmp adc stc cmpsb xchg sarl scas lods stos cld sbb jge,pt dec push mov mov fadd xchg pushf pop dec mov jnp dec add stos mov jae dec jecxz sbb adc sub icebp mov mov dec sbb mov int3 arpl and push sbb jle scas sub jg loopew pushf mov cmp shld adc sub mov and inc mov xor rolb jg test popa shrb xchg aas iret jne int3 and ja jno jg sub or mov cmpl mov jb push inc jmp push xlat lcall ret or cmp dec cmp movsb gs pop leave push mov add jns (bad) rcrb fwait cmp outsl fiaddl jae pop pop xchg loope jl into jle dec cmp xchg jg jns mov aaa sub cwtl inc xchg jg jae divb pop add jmp mov lods in jg je inc push and arpl adc (bad) aas xor push arpl aas jnp pop fincstp adc ja dec inc sbb sti mov mov int3 sub hlt out push pop stos push jg stos and mov jg (bad) mov js arpl mov mov movl call xor mov xor sbb cmp sbb stos (bad) push mov cmc push inc mov xorb arpl roll mov push in loope mov adc pop jle sti dec inc int dec subl call mov sub adc (bad) sbb sbb mov (bad) push cmp sbb lods jbe std xchg jg (bad) data16 inc gs xlat mov addr16 popf mov xchg test leave inc xor cli out jns insl or sub jg push and jae mov or cltd xchg and popa jg (bad) and adc nop ss psubusb sub pop test push jge cmp jg ficom push divl mov jg jmp mov jg std enter (bad) and sub lock aam jae ja jg add cmp jg ret lods jp daa hlt mov add inc fnstenv mov cmp mov push sti xor inc bound das xchg or and jl add jg xor xor sbb jg,pt mov pop pop jg mov sub maxps add push cli mov scas fsubr jg repz push cmp clc push int mov xchg mov dec inc test mov xor lea in sub jl xchg pushf (bad) pop aam xor mov arpl jg sub sbb dec jg gs call or bound cmp popa ret ficom (bad) jo dec or sbb (bad) (bad) repz arpl pop and xchg jg inc sub mov cs inc hlt lds fistpll jg pop stc repnz adc xchg lahf fdivrs divb push mov adc pop jg adc sub rclb (bad) jg ljmp jg into scas les repz cmpsb sub sub jg dec jp mov data16 xchg dec sahf pop movsb stc mov mov imul or lods iret dec ds out mov jmp push xchg arpl mov daa dec jge rorl add mov pop ss mov shrl mov ficompl push adc hlt ljmp loopne mov mov ss mov or jno fstp add stos jg sbb ret pop mov cmpsb sbb or inc (bad) sbb mov outsl xor jnp sub xchg dec imul (bad) cmp mov test xchg xor pop push out cmp and aad test outsl adc fisub (bad) mov adc (bad) lock mov pop xchg cwtl jg mov aaa in mov dec pop outsl int mov pop popf inc jo xchg mov mov mov es or dec lcall inc inc cs add jg push and push add jg lods or jnp sti jo shrb dec adc adcl sub mov jmp mov addr16 inc mov scas (bad) in inc out and pop jne js fs jg and mov cmp fsubs add lcall roll jg fcomps ss std es lret aas push or movsb sub xchg aas jnp xor xor cmpsl out push int3 sub and push scas ret xchg push jge mov push lds repz jg scas fsub add jae ss sbb mov fiadd lahf pop fcoms jg mov int3 fdivrs es and jae scas ja inc aas mov mov dec je jg push cmpsl stos mov sub pop (bad) jo dec cmp mov lods stos mov jg add pop mov pop mov push pop fistpll or insb jg std lds jg fsts adc push xchg dec lods jnp mov pop dec sbb cmc repz movsb sub pop add outsl or mov add fs or dec xchg pushf aas sub data16 mov dec xchg aad push ljmp xor mov jecxz xchg mov dec xor jg jns mov mov and jne cmp and iret mov inc and es mov push call add xchg jns out mov jg movsl in adc sarb or sbb and and mov sti and test jg add jg cmp mov pop or sarl push or in jnp push int mov loopne (bad) mov xchg jg push mov sub (bad) icebp xor (bad) push push jmp cmpsl outsl and jg icebp fimull jg mov and jecxz test (bad) dec outsb and push sbb andl mov test sbb fcoml sbb mov std jg or jbe test xchg mov int inc jp aam adc or rcrb imul out dec test jg int hlt lods and mov inc mov xor sahf inc test mov aas or or sub sub insl jg pushf lea mov into xor push shr and xchg push jnp movsb jg mov push cmp rcrb xor cs mov lds gs xor fiaddl xchg aas (bad) lret in test lcall dec imul push jg arpl in (bad) sbb ljmp jg jge imul mov cmpsb fs ficompl cmp jp inc push (bad) jg pop (bad) push lds clc (bad) xchg inc imul pop arpl or mov sti ret (bad) lea mov pop mov sub jmp lret mov mov ss push lds addr16 stos jg inc sbb pop hlt dec ss dec jge jae push mov lods and mov clc aaa push mov decl mov pop imul lea add cltd sarl dec pop add mov jge jns dec dec xor pushf sub lea mov xor or (bad) mov (bad) jg add push xchg loop sarb mov mov inc jno cmp pop nop jg xchg or repnz cmc xchg sti sub popa out inc adc sub jecxz jbe ret dec xchg jg mov or aas movsb add inc sbb dec jg clc cld imul adc jg and in outsl add sarb lret mov jg pop adc lods cmp jg dec sarb adc mov mov lcall and pop inc mov sbb jmp jg jae dec pop lret pop cmp cmpsl push jg cmp mov movsl jbe xchg cmp fcoms jle loopne add ss jg lcall mov outsl in out in daa ret ds decb (bad) loopne pop push dec pop enter sar push js inc sub ret aas popl pop dec dec mov loop jno fidivrl adc jg jne or repnz xlat mov std movsb jg pop pop push mov adc jmp xchg icebp int3 adcb fsubrp or inc in jg lahf xor insb pop mov pop sarb xor fnstsw in adc mov movsb or aam cmc jg xor fnstsw pop xchg jg dec call test adc cld xchg test out fsubs jmp sarb test movsl test or mov imul inc outsl dec mov and inc repnz mov lret rolb stos cmp jg sarb mov mov aam inc andl mov push push jmp cmpsl or push lods adc imul aad icebp cvtps2pi leave and push pusha xor lock xchg xchg or jecxz mov push clc pop mov sub and jg xor rcrb xlat and (bad) add xchg push and pop (bad) jne jg jns les sbb push fcomp ljmp dec imul mov jg push hlt add jg push dec sbb add fnstsw pop dec imul iret jg xchg adc inc in jg sbb stc jecxz daa push inc push jg jo pusha out insl xor mov jg jnp cmp jg cltd (bad) sti lds or xor (bad) mov mov jmp hlt ja out popa add aas pop (bad) negl insb loopne mov xor aas push dec das pop dec es repnz jp or mov imul sahf notl and mov inc rcl mov lods fs jno jno mov (bad) outsl xchg iret test or bound jl mov jg mov jo data16 jno ror push in icebp aas jg iret out sahf es cmpsb std jg dec or jg (bad) push push pop ror or dec je dec jg dec jp pushf scas cli test sbb aaa jg addl xor mov push jle add fadds jg jge test iret inc dec jg cmp push loope scas add push xchg xchg cmc jge push xchg test ret xchg push dec pop iret andl fisttp outsl incb arpl (bad) fsubrl pop jg adcl clc pop cmpsb decb outsl mov fstpl (bad) arpl mov jg stc (bad) push jg dec (bad) hlt push stos add outsb and lock inc (bad) adc out (bad) std fwait pop orb xor xor fstp jne negl push lods inc clc in adc jg leave mov mov cli jnp dec dec or fidivrl mov mov dec pop cmp in mov dec insb test stos mov fimul xor inc and in lahf and sarb cli xchg data16 xadd int3 lret pop dec test and or ficomp js adc popf jl (bad) dec pop std pop fimul clc scas int icebp jle inc sbb xchg sub ljmp or jg daa xchg add test insb pop ret jb mov cmpsl scas fldl sti sti sbb lea jne or test xor stos mov aas jg jne cmp jg leave adc jg sbb pop sub fdivl ja daa jg add mov or repnz subb adc push or lret or jg sub pop (bad) (bad) mov mov adc cmpsb mov jg and int3 sbb (bad) (bad) mov imul fs xchg stc sub mov xorb dec divb imul ds push and cmp (bad) jge lret insb dec cmpsb jecxz and jg mov adc and jb push inc xchg clc aam out or sub ret and adc jbe jb sbb lcall xchg dec repz dec mov dec and fsubrs mov mov jg cs adc outsb repz xor mov jg or or movsb ret xor loop ficom lds mov (bad) push jg fs or sub jns jge jg fbld andl xchg jg push inc jmp sub std mov leave push cmp cmp fnstcw push xchg jae jg dec inc stos mov jne jg into push push sbbb addr16 xor dec mov pop jno gs aas mov inc inc aas movl jle mov push ss daa mov jg push lods xor inc jnp jg movsl add push lea jmp test push insb push test cmp daa loopne call jg lea mov lods pop mov bnd mov sahf (bad) pop xchg push imul mov mov mov lock pop sarl test idivl pop sub stos insb mov jg jecxz pop dec sbb xchg jg push leave iret and ret fnstcw mov dec (bad) jae bound repz lock jg ss inc mov mov lock cmp mov mov mov pop jg add add sub xchg rcl jae xor inc mov jg icebp into subb dec jg rcrl sub dec addr16 mov push pop sti dec loop mov inc es cmpsl jg mov cmpsb sub jg xchg (bad) (bad) pusha mov retw jmp fdiv adc cld scas mov nop movsb (bad) cmp inc stc ret rclb xchg mov xchg sti mov repz or mov scas push xchg outsl mov xorl xchg ja pop movsb jg mov dec sarb sbbl inc mov pusha gs ljmp rcrb add jg (bad) mov cs cli inc (bad) (bad) pop outsl or imul push mov stos lds sahf sbb ss add add test or pop jg in push cld mov cmp out loop pop insb movsl pop lcall inc bound jg lods push add cli addr16 jl adc inc adc not xchg xor mov jecxz outsb jg xchg std mov cmp mov fadd data16 in fstps jbe sbb mov add and insb adc sti jg test xchg jg (bad) testl jne xor cmp pop mov into jnp clc pop jg (bad) adc in std ret (bad) mov fsubs jg cmc dec or jg rclb add jg loope stc scas push out jg mov ror mov cwtd lret imul in dec sti push mov lock fistl leave push and imul jg push enter mov inc lods push xchg test popa jg fimull (bad) jg mov sbb call add cltd loop sti pop jbe mov outsb adc push pop cld int mov gs adc and jg dec aam push xchg add cmp xor ljmp mov nop pop imul adc cld std jnp sbb mov dec test (bad) cmp mov scas xor sub lahf jg mov imul aas xor test aas jbe lds dec inc arpl test sahf lods mov test call jg push fstpt enter jg sbb pop jno cli mov add inc cmpsl test movsl xor ja icebp movsb cmpsb jo in leave int mov mov sahf stc push sahf xor xchg jb mov shrl jg mov out xor repz jg sbb notb clc imul (bad) jge jg cmpsl out mov repz lods mov mov xchg push dec inc icebp push addb aam outsb xchg add sub outsl adc stc pushf adc (bad) into mov daa xorl cmp jg call add adc popf imul icebp test loopne ror cmp inc and sbb inc (bad) in sub pop (bad) jno pop (bad) jg outsl cmp gs out movq push test pop adc pop add inc sti inc pop fwait jg loopne push andl pusha jg rcrb xchg jmp pop (bad) aas cltd test pop inc or sbb lds push repnz das add cmpl sti bound int3 (bad) in dec gs cmp outsl adc jg cmp mov or mov dec int cs out xchg ret cmp mov aas insb dec mul aas call add iret arpl stos fistp inc mov sbb sbb xor aas arpl jns jae jg cmp rorl mov imul push pop cmp divl fsubp dec adc adc push stc incb push inc mov sbb pop ja xchg jg lahf lea div mov sbb mov ret mov fwait (bad) jle in lea ss mov inc aas aas inc movsl mov outsb repnz fimull and pop imul pushf shll loop addr16 cmp dec sbb in out sbb imull jne mov repz aas repz mov xor outsl cmc jmp pop pop xchg xchg jp xchg jg cmpl movq push mov mov negl repz adc aam repnz add sbb sub out push or clc in and ret stos mov daa mov sti (bad) notl test jp ljmp mov (bad) mov jg lahf push cmp minps (bad) insb test dec stos add pop mov sahf stos jg cmp xchg das inc xchg pop aas into sbb add aas jo xor push loop xchg sahf mov or sub xor ret mov popf shll mov jg jns cmp jg lcall jg mov mov pop mov mov cwtl or in jmp std pop loop jecxz aas insb xchg mov lahf push add jg stos cmpl mov sub adc scas push dec jg fs fsubp jg mov jg ffreep test push out xor mov call imul jb outsb pop test mov push push push push xchg push call xchg pusha inc mov jno sub adc clc mov push xchg aam ss jg fwait push out lea dec jne mov inc jg mov loope fnsave sahf mov sub sbb cmp cmp cmp (bad) rcll dec or sbb loope jge enter jmp mov add cmp mov pop (bad) push jno cmc lock jge inc xchg das jg addl add out cmp pusha xor fstl fs hlt jg rcll mov push jo aas mov cltd out jg movsb pop rorb (bad) jae mov outsl pop ret ret aaa jb jg pop icebp adc mov add in (bad) jmp and sarl insb stc lods or add jg jbe (bad) mov mov pop daa loop xchg adc pop jg bound inc jg xor jg roll movsl jmp and dec xchg scas (bad) jg shl fist lea mov lret or call pop xchg ljmp and (bad) adc fwait repz aas iret xor dec ret leave jg pusha rcr mov mov mov jg push and jg xchg mov nop lea pop jb js frstor movsb jl stc int add mov outsl rclb fimul mov aas add (bad) and lods dec int3 scas mov (bad) jg or aad or jg icebp enter jmp pop mov mov mov sahf aaa jne mov orl shrl xor lea cmp xor xchg popf jg loopne dec jge mov rcrb ss lods jg into mov lahf and int3 (bad) fnstcw jg cmp call scas in js inc imul fistpl dec insb insl and jns push mov mov mov jg dec out add pop push cli loop push (bad) in sbb push mov mov push and sub or inc inc jg sbb mov jmp gs dec movsl iret dec mov mov sub out inc inc pop or or jle fdivr outsb mov sub shll xor pusha fs inc inc shll pop imul push xchg pop fstpl cmc and push jg sub stos clc ljmp hlt icebp inc popa mov jg jne int3 lock inc mov cmp cli push sub hlt mov jae mov jno inc std mov cmp loop jg shrb sub dec iret jg or stos cmp mov pushf (bad) sub out (bad) jg cmpsb lret or je lods das cmp ss mov test jo sbb out mov std es push pop cmc gs mov dec push rcll push pop mov and pop xchg call xchg dec jne jg (bad) lcall sarl jg sub xchg fmulp dec outsb jg add jp jg arpl stos cmp mov testb pop add sub enter cli sti imul ret pop sub adc cmp sub inc cmp jo pop pop xor pop shr jg,pt mull jbe or mov mov movsl jg or not aad cmp pop cli lret push mov jno jg jle shrl int mov inc inc aam dec mov add popf push (bad) popa dec inc into jg jecxz add insb lret and idiv cmp jle pop jg in jns aam sbb stc jecxz jg in push iret (bad) ss es mov stos cmp lcall leave xchg imul jg clc adc jae enter popl ffree lods sahf outsl mov jg fndisi(8087 mov inc dec jg push dec fs test (bad) aas mov (bad) push inc int3 push mov mov cmpsl inc or ret mov jae imul jge adc mov (bad) xchg je mov pop pushf cmp mov cld clc adc jno fistp out cli xor aad scas test out push jg cmp test mov jo sub xchg es jge add lea sub inc mov cmp dec fisubl cmp cmc sbb js jmp xor std jg pop out dec pop and sahf stc roll add pop sbb jp dec fldl jg jo cmp fistpll ss lea mov jg mov xchg pop bound xchg add mov stos lock cmp movsb mov mov addr16 jo rcl mov pop pop dec insl jb (bad) mov hlt jecxz cmpb mov test jg pop and frstor jns ds adc pop (bad) inc push jg (bad) sti icebp mov xchg stc lods imul sbb xlat cwtl pop sub mov cmovl mov fistpll (bad) (bad) lods sbb loope jg mov ds jg mov jecxz jg aaa movsl jle jb push push pop xor lret negb jg stc cmpsb sub or jecxz loopne mov adcl sub and pop gs roll dec jg (bad) stc out sbb addr16 dec mov and adc lcall sti jg (bad) xlat ss and and jg int3 sbb sbb xchg mov jb xchg roll jae mov mov in mov cmp push cmp pop sti shrl fidivl cs and test add lcall inc test pop inc inc add xchg jg cmpsl testb mov stc js ljmp cmc mov stos movsb bound insl adc aad push roll push mov bound das orb jg leave cmpsl mov jg dec sub sub daa ss ret sti (bad) out jg and imul add rolb mov dec xchg repnz cmc mov inc or test mov and addr16 mov in js mov push pop bound push sub jg jne inc adc fstl (bad) hlt jg xchg xlat xchg push jg mov cmp es mov push push xchg pop aam jg cmpsl cmp mov jg in clc sarl pop fincstp cmp (bad) leave xor mov inc in mov out nop cmp pop dec push xor rolb mov xlat jg push push dec (bad) dec mov and mov mov pop mov fdivrl out pop mov mov push inc loop jmp xchg (bad) and ss mov repz lds push (bad) in pop (bad) lods push mov mov cmpl adc mov jg shrb lock pop (bad) fs lods push int3 xchg push fstpt inc pop pop push jno clc jl mov mov xchg mov pop test aam mov jg (bad) jmp enter push cmp push int3 not inc cmc jg cmpsl mov mov or xchg mov ret push adc repnz cmp lahf ljmp negl or add cmp sbb add and call aas mov repnz mov mov fcoml push sbb sbb mulps imul adc sub pop data16 in inc jg and mov rcl jg mov add jg popf lcall mov inc repz jg pop loopne xor inc adc or add lret pop dec jns mov imull push rol jo jmp add push jg push and int andb jg pop sbb jg push inc (bad) jne cmc cli jg into call stc jg repz mov jne lea xchg out and dec (bad) jg,pn dec lret cmc scas cmp lahf js adc test sti sbb xchg mov or inc or cld sahf jg stos jge xchg add or xchg rcrb jg pop imul mov dec les lods sbb jne mov jg insb mov jns pop mov mov jg,pn subl je enter cmp xchg gs dec sbb sarb xchg fadds dec jg mov pop hlt jg and (bad) out jecxz jl add jg loope push push ss jg mov inc add lods pop and sbb fcmovnb jae pop push add pusha push or dec sti add mov push stos mov imul jg cmp ret adc test or mov out insb jg cmp rcr out jae or mov fisub cmp inc push mov out arpl cld int3 hlt mov mov jmp pop jg mov xor pop (bad) shrl ja sbb mov add mov enter lea jle shrl or arpl adc cmp les ret cwtl pop js and adc sbb dec outsl sub jg sbb or xor xchg stos inc inc out adc add jae pop jg,pn aaa push test movsl insl sti sbb or jae ret add adc mov insb jno (bad) call outsl cmp mov imul add mov jg lds mov loopne popf xchg mov adc jnp mov pop jg mov or lret mov pop push ja test jle xor jg in fadd sub out rolb fistp jg push jbe pop adc (bad) xlat cmp (bad) mov inc push or cmp xor dec mov arpl (bad) jge test push lds jg es xchg imul repz andl cmp outsl fstpl or jg in xchg jo pusha mov rcrb sub inc dec mov cmp adc jne jge shrl out sub xchg je jecxz push jg ret xor cmp icebp jg add mov mov push jg imul mov out inc cmpl jns or divl imul adc dec das mov jae inc je cld jns (bad) ret push lods cmp sbb jb adc sub test hlt inc mov adcl int3 jg cmp mov cmpsl jge jg sahf pop inc mov insl jg shl ret out or jg jl inc pushf pop cwtl and (bad) cli sbb (bad) add inc push jg dec aad xor fisttpll and stc jg jnp fdivs fsts sbb in imul pop push pop nop std push aam icebp je sbb lock push fucomp add cmpsb daa jne jl jb xor lcall mov push cltd outsb pop movsb jg xlat sbb add sti fsubrs xchg jg insl xchg mov push repnz or cmp mov mov pushf andb sti add jg (bad) xor scas jg loop sahf fistpl data16 push mov add cli aas cmp clc ret lds movsb pushf adc sbb push mov ja push lock jo call test fildl sbb sub jg and in (bad) (bad) ja dec and dec hlt outsl xor jg or xor mov mov sub fist xchg psubusb xor loop loope pop pop pop jg inc movsl push push les push sahf rolb in xchg jg addr16 inc mov sub mov sbb fwait inc mov jg sarb jmp push gs sub cmp push dec pop jns mov addr16 jecxz sbb cmp jg xor xor hlt out cmc pop popf or xchg sti inc rorb sbb jg lea (bad) mov js mov and rcl add call inc cmp lods sti cmp push xadd or outsl loopne scas jg add cltd fidivl inc jg inc hlt cmc cmp pop jmp outsl in mov and cmp ror lcall loope mov xor jg jo cmp in aas sub popf dec or mov fadd pop js inc push mov inc iret push cld shll lret out add dec arpl xchg push adcl jmp aas dec subb adc int3 inc cmp (bad) xchg dec lahf lret push sarb pushf xchg imul jno out pop pop mov cwtl jo xchg jg dec sarl mov scas jg sub xlat mov mov dec loope movsl jp jg dec cmpsb and lahf xchg add nop inc hlt sub divl fadd xor cmpsb cmp jg imul scas pop jle push movsb push and ds cmp inc lods xor jbe insl and xchg jg adc jmp jg cmpsl mov aas mov mov jecxz scas or add loop jg stos (bad) mov and jg sub lret push mov jo mov xor inc loop xchg (bad) inc pop jg rcl push add mull fldenv repnz cmp cmp lret pusha sbb sarb lahf lods xchg adc inc loopne dec mov adc dec ret nop jg cmp orl (bad) jg xchg mov jg lds popa out rorb in push sti jb jg stos cmp mov stos sbb push lahf dec cltd and cli iret cmp xchg mov push fwait jmp js mov jns in addr16 inc les sbb xchg insl icebp push mov (bad) jnp jg repz mov and xchg jg pop mov mov sbb sub rcr inc dec pxor movsb adc iret lea aas xlat mov loope dec xor and inc lahf test push flds xor pop jne popa cli dec das cltd into in jg sti jbe mov out dec hlt outsb cmp add jg pop cld cmp outsl or outsl pop sub jp ss jecxz xchg jg push mov push mov test fwait cli jle inc popaw decb xor jp dec sbb jg sbb gs add xor loope cmp inc cmpb ljmp sub std mov mov shlb arpl test daa pop loopne mov (bad) lcall xor daa push sbb mov jg (bad) shrl (bad) lea jg in add mov xchg cwtl mov jg arpl ret lahf enter mov pusha or pop mov test dec mov test js mov jo daa jg ret mov cmp imul mulb mov push outsl enter dec sbb and sahf xchg test lea xchg and imul js and ja or mov popa imul adc jg enter or ja pusha xor push and mov loop pop sar adc push and fwait js dec jg jb mov jg test outsb lea xchg mov push dec pop xchg xchg dec or pop xlat fldenv sahf fwait ss push ret mov data16 pop ficoml jg jne push xor jnp test es jle je jl js adc sub shl inc lods jg push je pop push out repnz and inc jge and and push push jg aas push stos out in adc aad mov jae xchg aas pop inc imul cmpsl es pop or (bad) push rcrb jbe js ss pop sub inc jns imul ljmp imul mov rcll sarl sub sbb xchg ljmp in mov (bad) dec adc mov movsb out pop lret ror jg (bad) popf and imull adc dec push inc test pop xchg aaa adc aas fimul mov dec imul pusha jg lcall jg lods stos or das rcll mov stc clc dec pop aas mov push fisubrl mov mov jne (bad) nop or inc jg cs add movsl in pop shll pop dec enter loopne jg loope loop fsubrl add (bad) dec ret jg jbe leave mov out in cmp cwtl jg imulb jno and ret (bad) gs xchg jg lods adc pop popf scas push cmp aad dec mov push lahf lret addr16 pop jmp jecxz jle sub inc pop mov (bad) dec mov sbb inc sbb insb sub adc js (bad) sub xor mov int3 dec pop insl inc and push lret sub pop and jg fmul idiv les cmpsl jg lods jnp das sti push adc ljmp sbb push jg pushf hlt mov repnz mov mov sub and outsb mov outsl mov dec jo xor xchg test xchg stos pop fbstp loopne je dec cmp int mov in aas xchg pop adc mov push inc faddl sahf cmp sub inc (bad) xchg pop or stos aam icebp jg jmp jo add cltd jg out adc stos xor jg scas nop jbe inc or push push mov mov dec fnstcw outsb fild jg (bad) xor pop scas aaa fdivrl fwait or fidivr push xchg cmp pop lock mov xchg adc sti push inc xchg sahf and sbb adcl xchg icebp sub inc fistl shr ret xchg add cmp sti pop sub movq addr16 push jg divl push push and lret jg popf mov ret xchg mov push or sahf mov sarb aas mov or xor dec xlat cld push into mov sahf jg xchg test adc and outsl ret pop mov jnp fcmovu (bad) shlb cli inc jbe lods xchg or call jg xchg xchg pop jnp adc jg xor mov pop sbb mov mov lock mov icebp (bad) jg and mov sahf fisub inc mov sahf ljmp push fidiv idivb inc fiaddl fsubl jg nop lock jo pop sub add sbb pop fwait sub or or cs arpl dec add mov insb or jg data16 cs hlt push imul push mov add aad ds add jg je pop or lea add jg iret loop dec mov cmp xchg jg add loope in in jecxz nop dec xchg inc cmc loopne mov aad mov xor sbb xor daa push push adc add xor xchg mov loopne les jg dec adc push jne pop pop jg into cli lret pop adc and push insl mov pop mov cwtl push (bad) dec cmc pop stos jp outsl ja push jb pop sub es cmpsl in aas bound jo sahf jge push sub lcall shlb pop jg mov out (bad) push repnz sahf mov inc sub out adc popf xchg mov rcrl cmp or or inc pop jg or cmp outsb cmp gs out daa (bad) cli jg or in stc add mov or fidivrl cmp jg cmpsl sbb addr16 jg mov ja ret xchg mov and add gs push ret out (bad) jg insl mov cmp inc sub mov xchg cmpl lods cld in pop jmp and repz roll frstor mov xlat in sarl dec jmp inc mov dec inc mov xchg daa dec inc push sti add mov xor push mov (bad) xchg jle jg pop sbb cli iret test push jg jl pop pop or dec add jp jmp push sti repnz xchg mov add push mov nop jg mov pusha pop jg fsub or pop scas mov jle xchg test adc lock xchg mov fidivrl loope jg pop add ficomp fmuls mov sub fs and arpl adc dec xchg ret mov cmc inc cmp xor cmp and inc pop stos movsb in repz mov inc in mov dec mov not mov mov ror stos lcall jge mov imul mov cmc adc mov scas inc mov in cmpsl adc push push xchg pop call add or mov icebp insb cmpsl xchg cmc pusha mov out jmp je inc xor cltd or inc dec cmp jg mov movsb jne and or fmuls sub xchg adc jg test repz jg scas sbb aas lods push xor mov dec sub pop add lods out xchg jne push loope stos inc push cltd mov lcall jns sub fsubl mov roll cmp out jg ja sub data16 mov popf jg push adc dec lods aas mov xchg nop pop ret dec ret inc (bad) in jg pop sbb sbb jg (bad) mov cmp hlt inc add jno or sti dec dec negl xor lret div push adc dec aas loop jmp pop jmp pop out dec jg inc (bad) mov repz mov loope inc jecxz mov je ja and pop movsb jg (bad) pop push and xchg mov addr16 jb push cmpl jg and popl imul hlt data16 pop ret sub test dec dec inc mov pop scas das inc cmp out mov test cmp loopne lods fisttpll dec aas cmp repz xor in xlat push aam or test shlb icebp cwtl aad cmp push faddl fwait into sbb xor inc jg nop mov dec jg out cmc and pop pop mov enter inc mov aam out imul xor and mov je divl popf movsb xor or test test frstor sbb push mov adc sub (bad) or and loope cltd fwait sahf push (bad) (bad) sbb in das fcomp and jg push clc mov dec push popa jg mov dec dec cmp pop sub adc arpl jg (bad) movsl dec add jle jg cmp (bad) cmp xor movsl and inc add push sbb lods fstpt aas jmp dec pop jp dec xor or sub jl popa lahf jg jbe rclb xor jg push jns push push repz imull add fsubrl lcall jg and push sub and jb scas mov jg add jp movsl sub (bad) xor or sbb rcll xchg inc sahf jg,pn stc inc jae insl fwait lods jg mov rcrl cld leave add sti outsl or inc xchg sub movsb xchg into cmp mov test jmp (bad) cmc mov mov push pop inc pushf dec push mov jg aam cli leave jg int push cmovne (bad) jg orb stc mov and fs lahf jg sbb or stc xchg ret fstpt jle sub push imul sbb lcall (bad) mov lock sbb les jg ficoml add mov jp mov jg out aad add jbe popa lret jl fnstenv pop mov mov or or lds and stos sarb repz sbb jns pop jg js xchg fsubrp or mov stos daa inc arpl jg pusha aad notl add mov pop pop add sub sub inc sbb jg cmp mov and jg dec mov js inc pop mov test push fstpt jecxz jg sbb cltd push es jg bnd push rorb loop jg pop in mov mov dec andl cmp jb ja repz and pop imul rol addr16 pop es mov mov push in js adc lods fcmovnu jg lods aam pop pop push mov test push and jge popf (bad) bound or mov imul jg cmp xlat sub frstor (bad) mov xor cmp xchg repnz sub and (bad) and pop xchg dec mov pop mov movsb push imul stos push (bad) cmp cmc jg int aas nop dec jnp cmp aas pop insb hlt dec inc aad and loopne mov xchg jg dec push repz cs jg jno mov (bad) xchg xchg and inc mov rcrl push inc jge fdivrl sbb outsb in lea mov adc and jo mov jbe and jl mov ja fimull mov cmp jg lea pop jg fcom adc leave mov cmp std (bad) inc lock mov pop and fstpt sbb das ret in jg xor mov (bad) inc mov (bad) adc cmc popf dec inc jns cmp cltd imul hlt cld pop aas inc loopne loope testl (bad) jp mov scas aaa mov mov movsb out cmp sub adc hlt jg test and jg sbb in cmp add cltd js popf push std inc jg lea aam or jg insl mov cltd and jg pop sbb mov insb aam xor loopne lret add aas mov dec addr16 inc push popf push inc (bad) je or cld jl ret in insl mov pop and inc jg xor mov imul sbb push shll push int3 mov add push je inc jg adc mov inc jecxz adc popa out mov mull pop sub mov mov push mov outsl push jae inc lret adc add mov or xchg jg psubusw xor insl enter test mov fidivrl stc jg pop pop daa xor sti jg mov jmp cld sbb pusha jle jmp mov popf mov cmp pop scas cmp mov inc shlb adc test nop push xor adc btc jecxz addr16 pop aas test mov inc insb bound jge mov and and icebp jg movsb loopne cmp jge and nop addr16 lret inc push jg das es popf fsubr aas int xchg movsl or dec xor jg sbb (bad) lahf or lds lds xchg adc loop sti cmpsb sub mov aaa test out xor jg sub call (bad) imul adc sub jg (bad) repz adc loop xor sahf push movsl jg xchg add mov jg imul inc pop and xor mov mov ret jg test clc push mov jg cmc jno fildl insb stc push jg mov dec mov in test mov xlat sahf push cltd or fnstenv push lret ljmp cmp sbb mov out ret les sbb push cmpsl idivl in popf xacquire or add (bad) mov push dec mov sub inc inc mov dec sub xor hlt ds gs inc cmpl (bad) mov push dec or jg jmp mov jg xor jb test (bad) mov xor add repnz mov mov scas pusha cmp out jg ret mov lods dec aas inc sub push add pusha inc mov inc add dec mov jecxz aad nop mov xchg mov (bad) jnp inc jne aas pop adc dec inc dec (bad) ret sar jbe mov scas push aas fldenv cltd dec mov mov cmpsb cli adc cld push into adc xor lock popl enter bound les sbb pop ja push in sbb and cmp es pop and repnz mov xchg inc jg mov dec push aad cmpsl mov sub lret jbe xchg push in mov dec inc (bad) lcall jg les jo ror cmp mov jge loopne push jg sbbl (bad) cltd inc sarl loopne notb ret inc mov outsl add jmp dec (bad) in xchg jg je push pop mov out sbb dec fiadd pushf pop fdivs fsubl repnz pop xchg mov insl jle insl call xor xor stos jle pop lret add pop push (bad) imulb imul insl fidivr std orl xchg cmpsb inc gs sarb jg,pn inc (bad) and inc les es jns in cwtl pop in xchg (bad) push test jg jmp sarb xchg adc pop jge cmp fldenv fs imul test mov dec push pushf pop sub bswap xor mov test movsb outsl cmp cli loopne in jg in sbb cld stc xchg adc nop int jecxz call dec fidivrl push jg loop mov mov cld cmp roll jbe inc fcoml dec push sarb scas fistl dec mov jg popf cmp ljmp jg pop int3 mov mov je or sub inc jnp pushf sub jmp and (bad) add out xor jg lds mov xchg mov fbstp mov rsm mov shlb xorl (bad) jbe addr16 call fidivl in lods inc dec mov xchg jg outsl adc jnp (bad) jg jno and mov mov jg sbb fchs pop push jno fcompl push adc (bad) sbb mov ja fisubrl (bad) add and mov or jg repnz jg gs jp orl ja test mov lds jg push inc pop xchg out mov jge lcall dec test add enter js jg pop fcoml jle ljmp push insl jg pushf into repz jg xor inc pusha adc or pop popf mov sti xlat jecxz mov xchg int fwait mov adc jle cmp jl jmp mov xchg inc pushf jg iret movsb fucomi shrb jg ror (bad) (bad) sub aas jbe ljmp xchg cltd pop and dec jg xor aaa (bad) cmp aas fdiv std xor lret inc nop je mov (bad) lcall mov jg icebp jns mov jg loope xor in les pop jecxz incl aas push sbb cmpsl mov pop adc stos arpl into mov add push dec dec je inc fsubs jg mov push pusha jg mov in mov sub push adc movsl cs les icebp jg sub (bad) fcoms sbb stos mov and aam jg inc and jl inc pop jg xchg xchg dec pushf mov and movsb stos pop and ret sbb sti scas lea push hlt repnz jg jnp jmp jg lcall jg fnstenv cmc imul cmp jg mov add std push (bad) rorl jg mov jg mov insb ja loope pop push pop mov imull adc es mov sub test aad jnp jp push xor jno repz loop dec (bad) psubb mov nop add lods stos loope imul mov bound in lret and aas repz jnp adc (bad) push ja xor pop fildl hlt and jae dec out push outsl imul jg lret iret cmp jnp adc les add push cmpsl mov sbb aam jg fwait mov cmp jo stos xor lret hlt mov aam and adc jge mov lcall sbb pop stc pop pop mov dec enter sub stos sub addr16 or and outsl pop jg std jno ret xlat jg dec (bad) mov xor mov or test or sub mov sub stc jp pavgb pop mov add std and outsl bound imul jle jg in and stos sti jg mov movsb scas jg and ret js jg shrb mov inc adc in pop mov cwtl or jnp repz sbbl inc adc cs imul xor jg lcall lds push dec push cmpsb pop xchg cmpsl jno cmp js mov xor fistl mov adc mov xchg jg rcr inc xchg pop mov dec cmc ds mov cld out or jg movaps sbb loope push imul jg pop or mov push stos aaa add mov add into xor nop (bad) or outsl xor jg ds add cmpsb adc cli xchg rolb fstpl js mov pusha ret lods testb mov sbb cmp jp push lcall or popf adc jg inc mov adc in mov xchg inc cld pop dec jae pop inc out leave jg test test cmpsl pop push (bad) imul rorl les push jg pop addr16 add lea rol cmp sbb push cmp pop xorb sarl xor jg lret out std pop jg lock (bad) fstpt adc jmp and outsl push inc hlt sub inc cwtl aas test add ss sti icebp lock (bad) pop imul fwait jg sub insb jg mov (bad) xchg mov call (bad) incb push inc mov push test imul pop test inc jg dec xlat jp mov mov cmp jg shl bound pop outsl int3 popl jg add and jg mov into cltd mov mov dec rolb scas lock pop push pop js outsl inc aaa xchg jmp lret scas cmpsl cs les cmpl push std cli mov mov lea push xchg mov adc mov pop pop pop sub je stos add adcl loope lods popa cwtl jg in cmp xor jns xchg ret aam pop (bad) outsl je and sub mov in mov dec ljmp and sti movsl mov (bad) sbb dec jg (bad) inc ficom addr16 incl dec mov in into add ficompl (bad) mov and cmp lcall and dec mov sbb push add sub cltd pop je inc push mov pop lcall jg sbb lds inc pop popa test inc cmpsb and es call mov push rcll fidivr sahf bound nop test jg mov push jg or add int3 (bad) mov pop mov shrl and cmp cmp iret pop lret xchg xor mov pop jg js sbb ret jg in cltd lret xchg cmp sub xchg insl ja scas imul or arpl inc fistpll mov mov and in mov mul ret stos push jg es push jge std int3 jg sub lcall not gs push fistpll (bad) sbb lahf xchg jg rorl mov xchg arpl ficom aas mov (bad) add cltd aad dec push jg lds ljmp in push jg and mov xchg loop pop decl enter inc jnp mov mov pop push jg mov (bad) lods ret mov pop bound into push clc and sarl push (bad) pop pop nop mov icebp jg and idivl cmpsl jg or sub add push ja (bad) xchg or movsl push jge mov mov xor imull test icebp pop aaa or xchg mov fldl dec cmpsl pop or scas xchg out mov dec xor dec fiaddl decb insb fistp xor cli fsts std fisttpll outsl ret (bad) (bad) ds add jo jg stos int adc mov inc das jg aam push sub outsl nop jg jne sbb cmp mov test ljmp sbb push in cmpsl (bad) sub lahf jg outsl cltd bound out jg std cmovns cwtl rcrb in pusha es jecxz jle mov movsl pop inc lret sub addr16 adc or cmp jg add loop int mov jmp add inc out sbb xchg lea xor jg xlat dec sbb or lcall sti ja mov test jg inc xor mov lcall mov jns pop cmp sahf in jo clc dec jg mov xchg mov jno and ret ret dec int3 pusha xor mov frstor icebp xorb test push clc jae xchg mov push sahf sti mov sti and ds adc dec jg mov sbb xchg and mov sbb push pusha mov lds cmp std fs pop sahf cmp popf imul push pop jg lods bound jg mov sub ret repz push loope fstpt and jg cs (bad) jg scas jmp imul xorl shrl cwtl mov lahf addr16 add insl les add call add loope sbb push dec addr16 sub repnz (bad) mov lahf ss mov sahf pop push xor or cmpsl or pop jno mull xchg cs xchg fdivrs sbb sbb daa and xor aad jno push jns and adc dec jg xchg js mov loop mov jg mov jg nop push lds sub jg in fisttpll jg pop pop xchg shll lods jg scas cld outsl cmp les or inc clc cmp xchg dec in jge dec sub or pop mov or jg mov add push sub jg in xor or lods jp mov pop mov jle std or in dec push sti cmp mov int3 pop and daa dec lahf jo jp aam adc test dec movsl jg jae mov out xchg push mov or popf xchg inc and arpl in data16 in insb xor xorl jg inc mov mov lods bound repnz mov loopne sbb or add mov sub inc in jg in push (bad) jo lods jg das sbb gs sbb jg out dec push (bad) cmc mov cmp js jg in data16 mov ss int3 stos ret pop cmp jg andb in (bad) mov and push ja sbb (bad) cmc mov pop mov pop test dec mov sub adc sarl mov (bad) jg into and lock mov sub jg daa hlt (bad) pop leave clc jg (bad) fistpll and test (bad) cmp dec ljmp push push jle jnp or or test push imul cld or jg cmpsb push dec test test in test mov mov dec inc jl xchg popf (bad) xor fcomp into int mov inc aaa jno sub pop add ret subl daa (bad) xor repz jg push or xor pop lret inc outsl add out shll sbb loope jg inc test xchg mov stos mov lret cld clc lea in push jle pop movsl push sbb lret pop jg push cmc lds aam push int3 dec or aaa jg push xchg lahf mov cltd imul cmp jb xor sub xor in arpl test dec stos jg lcall jg test in repz notb cs or loopne outsl out lods lea das es fsubrs jg fnstcw inc add mov jg mov aad jg adcl xor lods push jg ljmp bound jbe lds out outsl scas mov sbb xor mov dec jg sub sbb and or push out adcl andl inc cli shrb fistpll push subl stos jg mov adc inc jg lea xor jmp xor add sahf (bad) cmpsb mov lret xor insb sti in push dec fcompl test sbb jge rcll jg and fs mov cmp rclb sbb push inc jg les into ss outsb jg sub xchg mov (bad) adc push negb leave mov and xchg fwait xchg inc jo bound xchg outsb call dec jg (bad) jo int jg outsb shrl mov mov cmpsb inc mov dec in out pushf imul jg movsb mov xor pop imul mov jp add fstpl daa pop call pop ret mov cmp ds jg (bad) aaa test pusha jg fnstsw adc jp jg mov pop xchg sbb sub cld mov dec imul xchg bound sub cmpl xchg mov cli lock dec fwait dec stos cs iret and rolb mov lods pop mov call rcrl xor push jnp mov jmp dec int lods inc ret ficom clc in xchg (bad) lcall xor jg bound scas mov mov jg imul lds jbe and outsl inc (bad) shrl pop mov jg insb out jmp adc jg aaa pusha push or cmc js cmp scas mov fwait pop pushf jg fsts sarb pop pop inc sahf ret mov pop sbb pop inc out mov cwtl or out cmp push mov out lret je rcr (bad) enter jns mov jg push fcomps xchg mov mov fimul push inc push jg add dec adc sbb fimul jg mov dec mov push jg std fwait add cmp test mov test std jns repz push inc lds addr16 insl cli stos or dec (bad) jo icebp inc js das pop lds fcmovnbe xor movsb cmp aas fs pop cltd mov popl bound shrb cwtl xchg lret ljmp cmp push mov jg mov movups das cli in (bad) mov xchg mov jg (bad) hlt pushf int3 sarl add xchg mov (bad) cmc xchg lret mov imul pop inc and push lea jg insb hlt xor fisubr sti lds and aam loop sti icebp enter dec repnz inc faddp mov push pop or stos roll out lcall push push sbb stos push mov xor std and jg addr16 xchg or cmp xchg (bad) lods cmp daa ss mov inc inc popa cmpsb out cmp inc test sbb test inc mov sub out popf fnstsw inc cmp int ja jg pop sub pop mov push cmp mov fcmove out push dec and daa stc adc dec (bad) xchg jg pop lret push out jg in in movsb and dec jg subb push push mov pop jecxz lock cmp adc stos push jle xchg in es dec pop jle adc sub in or scas pop outsb push ss mov jg mov xor aaa cmc mov out dec std enter mov (bad) js fstps lahf aam add sub inc mov and sbb int3 (bad) jg ss repnz jg sub ret mov push lcall jg xor stc nop jg push mov mov jl ret or fs (bad) adc add inc insl pop lcall loope inc ret inc lods insl cmp dec repnz in aaa jg lcall jg cmp fwait mov test pusha mov jg jmp mov lds mov cwtl hlt pop mull in adc and xchg jo jg push mov xor ror jg dec mov sbb cmp scas xor mov inc pop mov nop out jg cli add movsl fildll jg and cmp lcall ret test sbb inc jg ffreep sub mov jnp test lods and inc sub jg pushf xchg das scas mov aaa rolb outsl jg outsb mov mov mov pusha aas lcall pop mov ret nop cmp jae jg pop (bad) cmc (bad) jns cmpsl jg je js sub jb pop jg imul jg aam call scas jmp jg jecxz lret icebp jg sbb xchg sbbb jg jns int3 xchg loopne jg and adc xchg xor in outsl nop inc stos sbb jb add inc addr16 jg add mov push pop aad adc stc loop pop sbb lcall xchg cmp adc push xor jg push loope jae adc mul jl jg mov mov or ret arpl stos mov xchg inc sti (bad) fs or dec pushf mov add test jno cmp xchg js test idivl push push and mov rcr adc lahf ja mov jo and ss jle mov xchg pop mov cs pop cmp mov adc add mov lahf pop fisttpll (bad) idivb gs jae inc imul adc mov call dec loop pop ja dec bound jg outsb fdivrs jg adcl mov dec ja xlat dec outsl inc aas sub jle dec in jg (bad) in push (bad) mov xchg mov push adc jg mov add jl sub loop je adc out cs (bad) jg xchg std inc add int jg cmp sbb mov mov jg ljmp mov mov dec or and inc push jg jge fisub btc aas pop stos or or mov lock xor mov inc loopne ds sub cmp mov outsb insl pop in loopne jbe cmp dec cmp mov push sbb (bad) push xor out insb aam jae and je fist sti dec xchg pop hlt (bad) cli cld sbb dec push popf and push push lret mov cltd dec lcall sub loope cmc adc call pop incb sti (bad) clc jne mov mov xchg push jmp outsl test push push push fisubl comiss ss aas mov addb mov cmp fstpt sub xlat push sub mov aaa ret and pop cwtl pop sbb xchg mov sub cmp inc (bad) cmp jg je xor sub jg idivl pop and pop adc stos adc int cmp add xorb jne push adc outsb jg push cmpsl out fcompl aas push test leave xchg lds addr16 bound (bad) or out hlt add cmp xchg mov lea incb jae pop jg sarl call inc aam das leave pop aas mov ja jo jg (bad) iret das xchg sbb mov arpl push fs scas stos sbb fidivr loope ja mov mov cmp aad push mov sub pop or or jmp test int3 idivb outsl add xlat movsl mov xchg cmp divl outsb jg mov dec pop jg test std dec mov inc mulb outsb stc push lea or dec cmc in out sti popa jg xlat lret mov jg adc outsb aas pusha push push dec pop dec (bad) jae sbb push fidivrl jg sbb mov je mov pop push arpl cmpsb xor sub or lret inc dec jg ret pushf pop mov mov jg push mov jg sti mov pop jg movsb rolb test jg inc (bad) pop mov mov shlb shll rcr xchg insb imul outsb dec popa inc test lods dec rolb nop jg in pop (bad) push je jg in ret inc xchg adc push adc cmpsb dec mov cmp fdivrl jl dec negl int dec push inc push push add dec aas (bad) ja test mov jg gs dec loopne (bad) fstpt cmp inc rolb ret hlt dec push sarl ret pop adc sub jle mov stos or sub les sbb loop rcr mov cli loope xor mov cmc daa les xor mov cltd dec mov xchg mov jg lcall and pusha sub outsl int3 xorb jnp push pop sub mov hlt push pushf loop inc ja jae cmp fstpt sbb int lea in jnp pop mov fldenv jg (bad) mov and and mov xchg inc jnp sub sbb jmp lods push xor lret and dec aam aad sti inc fbld xor scas push jg dec les aaa mov popf fildll mov pop ret push add jg lret and loopne aas scas jnp int out repz xchg xchg and in push jb jle dec test repz stos add jno or cltd das jg mov push enter loope jg mov mov push les push pop scas jecxz mov out dec data16 cs aaa in enter (bad) loop jmp jae fidivrl inc cmpsl jb cmp mov or push and or pop lret stos dec jg mov hlt xchg les push in jge loop loope,pt mov jecxz xchg or jg adc imul cmp pop lods (bad) fwait test ja andb scas testl sarl lea xlat sar rolb (bad) (bad) mov push or js arpl dec mov jg scas sub push sbb xor movq ret jg pop into cmp jg jmp push test jo test test xchg sub add mov int3 sbb orb cmp and jg bnd das iret xor mov mov rorl mov rep insl jae sub pop cwtl xchg mov mov sbb je fs mov outsl cld and sar mov push pop arpl push push jg mov gs xchg xchg js mov mov jae jg mov scas inc and add lea in jg adc sub sbb jg iret dec lcall std fisubrl mov test cmpl push inc jb xor aam mov imul xchg loope out lahf pop push imul sar lods bound loope jg fisub dec add dec enter push das mov pop jg push jmp repz shrl cmp sub jecxz lahf xchg jg cld xchg out call mov jae,pt insl adc xor cli xchg pop jns sbb jg sbb and jg jp mov jge out and jg rolb xchg adc dec jg push out jb repz pop pop sti aam or jg fsubs sbb out add push jg not fs cmp idiv cld or inc or mov dec cmp fwait outsb mov cwtl xchg add ljmp inc xchg (bad) mov mov push lret dec push add nop dec inc repz sbb pusha cmpsl or xor ja jg jl xor out mov push (bad) in int jg mov lods idivl sbb dec out jg dec cltd aas adc repz std jl pop mov xchg pop mov (bad) dec scas (bad) sti in adc lods mov sbb jno mov mov push mov mov loope jmp push adc sarb nop jno and xchg cld (bad) push imul dec mull mov pop add add mov mov pop lds jg add popf fsubrl mov pop pop out imul sbb jg mov mov mov std loopne mov ss lcall js adc or sub pusha movsb jg loope aas push out sbb sub je test jg xchg sbb std jae jg jb mov inc je push jg adc out fcoms push sarl jge mov cmp jg push fidivr aas cwtl mov ja ret jg mov push xchg cmp sahf add fiadd push (bad) jg cmp fstpt jg les ror adc iret sti mov (bad) bound mov cli or mov jae int outsb inc push jg dec pop cmp add jl hlt js inc and lods insl outsb sbb test xchg mov dec push pop loop mov xor cs (bad) cmc cmp (bad) pop into mov push stos and xchg (bad) lahf pop jg mov push cltd js sbb ds adc daa adc stos out cmp xchg sub cmp fsubl std call decb and sahf sbb mov in dec mov test (bad) negb repnz mov sbb xor xchg mov mov insl cmp jg aam (bad) xchg jg aas xor fs orb mov test jg dec insl and push daa in lahf add mov and jg cmpsb push fldenv jmp xor sti imul fsubr jg mov mov jg cmp mov mov loopnew cld dec pop jg adc adc sbb (bad) jg mov int push sub mov add and adcl inc xchg popf jg aaa mov psrlq xlat js aas mov adc int loopne cmpsb js jg aas hlt mov jne mov xor test and lock shr inc test fcoms aam push loope bound sbb (bad) lea stos and aam call cmp jg mov lahf cmpb scas inc je imul (bad) push jg mov mov jg and adc (bad) ficoml jg pop mov cmp mov pop xchg push leave and inc std mov push jg fyl2xp1 rcrl jge cmpb pop fmull mov dec mul ffreep or ficoml jne rorb mov ss lahf xlat cmc and push add jp lret in cs in test cmp xlat call and cmp and jmp flds jg hlt (bad) inc int3 out lods pop sti mov jb inc xlat jae and pop sbbl scas jg insb movsl push pop sub ljmp sbb mov cwtl dec or mov loopne aam icebp shlb outsl jmp mov arpl dec lock sahf jg jne sub jg xchg push mov sti outsb mov push bound xor push jg jnp sub jg mov push rorb stc aam xchg jg loopne negl push jl and testl inc or in push sub aas aas xchg pop lahf dec jne mov daa jg lods sbb das rcrl jmp out dec inc cmp loop jg push xor xchg adc pusha cmc push xchg outsl jg push arpl pop iret mov mov jg mov mov xor out test sub mov arpl sahf jp mov nop frstor push and xor adc leave subl sub jne sub lock pop mov mov xchg pop dec push push loope lcall scas ja mov fnstsw pop adc fwait ret xadd push (bad) inc inc jne outsl ja cmp andl cmpsb or mov mov jg add pop mov ss fisttpll pop jns dec inc insl jg dec or push das lcall test mov cwtl add lock jg inc mov lret out add sub mov test clc inc dec sbb mov dec dec (bad) pop out mov jmp xchg les aas pop aaa test xchg or out fild lods loop xchg push arpl repnz add popf mov aad loop rcll rol aas das (bad) pop out sub inc lahf lcall mov dec nop daa mov stc ljmp xchg pop pop aas fnstcw jg push faddl loop aas pop (bad) jbe inc sbb ljmp and aas leave sbb inc xchg idivl sbb or stos cli cld push movsb mov inc add push jno loopne pop (bad) aad pop adc add jbe push and add jg jp xchg jns inc jmp in and xchg jg pop xor fwait mov xor jg mov imul xor lea dec mov addr16 sbb cmp jg ret lods sub (bad) pop adc dec iret aaa mov stos jnp push je movsl or sarl mov sbb sarb scas sub fldenv push mov xor scas add pop cmp rorl xor out ds mov xor jo sbb imul movsb popf mov int inc int3 shl xchg jg shrl mov test xchg jl jg int popf mov mov cmc shlb jg push notb test jnp rep jl cli mov in movsl subb jg sbb adc mov inc lods mov bsr idivb pop repnz pop test jnp mov push mov ret xor jnp cs sbb jg or xchg jb push orb jno leave jg (bad) jne int3 add pop or sahf mov popa jg out je in and scas popf mov repnz mov inc mov sti pushl xor and popa xor (bad) xchg fwait out repnz aas xchg ljmp popa xor aaa sbb cmp lods jno jg mov js je xor jp lret and jg jbe sub setb mov lds inc cmp inc in add push sti mov fnstenv or adc outsl out movb inc (bad) mov xchg ss push mov mov push inc jno or pusha fidiv and push inc popf xor xlat addr16 dec jg sub js dec jbe jg cwtl dec cmp and scas jmp pop jg out dec ret cmp leave jg fxch sbb and adc ja push jg pop mov (bad) jg cltd push or aas adc and xorb dec jecxz dec push and frstor test imul (bad) (bad) jg test into push inc add mov dec jo test and (bad) jle (bad) flds jg mov dec jae aas out inc pop test aad dec lods push pusha lock sbbl dec inc icebp xchg ljmp dec cmp push out xchg xlat jg fistpll dec jl mov pop sub jg stos lahf push cmc xchg jg xchg pop jge and xorb arpl jmp test lock xor leave fwait jg mov mov (bad) xor bound sbb lahf insl adc pusha mov xlat fs loope jg jge stc ja cs ds jno pop pop xor dec push jmp movsb or jl test imul (bad) mov xor shlb mov pop pop xchg jecxz in jg or into mov out daa inc test mov pop fsubrl adc aad adcl adc in lea cmp push jg lods sub add mov dec mov jg (bad) movsl js or mov xor in adc jl (bad) jg dec inc std arpl mov jg cwtl xchg roll sub mov lds das inc mov push dec jg pusha popa mov rorb ret fisubrl fstpl sub cli pop inc fs push out sub xchg jno std push xchg pushf int clc jg lcall ret sub lds repz jg inc xchg test xor jg jmp fmul jg and cld or jg lahf add jg sbb sbb mov cmp adc push popa mov mov mov nop jns inc xchg rcrl cmp or fstpt scas rcrl jg xor xlat sub fisub pop cmp pop mov loop int jg mov movsb out jg pop mov ljmp adc sarb jp push adc cmpsb sarl jg adc repz inc (bad) adc mov divl pop insl inc jg ret inc rcrl (bad) mov or mov pop mov or jmp pop aam popa push jg (bad) or les xchg jg xor popa into mov movsl mov jg ret ss and inc insb scas cmp mov jge outsb dec sub cmp and (bad) stos loopne mov adc xchg xchg jg ret outsl xor ss jg lcall jo outsl (bad) and sub out cmpsb shr mov xchg adc popa mov xchg pop (bad) pusha jo call data16 clc enter roll mov jg lahf push pop ds mov test add leave sub mov inc lods cmp mov rorl sti iret push fildll pop jb adc mov jne setnp jg test in dec jns cmp jp pop aam rcrl and push cmp inc loope into jg or popa pop mov popf xchg in xchg inc sub aam xor mov cwtl mov push cs loop jg inc in dec push xor aaa add popf jg push or in test mov and pop jg cmp jb icebp bound fistpll out sub call add push jmp pop mov idivl lret mov test pop fadd dec mov sbb ljmp sub int3 (bad) adc in das dec lds icebp jg sbb pop imul mov pop mov cli cmp mov push repz ret imul sbb rcrb mov sarl pop pop jg xor aas outsl stos pushf in xor int inc into shlb shr dec push jg dec pop (bad) and add pop sti lcall pop stos mov mov dec xor loope jg aam subl rcr jg pop mov jo subb ds jg mov stos (bad) mov pop dec mov hlt xor (bad) adc sub xchg ret sbb add push jbe lret inc movsl jg enter idivl sub gs xor test sete dec lock jbe jae mov clc daa rcl xchg xor adc pop sahf imul jo sti jg stc (bad) and mov aas nop pop loopne jb jge loope mov ja add neg adc mov dec add inc clc cmp inc (bad) jbe xchg sti jg add mov and xchg jg sbb cmp outsb js dec sahf xchg movq scas adc sub sbb xor mov ljmp cmp outsl mov mov dec inc pop rol push in jno into push inc sbb xchg push mov pushf inc mov jg (bad) fisubrl ret sti push or (bad) jg push jl mov add lret add shlb int3 mov icebp and add pop jecxz mov xor sti fdivrl inc jg cli mov icebp jg mov fs adc mov pop jmp (bad) popa imull icebp sti popa hlt and jl jns aad push pop outsl sbb notl cmp jg das add mov lock sub sub jle push in sbb out xchg imul arpl (bad) jg push sbb push sahf pushf out jg lret outsb in lcall int3 jg and jb outsb out and inc cmp sahf mov stc aaa lcall mov inc sahf cmp jg loope pushf (bad) jg cmp pop cmpsl (bad) jle mov jnp adc inc hlt data16 push shrb int3 leave cmp jg mov xchg mov jg mov mov push icebp xchg test add jg mov or jg rorb inc je push mov and dec jmp jg mov mov inc iret pop es adc mov sbbl negl (bad) sti test (bad) fcmovnb and outsl cmc movsb fidivl ljmp jg mov push cltd push jg jbe pop lret dec inc int push movsl mov cltd jg mov (bad) cmc mov ljmp xor mov scas xchg jg in fdivs imul icebp daa cwtl mov mov pop cmp mov inc shlb jg cmc push loop xor sbb mov imul jg enter and sti fwait push mov lahf lods imull inc mov mov mov jns cmp mov out inc push (bad) push stos jb sbb push inc pop mov xchg cmp icebp cltd jg pop push stos popa mov mov push int inc fstl pop cmpsl mov pop sbb jmp jg cltd lahf xchg mov pop adc (bad) mov xor pop daa mov divb inc enter jp test cmp jecxz lods sub add fidivr mov sbb loopne popa mov dec mov jg mov les stos lret add jg imul jbe fadds jge inc mov or test push pop xchg xchg jg jl push popa sbb in mov push sub xor jg jmp sar cmp imul jg sbb dec loopne and and roll out push jg inc jmp inc jmp jg mov adc xor dec jecxz push xor jg daa je (bad) ret aas or xchg dec dec insb inc mov pop fisubl insb out incb cmp jno dec rcrl pop jne,pn std pop pusha mov jle shrl xchg stos jg dec enter dec bnd je divb int mov mov jne pop into loop lods hlt sbb push mov mov outsl jmp jg jbe cli lea jg sbb jne pop ficomp xchg sbb jg mov jg jae cmp cli xchg roll (bad) cmp mulb xor cld cltd sub in lock repz sahf fisttpll jg sub xor bound stos fstpt leave loopne push in fisttpll sub lods mov add loopne fldcw and add jg test cli pop jg rolb mov inc (bad) pop jmp jg jge fstps or mov push mov mov out push adc addb inc icebp aas push fiaddl lea test ja adc jnp mov aas pop pop xor mov mov mov lret mov ficoml xor jg pop icebp mov jg mov outsl call mov ja jg into xchg mov adc aaa and inc inc lcall loope mov sbb jg,pt cmc xchg mov xchg addr16 repnz daa pop adcb inc xchg or in data16 mov jbe inc (bad) inc push jg pop mov repz stos into push add fnstsw jmp popf mov adc outsl cmp pop jg lods and fiadd jg inc loope stos int fidivrl lea pop jo sarl inc (bad) ffreep jno or test in aad icebp jg sub scas (bad) hlt pop jg sbb sbb pop add movsb pop mov lret or pop arpl fldt adc icebp jp leave pop pop inc js (bad) pusha lcall mov and sbb cwtl push jg aad push adcb jb add sub aas push jecxz in cmp rclb dec ja insl sbb add inc aam mov je nop and out push dec or jg xor jg (bad) ret mov outsl (bad) jg in lahf sub push or inc add push push mov rcrl inc jmp jbe loop jg outsb xchg ret (bad) jne push inc roll enter addr16 bound or ss das jmp adc sti aaa test iret cli push leave jg push pop (bad) pop cs sbb push jne dec jg inc mov sarl (bad) mov cmp mov add add jne lahf inc add mov mov call inc cli jg ja mov rcll mov cwtl lret jp jmp mov pop es and mov arpl dec repnz lods inc cmp jno (bad) mov xor or and jg cmpsb out fild ds sub xlat ss loopne arpl and sti inc stc hlt jno repnz cld imul inc xor jg nop pop in add imul sub mov incb ds dec and dec pop or xor stos jg mov cwtl cltd mov insb incb jecxz inc orl leave mov (bad) mov test cmpsb into (bad) pushf fs inc mov mov loope (bad) (bad) push repz sbb ds sub push inc jb gs jg adc jae out jno notl sub dec sahf push arpl inc repz mov mov mov mov cmpsl insl pop lds jg in sub sarl mov mulb pop jmp lret push push fistl push sbb outsb iret mov push push and add mov in daa fs and inc movsb jg cmp aas jg jo les repz bound je sbb cmp test out cmpsb insb les cmp adc movsl or pop (bad) push sub lods loop dec (bad) jg and xchg inc ds jo (bad) clc jl dec mov mov xor ficom jg or mov (bad) or xchg add loopne pop movsl mov mov test lods call mov paddusb int3 (bad) xchg ljmp aam jp jg das lods pop cmp jg mov sub mov aas cli inc sti mov dec pop repz push push outsl ret popa jg jmp push xchg jecxz jg jnp out xor clc repnz test push fwait adc addr16 fnop (bad) or pusha mov dec cld or lock popf inc or notl cmp or shrb add xchg xor pop jmp mov jno cmp pop xchg pop adc hlt push mov or mov mov ficoml inc ljmp imul stos out adc aaa xchg aas scas in add cmp mov test adc inc or inc adc and and fninit jg std xchg shll sahf cmpsl and mov xchg pop in fxch ljmp jge mov (bad) aas sub sub mov mov cs rol out mov outsl addr16 clc lods push inc push mov test mov insl jge xor scas scas pop lds push stc stos call jnp dec fyl2x sub jg cmpsb adc mov pop jg jle dec call jge fstl pop lahf cmp jg xchg lret in sbb prefetchw (bad) cltd add in jg test fisttpll movsb dec mov xor arpl pop dec lods hlt loopne and mov fstpt xchg push dec ficomp les jg and add inc inc pop jg pushf pop pusha push test and or sbb mov xchg push push sahf ljmp dec jg ss fsubrl push push test std jo add adc adc loope xor inc clc push divl add je and jne jg (bad) lcall fidivrl mov sbb dec cmpsb pop arpl jg adc adc pop mov or stos dec cmc sub out loop xlat and gs fnstcw mov and insl outsl idivl sti test push dec addr16 cld sbb xor mov fimull xor mov mov mov iret jg mov lea jl test and cmp mull mov dec sub imul pop test mov jp cwtl mov lret (bad) aam mov (bad) ljmp inc adc out das outsl mov pop sahf sbb mov mov jg je jp cmp jge xor repnz movsl push inc ss push pop bound ds push cmpsb ret icebp test jg mov shlb movsl xchg sbb nop sub imul xlat loopne jnp jg lret (bad) lods mov je inc inc mov jb iret mov cli jae xchg push leave mov rcr rep sbb add imul xchg push in pusha sbb popa jmp fidivrl sub fwait inc pushf mov dec scas inc inc sbb mov xchg into pop repz xor sarb fstpt inc sbb inc das mov pop add cmp (bad) das pop std loope lret and xchg paddq lods aas mov stos cmc dec lea adc movsb flds aam push jg pop xlat push xor xchg jg loope jb,pn out mov xchg cwtl mov mov xchg movsl lcall cmp push push pop lods cmpb (bad) dec pushf sbb jg pop daa in fisubr and xchg stos dec dec cmp jne push dec nop cmp mov (bad) mov push in mov cmp (bad) out pop enter (bad) xor inc mov pop dec jg mov and js adcb dec jg call push cmpl fdiv mov jbe pop mov sbb pushl or out roll les add and jg sbb mov out bnd inc inc jg mov lods jecxz nop dec (bad) movsb mov sub adc xor aaa scas sub vmwrite jb jle push aad test xor jne aam jg cmc mov daa lds jg cli inc mov mov mov cmp inc addl jg (bad) push lds enter insl mov inc fcomps (bad) jne jg aas mov cmp fwait push and inc (bad) cmp dec sbb ja cmpsl adc pop jg push mov imul dec int3 xor ret lea test inc ss push inc inc push js in jg in loope sbb or stc lods aam mov add adc and outsl mov movq xchg sbb mov mov lahf mov mov dec dec fcoms inc popf dec jp push mov jg inc repnz test je inc xchg arpl jg ss and addl push mov mov mov sub frstpm(287 popf je xchg fstps jg fstpl add xchg mov or push mov outsb dec jb test mov sahf syscall xor insl inc push add sub out call aaa mov push jg xchg pop nopl mov push jg loop add es cwtl adc lcall pop aad mov add in cmp inc jp dec jae jg mov cmp and dec jg je fsubl and mov or in popf mov push adc popa loopne aad fucomip mov int3 pop mov xchg loop aas popf pop add pop loop dec pusha adc mov js jle sahf jg cmp pop jns adc testl nop test cmp jns jbe ret arpl cmp adc or jmp xor mov inc test push sub mov xchg pop push cmp test push (bad) sbb lret xor icebp inc jg mov cmp and sbb fs fisubr cltd mov arpl pop imul cmpsl mov (bad) jbe pop dec test jb cs pop push pop je mov pop mov and push arpl jg sbb mov cmp lods jb push dec lea add jg sbb int3 cmpsl aas sub sbbl sbb jo cwtl les mov cmp mov and xor test add (bad) ret fisubl pop sub xor jno jae sahf mov dec push inc jg mov test mov inc push push jg xor clc mov xchg and or aaa insl jg add mov bound inc loop cmp inc mov js push cmc loope jg test mov repz xor out mov jg dec push jge inc popf mov and jo sbb ret mov popf push fs out sub mov test sarb stc in pop int3 xor inc out int mov mov dec clc ficompl icebp pusha add sarl ja jl cmp mov test jge cmpsb jno das jg push movsl fwait add push jg mov pusha dec cmp push aas ljmp inc fistp mov popf sub outsl repz lods jg pop fdivr or push sub push jg mov xor mov out inc iret push loop (bad) cmp sub jecxz pushf inc js jbe pop es pop xor mov or divl pop aas and push add out or mov sarb inc jne mov mov dec jbe jg in mov insl sti sti out mov pop ja outsl ret jg pop sarb call fstl arpl inc add cmp xchg leave test pop aad jp in insl mov inc fistp repz jg xor pop xchg mov add adc sti pop je leave adc pop das mov movl test jg cmp rcll push push cltd mov andl mov in mov lock dec jae jg and test xchg mov sbb (bad) (bad) jg inc push adc xor pop into movsb fildl fisub jecxz nop jnp push jg imul movl sti or and gs add adc adc stos or pop dec clc mov cwtl int dec push aaa inc lea cltd cmp cmp fsubp jns addr16 jg out or loopne cmp push iret ds sbb sahf and jne jle iret jno sti sarl out loop xor mov add xchg mov (bad) dec inc fs (bad) or dec lret cmpsl jg lods cli and jb jo cmp mov dec fmuls mov ja mov xor scas bound aam lea sti sub mov jg rorb test and jg nop andl jg lock out popf fnop mov push inc out dec scas jge cmp xchg jno dec mov fistpl mov lret jecxz and mov imul jg rcrb jae aam fimull jns sub sub mov mov jg subb jg cmp js ljmp mov cwtl imul xchg xor add in xor in and lea ljmp fwait mov (bad) jno cmpsl jg cs sbb lea jne dec xor mov add push fwait mov aas out sub scas lds jg aaa adc add xchg sub jg call (bad) pop jg sbbb mov inc cmp nop daa (bad) mov inc add pop pop loope mov pop dec (bad) stos (bad) pop xchg inc movsb outsl popa pushf aad fwait rorl (bad) aaa jg pop rol loopne push jg adc mov in pop enter inc jg lret out pop iret dec jg or ds jmp adc shll jg or add mov repz jno jg loopne outsl mov cli jg (bad) sub mov sbbl or gs mov xchg sbb pop jg sub int3 unpckhps fs into pop js fild or dec aam stos dec jg add sti idivb sbbb or es outsl xchg repz add cmp push int or rol adc mov dec dec rcl pmulhw and mov mov cltd dec inc (bad) orl push mov loope mov jg or adc and rclb pop pop daa pop movsl jg sarl in icebp loopne int3 jmp jne or ret jmp std xchg dec insb pushf pop sbbl aam sub lock inc imul loope adc movsl adc or aam push ficompl addr16 cmp jg mov dec idivl lcall pop xchg dec and mov dec (bad) jg and mov call sti xchg jno jecxz xor cmp inc xor mov adc loop jg out push enter mov push push adc pop lahf inc and pop jg xchg sub imul inc inc (bad) dec jo mov js add dec sbb loope jg add out orl xchg in movsl mov jg clc scas inc gs sarb cltd pop ss jg push pop xchg fdivrl notl push test xchg inc loopne out adc mov subb das repz icebp jg movsl sub imul sbb (bad) jg sub fdivrs out mov pop sti pusha adc movsb cmpsl cmp sbb mov les imull and jl jg add mov pushf cmc mov jg push aad add aam xchg fs ret out xor mov jne mov mov mov push jg dec out sub inc loop mov pop mov jg adc cmp push jg adc mov js rorl (bad) and lcall aas stos jg xchg cmp and aaa xlat xor jmp in fdiv sbb push rolb cld mov sub push xorl stc lcall add pop int3 mov nop arpl cmp push and mov sbb aas popa int and cmpsl dec sarl pop jl xchg out (bad) out jg cmp je insl jg sbb loopne mov fildll push frndint ds (bad) movd inc push adc (bad) aas pop jbe gs adc movsl jg inc jecxz aad negl jg adc out (bad) sub jg clc sbb scas out ja mov push push fs adc jg sbb out fsubrl imul nop xor dec sub jb jb dec mov xor or push push jg mov (bad) jp and sbb mov arpl das add insb push pop mov stos pop test sbb fistl mov aad aaa cmp xchg mov cli pusha out inc mov mov stos add jg and lcall xor fidiv sbb and repz xchg dec pop insl in pop push aas adc shll into jg xor inc test or add push mov push jg ret test pushf push jo xor push or cld loope aas repz int3 add and jmp lret mov in jg popa push jae loope ret loopne movsl push pop cli mov mov jg xor and mov les push pushf push pop mov shlb jb mov jg cmp daa fistpll inc ss jge (bad) jg sbb push xor jae jg push lods dec push mov (bad) loope ret pandn leave cmp pushf push gs imul ja sbb jg xorl xchg jp aas (bad) lds aas insl jo test jg lahf mov mov jmp cmp inc lret push pop jae mov sbb stos test jg xchg inc jns mov cmp inc jp pop in inc mov popa pop pop lods sub jle es jg mov push mov arpl mov cmpsl aas cli push inc ja bound push test int leave push rolb imul ret aam mov adc je (bad) adc xor dec (bad) jecxz jg mov mov orl mov inc mov lcall (bad) fidivrl ljmp inc xor roll cmp xchg lcall test mov sub popf mov insl std push jg dec inc jge das pusha jg pop mov enter jg notb ljmp je outsb movsl add push js push sub jmp inc cmp jg fs inc (bad) outsb hlt and adc or mov xchg testl cli ds dec jg jns add imul xchg sbb mov lods lahf jg push loope outsl cmpsb sub js pop mov lods and data16 ss aam push in adc jl enter mov mov pop int in hlt jle fisttpll and and arpl jo xchg add (bad) psubq jmp mov daa pop (bad) lds and pop adc inc in jg scas sub sub and mov cltd les jg sbb mov dec int3 sbb jle dec cmp jg pop insb push pop jne in sbb call adc xchg in dec xor xor jg lds orl xor out cmc ficomp cmp push push test sbb push pop fisttp loop cmp cltd jg stc mov and inc dec jg ret mov cmp sbb xchg (bad) aaa and jg lcall jg movsl xchg lods push enter xchg sbb add jbe jge loop jg jmp lea cmpsl (bad) jg in cwtl loopne pop int3 popa mov mov jg imul mov push sbb jg cli icebp xor fnstcw arpl mov cld jg iret mov imul sub cmp jg push in inc jns mov fnstcw adc push jmp (bad) dec or into lret cli pop mov jg dec loop sahf loopne fmull stc push dec call xchg mov or pushw xor cs movb shlb mov call jns lods xor gs or push and js inc mov sahf mov lds out jnp cs (bad) in fldcw sub jno jge xlat adc adc jg fldenv sbb scas cmp and pop jg inc mov out push aam pop (bad) outsl or xchg in mov mov ja jge loope arpl xor dec (bad) or dec out and dec das imul jno mov mov push sbb or mov gs mov shrb addr16 into cwtl fidivl sub push (bad) lods out popa cmc dec pop jmp add int3 dec push mov pop jg push (bad) mov xor jg sahf stc fidivl arpl sbb cmp jg mov jge mov cwtl mov mov and inc loop sbb xlat lcall in stos cltd fnstsw push add jg mov into les jg push enter gs xor push out xor add lea jg cmp sbbb sub cmp out das test mov scas je xchg js gs cmpsl mov cmp mov dec insb js pop xchg shrl cmp ret rol fisttpll xor or in lods imul js lock adc (bad) dec adc and out inc loopne ret mov add jg adc outsb cmp pop lock pop shrl xor inc popa cmovae xchg enter inc and jo mov inc mov fisttp push mov lss pop sbb ret jg cmp jg jmp sub shrl xor cmp push jno lds mov outsl stc mov pushf or mov mov jg popl out mov dec lea fistpll mov pusha inc xchg arpl js cmpsb insb aas inc ret (bad) std (bad) arpl into jg movsl xchg das mov sti dec aaa (bad) aad enter inc xlat mov sarb data16 or jg pop addl insb dec mov aas mov xchg push cmp lea ret aaa in pop xor inc jbe jg rorl cmpsb sbb enter std lock sahf in mov cmp (bad) or adc push jp dec ljmp xor jbe xchg xlat jg into shr sbb rcrb push add cmp stos je sbb mov insb pop into jg xchg fcoml js aad jmp fistpl out jle ljmp (bad) pop jle ret jnp push and cwtl adc loop jg xorb sbb dec jg data16 jg cmpsb es cli imul (bad) sbb mov push jg ret jne iret fsubs jg outsb push (bad) pusha jl jbe jmp adc or es and lahf mov xchg inc inc fwait lret mov mov movsb rol out ds loop (bad) daa or pop cli and mov in cmp pop adc test test dec mov mov push and fstl xchg mov sbb mov pop jg push test fdivrs into subl or mov sbb xor pop stos mov cmp popf seta jg stc (bad) cmp leave jg pop outsb loope pop mov in (bad) (bad) jns dec sub adc into push pop xor jg or leave jg inc rcrw push jb mov ja ss jle (bad) lret mov pop mov ja loopne ljmp dec jbe mov aas (bad) xor ds (bad) sub or dec shll pop pop xlat cld fsubs and data16 and ss adc (bad) clc je push mov test nop sbb hlt out mov loop and jg push fstpl popa test jg mov call lret adc loope shl arpl cmc lret int add jg pushf xor cltd les pop pop xchg jae js out xor pop inc outsl je cs data16 add int lods inc mov jns cmpsl cmp jg leave arpl aas clc cs stc mov fidivl jl sbb (bad) fwait mov das out cld fdivrl push insl fldcw cmp (bad) lods mov out pop daa lret adc dec jns push das imul cwtl sbb (bad) ds jno mov icebp addr16 push repnz jge dec sahf sub (bad) xor jg sbb sbb jg sub idivl aaa and iret js ret cmpsl or sub cmpsb cmc sti sbb push bound jg xchg rorb jg add mov pusha xchg pop jno out adc fildl jg daa jmp test or cmp mov pop data16 mov in mov mov js ss imul (bad) xor fcomi fstl ja xchg inc ss pop test pop inc jb icebp outsl sub mov (bad) mov pop jo rcr mov inc xor pop jg movsb fstp es stos jg,pt les (bad) jg push pop inc sub idivb gs rorl (bad) dec sub xlat mov mov popf das pop cmp jno jne pop dec jg imul outsb aas lret es push sub out adc mov jg jle mov jg mov adc movsb fdivrs jp outsl cmp iret pop sti cmpsl int daa dec rcr adc test cmp mov cmpl movsl jbe jg push jno repnz arpl mov pusha loope adc mov mov scas lret std mov push scas mov ja js out aas add xchg cmp mov inc test popa out (bad) mov sub jg push ss push jo aam mov (bad) mov mov xor jge jecxz lock mov aas dec enter fcmovnu rorl repnz int jo loopne test push aam xor pop (bad) repnz sti lock mov dec sar lods ljmp mov fidivl cld in std popa xor icebp stos addr16 and jg (bad) push dec inc mov ret cmp stc aad (bad) loop jno gs mov cli add popa jle sub jg leave and or adc js jns jg ret mov cld mov fs jg ret test pop push sub ja fstps xor lods jmp inc mov push arpl popa dec jg mov mov jg fidiv enter mov fcomps (bad) in jg xchg push xor jg adc pop add testl cmp pop cmp jg in loope cmp push mov dec repz jg rcr mov xchg (bad) jg dec add xchg xchg push shll cmp inc cli pop mov fistp xor ds addl fnsave mov xor fdivrl into jo jmp jg cmpsb push hlt dec xor mov and jne jg,pt adcl jg push dec mov jle daa mov data16 addr16 jg shll dec add scas add sub addr16 add stc popf aas rorl inc movsl add inc xor fcomps repnz (bad) lcall adc dec jg sub adc push stos pop (bad) mov mov mov or xlat mov in push mov jg mov add mov aad cmp jg inc inc cld cmp out jg push mov inc aas push scas int shlb pop xor pop sub int3 (bad) cmp lds adc adc lret jmp fbld pop test push (bad) lock je or in pop lret gs ss jo xor jg std mov lock imul fcmovne jbe sahf and inc std push lea mov jns push imul daa bound inc inc jg pop cmp dec jg int3 ja scas mov imul sub call wrmsr or xchg and ffree push bound and test (bad) jg adc pushf insl (bad) cmc loope xor popa call lds adc push inc nop jg popf pop cwtl pop (bad) xor jg ret cmp xlat xor pushf jg cmp inc jg fwait test adc add ljmp addr16 bound movsb jecxz cmp cmp aam inc addr16 sti jp (bad) out adc sub sbb jg push push mov cmc add mov jg mov mov jg and ja jg je mov jg insb clc xchg jne cwtl cmp jo dec ds sub lahf jp push outsb int outsl in fdivrl ss cmp add sbb loopne jae sbb jmp les fcoml dec movl data16 ret arpl mov push (bad) lea xchg xlat jg xor int3 sti jge in push xchg jne mov xor push add iret push mov dec popa xchg and outsb mov jns addr16 mov clc add sub and adc jg push pop xchg arpl in and jg lock mov mov ds mov lds xchg jae (bad) es jo inc cmp mov fs cmp ljmp dec mov mov cmc xchg in aaa jns addr16 jbe and sahf mov jg add mov xchg int and outsl fildll std mov jg pop movsb outsb xchg in test (bad) idivb mov push inc or addr16 ret lahf xor aaa fnsave bnd mov cmp mov jg dec inc loope icebp jg and lcall jne mov sub add mov gs lods les dec sub xchg int3 jg xchg aad (bad) jmp insl jg fprem mov jg or xchg maskmovq je loop push sub enter ficompl and hlt add mov or xor int3 mov push xor arpl inc pop inc mov insb jle outsl stos jp (bad) ficom and or inc xor cmp sbb stos mov jg mov cmc lods mov push jp dec cld call daa lret sub xchg jg mov out xor pop rorb jmp addr16 xchg inc sub jg lret mov jmp jmp lret jg clc xchg inc test pop fidivl and ss movsl and fsubrl add push sarb mov or cmp pop negl jle mov fisttp jg pop and in cld imul sahf add inc jo int3 dec data16 hlt lods adc mov aad pop mov pushf jg sbb (bad) mov loopne and icebp add adc ss sbb jg,pn pop xor fs inc insb sub mov dec sbb cmc in adc add jg das bound repz gs mov inc inc mov mov sti (bad) mov and les push mov (bad) jg dec loopne outsb cmp (bad) out dec add nop mov loop or mov xor rorb push inc pop out mov push jg leave or jg add sub fsubl in pushf add or jg repnz call sbb jg jb in sub mov (bad) ss xchg movsb inc mov cmpl outsl ds push jo scas js mov sti movsb popf mov push mov pop pusha (bad) mov cwtl mov push jg xchg arpl jl int3 cli aam nop imul pop sub lods je add mov in jne dec inc mov js sti test and ja xchg xor and jg or sarb in jne xchg std dec jg or mov fstp jg lret xor pop popf lods xor cmc popa aas cld in rcll cmp int ja add dec test dec adc inc pop mov jecxz aas sub inc out mov inc xor jge iret dec fs addr16 sar pop pop stc cmpsb (bad) flds pop pop ljmp mov push adc jno sarl out jns lods mov mov daa daa adc mov push pop mov push jg es mov inc dec and jno ja hlt inc pop sub test outsb jae aam (bad) int3 jg jns loopne xchg add aas push mov dec stos mov jnp sti push push mov xchg mov push shll jg setne ror cmp jg pop adc push js xchg sar jae neg dec pop sbb (bad) aad mov lods xchg je loope mov pop lahf lcall jg sub push (bad) pop pop loope inc adc repz movsb xor jne inc je in daa inc aad lahf (bad) jg (bad) pop es lcall push notl adc mov sbb rorl cltd mov and push addr16 jg movsb jmp fwait dec out lret imul mov push popf sub push (bad) into sahf roll roll jg pop push xor jg frstor sub push jg mov clc xchg push or mov pop cmp stc fidivr lods lret or fisttpll pop clc insb xchg in test bound jg ret cld sbb mov push orl jg lea stc jo leave jg cli outsl cmpsb xchg jp mov inc loop je sub lahf push jmp jbe cmp lock jne fistl out out add sbb mov jecxz cmpb mov jg lret inc mov scas rolb dec sbb mov or cmpsl enter les jg mov call jg (bad) sar sbb mov jmp xlat jg push test icebp loop nop sub mov sti arpl outsl sbb cmp cs adc jg mov test int3 push sahf jg (bad) fbstp or xchg out daa add mov jae jg jge clc add lods inc jg mov or sbb dec mov iret lea les adc jg jb jge loope xchg jg (bad) pop ret fcoml aaa xor jg xor and stc inc xor inc pop out imul inc mov dec jg (bad) mov mov (bad) jg int pop sahf das loopne sti mov push sub dec enter jp xor cmp mov cwtl cmp mov fstl dec inc xor jg sbb cwtl test lds bound adc fcom inc cs push sbb (bad) ss outsl add mov sbb mov stos adc mov out cmp jno jae orl test jns mov jg scas shrb cmp inc mov jno mov es out xor xor cli test addr16 push fildl mov sub out xchg xor jg pop (bad) or fwait inc jg lock cmp jecxz int3 rcrl jo lahf pop mov pop or push push lret mov mov jne out insb jg jmp divb mov ja inc push scas jmp lcall outsb dec stos je inc jg int3 adc sbb jae mov pusha or addb sbb rcll mov pop jb push pop fwait jg mov std adc sbb jg mov imul je and lock jg mulb jg jno movsb or das ret mov xchg push adc add ja addr16 sub pop call (bad) and cli insl push dec cmp jno out cld int3 mov mov dec pop add inc pushf sarl push or movsl jg fnstcw push push sbb mov inc test or adc push xor push push jbe and push jg stc mov repz and push inc popf outsl ss and sub pop gs imul mov jg mov jg es cwtl imul mov loop jg insl fs lds ljmp pop sub push mov sub out mov pop push xchg push sti xor popa inc (bad) lahf xor inc lret lret repnz pop (bad) out xor xor cmp shlb pop mov jne sbb xchg adc push orb gs jb mov fstp arpl sbb inc (bad) jo cmpsb addr16 mov test jg movsl sbb fiadd (bad) cmp jge movsb cmp push pop jg js or jg pusha sbb popa add test sbb cmp lahf dec mov pop dec mov cmpsb cwtl sarl das inc or push (bad) std jg pop cmp roll mov fbstp adc rorb pusha jg repnz inc jg inc rcrl movsb pop push cmp fnstenv xchg lret pop jp imul jbe jbe jg mov add cld ret adc inc js in aaa dec inc fadds (bad) repz push daa inc jo jg scas mov sub inc call inc rcr cli jg int3 mov mov mov int outsb push cmp lret jg sbb add mov insb cmp sahf jg xchg sub inc dec push jg leave popf shlb mov mov lods fcmovnb cmp mov int mov jg push ss into aad cmp jp dec fsubr inc mov jg enter bound in jg stos popf or cli cmp rcll sbb arpl and stc mov pop mov out add pop jg (bad) inc js cli mov loopne inc push je loope call std dec mov jg cmp sbb xchg and jg loopne rcll pop jg cli mov jnp xor aas ss sti dec incb sbb jg sbb dec jg cmp add add adc test dec xchg insl push call call xchg pop sbb pusha test cld js nop pop push mov jp jg ljmp jg sub jmp rcrb frstor fisub fs xor sub (bad) mov inc dec das in jne sti repz cmpb pop push (bad) fsubl data16 fwait mov and jg inc fadds jg cld (bad) (bad) mov pop xor js add sub ds test (bad) or dec pop je jg cmp repz insl leave or (bad) pop js nop jg (bad) test adc xorb sbb sti jmp mov push inc hlt test in movsl or nop cwtl jle aaa ja sbb sar rcrl cmp insb jae sub xorl fstpt fldcw repnz insl stos xchg mov pop dec sar int3 jg rorb push (bad) je push jbe inc jl jg int ret adc mov fild push sbb inc and pusha cmpl add cmp mov jg ds aad lods cmp push cmp add push xchg jg out mov jno outsb pop pop mov fdivrl or xor pop or sub lret jg rcrb sub push push mov mov mov inc scas rcr dec sbb jg mov divl xchg jbe fxrstor or mov xor mov cwtl jg xchg leave jb jae loope imul iret add and cmp mov xchg das xchg lock clc fld outsl jg int3 jp and das adc pusha mov jg adc sahf pop fisub jg or lahf nop or pop popa mov adc out jg stc pusha mov cmp (bad) mov xor nop jg les cmp fs mov add cmp jg or and lods add push xchg sub adc dec adc sub in pusha add cltd leave inc cwtl push aas cmpsl mov in adc xchg xchg jg inc out dec pop push fstps insb loop outsl jg gs (bad) inc add icebp cmp insb inc push jnp andb and push adc dec scas loop jg cltd mov pop push lret das xchg jmp imul ret xchg rol push loope or outsb push frstor jg mov test jg or in cmp pushf mov xchg push or cmp jg mov sti and fadds fwait gs or add in jg les jle out sub pop or data16 in jg fiaddl aam ds xchg mov outsb and jg leave add dec out scas add jb cltd dec push inc mov out cmp push fs testl bnd mov fisubl faddl sub inc xchg mov or xchg pop lock jg dec (bad) ret imul cmp push (bad) mov xchg out icebp mov leave jg ficom aas or push inc (bad) aam in push notb mov push (bad) cmc push jg xor xchg and jg fs out xchg xchg (bad) jg pop sbb jg push push ljmp lea xor ret pop aad lock outsb push lcall jnp jbe xlat mov rolb scas pop cwtl cmp int mov mov scas negl hlt push pop iret sub pop popf jg lret fistp xchg mov dec jge,pn jl cwtl xor out add or aas jge dec mov xchg mov js (bad) addr16 jo pop mov loope push out mov mov rorb cltd jg xchg leave mov jg incb shrb loope fbld and push add adc fistl xor lcall mov add mov or outsl das incb xor inc inc stc inc jg dec push in xor cmpsb test movsb ja rcrb jns out inc jp mov in push jg inc dec and mov js ret out mov and lea enter pop xchg call jno repnz fsubs pop imul aas shl cltd push add dec lock inc lea xchg jg ret sub roll mov cmpsl sub mov das jb test mov jg sahf mov cmp xor outsl clc scas mov mov and arpl fimull inc (bad) mov jg pop sbb cltd jg (bad) push stc pushf cld push cmp jg adc ret xchg pop or repz xchg jg dec lea test xchg push inc jno lahf sarb inc mov xchg jecxz mov imul loopne sbbl je lods sti fistpll jp push ret inc nop jg mov pop testb mov jg or out sub out stos pop (bad) jne jg xor test aas jb mov xor arpl sub jg lock das pop cmp loop rcrb imul xor nop jnp shl pusha and pop xor jg mov (bad) cmc or dec subb xor mov nop push and and dec xor or inc inc sti pop lcall pusha in jg bound xchg cmp hlt and (bad) movsl adc and xchg sbb mov adc clc push cwtl orb jg add or inc dec pop (bad) jb test jg (bad) mov aas out jg cli fwait ja cmp notb in sbb push pop or lahf imul push outsl mov jecxz cmp cmpl mov pop bound pop inc cmpsl xchg inc inc mov mov aad in jmp (bad) dec insl popa movq inc add insl test inc cmc incl add mov add jl mov bound movsl jle jg in sub popa mov adc test mov mov (bad) cmp (bad) jno jg js repnz mov lods aas notl lahf add insb inc add jg pushf arpl in cmp push adc push adc mov cmc pop or fstpt ret dec fistpll mov xchg sarb jg loope add mov aaa adc js pcmpeqw dec jmp cmc outsb sub jns addl std push jae mov imul mov pop mov aas jg mov lahf mov jno jg (bad) ja push mov ret push xor add cmp fild test mov ljmp loopne outsb pusha lods aas imul jno (bad) pop mov shl add scas mov out xor cmp jg sbb repz scas jo nop or ljmp pop push out bound (bad) jnp repz mov mov ror lret cmovnp inc sub repnz xor mov sarl or jns mov pop push sbb pop mov cltd mov sbb or ror mov std mov repnz aas inc arpl shr inc ja mov pop lcall push (bad) and es push in movsb (bad) mov pop sarb pop mov dec fimull jg rcll inc jg push mov xor push outsl xchg add cmp ds js mov cmp add ret outsb jg les movsl jg jb dec and out pop (bad) aam pop lock imul sahf icebp divb fdivr (bad) sti jg sub and clc mov inc cmp mov inc sub outsb call sub sbb je js repz mov (bad) mov and lret loope pop scas arpl inc aas dec jg mov and or aam jg (bad) mov add adc xchg and div loop jg cmp and out mov dec jnp gs jno mov xchg iret popa add jg (bad) sub stos scas pop or xchg (bad) icebp pop push push sbb dec mov jg push in inc mov cmp cmpsb enter mov aaa frstor cmp cmp or mov test fcompl push fnstsw clc loopne mov negl jo or jg mov xor das fiadd jg or lret mov sub arpl pop lret push mov mov fwait aam xchg sbb push faddl xor mov mov or mov pusha pop dec adc jg fimul pop (bad) int xor outsl sbb push pushf inc push pop push les push mov inc in sub fptan jg push iret pop push xor out aaa out aad shl lahf jg mov pushf addr16 mov pusha repz inc add adc out jle cmp fildl sbb jmp jp hlt fdivrp cmp lods add mov int adc mov es mov xor mov cmp jg pop outsb fldcw jmp shlb and inc sub icebp gs cmp cli in lock jg into clc daa sbb push das mov loope push mov int jle jl mov jecxz popa mov lcall jb fsts push mov push cmpsb loop pop pop jae mov adc insb jg in mov push mov (bad) test jmp cmp sbb std jecxz jg test cs sub cwtl xchg rcr mov das xor mov inc mov stos addr16 scas pushf mov in pop inc out sti cmp loopne outsl int3 mov jg sbb mov sub jg fsubl cmp dec mov sbb test xchg jg mov mov jae aas xlat sarb test ds lcall addl dec jmp jg cmc (bad) inc jns adc sti jge push dec jmp inc jg enter dec (bad) aad (bad) lds test mov jbe outsl pop fwait jg jecxz and jl pop out jg repnz cmp rorl (bad) idivb xor jmp ret mov push mov mov inc dec push in and jp pop je stos mov push pop sub and cmp push mov jg mov orb jg test mov push es (bad) sbb jo dec cmp sbb (bad) movq fisttpll (bad) icebp add and (bad) mov aas xchg gs es sbb jg sub push jg insb in jecxz pop lret push fdivr and sbb jg xor mov adc lock jecxz jg xchg jmp aas sbb mov (bad) pushf loopne inc orl push loop aas stos dec mov pop (bad) jg mov test xchg inc ret jg mov pop pop stos adc mov lcall sub inc sub dec fwait and mov icebp mov adc dec jno (bad) pop std push ja loope mov xchg jge mov test inc xor subl inc inc jg movsl hlt and mov pop jle jg cmp int3 sahf jg cmp push imul fwait pop sbb dec jmp xchg inc ret jg stos and jg xor imul sbb jae mov jg jle mov sub mov push (bad) jg cld loop jmp mov fnstcw push push lock jg and je mov sbbl sub movsb mov lods arpl lret jg cmp std jg xchg in add jg out mov dec mov mov xor mov mov mov mov sub add scas sub popf push push fsubrl data16 push and dec std cmp pop and les inc aad in jg mov std mov xor popf imul ss push ds xor mov scas jns fs ret lods xchg fidiv sub mov and lds jp and adc adc pusha xchg pop push cmc or test sarl jg dec dec lcall scas add (bad) (bad) std in mov jg incb aaa pop dec xchg jg mov inc je setg xchg std cmc in aas enter push dec push inc inc inc pop imul or bnd (bad) loope sti stc int sub fnstsw jnp pop in mov dec mov or outsl pop int jnp sti inc push (bad) ja mov push push in add push fwait pushf scas jg call pop sbb mov pop sub or push fs pop pusha jns jg sbb les arpl cmp fidivrl sub mov dec outsl mov sub shrb test cltd jg push pushf les scas fidivrl loopne mov outsl mov mov xchg outsl dec ret xor ret sbb jge xor arpl and jg dec sbb out and jg imul jg (bad) into stos lock cmp call and jg divl in add jg jnp arpl (bad) movsb pop cmp xchg jmp mov xchg rcrl lret in loop ret add xchg cs adc jo dec ret movsb ss jns pop push or jne push mov push sbb hlt jg testl cmp jb cmovp mov jg sub xchg mov (bad) out and inc sbb aaa pop cmp (bad) in push and jg and sti inc out cmp out xor pop mov adc inc lret lcall cmpsl (bad) jae hlt jg push loopne mov inc dec sub mov jno jg mov inc mov lds arpl loop inc adc jg jae mov mov jns fsubr in aam in sbb inc outsl rclb mov mov push xchg out inc lret xlat jg sti das fwait mov lds push lea loope push cwtl or inc enter jg jo mov in fnstsw icebp pop inc cmp sub insl jmp int sti jecxz cmp mov enter outsl ss lds add adc xor (bad) outsl sbb loope jne sti inc adc jae insl sub mov pop push or mov mov mov pushf inc pop sbb mov dec arpl adc xchg jg insl in mov or jg ret xchg leave mov enter call pop mov jmp jne mov cwtl jg inc int3 hlt sbb push mov cmp test jg sbb xor daa add jg outsl fidivl loope jg inc mov mov jno and dec outsl adc jmp add push inc out jg test (bad) int3 mov repnz push call loop inc mov inc xchg sbb dec mov int3 in push roll aaa or lcall sbb int3 cli enter jl jg add out dec mov sub add xorl dec loope mov mov jg out popa ss dec das pusha or les sbb dec add sarb shll push mov popa cmp cld pop outsl imul or aas dec and xor pop fnstcw arpl or jmp aas scas cmp stos (bad) addr16 cld add pusha int3 xchg mov or adc mov cltd stos mov ljmp roll fild pop lcall sahf fstps cmpsb repz mov jne jg xchg (bad) lds cmpsb ss adc inc (bad) jg gs in sbb cmp pop sahf ljmp cmpl fcoml ret aad mov xlat xchg and pop pusha xor icebp pop push push mov clc jg mov pushf ret movsl cmc pusha mov enter adc loopne mov pop lea pop adc jno ret pop jo (bad) cld pop notl sar mov inc jmp stc stos jb pop sub jg in mov loopne data16 aas bound mov xchg inc movsb (bad) pop jb (bad) mov or push and lods hlt dec mov fisub jns adc jg std loop call add mov mull out xchg mov mov cwtl mov (bad) jmp pop je (bad) push jg and cmp gs pusha ret in add dec or sti jg xchg insb shrb into mov lret pop cmp or inc stos ja sub mov (bad) push call mov cmp insl cmp jg mov mov jg ret or or cwtl cmpsl push fadd mov mov test xchg mov mov mov das scas out dec sahf dec or jecxz dec outsb outsl dec aas fldl andl dec ret roll test or jbe mov mov push sub jmp inc or cmp das into out add lret enter test add and cmc xlat test jg lea dec lahf jge jg out xor popa (bad) or sub dec (bad) in cli mov addr16 dec cmp lcall mov pop xchg bsf (bad) out daa inc jg mov leave sbb cmp outsl sub adc test outsl pushf mov xchg pop or dec cltd mov in aaa and cmp mov jg inc pusha vshufps or test inc push or adc pop idivb jb das sub xchg jg out aaa mov jg insb aam jecxz xchg jg outsl fist push and repz mov pop inc scas and lahf sub jmp push insb jbe lds adc mov inc xor movsb push (bad) mov sbb out xor dec imul jg (bad) mov jg in mov mov js and je xchg (bad) out jp adc fdivrl inc das fucom out jg push (bad) jge cmp test pushf es mov pop pop repz int jnp dec aas xor xor sub lock mov fdivr icebp jp inc loop call sub xchg push lock fdivs dec cmpsl inc (bad) bound jge ret inc in and clc push adc ficom jb daa xchg outsb lock sbb cmp pop shll js ret xchg jg lods aad push repnz jg mov dec mov or xor stc mov (bad) jg in dec or rcrl scas sub cmp dec daa xor mov push jg fstps push dec jnp adc or xchg mov dec sti jg pop pop repnz push ret sub data16 push pusha rclb aas cmp sahf mov lcall std in pop adc daa push pop (bad) icebp outsl sbb pop sarb xchg sbb cmpsl jg push ljmp pusha inc loopne imul lods out mov pop push es loope pop in repnz inc test or jg in lock popa sbb add repz daa push sbb or lock les adc sarb scas dec stc aaa xor out pop cmpsl icebp sub mov dec outsb or ret insl pop cmp add jg inc pop mov jg cmp aad or pop and inc (bad) jg xchg loope insl repnz sarl stc jne add sbb aas and dec sbbl adc ja push shrl aas ja or int stos stos pop arpl into jp lds sub mov ret sbb lret pop jae push jb lret scas imul (bad) sti dec mov jns pop sbb mov jg mov movsb adc fs cmpb incl jg,pn mov jg inc jno pop xor in mov pop jl subb (bad) repz jg mov pop push cmc loope mov stos push push mov stc pop popa dec (bad) idivb mov inc bound mov xor mov (bad) (bad) xor (bad) arpl mov ja add jb pop jns dec xor lea jg jl push mov cmp mov or jbe push inc out jg pushf iret hlt mov cwtl xchg scas xchg bound adc jg mov (bad) outsl inc cltd jg sub add mov mull fimul ret push js mov cli inc cmpsb push jmp mov inc out ficoml and xchg mov sti idivl aad adc call sub loopne les cmpsl push jg mov popa ret jg ret test or adc xchg mov xlat cmp mov jg out in (bad) sbb mov aas dec movsl jns (bad) mov vmread pop pop cwtl jg cmp stos push inc pop jg cmp lret adc xchg js rcrb inc movb add pop xlat ret fildll ja xchg insb pusha inc fistpll pop cmp add fmull add iret mov js int3 sub adc add sbb pop jnp xor push xor or es aas mov or push jg addr16 lcall sbb adc xchg xchg inc jg dec (bad) xor xchg xor jne bound jg mov push add leave ret repz idivb add jg mov sub jmp outsb fidivr outsl ret jg out mov sbb roll cmpsb mov sub bnd int sbb es scas rcrl dec pop fidiv hlt mov xchg xor mov clc aad or js test push sbb nop push shll push fstpt jg mov mov mov aaa sahf pop add xchg ret je mov or mov bswap out cwtl in icebp xchg jg dec sbb rcr imul je das jno fidivrl outsb push jge inc xor mov sub mov sbb xchg fwait sbb fcomps mov push sub jecxz mov and push jge and aas sub sub mull jg pop nop popa push xchg into insb lds cmc push int out adc push (bad) pushf jg stos xchg cmc pop int3 dec inc mov inc dec mov push xchg ret test cld ss cs inc (bad) cmpsl xchg inc lea inc inc and xchg mov pop test loop pop jg sahf mov inc cmp fcmovnu pop jg jle xchg cmp andl lea sbb ficompl test push jg ds movsb pop jp je or jg mov jae fdivrl mov xchg xchg (bad) and push test stos inc subl pop pushf inc dec loope mov adc lret in pop cmp dec aaa push mov jno dec adc mov or out push repnz mov jg push test (bad) leave loop inc pushf jg push sbb pop or jge jge pop sub xchg jp aas out lahf jg lds add in sbb cli push ja jle popf jg movsb out dec and enter jne das fcmovu xor jg (bad) jge js fs adc bound jg push or dec push scas jg ss out (bad) jg inc mov jp mov stc pop stos jg test jg out push dec add mov les mov pop jg pop or mulb jb inc inc popa dec lcall dec pop das jg (bad) adc arpl or loopne out sbbl stos std test mov push (bad) sahf (bad) pop jne loop push jg add xchg cmp pop sbb mov or and push mov out ds xchg mov lcall aam cltd and push insb sub mov mov (bad) inc (bad) fstl enter cltd inc mov mov lcall push xor ja aad sbb pop sarl mov fs pop mov out test hlt and outsb ja or leave js out pop dec imul cmp (bad) jns scas jle dec outsl cmp jg lock leave les stc jg in fcmovu xchg inc aas jg adc lods jg mov scas aad jg outsb mov andl push (bad) mov push pop or mov repz push and adc (bad) repnz lea add xlat xor popa adc xchg inc jne rcr mov mov fimull ds (bad) sub dec add mov jg out mov or aas and stos jg jp sub ret adc xchg orl mov mov mov xchg dec inc decl aas xchg add dec jl jg outsb jno mov mov mov xchg jg lret mov (bad) repz xchg lods push dec add pushf cmc jl ja (bad) mov aad in mov js sub mov mov icebp xchg sarb fstl enter pop sbb mov sbb dec push stos les adc push or pop insl xchg testl out pop lds xchg insb fild mov scas jb jmp push jl mov scas and inc jp sbb js shr fcoms arpl leave or lds repnz pop pop push jnp out arpl iret fildll scas jns sbb cmp jno xor xor push jecxz inc or pop or cli mov fwait dec dec movsl in lret bound popf in push out arpl mov lahf inc pop pop adc mov jg shr (bad) sti test aad xchg test inc call pusha imul fcmovnb lret jg dec xchg test mov iret mov jg dec pop jnp adc fidivrl aaa jnp xchg (bad) sbb loopne dec dec and xor pop jecxz push sub jg or mov xchg inc fidiv out out (bad) call sbb sahf xor testb stos sarb dec pop outsl mov fidivr es xchg or inc inc mov test xor in xchg jg repnz into adc and sbb dec sub push sbb sbb mov pop lods push je jp jmp or sub (bad) pop inc push jg sub dec cli aaa mov or je mov pop pusha inc gs incb ja mov ds and cwtl mov mov xchg pop sbb jns xchg and push notl repz cmc sti in fwait jg addl insb xchg ficomp sbb and test jecxz jo cli lahf inc push jg mov (bad) cmp nop (bad) scas orl mov popf in pop inc mov out aaa xlat cmp add imul fimul shl or fildll xchg jg repz iret ds cmp pop mov (bad) mov jg roll jg out jmp insl jg ljmp cli nop xchg pop jg sub (bad) fistl jg fisubl aad sbb outsb adcb mov sub int jp sbb insb in push jg (bad) outsb leave mov jg movsb lret (bad) cmc cmp (bad) jns pushf call push imul lea mov leave inc mov sbb jg jmp fwait movb call inc mov jne add mov sbb jns push add xor stos (bad) roll fsub sbb mov push push push jg mov sarb xchg or idivl loopne mov mov pop out sub jg stc (bad) xchg sarb cmp xchg imul movsb mov stos ds movq mov es inc (bad) call jg mov call test imul adc or fbstp xor pop adc popf icebp in mov jmp sar lods jl cmp inc sub daa push stos fs sbb push leave pop cmp jg push inc stc jg push jle fs adc jns jbe test (bad) in mov mov cmc pusha scas outsb jg mov xorl jp clc aas (bad) cmp mov jg (bad) push repnz push fidivr cmp movsb fiaddl and lahf jne inc addl add stos mov push sti sbb cmp mov or rcll push inc dec add inc rol sahf fs or int3 jg movsb cwtl out add sti mov call push lcall sahf lods and mov cltd xchg popf rorl cmp popa xchg pop mov sahf loope enter sub divb push push adc int add mov sub xor in jle lea inc daa jg (bad) xor jns clc push mov sahf mov (bad) out pop dec pop jmp jg pop (bad) lret pop jle push fist jbe ss jg cmp fnstcw out sub jg cmpsb push into stc sbb pop mov cmp pop xor jnp jg mov rep dec fdivr mov push sbb dec stos stos xor lds ret and add iret jbe arpl notb fcmovb sbb push cmp xchg daa pop test mov mov push add mov push mov add int jg add (bad) push mov jge call xor pusha or aaa fnstsw into andl or jne add mov push jge sub mov out xor inc jg push sbb adc call sar mov mov dec notb pop jg mov lock jg xor jne adc les pop or push mov inc cmc xor pop jg lods mov pop inc mov fbstp dec push js inc mov cmc jbe xchg ss jg mov push lods xor clc jg sbb insl mov pop and (bad) addr16 aas data16 js mov jb ja (bad) aaa xchg inc jg pop xchg cmp (bad) aas mov mov in fldenv xor cmp test sti (bad) jb cld sahf mov mov in cmpb pop and mov xchg js outsb pop outsl mov sub gs jg shll call dec sbb cmpl mov stc (bad) int3 sti mov pop xor sbb mov cmpsl mov adc sarb in (bad) inc das dec pop or pop xchg xor pop inc test jne push jg ret repz xor leave inc fs movsl pop xchg pop inc xor jg adc ja daa cmp movq fcompl jmp nop cwtl jg adc icebp jp jmp fcomp addl inc or jg inc movsb ret inc mov sarl dec jg xor mov push lahf aam mov xchg jg lds sbb loope inc mulb aas mov xchg (bad) xlat jecxz dec call mov jmp cmp inc int std sahf pop adc adc jg cmpsb daa jl jmp lods sti inc test pop pop negb pop orb mov cmp cmpl cmovae push jg dec iret (bad) in and loopne mov add adc pop movq insl ja jg movsl and or aad jg pop jecxz fisubr sub lods in ljmp jg and jge out push outsb aas cltd lret cmp mov sub bound or adc mov cwtl jecxz cli sub fsubl jne sub inc push dec jg in and mov scas cmc jg test sarl sbb sbb pop loopne inc lods xadd mov pop push pop xor les (bad) or push mov clc and addl jge ljmp ret loopne jg push push stos aad dec inc jg push hlt push js sahf sub mov and ficompl mov outsl sti sub adc jg inc (bad) jbe subl or ret xchg jg lret xlat mov arpl dec fisub aas repnz push xchg insl push mov cmpsl imul mov jmp jg mov imul mov out orb (bad) outsb mov sbb fs clc dec pop lds ljmp scas dec xchg jg call outsb sarl mov lock jmp or push mov inc les test push mov insb push jg jmp inc scas imul jl fimull push mov enter test mov mov cmpsb fs lahf jle in sub jp jge iret adcl and test in cmc mov mov jb andb in jp addr16 mov sar cmp call sbb jb jg (bad) xchg jae xchg cs rorb or pop mov jg xchg jp xor cmc cli sbb (bad) cmp jno push cmp jo jg fwait mov stos cmp popf jg in xchg inc scas push or cmp pop mov fnstsw dec jg and add mov xor sbb or sub push test pop sub adc mulps lods je mov adc pop jg cmp push cmp dec mov nop pop push dec cmp jg aas (bad) sbb lea fbstp jns outsl sti dec add push jg mov decb push leave lds ss mov pop addr16 js jmp lods dec cs xchg xor push cli lds mov bnd int gs pusha inc push or add mov lea (bad) dec insb outsl jge arpl sub imulb ja jg (bad) jg xor divb aam jg or pop insl dec sub jg fucomi aas movsb je pushf pusha dec jno inc (bad) sbb sub outsl orl mov mov lods jg mov repz xlat cwtl idiv dec (bad) dec pusha jae lcall outsl rclb mov (bad) aaa jg jmp pop add dec push xor sub dec xchg xchg imul xchg std mov mov incl pop movsl test mov aam jg scas dec xchg dec divb pop ljmp lret lret bound and rcr clc arpl jg scas push sub push pop push mov stc daa fiaddl mov andps inc cmc cmpsl fimul outsb mov jb test and testl fbld stos jno (bad) inc sbb daa pop in jg loopne pop jbe pop leave idivl out add mov adc ds mov enter dec jg jo mov mov cmp mov lret pop cmp mov clc (bad) push mov aas xchg xchg inc out inc popa jg adc pop jg cmp mov cmp sub scas jbe pop xlat out dec inc mov incb dec in outsl pop and cmpsb jnp mov loop sti in inc jg nop test mov add mov pop inc pop hlt mov cmp fnsave imul js stos jl sbbb jnp lret es shll jbe pop test addr16 jae outsl sahf fmuls jp cmp pop sbb dec push (bad) mov gs aaa test pop xor dec or jg mov xor sub xchg mov (bad) jo lods xchg cmp (bad) imul dec ds fisub cwtl or sbb sbbl jg fs rcll mov aas pusha movsb cmpsb daa in fmull add fwait les xchg mov jg mov loop adc jno adc mov xchg xchg out or jg fisttpll or sub iret and (bad) pop jg xchg fsqrt ds pushf lret jg adc sbb sbb xor push push (bad) in mov inc lret test cs out mov mov jmp ljmp push jg imul outsl jg rcrb xchg pop das jg sarl jg sub lahf mov in inc (bad) mov jl pop pop fs popa lea mov enter dec and rol jg pop xor aas jg lret mov lea enter ret aaa hlt add xchg stc out pop jg push add sub adc jp cmc jae popa inc idiv push fisttpll lods sbbb out in loop pop pusha jle adc arpl mov jae mov dec dec pop stos stc data16 xor mov rol jns sti push fstpt pop xchg ss fmul jg add icebp testl repnz leave jg mov inc mov lret into mov dec shl mov stos xchg inc popa sbb jo pop inc dec push jb xchg dec loopne (bad) mov les inc fnstenv decb mov mov test add (bad) loopne mov movl xorb aad pop xchg into adc fidivrl loop insl jnp xorb outsl add aaa jae cmp inc xor xor out test (bad) cmp (bad) push mull scas xlat in dec jg mov ss shll adc sbb sub bound and and sub mov pop into sarb (bad) enter mov or push mov xchg sub popa stos cmpsb ds jg push inc (bad) push test out adc ljmp sbb dec dec adc sarb xlat adc loop xchg push test sti fsubrs push jg adc subl insb or jg jno imul mov jp incb negl jl jg inc imul mov (bad) out dec jge jg mov lock jg cwtl sbb sti push jle outsb inc ret xchg in add sbb or mov cmp inc adc jg pop and aam pop leave repz inc aas lea clc pop std stc (bad) idivl divb sahf jle adc inc xchg (bad) xor fnstcw mov hlt adc (bad) fild fwait clc pushf push jg or loope sbb insb ss xor pop jmp adc xchg mov insb fs xor jg dec push pop and out ljmp lcall dec leave mov or mov clc adc jg mov icebp jg,pt insl mov out sar xchg (bad) xlat push xchg jno cli xor sarl std xor push inc cmpsb inc mov mov in mov js outsl mov (bad) ss je dec inc and out shr sahf push mov je jno jg addr16 sarb fisttp pop sti sti mov pop lea jge outsb js pop jp test jle bt mov in dec push test pop in decb cmp aad dec divl jne jg mov cmp dec mov dec daa sub xchg test mov jle (bad) push movsl call push inc repz push std (bad) lret ds xor pusha and jg adc cltd in andl rol xchg xor and mov call stos jg jno insb roll jl jg xchg lcall pop jns sbb pop add clc ljmp mov jle sub push jg int3 xchg or lock out lret jo add jg jmp dec pop aas mov mov jle and cmp jg pusha inc sub out das jg and adc or enter pop add push ret mov push hlt in out pop jg mov and enter xchg jg outsb stos arpl push cld mov mov mov addr16 lds test ja inc in pop mov xor aaa push aas and fiaddl test aam ds ret or pop ret xor mov jne mov js dec or lds leave inc stos scas xchg jg lahf imull jle shrl jno mov aaa jecxz fadd sub jg ja xchg mov adc out mov mov xor out cltd loop jg orl ret mov insl mov or clc pop xchg jg pop idiv inc aam js pusha insl jg jne out out jbe jg leave scas ja (bad) aas jmp fnsave fwait or inc aad ror mov sbb in jg fistl mov arpl sar divb push mov ss outsl xor dec cmp dec add mov repz mov xchg sbb pop arpl test jg (bad) jmp cmpsb jne and mov and test mov jg mov out adc sbb bnd and fldl in pop cltd aaa mov lds sbb idivb test add loop lcall pop cld push mov jno pop test add push (bad) pop jg div inc in insb ret lcall lods pop jg mov cltd pushf (bad) cmpsb cmp (bad) jg ljmp cmp mov xchg inc lcall nop mov sbb adc dec cmp out lods push xlat jg movsl jl mov in pop sbb cmpb sub loopne outsl mov lods dec mul shrb sbb jg repnz jne adc dec in push push lret loopne lahf mov sbb stc fiadd loopne jg jnp xor sti mov jg enter xchg sahf movq push scas cltd mov mov dec jg inc loop xchg jb cmpsl mov sub jg jae pop fstps loope in gs fs mov jg sbb jg ss adc mov adc popf into and pop repnz pop daa loop jg jb sti xchg fild hlt jg pop and adc es mov xchg xchg xchg dec or jg mov push mov insb and jg gs sbb sarl rcrl jle lahf mov enter mov pop mov pop int cwtl lods call xor add sub out je jbe or aas mov das jmp add stc fwait cmp fistp xor and fcompl aaa push jg insl out jg faddl bound arpl mov mov mov into sub fidiv inc mov cltd jg xor imul adc mov xchg in jg out or or pop push arpl mov lea outsl in cwtl inc sub (bad) jg lcall jg loope push into jno imul stos mov mov xchg mov fwait lret jg repz test dec sbb cmpsl int ficom xor gs mov sahf movsb mov cwtl or cmp sbb xor jg aas fxam mov mov jg jg xor mov mov ret shr in sub int cmc pop enter add inc pop and mull cmc jg cltd mov pop or adc cmp or nop addr16 push (bad) sahf jg push (bad) in mov aaa addl stc cmpsl cwtl mov das jo dec dec (bad) mov outsb push inc push xchg jg mov jnp jg movsb mov pushl ret add lods xchg mov stc (bad) mov ss xor mov jbe add jle mov mov repz dec fldl ret push lret test fidivl jl push insl aas jecxz lods or dec cmp jg and ljmp pop push xor or jmp cmp cmp js mov jg dec and adc dec push (bad) loope ret out or sarb jg icebp jl movsb xchg push fdivrl ja push jb dec mov fidivr cmc daa inc jg adc xchg lret insb mov popa jg out mov iret jg mov roll out push gs pop jg sub das push jbe add jl imul or sbb jle jg loope in sub push adc ljmp xchg push mov lock pandn push (bad) call cltd cmpsl jle mov lea jmp pop rcrb (bad) cmc mov mov ret sahf cltd dec jl (bad) stc cmpb and jg mov or mov test mov jg fisttp push scas push xchg xchg xchg cmc add lds dec adc push stos mov movsl fistp cli hlt inc fwait adc aad pop mov loop inc lea ret cmc sahf and repz fdivrs push aam cmp xor mov mov int3 jg enter mov push cmp clc stos imul inc xor jg adc in lds cmp pop in sub push mov aas adcl jg push stc movsb test mov mov ret push int3 jb inc fsubs jg insb test lods jmp lods mov inc pop push add xlat adc jg ret adc jl,pt fwait cmpsb repnz test repz mov dec xchg test (bad) cltd popa sub jg lea ret jg shlb cmp test je mov mov jg mov in stc lahf pop jg xchg mov sub cmp fwait xchg ja scas mov add stc movsl fnstcw or aam mov jae push xchg rcr pop lods out daa pop aam aas push lret push je dec lods xor xor pop lahf fwait sbb or jg mov fmuls xor jp cmp addr16 sbb orl sub into xchg mov pop mov mov jg int fsts push dec les test outsl push xor or mov ret and lods dec push sahf sbb mov xor insl mov pop repnz jmp jg les js mov dec jmp push cmpsl jno mov xchg je sbb stos insl jg add mov jb mov xor push xchg or cli sarb (bad) sub mov add (bad) jmp cmp aaa or inc cld add outsb push adc xchg mov inc test mulps jg inc jle divb jg sbb leave (bad) cwtl dec sub hlt jb jbe sbb or repz lcall ret cmp subl xchg inc push es and inc fcomi js jmp sub xchg pushw jg mov jne dec and mov aaa dec inc popf lock push jg jnp dec push cmp js xor imul fdivrp ja fs inc mov aad add mov sub inc fistp in mov out jg cwtl scas outsl cmp bound ret push jg cmp stc jg pop mov push add ljmp aas jno add out pop js adc lds ja bound adc hlt jp aas xchg mov (bad) push xchg movsl inc xor jg ss jecxz iret pop bound (bad) out stc mov sbb ret sarb std xchg movsl sub inc loop jg jno dec fucomp (bad) jne adc ja fwait cld xor mov mov xchg jg std push nop xchg xor js cltd add insl das mov cmp mov xchg (bad) pop dec xchg ret inc xor pop push pop mov das and icebp pop out dec idivb mov enter out outsl jmp mov call jg inc mov in jg lods cli jns enter dec rcll dec sbb mov inc pop std insl orb pop lret jg cmc inc test mov jg lcall mov rcrb dec sub jg call lea mov ss mov add mov std call pop in arpl dec outsb mov pusha hlt or das jg sub fisttp repnz xor jg xchg xor jg or pop jae cltd jg and (bad) ja and fidivrl fcompl mov xor int jmp rolb jg jmp xchg rolb arpl jae lods insl adc mov sbb xor push dec push fwait pop push data16 jg jnp outsl aas cmpsl movsl jg xchg mov mov hlt sbb lods mov xor jne and cmp mov in mov mov je xchg jg or xchg xchg jge jg or jnp sbb aas outsb add jmp mov or dec jae lods out test cltd aam and cs jg int3 sub jg decb xor in push das cmp push cmp scas inc mov jg movsb xchg dec push or and mov rcrl out movsb shlb inc movsl and repz pop pop mov in mov sbb xor dec ja int (bad) push inc out mov jge and jg test notl adc xchg stos fdivrl add les add cwtl adc cmpsl and push add mov sub jbe push jg scas (bad) loop push sbb sahf xchg inc xchg cmpl mov xchg mov subl push loop adc xchg xor cli push call jg mov mov mov cmp cmp add jl sub aas outsl ljmp popf bnd lret lcall popa daa fsubrl mov cltd push jg mov out xor scas (bad) in jbe mov mov jg cmp sarl push mov sti scas (bad) leave fwait scas sub loopne add jg pop push and dec int mov outsl lea aam mulb mov xchg imul ljmp push adc orb dec jp lea pushf sub push jbe outsw inc adc outsl mov sbb outsb mov push fmulp inc mov jg scas adc cmpl jo sub pushf aas lock xor aam outsl mov sbbw call mov popa xlat mov ficompl cmc push repz and loopne insb push add inc into dec leave pop cmp insb jge dec pop xlat popf sbb arpl (bad) sti xor mov inc (bad) mov add mov xor adc cwtl xchg (bad) dec mov aaa das dec cltd lods jg repz int3 or mov sub xabort sbb mov imul popa inc lret xchg gs jg add das add js jns,pt insb mov (bad) sub jg rorb adc fild adc lods or add mov xor leave xor pop (bad) (bad) aad add arpl cld inc pop jg jo dec jle mov xchg shrb xor cmpsl nop enter dec jle xchg mov je inc mov imul inc push lret inc xor ljmp xchg fs or es fstpt mov pusha aas stos mov stos inc mov inc sub mov mov pop out add (bad) adc jg les xchg xchg jno jp jg dec mov repz cmp cltd aad dec cmp ret sub bound lahf jno jo xchg jbe,pt ja mov aas add je push addr16 xor cli or xchg adc popa aas add hlt jg xchg xchg dec aad jb in stos test or xor push jg dec mov xchg jg cmp cs sarb pop enter push jg fisub (bad) jbe out out fnstcw mov dec adc fs sub stc lret sbb inc and push jbe (bad) xor mov xchg adc pop fnstsw shll inc rorb clc pop xor jg dec inc cmc aas fs decb mov pop inc pop fistpll inc mov mov add pop aas lea xor ja hlt mov outsl arpl mov jo in or inc inc outsl push sub inc mov cmp add orl (bad) stos sar insb and cltd jg mov subl inc mov test int3 jno sbbl insb aas jae fs lcall jns mov adc lret push push pop stos repz ficoml fsts cmp dec jb or add pop incb sub mov out or dec aaa or stc jb and jecxz sti out rorb adc fchs xor call and mov fimul xchg scas dec popf inc pop popa pop add rcl mov mov movsb fisubl std ftst sbb pop test ds leave outsl dec les and jbe lock add in xor ss out fwait ret and or adcl or mov mov sarb jg and cmp jg sub add outsl dec dec push xor or fldcw (bad) cmc cmp mov xchg jno xor (bad) jg sahf int add (bad) jg nop fbstp dec xchg fs cmp jg jns pusha pop jecxz gs outsl movsl add sbb jg popf aas (bad) pop mov mov hlt jns pusha mov sti scas add and push jg jecxz je jmp adc bound aas fldl jg cmp cmp cmpsb (bad) jg xchg jp ljmp push fldt and (bad) push out cs push or dec fisub jg xchg mov sti jg rol jmp inc and incl jg pop ja push and fnstenv mov add or lret jg call cmp sbb insl dec push icebp jmp mov jp pop ret lea (bad) js or addr16 jbe (bad) xor adc rcrb jg xor push jg sbb in cmp movsl jg daa and jne jp notl cmp jg cmp cmp adc sub xchg xlat jg mov add ror (bad) xchg repz addr16 cltd dec lret dec out pop jg mov sbb scas mov inc fs cmp fsts mov sbb (bad) lea popa mov pop ljmp mov movsl fcoms sub and xor cmp xchg jnp inc jg sub stc cltd adcl jg push aas aam mov jg js loope cmp repz xor jg mov mov bound jg mov aam je mov (bad) jecxz sbb jmp pop in mov pop je nop jne cmp movl arpl dec repnz mov ret dec mov jg adc pop cmp push cmp mov mov xor jg lcall insl lret cwtl js ret outsl in aas enter inc pushf cmp jnp std sti xor lret inc add int arpl pop dec adc jg xor test mov pop jg mov es fidivrl mov jg mov sahf sbb and jae xchg movsb bnd pop divb arpl jg inc sbb leave jae repz mov xchg mov or mov aaa or or jg xor mov push sbb (bad) jbe cltd mov lds pop xlat cmpsl jg inc aas xchg ror scas xor xor dec push (bad) inc sbb jbe mov cmp mov ja cld fcompl mov lds mov mov push jg lock mov jg mov mov test dec jg mov adc sbb stos cmc stos push nop mov lcall inc clc jg and adc mov jl push jle pop jg icebp (bad) cmc xchg and push push pop adc pop dec imul (bad) idivb pop cs lea movsl cmc lcall cli popf iret nop bound test jg pop or ret jg adc sahf jne push jg pop or and pop rcll jg mov mov sub and cmpsl mov ja add (bad) jg jno fisubl add push jg popa sbb leave xor movsl jg inc or or jg loopne cmp icebp int3 sti xorb lahf int xlat push jg sub (bad) jmp inc mov pop jg push lcall aam lds add jmp addr16 cmp (bad) jo rcrb icebp mov and jg and add mov movsb scas enter dec jb int adc xchg pop push push jno push jg dec xchg mov jl aas int3 fmull ja mov jmp jg push push jno or add loop jg xchg cmp aam stc cwtl xor and add popf fldl fcmovnbe mov xchg mov jg gs imul xchg shrl ja (bad) (bad) fwait in adc or jg imul (bad) stc xchg jg pop (bad) call jg xor lahf ret push daa aaa mov stos jg or rcrl sbb sbb in lret mov test jg cmp jge mov mov dec (bad) sarl retw inc xchg leave notb stos lods nop push (bad) xor loop jbe int3 int3 jg lods test out pusha lock cmp add stos in push or inc loop jg inc ret movl pop jmp inc rorl imul punpckldq sbb xchg push dec orl sbb jno js (bad) in loopne jg lahf xchg xchg mov idivl pop push jge push push aaa jns xor icebp mov inc pop ss mov dec jae fisttpl sbb (bad) pushf (bad) movq pop pop sahf xchg mov fbstp mov lods push adc jg,pn mov cwtl fidivr sbb pop test (bad) repnz pop cltd jg ljmp aas faddl jo sbb add mov push xchg cmp mov mov jmp adc imul ja jle clc and jg or test jg (bad) std add xchg out or scas mov ljmp jg jmp dec jg lods test cmpsl xchg mov jg (bad) push add subl ret aad sub pop jg clc fsubrl fisubr push add pop or jmp or js jg loopne and insb mov jg cmp inc dec ret xor xchg inc icebp sahf xchg add inc loop popa jg lods daa ds pop dec jg in enter out jg or jmp aaa data16 pop pop test push add pop lock lret adc jnp (bad) and mov xor and test dec pop mov xor jmp outsb sar jg insl mov imul jg les test jg or je push outsb pop int3 mov sahf sti mov xchg cltd (bad) lock sub ljmp dec stos mov jg xor cmc mov mov xchg xchg jmp dec mov xchg sbb push divl lret jns test les jne mov or lret mov pop dec cmp jbe out js fwait out clc icebp pop in lea adc mov and adc xor or sbb xor std (bad) ja push jno jbe sub orl cmp cmp pop outsl inc cmp add ret or push mov cltd je pop sbb sbb int loope push subb out cmp dec mov xchg das (bad) jle pop ret aaa adc test sub lea adc data16 es cli add push outsl mov das fldcw ret jle insb push mov mov dec mov jbe fwait inc in std xor cmp push mov mov pushl fiaddl out icebp jmp adc out inc dec jp jg jns data16 loope mov (bad) outsl call cmp push adc clc mov jmp sbb scas shr out jg xor cmp xchg aas fdiv rcll (bad) fisttpl cs and repz xchg push out push arpl sub std cmp jo sbb sbb addr16 scas pop (bad) sub sahf sub jno dec loop mov push cltd aas jmp inc xchg jg pusha fiaddl jg and pop push mov es dec mov in inc mov loop or xlat cmp or lods (bad) dec jg jae stos int3 movsb adc cmp std jp and jmp sbb mov jbe xchg cmp pop das mov testb sub or inc gs adc xchg dec inc or jg xchg sbb sbb pop add pop ret ret div adc mov jg xchg mov lds jecxz pop ret xchg imul mov ljmp jno dec pop fildll jne ret lret jge mov jg das push sbb sub mov pop pushl add mov inc pop sti (bad) jmp mov xchg (bad) jg sub imul jg mov call lds add push jle jg orl lcall push insl dec mov xchg cmp incl dec mov or push aas push lea arpl mov jno sbb insl imul jbe mov sti mov xchg jne lods jle jno cmp popf lret loope xchg inc (bad) clc jg mov sub sbb jg sarb rep add jg addr16 enter jg inc fdivrl add (bad) aas cwtl or (bad) inc lcall ja dec jge in push cmp fwait adc gs mov rcr adc push cltd cmp pop push cli js dec push iret inc cld jg or xlat mov jg out scas mov mov dec mov pop jne jno call inc push mov fldenv adc sub xchg aam adc cmp and inc inc jns mov pop sti adc push dec adc jo ljmp hlt jmp fdivs (bad) jg jle fnstsw mov mov sub mov adc pop out jg pop int ds cmp add mov and pop iret inc out cmp insl mov sahf xor sbb add imul mov xchg loop out repz and int es call dec mov data16 inc sub pop imul jg ljmp jg nop inc call jg cmpl mov xchg test (bad) dec xor jg repz aam notb call mov lods jg test fidivr mov arpl aas pop scas scas (bad) pop in test clc scas adc (bad) les xchg pop sahf dec sti hlt xchg pop adc popa ds mov jno pop add sbbl jg fdivrp ret negb insb mov sarb cmp pop jnp xchg mov dec or lds pop ss shrl insl jg mov aaa or cwtl jg lahf jne dec mov loop jmp jo mov stos dec mov jl cwtl pusha sub pop sub cmp and xchg mov leave stc dec xchg jg lea call xor stos add (bad) mov mov out jg jle cmp jg ja stos mov fwait push jg imul inc fnstcw cs out rcrl pushf nop ret push fimul repnz aad stc mov cmp jg or jg int loopne (bad) sub jmp (bad) fcompl pop and push es jns xchg out das sub fwait xchg (bad) mov jg dec call jns sahf (bad) mov lcall cmpl lds dec push in imul jle iret mov mov jb push fnop popa mov addr16 mov add clc inc xor push stos sti lods test pop cli and cltd jg pop mov mov adc jg inc inc ret xchg mov pop or push mov in jb add aas flds ret dec cmp out mul iret into iret lea sbb rclb ja addr16 add mov aam mov jg mov and aas out hlt test inc (bad) jae jecxz leave mov mov loope cmpl mov mov sub daa into cs outsl addl and xor mov addr16 jg or jb inc (bad) movq pop push rorl pop mov in shrb scas clc dec jae mov aas loope jns sahf jae cltd in push lods mov call data16 xor pop lea mov rorl mov inc into inc rcll jg in cmp mov dec adc call fwait stc jg push lea jg mov pop inc mov jmp mov fiadd in adc dec inc mov mov mov push jg mov sub mov jg inc lcall lea push mov je popa in mov pop cmpsb and adc sti out mov scas outsl repz pop and and insb das and push mov ret fidiv cmpsl inc adc cmp repz outsb dec inc (bad) mov test inc ljmp push pushf (bad) aas sti and dec xor and mov insb test ja add jg pop icebp jl push test jg xchg (bad) sbb je push loopne fidivl aas inc lds pop int3 pop (bad) loop xchg std lock inc pop ret arpl in dec dec or adc sbb outsl sahf out cmpl stos dec xchg jg cld pop jo scas loopne push pop aam jg shll int3 test jg mov xor inc xchg jg insl push or fsubs xchg repz sahf mov (bad) incb cmpsb dec xor mov cmc pop ja lcall hlt or fistpl test xchg sti jmp insl loopne mov mov stc xor sarl lods inc dec adcl mov es add mov data16 out push cwtl dec jl sbb mov push fidivr inc dec inc lcall jg add mov jg sub imul outsb enter std scas xchg test adc sub fild insl jle pop xor sti dec stos imul cld mov push out and adc mov stos adc test bound es outsb outsl inc fistp int jg mov mov inc cli inc and xchg and sbb test push pop or mov and inc lock imul iret lds jecxz jg or ret pop xor sbb and cmpsl xor pop (bad) dec leave sub dec sahf dec pop push in ljmp ss cmpsb sbb mov xor (bad) out adc cmp ds push inc cld sarl jae lret leave pop dec loope cmc jg fadd mov aas mov mov insb mov or mov push in aaa scas es imull std outsl ja xor cs (bad) jg add adc cmp out and jg cmp jle (bad) outsl pushf mov cli bound in sbb ret jl jnp js mov in inc xor loopne push mov sbb rolb adc mov sbb fidivrl lods push xorb lds mov and push push fidiv rorl jg push bound addl insb jg lcall les cwtl pop mov xchg mov mov cwtl inc sub xchg xor mov pop dec icebp jns jno movq sarl cmpsl xchg pop and dec sub jecxz mov cmpsb mov jg adc mov dec mov jg data16 sbb jg add mov movl (bad) xchg mov jg dec (bad) jns sbb imul js aas inc pop cs dec jnp jg sub imul mov sbb xchg jg dec cmp cmc xlat cmpsb adc xor dec xchg pop movsl jo add jmp xchg out mov mov fwait rcrb mov mov repnz pusha outsl pop aaa adc jg fimull add (bad) fwait jnp mov cli fnop lock push mov pop jno lds inc loopne cmpb jge out repnz in inc pop jg (bad) mov xchg jg ja jge,pt lret outsb jg loop inc add jo in inc cmp (bad) pop or cmpw xor sarb sbb inc test int sub movl sti repnz fs (bad) push (bad) in hlt xor xchg mov imul push inc mov jp mov push hlt mov (bad) ds push jecxz mov mov into shll jg sahf jb cmp lock lds push pop addr16 clc xchg out jg shlb and ljmp jg (bad) mov out jmp sbb adc pop xlat jg mov jle movzbl push mov xor mov mov jg jno xor aas push rorl xchg mov inc scas cmc loop test and jg lret mov mov xor addr16 lods dec bound movsl xor leave jg push jle mov das outsl jg lods imul out out dec in mov mov ds orl xchg idivb add stos bnd mov push jg push es int popa jge mov out enter xlat cmc pushf push pop sub mov fsubrl inc push fwait jmp mov sub bound (bad) mov ret xchg out fwait and fidiv jg,pn loop (bad) cmp add addr16 mov and in mov lret xchg insl fistp inc jo aas xchg outsb inc sub aaa jg (bad) mov stos sbb sarb sbb xor mov (bad) fild jg ljmpw xchg jg mov mov mov les xchg clc loope cmp repnz aam js ja cmc jg cmp jne push inc pop loop mov aas arpl mov repnz std mov add cmc cmovl cmp outsl sub xchg mov mov es test pusha insl or mov fsubl pop jle jg outsb pop cmp sbb jg pop jmp adc call lret insb jg sub lock jg enter dec out jp loopne cmpsl mov jg jb inc mov shll lea ret or xchg ret fistpll sub sbb xchg adc xchg pop mov push aam js jg xor dec mov mul dec pop pop je adc jp lods insl jns (bad) add loope (bad) cmp stos (bad) js inc out add jg out xor ret ljmp jge mov push inc call push jg dec out xor jne lret cmp push mov cli push xchg loop aas movsb mov mov cld push js es or mov add dec xchg jg jns cld pop jp xor hlt aaa mov in addr16 adc xchg lcall dec mov push ds jg mov xchg inc (bad) push xchg loopne outsl mov push mov mov push lret lock imul xchg inc ror outsb jae std mov cmp fbstp inc or or movsl pop lcall js dec mov dec jg inc or loope jge mov mov lret cmp repnz sub sti out (bad) mov aad std ret lods rclb xchg xor cmp jb js jmp mov push cmp dec dec or out push xchg es jp jge sbb lcall pop mov push dec (bad) stos ret out hlt jae pushf repz mov fdivl dec jg jmp rolb fcmovnbe (bad) data16 push jl addr16 cmp scas scas sbb add bound cld or lret mov fisubl out mov aaa aam inc xchg icebp or jg cmp loope push movsl jg dec push xchg call test dec jecxz lock mov aas call jno jne std jg mov dec pop lds rcrb mov xchg inc insb jg icebp mov shrl js jg sbb add cmc cmpsl dec add cld nop lock sub pop dec jb jae jg,pn imul test cmp xor mov dec mov jg mov dec jg and cmp xchg sarl into ret inc xchg add lahf adc mov jl xchg inc outsl fstpl add jg cmp out cmpb inc nop int ficom loope or fildl fild jno loopne lods decl adc jg ljmp aas loopne aam mov idivb lds cld ret jg popf icebp jl mov jg repnz movsb shll pop mov inc mov jg or cmp mov sti mov clc addr16 add mov inc call mov insl lcall mov xor mov out push fsubrs jl dec push push mov aas jg pop stc fdivrs mov mov mov shll in pop movsb inc pusha jge scas cli jg lahf cmp cmpl sbb mov fs adc int3 mov pop fdivrs imul jmp xchg rorl inc push pop mov clc inc push or in fwait cmpsb lret test movsb jecxz lcall jo adc lcall std (bad) aas push (bad) (bad) dec arpl popa jb fcoms in sahf out outsb jg sub sbb pop vcmppd aam mov sbb mov aas add lds jecxz sub cmp cmp push loop rorb scas xor jg icebp add lret pop mov jmp push jg aaa push imul mov dec xchg cmp jle xchg pop cmp adc in dec (bad) dec mov jle arpl mov (bad) ds xor sti (bad) (bad) sahf dec ret xchg arpl jg das dec mov leave inc ljmp jge icebp jg and cmp and fdivl mov xlat jg add pop mov dec and jb in mov ss jg xchg mov push inc int cmpsl jl jg xor rclb insb aad jg fiadd jg mov pop sarb mov cmpsb push jg xor push out dec push jp in fdivs outsl cmp or mov ds dec jmp repz sahf sub xchg int3 daa ret fwait cli movsl or inc jno jg push scas add imul lea retw xchg cmp add adc fdivl loope cmp pop mov (bad) imul sbb add and mov xchg xchg ret insb mov jg push and push inc dec jg call jo mov dec add or xchg cld dec clc pop or xchg fildll sub data16 xchg mov mov jg or jnp je mov fidivrl pop rclb cmp jno inc movsb pushf mov fstpt xor jg icebp repnz fs inc cmp xchg dec fldl into xor jno ja pop addr16 and cltd pop cmp aad jg sbb dec lds jg enter add sti jg nop inc mov lret jg test jno cld inc mov scas lret sbb add dec mov pop mov mov or mov jg adc sub popa das cmp loopne lods xor xor fwait pop sub dec xchg lock or loopne lcall clc enter jge and jno dec pop fs in imul mov jg imul inc (bad) mov lock push add dec adc hlt and jg out mov push jmp push xchg cmp fwait xor negl and nop pop push sub pop int std clc pop jg push xchg mov mov push out cmp nop aad cwtl mov leave or push dec xor out jg push jae mov je cmc sbb int adc jg push in mov pop lea jae shl pushf (bad) mov push imul cmp in shlb jl js outsb repnz (bad) mov cmp xchg push lods sub pop std jg add cmp push shl scas add sbb jg pcmpeqw mov and std ret hlt jp mov adc push xor ds xchg mov jp in dec imul ja icebp jg outsb data16 mov sbb cmp add cmp stos or lcall mov in push sti incl cmp iret xchg mov (bad) pop insl xchg outsb or addl adc mov cmp jb pop jg nop and or pop repnz cmp fsubrs aas or jecxz rcr inc mov mov jae cmp (bad) lahf xor cmp mov dec dec hlt mov mov push jg jns into mov dec inc cmc sbb mov xchg das push dec (bad) jle jmp pop aad jecxz pushf ds dec sub jb,pn addr16 jg or and push ja cmp mov and es in mov jl sti lahf in xchg addr16 pop mov inc add jg cmc fisttpl jo lock (bad) pop or jg adc ficom add repnz ds xor mov aam dec mov pop pop mov lea lahf ret mov lret mov outsb or sbb jne inc jo dec sbb mov fwait clc sub movsl push mov (bad) mull pop loop sub test mov xchg (bad) pop lret iret mov mov aaa bnd fist das dec scas test xchg xor sarb mov jne popf (bad) jg inc mov lret xchg in mov xchg popa fs test pusha les or shrb jmp dec or aas lods push push jg lea nop (bad) cmp out mov rcrl cmp jns divl mov ljmp jnp das ret in mov and aad hlt jg jo js xchg jg sbbl inc scas cmp jg jp adc dec enter mov cmp stos adc lret jg (bad) and and mov in cmpsl sbb jg dec or stos jg mov lods lret sub call mov jg sbb dec int3 arpl add scas mov iret dec lods or mov cmpsb xchg jg cmp or cmc (bad) pushf add push pop mov (bad) sbb dec das pop jg test lret dec dec jg xchg dec mov lahf mov jg out lods or ljmp push dec jo mov jg out mull xchg mov outsl in in loop jg pop sarb sub into push out push jle js xchg (bad) dec add xor das lea add das push insb jnp (bad) inc icebp push je mulb mov jg into add ret (bad) jg clc xchg les or push inc cmp push jg cli (bad) fnsave mov cmpsb jg mov xchg jns sub mov jecxz mov jg mov negl jg mov out jg and sub xor popa jg pop mov ret ffreep mov mov mov dec xchg fidivr add lods add rolb hlt ds xchg sbb pop outsl insb test mov mov jbe mov dec rcrl scas test mov add es sbb xchg cltd jmp lods pop mov push rorb sbb xor mov out inc clc xchg jg adc lods loopne sti sbb (bad) xchg push pop add enter push dec sbb xor jg cli ss cld dec std jle scas xor jne and pop mov mov arpl sub (bad) cmp mov xchg mov jg outsl movsl sbb mov cmpb inc pop sub sbb sbb mov cmpl ja fcoml lret daa or or or push dec jg fadd pop sarb xchg mov cmp xor jne dec xchg jg jnp xchg pop or cld mov jg fiadd mov push out and cmp adc mov xchg mov cmp lret add cs int pop inc push es ficomp add push jg leave and js jg push sti mov rolb repz sub xchg (bad) xchg mov mov scas pop or mov cmp jbe ret mov dec lret fs sub jo xchg iret xlat pop jb sbb sti scas mov jg scas or sti adc pop (bad) mov pcmpeqb and fcomip inc or fcompl mov sub out xchg jnp test push mov stos cmp inc sbb sti jno jmp incl call jg (bad) dec (bad) or js in lret xlat push mov daa push and ret push in dec push clc push jg mov and xor jg sub add mov push (bad) dec rcll jg,pn xchg fnstcw into imul mov inc dec aam mov xchg push jno lds adc in dec push test or xchg mov pop fistp popf mov pop mov enter add xor jg ret dec jp sbb push inc dec ljmp clc and jg mov pop pop jg xchg test hlt pop cmp pop mov pop mov adc pusha jg in push push cmpsl jg ljmp loope jg mov in sarl pop jns and arpl (bad) cmc dec inc pop scas jg dec push and mov adc jae and push loopne jecxz pop mov lea and cmpl fstps loope shll and cmp sub stos in or sbb imul jg mov pop ljmp or jp jg jle iret pushf and jg scas decl cmp js nopl stos imul dec fidivr mov (bad) lea in mov dec out xorb (bad) ja cmp add mov jg push jl movsl cmp mov pop push jo mov mov mov sbb adc nop mov repz mov in icebp sbb inc dec (bad) push data16 test pop pop fs pop jg ret pop fwait cmpsb dec popa cmp jl andb fidiv add repnz jg sub jbe,pt loope jg mov push jg (bad) add xor cmp imul xchg jmp divl rcrl pop push push daa (bad) in jg pusha cvtps2pd rcr xchg jg or ja and jg lcall mov mov pop xor xchg loope and jae mov ja and xor loope jg aaa clc lret repnz jecxz scas bound fisttpll pop mov aas test loopne stc mov sbb cmp out lods fs repz fist jg mov out cmc mov frstor pop test push or add lret add push xchg inc jb scas cs xchg xor insl aam jbe call xchg adc mov dec (bad) inc jle or or ret mov out push sbb (bad) std sahf jg (bad) cmp ja jg (bad) loopne inc lret aas add jle mov mov xchg mov sbb sub or pop ljmp sti add stc nop dec out (bad) in mov cmpsb jmp outsb adc push pop arpl mov xor out jp adc mov push ret das push jne inc and xor xor jg (bad) ds les sub das jg and popf inc sbb iret lods (bad) push jg pop sbb in (bad) lahf and fwait aas inc inc pusha push mov sub aam leave aaa loop jo imulb (bad) or pop push lds cmp mov (bad) sbb push fdivrl dec jb in ret xor mov pop aas fidivr jnp shll pop jg mov lods push mov stos idiv mov pop imulb ljmp (bad) mov jle mov ss mov aad leave jg test sarl ja sbb (bad) mov jmp out inc or jg fwait sahf sar gs (bad) sahf lret daa and notl add adc mov shrb mov shll cld push (bad) js sub fisttp (bad) push inc adc mov cltd adc icebp jg rcr cmpsb lds in push mov xchg jbe jg xor das int3 xor jg,pt into and jge jg fsubs enter jg aad and movsb mov or mov icebp js inc push and ret push adc cmpsl mov jg ljmp insb movsb aaa jp xor (bad) cmp pop (bad) mov and repnz jg fldenv mov sub add ret sbb daa dec inc stc insl xor les lock cs mov xchg lock idivl gs lds and arpl add sarb add (bad) jg and test jg sbb inc jp fdivs ret xor mov adc xchg push lahf loop aad jg or mov adcl lods mov push ja xor jg push dec push mov sti jg int3 cwtl jae and dec pop sub jne xor jg add push aaa ja loopne je test jg cmp xchg inc push mov enter mov lret xchg out add jnp imull aam repz (bad) out dec add mov fcoms dec in leave fsubl aaa outsl jg push add mov and cmp out jg loope and jo push adc jg je sub (bad) mov mov inc imul cmp and addr16 and stc movsb mov movsl mov push ret iret mov mov lods mov mov popf leave add aas and sbb ss inc mov cltd push aas lret sub mov xchg (bad) cmp pop mov jg sbb sbb stc rolb femms or inc pop and sti pop inc lahf loope lret dec jne adc jecxz mov mov fnop loopne jno lcall add sbb jg mov out jg in push lret sahf notl insb (bad) aas cmp ss lahf in jno movl sub mov push addr16 jae xor inc (bad) loope sbb sbb jg out pop add jge push pusha adc in das (bad) pop les int3 jg lcall jg fwait mov jg sub in ss repnz (bad) push jg xchg out ret int3 jg les mov xor adc xchg pop sahf in dec sbb out les cmp pop dec add push addr16 cmp (bad) stc out imul jo (bad) or andl pop or loop push insl test or pop xchg push cmp fild loop mov addr16 or pushf cli jg push pop inc jp out jg add and idivl cltd into mov je jg sub xchg jno mov divl int3 call insb jg sarl idivl enter jmp paddsb jg jb add out gs sbb lahf scas adc or aam inc (bad) jg adc pop fstl jg mul orl pop icebp cmp jg mov insl std scas adc das cmpl sbb std push pusha jg insl fmull int3 mov js xchg cmp stos test xor fisubrl pop inc pop and dec inc imul jno and int3 inc addl mov bsr or dec out adc add sbb stc (bad) lahf sahf jg lea push pop inc mov add mov test pop jge mov inc loope lret cvttps2pi push jg (bad) push ja shr data16 lret jnp imulb adcl xor (bad) pop or std inc jg rcrl (bad) xchg adc out sahf ss lret js in pop iretw loopne aas jo aam xchg xor jg cmp ret jne push mov adc jno lds je scas dec cli (bad) or rclb jge and pop mov or repz mov aas cmp mov pop xchg push arpl pop cmc xchg mov das test inc pop js gs xchg jg xor mov pop cli inc cwtl sub inc mov push jg lods mov xor sub outsl pop sti adc sub lods scas pop sub orl pop or xchg fistpl jmp imul stc jns sarl lods stos mov imul mov in mov rcrl ret movsl pushf xchg jg mov std sub pop jecxz outsl xchg jb sarb incl jg outsl inc mov jg inc mov loope out push gs jbe xchg popa (bad) sti movsl jg push jb mov add in jg jge loopne,pn js in outsl cmp mov test xor std lahf jo addr16 push xchg rcrb xor sub xorb or pop int or icebp ja add dec jns (bad) in fdivs cmc jg mov add rorl movsl lock push xor push rorb jne pop push icebp mov (bad) jp cld inc xchg rclb fisubr adc jg dec lods mov insb push xchg jg and xchg jbe,pn sarl (bad) lret and dec mov pop sbb mov inc xor in jnp addl sti or int in aaa jecxz mov push jp arpl lea jg (bad) and mov add pop lods shr jg imul aas mov aas jbe lret inc es aam mov les outsb mov inc jmp js fistpll js push cltd imul jno xchg jo pop ljmp mov hlt nop xchg insb adc mov mov cli arpl xor enter mov adc sbb inc addr16 insl pop cltd into imul mov pop (bad) mov fcmovu pop fcoml aas inc jp xchg push (bad) repnz aas loope jne push and sarb call fstpt ds pop rorl jg aaa je out pop and aas push and xchg add pop jg pop sub sahf sbb inc sbb pop arpl mov ret mov sbb push sbb jg pop (bad) add dec adc mov jbe dec outsb mov jg daa int3 loope je fistpll push clc lret push sub and sahf inc xchg ret ljmp fwait ds fild popf lea pop or lahf repz dec push mov mov mov inc jg pop sub inc mov loopne stos sti jbe ljmp dec pop lea test cmp arpl jg dec xor addr16 gs adc sti mov and mov frstpm(287 outsb (bad) sub pop pop xor data16 sub mov mov and lds lock or cs jg or (bad) dec xchg dec sub adc int3 pusha call sub jg add cmpl dec out xor xchg pop scas das sbb and adc sub je and jg or test add (bad) xor xchg xlat mov (bad) jb xor cs or xor jg mov sub pusha bound lock fwait push ss jg xorl inc das lds js mov dec jp or gs pop test dec and xchg aam xchg jg or mov add jle sub fwait or loope movsl jns popf xchg mov jg andl xchg mov loopne,pt jle and sahf mov lahf jg jns lret loop jg add cmpsl pop lret mov aaa (bad) dec nop in out mov scas or push pop jg stc mov insl repz bnd addr16 (bad) orb popf adc mov es addr16 and leave jg,pt jmp pop test mov insl push sahf stos popf fs jbe xchg cmpsl lock adc sbb aam cmpsb mov ret inc fwait pop pop adc jno sub push sub push mov mov icebp lea jg,pt mov cmp add fidivr dec sti idivl sub sarb pusha and cli aam jnp pop xchg scas lret and fnstenv pop mov xorb icebp ljmp ss pop mov aaa pop sub aam fld dec xchg roll int3 sti imulb sbb xor rorl dec xchg jg nop out xor sbb outsl cwtl xorl add imul mov push aas andb mov mov jg mov cmpl rclb icebp das cmp outsl inc fucomi and inc add mov jg lret jl (bad) push mov sbb mov (bad) xchg xchg aas or jg jle jmp cmp fbstp fstpt xor xchg fisubr lahf addr16 out push fidivl (bad) pop dec flds icebp jg xchg pop jae mov push push jns mov sub sahf and adc fadds xor jg jne push popa jb int adcb sub rcl movsb or jp or xor test loope inc jbe push xor loop push outsl cmc jg adc fsubr pop aas sbb cmp cmp test pop mov arpl sbb hlt mov xor and fwait push sub mov aam or out sarl aaa out (bad) scas push rol jo jnp pushf jmp arpl add mov dec mov jne inc sub jle mov jbe inc js hlt jg lahf adc bnd push dec and mov lcall fimull jg in adc (bad) sub imul inc sahf inc aas push xor jbe cltd xchg (bad) jmp enter out mov xor mov mov xchg push lahf xor popfw push in xor sarl jg cs xchg push movsl fcom sbb sahf jg lock xor rclb add adc inc push jg sub aad out xor cld les stc xchg jns inc jae pop mov fstpl ljmp sbb mov cmpsl sub sahf and aam dec pop ret mov jns stos cmp jg jmp jnp jg push andb in jg mov aam ror add jp lahf push (bad) cmp aas test mov (bad) xlat jg (bad) sub movsb jno jg xor aad dec jecxz and int aas clc cmp add in mov or inc xor add cmpsb (bad) cmp jno addr16 into pop mov xor scas data16 or sbb sbb cmc int3 loopne mov fstpt jo inc clc mov lret jmp pop pusha jp push mov outsl loop inc add mov jle xchg push sbb ds mov hlt jg add inc in adcl jg decb gs ds pop mov mov (bad) push test push jg and adc dec xchg xor gs push insb jg cmp data16 mov (bad) sub aam test jle jp push and into outsb sahf call mov int fldl cltd xchg pop stos popf arpl inc fimul mov push pop xor pop out sub imul mov loope jg push (bad) jge popa mov and jecxz pop dec mov clc sti lret xchg add inc and mov ret aas sub xchg stos imul inc push jne popf mov sub xor adc fs inc (bad) xchg je stos sahf cmc repnz test mov iret test mov mov jbe mov jg fldenv fdivrs loope sti outsb or push rcrb inc pop pop xlat add pop jg push sbb mov lods ds jg jge rcrl gs jg jo inc mov adc rcrl pop (bad) nop ret xchg add mov jmp jecxz dec in lret dec cltd or scas loopne jg aas inc cmp add jge lret mov sti nop outsl jns pop or stc lcall push out mov jg inc cmpsb xor scas inc out dec inc and stos out (bad) jg bound mov cli push jg pop push inc cmp jg push data16 cmp enter xchg mov mov mov jle cmp les mov push mov in pop or jg das push jge mov adc hlt mov cmp clc outsl (bad) iret divl fadds and push xchg jle sbb pop fmul idivb or mov jle (bad) movsb push jmp scas jg jp cwtl push push push or and aaa sti xchg ja xor pushf lock cmp les incl (bad) sti push adcb imul jns cld pop cli arpl outsl mov mov add aas lret pop pop jb test inc jne das mov cs lds shl std push ds fbstp fwait jg,pt or or sti outsb loop fistpll lds jle jbe push and idivl add adc cmpsb jecxz rclb sahf pop js inc addl das fs mov lahf jo clc js mov mov mov cld jae aaa pop inc inc out jg test sub cld pop xlat out les movb mov cmc dec pop ficoml inc jg sub dec jg data16 mov xchg leave (bad) cmp dec and nop outsb push mov or mov cwtl and add aas xor dec int or arpl fnstcw out lcall lock mulb jg hlt (bad) xchg sarb add sbb iret push cmp mov fldt mov mov outsl push or outsb out aaa add (bad) xor jp inc dec scas shll aad loopne sub xor mov mov ja inc in dec loop not xchg pushf xchg dec aam adc inc sbb aaa adc push pop outsb les sub adc xchg adc (bad) leave mov cltd push pop les dec jg outsl lods or and xor dec fldl lcall sub mov outsb das or roll inc xchg orl push mov sbb out pop addr16 jg mov mov mov jle pusha xor dec cld inc cltd je mov sub xchg lods jg ret jno mov addr16 aad rorl jmp insb or jg and xchg xor scas lret ja mov aad or aas xchg jg jecxz mov je and (bad) and sti fs into fdivrl sub std add jns and sbb int3 sahf adc aas mov sub (bad) jg dec test xor lds inc arpl and mov pusha jg jge xchg rolb jg push test insl mov pop sub xor push loopne loop sbb cwtl xor mov mov dec das pop xor cmp jg mov jb push mov mov dec inc loope push sahf jg pop pop mov mov xchg jg inc outsl mov jg inc das mov jg mov adc push xchg out je rdmsr fs lea ja jg stos mov lods jg push iret mov sti pop js (bad) xor fwait (bad) pop cmp jg push clc pop push in fnsave sti bound add cmpsl and jg stos js leave xor sbb cmc fdivrl mov push sbb inc es jle addr16 (bad) lods test js mov mov cmp sti mov imul movsl test test int3 sub cmc fnstenv push jo add jp adc in (bad) mov fsubrp jl outsl mov repz dec repz cs pop pop dec movsl jmp ja xchg mov dec insb and dec sbb push popa jg dec les jg mov adc or jg pop push imul stc or and sarb or mov aas shrl cltd dec aam loopne jg hlt fst mov (bad) std cld sub test pop mov mov pop data16 xbegin (bad) jg loop xchg dec cmpsl cwtl and insl fidivl jne inc add mov daa or ss ja jg pusha inc cmp int3 add cmpsb inc cltd mov sbb and test js jae call pop jg fidivr pop mov test sti mov int (bad) ja jg in push popf outsl scas mov jg lret sub pop push sti jo divl rclb lahf mov mov outsb dec pop pop fwait lahf mov shll inc addr16 push (bad) lock mov inc ja in lds nop aam or outsl lret pop mul test dec and xchg mov jg mov lods mov or jmp xchg div push negb fisttp fstpl jno xchg mov ret xor jbe mov repnz jg stos mov (bad) aad stc xchg mov jg xchg cmp ja jnp arpl lcall push popf pop loopne push sub mov cmp xor cli lret sbb xor popf jno push sarb xlat es sbb test jo cmc mov jg lret add into xorl cmc cmp push sbb jg inc mov ret xor pop and repz sub pushf movsb ret jg mov sahf cwtl jg cmpsb pop sub in (bad) inc jle cmp jo inc jmp fdivr pop lds in sti rclb scas cs dec sbb mov jg mov rcrl and xchg xchg xor lds dec sbb jl inc cmp jge jg or je jg std jo fcomps mov loope mov cmc mov cmp xchg add addl jg sahf pop lret mov repnz mov in (bad) hlt add jg mov mov jg bound (bad) lret cmp lahf jg xchg stos mov or int xchg data16 aas add cmp inc mov adc jg push xchg jg ret test pop outsb call shrl jg push sub jg and jg repnz jle je and gs jg popf or fimull out cmpsl or lret dec jle aas (bad) aas notb jnp add push testl sarl psubusb push loope jmp jg or lret inc popa jg mov mov mov xchg call mov inc imul mov sbb test xchg inc sarl mov jo xchg xchg sub int3 pop lcall loop cmp and mov jecxz mov dec jg xchg mov cli mov add pop add dec or test rcr or outsl movsb aas rcll xchg pop adc popf ljmp jg ret (bad) gs lods xor xor out stos addr16 dec aad je inc cmc jg ret movsl mov mov test shl jg jne loope incl push int3 fcoml (bad) jns cmp data16 jg sbb xchg pop xchg jg or cmp push mov inc fwait nop (bad) repnz xlat cmpsl lcall push subl inc inc es lock push (bad) int mull cs xchg and insb dec or cli sub mov add jmp xchg inc pusha cmp pop rcrl in sbb mov stos mov mov jbe mov test hlt outsl push mov cwtl jae pop rorl add iret jg decl dec push jg jle rorl outsb jns outsl pop add sahf or dec jne aas mov xor inc jl sbb arpl int3 leave jns aaa out xchg jg test pop jns jb jg sahf lods xor push pusha dec jg imul mov inc jae pop and jle inc shl scas pop ret ss push mov cmp jg sbb (bad) xchg push aas jbe test adc xchg sbb fnstsw sub sbbl and jg cwtl ficoml popf test push jg sti xchg push jp adc xchg add push or and sub sar or push jo add setg sub mov hlt pop jg push outsl sti inc mov ret lret mov mov inc adc push les mov enter outsl (bad) ret fadd fildll test aas insl xchg xlat fisttpll xor mov pop xorl jl imul pushf jg mov iret jnp jg,pt pop ret push aaa xor es dec in inc dec push mov sub xor push in in je mov lret mov mov outsl mov test jg rclb jnp sbb js cli dec outsl ds pop mov aaa jg sub daa pusha sub cmp and ja (bad) mov pop test leave ret pop ret pop jg (bad) mov jg push inc aaa (bad) and es (bad) cmpsl mov xorl sahf jg mov mov (bad) ret hlt repz xchg push cmp out scas mov mov hlt pop and pop cmp jg dec adc sub hlt sub aaa jg lods jmp jg adc adc mov mov sub xchg push mov (bad) jg lods add mov add and pop lret dec idivl gs outsl xchg mov jg inc inc xchg and outsb ret mov or daa adc ljmp bound leave fcomi js pop scas popf mov or scas jle shrb stos dec int lcall xlat cltd ja push cmc jb lret pop (bad) lock rorl jge mov inc shl mov ja mov mov pop ja mov xchg jns in out outsb inc jg xor adc mov sub push cmovs mov jae icebp (bad) dec jne jg or inc jg push and lahf lea fcomp add mov adc jg mov ficoml (bad) lds je out inc (bad) sub aas (bad) ja jmp outsb and mov (bad) test loope mov push js jg in repnz xchg jg leave xchg dec fcompl jo mov cmp mov push test es jno pop mov push jnp and fidivrl ret rcrb mov push dec mov mov pop push adc sub push in scas lods mov mov lock addr16 sbb pop pop aad sbb push cli jg push fwait bound ja mov mov pop cmc popa mov and xchg dec and sbb mov add mov jno mov cmp pop pop lock (bad) or imul mov in je jmp lock jg aaa or mov stc jg push cmpsb (bad) call addr16 aad (bad) leave inc jg and cmpsb aas or push (bad) cmp outsl push mov sarl jns sbb mov pop pop sbb xor fnop or xor jle iret popa lea scas in fisubl rclb loope ret jg lods sti les xchg test push loope xchg ss insb xlat push mov lods jg mov adc mov sbb test aas mov pop fnstenv mov pop lret jg (bad) leave inc xor jg add arpl push add stos jg mov (bad) inc sbbl sub jg jns stos cmp add fiaddl push test paddusb pop shl scas out aas inc lods push imul mov jns pop sbb out xor xorl imul cmp ret int3 daa (bad) jg mull cmp sarb inc stos sbb add insl loop jnp xor mov push jbe adc (bad) fmul rorb int fsubrs dec lds or push mov xlat pop sbb lahf jb ret pop xor iret insb repz sbbb int jo sbb arpl dec pop fistpl enter cmp xchg in inc dec leave jg or adc imul and mov xchg fidivrl lret mov lock cld sub scas jo lds sbb hlt dec (bad) (bad) pop jg insb lods push cmp lret sbb push rol in jg add xchg cmp cmpl aas outsl sbb iret into les mov cwtl dec fiaddl push aad cmp ljmp and bound xor lahf pop inc outsb mov fsubs jg pop in push test jg inc icebp into int3 stos pop dec mov shlb xchg gs lret aaa (bad) repnz data16 bound jg test jle or out jg rclb in or lock xchg adc sub pop jg fstpl out sbb (bad) bound je dec fmull sti mov pop cmp push inc jae int pop (bad) negb mov mov sub dec or mov mov sti pop pop jle pop enter xchg jno mov mov arpl outsb rcrb rcll ret aam inc add cwtl jg inc and adc push dec insb mov mov inc pop or xchg stc call divl pop fcmovu jg mov shrb xor shlb dec jg cmp bound sbb mov xlat dec jl xchg pop into movq push out ds imul fcoml mov jg inc mov xchg ret jnp dec shlb out jns icebp mov sub pop aaa cld pop fs mov and imul in ja jmp fnstcw and out sub test mov cmc xlat push sahf pop sbb (bad) sbb push mov dec pop or mov add add pop je xor cmpl cmp push es cs dec outsb idivl xorl je sbb pop jg jecxz ret sub or jo jg inc dec test sti or sub aaa (bad) (bad) addr16 cli nop movsl scas dec lahf push pop add inc test les xchg cmp and cmp mov dec mov jg into dec lock decl loope inc stos jg mov lret clc jmp jg stc pop xorl out xchg pop rcll sub ret stos cmp push lock lahf push add repnz inc sbb sbb clc and (bad) add movsb and int3 cli mov pop cmp loope aas dec mov test insb push sub push sub jg and popf mov xor jl int3 push inc les mov push (bad) dec and sbb inc cmp cmp call sub jg adc ja sbb and push sahf push push add aam cld mov pop enter mov stc xchg test mov ret pop es lock mov ljmp fild mov mov jnp,pn and and std jg sub cmpsl adc rcrb mov lock dec je lods jg cmpsl sub int mov or xchg jbe pop imul xchg jecxz fisttpll push adc xor adc bound jns add xchg mov pop inc sbb sub dec mov push lods push pop lcall lcall loope dec sarb nop orl es push cmp add imull adc repz out or sub mov or push pusha mov xchg iret jg int das adc out jne xor inc sti ja inc inc sti xor rcll scas fldenv jg xchg fnstsw lret push dec rclb xor mov xor test (bad) in jg ljmp jg mov and pushf cmp dec int daa cmp adc out sub mov (bad) jg or data16 xor jg xchg mov jmp add xchg fs fistp inc sub dec xlat xor jg in fs pop mov push pusha pop inc adc mov dec jg or movsb (bad) aam push xor sarl jg push cmp out pop hlt iret dec inc je lret lea jmp std mov test mov jbe movsl mov cmc inc call sbb mov jg leave pushl out jl jg lock rol inc fnstsw mov mov out int3 or test push jg jbe pop pop push ds imul repnz data16 xchg mov stos jg ret (bad) cmpsb in dec jg xor dec imul dec lea ds pop dec xor enter mov (bad) inc push movsl out out fistp loop xchg mov jno xor clc dec into xchg imul test mov lcall fnstcw mul jmp lahf adc inc inc jge jg mov pusha inc jg aaa jbe notl wrmsr ret insb dec leave jnp in fsubrs es dec mov mov sub movsb insb ret xchg mov push mov or insl or adc movsbl hlt inc popa push inc scas loope mov popf cmp stos jg andb fnstcw ret lock es dec rolb sti mov mov in fistpll or jne pop roll jle jg push push add push je jmp lahf push jg out inc shll inc jg mov dec mov loopne push rol out cmc mov jp push dec jecxz jg mov push adc mov stos or mov adc mov or sbb adc aaa add test and dec orl fisubl xchg rolb or jle fistpl pop lret test or add pusha imul push andb mov dec inc adc jbe or inc movsl sti jg dec inc cli repz ret or mov push imul xchg push popf test push out dec lods pop jg out in xchg mov pop icebp jg (bad) data16 jno mov in call aam outsb fiadd mulb jle popa adc int push rorl sub lcall jg xchg mov fs cmp adcl pusha mov xor mov mov lock int3 and mov adc xchg jg or or and movsb jae outsl cmpsb xor jg xor stc shll cmp mov es cs inc (bad) ret xor mov lods out inc inc jecxz pop jg popf fimull push cli lods scas jg adc movsb ret and in sbb jnp add popf mov mov push in pop fnstcw clc aad loope dec pop mov and dec je andb mov cmp and push dec idivl mov ficom push pushf or adcl popf pop mov outsb addr16 ljmp mov pusha pusha cmpb dec shrb xchg add std (bad) into push imul clc pop push test aad mov movsl fildll and cs cwtl pop repz lock push arpl fsts mov pusha push mov cmp inc pop adc pop xchg lds mov dec int3 xchg gs addl jbe mov adc pushf sbbb pop jg loop sarb jae rcrb addr16 dec jg mov dec jg xlat mov pop insl stc add inc mov dec adc push jb mov ja mov in add es dec inc imul inc and call in out mov sbb mov adc pop das cmp loope popf je rolb daa decb mov scas in mov sbb out movsl js xor lea (bad) sub fnsave jg cwtl xchg sbb push daa enter and lea sbb pop jne push sub movsl and or pop push adc xchg sbb stos pushw inc andl dec jg mov mov sarb mov sub jg fsubrl pop pusha fnstsw ret popf xchg mov jg cmp mov leave out in fstps enter mov xchg xor push inc outsl push mov jecxz push (bad) jge lods xchg jg int3 roll lds jg lods loope sbb push jg fidiv out (bad) sub jg add sbb idivb rorb adc push sti scas cmp cmpsb in sbb test inc mov pop scas (bad) jmp cld sbb pop sub fnstsw sub js outsl or iret lcall jg sub call scas stos pop fwait inc int or cmp pop dec test pop lea imul sub movb imul test addr16 iret mov adc xor loope inc jg sbb mov lock push push pop aas addr16 int jg xchg cltd mov insl or jnp mov addr16 push jbe cld aaa mov rorb ljmp aam stc into ret imul cmpsb jg orb fidivl mov out jno enter jg movsl or popa insb mov push (bad) pop sub jg inc stc adc and push inc xchg int3 mov (bad) jmp scas pusha mov stc mov mov jg mov lods jecxz inc xor in and cmpb inc out aad jae or movsl sbb das test jmp jg mov jns jg jle mov jg ja insl (bad) enter fild dec push lock inc pop insl loope clc sub jne cmp ret xchg inc sbb jg mov (bad) subb out jns jmp pop mov and aam sub mov jg insl mov pushl out mov sbb mov xchg data16 fwait cwtl gs push push dec xor push mov mov repnz rorl in jg fldenv repnz in jg adc push popa jg std sub fistl sub clc lock ja pop aaa ljmp mov vmovdqa andb sbb loopne sbb xchg fbstp dec insb push cmc fwait jbe jg (bad) xor std jg scas jmp add (bad) mov fnop and cmp cltd (bad) aad jge sti daa fwait cmp in aas and ss dec enter sbb xor sbb ljmp cmp jg inc cmp shll adc addr16 mov sub mov add aas movsl insl jmp insb xor cmpsl rorl sbb mov inc call jg xchg cmpsb je dec fmul jg lahf add icebp in fs inc (bad) jo enter and jg ret mov add js mov int dec lds dec cmp daa jmp hlt mov outsl outsl mov incl repz jno sub lcall or pop stc jg sahf in cmp push sarb rorl mov dec fucom outsl divl push push mov orb fild rcrb scas mov lea dec add rorl inc dec jg aaa dec pop pop push fmul xor pop and pushf cmpsb test out fs mov lea (bad) sub insb out add popa push jg push rcrl cli jae adc mov outsl cmpsb mov std mov dec mov hlt (bad) xchg jg pop stos and jb in ret jae out scas mov pop push mov mov inc ret test stos add shrb push das addr16 repz sbb adc push fstl mov lods lea lahf into pop fcomip int jge pop sti pop jmp sub stos mov dec sub jg scas jno cmp mov and inc mov (bad) mov insl arpl lahf aam js out xchg (bad) jg pop bound jno aam loope stos push mov dec add aaa push sbb ds insl lcall js mov iret and inc inc divl push add pusha je mov repz fmuls inc mov add xchg jp imull lock jg lds es adc orl outsb test nop mov or push (bad) divl adc xchg rclb enter jge stos icebp mov cwtl add outsl sub out int3 push jg xor xchg ss mov add adc xchg cmpsb sub push push jg push das mov jg mov push fisubl jge ret push mov in jg push lock mov mov mov imul jo pushf pop test shrb in add pop xchg sbb lret clc jg bnd outsb jg sbb dec jecxz (bad) sbb addr16 movsb ljmp xchg dec dec outsl sub pop (bad) jg mov arpl xchg adc fs inc jg sub mov mov mov mov jg or add jae mov mov inc pop outsl push xchg jnp mov add aad add mov or (bad) loopne mov inc fnstsw sahf sbbl lahf push insl loope jle cwtl cmp and test lret xchg jg mov xor mov mov jae movsb mov pop imul jp inc fild cltd cld addl jl sub push ljmp call xor push pop push mov icebp inc int3 idivb cmp push rcr iret pusha scas jne pop arpl leave push cwtl mov xor in or lret pushl jg sub jl cmpsb xor jg (bad) sbb repnz and in int3 ror lahf idivl in pop jecxz sbbb xor jns pop push and jg sbb test xor adc xchg cmp sbb xchg mov ret les jg insb or jg adc or (bad) push data16 daa mov jg fcoms xchg lods ja shrl push aas and enter mov pop mov jg fldcw adc cli std fwait inc mov pop aas incl lahf sbb ret adc jp scas push loopne pop inc lcall ficomp jge insb iret jp mov xor test lea and xlat les into xor or fsub cmp pop inc stos sub aas xchg jg adcb mov jg jmp orl (bad) jg mov xchg out je test or into inc sbb gs mov inc jb xchg pop mov pop cmp pop sbb dec dec push pushf (bad) mov fmull int inc jmp pusha aad xchg jecxz insb mov lock loop (bad) movsb xor or add inc inc jg jp jmp sti dec sahf and xor mov je outsl lret mov scas mov jg jecxz insl xor dec or jb pop jle decb daa mov pop add xchg cltd icebp orl jg mov jne jg push jle mov in cmp push mov sub jae pop push xor pop and jg std and loopne or call mov cltd sub dec js add sub mov hlt clc push sbb mov loop jg add (bad) (bad) insl xchg jecxz xchg sbb adc fdivp mov aas scas sub icebp dec es jg xlat cmpsl pop sbb cmp mov pop or or pop and mov push mov or gs mov test dec aas addr16 aas negl inc mov mov inc popf dec adc push fildll sbb or mov ret jg push repnz jg or xor cmp jg mov fcomps mov mov lea cmp or adc mov mov or inc pop in movsl lods sahf aas pop shrl fstps adc fnsave mov loope push cltd lds inc lods sub int3 and and mov cltd jg ret jmp out fistpll pop leave jg jbe movsl xor (bad) ja push mov xor jg loope add mov pop loopne push incl jg mov cmp dec push lods fidiv idivl mov cmpl cmpsl inc mov lods dec int mov das dec or lea adc mov pop jne fidivr arpl mov mov xchg jg or out xor fs scas outsl or dec sub xchg jg fwait popa mov cld fs jg or cmpb (bad) icebp push shlb mov jg,pn and jnp jecxz dec jg jp xchg sub call dec loopne cmp jmp sbb hlt fdivrs pop mov xor add sbb leave lea sub sarl (bad) pop aad xchg in fnstcw dec call inc jmp jg pusha int xchg add mov jg mov push sub in xor test lods jg xchg mov inc mov mov mov mov push stos loop jg iret xor inc shll jg je mov jno add mov js sti add sbb sbb (bad) xor rclb xchg inc and pop repz jg je lods jmp pushf cmp adc inc push push mov fbld (bad) dec popa imul jg jge ficompl xchg cmp mov test outsl loop mov cmp mov stos adc popf sub addr16 xor pop cmp cli jo adc lds test cmp in jg add sub jne adc lea jg sahf push pop repnz mov imul mov icebp sti test dec pop inc jne clc repz outsb movsl je (bad) or xor jle jl add jb jg movsl xchg bound scas and push mov and xchg in mov jle cmp sub push dec std aas rol (bad) aam sbb pop jg xchg (bad) mov fwait push pop adc fidivrl andl mov sub inc fsubrl mov and cmp inc jp in push dec cwtl xor jns lret ds loopne notl fsubrs push in mov repz call xchg imul inc rcl das jle inc fstpt shl cltd jg cli out push lock jg pop cmpsb aad ja rorb cmp cmpsl inc push pop cmpb adc jg mov xchg xchg jns popf sbb sub jg (bad) or arpl imul add adc sub (bad) lods jbe xchg adc pcmpgtb out mov nop jle xor mov mov fidivr pop inc mov fwait subb jg js jbe call incl inc daa (bad) jae add popf fdiv mov jg add jmp imul ds les loopne ret das test push jp jg in push push fistpl out in mov inc lods jg jae cmc and (bad) jg (bad) xor dec xor mov xlat lds push movb jg stos ljmp andb pop cs xor or mov ret inc sub mov lds pop push mov xchg jae xor cmp xchg (bad) scas pop dec add mov arpl sbb ljmp lea jge bound fidivr leave mov dec lcall in int3 and jge xor mov out pavgw insb inc mov loope xchg lcall rcrl (bad) dec jmp jg fadd (bad) int xor mov lcall xchg or push je (bad) (bad) xchg push push ret dec scas pop mov fisub xlat mov icebp lret dec scas aas jns repz loope shrl insl and jo js,pn loopne jmp scas outsl in shll into mov inc movsl dec mov pop jo mov jg jge popl pop add or dec adc movsb pusha sbb cmp arpl pop test sbb aad inc mov push lock scas and in test mov fsubrl inc adc jb pop and test mov js stos lahf xchg pushf bound jg jnp rcrw out inc mov push and dec insl mov mov xor jg popf mov popa jne fnsave mov fimul hlt jg insb mov dec mov push and jle cmp imul push js sub mov enter int3 (bad) ja test (bad) sti fdivrl pop insl add jg jns cld and sarb sbb adc xor pop pushl dec jg movsw jnp dec jmp cld mov scas xor cmp pushf xchg add jnp (bad) jb xor mov mov or mov lods stc pop push (bad) mov jb pusha ret not jg pop mov mov inc and lcall xchg or cld cld pop push sub push aas cmp subl or aaa sub out jbe (bad) aam insl xchg cmpsl jg adc or jg iret mov adc jg aam jae test (bad) aas pop insb mov cmpsb xor inc int jne aas scas jle insl sti mov lock mov xchg ss rcll cmp fwait (bad) sahf jg xchg pop std inc adc jg add js inc add jg jp aad jle push jle adc mov iret xchg sbb inc mov nop pop aad mov ret push push dec pop jns cld and add fisttp stc out ss add idivl jb pop cmc shlb je loope jg adc (bad) (bad) scas bound fistpll mov mov lahf xor stos xor and dec imul leave dec mov popa mov mov daa push xchg add mov ja push jg sbb enter jle dec jg xchg xchg mov jmp and mov bound and pop push mov or cmp dec push out loopne jbe jg sub jae jg dec cwtl arpl or lea lcall cmp sbb push pop add sub mov jnp xor sti jg incl jg xchg ss lahf sub push mov scas jg xchg cmp mov dec ds (bad) fistpll xchg scas leave call cmp sahf cltd js dec jle mov (bad) dec push push out xor pop pop add in jae es mov pop jg iret mov add jmp mov aas xlat (bad) xor cli inc add cmp jg push adc pop ret int3 xor clc movq push sahf pop xor jg dec dec hlt insb pop (bad) jbe (bad) dec jg push sub js lahf push (bad) call pusha sbb push outsl push lea or fldenv jmp leave xchg stc jg call xor inc jg adc mov mov inc mov jmp mov xlat movl jmp (bad) mov (bad) hlt inc iret mov add xchg xchg push lcall push jg mov je es cmp mov clc cltd rcrb xor pop aas nop jne enter inc cmp jg in pop addb scas sub pop insl jg loope jmp xor mov std repnz addr16 ror ljmp aas popa xor dec sbb push inc xor inc sahf jl test adc adc ljmp inc xor sub stos sahf test inc out mov (bad) fxch mov outsl and push mov in jg int aas scas sbbl fcomi jo xchg jg xor add dec and movsl fildll adc jg inc mov jl jp jg call mov jg pop pop stos xchg jge les mov clc sbb and lret jp (bad) cmp mov fs add inc out test pusha mov pop and xchg sbb pop movq les jg xchg fnsave jg (bad) pop loope cmp add pop mov loop cltd into mov or (bad) mov mov adc xchg jg mov sbb pop push push add mov xchg scas ficoml inc inc imul outsl jg inc xchg mov into xor pop and mov aas pop cmpsl test jecxz or out stos adc loopne push push mov dec mov push imul aaa and fs (bad) mov inc inc (bad) addr16 sbb inc shl fs jl dec dec xor sti mov xchg jbe push xor or inc mov sarb cmpsl mov xor fcmovbe and and imul jg fimull sub mov jg ret pusha in and (bad) movsb or push add sbb out cli mov mov popa aas adc cld xor lcall adc test mov jno jg xor and loope pop test xor or shll (bad) (bad) cmp sarl insb push cmc rcrb jb add adc pop mov mov jns inc push jg fsubs fwait and add aas sub mov fistpl sub ret loop test add addr16 sbbl pushf xchg not lea push test dec (bad) enter mov mov push pop xor in adc mov nop mov adc pop or push fild sbb (bad) push pop jge loopne pop push dec inc cmp jg jp sbb jg sub xlat sbb test sub sbb jo jg ret cmc pop sub jg aam loop xor inc jg int clc ds scas mov mov cwtl mov loopne popf js jnp adc cltd mov mov mov sbb addr16 pop or ljmp mov push dec lock ljmp mov and jg mov add ret cmpsb dec adc lcall je and jl mov rorl mov cld xor fwait xor lahf sti fidivl repnz mov imul mov pusha mov sub cmpsb jg pop orb ret pop add and les nop inc mov repz cmpsb pop sub pop mov fdivl lea shrb jg fstl jno lods jg fcmovbe mov out inc add fisub aad data16 mov inc jge test mov jg mov adc push jg testb inc mov push test aaa jo jg sub sub and inc popf sahf mov ret cmpl jle xchg into add jg,pn xchg pop cmp ja jp adc sub lahf loop rcr mov cmp cmc in jg pushf imul std cmpl mov sahf pop daa add xchg mov dec push (bad) stos xor (bad) loopne dec aas rorb lret arpl mov int and jg push dec sarb fld1 jg sub mov jnp loop sbb test sbb pop stos mov outsl sbb inc aad sub ds pop inc sbb lods cmp call daa xchg adc jg dec pusha fdivrs and cltd movb dec and mov pop mov out xchg mov mov jmp sahf int3 xchg cmp push mov mov cmc xchg jg in sbb leave jg gs faddl outsl jg (bad) cmpsl mov jg movsl movsb daa cmc mov jg iret mov jb add jg xor mov push out or mov (bad) addr16 xorl push (bad) dec mov arpl lods ljmp ret mov xchg xchg mov in das arpl cwtl inc lock popf jne pusha dec jg out xchg mov adc lret jnp pop addb aam lock adc adcl call into lods bound addr16 xchg xor push rclb and jg insl or in inc jg hlt divb or pop add aam and push inc pop fs ret cmp cmpl sbb aas fsubrl or std mov in or sub jg cmp adc arpl and test (bad) mov lods jg sub (bad) jg inc ret mov jg pop cmp xchg inc dec cmc mov push ja inc mov mov popl jns test stos mov push ja or adc push cmp dec sbb jbe and stos jg hlt sub mov push jg out movsl imul insl stos add in adc jl js enter sbb mov hlt and std cli jg out fdiv in mov or add lods imul mov repnz xor jg pop mov fcmovb sarb fabs mov lock mov cld jg retw cli popa ss jg add add and mov jg popa adc xor enter jg cli mov mov jg fldl jmp mov std sub in inc cmp jg xor data16 or mov adc ret or repz push sub mull mov mov leave andl cmpsl fwait clc test stos or jg jno xchg add aas cwtl or xchg jg lods dec imul ret repnz or lods push outsl out dec icebp stc jg nop pop xlat jne push out xor test arpl test and in in or push jecxz mov dec adc cs jg lahf cld or ja mov stos pop or jae (bad) jg or data16 neg loopne mov es dec mov mov out add jg fstps scas out inc pop mov jb lcall popa fsubrs cmp dec cwtl in inc sbb xchg sti xor pop aam insb mov mov add scas sbb ret cmp lahf sub sbb and fisub jg rcrl mov aaa (bad) mov push mov andl sbb xchg cltd inc xchg data16 sbb xor mov sbb jg mov or out add (bad) fnsave in push outsb or sbb cmc inc or cs jl pop xchg adc fsubs push mov pop jae,pt insb jge (bad) cmp aam push mov int mov pop jo mov sahf pop or jns out pusha push ret fisubr or rorb aaa fbld mov sbb ss std jb divb pushl dec inc xor jg xor ja dec lahf push jg or out add (bad) in je pop cmp dec out in repz std jb inc add jle add mov mov outsl pop (bad) push sbb sti repnz xchg mov popa pop cmp jg jo add jb pushf rclb out or aaa mov pop ljmp je pop sbb mov (bad) lock mov pushf or push jg loop xchg mov stos push int3 jg mov int push mov out add enter dec daa jg and mov mov in outsl sub test fcomps mov pop sahf (bad) dec xchg dec mov push jg std push dec jns xor add adc je sbb aad fwait push inc adc push jg push adc sahf inc divb mov cmovg js rorl push sub push stos mov dec addr16 arpl bsf jle xor jecxz arpl add cmc jg xchg cli push push xchg mov aas mov xchg aaa inc pushf pop les and stos stos cmp lahf inc ss mov iret psubsw sti dec jl shlb sbb ret ljmp pop mov out jl pop in dec jne push mov mov pop xor repz nop push pusha jg jae mov ds ret int cmp mov xchg lea mov pop (bad) add jno adc inc and fstp jg lret fdivr test push arpl test pop test push mov aaa outsb dec cli mov cmp pop idivl inc cltd outsl pop nop jb addb aas into rolb ja jp xchg xchg fadd inc or mov xchg pop ja iret dec cltd mov (bad) test insl push loope mov jg and call clc push pop sti add cmpsb jb cli pop (bad) sub (bad) sbb jg dec js dec and adc fisttpl inc fistpll cmp test jg ficom push enter jg icebp sahf stc jno pop mov bound cmp sub iret je (bad) mov outsl es mov mov cmp jl inc cltd lahf ret add cmp jno jg lods add jg lock inc sbb iret cld xor push movsb js loopne cmp in push (bad) cmp inc adc push rcrb jg fldt or xchg push ja cld mov in lock je and push mov ds jg push pusha dec jg cmp push stos jmp (bad) aas fs out out mov dec int mov push repz mull in or pop aas mov gs out push jg jge daa movsl int3 xchg cmpsb jg jno dec xor fnstcw push test jg int lock mov push not sbb inc das jg loope lds inc push mov and jg dec les xor mov sbb mov imull les jg xchg pop push sahf add dec jg jae mov xor mov mov popa adc fnstcw lds loop sti jg lods push add mov mov sub ja mov cmpsb (bad) xor outsb jmp ficom dec lret rorb jle out loopne dec dec push in and or mov mov inc push test add aad fcompl push cmpsb cmp xchg jno lret cmc mov fdivrl hlt xchg test imul call and sub stos adc fwait lock push dec add xor lock push fdivrl ror and xchg adc jg rclb lcall mov jp (bad) mov dec fmuls arpl inc jg jnp pop sub std fwait jg cmp mov add cmpsb aas cltd mov add push fst mov rorl test pop nop clc jg cmc cmp jg xchg jmp repz lods dec jg lea adc push mov mov cltd jnp out std fprem jg test pusha mov cld adc inc jns jg out fimull mov push jg or mov adc inc xor (bad) mov jae xchg cmp imul (bad) cmpsb jb (bad) cmp sbb push bound movsb push jbe mov test aas scas enter dec stc addl push cltd push add xorl fisubl xor lret xchg xchg adc mull push fsubs xchg pop and das mov inc es sub jg,pt ret xchg movsl ficomp xor pop pop fcoml stc repz enter jg ret ss (bad) (bad) icebp jg jge pop movsl in mov jp dec sbb jg mov scas insb jg sbb adc push dec jno sub mov call fnstcw cmpsb fwait inc cmp jg lahf arpl (bad) lret inc jg stos push xchg popf stos iret mov adc arpl mov je pop sbb inc jg jge xchg lahf jae jg,pn mov fisttp inc pop jg notl pusha cmp test mov movl inc in pop dec out sahf (bad) xchg mulb lahf imul outsl push pop push in pop xor das inc out mov mov loope outsl les es cmpsl pop xchg or jg pusha (bad) dec mov jmp jg mov mov aas sub mov dec pop scas mov and outsl imul mov or ret or mov (bad) fistpll jle lret xor sahf cmpsb test sub das xor adc bnd (bad) loopne shrb addr16 dec rcrl jno,pn sbb pop inc lock mov jg ja and inc leave jg cwtl pop and adc les arpl movsl jl xor pop pop insb mov mov sti dec inc lret cmp add jge (bad) loopne push cltd lea sub jecxz mov mov jg (bad) (bad) test cli stc mov and xor cmp dec aad (bad) and stos sbb inc cltd xchg hlt or lods dec inc (bad) jg push jmp lcall jle sbb arpl jg loop out je scas jo repnz or cmpsl addr16 pusha adc jp fsts dec imul xor pop inc push movsl dec mov rcrb cld psubq jg push lds jg nop lcall add sbb enter ficoml (bad) (bad) daa and jg jae das mov idivl stc sti cld xchg pop cmpb hlt push push cwtl push sarb inc sub mov out stos pusha sub fistpl movsl add in add jp xchg or scas xchg mov jns mov mov cltd dec into mov (bad) mov test inc in mov in daa scas jg jbe outsb repz jno jg out lds xor test jg xchg pop xor sti adc inc rclb insl or mov lods xchg xchg xchg loop dec add daa inc int mov mov jb xchg cmova or push jno cmp in mov dec out mov pop and in jg sub nop insb subl pop mov jg adc dec jg xor fstl lods add cs dec sbb mov incl repz loop stc enter xorl popa jg jge push mov xlat pop mov outsl fwait xor xchg mov dec pop push jg adc mov pop jnp mov adc test loop mov cmp push or addr16 stos lods inc js test and incb push inc sbb jp pop in jg jae pop call std mov sbb (bad) inc jp xor lahf (bad) aaa cld jne ja addr16 iret jg sub imul enter jge xlat jg push das lock aas js sahf push lods dec sub jg stos not (bad) adc mov cli inc jl xchg cmp jg push cmc ret je sbb and push add out pop inc jmp push je sub pop scas sti dec add icebp dec jmp inc mov add repz test xchg or mov add sahf pop or xchg mov stc in pop insb int imul (bad) mov outsl cmp or cmpl mulb cmp (bad) push shll jnp (bad) pop les add inc hlt jg data16 adc lods xor xor push sbbl loopne jg add dec aad lea lcall movb lret sub dec cmp and pop imulb jo pop jg iret dec xor xchg and jg bnd fidivl push push mov enter (bad) scas adc div inc nop dec fdivrp scas sbb cld push mov jg imul jg adc sub mov xor xchg sub pop adc aad or ret adc jg mov aas inc test cs (bad) mov sbb aaa (bad) lret xchg lods daa mov (bad) test out mov jg js sub repz pop sahf cld arpl bound pmaxsw mov cmp lea dec js mov dec call loope or inc adc ds jmp leave mov clc pop jne fisttpl mov (bad) imul mov nop movsb fwait jg fsubrs (bad) sbb mov jg icebp lcall inc mov jle mov pop mov pop dec jg jge xor loope mov cmc mov dec lret jno jg sub mov rcl lret jmp divl std sahf xor lods cs repnz pop je sub aas jne pop add popf mov and arpl imul sbb shll sbb cmc (bad) scas add and or mov mov adc cmpsb pop and jl jg imul sub sub push stos push jg das xchg lcall cwtl adc inc (bad) je movsl mov out scas jg jne mov jg inc insl cmpsb leave dec in jo mov mov push sarl pop push incb hlt jg inc sub and sbb mov or and cmp aas sbb pop push or dec push sti xchg lods ja outsl or inc ret gs adc andl movsb sub push jg or ficomp lret jg cmpsl fistl jg pop outsl pop cmp dec jg (bad) adc sub mov scas add popf cs or nop and sbb mov fist sub outsb inc pop repz jg and or or add (bad) daa sub push jae push cmpsl jecxz jg out push push gs mov mov aam sbb and and add mov dec dec cld (bad) inc pushf pop jg divb adc mov int3 inc ja cmp and and xorb les adc outsb sbb mov or negl dec (bad) push aam adc movsl jg (bad) repnz inc jns ret mov fsubl cltd arpl ret cmp dec leave add int into jge or jecxz jp aaa sub adc adc cmp mov pop jge pushf and cmp call jg or aam push jo mov cmp int3 jg jnp jp or vmovdqa push dec les loopne jg add mov inc push add jmp push jmp lret pop loope jg and mov jg scas (bad) mov jg ds leave pop lods into jg std mov inc push mov hlt shrb out push pop jg cmpsl out arpl in repz jmp into lods icebp mov out inc jl sub pop mov (bad) lock fmuls push out cs js insb jp inc iret xor and loop jg cmp ss jae mov push jg xchg or subl cmpsl mov fstpl xor xlat jns jnp mov jg adc loope out xchg push push sub add mov inc int push xchg out and jg and aaa push stc jae jg test push in mov stos jg inc sub add or add xor aas test push imul jg les xchg jl jg sub mov mov push mov pop notl xchg jg dec call mov (bad) mov jno popf aam inc mov or jo jnp roll pusha inc push insl and scas bnd sar pop pop mov movsb push cmp pop xchg dec inc adc jnp es cmp jg arpl mov jg ja xchg test sub jg paddq in sti aas jge inc pop push (bad) and outsb jg ljmp jg (bad) sub adc sub adc dec jns inc xchg test inc jg push in out pop jmp jg (bad) bound jg push sub fcomip call sub js jg imul pop pusha dec add sbb insb (bad) aas into data16 pop cmp lcall lea (bad) mov jg pushf jp daa fs xor mov inc scas push imul mov and dec imull adc iret xchg mov pop jg insl add xor shrb mov call jg rorb aad cmpsl mov fbstp cmp nop jg (bad) cmp arpl xchg out add dec stos mov iret jg add lahf push mov mov jne pushf aad inc mov xor xchg inc loopne or jg test or jae push js jns jnp bnd push sahf das mov push cmp pop sbb xchg jg xor je jl lcall enter sar xchg jg in and xchg jle cli add (bad) adc inc jo outsb pushf ljmp and jg enter shrl mov fnstenv ret pop mov int jg pop dec stos jmp mov dec jg and mov imul popf cmp int pop jg dec insb inc pop out fdivrs jp nop hlt lods push push mov jge out outsl setne mov push mov jg and jns test jnp sub shll (bad) jne test call jle jb in pop or scas lcall xor jg into mov adc test xchg popa jg addr16 movsb mov rorb aaa lock fdivrs dec xchg jp adc pop pop daa mov sub mov dec lods pop xlat jmp inc mov pop ret stos inc sbb adc add inc jg mov pop pop jg cmpsl mov xchg sub mov mov mov clc dec lcall insb jns push pop xchg movsl repz xchg test jg push sbb sbb mov push inc jg (bad) (bad) sbb add mov ret cltd jle jg sbb push pop or sti jg mov insb mov mov outsb adc pop sub jg repnz mov dec jbe inc (bad) sbb jg loop cmp fdivr les jp mulb jae mov js cmpsb mov adc cmc push jg xchg push jmp in dec stos jg pop pop push mov pushf cmc push cltd push dec xchg mov jl pop in lds mull mov movzwl pop popf or jg lahf dec pop push int3 add pop mov fsubrl jg pop adc mov lahf out push test adc and loop in imul inc iret push aas inc jg xor sbb repz (bad) cmovns sti xor or jg cli pop dec mulb sbb loopne ljmp fstpt mov or fcoms dec mov jne lret jg jns stc xchg in repz inc sub fidivr cltd cmpsl fstl addr16 and sub lock fnstsw test mov jg movsb movsl and (bad) aad notl xlat pop enter dec test inc or out inc daa sbb add xchg and aaa lret sbb frstor pop jg mov (bad) push cmpb jnp and push add sbb aas cltd xchg mov jge mov out jg sbb (bad) repnz sahf add push add mov xor push sahf stos dec jg aaa jo popfw in xor (bad) dec adc dec mov jg cld pop icebp decb in adc add mov pop insl and mov pop inc jne jge mov jg sbb push rcrb (bad) leave mov adcl dec lret mov test sti (bad) ss popf inc addr16 je pop mov pushf pop dec ret cmp mov jg xor add jg insb or in nop clc lods (bad) mov jbe jg push xlat mov pop mov cmp mov jnp cmpsb jmp fs lldt mov mov dec sbb jecxz imul lcall xchg jg cwtl push (bad) jb pop sbb pop and sub xor xchg jg adc xchg repnz jg jecxz out out mov shrl push lahf inc das jbe mov jg addl notl test dec push push lods arpl bswap bound jno dec jg das shlb mov mov xchg or mov add dec imul mov movq inc cmp push pop push add cmpsb sub dec mov mov xchg ljmp cwtl or inc jg ret ss mov or sbb in adc stc into outsl iret or mov xor cmp lea mov jg loopne loop andb push aad jb xlat sahf mov insl roll push or sbb fadd fcmovb outsl cld mov mov lock jb mov ror sbb mov push mov add in xor jne scas jg jno push push std push stos jg adc decb inc cli mov sub jbe dec loopne dec mov popa adc inc jg mov pop aam sbb and pop hlt inc and xor bound aas ret pushf into jae dec int3 mov and pushw jne insl mov xchg inc pop popa mov jg fsubrs cmp loop jg lret mov pop lahf shl nop fildll ds pop sbb push xchg stos jb dec jno dec lcall jg mov sbb mov push xchg mov outsb outsl jg dec adc push pop clc stos jg add xor mov jg (bad) aam dec mov mov sub inc sub fcomi xchg dec repnz scas mov mov dec or adc xor cmp sbb xchg mov sub push jbe xor mov inc xchg push mov jns inc cmp mov lods mov ret ljmp xor andl mov dec inc mov jno push mov test mov add mov dec mov inc inc pop stos xchg jg xchg in adc out add pop aad push (bad) jo jg mov mov test shrl mov jmp sbb xchg mov adc push bound stc fidivr (bad) jg xor jns femms dec testl outsl test mov addr16 mov inc (bad) lock fcmovnbe test mov xor adc pop ds jmp insb xchg stos std adc int add mov sub test or scas fiadd loop insb inc jbe jg mov cmp sub sbb mov jo shrl clc xor sbb pop and shrb lods cli mov rolb sbb sub call mov adc pop test (bad) push js or or stos mov outsl iret out sar jg push or and mov ljmp das es test jns push clc rol jmp ds inc jg mov cs cmc dec push cmc jg insl data16 enter add idivl dec sbb jle (bad) cld nop int3 call (bad) (bad) mov loopne dec xchg sbb jg sbb adc out sub jg cmpsb mov jle sub mov xchg ds mov add push pop mov mov cs out lret mov sbb adc mov repz or xchg sarl data16 rcll jg icebp pop adc and jg push xor push inc add mov jg cmp sbb pop inc aas add dec xchg pushf xor sub cltd jno ss call mov stc jg aam and jg pop (bad) xchg sahf sbb jnp adc lret hlt xlat mov mov mov mov incb repz push sbb xlat sub call fs and nop push out push scas mov xchg fbld jae or add jno lods enter fstpt pop jg mov dec fistpll or ret in bound jg fsubrp pop mov jg bnd pop mov outsb enter cltd cmp rcrb aad and adc call inc int3 sahf insb jecxz jg and or testl push dec iret ja insl ret cmp jmp mov xor sub inc fadd xor jg adc jg xor xchg dec xor lds jg mov or inc mov (bad) xchg push mov hlt add popa dec mov or push jge mov xor mov mov sarl lods add jno dec jg (bad) cmp das fs fisttp dec popa int test sbb adc cmpb xchg es test push imulb fbld jg hlt mov pushf mov repz sbb jbe inc bound add jg enter (bad) mov iret outsl or pop or fistp push inc movq mov and cmc int jg cwtl pop addr16 dec jg insb dec daa jge rcrl jg inc insl adc fcoms push inc lods push jg pop clc or mov js inc ds add jne mov and dec push inc ja pop jg inc xor sti in iret lock push dec and pop imul pop (bad) popf inc push test jg inc lahf xchg or mov fcoml sbb mov xor aas (bad) (bad) sub dec xor fimull push jg pop push sub lret mov jb add aad imul cltd jg mov bound scas jb lahf (bad) fstpt or ja icebp lods xor mov mov popa lods clc jae loopne pop jg inc xchg in mov adc fisubr cmpsb jg push imul (bad) jg sbb mov movsb jg pop pop mov mov dec cmova xchg adc aas sub and or jg hlt je mov loope jg xchg inc lea pushl add inc jne cwtl or pop lods in lahf jg dec and ret je mov sbb push and add stc jg maxps mov es jg lret rorb ret (bad) out dec mov xchg jg mov lods push jno test rcl mov shlb repz lret jmp stc xchg inc inc xchg jno inc add jmp out mov jg fisttpl (bad) jmp mov outsb mov pop mov aas (bad) aam pop xchg xchg inc aaa push jg xor mov inc mov fmuls dec sbb cmpsb jg outsl je push popf mov mov and jmp inc jecxz negl push loopne sarl inc xchg cwtl mov push jns or mov sbb sbb dec scas loopne dec outsl divb jg test lret loope mov mov adc insl jg mov pop jg ret cltd or inc jg or cmpl fwait sub jg test ja xchg and rdpmc in ds flds ljmp popa sti repnz rcrb aad in sahf aas outsl xor sub mov or mov nop jae dec push cmp ret jle mov push pusha mov fwait jle repnz pop cltd jg xchg bound jg ss dec jg into test adc in daa out scas ret dec ret movsb sti xchg mov gs aaa cmpsl sarl add popf mov cld out les mov mov jno inc sbb inc stos dec aas ljmp dec pop and out (bad) imul sbb cwtl jg rcll in jg pop outsl jno adc lcall popa scas jg or pop sub out pop mov cmp xchg outsb loop lret je mov or popf sbb jg add (bad) jg and mov and ds (bad) dec (bad) das mov scas test dec pop add or cld or sbb cli mov (bad) mull pop pop fimull loope push out jp mov and push loop mov fwait adc fidivr push aaa xor jg pop call sti out sbb pop add add push jg int mov aas lret mov mov aas pop or imul sub outsb jns pop dec cltd (bad) jg (bad) in movsb movb fdiv iret xchg adc andl lret call mov outsl test scas sub pop sub ds pop fwait xor cs mov andb lcall mov xchg dec outsl sbb mov jg pushl push xchg cwtl sarl sbb jg xchg jle pop jno sub lds scas cmpsb jg pop repnz jg mov jb cmp in dec pop aaa add punpcklbw pop cmp push fdivs adc jne xchg js push mov mov (bad) dec cmpsb pop jae inc jg (bad) mov nop dec xlat adc into push fs scas jb enter jg pop lret mov push cmpsl jg fldcw jle inc xchg lea packsswb rol xor sbb pop xchg adc jg jbe jl add jg jecxz cli mov lds jle mov movsl and jmp ljmp or (bad) lock mov mov in dec in pusha jmp ret in out stos sti sub (bad) jg mulb jg in mov pop jg jns (bad) adc fwait or mov out pop add jp jo pop add mov adc mov mov dec jg cltd js pop sbb jns mov in mov pop mov mov jge xor es sarl dec cmp mov sbb out ret pop stos stc pop add aas mov inc out jg inc insb inc adc lcall subl mov adc hlt mov mov push sbb in mov fwait jg push mov pop xlat pop pop (bad) mov mov pop ds xor push xchg and in xlat cmc fmull push dec jg jmp popf imul js pop (bad) not jge xor es jno lahf hlt xchg mov inc int shl push push mov sbb mov push hlt testl sub lahf stos pop dec pop xchg mull leave jg jnp and dec lahf xchg scas push jae cmpsl mov push pop inc mov movsb mov cs (bad) (bad) jg fimul xchg and xchg mov fcomps outsb or sbb and jo dec lock jg mov mov ljmp (bad) or jg xchg aas adc pop aas stos sub cmpsb ret in add inc pop jbe push leave loop cmp pop push in jnp aam addr16 jmp push nop jg and nop ficoml jne mov push cmp imul pop (bad) mov push mov (bad) fistpll jl clc add int ret stos push cmp push push jg push rclb jle and jg pop dec or inc jmp sahf mov int3 mov mov xchg or jg enter jmp push jbe outsl insl jb mov xor test cs dec sub sub adc add sti cmc sahf sbbl rorb or hlt push movsl dec sbb cmp pop pop mov mov xchg pop jo sub jg test or stc jg xchg in jg sub mov repnz or mov aad sti xchg cmp mov out pop xchg adc cmp push test sbb cmp pop test loopne cli popa dec push jg push pop fnsetpm(287 push mov outsl xchg pop xchg adc inc inc dec sub imul loop clc popa out xchg jg (bad) sar cmpsb das (bad) and ljmp jg xchg sti test mov lea imul inc jg ret adc jp inc (bad) jg jno mov jg testb jg jp hlt cmp imull xor jbe add aaa out push jg xor mov mov outsl js push aas jb dec xor pushl popa cmp lods pop inc lods push mov (bad) in lea sub pushf xchg add fistpll jo int adc das push mov dec jno inc jg cmp sbb stc inc sub push mov mov jl push test lea inc out dec jnp aas cld pop push dec (bad) clc or pop jno jge jp mov rolb repnz pop mov fbstp dec imul popa and push mov dec ficompl xor and std (bad) loop xor inc addr16 mov (bad) xor xor test iret jl pop and aad test sti sbb mov jg idivl dec jg or inc lock jg imul and dec pop aad fucomi xchg jg adc add out jge push cmpsb inc testl dec lahf jp ja hlt sqrtps dec inc inc aaa std sub jg jmp or andb cmp push jge xlat subb sti mov xchg (bad) pop cltd push xchg or xchg xchg test lods mov jg pushf push mov (bad) hlt jg fstpl jg jl out mov mov fwait pop aad cmc dec pop fdivr (bad) push bound jle pop sarl sub mov jg push fcom es and lea push jns fdivr lret dec in mov rorl dec jge testl cs xchg add idivl sbb mov outsl cmp push int3 movsb jg popf ret pop movsl imul loop pop pop pop nop repz xor movsb aaa jp ss lea jb inc sbb xchg jg iret push sub pop aas jge dec cmpsl aaa sub dec xchg push jae push jg add mov adc jo mov aam sub pop out stos jg lds mov mov or or stc cmpsb cltd fsubr push sub aas dec add or dec cld jb aad enter or leave rcrl sub ret addr16 pop sub sti js jo sahf mov jecxz iret fdivrl xor pop (bad) jg mov lret xor xorb pusha popf mov lods loop js mov mov xor in and pushf jge push jg rcrl gs (bad) jno fs jg in (bad) sub bnd leave je imul jno jns xchg out add dec jecxz rolb ret mov push push dec cmp jg adc arpl jnp js mov push jg pop (bad) xor imul jne lahf dec popf pop or outsl mov add pop jne mov mov fcoml mov jg push inc mov bound jg rorb popf mov cwtl shrl enter mov scas cmpsl movsb lret jmp mov aas cmp and rolb jg (bad) push cmp insb jae jg xor push daa outsb aad push int fs cs bnd pop and sbb xchg jg pop adc sub cld sub aas lds sti into jg mov dec cmpl or add xchg in mov popa fisttp mov jg rolb jg jmp adc inc pop sub xor lret adc pop decl imul sub test dec xchg inc fnstcw dec dec cmp ror bound mov cld pop cmc jnp nop mov (bad) jnp gs mov adc push das stos inc mov push sbb and addr16 out mov pop test jg dec push or sub incl xchg pop cmp push jb jg (bad) bound scas cmp test jg mov jg (bad) mov jecxz lds jb test sarl cmpsb mov mov rcrb inc ficompl (bad) aas jle ret dec lods dec cmp inc jmp jne aas push lret dec cmp sbbb cmp push mov push or fldenv adc mov cmp jg dec test cmp lods loopne mov mov inc out lea dec fistl xchg ret imul imul dec pusha jne inc pop aas scas sub push or lahf (bad) insl mov pop mov push arpl mov add dec xchg nop lods cmp aas xlat xor aam insl jnp mov cli adc jg stos out mov push ds cmpsl lahf (bad) sbb out xlat mov into mov sbb xchg and out jmp fdivrs (bad) sub cmpsb ret loopne mov test mov push pop lret sub mov jg sbb lcall ljmp int mov jg repz mov jg pop xchg sahf outsl and jg cmp mov cmpsb xor (bad) sbb je inc or dec lea sti rcrl movsl mov mov dec out jg scas insl aaa ljmp sti push das inc rolb aad je push iret addr16 pop mov js addr16 adc sub cmp push pusha lods jg test repz adcl ret pop mov cmp int xchg imul sub jg pop cli lahf stos dec sti adc inc xchg jg imul xor stc es and scas lea xor icebp sti mov sbb or xor lds add cmp rolb pop pop xchg mov daa loop jg aam mov sub jmp in fbstp push fistp mov out adc jl or fs mov push gs outsb cmp lcall and or jmp adc call lock xor mov mov cmpsl hlt dec cli repz jg inc push icebp out inc leave out arpl mov push or iret aad lret pop popf test outsb jno jg mov in mov push jg pop push mov cli js push push shlb lds test adc lock movsb jg (bad) pushf sahf fnstsw lods dec push and mov pop jg scas xor mov xchg lds jg clc (bad) sbb xor aaa dec loope jg,pt push mov insl jg mull (bad) jg ret subl xor inc jge jg xor mov jne clc jg mov adc out jo scas dec push popf sbb xor mov mov jp mov or mov bound inc jg push fdivr pop jg or sub jns pop negl data16 pushf cmp pop inc divb ss lock mov xchg test inc pop aaa adc mov add aaa insl outsl mov rcrb jmp cmp add jge push roll sbb xor repz data16 fildll jmp mov mov stc dec psrad stos push mov dec jns,pn sub cmp lcall addr16 pop mov adc inc mov jg test add mov (bad) push sub jg cmp adc rol xor jg leave jbe nop inc push js pushf jg pushf add lds adc mov and cmc iret pop bnd jge cltd dec push jg mov inc xchg jg xchg stos xchg fnstenvs jg js mov or xchg dec aad clc lahf push push dec das mov jg mov roll cmp push psllw pop xor mov popa in jg insb sub fs icebp cmpsl add mov mov ret sbb scas insb pop push aas push pop lret mov jg sti lcall arpl or adc cmp adc xor in mov dec jg insl rcll test cs ds nop and loop mov xchg aas jg xchg inc xor test test dec push js dec sbb stc int sub pusha push mov lahf rclb into push scas jg fldt sti loope dec mov ret (bad) push data16 sti add je push lea xorb xchg fwait cmc jg adc and jg or xchg jae fs imul dec hlt xor test bound push pop mov push fidivrl out dec or or cmp dec push (bad) jle rorl adc sbb jg pop pop out xor call sti addl loope mov jns push inc test cmc cmp das jg stos add ror test adc mov lds in add mov mov cmpsb inc sub xchg mov cltd jg jno data16 ja dec jg int pusha sub repnz jo dec pop enter jne shll ficoml addr16 clc or in add xchg push loope pop xchg inc stc xor stos ret mov adc fistpl pop addr16 in test and mov jo ljmp inc stc cmpsb inc outsb jg test mov cwtl cmp (bad) sub call fistpll popf mov js inc jg daa lahf ffreep sub adc mov lock pop repz add mov pop pop sbb adc fdivl aas pop int3 imul inc fwait test lcall enter fistl mov or lock push mov and mov add xchg ja gs testl dec das push pop icebp fnstcw incb pop mov insb mov popa out xor shlb stos (bad) enter add test mov lret dec imul jbe sub (bad) push das or pushf repz into test xchg sarb (bad) outsl sahf mov nop test jg bswap xor scas sub jg push sbb mov cmpsl into mov xchg imul mov mov imul xchg sbb mov clc and jb fildll ret lret jg outsb imul jg cmp enter aad add and fldcw (bad) out hlt pushf mov ret iret lret mov sbb es xor sub pop sahf addr16 adc pop mov (bad) lock cwtl mov mov inc cmp mov lea push ret add mov jbe imul daa mov ja push or add mov nop shrb hlt mov iret xor inc ffreep in jg cmp xchg repnz jg lock rcll (bad) dec lds inc mov outsb notb out jg dec stos cld push imul stc mov mov xchg (bad) push ds (bad) cs inc or inc mov mov xor xlat sbb xor cmpl jbe js mov jg or or inc sub jg push adc in dec cmp arpl xchg loopne jg (bad) (bad) adc movsb out push jg mov sub popa inc mov cmp xchg fidivrl ret cwtl jg rolb jmp dec in jg xor cmpsb pop jno mov test jp or xchg cmpsb lret pop in test das mov sub push stos (bad) rcr lcall jo lea inc imul das jno cld pop stc mov fwait sti les and cmp push dec sub rcrl jb fiadd cmpsl insl mov out jg or jg cmc cmp xor mov mov (bad) cmp shrb push aas aaa out mov inc xor aas dec shll mov and mov das dec (bad) sarl aad pushf sub or rcrb jmp cmp fisttpl push rcrl ds pushf es pop or popa icebp jg mov sbb cld call adc mov adc adc dec and pop addr16 es mov das jg inc out insl repnz jg dec push into cmp adc arpl outsl cmp jb cmpsb mov popf xor ljmp xchg pop jg fldl pop popf sbb fistp and add (bad) cld shld mov cmp call lock mov mov incb call in inc daa (bad) ljmp jnp push inc xchg jne jns jg rcll imulb icebp xchg pop (bad) mov idiv hlt inc push (bad) movlps push cltd out fcomps pushf fnstsw std les jg stos mov push lods sahf lods lahf rorb push jb push clc gs pushf and imul lods xchg loope mov mov push leavew je sub jg mov inc sbb jno or fadds std int cmc daa jl mov dec les shrl clc mov in jg inc mov loop inc xor js int sti dec (bad) jmp sti and ror jg pop add adc aam loopne mov pop stos add pop lahf out loope addr16 test pop cmpsl add or dec loopne call outsb fsts daa mov xchg dec jl loope jo call or mov jg or aam inc mov addr16 push adc sarb jg lods addr16 cmp and jg mov or inc or int3 xchg jle stos idiv dec ficomp or jg rcll xchg and aaa dec dec jle cld pop xchg (bad) jl mov xor outsb jg scas loope jmp cmp bound xchg mov inc scas pop push jg dec dec push jl inc rol jg mov inc or aas pop popf out push xchg mov in bnd jecxz scas jge lret jae push xchg adc aaa xor rclb jg sbb push out lea xchg xor stc and jg cmpsl sub lret jg xor sub movsl shr cmc dec aas xchg push fwait js cmp dec add jg mov ficoml sub test jg into xchg sbb dec jg sbb mov push nop mov mov pop pop xor push xor push jg lds arpl daa sbb pop jmp xchg movsl mov std xchg testl cwtl addb loope mov xor dec push mov jg xchg arpl push js xorb jae scas jg pusha cmp arpl outsl aas xchg test cmp arpl jg mov out enter and xlat push add jb data16 pop pop imul or lret add aaa sarl sub pop into jno pop rclb imul mov xor outsl mov jg rcll xchg sbb pushl mov adc cltd or push add jno sarb xchg in ds loop and leave inc pop rorb lret mov insl loope mov sbb jg movsb mov ret push (bad) enter pop fnop jmp mov outsb pop icebp sub aam sub popf mov or jae sbb (bad) test out repnz cmpsl jg les inc mov dec outsl cltd jae push insb dec jg jne lcall add mov mov es in inc dec cmp scas xchg jae outsl jg and push vmovdqa xchg mov cmp xor jg add out fwait and jg and mov push lahf dec cmpsb xor push ret jg in cmp (bad) loope loopne push inc cwtl loope xor adc jg in mov (bad) mov jg or popf in inc add jg jne adc adc (bad) lret gs iret test push jg mov out pop pushf mov push arpl dec in mov mov (bad) (bad) dec dec and (bad) push xchg orl push lea leave pop sub (bad) sahf aam adc test and lret out sbb into imulb xor mov ja int add and sub or cs sbb sub addl mov inc push data16 xchg jns cwtl mov inc mov cmp add pop pop adc xchg dec mov jns inc lea addr16 rclb mov aas loop sahf mov jg or push addr16 out outsb (bad) dec lock cwtl jg or mov jg lret cs fnop imul (bad) sub pop jg push or sbb rcrl fldl2t mov arpl repz divl scas jl es jg xor sub sbb jae ret mov mov mov sbb jge (bad) jne cwtl dec loope add push stos pop adc mov sub xchg adc pop jbe pop cmp sti jg test popa jp loope int3 and fs mov jl cs shrl fidivrl pop jno jg (bad) insb mov xacquire imul jge adc dec mov pop cwtl sbb (bad) inc jle mov lods pop and out lock jg add xchg jg in or cld mov insb sub dec inc (bad) arpl pop stos fstpl cmpsl sub mov sbb leave jno jmp mov (bad) xlat arpl push or cmp mov insl insb jbe sub sbb push stos ficomp out std mov call les pop inc push mov jno or daa insb je js sbb shll lcall push enter fsubs cli push addr16 xchg cmpsb jmp mov fistl inc insl dec and jge jg or jg addr16 mov and push adc mov lds jbe adc push js cmpsl rolb insl dec cmpl dec mov clc jg xchg lcall sbb (bad) insl cld lahf jl jg jmp ss pop mov (bad) arpl jg clc lods xor int3 sbb xor ficomp sti cli push dec xlat sbb imul or arpl cmp push add hlt pop jno test pop aas pusha pop cmc mov mov sub xchg ljmp aam add jns jg and test into aas pop orl outsl add sbb pop cmp sub inc mov jg clc arpl jg xchg mov test (bad) mov xor jg mov loope adc cmp sarl mov sub jno xchg jg inc push (bad) (bad) nop dec cmp or pop or lahf (bad) lock jg xor jg or cmp sti or mov add fstpt sbb clc (bad) mov cmp fistpll repnz push lahf jg mov jno mov notl je mov movsl stos (bad) out add es dec jp push inc (bad) repnz test fist cmp add and js jg dec loopne gs test push pop mov dec mov cli jne das loopne outsb jg bound mov add push mov cltd imul cmp scas sub outsb ret cmp lock adc mov fdivrs (bad) push mov (bad) shlb pop xchg mov mov adcl jg xchg push pop in mov (bad) arpl (bad) pop ret cmp mov xchg jmp test mov (bad) or sbb dec ja sarb test dec das xchg in ret iret dec insb or ds adc decb pop popf jg ljmp jg xor data16 pop jg and repz fmul adc (bad) sub or or xchg push int3 fdiv aam cmp jg rclb xchg jnp aas inc into pop jne add loopne mov xchg mov mov mov jb mov jo idivb fldenv jg mov and jg push in (bad) imul aaa dec pop mov jns mov pop push outsl add xchg pop or icebp dec push enter imul pop mov into mov jg test pop jg add lahf mov js jl outsl aam cmpsl xor and push leave dec test ja cmpl inc imul arpl jo sbb jg cmpsb or mov mov and pop add mov mov jbe addr16 or sub insl sub mov sti or adc mov push (bad) pop mov inc test test xor pop inc jb loope jg outsl jle in pop or push push inc cmp fistl and jne idivb jb xchg adcl sub mov outsl test or jns pop dec xchg and out xchg outsb repz ja ret cs jg outsl ljmp add sbb sub sti fcmovbe or pop jmp jbe add push ja pop mov es scas xchg aas and orb dec cli mov leave jg push sahf mov insb js popa cmp in xchg aad mov sarl ret xor mov sti sbb mov je int3 inc cmp hlt adcb ret inc jb jg cld in jbe fstpt mov outsb int add cmp (bad) (bad) mov or cmp mov jg pop ret pop insb mov xchg adc mov jg xor cmp fidivrl aad jg mov movsl xorl pop mov jg and outsl adc inc pop mov cmpsl xchg es jecxz jg popl mov imul dec rcrb aaa insb jg and and cmpsl ret ja arpl dec fbstp pop jle jg jge or jg inc push jl sbb cmp jg mov insl adc xchg pop fwait pop pop imul icebp sub mov fs stc push jg repz out movb in imul inc adc addr16 sub icebp popf arpl jg adc mov (bad) cmp pop add sarb icebp push in mov cwtl add jg clc shrl call and or push or sbb mov xchg in jg lret out rclb sub jne mov icebp adc lds enter xchg xchg std inc jg loopne movsl pop lods notb pop jg insl sbb (bad) and popa jnp jbe xchg sbb ret lods pop and dec jg cmp ljmp jmp je mov adc mov repz mov mov (bad) lods inc out cs lret cwtl arpl sub enter push jg aad (bad) push bound jg repnz aas (bad) rorl sti and push jne add movsl ja ret stc adc mov pop sub inc jp idivb outsl arpl (bad) idivl xor dec pop cmpsb jl out mov push adc mov aas addr16 mov inc lea jno lods mov xlat xchg repnz lcall test sub or mov outsb push arpl fwait mov cmc mov inc lret lret pop ret pop stos popa loopne jg mov cltd mov sbb inc cmova jg or pop and sub cs push imul scas mov js jg (bad) notb push adc add or mov out fadds mov fildll call push (bad) mov pop jg mov push add mov icebp pop cmpsl dec mov insb and or push add inc xchg xor jg mov repnz pop push mov sbb ror inc jmp movsl mov fwait rorb or imul loopne int3 adc fistp cmp pop repnz (bad) pop pushf rcrb or cltd mov sbb jg into add sbb pop fwait icebp jbe add (bad) jg mov arpl js dec cwtl enter ds inc sbb sti call loop cwtl (bad) arpl (bad) cmc pushf jbe jle jo dec push dec (bad) repnz imulb rclb mov inc (bad) jg nop flds or jg cmp adc lret icebp insb and (bad) mov cmc lea mov xchg pop fwait xor scas cli jo or fistpl mov dec adc outsb jbe inc (bad) push adcb sti les jnp popf and andl ljmp jg (bad) mov imul dec lcall (bad) mov adc lock mov inc inc or push mov outsb push sbbb sbb iret sub push dec stos in pop (bad) stc lds bound pop pop or jg scas or push sub pop jg mov inc ljmp leave cli jne test mov sahf (bad) outsl pop mov or add xlat insl nop inc mov mov cld inc loopne es popa shl xchg xlat arpl cmpsb scas push insl dec dec jg mov sub mov or pop dec xchg fnop cmp xlat icebp inc into xchg jg jb fcoms mulb out movsl push mov mov aad mov jg mov push lea jmp icebp repnz out xor jo aas pop cld adc push cmp jg cmp pop jle into dec mov or mov ja xor push jp inc js mov sti add pop adcl jg mov mov jg outsl sarl js or fidivl push cmc cmp jae outsl lock jg shr jp roll outsl pop dec cmp scas adc inc cmpsb mov or pop jg jns movl push xor inc jg imul jg lret loopne icebp ja jne or clc dec cmovnp push enter pop ljmp lahf addr16 stos or leave fmul sbb mov mov push insl pushf xor sbb iret pop xor loopne rcll mov jp mov dec xor inc sarb dec adc faddl inc (bad) fcomi xor xor inc push fldenv sbb cli jg jbe xchg out mov mov icebp sbb cs jbe push scas (bad) cwtl gs lods dec mov jno and lret and scas aas dec lahf sbb dec enter dec jg adc xchg jg and loop cmp jmp add test pop inc bound mov or inc int jle dec repnz mov and and mov lds mov loop dec jg jo lret enter and in cmp jg (bad) cmp adc sarl inc pop mov fwait jg inc push xor and mov insb cld jg stos test test push sbb enter enter loope shrb jbe mov pop mov xor scas (bad) es mov jle jnp fistp (bad) gs sub repnz or test stc rol in dec xlat sarb dec xchg stos das sub mov mov lret repnz xchg enter jg adc lds scas mov mov cmp out xor mov jmp jg sbb (bad) cmovae xchg sti mov mov mov sub jb mov jbe cmpsb sbb (bad) loope idiv lods repz movsb and gs mov fisttpl jg test out or jb div push jecxz inc ret inc jg push scas pop pop popa sub inc pop xchg jg pop lods adc call cmp inc mov xlat bound in je sub lds test addr16 mov sbb fmull fistpll push jae and fs push addr16 out scas sbb sub jg rcrb icebp mov test and jg (bad) cmp pop and pop push inc inc out movsbl pop aaa out scas aas push sub jb outsb movsb inc inc sub push arpl ja jmp shrb or fisubrl lods (bad) ja int sbb mov inc cmc jle sub fisttpll cmpsl outsl and jg xchg gs sub scas or aas inc mov dec push js mov sbb sbb out loope ret gs in sarl and (bad) aaa jg bound fdivrl dec lods jg aam xchg mov test jg scas mov dec aas cltd mov sub pop imul add inc mov (bad) or ret repz xor jae pop mov jg ja push negb cmp sbb scas jg in xchg push adc or sti lret push sbb jb stc ret jg addl push daa jbe std lods dec out push lret mov sti aaa dec add dec inc pop fcmovnb jbe xlat jg sub mov and jg mov in push (bad) js jg imul jg xor lds xchg and leave xor fcoms iret adc mov lcall and mov jno out and xor ja and or cltd inc lds mov pop addr16 mulb loope dec push sbb xchg lret mov lcall jb add out lods cmc or cmp cmpb test pusha jg jecxz push xchg mov push std aas sbb jg fneni(8087 mov xlat xor mov cwtl adc aas stos mul hlt cmovg je jb xchg test mov cmp jg fild pop (bad) jbe add faddl into jp outsl mov jo push jnp jne sbb xchg pop or aas push insb inc mov mov aas adc out mov (bad) sbbl pop jle xchg inc jnp dec and mov mov jg push mov aam and adc cmpb jecxz inc leave fcmovbe aas jmp mov cltd jg pop mov pop test jg mov popf ds out outsb jg sub dec daa inc (bad) jne nop adc and cmp pop mov adc jb sub mov sbb mov bnd lds jno pop jg push xor imul jle jg and es or adc call jg cmp (bad) push fwait adc ja outsl addr16 xor push jmp jg push fs ret je jg sub pop and fsubl adc dec jg mov pusha sbb leave cmpsl movsl stos std test jg jl ds inc repnz jo data16 add add mov dec stos outsb mov xchg jg rol cs bound pop xchg mov cmp fidivl insb push cltd rclb loop jg movb ret mov aam adc outsl insl fs xor iret jb popf jg push pusha cld pop repnz lock jo pop subb sbb cmp mov daa or aas aas subl (bad) xchg fdivrs and lcall adc adc push jg aaa jl (bad) insb cmpsl and pop adc xor outsl roll ja je aam pop and (bad) mov push or cld mov mov jmp jp and sbb jbe aad call mov lods js les lret (bad) xchg jg pop stc jl mov test gs cmpl xor mov sbb into fdivrs fwait add leave xor in jns aas movl addr16 cmp call xchg xchg mov mov test outsl add jg push int sub (bad) or enter sti and and shlb jg xor push dec stos adc push mov fildll or dec xchg dec les mov xor xchg mov mov push in dec jg fstps lea add ljmp (bad) negb jmp mov sub outsl fwait pop fdivrl ss (bad) out push cmp xor clc jo,pt movsb jg xchg fimull pop xchg sub or sub mov inc cmp mov jmp lock push jg test mov jg lods inc scas stos inc mov test sti bound or hlt icebp mov pop jno xchg adc nop es jae stos sahf imul cmc (bad) fdivrl inc movsl or jg cwtl pop pop sub jne mov mov iret dec pop jg out (bad) jmp or cmpl insl aad jg ja int3 pop in push jg xlat out inc dec push push jg ljmp push ficom adc inc aas push sbb push fdivrs jg sbb imul fisubl pop out push mov movsb negb lret cwtl ret push in xchg test aas arpl mov out jbe or loop jg and shl ss int fwait das jg cmc loopne sub mov add jg in int cmp jg sub fidivr es pop int mov dec lret loop pop jo push jg insl jmp clc push fdivrs push sub jg in mov sub jecxz mov or loopne jg pop xor mov pop jmp cmpsb push fldl insl mov push (bad) xchg out rol jno cld jg xchg mov mov movb int cld xchg jo enter daa xorl mov pop insb push loopne jecxz dec pop mov pusha jg jno clc inc and cmp adc movsl push inc pop cmp jno in test sarl insl inc sub jg xchg sub jg push ret mov js cmp pop clc (bad) mov mov ds cmpsl popf negl repnz jg xchg mov xchg cmp pop scas mov arpl jg xor repnz mov jb dec les fs jbe mov aas cwtl mov push dec aas int3 jmp or std outsb es dec fsubp cmp inc addr16 mov or lret test loope sahf jp push mov (bad) lods or cli (bad) imul pop xorl jmp push jg rclb jg insb pop aam cmp movsl popf sti cld inc pop jbe pop cwtl xchg inc mov xor xchg mov into das mov inc mov leave cmp clc mov jg sub jae outsb pop jg sarl jmp call jg inc pop push popa xor sti adc mov sbb adc jecxz xchg inc jg or fnstsw inc sub subl dec negl int jg fwait test inc repnz leave jg nop les clc mov adc pop aaa sub dec sahf add dec pop mov outsl fs lahf in dec dec push cmpsl std loope cmp test fidiv or jg mov or mov xor xor xchg inc lret fildll out push and and ljmp shrl xchg lahf cwtl jnp jo fidivr mov sahf outsl inc adc lahf xchg jp and jecxz ja hlt out repz aas xchg fidiv inc push shrl sbb mov ja jmp arpl and pop sub mov test jg clc mov ret std ret rcrl aad xor add push movsb inc sub lcall mov or pop leave sbb jg push xchg lcall jle and test sub test or mov xchg arpl or fsubp cld jne test das dec jp (bad) repz out pushf dec loope xor mov jg jbe inc in fsts sub cltd dec loope aas cld insb pop xchg fsubl dec (bad) xor add dec fidivr dec mov mov jg andb ds xchg jg dec popf (bad) jnp cmc mov lret jg inc mov mov loope mov mov movsb icebp mov cli lea jbe adcl cmp push rcrl nop fbstp std fs pop or cmp lret adc inc and jg mov pop mov add jg (bad) xor jbe adc jg push mov std rcll cmpl pop mov add add add imul mov jecxz out cs jg sti xchg lods jb lds mov jns pop sub fmul xor test pop mov cld push cmp pop (bad) sub (bad) dec jl fstpl jo xor aas pop push jg and (bad) pop (bad) mov (bad) fdivrs jg xchg cld sahf push data16 sbb xorps lds or jg dec lret movsb pop in fdivrp sti push sub addl mov inc aas sarb (bad) and inc adc pop aaa movsb lcall inc lock jmp fs xchg loope or popa cmpb es add int3 popf jecxz out sti xchg ss mov insb or sarb push adc xlat sbb jg sub sub push cmc sub cmp stc xchg mov jg xlat pop inc push adc stos pop mov xchg and jno lahf (bad) in dec dec mov jg cmp idivb (bad) test mov arpl outsl mov and dec inc push push stos mov mov mov shrb aad jg movb ss out js dec js dec xchg inc mov jg pop mov jg mov stc cmp jg fabs jns and sarb adc jno cli sbb dec jns and jp or pop mov outsb lahf mov pop xchg in aas dec mov insb jmp pop cmp lds ss movsl mov or outsl or mov adc push fistl fnstsw adc sub aam mov loop cmpsb dec sub sarb mov out jg mov mov jno mov fdivs jb fimull loope mov hlt outsb mov (bad) pop lret push jmp mov mov jg arpl test mov pop imul ss lock xor loope pop in push adc pop mov jle jg push dec xchg fistpll imul xor jno lock jg sbb leave jg pop jmp sbb lret mov mov add add jg jnp aam jecxz les fwait (bad) mov (bad) and ret icebp js (bad) test xchg and aaa mov adc xlat xor inc adc push daa fdivrs pusha ret or inc mov push nop jg sub push int3 pop ljmp jg cmp rolb arpl mov xchg in inc push movsl mov push scas or test push fwait and call inc add popa fld mov and vminss ss (bad) pushf popa jecxz mov sub mov into pop fisubrl xor pop stc push mov and out lods mov jg mov rcrl sbb ss and sbb mov sti das icebp dec xchg jg sub jp mov out and mov jp das or lds inc mov inc jb,pt dec movsl jg bound cmp sbb notl loope inc fwait jno rcl sbb ds lcall pop jg cmpb or mov sarb jg add mov sub lret mov pop inc pop mov in fs lahf movsl imul inc and sbb ret fidivrl push pushf lcall aas ds cmc cli mov ljmp sub scas add xor pusha lods mov xchg jg jmp pop jg add js in insb lods xlat mov fstl push sub fistpll cmp pop mov push lods gs cmpsl sub mov lds pushf pop add adc jg je popf sbb iret jg xorl ja cmp and das mov sti sub mov icebp aaa repnz ss push imul lret sarl jae jb mov daa push pop out clc inc push jmp push adc int scas into fisttpll jg insl das nop scas xor sub and pop jg sti fcomps ss mov jg xor (bad) jg popa and jg jmp mov mov sub jg lcall mov dec fildll mov fsts inc lret cmpsb jg aad in imul ficomp out cmp jnp mov shr lahf or arpl cs lods xor mov sub jg lods ja mov stos cmp cli adc jae jge cmp mov xchg popf fiadd add mov jle pop fadds scas jg jmp lret or repz or sbb dec test pushf lahf adc mov mov mov pop mov in ja xchg push push or lret insb inc xchg or in pop xchg inc lcall lea jg arpl dec sbb xor lret mov les je mov push rorl mov push cmpsl and aas cs dec and mov negl lods mov mov mov movsb jg sub mov cmp mov pop and lods push (bad) sub sbb jno pop mov mov or mov cltd sub insb push je adc xor jb xchg (bad) imulb cmpsb dec fwait (bad) sti out subl lcall mov jg insb cwtl dec fild out insl test pop inc push dec jg inc cmpsb add cmp mov dec mov mov jge shll pop xor xchg xchg cmp jg scas inc fcomi or mov leave enter jmp pop jne aam mov into mov sbb fidivr pop push pop sti jbe stc jg loopne fisttpl cltd mov addr16 cmpl jo xchg addr16 pop jnp test jg xor and inc mov jno adc xchg mov push jge rcrb xor popf lock jae and pusha push fisttp add cmp push cmp and xchg repz pop dec xchg lods mov add mov outsb jg sub divl sti and jg shlb pop dec clc adc sarb push mov inc xchg sbb add inc mov ss mov jg dec jge (bad) lahf or enter xor jg jbe or das or jg cmp xchg out jg sbb mov fstps dec das dec stc mov les jae jle dec cld xchg stos ja jg cmpsb ficom lcall popa in inc sbb in (bad) in das mov inc push xchg lret cmp add mov or mov decb mov cmc xor jg mov jg jp nop fdivrs lods jg jae rorl xchg ret into and jg and add pop dec jg ljmp imul sarl pushf jl cltd es jg mov jmp lcall pop push add cmp fldl inc shrb mov loopne jne push jg ret mov jg xlat xor mov mov mov jg fldl cmp pop cli push dec dec jg rorb fistpll imul pusha or rolb and aad jp pop pusha idiv xor inc mov mov xchg in mov int3 xchg cmp (bad) int xchg and cmc (bad) mov inc or cld sub lock ret dec xor jae (bad) (bad) jg in adc jg fidiv fs xor daa cmpsb imul inc jo jmp sub push (bad) sbb ret fptan mov sbb mov or or hlt jle imul roll xor out repnz aad cmp mov jg inc mov cmpsb dec test pop sbb outsb mov push mov push jg test dec jno lret inc and aas mov incb or jo mov fsubrl dec mov mov mov negl aaa pop inc sahf call aad and out js out fisttpl jg movsb ret js and add push jg mov movsb mov out test and aas jg shlb aaa aas iret ss out cmpsb loopne inc popa outsb jg cmc mov das jg rcrl adc (bad) hlt std ja inc xchg aas repz cli andl cmp sub pop push out repz xor push mov jg mov push (bad) xor icebp int mov scas dec leave pop push fs jg and jg arpl inc jg sbb push mov push mov aas loopne inc pop fmul cmp xor push sbb sarl push xchg out sub lods mov dec dec mov sti mov add ljmp mov jg icebp (bad) fs (bad) pop mov xor sub pop xor (bad) (bad) cmove out jg out ret ss jg cmp aam (bad) pusha repz xor add dec add (bad) push jmp sbb insb dec out inc (bad) hlt push jae dec ffree aaa jg stos sub jp idiv mov sbb mov or adc data16 mov dec js pop sub sarb lea jl pusha sub xor mov jne push or outsl mov sbb jle pop (bad) je stos jg test js jae enter mov jl shrb fimul je std inc call aaa jg insb int3 cwtl mov inc lock leave arpl push sub (bad) ss jo iret mov call sti jg inc pop inc pop push (bad) stos jg cltd push cs sub add jg push or fnstcw lahf sub cltd cmpl aas jecxz test inc push sub xchg push cmp or jg in xor xchg ficomp movsb std sarl jne stc jg sub mov (bad) insb pop pop aas xchg loopne sti mov in mov mov and sar aaa popa inc jae and icebp fisubr roll leave aam dec inc and fidivrl and xchg in dec push fsubrl jg sbb notb sbb push lcall push enter outsl lahf roll mov sar sub fisttp cmc jne cmp mov data16 daa scas push jno nop fidiv in pusha imul leave jg xchg jnp mov lret sub pop cs out ficom cmp jmp jle mov scas dec js divb dec fistpll aas sbbb add dec xchg mov and popl sub pop dec dec sbb test dec int jg (bad) push add jg xchg sub mov subl pop les dec pop aas test cmpl mov insb jg fstpl jg call jl js int3 scas jg fldenv je (bad) aas jae xlat adc les mov sbb test repnz addr16 xchg dec mov sbb jg jp xor nop dec (bad) repz and jg daa sub jne aas ret or dec jl and mov jg sti dec icebp lret scas mov arpl (bad) je mov fisttp push jg addr16 (bad) loopne sti cmp pop pop jg call or loope adc dec mov pop jg fwait (bad) ss pop or adc mov frstor ds mov loope aas mov inc rclb (bad) jno jb adc or adc imul xlat xchg mov push xchg xchg sub idivl or jl xchg sub push xchg sarl push stos fcomi enter nop lcall fs mov in jno cmpb fwait das aad leave mov out xchg jle add cmp in ret mov popa pop jg movl (bad) je jg xorb jg cld mov mov fs pop xor idivb mov into push jg xorl xor cli dec imul cmp adc adc int3 jg inc dec jmp pusha rolb pop jg xor cmpl xchg add sub mov mov mov sub or sub and or lea inc or pusha jg jb aas pop jl add lds das orl jno add dec mov jg cmp icebp cmc imul xlat outsb imul mov es fisub call sti mov xchg cmp jg ds dec jg call push fidivrl lret mov add xor jg jo mov daa je jg cmc test in cld in sbb data16 jg in outsl movsl push cli mov nop das ret mov sti call cmpsl push jg inc jmp mov mov mov pop mov data16 cmpb xor mov (bad) adc int sbb movsb jp jno ret aas sub xchg dec cmp scas lret seta pop xchg sub push jg clc xor jg movsb lock adc repz cmp pop imul in in ds mov xor mov mov sahf push test jmp out into add jb stos jg xchg sbb setle stos mov xchg jae fs jg push les out icebp mov lcall and outsb pop mov push and addr16 push inc cld jne fisub scas adc es cmp inc cmp out in sbb add or xchg cmpsb cmp mov push mov fs nop mov adc inc jp (bad) movsl outsb mov mov mov jo test cmc inc lcall cmp xchg (bad) adc hlt xor cmpsl xchg cmp jo add hlt and mov jg cli inc leave sbb jp mov mov mov and es mov push popa inc rclb jle in sub out sbb or sub ret data16 iret mov (bad) pop arpl es (bad) pop ret (bad) aam js popa hlt pop dec pushf sub ljmp sti push pop repnz jg fcmovnb dec adc jae in cld dec leave or or (bad) mov in fwait fs in jmp mov jg push or pop dec jg pop cli cmpsl lahf ja pop jg icebp (bad) shrb and xchg (bad) out adc sbb jbe push jl inc mov lock push pushf stc loopne pop mov jg (bad) nop loope (bad) idivl insl xchg (bad) shrb imulb addr16 test imul insl mov xchg aam mov fidivr push xlat ret loope cmp jg lea aam sahf jg jae xchg adc xchg jg daa pop cmp test mov or icebp push aam inc mov sbb mov pop loop add cvtps2pd lds scas inc inc pushf or sub dec test ret cmc cmp dec xor push xorb dec insb cmp stc xchg inc jmp pop ja sbb lods xor sahf out dec pop cmpsl stc and inc nop adc ds inc mov mov imul jmp (bad) scas das mov test push jg lret push jge pop xor inc push sbb and icebp mov jg inc insb cld mov and fwait lods ja test nop idivl sbb frstor stos push iret es enter mov fwait and mov mov dec ret add mov inc push shlb test int mov jg and xchg cmpsl mov test popf jo adc push xor divl std jg out repnz mov jg dec jb mov enter insl pop hlt aas test mov data16 jns push adc jg js insl lods pusha xor andl sbb jecxz std rcrl or jg daa dec jne push jg and sbb gs lret rcrl cmp fwait mov cmp lcall fdivrl inc lds jle dec jmp or adc (bad) mov movsl out sbb mov push push js icebp ljmp dec gs jle pop adc xor jne xlat negl scas in (bad) dec jg dec sbb out in jg rclb and jmp cmp xor pop outsb xor jg ror dec sbb lea das xor jg push pop mov push imul and push push cmp jg hlt pop mov aas addr16 and gs sbb mov sub or inc repz jg mov sbb popa adc stc rol popf and cmp pop scas (bad) jl xor sbb dec sarl jg jecxz xor cmp dec jge mov xchg push add jmp repnz js pop test lds jnp cmc jl xchg data16 inc mov add out jbe fistpl in enter sbb cmp pop jg jle mov jg ds lahf lods jnp add int3 (bad) fcmovne pop mov adc cli test insl jle ja mov scas stos nop mov lods rorl sarb adcl scas xor push sbb out jle jg jo and lret mov ds mov lds test inc js xchg shrl push fwait dec pop mov adc sbb sbb push adc adc enter mov xor and ror xor dec jbe int3 jae jnp jmp or adc push cmpsb push jl jg mov mov fdivrs jg pop hlt gs lods cld jg es pop pop dec sbb jg xchg jns iret cmc daa popa lcall loope push sub push out jg push lret pop call pop cmp aaa mov dec fstpt xor jg mov int3 sbb fidivrl popa idivl js pop xchg xchg roll jb cld aad and mov imul xchg mov jg fidiv sarb push dec or push loope mov or lret shll movsb inc gs jg sub pushf cmp jp rep icebp imul fidivrl inc inc dec out xlat pop jns (bad) cmpl mov pusha outsl dec or jg mov out sarl insl push sahf and aas xchg and ljmp dec movsb jl mov sbb push lret or or stc jg sub sbb sub fwait inc dec hlt iret lea testl inc inc ss add jg pop mov testl aam xchg sbb aas cwtl jnp jb int3 pop dec add jg mov enter jle adc push push lods inc in jg addl cltd xchg arpl sbb mov mov and aas lret sahf pusha insl call mov (bad) adc sbb shll sub cmpsb jae aaa jg sub lahf adc fisubr ljmp loop inc (bad) jo push mov jae adc aas adc icebp repnz inc lcall jecxz jg pop mov or inc hlt (bad) popf xchg das pusha and pop enter (bad) lea or fsubr (bad) cmpsb arpl bound mov jecxz add in inc push xor push fisttpl arpl mov pushf jg pusha mov (bad) ficompl test sub pop inc sbb mov lods inc movsl andl outsb insl add ret in in inc bound push dec (bad) jbe out daa jg mov sbb jg sub gs pop outsb mov inc mov inc outsl jg xor push subl orb jg jl pop pop sti adc jg lret or jp xchg dec mov sub jnp insl mov pop xchg inc or mov into cs loope mov xor push jae cltd cmc mov mov rorl dec jo fs dec stos je ret scas aas outsb inc add ss arpl popa call dec jg sti repz (bad) out cltd aaa mov add and sbb lahf jg jae inc pop cmp xchg aad ljmp push out adc stos in popf mov lret xchg outsb roll js pushf jno in add dec cmp jg sbb pop push sub jle push lds pop pop xchg sarb mov out xor or cmc mov mov lret and scas push dec xor out jg add repnz mov mov or imul pop out mov ret loopne (bad) push xchg test cmp dec (bad) fidivr jbe sarl push sbb sbb jg iret xchg or scas sarb and xchg xor mov or push imul sahf into les arpl jg or gs sbb cmp sub add sar jmp push sub pop jg cmc loope and mov lds adc lahf loope mov into fbstp pushf stos outsb or in aam pop aaa jg fdivs and inc push stc pop mov fildl (bad) js pop (bad) shrl pop push fiadd mov ljmp hlt out outsl jae lcall bound jg fsubp hlt in jae sub xchg pop xor pusha cmpb mov sbb and cld and jg lds (bad) mov jg jo cmp xor mov clc pop adc dec push jecxz push and pop dec clc and adc in mov les or xchg std or out jg scas ljmp push cwtl mov xchg jg testl aaa rcr push dec in cmp call and and jg pop push or rorb push cs pop inc xchg int leave and push dec test bound xchg out jg jbe js std jl jg adc cmc imul mov push (bad) mov lahf mov icebp xchg fwait jg pop or cld mov aas xchg test outsl addr16 outsl xchg push test les mov cltd loope cwtl imul call test stos push test enter ljmp in sub add jns ret mov pop cli repnz add (bad) mov inc jne mov sbb jg bound cmpsl jg (bad) outsb dec push mov cmp decb xchg sbb push push test inc push xor out mov pop je and cltd jg into xchg cmp adc jmp push stos jmp adc jg xchg push xchg mov mov ds scas (bad) movsb dec inc mov enter cmp stos das fs pop test fwait sbb fiadd xor addr16 adc dec jmp sahf (bad) iret jecxz das jg push jnp xor jl jg pop in jbe or cmp mov in lcall or xor movsb (bad) icebp shrl sub jnp jg xchg dec stc ret jg cs cmp movsb in sbb sbb pop (bad) pop xor push push leave jg cld stos cmp js mov inc dec pop and and push jbe push (bad) std ds ds dec push jg jge inc or loope jg arpl idivl repnz mov cmpsl (bad) cmp fmull fisubr stc or jecxz dec inc daa je outsl (bad) push jg movsl insl xchg adc bound jg xor jg or sbb cmp xor add mov (bad) stc inc xchg sbb jg and mov js popf out popf clc mov dec nop or dec mov jle pop sbb out cwtl xchg lods fldl jns jg mov sub roll add fisubl push sbb jg test jge fsubs inc subl or (bad) mov in imul and imul jp (bad) jbe push xchg push insl int stos pop or (bad) lods andb je fwait mov inc outsl shr lock pop jg sbb je mov and stos clc shrl daa dec xor fwait or dec pop inc rcll popf (bad) addr16 jle lcall outsl dec loop ja sti sub jg stc lock jg push outsl mov jg push scas push fisttpl sarl push adc jg xchg pop mov xor cmp fs inc int3 loope adc fisub inc dec push sub cmp add jl push lods add push inc and and jg daa push jbe mov sahf dec sbb inc fildl cmp std (bad) mov dec mov cmpsl pop xor mov pop int3 movsl mov mov or fadd cmp mov push aaa (bad) jl jo (bad) jg xchg mov movsl and in sub ret jg or dec add cmp mov xor stos mov mov movsb jg data16 mov cmp add or pop cmp pop jg in stos scas jle sbb stc movsl and pop (bad) xor mov mov jmp add xlat dec js scas jg fidivr (bad) cld out pop and lock xor lock jg data16 into js (bad) repnz ret or jg fnstsw adc xchg ds out divl js dec adc mov rcll cmc mov pusha sbb lea clc sbb loope xchg jg jmp mov mov inc mov fwait pop xchg xchg add add (bad) jg test mov or insl dec jg push jnp xchg jmp cmpsb jg (bad) cmp imul jg inc pop cmpl call fwait jno xchg jg xor loopne mov lea sbb jno push cmp jb jmp mov dec mov cmpl data16 cmp adc cwtl pop jg lods xchg xor jg les jle adc jg loope in xlat push jl xchg mov (bad) movsl mov pop pushf mov xor jg cld js rorb sbb sti pop adc adc in subb push sbb cmp int3 mov xchg dec and in jg test outsl mov hlt xchg jg (bad) ja push (bad) add jg xor push out or aas stc mov lods jns in das dec loopne jg xchg mov inc out mov ds and and pop sbb mov mov jne mov inc stos push sti in xchg lock cli ljmp pop mov cmp pop jns sub jg inc mov mov xor jg cmp xchg and cmp js sbb xchg data16 mov jge mov gs dec jg aam test jecxz std sub sub arpl and mov sarb jg (bad) out jae mov push test dec sub (bad) jg mov (bad) adc jle mov jb mov lret pop fiadd pop (bad) push hlt jg push jle dec mov push jg push push sbb push out add cwtl add jae xor or jno sbb imul push jnp mov add inc mov bound loope repnz cmpb imul sbb cs inc xor pop mov push sbb cli mov inc stos jg fist fwait mov sbb imul jg push mov pop or jg cmp movsb mov add test fdivl lea adc ljmp ds dec jg push jle adcl pop xlat loope mov out jg cmp dec adc mov lret or arpl movl hlt cld movsb das jg and add mov roll and jle arpl jg jb rclb in adc aas lahf jbe pop loop popa dec orl xchg (bad) mov cmp sub repnz das push mov inc mov pop or mov dec out jg mov fucom mov mov sbb fcmovb and jg pop push dec cmp xchg push ret (bad) movsl sub js mov sbb dec fstpt or cmpsb cmp sbb sub inc lds rolb dec inc pushf and in loop rorb cmpsb push pop pusha dec jg mov cmc call lret sub loopne jne in jg pop mov stc pusha (bad) jg mov inc addl ss jmp dec sti add cmp jle push sbb jo ja mov xor xor jg aas icebp (bad) cli sub xor lods ficoml lahf sahf mov in xor pop jg pop jo xor lret aaa and add jg sub pusha fs pusha inc jg jmp fdivrs mov jg inc push adc mov push adc aam dec cmp mov mov mov pop dec sub xchg jg (bad) xchg dec aas cmc mov rorl and xchg push lods lcall mov mov jmp pop sub xor jnp mov adc mov scas jae nop xchg pop add popf jns add movsl inc inc mov inc sarl jl in mov xlat jbe test sti sub push call hlt (bad) icebp jo and sub pop bound inc ja sti aaa test pop outsl jmp jg fwait sub push ret lock sbb jg inc testl stc subb mov add imul movsl cmpsl cmc xchg jg outsb xlat cmp jne jmp mov dec inc cwtl je mov pop push add push sbb xchg cli or enter inc jl imul cmpsb imul add and cmp roll jg inc cwtl rcrb xor mov fdivl imul addl or pop popa addr16 (bad) aad mov pop xchg mov repnz aaa jbe jg add jl and jg push sbb sbb aam mov pop iret int sti arpl ds inc lret pop push sub jg inc push int3 dec dec hlt xor lret lods jp (bad) lea cmp mov out xchg pop fcomps inc adc nop aas push pop sbb mov psrld adc jg mov mov (bad) fcmovnbe adc xor call pop (bad) jge inc dec mov aas cld mov jmp dec rcl cmp adc mov cs sub orl daa dec mov push loope mov sub (bad) shll and mov cmp push mov ficompl nop lods gs cwtl lea lret cmp out inc xchg pop icebp sbb dec mov jae movsb jg (bad) push aas rclb iret cmpsb pop into mov push adc jg in mov jg mov int3 dec jg cmpsb daa std adc in and adc inc fidivrl stos pop push jmp xchg mov push int and mov pop push pop inc je rcrl dec or stos xchg jg sub jg in dec sbb mov mov fcmove dec push in mov adc ljmp fidivrl mov insl daa xchg jno pop aam lret sahf (bad) icebp test ret xor xlat push mov jns lret insl leave mov jg lea (bad) mov xor sub dec dec es push pop dec lea mov push popf sub dec xchg fdivrl pop in test cmpl ds cmp aas mov adc or cmp pop scas jae jg sub jg or mov aas fsubl xchg dec mov (bad) outsb or mov mov aad outsl mov movsb pop mov in jg outsb pop sbb fdivs inc xorl sbb jnp jg clc popf popa movsb push jno mov loope or jg jae cmpsb mov lret out mov andl in dec cltd add mov movsb movb or jg dec nop sahf scas cmp push push (bad) jg repz mov jg or dec jg xor add mov loopne jg cmp std push mul (bad) mov ja fmull pop popf in aad mov repz adc (bad) in lahf jl inc sets jg dec add fidivrl dec stos sbb aam aas pop pop jmp inc les jg adc push dec lea popf fs loop cmc sbb loopne jg loopne popa xor sbb sub popf insl jbe lahf popf dec or inc mov cltd pop inc dec out (bad) push cmc call push lret add js add jg gs fsubrp loope jecxz fcomp stc lock jnp push xchg dec enter in out or divps jmp mov jg iret imul mov stos inc das push mov add lods ljmp jg movsl xchg (bad) cltd sarl mov xchg mov mov pop fst out inc xor lods dec addl js push jg mov sbb jg or inc nop popf cmp mov push or sti shr mov (bad) shr mov and pop cmp jg incb mov xchg xor mov xor push aas mov jnp and push inc pusha lods jg lds cmpsb pop ffree mov sub jg pop inc test sti push arpl aas jns rcll and jne mov nop inc rcrb ja xchg popl jg adc cmp jg (bad) cmp and ret repz mov or roll inc jg fs lea xor (bad) ds scas fldl imul and jg test fdivr mov mov xchg clc xor xchg pop in iret jg flds xchg jl es (bad) and lods adc sahf push pop dec test jg xchg xor (bad) stos dec mov lods add and mov xchg (bad) repnz inc cli xchg adc fistpl dec repz ror lods pop xor mov aam xchg push xchg insl loop jg out pop mov jg and xor (bad) aas mov inc lock lret clc sub jmp lahf sbb cmp fst and loop sub dec jns mov lock inc daa rolb mov cli add mov movsb (bad) adc bound lret jg mov out stos inc cmp mov in lods jl (bad) jg ja iret sub inc or mov (bad) mov fiadd push clc jg insb and push aas shrb lods les outsl (bad) jecxz jp add pop fmuls fistpll mov out imul nop pop cmpsl inc mov movsl pop sti mov decb inc mov mov outsb mull adcl dec sbb fs cld jmp jno bound push mov cmp out stos xor mov mov sbb nop xor bound push push xchg (bad) loopne mov push inc out nop enter std push popf or lock ret loope xchg into jg fsubs std jg mov ret pop mov sub pop fistp andl ljmp mov movsl dec push int3 mov push xchg pop fucom rcll cmpsl add mov jecxz inc (bad) idivb cmp in (bad) pop mov and dec jg hlt inc enter bound pop fmuls xor repz dec scas out pop jg mov lea cltd sti aam cmp ss add jp hlt pop sbb loop mov movsl mov xchg xchg jbe outsl mov mov sbb inc idivl mov mov jg inc xor mov andl fsubrs cltd sub into lds pop jg cli cwtl fwait ret int fcomi add jg testl loopne jg xchg push ficoml arpl cld leave dec lret inc jmp (bad) jbe and fbld mov jmp cmc js xchg xchg pop jp inc jle scas lahf sbb jg pop add mov (bad) std jae xchg (bad) cmpsl jg fs mov add cmp rcrb inc loopne rcrl add mov push jg xor cmp je add (bad) ja aas push addr16 insl aaa enter lahf mov xchg xchg fcompl cs mov jno pop or pop sti xchg insb jmp fild mov (bad) ret cs hlt jg clc in adc mov jg outsb call sbb out xor mov insb lock fcoml or mov stos mov ja insl mov push inc les jecxz mov inc sub mov out dec test jg jl xor mov int3 fsubrs inc xor je aas sbb xchg inc out lret loope mov data16 ljmp jae adc icebp mov pusha bound xchg mov aad mov mov mov test (bad) outsl (bad) icebp mov es cli push std inc out outsl stos jg js mov test (bad) fstl out mov jo jns imul adc fmuls cmpsl aad or clc sahf jecxz scas jg pop ljmp jl and mov outsl jo sarb (bad) push mov hlt add xchg jg lea mov adc dec mov jg pusha shll mov xchg mov xchg xor dec fmul xchg sub sbb mov mov gs push pop mov lods push sbb icebp sub (bad) mov xchg push dec cmp mov std dec push mov sarb outsl loop mov call adc ret aas out ficompl rorb dec arpl ljmp xchg xchg daa test jg repz (bad) fcoms (bad) inc mov leave mov sbb mov outsl sub or jg,pt addr16 iret mov inc out push jmp sbb pop add pop js cmc rorl push or jg push push aaa mov arpl mov jg mov jnp add jg lea mov mov test ljmp ror in mov fild xchg stc cli push pop push ret inc jg lea adc rcrb call movsl jg dec lds push popf cmp cld out aas std nop sarb (bad) dec pop icebp cmp pop (bad) jg dec mov jg adc loope sbb mov sbb pop imul mov jg stc ficompl pop mov xor cli fldcw dec dec push loop adc xchg adc fidivr xchg lahf pop movsb fiaddl adc pop daa mov addr16 jg or jp push sub inc test inc cmp leave arpl (bad) rcrb cltd dec test mov fstps pop pop add cld jg and xor dec push mov sbb and dec jg es inc jle,pn lret out mov (bad) jg and push std cmp jg dec rclb push icebp pop addr16 loopne mov and xchg repz sub jg ljmp cltd jns and adc cvttps2pi (bad) mov dec outsl jmp adc sub (bad) js jg mov jmp jg add movsb adc cmp mov cmp inc jg and ds mov addr16 pop mov jg dec add add add push jg mov push and leave mov xor xchg pop loop imul push push dec jl lods aam pop mov and pop lea sub xor (bad) pop inc std icebp jg lea imul jg cmp jnp inc jg out les jg or sbb enter in stos jbe rorl jl cmp dec mov pop sbb outsl stos dec jle sub scas pop (bad) dec sahf sub adc jg popf add jg xchg mov outsl jl cmp adc add inc jg add int3 xchg xchg hlt mov leave sti xor in push mov mov mov and mov negl mov dec jg (bad) lock dec aam aaa jg test mov push cmpb mov in fcoms mov ds dec fldl adcb fnstenv lahf jp fsubs jg sub ret push sbb mov loopne sub mov ss push call les (bad) jg xor sbb data16 sbb lock inc mov ret iret movsl cwtl rcrb add pop jg rep push test pop mov lea pop scas jg inc hlt popf pop movsb jmp incb rolb mov outsl scas jns xor mov xchg addr16 imul incb icebp test push addr16 adc pop int3 jg inc jns ret sub inc jg cli fwait cltd mull jg (bad) mov movsb jg addl aas mov iret xchg dec pop jl mov mov or in ret clc cmc dec pop jp scas mov icebp outsl pushf ret cld xchg imul popf fmuls loope aas pushf sbb inc mov jg jle test (bad) mov in shl aaa sub mov stc arpl lods pop cmpsl jg pop add xor pop jb xlat mov outsl lock andl ljmp push inc jmp sti imul push outsl stos ljmp xor push lret dec mov push inc das imul sub cld unpckhps mov mov (bad) jnp jle outsb or mov jg,pt leave inc sub punpckhwd jo adc and aam mov mull sub ret push push push pop and in in gs jg adc lcall stos outsl push movsl add scas sbb pop push bswap mov cmp jl or pop or loop setnp rcll les sbb (bad) mov inc adcl adc mov sub leave cld pop sbb or call mov mov dec sbb shrl test xor jg jecxz lcall jp outsl cmc sbbl jge jecxz add jg (bad) pusha clc jb out ret lea shlb nop cwtl jne mov xorb push jecxz pop bswap (bad) cmp lcall add mov inc jg dec or les dec mov sbb push imul mov sahf mov xchg push mov mov mov inc sbb pop sub (bad) and pop push les test jp aas mov mov inc out mov pop xchg (bad) inc fnstcw lods jno mov xor adc jg dec popa sub nop aad inc mov int3 or sbb jg,pt jle push xor jnp add push cwtl pop in out aas lret imull and jg mov out fstl xchg insb fld and gs mov in jle rorl loope loop out aaa pop push cmpsb push js stos fdivr xchg xchg dec sbb inc mov pop enter add mov (bad) je cmp xor inc out ljmp jg ss sbb aas sbb lcall mov rorb movsb insl sbb imul hlt xor cld popf loopne dec fildl xchg js mov rorl cmp jae ss mov or into mov lea mov rolb popa les inc xor adcb sbb mov mov inc add jae mov pop mov or lahf out jg lret fiadd mov repz jg and call mov mov sbb add mov mov push jae push jne popf js fimull jg mov out mov push mov cmpsb jg ret ret adc xor (bad) xchg pop pop push jno mov and popl xor test and into jecxz inc xchg lods shr pop sub sbb sbb mov hlt cs lcall ret fsubp or fidivl jg (bad) sar sbb ljmp add jg lret lock test ret out push std mov enter (bad) cmpsl repnz add and push jl mov push mov mov cmp jecxz pop das lds jnp pop mov sar sub aas cmp sub (bad) dec push ret (bad) lahf add iret xor pushf orb in jg jmp test jg or cltd jg out leave or ljmp add or xchg hlt jg pop jp mov jle insb imul sahf mov pop xchg mov pusha jg in dec mov cmp push mov push cmp out popf stos jecxz arpl out (bad) in nop pop sub jno leave pop test fiaddl (bad) mov das rcr jg icebp sbb repz cmp cmpb pusha fucom test sarl cmp js mov repnz jg icebp out gs jge jg jbe (bad) lods les mov adc gs mov dec pop push fdivr cwtl jg xor or in mov (bad) ja popf and stc dec jg xchg dec jae push shrl stos mov jg popf pop loopne in outsl or mov push (bad) fnstsw out sub or jg xor jbe incb aaa inc fidivrl lret jg sahf clc arpl adc lahf aas xor cmpsl add popf inc cmp mov mov jg nop push adc aas xchg inc add mov addr16 dec repz inc pushf aas fwait icebp jge les jg add sbb dec jg sub test push jge push jns dec es sbb sbb push push test pop arpl push pop add fidivrl xchg stos mov fistpll pop cmpsb sti or pop mov or aaa sbb xchg mov test movsl mov jg mov test jg pop mov add int3 loope push push lcall das pop jg ds mov in ss mov loopne out inc mov jg inc xchg sahf in insb mov mov ds faddp jg dec sub dec pushl out or dec scas pop test pop fs mov popf jg cmp mov (bad) in ret imul cmp mov test add mov xchg add popa mov mov jge push mov jmp inc rclb movsl idivl test shll xor sub jl int xor mov out xor out test sub cld jg push jne mov push movq cli xor movsl loope arpl loopne mov dec scas int3 push push out je mov pop jg sbb jg test jecxz popa pop push aas sub xor inc loope rclb cld aad leave jg js stos sbb cwtl test push or mov repz sbb dec lods mov jle inc sti in dec out mov sub xchg xchg and sbb out into mov adc nop out push sub stc mov aas sarb mov roll mov jmp xchg dec mov jo push (bad) aam mov out inc or jg lahf sbb in loopne jne and jmp iret int lds push inc insb popa inc loop mov addb sbb push add and inc add dec in (bad) push adc dec repz insb insb jg xchg sbb jnp dec out jecxz cli mov jg add lods pushf jne cmp jg das loop cltd outsb out jg sbb in sub dec pop jg mov add jg sarl pop popf fwait clc jg sbb out add pop jg (bad) int3 (bad) xor and jg scas shll push pushf jg pop jb push out aas sbb gs dec in mov and mov inc xor outsl inc (bad) cld jmp and mov and jl int3 subb fstpt lret jne enter pop (bad) sti loop cli cmpsb inc xor add sti push popa notl jg out cmp xchg icebp rorb es rcrl xchg lcall dec fmuls les mov sub fistpll adc ljmp lock or das movsb sub out sbb stc fildl adc jg out add fs jg scas pusha addb dec dec nop sbb pop sub mov out xchg mov jg mov pop (bad) imull mov jg mov mov fnstsw mov loop scas inc push std sub cs loope inc insl and dec in clc and mov ret addr16 or ljmp jmp out sahf lds mov mov ret cmpl sub mov pop pop jg out out movb repz nop mov jg sub es imul xor aas and les sub xchg push fisubrl lock imul lret add push sti ficoml out and call mov outsl push inc in inc jg jnp lret xor jg cmp or test adc (bad) lea jg adc jbe popa out ss push or enter mov pop jg repnz add leave aam dec imul mov add push rcr jbe xchg jg test xor and sarl shrb cltd mov outsb jae clc int jg faddl jecxz lret and enter or out (bad) mov aaa cmp adc sbb inc xor pop pop xor xchg or loope dec clc add pop cli (bad) dec push inc jno jnp and fcmovne mov push inc inc sub jb sbb mov xchg jg sbb arpl repnz out jg or inc and jg jno int3 jl xor mov xchg jg dec inc repnz pop (bad) xor pop or (bad) cmp jbe xchg dec cwtl rolb or out xchg es push xlat inc imul (bad) sarb loopne test arpl pop and xor pop pop jle test and pop out cwtl dec loope cli inc push jg push loope lret jl fwait cmp rolb xor cmp imul add mov xor gs xor add loope push rcll in adc xchg jg repz loope je bound dec adc jg xchg mov les ljmp adc ja jne and shlb sti jg pop iret add ljmp pusha push jne xchg adc testb fwait jg and mov sub push inc fwait and mov dec (bad) js (bad) push jg xchg (bad) sbb movsl sub pop xor jg mov push sti fs aaa dec and jg cmp mov insb cmpl lds cmp int sbb xlat mov jno add pop pop mov dec or sahf jg cmc pushf pop ffreep sub sub fs insl jg or xchg xor popf mov in shrb jae jg out in out xor adc push mov jg (bad) jmp daa cmc data16 (bad) sti xchg lahf addr16 jg cwtl (bad) leave ds fwait jle fistpll sahf pop jb repz push icebp mov rclb jg das mov imul inc aaa mov add jmp mov or loope dec push pop lods lods jmp js push adc (bad) xchg mov ljmp in jmp mov gs and cmpsb jg mov cwtl push mov scas ss fistpll mov jne xlat inc inc sbb fnsave fsubs mov mov push (bad) movsl aad ljmp mov push jne stos loop repz clc stc mov pop dec test (bad) loope testb dec popf shlb jb je pop dec adc inc mov mov xchg cmp lea adc dec jg mov xlat ret push push aas jg mov dec and out adc (bad) dec jae ret pop arpl lea adc negb stc mov in lcall and push jg xor es test jge test jp jg adc int3 cli sti sbb sarb outsb data16 dec out loope xlat adc push fisubl xchg jl movsl icebp cmp jg sbb pop rcrb xor sub repz in shrl loop add dec mov dec inc or inc sbb (bad) idivb push jae push (bad) jno xor jg and mov in inc nop gs cmp pop js int3 cmp call mov jg jl lock jbe inc out jg mov ljmp sub add jp ret ffreep inc repz jnp pop push loopne xchg jg cli cmp jg mov fwait xchg jg inc jle pop pop adc mov inc in dec cmpsl jg fnstsw out sarb adc js (bad) jno pop and jg adc (bad) mov sub fsubr mov xor mov das jg adc mov jbe cmp cs push insb aas mov lahf mov mov cmp repz out fldl push ret push inc jb mov ds mov adc sahf mov jnp xchg jg test lahf fdivrl lret rcrb (bad) jl lock mov rcll inc repnz mov in jg mov mov jg adc bnd jle add sti orb in mov jg xor pop movsb inc aam xlat insl jge sbb pushf out fcom lahf mov loopne popa pop or xchg sahf cmpsb inc add jg dec test cmpl es cltd aas mov test in jg mov ret pop dec dec pop stos sub sbb and jg in shr mov jg leave pop das push mov sbb inc mov aam inc pop lock mov adc or iret pop cmp jg mov stos push and loopne mov mov sarb sub inc stos jg xchg mov outsb sbb popf jg push shrl cmpb into pop sbb lahf jg vxorps ret cmc mov jg jmp dec push mov stos insb cli dec or (bad) bound fcoms jno inc jg dec mov iret jbe jg push pop xchg jg addr16 jl lret jle sub mov bound jg int3 xchg jne push jns jg mov sarl push xchg aas and addr16 int3 dec inc sbb jg xchg (bad) jecxz sti jg jbe es subl dec push jno daa mov adc push ret jg add jo test lds std jle inc push sahf insb push cmp inc test dec mov mov rorl mov std dec inc pop jb ficom sti icebp addr16 jg mov fdivrl xchg add push mov jg pop push cmp inc jg cs repnz inc jmp mov lret ret aas sbb sub pop (bad) jg mov ljmp push push jg dec repnz sub xchg std movsl imul (bad) mov mov daa push cmp inc xchg xor popa or int3 rdpmc shrl jge push mov std pop jp jo xchg jg jbe xlat sub aas outsl or pop nop fdivrs inc sub lahf adc bound rol mov decb dec dec lahf ficomp sbbb (bad) dec mov addr16 jg mov xchg or lret loop or jg xor (bad) dec sti mov popf std or and add loope scas (bad) xor lds xchg jg out adc fstpt jns mov push jmp xchg xor and stos jg sub adc sub or cmp js mov in ror xchg loope,pt push iret (bad) push hlt ret sub aaa cmp mov sbb jg popf ljmp or fstpl cmp mulb mov jle sbb aad or add sti ficomp iret in jg movsl call jb sbb mov jg add push sbb mov aas inc lds cmc mov sahf div pop out dec pop imul and xchg sarl iret xor call mov or in int test jg mov add inc sub xchg scas arpl sbb (bad) call inc and dec in mov jg xchg mov push jg cs sbb pop mov xor imul stos es mov bound pop daa push imul add jg pop xor adc push jle sahf sbb pop sub jg jne pop lds xor sub scas test mov fisttpll jbe mov jg sub mov and les dec adc adc sbb push lds js xlat les jg outsb imul testl dec sbb jne xchg outsb popf arpl lret dec xchg stc jns lahf mov aam cli loope mov movsl shll xor xor jbe popa xchg jno fwait jg pop lock mov lret gs xor test mov inc cmp sbb sub xchg inc rorl jns call shrl jp mov repnz mov sub (bad) dec aas cmp jg or (bad) xor enter push out loop jg or dec jl xchg cmp (bad) repz mov ja inc xor inc push sbb popf cmp inc (bad) add add adc addr16 cmpsl leave add adc cmp jb test in jg mov push dec xchg fimul jg addr16 pop rorl sbb xchg arpl xor cs xor gs cld and fsubrl into sub sbb xlat test inc xor mov int3 aad add mov popa imul scas sbb sbb pop mulb xlat cmp mov adc cmp pop xor dec mov xlat jg push lret jmp frstor jg incl scas jg push jmp cmp fsub sbbb lret jg repz loopne inc lcall and cli jg out hlt xchg es sarl pop inc lcall (bad) mulb mov mov and loope arpl jg fwait xchg sti shll and mov inc jg and jl xor pop lcall mov push cmp xchg jmp aaa cwtl push cmpsl mov add dec jg and jg pop inc push jb iret fsubl xchg movsb aad pop ljmp dec jbe mov pop mov lret cmp loop pop push pushf das cmp into inc cmpsb arpl jnp addr16 imul inc add cmp dec dec inc mov cmc shr shrb push mov (bad) pop ja outsl dec loop add xor enter jns cmpl mov pop fldcw mov (bad) mov inc daa jp ja outsl scas jae pop insb xchg mov loope mov pop roll cmpsb xchg mov lods adc rcrb push (bad) jne insb push int3 jge or fnstcw jp mov inc dec sti outsb data16 lods inc test loop lcall (bad) lret xchg jg mov test push das pop int or aas jae aad lea inc out lock push (bad) scas mov jg mov jl mov in pop test xor (bad) scas jne mov pop jg adc hlt jge scas jg push mov xchg jae jg (bad) mov pop lret xchg cmpsl jg fwait mov arpl out xor inc or jg mov lcall mov aas jns inc pop cltd adc dec out xor scas mov pushf aad aaa jle jmp fmul dec sbb daa jg (bad) xor gs mov (bad) jg push xchg ja push jg dec cmpsb aas mov inc sub and div jg lret addr16 xor nop inc jns mov mov cwtl xor mov nop cli push out popf imul outsl jg sbb faddl jl stc dec cmp jne or mov in pop imul jne rorl outsl sti ror dec mov xchg jg xor cmp jo out ret aad mov jp dec das insl dec or adc test js repz nop pushf jnp push mov cli pop pop aaa cmp inc stc mov out push pop lret mov inc xchg out jg pop pop jle sbb int and push push lods mov pop in mov movsb arpl push inc bound insl xor scas mov sbb jae stos imul stc jg clc fs lcall in dec imulb jg sub in pop lahf xchg stc mov xor xchg cmp insl call jg add add mov sub dec das inc fsubrs inc scas mov dec movsb lret jg test (bad) mov (bad) mov or xchg dec push lret adc aaa sub sbb scas jnp (bad) adc loop and mov push dec test (bad) call pop out inc ret (bad) test loopne sub dec cmpsb mov lds and jns js push sub jg pop outsl cmc sti inc lea lods or (bad) pop push rcll sbb add adc (bad) mov dec push mov aas mov imul jo inc pusha rorl jg or jg lods insb add push mov jg mov lds mov (bad) jbe jg fpatan mov jg imul xor sti mov ffreep mov ja or lock xor jmp jg jo sbb repnz jge mov sub cmpb mov outsl in lret cmp aas arpl push or aaa repnz cmc jg in and push cli mov mov jg lret push xchg lods push les gs rolb insl mov xor jl movsb jg sbb lods xchg jnp leave mov jbe inc xchg and jg lcall jg pop out (bad) fisttpl jle mov sub fiadd in fwait aas lock sub jnp pop outsl sub mov cmp and and mov sbb sub popf cmp hlt jl add dec je movsb movsb mov dec in ss jg (bad) mov mov fstl cmp hlt or jg,pn aam pop push xchg dec jg xchg push pusha scas inc std fbld mov add or add jg xchg lock sti fisubrl sub pop dec or or adc aam cmpl mov mov push lcall (bad) jno arpl js int dec pop mov lds in jl fstpl jg mov cmp dec into jg inc test jg cld js pop pusha jae jg mov (bad) cmp pop jg hlt mov adc pusha (bad) arpl pop lds mov (bad) lock (bad) ja pop (bad) loope (bad) icebp ret insl push out jg inc (bad) iret in adc pop jg or outsl jno push add icebp or sbb mov jg pop cmp xor test adc lock dec add aam popa loope (bad) cmc int3 mov (bad) pop pop pop sbb pusha or pop lock nop iretw out jg dec inc (bad) dec js aam fiadd mov jg pop into ret das lea daa outsl (bad) insl add repnz popf pop fldenv push rcll mov ret repnz push outsl es je lock pop pop mov imul adc jg out (bad) outsl iret mov sub ljmp xchg cmp lds mov jne push add cmp xchg pop add andb fprem pop aad mov data16 das sbb (bad) js popf aam pop lods cmp nop sti shrl mov imul push (bad) test push in popf test and aad mov dec sub jg es add and jmp inc jnp mov (bad) addr16 aas je add aaa inc sub arpl jg sub push xor pop xchg jg pusha fldt shrl and or incl add pop jno adc dec addr16 push loope aas push out loopne setl push adc lcall sub sub push sbb jl int3 jle (bad) cmp jg loope push lods jg xlat stos sahf insl out or imul dec sarl push and in pop jg dec pop int3 in cmp cmp arpl fildll jg jle (bad) pop pop pop inc jg mov push mov aas push sub test pop idivl sub stc mov jg int test lahf xchg loopne jg aam popf xor dec pop mov add (bad) jnp dec mov pushf jg sub inc jae mov loopne mov dec jp out pop jg and pop int3 push aad xchg push arpl xorl cltd inc mov pop lds dec iret pop xor xchg sbb mov fwait pop std jg loope hlt out int3 arpl out notb inc test jb lods outsl ret out jg movsl ds add int3 jg cmpsl outsb sub jl dec add jg xchg mov repnz popf inc cmp mov mov sub inc maxps jp arpl cwtl mov lahf push inc mov sarb iret or dec jo push sub mov jg mov cmc clc mov lret jg xlat (bad) inc push nop pop xchg jg adc adc push lea sbb loop xchg ja (bad) jge mov xor pop mov js mov dec xchg inc add xor mov test dec add cwtl fnstcw pop rcrb lea in mov (bad) jg inc pop mov jg sbb negb mov imul xor lods std and xchg xlat out jne inc jl mov test mov mov xchg inc mov mov pop mov push divb fildl and setbe xchg or pop es hlt jg add and jg loopne cmpsl jno (bad) test add fs inc push lock mov enter push jg pusha negl and pop insb push sbb pop (bad) jbe pop adc jno mov popaw in mov pop int xchg adc stos div pop cmpb scas inc sbb bound sub das dec or sarb mov clc movsl sarl pop pop or repz inc out pushf negl popa outsl (bad) xor inc iret jg sbb xchg idivb xor jbe ret push add jg mov loop xchg ss les (bad) movsl popf pop test ja lret inc jg dec sbb in push cld mov adc push test pusha mov inc push or movsl sbb jg (bad) insb arpl mov iret aam add pop aas das sub xchg repz out dec push dec jl fxch (bad) jne mov pop xor sti sahf loop jne divb mov and inc outsb add enter fnstsw pop jg sbb jnp xor scas bound jg int3 fwait aaa dec dec mov mov push jg xchg sub mov lret inc cmp sub loope daa jbe aam js in cmpsl lds mov xorl mov ficoml aaa jg and jecxz mov stos jg int jmp jg and push fnstsw (bad) int3 jns push mov mov repnz sarl dec push inc std adc inc test cmp sbb (bad) lock dec pop loope fsub (bad) nop pop sub jns sbb or mov (bad) lret daa cmc pop scas icebp nop jg xor jg ret lret pop in jg icebp fiadd xor inc pop scas (bad) push sbb jg lods imul andl in out and mov or xor dec jg ljmp mov cmp mov arpl in jmp xchg outsl lahf jnp pop push sbb (bad) cmp push (bad) test sub ficomp dec pop emms jg cwtl cltd (bad) in addl and test push jle cmp jg addl xchg bound jle or jg cmp mov orl cltd imul cmc mov mov mov push sbb adc jge inc das sbb or cmp cmp xchg pop mov jg mov aad mov in fild mov adc sub xor xor inc nop pop cmp pop push hlt (bad) dec lock sbb rorl clc sbb jg in mov es xchg dec jle push ds fwait dec mov or jg cmp sbb outsl add test pop adc fistpl fimul fsub inc mov cwtl push jg loope pop pushf push inc jmp jns orb das jg xor or fwait or mov jg jns mov jp inc aas sbb pushf outsl push orl mov out into mov mov cltd sbb inc dec push cmp repz jo add cmp pop jmp inc add cmpsb jns,pn ss incb and sti jne adc inc inc cmp aad xchg data16 leave fistpl xor adc shlb out inc mov lds xchg jg stos and lret sti mov adc lahf xchg jg test mov mov dec nop xor pop jg sub jbe fldenv imul push or sti int or sbb int3 sub aas shrb fmuls js mov xor sub jno loope mov (bad) jg push sbb mov sub mov lahf ljmp pop mov (bad) (bad) in idivb fsubrs inc icebp ret inc jg cmp fwait outsl movsl data16 or and flds mov inc outsb sbb pop mov cwtl push sub lock mov inc cmp or xor jg sub push jg xor xchg les into pop ss jg imul jg sub inc inc mov (bad) mov outsl push pop lock mov jns push sub jg xchg movsl dec mov inc mov stos inc push arpl sbb outsb mov jl pop cmp push out movq push (bad) xor ja xchg lahf movsb lock lret xor inc std mov mov ret cmp outsl inc gs xor jg and cmp xchg icebp jg xor addr16 popf std loope ja (bad) mov iret addb sub sti out sub xor jae (bad) cltd sarl add pop ret imul xor jg mov cmpb pop mov dec lret mov fistl das call pop je ds dec addl push adc dec jg and jo (bad) xchg test lock jg popf movsb pop xchg jle add jg add or xchg pop scas int3 sub cmpsl aas sbb mov dec inc lcall add stos mov adc jg jl lahf test (bad) xor cmp adc cmp inc imul ja push add pop mov popf adc and cmpsb jg inc fnstcw jp imul sub repz dec js fwait inc dec pop mov aas test adc repz arpl mov lret pushaw jmp dec fstps mov in or jecxz ds sub add push lret cmp sub dec mov ficoml dec ret jg add push in push in jle bound add pop adc (bad) ja gs mov jae movsl xchg sti cmpsl adc in loopne cmp jecxz mov sarb call inc loop add mov stos mov fild xchg repz xor mov sub aad mov add int jg and arpl xor clc aad int3 jg mov stos loop (bad) (bad) xor xor (bad) mov adc and jg sub push stc jg jno and imul out popf fcmove sub (bad) sbb jg (bad) imul loope jg (bad) jae lret addr16 mov xor cli divl mov test into pusha cmpl mov scas lret sti mov mov cmp enter dec mov popa jg push ss test lret and repz mov xchg fistp push sub aas aad pop faddp xor dec inc lods jg mov insl dec aas add sbb sbb adcb and scas jg dec lds mov xchg dec xchg xor xor jb enter push xchg bound mov xchg push and mov sub jle (bad) cmp cwtl outsl push lods shrb jp sub movsl loopne inc test mov inc les jg loopne add repnz jg dec adc clc shll jg call lret outsb fidiv rorl ds repnz xchg lods dec fwait clc push sarb js sti dec add xchg jg lods out mov (bad) jecxz jg cmp add mov cwtl jg jmp xchg hlt push fcmovu sti mov outsb sbbl stos jbe (bad) sub push and jg (bad) dec cmp jg popa sub push ljmp and push mov push inc sub mov push or jbe out jg xchg xlat jmp aaa mull mov jg jo push and sbb jg sbb xor stos ljmp test xor mov or fdivrp cmp sub sub jge test iret pop data16 mulb mov aaa repnz sbb int3 (bad) addr16 imul aas mov fwait pop jl jae xor jg push mov dec mov sti mov jge inc pop out jnp mov mov movsb loope jg rcr sub or jne popa mov mov js adc lds sbb push dec jg mov cli or and addl nop jmp fs dec shl jg mov or es mov mov sub (bad) jg jne mov sub jns insl out sbb mov cld gs andb inc cmp jmp push push mov sarb ret imul ljmp gs fdivrs ja mov insb xchg outsl cli mov jg nop cltd daa cmp jg or sub out xor aad mov jg loope je cmp movsl sarl and adc mov sahf jae cmp mov mov sub or pop sarb adc fwait aas out fnstsw mov jns mov inc (bad) sbb xor sbb insl sbb jno sbb ret movsb (bad) jg sti jmp mov lret cmpl push fs cmc (bad) mov mov mov fdivl xor inc test sbb idivl es add or jg mov xchg add pushf jg sub sbb jg aam daa xchg in inc xlat jg lahf std ds rcll mov out es pop sarb fisttpll sbb xchg sub cmc mov cmpsb xchg and arpl (bad) mov xor xor jg pop and movq aas push jle add in (bad) jg and or jg imul jg cmp or jg pop iret dec bound loop xchg xchg xor xor aad in inc dec ret and jg xor jae imul daa out xchg dec mov test add jg mov xlat movsb int sti mov jbe fist mov in mov movsb lods jbe add mov ret hlt clc push incb push mov repnz jae (bad) inc (bad) mov adc inc mov add icebp pusha sti lahf (bad) leave bound lret push mov hlt pushf pop jne jae sub negb pop aas daa mov cmp or loopne (bad) outsl mov cmc outsl mov aas sahf out jbe shrb dec fwait sbb out jno jg xchg lds adc jns jg in jnp inc jo sahf (bad) or jg loope and jg adc jns jo xor add dec sbb jg add in mov mov es movsl xor sub inc stc mov xchg or inc mov es lock sbb cwtl adc jg or popf and sub out jo mov cmp jg xlat sbb aaa mov fs in adc mov mov stos jg xchg aam repz lret daa dec sub lret and bound jg cwtl (bad) dec sbb mov push fdivrl sbb adc dec sub cs push pop inc ss jg lcall jg pop mov xchg add mov jecxz arpl dec or inc scas jg (bad) gs lcall pop lahf mov (bad) jne cmp outsb xor cmpsl and nop mov xor rorb imul fidivr cmp add pop sbb (bad) hlt enter int3 cld bound pop jg in mov lock out inc aas and jg lds mov jg lods add jecxz imul enter and sub add scas loope ret add lock rcrb out cld pop pop cmp jg inc add mov pusha test gs inc aas popa add addr16 movsl jg cmp push dec jg mov scas repz ret jg popf pusha punpckldq pop and mov cmpsb sub call jb inc or mov push dec lret bnd es sub nop inc int add inc arpl das or mov and jbe jg lret cmp aad mov jg mov mov pop fisttpll (bad) xor sti add xchg pop or mov add imul cmp inc leave push jns out es enter movsl sarb mov cmpsl jg inc in aaa rcrb pavgb jg push scas stos lcall test negb pushf inc fistpll sbb pop imul mov rorb xchg jg icebp sbb jg cmpsb adc pop pop inc push jg dec mov mov pop jno add or pop jg jecxz pop sbb jns and data16 jae out test imul clc sbb mov cmp call rcll test pop ljmp xchg jg jnp mov decb sahf push push lods fiaddl jnp inc repz xchg maxps xlat les add adc jmp mov outsl fadd pop bound sbb jno pop xorl and popf dec in jae jg sub xor pusha jg aam fisttpll pushf xchg aas enter data16 dec lods clc xlat push jg xor cmp aam (bad) enter insl aas mov adc pop icebp in shr jae mov sbb cmpl lock inc sti jg and mov push popw sub pop xor movsl idivl push xchg jp and les jo stos int3 (bad) ret sub mov jae cmp jg ret mov jge adc lds inc jb cmp xchg mov sbb jg aaa (bad) mov inc shl outsb shl int3 in and lcall lret pop jne jg aaa movsb mov jb cld jp xchg adc pusha rcrb mov mov out push jg fcomps subb cmp xchg mov inc or mov ja ja cmpl push aaa cmp scas push mov and mov cmp fwait push nop dec or push data16 pop or cld xchg iret mov cmp push cmpsb mov jg xor rol or push ret pop sarb jno push pop cs xor jmp and cld sbb out and call pop pushf imul pop int3 (bad) leave inc aam in inc xchg popa jg rcll jg daa int mov adc cwtl sbb cld lds fwait jg pushf mov pop jnp jecxz popf inc data16 divb bound push out pop lea adcb jge mov stos ja in imul daa fldcw loop jg imull out push orb std int3 add mov addr16 xor xchg jg xor out ret pop jg dec sub inc mov sbb adc cmp ret jp loope sarb xor insl mov add test iret aas add scas xchg dec test imul sbb mov jg scas popa stos dec sub std jg ljmp push movq fbstp jo in je stc mov jns roll push or jmp jne mov repz icebp and (bad) mov dec fwait sbb jae mov int3 jo lcall inc jg addr16 js ljmp lock aam or (bad) push jg pop mov dec ja and cmp pop jle xor xlat sahf mov mov or sub adc push in jg ja loopne lods js je jl jg out in sub add xlat outsl xchg das mov xor push ljmp (bad) imul data16 inc div adc (bad) in sarb (bad) and pop nop cmp stos out data16 jg,pt xor ficoml and dec lret inc out jp in or sbb imul adc mov mov (bad) cld push mov addr16 insl gs mov (bad) je add cld sbb mov mov mov push stos mov pop push add sub xor sub pusha jg xchg mov ret add lods out pop adc cli pop outsl enter cwtl cmpl adc sub lret mov jg inc loop sti jg pop inc test dec fisubl push mov inc nop sti out sub ja lock sbb pop rcrb jns pop cmc jg sub movsl jae stos test lea mov int jg or mov push mov mov mov in scas dec or xchg adc mov loop lock push mov mov leave cli or fdivrl jg clc mov bound mov mov loop sbb inc and pop jg inc mov sub jg jne cmp mov adc (bad) ja add bnd fiaddl aas jnp mov arpl sti aad test mov (bad) (bad) cmpsl push dec cs or jle enter pop pop sub jg xchg xor mov inc testl roll movq inc mov imul int3 push jg pop out cld bswap pop aas ja mov add cmp daa int3 cs arpl into and xor sub sub aaa fdivrs lea jg mov stos cltd jg add or fistpll arpl jbe insb scas lods cltd cmp (bad) add inc movsb (bad) add xor jp repnz sarl ds or mov rorb loop pop xor lret jg daa push mov cmp std inc adc add outsl jg cmp pop loope jg cmp inc sti xor jle jae jg cmpsl mov imull mov jg fild movsb loop adc loopne jb jge add stos xchg leave adc jno and add test aad adc pushf (bad) xor rcrl in mov cs jg xor stos int xor movsb mov sbb xor jg stos call inc jg cmp repnz lahf loope loope mov fiaddl jae fnstcw mov (bad) test or outsl adc xchg and xchg jo pusha out mov outsl movsb or leave jg pop repz pushf lret pop lcall fbld jo cmp movsl lds or in fimul jg cmp jmp cmp mov jg lahf test sbb loopne jg clc fs data16 mov and ficoml pushf mov cmc jp loopne jg push jne imul mov (bad) mov test aam pop sub cmp ret mov iret popl lods ret inc pop jg cwtl mov iret xor sahf imul loop int repz mov out ds cmpsl sbb jg jge xor push inc and insb pop jg hlt ds inc out sub daa adc mov rolb enter inc mov jno sub dec fbstp jp or dec mov imul dec adc inc jae xchg pop xor push pop cs jmp sti mov mov clc cltd (bad) insb fadds test jmp and test push push icebp cltd and xchg out add pop repz xor pop (bad) jg lods dec mov add aam mov sbb inc pop jg stc test lcall push es sbb inc pop mov std arpl aad adc xchg and push adcl lods jg xor mov repnz mov mov aad jg dec data16 jo adc and pop inc or (bad) xlat test cwtl sbb push mov jg xchg repnz lods enter popf cmpsl xchg sbb popa dec js mov ja fcomps jp cltd movhps jg loopne test les in jg xchg lea je jp jg mov jg jecxz sbb jle mov sbb inc push adcl mov aas xchg inc add pop pusha inc stos scas orl dec mov int insl inc mov jbe and ss ja or mov or mov insl push jg in (bad) popa (bad) stos mov cmpsb xor add mov addr16 repz call aas mov daa fiaddl arpl cmp lahf enter add mov pop test (bad) xor shll loopne inc push lods stos cli jg test push (bad) enter add or push xchg cs sub cmp inc cltd cld jg movsb in sub dec jg mov dec jae xchg call jg jp jl icebp jne jg sub dec data16 jg mov lahf mov in xchg push scas fbld mov and imul dec loopne jmp jg rclb imul repnz jg je sub rorl sbb jg inc xor xchg leave frstpm(287 cmp lret push mov js inc mov sbb jg enter pushf push jg mov add xor jg lcall lret mov mov or push jle jg inc adc jg or dec jl sarl pop or sbbl xchg add (bad) scas mov mov cmpsb cmpsl dec daa scas inc mov adc mov lret faddp push out add daa mov jnp jg xor sbb arpl dec add jg in call (bad) ljmp int3 insl xchg jg mov mov and jo scas pop push mov aas and js xor pop add inc cmp pop xlat mov mov cs es js out dec mov sbb cmpsb jg mov pop lods jg stos fwait add and lahf push or push ja fcomip cmp mov jecxz inc cmpsb faddl ud2 pop leave jo nop jg call xlat jg outsb repnz daa outsl gs mov ss out fwait jo lret imul inc enter pop and sbb cmp mov push cwtl insl mov sub xchg rorl lret xchg into (bad) push rcr mov or nop jmp (bad) xor mov jg add outsb lcall xchg psllw push pop lret bound sbb (bad) xor arpl pop push mov mov jns stc jnp fldl sub imul hlt pop mov pop mov sbb bound lahf cmp push sar mov mov jae hlt fbld inc cs mov jg pop mov jp ret js movsl pop outsl inc and pop idivl or push xchg cmpl xor and mov mov mov mov or outsb jmp xchg pop mov xchg inc push jg ja,pn mov jns add icebp jb rcl cmpb pusha pop clc test xlat stc mov jg imul adc enter pusha lods arpl popf popa push jg and fcmovnu pop aas in dec inc js mov dec cmp xor dec icebp gs push jg loope xchg dec cmp in cmp inc out sti les pop loope dec mov and inc loope jg add push dec mov cli mov mov sti cwtl int3 mov or pop adc ss insb mov data16 repnz scas cmpl clc bound jmp add inc xor mov pop xchg push lret or jnp das jno jg sti xchg pop leave cmc or mov dec cmp mov add nop or mov mov lods jg pushf and dec ret fs or xchg jg gs bound mov pop pop loop jg push fisub popa mov jle call xchg jg cld push or test mov jg je push addl jg jno pop and iret clc inc pop addr16 aad lods and in dec push iret test adc pushf fadds xor add or ljmp aas ja nop stos out sbb mov xor imul enter sti imul sbb jg cmp mov dec cs pusha idivb scas jbe cmp jg xchg outsb cs mov ret loopne (bad) mov rorl adc mov sbb or popa sti or cmp outsl adc (bad) pop dec pop sbb mov stc adc test iret mov mov scas pop loope sbb jge addps mov cmpsb (bad) mov and (bad) jae push cltd lods and adc jp pop inc jg stc jmp xor inc mov aas mov mov jg fmull movsl mov std lret sbb cld shll fs adc push jg lea inc pop mov jg push dec in mov mov test push mov xor mov jecxz cmp hlt ret adc add lods mov add pusha les scas pop (bad) (bad) jnp lahf es jg mov and les mov push lods sarb push dec popl mov pop mov mov mov cli add sbb (bad) mov mov mov jnp push inc ds pop insl jg push outsl and jp out mov push je cwtl cmp popa int3 xor mov pop and pop ss xchg jge sub push scas insb adc dec imul jae push fildll aad (bad) pop add xchg inc dec jg sub pop sub add xor push cmpsb jg and lock xor insl arpl and dec clc sbb lcall in ljmp adc hlt imul enter mov sahf (bad) jg pop cmp jg (bad) shl addr16 loop jne test rclb jg test cwtl outsl add sarb outsl mov inc sti mov xor pop mov jg xor popa mov mov ss xchg jae sar lcall pushf insb xor js pop xchg jmp push jbe adcl (bad) jmp inc sti out and mov inc mov jg int mov jg xchg enter das mov add or dec jbe sahf ds dec and mov mov das mov push clc dec stos or repz cmpsl mov orl cmpl pop pop mov lods sub leave or dec aad hlt stos mov lea adcl pop jo jg iret dec lods test jg pop popf out fwait sub jg dec jbe rol fcmovb jg clc adc adc or xchg (bad) mov adc push jg rcr stos xlat loope jg pop cmc leave sub (bad) (bad) pop ja pushf dec dec dec fnstcw jg jnp (bad) fcmovnb xchg xor repnz pop aad in jg and (bad) dec add (bad) adc lods dec jg pushf (bad) mov repnz xor jo cmp mov jns mov fimul loop xor js pusha rcrl mov stc repz fisttp mov and mov pop out jl xor jb mov inc push dec repz aas popf lahf les push ja movsb lock cltd adc (bad) jg (bad) push rcrl mov clc jg ror add (bad) xor push jg fisubrl jg dec cwtl push sub out or rcll mov jg adc dec push loope std movsb out dec xlat dec pop jg lahf (bad) xchg js push pusha inc sub mov mov sub out and cwtl dec testl sbb fldcw cmp mov add lods scas or cmp inc inc jg xchg mov mov add arpl jg or dec mov add dec cmp inc jg repz aad mov jg or add ljmp sbb out je adc imul jp mov lret jb pusha outsl movsb cmp cmc das cltd cmp insb aad lock test hlt xchg jae pop iret jb cmp test adc mov jg out lret (bad) mov cld pop mov loop pop pop dec push sub xchg add outsb stc insl xchg movsl jg adc fist (bad) roll sbb or mov push leave dec pop mov sti into lahf std enter pop inc roll add es xor mov and loop add inc sti cmp cmc adc jg les repz mov xor outsl mov xchg jg loope or add sti pop (bad) cmpsb jl adc sbb adc (bad) int push jae xchg into push fwait sub shrl neg jg dec test ror shrb lret pushf notb add jg lods (bad) cmpsl xor mov push shll pop jg sbb sar (bad) push jg mov mov jecxz push jg pop pushl loopne xor push in fstl cmpsl mov cltd push and mov pop xor mov mov mov xchg jg repz fdivl incb pop jg mov mov inc shll sarb lock pop rep inc inc aas dec mov push fldl je or sub xchg scas (bad) rcrb and and std mov mov aas ret andl jp je jne in lcall cltd rcrb jg dec ret (bad) leave mov je add (bad) mov stos sbb and fwait dec jne jg mov xchg rclb sub test popf pop les jg pop lds cs mov xchg fs bound stc jg jbe or inc sti aas pop cld xor inc mov adc aad and push scas push repz dec jg lret mov mov mov mov pop in and push inc and movsb into fimull add pop jno mov loopne mov cmp add inc stos lret inc dec push sub ljmp cmp sbb mov jge xor cmpsl roll stos push loop push jg sub inc cltd mov inc mov jp cmp mov aas sbb or ja lds scas mov unpcklps sub inc dec das pushf push jmp test aas lock adc fidiv push jbe cmp cmpsb test lea cmp jecxz jo mov add fmulp jg insb popa int pusha fild cld movsl mov cmp jg mov push mov jnp mov cmp pop test jns mov test cmc test in push mov dec jg adc and loopne rorl push xor dec push cmp inc pop xor cli fisttp (bad) mov push adcl ret cmp das jg mov cld enter data16 add push orl jg divb int3 pop dec jg into cmp fwait (bad) (bad) je aad andl xchg xchg inc inc jg sarl out xchg jg and and pop jg (bad) insl pop nop fstpl or push push and add jns mov shrl sbb jg test inc lds jmp sti fnstcw ret jl movsl xchg jp jg jge in in dec rcrl cli out or cmp mov jae xchg insb and jb stos dec ret cmp js divb test jg jge fwait lods fidivr scas add cwtl bound test shlb dec add ss fnstsw aas into sbb sub dec dec mov imul and dec ds ret lcall jg sub mov das lea rcrl xchg popa lret and out fisttpl cld jno mov sbb scas mov push mov int3 mov or jo movsb jg cwtl push sub cmp es in adc jg inc aam mov cmp pop pop out sarl mov es jo jg mov lods clc xchg (bad) cmp lret sbb fistpll push sub lods jg cltd rolb jg push cld inc push jle sbb pop sub push inc pushl cs pop mov jg cmp scas mov iret int3 aaa test jge loopne jg cmp add outsb or lds stc (bad) xchg fisttp inc lcall aad jg mov shr divb in je lahf mov push mov gs imul hlt mov add inc mov push adc pushf jge xor push mov sub or (bad) sub mov pop imul and jg (bad) sbb cmpsl loopne jg lahf pop adc in inc mov push xchg mov cmc xor push ret pushf ss cmp daa imull mov stos or int3 or pop je daa sti sbb idivb pop jbe pop jns lcall dec jg push push stc add push cmpsb aas in push xor (bad) mov xor mov push lret pop ljmp xchg cli inc aam in xchg mov lret xchg out adc inc dec mov (bad) jg jp pop xchg mov ljmp negb mov negb pop or stc pushf inc xchg jg xchg (bad) mov ljmp and mov dec in rcrb dec inc push (bad) jg cli xchg std mov push sub sbb in mov dec sbb xchg les aas or repnz mov jnp sti jle ja in dec pop repnz in gs fsubrl shlb jg push shl push addb stos cmp jg dec push dec push mov data16 iret cmp jg fstps lea rorb repz popf mov sarl test adc jbe jg repz ljmp ret push mov inc or (bad) xor loopne pop xchg mov imul std out jg,pt daa and lret lahf int3 pop jne jnp jg (bad) jecxz dec fsubr pushf scas cmpb repnz roll outsl and adc cld mov mov stos dec mov pop inc dec mov cli js and sub in mov les in jne ljmp mov mov out push xchg test je into or das xchg dec pushf sbb pop mov mov mov out call in jg data16 movsl and scas adc dec (bad) insl inc addl jg sub mov mov jbe inc add fwait mov sahf xchg mov or cmp xor mov lahf mov stos aas mov adc lret movsb jg jl cli fdivrp push movsl jg jns fs pop dec pusha test pushf icebp fbstp stos ss (bad) jmp popf mov aaa ja insb cmp js jb pop mov dec lcall jg repnz xor pop pushf lods jg pop pop mov hlt pop aad cs leave in jg movsb cmp mov loope int3 das jmp dec add sub add dec imul jle fimull pop fwait adc mov sub (bad) in jp cltd (bad) sti popf add mov mov mov (bad) in or sbb jg fnstsw daa mov add enter rorl cmp pop mov mov std test ss jg pop call je addr16 xor sahf sub sub cmp sbb jno push int3 dec hlt pop test jmp insb cmpsl jg notl or add jg sti lods pop dec cmp stos es (bad) xchg js or fdivl mov dec (bad) cmpsl jmp inc sarl bound xor cmp mov jg inc mov cmp loopne jp (bad) adc fadds test (bad) cmp pop rclb jnp mov js sbb aas push inc mov push cli jg fstp lret push mov sahf jg push es sub sbbb adc dec in jg and shrb data16 inc ja jecxz sbb sar test dec clc mov xchg aas dec andb lahf aad xchg sbb idiv test cwtl push inc sub fdivs aaa inc or jb jg pop mov shlb lea ss notl jo xchg dec (bad) sub (bad) out incb arpl dec xor mov xlat ja pop jg out sub mov sub (bad) clc sahf mov (bad) (bad) cli pop (bad) loopne mov jmp jecxz lcall pop jg (bad) ss xor (bad) jg mov insl mov dec call aam xchg sarb push fidivrl push and (bad) (bad) sahf int3 cmp sahf and xor sbb pop mov jg push xor xchg jg add imul lret (bad) daa int3 mov xor loopne int jp fistp movsl xchg ja negl mov jb enter lcall push add es sbb jg jo roll mov push nop mov add dec dec dec inc jg adc jmp sbb mov sbb out xchg mov inc jg imul (bad) outsl insb or xorl scas fimull repnz test jg mov stos jg cld outsb add out mov push xchg icebp into add sub subb fidiv adc add push jg cld jp sbb imul jbe sub jae fadd add dec xchg mov cli stc xchg popa jne xchg cmp xlat sti std fs jg jmp (bad) not jne pop push js mov inc inc dec push mov pop jg mov test ds rorl push and jg mov inc dec mov sub rcl jg push pusha imul push stos pushf ljmp mov arpl xchg rorl lods outsl jg sub (bad) in scas sbb jg jb orb xchg jg mov les inc adc dec mov and mov je push mov in nop js aas pop ds int3 nopl mov or xchg pop and jl dec push (bad) sahf sti mov jmp out jg fisubr aam push dec bound inc pusha aaa loopne inc cmovno sti rcrb mov mov jb addr16 movsl pop stos insl jg (bad) mov aas mov xor pop add subb insb push fldcw cld jg xchg enter jg lret xchg fidivr mov and mov inc fnsave dec xchg fwait jg ljmp jg add dec push cmp mov das rcr push std aas mov addl push and movsb js xor jg push xor dec inc mov imull mov sbb jno pop jg dec frstor push ds loopne sti sub jg cs pop fs mov in jg push pop into xor sub push and lret (bad) movsl dec ret cld jg mov sub pop negb inc mov jg jecxz (bad) int loope lea icebp push xor fwait popf fistpll push out pop pop push aaa aas (bad) je adc call lret jg inc cmp arpl popa mov ljmp int3 pop add xchg pop mov (bad) and sti xchg lea andl stos jg loope xor sbb in cmc lahf aam cmp dec dec (bad) not js mov pop pop push cmp pop mov in popa mov stos jg pop mov dec out cmpsl jg test imul scas jno outsl pop lret aas and adc jg mov (bad) sbb jg mov pop mov lahf sarl stos test std jg mov into lock cmp out push (bad) repz mov aad les repz mov fs psubusw inc sarb pop (bad) stc jg xor mov dec in fwait mov push xchg mov dec pop jns leave jg mov rolb sub adcb mul lock idivl or push ret scas push mov xor adc xlat (bad) out int jg shrl xchg test imul xlat ljmp pop in je inc jg jne test int xor rcrb or mov and movsb adc in (bad) mov fiaddl insb mov mov jg mov jg pop sub fnclex push mov fdiv fs xchg xchg lahf mov mov jp jg xchg lods ds xor push fistpll xchg test add jg leave (bad) (bad) sti jg ss clc or push jg andl inc mov pop push jg xchg (bad) push add rolb or (bad) mov and jg incb push loopne inc scas pop enter or lahf mov jg pop dec popa jmp push aam mov jg xchg push fwait enter jg and add in ljmp jg int (bad) or (bad) fcmovbe rolb xor mov loopne js cltd push mov push sub (bad) and mov sbb adc movsb ficoml neg fsts sbb sub jecxz inc scas jg imul jg repnz xchg adc addl dec xchg jg testl inc sub fdivrl popf arpl mov mov addl push pop shl nop pop gs dec mov enter jo imul sbb jg jge mov jg cld sbb jg pop or out ds fs lcall lds mov jg push mov inc jg inc mov xor movsl into jg cmpsl das pop mov stc push cltd inc clc pop repz push push gs rcrl xor mov adcb pop (bad) loopne sti outsb jmp push repz movq xchg mov jg mov daa cli cmp jg add fldt int3 idivb jle bound or jg xchg arpl dec and jg lea lock xchg popf ds loop das cli test dec and cs jmp or movq pop mov scas fisttpl jg jmp mov sbb shll mov repz das add cmp scas imul jg cltd add mov outsl dec (bad) loopne sub ds roll adc xor mov repz jl dec adc sbb pop xor loope inc cmp cmc (bad) mov jg aam jmp or cltd inc add mov out xor shr (bad) or cmp jg hlt popf daa aas cs sti fildl leave dec ret add mov push incb push jo xlat pop pop stos clc jbe inc jg xchg dec jg mov lret jo stos and add dec sub adc or pop and mov arpl add push mov sub (bad) jl fstpt xorl sub sarl lods jae call pop out popf jg xchg cli je cwtl out stos jnp iret popa addb fneni(8087 je jns icebp mov test add jg ret lret xor mov in sbb push aad jne nop add add (bad) dec jg fwait push dec int xchg loop lea mov dec mov inc push inc aas cmpl dec jae jg pop mov sarb dec dec hlt mov mov or aas stc movsb adc push jne push cmp jg int3 nop mov jg or das lahf stc mov push test fldcw or inc scas xor dec mov lahf dec daa out push jg mov jp mov pop xor sahf jno lods aaa jg (bad) insl mov jg xchg into xchg sub les sti mov jg or sahf lods aad jo xchg mov jg fucomi cmp (bad) scas (bad) dec hlt movsb in fidivrl lock loope pop clc jg stos mov mov ljmp jbe and sub cmp lods cmp mov pop mov or jg jo sub dec out xchg jg pusha cmp jg adc add ret inc mov adc stc insb sarb mov cwtl sbb jg mov (bad) std aaa adc adc fwait inc andb cmpl imul fldenv sbb pop xchg pop nop pusha call mov popfw xchg dec imul dec push xchg sub out jg (bad) js jno lock idivl sub or add das mov iret push imull inc pop les inc xor inc push les jg xchg dec add lock fdivrl and int3 push aad jg je sbb fistpll aam adc mov mov pop pop loope icebp bound test push test fisubr loop aas push movsb test das and jg cmp inc cmp pop mulb dec les cmp xchg sar insl jg aam pop lock fstpt push inc xor stc jg cmp outsl cmp push jg push lahf sub iret sbb mov popa inc jg push pop xor rcrb add cld dec xchg push js cmp add pop hlt pop aas (bad) das push fwait lods sbb dec push lock adc into jbe jbe jg popa (bad) or jo xor jg idivl jg cltd call lret jg jp clc mov and lds sbb jg js dec int3 cmp jg mov dec movsl jg out pop fisubr or adc mov dec inc pushf lcall pop jg sbb jg nop fist fwait mov dec jg xchg jo add into aam mov mov insw iret pushf and (bad) scas int3 addr16 inc xor push jg add add push ret and add pushf cmc push lret scas mov addr16 mov push jg shll arpl adc mov mov add cmp push (bad) jns and sti loopne cmc insl dec or jno pop jg sub mov mov popf xchg or scas mov insb bound cmc cmp mov pop pop out inc xchg scas jg push mov jb das (bad) faddl out int inc (bad) jg pop orb and mov ljmp inc int3 xchg and pop addr16 add xlat js xchg sbb cltd dec pop cmp stos rcl popf sbb pop sub (bad) (bad) jg (bad) xor and and movsl mov jmp insb fnstenv push rorb or mov (bad) int jg sub jno enter xor sub inc sti fcmovne xor sub and or jl jg mov adc js div loop jg mov lahf sarl or inc std push lahf pop stc jg test imul addr16 mov scas push into sub fild pop cmpsb lock loopne fwait (bad) cli in aad push push sbb insb sahf je fnstcw dec xchg mov shr daa jg push arpl and lock jg jp xor mov jg orl jg mov add inc lahf xchg sbb test jp xor idivb mov out (bad) pop or std mov test outsl xor push aam jg adc cmpb aaa sbb jg cmp (bad) sti dec jg popa cmpsb inc fucom test ret stos fimull sub sbb mov faddl jb xchg mov push jg (bad) addb popf xor in push lds arpl jle jg xchg scas (bad) adc inc inc xor push or (bad) xchg push cmp sbb sub je push mov not dec hlt jg mov xchg sub ret rcll lock sbb mov in mov xchg fadds movsl jg pop mov (bad) jg add insb std sub mov adc jg inc out lods push push and jg lahf hlt mov xor sub cmp loopne outsb jb fsubl jg (bad) (bad) xchg sub jae jg sub mov jg adcb push add pop xchg jg lock jg mov or jne mov adc sub sti in insl pop (bad) pushf stos int3 push xchg sti repz fstl cmp scas jg jmp leave lods jg ljmp jg cmp fisubrl ss (bad) sbb pop clc pop lds or dec pop jno (bad) push int3 mov and add xor jmp (bad) (bad) dec fildl xchg jnp add push sahf popa xchg jne jg js mov jg rol cs pop and xor rcrb mov fld pop jg negb inc cmp xor movsl aas mov test pop cli sbb outsl dec or jg jbe push mov ret (bad) int add sub fwait sahf push mov aaa xor mov arpl lds clc mov adc hlt orl jne adc xchg mov jg pusha rorb jg push mov lret sbb inc icebp jg sub inc je inc mov or adc and mov aaa jg (bad) mov sarl jg lock jecxz sbb inc movb mov inc aam lret daa in pop loop mov cs arpl add or xor and xor mov fdivrl inc or xor xor test sub fidivrl and movsb sub test xchg in mov outsl xchg jb daa inc jg adc mov adc jg cmp jg dec sbb (bad) xchg (bad) (bad) jg xchg (bad) xchg lods or out pop inc (bad) or dec sahf fdivp lret je decl (bad) or xchg mov and icebp cli bnd mov ja and nop jle cs and jbe outsb bnd ror fmuls arpl jae cld dec push sarl lods push xchg mov xor pop jg test mov jno jg call xchg aam decl popa popf (bad) enter mov push jg cld pushf jecxz mov lods aas fs icebp les scas sbb pop jecxz (bad) js dec insl aaa add sbb jg push mov pusha and jecxz and inc js dec aaa cld cmp push push ljmp (bad) cwtl jg push out cli mov fdivrp or pop cmova adc jno xchg gs in jg push push jecxz sub inc sbb pop mov (bad) add dec and sub icebp mov imul je jo add rcl push push loop clc adc jne jbe sbb jg fdivl out sbb mov loope xchg (bad) inc out xor jle mov sub mov sbb fistl popf mov jge pop jns in in adc aad xor and pop mov lret in in cmp jg mov pop loop (bad) mov outsl (bad) pop dec (bad) fidivrl iret cmpsb inc xchg outsb dec nop mov ljmp xor push cmp pop mov push vcvtss2sd fs aas ret adc jb dec das std jg mov and popf push lret sbb jg and cmpsb jg movsl repnz (bad) lods push mov (bad) mov cmp aas rcll cmpsb mov dec aas outsl jae pop mov inc dec movsb jg mov int fcomp mov jno xchg roll cmp jg pop idivb mov adc jmp movsb and nop jg sahf negl mov jg out push xor inc mov jg push repnz scas inc mov aam jns mov mov pop jg aam jl out xchg jg push and dec fwait sub adc pop mov mov inc push idivl ja or mov pop fwait stos cmpsb mov mov hlt in inc insl add jg mov jle add mov mov jnp mov xor (bad) shr jg add sarl mov (bad) and lret in test push mov cmc enter out jg fdivrl xor fldenv sub fmul pop inc test test jg inc fistl jno stos shrl daa insl (bad) adc push jg addr16 (bad) (bad) (bad) jae and pop ja jg xlat test sarb xor nop xchg mov push sbb shll outsb inc ficoml xchg xchg std or lds je bound sbb adc jg rol jne cld pop clc jg (bad) lods sbb inc cmp jbe or jae mov aaa out loopne or pop lods jl andb or int scas imul pop insb push inc sbb lcall ret test sbb jle (bad) jg lret (bad) jno xlat or aad (bad) push add fidivr repz cmp (bad) cld inc loope mov ja mov mov and xor xlat ja insb jg sub cwtl pop ja test jg aas mov xor aad (bad) insb out out cmp mov cmp div inc addb mov clc sti jg mov outsl nop daa test addl movl jge cmp test dec jle and in jg sbb cld add aam jg jge or jg,pt rol jb jbe pusha mov mulb jg (bad) je lahf bound aas push mov jbe pop pop jg cmp inc (bad) aas pop pop xchg inc dec sbb ret rolb dec icebp pushl loope push xchg call shlb xchg sahf xchg jge xchg jg js dec cmpsl push mov dec sbb lods inc jg and adc pop push adc xchg (bad) (bad) cmc ja loopne lods dec fnstenv iret shll daa push add sbbl pop test shrl lahf dec repnz mov cmp pop jbe pop and enter rorl or jg (bad) xorb xchg mov inc imul fs xlat test adc in mov dec xchg add mov iret xor inc or jg and sbb jg xor inc xor outsl ffree sarl (bad) cmp xchg jbe inc pop enter fs mov dec mov mov leave dec inc push lahf sarb aad mov mov sti push test outsl xchg push hlt jg push or jns ljmp jg mov and jle inc (bad) repnz dec mov (bad) jg lcall aas jns adc xchg fnsave nop jg xlat test xchg scas call (bad) push mov stos push jl gs dec push sti and push lret mov mov fildl subl jmp jg inc shrl sahf insl out scas xchg push loop dec fldl adc jecxz push mov cmp loopne jg aas mov js push fs adc incb mov pop xchg add lret dec lahf push adc cmp mov inc imull push je push push push pushf sbb mov das jg call jmp sti test dec mov jg mov addr16 sti inc and add js lret mov jns pop mov and xchg movsl and out repz xor xchg sbb es cli jg xor icebp xor push lea aas lahf sbb inc addr16 dec mov loop pop out fldcw aaa jns xlat mov in sub push outsb fdivrl xchg push shrl jg push mov jg cmp cltd shl and or jmp pop rorl jg adc cmpsb jg arpl sub out and (bad) jg adc inc jg jae nop or insb cmp jg stos icebp jo pop xor hlt popf push outsl xorl push xorb pop outsl mov aas inc cmp dec sbb jg jge jmp aas aad fs arpl jg test jl jg jecxz dec (bad) jbe stc mov cltd aas pop packuswb jg es pop jg push or add xor dec sbb outsb inc fidivr dec xor out add daa xchg lds jg (bad) add sbb scas clc test bound jno mov fcoml out mov sbb outsl scas popf aam je imul ret mov add jge cltd inc xor dec xor adc aad mov mov je in sub sub nop jg dec mov jo and rorl test (bad) ja mov mov pop mov int xchg fimul inc xor out out rcll mov stc mov inc pop jg dec jbe ss inc int add inc and jg repz or (bad) jg pop ret cmp arpl pusha adc mov jo xchg pushf xchg jg mov jg sub addr16 (bad) mov cmp push mov xchg mov jg cmp arpl push in test xchg mov inc rol adc movsb pushf popf rep aaa push ret scas mov jg inc lock aas (bad) and pop push int dec jno popa mov mov mov mov and push push xchg pop xor and mov lcall test or cli xchg js and cmc out inc xchg ficoml xor jg pcmpgtb clc cmp out adc ds add jge or push jae pop dec das mov outsl jp inc sarb stos push inc pop mov push jg int dec je hlt pop inc pop popa pop jg fprem1 inc xor imul movsb and inc inc jg outsl sti jp push sar jg andl js push out test pop add dec cmp push ret les into fiaddl push xchg jg das or jg test outsb aad fsubrp ret inc loope jg sub lahf dec call jae out cltd (bad) jg gs sarl fnstcw jne ds jo nop rcrb bound jmp loope out jnp mull mov xchg loop dec mov add xchg stos test (bad) mov mov mov iret jecxz jne movsb mov popa mov cli pop pop test jg mov push pop (bad) mov and cltd add and loopne or int3 je xorl sbb jg scas pop sbb pop jg push push (bad) arpl cs mov in jg inc jnp push add mov inc icebp inc lahf mov testb mov cmpsb xchg add sti aas push (bad) loop mov dec lret sbb xchg dec aaa mov lcall pop jg or push jg (bad) cli fnstenv idivb loopne add inc xor faddl sbb (bad) jg loop stos aas outsl je jg pop imul push cli (bad) jg ds inc xchg mov outsl sbb xor jg in push jle adc dec sahf sbb into rclb lea mov lahf jg or loopne imul mov jbe sub pop pop fsubr stc fstps jmp xor jl add jg xor jg (bad) sahf loop fcmovne mov imul mov add mov mov lods cmp sbb or movsb pop xchg test divl loop js dec aas jb mov into jg scas sarb imul xor popa test xor add pop lret dec jmp and add aas fs jg rol lcall cmp push sbb pusha ja fwait gs jg mov adc mull aam repnz mov xchg enter inc pop or mov imul jg (bad) xor (bad) jne decl repz stos or jg cwtl xchg push or mov pusha mov jns and shl pop jg scas hlt fidivr xor inc pop int jg dec add aas (bad) scas jp idivb inc in fwait and stc mov inc jle cli shlb add repnz fdivl or cmc pop or jg je and mov mov xor xor sarl ss rclb repnz lods mov sti sbb incb imul lds popf lret jg and shr jg,pn enter leave push les jo push adc inc les mov inc jae xchg ljmp dec aad pop jg adc mov (bad) jbe sbb and fnop aad (bad) stc cs (bad) push push pusha jg call (bad) leave inc dec loopne jg jmp adc dec dec aas sahf scas mov pop fmull roll pop mov and jg,pt test pop lcall jp inc repnz mov outsl clc or push (bad) inc cmp mov lods mov mov push pop arpl into cmp imul loop jg xchg ret dec xor ljmp aam in sub cld int pop xchg fwait mov ds into inc jg popa pop adc add cmp mov dec xor popf sub addr16 loopne cmpsb inc jecxz or mov sbb inc dec sbb adc mov outsb and pop mov jg mov insb jg int3 adc dec cmpsl insl clc ret fwait cmp pop jp adc sub addr16 sahf mov imul inc jno js fmull js scas sti pop (bad) and sbb movq mov icebp das mov xchg daa jmp fwait jg cs cwtl jg jge test xchg and jg jno add pusha adc cmp cmp cmpsb jle lock fldt pop jb lods bound push or jg push mov jno outsb add inc mov jg inc decl sbb mov push repz sarb fbld and mov inc mov test (bad) xlat roll pushf lahf pop sub jg jge cli jmp lret and popl aad jb insb incl xor inc cli mov jbe cli call jg or push imul xchg test dec add jo das repz jo ljmp loopne mov adc andb jecxz sahf and cwtl jg shrl adc inc lock aas fistp pop jle sbb fwait jbe dec adc rorl into fwait pop jmp aas movl mov out jno pop dec pop aas pop lret add dec outsb sahf jg sbb insb sub pop (bad) adc xchg es lahf fstpt mov sub sti mov test sub jg mov jae jg (bad) gs insb std cs jg xchg je test imull fiaddl push mov lock aas cmc cmp lret push dec dec arpl bound es mov xor or les cltd lds imul jmp xlat xchg in cwtl or jg push movsl inc decb repnz movl push repz push movsb pop movsl mull rolb dec add pop and push addl (bad) cmpsl int3 hlt outsb cmp addr16 out (bad) push ret inc cmpsl clc mov dec fisub jg,pn rorb andb cli fnsave dec mov outsb xor daa std test mov fcoms pushf adc dec clc scas js inc push scas xchg mov out dec xchg lods movq rcll push (bad) insl mov push call xlat ds xchg dec cmc popf dec or mull push hlt outsl mov mov pushf or cmp sub sub jg inc test jae aam dec xor pop push xchg insb test mov and call xchg pusha dec jg xchg int push dec outsl scas jg pushl jg jno jnp jb push lahf cmc inc lods mov adc sbb push mov fstps clc pop inc jg xchg inc lock jg popa jl inc (bad) dec lcall mov jg pusha test out sub popa adc dec adc mov lea push jae dec ficoml sbb inc mov incb popa (bad) push push mov stos inc in int sahf std xor (bad) mov divl sub bound loopne add je xchg pusha ja cmpsl negl ja jg sub js sub jg mov adc mov xor xor pop xchg pop scas push cmp test and popa pop jg pop pop jnp lea aas loopne mov dec stos clc lret sbb push pop nop outsb aas mov repz mov jg jecxz scas imul pop jg test adc dec rolb adc mov jg sbb pop shll or pop repz jnp pop sbbl or xchg fldt jb xchg fistpll jg ret aam push cmp mov mov sti jg sub fcmovbe jg sub pop les lret repz rcll jb arpl outsl mov cmpl push inc loope xor sbb sub jnp inc scas sti aas inc (bad) icebp cmc or add push aam or cmp pop nop adc popf insl push insl xchg sub cmp in ror popa (bad) mov mov cwtl lock xor xor add add push push jbe (bad) push in pop ss int3 aas je mov inc out cmc ret outsl mov sar pop mov fnstcw dec stos or sbb cmovg jg pop test mov lret push mov pushf and enter and cmp sbb std jg push lahf mov aas repnz cmp arpl jg mov enter push jg sub xchg in pop cmp clc sbb mov gs xchg xor sub rcrb arpl outsl pop xchg imul jle popa out test jge sub cmp inc jnp lds mov jg dec mov inc jmp sarb lcall mov ret pop inc add (bad) mov xor fild imul int3 jg xchg xor icebp ljmp and push mov mov mov dec xlat outsl push mov aas xor cmp jae push mov pop inc jb jg aam xchg cmpsb stos xor dec xor push scas jg and and jg mov or pop enter mov pop shlb rcpps jg (bad) es mov cmp mov jns push test mov and mov outsb cmpsb cmp gs outsl loopne pop lret add pop jg loop inc dec sub fadds cmp sti jg ljmp jg das (bad) and lods lcall sbb pop sbb push pop aad lods js lock sbb pop xor fidiv ljmp daa and jns lock jg adc jno je cmp xchg inc fs loopw cmp sarl test fwait test mov inc popa inc jno push pop call fwait outsb jg fnsave sbb push jg dec cld scas das scas pop or xchg fisttpl jg jmp js sbb cmp jg mov xchg jg and cmpsb and pop push xor or pop in andl ljmp cmp loopne fnsave add rclb in jg mov or dec push pop popa bound jg stos in add sbb mov adc jg xchg jecxz jne pop es loopne ljmp and adc mov pop and add (bad) push and jp dec add out push in out jg or cwtl in std xor in lods sub mov jo (bad) scas inc or mov movsb (bad) fs jmp lods dec fidivr jg push xchg pop jne rorb cli loop repz jg mov test pop fdivl test (bad) xor fcomp les int jno movsl clc xor xchg ret hlt cwtl xor out pop lock scas test pop mov inc sbb icebp mov bound push pop fdivrs mov or jle inc sub push pop and jge xor add leave ds in jg movsb inc mov in mov push lret push jg out inc or sbb jg and rcl jg xor ret arpl push push pushf jg dec bnd imul and xchg leave xor (bad) jp pop in jg mov mov add loop (bad) pop mov les movsl dec lcall add sub mov sub mov xchg ret fidivl jg jb mov xlat (bad) dec adc outsl mov mov repz adc dec push (bad) jg out mov cmpsl jno fnstcw ror repz pop aas test rorl out xchg dec jno inc ljmp and push mov inc mov loope push aas ret icebp or dec je mov jl or in jg into cmp jecxz mov sub push xor pop aas scas and or mov jo inc xchg jg sbb fadd and fidiv fstps mov roll dec jg out xor sub ret xor jb mov popf ds lahf inc xor fstpt sub andb lea aaa mov jecxz or cmp fs test jg adc jmp mov outsb sti cmp mov mov les ss adc xchg arpl mov aas jne cld outsb lock out pop dec xor push std push pop mov pop arpl add clc into lods lock test inc xor rorl fiaddl movq jg jl addr16 jns jg daa (bad) insb dec mov mov fisub jp cmp fsubrs dec insl rorl add inc sub add mov dec out pop xor jge in (bad) mov jle mov fwait push push inc xchg inc cltd mov lods incl sbb jg pop popa out imul (bad) inc jae rcrl jg inc test mov inc insb xchg stc mov sbb pop pop shll pushf sbb fsubr clc dec xchg pop mov ja mov push jg cmpsl xchg xchg dec cwtl jns jg and inc mov inc push rcrl jecxz cmp cmp cmp clc jg imul push inc xchg push mov lods jg push stc cltd gs aas sbb and lds sarb std jo add jg mov aaa int push inc add mov fwait movsb ret inc jp cmp insb sbb jb jge dec lahf xor fnstsw nop inc test iret mov xor adc stos sti adc arpl mov les jae pushf adc popf enter pop mov cwtd out imul mov mov sub cld jl xor scas pop (bad) mov jnp and orl test ja mov ss jg pop leave scas fisttpll mov sub repz add leave xchg and jg std js lcall cmp out inc adc repz out or sbb lock mov rcl stos scas xchg ret jg mov clc cmc lahf push std ljmp (bad) insl inc int (bad) and movsl ret jg in stc ss sti inc mov cld adc inc aas push fstp dec sti mov pop dec inc mov lret mov mov aaa sub xchg imul jne daa sarl loop xchg mov dec int xor aad pop or mov fldcw outsl mov or jmp dec test das rcrl inc fwait mov js xchg (bad) test mov pop icebp dec pop daa lock pop jb sub add fmuls rcrl xor arpl mov ret dec cltd ret mov mov adc loopne lods int3 movsb xchg jp and mov jg xchg sbb pop (bad) mov in jmp repz cmpl (bad) jnp lret adc stos adc out fistpll call and mov mov ret (bad) lods cmc mov add xor shrb inc and std jg ds rcr adc jg or push xlat jg stc sbb les push adc (bad) xor sar pop adc lahf jg call ljmp movsb or cmp add jg pop push mov ds dec imul aam add (bad) mov test push pop sahf push adc test outsb fdivrl idivl cmp add mov pop jmp and jg mulb pop adc cmpsl jl sbb sbb or push pop mov subb pop scas cmp pushf lea pop xor call sub or push (bad) jg or xor push jg,pn inc fsubrs mov scas jg push frstor inc push jg pushf jmp sarb outsl (bad) lcall cld dec dec xchg push add jo out js aaa scas mov out mov sti inc jle popa mov push fs dec (bad) sub mov repnz xchg jmp mov pop pop shlb inc adc mov loopne jg (bad) xor (bad) lock dec int3 pushf jb stos int cmp fisubrl std sbb loopne (bad) inc push push outsl insl jnp jg ds mov ret js orb ficom popa mov popf and inc xor scas sub stos out jg ja or push jg cmc in divl push iret imul pop (bad) jl pop fistp jle xchg sbb into add adc mov add xlat jg xchg or daa mov mov jp or jle and or adcl lcall or jg vpunpckldq mov pop or add mov xchg jns bound pusha sub jg ret jmp int3 sbb ds fs into data16 insb pop mov xchg sbb mov repz nop stos cmp xchg inc aam cmp idivb pop pushf sbb jg scas mov shrb cmp xchg xor pop xor sbb subb and sbb jg out inc fstl adc or inc push lahf gs aas je shrl sub dec les in mov aas shl nop ret pop scas leave out jo and jg iret and cld push adc mov out sbb jg pop pop jge push mov jg cmp mov sbb adc scas mov xor cld jecxz push pop (bad) jo je jg dec sti lret lods pop xchg xor jmp mov inc fwait enter jg mov mov rorl pop jg mov js rorl sub test jg jbe aaa or inc jno movq mov sbb inc fnstcw jecxz aam aad in jg and (bad) sarl fnstcw int inc jecxz adc cmp adc mov dec pop paddsw lds sub sti pop cs jg push jmp enter xor ret popa hlt jg mov popf cltd jg xlat jo stc or (bad) or mov out leave dec mov mov pop adc data16 cmp jg (bad) add xchg push fiadd jg cs pop hlt arpl mov test mov cmp mov jae push or jle (bad) mov mov add adc jg lds xchg ja out bound int3 or xchg scas pusha and jg hlt sub or and lret ret mov fdivl inc jp or repnz sbb mov jbe lcall (bad) daa mov cmpsb out outsl (bad) jg adc nop insl adc jg or push xchg stc pop rcr and mov loope jg dec or push jg and mov fnstsw (bad) out repz das adc jg mov call mov aas cmp loop dec sbb ljmp jg jge in outsl cmpsl push je xchg jg ljmp movsb icebp imul outsl mov (bad) scas and lcall mov jmp mov dec shll mov popf jg scas mov or add lods jg and pop cmpl push mov sbb clc je jecxz jg dec ret aaa and hlt imul jg in push (bad) add jo stos jg imull sub jg xchg xchg or jbe fprem1 cmp inc jg (bad) insl in adc xchg ljmp jo fimull inc aam jl cli push mov daa pop lret push ds out inc mov insb mov dec push dec jmp jbe jg negl jae add xchg jmp out xor bound fucom shrl sub sbb cli jo push cmp fiaddl cmpsb push (bad) mov mov (bad) pusha scas sub mov adc incb jg mov jg sub repz or mov inc icebp sbb mov mov inc ret jg push cld inc cs push jg and dec cmp or cmp fidiv stos mov adc inc add jg jl inc xchg sub je test enter sub cmc scas push xor adc pusha mov daa sahf inc dec mov dec sub sub xchg sub js jg mov bound cwtl test iret sub fidiv xchg add push test std mov inc outsl pop jp jle je mov iret cmp and out inc xor mov test jb and jg dec push or es cmc jg push cwtl and mov outsl pop sbb frstor pop mov icebp dec jg mov push cmpsl inc jge push pop ja jg jmp into lahf enter loopne movntq out dec dec xor lea shrl cmpb movsb test in rcrl insl sbb xor (bad) dec push adc ja mov jbe lock sti push inc pop cltd mov test je fnsave (bad) mov idivb pushf test and js or mov nop push adc fld iret cmc mov movsb jg pop jnp mov (bad) rcl ja clc fs loope inc outsl int3 mov (bad) dec decb or jp inc scas pop jg lea addb jg jmp js jecxz pop jg add jne fidivrl or inc shll and divb inc out addb jg rcrl xorb jg mov icebp mov cmp outsw pop pop push jg in repnz out ljmp and int test adc es lock cmp out sub aas and push adc jns jg sbb and fbld aad pop jg jo neg lods js mov mov mov imul mov inc arpl gs jg mov lret enter aas xlat or dec cmpsl ds pop jmp out movsl jg (bad) data16 pushf xor mov mov aas pop xchg cltd test or inc jl sti mov xor cmc mov rcr inc xorl jmp sbb fdivs mov sarb in push xchg subl (bad) fadds cli sbb out pop xor in xor jg and (bad) mov jno mov ret into (bad) loopne popa aad pop pop lcall stos jg ds push rolb in jg jae cwtl push xchg mov inc fwait mull adc mov or dec jg int3 push push add test pop mov fs mov mov pop out (bad) mov mov divb (bad) loop mov das popl jg lcall les push in push pop dec xchg popa mov mov xchg pop fisubrl ss jg int3 cld push or and pop les xchg int3 clc movsb or sti cmp fldcw jg shlb pop xchg push popa mov dec out and mov aas aas flds into xchg sbb jb pop loop mov mov cmpsl mov lods in pop imul pop fcomps mov xor popf or push jg into loope lds les jbe (bad) (bad) sub shr fstp fwait out mov sbb push in pop mov cmp lods aas pop test jecxz push cmp mov scas jp xchg scas jg fsts ds mov call sti fdivrs notl xchg push inc shll addl jg sub je mov imul jmp enter fs in mov sbb adc cmp ret out sbbl cmp call jb jg sbb imul push jle push adc in aad jg neg repz lret cli das fild aad test push or dec loop insl add dec shr xchg fidivr lahf es mov je stos or arpl lret into xchg pop xchg popa push decb daa movsl addr16 add jg jmp loop (bad) jg sub insb mov jg data16 pop icebp movsb loope jg sahf pop xchg sub dec pusha jg jno lds sub sbb stos fistpl cmpsb inc adc inc incb js cwtl hlt push test push jg mov test out (bad) xlat jl aas stc cs adc add inc sub add mov and sarl ljmp push jg mov scas fimul test aam mov and jg adc addr16 (bad) repz mov push mov jg pop sbb aam je jg mov jo push in jg jge mov repz adc iret mov ja shll ret pop dec std sub test test pop dec jg jmp sub jb js push jne or stos xchg jmp mov jg icebp lcall aaa imul dec imul pushl or nop mov mov test aam cmpsb fwait scas mov pop cmp outsl outsl add add icebp push jg push fstpt mov std mov jl (bad) fstp jp sahf js jg scas arpl clc dec adc outsb inc pop or add sahf sub mov pop (bad) (bad) mov pop pop mov inc push jecxz sarl (bad) fidiv repnz outsl mov mov cmp jg mov nop into aas imul lret fdivs cli movsb mov jg xchg push dec js jo stos sahf pop pop jge outsb mov pop jbe xor jg jns xchg sbb (bad) pop jg mov mov movsb mov jns test and (bad) mov xor pop xchg (bad) lahf in xchg ficompl jg std sbb mov mov lds push pop add je aam adc pop cwtl jns in mov jg cmp jge out xchg lahf stc push lock in push mov mov cmpsb jg cmp mov xchg rorb pop jg ljmp cmp popf mov leave xchg and inc push fcomi lds push enter pop xor repz push fwait sbb push pop (bad) in mov into mov adc shr sahf jg aad jo pop jg and stos add pushf ss scas push mov pop stos jnp mov data16 outsl ljmp lahf add push sub adc pop push sbb dec or push push and add pushf xor and adc dec jg fmulp jmp jg cld das pop (bad) dec mov jg mov xchg pop insl fbld jg enter jp insb jg mov xchg sub sbb mov cmp jp test adc jbe fsubl cmp jg int and cmp es dec in mov lds xchg jecxz lret push arpl fisubl mov fwait push or cmc mov or sub sub ja or fmull cmp arpl jg mov add sub sarb jae es cmp js jmp aaa rol mov sbb jno dec inc iret insl adc adc int mov jg cmp push adc in mov sub jg out test dec inc repnz iret mov adc inc jbe repz fidivl lods ja gs loop insl add jg pop push jg ss imul inc xchg gs lahf mov fisttpll jg movsb (bad) and data16 enter arpl jg in cmp xor xchg sbb inc ja cld jecxz jg pop call add pop dec rorb mov jg jecxz arpl dec add test sbb push jo add adc sbb mov or outsl adc mov sub (bad) int3 jg bound (bad) mov jp pop cwtl mov fnop mov outsb ss jmp popa (bad) (bad) fistpll je in daa mov lds movl mov stos push std imul (bad) fbstp outsl mov loopne xchg and nop mov rcr ret jg incb adc mov loop mov xor inc outsl (bad) idivl or lods mov (bad) mov daa pop add sub jmp gs pop push sbb cmp repnz lret or jg sub mov (bad) mov pop or aas inc cmpsb outsl repnz pop sbb sbb push sub xor addr16 addr16 rcll cmc test xor xchg ret cmp imul fs js outsl outsl fcoml fs dec je popf lods test sbb jl nop pop rclb rorl jg aas je xor pop mov out push pop mov push xor shrb dec stc xlat repz jge jg flds jle pop xor aas lret popa jo stc push pop mov test pop inc jg les arpl dec mov cmp jg push mov stc adc jmp les iret pop leave add and sbb test (bad) jg mov (bad) addr16 out fidivl pop jg nop cmp jg jnp out (bad) jb dec mov cs scas outsl add inc or mov jg ds cmp aas push push jg rcr or cmp scas adc pusha lcall mov lods pop xchg setns icebp lods jg or (bad) scas addr16 (bad) jb push pop xor sub sar jle xlat test sar (bad) jg xchg xor cmp pop lcall arpl jecxz pop fcompl dec pop mov xor dec jne jg repz jg cmpsl imul mov jae inc inc inc sbb add (bad) ds mov fcoml jp dec push push jg xor mov mov mov ss outsl jge das xlat ljmp orw push out mov inc lods mov cmpsl enter sahf aaa and decl fnstsw fistpl shl mov mov mov mov jg stos cmc fucomip fmul stc inc dec inc mov ret shl lds aaa bound and push rolb xchg sub inc (bad) sub rcll iret jmp je imul or jg sahf adc insb lods jo nop popf (bad) jae fcmovnu lods mov movsb jle mov jp dec js daa cmp mov mov in sub add mov xchg insw out adc mov push or cmpsl inc inc cmp sbb pop into mov cmpl fs fwait ret ja sbb jno mov jg add mov pop xorl jbe jmp inc cld mov loope xchg loop pop loopne jb pop js push sbb or push add mov cmp aas rcrb out jae loopne mov push mov inc ret jg jl xor pop inc inc (bad) (bad) push adc add xchg out push loopne push jg and push js sbb jg inc rcrl jo sub jmp inc xchg in jg mov in jo xchg jg rorb xchg es jmp call xorl xchg out pop pop clc (bad) mov mov mov sahf mov out adc xor adc out in pop lret inc pushf pop fwait leave sarl (bad) (bad) cmc int out ljmp and cltd inc jg mov mov xchg stc push mov (bad) cltd mov inc sbb xor push (bad) pusha (bad) push sarl mov in out mov (bad) and mov xchg jb jg (bad) mov inc jg pusha mov out stos sbb test jg (bad) aam jbe movsl lret jg mov fcoms jg pop jnp inc mov bound iret pop mov push in mov rcrl jno xchg xchg je pop outsw ret movsb aaa lahf cmp int3 les dec jle aam mov loopne jg or sub je cltd xchg sbb jg adcl pop jg (bad) js sbb add inc loop and and pop mov pop insb or push add inc lock std push mov aas dec xor push arpl adc (bad) cli inc (bad) jbe pushf inc adc pop and jg or (bad) arpl and jg imul jg pusha dec fwait push mov sbb clc xor mov fldt test stos pop or push lret or data16 sub jg cmpsb xlat mov jg dec dec add and mov jg inc repz cmpsb fistpll scas lea stos mov mov push fdivrs popa mov lods mov mov dec jnp sarb dec dec enter daa pop sub mov mov push fs add clc jae adc rcr mov repz pop and shlb cmpl mov iret stos das dec inc inc push sub mov lcall sbb mov mov cmpsb pop add div push stos arpl or shrl lcall out cmpsl sbb push inc stos mov jg sub out daa jp jmp cwtl subl mov inc or jo (bad) pop jbe and int3 jg in inc scas ss addr16 or and inc das mov div push push outsl xchg out adc push fwait mov mov (bad) jge jmp dec popa stos mov out pop cmp imul push push mov jo pop aas mov xor (bad) push sub push jg xor adc mov orl sub push jg inc mov adc pop mov in inc xlat fdivrl or stc xchg loopne add mov jge jg mov xchg imul inc jg adc sarb out data16 jg cli pop mov xor jg mov xchg push mov flds xor mov add fldt xor pop add xchg clc int inc lods cwtl mov pop test fnstsw into push fwait add dec adc sbbl mov enter and xchg js mov dec and shrl mov pop push adc daa stc cs sub pop mov in stos jg pop popf das jge stc es sub add jg adc push inc (bad) fidivrl test inc add inc neg cmp cmpsb loopne ss scas inc jae xlat scas aaa cmp push adc add in mov movsb xchg insl jg or dec rol jg (bad) mov mov insl push mov pop xor ja in sub sarl jo xor fbld lods jne adc scas inc lea cmp fistp jg int cmp ljmp and pop (bad) jp push mov add push xchg dec jns xor sub inc cmp bound mov mov mov dec scas fldt sbb popf push pop enter divl into adc mov lods sti inc icebp add dec fnsave xchg jp rorl imul imul or arpl pop mov pop jg mov aam jg fistpll sbb leave xchg add cld xchg jg add jecxz jg xchg iret fcoms jg mov int3 inc adc (bad) icebp jno mov lret mov jg mov mov mov es mov addr16 push push ds xchg lret jb pop or popa add in push daa mov jg sub dec pop jg aad inc dec cld vmovdqu test mov les pop adc test mov addr16 dec inc pop lods ljmp fnsave les lret jg int or and jmp loop in mov lds sbb jg fstpt js addr16 mov sarb fstps pop adc push sti or sbb jg bound test adc push sbb (bad) int out xchg jg add lods aas xorl pushf popa or jl dec sti adc mov dec pop and inc sub movsb outsb out cmpl xchg fsts loope push jg pop (bad) jno iret (bad) mov (bad) outsl int3 mov enter sub out lret rorb xor xchg sbb std add xor aam test test leave jg xchg (bad) jmp aas jp lds mov push jns mov outsl push fadds aas fwait adc enter lahf dec das sbb jg imul xchg jg lds jo out sahf (bad) mov sub cmpsl pop inc jg cmp out inc jg pusha (bad) push loope stos test imul mov mov popf jmp jg call pop fnstsw lret mov test xchg sub addr16 xor cmp add cmp rorb jg pop dec or fbstp ror addr16 clc js adc jb (bad) mov lock dec stc cmp add pop add lds jns mov inc adc dec sti inc es sarl mov jle mov addr16 outsl add mov sti loopne xor ljmp mov mov dec adc es repnz (bad) insl mov sbb addr16 dec test scas dec lods pop adc fwait (bad) mov enter sbb inc dec (bad) hlt jg xchg pop (bad) cmovbe mov xchg cmp jg pushf add aas leave push push ja arpl scas push mull sbb outsl dec (bad) jmp push adc call mov (bad) lock pop shrb pop aad inc mov pop sub jg lods sub aaa mov jg sbb fild pop bound mov imul adc scas push push jg in sub int3 cmc sub testb lcall test inc sub jae inc into push ss aas out decb arpl cli divl jg sbb push push cltd sbb fistl mov sbb mov cmp lcall ret add jg push xchg mov in aaa mov push jg push mov icebp rorb adc pop jno lret cmp adc jnp and popa jg mov jb jg and call aas and ljmp mov pop xchg stos add sbb in adc out xchg fcompl or mov pusha arpl cmp negl dec xchg xchg lea sub sub jmp mov movsl and ret jg out bswap push fnstsw lcall pusha sahf in loop dec cwtl insl cltd stos lahf (bad) cmpsl js cli jle sbb imul adc pop dec mov out mov repz outsb fdivrl dec mov jg repnz jnp jo jl jg mov outsl hlt inc pop pop jg fdivrl lds push movb push cmpsl out aaa push or cld jno outsl out fisub jg divb into or jmp test mov jg mov inc loopne cmp inc jg scas mov jg gs fcomps adc mov mov xor mov (bad) ds aam mov cmp jp aaa std mov fnop stos jge jg pop pop xor jg scas cmp add test xchg mov subl std dec push aas lods xchg cltd cmp jg ficom pop jbe mov and (bad) xchg inc pop int xchg and popa testb stc adc add pop xchg dec lret add jg repz push cld out lods jg cs sub jno add xor sbb insl into cltd imul scas and je push lret mov enter mov arpl fcomip (bad) in int dec aas popf fisttpl ja test mov jns hlt iret adc xor outsl (bad) ror out sub push icebp jb sub aas xor jae out fiadd test and push pop jbe xchg lods imul pop pop xchg mov mov jle inc xchg jne jg (bad) leave (bad) cmpl dec in push lods inc rcll mov mov jg push and jg sub aaa ret in cld loop outsl cli mov sti inc test test mov jg bound or xchg push xor lahf fidivrl inc mov cmpsl jg sbb jle pop mov mov sbb sti bound lods xchg xor (bad) jo ficom inc cld jo out fmul and push add add enter push or aad fwait xor hlt and xor test (bad) rorb das dec inc push lea jg xor (bad) lahf cmp lcall int inc insl (bad) push cmpl lds dec push xchg mov xor scas adc sti dec sbb pop xchg mov cli inc xor mov ret daa inc jg imul jo stc pop lods mov jg ljmp jg jl arpl pop out or push aas or movsl dec ss sti cmp push je mov xor pop pusha cmc subl pop mov adc out jl mov cmp jmp xlat mov (bad) pop les pop sar inc xchg mov sti es cmpsb inc (bad) repz inc pop fwait mov ret push jg insl es and jle adc mov pop pop adc je (bad) and imul xor lods push adc jg stos or pop sbb repnz mov std cmp stos (bad) mov mov mov inc stos movsl jg pop xlat mov inc jg sti (bad) jmp fsts cmc jl push sbb pop lcall jle inc xchg popf data16 pop mov mov stos mov cmp pop push je jecxz pop push loope js sub fwait mov icebp inc flds js (bad) rorl inc adc ret or cmc bndldx pop jo pop test cmpsl fcos pop mov push jg test mov add pop les add jb shrl push pop jg fdivs adc jg sti arpl sub fild add cmc fwait (bad) jg mov (bad) jne fimull xchg ret add jno sti mov fbstp out xor imul mov mov jl das adc inc inc xchg test jg adc dec jg and fwait stos fisubr push faddl pop addr16 inc dec idivl fisttpl subb dec vpunpckhbw and xor aad cwtl mov icebp pop into xor jne fwait insb or push mov pop jge pop add pop push pop xor loopne jmp or aad pop dec jg daa adc test cmc aas imul mov mov xchg cmp stos out cmp scas or xor pushf rcl frstpm(287 stc data16 jo lods cmc (bad) jns jae cmp inc daa ficompl inc (bad) mov sar xor test sub and pop pop repnz jae orl stos jg mov ljmp pusha dec mov mov add cmp jg ds adc aaa bound dec cmp imul dec test xchg pop add mov cmp mov sahf adc xchg loope nop mov inc adc ret ja mov (bad) mov add jg iret cld clc xchg cltd mov pop mov or les mov pop test xchg cmp push arpl jne jg sub fwait mov rolb jecxz adc xchg mov xchg xor pop dec push xlat outsl mov lret scas push out pop or mov bound repz jae jns loopne inc clc std add xchg push sbb push xor dec fidivr es fstps jns jg inc mov mov push pusha inc pop testl rorl jg lea xchg mov inc jl (bad) shll xor xchg test lods mov pop push push lcall inc mov cmp (bad) xchg pop shll in add xchg pop outsl jmp subl xor mov outsl lock sub lcall jns outsb js mull gs adc test or inc mov cmp dec jp ret cmpsb icebp daa mov pop inc sub jg ror inc aam sub mov adc pop jg sbb pop mov adc cld pop dec gs mov jo push shlb jg dec sub les addb aam mov cmp popa jle add out sbbl jno sbb stos push (bad) pop outsl add test std adc cmp aam jnp ds push jg dec sbb fwait rcr lock or inc jbe jg imul loop out push iret xor jmp sahf mov ja dec pop sbb jg (bad) and add loope jg out test push xor jae mov push jg mov leave sub mov repz test lret mov jae scas and jecxz mov (bad) je nop jge inc jg mov lcall jbe sub mov and mov jno dec mov out mov cwtl out fwait add sbb fbld push dec test movsl mov pop mov dec cwtl pop imul mov push pop xor jg mov cmc aas ss xchg add jg mov push jg mov dec popa cmp iret dec mov std mov inc cld loopne addr16 jg aas mov nop aas dec mov ret add xor mov rorb jg lcall push cmc jg movsb sbb dec les sbb inc fistpll aas push add pop push shr js jle mov lcall fstps subb fistpl iret (bad) ds sbb and pop xchg (bad) popf clc aas addr16 orl out jae fdiv outsb xchg jo or test dec lods sbb jg cld dec pop cmpsb jbe cmpsl aas push push (bad) cs jg push pop test xlat jmp push inc rorb out lea (bad) push iret jecxz das stos sub jg jae lahf xor daa add mov cmp mov in push mov and stos inc and and jg in add jg rcl jb add mov in dec rcrl and divl fwait pop jo cmpsb hlt nop out and cs clc pop mov jnp out jg or adc shlb cs push les lea dec imul aas adc mov inc cmp sti mov and leave sub (bad) dec dec jg adc aam jns add mov jg xor add in inc insl js sub popa es jg or mov fidivl fucomp push inc sbb mov ljmp lcall jg out inc inc mov jecxz into sbb push mov cmpsl mov mov cmpsb add pop decb xchg jne loop nop sub jo test es sbb xchg jp inc ds out jae inc pop push (bad) xor jg add xchg (bad) add mov mov jne jno subb movsb cmpsb (bad) out ret jmp jb or mov push loope sub mov in mov mov xor ret pop aaa add cmp xlat jecxz xor and or rorl jg dec shrl mov out dec inc push (bad) mov dec mov push lods out mov in xchg jns cli cmp push iret ljmp movsl push icebp push stos cmp adc lods pop dec sar mov cmpsb xchg pop addr16 cmp mul mov sahf or rcl bound mov in imull jg,pn sbb lock xchg xchg aaa mov or dec fist mov dec push in div cwtl iret pop sbb mov adc inc lahf idivb in inc adc sbb (bad) test fnstcw sti push fimul scas mov cmp inc sub push jg (bad) popw psubq jg mull push mov out test lock jg popf icebp aad add mov adcb cli mov notb popf fadds (bad) daa mov (bad) jecxz dec enter scas fisub movsl rolb jg ja das and xchg loope int addr16 mov in pop dec pushf mov jg mov mov jg in inc fucomp sarb ds shll fmuls push sbb jg cltd add aam scas decb and outsl pop dec aad pop fdivrs jg stos xchg lcall add push adc jg lods cmp jg movsl mov fnstsw pop mov push loopew dec xor jg dec sub xchg pop and in mov (bad) (bad) outsl imul cmp cmpsl and xchg jns sbb cmp mov ds lret call lods adc cmp and bound and jg ret mov dec push lock sbb sub loope aas mov fucomp mov loopne mov mov ret out je les popa push addr16 sbb jbe dec inc leave cmp jnp (bad) repz inc jg fnstcw or sub stos pop idiv scas push dec jg sbb jne lret jo clc repz or repnz (bad) sarb mov popf adc jg test cmpb jg xor js pop popf sub pop dec pop repnz ja and push push cs cmp sub test xchg jg push push insb cltd jae loope cwtl insl xchg mov adc xchg jmp gs jg push mov mov lods ds lret mov clc or lahf push inc jg sbbl lods dec fistl rolb and mov mov or push sbb into jl cmp push cmp adc jecxz jg dec and lret int cmp xor sbb ljmp cmpsl pop inc sbb daa out aam xor sbb jge outsl dec sub int pushf je mov stc push fsubr jp cld fild hlt stos shlb movl sbb xchg mov ret or jns fisttpll and fbld or dec mov divb in fidivr sub xchg roll push (bad) popl xchg cmp sti jg les sub jle mov xlat cmpl lock je and fcmovb pop push jg adc mov xchg mov int pop mov incl push sbb mov dec jne out mov mov jg test test sbb cmp or mov rcr cwtl cli mov (bad) push jbe inc fcomps dec repnz out inc int dec xchg mov pusha lret out bound xor mov idivb inc jno pop jbe stos adc scas das repnz jg fcmovnbe mov addr16 aaa jg ds shl bound mov ret shll push cmc cmpsb cmp inc in adc movb fcompl jg pusha enter xor pop inc fcom sbb (bad) jg xor (bad) iret jg lds loopne mov pop cmc xorb jg xlat das out push push add stos fbstp jne xor push push dec mov sbb je push xlat test xor and jg mov xchg xor inc ret ror jg idivb sub and test pushl das xchg mov xor pcmpgtb stos jg mov mov xchg into dec sub cmc mov sub jg xchg ds pop xor outsb jo pop dec lods dec das xor cltd pop add jbe jmp mov jg lahf sbb jns pushf sub stos mov popf or test jg mov ret adc jne mov (bad) sbb js test jno rcrl push mov cmpl and pop inc popf jg leave sub scas je fdivrl jmp inc pop jg mov inc jmp addr16 ds xchg ja jbe sarl sti repnz ja lahf fs insb jg pop into movsl mov xor sbb dec mov out push fidivl popa add mov rclb scas cs addr16 dec xchg stc xor jg push jo xor mov push inc rolb jg test (bad) sub (bad) outsl mov sbb dec dec lods (bad) js and outsl mov data16 fld mov mov js dec xchg lahf cmp scas bound sbb and inc and fcomi les xchg (bad) adc out jns jg or and cmp fs dec dec (bad) xor jge adc call call in mov push push cmp lret aas jo and pop pop lods push lock sahf push out sub lcall int3 in cli cmpl xchg dec add roll scas add scas xor out daa jg and movsb aas fst mov inc jo mov pop lock cwtl popa lea pop sub lcall rolb divl cli mov inc lods adc lahf xor (bad) push neg pop int aas sub mov jg sbb cmp fwait ret sbb bnd mul iret xchg sarb (bad) cld mov mov lds inc xchg cmp jg inc push loop ds insb mov push jmp arpl push sti or or sbb xchg mov fwait idivl in xchg divl dec enter aas jle test adc inc movsl loop xchg outsb xchg insb or push jg inc ss (bad) insl mov jg imul add data16 pushf pop lods xchg daa pop (bad) jg and xor jg call lock (bad) and jg sub cmp push test addb jg sti sarb jg out xor sub insb ret push mov xor lret jbe push loop jg xchg push lret xor stos ret or cs jg (bad) fsubl pusha add jg loopne jecxz aas enter cmp cli push jg (bad) aad (bad) jg ret (bad) pop stc mov es dec sbb popa jg push movsb and sub xchg inc jg mov lret pop jbe movsl adc int3 jmp mov iret xor jno cwtl jle pop jg push jns jne rcr loopne jg addr16 jbe jo dec jg call push adc jnp stos lods cld or push mov mov stos inc jae ds insl adc xchg jg inc sub scas popa pop and add popf jg inc (bad) rcrl jg jle out pusha dec inc jg insb mov (bad) mov cltd pop aam popa inc jg std mov movq adc fwait xlat and out add pop stc popa insl mov pop call cmp and popf sti int popf add fidivrl test imul pop push mov mov push movsl scas lea loop inc sarl insl les xchg push jno imul or ret add jg out (bad) ficomp adc insl adc jo push pop mov add sub (bad) mov dec aad mov das pop push add bound sbbl jg repnz pop dec andb push xor pop repz pop adc cmp es mov mov sub sub shrl cmpl sbb cmp jg xlat insl dec std adc jl into imul push scas xor mov dec loope cmpl or lret or repnz push clc movsl inc aas jg cmp int ss popa jnp pop mov pop xlat addb dec sarl jg push jae add sub push xlat mov push into push xor mov mov cmp jns adc mov aas dec jae scas and lods outsl sbb jmp pop insl out rorl aas adc insl call js test and jp mov sub mov adc imul mov xor sbb aad push sub jo lahf inc xor and outsl cmp xchg dec (bad) jbe (bad) xchg jg lods stc mov jle sub push adc call pusha cmpsl jg mov out add fs int push inc stos adc mov (bad) mov movsl cmpsb nop jmp pushf je mov (bad) pop dec xchg in jg inc nop fstl cmp dec mov mov sarl enter cli sbb das and jg leave (bad) sar mov pop or xchg or out mov imul pop gs xchg mov in push pop das out js or mov dec xor xorb ljmp stos sub aas icebp out clc int inc xchg jmp pop jg hlt cwtl aaa fsubp add jnp lods dec lock jge fmuls movsl test mov sub mov push pop fwait and out nop xchg add andb lret jg sti les jg ret or jecxz dec repz or int dec fcoml test loop jg gs mov pop iret cmp push in sbb call pop push pop mov xchg int push shl fwait cmp push shr cmp (bad) mov fdivs sub into xchg dec pop jg pushf and add cmpsb jg xor or pop orl jp cs ror adc xchg imul mov sub sub pop (bad) lahf test aad call xchg bound fisttpl subl inc lods faddl xchg rol or sbb and add inc fnstsw popl das cmpsb add sbb imull mov scas mov inc (bad) xchg cli inc faddl push loope repnz push in out dec out mov rcrb jmp outsl movsb sub js jg clc jne jns sbb mov cmpsb jg lods lds sub jg outsb sbb cmp imul les cmc orl mov in jo mov mov sbb cmp xlat mov andl jg aaa lods fldl pop ret or mov mov (bad) outsl push inc jg mov lea jg pop stos jne rol lret std xchg int popf add fstpl and mov xor or push mov scas mov ja sbb or imulw jg or cltd cmc decb xor ss cld pop cli jnp lods cmp sub dec call mov inc dec repnz add xchg js,pt dec in mov mov jg roll xor stos push jg or xor push mov jg mov sahf lds scas addr16 lea xchg in out aas enter dec addr16 jg inc mov xlat ror loope sahf aam jp into outsl dec cmp ljmp iret inc add and xchg roll inc pop jg mov fadd lret push sub lahf jg fidivr jg mov mov jg pop cmpb mov cmp mov sub inc repz test test or push and loope aas jmp iret add js xor in jg fisubl loope add jg hlt movsl scas pop xor mov in insl jle mov enter lods sbbl jg jmp cmp stos cmpsl stc or cmpsb sub (bad) push pop jl xchg jg or adc sub cmpsl jg out xor pop out mov or and inc ds popf iret idivl cmc sahf inc add mulb inc dec and insb sub jg pop lods popf mov fisttpll adc test mov mov or mov xchg or push aas jae in xor out dec test jg in enter imul sub push mov jg mov fldenv in loope sbb dec push loopne lods sub xchg iret fisubr jg test and xchg mov xor aas push out test jmp lds xor lea dec jnp aas mov insb mov mov mov add insb popa mov push aam out mov lea xchg outsl dec call xor xchg cwtl mov dec leave mov mov dec enter jg cwtl inc insb sub std leave jg inc call xlat xor pop jg jno cli div xchg mov outsl pop and call cmp pop js aas lea inc sub dec or mov pushf sarl lret js jae push cli jmp xchg mov clc hlt jg scas sbb sbb and in repnz adc je mov movsl ds jp push jg cld dec dec in ficom jg pop js jle xor jbe xchg pop add (bad) aam pusha das insb mov test jge sti mov icebp hlt mov and (bad) sahf jae in mov jg iret add cmp or dec and jg mov scas mov push jnp xchg mov cld sbb scas dec mov popl iret stos jg add in jmp (bad) ret pop jg scas sub scas xchg adc mov les out cmc mov push pop mov aas add cs movsb mov dec inc inc mov pop sub ljmp or push sub (bad) jg jb jnp sub and jg stc popa aad test jg mov out (bad) pop lods ret dec cmp mov pop addr16 xchg rcrl jle fyl2xp1 dec add jae pop add jg jne in and jg mov cli push mov push or outsl xchg inc fnsave pop mov lcall stc scas (bad) out imul cmp in decl data16 mov scas cs dec push xchg inc stc pop rcr test outsb pusha (bad) lcall sbb xor jno pop arpl in call and ds add (bad) push pop pop lea push mov sbb xchg aaa fbstp dec out jg pop jnp in call mov out push xchg adcl and mov pop mov jg adc fnstsw mov cmp jg xlat mov jp jnp inc aad mov call fsubrs arpl lret out pop movsl push (bad) mov test mov js ja mov loopne xor inc adc xchg adc xchg push bound outsb (bad) aaa and add stc cmp add scas mov pop in mov jg mov pop jg aas push adc divl pop jg dec mov dec mov mov ljmp cld dec mov lock (bad) push inc lahf mov lret in test add push call imul or xchg dec xlat mov frstor push pop lods sbb clc aad jg inc nop push aaa jle ret dec lcall pop sub repnz and loopne rolb fdivs sbb shrl pop pop sbbl fstpt fstpl inc std mov repnz test aam jg mov cmc out xchg aas sub inc dec and jb andl fldt mov dec xchg add idiv inc mov test inc push ficompl jg dec mov and out (bad) sti (bad) outsb xchg mov ret pop jg push gs aas nop arpl pop fidivrl push sub dec loope into mov xorb pop pop pusha add adc sbb mov xor pop inc outsb jg das int3 push outsl sbb mov push fist mov int3 add popf jg add mov and setb cltd decb inc lahf inc jg cli ljmp jecxz pop test add jg repnz add imul xchg xchg or dec jns add into cwtl xor pushf jg jb cs or stos cmpsl sbb std cltd jg sbb mov jg add inc cmp xlat jg mov pop lea jg push subl sahf jg xor addr16 and jg jnp js add jg xchg add mov mov and jg or dec lahf add add pop mov jbe data16 gs arpl dec jg add sub and jg imul mov scas mov dec fsubrp loop incl pop push xchg adc cltd cmpsb stos (bad) mov mov push adcl cmc mov jb sahf mov mov add inc push fistpll jle jnp xor jbe mov mov icebp or pop jg stos test das xchg xchg mov cmpsl push popf arpl movsb mov cltd push pop jle xchg jno xchg into dec xchg iret stc ret aas sarb lods cmp jg mov pop xchg jg mov push dec ds (bad) pop iret addr16 mov jecxz addr16 pop int jg rclb aas (bad) mov push xor and sub inc out jg imul int lahf out mov cmp mov xchg jg push imul xor jg mov ds mov fidivr dec sub aad or mull xlat sbb cs push decb shrl insl and pop push pop imul dec sub jg add adc test pop stc rorl out jmp sbbl (bad) dec dec push cmc ret jg shr cmpl push mov mov and dec int3 inc jecxz jg jbe in xchg cs mull in outsl or jg and or jns jmp push mov pushf mov sbb jg cld or jne out jg pop inc ss add xor sahf push insl ds addl sahf xchg aam dec scas push and movsl and lret cmp jg imul mov xchg and jg clc xlat sbb jg xchg inc push cmp pop lods aas jbe loopne repz inc xor jg sub fisubrl popf shrl sti inc (bad) (bad) jg xor cmpl xchg popf xchg jg cmpsl imul and xor jl pop scas sub (bad) dec push pop cli or outsl jns cmp mov addr16 jl hlt mov push stc lret stos rcrl mov push icebp ret fwait inc aas scas xor or add jns mov hlt inc clc pusha sahf mov imul push cmpl cld aas sub test sahf add sarb and mov jg inc fldt dec pop lcall lds dec mov sbb popl push lahf push cmp nop jg mov repnz jnp sbb js (bad) (bad) mov or dec xchg pop pop (bad) out jg es mov push pusha inc jg or iret lret ljmp jg mov fnstenv daa xchg movsb ss push fdivrs mov mov jg loopew cli in pop sti cmp fdivr sti or sahf jns fs insb movsb jg mov (bad) jg cltd test pop cmp out pushf lcall jg popa jno daa fs mov incl dec dec sbb inc cmpl fndisi(8087 sub in lods lock cltd push mov xchg fwait imul sub xchg push and cwtl aas ret or mov jg loopne out sub popf jp or jo mov pop out adc and out dec in lcall int mov mov leave xchg cwtl lds inc jecxz shll jg sti mov repz xor (bad) outsb popa jb test jg cwtd mov (bad) jno cmp pop popf popa jge inc or jg in xor hlt dec sbb add xlat sbb jg pop mov cmp sti arpl mov (bad) or loope (bad) or push cmpsl mov jg cwtl repnz or inc dec hlt mov dec jg jo sahf das mov sub mov cld jg js lret adc sub jg idivb add movsb sub dec insl push arpl dec imul loope dec jl pop jbe dec out leave sarb ja pop or mov or sbb cmc into dec addr16 cmp pop jb add addr16 loopne jns mov ret sbb rcrb subb test fidivl push push dec repz jo cmp sbbl lods lock sarl shrb sub enter cli pusha mov test mov xchg push aas pushf popf fldcw aas inc jns (bad) aam arpl inc jg lods lds je fisttpll mov je cmpsl lcall jp cmp addr16 add ds push cmp jns les jg xchg lret add fwait into mov dec movsb stos outsl cld mov adc cltd outsl popa xor jg mov push jg gs out mov pop pop pop sahf adc jns xchg cmp mov push aas cmc (bad) push scas mov inc mov push inc inc or sbb movsl xchg aas (bad) cmp aam ja cmp fnop ret jg mov faddl fildl ficompl mov imul aam or push mov jecxz aas sahf test addr16 xchg mov mov outsl pop mov mov mov ficompl pop cmpsb jno pusha or scas inc adc shll pop cli icebp pop jg pop xor cmpsl sti xorl outsl outsb ja out mov xchg mov mov scas aas lret pusha xor dec enter (bad) std jmp mov cmp mov mov inc pop call inc pushf out xlat (bad) aam jnp jg andl inc sbb (bad) pushf jg in enter fisttpl scas mov fs popa pop jl dec (bad) (bad) and jg fisubrl xchg ljmp push pop cmp fsubrp xor jg iret lcall push mov inc jg xchg jg push pop int test jg push test outsl mov lods repz cmp and sub fwait mov mov inc in mov xor js mov sbb mov lcall jg test cli mov cmovl notl fs mov push xchg test addb mov fisubr inc or jg vmovss jp sti lods jg out ja pop mov insb (bad) into xchg movsb pop mov push jg or in and js out cmp dec inc les cltd sarl mov jmp rcr in sub dec pop out lds jg xor out cmc mov cli loope dec pop cmp jg dec int (bad) mov (bad) jbe bound xchg ja gs jg popf repnz push xchg popa popa adc xchg jle sbb mov das inc pop pushf loope aam xchg jg or mov aad (bad) cmp out cs outsl cmpsb push jg ljmp and sub and xor imul dec mov xor pusha lods test stos mov dec mov and sbb scas mov pop out or push shll jg addr16 sbb ss inc pop ds push xorb xchg jg mov sub pop out in arpl outsl lea xor dec pop movsl (bad) fiadd jg jnp cmpsl or out jg clc dec movsb sbbl adc cmp out sti sbb jp jg xchg sbb out push xchg and xor clc push aas into test mov inc cwtl pop jbe test xchg jp scas jae lahf push aam pop jg add in pop jo or jo or pop cld fidivr xchg add cmp leave or lods test ja in shll sub inc cmp imul jo xchg outsb dec add adc clc push pop int3 test jo inc inc jle inc and js sti lods jnp fcmovb xor bound mov js adc stos cltd daa ljmp add out orl test xor call inc xchg xor adc jb mov gs jg jnp sub mov test fist jg ret ret scas insb popa into jg inc xorl clc test es push or je fwait pusha push gs (bad) in or add movsl cmp shrb mov int or sub enter dec jg jle mov cltd (bad) cmc repz mov jns insl xchg sahf dec arpl ror daa jl aas call sahf or sub test mov jg and fwait add pop cmpl fildl outsl xchg push fmuls dec das jae (bad) ds xor negl outsl adcl testl pop lods ret dec imul xchg sahf sub cmp mov sbb out mov add inc pop jnp in mov adc jg repz std xchg mov jp in scas jg lods jge cli clc movsl nop repz xor xor xchg sub xor jg add jmp idiv and scas mov ret and imul cmpsl pop or cmp pop pop cltd ret jg imul mov dec sarb xchg test add dec mov sub inc jecxz jl xor jg xchg or (bad) fcmovb jg adc inc mov xor mov and push fwait daa jp aaa jg (bad) mov dec xor cmp test imul sarl aas jo xchg cmp pop stc and pop in jg loop,pt dec stos out jg iret rcrb mov add mov inc ljmp lret scas inc into or adc mov mov pop jle push and xor sar inc add stos cmpb dec jge int3 es shlb jg nop pop test mov or mov shrl lods outsl dec loopne jae push pop push mov dec add repz jg jecxz stc add adc adc pop inc out jg dec std hlt call add pop fs stos out jg cmp in in adc das inc fmull arpl adc jg enter push clc jg mov inc pop mov loope jg int test jo inc outsl mov in inc xor jg andb (bad) and jg mov or mov sbb pusha cmp mov loopne aaa stc inc imul or xchg outsb cmp xchg mov mov jg fs cmp push jno jne add jg inc insl pop mov cmp sub ljmp pop xor push rorl jg call push mov stc jg scas loopne out dec pusha jg ss icebp jecxz sahf jg or cmp cli or outsl outsl cld mov (bad) sarb das pusha push addr16 adc jo or inc jg push sbb push jg in inc dec mov and add into pop insb xchg test cs cmp aas push push nop ja xchg mov test jg (bad) add and into xor xor stc notb fsts dec lds fwait mov adc dec inc cmp xchg ljmp inc jg test cmc mov subb lds stos hlt jg jecxz bound jae fwait jg inc jo jno scas iret jg push sub jns mov aas sahf dec add xchg test push loopne mov mov clc lahf cmp pop lods iret hlt inc adc mov pop idivb dec jl xchg sahf loope jne inc jb aaa sub xor xor adc pop add int3 call test adcl or xor xchg or push jecxz mov push into jg insb test and fdivr ret lcall pop iret add cmp mov lret (bad) mov es jg mov in dec bound push push test in es and jg push inc adc cmpsl jg icebp cli es ss std xor xrelease cmc das rcrl xor xchg push in push inc xorl push mov repz jno xchg fnsave jae inc jg pop insl and push gs jl sub test adc xchg jo fwait push xor xchg adc int add fsubl (bad) movsb dec fwait lods negl mov fwait mov inc std pop imulb je daa (bad) faddl cwtl enter mov mov cmovg ds push jg dec es jg cmp mov cwtl shll fidivrl lret and (bad) int lret mov call adc sbb inc mov push mov dec mov nop jge and xchg xchg shrb push pop mov dec out fildl out xchg lahf (bad) jg xchg adc xchg maxps jg pushf mov adc cltd jo outsl (bad) or pusha stc int3 jmp aas hlt sub movsb dec cmc jb push cmp add mov pop (bad) jg xchg in dec xor dec jg ss test testl xchg in jg jae (bad) aad jbe jg xchg daa pop push sbb mov push dec inc (bad) outsl jo add in ja mov adc lock inc inc fwait imul inc mov jg jae nop sbb lret xchg ficomp jmp mov scas xchg jg push push mov arpl jg mov sahf (bad) in cmpsl std jg xor sarl fnstsw cltd mov jg rcl sarb mov mov add add popa adc inc loop inc mov negb lahf adc fdivr xchg jge xchg outsl xchg pusha adc cmp xchg (bad) jg sti xor mov pop aaa (bad) push aas mov int inc jmp insb inc mov pop pop mov outsl arpl ss xor rol movsb test ljmp push push lods mov jg mov adc fdivrs mov xor les cmp scas jg push and jg xor mov sub sbb fimul xchg fbstp cld or jecxz jbe mov (bad) jg jo push sub dec popa outsl jg imul push movsl xchg pop out inc mov adc mov test (bad) cld pop or xor (bad) add jl mov sub sahf push sub jg pusha or dec xor ds lea xchg jo dec jg (bad) mov dec push iret jg pop sub out add (bad) fbld xor cmp add into inc add ret mov xor jo jg mov fs (bad) repnz jb mov mov outsb lret aas mov repz add xor jg ret stos popl sbb lds stc and fsts jg leave sbb je jl jg sbb insl fdivrs loopne sub sahf jg jae ss insb lods pop jg cli jns push sbb jle xor inc leave xchg sahf jmp pop rorl out sti jg cmp lock scas cmp sub jg xchg xor jg xchg fsubrl xor jge mov xchg outsl sar adc cmp jne test lock jno sbb test xchg dec or bound gs aam push jno dec jg negl or jg or jne mov push jg dec sbbl jns mov push inc (bad) arpl cmp test mov xor jae dec mov add loopne inc dec aas xchg rclb cmp push loop je push jns add xchg jg push out ret lret xor lcall jb enter insl dec hlt addr16 add pushf aas out jmp cmp jl mov pop jnp (bad) iret xchg cli inc pop jg add leave jg int3 cmp sti es jno das sub jo dec jg cmpsl xchg jp in jmp inc sbb sbb mov into test int out lods dec push mov in adc and cmc cwtl pusha inc outsb loop jg mov lcall add cmp jg (bad) sub adc sub popa andl jg,pt jecxz aam inc jl rolb mov data16 jg cmp out add lret adc jg scas mov mov push loop ss adc mov pop push nop xchg push imul lods inc pop ret mov sahf stc jg pop cmp in push js and lods inc mov cld push jg (bad) xor or adcl sub dec cmp hlt adc das jg mov leave lret inc into lds push push xchg jne stos xor lahf mov xchg jg mov std cmp pop stos jge outsb pop ds jg je orw jle test mov pop inc ds (bad) xchg and fildll jg mov and stos adc and push shl push inc pop inc stc fnstcw scas jae adc aas pop cmp sahf cmpsb jg mov xchg jl xor fdivr cs test decl fsts inc jg cmpsb xchg fwait mov jecxz jg xor dec cmp add pop mov jecxz sti xor pop jne fisttpll popa fildl addr16 fwait (bad) in jg xor mov add daa lretw cmp imul cmp xor xchg pop push add mov inc stos xchg xchg sti lcall sbb (bad) xlat lds add or or add loope push mov jg in mov pop jg and idivl ror cld aam gs or and jg shl or sarl mov push pop pop jno jg sti mov lods jg cmpsl js stos insl jge or insb ds dec stc jg mov aam and xorb pop fldcw pop sub aas lock xchg pop pop inc (bad) jg fcomps mov mov mov push mov pop nopl loopne inc call dec stos imul lock push ficom jg adc xor add mov mov and fnop sub xor (bad) rcll jg (bad) pusha sbb test cmp push aas adc cmp jle pusha movsl loopne les sarb sub in xor jg jo mov jg fsts (bad) rclb inc fnstsw addr16 dec add jg mov sub xchg test xchg lahf xlat sub in mov cmp jg lods mov dec jg fistl clc xchg ret push mov add xchg sbb je push xlat fnstsw add mov jge outsl inc fdivrl enter sahf rolb sub aad jg mov fistpl xor xor or pusha lcall int jg lods xor mov (bad) pop inc mov out inc cmp adc xchg mov cmp lods pushf leave pushl and int cmpl mov sub (bad) jmp shl push pop and jl push sti push mov cmp push lret hlt sahf xor cld fcomi jmp jg pop mov jae sbb lcall inc (bad) mul mov out or jae aas mov pop cld cmpsl sti aad rorb jg inc js shll or je popf xchg sti out cmpl adc cmc cmp jg adc pop xlat jg pop lahf jl sub ss cwtl pop cmp inc mov inc jmp add cli add (bad) mov mov mov push loope xor dec jg push jle inc punpckhwd jg mov js or jno pop popa jg or jb jg cmpsl in dec rcr dec jg lock inc ja jg mov hlt push cmp lods sbb cmp inc fxch inc jg jbe pop mov test or and jg cmp or ret test scas aas cld ret cs or jg xor mov scas jae mov nop mov pop sbb pop pop pushf les ds aas ss xor mov sub add mov fnstsw sbb scas in pop push jg in cs xor push ja push inc (bad) out mov mov push insb sub jg (bad) hlt test mov insl outsl cld clc inc cmp xchg mov jmp dec mov jns push cmc ret and add adc pop inc rolb movsl dec sub or or lock (bad) mov dec arpl xor rcrb xchg jg mov lods jge xchg cmpl xor in outsl jns add jnp jg push or dec out fildl adc and pop mov jg and sbb or fimull lods leave mov jecxz rcr and push cmp jb push inc fwait jnp mov jns pop push push in jge mov push lcall nop mov jg mov push sar pop test mov jae out jg dec aaa inc (bad) ja test push xor loopne cmc cmp and and incl fsub jbe jg scas jno push jge sub adc enter in inc out sahf mov add mov ja movl sarb sub jg loope sbb repnz pop shrl mov (bad) sub xor pusha cmp in mov or test ret mov add dec push (bad) adc int add add dec loopne clc jg es jb fist mov cmp movsb shrd pop inc push xchg jg gs jle popa fistp mov push jg ja mov jg mov jle es dec dec popl mov jg jmp std into jg test mov jg pushf mov fsqrt dec lds loope into mov fwait mov jae lret aas jg inc xchg fs fiadd inc push es data16 cmp data16 and inc jg je pop xor sti jg cli and loope jecxz aas fs movsb cmpsb inc add push icebp jg (bad) mov and dec ss jg sub dec jg xor sbb addr16 fsubl dec jg (bad) mov fcomi adc repnz push movsb pop or or testb xchg and test pop or inc sti mov jne outsb push aas mov sbb arpl mov pop push pushf jp xchg jg lea jg jbe jne movsb (bad) xor adc jl mov pop inc mov pop pop lahf mov inc pusha sbb movsl scas add inc cmp inc mov aad xchg in arpl jp pop pop lcall jnp jg xor inc ret sub xor sti dec ret stc pop sarb jg xchg cmp mov push mov int sahf jae out or cmp (bad) iret and add adc call xchg pop cmp sub jle jg lret cltd aad jbe fs cmpsl mov xor xor decl jg iret test lds aas fbld jge dec mov and jg mov mov jg fadds ret jg (bad) sub cmp jg test jg xor decl xchg jg enter pop adc jg nop test xchg pushf data16 mov std or jo out fimul jb cmpsb ret jg or sbb jg mov stos adc test fmuls aaa scas mov insl fwait aam or aas jg jp stc mov lahf pop ds pop pop imul mov push arpl lock add das mov test pop push lahf xor ja inc pusha jg nop aam adc mov dec popa sbb out idivb or jg les ljmp mov xor sub mov or and jg xchg fsubr aam mov aas push ss xchg jne mov rol orl xor dec sbbl mov addr16 mov inc paddd adc xchg push sar divl inc jg jecxz mov pop jg iret xchg or xchg dec and xchg (bad) pop push loopne je push jg jmp rclb mov mov add xor cld test inc out inc lock cmpsl sub and outsl sub push adc mov jbe xchg fsubs loope ds mov scas (bad) dec xor xchg jg inc test fist mov xor dec js in cmc jg mov sbb jg mov arpl lea test sub push push jno cmp push in fwait nop fisttpll outsl movsl andl mov lock or push mov jg movsl or pop add jg jle (bad) out loope in rolb jg push xchg jbe jg ljmp jg mov sub sbbl sbb je push jg sbb das jg data16 mov jg pop xchg orl into push cmp sub out mov sbb pusha test mov sub mov sub jecxz jg mov sbbl cmp lods inc in mov testl pusha pop dec lods sti out xchg mov sbb inc mov or mov (bad) ret jmp fs mov xor cmp roll add mov inc xchg jg sahf int jle mov push dec ljmp (bad) shrd and push (bad) mov jo lea in sub inc gs ja fidivr and push mov lock pop mov dec cmp outsl sbb (bad) mov outsl fwait sbb inc sbb cmp pop imul jmp mov sbb lret sarl push cwtl and push jle adc in nop mov pop jnp inc inc and mov jmp jecxz sbb lea jg stos push jae fldcw mov push pop (bad) xor pop adc mov push inc insl pushf dec mov test test mov addr16 (bad) mov shll push jne jg mov dec ljmp mov jns mov pushf hlt pop (bad) jbe imul xchg jecxz mov dec repz sbb inc je jno jg sub or mov xchg dec push les xchg mov loop sub xlat mov pop jg lret lock fcompl into jne adc (bad) lea insb push inc pusha popf jg inc cmpsb mov dec fs jg inc inc xchg int3 call sbb subl add dec jno cld pop hlt mov mov sti inc jge cwtl cmp movb xchg sbb push mov leave jae movsb ret sub xor xor insl sub ljmp (bad) mov nop addr16 (bad) negl cli (bad) out test outsl stos test push mov lea aaa movsl inc jg jge mov mov and mov xchg dec mov jno stc js rcrl daa sub mov cli push decb dec pop push (bad) loopne stc mov ja mov mov or jg and mov (bad) xchg xchg mov imul mov jg xchg ret push sbb mov pop adc imul xchg mov bnd cli lock and std testb adc mov sub cmp sbb movsl inc outsl push and adc mov mov and jg sahf rcll jg fildl xchg mov dec scas xor push mov jg in (bad) cld sti inc pop lcall jecxz mov sbb xor push jg fistpl nop mov inc dec push jg jnp data16 fwait jg fsubs xor inc sub jg sarb xchg inc in flds aas add (bad) pop pop sbb mov out shld jmp pop orl or add test lea insb clc bnd inc movsb popa jg out mov jbe or xchg adc xor jg (bad) inc push inc push lods das jg fldenv out mov pop rcrb in push xchg scas clc sarb or int pusha push stc adc jg out fwait pop icebp jg cld aad imul (bad) mov das scas arpl jg jge jae sti pop pushf and jg pop xchg fist incb jg pop jp mov dec int3 inc pop sti gs jl jg push (bad) jae adc add inc sub and lods mov pop sti add andl mov test inc enter addr16 in pop sbb ljmp imul push and push xor lahf loop jg aaa sbb jg ds repz in (bad) jo stos jg in stc (bad) mov scas dec cmp arpl xchg sbb cmpl enter inc mov pop imul popf movsb jae inc cmp or mov enter leave testb les out ss mov ljmp mov jp jg inc mov push aas js (bad) and and push adc xchg lds notl insb jg sbb mov int dec sbb or push dec xchg jg inc mov aaa mov fldl pusha adc xchg or dec or daa aas movsl jg fsubrp ljmp xchg dec lcall jg sarl or jle repz sbb jae nop cmp movsb pusha push (bad) pop pop push jb cmpsb dec loop outsl mov lock mov cltd adcb mov mov inc cmpl sbb pop jg aam xchg add (bad) minps outsl (bad) pusha or add pop mov push lret jg outsl fwait push repnz fstpl dec movsl cs jns ljmp inc adc cmp ret or (bad) cmp popf add ljmp jg adc popl imul or out push iret xchg sti jg push lahf pop jg movsb mov push stos out mov inc lds cmp or lahf mov xchg sarl insl inc lds or stc jg jl call jg push hlt pop inc mov push js leave dec jg mov cmc aad inc jg stos pushf push sub mov ja inc mov rolb fdivr xchg je mov jg repnz leave lret jg jnp push out mov xchg dec dec (bad) mov sub push push notl aas xchg jnp in and dec fmull push inc mov jg sbb inc int fstpt xchg and outsb add or mov mov jnp mov shl call jg mov lds sub dec mov mov jg or fnstsw dec js in adc add lret sub sarb fist jne insb aaa jg inc inc jae cmp je xor cmovns out aas std ds inc stc fidivrl in dec jg pop jge sbb jg (bad) mov test ds dec aas xchg push loopne mov (bad) mov stos iret sub repz xchg scas ficoml int rclb pop cmp jg rclb dec xorl mov or or in xchg test aad cwtl repnz mov mov (bad) mov js mov out sub jno push jg dec pop es out sbb jmp insl dec push fiadd pop jae jge mov sbb inc cmp cltd test jg cmc sahf test add xchg lods mov imul popf pop mov lret repz aas rcpps sub roll jg or adc jg adc sti adc pop xor mov mov mov jg mov adc aaa fwait ret push dec jg lret sahf lock mov and mov mov pop lret dec into add dec stos stos dec ds inc je clc jne dec dec (bad) jg push hlt xor addr16 mov les (bad) mov jg jl push add pop daa aas arpl inc push xor cli jg shl dec into out aad std mov pusha inc pushf sbb xor mov aas mov sti mov scas jno jnp es push sbb pop sahf jo fistpll jg push aam mov ficompl ss inc push push jo jg stos lcall pop (bad) xor stos fisttpl sub (bad) sub jmp aas dec sbb lock inc xchg adc fiaddl jns sarl je push pop or unpckhps ja inc jge jg popf dec rclb (bad) notb mov fnsave sbb pusha insl pop cli jg mov rcrl faddl and xor mov out sub repz scas jg dec dec fs jae lock in outsl in movsb pop push fdivrs mov pop pushf lods pop add dec outsl pop arpl push jb mov stos lret sub sahf xchg or mov pop xor pop mov jg shrb jg,pn dec mov pusha push jg pop daa pop icebp fdivl cwtl push xchg mov jg jp test mov mov (bad) mov mov mov push jne mov (bad) mov inc add add jmp jno sbb jg rcl jg push (bad) xor pop (bad) jg add mov sbb pop movsb mov mov addr16 adc add and test mov (bad) (bad) fild icebp insl push scas aam mov cli outsl add add jp (bad) jg jne in cmp sbb mov arpl into in jge test arpl rol adc xorl and hlt mov mov lcall mov jg push jecxz mov xchg (bad) mov sbb loope dec xor jge mov sub dec dec les arpl jo fcomps lods and inc mov lods in (bad) sti sarb sbb cmpsl and inc stos int3 enter mov movsl mov mov cmpl test xlat roll lahf mov popa mov jns jg mov sti cmpsl repz jg jne mov popa sub jg cmp mov jg and mov daa int3 mov cmovge jg cmp pop sbb mov sub adc push outsl cmc jnp int3 mov jg movsb fildl (bad) outsl inc mov insb lret outsl jae cmpl sbb sbb xor jg inc or out movsl bound in sub sub imul test lret push jmp lahf ja jbe rorl pop lods and subl (bad) mov fistl add clc in pop jg andb mov jg push scas pop cmp push dec sub jg push push (bad) pop dec mov into enter les push popa (bad) mov adc fnstsw jecxz fild js es leave xor mov sti sub imulb add push jno jnp out mov subl jecxz repnz jp sub int3 jg mov xchg add data16 cli or push pushf inc loope fiadd sub ljmp pop pop cmpsb and mov inc jp mov jg mov arpl xchg imul cmp adc movsl addr16 jg rclb xchg mov iret jg push ret js stc lock jg rorl sbb cmp adc xchg ja xor popa inc sub pop sbb xor (bad) (bad) jg fcomp push dec rorl jg js popa std daa mov int enter mov insl bound sub mov inc sub jg xor hlt xchg mov jg xchg or jae stos sub aam mov dec lret sub cltd imul divl pop cld inc psllw jae jg ficoml push dec mov imul inc and lcall aaa push daa scas sub iret sti fsubrs mov pop jmp cwtl xchg aad sbb jg fs imull xor std stos mov jg mov dec mov cwtl pop je push add pop jg rcll popa push mov stc mov jg cli inc and aad mov ljmp outsb gs cmpsb dec rcl lods addr16 loopne jno mov pop pop add jg and xor in js fnstcw (bad) xor and jg inc xchg cmp iret sbb jg xor lods fsts imul popa push call mov lds (bad) jg and sbb xchg pusha stc jg add aas xor fs addr16 pop mov adc das jmp jg xlat dec subl in fprem1 or cmpsb mov ret lcall hlt mov stos test cmc int mov dec dec push mov ret mov leave push inc xchg xor or out dec aam daa test push hlt ret mov out ds sub cmp ja imul out mov sub mov inc (bad) jg sub pop out loop test lret stos xorl mov pop ja into jo lods pop (bad) or jl mov out lgs pop jg xor adc (bad) jae or pop xor cli paddb jae,pn adc pop andl jbe mov push clc iret das jg loopne js jo,pn jg pop cli jne push xor inc test repnz xor cltd dec xchg pop pop sbb mov jg fist clc cmpl lock imul inc jg mov xor sbb or mov push pop sti xlat sbb jg mov (bad) lock jns xor stos clc loopne sub mov jg movsl jo (bad) (bad) (bad) mov into cmp (bad) xchg jg insb adc jg or dec sarb cwtl mov aas inc mov adc add jae test in sbb jg sub roll mov or mov jg pusha aas add dec add mov enter cwtl xchg js mov sbb outsb pop mov inc std out xchg ds or les adc cwtl out inc dec push sti bound divl sub fdivrs jg adc test push cmp cmpsb xor jg dec push outsb push push enter clc jg or stos aas aaa lock mov (bad) jg sahf sbb push xor xlat pop mov rcrl inc jbe daa xorl pop push loope cmp or (bad) sub test and xchg pusha inc jg jbe push sbbl sbb or aas mov push inc scas jg pop stc pusha push clc jo mov or push cmp loope xchg rcrb xor mov cli mov pop jp jmp pop jl inc cmc mov mov stos std dec fnstcw mov cmp js pop pop push xchg movsb loop mov ja decl fstps imul aas int inc test repz out daa mov add and sbb xchg cmp and cmpsl jg scas mov js ret inc test stos adc js mov mov xor push cmp jg cmpsl adc testb mov pop xchg sti inc dec inc cmc push xchg xchg jg leave decl pop fnstenv jg sbb jnp sub jg push jle aas lret sbb adc xchg inc hlt pop pop jg push cmp jg and (bad) orl lahf xor call out push pop adc or out mov lcall nop jne lds dec inc xchg pop adc (bad) mov sbb mov add mov (bad) mov addr16 mov jg vpmuludq sbb sub idivb dec es ds jne mov lcall int jg mov fwait gs es mov int push xlat das (bad) adc jg cmp cmp insb cmp jg add pop inc lcall add in fstpt addr16 out sbb call or scas fistl or jg aad into adcl outsl mov jg inc ret sub mov mov push fcompl out and push mov mov inc mov hlt std (bad) lock push clc jle cs xor jg fisttpl jmp cwtl push inc mov (bad) insl pop lock jg push dec cltd push and in jl adc jg std jmp xchg int sub jne dec cmp mov enter aas push cltd mov out dec test xchg fwait jg jmp enter sarl push mov int xor shlb jg lods inc sub (bad) mov jne mov cltd inc pop mov scas jg dec les imul aad jg pop dec and cli pusha jns jg cmpsl int3 loope push incb outsl or pusha leave xchg add mov jo jecxz jg aam jmp jg lahf ds sub xor add fbld sub adc adc insb jg adc inc mov mov mov test jae fldl jg ret data16 sahf xchg pop sahf mov mov add pop out out sti lret fwait mov mov aas repnz shlb push leave mov (bad) fist sbb or push orl mov jns dec xlat jmp jle adc sbb cmp xchg jno pop (bad) mov jg cmp sbb jle cmpsl jbe jg mov jg jl push xchg jg (bad) cwtl leave imul divl add pop dec stos mov adc insb jg add les outsl clc dec sub inc and inc mov adc fwait mov jge cmpsb fldcw lahf jp inc xor test sbb jg jno push pusha sti (bad) cmp test or divb std mov mov push test pop ret xchg int3 std out sub or pop inc jg icebp inc lahf test cld in or idivb cmp mull sbb cmp adc mov dec cmp jge das repnz call jno aad cmc test and mov (bad) test aas dec cwtl shll mov imull xchg mov mov inc lds cltd pop xor jg pop jnp jl mov jg mov pop sub outsl inc (bad) out fisttpll ffreep inc out pop pop and jg cmc rorb push lret rcll mov mov cltd jno push stos jg pusha dec (bad) add jg xchg icebp out lea ss fildll and outsb (bad) dec js jg into push in fnstcw mov dec dec adc das mov cmp (bad) mov cmp fstl pop aad pushf jg lods adc jmp add pop popf outsl repz mov aas ljmp repz mov mov insb (bad) je les jg dec insl inc cli pop sbbl push imul push cli sahf jg sbb out dec stc adc jo lret xlat mov or aad push and imul stc dec (bad) push jg and inc std and enter shlb popf inc mov push out jmp addr16 adcl and jg mov mov scas mov dec and dec jge adc int jg out cwtl push add cmp and dec repnz jae jo jecxz add jnp mov ret repz inc (bad) push dec mov outsb sahf movsl bound adcb xor jg cmp clc lcall movsb test cmp pusha ret popa cwtl (bad) jg js xor and and stc cmpsl dec popa jg in fimull sbb jg xorl pop (bad) cmpsl mov jg std pop out jb jnp mov ficoml and pop adc mov clc xor mov jge lret mov jecxz daa into adc ja les hlt jle push dec sti mov mov icebp sahf sub xor insb nop out test sbb mov and jle mulb jg xchg cmp test inc pop sub jp jg xor lahf insb mov scas jg jno (bad) jne xor outsl jecxz je (bad) ljmp test lret outsl adc or lahf jl xchg xchg push jo fs outsb fcmovnb lods or jg lods jne test mov jle inc scas jno and sub mov sar insb or and cltd (bad) jg mov imull push sbb lea (bad) je push cs mov jg pusha dec xchg jg push daa push lret jle popf jg lock in jmp or int bnd xchg xor mov sub mov add les inc jg jp iret leave ljmp mov jg incb stos das sub cmp jg enter jg loop dec adc cli mov testl ret sub pop repz (bad) jmp aas fisubl jg (bad) dec outsb jae mov jmp ss jge and inc jp and pop mov stc add jg push pop or and dec mov cmp idivl ret mov and mov (bad) xchg aas jl dec add cmc test mov push in sbb xchg xor jg clc icebp fsubrl adc sub popa or or scas pop pop (bad) mov cmpsl cmp sti std shlb sub hlt cmpb or push jg loope stos jb popa call dec sub xchg push cltd in imul and les adc mov jle add mov adc (bad) cmc mov aam cltd adc leave mov adc sti gs cmp cmp push mov mov mov mov dec mov mov (bad) pop call pop or ja cltd dec mov sbb mov lea jg dec sbb ss cmp jnp lea out cmpsb lods std mov mov or jb pop jg sbb imul mov enter imul iret es push lea jae mov push in jg popf leave xchg clc xor push push int3 test and jg fsubr xchg imul insb jg mov (bad) mov bound (bad) into aaa repz in (bad) iret mov inc hlt xor jmp jg push fisub jnp pop test icebp jno mov aas out lahf ret cli inc xor dec mov outsl dec loope test test xor (bad) popa (bad) mov jne or (bad) (bad) mov mov fsin push mov rcrb gs sarb jg cs pop ljmp les jg jmp xchg fdivs (bad) add int enter sarb mov cwtl ja or int3 mov dec outsl or outsb jmp mov inc add cmpsl js jg scas jnp ljmp mov jp sub xchg lcall mov inc cwtl inc adc xor mov pop push sti cmpsl or mov mov mov xchg ljmp mov mov (bad) mov cmp fdivl xor pop jg dec xchg pop (bad) test inc or add pop scas push shr lods mov add imul (bad) jg or or mov out fstpt pushf pop in subl jae pop adc jo lods inc jne dec out push jg mov jecxz mov push nop adc inc pop (bad) push out inc push and fs jg in gs out sti mov addr16 outsl mov and hlt push in xchg lods sahf jg pop sub xchg xlat test push pusha cmp into jg push dec jnp ljmp adc jg and mov mov dec xor mov incl mov jbe jge das mov mov dec (bad) and dec lahf adc jg dec movsl add jae dec push fdivl enter fwait mov push insl roll mov pop lahf push cmp pop mov addl add jg outsl gs jae jle rcrl (bad) fs mov sarl push es or jg jns decl loope xor cltd xchg mov lock inc jg pop dec jl repnz inc pop jo push mov (bad) mov mov xchg push push sti nop fildl adc jnp jbe mov xchg and fs pop cld mov sbb movsb (bad) sbb cmc mov pop jg dec mov test popf jg mov jb cs fdivrs dec adc mov adc sub mov loop cmp inc int bound cmp jmp cmp xor jl cmpsb mov mov clc into adc jno jg data16 fisubr dec xchg or push xor cwtl jg pusha mov test hlt jg (bad) mov push pop jl jg and call push iret aam pop jg jl or cmpsl mov inc adc (bad) or shr lock rolb es dec xor cmp push imul mov fstps lret lock fstpl stos dec cmp movq xlat loop jg fsubs mov or lret orl push jg fstpl loopne xor jg daa or aad test push cld mov jle push int3 xchg call mov jne cmp inc push jg stos jle mov jg sbb sbb jge xchg js jg sbb jg add mov dec inc jno inc fiadd dec push hlt insl jg cmc mov jg and xchg push insl negb lds push mov push push in xchg or pop fwait xchg leave inc jg dec adc scas cmp jg sarb jg jb add fldl inc xchg mov jl orl les xor jae add ret jg shll nop mov jl mov ds mov lea jg mov mov imul fwait xchg mov mov sbb jmp loope inc aam cltd fiaddl lods les fwait mov add mov aas std pop jle inc cmp sbb ret xchg jmp jns xchg hlt outsl add adc push les stos mulb pop femms cmp les inc dec outsb push jbe lcall mov and inc jg jp jno data16 jg push ljmp mov in outsl mov sbb test inc jg mov mov cmp pop push mov into stc js sbb xor mov push jg andl and mov sub fcmovb sub sarb mov (bad) mov or jg,pn ret dec pop jne mov dec jg rclb or enter jnp iret (bad) jb dec fwait lahf mov hlt push pop xlat sbb fs (bad) push sti mov fidivl fmul std gs mov jb lret popa add cmp push cmp loop aaa lcall cmp cs pop std dec xchg into repz or mov inc (bad) jg nop xchg xor xor cmp in dec inc mov jne jno adc xchg rorl pop pop jg push mov and lret sbb jno and mov push nop scas xchg push add mov stos inc jg iret add fwait jg call mov pushf xor cmp mov enter inc jg xor and jg mov lods push es inc push jae xchg pusha mov mov (bad) jg rorl dec cmp add jno mov cld adc inc ret jns stc mov out cmpsb push mov (bad) dec scas in push push inc fs jge das lahf sahf jg sub cltd dec xor aad or or jg ja mov jg jbe cmp es push sbb inc psubsb cmc jg pop xchg cmp and xor dec pop add adc pop aas mov and and negl (bad) xchg adc xchg jo rclb enter into mov ret and jg popl outsb mov idivl enter inc xlat sub mov mulb xchg js icebp outsb xorl cmp pop jp mov test dec cltd inc mov sub ds pop xchg jg gs loopne mov jg pop or lods adc vldmxcsr xchg repz xchg pop cmp mov pushf xchg in rcll repz jbe jg (bad) js pop cmp shrb mov push inc ds rolb sub xchg jg pushf sub jg jl adc sub mov inc arpl pop and jo cwtl insb out sti notl xchg pop xchg aam jg cmp xor add fidivrl fnstsw pusha int negl pop jg cmp push inc outsl in jg dec mov dec lods sub sti pop xor mov fwait leave mov test mov pop inc call pusha scas popa out fdivrl mov imul inc sahf cmp sbb pop mov sub or test push not arpl jg and pop jg bound enter push mov xchg xor sub lods and inc loopne cwtl mov inc pop inc jg nop (bad) ja mov sub mov sub out jg std lock pop add js data16 dec stos mov mov pop in leave out jmp scas sti movsb mov int3 outsl int imul loop sbb mov push inc adc out and data16 orl or (bad) jne out loope hlt mov testb pop xlat jg es rolb and mov int3 mov lock xor push mov ja adc repz mov inc arpl (bad) xor lds adc popf push aas cli or inc cmp mov jl insl sbb mov add push jg mov loope jg push add mov push loopne lock sub inc mov call add sbb bound hlt dec mov movl aas mov dec jmp cmpsb mov out jg nop or mov pop es in repz jg xor jl push (bad) lock jmp bound jle mov jg push sbb sub (bad) push push mov stc dec pop bnd jg sbb aam xchg sub pop sbb jno pusha loop lret (bad) mov in jg bound push mov shrb in pop dec inc cmp jae outsb jg jae fmuls adc and push scas out pop add lea pop arpl or stos jp js xchg add lcall xchg cmp jg movl mov pop xor ljmp mov inc fsubrs std jg ret (bad) mov imul pop mov add mov xor sti jg xchg aaa pushf sbb insb imul push jle or lcall jns mov inc lods jg mov data16 cmp gs aam jp fldcw fwait xor jno jg inc scas inc xchg sub and rcll fadd addr16 daa dec aad cwtl jbe les flds sbb push jg sahf mov xchg lahf inc jg mov out imul lock fiaddl into jg cmpsl inc sti or (bad) (bad) dec cmp jae je xor push jecxz xchg mov sbb cld std pop lret mov inc movsl push add mov out jns push push mov jbe js adc fcompl gs lock or pop xchg jle mov mov fdivrs test out or mov push std lock mov test iret cmp fbld dec lods or dec jge std jp sub jg gs (bad) rcll xor ja mov or mov inc inc xor ficompl jg (bad) mov mov mov dec test jg pop lret inc sbb mov (bad) inc roll mov push stos sub or fdivrp icebp xor cwtl xchg push cmp jg shrb daa jg loopne dec cmp cltd jg stc and imul dec pinsrw mov sub fwait aaa mov jg or jg addr16 lods mov cmp bound push adc inc sbb enter dec lret inc adc cmpsb stos dec repnz inc jnp xor ret push decl jmp mov pop dec into sbb dec inc dec mov mov cmp std movq fidivrl js pusha xchg rcr scas jg movsb dec and sbb lret cli and rcll jg enter pushf mov shlb or xor adc mov lret xchg sbb bound xchg pop jmp cmp fucomp stos inc pushf mov aas jg push jle dec movsb adc jg lods les mov push bnd cs dec sbb jg in test pusha hlt call rolb cmpsb inc ds jg inc mov clc adc mov add jg pop pusha notl ljmp (bad) fcomps sti idivb and popa push mov pop pop insl mov dec or jg mov and mov cmc pop sahf call push cmpsb les fldenv inc cld sub sbb decb sti fidivr lods ret jg mov loope xor jno jge and data16 push popa push das cmp pusha pop ds jle shl (bad) add sub xchg jg cmp les popaw jg jbe cmp push dec imul push jg (bad) out popa ljmp in (bad) lret pop cmc push dec adc jg lcall aas mov (bad) mov cmp mov mov js sbb sub stos pop sub adc clc cmp (bad) push mov ss adc std rcr add adc jns dec mov cmp adc insb mov dec push inc pop xor iret mov mov cmp jg cli mov xchg jo and jg dec mov test mov pop inc jg or fs pusha dec jg adc arpl add jnp push jg mov clc (bad) jg and xor ret loope or fadds lahf inc pop inc (bad) inc xchg jg (bad) inc mov inc add (bad) add in pop jg out sub fs mov dec loop stc addr16 dec and ss add push sti imul pop jnp dec aas cmp in inc dec cmp sbb push ret aad leave notl mov out nop dec lods jg outsl pop ret sbb rcr sub and lahf sarb xchg lcall dec rorb dec repz (bad) mov sub mov mov mov mov and jmp lods pop inc ret orl mov push jge stos jg hlt lods rorl adc cli mov and pop xchg bound jg test fcoms cmp int loop stc jnp cwtl jle outsl and imul out sbb sub in mov xchg jg jecxz dec push lock jg jp push xchg nop insl mov shll (bad) decb bound sub sbb jg jmp or mov aad lods cmp fildl mov jg addr16 fistpll ret xchg daa mov mov popw out es xor pop xor jne xchg sti clc mov push jle jmp loop jb lods inc scas repnz mov mov popf fiadd ja popa movsl fistpl cli cmp data16 lock (bad) sti arpl test inc jg ret stos call xor inc mov cmp push scas xor jmp popa lods aam mov push mov jg cmp std jg xor cltd in mov push jp or jbe pop mov mul fnstenv mov cmc (bad) jo fstpt cmp sub and lds jno pop add jns pop adc aad lret mov inc (bad) dec ficompl scas xchg or mov xor mov sti (bad) xchg jecxz inc movsb mov std jg movsl dec test jmp scas stos idivb sbb inc cltd add fwait xor push jg xor in mov add push hlt jge jg addr16 das jg repnz imulb mov out fcomps inc imul addr16 jg push insl scas cmc mov mov test inc lds jg xchg aaa push (bad) mov and sti add jae (bad) jb xor inc jl scas cmp inc mov pusha bound jg lods dec jno fdivrl cmpsl or comiss fwait lock mov xchg outsl pop jmp mov jg mov or cld add xchg adc adc mov daa dec loopne popf mov in aaa std notb mov es pop mov sub daa mov pusha inc xor pop adc lock push pop ja jg push sahf test jg scas and cld pop and and push jne sub add scas ret jmp lret add inc test jg xor xchg dec je mov jg push (bad) cmp or pshufw out or adc jg add ss into xor movsl sbb mov std pop gs cmp inc (bad) out (bad) int fbstp cld call push inc addl push (bad) (bad) out jecxz rcrl icebp cmp jg sahf insl mov fld mov push inc or subl aam jbe add fimull lahf shll dec mov sub in ficoml add out sbb imul or xchg fisttpl sarb xor pop jmp loope xchg icebp inc call movsl xchg xor xor out dec outsb int sub mov jg ftst movsb mov sbb andb cmp pop jge stos pop les sub add nop or pop and outsl unpcklps jle lods aad jnp ja sarl je pop (bad) test fnstsw xor jmp les jg sbb fnstcw dec push mov rolb and mov adc loop aam sbb (bad) xor xor ja mov jg les shll pop lock in loop sbb cmp insb jg mov mov test pop jb cli xchg mov dec xor mov pop lret (bad) sbb rclb decb loopne or mov popa mov clc add jp xchg fwait nop push dec adc jae cmc sbb (bad) mov mov dec outsb jg aas divb cmp jg (bad) imul outsb jg add push mov stos fmuls pusha xor insb pop sub jae add sbb fadd stos cmpsb cli (bad) jg pushf adc sbb adc mov inc in and je pop mov iret pop movsb mov loope inc out pop inc mov movsl insb sbb jg gs test and dec xor mov insb mov aas add arpl ljmp daa ss jg mov mov jo call push jg ret repz ret inc or pop dec test jg cmp lret adc jg out mov neg sbbb stos jp rol push and xchg bound jg jne fwait jmp out jle leave mov mov test movsl sarl aas pop mov dec pop mov sub add jg js sbb inc divl dec xor inc hlt insl (bad) mov mov repnz outsb (bad) push in mov in inc sbb test push aas scas jg inc ds repz ljmp loopne sbb divl outsb outsl xchg hlt sarl es das mov pmulhw or add daa movsb ret aas or pop jg addr16 roll push inc stos jg in int lods jb jg dec xchg lds out dec mov xor stos jp push pop jg push jnp imul fimul add jg push (bad) stc std daa and push (bad) mov insb xor aas dec stos pop in pop test and sub add jg das (bad) jg cli xchg cmpsl mov push xchg mov or inc ficompl mov mov js popf mov mov jg fwait xor pop pavgb add call repz jo mov mov add imul mov jg cmp cmp imul ds mov jns gs mov push cmpsb lock or pop adc cli or jg mov inc jmp or add jg sbb sahf incw sti jg xchg out int3 cmp lds push (bad) mov or fldcw jg mov push inc scas pop jg das sbb jg pushf arpl outsl rcrl movsl or pop pop out inc mov test repz or add fldl dec fcoms mov pop dec and cmpsb jle les mov adc cld outsb jg dec mov mov dec mov cli scas sub jge (bad) mov push stos pop cmp xor mov jg cmp push iret xor stos loope jbe imul test data16 and mov je add mov roll push jg icebp jae outsb mov leave jg sbb sbb js in rcrl scas pop loopne gs push jg mov pop xlat mov fldenv (bad) mov mov add adc jg pop in mov inc es adc mov mov jecxz xorl (bad) push loop (bad) fs jg push cmpsb mov mov cmpsl adcl jb cmp jge jg test fdivrl fwait mov (bad) push jno aas inc push cli aas xlat fcoms dec mov (bad) loope mov (bad) pop daa insl jge mov jo cmp dec jg jb loop aam int3 push sub sub aad xchg fs out clc cmp loopne jno enter inc mov pop adc inc add jns jg fs jnp inc fnstsw ss inc cmc pop xchg js and mov lock adc push jle jg call push adc inc ror add fwait in dec test movsl mov js aad adc push pop int add adc mov jno outsb aam mov rorb js inc jg mov push mov ja mov loopne inc ds (bad) and loop jbe fwait pop les sub bnd sbb pop inc nop stc mov ret fcomps cli add stos jg sub aas es pop (bad) xchg mov sarl shlb xor sub sbb cli mov pop int jg and in aad sub push mov or push pop repz push jg stos mov bnd idivl fcmovnbe add jg lahf ja dec repz jg sub mov mov aas jae scas jl jg cs push dec lods jmp jg incl mov mov xchg mov push out sti insl pop mov push pop sbb out js inc and dec push jl mov sub mov aad imul jg lret in int fiadd push mov push jno or push ret scas mov cli cmp ss lret jg xor sub adc pusha imul (bad) mov pop ret jl mov mov jg mov rcrb lds sub jg movsl xor addr16 test and aas leave mov sbb cmp sbb mov ret jg jecxz orl xchg push jg movsl fsubl jg into pop inc inc dec sbb popa jg in rcll mov jg dec out ret dec jg sbb les push jge xor mov xchg jg adc adc fidiv inc mov sti lea divl cmp cmpsb lods icebp mov data16 imul jp mov lea repz fwait jle xor pop into jns lods push lret mov dec cmp orl jg loop jle or jg fistl sahf jg mov shr addr16 ret orb dec fstl push xor xchg adc lods loop jg xchg ja mov cmpsb rorl jae xchg lods pop jg in sub sbb or mov xor lret rolb mov mov push jg dec dec cld jmp mov or push mov jg adc jg mov cmp sub xor imul sbb pop aad jg pop (bad) cli jp fcomp jg or sub push or xchg clc mov cltd cmpsb inc adc push jg mov mov loope jg fcmovnbe js pop xchg movsl jg fstpl jmp adc pop push xlat outsl mov pusha and jg or dec notl test mov mov inc cs mov daa push sbb (bad) nop add cmp stos sarl mov xchg mov (bad) popf fsubrs (bad) outsl aaa cmp cld jg push or jl push xor xchg dec sub jg lea add addr16 in push ret sbb mov and test and xchg imul loopne jae das aaa pop mov inc or or dec jg cwtl sbb movsb (bad) and icebp cmp movsl jg (bad) flds pop sub dec das inc mov out movl ret and cmp inc sub xchg mov adc jg movsl iret (bad) divb inc fwait bnd out push xchg subl ljmp mov pushf add loop jae xchg cmp outsl fcoml sub stos jg scas loope or add js sub dec mov mov mov jg push pop adc fnsave int lods sarl cmc and sbb std test arpl pusha lods ss insl sub jg stc cwtl xor int mov fcoms or shr jno leave pop lahf mov push (bad) xrelease sahf lods in lcall insl pushf fimull lcall jg cmpsb jmp out arpl out sub push aas sub (bad) aad and xor int dec lea jb mov dec push cmp push add jbe loop in aas fsubrs xchg fisttpl call iret adc cmpsb sbb cld ja adc dec (bad) pusha xchg mov insl jg mov das in pusha mov xor mov add xchg mov (bad) cmp push inc test inc aas out jg and lret pop ds pop jg loopne lret sahf in ss sbb inc dec mov jo mov rcrl sahf lcall leave push cmp push sbb jg fisub jbe mov mov cltd jg mov mov insb jo lock stos jg inc lock sarb cmp xchg push lock jg insl or mov add imul insb inc or mov lods mov into fcmovnu icebp addl arpl ss lods shrb adc adc jns repnz cs inc test int jg xchg movsb xor inc mov mov mov js mov aaa test aas (bad) andl xor or popa (bad) mov add or inc les stc mov jge pop fcmovne add mov dec mov jmp jg ds xchg (bad) cmpl (bad) je cmp test cld scas dec into (bad) dec jg push cmpsb rorb mov enter test jg dec lret negl lahf inc inc jb test or push inc cmp int pop out cmp imulb cmpsl xchg imul sarb dec xchg mov jmp jg sub pusha jg push sti daa fucomi adc mov and jg jp mov ret icebp movsb jg (bad) push or insl adc pop mov movsb pop dec inc outsl mov psubusb push jg cli push andb scas push js fmul sbb xchg fldt jbe adc mov jg mov shll pop xchg xchg dec dec jb jg xor stos pop sti add sub xchg mov jns adc sti pop lret jmp addr16 jg popf or je dec xchg sbb fdivrs mov jg mov mov push sub repnz and mov repz push pop mov dec les add mov push xor pop cwtl dec gs cmc dec pop mov mov cld sbb mov jg and bound push mov dec push mov mov xchg loope pushf dec lahf jg ljmp aas (bad) cmpsl pop inc adc xchg test fadds loopne dec add or cwtl (bad) sub js cmpsl sub je cmpsl jg mov inc fstpt ds pop dec pop cli jg out or jg lea loope cwtl pusha cltd push incb js ja mov ss cwtl pushl jmp sbb in enter push jg imul jp jbe jbe mov (bad) out inc outsb loopne insb lods dec jg (bad) into adc jg fdivrs mov jmp addr16 mov ds adc (bad) adc aas dec repnz cmp fwait mov or cmpsl cld jg push xchg push lock mov sbb xlat ret inc jg ja add pop pop pushf jg inc cmp loope jg push stos subl (bad) push jp clc mov and dec mov mov mov stos pop andl adc jg mov cmp inc mov out lcall test ds data16 mov in pop xchg cwtl push jg sub mov (bad) out sbb mov aas clc cmpsl jl dec pop out push int3 jno ficompl cmp xchg inc push fsubs inc inc mov out mov cltd flds in dec mov lock pop daa cmp inc dec (bad) mov lea push mov mov jnp jg aas gs jg sbb inc (bad) xor xor pop jecxz or out aas mov push jp mov inc movsb ss or mov idivl push aam and es jo dec mov and roll cmp int3 ja rep mov mov lcall fcompl daa mov xor stc mov and jg test mov add dec push or mov loopne pushf pop lds mov cmp jg and insb mov fsubp ret mulb (bad) bound mov and or out dec mov mov dec stos inc dec jb jg mov addr16 rcl sti pusha daa loope dec xor push loop lds cmpsb hlt movsb adc jg cmp andl xchg jae jp lock adc sarl xchg cs or mov test and icebp hlt pop mov push push mov jp pop bound pop cpuid (bad) mov sub jo jle jno jg les daa mov cmp xchg inc fdivr mov dec mov adc mov lds mov mov jge mov add sub gs dec xchg push pop mov pop jl dec pop shl mov mov dec xchg fdivrl push rep ret inc sbb dec sub (bad) push cmpsl cmp jg pop call je movsl mov or rclb pop aaa stc or loope and add and pusha push jg cmp and xchg movd adc pop data16 cmc or sti and cmp scas inc inc mov scas (bad) adc pop (bad) mov sub xor call jg scas xor fcoms adc (bad) mov xor mov outsb push jg sub jo cld rorb cs push fadds and jg or pop sbb pop stc test ds mov cmp or in les xchg mov jg test test jg cmp mov mov pop aaa nop imul dec aas int push push ror incb mov jg out ret adc mov inc dec jmp int3 insl jg inc cltd (bad) add (bad) (bad) outsl inc and insb mov and aas add inc fnop imul movsl or jg cld lret std test outsl mov rcrb adc fsqrt xor jp inc cmp jg daa pop jb sub out pop clc repz (bad) cmp mov jg inc insl (bad) jge or iret add xor arpl mov sbb outsl sarl cmp loop mov test push sub bound addr16 mov (bad) mov mov into mov lods nop inc xchg fnstsw cmpsb pusha sbb inc fdivrp jne push leave out jns pop sbb inc out fisttpl in std fwait icebp push mov jg lcall jg repnz pop out movsb cmp push out sahf mov jo push ds fidivrl mov mov inc add mov mov mov andl mov js fwait jp cmc add jg call cmp jae,pn mov scas inc inc loope push jg sub mov cwtl aaa lret (bad) idivb mov icebp jg push call inc dec jg xor pop add pop out mov adc push add jg dec loopne out (bad) lret cli and orl and jg sbb pop jg pop outsb xchg jns jecxz jg cli jmp xchg jg mov and mov xor and or out xchg (bad) mov mov std push pushf jg popa mov sti jg ljmp aas mov or arpl inc push pusha inc xor push fistp jl mov and mov jg (bad) pop movl call rol xchg jmp sbb dec hlt or xchg jg push push xchg lods sti inc pushf mov dec out out sub jg adc cs xchg inc pop ss mov push push pop inc nop test sub mov fwait addr16 (bad) (bad) movsl ds mov in jg cmp dec hlt ss dec lret mov mov (bad) jb cmc jg mov mov shll pop aad push jg stos mov jbe outsl mov jmp push and lods pop mov movsb movsl lds push out push jecxz dec push fistl popf js adc repnz inc jg mov mov pop mov pop jg bound lahf jbe and jg inc notl jle jg mov jge fiaddl dec dec fisttp daa inc adc adc vpshufhw pop xor les sbb jne xchg mov and stos xor jg add pop add imul loop imul int mull stc and sbbb jbe je pop (bad) in dec lea jle pop out mov inc and xor dec jnp dec shrl or mov inc rclb sub mov dec xchg dec lock hlt arpl test push packuswb sbb push aad dec inc inc jg std push mov test sbb and insl adc jg ret add lds stc jg ljmp mov push jnp movsl mov jg sbb adc cwtl inc push mov in mov sub dec jno jg roll popa pop inc mov pop pop arpl pop fwait jns jno out movsl sti cmp push adc jb ja adc dec repnz push cmpsb decl dec mov loopne mov xlat push jmp pop jg pusha push xchg push (bad) cli jg pop out jbe jo inc ficom outsl rorl fidivr cwtl inc pop (bad) lret xlat inc cmp sub negb pop xchg jg xor push sub xchg (bad) cmp cmovle and jg cli jno cltd int xor stos idivl jecxz loop les lods inc jns xor jg inc jl cmc push push pop jg out mov jg fmuls (bad) ds and adc jp jg testb dec int xor pop sub idivl aaa scas jg push jb cltd gs daa inc jmp in das mov lcall add and cmpsl cmp mov outsb outsl mov pop pop dec out ret (bad) jg shrl nop pop push add scas adc sti xchg sbb mov es pop sti cmpsb test or addl (bad) (bad) pop adc mov fidivr mov sahf or jo in loope leave je popa dec mov jg lds jmp jg cmc clc jl in ret mov xchg mov inc xchg fidivrl aad lcall arpl jns mov jg loop int3 adc (bad) lock sub call jg xor jge jne mov cmpsb insb xchg ja or mov pop sti sbb pop idivb and xchg ret int inc mov inc enter adc jg fbld out add dec jg inc mov mov inc xchg cmpsb mov shl mov addr16 iret pop pop sarb and adc bound jg popf and mov stos xchg push pop shll pop xor mov cmpsb pop in ss in leave test icebp pop inc pop out arpl pusha ja inc or rcl (bad) mov in into test aas cltd cld fwait push aas and jg xor int3 jg mov push lods (bad) je jle add push (bad) dec out mov jg push (bad) incl ja aas sub dec jle add add cltd aas push fsubrl dec or cli push in mov mov inc inc outsw jg xchg cli xor movsb cmp aas cmp daa jae stos aas adc dec sbb jns fisttpl mov movsl cmp xor lea (bad) mov jmp jg fsubrl aam mov loop jge aas mov mov cmp adc adc shll mov dec jmp pop aas sbb cmp mov psubw jno fistp xchg cld xchg ds mov dec adc sbb or cmp xchg cmpsl xchg pop in leave jmp mov xor adc mov fnop lock push mov cmp push mov pop xor cmpsl push aas xor out jae dec pop mov scas scas or jge inc (bad) mov jg lock imul push push fs sbb popa add mov push testl xchg inc sbb mov and inc bnd inc out inc lret sbb jb inc imul int dec and arpl loope lret iret adc mov idiv or mov inc popf cmp mov js jg jmp xor dec (bad) sbb je mov popf jg or jnp sbb inc iret xor cmp mov pop out pop addr16 pop jg dec ljmp add (bad) pop ret mov push arpl std sub jg mov aas push jg in arpl or sbb negl and pop jg mov xor push mov jle pop fdivrl in mov cwtl pop cmpsb (bad) jg loop movsl les push jg lods mov xor push adc iret jg shr inc xor jg jbe or mov aas int3 ljmp dec fwait mov mov jg arpl test aas push pop popf aad pop add cmp repnz std mov or cld inc and cmp bnd dec ret push sub inc add push lock mov and mov pusha test pop mov push lods inc orb insl sarb push cmp in ret and mov pop scas (bad) sub stc rorl or lret in add into and jg test jae jg mov into je inc mov xor test pusha mov push ja aas mov outsb fs cwtl jae leave or fldt xchg (bad) jmp adc mov ljmp call cmc sbb (bad) (bad) addl inc fcmovb pop aas cmpsb imul xor loopne jg scas adc mov mov inc jg lock push pop xor test dec cmpsl mov dec pop xor sub xchg jle,pn mov jl sub aas push (bad) cmpsb fcmovu lea pop cmp (bad) jg (bad) mov icebp jg test in sub jg inc aas dec add mov je fistpl dec in cmp inc mov jo addr16 dec mov sbb scas dec fisub in lcall adc jg add cmp inc sub mov xorl mov jg (bad) in int add imul mov sub mov enter add or pop xchg jg inc stos cld sti imul mov aaa push mov xlat roll jmp cmpsl cmp push fistpll push jle pop (bad) sti xchg (bad) insl jge add pop inc mov dec std jbe (bad) dec and sarl pushf xchg xor xchg sbb push mov test or xlat mov fmull push xor push outsl js dec adc add sti add mov (bad) xchg xor ja fisub (bad) and adc jg sahf daa sub in loop jg (bad) cmp (bad) pop and inc xor dec rcl push mov mov push push jg repz mov dec xor addr16 in sbb cmpsb mov inc popf jns pusha movsl fwait pop cmp insl ljmp mov fbld pop jg fucomi orb mov xchg pop arpl test (bad) jg or fisubr das xor push mov psrlq popf jg mov stos pop jg imul sub adc mov dec hlt fisubrl test in sbb mov aas xor adc pop cs mov mov aam stc push je (bad) push test cmpsb jg (bad) ljmp sbbl (bad) xchg mov ss xchg outsl mov lods add imul xor jg or je aaa mov jg leave hlt jb bts imul test push xchg mov jne inc in mov imul enter mov and push sub inc daa inc jle mov xchg data16 dec add jg fnsave ljmp in xchg mov call gs popf aas (bad) lods sti repz pop bound aaa (bad) das stos stc cmp je inc popf lahf add and jnp jg sub arpl ret xchg popa cmpb adc push mov push jmp lods loope jg xchg cmc (bad) xchg push test lods inc inc sub orb xor loopne enter mov dec pop jg cmc (bad) mov call and icebp outsl stos outsl aad cld bsf mov or cmpsl cmp pop loope (bad) jg sub outsl fdivrl inc jg push aaa dec sbb jg cwtl add mov ss sarl (bad) xlat jg lahf jl pop aas das mov stos shll rcl adc jg xlat push daa push insl cmpl stc push stos imul jg fbld or aam mov test mov pushf add jg jp or jo in loop cmp (bad) aaa add fcoml test sub jge mov sub mov xor js lahf pop pop xor test inc cli lods sub fbld add add xor mov jle test rol adc mov sahf sarb inc imul loop sbb mov into xchg mov inc add and sub inc or aas adc in fisubrl jg nop xor fs cmc mov stos sub jnp test push mov jle ficom add pop jne add js cmpl test add cmp sub push fs jno insb mov sub pop mov mov notb mov push sbb (bad) push test inc jg decl push (bad) jno les mov jg pop mov movsb jg xlat jae stc xor add mov js imul xor push scas sarl leave pushf cmp or and inc (bad) (bad) and mov adc mov test ja pusha (bad) cwtl jg mov mov add xor fs arpl xchg rol jge aas jo (bad) and mov inc pop cmc jg loopne imul cmpsl cmp sbb jg mov xchg addr16 loop notb int jg ds inc inc push rcll leave scas pop (bad) mov ljmp adc jg mov xor aas push xchg mov das inc fidiv gs pop jns out pop pop bound loopne xor mov loope add mov pop mov push adc xor cli mov jnp pop jle jmp mov push jg jae test sbb adc jecxz mov std insb iret out adc push jae xchg mov in (bad) out and repnz popl les mov adc pop and xchg out add pop mov jmp jg das xor js (bad) hlt jg mov xchg dec jg inc addr16 jns mov adc js cli fwait pop jg bound and sub pop addr16 and xchg jg pop clc add cmp bound cld push xchg jg pop sub (bad) (bad) or iret mov mov jmp pop loop int sub mov inc jge push pop xor jg fucom shll fcompl dec push sub cmp push lea (bad) mov mov and push sbb ret aas push pop xchg cs lods xor dec stos les in push mov ret ficom inc push and jle xchg sahf scas and and cs int aas jp pop push je pop inc (bad) ljmp jbe mov cmp jne mulb negl in jae daa insl in icebp jg mov jmp mov call nop adc sub mov add xor (bad) jg daa inc lds xor loop cwtl push dec jl stos mov push jg loopne iret push pusha or int3 jg mov (bad) add fiaddl jg lods push jne,pt (bad) int3 inc dec jg adc sub mov jg sar (bad) call cmpsl pusha jb dec shrl push sub int3 push mov push clc pushf lea mov mov mov cmpsl test xor xchg fnstsw cmp repz out and in gs lods dec outsl xchg aam pusha sbb lock mov xchg and (bad) pop add lahf mov into jo xchg (bad) adc leave sti cmp xor popf fs fbld jae dec and dec xchg pop (bad) jg cmp (bad) adc sub and fcompl arpl in ret popl (bad) adc data16 mov clc jg std dec dec lahf addl push rol (bad) aas push mov into mov fnstsw or bound movsl xchg movsb insl shr or pop lds inc insl add pop mov outsl ds rorb and sub pop out mov leave or xor loope aas or or jmp fidivrl dec pop mov testl and and icebp xorl xor popf fptan loopne arpl xor fwait int3 into lods aam jbe xchg loopne mov jg push lahf or mov push mov ret div xchg jg xor mov pop cmp pop sbb cmp int aas lds call jg out dec inc inc push add pusha adc mov push in xor jg dec addr16 xchg mov sarl sub lock sub lods xchg mov mov mov add xorl ss ret fisubl dec jg mov pushf loop scas lret popa xchg loope push dec es (bad) sub push add aam dec addr16 pop dec inc pop aas out fmull xlat ret js dec das outsl mov adc jl adc lret mov (bad) lods jno js push ds in psrld mov mov dec dec aaa push fwait xor sahf pop push jg mov inc loope mov jg jns lret inc lcall mov cmp xor inc xor fsub sbb fcomi arpl imul jno jb xchg lods push mov aad leave sahf jg mov lret jb adc inc inc loopne test cli mov jg mov add mov mov jae mov inc adc or (bad) cmpl dec mov dec cmpsl or out add sub test enter fwait lcall ja sarl mov push dec aad sbb xchg into mov xor popf ja jg lahf cmp iret adc xor mov outsb mov xor xchg or pop push mov pusha pop dec mov mov jle add clc pop adc xchg inc jo int jg cmp dec mov stos (bad) xchg (bad) pop jmp jne fisttp arpl push mov jl dec add test add mov (bad) hlt cmp repz ja xchg sub xor fwait adc sysenter cmpsb jg pop fsubp das jne gs leave jo xchg lahf xor jg lock ss bound inc int or (bad) mov sbb in cmp and movsb and sub jg repz inc pop jns mov pop xchg fdivrs jp jg iret xor inc jg cwtl sbb jns sub mov jg fcom in and dec and enter jg cmpsb pushf or xor cmp das or (bad) push mov jg sub mov dec sbb add inc jg push outsl pushf rol clc into jg xor xchg xchg pop lahf in jo aaa inc pop inc cmpsb jo dec mov mov (bad) jbe out sub mov outsb scas mov xor mov movsl add mov insb arpl je push jns and jg gs insl fwait mov jg jmp std imul cmc mov aas das cmp stos (bad) outsl inc mov je inc popf aas lcall dec jg push sub loopne mov lds cmpsl test mov lock stos cmpsb fstpl iret js in add cld sub add add lea shll xchg jg mov and in pop call mov int3 push outsl mov mov xchg pop jg and cmp jg jmp test loopne pusha push dec xor rcll dec dec cli das jg add je loop js jb mov xchg xor jo daa jg dec sbb ljmp dec add push enter jg mov shlb fdivrl fcomp clc shll xor mov jp inc cld int ss jg xlat add mov rorl add jg lcall ret dec inc mov dec add aas sub out lods adc scas stos loop lea (bad) cwtl push out jmp dec pop jl out les es outsl (bad) jg pop and sbb push mov lods mov and xlat inc inc jg call jb jg push cmp jg mov cmp mov dec out es imull push jg push frstor jg pop sahf into pop cmp out je jl mov jmp inc dec out jg rol pop aad aaa xorl xchg jae jnp mov aaa fildll dec into jg in prefetchw or clc pop jl push ret adc lock es sbb fbld inc jne,pt out add pop dec int3 (bad) cli xchg test mov ljmp mov xor pop insb sbb jg das femms ja jg,pn lcall jg les and or jns lock push mov jg hlt (bad) dec lods in push jg dec cs mov int3 in insb cmp xor inc xchg mov cmpl pop mov cwtl cli les mov push jg rcrl js or aas gs ret and insb jg sti (bad) dec loope jbe cmp jg (bad) jns xor sahf jle adc inc pop rcrb add test jmp stc inc mov or push mov or add xchg lret int cli xchg test sti adc xchg xchg cmp or inc mov dec xchg jbe pop js jg hlt xchg xchg sub jg jecxz pop (bad) adc in jg (bad) mov fidivrl ljmp xor pop mov clc adc xor adc (bad) insl icebp mul sti cmp (bad) das roll inc dec fildl mov adc icebp jg mov mov int push aas test xchg sbb test andb out faddp addr16 sarb scas sbb insb sbb dec enter add iret push jg pop les jg adcl lods nop lret std inc mov cltd lret gs arpl jg xchg inc and ss ds or int notb inc inc (bad) jg stos cmp sbbl lods and arpl mov jg sub jecxz or pop aad jno repz pop or inc mov jnp popf jg jmp or in lea dec jg pop popa mov xchg push arpl and jg xor imul xchg cld mov xor jg dec pop pushf cmp mov je xchg or dec popa add jg shll sub mov jo mov test repnz cmpsb add shll popa mov mov push into and (bad) mov addl jg lods call cmpsb arpl jg jecxz inc xchg lret mov mov data16 popa icebp jg jp fisub cli mov in jns mov jg jbe lods mov xor jg shr shrb and fisttpll mov in jg dec pop scas jne adc pop lock mov movl jg sbbl insb cmp inc int3 mov push mov mov mov mov js pop insb pushl jnp lahf inc das sti mov sbb add jg fcomps cli addr16 jg lahf das aaa inc clc add in aam mov xchg inc jne push mov mov add hlt jg aaa std in out lock jmp dec mov mov dec cs testl bound jg push cmp mov mov cmc or lods pop imul inc jg out movups xlat jg and ja repnz jg add jno (bad) dec push loopne popa (bad) pushf leave jbe pop arpl xchg dec aas cwtl xchg lock (bad) cmp jg movsl shrl imul lods cmp shlb (bad) jnp popf push dec sahf addr16 insb xor jg mov stos dec add sub test jae jbe sbb shll or data16 mov jg lds jg cmp dec inc loop pushf (bad) test imul icebp arpl int cmp (bad) mov ret aas jle lods (bad) repnz add jne mov push fs inc mov jb dec outsl outsl sti or jg add pop enter dec push stos xchg lret adc imul fisttpl cmp lret sbb or fs in aaa pop dec jns int testb jg shll cmp mov popf pop arpl mov jg arpl jae ljmp jg dec cltd loop data16 mov lret mov inc inc pop jg clc and adc jg ja stos push insl add jg pop and cltd inc (bad) jg jge in sub jnp test fdivr stc xor sbb cmp dec add aas mov push jg iret in pop loope loopne scas mov xchg cmp add push inc push out test fucomi cmp fwait les pop mov fdivrl mov rcl jg mov out sbb pop repnz or cmpb (bad) call jg lods push mov jg fstl incl out push add adc std mov int3 xchg cli sub arpl jg jo jl mov and (bad) jae add xchg mov jg fnstenv dec jg ja jecxz xor mov pusha jg repz add in push jg cmp faddl hlt jg inc repz add pop rorb arpl mov add xchg jg jnp inc enter loop aad movsl sub (bad) cmpsb cs mov jle outsb xlat adc clc cld dec idiv jg sarl sub mov icebp inc mov and loop ret neg push sti out xor outsl ja or jbe imul (bad) jae in ret cmp jns pop lcall dec fwait sub jg mov jmp mov (bad) or mov xchg mov lret mov sub inc imull pop mov cwtl mov sub (bad) (bad) jg sahf xor lcall mov lods loop jp adc xchg dec arpl and (bad) mov dec adc jne jno insl jg cmp ja in pop jns ficompl dec jg sub adc jg or push imul cmp mov in inc jg jle or inc jg or (bad) lock mov imul xor adc jg es pop adc push shrb bnd rcr xor push test mov cmp dec dec sub dec add mov aas inc pop add inc jp sbb and fs ret pop lcall sub cld jg sbb aam cmp push jg dec in pop add aas pop cld je sarl lock dec popf inc (bad) dec pop test (bad) (bad) dec sti arpl lahf (bad) jg inc fs imull jg test adc aas mov sbb add dec sti jp xorb jg std das mov mov mov inc hlt daa xchg mov lea push sub cmpsl fldenv inc pop outsb lahf insl insb mov mov jle inc enter aad mov clc push jg ljmp inc add loopne mov sbb out adc test outsl push jecxz cvtps2pd and popf inc mov jg or jg inc mov mov sub xchg enter mov outsl into (bad) dec es ss pop out dec ret sarl movsb sti inc lds jp pop and scas push rorl push lret js inc cli xor movsl pop jg pop jl repnz mov mov jo inc dec stos mov jg sub mov or jb daa ja lds jg dec lods test ss push mov in pop rcll dec test xchg mov xchg jg and lret mov pushf pop pop aas lea inc rorl test ljmp dec (bad) xor mov cmp pop repnz mov mov pusha dec pop pop dec mov aad cmp mov fisttpl inc xchg pop in fisttpl jg mov xchg pop jg cmc loopne cmp sub stc cwtl outsl dec dec and cmp addr16 fstpt xchg mov pop repz sarb iret aaa cs mov jae jp dec aam sar and lea dec sub mov adc cmpsl adc (bad) jg mov scas or mov sbbb push pop jecxz mov adc out clc mov fwait jg adc sti push inc jg xchg cld aam pop fidivrl xchg data16 ja sub mov xchg xchg mull jg popa inc xchg loopne jg jl fldcw fmuls and jg add mov jae and je xchg xchg pop fstpl and addl cmpsl adc xchg gs in rcr daa outsl fmulp ret aas jno and repz stos jg mov push push jg inc gs pop lods les or mov cwtl pop rcl sbb inc or out and sarl dec lock fidiv or test inc fisttpll push ja test hlt std arpl jns mov mov imul or jg jle sub jg pop mov mov xchg cmp or pop or dec fmull iret leave divl lret cmpsb sub clc movq push xor pop pusha push jg int3 lods or jg jmp dec dec and and imul pop out into les cld inc sub jg (bad) xchg (bad) mov xor icebp sub add fisttp (bad) pop or push sbb mov addl mov lcall push imull inc jg xchg iret call jg or xchg int add testl ror pop ret dec jg pop or add (bad) jg push lds (bad) xor sbb jnp and pop add pop push std adc lods lahf jg sub aaa cltd lock jg mov add mov stos ret dec (bad) bound jg sbb ljmp lods not popf push or jecxz pop aad inc stos pop dec cmp lds push outsl (bad) popa fistpll shll das cmpsb xor loop insl pop imul jg pushf dec idivl sbb imul mov hlt push (bad) push jg fwait dec adc ss push pop add cmc inc negb xchg adc sub pop stc pop cmp push imul in jg push sbb push mov aad je inc out and pop dec dec jecxz ret dec insb or sbb jnp ss cmp pop call dec mov jb sti movsb jg fdivp loope test sti mov jo dec pop mov mov lahf xor ljmp fs xor sub pop mov ret mov std clc mov mov sbb scas mov jg push mov stos lcall add rorl mov jg cwtl enter (bad) scas mov and dec outsb test add fstl push insl fwait mov adcb jmp mov test pop xchg push sti daa jecxz bound cmpsl xchg sub inc jle add sub aas push lock xchg (bad) es mov mov mov or xchg iret dec js test test xchg inc mov cltd mov mov mov jg pop xchg mov stos movsl and ja into stos bound or mov call ds inc jg pushf jecxz imul pop movsb push jnp rcll divb dec add mov cmp cmp jg mov outsl xchg pop push pop jg adc (bad) loop in (bad) test dec mov sub scas pop push test sub adc inc lahf jno cmpb inc fadds stos cmp lods or jg loopne adc cmpsl aas das jb mov jne popf test and fmull sbb lret je sub mov out cmp mov test sbb push sub aad jg,pn pop js pop pop dec arpl dec aas data16 push mov and lret (bad) insb shll bound sbb and popa pop aam adc mov inc xlat aas dec xchg aad sbb mov aas adc xor int aaa cmp xor adc pop cmp sahf jg sbb decl xchg jg lcall jg insl and sub lcall icebp push (bad) (bad) cmp or xchg and movq leave dec sub aad add jg pop cmp jg,pn aam xchg flds js jg adc sub jg addr16 mov (bad) xchg mov and adc rorl fldt pop out loop jg rcll out js in pop sub loope jg (bad) jg push sti out ljmp int3 inc xchg push jg push xor imul stos inc rolb dec dec out jg notl sub pop sti mov jbe test jg incl jb mov pushf lret adc movq xchg mov cwtl lock imul push lods mov dec jg mov push dec xchg aad in mov test pop push sbb popa mov stc mov inc or adc dec pop dec jg fnop outsl dec jo ret jg xchg imul sti cmp xchg sbb pop sahf leave loope and jg mov fwait (bad) or jg mov int loope pop mov gs imul push decl out xor sbb out or xor lods test mov or pop pop ss jae pushf (bad) stc mov jnp fisttpl in popa jg ror adc xchg mov orb mov arpl pusha add ret cmp outsb in add jg test out cmp cmpsb adc jg jns push dec inc pop cmp dec scas jg cmp pusha jg sarb das ror out cmp (bad) sbb outsl jg daa (bad) add cmp adc jnp and jg mov icebp cmp lret xchg jg pop jns test fstpt and fs dec mov (bad) shrb xor int3 mov jno setne pop mov and inc mov and pop (bad) mov pop in addr16 (bad) mov outsl sub sub cmp or jle in add jg mov sbb mov mov jg xor enter es jg cmpsl cmp jmp inc jmp jg (bad) ja mov js jns or sub push jg inc mov xchg cmp dec loopne ret push jg out js jp xchg mov cmp sarb hlt (bad) call jecxz out push es jg loope lods test push add loopne (bad) out inc fnstcw xchg fstpl (bad) xor adc mov insb test or xchg outsl int3 sbb fnstsw jmp xchg mov sub lods loop jns arpl imul jg push data16 sub fs mov cld mov pop sbb mov jg xor jl cmp scas scas outsb les sub aas cmp ljmp clc xlat lret or dec popa addb cmpsl stos in dec add aas cmp out subl inc movsl aas imul jb addr16 rolb push sbb rcll or lods add repz rorb xorl and icebp push and int3 dec rcr or inc and xchg cld adc fmull into (bad) jae lret push js adc js jg jecxz mov or dec adc sahf pusha mov test loope mov inc pop das cmp push test lahf mov ja mov lcall sahf dec or jg pop test cli push std inc jg xchg adc xor outsb mov mov clc stos in pop and jg xchg cmpsl mov jg cmp mov inc dec data16 or or int3 dec pop lock das cmpsb sbb andl outsb int ret aam leave loopne js enter test jae xchg cld out enter or cli fadds jns pop fnstenv xchg in push stc pop pop push jg xor add mov stos ds in jecxz jp xchg jg (bad) jl mov dec dec scas mov bound lcall mov jnp jno jl inc mov inc (bad) mov sbb ds inc repz add jg cli or pmaxub shl mov cmp stc cmc iret jg insl add mov lret push and stos lds jmp mov cld pop mov push sub jns into jg inc jno (bad) push inc mov sbbl mov push mov shrb mov jle mov xchg inc sub dec mov push add inc or imul inc xchg daa lds xchg arpl stc and and out adc stos push in xchg jmp mov loope mov jg add and cmp push fidivr mov js lahf jg mov outsb pop mov enter iret cmp icebp xchg fistl sub jg movsb mov or test sti inc jmp jg out pop push loopne movsl jg push aaa mov jge dec scas pop in gs aas jmp dec xor jg aad (bad) js lock aas pop jbe daa and loopne adcb push (bad) sti pop jle xor sbb fisubr psrlq xlat insl ja inc out jg aam icebp xchg and fist push cmpsl out xor inc mov test mov pop les lret sti jg dec sbb cmp jge notl aam ret rcrb mov cmp out push sbb pop std jg inc sbb lea lcall mov (bad) ja mov pop mov icebp or jp jae and leave jg scas ret imul mov (bad) mov pop mov into jg fwait mov cltd leave add jbe mov jne sbb pop stos jg ljmp jg lods outsl cmpsb add idivl js pop aas mov test adc adc jg mov add cmp dec inc lods js jg sub stc call pop sub iret outsl xchg jg jecxz scas xor xor dec and sub int3 jg fwait pushf inc sbb push push lds add mov add jecxz pop gs stc std xchg mov mov jnp pushf jg hlt xchg mov arpl push push add xchg cli mov int3 mov stos jp inc dec pop scas cmpl adc (bad) or lea mov cmp rcll xchg repnz adc repz dec ljmp testl fcoms mov mov pop add mov mov add ja xlat jns cmpsl jg pop out rcrl (bad) pop mov jmp sti jbe mov clc add les mov jg fwait pop xor movsb ret mov (bad) cltd js or jg dec jae inc push xor lods push pop notb cli outsl icebp xchg push adc sub (bad) jbe pop mov aam nop push cmp mov and inc mov mov cmp cmp xor subl mov negl ret imul es stos div inc lahf dec and sub xor es jg leave sub sbb insl xchg out and jmp push das sub fiadd ljmp add lea mov (bad) popf mov jg mov lret daa jl push out ljmp in push cmp scas mov pop add push call mov mov mov out cs cmp sub pop fisttpl lods cmpsl jg stc stos lcall xorb mov pushf or ja lahf xlat sbb xor jg adc inc lds js xor nop sarl xchg xchg test and in jg into jl sti jg das out push jg pop (bad) mov scas cmp dec cs incl jmp (bad) roll outsl push setb bound cli sbb mov pop aas scas or shll push cmp push fnstsw out push dec inc repnz imull rolb inc ret cmp xchg fisttp aas cmpsb ds pusha scas (bad) or inc push outsb inc stc jg xor pop inc jg (bad) jne add aam push xlat hlt (bad) es mov stos cmc jle mov in xchg sahf and xchg bnd stc je js les mov cmpl fadd xor cld mov jne cmpsl adc jno dec jg jp sub xchg clc jg sub ja jg push ret cmpsb mov lahf insl push jnp scas sub (bad) pop inc adc popf jg loope call imul pop push (bad) mov pop lret dec inc lea int out into sub mov mov fldenv (bad) sbb dec stc inc das inc jb xchg test jg sbb mov fmulp push mov jg xor jbe mov daa cmp xor subb aam jne mov mov xor push ss imul and jg fstpt mov add adc jg add jp aad in xlat mov dec xchg out cmc insl fnstsw sbb (bad) aaa add testb bnd into jg lods iret jae adc jg pop cld pop movsb xor mov out inc mov push cmp cmpsb (bad) int not mov and xrelease xchg xor pop lret inc jg pop sbb fidivr cmp jg jg jo jo out out dec pop mov mov adc repnz ret ja mov loope fwait imul fisttpll (bad) leave and xchg mov add push jecxz jge jg loop mov jg out or mov lods leave xchg inc push push jg test lock int daa jecxz mov jg and fs in sbb pop jg or lret dec xlat xchg call or lret mov fcoml lahf (bad) int3 sub xor xchg je and daa mov mov push out dec jg sbb test test outsl fwait mov mov dec add pusha negb jg cmpsl outsl inc sub xchg aas xchg jae mov mov repz and leave jbe cmp je or inc sbb inc fwait xor out push lret scas lds jg outsb int3 repz mov cmpsl and sub mov xor shll lcall dec jne adcb mov fchs ret repnz imul or cmp mov push iret ss mov dec fisubrl aas mov cmp arpl idivb repz mov cmc push sbb pop push jl clc out pop jg in idivl aas ret test sahf inc xchg outsl pushf (bad) and stos fadds jecxz mov xchg jg dec addr16 xchg cmp add xchg jg sub adc sbb xchg imul cwtl cmp imul adc dec inc and inc mov negb jg pushf sbb mov test or xchg lcall pop pushf jae inc jg push mov inc mov mov xor or inc (bad) mov jl (bad) lret fsubrp inc mov ror cli sbb pop mov inc xchg dec mov jg in jmp (bad) clc jb scas in fldenv jg lret lods mov jg fs mov jg pusha daa ret ret mov fisubr lods je dec mov cmp or or (bad) mov clc xor sbb movsl adc int push inc popf lret push and mov mov bound xor xor or pop cwtl cmpsb cmp jg sbb xor ljmp jg add cld jg stos dec jecxz inc xor xor jle pop mov fdivrs xor mov in xchg (bad) jg dec pop aaa push mov sbb jg pop mov adc cmp jo push xor nop ficom mov fisubrl leave mov rcll jg scas mov inc pushf call xchg mov push hlt mov ja enter mov jnp ss lret fstp popa push leave (bad) or addl xor int inc or inc iret or mov gs inc nop subb add xchg sbb arpl ret xchg dec pop and lahf out and int3 jl or clc mov jae dec popf les mov (bad) inc push mov aas divl stos inc hlt ja inc jg jp jle cld in es les mov femms dec dec mov mov call jg sub add cmpl imul les scas int3 nop xor sbb outsl jmp mov js jp mov sbb xor cmp lea adc popf push ss cld inc lock data16 pop cli mov mov xchg mov jne cmpsl stos xor mov inc mov clc mov add jg mov addl xor pop push xchg inc add jg roll sbb imul scas lods mov pusha mov cmp xor inc or dec loope jnp (bad) cmp in (bad) icebp iret jg add xchg and jg jno sbb pusha mov and mov inc add jecxz and mov xor scas idivb sahf pop dec or cltd jmp fs adc or (bad) mov in mov idivb fisttpll dec jg pop sbb push jg cmp test and mov push ret repnz hlt jg cwtl fadd fldt jg stos add mov ljmp dec push and lret mov jle jg call add test rclb sub push cmpsl sub into iret js push jp ds adc std adcl mov jmp jo ja (bad) jns fimull ret dec lock add adc (bad) cmc add leave mov cmp xchg bound push jbe outsl test or out xor stos pop lret jnp repz cmp imul pmulhuw push (bad) sub movsl pop xor push add mov repz insl push rorl jo push inc mov sarl xor pop (bad) out mov push imul pop aad data16 je cli push adc mov hlt insb xor push push sbb clc xor idivl sub iret xchg aas leave pushf push int3 ret inc loope loope (bad) dec outsb cli js pop and jb clc jo (bad) mov dec sbb push cmp fidivrl jno push xor sarl or add cli pop mov jg out mov hlt push es add loop xor pop xchg xchg jle fcompl jg mov inc jnp cltd test decb xchg mov cmpsb fiadd enter and insl mov sub xchg ja int mov dec pop rclb inc sarl in jnp enter dec adc mov iret xorl adcl cltd inc daa (bad) enter das in out pop (bad) imul int (bad) divl ficompl dec fcmovne sahf rcrl faddl jg mov (bad) call push xor mov xchg es jbe mov mov jg movsb stos jmp jg pop and ds cli aas clc sbb and sarl cmp daa and cmc xor inc loope cmp std nop and lods rcrl sbb pop xchg mov jg (bad) fdivrl mov push mov jbe xor scas jg jne (bad) push inc std mov movsl (bad) (bad) cmpsb push adc jne mov out scas mov jno rcrl outsl push add (bad) sti add jo or and push push leave jg cmp (bad) jne lds xchg pop pop pop jl cmp (bad) push jge imul test jmp test fwait rcr mov inc or jg test jecxz or daa xor addr16 xchg rorl adc adcl cmp xor xchg sti or cs repz loopne fstpt bound pop mov lds dec pop jg jbe dec insl cld add jg sub and repz push jg push add jg pop or jg inc adc jg add movsl adc sbb or sbb jmp popf mov sbb dec (bad) mov repz leave jns pop lcall sbb je push jg cmp and jnp mov or xchg add push (bad) popf shll in jg jns testl ret mov and push jg (bad) mov lahf dec test jg and fidiv fcmovb add std mov pop pop out xor sub call data16 mov jg pop loope fmul (bad) mov and pop xchg mov jg fimull pop push jle jnp fstpl sbbl mov sbb mov inc sbb stos jmp in inc movsl jg xchg jge and rcl inc xor cld xor insl mov cltd jno jno mov dec call stc in mov mov inc aam sahf jg shrl sbb xorl inc mov lea mov mov cmpsl aas or sahf jmp dec in inc (bad) xor sahf lcall sbb fild jns and pop loop inc jecxz xchg mov cmp (bad) mov mov push or sti iret adcb rcrl mov cmp (bad) jbe imul test jg sti adc jg or rcrl mov jp ja insl adc mov mov je inc (bad) mov and jnp rcrl in add data16 lret js cmc pop repz sbb dec mov inc jg mov cmpsb sub jb pop add jg or faddp jo fwait push ja test cld addr16 mov out fisubr jg inc leave mov (bad) stos iret fs in mov pop lods mov xchg jg loope dec add arpl mov xlat xchg xor or jp xor or imul xchg mov fimul leave inc addr16 and mov add jg stc enter lea outsl cmpsl (bad) incl jg dec inc jns sar std mov (bad) insb xor sub or jg pop fmull jg insb push je mov xchg jg sbb int push pop lcall mov flds inc jmp cli loop mov out sbb int test mov fs dec dec add jg mov subb rcll jg inc jecxz int xchg (bad) jg ret movsl xchg push jg data16 imul sub mov es cmp fdivrs loopne daa bound add push outsl rcrl imul jg stos adc mov or das inc mov arpl sahf inc adc cs ret add orl or mov jg leave xchg ficompl inc and jmp add out cli jg push jns and cmp fistpll pop inc fs bound mov jnp jae and jno push dec fincstp sub mov or in pop jg adc cld sbb loop lods fsubrl dec aas and fistpll pop pop testb dec aad in dec xchg test fnstsw pop jg loope xor (bad) inc mov xor addr16 and fstpt arpl movsb mov xchg insl and jg jne dec lret cwtl push mov cwtl jecxz inc insl daa jg and les jbe mov inc scas pusha idivl (bad) repnz bound sub in lock iret jg stos mov jno lods jg pop dec cli loope xchg jbe mov and ja pop (bad) movsb pop adc lds enter sub jmp cmp cmp fsubrl mov movsb aaa or enter cwtl lods jmp jg pusha cmc add mov repz cmp inc mov mov xchg jle mov xchg rolb cmp mov cmp cltd aaa sub loop sub ret adc inc sbb mov jmp mov ja fwait jg pop fstpl es mov mov sbb push jg xchg pop jge inc sbb jg lods dec cwtl incl dec fidivrl lret adc jg pop inc (bad) jle mov xor fdivrl pop jl mulb jg insl out pop lods pushf inc inc jg xor push cltd fidivrl jg mov cmpsl in out scas aam dec xor push fs push cwtl lds test outsl and mov bound xor fnstsw lea jg inc iret (bad) lock jmp jg (bad) bswap sub lcallw test adc jg cltd or lods fs and sub int3 inc mov jbe cmpsl add push sbb es mov lret into jg inc cmp data16 push or out add and add andl or cmpsb sarb ret aad sub jg cmp adc inc jg dec lcall add jg xchg fstl das dec mov lret test cld jg repz pop aaa mov xchg cmp insb in pop mov xor nop xor mull shrl cmp pusha inc ss jno mov inc jae pop xchg jg cmp mov pusha std js ja fwait inc lret jg in push cltd add mov sti or sbb jg cmc mov ffreep inc lahf mov fnstcw and mov (bad) jg xchg mov les and inc jg jp subl pop and sub aaa xchg out jge dec mov inc push cs movsl lret inc ret (bad) push jg (bad) in push sbb mov sub fstpl pop aas test add dec lods bnd xchg fmul in outsl jno mov push add scas jg push insl call jg pop or dec (bad) mov stos mov sti stc jo ret into jge (bad) repz stc mov movsl xchg jg shlb (bad) dec aaa hlt loope push sub sub pop dec cmc mov out mov xchg mov (bad) sub mov add cltd movsl in push pop push inc inc mov add and clc inc adc xlat pop pop insl or sti xchg jl adc or xor ds not push mov mov push xchg fistpll nop mov dec in push jg cld cmp and mov aas dec loopne jg sub cltd sbb pusha repz mov mov pop xchg inc out imul or push jg das cwtl mov xchg scas mov jg mov xchg pop xchg add repz lret jg mov jb or pop (bad) or int cmc adc mov add daa lea jns mov subl push fwait jg pop aam adc lds mov or adc sarb mov enter notl xchg pop jg pushf dec sbb scas xchg imul or jg ret xor out ficomp int mov addl dec dec mov mov or aam daa jg dec add int xchg lahf jg fimull (bad) cmc cmp push jg sub dec mov aas sar xor adc xchg mov and push pop xchg pop sub jg nop mov xor mov jno jg das (bad) fldt xchg jg out cltd lods int3 dec sub pop xchg pop std pop xor repnz mov mov addr16 mov push in adc xchg add ja xchg jg dec inc mov cmp add gs jno pop cli jg fdiv pop jae sub mov mov stc or addr16 out (bad) lock jg push inc xlat inc inc mov sti ja imul add pop popa push sti mov push pushf ret add and loope cmp fstpt out mov adc jg into add mov inc iret lret out rcl ret cmp or pop pushf pop xchg sub or cmpsb and push out out lea push fimul movsb lea mov jl inc or punpckldq xchg ss lods pop daa jnp push add and mov je add lea inc cmp cmc rorl sub pop dec xchg imul jg sub enter arpl xchg repnz addr16 xchg sbb dec dec fbld mov pop clc inc mov fnstsw cs andl push dec mov jl fildll inc test cmovbe out inc jg out mov jne mov lcall cld adc les mov cmp sahf insb mov push outsl sbb jg jns and pshufw outsl cmp pop jg jnp pop cmp insl adc lods push jae clc mov (bad) pop flds jge mov out inc repnz or dec mov mov mov lods jae mov ret mov dec mov sbb (bad) bound push xor and (bad) out loop fsubrl mov int lret xlat in mov mov push xor out jg sub popf jp sarl (bad) pop sahf jbe orl fstpl pop push push aas lahf jge repz in (bad) scas inc xor xor push pop xor imul lahf leave or aad movsb int inc decb fwait inc aaa iret jg dec test push decl push iret loop jg (bad) xor sbb icebp mov jle dec dec sub gs jge add inc xchg cmp xor ss dec mov jg pop cltd mov mov sahf dec xchg pop test cmp mov ljmp mov sti mov icebp mov inc movsb xor jg aas outsb push fstpl jns xor ss cmp mov mov (bad) movsb aaa jg and ss popl jg cltd adc sbbl aaa xchg lea test addr16 outsl add mov jmp ja mov sbb mov dec jns repz jg push sbb mov mov mov inc push jecxz andl mov sbb adc gs add ljmp (bad) xor jg cmp sbb mov imul cmpl out jg sub and inc xor jg std in cli out les lret xchg test push inc clc sub ficom pop outsl shll mov arpl std inc repnz adc push jle ficom imul test pop lock cmp inc and fmulp jmp adc jmp ss pop cli les mov test decb das xor lock jg add jg xchg mov pusha adc sti xchg pop adc jg fnsave es push jg lock mov jae adc lods pop xchg push xor aaa (bad) push sahf lcall hlt push jno jbe mov faddp jg inc call xchg sti repnz std mov aas dec fcomps outsl scas out and jg jge ret out add jg mov dec cli js repnz leave mov cmpsb popf (bad) imul repnz mov loop pushf je sub mov jp mov outsl pop fwait pop xor mov push sub jae mov lret adc ret sub push stos aaa jg xor (bad) outsb jae xchg add dec (bad) in ret push jb or jg and mov jl ret pushf dec dec inc pop movsl fbstp cmp push jg mov jg dec popf pushf loop out mov mov sub jg cmp add fcmovu lret push xchg sbbl fisttp mov jno cmp inc fstl inc jg jae jle sbb lock mov push call mov pop imul mov jg sbb push cmc mov add dec subl pusha jle adc or jp sbb daa mov jg (bad) sub test push mov imul xor pushf fnstcw or pop inc inc jg and orl pop cli fcoms inc movsl aas pop pop mov mov sbb cmpsb mov push sbb jg in repz jg xor cmp jecxz sbb mov jg and jne insb arpl mov in dec mov or leave push adc sub imul dec outsl dec xchg ja popa inc pop xor cmc jg icebp imul mov xchg outsl insb jb fnop pop jg mov or ljmp jg imul mov cmp xchg rolb mov jg fcomp adc gs (bad) sbb in xchg aas jmp cmp ret scas data16 fstpt test mov loopne push mov pop jno push out in jg into lcall enter ja mov cmc lret pop ret jg sbb sbb jg and in add dec jg adc cli cmp jg pop lret pop jl xchg rol jg cmp xchg pop push or sbb xchg enter pop adc ret test (bad) xchg cltd sub (bad) fidivr (bad) mov xor or outsl dec mov insl loopne mov jg cmp mov and adc and mov sarl ljmp inc sub cmc out jg (bad) xor out jp fwait xor jg int3 adc (bad) xor (bad) jae les repnz adc dec inc cmp xor jg sub mov sbb or xor dec xchg ds arpl ds jg xchg fucomip push push mov push stc ficoml dec push push xor lea xchg xchg xchg mov add gs dec iret bound int3 lock aas mov cmpsb and jbe dec fs shlb dec add mov add xchg (bad) pop xlat or sbb jb xchg insb outsl jnp cmp xchg or inc rcl xor dec hlt pop out das jg movsb stos (bad) cmp mov cltd jge jg lahf or xor inc mov lods dec jno jns mov xchg pop ret jp (bad) jg mov or aas nop jg mov push ss xchg repz sbb adc sbb movsb inc adc nop ljmp out adc sub stos mov cwtl aad out nop sub dec jno jle cmp jg mov add inc pop mov sarb add pop jge cwtl gs jg pop fs inc mov mov iret dec andb into inc outsl inc in cmc add dec pop test mov lret jg (bad) out push loopne jno mov pop (bad) xor sbb fnstenv dec add arpl mov mov int xchg xchg jg repnz jg (bad) jno stc loop cmpsb mov scas test inc je sti test xchg (bad) add sbb out call push (bad) jg sub mov mov jg aaa js ss (bad) push jg (bad) push or in sbb stos inc std ffreep jg xchg xchg aas and test sbb arpl fnstsw daa lret push jp icebp xchg int3 aas repz inc clc lea imul cmp xchg pushf lock hlt iret test lods int add sarl lcall push inc xor fdivrs push inc sub lods js rcrl cvtps2pd std arpl mov pop inc mov lods jg out sub push add mov mov popa jl insl pop int idivl cld rcr jmp outsl out add jg in push xchg pop sarl inc lock jle jg loop call mov addr16 push mov inc xchg ja dec jecxz repnz add adc outsb push adc push dec rcll loope mov ret jge leave dec shll loope mov imul push js or dec mov aad imul test jg mov sbb popa (bad) stc mov (bad) js outsl fldt push test dec jg sub loopne pop (bad) aam stc ret mov jne mov xchg mov dec out fiadd inc in (bad) and std push jg mov imul or arpl cmpl es dec data16 inc out lahf dec xor (bad) mov jno jns mov push nop inc cmp inc and mov dec add dec jg xorl sbb xchg nop inc mov fisubr jg xor enter sahf jae jne lods in inc xlat fnstsw sub repz pop pop mov popf push int mov add (bad) fstps cmp lahf out lea jns xchg mov mov pop clc jbe jge (bad) jo adc outsb pop popf mov and dec and fwait popa dec jg cli into or mov sarl jg out pusha arpl fdivrl fs jmp fistl xchg popa sub pop ret xchg sbb sahf gs repz cmp mov (bad) sbb dec dec inc cld cmp jg insb xor jg push jecxz and (bad) out andl cmp jg lods pop xchg sbb sub pop pop ficom or mov movsl icebp push add scas loop mov iret sti stos xor inc dec (bad) and lret mov in mov mov adc or push and cmp cmp sarb adc and je jmp dec xchg mov inc xor es jg pop dec movsl rorl aas (bad) in sbb inc adc (bad) jg pop out pop loop shrb iret xor add and dec push out cmp pop jg sbb aas or mov dec dec adc mov push jg jmp fwait lcall xchg pop loop push movsb jg cmpsb xor jg mov scas fiaddl iret incb xchg outsl imul loope jl ljmp fildl jg pop pop (bad) pop add cmpsb and mov es fistp ret mov dec imul pop mov push add in out and les jg adc mov (bad) int mov insl xor loop push jg mov jg daa loope mov pop jne and test dec int (bad) dec add adc mov push clc std lds incl cmp lods sbb cmp or cmp dec xor std inc rcrb dec (bad) mov cld mov add jg cmp jg mov xchg jg jge or loop push jg jae jmp scas sti out aas adc add mov ds sub outsl dec pushf pop and cmc gs fisubr jae jmp and test or push xchg mov bound int sbb into pmaxsw lods jg adc popf jg stos pop mov inc cmp pop inc lret add sarl fild js stos pop loop cltd sub adc pop (bad) mov xchg aaa jle pusha stc fsubrp fbstp xor mov pop stos and imull outsl mov test push lods fsubrl (bad) sarb cmp bound adc xlat sub ds rcrb xor scas lahf je pop lret push or mov popa mov or jae xor cmp and sarb imul insb loop lea scas ja sbb insl jg sbb sbb fdivrl dec out cmpsl scas cmp es and js xor rcrl inc inc icebp cmc sub jg xor sbb lcall rclb lods iret (bad) aas sets daa xor inc jmp shrl sti xor jg sbb stc mov dec push imul rcrb arpl stos push cmp inc cli (bad) adc xor and add lret xchg xlat std xor lds and (bad) cwtl movsb lods das jo or xor mov push jg (bad) jne cs mov xorb xchg jg scas sub cmpsl mov pop inc das loope mov push inc or mov mov xlat jg adc cld dec mov ret in ss sub push push cmp cltd mov nop test into mov fildll idivl pop insb mov addr16 pop imul adc es jg push cmp insb lods adc inc pop mov dec sarb jecxz push out add jg jne fistpl pop xchg mov jmp mov pop repz sbb and jg scas cmp xchg mov sub daa adc jg push lds pop ret mov mov pop addr16 rorb inc push imul out and add lret jnp fisubl push fistpll mov push (bad) call (bad) mov jg inc xchg fcompl push pop mov and in cmp inc dec mov fidivrl jg pop or daa sbb inc xchg pop stos push xchg arpl or dec sub dec inc add cmpb popf fmulp dec add jg push aaa mov outsb push lcall jg,pn gs enter jg push add dec aam pop data16 mov jg xor sub scas (bad) mov aad cmc jg ljmp jg inc add jmp cmc mov rcrb sbb dec add mov adc mov mov inc cmp fstl jg and in sbb mov xchg outsb ja sub adc jg jle lret mov jg cli fnstenv sbb xor push push dec scas jg lock mov inc jbe inc ret xchg aam (bad) aas fildll xchg les mov es pop pop popa fimul mov iret (bad) jmp (bad) clc sahf mov pop pop sti gs sub sti cli dec outsl sub jb js jae mov ret fist dec push push jg or lret push mov jg lds push (bad) and fs insl mov dec inc cltd jg,pn push push or call lea adc out das jg jmp lods inc repz dec gs fwait daa arpl sbb fsub dec into sarl adc mov push popa sahf mov pop mov jmp lea inc or lret dec xor stos cltd cmp jg lea jecxz jg sub rclb std das aas jno mov adc adc jo sub ds jg fstpl loopne jp jg arpl out rclb jg push mov (bad) lret mov pop hlt fildll mov ret stos cmpsl js mov (bad) cmp cmp xchg xor pop pop inc popa ljmp dec pop rcrb roll dec mov jg daa sti js push (bad) int push jecxz cmp pushl fdiv stc pop sbb jnp iret cs mov mov dec aas (bad) push jno adc xchg cmpsl add jg jp push data16 (bad) xor idivb push inc rorl cmp add dec pop add imul inc loop cmpsl adc das cmp hlt mov push and ss mov add jmp xor pop xchg (bad) sti idiv mov dec dec test pop stos jg les insl fsubs aas and lods cld lret repnz mov push xor or daa adc cmp shrb mov push jge out fwait (bad) pop (bad) sub rol mov xchg out jl mov shrb jg aaa pop es fbld jg or mov test inc ret xor mov stc insl inc sub or movsl scas dec cld mov and push arpl scas fistpll lock adc insb call in sti (bad) pop cmp (bad) mov (bad) jg movsl pop rcpps loop ja (bad) stos add dec (bad) shll jb mov je int dec cmp push out dec aaa mov push push int3 pop movsb dec dec fdivrs pop cs in cli jg,pt into pop inc jp data16 hlt and mov sub dec popf pop clc mov fwait xchg mov mov inc mov arpl jg mov mov sub fldcw mov inc inc sarb int nop mov lret xor jg (bad) or (bad) dec inc jg cmp jnp sbb dec jg fistp cli data16 xor (bad) subb inc scas adc adc (bad) jg rep mov jge popa jne stc adc in dec dec mov sub arpl jmp pop and jg xchg cwtl ljmp cld movsl mov mov adc into aas stos cs mov pop sbb inc sub inc pop xchg imul pop add enter gs adc and jg add push lahf mov repnz roll xchg dec sarb or jg icebp test and jg imul arpl adc inc les mov data16 jg push add sbb leave push inc adc jae test arpl ret pop aas mov lret jg sub (bad) cmp jg or or xchg pop inc pop mov inc aaa imul jg or mov scas xchg in inc jne xchg adc incb cs aas jmp js negb pusha pop in inc and jg fisttpll mov roll push test mov push and out jg cmp xchg loopne jo mov mov mov push mov jmp std outsl and (bad) repnz jg mov sbb push lods jg adc pop test jg xchg xchg adcl xchg jne adc imul scas addr16 lods sarb fild or sbb mov cwtl xlat inc scas out mov aas jno in mov sahf test sbb xchg cltd mov inc and lods add or jecxz clc dec jg out sbbb sbb cwtl xchg cmpsl jo popa lret or and (bad) mov mov inc cmp and sub pop push aad fs lods jg mov test jg xor or jg nop fcmovb xor imulb sub pop je pusha jg xchg dec in imul loopne jg (bad) add xchg add pop leave or fdivrs rcrb clc mov ja push (bad) cmc push mov pop mov dec out (bad) scas movsl xor jl and cltd mov xchg dec mov add cwtl jg sub in hlt sarb fnstcw int pop test jle push sahf push mov sarl mov in dec adc lock jle push xor icebp jg cmp sub inc mov call xor xchg and xchg mov ss in cmpsb dec bnd jg mov add loop mov dec aas mov sarb icebp (bad) popa sbb cmpl add or lcall mov in or aad pusha subb js jmp xchg ljmp jg mov fstl dec inc push inc pop jg imul mov (bad) das rorl and lcall out je pop jb push add mov test sub xor cmovle or lcall mov in dec nop rolb jbe adc (bad) jne leave (bad) jns inc pop in js add clc mov sbb or out lock icebp mov fist push das stos mov inc and jle jg xchg fldl add jg rcrl imul sub inc add aas xor and iret aaa lock lret fimul mov mov orl dec cmp push xchg sti int inc cmpl jg,pt cltd and pop xor jecxz ja mov fdivl jg (bad) std mov mov mov cmp (bad) jle jg jl sub pushf push pop pop mov sub sbb jb jnp lcall ficom mov inc repz inc sub call aaa mov jg dec vucomiss jg cmpsl out ficompl outsb sbb add std lock sub mov dec lods mov dec inc test fs movq (bad) inc adc pop jg mov aas cltd inc cmpsb mov push lret add push sub jmp mov jg jp inc sbb (bad) fistpll lea fstpt dec sbb jg (bad) push aas ljmp dec out divl int3 and pop pop push mov sub xchg and jl,pt mov bound cmp outsl (bad) mov jg bound fbstp inc enter loopne cmp out negb jle jg mov push cli sti mov mov ja and repz jg jb or jnp pop mov adc cli ret push (bad) stos mov hlt inc rcrl lea adc js xchg mov xor dec sub repnz je loope scas mov jg sbb pop jae adc jg xor jp cmp jg or ficom and sub mov int loop pop jp ja adc mov sub (bad) mov jb imul (bad) dec test insb mov cmp mov and in push add int ljmp pop out dec mov lods (bad) pop sub cld mov mov or dec jnp mov xor data16 (bad) lock gs mov cmpsl pop out jg or out mov mov notb jnp in fcmovnbe jge pop insl orl jbe xor xchg jg xchg out mov inc into mov outsl fsubp aad mov stc es ja cmp cmp movsb pusha test pop mov into push inc mov push mov inc push mov (bad) mov std add jg push sbb (bad) sub in inc jg,pn xor mov insb adc jg push or clc add pop sbb jg cmpsl sub and ss push sub xlat leave shrb shl nop loope xor mov into jg test cmp lods xchg pop jg xor or movsb xor (bad) cmp ds xor stos or sbb or enter push and push sub sti stos ljmp imul lds aas inc mov addr16 leave pop out pop in mov jg sub xchg or pop jg stos test xchg fistp jg mov jb mov jp jge gs lcall adc adcl xor jo add xchg push lods pop popa cmpb cmp rcrl xor fwait inc cmp loope push sbb es out fs clc int enter mov mov jl ds push xchg insl mov mov outsb push jne adc jg (bad) pop mov dec adc xor jae mov (bad) xor push jno mov push or aaa jg scas enter push push insb ljmp test scas aas repz jae xor jno (bad) xor xchg mov xchg xor rsm daa jg,pt or push sbb jmp dec jne je aas mov sub arpl mov jbe or ss sar mov js xchg out pop mov sub or add mov dec hlt pusha sub aaa insb and jmp data16 push out fildl dec mov lcall mov adc dec jg sbb mov cmp into pop mov outsl inc fs mov jg mov add test jns enter push add push jbe xor int3 add js iret aas lods xchg fdivrl and repnz adcl mov jecxz mov cmpsl pop jno pop jg popf mov hlt mov movl test mov out daa push mov mov add jp (bad) outsb sbb mov daa adc push sub cmpsl leave cmp fsubrp lods pushf decb in push dec adc jg dec mov sti jg jns mov test lock movsl fwait fwait lret jb repnz mov scas pop std hlt sahf imul jg repz icebp pusha or sub jg push das mov and data16 std outsl xor aas gs adcl jg leave sbb (bad) jmp jg jne inc push xchg xor xchg xchg movsl pushf inc xchg out pop jb cmp push or jp and dec mulb mov sbb outsl dec xor or dec scas dec pop push bound orb xchg test add js jae and jg ficom adc arpl (bad) xchg jno pop popf std popf daa sub sbb jg mov xor sti inc jg pop dec or ror jg xlat push xor pop cmp inc imul movsl rcl nop sbb push shll or dec jg flds pop jg int pop add xchg leave jg fsubl push (bad) fidivrl je daa jb xchg icebp inc cmpsl mov dec faddl ja fs sahf invd idiv dec int (bad) out cmp mov mov xchg push sub aam das mul (bad) clc pop mov cmpsb jg cmp (bad) and dec daa jg mov cli cmc mov addr16 inc xlat dec jg jbe fwait xchg add (bad) inc push ret fnstenv pushf int jg sub sbb pop jg mov push push jg (bad) outsl orl add or and ret mov pop pop nop arpl mov cmp push mov pushf sbb fistpl jg ret call dec sti xorb pop test cmc loopne mov fstl dec pop pop sarb sti add jo jecxz dec pop sub push test jg stos jb test mov aaa push jmp loope push mov xchg inc js ss jg out xor cwtl adc dec or xor fisubl jg add mulb repnz add xchg addl ds data16 mov and sahf hlt cmp sar icebp or push jecxz jle mov cmpl sub inc lcall jg push popa mov xor inc jg aaa les xchg aad lock xchg jg (bad) pop mov dec and lahf adc aam adc stc cwtl inc sbb jg cmc arpl pushf sbb add cld lret sbb (bad) jmp push mov jg mov lods dec jg xor mov test lds (bad) gs (bad) je jg xchg loop bound or daa imul pop jg xchg out shrb xor rcrl inc lret icebp inc jg or and xor mov sbb rcll jg stos clc test jg movl div fisttp jg push pop xlat addr16 fcmovne clc (bad) inc push jg adc aad xchg jg ss insb push cmp lock sahf jg cmp sub xor sbb outsl jg or lret xor adc pop jg dec pop popa in push pop out mov testl lcall loopne push mov enter stos iret lret das icebp dec dec mov sbb sub sub xchg mov mov push mov (bad) and icebp cmp lahf lock jl test lcall mov sub movsb cli and push cmc ljmp sarb jg or icebp sbb movsl cmp lods lret push pop pop pop jp rcrl inc popa loopne mov pop adc leave out shrl insb lods mov adc sub (bad) dec jg mov sbb sbb adc xlat mov mov lret fsts cs stc mov fnstsw addl mov xor pop add (bad) jg lcall jg addb push push push push pop push call mov nop outsb jg xor jg (bad) push pop pop xor sub fisubrl pop adc xor push xchg jg add repnz loopne ror sub or push adc adc test jg,pn inc adc rolb jg cmc or enter jg stos cmpsl push jo fdiv mov pop jp fidivl mov or add sub fistl pusha cmp mov fadd jg cmpsb pop jae inc jg (bad) adc pop jp and lock fildl jg mov pop push mov insb aad sahf mov lahf pop insl out sbb jg dec adc pop cltd jg out pushf test (bad) pop xchg fcmovb jmp mov xchg test leave shlb outsl mov cmc cmp insl std adc mov out subl cmpsb jg add lcall jo mov das ret mov or and imul (bad) hlt pushf clc sbb jg sbb fdivrl add in fwait jge in sub inc arpl stc loope pop out not popa xor mov jg mov inc je rcll jp (bad) mov and mov sti lea movsl outsl mov fwait dec mov adc xor pusha sarb and adcl ja jg adcl mov or sub lods loope rolb movsb in xor sbb daa lea jg shrb stos ret mov aas outsl aad inc out pop repz movsl sbb cmp push push fsubs jg aas xchg sbb insb xor mov rol cltd push adc sbb or sbb dec (bad) push sbb dec test out or aas inc xchg lcall leave push je popf jg cld mov neg cmp aad mov sti cs fldenv in cmp mov enter sub xchg mov insb push cld dec ret pop inc sbb es dec add push fldl push pop jmp mov cmc mov out scas aad cld mov and inc stc sub mov dec cmp fcmovu popf push mov or mov xor pop pop pop cs mov jg movl cwtl pop mov jno mov xchg jg imul aas jo add xchg loopne cs jle inc cmp and fstpt xor (bad) js mov pop add cmp pop pop sub inc and mov ss inc mov fistl mov aas imulb jb push ljmp insl xchg out (bad) (bad) fs outsl (bad) arpl push mov scas sub cmp js jg and cmpsb aas push test lcall jg push cmp cwtl (bad) jg dec sub xchg mov cmpsl jg adc (bad) inc jle cmp jg cmpsb sub outsl scas sub int movsb out stc inc jno xor jecxz cmp insb out ljmp int in aaa or mov mov dec jg push stos outsb add or decb xchg push les adc or sarl loop mov jg xchg push pusha inc cmpsl xchg mov in mov sbb inc imul mov jg xchg pop adc xor push je inc call ret ror or adc jg inc pop sbb in sub imulb data16 (bad) jp aas push clc dec mov sub in out or adc mov push cmpl adc dec add pop push jb jg xchg (bad) gs jecxz in lock adc arpl je (bad) (bad) int sarb jge cmp pop stos jae inc jg or cmpl or jg and lret jg cmp lods outsl out (bad) lock cwtl (bad) cmp push fwait push enter sbb daa clc iret sub ja cmpl pop pushf pop adc push rcll dec orb mov js jg lret jge fsubr sub les push and cwtl lea xchg jno lock sbb xlat xchg sarl outsl jg cmpsb imul and inc imul daa in push jg movsb cmc test lods add mov loopne pop aad cmpsl mov xchg sbb lret xor stc addr16 hlt bound or js repz add rcr outsl popa inc bnd arpl addb jg cwtl push test jg jbe mov cmp xor aam mov js jge outsl push lcall jge dec cmp add in push insl stos rol inc jg xor push lret jmp cmp jg shr and mov add inc inc ja bound fwait jnp lea sar sub dec subl jmp cmpsl mov aam test jns jbe ds mov inc (bad) mov mov mov sbb (bad) insb in es pop ret add mov jl xor popa icebp aas jg call cwtl clc jg movsb int3 pusha mov mov scas sbb jno jg dec lds jg stos cltd sbb push insl dec (bad) jo jg sbb fstpl adc pop (bad) jg std insl int mov lds (bad) jle push in sbb sahf xor mov xchg rcrb ficoml push mov sarl stos jmp mov leave inc jg jl lea jno sub push dec subl inc jle iret mov mov pop (bad) out sarl shrl insl dec inc loope jg pop inc pushf adcb loop cmp cli xchg out mov into lock in mov aas adc pop loope mov std cmc mov push stos out jg push mov movsb loopne pop sti or mov enter ret jnp fstps jle nop xchg pop push insl aaa dec rclb loop or fnstcw movsb popf xor mov dec gs jg add sub jecxz stos or aas cmp xor mov gs jg xor cmc call adc loopew mov jbe es jg lret ret pushl dec pop aas dec popf jmp test jg outsb xchg pop xchg jg add jecxz jg push push xor jne cmpb xchg xor insl xor scas loopne inc adc push int fwait jns inc lock lds jg fadds daa jg in cmp fwait xor or (bad) and stos pop jbe xor jg inc test loop cltd jg inc adc lahf dec inc clc mov imul and rolb (bad) mov cmp aam mov inc push xchg cwtl dec das in xor jg xchg (bad) fucomip pushf lods push jg cli xor or daa fsub (bad) fmul dec or imul ds cmp (bad) mov jae push insb adc push mov pop inc adc mov nop push rorl or ret inc sbb dec jmp cmpsb pusha mov cmp ds scas sub xchg loop mov gs inc pop xlat (bad) hlt mov mov adc cmp or lret jns xor pop jg mov xchg jnp mov out cmp lea adc test sbb jg (bad) jmp mov push les pop and add jg push insb lods jmp popf into jg dec ds jle stos push sti cwtl dec jno ja mov (bad) aas in sub rol adc push mov sti jl mov sbb cmp adc pop int push mov jg lahf mov jg cmp addl mov push mov jg fwait inc sub add leave mov push add movb (bad) jg or fist jge (bad) cmc sbb pop stos in popf inc bnd lahf jns mov and mov (bad) mov or (bad) lock cwtl jg ror add add cmp inc push jno sar jbe jb dec aad pop ret das mov jl outsb jne ret mov mov sub lahf xchg jg jbe inc loope jno jg cs xchg dec inc jmp movsl stc nop and ja mov jg push mov loopne cwtl jmp imul inc and imul movb movsb add cmp mov mov divb cmp not rcrl outsb mov inc sbb adc mov and gs add cmp add push outsl dec fwait xchg lods jle cmpsb daa pusha cmp (bad) js push dec sbb movl cmp inc and push mov outsb mov fdivs aam cmp in mov outsl xor mov push xchg lods mov in cmp mov insl outsl aas cmp dec test xchg and sub adcb push idivb fnop pop adc jg out int3 rol cmp mov mov adc bound jle shlb push mov fwait xor scas jg mov jg or cmpsl inc dec jmp mov adc (bad) inc aas adc xchg cmp dec hlt mov jne ficoml neg sub jg movsl mov test dec into mov jg rorb (bad) xchg loopne in fmulp fdivl imul mov cmp jnp movsb fstps daa push mov loop fs mov loopne icebp push cmpsb lea addl outsl (bad) arpl jg xchg push dec lret jb scas jg sbb and shrl mov mov fs jmp enter mov fnsaves cmp mov inc sbb sub dec adc aas aad fild lcall outsl mov (bad) bound imul lret andl dec inc popa push lret clc insb cmp add pop dec iret mov pop push xor inc push sub rclb jg sbb xchg dec enter sbb addb lods jg iret inc ljmp daa cmpsl cmp scas jmp leave repz sbb nop pushf (bad) jg or ret and aas jne mov aaa les std jg mov es fisubr pop in fldt jno rcrb jo adc cmp sbb inc cld xchg idivb sbb lods sub mov dec aas and mov cld dec jg mov pop jmp fs mov pop jg add fbld cmpsl clc (bad) (bad) aad xor mov lcall inc inc sub inc iret out mov jmp sbb dec test mov sarb int3 pop pop pop in mov pop push mov cmpsb mov or (bad) push loopne mov sti out dec cwtl das inc mov loopne mov minps jg fsubs mov adc mov mov or sahf jg cmpsb cwtl or aaa mov xor mov and sbb lret inc pushf or out jg mov sub jg fstps es or push jg pop fidivr jg je es (bad) (bad) insl jg clc xor test mov add shr sub pop addr16 ja push imul cltd in loopne pop pop xchg or test mov adc xor fdivs pop jg xlat cs mov test inc and out cmp (bad) fnstenv imul or jno subl fucomip jg enter clc pushf jp mov push cmp call or aad clc jg push xor shrl mov sub scas aad push push (bad) ja mov pop das pop subl fnstenv sub xor fidivr imul sti add jg adc cltd dec jg sub fsts test pop mov jg jmp push cmpsl jmp test push xor cmp sti pop inc cmp and mov push outsl stc add dec aam mov vmovdqa sbb add mov or dec inc pop (bad) jb int3 jg inc sbb and stc call popf mov loop push icebp mov or ja cmp inc jg mov push out add (bad) jg loopne pop fadd add cmpsb add lret outsb jecxz into insb loopne push mov aam in xchg or dec and jg imul andl or mov cmp adc mov add imul lock fadds inc xchg cwtl pusha imul dec push pop sbb lods mov push pop sbb (bad) xor inc cmpsb add loop sbb sbb addps loopne jo cmpsb int mov dec jg test pop mov mov addr16 xchg int3 mov xor (bad) jg xor scas jg sbb popf shrl enter push and insb pop daa mov rclb fldt addb (bad) push pop daa repz scas aaa push cmpsb push aas sbb jg cmp loope adc or inc sub sbb mov push dec mov sbb sub ds jl xlat popa outsb dec mov jg out xor cli mov sarl aaa stos jno push int and ds (bad) ss ljmp idivb mov jb xchg dec mov hlt push lock int3 xor push jg test fstpl psrld or hlt jg fdivrs (bad) (bad) xor scas jg pop jmp and stos ljmp ret arpl or add fnsave shl cmpsb popa jg mov outsb jg xchg dec cmp jg mov loope inc push divl push test jae icebp xor mov lock pop jo sarl (bad) push fsubr lcall cmp mov jg stc pop loopne not or dec sub (bad) mov xchg das ret jmp gs mov bound aaa cmp push imulb fldl cmc repnz pusha jge mov or scas mov out test mov xor jae sbb and fistpll cmc loopne jg push mov cld mov cmp jg pop sub pop imul mov pop mov xchg adc pop mov push push cmp fwait xor gs aam insb sbb pop ja outsb nop fldt jg mov sbb mov sbb adc mov out sub xlat fnstcw stos or push stc pop cmc dec jns jg leave out mov sub mov xchg pop inc std push jg inc pop cltd push jb cmpl cmp sub lret xor test lods lret stos jg imul aas xor jg cmc mov fnop pop push rclb ss (bad) mov psllq movsl jo jle ficompl aad jno rclb incb xchg scas inc pop sahf adc cmc cmp out shrb jbe mov adc and sbb inc cmpsl push jne inc (bad) add xor mov fxch fdivrs pop mov cmp jo adc les pop push pusha jg xchg push adc mov push pop adc xor and fidivrl stc jg out push cmpsl inc xor pop inc out sbb test leave int3 cli push jnp stos gs fwait push push fsts add cmp jmp daa xor push jg sbb inc mov jg jo pop dec std rorl xchg popw mul jnp jl mov jg inc pushf adc cmp clc jne imul insb jg ffree xchg outsl icebp or loop shrb lcall cs xchg push add pusha adc inc xchg clc mov pop cmp jg cmpsb pop popa cmp repnz mov out movsl cli push lahf data16 xor pop ror mov push mov (bad) fistpll sarl mov into aaa dec int popf jg insl inc sub mov mov pop in sahf mov sub test mov inc (bad) test adc sbb mov ja cmc pop adc jg pop nop inc dec mov sbb outsb ds int into jg cmp xlat pop or and sub xor scas sub dec add sub inc (bad) xor pop icebp push aad sbb aaa (bad) call mov je jg in or incl lock jl cmp stos jg roll sbb sub cmpsb in cmp pop aas sbb call cwtl mov mov aam sub inc mov aad cmp cwtl mov and test fidivr xchg incl je,pt cmpsl popa lret sub pop icebp lahf dec sti aaa xchg mov in outsb push jae in mov pop push pop mov bswap mov lds pushf push mov pop inc add rcrl and divb add mov pop pop fimull adc xchg jg jl mov js push (bad) sbb imul fisub adc mov mov jg xchg add jg iret pop outsl push jae add fisub inc push mov mov push test ljmp dec roll mov xor mov es pop cltd or push sbb mov sub call stc push out ret jg mov push iret lcall sub add xchg incb inc xchg dec add cmp dec inc dec fsubrl sti mulb repnz (bad) fstpt fmul mov aas push icebp jmp mov mov pop mov xor inc cmp jnp ds mov sarl dec add push pop and mov cltd cld mov mov sbb imul ret sub loope test lahf jg cwtl (bad) addr16 (bad) mov xchg sbb lret mov jg pop add xor insl and jg push pop inc or sahf test mov out xchg xor push add lcall ss sub mov dec inc and dec add jno (bad) les fwait lret xchg xchg cmp cmc mov jb xchg fcmovne lods dec fcmovne (bad) fcomps sub mov jg in mov jg pushf scas loope stos cmpsb jle mov call scas into out out mov jg stc mov adc push xor jg (bad) cld or int3 pop movsl jg xor mov js hlt popa in dec in movsb xchg jmp pop mov addr16 xlat add lahf int or and push jg,pn jge inc stos cmc jg arpl or mov fwait jg pop pop push mov push mov push pushl sbb sbb jg mov cmp xor sbb xchg dec jg fildl fsubs sarl lcall jg sub fldt pop data16 hlt adc cmp cltd dec jg pop xchg mov mov mov fwait cmp push pop sbb and loop gs jbe test stc inc and aas xor sub jg je xchg sub lret sarl fcomi pop cmpl and stos outsb ss mov push ret jmp fs jne and pop mov aas in mov lock jecxz test mov sarb into lods jne jg adc or inc cmp mov ss push jne pop or mov lods fstpl sbb data16 sarb lahf fucomi mov stc sahf and cmc stc dec pop fcmovb mov mov sbb cmpsl out rorl nop out (bad) sahf hlt inc cmp cmp outsl jae dec aas push ss sbb xchg aam or mov aaa pop lcall in mov mov sti push fsub xor pop pop stos or rcrb or sub and inc into push jg mov cmp add addr16 xor jg (bad) hlt mov and mov push (bad) jp aas jns mov jae jnp fistpl repz pop mov (bad) movl aas clc jnp sbb dec mov in mov enter imul std rcll bound fsubs xchg jg int3 adc push mov movsb js ret daa test stos sbb cmp jg in fisubr (bad) sti pop lret adc gs mov xor aad fild jg insl sbb bound and sahf jmp outsl pop cmp lcall stos cmp insb adc aam jg leave mov (bad) jns cld lahf inc sub test cmp je push mov or add sarl mov jg jp loop lcall and mov outsl lret lea inc movsw stos int3 jg addl (bad) jbe dec outsb jg xchg xorb mov dec jg cmc add cmp jnp aas jb xor mov fidivr push cmp mov mov jg sub push mov lock sarb or lret in popa xor hlt stc arpl mov dec and xchg jg xchg dec fwait jg loop pop rolb push push pop jg aas adc and mov ja aad mov inc xchg loop mov mov ret into mov dec jecxz fidivr mov out push inc (bad) aas xchg adcb jb or out pusha aas rol mov xor adc popl mov pop call pusha cli jg jle ljmp cwtl lret xchg xor dec adc iret mov jb cmpsl ret jg,pt in das mulb les daa shll outsl and lahf mov inc mov orl nop dec jg pop js in sti ja mov sub xlat push adc aaa jnp inc dec lods (bad) jg dec and (bad) jne sbb imul jg dec ds jo inc pop xchg movsl (bad) movsb pushf mov scas ret xor outsl aas inc lods jno push sahf call adc jg cmp stos cltd mov cmpsl push mov or mov or scas jne aas sbb mov es arpl adc push jp mov jbe outsl sub cmp js (bad) fmuls inc jae loopne jg sub inc jg js out push pop sahf mov pop aam mov cld mov mov adc inc inc dec inc insb mov push pop mov xlat and jg nop adc rorb (bad) xor pop ljmp fmulp jg (bad) mov test sti jo popf jg mov repnz jg fwait imul ja enter loopne aas add in pop aaa or jg sbbb push or mov and sub test adc in or jg std jmp outsl lock popf mov inc push mov and fsts pop mov or cs aas dec outsb rol js xchg es xor pop cmp adc imull or xor pop xchg sahf fs mov aas mov xchg push shlb mov mov jae popa insb jg push (bad) dec push and mov or jg,pn loop mov mov es negb dec jo imul icebp pop sti mov cmpb jnp dec test jg or xor lcall push imul xor mov pop xchg sub daa adc mov cld jg and jg add (bad) sbb leave jg cltd jno mov les mov jns dec in cmpsl (bad) jl out jnp pop push addr16 pop and cwtl pop inc dec lret add or inc xor and jno and jg pop out xor mov jge (bad) mov jno mov gs aad adc ds dec jno std adc loopne jg pushf push jnp mov repnz in dec arpl xlat inc mov (bad) cmc jg push push out xor inc sti cmp add and pop fidivr hlt xchg or out xor or fsubrs clc aas jg mov mov (bad) call xchg jg scas sub pusha push cmpsl or nop mov push clc neg jg mov ja jg mov das xor mov int pop dec dec imul sub das mov add ds sbbb push dec mov fisubr pop xlat mov dec dec jg xchg pop rorl pop sub inc icebp sbb leave pop xchg push imul insl lods dec jg dec push inc jne (bad) xchg imul ljmp inc lret lret call inc popf add lds mov sub sub pop out pop or mov aas mov xchg mov xchg daa push (bad) sbb pop pop sbbl inc aas popa lfs shrl push pop in jg sub loop fsubl fs pusha js negl mov push rcll mov and aaa xchg adc jg arpl imul adc push sub hlt cmp jg pop inc xor and addr16 inc loopne,pt sti xor pop xor mov cmp lret enter cmp out inc mov pop xchg loope jg icebp fiadd and hlt sbb cmp dec jg cmp pusha jl and jnp loope or xchg inc ret cmp fxch or jg (bad) out sub jbe outsl adc sub and pusha mov mov sti sbb jg xor inc jg iret and jl mov test imul push inc sub push test or (bad) repz mov sti dec add data16 xchg xchg jg pushf jnp ds jle rorb sub pop andl inc mov or (bad) int jg lret jmp xor call xlat xor mov scas push (bad) push mov lea push (bad) in jno mov add lcall inc fdivrl hlt sub adc or jg in bound outsb jecxz jg (bad) sbbb mov stos shrb jg fnstenv dec sub pop insb mov lods testb xchg pop das jge or mov inc rclb push sti xchg jg repz add push frstor jg lahf xchg adc mov rclb jg test ficompl or jle pop popa sarb or clc repz jge test sarl ja (bad) (bad) hlt xor xlat jg loopne cmp mov cmpsl jg les (bad) jae cs aam push mov scas sbb pop jg inc test leave lds pop jg movsb mov mov (bad) (bad) jg shrl inc cmp jg cmp out repnz jo fsts jge xchg pushf push adc lods inc xchg or jg inc lods cmpsb inc clc pop outsl jg adc dec andl mov pop jge push pop push mov fs lcall repz int3 and jg xchg movsl jo sti test out add cltd fstpt sbb pop mov jl lods cmc scas int jg mov sarb sbb jno pop push push mov xchg push stos dec (bad) jne sub pop add pop xchg jle imul pop fwait push xchg je pop (bad) jg add and pusha sub dec jne insl cltd jae int pop mov push adc fiaddl fs inc dec jg cmpsl inc jecxz ja and mov inc push mov test add sarl (bad) pop mov lret cmp mov into add inc int3 rcr mov cmpsl mov shll mov push jg subl jg inc push ja std xchg mov invd repz inc fisttpll imul dec idivl in cmp cmp adc (bad) mov jge (bad) std adc inc xlat loope pop cltd jg cmp rorl or jmp in dec cmpsb jle inc cmp (bad) insl bound aas jg in js negb or inc push pop jg and push outsl xchg int3 lods pop out mov and adc repz add cld jecxz cmp insb stos push popa mov in pop push out jg test subb pop ret popf jle or jle dec (bad) xor mov adc insb popa jmp (bad) sub lahf cmp mov cmpb lcall (bad) mov or jg mov mov or cmp dec adcl scas xchg outsl aaa cmc shrb xor or sahf outsl hlt (bad) adc scas xchg mov jl test dec cwtl pop dec out sti icebp movsb adc mov jg out mov iret outsb jge repz stos scas xor mov inc jg and push cmp xor out dec sbb mov loopne loope call jno push popf pop jno xchg xlat outsl dec dec adc jg jae xchg insl jne out cwtl or xchg jg ret xorl sbb push aaa ljmp jg and lods lcall mov in inc enter jp dec jmp xlat lret jge nop jg sbb xor jp cmpsb mov int dec imul outsl hlt stc or xchg jg mov push (bad) jg js imul das jp sub mov addr16 fwait xor outsl fstl cmpsb dec pop jl mov push adc mov push pop jg popa dec jnp outsl aas mov je mov arpl in inc sbb rclb outsb rcll jg sub pusha mov popa rorb loopne pop jg pop inc (bad) out or mov add pop (bad) add xor cmp clc pusha ljmp dec iret or jg mov mov cmc (bad) lret xor pop mov int3 data16 icebp and jl inc xchg lret cmp lock cmpsl xchg les adc int3 jg jl dec pop dec jg mov pushf out inc add xlat in xorb add daa stos insl mov mov xor or outsl or out mov dec test mov xchg mov mov stos (bad) ret idivb mov int bound in outsl and mov ljmp mov fnstcw test incb std or dec add cmp jbe sarb pop mov cmp fidivrl lods and lea mov push outsl jecxz cld mov lds pushl mov in ss fidivrl push dec loope test jno mov add in cmp mov gs movsl int sub or pop es (bad) sarb mov iret daa and jae cltd jg fnstsw and dec or out imul bnd fmuls call xor add sub cmpsl inc jg sbb push mov popf outsl pop xor cmovge (bad) out ltr push push popa inc decb inc pusha mov aas inc mov add push ljmp add sub subl mov jmp loop add xchg or jbe jg movsl popa lret (bad) jg mov mov test mov outsl test aad inc jle bound in adc fiadd xor sbb out (bad) dec sub jg repz mov mov outsl xchg jns xchg inc mov (bad) push stos repnz sub test cwtl lahf jae and cmpsb rol add dec push in lahf stc sti xchg cmp adc data16 or sbb dec jg shlb hlt lahf js out push jg mov outsb mov jmp mov clc push push mov movb aam mov xchg xor movsl push and loope sbbl jg,pn push ret sbb inc jg mov lahf xchg mov jo mov sbb add dec dec cmc pusha and aas rorl inc sub cmp aas shr int3 sti dec into ret insl mov std pop jge jle pop add aaa sub xchg add mov mov lock and cmpb cld jg inc sbb (bad) cli mov in jg inc xchg adc pusha (bad) cmc cwtl shlb jecxz xor dec rorl mov (bad) push pop ja xor add enter and xchg clc popf mov es dec lcall add jb inc jg insl imul sub push aas push mov inc dec cmpsb mov lea pop test cwtl cmpsl add jg leave adc add push aas add popf pop leave js pushf repz xchg addr16 mov jg jp in cmpsl pushf xchg dec jg mov test into jg ret test insb mov push mov repnz xor add xlat and add (bad) cmc dec (bad) mov outsl stos pop push cli push mov jg add lahf push jg push cmc xchg jecxz push cwtl jg stc test pop mov or xchg dec addb mov in mov addr16 and rcl xchg or xchg xor repnz int3 push popl inc or jecxz xchg xchg ds cmp mov ja imul adc sub jmp (bad) jae mov inc or pop js add xchg mov inc (bad) lret mov mov lods jg mov and xchg mov gs push xor push mov push mov lret add outsl pop into jg or std xor enter rcrl ljmp cwtl popf lea jecxz jl push js sbb in (bad) call stos push xchg jg push insb mov cmp pop stc jg mov fnstsw xor mov rep adc in sbbl push popa scas (bad) xor pop jmp lret mov notb lret mov add (bad) pop jg loop cltd cmp push jg mov cmp jb lods sti pop dec xchg push incl sti xchg imul pop sbb loope jns in mov (bad) bnd and dec jg push dec xchg scas lds or mov daa jg add pop pop test cmpsb jg inc fimull (bad) icebp mov inc std lods pop push jno xchg jg adc imul stos jg rorl scas daa pushf jg sbb xchg jg pop cmpsl xchg out jg lcall (bad) outsl jo scas outsl fimul jg dec andl fsubs adc jg sbb xor and mov pop adc inc mov jg repnz shr inc std jg int pop hlt xor mov ja xchg jnp push jg push (bad) cmpsl shrb out push aas pushf outsb js sbb decb xchg jg cmpsb push popa jg mov pop xor adc scas outsl (bad) xor (bad) xchg lods icebp les cmp imul jge in ja push fdivrl inc jl xchg pop and scas jbe pop out xor jg movsl inc ficomp int3 (bad) mov jg or mov (bad) jg lret or rcr lods inc push out dec into push js xchg mov sub mov xchg push sarl test fldcw and push pop les mov xchg adc xlat inc inc sub and clc pop mov test imul cmc out stos jg cli insb out cmpsl pop insl icebp out fsub in jbe inc adc mov and sub mov rol pop das call pop xor iret cli lock sahf je bound test stos outsl aaa sub les aas cwtl lret mov pop pushf push adc jo mov stc jmp inc arpl stos std mulb jg ret movzbl xor adc js imul jecxz ja mov pop push sub rol cmp or in add jp sbb stc outsb aaa push jg fistp aam aas mov pop dec jbe pushf inc hlt jnp mov push push imul in sub fild jno mov adc or jbe or add std and jg flds adc loop pushf jg cmc mov mov push out mov cs jg outsl and dec xchg or loopne leave jg loope fs jl rorb or mov mov ffreep cwtl jg and test inc xor (bad) xorl sub jnp and lahf xchg jg jb xchg imul lcall cli ret cmpsl jg add cmp dec xor and add outsl inc cmc jg rclb mov and and rol int3 add mov bound push out addr16 (bad) jo add scas addr16 (bad) jp into jg xor test repz clc lock sbb out jg jle sub (bad) xchg and pop stos push stc pop shrb pop pusha je jmp jg dec rorb jg xchg jb add xchg mov jg sub popa sub pop pop inc xchg ret pushf mov mov lea mov imul mov iret mov ja scas fdivrl pop sarl push sbb jg xchg movsl jne inc mov fadds mov inc jns mov jg dec jp nop fadd adc shlb cld mov jg cmc (bad) notl (bad) sbb aam pop gs mov jg xor adc jg mov fs addr16 inc add push mov aas lods movsl in cltd nop jae jo out enter xchg add leave or pop sbb push xchg test faddp (bad) pushf sbb popa sub mov sbb jg (bad) sahf fldt lea mull nop ja in jnp shrl inc sarl add mov dec in (bad) adc out adc adc lret xchg inc loop jg sub scas push mov enter in inc repz lret mov dec arpl lock pop push xor les jg push add xor adc dec fldenv mov rorl dec jle jg jns mov jg xor les jbe jg pop daa add inc repnz mov mov xchg or mov mov nop dec ret add pop mov mov loope dec insb je push inc loopne mov pop dec test jo xchg pop cmp mov jmp push lods (bad) pop xchg (bad) sub outsb push push jg and stos mov out inc fnsave sbb mov mov pusha ret inc dec mov jg out and jg or mov jg jle sbb jo add push loop les aas (bad) cmp nop sbb stos inc jp lock fs insb dec cmp xorl call xchg pop pop dec cmp je pop pop adc xorl int loop push aaa jg repnz and or mov mov pop fcompl mov add pop ja add out mov xor jg xlat leave push mov inc jg jno or bound jg mov fisub mov (bad) or push jg fcomps xor mov das jg inc xor xchg and repz arpl pop outsl mov inc jg pop jp das inc sahf out in aaa iret xor mov jno jle sbb nop xchg mov aas (bad) mov movsl or fisttpl jl push push mov clc dec (bad) ss jg movsb cwtl icebp loop fildll (bad) cmp dec int jecxz mov jg jle pop xchg rcrb imul clc sbb cmp dec jne (bad) cmp or (bad) mov xlat xchg les sti aas daa or lea inc mov jg jb xchg sbb popa (bad) push and mov stos in xor mov inc push repz adc jno xchg jle arpl mov faddl push idivl ja add test insl jmp push sahf in pop mov and or ret idivb popf movsl pusha dec cmp lods stos mov jae xor fdivrl inc pop mov fildll inc xor dec adc adc jg fimul test lcall loope loopne and xchg jecxz je ja pop js or dec push loop pop (bad) jg aad in add sub jg cmpsb rcrb sahf pop outsb jg cld jne out lret jnp aad sub call icebp hlt dec aas mov or rorl add std or sti cmp call in arpl mov pop sarl pop mov insl test (bad) jg cmpb jg xchg jmp mov cmp push aas push nop xchg sub xchg jg lcall jg neg sub jg dec shll imul inc fcmovb sti nop jg pop rcrl fsubrl xchg sti out jge inc or push in rcll push ds sub test pushf push nop popf clc xchg sbb pop jg iret xchg bswap push (bad) jg js fsts push sarb push jnp dec adc inc mov mov adc pop lods adc mov insl scas pop or sahf outsl ss pop mov fdiv in jnp or xlat jl neg iret aas xchg fbstp pminsw adc xor fstpt or xchg jne sti add sub lret push or cltd loopne mov jg insl jl sti fwait sbb aas imul inc pop icebp jg push cmp adc lcall stc test shrb sub adc jg mov jmp stc fwait push popa andl dec mov call aas cwtl jo pop cmp jp notl jg cli or dec jg pop cmpb and lods jg bound lret cmp mov mov mov lahf ret jae popf jg mov push jns mov je mov mov inc mov xor push scas hlt out jg or cmp loopne jno out pop mov lcall jne pop jg sub jge sbb xchg xchg xor popf sti mov imul fadd jecxz cmp loope test xor movsl jg dec scas pop cs jg cmpsl cmp lret sarl jmp jo test mov sahf xchg push popf lret mov mov scas inc mov and nop loop dec pop push pop lahf aas hlt cmp cmpl jae adc pop test or mov arpl mov cmp shrl popa nopl lret pop jb inc loopne push aas add mov add sbb repnz fprem xchg mov sbb ds (bad) xchg aas std test adc sbb sub in cmp and lock rclb (bad) pop jg push xchg and leave sbb dec (bad) mov sub add xchg sub adc mov lahf jge mov jg (bad) pop cmpsl (bad) mov add adc xor addl pusha push mov sub xor (bad) jg mov out cmp gs sarl inc jg iret and lcall mov ljmp pop aam sub sub andl pop push (bad) mov into inc ret mov inc mov (bad) mov dec ffreep mov sti sub adc mov inc jno hlt mov mov fdivrl fnop push dec sbb adc subl fdivl test shr jg xor ret aaa and test jg,pn repz mov add pop jbe inc mov fiaddl push pop sub stc in icebp jo aaa jg inc fstps nop (bad) mov adc (bad) cmp pop gs xor mov mov stc mov pop sti je lcall xchg jg jb adc ja mov mov pop push fmuls repz stos jg (bad) sub cmp (bad) cmp cmp repz negl stos imul ja jmp adc ret scas aam pop add bound jg ss sub mov sbb lret xchg pop int3 mov sbb mov fistp scas jge lahf bound inc hlt rclb (bad) or sarb mov mov push js lds xor and xchg mov (bad) jo mov mov xor jg (bad) jbe jno popa aad dec insl fbld push ret inc mov jg shr fmul inc mull jg dec pop js lea mov push jg (bad) dec mov inc nop mov jcxz add mov ret je inc in inc mov (bad) jg xchg dec rcrb cmp jmp adc fmul nop jg andl loopne jg xchg xchg aam (bad) jbe jle (bad) cs fisttpl mov cli aas enter xor dec pop (bad) jae xchg pop xor mov data16 (bad) cwtl jne and inc jg into add out pop jns push pop andb jg cmp jp call xor (bad) cli test ja cmpsb sbb adc aas mov lahf pop cmp outsb in jg xorl jg cwtl fisttpl jg push sbb js ret in xor stc pop or pop mov jg icebp lret pop cmp inc enter jb pop jnp lds pop fist std push rolb mov loop jg pushl push jb aad lea push xchg jg mov aam fisttp fcoml addr16 dec (bad) loopne popf out inc aad sub or ret mov outsl fisubr jg in adcb ret push ja cmpsb mov push ror inc pop ds or inc jg mov jg mov jmp cmp jg es push daa dec jecxz jg jne sbb push jle aas leave int3 dec (bad) and push mov flds dec xchg repnz inc sahf jg xor jo jnp sbb mov and popf xchg imull mov xchg jg mov add jbe cmp repz sbb loope mov out das notl pop mov mull push repz mov (bad) leave dec cmp scas cld enter or sub pop dec out loop push sti leave xchg mov outsl das jae movsl adc cs push pop sbb jg jp mov jns (bad) jg inc aad xchg or repz popa insl idivl in inc rorl xor (bad) pop mov mov data16 mov nop dec test or push xchg cmpsl add sub jo,pt jne fnstcw fs xlat in fmull dec jg shrl addr16 fs mov pop jg aad lods fstps fst mov loope aaa jns jnp lds cmp mov jg out jnp,pn mov mov or jb or sub arpl inc fsubs mov mov jg push push dec cmp push test inc iret jno loope jg nop outsb mov jp fwait mov and mov outsl adc ret insb jg cwtl gs (bad) cmpsl iret std jg jecxz jns shll mov das imul push leave arpl mov jecxz std iret sti movsl jg xchg (bad) fs lock cli loopne jg jbe sub xlat je jg fist jg adc pop or mov leave repz ja sub cwtl jg shrl sbb outsl pop dec pop fs (bad) cwtl inc pushf mov addr16 jg fistpll inc sti aas (bad) and inc inc and (bad) jg pop fsubs jg pop inc xor pop inc aas enter call xchg jg sbb adc add jg dec orb mov add iret (bad) jg pop or les pop mov movq ret inc sub incb inc mov sub jae aas mov pop cmc push movsl lods push and lock fst push xlat or std mov lret pop and jo mov push ljmp lea jle xchg fisubrl stos jg mov pushf shrl pusha jg sub clc outsb pop idivb repz addr16 pop xor mov sub mov neg es push (bad) aaa add xchg push rcrb aam mov dec rclb clc fdivrl or lods add dec xchg dec scas push lret in call into aad in outsl mov sbb es ds in sub stos xor jg jmp jno jg popf mov jo,pn enter (bad) jle shrl stos sub mov rclb out loope fistpll stos pusha sbb cmc int jg mov int3 and mov mov sarl imul jg push cwtl not dec mov bound add jg in stc lret jg push push (bad) ficoml jo dec inc movsb fstpt pop dec jg xor mov jg adc fisttp in inc lods es insb inc repz sahf add out enter jmp adc jmp out inc (bad) push lock addr16 fwait mov add in sti dec sub inc lods not data16 xchg ss jmp test pop dec push out jg jne das mov mov stos adc jbe add sbb sbb jg jmp call pop jae imul outsl test jbe mov sub mov out pop cmp jne insl mov xchg jg lret jmp out or nop dec pop mov adc (bad) jae dec mov lods mov push inc enter or cmp xor (bad) ret push jp test outsl (bad) xor jg add mov pop mov jg cwtl push sbb jno fistpll or popf (bad) fcmovbe iret pop jo push arpl and test movsl fistpll das jp or dec sti nop mov or jg testl inc add (bad) mov pcmpgtw xchg aad dec cmp xchg sub xchg cltd gs mov add pusha les mov clc dec jg push cs mov lods and sbb jg xchg xor jg ret incl push bound movl or pcmpeqb les mov sub pop xchg popf adc jg xchg stc lods mov inc mov jo mov xlat jno vmwrite xlat cld dec dec mov in shr pop xchg jg fst adc jp dec sub lret jg sub mov jg cltd daa mov cmp (bad) lock call cmp mov fsubr sti mov sbb scas pop rcrl test jg int3 (bad) jne call out js push jnp cltd jl jg adc inc test mov int3 lock xchg (bad) aaa mov shrb in or mov xlat enter test hlt push xchg jg fwait xchg jbe test sbb xchg push mov jp dec std aas xchg ds xchg imul stos push sbb into pop pop pusha call cmpl fucomp jg das mov mov cld ret out js cmp xchg test outsl or push inc and jg mov daa push sbb mov lea lods lods insl jg test and add outsl (bad) xor sub pushf xorl int3 enter pop mov cmp inc xchg pop data16 xorl nop jg in ljmp cmp movsb push xchg jns jmp xor or inc in (bad) addr16 mov cmp jg pushf test sub add jg add cmp mov fistpll or mov or jg pushf push cltd ss xchg je sub mov pop inc sbb repz mov inc dec leave and push mov imul cmp xchg arpl dec jae lods inc lods mov icebp push push outsl bound cmp mov mov out xchg dec fstpt lock mov (bad) lods mov add repnz or jmp loope and (bad) or xor out pop sahf bound addl lock inc push xchg pop xor jp in jg fcoml mov jmp jg stos lods pop jecxz (bad) std jg (bad) mov jg (bad) jge aaa in xchg jg (bad) daa les xor sti push jl or in mov adc stc test out int and mov xor jg mov outsl (bad) jae push repnz aam xlat xchg push adc stos inc lods jo lahf cmp (bad) mov cmpsl jg mov insl test mov inc in aas fnstsw pop and add jg stos mov clc add dec popa pop mov mov sub sub inc pop sbb dec fildll xor movsl mov xchg popa scas push ss test (bad) sbb push js dec cmp daa movsl sbb sahf in cltd jg (bad) jns testl jecxz and iret mov inc mov pop movsl jg fs loopne dec jno jg jnp xchg sbb add js cmp inc xor add push test adc push lahf sub popa xchg mov jg aad pop mov aam cli pushf lock jg cmpsb inc das enter lret pop sbb sub inc inc lret jg clc dec or jg call jno leave shlb ficom out mov sub pop cmp push mov or mov xor adc sub jbe sub mov clc mov pop jg ret ljmp int mov mov rcrb cmp mov (bad) data16 jp jg sbb xchg outsl movsl fdivrs inc out fadd xchg xchg adc sub pop xchg flds clc shlb cld insb cmp sti jg pop pushf mov jg js jo sar js cmpsb mov jmp mov mov adc pop jg mov aas mov popf cmp xor rol jbe ss test mov negb inc push pop dec push decb imull lret pop push in sub dec repnz inc lock pop movsl mov lcall es sub imul addb outsb xchg jg jmp mov jg aaa data16 sbb jns and jg je mov adc pop jbe into push fnstcw mov pop (bad) mov outsl dec mov mov aas out in aaa cmp ljmp cmp jg mov mov mov mov and arpl mov jp mov ljmp popf lret mov mov in or (bad) outsl idiv loopne insl fcomps inc or in cmp mov pop fwait jg mov xor jbe cmp cmp (bad) ja fucomi in cld pop push sbb mov fidiv dec insl in insb jbe jg lret enter cmp mov sub cmp push lret std daa enter ficom imul or icebp pusha iret cmpl cmp (bad) rcrb jae loop dec int3 xor add mov popf adc sti and add and leave mov aas cmp lea les jg adc enter daa sti adc test mov stos pop sub jg jmp jns mov pushf add or or sub fdivr lds mov scas pushl inc dec inc gs mov cmc dec rcll aas stos mov and insb inc and js aam dec fnstcw jg inc insb xor into sti jg js and aas cmp jnp ss and inc pop jg sub mov hlt addr16 push scas jg mov jl xlat js jb add pop add fs rcr push adc xchg movsb cmp pop cmp lcall and push inc aad xor xor pop mov test mov sahf cmp rcrl mull add and xchg ret pop push inc xchg lods in mov es sbb jmp sub imul add add pushf repz in mov das pop ds push mov pop (bad) pop inc rorl lcall decb pop pop sahf rcrl lods movsb test mov mov sarl and cmp jg pusha mov fwait push (bad) mov xchg loope mov std mov testl inc mov jo mov jg and xchg mov outsb ja cltd cmp jg and push xchg dec pusha lahf loopne dec jg stos push or (bad) lret jle outsl push push cmp mov sub dec push jne jg xlat adc nop dec add fwait xchg test or aas cs push and cltd roll cmp scas pop movsl loopne,pn jae lock or outsb and and pop xchg popf test in jg fistpll clc or mov lret xchg mov jns stc (bad) cmp dec popa outsl decb dec ja addr16 pop jg test leave std repnz jg push cmp jg push in cmp mov mov mov sti and inc popa pop mov xchg push stos insl dec ret insb addr16 cmp adc cld lahf mov (bad) aas lret cs data16 addr16 inc mov cltd mov pop ljmp push jg jae push cltd je mov push fsts aas xor pop (bad) push pop push xor xchg jnp push mov mov mov cld jp dec subl dec sti ljmp dec stc xchg enter or cmp jb jg lahf mov jnp cltd mov sbb nop xlat jg aam scas pop push sar jbe sarl mov push addr16 or movlps fsubs dec jg cld lcall int3 xchg mov mov mov xchg mov pop dec jle add lods jg mov add jg jle fwait stos shr jg pop loope and fcom movsb jb ret dec pop jnp mov mov xor xchg dec push das mov pop push decb sbb dec adc (bad) xor js jbe push push shl mov sub pop pusha inc stc xchg ret mov cmp and outsb cmovno add dec xchg xchg mov and jmp xchg addl pop clc jg insl imul xchg ret xor xchg lcall popa cmp stos fistl rorl sub add insb arpl cltd lret sbb data16 (bad) scas int3 pop xor push movsl (bad) fdivl sub outsl insl mov jg xchg pop or push lds outsl mov scas mov inc addr16 jp jg jmp jge dec dec sbb stos mov sbb scas loope jg mov xor inc pop mov push (bad) jne jg add scas int js mov outsl xor cmp jg push mov (bad) aas pop out jno jmp mov dec test mov push test jg in das addr16 xchg jg aad outsl mov std push jg clc or jg add frstor xchg xor cmp pop dec jle cmp xchg jo push jg jp out push add jnp jbe mov jmp (bad) aas mov or movb je mov insl lds cmpsb or sti jae jo dec xchg pop stos inc pop js repz outsl jnp fldt mov or and inc xchg fcomps xchg pop inc test push mov jg aam (bad) call pop test jecxz mov mov sahf aam inc sub cmp out push aas std outsb push jo xchg popf jbe xor jg push pop pop fldt imul mov ret jg lcall aas dec mov sbb cmp cs jb xchg cmp push pop or popf frstor int inc mov jle mov mov push loopne pop mov addr16 adcb push cli in aaa push jae ret mov repz ror movl rcrl inc xchg dec test fnop (bad) outsl int3 or fisttpl addr16 xorb lret push or mov rcr imul shrl ret sbb mov dec jno jg rcll (bad) or popf iret insb pushf inc insl dec or ljmp outsl sbb addr16 insl pusha ss dec addl loopne mov sarl inc arpl popa mov jb cltd jp movsl aam push or sti mov fsubrp mov mov (bad) jg adc lds push lahf ja mov out mov pop popf fcomp push pop mov sub jg cli cmpsl pop pop mov rorb pop dec add addr16 hlt xchg sti lea loopne imull dec pop in push daa cmp imul movsl jg (bad) pop add push lcall fisttp pop pop jg and sahf dec jg sarl jg stos js mov xor aas push ljmp pop mov in fisttpl mov aas es repnz into xlat inc or jbe jno cmp fs dec (bad) or mov push inc pop inc push mov mov addr16 aaa jl mov cli add jbe jg test sbb and dec je sub jg (bad) ja inc jge jmp imul les jle jg lret (bad) mov popf jg adc sub pusha call dec loope sbbl xor jo sti out or mov aas stc mov jg mov (bad) lock mov jg jecxz cwtl data16 out js in add xor pop pop jnp push sub (bad) in into fldl mov (bad) mov jp insl call dec push hlt sti pop shrl push cmp les inc out jg mov and jmp cwtl insl fs mov scas clc jg xchg je in dec pop cli (bad) nop cwtl jg pop cmp sahf jecxz push sbb jg data16 adc dec fucomip jg push stc mov xchg and bound clc out xor jg or mov not loop sub dec xor xchg mov xchg lahf in adc jg insb aas xchg mov inc out inc imul sbb shll push adc jmp mov scas xor pop mov pop add loop adc lahf fcompl lds and lock jb jg push lea fcmovnb mov lods repnz test cltd push je and mov arpl divl lock adc mov pop movsb int3 push pop icebp in stc cmp into cmp das dec mov pop ja cli loopne (bad) cli lods xor push mov cmpsl outsl xlat pop mov jg mov mov fstpl mov mov jb sbb cmp ja hlt jg outsl inc out mov jbe mov jl dec jg (bad) shlb js movsl inc fisttpl inc fxch add jg rol xchg jo add mov mov inc insb pop ss mov or pop data16 pushf scas adc daa (bad) mov mov pop fisubr push mov add imul xchg inc sbb add pop mov push (bad) call loopne pop push mov pop or fsubrs lods jg cltd jl scas imul sarb negb aas xchg jne jno ljmp dec jo push fimul inc push lahf mov mov mov test pop dec xchg das adc adc push dec lret lcall mov jl dec shll int3 jg jo je mov out leave dec mov stc call pop sbb jg mov push rorb inc pop daa jecxz mov xchg inc adc jp lods icebp fwait mov (bad) sbb add rolb xchg mov sarl push jmp cmp mov jp out (bad) out jg ror in pop add jg movsb pop (bad) dec notb ds pop pop mov mov out popf mov push repz js loop jg insb fldenv pop pop stc int inc xchg pop push outsb push and addl or adc insl repz pop mov add jg or lahf addb adc pop push lret cmp jle and lock push call sbb inc xlat and rorb push data16 or jg mov nop ret std sbb inc dec lock stos jg dec xor xor jne imulb pop jnp push and mov nop test loopne int3 int jp mov sbb js (bad) lods pop je clc xor lds pop mov push mov ror push cmpsb loope pop pop mov in dec rcrl lea ucomiss pop add jg push popf xor stos repz daa bound (bad) mov xor rorl lods jg or daa pop stos mov jne or adc sarl xchg jg es loope loopne cmp mov pushf cmp inc sbb jo cmc jae idivb xchg mov (bad) arpl stos push aam mov mov pop test or sbb jno aas sub (bad) repnz dec out jg sbb addr16 fist mov outsl inc fistpll call inc push push aaa and jg sub add popf out das jl jno cmc jb mov and sti incb cwtl dec push sub stos pop imul shlb xchg mov sbb inc mov cli aas and hlt les pop inc mov push std fwait inc cmp sti test outsl mov jne test dec ret iret and lods (bad) popf lds loop jo jb insb out cmp outsl jp les jo outsb in je imul jecxz xor js aad xchg adc dec mov mov ja cs (bad) or repnz cld mov jg add cmpsl jmpw xchg rcll cmc loope out mov inc push mov lods mov sub jg mov and sub rorl movsl fs mov sbb hlt pop loope jle dec repnz ret clc mov mov adc cmpsb add aad jnp rcrb movsl push (bad) stc push call loopne jg push andb xchg sub cmc push movsb daa jge xor sbb jg fisttp insl pop push ror jo sub jnp and aas adc rclb adc in pop stos adc jg inc icebp xor or push inc cmpsb sti sarb or inc lock (bad) in (bad) xor insb scas das mov sub aad xchg cmp add push mov movsb and (bad) or loop push sub jg in mov ljmp ja idivl ret jg addr16 cmc mov popl cmp push sub (bad) mov scas movsb mov aaa addr16 jnp in mov jg and fistpll gs sub scas mov jg push out add std loopne inc jl cmp jg pop cmpsb test jg xchg cmp mov arpl repz aaa sbb mov push xor or lds jg gs cmp mov xchg cmp js loope ret (bad) jg pusha sbb jg fsubl ret push add sbbl fisubl jg lret rcll or sbb xor stc jg xchg mov jns xor cmpsb inc ss lds jle xchg (bad) (bad) xor aad xor push dec xchg vcmpsd push stos jp pushf xchg push pop ds stc test push gs mov out aas (bad) out pop pop push inc xor push push pop aam arpl adc sub adc mov lret ljmp hlt leave xchg (bad) movsb mov sub jp xchg aad mov jno and sbb pop cli jg sub sub adc ja pop movsb xor pop and jg jno popa arpl cmp xchg dec mov jge push mov sub ja jg xchg adc jl ret jg movsl sbb pushf dec inc out sub mov popa mov jg test cmp jge pop push out mov insl adcl mov jg inc and ljmp pop sub or cli adc cwtl or lods cmp inc dec and imul inc int3 mov sbb push imul sbb or outsb jg mov jmp repnz xchg dec sbb fdivrl adc jg test fidivr outsb xchg jb (bad) jae jg add pop (bad) adc inc lea das into adc dec mov iret cmp scas add mov jg paddw (bad) js jp mul jg roll mov push pop push push stos clc or jmp lahf mov aas add outsl icebp out jle repz mov jg std adc jg dec push clc push xchg push (bad) push ds pop jb mul mov mov addl test out into pop mov jne (bad) xchg and cmp sahf cmp pop cmp xchg fcomi xchg mov or dec int3 push or dec add ss pop push out in aas adc jbe adc lods push les or in pop dec mov fs jnp mov and std js dec daa mov dec mov sarl ss add (bad) mov jg movsl roll jg fwait clc dec sbb adc mov mov jno add push inc repz xor (bad) cmc jg or and (bad) jno lea pop ss and cmp std xor dec imul gs cwtl pop int mov jg repnz (bad) xor negl aaa aad push mov (bad) ds or adc mov lods pop out jne jg mov mov notb inc mov mov fild jg popf fdivs mov je,pn stos sti push pop loop jg movlps xor ss xchg iret ret mov jns push mov outsl aaa test mov or mov sarb jg cld pop adc (bad) jg into sub fs scas jg dec and cltd (bad) fadd jle popf xor (bad) scas mov aad rorl pop insb push mov inc xchg pop into clc ljmp or or in jo hlt repz movsl repnz xchg inc out enter stc lods mov cmp cltd cmp add mov jg push and jg push add ss lods popa scas mov sbb sub dec sbb lock ja incb jbe pop nop repz inc pop jmp das loopne ds jg mov sar jno mov mov pop xor mov push je sti negb shl pop xor fwait inc and pop test jg outsl sbb js mov bswap jbe (bad) jne je dec mov jecxz into popf cmp jg dec cwtl or push sbb add addr16 adc lods call mov adc add lahf ja cmp inc mov ret jg leave and cmc add pop jg das jns les dec push repnz in sarb fcoml int jecxz jg push lcall jbe xor and outsb jg (bad) cmpsl xchg and inc in aad sahf xchg jg add call lret jg xchg (bad) movsb adc dec sbb call test jecxz scas cmp pop jl rcrb push mov sbb mov pop stos inc repnz inc mov loop jb (bad) jbe sbb xor inc mov das repz jg cmp cwtl jg dec and jg xchg repz clc xor imul das pop mov lahf or cmc in jns cmpw xchg pop jecxz mov push out mov fwait in push in iret push or mov jne dec jle jg sar pop cmp ja enter push push push jae out jg jbe dec add mov pop fbstp rorb cld dec push cmp or aas adc or sbb sub push popa jbe and fidivl push arpl sar push mov mov push jecxz fwait (bad) pop mov push jne fisub mov jno or cmpxchg dec lret inc movsl dec iret int pop orl rolb jg outsl jne cltd test jno,pt xchg jg out inc cmp insb push push iret jg inc outsb jnp push mov aaa push xchg mov ja push popa lret (bad) and jg mov inc cs lods push jg das les mov outsl mov ret sub hlt inc dec jo ljmp xchg imulb mov mov add xchg cmp aam xlat dec jg dec add and call mov jg lcall sti or rorb das stc jg bound add jg gs insb inc mov mov fsubp mov xchg ja pop dec mov jne cmpsb stc mov push (bad) cli push xchg jg lahf jecxz adc jg jnp popa or enter sti cwtl push sub jg repz insl gs mov scas or jecxz cltd (bad) mov loop xchg jg sub cmp ljmp enter outsb movsl xor pop les mov imull adc pop pop cltd in imul insl pop push xchg xchg cmpl push jecxz outsl sbb sbb jmp jp or sub aam push xchg sbb std jg pop mov (bad) cmc clc in bnd ret es jg push aad bound sti add push dec lock mov enter decl cmpsl shrl jg (bad) sub jge fistpll idivb cs dec std jmp cmp fnsave lds jnp xor ss (bad) dec mov mov inc lahf pop or mov dec sets mov jns cltd pop (bad) sbb clc xchg xor pushf jmp addr16 mov and leave pop lret popf lods arpl xchg mov mov jne jg and fdiv inc sub mov jg out mov pop jg pop sti nop push aaa fwait pop mov jg lods mov and and (bad) xor inc mov adc std xor sbb int jg jb sub rcr arpl mov jg lret aaa iret pop and addr16 dec add aam xlat gs dec xchg sar fwait jg std mov ds iret subl in ja jbe jne test push in dec lahf xchg sbb insl fimul mov and stos lcall mov cmp push jp push jo mov ss xor jg xchg test mov cwtl xlat push inc dec test jg fcoms push sti xor mov call jge cltd mov pop add clc enter in dec stc xchg pusha out mov or fildl mov aas scas adc ret dec dec xchg js mov xchg fldt jp (bad) outsb sti arpl enter lea (bad) adc cwtl mov lret push cltd cmp dec jae inc idivb sbb gs jg pop and sub adc loop popf dec pop lret pop gs push and ret sbb das rol sbb push insl lahf fnstsw loop add test push ljmp lret inc inc inc lret push ds movsb push adc movq stc scas sub mov mov scas sub addl lahf jg addr16 inc push jg xor movsb jg stc insl xor (bad) and dec rcll shl jg aam hlt push xchg jg loope outsb mov mov sbb jg popa xchg (bad) inc push sub jecxz adc inc jae jmp enter out movsl aaa fwait sub inc das sti notl leave in lock fdivrs lret int jg mov cmp jmp pop (bad) icebp mov mul dec and cmp imul ljmp ret jg xlat jbe push push fsubrl jg cmp add push in (bad) call out dec pop dec cmp mov pop mov pop scas xor inc push out adc aam cmp push and jo sub test xor out jg or lret xor cmc mov das mov xchg es lahf pop pop mov scas jae ljmp jbe shrb jg add ret (bad) adc push cmp fs iret adc pop pop xchg cmc js dec jg ja lods pop nop jo jg adc cmp jmp repz jg ficomp fsin jl rcr movsb jg andl mov add sbb lods sub mov in mov out ja loopne mov cmpsl scas sub pop xchg mov std arpl fstpl movsl cmp pop (bad) mov cltd xchg int3 pushf jg push mov das pop adc mov aas jg stos xlat cmp movsb (bad) jg lret adcb mov daa andl (bad) in jmp push call leave hlt mov (bad) idivb dec movsl fisttpl and mov xchg pop (bad) mov push inc mov pop dec xchg adc (bad) pop mov lcall aaa fs cltd aas jg and mov push add push lret aad pusha xor adc xor jg stos dec cli (bad) jae das inc push jg pop test out inc xor mov clc (bad) in repz lock cmp pop dec outsb addr16 movsb adc fnop data16 decl pop mov addl mov (bad) ljmp and xor cmp jbe andl jecxz xchg dec int3 movsl pop add jg (bad) jae pusha mov jg sahf aam mov mov mov outsl pop xchg rcll std add and and mov aam scas cmp pop pop inc jbe pop sti adc sbb in aam dec mov jbe js jg fs popf push test push lret and add and jg movups adcl sahf jp cltd jg je jo pop (bad) mov scas outsb and pop mov and cmp cld dec jo fwait pop jle inc stos xorb mov ret shrb xchg mov pop push popf sub decl sti ss aas inc or fs add ret dec ficom or aas fsubrs xchg lret add jp push loopne mov arpl cld stos (bad) cmp xchg pop ljmp inc imul das lret sarl lock sahf sub rcrb pop inc pusha jmp add insl (bad) out addr16 jg outsl jl and fs lret xchg jg fcmovbe repnz rcrl jg jns cmpsb lock sarb negl pop test loopew mov sbb push enter out cld sub lods inc idivb push lret lods cmp xorl push (bad) mov and inc pop inc mov adcl mov jmp aaa (bad) jg add push jg cmp sbb lods ljmp jg out lret scas repnz in jg movb pop push jl mov fwait std pop arpl incb imull push lcall add rcrl stos inc shlb maskmovq testl data16 icebp push mov aaa adc sti mov sbb jg mov dec jb add addr16 js popa in jg xor mov mov sti fdivl lods xor fildll add sub dec leave adc jg push out jae cmp or push add arpl mov dec call xchg aas jmp mov jno jbe mov jnp sbb pop push push mov xchg subb nop adc and adc adc jg jbe mov or jg xor jle jg clc scas push lcall sysret fcompl xchg mov push out adc pop xchg hlt pusha and sbb sahf push cmp mov jg add das jg xor sub xlat pop rclb fldl aas lret cmp cs push fiadd idivl push and into (bad) or jg fldcw push and jg adc push aas mov mov orl jne aas xchg cmpl fcoms mov jne sub sub pop enter adc outsl fdivs outsb pop leave jo pop call (bad) dec and mov push jp popf (bad) jg inc int3 and loopne mov lods sub mov bound cmpsl fisttpl pop rclb call push iret insb mov aas cld adc lods jne dec mov fwait jecxz push lods clc notl pop inc mov lahf add inc shrb cmp or push insb xlat sbb add jne mov rcll cmp das insl push loopne xchg faddl and insl mov push jl (bad) jg sub xor and pop sarl mov hlt fnsave inc mov (bad) imul or lock in dec mov inc pop sti adc push push outsl rcrb aas out mov icebp cmp sbb pop and jmp push adc fsub jp xchg ja aad pop popa mov inc out adc out jg cmp mov add cld stos jae lcall push dec pop mov add xchg fisubrl jnp sbb cmp sbb popa jg int3 repnz dec jg sbb mov mov aas jecxz not inc lods add leave xor jg ljmp je ja jg aaa jno mov fistp cmp in pop mov xlat sbb outsl sahf scas in mov adc jp imul roll fimul ljmp mov adc xor mov xorl jb mov lret pop out test mov adcb cmp ror and add sti mov gs add sbb mov push cmpsb ds adc add (bad) out aas mov jl,pt mov inc mov in or daa jg ljmp (bad) jg sbb and xchg repnz mov jmp and jno xchg jg fwait int3 jp add rcrb mov outsb mov inc inc mov adc test into cmp pop push jle popa and mov jo inc dec iret mov and insb mov out jg into sub jbe xor ficomp cmpsb (bad) mov pop es dec sbb sbb xchg out je jo jg sub mov lods jae insb pop outsl xchg or xor scas mov std leave (bad) jg mov sbb xchg stc xor mov inc xchg or adcb push xlat adc pop loop sub push push xchg ja repz mov vmread test movsl (bad) dec jg imul mov out xchg test mov cmp pop imul pop xchg addr16 xor push mov jg or iret mov test fcoms mov jg adc cmc or aam or push xchg xlat cmp lahf jg dec fstpl data16 jg cld mov inc fs mov fistp push dec nop dec imull int3 xor jp jg inc push arpl or aas je div jle jno (bad) incb mov loopne daa mov dec push sahf mov sub mov insl call add mov push mov mov mov push mov adc fs inc sahf jno,pt push scas and lahf inc mov lods mov dec arpl mov movzwl add xor dec mov jg push lock pop aaa es imul add andl lret data16 xchg adc ret dec sbb jg cmp add xchg xchg pop jno mov mov add jo pop push fidiv dec and and in jg inc cltd test sub iret inc sbb cmpsb and push jno fs mov mov dec pop lock arpl pop subb bound adc inc push xchg arpl or out mov jecxz outsl int3 sub xchg and cli divb dec cltd mov cmp xor mov cmp (bad) inc xor jg xor inc sbb xchg lock xchg jg push sbb into jnp jg inc inc xchg jo psraw mov mov jb add aaa and pushl jo mov data16 insb fsubs jle in sbb push dec aas sbb dec mov lahf cmp aas push dec ds in sbb xchg mov mov inc clc sti cs xchg pop mov or jmp aad fnstsw les xor jmp sub jle inc (bad) xor ljmp mov imul dec xchg pop js adcl movsb imul pop jge dec mov popf pop jae adc lret inc movsb clc dec push mov out pop sub out insl cmc sti lds test bound jno jmp pop fs mov xchg aas movsb jl push inc cmp push or push sbb xchg ret loopne jb cmpsl lds adcb movq clc jge lds stos pop sbb lock les aaa pop mov jg adc aas mov push inc inc xor jg arpl mov cltd js test xor jg sub bound nop sbb out mov mov cmp bswap dec in addr16 aad jbe es and push icebp push stc xlat jg cmp aaa xchg in pop jg in and jl aas jg into (bad) or and pop xor insb cltd fmull mov scas mov leave pop or jg add pop mov insb adc lods ljmp jno and cmp (bad) push clc lret sbb add stos mov jg mov xlat imulb das jp sub fwait inc mov jg loop sahf sbb sbb andl sub das stc loope jg shl cmp imul pop cwtl jg fisubrl jg pop cmc xchg dec ss add lret inc mov imul jmp jg sbb mov (bad) leave aas and push add addr16 mov jg cmp add inc pop mov inc mov aas adc inc lock inc ljmp aam ror (bad) fwait out push fcoms mov sarl or repz push and movsl push cwtl mov mov sbb pop jg push sti int3 mov ja dec xchg jnp push stos or loope jg das out out iret mov stc out xchg adc loopne or dec pop mov iret pmaxsw iret or sub imul popa popa jmp mov dec addr16 mov adc mov push mov xchg daa loope ret outsl inc jnp insb sbb jg mov xchg jg cmc clc out ret into (bad) xor dec push sbb scas push jg mov cltd das (bad) idiv in pop jne cmpsl daa call cmp sbb sbb push dec loopne cli imul loop mov and inc cmp lds xor or dec rclb in stos pop out jg lahf mov and fwait push imul test cmpl lock or fcoml sub sti (bad) pushf ds jmp (bad) mov daa dec pop outsl loopne outsb dec out mov jg clc push dec bound fildll cmp test fstpt aaa roll sbb or jg fs cs fimul push lods loopne faddl addr16 inc rol push insl scas pop sti jg popf sarb jg pop cwtl ja pop movsb sbb sbb out push dec rcrb js push pop and (bad) ljmp ja xchg outsb mov cmp cli pop fistl add sbbl dec fistl jne arpl addr16 adc out fist cmp lret pop aam imul lods and jg adc cmp dec cmp (bad) jno sub xchg inc xor inc lahf jg test xor (bad) sbb repz out aas cmp pop adc notl mov or adc fidivrl aad sub push popf sub pusha js (bad) int3 sbbl test outsl lahf (bad) pop lods mov cli jg stos xchg dec inc mov lret arpl xor jg push bound mov lock xchg adc mov outsb addr16 sub jmp ja cmpsl xor idivl es ja jb cmpl and jg adc adc loop je cmpsb sbb mov out dec dec mov cli push movsl sti pop add hlt gs jg jp jns mov (bad) xor das movsl jg jl sbb sub rcr sub pop std mov stos adc xor fstpt sbb cmp sti std jg out jge aas mov mov ja (bad) scas es cmp xor cli or mov mov jg pop add mov ljmp jg sub jge out cmp dec les jno jp ss (bad) mov ret (bad) cmp xor push outsl push nop dec gs lea jge imul jg outsl and movsl in out arpl xor inc stos jg push aas ss jnp (bad) (bad) jg xor sbb mov jmp fnstcw xor fcmovu jg sbb xor imul hlt lret inc stc sub nop scas out mov imul ja and xchg jg mov inc aas fwait sbb or lahf leave std dec sub fldt xchg mov inc (bad) out mov pop sti lret ret pusha inc movsb (bad) aas and aad lds repnz jg jnp insl aam push (bad) mov aad mov sub mov pop push xor push dec stc je aad cmp xor push stc in pop xchg jg cmp mov mull (bad) xchg cmp sti adc pusha sbb cmpsl stc fldl and mov jg jmp mov arpl je mov ds cmpsl xchg push add data16 mov sub pushf add js inc popa outsl bound je fisubrl adc rcrl jmp lock mov fsubrs repz ret jg (bad) ja test jnp sub dec xor jg mov cmpl jg pop mov lock adc js mov lods pop jg mov adc jbe cs icebp pop int3 sub ljmp jmp adc jg mov negl mov mov inc iret data16 sbb scas jo mov andl fcmovnu jno sarl mov jecxz cmpsb es mov (bad) and loopne int dec xor jg bt jg xorb xor mov sbb or dec jg daa sbb xchg sbb in pusha xchg (bad) test repz mov push sarb inc push sbb push mov fimul mov sbb mov fdivrs mov xchg enter mov outsl xchg mov lret or and ds jg mov arpl pushw xchg or sub push icebp jns lcall push call cmp or or or jg mov cmp add rcll push into test jmp into sbb jg push scas cmpsl in fs mov adc jg jmp mov xor mov repz push jg lea xchg cmp mov lods pop and mov outsl in addl mov cltd xchg fisttp mov stc pop cmc jp xchg icebp mov sahf out jae dec jg and fistpll pop jno mov xchg mov shr adc jg das cmp fsubl and sahf pop imul clc test jg push cmpsl enter adc cmp shrl jg (bad) in fstpt or fidivrl das arpl test clc out pop inc xor leave add lcall inc adc push cli push xor icebp sar call sub jmp jns lret popf mov lods jae stos fbld pop cmp dec rcrl push pop insl xchg arpl int imul mov dec jg dec sar adc and stos cld ss push mov lods les gs jg mov pusha add xor push push imul push (bad) movsb inc lock and jmp out ficomp xchg jle jae add add mov insl and sahf loopne jg movsb mov pop mov test pop mov jmp imul add xlat xchg hlt repz cmp cmp pushf jg fisttpl inc shrl iret sti mov pusha dec jg or jmp push ja sub add and xor int jg fwait inc loope out aas jg loopne and fisttp mov ja xchg and and cwtl jg cmp ja stc scas (bad) gs xor addr16 (bad) in mov pop daa (bad) (bad) jg mov inc push pusha rcll mov loopne mov decb add jno jg jns ljmp mov mov movsl data16 sbbl and cmp lods clc mov xchg add pop in cmp outsl add pop adc xchg inc jge add xchg fnstcw aas aas jb mov daa mov iret loope shll mov pushf mov arpl jg cmpsl imul popa mov and cmp xchg sub pushf out stos jg out jns cwtl sbb cltd lods jg call xchg add mov test jg sbb test inc mov pop or jg mov lahf or clc call adc and push cmp jne push imul aas push mov mov fistp js jb and mov xor push mov jg ljmp mov je pop mov arpl pop xchg adc pop (bad) std ja cmp hlt inc jg jbe div push push in frstor outsl push jg add cmp inc mov inc fwait arpl push mov dec fs cmpsb xchg stos mov mov mov push jae movsb jg push cld sbb xor out lods push arpl jg loop imul mov or mov cmp stos dec clc and adc data16 jbe cmpl jp mov cmp cltd jg inc pushl fmull negb add es mov jg insl pop shlb fldt js test pop xor inc jg inc sub jbe xchg xor inc hlt inc mov je pop mov adc rcl sub mov rcl mov scas (bad) test mov sbb mov out stc sbbl dec push pushf inc jle jg scas out int pop daa jg push pop mov bound jg jo int push jge js aas cmp add popa orl xchg mov leave jns xchg or ja insb mov cmpsb dec negb mov aam dec sub adc inc mov imul jge sbb frstor sar movsl lahf mov jg or add jg jno outsb (bad) repnz aas pop pop popf pop icebp and jne and lock sub es or xlat loope jg push pop cmpsl jns imul inc enter xchg in pop jmp jg adc repnz lahf xor movsl dec xchg sbb jg mov in sbb repnz stos and jns sarb mov push shrl xorl test mov xchg cmpsb aas cld push (bad) or or cmp mov jg mov xchg imul xchg inc lret mov or inc cmc lods and add add (bad) add sub fistl aas xchg ja adc sbb xchg int lea dec pop lahf pop clc in add or ret lea push call push cmp mov ret dec cmp stos adc lds or cvtps2pd push push aas fsubrl push lcall es pushf sub (bad) negb dec pop lret xchg inc sti add loop dec hlt sub pop out fwait sar fistpll cltd out cld jae pop jno mov adc mov loope loopne aas enter adc jg xchg inc dec jl test das jae sahf mov mov jg imul sub sbb pop sub scas push rorl adc xor dec jbe jp mov inc mov jg dec loopne sbb lock fucomp and pusha push iret pop mov jle mov jg repz and pusha out mov sub outsl mov fsubrl ret xor stos and jg push lret xchg bound pop cwtl mov frstor jg cmp arpl inc in push sarl les dec mov jno int3 mov repz rcrl dec jg stc (bad) aad stos (bad) jecxz mov test fcmovnb sarl mov ds jg jo push (bad) out gs jg xchg cs xchg divl pop imul loop and lods xor mov inc (bad) ds pop jg gs xor mov inc jg mov mov add mov sbb mov lret aad mov addr16 icebp pop lea jno rorl jge or sbb fsubr and stos mov call ss mov in and inc and inc aas xor les xchg fnstsw xor aas and and loop lds mov xor pop ss push out rcl adc pop lahf xchg mov outsb icebp push pushf mov ror cmp inc insb pop (bad) out pop leave xor xchg jns aam sti jle jg pop mov aad lea jg shrb in or jb lods mov (bad) (bad) loope jg ss mov jg clc popa imul jbe jg cmp adc mov mov jg push in movsl jl sbb fs dec jge inc cmpl ljmp pop push pushf hlt lahf mov jg fsubs mov xchg jg inc add push inc jg out mov sbb and jg repz jmp push lds mov cs or xchg rol shlb daa adc js cmc and cwtl and jg dec sti adc jg pop dec outsb insl push into push jg outsl pop sti jl sub aas cltd inc aaa ss jns inc ljmp mov sbb data16 pop jg sbb xchg mov push (bad) jg bound jg,pn gs adc jg enter inc and (bad) stc fist xchg das xor inc mov mov aas mov loope cmc inc inc sub jg fstl dec aas aaa arpl adc movsl dec cmc pop jg ret adc les cld in pop xchg add fnstsw dec pop pop jecxz in jg sbb xor jg pop pop ds jo ret jg (bad) jl mov fcmovnu (bad) gs mov test popa out sbb or adc sub jl jmp fistpl pop sub mov xor mov (bad) cli scas jg dec sub in pop repz scas ss mov jo fidivrl leave iret dec cltd jnp add jle push or ficom mov outsb push jne pop idivb repnz jb xor (bad) jp push mov mov (bad) ljmp mov jp and push xchg jg repz push or jne jg dec cmp sbb xor jp xchg mov and insb sti fcomps pop addr16 movsl dec jae sbb gs mov jg sub (bad) fnstcw push lret lcall dec (bad) iret ficomp mov mov daa mov dec mov sahf loope stos or aaa sbb jg and sbbl jg stos rcl and insb pop popa incl and jg adc mov int cmp pushf jg mov jb lahf pop mov xor inc in mov pusha push push rcrl jg adc pop sbb jg into addr16 push mov popa mov xor insb (bad) pop inc cli loope jg outsl cs jnp test les shl cmp xor into jg or sub (bad) push push lcall mov scas or in cld loopne (bad) jg xlat xchg orl push xchg jge mov scas add dec add aas push cmp imul (bad) push dec push adc pop pusha jne inc sarl out pushf (bad) inc ret stos jg fisubr jge test mov dec clc (bad) jg inc jne xchg inc iret mov dec data16 pop aas mov cmp push popa adc pop jg xchg cmp push xchg mov movb inc add cli dec loope mov and repnz popf mov (bad) dec popl adc adc adc jg leave (bad) (bad) clc cmp lods xchg pop outsl repz fdivrl add dec (bad) gs xchg sbb dec adc loopew std ja pop jg stos mov lret out jle mov and test (bad) jg cmp popa adc inc scas repnz xor (bad) rorl ret inc inc sti lods jg dec mov dec mov sub mov aas in into movsl nop push decl mov cwtl std push dec add fnstcw mov divb push (bad) in jg sub stos shll mov fwait add imul std push or subl mov jg pop stc sbb pop leave jg jle inc cli jno add sbb mov out decb loopne add sub jg sub jo (bad) imul sbb popa mov jg xlat xor es lahf push dec ret lret mov inc dec xchg stos into sti push mov push in iret mov (bad) jg xor push jo adc cmp rorl pop in mov sbb test jnp pop adc mov pop xchg pop add pushf loopne push dec and iret pop in and hlt jg and daa ljmp mov jmp fcomps sarl xor add dec jg mov push and push lods cmp xor jg into scas dec int3 pop sbbb mov leave popa out lahf dec xlat loopne fsubs sbb push dec inc pop xor ss cmp mov jo adc test aas hlt mov lods mov jno mov stos stc push sbb jo in aas loop mov push push jg pusha xorb cs jg fnstsw jg jae inc aas jmp sbb (bad) xor or hlt xchg dec fnstcw jb sbb jg shlb jg jnp pushf ret jo push mov in jle daa and test inc cwtl jg movsl divb (bad) adc sti mov aas loope insb sarb add add dec sub jae pop std fwait jg xchg mov (bad) xor fdivrs incl xor dec imul jg xchg les (bad) (bad) out imul aaa push push popa lods jg jns sub daa movsl mov push ret bnd arpl fimul scas inc or rcll push negl jns jg ret jp xor or shrb dec sbb dec mov jae sub jp call jg test mov adc inc push sub push call loope dec mov push xchg aad jg dec cltd add imul stos pop jg adc int xor adc aaa adc (bad) idiv popf test pop xchg sti mov ret mov mov insl xor call sbb xchg mov inc push dec jle push testl leave lea adc or fmull ja jecxz cs pop lret jg test add inc dec stc insb push mov dec rclb add mov repnz pop les xchg jae lcall push mov insl sarb mov outsl pop fs mov bound xor fadds inc or mov inc adc loope and sub cmp jae or popa add xchg jg cmp mov jg lods movsb xchg push inc xchg arpl popa lret jg or push inc mov jne push sub mov xchg cmpsl mov cli push mov cmpl jmp dec jl mov (bad) das orb fistl inc cmp cmpsl pop adc pop dec mov jge adc test cmpsl jg (bad) jmp js imul addr16 lret movb cwtl jg pop out jmp imul cld nop jl xor hlt fwait and cmp push cmp mov push in dec js jns jg test fsubrs fwait add jecxz pop cmp outsl jno lods (bad) je mov mov pop and push retw jnp dec insb pop mov jg test outsb jg inc lea pop xor imul mov lods sub lods add lcall insb pop inc cld dec outsl pop inc jg sub mov (bad) jg mov push mov aam cmpsl (bad) shlb jg jl add jmp and cmp mov adc pop adcl je mov imul inc out arpl jg mov popf mov mull mov pushf push fucom jg xor lret mov mov std cli cld cmpsb mov rorl xchg add jg,pt mov adc dec or divl ja jmp mov stos inc push loopne jo outsb cmp xchg aas mov test std iret enter jg jl fsubs out jg jmp insl les sarl in sahf inc xchg jp cmp mov jecxz dec rcrb or xchg hlt lcall mov stc push push aam pop jo inc jg xchg loopne bound out (bad) jmp jg ret ss roll repz mov enter xchg lahf or mov notl ja inc and lods aaa push push jg rorl lahf lea mov ss out adc or sub or sbb punpcklwd push cli out bound cmpsb out rcrl dec xor aas adc push push mov xchg jbe jl jg insl loopne loop mov movb popa mov test repz jg or dec addr16 mov and xlat or push xchg add repz fnsave or dec pop mov test adc fwait mov jg or pop aas pop ret mov int fldl jmp adc decl pop mov xor jg scas std cwtl imul jg pop sbb sbb aad lock repnz xor jg out sbbb add lock xchg xor sbb sub cmp daa and std enter and ss je dec es mov and insl jg xchg out add enter jg push imul insb imul jno jg add fidivr jno hlt popa jg push jmp xchg mov lods (bad) test add push iret loopne js das inc outsl mov cltd pop (bad) jg,pt addl fimul pop rorl daa adc aas cmpsb sub inc std mov push jg movsl inc xchg call (bad) and out jg mov (bad) mov out loop cli cmc fiaddl pop pop dec (bad) xchg dec jg movsl pop jnp (bad) decl ja jmp clc jg xor dec lahf xchg aas outsl in jecxz inc fs dec in jg inc sbb or and push lret sarb mov mov mov mov and cli mov rcl jg dec pop push sbb push push dec dec call jg adc sbb lret pop push jne jmp ss es cli sub mov aam and ds pop dec add pushf xchg jg xor pop fisubr or push orl mov pop in or xlat subb adc jg mov clc cmp pop cmc xchg push hlt paddd cli jg add imul lahf mov jg mov fimull inc adc mov ficoml mov ja and ja loop imul sub mov pop dec mov fbstp sub inc pop jg pusha fnsave in fldl2t xor cmp outsl sbb jg push fwait pop xchg sbb jns ret hlt lds add rcl xchg jg and repz hlt sahf jg test int3 and cli (bad) pop xchg mov aas push or dec bsf fldcw mov jno push mov jg,pn into mov out sarb daa enter add fldenv gs (bad) loop xchg push push mov int imul daa jp (bad) xor mov lds xchg jg jp lret aam mov pop jae cmp jb imul fcomi nop fwait push lods bound jno loope push (bad) xor sub mov xchg mov or jmp mov lea mov movsb negl cmp push adc or mov jmp imul or inc cmp inc cmp pop lods mull cs jg adc jg mov shll add jns xchg sarl lahf outsl push dec mov mov push loope (bad) lret roll and sbb and add add dec push arpl jb cmp dec loop jg into mov test xchg (bad) int3 fnstenv add aas aas cltd add mov cmpsl movsb jno call xchg sti mov push push jns sub sbb int pop pop jg xor sbbl outsl rcrb test jno es dec fild and int inc inc rorl nop out popf fidivr xor or jg aam mov sbb movsb jg call sub jg xor loopne jp fldl push cmp ds dec addr16 dec xchg jl dec mov inc pop pushf shll push movsb pop mov jae xchg jg inc push xor in jg inc jmp cmp mov cmpsb aas xlat jg gs push loop lods jbe cmp cmp pop pop popl push call xchg mov in jg dec je mov mov (bad) into adc daa jg xor or pop adc push sahf jb arpl mov jne mov repz mov popa push mov jg daa loopne mov outsl jg out mov push das mov sub aas jne aam data16 mov dec outsb lods jg hlt and repnz stos push out pusha pop pop inc je xchg pause push jg fsubrl sub dec fdivr jo lahf int pop pop neg lods leave dec mov movsl aaa mov hlt jns xchg cmp inc cmc (bad) xor out mov dec mov mov leave pop idivb pushf sub insl pop mov and mov add mull push cmp inc and xchg lcall imul cmp push (bad) call jg into scas xor icebp mov jg push sahf fcmovu add unpckhps mov enter xor rol adc stos lcall fisttpll cmp loope dec add inc push imul inc inc add das mov jg mov in cmpsb sarl mov mov hlt in fnsave cmpsl aas push ja popl ror adc pop xchg push loop sbb xchg lock repz xor mov ja inc jnp add (bad) xchg lods sti lea pop inc jg jo sbb pop sub mov jle dec imul jecxz mull pop mov mov cmc int3 sbbl inc lods inc xor dec jb test jmp xor push jg fnstcw sbb mov jl push gs cli jg in les add push mov aas push jae xor mov lcall jg pop (bad) insl icebp out mov data16 imul inc out add stos mov jmp jg adc cld mov mov pop repnz add xchg mov outsb add jg xchg insb mov inc mov jno or fidivr (bad) jns push imul cmp jg push mov pop aad dec cli jecxz jae push jo push fidivrl xchg cmc jo mov sub mov jg xor out jg mov xchg jae dec fstpt je (bad) or scas adc in mov ret sbb add add imul xchg inc cli xor push cmp mov jg daa jge addr16 push stos jg jb mov in dec push arpl outsb jg (bad) shlb jg or out repz cmp pop (bad) lods fidivrl cli inc push stos jg jae daa pusha ljmp jg repz movsb jg sub call cltd adc in pop or pop in js inc lock dec daa add dec jne push pop mov je push xchg xchg incb jg into fdivrs lea add pop jg or mov dec mov jg test popa cmp (bad) sbbb xchg (bad) jg adc stos jle repnz shr or jg lcall jg movsb sar or popf jg cmc push stc gs lock dec loope adc (bad) mov mov das sbb jg loop xchg and fimull es add bound jg sar sar mov incl dec jg cwtl scas (bad) mov mov mov add add jg or pop in jp cmpl cld dec (bad) int3 jecxz jg test pop mov xchg push sbb hlt or addl negb sbb scas or xor je pop outsb sbb xchg push fnstcw std rcrl lods mov insl outsb mov sbb push fwait mov cs mov int3 rol add mov (bad) movsb insb sub scas std sbb cmp mov jg insl pop imul jno mov jg sub repnz inc fs add dec push push into jg and pop test aad jg pop and dec xchg cmp loope (bad) int3 cmpsl (bad) xchg jl lods fldt les pop sbb inc or cld pop pop iret mov (bad) leave mov in addr16 jo mov jg dec push mov fdivs cwtl add in cmp xchg or pop aaa insb flds je push inc jg mov rcl sub xor xchg and mov rcrb pop out jg push jnp inc adc in adc dec xor lock add dec mov loopne mov outsl pop jnp ret mov std iret dec mov sub ret imul lcall outsl jmp mov inc mov test pop xor push and gs mov xor pop fcmovb imul daa inc xor aam add insb arpl popf enter mov jg jmp push xor xor sub bound ret push jg mov fs jecxz imul (bad) cmc pop mov push jnp jmp pushf call jg,pt lret xor sahf xchg es jg jo aas sbb dec jg pop mov pusha jg pop cld movsb dec out xor inc jge sub inc arpl and in mov cmp mov inc inc jg mov sahf cmp in push lret jl mov stos ds push and jno and in jg push cmc mov notb dec sbb pop jg shl rorb jg mov cwtl loop xchg push sub jmp pusha xchg mov xchg jae pop sub insb arpl inc mov pushf push aam jg lock push stc adc data16 lret xchg adc out pop loop bound add pop push insb and jg movsl lahf sub insl push jg hlt in pop repz data16 inc scas add lods jg mov or (bad) repz push dec add xchg pusha jle dec xchg jbe pop cmp push jno sbbl sarl cwtl push stc jae mov or daa cmc xor push add jg lret into push sbb and stos sbb cmp xchg or inc gs test jg aam sub dec aas shrl dec inc sub push cmp sarb fldl xchg mov sahf (bad) test sub lcall push jg adc mov aas in mov xor in out mov hlt jg adc (bad) imul sarb ret push lret in adc repz cmpsb xor jns jg stos sbb shrb mov ret jg dec dec stos pop das clc dec jg fcoml stos leave mov repz out pop bnd jb cmp lock in jg sbb push adc push mov mov outsl jg sti cmpsb inc ret xchg jne jg call or test jge stc xchg jne inc fwait out cmp popf imul dec mov mov mov xchg repz sub aas push mov push dec mov dec into jg cld mov jg out dec rorb jg sbb and mov adc fldl aas xor dec or in stos stc dec ret jg,pn (bad) push lahf jne jg scas xchg ror cmpl or repz gs lret mov add add cmp stos rclb xchg mul arpl cmpsl idivb adc cli inc xor data16 inc (bad) sub mov outsl mov mov scas pop pop sbb jg test push cld cli mov iret jp xchg jmp loop lods aad or jg push jl pop sbb pop jg xchg push sbbl je xor pop jne in (bad) xor cmpl pop out jg push push push out fnsave xchg jle and jo mov (bad) arpl rcrl loope jns sbb ljmp repnz push jg cmp sahf fprem ljmp mov xchg out jecxz xor out jle jg and xchg popf (bad) cmp aas into add push jg mov lds cmp add (bad) mov cmp out xchg inc cmp mov xor push push xchg jg iret mov lcall xor test xchg movsl mov aaa xchg imul test jg (bad) (bad) mov jg adc sbb and and cmc mov xor pushf jg,pt aaa push test fs ljmp iret sub xchg js sub jge mov pop xchg jg idivb inc pop ja popf out mov jg adc mov icebp sub jae pop jg in mov cmc and sti out insl stos pop out mov jg xchg mov bound pop cmp fstpt xchg out mov nop insl jg xchg lret iret inc sarb les dec jg xchg ret std inc scas inc xchg pushf jae ss out pop mov inc push (bad) lret jg xor cmc ljmp aad int3 inc push jg jbe or push pop leave mov jg or sti sub enter mov cmpsb xor jg imul jl data16 jg loop cmp jle jg jae cltd push push stos pushf jg sub xchg jg sub aam jg sub push mov inc push jmp mov pop sbb add pop jno int sub xchg and in adc pusha jnp mov jp,pt pop push xchg dec and sahf bound xor insb aaa clc ret jmp jg cmpsb mov jo repnz adc ljmp add lods test dec rol jg and mov push xchg pop in int3 jns inc insb inc mov int pop jbe loopne arpl xchg mov shll and xchg cltd sub inc nop stc iret call push pop lds lret jg hlt sub fnstcw stos mov xchg push push (bad) jmp mov xlat ja jge or mov pop dec sahf jg fcmovnb inc adc mov lcall jg daa (bad) fadds jnp cmpsb mov cmp lods movsb cmpsl jp lcall and jae loope and jg arpl es pop cwtl insb jg scas or loope inc add cmpsl jg mov sbb outsl popf mov ljmp je (bad) jg imul data16 in fucomi insl jo out inc jg rclb mov inc outsb push rcl xchg jg lds enter jg pop mov push ja (bad) jg jnp pop xor jle imul mov out push jg add fnstcw into lds js xchg (bad) inc rorb and nop sub (bad) repz dec pop sbb dec loop and inc stos fsubrp inc or pop xor jle sub fstps (bad) and cmp shl mov dec jb jg in pop (bad) jne lods bound and push dec cli sbb jg jno cld add jg or les xor and jg pop lds movsl mov adc int3 mov loop add ret jg lods in inc dec xchg mov adc jg iret push sbb and (bad) idivl push xchg mov aas jge pop push popf jp fcmovnu sar addr16 mov sarb cmp xor xor (bad) xor inc (bad) insl jg jno sbb jmp xchg cmpb fld mov mov pop hlt out shr and jg mov scas (bad) add jg sub push and push into aas push das mov fs cmpsl dec movb cmp inc xor push mov pop lods aas sarl fiadd jno push mov pop push cmpsl popa sub lret mov outsl ret and and cld aam aas dec jnp popf stos stos pop gs jae scas jg inc cmp jg call arpl ret dec pop ret rcrb mov daa ja push je sahf loop repz fild outsb jg xchg ficomp shl xor jg xchg in jno in jge pop je sub out xor roll loope arpl insb mov das mov jg sarl and jp jae jno out jg xor repnz lret adc popa jg ljmp divl fnstenv sbb das lods xchg cmp mov mov jle jecxz sti add mov inc fcom inc adc (bad) cmp into scas jg nop outsl jle cmp xchg add fdivrl jg cmp push nop mov jg dec lret in fcomps jg mov scas ret jecxz out xorl ret sahf pop aas jg dec cmp in cli pop cld jg sbb cmp xlat (bad) jo cltd pop sub mov imul jg jb xor or lds inc cmp aas icebp in and inc sbb dec inc jg pop cli scas clc iret xor push jbe jl leave enter jb mov inc movsl addr16 jg push outsl (bad) test aas movsb jg push int3 bound fidiv jg adc fs adc mov sahf dec (bad) mov int shrb pop popf call cwtl mov es test push pop lock shll ds push mov pop movsl jg aad and xor inc jl cli mov mov xchg out fstp jg pusha inc cmp in mov popf and sub jg xor int3 mov dec out fildll pushf shl sbb je adc add (bad) jg fidiv insb cmp xor insl mov aaa pushf aas mov out pop std lods popa push imul mov jg (bad) in stc or dec xchg mov push push insl ss je cltd movsb mov pop inc jg xor movsl xor popf inc mov sub pushf je jg and movsb sub mov mov push iret mov push leave jno nop iret dec pop xchg sar cwtl push (bad) jg and xchg shll pusha in arpl jg (bad) xchg pop test cs jg lds jle mov dec add push jg inc push sbb mov dec jbe pop (bad) mov pop mov lods mov imul stc add dec pushf ljmp out call and inc mov lahf imul addb or sub cmp ret jne test cmpsb jg std (bad) imul call xor pop (bad) cli sub (bad) jg sbb hlt imul xlat dec rcr push jg sti cmp sub rorl jg push push movsb pop in bound xchg sti imul xlat mov dec hlt shl jg movsb (bad) (bad) jno pop mov dec mov (bad) mov mov test fdivr inc lret and dec push add inc jg (bad) rorb adc pop outsl pusha outsb xchg sbb jecxz jle movsb xor jg sahf ss shll int3 mov setb dec cmpl pusha mov jg push stos (bad) repz mov push fnstenv mov jp jg and lea cmc jg cmp sti (bad) ja pop js loopne cltd fdivrl or out add sbb dec test pop daa jnp xlat sarl push aas out lcall jg lock jg mov sub mov mov xor int ljmp insl pop aad and (bad) mov scas jg popa test xchg jg js addr16 dec ret insl cmpl stc mov imul inc jg popa movsb adc insb maskmovq testl mov icebp adc lahf std xlat stos imul sub in in test rol es or mov jae lahf addr16 adc sub int3 mov stc mov jnp push adc xchg pop inc je adc mov fist imul jae pop jg stos mov pop notl call jg cli (bad) or and jg stos aaa sbb test lea mov sub sbb loop jg mov dec rorb dec jg fnstcw jg jb loope fnop push mov ret xor mov dec mov adc cltd punpckhwd fwait jmp cmpsl push insl xchg jg testl cmpb mov (bad) pop lea push cmp (bad) push pushf mov dec adc mov xchg sub lcall sub and lret add inc fistpll jg leave adc cmpl xor jp inc jnp sbb test adc cmp jg sub push xor pop mov cmc movq loope xor xor mov repz dec jg je cmp sbbl jno adc xor (bad) icebp mov xchg xchg or loopne pop add das cltd xor and pop jg xchg (bad) mov lahf sbb jg loopne test pop das inc jg mov (bad) je inc sbb xor pop stos cmpsl jmp jg adc test ss sti jg in xchg or or push push pop rcrl popa aas jg rorb enter sub (bad) mov je push aam cmp sbb jg cmp scas dec es xchg pushf inc pop insl mov pop sbb sarb push lods jo fnstsw dec dec adc cmc push dec pop ja popf jbe iret jle addr16 data16 push or push pop add ja divb add push jmp fldl ss ret mov pop imul pop mov jg push pop jns jno mov popl xorl hlt cltd mov adc or fisubr sub lods lret aad mov cwtl jg or pop js jns leave push adc adc mov inc stos push lock ret nop xchg xchg ret (bad) pop jg mov cli sti xor jmp mov stc xorb fcoml mov idivl fidiv xor dec mov lock xchg dec jo call pop ror jg fdivs cmp sti ds mov fdivp std ret int jmp pop jge stos jle jl icebp mov cmp sbb test sbb daa ja mov mov pop xchg subl in jmp ret inc outsb inc (bad) push dec jg mov pop or mov pop lock test mov jg lret ja jle dec data16 sbb sub je jnp or mov jb jg push pop xor jecxz leave aas dec cld imul scas jg div lock add psubusw pop push xchg test jg mov push mov jg leave mov mov xor imul jno rcrl push daa mov icebp mov aas xchg mov dec outsl xor jbe cmc ret mov inc pop popa xchg xor mov and ret repz add (bad) cmpsb mov fwait sbb or xchg cli cmp out dec mov cmp pusha adc in pop nop mov pop sti cmp aam mov lret mov lds bound push inc nop jg or fcompl pop fnstsw adc data16 out icebp pop ret jg hlt pop bnd jle jg nop sbb pop jle jp jge dec jnp xor aas fsubrs pop add mov dec lea jmp mov int3 add (bad) je mov pop pop out jmp inc fidivr pop xor lret repz in jle adc movsl js in fisubrl jg push or popa jg push xor insl or aam leave aad jge cs mov js cmp movsb decl test inc push ss pop or push and inc in out adc (bad) pushf and hlt jg leave movsb stos inc lret je inc push (bad) cs repz outsl nop fdivs enter push aas adc mov (bad) push xchg push mov inc cld or jl popf pop lods dec test insb lahf shl pop adc aaa push aas repz inc xor mov push xchg jg outsl arpl test adc jnp adc stc inc repz jg (bad) cmp imul hlt enter pop sti pop xchg (bad) jne aaa jg mov cmp dec and loope jg adc push movsb (bad) mov movsl mov xor cmp pop ds mov addr16 jg out push lret add fiadd pop mov sahf (bad) dec mov dec ret clc mov inc fcompl call push jg daa mov push pop out scas jg leave inc dec mov pusha xor dec xor aas pop in pop sub jg out cli jge std push jae fsubrs jae jg icebp das (bad) aaa test ret jg cmpsb cmp xor mov clc (bad) mul sbb jo sbb (bad) jg faddl fisub lock jg das and (bad) cmp pop movsb push repnz xchg pop iret test mov adc sub mov jg aas into inc push cwtl jg mov cmp push dec mov mov pop (bad) lret inc adc js cmp mov push mov xchg jg js dec in mov pop out test sbb ret pop shrb mov lock inc cmpl pusha outsb jecxz or scas je dec inc dec or cli mov jg adc (bad) aas push cmp xchg mov sbb addr16 stos pop scas push cs sbb and xchg jg out inc cld test (bad) mov mov sbb jg cmc aas pop ror dec push jo jnp imul sbb inc gs fnsave pop cmp out xchg adc jne mov mov mov cmp jg jge test jnp inc jg pop xor adc mov das ja sub fs adc jg and xor dec fwait mov jg lret sbb lods jg lds push mov cmp push adc mov orb jle jg and jns xchg jg inc pop test sub imul jg xor mov jg mov or test repz int jl pmullw (bad) dec add insl or inc cmp mov sbb lods sti mov mov inc mov out xor push (bad) fmull sti ja sbb jecxz push mov pop or mov pop cmp dec dec cwtl xlat jg jne mov jnp mov add jns andl (bad) cs sarl or aas mov mov dec hlt lcall (bad) lds cmp mov sub nop jg popf add jg sbb xor mov fs jbe add aad or mov push popf mov push add jae in jo sbb adc dec popa inc stc cmp aas mov xor adc jbe sub sub (bad) das push jg sub xchg jg test fsubr int daa inc cld jg in lcall test (bad) gs adc mov and lcall xchg out add mov push jno mov adc aas mov cmp dec repz xchg sahf dec pusha add dec lahf jg sub mov pop jl movsb jecxz mov addb pop push jg sub push jmp outsb sbbl dec into fild jg call fcoml jg pop mov (bad) jg nop mov das daa sti or (bad) xchg mov js sahf dec into (bad) mov xchg jmp repz sbb jg add clc cmp jg jns xor xchg jg and hlt or jbe adc out sbb cmp jg inc cmp mov cmp sahf cmpsl mov pop mov das xchg addr16 (bad) push mov xchg jg inc imul aad sti cmp push mov cmpb fidivl cmp je cmp dec mov pop negl xchg cltd loopne jg adc and add pop mov pop push pop (bad) into fnstsw cmp sbb mulb adc mov mov lcall lds outsb push jg push sbb fidivr test lods je inc movsb je inc mov sbb xchg xor imul movsl cmpb cmpsb push arpl pop lock pop adcl outsl mov insl mov daa cwtl mov call jno je inc jnp jp mov push in push and jge push aas xor loopne bound addr16 xchg idivl ja mov inc mov lds loopne icebp cmpsl cmp cltd mov cli les jg sbb jg dec aas mov jg repz or roll xchg xchg pop scas outsl xor mov jg dec call lea sbb les and lods loope sub inc xlat push clc insl sub (bad) jp inc lcall and xchg orl jb and mov cwtl cs jg aaa and outsb aad jg mov xchg jg pushf (bad) repz stos push cmc jg push add add iret cltd aas jecxz decl repz mov (bad) mov push rclb add mov inc and or pop iret sarl jp jg add jbe sub adc test xor adc out pop sub dec mov cld mov fwait mov mov scas movsl in fs dec cmpsl std pop adc in jbe pop sbb push sbb lret lds xchg stos jg ficoml mov mov movsb inc outsl (bad) stos insb inc mov sub outsb out loope insb sti mov pop and jg imul jg inc insb into aam jp jg adc jno (bad) pop mov in mov mov ffreep push mov adc and jg push ljmp (bad) dec je inc icebp dec jg sarb jg xchg dec mov jg dec xchg in mov mov ds xchg fldenv (bad) iret or jg sub add test lods ret imul cli or jg popf cmpsl insb adc or (bad) push repnz jns cmp std das push addr16 rorb cmp sub (bad) fstpt loop (bad) (bad) out aas cmpsl mov lret (bad) sub pop jns and into jle and arpl je pop test cmp popa ja icebp xor imul in and mov sti xor xor jns mov ja push mov push aas ret (bad) repnz sub pop shrb (bad) mov jp jge inc sub push jg aam fimul ds jg rclb pop mov mov test jg sahf add sub xchg mov sub jle add sahf push dec adc fmuls leave lcall dec lcall sti xchg inc push (bad) xchg aam aas test in jl lcall pop hlt sub in lds mov push ficom or shrb xchg jne sbb outsl lods leave clc mov mov mov rcll adc sti push aam and adcl xchg xchg inc jns cmp fmull and sub cmc cmpsl shl aam leave call movl lds dec push or pop jmp pusha mov push adc hlt (bad) test fdivrs jmp ljmp mov xchg jmp xor jns inc imul pop push ds jp cmp pop mulb jnp mov jg adc stc sbb jmp mov mov jnp cmp nop xlat ret mov adc xchg (bad) jg sub (bad) iret jg mov xchg outsl jg sub jne cli jae jg or mov jg iret mov leave insb xor jae jmp xor notl and jb jg pusha adc xor dec sti je mov pop test jg jp add (bad) insb sbb or stc mov (bad) addr16 push xlat add adc mov rcll in jg xor xchg cmp jg insb sahf std clc mov or pop cli jno cmp das add sub call mull xchg sub push mov (bad) pop loop inc loopne sub xor jg shrb (bad) push push sar test xlat add (bad) mov jg hlt mov inc loope xchg sahf add add fnstsw mov fimull int3 stc pop out aam out push mov jg xor jg mov (bad) xor xchg pop pop inc lods hlt add popf stos xor xor lds jg dec (bad) jo data16 push jg pop push xchg js roll lret insl pop jg popf cmp xchg push push and (bad) jg pop in je mov aas lahf xchg roll push inc push scas and cmp sub cmc jle in adc jg mov fldl lea stos aam push inc mov and push fldl fdivrs dec (bad) sti sbb in pop sbb pop out out mov and mov push pop cld stos xor mov cmpsl mov lea jg adc fbld stc pop mov xor das dec mov dec pop adc aas int3 movsl daa insb fild int inc dec cmp sti sbb into sub mov (bad) mov (bad) fs stos iret jle addr16 out xor xor (bad) push sbb mov mov jns push test xchg xor inc jnp dec pop jae mov mov (bad) and rcrb sub and and sbb lock pop js push push (bad) jo stc aam jbe std std dec outsl add movsb idivl or test sub lret insb aas jg sahf adc scas repnz pop imul fwait int ljmp xchg mov nop stc jg inc les jmp xchg jbe shll mov das (bad) cltd outsb pusha mov xchg imul aaa dec push sbb repz movsb cld outsb jg (bad) jns aad lods jg cmp in push lahf jg push rcll les mov mov inc jg inc or adc sub (bad) xor pop sub mov loope sarb jg divb fisub (bad) mov jne pop sbb jg or mov aas ret fsubs inc (bad) and mov pop pop mov iret dec fcoml jg mov out cltd nop fstpt stos inc xlat and mov ljmp mov out jo aas mov cmp inc stc and test add fnstsw push jae push lods in jbe dec push jle pop lcall ret call push (bad) sarb addb jmp mov aad or push sahf dec mov stc cmp rcrl inc stos addr16 jo bound mov outsb (bad) mov mov xchg lret jg mov and dec xorb loope jg mov fcoms jnp in pop push addl xchg mov imul sbb cmc xor jg push cmp and insl jg push xchg rolb out aaa popf fisubrl (bad) and jbe into ret out idivl push sbb sub loope jg xchg sahf cmpsl cmpsb daa ret in jg sbb (bad) sbb inc and lret jg loopne in xor aas (bad) mov nop shll cld inc cmpsl pop jg das out in js mov dec cs mov fstps int mov push dec in cmp into add fmull push xor jg lds insb dec jbe push je sub jle loop pop data16 pop xchg jge das xchg movsb lds or jle subb iret out or sti out adc xor inc sub cld dec add ja sub inc fwait jg adc je jbe aas jg or sbb jecxz adc enter repz add jg dec jge mov lds ret rcrl jae fwait mov (bad) jb clc xchg jo addr16 (bad) jg push lret mov jg out das (bad) adc (bad) icebp loop pop push fsubrl in es and mov mov in pop pop sbb jle mov aas es fs loopne ja out and adc or out jg push lods mov insb xchg outsl jg fistl sti arpl (bad) clc dec ljmp push fist arpl je in or lret fidivr pop jg stos insl ss dec sbb mov imul hlt pop lret jno jb add rolb fldl jo aam aaa pmullw dec loopne fdivp clc or sbb and sub jmp xor pusha mov jg xchg sti jle jg shr sub jo aas jno movsl pop negl cmp sub push out pop lahf sub mov int3 sbb jle mov mov jne mov or adc (bad) sbb cmc push (bad) fwait xchg addr16 fldenv mov cmp pop leave or dec loope xchg aas hlt jbe jg nop or lock jg mov outsl es test push roll dec jg xchg fidivr ljmp push cltd jae mov dec jg imull mov fiadd mov imul jg pop (bad) rcr sbb jge add lahf cmpl xor lods mov xor sub xor mov hlt and xchg pop aaa mov mov or pusha imul dec jg lds nop lea cwtl test cmp adc (bad) mov add jg sbb movntps iret out mov dec stc gs sub das clc dec pop dec sub addr16 test xchg popa out hlt imul sub sbb mov pop sub jg imul and rcrb outsl sbb jns jg in fstl popa xchg inc aas mov fiadd sbb push xchg jg rol in xor or pop and shrl ret mov inc cmp outsl repnz cmpsl test ss push cmpl xor or pop pop ljmp (bad) faddl add outsl mov jp jg adcl popa test push scas jg xchg loop mov (bad) jecxz lods adc xor movsl fs out push push mov ja ficoml (bad) pop pusha idivb fprem1 xchg jg pop xchg in pop jecxz jg lcall aas loop lahf cmpsb into jb mov or push and dec (bad) arpl repz xchg jge fldenv mov mov mov dec pop xchg dec dec adc sub mov pushf jecxz (bad) je insb push jg push test mov enter pop xorl or jp mov sub cli mov mov outsl adc jl fstenv mov clc mov pusha lea adc psrlq jbe jns loopne scas lea pop jg gs out mov push add mov sarl sbb subl jg lret je jl sub jg mov hlt ljmp popa test jg mov add jg jnp and jg jae pop jmp cmpsl cltd sub adc rolb sti fistpll mov loop pop lods mov mov cmp cs mov imul jg and out pop jns psubusb mov pop push aaa and out call in mov xchg mov int3 mov lock mov inc push (bad) or jecxz xchg pop dec repnz jo mov int3 mov pop adc (bad) jl ss mov jne das dec jg mov push sti cmc mov (bad) jg jns rcrb mov ljmp mov pop repz jbe mov sbb stos mov dec popf clc adc jg mov push mov ja fmuls loop cmp cmpsb stos bound sbb out mov mov pop ss mov ja xor add mov inc cmp aad test sub fcomip pop cmpsb jns cmp and mov mov dec out rcrb pop lcall out mov shll jg or cmp push sub mov inc push jg pop lods lock and push inc dec lahf in inc push jg xor iret mov rcll lods jmp fnstcw pop leave hlt repz out jg daa inc (bad) in ss jg jmp mov imull fist jg cmp das or inc adc loop mov xchg ljmp pop inc jmp inc dec dec test jg jecxz push sti xchg jnp jg dec leave cmp push fwait aad cli pop jle mov (bad) mov sbb out mov sbb adc mov xor sub test jg daa cwtl sub sahf xchg push femms repnz sti scas roll or (bad) push aaa fldenv test aad pop cmp pop pop push push scas xchg mov lahf dec in mov lcall orb mov jle sbb jns mov test mov sub add lret fildll ror xchg jg and inc (bad) cmpsl pushf repnz pop cli scas or mov pop jg gs lock hlt sarl push cmp jg and xchg xor pop jg ret fadd xchg pop mov and into sarb cmpsl sbb or out mov inc sti pop jmp (bad) mov mov sbb inc push jg popa fcompl cs cmpsl jg scas stc xor loopne inc dec hlt clc push push ja mov popf jp mov (bad) mov sbb adc loope cmpsl and cmp and add mov (bad) jg insb lret outsl sub xor cli fwait inc sub jecxz xchg iret jp (bad) fistpl jg lods add test jg out clc push pop sbb sbb mov cmp paddsw mov pop or or adc gs mov dec pop orl mov xor das mov jne pop mov cmp pusha mov jg mov iret cltd jg sti test (bad) cmp mov pop mov iret add mov adc aas cltd xchg mov dec aaa sarl add pop (bad) and inc mov xchg lret fs pop cmpsl sub sbb jns iret mov nop sbb pusha jg imul xor arpl test mov leave clc loop inc jle shlb push inc mov push xor xor cmp jg jns sub pop dec mov int3 outsl inc clc and rcrl pop sub outsl or inc push mov outsb jg mov cmpsl xor pop mov cltd (bad) jg dec cmp jo mov stos insb push jg in jp mov outsl sarl add xlat jg lcall jg push imul mov icebp inc pop inc cmp in adc stos mov inc fs sub add mov lock jnp addr16 (bad) arpl les sub jg sub mov jl mov jnp cwtl jg loop jle jmp push call out (bad) xchg pushl adc jg stc and cmp loope jg (bad) iret xchg cmc insl or (bad) dec lret ljmp jno push loope jo jmp nop cwtl inc pop dec jg dec pop xacquire jg cmpsb xchg pusha aad bound (bad) je jbe call pop fidivrl addr16 fidiv mov mov ja out jmp push xchg jbe push popf loop jg jno out push bound aas adc scas jl mov ja idivb cmp mov dec mov pop cli inc push rcrl std jno and cmc in mov xor adc push movsl pop xchg mov inc loopne jle lock out mov insl sbb or xchg cmp lcall divb or adc (bad) inc in jg push cmpsl mov jg ja,pt repz imul enter or pop sub mov fsincos dec pop push add outsb (bad) cmpl mov pop push sbb out loop clc sbbl cmc push (bad) push stos pop inc cmpsl jg xchg dec lahf xor loop je shlb call scas cmpsl and stc xor cltd test jg mov push dec jg std lock xor cli and fist mov std lods mov jge ljmp pop subl and sarl sti aad xor jg lea sbb mov les jg jbe insb enter jg gs pop negb mov stos bound out push mov mov fs mov push xor test (bad) in hlt push jg mov xchg adc cwtl jae lea (bad) call shrb idivl jne sahf add mov cwtl mov push mov bound jle cmp in inc in inc insb jg and inc insb pop mov js push repnz loope addr16 jnp lret xor sarl stc cmp push jae push jg call lahf mov movsl nop mov fistpl dec (bad) out xchg mov mov jg das cmp mov popa cmpsl dec pop ror add subb mov jg popa sub cmpsb jg push cmp sbb jae stos jg aad sub pop repnz lock and inc add jno mov mov ljmp (bad) leave repz (bad) mov cmp sbbb fmull fild pop testl loope out (bad) sahf dec sti in mov pop stos (bad) dec sbb xchg aas stos ret sub mov bound test xchg jg ret dec cmpl rcl call fstl and pop mov mov cld es mov orl jb insb jg mov in jg out sbbl xchg test leave (bad) fdivrs push dec xchg (bad) (bad) sbb xchg sahf es loope subl inc sbb mov fwait push cld push pop int dec jp jg stc pop pop arpl int3 pop loope mov cmp leave popa xchg jo jg and push in xchg cltd sub ret and sbb push sub popa out (bad) pop pop jg int loope sbb mov cmp push mov jg (bad) push lret xor cmp loopne lock dec les call push mov jg aam push and inc jg addl jg scas stc sarb cmpsb adc rol jge xchg push js mov jno out push (bad) sbb dec icebp jg dec sarl push fisttpl push addr16 cltd cmpsb xlat popf mov inc leave lods jg fldt test sti jo mov inc das and push inc lds rol cmp xchg and dec into adc mov xchg ficoml mov (bad) pop sbb inc and lock (bad) movsb or jnp mov or jg scas popa sbb jg int3 inc fptan fimull (bad) dec lahf jg,pt (bad) jbe add jg ret mov mov je lret mov adc add dec dec adc xchg fdivl lahf jg shrl ffreep aad pop fnstcw push mov or push add jns mov mov xchg pop xor imul adc jg,pt loop scas xor dec adc mov fisubl or mov fwait decl clc inc sti add pushf pop lret xor in ret inc pop popf jnp mov sbb aas mov jo pusha push jg aam cs loope add jno sub (bad) ficoml loopne mov lds pop push lret stos cmp push mov pop cmp ret mov jg jl mov leave notl in sbb mov (bad) out inc loop pusha xor push and addr16 dec lea cmpsb lock sbb and push pop and femms dec add ret xlat jecxz mov cmp insl in push jg pop pop jns popf add cmp into and fwait or loopne fwait push xchg mov mov cmp leave jp and jg push popa inc xor jg pop adc mov jg stos out inc sbb jns inc fsubrs add mov push add es sbb jg iret pushf lods notl cmp addr16 idivb or lds idiv pop mov jg les cmp adc push lds adc hlt jg gs fwait test mov movsb (bad) outsl test mov xchg push and mov lds push nop scas pop xor adc fistl jg imul jbe mov adc rcrb add jg fdivrl pop adc and inc movq mov mov mov arpl fdivrl push cmp fwait and push daa imul or sub sahf jg aam cmc fnstsw out or mov leave imul repz movsb jg push cmpsl push sbb mov mov lds jg push cmp push ljmp stos mov sti gs (bad) mov or jg jns aam (bad) int3 outsl out repz js jmp aas dec setp mov mov add aaa sbb jg dec sub ss inc jg std inc pop (bad) jg stos mov pop aas out or jae loope mov mov push hlt fnstcw or pop jbe push insb and rol cwtl jg in and pop xor aaa aas mov mov dec jge aas lock gs scas loope inc xor scas sbb mov sti jg mov cmpsl aas inc mov movsb dec rdtsc scas (bad) repz mov data16 ss push (bad) ljmp js loop sbb mov pop xor sbb vmwrite jg xor jge or push jl outsb push jg pusha loopne jge cli ja (bad) push addr16 test or hlt xchg jg inc test (bad) and dec xlat add inc xor jg out cmc mov jns adc repnz (bad) aaa mov arpl repnz lcall mov cmp cs sbb sahf cmc or (bad) jg test xor xchg push loope and mov popf outsl mov test xchg cmp jg xchg or ljmp mov mov cmpsl dec cmpsb dec pop jg push aaa xor jno add hlt sbb xchg push cltd cmp mov adc das lock clc ficoml pop mov push sahf cmp mov jg es pop cmp mov (bad) mov mov imul fisub sbb stos jg add (bad) int3 sbb inc jle fnstsw mov xchg sub cmp inc fisttpl lods dec dec pusha aad je jne (bad) mov (bad) lods cwtl jg xchg mov inc movsb cmp xlat add inc dec sub dec or add pop xchg data16 dec jl jg ret in inc pop jg mov test mov push movsb aas decb add inc test jg fistpll in xor push cmc or lcall pop pop jmp push jg pop les mov pop call jbe mov outsb mov ret push dec cmpsb das add jnp fadds ja mov adc dec icebp shll cli mov jg cs pop xchg push fnstsw lret dec xor mov push fidivrl repnz pop stos cmp jns push push mov in xor push jg (bad) pop inc jnp,pt ljmp cli subl xchg pop out and lahf add jge imul xchg sbb fsubs out dec rcrl ljmp (bad) adc xor jg push xor mov xchg jg dec cltd test mov jp sbb mov aas dec jo mov jmp lret jg push jns cmp and cltd cmpsb or mov sahf or sbb cli mov sub mov (bad) push les dec adc sbb stos andl icebp (bad) ja dec jbe jns stos jg fnsave js fsubl mov mov cmpsl inc mov in sub push fst mov jg cmp (bad) xor jl (bad) cmp sbb imul mov insb lock jg push je movsb (bad) (bad) jg or lods fwait mov mov push jne jg (bad) pop pop mov xchg add and xor xor lods outsl dec and xor mov in nop dec pop std pop pop rcrb sub and dec cli jne insl push mov pop dec dec (bad) mov into sub mul pushf jg sub pop je fildl js mov clc inc cmpsl dec stc jg add fcos je mov enter iret lahf add mov and insb jp loope jg stc sub mov ror jae inc ja and mov push (bad) jo dec lods dec pop mov xchg mov push (bad) mov iret or inc mov lods xlat out push xchg mov sbb sub (bad) jmp jg ljmp jg push sub jg xchg mov sahf jg lods loop inc pop mov arpl xchg idivb ret cmp add lods rcll pop repnz loope mov push sbb dec push stc pusha mov ja cmp sub test and repnz aas lcall addr16 pop mov add jmp int3 into dec add repnz popa mov in lods fucomi jg je popf sahf das adc inc fdivrl loopne clc mov push mov xor dec inc sub gs push sub dec test int arpl xchg add jbe mov pop push (bad) mov fwait mov iret inc push or jg xchg cmpsb mov mov insb mov neg jno fwait test bound mov ljmp jg fnstenv fwait jg in je mov or ja enter sbb je pushl sub dec dec adc enter lea dec shrl cmc push or mov imul pop inc jg xchg nop insl dec cltd loopne pusha dec not pop sahf jg (bad) mov cmpsl push cmpl mov mov mov decl jg lods pop dec inc jno es adc mov sub cmp pop cmp add xchg mov pop push dec dec mov push mov imul aas or and pop test loop push cmp push aas push aaa (bad) test in fs jle push pop popl pop jg cmp jb xchg mov into sti add jns jae inc xlat xchg xor outsl idivb cmp pusha jg or fstps rorb les cs mov xor push jle ret cmp leave pop dec mov testb mov jb (bad) mov mov and outsl jg mov enter addr16 dec mov jg subl push andl pop xchg rolb not cmp icebp cli in and sbb mov js mov sbbl pop mov fiadd dec sub sti xor or mov daa lcall jg sub bound push aas aas pop (bad) fmull xor mov idivl outsl dec adc sub stc adc mov sbb push and fnstcw int3 add adc cmpsb stos mov test les je mov pop push push mov cld mov lea mov dec ja pop lahf inc jg mov or and aam loop into pushf (bad) mov test push sub lods cmp push je call ret sahf jg icebp or scas xor jg loopne jle,pt ds sbb popf inc outsl push adc fucomp cmc pop fs dec (bad) jp push shrb push jae jne xlat inc andl jg and scas xchg xor nop push fidivrl ds xlat lahf jl jg bound inc mov push sub inc inc sarb mov popa (bad) or fimul jg pop fsts mov dec imul out popa or mov add push pushf mov jno pop pop lea repnz push pop fnstsw jp sarb ja sbb jg hlt sbb insb jg fadds fidivr imul lods dec test outsb mov add mov inc add jg sub and add imul cli cmp mov mov and loope xchg xchg inc test loopne mov push push pop mov je inc xor jle mov dec jg sbb rorl inc pop jg jmp cmp sub push arpl repz and xchg out jecxz pushaw push stc and jg clc and daa dec sub jmp insl lahf in add (bad) inc xchg pop jmp div mov (bad) int3 jg inc leave jl outsl cmpsb cmpl dec sbb sbb dec inc movsl xchg jge mov mov outsl mov xor aad orb jg pop pop or jle jmp (bad) xlat sub push ja (bad) pop insl test and pop sarl pop les mov in push (bad) cmp sbb fsts hlt jg push jae dec cmpl jg mov sub aaa icebp mov stos dec call lea cmp stc daa imul jmp jg adc xchg leave cmp mov dec lret pop test sub shrl push jg mov jmp jg outsb sbb sarb cmp jg and or stos inc mov fadds fnstsw jns inc mov jmp jg iret push clc xchg mov (bad) jg pop jo test push es mov dec jg imul jg pop xor test das lret out es mov inc sub arpl inc jg sub addr16 test jg jb xchg cmp (bad) sarl sub mov scas xchg jg cmp daa (bad) push nop or int3 jnp sbb jo pop sarl shll daa jg out and add push sbb roll jg jmp insl dec pop cmp lret aam sarl ret mov leave push insl dec in out and inc fwait xchg mov jl push add out jg mov aad mov inc pop int dec and gs cmc cmpsl scas mov mov and mov aam inc outsb mov jg cmp fdivrl stos add cli push (bad) movsl cwtl jg leave into imul outsb sub and test (bad) es jg and inc pop xor jg ficomp xchg test add inc cmp xchg pop fidivrl jmp rorb test sub or xor jg xor rol push arpl imul or inc repz push je data16 movsb jg lds push mov insl aaa push dec loope aam jg je and push sub fstps pop ja ficomp inc daa jp adc imul jl add push dec cli mov xor push rcll mov fldt push es dec push jb lock jg cwtl arpl xor jg xchg mov mov bound (bad) mov stos jae add jge xchg jg fidivl mov mov jmp xchg xchg (bad) std sbb mov mov push add sti test ljmp je ds daa call cmp aas das mov (bad) fsubl add out les and ja or in pop mov mov scas mov mov arpl mov pop out xor push popf leave add push mov dec insb add xchg xor stos mov aam sub repz cmp mov push add mov aas jle jcxz cmc pop jmp xchg outsb jg xor mov daa lret repnz pushf mov push push dec push fs or cmpsl (bad) mov push mov clc jle inc jl pop lea jo xchg mov stos lret pop pop pop jg inc xor iret sbb lods jg imul or pop ljmp mov jg xor xor lock push loope mov cltd or xchg loop call jg stos sub xor inc add cmpsb pop addr16 decb out insl inc aas mov mov mov jg lods dec mov std out lds mov das lcall mov mov sub adc movaps adc sub imull jg mov inc in jg dec sbb or mov test and add jg popa and dec jnp xchg jbe mov xor xor in sub jnp rclb inc pop dec jbe jg aas pop ficoml push inc jle stc lahf jae out fsubr add ds inc shl dec push push cmpsl sbb cwtl push sbb into push aas fbstp out mov jg inc jle sub pop xor lahf das bound shrb inc xor pop xor push xor out adc jg jle ss ror add sti xor dec into cmp sub sahf xor or cmc icebp add adc lcall cmp stos cmp jmp push sahf jg out inc frstors test scas pop test mov fldcw jg xchg dec stos push xor mov mov fcomps rcrb adc inc cmc pop mov cmp jg outsb sub imul xchg jg stc inc hlt pop jbe mov (bad) and inc push and sub (bad) out xor cwtl push add lock fs pop scas xchg xchg clc loop jp dec xor fidivrl pop divb test mov dec hlt mov inc popa add pop and (bad) jae lcall and std push test cmpsb jg fnstsw fsub lret mov (bad) xor arpl repz repnz cmp jg xchg (bad) cmc adc movsb jg mov or dec jno jg and cmp icebp xchg das aas (bad) jns xchg sbb fwait adc xchg (bad) jg and and mov les inc sarb arpl fcom imul cmp jg stos outsl sub mov cltd mov jg sbb movsb mov jg ficoml int imul outsl pusha fs dec xor or out pop dec stc and xchg jb icebp out or pop addr16 mov fistpll add into pop mov lods cli popa push xchg mov das xchg pop jp jnp mov in lahf fneni(8087 jg mov adc dec jg adcl cwtl insb jg push mov lock pop mov mov addr16 mov insl push add sbb jg mov lcall outsl test imul jne adc adc lret dec mov sbb (bad) popf dec pop dec sub jg mov cmp jg sbb aas inc (bad) sub imul push mov dec and pop pop ljmp cmp pop push pop jg mov pusha aaa jg les cli jg or cmp jg mov (bad) lcall xrstors les jne push jae test popa jecxz pop jg outsb sahf stos (bad) in and jg (bad) xchg mul pop in dec pop push mov ljmp pop ret pop shrl fcoms or jg mov inc leave bnd jl jnp iret mov out dec add and lods push enter jbe in inc out fsts pop jg pop test adc add mov dec inc inc pop in ds cmp xchg dec cld inc jae je dec inc jg dec mov add inc push stos pop jge jg sahf and lock push sti enter xchg xchg jg mulb cmpl and faddl test pop jg add xlat pushf cmp stos ds jno cld dec mov inc inc test cmp xchg jg pop mov mov rcrl xchg sbb inc aam mov jg mov push add jg rol adc das pop and (bad) negl mov int3 and je mov movsl jg xchg dec leave sbb push das pop adc mov movsl je test push and ja xchg mov cmpl arpl inc stos jnp (bad) in jg or dec push (bad) jmp cmp sahf iret jmp fstpt cmp subb test in out inc inc inc mov addr16 mov and lds pushf clc (bad) jg push jne push inc insb out pop pop movsl inc jp lret jg add cmp nop mov cmpsl fnstsw xor test fstpt mov (bad) lods jg cmp loop sub push pop je xor mov iret lret pop pop pop insl mov enter daa lock add sahf fildll jg mov negl inc cmpsb push and stos insl pop sub or call mov test sahf aam jg xchg ljmp imul mov scas sti das dec loope fwait xchg dec inc and push xchg jg insl lods mov jg fmull pop popf scas and inc pusha add bnd inc nop or (bad) out cmc jg lahf mov xchg jg bnd call pop add iret sub lcall icebp enter sti cltd push (bad) aad xor push leave fs mov test call inc dec add lea mov (bad) mov pop inc push jbe lret jmp cwtl mov mov jb adc jo pop shlb jg in xchg sub aas jl,pt lea mov push adc ficoml imul jo sbb jle pushf xchg adc movq (bad) mov adc add icebp stos mov repnz sub les jg jmp cs fwait test mov lods loope out rcrb sbb fs dec jl jg ficom mov popf jle mov int3 xchg aas movb mov dec idivl cli adc pop xor jg test orl jge inc test or jno jecxz idiv pop mov sti out and mov push add mov data16 mov sbb mov sub call push cmp mov out movsl rclb push insl jp dec sbb or adcb add cmpsb jg idiv mov jg xchg xchg xlat sbb jns push cmp imul xor nop pop cmp insl scas mov das aas add movsb enter arpl rcrb jg mov xor push outsl adc and pop or push paddb mov mov sahf inc das in fstpt sbb scas nop lea jle push pushf jne and (bad) jg add and mov insb jle cli add mov cli cmp mov xor or mov mov or jg lcall mov mov jg arpl sbb lcall shrl xchg fwait movsb pop int3 mov mov inc fildll jno pop mov jne jg lods test fnstsw add mov push fdivr jg mov in js mov dec sub push cmpsb cmp incb stc jbe aaa or mov add and jge les push call scas jg xor mov pop testl stc stc adc xorb mov test xor stos mov mov lahf inc pop pop (bad) jl jg in andl inc (bad) pop dec sub xchg dec cmp push in aas lea sti mov cmp mov negl fidivr push mov rolb mov mov or dec jg dec xchg xchg adc adcb scas mov jg pop test jle fwait repz sar aas jge push jecxz xor sbb mov xchg mov outsl pop push xor movsb mov aad jg sub mov xor jae lret outsl gs cmp iret lahf push push jg sahf cltd or sub or mov push bound fldcw fcoms inc xchg movsb repz push jg pop fwait mov cmp sub dec xchg insl inc mov lods adc test push lahf cmc jg or mov mov dec es (bad) repz sti push loope inc and flds insb aam imul imull inc outsl sbb inc lods push sbbl or (bad) aas aas pusha jge mov popl jg adc gs inc adc outsl xchg ja enter mov in repz adc arpl inc orl jg sub idivl inc stos jnp out pop cs jg fimull lret fdivl ljmp inc test and pop and mov aaa push adc mov inc cmp out and mov dec test out push add stos jg jp fstpt cmc mov fnop subb jg inc dec sub and jg cld bound add gs aad pop fist inc int imul into lret mov pop jo cmpsb pop sub fisub test sbb cmp stc pop cmc adc dec nop mov stos push scas dec cmpsb xlat aas pop test dec in jg out jbe pushf imul pop lret icebp pusha jg mov aas repnz mov adc imull pop dec mov je xor dec and imul jg push int3 mov mov mov xchg and pop cltd inc (bad) daa sub inc js mov hlt mov decb cmp jnp in fsubrp pop enter (bad) dec jbe pop and mov mov pop inc in add sub mov icebp add pop jbe sub pop lock cltd rol sub (bad) aam push jae sbb nop (bad) ja mov into fdivl pop pop mov push add pop push mov push in cli pop scas jbe popf (bad) xchg pop mov mov jg or cmp lcall jg xchg sbb mov and dec jbe mov fist jg clc ds cmc push xchg es and push insb rcl adc int3 mov cmp jg pop push lcall test fs jg fbld sbb movsb stc jg pop scas sub push mov mov popf insb jg lahf test nop in or mov mov jg icebp lods ret and jmp faddl scas xchg pop ficomp enter cmp test pop (bad) lock ja std push inc cmp loopne movsb dec xor xchg mov and das aad fsubl leave ds pop pop std (bad) out dec push mov jnp jg outsb inc xchg push cmp jg inc iret mov add leave push ds adc sbb iret mov pusha hlt out cli inc rcll push addr16 jg push xor in loop jg nop cmp sub inc xchg jmp (bad) mov je adc in inc inc jg mov shrl rcrb imul flds sarl xchg xor sbb lock (bad) mov sbb mov pushw aaa (bad) shl xlat jg inc (bad) mov out lds dec sbb dec gs adc inc mov aas sbb lods mov dec jne jg iret daa notb xor ja pop jae arpl jg rorb cmp mov mov jg dec sub shll inc sbb arpl inc jg sti adc stc sub scas in pushf cli ss pop or add cmp ds sub dec aaa dec pushf pop cmc jo ret mov jg stos dec orb mov pop mov xor inc jg push lods sub aas sub dec mov jg inc jmp jae lods add dec js dec or pop push sub imul mov (bad) pop std cmp add test loop mov jp (bad) sti push xor call in push jg aas pop jno mov nop cld xchg jns sbb mov daa pop loope xchg fbstp xchg loopne jg cmp inc call mov fldl sti (bad) xor push out inc jne in clc (bad) and lds fbstp adc jg mov bound mov in scas loope es dec fs inc roll jg ret repz sbb push cmpsb hlt xor mov jl stc jae sbb loop jg out or lret mov jg pushl ds mov push or cwtl xor sbb xor cmp xchg xchg minps add push inc (bad) arpl inc jg nop stos call mov pop jnp (bad) cmp jg cmpsl ror xlat mov push (bad) (bad) xor xchg sbb cmpsb scas aam mov push push add sub or add rclb je (bad) in mov push dec stc mov bound mov jecxz dec xchg aas mov das divl xor jg hlt stos sub jg fisub lds dec mov add jg xchg lock cmp std jb mov xor pop call movsl ds cwtl push es jg mov mov cmp out ret cs aad mov jg iret jge int3 mov bound imull mov jmp sarl xor xchg lods or push pop cmp into jg test lret sub mov (bad) sbb je fidivl add jb push xchg jg xchg nop push xchg sub mov dec lds mov xchg lock sahf mov shrl jg es xchg lds nop sbb jle stos jg lahf or mov roll dec cmp outsl mov int3 lods xchg vmovdqa jge jno mov aaa xorb (bad) mov xor mov pop pop or loopne mov jg jmp js mov (bad) inc cmp rcrl je pop sbb into scas cmp pop push jg stc rorb (bad) mov aaa jg dec add sarb or (bad) mov out je adc jg inc xlat mov mov lods pop aaa outsb push ds xor inc loope mov lods xchg pop (bad) repz and loopne ret imul adc repnz pop jg mov inc jnp sarl jo arpl jmp jg iret data16 or ret push pop xchg cmp adc stos jmp clc mov jg jge sub jno inc mov pop jp cmp xchg ja jl scas mov push iret cmp cmp jmp clc lahf xorl sbb pop cmp sub jg pop xchg es jmp and fsubr mov sbb mov or addl cmc xchg jg and sti push adcl stos mov mov jle aam popa add (bad) (bad) jns jg mov js mov cmpl fidivr loop pushf sub xchg or int3 add or aas in jg in (bad) jno jge (bad) fnstcw inc popf mov fs jmp mov mov ja push insl sbb jb mov push inc int in mov inc mov sti jge cmpsl adc iret mov mov cld and and pop fadd dec xchg push push lcall jg jne bound cmp jmp cltd out mov mov jl cli nop mov xor inc ss ljmp testl repnz jg adc imul xor pop fisttp enter test xor cmc mov lods fidivrl dec push xchg mov pop in cmp cmp test lahf test pop jg push popl inc and push push or js inc inc dec add add aam fmull xor pop jg xor xchg xlat jg into stc fldt imul ret cmp mov in dec scas pop jg or lock push aas cwtl addr16 test mov inc mov mov sbb xor inc mov popa sub xchg mov push std xchg cmc sbb sti jg mov leave fbld es sahf (bad) das inc ret iret addr16 push mov movsb loopne jecxz inc mov cmpsb dec mov xor mov dec (bad) aam xchg js mov mov jg loope and jg idivb xor cld pop insb ret jg and xor mov jp adc mov mov mov mov inc cltd jg and nop push jg popa jns (bad) int je pop sub (bad) push sti nop adc jg insb xor cmc mov mov clc and aas cmp mov mov das movsb fcoml arpl cmpsl aad clc jg pop std divl bound mov xlat jg cli push mov mov fild push and loopne imul sbb mov xor dec repnz add fnstenv push jg xchg adc roll (bad) pop pop js xchg push push jg in in push daa cmp jg inc cmpsb pop pusha enter mov or scas into sub mov dec test aas es popf cld out inc mov scas pop je dec ss or jecxz stc inc xchg outsb jg dec test cmpsb lods lock push idiv push (bad) jg lea push les jg mov jbe ss xchg push popa ds ficomp je jmp xor icebp repz dec jbe jg rcll fwait scas cld cltd jg test std cmc das hlt fstpt mov call repnz cmp push xor push jno (bad) in pop pusha dec jg test adc jg mov loopne mov inc repnz dec inc push xlat mov jnp loope xor xchg jg sbb popa fnstsw sbb jno icebp int3 mov inc cmpsl inc and push cmp mov loope mov lea repnz mov mov mov cltd aas adc aam mov out jg push scas sub loope and xor test and xchg dec cmpb call mov jb adc xor test mov fwait les outsl xor mov pop or jo arpl xchg in mov add ficoml lea outsl or dec jo inc sub cltd push cmp dec jg jl fwait push push sub fadds sarl cmp mov sbb push mov js cmpsl jg sbb xchg out leave test pop movsb lcall sub push push adc adc mov lea push inc popf rcll jnp into xor mov dec push jmp hlt daa pusha je xchg mov xchg mov dec fisttp mov mov aad ret dec jge pushf and jo sub sub dec xchg rcrl jne xchg cvttps2pi jg jbe stos (bad) stos pusha sbb mov fadds jb push out dec and in mov jecxz pop mov adc roll les pop pop (bad) xor aam sti fsubr ds jg (bad) xor dec mov push cmp pop push sub mov cmc loopne in adc fistpl pop dec jg xor repz fwait xchg xchg jmp nop mov gs lock mov adc inc outsl jae sti leave lret jg jbe insl jo loop jg lods mov fwait or sub sub ja mov fldl jg add lods mov les xchg jecxz dec stos std daa xor out jg movsb or fstpl out pop mov pushf roll in jge icebp outsb push jg xor add out dec (bad) dec dec loope inc js pop je popa sti jg and push or fsubrl rol push mov push mov divb xor jg cmp inc gs cmpb hlt arpl lcall jo imul or cmpsl insb lret jg mov jp jg or push mov adc mov dec decb push mov or dec notb jg mov add jle mov fcomip dec decl add inc dec outsb or cmp daa jmp inc into sarl jle out scas push sub lods je fwait xchg stc sbb push mov dec inc sbb in xchg jle jns imul mov cld ds cmp cmpsb mov jg cmp xchg out push sarl push mov pop cmp xchg ret pop rorb jg inc inc inc xor shrl sbb popa cmpsb mov sub cwtl idiv xor sub jecxz jo jmp mov jp pop std add cld insl pop popa push sbb loopne cltd dec out inc loopne jg mov lock xor and sbb jg scas fidivl shl add sti pop int stos addr16 add mov mov cltd xor jg xchg mov adc jl mov or lea repnz bt dec and loop or jb and dec mov dec cmpsl jle sbb incl pusha jg push push xor ja jg aaa add nop xor negl mov enter pop fidivrl mov adc sbbl cmp jg aad or add fisubl jg cmp xchg adc ljmp fstpt or cmp and jg pop data16 ret inc mov ljmp jg in inc orb mov fsubl das or pop sub fcom andl ja adc mov mov sahf pop orl mov jg push in jns add xor mull (bad) movsb cmpsl jg xchg sub jecxz jg sbb bts nop mov jle out sbb pop add (bad) mov faddl mov popa push mov (bad) aam out lea nop shl jg stos inc mov ds ret dec pop add jl aas stos xor jno lods dec (bad) loop mov mov sbb xlat pop test mov (bad) notb adc rol sbb inc daa dec aam fnstcw iret cli jbe cltd inc lock popa and lds cmp movsb mov jg jno sub daa test and mov and pushf push push jno push movsl and cmp jb cltd mov test jg icebp insl mov cmp aas mov xor xorb mov mov cwtl mov pop jg sti or jb push sub js dec addr16 dec xchg push lock xchg cmp jg mov jnp mov enter stos mov cld lds push jbe mov (bad) mov rcl (bad) call lock aad repz leave fwait ret outsl lcall or mov lea pop (bad) jle mov enter mov sbb rorb rcrl mov lock jge jno pop push inc pop popf (bad) fdivrl je jo leave nop adc jg xchg inc mov pop lods push dec push xor and push ss jg imul inc jg xor (bad) repnz data16 mov mov jg mov inc xchg jg pop pop aam pop out mov inc or hlt mov pop int bound xchg pop iret push mov daa add adc mov xor xchg jg sub (bad) jg dec xor cmc xchg sti mov cltd or sub ja (bad) lret cmp inc pop addr16 cwtl sbb jle pusha mov pop into cs mov xorb mov mov sbb mov xchg addr16 add pop jg mov ja jg mov add or decb addr16 leave jg jo (bad) sbb daa mov and fimul into pop pop lret mov test or and cmp cmpb and fucomp xor fsubrp ret sub divl test cld std das stos test fs jecxz jno cmp and jg mov aaa sub add jl jg movsb cmp mov xchg dec mov jbe xor mov (bad) pop mov enter push jge xchg jecxz pop in xchg insb and jo mov dec pop outsb pop and fwait inc mov in mov pop call mov decb cwtl daa jg inc mov and insb mov jg cmpb mov test cmp clc adc inc jae addr16 mulb jg cld out ja jg (bad) xchg push (bad) jg jnp in fnstenv sti sub lret pop pop lcall xchg mov add mov fildl (bad) dec or out mov xchg dec enter jecxz ss mov push sti cmpsb mov inc push add int jg and mov jg dec clc je push mov addr16 icebp mov adc pop dec mov repz sub mov cmp add (bad) dec cli (bad) jg fmull mov rcrl rolb mov (bad) mov xor mov fisttpl jno sti jg insb mov pop fldenv jg mov mov jg fwait test jg vunpcklpd mov sbb loope lahf adc out loop inc gs pushf imull sub push ficompl lea scas cmpl mov inc jb in lods stos fsubs cltd jg std and sbb or jg dec mov fwait sbb aad ret dec bound mov sahf add (bad) adc daa fildl jmp test bound cmc inc inc xor mov mov in lahf pop js sbb inc jo jg js lods or push push aas ds fwait jp fs addr16 mov jg mov push dec lret movsl pop enter push mov push mov fstl daa in rorl xchg mov jg aam leave popf movb xchg lret mov pop xchg addl js mov leave lahf pop mov sbb or negl pop mov call mov inc cmc shrb loopne mov push push pusha rep pop call xor idivb out push push jg xchg push dec cltd arpl movsl jg mov roll jg lods mov rclb fcmovnb lock js jg inc gs mov mov test lcall push mov mov add adc jg lcall inc hlt mov lea dec test mov imul mov pop data16 push jbe pop add sti int3 inc inc scas xor xor jg xchg lods std sbb and dec dec fiaddl hlt jg dec pop cmp rcll jae pop push push dec addr16 popa jne inc scas and adc mov inc es out pop jg pop or aas daa bound adc test aam jg adc jmp push insl mov daa (bad) mov scas xchg arpl sub mov in ss push dec push mov jns or pop mov lock pop jg popf dec mov adc jnp aam push xchg xor leave gs cwtl push sahf pop mov jg adc jle and pop lock lods jg stc (bad) in lretw and rolb xchg in jg,pt outsb pop adc sahf add jg push repz insb sub pop xchg jg int test mov jmp adc gs div insl pop imul cli add jg xchg lret dec mov push ret loopne mov cmp icebp jbe mov test std cmp pop es and or jg inc (bad) popa sbb loope lret leave push push xchg cmp aaa fcomps sahf aas lahf mov pop cwtl notl mov inc inc or mov sub ret imul lcall incl cmpsb inc jbe jl dec imull add nop mov int3 push stc cmp mov pop mov nop cld (bad) and aad repz add jg rclb fidivr in mov pop pop mov ljmp xchg push jg (bad) mov jg sub sub cmp and mov out inc jg,pt xchg and enter iret fidiv and pop es pop hlt dec dec cmp pusha xchg mov mov push lock aas inc rep jno,pt or jae jle lods sbb mov jg inc mov inc sahf and mov push inc sbb fs les cmpsb lds cld jmp leave out jo pop jg add push stc shl cmp lea lret xor jg,pn or int push cmp jg out mov sub in pop aas imul aam daa adc cmp repz dec xlat push test inc fstpt sbb mov push lcall adcl jg cmova lea jg repnz clc lret or mov jge dec fwait sub mov mov mov sbb fimull dec cmpl sub aad pop inc and mov test pop mov test dec jmp or ljmp cmp mov cmc jg and jae or adc bound outsl mov add cmpsb mov mov xchg jg test cs imul jle cmp loop adc pop cmp or dec jmp xchg jg stos leave mov dec sti cmpb push outsl jmp dec jo jg outsb fstl pop cs aas and adc adc jg sbb xchg imul mov clc test pop arpl fs mov push add mov mov jle aam sbb pop lcall in out ret jge mov xlat mov shrb stc lcall xchg ljmp xor pop jmp sbb jg scas mov inc outsl bound popf (bad) mov cld sbb sub call fisttp jg push pop repz or pop gs mov sahf mov jg mov ds out scas jne inc ds cmp in pop pop sub jg das jle (bad) lods inc jg sub loop in sarb arpl mov sbb jg mov push int xor daa notl push pop push jg xchg adc (bad) mov shrb lds push sub mov xor subl les mov out stc xchg leave aam cmpsb cmpsl movsb jg xchg jle dec outsb (bad) mov fimul add aas iret cmpsb and bound push push dec mov bound stc or jg sbb fcoms fstpt into jne cli inc ja mov fidivr pop popf fwait arpl sarb call dec cli jbe dec sub les or mov leave jg inc outsl adc jne cs push in dec mov (bad) aam cld std pop mov (bad) pop sub pop pop in sub adc push cmp (bad) int aad repnz jnp or icebp add scas sbb lret adc mov fdivl popf mov mov es jg ljmp jg sahf fiaddl bound or adc loop pop out jg leave mov sbb std test mov xor test or (bad) xor popf mov inc mov (bad) jns lcall fistpl add movsb js jg in cvttps2pi (bad) aam loop sarb out fild jg ret loopne call faddl or xor (bad) aaa stc cmp cmp push pop (bad) divl call dec arpl xchg mov out jg cld xchg cltd popf movsl ret jg int dec mov es jg inc add mov (bad) fisubr xor mov inc ret and fsub pop js popa mov pop mov mov cmp mov outsl cmp or jg mov jnp mov xchg cmp adc iret xchg lret into daa jg mov int3 loop fcompl xchg cmpsl xor frstor insl sbb cld xor xchg adc mov sbb lahf loop jg pop mov xor call xchg jg clc jno add mov sbb or jg dec cmp shlb int3 pusha pop les inc enter push insl insl add sbbb mov jg jne rolb mov fwait jg sub push dec sti mov add mov and jb sub jmp (bad) dec jg je fdivs in cmp enter cmp jg inc imul movsb mov sub loop xchg push xor and pusha cltd lods repz jg xchg outsl mov loope jg jns add sbb sti test mov xor or fldl scas les dec pop in in mov mov popf inc jmp add mov popa jns js in mov idivb ret shr lahf dec (bad) jmp jns fsub adc testl or xchg sub outsl jbe ret dec sbb bnd jnp adc xchg stos daa cmp sub insb pop jno ret or push jg push cli popa pop int push jg dec repnz lods push mov in push jg and aam adc cwtl xchg out dec loope lret jg xor aad jg lea jnp pop push mov add leave push in ja sub xchg jb fsubl dec dec iret jg fcomps ds cmpsl bound push aam jg jne jp mov fcmovb fwait and pop xor pushf dec rcrb lock jge es xor fisttp cmp ljmp and outsb add js in adc movsl pop push pop jg inc dec add jg lods mov sahf aas adcb inc mov jg ret in push dec notl mov push pop js jg fucomi xchg notl push mov jne repnz jmp push dec and lret movsb cmpsl mov insb fcompl fisubr out jno xor subl mov dec jae and push jg fincstp data16 or int3 jb xor hlt sbb mov or in fsubs sub sbb out cmc dec mov sub xlat pop pop in dec inc dec mov xorb jp push push mov cld pop inc cmp or xor push pop add fstpt pop enter inc je pop ss jns shrb xchg mov jg and imul lock jg,pt adcb mov dec xchg sbb and call rcrl pop or lahf fadds jg movsl imull jg lods cmp mov (bad) arpl fwait cmp pop aaa inc lea cli in push jg lahf jno push iret gs add xor mov add jp outsb dec or pop and mov jg cltd cs pop fmuls int xchg fidivr push lods jb or ja movsb jg mov sbb sub push jg js fisub jecxz scas xchg mov mov and lds jg sbb add enter lcall xor adc popa pop xchg negb insb ror mov das mov stos push push inc or jg xchg je shrl rcrb or jg iret xchg dec jmp in jg xor sahf xor pop adc addr16 aas imul xchg adc sub inc in pop js (bad) fwait jg cwtl aaa sub icebp imul lea jne dec xor (bad) dec inc mov pushf push rclb mov push add sub lock mov lret call and or sti lret xchg dec mov cmp int3 xlat and sub enter mov xor sbb or xor inc fwait stos out jmp or int3 into xor test pop fs adc xchg push pop data16 (bad) imull jmp xlat adc inc test shr jmp (bad) jg mov lcall push sub mov or or (bad) dec sbb lock out out or jg es in xor movl dec xchg cmp and adc jg xor mov xchg cmp pop adc enter leave sti nop out and xchg fsub fistpll pop jmp xchg jnp inc and and xor jmp xchg mulb dec inc mov jg bswap repnz cmp sbb xchg loop and jg push add icebp fcmovnbe pop popa dec jg (bad) cs cltd inc xchg je lds es out ljmp icebp jg ss scas mov inc fstpt fwait cltd mov addr16 add pop rorl adc gs cmc jae and fld imul leave cmp sub (bad) outsb (bad) xchg jg stos sub cmc mov jo jmp leave push dec ja imul daa mov push lods loopne xchg mov fiadd (bad) lret and clc xor mov iret jp ret inc imul sbb int mov and jg orl push add les lret (bad) mov xor clc xchg mov inc inc xor mov out in cltd mov xchg mov push dec daa inc push sbb cmc test (bad) cwtl or lcall loope int3 and insl inc loopne add cmp cli jo mov mov push test push mov pop outsl sub mov dec cmc stos ret mov lcall sarl mov push loopne (bad) push jg je adc ljmp push imul mov jg mov lret insl scas jg clc add jg dec les jg das or rorb jg mov or jmp jno inc add jg cld (bad) mov and testb mov sbb ds jg (bad) scas sbb mov sarl test adc js jg mov bound cli jbe stos flds outsl xlat or icebp mov pop rol rcl or dec mov dec cmp dec xor jg mov das int3 cmp mov push inc in mov dec pop lret test movsb mov mov sti jg sbb (bad) dec test jg ljmp (bad) js add cmpsb inc inc jg (bad) sub cwtl cltd dec popf sti aaa stc push adc gs push or inc pop jno xlat push fs inc jae (bad) (bad) jg repz push mov jecxz push test mov jl loopne adc xor jne insl jg mov (bad) hlt jecxz sbb mov xor jno addr16 aam mov mov sub int mov or sbb out out cmp pop dec out jmp jne dec outsb inc inc adc sub pop (bad) iret pop cli mov ja pop or cmp gs ss dec jg fwait push (bad) adc mov mov mov jg xchg adc loop icebp jg mov mov push or pop mov xor bound cld dec dec add xor pop insb pop ret cmpsb test and repz jg lods in xor jns iret inc add ret mov test pop sahf jg push jp fcoms cmp mov les into pop adc (bad) jge jo sbb test cmpsl ja push adc lret push lret psubsb sbb cld dec cmp pop mov mov leave dec sbb out cmpsl clc pusha push jg nop and add or (bad) adc out jg fstps sub cli lea cmp stos iret popa adc pop (bad) pop cmp cmc mov pop fistpl pop les mov inc dec fimull jo push cmp dec jg scas mov cmp call out ret adc or cmp sbb push movsl jg into sub mov imul dec icebp gs fstps xor jnp dec jo aad inc icebp test cld dec lock push lods pop fwait mov outsl (bad) sbb jg test fucomi mov and inc pop icebp inc sbb push mov leave lret jg pop daa jnp or jg push in popl call insl (bad) inc dec jg push push lret add aaa sbb push xchg in aas loope dec and xchg inc repz jg ret sbb and adc mov pop sar xchg dec mov addl jg sahf mov cld jg popa clc inc cmp or push mov loop add sbb call jg (bad) and in push push xor dec shl push pop int dec jg inc sti mov lods bound mov lea pop jg arpl jg add ffree fnop jg fs cs and mov mov bound in ret cs sub cmp dec aad inc mov test fbld or rorb jg sbb rcll inc mov xor aaa sub movsl jg cwtl pop fdivrs cmpsb adc in jg inc dec add jg sbb rorb lods inc mov insl mov jg inc push rclb les (bad) mov mov (bad) or fstpl pop ret mov mov mov imul call sub sti pop jg inc xlat mov jae sbb adc ljmp mov sarl inc pop bound out scas inc dec jg ss scas lea test lcall and pushf pop aam adc or scas daa lea lcall lods lret mov dec dec pop push fldenv jg sti fdivl leave (bad) add jg push dec inc nop ja sbb mov sbb aas imul cmp dec shr stos jg pop shrl jg (bad) imul mov pop xchg mov imul js and mov inc jo fdivs sub sbb enter and (bad) sbb dec or cmp xor movsl xor aas xor shrl sbb int3 pushf addr16 push push jae xlat inc pop fadd ret rolb ret jnp inc or xchg cmp jmp lret loop xchg jg mov cmp sub lods adc lea fistpl pop das scas or and aaa int dec ds push (bad) call dec dec fwait jg es shl jg xchg scas (bad) pop aam xchg mov jg xlat das lds pop push mov out xchg leave inc stos jg mov push das mov or mov popa insb scas in mov jg jnp dec xchg std adc mov mov pop out sti push inc insl jp mov ljmp test lret jg or cld adc lds dec cmp in xor mov inc sbbb push cmp push sub cltd cmp lds adc push xchg mov pop or mov mov push arpl sbb xchg pop bound loopne (bad) dec push out sub cmp mov jge fidivrl scas sbb dec sbb mov fs jg mov notb call popa adc adc loop stc mov sub and lret xchg imul xchg xchg pop cltd xor int mulb cmp pop sbb mov movsb push mov (bad) movsl ret pop cmpl scas adc sub je push pop xchg stos aad add or lods in (bad) idivl dec popa (bad) jo movsb push push jg mov movsl aas scas cmp sub add push idivb je sti sbb lock gs mov xchg das sub jae push aas sahf les mov dec push jg lahf in fcmovbe xor pop inc (bad) cmp mov mov jo push sub js fwait sbb adc faddp lock bsr stos jb pop jae xor rcrb scas adc xchg sbb imul jg push adc push push jg mov loop ret cmp mov out jno pop cli cmpsl jge mov into jg xchg adc inc push movsb mov sahf jno jl,pt nop mov or cmp fdivrs push push inc xor cmpsl mov popf stc pusha fcompl roll out int3 das sarl cmc popa mov xor jg dec cmpb jns mov dec dec cld jg cmp inc lahf adc gs lcall jle mov and insb stc mov aaa aas sbb fsubs or lcall movsl jg pop sar dec repnz nop jg or ficoml pop mov jg jns jno dec dec popa jg fwait cmpl jg scas lret or insb pop sub pop jecxz out nop in addr16 je sub cmc add or lret inc lret mov int3 icebp jo sub sub mov loope jg jbe fimul dec push cmp jg push mov scas or jg das dec ret (bad) pop mov sbb sti ficom loope jg jl inc les mov jbe test aam xor inc outsl in xchg scas cmp shrd fs mov in mov dec pushf roll scas lds mov adc jle jg and pop rclb jg cld sub scas in jg sbbl sarb jmp adc rcrb pop adc xor aas imul nop outsl mov jg xor mov jg pusha stos or cltd scas jg insl nop aaa fimul or jg test jg in cmpsb out push imul dec inc or cs aad lret aam xlat or sub loopne (bad) cmpsl in inc clc fidivrl mov mov ret pop cmc in and pusha or xchg aas sbb (bad) pop push hlt pop cmp xor mov stos ds mov or pop jb pop js enter inc sub fwait jg or std push xchg imul fdivrl fcoms mov fwait jg divl sbb push mov test je stos push dec cs cwtl jg jle sub and jg or arpl push and sti pop dec out inc push or jne add jecxz mov jg (bad) or sub push lret and adc mov pop jg idivb sbb data16 shll xchg test aam inc xor push (bad) mov xchg sarb iret add jp js inc cmp push punpcklbw not dec bound dec jge mov dec dec scas (bad) and arpl jbe inc out push test and (bad) mov add rorb out aas dec add pop ret dec pop idivl lret push or nop inc pop jg loopne and push addr16 jmp or aas jg push test mov pop fdivl pop rolb loopne mov sbb mov adc jg xchg lret xor xchg call cmp dec add xchg fisttp fcompl xor or push out pop mov jg stos dec sahf jbe in shll cmpsb jg pop push movsl out les mov fisub ja lock cmp les xchg pushf std and jg adc sub aas popa in pop insb lods mov mov or mov push mov and jg cmp fmull int3 leave scas std mov or (bad) cmpsb xchg sub jg shl jle and push addl mov out jg pop jmp loope jg sub xor mov mov das xor jg fnstcw pusha jmp adc stos scas rorb std mov pop cwtl daa jno movsl jmp decb and push pop mov stos jg sarl dec aas imulb mov lods js gs jg mov dec andl mov scas hlt jg and mov movsl mov xchg jle xorb pop sbb dec pop out in aaa dec inc or js repz jg dec ret shr pushf cli mov orl ret cmp jecxz inc out test pop fstpt sub in jge xchg loope out fistp int3 jg rol cmp (bad) push jl outsb mov (bad) dec cmp inc test inc ss (bad) testl enter scas jg (bad) jns pusha loopne pop aas pop out mov stc movsl icebp inc (bad) bound sbb xchg jnp inc in and jg mov lock hlt jecxz loope jg add dec xchg jg dec pop (bad) jne and (bad) or cmp push push jno js mov loope xor jg adc pop jg aam clc mov xor jg stos sbb pop xor jl aam cs jg push leave out mov and xchg sub xor pop mov ja sbb idiv adc pushf dec push sub xor (bad) or cmp insl lods test and or mov cmc jg push add lds jo pop je push js ds rcrl xchg jo jg xchg mov (bad) mov (bad) jecxz push sbb inc push pushf lock xchg jg mov scas push sbb adc sub lods inc sub scas addl pop dec imul jg push lea outsb add add sbb push bnd int3 pop lods mov cmp or mov jp ja dec stc xchg add cmpsl pop dec fdivrs jg fs adc movsl xor mov popf inc (bad) cmp and dec (bad) mov inc jg hlt push push jg push cli (bad) icebp xlat lods lahf mov push popa dec dec cmpsb inc loope bound jb jnp xchg dec xchg das jg stos adc or adc cld ret lret jg test sarl loopne fisub sub jge int aaa mov es in jg fwait push adc push mov jg popf add pop in bnd (bad) arpl adc dec (bad) int adc sub ja push mov sbb movq out les cmc add jg jmp loopne and lcall fdivl pop inc (bad) xor fwait mov outsl sbb mov inc pop push xor aam ja lds test dec sub xchg imul (bad) jbe sahf xchg jo add sub xlat outsl jne int3 mov cmp jg push clc jge aaa mov mov stc add jle adc imul aas cli jg in inc cmp mov ja out popa inc xlat jg movsl rcr cmp xchg aaa jg sub out mov and mov stc bound jg div lret xchg cltd push jg sbb inc pop pop jbe jg xchg stos lods sub xor cwtl outsb xor cmp xchg fistpll call ljmp dec xchg push cli jmp fisubrl mov mov inc lds dec mov jg mov repnz mov fcos inc jp dec jg mov cwtl mov out pop jp imul or jg cmc clc lds inc int3 jl adc (bad) mov shr outsl mov mov pop add push es repz pop cmp adc ss xor and pop mov mov push pop jecxz pop push jg enter mov dec sbb xchg add push push jg fimul arpl mov jg stos push push sti test ret or jne inc inc cld mov out loopew fwait rorb jg leave or mov push push cmc xchg jg iret fisubr add aas sub in stc div inc jb js cmc in in xor nop inc and imul movsb sahf fdiv push jg loope sbb daa xlat repz xor jg pusha pop fldl inc test pop fsts outsl mov cmp or xchg pop aam repz push aas jmp ljmp lret loope je std cltd jg stc mov insl inc jg lods and sarl sbb jg (bad) xchg icebp (bad) jno cltd pop jg bound cmp iret jg out and lock (bad) imulb cmpsb sbb jg out push push add sarb sub jb negl xor sbb lds jae and stos inc pop mov pop inc jg fs jb xchg jno add ja mov out xor or lea cs nop sub jecxz aas push push pusha pop sbb dec test xchg pop outsl sbb sahf pop (bad) xchg jno faddp jg ljmp ret xchg push (bad) xor xchg fldenv cmpsb mov and xor movsb mov out lods scas nop lcall push dec jbe cmp ret loopne gs mov sbb pop inc jns xor push icebp mov test scas xchg pop mov pop pop add jge jae inc sub mov jno dec ss jg lcall sti popa pusha cwtl scas push f2xm1 pop jne addr16 (bad) cmpsb mov push jg into aad mov mov jg repnz sarb adc push in mov rorl inc or sub dec (bad) adc test and inc jecxz mov repz sub lret pop lahf leave std inc add arpl mov pop cmp addr16 sub loop sti roll lods cltd dec mov mov jg push mov push mov aas jp sarb insb (bad) (bad) std pop xchg mov inc jg not mov jg push in addr16 cmp or jle and jg mov das (bad) dec cld jecxz clc push jb stc xchg inc mov (bad) push push dec call sbb xor pop push and jno jg repz dec sti aaa mov add cmpsb lahf ja add cli xchg jg sbb inc adc lret leave int3 and hlt inc pushf cmp movsb shrl pop mov rcr push leave jb fnstenv aam jno loop inc ds jle imul inc xchg sarb inc xorl mov dec fsubrs push sub add mov jg (bad) gs insl xchg mov sti loop mov jg loope inc ret jg pop outsl lods (bad) aaa pop insb jg xor mov pop enter dec jg sti jnp mov pop dec jg push mov xchg jmp test mov mov aas repnz das addr16 cs pop sub mov rorl cmp test out xchg daa icebp (bad) jg sub jns ja xchg jg insl rcl mov rorb ret dec fwait cli push mov nop push mov notb (bad) pop mov sub sbb test inc cmpsb push daa cmp push pop scas int3 xor (bad) jmp cmc mov aad shll xchg inc pop jg loope mov dec xchg stc cwtl stos xchg push sbb jbe mov push loope add out jb mov pop pop data16 or pop sbb jbe mov push (bad) int shrl inc mov pop jg or sub jg stc lods pop mov or jg imul jg mov negb sbb jecxz lods cwtl lret push jb jg (bad) (bad) push (bad) and jg insb fcom xchg jmp xchg testl push pop imul sub jg mov adc or xorl cli xlat jns jg mov lock lahf jb jg lea imul jg stos cmp or xor leave clts jg lret inc cmp jne cmp sahf ja mov push mov mov mov and jg loope clc (bad) (bad) js mov cmp sbb jb jle sbb daa lret pop seto jg jno xchg add jg push ret insb jecxz dec stc jg mov adc jg std jmp pop or (bad) lods mov dec pop jb lret repnz mov inc jp shrl inc and pop push cmpsl sbbl jl in inc sbb xchg push std lods add mov pop inc sub jg in aaa push xor into pop daa popf ss adc mov (bad) fidivrl xchg or xlat loopne cli cmp or addr16 jg out xchg dec icebp loopne sub pop lds call adc ds (bad) adc mov cmp xor decb ja iret or in jg sub mov and and insb repz dec arpl lahf in ss outsl (bad) mov clc sub test and orb imul jg mov pop in jg dec ds adc js jle insb jl xchg pop inc push pop es adc xor fsubr xor fs jg xlat aas sub ja inc and jg (bad) adc mov or dec push fwait in div inc jg enter pushf fldcw inc in int testb cmp mov shl sahf push mov mov rol pop je mov inc cli cmpsb xchg inc mov lahf sub ret cvtps2pd jg mov and aas (bad) pop dec lret fidivr cltd mov adc arpl lock and add hlt pop mov ss or inc outsl inc pop and mov push jo mov fsubrs iret mov stc or ret pop outsl add adc cltd out and pop add sbb sbb jg sbb mov pop fisttp lock ss popa xchg inc push jg push out addl dec mov addr16 xor gs add pushf inc inc aas insl adc outsl xchg pop fs jo jns cmp mov or imul loop pop cld xor sti dec cli mov jp loop aam out xor cmp lock mov jns push addl jmp jecxz fwait lods clc and xchg (bad) pop or les jecxz adc sub sub out aas mov xor sub mov ljmp push jg inc mov jl out or scas fs jg ss and jbe loope add inc aam pop mov pop jg xor and mov aad in xchg mov mov or inc bnd jge popl mov mov dec ljmp cmc les push test push mov ds adc sub inc out inc out adc and dec xor imul jg sti pop dec popf cli (bad) mov ret lret push adc shlb jecxz lods sub and ja cli in (bad) and enter and inc jb jl push jg aaa cwtl (bad) inc testl enter mov movsb mov inc xor int adc push roll xchg jp inc pusha jg movsl nop and jg pop lret or nop mov mov dec xchg ds ret jne fild push cltd fiaddl imul jg cmp and cmp bndldx loopne push dec cwtl mov imul jg cltd int pusha cmp push sti into pop cmp mov jb jo and outsb jp orl ja jmp es pop dec and inc iret jg fldcw or pop cli les scas jnp aas xor ja push xchg jmp loop jbe das iret jns jne lds sub sbb xchg dec jg insl popf inc mov mov mov aas fisubl cmpsb or adc xchg aam push dec pop je inc add jle xor xlat cs stc cmp sbb dec fsubrp pop sbb jg push (bad) in lods arpl jg into dec bound mov sbb adc jae fnstcw xor icebp test mov sub les mov cltd mov int push cmc sub cmpl mov mov mov add test imul repnz mov fidivl dec out ret push jg or sub test lcall push rcrb (bad) scas test xor jbe push cmp bound inc lret jg cmpsb (bad) and mov sbb sbb jnp add inc int ja dec mov (bad) imull enter stc dec inc pop jg out mov mov inc enter bound pop or jg stc cmp rolb mov out outsb jg bound mov jns push xchg dec cmpsl add jle ffree jg xchg xchg scas dec jb or jg (bad) lock in mov (bad) ja mov mov jle jae xchg daa stos jb push jg mov cmpsb inc jl mov sbb rorl sti arpl mov cli and repz adc mov (bad) jbe add or es std pop pusha jge jg add repnz nop mov push lret lcall mov xor hlt xor jmp in fidiv xchg jg dec adc fnstsw cwtl adc cmc jg xchg push mov jg and pushf sbb jl dec mov cmp popa jno (bad) xchg mov xor bound test mov xchg dec mov jmp rcrl cmp sbb (bad) fildl insl jg (bad) push add andl xlat nop scas daa mov ret push jg loopne scas xor xor dec dec repz adc into (bad) xchg mov push push jg mov jae cmp mov pop imul stos (bad) sub mov mov lds aam push call dec jg sbb inc mov fmul pop xor mov ret push imul push rclb add aas dec push sbb inc out push or mov pop push enter sub les fld movsb js jg xor jno jg int3 repz aaa dec inc idivb test mov xchg mov jg std in out lods in adc aas jg xor push dec imul out or adc cmp movsb add lret xor loope jle sub pop jnp and mov xor jecxz dec mov lods adc sti stc sarb pop and decb add fcomps jg lock clc aaa mov xor jg mov jp xor maxps mov out or mov out mov sbbl and lods push push mov ds or dec jecxz push sbb mov dec rcrb out mov inc (bad) jecxz push xchg (bad) xor push fwait xchg mov xlat in xchg movsb mov je fcomps cmp test scas add nop push inc out jg xor dec stos (bad) jo addr16 jecxz mov jbe (bad) jnp adc enter outsl arpl xor xchg aas scas dec or faddl and out jg xor leave lahf dec jg adc xchg inc or (bad) mov scas fbstp jno loopne inc out add pop xchg dec and sbb ja adc stc inc jg enter dec sbb icebp adc mov jg ljmp lcall test mov subl fdivr jg scas add xor cwtl and enter xchg or sarb jg out push loope mov inc (bad) ds iret mov cmp inc push jle outsl xor dec mov sbb add sbb loope js scas xor out outsl fisub js xchg outsl sub in jg jne pop cwtl mov nop push stos add test cmpps shrl cs mov jae dec ret scas mov xchg or xchg je push push sub popf push les jo aaa inc imull jl dec mov mov xchg sub imul pmulhuw mov shrl mov dec shlb in xor cwtl mov fnstcw pushf xchg lods scas clc and cmpsl lods sbb mov jg mov fstpt sbb cmp enter or mov push int3 mov adc aam repnz imul pop xor jg cmc mov dec inc jns dec je push dec sbb inc lahf cltd mov mov pop cmpsb adc pusha imull fisttpll gs mov sub xor pushl add notb jg sbb and mov inc cwtl sub jecxz mov push cmpl add sub lock sar jo jg in les jg mov and pop lds cmpsl scas repnz sub faddl insl or int3 les pop jg adc (bad) lahf mov cltd or jo jae pop mov je dec test or call pop out jg aad jno add mov fcoml sub (bad) jnp and in movsb outsl mov and xchg call adc mov cmpl in add (bad) mov pushf sbb mov jg pop or and jecxz xor mov xlat pop mov adc enter daa bound clc jg in xor jnp mov fucomp je fstps jo jg jmp (bad) fstpt int3 inc movsl ljmp push clc popf bound fcomp mov lock jmp das jg adc sub mov mov adc push or mov roll cltd jg adc into jg mov out jg das xchg ret mov push wbinvd mov adc out mov dec or jae lods ds mov mov and es xchg scas ds mov pop ret dec sbb mov int or mov stc inc pusha cmp push enter (bad) xor cmpsb ret mov in or iret jg dec mov inc dec add mov pop arpl aam lods jbe lock aad jg pop or jg inc fimull lret test fcoml push ficom jg and and mov mov cmc outsl popf call movsb test dec sub add jno in call push inc jg addl mov jg or (bad) mov in sarl jg jle mov jae aam ret mov pop inc push jg mov mov sub pop xchg clc jg or xchg jg and mov sti jae sub shrl pop sbb inc ja icebp cmp adc int add mov sti or push inc mov shrb lret lcall jg inc dec sub xchg arpl xchg fcomps push sub pop shlb (bad) mov xor mov insl es pop jg in sub add in dec mov xor iret insb out sub add jg insl pop icebp or xor arpl jg (bad) push fsub into jg and ds push es cmp jle das cmp jg shrb xor (bad) mov mov add stc mov lret adc sbb push out or mov mov mov mov push jg mov inc imul push mov lret push stc pushf mov xor mov cmc jae ficom add (bad) repnz (bad) loope test cmpb enter cmp push jmp outsl insl adc mov add test pop or iret mov adc (bad) xor lret xor pop in mov outsl sbb mov pop test push fdivrs push lahf push test movsb sbb lret mov popf mov dec jl jg xor push aad adc push dec xor icebp or stos jl xchg rolb jg mov loop pop cmc aas adc mov lret mov lret sub insw lock mull and or pop int3 mov cmpl mov xlat jne test mov sahf jg mov icebp jg jno,pt add fnstsw int xor lahf (bad) fs adc push and pushf adc mov inc jg mov leave aaa add ds push hlt or dec cmpsb imul mov inc outsb (bad) dec jg std jle mov mov (bad) lods pusha push add xchg xchg int es sub mov (bad) movsb xchg and iret out roll jg loop or jg aam sbb push sub div lock fildl adc pop test bnd outsl sub adc jle nop push scas push jg inc arpl xchg inc jg pop or gs cwtl jle int shrb les sbbl mov inc mov dec sbb leave aas fdivs movsl repz jo jg pop ja or or jo push pop sub clc jp pop jg dec inc mov jg xor add hlt push mov mov insl jg frstor out rolb push cmp in aas test (bad) xchg dec cs jg cmpl ljmp xor lahf jg dec pop and ret pop sti add mov adcb mov xchg scas ror imul jecxz pop adc mov lods mov mov cmp (bad) (bad) or push lods xor divb inc and push or jg jle xchg test shll xor cmp push jg mov mov jg adc xor cmp mov insl aam out cld mov dec rcrb add pushf jg xchg push sahf jg and pop mov nop dec sub jg mov lods insb jg es in push popa jg addl jg inc int3 mov or sub aas xor inc aaa mov push pop bound sti mov in or repz inc mov fs jg jl mul sbb push mov jo cltd out dec xor in js push push clc cli jg mov lea pop jle add aas sarb sar fs icebp cmp xchg nop fistl dec cli (bad) dec sbb jg inc hlt or push xchg repz mov and bound jg in inc imul adc inc in aad stc cmp push sbb mov cmp inc aaa aas in mov adc movsb dec mov notb pop in fnstenv test dec stos mov inc lret mov or sarl push jp add xor pop xchg adc mov add fmull mov push jg xchg push jg cmp mov jg pop push jnp mov jg loop and mov push xlat sar scas jo jg add sbb xchg out pop cmp clc xchg stos jecxz cld repz or sbb cmp dec jns je pop int jle dec sahf jmp or cmp rorl mov jae inc jl (bad) sti pop (bad) cmpsb mov xchg inc jg in outsl jb add jg push pushf xchg incw ficoml dec cmpl pop jp aad test int3 inc dec out jle mov push sbb fcmovnb jg je mov in adc adc cmpsb sbb cmp sub mov mov xchg jg fwait jae mov cmp sub hlt ret scas repnz ljmp cmp call jg push cltd jo xchg sub mov push or adc jl jbe add rcr xchg jg xchg mov lea inc or jg sub int aad fbld mov jg or mov add pop jns cmpl cld (bad) js adc pop jg push push aas out pushf lret add mov adc out jns rcl (bad) aaa mov std push pop icebp add mov adc mov aas daa push adc jg int fdivl insb add in divl cmp jg cmp mov jg rorl add xchg fsub adc adc push popf mov js nop mov sub stos test jg sbb cmp mov pusha sarl jge or push adc xlat xor repz cmp in mov sbb (bad) or mov pop lods das add int jg call lret imul sbb outsl scas mov or or mov lret xor adc inc (bad) jmp lds mov clc iret dec or daa sbb dec mov arpl sub and sub jnp sub sahf xor js mov lea inc leave cld fsubrl xchg (bad) jg sub popf test mov or jp push aaa out jg add into dec sub mov or sub mov push inc cmp fcmovnbe jg iret cmp push pop outsb fmulp or cli push insb pop push mov mov xchg bound sarl pushf js cld scas es movsl pop push (bad) jbe inc and fild cmc movsb dec test xor aad jg xchg xchg and aad sub pop adc mov cli adc sub sarb inc mov sarb jg pop xchg sbb sarl push jg dec in stos nop adc jg cmp (bad) in pop push movsb adc hlt (bad) jae mov or nop and scas xor int jns lock daa pop xchg push mov inc aas xchg dec ret test insl or pop xchg dec add jg lods outsl push inc dec mov adc fs sarb (bad) cmpsl dec pop or adc lods cmpb mov add je movsl imul sub addr16 dec push lahf cli xchg dec mov fimull ja sub inc (bad) aas pop mov out dec push in inc pop xor cmp jg mov das jg out repz dec sti loope jg xchg movsl xchg shll xchg aas outsl xchg not mov out and out dec mov lds jnp insb inc aas inc incb mov popf cltd (bad) add cltd sbb cmpl dec jae jg and jb jg cltd lea mov dec sub jg pop aas fnstsw stos adc ficoml in jg in add divl jg pop shrl dec sbb mov or movb or test mov push add jg cmc push dec adc ljmp outsb xchg cld pushf mov cltd dec mov (bad) stos pop mov add jmp adcb loopne push jg out inc sbb fnstsw ja,pn or inc adc pop enter bound jb out xor sub imul repz mov das lods scas mov lcall jb mov pop push xchg cmp fidivrl jge cmc sbb (bad) cli ss add mov xor jg dec (bad) xor int test ret cmc and mov or fiaddl ret inc jg lcall inc bnd addr16 cwtl jg fisubrl push out icebp push jg mov mov mov jae jns mov aas cmp cmp inc jnp xor mov adc mov jg push or inc jle or call sub mov bound or insl aas clc inc inc adc jbe ja jns sbb or dec fdivrl adc pop je cli jg jnp jns push or inc mov (bad) jg push inc cmp mov adc out (bad) idivb dec jns push sub and or and add push cltd pushf int3 pop test clc push sub aam aas enter lods imul inc dec inc mulb jg in (bad) xor cmpsl mov outsl mov or neg pop dec cmp mov mov pop jns out inc sahf dec out mov adc or jne sbbb inc fcompl pop adc xor cmp pop pop in cs jg and inc incb rclb push xchg or add (bad) into mov push push scas lds data16 (bad) loop fnstcw mov push jmp lods lret (bad) stos mov jp push popa jmp outsl cld das dec adc mov fidiv sbb and arpl dec jg cmp sahf mov sbb stc mov jg pushf loop sbb mov dec cmp cmp pushw push jo pop sahf xor push rorb mov pusha stos jg fwait cmp daa movsl outsb mov push inc pop lea call mov popa nop jg and cmpb dec mov adc jg int pop lret imul lock and inc outsl sub ja sar mov das pusha mov jae adc ds cmp sub shl stc sub mov addl (bad) push mov bound imul jnp stos leave mov push cmc pop test cmp fdiv test push jg lret pop mov push jno and (bad) fsubr push fs jg nop mov pop shl mov push ja dec jns sub int3 inc movsb aas cmpsl jge lods (bad) rorb lds arpl dec xchg adc jg scas cmp jg push adc pusha mov fistpll scas mov push jae mov jmp leave add xor or push jg cmpsb lahf mov shlb mov pop fbld mov inc enter cmpsb stc call jg jmp dec push or jno popf pushf jae push jg xor dec push jmp xchg cld dec jg sub jg xchg jl add or sti cli mov dec stc jg (bad) loopne xchg and dec pop test jg dec mov mov jg pop mov fistpll nop lret fisub aas rcrb pop fisubl and andl jg dec cmp jnp xor mov fldenv jg jecxz,pt icebp (bad) fisttpl loop inc inc jge cwtl sti sub aas mov dec stos dec jg mov mov mov cmp (bad) mov mov jle jg mov pop stos push cld cmp aam jg push (bad) add mov pop sbb dec jge jnp call cmpsl popa jb mov repnz mov stos dec cmc dec jo sti fs sarl cmpsl ljmp call nop adc aaa mov jo jno out xor ljmp jg cmc cmp lea jp sbb push pusha insb push cwtl jae sti je inc icebp pop push pop add xchg jg jmp push in xor out jecxz mov nop movsl js mov push or enter inc and sahf das sbb mov addr16 xchg xor push lods inc movsb jg mov (bad) lods inc inc aas sbb clc insl out loop ficomp cwtl out jg xchg xor inc (bad) imull mov loop ret aas xchg xor loope push rcrl jg (bad) sub fdivr scas jnp add push sbb dec popf sbb ret inc xor negl jp (bad) repnz outsl push push xchg sbb loopne jg subl je bound out outsl imul mov lods or subl and lcall jg mov and jno rol ret sub jg xor xchg dec cmpsl ds sarb dec xchg in xor jg sub je loopne jg mov cmp xchg jne mov xchg inc stos pop xor ljmp insl lcall push in jg add aaa out xchg xchg jg outsl inc and xor pop jae xchg or inc loope add xor stos jg cmc sbb jg aam cmp xchg stc sub scas jg xor adc jg jnp mov in popa jg mov cltd int3 pop or xchg in outsl iret pop pop cmp rorb in pop jbe (bad) jge leave sahf aas sbb mov daa cmp push push arpl mov mov in fs lea je arpl mov cmp shld mov jo cmp or inc inc stc jno or sbb add cmp and out sti sarl (bad) mov stos jg pop popa sub mov insb outsl jg andl and dec sbb sahf jg inc faddl mov push aas js adc (bad) jg aas push stos jo jbe mov pushf out inc xchg cmp jg std add aas cmp sub scas sub dec sbb jg iret data16 xchg out cmp aaa fwait pop jg rcl scas aad adc jg jle pop movsl mov and add ss cmpsb mov lret sbb ljmp inc out mov xlat in aam or cmp xor lods jnp shrl xchg jg out test mov mov add lret fidivr ljmp jg mov or rol in jg insb inc scas xor jmp mov pminsw mov (bad) in push fadds jg mov adc lock jbe push ja addl test push insl sbb test notl sbbl push mov popf sti sbb adc and rol mov jg jo pusha push pushl bnd sahf mov mov mov test jae test es test cmp lock cmp adc fwait mov fidivrl popa and incl jp addb jae ficompl pop and jl lds mov loop and and xor out push pop push rorb jg lock lahf outsl sbb jg adc sub adc cli pop add mov jecxz jg popa inc adc add jns (bad) pusha insl rolb pop jo sub pop jno sbb mov push sbb jg mov aam insl mov aas inc mov mov addr16 test jmp inc mov jg hlt sahf push js out pop je jns mov push movsb test stos cmpsb dec arpl dec mov and inc sbb pusha jg pop enter dec repnz cmpsb (bad) mov dec mov jg pop scas ds out inc bound xor jg imul mov (bad) insl adc pop mov incb dec jg ljmp jg inc iret dec ja pusha (bad) jg dec stc and sub jg mov mov jg xchg mov andb icebp mov mov xchg jg sbb push and push jbe lea out pop adc push ret adc outsb lret icebp jg (bad) mov or cmpsl sbb jo add mov dec xor xor (bad) das cmc cmpsl scas jnp mov lock fs jg (bad) push dec cmp pop stos or and adc cli mov orl and mov lcall mov test imul test jbe jg pop xor adc out push cld rolb aas jb pop dec (bad) or rcrb push jmp sbb sbb sbb cs int3 aam mov es test adc dec insb cmp mov jg or mov mov les pop inc dec inc sbb mov push outsl jno out mov iret arpl mov inc sub jg xchg pop cwtl imul fcompl outsb sub lea lret rclb cmpsb sub addr16 mov jg fmull pop out sub xlat jg ljmp pushf or sbb xchg in mov imul dec cmc pop sub jg xor jle jle cmp pop mov jecxz cmp imul pusha addr16 and jmp adc dec push pop mov mov jg sub jb sbb in or pop sbb lahf mov fucomi out outsl jnp adc dec (bad) mov (bad) sub imul sbb lods sar lahf lret pop sbb aaa jae jg xchg daa idiv sub popf jg mov mov xchg jge jg sub ds mov stos inc pop fcoms pop mov cmp loope lock sti jno pop aas xchg movsl out jcxz cmp jg insl mov sbb pop nop sub mov sti ret inc cs mov or dec das into jg xlat fs pop xchg (bad) sti mov fistl and jg (bad) mov inc jg push lret lods hlt add mov fisttpll pop pop xchg dec jg (bad) mov loope pop out jge call pop jg add outsl repz push jg xor cld mov int add jne rcll or loop inc inc and adc scas cmpb inc cmp xor xchg lock stos pop enter pop ret sbb mov sti out sbb addr16 jg fstps and jg rorl dec push leave ret xor sbb (bad) je jg add test jnp push and jmp jl sub outsl mov pop arpl inc jns cmp aaa xchg mov dec scas int shl fnstsw push orl fcmovnb sub outsl repz inc push pop scas cmp or jg xchg out push push mov jg dec sti mov into add cmp or push xchg in shll xor or mov movsb pop jg push fcoms fwait imul das lods jg call jg (bad) push test divb popa jg popl fdivrl inc mov push fisubr or shrl and jmp or aas loop jae sub (bad) jbe shrb or sbb icebp stc push lods xor fldl arpl xor jb sub mov je aaa aam jno cmc push mov add jnp (bad) mov cmp jg dec sub cmc ss pop jg (bad) icebp jno add xor xor fiadd mov and and sarb xchg pop inc mov cmp or jg sarb push and daa fwait sub jg push mov xchg orl mov in lret outsl pushf cltd arpl add imul and int push icebp push jl jb jg sbb std pop (bad) outsb jg cmc pop in mov inc jg adc add jo stos pop pop mov les cmp push mov xchg push mov (bad) jg xchg dec pop test (bad) int sahf xchg outsl push (bad) mov pop addr16 idivb imul push mov jne pop mov inc (bad) mov and movsw xor dec mov std xchg jg inc mov add mov jg (bad) mov sar mov enter xchg or (bad) (bad) icebp stc jg outsb sub test dec in jg (bad) jmp jg outsb mov sti dec ret mov push movsb lahf inc lods stc jg or jecxz aam jg imull fistpll and (bad) outsl lahf pop sbb repz scas cmpsb shrb jle (bad) in sub add (bad) xchg cltd xchg fimul xchg cmp pop fisttpl jbe aas ret fs nop sarl inc inc xchg jg mov call jg ss (bad) mov mov push mov mov std orl fwait aas gs cmp xchg and in push jg ds nop jns xor jg dec popf lret sar add mov sbb lcall adc xchg sbb cmpsl pushf jmp push xorl dec hlt jle imul push ret pop xor (bad) pop lcall mov cmp mov mov jecxz push lcall int out aas cmp repnz out insb gs jge pop push aam bound xchg push add jg loopne rolb adc aas lods ret (bad) xchg decb sbb data16 sbb pop jg pop pop orl or fs cmpsb shll out adc insb out rcrb dec data16 inc xchg jg xlat sub jg and lea (bad) xchg sahf aas frstor dec int xor lock mov icebp cmpsb inc loopne hlt fwait repz adc in cmp fs and add cmp xorl mov call es mov and test lock sub mov lcall and (bad) out jecxz and jg xchg cmp leave test insl loope jg lock adc dec sbb inc int aad arpl call out push inc aas test dec int3 pop outsb jp ds mov (bad) (bad) pop cli dec cld xchg jnp repnz push int jg sbb jbe emms dec hlt ret push out inc sub loope jg bound test or xchg cltd in scas stos inc jg jae mov int xchg jg fldl jecxz mov out or inc fistp push sbb pop cltd jb iret jg and aas addr16 dec dec idivb jg pop je lea into mov mov vmovdqu sbb aas lods push repz mov imul into mov idivb pusha clc or mov lock mov lods or jg lods jge movsb hlt jno jg cli std pop sub test lods and sarb stos out loopne sarl cld dec out cltd inc outsl das fiaddl push mov cmovae mov imul ss inc hlt push bound cltd loope movsb jle inc jg add and cmp cmp movsl sbb inc add sub scas aas cs (bad) jbe cmp in jp mov push mov or sub repnz out dec je pop bound insl jg ret aaa jae aas jg dec pusha pop pop js lea add xor dec inc or subl xchg std jecxz push inc and jo sbb js ljmp (bad) mov fdivrs clc mov les cli cltd mov push jns mov sub fsub stc jg enter adc add xchg jmp repnz jg jecxz rorl push push cld (bad) int3 popa gs imul dec popf jbe mov jb pop inc pop lds movq add aas mov in push pushf inc mov jg sbb cwtl add (bad) out cltd mov dec ret dec hlt scas cs inc pushf jp sarb mov xor mov and daa jg dec mov jg rorb mov repnz jg arpl or scas std ret test (bad) sub ret jg or out adc bound sbbl into test jg lea xchg cmp nop jg into insl push popf cmp repz mov xor or cmp xchg ret mov (bad) js xor sahf lds cmpsb gs movsb jge arpl cwtl cli xchg jle mov dec push push mov adc inc test dec out in mov lock test icebp mov test pop jg mov mov cmpsb cmp jg lea fstps in inc ljmp jo pushf js sbbb pusha icebp movsl adc jg mov lock xchg mov jg inc ds (bad) jo call iret xchg in pusha jg daa add adc test lahf mov mov pop inc fiaddl iret xor xor loop scas pop mov clc stc jg repnz mov rolb mov cmp push push arpl lods sbb pop in mov push js cmpsl cmp mov sub xor lods jae stos cld and lds lret iret popf jg xchg cmp cmc jg daa xor ret es in jg mov iret in or push popf std xor (bad) sti dec flds mov jg mov fwait mov jmp pop mov xlat mov cmp outsl pop jle jg dec sub cli sbb and jl sti jecxz push lods adc ret xor adc dec xlat int pop pop cli xor (bad) ss add dec push mov insl js jg rcrb jg (bad) in cmc xor outsl bnd fnop inc test mov loope mov jnp stos mov lods jg scas (bad) loop scas pminub add adc fistpl dec pop mov mov jmp cmc mov push mov scas lds add jg loopne add cmp ret aam jg xchg jp adc add int mov inc loopne loope jg mov sbb fisttp cmpsb cs sub jge pop (bad) repz in mov jg ss xchg cs mov jg int3 adc cltd xchg rcrb and mov jbe nop dec push inc cmp adc xor insl bnd fldt jg out mov jg xchg test and lahf jg subl jg dec incl (bad) mov lcall inc pushf (bad) stc sti sbb xor faddl stos (bad) mov dec push les jg dec jbe add cld test sbb cs scas iret dec inc pop ds fbld pop add lea clc adc add out mov ja inc decb leave or js mov mov jno jnp or push xchg jo aas daa ss fnstsw push mov xor jg and iret pop xor jl xlat mov xor or rol adc insl pop int sbb sbb loop gs or aas es xchg movsl testl test jg ret iret mov inc jg cmp pusha mov mov jg sti shr and mov hlt movsb call aas add in mov jb popf mov adc fdivl and test jnp jne mov sub mov orb push sti sub fcmovnb mov jo sub int inc jge rorb popa aas push and cs test inc fwait sub lock pop ljmp call bound fdivs lcall or jge mov mov (bad) jg xor popf mov jb inc inc mov adc pop outsl mov aas mov cld fmull jg dec out mov pop jmp test jb push cmp inc fisubl mov mov sub stos mov inc inc jae stos roll mov cmpsl jnp movsl pop daa push aas push shrb pushf push in cmp xor ret dec sbb (bad) pop dec dec icebp xchg lods int3 hlt jg inc fisubr jmp out aam inc lock sti in mov out sub cltd jle (bad) or dec xchg mov fnsave xor inc movsl xchg ret add (bad) push outsb add jl mov pop in mov adc and scas xor xor iret outsl or pop orb (bad) (bad) daa dec les cmpsl inc js into jg sbb (bad) outsl orb sbb imul sbb adc jg lret fcom push loop inc cmc jg mov aaa cmpsl addr16 loope test mov xor push jg mov movsb xchg inc sbb xchg lods mov lea in mov pop pop xlat inc lcall cmp sbb jg les loope in dec inc and or stos mov lea cltd cmc mov pop and (bad) imul dec jg outsl leave rorb xchg inc arpl dec andl scas dec pop adc mov jg test push mov fsubr mov jg nop leave add add jle aas fdivrs (bad) dec push popa mov lods adc (bad) dec sbb xchg xor mov js fdivr jnp test daa mov cmp mov dec sarl js or mov dec mov test mov sub and push push pop std test mov inc push jns xchg jge mov leave lea movsl mov aad pop arpl lock jg andl aas popf pop stc (bad) es mov dec jbe stos cmp jnp xchg mov jg lret dec insb test adc fisubrl xor jecxz xor jg dec inc add dec inc (bad) rorl leave inc movq mov aas inc adc jne je in arpl jb push incb cmp pop push jns sbb in xor lahf mov or mov push (bad) fidiv adc push and sarl or mov xchg nop lock adc jae jg addl mov fs jg mov fstpt dec sub shrb jb cmpsb js incb xchg jns jecxz cwtl mov sub mov in mov push jo lods jg push outsl (bad) rclb js mov ja stc pop bound xor xor pop mov pop lret ja fnstenv js mov popf cmpb arpl lods xor (bad) js enter stc ljmp jp mov dec jnp sub jg mov fdivs inc dec scas idivb pop inc mov jbe or inc cmp or jg cmc leave hlt into inc jg cmp dec or jl jg lahf (bad) mov clc arpl jg mov pusha pop lcall insl mov (bad) jle fwait mov mov mov cmc lods jne pop or stos mov shlb and js jne pop dec xor mov lahf adc imul nop aas out sub dec mov add xchg add mov mov and xchg pop jg sub and jno xchg jmp aas lahf rol (bad) xchg (bad) arpl jg loopne fimul add adc insl ficompl mov repnz stos scas jg out pushf hlt sub jg mov (bad) jmp inc ljmp (bad) adc bound repz inc mov inc cmp push aaa dec xchg lcall repz mov xchg insl test pop test enter sti cli inc dec add sub or jg add jg arpl bound push bnd cld daa jns inc mov jg mov jbe jo ljmp frstor jae rcrb rcll out push in jp jl aam xor sub xor mov frstor aam jb bound outsl sar lock ret pop adc lret and jg imul jno arpl cld inc (bad) inc jb jg add push jg es jge inc sti mov xor inc (bad) scas popa pop jg clc mov sbb sbb lods jg sti pushl sub jg or inc cltd inc xor mov call jg jno hlt lods fdivrs jp cmpsl ss jg xlat or cmp ret xchg mov scas lahf push push sarb popf adc loopne pop jg xchg sub cmc jg,pn lret into add aas test loope fs xchg push mov mov aas mov ret jle dec sbb mov mov push scas or inc shrb lret ds leave pushf mov lcall adc inc pop sub push out es (bad) jbe inc dec mov icebp in and aaa ja mull nop fdivl int xchg cmp mov xchg outsl adc inc mov push jmp mov jg shr loop int3 (bad) mov fimul dec divb push mov cwtl (bad) sub inc cmp or outsb repnz mov pop jg gs dec pop sarb jg xchg adc lret inc xchg jg (bad) std cli enter jg and dec mov jle lods cltd ret jbe push mov adc xchg xchg es jmp sub pop sbb stos cli lcall in inc mov cmp ror sbb js rclb xchg push jg (bad) mov jmp loopne rcrl pop jle or sbb lods scas jg mov cmpsl call (bad) pop push mov ljmp hlt fistpll and jb (bad) sbb pusha aas clc inc movsl sub or xor cwtl add std insl dec inc or dec sbb dec xlat fmull xor popf pop fildl inc pop xor inc or xor inc ds out lds das mov mov fsub pop pop mov fidivr imul test xchg inc in jbe jg jecxz lock and pop rclb xchg test jo jg imul mov jle popa out mov add fcomp mov pop jg add inc jg mov xchg rclb push add fstl std out mov jg outsb adc add sbb add jg xor and jns dec aas loop jae sub outsl inc sbb jg xchg rorl push cmc mov repz add lahf (bad) arpl pop mov adc adc xchg in ss adc das test adc cmp ret cld or jno jg pop add sub jg push mov aad sub arpl xchg (bad) adc jb inc add push jp into jo jg ss mov jp dec fprem1 jg inc in inc lock (bad) movsl push mov sbbl adc and push loopne testl arpl pop jnp subb js push jg in or pushf mul ss jo movq nop aad and dec in sbb aaa jb jg lret mov decl jg push jecxz cwtl jb mov cmp mov enter inc mov lcall cmp out inc mov pop mov orl jg std (bad) mov fnop repnz bound rolb sarb notb and xchg inc hlt mov xchg jg adc cmp out addl mov decb das sub adc mov jg pushf pop lock js jg daa test (bad) out dec addr16 adc in mov jg push stos out sub jg add das mov mov sbb or xchg jle cmc inc and decl cmp or mov adc mov mov pop int3 aas sub js pop xchg into insb (bad) cld or xchg inc inc add scas jg push push inc xchg xchg sub rcrl leave inc inc pop movsl jg xor ficompl push (bad) adc cmp aas mov outsl dec jle push in mov push inc movsl aad xor sbb mov fistpll scas mov jg add mov xchg les mov int jl (bad) or jg mov add mov mov (bad) repz xor and pop js bound and push jno mov xor les aas fwait ja push push mov fisubr push int3 int mov jg ds xchg sub pop jge addr16 mov mov ret add push inc pusha sti jg dec adc inc xchg movsb aaa jg push jecxz (bad) and add pop es jl push mov (bad) (bad) dec push scas mov in mov pop inc (bad) arpl xchg pop inc sbb rcrl add sti mov ss lret repz sarl push imul das popa fdivrs int jmp cmc xchg inc fcmovbe cmpl aaa loope shlb mov fnsave push cmp std cmp add jno inc test jg loopne ljmp mov jg leave (bad) adc loope push jg pop icebp loop (bad) bsr mov xchg (bad) mov test dec popf pop mov (bad) into mov adc mov jo pop int3 mov mov sub das jnp rcrb aas jg push es adc jae push xchg or arpl lcall (bad) sbb enter or idivl dec ret sbb xor xlat jbe loop stos add insb (bad) xor jno and mov lea jg sub mov call enter cmp daa mov pop sbb push and jg mov pop xchg sbb inc aam out or jg sbb and (bad) loop sti pcmpgtw or dec (bad) cmpsb fwait jg cs mov jmp fldt outsl mov adcb mov jg fstp shrl inc rorb lret mov pop out repz dec lret (bad) dec mov aaa jae mov or jne cmp rorb jg pushf sbb add jg imul pop mov addr16 loope inc cmp sbb jg lock sub mov les dec adc jg pop sub mov mov (bad) push xlat cltd roll cmp gs pop fdivrs mov jge popa jle mov sbb push (bad) ret xor xchg test scas push jg mov mov push dec loop jne loopne arpl (bad) xchg jge rorb mov fs mov std jbe ds jg mov mov inc les push mov jg fwait movsl inc push pop (bad) mov loope ja xor data16 (bad) push les lods fwait and inc lea xor or xor enter cwtl jg push adc push (bad) js push in adc cmp cmp mov push pushf rorl cs inc lahf mov xor out push and inc in jg pop call mov sbb dec rolb jg popf les jmp push (bad) mov cmp dec loopne clc aas jno popa sbb mov outsl mov jp push inc dec imul aas dec mov mov sub sbb lods sbb jmp out cmp jg cli out jmp mov mov gs or mov xor loop jecxz sub hlt jmp inc adc fwait jle jg mov ret fiadd hlt add pop jg lahf (bad) gs out jbe push xchg mov push xor int mov mov sbb dec mov popa ret adc arpl or xlat dec jg jbe mov (bad) xor push jg shll xor mov cmpsl sahf mov add inc jle sti stos cwtl inc popa outsl mov lds mov std ret xchg rcll mov jne xor adc jg push cmp lock repnz scas mov dec sub mov xor or popf add or jle jg xchg sahf cmpsl loopne jg lea xchg jp jg popf call xchg mov xchg sahf jl cmp push adc inc xchg scas out jg and fs rcll pop inc inc cmc sti ss sbb push mov add push pop (bad) mov loopne out aaa movsl pusha imul pushf inc mov sti in (bad) ja push or xchg mov cmpsb jg add scas shrb daa mov xchg out jg jecxz divl test ret adc mov push jo or add dec adcl insl jo outsb je xor cmp loop inc mov es sti mov jg cs add jg (bad) cmc es or das ds rorl scas push jle sti xor mov mov push int mov mov adc (bad) jnp mov stos in aas and mov cmpsl ljmp inc mov jne dec sbb xlat adc ret (bad) pop outsl mov lret icebp mov ficomp mov pop in cld mov mov pop ljmp jg ljmp sub jnp repnz mov pop pop gs loopne leave mov iret fsubrl push jb jg sbb fisttpll xchg js mov mov inc inc test sarb das test (bad) push ret push jg subl jg aaa inc daa cmp ljmp dec aad push and nop add movsb sti xchg push and inc movsl (bad) iret lret addr16 outsl xchg pop and fildl lds xchg (bad) xchg inc test pop cltd mov (bad) sub aas xor add test stc jg in sub jg outsl dec in mov mov stc addr16 ret cwtl outsl icebp mov sti dec xchg jg and (bad) std jg lds xchg xor sub inc xchg mov jne inc fnstcw ds push idivl lock aas (bad) sbb pop sti jg add jns push push push lcall test cmp cmp pop lcall pop movsb ss imul xchg cmp lds pusha jg dec cmc add jg in mov adc mov repz inc jo xchg pop enter dec cmp pop fild jg cmc (bad) sub cs repz and push mov and jg das and les xor nop mov aam cmp inc ja movsb push sub jg mov scas dec mov lahf jg add pusha mov push pop or or push sub out mov stc test cli dec xor mov outsl sbb out mov fdivrs das xchg (bad) ljmp pop mov push addr16 lcall mov push mov or out outsl add mov rcll adc dec jg xor ret mov inc es add cmpsb fidivr sahf sar jnp adc fbstp pushf (bad) jg pop adc jno icebp (bad) cmpsb stos hlt add in cmp int3 sub scas jno ss jbe jg cmp lods rclb pop xchg or xchg or (bad) das pop jo push outsb jmp jbe pop xchg imul (bad) rol cmpsb outsb stos dec mov jg stos dec lds sar inc mov outsl ret mov adc inc rolb jg addr16 pop jne mov cs mov mov jp cmp xchg jg sub into mov lret inc ftst (bad) ja cmp sub js mov mov out jg sbb sbb jae dec jge cli add push (bad) push mov (bad) pop mov or xchg push inc lds mov mov dec and push sbb adc cltd mov pop outsl aad or jg pop or push bswap jg es nop (bad) cmp clc addr16 jg xor jge mov lock jb in inc jg sub mov or jge nop sub sarl mov scas dec pop ds js xchg idivb mov sub inc cwtl aam scas iret lods sahf ret aad or dec inc mov jg (bad) and pop icebp (bad) jg arpl jecxz sbb bound cmpb es insb cmpsl scas lahf push dec stos pop in mov xchg decb xor xor and xor jg cs divl or mov lock rol push mov push jo adc js stos fwait lods adc test and iret jnp add jg mov mov fstpt lahf inc mov xchg test stos jb mov cmp (bad) jg hlt repz or jg ss aam rorl pusha and cli fsubrs repnz mov xor dec adc mov jg scas (bad) mov dec scas push pop cmp mov cmp mov insl into daa pop mov lcall jo add icebp stc jns mov ret sbb push leave jl fstps mov arpl or push (bad) shrl pop jg lahf mov cmp fnsave fisub (bad) notl fmull (bad) jbe leave jg in jo pop xor mov mov sbb cmpsl cmpsb dec aas sbb lret fisubr pop mov xchg lds test js adc or mov push jg add jbe jg (bad) aaa stos repz pop cmpsl aas push pop negb rcl out mov sti cmp pushf jb mov in fbstp mov dec add xchg das (bad) mulb loope dec jg jge test mov mov inc sbb lock push xchg cli mov jg add pop pop jae jg xchg out mov jg mov cmovo lock jg call fld mov (bad) addr16 or mov pop inc (bad) jg jno mov test stos jg gs jnp lock jg out xor (bad) ja xor and xlat hlt xor (bad) jg jnp lret jns mov mov (bad) loope fs jg data16 or shrb dec in sti ret push xchg jp pop paddd out int3 push adc push sbb push cli mov out inc adc mov cmp out sbb shrl cmp arpl inc jns dec test dec push roll (bad) dec enter call jo aas push and cld insb loopne inc push push jg inc (bad) jecxz mov jg or inc jge sbb dec push mov xlat pop xor dec mov insb jge jg mov adc test (bad) lds fiaddl les cld dec push jg hlt ds loopne pusha ret jo xchg jg mulb sub lods jg cmp leave popf push jno jle mov jg int3 cwtl sahf cmp jmp dec add or push dec and mov pop test icebp inc jg loop and clc int3 bnd in (bad) push popf push sti jg xchg pop (bad) lock pushf jg fnsave push loopne loop jg sbb push add mov test dec sbb mov mov (bad) jae xchg lahf cmp xchg jg pop cmp cmpb push jge adc push jg in mov (bad) sahf push sub test addr16 mov jge mov std push push and mov addl std sahf stos je fidivr nop xchg sub dec lods xchg xchg mov mov aad cmp aas ss jns sub jae jle movsb pop pop movsl sbb sbb push jg push in jmp jbe inc jg jns lahf mov scas std mov test dec cmpsl in stc jg stos bnd in ljmp sbb dec xor mov inc inc mov lret jl out xchg fnstsw ret pop dec rcr pop jae stc jge or mov dec dec xorl data16 out xchg xor jo frstor scas es fimull jno dec sahf fiadd adc lods inc jl xchg cmp les mov iret mov dec stos lcall call xchg jbe and dec rol aaa cwtl mov xor test mov out fcompl scas sub into or fwait push andb xchg jg xchg mov xor mov push je or es lret or pop adc xchg cmp sbb stos cmpsb cwtl pop jae insb sti inc call fwait clc jmp imul xor mov test fimull inc es jg pop jbe push push fdivl scas movsb dec dec and sub pop or pop mov pushf jg and rorl sti in jg mov test mov xor inc ret aad mov cli inc stc popf mov sub sti inc push idivb pop push call cmp inc scas rcrl mov inc lcall jg lods sub jg mov adc xor dec or pop jnp sarb xchg daa add fnstcw mov stos (bad) mov call int3 mov jl movsl jno mov mov push cmp (bad) jg bound jno jl pop stos dec call mov mov and pop mov and mov mov mov inc enter aas mov mov mov aam adc es nop push out arpl jg pop scas stc and cmp sub jg inc fnop xchg imul shlb cmpsb inc clc mov js cmp fdivrs jo mov pusha pop xchg sarb test pop and out xchg inc pop (bad) data16 push leave or cltd lret mov jg daa xchg push int test pop (bad) hlt cmpsl xchg pop jmp mov (bad) bound pop arpl addr16 bound ffree lret (bad) imul jg sub std jge mov xchg dec imul lret jg xor fstpt jg mov loope imul popf mov adc das mov sarb lret inc jns arpl jg popa std dec pop jmp mov adc or jg inc cmp mov mov lds pusha clc (bad) call (bad) stc ds dec mov arpl jg in xlat pop pop scas xor cmp pop out add stc add rcrl pop adc sti ds push push andl dec inc push ret ffreep mov mov movb cmc outsb (bad) sti ja push addr16 xor mov loope stos mov xchg xchg jg clc aas jno mov xchg repnz or sub jno mov cmp aas inc fcom in dec adc jg add or out leave and fldl sub inc sbb pusha mov scas mov or stos sub push mov cwtl sub ja add jecxz (bad) pop adc or dec out cmp push leave std addr16 adc jns cld pop cmpsl jl jg popa mulb sbb xchg dec pop lods pop mov cmpsb fwait rcr jg into mov stos mov cmc dec push pop mov mov sbb fdiv stos xlat out js mov shrl sub pop jno rcrb push mov dec xchg push cmpsb leave cmp pop or loope jg cs jecxz jp popa jg pop push scas cmp sbb ja jbe push mov inc mov pop ss int (bad) push xchg jle cwtl mov fldenv add fwait or sub xor dec mov loopne fisubrl jg cmpsb movsb mov cmp jle les xor sub pop add jg pop ja adc jg fldt not fnstcw out jg or dec iret dec adc aam or stos cmpsl mov jnp sub sti push fxch cwtl jg dec push pop jg loopne hlt mov enter jg scas ror repz jg jbe fmuls mov jns sahf jg mov cs jg outsl sbb inc testb mov (bad) inc sbb or daa mov and ret notb into bound pop pop dec mov pop jg adc insb add fstpl scas ss xchg push inc jbe push dec mov call mov mov jle push popf or pop pop mov lcall jg mov fisttp lret sub sarb les jb jg adc in outsb jg dec push fsubrp xchg jbe jg mov sarl add sub and jg std aad (bad) push nop jg rolb or and incb add push mov scas dec jbe jg shrb cmp cmp pushl xor cltd xchg addr16 pop pop sbb jg and fistp mov inc adc mov add bound jns (bad) pop mov outsb outsl jmp mov ss jge push arpl jg jb aam xchg fist jg mov (bad) pusha notl (bad) pop aas arpl sub jle sub dec sti dec cmp mov dec fwait sbb add mov xchg bound cmp ja mov jg lahf (bad) aam lcall mov arpl sbb jg mov mov lahf call push sarl sbb push fdivrs loop addr16 dec mov pop jle fisttp daa repnz or outsl jmp je cmp mov cmp jg xchg xchg push out push mov ss pop (bad) (bad) pop and xor imul lea cmp test das hlt jg pushf rorb jg cs add (bad) xor clc pusha and pop mov lods mov andl jecxz cmp dec ret push mov lret cmp sar and mov leave mov and jg (bad) jecxz push fwait lock mov mov push adc clc mov mov mov fwait pop lock inc push jge jg loopne mov sarl (bad) xor dec sbbl (bad) mov push inc jg shrb xchg lcall pop sbb sub repnz dec jbe and adc inc mov inc jg repz jg sbb js push inc push insl xor lret jae jg out nop (bad) into insb rcll add std jg fdivl jbe ret test (bad) fs add mov mov ss jg dec cmp mov jg pop push pushf nop decb in sahf pop sub jo icebp pop (bad) minps push adc jg lahf inc movsl cmc jl lods jg js adc aas pop mov inc xor dec inc inc cmp fmull jo mov cmp insb xchg ffree sti fildll inc adc movsl sub ja ljmp dec lock xchg jg and inc int mov jg out or cmp xchg xor mov call mov mov test xor push mov jg je or leave imul xchg mov lods (bad) cli sarl push movsl addr16 in mov aam mov ret (bad) cmp cs cmpsl sarl adc jns call mov sbb mov jg cs pop nop test dec fisub xor dec mov cmp pop mov lds sub mov pop fldcw jg push testl dec lahf aas cli test mov inc mov aas (bad) mov es lea mov jg ja ljmp xchg cmpsl sub aad push jg jl test mov aas add adc add push mov xchg add sahf and jl es sbb shl jp sti push movsb pop popf jg imul jmp jbe jg xchg out adc jg fnstsw in jg pop sub aad push jle dec clc xor pop ss insb scas test imul jg sbb jecxz mov mov mov mov jg addr16 jbe mov mov inc jg sbb mov cmp xorl jg (bad) push xor imul scas add fsubrs je jg (bad) adc mov ret add jg sub fwait ret call ljmp mov jmp inc sahf push aam jl ret mov jg (bad) je xor mov push push push mov in jg adc inc dec jg in inc sub jg (bad) mov jg adc insl and clc ljmp push adc mov ja outsl movsl aaa insb (bad) jge out mov mov xor mov cltd aas mov fimul fnstcw popa lods icebp jb insl or push (bad) incl push (bad) xor mov add ss adc or gs imul scas push mov repnz sahf mov (bad) jle outsb sub pop mov dec pop arpl sub dec loopne xchg jecxz imul push fsubrp dec sub fs pop pop fsubrl or xchg es sub xor inc jg loop and sub mov test cmpsl cmp jg adc jp pop cmpl jb out (bad) (bad) or adc fnstcw jg stos enter inc (bad) jg cwtl mov jb imul adc (bad) imul jnp insb das pop repnz rolb add les inc jg xchg sbb xchg jg push mov sub jo jg call adc mov sub adc in iret add fiaddl jmp and mov push mov jg push xlat cmp adc jno dec mov outsl jb xchg mov daa int dec dec aaa jecxz mov pop inc mov sbb outsl cmpsl pop cmp pop ss dec xor mov add icebp (bad) int adc push mov (bad) cmc sbb mov mov sti fstpt cwtl mov js fist in fnstsw jg je cs sbb loop push push mov arpl out cs clc cld sti jno xchg xchg jg std (bad) outsl mov pop (bad) aas or jg inc mov inc add mov mov aas jg (bad) lods fstps pop mov jg test push aas stos pop add addr16 aaa mov test dec mov cmpsb mov jl leave and les pop sbb mov movsl jo adc ja icebp jg jb push jno aad add mov mov aaa loop jge jbe jg adc adc bound mov cmp sahf inc aam mov and sbb add in ret test stos imul xor incl outsb addr16 push lcall pop aam stc cmp pop movb inc xchg bound inc and cmp sub add mov mov xor cmp jg out cmp jg push hlt fcoms icebp push stos pop loopne adc xlat iret pop fsubl es idivl mov pop outsb pop cmc mov jg inc mov aas and jg dec jbe pop push lahf sarb je fldl sarl jg shrl dec in push loope jg out jnp in sub out inc pushl outsb push jns aas ret pop push in adc mov mov in sbb xchg leave mov or mov jo cmp mov cmpsl or (bad) ss neg arpl inc es out cli sub sbb xchg sub sbb and sti lahf mov pop popa (bad) dec cld pop mov fstpl scas jo xchg push enter dec or (bad) ja repz jg shrl mov mov pop or arpl mov hlt cmc cli or or inc push inc outsb gs je pop cmpsb mov jg iret shll dec lock outsl icebp movsb cmp mov cmp mov aas cs xchg pop stc (bad) dec outsb outsl mov xchg xchg jp jg sbb test jg jmp stc and push insb pop aas mov dec loope push inc pcmpgtb adc xchg jg push ret mov dec or in or or jae,pt sub jnp pop sti jo pop (bad) pop and jg rorb push cmp jl (bad) (bad) pop sub xchg sahf push gs mov sbb push andl daa push or adc mov pop xchg std fldl push stos les cmp pop mov lods push fdivrs mov cmpsb dec imull mov jg sub inc cmp or jg lcall and sub sar sahf outsb cmpsl pop jg ss sub lock xor sub data16 sbb cmp aas jo test iret xor inc fnstenv mov pushf shl sahf test mov stos jg hlt in out inc xor jg dec push jp mov sub int jge,pn pop adc out outsl nop fs jg fisub jmp mov in aad cmpsb push lahf push jg loopne xchg sub (bad) iret jg inc in or inc push aam cmp cmp lods icebp push dec ss sub jmp fdivl lret outsl jmp jg test pop push add jg and dec xlat and sarb push subl nop cmp outsl pop inc mov jb cwtl mov mov pop push dec (bad) sti mov divl sbb (bad) xchg inc cmp jg push aam inc jne or mov mulb in std daa arpl sbb xor mov mov shl and repz in arpl movsl adc xor mov jg (bad) cmp pop jb pop jne mov cld add pop mov push daa mov jg xchg fcmove addr16 addr16 xor ret lret jne dec sti xchg es jno dec pop xchg mov popf add jae mov cmp inc mov (bad) jg fldt (bad) fdivrs pop imul adc fimul test pusha js cld add add gs jg pop jo sbb lock push and dec ss scas xchg cmp jnp pop pop es add jg cld sbb mov pop ss or jbe lcall enter add lods je ja jg hlt lret ret mov jg cmp sub mov jg cmp adc or aas jmp fisub cmp outsl xorb xorl outsl dec stos stc inc fcmovu jg jge lock (bad) mov nop mov sbb dec int3 cmpl ret jg cmpsb push push push stc mov insl pushf jg mov out adc xchg xor or xor gs mov jbe jge or cwtl aam imul lods lea dec in std jg mov movsb cmp cmp jg inc icebp fpatan cmpl repnz jg pusha pop mov mov jecxz hlt mov aas pop jl xor mov push (bad) or inc mov push mov xor dec outsb mov inc in rolb fs sub mov arpl push mov clc es cmp inc jno out arpl lea ja pop lret mov jg lcall jl psraw outsl lahf and pusha mov sbb cwtl or lods idivl xor sti scas dec jle jg mov push cld mov mov inc mov sti es or or cli mov xor imul insb pop jg xchg inc mov jg and or stc mov inc gs cmp inc xor orl mov push aad pusha stos jg xchg xor cltd (bad) or inc inc imul enter push inc mov and fimull insb test push out ljmp or sarl cmpsb mov (bad) mov jmp mov cmpsl dec fs das faddl jg push negl adc and inc and jg lahf xor jle inc jg loop cmc jp push lock mov ds lea sub mov pxor cmp pop inc push bound scas (bad) pop mov mov mov frstor jg add mov dec mov das iret aaa dec (bad) lock sub pop aas les jg pop ja dec mov sub lret push push jg push repz mov cltd fildl fidiv insb sbb sti push fstpl loop repz hlt (bad) icebp xchg add dec push lods xchg xor mov jmp xlat loope jg push popf repz ficomp fldl idivl lcall std jmp push bound push into jb cmp xlat cli arpl adc incb pop sti pop das (bad) push in jnp xchg xchg aad pop xor cmp jo push cmpl xlat or push jg mov inc rcl popf xor add inc in in divb jmp sti scas push sub jg (bad) shl jg pop and cmc fstps mov push xchg cmp imul xchg mov push dec xlat push mov sbb xor cmpb push mov xor push iret lcall stc pushf mov cmc pop jno cmp pop (bad) std add push jg (bad) fnstenv js imul cs dec mov hlt std leave and mov and inc (bad) jg fwait pop cli pop push nop inc jg mov jl mov int mov or js sub nop aas insb mov ja (bad) jg rol mov sti popf mov cwtl aas xchg popa mov pop cli xchg in pop in jg arpl (bad) sub add jg and mov jbe bound add push sub cld mov xchg in addr16 xor aas push sub sub cmp sub add ret je mov sahf cld inc mov adc jg icebp xor cmp mov sbb inc repz jg mov lahf sub stos stos fsubrl inc mov add pop addr16 pop mov mov mov sbb jle imul inc jns mov xor jle pop je jo cmp repz and jl,pn notb pushf xor pop push pusha fist or call sub jno pop rcrl aaa inc xchg test loop mov aas and insl sarb add mov movsl scas cmpsl xchg xorps cmpsb jg fidivl popf jg push mov inc (bad) test push inc xlat das inc (bad) (bad) xor arpl loop outsl push push insl jg cmp sti jg,pn cmp lcall cmp push mov das cld dec in popa leave jg dec push insb gs pop jg cvttps2pi adc jmp rol popf mov cmp dec aam jge add push push cmp sub sti jno jg out xchg push shlb add and mov mov dec mov pop sahf push dec psubusw cmp adc ljmp arpl out hlt mov jg jbe push xchg cmp lcall in jg movsl cli enter lahf test cmpl push inc xor adc ret jmp push mov mov lret repz bound sub imul fsubs loope jg icebp lcall inc aas enter jecxz (bad) rorb cmp mov loope xor sarl fmull jmp mov push iret dec pushf or stos sbb cs clc es add xchg jg mov mov xchg aam ds fs fimull jg sbb pop test outsb jg mov inc sar add movsl addr16 call xchg sti dec imul roll cltd adc jg fldt inc rol rcrb pop outsb lock inc xchg inc fisubrl dec (bad) or sbb data16 xchg mov setp xor aad outsl xchg inc int3 or je xor sahf dec cmp fs mov adc pop cmp or scas (bad) sub imul ret lahf mov (bad) jecxz aas loopne mov fdivs test pop cmp repnz mov in jg xor dec cmpsb mov addb sti out adc cld xchg adc rorl jg (bad) push (bad) cmc pop fstl mov sub arpl adc cltd orps sbb enter mov mov mov aas popf mov push xor mov jge test test jg adc syscall rolb jg dec rclb push cli cmpl jns in add cltd in shll cmpl xchg jg movsl pop mov push fnsave mov popa mov mov jg rorb jb xor (bad) jno call outsl or mov push sbb jg cwtl test bts std mov push jg fldl dec outsl clc into je fildll dec push mov jg xchg sbb jecxz xor pop sahf jnp fnsave out das or or jg in mov mov jg cmp sub icebp push or jg popa push pop pop dec jg push xchg pushf cmp add mov movsb fnstcw outsl sub jg sbb cmp inc imulb jg (bad) jmp mov mov inc mov mov (bad) inc arpl adc or adc mov ret cmp mov and lret mov xor pop (bad) jg imul dec ret pop push mov ja jno jae jg rclb xchg jg lcall mov insb add xor stc jecxz inc adc dec inc aas imul cld jg push test pop push rorl push stc xchg cmpl pop je mov sbb jle jmp and cmp xor es dec (bad) jg test jno into sbb jg push in cld mov shll mov adc (bad) lock or mov test popf xor cld (bad) call ja jg and sub aam scas xorl inc push jg fistpll inc sub jg xchg outsl ss pop je cmp popf add pop pusha mov nop jnp outsb sub mov arpl jg ret inc pop or fbstp and mov loop into xchg sbb or add adc cmpsl je sar cmp js xchg xor rcr cmp popa fcompl sti jns ds aad aas movsb out inc (bad) jb inc andl jg imul jg mov lds xchg push add jg push xor loope xor mov lcall pop hlt lret jnp sbb and xchg pop js sarl sti push lcall mov mov inc sub jg fildl mov sub dec je jg addb cmp pop jg adc inc cmpsb pop mov xlat (bad) cmc dec lcall mov scas cltd ja jne sbb mov jg (bad) fimul insl lahf outsl imul popf add adc pushf (bad) push jmp das data16 pop adc mov daa lret gs repz pop mov arpl mov pushf jg adc movsb pushl xchg mov ds and pusha push stos daa sbb aad add pop and std or (bad) rdpmc jmp jg sub gs or mov pminsw jnp test out sahf test xchg imul mov dec add jle sub inc push outsb rclb das mov inc pop mov pop xchg jns test jg adc ret add xchg jg xchg sub and int3 mov adc push aaa arpl shl pushf inc pop cld dec xor adc add xor jg xchg jmp mov nop bound in in inc jg mov jp jg enter lahf and inc call jg,pn add xor push sbb push push movsl xchg nop and push mov pop sub add popf pop stos sti mov clc xor stos jg hlt daa mov mov fxch lret and or loopne sti cmp pop fistpll jno xchg mov cmpsl sbb dec xchg add jno gs outsl cmp and jge push outsl pop pushf mov lock aas bound mov mov jo scas mov in mov jg mov xor roll push or push test mov and or arpl pop test test in adc xchg dec pop wbinvd jg xchg pop jg into xchg jg sub mov cmp enter pop fisttp adc mov mov inc jg imul jg and adc jg sbb mov lret cmp mov outsl lcall sahf scas and xchg sub add mov dec jg cmp xlat (bad) movsl aam jg mov sbb popf mov call cli xchg adc jo loope sub bound repz cmp xchg int3 subb push jle mov insb push push popa jg (bad) leave sub pop icebp cltd notl bound aas jns int and inc ljmp test movsb sub inc dec lods out jg insb mov addr16 mov dec mov sub popa inc clc sti popf jns out xorl mov in pop movsl and rorb adc jg jle fild inc mov or std mov es outsb or int dec stos and mov mov push sbb jg addr16 dec mov jg stos ljmp (bad) sbb fnstcw stos push ljmp addr16 fildl xchg in jg jne push jg sbb outsb add xchg mov jg es adc scas mov jg xchg cmpsl xlat aaa lock push test ljmp jbe punpckhwd int3 jns fimul mov or mov (bad) lret pop pop jg (bad) mov pusha jg rorl push xchg adc cmpl pushf xor and gs jg sub jge adc jg jo loope sbb iret outsl repz pop (bad) push idivb lea dec mov pop pop (bad) fiadd or das or movsb jo xchg sub xor arpl add out jecxz ss mov push lds pop movsl mov out into test clc dec daa repz nop ja xchg inc imull adc dec outsl inc test fdivrs adc (bad) xchg jg scas lcall jg sub adc and imul sarb cmp dec mov in stos insb enter xor hlt daa shr jmp out lcall fwait (bad) mov sarb cmp xorb push jg iret xor add insb add or popf jg xchg adc jge or mov imul (bad) jg in dec imul dec jg cmpsl test js sbb mov ret sub jg imul pushf mov dec inc or cmpsl test mov aas repz add mov icebp stc mov cli or jle ljmp push and mov mov notl push mov rorl in sti sub pushf subb mov lahf xchg das (bad) mov (bad) adc leave cmpsb (bad) mov repz mov push loop push push orb rclb jg mov addr16 ds fisttpll int inc add lcallw je ja mov lahf cmp jno push cs cmp mov (bad) inc gs mov scas pop rcrl (bad) pop jae stos pusha mov sub popa dec ja mov mov (bad) push rol test cmpsb jo lods jnp loop dec adc mov push push mov popf in jg xlat dec shrb jg lahf sahf pop repz fidivl fsubl in ret xor mov inc adc imul (bad) pushf aaa decl mov pop mov pop (bad) stc adc hlt jno inc mov icebp inc mov (bad) test adc int dec dec test into aas xchg std mov dec or and enter lock push jg inc decl mov cmovns jecxz xor enter lahf adc xchg dec je aas mov jg dec daa cmc lea adc mov mov in pushf jg push sbb cmpl inc adc push in add ret cmp dec cmc and mov jg mov dec loopne add jno mov sbb or add push cmp and sub pop xor mov pop sbb lret mov inc mov sub adc dec aad mov mov mov addr16 inc dec mov js mov gs aad loop jg js out (bad) jnp mov inc xchg or fs les dec fidiv out adc pop jg clc int3 popa push xor repnz jo arpl mov push mov enter or inc mov add ret stos mov push ja fdivrs arpl sbb in mov lcall cli outsb push sbb ds push pop test pop mov jb inc lret and les out outsb cmp mov je sbb jg pushf cmc inc aas insl mov xchg inc popw add imul loopne jg mov xor jno mov sub fcom pusha fucomip mov or inc fistl jg adc mov loop sbb cmp pop dec fimull nop cwtl imul lcall inc sub stos pop jg das xor pop dec std mov inc sbb xor loope jae pusha aam mov lret test testb or xor cmp mov mov cmp dec push cwtl cmpl mov aas iret pop sbb inc js lds imul cmpl push inc popa sti inc dec sub or mov enter xlat lods (bad) xchg stos jnp addr16 dec pop mov data16 jle or dec fstps lret xor and pop push stos mov mov cmp cli les pop adc xor or fdivrl (bad) decb xchg jmp jg adc mov inc add int3 lahf fs loope dec repnz and out cmc in pop jg jb jns pop jg xlat mov fs fwait push (bad) aad jg lcall jg lock or or jae inc insl mov jmp dec mov dec adc inc movsl cli dec (bad) pop cmpsl scas inc daa and jg jno xchg fistpll sahf pop popf pop call jno lcall mov jg movsl adc push jg mov pop test out sti fidivrl mov test mov popa jp outsl inc mov jg cmpsb imul mov das fstps aam jmp push cmp lock push dec cmp add xor jg xchg push add scas (bad) pop pop enter pop sub fnstenv jmp outsl movb shlb jg lods mov mov ret or loop dec aaa cli pusha insl mov fwait sbb lock mov jg rcl rcrb lds mov mov xor cmp mov jg push int3 add push arpl cltd mov insb push jg or fildll in adc outsl and jg popa lods mov cld and jb mov add pop loope inc inc push lea jg xor repz sub mov cmp lods xchg inc push push and jp mov mov insb iret mov mov sbb cmpsl push push xchg dec scas pop and clc cmc or ficomp jno xor sub cmpsb or jbe cmp aam int3 and iret xor jp lods inc dec jg push push mov movsb xor ja lahf popa adc insb jno mov pushl mov xor (bad) (bad) sub sti sarl jnp pop mov jg jbe ret mov cmp nop dec jns loop jecxz sti (bad) rcr jno rorl sbb push lea and mov mov jl dec lcall xchg pusha fistpl cmp lods (bad) repnz repz push pop jg and push subb lock sbb dec dec jg mov inc xchg mov in push adc push fdivrl jp sub imul aas loope icebp daa movsb ret mov lods dec xor mov outsl xchg loopne adc pop in inc data16 jb lock push (bad) sarl sbb hlt jg inc dec clc js mov mov mov push fiaddl icebp add dec add jmp imul and pop pop jmp dec in mov imul mov mov mov je sub pop sbb (bad) adc mov pop adc jle loopne lock les jb jl add sub lods dec faddl dec cmp sahf xchg adc jge out ljmp jg xlat sbb enter jg (bad) cmp sbb cmpsl cmp xchg popa addr16 jne lret sub (bad) mov jg inc push pop sbb popa inc push (bad) outsl xor mov mov in jge push les int3 jl mov loopne (bad) jg pop out sub (bad) aaa int3 dec in jo sti xchg jmp out les cmp js or cmp and xor pop mov jmp adc daa mov fistl xor scas mov jg cmpsb lds mov subl ljmp mov packuswb mov cmp (bad) scas outsb mov mov mov jne aam mov pop dec fcmovnbe xor jno sbb das pop xor aas cmp mov sub mov cmp jg pop jbe movsl dec aam jg push jae iret push hlt dec aas dec mov aam (bad) xor dec roll jg aas xchg ret test es jne sub imul dec pop sub in pop cmpsb xor jg stc stos dec mov mov cmpsl adc aaa sbb loope sbb stc insb jg mov fbstp mov lods sbb and mov jg test lret fdivrs jg arpl fildl jp xor fwait insl test jb arpl shrl pop mov bound sbb xchg popa cli ja inc sti aad and or jg jbe sub cmp jecxz push jae dec mov jg test aas pushf mov aad daa icebp dec into repz idivl jnp iret cmpsb xor mov inc xor pop inc xchg sub pop xchg mov xchg jg push sub push jne movsb push dec mov aas enter cs (bad) icebp out into insl sbb jg aad pop or mov jg jb popf and jbe mov fwait clc inc or loop rol call sub fsubp pop jg or lcall jg dec mov sti jl fucom jg rcrl mov int3 cmp mov jns (bad) xor addr16 mov jg mov cmp sti int3 cmc in cmp loope mov js aas push pandn sbb inc mov jg pop cmp out xchg bound jge jg or pop dec push fnstsw push (bad) adc jg and std mov clc stc aas mov jg pop leave aam xor and stos cmpsl mov jg scas fiaddl mov adc jne xchg scas jle adc mov mov mov movsb dec inc arpl inc mov xor adc dec mov ret jg ljmp js lcall pop sar lret ja mov sub ja or mov inc call and js mov mov aaa push xchg dec cmp push push jg xor ds push loop jg push and out mov lea lods add lds or xchg xlat inc lahf push sti pop ss aas in inc in jg mov inc mov mov or mov mov mov mov sbb jbe rorl inc jg in aaa sub loope test mov xor inc outsl push pusha mov dec icebp test lds sub mov popa jg sub jle push add ljmp jg add je jmp repz (bad) std dec jns pop pop jg lahf out pop pop mov jg and in push inc (bad) xchg jg (bad) sbb mov dec aam (bad) cmpsb jnp jg dec into leave imul pushf lds insb mov sbb mov xchg or dec xor xor jecxz lds fsubrl mov in test cld cli xchg add cmp jecxz jno pop pop xchg jns sbb faddl mov cmp dec inc xor test adc jmp inc imul loopne and outsb sbb dec xchg inc pop push jg les insb jno test js jg jl (bad) daa pushf pop mov pop aaa int jg mov (bad) jno add push sub jp js rol mov inc pop (bad) out jg xor cmpl push mov and mov sarb (bad) hlt cmc cmpsl scas cmp test add enter inc sub jg push outsb imul imul push jle sbb roll adc sar mov sbb inc ret mov imull data16 mov mov ja add adc das ror xchg aad push lods adc daa pop xchg cld mov jg xchg pop insl push adc gs jnp out jg pop dec inc or dec arpl jg loopne mov jg lcall ret imul push (bad) out mov outsl mov sahf add lahf push xchg mov mov gs dec aas mov popa jo adc dec push sub xchg pop jg lds mov mov sarl inc and stos add jg xchg xchg jno and jp lret xchg pusha jecxz mov fwait or push aam repnz (bad) mov and inc cld sti (bad) sub jg int pop pop inc sbb add add (bad) rol (bad) lahf xchg cmpsl mov jg gs scas sub push aas outsb rep xchg stos repnz sarl outsl addl pushf addr16 push jg xor sbb addb push push cmp test je fidivr lock jg inc add (bad) fdiv xchg data16 movsb pop inc jg jnp or adc sub mov xchg push jg push (bad) (bad) cwtl dec mov clc sbb jg addr16 push pop sbb dec mov mov xor aas add outsb cmpl xor cwtl dec xchg lods repz pop (bad) or fs push popf mov pop mov pop jns (bad) jg insb cmp in push scas jg xor cmp adc sti jg mov daa xor cli pop (bad) loope adc sub fiadd dec cmpsl stos sub dec mov cmp sub jno cmp fild int3 movsl cmc mov (bad) mov and mov mov xchg mov xchg mov inc (bad) cmp xor dec dec fwait pop sub cs les adc es popf jne js int jg cmp push ror testl leave pop fwait pop jg mov sub fadds sti std and neg and lahf or loope mov daa push lods out sbb imul test test mov mov bound popf arpl inc push xchg sub jmp jg mov xlat lock dec stos pop clc mov fnstsw sub add pop stos lea cld jg dec xchg jmp inc out dec lret dec in fs sbb aad mov cmpsl das pop shrl in jg push add cmp inc stc loop lret fdivrl add xchg mov xchg jbe std fnstcw dec cmpsb add je xlat mov jg mov cmp aas test jecxz imul nop leave (bad) jg test lock cmp cltd pop mov stc cmp push movsl arpl xor scas jae pop mov dec jg cmp imul add xor jbe pop mov rclb pusha das push jne fstpt popf xor xor aas inc shr jecxz orb xlat push popa adc mov mov mov js call scas push (bad) mov mov das scas loope xlat mov orps inc ss jg pop pop add outsl test aas add movsl jp dec stc xchg xor jg inc test (bad) lret cmc jo dec jg jmp jg mov cmp cmp adc aad pop or jo xor outsb pop popa pop jg jl push pop cli jg fimul mov out dec (bad) icebp jg sbb (bad) push (bad) cwtl cmp cmp lret or bound pop mov jp popf xor mov or (bad) call dec pop cld sbb in inc xlat das lods or lock sidtl push push ds inc dec mov rcll sbb je inc rcrb int stc add mov in dec push les fidivrl push dec dec xor push outsb in xchg ret cmp movsl in mov rcll dec jecxz push daa loopne lock mov xor xchg sub mov mov cmp test daa mov mov and pop and xchg adc jg mov push mov addr16 movsb mov and lahf inc bound cld lods push inc jp or mov aaa into loope push jo dec mov push sbb lea int pusha jl inc cmpsl jg cwtl std out pop or gs das shld inc mov int3 pop (bad) sub fidivl bnd xor xchg (bad) jg sarl daa mov cli adc pusha aas push ljmp movsl and testl push add imul daa bound lcall enter dec out xchg jg fisubrl je (bad) pop cmp cld imul nop xor aas pop inc sbb pop insl (bad) ja movsl sub ret pusha into bound iret dec mov repz int3 sub ja cmp jg lds cld aam ljmp in or add inc and sub gs sarb arpl adcb bswap testl xlat jne pop inc sbb inc sarb push xchg shlb fdivl test lret mov jb dec lcall jno inc cmp scas pushf mov or les insb jg ljmp jg (bad) hlt stos fnop les and dec out and jg ds cmp mov inc stos nop sub idivb pusha pop dec add les mov in jg ret dec in jle sarb fstpt add mov scas ficom popf test mov leave xchg push (bad) jg gs mul or mov jg lahf sbb fistpll pop in mov xor adc imul push inc sub (bad) pop cmp xor scas xchg in jg daa fidivrl fnstsw jg adc pop jb pop iret jg stos jbe sbb mov add fwait and jg dec (bad) dec addr16 pop jg repz cmp adc (bad) in ret xbegin sbb mov inc pop jae jg fyl2x sbb push fiadd fsubl pop xor loop lods lods stos push scas icebp sti add aad outsl xor int mov dec xor xlat stc xchg sti and addr16 dec lea stos cltd mov test and or iret mov insb sub imul pop std cmpl hlt jg,pn sbb sbb pop xchg jg or pop pop cwtl loop or push xor test push mov test push or mov sub in lock dec jle,pt popf mov pop dec movsl pusha pushf (bad) lret jg repnz and jg or fmull xchg pop mov mov cmpsl mov or jg dec pop leave arpl xchg jnp fisttpl faddl test ljmp adc xor gs cltd cmp and pushf shrl pop outsl cli cmc stc push pop xor xchg cmp mov add pop jg xchg ja jmp dec mov scas push inc pop push aad movq or or inc adc (bad) not sahf mov loop jp mov cwtl add jno mov frstor movl dec ret adc sub arpl push push lock dec in stos xor cmp mov rcrl jg sbb mov jg (bad) lock cld jge jg in rolb mov add dec xor pop into jg or inc dec and xor fdivl mov sbb sbb inc jmp cli fistp out lods movsl fstpl sub icebp jne jg,pn mov ja mov pop mov cld jg cmp cmpsb adc movsb vpacksswb aas xor sbb adc fisubl push mov test jne xchg mov or push fbld aas adc insl (bad) push arpl cwtl jg pop je in inc insb inc inc addr16 daa (bad) pushf xchg cmp imul in mov mov jg js cmp cs mov ss les stos sbb jg cmc and jg inc ljmp jo (bad) fisttp sbb cmpsb cmp jg sbb inc addr16 mov xchg test add ja movsl mov xor mov std fbstp fstpt pop push (bad) mov add jae mov xor rcrb in ljmp pop mov jno cmpsl call mov xchg push mull jecxz pop out mov cmp sarb cmova inc cmp mov shrl insb push jg pop cltd mov insl ljmp outsb outsl sbb sub sbb add xor inc addl test fldenv xchg xchg fs cmpsb jg xchg daa fild jb cmpsl mov out bswap movsb int (bad) push inc and aas and mov lret jno popf jae shlb push movsb mov lcall mov push pop bound and ret cmp xlat fcmovbe cmp adc test pop ds in sub cmpxchg inc push mov ds clc and cltd jg mov addr16 jg jle imul das mov dec mov jl jg,pt jno addr16 jg xchg mov sarb fcompl in xor test lods fildl scas mov stc outsl sbb jg repnz mov pop jbe aas nop sbb loope mov es and inc (bad) mov mov shll test xor sub mov cltd aaa cmp pop mov mov cld dec sbb inc add jae push in jg iret in cmpsb movsb mov test dec and jg addr16 or xchg mov and repnz pop mov push push stc les aam int ja dec mov mov sbb pushf mov mov int3 fldcw xlat ret mov (bad) insl jb sar dec jae add inc xchg xorl nop sbb push fstpt push sub or movsl daa addr16 pop xchg loope aas or jno,pn outsl incl sbb int3 push adc xchg xor xorb ds ret mov into mov aam out xchg (bad) jg insl out stos xor sub mov ja mov xchg cld lea lea jno mov sbbl out pop lret (bad) (bad) (bad) data16 faddl outsl pop dec dec jg mov dec add cwtl pop iret push mov xor jg loop xchg mov lds cmp sti inc fisttpll push push repz xchg mov or lea ret xor mov rolb push jg sub lcall cltd jl pop adc (bad) mov movsl (bad) sarl hlt sbb inc stc mov fisttp add mov aaa lods outsb loope dec fwait xchg mov dec pop aam mov jg inc loopne test jp xchg jg adc ret shlb fwait decb dec pop adc in enter das mov jg shrl fimull lret gs mov mov lret iret pop mov pop outsl cmp lahf fwait out ja ds or out dec sbb jg lret adc xchg or outsl jg cmpsb pop movsl fwait daa jg repnz and xor es pop in iret mov dec pop fwait les jno push fidivrl jnp xchg push cmp test lahf inc jg icebp cwtl sub inc repz and jnp jl arpl into mov adc aad out les mov inc pop jg imul mov mov mov xchg es dec cmp inc jg mov mov xor pop add xchg loope fsubr pushf push jg cld xor fwait dec add xor ret push lods (bad) push call mov and pop and xor ret xchg sbb jp mov rclb xor sti faddl jmp cs mov xor dec add sub fwait xlat ret jg call std adc nop jg call iret pop mov ja xchg test cmp scas adc cmp data16 movsl ja mov test xor xchg mov jg std sahf push pusha push sti add mov jg add mov cmp jne call mov mov packssdw enter jecxz imul xor xorl aas dec out fldl cli ret or adc sub and dec das jg lahf daa test sub cmpsl sbb cmp xchg enter ds jne xchg sub adc mov xlat outsl cmp js ja outsl (bad) nop push out orl jecxz xchg pushf push leave jg adc mov mov pop daa jp pop dec xchg cmc adc aaa adc dec test adc (bad) notl jp sahf sbb jecxz repnz out jnp mov push popf jg xchg cltd cmp icebp sti pop xor or sbb push imulb ret adcb jp push or jg sub inc mov lahf loope pop dec sub jg push xor and (bad) jnp jl inc add cmpsb pop sti cmp jg cmp xor dec lret lahf (bad) dec jge mov add jl ret jg xor fld1 add imul jg daa aad mov decl mov and adc jg push daa leave jmp push inc jg in push imul stos ja sar out repnz cmc cmp jne push mov mov leave push cmp (bad) jg ja jmp mov sbb rorl jg jp pushf jne jge mov and or xor mov add mov in outsb inc sbb jg lahf and jp pop jg imul pusha fidivl test das loopne ror dec adc jg mov dec cmc cmp ret ljmp outsl mov stos or outsb jg test loope pop mov lcall inc sti inc inc cwtl iret dec adc pusha or push push aas lret jg xchg or sub fnstcw push xor jmp (bad) jg sar push sub jns mov push out (bad) insl test js scas cli lea or lcall and cwtl enter jp push pop les fcoml pop push jbe jg jo xchg jecxz pusha mov mov fwait ret test mov sarl xchg adc xor std pop jne adc lods add (bad) mov jg jmp mov scas dec hlt and jg mov out mov (bad) mov pop jae add cmp inc outsl in out mov sub scas inc pushf pop test (bad) hlt aas icebp xchg out aas mov dec xlat aad es in mov jg inc mov mov adc aas jl or xchg (bad) sti loope lcall inc mov jno add jb cs bound xor push mov or std add (bad) push pop jg jbe pop lods mov push cld cwtl push aam mov jno mov outsl mov sub mov js jg mov leave arpl xchg mov fdivrs int icebp pop xchg aad cmp inc sbb ds lods mov leave pop dec push cmp and jg xor jo lcall mov mul (bad) jp aam ret sub inc cli daa pop insl pushf jge ds divb rol jne mov jg test jl jg add add addr16 pop mov movsl sub inc outsb wrmsr sbb inc lea enter jg inc xor (bad) movsb cmp mov mov out xor (bad) sarb aam mov add dec das (bad) pop test lcall fild ret inc loop jg movsl xchg mov or mov add lds orl xchg outsl aas popa mov std inc jns negl lds and ja mov faddl jg (bad) inc push (bad) mov out mov ljmp mov enter add and cmpsb lahf sub insl cmp stos stos fstps adc jg stc xor xchg add gs sbb adc cmp aam mov lret sub (bad) add scas jg add adc jg add add sub mov mov jmp jg jae ljmp xor xchg dec ucomiss jg push (bad) (bad) push xor pop jg loop ret cmpsl ljmp orl cld insb pop pop mov ret pusha xchg dec jg bnd inc rorl jg (bad) jmp aas inc nop jg mov arpl jg inc icebp sub jnp movsl jg push inc xlat fbld int3 sbb cwtl mov inc out (bad) mov lds jno fnsave jb imul mov insb gs enter cmc dec cmp adcl jg fcoml inc xor and call mov xchg inc push scas iret xchg jg dec mov cmp daa fs lahf (bad) jg out in rcll and and or lods xchg arpl clc stos mov pop push lea or sbb ret jg fwait dec mov add fdivrs jne incl aas es inc push (bad) mov mov jg aaa push jo ret jg stos pop imul dec je xchg jg repz xor in sbb jmp inc popf jbe jae jg mov cmc lcall xor cmp push mov mov add jmp jnp push cmc in hlt push stos rcrb adc test out sbb jg mov lods je add sbb scas sbb xlat inc mov leave les push jnp and aas cmp and dec dec jb add sub cmovno mov inc jg aas push jne adc push push dec pushl outsl xchg fmull mov mov push scas gs arpl int3 mov xchg or push ss jg and daa outsb mov pop int3 dec repz add fistpll scas out popf mov (bad) in inc or insb jg mov scas and rclb lret jg cmpsl sbb mov outsl test jg (bad) (bad) mov negl xor das insb pop cmp mov pop mov xchg fstpt (bad) dec lea (bad) mov dec dec sbb pop mov jbe push dec outsb (bad) mov mov or dec int3 std sub pop jmp (bad) add sbb (bad) sbb sub add jno insb mov scas pop mov adcl sub stos pop rorb or rcl mov xor outsb push test pop jae dec int jg pop (bad) clc rcrl mov push or lods xor push jg stos hlt sbb (bad) jg mov mov jg idivl movsl add dec mov fwait aas out das dec sub jg cli jp adc dec xor push push cmpsb fsubrl xor sarl subb cmp push jge outsl xchg aas sbb out cmp or dec xchg (bad) jge add jg mov xor jg push sub rcl pop outsl jg in arpl mov ret add imul mov and add mov cmp fcoml lods inc sub or or push gs data16 popf fmuls fiaddl pop (bad) popl mov outsl xchg and pop push pop inc icebp std ret les stc icebp jg es adc adc arpl or fsub movsb sti push push sbb cmpsl jg adc adc jg pop dec jmp jg sbb outsb inc ja push jg out ret adc icebp je inc push jg mov or xor cmpsb and jle loope std test movb lock cltd ret ret outsb into xchg lahf lock mov jg fwait leave lret inc mov lods outsb fwait outsl sbb sahf lds sbb dec mov lcall and inc loopne pop idivl negb push stos (bad) sti adc aaa pop jae ds stos cwtl jbe das stos mov int fisub mov xchg mov (bad) pop insl jae aas sahf xor dec xor inc fimull mov mov cmpsb aam sbb stos movq jnp xchg jo inc mov cmpsb push xchg adc or pop jo iret test gs ficomp inc jg arpl (bad) mov js inc rclb jg hlt push cmp and adc or (bad) adc pushf pusha fist std mov out push arpl bound (bad) not xchg (bad) pusha xor pop mov mov jg adc cmp cmp xchg mov sub sbb inc sub jg jns dec or cmp sbb int jmp push test pop push cltd jg negw pop mov mov in shlb or mov xlat pop out dec js lret jmp cmp out outsl jg push pop test loopne push insl dec dec jg mov sub pushl push rcrl imul shrl jg lret out jl mov push pop xchg cmpsl add jg push push or aam cltd pop push shr add jo sbb sbb or ja outsl sub in ss pop inc sbb andb pop mov mov pop cmpl sarb es sub jg in popf out xchg insl or fsub jg push jns sti test leave jg in mov mov movsb outsb imul fsub dec je jle adc test rorl xchg fwait dec ds sarb push xchg jnp cmp pusha and or outsb out pop aaa push fnstcw jg imull mov dec ja and in insb cmp and jo push cmp xor jg mov aam pop mov fnsave fabs jg js jno push mov xchg sbb xchg mov in mov pop cmp mov jg,pn add fxtract sub jg push leave lods popa inc dec push pop dec jge (bad) pop xchg xchg js sbb push pop mulb loop push or lahf inc ja push mov or xlat cmp or sbb mov mov lcall (bad) ror xlat push cmpsl jg inc insl aad out jg xor cmpsb rorb jne loop jg mov je imul insb test jnp push jg lds icebp jg adcl adc cltd scas inc push imul push sub sub cwtl arpl test sarb inc pop push notb adc or pop dec in mov lea shlb cld jne add lods fdivrp outsl cmpsb jg ret pop xchg shl and outsl sub or dec lods jg clc out jo enter outsl sbb adc pushl subl jg add testl xchg or mov dec jg and xchg (bad) mov xchg cmpb inc sbb inc jbe jg int3 mov push addr16 cmpsl pop pop clc adc lret gs stc xchg rolb jg sub mov fcompl outsl aas pusha jo xchg sbb shll sti cmp sbb lahf dec int3 aaa das jg cmp sbb xor pop pop sti cld in xchg addr16 jg (bad) xlat and or jg out into sahf push or push mov push imul cmc rorl fsub jg mov jae mov dec scas mov ret aad or add jg in movsl mov enter addb jg cmpsl cmp cli jo push jg sub sahf jg push enter nopl movsb aam dec and lds (bad) fmulp adc jg sbb pop fnsave js mov jg xchg mov adc das out inc mov arpl mov jg xor test fildll jg jae es or jns cwtl loope jo (bad) lret lods popf pop fcomip jge cmc aas xor in cmp imul inc sbb movsl lret xor xchg jg mov notl mov imul lea sahf int outsl outsb (bad) pop add aas push inc pop test sahf roll lds nop icebp addr16 movsl dec stos repnz insb mov lret shrl es cmp (bad) dec pop mov dec (bad) jg mov push jg push mov jne mov movsl in add sub sub pop dec adc les je and jg sbb push sahf jg inc inc add pushf mov jg jp arpl pop or nop pop fisubr add mov scas pop ss sbb jg neg push or sbb in jg mov jg iret enter cwtl mov leave outsl mov imul aam in in dec inc inc mov jp data16 cmpsb push loope cmpsl inc gs (bad) adc sbb jg add lods (bad) jbe sbb jg popa out cmp mov mov jo aaa or fnstcw in and cmp int jg xchg (bad) loopne sub (bad) or mov adc mov imul cli adc mov push push popa mov aam mov push jg cs dec add xor pop es pop (bad) xlat mov jg sti inc pop adc (bad) mov dec aad xchg or mov bound adc js inc leave lods aas out xor movsb sub lahf mov xchg mov inc pop xchg inc pop inc cmc aas pop test fwait mov inc inc cmp xchg jl jns add jg lods aaa push sub loop jg cmp push imul inc cmpsl inc xchg and stos rorb ficompl push cmpsl jg sbb jb in jns aas dec and js out inc dec jg,pt xor lret les mov gs jb outsb xchg adc dec cmp cmp jg lret inc push stc add or pop pop sbb out cmp mov jo mov inc add fstps cmp popa int imul jg sub mov jmp pop imul stc rorl jg fdivrp lret sbb pop pop ja push mov cli sbb or mov mov or sub in fs popa and push xchg scas loop pop rorb in loope pop jns outsl adc (bad) inc fistpll in jnp jmp call cmp stos in jg pop cmpb sahf jg xchg fdivs ds pop mov push cmc roll sub adc test or addr16 cmpsb mov inc push js notl and shlb repz push jg adcl fcomps mov ljmp xchg and pop popa pop fldcw nop pop fcoml insl test popa or xchg imul sbb jb insb lods lcall xchg cltd xor and push mov outsl pop sub repnz mov stc aam mov fild jg in (bad) dec sbb out int3 jg push stos sub in jg push popa cmp push out sti push pop xor (bad) jo imul xchg imull cwtl aas fist test xor adc movsl inc and mov in insb ret mov mov call mov jmp sbb movb icebp ret jg pop pop out inc lods outsl sub (bad) jg dec daa lods shrl rcr jp mov pop jbe or xchg fisubl decl inc arpl xor imull aas mov idivb in adc cs and aaa sub insl aad mov pop sbb jg dec sbb ret rcrb insl jg (bad) cltd notl xchg sub insb sub in jg icebp push cmpsb mov lods pop jg test inc jg (bad) sub jg leave cmp aad (bad) cmp and pop and imul int3 loope mov shrl and inc sarb mov pushf in jae add xchg arpl dec jge dec mov fstpt imul jg mov jecxz mov sub jg jmp fimul sarl cmp fild loop jg shrb test fdiv mov fwait adc cli jg jb mov (bad) not cwtl sub inc mov ret jnp mov xor cmpsb sahf clc jg jmp out fisubrl inc or imull (bad) sbb bnd aad xchg popf in pop jno cld cmpb lcall mov test mov sub inc mov fnstcw arpl sbb push leave outsl mov shll loop dec inc mov mov xchg xor jo pop pop cld pop inc repz push in jg insb fidivl lods fldl in repz adc cs arpl inc jo aas fmulp popa push pop jnp es stos and jg out add mov xor jmp dec mov fildl mov mov adc pop cmp jp sub inc (bad) ret cmpsl arpl jo in sti lret pop pop dec jg add push loope cmp pop sahf (bad) pop add call xor push adcl cs cmp mov scas sarb or dec lret xorl adc cld fsts cmp jg mov mov aad rolb jg in xor int cmpb inc push mov loope jg dec sub fldenv and jg jmp mov jbe lods jno sbb dec outsl (bad) xchg mov jg cli test lahf out lock pop fbstp lods xlat jmp mov jo dec jle xchg jno add cmp sub jmp mov mov push pop lock outsl out addr16 pop aas jmp scas xchg jae js mov sub jge jb jg outsl cld inc bound push xor nop jg dec sub jg jmp ja mov jno iret imul jg cmp xor int dec jg cmpsb xor jns add sbb enter push pop out sbb scas push mov jge mov loope jno mov ret cmp test cwtl inc aas jecxz mov add inc pusha inc jg add mov loopne mov je cmp xor cs ror dec jg adc (bad) xor ret cmp push sub lret jg xchg mov or rcrl arpl jg sbb or mov xchg dec lea push imul add lcall jae jg aam adc adc push sti and jg push out pushf sub inc outsb jg dec sub (bad) bound aad push jg xchg repnz mov sahf pop inc in dec mov jns push jl push ret push out fisubr jg clc loope xor mov xchg stc mov inc fisubl jg dec insl call decb std out lods inc lcall dec lahf sub jg mov push movb jg and push push jg push adc xor idivl in and or in xchg loopne mov pop xor mov lcall mov icebp push xchg xchg pop pop push (bad) fmulp push ret sarb pop lods mov add mov out cmp cmc inc mov loope insb cmp jg loopne les mov popf ja jg adc pop adc pop inc std push jnp (bad) jg shll fwait xor es xchg cwtl sub in insl (bad) sti ds jle outsl xchg mov gs aam ja cmc sbb jg mov stos add cmp rcrl mov xor aaa sbb das fs ja in lds lcall int push mov push fucomi inc cmp mov mov inc stc insb lock sahf or lret dec push sub aas imul cli xor mov jo (bad) cmc xor aaa xor jg lcall jg jae nop jp or jg movl xchg pop xor std pop pop jg in mov cld jbe pop mov test xchg push and (bad) inc cmc addr16 adc daa jg jecxz sbb jge mov fnstenv pop dec in enter shrb ret or push jae inc xor mov xchg add outsl pop jg rol xchg xchg (bad) js jg fdivs rorb (bad) jmp and sub jg fld cmc mov pop xchg sti int3 stos aad pop into pcmpgtb xchg cmpsl das xchg or cli push xchg jbe jo jno or ret push jg dec ficompl test inc jg cmp (bad) push cmpsb dec jg shlb jg cli lret cmp pop mov inc xchg rolb inc (bad) xchg jg test lret mov xchg cmpsb and iret lahf jg or dec sbb jne lret popa cmp inc add das cld mov aad sbb (bad) xlat addb jne out lods cmp fcomps jg mov add pusha push xchg cmc xchg push xor pop ret sbb cmp sub pop clc cmp add out mov test (bad) (bad) xchg ficompl in jbe mov or add and out sbb jl enter rcr test clc jg dec mov dec jg jge iret xchg out mov jg lahf clc inc or mov inc jg repnz push popa inc and jg imul sahf shrl ljmp jbe rclb (bad) cmp sub cs ja mov push jae cmpsl out dec fs mov inc dec xor push mov and dec pop (bad) fadd sbb cmp xchg inc scas jg xchg outsb jp push mov ds xor cmpsb cmp sbb fnstcw sbb xor jns repz std aas out jg rcll in cmc mov fcoml inc test stos inc pop mov push int3 jae pop lret in bound sub sti stc pop or sub pop jle out pop dec fistpl xchg or push in mov sub popa dec call cs mov push push xchg pop mov mov pop push mov mov inc add je shrl jg xor add clc jecxz jg jne rclb jle fidivr (bad) pop xlat sarb cld lods dec jp ljmp mov xchg xor jmp pop (bad) pushf addr16 pop jbe inc loop adc xor int3 jg jp sahf push out das jg popa cmp aas test pop fcompl jo pop popa std dec orb mov and and mov ret sub in sub jae pop pushf idivb xlat lock cwtl jg mov scas jle sub (bad) mov gs mov sbb sbb fdivs xor mov add or mov outsl sti add jg inc clc test xlat data16 dec ds mov stos ss test jl sub jp jg pop in mov pop (bad) mov fdivrs shrl mov pop ffreep ss dec or imul push out sbb sub pop icebp jg add and push dec pop add cmc jo mov ljmp sti jg push fldcw push cli inc test jae std xor dec jge jg stc dec push and addl arpl xchg fcomps insl sbb iret mov fidivr in or ja test xchg andl inc mov (bad) pop mov and push (bad) sbb mov (bad) hlt pushf push push pop jg pop mov sub scas and cld lea jg das (bad) (bad) aam scas pop jg int3 dec into pop dec push or lea (bad) iret xchg xchg insb xchg movsb push scas add test lcall sti pop dec nop jg mov insb imul cmp fwait xchg and ret pop dec xchg and cmp lret nop xor xor ds cmpsl stc cmp out stos xchg ja pop mov jp bound xor stos pop into sbb das dec jno cmp mov push pop add and in push inc dec jg ret rolb mov outsl inc sbb cmpsl mov jg push jnp out pop popf testl jg ret testb pop aas (bad) js cs xor jle and mov inc mov insb add mov imul and cli xchg mov adc jg mov adc (bad) fisub jmp dec fs jnp add or jae push pop mov inc aaa lret std inc jns xor je mov cmp (bad) xor xor cld mov fstps cmp dec int jg add addr16 cmp gs lahf jg mov pop and in push rcrl mov jg outsb jmp xchg mov jl push pop int3 cmpl mov adc ret push and jae cld adc inc sti sub out ficom outsb xchg enter int pop (bad) leave pop rol or cmp stc jo mov add (bad) repz aas cs fcomip mov xchg loope jg scas mov jmp jnp push xchg int in cmp xchg ret sbb jg jmp push loope jg adc icebp insb inc dec daa jg mov add adc mov mov fldcw mov pop fbld jbe adc or iret ja sbb test enter addr16 sti (bad) divb jo and jb fld lods je jg cmp das iret jg jge popf jo fildll lds dec inc scas xchg sub cmp aas xor bound and jg adc mov lods stos inc fisubrl xchg scas adc test les shl sub xchg aaa cmp in icebp outsl inc loop hlt xor mov mov les lret stos cmp cmp out fisubl stc imul in scas jmp ds mov jg xchg mov jge jmp jg lods dec or push pop jg push (bad) stos movsb lds stc mov addr16 test jg aaa jecxz (bad) dec int3 jg pop outsl (bad) jne sarl (bad) ja in pusha arpl (bad) out lock jg,pt xor stos or pop jecxz pop gs mov in es push cmp adc test jg dec xor jle or dec lds pop mov in out (bad) repz dec test sub mov lea sbb jbe dec mov jg stos dec or push lds jg and or hlt and xchg jg mov cltd jg ljmp aas les pop mov cs aaa unpcklps mov bound das lcall xchg or pop inc fnstenv insb mov insb fist lcall iret and repnz cmp (bad) cmp lods rcll popf rsm popa xchg jg scas outsl aad mov xchg sub adc push dec jg push into xor and int enter (bad) loop (bad) and fnstsw sub cli jmp mov pop repnz inc gs cs jg jnp stos and addl (bad) lret inc pop push data16 aaa (bad) in inc add mov lock jbe daa push das jg pop (bad) rol sbb sub jg sahf jno imul pop mov data16 push jg xchg push pushf in inc popf stc xchg sbb mov jl fwait dec dec pusha std jg loop ss add mov jnp inc mov xchg jo arpl aad mov sbb loop jg or sub pop jnp (bad) sub jl dec push call sub xor mov stos pop jl mov mov dec jg (bad) fistl stos jg jno addr16 xchg mov int (bad) loopne out cltd mov mov das into dec aaa popf jne stc test inc test inc dec dec push icebp les pop xor arpl jl outsl or push sub (bad) pop es inc jecxz push (bad) rorb add adc mov jg (bad) jmp fistpll inc sub scas mov (bad) imul sahf out mov decl xchg xor sub hlt sahf sbb lds mov jp and dec sti inc inc stos jg mov in mov add int3 jg mov dec xchg jg push lds das mov in js cmpsb or push out mov cmp mov (bad) iret or (bad) fs fistp inc bound cwtl jg pop in leave arpl repz jp jg int pusha mov xchg sbb in mov pusha inc sti pop shrl mov jg mov adc jg cmp adc aam push sahf int jg shlb (bad) lcall jg mov mov push dec and sbb (bad) clc lock inc lea mov out dec gs lcall or test sub repz xor (bad) ds sbb mov popa enter add pop fwait push js add jle mov adc sub mov pop pop pushl mov push aas loope cmpb imul outsl jbe,pn cmp jae pusha daa inc aaa sarb sub lods sbb pop aam cmp js nop cmpsl aas ret xor push lret mov fwait cmpsb les jg (bad) negl sbb cmp std ret push dec ror inc rcr jb dec imul (bad) dec xchg lock mov jl jmp mov mov jg pop add or dec xchg cmp (bad) jp lret inc inc mov and mov lock sbb push dec mov jmp dec adc xchg inc jg fildl lret inc dec jg insl repz push jo push adc push aad ja xor ds inc pop jp loop sti je jg mov or sbb icebp les js mov dec jne push push in test lahf cwtl pop dec (bad) shlb mov pop jo iret out lock jnp imul push arpl jecxz lds inc or shlb mov andl jo adc pop out sarb adcl rorb mov aas jnp (bad) push jg int (bad) pop in cmpb adc jg lods fnstenv popa nop (bad) inc mov push fsubs clc jg loope daa and and dec aas jo orl in sbb jg jne (bad) iret mov xchg lds movsb mov pop sbb sarl cmp stos aam outsl jg jl mov and mov mov jg hlt push jl ds dec jg lcall jg int3 (bad) imul lock sub adc mov and mov int push adc cmp jle adc bound loopne out hlt mov sub fldcw iret jg clc xchg jb testb nop cmpsb push repnz and jg dec dec and das mov aam dec jb add adc jg mov (bad) loope aas cltd in or or or inc pop out test arpl jg pop adc jg xchg neg push jnp popa jg pushl mov fisubr jmp inc out mov std jg test rolb jae in mov adc dec scas xor pop pushf scas (bad) xchg xlat mov push dec mov test std lock pop cltd cmp mov cmpsb daa sbb jg inc xor jg imul xor lret mov dec dec out jg pop (bad) pop imul mov push sub fwait add dec jg jno loop sub cli jg insb sbb xor test (bad) call imul pushf xlat dec js popa outsl jg mov jg xchg xor aad sbb xor aas jbe mov rorl jg inc sahf mov mov cmp dec mov stc ss jg (bad) int xor decb cmp scas hlt dec pop mov and sub jg fldenv arpl movsl pop lea stc fucom mov dec mov xor in jo push xchg fistpl add jmp ja lret xor dec (bad) in imul push cmpl stos mov (bad) inc and fnstenv dec mov dec and loopne mov and mov imul jg iret cltd dec or scas loop dec das jns decb mov sbb mov add cltd inc jle cmpsb (bad) pop inc inc push cmp mov cmpsl inc pop jg pop fldl bound jg (bad) sbbb cwtl test cmpsl lods push frstor sbb enter shll sbb out aas mov in push jns pop inc pop xor (bad) ffreep cmpsb dec js adc out ja cmp mov xor jb sub sahf popf jg imul stc std shrb jmp adc cmp pop jg fsts xchg pop or dec jg cmpsb adc rcll jg into dec or mov cmp jg in cltd sub aas add jge xchg aas addr16 jg (bad) (bad) ja scas xor push out push pop loopne mov lahf adc mov sub mov leave in inc stc jg add cmp push jg adc mov neg cmpsl mov ja pop xor jo ret sahf push lds push inc cs fiaddl loop ja mov xchg movsb loope inc jecxz inc and (bad) fs stc jg (bad) mov cmp cmc outsb lret jg adc inc jno add aas sub in (bad) push rep sbb xchg mov into test pop inc inc sbb pusha mov gs push jp mov test xlat jno push push aas push lcall sub les sbb push sub bound sbb xchg jg xchg imul loopne,pn jg inc or jnp inc int3 jg pop mov (bad) aas cmpsb ret mov dec mov inc fnstsw sub push cltd hlt jg inc cmpsb mov jg repnz loop jg sub mov jg jp mov add push mov sbb push sbb add (bad) cwtl lea (bad) fistpll lcall jg mov out jg jno push sbb jle jg outsl sub in lahf jbe cmp pop imul in xchg dec mov push xchg inc mov cmpsl addr16 lods pop dec jg inc in test jo dec cmpsl mov sbb pop out (bad) cmp gs js loop sbb jg rclb cmp cmp xchg push xor xor iret (bad) jg je (bad) test push jg enter adcl movsb (bad) jg pop insb xor cmpsl pop dec jg scas adc pop (bad) jno popa push hlt mov pop cmp push inc out aaa leave scas jp mov mov lcall les mov jg cmpsb cmp (bad) popa xchg mov in daa mov mov inc es shrb jg movsb sahf lret mov mov add outsb push addr16 mov movsb mov mov jge and clc mov fidivr subl addr16 xor jg (bad) xchg out mov cmp das leave pop mov sahf out lea jo loop inc mov jns jg mov dec sbb dec leave add adc pop in (bad) xchg das subl mov jl fildl pop aas aaa dec pop push mov and in push or inc xchg cs in xchg dec push jg and out in mov sbb clc test adc dec in jg mov test rorb fcom fwait icebp jg loop sbb leave out push jg xchg mov (bad) fildll int inc jg iret add lret cmp adc mov in xchg xor jg cli lock inc stos jg xor mov mov xchg jg mov xor push iret in mov cmc std fwait mov lods and les sahf es inc pop xchg and seto rcl push jae xchg dec lock add pop mov in aad repnz data16 sarb fistl movsb inc jg mov push fnstcw dec in outsl dec cmpsl leave test aad xor jecxz pop cmc xlat adc push js mov push xor mov out (bad) push sub mov jge mov adc jbe jg push pop inc repz sti cmpl fnstenv cmp shlb mov add clc dec orl cmp in arpl scas mov and jl adc sbb jg mov inc mov aas lret repz (bad) or push inc pop addr16 ja jnp ljmp call int push mov xor and jg dec push sbbl js mov jp lahf lock jne jg push rcrl or mov dec cmc mov dec stos das sbb arpl jg in sahf outsl and popa mov pop add jg mov outsb push and pand sub mov mov jle fist aas xor adc stos pop sub sub push dec cmp inc inc mov mov jmp sbb imul cmp orl out pop cwtl push jo fidivrl xchg insl pop sub popf xchg pop mov pop jle fbstp int leave inc fcoml jg or mov jg bound xlat lea movsl xor mov dec pop mov pop jg test addr16 ss dec fdivrs adc sub pop jmp jg mov jo clc mov je pop xchg cmpsb mov addl movsl test dec pop dec pop std mov inc and (bad) repnz jg pusha lock scas cltd in mov aad rcr mov jnp fs enter jle cwtl pop pop jmp notl roll loope mov aaa (bad) mov lods jg test xor lods lock jg push jne sub (bad) mov push rorl loope fmuls jo jg pop cmc sub cmpsl clc or lea mov jg pop sub inc mov mov jmp mov imul clc push jg mov (bad) mov lret out movsbl pop out (bad) jmp pop adc dec mov jg js mov notl std outsl jle push add fdivrl add mov jo (bad) mov imul mov inc cli mov mov jmp jg,pn cmp mov cmp jg (bad) (bad) (bad) ret imul bound insb hlt or mov out aas cmp adc dec jb jno (bad) pop sub or jg cmp and add jg addl insb mov sti movsl pop inc inc sub mov mov dec inc stc roll out jne pop dec sub mov mov fstpl cltd cmp in dec inc aam and jp imul dec mov push jg adc or xor fidivr jmp jmp push test push xchg pop ficompl (bad) adc sub aas add sub lds jg jo jnp sti lret mov lods and dec fwait rcrl jno cmpsb pop das sub pop sub jg mov inc ss push pop adc das loopne pop mov outsl in xchg mov call or fldt or adc jecxz inc incb aam add ret hlt add outsl jns out aad push jg mov add jg push xor cmc arpl sub not nop fwait (bad) out cltd stos and jg mov and jg enter lea loopne dec popf dec cmp xor mov push mov xchg dec (bad) jg sbb test pop je in and repnz test mov int3 fisttp push and (bad) std pop negl mov mov sahf dec add nop aaa call push das mov jg mov ljmp dec push mov pop movsb pusha jne iret jg mov aas pop dec jp lock pop cs inc adc pop in clc dec aaa popa mov jmp movsb xor push idivl or js push dec or out mov pop mov sti cli scas jae mov or pop push jg add inc sbb lods push mov jbe sbb mov call aaa (bad) jo ja adc test jae cmpsb (bad) jmp xchg rorb jg test or dec xchg pop jg mov insb mov jge mov test and incb arpl pop dec repz je xor mov pop and jnp stc jbe ret pop adc daa inc fisub outsl mov shlb into popl cmpsb hlt pop mov arpl stc and xlat jge lods mov xor jnp jg xor inc mov jecxz rep insl test jg sbb and (bad) imul push dec dec cli js test out and jg xor insb jg mov cmp aas movsb sti inc out ss lret add jno xchg jg push inc leave mov jg daa add lods or cli cs aaa lock push pop xchg pop push aas dec outsl push push lds sub hlt rep rcr (bad) cmp lahf pop push andl aas sub cmpsb jnp int dec jg mov in std inc and jg pop movsb aam and cld mov jl mov mov ss (bad) xchg sub mov cmpsl push repz jno outsl jg cmpsb mov fwait or jg es sbb rcr xchg sti andl dec sbb inc lds xor sbb dec aad mov dec pop xchg jg andb mov jge push clc jg rol lods sub inc push jg stos in mov lahf mov enter mov inc xor dec adc (bad) popa pop lods push data16 adc (bad) daa adc sub or data16 and mov out js jle pushf push insb cs test xchg insl jae arpl xchg loope mov cmp jg mov pop (bad) inc mov push outsl fildl scas pop mov mov mov sbb lods bound jb testb mov outsl inc jg xchg int insl dec fstpl sub fmuls xor mov jp es std mov (bad) mov jg into mov cltd jg lea and scas pop (bad) jg notl jl and das pop add fildll flds mov cmpsb push and mov push cmpsl ret arpl push std and mov sub push jno jg xchg sti out cmc cwtl pop inc aas push popf cmpsb (bad) mov movsb inc jne notb mov fdivrl cmp into outsl mov pop mov mov in repz out jnp les jbe dec adcl imul sbb scas jl sub cmp add jno sub inc arpl outsl ja mov adc pop lock dec sbb outsl je xor out jmp les push dec roll inc test mov lahf icebp push les leave pusha cmp cmpsb lds cli jae jns cmc cmpsl cltd js (bad) (bad) rolb scas jg pop xchg jns cmp (bad) sub xchg aas lods xchg dec or jl dec pop (bad) or mov mov xor xchg push popf dec sub loop push movsl in sti jno jmp into aaa cltd aad xor (bad) xor out jg adc ss test inc popf cmc jmp lcall inc jbe jg xchg popa clc add (bad) add mov fdivrs xchg imul mov test xor mov jae jge das push insl inc test in mov dec mull rol cwtl inc add mov outsl stos ret pop mov test lods inc mov aad jg and ja push pop ss add or pop jg out xchg cmpsb je xor aas mov mov adcl push rclb jb cmpsl addl dec pushf cmp cwtl cltd icebp (bad) out fnstcw inc cmovs call jmp pop add adc lock aas push or inc sub inc xchg hlt sahf mov jg pop nop adc addr16 ds mov jg out mov in (bad) call mov cmpsl mov add pusha and ja je inc dec jg adc or pop jg jno std xor clc and mov or ss int3 jg ja push dec add (bad) jg xchg stc mov jg in in or outsb fdivrl cmp push xchg test xchg push push pushl sbb mov jge outsb das stos mov jecxz lock mov outsl fcmovnb mov js sub outsl lret push xor addr16 clc pop addr16 xchg and pusha jg sub sahf repz lods lahf js mov popa lret pop rclb cmp outsl sti cmpsb movsb out pop pop lahf cmp xor jb mov cmp cmpsl pop arpl mov xor inc jle outsl sbb push inc or xchg jg cld adc cli stos in mov pop adc outsb or or ds rcrl pop and cltd mov adc and inc inc xchg jo mov cmpsb std inc jl adc push pop push dec cs or test dec fcompp sub aam sub sar cmp mov das and add xor xor jg cmp imul movsb insl mov mov mov xchg xchg jg pop in clc mov repnz push lret jp xorl es leave sti (bad) loope stos push push cmpsb rorl jg sbb pop sbb das mov rorb jae add sbb xchg loop jg add mov popf inc jg mov cmpsb pop cmp jg ds and inc jmp sahf jg mov push sbb xchg xor lea fistpl stc jg out cld mov xor pop addr16 mov jg mov and jg scas pushl lods push je inc fs mov jg mov jo jg in sub sarl pop int nop test pop dec xor pop cmp adc popa dec cmp cmpl dec sbb jg and cmp jg sbb into cmpsb xchg (bad) les (bad) or ja out xor jmp imul jbe cli jg mov ror push jg mov cmpsl jp mov push ds mov sti mov or adc xlat lods jne xchg addr16 and jo jae (bad) outsl fidiv (bad) xlat cs dec sbb js push mov sub xlat mov adc inc mov fadds leave repz out (bad) in (bad) xor stos hlt jbe and ret dec add jnp cltd in xor mov mov lcall mov push lea das jnp shll int3 jmp fistpl dec dec scas mov xchg out dec mov fidivr sbb push mov push out scas cmc lock clc inc sub xchg jg or adc inc sub jg cwtl mov mov movsb popf jg outsl and mov rclb push or mov fcompl lret mov jno lcall xchg push lods aam lss mov adc xor ja ret dec cld pop bound adc cmc cmp jg jb iret and xor (bad) add push jg int3 aam push push cmp sti neg sbbb daa pop sbb iret mov jge mov negl inc jg adc and cwtl cmp out mov add jl test jg push xchg jnp jo popf mov pop adc mov and jg sbb jbe orl lods dec jg popf pushf data16 subb push xchg lahf jg (bad) fidivr push mov sbb repnz (bad) pushf mov jg ficom jbe negl (bad) xor jo out xchg in idivb xor ficomp inc popl jg ljmp (bad) mov (bad) cmp xor jle jg out (bad) mov lds (bad) ja jae push xchg push popa mov mov push aaa clc pop dec mov inc sub xor pop jg xchg jnp frstor lret mov xchg push loope sbb (bad) fsubr xor inc or (bad) sarb jmp push mov aas xor add xor fyl2x inc daa aam mov pop (bad) in add jg sbb insb mov ds lret jg add lock sarl cmpsl sbb mov or dec inc push mov pusha sbb lret mov leave enter cmpsl sbb cmp fadds xchg xor inc js cs cs mov pop and jne cmp mov pop enter (bad) jg test mov rorl je in (bad) jg imul sbb cmp sti outsl ret mov xor jns (bad) mov mov lock mov jno push adc cmp pop int push out mov xor jg lcall ret adc mov fldt shrb repz (bad) xchg xchg arpl mov sub lret push pop aad (bad) mov jg push pop mov inc les jg icebp jge and bound in xor or pop cltd outsl mov lret stc jg (bad) in pop xchg arpl jle in fwait daa insl popf sub add addr16 mov jnp pop jecxz fdivl xchg cmp outsl xorb cld fnstcw dec rorb ret cli aas incb out popf dec push jo fidivr loopne popf lods jbe and inc lcall adc out mov out dec cmc sub mov std arpl jp jg movsl pop add pop int xchg xchg add std xchg clc dec div push rcrl sahf xor shr mov push sbb cltd lcall cwtl pop mov fdivrl add (bad) sub jmp jl in out add xchg aaa jg and repz std jg ret fcmovbe imull shlb cli dec sarl adc push xor cmp jmp inc ja mov dec pop mov testl mov jg cltd lock or or fidivr xchg cmpsl mov and push je movsb ret movsl jg outsb pop fisubl mov mov sub jg stc into push sti not fs sub cwtl add or dec sub xorb test in push mov mov loopne ret mov out arpl mov pop push les iret gs in inc loopne cmp jg xor imul out cld in enter xor inc jmp cs sbb fwait sub adc test xor inc xchg popa and inc jae lds repnz in mov test jecxz fcmovu mov lds mov stc scas sbb push mov (bad) (bad) push jg aad out loopne sbb sub push cmovno inc mov in push arpl ret jg,pt xchg mov in xchg pop lods sbb into stc cmp mov jmp leave mov data16 jg mov aaa jl loopne aas push les xor fcoml adc lahf dec mov and push inc cmp bound and push aas pop xchg mov dec pop mov push das outsl or mov enter dec cmp sub jl pop jg lock xchg dec xchg mov adc sub add jg sbb ja cmpsb push mov inc add fs inc cmc fstpt popf mov mov add jg xor insb aad mov cmp mov ja xor and jg jmp aam jg pusha pop aaa ja xor pop call xor and ret inc ja push jg cmpsb loopne aam enter jne jg pop cmp jl data16 jg push testl mov jb fsts (bad) push test enter cmp xor jnp jg insb xor push bound sub and mov out scas (bad) mov jge dec (bad) mov add test and and add fidivr pop cmp bound das rcrl (bad) cmp bsf adc jl push xor pop jg lods sub mov adc cmp jg cmp pop stos (bad) mov jp adc testl std punpcklbw push aam cmpsb popf xchg shl adc out jg stos cmc lret test jg jge jl fstpt push jg lea or inc movsl (bad) cmp inc sub jg int adc cmp enter lock mov test push addr16 int3 popf movsl xchg push stc lret in out fwait dec repnz jg push mov jg sbb xchg xor dec inc mov mov jnp outsl ja cmpsl jg xor leave mov dec cmpsb pushf pop les icebp push jg inc push nop jae cmc negl lods cmpsl add mov dec mov xor cmp jg movsb mov cwtl in outsb jecxz aam push xchg (bad) (bad) dec sub jg nop dec (bad) xor imul dec pop jg mov pop and test xor aam je jb push xchg mov or fstl xchg jg add lret int aas push test xlat aas xchg dec dec cld aam ret (bad) mov es arpl bnd pop test mov les pop (bad) add mov and mov icebp (bad) jg aam cmp cli jb jmp inc scas cltd jg inc out ljmp mov sbb dec push xchg lret jg sub lcall cmp dec icebp imul add outsl and ss sbb loopne jg pop jmp and dec push inc mov inc dec imul jl push iret (bad) jg or jle mov test jl or and repnz dec jecxz stc and test fistpl cmp das push ja push xchg mov add loopne jg push xchg (bad) ljmp cwtl out jno mov ret das cmp push in adc adc (bad) in mov mov push pop mov pop js test and in pop fs pop mov and add aas ficompl push inc out shr inc cmp shll mov test push jbe int gs js adc cltd jg rorl stc xchg repz jbe mov mov movb divb jge dec mov sbb pop jle js les call jmp dec push sti (bad) call mov jg xchg iret jg jp xchg xchg mov test mov nop or mov out outsb (bad) jb in idivb jg sbb pop movsb or jg mov jl cli inc push xor mov dec jg into cmp jg mov add jg loopne dec setae inc jg or pop or test mov sub gs (bad) push sti aaa into push cmpb push out sbb pop and jg idivl sub int push loop addl aam xchg mov cld jb xchg add hlt dec test dec bound fwait mov jg lds std stc mov sbb in jg insb cmpsl jge push mov xlat cs sub jg hlt (bad) xchg xor sub mov push dec pop and xchg sbb sub (bad) xchg jge outsl ret mov es (bad) cmpsl gs rorb jg cli sub lcall test inc mov jg xchg lds clc (bad) cltd mov icebp shr jle jbe repz mov xchg dec dec push adc ljmp aad sbb inc inc imul or inc rsm jg out and push jle popf xchg das mov hlt lret inc push inc enter ret cld test dec push jg ja push mov mov mov mov sub outsl stc sbb aas pop lret cmp dec addr16 cmp jecxz pop pop xor jg add mov jg sub xchg arpl cmp fmuls push ljmp jnp js out push cli idivl jg adc xchg or test lcall ja scas cmp jmp cmp dec fmul popl pop fbstp aam daa xor sub inc subl lea (bad) lds test out inc jle pop scas inc aas divl mov inc pop sbb xchg adc gs pushf mov mov out leave cltd inc sti (bad) mov pop mov pop aaa jg push call enter mov fdivl mov xor cmp jg adc out clc test (bad) pop int3 ds dec les xchg inc fdivl jg add ja hlt inc mov pop idivb cld xchg jb jno jg arpl fcomps push push es pop mov mov sbbl dec rcll dec imul sub mov mov test fwait popf dec shrl mov or insb pop mov fstpl fisubr (bad) je jecxz clc lahf (bad) idiv and jne cmpl xchg pop das push or lret enter pop stos cmp int3 pop mov in lahf pop lahf cs mov movsb mov das data16 and mov leave jg mov call lock arpl mov popfw add sub xchg pusha lcall scas dec mov cs or jg mov pop fnstsw push xchg cmpsb into pop repz (bad) pop push ds std jg sbb inc daa pop push js pop stos cwtl jg adc and adcl push push (bad) imul jo mov cli jl dec out rorl jecxz push inc add es (bad) pushf fndisi(8087 xlat pop sub loope inc int3 ss adc cmp call stos pop mov sti jg ds outsb jbe into lds ret std pop pop jmp sub fsubs push push lea or ret jg aas pop test sbb mov jmp outsb imul pop push fisubr repz icebp push lods jns sub sti aaa (bad) ljmp insl mov and sti (bad) xor pop fnstcw or mov and insw and loope inc pop lea mov mov cmc pushf fidivr scas xor pusha notl loope mov push xchg dec sub mov cmpsb adc mov mov inc addr16 mov and xor inc in (bad) pop jg mov cmp sbb ret (bad) dec shrl sbb jg dec mov cwtl sti testb pushl sub ja jg int3 aam call xchg and outsb jg or test insl jo xchg pop jmp ret jne popf pop cltd fwait dec ds popa adcb adc lahf inc test pusha mov fldz stc jno push xor sbb stos cmp ds je add mov xor mov ret add into fisub mulb inc inc cmp mov push jg or pop jg aam das mov lds add in cmp bound dec jg es (bad) jae pop scas jg loope jp jle (bad) jg fcmovne (bad) push xchg jae jg les cmp inc idivb loopne fwait inc xor stos hlt jg (bad) (bad) nop push loop loopne jg xchg (bad) or or lret jae sub jle xlat push jnp loope roll lcall jg outsl dec scas push pop insl jnp mov shrl sub push jg int3 movsl sub stos xor sahf jg mov hlt xchg lcall jg sbb sbb sbb cmp pop sbb add xchg jae and mov dec or dec stos mov dec jne push jg sbb ret movsb daa imul add packuswb inc dec cmp or and mov adc push pop push imul mov ja mov mov (bad) (bad) aaa push jecxz (bad) cli pop ret jg cmp push jbe mov (bad) mov leave jg inc subl pop cltd cmpsl mov ficoml mov dec jg es mov fwait jp and hlt push mov aas jae pop aaa dec jg mov in mov popa in push push sarb loope and jg cmpsl (bad) bnd mov repz pop push mov rdtsc cltd dec (bad) popa mov cmpsb push sti xchg dec cmpsl jecxz jg mov vmovdqa arpl fimul jg sbb sub adc mov into sarl insl mov test jnp dec ret push jg aaa adc cmp and push stos jp test (bad) jmp fildll xor xchg push xchg out jg pop xor or push jg jbe ficom dec cmp sbb lahf dec sbb lret mov mov and push js pop cmp mov push jg cwtl pop jae call repnz pop enter push jg pop mov aas jae shlb inc inc hlt ret jg das inc inc pop push jge mov iret mov jg and lods jg jno adc loop mov inc or clc sbb and jg mov movaps (bad) inc jp cmp outsl or loope inc es mov mov jg pop or mov (bad) jno inc jg leave xchg add aad addr16 or cltd out js mov xor int3 std inc (bad) xchg mov xchg (bad) in test imul out loope pop mov adc cld les fidivl mov call jg jmp adc not fs mov incb or dec mov lret loope jg xor pop (bad) mov or xchg cmp pop out push xchg dec xor sub jne adc mov fisttpll and push into jg out mov loopne cmp loop adc add daa mov inc push loope xchg fnop sub ret inc cmp pop xor arpl xchg xlat repz jo or js and inc jne inc or mov mov jg (bad) mov aas cmpsl outsb insl mov push dec std icebp loope cmp (bad) lret ljmp jmp jecxz and jg mov and sub outsl mov fdivrs and jmp mov jg xor hlt dec sarb jns test flds jg (bad) (bad) mov pop aas cmp mov sbb jg fwait cmpsb add cmp fbld and mov jnp mov inc push shr jg and aad sub daa mov out xor jg fwait leave jnp sarb jg setb inc adc (bad) jno int3 dec jg outsb pop push pushf stc and jg push arpl mov mov popa jg jns sbb (bad) xor jecxz sarl lock dec jg xlat mov icebp jg and fcomps and loope jg add aaa pop dec cmpl push mov fwait adc push mov jmp ds cmp cmp inc je jg mov outsb mov fnstenv frstor jg notb (bad) mov lahf pop jmp fwait enter jecxz and jae imul xor out clc cli push sub inc in addr16 (bad) mov aaa pop daa outsb sbb jg sub insb jg gs imul jg mov cltd add fimul vmread movsb arpl add stos adc sub xrelease mov sbb aas jg test xor lret jg mov std sarl outsb or jg xchg aam in testb mov and xor addr16 jo or push outsl popf mov cmc push mov mov adc rolb jle jmp int3 loope sub cmp mov sub jne sub push mov mov loopne jg outsl repz lds jg pop xor jg imull rorb jo in cmp jle aad rorl popa push pop hlt out imull jbe jg mov cltd imul stc nop dec lret jge inc lahf add aas mov sbb inc fadds xor cwtl imul repz mov pushf sbb jg xchg imul iret push or mov mov pop jg xor ret inc sbb add cmp cs outsl jb mov mov scas push jg ret sbb jp jg out xchg inc xor inc loop push repnz lcall jg pop mov movq inc (bad) mov xchg pop inc jg or add xchg sbb cmc (bad) mov ror sbb mov mov aas mov jno mov (bad) jne lea xchg pop repz and xchg jb cli jg data16 push push pop and enter mov dec add sarb ret (bad) pop cmp xor push push lods pop mov add add jo pop imul pop (bad) jg ret movsb cmc and sbb sahf aas dec pop mov and (bad) mov jg sub push adc xchg aas leave sahf ljmp jmp loopne fxch movsl pop call cmpsl (bad) pop pop sti mov fisttpl data16 aas xor aaa inc jbe dec mov (bad) xor dec jns inc inc ss mov ret repz outsl adc pop inc dec cmp mov cltd sbb jg jae xchg das lret (bad) stc mov inc adcl fs (bad) into dec cs cld xchg pop sbb xor leave lea jmp fbld jg rcll pop mov fstps roll jbe ss jg pop movsb mov test cmp fistp jle ror std cli stos mov jg mov into in test push inc inc push jg inc inc mov jle dec movsb out inc dec mov fcoms mov scas mov xchg outsb pop or outsl mov jg mov cmp mov js outsb fistpl push xchg pop pop popa inc push jae fdivrl mov xchg mov lods jecxz dec add std movsl jg test sahf mov insl xor sbb mov mov inc jg fiaddl jnp out jno ret push clc mov dec jae lahf jg inc dec leave mov nop out (bad) test mov mov mov gs js rcrb insb dec stos mov jne adcl jge test imul push pop ret mov jg inc call xchg push dec jg jns jge outsb push jg faddp mov dec xor jle inc aaa rcrb mov ds jle xchg and adc jg pop icebp xor aas xchg je cmpl nop pop arpl loopne (bad) fsub divb test pop clc jg adc lcall cmp sbb mov inc mov int mov nop push cmc stos (bad) lret mov dec push push dec movl popf icebp and sbb ja sub notb mov js add lds jg push fwait test jb dec loopne pinsrw mov jg sub dec xor pop mov cmp in les call leave push jg add push jg stc das inc je or jl popa lods inc std jo decb cmp jns leave push dec and jg std cmp jg inc or mov jecxz jg pushf cld fildl pop sbb repz test arpl lock insl fwait dec cmp out jmp (bad) ds into push xor mov (bad) mov add sti popf test inc sbb add inc pop mov aas add cmp addr16 sti lods and push xor shrb icebp mov movsl mov push fwait xor aas pushf movsb addr16 dec rorl pop aas sbbl inc cmp int3 push icebp mov mov aad xchg ficom sar mov in adc lock loopne mov xor jg xor cmc mov inc mov xor mov inc cmp adc adc int3 sub xchg mov leave sub add sarl xchg sbb mov test out in popf xor addr16 xor ret xchg insl or negl fs fidivr jg fs out sub jg sub icebp aam rcr jg fcomps lcall dec xor icebp into insl push adc mov or cmp xor rolb test mov sbb jg loopne xor adc xchg mov ja jb or out jo pop jl test jne ret xor in add add mov into fstpt ret add (bad) push inc mov xor push test mov movsl dec rclb jo in gs sarl adcl ds cmp inc les mov jg repnz lock mov push xchg mov bound cmp stc (bad) sbb ds ret (bad) ficomp int3 les je hlt nop cltd jg xor (bad) cmpsl pop pop enter inc pop mov and data16 pop popl push test or lods mov add ja mov mov into lds (bad) call mov mov jg stc dec inc ficom push push fidivrl add ja mov lods push push fstl mov push sub test pop scas (bad) xchg jg sub pop push mov inc sub jp repz mov jg sbb dec insb stc gs pop cmp xlat inc icebp or jg inc mov scas jg int3 xchg sbb lods loop jg push xor movl das jo inc sti add lods mul push mov imul inc jg das sbb lcall clc sub or inc stos mov pop dec popl (bad) or dec sbb je mov mov in inc pop dec mov xchg cmpb mov mov add mov es int3 pop mov (bad) aaa jg (bad) lock stos in jl gs inc cmp ret jg mov es jne jl push xor into leave adc cmp test sub in add pop (bad) aam push imul gs mov into xor jg cs pop leave pop xchg jg adc jbe loop idivl les and mov push scas movb loope pusha add sar lahf pop or jb mov jg lcall jg fistpl stc (bad) stos aam movb cmc scas sarl in xchg push dec aas xchg test testl push insl jmp pop and mov pop fcompl loope jg cmc popl addr16 jmp repz adc ss lods mov xchg cmp scas mov xchg dec decl or andb cmpl xchg sbb negl arpl lcall fiadd sub jg adc mov es pop fcmovnb and jg xchg push daa lcall jnp mov jb dec scas fs ret jg push das mov dec imul lret fldln2 jne jp mov sarl sbb jg inc xchg sbb jecxz or cs imul jle cltd xor rolb xchg mov xchg jg movsl pop (bad) sub lds aas int jle dec ss mov cmpb ljmp jle out dec inc cwtl xchg inc jecxz xchg mov ja jg out xchg xor (bad) sahf xor cmp into xlat mov inc pop ja jg inc add add jg fprem1 cmp jg adc cmp and jmp push mov loop and jno mov jg mov mov mov subl sbb jg mov out stc shlb mov cmovl mov cmp (bad) mov jg sbb shrl fmull ss insb and lret dec pop ja (bad) sbb cmpsb jg adc jne xlat push jg xchg mov jl mov std pop cwtl outsb mov pop rolb loopne sti xor scas bnd aas inc cmp popa mov xor stos int push and icebp inc test idivb lcall jg aad mov int pushf pop outsl dec xchg repz lods sbb dec mov fstpt in ljmp out mov out cmpsl mov lds or int cmc mov mov mov rolb icebp push bound lods and sbb xor sti cmp jg add and movsb sbb popf int fmuls es mov in cld pushf jg jno loope add stos inc lods mov aas test mov push out jg dec in stos in push xchg jle mov lahf xor (bad) mov xchg mov jg sub mov pop les outsl sbb test jg fnsave outsl and push cli sbb stc je mov mov dec sti adc mov push lock jp pop leave pop jmp in cli push gs scas sbb pop push sub or jg jl mov into dec cmp unpckhps dec mov jg push js sbb mov jbe fbld sbb scas jg cmp xchg (bad) cmp adc pop data16 push jg (bad) cmp mov jg pop inc or (bad) xchg shll sbb cmpsb enter stc pusha aas mov (bad) sub inc imul mov pop mov jg mov sub sub stos scas je fdivrs mov push pop or pop fildll or fnstcw out xlat (bad) add out cltd bsf ja leave data16 mov loopne outsl jnp xor lret test adc sbb int outsb push int3 (bad) das or inc cs lret jl mov cmp jg adc clc arpl fs push jbe movsb sub push inc xor test decb syscall faddl cltd lahf outsb jg and xchg add jle sbb loop jg frstor fidivrl push jne (bad) mov cmp fucomp lods jns int mov cmpsl jg (bad) je mov cmpb inc pop mov inc cli jl jg jecxz push xor ret pop mov stos xor dec jg imul mov lahf mov fstpt aas lods xchg (bad) jmp dec cmp pusha fdivrs sbb repnz clc test aas sub sbb dec cwtl fnstsw jne sub inc or mov shrb pop dec jae mov jp loope mov in jg mov pop std aaa adc dec aas or fisttp dec (bad) push aad pop in or push sub das scas adc mov sub shld dec fimull adc dec adc lahf aad popl ret jg lds out pop jb jg fstpt push push test mov test out loopne pop sarl inc add fstpt smsw jg adc lret push xchg jle pop flds pop arpl jg dec mov jg and push clc sub sbb jg xchg popa pop (bad) dec shrb fimul fdiv mov mov push push data16 jg mov xorb test mov sub inc add push mov dec lahf cmc aas jb popf push aad mov or aaa sub popa sub outsl dec mov daa jne rep lock fwait pop lcall jg push (bad) xor arpl es mov pop pop lock ret push and mov jg mov push aaa out aam (bad) sub decb fistpll add aaa ficom test sub aad mov lahf pop jecxz lds cmp dec nop add arpl mov std and jl xchg sahf adc dec pop arpl fwait mov icebp das inc push mov mov sarl clc shlb jnp test or mov push mov adc idivl adc mov jg call les adc std sbb jb outsl movsl call pop out and mov xor dec mov push or imul enter scas jmp jg outsl flds push stos jl mov xchg jg popf out lahf or mov scas or pop xor push pop inc and jns (bad) dec insb mov fadds sbb rorb xor aaa pop aam and repnz ret outsl mov xchg inc aas int mov psllq stos jg mov mov inc jnp (bad) jg into pop mov inc je push lea (bad) pop (bad) out jg ljmp cwtl cs rorl xor or pop jg or jmp sti jp jg or in insb jl out xchg outsl pop lahf fidivr push push enter aas add or dec and jg call fwait repz mov xchg mov cmp pop push cli and (bad) out inc mov scas push jg js call pop xor shrl test jle dec fistl mov test mov inc xor inc xchg or mov push out (bad) push jg xchg int3 stc imul sti cltd mov js aas xor pop in mov out jge lods jbe jg adc jg cs sar jno mov jo sub lahf jg mov fsubrl jg inc mov dec ds aas xor cwtl dec data16 jg mov add pop daa xor adc xor xlat jnp jl cli push sub sbb mov cmc inc outsb dec sti rorl mov cmp dec testb punpckhbw dec (bad) lahf mov stc dec add mov adc jg xlat jb xchg pop xchg rcr movsb adc (bad) (bad) gs jg cli ret pop pop loope (bad) jg push pop xchg bound dec xchg inc out inc (bad) fdivrl sub push test lds bound aas cmp imul movsb pusha leave in inc pop xlat cmp jg cs and loope jnp jp lods (bad) xchg js mov add jg add insb sbb add inc fsubl jns mov aas mov add dec cmpsl lret jg sbb js jg inc xchg in xchg in jg mov push jg nop aam and cmpl cmc lahf jg (bad) out push movsb xor xor (bad) repz adc in mov outsl test xchg cltd inc push dec add sub arpl inc jg jo adcl pop jp or pop jg sub dec sarl jg xchg adcl cmpsl mov pushf test jp xchg dec movsl push xchg scas rorl mov ret jno nop xchg icebp aas pusha dec cmpb jg mov sarl pop inc xchg lock mov xlat xchg jg mov xor js test mov jg testb aam jg test movsl lds jg into pop rol xchg pop jg pop inc scas sbb scas sub notl xor daa ljmp cmp in (bad) repnz arpl jg sahf sbb push mov jg das inc arpl mov mov pop bound incb mov movsl mov dec test xor das jg pop xchg cmp push pop outsb jg mov jl and lds fcoms sbb pop cmp add out not mov add add xor mov rcrl cmpsl arpl xor jg and jg jno out pop out push mov in xchg add jg gs mov jg into mov movsb dec xlat jg,pt lret fcompl jne xchg jg gs pop insl jle arpl test inc addr16 sti sbb xorl jg mov imul fidivrl cmpsb cmpsl repnz mov out lcall mov pushf mov and mov lcall cmp dec fldt mov adc push es dec jle fmul repz mov cmc in xor jno push out or dec jge das fld mov aam in push sti pop bound cltd sahf mov ds lods orps dec lods jo loope neg loopne insl adc outsl mov in stc and int3 test or fiadd push jg jecxz inc stc loopne xor in pop add pop inc mov ja add out xchg sti fistpll and pop or lods push mov push sub sbbl icebp pop test and mov lret ja fwait dec inc jg sub mov shr insb cmp push jl dec aas hlt xchg cmpsl incb xor dec dec push mov and pusha jecxz cmp inc mov fildl aad scas pop sub cmp lods add sbb lock loope xchg jg dec out imul sarb xchg ret mov in mov imul fisttpl dec push mov adc pop jl pop lods ljmp (bad) in addl push dec or arpl jge sub mov pop pop fisubl sbb idivb inc fcoms mov add jg inc sahf (bad) dec setbe mov xor jns mov or in pop push mov push jne cmp pop nop sarl cwtl fcoms push push mov insb adc sub test and or ja jg xor hlt int sub add idiv lods jg xchg adc mov sub mov inc insl jb add cmpsl or jg mov clc xchg jg sub lcall mov jg daa or jo mov (bad) leave sti cmpsb vmovdqa xchg sub outsb insl xorl pop (bad) hlt gs dec sub fdivl adc icebp mov cli dec mov cmpsb mov inc push mov (bad) idivl hlt xchg cmpsl rolb jp adc jg dec jns int3 xor stc jg mov mull pusha in cmp push out sub lock (bad) pop mov jmp or dec adc sbb pop inc iret aam mov test xor cmp int3 jg jne lret dec sarl mov sahf bnd xor jno icebp adc jg xchg xor push inc jg jae and sbb sub fwait fs int or fistpll xchg dec adc mov mov gs jmp bound ljmp jg dec mov (bad) jg fidivrl movq adc arpl pop das sub test sub and je add cmp pop mov jg dec jne in (bad) std adc pop and mov pop loopne pop mov pop sub dec mov stos xlat lea imul jg cmp inc mov jl pusha sub dec imulb jg lock add fcmovnbe icebp jg iret and adcl dec push jbe aam push xchg cltd jle imulb cmpsb stc cmp lods lret fldt dec pop mov (bad) sub fisubl lock call (bad) clc mov jp pop adc jmp (bad) dec mov ficompl or (bad) jne xlat sub cmp mov inc mov cmpsl mov (bad) jg jecxz ret adc ljmp or sarl dec clc pop rclb jg out fadd xor or aaa mov jg cmc add mov fldt add xor es adc push jg movsb pop xchg addr16 push jg cli repnz dec mov test xchg dec jnp ja movb sar dec jge lret xchg jg insl lods das push push xchg pop loopne fs jg daa push sub test xor jae pushf jne cmp out mov adc adc decb fidivr sbb xlat (bad) (bad) hlt ljmp add sarb xchg mov (bad) cmp enter xchg lret adc pop test jp popf (bad) adc push ja or cmp cmp dec dec dec mov inc popf jg insb out cwtl and inc mov and jg xor sub mov lds inc xlat dec add out mov lret inc cli lock jg adc or lret (bad) insb or imul xchg roll jg xchg and mov call cwtl jo inc test cmc ljmp out lea inc mov notl adc mov das add out inc addr16 inc mov push xchg lea mov jg pop mov cwtl lea jg bndstx pop dec imul sbb mov aas popf ss inc push push dec insb sbb xor push mov arpl inc cmc inc cli add jg int popl sbb jl xor pop rcrb jg jae push jmp frstor outsb push test xchg (bad) push insl mov jg aad cli loope add or fistl jg xchg inc ja mov popa mov push bound xchg pop jecxz adc push js cmp adc mov jg cmp and push out inc leave jno adc pop inc call andb (bad) frstor push je xor repnz add adc jg push sbb jecxz sbb push in mov movsb aas shlb jp dec push mov inc xchg add inc sbb test fisttp jae sub and sub nop test dec arpl pop mov xchg add daa mov pop add shrl fs adc jo jne ret inc mov cmpsl add jg mov push shl cmp jo icebp mov and stc fisttpl daa jle sti lahf pop pop and clc loop inc lock dec pop nop and jnp mov adc ret lods jg mov fwait (bad) mov pop jo xor mov cmc clc outsb mov mov xor xchg aam ret je jbe aad jmp pop mov scas mov xor test mov sbbl jnp ret mov into jg sub cmp data16 jo dec out das or dec (bad) mov ljmp and push xlat cwtl jg lret shlb jg ljmp jg adc fdivrl push sbb cmpsl into cmp fbstp jo int mov cmpb push mov idiv sbb dec sbb cmp mov lds test push or int3 push into fidivl vmovdqa out mov inc ja ljmp fmull add cmp lds cwtl and dec cmp xchg and outsl fcomps movsb push or jb jg cmp aam sub mov pop add mov lahf add adc insb (bad) (bad) lret adc cli add or rcl and and push mov mov das negb cmp mov lods inc jg push mov mov lds jg xor xchg cmp es in xor inc sbb inc or aas sbb es ret pop inc inc pop mov ljmp pop jg loop mov mov xor test jg mov sub mov movsl pop call cmp scas jg push stc icebp xchg fsubrs lret push cli jg inc rolb add jg aas ss mov add xchg add add pop jg or push test and xchg call dec jg or mov dec pop dec xchg sbb push into jmp add inc not jg cmp je aaa lds (bad) out add push inc inc (bad) jg lret xor outsb xchg mov (bad) decb roll hlt jg pop jl fmulp mov scas jge xor fprem1 pushf push push sub je (bad) mov xchg clc (bad) shrb mov loope cld rorb jg pop adc mov jb pop lret mov dec xor fdivr dec jg ret popa stc jl push rdmsr xor scas lods stc (bad) jmp (bad) jg sar jbe jg xchg (bad) pop subb enter rcrb imul test fisttp jg mov fwait das jg add dec adc je xor bound outsl out jne inc add ja ss jg sub pop and (bad) mov les cmpsb xchg leave jg popa test jbe jp scas pop mov pusha leave in dec loopne mov test dec mov cmpsb or mov rcr jg test jg sti and sti addb push dec das es jg shrb jg or stos jo cmp int rorb mov mov stos adc lret cmpsb dec imul aas xor daa push dec inc xchg scas cmp (bad) jo xorb push push jg adc push pop daa mov fist inc pop xor pushf jg sbb stc out fsts (bad) adc or inc sub jg mov test jg pop insl inc adc jns cli mov dec mov jg pushf loop mov rcrb jp and xor in jg aam push std (bad) popf jg lods cmp sbb lret ret push xlat mov test pop jg loopne dec cwtl xchg es jg add cmp push jg pop sbb pusha xchg lods sar mov dec insl inc inc mov pop add jle jg jecxz ds push push jg lea sarl scas fcoms ss jg repnz rcr or fwait ret xchg push adc pop lds outsl mov jg mov dec (bad) mov jg pop push push lahf cmc inc bound inc lret clc jae push loopne jg push (bad) pop cltd jp (bad) push les dec inc inc cld mov cld daa js pop mov cmp mov push inc dec ret mov add jge ja jg repz cmp sub xchg cmp lods xchg and mov das ret sbb push dec sub mov repz jl pop sbb adc fstpt cmpsl xor jg inc ret aad mov xchg cmp inc push inc jg mov test bound ficom sub sub fbld or mov jg lcall mov cltd sti push dec stos pusha jg add pop mov hlt sarb aad fidiv test pop fs adc inc sar jg jmp cmpb jno imul outsl sub and adc jbe or jno ds lds popf fs mov lods pop dec or movsl push int3 (bad) in pop aam daa inc cmpsl xchg and jno cmpsb pusha pop jg inc xor push xor jg faddl xchg in cmp pop mov (bad) jg mov and cli test add jle arpl mov jno fistp imul mov jg push push stos xchg sbb dec jg std xchg push notl xlat rolb fnstenvs jg adc and rclb ret das into sub xchg ret xor sub or je jg test pop or loope pop jl jg out out push fnstcw (bad) sbb (bad) popa and sarl push and arpl cld cmp add cmpsw inc js fildll daa (bad) pusha jg out push scas enter jg outsl es jg fsubrp (bad) (bad) lcall loopne mov adc sub jg addr16 cmp cltd jle mov pop fistpl and cmp cltd sbb pop outsb imul push jp and mov jo jg sar (bad) lret mov sub fistl hlt adcl pop dec lock pop cmp jg jbe cmpsb (bad) sub lret jg inc sbb inc pop aas xchg jmp test loopne xor in add pop mov sahf inc das loop imul mov jae sbb mov in cs rorl es fisttp adc not dec sbb dec lret jg mov mov xchg jae inc (bad) loop jmp dec and jne sbb jg mov fsts das in out mov mov jg pop fisttpl pop sahf stos arpl rclb and cmpsl inc push bound mov sahf xchg sub xchg rclb jp xorl scas daa jecxz push and movsbl cmc push or push rcl xchg fnstsw arpl mov adc pusha dec and jbe cmp clc outsl mov scas fcomps pop cmp lret inc sti sub jmp cmp inc movsl (bad) fnstenv jg mov dec in lret add mov dec sbb negl jne das (bad) outsl aas dec mov test dec jp sbbl sub push jg xchg mov cmp js sbb (bad) sti or pop cli cli shl movsl or mov xchg push mov mov (bad) and notb inc pushf push jle hlt push lret pop pop idiv and lea cmp pop or movsb add das mov jbe inc add ljmp mov xchg xchg sarl inc imul mov jg enter sbb mov adc movsb ljmp dec adc xchg lea push or add jbe mov rorb pusha pop jg xchg sbb cwtl inc fnstcw iret jo sahf lcall dec xchg cmp jbe idivl icebp cmp mov jmp les or jg ret xor out sahf ja stc push jo,pt adc bound cmpl dec inc pusha push mov xor fidivr dec pop cmp rcrb mov in outsl int3 mov inc mov cmc jnp push mov sbb inc lahf push jle mov push add fdivrl fcmovnbe mov addl dec adc clc pop icebp call int imul jns jnp or stos (bad) push pushf mov jo mov adc push cmp pop pop mov cmc dec pop push and jecxz int inc rolb jg (bad) loopne cmp mov lock repz outsl cmpb dec lea adc fdivrl jl movsb jp ds jg adc fwait jg add or mov mov js push sub sbb pop cltd mov out sub jg pop xor fstpt push iret test pusha aam inc and or mov ja dec sub frstor pusha inc iret and rolb add jg cmpsb mov jb adc cltd std inc jmp or popa into (bad) jg jo add sbb and xor pop mov in cmp or inc lock mov fidivrl cwtl dec jg xor mov jg inc sbb jg adc mov jg or leave xchg movsb lods pop jg hlt and jg xor fisubl fs mov gs jae push (bad) jg sbb fs and sarb pusha jg lret sub pop (bad) data16 lds mov mov jg cltd test jp xor outsl push pop imul ret add enter ja xlat mov dec out fdivs gs jle inc lcall sub pop out f2xm1 hlt jns inc loope adc xor mov outsl imul in xor mov push jne sbb jecxz sar imul fnstenv pop fidivr fs (bad) jg insb cld jno pop mov mov xchg mov loope mov mov push mov iret dec jl imul movsl pop jg les cs cmpsb jnp cmc scas in shlb fistpll cwtl jbe dec aaa (bad) stos jg lock rcrb jg or into iret cmp ds ljmp lea mov mov (bad) mov cld jg imul mov repz (bad) sub insb pop mov and lods mov jle cmp pushf add into or jg and add dec cld dec push xchg outsl mov sahf push pop sarl aad jp dec scas rol jg and fistpl rclb in fcoml fldcw cmp lock notb out inc cmc je data16 mov icebp and mov push (bad) dec clc lret insb push dec jg push cmc lahf and cmpsl lahf (bad) jg (bad) jge nop (bad) push js subb mov sbb outsl jg jmp mov push xor bound negb das stc test jge int3 dec fcoml outsl cmp repz mov jge sti je addr16 add jg ja sbb outsl push in in fbld and mov xchg cmpsl add add hlt ss bound js sub dec xchg ficompl mov inc insl push pop popf jne fcoms push stc jg xor lods jge mov push xchg fsubp lahf jg int pop jnp jg lcall mov ja push jmp sub mov adc mov mov ret fsubrl aas xor idiv shr das dec int dec (bad) push dec xchg outsl outsb test shlb inc movsl inc adc xor jg mov sub dec sbb cld jg dec sbb mov call inc mov adc lret pop mov iret mov jg das pop rcll (bad) cmp dec sbb jbe sub sbb call dec jg (bad) ss mov dec sbb pop jg add iret pop popf sti xchg pop push incb push imul and rolw add jg nop cmp das xor push jg std dec ja aas rcrl pop sbb test loop and repnz addr16 test stos (bad) mov xor mov int sbb jb repz jg ret push test arpl mov imul and adc jg xlat gs fstpt push nop mov js add jno jl jg fs lea test movsl pop test es mov mov xchg and int inc push jge cmpb scas push enter jg clc popf lock out jg inc ljmp mov jl lods cld and adc jle push ss sahf cmp enter into sarb adc icebp xchg sbb insl lds mov add sbb mov inc add add out jg cmp jge jb jg xchg jns pop negb mov shlb dec cmp jg and cs xor loop ljmp (bad) (bad) into or mov int mov xchg sbb jg mov mov cmp jmp mov iret mov decl mov aas inc dec mov sub push lds (bad) (bad) jl lock jg cmp mov inc or or cwtl outsl pushf fsubr test jnp cmp fcomip ror cmp mov jle test les lock mov fidiv fcmovbe stc jg xchg (bad) rcrb divb mov mov sub pop xlat out aas and push dec minps jmp pop inc mov adc sbb into cs and mov ret rclb insl mov das push loope push jae mov imul out or xchg xchg add xchg gs jg int3 jbe popf inc sbb pop cmp (bad) fstps roll sub arpl add adc mov lcall pop lcall dec push mov shlb call mov pop lret fild mov lea jg pop int3 sbb (bad) jg (bad) fnsave aam stc imulb jg mov test sbb out pushf xchg inc rcrb sub adcl (bad) jg jns dec add in mov inc xchg sbb xor aas mov cwtl ljmp movsb ds add mov pop mov outsb mov adc push test jg (bad) in js ret fcmovnu jp push xchg iret fisubrl jg push jmp bnd push cmp jno pop jg div stos (bad) test jg into sti or repnz fwait jg lahf leave test or in pusha sbb add mov mov int add push jle xor movsb dec xchg jne jg pushw cmpsb fisubrl lea gs adc and adc repnz int3 addr16 imul sub mov arpl stc (bad) jg add in rcrl xchg leave mov cmp mov cmp jp fwait (bad) in popa push mov std idivl mov outsb inc add idivb pop mov repnz (bad) or sbb or dec xchg or mov in cmp pop daa cltd adc out sub fisttpll bound jno push int jne icebp imul (bad) cmpsb out mov and popa jg insl jp mov dec ret jg adc adc jg icebp sub outsb push test idiv mov out cmp mov add aam leave and jg xchg hlt roll das sub jno stos lods lahf push push ja pop ljmp loopne icebp fsts sub inc jne sbb xchg insl xchg aas aam mov fwait out inc fcompl jg fdivrs cld loope adc fistpl pop and scas or xor mov sub mov inc mov jg sti xor mov icebp ss add sbb mov add fsubr scas cs sbbb lret add mov mov in add hlt iret jg lock jge sub jg pop inc mov ret jmp mov mov mov jg adc jo add xor dec push add jg adc lock test hlt shlb insb sbb xor lret mov aas mov lret pop fisubr mov inc mov push mov add enter fisttpl push addr16 jg rorb adc lahf ds inc mov lcall adc pushf stos and pop jg mov lock call mov mov dec sub jge hlt add and and push data16 popf mov push jo xlat jg cwtl test jg mov lahf (bad) jg jb fidivl sbbl fisttpl pop stc sti aam lahf jg scas aaa pop mov int3 add pop xor add push pop jno cmp dec orb inc cmp aam xor pop pop adc push push inc xor jl cmp out jg ret (bad) or add loopne gs mov xor adc jp mov jg leave js add adcl xchg mov xor add pop fdivrl lahf xchg pop push sbb inc sti and xchg jp fldl sub mov flds jle and mov imul ja sarb nop push sub jg out mov inc adc jg cmp daa stos (bad) test in lret imull dec and jg test insl outsb jg es xchg pop ja jg iret or cmp scas inc ss adc dec jg (bad) xor cwtl ret inc xor out and sub pop push lea push cmpsl xlat add insb in (bad) ss lcall mov jg xchg jae mov lods stos inc mov push mov test pusha adc fsts lahf lret cltd cmp mov js sahf xor sbb xor push add popa mov bound push sbb jg fldt inc add push loop sbb jg jle ds sti lds int3 loope or pop popf ds call inc jp mov push cmp (bad) aas sbb (bad) mov inc mov cwtl and mov scas pop jne pop outsb pop cld ds push rcrl xlat lods inc jmp jg fldt adc pop xor lahf xchg aas jg loop or andl xor pop pop adc mov jg aas inc pop fistl into jg dec xchg pop mov dec mov pop inc fnstcw jbe or jg loopne and mov inc out pop jae push and jg outsb mov xchg jg roll jl cmp or inc cmp stc lea addr16 aas sub rcl scas sbbl jbe sbb int sar mov lods test xchg inc push push push mov sbbl je test mov repnz or lcall (bad) jae ret mov jl jo setge jg dec cwtl mov jb popa jg movsb pop or mov or nop mov inc jle mov jg cld (bad) mov jg das xorb xchg lret and popa pop jg cltd fwait mov js int3 cmc pop loop stos adc and aas loope rcrl jno aam idivb cmpsl pop cltd jecxz or jg sti (bad) test leave std xor inc mov in mov idivw imul adcl push mov fs mov pop jl adc mov addr16 loope cmp pop push sbb jp and testl push in (bad) jno push sahf cli test add pop jge mov push (bad) ss push pop lret jg jnp lcall jg inc and jg mov or inc movsl (bad) icebp sub fdivrs into ljmp clc test bound imul ja rorl inc pop push les or pop adc push cmp jg aas mov pushf jg xor (bad) mov xor jg xchg pop das mov sti jg outsb les push inc dec jg and inc arpl jg sbbb call fldenv cmp insl mov inc xchg jg and in jg or stc idivl sbb pop jg add fistpll sub inc jbe sbb sub xchg adc fldcw test in imul push int jo pop jb and sub mov negl cmp fwait sub push repnz xchg pop jg rcrl sub mov (bad) cmp negl cld jmp lcall cs sahf mov fwait out clc sub or push sti xor jp add dec jg pop push mov add int3 jg sbb xchg aam mov test push dec or call inc int3 into fwait mov pop enter (bad) jg xchg mov pushl popf and xlat pop sbb sbb mov sarl shrl mov pop data16 push pop jne push (bad) mov repz adc out je jg fcompl xor aas cmp or stos es loopne mov dec lock test jg jmp jb (bad) jae inc aam adc push add xor and enter test cmc in inc inc pop into mov nop dec repnz lahf sti push mulb or test imul mov aam jg sbb cmpsb xchg jno inc mov lret inc xor mov sbb jae xchg mov push jg mov into stos jg push lock mov addr16 mov jg iret (bad) dec add push xlat mov push sbb cmpsl (bad) jg push outsb movl loopne frstor addr16 dec outsb mov loop (bad) or out imul xchg test jg lret outsb cmpsb pushf mov pop pop jg mov cli stc inc mov pop out addr16 sub int3 dec or fcompl add das ds xor jg xor pop inc and adc sbb dec mov jge enter dec lea rolb loop or dec mov mov pop push test inc xchg std pop ret inc insb jg push out jmp xlat pop jg out ret aam gs inc mov rcl sub sbbl pop outsl aaa sub jo push test jg jae mov outsb das lret jg sbb movsl add hlt dec jb adc sub mov cs pop jg xlat xor fbstp xchg pusha jno ja dec jg lods push mov mov inc jg jmp xchg fnstcw push scas push sub sbb ret jnp jg out mov test cmpl sbb imul jnp fcmovb out das xor push pop scas dec add sub mov push enter and js jle sti jg xchg mov jg (bad) int3 enter sbb cmpsb sti les in pop jg int jae xor jg and ja pop (bad) sti cmp jmp xchg inc or js js lea lret cmpsb cld scas aam jg daa cmp pop cmp lahf aas mov lods dec and and cmpsb mov mov jg repnz jle aas (bad) nop or aas sub jg mov sar mov rcrb pop mov leave notl bound xorl adc xchg das mov inc pop daa or inc mov ret out faddp inc movsl jbe mov or mov cmpsl sbb dec inc mov fdivrp call cmp xadd (bad) sub sub mov cmp scas arpl mov xchg and push mov inc sub out add xchg mov add jg push jb movsb jmp outsl jg imul mov (bad) push dec les (bad) jg inc xchg xchg inc cltd xor inc mov dec fadd cmp jg mov in push aad jg push mov jae mov fldl cmp sbb or lcall jle,pt jg popf popa je inc inc ljmp ss jg mov xor dec jp ret push inc in mov inc in ret jg xor repz outsb mov xchg test aam sub sub das inc jg pop push push jg jmp inc stc loope add (bad) fwait scas pop jg jne je jg repnz fildll push jg cli mov inc jg je push and inc gs add mov dec lcall mov xor xor inc xchg cmc jg and dec jle inc jg testb mov mov sbb add cmp dec pop fistpll mov (bad) lret lret mov stos mov pop and cli (bad) jbe xor mov js push dec pop vsubsd ret clc xchg shr cmp xchg popf dec (bad) push jg nop push pop xor or push sub inc pop xlat hlt add or dec fwait pop in jecxz inc push jg cld mov adc ss mov les cli ljmp jg inc dec dec inc daa xor jg sub mov out in jp mov pop mov or in aas daa inc cmp scas inc mov add mov and arpl jg ret xlat (bad) shlb add lret lods add cltd inc mov or xchg test fstpt lock js addr16 std lret adc jmp inc pop mov jg cmpsb mov fsts jo dec scas mov mov pop rcrl and jg inc fwait cs icebp sbb shr repz (bad) xor jg mov xchg fisttp inc (bad) dec mov pop mov sbb xchg cmpsl (bad) enter push jg popa push roll lods mov jae push add cmpsb jnp fstpt mov std push into xchg jg lods aad mov cmp dec (bad) (bad) ret pop pop pop or jns pop rorb sarl ljmp sahf jg mov lret sbb cwtl leave jg or mov stos sub xchg dec dec cmpsl cli fisubrl (bad) lret dec and popf or jg ds adc jg sub imul scas mov repz jg (bad) lahf nop jns jg xchg pop sub int bound icebp pop cs inc and jg xchg and inc clc aas dec mov sub jae fs movsl outsb pop jecxz jg mov jle je sub aas cwtl inc push pop rolb lds and into adc shrl sub xor xorb xchg shrl mov mov lds dec mov pop aaa push sarl insl push push sub sti mov or cld cmp mov cmpsl sub outsb insl idivb movsb cmp mov sub sti jg xor sub push pop jmp mov cmp push jg ja repnz test inc or dec popf adc fcmovbe stos (bad) inc outsb jo push aas dec cmpsb lret and xchg xor in daa pop ret adc cmp nop adc shrl mov fstps push iret dec jb pushw fldl lods jg out pop (bad) inc cmp jg lcall scas leave inc jg sub push mov subb jg (bad) je dec das ja mov jg subl out pop or lcall mov and sbb enter stos jmp xor lcall jnp dec je pop loop ja mov jmp movsb das lcall inc xchg lea (bad) iret (bad) icebp out xchg push mov sub jg,pn mov add cli in dec movl mov and aad pop xchg lds add int push bound fst ss cs xchg rcrb ds dec xchg imul jg imul rcll nop mov jg adc dec push sub and das mov adc rcrl jg lds leave sti mov xor dec dec push sbb pop jg andl (bad) js mov lds test or and jg das inc inc std mov inc outsl leave into mov mov int3 outsl (bad) mov mov jg and fwait iret sti popf pop addr16 addr16 xor clc jmp aaa xor pop idiv pushf rorb cmpl dec in jg stos lods rcrl jg pusha cmp add jbe sbb pop pop pushf cmpl fldln2 or out cmc jg jecxz push xchg mov adc (bad) leave (bad) jg,pn and dec and jg sti lods push or inc xchg jg imul dec in inc test sub (bad) arpl xchg jg ret cmp push pop repz xchg or push test mov mov cltd enter push jg xor jg add je inc rorb xor pop inc sti mov out stos (bad) dec jp cld data16 jp (bad) hlt mov or pop jg pop xor and sub jg in pop outsl jl jg leave test arpl sub aam push (bad) mov sbb pushf inc mov sti add cmp addr16 test mov aas adc cltd jg dec push adc push ss mov mov repz cmp (bad) mov aas cwtl jg pop add fistpll mov xchg iret xchg pushf jg mov mov jg adc xor and mov dec add mov andl aam test aas pop repnz fwait cmp (bad) dec movsb push jg arpl rcrl jne das (bad) push cmpsl aad jg push adc cmp fadd push jg lahf push stc push mov or mov mov mov jge cmp cmc add inc je pop mov push cli xchg mov sbb pop push insb sbb jg xchg mov inc int3 jg insl shrl lock data16 je dec or jo sbb lock movsb lds and push insl jg mov mov pop xor pop outsb lock test notl sti xchg sbb (bad) mov mov pusha mov imul push push mov cmp add das xchg jg cltd add jg gs clc negb and sub out and (bad) jne jl ljmp rcl jg out pop pop dec jg fidivr bnd aas dec dec (bad) iret mov jg mov pop roll mov jnp mov jo xchg fmull push mov stos pop (bad) and lahf jbe mov pushf pop jg sbbb aaa pop repz xchg jp ljmpw push dec mov mov ja add int3 pusha pusha push jg mov icebp dec aam fs cmp popf xchg and aas jp and (bad) mov dec cmc mov js or call cltd and mov sbb popa inc mov call push in jg pop out popl sbb inc inc pushf mov mov cld lahf sarl lods dec aad lret ljmp push loope jb jg (bad) xor inc xor out mov inc or enter pop out jg mov xor xchg adc xor push cmpsl jle cmp inc call adc mov pop gs out sub xchg and adc call lahf cmc jg repnz rclb jg mov movsl nop and decb and pop inc iret xlat xor xchg pop sbb jo loop jae,pt jg pop lods pop pop adc mov rcll sub add xorl push cmp pop push mov cmp dec loopne jns jg outsb repz xor and pop mov mov jg stos outsl sahf sub jmp jg je mov xor mov outsb jg repz xor add sub stos dec jg arpl adc imul xchg lods gs popa scas sarb add or add jne lahf jg pop lret xchg mov lret mov push adc jg rcr xchg sub repnz jg push inc fiaddl mov nop in lods jae adc stc jg out cmp sahf push outsb std std adc into jl movsb lock test push stc pop jb icebp push pusha inc sarl cs inc inc jecxz daa movsb ss icebp ffree dec sub mov sbb push lds popa lods jg push js inc aaa xlat push jg mov std xchg dec lcall ljmp inc lea inc mov test dec repz adc pusha ds pop mov fsubs stc adc clc jae ret mov mov inc call xchg mov sub int3 loope dec pop mov (bad) adc cmpsl ja rcrl jecxz xchg loopw jg sbb or pop mov pop jg insl lea mov cmpsl xor mov mov movsb popf mov fmuls rorb outsb dec xchg icebp pop mov call jg push mov dec out scas add loopne loope inc jp inc jns mov cld inc cwtl dec push sub (bad) rol sub or cmp lahf cmp sbb addr16 cs enter lods mov dec mov cmp shrb aas ret and pop jg mov lods xchg or aaa xor movsb sahf add out push repnz mov out adc (bad) mov xchg add sbb sarb js decl jle adc xchg jge insl jg adc cmp push (bad) or ljmp (bad) mov test jg mov pop pusha jg dec cmp in lods leave insl movsb cmp fdivr lds sub jno stos mov scas lcall mov sbb jbe sub jg pop lds repnz cli daa mov mov jle imul stos lds dec outsl mov inc mov jg dec xor jg dec outsb cmp and and out aam scas jo cmp push nop ss out mov fsubl aas push aam cwtl js or or dec out push push cmp test dec (bad) push mov outsl mov mov or mov rcrl dec hlt outsb shl aas sbb std fild xor fnstsw push loop and scas xor pop icebp cmc inc sbb jg shr mov orl stos bound sub test sbb fisub inc je jg mov mov test ds inc mov cmp pop imul and jecxz dec lcall out cmp fisubl clc adc jg dec lret mov sbb jo ljmp or int xor movsb mov es ss ret lahf add pop inc jnp or imull jmp nop sub inc adc cli jg add (bad) jg cwtl push daa mov repnz not sbb mov xlat mov dec cmp cmpsl mov inc pop (bad) pop loope fdivrl or aad xchg jg addr16 mov divl lahf in push cld aas push or inc cmpsl and add xor enter out push and mov repz fwait int fs loop mov out dec pusha pop lds jg cmpsb or xchg (bad) xchg outsl jne mov xor mov jg jmp mov test add es aad jb popf dec (bad) jge mov sbb repnz out jno fidivrl icebp nop aaa push push sbb mov cld into pop scas jnp jg mov ljmp xchg es xchg adc xchg sbb jg inc int3 xchg mov pop jecxz gs jmp lea push jg pop loope imul ret and jg insb or leave pop mov aas ljmp inc scas sbb xchg dec fildl or fs iret and jge jg sbb inc in lcall inc imul ret (bad) lcall data16 jno jg or sub lock mov mov xchg ja or jg testl jg adc or es ret enter and test xchg pop pop sarb (bad) lret pop inc xor mov xchg stos (bad) dec addr16 jg mov cmpb jbe mov ficompl rolb xchg jg adc movl mov push jbe mov cld lret xor int3 inc dec mov mov in pop xchg pushf fsubrs and cs jno repz dec mov jg int3 stc das outsb sahf insl (bad) mov pop aas into add push cmp out pop cmp stos jg cltd (bad) jo adc jle fisttpll mov or xchg lods mov lcall jg mov lock pop movl pusha mov stos cltd movq push inc dec jg loopne mov popl sarl and movsl jg push xor jg add dec pop fildll xor mov (bad) pop mov jo (bad) jne sti bound xor jae push cld pop mov or mov xchg int outsb movsl jp add arpl movsb push sbb leave call fs pop std hlt pop out sub test dec sbb je mov enter push jg push mov (bad) mov (bad) cmc pop cmp sti fbstp inc sub push add sbb inc push shlb sahf out jo gs or mov data16 pop adc stc (bad) mov aas int3 clc int cmp outsl movl data16 enter sbb xlat pop inc aas inc sarb push test and inc das jg cmp imul jne push leave enter mov push fstpl jg int3 inc lret mov jo ficom fnstcw cmp jb push add sarb jno cmp cli jb sbb dec xor mov addr16 dec pop pushf xor fsub push outsl jle,pn bound mov xor daa out cli jle test lahf stc dec mov pop pushf imul inc jbe iret sbb dec push ret xor jmp jmp jg insl data16 sahf jne and or add (bad) lock push push inc and mov jo (bad) jbe cmp sti mov ret ja lahf ss sti mov pop jb mov (bad) mov popa mov adc mov test mov int3 mov clc out xchg mov xchg shrb fidivrl mov out adc pop xor jg mov mov aam xchg mov lret adc ljmp lods movsb je fs xor jno adc frndint jg and xchg stc repnz inc jno notl push aaa mov sub and jp dec sti xchg jg mov xchg jmp jno js lods js (bad) push jg mov jg fwait dec xlat xor jg fsubrl sti repz dec xchg jnp imul mov inc push inc loop add dec sti pop mov int3 inc movl dec gs mov pop aam xor mov neg xchg mov loop js loope outsl les pop ret mov push jnp stos mov ss jg gs push fcoml sbb push rolb jg (bad) (bad) jo and jg push push sub lods int3 jg lcall jg rcl (bad) pop loop and mov mov adc nop popa pop xchg jp sbb or and mov pop idivb (bad) icebp rorl rcrl cwtl sbb jno mov add mov mov imul ja cmpb fs xchg pusha mov popf cltd in xchg pop jg mov mov jg sub cmp adc push sarb mov fistl jg ss pusha push xchg sbb js cmp push jecxz jg push mov adc in pusha or cld push push repz scas xor mov jg (bad) sub jmp push jg lock loope jne sarb push paddw mov les (bad) movsb push lea and sti dec pop inc push mov (bad) stc cld dec out sub xchg jo dec jge dec int3 mov inc dec in js dec decb out lret add ret scas mov xor sti jecxz inc and pop push xchg jg (bad) pop scas test out fs outsl cmp les mov sbb or in pop int3 adc mov inc sub and sbb pop pop add out and jge mov push pushf dec int dec cmp addr16 fwait and les jg test xchg clc orl scas ds lahf jg mov xchg cltd jg jecxz pop js mov jg insl fild in imul scas or in lods gs mov pushf inc enter cmp pop stos shlb sbb jo addr16 push xor adc test jg sub ret rorb mov lds jne jge,pt fisubr xchg js mov divb leave mov hlt jmp scas mov out icebp push shll pop mov push cld jg mov jg mov inc insl pusha xchg je dec les pop add jnp push jns jge push xchg nop in pop inc pop pop jg sub pop popa mov stos sbb jg dec rolb mov xor jg mov cmp jg repnz mov jg jp daa push mov push inc in iret sti push xor loop jg test mov stos rclb scas sub mov dec mov cltd (bad) out adc lea repnz jg mov add xchg cmp int mov cmp imul jg jecxz (bad) test mov test push dec jg mov and gs push xor test push mov pop mov sub mov ja jecxz inc mov bound push idivb pop into jge dec xor sarb div inc xor jg push sti popa and pushf (bad) pop push lcall jae (bad) cli push xor mov add jg (bad) adc jg mov sbbb cmp xor scas in enter cs (bad) je mov aas push jb test out jae out jg repz mov mov mov pop scas sub popa cmp (bad) or fcmovnu jns mov adc sub into dec cmp push nop inc mov adc pop hlt ja rcl jg jle jl push xor jg pop jb (bad) sub cmp xchg pop aad mov sbb sub xchg pop jg mov cltd xor test mov sub lock jg in or leave ss sbb mov mov (bad) out ror jb inc jmp jg push xchg inc js (bad) mov add fidivrl popf pushf dec rorl mov or mov jg aam mov jg mov (bad) jg lret jle dec rorb popf fsubrl add adc adc imull hlt (bad) or jg imul leave iret test adc test xor jmp jle push jo (bad) divl pop jg insb (bad) lcall inc and jg jmp das xor cmp arpl lahf js adc fstps stc pop inc sti mov jg jne ds sub jl insb popf pop and pushf notb in cmp xor jg adc dec mov lret aaa popa jg ret inc mov inc out jg xchg (bad) dec imul pop pop lret int jo xchg jg and sub push imul xlat jg das hlt pop cmp sti ds repz outsb jg pushfw rcrb adc sti ret mov dec dec lods aam mov repnz jne,pt je hlt (bad) lods mov outsl cmc xchg pop adc add aad sub roll (bad) das std pop and pop repz xor push or adc add pop ret fld ret out enter dec and sti sbb fs dec popf and mov jg fwait push imul xchg js mov pop ret dec mov mov mull dec xchg mov jg and sub cmp xchg xor pop outsb ds arpl add adc mov jg sub sub sub mov cld cmp xchg jg inc js nop inc leave ret and clc bound fwait jecxz dec dec cwtl jae ret out loope decb push inc int3 lcall jp fwait sub inc ds push les pop lods cmpsl clc pop or or cmc pop cltd ret inc jg outsb mov xor dec inc in lret xchg aam and mov cltd mov dec xor add mov in jp in jg xor aaa test add dec (bad) ja in sarl lock jmp sub addr16 jno dec adc mov sub das pop inc bound aas xor and ret pop xchg mov flds xchg add jg (bad) pop lock sub jg call fadd sbb cmp (bad) outsl sbb xchg mov test loope insl pop jg cmp movq and adc pop into cmp jg jmp stos lea jg loop call sub mov pop xchg mov mov stos cmp iret or pop je call mov jg fadd imul mov dec cli pop movsb aas sarl cltd inc das or cs add scas sbb mov inc sbb addr16 xchg dec (bad) mov in mov mov loopne jg jo fldenv mov imul add push fmuls imul pop mov dec push or jg pop in loop ret imul outsb mov mov push sub push jg cmpb pusha dec inc jg call sbb imul dec mov pop insb inc jle mov jb into adc jns inc inc rdtsc push pop jg mov jnp mov sub sub cmp pusha testb push push mov aaa adc fild inc test stc popf lret in xchg hlt jle sbb jg dec sbb or cmc or ljmp pusha ds into fdivrs out push add aas movsb or arpl outsb mov ja mov test mov cmp (bad) scas xor cld dec stc mov imulb and mov jg rcr lods jo scas pop lds stos pop sub repz in cmp mov xchg mov insl pop (bad) cld lret add push pop gs inc jne inc sarb out push ja pusha aas and inc jne xchg inc sbb adc pop andb mov mov xor push mov jae sub mov leave pop and jmp (bad) inc rcll pop mov pop fiadd repz pop jnp test into inc xor cmpsb dec inc (bad) pop sbb sub leave imull xor mov mov jg jno xchg jo mov arpl dec dec (bad) je dec push xor repnz shl mov leave das push mov cld fimull popa lret aas lods sub data16 dec mov jp sbb and jg cs pop lods stos jb jg adc wrmsr (bad) out push rclb jle mov dec js or or aas cmp movsb mov and jg das pop pop ret xor popa lret addr16 lret (bad) jno dec int3 and jg lock enter xchg xchg push ds repnz aad loopne jg arpl enter mov sbb out pop jg (bad) addr16 push loopne cmp sahf pop adc mov cld scas shlb xor xchg out nop mov jg shr rorl pop cmp jmp xor mov add negb inc or test mov scas pop jg fisub jnp xchg inc push inc push jg mov inc jp clc aad inc inc movsb lea xchg lods adcl (bad) and push sti loopne cmp popaw push mov jle sti sub mov inc in insl out mov cmpsb pushf ljmp mov pop jg les cmp push sti xchg pop lods mov in mov notb fstl aas mov mov sbb sarl loopne cmp xchg ret jg adc xor iret sub sub inc cmc cmp ror scas jl pop or xchg hlt daa out call test pusha push jge pop xor push jg test inc shrl jg push or lcall out mov mov (bad) mov dec jl imulb mov adc pop addl dec lea mov push adc mov adc sahf jno (bad) adc dec loope repz cmp fisttp push int3 test mov dec cmc xor xor movsl jg lock mov inc mull shlb xchg jg sahf dec adc jg stos aad test insb sub jg int scas fnstsw jg cmp adc mov test cmp (bad) jg adc sub mov mov jp clc mov (bad) jae std jo rcll pop ljmp loop jae and lret sbb repnz jg push pop jp imul xor cwtl sahf out sub std icebp push in test sbbl jg aad add test pop cmpps xor xchg enter inc pop inc adc pop adc stc xor stos xlat mov leave test sbb jg xchg imulb jg inc scas loop lods aas sbb ret out test dec mov push ficomp in inc ret jg scas mov stos test or (bad) ss sub outsl mov (bad) je mov jb lea pop into jg stos mov flds std lods loope xor cmc jg mov sarb aaa lds jg push lahf fmuls xchg mov push imul push lret jg stos pop cmp mov sub cmp jg sub or jg xlat mov scas and jg sbb mov sbb sti rcrb push sub jg stos out pop xlat jp mov xchg pushf jb cltd lock jg pop hlt stos push sti inc loope orb add sub jg xor adc sbb outsb push mov fwait orl inc push clc lret mov ja xchg insb popl dec fstpt stos pop imul (bad) pop cmp or pop int3 jg sub dec xor xor push dec push adc jg into and imul jnp movsl das jle sub dec repz setge fwait xor and sbb fist inc xchg mov aas jecxz cmpsl test add xor mov xor mov js inc inc fisttpll and pop jg arpl sub sub pop je shrb jmp (bad) lods lods add jg mov adc mov stos mov daa jl divl stos inc jge rorl ret imul dec jg jmp push or xchg addr16 jno stos vmovd push inc jb pop jg das mov cmpb loope xlat jns jo mov popa arpl mov sub xchg (bad) js push dec push jg jnp jecxz fidiv jg,pn and mov pop and test aaa and jg xor in mov push dec arpl sub aas lret lea fnstcw ret mov aas in call jg mov and push sub mov push jg ds arpl xchg jg test and mov cmp mov push icebp aad lock jg xor push jg push rcll lods lcall jo pushf pop sub cmc arpl popa dec or jg adcl ljmp mov dec jle cmp dec cli lds outsl adcl roll inc dec mov or sarl pushf enter jo adc sbb jns aas scas push (bad) xchg pop fstpt push jg je mov jl outsl pop ja or out or pop jg jmp lret dec xchg mov jg repnz adc adc fcomip (bad) jbe xchg pop mov mov scas jg push mov dec scas sbb pop mov mov dec arpl leave jb cmp or xchg movsl cs adc outsb jg jo push pop push sbb jae in xor jg mov cmpsb xchg cmp pusha xor jg bound xor dec pop push jp and jg push sub pop and jg lret inc mov cs aam in es jl scas mov sbb aas jg outsl add mov leave lahf aam dec jp mov and sbb push mov adc ljmp jg mov jge mov (bad) lcall sub xlat in into les test pop jg test call jns jg daa iret xchg aas fdivrp out or (bad) mov sub sub xor pop jg ja call inc and mov sbb mov pop and cmpsb les mov sub data16 jmp xor in jg mov xchg daa mov pop mov inc je adc jg inc scas add fisubl sub arpl and xchg js das pop sub (bad) divl and xor cmc cwtl insb aas fcoms add (bad) or mov jg xlat add pop and mov mov jg mov lahf movsl jg aas dec popa lods mov jmp inc imul mov inc pop mov cmc xchg outsl and fisttpl ljmp mov mov jg adc lods inc jg and out loop lcall sbb pop roll sub pop sbbb call (bad) mov mov xor pop gs mov jg inc xor ds nop jg pop int3 mov jne or mov push icebp inc inc mov (bad) loope adc cld addb mov and sysret negl and jg cmp xchg inc stos aam lahf lea jmp rorl mov hlt and popa call dec addr16 mov data16 gs js sti dec cmp (bad) jmp fildll push psrad push mov jg push dec insb pop sbb sti push pop js fwait leave dec pop lods mov add jg outsb ficoml lahf inc push cwtl jg push inc cli jg rcll outsb jg test mov push rorb sub rorb aas popf jae dec enter push jle inc xor or ret (bad) mov dec jg adc mov jmp out imul pop jg aad cmp cli dec mov repnz aas jg lds hlt xchg cwtl mov add movsl jg mov add popf sarb in jg inc fstpt adc loope fistpll push sbb jecxz pusha push mov inc ja (bad) aas cmp outsb stos dec lret jb xchg stc outsl movsb sub lret mov mov or xchg mov je jmp or mov ret or js push rorl push dec add mov sbb idivb mov in in mov dec jg mov inc jno loop inc mov test and jecxz push pusha mov mov ffreep push jg loopne outsb stos out fwait jg aas mov cmc jg or mov int pop and outsw jg mov aas sbb push js xchg or jg and jge fist jg or (bad) inc dec jg test dec fidivrl lock dec jg sbb mov jg mov pop bnd pop int3 stc xor inc cmc out mov jle xchg cmpsl pop xchg dec and pusha lds jge scas push inc jno loop std adc stos adc jecxz and jl sar adc cmp mov sub mov movl test xchg and pusha adc fildll stc cmpsl inc cmp adc push pop or jecxz mov dec mov inc lea gs fnstsw dec addr16 aad or dec sahf push ss jg cmp sub push mov jnp jbe test std lods jg sub in add and mov int3 jg cwtl cli scas call ljmp inc mov iret fidivrl js jno mov jg,pn loop jp push mov cli xchg pop mov sbb mov addr16 jp inc inc xchg mov push rorb loop ss (bad) mov aaa rolb cs mov ljmp cmp sub mov jg ret incl and jg andl jg call rcll adc ds loope jge dec mov imul pop lea cmp mov mov (bad) pop push fs push cmp push (bad) lea popf addr16 jae xor or sub push imul push sub rolb sbb aas jb std jg enter push fwait ss xor mov jg mulb or (bad) out and dec add push loope mov xor stos pop xchg cmp adc mov daa pop int and shrl sbb jne sbb jg mov fucomp jg aad inc jge repnz sbb push (bad) pop aaa and mov insl push add bound scas cmp mov (bad) jecxz inc scas fwait aaa insl popf outsl dec jg mov dec pop jg cmp mov sbb pop jl xor popf jmp inc jg aam pushf dec daa mov jg xchg dec in push xchg xchg jg xchg repz in mov jmp cmp cmp fwait outsb jo xchg sti push pop jg aas dec test jg inc arpl push fisttp mov and jg fstps xchg sti add aaa fdivrs adc loope aas add adcb xchg inc dec pop enter mov dec cmp jg dec daa fs arpl aas or xchg jecxz je mov mov mov jg xor mov jg xchg out mov je jg pop xchg stos lret (bad) sbb mov enter fxch arpl mov fstsw pop mov cmp lcall jg jnp mov (bad) sbb jmp int3 bound cltd xchg jae mov (bad) mov sbbl inc adc (bad) xor cmp dec or aas test or mov jg push xchg into add sub inc push cmpl add xchg inc std jg adc xlat clc cmp sbb pop or test test cltd push jg je mov jg sbb or das jnp jg jmp and test rcll jg cmpsl fs sub ret fwait aas stos sub or adc ret add loop cmp jae add pusha push cmp jl inc popa (bad) dec subps xchg lcall fidiv ret mov xchg das pop xchg push stc jg aam jb std dec jns movsl jbe xchg and out pop or sbb lret jge or ret mov dec call negb addr16 js fildl sub iret xlat cld sub sahf jg push cmpsb mov mov cs lds pop (bad) scas addr16 popa jg iret (bad) pushl jnp int3 add dec loope jg sahf lock xchg or pushf jg (bad) leave les popf aas sbb icebp insl aam mov arpl push (bad) cmc enter jnp pop shrb add mov mov jno pop aam push ja sub fidivrl cmp pop cmp clc jg sbb ret jg sub xchg cmp fs icebp addr16 mov push dec push incl (bad) sub frstor sbb mov rorl dec xlat test gs sahf push sbb push jg scas negb inc xor or mov icebp jg mov in stos loope jg jo pop sbb jmp (bad) aaa lods ja mov fstps sbb push mov popf jg jp xor fimul mov rol cmp mov xor into fistl adc scas jg and daa inc hlt repz or aad cld jae add movsb dec push dec call mov fbstp scas (bad) xor rorl xchg jg pop icebp pop mov cli inc aas cmp push popf imul mov leave pop notl jp adc jns jg pop mov scas stc sahf mov pushf adc mov inc out sbb and xor repz jg imul int3 mov xlat daa mov inc fisub xchg movsb mov or sub inc clc jg or es (bad) push xchg out mov jg lock insl dec jecxz pop (bad) mull jp xor push insl dec (bad) jg add jecxz ficom mov jg xor push jg pop cmp sub xor aas jge mov xor inc cmpsl daa jg inc mov pushf loopne jg fildll inc mov push pusha jg and or pop ds dec dec pop xor pop pop add xor push pop or jns jl test (bad) clc jmp mov sub pop in fdiv push inc xchg jg xor cmp sarb inc ss jg xor repnz arpl push jg ljmp lock int outsl sub cmp (bad) jb or fcompl push add movsl inc mov inc sub jno or inc push sub mov add and cld lods mov mov dec mov scas int3 pushf pop push xchg ret cli (bad) out mov pop (bad) in cmc std fwait cld jg imul jg ss (bad) cwtl dec pop repz test leave sub and jle push fistpll movsb lods mov jl mov rorb gs lea pop inc pinsrw bound into cmp out aam push adc jb cmp (bad) popf jg aaa (bad) adc push (bad) mov push push xor insb sbb jg imul lds xchg jae jg outsl mov arpl inc enter lods scas add (bad) and lock push mov jg mov rorl (bad) (bad) jp pop xchg cmp jg fcmovne inc addr16 negl aas stos push out addr16 repnz dec cli mov cmp add in mov inc cmp push add rclb ja pusha arpl lods xor arpl sub scas xor add cmp cli pop ret movsl jbe and mov xor dec xchg push xlat inc and int mov jle rcrl pop cli les add pop pushf std aam dec imul sbb jg nop mov bound mov inc pop add jecxz inc ss xchg ss loope jg dec sbb in jg xor pop jbe stos cli push add pusha push outsb jg dec lret mov aas jmp pop pop or je dec pop js aam sarb mov sbb test jp mov lret jmp movsl add repnz (bad) stc dec sbb push xchg adc pop sub out mov test jg jecxz movsb ljmp add outsl lea push cs pusha jle pop ds or outsb nop fcmove mov dec (bad) popf inc test xor (bad) xor add inc insl jg and mov dec (bad) hlt add mov ds xchg (bad) icebp mov and mov enter frstor movsb loop jg fbstp pop stos sub mov sti fadds jg mov dec int3 jg sub (bad) das sti les cmpsl in dec add sub add (bad) aas jmp mov pop jg pop and out xor aas arpl xlat fcomi push add dec pop popf loopne aad pop jg pop in int lods mov jg inc mov cli movsl mov pextrw mov jl xor fnop jnp out jg mov ret aam push push ret and xchg sub mov dec lods mov ret outsl inc adc ret or cmpsl jp or enter jg shrb ds inc shl int3 pop (bad) shr movsl jg sbb test jns sbb mov inc jae sbb mov movsb adc idivb adc pushf jmp sub jg repz aaa xchg imul dec pop jbe insl rolb jg daa (bad) lcall push push mov inc lret sahf mov popa cmp sub mov repz dec (bad) jle xor (bad) out jg stos gs popf inc sbb adc xlat ds dec or mov (bad) xchg inc dec mov mov inc pop in bound push aaa pop mov cli out xor and and add or jg mov icebp jg jge add fbld inc (bad) adc movsb jbe mov insl sub dec cmpsl inc test test mov stos cmp xlat jl or jne push mov les mov jp (bad) mov sub add pop mov jg dec pop sti rorl iret jg imul fsubl stos jg subb or (bad) and sbb ja es dec jg dec int jl add jg outsl lret fimul xchg dec xchg inc ja push outsb adc push cli (bad) jnp xor popa mov ja call or lahf sub iret push jg lods push or es pusha jg popa mov push enter jnp arpl jge add xchg adc aaa loop sub xchg sbb icebp ljmp xor or jg mov adcb imul jg insl lds xor cmp xchg ja dec jg push push push inc rclb pop inc daa mov outsl pop es push mov scas mov (bad) je int jg fsubr and ror jg jo add mov push jp push add sti xor fbstp lea push add jg and shrl mov xchg ficompl push add sub push sbb int lock js shl inc loope jg or lods aam test jg insb adc sbb int jb xor out pop add lds push popf lock jg xchg add sub mov js jg fdivrs push mov or aas loope ja xchg inc ds mov pop lods and (bad) gs push push xor adc mov cmp fwait mov stos cmpsl ds push aas imul std adc jg cli sar mov or aaa add or pop push or mov sbb aam into fidivrl dec insl (bad) daa test int3 cmpsb ret dec (bad) cwtl jns fwait (bad) in push xchg xor dec lods outsb and imul xchg ljmp push mov jg mov sahf cmp outsl dec ficom pop test ljmp (bad) lea outsl dec popf lahf repz (bad) mov scas dec mov mov jg add fwait ror jg pop adc jg out imul (bad) das jg lahf int adc scas sti shlb sbb pop lock outsb cwtl jmp outsl shll lea add xchg jg push or pop fldl cmp fisubrl inc jg (bad) fdivs (bad) in jg mov scas sbb and mov aam in jg cs push add lock arpl jge in nop push xor jg mov ds adc lods jo stos jmp push jno jg jnp imul adc add cmpsl inc and mov mov inc leave xchg pop jg (bad) xor mov (bad) jg xchg mov rep ss pop push and mov test pop hlt bound mov cmp jge jg jl jae push notb hlt cwtl adc (bad) mov aas (bad) aaa js and loopne jg mov jns mov aaa outsl stos push and ss mov in cmp add inc pop jg xchg out sub test jg lret bound shlb dec cmc ficom xchg sbb jg mov ljmp (bad) jmp fldt repnz stos jg daa int nop fsts mov aas pusha cli fildll mov inc inc insb jbe dec jg mov xor adc jnp mov out mov (bad) sbb and lock jg pop push (bad) cmc repnz push imul stos hlt xchg cmp aam mov xchg aaa jae push dec xor lods inc jg sbbl sub jae insl mov mov adc arpl mov inc xlat cli sub jg pop pop popa mov movsbl stc push shr cli push xchg jg std mov sbb pop out add mov gs mov push ja push nop mov inc ds (bad) cmp pop push mov jg dec stc rcr xchg (bad) mov idiv push inc scas mov mov dec mov inc lds insb into and jg pop push cmp divl mov or mov inc pop insl mov cmpsl (bad) jg (bad) jmp int3 push and xor call rorl cmp das ret fwait incb aaa mov pop dec ja test xchg cmp rcr mov bound mov mov in xchg fnstenv and jg sbb sub mov push scas jg out jge das iret sarl repnz je pop in dec sbb adc jne stos add xor jg int call jmp arpl xor arpl jg xchg jno push loopne pop cmp dec sbb daa mov (bad) mov movsl xor dec fwait xchg jg popf pop push push mov aas jmp mov dec push mov jg inc faddl rcrl fnstcw fstl or dec inc jg ljmp mov pop add xlat xabort mov jg mov xor cwtl sahf notb out (bad) add jge jecxz popa and lret xchg test outsl mov sbb and pop scas mov je stos popl nop inc inc loope and cli jg cld add jg xchg xor bound pop mov movsl push jg add fildl sbb stc lcall idivl push roll sbb adc add jg insb and daa jbe jg mov and mov clc xchg and push daa xor adc or (bad) das lret inc push imul jo test loope bound inc adc mov out lea add push dec outsl mov push jg sbb inc inc test jg xor repz addr16 (bad) pusha xor in inc mov add inc xchg pop jg aas cmp mov jle cli shll pushf js ja push je mov xchg inc mulb imul mov into sbb imul mov arpl out popf enter mov in sbb lret pop incb fsubr aam and (bad) jmp jge into or inc cld inc jo xchg sahf mov (bad) and cwtl test jg mov pop mov xor sub mov mov dec gs add xor add mov sub pop adc mov scas jns in out in (bad) or loop out sbb mov into js and xchg sub jg mov es insl jg ficompl pusha jg (bad) pop pop ds xchg jg rcrb pushf icebp mov fmuls xor scas jg push and pop inc dec ret mov push cwtl pusha in jg mov pop mov xchg cmp fwait inc push repz jg xchg jno enter call sub cmp pop cld js les jno sbb loop xchg aas cli push mov add xor int mov xchg mov and inc xor mov mov jg (bad) fstps mov dec fldt or xchg jg stos mov imul jmp pop xlat mov adc xor mov ret xchg insb xlat js les and inc pop jp and lods aas mov xchg dec dec into (bad) fs or xchg jg aam push mov outsl or jbe mov jg loope jl mov adc mov pop inc outsl sub jle fs rcrb or arpl test adc pusha test idivb data16 pop insl repnz addr16 xor loop out sbb pop rcll pop cmovbe xchg jg push dec mov mov jg (bad) jl sbb sbb jg nop and stc jno notb imulb jl loopne pop je call es aas dec pop xchg out mov arpl adc fisub jo jl inc lret inc test pushf push ja push jl inc scas push add out mov jg push jne dec shr in insl inc out sub xor jg pop add jbe push jg (bad) enter (bad) dec and decl push test jp pop mov or pop pop jl cmp add adc mov jle xchg adc jg movb lods sahf sub pop setl jg jp mov (bad) sub loop xchg jg int3 mov sarb inc push pop lods or dec mov push xchg movq push and jg sbb jg cmp pop int jmp and (bad) mov push and cmp sub cmp movsb aas jg stos out loop test jg (bad) dec and js jb jg nop sbbb (bad) sbbl dec jg fs and jnp jg or cwtl mov sbb arpl jp (bad) cmp das cmpsl mov mov mov jg pop imul and jg push out pop jmp idivl push insb sbb inc mov aam test psllw jb push dec fidivrl clc jmp ret and jg push pop inc mov out insb xor mov xrelease jg mov jg test pop movsb insb or cmp xchg not mov loop xchg mov aas ja push imul or adc mov pop out push pop in or (bad) jbe out sbb jns mov inc jl outsb jg popf push in (bad) push mov jne xor lods dec lock inc xor icebp jg dec adc (bad) cwtl jg jecxz xchg dec dec lea and les sti imul dec aaa xchg jg fldt dec push cmp out mov cmp push dec and xchg jg add mov inc jg mov adc popa call lock ljmp sarb sub rclb test mov pop push dec inc sarl inc sub sbb jp jg push in cmp or sbb fidivr leave cmc cwtl mov jle add inc jns jb inc jp dec push loopne (bad) push leave popf mov xor dec std mov out sbb fldcw mov call mov les int3 in xor fstpl std sub outsl aad mov pop xchg jecxz in pop adc daa and cli mov push scas lcall sub aas (bad) jb mov in adc jno ja pusha xchg add lret jmp stos add jg icebp dec cwtl cmpsb sub xor push jg repz fisub sbb sbb lods xor cmp ds sbbb clc sub add mov or push adc test jg daa pop (bad) xchg cmp jg mov sbb jg mov and push push or daa sti xchg jmp dec flds dec ljmp ja dec fs add jg pop loope scas jmp pop pop fistpl and jg stc aaa and xchg mov pop jg cmpsl sbb mov imul fnstsw call and out aam jg add mov lcall jmp pop call rcr data16 push lret and inc cli mov jmp pop cwtl push jg js sbb sti xlat in inc pop sub insb test adc mov sub cmpsl les xor dec mov jg sub or gs (bad) pusha js and sbb push rcrb mov idivl dec cli sub jg xchg cmpsb leave jo roll mov rcll push mov fidivrl jp pop dec xor xor aaa mov add sub ja ret test fdivrs mov dec pop sbb push shr adc xchg cmp stos xor ss xchg jg scas popa pop push mov mov jp fwait xchg shrb cs mov (bad) push (bad) sub jg lods mov mov mov cmp in jg fs fsts (bad) jg jnp aas mov dec cmc mov jg mov mov adc mov jg add leave xor (bad) mov dec in js ficoml into stos lahf call pop (bad) mov pop push or jg push push scas loop lods sti pop ret test into sarb rolb sub sub pop pop data16 mov or push in and int3 push mov add mov movsl cmp dec adc mov mov push mov imul (bad) cmp jg sub pop mov fisub sahf dec pop mov lock mov imul stos dec nop cmc push push jg lahf jne jge loopne cmp aas push pop lcall outsl push fs jnp movsb sti xlat sti sub and mov mov jecxz push sbb mov jg jb in and cli scas rcrb jp sti pushf lea insb cmpsb xor pop pop sub ja or adc sbb add and sbb pop pop mov out sbb cld ljmp push add mov xchg add (bad) dec movsb or insb loop scas fcompl ljmp (bad) jo jg xor xchg mov cmp adc xchg stos xchg dec or mov jne jl or jg out lcall xchg es les mov lock adc pop repz pop divb mov jo sub jg stc cwtl pop clc or and fsubrs call imull xor mov dec rol jg mov (bad) jg std jae push arpl or aaa je jb mov fildl fwait xchg push shrb mov sub push xor jne gs js xor les js inc and repnz xchg xchg test or sbb outsl cmp shr xor int enter inc jge jg movsb mov lahf ret dec jg fwait mov or mov cmpsb cmp mov (bad) cmp push xor adc enter inc or fisttp pop out movsl xchg mov jp push mov pop in scas xlat mov insb inc fdivs jg sub cmp cmp pop btsl sub test inc les sbb int3 fidivl jg sbb fs icebp jbe loope xchg xor pop xchg test cmpsl idivl mov (bad) mov das push imul dec jecxz jg sahf dec std push js jg fs shrb aas sbb mov ss inc and jae incl mov or ljmp pusha cli and (bad) in fwait mov jg xchg push das mov fldenv or xor cli ret sbb jg push popa dec mov lods or cmp jg lock call xor jg push inc xchg or cmpsb mov inc dec pop imul adc roll (bad) jbe stos fstpl mov js rolb pusha mov adc and jb lret lcall hlt data16 fdiv fistp jae sbb cmp lcall inc pop jle outsl rorb ret adc fist (bad) das aas pushf lcall movsb sarb lea mov in dec jg push stos push sbb arpl movsb xchg aaa xchg sti mov inc xchg (bad) movb jg and jno inc fidivr mov cmpsb daa xor lock and sti stos jle sbb ss loope cmp inc leave mov in sub ficompl (bad) jge pop lock jnp mov inc shll pop out frstor mull dec cmp sti sbb ret daa push mov insl ret adc scas mov ret jg fmul (bad) jg xchg cmp push lock lods mov adc inc je loop mov mov into (bad) inc std jg xchg xor xchg mov aas loope ja jmp movsl and (bad) mov dec cmpsb jg in ja adc iret in mov int3 or divl aas stc xrelease jns push push sarb or cmp fbstp jg lods movsl mov js cmp pop test notl (bad) (bad) jae ss lock add jg pop fwait (bad) add test jg out or in inc cmp inc xor test push push jg mov mov jg mov inc sub xchg sub jg xchg in rcrl adc scas xchg int3 cmc xchg cmp arpl mov mov jae scas push addr16 push and lahf adc xchg add arpl popf jg fst or addr16 mov mov bound mov lret xchg lock push pop jg jne aas inc mov jg jnp cmp into imul cltd mov dec leave out pop sbb (bad) cld jg mov gs std call cmp aad ret pop dec jne loopne cmc fildl mov es test mov pop bound and jns or jg cmc cmp jge stos pop rcl adc addr16 inc jl jg xchg mov js clc dec jg dec mov push jg dec and jg mov jp push out mov adc arpl adc mov push lret jg pop dec sub add out frstor inc es lret xchg mov xor or sahf xchg mov or or mov add push add mov test jg jl add (bad) out fidivrl jb inc jle jg xchg popa enter sbb leave xor jg pop mov add ret scas xchg outsl lea test das fnstsw push add bound (bad) sbb xchg jg add pop lahf adc pop fistpl jnp sarb adc aad fnstenv outsb jg jns (bad) cli jne jg das fwait cltd pop orl inc sbb push jg pop stos or cmp pop inc mov fst mov dec jg push std pusha loop mov jg or aaa out pop sarl ret sub insb repz not and push jle insl and iret mov inc lret scas pop adc subb xor sbb sub push rcr xchg and lods jmp xor imul (bad) mov add js add out push mov pop fidivr xor xlat xchg dec clc add mov inc mov fs pop jg rcl outsl xchg mov enter xor cmp mov mov xchg sbb scas jg out (bad) jno xor pushf hlt push pusha mov sti cmp pop xchg imul lods aas clc push sbb and add inc loopne push popf aaa movsl inc scas xor out jno fsts jge lret sar push pop sub mov inc aas (bad) push in addl insb std mov movsb fisubr pop jg mov rcrb pop mov fisttpl lret cmpsb ret pop jg mov adc push sub orb dec dec sahf mov sub subb ret or hlt aad popa sbb scas out js push int3 ret sbb cltd jg ljmp bound mov rorl mov loop and jae ljmp xchg mov mov push pop sub lea xor out pop loopne jg (bad) test cwtl fild mov mov xchg inc jecxz je or mov test sbb jg xor andl popa jp sbb cli push pop or neg cwtl and inc dec call scas sub mov mov mov sbb mov movsl mov xor ss pop jno (bad) mov jg jle push cmp push sbb or sbb jg adc xchg jg,pn cmpsl mov xchg leave mov push mov jg clc sub gs inc jg sahf loope or cs sub subl mov icebp jl or outsl cwtl or xor incb (bad) push rorb push mov scas jg pop ss mov into ljmp rolb lahf jg mov xchg dec int jg pop push cmpsl movsb (bad) pop push jg ds popa rcll jg add mov jg aam negb push xor mov jb lahf mov aaa aam inc jmp jae xchg adc lret std es mov inc dec pop icebp mov outsl mov jg imul loope adc scas js mov loopne iret cmp sub mov (bad) inc pop push mov mov ret mov xchg jg daa cmpsb loop push mov jg xor ret movsl add pop xor jg fstps stos jg xchg cld dec adc push cmpl gs aad sarl aas incb xor outsb sbb xor (bad) and mov ret scas sub mov rorl adc in loopne push dec jecxz rolb sti xor mov shll ficomp push rcrl inc or decb inc inc sarl std and inc and mov jg insl cwtl mov xchg or push shlb sbb das jg pop (bad) cmp scas imul mov sbbl jecxz js jg cmp mov sahf test jmp sbb sar rcrb outsl adc jg cld ss mov adcl cltd mul scas push xlat xor in jge jmp pop dec gs fisttpll nop push cmp je jo fwait sbb sub add andl add lock fucomip les div outsl pop push lock pusha jmp push jg push aas adc mov pop lds mov daa sarl gs scas dec mov idivb sbb cmp cltd mov jnp cs inc aad imul sbb stc push and icebp pop cmpsb jg cld inc sbb fisubrl ja (bad) (bad) jne mov sbb sub subl lret mov (bad) dec lcall ljmp fisttpll push les popf jle loop sbb and mov jl jae pop idiv lods iret push push add push jg dec scas jnp aas mov inc fistp (bad) mov cmp xchg insb push stc leave or dec (bad) cmc mov repz cmpsb stc mov jae cwtl jg xor jle jmp cmpsl mov ror mov mov jae push adc les jg jp out jb fstpt cs pop push fldl2t ret xchg pusha in xorps out (bad) dec mov jg pop xchg cmp scas inc xchg mov loope aas out add cmpb out jae int negb mov fsubrs ret dec xchg jg fist adc cmpsb push mov pop dec mov icebp addr16 jnp jb jecxz or shrl jg or imul inc in sbb inc xor pop ret mov xor mov jecxz fiadd push jg mov imul ret (bad) int dec ds stc rcrl push fs cmp sbb iret add push je inc loop inc (bad) movl push arpl xor aas sti lods sbb xor jae push or sti mov (bad) or sarl in push aas or mov cli cmp jg xor push (bad) iret clc lods dec fistpl and stc jg pop mov movsb mov adc dec add xchg dec dec aad in dec lods jnp call cld cmp dec mov repz scas imul fwait jecxz adc sub mov pop call adc jno out mov fstps aaa fcmovnu rep mov lret lahf mov (bad) out inc sbb out and sbb push movsl dec pop add push pushf jg pop cmp sbb jg test mov mov inc add (bad) sti inc icebp jo outsl in mov lahf jg imul mov pop bound sbb push (bad) mov sbb ja xchg movsb inc mov xchg les xor outsb int push jo jb push sbb cmp jg ds mov inc mov aam jg mov mov push or jg pop es adc fnstcw roll pop in leave add cmp fucomi gs insl push jg lds insb push and (bad) and mov ret pop getsec loopne xchg pop outsl fdivrp jle and idivl repnz or xchg pop fisub pop int mov addr16 lret insb xor adc (bad) xorb rolb nop adc in cmp or mov insb add das dec addr16 pop stos in jg (bad) lcall fnstcw ds mov das push shrb inc dec insl mov loop inc mov cwtl or sbb cmp add xor jecxz out cmp sahf loopne mov sti je shrb cmpsl push (bad) (bad) notl and jne or jg adc hlt mov jo mov les cld add or es jnp in jg popf dec fidivr mov mov sti sub popa ja lods mov inc jg jl (bad) fst inc (bad) out jg push dec inc push adc popf into push scas and outsl in sub sub xor push mov dec cmp cltd jg,pn xor data16 lret mov aad pop (bad) jmp repnz arpl jg xor mov mov lds jg enter (bad) pop push jg jb bound and jg repnz scas dec loop cmp jg dec push mov pop and mov dec jg jo aas adc mov mov sbb mov imul (bad) xor pop lcall bound aas xor push rorl fs jp jae or repnz cmp mov les cmpsl lret and mov (bad) mov jg sub jp flds jg add inc test cmp jg repz mov jbe inc es fxch and iret xchg xchg sbb gs popf call adc lock pop jo mov lds push push push fnstcw mov inc add jg in adc cmovb jb mov sub imul loope jg pop mov add xlat jg xor ss push sub aas fmuls in and bnd aaa js pop or fistpll xchg and dec sub stc mov mov xchg jg lds or adc popa add sarl sub mov cld addr16 inc lcall mov jnp jg out in add xchg fwait loop popf dec sbb shll mov scas xchg jg repz mov outsb imul and sbb (bad) jae dec ja xor int jg push pop mov in les cmp inc out jg fcoml xor mov addr16 sbb in daa push loop adc out fwait mov jmp mov shl aam fdivrs dec sub or jns dec es imul cwtl add ret daa pusha arpl jg jl cmp (bad) jg fdivrp (bad) cltd jg test (bad) jg stos and mov (bad) (bad) adc movsb insb jge gs divb jno idivl push xor xchg sub and aas push fisubr jae fs ja rcll lds add jg cli loope js mov mov adc sub inc mov sti push mov cmp repz or mov rcll rcl jecxz ret xor jnp (bad) int3 jg sahf and mov (bad) insl orl and fimull mov jae cld daa and jmp mov jo and aam ja pop sti (bad) lea fidivrl add inc inc mov out sub pop lret cmovge inc pop inc and sbb xor out mov leave daa dec fsubl inc adc inc or xchg mov jg jno sar lret inc dec inc dec inc (bad) adc or push das and jg movsb rclb stos repnz mov loope xlat leave mov push popa or inc (bad) mov pop mov sub mov daa bound loopne jg sahf dec addr16 add pop and dec jg je push add lods mov mov inc xchg jg (bad) pop fsts in les cmp xchg xor ret testl call ja mov bound push loopne jg (bad) adc shll jg jl mov jg fisubl and aam add aas rcr ret inc fcoms jmp sub and inc cltd jg add bound and repnz jns or pop and jg push stos push xchg add xor das int adc outsb pusha mov call (bad) or add xor push jae jl pop dec sbb mov cmp cmp cltd jg inc jle adc cmpsl (bad) jp push push jg mov lcall sbb (bad) mov pop dec inc repnz xor div push lods popf test mov sar jb or shr lds inc cmp cmc jg push lret jp sub or arpl loopne dec add insl inc into lock sbb add icebp and pop lahf cmpsl sbb jae sbb or push stos cltd in and sti or call aas fidivr xor in mov fnstsw xor sti les and adcb mov scas mov push rcrb xor sti cmpl std insl movsl adc ljmp xor aaa jbe cmpl push mov inc pop fmull jb sarl addr16 jecxz stos jg dec ret aas pusha dec push cli jg insb jne outsl fisttpl ss arpl out bound inc xchg adc imul push pop movsl (bad) jnp sahf cmpw mov int pop inc jns scas xor scas push or into mov flds jg xchg push push inc xchg xchg mov cmpsb loopne mov loope jae mov insb outsb mov xor xchg push cmp jg inc in pusha sub pop jg inc pop push (bad) pop aas mov push pop or test (bad) mov ret cld dec inc inc and out pop icebp xchg imul mov jg ljmp jg sub mov std icebp adc aad inc and je or fs leave mov inc repz xchg jl push pop (bad) scas mov fcoml add int3 push aas push adc dec out xor addr16 jg pop cmpsb add xlat pop add pop xor jne xchg pop jg jl adc or xchg imul or inc dec push fwait push sub stos and xor test dec mov repnz lods add in push sub jg ljmp mov sti stos pop out icebp jg addr16 mov sti in or pop andl jb (bad) mov xlat jg sbb push jg sub sbb or pop pop loop fidivrl cmc mov mov push ror lock inc jg shll mov fisub outsl mov jg fs stos jg addb mov fimul mov jg (bad) repnz (bad) jg call stos idivb xchg xor enter xor pop push inc cmp out stos fs cmp xchg push (bad) aaa mov jg lret push dec mov lock mov push and lods out in jo (bad) (bad) mov add jecxz xchg iret mov jns push cld insb jo jg fidiv test (bad) mov xor imul sbb jg aaa sub lods and aas daa ret add jbe jo imul (bad) jbe fprem mov jo imul mov add shrb sbb lea mov rorl cmp sub daa cmp pop adc lock lea sbb or pusha and jbe xor (bad) lcall cmp pop aad xorl cmc inc adc pop cli inc dec cwtl mov add push adc xor jg cmpsl int clc jno xchg jg nop js push add test call cmp xor xchg jg dec add movsb sub aas mov dec sti notl xlat ss push jecxz cmp xor jno or mov mov lock mov push push xchg movsl lea mov dec push sarl sti dec (bad) mov jo ficomp fdivrs push in lret in mov lods pop fsubr mov sub icebp mov fs fstpt jecxz xor subl mov jg xchg cli adc lods inc jg call popa pop sti aad sarb adc idivl fildll out lcall jg test lret mov popf push push xchg mov xor cmpsb in cmp jg push dec hlt jno aas (bad) push (bad) cmp (bad) lds pop push jmp pushf sub fnstcw adc scas dec jecxz dec push bound lods jmp xor shrb sbb dec sti movq sbb cmpsb mov jbe add or push cmp and lds add outsb test mov push cltd cld fstpl mov and adc xor sti sub int and popa cwtl rolb gs mov in sbb add jp sbb inc jg push sbb inc sub mov cmp stc scas mov (bad) scas push pop test mov sub jg xchg adc out enter pop stc cmpb and dec ret rcrb jns dec stos sbb mov jne inc cmp ds push sbbl push push jg aam cli lret insl loope jg les or mov outsl push push fistp fcompl outsl and fldcw push nop in inc mov xlat dec rcl dec jg fsubrp xor mov fwait xchg rol stos cmp jl cmp ficomp scas andl leave push mov jb lods outsl mov lahf mov ljmp pop arpl sbb icebp sti fwait dec dec test inc inc scas call fs enter mov push (bad) scas cmp mov scas mov out jae pop adc and push xor sti inc negb inc or jge sbb fstpt jg pop sub lcall dec mov xchg sbb cmp stos dec cmpsl push jg jne ret xchg daa in out in orl xchg scas mov outsl mov mov cmc pushf or jg or mov std jg lods jnp (bad) gs bnd jbe roll jg and sub jb pushf pop xchg jg pop mov mov mov mov ds or cli cwtl jg inc int pop dec push pop mov xchg inc push lods cld xor jmp loope popa jmp repz (bad) or ret in sub dec sub cmp inc pop cltd ficompl dec pop sbb mov je cmp dec dec stos or mov aad or cltd inc push jg xor add paddw push push (bad) aas pop inc pushf (bad) in push sbb leave and int3 mov sti jg lcall vmovdqu adc ret fdivrs xchg dec imul in loopne and lods sub mov dec push sbb lds je shll cmpsl mov push push pop test rolb fidiv pop iret (bad) arpl (bad) ljmp aas popf ret or dec and pop insl dec pop jg and adc and sti fdiv orl jg mov push jb lock std fcoml jg xchg fbld or icebp cmp shlb or mov mov bound sahf add fdivs hlt xchg push inc inc loope lcall test pop push in mov inc inc (bad) je dec jl push mov jg cmpsl push scas pop ret inc adc inc inc iret aam shlb mov addr16 adc dec add and push jb jg push mov xlat jg mov adc out push inc push popf dec mov inc or scas lcall sbb inc or adc or repz inc aad inc out out cwtl nop mov inc in add jle adc mov mov pop mov aaa and int3 jg loope adc jns sub dec outsl int sbb jg pop ds or push fistpl pop leave arpl inc inc sbb idivl pop outsb incb aas jno add (bad) je add outsb jp xchg mov xchg jecxz push inc xor jg add cmc lret and js (bad) fwait sub jnp dec out call sub js jmp aas and pop or jg outsb (bad) cs xchg iret scas push mov sub jne bound pop mov jl jg cmc je and lcall mov inc pusha not movb jmp dec enter xor or aad cmp xor scas mov jmp fnstsw out repnz popa insl int incb les push jg mov (bad) fwait sahf pop mov adc jg clc sub add cmp or outsb stos mov pop popf dec mov jg in or fsubrl fnstsw jp push sub (bad) repz cmp cmp mov pop jo aaa iret sarb je sub sbb into in jg cmp sbb jg je (bad) lods mov aas and push repz jo popa jns jbe call sti out push repz lds cmc into cmp pop dec dec div stc and and jl pop jg jecxz sbb mov sbb popf ret inc mov stos outsl add js sbb ljmp (bad) je addb jg cmp insl (bad) enter test cwtl xchg outsl cmp add or xor push out push cmc cld test imul pop ja popa loop jg lea shrl xor (bad) mov fs dec in pusha pop out adc in fbld push jg movsb xor pop add jle mov xchg mov dec cmp jne leave clc push lcall test jg daa jle std inc nop add xchg out pop mov add loopne cmp in or jg inc jbe mov push arpl mov ret out ja and jnp loop jg mov cmp or pop in rol push popf arpl add pop lds mulb mov ja cmp inc std stos sub sti fnstsw mov cli (bad) mov sbb bound mov pop fisubr mov loopne pop jg fiaddl lock rorb ret fistpll lea lret mov jg jp je mov sarl cmc jo and mov mov cmp sbb or xchg xchg sub dec mov jg (bad) (bad) not adc pusha jg xchg addr16 sbb ret push pop rcrb mov icebp std mov push into (bad) aam sub inc pop inc aas jns dec adc xchg add scas sti imul mov push das repz lcall stos mov push std mov jnp iret idivl enter scas adc mov inc insb mov jl xchg bound outsl jg and pop dec xchg fidivr xor push mov in repz mov mov add dec dec dec ljmp mov dec cmp call adc jg popa fstpt jg push aad push movsl jnp jg stc (bad) mov call loopne out outsl sub xor ja lods andb jle jo repnz inc movsb xor daa mov scas sub test dec sbb dec jg xor add pop adc sbb lea loopne fsubs adc (bad) jg call gs jg sbb mov adc dec jg pushf mov cmp pop dec xchg mov out pop mov xchg outsl mov inc inc jle sbb cwtl ja cmp (bad) jg and mov mov xchg inc pop inc ljmp stos adc xor inc adc popa mov push xchg sbb outsl in lcall push xor mov lods push sbb jg sbb cmp shl mov flds jg rclb cmpb sbb dec fidivr pop movsl cmp lock mov cmp push leave jg sub (bad) inc cmp add jb push insb push lahf jg stos aas mov outsl inc add test and jg and imul je jo jne inc xor mov out xchg sub (bad) dec dec xchg lock int3 inc clc mov leave sub cmpl push jne std adc push push mov cmp pop inc dec sbb jle icebp push inc sub lods aas out jg push sub bound cmp jle rcll jg mov nop divl aas jg mov mov fnstenv lods inc dec ja test adc jg inc dec or inc pop ja pop cwtl jne aas mov adc inc jb ja mov mov sub cli jae dec scas jecxz xchg mov sub lds xor push xchg adcl sbb adcl aam negb jg sarl sub push push (bad) cmp dec sbb in or cmp adc inc call xchg or push add leave lods cmp mov (bad) sbb ret mov aam mov int pop mov or js fwait sbb sbb xchg repnz adc (bad) mov scas or inc mov imul inc mov pxor movsl aas mov jns push push dec jge mov xchg clc mov aad jae and mov ret pop adc xorb jae xchg add jne lock mov pop sbb out negl pop inc mov lds dec dec outsb aad pop pop xor mov lock fiaddl adc push add pushf pminsw int jg (bad) dec cmpsl in mov pop jg jmp mov pop xor mov mov (bad) aas mov pop mov outsl stos popf js xchg lea xchg sub pop cmp dec jg and pusha aaa (bad) clc or sub push and mov imul daa insb and push xor pushf aas inc jb test push dec call dec sbb mov ret push cld gs cwtl int mov roll xor push mov div aas (bad) xor mov inc out and setbe pop hlt rclb gs push inc jg cmp int lahf jb adc insl inc lods (bad) pop (bad) sub dec nop repz out daa movl jg or bound sbb aas inc mov je or mov lret (bad) dec es lret mov pop jg mov imul jp adc jle fstpt mov xchg mov nop jg dec fmull shll aas xchg popf mov scas jae (bad) cli enter (bad) mov jno daa popf insb add xchg push cmp gs mov and cmp mov pop push dec dec xchg mov or push or (bad) leave pushf ss std mov in ds jge jg imul jmp (bad) sbb xchg mov jnp jg,pn mov pop sarl inc in lahf jmp jg std popf out negl or aas (bad) mov pop inc sbb jg pop cld std jl xchg jg sub mov mov sarb in jg or xchg dec jg cmp jge loopne sti outsl mov mov inc clc adc daa adc (bad) mov cmpsb outsl popf jmp fistpll lea cmc mov dec rcll fwait sub sbb in mov add jg pop movsb jmp add dec jg or stc jge jmp xchg mov and jg mov inc mov (bad) enter adc mov push jg clc mov mov test inc fidivr outsl add pop jg xor jl sub idivb std jg jo fldt push inc mov int3 test adc je fdiv outsl (bad) or mov cs nop das inc int3 jg push out xchg int push stc push lock gs mov pop cltd call lods jg pop imul (bad) mov sbb lods or jg dec mov sbb ret lods xor sbb lea cmpsl inc cld sbb movsb jg (bad) addr16 cwtl xchg outsl les inc cmc push jg adc movsl push aad insb inc pop ret sub mov jecxz loop loopne cmpsb add add jae cmp insl lods mov cli push pop add add int mov xor mov sbb pop sahf pusha inc xchg dec mov or jl fisubl sbb inc lret (bad) xchg mov dec xor add push inc jg jecxz cmc inc sub sahf mov lahf stc jle mov gs adc mov dec pop int3 jg or adc gs lods outsl add pop fdivrs push arpl adc mov add arpl jg mov mov pop cwtl inc jg pop (bad) dec rol mov mov or add sarb loope jle,pt scas in pop adc inc mov gs mov add xchg pop ret and test or stc dec sub jg jp or mov cs mov test mov pushf inc jg xlat push pop jns out jg xor inc jg add cs sti mov (bad) sbb xor adc xor sahf rorb lahf mov sbb fidivr push xchg les xor lret or jg sub aam dec jae mov and loopne bswap ds fwait addr16 dec (bad) stc in into gs adc lods sti pop clc mov (bad) pop sbb inc ss jnp loope push stos dec and cmp fs inc mov fidivr popf add popa test add enter icebp cwtl lea mov (bad) pushw inc mov push aam rcr ffree jle js inc jecxz or mov adc mov push ja xchg jle jg jb popf ds (bad) lahf lret jg adc hlt js dec cltd jg sub out and jl lods pop jg,pn test sub jno mov xchg lds ja or and fistpll dec aad xor pop cwtl jg out stos mov jg lret (bad) jmp fnstenv add inc pop loop mov jno shll or and lods jg cmp mov cmpl movsb shr jp fstpt push xchg inc dec pushf (bad) fisttpll mov out daa jg in es cs jg nop rorl sti lds push fcmovu stos or cmp int3 pop pop mov and enter sahf fistpll loopne repnz pop push hlt sub adc jg push enter jge arpl test xchg (bad) sti xchg mov pop jns cs add mov dec and jno and cwtl or jmp aas xor mov push push jg hlt sbb jno bound xor lret mov sbb sti push pop pop int3 mov inc popl jg pop adc addr16 fcmovb jg cmp push shl lods xchg sbb jg pop pop imul xor cmp and ja cmp cmp add ret fwait jge (bad) xor jg mov call nop stos (bad) sarl icebp aaa push jns aam imul cmp xor int3 pusha push or inc loope or call jg push add sub loop sub and push es mov push inc out xchg inc add lock sbb call pop out popf or addl out inc push cmp test push sbb pop mov or jg sub mov push out cwtl jg ror mov pop and jg dec movsb lods xchg jnp adc neg jmp and dec imul popf test (bad) jno sbb loopne jo xchg jg scas push xor iret (bad) jg fisttp jg sub nop aas xor sub test inc jne,pt mov jg lret xchg dec inc div sub xchg mov xchg or aad fisttpll mov jl popf leave pop clc inc mov sti add mov aaa (bad) out mov pop pop cs leave dec inc jno xchg popf or aaa es adc movsb and inc lahf (bad) lret pop push pop mov and scas insl inc pop aam sbb shll cmc xor pop jg icebp push dec or mov lret (bad) xchg mov into adc mov jg jb (bad) jbe adc sti push or lret dec clc mov (bad) stc xchg aas cmp (bad) jnp pop cmp mov and punpckldq xor inc or mov imul inc inc and aam push jns jg ja jae add movsl jle pop mov dec insl iret jle xchg scas fimull add mov jge bound movsl fs and nop mov adc (bad) mov out sbbl cmc inc test imul mov cmp sub test mov std js mov fdivrl fiadd ds xchg hlt push rcr (bad) dec lret xor into jg ss inc mov (bad) mov daa push cmp fcmovnu insl jg ret add jne push (bad) jg mov mov scas xor fildll cmp xchg jmp fwait lock dec es arpl and repnz adc pop lods ljmp icebp jo (bad) mov pop cmp add add sbbl popa jg stc das mov cmp pop inc pop sub loopne ds leave jg gs dec pop jne sahf js pop push jg lock in add outsl and inc push pop ret dec (bad) std (bad) push cmp movsb dec mov cmpsl int test or arpl outsl jg stos cltd test cmpsl pop (bad) xchg sub dec cmpsl js jg loope adc push stos (bad) jg jb imul std lea dec add repz scas cli mov pop or mov mov push push test xor insb adc inc out aaa cmp dec and and in ficomp mov cmp inc enter jmp and mov jecxz (bad) pop jne add outsl push scas (bad) jg dec cmpsl stos push or jg push jo push pop aam rol jae rcr std fwait pop das or loop jg dec fdivrs sbb (bad) ret pop jg (bad) (bad) lods in mov inc lcall mov outsl pop jmp mov test xchg and jle js movsb loop jg push repnz je jb das xchg inc or mov jg test mov sub (bad) or jg cs xchg jg ficomp mov imul stos mov daa movzwl outsb jg dec xchg add aaa mov jno je push mov and jo pop std (bad) push mov popf pop inc out jnp cmp push jg mov fnop aad mov cmp jns call fimul cltd push add (bad) out pop inc pop pop (bad) sub jg adc loope jg cmp mov mov ret mov fisub jle mov xor ret repnz inc mov imul int3 test ret pop scas push (bad) jg je rorb mov (bad) sub sub pop or jle and jg out test push cmpsl cmp mov popf jg sbb dec inc jns cltd jg fisubr lods push addr16 xchg fsts push dec jg sbb pushf push dec inc jg lods movsb stos pop addl jne out (bad) aas mov imul outsb into jge repnz pop js dec fs mov imul push xlat (bad) and outsl mov jne jg mov cltd push icebp add aas ret push jno pop inc cmc leave jg dec and inc stc movsb jl inc mov jg cwtl outsb xor jg dec cli adc pop out lcall imul pusha jg adc sbb sarb jmp xor pop mov iret cli fdivs in testl (bad) push test jg cmp jg push decl jg or push sahf aas arpl dec cmp daa inc dec mov adc inc std adc sub and call inc mov cwtl jns ret jg xor (bad) xor mov ljmp mov subl xlat xorl adc and cmp inc jnp mov movsl (bad) out stos pop cmp mov sbb or jg,pt dec fbstp cmpsb ret nop cltd mov inc in test mov mov loope cmc dec out pop xchg pop sahf inc mov jg jl mov in dec gs fnop cmc jg push fwait xor xchg bnd into mov xchg in or push gs out pop jg arpl sbb pop cli mov and ja mov dec pop addr16 push es push ljmp ret push xchg outsl or pop sub or incb (bad) dec fmulp adc dec mov sarb ret xchg cmp pop faddl mov adc outsl cmp and inc bound lcall push jg or arpl add cmpsl mov and or inc pop sub jg sbb iret repz (bad) popf or (bad) sub jg mov mov scas mov lahf inc mov adc jae outsl xor ja lods mov sub ljmp and lea mov pushaw inc add jae adc mov (bad) aaa adc movsl add lahf mov mov jge adc sbb lret jg aas lds and test and xor aaa xchg mov mov fwait ja jg scas fcoml sti pop mov stc aaa mov mov push pushf xchg loopne push (bad) lock mov dec jg addr16 mov scas arpl es pop subl call xchg add mov dec jl mov stos rol dec sbb xor pop popf enter (bad) iret pop jg,pn add mov mov out gs addr16 dec lahf jg jecxz popl cmpl nop outsl jl arpl cmp lret mov mov pop imul ret or ds mov aad mov nop aas xchg es pop popf aaa adc out jg (bad) (bad) xor add dec test sub add fidivrl pop lret dec jg (bad) pop ja pop test decb rcrb outsl (bad) mov inc inc cmc ss sub test jle cmp pop test fcoml adc and dec jmp scas sub jl xor fs lcall movsl lds jae sub rorl popf pop pusha jge dec icebp push push sahf loop cmp ret jg (bad) mov jg dec ret sti pop jg jae mov and (bad) adc cli xchg inc xlat sti incb ljmp in push pop adc dec xchg pop mov push xlat into out je add orl in xchg and push jnp jg dec pusha dec push push cmp pop jg cmp outsl pushf aas jg sub cli jge xchg mov in xor aaa loope jg dec call scas xor and test cmp xchg add mov (bad) xor cmp mull cmp sbb add loop xor test xor aam data16 or lcall loop jnp (bad) push jg daa mov cmc jg hlt pop push push jl cmp iret jle push sti jp in rorl mov push or (bad) mov pop mov mov sub in cli mov in imul outsl sub jae (bad) into sti incl or pop jecxz dec and jae add pop gs xchg jne xorl (bad) cltd popa adc sub lock sti cmp jbe inc jle fs jg mov mov cs popa loopne cmpsb adc stos cli jg rcrb jecxz xor shlb cmpsl inc xor test stc dec int jg (bad) pop pop out sbb das notb jg lea xchg mov inc inc push roll (bad) mov fimull jg push lods loopne inc adc jg jle pop lock mov js pop repnz and out jne fstpt into outsl test fwait pop jg dec push fistpll (bad) arpl mov inc mov xchg mov ds daa jg dec push outsl jmp into loope les scas lahf cmpsb fdivp lds xlat inc mov ja test rcll in jg stos mov xor mov push hlt push or shrb ss cs jg insb inc and popa std jg scas jp sbb call lods jbe jmp (bad) mov fidivrl mov sbb mov xchg andb bound add mov jg pop inc mov jle pop les mov out inc (bad) jae xor scas jo out aas dec push orl dec sub insl adc les jae sub mov adc xor dec nop mov je dec mov xor mov dec cmpsb mov es adc add (bad) jg cmc pop mov test in stc push adc xchg xchg pop out das jmp les int outsl out dec clc fistpll stos xorb xchg adc jg inc test pop bound mov sbb cmc (bad) sub jno loopne addr16 sub stc dec or mov mov jecxz pop mov jl ja es sub test dec dec jle mov fnop loop inc pop inc dec jg inc xor dec aas stos xchg nop push mov cmp inc (bad) jno cwtl cmp les jg mov mov stos cmp adc mov or popa dec jg sti inc das mov and mov dec push add jg loop orl ja or imul or sbb sahf data16 imul into fs mov mov (bad) je loopne cmp pop push sbb bound adc ljmp mov imul jp adc sahf jg mov push rol pop imul repz inc jbe adc pop jmp xchg xchg popa mov insb repz adc sbb xor test aam lea daa jecxz dec and jg inc leave (bad) mull shr sbb dec mov push es popa jo popl insl add movsb sbb dec scas xor xlat jnp or mov jo mov test ficom sti jg pop cmp (bad) jg jmp mov lcall dec aad cmp icebp or add jg xor (bad) xchg mov mov lea dec inc imul dec jecxz mov ja adc adc adc pop (bad) dec dec int3 jg jns and inc mov jp sub bound xor popf jp sub ja jmp pop dec bound pushf push or test push shll mov adc jnp fs jecxz movsb jg jne mov or lcall sbb mov ljmp pop mov mov movsb aad jno jne dec std aas jno lahf pop dec mov lock rolb pusha jecxz aas mov pop inc dec ret std jg mov arpl mov sub mov jmp rcrb pop sub sub (bad) test mov push fistl or rcll aam xchg in sti dec pop (bad) dec mov mov mov mov jl jmp jbe inc or (bad) mov loope and mov push pop test xor or fdivr push lods dec pop rcll jg mov dec addl add cwtl sub inc out movsl (bad) pushf jg test jns push je jne pop dec jg (bad) sbb ljmp jg pop dec sahf imul dec inc addr16 jns and div popf sub jnp nop shll mov push jg or pop call hlt in cld out rclb out or mov sarl mov mov jg or sub and (bad) sbb popf jg sub mov jo fcompl jg (bad) mov adc mov rcrb scas and lods rcll aad test cmp test push add inc xlat dec push or adc dec jae jg (bad) mov inc hlt push int iret repz dec xchg xor xchg fwait mov js inc idiv int3 ret movsb mov jne mov mov addr16 popf scas add jg dec fildl pop xor xchg sti sub xchg jp jg mov jg stos lods add pop js lcallw loope jae cmc jmp dec int aas fnsave and mov pop imul rcll jg test xchg (bad) inc sbb jg movb mov call mov lahf je jg mov push fimul test jno or and (bad) cmp addr16 inc jg dec cmc and out lods (bad) in and ds outsb mov mov sbb add dec push cltd jg insl fwait or mov pop mov test arpl cmc dec jmp adc in popf mov xor dec cs add lahf push cmc enter and movq (bad) xlat int mov mov iret mov (bad) mov xchg lcall insb push sti xchg mov shrb adc mov mov js adc jae push xchg push jg popf add out add fbstp dec icebp inc inc xor or cs push movsb dec mov in mov mov xlat inc or movb pop inc in cmp jg gs mov dec push prefetch insl loop in dec dec xchg inc scas mov repnz jg sti and jo push nop xor lds inc adc fbld lret insb dec push into movsb xor mov lds mov dec pop cmp mov lods shll lock jg adc and xchg addr16 dec xchg sarl xor dec leave mov jg je ret cli jb loope mov cld adc inc jg ffreep (bad) and daa hlt (bad) sbb out jg pop out cmpsb mov jg sub call scas push aaa jg lret pop pop stos sbb popa in ljmp std jg les push cs (bad) jg scas iret fisubl enter mov pop test inc pop cmpsb jno add push rcrl and les or and push bound mov xor call mov pop jl (bad) stc jp xchg jg inc movsl push push daa xor pop rcl jg dec insb and (bad) int3 in lods jle pop and mov jb test imul outsb xor inc cltd mov (bad) leave outsl mov sti sub jae mov sub or js sub jg push rclb mov jb jg or (bad) shll pop in jnp or sti insb mov imul ds or jg pop inc clc jb lods jg adcb jg je xchg fwait jae (bad) jg fldcw (bad) jg or sarl jae fcomps std mov jg je stos or jb mov lods mov mov repz sarb sub outsb rorl sbb jne sbb xor inc repnz mov rcrl sbb aaa mov lods pop dec pushf inc dec adc add sub ds movsl into fcmove fwait xchg jg push popf jecxz jg mov cmp aas int clc shlb cltd jae in jg sbb xchg inc add xchg inc and mov xchg mov es bnd mov sub (bad) or lds jg test addr16 (bad) mov jg jmp in jg cmp in fisttpl push loope outsl push mov jno sub movsb pop inc push (bad) bnd inc gs outsl pop push neg aaa fisttpll mov mov ljmp push and adc mov push xchg (bad) pop jg sbb aam test jg into xor and fldl2e arpl mov pushl clc push jp inc jg jle mov sub lcall sub adc das lock pop cmpsb scas push add mov jg xchg jecxz inc notl jg,pn mov xchg in loopne sti shrb jae ja adcl mov jg adc in sti mov mov jne xchg inc stc jg movsb inc and dec add mov adc test fdivrp adc dec popf rcr outsl xorb ds jg sub iret sbb aaa push mov push pop inc pushl mov mov add xlat data16 mov mov sar pop leave and jnp xchg push aam inc fdivrs dec cmp pop push (bad) dec sarb aad arpl xor fdivrs inc fisubr mov (bad) pop dec add pop test jg stos loopne inc push repz mov enter dec into dec mov push int outsl xor jno cltd mov data16 sub sti jne ds jg inc add pop inc or popa ret mov dec jg push jne or jg addl push jg arpl push jg sahf xor scas pusha mov jl inc ds mov hlt jg jne push in divb call (bad) (bad) jg les sahf inc jae mov pop outsl enter mov cwtl push jg pushf les mov cs jnp mov and mov stos pushf js sti lea sbb inc xchg add lods cmp dec (bad) xor push pushf add or xchg test es das adc ljmp arpl int outsl jecxz push gs cmp mov loope movsb mov and hlt push outsb cmp pop scas out xchg sti jnp faddl inc jns lods push in jg outsl popf clc cmpl or mulb popa in xchg pop add in andl jb movsb inc jbe int3 insl jg ret fcompl sub rcrb testl xor loope sub cmc sbb sub popf das fcomps fstpl mov pop test lock pop pusha mov (bad) lcall addr16 cmp mov ja sarb je in jg aas out jge stos mov lods addr16 pop pop inc jg (bad) or stc mov and test dec sub jns jmp mov ja jo jne testl jg jno inc cmpsl push stos pusha mov adc add inc ja outsl jae dec jl cld jmp out jg push gs and jg xchg mov ljmp (bad) jg xchg (bad) push (bad) lret mov jmp sub testl dec gs (bad) in jg add call sub insb movsl stos (bad) repz mov pop mov mov jg add jns mov dec mov jge mov pop fist mov call pop sbb cmp jg add fisubr xchg clc jg out sbb inc mov pusha cmp xchg arpl hlt jg sbb sub jg push imul (bad) sub mov addps xorb daa mov adc fsubrs jo xchg ret test ja int pop inc lods sti xor mov and inc push fnstsw push (bad) aad jg stos xor ficomp mov lcall fdivrs or (bad) push xor test sbb iret xchg mov xchg and jno (bad) dec inc or mov (bad) lds and call push jg,pt fidivr xchg daa sbb dec sub popa jg jp or push mov mov pop imul out in outsb jbe loopne jg mov inc mov lds out pop (bad) popf push scas jg sahf add cmp shlb push insl hlt jg data16 or inc add popl stc clc jp js inc mov (bad) int3 sbb lods cmp xor negb sbb es cmp push inc jg aas xchg leave cwtl xchg mov les lods jg jge add jb insb cmp fadds mov and adc sub jg daa mov jo mov insb push inc jne sarb xchg shrl aaa sarb push pop cmp mov lods and xlat sub jg xchg jmp dec js push fmull test insl dec pop js call or enter xchg sbb push inc imulb cmpsl inc push jg mov adc mov pop sub mov or int add fnstcw adc aad xchg push call aas adc mov test dec sbb outsl pop js mov pop jns rorb mov idivb scas hlt in xchg jg and mov aam lods mov std push insb jg mov inc fwait jg (bad) lock mov push or in add jg mov inc xchg data16 pop sti fistpl emms sbb (bad) mov cmp add and mov pop push idivl inc loopne (bad) adc in cmp sbb idivb add cmp push mov daa mov dec pop (bad) loope sub mov add imul sub or outsb dec sbb pop inc xchg arpl xlat jae pushf xor addb insb mull test data16 xchg sti jns shrb (bad) jg mov xchg repz cld cmpsl aas js dec lret push inc xor jg pop xor out std (bad) and mov cmp mov sahf xchg (bad) sub and jg jecxz cmp jb mov jg lods cli loop dec pop icebp mov xchg mov inc (bad) std sar and push inc fnstcw mov gs add rcr cmp movsl jae jp sub pop inc lods mov xor js pushf in mov out dec das (bad) insl jno lcall fwait adc xchg mov popf mov jg mov push (bad) jl sbb ss (bad) jg push xorl decb in movq mov adc cmpsl mov cmc int mov pusha aad jg ljmp arpl rclb pop add pop cmpsl add and or jb or (bad) sub xor push mov stc jg mov cltd ljmp lret push insb jg mov in push fs jg inc add int inc jno xchg and pop sahf imul pop mov xchg jle in xor clc push push jg jp sbb jg in xchg pop fisubr jg outsb int jp cvtps2pi jg mov (bad) repnz test aam dec lcall int add mov push cmp (bad) adc outsl in loope cmp jg ret sub pop mov js mov jmp lock dec sbb mull push movsl dec add shll dec mov (bad) xor and mov xor mov and mov push cwtl and jg and mov lahf shr jg xchg sti fldt jmp xchg nop idiv sbb and fwait pop mov pop ljmp mov xchg (bad) dec or sti les pop jg je and test nop insl movq out (bad) jg (bad) out pop (bad) push js outsb mov cwtl (bad) (bad) js pop jg cli cmc xchg dec inc fcomps and stos sub push and aas negb or ljmp lret mov mov int push mov (bad) les std xchg hlt sub sbb int ds jg mov or cmp fistp shrb das jle mov ja loop dec cmp fisub inc lret mov outsl and jg pop sahf jmp mov jb std fdivl mov out xchg adc jle mov mov aad imul push jl pop inc inc ficom sti scas inc mov stos push inc pop icebp lds push inc add (bad) jno pop jp sub mov popf xor fwait movsl subb cli into fs add jg jno pop sub shlb clc lds jg pop add cs outsl inc cmpsb jg ljmp lock jg sbb imul xor or rorl jg insb popa pop xor or aaa hlt int xor ja push pop gs mov in jg xchg (bad) or jg mov xor jl stc jne scas int3 aas push xor mov sub dec (bad) dec mov ja cmp mov jg pop js inc cld sub stc pop sbb movsl scas ret mov pop cmp jg lret ja or mov jae push pop jno and jg popa in repnz imul pop out dec (bad) sarl rclb push les fs xchg mov jmp fidivrl data16 addr16 dec (bad) jbe in mov push test arpl cmpsl div inc jg ss pop stc rclb jne aad xor or outsl and mov push push dec jo and fwait subb jge jg clc dec aaa push mov fnstsw and out gs jg xor rorl sti sti bound pop jne insb stos ja inc jg mov fwait jns or (bad) scas or mov cmp sbb push jg aam icebp or jge pusha loop dec xchg (bad) jg bound add lahf inc call jbe scas pusha (bad) mov sbb bound out cli jle dec cmpsb adc push mov xchg pop sahf mov scas loopne xchg (bad) hlt (bad) pop or dec or jno sub adc jg mov inc ret push xchg dec mov xchg pop and scas cmp and stos cmc and xchg flds fs andl pop push adc xchg mov pop js jg shl mov cmp enter stc mov jg call lds ret hlt jg sbb push std xchg and sub mov add push loop jg and jge mov pop xor mov jmp test add sbb jg shrl repz iret push repnz jl adc jg lahf js xchg lods adc mov outsl pop push inc pop fidivrl xor push xchg outsb jg inc xchg jg loop fsub or rcrl imul dec decb jecxz aam jo fcomp int3 jg mov loopne lods imul sbb and cmp push scas lock sarl xchg in and pusha add (bad) lret push xor jg xchg inc scas movsb jg aam jne add jg mov lret push inc (bad) mov test in outsb ret imull sub adc pop ljmp jg cmc out les mov xchg mov pop dec rcrb xchg adcb add call test sub jg loope xchg jp,pn mov imul xchg movsb imul push xchg aam cli push jg push jmp call insl repnz jo pop add inc jns jg or cmpsb inc outsb add adc (bad) and sbb mov dec cmc push shld test icebp sub pop jg mov (bad) lea scas jo fs aaa push pusha (bad) jae pop sbb pushf jp cmp add add pop xchg movsl adc jb jg iret mov pushf cmp mov loopne inc imul pop std mov push inc dec adc sub mov cmp sti jg jp cmp jg pop scas mov lahf inc mov xchg xor jg in data16 (bad) jg add loop sbb jg movsb cltd ret add push xchg test jg or cmpsl push or xor mov mov ja js push pop cwtl sub jne lret les mov mov inc (bad) pop mov push (bad) (bad) int mov push dec outsl popf out xor mov push sbb dec (bad) pusha xchg jg outsb cmp jb jnp outsl jl shll mov mov ja popf orb out nop or loop or pop mov add jb ret mov jg sub ret lea clc sub out in imull outsl push (bad) jno mov (bad) cli loopne mov inc sbb jl lock add nop xchg sbb pop inc sub add call mov ds pop push xor pop bound ljmp imul or xchg inc mov jg sbb ja popf inc dec scas in jg jecxz xor jmp sub mov jge inc xchg stos push inc pop (bad) lcall (bad) clc aas sub outsb addr16 enter jmp (bad) sub jle nop pop xchg aaa jmp mov pop insb outsb cld out jg clc stos cmp cmp add mov mov mov mov mov fsubl (bad) fmul (bad) aaa jg mov pop xlat jg cmpb repz xchg sub jmp sub adcb insl adc pop adc outsb xchg xchg stc pop xchg jg sahf jmp movsb jne sub ja pop imul mov shr nop push push dec aas pop pop sub into fimul jg test mov adc inc aam add repnz dec xor pminub mov mov cmp in call jg (bad) scas stos je mov pop psubw mov cmp out jg pop push mov mov aaa inc adc fidivr insb cwtl dec inc daa mov lock movb push jg cltd cmpsl sub std xor jl mov sti add xchg add fwait inc sub inc add pusha pop inc push jg imul cmc pop or jg adc cmp mov dec mov stos dec mov test mov jg mov mov mov popf imul enter sti das mov cmc into push jl jns add call les cmp inc and sub js in pop pop (bad) sub (bad) rclb fsubrs roll aad dec test sbb stc jg es clc into or pop les movsl xchg and sahf sbb jg add (bad) std lret sbb ja das cmc sub sbb jg test cmp jg enter loop pop out out out jg sar ds daa ret jg leave (bad) out insl lea xorb arpl sub rorl jg (bad) sbb mov xchg lea fldl2t mov les cmpsl (bad) sbb negb cmp push xlat sarl test or mov int mov testl mov pop js sub adc mov ja jne shll cmpsb push mov inc cli fs cmp xchg mov fldl cmp sbb fidiv dec stos adc (bad) jle xor out outsl lds scas mov xchg icebp pop lods dec dec hlt loop (bad) cmp out insl lcall (bad) mov or jl lock adcl imul into test dec sahf jg inc aad out mov xchg test add ds push mov mov xchg std in dec xchg push add dec jmp sti add jg lret mov add lahf inc push les call jno inc mov and lcall mov repz mov je jg pushl (bad) pop sti notl movsl out out mov mov idivb int jne dec ja jg or jmp addr16 nop and jo sbb mov jg push fdivrl jg cld cmp into xchg mov mov jbe sbb ss push xchg add test mov jae xchg je or dec or mov ja pusha add sbb out icebp jg jo mov es mov popf ljmp repz inc das adc imul and pop xchg jg lcall aas push mov jp xor jg (bad) pop or dec add int and jg push mov cmpsl jg outsb xchg in adc lea sarb int test jg lea insl pop mov loopne pop dec jg fs push mov es xchg fbld jg fs dec addl hlt je push scas mov aas mov rol xlat andl insb movsb test lds add jo lcall mov jg pusha mov cmpsb jg and inc or xor sub cmpsb sub or sbb fld js ljmp mov mov push out scas loope jg cli mov mov (bad) repnz mov mov ret aas jnp je add pop jae ljmp (bad) fxch xor jle aad add adc mov mov jg ffree (bad) scas add nop inc call daa jg xchg pop sbb add ljmp xchg ret lcall hlt das jae xor cmp push mov inc dec ret out adc jg cmp hlt (bad) push pop lea mov mov iret movl mov mov xchg mov jnp aas mov loop jg and or into push sbb pop and mov pop adc test lcall (bad) imul sbb dec nop movsl cmp jg lods fdivl mov shll push jg lds sbb cld push vmovdqu pop sbb mov jb jecxz push (bad) in jg ret andl mov jg push jl mov dec push mov xchg sbb cmp les inc jb mov sbb data16 in insb je sub pop push repz ret jg xchg scas jg xor out push jmp sbb std jg xchg in out xor jg shr xchg enter jg dec fwait and and sbb pop lods pop mov cmpl jecxz mov cmp cmp jg pop icebp mov dec xchg iret lahf pop enter (bad) mov incb sbb mov and dec xor dec and mov xchg in jg lods loop repz or shlb and jg pop push ja mov inc or pop fldcw stos mov daa xor pop push rolb fstpt and insb das pop sbb xchg repz jge sbb xor aas xor xchg pop rcrb lcall cmp outsl test dec shrl aad mov jg fdivl lods push idivl mov gs outsl scas or jg sub push ret pop and mov pushf mull movq mov xchg stos sub lret jg bound adc dec jmp fistl scas adc sti stos jg cmp sub rol aas pop out movl data16 aad jl (bad) xchg inc push or jg xchg push pop cmc add jg rorl pop mov xchg movsb xchg sti test sub xor mov add inc add push mov mov (bad) aam loop lea insl neg bnd xor adc add sub mov hlt inc out sbbb ret pop roll push cmp jg jae mov mov cli js cmc push bnd ffree clc jg arpl jge or mov mov mov jb sbb push test jmp jo xor jg sbb fmull push push inc jl jg aaa lock dec out add push aad mov inc lds call mov sbb das cld cs jl mov dec mov cmpl not push or add push ret cmp add cmpsl add data16 or stc jg movsb cmp dec inc (bad) lods mov push jae or fist push jg inc and out sub jg push add adc rcll mov lahf xor pop add mov pop push ss jg mov and sub mov jne cmpsb xchg decl shl pushf jb and lcall xchg inc (bad) mov xchg jg fwait loope and xlat jg fbld test adc xor test aas add jae xlat repz call pop fidivr clc jle sar sbb cmp mov cmpsb lock subl pop mov test add repnz dec outsb int cmp aas sbb test cmp jg scas and jp mov ret fnsave (bad) cmp mov mov xor mov mov and fcomps mov jg lea outsb adc (bad) popf lahf mov scas mov pop inc push gs dec or cmp jg lods scas pusha das (bad) jecxz mov ljmp and sahf jg mov push out pop dec jg out push xchg mov outsb sti sub push and mov mov mov add arpl xor push fcomi (bad) aas sbb cli clc jl,pn sbb ret push xchg cmova mov test popa xchg aas sbb inc mov leave insb inc xor push or push inc inc jg cmc hlt out xchg push int3 cld mov add mov or stc (bad) xor cmpsb nop jg enter shrb mov out imul or test loopne in jg push iret inc and hlt sarl and inc cmpl pop push push ret inc mov xchg jl mov xchg cmc js sbb jns ficompl rolb jg mov or outsl dec inc hlt out outsb jg push fisttpll jl push mov cmpl dec cmp xor pop push test pushf cmc jle pop xor and (bad) daa sbbl jg repz movsb lcall pop dec fisttp jno imull xchg jg xchg jmp rcrl sbb test out es push sti dec aam stos jg lods cmc pop sub icebp lds xor (bad) sti sahf xchg outsb imul mov aaa es out imul sbb mov addr16 mov sbb and mov rol jne jl jg int3 iret mov mov je mov pop cltd pop lahf rcr xor shlb pop stos daa dec push (bad) sub cmp rclb inc ljmp imul jae sbb and mov ljmp and ret popa sub outsl aam jbe repnz das lahf cmpsb and inc xchg enter fcmovnbe jg loope add pushf inc cmpl pop mov pop cltd sbb or and lret outsb movl lret mov dec adc jo lret mov inc repz int jb cmp mov and insb js into es lret pop nop sub and cmc pushf mov sti push pxor fcomi jg fnstenv and mov jg pop (bad) nop sub dec fdivs push insl popf in (bad) jg lods fisttpl cmp clc mov fiadd sub sbb jg lea sbb inc inc mov (bad) mov jne ficoml pop out xchg or fs out mov dec jg mov arpl out lds cmpsl daa jg sub adc in stos rorl call jg jnp jmp jge aas cmp jg leave repnz xor jns adc stc test jg pushf inc mov aas imul pop pop sub mov jno stos mov insl aaa mov push jg or js mov jg push in scas xor jg pop popa pop inc push cmp imul lods (bad) mov adc jmp (bad) jo popf xlat push jnp sub xchg jg pop xor mov mov mov sbb or repz (bad) sub inc fwait jg scas shlb stos push cwtl jg insl lods sub xchg aam jg mov jl jg inc cmp xchg mov jg pop push ja out cwtl mov add mov lds outsl jno pushf mov xor (bad) jp pop adc xor pop ret push fs sarb fldl call xchg or imul bsr push mov cld xchg lock repz jmp xlat cmc jbe ret and or test das call push icebp mov stos arpl pop icebp jg push pop pop movsl sbb mov mov hlt push pop jl jb testl ja pop addr16 enter mov jbe cmpsl xor idivl imulb pop out (bad) addr16 lea sbb xor or imul outsl shr out jae jg inc inc xor xor jg dec jl loope sub jg roll lret jg add mov jg enter (bad) movsl or das xchg repnz stc dec dec jg jbe sub dec mov mov sahf add jg (bad) pop rolb or adc sub pop mov jg push add inc fwait push ret jns add in ret dec jg test mov bound popa in push sub loopne sbb imul adc std notl xor mov jg addl jge gs sub ja inc adc js rorl arpl jg,pt inc mov pop mov arpl dec in jp aas scas lods insb mov mov push arpl cmpsl cld sub and jg js ret aam sbb or cmp add mov jo mov rorb les cmp pop lods mov inc inc mov mov ja lds or jg xchg mov das movsb jb lock lods outsl mov and jg iret bound pusha loopne inc xor andl sti movsl xor cmp insl push popa xor lock push mov pop add mov xchg jg ret out fwait and lret push pop fsubrs scas bsr adc cmp jp sub repnz idivb xlat sarb popf mov inc or shll shrb test cltd lock jmp jg pop addr16 loope mov jbe lea jae gs out sbb pop mov pop jg and xchg loopne inc push insb ret xchg xor addr16 sub jg jmp add inc bound insl call adc mov dec push loopne ds jo pop xchg mov push sar jns test (bad) es jg inc mov inc add xchg ret mov (bad) jg lods int ja ds pop mov dec lcall in pusha rcrb mov sbb imul mov loope aas mov xchg inc mov pop jg (bad) sub mul outsb fistpll lds xchg mov aam sarb mov je sub xorl push or mov dec scas jecxz daa in das notl sbbl mov fldl pop pop add jno clc mov repnz shll pop jmp dec mov jp enter add lods push jg insb (bad) pop jecxz push jg idiv adc and push sub mov nop push push dec das pop dec idivl movsl and dec inc sbb mov sahf stos ljmp dec movsl icebp mov xchg popf pop inc gs lods xorb in jae jp ret pushf and (bad) frstor jg xchg aaa sub lcall jbe inc sarl fdivrs jg pop push fs lds sub cmp insb rolb jmp xchg daa xchg outsl mov or pop push mov lock push popa inc int3 jg pop and jg inc shr in pop adc ret mov jo dec rcrl mov jnp (bad) xor adc push dec out imul sub inc ffreep scas jg les cmp (bad) sbb jge xchg mov inc outsl ret insb mov iret sub loop cmp fstp or je addr16 sbb mov insl add sbb push ret lods or cs enter mov test jne lods inc idiv push out jb and pop xor shrb addr16 scas hlt xor push std out push pop cmpl push stos jmp popa scas add push jbe pop jg addr16 call add or and shrl adc loopne jg sbb enter mov pop sbb jo cmp adc jg and xchg mov jle mov movb xor adc jg cmp lods decl jle test push int pop das xchg std mulb stos mov jmp push pusha and dec mov ret mov repz jno xor push cmp mov (bad) repz cld fsts shlb push stos jl sbb outsb jo jg sub push adc jo jns mov inc clc pop dec (bad) in jno cmpl je jg ret inc push sbb ljmp inc sub xor xchg insl test inc not mov jg sbb enter aaa lret mov mov sub cmpsl xor outsl sub xchg cmp test and push lahf mov and xchg and pop clc xchg lods mov or pop push dec in imul cli iret ljmp int (bad) lock jg idivb pusha shrb jge push add lds mov inc cmpsl in mov mov popf jnp add push jg fnstcw jg mov pop js mov fwait pop cmp std jp fsts push (bad) xlat ljmp pusha cwtl push or mov xlat mov xchg jg pop dec xor (bad) idivl or cwtl movsl xor cmp ljmp and int jg pop dec cmpsl iret sbb and arpl dec mov in repnz dec enter xor mov push dec push popl ficomp lahf add or mov sub pop dec jb lahf mov inc jo mov jae mov mov jg fadds and add arpl dec shrl outsl xor mov push iret mov dec cmp push sbb cmp je ret jg pusha test jg mov enter daa jg movsb or outsb int xor sbb sarl pop repz mov call in inc inc push jg sahf lret xor pop sbb jg ja and xchg js mov outsl mov aas std push cld dec adc inc push mov cltd or arpl sub mov jg hlt sub jge sub cmovs adc push cmpsb jg outsb dec push push sbb cmp pushf pop aas mov sbb dec mov xchg fnstsw loope mov out mov adc pop outsb out xchg inc mov jg inc or stos fdivrl xchg dec lods ficom call test jg insb mov jmp cmp aas sub je cs test add jo inc stos mov fsubrl imul insl inc loopne mov add jne jg inc stos inc lret mov xchg jnp jecxz cmp pop imul inc je xor popf push in sbb in push addr16 imul lret popf shll repz aas in les andb dec sbb adc push movsl cli jo into jg push hlt sub dec aam cmpsl je sub push and jecxz loopne mov push cmc (bad) sub lock mov dec inc jmp gs cs lods imul (bad) icebp aaa push jo lret js mov mov push mov movsb bound jo add sbb adc enter fiaddl dec inc xchg sbb in sub sbb (bad) jo xchg jecxz jns mov je and xchg jg repnz xor clc push jecxz aas push jno outsl into push test jg and repz mov and je mov not out (bad) decb add (bad) cmp lds les adc loope jge mov test dec dec sti and adc adc in xchg mov movsb xchg sub and lret sbb jb mov mov in pop sub add xor inc jbe in mov push push stc push adc lods scas rorl aad pop (bad) jg mov push adc movsb lock mov push call nop (bad) or out inc and inc lock das or addr16 imul xchg push pop or pop out pop loop dec push rorl enter push jg sub inc cmp stos jecxz mov bound outsl push shll mov add pusha push push scas es inc push mov addl fcomip arpl sub jb inc xlat pop add sbb ja movsl jg fistl loop lcall (bad) mov aaa rcl pushf inc jo js pop ljmp xlat shll xchg jg pop jno xchg mov scas dec movsl pop pop lods mov jo push lcall fwait cmp jg add hlt inc push jg stos and jne sbb roll pop mov mov mov jb dec sbbl inc idivb aas loop jg sbb ret jle lds (bad) je xor arpl leave adc add sub ja jns fprem cltd jg sub add jb mov ds push pusha inc lds out ljmp mov jg repz mov out jg dec jecxz and inc (bad) in cmp adc jl shlb jb inc pushf fcmovnbe lret pop jno add jecxz sub lcall insl bound dec jge (bad) sahf push mov fstpt aas dec pop into jo jp sbb xor sbb lods sub xchg pop jnp add inc and in pop iret ficom push jg jns popa xchg inc into pop sti mov xchg xchg mov lcall (bad) jg out mov or mov (bad) test (bad) xor pop xchg jle mov xchg int3 outsb mov push jne dec xchg jg mov aas call jg cs xor les out gs fstpl mov mov dec jb pop out orb int3 pop jg and cmovo clc jb aam push jg outsl fist stos (bad) lret pusha lret push cwtl lock dec hlt xor inc imul pop cli mov mov xchg inc dec jg mov mov cwtl pop sub (bad) xchg nop jecxz jo addr16 jns jg pop sub pushf mov dec xor jl scas mov xchg pop shrb cmpsb test rcrb dec les in (bad) sub in neg adcl (bad) push loop jg fcoms xchg add (bad) cltd aam sub mov aad sarl sub xor mov jg (bad) sub sar mov mov mov dec push jg push sub mov outsl xchg push jmp xchg dec fistp jo mov dec mov and jg jbe outsl call push jg daa hlt and mov lahf push outsl outsb push push test cmp add fdivrl ljmp shrl cmpsl out pop roll sbb jmp push jle jg jo scas or inc jne or adc lahf xchg repnz sti (bad) mov push repz scas jg arpl stos mov push ret pop das movsb icebp xor jnp or dec sub push adc mov add (bad) repz negl je sub aas popa movsb cmp addl (bad) int3 (bad) insl or sarb sbb into mov (bad) jge fstpt std jno adcl push stos dec cmp inc adc inc outsl movsb or ss cmpsb icebp pop sbb cmp mov cmp jg xor dec out jg add loopne jg out jo (bad) inc lret push in movsb dec xor pop cltd addr16 fild and arpl push shrb gs mov xchg addr16 jg push mov out jg ret cmpb xchg jnp inc nop loopne hlt std out ja pusha lods mov dec sbb out cltd adc int addr16 jmp out or icebp mov cmpb test repnz jo rcrl jmp jg out scas jbe mov or jg in xchg ds ljmp dec xchg add ret btc scas lods jp int push pop orl movsb inc fwait mov jg jecxz and sub and mov pop or mov inc jg cmp lods push add jae jo bound xlat aas pop mov jg and les idiv mov or (bad) mov imul int cs cwtl sub (bad) aas pop jno and push mov popa fisttp orps jg (bad) (bad) dec cltd mov jg enter (bad) jg cmp push cli arpl out lods cmp leave jg xor jg jp ss pop pop mull mov and bound arpl fistpll pop enter test mov or dec es and outsl adc and sbb jg rcrl sti cmp sbb sub adc in xchg ss lret ret and inc aas pop ljmp aam loop ret sbb mov bound iret dec add mov test xor push jg xchg mov push scas les pop cmp fsts mov lahf or jae out and mov aad jg in pop jecxz punpcklbw iret jb inc mov addr16 in sti dec loop fxch scas dec jg aas xlat (bad) push aam gs adcl (bad) or test int jg insl xor shl arpl fcmovnu loopne dec orl jnp inc fsubl jno jne jg cli hlt (bad) push idivb insb fiaddl enter push jle xchg jl imul ret lret sbb jg out pcmpgtd in jl out mov jg sbb push adc mov mov mov nop cmpsb mov repz lahf mov outsl fwait les fist add xchg jg insb ret dec mov (bad) sbb lea sar xor mov outsl test call jg fidivrl push loope cmp or push jbe loopne xor jg sbb pop enter in dec jle inc dec std inc lea add sbb push fincstp cmpsb jae cmp mov icebp mov (bad) push movsb jns pop push nop cmp push pop outsl les je (bad) jno add cmpsl sbb std mov str addl jbe addr16 loope jg push jb cmc insl popa add (bad) outsl xor jg mov sbb mov xor es mov xor loopne repz mov test roll aam stc (bad) sub test aad je mov cltd pop stos in push inc daa or notl xchg mov jo mov adc xlat iret inc xchg pusha fdivrs push ficompl lock cmp test shlb jg jae aam push fwait sarl lea ljmp jg lret insl lahf pop xchg mov mov mov aas aas mov aam addr16 xlat mov movsl and adc nop inc add jg fs in and adc ljmp mov sub dec jns and cwtl mov dec jg lods push popf inc cli adc jg lea sarb aad imul (bad) jg pop push loope jns dec jg xchg mov push clc sbb adc scas loop jg int ljmp fnstsw xchg mov outsl sbb pushf fiadd dec pusha je mov inc mov es bound out jg xchg xor mov jecxz faddl xchg lock jg mov out mov lret rorb jg push in negl test and pop es mov (bad) lahf fidivrl test sahf (bad) fwait aaa sarb dec lea xor lods mov roll mov mov fsts ja push fwait pop jmp in les jg cmpsl sbb sub hlt pop ss imul cli je mov xor jg cltd push adc (bad) cld jg lahf xchg iret push rcll pop hlt adc dec mov outsl cltd addr16 mov jecxz jg mov mov jg cmc cs sbb xchg inc mov jnp sbb mov pop push add fdiv sbbb pop mov sti sbb in xor jnp or (bad) jg outsb frstor ret scas pop jg lods sub jno lret xor mov lret jnp dec fisubr jg mov push mov cld dec sti dec sarb daa shrl loopne je lods mov add push mov sbb push dec cld sub iret inc xchg jg icebp rcl aas cli push daa jg push out sub pop or jg (bad) shl (bad) push cmpb adc pop mov insb imul dec and dec mov fdivs test cmpsl pop mov dec cltd (bad) xlat sbb jmp and std and nop adcl cs aaa iret mov data16 lahf mov push pop cli adc rcr hlt add dec cmpsl imul mov pop repnz aam jg sahf or scas jg inc mov (bad) xlat jle jo movsl pop into adc (bad) xchg jmp (bad) push (bad) xchg fmull pop jmp mov xor bound cmc fnstcw push lret mov ja daa je ljmp popl jne lods dec movsl out and mov fwait fs repnz sbb sub jg mov mov mov fnclex xor mov sbb pop in jg push xchg inc dec and jg outsb cmc add ds jae xchg or mov xor into sub mov mov pop pushf jno jmp lds cmp jg add jp mov mov pop mov int3 hlt mov mov dec inc lods jg push xchg adc cmp add jle test push out jg mov fdivr (bad) jns dec in mov sub fdivs js xlat test arpl ret dec jg insb aad bound sub inc out (bad) lret insl (bad) mov adc xchg mov popf xor sub aam iret jg mov imul pusha orl dec mov out xor pop mov scas jp (bad) mov fnstsw fs lahf das mov mov outsl int3 mov fucomip ret dec iret addr16 sub fistpl insb add mov lock mov jg mov mov cmp lds dec mov int xchg add dec inc jle cmp jp stos out push lea ret (bad) fidivrl fs das jbe jae inc in mov es or adc je mov inc test cmp or or cmp xor inc int3 jp bound pop andnps rcrl dec pop xchg call out mov insb jl push mov inc jb dec sbb fidivl mov pop or jg jmp enter cmp movsl push mov repz jg data16 sarb movsb loope loop popf inc jg adc inc stos and or mov fnstcw outsb add jmp jg sub in xchg xchg mov jbe lds jae mov loopne sbb mov in popa mov lret insl ja repz lahf cmpsb (bad) pop shrl mov inc arpl dec ljmp sbb push inc bound out (bad) aaa jg scas or aam movsb mov loopne fdiv dec test jg loope divb outsl pop jg mov aad mov lcall cmpsb sub fnstcw or in jge jg nop jnp cmp add mov jg xchg sahf ret sub or jg int3 dec nop lret ss jg (bad) pop dec fcmovb and jg bound xor outsl lret mov gs xchg sbb insb icebp lock dec jno sbb fcmovnb (bad) or pop push mov cld sbb sub mov pop sub cmp scas and jnp add outsb andb test shrb sti inc push mov push mov mov sbb cld sub jg and das scas mov jg nop ret popf imul (bad) stos push jle clc jg and std cltd push (bad) jmp push gs dec lds jg dec add dec mov movsl lods xchg push push jg sbb push add sti daa outsl test pop pop mov or cltd pop and cli aam sub add outsl adc and adc add mov bound push xor dec dec (bad) lock int and ret mov enter ret sub mov push cwtl sbb mov add jg jle leave add xchg jg or shll cld jg cwtl mov pop (bad) clc jmp (bad) jg out les lcall and push and inc sti pop dec push xchg jg pop xchg (bad) mov jne (bad) outsl fucomp bound lock fadd rorb (bad) js mov dec mov clc inc push (bad) dec adc jg popfw repz syscall mov and pop aaa stos pop div mov mov sti mov xor mov lret dec ret loop mov jg push cmp sbb mov das xchg insl xor mov (bad) push adc inc pushf popa jne push sbb aas mov jge les addb mov xor pop adc pop in das jmp addr16 lret or loopne dec mov jg xchg out push cwtl test add inc or xchg adc sub mov jbe fdivrs push and pop sub xor mov out and jg mov adc les mov or dec cmc push push dec lcall outsb sub pushf mov mov add cmp pop and cs inc xlat insb xchg icebp jg dec lods jnp dec mov sbb inc aam dec (bad) mov jns add insl scas sbb dec loopne mov jg or cmpsb scas scas push repz push mov or jne pop cmp cmpsl jg in ljmp jbe,pt les lret imul mov sub push cmpsb idivb mov jg cli ja in and es fwait add push dec jg dec cmp ja push bound ret scas jae incl out lea mull outsl loopne jecxz mov lahf (bad) in or inc jg mov cmpl jg imul jl fiaddl sub mov jg les insl inc fdivrs and and mov dec cmp mov out or das push inc lds shlb into (bad) push sub jg fsub or sub aad and gs add sarl mov mov ror mov jg (bad) add into lock jg mov movsl xchg scas xchg pushf jg negb jg push jmp jg lret and lret xlat popf add xchg cmp jp nop cltd dec inc mov lret mov jg jns sbb shrl loopne sahf js jmp inc mov jg adcl xchg or push stos and jg popa idivl andl mov (bad) imul lret jg sarb shl and jg imul pop out ljmp jg pop insb (bad) in stc push gs cmpsl xlat and add sub das jg cli dec mov out push into mov adc inc xchg pop (bad) adc movsl lcall inc mulb mov cmp push pop cltd xlat or mov movsl jg rol loopne scas sbb subb mov cli mov mov movsb push aas out jg je mov enter fisttp fdiv lods jns jg mov (bad) jmp inc lcall notl in ret in cmp dec shr ljmp push dec out nop mov jne int3 aam test mov out sarb adc push or add inc bound cs jecxz mul sub inc mov pop jae adc and jnp xor popf lret cmpl icebp jg stos fmuls mov push mov std jg lahf jns aas add mov or pop mov xchg adc std mov addr16 repnz sti movl pop sub cmp add dec xor rorl jns push icebp cmp iret in lods int add add arpl mov hlt jb jg movb push iret daa and or popf mov fcoms dec jg data16 lock mov notb test mov dec mov jg xor insb mov push outsb or mov dec mov jmp xor inc push js fdivrs push loopne bnd jl aas adc test inc pop jmp dec pop ret adc ja lret aaa adcb ds or in mov addl fcmovnb addr16 aas out cmp jmp aad ss jg xchg jp out pop ret outsb int adc mov notl cltd dec fistp adc jg sub mov or push repz mov pop mov mov leave in (bad) cmc int push pop pop sarl fldt mov pop leave mov insl daa aam add arpl jmp adc mov cmp push jl fdivrs cmpsl mov aaa lock mov jg in dec fistp push jg add pop sbb js inc mov adc jns xchg mov jg gs enter add in adc cmp fstps or xchg jg jno pop pusha hlt sbb cmp call cmc loope sub inc out xchg loopne mov sbb arpl add adc addr16 sar jne xchg inc push xor cli out aaa and jg faddl xor xchg bound loopne std lea add mov and cmpsb loope adc and inc outsl xor cmpsb sarb push sarl lock xchg stc adc mov mov jg rcrl fnstcw jnp cmp fisubl pop inc int3 mov loop iret jg mov mov mov test pop dec lret push jg fsubs aad jecxz pop jg in inc jo test arpl divl mov out lcall jg add mov in inc pop outsl jbe push scas outsb adc cmp icebp lods xchg push pop xor jg push shrb aas cmp push pop dec jb jg dec inc (bad) mov nop imul jne adc push mov push mov jg cs sub inc mov setb cmpl pop sbb inc push out leave daa mov pop inc fadds dec jp cld popf add pop in pop sbb (bad) outsl loop push sub dec push negl mov ss sub cmp fstpt mov jmp lret insl stos mov lods xor sbbb fs dec push in mov dec jb mov testl js and jg lcall lahf sub xchg pop cmpsl popa lea test mov cmp jg dec pop sub cmpsb adc jg imul ljmp dec push loopne fdiv cmp ljmp idivl and aam out and dec repz jo out cmpsl dec pop mov in jg pop jecxz cmpsb addr16 lock sub or fidivr mov pop js shrl das aas test dec sbb pop and xchg daa xor dec adc fcmovb mov jg mov out (bad) jg popa inc and jg rcl sbb inc jmp jg xor fcmove in aaa mov jbe insl or xchg popa popf cmp pop test and jg mov sahf (bad) inc out jg cmpsb frstor mov push xchg inc xchg repnz fildll jne sub movsl xchg inc jg rcrb rorl push int rclb sbb and dec jg add out push aas xorl xor int3 xchg jg mov js mov mov in sti add pushf and pop shrl in sbb cs cmp mov (bad) insl mov mov sbb mov push dec fwait mov adc fs jg sbbb pop iret jle je xchg cmp enter mov jp in imul sbb xchg mov inc test and cwtl jg rcrb insl mov hlt sub push mov or xor add in cmp jle mov mov pop xchg mov dec jmp loop inc fdivrs ljmp jg and ja adc jg or mov add addr16 inc jp jg adc daa push push push jns lods arpl sbb movsl das mov inc xor mov mov (bad) fidivr fild (bad) fwait aas js stos adc aas cmp shr test sahf dec xchg scas subl fimull pop push dec ret mov loopne mov data16 aas adc inc sbb jg sub pop add (bad) in loop jle push fsubrl lret loopne push sub inc pop in mov sub js hlt ret xchg mov jno jg cmp loope (bad) xchg xor out aaa dec adc dec jg leave aam test sbb aas mov or fdivrl je popa jo cmp and aam movsb (bad) idivb inc cmpsl mov (bad) push push and inc mov add cmp mov ss mov xchg lea and notb int3 mov ret and jmp outsb xlat mov lods sub xor pop sbb sahf sbb jg xor add jg mov loop addb dec fidivrl and add mov lods jg mov pop idivl jle sti inc popa movsl fs int3 push jb mov mov ja pop and jbe mov jg icebp aam push mov scas push or cmp incb clc xchg out sbb jg je xor sub mov jg (bad) sbb add iret dec icebp dec fsts jns jge (bad) xchg or jg dec setnp pop faddp dec scas mov jg lcall ret loopne jns adc sub cmp pop cs mov and dec test jg inc sahf in insb std (bad) mov pop ljmp cmc inc sbb mov push js push jg add movsb adc arpl sub pop cwtl or add jb mov lock mov pop popa loope movsb loopne jg push (bad) stc jg cld aaa adc jae pop xor pop movsb rcrb ret in mov xor mov fistpll aam outsl add inc push mov andb inc sbb sub adc insl dec inc jg xchg mov leave jg xchg stos cmpsb in test jg test jp std rolb pushf pop or mov aad push iret push mov imul xchg mov fidivl jg (bad) and xchg jle inc jg mov les into js mov push xchg mov arpl aaa popf outsl test cmp mov dec lahf pop repnz xchg jg mov add jg inc mov mov leave add cmp movl xchg je pop add orb andl test jp inc clc call sbb fdivl fistpl (bad) (bad) leave push jg int lcall call lock jg out ret hlt jne mov mov call out (bad) xor int xchg test imul cwtl sahf popa ljmp fs or and fdiv dec or mov mov lea xchg pop shll fnstsw mov add inc mov pop xor sarb sbb cmp jne ficom jbe inc ss jecxz sbb jg test out lret adc lcall sub mov sub jg and aam mov (bad) (bad) daa xchg sbb cmp sub push cmpsb imul mov outsl xchg pop data16 jg xor mov dec cmc xor pushf pop mov (bad) lret stos jno jg mov add (bad) mov (bad) sbb dec cwtl jle jg pop call int3 lahf lods xor popf aam scas ret movsb ljmp dec pop mov xchg xor sbb call in lahf sarb push leave inc mov mov stc out sahf mov pop fnstsw pushf mov (bad) xchg mov incl rclb into js arpl loop push jg out hlt mov add loopne rclb inc movsl arpl or (bad) xor cmp mov jg fldenv lcall lret and jmpw dec sub mov jg scas out movl cmp cmpsl or dec insl mov cmp cmpsb lods scas jg sbb sti dec ds mov lret jg adc (bad) gs out (bad) xor bnd fcoms jg inc cmpl pop push pusha (bad) pop dec sahf inc pop dec jl pop mov fnstcw cwtl push mov inc and ds mov mov (bad) dec int3 ljmp xchg stos push mov mov (bad) stos fdivrs test mov cmp rorl iret aam or imul pop js arpl dec pop jg sti sub or loope xchg in sahf inc pop lock pop jmp jecxz leave xchg popa cmc outsl jmp mov stc pop jmp fsubl (bad) jbe ljmp sub sahf push jo pop jmp jg cmpsl stc ljmp sub insb dec cltd gs add aaa mov sub sti fnstsw and mov mov pop mov jle adc mov fldcw ret inc pop bound jg pop out stos inc mov push in sbb std jmp test dec (bad) out cmp adc mov push sub out dec nop pop jg dec test pusha aas loop sub sub rorb push mov je push jle dec test pop jg and lods arpl inc sahf cmp pop outsb jo add std subl icebp pop sbb add mov and inc fcmovbe cmc mov add pop cltd adc jl idivl loope rclb mov sahf push jg lcall jecxz jg xchg pop (bad) loope aas or jo add push push aad dec fdivl sbb xor mov pop dec xchg pushf push pusha jg inc cmpl icebp fdivrl ja dec jg lods rolb sub jg data16 les cmp jl jns stc mov orl dec sbb cld jg movsb push lods (bad) and sub hlt pop test flds jg adcl lret mov into scas dec es mov jg test push das outsl loop aas roll rolb cmp mov inc (bad) nop adc sar (bad) xchg mov (bad) xor pop (bad) jl mov subl fiaddl push aas pop adc dec sbb mov pop into sub mov cld inc lret mov icebp dec ret sbb scas fcoml jg inc out mov push jp in push inc mov mov or int3 bnd mov pop stc mov into cltd stos push cmp sti (bad) jb jbe fwait cmp sbb sub js mov mov add sub mov add jecxz dec jmp lahf hlt repz ja (bad) repnz scas lcall pop mov ret pop fldenv fsubr popf pushl nop fwait sbb ja int jp jg jl and nop mov aad push mov fadds lcall call outsl mov stc arpl jp jg dec cmp std inc outsb jg push movsl dec lock mov imul aaa jg ja lods fnop fstpt cmp loope into aas mov mov ret jne scas jg mov pop xor popa mov out adc loop xor inc cmp add (bad) and mov jg std mov dec aaa and pop pop stc xchg push jg in movsl mov ret push call je inc data16 (bad) adc bnd fisttpll outsl adc cmp sti inc movsb jl cmp push testl pop mov dec xor push mov pop jae jb movsl idivb dec faddl mov mov in mov jg fdivrl push insb cli idivl stos cmp mov mov ja and sahf mov repz sub jg sbb jno es (bad) jg sub (bad) dec (bad) mov jg dec dec (bad) mov and cmp (bad) cmp xor pop pop mov lret mov adc dec add bnd mov cmp cmpsb adc adc pop (bad) testl xor pop cmp out int3 fisubrl aas iret jmp pushf inc sbb sub cmc or js mov add cwtl les inc dec dec add jg or mov mov inc ret aam (bad) inc dec jg cmp scas xchg jg mov arpl xlat imul xor aas pushf push pusha cmp sub xchg jg roll mov jg dec ljmp xchg cwtl mov out aad jg and loopne mov pop jg xchg pushf xlat das jo jg daa inc add jg stos cmpsl pop shll mov mov jg push test jg lods sbb insl imul push mov mov (bad) rolb fcoms imul mov jns and std push and jecxz inc mov out push jmp pop loope cmpsl popa mov mov icebp adc js sbb dec popf add in dec mov sub lcall dec daa xchg adc icebp mov jg das inc mov repz js sub pop mov mov addr16 aam xchg test push fdivrl mov enter jle stos jae adc push adc rcll xchg je lock and aad js aas mov sbb xor xor jp jecxz mov inc sti mov hlt cltd sarb mov or jg xlat mov lret and mov lahf out std inc js push cmpl imul movsb xchg sbb jg lcall iret movb jg cltd loopne or push sbb or jl,pn or in addr16 call outsl fcom or (bad) jg das and fs scas cli and jnp push lahf add daa jg adc test xorl jmp rclb aad orl dec stc jp xor (bad) jb adc sbb pop xor adc cli push das nop mov fnsave push ror data16 inc fild push movsb and jg push lods add mov lcall mov sti pop mov fdivp jg mov xor enter loop push lret pop jnp inc jg fsub pop adc aam (bad) addl xchg out mov ja fcomps test sub stos mov pop gs cmp ds ss nop nop das or xchg fildll (bad) push stos pop gs dec mov incl inc jg out mov xchg mov inc mov cli (bad) shlb imul xor inc jg push cmpsb xchg xchg mov lahf cli icebp imul out jg,pn pop inc jo cmpsb test jb jnp sti xchg push mov nop jg aam sbb (bad) inc mov sarl lcall (bad) jbe pop cmp hlt xchg scas push add xor add xor dec rorb adc in push mov jg push dec add jge (bad) mov popa daa push sub ljmp data16 leave jg pusha hlt jp add loope push (bad) mov and xorl fistp jp xchg std movsl pop enter int3 int mov shr cmpsl imul and into imul aaa mov jg cmp adc jg je mov imul add sti inc cmp xchg sub xor cmp sbb add jmp outsl mov imul lods insb hlt inc xorb (bad) adcl mov jb cld push mov clc jl int3 nop scas inc out jle mov or cmp jg flds lret jg cltd sub mov jae mov lea (bad) and mov sbb cmp jno ljmp js pushf push jg sub mov pop mov xor aaa lcall jp sti cmp pop jp loopne push sub jg mov xor lcall shlb (bad) std mov rolb sbb popf mov leave dec outsl addr16 adc jg sbb inc add or xor aas sti jns pop (bad) test in pop or dec fbstp xor int3 adc orb or mov in jns sub or pusha jg lds int les outsb lret dec xor ss xchg jae jne lret xor movsb sbb popf add xor dec sub push push mov shrb imul push pop (bad) pop and aas adcl jae fs fistpll mov das cmc jg cmp bound les jg push shrl into mov es sub icebp xor loop loope (bad) (bad) jg xchg insl in and cli cmp add outsl shl (bad) gs jg cmp insl mov jg es cmp add or sahf or cmp fstpt aad scas mov sub mov jg mov xor mov popa add jb xchg mov xchg test daa inc sti push push and add xchg test xor leave jg xchg clc out and xor xor daa pop jno (bad) outsl in push inc dec cmp inc rol out mov adc jl aam pop or pop sub jg cwtl mov inc sti xchg ret insl dec test pop (bad) mov push mov push jg xor sub fildll jg je mov pop cwtl (bad) jg jb jmp and xchg mov jecxz dec sti mov cmpsl (bad) mov lock cmpl and cmp jg cmc clc jmp mov (bad) mov mov mov jmp push jg test adc jg sbb cwtl mov testl mov movsb add xchg add test arpl sarl mov jg sahf push pop mov inc jns mov popf pop mov sahf fmull ds or jbe xor test sub jmp pop sbb jp mov add pop int3 xchg mov out sahf test mov jg js (bad) outsb adc dec jg jo mov insb lret jo subb mov lds or pop xor jg pop cltd xor (bad) negb xchg popf jge es cmp and mov dec aas mov jg lods xor xlat mov dec lahf inc dec add mov dec fwait mov mov mov (bad) mov popa mov (bad) xor or cmp scas mov sbb inc daa pop jg sti sbb pop bound jg,pt mov stos gs xor and aad insb sti (bad) jg out or and stc movsb ss pop ret lock addr16 mov out jae mov ret ja repz push push mov jb cmp push (bad) jl icebp adcb sub outsb pop and jne call in leave jg cmp into aaa push and or pop mov out dec icebp push je pop ss mov aas lea outsl mov mov cmp test push mov dec push popf xchg roll into and add lock pop cld push mov cmpsl sar jmp stc mov and loope dec xor push andb scas out inc aad mov out or arpl sub ja ret jg inc or mov (bad) jg pop cmp hlt (bad) rcll jg xchg in adc out mov icebp sti xor ljmp inc sbb jg rorb dec jg xchg leave add xchg mov js dec mov sarb cmp push dec sub clc fcoml aad xor sbb jg push aam sub movsl cmp add push inc (bad) (bad) jg pop cmp ds fnstcw dec fisubrl jg mov (bad) cli jg aam mov sbbl aaa inc movsl mov pop push ret outsb mov jg adc jl int3 mov rcll sub (bad) lock mov rcrb movsb popa inc cmp push add call ficompl je inc mov rcrb pop leave (bad) outsl xor hlt addr16 int3 xor adcb cmp xor push mov test fcomps jg jp dec add push outsl jge pushf iret sbb jg fdiv fild and (bad) jae inc and popa cmp xlat cmp push push mov lahf pop mov mov inc ret add jg lock push dec or int sub jns negb dec or adc pusha je shlb lock in imul addr16 imull pop sub adc bound mov mov sub aaa pop outsb xchg mov inc jg insl mov sub lods testb dec out jg mov mov pop jb jg xor adc cmp mov dec mov jg pop mov enter imul push test std lea cmpsb add ljmp sti lahf lock inc inc popf sbb pusha incl mov dec push loopnew jg jle push (bad) (bad) xor aas inc jp nop call mov cmpsl mov test jae add jg jns sbb iret outsl cmp ss pop sbb hlt int3 xor inc pop sti inc stos leave insl and mov jb (bad) xchg lods in xchg adc sbb jg cmp sbb movl cli jg mov fsts int jno jg jecxz push adc test cmpsb jg into xchg faddl imul jmp call jo jg and xchg mov ja enter repnz mov pop test (bad) dec xlat sbb jg das hlt xadd mov popa dec jp push popl jg adc xlat icebp adc mov xor lret jg dec cmp dec push sub fmull mov lret inc xchg clc enter mov out decl adc test int3 mov cmp push rolb jg pop out mov sbb dec roll or push jg mov xor outsb aad jg xor mull js ret loop jg inc add xlat adc jg int3 pop lods ja inc fimul xor pop pop mov stos dec mov mov mov push sbb jg idiv sahf pop fwait add and mov cmp ds cmp bound adc dec cwtl ret cmc jg aad clc cltd xor call into xchg inc (bad) cltd pop sahf jmp xchg test xchg idivb inc cmp inc insb in mov sbbl lret dec ret adc mov xchg inc pop sub jg dec push popa movsb icebp mov jg mov cmp mov inc pop pop lret jle mov lods mov jmp aaa dec adc pop lock cmp pop inc cltd fcomp ja dec pop mov fdivrp cmp sbb sub rcrl (bad) iret sbb xor mov push add out lret cmp lds inc pop pop push movsb in lock lods addr16 jg sbb sarb lret out mov or (bad) add lods xchg jp pop mov ja pushf imul mov sub inc and cwtl sahf mov ljmp rorb or mov mov inc and outsl lret loope sarb mov xor in cmp jg imul dec or mov jg movsb out inc ss call jbe mov mov pop mov mov pop xchg in mov pop jae insb jo shr jg push mov jmp and popa fdiv das or dec adc and pop repz hlt rorb mov in sbb and imul mov sub sub add inc or sti stos cmpsl jle pop dec jmp jecxz mov aaa iret das jge inc jno mov lods notl adc clc or mov cmp aaa bnd cmp mov js aas cld jp add and addr16 mov ljmp jg sbb movsb pop popf pop jg ljmp jg in fwait xchg dec loope xor lret dec (bad) (bad) loopne,pn ljmp pushf testl xor ljmp (bad) xor jg jl xchg insl repz aas scas dec roll lahf and js jg mov add ljmp popf cld or bound add ss repnz dec inc lcall lock cli xchg dec jg push sub repnz jg xchg cmpsl rclb (bad) movb cmp outsl xor sub jge jg xchg or out stos cltd mov mov cs scas out je jg test mov cmpsl scas sub aas cwtl insl cld sar pop mov add fistpll mov push push fdivrl xchg inc jg xor ja jns arpl mov cmp push mov cwtl repz stos xchg lods sarl xor dec js dec std xlat xchg loopne bound adc mov int sbb jp sub cmp and ret or jmp xor dec out mul inc jg add and mov fs cmpsb scas data16 adc pop or das fwait push and out pop mov in mov ss std jg and popf iret xor ja push and scas insl pop jp (bad) das rep jle mov inc fdivrs push shll add aas or xchg mov mov or outsb lcall sti push mov lds daa xchg out mov cld push imulb jnp outsl scas sub cmp decl ja and sbb xor pusha sahf mov jae nop fisttpl inc arpl (bad) cld add lahf shll jg cltd inc aad sbb sub inc sbb bound add pop fisttpll jbe sarl or jg and nop push mov fwait loop out stos jg sub xchg mov adc or jle call cld (bad) scas push mov sbb and cmp enter xchg xchg stos nop repz movsl insl jle inc push mov and sbb push mov int adc ret mov icebp push in aas jg and pop cmp jg aad mov inc divb adc test fstpt adc inc sub je jg das add dec push popf adc movsl icebp repz fiaddl aas arpl add sub lock push cli push push mov xchg sbb ror mov add popf push cmp fs sub fwait inc fistpl inc or jge jmp mov and mov (bad) icebp aas mov out push imul aad lds imul mov jnp pop and movsb jecxz adc popf inc dec or add fwait cltd fidivrl push pusha dec leave xor out pop jne adc daa xor mov jl call js xchg les add xchg clc adc mov push jns pop cld les je push mov jno scas mov add cli in out lahf jg pop and idivl push jnp add add (bad) xchg test jb (bad) pusha rclb xchg cmp call xchg xor or dec rcrb jg mov inc jo push test mov loop pop stos in cltd dec or jg iret gs xchg outsb push cmp (bad) aad pop xchg or sub data16 jg lcall lds xor jl xor iret lret stc pushf ja cmp lock aam jg aas je addr16 pop mov jge sbb inc scas or or mov aam cwtl or inc cmpsb jg fcoml imul sbb (bad) and pop jg lock or sbb popa lea out jg push decl test add test mov cld jg (bad) pop push aas mov mov loopne (bad) movsl lock jae cmpsl xchg outsl das sbb mov nop push dec xchg inc cmp push into loopne dec in jg (bad) iret push fsubs mov add imulb inc mov push ret dec repnz adcb cmpl es out jg push imul loopne jg fisub dec cli dec cmp or dec into inc (bad) in int push sub adc jno sbb in or mov adc repnz iret stos push add dec push xchg adc inc (bad) lods mov fcoms cmp sti jg jmp fstp mov mov jg cmp mov mov cmp (bad) jg pop jmp stos mov movsb adc mov je dec jg and jge xchg lret cwtl loope jg in leave lea insl adc mov rolb out dec lock mov out ret in pusha sti or fistpl mov sub pop popf aam arpl mov outsl (bad) outsb jg bound push jl fsubrl mov das or xor dec adc fiadd aas or cltd popf push mov push fwait push xchg jg dec popa test (bad) rorl jg data16 mov cmp iret loopne mov jl sarl out cmp jg int3 dec frstor rcl mov push int xchg and aas or and inc ja mov and sbb mov dec push jg inc inc jb les dec mov lods and insl jg and xor idivl jmp lds push dec sbb lea sub push outsl adc popa push jg add lcall mov mov call hlt or stos or xor lods pop test orl jg adc insb jg sbb addr16 mov or in jbe and imul mov jg add mov mov dec jbe and daa mov xchg pop push loop enter or mov jg daa lahf or lcall (bad) fldl (bad) daa jg fmuls mov adc jp icebp jg (bad) nop pushf outsb inc xor (bad) jmp add (bad) mov jg pushf cmpsb push aaa push int jg jle jo sub lcall inc inc cmp sub adc mov add int3 cmp std inc sub xchg ss (bad) leave xchg jg inc xor dec into xlat jg xor in loope bound popf les int3 das inc push (bad) mov mov mov jg pop (bad) pop out stos mov aas ret aaa pop popa sub or fs push inc (bad) roll loopne outsb inc data16 jb (bad) sub jbe mov subl mov loope sti clc int shlb ret insb xlat sti jmp lods cmp mov stos dec pop pop xchg jg bound pushf (bad) jbe jle out inc dec adc sarb xchg or out std jae out and push pop pop stc in mov mov xor test lods push shl xor lods or push rorl and ds fs loopne xlat (bad) adc aas pop xchg (bad) jmp pop fnop mov mov cmp pop loopne jg xchg lea dec popa bnd in xor jg ds xchg and pop cli cmpl aad jg popf xchg insb add xor push cmpsb mov int3 scas push jmp jg mov dec ret xor mov jno scas test sti mov cwtl mov es cmc (bad) sub dec push cmc mov add jg pop jp jne int3 sarb push dec cmp mov test jg aad (bad) idiv dec jg or and sahf sarl jmp push adc repz test pop mov adc rcrl bound jg stc mov pop or and outsl stos aas pusha xchg add and ret inc ficompl hlt loop rorb xchg std adc fs adc xor test xchg pshufw xor inc adc push jg cmp cwtl ljmp jnp sub mov fwait mov js dec add sarl jecxz lea iret imul or adc jo dec and push jecxz push scas fbld jl (bad) enter xchg jg cmp fnstsw pop sbb mov ret push int jg jbe sar or mov xor sbb and pushf (bad) dec fwait jg out sub xor sbb fs lods mov jg (bad) std out in loop push aas mov jno dec (bad) jg mov in jle and daa xor imul scas sub pop sbb je mov or pop adc jp push sahf sub push into cmpsl jg aas inc pop repz ret sbb dec addr16 stos jg inc and jg rcrl jg adc outsb pop loope xchg jl jge and imul dec divl sar enter sbb add lret mov sbb add out nop inc fwait jg xor cmpsb out jg adc leave dec mov stos out mov mov addr16 jne push jp jg int3 pop and idivb bound icebp push pop jg negl inc sub inc xor jno loop jg cmp mov movb jg or (bad) sbb pop jmp arpl jge push jbe clc push fwait mov loopne lods jg divl push in adc mov mov jg test dec jne jg add fld sbb sbb into jno jb jg stos movsb test ret jg jns xor jg shrb xor sarb mov cwtl pop inc mov mov std andb pop dec sbb test fwait mov sti outsl jae jge fidivrl xchg dec repnz adc jg push cmp cwtl (bad) out jg jge push hlt arpl xor sahf jns aam mov push jae fstpt pop aaa js sub push jg pop lods push jae mov push in aad fiadd xor jle jp aam push and or mov mov jg out inc outsb insl mulb cmp addr16 mov outsl add mov (bad) xchg mov jnp cmp jg fist subb call add jg fist ret jg push stos push popa mov lea xor pop pop cltd pop add (bad) int3 xor adc popa inc mov ret sub stos aad and in ja fnstcw movsl movsb shlb jg pop fldenv mov fs xchg xchg cmp adc xchg inc leave and scas cli fistl and je pop or mov pop mov cmp jg or fcompl (bad) jg movsb xchg pusha (bad) nop pusha sbb cmp mov cmp popa sarb fld lea cmp and loope mov sub or jge inc dec inc (bad) lahf lods jmp inc es jg or and or insl push mov (bad) fdivl cmp test ja pop push cmpb fs (bad) and mov icebp sbb pop push cld (bad) sarl cwtl in int push jg dec sahf sbb mul jg lds inc jno dec idivl or mov inc (bad) loope and arpl std and sti jno (bad) jb xor mov int3 and xchg mov jecxz lret lods dec cmp mov stos jnp arpl (bad) adc cmp sbb (bad) in ret stos aas fistpl jno jp js addr16 pusha jecxz jg cld inc lret insb mov or mov add ljmp rcl popa addl jge outsb or pop xor jg jno sub inc (bad) adc dec sbb xchg insb cmp add sub xor shrb inc cmpb xor and mov push repnz int adc idivb jg sub mov scas test stc sub jnp or xchg mov loopne dec stos sbb adcl fisub inc jno fucom xchg ljmp stc pushf femms push push mov mov rolb mov call adc dec mov std push (bad) enter aam fwait sbb adc sbb mov in mov xlat inc ret dec dec dec in cmpb adcl fnstsw imul pop mov pop jmp jg sbb js lea jg add aas jbe (bad) jg mov (bad) sbb jp push mov push jnp and nop js jne dec jae and js adc scas cs inc mov sbb into adc (bad) jno js mov lock mov bnd shr sbb pop std (bad) jmp jg fcmovne add mov add xchg nop jg std stos mov jg jecxz jo imul iret or and lea dec roll pop cmpsb (bad) lahf jg dec aad loopne xchg std jg add mov add jl es mov pop lcall loope and push sbb mov sti dec pop add xchg dec or pop div ss fisttpl push test jp mov icebp jg imul dec out mov pop push mov ret aas in push jne aad dec add or cmp testl xor jmp call inc mov push push jg clc mov fcomps imul cmp sub fdivrl aas fsubrp dec out (bad) push dec mulb cmp jae or push xor add lods jg (bad) mov outsb aad fstpt std sarb jp mov mov xlat jg incl and aas push shrb aam push jb mov (bad) jg jp sbb jg mov pusha dec (bad) repnz jg scas iret push jge rcll dec and cmp pop ret test jg lret cmp cmp pop jg mov and jg dec icebp sti add add mov mov inc cmp ret aas mov dec arpl jg inc mov iret push sbb and mov (bad) pushl mov mov jg sbb lds mov sbb pop movb imul icebp ret popf out xchg scas pop push mov cld mov or and sub dec and xor mov scas ja adc outsb pop outsl push out pop fdivs jg sub jg mov nop mov dec pop jg pop in jne mov jno fistl cmp idivb insb or dec xchg test int cmpsl inc sub cmp and and stc jg test clc aam leave jg (bad) frstor inc fdivrl push mov in inc ret sbb mov pop inc ja and out add dec mov fistl aaa sub inc insl pop or aas and xlat outsb or jg adc fwait lea rolb push movsl xchg pop loop xchg inc (bad) pop lret jae pop daa es (bad) jg xchg xor jns ds fnstsw xchg and (bad) scas or das jle aad cs jg gs popa mov mov lea (bad) lret inc daa movsb mov inc pushf (bad) sub mov push xor popa fnstcw pop mov xlat arpl mov js or in sti pop outsb inc mov sub pop cmp movsb or dec sub cli imul jg mov jae jmp fcomps bswap in dec mov pushf popf jg and ficomp cmp push jns neg jmp aam dec adc pop cltd out in fisubrl pop cltd jg jle test jecxz inc ret jg repnz jg out inc sub call aas lahf outsl ja jns sarb push lds dec jg mov add mov ds insl mov add iret clc addr16 pop vphsubdq push test jno roll or pop es xchg push xchg jp sarb cli xchg int xchg xor mov lods jle or jg jb enter leave mov dec fsubl scas (bad) jg mov pop xor xchg xchg js adcl push or dec (bad) sub int mov pop (bad) fcompl pop sbb jne push dec mov out mov jge adc add dec cmc dec or xchg jg sub inc cmp fwait jg pop sub mov push js pusha jg fld or sub xor jg jb stos mov sub popa inc mov dec or icebp test outsl in push nop call outsl lds pop dec aaa lret xor mov leave fisubr mov jl push ss sub lret dec dec inc repz mov xchg jno add push jg das je repz mov into sti mov xchg insl (bad) arpl lods rorl and scas jl jg xchg add jb xor stc mov in aam jg or push pop and jae scas in dec out sbb pop jg mov test sahf mov jg out idivl push std mov jg sbb (bad) mov in dec popa lea pop xor cmp movaps es loope add repz jecxz xor test mov adc mov jb mov xchg dec (bad) popf and mov popa loop adc int3 stos (bad) in ffreep pop jg adc mov xchg fldz popa sub int lret je mov negb mov inc lret xchg mov mov xchg dec js jg rcrl (bad) and loop mov clc jnp and dec or loop sub loopne or add sbb loop ljmp inc or into fnop fbld arpl lods push jg jle inc daa adc ficoml adcb js lock out mov test inc aad int3 or rclb jg int cmp in jnp cmpsl pop cmp sub and xor mov mov cmc shl cmp jg or jg push sti jns repz sahf popa mov inc adcl daa (bad) pusha push xor insb jg mov mov xchg jg mov popf inc lods je jg mov sub test push mov mov imul in cmp popa sub add fwait loop cld lods jo jg adc xchg fstl stos jg pushf dec adc xor sbb mov push inc insl and pop add mov aaa roll add sub scas jg fbld repnz jg push sub jo les notb or add punpcklbw xor jp and test pop pop adc and sbb cmc fsubl out jo cmpsl fistpll repz or jbe std insb pop jae inc xchg dec bound sbb mov jg pop aam cmp jg mov aas into push mov iret cmpsb push xchg add pop loop adc sub push aad and iret xchg push (bad) jg loope add jae push or clc scas movsl je pop push nop loope rcl (bad) xchg (bad) loopne inc in adc mul dec arpl mov test xor fwait and push cltd pop clc loop icebp gs mov xor mov push sbb jg sbb iret mov inc and mov inc mov arpl lcall jg cmc lods xchg loope jg mov sub jg xorl jnp mov jg jmp popa frstor ja add out sahf scas xor enter adc (bad) out lods sub idiv ljmp rorl int3 jo cltd cmpsb rorb jmp fninit dec jbe aas add jno inc shrl sbbb xchg popa push (bad) jg jae js das cli lods mov fdivr inc test jg (bad) mov jg scas fs repz jmp jg imul jp xchg xor cmc in loopne sub push cmp test cmp pop cmp mov mov xor (bad) pop insl xchg cmpsl mov push sub mov sbb rcrl popf aad inc shrb cli xchg sbb pop add pop cmp inc pop jbe xchg ljmp movsl fnstsw xor loope addr16 in pop test mov cmc cs jg dec mov (bad) std jecxz mov clc cmp cmp and (bad) jg sti rcrb xor aas out inc mov mov mov jle pop push jae mov loopne pop push shr push out sub push xchg test ss fistpll add mov imul out pop insl jg cli adc das mov and pop add imul bound sbb and out inc pop dec mov mov les sub lret dec add jg push ljmp adc leave jno inc popf aad mov or jb mov adc inc fwait in add and xchg mov jg push jo incb jns out test jmp sbb dec jg nop aam cmp and and lcall push icebp test sbb decb jg push dec sub jg jb add addr16 les hlt xchg jg xor ljmp lahf out and jg jae iret (bad) sub fmull mov jg movsb push jp mov xchg inc mov pusha in cmp sarl xchg nop stos jg mov mov jg mov inc dec loop dec sub pop (bad) sub or jbe fsts popf sub mov scas jmp xor jb add jg mov push jg sub and ret in mov inc jg jp inc add mov jg fbstp cmc xlat cmp sarl out arpl je jmp jg std or xchg sub push push fsubp inc (bad) jg fildll jl rolb daa (bad) dec inc adc jg lods push ljmp add inc add sahf ror fwait adc or icebp das jl dec mov aas jb xchg testl mov and inc js xchg aad testl push test cmp dec gs aaa pop inc fistpl fwait jg jnp jbe mov adcl sti std pop cwtl add push movsb jbe pop mov mov cmp je xchg aad xchg pop ja add inc pop jns inc push movsb jg dec pusha xchg fs (bad) mov cmp rcll jg fcoms popa jg xor xlat add outsl cmpsb aam push push (bad) fnstcw bound enter out pop rcl scas adc std jo pop pushf gs pop (bad) in cmc sub add push cmp jecxz jg push movsl cmpsb (bad) cs (bad) loope addr16 jg popa fsub movsl mov pop mov lods out push push jg xchg imul repz orl lock xor adc in int aam inc jg jl ja inc sbb xchg mov jo jle (bad) jmp xchg pop jge adc mov mov popf cld mov jmp pushf jg lock inc jg sarb hlt popa ss mov dec shrl push dec lret int3 sub pop add movsl add sti mov xor pop aas imul inc jg hlt xchg lods sarl stos push and or pop hlt jg jb insl mov add pop adc call xor ljmp arpl js or jg xchg cwtl rcrl jg pop adc cs add js sbb pop loope in das xchg rcrb (bad) in jle pop jge dec adc outsl sub stos push sbb inc dec test jg sub addr16 push in mov arpl dec cmpl jg into ret push mov xlat jg xchg aaa xchg enter and adc scas fildl push aad dec rorb call push test cltd jg shrl push jmp inc mov aas pop fnstenv pop mov cltd inc xchg jae sub std sbb pop dec cmp push sahf cmp mov jge jg cmpsb ljmp lret outsl xor or (bad) sbb test js inc (bad) jg nop xor and pop aaa jg xchg mov fnsave shl mov popf shlb lods push adc fs stos cld mov aas out orl xor shll lods cmpsl adc mov andl jg in in mov fwait les leave pop add enter xchg insl jecxz arpl ret jae jg cmp into push cltd stos xchg scas mov pop pop jl jne gs stc outsl nop mov jg iret mov pop pop cmp jne mov xchg imul aas cmp (bad) into test je ret mov dec jmp push inc pop pop jg fisttpll push inc or rcrl mov fnstcw sbb movsb mov (bad) int add shr xor fwait adc adc mov cltd cld push jbe cmp mov mov cmpb push xor rcrb inc lahf jg sub dec (bad) push scas jg and jo (bad) fldl dec fcompl or sub test int sub insl cltd pop and push je test ljmp adc leave int3 cmp es mov jg (bad) jl mov fistpl loope push icebp mov jns and jg pop cs fsts cmp or ljmp and xchg jg test xor jg jo daa add lods push xchg adc adc add stc lds (bad) jg daa pop scas or mov push scas lret cmpsl jp rcrb loopne xor xchg mov adc pop push movsb inc xor xchg in mov (bad) scas adc cmp mov into inc push out and sbb pop test pop test mov pop popf adc bound jg fxch into xor xchg sbb test pop cmp (bad) jbe jg aad mov js or cmp dec (bad) aam xor daa popa fs popf ret outsl inc addr16 dec jg (bad) cmp test sbb lds adc push out adc pushf sbb adc mov mov mov fnstenv inc cmp cltd cmpsb push push (bad) (bad) pop pop fidivl xchg bts pop (bad) cmpsb mov insb dec ret rcrb and into cmp pop mov jne dec xchg jg call sub out shll popf cmp pusha test mov mov arpl inc and jg sub inc cmp lea pop test setbe jnp mov mov jg jae repz jbe scas inc in ret aam les jg out mov mov mov xchg xlat xor das loopne leave mov iret testl jg das xor out push daa mov jg imull cmpl aaa cmp sub xchg ja popf jg or adc mov fstpt add aaa insl pop daa aas sbb popf sub and push jae cmpb out adc loop sti aam jmp jg lea lea mov xor fisub cmc sbb add push (bad) jg lret or (bad) xor sub jp mov sbb outsl jbe test jg nop outsb ljmp loop mov cmp cmc xchg and push xchg jg jb pop imul mov (bad) dec push sahf adc or popa (bad) jg sbb inc stc inc jne mov lds fdivr cmc jg sbb dec in jg sub cmp pop sbb jg aam (bad) sub daa cmp in dec jmp mov xor pop out jns inc jg insl fiadd jle jg subl fnstcw popf ret outsl js push arpl adc aad jg inc aas dec inc push (bad) mov mov or lcall inc push jg sub loopne bound xor push pop cld cmp jmp inc (bad) lock out adc jg sar push pop popf sub int adc jno xorb dec inc jp repz jg pop or adc cmpb sti (bad) jbe jb jg mov scas xor inc inc pusha adc pop scas jg mov and jg cmp add popa mov in adc outsb jb sub leave ficom inc (bad) insl outsl xchg fisubl lea out push dec adc dec fcompl push nop mov (bad) xor or push (bad) xorl enter sti mov inc test jg clc (bad) pop pushf aaa call jg scas insl icebp int3 inc adc or pop mov jg push push sbb test gs mov push mov scas nop (bad) sbbl pop add lret jg pop (bad) dec cmp mov fild std (bad) mov cmp mov xor mov inc xor jecxz sahf cmc dec dec and lock mov jae jl test mov inc icebp into sti jno pushf mov push and arpl jg xchg inc cmp xchg push fldenv inc jg jle cmp mov loopne ljmp jg shlb jg and testl fistp pop rcll mov pushf sub add mov arpl stc xchg jg in dec (bad) lea ficompl aaa mov jg cmp inc (bad) test jno jmp test add pop xor ljmp sub xchg cmpsl mov aas xor iret sahf pop dec add push push popa mov or mov fdivrs inc (bad) aaa stc xor lea inc jne xchg jg inc pop inc mov mov inc pop mov outsl adcb icebp ss out dec js xor cld bound adc mov xchg sub in xchg movsb jmp das and mov jg gs jle dec jg enter das sbb aas mov sub gs and loope rorl jbe mov roll outsb repnz lahf insb (bad) pop cmp loope test jg subl cmp (bad) loop jg enter or fdivrs add sbb mov cltd vmovdqa ja or aad in jbe test jg adc imul mov enter jecxz,pt dec dec xor cmp adc adc cmp cli push lods int insb shlb ljmp and mov jle push pop jb dec cmc jg rorl push pop adc mov inc (bad) (bad) cs cmp jp icebp fdivr insb (bad) mov cmp xlat imul cltd inc push movsl test mov mov movsb jnp mov pop pop sbb mov mov cmp mov mov mov nop daa lea in sub sbb arpl inc sti inc repnz loope rcl mov pop cmc pop push (bad) mov mov test pop shrb jg decl popa jg push inc cmp shrb aaa dec mov jecxz lds ds pop pop insb and mov mov dec mov jg sahf push mov jg add (bad) repnz cmpb or jb and cmp stos xchg mov pop mov (bad) mov repnz jmp stos push repz outsb aas sbb addr16 jge mov xchg mov sbb mov inc rcrl daa push cmp inc (bad) decb or cli jg into subb pop xor aas les push inc mov add adc add inc (bad) (bad) aas and xchg inc fildl and data16 mov cmc and pushf out jnp mov push ret nop jae clc jg les sbb dec adc and negl and mov (bad) scas loope push jbe xchg ja arpl adc xor jmp push inc mov jge inc outsl dec adc (bad) pop xchg out fiaddl and xlat cmpsb arpl fldl mov jl fsubs mov jg (bad) mov jne fnop jg movsb dec test or stos jg push roll cmpsb xor mov insl mov je daa jg inc movsl test lock test aaa fistl push pusha jg jb inc fild cwtl jg mov add out aad xlat rcr imul ja dec insb stos sbb push fisttp fidivr out xor mov jg xchg jmp and cld sbb push push jg pop or inc jg in test sti push aaa cld mov push sub jae jg jl mov inc sbb inc mov aas ds dec pop pop lock leave pop cmp jl push cltd les aas push and push pushl inc sbb jg dec mov lods push jae cli aad cmp dec add adc mov xchg ja aaa xlat das sti mov enter dec inc lock jg repnz add cwtl cmpsb jg push xorl movsl out add lcall aas or adc jle sbb ret and mov jg popf scas jmp mov push dec push sar push loopne dec lahf push mov aaa out dec inc xor ja xchg jg sub aad lahf pop xor scas orl rcrl lcall lret mull sub scas mov jg mov push sahf in jge dec pop lahf xor jp inc bound and and fistpll (bad) ljmp addr16 es jg adc int3 pop xchg pop jl sbb sti adc out adc push and ret xchg jg cwtl test int3 in aad mov and jnp pop pushf xor xor jg or imul mov fild jg push dec ret inc fidivl push ds dec xor out jg loopne mov faddl fldcw out loop jg arpl dec and pop rcr and jg flds out jle jo pop pop inc cmpsb pop out or jg xor inc imul pusha mov push outsb sub push cmp adc sbb and cmp add icebp jg dec imul mov fdivrl stos cmp into inc enter fdivrs jg push push dec jg stc pop (bad) xor adc jg cmpsl xor inc cmp mov mov add mov stos mov dec (bad) push jg mov push and push inc jp lret test movsl jo cmp xor pushw sbb imul imul mov fwait jns push out cmc adc jnp sub adc push (bad) xor push mov mov repnz pop jg adc leave xor arpl cli out lods call fs cmpsl lahf push mov outsl cli dec ss jo and cs push (bad) daa push dec mov mov popa dec inc lcall mov mov fistl jg inc dec into and mov or ret rcrl aaa in lret data16 and mov mov jb outsl add cmp repz jl dec sub rclb jg ret sbb xor in inc jg push pop pop in sbb into pushf faddl jnp aaa mov fcomp inc push clc pop add adc xor aaa mov pop xor mov jg add repnz rclb and sub mov jg mov lret dec or jno in jmp int3 (bad) xor das insb and jg inc add pop sub sbb fsubl or outsb jg sbbl mov aad dec dec pop adc dec (bad) and jle outsb mov dec pop xor in jo popf jg adc ss lods pop jo mov cmc fistpll mov add push mov jg cmp dec dec push pushf out notb shrl mov ja (bad) jg or jge jae test and sbb and dec xor ret pusha mov cmp je sub jg test push pop xor xor idivb xor fs sahf jg lret xchg push movsl jecxz jg or imul cmp jg jnp xchg fidivr ja stos das pop sbb shrl mov and jg repnz jo jbe pop add cmc popf (bad) jb movsl jp xchg lods iret mov pop jg insl jmp or push cmp dec in mov imul push loop jg and out arpl popa mov sbb cmc xor repnz loop jo jg,pt push adcl cmp outsl (bad) mov push pop bound pop push out and jg jp cmp bound jle rorb (bad) jbe jg add outsl cltd jmp dec mov mov pop fdivp inc js add (bad) jno or inc outsl add out inc repnz addr16 fidivr sub std je xchg adc jg movsl mov add or scas jg scas enter jg addr16 adc add jmp xor (bad) mulb xchg mov fwait push pop lret fcmovnb rolb adc je negl dec pusha pop aas gs aaa mov movsb mov inc (bad) jg repnz mov jp xor add mov scas fwait xor inc jbe jl xchg inc xchg std jg addl sarb pop mov mov sbb and mov popf (bad) push fsub mov mov jg test call jg hlt sbbl test pushf mov xchg cmpsl jg cmp mov cmpl cwtl jg (bad) imul mov mov aas jl dec in movsl mov rcr jb setb int cmp shrl stc (bad) jne insl bound jg sub (bad) fisttpll out nop in sbb les in xor mov jg fild (bad) in stos cmp rolb inc xor pop jp sub dec aad imul (bad) out dec mov or lret xchg dec leave add pop loop lret idivl roll sarb jno (bad) cwtl push jg nop cmp xchg jg mov andl jb std negb push jo jle or shrl (bad) pop or rcrl mov aad pop bound repz jg jl mov dec dec and xor jg loop pop sub data16 jecxz fimul xor xchg xchg cli pop cmpsl sti add sbb xchg roll mov aad push add inc into pop stc inc inc (bad) negl mov mov jg in je lods popa mov ja push imul jg jne fucompp mov fdivrl pop jns gs or out das sbb scas in fistpl lret stc aas lds (bad) out out mov leave insl testl inc jmp das cmp cmp cmp prefetchwt1 or inc cmp jbe push push pop inc jecxz push mov dec lds add fwait mov dec pop iret mov jae aad adc xchg jle sbb ret pop call xor mov (bad) xchg mov push (bad) pop inc pop leave and sub stos fdivrl jg and fcoms mov cmp (bad) xor out out xchg sbb popa mov aas inc mov mov fbstp mov int and cmp jg dec mov lret jg mov sub sahf addr16 lea movsl mov int xchg sbb push mov mov jg je lcall add leave insb pop push test je mov pushf sub mov dec xor popa notl jg jo adc out pushf jg stc pop int3 mov xor sti jl clc jecxz or push mov (bad) push add and cmp mov adc outsl jl andl gs ret pop call test pop and jg movsl pop inc mov or in pop jg jmp int3 mov cmp aas mov jmp insl or mov push dec stos pop inc mov lods mov dec in inc and incb jno lea ja andb mov jge jle push lahf jg outsl fwait iret and xchg jno ja jnp dec cmp (bad) stos aad pop sbbl jg xor pushf inc inc insl xchg aas pop and sbb inc jo jg clc insb adc add sbb cli adc inc das mov arpl mov lods xchg dec pusha sbb aam enter mov sbb adc icebp stos addr16 or ja and std js xlat and lea adc sbb aad mov mov loop pop add inc adc cmpsl stc mov jae mov call sarb imul stc mov add and aas in push popl jae hlt sub rcl negb jg jno fwait add inc insb aas and dec (bad) stc jg out xor iret mov push push cwtl fst daa jg cmpsb xchg loopne and cmp inc inc loope sub mov loopne add xor push inc sbbl lret gs sahf add das inc inc pop clc aas jmp addr16 mov jg aas or cmc fldt push dec movb pop jg loop mov js add outsl xchg dec test test mov ret clc dec sbb bound cmp loope xlat rclb pusha dec test add pop pop xchg in jg fisub mov jg cmp nop mov jnp xor mov inc xchg inc adc push mov fild jg cmp imul jg xchg std xor jg call xchg lret out mov cld lcall in fcomp sub dec enter insl sarb sbbl fild jg mov popa ljmp pop (bad) jnp cmc jae jg mov pop inc out push inc sub lds jg popa mov xchg jle ja xchg test js in fistp sahf nop jg push repnz cmp or rorb idivl (bad) mov scas cltd xchg jg mov add push push pop mov scas pop lcall jg leave pop push int3 or mov xlat inc cli push and and fidivrl jle loop jg mov jp insb inc push jg pop into add dec aas jg std faddl jecxz shll addr16 jg push das stc (bad) jae cmp mov jmp jno pop int inc sbb sub lods jg push imul cmp insb mov pushf add fwait jg in ss imul nop cltd xchg leave mov in jg pop mov ss pusha sub sbb je inc nop fistpll (bad) push sar dec cmpsb dec mov lahf movsb std jle sbb lret xchg jo adc jecxz dec ret xor jg mov inc mov (bad) insl mov stos push ja mov or mov jp cmpsl xor adc sub aam ret mov out jg jnp inc jmp and or dec pop push jp jg sbb mov push mov mov cmpsl (bad) mov jae,pn mov dec sub popa sbb pop out lods fwait push cmp lahf sub jmp and inc xor dec jg popa push mov mov lea sbb mov jg cs sti arpl jg inc mov aas iret clc add mov dec jg sahf sub pop movaps ljmp jg lods das sahf movsl ret pop int3 lock pop psubusw jg dec and cmp jg or test incb dec movsb cld pop outsl arpl jg inc lods or cmc jne out fwait push pop pop push inc mov js jg cmp sti out and insb popf push xlat pmaxsw sub sbb cmp xchg fmuls pop jb push cmp mov mov inc mov xchg mov (bad) int cmpsl mov js xor test cltd pop ss inc or testl sti mov dec mov (bad) xor rcr ficompl ss inc cmpsl sarl sub insl gs inc aas pushf jg mov sub push jg mov shlb mov cmp jg xlat mov mov sahf imul test loopne test jg (bad) std in arpl jp cs mov mov mov or and mov ja add xchg std jmp movb mov cmpsb mov adc sub into dec mov mov mov adc mov addr16 adc xor into loop movsb aas leave movsl pop in mov in cmpsl imul push scas xchg mov inc jg cltd sub xor dec and jl lods lods lock stos adc jg,pt mov (bad) cmc (bad) mov addr16 clc out mov xchg mov sub push das mov movsl mov repnz dec sub aam pop lds inc mov jno in into shrl fimul dec jg,pt push push cli js nop jg adc mov inc xchg jg cwtl (bad) fldl pop aas dec sbb add jp fsts add fsubs imull cmp push xchg outsb sti xlat fistpll dec clc sbb dec and adc movsl jg into and data16 dec mov pop xchg mov in jg push xchg xor movsb jg dec pop mov sub fnstcw and inc aas mov xchg and in jg mov or xchg leave jg les adc stos jmp mov ss inc dec add (bad) push mov dec aaa jecxz jg ja sar cmp jg xchg js xlat xor xor push dec shrb jg int3 je pop sbbb jae dec (bad) adc outsl fdivrl inc push mov lea push lret push js and dec push cmp pop cmp adc outsb sbb (bad) fisubrl fs insl jg aad nop mov and scas leave cli scas or imul shrl scas outsb fwait jb (bad) hlt jg adc lcall (bad) push fcmovb dec sarl (bad) aad pushf dec sarl dec dec mov movsb lock aad xchg add out mov pop cmp cmp int mov inc int3 xchg jg lock inc subb aas out mov sbb xchg js in add insl in cmc jg iret jle fisubl and negb sbb jecxz jg dec inc mov aas xor adc push (bad) jg call fimul out je mov rorb sbb inc mov sahf out mov push pop push cmp or divb call xchg pop push sub fdivr and jg sahf mov dec jg jae je jno pop push inc aas pop js (bad) iret sbb sbb inc mov pop mov sub jg rcrl sti push ret push fwait push dec dec dec jg mov iret pushf rorb mov cmp add cld (bad) pop outsl pop rcll mov inc sbb pop jmp out jg rclb mov mov xchg loopne mov dec mov les jle xor imul fist add mov inc inc push cwtl lods jg subl jg dec push add inc xchg int3 jg mov mov sub mov inc pop lea jg fcmovne rorb xlat clc je aaa jg and sub sarl ja jg ret add push jg pop inc xor sti (bad) mov cli movsb cmpl repnz insl xchg jbe jno iret cli addr16 paddw sarl jnp outsl nop mov adc lahf jg (bad) in stos push insb xchg stos loopne push data16 inc inc (bad) cltd inc addl movsl nop push inc dec fdivrs adc jns imul jo fistpll insb push imul xor adc scas and mov movsl hlt sub daa mov push aam adc addr16 dec jecxz sbb xchg lcall dec add sbb out pop sbb inc dec jg fistpl or sarb outsl je adcl jg mov aam jg jmp repz sub and adc add (bad) sub xchg fisubrl xchg pop xor xor call push jg mov pop pop mov xor inc pop lcall and scas hlt std out push jg stos pop jmp pop fdivrp aas loope cmp clc dec mov jmp stos outsb or sbb sti mov push mov std jg les add mov xchg pop xlat fmul cmp imul stos dec mov jg aad ss xor mov sahf out nop jne xor jg sbb fistl cmp and (bad) mov inc mov aam les dec ds jnp inc jg rorl jne popf jg movsb jo cmp push inc clc or mov shrl jg jle jno cmp cmpsl jg fsub xchg lods js xchg je pop pop inc arpl cwtl inc jg sbbl push icebp push aas sahf loopne scas jne or movsb mov or jbe push mov jg add pop jge add or into dec lret jg rol (bad) xchg pop xchg jg cwtl mov mov xchg xchg pshufw hlt lret outsl or shrb mov jg or cmp cmp pop insl int3 jg and iret jae sbb push sub addr16 inc jnp pop jg fnsave lods inc in jg add clc mov pop rclb mov pop xor (bad) fldcw mov pop repnz sahf cmp (bad) jg nop dec and xchg jb jg lods fmuls mov jo,pt pop or and shlb jg cld test inc jg sub push jnp pop in mov mov sti bound popa mov int3 test fsubl fdivrs adc dec sbb jg jmp add (bad) jno push sahf mov push dec in mov add jo pusha sarl mov lret lds in mov pop adc orb (bad) pusha xchg pop enter rol sahf aam lcall in roll inc pop mov popa inc addr16 sti jg and aad mov cmc dec push outsl pop xor fimull cmp aas dec ljmp cmp push xchg movl cmp mov jg scas repz xlat aaa iret mov dec xchg inc jo xor out adc mov je out fsubp dec pop out add pop aas push push jns push inc inc jecxz mov ljmp enter mov mov pop pop mov inc es xor popf inc pop jg sbbl jns mov adc lods (bad) insl adc or jg add jne xor gs mov test jg adc in mov sub cmc jg sbb add fistpll mov jmp jg insl movsl push cmp in jne and push loop fist jg pop mov sti xchg or and pop sbb lods xor jne rorb lds jg dec gs mov dec inc mov push pop push bound inc (bad) out push and mov sub mov jns dec ret bound or loope inc negl loopne push inc xchg jg jae aas popa xor xchg jg xchg adc jg js (bad) dec test les fcmovne and xor xchg cmp and (bad) cwtl sar xor lahf jg xchg pop hlt inc jl jg sti and out fldl jg fistpl mov sbb jg sahf pop negb pop mov aas lds jg adc pop shrl jg mov push ret mov aaa push (bad) aad inc imul icebp lds pandn xor fadds mov dec repz in sub fwait jg mov outsl xchg jg out xor test shll loop sub dec cmpsb movb sbb inc pop and mov rcll sbb dec mov (bad) push jg cmc clc cmpsl xchg ret popf sbb mov and (bad) sti gs pop je dec in xchg cmp (bad) arpl jne dec push dec lret jg,pn xor xor push sub lock xor pop pop xlat xchg fstpt testl aam inc repz aad mov jg int xchg call jge push cmc mov in bound inc jg outsb loope sub mov ret or cmpl adc dec mov and ljmp dec in xlat call lahf jg add adc aas inc outsb inc ret xchg arpl into outsl lret gs and adc (bad) jg sub pop xchg and mov rcll cmp nop jecxz cwtl out sbb sbb mov jg pop movsb jne inc hlt ss div into jg dec inc test rsm sub cli jg es inc dec jo push and (bad) jg cs nop lcall mov jbe mov mov andl sbb dec mov mov inc dec movsl enter (bad) jg mov das push hlt ret (bad) mov lods xchg xchg dec loop jecxz jg in mov jl sbb push hlt cltd jp fucomi mov cmp adc sub aad sbb inc xor dec adc out mov fwait insb add addr16 pop or dec pop das mov dec sti inc icebp rcll fiadd (bad) loopne mov jno pop jg pop xchg imul aas fstpl jge mov arpl jne jb and in dec jle jmp stc dec pop (bad) hlt fidivr std cmp inc jae sub cmp ja push mov sbb sub lea leave (bad) dec pop cltd enter push inc in jnp arpl push lea mov inc xor mov push pushf mov icebp in jns fwait pop pop xor sub jecxz mov repz sbb cmp push fcoml mov std jnp xchg jo repz rcrl rclb and or out je mov test jl jg mov jg sbb arpl push call shrb leave aas cmp addl dec mov mov aad jo add jg jle cmp out push and imul (bad) aaa out fcoml mov cs and pop jg mov or popf sub push sbb imul (bad) gs int shll mov lock lds lds push inc xor push cmc rorl aad or lahf inc jg cmp in jg out (bad) jnp xor jg adc lcall dec lds dec push xor xchg jnp pop jae jne mov sub lock mov test movsb loop jns push lea add (bad) jge gs inc pop in (bad) jbe pop cmc and jg ret inc popa (bad) mov pop jb arpl out jg lds icebp mov push and or stc mov outsb popf sbb sbb mov outsl ret or scas xchg push xlat sbb mov test enter je xor mov gs sub adc mov outsl int3 fdiv adc cld mov fadd nopl add jg or xor cmp es jmp cltd lea dec dec inc loop repnz push pop jecxz addr16 jae addr16 imul push aas add imul cli lahf addb sub dec cmp dec fsub mov popf cwtl loop sbb lods jg or orl rorl (bad) jg fcmovnu (bad) jmp jg push mov lea xor cmp pop cli sahf scas dec adc ficom sbb cs ret add dec jg jnp and pop aas push jg mov xchg test mov cli hlt pusha (bad) outsb ret sub xor dec or (bad) jno or aas xchg int3 aaa pop (bad) ret sbb fidivrl mov inc mov (bad) xor fmuls add fbstp idivl dec pop faddp notl mov cmc (bad) or mov jne cmp lahf pop mov or jg or cmp dec mov fsubs leave mov aas lret inc outsb cmpsl lcall mov inc sbb out and jl aas mov (bad) xchg fcomps enter mov pop jg iret inc (bad) mov push imul sub popf sub sbb sbb jp pusha add movnti (bad) repz das jnp jg ss or int3 bound std inc adcl and jg or idiv jne mov add imul nop mov jg jbe,pt mov pop bnd ja jg fstpl imul push outsl pop or das jbe sti mov lahf aaa scas shll or adc js ja dec dec mov jg inc push iret mov jo xchg scas jno cli xchg cld add and clc fsubr jg sbb pushf pop icebp call add and dec mov add xchg das xchg and cmp jg rcr cmp aas sbb in jg sbbl fistpll jno out inc mov mov jb dec add push mov imul fmul dec jg adc mov icebp push call ds xlat and pop dec cmpsb ja jg push mov cld subl push push dec mov mov xor cwtl clc sti shll and jp hlt mov aam lret add aaa out inc cmpsb push jmp and and (bad) insb pop pop out xor loop mov mov cmp push jnp jns mov mov xchg jle sbb std push mov enter dec lock leave and xchg imul adc jae insb enter js cld add pusha rclb jo dec leave jg lods sub (bad) mov repz out cld ljmp js fmull ficompl bound pop add jle lret inc and adc cmpsb lcall fisttp adc mov jge jge loope addr16 jno pop jg ret and or cmp add rcll pop inc (bad) dec pusha push jg jo lahf mov or push cwtl xlat sbb jg xchg loope icebp in ljmp adc cmp and andl mov push mov mov push xor jg fs inc mov jg faddl dec imul cmc adc js mov movsl add adc sbb lret jae ljmp ror sarb pop jg ljmp mov pop aad mov push cmp test jg pop add sub insl mov stos test sub loopne cmpsl jg push inc mov fisubrl mov test into mov test ret cmp xchg jne sarl sbb repz in inc push sbb mov das (bad) xchg mov adc push gs jg mov jbe inc xchg sarb mov sbb fdivrs mov mov adc in lcall or cwtl jnp push or lahf jg and jecxz mov jne movsb es jg ja jnp sbb jg xchg cmpsl jle shll jle jo out fcomps dec xor jg mov mov mov xchg mov outsl scas rep and lret and adc push out mov push jne or in scas fbld add mov cltd pop jae pop inc xor test pop jl lret xor dec je out test cmp fistpl loope jg mov sbb mov adc cmpl cmp dec outsl stos inc out mov fnstsw xchg or aas add lcall adc js mov jg leave into mov cmp repz in data16 jbe rclb (bad) and jg loopne and dec push jg sbb sbb dec jg je dec fmull pop jg fcomps fstpt inc es xchg and shll outsl or xchg fidivl or sbb aas sti dec mov sub inc jg ss jbe mov sti mov sub insb pop (bad) int3 call sahf mov cmpsl fsubl mov xor mov sarl in xor xor enter mov xchg outsl and sub cmp lock or push subl imul cmpb jg push adc in test out cltd stos mov xor and add pop (bad) cmp ficom sub mov dec lea pop inc jp cmc mov addr16 iret jl xchg arpl jb js outsl mov jg inc or test orl mov push mov jmp pop idivb jg xor inc (bad) (bad) jnp imul mov lods jg enter in stos cmpb roll jo notl and fidiv or cmp add fcoml jg ljmp jg fisttp or gs (bad) lock jg decb mov cwtl sub pop jl lds mov lahf pop jg das add xlat cmp pop mov xchg sti popf jg xor pop ds and in dec push mov (bad) es jmp test mov mov sarb lret mov and pop vunpcklps push xchg fsin dec ja lods fcomp dec sarl jg inc ror aaa std lock mul mov outsl inc and loope add imul out xor pop add push lods and cmc add and xchg lahf nop mov sbb jg (bad) aad test sub aas sub ret dec inc jecxz push std les roll or sub push in dec add mov movsl mov (bad) jge aad or push sub mov pop inc add mov ljmp mov xchg pop xchg push or sbb popf sbb or and (bad) mov loop js cmc fidiv push pop adc xor cli punpcklwd jb dec stos movsl jg jne orl testl push push rcrl lds cmp mov inc ret jno add jmp mov sub adc std cmpsb inc mov sub sub cmpsl mov loopne jg add bnd iret js cs push in sbb pop pusha out stc ja adc inc pop mov or jg into mov jg jle loope jbe inc jg js arpl lea and add pushf adc xchg stos jg sub mov addb jg or mov mov jg xchg fnsave dec (bad) lock mov jmp (bad) or xor jg fwait scas adc lock out pop or xchg cmp jg popf jmp sub jns push dec lock out cwtl clc inc or inc shlb insb dec fcmovnb roll push fisttpll outsl xchg jg pop ret mov or (bad) (bad) mov jg xchg sub dec fld mov push push out fisub xchg jg mov in negb cmpsb enter insb ficomp jg je popf add popa inc fisttp aad fmul fisubrl aas pop popl test leave loopne and pop shrl xchg jge jg adc popf idivl cmc and aas pop rcrb inc and mov jg cmpsl cmc out scas inc test mov fisub stc jg jbe enter push jg das or test xchg imul pop mov lods std add dec jg sub movsb or add aaa jl icebp xchg sar inc xor out mov cmp loop mov mov push pop and sbb mov push xchg loop nop lahf push inc hlt jle jp stos dec pop sub dec and js ss jle jbe adcl inc aam cmp dec jg jecxz cmc cmpsl or adc in xchg fnstcw js add xor pavgb xchg jg movsl scas push jns dec jg fldenv add bound jnp jg iret lods add arpl mov and dec fnstenv dec je sbb stos fs push or sti subl sub xor aaa lret jg idivl xlat sahf or pop jmp jmp out or outsl cli pushf rorb inc cmpl jp dec dec or in add mov mov inc mov and pop mov lea ficoml xchg insl add fdivrl jmp cmp mov add leave je jg xchg dec mov imul scas xchg or dec lret rcr call mov pop mov movzbl pop fcmovnb fdivrs and and inc movsl aaa mov jg es adc aas jno push mov adc mov mov sbb rcrl mov jno sti pop ja faddl roll dec lret and gs jns aas jnp dec mov mov dec out jg sbb xor jg dec dec int3 cmp fstpl cmpb rclb idivb mov enter inc rcl insb insl or ss fs imul in jg fadds push cmpsb jg je push and nop cwtl jg call lock cmp pop pop repz push jg or xor leave mov (bad) pop enter aam daa jl push jg xor leave push jp rep sbb xor mov push jnp mov hlt popa ja cld add dec inc pusha xor ffree push jl xor clc or rorl jae in out aas inc inc (bad) mov jb inc mov out rcrb jne mov faddl mov stos iret jg cmp cmp and shrl (bad) lds jg iret mov clc jg ret and fistpll xchg (bad) in cmpsb leave int3 (bad) jg xchg pop imul mov lret xchg and mov jg pushf sbb lret lds jg aas push push in or test pop das inc jg or pop pop ss sub sub loopne jg daa call xchg jg mov mov jno jg enter out mov in pop mov rcrl pop jg movups mov sti xchg push movsl xor xchg pusha jae gs icebp outsl ljmp fisubrl out es inc (bad) xchg cs jns pop mov lcall jg lods out imul les xor mov fwait lcall jle mov add jecxz mov inc push out jg sbb jno mov int inc dec subl leave fisttp push jle repnz les mov xchg out sub push aaa pop inc mov sti je leave jp mov test xor jg popa xchg rcrl mov sarl lret xchg xor lods pop insl and cmp jle jg (bad) pop movsl ret es and jl test jg lahf scas fdivrl push int mov aam test enter (bad) fcomi cmc stc add mov sub aad cmp push mov jl xor jg leave icebp imul xchg out loopne jo jb mov stos add push cwtl pop leave jmp (bad) cmp sbb jecxz popa aad mov in push sahf scas cmp jno dec and adc jg xchg or adc or dec dec daa stc ss pusha cltd jg adcb jno lret mov add jg cmpsb insb xor cmp aas in fistp sbb or das pop jg inc shlb test mov push mov pop jge leave out add stos jg fildl sbb mov cmp lret cmc fadds (bad) and jns jno nop jg xchg aad sub inc xor mov outsl cmp push adc in and cmp and fisubrl popa cmp sub fsubrs cmpl add push outsl das loope dec lahf xchg jg or std sar data16 mov into xor jle sbb dec (bad) fiaddl and sbb fs jo lea pusha lcall js jge fsub push pop push or jg subl jg pop fsubrl iret ret push jg cmp mov push insl mov (bad) (bad) je xchg cmpl jmp arpl idivb test jg xor mov jg mov movsl cmc aam aad inc mov pushf insb movsb jns imull (bad) sub mov jb jg or pop cmp rdmsr xor jg (bad) popa dec pop xor dec jg adc inc push mov push push push xchg inc mov sub dec jg repnz outsl inc mov lods lods or jg pop jmp and mov cmp jg in jecxz adcl outsl test lgs shl mov js jns mov cmp jmp inc pop jg jne daa hlt mov jg or xor nop scas fcoml sub es push push cld mov cmpsb jp enter scas arpl je cli dec lock hlt jmp pushf int3 imul push mov pop mov stc mov popa or cwtl jg (bad) jae cmp mov cmp je ss jns or sub or jg dec mov adc inc dec outsl or xchg aam or or bound js inc in aas jno jbe adc jg sbb test scas inc popa jg adc and push std cmp pop add mov jg pop cmp jg mov popf outsl mov adc ja jg cli mov daa sahf jae jg xchg inc sbb mov jo xchg mov jg hlt int3 jae add xor out pop hlt (bad) pop jg mov xor fs int3 xlat pop push les in jecxz outsl pusha sbbb push jg adc sbb mov add or or fcom jg test cli sti xchg lea lahf dec mov fnstsw xchg mov mov or out movsl jg shrb (bad) pusha std jg pop (bad) negb dec inc jg mov stos lds out enter xchg push and jg sbb int3 pop in movq leave dec and mov mov aad add add mov aas adc xchg sti ret pop add jo mov testb ret outsb dec iret test adc jg rcrl pop jg jb mov cli outsb orb arpl push jae jl jg pop and je fdivrs adc xchg (bad) lods jg scas mov lcall mov dec mov jg movsl rcr das sbb mov (bad) pusha push mov out jg ret inc ljmp jle sarb mov mov test test or mov cs mov adc daa jb sbb xchg ret aad popf xchg mov out loope jg pop insl ja cld ljmp sub adc dec jg cs xchg loop fcoml cmc push dec xchg gs mov xor mov pop push inc mov insl rol test dec out and jg dec leave scas or int jg daa xchg adc mov cmp jg jecxz in push jg sbb jns jg sub pop xchg mov fidivrl pop decb (bad) jg in pop jnp pushf aaa int3 xor fnstenv jmp or adc and inc pop dec es iret jl sub (bad) loopne jg or xor xchg leave xor imull pop jg iret sub lea (bad) arpl sub sbb mov lret xchg mov and mov mul and mov jns js mov pop pop sbb insb test (bad) xchg and ss in inc cltd jg add mov pop mov push ret lahf mov xchg add andl pop push aad jg dec sbb jg xlat add pop aas stos inc fwait or imul cmpsb out adc pop leave and pushf cs jg loopne jmp fwait (bad) cld jg jno outsl push or out or fidiv push push pop mov in jg xor jg xchg or mov jg mov pop xor lret loopne lds pushf pop movsb fnstsw inc subw cmp pop jle imul dec sub jg testb jg ret jae adc fcoml ret sahf cmpsl push mov lret pcmpgtw dec push fdivrs sahf pop fadds pushf mov test xchg clc jg enter popf push icebp lahf rolb jg xchg mov push rorb pop lock mov outsl je push xchg jg das mov test sbb in jg adc imul leave push mov (bad) btr dec or sub pop arpl loop fsubr or mov jg aas loope aam imul mov (bad) in lock jg notl sub dec cld pop jg lret xchg pop notl xor inc cltd out fsubrp jg adc (bad) iret push jg mov std jg andb fistpll dec pop push or enterw pop mov out fistpll adc mov sahf cld sbb addr16 cmc cli fildll cmp sti jg push mull pushf leave popf icebp lret mov ficom jg cmc stos je jnp fdivrl and xchg adc (bad) negb mov int call and mov bnd inc test test mov loope xor or aam (bad) (bad) jg rol adc jo ret addr16 aas outsl sbb inc lock push lret fdivs les ja inc movsl xor jns dec pop (bad) mov mov into mov sahf push sbb jg fdivl pop or repz mov pop pop call cwtl les pop push pop arpl or jg mov fldt cmpsl mov dec fdivl pop jmp fwait cwtl jbe aam pop cmp mov lock pop sbb xchg mov or rcrl in jmp jg adc mov sahf xchg (bad) (bad) iret repz lea dec test loopne dec or enter iret cmp fistp pop dec cmp mov inc leave cmpsb loopne scas or sbb dec fs rcrb mov or fdivrl mov and cmp mov imul dec lcall jg mov push pusha incl jno imul aas mov (bad) or or and push xor jg int3 subl pop sbb out mov out outsl scas pop sbb cmp sub xchg dec test push jb cmp pop jg cmp outsl cmp nop and mov insb xchg fwait jno fnop inc outsl jbe mov jle or mov js jg inc sub movsl jg cmpsb inc xchg dec dec push push jg loopne push adc repnz aam push out inc push aas cmc xlat aas cmp inc jg (bad) lret ret mov outsl leave adc andl sahf mov xor outsl sti (bad) aaa (bad) dec sarb scas sub sbb pop mov std in jg fisttpl mov mov mov pop (bad) stc cld mov xchg dec push imul test in xchg push scas push jg test pushf inc and jg (bad) jmp clc jmp cs (bad) xchg cmp sbb jg or cltd insb aas push dec pop (bad) jmp hlt dec insl repz sub or les mov inc fcmove jg stos push add imul popf inc dec mov xor xorl xchg jp scas outsl das fnstsw jg pop dec aad mov (bad) jg jmp inc xor pop loope lods xchg mov xchg mov leave imul stos xchg decb mov daa shll rcll jecxz pop cmp sbb xor sub jg scas loope test sti jne jp cltd call cmpsb ljmp pop or out clc push ret sti jmp jle mov push push jae pop fcos xchg mov stc xor lods test mov adc popa mov je jl std adc push jg out js mov int3 shrl fxch pop add xchg add clc (bad) scas add pop jg mov in sub call out scas jg xchg push xchg dec pop lds test push les lods jnp popa cld pop add (bad) jo inc dec mov addr16 test xlat in dec stc push cmp jg mov jg js pop push jne ja push andl iret outsb jg pop adc cmpsb arpl pop inc hlt xchg (bad) sbb jg mov loope imul (bad) jae jo lahf sbb ds dec (bad) sbb jge push xor pop jbe pusha cmc cmpsb dec mov dec sarl add test jmp lea scas jnp scas jg or xchg (bad) jg popf (bad) jns fdivrs aas adc out dec sub inc arpl pop dec ret int or xchg out xor je in lahf xchg lds mov xor popf mov push ret out or jg jle sbb xor jno sub adc repz insl inc adc out loop sbb jg pop or mov xchg je add insb in ds mov jg cwtl xchg or sbb cmpsl ljmp and nop out xchg push and fwait jg movsl inc adc jg cmpsb bound mov mov xchg mov jg aas (bad) fldenv xorl jno and rcrl in inc push (bad) jbe or lret jl push or scas das jg (bad) (bad) mov ret push mov fwait lret decl push aas call dec lret aam push jmp sahf cmp out ss fdivl aas and pop cmpsb pop adc inc mov mov jp push jae xor push rorb dec dec cmp jg icebp cmpl int shl mov sub les in cmpl mov xlat dec insl xchg stos sti push andl decl aas cltd ja icebp setl dec pop xor in fsubs fistp outsl push loop jg xchg jo cmpb pop lds lret mov fimull jg ror lea out jg lods inc add out dec jo cmp test sbb in daa mov xchg mov sub aad dec loope xchg jno dec fstpt fiaddl ja xchg loop shld jb fwait jg mov inc aas jg mov loope cwtl pop (bad) jg adc lea inc xchg mov pop dec addr16 rol or lret cmp jno imulb jg jmp sti aas imull cmp imul outsb nop mov stos test test jle mov jae inc loope jl mov nop jle inc out xchg mov inc push jo sbbl mov scas inc lds inc push nop pop inc int3 xor xchg lret inc add push ljmp mov mov and jg pop sbb and jg je adc sub pop cmp jg mov mov jg mov mov in push mov pushf dec mov dec aam loope les pop jg scas cli fist mov (bad) in std pop cmp fucomi ss or mov jg test sub sbb xor sbb loopne inc and repnz mov jp add jg leave (bad) adc inc pop in sbb dec dec jg aas arpl inc inc jg neg xchg and pop adc mov jbe jb mov in sub fs cmp jg popf (bad) sbb xchg and pop loopnew sarl and cs enter and aam xor jg mov call jg cld dec adc mov jo jg repnz dec (bad) movsb jg rorl fwait lcall cmp lahf jg loope sbb lock mov jg popa cmp dec adc mov (bad) ja loopne bnd dec mov mov mov int3 test lea inc inc pushf sti pop sbb ja push jl sahf loopne jle pusha mov dec stc repz xor jg pop mov or xchg and and shl push mov dec pop push adc int add pop std cli popf out ljmp mov inc add jg lret repz jg aas add (bad) or mov cmp mov jg insb jne enter jg xlat push or pushf adc dec pop ljmp jne int3 in mov push sbb lods jno mov mov test (bad) sti inc inc jo mov dec (bad) arpl lds push insl jne sub mov aas ja inc (bad) pmulhuw sub and fwait sahf mov jg clc test and add jle mov dec movl xchg outsb dec mov (bad) and jg push mov fnstsw dec sbb popf stos jle dec int3 pop out jg cmp adc push and arpl outsl test xchg mov test or lcall into rcrl insb and cli addr16 test mov jg mov add mov jg mov ret jae jecxz mov and dec jg push lcall scas std fcos ss xchg jnp les sbb add jg mov cli lods shr sub scas jp jg lods and or mov out scas leave loope jbe xchg jg sti cmpsl jp sarb push loope,pn icebp cltd jg lock fisttpl xchg dec sahf push push fsubl pushf mov aas jg je sub add push inc into jg popw and jg subl mov xchg notb xchg mov jnp test mov xor pop jp jl in jg sbb stos dec int3 adc jg mov hlt loopne lock cltd fs mull or or lds mov scas inc add jg inc lods and mov adc int3 jg fimul lcall cmp mov rolb inc jg dec pop add mov add bound xchg fimul pop and les outsl addr16 push mov jg scas sub lock pop cmp add es repnz dec cmp in xchg leave mov push imul inc fcoml sbb in dec addr16 sbb jae (bad) jg mov xlat adcl sbb dec cmp jg xchg push lret push clc jg sub je imul mov xchg push insb repz dec pop xchg (bad) pop mov out sub adc jg or push cmpsb enter sbb mov ret daa lret into pop popa add popf pop dec push aaa mov aas cmpl inc add pop loop les out adc push xlat jg out outsl cmp dec sub mov (bad) or jg into popa fldenv in lea xchg aas std xor sbb jge inc outsl jmp clc ljmp jg xchg jnp jg and sbb (bad) mov push in lcall pop shrl dec xchg cmpsb jg jne jle jno pop mov sub cmc push lahf jg cld (bad) loop add sbb sub mov (bad) cld addr16 inc mov or xor cmp dec inc jg mov sub add test cmp rcrb dec xor jmp dec (bad) xlat cmpsl jbe repnz jg dec cmc sub les faddp fisubrl add jl cli and fnop inc cmp idivb mov jb out jg xchg roll cli mov fcomps cltd movsb movsl jg mov lods aaa aas loopne jns jmp fimul push jg movsb pop adc in sbb adc rcrl push mov jg push daa cmp or (bad) jg add mov mov je push jecxz mov test push pop mov jg xchg pushf push jmp fistl enter push jg,pt mov add jg mov sbb lods inc int3 pop js aaa xrelease jge jae sahf aas lods in cmp ljmp xor dec cwtl jg scas sbb lcall repz insl test xchg loop inc test and push out sahf (bad) mov jg orl mov fs add out inc cmp fwait cmp mov pushf ss insb dec popa dec and into jg jmp push stos ret xor xlat jg pusha add (bad) clc bound std add jg aaa in jns push inc mov and clc addb sub movsb cmp int sarb stos sub push jnp inc jle orl popa insb jg es adc sbb jg addr16 push xchg inc mov out jg jmp jae inc push scas add jg (bad) dec insl rcr popf ss cltd jle pop mov xchg xchg rcr ss pop pop inc enter add sarb aad sub sarl xor add xchg into cli mov sti imul jg inc mov bound dec lret xor xchg jg cmp sti jg adc mov sbb or mov daa bound push andl xor fbstp cmp pop je pop aas (bad) sbb dec bound mov outsb xor xor loopne hlt dec jg dec inc mov loope aad nop sbb fisubl mov inc jg add mov jg xor xchg jg lret lcall xchg xchg fistpll das out fwait sahf dec addb jge pop cltd in lds sub aas push mov bnd lock push xor push adc add pop cmp lret insl divb jg sbbw push fidivrl jns les jg stos pop into xchg inc xchg adc ret (bad) testl (bad) lret add popf inc lea xor jg int add outsb out sub popa lock (bad) mov adc pop push lea jl xchg fsubr adc adc push (bad) mov push lret lods movb out jg and push fadd dec mov sbb jmp push outsl and (bad) int or mov pop push push pop repnz pop jg lahf mov jns into pop mov sbb and ret push (bad) jp pop mov inc lods mov (bad) sbb xchg pop xchg inc loop aas add nop lahf pop mov adc jo hlt sahf jmp dec cs add je stos out sahf push in dec mov push dec pop add pop pop mov es rclb (bad) jp dec outsl adc fiadd mov dec push in scas dec lret setnp les push icebp in out pop cmpsl mull outsl es cli cwtl ret jg pop movsl mov mov aas imul ja test stos jg lret je cmpl ja fiaddl pusha and loop mov addr16 ds pop jle inc sub je mov push push and stc inc mov insb call inc jne push sbb js inc mov psadbw hlt jg push sub and jmp stos push xor xor pop (bad) insl pop mov movsl xchg adc push cmp xor cltd jg and fs mov shr jg jge rorb imul mov or aad shlb cmpsl inc repnz aas jle push push jb lds inc je loopne xor or xor arpl outsl or mov test mov mov or jg ljmp scas sbb jg test enter mov push pop shl inc pushf fildll xchg les jl mov sti sub sbb xchg aas ja in outsl mov xchg sarl ss and daa mov ja mov mov and jmp dec adc dec test pop and jg pop cmp scas mov lahf shrb push std (bad) fs inc dec dec pop jg push mov sub bswap ljmp (bad) mov lret (bad) lcall lcall dec mov jg xchg sbb imul mov jg jl dec xor add dec pop xchg mov sar (bad) in sbb subl fdivp and sbb jg arpl mov jg sbb into pop enter cli (bad) (bad) lock je adc mov jno inc mov push jg cltd lcall icebp into ja fcmovbe or add dec push jg mov or mov pop ja sahf iret push insb jo jg (bad) sbb add jg fbld aam sbb aad lods stos rorb mov addr16 jle je inc mov ret aad cmp stc mov sub mov push jg adc jg out lock hlt (bad) jg jae adc mov xor lcall movsb aas inc addr16 jg mov insb sarl lcall flds adc jl xchg popa and dec mov insb das mov nop cmpsb inc out and dec fldt push cmc inc xor fwait jg sbb mov cmp js icebp sbb sarb and xchg inc add insb pop fsubs imul cmc dec xchg ja mov cs sbb xor mov push outsl negb jg pop popa mov dec sti (bad) mov outsl or loop stos jg je pop sub sbb sub cmp inc and jg in (bad) mov jg ljmp mov mov dec enter dec fldenv jg push cmovnp popa int3 adc mov cli jo aas fsts sbb jg mov sti pop clc outsl mov mov xor xchg dec add adc sahf jne stc ret mov adc pop mov sbb mov mov push push ror out mov jg xor lock sbb aas loope lds push inc movsb ja dec and pushf lock and xchg das hlt outsl jno dec jno cmp out xor mov add fstl repz (bad) pop cli mov imul jno sti imul dec sub jp xor cmp scas sbb aaa push jge aam outsb cmpsb and jg pop and cltd fs les xor mov fdivrs mov jg or mov adc repz jg push push dec push push and cmc (bad) shrb fnstsw sahf mov mov inc and in mov or imul lock bound jg shlb nop xchg inc push sbb lcall jg jmp mov mov icebp cmp sti mov out scas ja cltd push mov inc imul adc sbbl les popa out jecxz pusha inc mov subl sub mov lds xor inc jbe fstpl mov inc sarl (bad) cmpsl jg mov mov cmc scas push adc xchg hlt inc outsl aas and mov jle mov mov add and popa lock and adc inc pop mov enter xor add pop arpl jg mov into cmp ret mov pop jle fs test fpatan cmpl cld xchg nop fstp pop lds cmp xchg jg or and fs js mov insb mov jne movq aam xor in pusha mov out push mov sbb inc decb (bad) stc in (bad) xor push push sti dec push jmp lods mov xor jg ret aad mov jg adc hlt scas (bad) repnz lock movsb jg and adc jg aam dec jns idiv and jg mov sbb cmpsl push aas ret adc (bad) int3 lcall js mov mov push cmp hlt pushf add pop mov lock sub jg xchg sbb pop lds jp mov loopne aad aaa add inc addr16 inc jnp pop mov inc adc aad test push jbe cmp pop das dec and jp mov js (bad) icebp jg scas mov add and xchg and in mov jmp pop push lock imul ss cmp xlat ja mov loop sti xchg mov or push and jg push push aad adc (bad) mov xchg inc stos in int jg jno sahf mov cmp movsl adc mov dec jg add movsb mov pusha nop jle mov jbe jo aad cmp push cmp jg bnd aaa fsubp test stc jmp inc adc bnd mov sahf call dec xchg xchg nop mov rorl enter stc decl shrb cs cwtl lcall jg push xchg adc push fldl jno arpl (bad) faddl dec daa ficompl and mov pop dec xchg sub insb aas push cmc addr16 into lea jnp mul xchg jg cld cmp popf mov daa dec cmc add push in loop sbb sbb outsl add fnstcw aaa jp xchg pop jg in and sbb inc and clc (bad) adc jp xlat add scas lods int mov mov sbb popf xor inc mov cmc adc push mov inc stc lods ja jg xchg and in mov or mov mov aaa stos inc xor jg repnz pop jg mov cli (bad) insb cmpsb jmp inc imul xchg sub dec jo shlb push xchg xor mov push mov add outsb dec mov repz sarb movsb jmp shll sbb clc mov (bad) xor mov jnp aad popa nop jg inc adc icebp in xchg sbb push inc (bad) (bad) mov pushf jp xchg lds (bad) or (bad) call mov jmp or fstps lods inc out subl sahf (bad) xor mov dec sbb call inc test push int out outsl cmc leave cli sub std or push xor sbb sub or add xchg sbb negb jns mov ja add leave jg or add jg xchg add imulb jg mov lods in jno aas mov cwtl inc push loope js clc icebp data16 jbe stos sahf mov insb mov mov inc jo arpl dec add outsl push test inc je pop leave (bad) hlt mov dec jg arpl icebp jg push cwtl loope xchg jbe jg in std cmpsl cmp cmp dec mov pop pushf movsb lret cmp pop cmc lds push cmp push es popa and jg sahf sub lock pushf jl,pt ret add dec les push insl dec (bad) lret insb xchg outsb jg mov lock xor push jae cmpl sti adc test (bad) pop xchg jg xor mov pop mov inc lds daa jg clc mov cmc jg pop mov push add push or jg sub popf jo addr16 mov (bad) mov push and and push mov lret push inc jbe icebp jg repz jg mov pop fldt jg mov lcall cmp push dec jg in xor cmp mov xchg mov mov lods jg ds mov popa add and testb push or cwtl inc pop fcompl jg mov (bad) fstpt sbb das dec (bad) ret mov add cs movsl sbb dec or xor test sub loope jg in inc scas out test pusha in rcrl cmc stos inc xchg jg add shlb mov decb mov loopne pop mov int3 push add aas push sbb lret jecxz sbb test imul jne push (bad) loope pop fnstsw aaa push add ja leave xlat add push jl push iret sti in out jno popa mov lret mov arpl push jbe das in in jg inc stos stc leave scas mov jg sub dec les or je repnz movsl cli cmpsb outsl adc xchg pop fimull push jg nop inc pop jnp sbb or loop jmp in push mov jge jg xchg sarl xlat nop pcmpeqw or aas fsub fwait add movl gs (bad) repnz jg inc or dec adc pop aas sub sbb mov jg push mov mov push xchg sbb mov aas add xchg sub adc aaa test xchg inc xor jne sub pop xchg mov fldenv xchg iret movsb ror xor jg cmp or into (bad) jg leave insl mov gs scas xor adc push cwtl jg stos and xchg mov cmp jg push sbb jg sub mov cli mull lock push sbbb sub in dec add ja idivb or dec dec (bad) mov pop push lods push addr16 jg lret mov (bad) sbb jp or popf dec movsb pushl icebp or dec sub jg inc es (bad) inc mov sub fcmovnb fdivrs (bad) cmp xor jns jg popw sub test adc in sub and (bad) sti addr16 jb repz mov xor idivb pop mov mov inc xchg jg test mov je test call aaa mov push es sahf inc or jae fcoml jg andl inc push jg mov mov imul loop mov sbb out (bad) mov pushl jmp mov mov mov and adc inc bswap test jo sar rol sti sbb mov jmp xor cmp jg add cmp jg ljmp aas lahf push outsl adc mov pop xchg xor setb jmp add mov (bad) out (bad) mov mov stc adc or sbb cmp cld mov and jg sub mov xor int mov aas popa leave es sbb jg test pop cmp out bound mov jbe (bad) lock jo mov addr16 rclb jns ss (bad) jg rorl ret fmull insb lods jge mov mov push bound jne or mov iret rclb mov cmp enter inc mov or cmp imul add push add pop adc loopne sub and scas outsl inc cltd cmp jl flds insb adc mov mov push gs jg mov add push call xchg movsb dec jae push pop pop mov mov imul and xor test mov mov shrb pop outsl jmp jg sub movq lahf loope jns pusha lahf es (bad) cltd mov push les fnstenv int mov test mov jg ret add adc jp jl pop adcl dec mov fisttp jg (bad) cli mov rcrb inc and dec pop xchg aas js bound sti mov pop inc mov push outsl dec out cmp outsb in add dec mov xor mov lea push xor push and sbb ret pushf mov addr16 int aas and jb inc or sti cld insb rclb mov sub pop jg mov and call jge orl stos mov fs mov mov inc jns cmpsl adc push add fisubr out out sub dec arpl (bad) jg stc dec and jg pop out pop hlt mov mov xor (bad) cmc mov je fidivrl outsl jl daa or orb mov mov cmp lock cli std pop fimull adc fst jg dec rorb xchg jno sub cld lret push (bad) sbb das jmp or pop imul mov jg (bad) repz ss sub push jg mov cmpsl add jg test ret movntps mov push adc outsl adc jg add fstps pusha jg mov jg ja out jmp dec dec or pop (bad) xchg pop mov (bad) xchg repz lret popa cmpsl mov cmpsb inc mov dec sub ja mov push mov mov jecxz pop icebp xor jg mov jp jg ljmp jno sarl pop or lea aam mov ds insl xchg mov cmp dec dec xchg inc lock mov enter cmpl mov or ss jg jb inc sbb test jg popl int3 jg xor mov push jle inc mov sub in (bad) bound aam out jae int3 jg push xchg shrb outsb (bad) jg add int cld sub pop movsl and jl sbb pop inc aas pop (bad) push xchg sbb xchg cmp jg fist dec push mov test jl lret (bad) mov and (bad) push je ret test pushf mov pop push xchg repnz push sbb mov fidiv add add in stos inc mov jg xor cmp adc cmp adc popf add jg insl add inc ss jg push imul loopne (bad) mov mov sbb jecxz es gs pop cmp xchg jo mov (bad) aad pop inc mov jg dec xchg sub pop fsubs jg fildl lret cwtl and dec jb add dec fdivrs es mov stos popa pop scas jl pop scas imul jae pop jg or pop ljmp nop jecxz mov popf inc sub jnp pop fcoms xchg sti repz mov pusha sub pop cwtl cmp ja into pop adcl out je push cwtl ds inc cmp xor push push lahf cmp xor addr16 in das dec jg iret or aad jae mov xchg xchg aas mov xchg add arpl ja jmp push scas jp pop sub and testl (bad) arpl jbe (bad) push mov mov pop lock aad dec imul out fistpl mov mov pop (bad) adc mov pop push lods orb xor jbe and out jg xchg push jg add movsb jg int3 and repz ret out (bad) hlt (bad) (bad) shrb jg insb int fadds mov lock hlt xchg dec lea adc das add pop leave mov pop jbe clc sbb pop das pop repnz jp inc mov xor inc dec push jg and xchg mov xor (bad) negl lds mov and sub pushl mov sub jns dec inc dec jg lock (bad) mov inc push pop nop imul mov mov xchg stos xchg sti cli mov sarl dec pop andnps nop out jo cmp push mov adc cmp xor lcall cmpl or pop xchg or test mov jo fnstcw imul test insl push or cmp xchg xchg outsl in xchg adc into ljmp mov push insb imull jg (bad) jp fucomi add jg lret cwtl lret pusha stc sub sbb fucomip nop mov dec jg jae xchg pop shrl or or and scas movsl jle mov (bad) or cmp jnp xlat jl pop mov lret inc pop cmp add jl mov stos and xchg or push add mov adc cmpsl xchg mov popf adc (bad) aam jg pop sub dec cmpsb std pop jg push lcall jae inc jg adc jp inc mov cmp pop jae mov roll stc mov dec lcall inc or daa mov xchg and fcoml sub cwtl icebp lret mov xchg jg lods fscale int mov jg push test aas aas (bad) testb mov pop (bad) sbb iret lret jl and out fnstcw mov call pop push loop out adc mov mov jg and mov aas (bad) mov jbe push lret leave or mov enter xor mov inc jae rorl jg test mov jg sbb (bad) idiv aaa das or std outsl dec in xchg loopne jo fistpll mov ja push cmp push jg push in adc lds jg xor cmc iret movsb scas js pop rorl xor mov lcall jg fdivrl add ljmp xor ss jg mov push sbb cmpsl jge ljmp pop mov pop and mov xor xor daa out fbstp or pop (bad) push push out dec jo loopne std xor mov shrl int sbb out add in xchg or or das jg mov (bad) into mov test lahf lret inc mov ficom jg push cli inc xchg jb sar nop xor add es pop cmp in out (bad) inc mov jl adc sub and mov mov cltd jg test pushw nop int3 enter lcall push insb ds roll sub pop jg mov pop (bad) xchg aad mov and jg aam outsl mov (bad) push jg inc ret jle aad sbb or (bad) mov movb xchg movsl loope push add outsb dec mov jg lock sbb xchg addr16 xchg jg je mov push inc inc push inc sub jg and dec sti jg add lcall js out push jo scas mov xchg push repnz nop aas xchg xlat (bad) adc jns pop cmp mov fisubl lock or fdivs cmc loopne jg sbb push lea lahf xor fdivrl xchg in popa in or xor (bad) je add aas pop pushf push dec inc or and mov adcb inc jecxz pop xchg jmp and dec jg inc and test sub daa mov jnp xchg test dec ficom arpl clc inc or jg cmp test mov pop jmp xchg pop inc imul addr16 cmpsb inc int3 xchg jg and js jg mul cli enter mov insb push outsl int mov movsl jg ds in and data16 in push adc (bad) enter cmp insl orl mov inc call jecxz inc testb and bound ret push push xchg mov test int jg outsl clc stos rorl push xor (bad) mov mov pop mov arpl and sarl pop sub jge inc mov inc rcrb jg fistpll sahf fcompl mov int sbb pop jecxz hlt jae sub (bad) jg xchg js mov pop loope stc inc test mov fmull les mov iret mov mov fs sti and push fidivr adc int3 cld adc jg cmp test dec dec (bad) out dec cmp cmp pop daa jmp loop and jg cmp pop out fwait push jg jo ret inc aad cltd jg test pop lock or call or clc cltd bound sahf aam in pusha jl sub mov sub jg dec aad mov mov add ljmp inc adcb jg xchg dec mov jle ds jg sub idivl add and xchg scas and gs jg add xor cld sbb mov imul jno jg mov xor or hlt aaa loop jg adc push out ss adc loopne xor mov mov xlat jg and hlt mov inc mov push adc sub sbb movsl out add es rcrb daa push sub cmc sbb movq pop jle in or lcall push (bad) mov xchg pop xchg sti outsl fstpt cmp jg cmpsb lcall jno pop push pop dec fwait jbe push sarl jl dec int3 push push mov lods test push aam jg sub sub jbe inc push jg or dec dec add fsubrl mov notb sarl jg xchg pop sbb inc in jg mov mov jg inc inc mov in jg stos leave (bad) (bad) pop aam jg sbb repnz je adc cmp mov cmp sub push lock jg fcomps jo fildll sti sub jg adc mov jg out imul pop shrl mov int3 lock mov push sqrtps mov jg or jl and cmpb rcrl mov loop ret (bad) movsb fwait jg mov xchg xor push fildl mov xchg sub push frstor arpl jg add cmp jnp sbb insl insb popa cmp add ss sti mov jg stc gs or outsb jg les stos ja or and or inc sti jg (bad) cmpsb dec bound ss sahf imul mov mov inc jno push inc xor fimul pop into add aad push int (bad) int3 leave insb ret data16 stos insl ret and jg sti in adc ret jg fiadd push xchg call dec (bad) jno cmpl inc push mov lcall pop and test jg mov mov pusha (bad) (bad) in mov sahf out daa mov xor mov ret js jb jg pop mov cmp movsl mov dec push inc sbb mov mov jns (bad) ljmp sbb jg jo dec sbb cld jg add xor jg imul sub pop cmp inc (bad) jg xchg data16 cmp mov xchg lods shrl pop jo cld add into mov cmpsb outsl mov shrb out imull jg pop mov ret or das jg mov inc push outsb sub jg push lahf out push repz mov addb jg (bad) fnstsw jae,pt (bad) popf push outsb movsb dec jmp xor sti in xor jg out add jge or loopne hlt pop push xchg outsl dec mov jg xchg push mov jg mov push pop std adc or xchg in jg jnp mov adc jg or push or inc jg fsubrs mov and movsb fnstcw mov jp jg pop int sbb xchg mov in jmp jg js es cmp pop mov add pop arpl pop xor dec jmp add ror sarb into xchg fdivl addr16 scas mov jg mov ret ds (bad) nop jg cmpsb sbb jg push lods mov sub fdivrl jmp jbe icebp daa pop jg aad ljmp cmp fcoml test mov repnz xchg test nop jg pop push cmp and inc repz xchg mov arpl shlb in jg lcall jg aam movb ret inc adc dec xchg push sub mov cmpsb rcrb push mov and (bad) call int3 into mov sbb dec divl popw xor jp outsl xor ja adc pop stos lahf mov xchg xor mov xor jo mov sub (bad) test mov enter pop shr loopne aas push pop aas mov push dec inc adc int3 pusha xlat push jmp cmp xchg or cltd mov outsb inc adc cld in pop lods xchg arpl sub divl ljmp adc inc xchg ss jg ja pop mul mov push imul push pop repnz sub lret jle xchg cwtl dec adc and fldcw xchg jecxz inc (bad) mov pop mov jg pop lods int3 in inc fdivs jge call loopne jg mov out add popa push repz add mov and fadds jg cmc jl fidivrl dec adc adc lods ret in mov mov dec and jg jo iret cmp xchg in cmpsl jg dec sub jg dec (bad) cmpsb xor loope and stos mov fdivl lahf mov out cmc adc or test ss add test xchg pop out pusha adc push in jg mov ss icebp adc jne adcl mov mov std cmc test mov add cld push mov repnz sbb (bad) pop cmp (bad) jo,pt mov cmp mov xacquire dec xchg outsl push mov push jg movsl jns mov imul outsb mov mov dec dec push ficoml jg xchg popf pop imulb aad or dec cwtl mov inc xchg loop pop cmpb push and xchg jg scas popa xor jg rol jle fwait push ds or jg jbe (bad) sub jg adc mov in push arpl sti (bad) push mov lcall sub sbb aas or mov add lcall sub pop orl insl sarl lcall mov push ds push jg add scas shlb dec sti and xchg or cld into ja jg arpl lods cmp std dec jg (bad) int fistl test iret inc movsl cli push aas shrb add int mov outsl pop inc ds cmp dec dec mov jg imul push mov push xchg pop pop inc inc int orl mov pop xor mov pop cmp jg test cmpsb (bad) gs and mov (bad) int sbb setnp ret pusha mov ret adc mov inc mov jg add xor push jg sub (bad) sbb dec add mov or ja (bad) jg icebp pop cmpsl sbb hlt mov insl lods mov push rcl std jg and jnp xlat xchg fidivrl arpl iret (bad) decl xchg (bad) mov ss (bad) sti ret dec cmp push jg mov stc jle sub jg xor aas test paddd jnp scas jg sub lahf xchg pop lcall sti (bad) into cwtl out mov jg cli dec sub push cmpsb pop jg dec in testl insb out jb movq dec adc jge cmp sub push nop jbe cwtl jg scas or mov push xchg mov sub cltd inc cmp pop out inc addr16 jg xchg cmp dec leave jge jg add and repz jg xchg sbb loope xchg scas fstpt aaa icebp sbb mov jl sbb mov jbe dec out ja jg rclb arpl jo inc loope inc ss cmp fistp subl cli xchg aaa jg cmpsl loopne lret push mov lods test jg and mov pop nop mov cmc aas fistpll stos push pusha int3 jmp stos mov add lcall ficomp adc push fwait inc push cmpsb jg dec jmp mov cmpl ret push inc enter and negl xor sbbl je xchg inc pop adc nop cmp fwait dec dec test pop (bad) insb inc popa lahf dec jg lahf jge movsb in in jg nop shlb jg test daa jg adc xor out mov int3 xchg rcrb add or inc (bad) jmp jg bound fisttp sbb pop push push pop xor scas cs push in xchg jg or and or jg or cmp loopne dec fnstsw hlt adc dec sbb and stos and jg faddp lahf mov pushf imul jg jns mov jg outsl jmp pop sahf dec loopne push adc pop cmp sbb out push mov loopne mov dec sub or adc fdivr jg loopne and jg dec cmp or push jecxz std pop aaa and lahf loopne push or xor dec sub mov data16 sahf push xchg mov outsb push fwait pop mov (bad) push sub addr16 imul pop es popa fsubrs cmp scas mov cmp adc sbb outsl pop xor cmpsb or push fwait into outsl in jo adc out xor dec xor xchg leave sbb in popf xchg lods pop jg scas jo (bad) mov and dec inc popf popa push sti pop xchg add mov xchg cmpsb inc fdivrs hlt xchg or sbb push mov dec in cmp (bad) xor jb or jl inc sub scas lods jg jne nop in xchg or adc jp out xlat insl jg js mov (bad) xor addr16 ret jns lret cmp lock mov (bad) repnz out adc arpl inc aaa jg and xor scas icebp or call cs stos jg insl inc subl movsl rolb pop (bad) push gs add add icebp stc (bad) je das push jo fisttp xchg int3 sahf sbb dec mov jae jbe sahf nopl je fs mov faddl or mov loop stos pop jae mov jl rclb jno pop mov mov je sub repnz imul (bad) in mov push add mov mov out leave nop dec bound xchg or aam mov pop push sub gs and jg mov mov testl inc shll inc mov jg sub clc insl out stc dec jae cld dec pop in fdivrs fistl cmp sbb jb jne ret and jg out dec loope enter out out daa jg mov push divl pop add mov inc inc jns jg inc (bad) (bad) xchg fsubrl jg in and test push xor (bad) cwtl (bad) pop movsl push lea cmp leave sub jg in ret xor adc pop pop cmp orl lcall mov test (bad) xor dec inc dec mov mov pop out std out mov jg adc jg mov loope aas rdtsc mov mov or cmp cltd xchg mov mov push outsb data16 sub (bad) dec pushf jg cmp xchg nop pop cmc jg dec out (bad) jmp pusha fsub test jg jmp sbb aas adc mov js test push and jg xchg out mov fs pop (bad) adc test dec xchg jmp out push rcrl stos adc mov iret imul adc mov inc mov imul sarb dec adc inc xchg ffreep push pop push mov add xchg repz cmc std push xor mov cltd (bad) pop cwtl in mov push pushf cmp (bad) adc add jg and mov sti jg dec icebp dec insb pushl jg (bad) pop (bad) lret xor stc jg test rolb xor inc out in sub jg imul or out jmp loope dec jg jge sahf insb pop cli lock jbe jg sbb (bad) or addr16 shrb push fisubrl jg xor cmp loope xchg mov mov lahf shrl dec cmp fcomp (bad) jbe or xor out jecxz jg ss mov fcompl leave sub xor mov cmp adc mov jg add call jg push rcrl dec inc pop inc hlt test mov ds repnz sarl call jg dec and stos jg mov daa cmp ror es cltd add repnz mov out pop jg jbe cmpsb imul jg ficomp sub mov insb std pop inc pop mov ret xor push mov and xchg mov into jae aaa rcl jg sbb mov daa jge cwtl dec push idivl lods addr16 pushf adc mov repz dec hlt jns adc cmc jbe push out sti add xchg jae jl xchg mov adc ja leave icebp inc les and adc mov jg and mov paddd or mov push in add jg dec xchg nop push movsb jnp jg ljmp js lods lods jne mov mov jbe inc addr16 test sti jg jnp mov jg xchg jb imul cmp aaa in push (bad) scas xchg push mov les not (bad) sbb rclb pop xchg mov xor cmp jg out or arpl push mov outsl ret lret or jg adc or mov lock addr16 je adc jg jmp js inc jg imul pusha pop out cmp shrb push lock rcrb jb push or mov dec xor mov outsl mov pop lea xchg roll dec and mov mov mov mov arpl daa out mov adc xor int pusha dec nop pop pusha iret push pop mov addr16 xorl mov fbld lods mov enter cmp add in xchg js pop outsl jg in fstps je loopne jnp out cmp cld stos imul add outsb in and pop push xlat (bad) cs cmp ljmp cmp xchg inc jg dec ret int adc lahf push pop push cmp dec pushf and popa mov sub xor jg std mov movq inc add scas jg,pn sub test add sbb mov cmp mov cmp movsl les cmp cmp out cmpl scas pusha jle inc jg aaa in fwait xchg push mov dec inc leave mov pop aas jl js fldcw jae xlat mov push xor jecxz pop pop int and jae xor mov xor (bad) jg cmp pusha jbe adc ret insb push jg fisttp das jg mov arpl xchg stos xor push ds dec xchg leave push loopne out cwtl sarb cmp orl jecxz mov push cwtl lods mov pusha movsl dec mov push jg mov and out jg mov pop or fiaddl and xor test and imul fdivrp jg iret sbb decl dec mov les sbb mov inc pop scas xchg jg test iret pop (bad) jnp vucomiss adc mov add inc inc out mov insb jne cltd popa push mov jge pop icebp (bad) cmp inc sti fidivl mov loopne pushf jge jg repz pop cmpsl mov mov cmp mov jmp jmp mov xor adc push lcall out pop mov fdivl cmp in jnp xor fistp mov and or or shlb inc gs stc jg fstpl dec loopne jg and hlt pop addr16 lods repnz sub push jg xchg lods loopne push scas jg,pn cmp icebp mov int xlat ljmp (bad) cs or adc aas push or popf fsts dec sub jg mov (bad) imul insb and add add cltd push jg cwtl fsubrs jns mov lea xchg jecxz jg fisttpll push mov pop pop rorl dec sbb push mov push jbe std jg loop dec lea or out dec insl or pop in lock sarb pop and mov fbld xchg ja sbb push cmp das add push ds aaa out call xor mov sbb in ja mov sbb add pop sbb dec insb divb xor sahf mov sub jg dec fisubl xor jl jp add jg or mov jg xchg shrl inc push jg test mov jg and es stos (bad) out pop jg push push stos jg push dec pop arpl scas jg test add push bound fidivrl ja jg xor jb add jg xor call clc sti xchg sbb pop fdivrl jne jae fdivr nop and notb fidivr xchg jg lret inc sbb stc jo lods sahf mov pop and adcl dec pop jg sub repz fild jg or loop mov adc add rolb dec ret xorl rorb pop les push cmp into test xchg addr16 cmp fcomp iret pop jno push jg stc and jae inc adc movsl scas mov jg or inc sti rcrl cmpsl ds popf pop insl pop (bad) pop (bad) cmp push jns scas adc xor cvtdq2ps jl jnp push push sbb pop push lea cmp outsl insl jp mov inc jg insb push neg jo fwait jg stos adc and neg mov inc sarl jg lcall mov dec jg stos negb (bad) ja leave sbb and sbb dec mov and rcl jg pop aam sub test jg into cmp addr16 mov lea jg cmp mov cwtl mov mov outsl mov push lock jg adc decb js dec mov pop sub or outsb adc mov pop jl out je inc es jns dec ret dec sub mov nop mov rolb lahf push cmp scas repz jg std pusha mov mull dec inc stc outsb enter (bad) sub stos jg mov je jg daa mov decl lret sbb pusha and pop es shrl xorl dec adc mov pop int3 pop jmp clc jo (bad) and or xor adc fs ljmp jg movsl pop std lret iret cmp jg mov lods mov in xor arpl aaa dec mov mov dec adc icebp ja cmp ss ds inc mov scas out dec in xlat loop or rorb push jae sub enter adc (bad) adc jg aas sahf lcall jbe jg push imul fcomps loopne lret mov aam shll and pop out dec mov jg pusha add jb pop or mov mov jle add dec addr16 xchg jg sub insl dec pop mov es ds fs pusha mov ret jb pop rol mov aas hlt jmp mov cmp test addl jle lahf rcll xor xchg out adcl or mov aas pop fisubrl dec orl dec xor aad in mov jg stos cmp xchg in dec scas cmp xchg mov xor loope movsb lea dec jg adc out jg sbb scas xchg (bad) jne (bad) cwtl or pop mov cmp loop stc ljmp (bad) lahf and ret jg cli or dec mov cmpsl jg repnz pop scas jmp push adc jae test jge out pusha mov imul push add addr16 pushf jo jle sbb aad jg rorl aaa scas xor jge ja test dec movsl dec mov dec bnd sub sub pop jg aad call xor mov jmp popf nop cmc movsl add cmp adc fsubl inc lds sbb sub sbb (bad) fidivl cwtl jb or test out jg mov inc sub push mov mov and mov xchg cmpb fwait push jg mov lds lds lods xchg sub sti popa mov dec xchg inc jnp (bad) pop jg rorb std jg outsb mov jg lcall mov push dec push lret and push test aam out inc mov xor jne mov popf lahf enter dec xor jg pop outsl aaa jne std jg fwait dec test jg lods jle mov dec cmp mov dec jno cmpsl loope adc xor push mov cmp pop lret lret lods jg xchg push pusha cld es icebp push lret jg cmp or inc jg fsts aad dec pop (bad) lock jg and xchg and imul dec popf jmp mov iret sub xchg call outsl scas les push addr16 sti cltd fisub (bad) push jge pop jo jg mov and insb push dec jg test dec sti les sub xchg outsl xchg mov dec cmp push jg test xor cs sbb daa arpl push aaa inc out sbb mov xchg faddl mov sub mov dec test jg xchg cltd dec pop sarl mov cld and aad ljmp pop insl jg,pn lahf iret push pop lea les outsl and jg add or test lds je jg or inc in xor jg daa xchg fbld sub and sbb mov ja pop test adc repz (bad) repz mov push adc jg jp ret jmp jno pop ds pop pop jg mov push nop add dec imul test and ss cmp and or out fbstp xchg addr16 cmp inc xchg aas int3 xchg (bad) movsl mov mov insb outsl in (bad) mov pop cmc mov xchg pushf pop or jg xor aaa and fwait cmpsb jbe vrsqrtps xor (bad) and mov loope aas cmp in xchg mov jg (bad) or (bad) dec add or ss sti and jecxz inc cmpl jnp jns (bad) jg cmp or jg shrb repnz mov push mov outsl ficom dec or pop repz ja mov nop mov pop js cmpsl mov mov pop div jge arpl mov jle sahf or imul nop sub int (bad) push fisubr dec xchg test gs inc out mov mov push jns push ss or jle xchg mov xor int cwtl pop inc bound nop xor pop mov aaa aam lahf adc mov dec scas jg cmc cmp xchg cmp sbb sub sti pop pop aam xor dec push mov mov or sbb lea int aad add add data16 sbb loop mov or outsb mov mov and xor fildl adc lret inc data16 lret cmp or mov bound push aas movsb enter repnz dec push and clc (bad) mov jg mov inc bnd jb test jae cli mov into (bad) xor sub daa mov imul shll jg pop add icebp pop adc push dec inc push sub mov iret imul dec sub pop orl dec mov jg js imul add jg inc add (bad) outsl arpl rcl pop nop mov insl jo jg outsb mov jg hlt sub jl cmp js dec idivb xchg pop bound lret xor sub cmpsl sub or inc out aas sbb (bad) xor pop xor lods (bad) test sub jbe pop or sbb out stos aas push inc lcall jg,pn mov or cmpsl arpl mov mov jge (bad) dec adc sti mov jg (bad) cld adc jg nop test ret mov lahf fsin jae movsl popa cmp sub enter pop daa inc mov shr xchg ja mov arpl inc jmp lahf inc push jg lods sarl jl add mov inc mov std pop out jg repnz movsb push mov mov lret pop outsl mov test sbb (bad) or pop mov je das adc roll jg sbb xor (bad) mov jg aaa fucomi and and outsl shr inc push jg insl dec andl mov push cmp inc dec mov test pop andb pop lods int3 xor xchg test and ja scas outsb pcmpeqd jge data16 jg inc cwtl mov add jg fmuls jne je pop xor inc fist aad xchg add pop test (bad) xlat jae test in jo cmp jg mov outsl cmp push mov inc push mov sub jg stos test movsl loope mov in das and ljmp fmull mov pop dec dec addl push leave es in jg xchg push cli test push jo adc mov rorl add dec aam daa out cmp jg popf out xor loope idivb movsl int3 xor fsts jg aad mov mov std dec dec loopne inc cmp jg ret cmp jg adc out addr16 jg out sahf xlat mov push (bad) mov and insl jg push xor into xor lahf scas mov add xchg dec mov jg mov cmp dec ret out sub sbb iret cmp fmul mov aas arpl jg pop fidivl (bad) xor mov lods lds sbb test inc or inc dec pop mov push in mov imul mov mov push dec pop sti cmp jae fadd stos jg imul sub inc mov add cmp mov outsl aam cltd or call jae fidivrl cmp into sub cmpsb jg (bad) lock cltd out lret cmp mov push jg popa jne stc jae sarb dec xlat fs stos clc or js int jg (bad) mov js fsubl jae pop out xlat push fadds pop xchg lret jg jmp jno mov clc jne mov fidivr xchg xlat rol inc cmp inc insl mov add ss jecxz mov aam mov pusha pop cli push jnp sub mov push add movsl adc mov movsb jbe ret jg dec push insl mov int3 jg mov xor lods loope inc pop jg stc les call sub inc imull outsl mov das jg adc je mov jg fimul push aas mov stos nop je rorb jg bound push jg pop mov lcall mov add inc ja cld jg rcrl mov in hlt loopne and cmpsb das sbb sarb push add cmp shr fistpll mov mov sti xor cvtdq2ps xor xchg dec lods mov repnz jecxz and mov pop mov dec push and push cmp pop in js popf push pop out sub arpl stos dec popa into inc inc sub sub ds cli jecxz (bad) imul pop fnstcw jg jmp add gs adc jg xor xchg out lds push jg pop rorl jg fs and repz push in mov jecxz cld jg mov pusha sarl rcll pop ja jl xor push arpl mov xor hlt shlb and xchg cmpsl aam or jg lahf int3 cmp dec pop jg push inc pop and enter ds into out js sub pop add aad push les outsb loopne fisttpll push dec inc cmp aas mov dec je jg and adc sbb jae lds cltd inc mov (bad) xor mov loop daa pop or add inc and push xchg pop pop jg pop and dec cmpsb jg xchg cltd inc dec cmp mov cld mov cwtl ucomiss aaa adc jg insl (bad) xor sub pusha pushf aam sbb cwtl pop cmpsb xor jg add xor jg push mov bound dec jg sahf dec ret jbe cli in jp mov lds mov scas jg insb jb dec in imul jno xor in add mov hlt ja arpl movsb jg mov aas mov cmp inc mov sbb pop test inc addr16 outsb jmp sahf shrb mov dec mov sub repz push call hlt ret add xchg js sub mov loope shlb jb jg pop fiadd jg outsl push or xchg mov dec jg rcr fstl push xor sbb repz and or mov jg lods xchg inc jns inc dec jg or dec jg sbb gs orb int3 mov mov sahf xchg dec aam inc jl ret xlat sub and jg xor outsl xchg sbb adc mov jg call pop mov orl sarb imul popf aaa into jg mov faddl (bad) sbb cmp popf and cltd loopne test and ret push test cmp lret sti adc mov mov inc mov das fisttp mov sahf jmp insl pop sub inc and (bad) jg les xchg mov mov sbb fcmovnbe in scas outsb pushf loop sbb sbb xchg idiv ja sub mov fdivrs jns imul stos mov rorb xor fistpl and jg xchg push cmp test sarb aaa jg sbb xor outsl push jg je push int dec aam mov mov test cmpsl xor mov popf std sub mov outsl push cmp sti cmp mov jg scas cwtl xor dec xor xor or pop inc jo or lret xor popf mov loop mov outsl jg xor cmpsl sbb dec stos jg cli xchg sub lds mov jns push enter dec mov jg roll jne cmp insl mov (bad) mov jbe pop rep add insb jg xor ret jg movsl (bad) int3 insl sarb xchg push xor pop cltd mov jg cmpl call lock outsb es dec ret jg mov push mov jg testl scas cli push dec and jg jno fs shr mov outsb push jg jo cmp test xchg push jg pop ds (bad) xor jg jns in pop cmp lcall pusha lfs aam cli jno cmpl jmp dec jg mov xchg loope cmp jnp xor pop jae cwtl in mov sbb dec xchg jg lods je aaa adc mov (bad) lock inc icebp rorl scas add inc inc enter out push mov loop pop repz lahf ret mov jg lea les pop rep jg pushf hlt fnstsw push das jg dec enter dec xchg mov jp pop xchg outsl add sub sbb ss jg movsl mov clc (bad) dec jg inc sub stos push jno pop jg fmull push in or inc data16 lret cmp sti (bad) inc stos ret pop arpl push mov push adc cltd dec mov add xchg sub in jg pop push daa xchg mov mov xor pop rcr stc fbstp cmpsl mov jle mov cmpsb jg enter dec sub jg mov xchg aas jg std int3 sahf mov pop sub nop subl dec sarl jae mov mov sti sbb cmp loope pop aaa jg flds pushf mov mov pop (bad) in addr16 jg mov jo jg out hlt sub sbb push and ljmp and jns or jne leave dec ja sub pop bound movsb inc dec and mov xchg daa pop mov int3 das inc movsb fnstcw xor push insb js sbb xor dec mov std (bad) cli cmpsl xchg push sub add rcl cltd mov push jg jo nop add clc mov xor jmp pop xor sub icebp std xchg jecxz add jae test enter mov in inc aad push out das add mov sar js or fldl cwtl adc lds jg movsb daa ret xchg lock pop add dec daa and jno insb pop xor push (bad) mov outsl xchg push jnp dec inc jmp push outsl sbb jg push loope call pop fnstsw lea gs xchg mov (bad) dec mov addr16 dec adc jmp pop jecxz dec ret stc jg lret mov rcl out jg cmp loope pop scas mov pop ret xchg jg,pt push (bad) inc jg pushl pop or push and stc push sti fs adc and and int out outsl lods dec fadds add arpl stos popf push jg inc jmp pop lcall outsl das and fmulp jle in mov cmp bnd dec andl lcall add pop aas sbb xchg test mov hlt pop repnz mov xchg popa pop int aam jle or sub jp and push mov arpl mov pop push jnp and ret (bad) jg das pusha (bad) in dec mov xchg mov loopne int push pop into cmp (bad) jg xlat insl (bad) cmp dec test lret adc popa data16 in or inc icebp mov jg mov push cmpsl mov jmp mov jg gs (bad) push or movsl jg stc insl and push js xor test scas idiv pop mov xchg mov fdiv dec in (bad) lock jg jo mov fldenv jg cmp xlat cmp push push xor xchg sub push test into jg jae test jg loop and aad jg push out ss mov sbb cmp clc jg jge adc jg cs xchg pop adc xor je jg (bad) (bad) jns adc mov ja mov dec and outsl sub mov fisttp xorl movq (bad) fidivl nop arpl cmp lahf jg and or in sbb cmp xchg jae xor fcomi rol sbb lock into dec pop push sub xor adc dec pop shl mov push xchg shrl outsb call push xchg shl (bad) dec sarl fwait cs repnz add pop shrl sub ret mov push into pop scas sbb xchg dec shll ja xor ljmp adc flds mov dec leave (bad) and mov outsl cmp jne sub add jge (bad) aas jno dec roll mov inc (bad) jg repnz cmp pop rolb xchg test dec mov jg jbe dec dec add cmp mov or clc pop movsl xchg pop jg push mov jp (bad) jl cmpsl cs enter (bad) aam pop jmp adc inc inc lahf sti repz cltd sti test jg xchg mov test fnsetpm(287 dec jb xor dec jg pop cmpsb pop sbb inc sbb loope jg pop leave je mov cmp add mov aas inc clc stos lea adc cmp mov dec outsb jbe mov daa add dec or out into movsl pop cld (bad) adc pop pop jg adc pop ret cwtl js lea jg lock aas cmp push jg arpl dec xchg mov xor push fsubrl pop aas adc push stos aas xchg (bad) fcmovne dec inc mov xchg loop jg adcb les push je xor sub lcall jbe scas pop jg movsl outsl popa sbb cs adc xchg movsl cld mov out ret mov fistp jg daa jp or outsl mov addr16 shlb jg shrl repz sub nop (bad) repnz jno jg xor (bad) mov jbe leave fimull fnstcw mov push ret jp inc sbb inc std sarb cmp push dec out (bad) das mov and insl inc sbb gs jmp add in aam int3 outsl jp mov inc (bad) jg cmpsb mov into adc jb dec test push jg and outsl xchg jg pop ljmp lahf into int3 jo xlat xchg mov imul dec sbb inc push jg push lea fcmovnbe and movsl lahf test jg fist orl add (bad) (bad) push std loopne sub movsl dec dec pop cmpl xchg dec lret xor (bad) lock cwtl aaa in jg and add jl test inc cmp mov jge push test (bad) cmc inc inc or jg loope movsb push pusha adc jg mov pop (bad) sti bound jg stos and mov mov xor cmp imul or lcall jg jne add cmpsl (bad) int3 jg mov add jle jg cmc in sub out (bad) ja aad xchg repz aas mov mov sbb les jg push and lods div idivb ja (bad) call outsl pop pushf sbb push pusha mov imul inc jg ficom dec mov pop dec test mov pop push jbe movsbl mov fisubl mov jl mov pop xor repnz mov mov jg inc test jle inc and inc jg and out idivl loope sub cli rorb inc roll xor popf ret sti ror adc ss jp jne mov pop mov popa std das lods ja jg jmp scas push lret jg pop and mov call pop inc or out mov mov xor aad loop add mov call ds scas lret dec stos clc mov pop push dec dec and jg jno xchg std pop iret sbb icebp (bad) out push jg js mov sbb orl sub mov mov in test sbb insb cmc add test add popw adc ds jb fdivrl xor cld push or in mov lret push dec sbb mov sbb push jo xchg loope aad cmp dec icebp ss or in fs and cmp jbe out inc aad pop push insb in fidivrl push rorl dec das push mov mov or jno mov mov (bad) sbb jecxz ss cli jnp dec test out (bad) xchg inc push mov mov and loope adc jg pop cmp in dec push (bad) out ja arpl outsl jg out xor lods pop sbb mov pop addl jg (bad) in mov jg inc add popf std gs xchg mov gs cwtl clc push aam sbb push js inc jg add loopne jg jno mov test adc les ds (bad) hlt sub dec xchg xchg xor pushf ss and lods dec adc cmp lret (bad) test xchg jg sti push stc pop adc les xchg push fdivrs push fwait mov pop jp in dec shlb dec sbb or cli sbb cmc jg add dec mov push xchg push mov add ja fnstsw xchg jb clc and into xchg dec jp pop cld mov jae dec jle and push jae or xor xor and lret inc push sarl dec (bad) movsl pop adc stos sarb test inc enter mov addb cmp fldt pop mov jg imul sub jp (bad) int3 es and fstpt gs pop ljmp test dec or lea jg ret ljmp test in mov add int (bad) xor icebp add aas (bad) sahf add jae ret insl cmp cltd aas lds ror daa or dec dec jg jp dec push push xchg movsb jg int3 leave push adc mov fstps adc test xchg arpl mov test int3 pop pop push xchg xchg mov cmp xchg lea xchg or popa adc leave dec dec pop int3 jg sbb mov pop call xor fsubrs cli push and pop imull add insl xchg dec xor mull cwtl push roll push adcl adc and aad and mov icebp or mov pop (bad) mov xor dec movsl mov or fldt sbb test xor jg xor inc fldcw mov push and repz stc adc lods call mov sbb mov jp xor mov adc pop das mov push xchg jmp cmp mov repz jg pop dec jb and in inc dec dec (bad) jo test or pop jns shlb das add cmp (bad) mov jg (bad) jae insl mov mov pop jae lea dec xchg and mov xlat ja (bad) lods jl jb jnp jg scas jo in adc bswap jne pop sbb mov loopne jg in xchg adc dec xchg mov das jg cli mov ret int3 daa pop jg push outsb mov sub pop mov sub push data16 sbb jg out in mov pop jg hlt les sbb fiadd jg fisubl mov mov fstpt leave jne xor mov sub roll jg lahf lds lret mov aaa cmp jne (bad) push pop or sub or addl lock aas cltd and push insb sub out push lock jecxz and and inc xchg jg aaa (bad) hlt int push mov pop jg mov mov int3 jg into ss dec das jo cmp sbb sbb fwait sti and jne push jge rorl mov pop mov ja ds arpl mov push mov inc bound stos mov adcl insb jg sar inc jmp dec xchg stc or jg fdivs sub jle push ret sbb dec adc pusha mov dec imul cmp xchg fs loop mov imull jg ja in call mov sar stos iret jg daa and dec inc xchg or scas mov dec and cwtl xor sbb and fimul mov fnstsw stos or inc push out xor jg out sbb (bad) jg jecxz jne xchg cmp pop subl outsl js pop aaa pop into jg (bad) xor xchg pushf mov testl ss cmp out sub or mov xchg test test dec arpl in data16 fdivrs into repz fdivl xchg dec (bad) lock lret xchg sbb (bad) rolb add inc sub int jg ja and inc mov lods push jg mov sti jecxz mov push and xchg pusha mov loopne,pn dec sbb cmp aad add jg xor adc jg inc sub mov (bad) jg shlb xchg lock cltd mov jmp in jg mov xchg jno adc (bad) in inc sbb mov (bad) ja lret jg cmpsl outsb repnz cmpsb dec jg inc shrl iret out inc insb jg pushf jae loopne arpl jg jnp and hlt movsb mov pop push movsl xchg dec sub push add jg lret xchg leave sub jg lods ljmp sub add fwait (bad) jo sub lods idivb hlt mov je repnz jo jmp and jnp push lock fwait pop scas repnz mov out jg xchg push cmp mov mov xchg jne insb adc xor mov lahf adc dec add js add push mov aas xor ja inc hlt fwait mov sbb dec sbb rcl lds aas call inc mov or arpl and (bad) repnz pop cli rcll int3 push cld in jns lock daa sbb or das dec in mov daa mov insl addr16 push pop push js popa jp (bad) dec mov in mov ss xorl inc loop dec jo iret sbb lret xor ljmp cmp jbe lock jg mov loopne jno jg mov or jg outsb pusha pop aad in mov jo dec cli xchg pusha jecxz jp sub jg pushl and jae dec cmp jg jnp push in iret std sbb testb fidivr and das pop fs jg test sbb std cmp xor and sbb clc dec jae data16 mov adc inc dec jbe,pn orps cmp loopne sbb int push cmc test mov je,pt lock icebp inc subb jg mov jns mov xor call pop mov or adcb hlt repz rclb or mov js cmp nop mov mov cmp ret mov pop pop bound xor pop xor mov stos sti fs pop jg sub cmp mov call jp repz adc lock xchg jg and add scas mov (bad) outsl inc jo lods jg push nop push pushf xchg inc jg aaa mov mov stos jg mov and je lea movsl aad pop push jle hlt jg out push (bad) cmp jnp jo (bad) jg jle adc push ret into (bad) cmp cmpsl sarl sti in dec (bad) dec cmpl mov pop push dec adc cmp insl jg data16 (bad) fcomps push inc sub jg cmp fisub rorl and out pop add pop fldenv mov cs stc pop leave mov mov (bad) imul arpl xchg addr16 sar in xor xor mov and push out jg dec cmp idivb inc jg mov mov xchg loopne jae inc xor leave xor sbb and xor push inc sbb fprem1 sub out mov ss xor lds xchg push ds das dec popfw cmp and (bad) sahf adc jg mov jns,pt inc inc aas xor xchg mov jae sbb jg and cmpsb test sti pop xchg inc mov mov jg iret mov xor shrb fs fisubr xchg aas xchg and inc cmp sti mov in pushf jle ret daa inc fistpll hlt add jg push lds and mov loop xchg hlt shll call rolb mov pusha jge insb mov push maskmovq (bad) lea cmp fidivr (bad) jg push (bad) into jg cmc aas inc cwtl shlb sbb jge sub out fnstcw adc and xorb fdiv push jg mov loopne pop jg push lods push and inc sti sbb xchg dec xchg sarl or mov and jp pop decb arpl adc pop pop and cmp add ret mov inc and inc test jne aas loopne xorl cmpsb push jg pop sub sub sbb and push inc mov cmp mov jg loope adc loop or mov scas (bad) push pop imul stc mov int adc jmp lcall pop aas aad inc and test mov scas or lods cwtl insb jg jns cmc out push iret jg mov movsb mov inc data16 jl sbb rcrb adc in jp xchg (bad) push sti mov push imul mov sbb aaa mov stos outsl mov xchg mov jg dec or nop and test mov ror mov jno sub cmp addr16 inc push xor sbb mov cmp inc xchg jg xlat lds cltd dec (bad) mov pop xor pop les cmpsl cmp jg inc lret and outsb cmp mov hlt xchg dec jmp nop (bad) add cmp pop sbb push mov std mov mov jge pop adc ss das dec mov loop cmp mov test pop lret in aas adc mov (bad) jg jb xchg jp xor xchg scas sbb ret add imul jb cmp loopne in scas dec jg lods lcall adc jle jg fistl out inc xchg bound stc shr mov pushf add xchg cmpps pop icebp mov adc jno mov jnp sub lods mov sbb loopne dec dec stc dec jb jg imul ret jg in cmc adc loope mov pop movsb mov popa (bad) mov jb dec adc jg lcall jg cmp push mov and cmpsl jg mov mov out sbb fisttpl in jg sub mov int pop out popf jmp dec aad or dec cmp sbb mov pop cmp in and lret xor jg adc jg mov cmp mov sarb test in in lahf addr16 insl dec lods jno add imul cmpb (bad) sbb push fbstp inc (bad) repnz xor jg out mov jg jns subb and lds loop hlt repz ret xor sti not cmp (bad) popf pop sbb rcrl pop test jbe scas pop cld jg mov mov mov mov add or ffree xor test dec mov jg cmpsb cmc mov jg mov insb movups jg outsl push in xchg in jg xchg mov mov sub add pop ja jg inc sbb sub inc sti push popa jg cmp addr16 movq xchg das mov jg xchg out cmp jmp outsl or mov ret aaa dec inc mov push push jg adc test aas insl pop push push add inc (bad) add pop (bad) lods aad pop fs sbb jg push push mov jg sbb stc jmp cmpsl cld mov jg movsb add inc aad loop jno and mov scas in jg or mov ljmp les mov sub jae das jg (bad) push jecxz movsb mov sbb jg mov add jg or cmpsl loopne ljmp mov xchg or enter cltd add or or jg inc push mov add aam testl jg push push lods fsubrs jb sbb mov push sub cmpsb mov leave sub jg outsl pop mov out xchg aas jne dec add inc cs ja jg fcmove dec push jno mov fsts push mov xchg push push mov mov les pop (bad) xor sbb mov cmc dec push mov jg sbb adc jmp hlt jg cmc repz sbb dec ljmp xlat push adc (bad) fiadd mov cmp or in hlt insb jg or gs sar xchg mov dec fsubr inc push adc adc cli and jg add and sti fwait std int3 stos sub jnp repnz xor jg lods addr16 pop and mov repz adc xchg lcall dec out or mov or mov mov inc push iret int mov adc pop xlat ret jg or cmp push xchg outsl pop jmp xor out movb jecxz outsl popf xor sarl scas pop mov jg push lea fdivr (bad) xor pop pop mov mov push inc daa pop inc enter jne lock lods rorb jg add lret and mov push movsb dec popa mov lock pop sbb xor sub xor jg push outsl pop aam push arpl and std insb aaa (bad) fwait cmp sahf insl in push push lret mov sbb and xchg push mov aas pop bound inc mov mov jne (bad) sti jb cld mov add dec jbe fidivrl testl mov mov lods imul push scas movsb mov dec lock and sub nop sbb adc pop dec inc cmp sbb inc xchg insb fiadd cmp dec mov push js jg into adc mov mov jg das loope add test dec cwtl aas mov outsl pop iret jle pop mov and (bad) imul rclb xor es movsl aaa inc cmp push pop inc mov add test jg sahf fstps jl adc jg call stos std jg inc mov lea loopne adc ror dec repz cmp inc jg ret fs (bad) in orl jno sbb and mov loop sbbl cmp mov js and push cmpsb mov inc sbb hlt aaa mov mov fstl xchg jg adc loop jg lret push lcall nop arpl adc setnp jo stos pop lock jno mov pop and dec movsl pop cmp sbb stc sarb mov stos (bad) aaa sti xchg js orl xchg ljmp fistpll test push inc xchg (bad) jg mov push jg cld adc xchg xchg jg jge jno inc inc mov and ja aas mov sub dec or push inc sti cld pop jg (bad) fmuls mov adc adc mov pmaddwd cmp inc push jg mov fs aas mov dec jb inc (bad) sti sbb outsb push dec jle xchg call adc sub sub insl sbb mov popa (bad) or fimull jb aam sti pop sbb rolb in lods sbb dec js daa aas mov inc mov rolb (bad) jns adc pop mov xor shll notl xor sbb dec inc lock iret jg cwtl or jl test or push jg cmp xchg aam jg cmp addr16 sub jns mov notl cmp sub pop mov aad adc les mov jne jg xchg fistpll (bad) or (bad) jl xor loopw mov xor jg pop out in push mov jg cmpsl das mov dec cld pop jg jae sub lret or mov dec ret xchg lcall jg sti jb hlt in inc mov divl pop scas jno std data16 jg ret xor add pop jg and jle cmpsb movsb cmpb je pop and pop jmp adc hlt shrb pop rclb jg cmp push jecxz aad jg inc scas jne fs jg data16 and cmp sbb mov jg insb sub pop out jns jle subb xor aaa jg sbb leave jg sar jmp dec inc jg scas push mov xor ljmp dec adc lds pop inc xor movb popa jg mov (bad) adc fs lret jg dec cmp jg jmp (bad) repnz pop and inc dec testl scas pop cmp xchg es push dec or adc fidivl aam sti mov pop pop repnz xchg xchg xor inc out add push inc jnp fnstcw sbb sbb push inc jg das pop add push jns mov fmul xor mov mov and pop jg add xor out roll jp fidivl nop mov jns insl scas xor xchg push sti lods jg jecxz push cs dec xor inc clc outsb pop jl mov jg inc ss test imul aad mov sub (bad) je mov cmp sbb out aad loop jg int repz adc fwait pop xor scas push mov scas lcall fnstsw mov pusha jge gs fstpt mov push fisubr inc test lds aas adc sub ja icebp jg and lahf and jg pop or pop push sti hlt mov pop shrb adc popaw sbb das (bad) cmp cltd lds ja add xchg je mov in and insb test sub jg js pop ds jbe arpl or sahf or repz xchg jg mov inc aas idivb stos addr16 jg bound loop jge sub inc dec test push jg stos imul jg xchg and xlat jg pop ret mov jg (bad) movsb (bad) jb mov sti push fdivs push fcomi cmpsb jae xor nop sub in mov inc dec lcall dec jg pushf mov jae add add sub sbbb dec ss testl push test jne test push addr16 aas leave cmpsl mov jae adc xchg push dec xchg aam push mov push call push imulb pop fdivrl mov sub mov mov sub push pop jg mov repz dec (bad) jg pop xchg mov jg mov dec lds add or mov mov icebp add jg lcall arpl jg xchg fcomi or add mov pop sti fldcw bound mov out jb jg mov enter mov mov in inc push fstpt mov dec lcall outsl push nop mov scas movsb pop je inc loopne pop push addr16 sarl pop or mov and dec mov mov jg xchg dec out cmp pusha jg push add outsl jmp insb push jg xchg push jge dec dec or fldl fwait mov or iret sti mov outsl jb loop xchg cli sahf adc jg add sbb cmp mov into and cmpsl pushf and mov jg loop ret ljmp (bad) or (bad) mov jle imul push xchg fisubl pop push (bad) xor dec push cld add jg inc xor nop ja cmp pop push in or (bad) sub push and in leave add mov (bad) xchg fiaddl sti jg sahf pop into xchg fmuls testl add fstpt pop cmp xor jg fwait mov addr16 mov sbb repnz aam or imul jg jnp add mov ja inc xor cmp inc xchg in pop inc mov inc mov inc jg xchg stos icebp mov mov or xchg sarb mov pop in fistpll pop stos lret dec dec jg loop xor movsb add icebp cwtl xchg outsl popa push insb mov lret je ret jl xor xchg sbb stc loopne das scas sub pushf movl push jg mov lea push xor daa testl mov ret jmp push aas fwait mov mov add jg sbb mov inc jecxz jg mov jnp sub ljmp jg outsl lret mov cmc out jg hlt mov cmp into xor jp jne dec (bad) cmpsb jg mov sbb cmp repz add adc sub adc in ljmp mov iret inc aad lds lock mov dec pusha dec rcrb inc push movsl ret sub mov dec pop cmc sbb cmp jb out in lock and lea in mov jg cmpsl or mov or and dec (bad) pop repz std dec lea flds mov xchg jg mov rolb jg or repnz jne dec aas sub and push push push mov cwtl sbb movsl add adc aaa nop fildl pop jmp stc in leave fcomp push or mov inc fstpt shlb cmp (bad) out repnz (bad) shrl or jg daa xchg jl and jg call in aas js sti std cmp imul dec ja arpl lret test pop ret jle mov xlat ljmp mov sahf mov out imul ret fwait in mov (bad) aas inc cmp inc jp imul xor ss jge push mov cmp adc jecxz inc int3 and jg mov ds (bad) ja xchg lock (bad) dec sub push fisubr in addr16 pushf idivl out add xor (bad) mov fidivrl inc pop adc lea mov aad ljmp mov jae repnz sbb add imul push or scas mov mov ja pop sahf inc cmp lock stc mov outsl jge movq ds test jg cmpsb inc scas in mov cmp in xor jle mov outsb xchg push bts scas cmpsl jg loop daa pop adc lcall jae add cmc outsl ret pop scas insl xlat lods not inc jg shrb inc and and push jg sub aas pop sbb cmpl mov sbb movsb das das xchg inc arpl inc lcall jge mov inc mov scas adc xchg jg loope xor test sub inc pop pop fwait add les add subl ss rol jg loope sub mov mov popf imul dec mov xor push test es out icebp fdivrl xchg adc dec std clc fistl jg lret push add repz in mov adc pop (bad) enter push lret decb scas mov xorl pop je sub test mov pop int cltd jg xlat out es jg cmp cli jg xor inc adc mov fldenv jg sub in sbbl jmp ret dec nop jg iret outsb pop mov sub daa div lret out jg adcb jg rcll addr16 jge jbe mov lods arpl xor stc xorl aam adc imul jg sbbl push jmp sbb mov and jg icebp repz (bad) into (bad) push mov jg loope lret mov jg stos dec and les ds ljmp je xchg mov enter or mov jg iret test jg xchg fbstp (bad) lret cmc pushf mov mov jg into stos mov jg add fnstsw add out jbe mov sub lods mov push lcall sti (bad) ss pop outsl es push ret cmpsl xor popa or into inc nop test int3 clc lret (bad) stos (bad) leave add jg adc jecxz jmp fcmovbe adc xchg jg stos shr mov in sahf mov lea inc adc cmc fnstsw dec mov pop pop mov lock dec sbb jg mov cmc jb popf fs or jg add lcall dec stc daa std out dec dec jg and (bad) notl or pop ja jg mov xchg jg movsl es sbb inc jp lret and mov cwtl sahf add jp jg outsb ljmp notb mov jbe,pn and push lods mov cltd out sahf or fwait jg jbe nop (bad) test aam xchg adc fwait dec loopne jg decl and into es jecxz jg push sbb mov xor out popf xorb jnp mov or push add jg add jg inc lret xchg or jmp dec or jg test lret ficom and out jae mov cmpl xor out mov jle pop jp (bad) jg add lock mov or aas push sub daa leave imul (bad) add out xlat push pop jl lds fnsave push test pushf mov dec cmp jg sbb nop add push dec cmpl push in ss push or jo scas adc outsl pop dec sub cmp bound mov add jg mov sub jo mov leave mov data16 jg repnz inc jno inc sti leave jle dec inc dec mov mov rcr call push mov pop out pop or repz ret mov dec gs sub sbb mov orl jl xor inc lret pop jo cmpsl cmp ret xchg push cltd jg and cmc mov dec jnp out sub in dec jle aaa cmp mov push sub in xor lahf enter not dec inc mov push lea mov jg insl xchg rcrb cmp jo lret adc jg xchg popa fiaddl jp arpl mov add jno pop and adc xor jmp push adc and negl cmpsl mov jp jg xchg lds xchg jg or mov dec cmpsb ljmp mov add pop aas cwtl int3 xor arpl dec dec xor movsb fstpt mov decl movsl push (bad) and jge push jg lds cmc sub test jg mov or sub fs push jg xchg sti lret inc stos or xchg and inc hlt js pop aas rcrb repz bound dec imul pop pop aaa inc pop sti pop adc add sahf (bad) popf sti dec mov call inc arpl arpl aas pop out sbb enter mov inc pop mov test jle sbb cmp cltd push xor dec pushf jmp mov fcompl aad aam stos jg ss (bad) mov in mov arpl test and js nop (bad) mov inc add cmc jg push pop lret or fwait aas xchg lock popa mov into or jg sbb sub mov bound sarb jg jmp dec movq dec (bad) mov cmp jne sub (bad) mov and negb fcomps mov sti ficoml cmp jge xor xor test aas push addr16 push and mov stc xor lahf into sub jg sbb icebp aam cmp mov pop fstpt jg push pop aaa sti xor mov and or stos and call pop mov jg test negb data16 clc jb pminub xchg inc mov jg test add pop outsl mov jo mov sub dec mov in jle pop sbb pop push xchg dec adc mov inc dec iret pop add xlat ja icebp jg dec pop pop fwait gs test cmova jno xchg adc jg ficompl das mov ljmp jle jmp fwait lret scas stos and in dec push dec add pop jg xchg test les push arpl push mov sub outsl pop iret fild and sub fisttp fucomp xor push jg imul jmp jl mov sti add ljmp mov in out push repnz jg out in gs imul and stos mov add stc fistp jp fisttp pop push cli push arpl inc test pop sbb aad call pop push pushf adc fldcw (bad) loope xor push jg pop pop mov mov and adc jg cli cmc mov jg pop adc jg pop popa addr16 jnp fidivrl mov mov jg icebp or push rorl in sbbl push jg (bad) xor jg push sbb aad xchg (bad) test mov push mov stc icebp cwtl outsl popf adc pop shlb pop out lods aas and mov je mov adc out sbb mov in jns pop inc dec mov mov icebp imul xchg jg xchg addr16 jg ret cmp cmp les mov push cs mov outsb jnp add ss icebp inc dec push push lods or bsr adc jg jl orb pop jg ror and ja jg xchg or pop cmp fisubr jo jno sub fwait jge adc inc xor mov or cmp jbe mov sbb les cmc test jp pop nop cmpsb cs jg (bad) sbb jge (bad) sub sbb lahf gs pop ljmp stos aad xchg pop popf fcmove (bad) jg std xchg lahf inc leave clc daa jg add cli cmp sub pop hlt fbld pop and imul jno pop shlb xor cli into pop and (bad) mov pop cmp push fildl repz ficompl push mov xchg jp lock or adc jns inc mov mov lods icebp adc mov imull std aad mov cmpsl push jg enter sbb ret (bad) (bad) cmp mov mov lock mov mov mov dec mov aaa jo,pn lods jg fiaddl pop paddq aad arpl jno mov adc pop in inc lcall dec test js loope cmp xchg push rcrl ds rorb inc (bad) jnp xor adc stos jg push mov out push cmp xchg mov test iret arpl cmc jecxz jg pop xor and jle (bad) pop xor je inc stos or jp xchg (bad) pop dec jg xchg insb xchg xor cmp jg (bad) aam outsb pop testl xchg jg cmp lods inc push push jg and test in mov addr16 ljmp and aad lret mov pop xchg pusha daa jnp insb stos repz repnz jne sbbl adc lahf fldenv loope pop pop xchg ds repz xor dec dec mov aaa mov adc jg sbb inc xchg push inc jg and out mov addr16 jg (bad) loopne fidivrl push mov in add push or sahf mov or cmp cmp out mov aas dec test hlt pop test fwait stos cmp or or jg loopne pop mov jle cltd rorl xlat adc add arpl mov mov sbb inc mov sub cmp mov call jg imul push into icebp pop in cmpsl inc pop fidiv or lds mov inc sarb imul ljmp and arpl push push jg or mov jg cmp mov pop neg cmp mov dec insb sub jg dec out inc add pop and cmp std rol inc (bad) xlat mov ret sbb pushf repz jge test out jg popf xchg inc mov pop test cltd out add inc sbb push ss jg fwait repnz dec or roll push xchg out sub ret push mov xchg adc or jg daa sbb lock ljmp test xor mov cmp andl mov rolb jg sbb (bad) icebp shll mov mov adc and dec (bad) mov ss inc or fsub out out dec test pop popf les mov pop jbe imull ljmp cmpsl cmpsb inc arpl mov jg pop fwait pushf mov (bad) pop and sub or mov (bad) pop xchg pushf push inc sbb les repnz (bad) mov sbb cli push repz and faddl ret call pop adc jnp mov aad xchg lahf repz popf test push cli jg sub xchg inc xor loop fs push jecxz xor aas cmp mov pusha jae gs cmp sub inc xor aad inc push xor cld mov jl mov xor or jg es sub movsl loopne mov (bad) inc mov sub nop inc sbb mov jg (bad) lret test xor mov aam pop test clc jmp lock jae and xor add stos sahf add sub cmp arpl int3 mov push js jmp push push sti popf mov out push jno inc mov xchg (bad) cmp (bad) pop pop (bad) inc rorl fucomi mov sbb cmpsb adc daa pop mov mov jb in sub push inc imul mov test push sti (bad) cmp aam add stc pushf bound aaa aas jae ja loope cmp xor out add pop xchg pop fstpt loopne jb inc dec sbb sti cmp mov lahf lock std jae push aad lret jo (bad) dec sbb arpl add int cmp jg mov mov int3 pop dec into cmp cmp jg scas pusha fsubr inc fbstp lcall mov in xchg adc dec cmpsl flds idiv cmp dec pop adc mov jnp arpl aas add xor dec push push div jae pop stos and mov shl stos out imul jnp jg inc hlt add push rol and inc sbb sub and dec mov insl clc push in mov mov cltd mov inc fidivrl jle sub jg test xor jb and stos (bad) lock or insb xchg arpl jg pop xor gs pusha sub arpl insb sbb xchg xor data16 aas jo insl inc ljmp sarb jae dec jno dec xchg inc adc or pop push orl mov lods xchg sub and int3 fdivs jmp addr16 jg adc out insb lods and jg xchg add jg push inc hlt sub cmp and jne dec out fcomip mov jg lock sub lock dec insb and and jle pop lcall jnp (bad) cmp movsb mov inc mov loop inc push jg add loope sub jg nop mov aas jg inc or push pop inc scas jg and sbb (bad) mov fs dec xchg xchg or jg push pushf cmp or adc jg (bad) into das xchg pop cmp jmp jg add mov daa and dec fdivl jg mov mov jg jne out xchg insb cmp rcl push dec cli inc je jg test sbb out push fwait lret mov sub popa dec mov sub cmp mov js or jle xor hlt icebp (bad) stc mov std lods push and jl addb jmp cmp pop loop in pop jne push jg pop mov int3 adc add push inc xchg sbb cmp cmpsl sub cmp mov iret adc xchg mov pop loope es aas stos cwtl jbe pop xor addr16 dec shrb jg adc lds add jecxz dec mov sub shr mov push mov push fstl ret and ret cmp mov jg sbb jle (bad) add jnp mov (bad) xor rolb shll xor idivb dec mov cmp mov movsl aam hlt jg sub orl pop fistp cmp icebp cli (bad) mov ds out popa jae loop jg sbb dec mov inc xchg into dec lods mov sahf mov repz jnp stc push push cmp add les mov mov cmc and xchg dec push mov jnp fstps xchg add mov jg std daa jle jbe pop popa pushf jg xchg and dec adc les roll jg faddl add dec outsl loopne inc cs and test dec pop movsb sti (bad) movsl jle jg sub xor test pop das int3 outsl pop stos jg inc dec add jg or pop jmp cmc add jl icebp add push std dec xor mov orb inc out jg out das inc cmpsb push lret inc jo ja rcrl popa push dec mov mov xor stos add in mov inc inc in jg in sub out xlat lods jb loop or icebp mov fwait cs out pop jmp dec scas sti in repnz jg gs and (bad) push (bad) mov sub insl lea dec pop jb cmp lcall push sbb sub sub stc mov and cmp xchg sbb (bad) xchg aas adc je inc int3 mov jo arpl jle ds xor ja cmp jg xorl push jg jmp pop cmpsl cmp cmc ds mov push aam jnp mov fcoms (bad) mov fsts dec shrb adc inc pop roll test movsl xchg mov xchg outsl push cld sti int cmp cmp mov pop testb daa movb xor push imul (bad) inc push xor test mov imul test fisub outsl in mov cltd ds aas stc and or sub bnd pop les lods sbbb adc mov movsb clc xor or mov dec lahf inc jg (bad) adc push out out lods jg xchg jecxz mov pop and push daa inc mov pop push mov pop lahf jnp ds mov push call or (bad) mov sub ljmp scas mov fcmovu movb mov jg sti jg cmp jb push insl jg aaa loopne sub inc jg xchg clc sahf rcll fsubrl jg cmp jg xor mov inc stc lea pop fwait lcall lock loope adc xchg mov jnp ljmp pushf adc js jg subl insb loopne inc jg mov shr fwait xor scas sub orl or add jg and cmpsl outsl or jg repnz jl insl cmp mov mov in inc inc xorb jg and xor test jg push leave pop iret imul mov daa test jg sbb jb outsl insb into aas inc adc and inc dec (bad) out lret or cmp mov (bad) outsl mov pop aas mov cs xor inc aaa inc inc int jge sub push jg das pop and dec pop mov mov jg dec mov adc push xchg push cli dec mov (bad) jnp push mov js cmpsb sti sbb (bad) pop mov or addr16 nop jb mov das mov jae ret jg cmpsb js push jno (bad) and jg adc dec sahf or mov hlt mov mov xorl ja mov add stos jg in mov roll cmpl enter push negw in add mov pop adc dec jg flds push rcll cli adc and push xchg push jle fimull add jae sub cwtl xchg lcall mov dec push jg and andb jg pop sub push sbb insb jg stos fs nop hlt sbb mov jg lods iret leave sub jg mov vpsrld aam into mov adc mov ret jle (bad) sub dec daa je dec jg sbb lahf out mov jg cmpsl repz clc data16 test pop fwait mov outsb fsubrp sbb jg in xor addr16 or cmp stos arpl and (bad) mov sarb dec imul push sahf mov out (bad) jl jg test adc jg cmp or cmpb call cmp orl pop sarl jg lret cmp and or test jg dec jl cltd cli push fnstcw push mov stos lds lods imul inc or cwtl fwait dec adc mov xlat setno push add mov jl fisubl jg int mov mov and pusha je adc (bad) cmp ret mov add xor cs (bad) jg imul jg jnp movsl xchg inc test ljmp dec inc aas jg (bad) or (bad) mov xor sar pop into pop jg in (bad) cmpsl sarb mov jne cwtl cld mov lcall fsubrl mov scas adc jl cs xchg out sarb lock inc xchg dec mov and fdivrs or cli call jns movsb (bad) xor leave jg xchg pushf jb jno loopne or loope mov inc popf test xchg push mov adcl les jg rolb inc and outsb or mov mov js inc out jg pop add xor jg test cs dec mov xor mov insb inc sbb loop dec pop aam int3 adc jg (bad) xchg or xchg pop push mov sbb mov call bound jg lea andb mov pop adc ss cmp imul jg enter andb sbb pop xlat jg loope aaa jne mov movsb cltd jg aas out loope push pop xor test adc orl sub push pop shl and adc cmp lods push jg fmuls and outsb pop cmp mov iret mov inc jg or xor sub jb dec es insl jge mov fcos enter cwtl jbe or stc lcall popf jae sub jg dec psrlq add sub lahf mov or dec mov stc jg fwait out xlat mov es fcmovb jge mov cmpb dec cltd add ss or and imul add mov pop pop insl (bad) mov adc int3 push cs adc jge outsb jg bound pop lea jg xchg push xor pop fucomip adc jg shrb lahf pop xor and cmp pushf jg and xchg dec sbb mov inc cmp cmpsb xor jle mov in mov jg (bad) shrl adc cli jg push cld xchg cmc dec push testl adc jg (bad) jg orl jg iret fcmovu mov add loopne jo mov mov arpl cli xor jg and inc arpl inc jg pop mov data16 xor insb (bad) mov scas stos jnp jg lret (bad) mov (bad) fildll loop jno and sbb cwtl xor mov rolb js jg ljmp mov cmpb xor xchg sub ret test and mov loope mov ljmp mov in pop out in lcall adc je inc add (bad) aad mov cmpsl outsl push rorb mov sub add inc jecxz jne inc sub jg mov adc jg inc or (bad) leave iret sahf jg dec add xchg scas cs jg push (bad) in in and inc add mov (bad) jg dec (bad) xor pop negl xor add fdivrl scas out fistl shrb test lcall loop cmpsb dec enter hlt aas pop lret jg movsb add pop int3 adc jg iret pop push dec push cmpb outsb push add mov jg cmp fwait push call push sti mov dec loope out and dec push push add popa jmp clc into mov inc fisubrl push pop lahf lcall dec jnp mov stos ds fisubr popa jnp jg add dec fs adc (bad) xchg icebp push mov and dec push outsl pop and cmc std jg insb aam cli fxam mov dec xor sub add mov mov loopne pop ss cmp xchg cmpsb jg daa in or and add mov std (bad) xchg out into push out jg mov cmp inc ja or rorl aas (bad) jns jg adc pop (bad) mov jg jmp pop mov ret fnop add cmpb jnp mov jg xchg and daa jg aad sbb mov sahf jl scas data16 loop lods iret into lret push imul xor jg aas dec (bad) xor lret pop sub popf ds push jg mov push xlat xor mov cmp outsl cld orl mov mov jne dec jg popf mov call push jg ds loope es and repz es mov (bad) aas popa loope aaa inc and or scas and (bad) dec mov inc arpl cmp out adc lds mov hlt mov test scas nop sbb test (bad) stc test or fistpll (bad) pop (bad) pop sub cmc jnp jg jg sar push aas add stos jg icebp lea in push lahf jg sub push xchg int3 loop jg jae sub loope cmp jmp inc mov xor test int inc aam mov cmpsl inc jg popa loopne sbb xchg into dec and outsb jo push es xlat xchg cwtl insl jg inc inc cltd pop scas ret andb lret mov jg lods or sti cmp outsl clc push adc mov inc scas daa add out xchg repnz xor fs mov cmp jg jb sti push jnp test stc insb sahf lock sbbl enter jp sbbb rcll mov test movsb loope scas jo cld xorb mov sbb and jg fldcw jg mov dec and cld negl repz ret stos sbb in dec dec jg and push shr inc js test sub push das pop rcr and jp aam mov mov notb lcall or test out sti pop and mov sbb sbb idivb or fdivs pop xchg rorb dec jg idivl shrl lret mov fidivrl sub jge (bad) fnstcw sub or jbe jg popf push scas and push fbld popf popa (bad) jg or inc jl adc or mov fcmovne jg and mov aas jns cld mov and pusha stc ret dec mov mov mov ss fcmovu inc lods jg push scas cmp inc mov je inc int inc testl and or adc add dec scas pushf cld or sbb jecxz dec (bad) popf (bad) daa pop push outsl imul cld gs mov aas sbb mov jl out or pop ljmp pusha mov jecxz lods (bad) xor fnstsw push jg pop and fdivs add negb cmpb inc std push adc mov fistp sub or jnp sti cltd sub jecxz push jnp mov or push js or ja sbb mov adc jb pushf jbe loopne push into push xchg sub push sahf push jge (bad) mov aas cs outsl out hlt pushf jno xor adc ja xchg loope push das inc push xchg sti jne sbb jg lahf call cmp bswap adc dec sub jg fsubrp inc test inc fdivrl lret cli mov int jg mov (bad) sti pushf pop out jg adc xchg or xchg dec xlat mull test jb mov adc add push rcll nop jg dec cmpsb xchg imul jg adc mov imul faddp or push and sbb sub inc jg ficomp lret inc pop repz jmp test jg packsswb jp test push fistp xchg xor mov fdivrs sbb std js ss into outsl out data16 adc xchg mov xlat and cmp jg or or test sub push xor adc or subb jl pop sbb gs fnop js jb sbb adc repnz mov sbb test pop ffree stos fmuls (bad) lret lods (bad) jg sbb rorl jg inc mov mov dec mov mov pusha aas fsubl in lahf loopne dec out jg and mov pop dec mov into mov jg test jns addr16 xchg (bad) dec hlt fnstcw xchg loope push and lock lret lods add pop pop outsl sub fidiv inc pop outsb or les imul inc fwait popa aaa adc sub cld mov xor call nop movsb aas push mov dec adc cmp cltd fnstsw or lret lock aas mov leave mulw scas mov and xchg aaa sub pop jg (bad) mov (bad) sarb cmp jge dec xor js adc mov adc stos push aas inc hlt lods mov inc clc in imul dec out jle mov jg pop pop or dec pusha and jg cmpsl push or jg lods or popa dec or sub call jge loop jnp cwtl jg jl inc gs je fcomp jg insl pusha mov mov mov jg movsl loopne pop call xchg pop cmp jg jbe adc rcrb mov xchg popf sbb js mov jbe inc push mov jg and mov sub lret into adc inc imul mov mov (bad) and pop sarb jg mov xchg sarb (bad) loopne push jg push jp rcrb dec outsl xchg jmp sbb test icebp out int dec xchg mov sarl cmpb fnstenv fstpt xchg mov pusha jmp popa mov sbb sti mov jnp dec and jno mov pop cmpxchg lahf add cs jg lret mov xchg adc xchg cmp jg movsb mov outsb shlb or xlat cmp xchg mov cmp les in popa icebp mov cmpsl imul push inc inc mov sub sub in adc lret ret xchg sar pop and push dec pop dec ds mov inc stos pop inc push cmp push cmpl and (bad) lods pop ds sbb xor test and jl sub jb and outsl jg dec mov mov fwait jg mov in popa jg mov sar and xchg rolb (bad) clc jns,pn outsl adc mov call mov sbb and jg mulb (bad) adc ret cmpsl aad ffreep xchg push sbb or pop xor fcomps jne arpl push das mov daa add ret test out mov rclb (bad) sbb jg mov jno sti es call adc lock jnp adc sbbl jg pusha xchg cltd xchg mov push lock pop bound sub push xor scas cld jg adc and in clc int jecxz sub lods arpl jl lret mov jg or jg sbbl inc jnp jge and enter mov sub pop push jg gs sbb dec or int mov out dec adc loop stos push or jmp pop push mov repnz jg jnp jge xor (bad) movsl ljmp sti rol int3 xchg ja pop aam sub in dec xchg sbb decl movsb push cli sub push xor insb xlat scas hlt inc pop out popa cmp jg xchg data16 jae mov mov sub inc add cmp pop jg sbb add rcll jbe out push mov jnp sti andl mov mov test fsubrs stc (bad) mov xor movsl and pop mov jg,pt push mov push cmp ljmp lods sub or cmp cli add push fsub or fwait je mov xor cwtl sub jg js sbb imul popf jg ret fwait push aaa jg mov scas or pop or loopne inc jg mov adc les das xchg push push lods int out mov jg xchg in sbb add clc jg (bad) or addr16 cmp adc decb pop cmp push out inc scas jecxz dec (bad) dec cmpsl push jno mul jg in xor adc jg xchg scas or pop push jg repnz popa adc inc mov xor dec jecxz inc pop xor aaa pop sub cmp leave dec push (bad) sbb sbb addr16 push hlt inc pop fcoms and test jns pop adc (bad) mov push inc xchg test out cs mov inc add icebp in cmp adc mov jg push and xchg mov ja adc int repz jnp es xchg test xchg xor in mov xchg xchg fcompl sti mov (bad) jno pushf fistp sti movsl sahf rclb inc (bad) adc cs inc or xchg xor xchg aad repz xchg popf mov jecxz adcb stos aas lret scas adc fdivr jg out cmp xchg mov jg cli inc pop jge imul fstp and mov ja mov inc fistp jg jp cmp je popf leave and jg dec pop ja int test push jg dec je pop daa pop jl or aas in adc mov dec (bad) fidivr aad xor pop or mov mull (bad) out mov daa cmpsl inc cs pmaddwd sub push push jl mov inc sbb mov daa dec aaa xor pop mov (bad) sbb hlt sahf pop pushf movsl jg jg pop cli dec add jg add sub pop adc sarl xchg clc outsb pop shrb lret fnstcw mov pusha aaa jg xchg sbb ljmp pop jg jmp int sti loope je pop daa mov daa lahf inc shrb adc push out fildl jl push add jg sub in jg push adc or jmp pop mov int jmp mov sbbb cmp dec (bad) fistl xchg repz jg jbe outsl scas stc adc jg pop jp jns sahf pop jg loopne aad mov lods jg mov xor lret mov mov int jg pop scas aas pop dec std xchg add mov jg outsb dec pop xor xor jg inc push sub push mov jg or or pop mov dec out mov xchg xor mov int inc cmp inc pop pop xchg sbb pop push addr16 fcoml test nop pop ret enter jmp cmp mov mov addl pop mov stc xchg aaa jg and adc rclb xchg icebp sti jg or cld and loope (bad) jg std (bad) outsb mov xchg xlat daa scas pop ficomp popa push cmp sub aad aas and add ret pop jg jb movl pop inc add cs imul outsl jmp inc mov dec icebp inc popf ror jg mov add jg std push dec arpl out outsb cmp call mov jg push push lods std les sbb out jg xlat inc pop mov hlt imul lahf cld sti xchg fnsave inc addl jg imull mov pop outsb jg mov and add push dec cmp cmp (bad) imul sbb adc mov jg push int3 sahf push mov sub mov int jno mov jg xchg stc fidivr pop imul pop in and icebp mov or ja popf mov push test (bad) jmp call in dec fnstenv jg aam movsb adc repnz dec ja sbb cmp mov dec inc aad fcoms dec dec lods lret jg xchg data16 adc jb out dec arpl ss dec push push or cmp mov fwait cmc je shrb loope iret xchg jg push jmp dec mov dec ljmp fistpl es and cmp aad cmp cld mov jg or mov (bad) rorb mov test pop jg cmc xchg imull adc xor popf xchg mov cmp jne and jg movsl inc mov addr16 test dec je jg in daa (bad) cmp mov push xor push jg inc jno sbb pushf xchg jg mov cmp fstl cmpl lea cli leave stos pop push jne xchg daa inc sar and in test or sti addr16 jg mov lahf mulb jg jb pop mov in sbb dec inc and jg out inc lcall in (bad) jbe xchg xlat inc or lahf fdivrp inc int jg test lock insl leave sbb dec js inc mov inc adc xchg dec stos es pop enter shll jb xor push adc jg movsl cmp mov mov lea xchg cmp push cmp xor sub jle pop cmc sbb pop jg mov test jg mov xchg (bad) jbe cmp les je in cmpsl mov xchg adc pop mov mov fnop loop or inc jle dec lret scas add cwtl pop movsl scas mov ss pop inc leave push fnclex stos jg aas push mov stos and jg inc pop (bad) outsb jge loop data16 push adc mov pop dec popf pop adc and icebp mov mov mov sar mov arpl push rcll inc xchg jg fst mov addr16 mov notb jecxz dec pop sbbl jo or (bad) stc add jae es outsl push inc stc dec aas dec mov jp jmp jg mov adc or add loope jg push into push cwtl jp test insl mov push sub fisubrl mov xchg dec jne jg out cmpsl call addr16 gs jl ret mov cmp sub push sbb (bad) out cld cmp jg sahf fidivl cmp mov mov test (bad) popa (bad) jg ret negb fs mov sti sbb mov nop or jb,pn in xchg and orl inc mov jg mov cmp adc jg pop int fwait dec pop xor push gs (bad) push insb jg pop cmc call jg and ret dec shll jbe enter out into pushf pop mov js int jg or insb pop jg clc cmpsl repz adc add add push (bad) inc incl mov outsl jno or cld lcall jg xor adc add jg (bad) mov or and dec push ljmp enter pop fnstenv cmp adc repz pop inc sub dec adc arpl jecxz xchg pop xor sub xchg fistpl pop test lret notl cs (bad) aas adc lahf adc xor mov jg jmp xorb sti scas adc jg dec shrl pop xchg mov mov cld fist push lock aam jae push jg cwtl push dec (bad) jb pop jne xchg mov (bad) arpl mov cmp cmc jno jge roll lahf push jg inc sti xchg mov mov pop pop jno pop dec mov icebp dec (bad) sub nop push xchg cli or cmpsb mov arpl and push jne (bad) ss sbb inc aas fidivr outsb leave adc xlat dec repnz mov add jg xor dec mov adc pop es fnstcw imul inc and push inc ret stos adc jg es xchg ds mov lods add test dec call cmp dec jmp jg fbstp dec fs dec std aas mov xchg jg dec rcr inc mov sarl movsl in jmp jbe lea jg jge dec xor jg sub icebp loop mov das sub xchg inc sarb dec orb outsl jg stos pop dec mov ljmp cmp sbb jg mov lret sub adc cwtl jg sbb jb es sti dec add sub leave dec flds mov jg test add movsb cmc xchg jg or cmp fdivr mov jg jp scas movsl xor push and xchg cmp ret in aam inc lods sarb cwtl dec xor out pop popa hlt jg xchg int3 (bad) stos or imul cmp sub cltd scas pushfw imul mov sub push (bad) sbb rorl mov push xchg jnp inc leave jg lea ret mov dec dec dec stos push mov xor and loope mov sub (bad) dec xor test idivl call xor jg nop xor daa hlt mov jg xchg mov cmpl cmp jae push cmp out mov imul push hlt bound jg sbb in sahf repz jg ja push negb jo jns mov int3 fidivr cwtl dec lds jle loop cltd pop popa mov push es pop enter ret ds jnp daa dec pushf ss jg (bad) push dec loope sbb fdivrs sub dec or je aas roll jb addr16 push roll xchg xor in je dec mov rep ds jg mov adc xchg add jg pop cmpsb dec add mov and clc jg jae mov out mov pop cmp dec xor insl or pop push int3 sub jne and (bad) mov sbb xchg jg inc adc jo push ja popf fsubrs adc xor inc stc mov jg push sbb loop sub pop push fldl nop jg imul (bad) jle or leave ja stos mov push jg fldl jno out pop dec pop cmp popa mov jp push jnp,pt sti pop aad outsl pop jae jl (bad) int jp pop dec call sub jae aad fild push loop aas outsl pop out je jg mov ss in push dec outsb (bad) imull movsb (bad) outsl cmp pop pop xchg add and mov test icebp adc mov jb cmp jl adc (bad) jle sub (bad) mov pop lods dec in ja test mov jg adc mov cli mov pop jg pop mov iret jp pop mov sti shrb jg add xchg outsl jae jg dec cmp pop (bad) sarb xor pop outsl add xchg jg mov andl jg dec xlat cmp jg lods mov mov adc jg fsubl repz das jnp cwtl (bad) mov and cmp jg lea jl inc ds mov add mov sbb mov aas (bad) cmp add lods jg adc jg cltd xorb es and and jmp outsb fistpll mov ljmp dec sar rol mov push aad push enter out mov jg stos out pop sub test iret cli pop dec (bad) dec jg into popf xchg push daa mov jg adc mov cmc inc lock cli adc ljmp push cmpsl inc adc jle pop addl in rcrl push pop movl rorb (bad) (bad) ja in gs sti push (bad) mov lds (bad) jg sub jg or ja inc je sti cs push cmpsl ja pop xor jg (bad) lods lea sbb dec inc push xchg jg icebp sub jg test mov out or idivb pop mov jbe inc fidiv xchg ja mov sbb jg imul jg pop inc ret (bad) mov mov sbb mov repz sub jp sahf jg sbb das mov repnz lods in jg imul inc xchg sbb mov dec inc out and jg fwait dec dec aaa jecxz hlt mov mov pop jmp fidivl lahf xchg jg cmp iret jg mov and imul push push adc xor cmc jae adc mov lods mov pop dec sub imull es push cs pop scas jl jo xor je push or adc mov push jnp imul xchg add movsb pop pop out push out or and or jg int or in xchg pusha mov dec xchg or adc jo clc sub scas jg cmp test mov outsl sub mov jns xchg fisubrl mov inc mov jg mov stos lret jg or jge mov pop jg pop (bad) loopne leave repz in imul mov mov and pop loopne cmc inc arpl add inc fstpt pop push mov push shlb (bad) mov jg dec jmp lds jg out pop sbb mov sub pop dec xor repnz jg jecxz clc in adc jg sub lret jg push or hlt inc andl add mov dec jg scas mov or or imul mov mov xor ret int mov jg out jmp xchg test clc adc pop out jg movsb mov dec cmc arpl sub xchg xchg cli ja popa mov aas pop fs pushf inc repz (bad) push jg sarl jmp xchg and xor pop sbb jmp inc jne dec stos mov jle stc mov into sub sbb loope iret push inc xchg js sub cmp fwait adc int mov push push add cli jg fmull jae inc mov pop lret mov xchg cmp adc jg xchg imul cmp int3 mov and xchg sub in aas sbb add jecxz sub jg inc sahf and (bad) pop jo dec jg jb stos cli enter mov lea js aas xlat and pop pushf ficomp dec out sbb (bad) mov xchg xchg mov mov mov lods push pushf dec push fs (bad) aas mov mov xchg jecxz fdivp mov pop jbe icebp sub movsb jg lods and mov xchg mov sub pop into sub jo test outsb ljmp (bad) fnop push jle mov pop push mov mov jl dec mov cmp jo jg cmp or mov movl pop cmp popa out pop cmc pop insl push js jg ror mov adc scas or push xchg mov adc jg add dec add (bad) (bad) cmp out outsl repz adc mov sti jg movsl inc push test push repz sbb aas sbb and (bad) jg lock sahf and lcall incb pop mov pusha add lods or add scas and xchg (bad) ss es jg pop mov outsb test sbb dec mov das mov and mov (bad) ljmp jg movsb pop dec xlat scas in jg cmp aam and js mov dec mov or int3 jg mov (bad) cli xchg adc inc outsl adc ret jg jo adc xchg stc adc sub in pop jg nop loope sti cmpsb mov js inc cmc je jg xor inc imul push dec add jg pop xor jecxz or jg lds (bad) ret cmpsl push jne icebp fstl push jg xchg adc pushf jg (bad) lret cli jnp sub push movsl daa jmp xchg ds icebp mov cmp mov dec jno sbb test pop inc not aad in xchg cmp jne adc xchg jg push xchg sbb jg not (bad) mov push xor mov dec add xchg add jg jp outsl jbe in jg jl jb imul scas mov pop jle ss adc jg add fidivl inc daa repnz mov jo icebp adc into arpl jns jg fmuls imul adc call pop mov int3 leave jg cmp out in cmpl add jg pop sbb jg in (bad) xor xchg jg stos mov sbb add jge (bad) jns jg mov push xor push insl pop clc gs inc rcrb jmp (bad) (bad) enter mov jno popa cmp jmp xor jbe jecxz pop orl adc sti lods push sub xor push jge pop (bad) jmp das pop loope push jb jg xor mov int ja out xor cmc aas into mov or test adc mov lock sarl lods lods leave fisttpl imul ret mov out nop (bad) pushl push push lret ja fidivr ja loopne xor lahf dec jg or aas push cltd xchg sti and addr16 push fldenv jg dec jge push dec add bound enter jae mov bound rcr jg add sbb jecxz arpl inc addr16 insl xchg daa mov call jg jle sbb mov and inc jg mov jg repnz push and dec enter test sub mov fnstcw popf imul inc pop insl repz jg movsb call jo mov xchg pop cs divb addr16 addr16 cmp hlt xor mov push lret mov rcll xchg inc dec mov dec adc push or add sahf push popf jg in or in repz jg es (bad) loop dec mov mov les testb jp test notl sub add xor dec and daa scas inc imul jne pop fistpl pop addr16 jg,pt add jne dec mov sti mov test loope xor dec jae in mov adc loopne adc xlat jg mov xchg push jg cwtl fs jg loopne movsl (bad) jge pop pop mov addr16 int pop sbb outsl aam test push out mov movsb leave or jg cs dec xchg out or add jg sbb dec push push mov pop and (bad) push inc jg ds mov imul jno popa jl out outsw sub orl inc loopne mov insb loope and inc jl fildl cmp imul mov std mov or jb arpl lods mov loop xchg adc add xchg insb test jg mov pop mov inc inc pop jg repnz rolb nop jg std or lea jg popa in jp mov mov xchg mov jg adc jg add mov xor lods out mov enter sbb xchg jg sub add and jg repz adc js hlt jg add fnstenv mulb dec out mov jge jg sbb lcall lods mov mov push mov cld push xchg pop test mov popl ss jg stos push lret jge xchg adc aam adc mov clc sti xor mov jnp lds cmp das fldl jg xor mov (bad) clc xchg lea mov test subl jg push movsb ljmp push out sub ret mov loop insl (bad) (bad) je mov jg call sbb jg pop mov into (bad) jae mov testl xchg out pop lahf mov xor or and mov or push aas mov mov sub sub repz xor (bad) (bad) and in fistpl mov int pop cmp sub mov inc xchg call xchg ds cltd fidivr into in loopne test or fild mov fcomps fldl cmpsl (bad) mov stc jg (bad) bound aad dec push pushl daa jge inc dec inc pop stc lahf pop xchg adc pop add enter adc fstpt jns clc lea outsl mov lahf inc daa addl shrl cmpsl fs arpl jge adc jg popf cwtl cmp fistpll mov xor cmovs test das incb les dec pop inc pop (bad) or jg mov jno orb pushf inc adc test scas fcoms into jns push mov jg cmp in ja inc jp ljmp cmpsl scas das mov xor or imul out pop arpl lods lret add int3 insl push mov std xor sahf enter sbb scas mov je lds loopne aas les mov mov pusha scas jg repz add lock jno pop and cmp scas subb sub jnp add jg push push sbb jg mov (bad) lods rolb fnstenv inc ja or fs inc cmp jg sub lock jg sub push rclb push loope jg icebp dec and jnp ret stos jae add sbb inc lahf push sub jbe mov pop aam jp and add stos xor or shlb jbe sbbb push jg mov ret push repnz scas mov movsl dec and arpl jg inc push aam je jo lea push xchg mov addr16 orb sub dec cmp pushf xor dec cmp sbb mov pop add or mov aam and out inc hlt push xchg xchg aas mov stc popf push mov xchg dec xchg mov mov dec jg xchg mov fs dec sub pushf and outsl out push test xchg dec mov adc jg push lahf aas jns movsl pop rcr stos ja pop jg hlt mov int mov dec cli mov mov hlt (bad) jg (bad) ljmp push aas add cmpsb xchg or sbbl xchg mov adc adc fstpt mov jmp jg cmpsb push icebp add jge fwait int3 push mov lret dec mov daa sti arpl stos mov lret jno fldl ljmp cmc shr ja inc xchg jl jg sbb es xor or push mov jge out cmp repnz dec or adc jg mov jno xchg cwtl sbb fist std pop (bad) cmc es sti jp ljmp movsl jg cmp adc inc cmpsb jmp mov add test mov dec out fbstp sar jg and or ss lds jg icebp fisubl cmp mov jl (bad) sbb mov sbb dec push sti mov insl out imul stos sbb fstpt ja pushf idivl je jb mov inc jg dec andl sub jg jg in (bad) push sti sub movsb daa mov ja in data16 jg mov sbb sub pop or cmc push clc push stos jg test rcrl push push xor mov cmp xor out push rep aad jne dec ljmp cmp jg fiadd add jg mov xor mov addr16 xchg push jg mov leave popf jg in sub and mov (bad) cmp inc lea out das cmpsb hlt out dec xchg sbb mov inc test or jg jl xor lcall xchg addr16 and sarl cmp out add xchg push (bad) gs (bad) jo adc mov pop adc push pop cmc adc jg outsl cmp jge mov mov lods inc imul jg int xor inc mov sbb mov pop divb inc in jg xchg xor push and mov mov sub or xor outsl adc push sub ljmp icebp dec cs sbbb dec mov sbb outsl mov jg push aas xchg je jno mov inc jo (bad) mov jg dec and adc mov jns fidiv or xchg test call lea push lods nop dec xchg dec adc dec ss in jg outsl sbb mov jg or xor cwtl or dec inc inc cmp mov pop xchg push stos pop leave jg mov jp (bad) (bad) jg rol jo add bound (bad) int3 inc push jg sbb and mov icebp outsl dec inc mov sbb roll jg mov push push enter insl call push lahf repz iret addr16 scas aaa xchg jg or sarl lds cld inc scas mov nop std das clc cmp sub ds cmp adc push jg xchg (bad) int3 or mov pop (bad) ja push inc cwtl jnp inc stos and cmc adc sbb mov aas dec lea jg pop lahf mov jg lds sub jg and roll add jg sub gs fstpt pusha pop xor fcmovbe lret and mov jg int mov sbb jg jbe mov pop test pop mov add xchg (bad) jge xor enter lock sbb out jg inc mov mov jg fbld mull xor jg add xor in xor pop (bad) hlt mov aam mov lods cwtl xchg pop enter jg clc inc test and jg hlt arpl in sahf lds jg xor sbb pop cmp imul sbb mov fild or push mov not stos sub xchg or cltd fisubl jg jge inc xchg xor sarb leave pop dec inc push stos jg aaa fmul je jno mov push inc xchg in int mov aam xchg mov xor call adc stc mov add cmp jg and sbb sbb jg rclb sub jo mov popa stos xor jg inc das insl sub daa dec ss out xor jg push dec jmp (bad) popf mov lock xor jg adc sbb insl loopne mov or daa mov (bad) dec insb xchg xlat std leave pop jg jno (bad) mov mov adc popa aam lea dec imull pop iret or sub inc pop xchg jg and js sbb or in repnz xchg (bad) push jbe,pn dec jg les outsb jg jnp cmpsl pop pop mov jg gs test lret insb push xchg xchg jmp into adc je mov xchg jl cld pop mov or frstor jns mov inc lods jg lret pop dec daa fcmove in jns jb add sbb mov arpl fiaddl sarl xchg or jbe dec gs bound jns repz mov jnp sbb (bad) mov sub push cmpsb test mov jg pop pop adc loopne jg insb add xchg cmp insl in jg imul xchg pushf push jg test lds xchg mov cli popa cs mov out inc fnstcw fs stos jg (bad) adc inc ss xchg push dec dec push out repnz or xor jecxz xchg push push dec jmp cmp mov ljmp mov out lods lods jg fmull (bad) jg dec (bad) lahf scas jge imul jne mov and dec inc pop jg adc fcmovbe xorl into aad add inc jg fcomi push jg lret add and ja xchg pop mov enter or xor rolb pop leave mov in jg sahf mov stc jg divb loop movsb push jno pop pop andb pop subl clc into rol test addl cmc scas rorl cmpsl or cli jg pop scas pop inc daa mov enter movsl jg jg out ds add sbb mov (bad) mov clc pop xchg inc dec sbb jle mov lock jg pop or inc push in mov imul fwait in xchg mov ljmp inc sbb add in lret cmp cmp ret js,pt dec jle or inc leave in popf mov stos stc sbb cmpl mov push cld call insl mov scas mov repz sbb xchg loope insl jge cmc dec add jg xchg mov push jg int mov ds jg imul (bad) mov ficomp test jne mov dec jg xchg scas pop and lea push xchg inc xchg mov jmp fimul loope pushf xor flds adc push ss popa inc loopne mov pop add pop jg mov mov jg scas lahf mov push outsl push (bad) mov out movsb add sbb mov lahf inc lods jnp adc dec out jg dec cli mov pop mov jg stos into xor (bad) bound std dec push add bnd es mov cmp icebp pop fsubr xchg (bad) dec incb jg pusha lcall cs mov adc enter imul lsl adc pop out in push mov ss ret enter bnd mov push jg adc sbb jg xchg add jg xor (bad) or (bad) in lea xor jg (bad) call xchg jg xchg dec mov xchg hlt cmpsb popf xchg ret and inc mov jmp mov jg push out sub jge inc mov pop mov xor lock js jg pop mov cli mov in or mov mov pop aad loopne jg ror int xchg mov jg xchg stc repnz call cs xchg arpl fwait cltd add cmp fsts jecxz pop aam stos jo jg and clc adc inc out popa test mov dec je cmp (bad) mov jo push fsubs fmull lock clc (bad) lret mov lcall inc mov jl adc (bad) ja inc (bad) fimull and jae mov cli dec scas fcompl and iret and outsl jg jp add inc aam aas xchg test loope and and lock ret jnp outsl aas nop daa lods jle fist inc lret jg jp push xor sbb fisubr addr16 test loopne pushf or (bad) out and cmp cltd and push and sub mov int3 mov loop in sarb cmc xchg fldl daa ds jg mov sbb jg push push jp jo sub push pop pop cmp data16 cmp cld jg dec call es jnp ds or jg lds out aas jle mov rorb out or cmpsl repz jle jmp loopne call pop loopne dec in jg lahf jb add fisttpl jl orl subb aam jnp xchg xchg cmpsl popa jg xor (bad) outsb push and arpl pop xchg or dec sti cmpsl imul mov and pop (bad) jg push jg adc mov cmp addr16 cmp pop jbe xor mov imul jg (bad) mov inc stc and and adc dec add rclb adc adc fidivr jnp jo (bad) mov lret (bad) jg pop sbb adc fwait jg xchg outsb pop sub push pop mov call and jg popa mov adc mov jne (bad) fsubs ljmp mov and add imul fdiv dec in dec test add (bad) add imul int3 imul or inc inc out fcomps fstl mov cmp mov push ljmp cmp xchg jae stos clc jg sub jo out jg mov xchg lahf jle jg outsl gs xchg stc jmp jg dec pop jae jns jle cmp repz scas mov jne test push push aam or movsl aas repnz arpl (bad) jge push sub fidivr and aam stos mov push jg js,pt mov jp jg sahf sbb outsb sub cmp adc das mov lahf mov pop scas sbb xorl jg (bad) cmp movsl and cltd or mov mov (bad) mov push fstpt adc icebp mov mov lods clc jo das pop data16 mov iret sbb mov xchg and fstps (bad) mov xchg push loopne jmp fisubr data16 pop add in loop add stc sti adc jnp mov or inc xor inc (bad) mov leave push aad jg cmp (bad) and sub xchg scas mov inc leave loope ret mov (bad) mov iret jge xchg jg stos es lcall mov jecxz jl pop lahf lods fsubrl jg mov js mov icebp inc add jp jg sub (bad) arpl arpl adc push sub mov add jg jecxz sub imul adc sahf sub mov idivl test sarl push jmp mov addr16 pop mov lret pop inc loopne sahf inc movq insb lcall cmp in mov and mov iret add jg in xchg and push sbbb or sbb push push fs mov (bad) jp in jg sub outsl fcoml cmp fistpll sbb sti call or test cmc jno adc jg lds mov ficomp sbb cmpsl add jg lods cli je int or adc mov cmpsb hlt jae stc xor pop in testb sub and in (bad) stc jg cwtl dec ja mov xor push js jbe xor dec in fstpt hlt andl (bad) push mov push arpl pop pop push lock aad jg outsl push pushf out mov adc pop mov test jae out sbb test xor inc jl jg fdivr (bad) lret out insl or stc pusha inc add and (bad) sbb nop cmpl mov rcrl push (bad) pop sub ret out inc inc push jbe xor arpl lret jg aas push adc imul mov adcl cmp cmp ljmp jg inc insb mov cld pop pop inc push jg cltd jb data16 sub push xchg int3 pop pop inc jg push pop pand lahf jg mov xchg and shlb outsb adc leave push hlt test xchg (bad) fmuls xor dec aaa movsl xor or shrl jg inc stc jnp jl cmp scas lcall mov or jg xchg or leave shlb jbe imul imul jg mov lea jl les pop mov pop cmpsb dec inc arpl jg mov jbe lds dec sub lret inc mov cmpl inc sub pop addr16 adc ret in jg jge pushf fwait xor mov jb push jecxz push divb fwait lret mov ljmp shrl es lods and outsl outsb inc mov xlat inc mov (bad) mov jns imul sub jg pop jecxz sub loope (bad) pop mov out dec ret fisubl inc imulb and lret pusha sbb adc ret lahf outsl outsl pop sub dec shrl (bad) pop cmpsb cmpb mov dec jg inc loopne clc mov nop cmp sti mov imul scas xchg shr test pushf pop cmp inc sbb push mov rcr sarl mov aam mov bound and jg insl loope std dec je pop jne and sbb sbb push loopne cmp sbb jg popf sbbb aad xchg fwait mov js mov jg mov lcall dec pop mov adc jg adc repnz gs jg inc rol js pop adc jg mov andl outsl mov jmp sub lds int3 jg xchg jb sti test adc mov js mov test jne pop in jecxz or (bad) inc push sub jle push sub lea jg add ja push inc inc mov adc cli mov movsb or xor adc dec imul inc adc add xchg and jg and mov jg sarb inc cld dec or mov pinsrw jne cmpsb mov pusha clc mov cld incb or or sub aas xchg jecxz mov pushf aad mov sub out shrl dec (bad) call or mov sti adc fdivrs mov jg jb mov mov jg lods pop sbb loopne addr16 outsb jg xchg sbb fstpl ja cmp xchg subl adc notl pop pusha test jg mov mov sub adc adc cmpsb pushf jg mov les pop cmpsl jg sub insb stc jae xor stos mov dec mov pop jnp icebp adc scas push adc movsb adc inc sub dec and cli test pushw (bad) mov jg (bad) out fadds jg (bad) in jo push loope jle and popa jne imul movsb sub test cmp cmpsl jg hlt sub push pusha sub (bad) arpl jg mov movb fildll inc in jg sti and rorb fistp pop mov in sarb xor ja inc jg decl test jae jg nop aas and jg jo xor mov sar dec ljmp (bad) dec dec fidivl jle xor mov push mov xor jg xor push into iret xchg jmp jg cmp fbld mov in xchg call mov hlt testl outsl mov mov inc dec nop and jg add (bad) jne movsb jg fldcw sbb or sub jo jg lods movsl add jmp into (bad) mov (bad) es mov and push push jmp shl test mov loop jg jne xor push loopne mov mov mov push inc xchg bound push add mov mov (bad) stos pop in jg add insb cmp jno sub fbld imul sbb mov js mov test sub in or dec cs cmp push jg rorb add idivb jg pop insl mov shrb or cmp loope das lods mov jge rol mov aas pop loope fst push inc inc cmp jl pop rorl jecxz xchg mov mov pop cmp xchg mov (bad) movl jg xor sbb add mov pop add dec aas mov push mov lcall stc insl lret xchg adc cli cmpsl xlat dec lahf jne or push lods (bad) movsb jecxz data16 sub dec int3 push jne ret jg nop (bad) into xchg xor std cmp jg or fldl insl ret loopne mov icebp stos (bad) pop clts inc mov mov pop stos test mov mov mov aam jg inc add jmp mov outsb fldt lret adc dec dec rclb cmpsl pop sti arpl dec int inc push mov (bad) jb xor jg in sub jg mov dec movsb leave (bad) sti ret xchg jnp xchg mov xor lahf (bad) mov test and mov fnstcw sub push and in pop and or data16 jg inc mov test xor clc cltd add jmp nop hlt mov or outsl pop xor push adc and in fidivrl lret cmp xchg dec mov and insl aaa mov jmp inc fnstsw or inc sti xor sub mov aaa insl pop sub sub lcall jg or mov pop sbb adc cli inc mov jnp and imul sub jg int cli push hlt cmp in (bad) mov fsub cmpl loop xor cmp mov mov cld fdivl inc jg mov mov mov dec bound pop mov jge pop testb hlt (bad) push je jg ret stos push repnz pop jg aaa and mov push (bad) scas cmp push or xlat pop cltd mov (bad) jg fsub mov aas pop sbb divl rolb inc out push aam jne bound xchg daa les pop jp push das mov and add jg and add and xor pop cwtl add movsl clc mov sub or add hlt xor jg leave adc adc lds jp lea aad in or jnp enter mov xor dec sarb test adcb sub inc mov cmp xorl push outsb xchg jg mov movhps sti (bad) aad dec outsl fldenv stos dec jg cli test popa dec pop scas push movq (bad) xor cmpb in sbb idivb nopl jge inc lahf ja int ljmp bnd mul stc pop in fstpt es in scas pop imul out repz loopne add sbb aam mov xor es jg xchg adc shrl xor outsb insb scas das mov cmpsb addr16 arpl outsl sub jg popf mov sarb arpl jg test lock sbbl xchg (bad) mov ror movsb jno testb (bad) popa cli push mov sub sbb lea mov inc jo decl inc aad cli pop push (bad) jg sub ja xor xchg int3 pop mov lcall shrb adc inc pop jg adc cmp lock cli xchg (bad) movq incl sti rcll test pop jbe inc ret sbb adc mov dec jg ret pop mov lods mov inc or test adc loopne lahf int and out hlt jg xchg ja out lods cltd inc loop xchg mov sub push fdivl pop fs lcall test mov jmp clc push jb or jg pusha shrb cmp jo fnstcw push outsl popa lret xor dec or inc fiaddl icebp stos call xchg jg inc xor test loop jg xchg mov test scas adc aas or dec in jg sub mov lcall out jbe pop shll fldenv mov mov sarb lret xchg imul pop clc push mov adc sub fsubr pop xor dec in gs sbb insl jl jg scas mov js adc aas ss push addr16 subl pop arpl push jg cmp repnz jns xor shll mov xor stos jg inc pop jns loopne enter mov mov cltd jg mov push jg (bad) jne jbe sbb repz loopne out ret mov iret jae enter lcall add sbb cmp mov push jg (bad) fisubr or (bad) cmc lods sub push cmpb test pop adc aas adc add add xchg nop pop lret inc loope xor aas jb jle stos lds mov mov das jo jle mov aas pop add inc invlpg jmp aad push lahf add push pop fadds dec inc bound fwait pusha dec jg fcoml sbb add test pop cmp stos push mov jnp in jmp lds inc aam xchg clc addr16 jg std fimull mov addr16 sub hlt push lcall xorb call enter inc scas and dec frstor pop insl lahf jp pop jg pop in sub pop xchg jg ret inc mov in dec add mov aad xchg icebp dec mov jge mov dec mov out sub push dec or insl mov jmp xor inc out out pop sti decb enter sti icebp cltd cmpsl sub subl es cld sub dec icebp outsl sbb shll mov jg clc inc cs cli inc sarb cmpsl push scas add cld jle adcl sbb jns push cmp pop xlat pop pushf pop cs outsl (bad) sbb cmp xchg add xchg xor in push movsb dec repnz dec out mov addb mov mov jge repz xor shlb jne jg xlat pop sub jecxz jg mov add jg push dec cmpsl and sub leave sub stos idivb jl jbe xchg in jne adc scas movsl or push pop jg and jle jg (bad) mov xchg or mov xchg flds jb test xor push jg rorb les lock iret mov push int3 testl mov jg imul pop fisttp fwait test cmpsb sbb aaa lea adc jg push js btr mov sub push out ret outsl daa or cmp cmp mov jg loope jne (bad) sbb aas (bad) or inc insb rolb fnstcw pop push fstl cmp inc mov in jno int fcompl mov lods jge jg or push and sub pop xchg stc aad imul mov es mov std aaa mov xlat jg push lcall cmp sub popf push lds dec in jg loopne push imul xchg test xchg push and ja stos adc mov mov add cs push outsl mov xor mov lahf sub sbb stos pop xchg ficompl inc lds jg aas inc aam movsb popf rcll cld mov lahf outsl and das push push xchg jg mov mov jo add (bad) out lret jg jg xchg push pop fwait mov adc xchg jns cmp and aas dec scas nop add add jg push and into loopne xlat push jge xchg xor adc mov stos fcmove mov out add faddl push mov mov xchg mov fdivrs (bad) cmp insl jno outsl sub and push jecxz mov jg inc xchg cli ss jmp (bad) or jmp mov inc xchg cmp mov cld inc mov jg push lock pop jg mov sbb ljmp jg ja sbb mov push rorb popa jg mov pop (bad) push jg movsl fs pop cmp jg adc sub sarl cs insb scas fcmovb cmp pop jl or jg cmp jns and popf inc mov in lret mov (bad) xchg insl dec mov mov add inc arpl or daa mov dec cmpsl daa ja rcr dec out mov jnp jg cmp ret sbb push jecxz imul pop xchg rclb mov adc pop cmpsb sub xchg cmp xchg repnz jg cmp out or push push jg loope add (bad) mov adc mov orl xchg push jle pop popl jg lock or out idivl inc add mov cmp and jbe sbb jg mov adc lods push jnp jle aad pop cmp inc mov jg je sbb jg insb hlt lods jbe xchg (bad) jg in stos jae insl push mov lea xor stos cld insl movl imul cs pop in jnp jg cmc adc sbb imul sbb inc lock jno and dec iret xchg mov sbb mov and cmpsb out mov popa push mov jle out jnp popf sbb test stos mov jb dec ret jo push fdivrs jg loop mov aas sub mov repnz fs mov lds leave sahf jg mov cwtl dec insl adc add loope dec sub lret push sbb sbb repz jg sub stos push mov xchg pushf xor xchg scas and outsl aas mov push addr16 mov es push movsb xchg jno jne mov cs sub addr16 mov (bad) int3 jg ret add mov pop cmp lret inc icebp sub scas mov and loope sbb jp jge sbb (bad) lds call adc jg or test jg add push xlat aas gs adc idivb pop insb jp cmp push xchg arpl mov test push jg xor jg dec pop mov jg cwtl ljmp stos mov push ds fsts (bad) aas and dec and add lods cltd scas (bad) cs mov sbb inc add dec insl int movsb sub stc pop fdivl cmpsl aas fnstsw cli aaa (bad) mov jg add xor jg adc xor mov cmpsl les sbb mov movsl add dec inc maskmovq idivl jg shrl xchg mov outsl pop mov mov ret add popf jmp mov dec xchg (bad) sub in int3 sbb sti push xor fcoms or test out and ret xor cmp insl mov adc pop jg mov (bad) xor sub mov mov mov sarl inc idivb xor mov xor out jg add test rolb lock push jg mov adc pop pop dec cmp jecxz sti aas sahf xor mov popf outsl and jbe ljmp dec mov mov sbbl mov ja mov mov jg jg imul push push cli dec psrad mov inc inc push mov lock sahf adc jg xor jne (bad) pusha cmp addr16 pop mov jg ss pop mov mov inc mov rorl aas mov jmp push addr16 (bad) mov xchg jg sbb (bad) pushf sbb jg mov icebp and sub jle inc push jecxz aaa outsl pop lods sahf popf xchg xchg dec jne lret xchg jg and push add inc mov leave fistpll jg jae jne in aam cli jg add mov mov xor push xchg sub mov iret cld cwtl outsl int3 pcmpgtb aaa and adc xchg push dec jmp jg push pop lahf sbb jbe aas (bad) scas dec xchg shl dec add jle jg les jg xchg test movsl sarb fdivs lods pusha and cmpsb adc push in pop stos lock test push xchg enter push mov dec leave push xchg adc sub lods add mov inc cmp je push testb fcmovnbe cmpsb adc pusha les in jg pop add sub mov jne xchg mov les adc sub cmpl loop inc pop pop and xchg dec xchg jg mov (bad) icebp loopne aas cmpsl pop ret addr16 or cmc sbb mov adc leave cmp cmp push mov pop std add xchg repnz (bad) pop lret jg jmp sahf push enter dec fistl mov pop pop cmp add imul mov les negl je jg xchg or pop mov outsb mov or daa loopne jp jg aas dec repnz xor jg aam and mov mov pop rcr dec (bad) xor test jne and push jg ss xchg inc (bad) pop cmp cmp dec decl mov mov into ficom cmp xor fcos xor mov adc jg push add insl in scas inc aad lea jb int3 sarb sahf sbb icebp outsl mov dec pop mov inc cmp mov jg rcr (bad) leave jp jge push cmp xor imul jnp rolb insl mov and loopne xchg jbe or sti sbb xorl ret int daa stos aas mov lods inc test mov imul inc jl push xchg inc jg sbb sbb pushf fs mov sahf shl fcoml sbb aas sbb cmp inc and aam push in xchg lcall outsl jg jp out jge sarb lods (bad) out push and jg or int add push lods mov inc sub xor jge out lcall imul sbbb aaa aas in dec and testl data16 fs nop jno and arpl dec mov movsb jg inc aad iret dec push sub (bad) sub lock stos push aas xchg imul aad jg xlat enter int jg inc (bad) ret data16 sti xchg pop mulb pop incl jg mov sbb mov ss fdivs push xor xchg aas cmp arpl std jg js out stc test arpl repnz and and jg xchg dec pop xor mov es ss jg out or add jg push push movsl fbld mov sub jnp or repz iret inc mov xor mov movsb xchg jmp cmp sbb jnp rcrl (bad) push mov and cmp pop jg test subl push xorl jmp dec add pop fisubl les adc mov push mov sbb stc shrb loopne jg or insl outsb negl jg test dec movsl shrb push sub aas and push sub xchg jg (bad) fs pusha (bad) mov lods and or push idiv sahf shrb repnz xor and int3 jg inc or popf test iret pop lds outsl jge adc and jg mov dec lds jg popf push sub repnz inc mov jo bound jno xchg dec outsb xchg pop jg push insb pop mov mov rclb out jg pop loope pop mov outsl fisubrl rcrb mov repnz jg cmc scas mov add stos fbld sahf int3 loope and inc aas aam jp and push dec add fwait outsl mov nop (bad) sbb pop or xor add arpl inc mov mov decb jg mov sahf jge mov mov inc cltd and pop mov sahf pop dec jg gs icebp push jb and mov in lods mov or pop lds sti inc aas pushl xchg mov mov sub xchg mov mov push lret jo jg add push test repz insl pop push cmp loopne jmp dec jg mov pop stos jg sti or repnz mov ret (bad) mov (bad) decb scas and push test dec test jp pop push mov into ljmp insb aaa aam rcrb out (bad) lds arpl stc ds dec jae xor mov mov aas push les cmpsb cltd testb jg cmp adc fwait shll xchg rolb loopne hlt lods jg lea mov insb pop jg stos and inc xlat roll imul jg std jecxz pop fnstcw sub arpl lcall jg test outsl sbb int scas (bad) pop jb int3 pop jg inc jns sub cmpsl or xor mov inc jg xchg pop jg (bad) pop insb fwait (bad) je dec jno out mov inc mov jg jl add call and aas (bad) or mov xchg arpl lock lds mov bound aas cmp jg push cmc add call pop cmp ds add pop pop cmp (bad) test cmp addr16 adc loop jg pop mov es jl leave popa mov fcmovbe cmp jns icebp mul scas pop mov fistp pop and jg cmp push dec aas jno out mov repz cmc lds and aad push jbe (bad) xor mov push popa jg pop jne int3 lock icebp jg loop cmp test (bad) xor adc add into push jecxz inc lock jg sahf cltd enter or adcb subl lds sub inc ja call cmp sbb scas xchg dec mov imul jg push pop ret jg (bad) je loopne pop jns sarl outsb mov pop in dec mov test adc mov andl sub shlb dec cmp jg inc jne jl pop mov stc call jecxz mov mov jg add in push js sbb jo xchg daa sub (bad) push idivl push fwait pop pop pop add or cmp dec push pop adc mov fs jae dec dec in cld jle lidtl dec stos in out xchg jg mov cmpl repz xor and and stos add js push pop jg out mov sarb roll insl outsb pop mov insl sub jg xor jg nop js jmp out mov xchg scas in popf jg fdiv sub rcrl jg aam (bad) pop loop sbb dec mov (bad) cmp jmp xlat fistpl mov sbb and and paddusw dec push lcall in bound or mov push mov pop pop mov push (bad) mov push mov adc mov jno push jg jnp mov lret dec lock fldt inc les dec repnz sub mov or pop jg sub scas mov shrb daa mov es mov les jmp xlat insl imul rcl adc js push inc pand cmp js jg push ret in les or jl push xchg pop mov cmc (bad) ljmp xor and insl in cmp ret sbb or jg aad mov aas pop cli lahf call dec inc (bad) xor out or cmpsl cli and insl scas (bad) cmp fistpll add in jg sbb (bad) pop mov ja ljmp mov cmp (bad) icebp and dec and hlt push cs out mov (bad) das xor inc (bad) je ret lock movsl fcomps out orl cmp outsl push aam pop mulb jg data16 in shlb jg lret and popa jg or adc add mul cmp das and rolb dec iret insl mov lea dec icebp arpl xchg sbb mov stc xchg jg push aaa lcall jb and jae jg mov scas pushf push jns jg out enter test cmp dec jg push jb bound in repz inc sub popf inc repz pop test rorl bound mov call xchg jg adc repz in sahf in adc push jg std mov jb cmp xchg cmp mov fcompl push dec (bad) hlt jbe sbb (bad) push and (bad) ja fs icebp aas xchg jg arpl add lret sub cmpsl icebp idivl jg repnz aas mov ret mov out je in jne popf add jg pop lret and out out ljmp fidivrl ds test lcall mov or jg mov gs mov mov pushf mov dec mov jg lds imul jg es test cmp sar int dec pop adc imul in mov inc jnp lods xor hlt pop push jbe sbb mov test dec jg sub push lret mov aad in xor pop cmc or jg scas movsb sub mov arpl pop adc mov dec sbb jbe pop inc fadds mov loopne sbb (bad) fsts jl jle (bad) sub jg mov xor xor jg adc push outsl pop pop mov bound pop andb inc sub (bad) jecxz cmp jg jg pusha jbe pop cmpsb jg mov lods out in aad out push xchg out jg fild fnstcw js pop pop mov popa xchg mov inc sbb in pop mov in (bad) jg pop ret dec cmp xchg pusha inc fidivr popa sub ficoml outsl push jg xchg hlt int3 lds fstpt sbb push jae push cmovnp scas ja mov rcll cltd push shrl bound sub pop test data16 dec xchg fisubl push adc stos adc and lea add das movsl inc jnp mov jle (bad) movsl xor xchg inc adc subb insb leave je fnstsw dec pusha mov jp (bad) sub mov mov jg adc mov movsl jnp mov ja xor sarl imul jg stos movsb test dec or add scas bound ficom dec add inc jg mov repnz and insb mov jg roll xchg jge sub jg xchg insb out lds ds dec fstl add test cld mov in ljmp imul out loopne (bad) rcr xor movsl push loopne push mov dec push mov arpl inc pop sub mov fisub add push xor sub sahf es push push out ret inc adc cmc sbb inc arpl jmp xchg push xor enter out pavgb xchg pop faddl cltd mov insb (bad) jg test mov pop dec mov cmp adc popa push pop insl ficoml jg or sti cli jg sbb jg dec or mov push and shrl loop jg or test xchg inc out mov jb dec push inc fldcw add js jg fiaddl inc hlt mov cwtl stos fwait xor push les arpl jg les and adc testl or or imull in (bad) xlat sub add mov stos rcrb (bad) jbe cmp insl xchg mov (bad) mov clc (bad) pop mov (bad) push aam xchg push outsb std mov adc pop aad pop cli dec jg (bad) rcll lock popf jg rcrb jg ds sbb inc mov jno in and push jg mov xchg ljmp inc aas jecxz repnz and xchg loopne ja jecxz jg sbb dec leave push push mov ficomp dec dec es xchg fs mov arpl out (bad) lods (bad) mov pop mov out push jg xor jo mov mov xor xor dec repz jl hlt cli xchg sahf mov adc movsb mov lcall stos jg in loopne in mov outsb lret int daa sub push mov pop popa (bad) into add mov pop jg (bad) cltd jb aad push or and ljmp jp sub inc test pop sti push (bad) arpl dec call jg popf jp jmp dec ljmp mov inc insl scas idivl lock repz pushf xchg incb imul inc jp add push js mov (bad) dec ds sub jg fnstcw iret daa inc scas lcall pushf xchg std add das mov cmpsl dec fnstenv jg xor jbe cmc xor jg rol inc push in jg add arpl jle ja in cmp orb lds xchg jg movsl push daa notl loop dec sbb mov xor sub fldt iret cmp pop xchg cmp arpl stos push divl mov stc shll in in mov mov ja or mov dec inc ret inc into jg les cmp jg or (bad) loope rcrb mov dec mov outsl movl jg mov (bad) and jg int3 adc notl jecxz jg jbe jb test sub fs add (bad) mov jg push add es sub dec bound jae out xchg cmp or xchg jg cli clc jecxz rorl fsub imul and icebp fs pop mov aam aas cmc pop fwait add fstps test push cmp jg (bad) sti add mov out or cmpsb daa jg pop arpl mov mov mov or daa dec stos cltd dec data16 jg add ss add adc aad negb push adc fwait mov clc push outsb mov divl pop dec mov das lock outsl mov dec jnp xchg inc in into jg cmp sbb clc (bad) mov inc ficom lock pop (bad) sbb mov inc mov cwtl ds ss jge xorl cwtl jg sbb faddl jo loop xor or xchg stos outsl nop jnp xorb mov mov add (bad) (bad) sahf mov cmp jp add addr16 lods scas fsubl orl outsl push inc test jg (bad) jae (bad) aas mov push adc clc jg xchg sub rolb out popf je fmuls and push jecxz and aas or jmp jno xor jg adc or inc xchg popa fs test inc enter push cld fwait push (bad) imul aam or push rcr mov (bad) ds fs xchg pushf roll or cmp pop mov jg adc cmp (bad) xchg test mov test add ljmp xchg fidivrl inc out shrl mov and adc cmp mov outsb fdivrl mov fst in xor sbb mov aaa jg inc add jmp and insl aad mov (bad) cmpsb jg movl mov dec out and sub cltd push icebp cmp pop and popf jno add xor adc push mov jbe std (bad) jg jo loope mov adc push lock out or add imul je jmp stc xor cs jg outsl in mov addl mov inc pop pop (bad) push inc inc add loopne xor sahf out cmc or call pop adc daa insb dec (bad) fdivrs cltd jl aam loop pop mov cmp dec or aas and or jl mull inc jg leave out (bad) and mov jle or (bad) dec out adc addl stos int jg repz dec or ss jg push xchg lahf dec sbb sub outsl or imul push sub mov push push jg adc mov and dec je xchg in mov xor jno mov push cmc xchg div sub mov imul in push mov (bad) fs imul iret xchg adc pop and mov mov ja inc cmp push inc pusha scas or test shrb fnstcw pop mov aas or sbb movsl cmp daa jbe in jg aad xor push jg pop xor jg loop mov jno push pop push pop jmp loope jg dec push cmp imul std jg dec mov sbb bnd addr16 shrl bound (bad) jg movsb and mov push add jno fs adc xlat jno and cmc lea pushf addr16 jg (bad) xor xor inc mov xor mov xchg sti sub es leave sti test and pop aad push xor inc lock aam xchg (bad) scas jg and jmp or pop ret test xchg (bad) mov test movsb xor ret fistpll xchg xchg es arpl mov add push lahf jg icebp loope or inc clc push outsl dec scas popl inc sub scas nop sbb cmp cs nop jg rcr adc jg sti ss call or ds adc aas jg mov cmpsl repnz lahf pop insl xchg fadd push enter fcompl push inc out jne mov push aam les xchg out add jg dec cmpsl dec adc jmp and pop xchg add dec jg enter mov ds and ljmp inc inc lds jg iret mov inc mov lahf mov inc repz push and out xlat mov fisubl and bnd incl sbb sahf in aas cmpsb mov cmp fstpl imul xchg or pop loope cmp pop loopne in hlt xor int add mov push fwait mov mov push in mov lret repz cmp and pusha push pop cmp jg or clc popa pop jg test fidivl adc lock xor jg adc add jg sub pop cmp (bad) adc mov cmp push xchg jg pop in out lds sbb dec push scas les cmp (bad) inc add cmpsl sbb adc inc or inc ret in lds push jmp jnp stc mov xor lret out and decl xchg call mov (bad) lock push lcall insb xchg into jg sub in sbbb mov pop hlt pop xchg ljmp scas cmp movsl or (bad) inc ret pusha jmp inc pop imull aam fdivrs pusha subb lock cmpsb adc rcrl xor jno daa cmp repz les shlb test lock arpl data16 jnp (bad) (bad) bound add pop incb or push test jg and xchg xor in cmpb lea jo lret pop movl pushf jg push mov insl jmp mov cmpsl jg jo sarl sub sti and sar das pop mov rcrb mov lea xor sub outsb cs jg push mov test pop cmp into movsb mov add js cld and jae add push mov (bad) imul (bad) out outsl (bad) dec aas mov mov testl inc (bad) xor aas mov (bad) (bad) mov std dec mov push xchg jg mov pop xor jg dec int3 jmp jg inc dec test jle cld mov sbb mov mov mov cmp lds pop push leave std jg out nop mov add xor jg int3 push mov aaa jne,pt fs mov into add lcall mov dec xchg push scas jae jg or (bad) cmpsl aaa lret inc cmp adc mov adc stos cmp mov pop scas ljmp and lds pusha (bad) xchg push mov ror xor in rclb and inc into mov pop add jg jae maxps jg fisubrl addr16 stc (bad) out add repnz pop cmp test inc xor jge jg fiadd jne stos jns mov movsl insb mov lret cmc sti cmpsb xchg in sub addr16 pop xor mov sbb (bad) mov insb not mov jnp sub push (bad) clc lock mov fbstp push inc fs int3 or aaa jecxz push fnstsw ja jp and cmp mov mov push js lods aaa jg xor cmp ret xchg cli or repz mov enter sbb lcall aam pop out dec cmp rcll jg repnz les mov mov mov push mov int add flds mov cmp or xchg cltd bound imul ds test sbb mov pushl xor push xchg fistp lret movsl movl scas int cli std pop jg (bad) call jbe ret cmpsb xor jno and fiaddl movsl pop sbb ja shll mov push mov stos xchg add jg bound mov adc pusha js dec fldt xor jg aad add cmp into mov add enter inc nop and jg int3 sar iret mov insb jg sbb cltd mov mov add xchg pop or shl ret pop push add jg xchg lods cmpl ja jg mov (bad) cmp mov inc nop jge enter aaa repz dec adc mov xchg sbb test jg outsb cmp out xor jg or xlat (bad) dec xchg push jg mov out loopne and mov mov mov dec jg adc dec pushf sti cmpsl lock cmp fist mov sbb fwait inc das frstor rorl xor mov push ja mov sub sbb outsl sbb inc adc addl loopne or jg cwtl mov jns push mov mov mov test pop mov dec inc inc xchg mov loope push cmp jg mov sub int sbb mov xor daa pop and outsb testl lahf in pop xchg testl lods sub inc les jg fwait jle (bad) xor in pop cmp outsl out scas nop test add daa inc xchg pop ja ds aaa movsl jg adc mov mov sbb cmp scas jg add push cli xchg repnz mov aam inc stos loope mov mov lret mov movsb push in cmpl lret adc and mov bsr jbe arpl xchg cmpl je imul dec pop mov or jb add jg out rcrb mov jg inc add fwait pop cmp jg sub es out jae jecxz cmp and outsl iret popa cmp pop xor pop mov cmpl pop (bad) dec cld inc lods sti sbb mov xor leave or ljmp jecxz push clc push xchg aas push jg push int3 jge sbb jg mov jo lea inc push jg xor cmp push jo add std or into cwtl jnp xlat sbb jg jno xchg testl (bad) iret sub jg cmp push addr16 dec insl jg mov xor jg pop out rorb mov mov push pop dec jg jmp ds jg add or ja fs and mov dec pop mov je addl add mov push pop cmc imul sbb outsl dec insl out add push rorb (bad) inc inc and jb xor mov shll cmp bound ja jg stos push (bad) xchg ret dec arpl inc pop movsb inc fwait ror in mov lds movsl jg xor flds in mov int3 mov bound aas ss and dec je test fdivl shl popa sahf daa ret and xor repnz test mov js cmp pop outsl pop pushf dec cmp jle adc lret jg mov cwtl dec sbb mov inc inc je pop pushf inc jmp cltd in addr16 sub es enter jg popf fwait xchg dec gs jg out push mov jbe clc sar je add lea mov subl cmp mov lret cmpsl iret cmpsl or jg insl push cmp inc aas jo scas jbe add aam loope jg aaa cmpsb popf iret push scas mov xchg dec jnp pop nop and pusha outsl adc add lret and add (bad) pop push les dec jg (bad) in sub jg nop sub das cli loope jg mov pusha sarb call cmp mov mov jg adc adc cmp movsb outsb cltd incb ja shlb inc fldt xlat fsubr int hlt fldenv loop lods mov inc roll cmc add outsl icebp mov mov sahf fiaddl dec xchg aas sbb inc mov rorb jg xor pop mov clc push mov adc jg dec cs jge push mov sbb aas fldcw notb jle loop inc xor imul inc mov mov jg push sub mov (bad) jg in pop xchg out inc xlat jg pop (bad) rclb lret (bad) dec jb les and jg add (bad) enter push adc stos in lock sub cwtl inc aaa adc mov cli out les push lods and cmpsl pop imul jg mov or outsl pop mov imull popf jg cli jge mov cmp repz jnp xor movsb (bad) or dec jae or idivb xchg jns xor bound jno cmp fstpl cli out pop lcall and and jg dec (bad) push stc pop sti sbb out sahf adc idivb scas leave ret je jg (bad) in or outsb mov scas jmp pop (bad) dec test fndisi(8087 rcrl pop pop sbb dec pop clc ds jo push fisubrl inc daa aas pop mov or mov jg popa sbb add mov xor inc push popf out mov xlat (bad) insl or arpl lea inc xchg xchg hlt push je cmp into ja inc aaa sbb mov jecxz pop adc push iret lret jg das dec (bad) mov jo bound jg cmp in push sbb mov shlb mov mov sbb clc addr16 mov jg dec mov cmp adc lods arpl test lock ja,pt out mov jg test jg fnsave lahf fistpl mov sbb sbb cmc sar out in lcall scas out or lahf push jg sbb xchg and movsl jg add mov jg idivb (bad) jg mov jnp jg sbb pusha inc jg lret out pop test mov in sub iret ja nop mov cmp jb inc mov mov and adc push sbb rolb jg add nop pop sub xor and pop fwait je lahf push pop sub pushf push ret sub xor mov rcrl movsl mov dec rcrb jg stos jbe popf sub notb mov inc xor rcl test fmuls test nop cli popf adc jg lcall jg pop scas cmp jg push push outsl stos aam mov xor cmp push xchg jg jg insb and or jg cmp mov jg pop stos cmp jae loopne shr repnz in ds fs mov jns mov sub push mov jl jmp nop adc jg popa mov lds ss and stos xchg imul push mov aas inc fdivrs dec adc jg mov loopne cmp (bad) pusha out dec inc cmc inc jg fyl2xp1 or jbe mov test fmul aaa mov (bad) cmpsb or cmpl pop repnz mov mov jg push push jg and jecxz jg xor inc loopne push aad sti int3 cs add jp (bad) jae jno jg imul mov pop adc lahf jg,pt hlt bound (bad) mov push mull add pop movsb fmull mov jo arpl je adc ljmpw pop cwtl lret pop in outsl or xor xchg jecxz dec enter push stc jg inc sarb pusha pop mov les ss dec notl test and push mov negl pop fstpt add aad fcomip mov dec imull pop lahf scas addb (bad) mov jle rolb js out mov mulb cmp js inc xchg fwait in lods test dec mov test mov mov cmp (bad) xlat adc inc jnp fidivr js sub add dec push mov sub jg mov lds cli push xor jg mov outsl and or xorb outsl movl push les rcll push das dec xlat jle daa scas xchg pushf nop pusha imul hlt adc arpl aas jne ds push (bad) cld fwait mov std sub mov mov movsl xor das cli cmp stos bound jp push enter aas jecxz out sub inc inc inc jae dec adc rcl arpl shll xor pop xchg insl sarb mov (bad) stc mov xchg mov orl cmc fmuls mov or mov inc mov push xchg xor and bound decb cld jg idivb fnstenv (bad) push jg mov or mov push mov xchg push jg xchg and xor xchg loop iret ja cld lds push and jno push jge cwtl (bad) or mov lahf mov pop lcall jg mov add fiaddl xchg jns (bad) stc adc sar iret jg orl fidivl add mov jmp push xchg aad cwtl jge loop cmpsl push stos addr16 (bad) int ficomp mov jg cmp inc xor inc pop js orl sarb pop sbb pop jno imul pop ja (bad) jns mov ljmp sti jmp cmp mov jg,pt ror inc dec das loope sbb outsl (bad) add into jg inc outsl cmpsb out gs xchg jg mov loopne out data16 sbb mov fwait dec and add push pushf sub pop xor inc lcall dec pop movsb push jns (bad) jg dec dec mov jg bound xor mov jg pop (bad) or and int ss inc sbb or or daa mov idivl jne xor rorb loopne jg mov iret js je aas cltd shll popf jg adc cmpsb mov dec out scas cmp jg adc xchg sti fcmovnb daa jle repnz (bad) aam popa pop sub mov les add pop enter xor je jns sub ja fcomp sbb (bad) sub out add inc out outsb data16 sbb push jg push adc or loopne aas cmp cmpsl add scas jg sbb icebp fs mov scas or lahf jg push scas cmp out out popf mov pop faddl fiadd or mov aaa out jo xchg jg and jno xlat pop mov sbb dec xor xchg jg test mov subl aas xchg rcr dec jecxz arpl cwtl jg jg mov std or jg test cmpb gs jp add jmp clc daa addr16 insl jg cmp cmp mov xchg push in popf fisttp jg add mov (bad) (bad) aaa sub sbb ja inc ljmp fbld scas xchg inc pop les push test ret adc sub int ja cmp cld jg rorb ds (bad) xor xchg lahf arpl pushf ja jae sbb pop jbe movsl bound in adcb cmpl inc mov xor into test aam adc mov jg jp lds mov add fnsave xchg sbb das mov lcall out lahf or dec cltd pop jg imul jnp mov mov dec xchg mov push pop push mov lea sbb je jle mov cmp lods mov nop ret in jno and leave cld pop sub fistpll outsl add and sbb pusha xor mov fcoms mov xchg sub fistl fs mov cltd mov mov mov insl xchg sub imul sarl cmpsl mov xor mov mov outsl sahf push (bad) shrl inc cmc xor aad and imul push xorl mov (bad) aas scas jg jnp sbb sahf mov jg jl ljmp les fidivr push out mov mov adc cli xor cmp outsb jb idivb ja xlat lods xor mov lret adc call sub pop mov push dec jg lods push subl roll aas dec push mov cmp jbe adc jg aam lea in mov aad mov in sub adc shrb add subl iret lods inc pop sti xchg dec jle jnp fnstcw insb lods fdivrl add xor testb int shlb jg loope xchg mov mov add clc pop pop push ret enter mov ja (bad) jae inc pop cmpsb pop aas add mov inc push and movsb mov cltd aaa aas sbb ja dec lods inc mov jae push push mov jg (bad) repnz cmp fidivl sbbl push sbb sbb mov sub jb push cmpsb mov inc fstps xchg idivl ficom insb jg pop lret pop dec data16 cmp js (bad) jmp pop pop insl jecxz jg nop aam bound push sbb lods (bad) addr16 and push pop sub mov icebp movsb fisubl es imul add sti xchg js mov lds lea dec aad lret lock rcrl pushf inc sub daa mov cltd sbb js stos push dec in mov xchg cld sub lock nop adc cmc push sbb ja popa mov fdivs cmp jg aam mov scas inc imul sbb jno test push out fild adc jg mov push add pushf push add jne out xor andl outsl inc or jg add push pop and cld inc sub arpl call xchg jne mov sub test dec lock out test call test dec or test ja fwait jb mov out jae stc jg or cld sahf arpl insb dec jg push push sahf adc call outsb sub inc add in mov lcall jmp push pop cmp in fnstcw mov add ljmp test cmc xor mov pushf mov jg movsb xchg negl xor and mov cmp mov pop mov mov in dec fwait lret out sti loop ja daa leave pusha dec add loopne jg sub mov dec movsl jle inc pop es sub ds push fstpt dec test dec mov jge inc inc in sub pop or jg repz mov jl (bad) jmp lods nop push stos orl inc jg stc mov loopne pusha xor jp insb cli aas inc movsb adc dec mov (bad) mov xor xchg mov dec inc stos (bad) mov sbb cli xchg pop test jg lock inc jg cmpsl popl jnp lcall into incb insb in inc enter daa fs push sub jg fwait gs ja flds xchg jg dec xor jg mov ret movsl iret adc lock daa xor cmp pop xor mov mov cmc jg stc jo sbb and sbb pop jg bound scas lds imul sarb jnp push dec mov iret ja jecxz xor subb insl test adc outsl jg bound test push or push ja fstpl clc xchg lock mov xlat repnz or in jg test sub bound inc pop pusha mov into (bad) inc sub icebp jl pop add or repnz mov aad or mov inc popf sarl int les adc mov sub fiadd jg movsb cwtl dec cmp mov out clc jg popf sub fiaddl jg repz inc mov fsubp push push out xor aad jg imul lret lock lods out jmp and js fmull mov out xchg lods loopne dec xchg arpl cmpsl aas xorl cwtl ja mov sbb lock push outsb dec test popa outsl push push lock pop ret sti jne dec and jg sbb popa addr16 jns aas add shrb pop cmp add or ja popf (bad) and cmpsl inc pop (bad) jge in dec int mov cmp lret push jg sbb (bad) fstl out rcrb pushl sub xchg dec jp pop loopne icebp sarl lahf out sti mov scas mov inc cmp ja pop rorb dec imul or sar sub xor test lock hlt jg repnz sub mov mov sti adc push mov test jg sbb loop cmp jg sar leave adc test into aad les inc xchg fstl aas jle shrb clc and jge dec push loopew dec add jo mov cmpsb sub dec in mov mov ror (bad) dec jns and xor lods sub mov adc dec jbe jb cli inc add enter pop jg loopne in lods jle jg fildll rolb xor jg addr16 out mov pop push xchg adc inc xor jg sub mov inc push (bad) mov (bad) jecxz jg sahf out outsb bound jg or inc mull sub mov jg (bad) in ss scas cltd mov and out fsubrp incl jg repnz ja in jg lea dec popa loope jg sub daa aaa pop push mov inc (bad) jmp out jg and cs mov test ret push sahf inc xor addr16 inc lret and mov xor test inc cmc xlat out jg orb jg fisttpl push arpl subl jnp insl pusha or xchg jg sub mov enter jp arpl xchg pop jg or (bad) cmp js jg pusha lcall (bad) mov insb aad insl mov popa mov xchg (bad) mov jl (bad) dec add xchg pop inc add dec test ja sbb mov adc xor jecxz and jb push movsl cltd inc stc daa out test mov lea xchg sti jle lods cmp push add sbb inc ss es dec cwtl push xchg sbb dec iret xor sbb jg and leave jg sub cwtl or sbb lock fdivrp jg inc movsl jmp js mov pop jne add ja add idivb jae in inc or xor outsl add fisttpll jecxz enter xlat lods sub inc in in in test push dec (bad) jg inc sub xchg ret ret xchg mov pop fst rcll push in adc (bad) into aaa gs outsl adc adc movsl jg pop fildll pop or jg mov lcall push ja idivb add (bad) gs or xor pop jle and test (bad) xchg rcrb cmpl cmp push sahf iret ja jg push mov pop loop push jmp cmp jo jg xchg leave and int lock jg enter (bad) cmpsb jg sahf push repz xor aad jg in sub jbe (bad) sti pusha pop mov or inc loopne lret sbb testl xor sahf clc (bad) iret outsl jg push ds cld sbb push mov and jae out aas mov pop push mov outsl inc outsb mov mov ficomp cmc jle adc jp hlt jg lcall bound cmp (bad) fwait add aas mov push lods mov dec pop test mov and dec test mov mov popl int pop mov and add cmpsl in sub ret xchg lcall sti or inc cmp jg xlat ja jmp mov je xchg xchg popf fidivrl movsl sbb jg lds fdivrs ljmp sub jg pop test rolb push mov mov mov lret mov dec dec rcr sbb mov sarl cmp cmp adc or pop cmp pusha ja jg push cmp aaa xchg outsl aas and jae int xor negl mov in or jg xchg pusha xchg push aad test (bad) fdivrl mov dec xor push pshufw addr16 inc inc cmpl pop mov (bad) cli inc pop mov jg in cld leave mov jbe cmp jge repz loopne mov addr16 lahf pop js arpl adc cltd mov in scas mov inc pop add test xor dec and jg push or movsl adc fnsave pushl lds push xchg idivl xor ret xor stos clc jg and jb cltd fidivrl push enter je imul faddp hlt dec repz movsb cmp aam sbb lock sub ret mov jbe jl jg dec (bad) xor adc or mov aam movsl dec sub jecxz mov xlat aad cmp call and mov cmpl push scas ret test jg cmp xchg ret lret arpl jo push faddl mov movsb sbb outsl test sub mov bound cwtl pop dec fwait push pop sarb dec arpl xor ret dec push dec add nop ret (bad) iret cmp xorl push mov dec pop cmc outsb icebp jg lret sbb jg mov push loope xchg or (bad) in lods stos sbb jne je push mov jg adcl mov dec fs setg (bad) xor jg or sarb scas data16 cmp sti inc imul mov arpl dec repz rcrl scas adc out dec cmp pop push in insb adc inc add cmc fiaddl add add mov insl stos rcll sbb push or xchg pop nop mov loop adc fwait jno xor jg inc mov hlt push mov push movsb pop push (bad) test adc pushf jo (bad) dec jg push xchg and mov mov sahf mov mov into mov (bad) push inc inc xchg mov sub (bad) push xlat xor aas mov lods mov mov mov das xor dec sbb jp jg lahf mov pusha jg cmp cmp pusha cwtl jg aam stc jns cmpsb inc inc jae imul jg push push push das xchg cld mov lock jg stos jmp inc xchg jg and out aas mov jle arpl popa jg xchg add imul inc outsl push js cmp jb pushf inc mov or cmp sbb and inc or ja mov push xor dec mov push jg,pt mov xor in xor dec mov add dec jne jns jg movb repnz test jmp dec dec jg dec insb pop call inc push and movsb mov xor sub pop loop mov and lock lds jg jg lods out mov inc jbe xor cmpsl lcall jg shrl pop pop dec jg imul ja pop jg clc out incl mov dec inc (bad) insb fnstsw mov jg xchg xchg xlat aam adc ss pop lcall jb jg mov lea mov xor jg loopne arpl xchg inc test shrl dec cmpsb lret sub int3 lret sbbl (bad) outsl xchg stos pop add fdivrs jg std mov cltd xor ret shlb push jg sti pusha ret xor test sbb pushf in jg out pop jns jmp (bad) enter test lret xchg cmp test inc adc cmp dec jg std sub call push mov fbld add push popf sti push loope sbb push and push andb aaa dec hlt stos ljmp pop cmpl inc jle imul sbb jp adc test mov adc inc pop ja mov mov repz out mov ja push fistpll mov adc cmp xchg xchg xchg ja ret xchg dec jg scas cmp stos mov popa jae aaa aad jg xchg mov inc cmc in fist data16 (bad) and xchg arpl (bad) dec pop push sarb mov jg (bad) xor ss cmp push adc je mov xor pop aas mov xchg inc and dec lcall popa out push int mov pop addr16 (bad) into js xchg sbb sub lea jle mov add inc aas js sti outsl xorl negb mov jnp fstl inc imul (bad) jg and xor cmp sub xchg aas or (bad) jae xor int aad cmp sahf lahf rcll jns call dec jg jo lcall mov (bad) jg popf sub inc loop inc cli lcall jl inc pop mov cmpsl data16 pop inc mov test adc push or xor (bad) mov push inc jg cmpsb xor (bad) ljmp (bad) pcmpeqw push scas inc aaa cmp push push jg insl xorb cmpsb jg adc pop test adc jg and in push lods (bad) jg insb fdivrl lahf gs jnp in sbb dec scas lock jg cmp adc dec lret fdivrs mov je test aam sarb xchg sti sti pop add loopne insb mov inc inc shrl fcmovnbe pusha mov punpckhdq pop jo and pushf mov (bad) xchg (bad) addr16 push fmuls mov and fisttp movsb loop jmp (bad) into xchg rcl fcompl adc lock rcrl call (bad) pop or or or popf mov sbb mov lods xchg jns jbe mov sub lds mov test cs (bad) add sarb xor xor mov sub mov inc pushf out push add jg aad sub inc je mov out nop adc mov sti insl mov push frstpm(287 mov push ss adc inc push jle jge mov enter insl sub lea call or mov inc mov jg mov jp jg push adc xchg test mov or mov add nop xorl adc pop adc dec inc jle,pn repnz sbb inc jecxz push mov push inc sub nop iret sub inc pop loope push mov ds aam jmp xchg call mov sbb fucom movsl loop cmp sahf add push repnz jge jg (bad) les cwtl (bad) dec loop addr16 pusha decb jg out pop cmpsl int inc (bad) inc jmp popa push imul gs adc lcall and outsl add ds rcrb xchg jg push dec call pop jle loopne dec aaa jg cmpsb xchg pop cmp je jne mov xchg or sarl icebp pusha xchg jo dec add bound adc pushf cwtl jge mov stos test inc hlt jecxz cmp mov dec lcall subb push int add mov popa adc sbb xor push call pop daa int3 lea outsb add stc pop (bad) cmp mov or pusha fisttpl xor popf ja add inc loop mov push or call adc (bad) (bad) pusha jae sbb (bad) dec jnp jl cli jg mov mov jg mov js jg (bad) jo inc arpl ret dec jg cmp (bad) jg mov in sbbb push mov cltd ja jae sti jg xor jne cmpsl push jg ret cmc inc mov nop jg ljmp ret dec dec mov call add jg sbb test test lock lods int aas insb cmp cmp dec scas cmp iret ja inc pop adc jb sarl lock pop mov rcl mov mov jne adc mov mov (bad) scas js stos int3 push sbb sbb jg in sub push enter orl jl push cmpsl aas in (bad) mov sets inc aas insl cmp jb lcall xchg iret pusha push pop jg mov js and jg dec data16 sub out jg inc clc into daa fldt addb dec cmpl add cltd mov movntps pop mov inc das cmc dec leave int sub xor loope lahf fnstsw int3 mov or clc loop and jg (bad) int3 outsl xor pop jle sub inc ficompl arpl jp and push testl sub and fstpt push inc pop mov push xchg jg sbb xorb xor add jp aas push pop push pushl jg cmpsl enter sarl andl mov mov push or push rcrb inc lock pop fld mov adc adc jmp adc pop jno dec jg jns sub mov push xor (bad) cmp jg inc aas mov mov push xor push push mov xor sbb ret pop xchg jg pop fild mov ja sahf lods push inc jg aam pop pop sbb push divl outsl das xlat imul pop and cli popf mov mov jbe int3 sbb (bad) int jne mov pop jb mov add dec hlt das mov push fs gs jg call and movsb or jbe fisubr lods jg inc stos test sbb sar push xor dec mov mov xchg pop sbb and shlb outsl jg daa mov adcl jg,pn pop or jmp (bad) push or mov mov jg dec ficomp push sbb movb shrl addr16 roll sbb int int3 jg jg push jg,pn inc sahf jge lahf orb cmpsb sbb dec movsb lcall cvttps2pi out add jo fnstcw cmp jg movsb sub in imul adc mov jg mov loop lahf xor mov popf pop (bad) or pop jb dec scas xchg dec jbe xchg ja (bad) sub aas xor adc iret inc mov xchg jg fnsave (bad) jg aad adc add dec mov aas lea xor lahf icebp inc mov mov stos and lcall pmaxsw mov xchg jg aad pop ljmp stos pop sub jbe (bad) adc mov iret outsl shr push js sbb sahf pop ss lcall (bad) mov out cmp push imul push imul call fisttpll cmpsl pop sarb mov or aas lea xor pushf (bad) mov pop cmp or jne pop loope movb repnz inc ss nop negl fidivrl inc inc pushf out cld int ja sti pop push mov inc pop sub flds xor push bound repnz fidivr (bad) lret lock mov push jecxz lahf popf aas or jg jae stc dec sbb cltd mov inc arpl mov daa sub cmp jo scas leave pop cmovs cli idivl sub repnz popf cmp push jle sbb jg mov push lret ror sbb push fldt cmc pop popf fs mov jg cmp sub stos push push jg je lods test xor imul xlat jg jne or das jo and cltd mov fldt jnp mov loope cmp pop lds in push pop or (bad) js loop dec mov hlt jg adc xor jp xchg cmc data16 jg scas mov mov jg scas lods xchg push lcall and test sub addr16 and jae (bad) jmp xchg dec pushf xor push aam mov js and jne jae jg (bad) sub mov data16 aas das jb dec movq adc call mov pop popa int3 add adc loope mov push adc mov pop xor sbb pop xchg jg test negb jecxz push jp aas mov aad mov popa cltd jg mov ret movsb inc jg mov test jg dec push movb add xchg sbb jg xor jmp mov jg bnd or pop imul add fisubrl test mov fwait mov pop mov int3 jg adc mov jg sbb test adc pop cs test mov jg aas mov insb sbb enter and loope jecxz jg loopne push aad xor mov mov call jg out jae mov jo idivl push leave pusha pop jo inc pop dec sbb aam pop je in arpl jno and and incl mov popf insb mov movsl cmp outsl push xchg stos inc ss jg jne cmp sbb icebp je mov xor fisub jp jg sbb mov in or sub mov add jo lods xor ror mov jg adc jg lcall js or into lret fiaddl lods inc inc mov test xor or xchg jg adc das jecxz mov in clc test jg enter push leave aam dec sbb jg pop or dec (bad) mov and je jp mov stos lcall jne pop sbb sti pop repz daa push and pavgb mov iret jg in sbb dec lahf push dec xor pop sahf popa je or ja xor rcrb or pusha sbb and lret repnz adc out jg mov (bad) push out or aas inc inc and lds outsl iret cld ds setnp in push popa or push data16 xchg add jg popa pop out (bad) sbb int rcrl vandnps jle out cmpsl push enter jg or sahf add xchg dec xor sarb sbb popa jae enter cmpsb mov das jg and mov jg pop in xchg inc cmp add das xchg add jae dec rcll or insl pop fs enter arpl jg inc stos pop mov loope push xchg pop or sbb sub inc icebp adc flds mov inc int3 jg jb jbe rcll or in out push mov push pop in outsl clc mov addb push mov xor es mov fbstp sub xchg test sbbl dec adc in ds inc outsl int3 cltd sub xor inc out jbe sbb xor push imul fsubl shl mov in insb push gs push aad jnp loop cmp sbb mov push sub inc inc sarb jo mov cltd mov jg xor lret sahf xchg add mov addb popl aas mov cmp dec xchg inc js je out daa or xchg jg imul jg xchg lret sti inc hlt or mov push and insb fcmovne gs cmc jg fcmovu das sahf inc negb dec daa push insb int dec mov scas jg cmp in shll jg (bad) jnp int3 ret lret lahf nop jbe (bad) mov aas sbb repz sbb jg inc dec dec pop mov xor mov loope jg inc loop sub mov or jg sub mov repz out xlat inc fs arpl sbb push pop mov mov ss das lahf xchg dec mov cld xlat sar jg (bad) mov jg leave push jp rolb and lss mov js xchg inc test mov fstps add dec jb and stos or push mov test jg xchg or jg lahf mov mov pop mov imulb push xchg pushf lock pop pop sbb push cli cld jg mov ljmp aad sub dec ja jg adc and fldenv jecxz cltd leave dec inc jge jg (bad) out mov and (bad) adc push push fldt mov dec jmp fnstsw icebp std lcall push inc push mov pop push jp push jbe daa in shl push fdivrl aam jo addr16 lahf cmp out jg jae jmp test sbb bound or scas (bad) jl fisttpl and cmpsb pop jo arpl or aas mov loop jg stos xor sbb sub lds pop pop lods dec adc mov xor inc or sbb mov pop adc (bad) xchg sub scas mov dec and ja outsl decl jg ljmp hlt jl sub sub mov mov aas addr16 scas adc jg push sbb cmp mov jg xchg (bad) jg enter jge insl pop stos mov sub pop inc jg aas imul and jle aad add mov ret push dec pop sub int3 and jg cmpsb add std jge mov cmp ja xchg popf fdivrs fldl stos pop mov lds (bad) jnp test and aad xchg pop mov pop mov into add test mov jg negl inc aas test jg sub sub cmpsl inc jns (bad) sbb cmp adc cltd bound cmpsl sub inc pop jg bound mov rorl mov stos dec aaa nop dec xchg jg mov fsubrs sub adc or push (bad) aad jp jnp push sahf jne or fisttpll pop vmovdqu xchg sarl mov inc jg insb dec pushw and jg add ret fdivr rorl jg in xor cmp xor jns call mov orl jg iret scas (bad) call cld repz stos sbb mov test push jnp cmp inc sarl shll scas (bad) mov shlb mov mov imul xchg inc push adc insb arpl push bound jg pop mov pop jge push pop or ds imul xchg scas fisubrl jnp add jg or xor mov push imul mov lcall mov push (bad) pop xchg fsts (bad) xor push jnp jg mov adc int outsl pop xor inc pop pop inc data16 ret in rorl pop shrb sti push popf sbb cmp add pusha xor jg sub push jg test js cmp jg sbb inc lcall popf dec jns cmpb shrl cmp jg cmp loopne imul (bad) cld jo jbe in sub (bad) adc xor mov dec inc pop adc sub xchg popl andl push and mov sti sbb inc outsl xor pop pop and mov fldz pop fcomps jg mov sbb lea mov xchg jge lret mov jbe add xchg sub jge or pop jg (bad) push aad in jg lcall jg pop push pushf daa test and popa sbb cmp and jp leave pop push jg adc mov jne jg xor mov adc enter mov mov sti repz pop lcall rolb push inc bswap cld icebp adc in cmp or pop lea inc imul jg int add jecxz out (bad) jmp pop push test xchg jg in (bad) rcr jg pop int3 dec add ret outsb pop aas sahf cld cmp (bad) xor push je jo addr16 mov adc or jg xor pop jl push rcr lret je jg call out aas xor mov inc pop xchg mov xor jg test rorb aaa (bad) or sbb ja push xor insb lock je mov or (bad) lods add dec cli jno xor mov jg pop pop sti popf pop pop sarb and inc push adc jg shrd pop push sbb ljmp adc mov daa mov leave rorb mov je pop andb dec mov out jg push pop std int outsl aas les jg or mov push sub dec jg cmp sbb stos xchg jnp mov std pop push mov and dec out inc pop xor cmp inc dec pop aas and cli dec inc or scas das dec pop pop inc jge cli lret sti pop push xchg mov lahf push dec jg gs push mov jg rcrl inc inc enter hlt and mov stos push add in fdiv jg sub or mov sbb mov jg sub roll push push aaa call sbb pushf jg sbb inc pop out test lods repz dec dec add pop jg (bad) in and xchg cmp ss aas movsl pop rolb adc es int3 inc mov adc jg xchg add insl ljmp loopne test mov push dec push xor mov and inc jg cmpsb push fninit xchg dec fdivrs js push mov repnz jg inc (bad) cmpsb jo loop cld insb jbe push jnp inc mov lret fmul ds lret mov push ja into lods fisubrl xor xor sarl outsl xchg jnp xor mov push insb xlat inc mov sbb push fnstenv push gs (bad) jg pop lock jg pusha and lret (bad) (bad) push pushl add sub repnz jg jle stos dec ret or inc xor lret inc ja sti pop arpl add jb (bad) out iret outsb ret sub dec jecxz es std push cwtl and cmpsb push jg fsubrl sbb jle inc lea sbbb int3 jg cmpb sub mov popf je inc ja jg cmp pop add dec popa cmp testb mov popf (bad) outsl push and pop xor pop jg inc sub popf and mov jns pop mov hlt jnp out popa inc push mov loope pop mov adc ret ret mov push mov jnp sbb es jg outsb je dec out (bad) mov aam add out enter lahf arpl xor in push jg pop cmpsl dec fldl xchg jg nop adc cmp dec cmc cwtl mov push push mov test ja pop pop jecxz dec add in lods out (bad) jg stc outsb les push nop push add cmp aas xor pop std jae movb lret outsl push (bad) pushf aaa stos out jnp inc add or hlt pop inc cmpl scas jne jg into subl aam mov jg push adc pop xchg mov pop mov jg movsl sbb cmpl mov cmpb pusha push aas out or dec or lahf fldcw mov je push inc cli mov sti std dec out adc push add clc addr16 lds xchg scas jnp inc pop mov jmp test or add icebp xchg sub (bad) fnstcw je inc fstps cli xorl pop lock add jg inc jae mov jno lock stos jp mov (bad) or jg xchg addl out and dec dec mov test inc loop push mov out jg mov pop pop add xchg jg iret add pop or cld pop or int jmp dec or call in test rorb jmp pop in pop leave je mov push or ret (bad) ss inc mov jmp mov jo push mov mov mov adc ja sbb push pop jg addr16 jmp xchg jle (bad) jae add aam (bad) pop in jg pop int3 loop xchg push mov jg (bad) popa stos cwtl and sarb xchg xchg in push fcmovu push mull inc (bad) js imul outsl (bad) push pop js jg xchg stos sub xchg inc jg xchg ja mov xor (bad) ds movb jg das mov pop xor jg or jle jno or fdivrl add push pop fsincos dec (bad) cmp movsb jg fdivrl jg,pn rclb ja movsb loopne cli out mov add xchg and xchg and xchg popa pop cld aas xor rorl jg sub lahf mov xchg dec mov mov push mov pop stos rcrl mov cs clc dec iret (bad) jg scas or cmc lcall aam scas iret jg mov xchg push jns fcompl jle push push dec dec add icebp popa or xchg push jb mov sbb add mov mov inc xor cwtl insb mov push sti pop fidivr push (bad) cmp outsb stos jg push push (bad) and icebp sarb test sahf mov pop sbb adc cmp push xchg jg leave mov bound mov lea ss sbbl push jg xor rolb and or dec sbb lock sbb adc out nop sbb (bad) cli inc popf ret hlt jg ret outsl push mov xlat movsl jg outsl jle mov into dec popa sbb sbb repz cmpsb (bad) mov and push lahf adc sub adc loop jg out clc fldl stc ret dec jg mov pop idiv push pop jg mov or push bound pop leave rorb ss mov inc mov aas fstl sbb daa lret jno pop stc das lods loope fstpt aaa adc add sub stc cmpsb repz xor mov mov pop int mov sub xor test push lret dec xchg lret insl jle aam mov jg lea push and aaa jg lret jp ret pop imul dec cmp pop mov cmp dec cld lcall insb mov xchg push or (bad) aaa mov adc jns lcall (bad) xlat xchg imul inc mov int mov dec lret fwait mov je pop cmp jg lahf sbb loop sbb mov add insl lea mov shl jg pop aad inc pop jne jg lcall jg adc in pushf sbb cmpsb aas or mov idivb jg mov sarb test xlat add cmpsb push les in loopne mov cltd repnz testl sti shl imul (bad) (bad) cmpsl adc popa dec idivb mov imul in lods sti jbe mov stc sub ss sahf bound fldcw shr rolb mov mov repnz push jle mov inc pop mov out jg and xchg test (bad) leave cld jmp inc mov out mov ret xchg aas imul xchg idivb jg mov pop icebp pusha mov (bad) fninit inc roll insb mov es mov adc xchg push inc cmovs xchg in jbe inc pop add xor adc pop aaa jne xchg sbb jge pop movsb jno repnz or dec pop scas jg addr16 stc add xor mov xor pop sahf jg cmp imul pusha ds mov push sti pop enter pop daa lahf xor shrb push (bad) loop lcall mov inc inc xchg lret inc jb fdivrl out inc dec mov cmc aas mov adc cld insw inc mov movsl insb outsl inc aam ss jb shll icebp ds out aaa loopne test int push je popw cmpl les jg lds out add iret out mov jl dec in dec xchg in aam aas (bad) jmp pop or iret inc je cmp add movsb gs jg nop xchg jnp (bad) aaa add pop push fsubrp push jns mov push (bad) xlat addr16 sub mov xor mov outsb jg pop in fnsave mov (bad) ja pushf adc sub outsl pop frstor push lcall test inc xor or push inc xor lea dec pushf pop jmp push jbe and xor jg hlt ss in movsl mov fnop mulb sub xor mov les or and jg mov les in fstpl or lods pop iret add out jg xchg outsb arpl sbb push jg rcr xor pop or inc sbb shll lcall mov das imul jmp and add push leave mov jl ret (bad) insl pop (bad) loop add xchg fs jg lahf sbb xchg mov je add das inc bnd pop xor cmp add jg sub (bad) notb jg cmp xchg mov insl jg pop sbb (bad) lret jg ss cmc mov jg or fcoml mov mov pusha xchg aas add mov fs add jg add (bad) jg daa fdivp mov inc into ds pop addr16 test sbb xchg fwait dec dec add cmp or outsb jg mov xor mov testl pop ret pop xchg pop ljmp imul cmc adc loope mov xchg and out test les sub mov inc xchg fnstenv cli mov jg jp imul nop je subl push push leave xor insl inc lods fs in xchg js lds pop out pop dec or adc jg out xchg mov jl int3 adc xor outsl aad xor mov sahf jg jmp mov lds dec gs sbb jg mov (bad) mov jg aam push ja dec jae cltd xchg (bad) pop adc call mov rolb add pop jmp or xchg dec andl cmp loope jg mov sub mov rcl sub jg in dec cmp adcl jb mov loope jg jns xchg outsl mov inc jg dec cmp mov fdivr xor jg xor cmc (bad) mull or xchg jg xchg leave add (bad) shrl (bad) nop sar xchg rcrl inc cmpsl sub ss sbb or adc imul cltd imulb ret adc sbb bound and out push dec or iret mov xor pop int dec popf (bad) mov mov test fsts pop push int or pop jb fidiv mov mov mov stc ljmp sarb or js push arpl cmp pop jns or sub std fimull mov mov fsubrl aam push lods test xchg ja loop mov mov mov or push stos hlt aas inc and orl shrl push jno pop mov stc sti hlt psrld mov lds fnsave jg scas mov pop iret js adc jp sub jg jl addr16 jnp xchg jmp sti pop sbb cmp daa popf popa int3 hlt lods sub adc shll aam mov jnp adc mov inc or ljmp jg lret or das jg or pop icebp sti fs jg sub sbb lret push in jg scas and push mov popa cld gs cmp (bad) push clc xor dec inc call cmc test xor es mov out jg push mov jo xor fcomps push xchg jg push pop insl mov add jg jnp js icebp imul inc data16 mov push jg add lcall out push jg mov gs jg test cs (bad) neg cmp out bt dec jle jg or jg popf hlt lahf je (bad) jg or (bad) test jo mov jge pop insb ss jg lret icebp inc (bad) jg pop mov and or lahf push xor daa jg cli add mov addr16 (bad) out lea jae cs xchg outsl imul lret or xlat decb aaa addl push adc mov leave es xchg dec sub jg mov sbb or mov lret jg pop add cwtl sub sub cmp inc adc dec xchg jno ja scas addr16 xor cmp (bad) mov int in popl aam pop mov loope xchg or jg sbb sbb sti pop mov cld jg dec loop fstpt inc lret adc cmpsl inc cltd mov mov pop inc or pushf mov xor dec jns mov fs addb dec inc and xchg ja mov std loopne,pt repz jg push cmp andb lcall imul pushf mov sub mov jmp jg roll and push lea sbb xchg in xor hlt leave insl dec fidivrl cmc fdivs push adc xor push cmp pop cmp (bad) sub repz shlb cmp sti pop or or js dec dec idivb adc xchg es (bad) push cmpsb cmp scas sbb adc insb cmp add sbb ljmp lock pop aam in mov pop out pop cmp mov mov rorb int jg mov add xor pop mov (bad) and pop pop mov adc cmpsl jg cli fxch mov sbb lret pop jle xchg push push ja mov insb cmpsb mov popa movntps imul dec jg cmp inc idivl adc imul leave mov shrl push adc jg jae call ret cmpsb arpl insb mov imul jecxz outsl add push call not out mov (bad) mov jg inc aaa lds or jmp or pop jg negl stc inc mov cld shl and xlat ds jnp test push pop int3 fdivrp enter mov xor adcl xlat jg mov jecxz insl push lret (bad) fcmovb jp jg addr16 shrb or add push add lcall in shrb sti lret mov adc addl sub in scas in mov pushl ficom aas jg or mov pop pop xor cmp fadds mov push cwtl pop fwait repz inc inc jg jno jge cmp mov in xchg mov sbb jmp movsl jnp jg xor dec sbb jg cltd push bound jb bound push lret sub mov flds out jns sarb xchg mov inc cmp and jg push bnd jg jae lret mov test adc pop push xorl aaa lock lds lret mov and push fldt mov jg push popa jns pop pop cmp mov jle aas inc lcall sub jg add popf xchg inc out mov stos push ss roll pop daa outsl into jg pop repnz xchg faddl mov dec out outsl jp pop (bad) aad cmp insl (bad) mov xchg stos pop rcrb std idivl dec jg (bad) loope jns popa mov mov mov (bad) push data16 jg ja xchg mov fadds jae xor dec add stos out jb fwait aad adc imul inc pop jg insl xchg (bad) push pop in sbb pop ret dec int3 jg lock bound dec scas cmp in ja pop adc int3 pop aas jno int3 jb cmp test (bad) mov mov sarl les jg jne add jg pop mov pop xchg cmp rcrb int3 xchg in aam inc cmpb sub xlat xchg les jg popa (bad) test dec lcall sub jecxz loopne inc leave dec aas js jnp clc hlt ss pop sahf ds daa aas jp xchg andl lods xchg pop jg mov or (bad) sub ret xchg addr16 xchg aas gs sahf test sbb jg jno in cmp cmp fwait sarb jae pop lods push aas (bad) fdivs mov lds leave stc bound pop sub pop pusha ret dec jecxz,pn dec xor leave test jle and aas fmull sbb (bad) lahf inc (bad) sbb popa jg xor sub arpl or inc int3 and push jae jg push aad imulb sub addb push jg movsl fisubrl jo popaw sub pop adc xlat jp jg ficom or scas sub adc ss xchg sbb cmp jae mov mov scas adc push mov adc pop mov mov push int sbb aam sti fidivr or xchg lret arpl call inc lahf jnp pop imul aas push outsb cmp jg stc mov ror jns aas jecxz push lahf mov inc movsb pop aas sarb jge jg push jg daa sbb and mov out stos fwait imul test test jg in stc sbb in jmp jg lods push lret add std mov jmp out cmp (bad) mov int aas pop cld xor dec in mov jg scas mov cli repnz daa rclb (bad) push xor push dec xlat mov popf ja push push (bad) jg adc or mov testl gs addr16 lret fsubl mov pop pop jns add int3 outsl (bad) inc xchg ja and inc sahf decb jb out lret lods pop (bad) dec inc mov jg scas lret js insb sub mov mov or inc jg aam cmp (bad) xchg cmp orl ss jmp mov in and aam mov les ljmp fcompl das and rolb and mov out cli push cmp pop xor jl sbb stos pop test ja mov rol cmp cmc add ret push and inc cmpsb xchg aad sti gs stos ss pop mov mov les jg jns or out std pop scas (bad) jg aad xor jb pop ds dec and pop pop mov ljmp cwtl mov mov or pop cmp stos mov test push popa push push xchg mov and daa xor clc pop in sub imul imul sub xor or fnstenv (bad) cs ficom pop insb add call insl js imul pop jg scas nopl stos jl fiadd nop mov aas jae sub jbe test outsl add sbb push cmpsl jmp scas sub inc mov fdivrs cmpsl imul lds fisub jmp dec call xor pop jg xor out insl cmpsl (bad) jo mov and rclb lock sub nop dec ljmp out fwait out fnsave es ja and into inc (bad) xchg notl jnp mov xor or push push std scas mov mov dec push xor and fistpl pusha scas xchg mov inc sbb sbb jg jae mov fistl sbb repnz cmp sub dec xor jg xchg mov pop (bad) fstpl push les push push dec in jg je sbb rcrb pusha push js cmp shrl out jg test jp popf dec inc xchg shl rol dec jg jecxz sbb inc rolb fs jno sahf push stos loopne xlat adc je push mov inc out push inc mov (bad) ss mov jg mov pop jl sub pop movsb and jbe loopne jg push std and data16 jle loopne push jg jno pop aam push pop jg inc stos mov jg cmp and dec and loop fcmovnbe sub hlt dec inc movq mov mov jnp aas jg jp cld xchg repnz fdivr mov std or lcall cmp jg cld clc fidivr jo bound mov add pop xlat ror enter inc mov jne movsb out minps xchg sub cwtl out pushf xor jbe push js fdivs jg pusha repz push dec pushf arpl adc mov andb xor or jg cmp xchg xor inc xchg mov cmp xchg movsb jg jne pop pusha movb js icebp pop inc adc jg mov cmp pop stos pop ret out adc and rclb aas push outsb sub jae and push xor fwait pop jmp jg sti xchg jns dec insb or arpl or inc cmp into popl jg pop test adc mov xor add fstpt inc scas shll jmp push jle out ret call jmp jno mov bt movsb dec ja pop jg fwait mov xchg pusha jp jg adc mov pushf xchg das mov jg push inc cmp jg jecxz andl ljmp sbb xchg mov mov mov es jg dec xor in sbb jg call insl or push mov js add cvtps2pi xchg lret call out inc std sbb data16 jg or push jns mulb addr16 mov lret dec mov jg outsl jo push std add aas lret js fist icebp lods jg cmc in pop stos ret pop push mov jg xchg mov sub dec (bad) dec push lea xchg push xlat std fidivr add xchg les test in ja mov shrl js and jg mov (bad) fisubr add push pop mov scas xchg dec jecxz cmp xlat ja sub arpl xchg repz leave mov or idivl dec bound (bad) add gs jl push lock xchg or enter push xchg push sti pop (bad) hlt aas sbb dec push adc in inc mov mov add test movq ffree xor mov jg mov scas js into push add mov and inc mov daa jg jle popa jg mov mov jg and mov add mov sub jle sbb jne jns sub jle and push mov pop mov leave cld jg ret imul mov out pop cmpsb ret sub sbb test xchg sarb inc dec (bad) mov push sbb adc fwait jle int dec mov add cs jg cmc ret enter fxch mov jg hlt mov addr16 outsb pop aas bound movsl dec mov je mov insb pushf in jg xchg testb fcompl ss ljmp int loopne rdrand (bad) sarb jnp cmpl std shrl bound sub mov mov data16 js,pn xor lea push lcall xchg outsl fwait vmovapd mov stos pop ficoml scas inc xor jmp and (bad) mov add jecxz loop inc subb jno test in jl jg pusha xor cld xor cmpb test mov add cltd push jnp xchg or jg bound lret inc push jg dec loope arpl jle aas out push ret orl inc push pop or cmc jg stc jg mov (bad) decl fimull pushf sub jge (bad) dec jg pop mov aad xchg in addr16 lret inc jg add sarl daa out cmpsb pop (bad) stos mov sbb fnstsw lods mov mov inc jb enter aad popa xchg mov sbb jg movb jg xor repz pushf je,pn std pop inc mov cmc inc outsl jne cli cwtl (bad) mov and jg fdivs ret add inc lds push cmp leave aam adc and aas mov mov aam es jg adc and pop pop jg ja mov push cmp xchg and fsts popf jg (bad) push jl adcb mov leave ds add divl js fisttpll cli sahf xor mov ja push xlat sub jge fptan out jg jle jmp jg and enter mov lock pop xchg iret jg loopne cmpsb test inc dec aas call mov jg sbb js dec sbb mov lahf cmpb insl jg (bad) mov cltd jg and push mov mov ja add fstpt scas and pop xchg clc jg movsl cmp or jg mov ds popf je cmp js aas int mov fdecstp jg or roll call cld cmp in cltd jg popa jecxz outsb aad jae test in lock or push test ret call push add mov dec loope outsl in lcall jo shll fistpl je mov mov add outsb mov fwait xor pop test sbb dec jb mov int jb ret pop test mov xor fstpl push mov stc in and sbb mull mov sub dec scas fbld mov dec into test mov xchg fisubr arpl cmp call dec test fisttpll aaa jg add lret mull and add (bad) xor lcall mov int3 jg xlat dec push cmp pushf jg or hlt in dec mov sbb jno push pop jns popl push iret jg pop gs stc stos in mov out mov pop (bad) adc jg je std xchg mov xchg mov push mov pop pop leave sbb ljmp imul pop xor dec out add jg mov mov pop (bad) inc or sub mov sahf in test mov (bad) out insb jp push clc dec test pop rorb jg stos dec inc inc movsb (bad) insl jg mov lahf mov pop inc cs or iret xchg shrb loopne jbe movq jg rclb and push jle nop push jg mov test ljmp lret fcoml std dec push and jb mov pop lahf and stos xor gs call ret pop (bad) inc popa sbb inc mov mov imul push xchg jg jp sbb notb mov jl sbb add idivl mov push mov (bad) mov mov addr16 fiadd jecxz push sti cli push jne outsl dec (bad) jae and jno movsb push sub cltd jg inc cmp xchg pop bsf xor popf mov lds mov shll (bad) jg adc repz push and clc xchg pop enter es sub add push jmp jns movsb mov out push loope lods les fbstp mul ret decb test push into ficom xchg test and jg pop add and push lcall mov rcl cmp mov push xor cmp cmp jg mov or (bad) in lea cmp mov arpl dec ljmp xor cmpb jg xchg gs jg jo mov jg jmp in adc xchg cmp rcll dec jg xor fs outsl inc mov xor inc pop gs pop mov dec fnstsw sub fsubr or arpl les or cmpsb mov jg cld push inc enter jg dec cmpsl cmp xchg mov leave int pusha jmp inc dec jg fidiv mov sti mov jg jbe dec idiv fcoml ss out ja jnp test push aas inc outsb clc aad sahf (bad) dec push push jg dec xlat push sub and call nop jl and imul add adc aas (bad) loopne movsb push sub insb add sbb or popa or jnp cwtl sub mov push and jnp xchg hlt lahf jbe dec jg jg imulb push or add cmpb sub inc cmp dec jb jge sub pop mov mov xchg imul jmp es adc sbb cmp (bad) mov fidivrl or mov jg mov adcl xchg or inc pop call sub dec jne push loop imul and int3 (bad) std sbb jg fsubl out pop loop jg dec or pop lods lcall cmp pop jbe dec xor adcl divl bound movsl jg push adc add in jle dec les mov xchg dec cmpsb cs test outsb jg (bad) lahf lea inc (bad) fsubrl pushf lret and xor add imul in clc (bad) mov jg sbb mov cmp ljmp repnz fs jg dec test cmp mov lahf adc push xor jmp xchg js rcl sbb (bad) push and mov jg adc xchg jg loope movl aam jbe push cmpsl mov sarl ret lods ret fwait add shrl cltd ljmp das xchg fidivrl int sbb push jl sbb fildl test fs pop (bad) adc mov enter jg push mov jp es and test inc mov dec mov mov jg jg mov adc stos mov (bad) push rcll sub mov test jg enter xor xor outsl (bad) int imul mov mov mov jg xor adc jg lods icebp in adc mov hlt xor fwait test je ja sahf adc nop repz aaa es inc icebp jne inc or dec gs mov (bad) push and dec push mov jnp push xor ljmp inc or insl pop fsub push push push (bad) mov pushf jg sub inc jg scas dec rcll push sub pop outsb mov fild aam enter push ja xchg jb cld pop or (bad) idiv lcall or mov sbb cmp into jg inc lods and cmp xchg ja adcl adcb daa mov mov dec fcoml lahf lcall cmpsl aas in mov jg int mov jg je sbb adc into imul push repz mov mov or or loopne (bad) repz dec jg inc cmpsl out and dec xor js or int3 ds push aas xchg fsub pop rclb movsb jnp dec or xchg mov mov roll pop mov iret inc push lahf clc scas test push adc icebp push jae inc pop movsb sti imul xor rcrb fstpl dec pop nop aas cmc push je jno jg and and pushf sub or push mov mov cmp scas out push pop insw movsl dec sbb aas aas or fsubrl idivl stos mov xor mov xchg push pop ret orl xlat imul or stos cmp lret loop push xchg jge jg dec dec xchg ss push js cmp mov lods sbb in loopne out mov lods lock push and mov jb dec cli fistpll int3 and divl lock push cmp xor out mov mov rorb scas mov stos and sub shrb pop les xor dec jg jae xchg jne jb sub jns sub cmpsb jg xchg sahf flds icebp cwtl ret jns mov pushaw pop leave push stc out test jg push push loopne ds out jg imul outsl repnz (bad) (bad) jmp mov mov and inc popl and push andl in cmp inc jg sub aad dec test inc and mov rcl ret push jg xor inc xchg sti mov lcall rcl jns pop lds or popf push dec adc enter jl jg lahf xchg or (bad) js mov (bad) out js push ljmp aas jg mov lods jbe push add jns in push mov data16 xlat in ja test pop push sub loop jg cld mov out add or ds jnp popf pop xchg xor jg xchg or jg cwtl movsl xchg nop push push les xchg insl inc imul add mov mulb inc mov jg and xor addr16 stos sti mov fwait loope dec add and sub pop dec jp cmc xchg daa sub pop out or cmp mov daa inc out mov insb push jmp arpl jbe std or inc fwait lea jg pop and push in add add insb sbb lock call arpl sub push push sub push (bad) jg mov gs jbe xchg jg push negl mov pop cli jg fidivrl es notb imul fdivrs outsb mov jg lock dec xchg (bad) cmp sbb or (bad) aaa fidivrl mov call cltd adc lcall ret imulb jno pop push mov ret mov test lret in pop sahf test dec jg (bad) mov out sbb pop test adc fsub mov idivb cmp jg push mov jg loope test fmulp in sti mov mov out xor push aam lods pop xchg sti xor pop push pop or fs mov xchg fwait xchg sbb mov dec outsb leave add mov std lock jg scas cmp rolb pop inc mov aas or xchg mov inc (bad) test hlt int movsb push out popa push mov sub es push cmc cmpsl mov xchg gs jnp mov adc sahf adc fucomip fnsave xchg jg test push lret mov jg jg lea push push adc (bad) repz cmpsb jg inc push jecxz popf fnsave jg ret rol dec push jg lods push test cmp jg gs push and xchg jge pop test jg push xchg rorl dec mov mov dec loop jle mov xor adc xchg dec push and xchg mov mov pop out mov or dec lret mov aam sbb or sbbb pop xor fldl lods xchg outsl jno imul adc loope mov mov dec cmp shrb pop arpl jg (bad) jg inc int add pop sbb jne movsb mov xchg xchg mov repnz or jg xchg and shl decb fbld fmuls lods stos push xchg aas js jo lahf (bad) sbb add ja enter push jb mov outsl pop push int enter fsts mov cmp dec scas inc jg and scas aaa xchg jg outsl lcall iret out or mov dec in sti or hlt jg lods xchg mov scas jo jp lret jg or (bad) and xor enter ljmp call jns jo inc push inc cmp pusha mov mov push adc xchg xchg jle push sbb lds popf add je jne rcll inc adc jmp cmc xor loopne inc test lds lcall in js popa mov cld and scas push mov jae imul jb and mov or sbb shll (bad) xchg xor jg sub sbb shll push rol aas insb je lret mov cmc jg mov ja jp cmp jmp jnp ret subl mov (bad) test jg or and imull ljmp mov cmpsl add sbb iret jb push jg out fst mov mov xchg repnz dec xchg les sti cmp inc xor add jg sub pop ljmp mov lea dec jg inc and in mov enter xchg icebp add outsl into push add jg pop aam add xor push loopne les jg jno mov popf inc adc stos repz mov dec xor sub incb mov stos adc pop std loopne mov jg or mov jg test jo jg push mov (bad) movsb gs inc int3 pop pop pop loope ret lds mov sub imul jl sbb std ds inc jg ja push fwait test out jae jg scas rclb sbb pop dec pop lea cmp pop jmp adc imul inc push out mov xor test sbb icebp push xor inc clc lcall ja mov jb cli jg ret inc (bad) mov repnz sbb callw xor or scas sarb icebp rcr mov push das aas js idivl out dec mov dec shlb into adc in arpl movsl mov pop ds pop ja bnd dec iret shrb jmp pop jg sbb in jb xor addr16 imul mov shr jg pushw inc stos dec cmp lods sti rol jg addr16 mov cmp pop loop jae (bad) lods jg mov jge sbb cltd dec push int sbb outsb push insb mov movsb add fstpt xchg push mov mov jmp idivb daa add jmp lahf aas fiaddl adcl fldl test test mov xorl mov repz push pop xor out dec cwtl cli jg sub ret hlt jg icebp or push mov sbb test lods dec loop cmp rcrb inc call out ja sub jecxz repnz std rol jg stc lret adc xchg jg adc decl jg jle cmp push fwait mov push push xor xchg pop xorl aam je incl and sbb jg push xor pop test jg dec cltd fldl inc xchg jg loop popa ds mov adc outsb inc es jb jg in add mov lcall jp cmp xchg push test inc jg (bad) and mov pop data16 fisubl daa dec cwtl mov jg aas add jg and dec mov cmp xor sbb nop cmp out mov mov sub inc jg mov and xlat mov jp sarb dec pop xor fistpl rclb fs je vlddqu mov jle inc xor inc xchg mov mull xchg jno mov sarb push fdivrp lock mov mov and jg push sub cs mov bound fimull sub jg xlat fsubs mov out imul sti sub cld (bad) mov or ret pop loope jg ljmp jg cld xchg mov mov sub int3 mov jmp in ficoml (bad) add imul jp leave or mov arpl test jne movq mov and sub jg cld inc scas add addr16 stos ret out mov movsl sub and push and mov pop addr16 in insb xchg test pop sbb cli addr16 hlt jg stc dec lret insb movsl jns jl jg data16 popf pop and xchg pushf sub lock sub pop je jecxz xor mov jg stos lds jle in or mov jg dec adc dec mov movsl aam mov jg leave xor enter xchg idivb cli cmp cltd cmp repnz hlt jg xchg aas push xor ret lea outsl lods add divb aas bound loopne adc add fwait jg xchg stc adc cmp addb xor xor addr16 cmc cltd lahf add dec or cmpl loope mov mov xor cmp bnd add push fidiv mov (bad) es daa nop pop mov or sti ret test loop pushf rolb enter mov mov dec push add sub inc imul and fmull stos mov and mov mov jp adc pop and lret push mov jl inc xchg inc adc (bad) cmpsl rol sub (bad) mov ret pop xchg push pop ret xchg imul rcrb and frstor loope or mov cmp test mov ds push sub jg mov xchg mov pushf in std inc ret mov scas push inc mov pushf test or xor jmp ja les and repnz jno sub (bad) mov inc push les cli test mov in outsl sbb jae inc std and fnsave int inc mov inc cmp (bad) jg push pop cmp pop ret jg mov fdivr jne rcr ljmp mov lahf scas jmp push rcrb jg xchg sarl inc out jg or push fdivs cmp sub pushf mov mov lahf xchg jg mov mov pop mov lret jnp out cs inc jg add jg push add mov xchg mov mov cmp push cmp shrl and inc mov jg ss pop inc jmp jge ds aaa xchg jnp jg and inc or (bad) jle pop insb scas jg jae jnp lret add (bad) push and out insl cmovno inc repnz test cmp (bad) mov fmuls pop ds jnp mov mov (bad) mov dec cmpsl dec jnp jg outsb mov push push lahf jg leave mov movsb dec out adc imul aas mov cmc cli inc adc mov xchg pop cmpl jns jg adc add dec mov lcall xorb pop push push pop sbb jp add jg ljmp inc addr16 stc inc sub jg pushf add or fsubl js outsb (bad) mov xchg fwait cmpsl and xchg cmp xor in pop test sub and pop outsb loop lret stc sub xchg outsl dec xchg sahf jbe daa jg movsl mov mov pop call mov pop push pop mov loopne jne mov pop inc (bad) push mov add iret inc or push mov rclb jl jg pop jnp and dec adc stc xor dec bound pop mov inc test shl mov mov push ds inc and loope jecxz mov jg aam inc xchg xchg cmp mov out bound jg adc movsl cltd push inc mov movsl jae mov popl and xchg sub or popf jg push ss inc fnsave in inc lret shr mov sbb inc (bad) stc les imul mov push inc fmull pushf sbb outsb aas pop xor data16 fwait dec stos jle cmpsl daa repz cld add enter dec es roll ds outsl pop nop xchg pop mov les fwait or ficompl outsb mov dec rol jg fstpl mov jg js fwait hlt ret mov push addr16 es movsl les and xor xchg adc xor pop (bad) sbb leave (bad) pop inc enter or pop lret hlt mov cmp sub psubb mov jg movsl call test add add inc in jg mov xor sti mov add dec scas (bad) jb sbb pop in andb mov fstpl lods cs (bad) out add cmp fist jg xchg pop lds or (bad) mov adc mov fisttpll in cmp pop mov ljmp aam inc fdivrs cmp mov xor sbb sub (bad) push rolb (bad) jg mov xchg xor sub jne mov adc cmp sahf jg (bad) add pop xchg pop push mov pop mov pushf (bad) xchg ret inc adc lock pavgw jg lods inc cmp push call inc and mov imul leave sub lods loop cld dec jno push in inc and fcmovnb xchg pop hlt scas xchg push (bad) push jnp sahf and push jg into repnz scas cmp jg mov (bad) popa cmpsl dec jg mov and and push mov pop mov push lcall popf xor cwtd xchg nop fincstp xor dec pop mov aam sbb adc push add (bad) jnp arpl mov insl out js xor jae pushf inc pop dec jmp cmp or pop xor xchg jg dec sub subb and mov or (bad) sbb mov ret pop jl cmp adc mov add jg or rcll inc rclb pop (bad) (bad) jmp xchg in pusha mov addr16 jne cwtl and adc lods leave bound or aas sti (bad) pusha xor jg sbb lahf push mov xor repz dec jne popa and or mov and jg sub fdivr insl xchg lods jg inc add mov ficom mov jg xchg sbb sbb sub roll adc mov pop adc jg insl push fistpll test pop push lcall in stc pop bound jg add jecxz test imul xor dec and test aam test jno out pusha jg inc test and add jle mov push (bad) je xor inc sub and mov arpl dec mov jg add cli mov shr jo mov mov inc cmp jno cmpsb mov xchg jge cltd lock pop mov xor add into aas ja mov xor dec test xor ss sti push stos dec daa (bad) mov outsl xor inc hlt pusha add pop mov pop pop jg cmpsb cwtl loopne pushl lds std or lahf dec jg hlt xchg stos (bad) sahf mov or mov lcall mov jbe cmp push cltd jg insb stos pop xor mov divl dec stos pop and out daa repnz sti pop or imul in or pop (bad) jnp jmp jg or pop jecxz enter xor push pop fnstenv jl std inc or mov arpl jge jg xchg aas sub aad sbb inc jle pop mov dec jecxz (bad) inc push jae or (bad) inc gs imul pusha jg mov and jb (bad) icebp insl jg (bad) stc in dec pusha cmpl call push mov sti pop mov js lret jg gs sbb or mov aaa arpl sbb movsb sub stc cld xor xchg xchg cmpsl in lcall dec inc outsl addr16 pop jg lock pop (bad) push and (bad) dec push dec mov jg pop aaa mov add aas lret scas repnz sub dec sbb and in dec mov or dec outsl adc ja sti idivb dec inc jecxz shll xchg adc imul xchg sub mov dec (bad) out stos out aas mov ret sbb inc stos mov (bad) xor inc xor stos cmp dec push call push inc (bad) je sub sahf jae inc pop jge fstpt inc test nop lret loope add addb out mov cmpsl outsl xchg aam fwait xchg lea or inc jg lods mov mov add jg in push ljmp jg adc mov imul mov and hlt dec jg push mov jg aas mov jae out ret jmp fldl sbb jg outsl cmpsb inc pop mov jg stos dec dec dec scas addb lea addl push jg test enter jo add cli gs push jne into inc xchg inc sbb lods jg inc inc cs pop xchg jg imul js frstpm(287 jmp (bad) dec add mov aaa adc aad test jg sbb and hlt int3 fsubrs mov mov out ljmp jg push sub pop ret pushl jae test or jl idivl adc dec push ljmp push jl jne pop xchg stos ret cmpsb sbb mov jecxz cmp mov mov pop lahf loopne mov scas fisubl fidivr outsb aaa dec movsl mov jecxz pop shll pop sahf adc mov popa pushf mov jmp push (bad) jp pop fistp jg xchg dec cld mov js imul mov aaa loopne jecxz mov push sbb je mov dec fisubr dec add imul jmp and lds sbb add scas hlt mov push dec sbb jg fisubrl outsl mov fldcw dec fs jecxz cld cs xchg dec push addl dec movsl lds add push aas (bad) setle or ljmp neg sub jg sbb pop mov sub cmc ds nop add bound xchg fistpll repnz push dec fnstcw scas dec cmp jne jg loope inc js cmc or sub adc add mov cli ljmp fcmovb cmpsl stos outsb mov mov mov and out jg incb jne lds jg icebp push int3 stc push xchg jge fwait out dec lret imul das lea (bad) mov rcrl outsl bound pop adc (bad) push (bad) repnz ss les adc sub mov fcmovb aaa jg mov in jg ret or repnz aaa mov inc jg push sub fild les movsb sbb shrb jmp jnp,pn push out adc jg rcl gs data16 jg or movsb jg jae sbb mov push push pop mov mov push adc ljmp dec add jg imul loopne adc lcall ficomp stc cmpsb aad dec outsl inc adc jg clc cwtl xchg or jg arpl lcall ret push sub outsl mov arpl jg xchg std or add jg jbe fstps js mov rolb out lods jg mov (bad) dec test pop jg sub (bad) dec jnp in test cmp scas dec jno imul dec ljmp pop jg stc movsb xchg adc stos idivl cmp mov cmpsb xor push dec repz and lock push test jg xchg jp cmp mov movsb jg push xor out add dec cmp hlt mov cmc inc and jg adc and or ret pop ss pop mov in jg or dec push xchg jne mov cmp repz adc ficoml (bad) cmc daa mov cmp xchg rcll inc jg sbb and ja jg adc jg dec je arpl mov push inc mov inc xor pop push or adc jno jg out pop insb clc test ret cli pop mov pop xor cs nop imul (bad) pop mov ret cltd cmc out cld ffreep dec sub xchg dec ret data16 push add sahf jg or (bad) jg leave ret mov dec xor scas xchg lret jge pushf movsb push cltd dec cmp add and inc cmp inc insl cli cmc int bound mov arpl and push mov cwtl mov pop push pop psubw sarl sarl rcr mov add sub dec and jg shlb or jae pop stos cld jp mov sub mov sbb arpl sbb add jg add subb and fincstp in jg or pop jnp dec imul mov notb jno sarl aad lret (bad) (bad) pusha fdiv popa imul pop arpl movsl xchg cmc sbb sub and xchg repz ficom sub jae jg adc popa loope mov pop add (bad) mov jg (bad) lock jns mov jg xchg (bad) cmp jg ja lods clc dec lock jg and pop iret test jg stos cmp rorl xchg insl iret outsb xor aas mov cmp outsl pusha jbe cmp xor les (bad) jno mov dec pop (bad) mov stos jg add add jg mov xor (bad) jge xchg mov jg rclb inc jg or push enter mov (bad) sub xchg mov clc jg orl sbbl dec inc dec (bad) outsb mov dec inc push fadds outsl pop sbb adc mov loopne outsl xchg mov cli mov rcrw cmpsb loopne pop flds imul lods faddl and and imul and sbb pusha test mov cld or cmpsl loop fiaddl cmp jb rcrl jp jg cmc dec fdivs rcrl xchg rclb insb pop (bad) imul xchg dec dec jb shll push xor insb scas inc sub xchg jg out daa sar movsl mov imul cli jg fsubrp outsb fwait adc int movsb xlat jg pop pop out fcoml daa fisub lret or ret pop jg imul ljmp push xor mov sub mov add jg dec rolb ljmp xchg incl mov sub jg lds dec rcr movsb js pop stos stos test and adc outsl aaa ljmp sahf cltd add lock add js push andl stc and jnp jg fldl mov lahf or xchg mov xchg fisubr add rcll (bad) repnz stc cli jge pop jg ret fwait popa jle lods les lock movsb pop adc negl jg xor xor dec cmpsb stos (bad) into add enter test dec jge dec in sub jg cltd cmp or fldl jg iret xor jno das push xor out pop pop mov dec inc daa dec fidivr pop adc or inc (bad) push lods jp push lds mov pop xor xchg ja dec stc add rclb sbb ret xchg inc xchg cmp xor dec aaa push add adcb sar mov add push pop imul inc jg dec (bad) cmp stos pop adc or sub lods sub dec adc in or jg addr16 mov jg jge cmpl (bad) jne cld jo mov outsl xchg xor ret jp movsb lahf mov mov je sbb jg add test mov push jg xlat and in (bad) aas cmpsb push stc scas xor pop and pop adc dec and jg xor mov sub icebp add sub pop cmc sbb mov push (bad) divl jg scas xchg jbe add xor push cmp mov xchg jb jo push push mov cmpsb jp dec inc shrl aas inc bound mov jg mov sar mov fimull outsl mov js ficomp jg and sti mov sahf mov ja in shrl lods mov xor xor ret cmp jg push mov movsl mov dec xchg iret xor push sub in push inc es dec cmovg mov mov gs pop push popa lahf cmp inc cli insb jg or xchg daa data16 adc add xchg jg scas in lea test lds jecxz out iret push xchg adc jg inc and xchg (bad) mov mov dec outsl or jmp jg arpl mov jg test pop fs (bad) (bad) adc sub int dec test cmc fs adc mov sarb cltd pop push push insl sti arpl jg jecxz xor xchg fdivrl movsl aam or adc or dec adc cmc mov push out mov and inc xchg jg movsl or push js stos es jge jne pusha int3 (bad) jg repnz jge out daa jg out shll dec mov sbb jg mov ret or mov hlt dec sahf ja push pop out xor adc push mov pop (bad) lock sbb (bad) xor mov and or in push xchg enter mov leave dec sbb sbb xor cmc pop ljmp js hlt add lock pop (bad) sbb lds adc sub shr ret andb xchg daa fcoms pop js outsl cmp (bad) out jg fsubr aas cltd aaa incl jg pop mov mov outsl cmp flds pop ja cltd notl inc or imul out loopne test lds add fidivr jo xchg sub mov outsb scas fcoms add mov stc or inc push jg loope xchg jg mov stc pop fcomp adc jo push jno dec mov je adc bound (bad) (bad) sub or scas rcrl pop jns ljmp jg decb push inc ds es fcomps pop mov movsl inc mov fwait xor mov xorl jg hlt loope jne sbb rolb imul clc inc sbb rorb jg inc cmp sahf pop nop imul sahf arpl out xor fildl inc stos fcompl and or jg xchg loopne sub (bad) cmp and neg cmc test pop loopne jns pop xchg js mov mov inc mov or push lret pop mov and pop add leave add jg inc into cwtl daa (bad) test fldt pop fdivrp movsl lahf lea push ja mov jg push insb jb inc pop jae fisttpl mov jg mov dec add movsl mov in push mov mov je roll mov sbb in adc (bad) pop fildll jg fidivr nop sti data16 dec add ljmp pushf adc jecxz,pn in in negl jns cmp stos xor or sub dec shrl daa jg cmc fidivr out fstpl loope ds repnz inc pop inc add stos jg push mov cmp xor and jg sahf lods jge jp or dec push mov mov jg aad ljmp add xlat dec cmp push sti sub cld jne (bad) xor push sub xchg data16 or loopne jg sahf mov mov jo cmp mov pusha test jg lods sti mov mov imul int3 (bad) xchg pop jg call xchg inc inc out clc jg ljmp dec cld push fimull and jg aam add jo push jg int inc clc iret int3 lahf aas mov jne dec in mov add jg sbb push jg cltd mov int lock jg adc push insb jp push dec ljmp mov jp xchg ds divl jo aas xchg hlt sub jne fmul jle int pop pop pop cmc and sbb sbb adc lcall dec mov cmpsb mov cli jg cmp fldt (bad) bnd lret nop mov mov push cmp inc add arpl imul jg call xchg push shr aad jg mov int3 cmpsb imul enter jge (bad) repnz in mov leave (bad) cmp fs outsl mov arpl xor loope jg cwtl les popa mov mov adc jecxz dec loop dec mov subl insl les mov addr16 adc adc ja hlt fisubl cmpsl adc sarl aam negl loope (bad) pop es mov jg pushf fs xor and cmp fild jg xlat pop pusha mov mov nop (bad) leave dec iret enter jl jmp jg,pt test in mov inc and jae in mov cmp sbb sti inc add bound cltd add jge jg mov push insl (bad) int3 jg or sub aas fdivrs stos push in mov lods repz xchg addr16 push shrl lcall mov cmpsb and mov jg adc jbe jmp xor mov jg xor cs ljmp mov jg mov xor mov scas inc dec mov dec push mov dec call jae mov arpl ja (bad) repz pushf mov das aad std add jg xor rorb stos jg mov and jg testl fs dec cmp inc insl jg,pt outsl push rcll push jg movsb pop mov jg scas popa outsl aaa dec cli or xor push mov ret dec lds loop add cmp mov jle rorl jo jg pop ficompl sbb mov test mov push into (bad) sti rcll fist jb mov dec imul arpl jle or repz aas mov inc sti cli inc mov jecxz mov jo daa mov clc jp and add fistl push add (bad) jo or icebp flds aam into adc fistl sahf jg push xchg jno test ja or ret and xor xchg sub jg add add mov sahf clc inc mov ja mov aas (bad) iret adcb mov rclb scas jg add mov sub aaa xchg mov dec sub or (bad) repz add xor and adc jnp push mov mov jae divl gs adc push jg (bad) dec rcr mov stos mov movsb jg jecxz jne mov negl jae push sub jg rcrl sbb outsl sbb xor mov inc cmp jle shll fs mov ret jg inc push leave rcrl lods jo xchg cmpl addr16 jle jg jge fnsetpm(287 ficomp lret out out (bad) jae xchg jg inc mov cld rcrl dec pop test mov mov mov (bad) movsb mov sbb cmc into push in sub mov insb dec dec loopne push push inc push add js mov out jae ljmp popa jg dec push std or cld fidivrl xchg cmc cltd xchg icebp aas movl imul pop dec xchg outsl adc mov push jg cmpsl add push shll pop (bad) sbb lret add imul push out cmpsb inc jne dec repz mov push ret inc popf and pop daa hlt mov add lret pop jg push in xor jb andl sbb or imul add or jg push xor cli rolb mov jno push pop aas sub or sub xlat sub cmp jnp mov inc cmp pop push outsl bound mov adc and add cs dec pop mov jecxz sub (bad) cmp mov loop test call (bad) jg std dec xchg aaa in jg dec adc stos ja jmp (bad) jb outsb dec cmpsl jge les sbb loope and popa idivb je jbe push aas outsl and inc or mov iret dec mov enter pavgb shr rcr cmp add fidiv fistpll mov pop mov xor pusha leave arpl pop jb mov jmp add stos addr16 pushf mov test mov test dec (bad) adc and jg jns mov jb xchg lds mov rorl inc andl jg jge sti fcmovu in pop stc jg iret push nop mov xchg push or mov lcall pop mov andb arpl push popa jg sub xchg and movsl (bad) fsubrl sub mov fistp dec pop inc jg out out or in mov test icebp mov (bad) aas jmp (bad) lock scas inc into pop jg in shll call jg xor (bad) cld jo sbb ret int3 jnp inc xchg aam fs inc xor push les push jg sub aaa (bad) jb or jg dec jae data16 cmpsb aad incb fild imul popf push enter inc adc nop pusha outsl dec jg aam inc or xor ds cmpsb cmp pop popf fcmovu push cmp fs jg and jne jg rcrb sub aam andl pushf hlt jno push pop sbb fsubs fwait fs mov jg xchg mov inc cmp dec outsl popa inc pop sbb fs ret push fsubs dec loopne insl (bad) mov in pop ret test cmp mov jg jo push cs jg fsubl movsl ja cmp loope aas xor xlat ja and mov push and out sub lds sti xchg adc mov or pop and dec aam or nop jp out stos jg pop in stos xchg sahf dec test mov jg clc mov sbb and jno add leave nop pushf mov aas jecxz add ret lret and mov mov sub dec jg and loope test jg sbb push xor push xchg cmp loope mov jg shlb jg sbb shrl pop jecxz imul ficompl mov mov mov (bad) js jne dec outsl push jb insb popa imul add or loopne iret cld (bad) mov loop dec jg int ud1 cmp sbb ja ss push adc sahf mov dec je push fdiv pop (bad) in pop and xchg push jg xchg xchg mov jg test fucomip jg lock and sub xchg push lahf xchg dec mov pop push mov int punpckldq mov mov in cmp push cmp cmp and lock cld and stc aas mov aad xchg fadds jecxz in and jg adc fstps mov push fs js and fwait and or pop dec dec xor cld jg shl push leave mov rclb daa outsl push pop inc inc and jnp clc fnstcw mov cmp push adc sti mov fs out sub dec mov or push cmpsl jbe out xor sub sbb dec stc jecxz in jg lret push jl inc pop (bad) mov or mov sbb jne mov in jg cli and mov nop arpl adc ret lret inc sub (bad) add rorl sar jno repz and inc jg xlat (bad) sbb jbe imul rorb dec xchg pop pop xchg dec stc movsb fstpt add ret scas ja jg push push (bad) arpl fisubr call jg out dec std cld dec jl test lahf jae xchg add out inc push pop jg mov cli mov (bad) dec push sbb popf jg ja dec data16 adc lea mov jg push dec in cmc scas push add xchg and xor jb test push jg rcr popf aaa push jg bound mov xor sbb cs (bad) dec imul les sub jg inc xor mov add (bad) cmp mov call inc clc add hlt adc or sbb test jne ljmp loop mov mov jg cmc pop sahf push cld sub insl inc adc enter or test jg movsl cmpl ss repnz jmp ja insl jno mov (bad) sahf xor into sti negb outsl ds inc and out loopne push inc repnz cld jg xchg adc inc daa bnd sub pop fisttp in pop pop test lods test inc cld (bad) mov cmpsb das push adc je sbb lds inc cmc xchg jle in lahf addr16 dec jne popf jmp loop sahf scas ffree ret mov pop addl mov mov or push dec cwtl ret mov mov cmp adc mov inc fldlg2 pop sahf lret adcl (bad) int ljmp (bad) into xchg dec lds dec dec daa mov xor and imul in sub adc jmp fiaddl mov pop nop mov icebp enter push cmpsb out sarl or loopne xor inc mov push fisubl dec ljmp xchg mov imul pop push cld jle pop sahf in pop jne fidivrl sub mov cmpsb (bad) arpl jg roll mov negl (bad) lods insl mov ja pop imul cmovg pushf push and jg xchg cmp mov icebp bound jg shll xor ss jg xchg mov std mov or pushf in sub mov or insl xor jns pop push sbb test xchg sbb add xchg sti add lods (bad) push (bad) push fsubl js jg xchg add cmp cmpsb sti inc xor push inc imul jne push mov es jg outsl icebp or sub and outsl out cmc jge mov (bad) es cmp les cmp sub xor test lcall pop mov sbb sarb dec jae sbb scas sub ret add into cmp sbb in popf jg and (bad) fwait mov movsb scas ficomp pop and mov pushf insl ret adc cmp scas jg imul push int3 sbb negl mov das cwtl and (bad) (bad) push jg in dec adc mov pop or jg test jecxz stc mov cmp adc arpl jg cmp dec sbb sarb push insl xchg xchg and xchg xchg push mov std sarl adc cmp ficoml jmp lods std cmp mov xor jno cmp jp cmpl sarb jg jb cmc dec push pop dec jg int pop fidiv movsl push pop pushf cs in pop xlat outsl inc cmpsl inc scas dec sub in lret mov rcrl cmp jg mov (bad) int3 into jg sub fdivr sbb push jg push dec (bad) mov dec enter fnstcw pop inc lds xor add in jl jg dec js mov adc sti cs sub movsb and mov xor jg (bad) cmp mul cld cmp push mov rorb sahf inc inc pop aas cmp sbb ja sarl dec pushf lods adc and int3 jg insl mov shrl in mov jae sbb cmp pop mov jg dec jl in nop imul ljmp int movsl sahf into cltd push push jg icebp push test add push adc (bad) cmc mov mov aas jne pop mov jg and pop jg cli adc repnz insl jg jne push mov dec dec aam pop (bad) xor jg fwait jo cmp jno imul and loopne leave loopne push fildl inc and mov inc lret adc push mov or popa cmp dec rcll dec mov jle lock out ljmp jg inc cwtl add mov jg mov mov aas mov mov mov pop lret jg ret mov icebp test or repz sub movsl xor fwait loop test add (bad) adc xor sub mov jmp sbb and ljmp dec lret or and sbb test inc test jg imul dec jg loope jno dec sub jg mov rcrl jg stos (bad) out jp sbb cmp test push imul mov in stos mov int lret pop lds jecxz sbb jbe add cli das dec js insb mov pop fcoms mulb pop jg xchg mov repz lahf xchg mov xor or loopne mov xorl loop icebp dec push insb fs fildl jg add imul repnz mov or mov loopne mov adc je sbb outsl sub dec xor jp push jb pop dec inc les sti lret ret in inc (bad) hlt jg popf sub mov cmp sub cld fisttpll cmp and das iret jl xor mov int pop push xchg mov jg inc test push out sub sbb jecxz xlat mov aam mov or pop mov stos add pop xchg jg outsb data16 mov ffreep jg test stc out inc cltd jg aam pop xor xor jg push sbb mov jns cmp xchg cltd decb andb inc sbb xor jg mov inc scas and jg loopne roll adcb ret adc in daa rorb jg ret cmpsl roll mov push je cltd and adc mov aam pop pop xchg push jg adc outsb loopew test out push jg xchg js xchg inc fiadd mov lods (bad) jg jae mov push pop lods sub movsl cmpsl jg fs loope jp sti mov sbb pop push push pusha jno inc adc inc imul and (bad) imul stos mov mov inc ret push scas icebp mov imul clc pop and popa pop loope loopne lods mov in test pop mov sbb idivb mov push fidivrl jg mov inc adcl repnz out in jg mov movl adc js xor xor out xchg jg adc cmpb (bad) sbb and xchg insb cmp mov into jg in loop fmull add enter cmp (bad) scas pop jg jnp leave fsubrs inc movsb mov (bad) and mov inc mov sbb ljmp push nop sbb cltd aas int mov cmpsl jnp shlb jg call scas mov pop sbb fwait jg sbb test sub iret and movsb push (bad) jg and cmpsl pop mov jp push xchg push push test cmp lea addr16 clc add jbe test cmp rcll push stos loopne push pop fldpi sahf dec test lods add int3 rcr mov xor lods pop gs sub lret data16 fiadd divl xlat fwait or inc add jg cs dec test lcall or push dec mov mov mov pop cld (bad) pushl push or and xchg aam mov shlb mov jg xor push sub push out idivb add xchg stos enter sbb jne mov mov iret push cs jg push jmp pop xchg pop imul shrb jle pop sbb push mov outsl pushf or mov les popf push fs mov daa dec iret insb addl mov sub and jg lcall jg lds pop sub sbb mov or mov mov xchg js rep (bad) jg pop pushf and lds xlat mov stos mov sbb outsl rcr cmpsb pop push imul mov mov mov daa and adc inc mov inc dec out xchg jmp sbb aam lds sub ret jg jne xchg int3 mov xchg jle push loopne dec push jmp cmpsl repz das lahf jg inc add fs mov pop arpl insl in jg inc fcoml mov scas mov outsl shr jno jg (bad) sbb jg add hlt jg inc and call pop xlat ds fdivrp jns cltd out adc pop add fstpt jg sub xor cmp pushf stos sbb nop mov mov (bad) imul jmp clc sub cmpl mov adc in (bad) mov loop xor fistpll std insb mov jg repz outsl adc xchg in or mov aas cmpsl add sub cmpsb sub push xchg adc add and in inc jg out push aad shl icebp jg add sub jns das mov push add mov ljmp lds adc mov scas cld pop jg fucomip mov push cwtl sti dec push sbb call push in cld mov pop jle (bad) outsl mov fdivrs imull mov push push ljmp pop fildl adc in dec lock push add das jg inc sahf pusha dec stos and (bad) outsl pop jg and adc icebp pusha jg lea pop jg pop or sti pop out into addr16 sbb jg xor mov dec jg stos fadd outsl or mov icebp mov jbe mov mov pop out push mov and jg loope mov aas inc aad jmp test arpl dec dec cs out mov (bad) pop inc push jmp stc mov lds jae pop add mov gs jg lods (bad) or test shl mov adc aaa jg sbb fwait pop rcll cs xchg into nop push push mov fucom shl push xchg or adc ds adc xchg push inc or mov outsl mov jno sub jnp rorb mov pusha xor xchg in (bad) sbb inc pop jg andl xchg notl sbb inc ret mov outsl (bad) je call and mov mov xchg add stos js je mov dec sbb push inc das jg inc arpl subb stos pusha cld xor jg jl cltd push ret js lock rorl cmp dec fnstcw scas jg xchg lods jg sbb cmp mov enter add or cltd lea ss test cmp push fdivrl xor mov jg xchg dec mov test adc ret jg jecxz out int ss cmp addr16 push mov mov xor outsl stos jmp jg push pop dec fprem1 or stc inc mov sbb scas movsb sti mov sbbb dec mov cwtl or push inc test xchg sub xchg aad dec shrl jg into int3 adc adc cmp fstps daa lahf icebp jmp jbe jg in std jp call jg pop sub mov mov jg fwait (bad) pop or or lock mov rclb sbb popf sub fwait stos push scas int3 push (bad) cmp mov jg jp or fisub inc jg loop pop mov aad push pop (bad) cld jg jbe stos add pop cmpsb mov cmp test inc add cmp sbb cmp or addr16 loope jmp xchg jbe pop (bad) jp daa imul or pop call insb xchg jns inc cmp nop jle push add push or xchg jg ljmp sti pop push add lret jg out cld inc fsubrs mov dec iret jg cltd adc arpl scas das add pop test or outsb push std pop dec and fidivrl push xchg mov dec jnp jg scas cmp (bad) sti (bad) xor xor jne mov adc outsl inc push int cmpsl xor xchg sbb neg dec xlat outsl xchg fld gs movsb jg cmp jg cmpsb shr orl out arpl insl push loopne jl cmpsb jg scas sub xor push (bad) xchg cmp mov pop aas bnd mov out and mul cmp fs fwait jg pushf leave aam mov jg sbb and leave xchg out sbb jne insl js xchg out and and insb and add sub fwait inc js jg pop mov testb jg push mov push and in cmp jae add pop jg je mov popf jg shlb mov add ror loopne mov ss jecxz rorl xchg and push mov mov or jg push xchg cmp ror jb push pop sbb lods addr16 pop jg popl push mov ljmp add sahf adc addr16 ljmp jne jb (bad) dec xor cmpsl es jge shr sti mov pop fnstsw jbe add xchg stos pop lock mov ljmp outsb int3 mov outsl leave add xchg mov lahf cmp jg inc pop xchg xchg test jbe jne and fbld sub call sbb sbb dec out lret inc rol (bad) ja ret dec or cmc mov fwait inc ja and push mov push xchg push sahf jmp push inc inc loop or and imul and inc dec sub xchg push pop and mov lret mov addr16 jg stos sarb lods jle cmp insb push subb pusha mov popa jbe push in cwtl sarl pop lock adc pop ret mov outsl cld jbe std jg cmpsb mov push and dec stos (bad) xchg xchg (bad) cmp into movsl dec jne add pushf sbb push inc xor fwait and and movd aad push stos aas or mov xchg pop push add jmp xor (bad) cld jecxz,pt pop orl out xlat lds lock jbe imul cmp jg sub outsb std mov sub aad pop test jb jo cmp scas jg xchg inc push int jg test push roll mov ja push mov adc jg mov cli pop notl jecxz sbb inc daa push jmp pop add inc test sarl lock or pop jae jg lret in and sub jg dec sahf addb jg testl dec jg pop or xor cltd das pushf in xchg insl sarl aam fcmovne cmp popf cld and arpl sbb sbb into jl rcll pop sub push jg inc rclb das mov pop sub test outsb inc push dec pop lret dec inc cmp sbb push mov aas dec pop adc lods aad lds xor and jg push js aaa in push jno mov add insl or xchg push arpl nop je cmc adc daa mov dec insb sarb jmp xchg mov shll ljmp ficompl cmp (bad) sarb mov ret js push mov mov xchg jge cmpsl adc aaa ret aas jp addr16 push or lods outsb xor mov int3 in iret xchg scas cmc mov jmp ret mov aas fdivp or inc nop outsl xchg insb ret sarl lea pusha push xor hlt out (bad) addsubps inc cmc cmpsb mov rcrb sbb jg clc jmp mov out fildll inc adc inc in sbb lcall inc adc aam mov jg outsb sbb and mov jmp xchg mov test fdivrp pop dec loope mov clc outsl pop mov push scas call ljmp cmc in sbb dec ret sti push pop adc rclb jl (bad) pop mov mov repnz inc jg pop jg mov icebp insb notb pop jg sbb dec std lods addr16 clc mov in das jg or lods jb and pop jg xchg and fist out popa stos rorb mov mov xchg (bad) jg push imul push arpl mov sub jg adc xchg adc ja sub sub sahf addr16 lock dec out inc jge rol and xlat mov bound jg test lcall xor push sarb mov mov popf or push mov jl sbb fdivr (bad) cltd ds (bad) lock inc ljmp jle mov (bad) fldenv out cwtl (bad) mov roll fwait loope jmp pop mov rcrb push inc or aad gs sub mov and js jg adc or lahf push mov cli into jnp jg (bad) aaa mov jg inc dec ffree mov jo sub adc dec add dec and add dec xlat push (bad) (bad) mov mov dec addr16 cltd popf cwtl loopne fisttpll loop aas jae pop add xchg push dec dec mov xchg add jg cmp sbb call sub bound ja jae loop xlat fidivr les jne stc xchg fistl adc lret div cs hlt xchg mov xor lock push push mov not or (bad) and daa jg dec push pop fs nop jae pop push loop xchg fiaddl arpl mov xchg push or inc or xchg push jmp jg jns xor hlt inc add popf (bad) je sub sbb mov cld mov dec sub sub ja push cmp je jg push pop repnz inc fidivr mov xchg stos pusha mov dec and hlt aas jmp jno arpl lea sub pushf cmovp xorl ss xor jg jmp call mov or test sub add inc pop (bad) jle (bad) (bad) xchg pop je xor movsb inc adc adc or cmp cs or ret outsl adc mov enter mov inc add dec (bad) mov nop ljmp mov imul xor jp or jae fidivrl pushf mov icebp call pop add sbb jbe mov adc fcomp scas ja xchg insb mov mov xchg loopne out out ret jge call xor shr imul mov mov pop inc sbb lods sub jg xor sbb jg (bad) mov sti popa sub inc dec test push and cli push inc or jle push or inc jl mov mov cmp jg iret hlt pop cmpl cmp stc mov jg xchg cmp iret push pop cmp test movsl jg je mov jg push mov (bad) push mov loope or (bad) repz add lods jg inc mov sarb out xchg cmp or out pop fwait pop sbb fdivr jnp popf mov ret and and shll stos jg sub adc jg pop int3 test fcoms push dec stc scas dec push jg out lods daa xchg add jg lret and or cmc jg dec push (bad) xor inc add fwait notb jg and mov out push loope fistpll inc and aad dec lret das hlt int cmp loop inc lahf pop imul push lahf cmc mov dec cmp aas das rclb lret mov add testl fisubr adc jle pushf sbb xchg test outsb cmp dec cmp mov mull push je inc sti outsl (bad) xor ja dec test adc jg cmp adc fwait ret jg xchg sub push jg fisttpl js cmp jnp xor mov xlat or fistp jns add jg fwait xchg mov jmp in jg nop fild push and mov fcomi movsl cmp adc sbb mov xchg jno inc sub sub push xor push mov inc inc decb test adc test (bad) mov ror fwait jg jle lods add mov and mov push arpl ret and cwtl fucomi pop inc push movsl or jge cmp inc jg mov or pop or loopne cvtpi2ps insb addl push xchg dec cmp cltd cmp jg xlat pop movsl dec mov aas sub mov daa and xor or push lds mov cld or lcall jb xchg js ficom mov negb adc loopne dec lods push enter xchg pop dec jg imull clc scas cld pop ds adc xorl insl pusha cmc leave mov aas out outsl dec sbb and lods jg jecxz sub xlat jg pushf and mov test adc icebp sub inc in stos in int3 xchg add push outsb test stc ja addr16 adc (bad) adc mov sbb jo ret jg or sbb inc (bad) add insb push mov jp inc cmp dec cwtl aad jg push xchg jbe pop xchg sti stc or and out adc imul and call xchg nop in jg (bad) data16 cmp lods sti ja loope outsl xchg push push pop gs dec or sub mov and hlt dec inc (bad) and pusha and lret pop mov and jg loop (bad) jo xchg movsl jg sub sbb pop pop adc std je lcall sub call fidivr (bad) push lret push adc mov inc jg add outsl orl jmp xor cltd jg (bad) mov sarb repnz sbb push repz test xor pop add mov xor gs jg stos jbe inc (bad) jg test lods jno mov and insb push arpl mov push repnz hlt in lret jne out ret and inc (bad) push out test cmpl cmp imul jg subl int add cmp popf insl mov (bad) pop mov jmp push popa jg (bad) adc dec imul or inc lea rcll sahf sbbl jg rcl mov dec mov inc (bad) xrelease sti imul pop adc push jg inc into mov stos jmp clc pop mov and xor jb cmpsl jg mov xorl mov in dec mov clc outsl pop arpl xchg jg rorb call and enter xor dec outsb int fnstsw insb dec mov push cmp mov fidivrl sub dec popa push dec popf mov mov push arpl jl push out adc pop cmp mov pop or sub cli mov lea ljmp jg push scas cmp insl neg loopne roll push push xor jae adc int outsl xchg sbb push inc into imul dec dec jno bound loope fstpt ja sub iret push jne int mov je pop ja cmp jg mov or jg mov fwait jg push repz int3 mov in mov jg sar fwait pop xor inc pop mov in pop or jg data16 repnz cmp jg loope inc cltd jg and (bad) or jae stos dec jo mov out jg cmpsl pusha sti dec pop (bad) fwait incb add or pop (bad) stos and les push dec daa inc outsb jg cld mov mov jbe push push aam push iret stos pop xor test jae mov jb cs push aas inc addr16 xchg jg movsl sub add js iret dec pop gs mov mov ja mov js sub out rcrb (bad) mov stos inc and dec pop push mov (bad) movsb fisub insl cmp (bad) dec (bad) (bad) sub pop jg popf sub out js sbb jg mov mov test aam fs mov mov in and mov ds in rorl imul inc jmp lret insb push add lods add mov add push mov cltd sub dec sbb dec mov out dec add addr16 daa loop (bad) nop repz jp jg sub jg sub mov inc jl mov mov das push mov and inc push arpl jo jg xchg xchg in push or movsl pop stc test mov lea call loopne aas out mov das jg iret sub (bad) pop fwait jg pop pavgw lds imul dec push xchg mov leave orl pop popf test or fwait popa mov inc mov mov aaa inc dec mov add jecxz mov repnz mov cltd adc dec xor mov daa adc jg clc mov idivb movsl jne insb lahf in cmc ret jg lods adc lock cltd (bad) lea (bad) dec jg cmp mov xor lea cmp inc in orl cmpsb daa jo ja out push pop stos sbb addr16 jg leave popf insb xlat xor sub inc lret std jg aam xchg sub in jge fistpl loop jg stos loope mov mov outsl (bad) mov (bad) jae test jo ret arpl ja aam push pop cmpsb (bad) or fildl or stos xor pusha insb push mov (bad) fcomp lret dec push insb mov out outsl adc inc inc test stos sti adc or push dec add and inc lods fdivrs xchg dec pop or test cmp lock jg xor data16 mov mov frstor cmp jge cltd mov cld das dec sahf add outsl jg test mov sarb mov push fcoms subl in xchg roll enter fsubl sahf nop xor lods scas fs vsqrtps aaa adc dec loop loope jg insb test scas imul outsl lcall jg arpl outsb out xchg pushf mov adc pop jg and test lcall jg jl mov jg fmuls das fcmovb mul in jg cwtl jno in stos add rcll je mov xor pop jge pop aam idivl enter (bad) arpl jge pop xor inc movsb lahf fistpll loop jnp adc mov lea icebp test loope xor inc in scas jg in clc sbb fisub dec cmp imul leave xorl mov dec test sub fwait sbb ret es mov jl aam inc pop add and les and fwait mov pushl test push dec (bad) sub mov push out jnp notl test or xchg lret movsb inc xor mov pop jb paddq jbe mov push loope jg cmp fbld das mov mov dec imul add add jg xchg aaa inc adc cmp jg ret inc push lods (bad) and jge dec movsl and js clc jns jg jb mov outsl pop daa xor aas std and inc adc jg mov push jne outsl lcall hlt frstor negb mov adc cmp inc test out adc ret mov std lss add sub jmp xor push jg int3 cmp inc les jnp out mov jg scas adc rorl movsb xlat fcom lahf push sti push popa stos xchg sub test std jg pop data16 mov jno jg mov jb jg stc xchg mov in daa push cmpsb dec add mov sbb add rcl mov out fs outsl mov mov add adc pop push movsb subl aad (bad) cmp xchg jg sbb imul xchg aam imull (bad) icebp or mov pusha add aas je adc jg in pop movsl pop scas repnz mov cmp imul imul scas in enter clc jg (bad) cmp pop mov add xor pop and sbb (bad) pop leave mov bnd lahf stos loop mov xor cmp dec frstor xchg pusha mov mov adc cmpsb mov push jo mov nop mov mov (bad) dec js mov aas or cmp adc insl fs xchg sbb push lods adc int3 ficomp mov arpl lret hlt xchg arpl jg xchg dec mov jg and test mov aad inc (bad) push ljmp pop push pop fwait and pushf jg mov pop push jg movsl mov and sub pop and mov add js rorb scas je decb popa mov ror dec js dec adc and dec cmp push sbb sbb gs jne (bad) and jg push repz pop pop sti add jle outsb mov in or jg add xchg mov inc push movswl ds mov imul sub or push les iret or jne aas std lcall push movsl xlat push lds imul cwtl cmp adc movb xor les jg xchg cmc je cmpsl mov rcrl mov incb sbb (bad) cmp jg ja repz and jg lret add inc mov out sti movsb in mov xor mov push xchg jl jmp aas lcall mov or pop fwait dec test in jg push xor cmpsb out mov cwtl pop inc icebp leave dec (bad) dec sbb sub jno mov das stos xor movsb sahf (bad) or addl sub clc sbb mov or insl mov jg sub mov (bad) sti xor (bad) dec mov aaa xor jg push stos pusha dec dec int3 jmp fbstp push jg adc sub (bad) jae mov and add push pop aas or jg incb imul addr16 andb ja push xchg fistpll test inc sub sarb movsl mul std (bad) in and xchg andl dec aas lret jg jle sbb mov in sub (bad) js mov mov das mov inc jne popa adc pop pop sub jg pop xchg cwtl or inc push dec movsb ds xor sti fwait inc cmc xchg ja pop loope mov incb inc adc pop addr16 pop jg mov popf fdivrs push lock outsl adc or add jb (bad) ror adc rcr cmpb cmp inc push xor test jg out mov lock imull lcall mov xchg cli add lea std or (bad) (bad) popf pop lret lahf (bad) push adc mov dec pop mov test lret pop or (bad) sti mov (bad) or daa mov jg inc xor repz iret mov cmc xchg xor dec sub (bad) sti dec mov outsl pop cmp dec jg or mov (bad) jg jae leave loopne inc repz popa inc lods jg mov jge les jg jle xchg fdivr xor push outsl push push cmp push pop imul lock xchg sub jo outsl sbb jg and pop sbb xor stos inc dec jae xor out jg add lahf das and shlb loop push mov add xchg push jg lret or jg das out in jno fnstcw mov les (bad) jg in cmpsl jmp mov adc not sub jg dec mov (bad) loop pop mov pop xor (bad) (bad) mov (bad) jb mov and xchg dec inc mov fabs pop xchg imulb sbb (bad) repnz mov or es arpl xchg mov das mov cmp js adc mov pop jg jecxz es cmp mov rorl cmp adc push jne and sahf ljmp and mov jbe sub lods mov outsl movl cli ds xchg cmp sti imul xchg jnp jo in int xchg xchg jg cmc dec jb mov jg (bad) call jg pusha mov idivl push pop gs rorb inc repnz negb adc out cmp mov sub clc mulb incl stc jg lock sub sub xchg iret out faddp mov out loope dec mov pop mov pop aas sbb jbe fcomps mov popa mov addb xchg lea dec or lds cmp mov test xchg mov movsl xchg jg and (bad) and xchg test pusha arpl test or movsb push jo or mov repnz cmp dec test add call xchg mov sbb iret jg stos or (bad) fdivs bound dec pop mov (bad) and xchg add test push fimul mov push pop mulb push inc sub mov addl paddsb fistp mov jg loope fsubrl test fidivrl call std outsl js jg lret fstpt movsl jo jecxz and inc jle jmp push fisubrl outsl pop (bad) jno mov in jne les xchg arpl cmp js mov rorb pop inc xlat push test xor fcomps jg push adc das mov lcall aaa xchg mov mov mov je mov mov adc cmpsb xchg sahf push aaa push icebp lret fbstp jg xor fwait push lods arpl inc cltd xor add sbb lea adc mov imul data16 insl addr16 rclb jmp movsl clc mov dec sarb lea pop pop jg xchg xchg add mov sub pop jmp pop sbb in mov test inc (bad) sub mov push mov jg dec or jg int mov xor test ret pushf ficom or mov lcall test ja push jg out push adc repz jg lea jmp xor nop out xlat dec sbbb mov pop inc mov repz je adc (bad) inc sub sbb add out fcmovbe das jg push and aas sbb sbb leave xor aaa ds sub imul xor and cwtl pop cli adc (bad) leave cmp jg sub loope data16 push mov sub jmp or mov fsubrs inc jo push shll lcall jmp fxch jg cmpsb outsl out ljmp mov out test jg dec fs or ret jg je and jg cmp cs push mov sub mov adc loopne (bad) insb ficomp lods arpl sar jecxz pop mov mov jl popa dec add sarb lret push insl mov stos mov cs and test pusha (bad) arpl sbb ja mov cmp pop and inc in jg out fcmovnb sahf cltd mulb sbb sub cmp call aas stos mov aas dec sub xchg daa fs xor ss or jg mov subl movsl addr16 jecxz inc inc (bad) jg loope inc add lock jg lahf std (bad) pop inc nop push fnstcw je jmpw ret push not cmovnp cmpsb call xor push xor roll pop mov adc pop mov mov adc sub ret rcll jg in add xor jecxz stos mov push pop adc jl fdivl dec sbbl lcall cmp sub imul je mov and gs dec imul mov fcmove imul jg aam andb loop add pop adc cmc dec pop aad and jno in pop out scas hlt sub insb popf jo popa ds push and outsl stc jle,pn xor cmp int push jg test push pushf das idivb xchg ljmp xor cltd push stos cmpl dec sbb mov or scas cld lcall cmp cmp jp cs (bad) ret into pop mov out in sti or pushf faddl push daa iret push cmpsl push push mov sti lahf dec xor bound cmp insl or sbb bound pop xchg jno cwtl cld mov cmp shlb ss inc jns xchg loope cmp mov lret jo jg push dec and cmpsl mov jae icebp ret mov mov fistp dec in xchg dec jno out adc fmuls sarb pusha push aas dec jg loope and push sub rolb leave mov xchg dec xlat or (bad) pop add jg xor sbb jg jmp push sub inc jg inc lods lea sbb mov mov pop push bound jg inc jmp inc aas cs mov in inc mov push cmp mov xchg pop mov pop rcr push aaa push mov scas or call mov out push jg inc push insl dec outsb cmpsb ret jg popa pop sbb mov hlt enter adc pop (bad) movsb xor nop mov xchg jg stos cli cmc cmp pop lcall mov aaa shrl cmpb inc clc sub imul jl mov pop loop loopne jg hlt lret add xchg jg push les jg cmp ror xor push repnz mov lahf jg cmc cld dec sub (bad) idivl or test fildll std xchg mov mov (bad) xor bound lods out gs rol js add adc js nop push push cmp mov jg or sarb addr16 adc and jno jecxz pop mov and cmp fidivr xchg (bad) js pop mov scas jbe pusha fdivrs mov test jl in addb dec mov sarl jecxz clc xchg and dec (bad) (bad) out xchg mov sahf or stos bound unpcklps in mov mov push cmp addr16 jg cmpsb roll pop mov fldl jp es adc (bad) sbb repz xlat call or mov adc outsl jg add sti loope mov and xchg xchg rep mov jp mov mov jo dec ds jg div xor mov loopne test addr16 dec and lock add pop lcall aas idivb pop scas push jg pop push daa loopne ficomp jg shrb into jg mov lret std push decl cmp mov mov fs jg (bad) push (bad) mov outsb sub call or jg xlat in cmp lea pop push push mov leave decb mov negb lock xor ret sar or mov pusha pusha mov movl pushf mov call sti fadd push test inc inc out mov repnz maxps sbb xchg sbb outsb iret popa out scas int3 cmp imul imul into dec push mov ja dec insb je stc or xchg pop (bad) lcall rcrb push in dec mov pop imul nop mov movsb or inc dec mov test out add sub mov jp daa into mov xor sbb clc daa push stc idiv pop sbb out in mov fwait mov dec mov imul fs je pushf movsbl jmp rcr push btr xchg mov bts push xor test push rol pusha mov clc inc xchg movsbw mov not dec ror bts mov rol (bad) repnz bsr mov ror setne cmc call sbb test fdecstp lds sub mov in test (bad) lds mov xor imul push mov jg ret sub clc test adc jno push lea aad (bad) lahf mov loop jbe mov sub (bad) fwait les (bad) inc jl and cmp push xchg pushf lea (bad) mov or repnz mov and repnz inc ret lods pop mov adc push pop xor les mov mov add aas mov out loop add push sahf or rorb icebp xchg mov imulb dec into cltd cmpsl lcall or insl lock daa dec ret mov orl xchg inc sub and test mov xchg sbb insl push aam sbb mov or add cmp dec ds andl rolb adc mov testb repnz mov xlat lock js mov adc lret mov outsb out sub (bad) sub dec fnstsw add mov int3 xor ret ja lock scas xor mov push fidivrl add cwtl dec add dec cli jp jp imul (bad) fwait ret mov pop bnd dec lret lcall icebp int3 and adc jecxz inc pusha sub aam jae fs pop inc daa jg lock aaa and sub jbe jne sub fisubl add jne dec mov (bad) fs ret jne pop push (bad) push xchg insl popf gs (bad) xor pop mov movsb jl out (bad) xor pop inc daa popa pusha inc mov std dec xchg push decb (bad) sahf or adc mov repz sahf ja pop addr16 cwtl inc (bad) js push push nop jno cmp popa shlb pop mov rcll inc cmpsb xor repnz test adc or loopne in adc test dec pop outsl bound pop mov in fwait inc shlb cmp fisttpll ds test lret pop pop insl js ja das sti lret insb fwait sarb jl push enter jg pop in adc call inc stos in inc xchg push mov ja mov cwtl aad push stos pop ljmp cwtl jbe sbb sub js mov in (bad) jae jp pop imul insl sbb pop pop xchg pop xorl in cmp push lock jg add jg lock lcall push mov cmc push add mov lock dec xchg orb push jns fcoms ret push mov out je mov rcll mov in sahf lret sbb mov mov cmp loopne mov je pop stos xor out sub mov insb clc orb or mov jne pop mov adc icebp add cmp rcrl movsl mov pop mov push jns push push insl push jge and mov mull jnp (bad) and pop mov fisttpll es fcompl fdiv data16 (bad) sub stos es sbb push cmp xchg mov add jmp fsubp outsl xchg mov out icebp push rorl out mov inc xchg rorl lods lcall (bad) repnz mov mov and rcll inc into xlat mov lock xchg scas push iret push cmp xchg dec les imul pop mov pop sbb out dec mov mov shrl movsl in jg sbbl out pop arpl shrl xchg call fs inc aad lea lcall into movsl cmp push sahf fstl and cltd lea orl dec mov loope je pop (bad) stc or push mov lods cli stc shl leave push mov addr16 pop aaa nop mov add rcll ficomp in pop push popa cld nop add inc sbb cwtl jmp nop jecxz pop or addr16 inc inc pop outsl push mov pushf adc imul les in push push add imul in mov pop xchg (bad) jae add pop (bad) pop sub lock sbb jg pop test push sub iret int3 add ds xor stc in aad lea shr flds xor sub add mov push mov ficomp mov ja xchg pop cmpsb jo sbb mov bound jl aas enter push shr stos sarb lods pop push test (bad) movsb pop outsb repnz or and add jmp xchg inc inc mov xor xor adc mov aad cmp bound or sub out push dec arpl cmp arpl int3 xchg test or call mov add inc xlat bound mov sub xor push leave xor dec jmp sti push (bad) lret fisttp in imul mov icebp mov out cmp fimull sbb cmpsl movsl xchg jae mov hlt jbe call ret (bad) and xchg cmp lods hlt cs test and popa mov push jg mov enter mov adc push mov pusha mov pushl ret (bad) lret mov inc scas pop cld loop mov add mov aas mov xor outsb cwtl out or jno dec (bad) jge xlat and aam bound aaa inc xchg ret jp rcrl and insl sub hlt push movsb jns iret xor mov push ret mov xchg fs cmp cmp xor push cmp xor repnz mov nop jl bound jge mov xor ljmp movsl inc and lods jp and pop mov mov mov repnz push popf jb popa dec dec push fstl orl mov sahf and mov push and mov xchg lods sti out imul add dec outsl arpl inc jb add adc add (bad) mov add lcall sub jo or into mov es or mov dec in movsb and insl pop fs test push adc pop adc rcll inc fimul loope push jno sub adc aaa lret std xchg push sbb or xor jb dec jnp inc inc cmpsl jmp pusha movl mov lea jmp lea ja pusha jmp push pushl pushf movl jmp pushf mov pushf movl push mov push pushf lea jmp pushl lea ja dec setge add rol xor add sbb mov push cmp jmp jmp xchg jno lea inc add mov aad lods cmpsb cmp or dec lret pop ror add (bad) mov sub test (bad) xchg imul jb popa and aam lret inc add or dec pop sbb push (bad) add loopne icebp add test pop popf mov adc dec (bad) pushf outsl in nop sub cmp pmullw sub cmp daa ficoml icebp nop add hlt inc pop leave dec nop in (bad) leave cmp xlat mov mov xor xchg sbb (bad) bound cmp inc mov mov iret ss dec scas mov fs xor mov push in incl cmp stc imul movsb dec into in jg sbb jg jmp clc push or and loopne (bad) mov inc (bad) mov pop ret sarb insl mov or imul stos test lahf jae sub mov cmp jno inc outsl aad lods mov shlb cmp fs dec dec adc push mov or jo sub test aaa xlat pop push lahf fnsave mov repz push imul push mov cltd add rcl insb enter xchg jo (bad) aam push lret test add xor inc repz push and fwait outsb std and dec sub jb in shlb lods or icebp push inc mov xor inc mov scas jnp pop addr16 fdivr dec f2xm1 leave add (bad) lret cli scas fwait add add (bad) sbb ret sbb arpl pop lahf xchg inc xor dec divl mov xchg push divl and mov std negb push jbe add inc imull ret pop stos sub ret push and mov scas outsl cmp movsl adc sahf jmp mov add repnz cmpl (bad) or jbe stos dec fidivr mov or xlat aas int stos pop mov outsl test cmovbe jnp stc fs xchg adcl mov test add fisubrl mov jmp jmp mov lea jae stc jg clc xor call mov movl jmp stos pushf mov lea jmp pushf jmp outsl xor dec in cmc mov loope mov xchg xor mov push and jmp mov bound out inc push pop jnp das mov mov out or rcl lea ljmp mov push adcl int gs pusha mov iret aaa negb and cmc int lods xchg (bad) sbb divl mov int3 xchg fisttpll xor jmp ret test shll lret mov ja push xchg bound js cmp nop push add lea je pushf test bts or add cmp sub bsf shr sbb xadd clc mov rcl pushf rol add shld add lea jmp push sahf cmp push pusha imul sub mov pop dec mov lcall xor inc xchg mov inc cs fsubl nop push xor or stc jno inc add stos pushf xchg cmp cwtl mov (bad) fimul fbstp dec push insl cmpsb cltd loop adc push insl inc pop jbe pop xchg mov xchg cmp jp and add push cmpsl enter and xlat call repnz dec rcr jbe (bad) mov xor dec pop cmpsb stos mov sbb ja fs je push setg mov movsbl pushf bswap lea pusha mov mov jmp pushf mov jmp push pusha pusha movl pushf call pop push jmp or imul addr16 les bound inc dec lahf push ljmp int3 mov data16 sbbl inc dec add jbe (bad) pop xchg xor inc xchg test pop jle push call fwait pusha and aas push loope inc inc pop pop xchg mov into out xchg add and add aaa push fld mov addl pop scas xchg jecxz mov pop mov movsb cmp loopne iret push jne sbb and jl fsubrl pushf push push pushl movl jmp arpl in xchg jae bound gs xchg loopne adc addl cmpsl push xor jl pushf add in gs sbb pop sbb jo cltd arpl add mov inc in cmpsb xchg popa out inc cmp out pusha repz jg jle lret mov mov jg cs xlat cli dec pop jg jge push addr16 jg mov loop xor scas out mov sbb jg cmp push mov (bad) jg or cmp jno or mov in fdivrl mov test push pop idivb addr16 rclb adc repnz test sub dec push mov xor jg imul test stc mov sub or mov repnz mov pop jbe jge push jg mov push xor jb outsl inc mov jg xor xor ret and loope xchg outsl ret testb push cmp pop or adc jb xor into pop aas leave mov mov cmp lods push push adc jnp mov arpl je push jbe cmpsb cmc jnp cli in jns mov aaa sarl clc sbb fsts aas mov xchg jne cmovns dec jne int and mov mov sub es repz ljmp pop dec or dec cmp pop daa js cmp cmp (bad) lss repnz mov xor and mov jecxz cmp mov cmp mov out les fs xor cmp je or ja push ljmp jl pop push jg loope,pn jecxz push dec movsl and xchg jp stos dec outsl test mov jecxz xchg loop repz lock adc jp in ljmp mov xchg sbb xor and pop jge fwait dec jmp js stos adc cmp pop roll (bad) jbe loopne scas mov cmpsb xchg stc in call pop pop dec dec pop test cmp inc (bad) (bad) jl js jne jae jno outsb imul pop dec in cmp outsb arpl pusha insl pop sbb pop outsb pop pop sbb push insl push sbb outsb push push sbb dec insl dec sbb outsb dec dec sbb inc insl inc sbb outsb inc inc sbb jge jle sbb js jne jae jo push sbb push insl dec sbb jp divb push sbb dec insl inc sbb inc ja dec outsb je pushf inc insl imul negb dec pop jle or jbe insl dec sbb enter repnz jbe insl pusha pop cmpsl cs mov jae jns out add jne cmp xchg daa adc mov in insl push jl loope insl mov test jb or arpl div jb jmp arpl mov jecxz mov es sar cmp insl popa pop (bad) (bad) sahf xor out test jns aaa cmp push mov cmp arpl into scas ret jae dec sub iret cmp jl cmp mov cmp cmp out imul xor cmp movsb in hlt das data16 xor mov ss movsb jo sahf cmc cmp cmp in add xchg jl xor bound aam mov push data16 ja add pop loop sub ljmp (bad) xor sub fsubrs ja sbb pop mov enter pop (bad) mov addr16 scas je adc dec mov (bad) nop popf in sub (bad) decl and arpl sbb es pop andl gs sti popf dec ja loopne imul and xchg lcall cs jge and sub clc jnp sub dec test sub add mov and ja mov (bad) jmp out cmc in pop sbb pop adc xor scas mov xor mov or in data16 adc and fadds out and lods icebp cld js jmp pop pop (bad) enter push addr16 jb clc imul out fnstenv ja testb iret push outsb into imul mov fs clc call js das loop fldenv cmpsb jl insl jecxz xchg out cmpsb gs stos lret xor jbe stos out test push or mov cmp fnstenv sbb pop fwait ret scas sbb and (bad) adc stos jl jns stos cmp es push jecxz enter mov cs lea shr pop inc push aad ja cmpsl and jge in daa call ds stc imul imulb cmp lea fs enter lods push js or dec stc fsubl pop dec ljmp fidivr ss loop mov jge fldt push stc jb cld jge imul ss bnd ss bnd sbb js fldt jns stos jge test pusha sbb cli ja arpl sbb push int3 std jae pop loop pop sbb insb ja fldt outsb xor pop pop xor int3 xchg push push lret bnd jno mov or jnp (bad) repnz xchg dec idivb cs (bad) mov pop xor movsb dec jns fs stc xor (bad) in hlt xor in xor mov shrb cs aam fist test repnz sub cli loopne pop es jecxz lock in out add cmp (bad) pop push repz jo cmpsl out das je gs inc call mov stc movsl xlat jo jae and lret bt cmc push hlt outsl pop cli sbb cmpsl loopne jo popa aad fidivl inc xchg push mov mov and mov data16 xchg pop call sbb rcrb jnp,pn (bad) push int insl cmpsb inc shlb cld int imul inc daa sbb movsb cmp sub cmp int imul daa or sbb cmp test adc icebp dec imul adc or jge std aas sti cmp and int pop cmp pop ljmp jle insb scas sub mov stos jnp cs xchg jns mov es and push insl jne outsb push gs cmpsb je cmp aam jle in (bad) inc ss hlt arpl (bad) leave jno mov jns push inc stos imul sub fwait jg inc pop test gs jp daa bound push and jge sub sub cld jno jae aad fidiv cld and hlt jp in jae in es pop inc je das arpl add jl imul pop or mov lds lods jb cmp leave jb mov jnp es sbb mov and mov rclb adc repnz sub imul sti mov jo and into mov push cmp insl mov vpunpckhwd jp inc divb es aad and in int fidiv out lock cld or imulb sar cmp stos jp push gs jnp mov dec in sbb je pop out pusha daa dec dec in das imul int3 and and hlt fs jnp push es jle adc (bad) jmp push loope push fsubl jmp xor dec push (bad) dec mov aam (bad) daa pusha mov out push pop push pop or mov xor cld push in jp push sub jge mov sub cmp sub sbb je (bad) xor cli xor insl mov lock jne sub div sub pop pop dec cmp push outsb push push sbb dec insl dec sbb inc outsb inc inc sbb jge sbb jl jnp sbb ja jbe jne jae jo aad outsb insb push push insl popa sbb pop outsb pop pop sbb aas mov dec cmp inc sbb outsb inc jl inc add push data16 pop pop sbb push insl push sbb push outsb dec dec sbb inc insl inc fdivrl jae jp data16 je jo imul outsb bound pop cli pop jbe insl dec sbb aas aam ja (bad) out jne pop out insl lods jnp pop mov je aas push sarb fdivrp dec (bad) cmpsl xchg jo ja jg jg pop ficomp popf pop sbb fstpt pop sbb lcall sbb cwtl pop sbb jg push pop (bad) xchg push push aad xchg push adc sarl push adc xchg push adc jg push adc nop push adc jg dec bswap mov int lea int3 mov jg dec or mov leave jg dec or mov (bad) jg inc pop movb inc add ret jg inc add (bad) inc add jg inc add addb insl decl (bad) mov jge cmp sti mov mov jns cmp mov ja aaa divb jne xor repz jg repnz xor mov jg lock xor scas outsl xor out sub movsl jg and jecxz jg and mov jg and test sub cmpsl jmp pusha and lahf jg ljmp scas outsb cs lods insl jg in lods insb sub stos imul stos push jmp call pop loope and pop inc outsl dec popa pop cmp notb ds sbb mov (bad) dec outsb cmp dec jbe insl inc sbb outsb cmp sbb mov jnp jge pushf inc insl cli sbb mov jne cmp insl stc sbb jns cli cmp insl clc sbb mov addr16 cmp insl negl arpl mov popa ja pop cli aaa jbe insl negb add mov pop aaa jbe pop cmp push sbb mov push sbb dec sbb je dec sbb dec outsb mov sbb mov inc sbb inc xor sar jbe insl scas sbb sbb ja scas sbb outsb outsb jae sbb or sub imul jbe insl jmp imulb imul insl test outsb pop es push or aas jle pop aaa data16 cmp mov (bad) jno cmp outsb std dec dec cmp outsb inc cmp mov jl dec cmp push subl js sbb jne cmp push jo arpl in cmp jp,pn idivb cmp stc sbb insw cmp arpl clc outsb pusha mov jbe insl cmp push div outsb push mov push cli ja dec insl aaa sbb imulb mov inc cli jbe inc insl ss pminub cmp idivb xor jae mov jo je insl outsb xor sbb repnz popa sbb pop outsb xor icebp cli pop jbe insl push sbb push outsb xor lock dec jbe insl dec sbb testb inc pushf dec insl inc sbb jnp add scas outsb jp sbb jno in sbb lods outsb imul gs lods sbb insb outsb pop jmp pop cli stos jbe insl imul imul outsb push jmp jbe insl call outsb inc movsb sbb jge jle insl jp aas addr16 xor cmp cmp sbb jl imul cli mov sbb stc outsb pop clc sbb push insl je push divb dec cli scas jbe insl movsb sbb aas jl outsl cmpb cli mov sbb jno,pn jbe insl clc sbb mov movsb sbb (bad) pop jbe insl pop sbb push sbb jl dec sbb (bad) dec outsb mov pop aas jp inc cli jle inc insl mov cmp jbe cmpsl imulb clc sbb insl outsb aas jns imul cld arpl clc insl pop sbb js push cmp jbe insl clc sbb mov inc aas das ja jbe in jge sub jp mov pop aas jbe jae cmp sbb mov push outsl jne sbb cld insl pusha pop aas je pop idivb push cmp jae push jbe insl push sbb (bad) dec ja jb dec cmp jbe outsb aas jno inc sbb arpl aaa jo jl cmp aas arpl jbe cld jae outsl outsb jo das insl lret cmp cmp idivb jle insl clc adc cltd xor shld push repnz data16 add push inc int3 in faddl jge jne pop push jb mulb cwtl jae jle repnz dec fsub imul jnp mov bnd cwtl jns repnz xor and movsl bound (bad) divb fdivrs jae jg es dec push mov les jp int3 in push loope inc gs dec je aad pop pop test in dec aam mov jne sub int3 sbb push test jg insl jp gs bound cmp pop jecxz imul pop jecxz or ljmp ffree stos daa dec shrb jns fisubr jb,pn jl js call outsb cmc lods jp jl mov cwtl jl jns fisubr ljmp nop jns jns cmc sub jns stos bound jl nop jp jns aaa insb pop out stos nop js jns cmc insb ja push outsb ljmp jecxz pop jl mov das fs pop inc sub jb jns shrb jns jecxz xchg push ja or jl jecxz pop popa lods mov out push hlt outsb jns push mov aaa es shlb imul (bad) cmc add gs jl push fs lds sub bound popa sbb inc inc insb pop shlb cs pop and int3 sub bound call fstpt and push jl movsb mov lods fisubr jecxz push push sub dec dec pop fsubr addr16 (bad) int3 push es pop call sub inc adc inc jl lods bound jl rolb dec jmp pop out jecxz mov jl mov jnp mov jl es ljmp jl loop mov jae sub cmpsb push dec (bad) je outsb les fs pop repnz lds aad call jnp lds nop inc fisubl push pop test pop mov imul pop add test je jb insb daa jb xor jb scas dec (bad) in dec rorb jle push lret scas aad shrb inc pop stos jnp rorl jmp inc xor jg addr16 stc inc or mov inc push sarl sub pusha out inc or cmpsl dec out push inc imul insl ljmp pusha rcrb nop pusha mov sub or push mov imul in call call stos inc sub push test inc push mov in fsubrp mov mov das imul shrb imul imul cmp imul test push shlb adc inc je inc cs add rorb jb sub out jae stos sbb cld mov fdivl out mull std (bad) pop stos sub inc hlt jbe int3 mov xchg inc lcall arpl stos push mov jbe das jo sub sarl out jae imul mov leave sub jl dec mov jl (bad) jmp jl jp insl es in push aas in lret push push ds jmp sbb aas push divb dec dec cmp insl dec sbb (bad) dec outsb push inc sbb mov sbb jnp std (bad) lret adc jbe insl dec sbb dec outsb outsb scas sbb push ss inc bound bound cwtl sbb mov dec aaa cmc push aaa jmp pop dec aas sbb repnz cmp jbe sub (bad) repnz aaa bound jle inc aaa lods sbb sarl bnd ja loope dec std insb jnp (bad) sbb divb sub outsl jbe adc (bad) data16 aaa pushf add xlat (bad) pushw add pop jge gs xchg mov outsb pop push sbb pop insl ficompl push not outsb push push sbb dec insl leave sbb dec outsb inc lods sbb inc sub cmp or outsb js sbb jb adc outsl (bad) movd imul adc arpl xchg lcall insl nop sbb lret outsb push pop sbb dec insl (bad) sbb or int adc mov fs aaa mov das push lcall data16 insb add pop repz mov cmc jbe outsb pop jae cmp sbb shrl sub push (bad) jbe sub out repnz pop loope dec mov popa aaa lahf xchg xor mov fs outsb mov or cmp pop aaa xchg cmc push cmp sbb lds dec aaa in push pop mov dec aaa daa scas out sti cmc dec aaa stos imul sbb repnz cmp fildll sbb inc pusha pop mov mov loop outsb xor aaa popa (bad) jb lock (bad) pop dec cmp jbe scas sbb mov dec push outsb repnz or cmp repnz movsl fbstp jbe addr16 in fs popaw aaa and pop cmp mov dec push outsb mov or cmp push aaa sbb push cmp dec sbb sub dec aaa fnstcw repnz cmp insb inc aaa sbb adc jge fnstenv aad idivb fnstenv jmp data16 test sbb insl insl xchg sbb push insb pop outsb stc mov imul pop dec jo pop aaa push sbb negb loope sbb cmp push aaa call sbb repnz cmp jbe insl mov inc notb inc push pop jge pop mov jns lea pop clc sbb push xchg jb aaa into data16 cmp insl sbb mulb sbb mov fdiv push cmp dec pop dec mov push aaa loopne mov pop insb push aaa fcoml xor mov insb pop outsb xor aaa pop test cmp inc aaa out inc cmp jecxz push cmp aad divb bnd ja leave push dec ja jnp out adc js aaa addr16 jb divb xlat add cmp imul cmp jbe insl (bad) sbb sbb push insl rcrb push not outsb dec in sbb jl and jl sarb mov stc int3 outsb movsl jl fstpt and jge sub aaa out and popa xchg (bad) les je mov sub mov es pop std call jns fs jle mov push jl cmp pop fiaddl call daa jo push jae es test jl cs ss pop cltd jp mov jnp pop mov stc or lret fs and hlt jno and enter data16 pop sbb sub loopne or out jl out movsl mov lret in and push je arpl push pop bound out lret and sub lods fs (bad) push sbb lods jl out mov jl xor jae add aaa jl dec push cld dec bound cmp jl int3 mov jl je adc daa mov ret add and loope jo cwtl pop inc push pop aad cltd jp or sub repz push fcmovu fstpt stc jl gs in jp jl inc cmpsb push push aad cltd jp ficoml jp cltd into pusha push loop dec in jl cmp push sub mov pop lcall bound test dec push sub enter or xor push jbe jge loopne push cs repz cmp push ja jmp fsubrl movsl inc jo cmp jp lret imul fdivrs jle lods adc inc loope jl loop lret xor (bad) inc fdivrs pop ljmp push fstpt (bad) pusha sbb mov (bad) jae mov lock movsl dec cmc hlt push or jbe pop jnp mov sub leave (bad) rep sbb mov jbe pop dec cmp cmc jl xchg jp mov dec lcall es inc sub mov push pop das jnp ja jecxz fcomip xor cld jnp and fs addr16 sbb dec movsb xor pop cli mov jae xor mov xchg dec push sbb inc leave cmp pop pop insl push inc fs jl gs cmp bound stos inc ret cmp dec ljmp cmc mov imul loope push push jns dec sub add mov jle pop sub scas jnp bound jecxz jl jge jl and mov fs mov or jnp into mov or movsl xor jo mov scas jge mov sub cmp jnp pop (bad) ja aas mov dec mov inc jns fwait out jge jo mov xchg imul xchg cli mov mov pop aas push in scas roll jae call dec lahf aas pusha add cltd int sbb pop xor dec sub mov sti lret dec decb scas cmpl xchg stc outsl inc adc sahf (bad) jge repz fs call lahf sub inc dec xchg jg adc in adc push dec jae xor cmp sbb sbb inc inc mov outsl xchg dec xchg sub int call pop pusha xchg adc jns pop xor mov mov cld mov outsl mov jmp jle dec mov lahf jmp outsl out adcl jnp jbe stos dec jge outsl je repnz in outsb cs pop adc pusha pop fistpll add inc and bound sbb dec sub sti cmc jbe aas push inc jg push mov sub leave aas (bad) rcrl test cmpb jno pop jg (bad) shll scas cmp std sbb xor jg fcomi enter arpl xlat or orl push sub mov add add add icebp jge subl mov push gs dec das (bad) (bad) pop out aam (bad) mov test mov jg adc mov or loopnew push leave arpl mov imul add pop adc imull inc outsl push dec add sbb mov das push dec mov push scas (bad) push jle or dec mov pop add scas aas xchg and mov mov mov loopne (bad) inc mov jmp leave push scas fisubr arpl push dec outsl jbe notb sarb test add pop xchg push jg nop scas (bad) jmp jbe ja xor cmc les mov repz jns test movq iret scas add mov in ds (bad) scas xchg mov fcomi jg jo cwtl and dec scas rolb sbb insl repnz cmp scas aas roll mov fdiv jg bound rclb dec lcall aas jg ds mov push imul xorl lea imul mov clc lret (bad) fcoms push push stos bound push cli push cmp (bad) jbe int3 ja gs scas ja jg cmp scas mov inc xchg jno clc push ret daa out cmp add pop stc (bad) sbb pop dec sbb inc jge pop add jg imul outsl out fnsave pop jl lcall push ja ds gs das inc push lret in add imul ja inc jmp ja push mov push ja icebp mov test push inc (bad) jge (bad) ja cmc sar lods mov ja stc ret mov ja ds pop jg mov jns test xchg jg scas mov inc dec pop arpl pusha lds ja push popa divb repz pusha adc or and dec sbb pop ja push lds shrl pop push int3 cmpb or mov jb clc ja add mov mov ljmp lcall push decb je ja add mov push pop loope insb mov cmpsb jnp les xchg mov pop sbb gs andl sti cmp push mov movsb mov inc xorb cli adc in pop push aaa jnp xor and daa imul cmp (bad) sbb push inc push jl or pushl mov inc stc jg into iret mov or pushf (bad) imul dec mov cmp push ret push lahf jae adc mov mov lock mov xchg jle mov imul aas add cmp js cli mov push gs dec scas dec and and xor or jge jge mov xchg xchg jl push push dec sar cmp fidivrl jnp jge sub inc inc enter idivl dec mov push iret or mov dec fs lods sub jne mov mov xchg into pop cmpsl jo dec mov mov dec xor jge inc or xchg fwait jge es outsl mov jle inc dec lods aad movsb popa inc lods je popa add lret jge inc inc jmp jge mov lret shlb lods fistp jmp push lods cmp push inc or mov mov arpl jo imul cmp idivl jno pop jnp idivl arpl jno lods fiadd mov mov mov cmp lret adc mull call jae leave or dec cltd jo imul inc clc jo xchg inc push idivl arpl mov mov mov bound nop sbb xchg mov mov jo es mov in mov daa out pop mov (bad) popw cmp cmpsb cmpsl cmpsb push cmp lahf and mov jno insb ja data16 xor xor out mov leave adc fist outsl jnp cmp outsb cmp jbe insl mov ja clc outsb mov push jns sti cmc insl das outsb cmp dec cmp insb push cmp sbb (bad) dec outsb cli dec sbb cmp mov jbe insl js inc idivb outsb inc cmp inc idiv ja cmp jl idiv jp mov jns jbe js ss cmc cli jne addr16 hlt add (bad) lahf mov nop cli lods jp idivb xchg gs sub stos inc sarl cmp das fucomi in mov and sub test jl repnz or outsb ljmp mov insw repz loop loopne sbb loop test and and lret aaa add jge das testb dec iret cs and cmpsb jecxz jns pusha or aaa aas mov das jge pushf dec cmpsl testb dec iret cs cmp mov mov and pushf push out xchg (bad) (bad) mov pop dec fstpl xchg repnz cmp imulb jge mov mov lahf pushf lods cmp push jge cmc cmp (bad) mov leave mov cmp pushf inc call arpl xor and das jnp mov mov pusha pushf push mov jbe sar jnp and (bad) mov jo add aaa out stc cmp aas and and sarb cs bound pushf lds add lret pusha pushf inc cmpsl testb repnz xchg (bad) cld cmp and jp pop fmulp cld mov ret aaa sbb inc or adc pop sbb inc cmpsl testb dec iret insl int das inc cmpsl idiv mov xchg lds mov iret insl sub subl mov lahf pushf inc sub jnp insl push cs pusha pushf inc cmpsl testb dec iret cs pusha pushf inc cmpsl ss sbb jno add les idivl mov fisubrl negb mov cmp cmp cmp (bad) mov insl sarl add cmpsb sub pop je inc jle stos (bad) bound pushf lds cmp pusha or testb cmp (bad) bound pushf lds add mov cmp mov insl iret jecxz sbb add add cmp out lret pushf bnd inc sbb xchg xor mov cmp mov sub iret cmp mov xchg subl and shll ds hlt arpl mov mov in enter pop or inc cmpsl testb mov mov int3 pop iret cs inc cmpsl (bad) (bad) mov mov pusha pushf inc ljmp add (bad) sarb cmp jno aas or imulb jle jbe sub mov in scas mov mov add (bad) pop iret cs pusha pushf push jmp jge mov jle sbb ds ret and dec iret push (bad) mov pusha pushf inc cmpsl testb dec iret cs and setae hlt fwait cwtl lret push imul cmp cmc fwait popa (bad) cmp ror inc or lret cs pusha pushf inc cmpsl testb and sub xchg mov cmp cmp hlt repnz pop ret pusha pushf inc cmpsl testb dec iret cs mov pop je pop mov or dec cld popa mov add jp cli sarl add mov lods (bad) ffreep cmp xor iret sub cmp dec cmpsl neg mov jne aaa cs mov cs cmp or testb dec push arpl incl add dec cmpsl (bad) mov ficom mov and xchg lcall jp jnp jmp mov cmp xor pop imul ret ret test je mov jge cmp outsb stos sbb pop jb je dec pop call lods pop gs pop or cmp leave rclb pop in and mov push scas pop mov stos adc inc adc sub mov ret or pop imul jns xchg je pop xor push cmc jb xchg ret pop jns cs imul fldenv or jmp sub jp push push pop imul data16 push push mov (bad) das outsl test aad xchg ds jns jp leave sub mov divb jns scas ret fdivl out jnp jae jno lret xor pop xor jp sbb cli cmp xchg inc pop adc gs jp sbb cld push popa push popa pushf jp (bad) jmp add mov sub xchg xor stc sub idivb jnp shrl cmpsb adc test jp int3 (bad) pop jmp pop jl into mov xor pop push xor scas lods in pop gs test push cmc outsb jns popa popf dec mov jbe mov mov stos int3 xor cwtl push cmp stos aas jbe sub loope (bad) fdivrl outsl xchg jo jb arpl pop push push das cmc insl push push js arpl mov outsb bound jno fmuls nop ret out imul in outsb outsl fcom or jb mov fdivrl inc push pop gs mov cltd movsl decb pop push xor push in adc insb mov push stos test sbb jp imul ficompl xchg es pop sub clc pop gs pop jmp push add js sbb lret aad repz pop jnp sbb fistp jle,pn xor fst jno add xor jo fldcw jns push and es movsl push pop mov push jne pusha xor jno lret pop gs mov iret stos arpl outsb in pop (bad) popa push push jb xor ret fxch mov pop daa or cwtl xor jns cmp jge sbb jo jp gs gs js insb lret movsl jb in and dec jnp sbb loop outsl cs fstps jno arpl push sbb jns jp jb jge aad popf push lcall sbb pusha outsb pop pop sbb aas dec and ret jp push mov pop int3 bound jge xor push jg or arpl iret xchg dec jg call je ret icebp jl jg push xor pop leave jg daa cwtl jnp popf jno jg inc inc lock dec sbb mov shll jg test aaa jg (bad) xlat in insb data16 jg fs mov mov stos pop sbb stos jle pop push data16 cwtl aas jge (bad) and dec outsl jnp push insb jae pop (bad) jle mov fcoml jge ficomp repnz ljmp add sbb (bad) stos jo repz (bad) popa pop mov xchg mov sub cmpsb loop mov repz cmp inc xor mov stos mov inc dec inc or aas pop scas push dec push cmpsl and mov push addr16 sbb call and adc pop or and inc and aas xor jbe pushf ss pop or jae cmpsb ja movsl jmp jbe imul xchg jns insb xchg pop insl imul cmp imul jp cli push jbe xor lret arpl outsb bound pop imul pusha jne sbb mov jp imul xchg jno pop and mov push (bad) jbe sbb aas into pop push jnp jbe popa sub xor loopne pop aad dec xor das je jo repnz out outsb data16 mov movsl pop xor aaa push fsubp bound dec xchg jp call push jne clc mov cmp pop gs popa loope pusha mov imul scas push repnz xor dec fsubrl aam jno loop,pt icebp sub cmp jo imul mov pop aas push mov je cli and pop jne popf loop hlt psubd imul ficom fidivrl cmp call and jo dec popf pop xorb outsl ja xor (bad) pop lods inc aaa dec inc jge std scas ja ret out jne mov cmp ja call xchg arpl sub jno sbb or jmp (bad) mov test fwait into xor adc leave movsb ja jbe and add pop fsubl inc lods mov add out pop push pop popa dec fwait sbb imul mov mov outsb dec pusha lret pop pop iret sbb loopne cmp xchg dec push sbb adc cmp js loope mov or xlat (bad) mov jg mov mov std pop cmp outsb aam add jp lret scas jl,pn cmp adc jg insb imul mov xchg dec jge sti popa ret stos mov fwait and lock cmp mov insl cmp jne fldcw iret sbb frstor data16 in ljmp icebp outsb in sbb dec insl (bad) sbb jnp mov imulb ljmp insl xlat sbb notb dec inc pop jle pop je popa sbb imulb out sbb aam dec sbb test ret jge pop jp jbe icebp insl out sbb mulb ficomp (bad) cli push jbe insl dec sbb inc push dec sti dec cmp push bound stos dec sti mov (bad) aaa jae cmp mov mov and mov lret mov jg ret rcrb dec cwtl fnsave scas clc sbb pop jg ret pop sti repz jg push les in imul rcll dec xrelease xlat mov jo aas adc fwait stos mov rcr dec fnsave js fcoml jo pop (bad) jmp sti mov cli aad ja lea fwait popa mov dec hlt aaa scas add repz fldcw lahf lret outsb and sarl test jg lret das sub jg jmp cmp pop fs pop (bad) jg out pop mov lds bnd push mov jl jg je jecxz dec push cmp or jmp mov inc aas mov mov cli inc pop jecxz adc rorl pop popa and jg lds int3 jg movlps in mov dec (bad) sarl add enter loope sbbb outsl dec cmp jle loop or cvtps2pi inc adc mov stos arpl xlat mov dec fs mov scas pushf jae add jne out outsb mov jg cmpsb dec fiaddl das (bad) cmpsb adc push inc sub cmp ret push les lahf adc jg sub outsl jp mov sbb fildl inc repz and dec inc out sarb and dec inc push jg repz jg or jo pop rcl scas add loope adc cmp mov mov xchg in inc mov add int3 je mov pop cs or jecxz flds inc dec stos mov cmp cld add adc mov ja idivb cmpsb and es mov mov jg out jmp pusha jg xor (bad) jg int test jg and imul mov mov push mov mov jecxz dec dec jg lahf test jmp mov mov jle pop jg inc adc mov out xchg mov orl push lock pop repz sbb aas sub je jb (bad) (bad) cmpsl mov dec jge inc mov mov or repz addl (bad) push jg cmp sti les or jg (bad) pop xchg dec int3 cmc aas sbb mov mov push rcrb out jo pop arpl mov add sbb jb xlat inc add cmc lea iret jg popa jae subl mov (bad) imul faddl iret pusha imul (bad) xor xchg sub mov jg leave mov inc inc cli out std jg mov inc push mov mov xchg lods or xchg pushl jg pop and inc dec incb popf mov mov dec push lods mov pop jg adc jg jp repnz add sub fistl lds jo mov jno addr16 mov inc push cmp mov sbb insl insb xchg popa rcrl cmp mov jge jle sbb test test push push stos inc aad scas mov ja add ja inc or jnp push sti fs mov rcll xchg aas mov lods arpl insl rolb and cmp shrl lods idivl jp sub out movsb bound out (bad) ja dec jg sbb pop repnz adc push lock push xor mov frstor cwtl cltd aas inc adc sti dec fsubrl mov xchg aam pushf jle pushf dec push xor sarl xchg add sbb ljmp out (bad) cmp mov or xor outsl mov aaa inc daa and push fnsave mov jg pop pop fs dec mov push push adc or jg inc or sub sahf hlt pop adc (bad) mov push frstor mov popf popf roll push fidivr fldcw inc out jl or pop xchg movsb lahf inc adc out pop xor fdivrs mov inc cld jg out or icebp outsl (bad) jg inc mov add xor jg adc inc movsb cs jno sbb pop ds addr16 jg fisubl add xor pop mov out and out cmp fdivp add stc lcall xchg or aam mov rep aad inc or xorl sti sub ret pop addr16 jg mov mov mov inc add imul std sti sti cmc mov fcmovnbe loop inc jg cmpsb mov addl dec pop popa pop jmp push cmpsl jno push jae inc and adc mov jg nop xor enter fadds jno mov sbb popf int test lcall inc ds dec and jo lahf sub pusha cmpsl and (bad) xor push pop mov addr16 test cmp out imul xlat mov lret outsl out cmp icebp imul aas les call lea je bt test cmp push call pop pushf jmp mov push pusha lea jmp bswap pop push pushl ret jmp sar jae lds inc mov aaa sbb cmpsb dec cmp mov daa push mov (bad) jb movsl cmp (bad) dec add fistpl hlt data16 cmp (bad) mov push pop mov (bad) andl inc mov dec push push out lods mov cmpsl mov and sti push sub outsb es insl xchg jp (bad) lock pop push inc div push mov adc outsb push ja addr16 fwait scas and (bad) (bad) pusha or and or fcmovb cli sti add sbb pop sub sbb dec cmpsl decb ljmp xchg stos pushf ret dec pusha rcrl xor jbe or pop xor jle arpl inc test out push dec stos sub je or lret push hlt inc inc and mov xchg (bad) pushl pusha mov lea jmp mov mul (bad) or fcomps push jp inc pop jnp inc pop nop sub adc out mov out adc aad or mov sub adc insb arpl pop xchg mov add jmp adc lcall adc int cmp fmul decb sub cmc fnstenv gs sub outsb cmp jne lock or add or out sbbb xor insl xor inc mov ja stc adc scas and cmpsb fwait imul outsb dec mov mov scas push loopne ret jmp and lea xchg lahf in rcrl and std in sbb shrb mov sbb and sarb imul daa inc hlt (bad) cmp pusha mov cmp pushf pusha cmp push jmp sti add push (bad) or rcll pushf mov loop fwait js mov sub and enter lock lret daa std loope xor adc (bad) mov push mov outsl dec mov dec xchg cmpl pop xchg test adc mov out xchg pop push movsl inc in push mov loop adc je push jae cli call adc insl lods inc xchg jmp (bad) or inc movsb fnop sahf mov ret incl repnz mov aas mul mov mov loopne out ret add push pop inc push cmc cmp (bad) hlt cmp pop sub pop mov sub adc insb or push scas push add addl int cwtl push (bad) push lea or xchg lret lea sti lods popf hlt push iret scas maxps mov cmp stos mov test ficomp mov jmp cwtl test mov (bad) jns arpl jne push pushf cs in jbe lods sub in jno pop into xor jg cli and movb xor and add hlt push xlat hlt jmp xor jne movsb pop scas inc out sub or mov fstpt js add imulb xchg shll pavgw or fcomps push xchg dec outsb gs inc push cld add pop sahf inc xor mov jne sarb or mov jae mov popf test mov xchg cmp pop inc mov xchg mov lea xchg xchg cmp cmp aas lods xorps add movsl popa dec aas xor push push lock (bad) ljmp mov mov ret mov jmp outsb gs jbe xchg lret or adc out cmp push sbb bound xchg jge add in andl fcoml mov push movsl xor jmp call sbb icebp push test ljmp mov inc xchg jecxz mov lods jb inc push push imul mov out jp cmpsl lds inc adc pop pop ret xchg sub cmp xor push movsb stos sbbb sub add jmp inc outsl xlat push popf mov cltd sbb mov or movsl lods call mov jno push test mov dec push (bad) mov ss test sub jbe or imul mov push inc mov cltd imul xchg lods inc inc pop pop nop cmp sbb in divb and xor mov mov lock push loope into adc or stos xchg std ret or dec mov in jmp mov xchg adc pushf icebp in mov rolb rcl imul ds pop mov call fistpl pusha pop push pop js lods fwait data16 (bad) or outsb (bad) adc not mov inc pop std mov rorb sahf jge fstl add popf jns stos enter add or xor outsb sbb gs and imul das pop sarl cs or stc adc jge or mov fistpll add arpl jmp pop js or insb (bad) add push mov mov adc iret ret or adc ss jb popf fcoml xor lock aaa scas in push sbb xchg xchg lods sbb sub push adc dec dec mov lcall jge dec lock mov mov add xchg in stos lret ficoml sarl push xor push xchg aas xchg insb enter xlat sbb in add es fdivrl out jmp insl adc bound xchg out rcr not jmp pusha mov pushf cmc cmc pushf shr cmc clc cmp cmp call sahf xlat sbb int3 or cs cmpsl pushf jecxz xchg pop ds jle ss lret sbb mov loop or pop call sbb cmpsl jl cld loop xor xchg add dec popa and jmp (bad) repz jmp sbb push test (bad) movsb cmpsl ficomp aaa pushf push jne test loopne aam sbb cltd fwait lods ljmp mov sbb sub inc (bad) sub xor add (bad) mov inc sti decb mov mov mulb bound popf dec (bad) or imul cwtl les insb mov mov in push (bad) hlt mov dec (bad) lds clc rol cmc cmp call jnp jge int3 or sbb push dec adc cmc cmp rorl mov (bad) cmp mov les (bad) xor int3 and fldl cli cmc lods out movsl inc inc out aas cltd mov adc jl cmp repnz aam movsl dec fistpl add hlt in sbbl xor sbb pop bound lret clc mov mov dec in iret sbb push xchg scas push stos cmp (bad) mov jecxz push mov adc push repz dec add int3 xchg (bad) clc fs pop dec dec dec dec lret adc jl or mov jmp stc clc call pop nop lea or xor sbb std lods mov (bad) mov in loop leave enter xor ljmpw loop mov mov fmull iret in mov scas jbe add popa lock nop mov cs jbe and lcall adc sub (bad) popa lahf or sahf inc insl jno cld mov outsb cmpsl int3 cs cmp int jo xlat aaa cmp dec into jmp out loope rcll push cmc jns push insb mov cmpsl push lods inc xlat ljmp or movsl imul push mov daa push mul push enter push dec xor into or xlat adc ret and add jp aas inc push mov dec xchg pusha xor and cwtl scas or scas js push cmpsl std pop pop jmp ret xchg decb (bad) mov (bad) adc addr16 sti pop data16 xchg add xor stos and and pushl lea jmp dec (bad) fwait inc into or popf (bad) std mul add sbb jp imul and (bad) cmp pop and rcrl or dec add and xor sbb cmp cmp lods scas fnstcw jo mov push mov xchg push sbb setge sbb xchg add mov int3 in sarb jl testl loope int add mov xchg lret lods xchg je imul inc rcr mov add push jg cmp jmp clc inc ja push jae push in (bad) push loope cmc mov test cs rorb dec roll pop iret or scas mov sub xchg cmpsl lcall cmpsl xchg icebp ljmp xor in lds imul mov imul cmp sbb or mov aad scas pop mov dec lcall xchg fildl xchg ja imul int movsl xchg out mov and sbb dec out loop jae mov scas push push imul add (bad) (bad) inc sbb jecxz lea cld xchg and cmp adc scas pop out call cmp dec aas adc pop insb adc imul addl movb pop je or jp mov into outsl xchg (bad) jecxz or fwait jge mov call mov iret push cwtl orb leave xchg sarb ficom imul stos lock cmp scas ss sbb mov rorl push mov negl jmp pop enter push clc inc int3 leave neg sbb push cli xor or push jl push cli dec mov mov sub and cmc cmc add pushf clc cmc cmc mov cmc test jmp setnp movzbw mov pushf movb push movb mov movsbl pop pusha pusha mov mov pushl ret daa mov bsr bt mov cmp shr xor jmp mov inc mov xchg mov ds ret scas in fadds cli sub cmp cld dec pop mov cltd into (bad) jne inc xor xor mov xchg out and aam bnd sub (bad) in mov cltd out rcr out test nop pop add outsl mov dec inc ficomp pop fisttpll cs push daa add fmull pushf mov sbb test xor fucomi iret xchg pushf cmp pop psubd or rcll cwtl mov in cld mov out cmp jg jbe in mov cmpsb mov lock xor jb out mov ffree in inc inc cmpsl nop imul cld rol push lret jbe movsb inc add movsb jne and jnp sbb psadbw adc push leave inc jp push test push and xorl aam or push inc xchg mov outsb jae xor adc ret mov (bad) cmp adc sub daa cld movsl icebp add mov sbb dec sub dec jae xchg mov scas cmp xchg push jge lahf mov movsbl bswap pop setb bswap xchg xchg pop call jb pushf pushf pusha pushf pushl ret push int3 int3 fxch or mov loop adc mov and xor mov notb pop jae fmull push jne push push or imul imul dec or inc or orl cmp pop mov in mov aaa jo push imul xorb mov cmp shrl push inc insl les and mov xor push or insl mov or mov andl aam pop popf loop imul lahf jnp pushf push imul mov pop mov fbstp f2xm1 icebp rcr mov jle cmp lret dec test shlb enter xchg pop out sbb shrb sbb pop dec cmp (bad) aaa mov fnop dec mov jl repnz bound lahf push les aam cli out lret fcoml inc sub into repz sbb mov jg xchg jb pop andl inc pusha push movb ret and imul xchg push nop push xchg cld pop add aad (bad) dec add and lea jne cmc call xor icebp aam inc add mov cmp repnz test clc cs ret das pop dec and adc stos push enter dec mov mov and test mov push mov iret icebp adc xchg fcoms (bad) into repz mov sbb mulb jl push ljmp add rcrl scas nop push cmpsl test sub pop adc mov add jbe inc pop mov cld dec sbb cmc pminub addl inc push sarb mov add iret xchg sar iret pop mov sti loopne in aam sub jl pop jae mov push test dec and test shrl roll mov inc js dec outsl and jne push out and mov repz inc sar das push ror cmpsb stos push imul mov adc mov xchg jle ret test mov pushf mov enter adc sbb or andl lods or test das inc mov out inc add sbb and cs cli stc inc loope sbb in push outsl and cli fmulp (bad) (bad) repnz repnz jmp or insl dec push push sub sbb sub xor je and stos mov repz and repz add fisttpl and leave push cmp call mov inc pop mov ds mov inc insb dec sbb mov adc mov jno les out daa into add inc (bad) add push fcomps xchg mov adc ljmp rclb daa jbe xor gs outsl fs gs imul add adc (bad) or mov fs mov (bad) (bad) adc cwtl (bad) es push mov cmp xor mov int3 add push push jle stos jae xchg or bound or or cmp test push dec aad (bad) icebp dec int movsb fnop out mov fmul (bad) xchg pop inc insb adc xor out scas nop les mov daa insl cld add lahf adc (bad) movsb pushf popf ds int push push push jl adc or and pop mov sub mov mov or mov push dec jecxz decb in test sub mov cs stos xchg and enter mov push test pushl xor pop into mov pushf pushf pushl ret pushf jmp repnz call push outsb adc xlat or xchg out cmpl dec (bad) loope push mov dec jne inc push movsb lea movsb lods fild or ret dec jle lods jmp pop xlat sbb xor cmovp stos outsl pop aam xchg pop jae ja cmc sbb js jmp andl pop out jg enter pop pop in aaa xchg into in inc or push dec mov ja mov fsubrs sub rolb stos adc inc fbld or stc lahf lcall imul sub sbb shl repnz enter push mov fimull rorl sbb rorb inc cmp pop xchg insl sub xorl incb std mov lds or fisttp mov push leave cmp outsl push clc push aad or stos xchg call jb mov and bound jae fsubs or insl leave push push faddp sbb jle jp jbe dec cs jne mov loopne mov pmullw dec cmp jl xor adc add mov sbb je mov or and mov pop cmc jns and cmp inc and mov lea jl add fs jmp push dec test or mov add pop ja pushf add jne sub pusha gs cltd roll mov adc add out jecxz sbb popa xor xor pop data16 repz xchg cmpsl inc add xchg (bad) pop movb jb out pop xchg fsub mov cmpsl xor insl push sbb aas (bad) mov (bad) add xchg add out stos lahf lds lods fsubp sub ja (bad) sub insl pop and inc inc out outsb loope or cmp movsl sub pop add lcall dec popa cli push and cld cmp rorb inc adc je sub or add lret cmp mov cmp sub pop sub lock jmp int popf in mov inc jo sbb mov movsb adc pop enter lret mov das mov lahf cld xchg popa cs sub in sub sbb cmp inc js or iret aaa xorl (bad) das xchg jnp icebp push pop mov xchg pop neg mov adc arpl sbb push xchg aaa and subb add in fstps push sub mov sub sbb adc mov inc and sub test push movsb bound icebp (bad) pushf mov fsubr pop test push (bad) ja inc loope leave sub lret add rorl inc fwait cmp fadds test jno xchg inc mov and repnz and sbb mov mov rolb mov pop inc mov ret add stc mov sub (bad) pop pop aad clc loop xchg inc adc push les jne movsl das lds int3 ror dec sbb xor ss test xor ret mov push or imul pop sub test scas sub and pop add movsl notl xor add adc mov inc push das pop add sbb insl cmpb call jmp int3 sub (bad) fmull inc in scas orb jb inc push pop outsl inc pop div xchg mov sub fucom push pusha cld cmp xlat movsb test xchg insl pop cltd (bad) adc pop cmp xchg test pop and sti outsl lcall add cltd scas pop in (bad) scas bound xor rorl sbb mov stos mov cmpsb xor test mov (bad) jo push lds ret in cld outsb std loop push dec and jl (bad) insl ds jb inc dec dec mov hlt jl nop std enter ret aaa xor xchg dec pop imul add cmpsl mov nop sub stc xor mov inc lret pmulhw test test sbb fs call jg push mov pusha pusha pushf push lea jmp not aad movzbl push test mov lahf sub pushf mov rol push shr daa bsr push lea sar push sub ror rcl mov pusha clc test stc test pushl lea je movsbw mov shrd add and mov pusha stc call lea jne pusha jmp add inc gs outsl fs gs imul add mov dec popf pusha movl pushl movl pusha pushf lea jmp pushf call call inc pop (bad) or or fldl2e leave fisubr xor jp repnz push enter or insl rcrl mov repnz sbb or fidivl jns imul outsb aad mov adc fldenv nop ljmp xorl cmp xor inc mov repnz sti imul add in xor fidivl adc add test xor pop test mov leave lcall push inc call imul pop addr16 ret outsl in shrl or xchg sbb outsb jmp push lea call pusha jmp sub mov fimul inc jnp mov clc idivb dec pop mov pusha dec inc pop sub mov out test mov cmp push sbb leave cmp mov scas (bad) cmp lds push scas inc dec call xor loop dec and add push pop nop icebp and fstp mov cld popf jle cmpsl adcl (bad) stos mov into fs mov and negl rolb jmp mov sub sbb repz mov xchg into jae or aad arpl add add add cvttps2pi out inc or sahf movl movl push movl movb push pushf lea jmp xchg lea mov cwtl bswap cwtl lahf lea call mov pop mov lea jmp push bt cmc call pushf movl push jmp pusha cmp ret inc aaa inc xchg inc pop mull mov xchg ret mov adc out adc leave xchg out data16 icebp inc mov jecxz dec test js outsl insb cwtl aaa push mov fadds mov xchg outsl (bad) jno sahf data16 jo fs ret fucomp and les jae push negl dec push in adc or fwait mov cmp or push xor fnop and jmp hlt or stos je repz in push inc cltd test insl test std add pusha mov cmp add pushf lea je test add pusha pushl push push lea jmp push call lea jae test jmp push pushl popl push pushf pushl ret jbe rcl or pop bound mov ss sbb pusha push scas push mov inc hlt je movsb icebp (bad) ret inc or cmpsl es icebp and jle inc xchg sar (bad) pop fildll jmp push test fcomip (bad) scas xchg mov movsl sbb and incl or mov push sub aas cmpsb into jns adc push mov fistl gs jmp push push call mov neg mov cmp cmp jmp add inc gs je dec popa outsb fs add neg push ror push sub mov bts pusha clc bsr mov xchg mov xor call push push test or sar in out adc mov lcall pop mov arpl dec jno sbb mov rcrb jo inc hlt cmp pop mov out dec cld cwtl ret cwtl (bad) dec rcrl dec into in xor mov std mov and sbb sub mov push sub adc mov ret sbb xor das mov sub cmc pop sub outsb mov in sub pop xor or cmp decl add daa mov aad (bad) jae adcl jne cmp jae call call das or add dec adc push popf (bad) or ds xchg pop add lcall jne sbb stos ljmp aad lods mov cmc fldt mov dec das push fisubr test mov test mov std inc shr icebp push ficompl cli call push sbb xor jbe mov xchg lea repnz call cmp pslld cmp (bad) xor sub xor dec ss jae or repnz cmp push leave sub addr16 (bad) xchg ficompl movsl xor or les in mov test push lea je test jmp rol call pusha clc add push push mov bsf mov stc push cmp movw mov lea jbe xadd shld rcr btc mov shr xchg add pushf and and mov setb xor shld movsbw add movzbw not bts movl clc bsr pusha mov add bt jmp cmc bt cmc cmp push call dec rol in inc or sbb xor and push loope adc data16 mov test mov (bad) pop fildll addr16 jo rcll or sub pop inc mov sbb stos loope repnz sti mov fs cmc add rol add add and xor btr mov stc shr cmp clc cmp call cmp or fsubrp daa iret mov jo adc jl sbb (bad) xchg lods lea cmpsb in pop fs mov icebp dec es popa dec imul add mov pop clc repnz lea xchg cli xor xchg cmp adc push es push ljmp pushl popl pushf push pushl ret pushf pushl pushf lea jne mov adc cmp seto mov mov sub neg btr btc call in in jno or dec shr sti mov jecxz subl pop flds in sub scas test dec movsb adc and or adc pop dec test int (bad) mov xchg sti fnstsw xor or jbe mov sbb mov mov and jecxz fstps and jge and fldt rcrb jo aaa and repnz push jnp (bad) inc je jb faddl mov add in add clc push test xlat sbb mov mov xor push daa add push lock lds movsl daa add movl call adc hlt out inc add hlt bnd sub js xor test sbb outsb sub arpl mov mov adc stos and fisttpl push fs push dec or mov dec pop (bad) cmc fidivrl sarb (bad) std nop (bad) inc (bad) push cmp in and out int3 cmp pop das (bad) out icebp rclb and dec arpl push xlat insl stc loop ret sub sub push repz xor mov fimull push xchg xor ret push mov push jmp lock lods mov incb cmp js add lret cmp mov ret sahf fisub add push add add add add add add add jecxz add jecxz add push add add add add jecxz add xor mov (bad) std sahf inc lods iret cmp pop lds dec push xlat push cmp aam in ljmp (bad) (bad) aaa push iret inc mov gs mov push adc in in dec mov je add inc fild sub xchg outsl sub dec push insl mov out jle xor sbb sbb and fstpt jne imul mov cs pop (bad) lods push pop and std fildll out insl lcall ljmp aad push ret test addr16 in stos jne cmp sahf andl addr16 lcall xchg push fisubrl mov sahf int3 out add fldcw xchg repz in pop (bad) ljmp push push xchg xor fldenv xor pop adc imul and notb add jnp cmp ja (bad) out sbb mov sbb adc or cmpl xchg sub loop mov lock jecxz xchg sub mov cmp daa hlt dec shll xchg mov je dec inc (bad) (bad) int lods xchg jle test or addr16 mov xchg lahf adc (bad) (bad) xchg jle inc test stos xchg dec pop sub push push lds dec into mov sub dec hlt xchg lds adc sub push les cmp test lods xchg xchg sbb sahf xchg popa call loopne (bad) imul (bad) insl sti mov xchg movsb adc mov (bad) int3 pop in fadds pop mov fwait jge jl orl in faddl fs (bad) pop pop pop mov push and adcl push dec inc add jno cmpsb or mov icebp cmp cmp out in je mov xchg mov das enter push (bad) out or fidiv fcompl and pop xor pusha les call mov pop pop jno adc pop xor mov aaa clc inc mov mov imul js out sbb inc sbbb bound outsl fbld jbe mov test inc push nop push or or (bad) test jge fwait arpl pop mov sub icebp push fisttp cmp sbb jp push out inc or push xorb jecxz test xchg addr16 fistpll and pop adcl cmp pop pop into pop cmp sub fs mov xor aas mov mov iret fstps jb cld sub in mov jns das es stos mov push aaa bound pop insl popf adc and dec fldt in sbb mov les jae imul xor cmp jecxz ljmp pop jp or or aam dec fsubrs mov jmp aaa notl jae push enter pushf or out mov or cmpl (bad) xor dec inc push and (bad) sahf test mov pop lock sbb loop (bad) ror cmpsl cmpsb and push jmp push movsl dec in mov in inc cmc sbb clc data16 cmp insb imul pushf call mov jnp cmp jmp cmp jecxz cmpsl movsb jbe inc incl out in dec lret dec cli push and rorb daa lret xchg mov add out fcom in cmp sub xchg out push sub stos push push movsl js inc or sub ja push cmp push popa lret leave cmpsl inc push aam jb push mov jno inc shll and mov pop mov lret fildll jmp xor xor sub adc pop pushf cltd fmul sbb clc clc ja (bad) cmp mov or fild imul clc insl xchg scas dec mov test imul push or mov inc xor das push sahf clc jmp pushf jnp push jmp inc dec ret inc loopne adc iret shrb or mov fldcw int3 mov dec sbb sbb mov or mov mov adc cmp (bad) dec dec sbb test pushf popf dec sub repnz pop out pusha xchg jo mov or std ja aas cltd mov divb sbb and cld movsl imul mov inc dec scas xor lods loop std xchg dec dec cs and out adc dec rcrb out pop lahf or imull add ret arpl iret push inc mov mov and cmc xor push into gs xor push cmpsl scas push out int (bad) outsl test lret fisubl mov cld jmp xor inc sbb adc fcomps (bad) insb mov pop out adc pop push ret xor push ret cs fisttpl push add ljmp cmc clc inc jg leave or outsb js jecxz dec (bad) insb stc sbb cltd iret mov int sub or sarl sbb mov and add xor jb mov popa popf out adc dec imull rcrb add pop scas stc sbb inc (bad) out cs mov out es es dec xlat les xor into (bad) adc fwait ss out push nop pop dec pushf sub push dec sarb or push push sarb cltd push xchg incb leave (bad) int mov dec out flds cs sbb and aaa je inc sbb cld jae mov cld test cmp sbbl fs pop sbb cmp inc scas loopne pop ja test movsb ja fsub ret cmp (bad) mov fs or fcmovnu jecxz gs pop scas pop (bad) xchg js pop pushf lds sarb sarb ds scas mov in movsb out test cltd jmp inc sbb push nop aam aas cli lcall lock jl test jne imul out and and shlb and stc lea pushf dec or jne lods push mov sbb xchg cmp hlt imul mov and mov outsl jg jl mov out mov or mov int3 popf cmp push cmpsb stos xchg push pop xlat aaa mov arpl sub mov pmaxsw setnp pop lods xchg mov addl clc fisubr int3 mov mov imul add push inc mov xchg and jns add mov aaa outsb inc pop xchg pop rcr xor and jae jle lods sub push push stos add push lds lods sbb cld add jl ret and xor sahf insb dec push or outsb push imul sub pop pop test fmuls test imul lret xor sub pop mov (bad) xchg negl mov sarl mov sbb or outsl mov add add mov loop loopne push push outsl ret sbb subb loopne sub (bad) push (bad) adc hlt shll or addr16 leave mov aas xchg jb shrb les and (bad) lea jg dec pop sbb mov aad jo inc xor push std cmp rol jmp xorl out mov or pop cwtl mov pop (bad) idiv ja pop repz mov xchg mov push dec faddp (bad) pop das inc int3 dec rorl inc loopne sbb lds fdivrs loope (bad) repz roll adc ret int cmp and out mov or aaa jp (bad) mov repz (bad) cmc lcall xor lret aam push daa sbb or cwtl push dec xchg (bad) into add sub int into fisttpl scas pop popa icebp or imul cmpsl sub mov xor sbb jno mov cmp mov mov in mov loopne dec cmp iret pop pusha push ljmp adc pop aad aas push insl stos push jbe lds xchg inc jae mov dec sub push mov scas iret pusha iret (bad) and sbb jns xchg adc jge pop push fist idivb jo in xor fs adc imul jne pushf mov test mov mov fwait out call xor roll pushf stc push popf hlt (bad) or lds and out jg scas push test jmp xchg cmpb loopne shl jae sbb sub inc clc fldl scas scas jl or push outsb (bad) mov es (bad) sub jmp (bad) scas test xor ret das out jecxz jbe mov xor dec and mov ret xor js subl push int3 test push popf loope xchg push les cmc faddl fwait addr16 fbstp nop inc aas lods xor cwtl inc jne sub mov test aam cmc add in (bad) cmp arpl aam pop in sbb addr16 (bad) mov mov ret adc rolb daa jp adc mov sbb or stos inc lods into inc (bad) ret pop daa imulb push lods incb pop and pop test cmp mov dec sahf sbb or xlat rorl outsb pusha sub inc jg xor mov xlat clc dec dec dec jp divb push cmc sbb clc cmpsl cs jg fldenv mov sbb imul (bad) mov pushl lret inc sub add add leave pushf call movw pushf mov lea jb stc bt cmp pushf call pop (bad) mov fwait pop adc dec inc imul cmp adc sbb in shll dec fiadd xor push cmp mov div fdivrp cmpsb mov cmp push push int mov dec jge adc cmp xchg rolb sub mov mov ljmp cmp add or js daa lods adc loop mov rorl dec mov dec insb sbb (bad) sub (bad) pop xor xor add pop xor dec (bad) pop (bad) cld (bad) fiaddl mov out add pusha adc sbb dec pop push lods jnp test loop out lret cwtl jns or es dec out (bad) xor lods pop adc mov xor sbb inc fild mov cld mov push nop sbb daa std loope aaa sub das push je out add repz and outsb mov cmp insb imul add mov mov mov sbb sub xlat pop repnz out ja (bad) hlt or inc xchg dec imul xchg enter fidivrl stc mov jbe or mov lods xchg je adc insb outsb movl in sahf outsl enter or add enter hlt adc jo in lahf cmc clc adcb test (bad) xlat repnz mov add sub aam mov out loopne les and repz and testl inc jle popf push lods fisttp (bad) adc insb stc arpl xor cld repnz mov popa stos ss sbb test leave and mov jmp or sarb mov icebp call std aam test sbb mov or dec sub and decl sub push xor fsubp inc mov cli jnp fchs call cmpsl xchg int aaa gs dec xor outsb cld sub mov lret xlat insl jbe pop mov (bad) scas pop push pop xor jg into mov add addl mov add sbbl pop das shll aaa jmp frstor inc dec aaa push xor (bad) mov insb jl pop lret adc jbe jno,pt (bad) (bad) dec mov out loopne ja test jg cmpsl in aas in jbe push jb add cmpsl dec clc jp cmc sub cmc test jmp lock (bad) (bad) or outsb dec push ja and ljmp adc testl cmp xor or xchg rorl mov or jns and mov int mov inc pop test lahf push gs xchg repnz mov mov mov ja call xchg das cld push (bad) (bad) cmpsl mov or test jge call lock cmp xor dec jl push fsubr push dec pop mov clc loope cs arpl out loope (bad) movsb adc push (bad) fisttpll or insl hlt sbb xor les lds fucomi pop std fiadd push jmp sub jle fbstp mov aaa (bad) or or mov sub pop jp push lahf jnp inc mov dec mov xor scas shlb sub mov sub repz dec (bad) ss mov sbb hlt call push fist mov pop mov sti push aam insb clc xor mov mov andb xor fisubrl push movsl or out cli pusha scas dec jl movsb pop push mov aaa sbb popf adc mov push mov leave add jnp pusha dec mov cmp aam int sbb jp push into push loope es sub add pop arpl inc mov push sbb push xchg sbb negb test mov pop (bad) lret xlat cmp sarb sarb pop mov adc ljmp in pop cmp pop pushf push push test add rcrb pop daa shlb cmpsl mov in into push dec (bad) jnp cmp sbb pusha push mov xor enter jo and pusha nop pop pop cltd ja js mov into push clc js mov call dec ss pop mov sub mov aad repz jnp mov pop pop iret js jge ret add mov add pop shrl pushf insb jp inc mov imul cmp pop mov xor xchg pop adc or xor cli and inc and cmp insl xchg mov test pop aad cld mov ds jl (bad) cld mov jne cmp xor sbb dec nop jne fldenv cs loop jmp mov js mov data16 stc jg and push sub cwtl push push fnstcw mov push mov nop addr16 hlt mov fcoml mov xchg outsb xchg int3 lods fldt cmpsl pop scas (bad) push outsl add lret push lods (bad) pop aas inc or insb fwait int3 mov sahf mov (bad) repnz dec aad push fadds or aad into (bad) sahf jo fnstsw dec push fcoml pusha test js mov outsl repz adcl cs insb enter adc mov dec (bad) push movsl cmpsl aam xchg test repz or sub sbb inc gs and push pushf xor add xor adcb pushf movl pusha pusha push push lea jmp lea call jmp jecxz pop xor inc movsb adc mov test int leave mov jmp and xchg cli mov cwtl fldl dec js sub add stc add sub add push aad mov lods mov psubsw popf repnz mov (bad) mov in cld popf push xchg and cwtl sbb xor add ja scas or sub mov setge outsb sub and push xor dec pop mov push int3 (bad) aad enter jmp daa jg in mov outsl fisubr imul (bad) mov movsb js or add into xor mov xchg xlat int3 push cwtl out mov clc mov push adc sub dec push mov nopl roll lret xor mov dec cmp pop daa sbb cwtl mov sbb sarb nop cmp push rcrb mov push mov sbb add stc and cli flds cmpsb mov pop push dec and xchg cwtl and lods push push adc jns mov dec leave cli jmp mov push xchg jl cmp cmc lock adc inc xor shrb adc out (bad) pushf shll cmpsb push jle dec ficoml (bad) repz (bad) call push rol dec pushf dec ror rol jmp jmp lea jno pusha movl movl lea jmp and add add add add sldt loopne add add add add add push add or add xor add add add add loopne add add add add add add add inc cmp add add add add verr loopne add sldt add add add add verw loopne pushl pushf lea call call lea jb jmp push pusha pusha lea jne pusha push push mov jmp lea inc jp sub (bad) cs jbe ss jle bound push pop pusha aas xor mov mov cmp in lock cmp bound adc adc sub mov hlt fisttpl das or scas sbb (bad) outsb orl push or scas addr16 inc ja in aam jp xchg fimul xchg jg leave cmp es test mov push ja fucom fisubrl or sbb pop xchg orl xor (bad) jae inc fstp lds inc pop xchg enter stc sahf ljmp in ja ret setge test pushf dec dec pop mov or xor in mov test or dec (bad) and push (bad) aas arpl jge (bad) push mov jle mov das dec (bad) mov clc dec imul and aas fbstp pusha cmp mov jg arpl xchg vpmaxsw and xchg and sarb jnp jmp cmpsb xchg mov nop int and mov push ret or aad add add inc or jb pop mov mov xchg rcrl push dec (bad) mov jl push mov jb daa cmpsb fcomps movb pushl ret arpl inc sub enter sbb pusha pop mov push jge dec es scas jge movsb jns cmp mov in ds cmp xchg cmpsl mov cmp jnp shrl and imul sbb popf aas jge aas fsts cld pop jl cmp loop jb cld inc js data16 popf aas test or hlt jmp inc cld mov mov pusha movl pop lea mov movl mov mov pushf pushl popl movb pushl pushf pushl ret xor push (bad) decl inc jp inc xchg or lock sbb xchg notb mov adc mov les xchg jae push fisub hlt stc flds shll pop add inc das popf in cmc cmp scas outsl movsl dec stos dec lea ror or faddp and xchg scas in clc pop repz lods push daa js sub fcmovb mov out add aad daa xchg mov add and or xchg jns rcrb and and fdivp dec sbb mov xchg push imul in ret andb scas lds test push jo ds cmp fs je call pusha pusha mov movl call daa out cmp or fisttp hlt lret ficoml mov loop mov sti or sbb (bad) out add push cld jmp pop sub (bad) or inc adc mov sub xor (bad) cli dec inc push insb pop fabs cmc mov lahf ficoml in push jmp xchg stc (bad) leave and mov fsubl cmp stc mov mov xor data16 mov push or lret lret fwait popa outsl adc xchg aam inc mov out jno jl fwait movsb bound adc or xlat push add cmp or jg inc pusha pop pop push push mov inc mov fwait arpl movsl fwait push arpl sub jnp push ds jle inc jnp daa jbe in sub out int3 cmp mov fsts mov jp sbb or push les or sub (bad) cs jno data16 jno jbe insl shrb mov mov adcl and fisubr cmpsl mov jmp add (bad) inc or dec daa sub jl call out (bad) jecxz mov xchg mov pop adc ficompl fsts arpl mov cli xor (bad) sarb jge or lea push xor shl jnp lret inc lds xchg add fidivl cmp push stos pusha movsb aas sub leave mov inc mov test in cmpsb mov cmp fucom fsubl stc push ficomp or test mov push mov (bad) scas pusha call ljmp cmpsl mov sub adc ds ret mov add cmc ja push sub push test sbb jecxz add ret fsubp movsb dec or dec sub int mov cmpsl sbb add loopne push test cwtl cltd out adc (bad) inc mov aas cmp inc sbb pop xchg cwtl les int mov mov and push adc roll inc xchg add or rcrl lods lcall cwtl popa and je imulb fwait aad push jg rclb sub out add movl pushf pusha pushf lea jmp cmc movb add pushf push pushf lea jmp call pushf mov pushf movb call test pusha call rep pop mov mov pushf pushf lea jmp jmp mov pushf xchg push movsbw movl movsbl movsbw lahf lea movb call cmp or push scas inc mov (bad) and sub popa jmp cmp dec fstpt stc imul mov xchg ljmp stos jg xor out adcl mov dec mov movsl adc push scas sub dec dec push (bad) inc mov fmull or ret jle inc pop add divb enter popf mov fistl fcoml and pop cld or jle lds inc xor jns or out jae test loope repz inc push jle fmuls dec cli flds into push rcrl and cltd adc xchg or mov lcall push lahf dec push lods add pop add inc cmp ficomp movsl jb sub sbb push jp gs fnsave push or or (bad) repz setge out ret subl push xchg xchg lds jmp fisttpll pop sbb or into pop xchg test lods negl sti push and push negb adc jno and in mov inc (bad) or leave push aam dec clc inc imull mov sbb add cs jae aas sahf mov fwait test in inc mov hlt rcrl mov in mov lods leave aad jns out scas push push inc fbld fwait mov stc pop iret inc popa call (bad) imul fdivs and int3 pushf inc rol mov mov loope insb outsl ds inc sbb fwait cmpsl mov roll roll dec mov dec and cmc pop xchg fcomip pop cmp jl pop push jp sub xchg mov jae adc jbe dec insl lock ds ret rcrl fidivl xchg test arpl nop pushf pusha movl mov pushf movb lea jg push pusha pusha pushf pushf lea jmp stos cwtl movsl jns or mov fmul loopne mov ficomp ret xchg lret sar jnp ds lds or cltd in in sbb and enter push lods sbb jge in dec movb outsb push mov cmp lock jp hlt hlt call push jae iret inc lock int gs jl pop addr16 test mov stos sbb ds sub sarb push and add or loope push pop mov (bad) lods or (bad) sub fisttpl insb jmp (bad) imull sub fidiv fldt pop fwait push mov xor pop lock add cwtl mul mov sbb mov out (bad) fistl insl adc mov in sahf cli sti pop lahf jnp xchg sub dec (bad) ljmp xor sti inc mov cmp cld xchg rcrl add mov outsb mov rsm xor (bad) cmc push stos idivl lods fild dec jmp jae mov add dec xor xlat cmpsb test push sub inc xchg movsl xor lret pop hlt and mov (bad) fisubl sbb inc jp or sbb xchg outsl push popa mov pushf jmp push movl jmp sub or mov aad sbb jno and sahf mov (bad) xlat sahf lahf je xor or or fistpll cs sbb repnz jbe sub pop fmul add xchg (bad) mov dec in push stos (bad) lret add ja rcrb cwtl adc add jecxz in loopne lods jns sbb push leave mov sbb lret push ret das sub inc lahf (bad) and jg pop mov push jne jecxz (bad) lea popf std rcll mov cs fsubrp and add inc or adc test xor mov loopne xchg sbb xchg xchg jo and xor push cmp cmp fsub int ror add arpl and insb mov mov (bad) (bad) or pusha outsb adc cld outsb inc jg mov push adc pop mov xchg call mov and cmp jmp out jmp fsin jp outsb pop imul test sbb nop mov mov fbstp (bad) ja mov daa jbe cld arpl push dec add sbb inc inc push inc push dec xor cs insb add inc lea lds inc add pushf cmp loopne sub jo fcomps jno fwait loope mov xchg into xchg bound and in jmp nop out pop les push sahf cmp sbb xlat mov insl loop rcr vpunpckhqdq frstor imul es popw pop pusha pop and mov test sub adcl sub scas je,pn imul test iret lock loopne and movsb xor jmp adc out data16 xor orl xor fs insb add push mov bound push sub mov (bad) cmp add mov lahf xchg imul inc push cmc cmp aad pop ljmp fcmovnbe xor cmp (bad) lcall cli shll inc arpl stc loope roll push lock xchg cmp aaa jmp lret xchg cmpsb clc pop popa xchg mov fimul push aad ret mov jle mov into lcall push and cvttps2pi inc cwtl or sbb jnp mov add push adc punpcklwd sbb stos loopne call notl and add inc call push adcb inc nop inc pop adc js xor into and fsts and leave mov mov arpl aam xchg adc pop enter mov adc sbb mov sub inc inc fldenv in xchg lods mov ret mov mov mov shl and notl add jns mov movsb fsts and pop dec xor pop outsl jl jnp push dec mov dec mov mov pop lea stos sub sub jmp or rorb sub repnz outsl jp or mov movsl in in pop leave add lea shll jb aas shlb adc cmp mov pop subl xor (bad) int3 cmpsb imul jmp dec or cmp xlat jp add mov pop clc mov jmp add push dec inc gs outsl insb fs popa je inc add xchg dec add inc mov add pusha stos sbb mov daa or mov rolb fisttpll push (bad) or and out jle jo (bad) pop jge xchg mov int3 push les sub jmp pop or mov add mov or stos jmp xchg sub sub (bad) xor sbb and addr16 ss pusha pusha pushf lea jmp add inc gs outsl fs gs popa outsb fs gs add fcomps xor movl jmp push push movl mov mov lea jmp movzbw not pop mov movsbw pop pushf call rcll inc mov sbbl sub cmp mov movsw popf (bad) mov stos rcr and sarb push mov cld cmp out (bad) cs es xlat add adc fimull inc push dec dec mov jae (bad) divl dec inc test pop jno sbb inc jmp std mov rcr aaa xor jnp xor out popf cmp (bad) xchg mov lock movsb dec (bad) add mov mov sub (bad) mov scas xchg dec mov xor fidivrl lds aaa mov xor mov out das clc mov (bad) ljmp daa xchg (bad) adc div fildl lods lret and repnz out dec cmp adc pop scas je divl fldl cmpsb push (bad) mov mov mov (bad) test (bad) repz std call bt cmp jmp xorl gs shl aam andb in push mul xchg fsubp int cli (bad) aam sbb enter mov add add mov pushf (bad) mov les jb inc outsl pushf stos dec dec fwait inc (bad) dec fsub xchg cmp pushf inc rcll repnz (bad) cs pop push xchg lret push and mov mov push or movsl cld loope sbb or lcall jecxz into movsl (bad) lahf lock cmc mov cli (bad) fldcw nop (bad) jmp mov icebp std test call or mov in pop mov shrl jo incl mov sbb mov xchg adc ss push fstps mov rolb and test jae pop daa adc imul mov enter js mov aad mov mov mov inc jo daa ret add mov sbb cltd lods out mov cltd xchg add lret and mov addr16 push insb call outsl ds daa xlat jbe jecxz mov scas (bad) add in mov loope (bad) ud2 inc add xor enter cmp cmp pop mov mov icebp mov lret jge dec mov inc or sbb int3 out scas in loope adc jmp fildll and xor or fs testb aaa or and push arpl fdivrl fimul xchg clc adc mov (bad) in mov imul into fucomp add not inc mov cli jp inc cmp test xchg lods sbb fistpl dec fildll imul adc or nop or inc mov outsl pop push jne movsb dec cmp (bad) loopne test in pushl into gs loop cmpl or adcb pop pop jl jl add pop xchg mov lods mov dec mov xchg pop inc push (bad) hlt push or push jno and ja jg and stos push inc cmp popf (bad) mov loope jo or mov add push xchg jl push cmp add pop ljmp fdivl sub dec ja ljmp fdivrs je xchg sbb lock mov xor (bad) mov jb cltd xorb stos xor pop and mov push xchg mov or lds nop push sub cs lcall jl test inc je shrb inc sub mov push xchg mov mov movsl xor sbb ret lea jge dec and popf inc outsb cmp fwait int or sub jge sbb test insb push (bad) push jno xor outsb cltd (bad) mov outsb sbb test movsl fs ljmp mov out push leave mov repnz or in test mov fisttpl mov or in mov dec test adc fs movsl out jb and repz or push outsb add ljmp and mov sti mov push lods ret dec arpl test sub insb xchg mov cmp cmp fnsave jle xchg dec inc jae mov pop push hlt out push dec mov xor push test sub in flds push es sub mov mov dec (bad) pop mov jbe mov sbb movsb push cmp rcl add jmp add les mov mov xchg cmp cmpsb in add mov mov mov lcall mov (bad) mov or inc xchg cmp data16 sub sahf ret sub inc mov or popf mov mov lcall dec negl repnz xchg and inc fwait pop stos pop sub cmp sub push lret in mov xchg jmp sub xchg push mov aaa scas outsb and mov adc (bad) sahf mov jg mov jbe outsb xor sub (bad) xor jae fucomip fild mov push lea int3 (bad) test test jl insl and arpl xor ret jo jae je jb sbb xor cmp pushf xchg movb lea jne mov bswap movsbw movsbw movb movsbl push setg movzbl movsbw lea lea call mov lea setns pop jmp cmp (bad) repz shl mov cmc cmpb pusha pusha pushf movl lea jne daa push bt bts xor aaa dec mov add rcl ror cmp add neg add not mov jmp pusha movl lea je pusha mov push lea jmp dec inc push dec inc dec xor cs insb add rcll add test hlt repz add add push push push lea jmp mov loope adc inc push scas mov cmpsb jg jmp pop (bad) or repz je pop lds hlt inc aas jne xchg sti or pop and loope pop enter cmp dec jl pop pop add dec pop (bad) icebp lock jbe push scas push dec jns jle cmp jbe jo mov aas jne ja hlt inc sub loope sub into mov dec iret enter rolb xor leave and pop xor lock (bad) mov shrl or sbb jo sub push (bad) or sti sarb mov scas cli mull jne ss pop (bad) loope jge inc aad mov sbb lret mov dec loop push es daa xchg les loopne roll (bad) pop adc jl sub test pop mov jg aad (bad) in add mov aaa ficompl mov jmp mov inc loop jle scas fsubr xchg (bad) and mov stos adc (bad) cmp add call fisttp test and push nop (bad) xor outsl sbb lock les mov pop cld sub clc push test lahf lods sbb or inc movl movb pushf lea jle pushf movl push lea jmp pushf mov push pushf movl mov mov movb pushl lea jmp cmp cmpsb dec adc lcall test fiadd and sahf aam add xor nop xchg (bad) xchg adc push sub push popf xor and mov idiv in lds mov xor nop jb mov lock xchg mov aam push ret inc aaa dec js xchg or jns dec data16 fldl movsl lcall xor sbb jb sahf lea mov sbb leave lret addr16 jae and mov testl pop xchg mov cmp and hlt jno out in es pushf aad cmp test rcrl hlt dec pop and adc add test pushf popa dec orl cmp insb adc je or xor add or inc scas (bad) mov fstpl (bad) repz (bad) push inc sahf fninit daa sub sbb fwait negb dec xchg cmp mov and (bad) scas push scas mov dec jle dec mov push pusha or mov push sahf sub and punpckhbw lcall mov jnp xchg sbb adc pop cmpsb jnp inc xchg loopne out lock dec pusha jae add xchg imul stos leave js jg je aas mov or adc subb dec dec push xchg push test movb pushl lea je bt clc cmp call mov adc xor (bad) mull push clc call call pushf movl push pusha movb push movl push lea jmp call (bad) mov mov or push mov and add stos arpl fdivl in dec push pushf push rorl push shrb popf int jmp fistl push pop dec dec jo insb push (bad) mov into stc push dec cltd aaa mov cmpsb fwait stc dec mov jge adc sub das gs bswap fisttpl js adc gs cltd add mov rorl xorb pop sub push pop dec cmp cmp lret pop mov sbb out and out mov shll lea sarl jbe cli in ljmp (bad) and mov mov cld xor mov cwtl out mov aaa lods dec lret xchg mov arpl (bad) and lods fsubrp test dec lcall fwait popl out outsb fdivl pop dec mov lods mov inc je das mov lds stos mov pop int3 cs stc jg mov (bad) xor lds int3 mov popa sbb test add pop testb mov jo or cmp dec addr16 add mov bnd cli mov vpmaxsw scas mov in fstl leave fisubr popa cmp aas mov cmp insl (bad) lret mov xchg jecxz (bad) mov outsl fimul push sbb out cltd mov dec aam jne sub or and push xchg jae mov add hlt leave mov and (bad) mov and adc repnz mov or ds or push xchg rclb stc popa or pop (bad) out hlt cli mov dec cmpsl jbe,pt push fidivl xor sub sbb push mov (bad) psubsb pop call add inc push push lea jb inc pushf mov lea jmp stc cmp cmp call lea je pusha push bt cmp or pusha lea je shr bts dec jl sub aad btc mov mov test mov clc adc shr movsbw movzbl mov call jmp pop xchg pop mov or mov testl dec cs xchg or xor pop push mov jns daa cmc xchg sbb jnp push jnp xor and adc xchg mov rorl lds jmp xchg sub inc pop enter and push sahf jp in xchg mov sarl sbb cld outsb pop loop dec mov cwtl jmp xor mov and (bad) xchg xor jecxz shl mov jmp pop (bad) loopne pushf aam pop imul cltd adc pop repz stos jmp mov ja or imul mov push outsb xchg (bad) xor out inc pushf lea call pusha lea jae pusha mov dec pushf mov push inc pushf mov movw lea call pushf mov movl pushf adc mov call jl push cli adc inc out inc jae xor xchg test lcall xchg or sar xchg imul lcall xchg enter (bad) xor inc cmpsb pop dec jo and add sbbl mov pop lret das leave jmp dec loopne cmc sbb push repz outsl das inc in push cld add inc lea cmp ljmp daa or xor mov iret shll clc jnp pop inc addr16 aaa data16 push xor xchg loope (bad) pop (bad) jo gs inc test lea sub sbb jbe les adc and std dec jmp fiadd subb cmc xor bt cmc test clc or call pusha insl fiadd sbb inc and push xchg aam mov notb mov sub adcb jae ds jle test pop sbb (bad) push rorb lea pop (bad) mov mov mov xor repz enter ljmp mov jnp and pop js xchg arpl cwtl push pop and and mov imul aam inc cltd into add mov stos mov mov movsl rorb data16 xor mov (bad) mov or jmp shrl ret in mov dec push scas jo jg pop loope ljmp dec imul mov push xchg dec sbb dec sti lret in and xchg enter push mov pop and test movntq cltd cmp jbe push jge into lahf daa outsb pushf adc mov (bad) lock test push test cmpsl outsb xchg sbb xchg push je idiv lahf cs sub mov repnz and adc push adc xchg subb das add scas outsb cmpsl or mov push (bad) mov adc xor cmp sahf inc imul xor nop mov inc movb incl (bad) repz or fcoml sub aam test sub xchg les cmp insb outsb iret cmc js ret cli loopnew cmp (bad) movsl xchg mov xchg jae insb lcall loopne je aam jl dec xchg xor fwait (bad) (bad) push dec outsb movsl and xlat popa in mov xchg leave (bad) call int ret xchg jg gs push sbbl imul lea jp fcomps mov sub xor adc mov jno outsb sbb test or call movsb jge ss or or stc xorl push and mov lcall sbb outsb inc adc xor jp and inc test lock cmp cwtl fstl ja rorb sub (bad) push xor cmp bound xor jae jg bound mov in jmp xchg cmp (bad) pop pop int3 xchg stc mov lret imul jo cwtl sub push xor dec sbb imul fidivrl daa iret stc push inc fld or mov mov dec push add stos cmp sbb and (bad) xor outsb and ret out vpmadcsswd push mov push pushl pushf lea jmp add push jns je insl inc jne arpl outsb xor add or push pcmpeqd ljmp xchg cmpsb add pop mov pop jge je fiaddl dec fldcw cmpb leave pop ret jmp xchg sar jmp repz stos js clc push xchg sbb jns test push sbb mov mov pop lods mov mov inc lock adc icebp cwtl aam push mov sbb mov fidiv sarb in lds mov lcall shrl push lods sbb fmull loope in cwtl dec repnz mov lahf and add cs adc (bad) jb lds push xchg es mov jle es and or (bad) mov jmp push xor ljmp dec movsb jnp (bad) mov cmp imul sub xorb int3 (bad) mov mov mov push pop test dec add add add cmp or gs mov test xor push test inc imul dec sti inc (bad) out into mov add mov adcb ljmp sub test or and lods mov xchg push loopne and pop dec loopne (bad) pop cs ja lock push ja and xor in cltd sbb xchg mov in mov push ret test loop push hlt lock repnz lods jno or outsl lea pop cmpl inc out int jp leave adc inc push jge fisttpll test ret xchg and lea setns inc dec xchg aaa dec shld mov pushf sar mov add test push xor btr or mov push pushf sub pusha movw call test stc cmp pushf pusha lea ja not jmp lea call push pushf pusha lea jae push pusha mov jmp pushl popl pusha movb pushl ret movl movb jmp jle pusha push pushf movl pusha movl push push lea jmp pushf pushf lea call push call jnp mov sbb inc jl stc nop in aad xchg fsubp (bad) fldl mov fsin cmp int mov adc mov fsub xor push jae fstpl (bad) mov and dec xchg push sub aaa push inc xchg push sarl fs jnp jp push mov lahf int3 sbb cmp xchg jmp push pop lahf mov or mov lahf movsb push rolb cld push mov shr aaa sub or mov scas cmp (bad) mov out stos imul cmp in mov add xor mov jb jle mov add pushf pushf jmp add dec outsl arpl inc insb insb outsl arpl push lea jb jb pusha pushl ret pop not push mov pushl lea jae pushf pushl mov jmp dec loop or inc decb fwait outsl movsb jecxz fucomi fwait mov iret call mov cmpl lock mov divl mov aam or subl cmc jle lods jmp (bad) cld stc or and ss insb idivl test mov loope sub pop push lcall fwait cmpsl or xor jl das and sbb cwtl aas dec lods sbb xor fisttpl mov jecxz (bad) sti pop (bad) rep mov jne insb outsb cli and inc phaddubq daa jbe sarl arpl mov sub test stos sbb movl mov add and sub jne mov leave lret fnstenv lea stos adc jnp pop cmc pop jle inc jnp inc push in sti call rorb add imul jae cmp inc add or cmp and cs mov push outsw out mov cmp cmpsb imul fcoml lods fldt movsb in lcall xchg add mov xchg sar dec pop (bad) (bad) xlat and hlt dec stc inc sub arpl push xchg xor jbe out enter dec pop inc jge decl in sub push in push jnp mov pop xchg int3 popf push jge out dec cmc sbb jge test ljmp fidivl aaa mov cwtl jb cmp push cmp test xchg xor mov and add test dec mov arpl in add roll loope push out xchg scas mov or fstps inc and adc mov out sbb bound ja pop rcll ret fs pop scas pop or adc leave sub es loop popf adc rcrb movsb lods sbb push aas sbb repnz sbb fsubrl jecxz aas out dec pusha jecxz sub lods push loop lahf mov push aas dec lods cmp xor mov jne xchg adc pop pop jge dec pusha xchg lret aam mov cwtl cmp dec push fstpt gs pop leave in dec icebp sub push xchg les push push or rclb lds rclb ror cli push incb (bad) pop mov repz aaa leave aad sbb or int3 (bad) mov mov out add mov sbb cmp pop mov xor push pop icebp add scas cmp cwtl xchg pushf jb sub jnp xor and xor or popf push push in mov inc sahf mov and ss add test pusha call das adc (bad) or aad sbbl and mov in (bad) (bad) movsl xchg push mov xor cmpsl xor jecxz pop (bad) sahf jb insb cmp jb and add scas lea sub imul sbb sub inc and sub jo sbb push inc orl and out sti call dec popf sbb cmp and inc aad flds inc dec cwtl aas or cmp jbe adc cmpsl mov shrb popf and std dec fdivrs js fild outsl cmpsl adc ret pop push mov cmp jecxz (bad) xor aam jmp dec loope insb ja mov iret xchg pop mov sti cmp xchg int3 mov shl cmp pop xor jmp pushf mov hlt mov es lcall mov xchg jge,pn lea repz ret xor and dec sbb ss adc shlb xor (bad) sub add fs movzbw xchg lea push movzwl jmp jle sbbb test mov jmp sub aam mov mov mov mov adc xchg cmp add icebp fistp push outsl xor dec addb pop mov sub sbb jp or ja lret jl ja repz jo sbb rorl in jge lock call dec pop inc mov xchg cmp fldt in xchg cltd fs or (bad) outsb lds pop mov mov jp movsl pop mov mov jbe fs roll inc es mov pusha jmp movl pushf pushf pushl pusha lea jmp shr sub bsf stc mov pushf movw jmp ja in xor or mov (bad) (bad) repz sbb outsl addr16 xor flds xchg mov pop push ljmp add test (bad) push push and enter mov aam in (bad) pop stc add loop cmpsb ljmp mov addr16 inc rclb cli dec mov clc pop mov jnp mov mov inc mov sub loopne jg add adc insb std mov adc inc xchg push jo xor adc jecxz out addr16 fcomp pop fsubs dec sub mov lea je cmp movsbw cmc add btc dec sar mov call pusha pushf lea jne cmc shld stc mov bt cmp push lea ja mov setb mov pop setb jmp xor shl push rol xor lea mov bswap jo xchg pop jmp mov or push orb xchg pop cmp imul imul mov dec add cmp mov cwtl mov add adc je pusha fs push or pushf or mov jo ljmp jge jp popa xor es pop or add lahf (bad) cli out aam in sub jg add in xchg nop sbb inc rclb mov inc push hlt jp mov xchg rorl aam jns stos mov daa sbbl push xchg in mov jb pop cmpsl es lahf aad rcrl mov enter std inc test push xchg push lods and out push (bad) aas mov inc inc mov imul pop jbe arpl lahf lods sbb inc clc outsb jmp dec xor jge jge test dec xlat outsb sub and lds popa jle mov cmp inc fsubl xor movsl dec cmpl push inc aaa imul add dec pop popa pusha mov out sbb cs push sub adc sbb sbb cmpsl test inc inc gs push out rclb fistpl shrl mov inc inc scas les mov aaa inc xchg ljmp push or leave mov pusha fistp mov sarl mov or imull mov fwait add inc add (bad) aaa mov std pop test mov pop push (bad) sbb hlt jmp loopne call or loopne je add pop leave cmp xchg subb in mov divb adc das push jb adc loope sbb sbb dec loope int sarb adc mov mov das (bad) jbe in loopne sub and and out jl sub pop pop and jae (bad) fimul push mov xlat cmpsb jnp and ljmp adc xchg mov add sahf sub pop fisubr sahf (bad) dec add add daa aas inc xchg in cmp mov pop out adc pop mov stos inc lds fucomp das aam add cmp les in mov shr sbb sub pop ret push xchg pusha les mov lods mov imul fs jmp pusha call call mov or (bad) mov push and (bad) int3 icebp sub mov popa add cmp add xchg hlt vhsubps shll xchg mov and xchg and scas outsb in aaa stos ret push xchg rcl cmp out or or insl pushf pusha lea call pusha movb movb lea jne not mov pushf lea jmp cmp lea and andb pop ds pop jmp (bad) enter and dec mov jmp cmp xor enter loopne loopne fistl add push cmpsl pop fistp frstor outsb or lcall in shrl loope sbb xor faddp or add and inc idiv cmp push pop pop jbe stos cmpsl push jnp outsl fs js loopne aaa pop cwtl lods ror insb xchg out aam pop mov inc dec inc fisubrl jnp add jmp mov mov or adc dec inc in lret xor ficom fsubrl lcall push test xchg adc mov popa call sub in aas scas jnp (bad) add mov sbb test jge and loope pop popf rorb sbb sub xlat mul (bad) adc scas nop stos mov mov adc loope pusha stos dec or xor push jg push push mov (bad) mov sbb push insl push cwtl adc lea je aad cmp cmp mov and call jge xchg sbb daa ret stos sbb das scas mov and xchg sbb lcall dec mov into imul sub inc pushf fcomip xchg shr (bad) cmp xchg rolb aas xor movl sub into xchg jb jl jecxz jmp jnp jl dec mov icebp sbb sub xor cmp mov mov and jp add push outsl cs insb cltd adc insb mov cmc xchg roll mov int3 add sbb jmp adc aaa xchg mov xchg pop imul lahf xlat pop insb sbb repz sbb sti daa outsb movsb hlt lret push gs adc aam push test push fwait data16 push shlb mov cltd xor popf fiaddl push pusha (bad) stc bnd lahf lods fdivp sbb add ds xor cmp adc (bad) sub (bad) mov dec and stc js nop jle ss imul test cmp or sbb ss jle repz popf mov mov and jb xchg pop (bad) xchg out mov fistp hlt fistpl adc xchg lock push or loop,pt or pop addr16 or mov pop inc nop cmp aam dec test insl mov and (bad) add jb xchg push push mov and je xor cmp shr xlat in mov dec adc fsubp dec out xor imul and inc cmpl imul push adc movsb mov loope leave jl incl aaa xchg notl sahf push hlt xor fld inc lret xlat pop mov jnp and xor sbb cld mov dec mov ljmp int3 stos and cmc and pop add jp jne cmp out pop dec lahf xor call sub ret sub cltd enter in inc dec (bad) (bad) fsubrs or add mov push mov aaa inc jnp bound (bad) ljmp sub mov mov cmc jp jns ljmp sub mov fmul xor pop loopne sub out and mov inc (bad) mov imul cmc testb (bad) or in xchg and test fistpl xchg dec loopne cmpsb es lods and pop enter and and loopne mov inc mov mov lahf imul les in pop adc push and adc fsubs cmc sub lea pusha jmp sub adc sub inc cmp mov mov jmp jp jb push imul movsb xchg or loop lahf test pop in lods test inc add popf mov call xor andb inc ds xor pop dec clc mov adc fidiv xor adc pushf stc mov xlat daa dec loopne sahf jo (bad) icebp inc fmull hlt mov call repnz mov loope sub xor repz xor xchg mov mov mov and andl out (bad) pop aam add stc std jbe or mov mov lcall add shr cmp cmc cmc cmp pusha pusha jmp mov inc xchg mov inc jae jb fs jle repnz add and adc cld mov mov xor xchg scas push jae cmp mov adc pop jo lcall mov pop mov ljmp addr16 fisubl loopw hlt dec cmp fnop xchg jne,pn jle clc icebp push jae dec jbe push inc aad lea mov push sbb jge mov or sub (bad) das sbb ffreep jle dec jno cmpb push xor xchg outsl jg push fnop pop pop push fdivl adc sti pcmpeqw cmp call push xchg imul xchg (bad) decl add (bad) ljmp xchg mov and movsb dec add mov or mov jg push (bad) or mov ds push lahf xlat aas ret add test dec dec fnsave mov and push jge jp add sti (bad) cld push or and cmp adc adc ja arpl inc push call in adc out xchg lock sbb ficoml jo notl sub inc mov ret sub fadds stc inc xchg xchg pop cld scas pusha (bad) pop mov sahf mov mov pop iret xchg stc sub add sbb mov or imul add cmp mov push cmc xchg adc add xchg (bad) in xchg (bad) ss adc jb je std scas cmp inc mov dec adc and mov xchg xor xchg ds xor push and sbb jl std arpl mov (bad) or jmp dec inc subl arpl push or pop stos fidivl xor and adcb inc xlat pop push addr16 inc lcall cmp pop push sub mov jb xchg int stos mov ficom test jle enter test mov pop or inc add daa sub arpl dec enter pop fwait inc push pop clc jbe,pt mov ret add jecxz push dec pop mov in push in jnp adc leave xchg sbb shrl push outsb (bad) adc call rcrl (bad) jb out dec pop addr16 xor inc (bad) jle daa mov xor add push (bad) xchg or test repz out insl in xor add fs call pusha adc mov lea jae pushf lea jne jmp push hlt test or mov testl xchg cmp xor mov xor inc mov dec pop cmp push jbe sub (bad) mov (bad) enter mov rcrb pop dec inc pop stos mov and jno xor in xor loopne std sub mov cmp sar push inc xor repnz jbe stc (bad) cmp jns add mov ficoml jne les jno mov ret stos loop lods inc sub xchg (bad) pop sub ja or rcrl inc mov pop xchg cmp ja stos xchg jo ja push pushf and adc insl lcall into stc int3 lret cld js push cld sub mov test dec cmpsb push je js lret add repz orl sub shld and dec add push pushf shrd shld dec mov sar movzbw push bts sub mov movzbl pusha lea mov pusha push mov jmp push dec inc dec dec xor cs insb add xor add hlt cmp pushf jmp mov or (bad) cmova repnz mov je cmpsl cwtl xchg cmpsl fdivrs xor lock dec daa (bad) (bad) incb pop cltd dec gs cmp adc dec sub aad cmp movsl mov sbb js fwait clc jge xchg cmp pop scas add les (bad) lea das ret push add cmp int3 hlt repz mov or xacquire or and xor inc fsubs notb or imul jbe stos cli dec push jge sub stc test movsb xor inc out stos into cmp imul pop add decl mov mov arpl loopne (bad) sti test bswap sahf imul or mov or dec cmp aaa pop pushf popa cmp mov cmpsl add sub movsl inc je add inc (bad) push clc pop ds jb inc loopne in addr16 or test pop push lahf int3 push jl cli inc ss jle jp test pop inc dec fild push inc inc xor ret aaa mov jne int in jmp negl ret and or pop jmp iret out out mov push das push jae mov cmp mov push aaa call bound add mov mov or jnp adc cltd inc push inc push inc ja loope data16 pop and add movb in push lock fistp cmpsb push test mov jns add sub adc loop sub aam fcompl leave rorl insb dec push incl sub cwtl xor into cmp add pop mov decl or push xchg (bad) lret rolb inc je mov mov movsl lcall movl or lcall lods ret sbb cld mov and inc fmuls xchg clc (bad) imul dec push xor inc push xchg cmp rcll xchg add dec adc or push jp jl,pn inc inc stos outsl xchg test jnp pop decb fldenv sub inc notl pop jp push xchg xchg out xor insb push pop mov pop js pop lods sahf adc and mov (bad) cld mov jbe jno bound icebp xor pop add push pop sarl and daa push test inc xchg movsl sbb das mov dec call and cmc in in sub dec sarb mov xchg (bad) or cwtl out pop iret pop mov cmp je rcl repnz popl aad in (bad) ret mov sti fimull mov mov pop lea jae adc mov sub mov xor lcall dec daa pop cmp dec pushf aas int lods push mov mov movsl sbb cmp pusha fildll cltd cwtl cmp int cld inc mov jge sbb xchg inc and call lcall sub lcall jb cld ret imul leave pusha jmp jmp pushl popl lahf mov call jle fiaddl cmp inc cmp inc push xor mov adc and dec lcall imul adc cmp int mov sbb (bad) jne scas ret inc jle pop jae pop pop mov (bad) into xor jo mov push lds push pusha imul loopne aam dec add vunpckhpd ficom mov adc sbb jnp inc ds or and jno inc or cmp (bad) mov dec insl mov das jno cld sbb jno aad dec pop inc mov call orl popa lret pusha xchg push and clc js (bad) pop mov pop jecxz lds (bad) jle xchg pusha test cmp aad test inc xor andl aam lret sub push mov pusha scas data16 js into loopne ds or sbb xor ret sbb pusha push arpl jb push push xlat jge xor jae loope mov sub dec or int3 fistl dec out mov (bad) jmp (bad) xor mov dec pop fcoml sbb sti jnp adc mov dec in sbb pushf fsts sbb in jne dec fmulp sub push subl adc xor lret sbb lea out xor pushf push lcall ficomp jo js push int sbb sahf cmove pop pop sarb lea popf (bad) dec push test fldcw cmc mov cld aam mov and push dec adc andl in sbb aaa cmp fmull sub fistp pop movsb pop (bad) jg fs dec xchg cli fs adc xchg adc lods add push scas cmpsl jns mov (bad) fsubr fs rorl or xor fs out es xchg push or add mov adc test test push cli ret in sub aad lods bound push dec or xor mov inc cmp das repnz xor mov shlb pop ret fucomip xor (bad) popf out scas cmc xchg out lea jae sbb inc repnz aad outsb mov dec mov xor xchg xlat pop lret pop fwait adc aas or js pop xchg dec jns pop and movsl add pop jno inc push aas mov daa pop cmp sbb mov xor jb es or dec jnp notl pop scas imul in (bad) iret stos (bad) mov push aad jl in ret adc adc stc push outsb out scas push mov lret movsb or jb xlat pop sahf lods (bad) lods les or xchg fdivr hlt jmp out mov into cmp pop inc mov test ds xorl pop ljmp mov call mov pop (bad) push lds adc cmp punpckhbw int3 mov adc gs (bad) lock lock sub jl inc test pusha add dec adc aas pop and out imul cmp xchg push sbb mov xchg (bad) pop in scas fucomi std stos mov movsl mov insb xchg imul addl repnz cmpsl cwtl inc lods sbb outsb (bad) cmove add sti xchg movsb lret pop mov xor out ret mov and leave int clc inc cmp rcl fdivrs dec pushf mov (bad) insl mov mov pop add imul jl arpl nop xchg fisttpll add add add add add add add pop sldt add add sbb add add add push add add add str add fistpl verr mov add rorb add sldt add add and scas loopne lcall or push cmp inc jne mov (bad) push (bad) test or inc mov xor dec jge and pop add cmp push stos push cmp dec mov push fmul ja movl jae outsl push push mov loope sarl inc imul add mov sbb push mov pmaxub std orb inc jge ds pop mov lret sbb jnp cmpb mov mov lods pop aam xor lods xor rcrb cmp inc je ss popf pop sbb jl push dec xor stos repz ds mov sbb mov iret (bad) lret adc cld inc mov adc mov cld fwait ds and into pop xchg out and dec lret pop mov cmpsb pop test fiaddl popa arpl mov mov pusha lea jmp movl pushf jmp jmp inc clc bts sub call and cmp cmp inc repz pushf inc pop daa in aas scas lahf adc imul fidivl mov mov dec dec inc popa ret jb negl push jp outsb mov jl popa push roll push cmp out dec stc add mov mov xchg cld pop adc push in out cmpsb dec cmp mov fld inc mov dec pushf sbb adc (bad) push andl pop xchg inc xor jp in fistp sub flds mov xor jge cwtl (bad) aad push scas sbb loop jecxz push lahf bound cmp sahf jl sub pop dec mov cmp out sbb (bad) lea jae cmc push push stc cmp call add adcl sub dec push and pop mov bnd sub xlat (bad) sub divb sub cmp lret xchg lahf lret call mov dec nop clc jecxz mov dec mov cs push mov xor cld or push imul cmp inc je mov dec aas adc stos fildl fwait sbb (bad) arpl add and push adc pop stc jmp xchg push add shrb xchg jmp dec test (bad) jnp,pt aam mov cmp (bad) fs (bad) ja fildll push dec and xor mov sub out mov cld mov xor push add not leave or xchg add addr16 pop cmc dec jg sub mov and mov lcall cld sub cltd sbb loopne loope push xlat aaa mov xor dec lea inc or fs jp cli out xchg jo xchg pop pushf mov dec push mov loope outsl sbb (bad) repz imul popf mov adc mov jne out jbe sbb inc pop lret aas push addr16 xchg insb orb pusha inc fistl icebp cmp test or popf sbb mov xor in push mov mov jb jne push jb shrl fdivrl out inc sbb jecxz (bad) fisttpl (bad) ja cmp out mov inc or inc lods rcrl ljmp outsl xlat cmp mov leave pushf test loope xchg icebp into inc movsl xchg mov jne xor sbb movsl jp into inc pop push movsb mov xchg inc xchg out (bad) arpl aaa loopne (bad) sub fsubl std sbb (bad) mov lret stos scas aad ja xlat mov fldenv dec repz pop xor jmp ss sub cmp pop mov loop mov rol fildl test sbb sahf cmp xchg jmp jb push mov inc lods push jge add dec push adc addl push jne movsl stos and mov lcall mov repz jno lods fsubrl or xchg cmc je add jns mov mov add xor jp jae,pn dec adc shrb aam mull sub push lahf adc xchg jae lcall mov ds mov (bad) inc mov lock cmp inc int rolb popa jmp mov jnp (bad) cmp out pop test movw lea jae push pusha push lea jmp add add inc add inc add and or add sub add add add dec clc pushf mov lea jbe and sub sar mov bt stc mov adc inc add dec shr btr pushf ror cmc mov btr shl add call loop lods inc inc or jnp sbb push (bad) setle repnz (bad) fmuls sbb xchg repz fdivs std rcll xor pushf jns movsb xchg mov (bad) dec cld sub dec test jecxz xchg call mov sub stos and mov mov fadds (bad) add fwait outsl nop add push xor shrb out lret mull adc pop cmp or hlt pop adc xor call mov test (bad) pop sub test and add mov pushf stos lcall in and out imul rcrl call pop jae xchg out jbe and pop jmp in jae cmpsl adc or mov loope clc xchg mov or mov jns mov jmp repz fidivl mov clc mov jbe fsubrs cltd push mov push xchg ret inc add sbb aas ds or aaa (bad) jne mov jo sub mov xor out or mov mov addr16 icebp and mov pop stc (bad) adc scas xchg pop iret insb test mov (bad) adc ret decb std push cmpsb and sbb xor adc cmp jg movb lea je movzbw not mov mov push movsbw mov movsbw setbe movzbw lea push pushl call cmp pusha lea jae pusha movl push pushf lea jmp add add rolb add and mov ljmp xor xor xor xor xor xor xor xor xor test mov xor xor xor xor xor xor xor lea loop jmp ss xchg ss ss mov ss ss ss xlat adc push aaa pop aaa addr16 (bad) aaa xchg aaa les into aaa fidivl in icebp aaa std aaa add or cmp cmp jnp mov inc cmp push cmp jb cmpl int3 cmp cmp cmp cmp cmp push cmp cmp cmp cmp stos ds fidivrl out icebp ds add push aas add add or add push xor jg sub jge nop xor xor xor xor xor xor xor xor xor xor xor (bad) xor xor pop xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub imul mov sahf xor mov mov xor in out xor dec ss lret ss or getsec adc xor aaa mov cmp cmpl and push cmp aad fidivr in cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and push cmp dec aas push aas arpl mov fdivrl add add les add dec xor xorl ljmp xor (bad) xor xor xor inc xor jae and fs jo (bad) xor adc sbb sbb jg xchg cmp cmp cmp cmp cmp xchg cmpsb cmp cmp cmp cmp cmp cmp cmp inc cmp jnp cmpb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and inc cmp pushf add or aas test into aas fnstcw loope add add add add xchg xor add xor inc xor insl xor stos xor xor xor xor xor xor xor xor xor xor xor xor xor ss popa ss mov xchg ss mov ss aaa ret aaa cmp inc cmp cmp cmp jns scas cmp out stc cmp cmp inc cmp push cmp push jne jnp xchg mov lcall cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp addr16 mov add push add faddl add adc xor xor xor xor dec xor test mov test xor xor jnp or inc xor mov ss ss nop ss ss ss aaa xchg cmp cmp cmp cmp pop cmp cmp cmp pop cmp movsl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sub cmp cmpl cmp hlt cmp sub das ds jae,pt jle cmpl ds ds ljmp aas insl aas jb nop aas mov mov aas in aas add add add xor xor insl xor xor xor xor xor xor xor sbb dec xor pop xor jnp mov mov xor js movsl xor (bad) xor or cmp push ss ss ss aaa jecxz or push cmp cmp cmp mov in cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp mov xor cmp aas ds ds ds mov sarb cltd aas add add add add push xor xor xor jbe movsb xor xor xor xor aad jecxz add or xor push cmp mov lret cmp cmp cmp cmp cmp cmp push cmp cmp cmp cmp xchg cmp cmp cmp sarb pusha aas mov mov addb pop add add xor outsb xor xor ss aaa and cs cmp inc aaa push aaa fs jns nop aaa mov into aaa (bad) divl add fs cmp cmp cmp cmp cmp cmp daa ds ds mov add nop add jo add sbb push popf xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub fdivs jecxz out aaa lods cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp repnz popf aas mov les hlt aas add add sbb and xor inc xor xor inc xor int3 xor pop xor sahf xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor jg (bad) xor scas fbstp and pop aaa jne mov xchg aaa loope imul stc cmp cmp cmp jl mov popf cmp cmp aaa cmp cmp cmp cmp cmp cmp cmp cmp cmp jo mov sarl cmp idivl sub enter add add cmp lcall xor les pop xor xor xor xor mov mov cmp cmp dec cmp mov into add add add xor add mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor aaa inc cmp add add inc xor dec xor pop xor xor je js jl nop xor les enter (bad) xor xor inc xor xor xor xor xor xor xor xor xor nop xor mov xor mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp jo je js jl cmpb cmp cmp cmp mov mov cmp cmp cmp cmp inc cmp push cmp pop cmp push cmp jl cmpb cmp add add add pop xor fs xor add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ss ss ss ss ss ss ss ss ss ss js jl xorb mov mov nop ss ss ss mov ss mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa insb cmp test pushf cmp mov mov cmp in in cmp add or adc sbb and sub xor cmp inc ds ds ds ds je,pt jl test mov xchg ds movsb lods ds mov ds fdivrl in in ds ds ds or adc sbb and sub xor cmp inc aas dec aas push aas pop aas fs insb aas je jl test mov xchg aas pushf aas movsb aas lods aas mov mov aas aam fdivrl in in aas hlt aas cld aas add add mov add add or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor xor xor xor xor ds ds mov ds sarb fdivrs loopne call add or adc sbb and sub xor cmp inc aas dec aas push aas pop aas pusha aas push aas cmpb aas nop aas cwtl aas mov aas mov aas sarb fdivrs loopne call aas add add jl add add or adc sbb and sub xor cmp inc xor push xor pusha xor jo js xorb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb xor dec xor pusha xor js xorb xor sahf aas mov add adc add add inc cmp cmp cmp cmp cmp movsb cmp les int3 cmp cmp cmp cmp cmp cmp cmp or adc sbb add add add sbb add call cmp cmp cmp cmp cmp or cld aas add add push add add xor and cmp inc xor push xor xor xor xor xor push xor xor xor xor xor push xor lock xor xor insb xor add add add push xor xor sbb sub inc ss ss ss ss je mov mov nop ss ss ss mov lods ss les enter (bad) ss add add add (bad) xor mov nop add or add push cmp cmp mov add push xor xor xor xor xor jnp imul aaa sub mov cmp cmp mov cmp cmp cmp cmp cmp cmp data16 sarb sub mov mov add add add and inc xor xor xor xor mov inc xor xor push aaa add aas cmp lret cmp aad cld cmp cmp cmp insl ds aas sarl (bad) aas add add add dec add add push xor xor jge int3 ss or clc aaa push cmp mov mov cmp cmp cmp cmp pop cmp cmp cmp cmp cmp cmp cmp (bad) aas loopne add add dec add add xor test or xor xor xor xor xor push aaa lret aaa (bad) cmp outsl cmp xor dec cmp cmp cmp cmp add ds les ljmp add add xchg xor xor xor xor aaa (bad) aaa dec cmp cmp cmp cmp cmp js in cmp cmp cmp cmp pusha and addr16 loop add add add inc add add xor xor xor xor xor push cmp and dec cmp cmp cmp mov fdivrs das cmp cmp cmp cmp pushf add add add inc add add xchg xor divl mov stc xor xor xor xor xor xor adc nop ss aaa cmp cmp cmp cmp push aas fdivrs in aas add add add adc add jno jno sahf xor mov (bad) mov push call ror mov sub stc not mov adc mov pusha mov clc cmp bt stc add stc cmc cmp not pushf jmp push sbb mov jae sub lret daa ja gs push test xchg dec aam (bad) (bad) xchg pop sbb stos mov int3 mov popf loopne loope aad adc sahf adc lods dec daa or (bad) cmp xlat xor add and cs adc mov mov icebp clc out xor sahf or pop out pop scas (bad) int3 lock (bad) fdivs and and daa inc sti jmp test add (bad) mov push or mov ljmp pop rcll push push (bad) frstor pop sub mov mov negl ja sub icebp into lods xchg fs inc jbe,pt in cmp sub and std add lods mov inc xchg shl ret cld mov xor outsl outsb fadds imul pop mov xchg mov stos rorb leave sub lock xchg jnp ljmp push cmc rcll std or dec pop sub inc mov fwait (bad) jae xor jb or lock mov mov into pop stos scas mov (bad) mov jl adc lret push push dec mov jae pop jmp aaa (bad) mov pop inc inc test xchg and and pop mov lcall aaa in xchg in stc mov or mov push test lea hlt stc cmp push or mov dec mov imul sbb js xchg lahf ds cmp dec out add or arpl imul ss sub mov pusha and bt pushf cmc add lea jmp add pusha mov push pushf lea jmp xor or cmp push xlat lock notb test pop lret lahf stc or lea jecxz pcmpeqd out shr inc mov pop outsb jb insb sub push sbb push mov mov pop pusha shll movsb movsb stos aad pop rolb xor (bad) (bad) adc lods jmp xchg mov xor aaa jp aad (bad) cmc loope andl or movsb mov xchg inc aam daa adc add xor mov aas sbb gs sbb scas xchg shrl sbb adc mov mov sub adc lcall adc inc sbb into adc in insl mov jmp mov cmp stos and jmp cli lret pop pop or xchg rcl xchg loopne fdivs scas fbld push pop daa dec push push push xlat inc xor mov negl xchg cmpsb sub xor aad jnp mov push lods xchg outsl sub je int3 add mov mov mov inc jb fistpl cmp (bad) in mov or daa fs pop call or mov mov repnz sti and push or rcr push movsb add or cmpsb jp xor in repnz mov or inc std lds inc ret jge cmp icebp jge out cwtl dec sarl cmp mov stos sar in in mov in mov jo xor test std and cltd mov ret sub pop not stc std inc mov pop insb loop adc aas pop mov jmp (bad) icebp (bad) mov pop inc cmp add (bad) push das jo adc imul inc jnp out xor fwait int3 jns and jne ret xchg pop sbb or rorl dec push test jnp bound test mov in cmpl insb jne pop adc xchg shll push loopne sbb fidivl xor mov sbb lea push add pusha scas push and icebp rolb jle jno inc mov rolb repz dec lret mov lahf cld jo addr16 std inc (bad) xor push imul into jno and int ret jne sub aad (bad) jb rol or lret xchg ret inc add (bad) scas sbb scas into scas add stc out stos (bad) shrb mov lods dec jns outsb gs and enter inc and jle dec sarl mov pop daa pop and imull jg xor mov lcall jmp cld jo pop jg adc push call fldt test and lret mov addr16 daa (bad) fwait rorl subl das cmpb pop adc sbb mov pop fldt mov or jmp lock jns test jmp dec (bad) xor mov dec test or or pop or out lret fucomi xchg inc dec inc fimul mov add outsl fs cmpsb jl mov into xchg mov or add jmp dec mov push sub lock mov int3 outsl mov mov dec js push jo pop jo adc lahf mov insb mov add (bad) jg int insb and cmpsb mov icebp test (bad) into cmc push push sarb xchg into jmp pop and inc push push imul rcr lea das xchg sbb fadds push cmpsl push repz test inc push or test in add or mov stc call pushf movb movl pushf push mov lea jmp and inc enter fcmovne (bad) cmp jbe xor nop int pop push into sub sub js adc inc xchg mov mov inc lret cli out aas fstpt out push sbb sub mov push scas sbb or das add int call (bad) lcall dec xchg jo and mov fsubr pop adc mov push movsl add or fwait sbb dec xlat jle loopne (bad) (bad) enter aas int3 cmpsl push aas pop xor and adc dec in stc push ret jmp fmull mov fstpl scas xchg push adc sarb jbe mov pop xchg cmp iret push test int cmp ss pushf jmp movzbw pop not pushf mov mov xchg xchg mov not movl pop mov pusha movb movb pushf pushl ret in cmpsb dec pop or sub lret aam mov add xchg shrb jg (bad) xor xchg repz mov daa pop mov repnz add dec add pop pop cli (bad) mov (bad) pop pusha pop inc stos fimull std sbb jbe and cmpsb mov sahf and dec and push fstpl or stos insb push dec and add mov dec sbb push cwtl gs (bad) mov push xchg iret add arpl adc xchg testb repnz mov jae insb mov subl pop sti and cmp or xchg movl (bad) (bad) call jmp jmp mov std adc inc ss or in inc int3 cli sti lcall je mov sbb mov imul lret fist cmp mov sub fisttpl mov xor out pop lods jmp sbb mov mov add xor and or push adc sbb mov insb dec mov lods popa jecxz fwait dec aas xor stos call out jns,pt jb jmp jns lahf jecxz jl pusha jae inc push xchg test and xchg outsb xchg loop je dec lea les insb add xchg (bad) aaa xor nop sbb fcompl lcall lods xor cmc cs idivl hlt xlat imull out add lahf mov sahf xor adc js lea push mov sbb out adc fimull test out and inc popf adc int3 jecxz enter in idiv jg jno inc iret arpl push or ficom inc dec int pop inc int3 or cmpl push mov jmp into sub not movzbl mov call pushf test test pushf pushf pushf lea je bt jmp daa sub int or pop fs wrmsr jle stos inc daa dec cmpsb xchg pop cmpsb fnop xor cwtl mov js scas push arpl inc cmp xor cmc mov or aaa rcll sbb adc or cmp fdivp es jns push sub xchg out add and dec in cmc sbb mov (bad) fstpl out pop mov aaa cmp mov shufps dec xchg push int (bad) aaa mov shlb cmp out add inc inc mov and push into (bad) mov in or add lock and pop arpl inc xchg pop cli enter icebp xor pushf or and xchg rcrl (bad) or js jmp cmp mov and xor push adc lcall or fs pop dec or notl iret and imul mov inc sahf (bad) ja and mov jge mov jo je inc xor pop popa mov jle sub icebp sti out cltd inc push mov mov mov mov lea pusha push pushf pushf lea call pushf pusha adc pusha pushf pushf lea jae pusha push mov call push lea jae call lea jnp xchg pusha pushf movl movl pusha mov push push mov pushf pushl ret mov push mov pusha lea jmp push lea ja lahf xadd aad mov jle daa shrd lea aaa das clc sub ror lea aas lea shl bswap lea and bsr mov sub lea mov mov bswap push mov pushf popl movsbw push not std mov bswap ja not pusha lea mov pushf call call setp jl not pusha mov lahf mov mov pusha pushf mov divl call xor mov neg add mov cmp test add call pushf popl call call push jmp and pushf cmc test cmp jmp stc shr pushf jmp pushf mov mov call pusha jmp jno and clc mov mov setbe dec mov test push pushf sub pushl test cmc shr pusha call cmp test not pushf not stc clc sub bt clc bt push and push mov mov push pushf popl push pushl popl push lea jmp mov pusha push push pushf lea jmp bt xor movl jmp mov mov movb pushf jmp sub xadd clc mov pushf and not shl mov bsf bts mov shr pushl popf pusha mov bswap lahf mov pop push mov pop lea mov lahf pushl lahf mov lea mov seta xchg movzbw mov jmp test add push mov push mov pushl push pushf lea jmp pushl popl mov lea jmp pushf lea pusha mov pushl pushf pushf lea jmp push pushf mov call call lahf shr mov lea not ror mov stc add pushf mov movw lea jmp shrd mov push add pusha push lea jmp mov movb cmp pusha jmp push push mov pushf mov jmp stc pushf shr call pushf pusha mov xor rcl stc mov jmp pushl popl movb push lea jmp xor movzbl bt call jmp mov call mov pushf movw mov push mov jmp cld call pusha pushf pushl mov pushf pushf pushl lea jmp aad push ror mov stc clc add cmp sub pusha test movl add cmp neg stc clc pushf call call push movzbl cwtl lahf mov movb pushf mov push mov push movb lea jmp mov mov pushf mov pusha mov pushf pushf jmp push pushf lea jmp test cmp call mov jmp cmc sub test cmc add call aad shl daa stc mov sub stc cmp rcr mov cmc cmp sub jnp shr pushf pusha pushf movb mov jmp pushf jmp pushf mov movb pushl pushf lea jmp pushf jmp shr add btc mov cmc push sub movb call movl jmp stc movb add jmp call pusha call rcr bt lea call mov movb call lea jne bsr adc rcl rcr xorb not pushf lea lea mov mov lea jmp add jmp ror add pusha mov mov call sub pusha lea jne clc xor call call call sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call jmp jmp lea jo push pushf mov jmp pushl pushf mov push pushf push movb lea jmp pop movsbw mov jmp stc bsr mov mov pushf pushl call jmp call mov pushf pushf push lea jmp lea cmc bt sub pushf stc clc mov add lea jns pushf clc neg stc ror call pushf neg ror add add call ror cmc pushf cmp sub cmc call pusha movl mov movb pushf mov lea jmp call setno mov jmp mov mov jmp daa aaa add mov sub sets call mov movb push lea jmp pusha pusha mov jmp call call pushf mov call call rcl pushf pusha mov btc adc not data16 repnz cmp add jmp call mov mov pushf movb lea jmp bts ror cmp and mov call pushf pushf add bt call pushf popl jmp mov movzbw mov jmp pushf popl lea jno push movb pushf pushl popl pushf push push lea jmp jmp bsf bswap lea movzbl dec clc add shl bts sar add lea test not mov or neg ror and add pushf push add dec mov call pushf popl pushf pushl popl pushl push movb movl lea jmp call pushl movb mov movl pusha mov pushf mov push mov push pushl ret mov movw pushf lea jmp pushf lea jmp clc add push push mov pushl lea jmp pusha mov movb sub mov cmc shr jmp call rol mov call mov pushl pushl jmp jmp jmp call pushf popl lea jo pusha pushl popl pushf push pushf lea jmp movb push pushf divl pushf mov mov mov call bt sub mov mov mov mov mov push pushf lea jmp pusha call mov xchg push bswap mov pusha not pusha mov jmp xor bsr aaa shrd mov stc cmp sub call mov push call pushf movb mov pushl mov pusha pushf lea jmp mov pushf push movb pushl ret pushf push call mov mov pusha mov push mov mov pushf mov call not inc bt stc rol not not mov pusha inc and ror add call mov jmp mov mov movb mov mov mov lea jmp jmp cmc stc sub stc stc xor call pusha mov jmp add call call mov pusha pushl push pushf lea jmp mov jmp rol movzbl push add pusha pushl inc call mov pushf jmp push mov pushf pushl jmp movw pushl popl movw push lea jmp pusha mov pushl jmp push push inc jmp jmp pushf mov jmp call push pushl movb mov jmp push push push pusha mov movb pusha lea jmp jmp push pushl mov movb push jmp pushl popl movb mov mov lea jmp lea mov and test mov call pushf mov mov movb pushl push mov lea jmp jmp pushf pushl pusha mov jmp bt add mov mov mov lea jmp jmp push mov pushf jmp pushl popl push push lea jmp pushf mov pushl mov jmp bt clc sub pusha mov push call mov mov call mov call mov (bad) xorl incl xchg incl mov or (bad) fmuls mov inc jle (bad) cmp xchg mov jmp popf mov lds mov push mov incl incl mov mov call xorl incl mov adc mov and mov into xchg mov sub mov jg mov inc test (bad) cmp cltd mov bound mov sbb dec xchg mov mov jle incl mov call mov mov mov fadds mov aam mov mov xorl xchg mov inc test (bad) call pushf mov adc mov dec jl call xorl lcall jle decl xchg mov adc mov sub mov mov lcall inc xorl call test pushl ljmp xorb mov mov (bad) mov mov incl jge call xorl (bad) mov lcall adc mov inc xorl (bad) mov xorl enter add mov sub mov inc jle incl mov inc jle (bad) mov xorl (bad) fadds mov sbb incl mov mov xchg mov inc xorl incl incl mov enter bound mov cmp test jmp xorl xchg mov (bad) test pushl mov mov mov sub mov loopne mov inc xchg mov push mov lcall test incl mov sbb jmp xchg mov bound mov into xchg mov inc jle jmp mov lahf xorl cmp mov (bad) call xchg decl mov cmp cmp xchg mov push mov decl xchg mov je mov je mov inc xchg lcall jle decl mov sub mov enter bound mov mov jl call test (bad) mov xchg pushl mov inc xchg mov mov mov call lcall mov jg inc cltd mov ljmp (bad) cmp xchg call fwait mov or lcall jle decl xchg mov ljmp call xorl dec popf mov inc test (bad) mov fwait mov (bad) test call test pushl xorl aam mov lahf xorl scas xorl call mov inc xorl incl mov loopne mov fmuls mov adc mov call xorl mov dec pusha mov pushf cmp add pushf pushf pushl mov pushl push lea jmp push pusha movb mov pusha pushl mov movw jmp mov jmp pushf test pusha movw neg call cmc (bad) hlt cmp bsr mov movsbw xor adc mov jmp not clc not cmp jmp inc push test cmp pushf neg pushf clc ror cmp mov clc sub push pushl clc clc mov push sub jmp mov call pushf call rep btc mov cmc add mov movb pushl popf pushf mov pushf pushf lea jmp pushf mov jmp pusha mov call stc clc add pushf mov mov push movw movb lea jmp pusha movzbl mov movsbl movsbw pushf pushf xchg lea call pushf popl pushf mov pushl popl pusha pushf pushf lea jmp mov mov call adc mov pushf stc mov call pushf pushf mov call cmp mov cmp add stc clc stc movl mov movb sub call call pushf call mov pushl push movl lea jmp mov mov lea jmp cld pushf rep shl neg pop mov clc rol mov std pushl popf mov movb mov mov lea jmp mov pushf popl call pushl popl mov pushl lea jmp mov pusha jmp jmp push mov call jmp xor pusha mov pusha push neg pushl dec cmp cmc cmp cmp bswap cmp stc pushf stc xor cmp clc sub clc call add jmp stc movzbl bswap rcr shl bsf sub setg movsbw mov inc neg shld sete clc neg mov cmc push ror bsr sub rol rcl mov stc pushf pusha cmc add pushf call pushf call pusha pusha add call data16 repnz mov pusha call push call mov call bswap movsbw xchg lea xchg lea push pop pusha xchg mov repz popl setnp bswap pushl popl not push movl push mov lea dec mov movsbw pushf inc ror call pushl lea cpuid stc pushf test sub stc stc mov stc cmpl pushf push mov mov jmp push lea je push sub cmp cmp xchg stc mov cmp clc jmp or call bts mov sub test sar mov pushf call mov push movw pusha lea jmp mov xchg movsbw movzbw call jmp push mov pushf pusha mov push push pushf lea jb push jmp push mov mov lea jmp call mov mov mov movb pushl ret lea cld push pusha not mov pushf cld jmp mov call mov jmp sub pushf mov mov pushf pushf pusha push lea jmp cmc movb rol push call jmp mov pushf pushf mov pushf pushf mov lea jmp pushl popl pushf pushf pushf movb lea jmp mov jmp jmp push pusha jmp pushf mov mov mov pusha mov call mov pusha movb mov pushf pushf mov call std call lea movw xchg not pusha mov pushf jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp jmp xchg cld pusha mov mov call call lea pushf pushf movl jmp not push pusha pushf mov pusha mov jmp push mov call call pushf pushf pushf popl jmp bt cmp mov bt add cmc bt shld pushf jmp push mov pushf pushl mov mov push pushl mov pushf call push push movb pushf mov lea ja pushf mov pushf push jmp mov call mov push pushl mov pusha mov push jmp cmp add push mov lea jmp movzbw sbb lea rcl shl sub bt lahf lea cmc sbb and neg data16 (bad) jno or enter (bad) decl and movb pushf jmp jmp movb mov call pushf movb mov movb pushl lea jmp mov pushf pushf lea jb push jmp pusha pushl popl pushl movb pushf lea jmp call shr aam mov xor stc rcr rcr mov jmp pusha mov call shld mov jmp jmp add add movw pusha pushl popl push movw lea jmp movb call mov push mov push movb lea jmp jmp jmp sub push mov mov mov push movb movb lea jmp pushf call dec mov stc pushf sub stc pushf clc bt add push lea jp pushf pushf popl push movb pusha pushl popl movl push lea jmp call shrd aaa mov bswap not bt mov jmp pusha mov call bt add pushf jmp mov movb push pushl pusha lea jmp pushf mov push call movsbw movsbw mov pusha pusha jmp (bad) testb aad push pushf sub dec neg sub adc add jmp call pusha pushf mov push pushf call mov push mov lea jmp mov push push mov movb lea jmp call pusha movb pushf mov jmp movw push mov push pushf push pushf popl pushf jmp stc call push mov pushf mov call call push push movb movb mov pushl mov push jmp mov call mov pushl pushf pushf lea jmp movsbw xor mov jmp mov mov movw pushf popl jmp test movb stc add jmp inc clc shr mov sbb call mov movb lea jmp inc push push mov pushf lea jmp stc stc stc shl movl mov pusha mov mov jmp call pushf pushl popl mov lea jmp shr mov movsbw dec bt mov rcr bt mov cmc test pusha stc add pushf shrd call xchg mov cmc shld adc mov cmc clc pusha add pushf call test sub jnp add push jmp bswap pusha jmp jmp movb jmp sub call sbb shl clc mov jmp mov pushf push movw lea jmp inc setb sub call pushl pushf pushl popl movl mov mov lea jmp call movb mov pusha pushl mov pushf call add pusha pushf mov movl call sub push call jmp ror xor rcl mov shrd pusha pushf xor push bswap inc not rcr clc ror movsbw dec movsbw bt sub data16 icebp xor movsbl pushf not inc rol add cmc lea movzbl push cmp mov jmp not aam mov bt jmp mov pushf popl jmp mov pusha pushf movl lea jmp jmp mov push mov push mov pushf call jmp pushf pushf popl pushf jmp mov mov lea jmp push pusha pushf mov movb mov call btc lahf jp xor mov shr shld dec clc mov pusha add jmp add btc sbb not sub neg call pushf mov jmp mov push pushf mov pushf mov movl lea jmp pushf pushl xchg pusha pushf jmp inc rdtsc stc test test sub pusha mov pusha mov mov mov lea jmp test btr sub mov add btc bts jmp stc sub pushf movb mov pushf lea jmp mov pushf pushf popl movb pushf pushf call pusha pushf pushf mov push mov movl lea jmp shr mov sar dec adc rcl mov push cmp mov pushf sub pushf bt shl call dec mov jmp mov mov lea jmp pushl lea jne xor mov cmc test call mov call mov call mov movb push push pushf lea jmp pushl popl push pushf pushl lea jmp mov push mov jmp call bt pusha sub cmp cmp pushf cmc and jmp jmp jmp movw jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp pushf pushf popl push movb push pushf pushl popl pushl push mov lea jmp pushl ror clc clc cmc bt sub call sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp lea jbe mov call lea jge push mov mov jmp jmp cwtl cmp clc clc cmp sub pushf mov pushf pushf pushl lea jmp pushl mov pushf lea jmp pusha mov jmp jle cmc rol mov stc dec bsf bswap mov jmp movb jmp inc pushf clc bt add jmp xor neg movzbl cmc call bt rol lea dec cmp add pusha lea shrd bt sub rcl mov shl bt mov bsf bswap add movzbl mov sub shrd cmp rcr xor rcl pusha rol lea bswap sar not movzbl xor shrd setb (bad) cmc shl xor btr rcr shr rcr movzbl mov pushf lea adc cmp neg mov test pushf bt stc neg jmp shrd not mov stc bt stc add pushf mov jmp call pushf mov jmp mov push pop mov mov pushf mov call mov pushl mov mov pushf mov pushf lea jmp popl push pushf push push lea jmp mov push call pusha push sub jmp call mov pushf pushl pushf pushf popl jmp call jmp xadd aaa bswap mov mov shl call cmc pushf add call mov mov pushf popl lea js pushf pushf mov pushl popl pusha push pushf push lea jmp mov mov push pusha pushf lea jmp mov push mov pushf jmp call movb pushf jmp movw jmp pushf mov mov mov pusha pushl lea jmp clc pushf and pusha movw mov mov lea je pushf pushf jmp mov call mov push pushf lea jmp movl pushf popl push call jmp call pushl popl pushf lea jmp pushf pusha mov pusha pushf mov movb push movl lea jmp not mov pop movzbw mov mov movsbw mov pusha jmp sar xor mov clc jmp xadd sar shld mov pushf (bad) icebp mov clc sub cmp test pusha shl pusha mov call call call mov pushf movw push pushf lea jmp mov mov push mov jmp pushf push mov mov lea jmp cmc cmc pushl popf pushf mov pushf lea jmp mov pushl mov jmp mov pushl popl mov mov mov movb lea jmp notl or shl mov jmp pushf mov pushf mov push pushf pushl ret mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp rep add data16 (bad) mov shl shr test mov test clc cmc test pushl popf movb movb lea jmp clc pushl popl pusha jmp push mov jmp pushl mov pushf mov jmp btc add adc and add push mov jmp pop add add inc inc add test or add inc roll add add mov add sarb add push lldt push lldt push lldt push ltr push .byte 