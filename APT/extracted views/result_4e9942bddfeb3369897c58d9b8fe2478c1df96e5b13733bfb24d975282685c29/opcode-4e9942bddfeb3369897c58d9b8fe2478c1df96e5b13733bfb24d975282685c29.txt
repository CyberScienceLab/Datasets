call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add push mov push push lea push mov push (bad) or add call test in mov (bad) jne push pcmpgtb push mov pop leave ret cmpl fisubr adc adc push (bad) in fstpl and push sub test cld (bad) call aas iret fldl or push push jne in enter adc je jnp push adc jne or clc push adc cmp adc out fwait call fimull pop mov or (bad) sahf and pushl or out mov jne cmp jmp xor ret ret lahf fisttpl lds jne mov (bad) aas mov rorb jnp sbb sarb je push push call mov je xchg sub or popa sti mov and jae shlb xchg xorl jmp hlt pop adc jge je cmpl jbe or add (bad) mov xchg insb add neg sbb inc mov out mov (bad) cmp ja xchg and mov adc (bad) ja (bad) in and call sub mov ffreep imul adc lea jl arpl pop dec out imul fucomi pop add push push dec push mov inc mov mov outsb pop incl jl mov or mov add push push mov div out pop lea lret and (bad) or or leave add inc cmp adc leave lea sbb push sti fucomi inc and int3 loopne inc cmp mov jae (bad) fisubl jle inc fincstp mov push (bad) xor pop dec or mov mov or into andl pop push inc xchg iret mov dec mov add add dec dec dec xorl xchg adc cmp mov cmp leave andw mov popf movl mov pop loope pop pop or push xchg and ljmp add inc xor in or mov mov lea mov pop sbb outsl decl out rorb push add jae jae ds mov addl and mov (bad) lods mov add sub out (bad) dec in lahf lock inc push cmp push shrl loope xor mov inc push push sahf or pop imull xorl add mov rep or clc add or out sub ret adc cmpl dec mov imul rorl mov push sub (bad) mov mov push pop add pop sbb mov into or decl mov jbe add xchg dec inc mov leave enter inc rorl fisttpl xchg aad cmp fcoms push fadds nop test sbbb shrb divl jmp jecxz dec cmpsl cmpl xor sbb mov mov je mov ret mov (bad) push lea push push push repnz mov or pop pop repnz push stos icebp out or jo dec ret add push push mov mov lock push mov mov inc icebp (bad) neg push add leave adc push or mov test std into inc push mov orl sbb mov scas mov mov arpl neg adc sbb add mov xor lea mov add xor mov adc insb add lea (bad) lock cld js or xor movsl lds add sbb mov testl jb jmp add add sbb cmp sub add fiaddl jg mov mov mov add mov and mov test push xchg aad adc mov fcmovnu (bad) (bad) xor stc nop sbb add ror push sbb iret lods in inc jae jne jge inc (bad) hlt sub pusha adc adcl mov cld xchg pop adc sub sub clc mov xlat push dec outsb orl push push loope aam or or std sbb aas mov lcall pusha dec or test mov and enter pusha sub adc leave (bad) sti popa pop jge cwtl in dec arpl cmp ret in mov (bad) jg movsb (bad) into push or xchg bnd mov cmp jle cmp cmp and cmp cmp push gs je xchg sti outsb xchg inc adc flds (bad) cmp (bad) jge fwait push (bad) pop fild mov lret mov inc adc inc add mov mov out jecxz sub pop loopne push js fistpll xchg or cs imul div xor decl mov inc mov or or or adc or cli mov sarl mov push (bad) mov lea adc dec lds dec adc popa sbb add or xor test mov xchg and xchg xchg fnstenv and inc dec jb and and and mov je mov inc movsl movsb pop push adc test (bad) loope push inc mov pop movsb shrb mov mov mov (bad) fstl adc push and out lods outsl mov sub pop incl pop xchg mov inc add jge popa std fucomi (bad) or movl fs mov or movsl lods incl sbb sbb clc pusha (bad) in outsl test mov sub xor mov sarl add xlat mov or sbb cmp cli adc cld add stos in std sbb mov aam cmp jae jnp xor cmp je popa inc popa fdivrs xchg cmc call ret add sub mov jmp mov sub add adc adc adc in int mov arpl in call mov fcmovnu enter cmc adc out imul jmp stos push call xor or (bad) movb sbb cmp (bad) mov add shr push xor sarl fdivrl mov nop mov add or ret lea cmp or (bad) lea fldl sti or add cmp pop decl cmp hlt scas jle cmpb add popf sbb push mov rorl or add subb fimull pop clc (bad) jle jl mov push lea lea mov incl mov jns adc lea lods mov dec add inc pop pop push fisubrl pop push addl pop pop imul dec xchg adc aad lock jle bound insl stos xor push pop adcl xchg fdivl ss xor rclb push adc outsb in (bad) fdivs sbb aad and push sbb sahf xor shll xor sbb mov ret xlat xor and mov andl add ret lea sub (bad) negb and or mov fstpl mov sub push add xchg in sbb or xor dec fs adc imul xor xor adc or adc mov les xchg pop sarl xchg add inc push cmp loope jbe pop mov add xchg je jl mov jmp xchg lods xor xorl inc lahf je rclb (bad) mov and add cmp sub push cmp lea mov fucomip add xchg sbb roll (bad) sbb cmp jl pop out fstp or jmp mov dec rorl (bad) bound js jecxz and adcl testb push push je cmp lea jg enter mov mov (bad) mov cmp xor lea lods and mov push pop mov sbb add mov adc aaa mov pop fisttpl addr16 js pop inc and mov fistp cmp loopne add or shrl pushl jle (bad) push mov push or fcoms add pop popa insb rcrb (bad) and push dec mov mov aaa push sbb push adc or cwtl shlb add cmp insl or adc cwtl aam dec in add imul enter push sbb push test add push or rcr pop jnp inc adc or (bad) mov lods mov imulb pop xchg mov lea dec adc push nop or movsb add cmpsb sub leave xor pop fsubrs mov push adc or pop or scas xchg nop js shrl push add or sahf lea adc jne lcall add mov es mov mov pop push xor add sub adc leave (bad) rcrb push xor adc pop adc xchg push inc pop mov cmp (bad) cld xchg xor dec stos sub add jnp and cmc mov mov fs decl cmp jo notl js les inc add mov lock cmp aas repnz push mov lock loopne pop nop jle mov scas insb push ljmp int sub lea xor cmc call add inc sbb fildl xchg vmovsd adc inc dec mov pop inc mov imul pushf faddl enter pop jo ja adc adc insl insl std ficoml andb or inc jae,pn int3 (bad) lret pop and mov roll and mov jbe outsl aad mov sub aas jns (bad) mov mov mov sbb sbb xor pop or clc cmp jae inc adc jnp das inc cmpl dec inc js xchg rolb insb mov inc repnz push std pop iret push pop imul insl add dec jns sbb sbb sbb in xor sbb push mov inc dec jns mov mov jbe dec mov negl cld add sti aaa jg or push mov cmp add sbb in cmp sub fdiv jge xor push and dec and inc dec jbe inc mov cmp subb dec imul pop adcb or inc and js popf xor insb xor call cwtl xor push lock adc or fsubrl (bad) pop jo add push adc lret mov test add fstpl push push push and xchg dec pop push push mov test push ljmp mov hlt and and or (bad) lock loopne inc int into push push push jbe jge adc cmp test xchg mov push push mov push add mov lock jne adc pop mov pop jmp cmp daa sarb cmp add sbb jmp lea inc aaa insl push xchg out or mov push adc shrl cld jbe (bad) or jae insb push stos add and iret xchg push jne das inc push inc fcoml jl jmp imul ds adc mov cmp outsl push cmp outsl add mov inc fwait xor jmp (bad) fbstp lea fcomps jns sarl add pop mov add les add add cltd pop fldt push push add mov out test sbb in adc or hlt jbe test sub jnp test sbb mov les sub cmp fldl mov test imul xor sub lods (bad) ss xlat cvttpd2pi mov and pop pop aaa adc add jg jbe sub mov inc add mov lock gs lods mov adc jnp adc cli hlt xor pop or cltd imul mov dec jmp cmp adc cmp push insl mov sub mov mov fdivr inc push inc or add push aaa and insl add leave mov mov adc adc pusha sbb repnz mov rcrl stc out test lea sbb jae mov xchg push adc shrl sub add mov xlat push movhps or jne bound jo lahf sbb inc mov cmp cld mov adc outsb mov ss cmp xchg cwtl add imul xor push xor sub mov inc loopne xor enter jg outsl imul add testl mov pop inc aas mov mov pop ret mov push lods push mov pop pop adc jle jmp mulb sbb pop mov push push and test mov or js fidivr (bad) push push sub ss lods pusha es je jl jae xchg outsl notb and (bad) add pop pop push fwait outsb outsb pop pop mov dec lahf mov mov or and mov xchg lds or pop cli xchg cmp push cltd pop idiv mov lock cltd or outsb mov cmp or aaa add pop push adc push (bad) test test push pop dec pushf pusha jecxz fcmovnbe hlt or dec xchg inc aas push insb pop sub roll mov test mov rcl sub ret ds mov (bad) jo out cmp sarl and mov (bad) push fcomps cli sub xor dec add or mov div loopne inc or addl cmp cmp mov jne push cld jp or mov mov add inc jmp lea or negb sarl jmp adc insl popa lds xor popa sti push cmp add mov inc pushf jl push jl in sbbl add add cmp sbb lods scas or lock inc clc sbb sbb inc xor inc add cmp loopne in sbb sbb push sbb pop xor inc dec push add mov xor cmp mov add jg js ret or xlat notl movsl push fdivrp decl cmp jae test jne dec cmp jl or mov add xor mov xor aad inc cmc mov cmp fstpt ret xor jb cmp jbe cmp pop sahf jbe cmp (bad) jbe cmp hlt insl pop ja jbe (bad) inc push cwtl lcall cmc test mov test xor insl adc push call aam pop sbb scas jle (bad) jle lea push pop and pop popf cli and jle add and sub mov cld fldt pop jae aad popa jnp cmp arpl or daa mov ja push mov push or ret xor cmp adc mov sti test pushf and pop add jne test loopne add fwait loopne push sbb cmp pop lea (bad) or add mov bound cmp jnp mov and sbb mov xor adc adc push pusha mov test dec adc add xchg aam rolb add add orl or outsb dec insb cltd xor or xor loope sti cmpsl pop push pop jp xchg aam insb shlb or adc mov lods (bad) sbb adc fs in cmp ret outsb pushf push dec or daa call jnp rclb fistp scas in or push jl push push mov fs int3 push adc inc sub fisttpl push sbb inc shrl mov notb inc inc (bad) rcr mov pop icebp xchg mov cs ljmp or fwait idivl ret je mov jmp pusha inc push jge notb adc and and jge inc add enter and pop (bad) adc adc (bad) push call roll in sub or movsb jle (bad) push push xor jmp xor and push pop push cmp fdivrs cmp push call xchg lea fistpl cs xchg adc mov add mov lock clc xor or dec mov lds fstpt cltd xchg stc add xorl mov fdivrl fldz fld fucomp fnstsw test jp lock sub fstp fld1 fxch jb jle lea mov add lret jmp loop in adc (bad) xor ja imul push lea add in xchg pop sti mov std jge std jmp incl fmul fcompp jne je clc mov cli sbb (bad) fsts fmuls pop mov add in ret mov xor test add movsl leave jo xchg mov and jg test push or or (bad) jns sub cwtl add adc lds fnstcw mov fadds add fwait or pop les sbb push sbbl ret sbb xchg add scas adc popf xchg and outsb mov jmp sahf sub std xchg fstpl das movsb clc or dec sbb or sub jl mov inc xor in mov push cwtl and or add pusha insl mov mov pushl call pop stos in aam mov stos js or inc std push push xor cmp bound mov testl or movsb mov xor push loop add and jp addr16 add std add cmp scas ficomp jbe inc sbb jns cwtl or sti fadds rorl leave cmp xor enter roll je lock sahf stos jle das mov xlat xchg jecxz add shll push sub push or lods push sub aam push pop hlt cmp (bad) mov inc cmp movsl push leave rcrb jle and or adc shll jnp and stos inc jae jle push lea mov ret fiadd in push push jge flds hlt ficompl or movsl lods xchg sbb (bad) out push (bad) fldl pop push pop push ljmp push lock nop movsb pop test lods sub fisttpll dec mov aam adc push jmp xchg pusha les dec iret rcl sbb ss xchg data16 sti inc aas negb call cmp mov adc mov adc adc push pop (bad) mov rcrb push ja in outsl ds je dec je add in imul or mov hlt or dec or subb shrb loopne sarl mov fstpl add push push outsl mov or xor fstps pop pop pop jne pop adc cmpl sbb mov mov (bad) dec aam neg sbb and lcall mov (bad) push outsb jae xchg add sbb les fildll js mov dec adc fistl sbb sbb mov orl sbb sbb push adc pop mov aam mov push mov mov mov addr16 adc sti (bad) mov push jne add jl lahf inc dec ss rclb fcmovnu add adc or unpckhps cmpsb je negb dec sub popl sbb or xor les sarb divb ljmp test sbb cld sbb sahf mov je sbb sub mov dec shr es lock fs mov and xchg fidiv loope (bad) andl lahf xor mov mov dec cmpsb jnp adc cs adc or movsl clc dec les jge push iret cli or add push cld cmpsb lea shlb cmp jbe pop (bad) je cmp jb enter sbb xchg inc and loope mov (bad) push push test leave or rorb insb mov int push push mov (bad) pusha and insl dec push or mov rcr scas adc mov add pop mov (bad) pop cmp lea dec leave mov es cmp or cmpsl or sbb xlat sub cmp lods pop pop leave ret aaa push push popa pop dec js push adc or shrb or loopne cmpsb inc xor lods fiadd paddsb mov pop insl push aad dec mov (bad) cmpsb cli pop mov movsb and sub rcrl stos cld addl add cmp test (bad) je mov adc add out push xchg jne xor sbb insl xchg add ja and xor aas adc sbb cmp out (bad) mov dec push cmp jne lods push fisubl or xchg sub loopne add loopne fcoms cld ds push faddp pusha xor mov add ret and push xchg add pop sbb mov addl mov or aas lds sbb test or adc pusha lcall jmp mov sbb sbb xor fcom pop ret pop pop fcoml test inc xor jg (bad) add ss xor in mov sub and addb jmp fiadd adc enter mov pop push stc movzbl leave or into push adc cmovle shrl sbb adc je sbb cmp les xchg sub iret mov fildll enter push wrmsr neg lods cld out dec adc push pop sbb in mov ret sub push push repnz sahf mov cmp shlb fcomip gs push or rolb aas add add xchg mov (bad) sub jmp mov cmp hlt sbb or les mov into lcall loopne daa mov in fcoml and push sbb add lods adc cld add imul and add pusha pushf lret inc sub sbb push dec push test in in (bad) sti add dec por jb push xor mov add xor mov cmp cmp pop or sub mov and leave mov outsb mov cmp xchg daa push push mov rclb push inc adc adc loopne push mov adc js ret fnsave xorl adc ljmp iret fcompl sbb fisttp add or jne imul sbb jne and popa or and pop inc mov or dec rcrl sbb not pusha pop adc xor sbb and js (bad) icebp mov adc inc or dec test aad cli cmp or shlb in mov and push (bad) push push mov xlat (bad) add sub or inc rolb (bad) mov lret mov rcl stos aad adc flds (bad) fadds call cmpl or mov add adc (bad) mov je into cmp sbbl in pop bound dec js je or je loopne rcrl add int3 push test lea jl (bad) cs add sbb add dec add push int3 sti fcoml outsb add push imul cltd push mov cmp addr16 movsb mov mov loopne movsb inc mov test jle outsl or aam xchg mov xor inc lock inc (bad) fcoms or cmpsl outsb adc add mov jnp push mov inc loope add jbe mov add xor push inc xchg (bad) fstpt sbb mov lods lea mov jnp loopne out mov xor push lods dec jl mov push mov scas adc push ja push fcoml rcl inc test and scas shlb enter fdivl les mov bound (bad) insb pop mov jmp adc out les add or iret dec ret inc rclb or cmp jo pop add ret xorb jne jo test shrb cmpsl lock add enter mov rorl pop mov cmp add inc cmp fldl aaa and add movb and push sub fistpl xor sbb push cmp bnd clc sub sbb dec inc popf add add movsb mov stos sbb or fisttp loopne dec leave push in inc inc cs and addl xor jl mov push mov (bad) ljmp or mov adc cltd and add cmp sar inc shl cmp jp mov inc or enter push jne pop (bad) pop outsl aaa bound call add jmp mov pop ret pop nop mov push rorb push mov dec (bad) mov add pop js mov or sbb scas js jg push cmp jl cmp add cmp mov inc sub cmp dec dec sahf push mov outsl add adc pop clc iret outsb push adc inc adc les add push outsb push sbb sbb clc pop fs add xor push outsl pop sub shlb push add fsubs mov sbb add or jnp mov pop in pop push mov sbb fs fcomi je push lods cli insb cmp jle push bound clc int3 dec adc jne lods sub adc or clc xchg xchg jo stos push push fbstp dec inc mov fistl lea dec sbb popa hlt inc cld jne mov sbb add int add cmp mov xor int add aaa (bad) mov push add (bad) adc dec push adc std sbb push mov mov adc (bad) ds or mov xor adc adc push mov add mov xchg mov movl repnz cs mulb dec add or or mov mov jbe (bad) adc lds sub and lea sbbl pop mov or fidivl and in and (bad) push repz ss fdivl sub add add cmp ja daa xor add cmp xchg insb xchg popl sub push mov lds ret clc push push fidiv mov in loopne sub push in stc pusha add sub xchg add clc lea cmp xchg ret sarb or inc add mov inc pop jbe dec sub fsubrl inc in sub cmp jbe adc fdivl mov stos fdivrs push mov cmp imul clc add cmp jl cmp (bad) decl pop mov mov mov mov (bad) xchg (bad) adc xchg jne outsb in mov jg cmpl subl es js movsb hlt add mov fmull int3 je adc gs ret fcmovnbe nop pop ss adc add add sub sub mov push arpl stos das dec inc adc les mov push rcr push xor cltd sbb push push push mov loopne je adc sbb jne sti mov push xor add cmp rorb mov fldl clc add mov je pop stos xchg lods or outsl mov sub out lock js ja jb cmp jae scas ds aam or lds or adc loop sbb enter mov mov push movl and pop mov xor cmp inc jbe adc dec repz lahf inc pop lea jl push jne sbb lods (bad) sub adc sbb mov pop call and or mov sbb dec cmp adc aad jnp aaa andl fsubrs sbb and icebp (bad) jmp adc fild loop or mov bound arpl jo xchg xchg mov add pop pop push sarl cli mov pushf iret jne push in pop lcall dec add and je cmpsl mov cmp pop mov sbb or mov mov out inc cmp push xor push push xchg (bad) push or mov push outsb push inc mov outsl divb inc mov adc insl mov je push sbb aaa adcb adc push jmp call push mov xchg jo adc adc fistl cmp out jbe sub xlat jmp sub xchg je push fdiv fimul loope out cmp lock loop inc jb jmp jne push push (bad) in dec mov jmp jecxz add pop or add adc ss jo test xor and mov push push adc push inc and in lock cld jae negb push sbb mov jnp dec stc jae cmp push sbb sbb incl jnp xor xchg addr16 pop subl popf lret ss push push bound sbb dec call hlt and lret test je push sbbl sub push lret aas mov sbb arpl leave lcall add (bad) cmp mov int aad add xchg loop js xchg xor xor dec out in xor push mov js push sub js in (bad) dec push in sub (bad) cmp pop add sbb mov push nopl std pusha mov inc hlt cmp fsubl sbb and adc cmp or add jo push pop in or cmp pop cmpsb test adc pusha push and adc bound icebp jbe jmp fcoml notl das jae cmpsl push outsl test fwait and jecxz mov sbbb push jp adc xchg or and and adc and es mov test cmp test in push push cmpsl cmp pusha out or adc out ret or ds lds add mov pushl lods push xchg mov cmp fs add dec loopne mov pusha or pop add js add mov sub movsl fimul mov and pop mov test in and jae pusha bound adc jg push fistpll aad pop sbb jmp cld inc mov adc les and scas or sbb lock adc jae add adc roll fisttp lret data16 push xor add addr16 (bad) mov jno insb dec adc jbe inc sub call inc fs mov cmpb push cmpsl cmc inc insl xor sub jo push decl push je push adc addr16 call (bad) pop and rcrb xor or jne inc or mov mull arpl cltd push jmp mov cs aas insl push adc loop mov mov xchg out and dec jmp and pop rcll es pop and xchg (bad) xor fmuls inc mov adc (bad) loope dec push mov or hlt push pop mov mov and push lret pop loope loope lahf sbb imul aas add xchg and sbb (bad) sbb pushf xor inc sbb inc stos pusha or sbb or sub jne and pusha jbe pop push push (bad) js rorb dec lock stos lods jmp sub aaa lock adc lret and push adc jnp pop out or pusha cmpl pop add nop mov sub mov mov add dec adc jl or or sbb jo orb in and or mov cs add or fs in inc or or sbb lret sub lock jg mov popa push iret mov lods add and sub jo pop push test cs jmp adc inc mov aam push and loopne mov xchg mov cmp push sti mov or xchg test cmp mov lock fistl push or fildll popa fsts in test (bad) inc stc pop xchg das sub push mov (bad) push xor jg adc jle jmp orl pushf fwait push int3 das adc es sbb aaa inc ljmp push cmp xlat mov adc mov aas mov mov xchg (bad) or cmp inc loopne (bad) in sti mov add insb mov pop outsb imull jp mov enter sbb and or dec cmp test push add insb es xor (bad) pop mov cmp jl adc movlps xchg data16 shlb mov and or inc xchg xlat add jo (bad) sub add testb fisttp xchg je push pop rcl scas or sbb pop fadds jae mov mov sub inc mov sti push push pushf pop and dec inc lods rolb and push inc push in xchg dec test pop xchg test pop inc add mov add add add and xchg test stos mov clc hlt cld daa inc and inc mov add mov fcoms inc sbb insl mov dec push sbb xor add out fnclex mov aas cmp sbb jne (bad) mov jbe jbe pop push or je sbb fistpl adc inc sbb mov fwait (bad) mov jecxz sbb cmp notb adc (bad) jbe and inc push dec fnstenv add inc xlat push pop fnsave xor dec call jp or scas ss adc add add add (bad) and mov mov je mov pushf nop or test xchg or mov mov je or lods sarb in sub in mov ret xor push lret sahf adc lea or sub jbe pusha adc xor inc push pusha or mov fbstp sarb je push push aas cmp insl add mov sbb mov push rorl fwait sbb fsubs test (bad) ffree mov pop fwait push inc push inc mov ja sarb sti inc dec mov sbb inc ds sub adc inc clc lods flds mulb adc (bad) sub mov xchg dec inc inc mov and mov aad and sbbb pop jns jg je xchg jle enter xchg nop and stos sbb adc fiaddl lock pop fwait les sub or nop sbb mov and pushf jnp mov test cmp loope mov and and cmpsl mov imul sub jae mov jp add add rolb sbb adc or sub dec cmp sbb push adc sbbb pop xor and daa adcl pop jle pop nop mov iret add adc adc out cmp cmp adc mov push push mov and or popf mov ret mov mov (bad) fiadd or test jbe push popf and inc push jl sbb inc inc push sbb sbb psubusb outsl test dec cs push sbb add push or nop mulb push push xchg adc push inc adc cmc push xor or rclb sbb in arpl ss icebp (bad) jle adc pop in popa sub sahf jp mov leave in adc test cld loop ja ja jns insl mov add mov in xor shl fild pop sub mov push loope sbb stos or (bad) pusha mov push mov je in adc adc fcomi out (bad) jecxz jmp mov cmp xchg (bad) jne dec push inc sub push sub es dec (bad) in ret inc cmpsb ljmp jge call mov rcll sub jb divb push push ror (bad) push not adc bound int3 popa push sbbb int into or fisubr rclb sub ljmp jmp add add add push add mov sub lds xor and add jmp xchg ja lret jl or or dec xor xor xor sub ja fildl sbb push cmpl fcoml cld (bad) pop icebp lock or push mov dec (bad) pop cmp popa push sbb sbb xor cltd das pop and or inc shrl mov sbb jle js,pt rclb push sub push cmp add je push lret jbe fsts jmp cmp xor fistpll nop enter xor test je or sbb push push or pop andl adc xchg push pop xor push in and or fsubr mov (bad) or int3 ja mov jne rclb rolb pop mov call sbb enter mov jmp fdivrl mov jo es mov push ds sub test adc dec enter push (bad) mov inc push xor adc (bad) (bad) pushl or or or xchg push mov inc test push push repz or add or dec add mov pop js adc (bad) and repz and repnz jbe lahf loop mov adc cwtl mov or cmp lock lret xor dec sbb ret mov mov pop push adc adc adc sbb fnsave pusha scas mov mov sbbl leave cmp sahf adc pop (bad) loopne and fsubrs mov setb dec ja outsw mov jo and sub pop pop push add js lea push xchg mov lock cwtl mov xchg or bound and rcll into cmp adc cmp mov jne push xchg pop xor or ret adc add mov addb jmp mov icebp or (bad) adc aaa inc xchg inc stos add mov (bad) repz push (bad) fcoms sbb mov sub cmp mov sbb inc rorb push push push push inc stos dec sarb sub inc (bad) inc ds and imul add push pop lea jbe out cld (bad) or cmpb and mov pop mov and add (bad) adc jne adc test push mov add add enter push xor add mov nopl cmpsb or and push and lea imul into adc dec jo pop in (bad) xor pop pop pop pop inc call add adc loopne cmpsl andl pop dec mov test xor je mov push xor sub jnp cmp enter add fiaddl adc lea stos not sbb inc and push sbb mov cmp mov sbbb add cmp rolb pushf push xor xor sub loop fs xor inc xchg xor adc add push xchg pusha pop (bad) ret mov sub and popf lods jbe push push jne xchg add fisttpl sub pusha mov xchg inc bound inc arpl sub mov cmp xor sub int shll or jmp push xor adc inc mov push jp xor loopne push jnp adc and (bad) push xchg call and mov bound mov jnp je pop adc (bad) ficom cmp add sbb fldt sbbb or xchg lods pop mov dec xchg or add add adc xchg pop sub dec ss mov lods outsl mov (bad) rolb sete pop ret into push adc int sub pop dec sbbb mov sub aaa inc daa pop cmp pop mov mov pop add stos add inc pop call mov adc xchg push or sbb ret faddl cmpsb push rcr rorl mov or xor or outsl pop cmp xchg pop ret jle gs (bad) int3 add packsswb inc gs enter jp,pt add sbbb aad add mov movsb add xor ljmp cltd outsb push mov xor jo cmp scas in add cs push and aas cmp jb or dec fldt data16 nop and inc and add aaa ret jnp std sbb (bad) (bad) mov cmc sbb sub test cmp xor lcall cld lods loopne leave pop and inc and les scas jo cli sbb jae cmpsl adc xchg xchg in (bad) (bad) in test sbb lcall out ret fs mov add xor sbb leave fldcw sbb mov adc dec jnp mov or dec mov test inc je mov inc sbbl inc add ss popf push mov push add xchg add push jnp inc dec sub adc mov add jne or mov and and in cmp cli pusha daa add add arpl les sub xchg cwtl cmp imul (bad) and mov enter cmp inc sub dec pop inc notl jbe push cmp sub xor sarl lods sub mov pop mov nop sub adcl addl mov adc jl sbb push leave bnd (bad) fadd inc es cmp cli popa ret push jnp int3 cmpsl adcl xor jmp push sbb inc inc add movzbl orl xchg movsl and jmp adc cmc pop push adc popa mov inc dec and mov cli push adc push outsl xchg rcrl push or (bad) sub sbb fistp inc (bad) mov add mov xchg mov push sbb jae pop mov test cmp cmp sbb cmp mov push je cmp sub adc inc test mov lea mov push mov (bad) movl sub out mov xchg insl add in adcb mov push xor std adc xchg jbe lea ret dec add cmpl mov jbe adc pop outsb or adc enter push or sub inc or push mov adc test sbb push cmpsl sub add jge add icebp fbld mov jo (bad) dec sarb add xor mov das jo mov (bad) les cmp and clc lds sbb jb or aad lods (bad) pop outsb adc les add push lea scas push mov cmp push mov test or adc sub xchg adc popa inc add outsl pop out add cwtl mov test xor mov or jns mov movsl popa fsts cmp mov (bad) push mov push adc mov rol dec mov daa xor ss nop add cmpsb popl mov push mov or out or cmp mov adc push lea imul mov scas ret (bad) mov or or lds sub mov or adc add ret sbb dec (bad) mov xor push inc mov fs dec or add cli pop mov lea pop sub add adc push add sbb and inc fdivs cmp stos cmp adc add push mov sub fdivrl push call inc xor push repz pop add xor pop cmpsb sbb adc push and push mov out add lods sub leave pop xorb and hlt arpl mov sar and jnp mov out add jno jmp sub inc or xor pop inc xchg xchg lods dec sbb push dec sub fmuls jo cmp push add and lock sbb jns push andl inc pop jb mov jne xor outsl sub lea daa iret test add xchg and push dec xchg push inc mov in daa inc mov adc and add pushf fdivrl cmp dec and mov or xchg das in addb cld jecxz test or mov push popaw mov fildl pop mov sti and sub incl cmp jbe mov sbb scas or scas xor inc inc rcll adc dec rolb bound rcrl fistpl or add push ljmp jge outsb cmp js mov xor add es inc xchg mov dec push add push dec ret mov or cli inc mov pop xor inc lods clc loopne cmp xor lret add test clc or sub lods jmp sub inc cmp adc mov jnp nop and inc pop xorl push call jl,pt add push hlt gs inc imul imul pop outsb pusha sbb push add pusha sub mov fs dec push nop fild ret lods or je xchg rolb push sbb add push adc inc add dec rorb inc insb push cmp push cwtl or push pop and jno arpl add nop jnp sarl popf ret xchg out lea add sbb lock jmp xor xor inc push add call mov dec add pop loope (bad) out push insb (bad) xorb daa fs push mov loope jns pop mov mov mov sub xchg and movups add je mov jnp dec adc add jo adc adc push (bad) arpl pusha mov xchg (bad) cmc and (bad) pop roll aad rorl std adc mov mov test pop (bad) rclb xor lods arpl sti bound dec add stos or push xor int mov push jecxz cmp sbb les imul jae hlt fwait mov cmp je dec cltd cmp jne push sahf lock lret jno adc pop or jmp adc lret leave clc adc or imul adc or cli pusha dec fs inc push mov jge insb jmp mov push dec lock pop fnsave in loopne push mov mov aas ja jmp mov jle dec (bad) pop push add fsubl sub imul fld lret dec inc mov sbb jae xor xchg bound pop or and clc subb add push stos inc mov lds adc push mov mov and jp xor push and sub sbb test test xor pop mov push xchg test test sub cld loopne pusha mov push adc dec movsl (bad) and clc or push inc nop enter sub inc fmul adc out adc int3 inc pop push add bound mov ds sub inc aad inc aas sbb push mov dec push pop mov mov das sub pop sub (bad) xlat cld pop ja cmovl divl movzwl push add imul dec add pop stos sbb add sar pop pop pop insb rcrb cmp push dec cmp push cmp pusha inc popa pop inc xchg decb mov pushw jmp cs xchg inc dec add add in js push daa push push xor adc cmp insl cmc cmp push push enter pop mov test mov cmp pop inc push enter dec or and adc xchg mov mov jae sysexit rcrb pop repnz push xor mov push inc jb push mov in ss dec out or aas pusha aad and je push mov (bad) jmp in popf push or adc push in push xor xor lahf add cmpsl or mov fimull and fwait test inc sbb enter pop push push mov sub mov mov or in inc cli jbe movsb fimul scas out test or movsb ljmp jbe mov sub fidivrl mov xor outsl outsb push nop mov add shll cwtl mov movb xchg fnsave push adc lahf adc mov mov mov inc loope mov dec add push sub add push sbb mov idivl inc mov mov test mov std inc mov sbb sbb xor fwait out fcomp push jp inc sahf in and mov mov add mov push fadd jmp push and sbb fucomi inc adc out or add sbb jae add fsubrl jnp repz mov jecxz in pop inc push popa inc (bad) mov or daa mov test xchg push mov xor pop pop ds fist push push mov mov jbe rclb orl sub sarb sbb sub add mov inc (bad) fcomps mov mov lock dec idivb lock inc push pop xchg out or movsl add dec push int3 pusha iret xlat jne add or sbb loopne pop jg pop or and and push fiaddl add add add js sub mov xor std jmp jno mov mov (bad) xorb add sub out or jle subl adc add fcomp dec sub sbb or push out jae mov xchg hlt inc xor push (bad) shrb xor ja js or push or rorb dec call sbb ljmp mov sbb and out ds rcll addr16 mov mov bound push mov xchg roll les loope xchg xchg pushf xor popa fsubs loope test lods outsb mov dec addl or add mov xor inc push ficompl push mov (bad) fnop mov in and test es nop pop insb pop ret les cmp jnp lds cmp les das xor sbb (bad) fsubs cmp pop xchg mov push mov movsb and imul mov dec and sub popa das sbb and jmp xchg and std dec sbb (bad) adc in cwtl jl xor iret cmp sti call cmp movsl push adc push mov in jmp dec xor (bad) in mov xchg sub pop inc iret or (bad) daa dec or and rol xor add imul in push mov inc loopne push popa inc out push mov sub add or aam add pushf aam sub or cltd mov movsl loopne and mov mov add pop add in push sbb push push or aad cmp xchg pop rolb pusha stos movsb push xchg dec rol jmp jne inc fstl scas loop call or cmp or sub lds add add jbe ret jo cs cwtl push pop les xor je push nop out push (bad) loopne enter sbb pop inc movhlps jle inc mov dec cs jecxz aam fidivrl and fdivrp movsbw loope inc mov pop subl out pop loopne adc push pop not addr16 and and sub sub (bad) xlat mov call lds fisttpl test adc pop in jmp xor add ret hlt mov and mov inc cmp jno outsb push adc pop scas sbb jge lds (bad) lock insl add push ret divl aas xor jne mov cmp push insb cmpb cmp cmp fidivrl cmp inc sbb jne jmp mov sub fneni(8087 or ret add dec pop inc fnstcw pushl add in push pop adcl cltd cmpsl fs jb xchg sub mov inc sbb jae mov add push aas inc push inc cmp in es mov xchg dec sbb mov arpl add leave js mov pop in mov jb push fstl shlb add mov orb in les inc adc pusha and loop sbb mov js inc dec (bad) cs dec nop mov mov mov cmp lret push mov in and adc cwtl dec cmp push inc sti pushl push sarb into mov add and sub les sbb push mov sbb and cmc mov mov test mov lea ja into ficoml push outsl dec mov fisttp pop movsb and aaa bound or add xchg pushf mov movsb cs fistpll mov jo mov out pusha push cmp imul movsb jae sub add push push xchg stos test mov movl fldl mov add add sub clc shr popa (bad) je xchg mov jo lods mov clc outsb fldt dec dec or push add pop fcoms or jmp gs int in fldenv mov fistl and (bad) dec push push mov pop pop mov cmp (bad) adc imul xor enter test rclb rcll in xor adc in aas xor call stos (bad) rolb nop pushl scas sbb pop ret inc aam cmp ljmp les adc shll aaa and xlat fiadd add add pop jmp rorl mov imul shr cmp (bad) jbe pop sbb inc inc fucomi fistpll cmp jb jmp add xor mov insb mov cltd fcoml push push pop mov rcll aad fdiv pop notl jle dec or movsb aas xor mov divb js ja fsubrl push xchg dec cs sbb push inc aam clc fisttpl and (bad) mov jp test lock pop inc (bad) adc in loope pop (bad) pop sahf adc sbb js cwtl std ss ret rorb mov ds push add cmp inc and aad mov push sbb fimull jb fistpl xor push inc pop jb pop inc inc in jle push andl adc xchg int3 inc sbb sub or push push mov popa adc jl mov push add ss addb mov jo adc or pop push xchg mov inc movsl cmp pusha xchg stos ss ljmp adc stos testl js and inc or sbb inc nop in and incl mov rcl sub jle push nop cmpsb mov jne inc in fstpt loopne add add ret push aaa sahf xor sub add pusha rclb in inc ja inc fs mov and push add (bad) and xchg pop jge add enter xchg xor inc and mov andb test popa mov sub rcll notl shr cmp fdivrs mov sets and push and sub adc insb divb outsb xor ret xor mov xchg jno push adc loopne adc cwtl aas adc jnp fs pop add push jecxz decl ret mov mov or cmp inc xchg sti push je xor clc jl rorb stos pop rol stc push pop leave popa inc and push test mov or lea scas mov jb xchg std push jne sub xchg mov push xchg cld dec leave push pop mov enter push add add xchg and push je pop inc andl adc scas pop cmpsl sbb dec mov add js invd inc stos jle add sub mov fld and adc push lock sub push mov dec pop jl jne inc cmpl mov push lods rorl roll dec mov and jle or dec push or push hlt push jo pusha and cmp inc adc notb add inc cmp adc sub subl shr dec bound and rcrl add ds cmpsl adc stos push inc inc inc mov or adc cmp mov pop loop xchg mov pop mov nop inc add outsl mov sbb cmc stos sti push add jle jmp sbb mov inc pushf stos xor pushl add and mov sub popf pushf sbb xchg mov jbe jbe or pushf jnp cmp xchg add inc arpl adc or sbb xchg mov mov add sbb movsl ret cmp or aam pop in cld shlb mov adc lret cmp dec add and add jmp lods xchg (bad) sub sbb cmp jge mov pop inc int3 push jg mov cmp pop je xchg sbb (bad) into push out and push xor in fwait test es sbb ja es jb out sbb fisttpll adc xor sbb pop popa fildl dec add dec jmp mov mov enter mov mov cmp (bad) cwtl jbe and sbb aas or add sarl fwait mov push add inc add cmp pusha (bad) jb pop ds int3 gs xchg add lds les enter sbb (bad) xor dec sbb sbb lock cmp jge push xor xchg sbb or or push ret loop loope sbb fadd cld xchg imul (bad) add or sub or pop mov and mov jmp inc cmp add and sti dec push pop rcrl sub jno xchg jmp mov ret movl pushf pop add pop in pushf adc add dec roll dec adc (bad) (bad) jae es mov or adc icebp or inc dec je jno lods push pushl lock jmp inc push mov (bad) xor fadds dec jb add pop lea fdiv test lea jbe mov repnz mov or lret push add push push adc mov fstl jl movsl aad add gs adc loopne pop xor pop or (bad) sbb sbb add pop mov push push lock pushf adc lock fadds imul push xchg or adcl sub bound cmp jnp jbe lcall fwait push fcoms movsb and push push pop add dec jle fcmovnu cmp rcrl cmp add (bad) or dec cld test cmp jo test adc mov repz push call mov pop or test call or call xchg sahf pusha adc (bad) and aad mov and pushf jmp incl (bad) arpl jbe ret xor hlt push fcomps fstl inc loopne cltd adc adc sbb (bad) sub jmp fs leave loop jmp out jne lods in je pop and adc mov sub xchg dec inc jg mov and inc add jbe stos pop adc fimul jnp incb fimull cmp mov (bad) std adc push mov pop add adc push mov (bad) je test rcrb cmpsl arpl inc loopne je and pop inc add xchg xchg sub fadds pop cmp fs push enter or and add nop or sub adc push inc cmp inc pop sbb xchg xchg and pop or mov mov mov cmp mov jb je stos cmp mov sbb xor fdivrs (bad) adc jb and cmp ja push test or arpl call xchg cld push hlt (bad) in rcr inc push or push sub sub jp shll or cmp insb adc fnsave add sti and xor dec in call loopne in sar add leave cmp pop mov adc out sbb sbb loopne in xor in jge mov pop cmp mov sbbb hlt std push cs and push mov or or cmp sub xchg sti jo addl sbb sti push xchg imul lock push test push xor ret jb push push inc sub jnp push and jne adc ljmp movsl sub loope popa jo add mov std push push test push das add fsubs lock aas xchg jecxz sbb fnsave int3 jbe or mov pusha pop das sbb add lods mov add nop sbbb push mov xchg xchg fwait mov mov add jnp iret sub jg out nop push push fild out inc and xchg and in push jbe adc or or push adc and clc inc mov adc ret ds push (bad) out or sbb push jmp add cli jmp add scas stos orl cmp insl dec stos notl or shrb or mov add pop das adc pop and cmp out je cmp xchg insb xchg inc insb jg jne or push adc and push dec je movsb dec nop jnp adc sti stos jmp xlat fisttpll (bad) jg aaa cwtl cmp notb mov nop add fwait mov sbb push mov cmp mov mov pushf pushf mov pop (bad) xor lods inc jo mov insl sarb insb lods dec adc int3 pop popa popa lods inc lods push int3 into xchg into mov and nop add loop push nop xor cmp je cwtl mov je lods push adc push les insl cmc jg jno neg sbb push and mov (bad) sbb nop loope and stos cld cmp add sti inc mov pop fadds jo xlat je inc mov je dec and leave je add fsubrl mov leave pop jmp call or xchg pop push mov and mov pop and or mov fcompl cmp (bad) adc push add mov inc xor lock fisttpl pop and cmp (bad) into mov rorb push pushf add add enter test dec cmp out das pop xchg mov iret mov jge mov fld inc or das sbb pop or movq mov adc loopne dec or neg sbb push not and jo arpl lods jl xchg mov jne inc dec push cmp jne pop outsb xor sbb outsl mov add xor pop stos push sbb adc push mov pop or xchg pop and cmp xor adcl out (bad) xor hlt sbb outsb or lods adc (bad) mov jnp cmp mov dec mov std aad sti stos cltd pop cmp mov xchg lea call gs dec fisubrl sub mov lods add add mov push fildl push mov je (bad) or mov outsl sbb fisttpl sbb adc jmp fmuls and push fisttp out mov push mov mov ja push inc data16 mov or mov add mov push aam jno add loopne (bad) mull (bad) test je movl fnop in pop xor shll jge mov es clc push lods in jnp aam cmp std jne mov inc adc pop fistl dec inc add ret insl test push push popf cs jae or or or or jecxz lcall loope jbe xor sbb jp or test xor cmp out xchg cmp nop outsb inc mov orl and fadds in or in (bad) pop insb xor xor ss test inc add and in xchg xchg mov mov je mov imul pop sahf adc jbe cmp aaa push jo and mov xchg jb insb rorl cmp add enter rclb test lods sbb sbb xor (bad) outsl mov push js mov in popa push and bound fistpl ljmp lds or sbb out movsb pop movsl ss mov add mov incb xor mov aad inc cmpsb add jmp mov jae jge lds inc in sahf rolb insl adcl lsl push lock pop lret add bound xor mov xor fcomi or imul add xor xorl cwtl cmp dec inc push push inc adc imul dec icebp sti cmp jge mov neg mov add jg outsb sbb jne cmp jl add jbe adcl out push imul test push dec daa mov js aaa and neg test addr16 cld mov outsb sbb add mov shl mov jp mov sub rol add sbb pop inc pusha loope push loop test ret insb or xor stos add loope ljmp dec sub push cmp icebp sub fdiv mov dec inc cmp insl fisttpl push push dec adc cwtl jmp inc xchg or mov or imul cmp mulb cmp jo inc outsb sbb add mov js xlat sub mov inc pusha mov lcall push lret inc sbb into cmp icebp dec or push je mov inc sti das sbb je cmp je add pop push call ss dec lret pop dec adc push lahf call jge or or and mov testb sub add xor xchg and pusha loope pop stc lahf jl or or or push frstor arpl in clc push stos cli mov insb cmp add ja sub jnp in jl cmpsb js rcrb push rolb es sti in cs lcall adc pop loop cmp loope or mov rcr cli mov pop mov lods mov leave shrb int (bad) lods cmpsb dec cld jl or enter dec rol jmp sbb pusha jbe mov mov sbb leave enter push sub mov mov sti sub add push ljmp std pop pop mov shr push push inc xor add ffreep inc sub cmpsl lret shlb fwait lods xorl pushl test pop clc jne cmp adc adc push fisttpl or pusha ja or pop cltd pop mov leave push or jmp xor push test mov call inc push roll mov xchg adc dec or jnp shlb sub movsl push aad cmpsl addl cmp jne fdivrs add jae mov popa fcmovu mov es pop fcmovu add or sub or ror shrl and rep push push stc push adc push andb mov cmp call loope or and and mov xor loope push (bad) jne popl je push ret and scas push add clc int xorl mov ds (bad) sarb mov mov cmp ja ret das push pop push (bad) cmp jbe insb aaa mov xor pop mov lret das aam mov movsl sahf push rep or mov jno (bad) jle fcomi mov pop pop js adc dec insl outsl int jno sub pop sbb (bad) push fildl fs mov push sub test js ljmp je add ret push (bad) jno ss inc aam outsb aas mov push leave push fcmovnu sti add adc adc inc rcll nop sub inc xor aaa push adc ja shrb test outsl cs pop and pop ret pop push pop clc int rcrl (bad) jne outsl pop inc inc xor cmp mov adc mov or ss xor pop mov jo mov int3 adc or fs push jb add insb mov enter mov add scas push jnp push (bad) mov mov dec sar ret xchg mov lods mov (bad) sti push dec push ja mov dec cli xor push add int pop pop adc add aad dec mov insb push push and mov cli jb sub mov push insb jl sbb (bad) shrb shrl mov insb pop fs and aam rcr pop in call pop mov and shrl push nop rorb (bad) arpl inc rcl dec inc shrl push imul push lea dec push insl test jno shlb add int3 dec cmp rcrb ret inc pop fs pusha push push xchg cli icebp push pop xor das ljmp fist sub pop rcrl (bad) cmp add insb jnp fcoms std dec insb adc out push ja cmovle mov xor mov pushl and ffreep mov or jb mov daa daa mov xor pop enter mov inc push sub sub mov mov cmovnp lds sub adc scas std add lds adc dec jne call xor mov cmp add pusha stos mov dec stc add and jle lods adc outsb jecxz add or add push xchg jbe insb mov mov jg fstp outsl mov mov adc sbbl jae mov inc loope incb sub fucomip cmc (bad) xchg jecxz push jge inc cwtl fdivrs (bad) fxch add or je adc push das push shr (bad) xor (bad) dec (bad) mov add or sbb lea sbb inc in lret mov insb or nop push shufps xor out cmp ss adc mov pusha ret andl push jb and aaa fmull dec pop sarb dec cmp mov repz jae es (bad) adc ret push xor mov or rcr daa lock ja clc outsb jo mov mov xchg adc pop cmp (bad) dec enter scas loop mov push mov dec inc sub sub mov out out push inc push and fstpt out cmp xor push jmp cli push repnz test push mov out cmp fiadd jae neg mov faddl jmp mov stos pop xor ret push in aaa xchg xlat dec xor leave mov js dec sub outsl or cld ja jmp inc stc cmp roll dec sub scas pop fcoml pop or cmp out xor mov inc (bad) jo inc ror std popf mov mov dec jne pop jmp xchg popa movsl fwait pop ja inc add sahf addr16 stos sbb mov mov dec aaa fsubr cmp adc outsb test in mov test push add or pop dec or js nop aad add icebp push add ret cmp (bad) std mov dec xchg mov sub push mov stc jno mov sti lcall sub inc add xchg lcall repnz inc out push push stos xchg xchg je out popl mov test cmc loopne jne subb loope sahf scas es es jecxz pop pushf mov sbb sub or lods lea or push cmp pop aad dec ret stc xchg lea adc push sub add or lea lea mov sub nop xchg jmp cmp jb rcll test add sbb ljmp cmp adc sub inc sub or xlat add lea inc add inc or outsl fstpt mov adc jne or xor pop sbb and or in jb cli mov in mov (bad) mov fcmovnb cmp jle cmp sbb xor or aam inc sub push sbb mov call lock insb dec add cld stos push and push insb sbb lds xlat dec sub cmpsb jno mov mov mov mov mov lods xchg add jmp or pop adc fs xchg add ret movsl or pop mov sub inc pop jno je and test loop jae mov cmp and add adc outsb jg stc out jbe pop sub in ret xor (bad) hlt mov arpl jo sahf pushf lea pop xchg fcmovbe lcall xor pop stc sbb enter sbb fs sti fildl (bad) mov pop and mov (bad) adc stos loopne or pop cwtl xor and test cwtl cmp outsb xlat test push jne nopl pusha pop add jmp add bound or fs outsb push pop lods loope sbb pop push cltd sbb (bad) (bad) xor inc mov mov fdivl pusha lss add sub adc add sub in cwtl in mov orl adc or inc dec mov push popa pop and pusha dec out mov dec cmp sbb xor (bad) je dec shld and rorb mov int push mov inc mov or inc mov xchg inc fidivrl add xor cli aad and xor das push jl push mov lcall sub lahf es pop xor add adc adc insb repz add add mov roll xchg test dec push push jle push cmp testl cs adc lock je and pushf add aam cmp inc xor push or sbb adc push aaa fwait sub mov fstpt dec sub jae shrb pop push push sbb cmp in inc mov nop xor sub mov push push push sub fldl sub adc lods push les xor sub and sbb and or push and cmpsb insl mov cmp sub arpl mov ret dec xor xor stos movsl push mov jae add outsb mov sub pop movsl sub sub push out mov leave inc call aad jae dec jl addl pop cmp mov out dec xchg out pop jle aad loop lds out or inc xor in dec inc xlat das jb aaa dec mov xchg mov or mov sbb mov das mov sub movl pop rcl jecxz out add out sub aas lret lods pop (bad) sub inc pop mov into xchg inc pop push pop or scas imul out pop pop and sahf cmp mov xor push or sahf sub test push lods dec sbb inc pop adc dec push jp cmc dec in insl test sub cli inc fadds neg jae sbb mov dec repz daa and cld pop popa jb mov mov not jecxz fist aaa gs add cmp negl lods lahf imul int3 pop pusha sbb sub and stc fwait jb sub mov adc roll jne cwtl jae xlat mov bound add dec push jg (bad) jo adcb add push cmpsl push push push mov and jae ja dec sub pop fwait cmp lret fdivl (bad) cmp movsb jne push test mov cmp repnz mov ret dec push sbb bt and pusha push cmp scas mov in add mov inc mov pop mov (bad) mov dec sbb cmp push lock dec pop xor xchg inc push sub push pop out sbb out pop xchg push jae mov or je ds dec pushf xchg insl movsb popa mov or mov (bad) faddl mov pop insl mov lea rcl stc loopne mov cmp cmp je jns pop loop add add add push inc cmp pop mov xor pop out (bad) in push movl push add test mov lea (bad) add loope jp ret push cmp adc out mov out cmpsl push sub dec sahf mov mov cmp popa int3 sub (bad) or mov insl sub lea sbb sbb addr16 mov cwtl insl jb xor (bad) shll cmp (bad) xor fcmove adc and or fcoml inc adc xorb movl pop cmp ss cmc test xchg call push popa shrb inc int add jae (bad) divb mov out push in or sub incb sub inc cmc jb aam push inc mov ret push rcl outsl mov int3 clc adc sub (bad) mov jbe shr mov mov sbb ja cmp int add mov pop shlb or lods cs or jae sahf adc pop arpl mov (bad) lret mov cmp fiadd rorl add inc loop xchg mov loope mov inc mov popa std and scas xchg add adc sbb xchg out (bad) mov pusha mov mov leave jmp (bad) ja cld ja sbb lcall and (bad) jne pusha mov cltd dec and push push push inc lea or clc mov push sub inc push adc add xor sahf xor push sbb and in and mov pop hlt push xchg sub mov dec or sbbb inc orl mov and push xor sub mov dec pop pop sub inc jno adc inc adc sub cmpsb push das and adc or jae inc sbb or cmp sbb insb outsb insb inc fsubrs push mov mov push jae iret mov push hlt dec push push and fistpl mov mov mov add ret ds data16 inc es mov inc push push cmp sbb lea int3 add outsl sbb repnz dec sub hlt inc sbb push xchg sub xchg sbb add dec dec dec leave rolb cmp push aam in mov incl mov aaa push mov and inc test mov inc sbb (bad) pop inc dec dec or inc add sbb inc sbb and dec scas jnp cmp rcrl or inc push push enter jo adcb or adc or loope (bad) or mov push push push fwait add cmpl xor inc or lds arpl mov push mov rcr popa rcll iret pusha frstor and dec push dec ror aam scas std movsb sbb cmc push push pop pop xor inc cmp shlb xlat push inc clc fldt imul stos fs ds push loope dec movl mov scas sbb sbb mov (bad) jl xchg cmp pop pop ljmp adc mov shll dec or in inc in add mov push movsb daa pop mov xchg dec push addr16 fistpl inc mov xchg cmp lock jecxz or int3 pusha dec xor jge cwtl and pushf xor cmp (bad) je mov fistp cs mov inc and out push push data16 inc sbb pop push or push inc pop or ds sbb sub mov mov inc dec push mov or mov adc mov lret data16 or mov shr pop cs ret mov fsubs nop stos in mov push lds pop sbb sbb enter add push inc sub xor push and adc or sbb xor in aas sbb cld lret addr16 jge add fisttpl xchg push push cmp and add ja sub mov mov cli aad pop xchg clc neg shl aam mov das or add enter repnz and testl jb and std (bad) gs xchg add in xchg sub repnz adc xorb dec mov loop sti ss div icebp mov and xor pop mov pop or das mov je jns adc xchg rcll cwtl mov sbb roll rorl out sbb or mov ss pop faddp sbbb mov nop sbb jae out (bad) add out sti fstpl push xor lcall outsl pop adc test push mov fucom (bad) lea add jne push sti sub adc fsubr add mov jnp xor dec lcall ret mov popa incl xchg bnd inc push arpl shl (bad) (bad) sti push push push or mov fldt js movsl mov inc mov mov mov or dec adc inc outsl or mov pop shr push xrelease imul fistpl popf nop inc jmp popa mov pop push add sbb mov sbbb adc push lock pop xchg xchg mov sub (bad) push or mov mov push shll test lcall mov jl rclb xchg mov pop mov sahf mov test mov or sub enter jle inc sbb push test clc shl xchg mov cmp cmp mov mov in outsl imul cmp insl aaa sbb jmp xchg xchg add (bad) shl (bad) mov test nop add cmp jge add xor cmc add sbb xchg clc pop pop ljmp inc insb or fimull jle add cmp lea std push xadd add (bad) jl mov stos add or faddl push ljmp mov add cmp ja jmp lea or lea cmp ja sahf je ret cmp jmp push lods or sti jp test or inc add loope loop jge fs push adc inc js push aas xchg enter xchg test jo lret repz push and push mov aas ror add xorps (bad) shl cmp orb mov fistpl inc mov lret negb movl (bad) pop sbb in sbb pop xchg clc or jge fmull sbb and push stos sbb or ljmp cmp dec or inc test cmp sbb cmp fimul ret lcall add fidiv lods ret adc mov dec add xlat cmpw xchg call sbb jbe mov push cltd movb or add inc in pop data16 sarl add cmp xchg mov loopne inc mov inc inc addr16 mov inc push push dec (bad) inc lods inc pop or shlb push push add pop jl mov mov xor add mov (bad) decl sti add ret in xchg sub xor out dec test add adc jae xor pop xchg lds mov push inc fdivrs mov ret lods std pop in mov sahf or cld sub mov adc sbb div add push loop mov push cmp jb xchg das mov or mov cmp (bad) inc xchg aaa in insb (bad) dec scas add add or loop lcall add sub insb insb data16 das dec cmpsl mov (bad) jbe mulb push cmp cmp int3 cwtl aam mov add (bad) cld xor add rcr test nop insl sub mov adcl jge mov fcomp mov jns mov add and pop or (bad) jb jne mov push sti or (bad) ja inc adc fs imul jmp shl aad push loope mov jns test sub loop (bad) jne push cmp cwtl push seto adc pop sbb and adc sub push pushf stos push sbb loop xor pop and addr16 mov test cld into fimull outsl arpl cmp pop lds xor adc mov xchg or pop aad xor or inc push mov jl movl lock icebp cmp jl pop cmp jg and aad and inc mov and sub sub adc jg sbb mov movl je mov mov mov scas inc lea pop sub (bad) and adc daa or mov xor xor push mov imul jae sub and aaa sbb push pop jne jmp lds dec mulb imul push out add push faddl roll cltd sub outsl lods pop popf sarb cli fwait inc add je sbb dec cld dec or aas mov inc dec repz cmp outsl xor cmp fsubr sub or out fsubrs testl test mov fstl pop out pop pop hlt test nop jge xor jmp scas push insl and insl in and mov mov push sub push mov jge les in (bad) dec arpl jne aaa push sub lretw lea mov scas add dec (bad) leave je pop push dec or mov push sub add xor jne pop pop lea push mov divl js loop cltd or add cs adc sub dec mov jmp aaa inc sbb push dec subl jg inc adc roll cmp sub push add or cs das call mov xchg stos mov sbb cmp add inc push add pop lea jl dec jmp fild sbb (bad) je cmp jge add push xlat jmp pop cmp je aad pop out jmp sbb or mov fwait mov or dec (bad) lret (bad) jmp cmp clts or jmp add sbb push insb (bad) outsl ds pop fmull test rorb push add xor sub mov jle (bad) lds cmp xchg cmp sbb inc in ret xchg pop pop mov add or mov imul add andb inc addr16 xchg cmp test jge mov in jle jb pop mov mov xor sub imul lds sbb pop sbb xor lret dec insb mov test outsl adc (bad) pop pop cmp push or xchg mov mov add je push inc cmp gs insl addl inc dec pop cmp ja jge cmp lock xchg test test mov mov push jle xchg ljmp pop insb or js (bad) js pop movsl pop sbb adc or pop adc lods orl enter push xchg mov (bad) mov out add sbb gs jp pushf pop add in and roll out test mov mov inc xor mov sbb popf or push jle add rol div jl add and mov cmc add gs sub add adc or es add or repz xor inc adc leave mov lock ds neg pop adc pusha add jp xchg xor push sub ljmp jecxz pavgw sub cmp xor aaa and push xchg fmuls sbb jmp add scas inc fild mov sbb int fs jge adc pushf mov dec mov stos mov test sarl mov cmp test mov fildl leave je inc (bad) dec xor ret das nop push rclb and xor lret cmp sub and rol inc aam inc xchg add mov in add adc lcall testb popf push sbb fwait out mov int jno pop sub or add cwtl ficomp loopne,pn push mov loopne inc aam xlat mov push xor shlb (bad) sbb mov (bad) jmp jo lods sub test sahf xor popf int3 clc inc inc push adc popf adc lahf lea xor fidivr lods lret lret mov cmp and push fadds lock xchg dec cmp sbb jmp mov shr push nop push xchg push xchg popf add and lahf push push popf (bad) fisubl inc gs mov fsubs imul mov test mov rcrb loopne fldt or xchg push lock xchg stos mov adc add pop add (bad) nop lahf (bad) stos lcall (bad) sbb inc (bad) out add mov test jmp pop cmp push mov (bad) sub adc (bad) mov lods inc dec cmpsb cmp (bad) cmc insb mov dec jne push sbb mull std cmp pop pop jge mov sub or add and nop adc jg xlat pop setbe mov into inc mov sbb movb push mov out or shr shl dec in lock pop push sbb and rolb (bad) sbb (bad) push xorl aam push mov or rcr fwait or inc inc daa push lods add xor ret push sar dec push sub pop fisttp or dec fimul sarl fsubl or xor and inc pop sub mov (bad) negb mov (bad) adc push (bad) mov sub push inc aam adc jp cmp gs enter inc mov xlat rolb push and push dec int3 pop lea mov dec mov mov fbstp add pop ret (bad) mov push push dec push push and aad add and jbe fdivrl mov push add xchg pop jno rol pop (bad) inc sub and stos and and dec mov or add inc dec adc or sbb mov add push cwtl add jle test or pop or out inc mov or pushf and mov xchg dec mov xchg mov enter lds push add mov or sbb popa push xor inc mov mov cltd push and cmp mov adc test push je cld dec mov in pusha popa mov xlat ffree cmpsl mov sbb dec or adc inc or fdivrs in sub jl dec mov mov insb or push out (bad) ret dec loopne jo adc (bad) jae (bad) (bad) mov aaa adc or push les fisubrl add xor push mov and roll lahf jae shrl bound pop les adc dec push mov std sub lods test je fucom cmovbe es hlt dec add cmp mov and sbb fisttpl dec pop lea dec repz test xor pop pop lahf xrelease add insl test jmp je jl add test je pop add (bad) push adc fsts ds mov pop inc pop sub adc sub push and or (bad) mov mov in mov aam sub jae loope insl adc pop iret jmp sbb dec or in mov cltd incl mov lcall dec inc pop inc sub sbb insl hlt sbb inc shrl cmp dec lahf or je add arpl mov push add cmp int add and lcall pop sbb sbb cmp and cmpsb add sbb sti (bad) adc mov mov adc mov bound cmp pop pop sbb ficompl fist add push and add in ljmp dec or mov inc shlb ffreep pop or push mov jmp push or js xor aaa and lea int sbb bound mov mov xchg adc inc popf sub pusha dec int3 xchg or mov std mov faddl push push dec push dec das push mov adc orb add push push cmp pushf adc (bad) cmp mov dec mov lret mov (bad) scas push pop or fstps or or add add sbb and enter push fmuls outsl (bad) mov repz call xchg int sub xlat dec jmp in pop out add dec out add adc lock adc (bad) and push popf sbbb mov rcrl neg sbb jne inc cmpsb sub mov and push mov push push push notb adc push mov and loopne sub mov jb jl sub inc sub push inc aaa mov mov lret pop dec push sti je fisttpl pop or cmp sarl fcomps sub add push es mov call mov cmpsb imul cmpsb imul adc loope in mov sti popw ljmp dec mov jne cmp mov jge test cmp sub add fwait mov mov pusha or pop jp mov out repz lahf ss push ljmp sub dec sub aaa ja pop xchg jne cmp scas sub push add decl shl repz lea sub js push ret mov mov add adc mov jbe sbbb add mov inc push fldenv adc cli mov fsubp cwtl sub fstp jg divb fildl dec sbb dec in sbb (bad) cmp jne fstpl loope loope pop iret mov je adc sub fldt sbb mov (bad) adc sbb fistp inc cmp jb mov or mov cli std inc pop inc in mov xlat mov push aam inc stos out mov inc add (bad) cltd add xor mov push add jmp test loopne sub inc and add and sub add mov pusha inc sbb mov add rcrb add adc add push popa push leave mov fisttpll cmp aam push xor lret nop ljmp or sub ja or loop (bad) jle add mov decb or lds pop sub adc mov mov aas push outsl add imul out xor push add outsl (bad) fcmovnb jb xor lea pop je sbb pusha sbb je,pt mov mov test push and mov rol sti mov sbb fistpll sub sarl mov je jmp icebp xor lock in adc (bad) mov rcrb rorl fstp (bad) push ss fldl movb faddl stos jne sbb icebp jae in out aas push dec sbb and add xor jmp jbe add jne and shl mov pop push inc xor test push enter int xchg mov lret mov mov movsl xchg and test inc fmull ret jno pushf jmp cmp and inc mov clc (bad) xor push mov pop jne cmp test pop lea dec dec and (bad) je repnz sub pop xlat mov or std cmp loope in rcll dec mov dec adc roll std and add mov out mov and and sub jl int3 push jb loop cli or xchg inc inc sahf jb outsl and mov sub add and push push push rolb je or mov cmp fdivs sbb push sti mov pushl loopne sub add mov jecxz rcrl cmpl xchg ljmp sub mov jne pop dec dec pushf loope and sarl fisttpll push push dec jne daa hlt jle dec mov cmp or mov push hlt pop aad clc testb inc sbb hlt cmp inc mov mov sti jne mov repz push cwtl adc lods fstpt pop push sub and add sub adc js jno and jne mov in decl je xor jg movl or add mov inc mov xor ret add in inc test in jbe inc inc mov out sub icebp xchg dec stos in je adc aad sarb dec sarb lds aad and inc cmp inc out scas ljmp xchg mov (bad) ja mov xchg test es pop mov xchg pop add pop dec sub std mov aam rolb mov sti pop add mov jl mov dec scas mov push inc push mov xchg add xor jnp mov mov lret or xor xchg mov (bad) push or xor sbb push pop mov jg dec cs pop sub push inc jge and xor jns push inc sbb (bad) and mov sub dec shr or inc or stos pusha fnstenv inc push push cmpsl dec mov push and add dec fistp inc xchg or inc push jb mov (bad) shrl sbb lea pop (bad) xor je mov mov shr sub out test jne add rorb (bad) dec jnp popf jle add enter add cmp rolb jecxz add fcmovnbe sub imul xchg movsl mov xchg pop mov movsl inc mov xor sub push ss iret jp and es in or (bad) arpl ret jg fimull mov and add mov jecxz cmc lcall add repz mov sub jmp clc (bad) mov cli mov out cmp jbe sub mov mov inc inc dec jne jae fcmovnbe je jbe cmovns push dec shrl mov adc ret sbb loop rcrb mov push inc xchg xor cmp push call je mov adc loopne add jmp adc (bad) fcoml inc or jmp mov mov lods mov fdivs or pop mov adc dec lea jmp sub fwait pop mov mov rorl jnp and and push push jb das add fadd add sub out ss mov cmc stc push fcomp inc pop inc mov sub push inc push and add adc push rclb jge enter movsl mov cmp (bad) clc aas fcoms addl inc sbb lods sti push sub xchg xchg and add adc rcrb test outsl jne pusha and loope mov add sub and and lret loope xor or loopne enter add cld inc aas xor cmpsb jmp fldl mov add and mov mov mov mov add in and lret mov int3 lea cmp add add andl and (bad) mov push or add pop clc jg add loopne lcall inc (bad) in call imul test lcall sbb lea pushl dec div cmp dec pop adc leave ss sub adc or fildl addr16 cld test in mov or sar fsts jo out xchg stc cmp and nop aam add insb scas and out push fmul or dec add or and rolb mov nop daa and mov adc xlat pop cwtl arpl pop je jl dec (bad) xor test xchg fldcw cld mov pop lcall adc or lcall add ja inc fwait and add push adc cld (bad) fwait mov test add and pop inc mov mov inc push pushl mov or shr adc adc pop sti out ret js sub lea std cltd js sbb sbb cmc pop jae mov imul fs mov sub popf out and scas add push dec push mov sar cmp sarl mov movsb or sbb lret add push in mov push push and sbb lds dec inc das jne push test call mov push push push or sbb mov and adc push (bad) ss sar fidivr dec add sub cli dec push cld sub mov stc daa sub mov pop dec sbb pop (bad) mov push jg insb adc add mov add dec push cmp sbb adc xchg pop inc mov jo pop daa sub add add gs sbb mov pop or adc mov sub testb jne adcl mov cmc pop mov mov adc aam cmpsl insl dec pushf pop movsl mov aas mov mov push mov cmpl add xchg add cli push add dec pop mov dec aas mov add movups xor gs cmpb je mov ret adc add inc cmpl xchg add or (bad) jbe out push pusha adc adc jg mov pop std movb mov xchg sub pop push std add add jmp clc push fcmovb mov cmp jo das sub mov jmp push push test idiv jmp add clc or cmpsb pop add xor lea std (bad) cmc cmp adc sbb push rol push jle incl xlat or mov scas das nop xchg lret je sarl test aam clc loopne rol pop ret lret pop dec xlat or push dec (bad) xor dec inc cmp insb ret nop rorl pushf add test and scas sti inc js add sub xor pop add adc cwtl sbbb les pusha pop push pop mov aam faddl in lcall push pop add or and add xlat add add aaa inc jo loop cs adc cmp rcrb add rorl lods sub std das jl outsb pop add or sbb or mov rorl mov mov jne iret pusha or insb ret fnstenv inc cmc jle stc movl pop mov jb dec xor notl sbb xor sbb or pop cwtl and inc mov dec addb dec inc or je push dec js popf jl daa divb cmp push inc sbb jae gs mov or mov cmpsb push pop stos jp cmpl push jb add xchg lcall ja add (bad) mov jmp jmp js inc out sub in cmp mov dec push int dec (bad) mov cmp push mov or sti orb mov movsl roll sbb roll lahf jecxz sbb orl add jo add add dec add cmpsb cmp loopne xchg nop adc mulb popa orl je sub dec pusha dec add dec flds add and es push xchg pop pop (bad) and jae jb or or xorl and adc sub or xor sbb push loop or or fnop or and cwtl push push popa int add (bad) jg push adc pop adc jmp es dec sub and and adc test adc (bad) insb sub aaa (bad) adc xorl dec cltd daa adc adc jae xorl push pop pop (bad) xor sbb add lea sub dec or and sbb sbb add out add (bad) sbb (bad) mov jb dec dec shrl sbb out imul lcall xchg add add sub add push addl (bad) iret cmp xchg mov decb mov mov cmp je jg pop fisttpl add sub push rol lea pop xlat sub in in dec rcrl out fwait adc xor out fimul sbb jbe mov call jmp call xchg jmp dec and leave add jmp mov fs out in in in dec dec aaa jb mov xorl push pop jae jge out mov xchg lock add popf dec xor and pushf sarb out std out (bad) mov repz std mov popf xchg hlt hlt push add dec mov es out jg negb or div (bad) cmp cmp dec daa nop out fs and lock xor iret sahf push pop jae sti mov dec pop cld je cld sub je inc add ss std sbb (bad) xor xchg sbb (bad) adc outsb stc adc ret inc test sub adcb lahf rol lds mov or mov pop cmpsb or test jecxz imul std sti in movsb leave xchg add es and sub xchg sti out out es out outsb call add sub and pop inc mov jmp pusha xchg jmp (bad) and add push popf cli mov push pop sahf cli out out out dec pushf ret push lock cli pusha or xchg push cli mov fs jmp dec movsb sub sar push inc mov and pop mov negl (bad) cmovge xchg pushf ret add stc pop pusha or out clc (bad) push popa jns sti push sti dec sarl mov or and or lods pop fstp cmp add jno dec pop scas add fisttp in nop insl loop loop outsb in (bad) enter sub testl divl mov out out jne orl cmp and enter mov imul ljmp testb sub pusha or (bad) mov mov out out cmp mulb and popa dec sub negb pop pop mov cmc repnz pop pop or mov mov push xchg and jae mov div or cmp mov and sbb clc xor push fsubrs jecxz stc xor sahf hlt cli cli push cmp hlt and sub mov add das and (bad) (bad) in fsubrl xor hlt decb addl inc xor add adc add popa xor xor push loope jbe aam loope repz sub test repz fwait mov and in mov sub push jns nop adc inc repz sub xchg xchg or bnd sub mov jp sbb cmp pop inc cs dec in in stos pop pop or and jp xchg jne add inc loope jns pusha or negb arpl cmp push dec leave sub add icebp (bad) bound lret enter push inc pop mov jp es xchg nop lock out ss mov xchg stc stc jns sbb jp lock pop pop inc push xor mov xchg insb or fstl js test sbb xor mov adc jne sub add sub jae dec (bad) mov push xor dec pusha mov push add int3 leave add pushf add stos cmp mov add dec add dec pop mov push fsts inc jne test mov dec dec orb sahf inc and add aad push inc lods jae mov fistpl mov cmovno adc jno xchg sbb push (bad) adc push ss rcll push je mov xlat or (bad) je ficoml jmp sub cs push mov movsl adc jmp add (bad) push dec shrl aaa cmpsl or jnp xchg pusha add (bad) (bad) pop rol or scas add neg xor fistpll inc or or je xlat mov pop das rolb ljmp test loop stos pop add push stos adc push add (bad) cli fldl loope je sub shrb stos mov jne mov dec mov adc lcall jae jge push rep pop or ljmp mov inc add add add js add fsubrs or mov cmp cmpw pop jne mov push push inc imull sbb pop cmpl jo jbe pop mov or xchg shrb add ret push push sbb lea push lret cmp push dec dec inc mov aam sar or jbe fnop mov dec add adc ds fadds inc subl sub adc mov mov mov outsl inc pusha lds jle and sub (bad) adc fdivl addb (bad) xor add xor out mov cmp mov inc push or lds outsb mov or pushf add add leave adc and add add mov fstpl sbb out in lock fidivrl arpl jle cltd mov loopne or fwait mov add jae or mov jbe pop push and test lret aaa or dec add pop push and inc xchg cmp xlat and push jge,pt sbb jl loop sbb decl adc mov mov clc cs add mov cmpl mov and aas pop or push imul adc xor mov jbe push pop outsb sbb sbb pop out sbb repnz mov out inc add std add insl imul icebp mov dec add outsl push inc xchg (bad) loopne imul cmp cld jno inc sarl xchg adc aaa push inc sub inc inc add inc mov push mov adc jne add jne fldl add aam fcoms ret cli cmp xor fs add push inc stos jp fsts ret outsb ja xor mov sub mov and es daa incl jp bound ds (bad) sbb insb add and or je dec inc pop loopne sub push decb add negl or std mov rolb in fs out aaa jg or iret push push mov jle incl bound push pop or andb addl mov jmp lea lret data16 add outsl push add add and jg fldlg2 mov jg jg outsl inc add frstor outsb push jbe jle sbb jg pop adc insb jg jg jo mov or fistpll mov in loopne ljmp mov adc ret cltd mov fistpl out sbb lret clts adc jg pusha mov sar push mov or dec jns into pop jg mov adc icebp push or (bad) mov add mov adc ja and data16 sbb (bad) and lock movsb sub push jecxz xor or and push rolb in inc inc sbb jno xchg lock adc popa jmp and aam fcoms mov and sbb or (bad) hlt mov jl,pn (bad) and mov sbbl pop mov (bad) jmp fcomip ja push int3 rcl jo add cmp inc adc jl or and cmp das jl outsl mov test sbb inc and cmp jb add jecxz adcb push push add inc jno push mov fnsave push and cwtl in pop pop push sbb shr loopne or jmp pop (bad) pusha scas adc lock add push addl or xchg sub add sahf jge pop jbe xchg mov loopne adc push jbe pop adc adc add sti adc lock (bad) dec ss xchg push cld sub ja pop orl push push add pop mov inc cmp cld aam push dec adc push add pop mov pop vandps jbe es pushl sbb mov mov adc mov movb and js inc push lret ljmp sti addl mov pushl fwait je ficompl daa (bad) cmp cmp mov adc ja ljmp aaa adc (bad) push dec push mov test data16 add adc rcrl push adc mov add lea lock insb jmp adc mov push mov gs or leave push and adc enter jnp xor enter inc dec cmp loope pop cmp inc or dec jle je mov dec jno (bad) jp push push mov sbb pop loope add insb cmp sub sub cmp mov push in not sbb mov mov inc sahf inc jne (bad) cmpl or and sbb je inc jb push add dec push mov and pop mov xor or hlt je dec cmpsb xlat and stos mov push std push adc fidivl and add and icebp sti xor push inc mov adc jmp cmp sub sub jge mov je rclb repnz mov pop mov insb out or mov es pop cs mov push mov nop add ss cmp pop addr16 mov int3 inc inc sub inc decl add pop push pop inc add xchg push rolb popl add leave add dec add xor inc push inc and roll xchg cmp dec insb mov xchg je imul add fisttp (bad) fmull mov or cmp push mov push jl cld sub inc test test loope iret and out ret cmp xchg push push mov scas mov or or mov jbe pop and scas pusha mov mov and inc ret push mov mov cmp rol inc push loope inc sbb into out mov push mov les sbb ja push sarb movb or out pop fcomps int pop aam psrld gs js loopne rorl jmp add adc fdivs test aas cmp pop jbe lods mov mov sarb pushf je inc (bad) cmp cli je mov mov (bad) ret add or or and or pop sbb jp pop push xchg and loop add jns push push push mov ljmp adc in add mov divl sbb mov push push or andb leave jnp inc sbb pop pop addb jle sbb inc jle sbb mov inc outsl or inc les push sub mov je stos cmp or sbb jg push and xor and psubsw int3 jmp push jmp xchg scas jne pop cmc pshufw imul xchg sbb fcompl cmp push je sbb je pop xchg ret add add rcr add push add mov inc pop xor stc cld add push sti icebp rorb out out mov ret xchg sub xchg and add and adc add dec lea sub push aaa pop mov pop and inc jns gs call fiadd in lock jo aad pop or cs fld int3 add fistpl sbb (bad) jae xor loopne test incb loopne pop in lea jnp fs xor adcb or movhps stos push rcrl adc or jbe fmull push inc push push cld je lea sbb outsb lea jbe push add adc xlat inc push out push add outsl dec jl jg js adc adc mov jne scas mov popl and xchg std pop nop test mov pop fild cmp insl xchg pop cmp dec push and or clc mov inc cmc sbb adc lock push jne cmp ret fisubr aad and imul xor adc inc cwtl adcl dec or jmp (bad) push mov mov out mov movsb add adc insl add orl jp negl or add or mov mov pop sbb fs add lea stos cli ja test mov sbb jp (bad) lea or adc clc testl lea adcb mov lea test dec es and fildl (bad) push push cwtl mov inc gs add sub in jmp je lea movzbl add cmp ja sub and fildll push push cmc mov mov inc popa fcom in mov cwtl push push lea and add cmp push push xor orl add push and std mov jnp mov arpl roll orb mov push jmp adc je and xchg jmp movb shr jnp je lahf (bad) (bad) std lods add or push adc and outsb sti cmp ja dec push pop roll cli sub out adc and and xchg mov hlt jo icebp xchg pop xor or das pop mov jg mov mov sbb movsb fiadd mov and clc lock and xchg add add (bad) inc stos mov mov ss xchg pop and mov lods xchg cs lea fs clc inc cmp jbe xor pop add sub jne pop or pop push mov adc cmp adc push mov fcomi adc imul push add xor pop jmp cmp repz ja adc dec out add movsl jl roll jge jne jb loop jmp xor and aam jo or xchg ja movsl lds xor or sbb std shll (bad) jmp sbb mov lods mov test push pop adc add mov push lahf xor rolb push call stos pop mov jbe adc or push test or fildl insl roll leave mov pop or and mov enter sbb jge xor mov pushf sbb inc cmp jbe mov inc inc cmpb (bad) mov loopne fisttpll add jb mov xchg push ret loope inc or jmp notl sub sbb rcll inc pop daa inc or pop and inc inc and xchg and add negb mov test pop and mov loopne or in push push jns inc pop or mov jo mov mov xlat mov push jae inc out sbb pop pop cld notb test and (bad) cli ja xor pop sahf ret pop sub addr16 jp and (bad) sbb sbb add mov or movsl mov iret add cs lret add (bad) pop jne sbb adc push mov add ss cmp dec mov (bad) testb mov into jo or insl xchg mov mov pop stos or pop out push mov lret jp mov or push decl arpl call or mov fstl sbb add negb push out mov lcall xchg hlt dec push mov mov mov sti xor or sbb jne add inc int3 mov sahf push adc push outsl add inc jl mov cmp push inc rolb pop pop jg fs push int adc cmp jne or out adc pop verw mov pop iret out ss pop mov dec rolb sub cmp xchg or or dec shrb fmuls mov loopne les mov aas pushl jae fdivrl cmpl pop mov (bad) jmp outsl mov sahf inc add xchg or outsl repz jne ja mov push push add mov xor mov (bad) (bad) leave ja lea pop cmpl outsb mov jp je insl mov rorb ret adc cmp (bad) out jge add jmp push push mov mov je mov push or jmp mov loopne pusha daa push lods stc inc push pop cmp test test inc or fstps test jecxz enter test inc bound sbb movsb dec and jo inc mov add mov stos and les or sub pop sub jge call and scas fstpl icebp test push xor mov sbb les incl push or cwtl sub (bad) cmp insl inc mov mov cmc add adc cmp jle mov rorl sbb lret jne out pop mov add pop imul aas add subl add mov inc inc mov test add inc and pusha pop rclb adc adc mov mov mov or jle push out sarl negl aaa ljmp jbe ja stc pop rol cmp imul dec pop push int3 jge or mov adc or and (bad) inc andb or and scas test mov movsb push imul pop sahf sahf xor push xchg icebp mov jge add testw sub (bad) sub cwtl cmp (bad) adc push in pusha pusha cmp sub enter hlt inc mov adc arpl push sbb js aas jmp shlb sub inc rclb push arpl and stos fcmovne (bad) mov add jmp imul mov sub adc mov aas mov or push mov jmp mov adc sbb pushf adc addr16 subl orl dec (bad) aaa stc lea adc popa and mov jne pop xchg in sub adc inc push insb push push cld not jge clc inc (bad) dec jle pop loopne cmp and pop xor xbegin aam mov push jmp cmp pusha dec fdiv sbb pusha popa jno mov lea add and in mov mov mov and push and sub in sub das jb test sbb dec push xor push cmp dec shl fs add jnp xchg sub sbb hlt adc imul cs les ror pop aad sub or int incl orb jb lea pop adc ficoml lods vmwrite sbb add cmp aas xor loope sub ja inc scas mov mov and pusha test and inc and add dec call sub pop inc inc (bad) dec ja aaa cmpb and cmp jmp cs (bad) add movb and or add stc and add push push insl add ret add sbb mov inc hlt scas sub sub jbe and pop pop out call pusha push dec add sub ss mov ret and outsl inc sub adc fisubr mov xor pushl add add shlb (bad) jle shr lds push pop ret int3 add mov loopne stos cmp mov or cld jbe xlat cmp and add or cmp jne adc mov mov outsl or mov outsl nop (bad) push push jnp rcll rolb inc sbb std imul add add outsb jge addr16 fcoml add or xlat adc into jmp sbb or mov js pop subb adc add mov mov icebp sub fcompl xor sub inc sbb js mov mov scas (bad) rcr outsb mov sti ja icebp mov mov push add mov pop shl xor lock cmp cmp into mov jmp mov add pop add addr16 push out push cmp or push pop lods or jmp add dec lods add sub add dec and add mov xor inc add mov call cmp ja or sub mov leave jle push dec shrl mov fldl push cmp dec lds pop adc push jmp and cmpsb fdivr or std cmp outsl xchg push mov jae call roll cmp lods aam je xor dec add sub cmp push insl pop ret and aaa test xor add (bad) pop aas and add dec adc out mulb aas pusha push mov mov add cmpl jne test mov push aad cld xchg mov lods dec adc cmc fnclex xor mov inc es fs std cld dec shlb sub lods or out add or push inc sahf out xor inc xor push pusha add or cmp add (bad) adc add push ret cmp (bad) adc xchg and mov lret add add scas adc and stos sub dec out jge or mov cs lock inc cwtl insb addr16 decl loop cmp lock adc enter push add add (bad) data16 or cmp js or out jg and cmp and push sub icebp add mov or incb xchg inc inc test add xor outsb loop or std add and jb add ja in jbe shrb popa sub and sub xor adc mov push sbb cmpl sti mov push push fmuls aas cmc adc vrcpps shrb mov jg cwtl pop (bad) mov mov mov out xor inc add fadds test add push inc jge push add sbb sbb mov or mov sub add stos mov and enter or popa pop les testb push pop lss inc and add jae and push imul mov ret xor xchg sti adc movsl cmpsb call and lods rcll adc push pushl mov or pop push or pop test movsb jp adc jbe jne push lods sub pop cmp stc cmp (bad) je push pop mov lret mov neg imul rorl pusha add outsb push mov sbb add sub adc add (bad) in cmovb aaa or pusha or mov add dec inc cmp mov xor or xchg sti pop lahf test icebp (bad) ljmp stc cmp jge imul jle andl sub sbb sbb nop cmp or flds cmp les fs add es xchg jae iret fadd jno dec push sbb test cmp lea (bad) push cmp (bad) sub sysret mov mov ror jae push mov pusha call push and jb es outsb mov pop add mov ja into adc sub and mov pop or insb (bad) rolb inc jmp pop (bad) mov sub inc xor imul jnp gs mov leave inc mull (bad) testb cmp cmp cmp sub inc pop mov inc fucomp add sbb inc fstl mov cmp negb inc push jmp xor mov push push sub sbb pop je push push push cmpsb sub fsts pop (bad) incb cmc cmp jne decl sbb clc mov movl dec jb rorb shl loopne add fisttpl jno bnd push mov movl push mov movaps adc mov sbb push popl jmp incl dec or ret mov mov dec ret push inc sahf mov push jns sub cmp lds mov pop jo orl test add mov or loop incl mov sub push cmp push popa mov pop xchg repz jmp sbb jmp inc cs test push inc inc fisub je lods es pop pushaw mov cmpb add faddl ror cld (bad) ja mov sub dec jl not leave jne rorb je mov push inc cmp lea or pop fdivrl inc loopne add sbb out mov cmp cmp imul xor and mov leave test movsl push test out add xor mov (bad) and sbb mov pop sbb sbb adc jo hlt imul cwtl call add aas jae clc mov jae mov add (bad) or jp jno int mov mov push jl or sbb xor pop shr outsb cli adc rclb cmp addr16 aaa test pop jne cmc test cmp mov stos and int mov dec scas or sub and cmp cmp data16 test add lods stc push outsl xor (bad) mov (bad) push rcll inc mov mov cmp push push jp or pop js add and xor inc or rcl sbb push fwait test ret jmp jo mov adc or rolb fst mov ret jne add js imul adc movsb mov sarl push push adc mov or xchg cmp push jo daa jae arpl and pop sub das ret push sbb sbb jge,pn test jbe in add xor inc and cmp push add or push pop mov push xchg add push cmp xor mov or pop push pop jmp int3 cmp and or rcrb push (bad) (bad) pop add cmp mov (bad) jl mov (bad) loopne pop (bad) cmpb jg lds mov nop and arpl and lock mov xchg pshufb shrb adc (bad) aas cmp push cli jl jmp or xchg test mov add je mov test xchg test and or js sti inc test jne sbb clc add out add fidivr outsl xor inc mov idivb mov mov ror inc or subl mov jl (bad) repz xor inc mov inc mov sub (bad) dec sub push pop mov fcmovbe ret or cmc push push jbe sub inc imul leave fwait xor ds cmp aad jne inc jmp and push mov xchg pop daa movl fistp incl lock test push xor adc cmpsb test ficom mov aam and push stc jle mov dec and push mov mov (bad) cltd sti push mov test inc add mov jge jb scas rolb add jp inc cmp mov or inc push inc popf shrl inc (bad) and push pop sub xor mov mov inc insl push je mov je and add inc jno ds insb pop and mov mov test aas not mov or mov mov cmpsb sub rcrl and mov (bad) xor pusha or insb repz inc in xor adc pop mov test idivl pop mov lock jg push jg pop pop pop mov cmp mov jmp pop cmc mov mov add xor adc cs in and and lock mov imul in adc and xchg fisub cmpl or inc les popa insb testl or cltd sub orb out or in stos xor xchg fstps xchg adc rcl cwtl in pushf push or adc lods movsb adc jmp xchg test imul mov mov inc xor stos lret sbb or jne push mov aaa xor push sub jmp sbb and inc and or or xlat fnop std icebp mov inc or push add loopne xor mov icebp or push pop rorb jecxz lds inc or popf (bad) bound push sbb stos add ss or jo lret cwtl add leave adc xchg add add mov cmp mov enter push or test mov adc andb ljmp or (bad) (bad) sub andnps mov mov inc add sti push dec add or test js (bad) or in adc enter test pop mov jne sar dec cmp sarl pop insl sbbl push inc wbinvd (bad) sbb sbb jbe std jg lea not and decb cmp dec loopne pushf mov into sub mov push cmpsb pop add jle mov jbe into push cli add xchg mov mov pop xor out mov mov sar sbb push lds cmp sahf fiadd faddp mov inc adc je xchg or sub cs cmp fbstp push xchg jg je dec add mov loopne mov inc mov aaa sbb jno inc in mov or or fs or push add icebp pop xlat ss mov and add ret aaa mov pusha mov dec paddd inc pop add pop mov jae cmpb insb push mov push xor sbb ss pop inc cmpsl or jmp and dec xlat add and mov imul lea push add add or clc rcr fbld sti dec adc and loope add push mov adc push xor pop xor sub pusha pop or push mov sbb movsb mov add decb ret cmc mov or cmpb (bad) call adcl fimul push or pop adc rorl adc js in adc adc ljmp jge pop push rol inc sub add dec das inc insl or aas and pop mov push fstl lds xor lock xor adc divb push xchg inc (bad) lea in cmpl and xor das push aam push push sbb mov fldenv dec das xor sbb add movsl inc adc jbe push in jmp addl add incl push fldl mov push xchg mov xchg loop outsb insb mov popa add xor jge jo and dec imul cld test inc arpl rorb jne push test sub xchg mov lea lea fldl inc das push mov sub push mov orl jne cld push mov pop out adc lock movl fldl add pop mov mov (bad) jne xchg fs aad mov jg mov mov testb push mov push js pusha sbb shlb push imulb leave push mov mov xlat sub pop shr dec xchg ljmp loop cmp icebp sub fcmovb adc ret push or push fstps (bad) cmp and stc add sub or push dec pop mov mov pop pop sahf pop inc adc imul fcoml es add pushf nop fcomps enter dec mov add mov or into add add mov hlt push mov dec adc shrb icebp mov mov pop insb mov jl aas or inc rolb pop mov dec or inc pop adc dec sar pop sbb adc fstpl and mov jmp insb enter lret test dec aas cmp mov pop cld xor or fistl inc cld mov cmp add dec popf jge pop (bad) or pop dec and pop xor test loop add pushf push pop or rcrb dec or testb aas pop sbb push sbb dec dec push lret dec out dec mov outsl push dec dec push add dec and outsl ja inc fildl ja or mov xchg das rorb adc cwtl icebp mov jae cmovp aad or push push cwtl xchg inc clc cmp mov push bswap mov adc cmp push into setns jns dec or sbb add cld scas aad cmp cli xor mov add loope lcall pushf and jge dec das mov into mov orl or rolb sub xor in mov and and std or mov call push jne push pop and fnstenv jmp jnp add xchg and push cwtl mov sbb lock jbe inc or mov push adc add push push sub dec xlat lods xor in sbb cli ljmp mov pop mov dec cmp push jg iret jne sahf ss or push pop pop cmp cltd mov out fildll (bad) (bad) dec inc pusha and jne mov push push pop xor inc test call push dec mov sub icebp and ret pushf and fcmovnb inc loope (bad) dec decl pop loop je cmp jge iret es nop arpl mov pop mov decb jne test cltd jmp jmp cmp mov pop sub or ss cmpsb sub pop and aaa aaa clc adc mov or mov push jg mov insb lret xchg and in rcll mov or popa js out or xor shlb sub or sahf or stos mov mov (bad) or or adc jne add aad adc aam or jle int3 lea jne,pt cmp mov dec cmp add add cli ljmp mov jno or sub push aam je and hlt stos call add or dec je mov fwait push lea gs insl fs popl push in insl or adc mov (bad) jbe ja mov push mov push pop sbb and inc adc push inc or inc mov add mov push cltd andb ljmp loop cwtl cmp add imul (bad) rclb int jp or and and add loopne rcl inc pop aaa (bad) test pop dec push mov movapd xchg in add notl fcompl cmp push stos dec loopne sti fsubrs enter dec mov or or mov add lods popf pushf pop sub je push popf mov cld sbb mov adc clc pop testl push add jecxz scas add adc mov test shrl inc int mov stos mov xor fwait inc mov pop mov or adc lods call adc mov mov mov mov adc inc sub orl repz push adc inc and dec mov xchg in arpl pop dec dec cmp (bad) add testl dec add push push ficom sbb add mov dec mov test mov pop push push imul aam inc jne insb cmp cmp fmuls add addb add mov pop cmp mov je adc jno sbb jbe addb xchg in je push push popa add add or aaa mov enter decl mov and (bad) jbe outsb inc xchg ljmp add sbb jbe pop ret mov aas sbb pop aad add and xor leave add outsl sbb or mov (bad) add dec and or sub and or jbe sub mov cs cmp jb add out sti jb ret sub (bad) jb inc ret and add (bad) push add scas lret or mov or test sbb sub ds dec inc insb das adc mull lods push add mov and mov mov and ret (bad) xor add popa sub pop sahf xor xchg push stos loopne cmp mov mov mov sbb jmp addl add and fiaddl rcl iret xor jb push fsubrs sti or jo xchg and add jo aad fs mov mov adc push mov sub mov es stos (bad) inc jne pop dec orl (bad) mov mov dec je xor (bad) and xor sti (bad) mov push mov or cmc (bad) (bad) xor and push rolb pop addb xchg sbb orl pusha xor xlat or add jge pop sti add sbb popa test mov pop cld dec jbe jl jle rol inc fs adc cmp adc or adc push add ret fdivrl add pop push in adc (bad) pop ljmp sbb pop clc inc pop push fs or ss or add sbb adc or mov xchg or mov or xor and ret or loope inc adc sub sti dec adc mov push adc dec or ljmp inc test xor adc adc jmp fadds mov add adc pop mov movsl pushf jmp fadd mov out pop repnz lock cmp repnz pop jo push mov shl loopne jp fdiv cmpsl pushf jne repz push sbb ja popf popa push ljmp push push push add mov adc mov and xor lret (bad) test lods test jbe jbe lea rorl or add insl insl int3 push (bad) push push add mov or jmp fs ds push jl inc pop loopne inc add adc sbb fisttpll or enter sbb dec adc bound jmp hlt int and mov fidiv dec adc pushl inc xchg insb flds sbb sub add sbb mov sub rclb call pop lds jp ljmp (bad) int sbb adc push or clc stos imul push push jb push int3 add xchg mov ret push push mov test cmp add push push or arpl add arpl mov adc inc cmp add int and add add pop xchg push jl xchg sbb repnz je pop adc (bad) xchg orl cmp ljmp lods loop outsl jg xor mov push inc xor aas push mov push sbb insb divl push imul ret xchg jmp fcmovne dec (bad) mov xchg leave pushl pop lds and cmp mov sub int3 mov push repz mov (bad) and add or clc push mov (bad) push inc jno push inc pop or inc cmc inc mov or mov jbe pop push sbb adc fs dec ss and and inc push sbb sub inc push sbb cmp mov mov inc adc sbb pop dec dec push sbb push pop pop fs inc push pusha fs insb jo inc daa sbb (bad) mov pop jb fs mov xchg cwtl leave and movsb mov je cmp pop jp (bad) inc dec xor cmp arpl fnstenv mov mov jle in ret add mov cs in xchg or and mov les push xor inc adc cmp sbb cmp xchg inc clc or out mov mov add sbb and xchg and add sbb ljmp paddusb and sub mov pop sub mov jae je and test add (bad) mov outsb xchg adc fldenv leave push and aas jge iret and faddl cmp push jmp fisttp fnsave cmp or cmpl jne mov xor mov sub or pop xlat mov cmp out mov jne fildll inc jge push mov pop inc adc add dec add pop decl xchg in xchg lea stc mov lea push push or enter rorl xor push xchg dec pop aas jnp pop xchg xor aad pop sub push xchg push insb adc adc rclb mov push fadds aaa or dec int3 das stos inc inc fneni(8087 add sub push pop cld or adcl sbb sub cmp and lea inc mov (bad) dec cmp inc push pop inc fwait jle cmp es ss add mov cmp sub sub cmp or mov ret ljmp inc (bad) jnp add fadds inc add push aas in dec add dec push mov (bad) add and pushf adc es dec aam adc and sub mov sub push and mov pop iret push mov (bad) push jmp test int sub add (bad) push inc rcrb mov pushf call movsl in lsl sbb or inc fildl lods adc (bad) call pop inc inc or sti std loop or push or and adc cmp lret inc xchg pop push rolb rclb sbb adc enter adc adc sub sub mov addb jmp push xchg and insb fmuls inc shrb sbb (bad) je,pt adc add sub movl sbb int3 cwtl and xchg cmp addb hlt add mov xor mov add or insb adc pusha in movsl add cmp fist push pushl xor mov push xchg push mov je and sub ss add (bad) hlt je testb sbb mulps lcall orl and or fucomi cmp xor push addl mov fstpt adc xor popa rclb adc and and leave fiaddl loop mov jle inc sub std stc add xor movw or pop or lock outsb jecxz push sub hlt mov test pop add pop and movsb mov (bad) lods xchg add sbbb or mov and sub sub sbb pop iret into (bad) xor mov add movsb test cmp dec rcll cmpsl fild dec and push or fs adc sbb cmp sub ret (bad) xor jecxz pop ret xchg adc mov ds fildll xor cmp mov sbb mov mov sub mov mov mov les test jnp out and or mov ss repz rorb inc andb jmp les mov inc inc and mov add add daa std push (bad) cmpl leave and add add add dec push dec and daa cld jl inc add pop pop cwtl aas pusha dec cmp xchg dec cld mov xchg add nop push sub and and and arpl es mov cmp mov and mov jae push lea xchg cmp add mov inc test fiadd rorl (bad) mov jl ret ret (bad) rclb or adc xchg jmp mov les mov cmpl xorl ficoml cmp jne fimull push mov or imul or or pop scas pop pop pop pop pop nop or adc stc push ret rolb (bad) pop rclb add jb sub xchg les mov pop xchg sbb lock sub lds packsswb sub inc dec jg das mov pop (bad) pop and push pop ret lods jnp or xchg jl jne (bad) fcmovnbe ljmp div das and sti out in mul sub ja jb cmp jbe dec sub sbb jl and or dec neg sbb adc add addr16 adc push vmovss adc movb enter push mul pop mov or add mov addr16 add pop sub adc push inc in into mov jbe push fsubl add aaa push pop jns adcl jge sub hlt mov mov cmp imul int lret add jl add push subl cmp xor mov pop lods (bad) or push push xor inc jne xor (bad) mov pop inc jmp cmp jne andl mov or jne adc addr16 sbb test hlt mov or (bad) aaa jne,pn mov xor and push xor pop cmp std cmp adc sbb out sub jne cs xchg sub add inc bound shrb mov add or test in movsbl sub fmuls add std aaa and popa cmp push ja sbb mov cmp mov xchg add mov or pop sbb and lahf add jl pop (bad) (bad) insl push loope scas pop mov test mov sbb sbb ss je cmp cmp test inc mov daa popf ljmp pushf and daa je push mov and notb (bad) mov inc mov sub adc inc add popa mov mov sbb xor and and inc add lods push aad pop push insb mov add gs add test hlt call popf mov dec jmp pop mov pop clc stos and es insb je stc and fildll jb cmp ja add cmp mov fdivl (bad) cmp pushf jmp mov or mov faddl jb idiv rcrl leave dec aad add add push inc jmp (bad) fmuls inc pop je loopne insl mov rcr iret test lcall jecxz push or test ja divl lret push ljmp incl iret xor sub test xor mov or push mov mov sub test out rolb inc mov test imul aam xchg sub mov (bad) aaa push std cld (bad) jbe hlt jmp add inc nop daa mov ja pop fidivl addl fxtract xorb sbb adc mov sbb or enter jg add imul jg clc mov add jb xor dec push adc add adc jmp mov pop shr inc add add sbb add ficompl pop or add loopne sahf mov push mov xor sub mov sbb insb cld stos (bad) mov arpl loopne adcl and push add mov adc mov jp sbb cmp xor loopne bound push mov das cmp cmpsb inc cmp (bad) jbe push scas mov mov cld fld1 sbb xchg adc dec xchg and pop pusha jae inc jb je sub out add xor (bad) push mov xchg mov int les push cmp cmp xchg and add mov outsb add or add adc sub and sbb inc xchg stos loop push call sub mov add xor xlat stc inc mov das hlt outsb or fisttpl imul xor push outsb inc test or add sub lds mov dec mov jp popa fmull (bad) ret mov popl inc pop dec xor mov inc in push negl sbb add imul ja lods call sbb inc and inc jmp jmp (bad) mov adc adc jne or ljmp in jne add incb pop push push add push call mov das arpl xor and fistpl adc ja or pop gs jmp add adc push adc push sub cltd rol in ja cmp jge cmp jle and decl mov or pop syscall cmp push jge xchg inc inc mov (bad) insl mov cmp add jbe sbb lds mov cmpsl sbb push push xchg sub and (bad) mov (bad) pop ret sbb jbe and or mov or std icebp ljmp lods cmp mov mov mov xchg push pop js adc in icebp pop jmp sbb add hlt xor (bad) outsb mov adc push hlt fiaddl push cmp lds inc call push sbb jecxz incl adc lods ljmp cs adc or or xor or js pop stos fwait pop mov loopne movsl call or pop jo push insl xorl (bad) mov push push jo jp inc or add loopne sar ror push cmpsl stos inc xor pop inc xor mov frstor dec push negb sbb mov ret mov add pop mov or mov jle repnz rcr insl lods lea push push lea popf mov rcrb pop sbb sahf icebp js push sahf xchg fsts cltd mov xor push cmp nop jne in (bad) or xor pushw push rorb mov cmpsb outsb aam pop push loope cmp or jmp xchg push pop push rolb mov sbb add sbb fist push (bad) pop push cs jne sbb push pop call jmp inc icebp push xor sarb xor (bad) pop loopne,pt inc inc push mov fmull je lds inc sbb rorl loop cmp pop out in push rcrb ret jo mov sub rcr dec adc fstpt lret pop jne int3 popa mov clc pop gs push shlb inc sbb inc mov mov cli mov adc sbb sbb add inc inc and pusha mulb fldz rclb inc jl fcompl idivb (bad) and push iret mov sub jo mov or xor adc sbb pop adc sbb (bad) mov pusha push in dec xor call aad test pop call aam ds adc outsl test or pop mov or sub jne dec std sahf inc ficomp add cmpb push (bad) sub test lret jbe cmp lods insl test cmp insb dec mov mov inc mov movsb sarl lahf (bad) xor mov lret scas daa jno pop ljmp mov jp add push cmp sbb inc in mov cmpb push inc lock dec cmp sub xor jno das jne xchg or mov fiadd add sub push cwtl js push rdpmc (bad) push mov cwtl movb mov mov jb,pn jns sar lea sub or incl push mov pavgb cmpsl or add push pop mov add cmp pop sub inc pop inc add add jno xor subl imulb mov mov cmpsb inc push add in add int sbb out movsb (bad) and cmp cmp push sub mov mov ret jbe or mov adc mov adc jge push sub stos push push (bad) popf jge loope push xor sbb sbb xchg test enter sub or aam mov jmp dec aam dec pusha rcll pop jno or mov adc add (bad) jb sub and mov xor pop (bad) dec push fsubl test mov lea jge leave xor lret pop pop jbe pop clc call (bad) sbb lds push cmp pop lea outsb sbb pushf cmp lods add clc add pop cmp orb and clc adc incl add cmp adc fildl les jno sub lret mov mov dec adc add mov pop add jae aad out lea std sub and xchg add sbb mov sbb fdivr or loopne js inc jnp pop add xor mov aaa cmp xchg dec and add xor inc das jl sub dec jbe xchg adcb add push test dec mov inc neg sbb jecxz add cmp ret daa mov sbb (bad) or jne sub pop inc je mov dec adc out or add inc cmp or sub mov jmp xor add dec or jle adc ret mov push hlt inc sbb loop pop movsl jle push add jnp outsb sub mov loop out (bad) sub call cmp jbe insl inc push outsb test xchg stos std lods enter mov jbe adc jl push dec in jbe cmp cmp xlat test mov movsl inc jge xor out aaa jbe mov pop add xor (bad) je adc inc ljmp jb and in cwtl lock push jecxz mov mov xchg movsb pop test and and cmp js jg loope (bad) lock push sub or call (bad) neg cmp mov js mov loop and jb push aas push (bad) xor rcl push shrl mov push jg push jb and xlat add inc and mull pop or or dec pusha or jno dec (bad) test cs mov bound jmp pop sar push insl and adc dec jo icebp adcl int rorb fidivr sahf jne outsl inc stos shrb (bad) mov or notl sub jmp lock or push ret inc inc and push jge fldcw fsubrs jl cltd or rorb xor sbb add arpl pop jge bound add dec bound add (bad) push inc adc jbe in int3 scas adc sbb or dec add es (bad) outsl push mov rcrb sbb cmp mov jbe aam loopne stos cmp subb lods into adc sub (bad) leave push push mov outsl adc push jmp cmp pushf sar jl mov sub (bad) rcll (bad) stc mov pop shlb fcomps insb jno push fldpi push mov mov sbb (bad) mov or xor fiaddl pop add mov mov add jne and push icebp xor fstps mov add je sar add lret and sbb jmp mov add movsl add and sbb mov adc xlat loopne scas add mov push ret lods aam add or cs mov call faddl (bad) fimul pop clc (bad) mov add push xchg lahf and adc add sbb fnstcw (bad) jmp or (bad) mov rolb clc adcb mov inc or scas fs (bad) xor cld push push xor and testb and mov repnz test stos mov in push add test add andb inc jge dec add pop mov sbb daa mov pop (bad) xor mov adc or fisubl daa inc inc es ss addl andl xor inc test gs sbb add loope (bad) loopne shl dec or xor push mov movsl cmp je inc push sbb lock icebp adc outsb pop add add xor leave mov dec mov shrb nop loop adc scas ret add push lock push fcoml stc fldt testb pop and and and insb imul cmp aas mov sub pop mov add adc xchg and push push add pop sbb jo into mov push sub mov mov push and mov xchg pushf add mov and mov fmull mov rcl bound cmp jo pop call jle cmpsb mov push xchg cwtl sbb shrb xor add dec insb jno push push mov add jg cmpsl jnp outsl lods mov mov jg inc lock clc or pop jl (bad) mov or out pop or xchg and add add mov cmp xchg gs push ret mov int3 push push stos push sbb dec pop mov fistpl inc int3 add sub insl sub xor mov xor pop addl mov or (bad) jo push pop nop adc daa iret dec adc push mov shl xchg movsl outsb jl xchg fdivrs js out push pushf cmpl dec dec pop pop adc inc cld pop inc cmp jae les push (bad) sbb sarb add cmp mov rol push push insb jnp xchg inc jbe insb sbb add jg cs jmp adc add cmp insl jno fcmovnbe jmp rolb jle cmp inc iret enter push pop jne addb outsb pop add adc insl push cvttps2pi xor out sbb or nop fwait les fwait mov jb stos pop lods cmp lcall call sub adc mov add or fiaddl or xor jle stc ja xchg pop (bad) test add stc adc mov inc cmp cmpsl dec fcom jl std stc jge push inc orl jne sbb ss ss inc cltd fbstp inc (bad) pusha sub or mov outsb add ljmp (bad) or pushf cmp faddl cmp jne cmp je inc daa sbb dec mov jmp xchg sbb aaa sbb add mov lret popa pop cmp (bad) mov mov or push inc andb xor dec pop push mov jns and je sbb adc or aas or loopne push push fs fldcw aaa dec je dec jne push inc or ja test jge sbb (bad) and cwtl dec pop jo and adc adc and sub imul adc cwtl (bad) pushl lods adc popa push daa add mov loope scas scas or (bad) dec or jle mov sbb push arpl inc dec out fxch add pop xchg push fiaddl add cmpb or arpl je lods mov push and adc push in test mov mov or vdivsd and in cli insb mov js sbb cmpl push cmp jl iret jg (bad) mov adc hlt pop or dec sub sub cld lea testb hlt sti sbb test out cs std dec lock pop jb adc stos add push push mov mov dec imul (bad) jl adc or push daa test mov or repnz inc pcmpgtw adc or lock or add push dec cmp adc (bad) movb inc mov xor pusha inc bound inc xor adc (bad) mov fsubs outsb and fdivrs sub sub cmp pusha sti pusha sbb (bad) push test gs add jle and add stc push fwait push or imul mov pop mov xchg add pusha cli or push or xchg es pop cmpl inc fmuls jle add dec roll icebp jbe push dec add out mov cmp lock jae mov pushf jg push fadd jg ljmp pop jle addr16 pop scas adc push jbe add inc aaa mov xchg fisttpl mov cmp jg aam mov or inc jl and jle and hlt xorl loopne test xchg or ja test enter shrb hlt sbb and cmc mov and inc dec inc rorl adc ret dec mov add popf and gs adc add repnz add or mov mov add mov aaa dec add mov xchg dec add clc push aam mov pusha icebp sub sbb int notb test dec or and push push dec loope xor mov sbb mov je cmp add adc or inc and testb (bad) (bad) mov movsl js mov subl (bad) jmp ds stos and dec push jb rolb (bad) push je and inc mov jb cmp jbe in (bad) or je out mull push sbb push call in add pop xor and sbb sbbl sbbl push push sub push mov add mov fwait lds rclb mov adc jmp sbb mov mov mov push sub sbb mov push jae and inc push pop ret dec adc inc push xor lods shrl lea (bad) or (bad) mov dec and (bad) mov mov das cmp (bad) rcll jb push push mov adc inc and and bound aaa sub and scas jmp sub lcall sbb and cmp enter (bad) sub adc mov mov sti add sbb cli inc sbb add lcall stos ljmp add scas addl pop js div jae xor ds (bad) jbe dec cmp xchg cmpsb xchg push mov jb inc mov add add test jmp lea sbb push out cmp insb adc jmp cmp rorb cld stos dec les icebp mov push push inc mov or mov out sbb push add call icebp sub inc or mov add add std pushf lea jl lret mov pop cld jns sub mov jge pusha fsts hlt stc adc sbb add mov or jbe pop sub adc je cmp mov add xorl fsts mov push outsl add leave cmp and mov push push push pop sub mov lock add and stos fwait sbb je push and sub sbb sti jb cmp or nop/reserved mov adc jl andb inc sbb test mov or jge inc sbb test fcomi ror daa test or test fmuls int mov inc test mov push into pusha push sub xlat sbb inc sbb jne xor sub push je mov mov insb add or call icebp cmp xchg insb clc std xchg xor fistp mov ja pop add push add xchg into mov ret imull cmpsb sub jne cmpl or or les inc adc adc adc sub sub or xchg loop or stos jo (bad) lock xchg mov jmp bound in fwait in jae push or mov mov into sbb jge push clc xchg adc pop call addb das or add call add nop into xor dec push enter xchg stos sahf adc repz add push inc frstor bound jbe aad cli adc push or or cmp push xor les insl inc lods clc push es mov mov adc add inc dec xor ja mov dec sbb jmp adc jl call cmp push xor leave jo mov jo push aas push xor sbb cmp inc push push ret inc xchg or push dec enter cmc inc pop inc inc mov mov push mov adc fnstcw mov inc or or testb cmpsb aaa fadd add sub dec mov and mov push and sbb sbb dec es push pusha adc mov lahf arpl ud2 or or shl test push lea and add (bad) mov roll leave add mov (bad) je push mov iret mov xchg pop cmpsb mov push adc hlt nop mov or mov lea aaa in aaa adc lock movsl movsl movsw sbb dec rclb dec inc lods inc push stos ss leave mov push mov sub and push push test sbb mov push xorl adc jge inc inc mov sbb imul adc das xor sbb les test inc sbb jno or sbb push xor pushf sbb sub pop les fcomi push jno repz adc icebp push xor sbb sbb (bad) jns sbb dec jne pop pop pop sub loop jae or clc insl sub loope shr add or lods sub idiv and imul cld lock push je (bad) add mov nop add lods mov push sub jmp jge adc lods je das mov jmp insl adc (bad) cmp mov add push shrl (bad) sub push xor or cmp adc (bad) push psrlw orl or and xchg jne outsb sub outsb jg out or and rorb dec push cltd dec add jno sub and inc sbb add ljmp xchg jne push pop test or or xchg addr16 mov stos stos push stos pop jae mov push jne adc add and sarl adc adc adc push fdivr add jl push add lret int3 and push fcmovu test and loop rolb sub add test jmp mov mov pop xor adc adc dec or inc pop sub inc in (bad) adcb fistl stos loop xor add test jg and push or sbb (bad) fistp adc push fldl sbbb mov sub xchg outsb and jnp and jno std out (bad) jge push pop mov inc loope push iret add aam or sti insl pop or and xor xchg ljmp inc mov sub es adc rol loop and or (bad) xchg fadds iret nop lret xor sub notl pop sub mov lock out test or adc shl incl or mov jl mov mov pop in or jl mov fs test push out (bad) and mov movl dec xor stos data16 test or xchg stos lea ret inc inc xchg inc stc cli xchg shll test mov pop adcb scas jo dec fdivs xchg inc hlt test push roll sbb pop mov mov fsub inc fidiv sub pop push in icebp xchg cmp sbb bound lods lods sbb andl in int mov mov hlt andl mov out aas jl xlat jbe outsl stos iret and test test out jge mov scas jge lock loop mov jecxz neg sbb stos push mov push or (bad) loopne or push adc fdivrs inc xor or push add pop inc or mov sbb leave inc adc cmp or cmp in push and and jb hlt sbb inc fwait test cltd hlt jo sub inc cmpsl cld add mov enter and add lods fcomps push aad test inc mov and or mov fcmovnb xchg fmuls lret testb mov jne inc add mov (bad) jle push lods mov out or cmp test pop mov inc jmp mov push add cli stc or xchg pop loopne inc pop cmp xor sbb push in jmp mov stos sub mov pop mov dec inc jg push pop jmp das sub je sub or inc push cld into jmp sub pusha mov jmp xchg or (bad) push les in adc js cmp sub jg in cmp jle jle cmp or gs push mov push or dec push fstps push ret cwtl push cmp push adc test in ds lods xor cmp jg repnz add lock jae sti mov ret mov pop or outsb xchg inc pop aas mov mov add pop push mov movsb imul movsb sti je jmp pop aad sbb jge jmp adc insl loope test shrb ret fnop xchg mov dec (bad) cltd lods jae push push outsl movsb sbb imul mov testb or adc iret ficoml push mov xor jbe stos outsb cvtdq2ps push jmp (bad) ja insl mov inc push je je pop mov shll mov adc add xor jg xchg cmp add (bad) dec sbb mov imul or or mov xor sbb aaa fsubr std and adc rolb test jg (bad) jecxz mov notb and in xor stos sbb icebp cltd xchg push add fisttpll addr16 cmpb hlt jnp add mov mov add or insb lods inc (bad) jge nop daa or roll movsb negb fdivs in (bad) cmp add mov stc push add outsb fstpt cmp mov xorb into jmp lods sbb adc xchg les push incl ljmp lods add test subl jno mov mov popw dec inc cmpl mov cwtl mov aaa mov mov jo push (bad) and mov aam les push mov mov sub shrl add inc stc adc sub adc mov enter (bad) std mov or jle aas ja sbb aam adc or pop inc testl fcoms jl sti jge add and or push mov and lock pop cmp jne cmp ss dec enter cwtl scas mov test cmp call add inc pushf jle inc rolb xchg sub inc fstps sbb push rorl inc add or ficoml hlt fistl cmp mov je mov jg jb inc movsb add pushf push pushf inc loope ss mov loop or jecxz test jg add das push add iret faddl sub add dec aam gs jmp (bad) or mov ljmp mov mov dec sub fs mov icebp mov add sti (bad) push sbb push fcom insl inc loope shrl fstps loop jmp push mov sarl add jno or push mov aas mov push stos shl addb insb fnsave jecxz or fcmovu or jb std fisub inc push cmc or or fistpl mov dec (bad) lods in mov outsl (bad) xchg or pop mov jno add mov and sub int loopne mov (bad) insl js movzwl inc jne jne,pt push lret das jno loopne stos xchg jg sub cli pop mov sbb xorl leave lcall test xchg jo mov inc lahf sbb push sub ret lods lret add lods mov stos dec mov lcall mov mov pop mov and sbb dec push mov (bad) mov sub mov loop mov dec movb add dec (bad) xor rcl aam (bad) xlat shll fcomp (bad) fstpt jne inc enter xchg je movb jmp add mov rcr push arpl push and test das inc lea inc or mov add add add inc stos sub loope pop mov mov adc adc test jmp add mov rcr out outsb add or push jne je push ja sub cwtl gs push adc notb cmpl push sub fldcw adc push orb (bad) mov add clc xor dec sub or mov fcmovnb lods and mov mov push mov mov (bad) test dec and pop loop ficompl (bad) cmp scas cli mov or adc test mov push int3 pop sar pop stc push add leave and xchg and jmp jb mov jne sub aam xchg out (bad) pop arpl push pushf arpl dec fimull sbb mov and sbb addb sub (bad) mov pop fildll add (bad) repnz sub xor in mov xchg (bad) call push jnp mov jne inc notl xor and insl cmpsb push push add ljmp inc pushf sarb and jmp sbb roll adc shr cmp lods adc pop lea jbe push cld dec add lods mov jne insl add fidivl push (bad) rcll sub pop sub out nop stos mov es lods jmp test lods mov push mov mov fnsave call icebp rcrb clc push jge fwait (bad) fidivl hlt lock shr ret or or add psubq push adc dec mov neg mov mov pop repz in in xor ja insl inc jmp jnp pop out ljmp insl and iret xchg push (bad) mov pop and xchg inc repnz idiv and mov int repnz sub fs insb loop cmpsl fimull out ljmp adc xor aam loopne call sbb sub cmp (bad) aas mov popf jne cmp insl sub jo and mov fs pop test adc xchg dec (bad) fistpl repz pop call or test lahf xchg out inc inc inc inc test push fmuls sbb fcmovu push xor mov fs jo lods push mov jns mov arpl sahf mov push cmp push fidivrl mov add movsb mov push xor sahf les inc xor popf clc jle push dec push nop out pop fisttpl fimull xor push or cmp clc dec test xchg pop in jmp fimull xor inc sbb sub inc xchg sub bnd in mov inc or dec inc pop mov inc jb das pop sbbb sbb xor in mov mov mov mov jge sbbb xor mov fdivs lods roll ret adc daa addl (bad) and xchg movb adc pop cs inc dec inc out fcmovnbe ja mov cmp push adc and inc test out (bad) out push out inc xor (bad) icebp or xor and call shr iret or or jge pop add neg push xor sub imul sub mov mov call xor sbb ja cld lea mov les mov add insl scas adcl loopne mov jecxz add pop pop add mov add jae sbb push (bad) or push mov adc stos sub jne movsb adc push (bad) (bad) or rolb lock push mov sub movsl jno (bad) jae fadds sahf push aas push or fs pop mov addr16 sbb dec xor jmp test add xor pop push fisttpl addb sti movb dec cmp jae add aaa xor add adcb aam sbbb add inc push dec mov jl mov testb int aas xchg and dec and add mov jle inc (bad) fisttpl add or or enter or adc ret add div inc sub or addb je movsl mov and je into je insl push lds jmp push je push lcall ja xchg jne or jmp or sti push fucomp push push pop je adc xchg mov cld int pop lods mov add dec out pusha iret mov add add test mov xchg js mov nop pop cmp cwtl lret into pusha mov daa mov shll out xchg cmp pop xlat mov mov ret repz cld inc push in ret or flds xor pop dec push lret repz inc lret add pop add or push and cmpsb mov jnp inc and insl mov add aad or out aaa fsubs int lds inc push cwtl xor inc adc mov lods adc pop push add ret cmp and pop inc nop mov sbb jp inc sub insb add imul adc ret jae in cmp adc ret fnstcw inc out roll push xchg or push cli add add ja xor test jns pop test int fstl or call add pop into mov dec negl mov je cmpl int push and iret pusha aaa fisttpll or and outsb dec adc rorb inc sub mov inc sub jl not pop rcl lea xlat mov push loopne test mov mov pop lret test add lret pop mov inc push sbb lret adc jle xchg test (bad) roll push jmp add sub int3 xlat (bad) mov lret ret dec add (bad) xor cmp dec or dec call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add push mov push push lea push mov push (bad) or add call test in mov (bad) jne push pcmpgtb push mov pop leave ret cmpl fisubr adc adc push (bad) in fstpl and push sub test cld (bad) call aas iret fldl or push push jne in enter adc je jnp push adc jne or clc push adc cmp adc out fwait call fimull pop mov or (bad) sahf and pushl or out mov jne cmp jmp xor ret ret lahf fisttpl lds jne mov (bad) aas mov rorb jnp sbb sarb je push push call mov je xchg sub or popa sti mov and jae shlb xchg xorl jmp hlt pop adc jge je cmpl jbe or add (bad) mov xchg insb add neg sbb inc mov out mov (bad) cmp ja xchg and mov adc (bad) ja (bad) in and call sub mov ffreep imul adc lea jl arpl pop dec out imul fucomi pop add push push dec push mov inc mov mov outsb pop incl jl mov or mov add push push mov div out pop lea lret and (bad) or or leave add inc cmp adc leave lea sbb push sti fucomi inc and int3 loopne inc cmp mov jae (bad) fisubl jle inc fincstp mov push (bad) xor pop dec or mov mov or into andl pop push inc xchg iret mov dec mov add add dec dec dec xorl xchg adc cmp mov cmp leave andw mov popf movl mov pop loope pop pop or push xchg and ljmp add inc xor in or mov mov lea mov pop sbb outsl decl out rorb push add jae jae ds mov addl and mov (bad) lods mov add sub out (bad) dec in lahf lock inc push cmp push shrl loope xor mov inc push push sahf or pop imull xorl add mov rep or clc add or out sub ret adc cmpl dec mov imul rorl mov push sub (bad) mov mov push pop add pop sbb mov into or decl mov jbe add xchg dec inc mov leave enter inc rorl fisttpl xchg aad cmp fcoms push fadds nop test sbbb shrb divl jmp jecxz dec cmpsl cmpl xor sbb mov mov je mov ret mov (bad) push lea push push push repnz mov or pop pop repnz push stos icebp out or jo dec ret add push push mov mov lock push mov mov inc icebp (bad) neg push add leave adc push or mov test std into inc push mov orl sbb mov scas mov mov arpl neg adc sbb add mov xor lea mov add xor mov adc insb add lea (bad) lock cld js or xor movsl lds add sbb mov testl jb jmp add add sbb cmp sub add fiaddl jg mov mov mov add mov and mov test push xchg aad adc mov fcmovnu (bad) (bad) xor stc nop sbb add ror push sbb iret lods in inc jae jne jge inc (bad) hlt sub pusha adc adcl mov cld xchg pop adc sub sub clc mov xlat push dec outsb orl push push loope aam or or std sbb aas mov lcall pusha dec or test mov and enter pusha sub adc leave (bad) sti popa pop jge cwtl in dec arpl cmp ret in mov (bad) jg movsb (bad) into push or xchg bnd mov cmp jle cmp cmp and cmp cmp push gs je xchg sti outsb xchg inc adc flds (bad) cmp (bad) jge fwait push (bad) pop fild mov lret mov inc adc inc add mov mov out jecxz sub pop loopne push js fistpll xchg or cs imul div xor decl mov inc mov or or or adc or cli mov sarl mov push (bad) mov lea adc dec lds dec adc popa sbb add or xor test mov xchg and xchg xchg fnstenv and inc dec jb and and and mov je mov inc movsl movsb pop push adc test (bad) loope push inc mov pop movsb shrb mov mov mov (bad) fstl adc push and out lods outsl mov sub pop incl pop xchg mov inc add jge popa std fucomi (bad) or movl fs mov or movsl lods incl sbb sbb clc pusha (bad) in outsl test mov sub xor mov sarl add xlat mov or sbb cmp cli adc cld add stos in std sbb mov aam cmp jae jnp xor cmp je popa inc popa fdivrs xchg cmc call ret add sub mov jmp mov sub add adc adc adc in int mov arpl in call mov fcmovnu enter cmc adc out imul jmp stos push call xor or (bad) movb sbb cmp (bad) mov add shr push xor sarl fdivrl mov nop mov add or ret lea cmp or (bad) lea fldl sti or add cmp pop decl cmp hlt scas jle cmpb add popf sbb push mov rorl or add subb fimull pop clc (bad) jle jl mov push lea lea mov incl mov jns adc lea lods mov dec add inc pop pop push fisubrl pop push addl pop pop imul dec xchg adc aad lock jle bound insl stos xor push pop adcl xchg fdivl ss xor rclb push adc outsb in (bad) fdivs sbb aad and push sbb sahf xor shll xor sbb mov ret xlat xor and mov andl add ret lea sub (bad) negb and or mov fstpl mov sub push add xchg in sbb or xor dec fs adc imul xor xor adc or adc mov les xchg pop sarl xchg add inc push cmp loope jbe pop mov add xchg je jl mov jmp xchg lods xor xorl inc lahf je rclb (bad) mov and add cmp sub push cmp lea mov fucomip add xchg sbb roll (bad) sbb cmp jl pop out fstp or jmp mov dec rorl (bad) bound js jecxz and adcl testb push push je cmp lea jg enter mov mov (bad) mov cmp xor lea lods and mov push pop mov sbb add mov adc aaa mov pop fisttpl addr16 js pop inc and mov fistp cmp loopne add or shrl pushl jle (bad) push mov push or fcoms add pop popa insb rcrb (bad) and push dec mov mov aaa push sbb push adc or cwtl shlb add cmp insl or adc cwtl aam dec in add imul enter push sbb push test add push or rcr pop jnp inc adc or (bad) mov lods mov imulb pop xchg mov lea dec adc push nop or movsb add cmpsb sub leave xor pop fsubrs mov push adc or pop or scas xchg nop js shrl push add or sahf lea adc jne lcall add mov es mov mov pop push xor add sub adc leave (bad) rcrb push xor adc pop adc xchg push inc pop mov cmp (bad) cld xchg xor dec stos sub add jnp and cmc mov mov fs decl cmp jo notl js les inc add mov lock cmp aas repnz push mov lock loopne pop nop jle mov scas insb push ljmp int sub lea xor cmc call add inc sbb fildl xchg vmovsd adc inc dec mov pop inc mov imul pushf faddl enter pop jo ja adc adc insl insl std ficoml andb or inc jae,pn int3 (bad) lret pop and mov roll and mov jbe outsl aad mov sub aas jns (bad) mov mov mov sbb sbb xor pop or clc cmp jae inc adc jnp das inc cmpl dec inc js xchg rolb insb mov inc repnz push std pop iret push pop imul insl add dec jns sbb sbb sbb in xor sbb push mov inc dec jns mov mov jbe dec mov negl cld add sti aaa jg or push mov cmp add sbb in cmp sub fdiv jge xor push and dec and inc dec jbe inc mov cmp subb dec imul pop adcb or inc and js popf xor insb xor call cwtl xor push lock adc or fsubrl (bad) pop jo add push adc lret mov test add fstpl push push push and xchg dec pop push push mov test push ljmp mov hlt and and or (bad) lock loopne inc int into push push push jbe jge adc cmp test xchg mov push push mov push add mov lock jne adc pop mov pop jmp cmp daa sarb cmp add sbb jmp lea inc aaa insl push xchg out or mov push adc shrl cld jbe (bad) or jae insb push stos add and iret xchg push jne das inc push inc fcoml jl jmp imul ds adc mov cmp outsl push cmp outsl add mov inc fwait xor jmp (bad) fbstp lea fcomps jns sarl add pop mov add les add add cltd pop fldt push push add mov out test sbb in adc or hlt jbe test sub jnp test sbb mov les sub cmp fldl mov test imul xor sub lods (bad) ss xlat cvttpd2pi mov and pop pop aaa adc add jg jbe sub mov inc add mov lock gs lods mov adc jnp adc cli hlt xor pop or cltd imul mov dec jmp cmp adc cmp push insl mov sub mov mov fdivr inc push inc or add push aaa and insl add leave mov mov adc adc pusha sbb repnz mov rcrl stc out test lea sbb jae mov xchg push adc shrl sub add mov xlat push movhps or jne bound jo lahf sbb inc mov cmp cld mov adc outsb mov ss cmp xchg cwtl add imul xor push xor sub mov inc loopne xor enter jg outsl imul add testl mov pop inc aas mov mov pop ret mov push lods push mov pop pop adc jle jmp mulb sbb pop mov push push and test mov or js fidivr (bad) push push sub ss lods pusha es je jl jae xchg outsl notb and (bad) add pop pop push fwait outsb outsb pop pop mov dec lahf mov mov or and mov xchg lds or pop cli xchg cmp push cltd pop idiv mov lock cltd or outsb mov cmp or aaa add pop push adc push (bad) test test push pop dec pushf pusha jecxz fcmovnbe hlt or dec xchg inc aas push insb pop sub roll mov test mov rcl sub ret ds mov (bad) jo out cmp sarl and mov (bad) push fcomps cli sub xor dec add or mov div loopne inc or addl cmp cmp mov jne push cld jp or mov mov add inc jmp lea or negb sarl jmp adc insl popa lds xor popa sti push cmp add mov inc pushf jl push jl in sbbl add add cmp sbb lods scas or lock inc clc sbb sbb inc xor inc add cmp loopne in sbb sbb push sbb pop xor inc dec push add mov xor cmp mov add jg js ret or xlat notl movsl push fdivrp decl cmp jae test jne dec cmp jl or mov add xor mov xor aad inc cmc mov cmp fstpt ret xor jb cmp jbe cmp pop sahf jbe cmp (bad) jbe cmp hlt insl pop ja jbe (bad) inc push cwtl lcall cmc test mov test xor insl adc push call aam pop sbb scas jle (bad) jle lea push pop and pop popf cli and jle add and sub mov cld fldt pop jae aad popa jnp cmp arpl or daa mov ja push mov push or ret xor cmp adc mov sti test pushf and pop add jne test loopne add fwait loopne push sbb cmp pop lea (bad) or add mov bound cmp jnp mov and sbb mov xor adc adc push pusha mov test dec adc add xchg aam rolb add add orl or outsb dec insb cltd xor or xor loope sti cmpsl pop push pop jp xchg aam insb shlb or adc mov lods (bad) sbb adc fs in cmp ret outsb pushf push dec or daa call jnp rclb fistp scas in or push jl push push mov fs int3 push adc inc sub fisttpl push sbb inc shrl mov notb inc inc (bad) rcr mov pop icebp xchg mov cs ljmp or fwait idivl ret je mov jmp pusha inc push jge notb adc and and jge inc add enter and pop (bad) adc adc (bad) push call roll in sub or movsb jle (bad) push push xor jmp xor and push pop push cmp fdivrs cmp push call xchg lea fistpl cs xchg adc mov add mov lock clc xor or dec mov lds fstpt cltd xchg stc add xorl mov fdivrl fldz fld fucomp fnstsw test jp lock sub fstp fld1 fxch jb jle lea mov add lret jmp loop in adc (bad) xor ja imul push lea add in xchg pop sti mov std jge std jmp incl fmul fcompp jne je clc mov cli sbb (bad) fsts fmuls pop mov add in ret mov xor test add movsl leave jo xchg mov and jg test push or or (bad) jns sub cwtl add adc lds fnstcw mov fadds add fwait or pop les sbb push sbbl ret sbb xchg add scas adc popf xchg and outsb mov jmp sahf sub std xchg fstpl das movsb clc or dec sbb or sub jl mov inc xor in mov push cwtl and or add pusha insl mov mov pushl call pop stos in aam mov stos js or inc std push push xor cmp bound mov testl or movsb mov xor push loop add and jp addr16 add std add cmp scas ficomp jbe inc sbb jns cwtl or sti fadds rorl leave cmp xor enter roll je lock sahf stos jle das mov xlat xchg jecxz add shll push sub push or lods push sub aam push pop hlt cmp (bad) mov inc cmp movsl push leave rcrb jle and or adc shll jnp and stos inc jae jle push lea mov ret fiadd in push push jge flds hlt ficompl or movsl lods xchg sbb (bad) out push (bad) fldl pop push pop push ljmp push lock nop movsb pop test lods sub fisttpll dec mov aam adc push jmp xchg pusha les dec iret rcl sbb ss xchg data16 sti inc aas negb call cmp mov adc mov adc adc push pop (bad) mov rcrb push ja in outsl ds je dec je add in imul or mov hlt or dec or subb shrb loopne sarl mov fstpl add push push outsl mov or xor fstps pop pop pop jne pop adc cmpl sbb mov mov (bad) dec aam neg sbb and lcall mov (bad) push outsb jae xchg add sbb les fildll js mov dec adc fistl sbb sbb mov orl sbb sbb push adc pop mov aam mov push mov mov mov addr16 adc sti (bad) mov push jne add jl lahf inc dec ss rclb fcmovnu add adc or unpckhps cmpsb je negb dec sub popl sbb or xor les sarb divb ljmp test sbb cld sbb sahf mov je sbb sub mov dec shr es lock fs mov and xchg fidiv loope (bad) andl lahf xor mov mov dec cmpsb jnp adc cs adc or movsl clc dec les jge push iret cli or add push cld cmpsb lea shlb cmp jbe pop (bad) je cmp jb enter sbb xchg inc and loope mov (bad) push push test leave or rorb insb mov int push push mov (bad) pusha and insl dec push or mov rcr scas adc mov add pop mov (bad) pop cmp lea dec leave mov es cmp or cmpsl or sbb xlat sub cmp lods pop pop leave ret aaa push push popa pop dec js push adc or shrb or loopne cmpsb inc xor lods fiadd paddsb mov pop insl push aad dec mov (bad) cmpsb cli pop mov movsb and sub rcrl stos cld addl add cmp test (bad) je mov adc add out push xchg jne xor sbb insl xchg add ja and xor aas adc sbb cmp out (bad) mov dec push cmp jne lods push fisubl or xchg sub loopne add loopne fcoms cld ds push faddp pusha xor mov add ret and push xchg add pop sbb mov addl mov or aas lds sbb test or adc pusha lcall jmp mov sbb sbb xor fcom pop ret pop pop fcoml test inc xor jg (bad) add ss xor in mov sub and addb jmp fiadd adc enter mov pop push stc movzbl leave or into push adc cmovle shrl sbb adc je sbb cmp les xchg sub iret mov fildll enter push wrmsr neg lods cld out dec adc push pop sbb in mov ret sub push push repnz sahf mov cmp shlb fcomip gs push or rolb aas add add xchg mov (bad) sub jmp mov cmp hlt sbb or les mov into lcall loopne daa mov in fcoml and push sbb add lods adc cld add imul and add pusha pushf lret inc sub sbb push dec push test in in (bad) sti add dec por jb push xor mov add xor mov cmp cmp pop or sub mov and leave mov outsb mov cmp xchg daa push push mov rclb push inc adc adc loopne push mov adc js ret fnsave xorl adc ljmp iret fcompl sbb fisttp add or jne imul sbb jne and popa or and pop inc mov or dec rcrl sbb not pusha pop adc xor sbb and js (bad) icebp mov adc inc or dec test aad cli cmp or shlb in mov and push (bad) push push mov xlat (bad) add sub or inc rolb (bad) mov lret mov rcl stos aad adc flds (bad) fadds call cmpl or mov add adc (bad) mov je into cmp sbbl in pop bound dec js je or je loopne rcrl add int3 push test lea jl (bad) cs add sbb add dec add push int3 sti fcoml outsb add push imul cltd push mov cmp addr16 movsb mov mov loopne movsb inc mov test jle outsl or aam xchg mov xor inc lock inc (bad) fcoms or cmpsl outsb adc add mov jnp push mov inc loope add jbe mov add xor push inc xchg (bad) fstpt sbb mov lods lea mov jnp loopne out mov xor push lods dec jl mov push mov scas adc push ja push fcoml rcl inc test and scas shlb enter fdivl les mov bound (bad) insb pop mov jmp adc out les add or iret dec ret inc rclb or cmp jo pop add ret xorb jne jo test shrb cmpsl lock add enter mov rorl pop mov cmp add inc cmp fldl aaa and add movb and push sub fistpl xor sbb push cmp bnd clc sub sbb dec inc popf add add movsb mov stos sbb or fisttp loopne dec leave push in inc inc cs and addl xor jl mov push mov (bad) ljmp or mov adc cltd and add cmp sar inc shl cmp jp mov inc or enter push jne pop (bad) pop outsl aaa bound call add jmp mov pop ret pop nop mov push rorb push mov dec (bad) mov add pop js mov or sbb scas js jg push cmp jl cmp add cmp mov inc sub cmp dec dec sahf push mov outsl add adc pop clc iret outsb push adc inc adc les add push outsb push sbb sbb clc pop fs add xor push outsl pop sub shlb push add fsubs mov sbb add or jnp mov pop in pop push mov sbb fs fcomi je push lods cli insb cmp jle push bound clc int3 dec adc jne lods sub adc or clc xchg xchg jo stos push push fbstp dec inc mov fistl lea dec sbb popa hlt inc cld jne mov sbb add int add cmp mov xor int add aaa (bad) mov push add (bad) adc dec push adc std sbb push mov mov adc (bad) ds or mov xor adc adc push mov add mov xchg mov movl repnz cs mulb dec add or or mov mov jbe (bad) adc lds sub and lea sbbl pop mov or fidivl and in and (bad) push repz ss fdivl sub add add cmp ja daa xor add cmp xchg insb xchg popl sub push mov lds ret clc push push fidiv mov in loopne sub push in stc pusha add sub xchg add clc lea cmp xchg ret sarb or inc add mov inc pop jbe dec sub fsubrl inc in sub cmp jbe adc fdivl mov stos fdivrs push mov cmp imul clc add cmp jl cmp (bad) decl pop mov mov mov mov (bad) xchg (bad) adc xchg jne outsb in mov jg cmpl subl es js movsb hlt add mov fmull int3 je adc gs ret fcmovnbe nop pop ss adc add add sub sub mov push arpl stos das dec inc adc les mov push rcr push xor cltd sbb push push push mov loopne je adc sbb jne sti mov push xor add cmp rorb mov fldl clc add mov je pop stos xchg lods or outsl mov sub out lock js ja jb cmp jae scas ds aam or lds or adc loop sbb enter mov mov push movl and pop mov xor cmp inc jbe adc dec repz lahf inc pop lea jl push jne sbb lods (bad) sub adc sbb mov pop call and or mov sbb dec cmp adc aad jnp aaa andl fsubrs sbb and icebp (bad) jmp adc fild loop or mov bound arpl jo xchg xchg mov add pop pop push sarl cli mov pushf iret jne push in pop lcall dec add and je cmpsl mov cmp pop mov sbb or mov mov out inc cmp push xor push push xchg (bad) push or mov push outsb push inc mov outsl divb inc mov adc insl mov je push sbb aaa adcb adc push jmp call push mov xchg jo adc adc fistl cmp out jbe sub xlat jmp sub xchg je push fdiv fimul loope out cmp lock loop inc jb jmp jne push push (bad) in dec mov jmp jecxz add pop or add adc ss jo test xor and mov push push adc push inc and in lock cld jae negb push sbb mov jnp dec stc jae cmp push sbb sbb incl jnp xor xchg addr16 pop subl popf lret ss push push bound sbb dec call hlt and lret test je push sbbl sub push lret aas mov sbb arpl leave lcall add (bad) cmp mov int aad add xchg loop js xchg xor xor dec out in xor push mov js push sub js in (bad) dec push in sub (bad) cmp pop add sbb mov push nopl std pusha mov inc hlt cmp fsubl sbb and adc cmp or add jo push pop in or cmp pop cmpsb test adc pusha push and adc bound icebp jbe jmp fcoml notl das jae cmpsl push outsl test fwait and jecxz mov sbbb push jp adc xchg or and and adc and es mov test cmp test in push push cmpsl cmp pusha out or adc out ret or ds lds add mov pushl lods push xchg mov cmp fs add dec loopne mov pusha or pop add js add mov sub movsl fimul mov and pop mov test in and jae pusha bound adc jg push fistpll aad pop sbb jmp cld inc mov adc les and scas or sbb lock adc jae add adc roll fisttp lret data16 push xor add addr16 (bad) mov jno insb dec adc jbe inc sub call inc fs mov cmpb push cmpsl cmc inc insl xor sub jo push decl push je push adc addr16 call (bad) pop and rcrb xor or jne inc or mov mull arpl cltd push jmp mov cs aas insl push adc loop mov mov xchg out and dec jmp and pop rcll es pop and xchg (bad) xor fmuls inc mov adc (bad) loope dec push mov or hlt push pop mov mov and push lret pop loope loope lahf sbb imul aas add xchg and sbb (bad) sbb pushf xor inc sbb inc stos pusha or sbb or sub jne and pusha jbe pop push push (bad) js rorb dec lock stos lods jmp sub aaa lock adc lret and push adc jnp pop out or pusha cmpl pop add nop mov sub mov mov add dec adc jl or or sbb jo orb in and or mov cs add or fs in inc or or sbb lret sub lock jg mov popa push iret mov lods add and sub jo pop push test cs jmp adc inc mov aam push and loopne mov xchg mov cmp push sti mov or xchg test cmp mov lock fistl push or fildll popa fsts in test (bad) inc stc pop xchg das sub push mov (bad) push xor jg adc jle jmp orl pushf fwait push int3 das adc es sbb aaa inc ljmp push cmp xlat mov adc mov aas mov mov xchg (bad) or cmp inc loopne (bad) in sti mov add insb mov pop outsb imull jp mov enter sbb and or dec cmp test push add insb es xor (bad) pop mov cmp jl adc movlps xchg data16 shlb mov and or inc xchg xlat add jo (bad) sub add testb fisttp xchg je push pop rcl scas or sbb pop fadds jae mov mov sub inc mov sti push push pushf pop and dec inc lods rolb and push inc push in xchg dec test pop xchg test pop inc add mov add add add and xchg test stos mov clc hlt cld daa inc and inc mov add mov fcoms inc sbb insl mov dec push sbb xor add out fnclex mov aas cmp sbb jne (bad) mov jbe jbe pop push or je sbb fistpl adc inc sbb mov fwait (bad) mov jecxz sbb cmp notb adc (bad) jbe and inc push dec fnstenv add inc xlat push pop fnsave xor dec call jp or scas ss adc add add add (bad) and mov mov je mov pushf nop or test xchg or mov mov je or lods sarb in sub in mov ret xor push lret sahf adc lea or sub jbe pusha adc xor inc push pusha or mov fbstp sarb je push push aas cmp insl add mov sbb mov push rorl fwait sbb fsubs test (bad) ffree mov pop fwait push inc push inc mov ja sarb sti inc dec mov sbb inc ds sub adc inc clc lods flds mulb adc (bad) sub mov xchg dec inc inc mov and mov aad and sbbb pop jns jg je xchg jle enter xchg nop and stos sbb adc fiaddl lock pop fwait les sub or nop sbb mov and pushf jnp mov test cmp loope mov and and cmpsl mov imul sub jae mov jp add add rolb sbb adc or sub dec cmp sbb push adc sbbb pop xor and daa adcl pop jle pop nop mov iret add adc adc out cmp cmp adc mov push push mov and or popf mov ret mov mov (bad) fiadd or test jbe push popf and inc push jl sbb inc inc push sbb sbb psubusb outsl test dec cs push sbb add push or nop mulb push push xchg adc push inc adc cmc push xor or rclb sbb in arpl ss icebp (bad) jle adc pop in popa sub sahf jp mov leave in adc test cld loop ja ja jns insl mov add mov in xor shl fild pop sub mov push loope sbb stos or (bad) pusha mov push mov je in adc adc fcomi out (bad) jecxz jmp mov cmp xchg (bad) jne dec push inc sub push sub es dec (bad) in ret inc cmpsb ljmp jge call mov rcll sub jb divb push push ror (bad) push not adc bound int3 popa push sbbb int into or fisubr rclb sub ljmp jmp add add add push add mov sub lds xor and add jmp xchg ja lret jl or or dec xor xor xor sub ja fildl sbb push cmpl fcoml cld (bad) pop icebp lock or push mov dec (bad) pop cmp popa push sbb sbb xor cltd das pop and or inc shrl mov sbb jle js,pt rclb push sub push cmp add je push lret jbe fsts jmp cmp xor fistpll nop enter xor test je or sbb push push or pop andl adc xchg push pop xor push in and or fsubr mov (bad) or int3 ja mov jne rclb rolb pop mov call sbb enter mov jmp fdivrl mov jo es mov push ds sub test adc dec enter push (bad) mov inc push xor adc (bad) (bad) pushl or or or xchg push mov inc test push push repz or add or dec add mov pop js adc (bad) and repz and repnz jbe lahf loop mov adc cwtl mov or cmp lock lret xor dec sbb ret mov mov pop push adc adc adc sbb fnsave pusha scas mov mov sbbl leave cmp sahf adc pop (bad) loopne and fsubrs mov setb dec ja outsw mov jo and sub pop pop push add js lea push xchg mov lock cwtl mov xchg or bound and rcll into cmp adc cmp mov jne push xchg pop xor or ret adc add mov addb jmp mov icebp or (bad) adc aaa inc xchg inc stos add mov (bad) repz push (bad) fcoms sbb mov sub cmp mov sbb inc rorb push push push push inc stos dec sarb sub inc (bad) inc ds and imul add push pop lea jbe out cld (bad) or cmpb and mov pop mov and add (bad) adc jne adc test push mov add add enter push xor add mov nopl cmpsb or and push and lea imul into adc dec jo pop in (bad) xor pop pop pop pop inc call add adc loopne cmpsl andl pop dec mov test xor je mov push xor sub jnp cmp enter add fiaddl adc lea stos not sbb inc and push sbb mov cmp mov sbbb add cmp rolb pushf push xor xor sub loop fs xor inc xchg xor adc add push xchg pusha pop (bad) ret mov sub and popf lods jbe push push jne xchg add fisttpl sub pusha mov xchg inc bound inc arpl sub mov cmp xor sub int shll or jmp push xor adc inc mov push jp xor loopne push jnp adc and (bad) push xchg call and mov bound mov jnp je pop adc (bad) ficom cmp add sbb fldt sbbb or xchg lods pop mov dec xchg or add add adc xchg pop sub dec ss mov lods outsl mov (bad) rolb sete pop ret into push adc int sub pop dec sbbb mov sub aaa inc daa pop cmp pop mov mov pop add stos add inc pop call mov adc xchg push or sbb ret faddl cmpsb push rcr rorl mov or xor or outsl pop cmp xchg pop ret jle gs (bad) int3 add packsswb inc gs enter jp,pt add sbbb aad add mov movsb add xor ljmp cltd outsb push mov xor jo cmp scas in add cs push and aas cmp jb or dec fldt data16 nop and inc and add aaa ret jnp std sbb (bad) (bad) mov cmc sbb sub test cmp xor lcall cld lods loopne leave pop and inc and les scas jo cli sbb jae cmpsl adc xchg xchg in (bad) (bad) in test sbb lcall out ret fs mov add xor sbb leave fldcw sbb mov adc dec jnp mov or dec mov test inc je mov inc sbbl inc add ss popf push mov push add xchg add push jnp inc dec sub adc mov add jne or mov and and in cmp cli pusha daa add add arpl les sub xchg cwtl cmp imul (bad) and mov enter cmp inc sub dec pop inc notl jbe push cmp sub xor sarl lods sub mov pop mov nop sub adcl addl mov adc jl sbb push leave bnd (bad) fadd inc es cmp cli popa ret push jnp int3 cmpsl adcl xor jmp push sbb inc inc add movzbl orl xchg movsl and jmp adc cmc pop push adc popa mov inc dec and mov cli push adc push outsl xchg rcrl push or (bad) sub sbb fistp inc (bad) mov add mov xchg mov push sbb jae pop mov test cmp cmp sbb cmp mov push je cmp sub adc inc test mov lea mov push mov (bad) movl sub out mov xchg insl add in adcb mov push xor std adc xchg jbe lea ret dec add cmpl mov jbe adc pop outsb or adc enter push or sub inc or push mov adc test sbb push cmpsl sub add jge add icebp fbld mov jo (bad) dec sarb add xor mov das jo mov (bad) les cmp and clc lds sbb jb or aad lods (bad) pop outsb adc les add push lea scas push mov cmp push mov test or adc sub xchg adc popa inc add outsl pop out add cwtl mov test xor mov or jns mov movsl popa fsts cmp mov (bad) push mov push adc mov rol dec mov daa xor ss nop add cmpsb popl mov push mov or out or cmp mov adc push lea imul mov scas ret (bad) mov or or lds sub mov or adc add ret sbb dec (bad) mov xor push inc mov fs dec or add cli pop mov lea pop sub add adc push add sbb and inc fdivs cmp stos cmp adc add push mov sub fdivrl push call inc xor push repz pop add xor pop cmpsb sbb adc push and push mov out add lods sub leave pop xorb and hlt arpl mov sar and jnp mov out add jno jmp sub inc or xor pop inc xchg xchg lods dec sbb push dec sub fmuls jo cmp push add and lock sbb jns push andl inc pop jb mov jne xor outsl sub lea daa iret test add xchg and push dec xchg push inc mov in daa inc mov adc and add pushf fdivrl cmp dec and mov or xchg das in addb cld jecxz test or mov push popaw mov fildl pop mov sti and sub incl cmp jbe mov sbb scas or scas xor inc inc rcll adc dec rolb bound rcrl fistpl or add push ljmp jge outsb cmp js mov xor add es inc xchg mov dec push add push dec ret mov or cli inc mov pop xor inc lods clc loopne cmp xor lret add test clc or sub lods jmp sub inc cmp adc mov jnp nop and inc pop xorl push call jl,pt add push hlt gs inc imul imul pop outsb pusha sbb push add pusha sub mov fs dec push nop fild ret lods or je xchg rolb push sbb add push adc inc add dec rorb inc insb push cmp push cwtl or push pop and jno arpl add nop jnp sarl popf ret xchg out lea add sbb lock jmp xor xor inc push add call mov dec add pop loope (bad) out push insb (bad) xorb daa fs push mov loope jns pop mov mov mov sub xchg and movups add je mov jnp dec adc add jo adc adc push (bad) arpl pusha mov xchg (bad) cmc and (bad) pop roll aad rorl std adc mov mov test pop (bad) rclb xor lods arpl sti bound dec add stos or push xor int mov push jecxz cmp sbb les imul jae hlt fwait mov cmp je dec cltd cmp jne push sahf lock lret jno adc pop or jmp adc lret leave clc adc or imul adc or cli pusha dec fs inc push mov jge insb jmp mov push dec lock pop fnsave in loopne push mov mov aas ja jmp mov jle dec (bad) pop push add fsubl sub imul fld lret dec inc mov sbb jae xor xchg bound pop or and clc subb add push stos inc mov lds adc push mov mov and jp xor push and sub sbb test test xor pop mov push xchg test test sub cld loopne pusha mov push adc dec movsl (bad) and clc or push inc nop enter sub inc fmul adc out adc int3 inc pop push add bound mov ds sub inc aad inc aas sbb push mov dec push pop mov mov das sub pop sub (bad) xlat cld pop ja cmovl divl movzwl push add imul dec add pop stos sbb add sar pop pop pop insb rcrb cmp push dec cmp push cmp pusha inc popa pop inc xchg decb mov pushw jmp cs xchg inc dec add add in js push daa push push xor adc cmp insl cmc cmp push push enter pop mov test mov cmp pop inc push enter dec or and adc xchg mov mov jae sysexit rcrb pop repnz push xor mov push inc jb push mov in ss dec out or aas pusha aad and je push mov (bad) jmp in popf push or adc push in push xor xor lahf add cmpsl or mov fimull and fwait test inc sbb enter pop push push mov sub mov mov or in inc cli jbe movsb fimul scas out test or movsb ljmp jbe mov sub fidivrl mov xor outsl outsb push nop mov add shll cwtl mov movb xchg fnsave push adc lahf adc mov mov mov inc loope mov dec add push sub add push sbb mov idivl inc mov mov test mov std inc mov sbb sbb xor fwait out fcomp push jp inc sahf in and mov mov add mov push fadd jmp push and sbb fucomi inc adc out or add sbb jae add fsubrl jnp repz mov jecxz in pop inc push popa inc (bad) mov or daa mov test xchg push mov xor pop pop ds fist push push mov mov jbe rclb orl sub sarb sbb sub add mov inc (bad) fcomps mov mov lock dec idivb lock inc push pop xchg out or movsl add dec push int3 pusha iret xlat jne add or sbb loopne pop jg pop or and and push fiaddl add add add js sub mov xor std jmp jno mov mov (bad) xorb add sub out or jle subl adc add fcomp dec sub sbb or push out jae mov xchg hlt inc xor push (bad) shrb xor ja js or push or rorb dec call sbb ljmp mov sbb and out ds rcll addr16 mov mov bound push mov xchg roll les loope xchg xchg pushf xor popa fsubs loope test lods outsb mov dec addl or add mov xor inc push ficompl push mov (bad) fnop mov in and test es nop pop insb pop ret les cmp jnp lds cmp les das xor sbb (bad) fsubs cmp pop xchg mov push mov movsb and imul mov dec and sub popa das sbb and jmp xchg and std dec sbb (bad) adc in cwtl jl xor iret cmp sti call cmp movsl push adc push mov in jmp dec xor (bad) in mov xchg sub pop inc iret or (bad) daa dec or and rol xor add imul in push mov inc loopne push popa inc out push mov sub add or aam add pushf aam sub or cltd mov movsl loopne and mov mov add pop add in push sbb push push or aad cmp xchg pop rolb pusha stos movsb push xchg dec rol jmp jne inc fstl scas loop call or cmp or sub lds add add jbe ret jo cs cwtl push pop les xor je push nop out push (bad) loopne enter sbb pop inc movhlps jle inc mov dec cs jecxz aam fidivrl and fdivrp movsbw loope inc mov pop subl out pop loopne adc push pop not addr16 and and sub sub (bad) xlat mov call lds fisttpl test adc pop in jmp xor add ret hlt mov and mov inc cmp jno outsb push adc pop scas sbb jge lds (bad) lock insl add push ret divl aas xor jne mov cmp push insb cmpb cmp cmp fidivrl cmp inc sbb jne jmp mov sub fneni(8087 or ret add dec pop inc fnstcw pushl add in push pop adcl cltd cmpsl fs jb xchg sub mov inc sbb jae mov add push aas inc push inc cmp in es mov xchg dec sbb mov arpl add leave js mov pop in mov jb push fstl shlb add mov orb in les inc adc pusha and loop sbb mov js inc dec (bad) cs dec nop mov mov mov cmp lret push mov in and adc cwtl dec cmp push inc sti pushl push sarb into mov add and sub les sbb push mov sbb and cmc mov mov test mov lea ja into ficoml push outsl dec mov fisttp pop movsb and aaa bound or add xchg pushf mov movsb cs fistpll mov jo mov out pusha push cmp imul movsb jae sub add push push xchg stos test mov movl fldl mov add add sub clc shr popa (bad) je xchg mov jo lods mov clc outsb fldt dec dec or push add pop fcoms or jmp gs int in fldenv mov fistl and (bad) dec push push mov pop pop mov cmp (bad) adc imul xor enter test rclb rcll in xor adc in aas xor call stos (bad) rolb nop pushl scas sbb pop ret inc aam cmp ljmp les adc shll aaa and xlat fiadd add add pop jmp rorl mov imul shr cmp (bad) jbe pop sbb inc inc fucomi fistpll cmp jb jmp add xor mov insb mov cltd fcoml push push pop mov rcll aad fdiv pop notl jle dec or movsb aas xor mov divb js ja fsubrl push xchg dec cs sbb push inc aam clc fisttpl and (bad) mov jp test lock pop inc (bad) adc in loope pop (bad) pop sahf adc sbb js cwtl std ss ret rorb mov ds push add cmp inc and aad mov push sbb fimull jb fistpl xor push inc pop jb pop inc inc in jle push andl adc xchg int3 inc sbb sub or push push mov popa adc jl mov push add ss addb mov jo adc or pop push xchg mov inc movsl cmp pusha xchg stos ss ljmp adc stos testl js and inc or sbb inc nop in and incl mov rcl sub jle push nop cmpsb mov jne inc in fstpt loopne add add ret push aaa sahf xor sub add pusha rclb in inc ja inc fs mov and push add (bad) and xchg pop jge add enter xchg xor inc and mov andb test popa mov sub rcll notl shr cmp fdivrs mov sets and push and sub adc insb divb outsb xor ret xor mov xchg jno push adc loopne adc cwtl aas adc jnp fs pop add push jecxz decl ret mov mov or cmp inc xchg sti push je xor clc jl rorb stos pop rol stc push pop leave popa inc and push test mov or lea scas mov jb xchg std push jne sub xchg mov push xchg cld dec leave push pop mov enter push add add xchg and push je pop inc andl adc scas pop cmpsl sbb dec mov add js invd inc stos jle add sub mov fld and adc push lock sub push mov dec pop jl jne inc cmpl mov push lods rorl roll dec mov and jle or dec push or push hlt push jo pusha and cmp inc adc notb add inc cmp adc sub subl shr dec bound and rcrl add ds cmpsl adc stos push inc inc inc mov or adc cmp mov pop loop xchg mov pop mov nop inc add outsl mov sbb cmc stos sti push add jle jmp sbb mov inc pushf stos xor pushl add and mov sub popf pushf sbb xchg mov jbe jbe or pushf jnp cmp xchg add inc arpl adc or sbb xchg mov mov add sbb movsl ret cmp or aam pop in cld shlb mov adc lret cmp dec add and add jmp lods xchg (bad) sub sbb cmp jge mov pop inc int3 push jg mov cmp pop je xchg sbb (bad) into push out and push xor in fwait test es sbb ja es jb out sbb fisttpll adc xor sbb pop popa fildl dec add dec jmp mov mov enter mov mov cmp (bad) cwtl jbe and sbb aas or add sarl fwait mov push add inc add cmp pusha (bad) jb pop ds int3 gs xchg add lds les enter sbb (bad) xor dec sbb sbb lock cmp jge push xor xchg sbb or or push ret loop loope sbb fadd cld xchg imul (bad) add or sub or pop mov and mov jmp inc cmp add and sti dec push pop rcrl sub jno xchg jmp mov ret movl pushf pop add pop in pushf adc add dec roll dec adc (bad) (bad) jae es mov or adc icebp or inc dec je jno lods push pushl lock jmp inc push mov (bad) xor fadds dec jb add pop lea fdiv test lea jbe mov repnz mov or lret push add push push adc mov fstl jl movsl aad add gs adc loopne pop xor pop or (bad) sbb sbb add pop mov push push lock pushf adc lock fadds imul push xchg or adcl sub bound cmp jnp jbe lcall fwait push fcoms movsb and push push pop add dec jle fcmovnu cmp rcrl cmp add (bad) or dec cld test cmp jo test adc mov repz push call mov pop or test call or call xchg sahf pusha adc (bad) and aad mov and pushf jmp incl (bad) arpl jbe ret xor hlt push fcomps fstl inc loopne cltd adc adc sbb (bad) sub jmp fs leave loop jmp out jne lods in je pop and adc mov sub xchg dec inc jg mov and inc add jbe stos pop adc fimul jnp incb fimull cmp mov (bad) std adc push mov pop add adc push mov (bad) je test rcrb cmpsl arpl inc loopne je and pop inc add xchg xchg sub fadds pop cmp fs push enter or and add nop or sub adc push inc cmp inc pop sbb xchg xchg and pop or mov mov mov cmp mov jb je stos cmp mov sbb xor fdivrs (bad) adc jb and cmp ja push test or arpl call xchg cld push hlt (bad) in rcr inc push or push sub sub jp shll or cmp insb adc fnsave add sti and xor dec in call loopne in sar add leave cmp pop mov adc out sbb sbb loopne in xor in jge mov pop cmp mov sbbb hlt std push cs and push mov or or cmp sub xchg sti jo addl sbb sti push xchg imul lock push test push xor ret jb push push inc sub jnp push and jne adc ljmp movsl sub loope popa jo add mov std push push test push das add fsubs lock aas xchg jecxz sbb fnsave int3 jbe or mov pusha pop das sbb add lods mov add nop sbbb push mov xchg xchg fwait mov mov add jnp iret sub jg out nop push push fild out inc and xchg and in push jbe adc or or push adc and clc inc mov adc ret ds push (bad) out or sbb push jmp add cli jmp add scas stos orl cmp insl dec stos notl or shrb or mov add pop das adc pop and cmp out je cmp xchg insb xchg inc insb jg jne or push adc and push dec je movsb dec nop jnp adc sti stos jmp xlat fisttpll (bad) jg aaa cwtl cmp notb mov nop add fwait mov sbb push mov cmp mov mov pushf pushf mov pop (bad) xor lods inc jo mov insl sarb insb lods dec adc int3 pop popa popa lods inc lods push int3 into xchg into mov and nop add loop push nop xor cmp je cwtl mov je lods push adc push les insl cmc jg jno neg sbb push and mov (bad) sbb nop loope and stos cld cmp add sti inc mov pop fadds jo xlat je inc mov je dec and leave je add fsubrl mov leave pop jmp call or xchg pop push mov and mov pop and or mov fcompl cmp (bad) adc push add mov inc xor lock fisttpl pop and cmp (bad) into mov rorb push pushf add add enter test dec cmp out das pop xchg mov iret mov jge mov fld inc or das sbb pop or movq mov adc loopne dec or neg sbb push not and jo arpl lods jl xchg mov jne inc dec push cmp jne pop outsb xor sbb outsl mov add xor pop stos push sbb adc push mov pop or xchg pop and cmp xor adcl out (bad) xor hlt sbb outsb or lods adc (bad) mov jnp cmp mov dec mov std aad sti stos cltd pop cmp mov xchg lea call gs dec fisubrl sub mov lods add add mov push fildl push mov je (bad) or mov outsl sbb fisttpl sbb adc jmp fmuls and push fisttp out mov push mov mov ja push inc data16 mov or mov add mov push aam jno add loopne (bad) mull (bad) test je movl fnop in pop xor shll jge mov es clc push lods in jnp aam cmp std jne mov inc adc pop fistl dec inc add ret insl test push push popf cs jae or or or or jecxz lcall loope jbe xor sbb jp or test xor cmp out xchg cmp nop outsb inc mov orl and fadds in or in (bad) pop insb xor xor ss test inc add and in xchg xchg mov mov je mov imul pop sahf adc jbe cmp aaa push jo and mov xchg jb insb rorl cmp add enter rclb test lods sbb sbb xor (bad) outsl mov push js mov in popa push and bound fistpl ljmp lds or sbb out movsb pop movsl ss mov add mov incb xor mov aad inc cmpsb add jmp mov jae jge lds inc in sahf rolb insl adcl lsl push lock pop lret add bound xor mov xor fcomi or imul add xor xorl cwtl cmp dec inc push push inc adc imul dec icebp sti cmp jge mov neg mov add jg outsb sbb jne cmp jl add jbe adcl out push imul test push dec daa mov js aaa and neg test addr16 cld mov outsb sbb add mov shl mov jp mov sub rol add sbb pop inc pusha loope push loop test ret insb or xor stos add loope ljmp dec sub push cmp icebp sub fdiv mov dec inc cmp insl fisttpl push push dec adc cwtl jmp inc xchg or mov or imul cmp mulb cmp jo inc outsb sbb add mov js xlat sub mov inc pusha mov lcall push lret inc sbb into cmp icebp dec or push je mov inc sti das sbb je cmp je add pop push call ss dec lret pop dec adc push lahf call jge or or and mov testb sub add xor xchg and pusha loope pop stc lahf jl or or or push frstor arpl in clc push stos cli mov insb cmp add ja sub jnp in jl cmpsb js rcrb push rolb es sti in cs lcall adc pop loop cmp loope or mov rcr cli mov pop mov lods mov leave shrb int (bad) lods cmpsb dec cld jl or enter dec rol jmp sbb pusha jbe mov mov sbb leave enter push sub mov mov sti sub add push ljmp std pop pop mov shr push push inc xor add ffreep inc sub cmpsl lret shlb fwait lods xorl pushl test pop clc jne cmp adc adc push fisttpl or pusha ja or pop cltd pop mov leave push or jmp xor push test mov call inc push roll mov xchg adc dec or jnp shlb sub movsl push aad cmpsl addl cmp jne fdivrs add jae mov popa fcmovu mov es pop fcmovu add or sub or ror shrl and rep push push stc push adc push andb mov cmp call loope or and and mov xor loope push (bad) jne popl je push ret and scas push add clc int xorl mov ds (bad) sarb mov mov cmp ja ret das push pop push (bad) cmp jbe insb aaa mov xor pop mov lret das aam mov movsl sahf push rep or mov jno (bad) jle fcomi mov pop pop js adc dec insl outsl int jno sub pop sbb (bad) push fildl fs mov push sub test js ljmp je add ret push (bad) jno ss inc aam outsb aas mov push leave push fcmovnu sti add adc adc inc rcll nop sub inc xor aaa push adc ja shrb test outsl cs pop and pop ret pop push pop clc int rcrl (bad) jne outsl pop inc inc xor cmp mov adc mov or ss xor pop mov jo mov int3 adc or fs push jb add insb mov enter mov add scas push jnp push (bad) mov mov dec sar ret xchg mov lods mov (bad) sti push dec push ja mov dec cli xor push add int pop pop adc add aad dec mov insb push push and mov cli jb sub mov push insb jl sbb (bad) shrb shrl mov insb pop fs and aam rcr pop in call pop mov and shrl push nop rorb (bad) arpl inc rcl dec inc shrl push imul push lea dec push insl test jno shlb add int3 dec cmp rcrb ret inc pop fs pusha push push xchg cli icebp push pop xor das ljmp fist sub pop rcrl (bad) cmp add insb jnp fcoms std dec insb adc out push ja cmovle mov xor mov pushl and ffreep mov or jb mov daa daa mov xor pop enter mov inc push sub sub mov mov cmovnp lds sub adc scas std add lds adc dec jne call xor mov cmp add pusha stos mov dec stc add and jle lods adc outsb jecxz add or add push xchg jbe insb mov mov jg fstp outsl mov mov adc sbbl jae mov inc loope incb sub fucomip cmc (bad) xchg jecxz push jge inc cwtl fdivrs (bad) fxch add or je adc push das push shr (bad) xor (bad) dec (bad) mov add or sbb lea sbb inc in lret mov insb or nop push shufps xor out cmp ss adc mov pusha ret andl push jb and aaa fmull dec pop sarb dec cmp mov repz jae es (bad) adc ret push xor mov or rcr daa lock ja clc outsb jo mov mov xchg adc pop cmp (bad) dec enter scas loop mov push mov dec inc sub sub mov out out push inc push and fstpt out cmp xor push jmp cli push repnz test push mov out cmp fiadd jae neg mov faddl jmp mov stos pop xor ret push in aaa xchg xlat dec xor leave mov js dec sub outsl or cld ja jmp inc stc cmp roll dec sub scas pop fcoml pop or cmp out xor mov inc (bad) jo inc ror std popf mov mov dec jne pop jmp xchg popa movsl fwait pop ja inc add sahf addr16 stos sbb mov mov dec aaa fsubr cmp adc outsb test in mov test push add or pop dec or js nop aad add icebp push add ret cmp (bad) std mov dec xchg mov sub push mov stc jno mov sti lcall sub inc add xchg lcall repnz inc out push push stos xchg xchg je out popl mov test cmc loopne jne subb loope sahf scas es es jecxz pop pushf mov sbb sub or lods lea or push cmp pop aad dec ret stc xchg lea adc push sub add or lea lea mov sub nop xchg jmp cmp jb rcll test add sbb ljmp cmp adc sub inc sub or xlat add lea inc add inc or outsl fstpt mov adc jne or xor pop sbb and or in jb cli mov in mov (bad) mov fcmovnb cmp jle cmp sbb xor or aam inc sub push sbb mov call lock insb dec add cld stos push and push insb sbb lds xlat dec sub cmpsb jno mov mov mov mov mov lods xchg add jmp or pop adc fs xchg add ret movsl or pop mov sub inc pop jno je and test loop jae mov cmp and add adc outsb jg stc out jbe pop sub in ret xor (bad) hlt mov arpl jo sahf pushf lea pop xchg fcmovbe lcall xor pop stc sbb enter sbb fs sti fildl (bad) mov pop and mov (bad) adc stos loopne or pop cwtl xor and test cwtl cmp outsb xlat test push jne nopl pusha pop add jmp add bound or fs outsb push pop lods loope sbb pop push cltd sbb (bad) (bad) xor inc mov mov fdivl pusha lss add sub adc add sub in cwtl in mov orl adc or inc dec mov push popa pop and pusha dec out mov dec cmp sbb xor (bad) je dec shld and rorb mov int push mov inc mov or inc mov xchg inc fidivrl add xor cli aad and xor das push jl push mov lcall sub lahf es pop xor add adc adc insb repz add add mov roll xchg test dec push push jle push cmp testl cs adc lock je and pushf add aam cmp inc xor push or sbb adc push aaa fwait sub mov fstpt dec sub jae shrb pop push push sbb cmp in inc mov nop xor sub mov push push push sub fldl sub adc lods push les xor sub and sbb and or push and cmpsb insl mov cmp sub arpl mov ret dec xor xor stos movsl push mov jae add outsb mov sub pop movsl sub sub push out mov leave inc call aad jae dec jl addl pop cmp mov out dec xchg out pop jle aad loop lds out or inc xor in dec inc xlat das jb aaa dec mov xchg mov or mov sbb mov das mov sub movl pop rcl jecxz out add out sub aas lret lods pop (bad) sub inc pop mov into xchg inc pop push pop or scas imul out pop pop and sahf cmp mov xor push or sahf sub test push lods dec sbb inc pop adc dec push jp cmc dec in insl test sub cli inc fadds neg jae sbb mov dec repz daa and cld pop popa jb mov mov not jecxz fist aaa gs add cmp negl lods lahf imul int3 pop pusha sbb sub and stc fwait jb sub mov adc roll jne cwtl jae xlat mov bound add dec push jg (bad) jo adcb add push cmpsl push push push mov and jae ja dec sub pop fwait cmp lret fdivl (bad) cmp movsb jne push test mov cmp repnz mov ret dec push sbb bt and pusha push cmp scas mov in add mov inc mov pop mov (bad) mov dec sbb cmp push lock dec pop xor xchg inc push sub push pop out sbb out pop xchg push jae mov or je ds dec pushf xchg insl movsb popa mov or mov (bad) faddl mov pop insl mov lea rcl stc loopne mov cmp cmp je jns pop loop add add add push inc cmp pop mov xor pop out (bad) in push movl push add test mov lea (bad) add loope jp ret push cmp adc out mov out cmpsl push sub dec sahf mov mov cmp popa int3 sub (bad) or mov insl sub lea sbb sbb addr16 mov cwtl insl jb xor (bad) shll cmp (bad) xor fcmove adc and or fcoml inc adc xorb movl pop cmp ss cmc test xchg call push popa shrb inc int add jae (bad) divb mov out push in or sub incb sub inc cmc jb aam push inc mov ret push rcl outsl mov int3 clc adc sub (bad) mov jbe shr mov mov sbb ja cmp int add mov pop shlb or lods cs or jae sahf adc pop arpl mov (bad) lret mov cmp fiadd rorl add inc loop xchg mov loope mov inc mov popa std and scas xchg add adc sbb xchg out (bad) mov pusha mov mov leave jmp (bad) ja cld ja sbb lcall and (bad) jne pusha mov cltd dec and push push push inc lea or clc mov push sub inc push adc add xor sahf xor push sbb and in and mov pop hlt push xchg sub mov dec or sbbb inc orl mov and push xor sub mov dec pop pop sub inc jno adc inc adc sub cmpsb push das and adc or jae inc sbb or cmp sbb insb outsb insb inc fsubrs push mov mov push jae iret mov push hlt dec push push and fistpl mov mov mov add ret ds data16 inc es mov inc push push cmp sbb lea int3 add outsl sbb repnz dec sub hlt inc sbb push xchg sub xchg sbb add dec dec dec leave rolb cmp push aam in mov incl mov aaa push mov and inc test mov inc sbb (bad) pop inc dec dec or inc add sbb inc sbb and dec scas jnp cmp rcrl or inc push push enter jo adcb or adc or loope (bad) or mov push push push fwait add cmpl xor inc or lds arpl mov push mov rcr popa rcll iret pusha frstor and dec push dec ror aam scas std movsb sbb cmc push push pop pop xor inc cmp shlb xlat push inc clc fldt imul stos fs ds push loope dec movl mov scas sbb sbb mov (bad) jl xchg cmp pop pop ljmp adc mov shll dec or in inc in add mov push movsb daa pop mov xchg dec push addr16 fistpl inc mov xchg cmp lock jecxz or int3 pusha dec xor jge cwtl and pushf xor cmp (bad) je mov fistp cs mov inc and out push push data16 inc sbb pop push or push inc pop or ds sbb sub mov mov inc dec push mov or mov adc mov lret data16 or mov shr pop cs ret mov fsubs nop stos in mov push lds pop sbb sbb enter add push inc sub xor push and adc or sbb xor in aas sbb cld lret addr16 jge add fisttpl xchg push push cmp and add ja sub mov mov cli aad pop xchg clc neg shl aam mov das or add enter repnz and testl jb and std (bad) gs xchg add in xchg sub repnz adc xorb dec mov loop sti ss div icebp mov and xor pop mov pop or das mov je jns adc xchg rcll cwtl mov sbb roll rorl out sbb or mov ss pop faddp sbbb mov nop sbb jae out (bad) add out sti fstpl push xor lcall outsl pop adc test push mov fucom (bad) lea add jne push sti sub adc fsubr add mov jnp xor dec lcall ret mov popa incl xchg bnd inc push arpl shl (bad) (bad) sti push push push or mov fldt js movsl mov inc mov mov mov or dec adc inc outsl or mov pop shr push xrelease imul fistpl popf nop inc jmp popa mov pop push add sbb mov sbbb adc push lock pop xchg xchg mov sub (bad) push or mov mov push shll test lcall mov jl rclb xchg mov pop mov sahf mov test mov or sub enter jle inc sbb push test clc shl xchg mov cmp cmp mov mov in outsl imul cmp insl aaa sbb jmp xchg xchg add (bad) shl (bad) mov test nop add cmp jge add xor cmc add sbb xchg clc pop pop ljmp inc insb or fimull jle add cmp lea std push xadd add (bad) jl mov stos add or faddl push ljmp mov add cmp ja jmp lea or lea cmp ja sahf je ret cmp jmp push lods or sti jp test or inc add loope loop jge fs push adc inc js push aas xchg enter xchg test jo lret repz push and push mov aas ror add xorps (bad) shl cmp orb mov fistpl inc mov lret negb movl (bad) pop sbb in sbb pop xchg clc or jge fmull sbb and push stos sbb or ljmp cmp dec or inc test cmp sbb cmp fimul ret lcall add fidiv lods ret adc mov dec add xlat cmpw xchg call sbb jbe mov push cltd movb or add inc in pop data16 sarl add cmp xchg mov loopne inc mov inc inc addr16 mov inc push push dec (bad) inc lods inc pop or shlb push push add pop jl mov mov xor add mov (bad) decl sti add ret in xchg sub xor out dec test add adc jae xor pop xchg lds mov push inc fdivrs mov ret lods std pop in mov sahf or cld sub mov adc sbb div add push loop mov push cmp jb xchg das mov or mov cmp (bad) inc xchg aaa in insb (bad) dec scas add add or loop lcall add sub insb insb data16 das dec cmpsl mov (bad) jbe mulb push cmp cmp int3 cwtl aam mov add (bad) cld xor add rcr test nop insl sub mov adcl jge mov fcomp mov jns mov add and pop or (bad) jb jne mov push sti or (bad) ja inc adc fs imul jmp shl aad push loope mov jns test sub loop (bad) jne push cmp cwtl push seto adc pop sbb and adc sub push pushf stos push sbb loop xor pop and addr16 mov test cld into fimull outsl arpl cmp pop lds xor adc mov xchg or pop aad xor or inc push mov jl movl lock icebp cmp jl pop cmp jg and aad and inc mov and sub sub adc jg sbb mov movl je mov mov mov scas inc lea pop sub (bad) and adc daa or mov xor xor push mov imul jae sub and aaa sbb push pop jne jmp lds dec mulb imul push out add push faddl roll cltd sub outsl lods pop popf sarb cli fwait inc add je sbb dec cld dec or aas mov inc dec repz cmp outsl xor cmp fsubr sub or out fsubrs testl test mov fstl pop out pop pop hlt test nop jge xor jmp scas push insl and insl in and mov mov push sub push mov jge les in (bad) dec arpl jne aaa push sub lretw lea mov scas add dec (bad) leave je pop push dec or mov push sub add xor jne pop pop lea push mov divl js loop cltd or add cs adc sub dec mov jmp aaa inc sbb push dec subl jg inc adc roll cmp sub push add or cs das call mov xchg stos mov sbb cmp add inc push add pop lea jl dec jmp fild sbb (bad) je cmp jge add push xlat jmp pop cmp je aad pop out jmp sbb or mov fwait mov or dec (bad) lret (bad) jmp cmp clts or jmp add sbb push insb (bad) outsl ds pop fmull test rorb push add xor sub mov jle (bad) lds cmp xchg cmp sbb inc in ret xchg pop pop mov add or mov imul add andb inc addr16 xchg cmp test jge mov in jle jb pop mov mov xor sub imul lds sbb pop sbb xor lret dec insb mov test outsl adc (bad) pop pop cmp push or xchg mov mov add je push inc cmp gs insl addl inc dec pop cmp ja jge cmp lock xchg test test mov mov push jle xchg ljmp pop insb or js (bad) js pop movsl pop sbb adc or pop adc lods orl enter push xchg mov (bad) mov out add sbb gs jp pushf pop add in and roll out test mov mov inc xor mov sbb popf or push jle add rol div jl add and mov cmc add gs sub add adc or es add or repz xor inc adc leave mov lock ds neg pop adc pusha add jp xchg xor push sub ljmp jecxz pavgw sub cmp xor aaa and push xchg fmuls sbb jmp add scas inc fild mov sbb int fs jge adc pushf mov dec mov stos mov test sarl mov cmp test mov fildl leave je inc (bad) dec xor ret das nop push rclb and xor lret cmp sub and rol inc aam inc xchg add mov in add adc lcall testb popf push sbb fwait out mov int jno pop sub or add cwtl ficomp loopne,pn push mov loopne inc aam xlat mov push xor shlb (bad) sbb mov (bad) jmp jo lods sub test sahf xor popf int3 clc inc inc push adc popf adc lahf lea xor fidivr lods lret lret mov cmp and push fadds lock xchg dec cmp sbb jmp mov shr push nop push xchg push xchg popf add and lahf push push popf (bad) fisubl inc gs mov fsubs imul mov test mov rcrb loopne fldt or xchg push lock xchg stos mov adc add pop add (bad) nop lahf (bad) stos lcall (bad) sbb inc (bad) out add mov test jmp pop cmp push mov (bad) sub adc (bad) mov lods inc dec cmpsb cmp (bad) cmc insb mov dec jne push sbb mull std cmp pop pop jge mov sub or add and nop adc jg xlat pop setbe mov into inc mov sbb movb push mov out or shr shl dec in lock pop push sbb and rolb (bad) sbb (bad) push xorl aam push mov or rcr fwait or inc inc daa push lods add xor ret push sar dec push sub pop fisttp or dec fimul sarl fsubl or xor and inc pop sub mov (bad) negb mov (bad) adc push (bad) mov sub push inc aam adc jp cmp gs enter inc mov xlat rolb push and push dec int3 pop lea mov dec mov mov fbstp add pop ret (bad) mov push push dec push push and aad add and jbe fdivrl mov push add xchg pop jno rol pop (bad) inc sub and stos and and dec mov or add inc dec adc or sbb mov add push cwtl add jle test or pop or out inc mov or pushf and mov xchg dec mov xchg mov enter lds push add mov or sbb popa push xor inc mov mov cltd push and cmp mov adc test push je cld dec mov in pusha popa mov xlat ffree cmpsl mov sbb dec or adc inc or fdivrs in sub jl dec mov mov insb or push out (bad) ret dec loopne jo adc (bad) jae (bad) (bad) mov aaa adc or push les fisubrl add xor push mov and roll lahf jae shrl bound pop les adc dec push mov std sub lods test je fucom cmovbe es hlt dec add cmp mov and sbb fisttpl dec pop lea dec repz test xor pop pop lahf xrelease add insl test jmp je jl add test je pop add (bad) push adc fsts ds mov pop inc pop sub adc sub push and or (bad) mov mov in mov aam sub jae loope insl adc pop iret jmp sbb dec or in mov cltd incl mov lcall dec inc pop inc sub sbb insl hlt sbb inc shrl cmp dec lahf or je add arpl mov push add cmp int add and lcall pop sbb sbb cmp and cmpsb add sbb sti (bad) adc mov mov adc mov bound cmp pop pop sbb ficompl fist add push and add in ljmp dec or mov inc shlb ffreep pop or push mov jmp push or js xor aaa and lea int sbb bound mov mov xchg adc inc popf sub pusha dec int3 xchg or mov std mov faddl push push dec push dec das push mov adc orb add push push cmp pushf adc (bad) cmp mov dec mov lret mov (bad) scas push pop or fstps or or add add sbb and enter push fmuls outsl (bad) mov repz call xchg int sub xlat dec jmp in pop out add dec out add adc lock adc (bad) and push popf sbbb mov rcrl neg sbb jne inc cmpsb sub mov and push mov push push push notb adc push mov and loopne sub mov jb jl sub inc sub push inc aaa mov mov lret pop dec push sti je fisttpl pop or cmp sarl fcomps sub add push es mov call mov cmpsb imul cmpsb imul adc loope in mov sti popw ljmp dec mov jne cmp mov jge test cmp sub add fwait mov mov pusha or pop jp mov out repz lahf ss push ljmp sub dec sub aaa ja pop xchg jne cmp scas sub push add decl shl repz lea sub js push ret mov mov add adc mov jbe sbbb add mov inc push fldenv adc cli mov fsubp cwtl sub fstp jg divb fildl dec sbb dec in sbb (bad) cmp jne fstpl loope loope pop iret mov je adc sub fldt sbb mov (bad) adc sbb fistp inc cmp jb mov or mov cli std inc pop inc in mov xlat mov push aam inc stos out mov inc add (bad) cltd add xor mov push add jmp test loopne sub inc and add and sub add mov pusha inc sbb mov add rcrb add adc add push popa push leave mov fisttpll cmp aam push xor lret nop ljmp or sub ja or loop (bad) jle add mov decb or lds pop sub adc mov mov aas push outsl add imul out xor push add outsl (bad) fcmovnb jb xor lea pop je sbb pusha sbb je,pt mov mov test push and mov rol sti mov sbb fistpll sub sarl mov je jmp icebp xor lock in adc (bad) mov rcrb rorl fstp (bad) push ss fldl movb faddl stos jne sbb icebp jae in out aas push dec sbb and add xor jmp jbe add jne and shl mov pop push inc xor test push enter int xchg mov lret mov mov movsl xchg and test inc fmull ret jno pushf jmp cmp and inc mov clc (bad) xor push mov pop jne cmp test pop lea dec dec and (bad) je repnz sub pop xlat mov or std cmp loope in rcll dec mov dec adc roll std and add mov out mov and and sub jl int3 push jb loop cli or xchg inc inc sahf jb outsl and mov sub add and push push push rolb je or mov cmp fdivs sbb push sti mov pushl loopne sub add mov jecxz rcrl cmpl xchg ljmp sub mov jne pop dec dec pushf loope and sarl fisttpll push push dec jne daa hlt jle dec mov cmp or mov push hlt pop aad clc testb inc sbb hlt cmp inc mov mov sti jne mov repz push cwtl adc lods fstpt pop push sub and add sub adc js jno and jne mov in decl je xor jg movl or add mov inc mov xor ret add in inc test in jbe inc inc mov out sub icebp xchg dec stos in je adc aad sarb dec sarb lds aad and inc cmp inc out scas ljmp xchg mov (bad) ja mov xchg test es pop mov xchg pop add pop dec sub std mov aam rolb mov sti pop add mov jl mov dec scas mov push inc push mov xchg add xor jnp mov mov lret or xor xchg mov (bad) push or xor sbb push pop mov jg dec cs pop sub push inc jge and xor jns push inc sbb (bad) and mov sub dec shr or inc or stos pusha fnstenv inc push push cmpsl dec mov push and add dec fistp inc xchg or inc push jb mov (bad) shrl sbb lea pop (bad) xor je mov mov shr sub out test jne add rorb (bad) dec jnp popf jle add enter add cmp rolb jecxz add fcmovnbe sub imul xchg movsl mov xchg pop mov movsl inc mov xor sub push ss iret jp and es in or (bad) arpl ret jg fimull mov and add mov jecxz cmc lcall add repz mov sub jmp clc (bad) mov cli mov out cmp jbe sub mov mov inc inc dec jne jae fcmovnbe je jbe cmovns push dec shrl mov adc ret sbb loop rcrb mov push inc xchg xor cmp push call je mov adc loopne add jmp adc (bad) fcoml inc or jmp mov mov lods mov fdivs or pop mov adc dec lea jmp sub fwait pop mov mov rorl jnp and and push push jb das add fadd add sub out ss mov cmc stc push fcomp inc pop inc mov sub push inc push and add adc push rclb jge enter movsl mov cmp (bad) clc aas fcoms addl inc sbb lods sti push sub xchg xchg and add adc rcrb test outsl jne pusha and loope mov add sub and and lret loope xor or loopne enter add cld inc aas xor cmpsb jmp fldl mov add and mov mov mov mov add in and lret mov int3 lea cmp add add andl and (bad) mov push or add pop clc jg add loopne lcall inc (bad) in call imul test lcall sbb lea pushl dec div cmp dec pop adc leave ss sub adc or fildl addr16 cld test in mov or sar fsts jo out xchg stc cmp and nop aam add insb scas and out push fmul or dec add or and rolb mov nop daa and mov adc xlat pop cwtl arpl pop je jl dec (bad) xor test xchg fldcw cld mov pop lcall adc or lcall add ja inc fwait and add push adc cld (bad) fwait mov test add and pop inc mov mov inc push pushl mov or shr adc adc pop sti out ret js sub lea std cltd js sbb sbb cmc pop jae mov imul fs mov sub popf out and scas add push dec push mov sar cmp sarl mov movsb or sbb lret add push in mov push push and sbb lds dec inc das jne push test call mov push push push or sbb mov and adc push (bad) ss sar fidivr dec add sub cli dec push cld sub mov stc daa sub mov pop dec sbb pop (bad) mov push jg insb adc add mov add dec push cmp sbb adc xchg pop inc mov jo pop daa sub add add gs sbb mov pop or adc mov sub testb jne adcl mov cmc pop mov mov adc aam cmpsl insl dec pushf pop movsl mov aas mov mov push mov cmpl add xchg add cli push add dec pop mov dec aas mov add movups xor gs cmpb je mov ret adc add inc cmpl xchg add or (bad) jbe out push pusha adc adc jg mov pop std movb mov xchg sub pop push std add add jmp clc push fcmovb mov cmp jo das sub mov jmp push push test idiv jmp add clc or cmpsb pop add xor lea std (bad) cmc cmp adc sbb push rol push jle incl xlat or mov scas das nop xchg lret je sarl test aam clc loopne rol pop ret lret pop dec xlat or push dec (bad) xor dec inc cmp insb ret nop rorl pushf add test and scas sti inc js add sub xor pop add adc cwtl sbbb les pusha pop push pop mov aam faddl in lcall push pop add or and add xlat add add aaa inc jo loop cs adc cmp rcrb add rorl lods sub std das jl outsb pop add or sbb or mov rorl mov mov jne iret pusha or insb ret fnstenv inc cmc jle stc movl pop mov jb dec xor notl sbb xor sbb or pop cwtl and inc mov dec addb dec inc or je push dec js popf jl daa divb cmp push inc sbb jae gs mov or mov cmpsb push pop stos jp cmpl push jb add xchg lcall ja add (bad) mov jmp jmp js inc out sub in cmp mov dec push int dec (bad) mov cmp push mov or sti orb mov movsl roll sbb roll lahf jecxz sbb orl add jo add add dec add cmpsb cmp loopne xchg nop adc mulb popa orl je sub dec pusha dec add dec flds add and es push xchg pop pop (bad) and jae jb or or xorl and adc sub or xor sbb push loop or or fnop or and cwtl push push popa int add (bad) jg push adc pop adc jmp es dec sub and and adc test adc (bad) insb sub aaa (bad) adc xorl dec cltd daa adc adc jae xorl push pop pop (bad) xor sbb add lea sub dec or and sbb sbb add out add (bad) sbb (bad) mov jb dec dec shrl sbb out imul lcall xchg add add sub add push addl (bad) iret cmp xchg mov decb mov mov cmp je jg pop fisttpl add sub push rol lea pop xlat sub in in dec rcrl out fwait adc xor out fimul sbb jbe mov call jmp call xchg jmp dec and leave add jmp mov fs out in in in dec dec aaa jb mov xorl push pop jae jge out mov xchg lock add popf dec xor and pushf sarb out std out (bad) mov repz std mov popf xchg hlt hlt push add dec mov es out jg negb or div (bad) cmp cmp dec daa nop out fs and lock xor iret sahf push pop jae sti mov dec pop cld je cld sub je inc add ss std sbb (bad) xor xchg sbb (bad) adc outsb stc adc ret inc test sub adcb lahf rol lds mov or mov pop cmpsb or test jecxz imul std sti in movsb leave xchg add es and sub xchg sti out out es out outsb call add sub and pop inc mov jmp pusha xchg jmp (bad) and add push popf cli mov push pop sahf cli out out out dec pushf ret push lock cli pusha or xchg push cli mov fs jmp dec movsb sub sar push inc mov and pop mov negl (bad) cmovge xchg pushf ret add stc pop pusha or out clc (bad) push popa jns sti push sti dec sarl mov or and or lods pop fstp cmp add jno dec pop scas add fisttp in nop insl loop loop outsb in (bad) enter sub testl divl mov out out jne orl cmp and enter mov imul ljmp testb sub pusha or (bad) mov mov out out cmp mulb and popa dec sub negb pop pop mov cmc repnz pop pop or mov mov push xchg and jae mov div or cmp mov and sbb clc xor push fsubrs jecxz stc xor sahf hlt cli cli push cmp hlt and sub mov add das and (bad) (bad) in fsubrl xor hlt decb addl inc xor add adc add popa xor xor push loope jbe aam loope repz sub test repz fwait mov and in mov sub push jns nop adc inc repz sub xchg xchg or bnd sub mov jp sbb cmp pop inc cs dec in in stos pop pop or and jp xchg jne add inc loope jns pusha or negb arpl cmp push dec leave sub add icebp (bad) bound lret enter push inc pop mov jp es xchg nop lock out ss mov xchg stc stc jns sbb jp lock pop pop inc push xor mov xchg insb or fstl js test sbb xor mov adc jne sub add sub jae dec (bad) mov push xor dec pusha mov push add int3 leave add pushf add stos cmp mov add dec add dec pop mov push fsts inc jne test mov dec dec orb sahf inc and add aad push inc lods jae mov fistpl mov cmovno adc jno xchg sbb push (bad) adc push ss rcll push je mov xlat or (bad) je ficoml jmp sub cs push mov movsl adc jmp add (bad) push dec shrl aaa cmpsl or jnp xchg pusha add (bad) (bad) pop rol or scas add neg xor fistpll inc or or je xlat mov pop das rolb ljmp test loop stos pop add push stos adc push add (bad) cli fldl loope je sub shrb stos mov jne mov dec mov adc lcall jae jge push rep pop or ljmp mov inc add add add js add fsubrs or mov cmp cmpw pop jne mov push push inc imull sbb pop cmpl jo jbe pop mov or xchg shrb add ret push push sbb lea push lret cmp push dec dec inc mov aam sar or jbe fnop mov dec add adc ds fadds inc subl sub adc mov mov mov outsl inc pusha lds jle and sub (bad) adc fdivl addb (bad) xor add xor out mov cmp mov inc push or lds outsb mov or pushf add add leave adc and add add mov fstpl sbb out in lock fidivrl arpl jle cltd mov loopne or fwait mov add jae or mov jbe pop push and test lret aaa or dec add pop push and inc xchg cmp xlat and push jge,pt sbb jl loop sbb decl adc mov mov clc cs add mov cmpl mov and aas pop or push imul adc xor mov jbe push pop outsb sbb sbb pop out sbb repnz mov out inc add std add insl imul icebp mov dec add outsl push inc xchg (bad) loopne imul cmp cld jno inc sarl xchg adc aaa push inc sub inc inc add inc mov push mov adc jne add jne fldl add aam fcoms ret cli cmp xor fs add push inc stos jp fsts ret outsb ja xor mov sub mov and es daa incl jp bound ds (bad) sbb insb add and or je dec inc pop loopne sub push decb add negl or std mov rolb in fs out aaa jg or iret push push mov jle incl bound push pop or andb addl mov jmp lea lret data16 add outsl push add add and jg fldlg2 mov jg jg outsl inc add frstor outsb push jbe jle sbb jg pop adc insb jg jg jo mov or fistpll mov in loopne ljmp mov adc ret cltd mov fistpl out sbb lret clts adc jg pusha mov sar push mov or dec jns into pop jg mov adc icebp push or (bad) mov add mov adc ja and data16 sbb (bad) and lock movsb sub push jecxz xor or and push rolb in inc inc sbb jno xchg lock adc popa jmp and aam fcoms mov and sbb or (bad) hlt mov jl,pn (bad) and mov sbbl pop mov (bad) jmp fcomip ja push int3 rcl jo add cmp inc adc jl or and cmp das jl outsl mov test sbb inc and cmp jb add jecxz adcb push push add inc jno push mov fnsave push and cwtl in pop pop push sbb shr loopne or jmp pop (bad) pusha scas adc lock add push addl or xchg sub add sahf jge pop jbe xchg mov loopne adc push jbe pop adc adc add sti adc lock (bad) dec ss xchg push cld sub ja pop orl push push add pop mov inc cmp cld aam push dec adc push add pop mov pop vandps jbe es pushl sbb mov mov adc mov movb and js inc push lret ljmp sti addl mov pushl fwait je ficompl daa (bad) cmp cmp mov adc ja ljmp aaa adc (bad) push dec push mov test data16 add adc rcrl push adc mov add lea lock insb jmp adc mov push mov gs or leave push and adc enter jnp xor enter inc dec cmp loope pop cmp inc or dec jle je mov dec jno (bad) jp push push mov sbb pop loope add insb cmp sub sub cmp mov push in not sbb mov mov inc sahf inc jne (bad) cmpl or and sbb je inc jb push add dec push mov and pop mov xor or hlt je dec cmpsb xlat and stos mov push std push adc fidivl and add and icebp sti xor push inc mov adc jmp cmp sub sub jge mov je rclb repnz mov pop mov insb out or mov es pop cs mov push mov nop add ss cmp pop addr16 mov int3 inc inc sub inc decl add pop push pop inc add xchg push rolb popl add leave add dec add xor inc push inc and roll xchg cmp dec insb mov xchg je imul add fisttp (bad) fmull mov or cmp push mov push jl cld sub inc test test loope iret and out ret cmp xchg push push mov scas mov or or mov jbe pop and scas pusha mov mov and inc ret push mov mov cmp rol inc push loope inc sbb into out mov push mov les sbb ja push sarb movb or out pop fcomps int pop aam psrld gs js loopne rorl jmp add adc fdivs test aas cmp pop jbe lods mov mov sarb pushf je inc (bad) cmp cli je mov mov (bad) ret add or or and or pop sbb jp pop push xchg and loop add jns push push push mov ljmp adc in add mov divl sbb mov push push or andb leave jnp inc sbb pop pop addb jle sbb inc jle sbb mov inc outsl or inc les push sub mov je stos cmp or sbb jg push and xor and psubsw int3 jmp push jmp xchg scas jne pop cmc pshufw imul xchg sbb fcompl cmp push je sbb je pop xchg ret add add rcr add push add mov inc pop xor stc cld add push sti icebp rorb out out mov ret xchg sub xchg and add and adc add dec lea sub push aaa pop mov pop and inc jns gs call fiadd in lock jo aad pop or cs fld int3 add fistpl sbb (bad) jae xor loopne test incb loopne pop in lea jnp fs xor adcb or movhps stos push rcrl adc or jbe fmull push inc push push cld je lea sbb outsb lea jbe push add adc xlat inc push out push add outsl dec jl jg js adc adc mov jne scas mov popl and xchg std pop nop test mov pop fild cmp insl xchg pop cmp dec push and or clc mov inc cmc sbb adc lock push jne cmp ret fisubr aad and imul xor adc inc cwtl adcl dec or jmp (bad) push mov mov out mov movsb add adc insl add orl jp negl or add or mov mov pop sbb fs add lea stos cli ja test mov sbb jp (bad) lea or adc clc testl lea adcb mov lea test dec es and fildl (bad) push push cwtl mov inc gs add sub in jmp je lea movzbl add cmp ja sub and fildll push push cmc mov mov inc popa fcom in mov cwtl push push lea and add cmp push push xor orl add push and std mov jnp mov arpl roll orb mov push jmp adc je and xchg jmp movb shr jnp je lahf (bad) (bad) std lods add or push adc and outsb sti cmp ja dec push pop roll cli sub out adc and and xchg mov hlt jo icebp xchg pop xor or das pop mov jg mov mov sbb movsb fiadd mov and clc lock and xchg add add (bad) inc stos mov mov ss xchg pop and mov lods xchg cs lea fs clc inc cmp jbe xor pop add sub jne pop or pop push mov adc cmp adc push mov fcomi adc imul push add xor pop jmp cmp repz ja adc dec out add movsl jl roll jge jne jb loop jmp xor and aam jo or xchg ja movsl lds xor or sbb std shll (bad) jmp sbb mov lods mov test push pop adc add mov push lahf xor rolb push call stos pop mov jbe adc or push test or fildl insl roll leave mov pop or and mov enter sbb jge xor mov pushf sbb inc cmp jbe mov inc inc cmpb (bad) mov loopne fisttpll add jb mov xchg push ret loope inc or jmp notl sub sbb rcll inc pop daa inc or pop and inc inc and xchg and add negb mov test pop and mov loopne or in push push jns inc pop or mov jo mov mov xlat mov push jae inc out sbb pop pop cld notb test and (bad) cli ja xor pop sahf ret pop sub addr16 jp and (bad) sbb sbb add mov or movsl mov iret add cs lret add (bad) pop jne sbb adc push mov add ss cmp dec mov (bad) testb mov into jo or insl xchg mov mov pop stos or pop out push mov lret jp mov or push decl arpl call or mov fstl sbb add negb push out mov lcall xchg hlt dec push mov mov mov sti xor or sbb jne add inc int3 mov sahf push adc push outsl add inc jl mov cmp push inc rolb pop pop jg fs push int adc cmp jne or out adc pop verw mov pop iret out ss pop mov dec rolb sub cmp xchg or or dec shrb fmuls mov loopne les mov aas pushl jae fdivrl cmpl pop mov (bad) jmp outsl mov sahf inc add xchg or outsl repz jne ja mov push push add mov xor mov (bad) (bad) leave ja lea pop cmpl outsb mov jp je insl mov rorb ret adc cmp (bad) out jge add jmp push push mov mov je mov push or jmp mov loopne pusha daa push lods stc inc push pop cmp test test inc or fstps test jecxz enter test inc bound sbb movsb dec and jo inc mov add mov stos and les or sub pop sub jge call and scas fstpl icebp test push xor mov sbb les incl push or cwtl sub (bad) cmp insl inc mov mov cmc add adc cmp jle mov rorl sbb lret jne out pop mov add pop imul aas add subl add mov inc inc mov test add inc and pusha pop rclb adc adc mov mov mov or jle push out sarl negl aaa ljmp jbe ja stc pop rol cmp imul dec pop push int3 jge or mov adc or and (bad) inc andb or and scas test mov movsb push imul pop sahf sahf xor push xchg icebp mov jge add testw sub (bad) sub cwtl cmp (bad) adc push in pusha pusha cmp sub enter hlt inc mov adc arpl push sbb js aas jmp shlb sub inc rclb push arpl and stos fcmovne (bad) mov add jmp imul mov sub adc mov aas mov or push mov jmp mov adc sbb pushf adc addr16 subl orl dec (bad) aaa stc lea adc popa and mov jne pop xchg in sub adc inc push insb push push cld not jge clc inc (bad) dec jle pop loopne cmp and pop xor xbegin aam mov push jmp cmp pusha dec fdiv sbb pusha popa jno mov lea add and in mov mov mov and push and sub in sub das jb test sbb dec push xor push cmp dec shl fs add jnp xchg sub sbb hlt adc imul cs les ror pop aad sub or int incl orb jb lea pop adc ficoml lods vmwrite sbb add cmp aas xor loope sub ja inc scas mov mov and pusha test and inc and add dec call sub pop inc inc (bad) dec ja aaa cmpb and cmp jmp cs (bad) add movb and or add stc and add push push insl add ret add sbb mov inc hlt scas sub sub jbe and pop pop out call pusha push dec add sub ss mov ret and outsl inc sub adc fisubr mov xor pushl add add shlb (bad) jle shr lds push pop ret int3 add mov loopne stos cmp mov or cld jbe xlat cmp and add or cmp jne adc mov mov outsl or mov outsl nop (bad) push push jnp rcll rolb inc sbb std imul add add outsb jge addr16 fcoml add or xlat adc into jmp sbb or mov js pop subb adc add mov mov icebp sub fcompl xor sub inc sbb js mov mov scas (bad) rcr outsb mov sti ja icebp mov mov push add mov pop shl xor lock cmp cmp into mov jmp mov add pop add addr16 push out push cmp or push pop lods or jmp add dec lods add sub add dec and add mov xor inc add mov call cmp ja or sub mov leave jle push dec shrl mov fldl push cmp dec lds pop adc push jmp and cmpsb fdivr or std cmp outsl xchg push mov jae call roll cmp lods aam je xor dec add sub cmp push insl pop ret and aaa test xor add (bad) pop aas and add dec adc out mulb aas pusha push mov mov add cmpl jne test mov push aad cld xchg mov lods dec adc cmc fnclex xor mov inc es fs std cld dec shlb sub lods or out add or push inc sahf out xor inc xor push pusha add or cmp add (bad) adc add push ret cmp (bad) adc xchg and mov lret add add scas adc and stos sub dec out jge or mov cs lock inc cwtl insb addr16 decl loop cmp lock adc enter push add add (bad) data16 or cmp js or out jg and cmp and push sub icebp add mov or incb xchg inc inc test add xor outsb loop or std add and jb add ja in jbe shrb popa sub and sub xor adc mov push sbb cmpl sti mov push push fmuls aas cmc adc vrcpps shrb mov jg cwtl pop (bad) mov mov mov out xor inc add fadds test add push inc jge push add sbb sbb mov or mov sub add stos mov and enter or popa pop les testb push pop lss inc and add jae and push imul mov ret xor xchg sti adc movsl cmpsb call and lods rcll adc push pushl mov or pop push or pop test movsb jp adc jbe jne push lods sub pop cmp stc cmp (bad) je push pop mov lret mov neg imul rorl pusha add outsb push mov sbb add sub adc add (bad) in cmovb aaa or pusha or mov add dec inc cmp mov xor or xchg sti pop lahf test icebp (bad) ljmp stc cmp jge imul jle andl sub sbb sbb nop cmp or flds cmp les fs add es xchg jae iret fadd jno dec push sbb test cmp lea (bad) push cmp (bad) sub sysret mov mov ror jae push mov pusha call push and jb es outsb mov pop add mov ja into adc sub and mov pop or insb (bad) rolb inc jmp pop (bad) mov sub inc xor imul jnp gs mov leave inc mull (bad) testb cmp cmp cmp sub inc pop mov inc fucomp add sbb inc fstl mov cmp negb inc push jmp xor mov push push sub sbb pop je push push push cmpsb sub fsts pop (bad) incb cmc cmp jne decl sbb clc mov movl dec jb rorb shl loopne add fisttpl jno bnd push mov movl push mov movaps adc mov sbb push popl jmp incl dec or ret mov mov dec ret push inc sahf mov push jns sub cmp lds mov pop jo orl test add mov or loop incl mov sub push cmp push popa mov pop xchg repz jmp sbb jmp inc cs test push inc inc fisub je lods es pop pushaw mov cmpb add faddl ror cld (bad) ja mov sub dec jl not leave jne rorb je mov push inc cmp lea or pop fdivrl inc loopne add sbb out mov cmp cmp imul xor and mov leave test movsl push test out add xor mov (bad) and sbb mov pop sbb sbb adc jo hlt imul cwtl call add aas jae clc mov jae mov add (bad) or jp jno int mov mov push jl or sbb xor pop shr outsb cli adc rclb cmp addr16 aaa test pop jne cmc test cmp mov stos and int mov dec scas or sub and cmp cmp data16 test add lods stc push outsl xor (bad) mov (bad) push rcll inc mov mov cmp push push jp or pop js add and xor inc or rcl sbb push fwait test ret jmp jo mov adc or rolb fst mov ret jne add js imul adc movsb mov sarl push push adc mov or xchg cmp push jo daa jae arpl and pop sub das ret push sbb sbb jge,pn test jbe in add xor inc and cmp push add or push pop mov push xchg add push cmp xor mov or pop push pop jmp int3 cmp and or rcrb push (bad) (bad) pop add cmp mov (bad) jl mov (bad) loopne pop (bad) cmpb jg lds mov nop and arpl and lock mov xchg pshufb shrb adc (bad) aas cmp push cli jl jmp or xchg test mov add je mov test xchg test and or js sti inc test jne sbb clc add out add fidivr outsl xor inc mov idivb mov mov ror inc or subl mov jl (bad) repz xor inc mov inc mov sub (bad) dec sub push pop mov fcmovbe ret or cmc push push jbe sub inc imul leave fwait xor ds cmp aad jne inc jmp and push mov xchg pop daa movl fistp incl lock test push xor adc cmpsb test ficom mov aam and push stc jle mov dec and push mov mov (bad) cltd sti push mov test inc add mov jge jb scas rolb add jp inc cmp mov or inc push inc popf shrl inc (bad) and push pop sub xor mov mov inc insl push je mov je and add inc jno ds insb pop and mov mov test aas not mov or mov mov cmpsb sub rcrl and mov (bad) xor pusha or insb repz inc in xor adc pop mov test idivl pop mov lock jg push jg pop pop pop mov cmp mov jmp pop cmc mov mov add xor adc cs in and and lock mov imul in adc and xchg fisub cmpl or inc les popa insb testl or cltd sub orb out or in stos xor xchg fstps xchg adc rcl cwtl in pushf push or adc lods movsb adc jmp xchg test imul mov mov inc xor stos lret sbb or jne push mov aaa xor push sub jmp sbb and inc and or or xlat fnop std icebp mov inc or push add loopne xor mov icebp or push pop rorb jecxz lds inc or popf (bad) bound push sbb stos add ss or jo lret cwtl add leave adc xchg add add mov cmp mov enter push or test mov adc andb ljmp or (bad) (bad) sub andnps mov mov inc add sti push dec add or test js (bad) or in adc enter test pop mov jne sar dec cmp sarl pop insl sbbl push inc wbinvd (bad) sbb sbb jbe std jg lea not and decb cmp dec loopne pushf mov into sub mov push cmpsb pop add jle mov jbe into push cli add xchg mov mov pop xor out mov mov sar sbb push lds cmp sahf fiadd faddp mov inc adc je xchg or sub cs cmp fbstp push xchg jg je dec add mov loopne mov inc mov aaa sbb jno inc in mov or or fs or push add icebp pop xlat ss mov and add ret aaa mov pusha mov dec paddd inc pop add pop mov jae cmpb insb push mov push xor sbb ss pop inc cmpsl or jmp and dec xlat add and mov imul lea push add add or clc rcr fbld sti dec adc and loope add push mov adc push xor pop xor sub pusha pop or push mov sbb movsb mov add decb ret cmc mov or cmpb (bad) call adcl fimul push or pop adc rorl adc js in adc adc ljmp jge pop push rol inc sub add dec das inc insl or aas and pop mov push fstl lds xor lock xor adc divb push xchg inc (bad) lea in cmpl and xor das push aam push push sbb mov fldenv dec das xor sbb add movsl inc adc jbe push in jmp addl add incl push fldl mov push xchg mov xchg loop outsb insb mov popa add xor jge jo and dec imul cld test inc arpl rorb jne push test sub xchg mov lea lea fldl inc das push mov sub push mov orl jne cld push mov pop out adc lock movl fldl add pop mov mov (bad) jne xchg fs aad mov jg mov mov testb push mov push js pusha sbb shlb push imulb leave push mov mov xlat sub pop shr dec xchg ljmp loop cmp icebp sub fcmovb adc ret push or push fstps (bad) cmp and stc add sub or push dec pop mov mov pop pop sahf pop inc adc imul fcoml es add pushf nop fcomps enter dec mov add mov or into add add mov hlt push mov dec adc shrb icebp mov mov pop insb mov jl aas or inc rolb pop mov dec or inc pop adc dec sar pop sbb adc fstpl and mov jmp insb enter lret test dec aas cmp mov pop cld xor or fistl inc cld mov cmp add dec popf jge pop (bad) or pop dec and pop xor test loop add pushf push pop or rcrb dec or testb aas pop sbb push sbb dec dec push lret dec out dec mov outsl push dec dec push add dec and outsl ja inc fildl ja or mov xchg das rorb adc cwtl icebp mov jae cmovp aad or push push cwtl xchg inc clc cmp mov push bswap mov adc cmp push into setns jns dec or sbb add cld scas aad cmp cli xor mov add loope lcall pushf and jge dec das mov into mov orl or rolb sub xor in mov and and std or mov call push jne push pop and fnstenv jmp jnp add xchg and push cwtl mov sbb lock jbe inc or mov push adc add push push sub dec xlat lods xor in sbb cli ljmp mov pop mov dec cmp push jg iret jne sahf ss or push pop pop cmp cltd mov out fildll (bad) (bad) dec inc pusha and jne mov push push pop xor inc test call push dec mov sub icebp and ret pushf and fcmovnb inc loope (bad) dec decl pop loop je cmp jge iret es nop arpl mov pop mov decb jne test cltd jmp jmp cmp mov pop sub or ss cmpsb sub pop and aaa aaa clc adc mov or mov push jg mov insb lret xchg and in rcll mov or popa js out or xor shlb sub or sahf or stos mov mov (bad) or or adc jne add aad adc aam or jle int3 lea jne,pt cmp mov dec cmp add add cli ljmp mov jno or sub push aam je and hlt stos call add or dec je mov fwait push lea gs insl fs popl push in insl or adc mov (bad) jbe ja mov push mov push pop sbb and inc adc push inc or inc mov add mov push cltd andb ljmp loop cwtl cmp add imul (bad) rclb int jp or and and add loopne rcl inc pop aaa (bad) test pop dec push mov movapd xchg in add notl fcompl cmp push stos dec loopne sti fsubrs enter dec mov or or mov add lods popf pushf pop sub je push popf mov cld sbb mov adc clc pop testl push add jecxz scas add adc mov test shrl inc int mov stos mov xor fwait inc mov pop mov or adc lods call adc mov mov mov mov adc inc sub orl repz push adc inc and dec mov xchg in arpl pop dec dec cmp (bad) add testl dec add push push ficom sbb add mov dec mov test mov pop push push imul aam inc jne insb cmp cmp fmuls add addb add mov pop cmp mov je adc jno sbb jbe addb xchg in je push push popa add add or aaa mov enter decl mov and (bad) jbe outsb inc xchg ljmp add sbb jbe pop ret mov aas sbb pop aad add and xor leave add outsl sbb or mov (bad) add dec and or sub and or jbe sub mov cs cmp jb add out sti jb ret sub (bad) jb inc ret and add (bad) push add scas lret or mov or test sbb sub ds dec inc insb das adc mull lods push add mov and mov mov and ret (bad) xor add popa sub pop sahf xor xchg push stos loopne cmp mov mov mov sbb jmp addl add and fiaddl rcl iret xor jb push fsubrs sti or jo xchg and add jo aad fs mov mov adc push mov sub mov es stos (bad) inc jne pop dec orl (bad) mov mov dec je xor (bad) and xor sti (bad) mov push mov or cmc (bad) (bad) xor and push rolb pop addb xchg sbb orl pusha xor xlat or add jge pop sti add sbb popa test mov pop cld dec jbe jl jle rol inc fs adc cmp adc or adc push add ret fdivrl add pop push in adc (bad) pop ljmp sbb pop clc inc pop push fs or ss or add sbb adc or mov xchg or mov or xor and ret or loope inc adc sub sti dec adc mov push adc dec or ljmp inc test xor adc adc jmp fadds mov add adc pop mov movsl pushf jmp fadd mov out pop repnz lock cmp repnz pop jo push mov shl loopne jp fdiv cmpsl pushf jne repz push sbb ja popf popa push ljmp push push push add mov adc mov and xor lret (bad) test lods test jbe jbe lea rorl or add insl insl int3 push (bad) push push add mov or jmp fs ds push jl inc pop loopne inc add adc sbb fisttpll or enter sbb dec adc bound jmp hlt int and mov fidiv dec adc pushl inc xchg insb flds sbb sub add sbb mov sub rclb call pop lds jp ljmp (bad) int sbb adc push or clc stos imul push push jb push int3 add xchg mov ret push push mov test cmp add push push or arpl add arpl mov adc inc cmp add int and add add pop xchg push jl xchg sbb repnz je pop adc (bad) xchg orl cmp ljmp lods loop outsl jg xor mov push inc xor aas push mov push sbb insb divl push imul ret xchg jmp fcmovne dec (bad) mov xchg leave pushl pop lds and cmp mov sub int3 mov push repz mov (bad) and add or clc push mov (bad) push inc jno push inc pop or inc cmc inc mov or mov jbe pop push sbb adc fs dec ss and and inc push sbb sub inc push sbb cmp mov mov inc adc sbb pop dec dec push sbb push pop pop fs inc push pusha fs insb jo inc daa sbb (bad) mov pop jb fs mov xchg cwtl leave and movsb mov je cmp pop jp (bad) inc dec xor cmp arpl fnstenv mov mov jle in ret add mov cs in xchg or and mov les push xor inc adc cmp sbb cmp xchg inc clc or out mov mov add sbb and xchg and add sbb ljmp paddusb and sub mov pop sub mov jae je and test add (bad) mov outsb xchg adc fldenv leave push and aas jge iret and faddl cmp push jmp fisttp fnsave cmp or cmpl jne mov xor mov sub or pop xlat mov cmp out mov jne fildll inc jge push mov pop inc adc add dec add pop decl xchg in xchg lea stc mov lea push push or enter rorl xor push xchg dec pop aas jnp pop xchg xor aad pop sub push xchg push insb adc adc rclb mov push fadds aaa or dec int3 das stos inc inc fneni(8087 add sub push pop cld or adcl sbb sub cmp and lea inc mov (bad) dec cmp inc push pop inc fwait jle cmp es ss add mov cmp sub sub cmp or mov ret ljmp inc (bad) jnp add fadds inc add push aas in dec add dec push mov (bad) add and pushf adc es dec aam adc and sub mov sub push and mov pop iret push mov (bad) push jmp test int sub add (bad) push inc rcrb mov pushf call movsl in lsl sbb or inc fildl lods adc (bad) call pop inc inc or sti std loop or push or and adc cmp lret inc xchg pop push rolb rclb sbb adc enter adc adc sub sub mov addb jmp push xchg and insb fmuls inc shrb sbb (bad) je,pt adc add sub movl sbb int3 cwtl and xchg cmp addb hlt add mov xor mov add or insb adc pusha in movsl add cmp fist push pushl xor mov push xchg push mov je and sub ss add (bad) hlt je testb sbb mulps lcall orl and or fucomi cmp xor push addl mov fstpt adc xor popa rclb adc and and leave fiaddl loop mov jle inc sub std stc add xor movw or pop or lock outsb jecxz push sub hlt mov test pop add pop and movsb mov (bad) lods xchg add sbbb or mov and sub sub sbb pop iret into (bad) xor mov add movsb test cmp dec rcll cmpsl fild dec and push or fs adc sbb cmp sub ret (bad) xor jecxz pop ret xchg adc mov ds fildll xor cmp mov sbb mov mov sub mov mov mov les test jnp out and or mov ss repz rorb inc andb jmp les mov inc inc and mov add add daa std push (bad) cmpl leave and add add add dec push dec and daa cld jl inc add pop pop cwtl aas pusha dec cmp xchg dec cld mov xchg add nop push sub and and and arpl es mov cmp mov and mov jae push lea xchg cmp add mov inc test fiadd rorl (bad) mov jl ret ret (bad) rclb or adc xchg jmp mov les mov cmpl xorl ficoml cmp jne fimull push mov or imul or or pop scas pop pop pop pop pop nop or adc stc push ret rolb (bad) pop rclb add jb sub xchg les mov pop xchg sbb lock sub lds packsswb sub inc dec jg das mov pop (bad) pop and push pop ret lods jnp or xchg jl jne (bad) fcmovnbe ljmp div das and sti out in mul sub ja jb cmp jbe dec sub sbb jl and or dec neg sbb adc add addr16 adc push vmovss adc movb enter push mul pop mov or add mov addr16 add pop sub adc push inc in into mov jbe push fsubl add aaa push pop jns adcl jge sub hlt mov mov cmp imul int lret add jl add push subl cmp xor mov pop lods (bad) or push push xor inc jne xor (bad) mov pop inc jmp cmp jne andl mov or jne adc addr16 sbb test hlt mov or (bad) aaa jne,pn mov xor and push xor pop cmp std cmp adc sbb out sub jne cs xchg sub add inc bound shrb mov add or test in movsbl sub fmuls add std aaa and popa cmp push ja sbb mov cmp mov xchg add mov or pop sbb and lahf add jl pop (bad) (bad) insl push loope scas pop mov test mov sbb sbb ss je cmp cmp test inc mov daa popf ljmp pushf and daa je push mov and notb (bad) mov inc mov sub adc inc add popa mov mov sbb xor and and inc add lods push aad pop push insb mov add gs add test hlt call popf mov dec jmp pop mov pop clc stos and es insb je stc and fildll jb cmp ja add cmp mov fdivl (bad) cmp pushf jmp mov or mov faddl jb idiv rcrl leave dec aad add add push inc jmp (bad) fmuls inc pop je loopne insl mov rcr iret test lcall jecxz push or test ja divl lret push ljmp incl iret xor sub test xor mov or push mov mov sub test out rolb inc mov test imul aam xchg sub mov (bad) aaa push std cld (bad) jbe hlt jmp add inc nop daa mov ja pop fidivl addl fxtract xorb sbb adc mov sbb or enter jg add imul jg clc mov add jb xor dec push adc add adc jmp mov pop shr inc add add sbb add ficompl pop or add loopne sahf mov push mov xor sub mov sbb insb cld stos (bad) mov arpl loopne adcl and push add mov adc mov jp sbb cmp xor loopne bound push mov das cmp cmpsb inc cmp (bad) jbe push scas mov mov cld fld1 sbb xchg adc dec xchg and pop pusha jae inc jb je sub out add xor (bad) push mov xchg mov int les push cmp cmp xchg and add mov outsb add or add adc sub and sbb inc xchg stos loop push call sub mov add xor xlat stc inc mov das hlt outsb or fisttpl imul xor push outsb inc test or add sub lds mov dec mov jp popa fmull (bad) ret mov popl inc pop dec xor mov inc in push negl sbb add imul ja lods call sbb inc and inc jmp jmp (bad) mov adc adc jne or ljmp in jne add incb pop push push add push call mov das arpl xor and fistpl adc ja or pop gs jmp add adc push adc push sub cltd rol in ja cmp jge cmp jle and decl mov or pop syscall cmp push jge xchg inc inc mov (bad) insl mov cmp add jbe sbb lds mov cmpsl sbb push push xchg sub and (bad) mov (bad) pop ret sbb jbe and or mov or std icebp ljmp lods cmp mov mov mov xchg push pop js adc in icebp pop jmp sbb add hlt xor (bad) outsb mov adc push hlt fiaddl push cmp lds inc call push sbb jecxz incl adc lods ljmp cs adc or or xor or js pop stos fwait pop mov loopne movsl call or pop jo push insl xorl (bad) mov push push jo jp inc or add loopne sar ror push cmpsl stos inc xor pop inc xor mov frstor dec push negb sbb mov ret mov add pop mov or mov jle repnz rcr insl lods lea push push lea popf mov rcrb pop sbb sahf icebp js push sahf xchg fsts cltd mov xor push cmp nop jne in (bad) or xor pushw push rorb mov cmpsb outsb aam pop push loope cmp or jmp xchg push pop push rolb mov sbb add sbb fist push (bad) pop push cs jne sbb push pop call jmp inc icebp push xor sarb xor (bad) pop loopne,pt inc inc push mov fmull je lds inc sbb rorl loop cmp pop out in push rcrb ret jo mov sub rcr dec adc fstpt lret pop jne int3 popa mov clc pop gs push shlb inc sbb inc mov mov cli mov adc sbb sbb add inc inc and pusha mulb fldz rclb inc jl fcompl idivb (bad) and push iret mov sub jo mov or xor adc sbb pop adc sbb (bad) mov pusha push in dec xor call aad test pop call aam ds adc outsl test or pop mov or sub jne dec std sahf inc ficomp add cmpb push (bad) sub test lret jbe cmp lods insl test cmp insb dec mov mov inc mov movsb sarl lahf (bad) xor mov lret scas daa jno pop ljmp mov jp add push cmp sbb inc in mov cmpb push inc lock dec cmp sub xor jno das jne xchg or mov fiadd add sub push cwtl js push rdpmc (bad) push mov cwtl movb mov mov jb,pn jns sar lea sub or incl push mov pavgb cmpsl or add push pop mov add cmp pop sub inc pop inc add add jno xor subl imulb mov mov cmpsb inc push add in add int sbb out movsb (bad) and cmp cmp push sub mov mov ret jbe or mov adc mov adc jge push sub stos push push (bad) popf jge loope push xor sbb sbb xchg test enter sub or aam mov jmp dec aam dec pusha rcll pop jno or mov adc add (bad) jb sub and mov xor pop (bad) dec push fsubl test mov lea jge leave xor lret pop pop jbe pop clc call (bad) sbb lds push cmp pop lea outsb sbb pushf cmp lods add clc add pop cmp orb and clc adc incl add cmp adc fildl les jno sub lret mov mov dec adc add mov pop add jae aad out lea std sub and xchg add sbb mov sbb fdivr or loopne js inc jnp pop add xor mov aaa cmp xchg dec and add xor inc das jl sub dec jbe xchg adcb add push test dec mov inc neg sbb jecxz add cmp ret daa mov sbb (bad) or jne sub pop inc je mov dec adc out or add inc cmp or sub mov jmp xor add dec or jle adc ret mov push hlt inc sbb loop pop movsl jle push add jnp outsb sub mov loop out (bad) sub call cmp jbe insl inc push outsb test xchg stos std lods enter mov jbe adc jl push dec in jbe cmp cmp xlat test mov movsl inc jge xor out aaa jbe mov pop add xor (bad) je adc inc ljmp jb and in cwtl lock push jecxz mov mov xchg movsb pop test and and cmp js jg loope (bad) lock push sub or call (bad) neg cmp mov js mov loop and jb push aas push (bad) xor rcl push shrl mov push jg push jb and xlat add inc and mull pop or or dec pusha or jno dec (bad) test cs mov bound jmp pop sar push insl and adc dec jo icebp adcl int rorb fidivr sahf jne outsl inc stos shrb (bad) mov or notl sub jmp lock or push ret inc inc and push jge fldcw fsubrs jl cltd or rorb xor sbb add arpl pop jge bound add dec bound add (bad) push inc adc jbe in int3 scas adc sbb or dec add es (bad) outsl push mov rcrb sbb cmp mov jbe aam loopne stos cmp subb lods into adc sub (bad) leave push push mov outsl adc push jmp cmp pushf sar jl mov sub (bad) rcll (bad) stc mov pop shlb fcomps insb jno push fldpi push mov mov sbb (bad) mov or xor fiaddl pop add mov mov add jne and push icebp xor fstps mov add je sar add lret and sbb jmp mov add movsl add and sbb mov adc xlat loopne scas add mov push ret lods aam add or cs mov call faddl (bad) fimul pop clc (bad) mov add push xchg lahf and adc add sbb fnstcw (bad) jmp or (bad) mov rolb clc adcb mov inc or scas fs (bad) xor cld push push xor and testb and mov repnz test stos mov in push add test add andb inc jge dec add pop mov sbb daa mov pop (bad) xor mov adc or fisubl daa inc inc es ss addl andl xor inc test gs sbb add loope (bad) loopne shl dec or xor push mov movsl cmp je inc push sbb lock icebp adc outsb pop add add xor leave mov dec mov shrb nop loop adc scas ret add push lock push fcoml stc fldt testb pop and and and insb imul cmp aas mov sub pop mov add adc xchg and push push add pop sbb jo into mov push sub mov mov push and mov xchg pushf add mov and mov fmull mov rcl bound cmp jo pop call jle cmpsb mov push xchg cwtl sbb shrb xor add dec insb jno push push mov add jg cmpsl jnp outsl lods mov mov jg inc lock clc or pop jl (bad) mov or out pop or xchg and add add mov cmp xchg gs push ret mov int3 push push stos push sbb dec pop mov fistpl inc int3 add sub insl sub xor mov xor pop addl mov or (bad) jo push pop nop adc daa iret dec adc push mov shl xchg movsl outsb jl xchg fdivrs js out push pushf cmpl dec dec pop pop adc inc cld pop inc cmp jae les push (bad) sbb sarb add cmp mov rol push push insb jnp xchg inc jbe insb sbb add jg cs jmp adc add cmp insl jno fcmovnbe jmp rolb jle cmp inc iret enter push pop jne addb outsb pop add adc insl push cvttps2pi xor out sbb or nop fwait les fwait mov jb stos pop lods cmp lcall call sub adc mov add or fiaddl or xor jle stc ja xchg pop (bad) test add stc adc mov inc cmp cmpsl dec fcom jl std stc jge push inc orl jne sbb ss ss inc cltd fbstp inc (bad) pusha sub or mov outsb add ljmp (bad) or pushf cmp faddl cmp jne cmp je inc daa sbb dec mov jmp xchg sbb aaa sbb add mov lret popa pop cmp (bad) mov mov or push inc andb xor dec pop push mov jns and je sbb adc or aas or loopne push push fs fldcw aaa dec je dec jne push inc or ja test jge sbb (bad) and cwtl dec pop jo and adc adc and sub imul adc cwtl (bad) pushl lods adc popa push daa add mov loope scas scas or (bad) dec or jle mov sbb push arpl inc dec out fxch add pop xchg push fiaddl add cmpb or arpl je lods mov push and adc push in test mov mov or vdivsd and in cli insb mov js sbb cmpl push cmp jl iret jg (bad) mov adc hlt pop or dec sub sub cld lea testb hlt sti sbb test out cs std dec lock pop jb adc stos add push push mov mov dec imul (bad) jl adc or push daa test mov or repnz inc pcmpgtw adc or lock or add push dec cmp adc (bad) movb inc mov xor pusha inc bound inc xor adc (bad) mov fsubs outsb and fdivrs sub sub cmp pusha sti pusha sbb (bad) push test gs add jle and add stc push fwait push or imul mov pop mov xchg add pusha cli or push or xchg es pop cmpl inc fmuls jle add dec roll icebp jbe push dec add out mov cmp lock jae mov pushf jg push fadd jg ljmp pop jle addr16 pop scas adc push jbe add inc aaa mov xchg fisttpl mov cmp jg aam mov or inc jl and jle and hlt xorl loopne test xchg or ja test enter shrb hlt sbb and cmc mov and inc dec inc rorl adc ret dec mov add popf and gs adc add repnz add or mov mov add mov aaa dec add mov xchg dec add clc push aam mov pusha icebp sub sbb int notb test dec or and push push dec loope xor mov sbb mov je cmp add adc or inc and testb (bad) (bad) mov movsl js mov subl (bad) jmp ds stos and dec push jb rolb (bad) push je and inc mov jb cmp jbe in (bad) or je out mull push sbb push call in add pop xor and sbb sbbl sbbl push push sub push mov add mov fwait lds rclb mov adc jmp sbb mov mov mov push sub sbb mov push jae and inc push pop ret dec adc inc push xor lods shrl lea (bad) or (bad) mov dec and (bad) mov mov das cmp (bad) rcll jb push push mov adc inc and and bound aaa sub and scas jmp sub lcall sbb and cmp enter (bad) sub adc mov mov sti add sbb cli inc sbb add lcall stos ljmp add scas addl pop js div jae xor ds (bad) jbe dec cmp xchg cmpsb xchg push mov jb inc mov add add test jmp lea sbb push out cmp insb adc jmp cmp rorb cld stos dec les icebp mov push push inc mov or mov out sbb push add call icebp sub inc or mov add add std pushf lea jl lret mov pop cld jns sub mov jge pusha fsts hlt stc adc sbb add mov or jbe pop sub adc je cmp mov add xorl fsts mov push outsl add leave cmp and mov push push push pop sub mov lock add and stos fwait sbb je push and sub sbb sti jb cmp or nop/reserved mov adc jl andb inc sbb test mov or jge inc sbb test fcomi ror daa test or test fmuls int mov inc test mov push into pusha push sub xlat sbb inc sbb jne xor sub push je mov mov insb add or call icebp cmp xchg insb clc std xchg xor fistp mov ja pop add push add xchg into mov ret imull cmpsb sub jne cmpl or or les inc adc adc adc sub sub or xchg loop or stos jo (bad) lock xchg mov jmp bound in fwait in jae push or mov mov into sbb jge push clc xchg adc pop call addb das or add call add nop into xor dec push enter xchg stos sahf adc repz add push inc frstor bound jbe aad cli adc push or or cmp push xor les insl inc lods clc push es mov mov adc add inc dec xor ja mov dec sbb jmp adc jl call cmp push xor leave jo mov jo push aas push xor sbb cmp inc push push ret inc xchg or push dec enter cmc inc pop inc inc mov mov push mov adc fnstcw mov inc or or testb cmpsb aaa fadd add sub dec mov and mov push and sbb sbb dec es push pusha adc mov lahf arpl ud2 or or shl test push lea and add (bad) mov roll leave add mov (bad) je push mov iret mov xchg pop cmpsb mov push adc hlt nop mov or mov lea aaa in aaa adc lock movsl movsl movsw sbb dec rclb dec inc lods inc push stos ss leave mov push mov sub and push push test sbb mov push xorl adc jge inc inc mov sbb imul adc das xor sbb les test inc sbb jno or sbb push xor pushf sbb sub pop les fcomi push jno repz adc icebp push xor sbb sbb (bad) jns sbb dec jne pop pop pop sub loop jae or clc insl sub loope shr add or lods sub idiv and imul cld lock push je (bad) add mov nop add lods mov push sub jmp jge adc lods je das mov jmp insl adc (bad) cmp mov add push shrl (bad) sub push xor or cmp adc (bad) push psrlw orl or and xchg jne outsb sub outsb jg out or and rorb dec push cltd dec add jno sub and inc sbb add ljmp xchg jne push pop test or or xchg addr16 mov stos stos push stos pop jae mov push jne adc add and sarl adc adc adc push fdivr add jl push add lret int3 and push fcmovu test and loop rolb sub add test jmp mov mov pop xor adc adc dec or inc pop sub inc in (bad) adcb fistl stos loop xor add test jg and push or sbb (bad) fistp adc push fldl sbbb mov sub xchg outsb and jnp and jno std out (bad) jge push pop mov inc loope push iret add aam or sti insl pop or and xor xchg ljmp inc mov sub es adc rol loop and or (bad) xchg fadds iret nop lret xor sub notl pop sub mov lock out test or adc shl incl or mov jl mov mov pop in or jl mov fs test push out (bad) and mov movl dec xor stos data16 test or xchg stos lea ret inc inc xchg inc stc cli xchg shll test mov pop adcb scas jo dec fdivs xchg inc hlt test push roll sbb pop mov mov fsub inc fidiv sub pop push in icebp xchg cmp sbb bound lods lods sbb andl in int mov mov hlt andl mov out aas jl xlat jbe outsl stos iret and test test out jge mov scas jge lock loop mov jecxz neg sbb stos push mov push or (bad) loopne or push adc fdivrs inc xor or push add pop inc or mov sbb leave inc adc cmp or cmp in push and and jb hlt sbb inc fwait test cltd hlt jo sub inc cmpsl cld add mov enter and add lods fcomps push aad test inc mov and or mov fcmovnb xchg fmuls lret testb mov jne inc add mov (bad) jle push lods mov out or cmp test pop mov inc jmp mov push add cli stc or xchg pop loopne inc pop cmp xor sbb push in jmp mov stos sub mov pop mov dec inc jg push pop jmp das sub je sub or inc push cld into jmp sub pusha mov jmp xchg or (bad) push les in adc js cmp sub jg in cmp jle jle cmp or gs push mov push or dec push fstps push ret cwtl push cmp push adc test in ds lods xor cmp jg repnz add lock jae sti mov ret mov pop or outsb xchg inc pop aas mov mov add pop push mov movsb imul movsb sti je jmp pop aad sbb jge jmp adc insl loope test shrb ret fnop xchg mov dec (bad) cltd lods jae push push outsl movsb sbb imul mov testb or adc iret ficoml push mov xor jbe stos outsb cvtdq2ps push jmp (bad) ja insl mov inc push je je pop mov shll mov adc add xor jg xchg cmp add (bad) dec sbb mov imul or or mov xor sbb aaa fsubr std and adc rolb test jg (bad) jecxz mov notb and in xor stos sbb icebp cltd xchg push add fisttpll addr16 cmpb hlt jnp add mov mov add or insb lods inc (bad) jge nop daa or roll movsb negb fdivs in (bad) cmp add mov stc push add outsb fstpt cmp mov xorb into jmp lods sbb adc xchg les push incl ljmp lods add test subl jno mov mov popw dec inc cmpl mov cwtl mov aaa mov mov jo push (bad) and mov aam les push mov mov sub shrl add inc stc adc sub adc mov enter (bad) std mov or jle aas ja sbb aam adc or pop inc testl fcoms jl sti jge add and or push mov and lock pop cmp jne cmp ss dec enter cwtl scas mov test cmp call add inc pushf jle inc rolb xchg sub inc fstps sbb push rorl inc add or ficoml hlt fistl cmp mov je mov jg jb inc movsb add pushf push pushf inc loope ss mov loop or jecxz test jg add das push add iret faddl sub add dec aam gs jmp (bad) or mov ljmp mov mov dec sub fs mov icebp mov add sti (bad) push sbb push fcom insl inc loope shrl fstps loop jmp push mov sarl add jno or push mov aas mov push stos shl addb insb fnsave jecxz or fcmovu or jb std fisub inc push cmc or or fistpl mov dec (bad) lods in mov outsl (bad) xchg or pop mov jno add mov and sub int loopne mov (bad) insl js movzwl inc jne jne,pt push lret das jno loopne stos xchg jg sub cli pop mov sbb xorl leave lcall test xchg jo mov inc lahf sbb push sub ret lods lret add lods mov stos dec mov lcall mov mov pop mov and sbb dec push mov (bad) mov sub mov loop mov dec movb add dec (bad) xor rcl aam (bad) xlat shll fcomp (bad) fstpt jne inc enter xchg je movb jmp add mov rcr push arpl push and test das inc lea inc or mov add add add inc stos sub loope pop mov mov adc adc test jmp add mov rcr out outsb add or push jne je push ja sub cwtl gs push adc notb cmpl push sub fldcw adc push orb (bad) mov add clc xor dec sub or mov fcmovnb lods and mov mov push mov mov (bad) test dec and pop loop ficompl (bad) cmp scas cli mov or adc test mov push int3 pop sar pop stc push add leave and xchg and jmp jb mov jne sub aam xchg out (bad) pop arpl push pushf arpl dec fimull sbb mov and sbb addb sub (bad) mov pop fildll add (bad) repnz sub xor in mov xchg (bad) call push jnp mov jne inc notl xor and insl cmpsb push push add ljmp inc pushf sarb and jmp sbb roll adc shr cmp lods adc pop lea jbe push cld dec add lods mov jne insl add fidivl push (bad) rcll sub pop sub out nop stos mov es lods jmp test lods mov push mov mov fnsave call icebp rcrb clc push jge fwait (bad) fidivl hlt lock shr ret or or add psubq push adc dec mov neg mov mov pop repz in in xor ja insl inc jmp jnp pop out ljmp insl and iret xchg push (bad) mov pop and xchg inc repnz idiv and mov int repnz sub fs insb loop cmpsl fimull out ljmp adc xor aam loopne call sbb sub cmp (bad) aas mov popf jne cmp insl sub jo and mov fs pop test adc xchg dec (bad) fistpl repz pop call or test lahf xchg out inc inc inc inc test push fmuls sbb fcmovu push xor mov fs jo lods push mov jns mov arpl sahf mov push cmp push fidivrl mov add movsb mov push xor sahf les inc xor popf clc jle push dec push nop out pop fisttpl fimull xor push or cmp clc dec test xchg pop in jmp fimull xor inc sbb sub inc xchg sub bnd in mov inc or dec inc pop mov inc jb das pop sbbb sbb xor in mov mov mov mov jge sbbb xor mov fdivs lods roll ret adc daa addl (bad) and xchg movb adc pop cs inc dec inc out fcmovnbe ja mov cmp push adc and inc test out (bad) out push out inc xor (bad) icebp or xor and call shr iret or or jge pop add neg push xor sub imul sub mov mov call xor sbb ja cld lea mov les mov add insl scas adcl loopne mov jecxz add pop pop add mov add jae sbb push (bad) or push mov adc stos sub jne movsb adc push (bad) (bad) or rolb lock push mov sub movsl jno (bad) jae fadds sahf push aas push or fs pop mov addr16 sbb dec xor jmp test add xor pop push fisttpl addb sti movb dec cmp jae add aaa xor add adcb aam sbbb add inc push dec mov jl mov testb int aas xchg and dec and add mov jle inc (bad) fisttpl add or or enter or adc ret add div inc sub or addb je movsl mov and je into je insl push lds jmp push je push lcall ja xchg jne or jmp or sti push fucomp push push pop je adc xchg mov cld int pop lods mov add dec out pusha iret mov add add test mov xchg js mov nop pop cmp cwtl lret into pusha mov daa mov shll out xchg cmp pop xlat mov mov ret repz cld inc push in ret or flds xor pop dec push lret repz inc lret add pop add or push and cmpsb mov jnp inc and insl mov add aad or out aaa fsubs int lds inc push cwtl xor inc adc mov lods adc pop push add ret cmp and pop inc nop mov sbb jp inc sub insb add imul adc ret jae in cmp adc ret fnstcw inc out roll push xchg or push cli add add ja xor test jns pop test int fstl or call add pop into mov dec negl mov je cmpl int push and iret pusha aaa fisttpll or and outsb dec adc rorb inc sub mov inc sub jl not pop rcl lea xlat mov push loopne test mov mov pop lret test add lret pop mov inc push sbb lret adc jle xchg test (bad) roll push jmp add sub int3 xlat (bad) mov lret ret dec add (bad) xor cmp dec or dec or push mov stos and movd push (bad) stos inc mov jg xor stos adc (bad) or cmp andl rolb cmp inc sbb shll add into add neg cmp fidiv mov shr xchg pop pop lock mov xor cmp push inc add sti mov push lock mov push mov imul fdivrl inc mov push push mov push loop fldcw mov fild adc js add int push xor or mov fimul test ss cmc xlat movb stc ds add nop dec cmp pop divl call dec mov pushl cmp dec or sbb push sub out sahf pusha rcr leave adc push adc rol jmp dec lock test aad lret fildl pop int clc mov into and jnp loopne pop orb push xlat xchg mov lret mov je sub sub and adc sub fildl jmp push mulb inc xor inc loop fcmovnu push push shrb iret and orl or mov adc or jge psubb push enter lock and mov je gs mov in ret mov adc or xchg in or fmuls and push fcomps jne push mov dec jge mov cltd adc xor mov jecxz add inc shll push (bad) mov fs imul inc pushf pop jb in xchg loopne insl fs xchg fsubr and jb leave mov sbb and mov dec mov loop or movsb mov mov mov mov jno mov xchg and adc mov mov leave pop rcrb xor sbb push nop movsb mov dec in push loope and xor mov adc shrb mov mov mov xchg inc add ret icebp popa aas cmpl or es sub mov push insb sub mov mov les push movl or and and xor mov and or shlb mov lock and mov and sbb aaa sub sub or push add sub aaa movb ds into xor sub pop lahf pop pop cmp xchg out in adc inc mov mov mov pop cmp jne dec cs or pop dec dec je outsb pusha adc and lret es push or adc cmp (bad) jne test xor mov fstl xchg adc xchg mov cwtl or pushf nop (bad) sbb mov push push lock add out and jo or lret add add add in loope outsb sub dec or inc adc icebp mov inc inc push xchg int or cmp or in or jb in loope jnp fs in idivl sub aas das cmp out fildll and adc inc das mov imul clc cmp pop in add mov mov loope cmp out cmp out daa add ret in cmp pop mov call int3 out (bad) dec or add int3 call push or adc xchg sub enter pushf push ljmp shr or loope ffreep add les ret dec xchg jg pop pop idiv and or add add adc shr (bad) dec mov mov nop leave pop push sbb inc es pushf jmp std (bad) cltd xchg mov add add or add xor adc ljmp xchg fidivl cmp (bad) fisub xchg cmp pop pop scas in in in mov mov jne shr add inc jb sbb xor mov adc xorl rolb push ret mov push mov ficom sub mov ficompl js add jmp subl movsb ljmp nop in insl or add adc test xor inc push pop cli lea cmpsl lret and add pop add imul mov lcall sbb xor dec push mov pop ss sbb cmp lcall jmp xor mov leave or cmc xor into decl and xchg into inc inc (bad) decl out inc dec aaa cmp mov add or mov iret into pop rolb adc mov adc std fild scas cmp insb popa je and cs mov and jo jb addr16 xor xor dec gs outsb fildl sti ljmp and imul mov jne or xor (bad) mov or add add add xchg mov inc sbb mov sub cmp or add adc scas jnp jae add jg add or or imul adc dec xchg and mov add add xchg and add arpl mov push inc push or enter or xor and lret or xchg pop or or or fcmovnu add imul imul imul imul cmpsb imul push (bad) xor lcall imul imul imul cmpsb imul push (bad) ss lcall dec into imul imul imul cmpsb imul push (bad) xor lcall imul imul imul cmpsb imul push aad mov lcall dec int imul imul out lcall pop pop xchg (bad) xor rcll rcl xor xor xor xor (bad) xor or mov dec dec lret lret sub xor sub xor (bad) xor sbb fwait fwait (bad) xor rcrl fcmovnu cmp xor cmp xor (bad) xor pop pop xchg inc inc mov dec daa cmpsl cmpsl addr16 dec (bad) xor pop pop xchg xchg (bad) xor rcll xlat xlat aaa dec (bad) xor aaa mov ja divl jg rorl iret iret das dec (bad) xor das scas scas outsl outsl out xor (bad) xor pop pop lahf lahf (bad) xor rcrl (bad) aas dec (bad) xor aas mov lcall add pusha imul imul imul cmpsb imul cmpsb imul inc add arpl or cmpsb sbb xchg or cmpsb imul cmpsb imul dec negl adc dec (bad) xor adc sbb divl cmp pop cltd cltd add add enter or or and or and (bad) or and adc xor add or nop sbb push leave push xor sbb test sbb xchg pop icebp fnsave push adc adc fs push sbb adc xchg push pop sbb sbb jg mov push sbb mov mov push cmpsl or push mov jnp adc jmp cmp sub xor add jo adcl mov in rolb imul mov push sbb push pusha dec pop enter cmp inc and ljmp test jb and insb gs sbb mov or mov adc pop sbb sub cmp xor roll arpl and xor into add cmp mov jo nop sbb bt jmp add xor mov sarl or cmpsb imul cmpsb imul xchg push pop in outsb push in (bad) jmp sbb jg faddl mov cmpsb add imul outsb and arpl je incl fcmovnu outsl outsb daa cs imul push pushl lea dec jb dec inc push dec inc dec xor cs dec fistpll mov pop inc insb jae jb gs push clc orb jne inc inc insb insb outsl (bad) in mov jb js je jb gs es je insl jae cmp xchg insb adc push mov lods stos movsb lgs add pop push lret sbb and and es sub sub sub cs xor (bad) (bad) pushl xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push jno or push imul pop pop pop (bad) pusha popa bound or push insb insl add jb je jbe js sbb jnp jge jg cmp imul loopne sub pusha outsl mov push jmp dec inc push sbb dec dec inc adc add xor jo insb imul imul popa jae insl popa mov je loope or (bad) and and je jbe pop push xor incl fisubl sub insb jns or mov dec mov popa arpl add jae push cs insl and insl cmp insl and lahf xor ja imul fmull lods jae mov imul sbb pusha fs dec and test fisttpl gs imull fsubrs pop or fs cmp pop mov addr16 outsl cmp adc lahf xchg imul fcmovnbe sahf into lods ret outsl pop insl insl in mov insb insb popa outsb xchg sub push sub arpl sahf sub xchg lea cmpsl popa xchg outsb push push mov outsl jb inc dec xor imul push mov data16 push test sbb lods jbe pop dec push test xor imul xor push push outsl or lods inc fcomps lret fidivr fwait xor lahf pusha outsb mov mov pop xor cli into insb outsl (bad) pop enter lods daa test imul aaa ss fs (bad) frstor xor imul sub xor pop sub leave pop jae das sub fsub pop mov test loope jmp jbe mov sbb inc and gs outsl and popf and cwtl (bad) sbb jne mov jne imul es pusha xor mov cs xchg hlt and jae add movsb (bad) enter mov out hlt mov mov popa test add mov or adc movsl nop iret sub jne and dec les rorb lea xchg mov (bad) jmp faddp add lock push imul mov hlt daa or ja add addr16 and jne sbb sbb inc cmpsb and cmp dec adc mov jg mov fs jo inc outsl cmp jne andb xor and sub enter adc ret test addl add or add or push and push add add mov add add nop add add inc fldcw add cwtl or jbe mov add jg and adc adc lods addb incl mov nop xchg xchg xchg xchg xchg xchg xchg cwtl cltd lcall mov (bad) jmp stos stos lods lods scas scas mov mov mov mov mov mov mov mov leave lret int iret rcl rcl (bad) (bad) (bad) call aad xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock repnz gs push cmc div clc stc cli sti cld std (bad) call add movsb lock jg dec adcb add cmp test scas push sub add or add add gs das or adcb add lcall dec outsl jbe dec ret dec lock adc mov in dec scas inc mov pop or bound mov test push push adc sbb addr16 jne mov inc inc aaa jns fidivrl inc aas cmp and cwtl fs inc inc pop or insl lea pushf mov or jne dec sub adc pop inc cmp das daa and repz out test add push addb movl daa dec inc insb and jbe mov cmc sarl mov push in fldenv and jb adc fdivrs adc xor faddp and inc pusha test mov fcompl push sub pusha insl add pop lret ja cwtl inc dec jo sbb pop push and je jb pusha and insb push pop jbe jb inc daa mov sub jns pop sub xchg shrb xor dec inc and sub leave sbb xchg adc inc sub pcmpgtb aaa push or dec clc test jb cmovp pop pop sub jae daa add mov pusha ss (bad) popa xchg push jae testl xchg ja pop (bad) jne dec and fistpll dec jnp dec add jns dec call outsb fs sbb (bad) outsl xlat inc and add adc test and adc or out mov mov xor mov add jb dec pusha mov mov aas rorl mov pop movsb xchg adc lods pop out adc fildll inc sbb xor pop test adc pop jbe je mov add cmp add add je and sub and iret xor jle pop mov pop sub sub xor ds cmp or cmpsb jmp and sub es (bad) jne sub sub add outsl ret dec cmpsl cmpsl and cmp add dec dec ds lret sub pop pop shl sti mov mov or sti je jo mov or xor fptan sub or leave or int3 xchg xchg int int3 xchg jo pop into jge,pt jge pop ja sub or inc jmp add imull fsubl les (bad) (bad) pop repnz add cwtl jl sbb and nop pop mov mov cmpb imul imul dec add dec (bad) xor xor sub add and adc cmpsb imul dec (bad) mov (bad) add call dec ror mov nop jo (bad) cmc jecxz mov dec (bad) xor insb inc sub adc or hlt outsl (bad) xor roll rol mov js fdivs repz add xor xchg jo sbb repnz push or cmp push (bad) sti icebp outsl ja lock outsb pop push cmpsl jb and lods jae adc cld inc arpl push les imul je scas jnp lahf inc outsl js push mov movsl pop popa ret das xchg es cwtl xor lds adc pop mov loope test xor inc das pop mov pop in sub jo inc cli outsl arpl scas dec xor sub sub or incl add push sub sub incl jnp cmp pop test dec cmc cmpl push insl aam inc push arpl mov cmp jp add aas insl imul lods jmp cmp adc add push pop test jmp inc add mov mov add rcrl in and jae inc sub clc mov push jns xlat jge arpl daa outsb jns cmp or add pop das inc jb xchg cmp xchg sbb test mov jo movsl inc mov sub das or xlat push dec je daa cmp into push sub jae xchg cwtl je jg mov push and or fadds add inc cmp sbb pop divl punpcklwd out out sub sub jb sub and jae adc mov outsl daa jae mov in and rclb sub ret sub inc adc in or outsl and push add mov gs add xor imul insl xor cmp ret inc or fcmovnu jae in or out or mov das inc and sub and lds ja add je mov aad aas sub pop mov fs paddsw add mov push inc xchg push add call jnp adc rcll gs dec sbb mov gs mov jp (bad) rorb xor pop fldt fcomps jae pop pop xlat cmp popa lds imul jno xlat jge add mov add (bad) or dec out mov or inc adc jbe and popa sbb xchg cmp sbb xlat jne inc aaa insl sbb xor add mov and sysret lods movsl (bad) lret data16 sub pop xor adc cmpsl popa sbb imul xor gs insb jge pop push fwait nop (bad) mov add jb outsb (bad) int adc jnp sub push or fsubs aad in add arpl imul xchg jnp insb test push xor loopne arpl int xor popa dec jp sub xor add inc jnp fmuls orl and push sti dec add arpl lea add (bad) jne jae dec add add add popa loope mov mov dec js push xor or ss sub cs pop aaa test popw or arpl fadds jnp cmp ljmp mov dec xor inc jne jge repz xor xor mov inc pop inc adc add add in cs popa leave out pop imul loope sbb fwait movsl daa sbb add (bad) cmp mov and fcomp loope add test lea addr16 daa jns (bad) js (bad) arpl fs subb cmp imulb mov inc and mov push xchg mov add inc psubb and jp insl pop sub push enter pop sub pop (bad) lea popa jae jmp or and add pusha and jne mov mov sbb bound sti popf xchg mov inc dec mov jecxz cmp pop push xor xlat jge inc sub and jb movb xor sti fwait inc or pop xor inc xchg int loopne addr16 mov mov fnop add and imul mov lds jo add jo arpl xor dec jo je insl outsl mov repz push movsb or jae push add jmp pop inc ret dec add mov inc imul fwait dec int sub neg ret jge or mov jnp addl sub pusha pop add cmpsl mov and dec cmp adc movswl xchg push fdivs js fld lret or or outsl imul lock cmp adc lcall jb fwait jae adc sub inc lods jg xor insb xor arpl adc xchg sbb dec pop xchg cmp imul (bad) sub pop cmp inc add jg mov imul mov mov leave nop jge ljmp or nop or push std fs fildll pop jnp add or movsb scas outsl sbb adc add and sub and dec sbb pusha add adc inc mov or sbb or jbe pop fldenv or dec lea fldl test push or adcl push cmpsl je outsb add adc jecxz xor repnz data16 or or pop or insb (bad) pop pop mov or or ror add inc sub inc and pop dec jne jae mov loope xor pop xor lea aaa mov and xlat jge mov cmovl dec invd sbb dec insl dec imul int sbb push imul xor add fadds pop out jne mov mov add push inc (bad) fs aas scas sbb push push dec xor push lahf inc fisttpl sbb pop dec fwait xor pop popa pop repz add mov outsb dec sub or inc mov or jg inc stos sbb push dec ja push lahf sti pop inc pop icebp inc mov ret mov dec pop lea fs aas addr16 or (bad) (bad) push pop fdivs mov sti mov add fs imul imul xchg pusha pusha pop xchg sbb imul popa mov pop inc imul outsb jg pop adc fcmovnu adc cmc bound adc push mov jne call sub xor arpl lret and ja pusha fldl xor sbb xlat or jae testb dec fstl and and and (bad) ja xor aad movsl outsl pop mov pop addl inc jae mov fadd daa dec xchg adc mov rcrb inc insl mov aas insl in popl cmp fs inc das mov arpl insl pop (bad) les inc bound and push add je sbb popa and iret add add in jae outsb push sti jae imul insb add dec adc mov jge addr16 add and xor jge sti je xchg scas pop lods cmpsl fnstenv adc mov addr16 (bad) (bad) and add add insb and pop sbb or sub push and sub popa add arpl jne dec dec popf jns stc inc sbb repz mov loope mov add sub inc add fs test adc bound test sbb xlat pop cmp das imul xchg xchg (bad) dec outsb push inc jmp jbe gs xchg dec inc popa push ss jns lret (bad) jae adc rcl insb xlat inc cvtdq2ps sub pop popa (bad) (bad) (bad) (bad) jmp cmp cmp cmp aaa sub sub sub xor bound fnstsw outsl cmp inc inc xor and inc inc inc daa aaa xor mov aaa xor xor inc xor sbb jg jb fs outsb xor or sub imul sub cmp mov or add cmpsl call aaa in aam iret testl pop xor pop outsl pop mov jae sbb adc inc aas push hlt inc insb ss lret push xchg testb jns inc xor add ss sub add mov les popa outsb arpl add jbe int popa jb xchg les rorl dec int pusha fistp push and inc inc movb sub inc add jp pop dec jmp into test bound jae adc leave aas add movsb sbb add fmuls xor add jb je data16 out ss pusha lret jnp adcl add lods xor enter and pop pop sub insb jae sbb inc js dec (bad) popa add pop inc xor push popa push sbb out and xor add sub lds sti and cmp push sbb inc xchg xor or fwait pop ret push movsl adc (bad) aas nop push ret inc jmp fadds cmp inc or aam mov inc mov adc bnd mov loope lods inc cmpl jmp data16 fldl xor lea xor cmpsb add jns mov add xchg pusha push jb (bad) xor add xor jg lock push sarb adc dec jae xchg es in inc jmp outsl lods adc outsb je add and out push pop and hlt mov inc or push xor push dec inc dec pop dec dec inc add (bad) decl push jo test mov mov mov or or lea adc arpl fs push pop bound pop push gs adc jo,pn bound add pusha add mov out rcrb sbb pop fwait push pop inc jnp ss ss add insl in notl nop data16 psubq cld enter arpl xchg dec pop daa lods adc mov jbe scas in hlt xor push mov push add lods jg pop fsubrs daa sub jg cmovs movsb sub add (bad) and pop rorb xchg xor inc add jbe and cmp or pop inc scas and inc dec popa inc push and test es push leave fsub daa jnp or and shlb jecxz inc pop mov fldenv insb sub das xchg and cmp push out inc inc mov ret inc pop js jl pop jb lods inc sbb mov mov cmovle adc and inc add pop ljmp in inc ret scas pop mov mov pop sarb in adc test inc lret je pusha and sbb jmp sbb add and push fisub sbb pop je inc pop xor add fmul jae mov int3 and test xor inc and add in popa add testl and ret fs xchg pop pop sub nop xor add sbb out loope and dec push aas mov xchg adc adc and repz sbb or sub inc scas in and jo or fs adcb or xchg enter xchg inc and enter and and xchg add fadds or je mov sub mov dec push clc enter sbb fnstsw cmpsl and mov mov pusha sub and sbb push xor mov or aas mov ret inc (bad) ss pop inc sub fsub ds jbe das addl mov inc mov sbb sbb fwait rcrl loopne in pop lahf repnz lock mov shll jnp les les les in mov fldenv sub mov push cmp ja lahf pop inc mov xorl add push push or lea sti or and leave dec sbb sub inc add xchg inc jbe (bad) mov aaa popl mov iret mov xchg add sahf sbb mov fsubl xor dec pop bnd les mov lods lcall ja aaa mov mov xchg push push mov pop outsb gs imul sub fdivp pop lds imul or gs insb sub mov jle data16 add and or outsl or je outsl fs fisttpl inc xor insb gs or outsb sbb es outsl je pusha fmuls jns pop test pop jns mov outsl insb jae push outsl jb bound fldenv add xor stos xchg add jbe jl add ss lcall inc xor sbb mov push out fildll cmp bound data16 loopne push adc inc sti push mov imul xor stos pop xor pusha das sub cmp test sub and push iret cmp push lret inc or add insb inc sub mov and lods pop out sub pop add push test insb das push sbb jge add add imul push push pop jae pop ja sbb inc pusha xorl push push pop or pusha pop orl sldt orb loopne push aaa fsubs pop pop pop sbb nop push fsubs push pop cmp js cmp ss xlat or adc push or or pusha orl jg or push pop adc push pop orl pop je xor fsubs enter fs pusha addl pop test pop mov push cmp orl sbb cwtl mov pop sub jl popa mov pop cmp fcomps rcll pop sub mov push or mov roll clc jg pop push pop roll insb adc mov insb mov pop xor (bad) decl sbb pop bound and movsb (bad) nop roll pop (bad) inc pop mov push sbb jg pop pop pop roll insb sbb xchg incl push sbb pop cmp aam adc insb mov pop push sub mov fsubs lahf mov dec pop fsubs or push pop in or push push (bad) mov xor mov push sbb ss int3 inc push sbb popw es sbbl xchg inc or in jg pop pop fsubs pop push pop pushf jmp fsubs or fdivr pusha orl cs orl mov dec pusha inc shlb cld call ss ret cmp pop or aas ret fsubs pop and mov pusha orl pop loop xor pusha inc pop pop sbb xchg or jns cmp rolb imul cmp dec roll push pop jbe jge adc jne or aas lret and pusha addl pop stos maxps rorl pop inc pop ljmp pop sbb insb dec (bad) jge cmp sbb pop or setg dec sbbl jmp mov imul pop inc dec sbb (bad) jmp and cmpsb maxps pop inc pop out movsb roll pop pop sbb xchg ljmp roll lcall insb mov imul pop mov fsubs add pop xor nop xor call pop orl aaa aas into pusha orl pop push cmp scas pandn movsb rcrl lcall mov imul sbb fdivrp outsl pop popa roll das pop mov fmuls jmp mov loope or inc leave (bad) mov xor inc leave push jmp or mov stc lds in and mov or or int leave push xor or fnstsw std ret xchg or inc mov xor or repz leave push xor inc fistl push xor leave (bad) cmpsl out push xor inc mov push xor inc leave out lahf (bad) push xor fimul push pop out add mov add sti dec fisubrl push add aas movsb out inc cmc fistp scas add out pop mov add jge cmp punpcklbw add and xchg in mov aas add add dec push cmp xor inc inc out mov add (bad) leave xchg jae test rorb bound daa or mov dec jb inc push pop push inc and roll xchg sub mov je fcomip rclb arpl lret add icebp or add sbb (bad) jecxz push pop incl add fnsave aas jg add addl push or loop or aas inc push gs test mov inc inc inc sbb add dec mov mov adc pop and inc add add pop add push dec (bad) decl inc adc sbb add movsb jg (bad) jns and aas aas jns cmpsb fild mov cld inc jle and mov ss pop inc mov lods fimul das iret mov (bad) or in call mov pushl pop pop fisubrl xor rcr fimul xorb cmp add mov pop cwtl pop inc (bad) stos add in add mov out mov cmp das pop inc adc outsl mov sbb rcrl add pop cmp mov fs sbb pop fadds or cmp out sbb (bad) adc pop fs push and push sbb xor roll insb push pop push pop pop jnp jecxz mov pop mov add jb push das xorb pusha xorl cmp xchg add sahf (bad) mov push mov pop nop roll mov into pop xlat adc out mov fadds call aaa ret jnp pop mov pop dec mul ds sub daa or adc xor aaa ret fwait movsb pop sbb out roll pop repz inc jmp les arpl and (bad) fwait cmpsb sub xor inc sub out and jl jns pop jp jo out jg fcompl jbe pusha xor loopne ud2 pop or or lea add add nop xchg xchg and add ret xlat orb dec and push inc repz or sub jnp pop nop test fidiv add mov mov jl dec dec js je dec (bad) je jo push dec rcrl dec cmp imul imul push sar icebp inc icebp add cmpsb imul xlat jge rolb add dec rcll rclb dec pop push or xchg fldl and pop pushf inc push (bad) inc add sbb jae add and ffreep add in popa add push ret push push lahf push inc aas push pop mov xchg add pusha and push adc xchg or mov aam (bad) jne lret adc xor dec insl add xor lahf ja scas cmp pop roll xacquire das add adc lcall std or jle cmp rorb incl rcr pop and rclb mov fistl sub repz cmpsb imul shrl or adc mov lcall clc fnstenv pop sub pand data16 sub push aaa push inc mov add in mov idivb jl movsb (bad) (bad) (bad) call and fcomps cs dec push cs jo nop push movsl cmpb push adc lcall mov pop loope mov test sub mov in mov cmpsl mov push mov pushl fdivl iret repz iret pop testb (bad) into pushf xchg cltd xor (bad) (bad) (bad) jg repz fistl dec lock shll mov jg movsl push dec add out ja pop (bad) (bad) (bad) (bad) std movsb or int mov scas pop xor sub out dec or mov fidivr (bad) (bad) (bad) out jge mov int3 int call jnp (bad) dec jbe fdivl pushf mov lahf dec inc jecxz jg jmp ja jb daa sarb mov out lods mov (bad) (bad) (bad) jns cmp lcall into mov insb mov fistpll sahf mov cmc inc aaa loop gs (bad) call dec lcall icebp push cmp cli sbb xchg xchg gs movsb dec sahf push (bad) (bad) (bad) jg (bad) jl jno dec push xlat push push jo int xchg xchg sub (bad) popa jecxz clc (bad) (bad) (bad) incl nop dec push jmp out movsb lahf iret mov pop sahf pop mov cmc dec jg (bad) fnop leave inc (bad) cs jae pop movsb xor rcll or pop lret sar mov movsb mov lock mov hlt lret iret das mov cld repnz (bad) incl ljmp and mov out add mov mov jmp cmpl incl mov aam out xchg fwait (bad) dec insb push xchg adc addr16 idiv test inc aad cmp inc test lahf ss lock (bad) (bad) pushl jg lds dec dec push cmp xchg pop aas data16 push adc mov loope or jge push mov mov mov (bad) (bad) call sahf fs dec ret sub int ljmp ret add push pop and (bad) (bad) (bad) in mov mov negl int cmpl fcmovb mov or pop cmp cli sbb (bad) lcall adc mov xchg mov add rol mov (bad) xor (bad) inc mov (bad) mov inc xchg or jno adc push sbb inc jb mov in and inc or add pop cmc adcb mov add (bad) mov ljmp mov and adc pushl cld xchg ja push stos mov dec imulb pop out jg (bad) (bad) in rolb or dec xor sbb jnp cwtl (bad) sti jne jg,pn (bad) incl pop fwait cmp scas jne sbb aaa mov pushf in fwait add mov lea rorb xchg mov arpl xor sbb (bad) (bad) (bad) lcall (bad) dec (bad) arpl adc dec lahf fild add or push in lods test (bad) in call icebp iret int add mov lods dec inc sbb dec push push pop test sbb jo sbb jnp rorb cltd inc fidivrl lret dec pop push inc (bad) (bad) aas and mov sub push lret mov sub scas (bad) (bad) (bad) jmp xchg push pop adc add mov dec jge mov jns jne cmc (bad) (bad) (bad) cmp lcall cs sti mov orl roll mov jle repz jns nop pop nop out in mov (bad) (bad) fnop cmp push jno arpl jno rol fcompl add jae mov fs pop imul add adc movsl mov incl jmp dec pushf stc popl xchg jae fbstp rcrb fadds sub or aam mov or lods rorb (bad) inc or (bad) mov clc sub sbb push gs sahf lahf xchg adc add inc cmpsb (bad) (bad) (bad) (bad) stc (bad) imul loop xchg out push aam inc out orl sbb (bad) mov lock (bad) rorl mov add pusha lret xchg imul test or and add inc in mov sbb loope push fwait pushl (bad) push sbb add inc repnz sub int3 repnz cli (bad) decl into outsb cld push dec dec push mov and and insl and mov decl (bad) incl fcmove cld mov sbb fcomip pop pop add mov jl loope (bad) call and (bad) fsubrs sbb push pop imul (bad) pushl add data16 adc clc aaa sbb lret adc ljmp (bad) (bad) jmp adc lods dec rcrb js or jb fistp mull (bad) (bad) (bad) mov push or pop mov or add add xor (bad) (bad) call aam inc push fcomps (bad) loop xor (bad) mov jb xlat mov add flds mov mov jne sub mov (bad) bound sbb ret sub ljmp call (bad) jp fsubl outsl add dec inc mov stc cmp mulb lret (bad) (bad) (bad) in fsubrl (bad) leave jno lret adc xorl aam pop inc mov (bad) dec test or jp outsb aad pop (bad) in out gs add push fmul ja sar movsl adc in (bad) aaa or std (bad) ljmp mov fidivl add adc xor adc pop clc ljmp mov mov inc lcall (bad) (bad) mov push xchg dec out (bad) jb mov and pop (bad) incl xchg sarb inc mov xchg sbbb gs (bad) (bad) jmp and sbb cltd cmp ja clc ds sub jae inc std sub inc cmovne and add negl add cmp add and mov (bad) mov or test ljmp imul cwtl mov loope push sub incl mov rclb mov cmc and (bad) (bad) fnstsw jnp mov test daa or enter cmp int xchg mov cld andl outsl mov mov push ljmp daa pop je xchg repnz dec add xchg loop or dec jne push add (bad) (bad) (bad) (bad) cmp cmp ret loope or add sub int3 xor test (bad) decl pop sahf aad push stos in loope stos push test dec pop or jg (bad) call loopnew dec clc test add mov xor push mov (bad) lcall cli in jp push scas cmpsl addr16 inc pop or popf popa das mov jns (bad) (bad) mov (bad) test mov inc loop ljmp cmp (bad) pushl sbb xor das enter add enter jp xchg aaa push sbb add mov mov or test aad pop sbb std push imul ret mov sbb clc (bad) (bad) ljmp mov fldenv lahf popa mov xchg nop fldl jp mov cmp (bad) call xchg or mov int stos movsl jns jecxz cmp jmp (bad) cmp sub pop sbb push mov mov inc insl push push cmpl stc xor or jmp loopne cmp hlt clc mov or ret mov (bad) (bad) lcall sahf pop mov xchg in push mov add jge mov mov es (bad) (bad) call jge mov push test movsb jnp test test jne lods mov outsl (bad) call sbb inc stos cmp or pop jg mov (bad) (bad) fildll pop sbb imul out push xchg out mov mov mov icebp and cld (bad) fnop pop inc xor mov imul faddp ss and xor lock add mov xchg mov in mov (bad) push (bad) cmp mov or call pop push test and push into add clc incl inc jb pop mov in pop adc lret (bad) jbe pop jns xchg insb fdivl pop xchg (bad) (bad) jmp inc into sarb dec cmp fsubs dec or or xchg (bad) jg adc (bad) push nop lret pop pop rolb je inc sub dec pop mov lret add clts push nop pop repnz push cmpsl ljmp lds sarb and jns mov lods pushf insl jge cs dec sbb cmpsl mov imul ljmp sarb add adc (bad) test sub loopne xchg mov arpl jbe cwtl xchg jns ret sbb mov (bad) (bad) inc lock lock popa xchg and test jnp sbb xchg fadd (bad) mov (bad) (bad) decl pop fyl2x ret lock jge mov mov shll outsb push in push (bad) (bad) inc cli jp xchg imul pop sub bound out into sbb je imul cmp (bad) fnstsw fnstcw pusha add and loopne and or push sbb popa jmp xor fldl cltd pop pop lock mov movb or (bad) (bad) incl xor insl cmp pop push cmp jmp ret out add jg jmp push mov pop pushf in iret add and sar (bad) xchg inc jae cmp arpl (bad) repnz clc insb pusha lods (bad) jno imul push ret data16 jmp adc and dec mov and add cmp (bad) (bad) decl mov jge dec pop mov stos mov xchg lods imul repnz cmp (bad) (bad) jg rorb sbb mov stos or shlb pop fs std shll adc inc cmp pop sub add or mov sbb xor pop and out jno andl add push testl (bad) jmp and pop adc loop aam pop pusha scas jge fnsave dec mov dec (bad) repz cltd incl mov dec dec mov add dec sbb (bad) jmp stc sbb xchg jl nop fdivrl mov fmull mov data16 lcall ss lock mov cmp push and loop in hlt out mov adc pop lcall (bad) call lahf jnp xchg loop add jbe mov sub mov inc jge sti pop aam aad loopne (bad) cmp adc cld setl or not imul or das mov insl addl mov roll push (bad) fcompl sar mov in faddl push mov shrb fcompl mov jnp jg fildl pushl cs push cli sbb push dec scas test (bad) lock and jg lcall loope sub in sti aaa or stc inc jno movsl (bad) lcall jnp fildll stos pop test push fsubrs addr16 cld std dec out pop add or add cmp out pop movsb nop outsb xlat mov mov adc scas popf les mov (bad) jne out (bad) clc push push shrb (bad) pushl in push push mov je pop divb mov call dec inc inc pop andb lds push push jle lret iret in scas aaa fdivs pop pop fldcw cmpsb idiv (bad) ljmp fdivrl gs movb lea idiv pop aaa inc out or fldt push sbb int3 cwtl pushf jl jns cmc or fimull ljmp orb sub fwait daa or cli push (bad) inc sub push lahf push (bad) stc sub imul repz stos pop dec jl aad cmpsb cld push outsb inc in mov incl lea popa movntq daa fld mov hlt jmp push pop (bad) push xor aaa xor subl cmp scas mov hlt and cltd pushfw int jns lcall mov or xor mov jno pop (bad) mov es orl fstpt sbb mov sbb das cmc jmp stc sbb mov inc pop sbb (bad) call nop pop push jae xor mov sbb fdivrl fisubr outsl cld xor ja push lds xchg mov mov xor into aaa cmpb pop add lea cltd lret out mov hlt and imul jle insb cmovge ja fldt xor (bad) pusha mov inc jge,pn or pop pusha pop cli lods adc sbb mov xor xchg push ds (bad) incl test imul or xlat inc rcl loop ljmp stos sub mov push out pop xor (bad) fdivrs inc adc pop idiv cmpsl push (bad) fistp mov or jns xchg add jmp ljmp pop jno aaa and or movsl xchg pop testl inc cli repz lods cmp decb inc repnz outsl cmc test xor xor xor (bad) (bad) jbe insl lea xor push mov test cmpsb hlt xlat imul jg xor loope ror mov fdivrp stc jle outsl jge cmp jno das add xchg loopne leave ja mov int3 push movsl (bad) (bad) (bad) (bad) jns push lahf or push es fdivrs sbb das out mov in (bad) lcall or into jmp sti add rorl jp,pt inc and sti lea mov pop push mov xchg jg mov push or (bad) (bad) push test pop ret (bad) pop cmc pop (bad) mov stos push les das inc push imul decb and jno movsb dec mov jbe jbe jl (bad) das lock push cmp fild mov xchg xchg xor push (bad) lds dec adc push pusha dec push jle rorb int (bad) fisttp dec (bad) sar call inc repz xor add imul insl cltd xchg (bad) decl mov test popf pcmpgtw sbb cltd sbbl inc (bad) (bad) fucomip cltd ficomp imul fstps xchg cli (bad) ljmp dec ss inc (bad) add mov (bad) (bad) (bad) lcall nop add mov addr16 lods gs mov jne push clc imul cli lods (bad) lods std gs lock inc mov mov mov and xchg adc add xchg jge mov (bad) (bad) mov pop ja jmp jne pop mov cmp les movsl sub sbb mov in fcmovnbe fdivrl ljmp cmc ret (bad) lcall and and add xor or sub xchg (bad) (bad) (bad) jg push fmul pop out int push inc xchg jnp aad rcr pop movlps mov lcall inc xor mov jns pop pop mov jae mov (bad) (bad) in xor xchg leave push sub repz popf push inc add rcll (bad) call mov jl and jo daa lcall mov stos test daa push xlat push leave lds decl pop xor or push jae daa push (bad) jg jmp xor mov cld and pop xor mov fcom cmpsl (bad) (bad) (bad) (bad) faddp leave lret int3 mov pop mov sub adc mov bnd pushl clc mov sbb cmp mov fs ret test arpl inc jg outsb test rcrl (bad) (bad) (bad) mov (bad) sti inc mov pop (bad) sub mull cmp nop (bad) lahf loope scas clc sbb ds xor pop cltd jg or loope imul xchg sub or fs test pop pop dec daa inc inc repnz lahf enter push pushl sbb (bad) dec lods dec repz pop push mov dec xor mov lcall (bad) cmp (bad) sub lock ss out dec pop iret jp (bad) (bad) incl in fbld in inc mov test test push sbb ret sub cmp (bad) (bad) (bad) cld xor mov push dec (bad) jno cmp out orb or mov and (bad) std jge lcall xor (bad) (bad) jmp repz imul xor fwait mov aam scas bound js lock popa mov dec negl (bad) into (bad) (bad) (bad) call cmp jbe dec xor out rol or jl inc xor in xor movsl (bad) in imulb call and mov enter lcall jae jp ret dec inc push mov les in imul or fsubrl push fstp (bad) mov mov sti aam lods rclb test (bad) jmp je rcll adc xchg fmuls sbb xor xchg xlat pop fiaddl sub mov push ljmp sbb jg sbb jae mov (bad) jecxz inc fnop push xchg (bad) (bad) lcall cld and dec mov ljmp insl fxch std adc pop fbstp (bad) call jmp pop xchg int sub add sub incb fadds (bad) decl xchg jbe sub rcll pusha push loopne in addr16 mov lock sti add adc push mov inc mov mul (bad) cmp (bad) (bad) (bad) fucomip outsl dec add push inc pop (bad) jo push scas rolb nop out and fcmovnbe (bad) aas cmpsb dec scas dec (bad) jg stos shrb mov adc nop and les decl or test pusha xchg push pop rorl fisttp imul lds ss enter (bad) inc jo inc icebp xor jl xor arpl pop out int in push xchg movsb add jne mov inc sub mov (bad) (bad) ffreep jle mov int dec mov cmpl pop mov pop xchg ficoml jp lods (bad) (bad) or dec push rcrl stos ret out cmp (bad) pushl rcll dec fcmovne lock push mov lret loop (bad) (bad) (bad) dec mov dec sub push (bad) pop dec fisttp outsl xchg push xor ret incl data16 pop inc imul sub lock push dec mov (bad) mov sbb jae ja std mov push repz lds ficomp (bad) (bad) mov mov jnp imul cltd imull jecxz sarl jle into cwtl lahf movsb ljmp (bad) incl loop jg adc mov or scas adc add (bad) call stos test pop mov jne rcrb cs jo ljmp inc push xchg dec repnz pop sub inc mov sbb or in aaa fbstp sar or inc ret ret sbb faddp mov adc (bad) mov inc jg or imul cld cwtl pop xor (bad) fcomps xchg (bad) mov mov pusha mov icebp push sbb xor (bad) mov sub (bad) pushl add fbstp lock push ljmp int3 test (bad) (bad) or clc jae lods inc mov sbb xchg iret sbb (bad) ljmp inc call push fs cwtl and sbb push sbb sbb (bad) ljmp mov lret leave jmp loope ret sbb inc ss ror das sbb (bad) ljmp shr push cmp mov inc xorl test mov enter stos (bad) (bad) fistpll sub xchg mov mov es (bad) in fildll inc inc das pop das call mov jle incl fucomip (bad) (bad) shrb adc ja dec and inc mov pop stos sbb or faddl rclb lock pop in xchg mov jns and arpl (bad) lcall negb neg loop in adc fcmovne cs mov sbb ret jb mov mov test in dec xchg aad mov jbe dec push (bad) jmp stos loopne or or push push imul (bad) jns or or popf call mov rolb adc sub push sub cmp in sbb ljmp mov mov incl mov addr16 negl mov popa push cmp pop pop int3 bound mov (bad) (bad) (bad) lcall insl add lahf xchg mov and rcll out add in cmc or adc or push mov and (bad) (bad) outsl pop dec pop hlt loope pop ret xlat fcomps and push sahf scas and imulb (bad) (bad) lcall js mov int cs pop push lret fisubl or sbb pop adc rol aaa icebp pop loopne loopne inc pop pushf in inc (bad) idivl clc loope (bad) (bad) sahf jno cli sub or dec cwtl dec or mov or xchg pop je (bad) (bad) pushl sbb lcall mov (bad) pop and pop (bad) (bad) incl jns pop adc jae roll mov adc jle cmp inc (bad) (bad) lock mov pop sti iret je mul sbb mov fdivrp mov jmp cltd sbb pop hlt cmp sbb lahf in xchg ds sub incl lahf add mov outsl push add repnz fwait inc inc incl mov nop mov dec es pop inc push and jecxz lock int jl scas leave inc jae rcrl ret cmp std dec hlt lock call loopne add je pop (bad) (bad) mov fwait das (bad) stos sbb fiaddl outsl (bad) jmp notb jno cli insl cwtl outsl (bad) dec (bad) push jl and and incl stos (bad) dec xor sbb adc jl mov loopne in and lods ss das mov lret das (bad) push push incl mov adc insb add or jne cld mov xchg pop jns jl outsb sub mov pop jns out lods or in daa movsl xchg (bad) lret or sub mov adc idiv call ret jae test or (bad) fcoml cmp xlat lret test mov fistp adc inc sbb jg cmp xor lods xchg daa inc (bad) repnz ljmp outsl sbb pop push sub xchg or or add sti test dec iret (bad) sti mov aam adc add das (bad) (bad) insb js pop sub add sti (bad) push mov sbb mov std insl sti incl cmc std push jns mov inc dec mov adc cli pop stc sahf push jecxz sbb jecxz lret xchg pop movhps test ljmp outsl sub nop mov ljmp mov mov push sbb outsb testl fsubrp pop add cli (bad) pushl in js (bad) pop (bad) mov flds dec jp add add lcall mov seta fs ljmp push dec xchg mov iret cs add add pop inc pop clc push dec xchg ds jmp cmc das cld push mov and outsb cmp fwait mov mov pop cs arpl cltd icebp cwtl addw cmp loope xor shrl cmp cmpsl or daa inc xchg jne out in push dec test dec bound pushf idivb pop xor dec arpl fldt add mov in test dec jno add stos call (bad) dec jbe aad sti mov out outsl mov jp inc xchg mov dec inc std mov pop (bad) pop xor and aam adc (bad) (bad) (bad) aas fimull mov lods (bad) sbb js das test in xor outsl outsl hlt jmp add js xchg std mov call (bad) in sahf and inc std sbb lods add test dec and lods pop clc (bad) call aad cmpsl adcl mov cmpsl stc sub sahf sub (bad) (bad) (bad) dec push dec aam mov mov jl (bad) dec xchg roll dec enter pop das sub lea xor pushl xchg xchg (bad) cmp sbb js xchg push dec mov pop or in sub adc cli (bad) call test mov jecxz xor cmp or cmpsl fisttpll stc scas in (bad) (bad) aaa mov cwtl push adc movsl mov add sbb push hlt or ljmp cmpb jmp push xchg inc int3 addr16 xchg std fimull (bad) xchg pop xchg (bad) cli lea dec jp or mov pop sub (bad) clc xchg pop mov xchg cmp je std (bad) lcall xor mov adc popf push (bad) in imul adc jg (bad) rcrb pop (bad) mov mov pop cltd sbb add (bad) (bad) (bad) out cs push lods pop cmp xor cwtl jg (bad) sub out jns pop sahf shrl and pop js push mov mov and out mov xchg fdivrl ret (bad) (bad) (bad) aas sub xlat in test (bad) repnz popf es adc sbbb (bad) (bad) (bad) push scas mov jmp jne xchg sahf mov into (bad) mov in das jne add popf mov push cmp push rorl pop loopne jmp pop cmp loope fcomps mov xor and call sbb test (bad) jne sub les sbb (bad) lds push das jge incl sbb mov fimull pop test mov pushl test addr16 mov xchg mov scas mov pop mov es cmc aam (bad) inc mov sti or mov sbb lods fmull jbe (bad) jae (bad) (bad) (bad) fistpll adc mov stc jae imul mov mov das hlt imul mov pushf sbb rorl inc xor test (bad) or adc int3 (bad) cmp and call push mov cmp into sbb push shlb (bad) ljmp ficoml rcrl loope push ja ss or (bad) int3 ss clc das hlt pop inc mov lcall mov lcall scas shrl xchg (bad) (bad) lea sub lcall subl fcompl jnp push lds rcrb adc int (bad) mov adc and test or subl push (bad) (bad) (bad) (bad) stc adc aad movsb fmulp mov jae pop sub lret pop mov int lcall stos (bad) call and cmpsl xchg stc or mov pushl adc jo,pt popa lock jmp int3 pop lret xlat adc decl mov rolb lcall mov (bad) (bad) xor mov mov adc cmpsl leave xor fs pop or out pop sub dec loopne cmpsl xor cwtl (bad) (bad) (bad) call jp push mov dec rclb sub pop pushf or xor lcall movsl (bad) pushl mov mov sub jnp mov call and xchg ljmp sub pop adc (bad) (bad) (bad) (bad) (bad) push mov sbb das pop mov (bad) adc (bad) jg or xchg sar add lock mov jbe leave mov scas lds aaa jbe popa into jle std lods decb dec stc adc xchg daa idiv ljmp push pop mov jecxz dec xchg jb imul dec xor push pop negb (bad) (bad) (bad) (bad) jl sub mov xor push sahf cmp pop xchg jne sub mov push data16 ljmp lcall cmp jge pop mov lret sti jbe inc (bad) out jno sti clc pop rcrb (bad) pushl cmpl bound cmp dec dec adc (bad) incl and inc imul mov jp je push (bad) lcall mov xor push jo test and dec cld outsl inc jmp inc mov call dec or rcrl jb dec fstps (bad) (bad) (bad) and lds push daa fucomp mov sub ljmp (bad) ljmp and and push mov push sub sbb pushl mov inc push xchg lods out das xor lods mov mov ljmp jo fs mov add and sbb dec sub loopne adc cli push in inc inc out cltd movsb cmc (bad) (bad) pushl ds mov (bad) mov dec es inc repnz das pop jg lods gs mov mov cli addb (bad) (bad) mov int3 sti idivb mov sub jecxz stos adc pop cmc mov je lock or sub adc cmpsb dec add (bad) (bad) jg xor jp movl repz outsl push mov inc (bad) (bad) (bad) fild xor pusha out xchg jns hlt xchg cmovo jne jecxz xchg xchg into push pop push ljmp mov insb inc sub repz pop das jae (bad) call or out scas mov das pop imul mov insl (bad) int3 add mov das icebp movsl mov das lcall loopne (bad) (bad) (bad) jmp imul into or sub idivb and dec js insb popf pop xorl (bad) (bad) aas (bad) hlt loop sbb aas add test leave push pop dec (bad) push cmp jp lahf fldt aad ret pop push popw xor (bad) pushl inc loope imul inc push push dec mov inc lcall dec adc inc pop inc test sar jle xchg rolb adc add mov sbb arpl psubusw sub pop imul cmp or (bad) (bad) lcall rcr jns loop mov data16 sub or jmp repnz movsb sbb into xchg xchg (bad) ljmp lcall out mov mov push inc mov mov mov push divb imul jno jl fimull (bad) ljmp xor je lock push into rclb mov or dec nop sbb cmp or shll lret adc jmp in (bad) (bad) incl or enter das push lods inc push adc mov jb inc xchg adc xchg int3 mov inc ds nop pop and add (bad) lods arpl nop notl fs jno scas push fcmovnu (bad) jnp inc mov in inc es ds outsb cltd (bad) (bad) (bad) call mov pop lock sub xchg and mov pop push cmp add (bad) (bad) (bad) call xor jle add ret xchg pop or movsl out fidivr jl fiaddl int xor stos incl loope aam sub mov xchg (bad) enter incl add fldl repz cwtl in xchg daa stc jg (bad) call jl outsb test push cltd xchg dec das xchg xor repnz push cmp pusha jl dec pop scas add xor pop cmpsb push outsb inc insl jbe das lock jg push pop inc outsl and aaa hlt jp jb sub (bad) dec mov fs and hlt lea mov mov or iret popa add test loope xor mov sar lcall sub jmp ror lahf xchg sbb inc jns (bad) mov or (bad) or ret xchg dec mov stos repnz sbb (bad) (bad) (bad) jns cmc xchg xor std aaa fcmovbe popf imulb or dec lret pop ss ljmp cmp into sub bswap sbb sbb cld (bad) call dec scas icebp xor pop pusha sbb fmull popa ljmp lcall out pusha (bad) rcll mov cmp sbb (bad) (bad) (bad) (bad) mov pop add lcall aam cmp mov stos data16 jmp lock jmp test cli scas sbb push mov mov enter (bad) mov add stos fdiv lret jno shr push jb and mov lcall mov int arpl mov out gs (bad) in jmp jl cmp fidiv mov mov dec loope sbb je cmc (bad) (bad) push pop cmp std scas es out fadds sub jge pop dec cmpsl mov adc ds (bad) ljmp lds sub out outsl mov mov pop lock sahf out lret mov mov xor xor push cmp add ljmp lock push mov fucom inc arpl cmp pop mov sahf push (bad) (bad) (bad) decl lods xor aam in icebp xor mov or aaa and pop test mov sbb fidivl loope fsubr add pop arpl lods add mov xor sbb xor push call insl inc aad icebp mov jle repnz sar ljmp daa fdivrl nop ror pusha mov testl pop xchg mov dec mov ss gs fmul js repz and test jne mov (bad) sbb jle cmp lods inc jle fwait (bad) (bad) (bad) (bad) stc test fcmovbe xor mov loop jl clc mov pop adc xchg std outsl jo mov repnz sub icebp and adc fistpll (bad) pushf push nop pop mov std cwtl xchg arpl dec add pop es sbb iret pop mov pop outsl mov xchg daa dec (bad) ss (bad) (bad) (bad) mov in rcl nop xor repnz dec jmp les movsb push sarb call scas sbb xor push ret (bad) (bad) incl ret cmp or mov icebp and and xchg addr16 inc mov loope mov inc push popf dec pop and roll test adc call stc lret mov enter cmpsb jo or out cmpsl in insb xchg bound mov mov stos mov pop dec popf outsl mov push icebp lcall int3 lret mov xchg jb (bad) dec inc aas clc iret sbb mov lret dec (bad) (bad) push lods ret fwait add out add jno jg dec in add sar fsubrs or fadds dec inc repz ljmp inc aad jmp stos push or xor icebp push lcall mov mov pop xor xor iret je mov cmp and jp in js push popl incl xchg inc and xchg jp mov test and pop push fsubrl lods (bad) (bad) pushl xchg pop push aad cwtl movsb scas jg and pushf add xchg ljmp mov arpl xlat roll dec ret xchg ret cwtl add into test push lock lcall adc mov js jbe xchg cmp mov loopne,pn inc xor sbb cltd push and (bad) call jmp lods xchg js pop dec loop cmp loope std test (bad) jne test inc inc les leave dec daa jnp repz ret adc js push sahf sub cltd or cld das lock ja xchg into cmp pop mov cmp lret sub jno push pop (bad) lret popa sbb sar (bad) (bad) mov (bad) lret bound sub or xlat push mov lahf xorb call xchg loop fdivs inc mov popw hlt mov or mov push push cltd pmaddwd decb sub sub (bad) sbb xchg (bad) and (bad) (bad) (bad) ficom or fstps hlt inc cmp xchg pop aaa jnp adcl sar (bad) fbld push jnp inc fisubl lahf imul (bad) push (bad) (bad) mov jmp ret pop shrl sahf movsb jmp mov (bad) (bad) jmp jge imul push leave fwait test out inc hlt out icebp insb jbe pop (bad) (bad) (bad) lcall add ret mov mov mov fdivl or in add mov push inc iret mov loopne std jl inc fwait mov rcll jg add fnop outsl cmp pop dec aam push pusha loop adc imul fcomp lea add out mov fimul and sbb gs jg push jl or insl js push xchg bound pop xchg push hlt adc decl aaa jg dec in jp fnop jns (bad) mov popa push ret out stos fisubl faddl in dec (bad) in xlat fcoms add aas fldl testl mov inc push sub loopne sbb (bad) lcall arpl sbb scas or jae jg arpl xor (bad) cmc std mov (bad) mov pop ss xchg fwait outsb push gs mov pusha out fsubp add out in je lret jmp mov mov pop pop mov pop imul add (bad) ljmp rcrl divl xchg iret push mov leave ret js push ljmp cmc pop adc outsb and loope jmp mov push fstpl decl cli xor icebp dec dec cs xchg push imull imulb cld lcall pop push dec mov rclb (bad) pushf and pop add push incl xchg xor insl push xchg xlat jge sub (bad) push popf sub xchg cli mov pop mov (bad) test lahf imul cmp aaa cli inc push sub ja mov pop lcall ljmp scas int3 dec jb (bad) or cld jo cmpsb lea push or (bad) (bad) fnop fsubrl mov push sbb mov cmc adc mov jg call push popa fwait jbe aad mov jl lods gs add dec adc mov (bad) (bad) mov bound ljmp (bad) fsubr xchg mov cli jg decl sbb rcrb mov or enter push ja in pop jae (bad) pushl mov xchg jo test arpl mov pop mov (bad) out in adc ljmp push ret clc pop fistpll cmp dec pop xorl xchg out int movsl push in rorl mov jle cmc inc test mov (bad) outsl cmc decl std call add push icebp (bad) (bad) inc (bad) icebp mov das sub outsl test (bad) ljmp fmuls repz mov jg shrb repnz nop out xor cmc mov outsl shlb or imul adc imul jg inc call jmp cmp test repnz orl dec cmc movsb mov (bad) fistpl fiadd mov (bad) push loopne push sub inc xchg test mov sub and mov push jb add or ljmp jmp pop (bad) sahf (bad) leave bswap pop ljmp and or mov loop cmpsl push jmp cmpl xchg jp insb lret dec sub dec leave push xlat mov push (bad) (bad) mov aas fsubrl mov push insl jp clc shrl (bad) (bad) incl sbb roll out lret pushf lods dec mov je inc mov pop cmp jg fild lret mov (bad) test fldl jno sar inc jl add add add pop cmp adc jo add push jbe insb (bad) ljmp mov dec inc mov jnp add sahf push mulb outsl incl insb data16 xchg imull add and push jg movsl ljmp in mov jle push push jle xor clc cmc dec std jmp mov or loopne push jo fnstenv (bad) (bad) mov dec cs dec cmc pop scas test (bad) (bad) (bad) inc shl add addr16 scas arpl call insl xchg imul lret imul xchg adc xor or (bad) insl fildl loope jno inc mov sbbb (bad) (bad) incl sbbl dec mov bound mov incb pop (bad) (bad) (bad) (bad) (bad) jmp add sub xlat add fnstcw idiv pushf into (bad) mov (bad) pushl pop dec cmp mov xchg sbb stos mov movsl aas mov loop jl lds cmp sub call js cmp pop gs pop push in and lret sbb repz jns jg jmp inc add mov ds out jb test mov pusha xor push clc dec mov loopne decl add add roll mov pop (bad) (bad) lcall mov dec mov add ret ret add push mov sbb outsl hlt aaa mov sti push cmp or outsb stos add jne mov jmp inc cli lcall mov mov sbb inc js popf or (bad) lcall push and test cwtl and mov push cld xchg clc jmp ds mov or inc xchg jl sahf jl pushl sbb aad insl xlat iret imul adc (bad) cmp (bad) or add and jp jp fsubs movsb loopne pop test pop cli xchg pop scas stc jbe sbb popa mov add (bad) ljmp std inc inc and adc lahf das ss cmp jecxz decb (bad) notl sbb daa jmp pushl clc incl inc mov dec inc outsb jle cmp test cmp mov jno jno aas (bad) in call ja daa (bad) (bad) jg es xor rcrl stc xchg sub mov jmp jae cs btcl sti rcl adc xchg push jns scas xchg inc push sub iret movsl mov clc push sahf mov and (bad) pushl insb mov pop and mov js xlat icebp xchg or fcoml cld incl cmpl scas sahf and xchg clc lcall nop repz xchg in inc fucom sub mov pop imul decl mov sarl xor xchg and (bad) fildll ss aaa or (bad) push add inc pop outsl insb adc jp pop pushl iret lods xor fdivs (bad) cwtl faddl mov add lcall inc icebp aad push adc pop movb lods xchg pop sub (bad) (bad) (bad) jmp mov xchg or push mov xor pop cld add fidivr in inc lret push inc xor lods nop mov in nop mov jp push xchg movsb scas adc loopne adc or add push outsl push pop stc pop ret stos stc ret add dec jg and (bad) (bad) call gs pop dec add sbb cwtl and jge dec sbb xor rolb mull sub xchg xchg and arpl (bad) mov jl std jmp loope xlat pop mov mov cmc fisttp outsl sub repz aad mov call mov (bad) jmp add hlt ds xlat jge (bad) (bad) call pop in jae daa sub inc stc dec imul and gs fstps and and incl sub mov or add leave fsubp inc arpl ljmp (bad) je aaa adcl adc sbb insl (bad) jae fcmovb je das js (bad) (bad) ljmp and or loope mov xchg lret inc (bad) ljmp mulb jg mov xor push lods push js fwait into sub (bad) (bad) decl loope push lret mov fidivrl dec std mov cmc ret je cpuid (bad) incl lods xchg cmp cmp adc scas xor push mov or xor aam aas pop nop sub mov (bad) ljmp push push cmove xchg and cmp outsl (bad) pushl loop aaa dec sub sub inc and ret (bad) jg (bad) fildll push mov les fmulp adc mov rorl nop std (bad) (bad) decl mov gs mov add rclb xchg mov jmp int mov (bad) mov sub sbb (bad) mov rol jp shl out cmp pop jg mov xor fwait sbb sbb movsl mov jge pop push sbb pop movaps push mov repnz js into andl push (bad) pop push shrl pop ja and (bad) (bad) std out or cmp dec andl pop xor sbb pusha push jb mov (bad) (bad) decl xlat push (bad) in push mov nop outsl adc dec jecxz cli into (bad) ljmp mov ret mov test dec rorl and out add mov sti imul or mov sti adc (bad) (bad) ljmp pop in aas in jae jge sahf in inc mov lret xor ja movb loopne leave and cmp (bad) out jmp pushf cmp or (bad) lcall jecxz (bad) dec rorb aad addr16 inc sbb movsl dec xor ffreep dec cld (bad) movsb out sbb (bad) aaa lea mov addr16 incl icebp cmp pop jg nop cs outsl inc cwtl loope xor (bad) (bad) (bad) sti cli imul out fwait das lods sbb orl cmpsl jbe mov hlt jmp inc pop rclb and rorb mov pop loopne pushl adc clc test lods mov push add xchg icebp call outsl rcll ret js (bad) hlt cmpsl mov outsl and push aaa xorl xchg mov cmc xor (bad) adc pushf pop sbb icebp pop call push in sbb xor movsl call push sti test add mov mov cmp inc lcall cmp subb xchg xchg pop sbb fucomip (bad) fbld or inc stc pushf (bad) out xor fwait add xchg mov xor loopne cli incl (bad) cld jl xchg iret addr16 push mov (bad) pop cli lcall ret adc jmp pop push xchg xor (bad) jg xchg idivb fsubp add jl adc cmp outsb or sub test pushf pop cmp (bad) (bad) decl int in pop scas test mov test fnsave movsl ljmp mov aam dec mov ss inc push (bad) xchg test pusha jge pushf negw dec jmp popa lods mov push lcall stos lahf mov scas xchg insb xchg mov fimull loope js sarb fs sar jecxz leave jmp cs ss jle gs pushl int repz sub pop cld mov rcr sarb adc icebp fcmovnu inc (bad) mov mov or (bad) ljmp xchg xchg shl fs rclb sahf ret pop cmp ljmp xlat sbb dec rorl cld (bad) mov cmp sub fs test in or push repnz dec and js jmp cmp cli (bad) fistp mov mov je sbb (bad) (bad) (bad) jnp mov xor xor ds loope scas xchg cmp mov and add popa push push cmp jae leave or sti mov aaa adc mov push fstpl jo adc bound pop pop cmpl test hlt cmp (bad) sub cmp fstpt cmp jbe push stos shlb mov call sbb (bad) cmp subl insb ja or adc pop mov hlt setno or cmc loope mov sti std mov sbb cli sub ds out cmp test sbb outsb mov loopne aam pop xor (bad) jge cld nop out cltd and rcrb jg mov in mov mov jmp (bad) push mov andl pop into leave (bad) mov xchg in jae loop mov mov lods inc pop mov (bad) aam jg iret loopne (bad) (bad) lcall insb mov (bad) std in cmp pop cmp repz lock frstor xor es out mov les cld jno dec jno scas cltd mov and arpl dec pop jns idiv fistpl insl out (bad) adc dec lods aam jae mov and out jmp push mov inc lds jmp jg hlt decl scas (bad) push or aad xchg stos (bad) pop (bad) (bad) (bad) incl loop cwtl sbb cltd mov adc and pop cmpsb dec (bad) repz lret stc fucom xchg (bad) loop pop cli call mov mov je cli cmp jecxz adc popa mov or clc jmp movsb les test sub jg jle cli add xchg cli jmp hlt mov rcl inc push jne and jne pop xchg mov incl pop sub insl cmpsb sbb lea xchg jo (bad) (bad) (bad) call lret sbb loopne enter (bad) mov lock sub cld adc popa sub push cwtl (bad) (bad) (bad) fild addr16 cmp inc popa pop fidivl push sbb call jle mov sub mov jne sub inc xor lret (bad) (bad) jmp jae sbb jmp pop out pop push aaa jae xchg (bad) (bad) call test test mov imul dec jb (bad) mov jl (bad) (bad) (bad) jge xlat in push xor jge xor inc stos repnz std incb int pushl lds out test pop push divl inc xor push in sub jle incl mov pop mov mov and dec sub mov push iret jg ja outsb fs ja jb (bad) xor jae mov lcall fucompp inc ss and xchg lcall (bad) fnop xlat ret inc pop sti cmp dec mov or and jne mov mov (bad) incl (bad) jno fidivrl jle or cmp add test test xor das or cmpsl pop test jg sarl fdivrl sub fwait adc leave mov mov ficompl cli cmp rol pop jecxz dec (bad) jg jg add fsts inc scas add adc sub enter call scas aas in in sbb rcll or jle (bad) je xchg rolb enter outsl add sub mov test (bad) test xor cwtl das notb mov push mov xchg clc (bad) jg enter ss cs jecxz mov outsl rol test sahf (bad) (bad) jg scas pop sub aam dec les rcll push (bad) ljmp dec pop add vcvttpd2dq test daa xchg dec or ljmp out push (bad) mov ss fadd lock aam cmpsl inc in (bad) (bad) decl mov pop cmp hlt pop xchg loopne jl jecxz adc das jecxz and mov pop or test mov fdivs lret inc mov jmp mov jbe cmp jmp mov jae fidivrl push outsl cmc (bad) jmp push in dec jne outsl adc add pop arpl in idiv pop loop add lock sbb cmp (bad) (bad) (bad) jg jmp mov jecxz and lods push mov push inc into clc mov iret outsb out (bad) (bad) (bad) decl push out std inc lea aaa in adc and outsl jecxz lret dec pop cli (bad) incl lcall jnp push (bad) call cltd xchg leave stos outsl mov push mov mov inc jge mov sar ljmp maxps ljmp lock aas pop sar lods out dec enter (bad) incl shlb leave mov ds lock lcall dec icebp cmpsb (bad) (bad) decl cmpl lahf hlt cltd mov shll lret fidivl sarb lods std dec ds fistpl jne fidivl ss or dec xor pop ss adc (bad) (bad) mov nop inc leave and imul dec das (bad) pop mov sub sbb xor mov loop xor xor test incl (bad) dec cli cmpsb xor and adc je jp (bad) fildll push jle jmp adcl in (bad) mov (bad) lcall xchg mov jp scas aas pop mov xor pop mov (bad) (bad) mov in ret in (bad) push jecxz ret mov lds mov fucomip test or les mov adcb cmc (bad) cmp adc mov insl adc inc xor cwtl dec scas lahf xor negl out and jb iret (bad) mov hlt add daa pushf dec inc or sbb inc pop mov loop mov sub jo outsb mov jmp and pop or dec xchg pop (bad) (bad) mov xor dec lods sahf or lods sub nop mov das cmc pop loopne or mov or repnz (bad) loopne rcl and xchg (bad) out jbe dec xor rorl push mov dec (bad) (bad) fidivl mov nop out int insl (bad) sahf xor (bad) call mov mov push loopne (bad) push movsb idiv push movsl pop pop scas jecxz (bad) (bad) pushl push push and jp scas mov out or jl and hlt (bad) mov mov sub daa lret in inc and mov and insl icebp in cld sbb mov mov rcrl dec jge mov pop lds loope cld ljmp popf js push xchg (bad) in push in dec mov jae scas fucom das icebp jg push in mov insl bound test lret fisubrl fildll mov aad xchg stos pop jg add lock cmp mov or add (bad) push fdivrp cmp fs push cmc (bad) cmp fsubrl lods test sub (bad) ljmp push add xchg (bad) or in cmpsb cmp mov pushl pop std lds ret adc rcll push (bad) (bad) decl dec (bad) ja insl test cmp imul lahf push call lock mov or pop jle das cmp xchg jo mov push jns mov (bad) add (bad) mov add push outsl jmp and inc and loopne (bad) (bad) stc ljmp notl jle push scas xor sbb flds or xor jbe or pop clc rorl (bad) (bad) push inc lcall imul in mov stos incl decl std roll adc fmuls xor mov movsb jge sub pop mov data16 dec negb in mov sar ljmp lcall outsb test (bad) cmp imul (bad) incl mov ljmp mov add pop jg cmp xchg mov ficomp mov insb sbb fcomps mov sbb (bad) mov mov lahf test and outsb xchg int3 or (bad) (bad) call mov std bnd stc movsl jl cmc sahf lds push shl ljmp loopne es dec (bad) je jno (bad) (bad) mov cmp sti sbb repz sub lret cmp popa push inc shrl insl fdivrs mov and dec insl in pop fwait int3 inc sahf nop leave mov adc or aad mov ret pop adc inc mov jo xor daa popf (bad) fstpt xor xchg arpl lret xchg adc (bad) incl call cli sbb ljmp adc jbe pop call jecxz insb xchg dec dec adc xchg push mov (bad) (bad) jns mov or pop fisttpl adc fild js (bad) (bad) (bad) ljmp jle imul jg inc fcom dec imul call (bad) pop (bad) jle ret pop cmp inc js bound sbb cld (bad) jg pushf adc or jae roll popf xchg cld test mov dec pop sbb cld fimull mov subl (bad) adc push (bad) (bad) incl out fs adc scas xor cmp or das in mov or call lods stc lds lods jnp out outsl sub test cmp adc lds inc xchg pushf xchg cmp arpl das cmc jmp fmuls mov arpl in xchg xchg jns cmp insl fsts lret (bad) (bad) (bad) (bad) mov fwait cltd xor pop out in stos movsl inc mov enter cmp inc mov jmp sahf push sbb mov addr16 out mov pop adc inc dec cwtl or mov (bad) data16 mov mov ljmp aad out dec std jb stos fidiv mov std lods (bad) mov cmpsl push js xchg xor fildl mov sbb xchg in inc push das lock mov mov pop cli call jo xchg iret or dec (bad) shrl daa sbb add mul jg das cmc cmp sub cltd adc incl cli jae adc push imul (bad) lods call jae xchg dec fs pop (bad) idivl mov adc outsl (bad) jg jg sbb les lds lcall ret mov call mov jp push arpl cmp push push push inc sbb pop xchg pop mov xchg (bad) mov jg ss pop aaa out pop repnz lea mov dec lods inc (bad) mov jle mov xchg stos mov (bad) pop pop sub pop stos add lods fnop push push jp ss jle jp xor fcmovnu imul mov hlt call xchg jo (bad) push cmp push push sbb pop fisttp daa sarb (bad) out lds add out inc adcl push (bad) bound test jp jmp js rorl sbbl fucom lcall repnz cmp jns push vminpd into ret fisttpl fldt and cmp popf and pop push (bad) (bad) (bad) ljmp (bad) (bad) mov dec mov xchg pop std pushf cmpsl (bad) rcrl (bad) ljmp cmc cmp adc call jae rorl add dec mov (bad) (bad) (bad) pushl xor mov lods insl rclb in fxch (bad) fidivr fstpl (bad) (bad) (bad) jmp pop aaa jle xchg cmp push add mov pop pop push inc inc orl movsb insb fisttp mov mov jmp int3 (bad) adc jmp daa inc dec (bad) aas loope in jns rcll push and mov decl les sub mov in mov out dec pop jae (bad) fisttpll movsl decl data16 lret test adc dec mov ja jecxz cmpsb fwait dec push call jmp sahf es jmp or jbe lcall std cmp outsl xor mov cwtl pop xchg xchg pop call sbb aad pop rol (bad) and mov or stos mov stos out jecxz ljmp xchg xchg mov daa test cmpsl mov repz mov (bad) (bad) lcall ficoml cmp pop ss mov repz inc fild inc addl fildl movsl (bad) (bad) (bad) pushl dec je mov pop ljmp out mov repnz and ljmp xchg push lock movb dec or (bad) (bad) jmp jo sbb repnz pop jecxz mov enter sbb fucom shrb (bad) mov push adc inc push mov pop mov fistpl std lock call fistpll lea add add cld jp cmp xor cld fistpl jg jbe jno inc test fs xchg adc fwait inc (bad) ljmp adc jg mov lret add aas push loope jp call incl mov jne fwait ret inc aam pop or cmp out (bad) (bad) (bad) push or or dec notl jge incb mov push dec out daa mov hlt (bad) call jnp jg dec pop jno std js ud1 pop jg cmpsl fcompl dec cld (bad) (bad) incl pop jae xchg fdivl daa jp pop xlat mov pop inc push pushf ljmp pushl test (bad) out out pop clc mov xchg in lea ret mov mov xor js test fsts outsl jne out add ja fwait add sar decb loop into outsb inc movsb jae lds pop stc push (bad) (bad) mov dec xlat aas js (bad) repnz aaa inc hlt nop and mov mov lahf xchg in je sahf mov inc idivb pop fisubr das out xor (bad) (bad) call sub dec pop ljmp das (bad) icebp sahf xchg jecxz test mov push xchg in or pop cli incl scas into mov nop arpl add lret mov mov fistl test mov adc mov jmp (bad) mov push dec pop gs js push das cmc (bad) (bad) fmuls (bad) jb mov repz test pop mov (bad) (bad) lcall sub ret sbb lret rolb aam xor les push jb push and xchg (bad) (bad) (bad) incl (bad) out movsb sbb dec lds mov mov insb cmpsb int cmpsb (bad) (bad) (bad) jmp negb insb dec in jmp jno inc fs xchg push insl clc (bad) push inc sar (bad) ljmp xor mov jmp jecxz add sbb cmp in popa pop mov hlt (bad) jge ja xchg int xchg pop js adc cmp ja (bad) (bad) jg jle xor loop sub add xchg mov push les mov cmpsb mov scas sar inc sbb ljmp loopne xchg push pop lock mov or mov sarl xor enter enter das push or cli dec pop xor push mov jle (bad) (bad) fildll mov (bad) mov into test rcrb pushl inc in pop jbe idivl icebp (bad) jb addb repz lcall mov jp in adc lock call push test mov mov or mov adc mov mov mov mov ret (bad) (bad) jmp sbb xor adc icebp sbbl mov cltd nop int (bad) sar (bad) lcall aam or inc adcl (bad) xor add sub xchg rcll loop mov push mov scas sub (bad) (bad) incl xlat or in jb arpl pushf inc pop fwait pushf or xor push pop iret and decl bound or and js mov xor or pushl das dec dec mov in pop outsb test dec cltd aaa stc (bad) adc fucomip mov stos cltd sub fdivr jnp js push movsb sub xchg mov (bad) (bad) lcall add push shr xchg (bad) or add sarb jnp js (bad) shrb push (bad) (bad) ljmp fmul stos xor lret lock push jl orl adc (bad) jg mov push fcmovnb fnstenv pusha inc sbbl mov out movsl pop jecxz jmp mov test xchg pushl dec mov ret push sbb into (bad) mov fs fdivp js in stc (bad) imul stc shr sub in daa push sbb std mov mov pop mov mov loope aad imul xor sbb or hlt aaa pop ds push insb ds (bad) jg rol jns mov sbb imul cmp clc (bad) jl stos lahf jnp std movsl shll push leave aam push xor sub test cmp jge inc mov mov jo add (bad) mov add mov into lods xchg and jle lds in (bad) (bad) incl ds cmp mov dec mov clc mov push push xchg nop jnp (bad) (bad) ljmp leave in jbe out mov sbb sahf scas test adc (bad) (bad) (bad) incl data16 jle push jge inc jmp mov mov xlat repnz stos jne (bad) incl jmp ja inc mov and jmp mov or jmp jb repz sti mov pushf mov aaa adc adc fwait xor pop insb leave pop fdivs jecxz xlat jl and lea aam inc cmp push lcall outsl jmp jne ljmp add testb out pop cli ljmp pop repz das sbb mov or jnp xchg je jg movsb xchg loopne cmpsl bound das cmc jb pop inc mov iret out je inc popf push jmp sbb cmp arpl scas js jmp mov scas outsb dec stos js jg (bad) pushl sub scas cld pop cmc or jge jne pop nop inc lahf xor stc mov (bad) xchg mov xlat (bad) incl jbe outsl mov int adc adc ljmp xchg xor sbb scas adc test std mov adc in xor or les push flds xchg cli outsl push sbb rcll jl sub add (bad) ljmp push (bad) cld addr16 or mov out out test push sarb test cltd mov sbb jl add jecxz addr16 in add ljmp jg fucomi cmp adc out aas xchg push adc sub push cmp iret mov sub in fwait test add es out and (bad) fcoml das icebp (bad) decl mov ja bound dec xlat fstpt pop cmp insl cmp pop clc (bad) fcomps dec (bad) loop inc push or xchg stc mov cld test adc (bad) decl cmc xor mov rcr icebp cmp dec fdiv (bad) sbb (bad) fcmovb push in ja rorl test test (bad) (bad) mov inc cmc push dec aad xchg aam lods inc test in hlt js enter (bad) or hlt (bad) call push int3 jge ret xchg sar adc push aaa cltd icebp outsl mov pop idivb pop dec rolb pop fsqrt jle push mov test std mov sub testl mov lea std (bad) (bad) ljmp std xchg out jmp mov (bad) xor cs or hlt movsl lcall repz arpl jo dec mov inc add push int3 repnz (bad) sub movsl pop and test sbb test jl (bad) (bad) ljmp daa pusha cld xchg dec mov jb inc dec push xor clc (bad) fdivs jo stc sti cld aad lcall pop sub lret xor adc pushl fwait lcall xchg notl iret sarl push inc mov loopne js data16 hlt cs mov xor (bad) mov lods int ss fiaddl or (bad) pushl push xchg icebp or lcall and mov mov jg popa sub subl push (bad) jl fildl mov pushf out ret fwait outsl or jmp les mov adc push (bad) push repz (bad) (bad) (bad) incl (bad) je jnp ss xchg cmc icebp imul cwtl lcall or xlat aam in jmp mov mov lcall test into insl inc cmp imul outsb push lods stos cmc shlb stos jno je or sahf adc test pop add mov sub (bad) mov jns fdivrp fmull aaa imul or call call sub adc ds push push jne out (bad) daa test cs push xchg rcl imul cmpsl dec (bad) (bad) (bad) (bad) cmp lea inc mov bound loopne idiv into mov inc and ds (bad) mov and shll jg jbe pop in xchg mov push inc inc add jmp call test outsb push scas or bound mov orb xor mov in and daa add sbb aad pop pop in mov dec cmc pop sub cmpsb (bad) (bad) (bad) and dec mov jb repz and xor (bad) (bad) in inc arpl in push in mov push fcoms adc movsl es (bad) fucomip dec rolb shll jg jb cli pop and pop cmp xchg ficoml movsb fsubr mov mov (bad) in jg out lahf mov rcrl mov push in call (bad) mov nop je inc lahf in ljmp inc cmp nop leave push cmp pop lds or or mov mov hlt movsb mov pushl seto and sbb cmp xchg outsb sbb inc pushl stc xor sub imul mov fisubrl xor push (bad) (bad) (bad) cmp inc lcall scas icebp (bad) mull jmp les cld fsubp (bad) (bad) jmp pop bound into xor aam daa js xor mov pop push test jnp pop xor push dec xlat lcall fildll int (bad) mov (bad) sahf pusha icebp data16 aad sbb jmp push fist jne mov inc pop mov pop dec push mov call cmc fdivr faddl cs and or lds cmp int3 jbe lods bound xor fcomps xor cmp mov dec ljmp mov add jne mov movsb push (bad) (bad) lcall jg xor add data16 test mov pop or ret xchg mov push add add push jl stos into outsl aad (bad) decl jp xchg xlat jae fstpt lds mov sub (bad) mov adc fisubr sub xchg nop (bad) and sub das push js jl in lea ljmp or or jecxz add mov imul ljmp fild sub xchg xchg icebp xchg rolb or jle jle adc scas xchg clc inc cmp (bad) inc adc xchg stc (bad) in mov jb dec xchg lret loopne pop sti dec cld mov and and pop jno add mov push mov mov mov popa (bad) mov mov test (bad) (bad) (bad) pop push (bad) add inc inc push push inc lea cmp mov or and jmp adc pop popf (bad) push push (bad) (bad) (bad) incl sbb pop dec les lods mov inc jne mov scas jno cmp ss add mov shrl inc repnz in stc int3 pop fsubrl aas adc dec outsl mov out fdivrp das cmc mov xor pop ret push sarl (bad) imul enter mov out cmp cltd mov cmc sahf mov dec loopne fistl fildl mov dec imul xchg std jne adc sbb ss and lahf sbb vmovdqu sub iret scas inc add add stos inc lea test sub push mov pop push arpl (bad) pushl jg dec cmp inc fsub xor or lcall mov cmp out out (bad) lret mov sahf pop (bad) idivb sub dec outsl mov test or dec rolb sub (bad) ljmp cmpb fstpt stos scas dec ss xor (bad) sub (bad) outsl and mov or repz mov cld mov xor add (bad) pushl repnz jnp and xor or pop push std pop loop aad pop or sbb mov call or test lcall arpl jg ret mov add cmp inc cltd add adc (bad) decl inc shlb add je outsl ss stos adcl mov sti cmpsb inc inc clc (bad) and rol sub mov inc das cmc (bad) call mov xchg mov xchg rorb add pop or push ja pop add xor (bad) (bad) pushl outsl adc test (bad) adc shufps (bad) (bad) pushl or ds pop dec push clc mulb je push dec lea in (bad) fnstsw push mov xchg pop jecxz ret loop pop mov cmpb cltd adc push aaa cli repnz bound js cwtl nop out in call mov cli (bad) sub decb jae insb mov inc ss and cmp xchg pop in dec xor jp and andl (bad) jo jle lret dec sub ljmp mov push lods mov es xchg add cmpsl call push imulb mov sbbl or sahf aaa inc and out (bad) call add iret mov rol xlat pop fstpt jecxz call (bad) pushl dec xor arpl ss mov fcom das sar push incl push sbb mov sbb (bad) mov cs jo jp push adc lcall mov sbb pusha fsts push and clc pushl aad and push mov shrl (bad) (bad) ljmp pextrw and in call sbb jns mov enter fimull (bad) pushl and inc test pop pop in mov mov pop ljmp lock adc cld push and and loop loopne ljmp add add push pop and loopne lcall push adc mov dec mov add mov test mov popa roll mov mov (bad) mov add insb push or and xor and movsl (bad) daa lahf lds or rcrb or sub insb mov cmp (bad) (bad) dec sbb push test sbb pop push jmp (bad) pushl dec adc in xchg adc mov jg flds pop inc add aam (bad) (bad) sti jbe adc addr16 jg inc and (bad) in aad or daa fs (bad) (bad) mov outsb push test call ficoml mov sbb jae stos (bad) jmp enter jnp mov (bad) loop lcall sub ret test xor pop jae les addr16 pusha ficomp xor incl (bad) fistpll in lds scas push or mov arpl (bad) (bad) (bad) (bad) jle cli btc aam fdivl nop aaa dec aam jp jp stos (bad) adc (bad) jle jbe pop pop pushl xchg and bound jge sbb leave and outsl cld push (bad) mov leave pop dec imul in push iret xlat push orl fcompl mov rclb int out mov fiadd stos (bad) (bad) (bad) jmp rcrb in (bad) int xchg (bad) inc out xchg ljmp mov push (bad) (bad) ljmp ficoml ss mov jnp cli in or ds or xchg adc sbb call das mov scas adc or push fwait adc pop jno add pop loopne out add call dec jne jb add xor icebp (bad) (bad) (bad) mov mov outsb (bad) jbe mov stc jg div adcl xchg dec (bad) (bad) (bad) inc rcrb addb insl je adc pusha add data16 inc pop dec cmpsl adc (bad) ljmp jo (bad) or sbb mov scas push mov call pop pop sub in and pop (bad) inc fnsave push das cmc add out negb jnp (bad) jg add jae (bad) fisubrl mov les and (bad) (bad) lcall adc shrb sbbb icebp adc mov inc icebp mov in adc jmp jge push inc xchg stc cmp (bad) pop and inc movsb movsl (bad) mov je repnz arpl cwtl adc mov pop mov inc arpl mov push dec shr pop arpl mov (bad) (bad) (bad) pushl js mov pushf xorl add mov addl shl shlb push add es adc stos push pop push push imul and or movsb aaa jmp xlat add dec cli jne ljmp into xchg mov inc out shrb fildll xor ja push (bad) jmp mov inc (bad) lock push movsl mov sub dec xchg sub add (bad) call cmp push dec lods dec dec or sub inc out xchg (bad) or jae outsl lcall mov int mov add out fbld dec (bad) cmp push lods pop cmpsb xchg std or cmp popf call ljmp es stos mov (bad) int pop inc pop out adc mov cmpsl js outsb sub fwait stos ss mov jl adc les and dec (bad) push mov (bad) (bad) (bad) cmp xchg and (bad) out insb cmp inc lea push sbb stos push (bad) sub decl std outsl jb jge push mov jb jl stc adc mov (bad) call call pop pop lea pop and or or jp fs das cmc outsl xchg aas xor mov jmp dec ss (bad) (bad) lcall iret nop xchg adc scas and jecxz inc mov push adc je pop or push stos (bad) call jns outsb pop cmp jbe pop add mov ljmp je fs test push scas aad xchg pop push movsb dec (bad) (bad) jg ja lock dec mov scas out or adc decl pushf sbb movsb jmp fs pop jl into rorb mov dec jae (bad) (bad) push fwait cmpsl (bad) in repnz aam push out (bad) ret sbb sbb cltd mov mov out add cmp push add mov clc mov add inc jno sub clc fbld xor mov xor int3 call (bad) hlt pop aam pop out pop mov pop (bad) flds sub (bad) (bad) jmp out es fmul xchg xchg jle sti test lret dec mov and jne scas ljmp ret jmp iret push pop mov aas std fisubrl div pop sub jle cmp ljmp mov add mov loopne mov repnz dec (bad) gs cmp pop xchg xchg fcmovnu mov add cld call adc scas ret sbb inc stos cmp lahf jge sub fldenv mov adc and (bad) (bad) ljmp repz fmull in lcall mov je fisubr push jmp lock call fist jbe inc push movsl and mov pop pop ljmp icebp mov test cli mov mov xchg div xor adc sar aaa xchg enter jb jno js sub lods loop lret ret (bad) mov mov fcomip mov and test ljmp sbb mov test xchg arpl (bad) xlat sbb loopne ds (bad) (bad) mov iret xchg ljmp jg and push xchg (bad) fnsave out (bad) inc (bad) fdivr xor fwait in int3 hlt mov and (bad) mov hlt dec test mov or mov mov (bad) ljmp fnsave andb lahf xor out stc fisub test mov push jg (bad) mov or cmp xor sub insl push add sti lods iret add (bad) mov std jmp push shrb fs or (bad) incl sbb (bad) sub mov arpl iret les arpl push andl (bad) mov fldcw rorb add sub loopne js call xlat push adc mov dec (bad) ljmp in or lret sub and sub mov push mov rorl lret mov jae aam data16 das hlt jmp pop mov and daa sti repz jbe clc cwtl addr16 pushl cli mov pop movsb mov jnp push movsl (bad) (bad) jmp inc inc les mov sub in mov cli fnstenv add insb lcall inc divb insb cwtl (bad) decl sbb cltd test sub and or (bad) (bad) (bad) (bad) clc mov daa stos push pushf inc pop scas push iret adcl or lret sub (bad) (bad) ljmp and cmp sbb ss and mov cmp or jl xchg popa inc (bad) or sahf sbb jg pushl or xchg or or loopne arpl test xor jg or in ss mov std (bad) jg push xchg insl or or mov cmp lods flds pop xchg cli jg push mov push xor ret fincstp push les sub sbbl add popf (bad) sub dec ljmp out mov pop in add mov adc (bad) pushl or lahf mov insb nop jno xorl insl das cmc (bad) incl add pop sbb jl add or mov jg mov or xchg jno out mov jle (bad) mov out lods mov (bad) and jb jecxz je fwait outsb push xor fistp sti mov int3 sub inc adc lcall lea in int mov push outsl push aaa mov gs (bad) (bad) (bad) decl inc xor not xchg or cmp pop xchg shl add xchg inc aad (bad) (bad) (bad) call mov jp icebp xchg lds aad ret cli out jns jo pop insl scas cmp mov sbb (bad) movsl (bad) std loop and and sub push je xchg out lock (bad) call call enter js data16 fistpll stos jge inc je enter decl jb mov add clc loope lahf aam je inc jg lcall pop adc repz enter mov pop loop (bad) sti popf sti mov mov in mov aas xchg cmp add lods or lahf push nop stos mov aad xchg fcmovnu in ljmp insl dec fsubrl jbe (bad) aam jo mov jb mov pushf xchg addr16 (bad) mov loope mov or mov aam pop xor pop cld rclb cld popf ficomp test aas sbb (bad) (bad) jmp es mov dec adc jb adc mov test (bad) mov sbb cmp pop std push ficoml aas (bad) cmp hlt or in rol xor lods (bad) decl xchg jno cmpl jp lret pop loopne je push inc (bad) insl jnp insb pop mov call push out std cs sub dec into cwtl pop add sahf mov sbb jmp xchg sbb pop fsub movsb pop mov stos dec push int3 and sub mov mov loopne mov push call mov cli sbb inc sub xlat jecxz fsubr sub mov ja ret ljmp push fistpll rcrl ss int3 lods adc (bad) ljmp hlt fs loope sbb mov push nop adc mov int pop loop pushl jo outsb adc movsl popf lahf and fstpl mov test aam cld xor popf mov addr16 idivb (bad) (bad) call dec cmp nop (bad) mov fcoms test das xchg sbb dec fcompl clc push test subl shr enter add jo cmpsb pop push fcoml mov out sub push fxch test fnop (bad) outsl sbb mov jecxz xchg in aas pop (bad) (bad) jg imul and xor adc pop and loope aam (bad) pop cli outsl call jecxz mov rcrb mov jecxz mov or push push pop into mov jne sar movsb push sub fucomi test push rol jmp dec cmpsl jecxz clc mov and sbb and lock mov push jmp das add leave ja daa mov jle jbe (bad) (bad) lcall jns icebp cmp test xor and jnp xor mov fldcw fistpll push movzwl ljmp enter cmp test (bad) (bad) jg sbb incl mov sbb mov sbbl and ljmp stos ret sub cmpsl aas inc outsl cld incl mov dec push mov or hlt rcll in (bad) (bad) jmp test sar sub mov sbb arpl mov sbb inc (bad) ljmp sub shr test adc sar xchg mov std xchg fwait popf cld push push pusha rorb jmp outsl cld sbb mov push dec cmp sbb or (bad) inc mov or icebp mov mov shl nop push xchg lods mov aam arpl pop movsb jnp mov clc popa cld incl cli jae xlat mov scas decl (bad) (bad) jmp xchg mov dec mov xor push push lret leave jb (bad) xchg iret cmp int xor and insl or int3 push fsts movsb enter out mov outsb mov call or fwait stc xchg add add stos add ret call (bad) (bad) jns loope lcall push frstor xchg in stos xchg ljmp (bad) jg jmp pop pop cltd loop dec lret imul mov or insb fwait dec stos (bad) ficoml sar pushl imul dec or (bad) xor ds jno cmp test in adc pop xchg stc mov cmpsb push leave out jecxz (bad) fucomip xor and sbb fbld mov jno,pn mov std pushl push aas test test loopne add stos (bad) mov pop add mov popa push hlt data16 int3 movsb pushf idiv push das xor jge sbb dec jno fstp sbb das cmc jno adc ret movsb dec mov sbb lods mov (bad) (bad) inc cmp mov mov xor add cs les xchg rorl pop (bad) (bad) (bad) inc mov dec negb mov fisttpl sbb and fnstenv icebp imul cli movsl jle lahf xchg mov incl pushf xchg mov adc scas push jb push (bad) jmp call cwtl cmpl roll mov fucomip lcall sahf insl jne xchg xor pop push push ss lods rorb call into in gs (bad) add lahf sub mov mov nop mov sbb popa call push pop add in fucomp mov icebp mov lods stos and sbb loop shl xlat js mov xor call mov sub add pop repz adcl push out xlat (bad) ljmp cmc lret je and fsubr push aam push (bad) jle jo pushf pop sbb (bad) (bad) decl fisubl xor or sub jae dec push lret mov icebp and aaa mov gs mov or sbb push (bad) (bad) std push (bad) aaa leave dec or not sub jecxz je gs mov sti cs icebp js or ss push leave or xchg jmp lds inc das jg (bad) (bad) decl outsb sbb (bad) mov test sub jg adc or clc call std (bad) call xor mov in or xchg cmp xor pop imul ljmp hlt incl fsubs dec pop (bad) bnd push and and loop push pop jg (bad) inc mov lret mov jb add sbb and insb mov push inc aaa fildl dec adc popl lods mov cld jmp mov mov jno lret or cmp lock (bad) (bad) dec scas mov insl xor xor aam movsb and jae repz and ljmp and push push arpl (bad) js sbb jp outsl add ret out ljmp push repz lret roll test xor sub or push insb push mov xor cltd gs or pushl mov jp jno notl fs jns push adc cmp outsl hlt lcall movsl sbb cmc test adc mov sbb (bad) call jg aad mov mov sub cli mov add jecxz test adc jbe lea ret loopne cmc pushl scas mov int3 icebp repnz xchg dec inc push or decl sub hlt imul das mov inc cwtl sub out ljmp popa les adc ss (bad) (bad) (bad) jmp js or xchg (bad) loopne (bad) loopne jnp mov stos jo sbb sub sar aaa mov push lahf fst sbb into (bad) (bad) (bad) (bad) cmp loopne push mov mov mov adc mov and imul popf jmp cltd loope push and or (bad) jl (bad) incl cmpsb mov push dec lea fldcw xlat enter jecxz js (bad) (bad) incl enter cli lea stos lret mov xchg xchg jge (bad) in bound pop loopne mov pop xchg xor std xor fist (bad) aaa cli lcall repnz lret pop (bad) gs scas shl xchg push adc mov sub sbbl jg incl decb dec ret fisttp cmc ss sub mov sarl (bad) fnclex adc hlt cmpsl xchg push (bad) rolb jp adc pop leave (bad) fucomip fistpll ja inc push xchg sub lods (bad) (bad) jmp repnz mov repz rcrl xchg push xorb divb jecxz xchg (bad) inc (bad) in sub xchg out jo test inc test movsl xlat sarb jg or or loop mov pusha out add ljmp cld fnsave adc sub call sub adc sar (bad) pushl addr16 movsb out xor cwtl xor push cmp enter pushl mov sbb in push xor add jecxz mov sub (bad) jns and or mov adcl jmp pop bound ja popf js mov xchg jle lret insb cs pop jecxz,pt (bad) adc xchg in (bad) lcall pop outsl push cltd cld loop pop cld (bad) pusha gs aas inc mov pop jmp cmc (bad) mov adc inc and stc sbb je,pt inc out mov (bad) lcall and divb jle push xlat cmp cmp sar call out xchg mull ss (bad) xchg sti xchg or push xor iret pop fistpl mov outsb lret lock jmp movsl iret lds jbe pushl sbb cli repz mov push fidivl pop pop or call cmpsb stos cmp cs sbb aad push jmp aas mov xor ljmp fimull cmp push (bad) push cmp test outsl mov adc daa adc sti fist add fwait insl xchg push cmp testl xchg (bad) cli jg push jle pop test bnd fdivs (bad) (bad) (bad) (bad) aas fcoml adc and subl add test add dec cmpb ljmp ret rclb roll sarl ljmp (bad) or loope lock outsl loope rcl inc or js jno imul cmc xchg (bad) divb sti dec sub enter pop idivl jmp push xorl sbb (bad) mov or lock lret pusha xlat test lret xchg clc (bad) (bad) fnstcw je dec das and addl mov incl cmpsb add mov cmp xor jmp push (bad) lcall (bad) idivb push popa mov sbb add data16 hlt int (bad) (bad) call add fildl in mov fdivl xchg rolb push cmp push ljmp int mov test lcall cmp xchg orb mov push ficoml insb ljmp inc dec dec jmp mov leave fcoml clc mov pusha mov pushf xchg or pop outsb jne dec lcall push pop sbb adc and decb daa jb movsb xchg inc jl out xor xchg and push call stc loopne cltd stc sub pop adc cmc imul nop mov hlt pushl clc and (bad) iret loop adc in sbb cmp lds insb add sbb rcll jns ljmp cwtl xchg xor lret repz inc lock std mov jmp xchg addl bound lahf mov das cmp test rcr and mull jmp push push test (bad) (bad) dec std les jmp pop sub popf mov ss add sbb outsl icebp pop cli push imul pop movsb adc movsl pop hlt (bad) js adc inc enter fistl xor xor push mov lcall mov inc mov lds nop and jl iret sub arpl xchg icebp sbb and dec push rorl xor fxch sub (bad) fnstsw dec js pop sbb enter adc push enter xchg fucom dec sub mov inc cmp jmp mov mov fwait daa ror pop enter (bad) jg jns jne fdivl add fwait notb fwait lods inc pop outsl hlt (bad) fstpt out sbb pushf (bad) jb mov pop dec stos push mov cmc (bad) (bad) jg paddq outsl call int aas idivb lret enter (bad) lcall mov cmp fcompl fidivr insb popa popa testl add dec (bad) mov (bad) xor add jmp out and call gs stos (bad) idiv decl pop sbb std jmp adc out xchg icebp push cltd shrb mov (bad) (bad) ljmp dec adc iret jb push sub fcomps loope mov and jg dec fldl int pop push mov adc or stos mov cmp push in jle adc inc daa inc (bad) (bad) (bad) pushl push in mov hlt or shll cld xor sahf imul adc sar (bad) (bad) fildll dec lcall aaa fwait adcb popf gs push (bad) jo call (bad) mov inc inc cmp xor jbe pushf mov fstpl call stos (bad) (bad) in lock xor sub push clc cs aam cld call sub clc xchg cmp in (bad) pop ljmp dec adc test roll hlt mov pushfw scas sub pushl xchg (bad) nop jno jb sbb rcll test inc lahf (bad) (bad) (bad) jmp xor scas stos repnz sbb and outsl ss decl sub addl ret fnop les outsl outsl cld push ljmp sub test fs push pop cld pushl das sub mov pop imull sti jnp dec mov je (bad) (bad) pushl mov faddl fwait mov dec add rcrb mov call es pop clc inc insb mov in (bad) (bad) decl int push jae dec scas sbb cmp lret jge in jmp aam (bad) (bad) decl jne shll mov adc movl fist insl (bad) jbe clc (bad) lcall es jg push scas xor jmp cmc sarl rolb adc hlt (bad) jmp lods mov cmp pop xchg cmpsl incb xorl lods pusha push rcrl mov inc mull push pop sbb cmpsb iret mov in adc scas fst or aam call aaa test mov ljmp aam push popa sbb (bad) (bad) lock (bad) lcall ljmp push adc sub mov pop ljmp das adc adc cmp mov outsl (bad) (bad) mov xchg arpl gs cvtps2pd push jne xor pop mov xor lock or mov mov mov jno mov push adc fnstcw mov jb jbe push jno dec push pusha call fadds les jmp vmwrite incl (bad) jg jb jo cmp fldcw stos or pop (bad) (bad) mov stos fisubl fidivl ds scas js cmpsb adcb (bad) lcall mov outsb xorl jg mov inc addl mov (bad) incl sbbb push xor lcall add arpl sub sbb dec mov lea addr16 (bad) add lea and adc pushl pop mov xor sub (bad) mov (bad) jno sti aaa loop aam sahf push push mov scas mov mov lds jg loope pop popf mov and lods mov inc lods (bad) mov dec fdivrs fldl lea out std mov fwait cwtl lds or les je shl shrl inc mov pop test adc imul sub add push or lcall test pop sbb push cmp pop int add dec mov inc mov mov (bad) imul lret push mov data16 mov push xchg outsl std or outsb cwtl fstps leave pop mov je or outsl lock mov pop mov sbb sahf rcll pop cwtl roll mov (bad) jnp js jno cmp call ror mov lcall (bad) mov insb mov dec inc adc and sub (bad) or xchg mov jmp cmp sub mov xchg push mov or (bad) jmp js cli sbb push repz adc out xor icebp dec mov rcrb inc lods jp lcall xchg pop lea xchg (bad) xchg jecxz (bad) (bad) (bad) lcall mov repz cmpsb movsl lcall adc and xchg dec push ljmp cwtl decl (bad) mov (bad) xchg imul std cmp or in xor dec mov xchg sahf shrl subl sbb mov sub push pop lea sub (bad) negl fild insb movsl (bad) (bad) (bad) cmp int3 jbe jbe dec fidiv es jno fimull mov mov faddl and pop adc jl add (bad) (bad) lcall fiaddl into lahf rorb xor hlt jle or ror lods jecxz stc call incl cmp clc sbb xchg int3 push lcall (bad) (bad) (bad) lcall (bad) loop ret lds cltd xchg out push popf dec icebp dec sub mov adc outsl hlt call aam jmp jae and add xchg mov test jb jnp hlt je add sbb inc push fucomip lcall mov pcmpeqd add dec fstps pop (bad) (bad) jg popf xor push adc xlat adc in dec push sahf shll (bad) jg sub add in mov test mov ss jle (bad) incl mov popf xor push sahf cmp in pop xchg popf and or ljmp ljmp loopne rcrb ja inc push loop jp das and cmc (bad) call sbbl push test rclb jbe loope popa mov cld sbb fucomip or mov mov push (bad) push and mov (bad) stos push das xor xchg sub rol (bad) (bad) ljmp or (bad) scas lods ret pusha cmp pop mov (bad) int push mov lret dec mov imul fmuls or sub lds sub dec xchg sub ljmp call leave arpl int cmc (bad) cmpsb push (bad) mov (bad) incl xor mov mov lea (bad) cmc std aam xchg mov cmc cld pusha cli movsl ljmp cmpsb pusha aaa pop loop repnz mov jp mov add idiv xchg out lds mov push das sarb mov (bad) (bad) decl lods (bad) sti lds sbb flds jbe or sbb stos xor cld pushl jg faddp lcall mov fimull jecxz stc jno mov (bad) sti sbb mov sbb (bad) adc loop adc xchg cmpsb mov xor sbb repnz mov stos jae ss dec jle adc (bad) sbb inc fnstsw stos lock hlt xchg rorl mov roll or ds mov test out adc add adc lcall aam insl push test rorl stos rcll sub (bad) (bad) decl cmp (bad) mov (bad) sbb xchg dec and dec or pusha jne enter push cld inc mov push imul add push pop outsl imul sub test clc cmp ljmp push outsb mov adc sti pop adc push mov repz nop jmp outsb aas (bad) inc incl clc leave jb mov in test sbb jg mov pushl jle and mov jp xchg mov ss cmp arpl (bad) ljmp ret test mov std sub lret cmp arpl sbb (bad) jo (bad) aad test pop and sbb adc xchg outsl cld aaa (bad) shll ret iret mov xor mov xchg (bad) jg jae xchg cmp adc cmp mov ja or (bad) (bad) ja outsb mov insb daa lock cld xor stos dec xor dec nop enter cmp lods mov xor fsubrp mov adc addr16 lock in fstpl rclb ja inc mov sbb cli clc mov and inc popa cltd mov jmp decb popa and xchg push sti hlt es insb mov lods test cmc xchg xchg (bad) (bad) cmp mov hlt jnp testl popf jmp lcall inc dec and mov stc mov inc sti xchg js,pn mov mov pop cmpsl pop pop ljmp data16 mov lea sub xchg mov (bad) lcall shll fs je pushf inc gs dec (bad) pop push fwait sbb aaa and (bad) inc hlt cli mov or arpl out or add xor xchg xchg test adc call xchg ja fwait jg (bad) call xchg scas adc xchg jmp cmp rolb or (bad) (bad) call call ror xor fstpt or add fwait scas or test jbe dec sbbl fs jg dec jno (bad) cmc jne lds xor in pushf inc cmp adc jns and mov (bad) fmull push adc pop in sbb outsb ljmp std pop aaa shrl clc cmp bound in decb cmp pop cmp pop test lcall xchg pop fwait dec jne mov mov mov pushf jno fidivrl jne mov (bad) inc in fsts in lcall (bad) incl inc daa jge mov stos dec pop stos scas mov out mov mov sar push ljmp mov jno mov jge or mov push outsl icebp (bad) ljmp inc mov sub (bad) into inc jg insl stc sarb xchg lret incl sub loop push jl icebp outsb and insl aaa popf stc pop sarb jecxz popf (bad) (bad) jg outsb xor dec js (bad) mov (bad) push repnz push fisttp (bad) pushl fxch jno int3 add hlt sub sub (bad) inc mov add dec iret dec notb cmp into mov lahf das cld lcall rclb sub jns inc ljmp add push addr16 dec jbe jmp popa test and cmp mov out subl cltd mov pop inc dec or (bad) jmp lret or push out mov loop lret pushf sub (bad) (bad) (bad) mov jmp aaa out iret or mov fdiv (bad) (bad) (bad) pushl popl inc aas aad test mov sub enter std fucomip push or xchg mov pop xor (bad) mov push leave push sti mov dec clc pop in jae xchg stos jge mov loopne inc out jle xchg add inc and scas cltd cmpsb and ljmp (bad) and mov add dec add cli decl sub jb add outsb std jae sbb mov sbb lea lock dec outsl mov sub in cmp aas aaa cli (bad) (bad) mov xchg mov (bad) int3 jl add push imul sub pop dec cld (bad) inc dec mov jmp xlat repz mov adc ljmp cld adc (bad) outsl mov jecxz xlat add lds out clc (bad) (bad) fistp divb mov or ret jle andb jmp xchg clc or test cltd dec push push lds push js add ret push xchg (bad) out ret pushf sbb mov call js cmpsl mov mov jle out adc daa cmp ret add call adc daa fucomp iret xor aaa mov dec std (bad) js loopne nop fbld mov dec insl test pushf mov jnp loop movl or outsl fisttp mov test incl fwait jnp xchg xor inc mov (bad) ljmp mov pop test xchg into jle icebp inc and scas arpl adc (bad) call in aas imul jb adc and je sbb jnp movsb pushf add pop dec fnstsw call lret add repnz insb sbb (bad) (bad) out cmpsb ftst inc cwtl imul or add aad cld decl mov repnz dec push dec in jmp cli (bad) jns sti fnsave bound popa jl mov mov push decl jge mov sahf (bad) insl mov es cld sub mov (bad) incl cli cmp iret mov mov and fidivl call xchg xor xor je decl mov fs es cmp andl fidiv xchg push (bad) mov (bad) lcall les in mov and ficom loopne dec movsb mov push call mov bound push outsl jg pushl fidivrl xor subl repz lods (bad) call mov aas fistpll and hlt or (bad) (bad) jg iret dec add cmp and inc and dec mov gs dec jbe lcall jg inc test rorb scas pop add dec jne dec outsl push push sub dec (bad) (bad) (bad) pushl popa and push push lods sahf sbb jae sbbl mov inc jecxz push lret fnstcw inc pop clc (bad) ljmp repnz shrl (bad) fstps pop jne cmp (bad) call cli or and pop les rclb in pop mov (bad) ljmp (bad) mov pop jne xchg sbb jno jmp sahf xor mov jno push pushl xchg adc jnp push dec xchg (bad) xchg repnz mov or in movsl jmp (bad) mov call lods add insl lret test sbb sbb loopne pop fucom icebp pop pop nop test inc fildl lds or mov sub mov push inc cmp mov (bad) aad lcall (bad) data16 fimul xchg fisub enter jle mov sbb js call stos loop add iret inc ljmp push (bad) (bad) dec dec loopne insl out pushf mov jp inc movsl nop jp stos pop stos int3 arpl mov cmp dec mov or int3 xchg stos mov sbb scas inc jae (bad) call ret mov nop xor pop in aas hlt mov (bad) inc jne jns aam adc ja gs outsb xor (bad) insb imul xor inc push call inc int iret cmpsb inc xor aaa xchg aad popf push xor dec sar add jmp (bad) cmp mov clc push cmp jecxz nop mov xor mov sbb sbb addr16 (bad) rcll mov or xchg mov (bad) icebp (bad) (bad) jg (bad) cmp sbb and bound jle or mov (bad) call clc pop fldcw repnz gs stc cmp cmp repz cmp (bad) (bad) jg outsb sbb mov jo or aam xchg pop fwait pop pop (bad) icebp out or (bad) (bad) incl jecxz loop leave push xchg push scas jg enter jp (bad) insb fstpt push cmpsb inc outsl mov test mov stos mov ljmp icebp mov aaa xchg cs xchg insl sarb icebp push sbb ss movsb jle (bad) (bad) (bad) incl cmp mov push divb into lock jo push xchg sti xorl (bad) (bad) incl mov addb mov sarb aas mul gs mov pop call sti ja sbb in test mov leave mov (bad) and dec mov daa push sub dec loope jae mov stos sub mov addb daa and mov movsl (bad) call xchg and push and mov xchg cmp inc mov pop ljmp adc sub ss cmp (bad) jle sbb es out jmp sub pop sahf fisubr (bad) (bad) (bad) ljmp pushf out stos test icebp mov mov ja adc push mov test xlat sahf out scas ret sbb std fsubr xchg sbb add mov sahf fs pushl sub fnsave movsl mov scas or mov mov inc or mov pop mov mov std push push push (bad) (bad) (bad) (bad) push and repnz lcall sub xchg ret arpl and pop ljmp clc int or push divb rorb adc mov (bad) mov (bad) cld pusha inc sub stc dec mov bound inc dec sub clc xor jne jle jmp (bad) (bad) dec nop js int3 leave jle or pop mov negl push idivb lahf mov stos inc ljmp jge mov stc inc push sbb call (bad) mov imul jecxz xchg mov jo inc inc out add (bad) (bad) decl mov ret push sbb pop test (bad) jge cmp movsb xlat cmp ljmp ffreep stc xchg lret cwtl xchg mov jbe mov pop inc mov (bad) (bad) cmp xlat enter jecxz cmpsb or test cltd adc clc sarl mov cmp imul mov es adc push inc rcll add (bad) ja cli or add dec (bad) inc or imul mov decl sub cmc pop fcom adcl (bad) (bad) (bad) ljmp aaa sub sbb leave sbb sti xchg das stc adc in inc adc (bad) lcall xor ficoml pop jb and (bad) inc xor (bad) (bad) call mov dec sbb popf mov movsl in dec out movsb stos rorl xlat pop (bad) (bad) (bad) incl jne sub inc icebp movsl insl outsl fcmovnbe scas mov jns sbb idiv (bad) in dec xor in leave xor (bad) jmp stos xchg lahf jmp loopne andb xor and call sub call sbb cli lcall addr16 roll adc or incb (bad) out (bad) pushl pusha movb dec fcompl dec movsl iret cmpsb fiaddl movsl in pop out sub pusha adc adc imul outsb add mov pop push mov (bad) (bad) ljmp mov pop push (bad) and test bound xor push je movl xorl mov jge cmp addl or sub call std (bad) fwait dec jo pop rorl out sub adc fs call cmp fadd sahf lods es popa mov dec lods call fild push mov popa out mov std lret das jg in iret (bad) rcll sarl daa pop push mov (bad) mov xor (bad) adc push xchg or inc (bad) decl les outsl add xchg add mov aas add push or inc call incl push lret loopne mov add xor ljmp lcall je sub ljmp and stc ret ljmp (bad) lea xor jb adc repz push icebp pop scas (bad) (bad) sahf lea mov (bad) mov add jo loop mov pop sub jne sti test pop xchg push jg (bad) ljmp xchg add lods jb push xor mov push or dec pusha inc cwtl mov push mov fisttpll xor or scas mov mov lock sahf std lock lock (bad) (bad) inc repz lods cmp call sbb or (bad) fisttp mov ljmp pushf dec aad mov jp push jle jmp jecxz cs or (bad) mov pop xchg mov pop cmc xchg cli add sub clc mov sbb xchg pop loop xor lcall mov mov clc mov mov xchg icebp inc out mov pop jge imul pop jmp pop mov (bad) pop leave mov ret and cli sti and std (bad) mov or dec hlt ret arpl mov mov add loop mov mov (bad) insb ljmp xor mov sub lock sub ret cmc cmp mov pop clc call jbe add inc jl dec scas rep icebp mov (bad) hlt outsl lock jnp adc pop dec repnz aaa sahf jne arpl rorb jg out mov sbb pop adc pushl loopne dec jmp cwtl testl (bad) jo sub std pushl js dec ss and ljmp add (bad) ljmp sub bound inc jecxz outsb (bad) xchg movsl inc sub xchg push jg sub fsts jns pushf cmpsb cmpsb inc test in mov jb ss and dec out mov mov fistpll dec (bad) daa in sahf loop cli dec cmpsb loope add pop clc jg xchg int (bad) mov divb fisubl imul mov (bad) jg ret stos inc imul add fnop jg addr16 ret imul call (bad) (bad) (bad) inc ja jne jmp rcrl or xor sub xor xor sub lcall idiv decl inc out insb cmp xchg xor mov push cmp addb adc les out and (bad) lcall cmp and jmp cmp repnz lahf push fistp adc (bad) (bad) pushl and sub pop cmp dec sub mov imul adc ljmp lret xchg pushf pop mov mov add into lcall adc (bad) (bad) fsubrs mov mov loopne aaa jmp dec cld nop jge mov std (bad) (bad) push push and orl mov xor std mov imul mov pop xchg pop or (bad) decl add lret outsl mov xor sbb add loope lcall (bad) (bad) out jb loopne sbb outsl sub pop enter aad pop dec aad sub (bad) (bad) jmp shr mov jge cmp dec sahf jl sub xchg xchg loopne loope push outsl mov clc adc pop mov (bad) cli dec clc jge fs pop test test mov (bad) call xlat movsb dec ret ljmp leave add fwait ud2 fnstenv int3 cs jae push mov cmc movsb dec and cmp ljmp lock mov mov adc addb xchg rcr pusha jne call dec and mov or movsb stc and (bad) call jmp jle ss or pop fldl mov (bad) xor es (bad) sbb pop pop arpl cwtl and out and ja lea (bad) (bad) je mov rcr push call jbe cmp divb and decl sub (bad) mov scas push test dec dec xchg mov (bad) (bad) (bad) out fcomi ret push lods je ret mov frstor inc icebp (bad) jg inc (bad) insl adc dec sbb enter cld dec push stos aaa in ljmp repz mov or pop std (bad) (bad) (bad) ljmp lea mov jg add push sub data16 push lcall iret rorb pop mov or imulb outsb xlat clc (bad) (bad) decl jns adc jge lods loop mov and stc push das mov push aad (bad) call mov mov scas jno pop xchg int pop xchg push enter lret (bad) jmp mov outsl dec mov lods xchg inc mov fwait dec (bad) (bad) decl std ss lds es lea mov rol xchg dec sbb cld lods in adc (bad) jg outsb stos fadds sbb clc push ss (bad) push std sbb (bad) ljmp shll bound sub call out pop (bad) (bad) call stos cli cmp lea cmp xchg jle loope and mov (bad) (bad) (bad) aas mov inc xor lods insb mov add hlt test out sub push or (bad) (bad) fdivr cltd iret sbb sbb cmp movsl pop scas pop jge dec pop loopne dec scas lods lcall cmp jae sahf add cmp adc inc mov nop push mov push jb iret xor (bad) (bad) xor jae push lcall and (bad) (bad) call jb pop in (bad) das mov fwait in loop loopne jecxz call pop push clc (bad) incl cmp lock out inc mov inc or aaa scas fcmovbe fistpl std xor dec sbb mov (bad) (bad) jmp insl loop sbb loope cli jle std add imulb mov (bad) std insl lock stos inc in inc xor fs fcmovne lea pop push or int3 test dec xor mov mov incl xchg (bad) lcall stos bound inc and push gs push xchg movsl icebp (bad) (bad) lcall cmpsl dec pop cmpb xchg out pusha inc aad adc pusha js inc icebp push (bad) (bad) pushl pop test fstl cmp jbe fdivs mov ror (bad) (bad) (bad) (bad) call (bad) aam cwtl mov xlat pusha aam testl imul mov es push mov ret cli mov leave outsb cltd inc ret push fs mov mov (bad) pushl cmp sub icebp dec ljmp aad clc inc or cld (bad) (bad) jg add cmpsl adc xchg push arpl pop stc or pushf pop xchg or call mov jno and and imul lods or xrelease movsl fcomps (bad) decl push ret add (bad) enter jo mov sbb (bad) jg aad pop sahf lods mov int loop movsb and sbb push pop call rep lock bound push daa stos clc (bad) mov sub add sub cld (bad) lcall int or nop ror es push inc movsl aam aaa mov and aam das inc or xchg push xor (bad) (bad) jg lock mov pop dec stos push fs mov jns sarl cs fcoml (bad) ljmp in (bad) sbb data16 xchg or push dec mov cli mov jg mov dec xor adc fsub xlat cwtl xchg jge (bad) jg fldt dec test xor adc clc (bad) (bad) mov jmp fstpt cmp adc add mov (bad) call data16 pop lret scas add js,pt mov inc xor lods fs jmp ficompl test call lds js cmp xchg mov or and adc adc jmp jne jge out inc or arpl mov sub arpl sar outsb push mulb dec or fcomps pop lcall (bad) (bad) ljmp sub mov (bad) xchg push stos outsl fwait or and (bad) (bad) jg xchg enter outsb jbe lret js or shrl sub hlt call push nop dec das jae sbb sub ret ret mov es push (bad) (bad) (bad) jmp stos xor das clc push in gs or mov mov jns stos or cmc insl cmp xchg pop loope (bad) loopne sbb adc movsb (bad) lcall push (bad) (bad) push sahf das inc push jp push mov dec mov mov fistpl pop xor je je push (bad) jg aaa ret subl mov and push imul add fnop and push lods arpl (bad) jmp jb clc int cmp int or in aam cmc (bad) mov jl std xor clc scas (bad) in fidivrl mov cltd outsb int stc mov xor imul sub clc mov sbb jp inc fdivs gs cmp (bad) (bad) fimul aas sub fdivp int3 sub adc mov in cli shrl pushl cli mov cmp repnz in push clc dec fnstsw in fisttpl clc incl pop mov xor mov push pop clc std xchg pop (bad) stc mov push mov dec jle imul mov jmp adc outsb jmp (bad) pop pop loop pop cltd sub daa pop in fldcw dec and (bad) (bad) or and xlat fdivl mov pop inc (bad) dec lret sti leave mov sarb mov (bad) mov jbe dec jmp inc ljmp pushl sub (bad) sbb ficompl jl lods sub inc in ljmp dec mov cli out lods pop sti mov xchg aam out std call les xchg adcb jg mov mov std mov out daa aad pop mov aaa inc push pop out sbb cwtl adc jnp les ret sti pop fcoml (bad) ljmp fnstcw mov test inc test loope loope push cli (bad) decl xor ss pop mov iret xor (bad) (bad) jg das mov les push in mov push (bad) pushl (bad) insb into push cwtl in pop aad leave mov and mov jl jmp (bad) push sub pusha daa dec dec fcomps xor xor bound pop push add push mov adc xor mov mov sub (bad) loope mov mov xor ja pop stos std sub jecxz mov lds push add (bad) xchg rorl ss jno xor xchg cld inc into int3 lahf das (bad) insl insb xor and mov pop cmp mov fdivs fcmovu mov pop sbb scas fisubr (bad) mov mov sbb inc xchg sbb xchg and mov adc stos adc (bad) (bad) call (bad) dec idivb jmp xchg jb or cmp mov inc call add cltd dec arpl bound and xchg cmpsl adc decl in mov jns mov fdivl xchg jnp fbld push push mov jne adc mov push or jg (bad) jmp mov fmuls xchg outsb dec cmp cmp (bad) incl mov arpl popf sbb jle adc negb aad inc (bad) (bad) decl pop mov and inc arpl loopne push and aaa (bad) (bad) ljmp imul pop xchg movsb pop out adc adc sbb jnp (bad) (bad) mov sub inc xchg lret test sub shrl mov mov or dec inc icebp lahf xor fnop (bad) jg movsl fsubp imul fwait mov adc mov adc mov (bad) (bad) decl lahf outsb adc gs aas push fildll enter adc int3 je push jno decl decl (bad) seto shll pusha (bad) aam outsl adc lret fisttpl inc cmpsb pop fs jmp jecxz mov (bad) (bad) (bad) lcall jle sub dec push je xor xchg decl jae enter cmp cmpsb push xchg clc jg icebp roll mov dec pop inc jl (bad) lcall xchg daa shrl dec mov (bad) cmpsl or inc or mov clc movsl orl pop add jp cli (bad) (bad) fildll add mov movl inc cmc cmp repnz cmpsb (bad) pop and pop mov mov and sahf mov out push pop hlt cmp mov call or xchg push outsb xchg jle mov dec xchg jge outsl jg roll das mov mov adc (bad) lcall test xor fwait mov mov (bad) mov fstl addr16 push sub lretw mov int nop cmp xor sub out sub and xchg mov (bad) (bad) (bad) fdivrs mov out mov dec xchg aas push loopne (bad) aas sti inc adc (bad) icebp insl mov mov mov push sub loop incl sub sar test arpl sub decb pop loopne imul adc stos fucomp stos out push xchg imul jmp jnp mov dec jle xlat dec aam stc lret jle lcall das mov add js leave (bad) add clc (bad) pushl dec jecxz fnstsw xchg cltd std scas lret stos pop ds push repnz (bad) (bad) ljmp jge mov pop or mov inc sbb ret push push clc dec cmp (bad) jge xchg sub das negb pop fmuls pushf xchg (bad) decl and and jnp jnp repz std shrb scas cmp push arpl daa push and in (bad) ljmp rorb cwtl imul femms xor std cmp stc inc (bad) (bad) (bad) ljmp jno jo fdivrl (bad) jle push sub fnstsw dec mov daa lahf lret ja cmc (bad) call stos gs adc or inc repz xor mov jmp stos xchg movsb lcall scas xor mov push fiadd aas test lock clc sub mov pop cmp outsb leave push mov call and push daa sbb mov movsl popf test stc notb (bad) (bad) (bad) pushl mov mov xor adc mov mov int mov push cmpsl pusha jg clc (bad) push (bad) sbb ror addr16 add ss lds jnp pop jno incl fiadd cli hlt dec jne pop mov jg lods std cmpsb inc mov out push fst jne popa je mov test cmpsl (bad) popa test bound dec lahf cmp ds and add adcb dec or mov add and les xchg cli (bad) lcall add fwait sbb arpl pushf dec push fimul lods ss fbld (bad) (bad) (bad) jmp lahf adc mov and add jp sub mov lcall call orl adc mov movsb mov imul xchg adc xchg add shrl mov fs stos jb inc (bad) mov ds jp bound mov ljmp std jmp mov add lods mov std ret mov mov decl add jl pop pop inc fwait pusha cmp decl mov fstps pmullw xchg jb xor dec fimul lcall xchg and sbb cmp mov sub movsb cmp decl xor fist imul fisubrl (bad) jmp inc xchg push js or pop outsl sarb inc jb sub call inc sbb pop cli sbb aas in test (bad) (bad) (bad) pushl dec rcrb mov cmp xor mov out out incb nop icebp scas pop jg dec mov adc push rcrb lea outsl add call sub push fnstcw inc xchg mov (bad) (bad) call frstor fcoml test loop push inc or (bad) mov imul mov push aam fwait in arpl leave in dec xor (bad) (bad) ljmp sbb sahf pop sbb or mov xor (bad) (bad) pushl test xor pop mov bnd cwtl sub icebp push fucomip adc pop stos xor mov inc iret jge or add mov and std (bad) jmp mov cmc es xchg pushf out dec dec mov insb (bad) incl cmc cld out dec push xor out sub (bad) (bad) adc (bad) loopne or pushl test jmp pop push inc cmc and je test repnz and bound repz ret in xor and cli jmp cmp mov jnp lea (bad) lcall or ret movsb cld inc in sti pop in test das and pop (bad) outsl ljmp xor (bad) mov mov push push sbb pop sub add cli test mov xchg stos fs dec push or adc insb (bad) lcall (bad) (bad) jge jmp adc add xor test jmp inc mov fs aam xor aam arpl pop jl imull dec sub push push (bad) (bad) (bad) (bad) jns in aam enter or cs inc push xchg bound (bad) pushl (bad) outsb sub or or (bad) jns pushfw push add in lock (bad) jmp loopne or dec mov fs inc add aas sbb fsubp ljmp mov outsl push sbb lahf cmp mov call xchg adc movsl ljmp cmpsb enter loop outsl icebp aam mov jne nop push jl adc pop add sub mov ljmp cmp cld mov push jnp repz mov hlt (bad) mov inc xor push cmp sbb and bndstx enter xchg dec adc dec jb dec push stc shrb xchg clc xchg (bad) call popa mov ret mov mov (bad) call std ljmp push xlat notb push repz adc ljmp mov jne imul xchg data16 sbb popf loopne hlt fs (bad) decl xchg loopne xchg xchg push fisub pop fwait pop in call sub cli (bad) (bad) inc repz push fldcw sub shl xor mov js mov (bad) lcall jg clc dec in push sub push aas jae mov (bad) jg cwtl icebp ljmp fs jb es sbb lcall jg (bad) lcall xor scas adc mov mov cvtps2pd (bad) fild mov mov or fwait sbb (bad) call aam stos xor out movsl fimull pop scas sbb lcall dec ret (bad) pop jnp mov mov pop call aas pop xor sbb nop xchg mov sub mov xchg mov jo jns popa inc xorl push movsl jb es test hlt lcall out cs icebp jbe pusha or jmp (bad) push fwait dec addr16 (bad) es sahf inc je mov jae add in jecxz (bad) fucomip jg jp cmc stos push cmpsl es clc insb inc push mov push dec (bad) (bad) lcall mov dec xlat xchg addr16 add leave dec inc jnp test push popf mov xchg mov imul adc push stos and pop sbb into hlt movaps sub mov add aas iret mov push mov cmpsb push cmp and sub pop add (bad) jle out popw xchg dec clc adcl inc adc (bad) ljmp mov push or and sti xchg (bad) call dec mov inc cmp dec jo jge inc add inc (bad) cmp jb cmp cmp call lds mov mov pop out jbe dec std aam in fstps push (bad) (bad) (bad) incl xchg pop insl jb call xchg push xchg mov outsb cs dec mov pushl jbe jge xor cli jns out mov shrb or lcall insb hlt gs xor cmc fnstenv (bad) (bad) push aad lds xchg and jb cmpsl lds cmp sbb (bad) (bad) call inc push push or xchg mov add ja call cmp das pop sub movsb cmp pop jne roll in pop push ljmp test leave stos jecxz or jno dec add push mov inc adc movsl xchg push or mov (bad) (bad) (bad) ljmp dec push dec icebp sbb mov enter loop arpl fs popa dec xor (bad) (bad) (bad) (bad) pop inc xlat cmp and sbb fiadd adc inc movl clc aad xlat and mov jo sbb aaa cli outsl cmc xchg repz inc xchg mov fwait or or dec add push xchg out fisttpl std jno pop (bad) call movsb or leave popa repnz sbb call jle mov (bad) cli fsubrl cmp je decl out jbe ja sbb enter mov and loopne imulb xchg or aam in inc push cmp loopne mov or movsl insl push fsubl fs les push cmp pop movsl jmp outsl (bad) jmp das mov mov mov dec call pop shrb lret rcrb push and lea jmp xchg (bad) and bound jb pusha addr16 and pop loope jmp add (bad) decl fsts rol sub adc mull mov xor out xlat mov clc or std lcall and adc bswap mov lock (bad) (bad) jmp std mov in jl outsl mov ds shll adc inc aas (bad) jne imul ljmp sbb ret mov movsb lods outsl lock and mov xchg mov aam dec (bad) hlt jle aam adc pop hlt inc xchg scas leave xchg xchg in aaa push (bad) (bad) mov sbb es (bad) inc sarb ljmp mov fistp jl jge sub sarb aaa icebp mov clc (bad) (bad) (bad) pushl negl pushf lahf mov es insl fidiv sub stos (bad) (bad) ljmp sub inc add cld movsl fldcw (bad) jg sahf insl movsl xchg in lret dec pop out jo (bad) fmul adc jge jbe push cmp cmpsb or pop stos pop test cltd out inc (bad) mov ds cld add jb orl or lea pop xor sbb (bad) (bad) cmp ds nop add jg mov and bound arpl fcom (bad) ja lcall jmp jno std add jge bnd pop scas outsl cld sbb (bad) (bad) incl insb mov sub lret cmp sarb cmpsl jb ja jo test stos mov cmp stc pop pusha std xchg mov imul pop fistpl (bad) jl sti (bad) call adc (bad) xlat jne shr in cs call pop aaa push mov popf and sub movhps fsubrp cmp or lock xorl jns xchg or (bad) dec fsubp push cs mov stos mov rolb sub xchg adc xor (bad) fildll pop mov outsl dec fs rep lretw mov inc cmpb pop xchg das lods pop inc ret rorl jb pop cld incl push push add repnz in inc xchg hlt sub inc xchg ffree push pop stc sub jo lods mov add (bad) ljmp daa xchg push testb push xchg fcmovnbe add cmp lock fisub add lret pop mov decl aad mov fsubl dec mov aaa sub cltd add in lock jg mov dec push sbb fldcw pop in into mov fcmovu fdivl and pop call xchg xchg lcall pop push or mov cld (bad) in and push dec xorl sbb mov xchg push fisubrl (bad) jmp cmovl out lahf push xchg mov xor push shlb es push and push roll jle xor (bad) jmp repnz adcl xchg mov and fcmovnb sub call cmp push fmuls push ljmp mov (bad) (bad) out add (bad) mov mov mov cmc icebp mov cmpl incl ret cli xor jnp push sbb jl cmpsl jns bound cmp sub (bad) mov imul loop ds pop jg popf mov imul inc cli (bad) (bad) call fmuls pushf cld test shlb cmp ja lds xchg sti stc jg (bad) (bad) fistpll test dec sahf sub cmpsb ds xchg fs adc lcall cld dec add mov (bad) pop pop pop (bad) mov test int lret dec pop jl call clc decl ljmp mov mov not jmp sub lcall add or call std loop sub jle hlt (bad) int3 inc in mov (bad) (bad) (bad) call (bad) inc sbb pusha mov test in jmp jno inc (bad) (bad) (bad) jmp add fsubrs nop jno daa rolb adc (bad) push sub cli (bad) iret dec xchg cli inc adc (bad) or pop ss or mov (bad) into test cwtl lahf fidivr mov hlt sub gs xor andps push (bad) ljmp xlat mov outsl into push push mov pop (bad) xor into (bad) lea pushf mov aaa (bad) (bad) mov je jns xchg dec and inc rorl (bad) mov movsb xchg das out jae movsb push lock xchg inc lahf push xlat incl pop cmpsl ss and cmp decl cld mov lea popa mov xchg out in push adc pop call xor xchg mov sub aad aaa loopne (bad) jmp loop out push mov xor or and mov lock das (bad) (bad) (bad) fbld into fwait sub outsb sub mov cmp mov or pushf jnp mov jecxz (bad) sar decl aas in sub add adc push xchg mov out sti in pop in psubd (bad) fbld push repz aad in xlat scas jecxz lods mov nop dec sub call in adc cltd cwtl inc jmp in push (bad) xor ficomp push push xor mov xor fwait bound mov jmp ret (bad) dec pop bts ljmp popf decb mov call lods lea leave push out nop popa mov psraw std test or aas jg fsub inc ja jmp add sbb inc (bad) shrb jno ds cs incb mov imull xor into mov mov test fwait xor xlat and in cmp inc addr16 in cltd into push jecxz cmc (bad) (bad) (bad) lcall mov bound (bad) xor cmp dec or mov jecxz (bad) ljmp pop xorb std jp jbe nopl icebp lahf popa add cli inc jmp icebp adc mov fbstp (bad) (bad) (bad) (bad) (bad) cmp xchg jb lret call imulb ss cwtl js cltd mov jno dec ds pop (bad) jg jmp and cltd or xor xor rcrl xor (bad) (bad) (bad) (bad) (bad) fcoml movsb xorl std xor jge and aam outsl or sbb xchg cmpsb (bad) mov or clc fsubl cwtl in add pop xor push add in xchg clc (bad) (bad) lcall es add repz jae insl add cmc mov mov jg (bad) mov scas bound inc (bad) incl mov movsb mov pushf sarl daa dec dec mulb hlt int sbb outsl jg cli ret arpl movsl push scas bound pop in mov mov (bad) (bad) decl mov repz fistpll sub or (bad) pop jp das jnp testb (bad) mov cs (bad) (bad) pushl (bad) (bad) mov (bad) mov ret out pop sahf pop ja cltd mov jg cmpsb xor (bad) call mov push dec addr16 (bad) (bad) (bad) jg inc xchg idivl es mov shrb jmp rorb loop,pn outsl icebp ljmp lea mov or (bad) (bad) (bad) (bad) jnp pushf cmp repnz (bad) (bad) rcr fisttp lea cld lock (bad) (bad) (bad) aad js inc and lahf jle xlat scas or stos push pop mov fnstsw sbb (bad) call xor daa into leave scas mov jl push cltd xchg test cwtl jg (bad) fisttpl or xor mov (bad) pop pop sub pop cld (bad) pushl aad mov imul in rcl (bad) iret mov sub dec (bad) fsubl mov repz adc (bad) ljmp dec or adc and and aam xchg inc mov or out roll ljmp hlt fstpt dec stc jo inc fmuls jle (bad) jle sbb call inc inc or inc jns push ucomiss scas xchg aaa adc imul fnstsw dec scas int jg ds push xor (bad) adc jg lcall cmovge (bad) lret scas sti xor imul push insl xor cli je ja cmc pop stos xchg mov mov jle (bad) pop call xor popa (bad) mov jno sahf mov in pop movsl or (bad) (bad) fisttp xor inc fwait mov pop sub lea (bad) pushl clc and das push push insl out rcr scas sbb push (bad) (bad) (bad) jg ficomp aad icebp ljmp ds xor sbb dec cmp ljmp sbb add sub dec mov add xchg (bad) (bad) (bad) fisttp xchg inc pop xchg (bad) or stc mov daa nop clc and outsl shrl icebp das std xchg push in mov xchg push popa add mov js std or mov aas pop dec out mov iret (bad) (bad) (bad) jg arpl ja cmp lret lahf add sarl stc mov pushl jo (bad) jmp (bad) sbb add push lds imul adc cmp sub cmp enter cmp sbb xchg cltd pop imul mov call cs sub add pop popf adc xchg ret movsl (bad) (bad) ljmp xor push out sub mov ljmp mov aad (bad) incl lods cld mov push fisttpl rol es pop stos adc test jmp fistpll sahf sbb pop xor adc cmc lcall ljmp mov loop sbb push out mov pop xchg jp (bad) (bad) sub inc call (bad) incl out sbb sub fwait das in cs mov mov xchg cli pushl dec nop add icebp sub cmp clc data16 dec jnp lahf fild push cld cmp cmp cs adc inc test cmp (bad) ljmp mov lcall inc mov rol not out (bad) ljmp scas or stos lret and push push scas adc pusha mov incl xchg fnstcw or inc jbe icebp sbb sub xchg aam je lret sbbl jns out inc or sbb ss sub (bad) mov aaa xchg pop pop jp add sub les xchg cmp (bad) (bad) incl (bad) fist lahf xchg call sub jbe arpl (bad) pop clc pushl loope incb push std cmpsb or sbb (bad) imul test pop pop movsb int3 push aaa (bad) cmp push mov fldt (bad) push mov fwait or les js jg lret or push inc push sti (bad) dec pop mov inc lds mov sbb jb mov lock jl fstp cmpl js nop loopne (bad) jg pushl js and (bad) in dec or dec push push aas (bad) xor jl mov dec cmp mov push std add (bad) (bad) jg cmpsl xchg mov test mov aas mov adc fnop jmp mov rep test xchg fmull lea mov iret mov mov dec mov lret (bad) lods sbb jmp lods andl nop sbb scas mov jecxz and das outsl test orb icebp adc bound (bad) (bad) ljmp jbe lcall push push push call or scas faddl xchg mov (bad) (bad) (bad) (bad) fisttp push stc cmpsl lods sub je jg push push pop mulb xchg mov or popa cld (bad) (bad) lcall xchg mov ret cmp add lahf mov add bound test adc dec pop bound adc and sbb dec xchg mov dec push inc out dec (bad) incl or scas insb (bad) (bad) xlat sbb pop jl pop sbb and (bad) (bad) decl (bad) sbb mov sbb insb cmp mov lahf push or into adc incl (bad) jmp iret sbb xchg jns popf addr16 cltd scas ss inc jecxz pop shrb pop in fwait shrl lret inc out mov test pop aad adc push jae nop sti push mov (bad) lcall ja mov mov fsubl jge fsubl adcl xchg sbb mov faddl leave es pop (bad) leave xchg enter sub pop cmp test fsubrl outsb adc add divl add (bad) or and imul pop popa mov or jp mov (bad) decl in dec outsb daa mov outsb aaa (bad) cwtl not jnp mov sbb and jno in jbe xor nop fwait dec (bad) (bad) mov leave int xchg je push and dec cli sub cmp sub fimull (bad) dec outsb add enter dec outsb push mov out outsl std and mov pop lcall inc outsb (bad) (bad) in ss inc scas xchg pop or sbb pop (bad) imul xchg pop inc out push jb adcl jmp fisttp stos xchg push mov in jb outsb fimul test pop outsb icebp mov hlt incb ficom pushl mov xor and outsb add iret scas mov movsl inc mov cmc cmp push dec sub mov das cld incl std sbb in leave sub jg pushf sbb out arpl lahf (bad) decl sbb mov js or (bad) pop sbb iret cmp mov outsl cmc (bad) pushl or and lahf repz subb decb out sbb xchg cmpsb aad insb lock adc jg std lods stos push mov clc sti or (bad) jg div (bad) (bad) mov jp add ffree lock jmp (bad) (bad) jle shr clc cmp push pop mov aas out outsb out mov (bad) (bad) jg mov mov test inc add cmp adc outsl decl sub sub sub sbb mov popa inc push add sub inc push in mov rolb (bad) jle push (bad) lcall out out jnp mov out int3 decb fsubrl (bad) int3 pop test add add mov or add fadds loopne sbbb outsl inc in adc int3 xchg xchg pop cmp push mov and push (bad) lods or add or and clc push pusha sub add add inc jl sub jle mov mov shrb mov (bad) pop (bad) lods or push xchg push jge jbe loope add add mov call add testl cmpl sbb pusha add in das hlt jg mov rolb mov add (bad) dec dec sti int mov cmp pusha sbb mov adc (bad) xor fildll add lock or rol ds (bad) mov xchg and cwtl (bad) ds sub cld idiv nop fstps cmp or idiv or adc inc fild call inc pop dec inc test (bad) mov outsl in lcall rorb orb pusha xor pop cmpb cs leave mov enter cmp pop call sbbb sub add or sub js fdivrp lods jg (bad) mov push in xchg shrl dec sub adc push (bad) mov test inc dec pop repnz push test mov inc jl popa xor sahf (bad) (bad) (bad) jmp xchg leave mov xchg inc test and pop es and inc (bad) jg incl push and test xchg js cmp mov call xor and dec adc lcall (bad) mov dec xchg xadd and lods or lret hlt xchg dec fs xlat cmp push xchg stc xor pop lcall fwait sbb cld aas dec daa lea rorl or jg stos dec sbb xchg xor enter (bad) std js lret dec xor push leave mov mov lods mov and fs jl jge insb int std (bad) jg pop mov sub lret shr sub jp shlw mov jnp testb mov cmp fwait cmp ret insl test cli (bad) (bad) ljmp inc ficomp sub std cmp or repnz roll jne sahf js test xchg call clc jl movsb inc pop sbb (bad) call mov sub adc jno fwait sbb das (bad) mov cwtl lahf dec lds lock push add push lret lcall and outsl dec jbe dec and pop or test dec mov push (bad) incl mov inc push push xchg fidivrl sub jl outsl cld jmp daa mov add xchg scas dec and push dec mov iret cltd push lock xor mov (bad) dec xor mov cli jmp push and add cmp test notb lcall mov push js and dec mov mov call and push push std lea adc push icebp add push das pop and (bad) (bad) (bad) or and xor dec inc mov adc or bound and (bad) (bad) incl pop divl (bad) or adc mov out addr16 pop push mov int3 sarl adc xor xor test add and aaa insb test (bad) (bad) (bad) call mov call adc jnp out jae mov adc in (bad) (bad) (bad) jg je push cli loop push clc test fist lret bound cmp inc (bad) (bad) (bad) in jecxz push xor scas cmp sbb xchg (bad) jae bound push inc std (bad) jmp and jp xchg sbb and jnp pusha xorb dec push pop pushl fiadd cwtl and inc mov push sar mov (bad) jmp fistpl mov mov arpl xchg dec cld ss (bad) push push xchg in andl aaa add movsl jmp nop adc (bad) mov sub jg jns pop jle bound inc dec push sub mov (bad) mov pop xchg push push or (bad) (bad) (bad) fbstp and cmp and clc dec pop mov cli lds (bad) jg loopne ror mov jb and lods or dec (bad) js add pop aaa loope pop clc lcall adc leave sub or enter loopne cld jmp pop loop adc cwtl mov addb das add (bad) decl adc dec add les fcoms (bad) repz mov and icebp (bad) jmp sti push xor or pop sbb gs jns jp (bad) jg xchg paddusb loop cwtl pushl and lock sbb (bad) and (bad) (bad) (bad) call mov pop sbb popa push jmp xor xchg or sbb push xor std push mov inc bound sbb pop ljmp popa lcall (bad) (bad) (bad) lcall cmpsl or clc shlb and pop pushf push xchg nop or jb cmp insb xchg ret adc pop mov pop jge lcall push sti insb nop cmpsl aas push out cltd inc xor je mov or enter jp mov xchg call push fcomip (bad) (bad) test lock fnstcw cli push or mov (bad) mov xchg pusha lods push push cmpsb lds add mov mov add enter pop cltd xorl sti fldt mov mov mov cltd push call repnz (bad) mov data16 sub movsl shrb (bad) fisttp add push jno inc push dec jo (bad) je insb sub aaa cli pop loopne sub ficomp add mov inc lock mov fistpll xchg inc popa mov cmc inc call ljmp sahf (bad) (bad) (bad) lcall or jg orl out push sbb mov (bad) jg sti stos (bad) pop adc jp cltd mov xor (bad) icebp (bad) (bad) lcall daa ss dec add out pop jge or pop cwtl lret mov adc setbe pop inc ret and pop (bad) (bad) jg dec or or sub cmc mov xchg jns jno mov (bad) decl movsb adc fcoms xchg das loopne fidivl lods mov jno push push daa pop test (bad) (bad) in test fild mov int not dec jmp dec add jno repnz call sub mov mov movsb (bad) (bad) (bad) jmp popa pop or mov and push jle pop nop (bad) ja jl sub imull call incl sub inc cwtl inc mov test cmpsb add std decl cmp mov popa or loop hlt sbb mov enter mov pusha inc mov pop clc sbb inc mov mov movsb aaa and (bad) (bad) incl jge addl sub mov dec adc inc inc add cmp fidivr push insb adc out movsl pop lahf adc inc pop insb imul xchg adc mov les fist ret sbb inc rolb push divb add push fdivs test (bad) pop fchs iret cmp xchg (bad) or rorb call pop add add xchg clc pusha iret dec push call adc popa adc or popa jnp dec cld (bad) mov cmp sbb or gs rcll (bad) (bad) mov add xchg mov push add fs sahf sbbl (bad) (bad) jge push inc in or sahf inc xor (bad) fwait out jge mov or cmp incl (bad) ljmp sub iret pusha (bad) or xchg xor fiadd (bad) decl inc shl add das sub frstor mov and push iret and add add sub pusha mov pushf ret adc fsts aam adc sbb call lds cmp sbb mov inc ret repnz aaa sahf push sub lds loop mov or pushf cwtl cwtl sub add ffreep or gs out jae cs scas sbb (bad) or ss jg add cli jecxz pushf jl add push mov jge xor inc (bad) je xchg mov dec (bad) mov mov (bad) lds inc cltd subl (bad) (bad) (bad) fildll pop js (bad) cmp mov pop clc pop sub (bad) call and (bad) (bad) in dec mov pop or xchg nop xchg insl pushl (bad) popf sub xchg mov adc mov sbb cli stc sbb js mov push jg pushl mov lods inc add rcl lea (bad) jg adc sub nop jge and mov push fdivs or inc scas insb aas sub sbb outsl std mov fsubs mov sub incl call mov add pushf (bad) adc and jle (bad) (bad) push ret jecxz iret in pop incb xor mov gs mov dec dec cli testl (bad) jmp mov xor inc ss fcoms pushf call lcall jb pop dec sub add out js pushf mov in sub (bad) (bad) incl pcmpgtb sub and cmc out fwait mov sub pop push push xchg add and (bad) ljmp enter xchg cmp shll jg xor inc test (bad) (bad) jg inc inc mov sbb cs mov lcall mov arpl jns mov jp test mov xchg push and or jl xor fs (bad) enter mov and hlt gs stc mov (bad) jge jns push (bad) (bad) (bad) sbb loopne xor mov sbbb jecxz lcall xor dec cmpsb xchg (bad) xor movl pop xor out outsb (bad) ljmp std xor mov add pop enter push xchg or test mov cld cmp add jmp std fbld addr16 rcrb push push mov call mov lock pushf cmp or in ljmp fisubl inc je add sbb and jl add adc (bad) lcall pop xlat lahf mov mov clc adc cmp incl (bad) mov out les ljmp cmc (bad) (bad) repnz repnz xchg add (bad) sub xor scas pop in add xchg mov add (bad) jg incl add add dec (bad) out xor dec fs sub arpl cld outsl cmc (bad) lcall (bad) jb dec push xor dec inc (bad) and fs xchg cli (bad) (bad) ljmp and and int sbb cmp jo xchg pop ss mov cmpsb ficom das ret mov pop fdivrp cmp notl mov aad test sub lcall jbe popa adc imul cwtl or and fwait add mov add pop xchg mov rolb cmp (bad) (bad) incl add pop add mov aas push mov pop mov jo fiaddl mov and es sarb or decl stos xchg sub xchg insb push fsubl call rcll dec add ror (bad) mov pop lret fs pop (bad) (bad) lcall pop mov xchg int adc sti dec add mov (bad) push mov push (bad) (bad) incl nop adc js js lcall xchg mov dec jecxz ficoml jmp sub xchg and into repnz push ret es lret jnp mov scas push decb ljmp sti lahf rcrl add inc mov or shll aaa mov dec mov aam and adc aad inc das stos jle mov and pop leave cli dec pusha loope mov add (bad) adc add fisttp push enter xchg (bad) lock incl aas sbb rcl nop pusha in add xor pusha call or jb mov cltd stos add pusha sub mov int das in es sbbb lret jns in ficomp scas jmp pop sub decl add push loop loop pop dec out loop out lods (bad) ljmp push dec adc inc mov mov icebp pusha test std (bad) (bad) lcall add push adc lret mov pop xchg ss mov andb (bad) mov pop jbe adc cmpsl mov lcall mov sbbl loop pop loop cmp xchg sbbl adc add mov addr16 xchg pop add mov (bad) lcall sub push insb jge jnp sbb out jno cs inc and mov mov add sbb sbb mov cmpb add sub lea or cmp mov mov sub outsb decl pop push daa out add xor fistpll adc loope ret jmp clc add lock in ljmp aas (bad) daa ds adc mov jl mov (bad) jg mov (bad) psllw xchg mov push (bad) (bad) (bad) leave mov hlt dec lods push mov dec sarl (bad) lock jle ret mov fs inc adc lcall xchg jg loope clc pushl and int cmp (bad) adc ret fstl in (bad) lods les test lock cmp icebp lcall ret (bad) pop inc mov test jge (bad) push mov sbb test inc clc push pushf pop loope jg aaa mov pop das push insl dec pop push insb jne or movsb mov dec incl xor mov clc jl das (bad) inc stc mov (bad) ljmp xchg and nop stos mov nop jg inc divb jg incl (bad) jg or push push jb pop add lret ret clc (bad) incl jnp xchg lret sbb xor clc jle (bad) test mov or or jg sbb and frstor data16 cld (bad) incl add adc loop inc js test and mov ljmp lahf or inc inc clc jo (bad) and dec xchg lahf loopne adc (bad) decl jne mov out or xor out sub sub (bad) (bad) (bad) (bad) std mov pop cmp das cmp stos lcall pop aas fidivl and jmp inc jecxz psubw add jg in mov inc enter (bad) (bad) (bad) ljmp push jg test in adc cmp lea les sbb or repz push nop mov sbb mov iret adc mov stc sub mov sbb mov (bad) clc jbe lahf pop icebp insl and mov clc push sar pop and push jg stos (bad) stos aas adc xchg popf pusha lcall call (bad) repnz mov pop add (bad) pop out cwtl mov aam jg std mov push add jg out sbb lods mov scas push jmp incl mov (bad) imul ret jns mov jg inc sti adc sti fnstcw adc pop mov fist ljmp popa or push insb movsl jmp das sbb fucomip (bad) lcall call jmp mov push sbb lret (bad) push std adc xlat cli cmp cmp add push pop xchg scas push ret cmc lcall jbe ficom push inc (bad) mov xlat pop and adc decl incl cld jmp or jmp (bad) in jg mov xor daa fstps insl push mov (bad) mov dec mov adc mov jecxz push ljmp aas fbstp cmp pop leavew add call sbb mov inc cmpsb dec mov cmp push pop mov (bad) push jae ss sub cmp mov in jne insl cld movsl sub jmp xlat insl pop ss lods jnp aaa stc or sub or pop cmpsl inc jl mov call dec cltd ss inc aaa mov pop adc and ret lret inc jnp mov lea push fisttpl nop les and dec pop decb mov or jge movsb and cmpsl cmp js sbb and das test ja insb or aas cli call movb pop fild std sbb or sbb clc outsb orl dec pop mov pop pop or into (bad) mov in stc xor jle cmp xor sub cmp xchg xor cli inc aaa (bad) jmp sti flds call and test out call (bad) xchg fist cld jl mov sbbl jg in and dec push insb cmp pop cwtl adc (bad) mov and add in in sub aas pop xchg pop or stos (bad) scas jae and pop mov mov sbb movl pop jns (bad) jae and inc or pop sbb xchg aaa fiaddl ljmp ja mov xchg lahf ret out mov cmc add cmp fild sarb adc imul inc cli cld loopne xor js test movsb das xchg or dec icebp mov xor cli movsl call lcall inc movsl inc cmp ljmp jbe xchg ljmp popa and test scas das mov mov fsubrp out rclb in jo add aam mov add push jnp in pop mov jge es aaa or inc std jge sbb or call scas test sub push pop push jge jmp outsl or call fsts ja inc jecxz arpl push push jmp push sti loope insb std add sahf jecxz or mov icebp stos out insl mov psraw ret or dec jo xchg mov pop clc sub fidivr pop nop mov (bad) jg outsl ljmp add ljmp mov mov push or add xlat adc sbb (bad) and (bad) fist (bad) jno fcmovbe sub rorb pop dec aas paddd pop or (bad) mov push stos scas or push sbb adc adc xchg cld fcmovnbe sarb mov enter add pop pushl outsl cltd or xor out inc loopne outsl cmc lods sar xchg or out out imul fstpt xlat inc in jmp fildl xor ret pushf xor jl fwait rcr sarb fisttp sar jbe push sbb (bad) in mov xchg in int3 inc idivl jne aaa xchg mov sbb iret fs loop sbb mov sub lcall xchg cmp mov cmp fimull adc (bad) jg adc push lea cld movb push (bad) incl repz (bad) mov (bad) jae (bad) mov imulb repz aaa sbb std movsl lods sub subl pop repz repnz (bad) (bad) (bad) (bad) fist fldt sub pop js or inc push insl sub push scas mov sub das lock pushl push jmp xlat or jp sarl nop hlt jae arpl mov jmp loop mov aaa jo push js mov mov (bad) jmp das (bad) xlat mov xor dec inc (bad) in add push movswl addr16 xor rcr (bad) loopne popf fnsave rcrl in sarb sub dec push fprem1 pextrw addl dec sbb movsb jle inc (bad) outsl jo stos sub mov or (bad) incl jns pushl dec imul imul mov jg pop jb std in repz cmp movsb mov (bad) (bad) (bad) dec sbb aad fbstp stos cli leave sbb xlat rorb add (bad) in (bad) xchg jle jnp clc shrb dec xor pop insl and (bad) (bad) push xchg add mov push or mov sbb aas repz fisubr (bad) jmp dec jns out test std dec cmc popa icebp cmp (bad) mov mov je (bad) cmp mov cld out jge pushf pop hlt aad lock lds loopne (bad) call incl cmp sub sbb mov adc fsts push out cli (bad) (bad) pushl inc xchg popf cmp xchg push test or pop dec pop mov inc mov (bad) (bad) xchg and cmp dec (bad) lock xchg int pop pusha (bad) or nop cld test pushl and mov dec and mov (bad) ljmp sub les adc in mov dec mov ja addl cwtl mov das (bad) (bad) call icebp and popf (bad) mov aam jle inc push dec dec das or std call sbb cmp inc ljmp rorb (bad) (bad) (bad) (bad) out pop adc stos les jle outsb imul bound pop jge pop push and and jns mov mov or dec push test add dec adc (bad) (bad) adc jecxz pop std cwtl push sub mov in repz lods (bad) (bad) jg mov scas adc xor dec mov lock negb lcall push (bad) sti imul pop add int cmp sub dec (bad) (bad) call push sbb adc ret push and inc add and or loopne bound add (bad) incl or shlb dec (bad) (bad) ljmp mov movsl jecxz mov lock cld daa test xchg sub mov adc sar push jbe jno hlt adc mov subl (bad) bound into jnp (bad) pop in insl or (bad) lcall push mov in xlat test jnp insb jle jge jb xor std (bad) lcall pop and sub (bad) mov cmp fwait mov push add pop fnstcw fdivrs mov ds (bad) dec movsb add ss dec std (bad) decl mov and or xchg sub lock ja lods or dec dec or dec mov decl mov push cmp gs mov iret jle pop ds pop push adc les leave pop (bad) outsl pop sbb mov (bad) stc cs sti or cmp (bad) stos (bad) (bad) call popa fsubrp or rcrl jb in int3 mov in or xor out pop add lret jl arpl (bad) add xor int3 xchg (bad) push pop push pop jnp ret dec iret and inc clc dec out (bad) (bad) (bad) (bad) cmp jae orb int3 in jmp lods mov dec add sbb nop and dec mov sub clc decl cld push cmp or in xchg popa xchg idiv (bad) (bad) pushl daa pop stos sbb arpl xchg int3 rcr dec clc mov push jmp pop enter or and incl outsl std jg addl les push dec or cmp (bad) fiadd jnp dec add sub xchg mov incl lcall cmp lods or dec popl inc sar pop mov test (bad) fadd cmc lret (bad) sarb out (bad) (bad) (bad) mov cwtl fisttp inc sub cmpsb push mov add push add inc out sub (bad) ljmp adc adc inc cltd mov test or movsb ja js jnp (bad) (bad) (bad) ljmp fidiv das xor or lock sub adc (bad) push repnz ljmp std jmp jae ret push cmp test rol sbb pop inc fdivp stos or clc out lods xorl inc pop aam cwtl lahf mov fs fldl2t jg or sub cld ret ljmp and mov or (bad) (bad) (bad) (bad) incl or or sub rorb subb add fs (bad) (bad) pushl popf and sbb test mov dec inc stc cmpsl push sub (bad) (bad) pushl push dec jecxz or loopne (bad) mov es inc outsb xorl mov or test dec cwtl adc cs (bad) lcall outsl xchg dec add nop mov and sbb fdivs sub (bad) incl mov pushf xchg shr inc xchg int jnp aas push fldl inc clc (bad) jmp and lcall dec fistpll in (bad) (bad) pushl out js loopne repnz enter fcompl add xchg pop or mov jecxz pop add adc adc dec inc lret ljmp sub (bad) xor dec aaa lods and mov mov stos or call lods fs mov loopne lods sub jg bound dec or or clc cmp (bad) xor mov inc sub popa pop mul out mov push push pop and add (bad) (bad) lcall jbe (bad) in mov movsl dec inc sub dec dec addl das jne cmc gs in jg or ret cli mov mov in mov popf or jg lcall push add iret and pop fimul icebp dec sub push (bad) pop lcall in xor enter xchg pushl test dec (bad) (bad) decl (bad) xchg insl mov fistpl mov adc xchg notl cmp sti (bad) decl sahf cmpsb dec mov xor pusha jnp int3 int or add jg sbb push jns mov or xor add (bad) jo mov pop pop adcb pop clc sub add push cli mov add adc xchg adc add mov xchg dec add out call or (bad) (bad) (bad) pushl ret inc xor xchg pop jl adc std (bad) lahf in mov dec jmp cld (bad) dec div scas aas pop or (bad) and cmpsb and outsl dec mov mov notb sbb stos xor or decl jp lret test lret (bad) loop repnz pop jns push lea (bad) (bad) call pop jmp xchg lds and aad or clc inc push pop les jl outsb push (bad) (bad) jg test arpl jl mov scas xchg aaa addr16 sbb mov ja clc (bad) call call or cld roll jecxz inc addr16 lock fstpl lret adc lock out loop cmp (bad) test mov into sbb dec fsin xor xlat (bad) decl cld aad xchg dec (bad) push cs adc jge lret popf stc arpl xchg inc (bad) jg incl cmp pop insl (bad) mov sbb movb sbb mov xchg mov jge push xchg cmc rorb lock (bad) std and je (bad) notl jae lods (bad) (bad) (bad) cmp shll jge fnop rcr or pop mov sbb lcall sbb jnp out add push mov out ja int3 sub loop add bound lods rcrl call lcall insl lds outsl push frstor xor lods flds lahf in pushl xchg inc mov mov sbb arpl int mov jp jge das cmc (bad) cli hlt in testl inc pop iret jae xor (bad) (bad) mov out sbb daa (bad) sub mov clc jne out (bad) (bad) (bad) (bad) fsubs xchg jo jo out in (bad) out icebp sbb mov adc ja jbe lods (bad) (bad) (bad) (bad) fldt mov aaa clc cmp jbe xchg push repz jae mov lret and (bad) in jnp xlat lret jge jg stos adcb negb dec add lods (bad) mov out mov ss inc hlt call cli push and in jge aam lcall (bad) (bad) mov (bad) push cmp ds sub out out mov pop jns mov push push sub or jae jl push imul cltd mov pushl loopne inc cmp mov or inc repnz (bad) (bad) jmp jns stos cmpsl addr16 sub cmp shl addr16 jo cltd inc fcoml jg (bad) mov mov or hlt mov fistp or mov jne (bad) (bad) call sub (bad) shll in jbe out (bad) ja jmp mov decl ljmp sarl ss pushl test jp pop shl aas inc fdivr (bad) (bad) decl xor mov add inc fucom mov movsl les mov ss sti les (bad) stc pop (bad) dec jecxz mov pop (bad) mov dec insb jo ss les ret push pop stc sar aaa insl imul aaa mov mov (bad) out sbb icebp mov fstpt xlat jbe mov mov aam lods (bad) push ret xorb clc xor mov mov dec pop mov push push repz cs pop dec jae jbe mov je divl mov mov in (bad) jmp (bad) mov std xor test lcall xchg inc xchg xchg imul nop mov cld ss pop mov inc push jle jecxz xchg add orl (bad) mov cltd out jle fstl mov int cs pop popf ss and movsl push aam fcomps jecxz push pushl fisubr jg mov insl shrw or aam nop incl push or (bad) adc fwait cmpsb jo dec stos jbe pop leave push sub (bad) sub out hlt add es cmp dec xor je sahf cli mov loop jg or xor stos push fiadd (bad) or dec inc inc inc (bad) mov outsl pushf sbb xchg test xchg idivb (bad) or (bad) incl xchg fisubr fcoml gs cmp cmc in loop mov lcall push rorb loopne mov call jmp pushf test mov aas into push out popf pop cld std mov in idivb fsub mov push repnz mov cld sbb ret push stos fisubr stos aam cmp enter rorl sub sahf je push shll (bad) (bad) ljmp mov sahf fwait outsb rclb cli pop cwtl jge in (bad) mov lds (bad) (bad) call push mov movsl pop cwtl cwtl xchg cmp pop adc jge jno inc shll (bad) (bad) mov sti xchg (bad) jnp pop xchg or push ss icebp jmp mov mov pause add cltd rorb stos mov aad jns mov sahf pop (bad) ljmp ljmp cmp scas fcmovu cs add (bad) cld repnz pop pop aaa jp enter sbb cs sub call test mov cmc adc subl xchg into sub jg jmp bound cmc faddl lret (bad) (bad) (bad) pushl ds mov scas (bad) andl mov testb (bad) pop pop iret fidivr (bad) (bad) (bad) call cmp jae cmp lods xchg stc mov pop cmp insb into std cmp jbe or (bad) mov push out ljmp lods test mulb int xchg xor (bad) (bad) jg imul mov jbe insl fistpll ret daa pop (bad) aaa cs jp cmpsb test enter jmp jge mov rcr mov mov notl sbb xor mov sti ss xor inc arpl repz pop mov (bad) (bad) (bad) fdivl shrb or pop mov push fistpl mov jecxz lahf xchg hlt ja jbe sub inc ret aam das es (bad) (bad) jmp cmp xor std scas jecxz push lods movsl push ds jo out sbb jae (bad) (bad) (bad) lcall inc cmpsb data16 dec mov stos mov into mov out out lahf std (bad) (bad) (bad) (bad) fidivr xchg aas int cwtl mov (bad) aam rcrl and mov jmp or (bad) pushl scas pusha mov sbb pop push movq aam add out dec mov jnp jnp repz push cs das mov hlt (bad) fidivl out and pop push lock enter call xchg out test pop daa or hlt push xor adc push (bad) mov fs in clc inc (bad) (bad) sti out xor daa jmp push mov mov sub (bad) push (bad) (bad) mov mov mov sbb stos shlw stos sbb push (bad) (bad) call lahf cli fcompl pop cltd cld mov pop pop in pop outsl int mov clc (bad) fucomip mov jecxz pop ret cmpsl psllq jbe sbb jnp push lods icebp pop dec mov mov js mov cmp lahf dec jl (bad) cmp sbb idivl adc pushl rcr ljmp in cmp into loop jp shll std fdivrs sarb stos and ljmp addr16 sbb adc mov and jo jge xchg sbb (bad) cmp movsl push adc jg dec cmp stos push xchg outsl mov into ljmp out insb les aam out into (bad) (bad) (bad) lcall mov (bad) mov jp ja mov stos je ja cmc shlb ljmp fildll mov cmp mov aam mov mov (bad) scas fidiv jp call icebp out sahf icebp dec push mov mov movsl adc fwait mov js call jo les das mov mov (bad) decl cmpsb add es je je pop aaa adc (bad) (bad) call push mov es fcomps mov test clc pop (bad) mov mov dec (bad) or mov (bad) pop push lret (bad) call sub sub out aas lods aam sub dec xor scas and testb xchg scas dec jp fldenv pop call mov cmp push movsl (bad) mov outsb imul push lea bound jle mov lahf xor hlt (bad) jg xlat aaa mov pop out sahf in mov into cld pushl push adc mov fdiv in lret xchg leave (bad) (bad) (bad) (bad) fisttp mov dec repnz out fs in inc xlat jae ret cli aad (bad) (bad) inc iret push xlat pop stc jns pop cwtl cmp pop lahf or daa jp ret or mull decl mov dec test sti (bad) or cld int3 ja xor das mov mov daa lods push jl frstor mov scas int3 aam xchg cmc fs flds pop popf ljmp xchg das ds stos jge and sub imul (bad) (bad) fnstsw mov jg adc mov jae popf pushf leave lcall fwait outsl lock dec arpl lcall pop push lcall lcall push pop xlat mov mov mov mov leave xor aam sbb rcrl std fnstsw ljmp stos mov sub lahf or mov addr16 (bad) (bad) push mov and mov (bad) call jecxz mov das pop loopne (bad) std sub jmp (bad) (bad) jmp add or or jl repz je repnz jg daa jl decb test ds lods push idiv (bad) cltd jno fildll mov add decl cmpsl mov dec or fwait mov out into test es sbb dec fisubrl dec jo cwtl mov mov inc stos xor fiadd icebp jns stos jecxz cmpsl mov push mov fnop ljmp fcmovnu stos lcall dec push test std dec aad push jecxz sbb cld aad out or dec out mov std jmp or stos fcoml cmp incl jmp out inc sbb lret imul mov (bad) lcall arpl sub pusha hlt or in js lcall mov das push mov outsb jmp shr lock repnz push push cld lcall call xchg (bad) sahf mov add cli cmp sti rcr and imul in (bad) jg decl ret (bad) adc ss cmp sbb or mov cli mov fwait jnp mov dec imul decl jns subl dec mov cld xchg call aam sbb out and sub pushl in inc (bad) lock jne mov xlat adcl push jg xor stc jmp mov (bad) out outsl and dec dec outsb adc ds gs mov mov push imul jbe mov pop clc movsl clc rsm jmp out scas popf jp lods jb icebp in pop jg das cmc scas push movl push cwtl xor mov loopne lock mov dec leave sub out mov (bad) lcall lret add dec shrl cmp xor (bad) out outsb addr16 or cmp fwait add stc movsl cmp aaa jle rol jne cmpsl fcomps ror jecxz lods dec (bad) ljmp test out divb dec cmc lahf mov (bad) call insl jno stos xor and ret jle nop sti clc stc dec addr16 push insb pop cmpsb inc mov and cmp addr16 dec loop (bad) mov (bad) push push adc sahf cmp aas inc aas and pop mov js dec gs imulb jg ja sbb (bad) xchg jp push adc pop movsb ss aas in and stos (bad) iret (bad) jg outsb int sti add rcl cld lods js mov pop (bad) jnp and (bad) call mov pop push jge sbb sub out (bad) sar (bad) lcall push mov lcall in cmpsb jno mov in in cmp push ljmp jge call ficomp mov xchg cmpsl inc cmpsb dec rcr (bad) (bad) (bad) push xor and loopne std in stos fwait push aas jae mov pop icebp jb insl mov test test clc (bad) (bad) call in pop mov outsb mov cwtl cmp push adc sti inc int3 inc add fnstenv mov imul sbb mov movsl jle jno jo mov (bad) (bad) (bad) pushl frstor in mov xor mov cmc jne stc xor mov iret std (bad) (bad) incl xor lock mov adc pop outsl ds in mov pop xor divl lods hlt jae call test std dec cmpsl pop sub test mov test lcall mov mov aam sub pop in push fisubrl (bad) mov (bad) popa mov cltd mov xchg js dec test rcrb cli fs incb imul sbb data16 inc popl aaa into sub stos lcall cli xchg push je cltd out clc (bad) in das add pop test ficoml es fdiv xor rorb (bad) (bad) fisttp cli ror xchg mov pushf outsl pop mov xchg jp pop into mov outsb push pushf outsb leave sbb push jge enter je mov repz push neg hlt xor cmp mov inc add mov adc xchg and (bad) jmp popa in shrl repnz dec adc in aas jbe inc (bad) ljmp xor lods xchg test jo jne test pop ljmp aas mov std sub (bad) (bad) (bad) decl lea pop lds js call sbb test xor lds jns xchg cmc xlat movsl inc adc mov (bad) (bad) call adc cmc cli xchg pop jae lretw xchg mov lahf xor repnz incl mov lcall jl cs push push jge movsb inc imul jae (bad) (bad) inc xchg js push aaa push repz cmpsb aad incb fnsave inc sbb cmp cld (bad) sbb stos test jle lret jmp mov lret insb push imul popf cld mov mov jmp jge xchg sbb mov cmpsl pop lahf mov cwtl jecxz cmp arpl cmc (bad) (bad) (bad) pop push std dec clc (bad) jno (bad) movsl (bad) mov pop mov icebp jp pop in call jge scas movsl push jmp call jns xlat cmp outsl hlt mov (bad) (bad) (bad) incl dec pop mov shll ret arpl (bad) cltd popf xor mov insb fistpl das hlt call dec push rcl xor cmp (bad) fidivl push mov imul (bad) pushf fsubrp (bad) mov (bad) mov jmp jno pop dec mov push pop into popf movsl das push pop and cmp fiaddl jg ja cmpsl pop cli jg mov (bad) mov test ljmp lods shl fcmovbe ljmp jno push inc adc push or mov (bad) lahf cwtl es shrb mov xchg pushf test (bad) decl push dec sbb xchg rcll insl test adc mov mov enter cwtl loope xorb rorb incl dec sub scas push mov loop cmpsl cmpsl gs les jbe adc lods cmp fs sti sub (bad) pop adc outsl pop or mov inc test jg jmp les jb in cmp into or cld add call movsl js dec push push (bad) adc push cld dec (bad) inc xchg mov mov fs das inc and mov and xor jmp sbb stos pop jecxz xor pop roll bound adc popf cmp pop cmpsb mov movq aad pop xor divb mov push call lods in ja imul lods movsb movsb rorl add dec es pop pusha les add aad (bad) out or decl pop aas cmc lret mov es push sub repz pop je (bad) (bad) jmp mov mov mov mov jo in gs push mov in (bad) out int (bad) (bad) jg icebp mov lret fstpt scas cmpsl and mov cli (bad) call movsb (bad) (bad) push aas out jmp cmc addl xchg sub dec (bad) (bad) mov push pop push pop sbb mov (bad) (bad) mov clc mov jp popf cmp pop imul mov push adc das pop aam cli jmp outsb test jb jl jne push jg mov fcompl ds xchg rcrl fwait push mov mov (bad) (bad) std fidivl cld js fadd xchg push stos mov mov movsb dec adc (bad) lcall sub mov loope mov mov mov das test mov (bad) (bad) call insb pop cmp fwait xor andl fsubl pop cmpsb push inc cmpsl (bad) incl jecxz add jae dec jb adc cld clc popa nop jno shl arpl pushl mov lock icebp addr16 fcoml std mov jnp and loopne rorl cmpsl sbb xchg cs dec in pop cli in in imul fistpl test inc xor pushl sub push ljmp push jno iret mov ja mov (bad) decl outsb lods lock sub sub in fstpt mov mov mov sbb push sub stc add push jb sub lret jp sbb sti cmc imul decl xchg sbb xchg out mov nop loope fcmovu xchg imul mov adc std js cli cmc fcomi enter mov mov (bad) movsl mov pop pop mov sub cmpsl aaa decl sub pop adc outsl fiadd jo out lea mov out pushf push lods fdivrs cmpsb outsl inc mov out fimul cmp leave insb clc jo (bad) call push into cwtl shll std sti cmpsl fisubr jne fcomp test pushf icebp (bad) (bad) incl xchg cmc mov xor or repz cmpsl fwait das cld outsl das gs sti negb pop sbb adc pop ja cmp jge cltd xchg mov stc stc jae and in in and and rcll mov xor pusha pusha mov ja mov mov mov std lret es push mov push dec xor add pop push (bad) (bad) in call sbb test push in adc mov cwtl xor loope jbe adc (bad) (bad) mov lds sbb loopne lods pop adc data16 add ret jne (bad) (bad) (bad) (bad) decb pop cmpsl dec mov pop mov push arpl loop push mov aaa (bad) xchg repnz jno call or push sbb cmc in ret jne push (bad) decl jnp in roll ret jb sahf insb sbb clc incl mov das sub jns icebp arpl hlt (bad) pushl movsb test sahf fidivl scas jo mov mov decl imul and stc xchg mov scas into sarl mov push mov pop cli into inc (bad) je ljmp push pop ja cs xchg xor mov (bad) mov mov addr16 pop insb dec dec cmp lahf inc stos cltd push push jo pushl jle out pop inc inc jae adc sbb (bad) (bad) mov adc imul xor clc sbb pushf mull pop (bad) adc pushl fadds mov pop les daa dec stos or sub dec (bad) push sub and in pop pop int3 scas fnsave popf dec into sub (bad) (bad) jmp mov (bad) icebp xchg push ljmp arpl push pushf pop (bad) mov (bad) (bad) call imul movsb cmpsb scas pop xchg xchg inc aas xlat pop mov in ftst int3 xlat imul sahf pop pusha fnstsw sbb adc xor mov in or test pushl mov icebp daa push push pushf jns je outsl decl mov (bad) ljmp mov ss cli adc cwtl pop cli pop lret pop jmp movsb add aas sar push dec sub (bad) shlb and movsl (bad) (bad) (bad) mov inc fcmove out jecxz lds inc decb xchg test xor nop pop js jmp mov out test pop cltd jg ja (bad) (bad) pushl popa inc movsl les mov (bad) dec fcompl inc popf sbb mov jmp pushf imul xlat iret lds cli xchg insl pop inc mov sub insb mov lret imul add (bad) (bad) fistpll cmp xor pop mov push or jge ss mov mov push lods das insb (bad) (bad) repnz in bsf mov (bad) (bad) decl icebp lods shrl xlat das jb lods lea test call inc jmp cmp stc (bad) loop push mov xor jbe jmp (bad) (bad) (bad) inc fistp cltd xchg mov pop jge loope pop xchg sub lea xor add cli push (bad) (bad) (bad) ljmp (bad) stos imul sbb (bad) mov xor sub out inc fildll lcall aad and popa pop push lcall aad push jge call out pop mov mov sbb xchg dec (bad) (bad) mov pushf sbb mov mov xorb dec insl lahf sbb shll jbe mov (bad) mov mov scas lea test dec aas mov pop mov cmc pusha out imulb outsl in jge nop jecxz cmp xchg imul scas ss adc (bad) sub cmc jno cs dec fidivrl (bad) (bad) lcall (bad) or push std xchg arpl (bad) jl (bad) aam popa mov (bad) (bad) pushl mov icebp jle outsl loopne mov divb int push (bad) jg mov xor mov cmpsl out aas mov cmpsl shr xchg (bad) jmp inc xlat outsb (bad) int3 icebp mov mov mov das mov jge cmp das icebp (bad) cmp cmc sub mov sahf jp and sbb jnp mov (bad) in dec insb (bad) jge push xor inc jle mov mov and cld and cmp jne ret je dec xor or aad fwait adc into mov stc aam (bad) cli (bad) decl scas mov mov pop imul lods sub push (bad) mov mov sbbl int scas (bad) aad lods cld bound movsl mov push sub ret dec add sub inc lahf fwait fs or sub cld leave sarl (bad) (bad) (bad) decl adc jne xchg divb cwtl insl repnz pop stc test xor mov mov or ja pop fidivr push add in insl cmpsb mull xchg int (bad) and lds push scas lret adc aas mov (bad) (bad) mov je and lock std fsubrl cmp out insb aaa mov jp sub sbb rclb xor fbld mov xchg sub into roll mov (bad) ljmp cmp hlt loope and fdivs or pop sub dec cld jns outsl ljmp data16 hlt dec jg pop (bad) sbb (bad) pushl out mov stc in inc lret sbb inc scas sbb call icebp xchg sbb (bad) mov loope gs push repnz lock call imul add inc push jle movsb (bad) push mov (bad) xchg (bad) jbe pop adc push lahf sub sbb jmp jecxz ljmp jmp fisubrl xlat xchg inc pushf fistpll sbb das test enter xlat (bad) (bad) (bad) (bad) mov sbb (bad) dec int mov pop in lret xor ficompl mov pop imul adc and test data16 rorl dec das pop cmc pop ljmp cli mov neg fadd (bad) aam ljmp xor ja lods fldenv fldenv iret mov pop add or sub push xor rclb in ret ljmp (bad) fcmovnu addr16 repnz inc int3 (bad) jg lcall pop arpl or mov mov jg mov mov popf mov aaa jns call stos add call rcl arpl incl mov loopne mov out int icebp or mov incl mov jnp cld lret pop adc dec sbb or cwtl mov ljmp lds cmpsl xchg adc pop daa cmp mov pop fistp xlat jno pop mov (bad) (bad) call leave cmp in pop mov sbb inc (bad) jecxz ljmp iret mov adc mov outsl cmc (bad) fisttp or xchg fsub or imul aaa sar (bad) jg xor call js mov out mov test lea sar lret add imul in adc loopne (bad) pushl mov or cmp pop std das lea jge dec mov (bad) fisttp adc lret fstp xor push add jp jl cmc jmp (bad) shr stos jmp xchg jecxz cmp push es mov pop ljmp shll jle negl adc sar (bad) jmp and ss lods sbb xchg push mov cwtl mov loopne mov les or (bad) (bad) out flds out lock xchg loopne scas outsb dec (bad) push mov lds (bad) jno cmpl pop mov mov fsubl pop add into sti (bad) (bad) mov jecxz pusha mov mov ficoml push fbld in rorl jns mov mov lret (bad) xor xlat test dec mov mov outsb pop cmp std pushl sub fnsave loop mov adc idivb xor mov mov sahf push lea pmaxsw sahf rcr rol mov lds out cwtl dec orb mov mov mov pop loopne jle cmp lea cld ret lock lcall outsb (bad) out add mov lret hlt mov xchg dec mov popf pushl popf out std aam in push push mov out sbb cmp aam das mov sub (bad) gs das or inc ljmp add addl movsl ficompl push int ss out lea jnp,pt mov mov cltd mov mov sub gs xchg mov fdivrs pop test das xor sbb (bad) (bad) jmp loopne scas stos xchg jp xchg dec jb xchg cmp repz (bad) lcall dec aam or xchg out pop pushf mov ja jle sar pop and xor cwtl ja adc or arpl (bad) mov adc adc pop jmp sar and pop ret dec enter sub jg incl sti jg repz cmc add incl les xchg inc jnp mov test aaa mov aas or aas adc jge mov mov mov stos fldenv adc sub adc aad push add mov enter add add inc add mov dec inc aas jge inc adc mov sub rolb test call rclb mov pop pop pop pop and dec add (bad) (bad) (bad) call add int3 clc rorl leave cmpsb xor lods dec lcall or lcall cwtl inc mov push sub mov xor (bad) decl hlt mov outsl cmc into std cmp fidiv cmp adc (bad) jg fistpll ret (bad) push adc cmp test adc lahf decl cli (bad) jmp adc ds jl push mov inc push jle cmpsl pusha mov arpl pop cmp lods enter int3 lds mov dec repz ret pushl push push push xchg icebp pop sbb out scas mov cmp in arpl jp or push sti (bad) decb lahf cli (bad) int3 decb cmc add cli ja (bad) (bad) (bad) incl cld push lds fstpl adcb xchg fnstcw sbb xor cs popa dec call mov popa add mov push lods dec push (bad) (bad) (bad) lcall mov jg mov data16 push test jae push cld pusha fcomps add xchg (bad) sub xchg das fcmovb jmp adc ror jg (bad) pushl sbb or clc add sbb ss dec cltd test pop jg es sbb cmc xchg (bad) xor outsl fs sti or decb jno fmull sub jg (bad) (bad) incl cmp mov mov push pop pop addr16 mov (bad) (bad) call imul ljmp ret clc lahf add ja,pt (bad) fisttp (bad) fcmovnu cmp inc inc (bad) (bad) (bad) (bad) mov jg mov ja (bad) icebp lahf pop loop xchg in jbe jbe leave out xchg insb popf dec testb (bad) fisttp dec mov fwait outsb jmp inc fs mov inc and ja lods or testb pop loop popf jmp stos scas nop dec adc jbe (bad) cld mov in outsb hlt sbb (bad) lcall es mov enter and dec jb sub mov jnp (bad) call jle mov mov imul (bad) (bad) jg xchg in or fisub (bad) pop inc ret dec xchg call fsin push xchg pushf std les test imul jl ret cmp xchg cmp cvtpi2ps xchg repz sti stos ljmp pushl sbb xor mov xchg cmpl sbb mov (bad) mov pop mov aas daa (bad) pop (bad) aaa mov lds add push rcll aad incl cli in cmpsl jge lret mov mov fcos (bad) (bad) lcall pop insl push loope sub cli cmpl (bad) cli mov xchg dec call outsl hlt out jbe xor lods mov inc or mov or cld mov xor mov push add mov mov xor aam insl xchg mov insb subl mov fisttpll cwtl and orb jg test loop push pop lahf (bad) and fsubs (bad) jge fdivrl imul jl arpl sbb (bad) decl xchg jmp dec insb push (bad) sub inc gs mov shll ja ret arpl insb cmp aas add and sbb ret ds fs (bad) (bad) mov mov or sbb dec insl out adc sbb std push adc jecxz inc jecxz xor inc cmc or sbb in push fsincos and or sub cmpsb push add mov push stos ret jge (bad) (bad) ljmp cmp sbb imul jge aaa inc fsubl mov add insl test push xchg daa inc imul dec fisttpl inc push mov add sbb (bad) (bad) (bad) lcall xchg ficoml adc bound mov sub daa sar dec mov movsb add movsl (bad) (bad) incl cs and xor dec cld and push jmp (bad) outsl (bad) incl cmp das (bad) popf inc cs outsb mov dec aam jge hlt inc decl push add jg jmp push bound adc mov lods enter das cld decl pusha cmp xchg pop xchg push mov jnp bound aam cld fidiv in jecxz push xlat inc pop popa in cwtl pusha jns jbe lds (bad) sbb sub jb rcrb fbld lods mov sbb lods and (bad) (bad) (bad) ljmp repz xchg xchg shlb xchg xlat (bad) jmp xchg cwtl push lods cmp mov xor add push dec (bad) (bad) decl std mov mov aaa mov push cmp lock jecxz push dec hlt dec mov data16 (bad) jg cmpsb fcmovbe or sub inc jg test jns cmp addr16 jae (bad) ljmp push enter ret push (bad) (bad) add std divb clc aas mov adc inc loop adc and mov outsl jl add dec push insl dec jnp aaa pushf push cmp mov lock mov pusha pusha mov push xchg and jmp (bad) (bad) (bad) jg push fwait mov aaa mov and lea fistpl xchg (bad) rol outsl push hlt ljmp sub or (bad) jg mov xchg mov push jo push or test jmp (bad) and or add (bad) (bad) call ret inc push dec inc mov sub and pop movsb int3 inc int sub (bad) (bad) (bad) jmp out sbb inc adc scas mov mov shll sub in mov (bad) call or cmpl insb sbb jnp push pop ret xchg lock mov mov add push mov cmp js (bad) ljmp push popf out lahf sub mov dec inc jno into mov or pop fwait dec cmp (bad) jg pop cltd or lret es andl add adc clc mov test lea (bad) or in incl push mov xlat mov fs into pop mov push pop loope mov inc cmc lds lock inc jg sbb jge xlat jl (bad) xor jae sub pop sub cltd sbb mov fadds ss or inc daa sub mov aam pop call imul (bad) aaa mov push paddsw mov fildll aas push (bad) mov lds fdivrs push scas sbb dec jae imul xorl pop mov les push pusha push pop stc add fsubrp in cmpl jl mov pushl (bad) (bad) cli shld jbe ds out jp adc lds adc (bad) jp pop and call sub mov pop or repnz nop lret mov cli push ret ds outsl (bad) leave enter xchg xor xchg dec aaa (bad) (bad) lcall ret pop mov gs dec addl mov dec or (bad) (bad) ljmp xor fst shlb or shr sarl test mov dec mov xchg dec add or mov das enter test lods jge das mov cmpsl in or mov dec jp mov imul cmc icebp mov in insb or (bad) incl xor inc pop mov je (bad) jl mov (bad) aaa mov icebp push jge inc inc (bad) incl pop jbe dec test push test adc mov loop sub sbb and sahf add jg pop scas add lea mov jmp (bad) jg cmpsb or out adc fcompl mov (bad) push (bad) jg xchg rolb push push mov mov inc xchg cmpsb xor inc dec (bad) dec aam mov (bad) push (bad) or sub (bad) cld mov dec ds xchg (bad) (bad) jne das push cmp (bad) (bad) incl xchg mov mov and ret dec outsb lcall fbld sub daa push xchg jmp add enter sub (bad) ja push mov cmp xchg mov sbb adc and cwtl mov xor xchg mov (bad) (bad) jmp inc cs test adc out lret negb imul pop mov ds cld mov sub sbb pop in lock fcomps jo in (bad) (bad) (bad) ljmp xor stos dec popa mov mov in mov cmpsl pop ret adc (bad) (bad) jmp dec dec and mov xchg iret lret jg repz add mov xor mov loop lcall jbe bound xor mov or sub pushl pusha xorl sub add sbb (bad) mov out adc andl cmc sub das cmc decl jecxz dec add push sbb mov pop std push mov mov cmp mov rorl lcall aaa add in sbb and mov (bad) mov cmp add or (bad) incl add or mov mov aaa fs jl mov inc xor std (bad) lcall xchg push sub rcll shlb fwait push mov iret clc mov (bad) (bad) jmp mov xchg jbe rorb jecxz cmpsb adc lahf jl movsl or pushl (bad) pusha ja mov mov jge scas into xchg mov call mov loope add jge mov out into inc pusha lret rcrl lods jmp mov dec mov (bad) xor int mov es push test sahf bound je xchg add (bad) (bad) scas imul and pop cmp jl outsl cmp pushl cli (bad) adc ja jb cwtl push xchg scas mov jmp inc or mov lods cmc inc push mov incl rclb fimull jmp and pop or leave aad jo dec roll cld roll (bad) (bad) (bad) pushl sub aas scas inc mov ss cmpsb cmpsl push (bad) (bad) lods into or pusha stos test cmc (bad) call cmc (bad) ljmp mov push fnstsw mov add cmc nop iret movsl push test test xchg cmp inc scas cmpsl popa stc inc jl (bad) (bad) (bad) jp inc bound mov jno push inc jne dec push mov sub mov and cld fnstsw lcall popf leave cmpsl pop adc iret popa mov (bad) pop ficomp jg push pop xor cmovno add cmpl adc add clc or scas stos pop sub subl push hlt (bad) (bad) call or sub dec and pop cs dec inc mov jae cli xchg mov pop xor fstpl mov out inc and rclb outsl cmc decl jecxz push jecxz (bad) sbb sti popa sbb add mov lcall cmp jnp shll xchg sub pop inc xor mov pop clc decl (bad) les (bad) jmp add mov push sti std ret shlb mov cmp inc xor mov mov jg pop sub sbb aam mov push pushf mov outsl cld (bad) lcall sub xchg add jo or sbb aas lar sti or or mov pop and add fisttpll or das mov xchg jb push push movsl fstpt mov adc lret inc inc sahf inc ret bound mov je or cs sub xchg (bad) leave (bad) incl push mov cli xchg xor test jb jecxz lods (bad) pushl dec xor jnp push jae roll repz das lock fisub rorl xor loopne xchg fistpll push aas or pop lcall fcmovne pop lds call test xor lods dec insb out stos ss fidiv sbbb (bad) (bad) (bad) incl rcll outsl stos leave sub dec sahf mov xchg xchg mov and incl jl and cmc adc adc jecxz push test cmpsl ret (bad) (bad) ljmp add mov (bad) push jb lret mov push add (bad) jg das push jb lret aad test jl and sbb loopne (bad) (bad) (bad) pushl inc sbb inc and call mov es adc jg or call incl popa mov add aas (bad) jb sbb and fs (bad) mov mov sbb test push mov icebp fsubl adc or loopne sub imul xchg test lret cmp fild stos mov jl push dec cmp incl push ds (bad) jle lds push xor fidivrl jecxz arpl xchg (bad) (bad) jg adc scas inc push mov fcomp (bad) or fs ljmp xor xor fwait and in sbb clc or dec inc push test stos iret mov pop xor (bad) (bad) (bad) cmp or rclb bound aam cmp scas push mov leave jecxz (bad) pop pop aas aas adc lahf subb addl (bad) jg jg lcall (bad) jns inc mov xchg in les gs mov (bad) call test sbb xor inc sbb sbb cmp in xor fidivrl adc je push test mov sub repz (bad) mov and leave sbb in stc sahf cmpsl and push xchg bound stos mov adc popa in sub and (bad) call imulb xchg mov cmp cwtl ficomp movsl push insb push or fcmovnb adc xlat and mov mov add cmp (bad) cld sbb dec outsl jno das dec cmp mov loope call sub nop lock jmp mov es pop test bound pop insb (bad) (bad) (bad) mov aad adc aas dec push pop adc add xor rcll sub pop xchg jge fld push ljmp sub cwtl adc mov dec or out cmc (bad) ljmp mov push scas mov mov fsubrs jp inc push push inc sahf (bad) mov xor inc mov dec sub imul jle popl or les jbe ret inc je lea xor pop call mov xlat lret repz pop aad shrl cmc (bad) pushl jns adc bound xchg pop xor cmp inc xchg clc test jge sub xlat cmpsb sar (bad) in call hlt push add scas lea xor mov push into test lock jns inc xchg js jp mov (bad) lcall push mov add mov test scas adc lods (bad) mulb sbbb ret in push pushl arpl mov mov jmp xor repz faddl mov xchg cli enter xor cmpsl ja in fbld jb or (bad) inc jb (bad) lret iret imul ljmp imul in cli fucomip sbb int3 mov lods les test (bad) fucomip sub pop jle stos mov push add adc lods (bad) lcall mov inc pop adc cs (bad) xor cld xchg sarb cs (bad) mov sbb mov (bad) add or loope (bad) decl push push dec cli mov sub popf rcl cmpl repnz xchg jb mov js jnp xor jno mov dec dec insl mov (bad) decl inc inc mov lcall sub sbb inc add pop cld (bad) ljmp rorb pop outsb pop jb test inc lods stos sahf inc pop clc (bad) incl adc mov mov insl test shlb mov add inc dec out and shl xchg ret mov lds lock jae adc and lock mov clc or repz mov pop lfs (bad) (bad) jmp scas sub es add (bad) cld cmpsb adc pop xchg (bad) (bad) jg mov pop adcl pushf push jmp pushf cwtl (bad) arpl cli or push movsl (bad) out xor std mov push lea (bad) rcl fcomps push arpl inc (bad) call inc dec add xor xor out je mov daa enter dec das pop loopne lea mov dec (bad) test sub xchg inc into sbbl test push mov pop push sub add (bad) jg aaa sub lods xchg xchg ret sub cmp (bad) (bad) mov lcall stos cmp out jb mov ds (bad) (bad) call lret xchg push lock dec lock addb adc sub xchg lret vpmaddwd lcall xchg jl test repz (bad) aad outsb push std std fdivl mov mov push xchg inc dec xor add pushl mulb add clc lret add fsubrs (bad) (bad) (bad) lcall ds ficoml sbb sub pop pop mov ret xor or call mov mov imul and sarb (bad) (bad) incl cltd pop sbb stos sub push mov bound mov jg mov ja push push bts (bad) (bad) (bad) call jmp sbb jo mov movsb clc ret inc pop xchg add fbld (bad) pushl scas popf nop sbbl jne loop push decl jmp sbbb movsb cmp mov mov stos inc insl lcall and lea or popf outsl mov pusha jb xchg xchg mov mov int3 (bad) (bad) jg bound sub fs jge das cmpsb cmp icebp stos loop pushl mov out mov out adc mov sub (bad) (bad) fcmovnu cmpsl push aaa out sbb mov add sti arpl and outsl (bad) (bad) (bad) jmp mov into xchg dec outsl sub movsb lret pop jmp pop dec xchg push pop ret fnsave (bad) ljmp xor mov fldt or pop insb (bad) dec loope test clc cld (bad) (bad) (bad) jmp xor mov jns test stos jge jp xor (bad) div std mov (bad) (bad) (bad) call fcmovu push ficoml adc dec aaa out repz fdivp dec js orl cltd (bad) mov mov mov cmc add jb jb adc adc inc incl push xor dec adc pop call jp les xchg (bad) (bad) (bad) (bad) cmp lods mov push push push jl push iret jmp push les inc pop lret sar mov push sub negb aam push sub jmp clc fwait js aam xchg ljmp out fstpt (bad) les dec add out (bad) (bad) (bad) out ficomp jns in repz sub pusha fist mov lahf mov jmp pushl fst fcoms mov push dec out movsl in (bad) (bad) (bad) (bad) fldenv sub movb push lock movl fnstcw jg (bad) (bad) dec push stos xor or jle inc scas push adc loopne fmuls icebp rcrl jbe pop clc (bad) push dec jle hlt aaa mov movsb adc xlat sarl nop mov imul data16 imul popa leave (bad) imul push sahf outsl out pop shrb stos mov xor xor ret jp imul cltd jle push or or xchg mov int3 stc dec jecxz (bad) (bad) (bad) pushl test das outsb xor insb mov shrl (bad) enter ret xor xchg leave adc ret or cmp cltd rorl mov pusha push scas (bad) (bad) (bad) pushl (bad) shl add xchg insb fldl repnz inc mov ret mov aas rorl cmp jg mov xchg in pop hlt mov jp dec (bad) pop jp int mov leave cmp adc dec and andl ds mov sbb out cmp cli (bad) inc loop cmp sahf fwait out lea pop aam ljmp adc outsb sarl sarb leave decw sti adc testl sahf xchg add push pop jb popw data16 lahf icebp sub xor mov inc (bad) decl push ret das sti or int3 sbbb pop clc rclb inc and jae pop xor add ljmp call sbb les mov iret inc imul rcrl (bad) (bad) (bad) decl mov and fldl xor ret and rorb mov jg sub or das adc ret (bad) jmp pop dec lcall mov imul mov stos sbb ja jle lret and outsl or jmp lret loopne sub insl mov xor pusha dec pop mov (bad) jmp mov cmp adc mov jmp popa xchg xchg lahf aaa sbb outsl mov mov jno jle add sti fucomp push push xchg push jecxz decl mov pop inc push xchg int jg ficompl subl or sub stc mov ljmp sbb arpl scas xlat sub or insb cltd mov das repz lods (bad) call (bad) jge adc lea adc sbb ja sbb arpl out cmpl push test inc test (bad) in mov into lds icebp decl std xchg and ja inc enter add subl adc cmp es repnz jae mov popf stc (bad) (bad) (bad) incl addr16 push jp xor lea xchg addr16 xor in xlat mov cmp fimul incl lock cltd clc dec fadds pop (bad) insb mov (bad) incl mov (bad) mov mov lcall push push xor push lret jmp pop or cmpsl fisub push add jge ljmp cmc (bad) pushf pop add ret rcl daa push mov imul aad xor dec shlb xchg shlb jle lcall fbstp mov lcall inc outsb push out mov jno in (bad) incl sbb stc inc stos hlt xor aad jnp sub scas dec xor (bad) incl xchg lods lea mov mov mov fiaddl cmp call jg sbb push push push outsb xor jecxz mov inc add adc inc mov or lcall dec dec dec push sbb xchg decb das xor and dec std adc mov (bad) decl out cmp les out cs (bad) xchg push mov cltd (bad) ds lahf (bad) daa (bad) (bad) (bad) jmp jae xchg inc imul adc rcll aas xor sub push mov (bad) (bad) pushl add lock fcomi xor in mov test mov fild inc jae xlat fisubl inc ret dec icebp decl lret lahf addr16 xchg and dec jae push dec mov push cmpsb inc cmpsl pop or jns jae mov inc (bad) (bad) jg mov mov (bad) jae push push aad (bad) lcall insl (bad) mov xchg sub ja jmp lods mov sbb insb dec mov pop repnz inc jns insb outsl repz lcall mov add and loopne ljmp or mov (bad) (bad) decl jnp push insb insl dec leave pop jle iret jge xor mov xor daa sahf push js dec insl std aaa out lahf iret stos xlat aas mov xor (bad) ljmp cld sbb out add testb cmp aas cmpsl push push ret adc (bad) push scas scas dec fisttpll jmp aaa cmp jb and mov je fisub stos fidivl sti pop ds (bad) (bad) incl ret pop and cmc repz aad fsubrs cmpsl cmp push movsb (bad) (bad) (bad) (bad) fcoml add lods add clc push adc int push push jmp iret inc ljmp lock push data16 in mov mov inc mov icebp xchg clc incl dec adc fimul xor (bad) (bad) (bad) mov push jbe ja bound std ds sbb inc jp movsl and xlat sbb pop sti mov xor or mov inc mov jecxz sub add xchg shl sahf xor pop adc (bad) call out jne xor popl pop jge rorb call mov and pop sub scas push andb (bad) mov adc or lods test stc pop aad jg and aaa lret ret orl sbb ljmp adc les push sti mov test (bad) (bad) cmp les push sbb cmp cmpsl cmp je icebp das cmc aaa xor add push in (bad) jbe call cld ja fcmovnbe (bad) cmp dec xchg (bad) (bad) (bad) decl and cmp or ljmp fwait (bad) mov shlb leave mov pop sub mov stos bts pop and ljmp mov movsb push stos xchg jo movsl insb pop (bad) cmc popa mov push cmpsl dec xchg mov loopne sar jl iret or inc stos das inc or (bad) out or push fs ror or test (bad) fistpll (bad) jno loopne cmp rcrb ljmp mov loop jmp repz mov lea popa adc ret sbb pop pop lcall lret imul jo add scas ror pop clc (bad) ljmp and xchg inc xchg xor add call (bad) call sahf out lea test cmp push pop push fstl cmpsl test not pop inc (bad) inc (bad) (bad) incl xchg push pop pop movsl out icebp loope and or cwtl cmp cmp ljmp outsl push cmpsl in sub imul shll inc pop xor mov mov jb dec test (bad) push xor xor mov ret fcmovb xchg out or lock mov jle cmpl inc stos push sbb leave shr mov incl (bad) incl mov xlat clc inc mov jmp mulb jecxz das cld add mov sti jae dec rorl or mulb subb mov cli cld rorb (bad) jg adc vpackssdw mov adc out lret jge mov pop test in push mov test xchg nop xor cli lcall (bad) shlb xchg outsl test das std pushl lret pop loope ljmp dec into jmp std into adc mov mov add call (bad) incl cld seto and les cmp mov repnz incl fildl outsb fs jle (bad) mull ret lods add lds xor addr16 add das mov and pusha icebp (bad) xor xchg test das fsub push roll pusha sbb mov fsub divb (bad) lcall jp xchg imul xlat shl das xchg (bad) (bad) mov xor loope jmp dec jmp sub jle adc clc incl pop ret add mov dec cmp (bad) mov iret imul std cmp outsb dec adc (bad) (bad) ljmp cld or sbb push sbbl mov bound cld pushl rcrl cltd jmp push push add repnz (bad) incl lds cwtl cltd xchg in (bad) jle outsb insl stos cmpsl mov aam mov (bad) in popf dec mov mov sar xchg (bad) jmp out cmp or ret (bad) and and xlat test stos jo xor and xlat (bad) (bad) call pusha shrb dec rcrb imul into pop mov mov cmp cmp adc add cmp or (bad) jmp cmp ja adc cmp cmpsb fsts xor (bad) das adcb pop loopne orl ds in adc (bad) (bad) (bad) dec dec ficom mov (bad) cli push and adc repnz pop mov dec testb ja jl lea cmp mov sbb xchg push mov jo leave pop imul pushf (bad) (bad) (bad) incl int3 xchg (bad) aaa sbbb aaa cmp lock test hlt js sar inc dec int xor shl dec push imul xchg inc pop lahf mov jle sbb test js xchg into mov loopne pop push loope sub (bad) (bad) call and mov out pop inc xchg lcall ss inc scas or lods xor lcall push imul xchg or mov jns stos jg bound pop (bad) xchg clc mov cmp mov dec popa aaa xor and test incl and std repnz andl push mov arpl and push sbb insb pop pop pop dec std (bad) push jns ret inc mov xchg mov lock push popa clc cmp (bad) (bad) fistpll loopne sub daa adc or push lcall insb out daa and (bad) lcall (bad) push jno arpl dec test aaa pshufw mov add xchg jle je mov mov arpl inc mov (bad) nop mov ljmp inc jmp xor jge loopne jg ljmp sbb and rcrl mov xchg lahf inc (bad) (bad) (bad) call pushf mov cmp popf cmp xchg push lock sub or push sar (bad) (bad) fcmovnb inc hlt push fisttp cs sti dec int3 shrl call dec sarl inc decl fwait add mov fdivrs sub (bad) pop and dec test aaa mov cmpsb imul inc xchg inc xchg pop pop mov mov (bad) (bad) fistp repz sbb (bad) imul scas jb cmpsb shr sub cs lcall sbb insb rolb dec cmpsl inc pop lcall std call cli sbb and dec inc adc shr rclb mov dec cwtl mov push dec aaa mov fisttpl repnz sar (bad) decl cmp xor sahf ficomp jmp mov (bad) (bad) (bad) mov jae arpl mov arpl xchg xlat xchg xchg addr16 cmp or push fcmovne pusha (bad) jg (bad) fcoml xor das push out cltd orl mov popf ret std decl aam ss jnp jp inc cmc mov mov pop xor ret lret or xlat ret lods ss mov push add imul push pop ja mov mov (bad) mov push pushf pop fnstsw dec cld push push cmp stos add add shrl pusha pop std pushl mov dec jns (bad) sbb rcrb mov mov ljmp pop repz imul decl and (bad) adc xor fmuls sub mov jbe lods or and out sar (bad) (bad) add (bad) rorl sbb lods shr or inc inc daa jbe data16 jp fisub xchg clc (bad) mov enter xchg add (bad) (bad) mov mov ret (bad) scas movsl fwait pop popf mov fs fstps add iret fstpl adc (bad) lea sbb jo dec (bad) (bad) (bad) (bad) jl adc in or dec dec movl in imul (bad) mov movsl (bad) (bad) ljmp jle jge fcoml dec test mov lret test pop push push add jns gs cli (bad) incl mov mov push aaa adc jno mov jno dec ret daa daa xor mov pop pop inc clc (bad) (bad) (bad) sti scas push nop xor data16 repz push xchg clc or mov add (bad) (bad) lcall sub repz inc insl test jmp push neg inc mov pop lock and sbb jg cmp cmp and icebp adc and (bad) mov pop mov roll (bad) call aaa (bad) (bad) mov movsl daa fldl sbb loopne cmpb stos adc (bad) (bad) mov xor cld adc fistp mov imul fild cli (bad) xor insb inc jle les pop mov call fbstp pop pop out lret outsb (bad) mov lret out sbb lea sub mov cld dec std mov mov mov adc sub (bad) mov test lret jb (bad) lret rcl ret pop imulb cli jg mov adc cmp dec outsl dec add pusha push pop (bad) fbstp sub cmpsb ss sahf enter (bad) jmp and and mov ja jecxz hlt xchg ret (bad) (bad) (bad) (bad) fdivrp xchg pop decl push jg sbb or inc mov cmc mov jo push cld mov adc sub test adc (bad) mov hlt leave add push nop cs out js fidiv adc sub jns mov loop adc fidiv add sub cli adc jno stos jecxz jb xchg push mov idiv ljmp call or xor cmp dec inc out push dec push out sahf mov outsl std push out add pop jo (bad) aad mov call and push aam pop lea xchg cld adc loop (bad) pushf out (bad) xchg pop pop mov mov std pushl cli fsub sub mov pop pop fstpl leave outsl (bad) stos sub jge mov and insl sub sub jb frstor pushl clc (bad) jb shll sbb sub cmp (bad) dec push mov sbb pop fs mov or (bad) ljmp and call mov xchg mov mov xchg inc add icebp add dec in add adc nop (bad) decl mov add inc std pop and mov mov (bad) ljmp adc iret and dec aam adc (bad) (bad) call lahf inc xchg push jg cltd incl and ror jne es test dec (bad) lods (bad) inc push fild aam dec ret xchg lahf mov add lcall movsl xchg mov dec mov cmp mov pushl repnz ja add out mov in xor inc pop mov leave punpckhwd pop jb and mov (bad) rolb psrlw cld mov xor xlat adc xor sub dec test (bad) mov ljmp addr16 adc push mov rorb aas inc (bad) ret xor aaa lret mov mov sahf push outsl push add in stos cmpsl pushf outsb (bad) ljmp cld mov scas (bad) lret pop mov sbb push mov xchg fildll mov lret dec pushf xor push push int3 (bad) push mov mov cmpsb mov mov insb xchg pop xchg (bad) push fcomip loopne xchg pop fcompl call sub xchg das and lahf shrb das cmc cmp push dec (bad) jae pop pop ds ds push pop mov shr scas ljmp scas pop sub xor aad xchg adc out pop mov dec add jg (bad) movsl insl mov rcrb movsl (bad) jmp les icebp dec ss hlt (bad) rolb mov jmp ljmp lock fprem cwtl in cwtl in jmp jp adc xor (bad) pushl inc cmp xor adc insb mov movsb outsl jae or in dec pop xchg lods fwait call jnp push pop dec shl or jge (bad) (bad) jmp mov mov sbb adc push repnz or xchg lds gs sbb lea popa movsl push loop shll push push int3 cli fs sbb stos mov in (bad) pushl adc fistl shrb inc sti jno adc sub pop add lahf insl pop xor ljmp lock sbb (bad) lds lods rcrl js add leave xchg es (bad) jg rcrl cld fsubrl iret pop das jo jmp cmp (bad) in insl mov (bad) inc xor test out mov cld orl xchg xchg xor pusha cmp cmc dec scas aas mov add cmp aas paddw lods cs push and loope xchg xchg or push into mov imul popa movl andb insb or movl (bad) pushl sbb icebp xor ljmp add sar mov mov divl ja fisttp jle clc pop (bad) (bad) (bad) fisttp sbb jle clc jge sti (bad) idivl das scas pop cmc pop cli lods xor dec mov (bad) decl mov cmp insl fiaddl fisubr sub rcll add mov inc (bad) inc call roll je aas mov xchg test idivb xchg out jb incb jmp mov rcrb adc push outsl add xchg add outsl dec cli je xchg adc push xchg sub pop rcrb push xor mov or aad inc mov adc hlt decl mov push jp imul out xlat push cwtl sbb lcall mov femms pop cmp fwait mov fadd add lock mov stc push lock ljmp das inc movl shr or fwait je cli (bad) (bad) cmp xor je (bad) roll (bad) cltd icebp insb outsl hlt sahf (bad) (bad) jmp stos imul xlat hlt and xchg jne sub std jecxz (bad) (bad) cmp mov insb fs call das testb xor ret cmp inc movsl stos jle sub (bad) divl dec inc incl mov repnz pop or inc (bad) or cli dec std incl dec push (bad) xor mov or fisttp lock pop shrb sub in dec jno sbb mov and or out inc mov in outsb mov ds jg (bad) sub lea pop out mov xor idiv pushl (bad) jmp jecxz inc stc fucom mov pop js dec add lcall std mov pop jbe jmp and mov ret aaa cli (bad) decl daa lock fcomps or (bad) das pop lret cmp mov pop ret das cwtl sub stos sahf hlt jns inc fcomp xchg xchg xlat (bad) call cmpsb add xchg (bad) stc loop mov or loop data16 lods push jmp mov sahf inc jbe xor ja mov mov sbb loop daa pop push lcall mov push mov jg incl jecxz mov adc adc jg mov test (bad) (bad) (bad) (bad) jge jns cli adc popf lods cmc dec dec mov mov mov out sti xchg call (bad) jns aaa push iret or stos mov sub xchg hlt (bad) (bad) jmp push (bad) cmpsb xor add icebp pusha stos stos fwait adc jmp (bad) (bad) ljmp jle mov adc inc jae sub hlt or lock loopne or and mov add sub push inc inc sbb mov lea mov (bad) (bad) incl jmp nop or sbb sbb rcrb mov leave hlt or push pop (bad) pop xchg int3 or cmp push incl in cmp dec les aas xor xor and (bad) aaa cmp dec lods cmp int3 jb std pushl ljmp cwtl inc push inc stos sbb xor test mov aad jno fisttpl les jl mov dec cltd jns incl adc xor (bad) cmp jae push stc jge outsl out into sub inc je cmc (bad) call xchg or cmp push imul outsb popa vsubpd std roll clc hlt mov mov lcall enter arpl (bad) in adc ja cmp mov (bad) ljmp addb pop lret ljmp jl fimull mov loope pushf (bad) lret sbb or push or push ret mov sbb cmpsb xchg out add mov enter test ljmp dec xchg push dec cmp inc leave in xchg clc mov gs and rorb stos jl jge push inc aad sti push (bad) mov jno add lock xchg push pop pop (bad) fbld je dec (bad) decl rclb mov xor jo test sti arpl mov inc mov jp imul or jg (bad) jmp and jne adc mov call sub (bad) ljmp mov fsubrs bound lret test pop sub xchg imull sub lods mov repz dec pop int3 mov xor outsl cld das nop pop ljmp xor push aad dec adc mov and ror cmp cmpsl inc aad (bad) jg ljmp loop mov pusha jp push in xchg outsb jns pop cld mov imul and outsb (bad) jne icebp ds and adc stc mov sub mov inc repz fmuls sub mov cld inc xor pop jmp dec dec push cmc fstpt in jge pop ljmp jnp rcrl xchg bound jo ret jnp jmp ds es xchg ja (bad) jbe xor cmp (bad) (bad) mov (bad) idivl (bad) dec cltd or das sub xchg (bad) (bad) ljmp mov adc dec sub addr16 jb imul pop dec imul in adc (bad) jmp adcl or out mov (bad) (bad) (bad) mov imul lcall push shl (bad) call clc nop jae cmp sti and inc mov mov lods mov (bad) (bad) (bad) fnstcw or mov clc mov loope test test icebp pop loop pop mov popa movsb sbb (bad) fmuls std in ljmp arpl ret add sub xor nop add mov cwtl push cli jno jns adc jg add popf push ret fdivs mov (bad) (bad) (bad) jmp xchg sbbl or mov push sbb in dec dec jl adc xchg (bad) (bad) mov (bad) mov jb arpl mov repz and push adc mov daa scas in (bad) (bad) in fdivrl and and xchg push jmp mov mov pop sub (bad) (bad) lcall dec getsec sbb mov fsubr pop push cmp lret and mov sub jmp icebp dec (bad) repnz pushf cmpsb mov add sub fs dec std (bad) (bad) (bad) jmp sub inc dec jns mov inc lods lods ret add add inc popa lods (bad) (bad) decl icebp faddp xor mov les inc and lods (bad) mov popf jae mov jge repnz ror test call inc xchg das lock decl es cmp add movsl adc ja dec fwait (bad) int adc (bad) cmpsl das imul js push insb jle add inc call (bad) lcall iret testl inc cltd repnz stos sbb sub sub imul dec decl pop mov pop cmp js adc mov or inc xchg sub push pop sub mov aad outsl in pop out jne imul xchg in pop icebp dec push loope (bad) (bad) in incl shlb inc adc xchg adc adc xchg mov outsl (bad) incl sub sub adc int add dec add test push push cmpsl cmpsl scas jb incb dec fs stos sub cmp idiv fnstsw incl ljmp add pop push rcrl xchg (bad) pushl mov pop mov mov pop pop sub mov fistpll insb adc push movsb ja push pop jnp mov pop cmpl aam add test data16 (bad) jg dec sahf in push mov mov int sub mov jp mov add (bad) (bad) fistp jbe cmpsl test jp repnz pop addr16 fildl decl mov std insl (bad) out out ret jae sbb stc adc pusha dec iret icebp test (bad) ljmp cmp (bad) je call pxor xlat cmp (bad) div (bad) (bad) call in roll js imul mov (bad) cs insb das std (bad) incl test pshufw dec or jp xor fwait pusha ret push outsl ret mov (bad) adc cmc (bad) lret dec imul repnz and or test push jo jo xor ret (bad) (bad) (bad) (bad) mov fnsave mov insl (bad) in fidiv inc mov mov cmp jle xchg cs jmp add fidivl call rol cmp imul je pop cli add jmp ret insb imul stc and cli xchg pop fmuls loope clc mov pop pop scas inc ret pop incl xchg jl popl lods jg or movsl lcall in push mov xchg sub shrb fildll dec mov and les int3 (bad) dec fdivrl mov sub inc loope adc sbb xchg jnp das mov push add cmpsl mov std dec fmull mov test sbb adc in dec loop (bad) (bad) cmp lea aaa fldt xchg aam cltd les popf in (bad) lcall rorl mov jbe shlb pop xchg loope mov not mov mov je xlat clc xchg cli incl jne stos aas ret (bad) or pushf (bad) fwait aad cld xchg jecxz neg icebp or xchg push pop cmp ljmp mov cld rcrl xchg xor push xlat mov lods push adc enter je pop test mov decl std aaa in mov out and mov inc jecxz push push pop popf ds add pop lds repnz (bad) aad pop dec jecxz jp stos daa cmp ffreep lods sub insl inc jmp mov jecxz mov nop adc (bad) (bad) jg inc mov popf adc lret adc es in mov xor mov in and aaa jecxz outsl cmovp leave clc sbb (bad) push (bad) mov arpl in xor out jp pop int3 xchg pop jl imul mov jp (bad) xor sahf scas xor mov sbb stc or (bad) jg incl sub mov lahf cmp sbb popa cmc push (bad) sti outsl std imul clc mov into mov push jecxz lahf (bad) cmp (bad) (bad) (bad) jg mov adc xchg pop push stc sahf das rcrb cs adc pop je aam outsl adc popa cmc (bad) (bad) decl inc mov add or jp pop inc lock icebp mov mov (bad) dec (bad) fstpl push push jbe loopne pusha lret (bad) (bad) (bad) (bad) cmp jmp mov fwait dec hlt das mov inc ja add lret push (bad) loop cmp sub fist rclb jae mov stos cs pushf aaa testb cld (bad) ds andl mov sub (bad) (bad) push mov stc xchg je aaa push lods pop repz loop test jae out ret pop call and xchg cwtl ss xchg sub (bad) (bad) (bad) pushl test jb movsb sarb inc ja mov dec dec scas out xlat fisub and jmp inc and jge mov (bad) jg std adc mov add test (bad) (bad) (bad) jp out loop clc pop add jae jge sbb aad mov and mov cmp push (bad) (bad) (bad) call out push stos pop push push push jle jecxz adc faddl fldenv (bad) (bad) mov ss lcall adc sbb xlat out fcomps fist movsl inc (bad) decl push push fdivs cmp rclb cld (bad) (bad) call xchg inc push cmc cmp cmc jg test (bad) xor lret addr16 jmp jmp push inc adc out notl pop adc (bad) (bad) (bad) incl (bad) or mov mov jl or sahf xor sbb push movsl and add cli (bad) (bad) lock push mov int3 mov in dec lcall faddp repnz fbld pop and add (bad) (bad) (bad) incl in sarl jecxz mov testl hlt inc cs (bad) (bad) in sbb fdivs outsl cld idivl and addr16 dec outsb lock lcall add in push insl das mov mov nop sbb add (bad) (bad) jg incl insb shr dec jae push cmc in enter icebp lea jno (bad) (bad) mov pop js outsl into cwtl jp dec std out xchg into repnz jge mov enter jg decl jo outsl (bad) adc ljmp ss (bad) (bad) incl clc shr loope sub sub insb xchg cmp adc in fs xchg test sub (bad) (bad) (bad) call out add es mov adc xchg sbb cwtl pop addr16 call push (bad) (bad) pushl rclb push sbb in sbb inc xor les enter cmpsb adc mov mov call and in (bad) arpl xchg nop enter decl jo rcrl test jmp mov push faddl jmp (bad) fisttp ja mov pushf sbb mov das je pop fidivl jle push pop inc repnz push jmp push sub (bad) (bad) pushl inc outsl pop jl,pt push popa lahf mul ret pop jns jnp movsl mov lcall fcmovu jl xor xor sbb fdivr mov clc (bad) pushl dec or mov cmp jnp or pop cld xchg rolb ds pop or in sbb sub push dec pop push in test decl std jg lret rol jnp xchg dec dec cwtl test in jp xor mov cli aaa xchg or js xor xchg mov mov mov dec push mov pop push movsb insb sub mov push pop clc call (bad) lea or imul out and das aad leave mov rcl inc cwtl sbb aas out adc lcall incl pusha pushl push add out out fisttp call push insl push fisttp int3 nop inc inc lret rcll inc mov (bad) (bad) jg push clc mov jmp ret fimul adc pop push adc inc jle inc cmc clc or and sub push popf cmp pop (bad) xchg (bad) (bad) (bad) (bad) mov cmp (bad) xor mov xor (bad) cmpsl fmuls pop mov test call mov pop push xchg inc fcomps enter (bad) jmp dec jb jl pushf sbb fwait mov ficom jo push mov incl iret adc cmpsb or pushf pop ljmp icebp jmp sti sti inc dec lods mov jmp mov hlt into (bad) pop negl push and xor fwait dec sub add out cli lods add dec std (bad) call test shl or cmp pop int3 loop call jmp mov jo and adc cmp mov (bad) (bad) incl dec dec inc xor test ficompl push enter imul xlat sub sub (bad) fild sub and sbb popa xchg leave jbe cmp das das add jnp mov sub (bad) rclb mov and adc enter repnz add (bad) aaa test pop les ljmp sahf pop xchg movsl lock (bad) incl movsl stos ret pop loopne mov and aaa imul icebp decl dec int3 jno ljmp lods mov (bad) fucomip jg in sbb out subl lcall insb lods mov fisubrl lcall xchg (bad) (bad) loope popa push and movsb stos ss inc jg decl lock add ret dec cmp mov dec pop subl mov xor or insb cmpsl ljmp bound xchg test loopne test jg ja mov call scas dec fldl hlt lret aas cmpsb xor dec mov pushf andl movsb mov dec subl xchg jb mov cmpsl pop mov or mov ljmp outsl dec push jb lock and aad mov in arpl lcall adc pop xchg movsl xchg or jnp xchg inc pop sub push (bad) ljmp and pop addl adc jle or stc mov add rorl xor (bad) (bad) decl fs shll mov adc insb aas cs hlt mov fucomip lcall inc aad dec loope outsl cli jle aaa std mov mov call push (bad) fmull push and push mov lret dec cld sbb push rolb aam adc or decb or (bad) (bad) (bad) fmull adc data16 daa push pop (bad) jae inc hlt cmc nop push mov push js fstps or add (bad) pushf pop mov cmpsl outsl xchg (bad) ja js mov xchg shrb sti gs test out push sbb (bad) (bad) fildll enter sti aaa cmpsl mov pop jmp mov pop or incb fs jecxz mov push ror loop lock movsb imulb mov push into ret fstl leave jmp jge hlt shld mov clc cmp (bad) cli scas nop fdivr mov jnp adc nop addr16 nop add (bad) (bad) (bad) (bad) ficompl inc or lahf push cwtl or ljmp fmuls outsb cld (bad) call push and std push jnp repnz je loope push add cmp std (bad) incl jmp ficomp sub cmp xsaveopt (bad) mov stc std add das push add jns adc dec add pop jg (bad) in pop icebp scas orb mov push fcompl cmp xchg cli mov mov cmp cwtl and sahf push fisttpl loope fisttpl mov out incb ret stos loopne pop ja sub (bad) mov (bad) (bad) incl jne inc movsl xchg or pop loopne pop fstpl jae and mov and ja (bad) bound hlt in add stc aad shrl cmc jne sbb cmp or and and adc sub aas std test test mov dec or (bad) mov pop mov in sbb fdivl ret (bad) jbe in lahf push call mov pop sahf in fbstp (bad) es (bad) jnp lods decl sti jo mov pop pop push mov mov jg mov decl (bad) sarl pushf lock (bad) mull lret bound adc clc jg lcall mov mov insl shrl add stc cwtl cmpsb stos or packssdw leave imul (bad) icebp dec sbb fbstp mov mov mov lods iret das clc imul jle gs sbb inc stc mov (bad) (bad) or mov xchg imul dec out sar std stos test xor xor (bad) jmp xor add add sub pop xor add (bad) aad mov mov xchg inc icebp jl dec cmpl inc out imul jg js xor test inc ror js js push call not xchg add push inc std mov mov add push sahf sti int add (bad) pushl pop mov mov faddl jmp lret add loopne stos inc adc push outsl rorb (bad) mov pop inc pusha mov cmpsb pop cmp enter jmp sbb push das add add fcompl mov out pusha or test push test push mov jmp and pushl jl pop (bad) js sar cwtl push fistl mov push ja outsb add in inc incl out fnstenv sbbl ss mov fs (bad) lcall sub dec insl jne xor icebp cmpsb insb inc dec mov jle clc outsl cld outsl loopne pop jne add push or pop fcoml aas inc (bad) inc xchg (bad) lods jl mov ret ss gs sbb mov cmp aad (bad) cmp jno sbb ja shrl movsl (bad) decl cld mov fistpl cmpl fild jb jg add packsswb sbb decl rcrb lcall push mov std inc daa pop jg (bad) incl and push cmp xor (bad) mov ds mov cs lahf add dec stos repz inc dec enter decl lea aam mov or inc sti or pop std dec jg les dec test jno mov pop jae decl loope mov cmpsb add xchg mov dec outsb ljmp sbb adc sbb cmp jno hlt mov dec mov cmp je sahf xchg mov into add in (bad) aas xlat lahf lock add ficom ljmp adc hlt jle fldt jle enter in mov std (bad) mov js or add sub in aas add jg decl insb daa sbb jge aas punpckhbw arpl and (bad) fisubl js std out push outsb insl insb int decb pop push pop mov lcall dec sub jb lcall jl pop jae mov iret dec scas adc or pop xor (bad) (bad) (bad) (bad) js in pop dec mov cwtl (bad) or jb loop ror outsb daa rcl or out iret icebp sbb cmp (bad) std pop cld pushf rclb (bad) cld es outsl push cld iret clc jmp (bad) das lock popa xor lods (bad) push xor and xchg out inc stc jmp pushf xchg push xchg mov out (bad) lahf (bad) fldl aad and mov or ljmp clc icebp dec add mov loopne add push or add push jo cmpl or pop cmc jg lcall or pop fsubrl insl add mov pop ss or cmpsl dec dec loopne (bad) jae lret pop push (bad) in (bad) or jnp imulb adc lret loopne subl sbb push fsubrl (bad) loopne rcrl add pop jo fcompl jg cmp out lret lahf pop jl test sbbl ljmp pop adc ret (bad) (bad) (bad) call push call (bad) pop cmp dec out xlat dec mov scas mov stos cli in ficom mov dec loop fwait out int cs pop mov (bad) (bad) call rorb scas pop jmp popf in lret jnp fidivl add jg sbb sahf mov mov shr out loop cmp xchg xchg mov jmp pop mov (bad) ficomp stos jbe (bad) (bad) (bad) mov mov pop lock into fcomps data16 xor (bad) call lds jp gs adc sub adc js ljmp imul iret xor (bad) mov cwtl ja lret push fstpt or enter pop add dec test sub mov test cld xchg pop loopne iret std sub mov jae inc outsl (bad) clc mov loope add (bad) ret pop xor cld mov (bad) (bad) push sbb outsl fcmovb aas repz xchg inc incl xchg call jl mov (bad) jmp jmp std or mov add lret add xor (bad) ljmp rorb cmpsb fsub (bad) (bad) cld pop repnz jg fistpll jmp decb cmp (bad) (bad) lcall js sbb in clc iret les mov ja sub std cmp mov clc rorl ds inc (bad) clc mov lahf (bad) in loope loop (bad) in sti aad inc pop jnp xlat dec cld out aaa clc pushl (bad) loope addr16 jge mov ljmp lock popl lret cli sbb sub (bad) mov (bad) (bad) (bad) fistpll jge dec sahf cli sar pop mov clc shr xor clc das insl lahf jl sti (bad) (bad) cli pop sti pop aas incl cld fistl ja std sti mov popf mov cmp cmovg add (bad) (bad) jmp jmp sub (bad) jg out pop or inc dec add xor loope mov loop icebp outsl aad sti dec test in or fmuls add push push adc mov (bad) jg inc addr16 pushf dec pop sub cs repnz rorl movsl and (bad) (bad) (bad) push pop push js rorl mov js loop jp shrl mov xchg shll mov cmc arpl push lahf test pusha sbb and pushf add mov (bad) (bad) jnp imul imul pop fs or ljmp jle (bad) gs ret hlt jecxz lret int out (bad) (bad) jmp (bad) cmpsl faddl push push mov xor cmp rclb pop das pop xor lock cwtl mov outsb (bad) xlat push in xor inc inc aam add mov test outsl sub pop inc cmp les int mov cmc sub mov (bad) out mov (bad) (bad) mov lea xchg mov mov (bad) repnz add jle add test testl sbb es jle mov data16 push lds (bad) sub jns jns and aam ja lret xor insb fsubp sub (bad) (bad) (bad) fisttp sub popa cwtl dec mov or out test dec xchg or push int3 pop mov test xchg call jne pop cld (bad) fcomip and mov lahf mov (bad) jno imul call (bad) pop xchg (bad) mov out data16 leave mov (bad) pushl dec aaa outsb sub pop push pop pop push push push iret cmc out inc flds pop loop fimull (bad) mov cwtl loope int sub mov adc jge jle (bad) jle loopne xchg pop outsb ja sub or decl mov adcl xor das push decl aad xchg fidivr pop xor xor sbbb xorl adc stc mov popa mov cmp mov push (bad) ljmp ds faddl lret int bound das mov pop pop or jp movsl fadd std movsl mov incl adc adc push add stos fwait adcb jns loop std mov xchg mov jge fwait ljmp or aad mov add fnop mov sub or xor fistl sbb incl or jo sub inc sub and cs incb inc adc enter and xor xor pop lods sub and mov cld or cli nop outsl mov mov xchg shrl and out (bad) (bad) (bad) call mov jae addb fiaddl mov lods (bad) jne add add popa push (bad) lcall sub call fwait pop lds shlb push push jp pop or arpl or push scas outsl sbb pop pusha xlat popl inc sub inc push (bad) jmp popa lcall jecxz pop je test shr mov lcall inc (bad) (bad) (bad) jmp orl pop pusha xchg or jp push ret jle lock (bad) cmc cmp mov in popf cmp and addr16 push jns ficom cmp insb nop ret xor lea add dec push jecxz mov push or (bad) (bad) mov lds mov xor pop cmpsb mov cmc xchg decl dec cli popa jg jle or je lods (bad) call push sarb movsl stc hlt stos pop sbb dec mov jp add std fwait daa or aas je mov pop xchg (bad) (bad) (bad) cld add sbb fcompl outsb sbb sarl outsl bound (bad) dec push shlb in sub (bad) mov inc stc stc pause insl repz cmp (bad) ljmp or cld jecxz repnz jl stc mov xchg pop (bad) jno es cld das jl mov xchg rep and cmc outsl jne sbb (bad) lcall (bad) (bad) xor clc fcomi inc ret cwtl idivb cmp xchg cmp mov (bad) ljmp mov dec out xchg rorb push mov mov (bad) imul and pop pop sub push xchg push andl push cli (bad) push out sub adc and cwtl stc or pop xchg or aaa (bad) ljmp ljmp lret aaa outsl xchg mov mov sbb pushl sub jge pushf xor or insl hlt adc cmp push cmp inc (bad) jg (bad) cli sub cmp (bad) xor minps sbb sbb jbe popa sub cmc (bad) (bad) incl out dec push ret int3 popa push pop in lret into (bad) cwtl mov fwait mov sbb icebp ljmp outsb cmpsl fisubr xor out movsl inc loop stos add lock clc lcall inc ss mov fisttpl and icebp jmp cmp aad scas mov xchg or decl or pop dec push fcomps adc jo call ljmp adc dec in pop adc pushf jl lcall (bad) decl adc pop add push add or dec movsl inc jl (bad) (bad) (bad) ljmp mov inc aam bound push rcr mov or daa (bad) idivb (bad) jmp (bad) out popa pop mov push and pop pop xchg ljmp in mov cmp les cmp push dec add adc dec addr16 (bad) (bad) jg push mov stos int mov mov mov (bad) add test std outsl (bad) decl sti mov sbb add (bad) (bad) out pusha and (bad) mov repz dec data16 mov call aad sub loop lds cwtl sub xor lcall pop bswap xlat and sbb inc movb pop rol xchg cld (bad) (bad) cmp push pop sbb (bad) sarb mov push (bad) push je cltd mov pusha pop imul pop pusha inc xor lock mov xchg je shrb (bad) pop (bad) fucomip inc cmp imul xchg pop addr16 or popa imul fistpll or rolb pop movsb jb jbe test xor rorb std dec jns lds rcll jne decl (bad) (bad) (bad) jg lret lret out adc mov and repnz adc aaa (bad) mov mov cmp (bad) lods xchg jmp in jge ljmp inc (bad) push decl adc push nop clc lret jle mov dec ret push dec inc jg push inc mov rcll stos xor arpl ds xchg repnz push out gs out mov lcall cmpsl popf adc aas xchg clc sub mov repz inc leave into sub xor call mov test out xchg (bad) cmp das stos mov lret ss push lret call jne (bad) sti aas fidivrl shll outsl icebp (bad) incl repz add ja mov mov push xchg jmp lcall std fistpll pop xchg call leave inc mov xchg fsqrt jno xchg cli jmp sub jecxz push out pop cld pop pop lcall (bad) int3 out mov lcall xor ljmp ljmp xchg mov call psrlq out mov outsl pop (bad) mov (bad) aad push dec xchg outsl jecxz loope nop popa dec repz cli (bad) jmp xor push lret sbb xchg aaa inc sub movsb movsl lea aaa jecxz ds push or dec aam jns cltd ljmp lock int jmp aad cs aaa rcll push jg (bad) (bad) aas mov (bad) xlat jo shl stos xor pop mov (bad) call cmc loopne cld mov or jle movsl pop (bad) lock (bad) (bad) (bad) jnp lret incl (bad) or (bad) mov shld jg add (bad) (bad) jmp xor cmpsb cmc sbbl jecxz cmpsb pop sub or jg cmpsb (bad) (bad) decl in dec nop stc ds xor jmp xlat sub jnp mov std mov sbb cmpsl sarl fldt jecxz pop mov lcall dec popf jne push add cmp pop add (bad) pushl loopne enter sbb push lahf add mov loop cld int3 adc or lcall mov sarl xchg gs or ficoml mov pop cmp (bad) rcr js scas dec jnp xor outsl cli pop (bad) das hlt jg mov sarl xchg ret outsl lahf mov push (bad) (bad) jmp add jne push movl xor (bad) fucomip lock notb jg xchg pop pop call cltd or push das arpl outsl mov xchg xor cmp in add jno fimull into sahf or pop jle (bad) fbld ja loopne mov push out call cmc das lock sti sar arpl stos lahf cmc or nop push dec pop mov jo sbb mov rcr leave sti (bad) jno lds lea cld push mov sub insl (bad) or (bad) lods ljmp fildl mov lret hlt mov lock test incl lcall lods or lock daa or test data16 jnp push call sahf and aad push sub (bad) (bad) lcall mov bound imul out cltd repz stos (bad) mov daa mov and cmp jno loop (bad) incl and adc out sahf pop aas notl xor (bad) mov xchg and rcrb repz cmp insl (bad) (bad) (bad) mov pop arpl cs lods pop pop (bad) cmp in sub clc sbb pop pop enter cld mov adc ss hlt std inc cvttps2pi rcll cltd add (bad) (bad) (bad) call ret mov cmp (bad) fdecstp fldz fsts jg mov mov lahf push in xchg mov int3 (bad) fs in (bad) fild pop test test out jae int3 pop push pop mulb hlt lcall std mov fdivr decl out aam adc call outsl sub push ds mov mov cli (bad) incl rcll addr16 xchg push adc jecxz or mov movsb cmpsb sbb ljmp mov fstpl dec xor incl (bad) fbstp imul pop icebp mov pop jl mov (bad) (bad) incl test or cmp mov xchg add pushf sub mov jg test aaa lret pop in pop pop lret fldcw adc (bad) (bad) call dec dec xor aam jne mov loop inc cmp mov rcll popf mov jg (bad) call in mov cmpsb imul inc cli mov (bad) movnti push hlt xchg popa add cld inc aad nop or (bad) jns cmp incl movsl mov push ret xchg pusha aas pushf test es (bad) lea push (bad) decb pop adc incl (bad) ret clc fldenv or mov add adc mov adc jle aam push pop inc jg es mov pop xlat pop jo out mov es add jle xchg loopne js decb mov icebp and hlt rcll xchg lods and cmp call imul sarl jle ret sub push fstpl pop aas xchg roll cli das hlt mov jp adc jbe sub cmp (bad) mov pop adc mov les aam push andl xchg cmc mov data16 push sub aam inc inc mov and (bad) (bad) (bad) (bad) mov cmc ja jnp pop xchg xor or rolb xor (bad) (bad) lcall testb std add mov sarl ljmp or pop incl pop mov out or cmp clc fistl (bad) lcall jge stos inc push push add loope js fimul loope subl movsb cmp arpl jmp or pop xchg sbb outsl cmp mov inc les xor adc bound mov movsl test lods (bad) test cmc xchg pop scas lret mov jg push sbb mull int3 xchg mov push ret push icebp out ror or sti aaa cli das into rcll cld mov push (bad) add lds (bad) mov ss sbb (bad) inc (bad) mov push cmp lret shlb hlt mov dec mov cmpsl push lods mov push sbb (bad) sub jge flds (bad) ljmp leave or mul test loope stc push sahf int lock xchg (bad) jg outsl cwtl (bad) div mov testb jecxz xchg adc pushl mov pop sub inc test jmp inc movsb sti ret cld insb jg aas lret aas loop (bad) fnop lahf repnz clc and or xlat push jo xchg (bad) ss sar or out (bad) je in sub std (bad) mov pop sbb or xchg sbb or pop adc push xchg (bad) (bad) ljmp fistpl push sub lods mov jle lods je pop rorl push and mov (bad) (bad) ljmp lcall xchg sub push cs lret push inc xchg push fcmovnbe jne,pt std (bad) jmp dec das (bad) out mov jnp add and sub mov lods (bad) cmp je imul test jl cmc (bad) ljmp sub lea pop jl test mov xchg loopne lock cmpsl mov jno mov jecxz js and pushl mov gs inc ret mov outsl and sub jbe adc dec outsl cld push ljmp lcall dec aas mov jmp xchg mov lods nop int push insb aaa mov mov test inc lods inc fmulp out idivb mov (bad) (bad) pushl (bad) mov adc popf stos add fisttpll push mov sarl xchg les inc pop mov popa push (bad) decl or mov adc mov (bad) dec and jmp jmp jae int3 xchg add add addr16 pop lods xchg mov loop call mov shr arpl pop jge xlat dec mov scas aad mov stos outsb fdivrp (bad) (bad) jg sbb mov xchg or inc adc ja dec inc push and inc push mov sbb test xor xchg jo mov aam adc (bad) jg adc ja mov sub aad cltd or fsubs xor in (bad) std lcall cld mov mov lods add scas (bad) sqrtps cmp hlt or faddl int3 mov cmpsb imul mov call je aaa dec roll js in push pop insb push push sbb (bad) (bad) (bad) pushl mov test adc fwait mov mov push xchg mov and sar (bad) (bad) fstp push out popf mov ret mov loop bndldx dec jl loopne das (bad) (bad) (bad) decl sbb and les lods jno adc fadd loopne cmp inc jl (bad) (bad) jg popa jecxz (bad) lahf out jl (bad) jae mov cmp inc add sub or jmp mov fwait scas add lret mov cmp (bad) (bad) sub jo out push test mov in adc xchg sar (bad) (bad) pushl xchg mov lea out je js cmpsl decl jp (bad) call cmp cwtl mov pop (bad) mov scas sbb cli (bad) lods insb into dec lahf and mov or lahf jmp out and cmp xchg repz dec out cmpsl dec (bad) int3 bound or lods sbb cmp sbb jle (bad) (bad) pushl out stos xchg sti inc data16 icebp xor xchg or and ret push xchg aam (bad) pushl enter adc mov pop icebp mov sub add fisttp mulb lds xor cmp loop sbb pop push xchg push cld push fiadd lcall hlt (bad) mov and idivl lds dec xchg jg and pop loop pop fs in and push xchg xchg pop adc int xor jmp (bad) insb dec dec or mov cmpsl ror sub rorl mov mov imul jmp sbb movsl in lods xor and or inc mov jne loop leave jns popa aad xor push (bad) aaa push (bad) scas xchg pop out pop loope test nop sbb mov pushl mov clc add movsb insb pop mov rcr loop sbbl mov jne rorl mov mov cs pop dec (bad) (bad) (bad) jg sbb cmc pop call sub push pop (bad) dec adc sub xor (bad) (bad) sbb subl mov aam cwtl imul (bad) (bad) mov dec hlt jne js loope cmp add notb push inc lock mov mov add es jmp lods (bad) push lret jle push cmpsl mov push mov mov out xchg adc cmpsl stos cmp (bad) jg lods mov cmp pop imul pop mov in push lods outsb test pop fist push call imul (bad) jl rcll gs js sub les lahf sbb clc and adc ret mov sbb push sub inc ja fmuls hlt (bad) (bad) (bad) jmp in pop cmp (bad) mov xchg ja,pt unpcklps xor sbb repnz xchg jp das cmc aaa (bad) pop mov outsl add gs scas mov dec loopne add (bad) (bad) (bad) jns cmp jmp and movsb sub or or jg decl jp pop push sbb in push dec sbb xchg push mov insl and cmp cld (bad) (bad) call int pop mov xchg mulb mov mov cmp adc clc and mov mov sbb nop adc and jp and add (bad) (bad) incl testl (bad) shrl lds push repz jmp cli dec fadds outsl adc (bad) in (bad) test push xchg std mov (bad) (bad) call jecxz jbe fidiv in fsubrs dec loope dec arpl push (bad) (bad) jg sbb adc pop out cwtl mov inc xchg adc call xchg cmp mov and sub lds push clc mov inc pop jge pop out lahf fsub and push mov jnp xchg jl cmp lea mov cmp or xor (bad) jg pushl mov lock jb xchg dec and mov cmc (bad) (bad) pushl test outsl into push std daa in loope xchg adc xchg mov adc sub dec popf cs imul fadd std cmc or (bad) (bad) push push int adc push fiadd mov fldcw jl adc jae nop out jl adc fucomip (bad) decl xchg mov fidivrl jge movsb cli in sahf sbb out out into mov lock jmp pop fidivr arpl mov dec add int3 testb jg les arpl in les (bad) ljmp cmp jae inc (bad) dec (bad) int3 jmp push mov mov mov sti cmpsl pop mull shrl jno ljmp or sti test leave pop loopne jo mov sub sub pop (bad) loopne lock call repz aaa add in mov aas mov dec cs or test and (bad) mov inc mov mov adc lea mov ja mov jg pop cmp lock ljmp imul mov (bad) sahf push inc xor mov inc aas clc add jo aas loopne inc aam ljmp or lea mov xchg repz or mov xor sbb pushf (bad) (bad) (bad) mov repz out jge mov pop adc add and insl (bad) call notl sub xchg rolb pushl pop fild push xor lds add (bad) call icebp rcrl out pop xlat (bad) outsl mov dec push movl (bad) ljmp in jo fbstp cmp mov repnz inc ret xor (bad) (bad) (bad) call mov sbb xor ljmp mov jo mov outsl cmp cmp (bad) lret insl ficom push out jmp add (bad) std notb inc pop push pop test sbb (bad) (bad) (bad) (bad) mov jnp pop adc pop je popa mov imull arpl (bad) mov mov lods dec cld (bad) incl jne jle push jp movsl les ja or test (bad) (bad) (bad) (bad) mov xchg js shrb mov lods subb mov mov mov (bad) pushl cwtl out lock add dec dec sub mov (bad) pop aad dec pop jb arpl sbb decl ret data16 ror ret (bad) fsub push jbe jle jbe cmpsb mov jo lock jo (bad) (bad) ffreep out inc lods push fwait mov jle add pop mov (bad) jmp inc in adc xchg insl mov mov dec mov imul outsl cmc pop clc lret jecxz lods jle das daa or call sbb push push mov ljmp (bad) pop movsb mov xor push hlt mov cs aam xor cmp push leave je inc xor cmpsb jno imul mov call lahf xor jb out xchg cmpsb jae out insl mov enter fucomip (bad) decl into push xchg (bad) je push sbb (bad) and (bad) mov jne fwait xorl push sub push gs (bad) (bad) jmp dec sahf dec xchg cmp cmpsb cld adc pop int inc add and cwtl das adc jb mov mov dec (bad) call cli stc das dec ror ljmpw or jmp pushf (bad) (bad) (bad) pushl mov jge cmp xor mov ds cmpsb cwtl cli jge fnsave pop outsl adc cmpsb cmp daa repz addr16 incl ret jbe or cs cmovae ret cmp (bad) std repnz pop fwait dec rolb ljmp lret dec int cltd dec pop cli mov xor pop xchg sahf fs nop std and icebp pusha mov insb leave iret jmp data16 jle (bad) jnp enter mov cli ret test out cmp sbb xor je xor sahf leave inc movsb ljmp and cwtl fcomps lret fmuls push pop cli (bad) fcmove dec cmp inc in cmp daa push (bad) call pop test mov lods add mov aas bnd out ja (bad) pushl add jae sub cmp gs aam sbb (bad) (bad) lcall mov aam cmp ret jecxz push (bad) adc (bad) (bad) mov pop add fistp in mov mov js xor call pop fxsave ss jl push shlb push pop xchg jecxz incl outsb mov inc xchg icebp xor mov jecxz pushf fiaddl sbb sbb movsl dec stos popf loop pop xor sub or (bad) pop cli decl and pop xlat cmc leave mov pop shrb data16 jg mov stos push lret lods cs (bad) rclb test (bad) ljmp cmp subl test loop mov xor outsl cmc jmp test lods push imul cmp push enter lcall mov pop orb inc shrl mov dec shll ljmp cmc (bad) xor pop insb sub ficom push adc (bad) ljmp testb jnp repnz cmpsl jae pusha std jmp jmp pop mov test or cli ljmp hlt bound jne lcall cmpsb mov (bad) insb lock sbb jl cmp pop sub decl push push jp mov jbe scas or out or or or pop test add outsb push dec dec pop pop dec and decl insl dec mov pop sbb iret xchg adc (bad) lcall (bad) into xchg sub mov or into adc mov pop mov das icebp mov test xor aas xchg jmp dec jge push add aas push (bad) ss ljmp push xor loop mov insl push in lcall push xlat pop sub (bad) decl fwait mov (bad) mov xorl pop xchg cmpsb cli outsl hlt jg ret dec jmp mov fcoms xor (bad) (bad) mov pcmpeqw fistpll add mov jle sti jge iret ja aaa (bad) dec stc cmp daa cmp jnp mov fmul push and cmp shlb ljmp movsl das sahf mov add lods (bad) push mov lret mov dec lea lds loope mov (bad) mov and icebp loop mov into lods lock icebp sbb (bad) xorl nop loop scas int and fisttpl push notl fs inc inc insb fstps pop lcall call clc xchg sbb movsb popf insl pop icebp frstor lds sub jns fidiv mov (bad) inc imul ret pop dec mov push gs dec xchg inc and xor in jp xor lock rcpps incl jne or or fmull ja push les addl call jmp mov mov pop fdivrs mov push mov adc test xchg ret (bad) repnz pop enter pop imul aas mov in (bad) (bad) call hlt popa xchg jne push push stos xchg jbe rcll pop lcall gs cltd (bad) (bad) (bad) incl lcall in xor in repnz adc fmull xor mov sti (bad) decl mov nop dec cltd (bad) scas push ror in aaa pop sub (bad) (bad) lods ret setne addr16 neg out std mov mov jmp pushf xor into lret mov addr16 mov xor js xor dec mov pop incl lcall aad pop enter push repnz push enter popf adc pop and mov cmp mov xor xorl insl mov lcall or test pop push xchg into lcall push inc call pushl (bad) incl sub into pusha (bad) adc mov lret pop je mov insl test pop pop bound sub addb int cmc inc (bad) (bad) (bad) call pushf or dec add adc outsl and lret jae and out mov fdiv jb mov (bad) in jmp jne push (bad) pop pop and push pop xor sub data16 adc (bad) (bad) (bad) jmp sbbl mov cmpsl leave pusha lahf in cmp push ss insl in mov cmpsl lea lods mov (bad) inc faddp nop lea je and std push pop rcrl arpl fwait pop add gs (bad) inc sbb aaa mov sar sbb mov outsl and pop jp (bad) out cmpb pop add add push in notb sbb (bad) mov mov push cmc pop lea pushl xor ret adc (bad) ljmp mov jne push cmc or hlt push sub sbb xchg sahf mov int inc icebp dec push add cwtl fbld xchg mov rorb cwtl jp sarl incl push test rcll sbb divb lods cmc add sarb sub cli cmp jg mov xchg bound adc (bad) mov jnp inc icebp xchg cmp sub stos scas enter push xchg cmc mov (bad) jmp clc or rclb cmp sub pop in dec push push outsl or cli rcr push inc ror notb rol jae jmp (bad) lcall mov mov repnz xchg (bad) sahf in push sub addr16 cmp push (bad) (bad) adc xchg dec inc aas sbb outsb hlt mov mov dec shrb std das cmc das add xor xchg rorl (bad) ljmp mov xchg insl shl and jg test loopne das std (bad) push addr16 jae add jg mov insb push sahf pop jbe test or (bad) ljmp pop or ret addr16 xor mov loopne ret mov (bad) mov push bound mov lock daa fwait (bad) jg mov decl push jg sbb jg outsl jecxz (bad) cmc cmpsb insl into (bad) mov xor xchg pop scas pop dec pop cltd movsl dec mov (bad) (bad) mov insb (bad) enter fs sbb pop jne xor call je mov lods cmp pop ljmp mov mov psadbw jg jnp idivl adc jmp mov or sub (bad) (bad) lcall add xor mov (bad) cs dec cmp jge pop inc sbb cmpsl mov (bad) (bad) jmp and sub stos mov sub xchg (bad) out fwait (bad) jne clc (bad) (bad) fistpll idivb mov jno pop jecxz xlat fldenv jl cmpsl sbb inc sbb pushl inc lds in test in insb xor push stos insl lock (bad) dec lea in sti add ss push xchg dec sbb das mov mov decb add sbb out popf in test lea (bad) jl push push arpl jg (bad) or ljmp pop dec (bad) (bad) ljmp aam or and repnz pop or call add stos (bad) (bad) jg out sub lret jb dec cmpsb nop stos jle scas icebp sub sub cmp mov (bad) out adc jnp aaa clc decl (bad) jmp gs pop push negb (bad) hlt push add divl and mov (bad) repnz lock pushf pop jmp or push jmp loopne lcall out jno ds xchg frstor leave sub adcl loop (bad) (bad) pushl adc push pop mov movsl pop fildl pop sarl das stos lods inc stos jno loopne imul (bad) (bad) fcmovne scas dec (bad) dec xorl test mov cmp leave pop add add inc pop cld clc sbb sbb adc repnz mov mov sub (bad) (bad) (bad) jg xlat cmp int3 ficom lds xor and outsb pop lret mov pop (bad) (bad) jmp addr16 jp mov outsl fld dec adc dec sbb incl mov test ret xor shrb jns popf test sti (bad) (bad) (bad) (bad) jg (bad) test sahf neg addl out pop jno mov int3 xchg inc pop or insl xor cmp rclb mov sub out and jg hlt int lock repz xor gs incl js cld inc test push cld cmp sub sbb out pop lret mov mov incl xor xchg (bad) mov push scas (bad) aas sbb push (bad) (bad) mov ss mov addr16 mov and push cmc sub bound push aam in sahf ret (bad) jl cs adc (bad) in (bad) (bad) fnsave adc cltd cmp push adc dec mov ret mov dec cli decl sbb les cwtl popf xor (bad) test mov mov and dec (bad) mov push shlb js pop je popf cmp lcall push sar or jp in stos subb stos aaa clc pop ret dec gs andl jns gs mov in jg jg clc and mov inc bound sub (bad) (bad) ljmp adc pop enter (bad) sub gs xchg push mov int call test push and push xchg ficompl fisubrl outsl stc push adc cmp fwait xchg cmp inc mov aam pop mov call mov lret sub push xor sub dec fsubp (bad) (bad) out call mov jmp les push decl movsl mov mov andl xchg popa adc mov popf pop push inc ficoml in jecxz sbbb sub (bad) mov push sbb jl (bad) inc dec sub std mov sahf stos icebp add jg decl aaa fiadd lock jno xchg sahf imul mov cmc cld sbb and outsl fidivrl addr16 ds jge in das out std scas or adc or shlb inc cli dec stos ja xor (bad) (bad) (bad) fcompl insl out cmp pmaxsw dec pop icebp xchg outsb mov jbe addr16 cmp in and xchg cmp (bad) jmp push xor and xchg imul xchg xor add mov mov jecxz dec inc imul mov fisubrl mov jg repz pop jb sub shrl jb (bad) ljmp negb lret mov stos push repz cmp jg or xor hlt push lods fimull dec rorb mov mov fcoms out xor inc lcall data16 lahf dec cli xor sbb mov out lods inc lea pop jl hlt jns inc and mov adc jmp fsubrp mov cli outsl hlt addr16 (bad) jecxz adcl pop mov (bad) (bad) (bad) ljmp xor aas pop pop subl (bad) hlt cmp (bad) pop js pop jmp ss adc cmpsl mov xlat mov lret (bad) decl push sbb sbb in inc xchg mov test (bad) pop incl push add loope (bad) and pop pushf pop sti adc mov pop add inc xchg ja cld (bad) (bad) lcall xor mov repz fsubrs vpunpcklwd in push mov (bad) (bad) ljmp pop xor loope add in je arpl xor (bad) (bad) (bad) fidiv mov lods mov in or inc sbb xchg test out jecxz stos mov (bad) sub fwait dec xchg shlb jb sbb inc psrlw (bad) cmc (bad) (bad) incl mov inc or lea ret dec je leave inc aaa dec mov bound mov or outsb rcll mov (bad) push jmp xchg imul jmp cld mov add lcall mov cmp out jno mov decl mov and mov adc (bad) (bad) mov mov lret mov dec mov sub pop mov push inc push js push xchg roll into hlt fcomi out jno iret push mov dec out pop loop idivw dec ljmp ror jg cmp in dec (bad) (bad) (bad) dec iret sub sub dec int3 dec lods test dec xchg jns repnz push mov andl mov push cli cli dec pop in test add cmp inc adc sbb xor mov aas mov sub addr16 shrl or mov jg mov cs insl sub sub dec mov inc lods ljmp inc push inc inc leave mov pop mov jmp int sar decl add mov cmpsl fnstenv mov lea jmp adc dec add test rorl cli mov jge pushf clc mov pop adc jo sbb (bad) (bad) (bad) fbstp mov (bad) lea pop loop adc outsl je mov test cwtl dec lock (bad) ljmp sub int inc push mov test dec push lret pop jno aaa inc dec jno or je ljmp lods pop outsb iret subl sti push dec sbb outsl std (bad) mov dec imul in int pop (bad) fsubrl cmc into pop leave push (bad) (bad) ljmp stos mov jno outsb lahf and and cli mov and lcall push scas (bad) ja loop push clc flds inc dec mov inc xchg int3 inc dec xor jg dec mov je test push loope inc dec cltd jmp xchg nop mov ret cwtl loope xor (bad) (bad) call sbb jl lea mov mov mov inc loop adc jbe notl (bad) (bad) decl fsubrl pop add mov rcl outsb fildl popf or mov ss ljmp mov sahf insb xchg cmp mov xchg inc sub pop fidivl clc das sbb jns call int3 mov mov (bad) (bad) loope lock jecxz jl gs bound (bad) sub (bad) (bad) pushl mov dec adc (bad) dec mov xor jp (bad) (bad) mov lds inc and cmc push cs push push add mov dec idiv pop sub mov jo mul or dec loop roll pusha add add dec inc sbb rolb pop and ljmp jne fisttpll into aam mov imulb adc and xchg pop mov mov jo inc inc jle dec xor bound jae outsb divps or jg mov mov mov sub jns adc aaa (bad) and add mov incl adc pop fwait push fisttpl dec or ja paddw (bad) incl dec mov (bad) fcompl pop (bad) mov jne cmpsb mov sbb jne test (bad) ljmp leave leave cs lds pop js jno sub xor sbb addl lcall (bad) lock adc inc inc aam (bad) (bad) popf in (bad) (bad) (bad) jmp (bad) stc into cmp std repz and add mov add mov sub mov das pop lahf aaa mov (bad) jno sbb jns cmp (bad) (bad) jg mov pop cmpsl (bad) lds data16 xlat adc xchg in stc lret mov stos pop ficom jge fs mov insb aam in and mov dec mov add popa imul fwait scas dec loopne pop push and pop push cmp xor in push add (bad) bound mov (bad) (bad) (bad) dec int3 subl cmp push clc rolb push or fistpl bound fcmovbe fidivl gs pop fcmovb inc mov in and ljmp idiv mov sub repz xor cmpsl loope in (bad) lcall icebp cltd inc mov sbb push roll or outsl std movsl stos mov inc mov sub inc lret test ss pushf (bad) ljmp icebp fwait jle pop mov insl and sahf cld lods cmp fistp pop pop js incl jbe sub mov mov sub out dec hlt fiadd and decl pop jae jecxz cli or lcall std sbb popa jno or lcall push lods or sub leave (bad) (bad) jmp cmp mov cltd aaa rcrb ja push mov iret or (bad) decl inc lahf and xor mov fiadd push loop pop xor lahf push mov and mov inc push mov test push es xor mov imul jmp insl sbb xor in push rol push xor arpl push (bad) ljmp stos clc xchg sub outsl mov adc adc push cld add adc sub lds push dec add inc (bad) mov jmp xor outsb sub (bad) cmpl (bad) mov popa gs add ljmp hlt fwait xchg dec leave clc mov pop incl loope movsl rcrb clc lods or jmp xchg jge loop ja sbb cli push cmpsb stos inc mov and mov call adc xchg xor mov xchg pop es mov mov ret push out pushf enter (bad) aam (bad) ljmp add jae movsl int3 imulb push repnz sarl (bad) pop fbstp fdivr (bad) decl pushf jb push mov repnz jle lea add inc je and lret mov outsb mov jbe mov sbb xor jg (bad) in into (bad) js test and daa dec dec fimul and xchg jmp imul aas cltd fwait dec leave cmp xchg decb inc (bad) (bad) decl dec ret xchg fwait std dec fildl pusha fcmovnb xchg stc imul cli (bad) (bad) ljmp stos rcll std scas cmpsb imul ret ss insl (bad) lods xor mov pop or mov inc in and sarb loopne add add push ret mov stos sar (bad) ljmp jae adc inc aaa add sbbb inc or cmp or inc in dec or test insl movsl addr16 push (bad) jecxz loope sbb push sbb sub pushl cmp pop cmp rcll cmp imulb inc cli enter mov (bad) (bad) lcall je xchg jmp cmpsb sbbl or cmpl scas push mov xor pop xchg jmp clc mov mov mull push sbb and mov or (bad) (bad) incl jmp jmp pop jl dec dec mov sbb xchg pop jo fwait pop mov lcall jg sti addr16 shlb xchg dec pop sbb out lret mov (bad) (bad) pushl les sub mov dec mov mov and in hlt xchg inc or in outsl adc mov leave dec xchg push sub js movsl pop loopne mov popa lock dec sbb xchg rcrl mov (bad) (bad) ljmp out mov or sbb (bad) leave (bad) push mov jbe daa cmp je fstps xchg xchg call (bad) mov imul mov repnz jmp mov clc popl xor out div scas mov imulb mov pop (bad) incl pop adc jbe jecxz sub pop mov sub dec insl cmc movsb jp cmpsl push mov fildl std leave or jg adc dec sub (bad) (bad) shrl cmp dec int es pushl cmpsb lcall into test mov (bad) jne imul (bad) jg call movsb fimul xor jg push mov cmp xor mov cmp (bad) jg sbb sbb fsqrt inc in stc pop jo ljmp mov fidivr outsl dec pop fucom cs repnz aad (bad) jmp xchg test loopne mov sbb ret orl (bad) decl or xchg xchg outsb push loope sub gs je getsec pushf (bad) (bad) (bad) dec sub mov lock repz xchg fistpll (bad) jmp pop cld jp push push pop mov jle fstps jecxz jecxz decl fwait incl dec xor cmp push cmp bound push lret fwait notl (bad) pushf arpl pushf push fucomip jg inc je xchg je jo sub mov adc inc popl mov cmp cltd push sub push dec gs out jae or sub (bad) fstl and inc dec gs mov test sar inc mov cmp pop ja mov push clc pop scas cmpsb jp mov xchg loop mov les (bad) xchg xor ret scas pop (bad) (bad) pop cmp (bad) (bad) incl je inc cmp cmp xor sahf (bad) mov mov push imul stc ret mov xchg cmc push push sahf jl outsb or or cmc and jne (bad) mov mov imul cs jl mov dec push int3 mov xchg (bad) sbb out mov add pop or roll (bad) and jb movsb (bad) (bad) pop call std push cld adc aam fisubr jnp test std add or cmc (bad) (bad) call mov sub imulb popa stc sahf and scas (bad) (bad) das adc stos and arpl inc or sbb jle mov pop cwtd stos (bad) xor outsl lock lcall ret dec mov pop pusha jge xor sbb pop pop jno idiv pushl adc xchg jp in jmp in daa ss or mov sbb stos (bad) (bad) (bad) jmp xchg push imul dec (bad) out or adc add (bad) ret fimul in aad movsl mov mov xchg call leave movsb lret and xchg gs loope mov sbb (bad) call and pop orb je and sbb ficom jb (bad) (bad) lcall cmp in sbb sbb xchg pushf jle push xlat shrl dec (bad) (bad) (bad) (bad) call jg faddp sti jmp gs xorb mov aad add out in pop (bad) (bad) mov push dec xchg cmpsl mov sub sub cmp sub or ret fild push and mov mov popa in mov lock cli imul mov rolb add adc cwtl mov sahf cs dec cld and je rolb popa js mov cmp sub loope pushf lods ds xlat and cmp lock arpl sub mov lcall or in add ror nop and pushl (bad) push into mov in xor xor cli mov lea or xor or stos cmpsb mov xor bound push pop rorl fiaddl int3 push jg (bad) jmp pop mov push cmp insb pop push push xor (bad) decl mov mov test out push icebp mov pop arpl dec leave inc (bad) call pop mov sahf pop cmp xchg lcall rolb dec lret (bad) (bad) (bad) (bad) lcall lahf sbb push fsubs in add test aad cmp cmp jbe dec (bad) call push jns cmc test or insb and lret (bad) jecxz daa dec das pop cli mov lret add lcall daa lds leave push (bad) and adc mov cmp xor decl call or test test fsubrs pop es decl push sub lahf or push ret or mov incl adc clc mov fwait les bound dec or (bad) ja outsl call (bad) negl add push sbb and and cmpb insl jae outsl arpl and (bad) or jns aam add pop push and jae push jg fwait xor pop mov mov mov cs and inc jae or mov pop cmp popf pop pop sub xor mov sub cmp mov sub push push shrl dec out add (bad) sub je mov or dec out or cwtl sbb sub jns arpl inc inc nop add mov sub shll add push int3 mov andb mov orb inc mov mov xchg roll popa pop push shll add fs iret or add add push inc and lcall xchg lods cmp scas ja push sti sub shrl popw insl std or add int3 fs pop jae jno (bad) sbb mov jo fs addr16 out mov jp jbe outsb cmp xor mov inc test (bad) add mov fcmovu add mov push sub dec aad xor inc adc inc std push push inc push push mov xor xchg xor ja popa push stos dec cld (bad) out mov les (bad) hlt push xor or pop bound mov push movsb mov (bad) mov rclb mov jl jle sub mov sbb dec jno xlat inc cld lcall mov jmp (bad) mov hlt movl outsl lock fs (bad) std test add insb push arpl (bad) (bad) (bad) cmp or pop adc in pusha aad jno mov shrb add test pop xchg movsl cli test pusha cwtl mov (bad) leave mov lods jecxz fdivs aaa clc (bad) pushl fild or shrl cmp ficom mov push pushl cli jmp mov and mov cltd xchg (bad) shld sub mov (bad) incl (bad) and or adc stos sbb ljmp icebp mov inc fmul fildl mov adc out mov (bad) (bad) incl mov movsl in lahf xor mov js stc add mov push loope (bad) mov jg cmp fs add out push imul insb sbb xor (bad) call dec lahf cltd xchg push insb jnp add (bad) hlt or clc (bad) (bad) inc fnstenv adc mov mov bound ficoml gs sti pop popa mov into sub (bad) mov mov outsl call inc movsl fisttp xchg fsubs shll lods inc cld (bad) (bad) (bad) (bad) fldcw inc mov sarb add in add pop dec or cmp add (bad) incl daa adc or and test or mov popa into test cli decl stc ficomp leave fldcw and (bad) addr16 push (bad) pushl cmp lods insb mov mov mov decl xchg add inc aad scas ja popf adc push fdivl or incl (bad) incl insl or or push in or mov (bad) (bad) lcall (bad) shlb add inc push imul sub jno insb sbb push imul aam loopne mov ficoml int3 dec fnop (bad) lcall fistpll mov mov aad mov call xchg decl outsl mov ret push repnz shll mov (bad) decl std aas dec ss fidivl dec sbb scas (bad) dec add pusha jp inc ret out pusha fisttp fbld out mov jns imul jg (bad) (bad) jg shrb ss push xchg ja int3 add mov das es (bad) lcall cmp mov pop mov add mov cmpsl call ret (bad) mov sahf sub sub scas ficomp ret es pushf mov (bad) ljmp test ss jmp addr16 jb push add adc mov jnp sbb (bad) (bad) pushl xchg or out fdivrl fisttpl aam roll clc mov push adc ficompl int mov ja outsl ja mov out (bad) (bad) lcall jge push dec cmp pop or adc sahf gs scas (bad) clc sar imul pushl les loop mov push addl mov cmp cmpsl notl pusha sar lea dec fcmovnu dec push scas fcompl fcos (bad) (bad) jmp fild cmp aaa push scas mov fidivr mov jmp repnz lret cmc push and and sarb sub (bad) (bad) (bad) ficom fldenv jp,pn mov dec popa les sbb xchg sub aaa mov or sbb ret cld add sub adc and mov imul pop cli add mov xor or (bad) in pop xlat mov sub push cwtl pop mov inc or pop das inc inc ret pop push mov inc cld lahf xor mov imul adc das fwait mov add or or or inc sahf in ret mov adc cld xchg pop and sbb into sbb mov dec inc jnp jo test lds std and in mov jmp inc jno aad push add (bad) mov mov popl cmp cmpsb iret decl js inc outsl (bad) loopne jmp rolb push daa cmp (bad) (bad) decl inc mov popf sti jmp stos push inc mov repnz test push (bad) (bad) call stos clc scas adc (bad) inc jmp aam imul loope jp iret inc gs cmpsb (bad) (bad) (bad) decl cmpsb scas mov or addl cmpsl xchg cmp xor movsl add in std cmp sbb (bad) (bad) (bad) lcall lock mov popa sar mov fsubs stos xchg clc repz mov std (bad) (bad) fldl xchg and and add mov aas jno or mov pop fs lea (bad) (bad) push aas ret shrl mov icebp aas rorb and jg ljmp imul xor push (bad) jmp aad mov std std into popa test ja icebp aas das dec pop loope (bad) (bad) (bad) (bad) (bad) mov aas xchg les jne int mov addr16 push mov xchg aas and (bad) (bad) (bad) inc loop mov jp popa push pop sarl jl mov das lea mov (bad) (bad) pushl jmp jg sub jge mov inc rcr push arpl (bad) (bad) (bad) dec and call cmp jp and cmp mov cmp std xlat (bad) (bad) (bad) (bad) cmp mov sbb add movb aaa fldt cmp jno shlb (bad) ljmp nop pop cmp fisubl xor adc mov xchg sub adc scas icebp (bad) (bad) dec imul faddp jge call mov xchg cmp push andl dec notb mov lcall adc ficomp frstor inc inc lds xor add xor dec inc push xchg push and xchg push fs push leave push xor push inc push xchg mov xchg push push push push leave test outsb add sub rolb gs pushl je jb outsl jb dec gs jo gs insb insb outsl arpl stos ljmp jb add imul adc inc test jbe aaa ja outsb adc imul pop fnstenv inc inc inc imul push mov mov insl fist imul outsl insb jne gs mov pop or xchg jae aaa push and xor js pop inc jne jbe insl fsubs push push dec jo ret lcall inc adc or sub insl popa inc dec inc cmp jns jo mov arpl sub fcompl jns test or inc push jbe test push mov sti bound sbb scas imul dec adcl popa jg gs outsl jb pusha push or mov ja mov push adc pop inc loope jne and je dec jbe and push bound fs incb jo dec inc dec inc push xchg insb jnp or imul sbb outsb xchg imul push imul xchg adc inc sbb ficomp movsb xchg mov dec dec outsl jne outsl pcmpeqb pushf (bad) dec (bad) push inc loope push jns xor mov mov push rcr fwait add fbstp adc jae arpl int3 mov gs push popa xchg add fsubl inc sahf adc insb ret test mov out pop push je push outsb ja push jae inc sub lods addr16 pop mov popa dec fs xor sbb inc jae xchg xchg lock mov mov sbb imul pop pushf push ss gs adc mov adc mov inc js pop negb int inc push mov imul mov mov sub sbb (bad) shlb jbe pusha outsl jl in xor adcl mov fcoml push outsb adc push lahf sbb jle sbb loope fs loopne in push jnp or inc jmp cmp scas mov mov pop inc jns push imul or jb inc pop dec lods sbb push call insl aam je jnp sub mov push and sub rolb aaa mov adc shrl pusha or notl pop add or cmc mov push lret xchg mov ret fimul or iret popa inc sbb pop xchg or push cmp pop jmp mov leave insl push and dec bound shrb mov insb addl (bad) pop dec outsl ja jno jne jns push test push gs add xor dec outsl jns stos aas or adc hlt mov add aad hlt sbb and ret jp adcb dec imul dec inc dec lods xor xchg rorl (bad) pop and pop ret arpl insb xor shll push ret mov in add outsl or or insl outsb dec fsubrs mov sub aaa mov mov lcall scas push xchg xchg jne inc push cmp xchg rolb xchg jo cs xor iret inc aam lea adc xchg dec leave pop popa je adc test outsb push pop and pop les hlt cltd mov pusha inc and jb and or outsb add jbe inc leave pop sub ret xor xchg ficoml subb mov jb dec inc jl aam subl push push hlt adc jmp mov adc or adc jno imul dec inc fdivrs cli shrb xchg jns cmp or fimull adc hlt jae fcoml xor in jns test aam shrb clc mov and cmove dec gs lds mov sub adc push lods xchg xor ss ret lcall sbb data16 subl dec mov and jmp gs push insb jmp add push xor sbb sbb push leave loopne jae scas mov std testb outsb imul pop adc mov mov cmp mov push nop sbb out mov jmp mov (bad) lds mov cmp dec jo mov xor jo aaa sub sbbl mov test adc inc insb je inc inc xchg xchg mov dec push jae rcll pop jae pop or cmp fldenv cmp clc in mov inc divl mov outsl push pop gs imul lods imul or dec in in mov sub test (bad) data16 ret call push push test ffree lret and ret add shr add dec cmp mov cmp lods add push sarl jb add xor cs stos (bad) arpl mov icebp test addr16 jle arpl cmp iret insl mov pop mov xchg or mov adc pop pop jae push cmp fstps comisd lods and loope or cmc sbb inc inc push mov mov push sbbl je dec lahf bound in add jb popa jns sbb sbb dec cmp mov xchg sbb pop jo ret fcmovb jbe push insb inc mov mov adc dec pusha imul dec hlt mov dec pushf outsb cmp mov leave mov add inc je outsb mov jmp push (bad) add push push pop jae mov loopne das pop imul inc add jg loopne xchg add fldenv add add add mov orl xor adc or rcrb or add mov (bad) xor push add or cmp cmp sub push push fisttpl and cmpsl nop loopne add sbb adc cli cmpsl test push mov scas outsb popa pop fstpt xlat rolb add add add add sbb add push es sbb nop pop dec insb pop push daa rorb add jmp sub add aas and add add add add jmp sub inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa lea push cmp jne sub jmp 